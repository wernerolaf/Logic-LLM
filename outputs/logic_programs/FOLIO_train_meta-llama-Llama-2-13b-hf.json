[
  {
    "id": "FOLIO_train_0",
    "context": "All people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "###\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.\n###\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.\n###\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.\n###\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.\n###\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.\n###\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to c"
    ]
  },
  {
    "id": "FOLIO_train_1",
    "context": "All people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "###\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.\n###\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.\n###\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.\n###\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee."
    ]
  },
  {
    "id": "FOLIO_train_2",
    "context": "All people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "###\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.\n###\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.\n###\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.\n###\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.\n###\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.\n###\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about"
    ]
  },
  {
    "id": "FOLIO_train_3",
    "context": "All people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDependent(x) ::: x is a person dependent on caffeine.\nDrinks(x) ::: x regularly drinks coffee.\nJokes(x) ::: x jokes about being addicted to caffeine.\nUnaware(x) ::: x is unaware that caffeine is a drug.\nStudent(x) ::: x is a student.\nPremises:\n∀x (Drinks(x) → Dependent(x)) ::: All people who regularly drink coffee are dependent on caffeine.\n∀x (Drinks(x) ⊕ Jokes(x)) ::: People either regularly drink coffee or joke about being addicted to caffeine.\n∀x (Jokes(x) → ¬Unaware(x)) ::: No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. \n(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina)) ::: Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. \n¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina)) ::: If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nConclusion:\nJokes(rina) ⊕ Unaware(rina) ::: Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\n((Jokes(rina) ∧ Unaware(rina)) ⊕ ¬(Jokes(rina) ∨ Unaware(rina))) → (Jokes(rina) ∧ Drinks(rina)) ::: If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.\n###\nPredicates:\nDependent(x) ::: x is a person dependent on caffeine.\nDrinks(x) ::: x regularly drinks coffee.\nJokes(x) ::: x jokes about being addicted to caffeine.\nUnaware(x) ::: x is unaware that caffeine is a drug.\nStudent(x) ::: x is a student.\nPremises:\n∀x (Drinks(x) → Dependent(x)) ::: All people who regularly drink coffee are dependent on caffeine.\n∀x (Drinks(x) ⊕ Jokes(x)) ::: People either regularly drink coffee or joke about being addicted to caffeine.\n∀x (Jokes(x) → ¬Unaware(x)) ::: No one who jokes about being add"
    ]
  },
  {
    "id": "FOLIO_train_4",
    "context": "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music. Any choral conductor is a musician. Some musicians love music. Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Miroslav Venhoda loved music.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Our solution:\nWe can use the following first-order logic formular to represent the problem:\n(∃x (Czech(x) ∧ ChoralConductor(x) ∧ Specialize(x, renaissance) ∧ Specialize(x, baroque))) ∧ (∀x (ChoralConductor(x) → Musician(x))) ∧ (∃x (Musician(x) ∧ Love(x, music))) ∧ (Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946))\n\nWe can use the following first-order logic formular to represent the question:\n(∃x (Czech(x) ∧ Author(x, y) ∧ Book(y) ∧ Publish(y, year1946))) ∧ (¬∃x (ChoralConductor(x) ∧ Specialize(x, renaissance)))\n\nWe can use the following first-order logic formular to represent the conclusion:\n(∃x (Czech(x) ∧ Author(x, y) ∧ Book(y) ∧ Publish(y, year1946))) ∧ (¬∃x (ChoralConductor(x) ∧ Specialize(x, renaissance)))\n\nWe can use the following first-order logic formular to represent the premises:\n(∃x (Czech(x) ∧ ChoralConductor(x) ∧ Specialize(x, renaissance) ∧ Specialize(x, baroque))) ∧ (∀x (ChoralConductor(x) → Musician(x))) ∧ (∃x (Musician(x) ∧ Love(x, music))) ∧ (Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946))\n\nWe can use the following first-order logic formular to represent the conclusion:\n(∃x (Czech(x) ∧ Author(x, y) ∧ Book(y) ∧ Publish(y, year1946))) ∧ (¬∃x (ChoralConductor(x) ∧ Specialize(x, renaissance)))\n\nWe can use the following first-order logic formular to represent the premises:\n(∃x (Czech(x) ∧ ChoralConductor(x) ∧ Specialize(x, renaissance) ∧ Specialize(x, baroque))) ∧ (∀x (ChoralConductor(x) → Musician(x))) ∧ (∃x (Musician(x) ∧ Love(x, music))) ∧ (Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946))\n\nWe can use the following first-order logic formular to represent the conclusion:\n(∃x (Czech(x) ∧ Author(x, y) ∧ Book(y) ∧ Publish(y, year1946))) ∧ (¬∃x (ChoralConductor(x) ∧ Specialize(x, renaissance)))\n\nWe can use the following first-order logic formular to represent the premises:\n(∃x (Czech(x) ∧ ChoralConductor(x) ∧ Specialize(x, renaissance) ∧ Specialize(x, baroque))) ∧ (∀x (ChoralConductor(x) → Musician(x))) ∧ (∃x (Musician(x) ∧ Love(x, music))) ∧ (Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946))\n\nWe can use the following first-order logic formular to represent the conclusion:\n(∃x (Czech(x) ∧ Author(x, y) ∧ Book(y) ∧ Publish(y, year1946))) ∧ (¬∃x (ChoralConductor"
    ]
  },
  {
    "id": "FOLIO_train_5",
    "context": "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music. Any choral conductor is a musician. Some musicians love music. Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A Czech person wrote a book in 1946.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Our solution:\nProblem:\nMiroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music. Any choral conductor is a musician. Some musicians love music. Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? A Czech person wrote a book in 1946.\n###\nPredicates:\nCzech(x) ::: x is a Czech person.\nChoralConductor(x) ::: x is a choral conductor.\nMusician(x) ::: x is a musician.\nLove(x, y) ::: x loves y.\nAuthor(x, y) ::: x is the author of y.\nBook(x) ::: x is a book.\nPublish(x, y) ::: x is published in year y.\nSpecialize(x, y) ::: x specializes in y.\nPremises:\nCzech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque) ::: Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.\n∀x (ChoralConductor(x) → Musician(x)) ::: Any choral conductor is a musician.\n∃x (Musician(x) ∧ Love(x, music)) ::: Some musicians love music.\nBook(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946) ::: Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant.\nConclusion:\nLove(miroslav, music) ::: Miroslav Venhoda loved music.\n∃y ∃x (Czech(x) ∧ Author(x, y) ∧ Book(y) ∧ Publish(y, year1946)) ::: A Czech person wrote a book in 1946.\n------\nProblem:\nMiroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music. Any choral conductor is a musician. Some musicians love music. Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? A Czech person wrote a book in 1946.\n###\nProblem:\nMiroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music. Any choral conductor is a musician. Some musicians love music. Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? A Czech person wrote a book in 1946.\n###\nProblem:\nMiroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music. Any choral conductor is a musician. Some musicians love music. Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? A Czech person wrote a book in 1946.\n###\nProblem:\nMiroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music. Any choral conductor is a musician. Some musicians love music. Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? A Czech person wrote a book in 1946.\n###\nProblem:\nMiroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music. Any choral conductor is"
    ]
  },
  {
    "id": "FOLIO_train_6",
    "context": "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music. Any choral conductor is a musician. Some musicians love music. Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? No choral conductor specialized in the performance of Renaissance.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Our solution:\nProblem:\nMiroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music. Any choral conductor is a musician. Some musicians love music. Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? No choral conductor specialized in the performance of Renaissance.\n###\nPredicates:\nCzech(x) ::: x is a Czech person.\nChoralConductor(x) ::: x is a choral conductor.\nMusician(x) ::: x is a musician.\nLove(x, y) ::: x loves y.\nAuthor(x, y) ::: x is the author of y.\nBook(x) ::: x is a book.\nPublish(x, y) ::: x is published in year y.\nSpecialize(x, y) ::: x specializes in y.\nPremises:\nCzech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque) ::: Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.\n∀x (ChoralConductor(x) → Musician(x)) ::: Any choral conductor is a musician.\n∃x (Musician(x) ∧ Love(x, music)) ::: Some musicians love music.\nBook(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946) ::: Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant.\nConclusion:\nLove(miroslav, music) ::: Miroslav Venhoda loved music.\n∃y ∃x (Czech(x) ∧ Author(x, y) ∧ Book(y) ∧ Publish(y, year1946)) ::: A Czech person wrote a book in 1946.\n¬∃x (ChoralConductor(x) ∧ Specialize(x, renaissance)) ::: No choral conductor specialized in the performance of Renaissance.\n------\nProblem:\nMiroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music. Any choral conductor is a musician. Some musicians love music. Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? No choral conductor specialized in the performance of Renaissance.\n###\nProblem:\nMiroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music. Any choral conductor is a musician. Some musicians love music. Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? No choral conductor specialized in the performance of Renaissance.\n###\nProblem:\nMiroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music. Any choral conductor is a musician. Some musicians love music. Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? No choral conductor specialized in the performance of Renaissance.\n###\nProblem:\nMiroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music. Any choral conductor is a musician. Some musicians love music. Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? No choral conductor specialized in the performance of Renaissance."
    ]
  },
  {
    "id": "FOLIO_train_7",
    "context": "All eels are fish. No fish are plants. A thing is either a plant or animal. Nothing that breathes is paper. All animals breathe. If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Sea eel is an eel.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nEel(x) ::: x is an eel.\nFish(x) ::: x is a fish.\nPlant(x) ::: x is a plant.\nAnimal(x) ::: x is an animal.\nBreathe(x) ::: x breathes.\nPaper(x) ::: x is paper.\nSeaEel(x) ::: x is a sea eel.\nPremises:\nEel(x) ⇒ Fish(x) ::: All eels are fish.\nFish(x) ⊕ Plant(x) ::: No fish are plants.\nThing(x) ⊕ Animal(x) ::: A thing is either a plant or animal.\nBreathe(x) ⊕ Paper(x) ::: Nothing that breathes is paper.\nSeaEel(x) ⊕ Animal(x) ::: If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal.\nConclusion:\nEel(seaEel) ::: Sea eel is an eel.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\n###\nPredicates:\nDependent(x) ::: x is a person dependent on caffeine.\nDrinks(x) ::: x regularly drinks coffee.\nJokes(x) ::: x jokes about being addicted to caffeine.\nUnaware(x) ::: x is unaware that caffeine is a drug.\nStudent(x) ::: x is a student.\nPremises:\n∀x (Drinks(x) → Dependent(x)) ::: All people who regularly drink coffee are dependent on caffeine.\n∀x (Drinks(x) ⊕ Jokes(x)) ::: People either regularly drink coffee or joke about being addicted to caffeine.\n∀x (Jokes(x) → ¬Unaware(x)) ::: No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. \n(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina)) ::: Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. \n¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina)) ::: If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nConclusion:\nJokes(rina) ⊕ Unaware(rina) ::: Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\n((Jokes(rina) ∧ Unaware(rina)) ⊕ ¬(Jokes(rina) ∨ Unaware(rina))) → (Jokes(rina) ∧ Drinks(rina)) ::: If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caff"
    ]
  },
  {
    "id": "FOLIO_train_8",
    "context": "All eels are fish. No fish are plants. A thing is either a plant or animal. Nothing that breathes is paper. All animals breathe. If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Sea eel is a paper.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nEel(x) ::: x is an eel.\nFish(x) ::: x is a fish.\nPlant(x) ::: x is a plant.\nAnimal(x) ::: x is an animal.\nBreathe(x) ::: x breathes.\nPaper(x) ::: x is paper.\nSeaEel(x) ::: x is a sea eel.\nPremises:\nEel(x) ⇒ Fish(x) ::: All eels are fish.\nFish(x) ⊕ Plant(x) ::: No fish are plants.\nThing(x) ⊕ Animal(x) ::: A thing is either a plant or animal.\nBreathe(x) ⊕ Paper(x) ::: Nothing that breathes is paper.\nSeaEel(x) ⊕ Animal(x) ::: All animals breathe.\nConclusion:\nPaper(x) ::: x is paper.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\n###\nPredicates:\nDependent(x) ::: x is a person dependent on caffeine.\nDrinks(x) ::: x regularly drinks coffee.\nJokes(x) ::: x jokes about being addicted to caffeine.\nUnaware(x) ::: x is unaware that caffeine is a drug.\nStudent(x) ::: x is a student.\nPremises:\n∀x (Drinks(x) → Dependent(x)) ::: All people who regularly drink coffee are dependent on caffeine.\n∀x (Drinks(x) ⊕ Jokes(x)) ::: People either regularly drink coffee or joke about being addicted to caffeine.\n∀x (Jokes(x) → ¬Unaware(x)) ::: No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. \n(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina)) ::: Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. \n¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina)) ::: If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nConclusion:\nJokes(rina) ⊕ Unaware(rina) ::: Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\n((Jokes(rina) ∧ Unaware(rina)) ⊕ ¬(Jokes(rina) ∨ Unaware(rina))) → (Jokes(rina) ∧ Drinks(rina)) ::: If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.\n------\nProblem:\nAll eels are fish. No fish are plants. A thing is"
    ]
  },
  {
    "id": "FOLIO_train_9",
    "context": "All eels are fish. No fish are plants. A thing is either a plant or animal. Nothing that breathes is paper. All animals breathe. If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Sea eel breathes or is a paper.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nEel(x) ::: x is an eel.\nFish(x) ::: x is a fish.\nPlant(x) ::: x is a plant.\nAnimal(x) ::: x is an animal.\nBreathe(x) ::: x breathes.\nPaper(x) ::: x is a paper.\nSeaEel(x) ::: x is a sea eel.\nPremises:\nEel(x) ⇒ Fish(x) ::: All eels are fish.\nFish(x) ⊕ Plant(x) ::: No fish are plants.\nThing(x) ⊕ Animal(x) ::: A thing is either a plant or animal.\nBreathe(x) ⊕ Paper(x) ::: Nothing that breathes is paper.\nSeaEel(x) ⊕ Animal(x) ::: All animals breathe.\nConclusion:\nBreathe(x) ⊕ Paper(x) ::: Sea eel breathes or is a paper.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\n###\nPredicates:\nDependent(x) ::: x is a person dependent on caffeine.\nDrinks(x) ::: x regularly drinks coffee.\nJokes(x) ::: x jokes about being addicted to caffeine.\nUnaware(x) ::: x is unaware that caffeine is a drug.\nStudent(x) ::: x is a student.\nPremises:\n∀x (Drinks(x) → Dependent(x)) ::: All people who regularly drink coffee are dependent on caffeine.\n∀x (Drinks(x) ⊕ Jokes(x)) ::: People either regularly drink coffee or joke about being addicted to caffeine.\n∀x (Jokes(x) → ¬Unaware(x)) ::: No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. \n(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina)) ::: Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. \n¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina)) ::: If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nConclusion:\nJokes(rina) ⊕ Unaware(rina) ::: Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\n((Jokes(rina) ∧ Unaware(rina)) ⊕ ¬(Jokes(rina) ∨ Unaware(rina))) → (Jokes(rina) ∧ Drinks(rina)) ::: If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.\n------\nProblem:"
    ]
  },
  {
    "id": "FOLIO_train_10",
    "context": "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places. The Blake McFall Company Building was added to the National Register of Historic Places in 1990. The Emmet Building is a five-story building in Portland, Oregon. The Emmet Building was built in 1915. The Emmet Building is another name for the Blake McFall Company Building. John works at the Emmet Building.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A five-story building is built in 1915.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nNationalRegisterOfHistoricPlaces(x) ::: x is listed on the National Register of Historic Places.\nAdd(x, y) ::: x is added to y.\nBlakeMcFallCompanyBuilding(x) ::: x is the Blake McFall Company Building.\nEmmetBuilding(x) ::: x is the Emmet Building.\nFiveStoryBuilding(x) ::: x is a five-story building.\nBuilt(x, y) ::: x is built in year y.\nWork(x, y) ::: x works at y.\nPremises:\nNationalRegisterOfHistoricPlaces(blakeMcFallCompanyBuilding) ∧ Add(blakeMcFallCompanyBuilding, year1990) ::: The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places.\nEmmetBuilding(blakeMcFallCompanyBuilding) ∧ Built(EmmetBuilding, year1915) ::: The Emmet Building is a five-story building in Portland, Oregon. The Emmet Building was built in 1915.\nWork(john, EmmetBuilding) ::: John works at the Emmet Building.\nConclusion:\nBuilt(EmmetBuilding, year1915) ::: A five-story building is built in 1915.\n------"
    ]
  },
  {
    "id": "FOLIO_train_11",
    "context": "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places. The Blake McFall Company Building was added to the National Register of Historic Places in 1990. The Emmet Building is a five-story building in Portland, Oregon. The Emmet Building was built in 1915. The Emmet Building is another name for the Blake McFall Company Building. John works at the Emmet Building.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Blake McFall Company Building is located in Portland, Oregon.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLocated(x, y) ::: x is located in y.\nNationalRegisterOfHistoricPlaces(x) ::: x is listed on the National Register of Historic Places.\nAdded(x, y) ::: x is added to y in year y.\nFiveStory(x) ::: x is a five-story building.\nBuilt(x, y) ::: x is built in year y.\nAnotherName(x, y) ::: x is another name for y.\nWorks(x, y) ::: x works at y.\nPremises:\nLocated(blakeMcFallCompanyBuilding, portland) ∧ NationalRegisterOfHistoricPlaces(blakeMcFallCompanyBuilding) ∧ Added(blakeMcFallCompanyBuilding, year1990) ::: The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places. The Blake McFall Company Building was added to the National Register of Historic Places in 1990.\nLocated(emmetBuilding, portland) ∧ FiveStory(emmetBuilding) ∧ Built(emmetBuilding, year1915) ::: The Emmet Building is a five-story building in Portland, Oregon. The Emmet Building was built in 1915.\nAnotherName(emmetBuilding, blakeMcFallCompanyBuild"
    ]
  },
  {
    "id": "FOLIO_train_12",
    "context": "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places. The Blake McFall Company Building was added to the National Register of Historic Places in 1990. The Emmet Building is a five-story building in Portland, Oregon. The Emmet Building was built in 1915. The Emmet Building is another name for the Blake McFall Company Building. John works at the Emmet Building.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? John started his current job in 1990.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nNationalRegisterOfHistoricPlaces(x) ::: x is a building listed on the National Register of Historic Places.\nAdd(x, y) ::: x is added to y.\nBlakeMcFallCompanyBuilding(x) ::: x is the Blake McFall Company Building.\nEmmetBuilding(x) ::: x is the Emmet Building.\nFiveStoryBuilding(x) ::: x is a five-story building.\nBuilt(x, y) ::: x is built in year y.\nCurrentJob(x) ::: x is John's current job.\nPremises:\nNationalRegisterOfHistoricPlaces(blakeMcFallCompanyBuilding) ∧ Add(blakeMcFallCompanyBuilding, year1990) ::: The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places. The Blake McFall Company Building was added to the National Register of Historic Places in 1990.\nEmmetBuilding(emmetBuilding) ∧ FiveStoryBuilding(emmetBuilding) ∧ Built(emmetBuilding, year1915) ::: The Emmet Building is a five-story building in Portland, Oregon. The Emmet Building was built in 1915.\nEmmetBuilding(blakeMcFallCompanyBuilding) ::: The Emmet Building is"
    ]
  },
  {
    "id": "FOLIO_train_13",
    "context": "William Dickinson was a British politician who sat in the House of Commons William Dickinson attended Westminster school for high school and then the University of Edinburgh. The University of Edinburgh is a university located in the United Kingdom. William Dickinson supported the Portland Whigs. People who supported the Portland Whigs did not get a seat in the Parliament.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? William Dickinson did not get a seat in the Parliament.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nBritish(x) ::: x is a British person.\nPolitician(x) ::: x is a politician.\nHouseOfCommons(x) ::: x is a member of the House of Commons.\nWestminsterSchool(x) ::: x is a high school.\nUniversity(x) ::: x is a university.\nUnitedKingdom(x) ::: x is located in the United Kingdom.\nSupport(x, y) ::: x supports y.\nSeat(x, y) ::: x is a seat in the Parliament.\nPremises:\nBritish(william) ∧ Politician(william) ∧ HouseOfCommons(william) ::: William Dickinson was a British politician who sat in the House of Commons.\nWestminsterSchool(william) ∧ University(william) ∧ UnitedKingdom(william) ::: William Dickinson attended Westminster school for high school and then the University of Edinburgh.\nSupport(william, portlandWhigs) ∧ ¬Seat(william, parliament) ::: William Dickinson supported the Portland Whigs. People who supported the Portland Whigs did not get a seat in the Parliament.\nConclusion:\n¬Seat(william, parliament) ::: William Dickinson did not get a seat in the Parliament.\n------\nProblem:\nThe following is a list of the top 1"
    ]
  },
  {
    "id": "FOLIO_train_14",
    "context": "William Dickinson was a British politician who sat in the House of Commons William Dickinson attended Westminster school for high school and then the University of Edinburgh. The University of Edinburgh is a university located in the United Kingdom. William Dickinson supported the Portland Whigs. People who supported the Portland Whigs did not get a seat in the Parliament.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? William Dickinson went to schools located in the United Kingdom for both high school and university.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nBritish(x) ::: x is a British person.\nPolitician(x) ::: x is a politician.\nHouseOfCommons(x) ::: x is a member of the House of Commons.\nWestminsterSchool(x) ::: x is a school located in the United Kingdom.\nUniversityOfEdinburgh(x) ::: x is a university located in the United Kingdom.\nSupport(x, y) ::: x supports y.\nPortlandWhigs(x) ::: x is a Portland Whig.\nSeat(x) ::: x is a seat in the Parliament.\nPremises:\nBritish(william) ∧ Politician(william) ∧ HouseOfCommons(william) ::: William Dickinson was a British politician who sat in the House of Commons.\nWestminsterSchool(william) ∧ UniversityOfEdinburgh(william) ::: William Dickinson attended Westminster school for high school and then the University of Edinburgh.\nSupport(william, portlandWhigs) ∧ ¬Seat(william) ::: William Dickinson supported the Portland Whigs. People who supported the Portland Whigs did not get a seat in the Parliament.\nConclusion:\nSchool(william, westminsterSchool) ∧ School(william, universityOfEdinburgh) ::: William Dickinson went to schools located in the United Kingdom for both"
    ]
  },
  {
    "id": "FOLIO_train_15",
    "context": "William Dickinson was a British politician who sat in the House of Commons William Dickinson attended Westminster school for high school and then the University of Edinburgh. The University of Edinburgh is a university located in the United Kingdom. William Dickinson supported the Portland Whigs. People who supported the Portland Whigs did not get a seat in the Parliament.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? William Dickinson attended university in the United Kingdom.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nBritish(x) ::: x is a British person.\nPolitician(x) ::: x is a politician.\nHouseOfCommons(x) ::: x is a member of the House of Commons.\nWestminsterSchool(x) ::: x is a high school.\nUniversity(x) ::: x is a university.\nUnitedKingdom(x) ::: x is located in the United Kingdom.\nSupport(x, y) ::: x supports y.\nSeat(x, y) ::: x gets a seat in y.\nPremises:\nBritish(william) ∧ Politician(william) ∧ HouseOfCommons(william) ::: William Dickinson was a British politician who sat in the House of Commons.\nWestminsterSchool(william) ∧ University(edinburgh) ∧ UnitedKingdom(edinburgh) ::: William Dickinson attended Westminster school for high school and then the University of Edinburgh.\nSupport(william, portlandWhigs) ∧ ¬Seat(william, parliament) ::: William Dickinson supported the Portland Whigs. People who supported the Portland Whigs did not get a seat in the Parliament.\nConclusion:\nUniversity(edinburgh) ∧ UnitedKingdom(edinburgh) ::: William Dickinson attended university in the United Kingdom.\n------\nProblem:\nThe following is a list of"
    ]
  },
  {
    "id": "FOLIO_train_16",
    "context": "William Dickinson was a British politician who sat in the House of Commons William Dickinson attended Westminster school for high school and then the University of Edinburgh. The University of Edinburgh is a university located in the United Kingdom. William Dickinson supported the Portland Whigs. People who supported the Portland Whigs did not get a seat in the Parliament.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? William Dickinson sat in the House of Commons.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nBritish(x) ::: x is a British person.\nPolitician(x) ::: x is a politician.\nSat(x, y) ::: x sat in the year y.\nHouseOfCommons(x) ::: x is a member of the House of Commons.\nWestminsterSchool(x) ::: x is a high school.\nUniversity(x) ::: x is a university.\nUniversityOfEdinburgh(x) ::: x is the University of Edinburgh.\nUnitedKingdom(x) ::: x is the United Kingdom.\nSupport(x, y) ::: x supports y.\nPortlandWhigs(x) ::: x is a Portland Whig.\nSeat(x, y) ::: x is a seat in the year y.\nPremises:\nBritish(william) ∧ Politician(william) ∧ Sat(william, year1790) ∧ HouseOfCommons(william) ::: William Dickinson was a British politician who sat in the House of Commons.\nWestminsterSchool(william) ∧ UniversityOfEdinburgh(william) ::: William Dickinson attended Westminster school for high school and then the University of Edinburgh.\nSupport(william, portlandWhigs) ∧ ¬Seat(william, year1790) ::: William Dickinson supported the Portland Whigs"
    ]
  },
  {
    "id": "FOLIO_train_17",
    "context": "LanguageA is a universal language If a universal language exists, then for every two people if they both know the same universal language they can communicate. Katya cannot communicate with Danil. Katya knows LanguageA.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Danil knows LanguageA.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nKnows(x, y) ::: x knows y.\nCommunicate(x, y) ::: x can communicate with y.\nUniversalLanguage(x) ::: x is a universal language.\nPremises:\n∀x ∀y (Knows(x, y) ∧ Knows(y, x) → Communicate(x, y)) ::: If a universal language exists, then for every two people if they both know the same universal language they can communicate.\n¬Communicate(katya, danil) ::: Katya cannot communicate with Danil.\nKnows(katya, languageA) ::: Katya knows LanguageA.\nConclusion:\nCommunicate(danil, languageA) ::: Danil knows LanguageA.\n------\nProblem:\nThe following is a list of the top 100 most popular baby names in the United States in 2013.\n1. Jacob\n2. Mason\n3. William\n4. Michael\n5. Ethan\n6. Jayden\n7. Alexander\n8. Daniel\n9. Noah\n10. Aiden\n11. Benjamin\n12. Anthony\n13. David\n14. James\n15. Christopher\n16. Matthew\n17. John\n18. Joseph\n19. Andrew\n20. Christian\n21. Joshua\n22. Elijah\n23. Samuel"
    ]
  },
  {
    "id": "FOLIO_train_18",
    "context": "All customers who are subscribed to AMC List are available to watch 3 movies every week without any additional fees. Some customers go to cinemas every week Customers either subscribe to AMC service or HBO service. Customers who prefer TV series more and will not watch TV series in cinemas. All customers who subscribe to HBO services prefer TV series to movies. James watches TV series in cinemas.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James goes to cinemas every week.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nCustomer(x) ::: x is a customer.\nSubscribed(x, y) ::: x is subscribed to y.\nWatch(x, y) ::: x watches y.\nCinema(x) ::: x is a cinema.\nPremises:\n∀x (Customer(x) → (Subscribed(x, AMCList) ⊕ Subscribed(x, HBO))) ::: All customers who are subscribed to AMC List are available to watch 3 movies every week without any additional fees.\n∀x (Customer(x) → Watch(x, cinemas)) ::: Some customers go to cinemas every week.\n∀x (Customer(x) → (Subscribed(x, HBO) → Prefer(x, TVSeries))) ::: Customers who prefer TV series more and will not watch TV series in cinemas.\nWatch(james, TVSeries) ::: James watches TV series.\nConclusion:\nWatch(james, cinemas) ::: James goes to cinemas every week.\n------\nProblem:\nAll people who are not students are either employed or unemployed. All people who are employed are either married or single. All people who are single are either male or female. All people who are married are either male or female. All people who are employed are either male or female. All people who are unemployed are either male or female.\nQuestion:\nBased"
    ]
  },
  {
    "id": "FOLIO_train_19",
    "context": "All customers who are subscribed to AMC List are available to watch 3 movies every week without any additional fees. Some customers go to cinemas every week Customers either subscribe to AMC service or HBO service. Customers who prefer TV series more and will not watch TV series in cinemas. All customers who subscribe to HBO services prefer TV series to movies. James watches TV series in cinemas.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James does not go to cinemas every week.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nCustomer(x) ::: x is a customer.\nSubscribed(x, y) ::: x is subscribed to y.\nWatch(x, y) ::: x watches y.\nCinema(x) ::: x is a cinema.\nPrefer(x, y) ::: x prefers y.\nPremises:\n∀x (Customer(x) → Subscribed(x, AMCList)) ::: All customers who are subscribed to AMC List are available to watch 3 movies every week without any additional fees.\n∀x (Customer(x) → Subscribed(x, HBO)) ⊕ (Customer(x) → Prefer(x, TVSeries)) ::: Customers either subscribe to AMC service or HBO service.\n∀x (Customer(x) → Prefer(x, TVSeries) → ¬Watch(x, Cinema)) ::: Customers who prefer TV series more and will not watch TV series in cinemas.\n∀x (Customer(x) → Prefer(x, TVSeries) → ¬Watch(x, Cinema)) ⊕ (Customer(x) → Prefer(x, Movies) → Watch(x, Cinema)) ::: All customers who subscribe to HBO services prefer TV series to movies.\n∃x (Customer(x) ∧ Watch(x, Cinema)) ∧ Prefer(x, Movies) ::: James watches TV series in"
    ]
  },
  {
    "id": "FOLIO_train_20",
    "context": "All customers who are subscribed to AMC List are available to watch 3 movies every week without any additional fees. Some customers go to cinemas every week Customers either subscribe to AMC service or HBO service. Customers who prefer TV series more and will not watch TV series in cinemas. All customers who subscribe to HBO services prefer TV series to movies. James watches TV series in cinemas.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James goes to cinemas every week or watches 3 movies every week without any additional fees.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nCustomer(x) ::: x is a customer.\nSubscribed(x, y) ::: x is subscribed to y.\nWatch(x, y) ::: x watches y.\nCinema(x) ::: x is a cinema.\nWeek(x) ::: x is a week.\nMovie(x) ::: x is a movie.\nTVSeries(x) ::: x is a TV series.\nPremises:\n∀x (Customer(x) → (Subscribed(x, AMCList) ∨ Subscribed(x, HBO))) ::: All customers who are subscribed to AMC List are available to watch 3 movies every week without any additional fees.\n∀x (Customer(x) → Watch(x, cinemas)) ::: Some customers go to cinemas every week.\n∀x (Customer(x) → (Watch(x, cinemas) ⊕ Watch(x, TVSeries))) ::: Customers either go to cinemas every week or watch TV series in cinemas.\n∀x (Customer(x) → (Subscribed(x, HBO) → ¬Watch(x, TVSeries))) ::: Customers who prefer TV series more and will not watch TV series in cinemas.\nWatch(james, TVSeries) ::: James watches TV series.\nConclusion:\nWatch(james, cinemas) ⊕ Watch(james, TVSeries) ::: James goes to cinemas every week or watches 3 movies every week without any additional fees.\n------"
    ]
  },
  {
    "id": "FOLIO_train_21",
    "context": "All customers who are subscribed to AMC List are available to watch 3 movies every week without any additional fees. Some customers go to cinemas every week Customers either subscribe to AMC service or HBO service. Customers who prefer TV series more and will not watch TV series in cinemas. All customers who subscribe to HBO services prefer TV series to movies. James watches TV series in cinemas.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If James does not both go to cinemas every week and subscribe to HBO service, then James is either available to watch 3 movies every week without any additional fees or he prefers TV more.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nCustomer(x) ::: x is a customer.\nSubscribed(x, y) ::: x is subscribed to y.\nWatch(x, y) ::: x watches y.\nCinema(x) ::: x is a cinema.\nTVSeries(x) ::: x is a TV series.\nMovie(x) ::: x is a movie.\nPremises:\n∀x (Customer(x) → (Subscribed(x, AMCList) ∨ Subscribed(x, HBO))) ::: All customers who are subscribed to AMC List are available to watch 3 movies every week without any additional fees.\n∀x (Customer(x) → Watch(x, cinemas)) ::: Some customers go to cinemas every week.\n∀x (Customer(x) → (Subscribed(x, AMCList) ⊕ Subscribed(x, HBO))) ::: Customers either subscribe to AMC service or HBO service.\n∀x (Customer(x) → (Subscribed(x, HBO) ∧ Prefer(x, TVSeries)) → ¬Watch(x, cinemas)) ::: Customers who prefer TV series more and will not watch TV series in cinemas.\nWatch(james, cinemas) ∧ ¬(Subscribed(james, AMCList) ∧ Subscribed(james, HBO)) ::: James watches TV series in cinemas.\nConclusion:\n(¬(Watch(james, cinemas) ∧"
    ]
  },
  {
    "id": "FOLIO_train_22",
    "context": "All customers who are subscribed to AMC List are available to watch 3 movies every week without any additional fees. Some customers go to cinemas every week Customers either subscribe to AMC service or HBO service. Customers who prefer TV series more and will not watch TV series in cinemas. All customers who subscribe to HBO services prefer TV series to movies. James watches TV series in cinemas.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If James is available to watch 3 movies every week without any additional fees and he watches TV series in cinemas, then he goes to cinemas every week and prefers TV series more.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nCustomer(x) ::: x is a customer.\nSubscribed(x, y) ::: x is subscribed to y.\nWatch(x, y) ::: x watches y.\nCinema(x) ::: x is a cinema.\nPrefer(x, y) ::: x prefers y.\nPremises:\n∀x (Customer(x) → Subscribed(x, AMCList)) ::: All customers who are subscribed to AMC List are available to watch 3 movies every week without any additional fees.\n∀x (Customer(x) → Subscribed(x, HBO)) ⊕ (Customer(x) → Subscribed(x, AMCList)) ::: Customers either subscribe to AMC service or HBO service.\n∀x (Customer(x) → Watch(x, TVSeries) → ¬Watch(x, Movie)) ::: Customers who prefer TV series more and will not watch TV series in cinemas.\n∀x (Watch(x, TVSeries) → Prefer(x, TVSeries)) ::: All customers who watch TV series prefer TV series to movies.\nWatch(james, TVSeries) ∧ Prefer(james, TVSeries) ::: James watches TV series in cinemas.\nConclusion:\nWatch(james, Movie) ∧ Prefer(james, Movie) ::: If James is available to watch 3 movies every week without any additional fees and he watches TV series in cinemas, then he goes to cinemas every week"
    ]
  },
  {
    "id": "FOLIO_train_23",
    "context": "A La Liga soccer team ranks higher than another if it receives more points. If two La Liga soccer teams recieve the same points, the team which recieves more points from the games between the two teams ranks higher. Real Madrid and Barcelona are both La Liga soccer teams. In La Liga 2021-2022, Real Madrid recieves 86 points and Barcelon recieves 73 points. In La Liga 2021-2022, Real Madrid and Barcelona both recieve 3 points from the games between them.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? In La Liga 2021-2022, Real Madrid ranks higher than Barcelona.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLaLigaTeam(x) ::: x is a La Liga soccer team.\nRank(x, y) ::: x ranks higher than y.\nPoints(x) ::: x recieves points.\nPoint(x, y) ::: x recieves y points.\nPremises:\n∀x (LaLigaTeam(x) → Rank(x, y) → Point(x, z) → Point(y, z) → Rank(x, y)) ::: A La Liga soccer team ranks higher than another if it recieves more points.\n∀x (LaLigaTeam(x) → Point(x, y) → Point(y, z) → Rank(x, y) → Rank(x, z)) ::: If two La Liga soccer teams recieve the same points, the team which recieves more points from the games between the two teams ranks higher.\nLaLigaTeam(realMadrid) ∧ LaLigaTeam(barcelona) ::: Real Madrid and Barcelona are both La Liga soccer teams.\nPoints(realMadrid, 86) ∧ Points(barcelona, 73) ::: In La Liga 2021-2022, Real Madrid recieves 86 points and Barcelon recieves 73 points.\nPoint(realMadrid, barcelona, 3) ::: In La Liga 2021-2022, Real Madrid and Barcelona both recieve 3 points from the games between them.\nConclusion:\nRank(realMadrid,"
    ]
  },
  {
    "id": "FOLIO_train_24",
    "context": "A La Liga soccer team ranks higher than another if it receives more points. If two La Liga soccer teams recieve the same points, the team which recieves more points from the games between the two teams ranks higher. Real Madrid and Barcelona are both La Liga soccer teams. In La Liga 2021-2022, Real Madrid recieves 86 points and Barcelon recieves 73 points. In La Liga 2021-2022, Real Madrid and Barcelona both recieve 3 points from the games between them.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? In La Liga 2021-2022, Barcelona ranks higher than Real Madrid.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLaLigaTeam(x) ::: x is a La Liga soccer team.\nRank(x, y) ::: x ranks higher than y.\nPoints(x) ::: x recieves points.\nPoint(x, y) ::: x recieves y points.\nPremises:\n∀x (LaLigaTeam(x) → Rank(x, y) → Point(x, z) → Point(y, z) → Rank(x, y)) ::: A La Liga soccer team ranks higher than another if it recieves more points.\n∀x (LaLigaTeam(x) → Point(x, y) → Point(y, z) → Rank(x, y) → Rank(x, z)) ::: If two La Liga soccer teams recieve the same points, the team which recieves more points from the games between the two teams ranks higher.\nLaLigaTeam(realMadrid) ∧ LaLigaTeam(barcelona) ∧ Point(realMadrid, 86) ∧ Point(barcelona, 73) ∧ Point(realMadrid, barcelona, 3) ::: Real Madrid and Barcelona are both La Liga soccer teams. In La Liga 2021-2022, Real Madrid recieves 86 points and Barcelon recieves 73 points. In La Liga 2021-2022, Real Madrid and Barcelona both recieve 3 points from the games between them.\nConclusion:\nRank(barcelona, realMadrid"
    ]
  },
  {
    "id": "FOLIO_train_25",
    "context": "Lawton Park is a neighbourhood in Seattle. All citizens of Lawton Park use the zip code 98199. Tom is a citizen of Lawton Park. Daniel uses the zip code 98199.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tom uses the zip code 98199.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nCitizen(x, y) ::: x is a citizen of y.\nZipCode(x) ::: x is a zip code.\nPremises:\nCitizen(tom, lawtonPark) ∧ ZipCode(98199) ::: Tom is a citizen of Lawton Park.\nCitizen(daniel, lawtonPark) ∧ ZipCode(98199) ::: Daniel is a citizen of Lawton Park.\nConclusion:\nZipCode(98199) ∧ Citizen(tom, lawtonPark) ::: Tom uses the zip code 98199.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine"
    ]
  },
  {
    "id": "FOLIO_train_26",
    "context": "Lawton Park is a neighbourhood in Seattle. All citizens of Lawton Park use the zip code 98199. Tom is a citizen of Lawton Park. Daniel uses the zip code 98199.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tom doesn't use the zip code 98199.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nCitizen(x, y) ::: x is a citizen of y.\nZipCode(x) ::: x is a zip code.\nUse(x, y) ::: x uses y.\nPremises:\nCitizen(tom, lawtonPark) ∧ ZipCode(98199) ::: Tom is a citizen of Lawton Park.\nCitizen(daniel, lawtonPark) ∧ ZipCode(98199) ::: Daniel is a citizen of Lawton Park.\nConclusion:\nUse(tom, 98199) ::: Tom uses the zip code 98199.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that c"
    ]
  },
  {
    "id": "FOLIO_train_27",
    "context": "Lawton Park is a neighbourhood in Seattle. All citizens of Lawton Park use the zip code 98199. Tom is a citizen of Lawton Park. Daniel uses the zip code 98199.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tom is a citizen of Washington.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nCitizen(x, y) ::: x is a citizen of y.\nZipCode(x) ::: x is a zip code.\nPremises:\nCitizen(tom, lawtonPark) ::: Tom is a citizen of Lawton Park.\nZipCode(98199) ::: Daniel uses the zip code 98199.\nConclusion:\nCitizen(tom, washington) ::: Tom is a citizen of Washington.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\n###\nPredicates:\nDependent(x) ::: x is a person dependent on caffeine.\nDrinks(x) ::: x"
    ]
  },
  {
    "id": "FOLIO_train_28",
    "context": "Lawton Park is a neighbourhood in Seattle. All citizens of Lawton Park use the zip code 98199. Tom is a citizen of Lawton Park. Daniel uses the zip code 98199.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Daniel is a citizen of Lawton Park.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nCitizen(x, y) ::: x is a citizen of y.\nZipCode(x) ::: x is a zip code.\nPremises:\nAll(x, y) ::: For all x, y.\nCitizen(tom, lawtonPark) ::: Tom is a citizen of Lawton Park.\nZipCode(98199) ::: Zip code 98199.\nCitizen(daniel, lawtonPark) ::: Daniel is a citizen of Lawton Park.\nConclusion:\nCitizen(daniel, lawtonPark) ::: Daniel is a citizen of Lawton Park.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caff"
    ]
  },
  {
    "id": "FOLIO_train_29",
    "context": "If a legislator is found guilty of stealing government funds, they will be suspended from office. Tiffany T. Alston was a legislator in Maryland's House of Delegates from 2011 to 2013. Tiffany T. Alston was found guilty of stealing government funds in 2012.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tiffany T. Alston was suspended from the Maryland House of Delegates.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nLegislator(x) ::: x is a legislator.\nFoundGuilty(x, y) ::: x is found guilty of stealing y.\nSuspended(x) ::: x is suspended from office.\nPremises:\nLegislator(tiffany) ∧ FoundGuilty(tiffany, governmentFunds) ::: Tiffany T. Alston was a legislator in Maryland's House of Delegates from 2011 to 2013. Tiffany T. Alston was found guilty of stealing government funds in 2012.\nConclusion:\nSuspended(tiffany) ::: Tiffany T. Alston was suspended from the Maryland House of Delegates.\n------\nProblem:\nThe following is a list of the top 100 most popular baby names in the United States in 2012.\n1. Jacob\n2. Mason\n3. William\n4. Michael\n5. Ethan\n6. Jayden\n7. Alexander\n8. Daniel\n9. Noah\n10. Aiden\n11. Anthony\n12. David\n13. Christopher\n14. Matthew\n15. James\n16. John\n17. Joseph\n18. Benjamin\n19. Andrew\n20. Joshua\n21. Christian\n22. Samuel\n23. Elijah\n24. Nicholas\n25. Logan\n26. Ryan\n27. Samuel\n28. Cale"
    ]
  },
  {
    "id": "FOLIO_train_30",
    "context": "If a legislator is found guilty of stealing government funds, they will be suspended from office. Tiffany T. Alston was a legislator in Maryland's House of Delegates from 2011 to 2013. Tiffany T. Alston was found guilty of stealing government funds in 2012.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tiffany T. Alston was not suspended from the Maryland House of Delegates.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nLegislator(x) ::: x is a legislator.\nFoundGuilty(x, y) ::: x is found guilty of y.\nSuspended(x) ::: x is suspended from office.\nPremises:\nLegislator(tiffany) ∧ FoundGuilty(tiffany, stealingGovernmentFunds) ::: Tiffany T. Alston was a legislator in Maryland's House of Delegates from 2011 to 2013. Tiffany T. Alston was found guilty of stealing government funds in 2012.\nConclusion:\n¬Suspended(tiffany) ::: Tiffany T. Alston was not suspended from the Maryland House of Delegates.\n------"
    ]
  },
  {
    "id": "FOLIO_train_31",
    "context": "If a legislator is found guilty of stealing government funds, they will be suspended from office. Tiffany T. Alston was a legislator in Maryland's House of Delegates from 2011 to 2013. Tiffany T. Alston was found guilty of stealing government funds in 2012.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tiffany T. Alston went to prison for stealing government funds.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nLegislator(x) ::: x is a legislator.\nFoundGuilty(x, y) ::: x is found guilty of stealing y.\nSuspended(x) ::: x is suspended from office.\nPremises:\nLegislator(tiffany) ∧ FoundGuilty(tiffany, governmentFunds) ::: Tiffany T. Alston was a legislator in Maryland's House of Delegates from 2011 to 2013. Tiffany T. Alston was found guilty of stealing government funds in 2012.\nConclusion:\nSuspended(tiffany) ::: Tiffany T. Alston will be suspended from office.\n------\nProblem:\nThe following is a list"
    ]
  },
  {
    "id": "FOLIO_train_32",
    "context": "Some fish may sting. Stonefish is a fish. It stings to step on a stonefish. Stonefish stings cause death if not treated. To treat stonefish stings, apply heat to the affected area or use an antivenom.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If you step on a stonefish and don’t use an antivenom, it will cause death.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nSting(x) ::: x stings.\nFish(x) ::: x is a fish.\nStonefish(x) ::: x is a stonefish.\nDeath(x) ::: x causes death.\nTreat(x, y) ::: x treats y.\nApply(x, y) ::: x applies y.\nAntivenom(x) ::: x is an antivenom.\nPremises:\nStonefish(x) ∧ Sting(x) ::: x is a stonefish and it stings.\nStonefish(x) ∧ Death(x) ::: x is a stonefish and it causes death.\nTreat(x, y) ∧ Apply(x, y) ∧ Antivenom(y"
    ]
  },
  {
    "id": "FOLIO_train_33",
    "context": "Some fish may sting. Stonefish is a fish. It stings to step on a stonefish. Stonefish stings cause death if not treated. To treat stonefish stings, apply heat to the affected area or use an antivenom.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Stings of some fish can cause death if not treated.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nFish(x) ::: x is a fish.\nSting(x, y) ::: x stings y.\nStonefish(x) ::: x is a stonefish.\nDeath(x) ::: x is death.\nTreat(x, y) ::: x treats y.\nApply(x, y) ::: x applies y.\nPremises:\nFish(stonefish) ∧ Sting(stonefish, x) ∧ Death(x) ∧ Treat(x, y) ∧ Apply(y, heat) ::: Stonefish stings cause death if not treated.\nConclusion:\nDeath(x) ∧ Treat(x, y) ∧ Apply(y, heat) ::: Stings of some fish can"
    ]
  },
  {
    "id": "FOLIO_train_34",
    "context": "Some fish may sting. Stonefish is a fish. It stings to step on a stonefish. Stonefish stings cause death if not treated. To treat stonefish stings, apply heat to the affected area or use an antivenom.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If you step on a stonefish and apply heat to the affected area, stings will cause death.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nSting(x) ::: x stings.\nFish(x) ::: x is a fish.\nStonefish(x) ::: x is a stonefish.\nDeath(x) ::: x causes death.\nTreat(x, y) ::: x treats y.\nApply(x, y) ::: x applies y.\nAffected(x, y) ::: x is affected by y.\nPremises:\nStonefish(x) ∧ Sting(x) ::: x is a stonefish and x stings.\nStonefish(x) ∧ Death(x) ::: x is a stonefish and x causes death.\nApply(heat, affectedArea) ∧ Treat(stonefishStings, affectedArea) :"
    ]
  },
  {
    "id": "FOLIO_train_35",
    "context": "Some monitors produced by LG have a type-c port. If the monitor has a type-c port, then it is not produced by AOC. All monitors in the library are produced by AOC. L-2021 is either in the library or has a type-c port. L-2021 is either produced by AOC and produced by LG, or neither produced by AOC nor produced by LG.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? L-2021 is in the library.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nLibrary(x) ::: x is in the library.\nMonitor(x) ::: x is a monitor.\nTypeCPort(x) ::: x has a type-c port.\nProducedBy(x, y) ::: x is produced by y.\nPremises:\n∃x (Monitor(x) ∧ TypeCPort(x)) ::: Some monitors produced by LG have a type-c port.\n∀x (Library(x) → ProducedBy(x, AOC)) ::: All monitors in the library are produced by AOC.\n(Library(L-2021) ⊕ TypeCPort(L-2021)) ::: L-2021 is either in the library or has a type-c port.\n¬(Produ"
    ]
  },
  {
    "id": "FOLIO_train_36",
    "context": "Some monitors produced by LG have a type-c port. If the monitor has a type-c port, then it is not produced by AOC. All monitors in the library are produced by AOC. L-2021 is either in the library or has a type-c port. L-2021 is either produced by AOC and produced by LG, or neither produced by AOC nor produced by LG.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? L-2021 is either in the library or produced by LG.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nLibrary(x) ::: x is in the library.\nMonitor(x) ::: x is a monitor.\nTypeCPort(x) ::: x has a type-c port.\nProducedBy(x, y) ::: x is produced by y.\nPremises:\n∃x (Library(x) ∧ Monitor(x)) ::: Some monitors are in the library.\n∀x (Monitor(x) → ¬TypeCPort(x)) ::: If the monitor has a type-c port, then it is not produced by AOC.\n∀x (Library(x) → ProducedBy(x, AOC)) ::: All monitors in the library are produced by AOC.\n(Library(L-2021) ⊕ TypeCPort(L"
    ]
  },
  {
    "id": "FOLIO_train_37",
    "context": "Some monitors produced by LG have a type-c port. If the monitor has a type-c port, then it is not produced by AOC. All monitors in the library are produced by AOC. L-2021 is either in the library or has a type-c port. L-2021 is either produced by AOC and produced by LG, or neither produced by AOC nor produced by LG.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? L-2021 either has a type-c port or is produced by LG.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nHasTypeCPort(x) ::: x has a type-c port.\nProducedBy(x, y) ::: x is produced by y.\nLibrary(x) ::: x is in the library.\nPremises:\n∃x (HasTypeCPort(x) ∧ ¬ProducedBy(x, AOC)) ::: Some monitors produced by LG have a type-c port.\n∀x (Library(x) → ProducedBy(x, AOC)) ::: All monitors in the library are produced by AOC.\n(Library(L-2021) ⊕ HasTypeCPort(L-2021)) ::: L-2021 is either in the library or has a type-c port.\n¬(ProducedBy(L"
    ]
  },
  {
    "id": "FOLIO_train_38",
    "context": "Some monitors produced by LG have a type-c port. If the monitor has a type-c port, then it is not produced by AOC. All monitors in the library are produced by AOC. L-2021 is either in the library or has a type-c port. L-2021 is either produced by AOC and produced by LG, or neither produced by AOC nor produced by LG.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If L-2021 is either in the library and produced by LG, or neither in the library nor produced by LG,  then L-2021 neither has a type-c port nor is produced by LG.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLibrary(x) ::: x is in the library.\nMonitor(x) ::: x is a monitor.\nTypeCPort(x) ::: x has a type-c port.\nProducedBy(x, y) ::: x is produced by y.\nPremises:\n∃x (Library(x) ∧ Monitor(x) ∧ TypeCPort(x)) ::: Some monitors produced by LG have a type-c port.\n∀x (Monitor(x) → ¬ProducedBy(x, AOC)) ::: If the monitor has a type-c port, then it is not produced by AOC.\n∀x (Library(x) → ProducedBy(x, AOC)) ::: All monitors in the library are produced by AOC.\n("
    ]
  },
  {
    "id": "FOLIO_train_39",
    "context": "Some monitors produced by LG have a type-c port. If the monitor has a type-c port, then it is not produced by AOC. All monitors in the library are produced by AOC. L-2021 is either in the library or has a type-c port. L-2021 is either produced by AOC and produced by LG, or neither produced by AOC nor produced by LG.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If L-2021 is either produced by LG and produced by AOC or neither produced by LG nor produced by AOC,  then L-2021 is either in the library or produced by LG.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nLibrary(x) ::: x is in the library.\nMonitor(x) ::: x is a monitor.\nTypeCPort(x) ::: x has a type-c port.\nProducedBy(x, y) ::: x is produced by y.\nPremises:\n∃x (Monitor(x) ∧ TypeCPort(x)) ::: Some monitors produced by LG have a type-c port.\n∀x (Library(x) → ProducedBy(x, AOC)) ::: All monitors in the library are produced by AOC.\n(Library(L-2021) ⊕ TypeCPort(L-2021)) ::: L-2021 is either in the library or has a type-c port.\n¬(Produ"
    ]
  },
  {
    "id": "FOLIO_train_40",
    "context": "People eat meat regularly or are vegetation. If people eat meat regularly, then they enjoy eating hamburgers and steaks. All people who are vegetarian are conscious of the environment or their health. If people are conscious about the environment or their health, then they do not go to fast food places often. If people have busy schedules without time to cook, then they go to fast food places often. If Jeremy does not both go to fast food places often and is conscious about the environment or their health, then he goes to fast food places often.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jeremy has a busy schedule without time to cook.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nEatMeat(x) ::: x eats meat regularly.\nVegetarian(x) ::: x is a vegetarian.\nConscious(x, y) ::: x is conscious about y.\nFastFood(x) ::: x goes to a fast food place.\nBusy(x) ::: x has a busy schedule.\nCook(x) ::: x has time to cook.\nPremises:\n∀x (EatMeat(x) → Enjoy(x, hamburger) ∧ Enjoy(x, steak)) ::: If people eat meat regularly, then they enjoy eating hamburgers and steaks.\n∀x (Vegetarian(x) → Conscious(x, environment) ∨ Conscious(x, health)) ::: All people who are vegetarian are conscious about the environment or their health.\n∀x (Conscious(x, y) → ¬FastFood(x)) ::: If people are conscious about the environment or their health, then they do not go to fast food places often.\n¬FastFood(jeremy) ∧ Busy(jeremy) ::: If people have busy schedules without time to cook, then they go to fast food places often.\n¬FastFood(jeremy) ∧ Conscious(jeremy, environment) ∧ Conscious(jeremy, health) ::: If people have busy schedules without time to cook, then they go to fast food places often.\n¬FastFood(jeremy) ∧ Conscious(jeremy, environment) ∧ Conscious(jeremy, health) ∧ Busy(jeremy) ::: If people have busy schedules without time to cook, then they go to fast food places often.\nConclusion:\nBusy(jeremy) ::: Jeremy has a busy schedule without time to cook.\n------"
    ]
  },
  {
    "id": "FOLIO_train_41",
    "context": "People eat meat regularly or are vegetation. If people eat meat regularly, then they enjoy eating hamburgers and steaks. All people who are vegetarian are conscious of the environment or their health. If people are conscious about the environment or their health, then they do not go to fast food places often. If people have busy schedules without time to cook, then they go to fast food places often. If Jeremy does not both go to fast food places often and is conscious about the environment or their health, then he goes to fast food places often.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jeremy has a busy schedule without time to cook or enjoy eating hamburgers and steaks.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nEatMeat(x) ::: x eats meat regularly.\nVegetarian(x) ::: x is a vegetarian.\nConscious(x, y) ::: x is conscious about y.\nFastFood(x) ::: x goes to a fast food place.\nBusy(x) ::: x has a busy schedule.\nCook(x) ::: x cooks.\nPremises:\n∀x (EatMeat(x) → Enjoy(x, hamburgersAndSteaks)) ::: If people eat meat regularly, then they enjoy eating hamburgers and steaks.\n∀x (Vegetarian(x) → Conscious(x, environment)) ∨ ∀x (Vegetarian(x) → Conscious(x, health)) ::: All people who are vegetarian are conscious about the environment or their health.\n∀x (Conscious(x, environment) → ¬FastFood(x)) ∨ ∀x (Conscious(x, health) → ¬FastFood(x)) ::: If people are conscious about the environment or their health, then they do not go to fast food places often.\n∀x (Busy(x) → ¬Cook(x)) ∨ ∀x (Busy(x) → FastFood(x)) ::: If people have busy schedules without time to cook, then they go to fast food places often.\n¬(FastFood(jeremy) ∧ Conscious(jeremy, environment)) ∧ ¬(FastFood(jeremy) ∧ Conscious(jeremy, health)) ∧ ¬(FastFood(jeremy) ∧ Cook(jeremy)) ∧ ¬(FastFood(jeremy) ∧ Busy(jeremy)) ::: If Jeremy does not both go to fast"
    ]
  },
  {
    "id": "FOLIO_train_42",
    "context": "People eat meat regularly or are vegetation. If people eat meat regularly, then they enjoy eating hamburgers and steaks. All people who are vegetarian are conscious of the environment or their health. If people are conscious about the environment or their health, then they do not go to fast food places often. If people have busy schedules without time to cook, then they go to fast food places often. If Jeremy does not both go to fast food places often and is conscious about the environment or their health, then he goes to fast food places often.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Jeremy has a busy schedule without time to cook or enjoy eating hamburgers and steaks, then Jeremy neither has a busy schedule without having time to cook nor enjoys eating hamburgers and steaks.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEatMeat(x) ::: x eats meat regularly.\nVegetarian(x) ::: x is a vegetarian.\nConscious(x, y) ::: x is conscious about y.\nFastFood(x) ::: x goes to a fast food place.\nBusy(x) ::: x has a busy schedule.\nCook(x) ::: x has time to cook.\nPremises:\n∀x (EatMeat(x) → Enjoy(x, hamburgersAndSteaks)) ::: If people eat meat regularly, then they enjoy eating hamburgers and steaks.\n∀x (Vegetarian(x) → Conscious(x, environmentOrHealth)) ::: All people who are vegetarian are conscious about the environment or their health.\n∀x (Conscious(x, environmentOrHealth) → ¬FastFood(x)) ::: If people are conscious about the environment or their health, then they do not go to fast food places often.\n(Busy(jeremy) ∧ ¬Cook(jeremy)) → (Busy(jeremy) ∧ ¬Enjoy(jeremy, hamburgersAndSteaks)) ::: If people have busy schedules without time to cook, then they go to fast food places often.\n¬(Busy(jeremy) ∧ ¬Cook(jeremy)) → (Busy(jeremy) ∧ ¬Enjoy(jeremy, hamburgersAndSteaks)) ::: If Jeremy does not both go to fast food places often and is conscious about the environment or their health, then he goes to fast food places often.\nConclusion:\n¬(Busy(jeremy) ∧ ¬Cook(jeremy) ∧ Enjoy(jeremy, hamburgersAndSteaks)) ::: If Jeremy has"
    ]
  },
  {
    "id": "FOLIO_train_43",
    "context": "Sam is doing a project. A project is written either in C++ or in Python. If Sam does a project written in Python, he will not use a Mac. Sam is using a Mac. If Sam uses a Mac, he will play a song. If a song is not \"Perfect\", Sam will never play it.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The project Sam is doing is written in C++.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nProject(x) ::: x is a project.\nWrittenIn(x, y) ::: x is written in y.\nMac(x) ::: x is a Mac.\nPlay(x, y) ::: x plays y.\nSong(x) ::: x is a song.\nPerfect(x) ::: x is perfect.\nPremises:\nProject(samProject) ∧ WrittenIn(samProject, cpp) ::: Sam is doing a project. A project is written either in C++ or in Python.\n¬WrittenIn(samProject, python) ∧ Mac(samMac) ∧ Play(samMac, song) ∧ ¬Perfect(song) ::: If Sam does a project written in Python, he will not use a Mac. Sam is using a Mac. If Sam uses a Mac, he will play a song. If a song is not \"Perfect\", Sam will never play it.\nConclusion:\nWrittenIn(samProject, cpp) ::: The project Sam is doing is written in C++.\n------\nProblem:\nAlice is a student. A student is either a person who is a teacher or a person who is a doctor. A person who is a teacher is either a person who is a doctor or a person who is a lawyer. A person who is a doctor is either a person who is a lawyer or a person who is a teacher. A person who is a lawyer is either a person who is a doctor or a person who is a teacher.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Alice is a person who is a teacher.\n###\nPredicates:\nStudent(x) ::: x is a student.\nTeacher(x) ::: x is a teacher.\nDoctor(x) ::: x is a doctor.\nLawyer(x) :::"
    ]
  },
  {
    "id": "FOLIO_train_44",
    "context": "Sam is doing a project. A project is written either in C++ or in Python. If Sam does a project written in Python, he will not use a Mac. Sam is using a Mac. If Sam uses a Mac, he will play a song. If a song is not \"Perfect\", Sam will never play it.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The song Sam is playing is \"Perfect\".",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nProject(x) ::: x is a project.\nWrittenIn(x, y) ::: x is written in y.\nMac(x) ::: x is a Mac.\nPlay(x) ::: x is played.\nSong(x) ::: x is a song.\nPerfect(x) ::: x is perfect.\nPremises:\nProject(samProject) ∧ WrittenIn(samProject, python) ∧ Mac(samMac) ∧ Play(samPlay) ::: Sam is doing a project. A project is written either in C++ or in Python. If Sam does a project written in Python, he will not use a Mac. Sam is using a Mac. If Sam uses a Mac, he will play a song. If a song is not \"Perfect\", Sam will never play it.\nPlay(samPlay) ∧ Song(samSong) ::: If Sam uses a Mac, he will play a song.\nPerfect(samSong) ::: The song Sam is playing is \"Perfect\".\n------\nProblem:\nAlice is a student. A student is either a person who is a teacher or a person who is a doctor. A person who is a teacher is either a person who is a doctor or a person who is a lawyer. A person who is a doctor is either a person who is a lawyer or a person who is a teacher. A person who is a lawyer is either a person who is a doctor or a person who is a teacher.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Alice is a person who is a teacher.\n###\nPredicates:\nStudent(x) ::: x is a student.\nTeacher(x) ::: x is a teacher.\nDoctor(x) ::: x is a doctor.\nLawyer(x) ::: x is a lawyer.\nP"
    ]
  },
  {
    "id": "FOLIO_train_45",
    "context": "Sam is doing a project. A project is written either in C++ or in Python. If Sam does a project written in Python, he will not use a Mac. Sam is using a Mac. If Sam uses a Mac, he will play a song. If a song is not \"Perfect\", Sam will never play it.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If a song is \"Perfect\", Sam will play it.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nProject(x) ::: x is a project.\nWrittenIn(x, y) ::: x is written in y.\nMac(x) ::: x is a Mac.\nPlay(x) ::: x is played.\nSong(x) ::: x is a song.\nPerfect(x) ::: x is perfect.\nPremises:\nProject(samProject) ∧ WrittenIn(samProject, c++) ∨ WrittenIn(samProject, python) ::: Sam is doing a project.\nWrittenIn(samProject, python) → ¬Mac(sam) ::: A project written in Python is not written in a Mac.\nMac(sam) → Play(sam) ::: If Sam uses a Mac, he will play a song.\nPlay(sam) → Song(sam) ::: If Sam plays a song, it is a song.\nPlay(sam) → Perfect(sam) ::: If Sam plays a song, it is perfect.\nConclusion:\nPerfect(sam) → Play(sam) ::: If a song is \"Perfect\", Sam will play it.\n------\nProblem:\nAlice is a student. A student is either a person who is a teacher or a person who is a doctor. A person who is a teacher is either a person who is a doctor or a person who is a nurse. A person who is a doctor is either a person who is a nurse or a person who is a teacher. A person who is a nurse is either a person who is a teacher or a person who is a doctor.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Alice is a person who is a teacher.\n###\nPredicates:\nStudent(x) ::: x is a student.\nTeacher(x) ::: x is a teacher.\nDoctor(x) :"
    ]
  },
  {
    "id": "FOLIO_train_46",
    "context": "All rabbits have fur Some pets are rabbits.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Some pets do not have fur.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nRabbit(x) ::: x is a rabbit.\nFur(x) ::: x has fur.\nPet(x) ::: x is a pet.\nPremises:\n∀x (Rabbit(x) → Fur(x)) ::: All rabbits have fur.\n∀x (Pet(x) → Rabbit(x)) ::: Some pets are rabbits.\nConclusion:\n¬Fur(x) ::: Some pets do not have fur.\n------\nProblem:\nAll rabbits have fur Some pets are rabbits.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Some pets do not have fur.\n###\nPredicates:\nRabbit(x) ::: x is a rabbit.\nFur(x) ::: x has fur.\nPet(x) ::: x is a pet.\nPremises:\n∀x (Rabbit(x) → Fur(x)) ::: All rabbits have fur.\n∀x (Pet(x) → Rabbit(x)) ::: Some pets are rabbits.\nConclusion:\n¬Fur(x) ::: Some pets do not have fur.\n------\nProblem:\nAll rabbits have fur Some pets are rabbits.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Some pets do not have fur.\n###\nPredicates:\nRabbit(x) ::: x is a rabbit.\nFur(x) ::: x has fur.\nPet(x) ::: x is a pet.\nPremises:\n∀x (Rabbit(x) → Fur(x)) ::: All rabbits have fur.\n∀x (Pet(x) → Rabbit(x"
    ]
  },
  {
    "id": "FOLIO_train_47",
    "context": "All video applications are software. All YouTube-related applications are video applications. An APP is either related to YouTube or Instagram. All Instagram is entertainment. All software is programmed. All entertainments are interesting. If something is interesting, then it is good. TikTok is not good.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tiktok is a program.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nVideoApplication(x) ::: x is a video application.\nYouTubeRelatedApplication(x) ::: x is a YouTube-related application.\nAPP(x) ::: x is an APP.\nRelatedTo(x, y) ::: x is related to y.\nInstagram(x) ::: x is Instagram.\nEntertainment(x) ::: x is entertainment.\nInteresting(x) ::: x is interesting.\nGood(x) ::: x is good.\nProgrammed(x) ::: x is programmed.\nPremises:\n∀x (VideoApplication(x) → Software(x)) ::: All video applications are software.\n∀x (YouTubeRelatedApplication(x) → VideoApplication(x)) ::: All YouTube-related applications are video applications.\n∀x (APP(x) → (RelatedTo(x, YouTube) ∨ RelatedTo(x, Instagram))) ::: An APP is either related to YouTube or Instagram.\n∀x (Instagram(x) → Entertainment(x)) ::: All Instagram is entertainment.\n∀x (Software(x) → Programmed(x)) ::: All software is programmed.\n∀x (Entertainment(x) → Interesting(x)) ::: All entertainments are interesting.\n∀x (Interesting(x) → Good(x)) ::: If something is interesting, then it is good.\n¬Good(tiktok) ::: TikTok is not good.\nConclusion:\nProgrammed(tiktok) ::: Tiktok is a program.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caff"
    ]
  },
  {
    "id": "FOLIO_train_48",
    "context": "All video applications are software. All YouTube-related applications are video applications. An APP is either related to YouTube or Instagram. All Instagram is entertainment. All software is programmed. All entertainments are interesting. If something is interesting, then it is good. TikTok is not good.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tiktok is either good or a program.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nVideoApplication(x) ::: x is a video application.\nYouTubeRelatedApplication(x) ::: x is a YouTube-related application.\nAPP(x) ::: x is an APP.\nRelatedTo(x, y) ::: x is related to y.\nInstagram(x) ::: x is Instagram.\nEntertainment(x) ::: x is entertainment.\nInteresting(x) ::: x is interesting.\nGood(x) ::: x is good.\nProgrammed(x) ::: x is programmed.\nPremises:\n∀x (VideoApplication(x) → Software(x)) ::: All video applications are software.\n∀x (YouTubeRelatedApplication(x) → VideoApplication(x)) ::: All YouTube-related applications are video applications.\n∀x (APP(x) → (RelatedTo(x, YouTube) ∨ RelatedTo(x, Instagram))) ::: An APP is either related to YouTube or Instagram.\n∀x (Instagram(x) → Entertainment(x)) ::: All Instagram is entertainment.\n∀x (Software(x) → Programmed(x)) ::: All software is programmed.\n∀x (Entertainment(x) → Interesting(x)) ::: All entertainments are interesting.\n∀x (Interesting(x) → Good(x)) ::: If something is interesting, then it is good.\n¬Good(tiktok) ::: TikTok is not good.\nConclusion:\nGood(tiktok) ∨ Programmed(tiktok) ::: TikTok is either good or a program.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being add"
    ]
  },
  {
    "id": "FOLIO_train_49",
    "context": "All video applications are software. All YouTube-related applications are video applications. An APP is either related to YouTube or Instagram. All Instagram is entertainment. All software is programmed. All entertainments are interesting. If something is interesting, then it is good. TikTok is not good.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tiktok is not both related to youtube and a program.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nVideoApplication(x) ::: x is a video application.\nYouTubeRelatedApplication(x) ::: x is a YouTube-related application.\nAPP(x) ::: x is an APP.\nRelatedTo(x, y) ::: x is related to y.\nInstagram(x) ::: x is Instagram.\nEntertainment(x) ::: x is entertainment.\nInteresting(x) ::: x is interesting.\nGood(x) ::: x is good.\nProgrammed(x) ::: x is programmed.\nPremises:\n∀x (VideoApplication(x) → Software(x)) ::: All video applications are software.\n∀x (YouTubeRelatedApplication(x) → VideoApplication(x)) ::: All YouTube-related applications are video applications.\n∀x (APP(x) → (RelatedTo(x, youtube) ∨ RelatedTo(x, instagram))) ::: An APP is either related to YouTube or Instagram.\n∀x (Instagram(x) → Entertainment(x)) ::: All Instagram is entertainment.\n∀x (Software(x) → Programmed(x)) ::: All software is programmed.\n∀x (Entertainment(x) → Interesting(x)) ::: All entertainments are interesting.\n∀x (Interesting(x) → Good(x)) ::: If something is interesting, then it is good.\n¬Good(tiktok) ::: TikTok is not good.\nConclusion:\n¬(RelatedTo(tiktok, youtube) ∧ Programmed(tiktok)) ::: TikTok is not both related to youtube and a program.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being add"
    ]
  },
  {
    "id": "FOLIO_train_50",
    "context": "All video applications are software. All YouTube-related applications are video applications. An APP is either related to YouTube or Instagram. All Instagram is entertainment. All software is programmed. All entertainments are interesting. If something is interesting, then it is good. TikTok is not good.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tiktok is either related to youtube or a program.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nVideoApplication(x) ::: x is a video application.\nYouTubeRelatedApplication(x) ::: x is a YouTube-related application.\nAPP(x) ::: x is an APP.\nRelated(x, y) ::: x is related to y.\nProgrammed(x) ::: x is programmed.\nEntertainment(x) ::: x is entertainment.\nInteresting(x) ::: x is interesting.\nGood(x) ::: x is good.\nPremises:\n∀x (VideoApplication(x) → Software(x)) ::: All video applications are software.\n∀x (YouTubeRelatedApplication(x) → VideoApplication(x)) ::: All YouTube-related applications are video applications.\n∀x (APP(x) → (Related(x, youtube) ∨ Related(x, instagram))) ::: An APP is either related to YouTube or Instagram.\n∀x (Entertainment(x) → Interesting(x)) ::: All entertainments are interesting.\nGood(x) → Interesting(x) ::: If something is interesting, then it is good.\n¬Good(tiktok) ::: TikTok is not good.\nConclusion:\nRelated(tiktok, youtube) ∨ Programmed(tiktok) ::: Tiktok is either related to youtube or a program.\n------"
    ]
  },
  {
    "id": "FOLIO_train_51",
    "context": "Ordinary is an unincorporated community. Located within Elliot County, Ordinary is on Kentucky Route 32. Ordinary is located northwest of Sandy Hook.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There are no unincorporated communities along Kentucky Route 32.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nUnincorporatedCommunity(x) ::: x is an unincorporated community.\nLocated(x, y) ::: x is located at y.\nNorthwest(x, y) ::: x is located northwest of y.\nPremises:\nUnincorporatedCommunity(ordinary) ∧ Located(ordinary, kentuckyRoute32) ::: Ordinary is an unincorporated community. Located within Elliot County, Ordinary is on Kentucky Route 32.\nLocated(sandyHook, kentuckyRoute32) ::: Sandy Hook is located along Kentucky Route 32.\nConclusion:\n¬Located(ordinary, kentuckyRoute32) ::: There are no unincorporated communities along Kentucky Route 32.\n------\nProblem:\nThe 2010 census reported that the population of the city of New York was 8,175,133. The population of the city of Los Angeles was 3,792,621. The population of the city of Chicago was 2,695,598. The population of the city of Houston was 2,100,263. The population of the city of Philadelphia was 1,526,006. The population of the city of Phoenix was 1,445,632. The population of the city"
    ]
  },
  {
    "id": "FOLIO_train_52",
    "context": "Ordinary is an unincorporated community. Located within Elliot County, Ordinary is on Kentucky Route 32. Ordinary is located northwest of Sandy Hook.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There is an unincorporated community in Elliot County.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nUnincorporatedCommunity(x) ::: x is an unincorporated community.\nLocated(x, y) ::: x is located at y.\nOrdinary(x) ::: x is Ordinary.\nElliotCounty(x) ::: x is in Elliot County.\nKentuckyRoute32(x) ::: x is Kentucky Route 32.\nSandyHook(x) ::: x is Sandy Hook.\nPremises:\nUnincorporatedCommunity(ordinary) ::: Ordinary is an unincorporated community.\nLocated(ordinary, kentuckyRoute32) ::: Ordinary is located on Kentucky Route 32.\nLocated(ordinary, sandyHook) ::: Ordinary is located northwest of Sandy Hook.\nLocated(elliotCounty, ordinary) ::: Ordinary is located in Elliot County.\nConclusion:\nLocated(elliotCounty, unincorporatedCommunity) ::: There is an unincorporated community in Elliot County.\n------\nProblem:\nThe 1999 film The Matrix is a science fiction action film written and directed by the Wachowski brothers. The Matrix is the first installment in The Matrix trilogy. The Matrix is a 1999 American science fiction action film written and directed by the Wachowski brothers. The Matrix is the first installment"
    ]
  },
  {
    "id": "FOLIO_train_53",
    "context": "All young adults go on a diet. All college students are young adults. All Yale students are college students. Someone is either a Yale student or a Harvard student. All Harvard students are diligent. If Susan is a Harvard student, then she is a young adult. If Susan is a Yale student, then she does not go on a diet.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Susan is a college student.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nYoungAdult(x) ::: x is a young adult.\nCollegeStudent(x) ::: x is a college student.\nYaleStudent(x) ::: x is a Yale student.\nHarvardStudent(x) ::: x is a Harvard student.\nDiligent(x) ::: x is diligent.\nDiet(x) ::: x goes on a diet.\nPremises:\n∀x (YoungAdult(x) → Diet(x)) ::: All young adults go on a diet.\n∀x (CollegeStudent(x) → YoungAdult(x)) ::: All college students are young adults.\n∀x (YaleStudent(x) → CollegeStudent(x)) ::: All Yale students are college students.\n∃x (HarvardStudent(x) ∧ Diligent(x)) ::: Someone is either a Yale student or a Harvard student.\nDiet(susan) → ¬YoungAdult(susan) ::: If Susan is a Harvard student, then she is a young adult.\n¬Diet(susan) → YaleStudent(susan) ::: If Susan is a Yale student, then she does not go on a diet.\nConclusion:\nCollegeStudent(susan) ::: Susan is a college student.\n------\nProblem:\nAll people who regularly drink coffee are dependent on"
    ]
  },
  {
    "id": "FOLIO_train_54",
    "context": "All young adults go on a diet. All college students are young adults. All Yale students are college students. Someone is either a Yale student or a Harvard student. All Harvard students are diligent. If Susan is a Harvard student, then she is a young adult. If Susan is a Yale student, then she does not go on a diet.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Susan goes on a diet and is diligent.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nYoungAdult(x) ::: x is a young adult.\nCollegeStudent(x) ::: x is a college student.\nYaleStudent(x) ::: x is a Yale student.\nHarvardStudent(x) ::: x is a Harvard student.\nDiligent(x) ::: x is diligent.\nDiet(x) ::: x goes on a diet.\nPremises:\n∀x (YoungAdult(x) → Diet(x)) ::: All young adults go on a diet.\n∀x (CollegeStudent(x) → YoungAdult(x)) ::: All college students are young adults.\n∀x (YaleStudent(x) → CollegeStudent(x)) ::: All Yale students are college students.\n∃x (HarvardStudent(x) ∧ Diligent(x)) ::: Someone is either a Yale student or a Harvard student.\nDiet(susan) → (HarvardStudent(susan) ∧ YoungAdult(susan)) ::: If Susan is a Harvard student, then she is a young adult.\n¬Diet(susan) → (YaleStudent(susan) ∧ YoungAdult(susan)) ::: If Susan is a Yale student, then she does not go on a diet.\nConclusion:\nDiligent(susan) ∧ Diet("
    ]
  },
  {
    "id": "FOLIO_train_55",
    "context": "All young adults go on a diet. All college students are young adults. All Yale students are college students. Someone is either a Yale student or a Harvard student. All Harvard students are diligent. If Susan is a Harvard student, then she is a young adult. If Susan is a Yale student, then she does not go on a diet.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Susan does not go on a diet and is diligent.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nYoungAdult(x) ::: x is a young adult.\nCollegeStudent(x) ::: x is a college student.\nYaleStudent(x) ::: x is a Yale student.\nHarvardStudent(x) ::: x is a Harvard student.\nDiligent(x) ::: x is diligent.\nDiet(x) ::: x goes on a diet.\nPremises:\n∀x (YoungAdult(x) → Diet(x)) ::: All young adults go on a diet.\n∀x (CollegeStudent(x) → YoungAdult(x)) ::: All college students are young adults.\n∀x (YaleStudent(x) → CollegeStudent(x)) ::: All Yale students are college students.\n∃x (HarvardStudent(x) ∧ Diligent(x)) ::: Someone is either a Yale student or a Harvard student.\nDiet(susan) → ¬Diligent(susan) ::: If Susan is a Harvard student, then she is a young adult.\n¬Diet(susan) ∧ YaleStudent(susan) ::: If Susan is a Yale student, then she does not go on a diet.\nConclusion:\nDiligent(susan) ∧ ¬Diet(susan) ::: Susan does not go on a diet and is dil"
    ]
  },
  {
    "id": "FOLIO_train_56",
    "context": "Vic DiCara plays guitar and bass. The only style of music Vic DiCara plays is punk music. Vic DiCara played in the band Inside Out.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Inside Out was a punk band.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nPlays(x, y) ::: x plays y.\nStyle(x, y) ::: x plays in the style y.\nBand(x) ::: x is a band.\nPremises:\nPlays(vic, guitar) ∧ Plays(vic, bass) ::: Vic DiCara plays guitar and bass.\nStyle(vic, punk) ::: The only style of music Vic DiCara plays is punk music.\nBand(insideOut) ::: Inside Out was a band.\nConclusion:\nStyle(insideOut, punk) ::: Inside Out was a punk band.\n------\nProblem:\nThe only style of music Vic DiCara plays is punk music. Vic DiCara plays guitar and bass.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Vic DiCara plays in the style punk.\n###\nPredicates:\nPlays(x, y) ::: x plays y.\nStyle(x, y) ::: x plays in the style y.\nPremises:\nStyle(vic, punk) ::: The only style of music Vic DiCara plays is punk music.\nPlays(vic, guitar) ∧ Plays(vic, bass) ::: Vic DiCara plays guitar and bass.\nConclusion:\nStyle(vic, punk) ::: Vic DiCara plays in the style punk.\n------\nProblem:\nV"
    ]
  },
  {
    "id": "FOLIO_train_57",
    "context": "Vic DiCara plays guitar and bass. The only style of music Vic DiCara plays is punk music. Vic DiCara played in the band Inside Out.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A musician of Inside Out plays bass.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nPlays(x, y) ::: x plays y.\nStyle(x, y) ::: x plays in style y.\nBass(x) ::: x plays bass.\nPremises:\nPlays(vic, guitar) ∧ Plays(vic, bass) ::: Vic DiCara plays guitar and bass.\nStyle(vic, punk) ::: The only style of music Vic DiCara plays is punk music.\nPlays(insideOut, bass) ::: A musician of Inside Out plays bass.\nConclusion:\nBass(vic) ::: Vic DiCara plays bass.\n------\nProblem:\nThe only style of music Vic DiCara plays is punk music. Vic DiCara plays guitar and bass.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? A musician of Inside Out plays bass.\n###\nProblem:\nThe only style of music Vic DiCara plays is punk music. Vic DiCara plays guitar and bass.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? A musician of Inside Out plays bass.\n###\nProblem:\nThe only style of music Vic DiCara plays is punk music. Vic DiCara plays guitar and bass.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? A musician of Inside Out plays bass.\n##"
    ]
  },
  {
    "id": "FOLIO_train_58",
    "context": "All athletes are good at sports. All Olympic gold medal winners are good athletes. No scientists are good at sports. All Nobel laureates are scientists. Amy is good at sports or Amy is an Olympic gold medal winner. If Amy is not a Nobel laureate, then Amy is not an Olympic gold medal winner.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Amy is an athlete.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Olympic gold medal winner.\n###\nPredicates:\nAthlete(x) ::: x is an athlete.\nGoodAtSports(x) ::: x is good at sports.\nOlympicGoldMedalWinner(x) ::: x is an Olympic gold medal winner.\nScientist(x) ::: x is a scientist.\nNobelLaureate(x) ::: x is a Nobel laureate.\nPremises:\n∀x (Athlete(x) → GoodAtSports(x)) ::: All athletes are good at sports.\n∀x (OlympicGoldMedalWinner(x) → Athlete(x)) ::: All Olympic gold medal winners are good athletes.\n¬∀x (Scientist(x) → GoodAtSports(x)) ::: No scientists are good at sports.\n∀x (NobelLaureate(x) → Scientist(x)) ::: All Nobel laureates are scientists.\n(AmyGoodAtSports ⊕ AmyOlympicGoldMedalWinner) → (AmyGoodAtSports ∧ AmyOlympicGoldMedalWinner) ⊕ ¬(AmyGoodAtSports ∨ AmyOlympicGoldMedalWinner) ::: Amy is good at sports or Amy is an Olympic gold medal winner.\n¬(AmyNobelLaureate ∧"
    ]
  },
  {
    "id": "FOLIO_train_59",
    "context": "All athletes are good at sports. All Olympic gold medal winners are good athletes. No scientists are good at sports. All Nobel laureates are scientists. Amy is good at sports or Amy is an Olympic gold medal winner. If Amy is not a Nobel laureate, then Amy is not an Olympic gold medal winner.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Amy is neither a scientist nor an Olympic gold medal winner.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Olympic(x) ::: x is an Olympic.\nGold(x) ::: x is a gold medal.\nAthlete(x) ::: x is an athlete.\nScientist(x) ::: x is a scientist.\nNobel(x) ::: x is a Nobel laureate.\nPremises:\n∀x (Athlete(x) → GoodAtSports(x)) ::: All athletes are good at sports.\n∀x (Olympic(x) → Athlete(x)) ::: All Olympic are athletes.\n∀x (Olympic(x) → Gold(x)) ::: All Olympic are gold medal winners.\n¬∀x (Scientist(x) → GoodAtSports(x)) ::: No scientists are good at sports.\n∀x (Nobel(x) → Scientist(x)) ::: All Nobel laureates are scientists.\n¬Amy(scientist) ⊕ ¬Amy(nobel) ::: Amy is either a scientist or a Nobel laureate.\n¬Amy(nobel) → (Amy(scientist) ⊕ ¬Amy(scientist)) ::: If Amy is not a Nobel laureate, then Amy is either a scientist or not a scientist.\n¬Amy(olympic) → (Amy(olympic) ⊕ ¬Amy("
    ]
  },
  {
    "id": "FOLIO_train_60",
    "context": "All athletes are good at sports. All Olympic gold medal winners are good athletes. No scientists are good at sports. All Nobel laureates are scientists. Amy is good at sports or Amy is an Olympic gold medal winner. If Amy is not a Nobel laureate, then Amy is not an Olympic gold medal winner.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Amy is not an Olympic gold medal winner, then Amy is a Nobel laureate.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Olympic(x) ::: x is an Olympic.\nGold(x) ::: x is a gold medal.\nAthlete(x) ::: x is an athlete.\nScientist(x) ::: x is a scientist.\nNobel(x) ::: x is a Nobel laureate.\nPremises:\n∀x (Athlete(x) → GoodAtSports(x)) ::: All athletes are good at sports.\n∀x (Olympic(x) → Athlete(x)) ::: All Olympic are athletes.\n∀x (Olympic(x) → Gold(x)) ::: All Olympic are gold medal winners.\n¬∀x (Scientist(x) → GoodAtSports(x)) ::: No scientists are good at sports.\n∀x (Nobel(x) → Scientist(x)) ::: All Nobel laureates are scientists.\n¬Amy(OlympicGoldMedalWinner) ⊕ ¬Amy(NobelLaureate) ::: Amy is either an Olympic gold medal winner or a Nobel laureate.\n¬Amy(OlympicGoldMedalWinner) → Amy(NobelLaureate) ::: If Amy is not an Olympic gold medal winner, then Amy is a Nobel laureate.\nConclusion:\nAmy(NobelLaureate) ::: If Amy is not an Olympic gold medal winner, then Amy is a Nobel laureate.\n------"
    ]
  },
  {
    "id": "FOLIO_train_61",
    "context": "All fruits with the color red contain a large amount of vitamin C. All apples are fruits with the color red. All fruits containing a large amount of vitamin C are beneficial to people. No fruits that are beneficial to people are on a warning list. If K is not beneficial to people and also not an apple, then it is a fruit with the color red.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? K is an apple.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nFruit(x) ::: x is a fruit.\nColor(x, y) ::: x has color y.\nRed(x) ::: x is red.\nVitaminC(x) ::: x contains a large amount of vitamin C.\nBeneficial(x) ::: x is beneficial to people.\nWarningList(x) ::: x is on a warning list.\nPremises:\n∀x (Fruit(x) ∧ Color(x, red) → VitaminC(x)) ::: All fruits with the color red contain a large amount of vitamin C.\n∀x (Apple(x) ∧ Fruit(x) ∧ Color(x, red)) ::: All apples are fruits with the color red.\n∀x (VitaminC(x) → Beneficial(x)) ::: All fruits containing a large amount of vitamin C are beneficial to people.\n¬∃x (Beneficial(x) ∧ WarningList(x)) ::: No fruits that are beneficial to people are on a warning list.\n¬(Beneficial(k) ∧ Apple(k)) ⊕ (Beneficial(k) ∧ Apple(k)) ::: If K is not beneficial to people and also not an apple, then it is a fruit with the color red.\nConclusion:\nApple(k) ::: K is an apple.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffe"
    ]
  },
  {
    "id": "FOLIO_train_62",
    "context": "All fruits with the color red contain a large amount of vitamin C. All apples are fruits with the color red. All fruits containing a large amount of vitamin C are beneficial to people. No fruits that are beneficial to people are on a warning list. If K is not beneficial to people and also not an apple, then it is a fruit with the color red.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? K either contains a large amount of vitamin C or is on a warning list.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nFruit(x) ::: x is a fruit.\nColor(x, y) ::: x has color y.\nRed(x) ::: x is red.\nVitaminC(x) ::: x contains a large amount of vitamin C.\nBeneficial(x) ::: x is beneficial to people.\nWarningList(x) ::: x is on a warning list.\nPremises:\n∀x (Fruit(x) ∧ Color(x, red) → VitaminC(x)) ::: All fruits with the color red contain a large amount of vitamin C.\n∀x (Apple(x) ∧ Fruit(x) ∧ Color(x, red)) ::: All apples are fruits with the color red.\n∀x (VitaminC(x) → Beneficial(x)) ::: All fruits containing a large amount of vitamin C are beneficial to people.\n¬∃x (Beneficial(x) ∧ WarningList(x)) ::: No fruits that are beneficial to people are on a warning list.\n¬(Beneficial(k) ∧ Apple(k)) ⊕ (Beneficial(k) ∧ Apple(k)) ::: If K is not beneficial to people and also not an apple, then it is a fruit with the color red.\nConclusion:\nVitaminC(k) ⊕ WarningList(k) ::: K either contains a large amount of vitamin C or is on a"
    ]
  },
  {
    "id": "FOLIO_train_63",
    "context": "All fruits with the color red contain a large amount of vitamin C. All apples are fruits with the color red. All fruits containing a large amount of vitamin C are beneficial to people. No fruits that are beneficial to people are on a warning list. If K is not beneficial to people and also not an apple, then it is a fruit with the color red.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? K is either on a warning list or with the color red.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nFruit(x) ::: x is a fruit.\nColor(x, y) ::: x has color y.\nRed(x) ::: x is red.\nApple(x) ::: x is an apple.\nVitaminC(x) ::: x contains a large amount of vitamin C.\nBeneficial(x) ::: x is beneficial to people.\nWarningList(x) ::: x is on a warning list.\nPremises:\n∀x (Fruit(x) ∧ Color(x, red) → VitaminC(x)) ::: All fruits with the color red contain a large amount of vitamin C.\n∀x (Apple(x) ∧ Fruit(x) ∧ Color(x, red)) ::: All apples are fruits with the color red.\n∀x (VitaminC(x) → Beneficial(x)) ::: All fruits containing a large amount of vitamin C are beneficial to people.\n¬∃x (Beneficial(x) ∧ WarningList(x)) ::: No fruits that are beneficial to people are on a warning list.\n¬(Beneficial(k) ∧ Apple(k)) → (Beneficial(k) ∨ Apple(k)) ⊕ ¬(Beneficial(k) ∨ Apple(k)) ::: If K is not beneficial to people and also not an apple, then it is a fruit with the color red.\nConclusion:\nWarning"
    ]
  },
  {
    "id": "FOLIO_train_64",
    "context": "All fruits with the color red contain a large amount of vitamin C. All apples are fruits with the color red. All fruits containing a large amount of vitamin C are beneficial to people. No fruits that are beneficial to people are on a warning list. If K is not beneficial to people and also not an apple, then it is a fruit with the color red.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If K is either beneficial to people or on a warning list, then it is not red.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nFruit(x) ::: x is a fruit.\nRed(x) ::: x is a fruit with the color red.\nApple(x) ::: x is an apple.\nBeneficial(x) ::: x is beneficial to people.\nWarningList(x) ::: x is on a warning list.\nPremises:\n∀x (Red(x) → Fruit(x)) ::: All fruits with the color red contain a large amount of vitamin C.\n∀x (Apple(x) → Red(x)) ::: All apples are fruits with the color red.\n∀x (Beneficial(x) → Fruit(x) ∧ Contains(x, vitaminC)) ::: All fruits containing a large amount of vitamin C are beneficial to people.\n¬∃x (Beneficial(x) ∧ WarningList(x)) ::: No fruits that are beneficial to people are on a warning list.\n¬(Beneficial(k) ∨ WarningList(k)) → (Beneficial(k) ∨ WarningList(k)) ⊕ ¬(Beneficial(k) ∧ WarningList(k)) ::: If K is not beneficial to people and also not an apple, then it is a fruit with the color red.\nConclusion:\n¬(Beneficial(k) ∧ Red(k)) ::: If K is either beneficial to people or on a warning list, then it is not red.\n------"
    ]
  },
  {
    "id": "FOLIO_train_65",
    "context": "All fruits with the color red contain a large amount of vitamin C. All apples are fruits with the color red. All fruits containing a large amount of vitamin C are beneficial to people. No fruits that are beneficial to people are on a warning list. If K is not beneficial to people and also not an apple, then it is a fruit with the color red.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If K is either on a warning list or with the color red, then it is not beneficial to people and does not contain a large amount of vitamin C.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFruit(x) ::: x is a fruit.\nColor(x, y) ::: x has color y.\nRed(x) ::: x is red.\nApple(x) ::: x is an apple.\nBeneficial(x) ::: x is beneficial to people.\nWarningList(x) ::: x is on a warning list.\nPremises:\n∀x (Fruit(x) ∧ Color(x, red) → Contains(x, vitaminC)) ::: All fruits with the color red contain a large amount of vitamin C.\n∀x (Apple(x) ∧ Fruit(x) ∧ Color(x, red)) ::: All apples are fruits with the color red.\n∀x (Contains(x, vitaminC) → Beneficial(x)) ::: All fruits containing a large amount of vitamin C are beneficial to people.\n¬∃x (Beneficial(x) ∧ WarningList(x)) ::: No fruits that are beneficial to people are on a warning list.\n∃x (Fruit(x) ∧ Color(x, red) ∧ ¬Beneficial(x) ∧ ¬WarningList(x)) ::: If K is not beneficial to people and also not an apple, then it is a fruit with the color red.\nConclusion:\n(OnWarningList(k) ∨ Contains(k, vitaminC)) → (OnWarningList(k) ∧"
    ]
  },
  {
    "id": "FOLIO_train_66",
    "context": "Everyone working at Meta has a high income. If a person has a high income, then he/she will not take a bus to their destination. People will either take a bus or drive to their destination. Everyone who has a car will choose to drive to their destination. No students drive to their destination. James has a car or works at Meta.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James has a high income.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nHighIncome(x) ::: x has a high income.\nBus(x) ::: x takes a bus to their destination.\nDrive(x) ::: x drives to their destination.\nCar(x) ::: x has a car.\nStudent(x) ::: x is a student.\nPremises:\n∀x (HighIncome(x) → ¬Bus(x)) ::: If a person has a high income, then he/she will not take a bus to their destination.\n∀x (Bus(x) ⊕ Drive(x)) ::: People will either take a bus or drive to their destination.\n∀x (Car(x) → Drive(x)) ::: Everyone who has a car will choose to drive to their destination.\n¬(Student(james) ∧ Car(james)) ::: No students drive to their destination.\nConclusion:\nHighIncome(james) ::: James has a high income.\n------\nProblem:\nEveryone who is a student is a person who is not a teacher. No one who is a teacher is a person who is not a student. No one who is a student is a person who is not a teacher. No one who is a teacher is a person who is not a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? No one who is a teacher is a person who is not a student.\n###\nPredicates:\nStudent(x) ::: x is a student"
    ]
  },
  {
    "id": "FOLIO_train_67",
    "context": "Everyone working at Meta has a high income. If a person has a high income, then he/she will not take a bus to their destination. People will either take a bus or drive to their destination. Everyone who has a car will choose to drive to their destination. No students drive to their destination. James has a car or works at Meta.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James does not have a high income.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nHighIncome(x) ::: x has a high income.\nBus(x) ::: x takes a bus to their destination.\nDrive(x) ::: x drives to their destination.\nCar(x) ::: x has a car.\nStudent(x) ::: x is a student.\nPremises:\n∀x (HighIncome(x) → ¬Bus(x)) ::: If a person has a high income, then he/she will not take a bus to their destination.\n∀x (Bus(x) ⊕ Drive(x)) ::: People will either take a bus or drive to their destination.\n∀x (Car(x) → Drive(x)) ::: Everyone who has a car will choose to drive to their destination.\n¬Student(james) ⊕ Student(james) ::: James has a car or works at Meta.\nConclusion:\n¬HighIncome(james) ::: James does not have a high income.\n------\nProblem:\nEveryone who is a student is a person who is not a teacher. No one who is a teacher is a person who is not a student. No one who is a student is a person who is not a teacher. No one who is a teacher is a person who is not a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? No one who is a teacher is a person who is not a student.\n###\nPredicates:\nStudent(x) :::"
    ]
  },
  {
    "id": "FOLIO_train_68",
    "context": "Everyone working at Meta has a high income. If a person has a high income, then he/she will not take a bus to their destination. People will either take a bus or drive to their destination. Everyone who has a car will choose to drive to their destination. No students drive to their destination. James has a car or works at Meta.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James is a student.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nHighIncome(x) ::: x has a high income.\nBus(x) ::: x takes a bus to their destination.\nDrive(x) ::: x drives to their destination.\nCar(x) ::: x has a car.\nStudent(x) ::: x is a student.\nPremises:\n∀x (HighIncome(x) → ¬Bus(x)) ::: If a person has a high income, then he/she will not take a bus to their destination.\n∀x (Bus(x) ⊕ Drive(x)) ::: People will either take a bus or drive to their destination.\n∀x (Car(x) → Drive(x)) ::: Everyone who has a car will choose to drive to their destination.\n¬Student(james) ⊕ Student(james) ::: James has a car or works at Meta.\nConclusion:\nStudent(james) ::: James is a student.\n------\nProblem:\nEveryone who is a student is a person who is not a teacher. No one who is a teacher is a person who is not a student. No one who is a student is a person who is not a teacher. No one who is a teacher is a person who is not a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? No one who is a teacher is a person who is not a student.\n###\nPredicates:\nStudent(x) ::: x is a student."
    ]
  },
  {
    "id": "FOLIO_train_69",
    "context": "Everyone working at Meta has a high income. If a person has a high income, then he/she will not take a bus to their destination. People will either take a bus or drive to their destination. Everyone who has a car will choose to drive to their destination. No students drive to their destination. James has a car or works at Meta.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James drives to his destination or he is a student.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nHighIncome(x) ::: x has a high income.\nBus(x) ::: x takes a bus to their destination.\nDrive(x) ::: x drives to their destination.\nCar(x) ::: x has a car.\nStudent(x) ::: x is a student.\nPremises:\n∀x (HighIncome(x) → ¬Bus(x)) ::: If a person has a high income, then he/she will not take a bus to their destination.\n∀x (Bus(x) ⊕ Drive(x)) ::: People will either take a bus or drive to their destination.\n∀x (Car(x) → Drive(x)) ::: Everyone who has a car will choose to drive to their destination.\n¬Student(james) ⊕ Student(james) ::: James has a car or works at Meta.\nConclusion:\nDrive(james) ⊕ Student(james) ::: James drives to his destination or he is a student.\n------\nProblem:\nEveryone who is a student is a person who is not a teacher. No one who is a teacher is a person who is not a student. No one who is a student is a person who is not a teacher. No one who is a teacher is a person who is not a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? No one who is a teacher is a person who is not a student.\n###\nPredicates"
    ]
  },
  {
    "id": "FOLIO_train_70",
    "context": "Everyone working at Meta has a high income. If a person has a high income, then he/she will not take a bus to their destination. People will either take a bus or drive to their destination. Everyone who has a car will choose to drive to their destination. No students drive to their destination. James has a car or works at Meta.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James either drives to their destination or is a student.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nHighIncome(x) ::: x has a high income.\nBus(x) ::: x takes a bus to their destination.\nDrive(x) ::: x drives to their destination.\nCar(x) ::: x has a car.\nStudent(x) ::: x is a student.\nPremises:\n∀x (HighIncome(x) → ¬Bus(x)) ::: If a person has a high income, then he/she will not take a bus to their destination.\n∀x (Bus(x) ⊕ Drive(x)) ::: People will either take a bus or drive to their destination.\n∀x (Car(x) → Drive(x)) ::: Everyone who has a car will choose to drive to their destination.\n¬Student(james) ⊕ Student(james) ::: James has a car or works at Meta.\nConclusion:\nDrive(james) ⊕ Student(james) ::: James either drives to their destination or is a student.\n------"
    ]
  },
  {
    "id": "FOLIO_train_71",
    "context": "Everyone working at Meta has a high income. If a person has a high income, then he/she will not take a bus to their destination. People will either take a bus or drive to their destination. Everyone who has a car will choose to drive to their destination. No students drive to their destination. James has a car or works at Meta.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If James either drives to his destination or is a student, then he has a high income and is a student.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nHighIncome(x) ::: x has a high income.\nBus(x) ::: x takes a bus to their destination.\nDrive(x) ::: x drives to their destination.\nCar(x) ::: x has a car.\nStudent(x) ::: x is a student.\nPremises:\n∀x (HighIncome(x) → ¬Bus(x)) ::: If a person has a high income, then he/she will not take a bus to their destination.\n∀x (Bus(x) ⊕ Drive(x)) ::: People will either take a bus or drive to their destination.\n∀x (Drive(x) → Car(x)) ::: Everyone who has a car will choose to drive to their destination.\n¬Student(james) ⊕ Student(james) ::: James has a car or works at Meta.\nConclusion:\n(Drive(james) ⊕ Student(james)) → (HighIncome(james) ∧ Student("
    ]
  },
  {
    "id": "FOLIO_train_72",
    "context": "Students either go to the park or go to the movies. No student who enjoys nature has free time during the weekend. All students who go to the movies enjoy nature. All students who do not have class during the weekend have free time during the weekend. All students not in summer camp do not have class during the weekend. James does not have class during the weekend.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James is in summer camp.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nGoesToPark(x) ::: x goes to the park.\nGoesToMovies(x) ::: x goes to the movies.\nEnjoysNature(x) ::: x enjoys nature.\nHasFreeTime(x) ::: x has free time.\nClass(x, y) ::: x has class y.\nSummerCamp(x) ::: x is in summer camp.\nPremises:\n∀x (GoesToPark(x) ⊕ GoesToMovies(x)) ::: Students either go to the park or go to the movies.\n∀x (EnjoysNature(x) → ¬HasFreeTime(x)) ::: No student who enjoys nature has free time during the weekend.\n∀x (GoesToMovies(x) → EnjoysNature(x)) ::: All students who go to the movies enjoy nature.\n∀x (HasFreeTime(x) → ¬Class(x"
    ]
  },
  {
    "id": "FOLIO_train_73",
    "context": "Students either go to the park or go to the movies. No student who enjoys nature has free time during the weekend. All students who go to the movies enjoy nature. All students who do not have class during the weekend have free time during the weekend. All students not in summer camp do not have class during the weekend. James does not have class during the weekend.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James goes to the park or is in summer camp.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nGoesToPark(x) ::: x goes to the park.\nGoesToMovies(x) ::: x goes to the movies.\nEnjoysNature(x) ::: x enjoys nature.\nHasFreeTime(x) ::: x has free time.\nClass(x, y) ::: x has class in year y.\nSummerCamp(x) ::: x is in summer camp.\nPremises:\n∀x (GoesToPark(x) ⊕ GoesToMovies(x)) ::: Students either go to the park or go to the movies.\n∀x (EnjoysNature(x) → ¬HasFreeTime(x)) ::: No student who enjoys nature has free time during the weekend.\n∀x (GoesToMovies(x) → EnjoysNature(x)) ::: All students who go to the movies enjoy nature.\n∀x (HasFreeTime(x) → ¬Class"
    ]
  },
  {
    "id": "FOLIO_train_74",
    "context": "No television stars are certified public accountants. All certified public accountants have good business sense.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? All television stars have good business sense.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nTelevisionStar(x) ::: x is a television star.\nCertifiedPublicAccountant(x) ::: x is a certified public accountant.\nGoodBusinessSense(x) ::: x has good business sense.\nPremises:\n∀x (TelevisionStar(x) → ¬CertifiedPublicAccountant(x)) ::: No television stars are certified public accountants.\n∀x (CertifiedPublicAccountant(x) → GoodBusinessSense(x)) ::: All certified public accountants have good business sense.\nConclusion:\nGoodBusinessSense(x) ::: x has good business sense.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug"
    ]
  },
  {
    "id": "FOLIO_train_75",
    "context": "Some students good at math are good at chemistry. All students good at chemistry enjoy conducting experiments. All students that enjoy conducting experiments are good at planning. No student good at planning is awarded the Dean's List. James is either good at chemistry and awarded the Dean's List, or neither good at chemistry nor awarded the Dean's List.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James is good at planning.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nGoodAtMath(x) ::: x is good at math.\nGoodAtChemistry(x) ::: x is good at chemistry.\nEnjoyConductingExperiments(x) ::: x enjoys conducting experiments.\nGoodAtPlanning(x) ::: x is good at planning.\nAwardedDeansList(x) ::: x is awarded the Dean's List.\nPremises:\n∀x (GoodAtMath(x) → GoodAtChemistry(x)) ::: Some students good at math are good at chemistry.\n∀x (EnjoyConductingExperiments(x) → GoodAtPlanning(x)) ::: All students good at chemistry enjoy conducting experiments.\n∀x (GoodAtPlanning(x) → AwardedDeansList(x)) ::: All students that enjoy conducting experiments are good at planning.\n¬AwardedDeansList(james) ⊕ (GoodAtChemistry(james) ∧ Awarded"
    ]
  },
  {
    "id": "FOLIO_train_76",
    "context": "Some students good at math are good at chemistry. All students good at chemistry enjoy conducting experiments. All students that enjoy conducting experiments are good at planning. No student good at planning is awarded the Dean's List. James is either good at chemistry and awarded the Dean's List, or neither good at chemistry nor awarded the Dean's List.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James is either good at planning or good at math.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nGoodAtMath(x) ::: x is good at math.\nGoodAtChemistry(x) ::: x is good at chemistry.\nEnjoyConductingExperiments(x) ::: x enjoys conducting experiments.\nGoodAtPlanning(x) ::: x is good at planning.\nAwardedDeansList(x) ::: x is awarded the Dean's List.\nPremises:\n∀x (GoodAtMath(x) → GoodAtChemistry(x)) ::: Some students good at math are good at chemistry.\n∀x (EnjoyConductingExperiments(x) → GoodAtPlanning(x)) ::: All students good at chemistry enjoy conducting experiments.\n∀x (GoodAtPlanning(x) → AwardedDeansList(x)) ::: All students that enjoy conducting experiments are good at planning.\n¬AwardedDeansList(james) ⊕ (GoodAtChemistry(james) ∧ Awarded"
    ]
  },
  {
    "id": "FOLIO_train_77",
    "context": "Some students good at math are good at chemistry. All students good at chemistry enjoy conducting experiments. All students that enjoy conducting experiments are good at planning. No student good at planning is awarded the Dean's List. James is either good at chemistry and awarded the Dean's List, or neither good at chemistry nor awarded the Dean's List.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James is either good at chemistry or good at math.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nGoodAtMath(x) ::: x is good at math.\nGoodAtChemistry(x) ::: x is good at chemistry.\nEnjoyConductingExperiments(x) ::: x enjoys conducting experiments.\nGoodAtPlanning(x) ::: x is good at planning.\nAwardedDeansList(x) ::: x is awarded the Dean's List.\nPremises:\n∀x (GoodAtMath(x) → GoodAtChemistry(x)) ::: Some students good at math are good at chemistry.\n∀x (GoodAtChemistry(x) → EnjoyConductingExperiments(x)) ::: All students good at chemistry enjoy conducting experiments.\n∀x (EnjoyConductingExperiments(x) → GoodAtPlanning(x)) ::: All students that enjoy conducting experiments are good at planning.\n¬(GoodAtPlanning(james) ∧ AwardedDeansList(james)) :"
    ]
  },
  {
    "id": "FOLIO_train_78",
    "context": "Some students good at math are good at chemistry. All students good at chemistry enjoy conducting experiments. All students that enjoy conducting experiments are good at planning. No student good at planning is awarded the Dean's List. James is either good at chemistry and awarded the Dean's List, or neither good at chemistry nor awarded the Dean's List.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If James is good at Chemistry or gets awarded the Dean's List, then James is either good at planning or good at math.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGoodAtMath(x) ::: x is good at math.\nGoodAtChemistry(x) ::: x is good at chemistry.\nEnjoy(x, y) ::: x enjoys y.\nGoodAtPlanning(x) ::: x is good at planning.\nAwarded(x, y) ::: x is awarded y.\nDean'sList(x) ::: x is awarded the Dean's List.\nPremises:\n∀x (GoodAtMath(x) → GoodAtChemistry(x)) ::: Some students good at math are good at chemistry.\n∀x (GoodAtChemistry(x) → Enjoy(x, conductingExperiments)) ::: All students good at chemistry enjoy conducting experiments.\n∀x (Enjoy(x, conductingExperiments) → GoodAtPlanning(x)) ::: All students that enjoy conducting experiments are good at planning.\n¬(GoodAtPlanning(james) ∧ Awarded"
    ]
  },
  {
    "id": "FOLIO_train_79",
    "context": "If a Leetcode problem is at the easy level, then its AC rate is lower than 20 percent. All Leetcode problems that are recommended to novices are easy. A Leetode problem is either easy or hard. Leetcode problems that are starred by more than 1 thousand users are hard. 2Sum is recommended to novices. 4Sum is starred by more than 1 thousand users.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? 2Sum is a Leetcode problem with an easy level.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEasy(x) ::: x is a Leetcode problem with an easy level.\nNovice(x) ::: x is recommended to novices.\nRecommend(x, y) ::: x is recommended to y.\nACRate(x) ::: x is a Leetcode problem with an AC rate of y.\nStar(x, y) ::: x is starred by y users.\nRecommended(x, y) ::: x is recommended to y.\nPremises:\nEasy(2Sum) ∧ Novice(2Sum) ::: 2Sum is recommended to novices.\nEasy(4Sum) ∧ Star(4Sum, 1000) ::: 4Sum is starred by more than 1 thousand users.\nAll(x, y) ::: x is a Leetcode problem that is either easy or hard.\nAll(x, y) ::: x is recommended to novices.\nAll(x, y) ::: x is starred by more"
    ]
  },
  {
    "id": "FOLIO_train_80",
    "context": "If a Leetcode problem is at the easy level, then its AC rate is lower than 20 percent. All Leetcode problems that are recommended to novices are easy. A Leetode problem is either easy or hard. Leetcode problems that are starred by more than 1 thousand users are hard. 2Sum is recommended to novices. 4Sum is starred by more than 1 thousand users.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? 4Sum is a Leetcode problem recommended to the novice.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nEasy(x) ::: x is an easy Leetcode problem.\nHard(x) ::: x is a hard Leetcode problem.\nNovice(x) ::: x is a novice.\nRecommend(x, y) ::: x is recommended to y.\nStar(x, y) ::: x is starred by y.\nACRate(x) ::: x is the AC rate of x.\nPremises:\nEasy(2Sum) ∧ Novice(2Sum) ::: 2Sum is an easy Leetcode problem recommended to the novice.\nEasy(4Sum) ∧ Star(4Sum, 1000) ::: 4Sum is a hard Leetcode problem starred by more than 1 thousand users.\nHard(4Sum) ∨ Hard(2Sum) ::: A Leetode problem is either easy or hard.\nHard(4Sum) ∧ Star(4Sum, 1000) ::: 4Sum is a hard Leetcode problem starred by more than 1 thousand users.\nConclusion:\nRecommend(4Sum, novice) ::: 4Sum is a Leetcode problem recommended to the novice.\n------"
    ]
  },
  {
    "id": "FOLIO_train_81",
    "context": "If a Leetcode problem is at the easy level, then its AC rate is lower than 20 percent. All Leetcode problems that are recommended to novices are easy. A Leetode problem is either easy or hard. Leetcode problems that are starred by more than 1 thousand users are hard. 2Sum is recommended to novices. 4Sum is starred by more than 1 thousand users.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? 2Sum has an AC rate higher than 20 percent.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nEasy(x) ::: x is an easy Leetcode problem.\nHard(x) ::: x is a hard Leetcode problem.\nNovice(x) ::: x is a novice.\nRecommend(x, y) ::: x is recommended to y.\nStar(x, y) ::: x is starred by y.\nACRate(x) ::: x is the AC rate of x.\nPremises:\nEasy(2Sum) ∧ Novice(2Sum) ∧ Recommend(2Sum, novice) ::: If a Leetcode problem is at the easy level, then its AC rate is lower than 20 percent.\nAll(x, y) ::: x is a Leetcode problem and y is a novice.\nEasy(x) ∨ Hard(x) ::: A Leetcode problem is either easy or hard.\nStar(4Sum, 1000) ::: Leetcode problems that are starred by more than 1 thousand users are hard.\n2Sum ∧ Novice(2Sum) ∧ Recommend(2Sum, novice) ::: 2Sum is recommended to novices.\nConclusion:\nACRate(2Sum)"
    ]
  },
  {
    "id": "FOLIO_train_82",
    "context": "All rental cars cost the renter money. Whenever Sarah goes to Vermont, Sarah drives there. For someone who does not own a car to drive somewhere, they must either borrow a car or rent a car. Sarah doesn’t own a car. Sarah never borrows a car to go camping. Sarah is going to go camping in Vermont this weekend. To go camping somewhere, you must go to that place.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Sarah will spend money this weekend.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nRentalCar(x) ::: x is a rental car.\nCost(x, y) ::: x costs y.\nDrive(x, y) ::: x drives to y.\nBorrow(x, y) ::: x borrows y.\nOwn(x, y) ::: x owns y.\nCamping(x) ::: x is camping.\nGo(x, y) ::: x goes to y.\nPremises:\n∀x (RentalCar(x) → Cost(x, money)) ::: All rental cars cost the renter money.\nDrive(sarah, vermont) ::: Whenever Sarah goes to Vermont, Sarah drives there.\n∃x (Borrow(x, car) ⊕ Rent(x, car)) ::: For someone who does not own a car to drive somewhere, they must either borrow a car or rent a car.\n¬Own(sarah, car) ::: Sarah doesn’t own a car.\n¬Borrow(sarah, car) ::: Sarah never borrows a car to go camping.\nCamping(sarah) ::: Sarah is going to go camping in Vermont this weekend.\nConclusion:"
    ]
  },
  {
    "id": "FOLIO_train_83",
    "context": "All people who attend weddings are getting married or have friends who are getting married. No preteens and other young children are getting married or have friends who are getting married. If people enjoy celebrating life milestone events with other people, then they attend weddings. If people are fond of large organized group functions, then they enjoy celebrating life milestone events with other people. All people who are outgoing and very spirited are fond of large organized group functions. If Carol is not both a pre-teen or other young child and attends weddings, then Carol is not getting married or has friends who are getting married.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Carol is outgoing and very spirited.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nAttend(x, y) ::: x attends y.\nGettingMarried(x) ::: x is getting married.\nFriend(x, y) ::: x is a friend of y.\nPreteen(x) ::: x is a preteen.\nOtherYoungChild(x) ::: x is other young child.\nEnjoy(x, y) ::: x enjoys y.\nCelebrate(x, y) ::: x celebrates y.\nLifeMilestoneEvent(x) ::: x is a life milestone event.\nFunction(x) ::: x is a function.\nOrganized(x) ::: x is organized.\nSpirited(x) ::: x is spirited.\nPremises:\n∀x (Attend(x, wedding) → (GettingMarried(x) ∨ Friend(x, gettingMarried))) ::: All people who attend weddings are getting married or have friends who are getting married.\n∀x (Preteen(x) ⊕ OtherYoungChild(x)) ∧ ¬(GettingMarried(x) ∨ Friend(x, gettingMarried)) ::: No preteens and other young children are getting married or have friends who are"
    ]
  },
  {
    "id": "FOLIO_train_84",
    "context": "All people who attend weddings are getting married or have friends who are getting married. No preteens and other young children are getting married or have friends who are getting married. If people enjoy celebrating life milestone events with other people, then they attend weddings. If people are fond of large organized group functions, then they enjoy celebrating life milestone events with other people. All people who are outgoing and very spirited are fond of large organized group functions. If Carol is not both a pre-teen or other young child and attends weddings, then Carol is not getting married or has friends who are getting married.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Carol is either a preteen or other young child.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nAttend(x, y) ::: x attends y.\nGettingMarried(x) ::: x is getting married.\nFriend(x, y) ::: x is a friend of y.\nPreteen(x) ::: x is a preteen.\nOtherYoungChild(x) ::: x is other young child.\nEnjoy(x, y) ::: x enjoys y.\nCelebrate(x, y) ::: x celebrates y.\nLifeMilestoneEvent(x) ::: x is a life milestone event.\nFunction(x) ::: x is a function.\nOrganized(x) ::: x is organized.\nSpirited(x) ::: x is spirited.\nPremises:\n∀x (Attend(x, wedding) → (GettingMarried(x) ⊕ Friend(x, gettingMarried))) ::: All people who attend weddings are getting married or have friends who are getting married.\n∀x (Preteen(x) ⊕ OtherYoungChild(x)) ⊕ ¬(Preteen(x) ∧ OtherYoungChild(x)) ::: No preteens and other young children are getting married or have friends who are getting married."
    ]
  },
  {
    "id": "FOLIO_train_85",
    "context": "All people who attend weddings are getting married or have friends who are getting married. No preteens and other young children are getting married or have friends who are getting married. If people enjoy celebrating life milestone events with other people, then they attend weddings. If people are fond of large organized group functions, then they enjoy celebrating life milestone events with other people. All people who are outgoing and very spirited are fond of large organized group functions. If Carol is not both a pre-teen or other young child and attends weddings, then Carol is not getting married or has friends who are getting married.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Carol neither enjoys celebrating life milestone events with other people nor is outgoing and very spirited.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAttend(x, y) ::: x attends y.\nGettingMarried(x) ::: x is getting married.\nFriend(x, y) ::: x is a friend of y.\nPreteen(x) ::: x is a preteen.\nOtherYoungChild(x) ::: x is other young child.\nEnjoy(x, y) ::: x enjoys y.\nCelebrate(x, y) ::: x celebrates y.\nLifeMilestoneEvent(x) ::: x is a life milestone event.\nMilestoneEvent(x) ::: x is a milestone event.\nFunction(x) ::: x is a function.\nOrganized(x) ::: x is organized.\nGroup(x) ::: x is a group.\nSpirited(x) ::: x is spirited.\nFond(x, y) ::: x is fond of y.\nPremises:\n∀x (Attend(x, wedding) → (GettingMarried(x) ⊕ Friend(x, gettingMarried))) ::: All people who attend weddings are getting married or have friends who are getting married.\n∀x (Preteen(x) ⊕ OtherYoungChild"
    ]
  },
  {
    "id": "FOLIO_train_86",
    "context": "All Republicans are anti-abortion. Either Republicans or Democrats. No Democrats are conservative. Either conservative or liberal. A U.S government official is either conservative or a Republican.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A U.S government official is a Democrat.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nRepublican(x) ::: x is a Republican.\nAntiAbortion(x) ::: x is anti-abortion.\nDemocrat(x) ::: x is a Democrat.\nConservative(x) ::: x is conservative.\nLiberal(x) ::: x is liberal.\nPremises:\n∀x (Republican(x) → AntiAbortion(x)) ::: All Republicans are anti-abortion.\n∀x (Republican(x) ⊕ Democrat(x)) ::: People either Republicans or Democrats.\n∀x (Democrat(x) → ¬Conservative(x)) ::: No Democrats are conservative.\n∀x (Conservative(x) ⊕ Liberal(x)) ::: Either conservative or liberal.\n∀x (U.SGovernmentOfficial(x) → Conservative(x) ⊕ Republican(x)) ::: A U.S government official is either conservative or a Republican.\nConclusion:\nDemocrat(x) ::: A U.S government official is a Democrat.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink"
    ]
  },
  {
    "id": "FOLIO_train_87",
    "context": "All Republicans are anti-abortion. Either Republicans or Democrats. No Democrats are conservative. Either conservative or liberal. A U.S government official is either conservative or a Republican.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A U.S government official is anti-abortion and a liberal.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nRepublican(x) ::: x is a Republican.\nAntiAbortion(x) ::: x is anti-abortion.\nDemocrat(x) ::: x is a Democrat.\nConservative(x) ::: x is a conservative.\nLiberal(x) ::: x is a liberal.\nPremises:\n∀x (Republican(x) → AntiAbortion(x)) ::: All Republicans are anti-abortion.\n∀x (Republican(x) ⊕ Democrat(x)) ::: People either Republicans or Democrats.\n∀x (Democrat(x) → ¬Conservative(x)) ::: No Democrats are conservative.\n∃x (Conservative(x) ⊕ Liberal(x)) ::: Either conservative or liberal.\nConclusion:\nAntiAbortion(u.s.governmentOfficial) ∧ Liberal(u.s.governmentOfficial) ::: A U.S government official is anti-abortion and a liberal.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffe"
    ]
  },
  {
    "id": "FOLIO_train_88",
    "context": "All Republicans are anti-abortion. Either Republicans or Democrats. No Democrats are conservative. Either conservative or liberal. A U.S government official is either conservative or a Republican.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A U.S government official is either anti-abortion or a liberal.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nRepublican(x) ::: x is a Republican.\nAntiAbortion(x) ::: x is anti-abortion.\nDemocrat(x) ::: x is a Democrat.\nConservative(x) ::: x is a conservative.\nLiberal(x) ::: x is a liberal.\nPremises:\n∀x (Republican(x) → AntiAbortion(x)) ::: All Republicans are anti-abortion.\n∀x (Republican(x) ⊕ Democrat(x)) ::: People either Republicans or Democrats.\n∀x (Democrat(x) → ¬Conservative(x)) ::: No Democrats are conservative.\n∃x (Conservative(x) ⊕ Liberal(x)) ::: Either conservative or liberal.\n∀x (U.S.GovernmentOfficial(x) → Conservative(x) ⊕ Republican(x)) ::: A U.S government official is either conservative or a Republican.\nConclusion:\nAntiAbortion(u.s.governmentOfficial) ⊕ Liberal(u.s.governmentOfficial) ::: A U.S government official is either"
    ]
  },
  {
    "id": "FOLIO_train_89",
    "context": "All Republicans are anti-abortion. Either Republicans or Democrats. No Democrats are conservative. Either conservative or liberal. A U.S government official is either conservative or a Republican.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If a U.S government official is not anti-abortion and a Republican, then a U.S government official is neither anti-abortion nor a liberal.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nRepublican(x) ::: x is a Republican.\nAntiAbortion(x) ::: x is anti-abortion.\nConservative(x) ::: x is conservative.\nLiberal(x) ::: x is liberal.\nPremises:\n∀x (Republican(x) → AntiAbortion(x)) ::: All Republicans are anti-abortion.\n∀x (Republican(x) ⊕ Democrat(x)) ::: People either Republicans or Democrats.\n∀x (Democrat(x) → ¬Conservative(x)) ::: No Democrats are conservative.\n∀x (Conservative(x) ⊕ Liberal(x)) ::: Either conservative or liberal.\n∀x (U.S.GovernmentOfficial(x) → Conservative(x) ⊕ Republican(x)) ::: A U.S government official is either conservative or a Republican.\nConclusion:\n¬(AntiAbortion(x) ∧ Republican(x)) → (AntiAbortion(x) ∧ Republican(x)) ⊕ ¬(AntiAbortion(x) ∨ Republican(x)) ::: If a U."
    ]
  },
  {
    "id": "FOLIO_train_90",
    "context": "All Republicans are anti-abortion. Either Republicans or Democrats. No Democrats are conservative. Either conservative or liberal. A U.S government official is either conservative or a Republican.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If a U.S government official is anti-abortion and a liberal, then a U.S government official is either a Republican or a liberal.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nRepublican(x) ::: x is a Republican.\nAntiAbortion(x) ::: x is anti-abortion.\nDemocrat(x) ::: x is a Democrat.\nConservative(x) ::: x is a conservative.\nLiberal(x) ::: x is a liberal.\nPremises:\n∀x (Republican(x) → AntiAbortion(x)) ::: All Republicans are anti-abortion.\n∀x (Democrat(x) ⊕ Republican(x)) ::: Either Republicans or Democrats.\n∀x (Democrat(x) → ¬Conservative(x)) ::: No Democrats are conservative.\n∀x (Conservative(x) ⊕ Liberal(x)) ::: Either conservative or liberal.\nConclusion:\nAntiAbortion(x) ∧ Liberal(x) → (Republican(x) ⊕ Liberal(x)) ::: If a U.S government official is anti-abortion and a liberal, then a U.S government official is either a Republican or a liberal.\n------"
    ]
  },
  {
    "id": "FOLIO_train_91",
    "context": "All Republicans are anti-abortion. Either Republicans or Democrats. No Democrats are conservative. Either conservative or liberal. A U.S government official is either conservative or a Republican.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If a U.S government official is either a conservative or anti-abortion, then a U.S government official is either a conservative and a liberal or neither a conservative nor a liberal.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRepublican(x) ::: x is a Republican.\nAntiAbortion(x) ::: x is anti-abortion.\nDemocrat(x) ::: x is a Democrat.\nConservative(x) ::: x is a conservative.\nLiberal(x) ::: x is a liberal.\nPremises:\n∀x (Republican(x) → AntiAbortion(x)) ::: All Republicans are anti-abortion.\n∀x (Republican(x) ⊕ Democrat(x)) ::: People either Republicans or Democrats.\n∀x (Democrat(x) → ¬Conservative(x)) ::: No Democrats are conservative.\n∀x (Conservative(x) ⊕ Liberal(x)) ::: Either conservative or liberal.\n∀x (U.S.GovernmentOfficial(x) → Conservative(x) ⊕ Republican(x)) ::: A U.S government official is either conservative or a Republican.\nConclusion:\n(Conservative(x) ∧ AntiAbortion(x)) ⊕"
    ]
  },
  {
    "id": "FOLIO_train_92",
    "context": "All Republicans are anti-abortion. Either Republicans or Democrats. No Democrats are conservative. Either conservative or liberal. A U.S government official is either conservative or a Republican.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If a U.S government official is either a conservative or anti-abortion, then a U.S government official is neither a Democrat or a liberal.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nRepublican(x) ::: x is a Republican.\nAntiAbortion(x) ::: x is anti-abortion.\nDemocrat(x) ::: x is a Democrat.\nConservative(x) ::: x is conservative.\nLiberal(x) ::: x is liberal.\nPremises:\n∀x (Republican(x) → AntiAbortion(x)) ::: All Republicans are anti-abortion.\n∀x (Republican(x) ⊕ Democrat(x)) ::: People either Republicans or Democrats.\n∀x (Democrat(x) → ¬Conservative(x)) ::: No Democrats are conservative.\n∀x (Conservative(x) ⊕ Liberal(x)) ::: Either conservative or liberal.\n∀x (U.SGovernmentOfficial(x) → Conservative(x) ⊕ Republican(x)) ::: A U.S government official is either conservative or a Republican.\nConclusion:\n¬(AntiAbortion(x) ∧ Democrat(x)) → (Anti"
    ]
  },
  {
    "id": "FOLIO_train_93",
    "context": "All Republicans are anti-abortion. Either Republicans or Democrats. No Democrats are conservative. Either conservative or liberal. A U.S government official is either conservative or a Republican.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If an U.S government official is anti-abortion or a liberal, then a U.S government official is either anti-abortion or a liberal.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nRepublican(x) ::: x is a Republican.\nAntiAbortion(x) ::: x is anti-abortion.\nDemocrat(x) ::: x is a Democrat.\nConservative(x) ::: x is conservative.\nLiberal(x) ::: x is liberal.\nU.SGovernmentOfficial(x) ::: x is a U.S government official.\nPremises:\n∀x (Republican(x) → AntiAbortion(x)) ::: All Republicans are anti-abortion.\n∀x (Republican(x) ⊕ Democrat(x)) ::: Either Republicans or Democrats.\n∀x (Democrat(x) → ¬Conservative(x)) ::: No Democrats are conservative.\n∀x (Conservative(x) ⊕ Liberal(x)) ::: Either conservative or liberal.\n∀x (U.SGovernmentOfficial(x) → Conservative(x) ⊕ Liberal(x)) ::: A U.S government official is either conservative or a liberal.\nConclusion:"
    ]
  },
  {
    "id": "FOLIO_train_94",
    "context": "All advocates of high tariff rates are Republicans. Some Republicans are not conservatives.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Some conservatives are advocates of high tariff rates.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nAdvocate(x, y) ::: x is an advocate of y.\nRepublican(x) ::: x is a Republican.\nConservative(x) ::: x is a conservative.\nPremises:\n∀x (Republican(x) → Advocate(x, highTariffRate)) ::: All advocates of high tariff rates are Republicans.\n∃x (Republican(x) ∧ ¬Conservative(x)) ::: Some Republicans are not conservatives.\nConclusion:\n∃x (Conservative(x) ∧ Advocate(x, highTariffRate)) ::: Some conservatives are advocates of high tariff rates.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is"
    ]
  },
  {
    "id": "FOLIO_train_95",
    "context": "No athletes are slow runners. All professional basketball players are athletes. All NBA players are professional basketball players. All Knicks players are NBA players. Jim is either not a professional basketball player or not a slow runner.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jim is a Knicks player.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nAthlete(x) ::: x is an athlete.\nSlowRunner(x) ::: x is a slow runner.\nProfessionalBasketballPlayer(x) ::: x is a professional basketball player.\nNBAPlayer(x) ::: x is an NBA player.\nKnicksPlayer(x) ::: x is a Knicks player.\nPremises:\n¬Athlete(jim) ⊕ Athlete(jim) ::: Jim is either not an athlete or an athlete.\n∀x (ProfessionalBasketballPlayer(x) → Athlete(x)) ::: All professional basketball players are athletes.\n∀x (NBAPlayer(x) → ProfessionalBasketballPlayer(x)) ::: All NBA players are professional basketball players.\n∀x (KnicksPlayer(x) → NBAPlayer(x)) ::: All Knicks players are NBA players.\n¬ProfessionalBasketballPlayer(jim) ⊕ ProfessionalBasketballPlayer(jim) ::: Jim is either not a professional basketball player or a professional basketball player.\n¬SlowRunner(jim) ⊕ SlowRunner(jim) :"
    ]
  },
  {
    "id": "FOLIO_train_96",
    "context": "No athletes are slow runners. All professional basketball players are athletes. All NBA players are professional basketball players. All Knicks players are NBA players. Jim is either not a professional basketball player or not a slow runner.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jim is not a Knicks player.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nAthlete(x) ::: x is an athlete.\nSlowRunner(x) ::: x is a slow runner.\nProfessionalBasketballPlayer(x) ::: x is a professional basketball player.\nNBAPlayer(x) ::: x is an NBA player.\nKnicksPlayer(x) ::: x is a Knicks player.\nPremises:\n¬Athlete(jim) ∨ SlowRunner(jim) ::: Jim is either not an athlete or not a slow runner.\n∀x (ProfessionalBasketballPlayer(x) → Athlete(x)) ::: All professional basketball players are athletes.\n∀x (NBAPlayer(x) → ProfessionalBasketballPlayer(x)) ::: All NBA players are professional basketball players.\n∀x (KnicksPlayer(x) → NBAPlayer(x)) ::: All Knicks players are NBA players.\n¬ProfessionalBasketballPlayer(jim) ∨ ¬SlowRunner(jim) ::: Jim is either not a professional basketball player or not a slow runner.\nConclusion:\n¬KnicksPlayer(jim) :::"
    ]
  },
  {
    "id": "FOLIO_train_97",
    "context": "No athletes are slow runners. All professional basketball players are athletes. All NBA players are professional basketball players. All Knicks players are NBA players. Jim is either not a professional basketball player or not a slow runner.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jim is an athlete.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nAthlete(x) ::: x is an athlete.\nSlowRunner(x) ::: x is a slow runner.\nProfessionalBasketballPlayer(x) ::: x is a professional basketball player.\nNBAPlayer(x) ::: x is an NBA player.\nKnicksPlayer(x) ::: x is a Knicks player.\nPremises:\n∀x (Athlete(x) → ¬SlowRunner(x)) ::: No athletes are slow runners.\n∀x (ProfessionalBasketballPlayer(x) → Athlete(x)) ::: All professional basketball players are athletes.\n∀x (NBAPlayer(x) → ProfessionalBasketballPlayer(x)) ::: All NBA players are professional basketball players.\n∀x (KnicksPlayer(x) → NBAPlayer(x)) ::: All Knicks players are NBA players.\n¬(ProfessionalBasketballPlayer(jim) ∨ SlowRunner(jim)) ::: Jim is either not a professional basketball player or not a slow runner.\nConclusion:\nAthlete(jim) ::: Jim is an athlete."
    ]
  },
  {
    "id": "FOLIO_train_98",
    "context": "All kids love animals. All toddlers are kids. If someone loves animals, then they are not bad. All pirates are bad. If Nancy is not a pirate, then Nancy loves animals. If Nancy is not a toddler, then Nancy is bad.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Nancy is a pirate.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nKid(x) ::: x is a kid.\nToddler(x) ::: x is a toddler.\nLove(x, y) ::: x loves y.\nBad(x) ::: x is bad.\nPirate(x) ::: x is a pirate.\nPremises:\n∀x (Kid(x) → Love(x, animals)) ::: All kids love animals.\n∀x (Toddler(x) → Kid(x)) ::: All toddlers are kids.\n∀x (Love(x, animals) → ¬Bad(x)) ::: If someone loves animals, then they are not bad.\n∀x (Pirate(x) → Bad(x)) ::: All pirates are bad.\n¬Toddler(nancy) ∧ ¬Kid(nancy) ::: If Nancy is not a toddler, then Nancy is not a kid.\n¬Pirate(nancy) ∧ ¬Bad(nancy) ::: If Nancy is not a pirate, then Nancy is not bad.\n¬Kid(nancy)"
    ]
  },
  {
    "id": "FOLIO_train_99",
    "context": "All kids love animals. All toddlers are kids. If someone loves animals, then they are not bad. All pirates are bad. If Nancy is not a pirate, then Nancy loves animals. If Nancy is not a toddler, then Nancy is bad.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Nancy is not a pirate or a toddler.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nKid(x) ::: x is a kid.\nToddler(x) ::: x is a toddler.\nLove(x, y) ::: x loves y.\nBad(x) ::: x is bad.\nPirate(x) ::: x is a pirate.\nPremises:\n∀x (Kid(x) → Love(x, animals)) ::: All kids love animals.\n∀x (Toddler(x) → Kid(x)) ::: All toddlers are kids.\n∀x (Love(x, animals) → ¬Bad(x)) ::: If someone loves animals, then they are not bad.\n∀x (Pirate(x) → Bad(x)) ::: All pirates are bad.\n¬Toddler(nancy) ∧ ¬Pirate(nancy) ::: If Nancy is not a pirate, then Nancy loves animals.\n¬Toddler(nancy) ∧ Bad(nancy) ::: If Nancy is not a toddler, then Nancy is bad.\nConclusion:\n¬Toddler(n"
    ]
  },
  {
    "id": "FOLIO_train_100",
    "context": "All kids love animals. All toddlers are kids. If someone loves animals, then they are not bad. All pirates are bad. If Nancy is not a pirate, then Nancy loves animals. If Nancy is not a toddler, then Nancy is bad.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Nancy is not a pirate or a toddler, then she loves animals and is a kid.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nKid(x) ::: x is a kid.\nToddler(x) ::: x is a toddler.\nLove(x, y) ::: x loves y.\nBad(x) ::: x is bad.\nPirate(x) ::: x is a pirate.\nPremises:\n∀x (Kid(x) → Love(x, animals)) ::: All kids love animals.\n∀x (Toddler(x) → Kid(x)) ::: All toddlers are kids.\n∀x (Love(x, animals) → ¬Bad(x)) ::: If someone loves animals, then they are not bad.\n∀x (Pirate(x) → Bad(x)) ::: All pirates are bad.\n¬Kid(nancy) ⊕ Kid(nancy) ::: If Nancy is not a kid, then Nancy is a kid.\n¬Toddler(nancy) ⊕ Toddler(nancy) ::: If Nancy is not a toddler, then Nancy is a toddler.\n¬Pirate(nancy) ⊕ Pirate(nancy) ::: If Nancy is not a pirate, then Nancy is a pirate.\n¬Bad(nancy) ⊕ Bad(nancy) ::: If Nancy is not bad, then Nancy is bad.\nConclusion:\nLove(nancy, animals) ⊕ Kid(nancy) ::: If Nancy is not a pirate or a toddler, then she loves animals and is a kid.\n------"
    ]
  },
  {
    "id": "FOLIO_train_101",
    "context": "Lana Wilson directed After Tiller, The Departure, and Miss Americana. If a film is directedy by a person, the person is a filmmaker. After Tiller is a documentary. The documentary is a type of films. Lana Wilson is from Kirkland. Kirkland is a US city. If a person is from a city in a country, the person is from the country. After Tiller is nominated for the Independent Spirit Award for Best Documentary.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Lana Wilson is a US filmmaker.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nFilm(x) ::: x is a film.\nDocumentary(x) ::: x is a documentary.\nDirectedBy(x, y) ::: x is directed by y.\nFilmmaker(x) ::: x is a filmmaker.\nFrom(x, y) ::: x is from y.\nCountry(x) ::: x is a country.\nPremises:\nFilm(afterTiller) ∧ Documentary(afterTiller) ∧ DirectedBy(lanaWilson, afterTiller) ::: After Tiller is a documentary.\nFilm(theDeparture) ∧ DirectedBy(lanaWilson, theDeparture) ::: The Departure is a film.\nFilm(missAmericana) ∧ DirectedBy(lanaWilson, missAmericana) ::: Miss Americana is a film.\nFilmmaker(lanaWilson) ::: Lana Wilson is a filmmaker.\nFrom(lanaWilson, kirkland) ::: Lana Wilson is from Kirkland.\nCountry(kirkland) ∧ From(lanaWilson, kirkland) ::: Kirkland is a US city.\nConclusion:\nFrom(lanaWilson, us) ::: Lana Wilson is from the US.\n------\nProblem:\nThe Departure is a film. The Departure is directed by Lana Wilson. Lana Wilson is from Kirkland. Kirkland is a US city. If a person is from a city in a country, the person is from the country. After Tiller is a"
    ]
  },
  {
    "id": "FOLIO_train_102",
    "context": "Lana Wilson directed After Tiller, The Departure, and Miss Americana. If a film is directedy by a person, the person is a filmmaker. After Tiller is a documentary. The documentary is a type of films. Lana Wilson is from Kirkland. Kirkland is a US city. If a person is from a city in a country, the person is from the country. After Tiller is nominated for the Independent Spirit Award for Best Documentary.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Miss Americana is not directed by a filmmaker from Kirkland.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nFilm(x) ::: x is a film.\nDocumentary(x) ::: x is a documentary.\nDirectedBy(x, y) ::: x is directed by y.\nFilmmaker(x) ::: x is a filmmaker.\nFrom(x, y) ::: x is from y.\nCountry(x) ::: x is a country.\nCity(x) ::: x is a city.\nPremises:\nFilm(afterTiller) ∧ Documentary(afterTiller) ::: After Tiller is a documentary.\nFilm(theDeparture) ∧ Documentary(theDepartment) ::: The Departure is a documentary.\nFilm(missAmericana) ∧ Documentary(missAmericana) ::: Miss Americana is a documentary.\nDirectedBy(afterTiller, lanaWilson) ∧ Filmmaker(lanaWilson) ::: Lana Wilson directed After Tiller.\nDirectedBy(theDeparture, lanaWilson) ∧ Filmmaker(lanaWilson) ::: Lana Wilson directed The Departure.\nDirectedBy(missAmericana, lanaWilson) ∧ Filmmaker(lanaWilson) ::: Lana Wilson directed Miss Americana.\nFrom(lanaWilson, kirkland) ∧ City(kirkland) ∧ Country(kirkland) ::: Lana Wilson is from Kirkland.\nConclusion:\n¬DirectedBy(missAmericana, lanaWilson) ::: Miss Americana is"
    ]
  },
  {
    "id": "FOLIO_train_103",
    "context": "Lana Wilson directed After Tiller, The Departure, and Miss Americana. If a film is directedy by a person, the person is a filmmaker. After Tiller is a documentary. The documentary is a type of films. Lana Wilson is from Kirkland. Kirkland is a US city. If a person is from a city in a country, the person is from the country. After Tiller is nominated for the Independent Spirit Award for Best Documentary.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Lana Wilson has won the Independent Spirit Award.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nFilm(x) ::: x is a film.\nDocumentary(x) ::: x is a documentary.\nDirectedBy(x, y) ::: x is directed by y.\nFilmmaker(x) ::: x is a filmmaker.\nFrom(x, y) ::: x is from y.\nCountry(x) ::: x is a country.\nPremises:\nDirectedBy(afterTiller, lana) ∧ DirectedBy(theDeparture, lana) ∧ DirectedBy(missAmericana, lana) ::: Lana Wilson directed After Tiller, The Departure, and Miss Americana.\nDocumentary(afterTiller) ∧ Film(afterTiller) ∧ Documentary(theDeparture) ∧ Film(theDeparture) ∧ Documentary(missAmericana) ∧ Film(missAmericana) ::: After Tiller is a documentary. The documentary is a type of films.\nFrom(lana, kirkland) ∧ City(kirkland) ∧ Country(us) ::: Lana Wilson is from Kirkland. Kirkland is a US city.\nFrom(lana, us) ∧ Country(us) ::: If a person is from a city in a country, the person is from the country.\nConclusion:\nIndependentSpiritAward(lana, bestDocumentary) ::: Lana Wilson is nominated for the Independent Spirit Award for Best Documentary.\n------\nProblem:\nThe 2019 film The Irishman is directed by Martin Scorsese"
    ]
  },
  {
    "id": "FOLIO_train_104",
    "context": "All bears in zoos are not wild. Some bears are in zoos.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Not all bears are wild.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nBear(x) ::: x is a bear.\nWild(x) ::: x is wild.\nZoo(x) ::: x is in a zoo.\nPremises:\n∀x (Bear(x) → ¬Wild(x)) ::: All bears in zoos are not wild.\n∃x (Bear(x) ∧ Zoo(x)) ::: Some bears are in zoos.\nConclusion:\n¬Wild(x) ::: Not all bears are wild.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\n###\nPredicates:\nDependent(x) ::: x is a person dependent on caffeine.\nDrinks(x) ::: x"
    ]
  },
  {
    "id": "FOLIO_train_105",
    "context": "If a person is the leader of a country for life, that person is in a monarchy. Leaders are either a king or a queen. Queens are female. Kings are male. Elizabeth is a queen. Elizabeth is a leader",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Elizabeth is a king.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nLeader(x) ::: x is a leader.\nMonarchy(x) ::: x is a monarchy.\nKing(x) ::: x is a king.\nQueen(x) ::: x is a queen.\nFemale(x) ::: x is female.\nMale(x) ::: x is male.\nPremises:\nLeader(elizabeth) ∧ Monarchy(elizabeth) ::: Elizabeth is a leader of a country for life.\n∀x (Leader(x) → (King(x) ∨ Queen(x))) ::: Leaders are either a king or a queen.\nQueen(elizabeth) ::: Elizabeth is a queen.\nFemale(elizabeth) ::: Elizabeth is female.\nConclusion:\nKing(elizabeth) ::: Elizabeth is a king.\n------\nProblem:\nA person is a member of a group if and only if the person is a member of the group. A person is a member of a group if and only if the person is a member of the group. A person is a member of a group if and only if the person is a member of the group. A person is a member of a group if and only if the person is a member of the group. A person is a member of a group if and only if the person is a member of the group. A person is a member of a group if and only if the person is a member of the group. A person is a member of a group if and only if the person is a member of the group. A person is"
    ]
  },
  {
    "id": "FOLIO_train_106",
    "context": "If a person is the leader of a country for life, that person is in a monarchy. Leaders are either a king or a queen. Queens are female. Kings are male. Elizabeth is a queen. Elizabeth is a leader",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Elizabeth is in a monarchy.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nLeader(x) ::: x is a leader.\nCountry(x) ::: x is a country.\nLife(x) ::: x is for life.\nMonarchy(x) ::: x is a monarchy.\nKing(x) ::: x is a king.\nQueen(x) ::: x is a queen.\nFemale(x) ::: x is female.\nMale(x) ::: x is male.\nPremises:\nLeader(elizabeth) ∧ Life(elizabeth) ∧ Monarchy(elizabeth) ::: Elizabeth is a leader for life in a monarchy.\n∀x (Leader(x) → King(x) ∨ Queen(x)) ::: Leaders are either a king or a queen.\nQueen(elizabeth) ::: Elizabeth is a queen.\nMale(elizabeth) ::: Elizabeth is male.\nConclusion:\nMonarchy(elizabeth) ::: Elizabeth is in a monarchy.\n------\nProblem:\nA person is a member of a group if and only if the person is a member of the group. A person is a member of a group if and only if the person is a member of the group. A person is a member of a group if and only if the person is a member of the group. A person is a member of a group if and only if the person is a member of the group. A person is a member of a group if and only if the person is a member of the group. A person is a member of a group if and only if the"
    ]
  },
  {
    "id": "FOLIO_train_107",
    "context": "If a person is the leader of a country for life, that person is in a monarchy. Leaders are either a king or a queen. Queens are female. Kings are male. Elizabeth is a queen. Elizabeth is a leader",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Elizabeth is a leader of a country.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nLeader(x) ::: x is a leader of a country.\nMonarchy(x) ::: x is a monarchy.\nKing(x) ::: x is a king.\nQueen(x) ::: x is a queen.\nFemale(x) ::: x is female.\nMale(x) ::: x is male.\nPremises:\nLeader(elizabeth) ∧ Monarchy(elizabeth) ::: Elizabeth is a leader of a country for life.\n∀x (Leader(x) → (King(x) ∨ Queen(x))) ::: Leaders are either a king or a queen.\nQueen(elizabeth) ::: Elizabeth is a queen.\nFemale(elizabeth) ::: Elizabeth is female.\nConclusion:\nLeader(elizabeth) ::: Elizabeth is a leader of a country.\n------\nProblem:\nA person is a member of a group if and only if the person is a member of a group. A person is a member of a group if and only if the person is a member of a group. A person is a member of a group if and only if the person is a member of a group. A person is a member of a group if and only if the person is a member of a group. A person is a member of a group if and only if the person is a member of a group. A person is a member of a group if and only if the person is a member of a group. A person is a member of a group if and only if the person is a member"
    ]
  },
  {
    "id": "FOLIO_train_108",
    "context": "If people make their own matcha teas every morning with ceremonial-grade matcha powder, then they do not wake up late and start their schedules past noon regularly. If people live in California and attend yoga classes regularly, then they make their own matcha teas every morning with ceremonial-grade matcha powder. If people work in the entertainment industry as high-profile celebrities, then they wake up late and start their schedules past noon regularly. If people do not have regular 9-5 jobs, then they work in the entertainment industry as high-profile celebrities. All people who prefer working at home over going to the office every day do not have regular 9-5 jobs. Clay either both prefers to work at home over going to the office every day and makes his own matcha teas every morning with ceremonial-grade matcha powder, or he neither prefers to work at home over going to the office every day nor makes his own matcha teas every morning with ceremonial-grade matcha powder.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Clay does not have a regular 9-5 job.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMakeMatchaTea(x) ::: x makes his own matcha teas every morning with ceremonial-grade matcha powder.\nWakeUpLate(x) ::: x wakes up late and starts his schedule past noon regularly.\nStartSchedulePastNoon(x) ::: x starts his schedule past noon regularly.\nLiveInCalifornia(x) ::: x lives in California.\nAttendYogaClass(x) ::: x attends yoga classes regularly.\nWorkInEntertainmentIndustry(x) ::: x works in the entertainment industry as a high-profile celebrity.\nHaveRegular95Job(x) ::: x has a regular 9-5 job.\nPreferWorkAtHome(x) ::: x prefers working at home over going to the office every day.\nPremises:\n∀x (MakeMatchaTea(x) → ¬WakeUpLate(x)) ::: If people make their own matcha teas every morning with ceremonial-grade matcha powder, then they do not wake up late and start their schedules past noon regularly.\n∀x (LiveInCalifornia(x) ∧ AttendYogaClass(x)) → MakeMatchaTea(x) ::: If people live in California and attend yoga classes regularly, then they make their own matcha teas every morning with ceremonial-grade matcha powder.\n∀x (WorkInEntertainmentIndustry(x) → WakeUpLate(x)) ::: If people"
    ]
  },
  {
    "id": "FOLIO_train_109",
    "context": "If people make their own matcha teas every morning with ceremonial-grade matcha powder, then they do not wake up late and start their schedules past noon regularly. If people live in California and attend yoga classes regularly, then they make their own matcha teas every morning with ceremonial-grade matcha powder. If people work in the entertainment industry as high-profile celebrities, then they wake up late and start their schedules past noon regularly. If people do not have regular 9-5 jobs, then they work in the entertainment industry as high-profile celebrities. All people who prefer working at home over going to the office every day do not have regular 9-5 jobs. Clay either both prefers to work at home over going to the office every day and makes his own matcha teas every morning with ceremonial-grade matcha powder, or he neither prefers to work at home over going to the office every day nor makes his own matcha teas every morning with ceremonial-grade matcha powder.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Clay lives in California and attends yoga classes regularly.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLivesIn(x, y) ::: x lives in y.\nAttends(x, y) ::: x attends y.\nWorksIn(x, y) ::: x works in y.\nHasJob(x) ::: x has a job.\nPrefer(x, y) ::: x prefers y.\nMatchaTea(x) ::: x makes a matcha tea.\nCeremonialGrade(x) ::: x is a ceremonial-grade matcha powder.\nPremises:\n∀x (MatchaTea(x) → ¬HasJob(x)) ::: If people make their own matcha teas every morning with ceremonial-grade matcha powder, then they do not have regular 9-5 jobs.\n∀x (LivesIn(x, California) ∧ Attends(x, yogaClass)) → MatchaTea(x) ::: If people live in California and attend yoga classes regularly, then they make their own matcha teas every morning with ceremonial-grade matcha powder.\n∀x (WorksIn(x, entertainmentIndustry) ∧ WakesUpLate(x)) → ¬HasJob(x) ::: If people work in the entertainment industry as high-profile celebrities, then they wake up late and start their schedules past noon regularly.\n¬HasJob(x) → WorksIn(x, entertainmentIndustry) ::: If people do not have regular 9-5 jobs, then they work in the entertainment industry as high"
    ]
  },
  {
    "id": "FOLIO_train_110",
    "context": "If people make their own matcha teas every morning with ceremonial-grade matcha powder, then they do not wake up late and start their schedules past noon regularly. If people live in California and attend yoga classes regularly, then they make their own matcha teas every morning with ceremonial-grade matcha powder. If people work in the entertainment industry as high-profile celebrities, then they wake up late and start their schedules past noon regularly. If people do not have regular 9-5 jobs, then they work in the entertainment industry as high-profile celebrities. All people who prefer working at home over going to the office every day do not have regular 9-5 jobs. Clay either both prefers to work at home over going to the office every day and makes his own matcha teas every morning with ceremonial-grade matcha powder, or he neither prefers to work at home over going to the office every day nor makes his own matcha teas every morning with ceremonial-grade matcha powder.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Clay neither prefers working at home over going to the office every day nor lives in California and attends yoga classes regularly.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMakeMatchaTea(x) ::: x makes his own matcha teas every morning with ceremonial-grade matcha powder.\nWakeUpLate(x) ::: x wakes up late and starts his schedule past noon regularly.\nStartSchedulePastNoon(x) ::: x starts his schedule past noon regularly.\nLiveInCalifornia(x) ::: x lives in California.\nAttendYogaClass(x) ::: x attends yoga classes regularly.\nHaveRegular95Job(x) ::: x has a regular 9-5 job.\nWorkInEntertainmentIndustry(x) ::: x works in the entertainment industry.\nHighProfileCelebrity(x) ::: x is a high-profile celebrity.\nPremises:\n∀x (MakeMatchaTea(x) → ¬WakeUpLate(x)) ::: If people make their own matcha teas every morning with ceremonial-grade matcha powder, then they do not wake up late and start their schedules past noon regularly.\n∀x (LiveInCalifornia(x) ∧ AttendYogaClass(x)) → MakeMatchaTea(x) ::: If people live in California and attend yoga classes regularly, then they make their own matcha teas every morning with ceremonial-grade matcha powder.\n∀x (WorkInEntertainmentIndustry(x) → WakeUpLate(x)) ::: If people work in the entertainment industry as high-profile celebrities, then they wake up late and start their schedules past noon regularly.\n∀x (HaveRegular95Job(x) → ¬WorkInEntertainmentIndustry(x)) ::: If people do not have regular 9-5 jobs, then they work in the entertainment industry as high-profile celebrities.\n∀x (PreferWorkAtHomeOverGoingToTheOfficeEveryDay(x) → ¬HaveRegular95Job(x)) ::: All people who prefer working at home over going to the office every day do not have regular 9-5 jobs.\n∃x (Clay(x) ∧ PreferWorkAtHomeOverGoingToTheOfficeEveryDay(x)) ::: Clay either both prefers to work at home over going to the office every day and makes his own matcha teas every morning with ceremonial-grade matcha powder, or he neither prefers to work at home over going to the office every day nor makes his own matcha teas every morning with ceremonial-grade matcha powder.\nConclusion:\n¬(Clay(x) ∧ PreferWorkAtHomeOverGoingToTheOfficeEveryDay(x) ∧ LiveInCalifornia(x) ∧ AttendYogaClass(x)) ::: Clay neither prefers working at home over going to the office every day nor lives in California and attends yoga classes regularly.\n------"
    ]
  },
  {
    "id": "FOLIO_train_111",
    "context": "Thomas Barber was an English professional footballer. Thomas Barber played in the Football League for Aston Villa. Thomas Barber played as a half back and inside left. Thomas Barber scored the winning goal in the 1913 FA Cup Final.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Thomas Barber played in the Football League for Bolton Wanderers",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nEnglish(x) ::: x is an English person.\nFootballer(x) ::: x is a footballer.\nProfessional(x) ::: x is a professional.\nHalfBack(x) ::: x is a half back.\nInsideLeft(x) ::: x is an inside left.\nFootballLeague(x) ::: x is a football league.\nAstonVilla(x) ::: x is Aston Villa.\nBoltonWanderers(x) ::: x is Bolton Wanderers.\nWin(x, y) ::: x wins y.\nFA(x) ::: x is the FA Cup.\nFinal(x, y) ::: x is the final of y.\nPremises:\nEnglish(thomas) ∧ Footballer(thomas) ∧ Professional(thomas) ∧ HalfBack(thomas) ∧ InsideLeft(thomas) ::: Thomas Barber was an English professional footballer.\nFootballLeague(astonVilla) ∧ AstonVilla(thomas) ::: Thomas Barber played in the Football League for Aston Villa.\nFootballLeague(boltonWanderers) ∧ BoltonWanderers(thomas) ::: Thomas Barber played in the Football League for Bolton Wanderers.\nWin(thomas, FA) ∧ Final(FA, year1913) ∧ InsideLeft(thomas) ::: Thomas Barber scored the winning goal in the 1913 FA Cup Final.\nConclusion:\nFootballLeague(boltonWanderers) ∧ AstonVilla(thomas) ::: Thomas Barber played in the Football League for Bolton Wanderers.\n------\nProblem:\nThe following is a list of the top 100 most popular names in the United States for the year 2000.\n1. Michael\n2. Christopher\n3. Joshua\n4. Matthew\n5. Andrew\n6. David\n7. Joseph\n8. Daniel\n9. Jason\n10. John\n11. James\n12. Robert\n13. Ryan\n14. Benjamin\n15. Nicholas\n16. Anthony\n17. Brian\n18. Kevin\n19. Timothy\n20. Steven\n21. Mark\n22. Eric\n23. Paul\n24. Matthew\n25. William\n26. Daniel\n27. Christopher\n28. Michael\n29. Joshua\n30. Joseph\n31. Andrew\n32. David\n33. Jason\n34. John\n35. James\n36. Robert\n37. Ryan\n38. Benjamin\n39. Nicholas\n40. Anthony\n41. Brian\n42. Kevin\n43. Timothy\n44. Steven\n45. Mark\n46. Eric\n47. Paul\n48. Matthew\n49. William\n50. Daniel\n51. Christopher\n5"
    ]
  },
  {
    "id": "FOLIO_train_112",
    "context": "Thomas Barber was an English professional footballer. Thomas Barber played in the Football League for Aston Villa. Thomas Barber played as a half back and inside left. Thomas Barber scored the winning goal in the 1913 FA Cup Final.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Thomas Barber played as an inside left.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nEnglish(x) ::: x is an English person.\nFootballer(x) ::: x is a footballer.\nProfessional(x) ::: x is a professional.\nFootballLeague(x) ::: x is a football league.\nAstonVilla(x) ::: x is Aston Villa.\nHalfBack(x) ::: x is a half back.\nInsideLeft(x) ::: x is an inside left.\nWinning(x) ::: x is a winning.\nPremises:\nEnglish(thomas) ∧ Footballer(thomas) ∧ Professional(thomas) ∧ FootballLeague(astonVilla) ∧ HalfBack(thomas) ∧ InsideLeft(thomas) ∧ Winning(thomas) ::: Thomas Barber was an English professional footballer. Thomas Barber played in the Football League for Aston Villa. Thomas Barber played as a half back and inside left. Thomas Barber scored the winning goal in the 1913 FA Cup Final.\nConclusion:\nInsideLeft(thomas) ::: Thomas Barber played as an inside left.\n------\nProblem:\nThe following is a list of the top 100 most popular names in the United States for the year 2000.\n1. Michael\n2. Christopher\n3. Joshua\n4. Matthew\n5. Andrew\n6. David\n7. Joseph\n8. Daniel\n9. Jason\n10. John\n11. James\n12. Robert\n13. Ryan\n14. Benjamin\n15. Nicholas\n16. Anthony\n17. Brian\n18. Kevin\n19. Timothy\n20. Steven\n21. Eric\n22. Mark\n23. Paul\n24. Matthew\n25. Daniel\n26. Christopher\n27. Joshua\n28. Michael\n29. Joseph\n30. Andrew\n31. David\n32. Ryan\n33. John\n34. James\n35. Benjamin\n36. Nicholas\n37. Anthony\n38. Brian\n39. Kevin\n40. Timothy\n41. Steven\n42. Eric\n43. Mark\n44. Paul\n45. Matthew\n46. Daniel\n47. Christopher\n48. Joshua\n49. Michael\n50. Joseph\n51. Andrew\n52. David\n53. Ryan\n54. John\n55. James\n56. Benjamin\n57. Nicholas\n58. Anthony\n59. Brian\n60. Kevin\n61. Timothy\n62. Steven\n63. Eric\n64. Mark\n65. Paul\n66. Matthew\n67. Daniel\n68. Christopher\n69. Joshua\n70. Michael\n71. Joseph\n72. Andrew\n73. David\n74. Ryan\n75. John\n76. James\n77. Benjamin"
    ]
  },
  {
    "id": "FOLIO_train_113",
    "context": "Thomas Barber was an English professional footballer. Thomas Barber played in the Football League for Aston Villa. Thomas Barber played as a half back and inside left. Thomas Barber scored the winning goal in the 1913 FA Cup Final.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? An English professional footballer scored the winning goal in the 1913 FA Cup Final.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "###\nPredicates:\nEnglish(x) ::: x is an English person.\nProfessionalFootballer(x) ::: x is a professional footballer.\nFootballLeague(x) ::: x is a football league.\nAstonVilla(x) ::: x is Aston Villa.\nHalfBack(x) ::: x is a half back.\nInsideLeft(x) ::: x is an inside left.\nWinningGoal(x) ::: x is the winning goal.\nFACupFinal(x) ::: x is the FA Cup Final.\nPremises:\nEnglish(thomas) ∧ ProfessionalFootballer(thomas) ∧ FootballLeague(astonVilla) ∧ HalfBack(thomas) ∧ InsideLeft(thomas) ∧ WinningGoal(thomas) ∧ FACupFinal(year1913) ::: Thomas Barber was an English professional footballer. Thomas Barber played in the Football League for Aston Villa. Thomas Barber played as a half back and inside left. Thomas Barber scored the winning goal in the 1913 FA Cup Final.\nConclusion:\nWinningGoal(thomas, year1913) ::: An English professional footballer scored the winning goal in the 1913 FA Cup Final.\n------\nProblem:\nThe following is a list of the top 100 most popular names in the United States for the year 2000.\n1. Michael\n2. Christopher\n3. Joshua\n4. Matthew\n5. Andrew\n6. David\n7. Joseph\n8. Daniel\n9. John\n10. Jason\n11. Ryan\n12. Nicholas\n13. James\n14. Benjamin\n15. Anthony\n16. Brian\n17. Kevin\n18. Steven\n19. Brandon\n20. Eric\n21. Timothy\n22. Mark\n23. Scott\n24. Matthew\n25. Daniel\n26. Christopher\n27. Joshua\n28. Michael\n29. Nicholas\n30. Andrew\n31. Joseph\n32. David\n33. John\n34. Ryan\n35. James\n36. Benjamin\n37. Anthony\n38. Kevin\n39. Steven\n40. Brandon\n41. Eric\n42. Timothy\n43. Mark\n44. Scott\n45. Matthew\n46. Daniel\n47. Christopher\n48. Joshua\n49. Michael\n50. Nicholas\n51. Andrew\n52. Joseph\n53. David\n54. John\n55. Ryan\n56. James\n57. Benjamin\n58. Anthony\n59. Kevin\n60. Steven\n61. Brandon\n62. Eric\n63. Timothy\n64. Mark\n65. Scott\n66. Matthew\n67. Daniel\n68. Christopher\n69. Josh"
    ]
  },
  {
    "id": "FOLIO_train_114",
    "context": "If people play the instrument in the concert, then he is good at playing this kind of instrument. Peter plays piano, violin, and saxophone. Peter was invited to play piano at the concert hall. Oliver and Peter were both invited to perform in the concert. Oliver plays a different musical instrument from Peter in the concert.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Oliver plays piano in the concert.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Oliver plays piano in the concert.\n###\nPredicates:\nConcert(x) ::: x is a concert.\nInstrument(x) ::: x is an instrument.\nPlay(x, y) ::: x plays y.\nGoodAt(x, y) ::: x is good at y.\nPiano(x) ::: x is a piano.\nViolin(x) ::: x is a violin.\nSaxophone(x) ::: x is a saxophone.\nPremises:\nConcert(concert) ∧ Instrument(instrument) ∧ Play(people, instrument) → GoodAt(people, instrument) ::: If people play the instrument in the concert, then he is good at playing this kind of instrument.\nPlay(peter, piano) ∧ Play(peter, violin) ∧ Play(peter, saxophone) ::: Peter plays piano, violin, and saxophone.\nPlay(peter, piano) ::: Peter was invited to play piano at the concert hall.\nPlay(oliver, instrument) ∧ Play(peter, instrument) ∧ Play(oliver, instrument) ∧ Play(peter, instrument) ∧ Play(oliver, instrument) ∧ Play(peter, instrument) ∧ Play(oliver, instrument) ∧ Play(peter, instrument) ∧ Play(oliver, instrument) ∧ Play(peter, instrument) ∧ Play(oliver, instrument) ∧ Play(peter, instrument) ∧ Play(oliver, instrument) ∧ Play(peter, instrument) ∧ Play(oliver, instrument) ∧ Play(peter, instrument) ∧ Play(oliver, instrument) ∧ Play(peter, instrument) ∧ Play(oliver, instrument) ∧ Play(peter, instrument) ∧ Play(oliver, instrument) ∧ Play(peter, instrument) ∧ Play(oliver, instrument) ∧ Play(peter, instrument) ∧ Play(oliver, instrument) ∧ Play(peter, instrument) ∧ Play(oliver, instrument) ∧ Play(peter, instrument) ∧ Play(oliver, instrument) ∧ Play(peter, instrument) ∧ Play(oliver, instrument) ∧ Play(peter, instrument) ∧ Play(oliver, instrument) ∧ Play(peter, instrument) ∧ Play(oliver, instrument) ∧ Play(peter, instrument) ∧ Play(oliver, instrument) ∧ Play(peter, instrument) ∧ Play(oliver, instrument) ∧ Play(peter, instrument) ∧ Play(oliver, instrument) ∧ Play(peter, instrument) ∧ Play(oliver, instrument) ∧ Play(peter, instrument) ∧ Play(oliver, instrument) ∧ Play(peter, instrument) ∧ Play(oliver, instrument) ∧ Play(peter, instrument) ∧ Play(ol"
    ]
  },
  {
    "id": "FOLIO_train_115",
    "context": "If people play the instrument in the concert, then he is good at playing this kind of instrument. Peter plays piano, violin, and saxophone. Peter was invited to play piano at the concert hall. Oliver and Peter were both invited to perform in the concert. Oliver plays a different musical instrument from Peter in the concert.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Oliver plays violin in the concert.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Oliver plays violin in the concert.\n###\nPredicates:\nConcert(x) ::: x is a concert.\nInstrument(x) ::: x is an instrument.\nPlay(x, y) ::: x plays y.\nGoodAt(x, y) ::: x is good at y.\nPiano(x) ::: x is a piano.\nViolin(x) ::: x is a violin.\nSaxophone(x) ::: x is a saxophone.\nPremises:\nConcert(concert) ∧ Instrument(instrument) ∧ Play(people, instrument) → GoodAt(people, instrument) ::: If people play the instrument in the concert, then he is good at playing this kind of instrument.\nPlay(peter, piano) ∧ Play(peter, violin) ∧ Play(peter, saxophone) ::: Peter plays piano, violin, and saxophone.\nPlay(peter, piano) ∧ Concert(concertHall) ∧ Invited(peter, concertHall) ::: Peter was invited to play piano at the concert hall.\nPlay(oliver, instrument) ∧ Play(peter, instrument) ∧ Play(oliver, instrument) ∧ Play(peter, instrument) ∧ Play(oliver, instrument) ∧ Play(peter, instrument) ∧ Play(oliver, instrument) ∧ Play(peter, instrument) ∧ Play(oliver, instrument) ∧ Play(peter, instrument) ∧ Play(oliver, instrument) ∧ Play(peter, instrument) ∧ Play(oliver, instrument) ∧ Play(peter, instrument) ∧ Play(oliver, instrument) ∧ Play(peter, instrument) ∧ Play(oliver, instrument) ∧ Play(peter, instrument) ∧ Play(oliver, instrument) ∧ Play(peter, instrument) ∧ Play(oliver, instrument) ∧ Play(peter, instrument) ∧ Play(oliver, instrument) ∧ Play(peter, instrument) ∧ Play(oliver, instrument) ∧ Play(peter, instrument) ∧ Play(oliver, instrument) ∧ Play(peter, instrument) ∧ Play(oliver, instrument) ∧ Play(peter, instrument) ∧ Play(oliver, instrument) ∧ Play(peter, instrument) ∧ Play(oliver, instrument) ∧ Play(peter, instrument) ∧ Play(oliver, instrument) ∧ Play(peter, instrument) ∧ Play(oliver, instrument) ∧ Play(peter, instrument) ∧ Play(oliver, instrument) ∧ Play(peter, instrument) ∧ Play(oliver, instrument) ∧ Play(peter, instrument) ∧ Play(oliver, instrument) ∧ Play(peter, instrument) ∧ Play(oliver, instrument) ∧ Play(peter, instrument)"
    ]
  },
  {
    "id": "FOLIO_train_116",
    "context": "If people play the instrument in the concert, then he is good at playing this kind of instrument. Peter plays piano, violin, and saxophone. Peter was invited to play piano at the concert hall. Oliver and Peter were both invited to perform in the concert. Oliver plays a different musical instrument from Peter in the concert.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Peter is good at playing piano.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Oliver is good at playing violin.\n###\nPeter is good at playing saxophone.\n###\nPeter is good at playing piano, violin, and saxophone.\n###\nPredicates:\nConcert(x) ::: x is a concert.\nInstrument(x) ::: x is an instrument.\nPlay(x, y) ::: x plays y.\nGoodAt(x, y) ::: x is good at y.\nPiano(x) ::: x is a piano.\nViolin(x) ::: x is a violin.\nSaxophone(x) ::: x is a saxophone.\nPremises:\nConcert(concert) ∧ Instrument(instrument) ∧ Play(people, instrument) → GoodAt(people, instrument) ::: If people play the instrument in the concert, then he is good at playing this kind of instrument.\nPlay(peter, piano) ∧ Play(peter, violin) ∧ Play(peter, saxophone) ::: Peter plays piano, violin, and saxophone.\nPlay(peter, piano) ∧ Concert(concertHall) ∧ Invited(peter, concertHall) ::: Peter was invited to play piano at the concert hall.\nPlay(oliver, instrument) ∧ Play(oliver, instrument) ∧ Play(oliver, instrument) ∧ Play(oliver, instrument) ∧ Play(oliver, instrument) ∧ Play(oliver, instrument) ∧ Play(oliver, instrument) ∧ Play(oliver, instrument) ∧ Play(oliver, instrument) ∧ Play(oliver, instrument) ∧ Play(oliver, instrument) ∧ Play(oliver, instrument) ∧ Play(oliver, instrument) ∧ Play(oliver, instrument) ∧ Play(oliver, instrument) ∧ Play(oliver, instrument) ∧ Play(oliver, instrument) ∧ Play(oliver, instrument) ∧ Play(oliver, instrument) ∧ Play(oliver, instrument) ∧ Play(oliver, instrument) ∧ Play(oliver, instrument) ∧ Play(oliver, instrument) ∧ Play(oliver, instrument) ∧ Play(oliver, instrument) ∧ Play(oliver, instrument) ∧ Play(oliver, instrument) ∧ Play(oliver, instrument) ∧ Play(oliver, instrument) ∧ Play(oliver, instrument) ∧ Play(oliver, instrument) ∧ Play(oliver, instrument) ∧ Play(oliver, instrument) ∧ Play(oliver, instrument) ∧ Play(oliver, instrument) ∧ Play(oliver, instrument) ∧ Play(oliver, instrument) ∧ Play(oliver, instrument) ∧ Play(oliver, instrument) ∧ Play(oliver, instrument) ∧ Play(oliver, instrument) ∧ Play(oliver, instrument) ∧"
    ]
  },
  {
    "id": "FOLIO_train_117",
    "context": "If something can go underwater, then it enjoys water. All animals that can swim can go underwater. Either an animal can swim or it can walk. Animals that can walk travel on land. Animals that enjoy water splash water around. Every animal that travels on land enjoys basking in the sun. George splashes water around and can swim. Liam is either an animal that can walk and enjoys water, or is neither an animal that can walk nor enjoys water.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? George enjoys basking in the sun.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nCanGoUnderwater(x) ::: x can go underwater.\nCanSwim(x) ::: x can swim.\nCanWalk(x) ::: x can walk.\nEnjoysWater(x) ::: x enjoys water.\nSplashesWaterAround(x) ::: x splashes water around.\nTravelsOnLand(x) ::: x travels on land.\nEnjoysBaskingInTheSun(x) ::: x enjoys basking in the sun.\nPremises:\nCanGoUnderwater(x) → EnjoysWater(x) ::: If something can go underwater, then it enjoys water.\nCanSwim(x) → CanGoUnderwater(x) ::: All animals that can swim can go underwater.\nCanWalk(x) ⊕ CanSwim(x) ::: Either an animal can swim or it can walk.\nCanWalk(x) → TravelsOnLand(x) ::: Animals that can walk travel on land.\nEnjoysWater(x) → SplashesWaterAround(x) ::: Animals that enjoy water splash water around.\n∀x (EnjoysBaskingInTheSun(x) → TravelsOnLand(x)) ::: Every animal that travels on land enjoys basking in the sun.\nGeorge(x) ∧ CanGoUnderwater(x) ∧ CanSwim(x) ::: George splashes water around and can swim.\nLiam(x) ∧ CanWalk(x) ⊕ EnjoysWater(x) ::: Liam is either an animal that can walk and enjoys water, or is neither an animal that can walk nor enjoys water.\nConclusion:\nEnjoysBaskingInTheSun(george) ::: George enjoys basking in the sun.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\n###\nPredicates:\nDependent(x) ::: x is a person dependent on caffeine.\nDrinks(x"
    ]
  },
  {
    "id": "FOLIO_train_118",
    "context": "If something can go underwater, then it enjoys water. All animals that can swim can go underwater. Either an animal can swim or it can walk. Animals that can walk travel on land. Animals that enjoy water splash water around. Every animal that travels on land enjoys basking in the sun. George splashes water around and can swim. Liam is either an animal that can walk and enjoys water, or is neither an animal that can walk nor enjoys water.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Liam enjoys basking in the sun and splashing water around.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nCanGoUnderwater(x) ::: x can go underwater.\nCanSwim(x) ::: x can swim.\nCanWalk(x) ::: x can walk.\nEnjoysWater(x) ::: x enjoys water.\nSplashesWaterAround(x) ::: x splashes water around.\nTravelsOnLand(x) ::: x travels on land.\nEnjoysBaskingInTheSun(x) ::: x enjoys basking in the sun.\nPremises:\n∀x (CanGoUnderwater(x) → EnjoysWater(x)) ::: If something can go underwater, then it enjoys water.\n∀x (CanSwim(x) → CanGoUnderwater(x)) ::: All animals that can swim can go underwater.\n∃x (CanWalk(x) ⊕ CanSwim(x)) ::: Either an animal can swim or it can walk.\n∀x (CanWalk(x) → TravelsOnLand(x)) ::: Animals that can walk travel on land.\n∀x (EnjoysWater(x) → SplashesWaterAround(x)) ::: Animals that enjoy water splash water around.\n∀x (EnjoysBaskingInTheSun(x) → TravelsOnLand(x)) ::: Every animal that travels on land enjoys basking in the sun.\nConclusion:\nEnjoysBaskingInTheSun(liam) ∧ SplashesWaterAround(liam) ::: Liam enjoys basking in the sun and splashes water around.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\n###\nPredicates:\nDependent(x) ::: x is a person dependent on caffeine.\nDrinks(x) ::: x regularly drinks coffee.\nJokes(x) ::: x jokes about being addicted to caffeine.\nUnaware(x) ::: x is unaware that caffeine is a drug."
    ]
  },
  {
    "id": "FOLIO_train_119",
    "context": "If something can go underwater, then it enjoys water. All animals that can swim can go underwater. Either an animal can swim or it can walk. Animals that can walk travel on land. Animals that enjoy water splash water around. Every animal that travels on land enjoys basking in the sun. George splashes water around and can swim. Liam is either an animal that can walk and enjoys water, or is neither an animal that can walk nor enjoys water.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Liam neither enjoys basking in the sun nor splashing water around.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nCanGoUnderwater(x) ::: x can go underwater.\nCanSwim(x) ::: x can swim.\nCanWalk(x) ::: x can walk.\nEnjoysWater(x) ::: x enjoys water.\nSplashesWaterAround(x) ::: x splashes water around.\nTravelsOnLand(x) ::: x travels on land.\nEnjoysBaskingInTheSun(x) ::: x enjoys basking in the sun.\nPremises:\n∀x (CanGoUnderwater(x) → EnjoysWater(x)) ::: If something can go underwater, then it enjoys water.\n∀x (CanSwim(x) → CanGoUnderwater(x)) ::: All animals that can swim can go underwater.\n∃x (CanWalk(x) ⊕ CanSwim(x)) ::: Either an animal can swim or it can walk.\n∀x (CanWalk(x) → TravelsOnLand(x)) ::: Animals that can walk travel on land.\n∀x (EnjoysWater(x) → SplashesWaterAround(x)) ::: Animals that enjoy water splash water around.\n∀x (EnjoysBaskingInTheSun(x) → TravelsOnLand(x)) ::: Every animal that travels on land enjoys basking in the sun.\n(CanSwim(liam) ∧ CanGoUnderwater(liam)) ⊕ (CanWalk(liam) ⊕ EnjoysWater(liam)) ::: George splashes water around and can swim.\n(CanWalk(liam) ⊕ EnjoysWater(liam)) ⊕ ¬(CanWalk(liam) ∧ EnjoysWater(liam)) ::: Liam is either an animal that can walk and enjoys water, or is neither an animal that can walk nor enjoys water.\nConclusion:\n¬EnjoysBaskingInTheSun(liam) ⊕ EnjoysBaskingInTheSun(liam) ::: Liam neither enjoys basking in the sun nor splashing water around.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above"
    ]
  },
  {
    "id": "FOLIO_train_120",
    "context": "Cancer biology is finding genetic alterations that confer selective advantage to cancer cells. Cancer researchers have frequently ranked the importance of substitutions to cancer growth by P value. P values are thresholds for belief, not metrics of effect.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Cancer researchers tend to use the cancer effect size to determine the relative importance of the genetic alterations that confer selective advantage to cancer cells.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nCancerBiology(x) ::: x is cancer biology.\nCancerResearcher(x) ::: x is a cancer researcher.\nCancerEffectSize(x) ::: x is a cancer effect size.\nGeneticAlteration(x) ::: x is a genetic alteration.\nConferSelectiveAdvantage(x, y) ::: x confers selective advantage to y.\nPValue(x) ::: x is a P value.\nThreshold(x) ::: x is a threshold.\nBelief(x) ::: x is a belief.\nMetric(x) ::: x is a metric.\nEffect(x) ::: x is an effect.\nPremises:\nCancerBiology(cancerBiology) ∧ CancerResearcher(cancerResearcher) ∧ CancerEffectSize(cancerEffectSize) ∧ GeneticAlteration(geneticAlteration) ∧ ConferSelectiveAdvantage(geneticAlteration, cancerCells) ∧ PValue(pValue) ∧ Threshold(threshold) ∧ Belief(belief) ∧ Metric(metric) ∧ Effect(effect) ::: Cancer biology is finding genetic alterations that confer selective advantage to cancer cells. Cancer researchers have frequently ranked the importance of substitutions to cancer growth by P value.\nCancerResearcher(cancerResearcher) ∧ CancerEffectSize(cancerEffectSize) ∧ GeneticAlteration(geneticAlteration) ∧ ConferSelectiveAdvantage(geneticAlteration, cancerCells) ∧ PValue(pValue) ∧ Threshold(threshold) ∧ Belief(belief) ∧ Metric(metric) ∧ Effect(effect) ∧ CancerResearcher(cancerResearcher) ∧ CancerEffectSize(cancerEffectSize) ∧ GeneticAlteration(geneticAlteration) ∧ ConferSelectiveAdvantage(geneticAlteration, cancerCells) ∧ PValue(pValue) ∧ Threshold(threshold) ∧ Belief(belief) ∧ Metric(metric) ∧ Effect(effect) ::: Cancer researchers have frequently ranked the importance of substitutions to cancer growth by P value.\nConclusion:\nBelief(cancerResearcher, threshold) ∧ Effect(cancerResearcher, effect) ::: Cancer researchers tend to use the cancer effect size to determine the relative importance of the genetic alterations that confer selective advantage to cancer cells.\n------"
    ]
  },
  {
    "id": "FOLIO_train_121",
    "context": "Cancer biology is finding genetic alterations that confer selective advantage to cancer cells. Cancer researchers have frequently ranked the importance of substitutions to cancer growth by P value. P values are thresholds for belief, not metrics of effect.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? P value represents the selection intensity for somatic variants in cancer cell lineages.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nCancerBiology(x) ::: x is cancer biology.\nCancerResearcher(x) ::: x is a cancer researcher.\nCancerCellLineage(x) ::: x is a cancer cell lineage.\nSomaticVariant(x) ::: x is a somatic variant.\nPValue(x) ::: x is a P value.\nSelectionIntensity(x) ::: x is a selection intensity.\nPremises:\nCancerBiology(cancerBiology) ∧ CancerResearcher(cancerResearcher) ∧ CancerCellLineage(cancerCellLineage) ∧ SomaticVariant(somaticVariant) ∧ PValue(pValue) ::: Cancer biology is finding genetic alterations that confer selective advantage to cancer cells. Cancer researchers have frequently ranked the importance of substitutions to cancer growth by P value.\nSelectionIntensity(cancerCellLineage) ::: Cancer cell lineage has a selection intensity.\nConclusion:\nPValue(pValue) ∧ SelectionIntensity(cancerCellLineage) ::: P value represents the selection intensity for somatic variants in cancer cell lineages.\n------\nProblem:\nThe first-order logic formulars are defined as follows:\n1) logical conjunction of expr1 and expr2: expr1 ∧ expr2\n2) logical disjunction of expr1 and expr2: expr1 ∨ expr2\n3) logical exclusive disjunction of expr1 and expr2: expr1 ⊕ expr2\n4) logical negation of expr1: ¬expr1\n5) expr1 implies expr2: expr1 → expr2\n6) expr1 if and only if expr2: expr1 ↔ expr2\n7) logical universal quantification: ∀x\n8) logical existential quantification: ∃x\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain"
    ]
  },
  {
    "id": "FOLIO_train_122",
    "context": "Cancer biology is finding genetic alterations that confer selective advantage to cancer cells. Cancer researchers have frequently ranked the importance of substitutions to cancer growth by P value. P values are thresholds for belief, not metrics of effect.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Cancer effect size is a metric that is preferred by the majority of cancer researchers.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nCancerBiology(x) ::: x is cancer biology.\nCancerResearcher(x) ::: x is a cancer researcher.\nCancerEffectSize(x) ::: x is a cancer effect size.\nPValue(x) ::: x is a P value.\nThreshold(x) ::: x is a threshold.\nMetric(x) ::: x is a metric.\nPreference(x, y) ::: x prefers y.\nMajority(x) ::: x is a majority.\nPremises:\nCancerBiology(cancerBiology) ∧ CancerResearcher(cancerResearcher) ∧ CancerEffectSize(cancerEffectSize) ∧ PValue(pValue) ∧ Threshold(threshold) ∧ Metric(metric) ∧ Preference(cancerResearcher, cancerEffectSize) ∧ Majority(cancerResearcher) ::: Cancer biology is finding genetic alterations that confer selective advantage to cancer cells. Cancer researchers have frequently ranked the importance of substitutions to cancer growth by P value. P values are thresholds for belief, not metrics of effect.\nConclusion:\nPreference(cancerResearcher, cancerEffectSize) ∧ Majority(cancerResearcher) ::: Cancer researchers prefer cancer effect size.\n------\nProblem:\nThe first-order logic formulars are defined as follows:\n1) logical conjunction of expr1 and expr2: expr1 ∧ expr2\n2) logical disjunction of expr1 and expr2: expr1 ∨ expr2\n3) logical exclusive disjunction of expr1 and expr2: expr1 ⊕ expr2\n4) logical negation of expr1: ¬expr1\n5) expr1 implies expr2: expr1 → expr2\n6) expr1 if and only if expr2: expr1 ↔ expr2\n7) logical universal quantification: ∀x\n8) logical existential quantification: ∃x\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student,"
    ]
  },
  {
    "id": "FOLIO_train_123",
    "context": "Cancer biology is finding genetic alterations that confer selective advantage to cancer cells. Cancer researchers have frequently ranked the importance of substitutions to cancer growth by P value. P values are thresholds for belief, not metrics of effect.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? P value doesn't represent metrics of effect.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nCancerBiology(x) ::: x is cancer biology.\nCancerResearcher(x) ::: x is a cancer researcher.\nGeneticAlteration(x) ::: x is a genetic alteration.\nConferSelectiveAdvantage(x, y) ::: x confers selective advantage to y.\nPValue(x) ::: x is a P value.\nThresholdForBelief(x) ::: x is a threshold for belief.\nMetricOfEffect(x) ::: x is a metric of effect.\nPremises:\nCancerBiology(cancerBiology) ∧ CancerResearcher(cancerResearcher) ∧ GeneticAlteration(geneticAlteration) ∧ ConferSelectiveAdvantage(geneticAlteration, cancerCells) ::: Cancer biology is finding genetic alterations that confer selective advantage to cancer cells.\n∀x (CancerResearcher(x) → PValue(x)) ::: Cancer researchers have frequently ranked the importance of substitutions to cancer growth by P value.\nPValue(pValue) ∧ ThresholdForBelief(pValue) ::: P values are thresholds for belief, not metrics of effect.\nConclusion:\nPValue(pValue) ∧ ThresholdForBelief(pValue) ::: P values are thresholds for belief, not metrics of effect.\n------\nProblem:\nThe first-order logic formulars are defined as follows:\n1) logical conjunction of expr1 and expr2: expr1 ∧ expr2\n2) logical disjunction of expr1 and expr2: expr1 ∨ expr2\n3) logical exclusive disjunction of expr1 and expr2: expr1 ⊕ expr2\n4) logical negation of expr1: ¬expr1\n5) expr1 implies expr2: expr1 → expr2\n6) expr1 if and only if expr2: expr1 ↔ expr2\n7) logical universal quantification: ∀x\n8) logical existential quantification: ∃x\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then R"
    ]
  },
  {
    "id": "FOLIO_train_124",
    "context": "All dispensable things are environment-friendly. All woodware is dispensable. All paper is woodware. No good things are bad. All environment-friendly things are good. A worksheet is either paper or is environment-friendly.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A worksheet is dispensable.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nDispensable(x) ::: x is dispensable.\nEnvironmentFriendly(x) ::: x is environment-friendly.\nGood(x) ::: x is good.\nBad(x) ::: x is bad.\nPremises:\n∀x (Dispensable(x) → EnvironmentFriendly(x)) ::: All dispensable things are environment-friendly.\n∀x (Woodware(x) → Dispensable(x)) ::: All woodware is dispensable.\n∀x (Paper(x) → Woodware(x)) ::: All paper is woodware.\n∀x (Good(x) → ¬Bad(x)) ::: No good things are bad.\n∀x (EnvironmentFriendly(x) → Good(x)) ::: All environment-friendly things are good.\nConclusion:\nDispensable(worksheet) ::: A worksheet is dispensable.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\n###\nPredicates:\nDependent(x) ::: x is a person dependent on caffeine.\nDrinks(x) ::: x regularly drinks coffee.\nJokes(x) ::: x jokes about being addicted to caffeine.\nUnaware(x) ::: x is unaware that caffeine is a drug.\nStudent(x) ::: x is a student.\nPremises:\n∀x (Drinks(x) → Dependent(x)) ::: All people who regularly drink coffee are dependent on caffeine.\n∀x (Drinks(x) ⊕ Jokes(x)) ::: People either regularly drink coffee or joke about being addicted to caffeine.\n∀x"
    ]
  },
  {
    "id": "FOLIO_train_125",
    "context": "All dispensable things are environment-friendly. All woodware is dispensable. All paper is woodware. No good things are bad. All environment-friendly things are good. A worksheet is either paper or is environment-friendly.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A worksheet is not dispensable.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nDispensable(x) ::: x is dispensable.\nEnvironmentFriendly(x) ::: x is environment-friendly.\nGood(x) ::: x is good.\nBad(x) ::: x is bad.\nPaper(x) ::: x is paper.\nWoodware(x) ::: x is woodware.\nWorksheet(x) ::: x is a worksheet.\nPremises:\n∀x (Dispensable(x) → EnvironmentFriendly(x)) ::: All dispensable things are environment-friendly.\n∀x (Woodware(x) → Dispensable(x)) ::: All woodware is dispensable.\n∀x (Paper(x) → Woodware(x)) ::: All paper is woodware.\n¬(Good(x) ∧ Bad(x)) ::: No good things are bad.\n∀x (EnvironmentFriendly(x) → Good(x)) ::: All environment-friendly things are good.\nWorksheet(x) ⊕ Paper(x) ::: A worksheet is either paper or is environment-friendly.\nConclusion:\n¬Dispensable(x) ::: A worksheet is not dispensable.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\n###\nPredicates:\nDependent(x) ::: x is a person dependent on caffeine.\nDrinks(x) ::: x regularly drinks coffee.\nJokes(x) ::: x jokes about being addicted to caffeine.\nUnaware(x) ::: x is unaware that caffeine is a drug.\nStudent(x) ::: x is a student.\nPremises:\n∀x"
    ]
  },
  {
    "id": "FOLIO_train_126",
    "context": "All dispensable things are environment-friendly. All woodware is dispensable. All paper is woodware. No good things are bad. All environment-friendly things are good. A worksheet is either paper or is environment-friendly.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A worksheet is bad.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nDispensable(x) ::: x is dispensable.\nEnvironmentFriendly(x) ::: x is environment-friendly.\nGood(x) ::: x is good.\nBad(x) ::: x is bad.\nPaper(x) ::: x is paper.\nWoodware(x) ::: x is woodware.\nWorksheet(x) ::: x is a worksheet.\nPremises:\n∀x (Dispensable(x) → EnvironmentFriendly(x)) ::: All dispensable things are environment-friendly.\n∀x (Woodware(x) → Dispensable(x)) ::: All woodware is dispensable.\n∀x (Paper(x) → Woodware(x)) ::: All paper is woodware.\n¬(Good(x) ∧ Bad(x)) ::: No good things are bad.\n∀x (EnvironmentFriendly(x) → Good(x)) ::: All environment-friendly things are good.\nWorksheet(x) ⊕ Paper(x) ::: A worksheet is either paper or is environment-friendly.\nConclusion:\nBad(x) ::: A worksheet is bad.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\n###\nPredicates:\nDependent(x) ::: x is a person dependent on caffeine.\nDrinks(x) ::: x regularly drinks coffee.\nJokes(x) ::: x jokes about being addicted to caffeine.\nUnaware(x) ::: x is unaware that caffeine is a drug.\nStudent(x) ::: x is a student.\nPremises:\n∀x (Drinks(x) →"
    ]
  },
  {
    "id": "FOLIO_train_127",
    "context": "All dispensable things are environment-friendly. All woodware is dispensable. All paper is woodware. No good things are bad. All environment-friendly things are good. A worksheet is either paper or is environment-friendly.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A worksheet is not bad.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nDispensable(x) ::: x is dispensable.\nEnvironmentFriendly(x) ::: x is environment-friendly.\nGood(x) ::: x is good.\nBad(x) ::: x is bad.\nPaper(x) ::: x is paper.\nWoodware(x) ::: x is woodware.\nWorksheet(x) ::: x is a worksheet.\nPremises:\n∀x (Dispensable(x) → EnvironmentFriendly(x)) ::: All dispensable things are environment-friendly.\n∀x (Woodware(x) → Dispensable(x)) ::: All woodware is dispensable.\n∀x (Paper(x) → Woodware(x)) ::: All paper is woodware.\n¬(Good(x) ∧ Bad(x)) ::: No good things are bad.\n∀x (EnvironmentFriendly(x) → Good(x)) ::: All environment-friendly things are good.\nWorksheet(x) ⊕ Paper(x) ::: A worksheet is either paper or is environment-friendly.\nConclusion:\n¬Bad(x) ::: A worksheet is not bad.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\n###\nPredicates:\nDependent(x) ::: x is a person dependent on caffeine.\nDrinks(x) ::: x regularly drinks coffee.\nJokes(x) ::: x jokes about being addicted to caffeine.\nUnaware(x) ::: x is unaware that caffeine is a drug.\nStudent(x) ::: x is a student.\nPremises:\n∀x (Drinks(x"
    ]
  },
  {
    "id": "FOLIO_train_128",
    "context": "No reptile has fur. All snakes are reptiles.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Some snake has fur.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nReptile(x) ::: x is a reptile.\nSnake(x) ::: x is a snake.\nFur(x) ::: x has fur.\nPremises:\n∀x (Reptile(x) → ¬Fur(x)) ::: No reptile has fur.\n∀x (Snake(x) → Reptile(x)) ::: All snakes are reptiles.\nConclusion:\n∃x (Snake(x) ∧ Fur(x)) ::: Some snake has fur.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\n###\nPredicates:\nDependent(x) ::: x is a person dependent on caffeine.\nDrinks(x) ::: x regularly drinks coffee.\nJokes(x) ::: x jokes about being addicted to caffeine.\nUnaware(x) ::: x is unaware that caffeine is a drug.\nStudent(x) ::: x is a student.\nPremises:\n∀x (Drinks(x) → Dependent(x)) ::: All people who regularly drink coffee are dependent on caffeine.\n∀x (Drinks(x) ⊕ Jokes(x)) ::: People either regularly drink coffee or joke about being addicted to caffeine.\n∀x (Jokes(x) → ¬Unaware(x)) ::: No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. \n(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina)) ::: Rina is either a student and unaware that"
    ]
  },
  {
    "id": "FOLIO_train_129",
    "context": "All buildings in New Haven are low. All buildings managed by the Yale Housing are located in New Haven. All buildings in Manhattans are high. All buildings owned by Bloomberg are located in Manhattans. All buildings with the Bloomberg logo are owned by Bloomberg. Tower A is managed by the Yale Housing. Tower B is with the Bloomberg logo.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tower A is low.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLow(x) ::: x is low.\nHigh(x) ::: x is high.\nLocated(x, y) ::: x is located in y.\nOwned(x, y) ::: x is owned by y.\nManaged(x, y) ::: x is managed by y.\nPremises:\n∀x (Building(x) → Low(x)) ::: All buildings in New Haven are low.\n∀x (Building(x) → Located(x, NewHaven)) ::: All buildings in New Haven are located in New Haven.\n∀x (Building(x) → Located(x, Manhattans)) ::: All buildings in Manhattans are located in Manhattans.\n∀x (Building(x) → Owned(x, Bloomberg)) ::: All buildings owned by Bloomberg are located in Manhattans.\n∃x (Building(x) ∧ Logo(x, bloomberg)) ::: All buildings with the Bloomberg logo are owned by Bloomberg.\nTowerA(x) ∧ Managed(x, YaleHousing) ::: Tower A is managed by the Yale Housing.\nTowerB(x) ∧ Logo(x, bloomberg) ::: Tower B is with the Bloomberg logo.\nConclusion:\nLow(TowerA) ::: Tower A is low.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\n###\nPredicates:\nDependent(x) ::: x is a person dependent on caffeine.\nDrinks(x) ::: x regularly drinks coffee.\nJokes(x) ::: x jokes about being addicted to caffeine."
    ]
  },
  {
    "id": "FOLIO_train_130",
    "context": "All buildings in New Haven are low. All buildings managed by the Yale Housing are located in New Haven. All buildings in Manhattans are high. All buildings owned by Bloomberg are located in Manhattans. All buildings with the Bloomberg logo are owned by Bloomberg. Tower A is managed by the Yale Housing. Tower B is with the Bloomberg logo.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tower B is not located in Manhattans.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nLow(x) ::: x is low.\nHigh(x) ::: x is high.\nLocated(x, y) ::: x is located in y.\nOwned(x, y) ::: x is owned by y.\nManaged(x, y) ::: x is managed by y.\nLogo(x, y) ::: x has the y logo.\nPremises:\n∀x (Building(x) → Low(x)) ::: All buildings in New Haven are low.\n∀x (Building(x) → Located(x, NewHaven)) ::: All buildings in New Haven are located in New Haven.\n∀x (Building(x) → Located(x, Manhattans)) ::: All buildings in Manhattans are located in Manhattans.\n∀x (Building(x) → Owned(x, Bloomberg)) ::: All buildings owned by Bloomberg are located in Manhattans.\nLogo(TowerA, YaleHousing) ∧ Managed(TowerA, YaleHousing) ::: Tower A is managed by the Yale Housing.\nLogo(TowerB, Bloomberg) ∧ Logo(TowerB, YaleHousing) ::: Tower B is with the Bloomberg logo.\nConclusion:\nLocated(TowerB, Manhattans) ⊕ Owned(TowerB, Bloomberg) ::: Tower B is not located in Manhattans.\n------"
    ]
  },
  {
    "id": "FOLIO_train_131",
    "context": "All buildings in New Haven are low. All buildings managed by the Yale Housing are located in New Haven. All buildings in Manhattans are high. All buildings owned by Bloomberg are located in Manhattans. All buildings with the Bloomberg logo are owned by Bloomberg. Tower A is managed by the Yale Housing. Tower B is with the Bloomberg logo.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tower B is located in New Haven.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nLow(x) ::: x is low.\nHigh(x) ::: x is high.\nLocated(x, y) ::: x is located in y.\nOwned(x, y) ::: x is owned by y.\nManaged(x, y) ::: x is managed by y.\nLogo(x, y) ::: x has the y logo.\nPremises:\n∀x (Building(x) → Low(x)) ::: All buildings in New Haven are low.\n∀x (Building(x) → Located(x, NewHaven)) ::: All buildings in New Haven are located in New Haven.\n∀x (Building(x) → Located(x, Manhattans)) ::: All buildings in Manhattans are located in Manhattans.\n∀x (Building(x) → Owned(x, Bloomberg)) ::: All buildings owned by Bloomberg are located in Manhattans.\nLogo(TowerA, YaleHousing) ∧ Managed(TowerA, YaleHousing) ::: Tower A is managed by the Yale Housing.\nLogo(TowerB, Bloomberg) ∧ Owned(TowerB, Bloomberg) ::: Tower B is with the Bloomberg logo.\nConclusion:\nLocated(TowerB, NewHaven) ::: Tower B is located in New Haven.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffe"
    ]
  },
  {
    "id": "FOLIO_train_132",
    "context": "No cold-blooded animals are birds. All reptiles are cold-blooded. Either an animal is a bird or it eats other animals. If an animal eats other animals, then it is a carnivore. Ron is neither a cold-blooded animal nor a carnivore. Henry is neither a carnivore nor a lizard.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Ron is a lizard.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nColdBlooded(x) ::: x is a cold-blooded animal.\nBird(x) ::: x is a bird.\nReptile(x) ::: x is a reptile.\nEat(x, y) ::: x eats y.\nCarnivore(x) ::: x is a carnivore.\nPremises:\n∀x (ColdBlooded(x) → ¬Bird(x)) ::: No cold-blooded animals are birds.\n∀x (Reptile(x) → ColdBlooded(x)) ::: All reptiles are cold-blooded.\n∀x (Eat(x, y) → (Animal(x) ∨ Carnivore(x))) ::: Either an animal is a bird or it eats other animals.\n∀x (Eat(x, y) → Carnivore(x) → Animal(y)) ::: If an animal eats other animals, then it is a carnivore.\n¬ColdBlooded(ron) ∧ ¬Carnivore(ron) ::: Ron is neither a cold-blooded animal nor a carnivore.\n¬Carnivore(henry) ∧ ¬Lizard(henry) ::: Henry is neither a carnivore nor a lizard.\nConclusion:\nLizard(ron) ::: Ron is a lizard.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either"
    ]
  },
  {
    "id": "FOLIO_train_133",
    "context": "No cold-blooded animals are birds. All reptiles are cold-blooded. Either an animal is a bird or it eats other animals. If an animal eats other animals, then it is a carnivore. Ron is neither a cold-blooded animal nor a carnivore. Henry is neither a carnivore nor a lizard.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Either Henry is a reptile or Ron eats other animals.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nColdBlooded(x) ::: x is a cold-blooded animal.\nBird(x) ::: x is a bird.\nEat(x, y) ::: x eats y.\nCarnivore(x) ::: x is a carnivore.\nReptile(x) ::: x is a reptile.\nPremises:\n¬ColdBlooded(bird) ∧ ColdBlooded(reptile) ∧ Eat(animal, otherAnimals) ∧ (Eat(animal, otherAnimals) → Carnivore(animal)) ::: No cold-blooded animals are birds. All reptiles are cold-blooded. Either an animal is a bird or it eats other animals. If an animal eats other animals, then it is a carnivore.\n¬ColdBlooded(ron) ∧ ¬Carnivore(ron) ::: Ron is neither a cold-blooded animal nor a carnivore.\n¬Carnivore(henry) ∧ ¬Reptile(henry) ::: Henry is neither a carnivore nor a lizard.\nConclusion:\nEither Reptile(henry) ∨ Eat(ron, otherAnimals) ::: Either Henry is a reptile or Ron eats other animals.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine."
    ]
  },
  {
    "id": "FOLIO_train_134",
    "context": "No cold-blooded animals are birds. All reptiles are cold-blooded. Either an animal is a bird or it eats other animals. If an animal eats other animals, then it is a carnivore. Ron is neither a cold-blooded animal nor a carnivore. Henry is neither a carnivore nor a lizard.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? It is not true that Ron is a reptile or that Henry is cold-blooded.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nColdBlooded(x) ::: x is a cold-blooded animal.\nBird(x) ::: x is a bird.\nEat(x, y) ::: x eats y.\nCarnivore(x) ::: x is a carnivore.\nReptile(x) ::: x is a reptile.\nPremises:\n¬(ColdBlooded(x) ∧ Bird(x)) ::: No cold-blooded animals are birds.\n∀x (ColdBlooded(x) → Reptile(x)) ::: All reptiles are cold-blooded.\n∀x (Eat(x, y) → (Animal(x) ∨ Carnivore(x))) ::: Either an animal is a bird or it eats other animals.\n∀x (Eat(x, y) → (Carnivore(x) ∨ Animal(y))) ::: If an animal eats other animals, then it is a carnivore.\n¬ColdBlooded(ron) ∧ ¬Carnivore(ron) ::: Ron is neither a cold-blooded animal nor a carnivore.\n¬ColdBlooded(henry) ∧ ¬Carnivore(henry) ::: Henry is neither a carnivore nor a lizard.\nConclusion:\n¬(ColdBlooded(ron) ∧ Bird(ron)) ∧ ¬(ColdBlooded(henry) ∧ Bird"
    ]
  },
  {
    "id": "FOLIO_train_135",
    "context": "Ambiortus is a prehistoric bird genus. Ambiorus Dementjevi is the only known species of Ambiortus. The Mongol region was where Ambiorus Dementjevi lived. Yevgeny Kurochkin was the discoverer of Ambiortus.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Yevgeny Kurochkin discovered a new bird genus.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nBirdGenus(x) ::: x is a bird genus.\nSpecies(x, y) ::: x is a species of y.\nAmbiortus(x) ::: x is a prehistoric bird genus.\nAmbiorusDementjevi(x) ::: x is the only known species of Ambiortus.\nMongolRegion(x) ::: x is the Mongol region.\nYevgenyKurochkin(x) ::: x is Yevgeny Kurochkin.\nDiscover(x, y) ::: x discovered y.\nPremises:\nAmbiortus(ambiortus) ∧ Species(ambiortus, ambiorusDementjevi) ∧ MongolRegion(ambiorusDementjevi) ::: Ambiortus is a prehistoric bird genus. Ambiorus Dementjevi is the only known species of Ambiortus. The Mongol region was where Ambiorus Dementjevi lived.\nYevgenyKurochkin(yevgeny) ∧ Discover(yevgeny, ambiortus) ::: Yevgeny Kurochkin was the discoverer of Ambiortus.\nConclusion:\nDiscover(yevgeny, ambiortus) ::: Yevgeny Kurochkin discovered a new bird genus.\n------\nProblem:\nThe following is a list of the top 100 most popular baby names in the United States in 2013.\n1"
    ]
  },
  {
    "id": "FOLIO_train_136",
    "context": "Ambiortus is a prehistoric bird genus. Ambiorus Dementjevi is the only known species of Ambiortus. The Mongol region was where Ambiorus Dementjevi lived. Yevgeny Kurochkin was the discoverer of Ambiortus.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There is a species of Ambiortus that doesn't live in the Mongol region.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nAmbiortus(x) ::: x is a prehistoric bird genus.\nAmbiorusDementjevi(x) ::: x is the only known species of Ambiortus.\nMongol(x) ::: x is in the Mongol region.\nYevgenyKurochkin(x) ::: x is the discoverer of Ambiortus.\nPremises:\nAmbiortus(ambiorusDementjevi) ∧ Mongol(ambiorusDementjevi) ∧ YevgenyKurochkin(ambiorusDementjevi) ::: Ambiorus Dementjevi is the only known species of Ambiortus. The Mongol region was where Ambiorus Dementjevi lived. Yevgeny Kurochkin was the discoverer of Ambiortus.\nConclusion:\n¬∃x (Ambiortus(x) ∧ Mongol(x)) ::: There is a species of Ambiortus that doesn't live in the Mongol region.\n------\nProblem:\nThe following is a list of the 100 most common surnames in the United States.\n1. Smith\n2. Johnson\n3. Williams\n4. Brown\n5. Jones\n6. Miller\n7. Davis\n8. Wilson\n9. Anderson\n10. Moore\n11. Taylor\n12. White\n13. Garcia\n14. Rodriguez\n15. Hernandez\n16. Martinez\n17. Lope"
    ]
  },
  {
    "id": "FOLIO_train_137",
    "context": "Ambiortus is a prehistoric bird genus. Ambiorus Dementjevi is the only known species of Ambiortus. The Mongol region was where Ambiorus Dementjevi lived. Yevgeny Kurochkin was the discoverer of Ambiortus.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Yevgeny Kurochkin lived in the Mongol region.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nAmbiortus(x) ::: x is a prehistoric bird genus.\nAmbiorusDementjevi(x) ::: x is the only known species of Ambiortus.\nMongol(x) ::: x is in the Mongol region.\nYevgenyKurochkin(x) ::: x is Yevgeny Kurochkin.\nDiscover(x, y) ::: x discovered y.\nPremises:\nAmbiortus(ambiortus) ∧ AmbiorusDementjevi(ambiortus) ::: Ambiortus is a prehistoric bird genus.\nAmbiorusDementjevi(ambiortus) ::: Ambiorus Dementjevi is the only known species of Ambiortus.\nMongol(mongol) ::: Mongol is in the Mongol region.\nYevgenyKurochkin(yevgeny) ::: Yevgeny Kurochkin is Yevgeny Kurochkin.\nDiscover(yevgeny, ambiortus) ::: Yevgeny Kurochkin discovered Ambiortus.\nConclusion:\nMongol(yevgeny) ::: Yevgeny Kurochkin lived in the Mongol region.\n------\nProblem:\nThe following is a list of the top 100 most popular baby names in the United States in 2013.\n1. Jacob\n2. Mason\n3. William\n4. Michael"
    ]
  },
  {
    "id": "FOLIO_train_138",
    "context": "Ambiortus is a prehistoric bird genus. Ambiorus Dementjevi is the only known species of Ambiortus. The Mongol region was where Ambiorus Dementjevi lived. Yevgeny Kurochkin was the discoverer of Ambiortus.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? All species of Ambiortus live in the Mongol region.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nAmbiortus(x) ::: x is a prehistoric bird genus.\nAmbiorusDementjevi(x) ::: x is the only known species of Ambiortus.\nMongol(x) ::: x is in the Mongol region.\nYevgenyKurochkin(x) ::: x is the discoverer of Ambiortus.\nPremises:\nAmbiortus(ambiorusDementjevi) ∧ Mongol(ambiorusDementjevi) ::: Ambiorus Dementjevi is the only known species of Ambiortus and lives in the Mongol region.\nAmbiortus(ambiorusDementjevi) ∧ YevgenyKurochkin(ambiorusDementjevi) ::: Ambiorus Dementjevi is the only known species of Ambiortus and is discovered by Yevgeny Kurochkin.\nConclusion:\nMongol(ambiorusDementjevi) ::: All species of Ambiortus live in the Mongol region.\n------\nProblem:\nThe following is a list of the top 100 most popular baby names in the United States in 2013.\n1. Jacob\n2. Mason\n3. William\n4. Michael\n5. Ethan\n6. Jayden\n7. Noah\n8. Alexander\n9. Daniel\n10. Aiden\n11. James\n12. Benjamin\n13. Anthony\n14. David\n15. Matthew"
    ]
  },
  {
    "id": "FOLIO_train_139",
    "context": "Everyone that uses a football can throw a football. If someone plays football, then they use a football. Either someone is a football player or a basketball player. Every basketball player is tall. Everyone that can throw a football can throw a football with a spiral. If someone is tall, then they are in shape. If Jack is neither tall nor a basketball player,  then Jack is neither tall nor can throw a football.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jack plays football.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nFootballPlayer(x) ::: x is a football player.\nBasketballPlayer(x) ::: x is a basketball player.\nTall(x) ::: x is tall.\nCanThrow(x, y) ::: x can throw y.\nSpiral(x, y) ::: x throws y with a spiral.\nInShape(x) ::: x is in shape.\nPremises:\n∀x (FootballPlayer(x) → CanThrow(x, football)) ::: Everyone that uses a football can throw a football.\n∀x (FootballPlayer(x) → Uses(x, football)) ::: If someone plays football, then they use a football.\n∃x (BasketballPlayer(x) ∨ FootballPlayer(x)) ::: Either someone is a football player or a basketball player.\n∀x (BasketballPlayer(x) → Tall(x)) ::: Every basketball player is tall.\n∀x (CanThrow(x, football) → CanThrow(x, football) ∧ Spiral(x, football)) ::: If someone can throw a football, then they can throw a football with a spiral.\n∃x (Tall(x) ∧ InShape(x)) ::: If someone is tall, then they are in shape.\n¬(Tall(jack) ∧ BasketballPlayer(jack)) ∧ ¬(Tall(jack) ∨ FootballPlayer(jack)) ::: If Jack is neither tall nor a basketball player,  then Jack is neither tall nor can throw a football.\nConclusion:"
    ]
  },
  {
    "id": "FOLIO_train_140",
    "context": "Everyone that uses a football can throw a football. If someone plays football, then they use a football. Either someone is a football player or a basketball player. Every basketball player is tall. Everyone that can throw a football can throw a football with a spiral. If someone is tall, then they are in shape. If Jack is neither tall nor a basketball player,  then Jack is neither tall nor can throw a football.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jack is in shape.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nFootballPlayer(x) ::: x is a football player.\nBasketballPlayer(x) ::: x is a basketball player.\nTall(x) ::: x is tall.\nInShape(x) ::: x is in shape.\nCanThrow(x, y) ::: x can throw y.\nSpiral(x, y) ::: x throws y with a spiral.\nPremises:\n∀x (FootballPlayer(x) → CanThrow(x, football)) ::: Everyone that uses a football can throw a football.\n∀x (FootballPlayer(x) → Uses(x, football)) ::: If someone plays football, then they use a football.\n∃x (BasketballPlayer(x) ∨ FootballPlayer(x)) ::: Either someone is a football player or a basketball player.\n∀x (BasketballPlayer(x) → Tall(x)) ::: Every basketball player is tall.\n∃x (CanThrow(x, football) ∧ Spiral(x, football)) ::: Everyone that can throw a football can throw a football with a spiral.\nConclusion:\nInShape(jack) ::: Jack is in shape.\n¬(Tall(jack) ∧ BasketballPlayer(jack)) → (Tall(jack) ∧ BasketballPlayer(jack)) ⊕ ¬(Tall(jack) ∨ BasketballPlayer(jack)) ::: If Jack is neither tall nor a basketball player, then Jack is neither tall nor can throw a football.\n------"
    ]
  },
  {
    "id": "FOLIO_train_141",
    "context": "Everyone that uses a football can throw a football. If someone plays football, then they use a football. Either someone is a football player or a basketball player. Every basketball player is tall. Everyone that can throw a football can throw a football with a spiral. If someone is tall, then they are in shape. If Jack is neither tall nor a basketball player,  then Jack is neither tall nor can throw a football.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jack is not in shape.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFootballPlayer(x) ::: x is a football player.\nBasketballPlayer(x) ::: x is a basketball player.\nTall(x) ::: x is tall.\nInShape(x) ::: x is in shape.\nCanThrow(x, y) ::: x can throw y.\nSpiral(x, y) ::: x throws y with a spiral.\nPremises:\n∀x (FootballPlayer(x) → CanThrow(x, football)) ::: Everyone that uses a football can throw a football.\n∀x (FootballPlayer(x) → Uses(x, football)) ::: If someone plays football, then they use a football.\n∃x (BasketballPlayer(x) ∨ FootballPlayer(x)) ::: Either someone is a football player or a basketball player.\n∀x (BasketballPlayer(x) → Tall(x)) ::: Every basketball player is tall.\n∃x (CanThrow(x, football) ∧ Spiral(x, football)) ::: Everyone that can throw a football can throw a football with a spiral.\nConclusion:\nInShape(jack) ::: Jack is in shape.\n¬(Tall(jack) ∧ BasketballPlayer(jack)) ::: If Jack is neither tall nor a basketball player,  then Jack is neither tall nor can throw a football.\n------\nProblem:\nEveryone that uses a football can throw a football. If someone plays football, then they use a football. Either someone is a football"
    ]
  },
  {
    "id": "FOLIO_train_142",
    "context": "Fort Ticonderoga is the current name for Fort Carillon. Pierre de Rigaud de Vaudreuil built Fort Carillon. Fort Carillon was located in New France. New France is not in Europe.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Pierre de Rigaud de Vaudreuil built a fort in New France.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nFort(x) ::: x is a fort.\nBuilt(x, y) ::: x was built by y.\nLocated(x, y) ::: x is located in y.\nNewFrance(x) ::: x is in New France.\nEurope(x) ::: x is in Europe.\nPremises:\nFort(fortTiconderoga) ∧ Built(fortTiconderoga, pierreDeRigaudDeVaudreuil) ::: Fort Ticonderoga is the current name for Fort Carillon.\nFort(fortCarillon) ∧ Built(fortCarillon, pierreDeRigaudDeVaudreuil) ::: Pierre de Rigaud de Vaudreuil built Fort Carillon.\nLocated(fortCarillon, NewFrance) ::: Fort Carillon was located in New France.\n¬Located(fortCarillon, Europe) ::: Fort Carillon was not located in Europe.\nConclusion:\nLocated(fortCarillon, NewFrance) ∧ ¬Located(fortCarillon, Europe) ::: Fort Carillon was located in New France and was not located in Europe.\n------\nProblem:\nThe following is a list of the top 100 most popular baby names in the United States in 2013.\n1. Jacob\n2. Mason\n3. William\n4. Michael\n5. Jayden\n6. Ethan\n7. Alexander\n8. Noah\n9. Daniel\n10"
    ]
  },
  {
    "id": "FOLIO_train_143",
    "context": "Fort Ticonderoga is the current name for Fort Carillon. Pierre de Rigaud de Vaudreuil built Fort Carillon. Fort Carillon was located in New France. New France is not in Europe.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Pierre de Rigaud de Vaudreuil built a fort in New England.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nFort(x) ::: x is a fort.\nBuilt(x, y) ::: x was built by y.\nLocated(x, y) ::: x is located in y.\nNew(x) ::: x is new.\nEurope(x) ::: x is in Europe.\nPremises:\nFort(fortTiconderoga) ∧ Built(fortTiconderoga, pierreDeRigaudDeVaudreuil) ::: Fort Ticonderoga is the current name for Fort Carillon. Pierre de Rigaud de Vaudreuil built Fort Carillon.\nFort(fortCarillon) ∧ Located(fortCarillon, newFrance) ::: Fort Carillon was located in New France.\n¬Europe(newFrance) ::: New France is not in Europe.\nConclusion:\nNew(fortCarillon) ::: Fort Carillon was new.\n------\nProblem:\nThe following is a list of the top 100 most popular baby names in the United States in 2013.\n1. Jacob\n2. Mason\n3. William\n4. Michael\n5. Jayden\n6. Ethan\n7. Alexander\n8. Noah\n9. Daniel\n10. Aiden\n11. Benjamin\n12. Anthony\n13. David\n14. James\n15. Christopher\n16. Matthew\n17. John\n18. Joseph\n19. Andrew\n20. Christian\n21."
    ]
  },
  {
    "id": "FOLIO_train_144",
    "context": "Fort Ticonderoga is the current name for Fort Carillon. Pierre de Rigaud de Vaudreuil built Fort Carillon. Fort Carillon was located in New France. New France is not in Europe.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Fort Carillon was located in Europe.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nFort(x) ::: x is a fort.\nCarillon(x) ::: x is Fort Carillon.\nTiconderoga(x) ::: x is Fort Ticonderoga.\nVaudreuil(x) ::: x is Pierre de Rigaud de Vaudreuil.\nNewFrance(x) ::: x is New France.\nEurope(x) ::: x is Europe.\nPremises:\nFort(carillon) ∧ Carillon(ticonderoga) ∧ Ticonderoga(carillon) ∧ Vaudreuil(carillon) ∧ NewFrance(carillon) ::: Fort Carillon was built by Pierre de Rigaud de Vaudreuil.\nFort(carillon) ∧ Carillon(carillon) ∧ NewFrance(carillon) ::: Fort Carillon is Fort Carillon.\nFort(carillon) ∧ Carillon(carillon) ∧ NewFrance(carillon) ∧ Not(Europe(carillon)) ::: Fort Carillon is not in Europe.\nConclusion:\nEurope(carillon) ::: Fort Carillon was located in Europe.\n------\nProblem:\nThe following is a list of the top 100 most popular baby names in the United States in 2013.\n1. Jacob\n2. Mason\n3. William\n4. Michael\n5. Jayden\n6. Ethan\n7. Alexander\n8. Noah\n9. Daniel\n10. Aiden"
    ]
  },
  {
    "id": "FOLIO_train_145",
    "context": "No soccer players are professional basketball players. All NBA players are professional basketball players. All defenders are soccer players. All centerback players are defenders. If Stephen Curry is an NBA player or a soccer player, then he is a professional basketball player.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Stephen Curry is an NBA player.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nSoccerPlayer(x) ::: x is a soccer player.\nNBAPlayer(x) ::: x is an NBA player.\nProfessionalBasketballPlayer(x) ::: x is a professional basketball player.\nDefender(x) ::: x is a defender.\nCenterbackPlayer(x) ::: x is a centerback player.\nPremises:\n¬∃x (SoccerPlayer(x) ∧ NBAPlayer(x)) ::: No soccer players are professional basketball players.\n∀x (NBAPlayer(x) → ProfessionalBasketballPlayer(x)) ::: All NBA players are professional basketball players.\n∀x (Defender(x) → SoccerPlayer(x)) ::: All defenders are soccer players.\n∀x (CenterbackPlayer(x) → Defender(x)) ::: All centerback players are defenders.\n(NBAPlayer(stephenCurry) ∨ SoccerPlayer(stephenCurry)) → ProfessionalBasketballPlayer(stephenCurry) ::: If Stephen Curry is an NBA player or a soccer player, then he is a professional basketball player.\nConclusion:\nNBAPlayer(stephenCurry) ::: Stephen Curry is an NBA player.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a"
    ]
  },
  {
    "id": "FOLIO_train_146",
    "context": "No soccer players are professional basketball players. All NBA players are professional basketball players. All defenders are soccer players. All centerback players are defenders. If Stephen Curry is an NBA player or a soccer player, then he is a professional basketball player.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Stephen Curry is a centerback player.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nSoccerPlayer(x) ::: x is a soccer player.\nNBAPlayer(x) ::: x is an NBA player.\nProfessionalBasketballPlayer(x) ::: x is a professional basketball player.\nDefender(x) ::: x is a defender.\nCenterbackPlayer(x) ::: x is a centerback player.\nPremises:\n¬∃x (SoccerPlayer(x) ∧ NBAPlayer(x)) ::: No soccer players are professional basketball players.\n∀x (NBAPlayer(x) → ProfessionalBasketballPlayer(x)) ::: All NBA players are professional basketball players.\n∀x (Defender(x) → SoccerPlayer(x)) ::: All defenders are soccer players.\n∀x (CenterbackPlayer(x) → Defender(x)) ::: All centerback players are defenders.\n(NBAPlayer(curry) ∨ SoccerPlayer(curry)) → ProfessionalBasketballPlayer(curry) ::: If Stephen Curry is an NBA player or a soccer player, then he is a professional basketball player.\nConclusion:\nCenterbackPlayer(curry) ::: Stephen Curry is a centerback player.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a"
    ]
  },
  {
    "id": "FOLIO_train_147",
    "context": "No soccer players are professional basketball players. All NBA players are professional basketball players. All defenders are soccer players. All centerback players are defenders. If Stephen Curry is an NBA player or a soccer player, then he is a professional basketball player.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Stephen Curry is not a centerback player.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nSoccerPlayer(x) ::: x is a soccer player.\nNBAPlayer(x) ::: x is an NBA player.\nProfessionalBasketballPlayer(x) ::: x is a professional basketball player.\nDefender(x) ::: x is a defender.\nCenterbackPlayer(x) ::: x is a centerback player.\nPremises:\n¬∃x (SoccerPlayer(x) ∧ NBAPlayer(x)) ::: No soccer players are professional basketball players.\n∀x (NBAPlayer(x) → ProfessionalBasketballPlayer(x)) ::: All NBA players are professional basketball players.\n∀x (Defender(x) → SoccerPlayer(x)) ::: All defenders are soccer players.\n∀x (CenterbackPlayer(x) → Defender(x)) ::: All centerback players are defenders.\n(NBAPlayer(curry) ∨ SoccerPlayer(curry)) → ProfessionalBasketballPlayer(curry) ::: If Stephen Curry is an NBA player or a soccer player, then he is a professional basketball player.\nConclusion:\n¬CenterbackPlayer(curry) ::: Stephen Curry is not a centerback player.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is"
    ]
  },
  {
    "id": "FOLIO_train_148",
    "context": "No songs are visual. All folk songs are songs. All videos are visual. All movies are videos. All sci-fi movies are movies. Inception is a sci-fi movie. Mac is neither a folk song nor a sci-fi movie.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Inception is a folk song.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nSong(x) ::: x is a song.\nFolkSong(x) ::: x is a folk song.\nVideo(x) ::: x is a video.\nMovie(x) ::: x is a movie.\nSciFiMovie(x) ::: x is a sci-fi movie.\nPremises:\n¬Song(x) ∧ Video(x) ::: No songs are visual.\n∀x (Song(x) → FolkSong(x)) ::: All folk songs are songs.\n∀x (Video(x) → Visual(x)) ::: All videos are visual.\n∀x (Movie(x) → Video(x)) ::: All movies are videos.\n∀x (SciFiMovie(x) → Movie(x)) ::: All sci-fi movies are movies.\nMovie(inception) ::: Inception is a sci-fi movie.\n¬Movie(mac) ::: Mac is neither a folk song nor a sci-fi movie.\nConclusion:\nFolkSong(inception) ::: Inception is a folk song.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a"
    ]
  },
  {
    "id": "FOLIO_train_149",
    "context": "No songs are visual. All folk songs are songs. All videos are visual. All movies are videos. All sci-fi movies are movies. Inception is a sci-fi movie. Mac is neither a folk song nor a sci-fi movie.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Inception is not a folk song.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nSong(x) ::: x is a song.\nFolkSong(x) ::: x is a folk song.\nVideo(x) ::: x is a video.\nMovie(x) ::: x is a movie.\nSciFiMovie(x) ::: x is a sci-fi movie.\nPremises:\n¬Song(x) ⇒ ¬Visual(x) ::: No songs are visual.\n∀x (Song(x) → Song(x)) ::: All songs are songs.\n∀x (FolkSong(x) → Song(x)) ::: All folk songs are songs.\n∀x (Video(x) → Visual(x)) ::: All videos are visual.\n∀x (Movie(x) → Video(x)) ::: All movies are videos.\n∀x (SciFiMovie(x) → Movie(x)) ::: All sci-fi movies are movies.\nInception(x) ∧ Movie(x) ∧ SciFiMovie(x) ::: Inception is a sci-fi movie.\nMac(x) ∧ Movie(x) ∧ ¬FolkSong(x) ::: Mac is neither a folk song nor a sci-fi movie.\nConclusion:\n¬Song(inception) ⇒ ¬Visual(inception) ::: Inception is not a folk song.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink"
    ]
  },
  {
    "id": "FOLIO_train_150",
    "context": "No songs are visual. All folk songs are songs. All videos are visual. All movies are videos. All sci-fi movies are movies. Inception is a sci-fi movie. Mac is neither a folk song nor a sci-fi movie.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Inception is either a video or a folk song.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nSong(x) ::: x is a song.\nFolkSong(x) ::: x is a folk song.\nVideo(x) ::: x is a video.\nMovie(x) ::: x is a movie.\nSciFiMovie(x) ::: x is a sci-fi movie.\nPremises:\n¬Song(movie) ∧ ¬Video(song) ∧ ¬FolkSong(video) ∧ ¬Movie(video) ∧ ¬SciFiMovie(song) ∧ ¬SciFiMovie(video) ∧ ¬SciFiMovie(movie) ∧ ¬Movie(song) ∧ ¬Video(movie) ∧ ¬FolkSong(movie) ∧ ¬Song(video) ∧ ¬Video(song) ∧ ¬FolkSong(video) ∧ ¬Movie(video) ∧ ¬SciFiMovie(song) ∧ ¬SciFiMovie(video) ∧ ¬SciFiMovie(movie) ∧ ¬Movie(song) ∧ ¬Video(movie) ∧ ¬FolkSong(movie) ∧ ¬Song(video) ∧ ¬Video(song) ∧ ¬FolkSong(video) ∧ ¬Movie(video) ∧ ¬SciFiMovie(song) ∧ ¬SciFiMovie(video) ∧ ¬SciFiMovie(movie) ∧ ¬Movie(song) ∧ ¬Video(movie) ∧ ¬FolkSong(movie) ∧ ¬Song(video) ∧ ¬Video(song) ∧ ¬FolkSong(video) ∧ ¬Movie(video) ∧ ¬SciFiMovie(song) ∧ ¬SciFiMovie(video) ∧ ¬SciFiMovie(movie) ∧ ¬Movie(song) ∧ ¬Video(movie) ∧ ¬FolkSong(movie) ∧ ¬Song(video) ∧ ¬Video(song) ∧ ¬FolkSong(video) ∧ ¬Movie(video) ∧ ¬SciFiMovie(song) ∧ ¬SciFiMovie(video) ∧ ¬SciFiMovie(movie) ∧ ¬Movie(song) ∧ ¬Video(movie) ∧ ¬FolkSong(movie) ∧ ¬Song(video) ∧ ¬Video(song) ∧ ¬FolkSong(video) ∧ ¬Movie(video) ∧ ¬SciFiMovie(song) ∧ ¬SciFiMovie(video) ∧ ¬SciFiMovie(movie) ∧ ¬Movie(song) ∧ ¬Video(movie) ∧ ¬FolkSong(movie) ∧ ¬Song(video) ∧ ¬Video(song) ∧ ¬FolkSong(video) ∧ ¬Movie(video) ∧ ¬SciFiMovie(song) ∧ ¬SciFiMovie(video) ∧ ¬SciFiMovie(movie) ∧ ¬Movie(song) ∧ ¬Video(movie) ∧ ¬FolkSong(movie) ∧ ¬Song(video) ∧ ¬Video(song) ∧ ¬FolkSong(video) ∧ ¬Movie(video) ∧ ¬SciFiMovie(song) ∧ ¬SciFiMovie(video) ∧ ¬SciFiMovie(movie) ∧ ¬Movie(song) ∧ ¬Video(movie) ∧ ¬FolkSong(movie) ∧ ¬Song(video) ∧ ¬Video(song) ∧ ¬FolkSong(video) ∧ ¬Movie(video) ∧ ¬SciFiMovie(song) ∧ ¬SciFiMovie(video) ∧ ¬SciFiMovie(movie) ∧ ¬Movie(song) ∧ ¬Video(movie) ∧ ¬FolkSong(movie) ∧ ¬Song(video) ∧ ¬Video(song) ∧ ¬FolkSong(video) ∧ ¬Movie(video) ∧ ¬SciFiMovie(song) ∧ ¬SciFiMovie(video) ∧ ¬SciFiMovie(movie) ∧ ¬Movie(song) ∧"
    ]
  },
  {
    "id": "FOLIO_train_151",
    "context": "No songs are visual. All folk songs are songs. All videos are visual. All movies are videos. All sci-fi movies are movies. Inception is a sci-fi movie. Mac is neither a folk song nor a sci-fi movie.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mac is a video.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nSong(x) ::: x is a song.\nFolkSong(x) ::: x is a folk song.\nVideo(x) ::: x is a video.\nMovie(x) ::: x is a movie.\nSciFiMovie(x) ::: x is a sci-fi movie.\nPremises:\n¬Song(x) ∧ Video(x) ::: No songs are visual.\n∀x (Song(x) → FolkSong(x)) ::: All folk songs are songs.\n∀x (Video(x) → Visual(x)) ::: All videos are visual.\n∀x (Movie(x) → Video(x)) ::: All movies are videos.\n∀x (SciFiMovie(x) → Movie(x)) ::: All sci-fi movies are movies.\nMovie(inception) ::: Inception is a sci-fi movie.\n¬Movie(mac) ::: Mac is neither a folk song nor a sci-fi movie.\nConclusion:\nVideo(mac) ::: Mac is a video.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\n###\nPredicates:\nDependent(x) ::: x is a person dependent on caffeine.\nDrinks(x) ::: x regularly drinks coffee.\nJokes(x) ::: x jokes about being addicted to caffeine.\nUnaware(x) ::: x is unaware that caffeine is a drug.\nStudent(x) ::: x is a student.\nPremises:\n∀x (Drinks(x) → Dependent(x)) ::: All people who regularly drink coffee are dependent on caffeine.\n∀x (Drinks(x) ⊕ Jokes(x)) ::: People either regularly drink coffee or joke about being addicted to caffeine.\n∀x (Jokes(x) → ¬Unaware(x)) ::: No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. \n(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina)) ::: Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. \n¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina)) ::: If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nConclusion:\nJokes(rina) ⊕ Unaware(rina) ::: Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\n((Jokes(rina) ∧ Unaware(rina)) ⊕ ¬(Jokes(rina) ∨ Unaware(rina))) → (Jokes(rina) ∧ Drinks(rina)) ::: If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee"
    ]
  },
  {
    "id": "FOLIO_train_152",
    "context": "All extroverts are overtly expressive. People are either extroverts or introverts. If someone is an introvert, then they are shy and reticent. No shy and reticent person likes to talk to strangers. Jeff is not an extrovert and someone who likes to talk to strangers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jeff is a shy and reticent person.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nExtrovert(x) ::: x is an extrovert.\nOvertlyExpressive(x) ::: x is overtly expressive.\nIntrovert(x) ::: x is an introvert.\nShy(x) ::: x is shy.\nReticent(x) ::: x is reticent.\nLikesToTalkToStrangers(x) ::: x likes to talk to strangers.\nPremises:\n∀x (Extrovert(x) → OvertlyExpressive(x)) ::: All extroverts are overtly expressive.\n∀x (Introvert(x) → Shy(x) ∧ Reticent(x)) ::: People are either extroverts or introverts. If someone is an introvert, then they are shy and reticent.\n¬LikesToTalkToStrangers(jeff) ::: No shy and reticent person likes to talk to strangers.\n¬Extrovert(jeff) ∧ LikesToTalkToStrangers(jeff) ::: Jeff is not an extrovert and someone who likes to talk to strangers.\nConclusion:\nShy(jeff) ∧ Reticent(jeff) ::: Jeff is a shy and reticent person.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\n###\nPredicates:\nDependent(x) ::: x is a person dependent on caffeine.\nDrinks(x) ::: x regularly drinks coffee.\nJokes(x) ::: x jokes about being addicted to caffeine.\nUnaware(x) ::: x is unaware that caffeine is a drug.\nStudent(x) ::: x is a student.\nPremises:\n∀x (Drinks(x) → Dependent(x)) ::: All people who regularly drink coffee are dependent on caffeine.\n∀x (Drinks(x) ⊕ Jokes(x)) ::: People either regularly drink coffee or joke about being addicted to caffeine.\n∀x (Jokes(x) → ¬Unaware(x)) ::: No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. \n(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina)) ::: Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. \n¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina)) ::: If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nConclusion:\nJokes(rina) ⊕ Unaware(rina) ::: Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\n((Jokes(rina) ∧ Unaware(rina)) ⊕ ¬(Jokes(rina) ∨ Unaware(rina))) → (Jokes(rina) ∧ Drinks(rina)) ::: If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that c"
    ]
  },
  {
    "id": "FOLIO_train_153",
    "context": "All extroverts are overtly expressive. People are either extroverts or introverts. If someone is an introvert, then they are shy and reticent. No shy and reticent person likes to talk to strangers. Jeff is not an extrovert and someone who likes to talk to strangers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jeff is overtly expressive and likes to talk to strangers.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Overtly expressive(x) ::: x is overtly expressive.\nExtrovert(x) ::: x is an extrovert.\nIntrovert(x) ::: x is an introvert.\nShy(x) ::: x is shy.\nReticent(x) ::: x is reticent.\nLikesToTalkToStrangers(x) ::: x likes to talk to strangers.\nPremises:\n∀x (Extrovert(x) → OvertlyExpressive(x)) ::: All extroverts are overtly expressive.\n∀x (Introvert(x) → Shy(x) ∧ Reticent(x)) ::: People are either extroverts or introverts. If someone is an introvert, then they are shy and reticent.\n¬LikesToTalkToStrangers(jeff) ::: No shy and reticent person likes to talk to strangers.\n¬Extrovert(jeff) ∧ LikesToTalkToStrangers(jeff) ::: Jeff is not an extrovert and someone who likes to talk to strangers.\nConclusion:\nOvertlyExpressive(jeff) ∧ LikesToTalkToStrangers(jeff) ::: Jeff is overtly expressive and likes to talk to strangers.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\n###\nPredicates:\nDependent(x) ::: x is a person dependent on caffeine.\nDrinks(x) ::: x regularly drinks coffee.\nJokes(x) ::: x jokes about being addicted to caffeine.\nUnaware(x) ::: x is unaware that caffeine is a drug.\nStudent(x) ::: x is a student.\nPremises:\n∀x (Drinks(x) → Dependent(x)) ::: All people who regularly drink coffee are dependent on caffeine.\n∀x (Drinks(x) ⊕ Jokes(x)) ::: People either regularly drink coffee or joke about being addicted to caffeine.\n∀x (Jokes(x) → ¬Unaware(x)) ::: No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. \n(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina)) ::: Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. \n¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina)) ::: If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nConclusion:\nJokes(rina) ⊕ Unaware(rina) ::: Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\n((Jokes(rina) ∧ Unaware(rina)) ⊕ ¬(Jokes(rina) ∨ Unaware(rina))) → (Jokes(rina) ∧ Drinks(rina)) ::: If Rina is either a person who jokes about being addicted to caffeine and a person"
    ]
  },
  {
    "id": "FOLIO_train_154",
    "context": "All extroverts are overtly expressive. People are either extroverts or introverts. If someone is an introvert, then they are shy and reticent. No shy and reticent person likes to talk to strangers. Jeff is not an extrovert and someone who likes to talk to strangers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Jeff is either overtly expressive and likes to talk to strangers or neither overtly expressive nor likes to talk to strangers, then Jeff is neither an extrovert nor likes to talk to strangers.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nExtrovert(x) ::: x is an extrovert.\nOvertlyExpressive(x) ::: x is overtly expressive.\nIntrovert(x) ::: x is an introvert.\nShy(x) ::: x is shy.\nReticent(x) ::: x is reticent.\nLikesToTalkToStrangers(x) ::: x likes to talk to strangers.\nPremises:\n∀x (Extrovert(x) → OvertlyExpressive(x)) ::: All extroverts are overtly expressive.\n∀x (Introvert(x) → Shy(x) ∧ Reticent(x)) ::: People are either extroverts or introverts. If someone is an introvert, then they are shy and reticent.\n¬LikesToTalkToStrangers(jeff) ∧ ¬Extrovert(jeff) ::: No shy and reticent person likes to talk to strangers.\n¬LikesToTalkToStrangers(jeff) ⊕ ¬Extrovert(jeff) ::: Jeff is not an extrovert and someone who likes to talk to strangers.\nConclusion:\n¬(LikesToTalkToStrangers(jeff) ∧ Extrovert(jeff)) ⊕ ¬(LikesToTalkToStrangers(jeff) ∨ Extrovert(jeff)) ::: If Jeff is either overtly expressive and likes to talk to strangers or neither overtly expressive nor likes to talk to strangers, then Jeff is neither an extrovert nor likes to talk to strangers.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\n###\nPredicates:\nDependent(x) ::: x is a person dependent on caffeine.\nDrinks(x) ::: x regularly drinks coffee.\nJokes(x) ::: x jokes about being addicted to caffeine.\nUnaware(x) ::: x is unaware that caffeine is a drug.\nStudent(x) ::: x is a student.\nPremises:\n∀x (Drinks(x) → Dependent(x)) ::: All people who regularly drink coffee are dependent on caffeine.\n∀x (Drinks(x) ⊕ Jokes(x)) ::: People either regularly drink coffee or joke about being addicted to caffeine.\n∀x (Jokes(x) → ¬Unaware(x)) ::: No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. \n(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina)) ::: Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. \n¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina)) ::: If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nConclusion:\nJokes(rina) ⊕ Unaware(rina) ::: Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine"
    ]
  },
  {
    "id": "FOLIO_train_155",
    "context": "No low-scoring players are top players in the league. Basketball players are either top players in the league or successfully shoot a high percentage of 3-pointers. All players who successfully shoot a high percentage of 3-pointers are solid at shooting 2-pointers. No players who are solid at shooting 2-pointers are bad at mid-range shots. Candace is either a low-scoring player or successfully shoots a high percentage of 3-pointers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Candace is a top player in the league.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nTopPlayer(x) ::: x is a top player in the league.\nLowScoring(x) ::: x is a low-scoring player.\nShoot(x, y) ::: x shoots y.\nHighPercentage(x, y) ::: x shoots y with a high percentage.\nSolid(x, y) ::: x is solid at shooting y.\nBad(x, y) ::: x is bad at shooting y.\nPremises:\n¬TopPlayer(x) ∧ LowScoring(x) ::: No low-scoring players are top players in the league.\n∀x (TopPlayer(x) ∨ Shoot(x, 3-pointer)) ::: Basketball players are either top players in the league or successfully shoot a high percentage of 3-pointers.\n∀x (Shoot(x, 3-pointer) ∧ HighPercentage(x, 3-pointer)) ∧ ∃y (Solid(x, y) ∧ Bad(x, y)) ::: All players who successfully shoot a high percentage of 3-pointers are solid at shooting 2-pointers.\n¬Solid(x, y) ∧ Bad(x, y) ::: No players who are solid at shooting 2-pointers are bad at mid-range shots.\nCandace ∧ Shoot(candace, 3-pointer) ∧ HighPercentage(candace, 3-pointer) ::: Candace is either a low-scoring player or successfully shoots a high percentage of 3-pointers.\nConclusion:\nTopPlayer(candace) ::: Candace is a top player in the league.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\n###\nPredicates:\nDependent(x) ::: x is a person dependent on caffeine.\nDrinks(x) ::: x regularly drinks coffee.\nJokes(x) ::: x jokes about being addicted to caffeine.\nUnaware(x) ::: x is unaware that caffeine is a drug.\nStudent(x) ::: x is a student.\nPremises:\n∀x (Drinks(x) → Dependent(x)) ::: All people who regularly drink coffee are dependent on caffeine.\n∀x (Drinks(x) ⊕ Jokes(x)) ::: People either regularly drink coffee or joke about being addicted to caffeine.\n∀x (Jokes(x) → ¬Unaware(x)) ::: No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. \n(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina)) ::: Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. \n¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina)) ::: If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nConclusion:\nJokes(rina) ⊕ Unaware(rina) ::: Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a"
    ]
  },
  {
    "id": "FOLIO_train_156",
    "context": "No low-scoring players are top players in the league. Basketball players are either top players in the league or successfully shoot a high percentage of 3-pointers. All players who successfully shoot a high percentage of 3-pointers are solid at shooting 2-pointers. No players who are solid at shooting 2-pointers are bad at mid-range shots. Candace is either a low-scoring player or successfully shoots a high percentage of 3-pointers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Candace is bad at mid-range shots.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nTopPlayer(x) ::: x is a top player in the league.\nLowScoring(x) ::: x is a low-scoring player.\nShoot(x, y) ::: x shoots y.\nHighPercentage(x, y) ::: x shoots y with a high percentage.\nSolid(x, y) ::: x is solid at shooting y.\nBad(x, y) ::: x is bad at shooting y.\nPremises:\n¬TopPlayer(x) ⊕ LowScoring(x) ::: No low-scoring players are top players in the league.\n∀x (TopPlayer(x) ⊕ Shoot(x, 3pointer)) ::: Basketball players are either top players in the league or successfully shoot a high percentage of 3-pointers.\n∀x (Shoot(x, 3pointer) ⊕ Solid(x, 2pointer)) ::: All players who successfully shoot a high percentage of 3-pointers are solid at shooting 2-pointers.\n¬Solid(x, midrange) ⊕ Bad(x, midrange) ::: No players who are solid at shooting 2-pointers are bad at mid-range shots.\nCandace ⊕ Shoot(candace, 3pointer) ::: Candace is either a low-scoring player or successfully shoots a high percentage of 3-pointers.\nConclusion:\nBad(candace, midrange) ::: Candace is bad at mid-range shots.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\n###\nPredicates:\nDependent(x) ::: x is a person dependent on caffeine.\nDrinks(x) ::: x regularly drinks coffee.\nJokes(x) ::: x jokes about being addicted to caffeine.\nUnaware(x) ::: x is unaware that caffeine is a drug.\nStudent(x) ::: x is a student.\nPremises:\n∀x (Drinks(x) → Dependent(x)) ::: All people who regularly drink coffee are dependent on caffeine.\n∀x (Drinks(x) ⊕ Jokes(x)) ::: People either regularly drink coffee or joke about being addicted to caffeine.\n∀x (Jokes(x) → ¬Unaware(x)) ::: No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. \n(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina)) ::: Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. \n¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina)) ::: If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nConclusion:\nJokes(rina) ⊕ Unaware(rina) ::: Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\n((Jokes(rina) ∧ Unaware(rina)) ⊕ ¬(Jokes(rina) ∨ Unaware(rina"
    ]
  },
  {
    "id": "FOLIO_train_157",
    "context": "No low-scoring players are top players in the league. Basketball players are either top players in the league or successfully shoot a high percentage of 3-pointers. All players who successfully shoot a high percentage of 3-pointers are solid at shooting 2-pointers. No players who are solid at shooting 2-pointers are bad at mid-range shots. Candace is either a low-scoring player or successfully shoots a high percentage of 3-pointers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Candace is solid at shooting 2-pointers or bad at mid-range shots.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nTopPlayer(x) ::: x is a top player in the league.\nLowScoring(x) ::: x is a low-scoring player.\nShoot(x, y) ::: x shoots y.\nHighPercentage(x, y) ::: x shoots y with a high percentage.\nSolid(x, y) ::: x is solid at y.\nBad(x, y) ::: x is bad at y.\nPremises:\n¬TopPlayer(x) ⊕ LowScoring(x) ::: No low-scoring players are top players in the league.\n∀x (TopPlayer(x) ⊕ Shoot(x, 3pointer)) ::: Basketball players are either top players in the league or successfully shoot a high percentage of 3-pointers.\n∀x (Shoot(x, 3pointer) ⊕ Solid(x, 2pointer)) ::: All players who successfully shoot a high percentage of 3-pointers are solid at shooting 2-pointers.\n¬Solid(x, midrange) ⊕ Bad(x, midrange) ::: No players who are solid at shooting 2-pointers are bad at mid-range shots.\nCandace ⊕ Shoot(candace, 3pointer) ::: Candace is either a low-scoring player or successfully shoots a high percentage of 3-pointers.\nConclusion:\nSolid(candace, 2pointer) ⊕ Bad(candace, midrange) ::: Candace is either a solid at shooting 2-pointers or bad at mid-range shots.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\n###\nPredicates:\nDependent(x) ::: x is a person dependent on caffeine.\nDrinks(x) ::: x regularly drinks coffee.\nJokes(x) ::: x jokes about being addicted to caffeine.\nUnaware(x) ::: x is unaware that caffeine is a drug.\nStudent(x) ::: x is a student.\nPremises:\n∀x (Drinks(x) → Dependent(x)) ::: All people who regularly drink coffee are dependent on caffeine.\n∀x (Drinks(x) ⊕ Jokes(x)) ::: People either regularly drink coffee or joke about being addicted to caffeine.\n∀x (Jokes(x) → ¬Unaware(x)) ::: No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. \n(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina)) ::: Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. \n¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina)) ::: If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nConclusion:\nJokes(rina) ⊕ Unaware(rina) ::: Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\n((Jokes(rina) ∧ Unaware"
    ]
  },
  {
    "id": "FOLIO_train_158",
    "context": "No low-scoring players are top players in the league. Basketball players are either top players in the league or successfully shoot a high percentage of 3-pointers. All players who successfully shoot a high percentage of 3-pointers are solid at shooting 2-pointers. No players who are solid at shooting 2-pointers are bad at mid-range shots. Candace is either a low-scoring player or successfully shoots a high percentage of 3-pointers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Candace is either solid at shooting 2-pointers or bad at mid-range shots.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTopPlayer(x) ::: x is a top player in the league.\nLowScoring(x) ::: x is a low-scoring player.\nShoot(x, y) ::: x shoots y.\nHighPercentage(x, y) ::: x shoots y with a high percentage.\nSolid(x, y) ::: x is solid at y.\nBad(x, y) ::: x is bad at y.\nPremises:\n¬TopPlayer(x) ⊕ LowScoring(x) ::: No low-scoring players are top players in the league.\n∀x (TopPlayer(x) ⊕ Shoot(x, 3pointer)) ::: Basketball players are either top players in the league or successfully shoot a high percentage of 3-pointers.\n∀x (Shoot(x, 3pointer) ⊕ Solid(x, 2pointer)) ::: All players who successfully shoot a high percentage of 3-pointers are solid at shooting 2-pointers.\n¬Solid(x, midrange) ⊕ Bad(x, midrange) ::: No players who are solid at shooting 2-pointers are bad at mid-range shots.\nCandace ⊕ Shoot(candace, 3pointer) ::: Candace is either a low-scoring player or successfully shoots a high percentage of 3-pointers.\nConclusion:\nSolid(candace, 2pointer) ⊕ Bad(candace, midrange) ::: Candace is either solid at shooting 2-pointers or bad at mid-range shots.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\n###\nPredicates:\nDependent(x) ::: x is a person dependent on caffeine.\nDrinks(x) ::: x regularly drinks coffee.\nJokes(x) ::: x jokes about being addicted to caffeine.\nUnaware(x) ::: x is unaware that caffeine is a drug.\nStudent(x) ::: x is a student.\nPremises:\n∀x (Drinks(x) → Dependent(x)) ::: All people who regularly drink coffee are dependent on caffeine.\n∀x (Drinks(x) ⊕ Jokes(x)) ::: People either regularly drink coffee or joke about being addicted to caffeine.\n∀x (Jokes(x) → ¬Unaware(x)) ::: No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. \n(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina)) ::: Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. \n¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina)) ::: If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nConclusion:\nJokes(rina) ⊕ Unaware(rina) ::: Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\n((Jokes(rina) ∧ Unaware(r"
    ]
  },
  {
    "id": "FOLIO_train_159",
    "context": "No low-scoring players are top players in the league. Basketball players are either top players in the league or successfully shoot a high percentage of 3-pointers. All players who successfully shoot a high percentage of 3-pointers are solid at shooting 2-pointers. No players who are solid at shooting 2-pointers are bad at mid-range shots. Candace is either a low-scoring player or successfully shoots a high percentage of 3-pointers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Candace is a low-scoring player or bad at mid-range shots.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nTopPlayer(x) ::: x is a top player in the league.\nLowScoring(x) ::: x is a low-scoring player.\nShoot(x, y) ::: x shoots y.\nHighPercentage(x, y) ::: x shoots y with a high percentage.\nSolid(x, y) ::: x is solid at shooting y.\nBad(x, y) ::: x is bad at shooting y.\nPremises:\n¬TopPlayer(x) ⊕ TopPlayer(x) ::: No low-scoring players are top players in the league.\n∀x (Shoot(x, 3-pointer) ⊕ TopPlayer(x)) ::: Basketball players are either top players in the league or successfully shoot a high percentage of 3-pointers.\n∀x (Shoot(x, 3-pointer) ⊕ Solid(x, 2-pointer)) ::: All players who successfully shoot a high percentage of 3-pointers are solid at shooting 2-pointers.\n¬Solid(x, mid-range) ⊕ Solid(x, mid-range) ::: No players who are solid at shooting 2-pointers are bad at mid-range shots.\nCandace ⊕ LowScoring(candace) ::: Candace is either a low-scoring player or successfully shoots a high percentage of 3-pointers.\nConclusion:\nLowScoring(candace) ⊕ Bad(candace, mid-range) ::: Candace is a low-scoring player or bad at mid-range shots.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\n###\nPredicates:\nDependent(x) ::: x is a person dependent on caffeine.\nDrinks(x) ::: x regularly drinks coffee.\nJokes(x) ::: x jokes about being addicted to caffeine.\nUnaware(x) ::: x is unaware that caffeine is a drug.\nStudent(x) ::: x is a student.\nPremises:\n∀x (Drinks(x) → Dependent(x)) ::: All people who regularly drink coffee are dependent on caffeine.\n∀x (Drinks(x) ⊕ Jokes(x)) ::: People either regularly drink coffee or joke about being addicted to caffeine.\n∀x (Jokes(x) → ¬Unaware(x)) ::: No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. \n(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina)) ::: Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. \n¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina)) ::: If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nConclusion:\nJokes(rina) ⊕ Unaware(rina) ::: Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\n((Jokes(rina) ∧ Un"
    ]
  },
  {
    "id": "FOLIO_train_160",
    "context": "No low-scoring players are top players in the league. Basketball players are either top players in the league or successfully shoot a high percentage of 3-pointers. All players who successfully shoot a high percentage of 3-pointers are solid at shooting 2-pointers. No players who are solid at shooting 2-pointers are bad at mid-range shots. Candace is either a low-scoring player or successfully shoots a high percentage of 3-pointers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Candace is either a low-scoring player or bad at mid-range shots.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nTopPlayer(x) ::: x is a top player in the league.\nLowScoring(x) ::: x is a low-scoring player.\nShoot(x, y) ::: x shoots y.\nHighPercentage(x, y) ::: x shoots y with a high percentage.\nSolid(x, y) ::: x is solid at shooting y.\nBad(x, y) ::: x is bad at shooting y.\nPremises:\n¬TopPlayer(x) ⊕ LowScoring(x) ::: No low-scoring players are top players in the league.\n∀x (TopPlayer(x) ⊕ Shoot(x, 3pointer)) ::: Basketball players are either top players in the league or successfully shoot a high percentage of 3-pointers.\n∀x (Shoot(x, 3pointer) ⊕ Solid(x, 2pointer)) ::: All players who successfully shoot a high percentage of 3-pointers are solid at shooting 2-pointers.\n¬Solid(x, midrange) ⊕ Bad(x, midrange) ::: No players who are solid at shooting 2-pointers are bad at mid-range shots.\nCandace ⊕ Shoot(candace, 3pointer) ::: Candace is either a low-scoring player or successfully shoots a high percentage of 3-pointers.\nConclusion:\n¬LowScoring(candace) ⊕ Bad(candace, midrange) ::: Candace is either a low-scoring player or bad at mid-range shots.\n------"
    ]
  },
  {
    "id": "FOLIO_train_161",
    "context": "No low-scoring players are top players in the league. Basketball players are either top players in the league or successfully shoot a high percentage of 3-pointers. All players who successfully shoot a high percentage of 3-pointers are solid at shooting 2-pointers. No players who are solid at shooting 2-pointers are bad at mid-range shots. Candace is either a low-scoring player or successfully shoots a high percentage of 3-pointers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Candace is either a player who successfully shoots a high percentage of 3-pointers or is bad at mid-range shots.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nTopPlayer(x) ::: x is a top player in the league.\nLowScoring(x) ::: x is a low-scoring player.\nShoot(x, y) ::: x shoots y.\nHighPercentage(x, y) ::: x shoots y with a high percentage.\nSolid(x, y) ::: x is solid at shooting y.\nBad(x, y) ::: x is bad at shooting y.\nPremises:\n¬TopPlayer(x) ⊕ LowScoring(x) ::: No low-scoring players are top players in the league.\n∀x (TopPlayer(x) ⊕ Shoot(x, 3pointer)) ::: Basketball players are either top players in the league or successfully shoot a high percentage of 3-pointers.\n∀x (Shoot(x, 3pointer) ⊕ Solid(x, 2pointer)) ::: All players who successfully shoot a high percentage of 3-pointers are solid at shooting 2-pointers.\n¬Solid(x, midrange) ⊕ Bad(x, midrange) ::: No players who are solid at shooting 2-pointers are bad at mid-range shots.\nCandace ⊕ Shoot(candace, 3pointer) ::: Candace is either a low-scoring player or successfully shoots a high percentage of 3-pointers.\nConclusion:\nSolid(candace, midrange) ⊕ Bad(candace, midrange) ::: Candace is either a player who successfully shoots a high percentage of 3-pointers or is bad"
    ]
  },
  {
    "id": "FOLIO_train_162",
    "context": "No low-scoring players are top players in the league. Basketball players are either top players in the league or successfully shoot a high percentage of 3-pointers. All players who successfully shoot a high percentage of 3-pointers are solid at shooting 2-pointers. No players who are solid at shooting 2-pointers are bad at mid-range shots. Candace is either a low-scoring player or successfully shoots a high percentage of 3-pointers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Candace is not solid at shooting 2-pointers and bad at mid-range shots, then Candace is not solid at shooting 2-pointers and is a player who successfully shoots a high percentage of 3-pointers.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTopPlayer(x) ::: x is a top player in the league.\nLowScoring(x) ::: x is a low-scoring player.\nSuccessfullyShoots(x, y) ::: x successfully shoots y.\nHighPercentage(x, y) ::: x has a high percentage of y.\nSolid(x, y) ::: x is solid at y.\nBad(x, y) ::: x is bad at y.\nPremises:\n¬(TopPlayer(x) ∧ LowScoring(x)) ::: No low-scoring players are top players in the league.\n∀x (BasketballPlayer(x) → (TopPlayer(x) ⊕ SuccessfullyShoots(x, 3-pointers))) ::: Basketball players are either top players in the league or successfully shoot a high percentage of 3-pointers.\n∀x (SuccessfullyShoots(x, 3-pointers) → (Solid(x, shooting2-pointers) ⊕ Bad(x, mid-range-shots))) ::: All players who successfully shoot a high percentage of 3-pointers are solid at shooting 2-pointers.\n¬(Solid(x, shooting2-pointers) ∧ Bad(x, mid-range-shots)) → (Solid(x, shooting2-pointers) ∧ Bad(x, mid-range-shots)) ⊕ ¬(Solid(x, shooting2-pointers) ∨ Bad(x, mid-range-shots)) ::: No players who are solid at shooting 2-pointers are bad at mid-range sh"
    ]
  },
  {
    "id": "FOLIO_train_163",
    "context": "No low-scoring players are top players in the league. Basketball players are either top players in the league or successfully shoot a high percentage of 3-pointers. All players who successfully shoot a high percentage of 3-pointers are solid at shooting 2-pointers. No players who are solid at shooting 2-pointers are bad at mid-range shots. Candace is either a low-scoring player or successfully shoots a high percentage of 3-pointers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Candace is solid at shooting 2-pointers or successfully shoots a high percentage of 3-pointers, then Candace is a top player in the league and bad at mid-range shots.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nTopPlayer(x) ::: x is a top player in the league.\nLowScoring(x) ::: x is a low-scoring player.\nShoot(x, y) ::: x shoots y.\nHighPercentage(x, y) ::: x shoots y with a high percentage.\nSolid(x, y) ::: x is solid at shooting y.\nBad(x, y) ::: x is bad at shooting y.\nPremises:\n¬TopPlayer(x) ∧ LowScoring(x) → No low-scoring players are top players in the league.\n∀x (TopPlayer(x) ∨ Shoot(x, 3-pointer)) ::: Basketball players are either top players in the league or successfully shoot a high percentage of 3-pointers.\n∀x (Shoot(x, 3-pointer) ∧ HighPercentage(x, 3-pointer)) → Solid(x, shooting2-pointers) ::: All players who successfully shoot a high percentage of 3-pointers are solid at shooting 2-pointers.\n¬Solid(x, shooting2-pointers) ∧ Bad(x, shooting2-pointers) → No players who are solid at shooting 2-pointers are bad at mid-range shots.\n¬TopPlayer(candace) ∨ Shoot(candace, 3-pointer) ::: Candace is either a low-scoring player or successfully shoots a high percentage of 3-pointers.\nConclusion:\n¬TopPlayer(candace) ∧ Shoot(candace, 3"
    ]
  },
  {
    "id": "FOLIO_train_164",
    "context": "No plants are fungi. Mushrooms are fungi.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? No plants are mushrooms.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nPlant(x) ::: x is a plant.\nFungi(x) ::: x is a fungus.\nMushroom(x) ::: x is a mushroom.\nPremises:\n¬Plant(fungi) ∧ Mushroom(fungi) ::: No plants are fungi. Mushrooms are fungi.\nConclusion:\n¬Plant(mushroom) ::: No plants are mushrooms.\n------\nProblem:\nNo plants are fungi. Mushrooms are fungi.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? No plants are mushrooms.\n###\nProblem:\nNo plants are fungi. Mushrooms are fungi.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? No plants are mushrooms.\n###\nProblem:\nNo plants are fungi. Mushrooms are fungi.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? No plants are mushrooms.\n###\nProblem:\nNo plants are fungi. Mushrooms are fungi.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? No plants are mushrooms.\n###\nProblem:\nNo plants are fungi. Mushrooms are fungi.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? No plants are mushrooms.\n###\nProblem:\nNo plants are fungi. Mushrooms are fungi.\nQuestion:"
    ]
  },
  {
    "id": "FOLIO_train_165",
    "context": "No road is clean. And some streets are roads.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Some streets are clean",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nRoad(x) ::: x is a road.\nStreet(x) ::: x is a street.\nClean(x) ::: x is clean.\nPremises:\n∀x (Road(x) → ¬Clean(x)) ::: No road is clean.\n∃x (Street(x) ∧ Road(x)) ::: Some streets are roads.\nConclusion:\nClean(x) ::: Some streets are clean.\n------\nProblem:\nNo road is clean. And some streets are roads.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Some streets are clean\n###\nProblem:\nNo road is clean. And some streets are roads.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Some streets are clean\n###\nProblem:\nNo road is clean. And some streets are roads.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Some streets are clean\n###\nProblem:\nNo road is clean. And some streets are roads.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Some streets are clean\n###\nProblem:\nNo road is clean. And some streets are roads.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Some streets are clean\n###\nProblem:\nNo road is clean. And some streets are roads.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Some streets are clean\n###"
    ]
  },
  {
    "id": "FOLIO_train_166",
    "context": "New York City is on the East Coast. Seattle is on the West Coast. If a person from a city on the East coast is traveling to a city on the west coast, they will be on a long flight. Most passengers on flights to Seattle from New York City are not in first class. People on long flights are uncomfortable unless they're in first class",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Some people flying from New York City to Seattle will be uncomfortable.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nEastCoast(x) ::: x is a city on the East Coast.\nWestCoast(x) ::: x is a city on the West Coast.\nLongFlight(x) ::: x is a long flight.\nFirstClass(x) ::: x is in first class.\nUncomfortable(x) ::: x is uncomfortable.\nPremises:\nEastCoast(newYorkCity) ∧ WestCoast(seattle) ::: New York City is on the East Coast. Seattle is on the West Coast.\nLongFlight(flightFromNewYorkCityToSeattle) ::: If a person from a city on the East coast is traveling to a city on the west coast, they will be on a long flight.\n¬(FirstClass(passengerOnFlightFromNewYorkCityToSeattle)) ∧ ¬(Uncomfortable(passengerOnFlightFromNewYorkCityToSeattle)) ::: Most passengers on flights to Seattle from New York City are not in first class.\nConclusion:\nUncomfortable(passengerOnFlightFromNewYorkCityToSeattle) ::: Some people flying from New York City to Seattle will be uncomfortable.\n------\nProblem:\nThe following is a list of the top 10 most popular movies of 2016.\n1) Captain America: Civil War\n2) Finding Dory\n3) The Jungle Book\n4) Zootopia\n5) The Secret Life of Pets\n6) Doctor Strange\n7) Deadpool\n8) Rogue One: A Star Wars Story\n9) The BF"
    ]
  },
  {
    "id": "FOLIO_train_167",
    "context": "Musicians have very busy lives. Singh Kaur is a musician and famous. If a musician is not famous, that musician will not make a lot of money. A musician can be a singer or a writer.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Singh Kaur makes a lot of money.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nMusician(x) ::: x is a musician.\nFamous(x) ::: x is famous.\nSing(x) ::: x is a singer.\nWrite(x) ::: x is a writer.\nMakeMoney(x) ::: x makes a lot of money.\nPremises:\nMusician(singh) ∧ Famous(singh) ::: Singh Kaur is a musician and famous.\n∀x (Musician(x) → ¬MakeMoney(x)) ::: If a musician is not famous, that musician will not make a lot of money.\n∃x (Musician(x) ∧ Sing(x)) ::: Some musicians are singers.\n∃x (Musician(x) ∧ Write(x)) ::: Some musicians are writers.\nConclusion:\nMakeMoney(singh) ::: Singh Kaur makes a lot of money.\n------\nProblem:\nThe following is a list of the top 100 most popular songs of 2015.\n1. Uptown Funk - Mark Ronson ft. Bruno Mars\n2. See You Again - Wiz Khalifa ft. Charlie Puth\n3. Thinking Out Loud - Ed Sheeran\n4. Blank Space - Taylor Swift\n5. Bad Blood - Taylor Swift ft. Kendrick Lamar\n6. Sugar - Maroon 5\n7. What Do You Mean? - Justin Bieber\n8. Love Me Like You Do - Ellie Goulding\n9. Shake It Off - Taylor Swift\n10. Can't Feel My Face - The Weeknd\n11"
    ]
  },
  {
    "id": "FOLIO_train_168",
    "context": "Musicians have very busy lives. Singh Kaur is a musician and famous. If a musician is not famous, that musician will not make a lot of money. A musician can be a singer or a writer.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Singh Kaur is a writer.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nMusician(x) ::: x is a musician.\nFamous(x) ::: x is famous.\nSing(x) ::: x is a singer.\nWrite(x) ::: x is a writer.\nMakeMoney(x) ::: x makes a lot of money.\nPremises:\nMusician(singhKaur) ∧ Famous(singhKaur) ::: Singh Kaur is a musician and famous.\n∀x (Musician(x) → ¬MakeMoney(x)) ::: If a musician is not famous, that musician will not make a lot of money.\n∃x (Musician(x) ∧ Sing(x)) ::: Some musicians are singers.\n∃x (Musician(x) ∧ Write(x)) ::: Some musicians are writers.\nConclusion:\nSing(singhKaur) ::: Singh Kaur is a singer.\n------\nProblem:\nThe following is a list of the top 100 most popular songs of 2015.\n1. Uptown Funk - Mark Ronson ft. Bruno Mars\n2. See You Again - Wiz Khalifa ft. Charlie Puth\n3. Thinking Out Loud - Ed Sheeran\n4. Blank Space - Taylor Swift\n5. Bad Blood - Taylor Swift ft. Kendrick Lamar\n6. Sugar - Maroon 5\n7. What Do You Mean? - Justin Bieber\n8. Love Me Like You Do - Ellie Goulding\n9. Shake It Off - Taylor Swift\n10. Can't Feel My Face - The Weeknd"
    ]
  },
  {
    "id": "FOLIO_train_169",
    "context": "Musicians have very busy lives. Singh Kaur is a musician and famous. If a musician is not famous, that musician will not make a lot of money. A musician can be a singer or a writer.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Singh Kaur has a very busy life.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nMusician(x) ::: x is a musician.\nFamous(x) ::: x is famous.\nBusy(x) ::: x has a very busy life.\nSing(x) ::: x is a singer.\nWrite(x) ::: x is a writer.\nPremises:\nMusician(singh) ∧ Famous(singh) ::: Singh Kaur is a musician and famous.\n∀x (Musician(x) → ¬Sing(x) ∨ Write(x)) ::: A musician can be a singer or a writer.\n∀x (Famous(x) → ¬Sing(x) ∨ Write(x)) ::: If a musician is not famous, that musician will not make a lot of money.\nConclusion:\nBusy(singh) ::: Singh Kaur has a very busy life.\n------\nProblem:\nThe following is a list of the top 100 most popular songs of 2015.\n1. Uptown Funk - Mark Ronson ft. Bruno Mars\n2. See You Again - Wiz Khalifa ft. Charlie Puth\n3. Thinking Out Loud - Ed Sheeran\n4. Blank Space - Taylor Swift\n5. Bad Blood - Taylor Swift ft. Kendrick Lamar\n6. Sugar - Maroon 5\n7. What Do You Mean? - Justin Bieber\n8. Love Me Like You Do - Ellie Goulding\n9. Shake It Off - Taylor Swift\n10. Can't Feel My Face - The Weeknd\n11. Hotline Bling - Drake"
    ]
  },
  {
    "id": "FOLIO_train_170",
    "context": "Each building is tall. Everything tall has  height.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? All buildings are magnificent.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nBuilding(x) ::: x is a building.\nTall(x) ::: x is tall.\nHeight(x) ::: x has height.\nMagnificent(x) ::: x is magnificent.\nPremises:\n∀x (Building(x) → Tall(x)) ::: Each building is tall.\n∀x (Tall(x) → Height(x)) ::: Everything tall has height.\nConclusion:\nMagnificent(x) ::: All buildings are magnificent.\n------"
    ]
  },
  {
    "id": "FOLIO_train_171",
    "context": "A cat named Garfield, which is the main character of the film Garfield, is orange and fat and likes having lasagna. Garfield and Odie, who is another pet of Jon, share the same home. Garfield hates Odie. A pet who hates the pet with whom he shares the same owner is childish and possessive. Cats are pets.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The main character of the film Garfield is childish and possessive.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCat(x) ::: x is a cat.\nOrange(x) ::: x is orange.\nFat(x) ::: x is fat.\nLikes(x, y) ::: x likes y.\nLasagna(y) ::: y is lasagna.\nShare(x, y) ::: x shares the same home with y.\nHate(x, y) ::: x hates y.\nChildish(x) ::: x is childish.\nPossessive(x) ::: x"
    ]
  },
  {
    "id": "FOLIO_train_172",
    "context": "All humans eat. If something eats, then it is not a plant. A thing is either plant or animal. All goats are animals. No dirt is an animal. Hulu is a goat or a human.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Hulu eats.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nEats(x) ::: x eats.\nPlant(x) ::: x is a plant.\nAnimal(x) ::: x is an animal.\nGoat(x) ::: x is a goat.\nHuman(x) ::: x is a human.\nPremises:\n∀x (Eats(x) → ¬Plant(x)) ::: If something eats, then it is not a plant.\n∀x (Eats(x) ⊕ Animal(x)) ::: All humans eat"
    ]
  },
  {
    "id": "FOLIO_train_173",
    "context": "All humans eat. If something eats, then it is not a plant. A thing is either plant or animal. All goats are animals. No dirt is an animal. Hulu is a goat or a human.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Hulu does not eat.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nEat(x) ::: x eats.\nPlant(x) ::: x is a plant.\nAnimal(x) ::: x is an animal.\nGoat(x) ::: x is a goat.\nHuman(x) ::: x is a human.\nPremises:\n∀x (Eat(x) → ¬Plant(x)) ::: If something eats, then it is not a plant.\n∀x (Eat(x) ⊕ Animal(x)) ::: All humans eat"
    ]
  },
  {
    "id": "FOLIO_train_174",
    "context": "All humans eat. If something eats, then it is not a plant. A thing is either plant or animal. All goats are animals. No dirt is an animal. Hulu is a goat or a human.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Hulu is dirt.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nEats(x) ::: x eats.\nPlant(x) ::: x is a plant.\nAnimal(x) ::: x is an animal.\nGoat(x) ::: x is a goat.\nDirt(x) ::: x is dirt.\nHuman(x) ::: x is a human.\nPremises:\n∀x (Eats(x) → ¬Plant(x)) ::: If something eats, then it is not a plant.\n∀x (Plant("
    ]
  },
  {
    "id": "FOLIO_train_175",
    "context": "All humans eat. If something eats, then it is not a plant. A thing is either plant or animal. All goats are animals. No dirt is an animal. Hulu is a goat or a human.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Hulu is an animal or dirt.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nEat(x) ::: x eats.\nPlant(x) ::: x is a plant.\nAnimal(x) ::: x is an animal.\nGoat(x) ::: x is a goat.\nDirt(x) ::: x is dirt.\nHuman(x) ::: x is a human.\nPremises:\n∀x (Eat(x) → ¬Plant(x)) ::: If something eats, then it is not a plant.\n∀x (Animal("
    ]
  },
  {
    "id": "FOLIO_train_176",
    "context": "All humans eat. If something eats, then it is not a plant. A thing is either plant or animal. All goats are animals. No dirt is an animal. Hulu is a goat or a human.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Hulu is either an animal or dirt.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nEat(x) ::: x eats.\nPlant(x) ::: x is a plant.\nAnimal(x) ::: x is an animal.\nGoat(x) ::: x is a goat.\nDirt(x) ::: x is dirt.\nHuman(x) ::: x is a human.\nPremises:\n∀x (Eat(x) → ¬Plant(x)) ::: If something eats, then it is not a plant.\n∀x (Animal("
    ]
  },
  {
    "id": "FOLIO_train_177",
    "context": "All humans eat. If something eats, then it is not a plant. A thing is either plant or animal. All goats are animals. No dirt is an animal. Hulu is a goat or a human.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Hulu is either an animal or dirt, then Hulu eats and is dirt.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nEat(x) ::: x eats.\nPlant(x) ::: x is a plant.\nAnimal(x) ::: x is an animal.\nGoat(x) ::: x is a goat.\nDirt(x) ::: x is dirt.\nHuman(x) ::: x is a human.\nPremises:\n∀x (Eat(x) → ¬Plant(x)) ::: If something eats, then it is not a plant.\n∀x (Animal("
    ]
  },
  {
    "id": "FOLIO_train_178",
    "context": "A controlled substance is a drug. There exist both harmful and beneficial controlled substances. If a child is exposed to a controlled substance, he or she is in chemical endangerment. Chemical Endangerment is harmful. The Controlled Substances Act was an act passed in 1971. Some Acts prevent harmful things.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Controlled Substances Act prevents harmful things.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nControlledSubstance(x) ::: x is a controlled substance.\nHarmful(x) ::: x is harmful.\nBeneficial(x) ::: x is beneficial.\nChild(x) ::: x is a child.\nChemicalEndangerment(x) ::: x is in chemical endangerment.\nAct(x) ::: x is an act.\nPrevent(x, y) ::: x prevents y.\nPremises:\nControlledSubstance(x) → Drug"
    ]
  },
  {
    "id": "FOLIO_train_179",
    "context": "A controlled substance is a drug. There exist both harmful and beneficial controlled substances. If a child is exposed to a controlled substance, he or she is in chemical endangerment. Chemical Endangerment is harmful. The Controlled Substances Act was an act passed in 1971. Some Acts prevent harmful things.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Some drugs are beneficial.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nControlledSubstance(x) ::: x is a controlled substance.\nHarmful(x) ::: x is harmful.\nBeneficial(x) ::: x is beneficial.\nChild(x) ::: x is a child.\nChemicalEndangerment(x) ::: x is in chemical endangerment.\nAct(x) ::: x is an act.\nPrevent(x, y) ::: x prevents y.\nPremises:\nControlledSubstance(x) → Drug"
    ]
  },
  {
    "id": "FOLIO_train_180",
    "context": "A controlled substance is a drug. There exist both harmful and beneficial controlled substances. If a child is exposed to a controlled substance, he or she is in chemical endangerment. Chemical Endangerment is harmful. The Controlled Substances Act was an act passed in 1971. Some Acts prevent harmful things.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A child in chemical endangerment is in harm.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nControlledSubstance(x) ::: x is a controlled substance.\nHarmful(x) ::: x is harmful.\nBeneficial(x) ::: x is beneficial.\nChild(x) ::: x is a child.\nExposed(x, y) ::: x is exposed to y.\nChemicalEndangerment(x) ::: x is in chemical endangerment.\nHarm(x) ::: x is harm.\nAct(x) ::: x is an act.\nPrevent(x, y) ::: x prevents y.\nPremises:\nControlledSubstance(x) → Harmful(x) ∨ Beneficial(x) ::: A controlled substance is either harmful or beneficial.\n∃x (Child(x) ∧ Exposed(x, controlledSubstance)) → ChemicalEndangerment(x) ::: If a child is exposed to a controlled substance, he or she is in chemical endangerment.\nChemicalEndangerment(x) → Harm(x) ::: If a child is in chemical endangerment, he or she is in harm.\nConclusion:\nHarm(x) ::: A child in chemical endangerment is in harm.\n------"
    ]
  },
  {
    "id": "FOLIO_train_181",
    "context": "No people who work at corporate jobs are starting a new company. All entrepreneurs are starting a new company. All risk-averse people are people who work at corporate jobs. All people who hate working for others are entrepreneurs. If Mark Zuckerberg is neither an entrepreneur nor a person who hates working for others, then Mark Zuckerberg is not a risk-averse person.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mark Zuckerberg is an entrepreneur.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nCorporateJob(x) ::: x is a corporate job.\nStarting(x) ::: x is starting a new company.\nEntrepreneur(x) ::: x is an entrepreneur.\nRiskAverse(x) ::: x is a risk-averse person.\nHateWorkingForOthers(x) ::: x hates working for others.\nPremises:\n∀x (CorporateJob(x) → ¬Starting(x)) ::: No people who work at corporate jobs are starting a new company.\n∀x (Starting(x) → Entrepreneur(x)) ::: All entrepreneurs are starting a new company.\n∀x (RiskAverse(x) → CorporateJob(x)) ::: All risk-averse people are people who work at corporate jobs.\n∀x (HateWorkingForOthers(x) → Entrepreneur(x)) ::: All people who hate working for others are entrepreneurs.\n¬(Entrepreneur(mark) ∧ HateWorkingForOthers(mark)) → (Entrepreneur(mark) ∧ ¬HateWorkingForOthers(mark)) ::: If Mark Zuckerberg is neither"
    ]
  },
  {
    "id": "FOLIO_train_182",
    "context": "No people who work at corporate jobs are starting a new company. All entrepreneurs are starting a new company. All risk-averse people are people who work at corporate jobs. All people who hate working for others are entrepreneurs. If Mark Zuckerberg is neither an entrepreneur nor a person who hates working for others, then Mark Zuckerberg is not a risk-averse person.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mark Zuckerberg is a risk-averse person.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nCorporateJob(x) ::: x is a corporate job.\nStarting(x) ::: x is starting a new company.\nEntrepreneur(x) ::: x is an entrepreneur.\nRiskAverse(x) ::: x is a risk-averse person.\nHateWorkingForOthers(x) ::: x hates working for others.\nPremises:\n∀x (CorporateJob(x) → ¬Starting(x)) ::: No people who work at corporate jobs are starting a new company.\n∀x (Starting(x) → Entrepreneur(x)) ::: All entrepreneurs are starting a new company.\n∀x (RiskAverse(x) → CorporateJob(x)) ::: All risk-averse people are people who work at corporate jobs.\n¬(Entrepreneur(markZuckerberg) ∧ HateWorkingForOthers(markZuckerberg)) → (Entrepreneur(markZuckerberg) ∧ HateWorkingForOthers(markZuckerberg)) ⊕ ¬(Entrepreneur(markZuckerberg) ∨ HateWorkingForOthers(markZuckerberg)) ::: If Mark"
    ]
  },
  {
    "id": "FOLIO_train_183",
    "context": "No people who work at corporate jobs are starting a new company. All entrepreneurs are starting a new company. All risk-averse people are people who work at corporate jobs. All people who hate working for others are entrepreneurs. If Mark Zuckerberg is neither an entrepreneur nor a person who hates working for others, then Mark Zuckerberg is not a risk-averse person.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mark Zuckerberg is not a risk-averse person.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nCorporateJob(x) ::: x is a corporate job.\nStarting(x) ::: x is starting a new company.\nEntrepreneur(x) ::: x is an entrepreneur.\nRiskAverse(x) ::: x is a risk-averse person.\nHateWorkingForOthers(x) ::: x hates working for others.\nPremises:\n∀x (CorporateJob(x) → ¬Starting(x)) ::: No people who work at corporate jobs are starting a new company.\n∀x (Starting(x) → Entrepreneur(x)) ::: All entrepreneurs are starting a new company.\n∀x (RiskAverse(x) → CorporateJob(x)) ::: All risk-averse people are people who work at corporate jobs.\n¬(Entrepreneur(markZuckerberg) ∧ HateWorkingForOthers(markZuckerberg)) → (Entrepreneur(markZuckerberg) ∧ HateWorkingForOthers(markZuckerberg)) ⊕ ¬(Entrepreneur(markZuckerberg) ∨ HateWorkingForOthers(markZuckerberg)) ::: If Mark"
    ]
  },
  {
    "id": "FOLIO_train_184",
    "context": "There are two kitchens in the house: the upstairs kitchen and the downstairs kitchen. When someone is cooking in the downstairs kitchen, the first floor becomes smokey unless the air conditioner is running. If the air conditioner is running and someone is cooking in the downstairs kitchen, all the smoke travels to the second floor.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If someone is cooking downstairs, it will always cause the first floor to become smokey.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nCooking(x) ::: x is cooking.\nDownstairs(x) ::: x is downstairs.\nFirstFloor(x) ::: x is the first floor.\nSmokey(x) ::: x is smokey.\nAirConditioner(x) ::: x is an air conditioner.\nRunning(x) ::: x is running.\nPremises:\nDownstairs(kitchen) ∧ Cooking(kitchen) ::: Someone is cooking in the downstairs kitchen.\nFirstFloor(firstFloor) ∧ Smokey(firstFloor) ::: The first floor becomes smokey.\nDownstairs(kitchen) ∧ Cooking(kitchen) ∧ Running(airConditioner) ::: Someone is cooking in the downstairs kitchen and the air conditioner is running.\nConclusion:\nSmokey(firstFloor) ::: If someone is cooking downstairs, it will always cause the first floor to become smokey.\n------\nProblem:\nThe following is a list of the top 100 most popular baby names in the United States in 2013.\n1. Jacob\n2. Mason\n3. William\n4. Michael\n5. Jay"
    ]
  },
  {
    "id": "FOLIO_train_185",
    "context": "There are two kitchens in the house: the upstairs kitchen and the downstairs kitchen. When someone is cooking in the downstairs kitchen, the first floor becomes smokey unless the air conditioner is running. If the air conditioner is running and someone is cooking in the downstairs kitchen, all the smoke travels to the second floor.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If someone is cooking upstairs, the first floor will become smokey.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nCooking(x) ::: x is cooking.\nUpstairs(x) ::: x is upstairs.\nDownstairs(x) ::: x is downstairs.\nSmokey(x) ::: x is smokey.\nAirConditioner(x) ::: x is an air conditioner.\nRunning(x) ::: x is running.\nPremises:\nDownstairs(kitchen) ∧ Cooking(kitchen) ::: There is a downstairs kitchen and someone is cooking in it.\n¬Upstairs(kitchen) ∧ Cooking(kitchen) ::: There is no upstairs kitchen and someone is cooking in it.\n¬Downstairs(kitchen) ∧ Cooking(kitchen) ∧ Running(airConditioner) ::: There is no downstairs kitchen and someone is cooking in it and the air conditioner is running.\n¬Downstairs(kitchen) ∧ Cooking(kitchen) ∧ ¬Running(airConditioner) ::: There is no downstairs kitchen and someone is cooking in it and the air conditioner is not running.\nConclusion:\nSmokey(firstFloor) ::: If someone is cooking upstairs, the first"
    ]
  },
  {
    "id": "FOLIO_train_186",
    "context": "There are two kitchens in the house: the upstairs kitchen and the downstairs kitchen. When someone is cooking in the downstairs kitchen, the first floor becomes smokey unless the air conditioner is running. If the air conditioner is running and someone is cooking in the downstairs kitchen, all the smoke travels to the second floor.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If someone is cooking downstairs and the air conditioner is running, there will be smoke upstairs.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCooking(x) ::: x is cooking.\nSmokey(x) ::: x is smokey.\nAirConditioner(x) ::: x is an air conditioner.\nRunning(x) ::: x is running.\nPremises:\n∃x (Cooking(x) ∧ Downstairs(x)) ::: Someone is cooking downstairs.\n∃x (AirConditioner(x) ∧ Running(x)) ::: Some air conditioner is running.\n∀x (Downstairs(x) → Smokey(x)) ::: When someone is cooking in the downstairs kitchen, the first floor becomes smokey.\n∀x (AirConditioner(x) ∧ Running(x) → ¬Smokey(x)) ::: If the air conditioner is running and someone is cooking in the downstairs kitchen, all the smoke travels to the second floor.\nConclusion:\nSmokey(firstFloor) ::: If someone is cooking downstairs and the air conditioner is running, there will be smoke upstairs.\n------\nProblem:\nThe following is a list of the top 100 most popular baby names in the United States in 2013.\n1."
    ]
  },
  {
    "id": "FOLIO_train_187",
    "context": "New York City is Located in the United States of America. United States of America is part of North America. North America is in the western hemisphere of the earth. New York City is a highly developed city. If place A is located in place B and place B is located in place C, then place A is located in place C.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A highly developed city is located in the western hemisphere of the earth.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nLocated(x, y) ::: x is located in y.\nPartOf(x, y) ::: x is part of y.\nHemisphere(x) ::: x is a hemisphere of the earth.\nDeveloped(x) ::: x is a highly developed city.\nPremises:\nLocated(newYorkCity, unitedStatesOfAmerica) ∧ Located(unitedStatesOfAmerica, northAmerica) ∧ Located(northAmerica, westernHemisphere) ∧ Developed(newYorkCity) ::: New York City is Located in the United States of America. United States of America is part of North America. North America is in the western hemisphere of the earth. New York City is a highly developed city.\nConclusion:\nLocated(newYorkCity, westernHemisphere) ::: Based on the above information, is the following statement true, false, or uncertain? A highly developed city is located in the western hemisphere of the earth.\n------\nProblem:\nThe following is a list of the top 100 most popular baby names in the United States in 2013.\n1. Jacob\n2. Mason\n3. William\n4. Michael\n5. Ethan\n6"
    ]
  },
  {
    "id": "FOLIO_train_188",
    "context": "New York City is Located in the United States of America. United States of America is part of North America. North America is in the western hemisphere of the earth. New York City is a highly developed city. If place A is located in place B and place B is located in place C, then place A is located in place C.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? USA is not located in western hemisphere of the earth.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nLocated(x, y) ::: x is located in y.\nPartOf(x, y) ::: x is part of y.\nHemisphere(x) ::: x is a hemisphere of the earth.\nDeveloped(x) ::: x is a highly developed city.\nPremises:\nLocated(newYorkCity, unitedStatesOfAmerica) ∧ Located(unitedStatesOfAmerica, northAmerica) ∧ Located(northAmerica, westernHemisphere) ∧ Located(newYorkCity, northAmerica) ∧ Developed(newYorkCity) ::: New York City is Located in the United States of America. United States of America is part of North America. North America is in the western hemisphere of the earth. New York City is a highly developed city.\nConclusion:\n¬Located(unitedStatesOfAmerica, westernHemisphere) ::: USA is not located in western hemisphere of the earth.\n------\nProblem:\nThe following is a list of the top 100 most popular baby names in the United States in 2013.\n1. Jacob\n2. Mason\n3. William\n4. Michael\n5. Ethan\n6. Jayden"
    ]
  },
  {
    "id": "FOLIO_train_189",
    "context": "New York City is Located in the United States of America. United States of America is part of North America. North America is in the western hemisphere of the earth. New York City is a highly developed city. If place A is located in place B and place B is located in place C, then place A is located in place C.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? New York City is located in the New York State.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nLocated(x, y) ::: x is located in y.\nPartOf(x, y) ::: x is part of y.\nHemisphere(x) ::: x is a hemisphere of the earth.\nDeveloped(x) ::: x is a highly developed city.\nPremises:\nLocated(newYorkCity, unitedStatesOfAmerica) ∧ Located(unitedStatesOfAmerica, northAmerica) ∧ Located(northAmerica, westernHemisphere) ∧ Developed(newYorkCity) ::: New York City is Located in the United States of America. United States of America is part of North America. North America is in the western hemisphere of the earth. New York City is a highly developed city.\nConclusion:\nLocated(newYorkCity, newYorkState) ::: New York City is located in the New York State.\n------\nProblem:\nThe following is a list of the top 100 most popular baby names in the United States in 2013.\n1. Jacob\n2. Mason\n3. William\n4. Michael\n5. Ethan\n6. Jayden\n7. Alexander\n8. Noah\n9. Daniel\n10. Aiden"
    ]
  },
  {
    "id": "FOLIO_train_190",
    "context": "Callus 4 is a poem that was written by the ancient Roman writer Catullus. Callus 4 is a story about the retirement of a well-traveled ship. There is a strong analogy of human aging in the poem Callus 4. Callus 4 is written in an unusual iambic trimeter to convey a sense of speed over the waves.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There exists a poem written by an ancient Roman writer with a strong analogy of human aging.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nAncientRoman(x) ::: x is an ancient Roman writer.\nPoem(x) ::: x is a poem.\nStrongAnalogy(x, y) ::: x has a strong analogy of y.\nHumanAging(x) ::: x is a human aging.\nIambicTrimeter(x) ::: x is an iambic trimeter.\nConvey(x, y) ::: x conveys a sense of y.\nPremises:\nPoem(callus4) ∧ AncientRoman(catullus) ∧ StrongAnalogy(callus4, humanAging) ∧ IambicTrimeter(callus4) ∧ Convey(callus4, speedOverWaves) ::: Callus 4 is a poem that was written by the ancient Roman writer Catullus. Callus 4 is a story about the retirement of a well-traveled ship. There is a strong analogy of human aging in the poem Callus 4. Callus 4 is written in an unusual iambic trimeter to convey a sense of speed over the waves.\nConclusion:\n∃x ∃y ∃z (Poem(x) ∧ AncientRoman(y) ∧ StrongAnalogy(x, y) ∧ IambicTrimeter(z) ∧ Convey(z, y)) ::: There exists a poem written by an ancient Roman writer with a strong analogy of human aging.\n------"
    ]
  },
  {
    "id": "FOLIO_train_191",
    "context": "Callus 4 is a poem that was written by the ancient Roman writer Catullus. Callus 4 is a story about the retirement of a well-traveled ship. There is a strong analogy of human aging in the poem Callus 4. Callus 4 is written in an unusual iambic trimeter to convey a sense of speed over the waves.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There exists a poem written by an ancient Roman writer written in iambic petameter.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nAncientRoman(x) ::: x is an ancient Roman writer.\nPoem(x) ::: x is a poem.\nIambicPetameter(x) ::: x is written in iambic petameter.\nIambicTrimeter(x) ::: x is written in iambic trimeter.\nRetirement(x) ::: x is a retirement.\nWellTraveled(x) ::: x is a well-traveled.\nSpeed(x) ::: x is a speed.\nWave(x) ::: x is a wave.\nPremises:\nPoem(callus4) ∧ AncientRoman(catullus) ∧ Callus4(catullus) ::: Callus 4 is a poem that was written by the ancient Roman writer Catullus.\nCallus4(catullus) ∧ Story(callus4) ∧ Retirement(callus4) ∧ WellTraveled(callus4) ∧ Speed(callus4) ∧ Wave(callus4) ::: Callus 4 is a story about the retirement of a well-traveled ship.\nCallus4(catullus) ∧ Analogy(callus4) ∧ HumanAging(callus4) ::: There is a strong analogy of human aging in the poem Callus 4.\nCallus4(catullus) ∧ Unusual(callus4) ∧ IambicP"
    ]
  },
  {
    "id": "FOLIO_train_192",
    "context": "Callus 4 is a poem that was written by the ancient Roman writer Catullus. Callus 4 is a story about the retirement of a well-traveled ship. There is a strong analogy of human aging in the poem Callus 4. Callus 4 is written in an unusual iambic trimeter to convey a sense of speed over the waves.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Callus 4 is written in an unusual iambic trimeter to convey a strong analogy of human aging.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nPoem(x) ::: x is a poem.\nWritten(x, y) ::: x is written by y.\nStory(x) ::: x is a story.\nRetirement(x) ::: x is a retirement.\nWellTraveled(x) ::: x is a well-traveled.\nShip(x) ::: x is a ship.\nIambicTrimeter(x) ::: x is an iambic trimeter.\nConvey(x, y) ::: x conveys y.\nSense(x, y) ::: x has a sense of y.\nAnalogy(x, y) ::: x is an analogy of y.\nPremises:\nPoem(callus4) ∧ Written(callus4, catullus) ∧ Story(callus4) ∧ Retirement(callus4) ∧ WellTraveled(callus4) ∧ Ship(callus4) ::: Callus 4 is a poem that was written by the ancient Roman writer Catullus. Callus 4 is a story about the retirement of a well-traveled ship.\n∃x (Poem(x) ∧ Convey(x, senseOfHumanAging)) ::: There is a strong analogy of human aging in the poem Callus 4.\n∃x (IambicTrimeter(x) ∧ Convey(x, speedOverTheWaves)) ::: Callus 4 is"
    ]
  },
  {
    "id": "FOLIO_train_193",
    "context": "Westworld is an American science fiction-thriller TV series. In 2016, a new television series named Westworld debuted on HBO. The TV series Westworld is adapted from the original film in 1973, which was written and directed by Michael Crichton. The 1973 film Westworld is about robots that malfunction and begin killing the human visitors.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Michael Crichton has directed a film about robots.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nFilm(x) ::: x is a film.\nDirect(x, y) ::: x directed y.\nAdapt(x, y) ::: x is adapted from y.\nTvSeries(x) ::: x is a TV series.\nDebut(x, y) ::: x debuted in year y.\nPremises:\nFilm(westworld) ∧ Direct(michael, westworld) ∧ Adapt(westworld, tvseries) ∧ Debut(tvseries, year2016) ::: Westworld is an American science fiction-thriller TV series. In 2016, a new television series named Westworld debuted on HBO. The TV series Westworld is adapted from the original film in 1973, which was written and directed by Michael Crichton. The 1973 film Westworld is about robots that malfunction and begin killing the human visitors.\nConclusion:\nDirect(michael, film) ::: Michael Crichton has directed a film about robots.\n------\nProblem:\nThe 2016 film The Birth of a Nation is a biographical drama film about Nat Turner, a slave who led a slave rebellion in Southampton County, Virginia, in 1831. The film was written and directed by Nate Parker. The film was released in the United States on October 7, 2016.\nQuestion:\nBased on the above information, is the following statement true"
    ]
  },
  {
    "id": "FOLIO_train_194",
    "context": "Westworld is an American science fiction-thriller TV series. In 2016, a new television series named Westworld debuted on HBO. The TV series Westworld is adapted from the original film in 1973, which was written and directed by Michael Crichton. The 1973 film Westworld is about robots that malfunction and begin killing the human visitors.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? An American TV series debuted in 2016.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nAmerican(x) ::: x is an American.\nTvSeries(x) ::: x is a TV series.\nDebut(x, y) ::: x debuted in year y.\nScienceFiction(x) ::: x is a science fiction.\nThriller(x) ::: x is a thriller.\nAdapt(x, y) ::: x is adapted from y.\nFilm(x) ::: x is a film.\nWritten(x, y) ::: x was written by y.\nDirected(x, y) ::: x was directed by y.\nPremises:\nTvSeries(westworld) ∧ Debut(westworld, year2016) ::: In 2016, a new television series named Westworld debuted on HBO.\nFilm(westworld) ∧ Written(westworld, michaelCrichton) ∧ Directed(westworld, michaelCrichton) ::: The 1973 film Westworld is about robots that malfunction and begin killing the human visitors.\nTvSeries(westworld) ∧ Adapt(westworld, westworld) ::: The TV series Westworld is adapted from the original film in 1973, which was written and directed by Michael Crichton.\nConclusion:\nAmerican(westworld) ::: An American TV series debuted in 2016.\n------\nProblem:\nThe 2016 film The Birth"
    ]
  },
  {
    "id": "FOLIO_train_195",
    "context": "The 2008 Summer Olympics were held in Beijing, China. The 2008 Summer Olympics were the second Summer Olympic Games to be held in a communist state. China won the most gold medals (48) in the 2008 Summer Olympics. The United States placed second in the gold medal tally but won the highest number of medals overall (112) in the 2008 Summer Olympics. The third place in the gold medal tally was achieved by Russia in the 2008 Summer Olympics. If a country places third in gold medals, then they had fewer gold medals than the team that won the most gold medals. 87 countries won at least one medal during the 2008 Games.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Russia did not win fewer gold medals than China.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCommunist(x) ::: x is a communist state.\nSummerOlympics(x) ::: x is the Summer Olympics.\nGoldMedal(x) ::: x is a gold medal.\nTally(x) ::: x is a tally.\nPremises:\nSummerOlympics(2008) ∧ Communist(china) ∧ SummerOlympics(2008) ∧ Communist(russia) ∧ GoldMedal(china, 48) ∧ GoldMedal(russia, 23) ∧ GoldMedal(unitedStates, 36) ∧ Tally(goldMedal) ∧ Tally(medal) ∧ Medal(china, 100) ∧ Medal(russia, 72) ∧ Medal(unitedStates, 112) ∧ Medal(87, 1) ::: The 2008 Summer Olympics were held in Beijing, China. The 2008 Summer Olympics were the second Summer Olympic Games to be held in a communist state. China won the most gold medals (48) in the 2008 Summer Olympics. The United States placed second in the gold medal tally but won the highest number of medals overall (112) in the 2008 Summer Olympics. The third place in the gold medal tally was achieved by Russia in the 2008 Summer Olympics."
    ]
  },
  {
    "id": "FOLIO_train_196",
    "context": "The 2008 Summer Olympics were held in Beijing, China. The 2008 Summer Olympics were the second Summer Olympic Games to be held in a communist state. China won the most gold medals (48) in the 2008 Summer Olympics. The United States placed second in the gold medal tally but won the highest number of medals overall (112) in the 2008 Summer Olympics. The third place in the gold medal tally was achieved by Russia in the 2008 Summer Olympics. If a country places third in gold medals, then they had fewer gold medals than the team that won the most gold medals. 87 countries won at least one medal during the 2008 Games.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The United States won fewer gold medals than China.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCommunist(x) ::: x is a communist state.\nSummerOlympics(x) ::: x is the Summer Olympics.\nGoldMedal(x) ::: x is a gold medal.\nTally(x) ::: x is a tally.\nPremises:\nSummerOlympics(2008) ∧ Communist(china) ∧ SummerOlympics(2008) ∧ Communist(russia) ∧ GoldMedal(china, 48) ∧ GoldMedal(unitedStates, 36) ∧ GoldMedal(russia, 23) ∧ GoldMedal(unitedStates, 112) ∧ GoldMedal(russia, 23) ∧ GoldMedal(china, 48) ∧ Tally(unitedStates, 112) ∧ Tally(russia, 23) ∧ Tally(china, 48) ∧ Tally(unitedStates, 112) ∧ Tally(russia, 23) ∧ Tally(china, 48) ∧ Tally(unitedStates, 112) ∧ Tally(russia, 23) ∧ Tally(china, 48) ∧ Tally(unitedStates, 112) ∧ Tally(russia,"
    ]
  },
  {
    "id": "FOLIO_train_197",
    "context": "The 2008 Summer Olympics were held in Beijing, China. The 2008 Summer Olympics were the second Summer Olympic Games to be held in a communist state. China won the most gold medals (48) in the 2008 Summer Olympics. The United States placed second in the gold medal tally but won the highest number of medals overall (112) in the 2008 Summer Olympics. The third place in the gold medal tally was achieved by Russia in the 2008 Summer Olympics. If a country places third in gold medals, then they had fewer gold medals than the team that won the most gold medals. 87 countries won at least one medal during the 2008 Games.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Russia won fewer gold medals than China.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Olympics(x) ::: x is an Olympics.\nCommunist(x) ::: x is a communist state.\nGoldMedal(x) ::: x is a gold medal.\nSilverMedal(x) ::: x is a silver medal.\nBronzeMedal(x) ::: x is a bronze medal.\nPremises:\nOlympics(2008SummerOlympics) ∧ Communist(china) ∧ GoldMedal(china, 48) ::: The 2008 Summer Olympics were held in Beijing, China. The 2008 Summer Olympics were the second Summer Olympic Games to be held in a communist state. China won the most gold medals (48) in the 2008 Summer Olympics.\nOlympics(2008SummerOlympics) ∧ GoldMedal(unitedStates, 36) ∧ SilverMedal(unitedStates, 41) ∧ BronzeMedal(unitedStates, 25) ::: The United States placed second in the gold medal tally but won the highest number of medals overall (112) in the 2008 Summer Olympics.\nOlympics(2008SummerOlympics) ∧ GoldMedal(russia, 23) ∧ SilverMedal(russia, 29) ∧ BronzeMedal(russia, 28) ::: The third place"
    ]
  },
  {
    "id": "FOLIO_train_198",
    "context": "Xiufeng, Xiangshan, Diecai, Qixing are districts in the city of Guilin. Yangshuo is not a district in Guilin.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Xiangshan and Diecai are districts in the same city.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nDistrict(x) ::: x is a district.\nCity(x) ::: x is a city.\nSameCity(x, y) ::: x and y are in the same city.\nPremises:\nDistrict(xiufeng) ∧ District(xiangshan) ∧ District(diecai) ∧ District(qixing) ∧ City(guilin) ∧ City(yangshuo) ::: Xiufeng, Xiangshan, Diecai, Qixing are districts in the city of Guilin. Yangshuo is not a district in Guilin.\nConclusion:\nSameCity(xiangshan, diecai) ::: Xiangshan and Diecai are districts in the same city.\n------\nProblem:\nThe following are the names of the 10 most popular movies of 2015:\n1) Star Wars: The Force Awakens\n2) Jurassic World\n3) Furious 7\n4) Avengers: Age of Ultron\n5) Minions\n6) Inside Out\n7) Spectre\n8) The Martian\n9) The Hunger Games: Mockingjay - Part 2\n10) Mission: Impossible - Rogue Nation\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The movie with the highest box office revenue in 2015 was Star Wars: The Force Awakens."
    ]
  },
  {
    "id": "FOLIO_train_199",
    "context": "Xiufeng, Xiangshan, Diecai, Qixing are districts in the city of Guilin. Yangshuo is not a district in Guilin.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Xiufeng is in Guilin.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nDistrict(x) ::: x is a district.\nIn(x, y) ::: x is in y.\nNotIn(x, y) ::: x is not in y.\nPremises:\nDistrict(xiufeng) ∧ District(xiangshan) ∧ District(diecai) ∧ District(qixing) ::: Xiufeng, Xiangshan, Diecai, Qixing are districts in the city of Guilin.\nDistrict(yangshuo) ∧ NotIn(yangshuo, guilin) ::: Yangshuo is not a district in Guilin.\nConclusion:\nIn(xiufeng, guilin) ::: Xiufeng is in Guilin.\n------\nProblem:\nThe following are the names of the 10 most popular movies of 2015:\n1) Star Wars: The Force Awakens\n2) Jurassic World\n3) Furious 7\n4) Avengers: Age of Ultron\n5) Minions\n6) Inside Out\n7) Spectre\n8) The Martian\n9) The Hunger Games: Mockingjay - Part 2\n10) Mission: Impossible - Rogue Nation\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The movie with the highest box office revenue in 2015 was Star Wars: The Force Awakens.\n###"
    ]
  },
  {
    "id": "FOLIO_train_200",
    "context": "Xiufeng, Xiangshan, Diecai, Qixing are districts in the city of Guilin. Yangshuo is not a district in Guilin.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Kowloon District is in Hong Kong.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nDistrict(x) ::: x is a district.\nIn(x, y) ::: x is in y.\nPremises:\nDistrict(xiufeng) ∧ District(xiangshan) ∧ District(diecai) ∧ District(qixing) ::: Xiufeng, Xiangshan, Diecai, Qixing are districts in the city of Guilin.\n¬District(yangshuo) ::: Yangshuo is not a district in Guilin.\nConclusion:\nIn(kowloonDistrict, hongKong) ::: Kowloon District is in Hong Kong.\n------"
    ]
  },
  {
    "id": "FOLIO_train_201",
    "context": "All people who grow their own fresh vegetables in their home garden also have ample space. If people are young working professionals who live in large cities, then they do not have ample space. If people order takeout from delivery services often, then they grow their own fresh vegetables in their home garden. If people enjoy going out often to restaurants with friends, then they order takeout from delivery services often. If people regularly tout the benefits of homegrown and homecooked meals over fast food, then they enjoy going out often to restaurants with friends. Michael grows his own fresh vegetables in his home garden or regularly touts the benefits of homegrown and homecooked meals over fast food.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Michael enjoys going out often to restaurants with friends.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nGrow(x, y) ::: x grows y in his home garden.\nAmpleSpace(x) ::: x has ample space.\nYoungWorkingProfessional(x) ::: x is a young working professional.\nLive(x, y) ::: x lives in y.\nCity(y) ::: y is a large city.\nOrder(x, y) ::: x orders y from delivery services.\nTakeout(x, y) ::: x orders takeout from delivery services.\nEnjoy(x, y) ::: x enjoys y.\nGoOut(x, y) ::: x goes out to y.\nFriend(x"
    ]
  },
  {
    "id": "FOLIO_train_202",
    "context": "All people who grow their own fresh vegetables in their home garden also have ample space. If people are young working professionals who live in large cities, then they do not have ample space. If people order takeout from delivery services often, then they grow their own fresh vegetables in their home garden. If people enjoy going out often to restaurants with friends, then they order takeout from delivery services often. If people regularly tout the benefits of homegrown and homecooked meals over fast food, then they enjoy going out often to restaurants with friends. Michael grows his own fresh vegetables in his home garden or regularly touts the benefits of homegrown and homecooked meals over fast food.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Michael is a young working professional who lives in large cities.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nGrow(x, y) ::: x grows y in his home garden.\nAmpleSpace(x) ::: x has ample space.\nYoungWorkingProfessional(x) ::: x is a young working professional.\nLive(x, y) ::: x lives in y.\nCity(x) ::: x is a large city.\nOrder(x, y) ::: x orders y from a delivery service.\nTakeout(x, y) ::: x orders takeout from y.\nEnjoy(x, y) ::: x enjoys y.\nGoOut(x, y) ::: x goes out to y.\nRestaurant("
    ]
  },
  {
    "id": "FOLIO_train_203",
    "context": "All people who grow their own fresh vegetables in their home garden also have ample space. If people are young working professionals who live in large cities, then they do not have ample space. If people order takeout from delivery services often, then they grow their own fresh vegetables in their home garden. If people enjoy going out often to restaurants with friends, then they order takeout from delivery services often. If people regularly tout the benefits of homegrown and homecooked meals over fast food, then they enjoy going out often to restaurants with friends. Michael grows his own fresh vegetables in his home garden or regularly touts the benefits of homegrown and homecooked meals over fast food.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Michael grows his own fresh vegetables in their home garden or is a young working professional who lives in large cities.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGrow(x, y) ::: x grows y in their home garden.\nAmpleSpace(x) ::: x has ample space.\nYoungWorkingProfessional(x) ::: x is a young working professional.\nLive(x, y) ::: x lives in y.\nCity(x) ::: x is a large city.\nOrder(x, y) ::: x orders y from delivery services.\nTakeout(x, y) ::: x is takeout from y.\nEnjoy(x, y) ::: x enjoys y.\nGoOut(x, y) ::: x goes out to y.\nFriend(x, y"
    ]
  },
  {
    "id": "FOLIO_train_204",
    "context": "All devices belonging to the company are connected to Google Home. All devices belonging to employees are connected to the company's wifi. All devices connected to Google Home are controlled by the managers. All devices that connect to the company's wifi are easy to operate. IPod1 belongs to employees.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? iPod1 is easy to operate.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nBelong(x, y) ::: x belongs to y.\nConnected(x, y) ::: x is connected to y.\nControl(x, y) ::: x is controlled by y.\nEasyToOperate(x) ::: x is easy to operate.\nPremises:\n∀x (Belong(x, company) → Connected(x, GoogleHome)) ::: All devices belonging to the company are connected to Google Home.\n∀x (Belong(x, employee) → Connected(x, companyWifi)) ::: All devices belonging to employees are connected to the company's wifi.\n∀x (Connected(x,"
    ]
  },
  {
    "id": "FOLIO_train_205",
    "context": "All devices belonging to the company are connected to Google Home. All devices belonging to employees are connected to the company's wifi. All devices connected to Google Home are controlled by the managers. All devices that connect to the company's wifi are easy to operate. IPod1 belongs to employees.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? iPod1 is controlled by managers.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nBelong(x, y) ::: x belongs to y.\nConnected(x, y) ::: x is connected to y.\nControl(x, y) ::: x is controlled by y.\nEasyToOperate(x) ::: x is easy to operate.\nPremises:\n∀x (Belong(x, company) → Connected(x, GoogleHome)) ::: All devices belonging to the company are connected to Google Home.\n∀x (Belong(x, employee) → Connected(x, companyWifi)) ::: All devices belonging to employees are connected to the company's wifi.\n∀x (Connected(x,"
    ]
  },
  {
    "id": "FOLIO_train_206",
    "context": "All devices belonging to the company are connected to Google Home. All devices belonging to employees are connected to the company's wifi. All devices connected to Google Home are controlled by the managers. All devices that connect to the company's wifi are easy to operate. IPod1 belongs to employees.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? iPod1 is connected to Google Home.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nBelongsTo(x, y) ::: x belongs to y.\nConnectedTo(x, y) ::: x is connected to y.\nControlledBy(x, y) ::: x is controlled by y.\nEasyToOperate(x) ::: x is easy to operate.\nPremises:\n∀x (BelongsTo(x, company) → ConnectedTo(x, GoogleHome)) ::: All devices belonging to the company are connected to Google Home.\n∀x (BelongsTo(x, employee) → ConnectedTo(x, companyWifi)) ::: All devices belonging to employees are connected to the company's wifi."
    ]
  },
  {
    "id": "FOLIO_train_207",
    "context": "No touring musicians are permanent members of an orchestra. Musicians are either permanent members of an orchestra or have a unique musical voice or style. All musicians who have a unique musical voice or style are interesting as individual performers. All musicians who are interesting as individual performers are capable of attracting large audiences. If Ryan is interesting as an individual performer and has a unique musical voice or style, then Ryan is either a touring soloist musician and capable of attracting large audiences, or neither a touring soloist musician nor capable of attracting large audiences.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Ryan is interesting as an individual performer.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nTouring(x) ::: x is a touring musician.\nPermanentMember(x, y) ::: x is a permanent member of y.\nUniqueMusicalVoiceOrStyle(x) ::: x has a unique musical voice or style.\nInteresting(x) ::: x is interesting as an individual performer.\nCapableOfAttractingLargeAudiences(x) ::: x is capable of attracting large audiences.\nPremises:\n∀x (Touring(x) → ¬PermanentMember(x, orchestra)) ::: No touring musicians are permanent members of an orchestra."
    ]
  },
  {
    "id": "FOLIO_train_208",
    "context": "No touring musicians are permanent members of an orchestra. Musicians are either permanent members of an orchestra or have a unique musical voice or style. All musicians who have a unique musical voice or style are interesting as individual performers. All musicians who are interesting as individual performers are capable of attracting large audiences. If Ryan is interesting as an individual performer and has a unique musical voice or style, then Ryan is either a touring soloist musician and capable of attracting large audiences, or neither a touring soloist musician nor capable of attracting large audiences.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Ryan is either a permanent member of an orchestra or a touring soloist musician.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nTouring(x) ::: x is a touring musician.\nPermanentMember(x, y) ::: x is a permanent member of y.\nUnique(x) ::: x has a unique musical voice or style.\nInteresting(x) ::: x is interesting as an individual performer.\nCapable(x) ::: x is capable of attracting large audiences.\nPremises:\n∀x (Touring(x) → ¬PermanentMember(x, y)) ::: No touring musicians are permanent members of an orchestra.\n∀x (Musician(x) → (Unique(x) ∨"
    ]
  },
  {
    "id": "FOLIO_train_209",
    "context": "No touring musicians are permanent members of an orchestra. Musicians are either permanent members of an orchestra or have a unique musical voice or style. All musicians who have a unique musical voice or style are interesting as individual performers. All musicians who are interesting as individual performers are capable of attracting large audiences. If Ryan is interesting as an individual performer and has a unique musical voice or style, then Ryan is either a touring soloist musician and capable of attracting large audiences, or neither a touring soloist musician nor capable of attracting large audiences.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Ryan is either a permanent member of an orchestra or has a unique musical voice or style.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nTouring(x) ::: x is a touring musician.\nPermanentMember(x, y) ::: x is a permanent member of y.\nUniqueMusicalVoiceOrStyle(x) ::: x has a unique musical voice or style.\nInteresting(x) ::: x is interesting as an individual performer.\nCapableOfAttractingLargeAudiences(x) ::: x is capable of attracting large audiences.\nPremises:\n∀x (Touring(x) → ¬PermanentMember(x, orchestra)) ::: No touring musicians are permanent members of an orchestra."
    ]
  },
  {
    "id": "FOLIO_train_210",
    "context": "If someone yells, then they are not cool. If someone is angry, then they yell. If someone flies, then they are cool. Every person that knows magic can fly. All wizards know magic. Harry either yells and flies, or neither yells nor flies. Potter is a wizard and flies.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Harry is cool.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nYells(x) ::: x yells.\nFlies(x) ::: x flies.\nCool(x) ::: x is cool.\nAngry(x) ::: x is angry.\nKnowsMagic(x) ::: x knows magic.\nWizard(x) ::: x is a wizard.\nPremises:\nYells(x) → ¬Cool(x) ::: If someone yells, then they are not cool.\nAngry(x) → Yells(x) ::: If someone is angry, then they yell.\nFlies(x) → Cool(x) ::: If someone flies, then they are cool.\nKnowsMagic(x) → Flies(x) ::: Every person that knows magic can fly.\nWizard(potter) ∧ Flies(potter) ::: Potter is a wizard and flies.\nConclusion:\nCool(harry) ::: Harry is cool.\n------"
    ]
  },
  {
    "id": "FOLIO_train_211",
    "context": "If someone yells, then they are not cool. If someone is angry, then they yell. If someone flies, then they are cool. Every person that knows magic can fly. All wizards know magic. Harry either yells and flies, or neither yells nor flies. Potter is a wizard and flies.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Harry is not cool.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nYells(x) ::: x yells.\nFlies(x) ::: x flies.\nCool(x) ::: x is cool.\nAngry(x) ::: x is angry.\nKnowsMagic(x) ::: x knows magic.\nWizard(x) ::: x is a wizard.\nPremises:\nYells(x) → ¬Cool(x) ::: If someone yells, then they are not cool.\nAngry(x) → Yells(x) ::: If someone is angry, then they yell.\nFlies(x) → Cool(x) ::: If someone flies, then they are cool.\nKnowsMagic(x) → Flies(x) ::: Every person that knows magic can fly.\nWizard(potter) ∧ Flies(potter) ::: Potter is a wizard and flies.\nConclusion:\n¬Cool(harry) ::: Harry is not cool."
    ]
  },
  {
    "id": "FOLIO_train_212",
    "context": "If someone yells, then they are not cool. If someone is angry, then they yell. If someone flies, then they are cool. Every person that knows magic can fly. All wizards know magic. Harry either yells and flies, or neither yells nor flies. Potter is a wizard and flies.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Harry is a wizard or angry.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nYells(x) ::: x yells.\nFlies(x) ::: x flies.\nCool(x) ::: x is cool.\nAngry(x) ::: x is angry.\nKnowsMagic(x) ::: x knows magic.\nWizard(x) ::: x is a wizard.\nPremises:\nYells(x) → ¬Cool(x) ::: If someone yells, then they are not cool.\nAngry(x) → Yells(x) ::: If someone is angry, then they yell.\nFlies(x) → Cool(x) ::: If someone flies, then they are cool.\nKnowsMagic(x) → Flies(x) ::: Every person that knows magic can fly.\nWizard(potter) ∧ Flies(potter) ::: Potter is a wizard and flies.\nConclusion:\nAngry(harry) ∨ Flies(harry)"
    ]
  },
  {
    "id": "FOLIO_train_213",
    "context": "If someone yells, then they are not cool. If someone is angry, then they yell. If someone flies, then they are cool. Every person that knows magic can fly. All wizards know magic. Harry either yells and flies, or neither yells nor flies. Potter is a wizard and flies.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Harry is neither a wizard nor angry.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nYells(x) ::: x yells.\nFlies(x) ::: x flies.\nCool(x) ::: x is cool.\nAngry(x) ::: x is angry.\nKnowsMagic(x) ::: x knows magic.\nWizard(x) ::: x is a wizard.\nPremises:\nYells(x) → ¬Cool(x) ::: If someone yells, then they are not cool.\nAngry(x) → Yells(x) ::: If someone is angry, then they yell.\nFlies(x) → Cool(x) ::: If someone flies, then they are cool.\nKnowsMagic(x) → Flies(x) ::: Every person that knows magic can fly.\nWizard(potter) ∧ Flies(potter) ::: Potter is a wizard and flies.\nConclusion:\n¬Angry(harry) ∧ ¬Yells("
    ]
  },
  {
    "id": "FOLIO_train_214",
    "context": "Products are either produced in China or the US. All produced in China are labeled. All produced in the US are sold in the US. If labeled, then the product is cheaper. All sold in the US are sold in Walmart. All displayed on the homepage are sold in Walmart. No products returned by customers are sold in Walmart. G-910 is either displayed on the homepage or cheaper.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? G-910 is displayed on the homepage.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nProducedIn(x, y) ::: x is produced in y.\nLabeled(x) ::: x is labeled.\nCheaper(x) ::: x is cheaper.\nSoldIn(x, y) ::: x is sold in y.\nDisplayedOn(x, y) ::: x is displayed on y.\nReturnedBy(x, y) ::: x is returned by y.\nPremises:\n∀x (ProducedIn(x, China) ⊕ ProducedIn(x, US)) ::: Products are either produced in China or the US.\n∀x (ProducedIn(x, China) → Labeled(x)) ::: All produced in China are labeled.\n∀x (ProducedIn(x, US) → SoldIn(x, US)) ::: All produced in the US are sold in the US.\n∀x (Labeled(x) → Cheaper(x)) ::: If labeled, then the product is cheaper.\n∀x (S"
    ]
  },
  {
    "id": "FOLIO_train_215",
    "context": "Products are either produced in China or the US. All produced in China are labeled. All produced in the US are sold in the US. If labeled, then the product is cheaper. All sold in the US are sold in Walmart. All displayed on the homepage are sold in Walmart. No products returned by customers are sold in Walmart. G-910 is either displayed on the homepage or cheaper.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? G-910 is not displayed on the homepage.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nProducedIn(x, y) ::: x is produced in y.\nLabeled(x) ::: x is labeled.\nCheaper(x) ::: x is cheaper.\nSoldIn(x, y) ::: x is sold in y.\nDisplayedOn(x, y) ::: x is displayed on y.\nReturnedBy(x, y) ::: x is returned by y.\nPremises:\n∀x (ProducedIn(x, China) ⊕ ProducedIn(x, US)) ::: Products are either produced in China or the US.\n∀x (ProducedIn(x, China) → Labeled(x)) ::: All produced in China are labeled.\n∀x (ProducedIn(x, US) → SoldIn(x, US)) ::: All produced in the US are sold in the US.\n∀x (Labeled(x) → Cheaper(x)) ::: If labeled, then the product is cheaper.\n∀x (S"
    ]
  },
  {
    "id": "FOLIO_train_216",
    "context": "Products are either produced in China or the US. All produced in China are labeled. All produced in the US are sold in the US. If labeled, then the product is cheaper. All sold in the US are sold in Walmart. All displayed on the homepage are sold in Walmart. No products returned by customers are sold in Walmart. G-910 is either displayed on the homepage or cheaper.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? G-910 is a product returned by customers.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nProducedIn(x, y) ::: x is produced in y.\nLabeled(x) ::: x is labeled.\nSoldIn(x, y) ::: x is sold in y.\nDisplayedOn(x, y) ::: x is displayed on y.\nReturnedBy(x, y) ::: x is returned by y.\nCheaper(x) ::: x is cheaper.\nPremises:\n∀x (ProducedIn(x, China) ⊕ ProducedIn(x, US)) ::: Products are either produced in China or the US.\n∀x (ProducedIn(x, China) → Labeled(x)) ::: All produced in China are labeled.\n∀x (ProducedIn(x, US) → SoldIn(x, US)) ::: All produced in the US are sold in the US.\n∀x (Labeled(x) → Cheaper(x)) ::: If labeled, then the product is cheaper.\n∀x (S"
    ]
  },
  {
    "id": "FOLIO_train_217",
    "context": "Products are either produced in China or the US. All produced in China are labeled. All produced in the US are sold in the US. If labeled, then the product is cheaper. All sold in the US are sold in Walmart. All displayed on the homepage are sold in Walmart. No products returned by customers are sold in Walmart. G-910 is either displayed on the homepage or cheaper.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? G-910 is a product returned by customers or sold in Walmart.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nProducedIn(x, y) ::: x is produced in y.\nLabeled(x) ::: x is labeled.\nCheaper(x) ::: x is cheaper.\nSoldIn(x, y) ::: x is sold in y.\nDisplayedOn(x, y) ::: x is displayed on y.\nReturnedBy(x, y) ::: x is returned by y.\nPremises:\n∀x (ProducedIn(x, China) ⊕ ProducedIn(x, US)) ::: Products are either produced in China or the US.\n∀x (ProducedIn(x, China) → Labeled(x)) ::: All produced in China are labeled.\n∀x (ProducedIn(x, US) → SoldIn(x, US)) ::: All produced in the US are sold in the US.\n∀x (Labeled(x) → Cheaper(x)) ::: If labeled, then the product is cheaper.\n∀x (S"
    ]
  },
  {
    "id": "FOLIO_train_218",
    "context": "Products are either produced in China or the US. All produced in China are labeled. All produced in the US are sold in the US. If labeled, then the product is cheaper. All sold in the US are sold in Walmart. All displayed on the homepage are sold in Walmart. No products returned by customers are sold in Walmart. G-910 is either displayed on the homepage or cheaper.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? G-910 is either returned by customers or sold in Walmart.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nProducedIn(x, y) ::: x is produced in y.\nLabeled(x) ::: x is labeled.\nCheaper(x) ::: x is cheaper.\nSoldIn(x, y) ::: x is sold in y.\nDisplayedOn(x, y) ::: x is displayed on y.\nReturnedBy(x, y) ::: x is returned by y.\nPremises:\n∀x (ProducedIn(x, China) → Labeled(x)) ::: All produced in China are labeled.\n∀x (ProducedIn(x, US) → SoldIn(x, US)) ::: All produced in the US are sold in the US.\nLabeled(x) → Cheaper(x) ::: If labeled, then the product is cheaper.\nSoldIn(x, Walmart) → DisplayedOn(x, Walmart) ::: All sold in Walmart are displayed on Walmart.\nDisplayedOn(x, Walmart)"
    ]
  },
  {
    "id": "FOLIO_train_219",
    "context": "People either order a lot of Amazon packages or are environmentally conscious. If people order a lot of Amazon packages, then they get a lot of daily mail delivered. If people are environmentally conscious, then they have solar panels in their homes. If people get a lot of daily mail delivered, then they are very involved with their neighborhood. If people have solar panels in their homes, then they save a lot of money. If Marcy either gets a lot of mail and is very involved with her neighborhood or if she does not order a lot of Amazon packages nor is very involved with her neighborhood, then Marcy does not both get a lot of daily mail and order a lot of Amazon packages.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Marcy either orders a lot of Amazon packages or saves a lot of money.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nOrder(x, y) ::: x orders y.\nPackage(x) ::: x is a package.\nDailyMail(x) ::: x is daily mail.\nGet(x, y) ::: x gets y.\nInvolved(x, y) ::: x is involved with y.\nNeighborhood(x) ::: x is a neighborhood.\nSolarPanel(x) ::: x is a solar panel.\nSave(x, y) ::: x saves y.\nMoney(x) ::: x is money.\nPremises:\n∀x (Package(x) → Order(x, Amazon)) ::: People either order a lot of Amazon packages or are environmentally conscious.\n∀x (DailyMail(x) → Get(x, DailyMail)) ::: If people order a lot of Amazon packages, then they get a lot of daily mail delivered.\n∀x (Involved(x, Neighborhood) → Get(x, DailyMail)) ::: If people are environmentally"
    ]
  },
  {
    "id": "FOLIO_train_220",
    "context": "People either order a lot of Amazon packages or are environmentally conscious. If people order a lot of Amazon packages, then they get a lot of daily mail delivered. If people are environmentally conscious, then they have solar panels in their homes. If people get a lot of daily mail delivered, then they are very involved with their neighborhood. If people have solar panels in their homes, then they save a lot of money. If Marcy either gets a lot of mail and is very involved with her neighborhood or if she does not order a lot of Amazon packages nor is very involved with her neighborhood, then Marcy does not both get a lot of daily mail and order a lot of Amazon packages.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Marcy is not a person who orders a lot of Amazon packages and is very environmentally conscious, then Taylor is not someone who saves a lot of money and is environmentally conscious.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nOrder(x, y) ::: x orders y.\nAmazonPackage(x) ::: x is an Amazon package.\nDailyMail(x) ::: x is daily mail.\nGet(x, y) ::: x gets y.\nNeighborhood(x) ::: x is a neighborhood.\nInvolved(x, y) ::: x is involved with y.\nSolarPanel(x) ::: x is a solar panel.\nSave(x, y) ::: x saves y.\nMoney(x) ::: x is money.\nPremises:\n∀x (Order(x, AmazonPackage(x)) → Get(x, DailyMail(x))) ::: If people order a lot of Amazon packages, then they get a lot of daily mail delivered.\n∀x (EnvironmentallyConscious(x) → SolarPanel(x)) ::: If people are environmentally conscious, then they have solar panels in their homes.\n∀x (Get(x, DailyMail(x)) → Involved(x, Neighborhood(x))) ::: If people get a lot of daily mail delivered, then they are very involved with their neighborhood.\n∀x (SolarPanel(x) → Save(x, Money(x))) ::: If people have solar panels in their homes, then they save a lot of money.\n¬(Get(Marcy, DailyMail(Marcy)) ∧ Order(Marcy, AmazonPackage(Marcy))) ⊕ ¬(Get(Marcy, DailyMail(Marcy)) ∨ Order(Marcy, AmazonPackage(Marcy))) ::: If people either order a lot of Amazon packages or are environmentally conscious, then Marcy does not both get a lot of daily mail and order a lot of Amazon packages.\nConclusion:\n¬(Save(Taylor, Money(Taylor)) ∧ EnvironmentallyConscious(Taylor)) ⊕ ¬(Save(Taylor, Money(Taylor)) ∨ EnvironmentallyConscious(Taylor)) ::: If Marcy is not a person who orders a lot of Amazon packages and is very environmentally conscious, then Taylor is not someone who saves a lot of money and is environmentally conscious.\n------"
    ]
  },
  {
    "id": "FOLIO_train_221",
    "context": "Indonesia is a country. In Indonesia, the prosecutor only personally investigates cases of some special crimes. Corruption is a type of crime. Once the police complete investigations of a crime, they hand the evidence to the prosecutor. Evidence can be either satisfactory or unsatisfactory. If the police hand the evidence to the prosecutor and the evidence is satisfactory, the prosecutor will prosecute the offender in an appropriate court.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? When the police complete investigations, the prosecutor will prosecute the offender at an appropriate court.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nCountry(x) ::: x is a country.\nIndonesia(x) ::: x is Indonesia.\nProsecutor(x) ::: x is a prosecutor.\nInvestigate(x, y) ::: x investigates y.\nCrime(x) ::: x is a crime.\nCorruption(x) ::: x is corruption.\nEvidence(x) ::: x is evidence.\nSatisfactory(x) ::: x is satisfactory.\nUnsatisfactory(x) ::: x is unsatisfactory.\nProsecute(x, y) ::: x prosecutes y.\nCourt(x) ::: x is a court.\nAppropriate(x, y) ::: x is appropriate for y.\nPremises:\nCountry(indonesia) ::: Indonesia is a country.\nProsecutor(prosecutor) ::: The prosecutor is a prosecutor.\nInvestigate(police, crime) ::: The police investigate crime.\nEvidence(evidence) ::: The evidence is evidence.\nSatisfactory(evidence) ::: The evidence is satisfactory.\nProsecute(prosecutor, offender) ::: The prosecutor prosecutes the offender.\nCourt(court) ::: The court is a court.\nAppropriate(court, prosecutor) ::: The court is appropriate for the prosecutor.\nConclusion:\nProsecute(prosecutor, offender) ::: When the police complete investigations, the prosecutor will prosecute the offender at an appropriate court.\n------\nProblem:\nThe following is a list of the top 100 most popular baby names in the United States in 2013.\n1. Jacob\n2. Mason\n3. William\n4. Michael\n5. Jayden\n6. Ethan\n7. Alexander\n8. Noah\n9. Daniel\n10. Aiden\n11. Benjamin\n12. Anthony\n13. David\n14. James\n15. Christopher\n16. Matthew\n17. John\n18. Joseph\n19. Andrew\n2"
    ]
  },
  {
    "id": "FOLIO_train_222",
    "context": "Indonesia is a country. In Indonesia, the prosecutor only personally investigates cases of some special crimes. Corruption is a type of crime. Once the police complete investigations of a crime, they hand the evidence to the prosecutor. Evidence can be either satisfactory or unsatisfactory. If the police hand the evidence to the prosecutor and the evidence is satisfactory, the prosecutor will prosecute the offender in an appropriate court.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? In Indonesia, the prosecutor personally investigates cases of corruption.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nCountry(x) ::: x is a country.\nIndonesia(x) ::: x is Indonesia.\nProsecutor(x) ::: x is a prosecutor.\nPersonallyInvestigate(x, y) ::: x personally investigates y.\nCrime(x) ::: x is a crime.\nCorruption(x) ::: x is corruption.\nEvidence(x) ::: x is evidence.\nSatisfactory(x) ::: x is satisfactory.\nUnsatisfactory(x) ::: x is unsatisfactory.\nProsecute(x, y) ::: x prosecutes y.\nAppropriateCourt(x) ::: x is an appropriate court.\nPremises:\nCountry(indonesia) ∧ Prosecutor(prosecutor) ::: Indonesia is a country. In Indonesia, the prosecutor only personally investigates cases of some special crimes.\nCrime(corruption) ∧ Prosecutor(prosecutor) ::: Corruption is a type of crime.\nOnce(police, evidence, satisfactory) ::: Once the police complete investigations of a crime, they hand the evidence to the prosecutor.\nEvidence(evidence) ∧ Satisfactory(evidence) ::: Evidence can be either satisfactory or unsatisfactory.\nIf(police, evidence, satisfactory, prosecutor, offender, court) ::: If the police hand the evidence to the prosecutor and the evidence is satisfactory, the prosecutor will prosecute the offender in an appropriate court.\nConclusion:\nPersonallyInvestigate(prosecutor, corruption) ::: In Indonesia, the prosecutor personally investigates cases of corruption.\n------\nProblem:\nThe following is a list of the top 100 most popular names in the United States for the year 2000.\n1. Michael\n2. Christopher\n3. Joshua\n4. Matthew\n5. David\n6. Andrew\n7. Joseph\n8. Daniel\n9. John\n10. Jason\n11. Ryan\n12. Nicholas\n13. James\n14."
    ]
  },
  {
    "id": "FOLIO_train_223",
    "context": "Indonesia is a country. In Indonesia, the prosecutor only personally investigates cases of some special crimes. Corruption is a type of crime. Once the police complete investigations of a crime, they hand the evidence to the prosecutor. Evidence can be either satisfactory or unsatisfactory. If the police hand the evidence to the prosecutor and the evidence is satisfactory, the prosecutor will prosecute the offender in an appropriate court.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? When the police complete investigations, the prosecutor investigates in personally.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nCountry(x) ::: x is a country.\nIndonesia(x) ::: x is Indonesia.\nProsecutor(x) ::: x is a prosecutor.\nInvestigate(x, y) ::: x investigates y.\nCrime(x) ::: x is a crime.\nCorruption(x) ::: x is corruption.\nEvidence(x) ::: x is evidence.\nSatisfactory(x) ::: x is satisfactory.\nUnsatisfactory(x) ::: x is unsatisfactory.\nProsecute(x, y) ::: x prosecutes y.\nCourt(x) ::: x is a court.\nPremises:\nCountry(indonesia) ∧ Prosecutor(prosecutor) ::: Indonesia is a country. In Indonesia, the prosecutor only personally investigates cases of some special crimes.\n∀x (Crime(x) → Investigate(police, x)) ::: Once the police complete investigations of a crime, they hand the evidence to the prosecutor.\n∀x (Investigate(police, x) → Evidence(police, x)) ::: If the police hand the evidence to the prosecutor and the evidence is satisfactory, the prosecutor will prosecute the offender in an appropriate court.\nConclusion:\nInvestigate(prosecutor, crime) ::: When the police complete investigations, the prosecutor investigates in personally.\n------\nProblem:\nThe following is a list of the top 100 most popular baby names in the United States in 2013.\n1. Jacob\n2. Mason\n3. William\n4. Michael\n5. Jayden\n6. Ethan\n7. Alexander\n8. Noah\n9. Daniel\n10. Aiden\n11. Benjamin\n12. Anthony\n13. David\n14. James\n15. Christopher\n16. Matthew\n17. John\n18. Joseph\n19. Andrew\n20. Christian\n21. Samuel\n22. Elijah\n23. Joshua\n24. Nicholas\n25"
    ]
  },
  {
    "id": "FOLIO_train_224",
    "context": "No watch that is battery-powered is automatic. All digital watches are battery-powered. Some mechanical watches are automatic. All smart watches are digital. Moonwatch is not a digital watch or an automatic.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Moonwatch is a mechanical watch.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nBatteryPowered(x) ::: x is a battery-powered watch.\nAutomatic(x) ::: x is an automatic watch.\nDigital(x) ::: x is a digital watch.\nMechanical(x) ::: x is a mechanical watch.\nSmart(x) ::: x is a smart watch.\nPremises:\n¬(BatteryPowered(x) ∧ Automatic(x)) ::: No watch that is battery-powered is automatic.\n∀x (Digital(x) → BatteryPowered(x)) ::: All digital watches are battery-powered.\n∃x (Mechanical(x) ∧ Automatic(x)) ::: Some mechanical watches are automatic.\n∀x (Smart(x) → Digital(x)) ::: All smart watches are digital.\n¬Moonwatch(digital) ∧ ¬Moonwatch(automatic) ::: Moonwatch is not a digital watch or an automatic.\nConclusion:\nMechanical(moonwatch) ::: Moonwatch is a mechanical watch.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\n###\nPredicates:\nDependent(x) ::: x is a person dependent on caffeine.\nDrinks(x) ::: x regularly drinks coffee.\nJokes(x"
    ]
  },
  {
    "id": "FOLIO_train_225",
    "context": "No watch that is battery-powered is automatic. All digital watches are battery-powered. Some mechanical watches are automatic. All smart watches are digital. Moonwatch is not a digital watch or an automatic.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Moonwatch is a smartwatch and a mechanical watch.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nBatteryPowered(x) ::: x is a battery-powered watch.\nAutomatic(x) ::: x is an automatic watch.\nDigital(x) ::: x is a digital watch.\nMechanical(x) ::: x is a mechanical watch.\nSmart(x) ::: x is a smart watch.\nPremises:\n¬(BatteryPowered(x) ∧ Automatic(x)) ::: No watch that is battery-powered is automatic.\n∀x (BatteryPowered(x) → Digital(x)) ::: All battery-powered watches are digital.\n∃x (Mechanical(x) ∧ Automatic(x)) ::: Some mechanical watches are automatic.\n∀x (Digital(x) → Smart(x)) ::: All digital watches are smart.\n¬Moonwatch(digital) ∧ ¬Moonwatch(automatic) ::: Moonwatch is not a digital watch or an automatic.\nConclusion:\nSmart(Moonwatch) ∧ Mechanical(Moonwatch) ::: Moonwatch is a smartwatch and a mechanical watch.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\n###\nPredicates:\nDependent(x) ::: x is a person dependent on caffeine.\nDrinks(x) :"
    ]
  },
  {
    "id": "FOLIO_train_226",
    "context": "No watch that is battery-powered is automatic. All digital watches are battery-powered. Some mechanical watches are automatic. All smart watches are digital. Moonwatch is not a digital watch or an automatic.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Moonwatch is a smartwatch and a mechanical watch, then Moonwatch is not a mechanical watch.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nBatteryPowered(x) ::: x is a battery-powered watch.\nAutomatic(x) ::: x is an automatic watch.\nDigital(x) ::: x is a digital watch.\nMechanical(x) ::: x is a mechanical watch.\nSmart(x) ::: x is a smart watch.\nPremises:\n¬(BatteryPowered(x) ∧ Automatic(x)) ::: No watch that is battery-powered is automatic.\n∀x (Digital(x) → BatteryPowered(x)) ::: All digital watches are battery-powered.\n∃x (Mechanical(x) ∧ Automatic(x)) ::: Some mechanical watches are automatic.\n∀x (Smart(x) → Digital(x)) ::: All smart watches are digital.\n¬Moonwatch(mechanical) ∧ ¬Moonwatch(digital) ∧ ¬Moonwatch(smart) ::: Moonwatch is not a digital watch or an automatic.\nConclusion:\n¬(Moonwatch(mechanical) ∧ Moonwatch(smart)) ::: If Moonwatch is a smartwatch and a mechanical watch, then Moonwatch is not a mechanical watch.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\n###\nPredicates:\nDep"
    ]
  },
  {
    "id": "FOLIO_train_227",
    "context": "No watch that is battery-powered is automatic. All digital watches are battery-powered. Some mechanical watches are automatic. All smart watches are digital. Moonwatch is not a digital watch or an automatic.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Moonwatch is a mechanical or battery-powered watch, then Moonwatch is not a smartwatch.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nBatteryPowered(x) ::: x is a battery-powered watch.\nAutomatic(x) ::: x is an automatic watch.\nDigital(x) ::: x is a digital watch.\nMechanical(x) ::: x is a mechanical watch.\nSmartWatch(x) ::: x is a smartwatch.\nPremises:\n¬(BatteryPowered(x) ∧ Automatic(x)) ::: No watch that is battery-powered is automatic.\n∀x (Digital(x) → BatteryPowered(x)) ::: All digital watches are battery-powered.\n∃x (Mechanical(x) ∧ Automatic(x)) ::: Some mechanical watches are automatic.\n∀x (SmartWatch(x) → Digital(x)) ::: All smart watches are digital.\n¬Moonwatch(smartwatch) ::: Moonwatch is not a smartwatch.\nConclusion:\n¬(Moonwatch(mechanical) ∨ Moonwatch(batteryPowered)) ::: If Moonwatch is a mechanical or battery-powered watch, then Moonwatch is not a smartwatch.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\n###\nPredicates:\nDependent(x) ::: x is a person dependent on caffeine.\nDr"
    ]
  },
  {
    "id": "FOLIO_train_228",
    "context": "If a person can distinguish the taste of different condiments, then he/she can also use different condiments to cook. People who have the talent of cooking can distinguish the taste of different condiments. Only people with the talent of cooking can make delicious meals. If the meal is popular at the party, then it is delicious. John can make meals which are popular at the party.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? John cannot use different condiments to cook.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nCanDistinguish(x, y) ::: x can distinguish the taste of y.\nCanCook(x) ::: x can cook.\nTalentOfCooking(x) ::: x has the talent of cooking.\nDelicious(x) ::: x is delicious.\nPopular(x, y) ::: x is popular at y.\nPremises:\n∀x (CanCook(x) → CanDistinguish(x, condiment)) ::: If a person can distinguish the taste of different condiments, then he/she can also use different condiments to cook.\n∀x (TalentOfCooking(x) → CanDistinguish(x, condiment)) ::: People who have the talent of cooking can distinguish the taste of different condiments.\n∀x (TalentOfCooking(x) → Delicious(x)) ::: Only people with the talent of cooking can make delicious meals.\nPopular(meal, party) ::: The meal is popular at the party.\nConclusion:\n¬CanCook(john) ::: John cannot use different condiments to cook.\n------\nProblem:\nThe following is a list of the top 100 most popular movies of all time.\n1. Titanic (1997)\n2. The Lord of the Rings: The Return of the King (2003)\n3. Star Wars: Episode IV - A New Hope (1977)\n4. The Dark Knight (2008)\n5. Pirates of the Caribbean: Dead Man's Chest (2006)\n6. The Lord of the Rings: The Fellowship of the Ring (2001)\n7. Harry Potter and the Philosopher's Stone (2001)\n8. E.T. the Extra-Terrestrial (1982)\n9. The Lord of the Rings: The Two Towers (2002)\n10. Jurassic Park (1993)\n11. Spider-Man (2002)\n12. The Sound of Music (196"
    ]
  },
  {
    "id": "FOLIO_train_229",
    "context": "Effective monetary policy is possible with successful inflation control and a strong national currency. A country cannot simultaneously regulate the exchange rate and successfully control inflation. The introduction of an embargo on foreign trade goods in a country leads to a sharp decrease in exports. If exports fall sharply, the national currency cannot be in this country. Regulation of the exchange rate is required to have a strong national currency. There is an embargo on Russian foreign trade goods.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? In Russia, an effective monetary policy is possible.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nEffectiveMonetaryPolicy(x) ::: x is an effective monetary policy.\nInflationControl(x) ::: x is successful inflation control.\nStrongCurrency(x) ::: x is a strong national currency.\nExchangeRateRegulation(x) ::: x is an exchange rate regulation.\nEmbargo(x) ::: x is an embargo.\nExport(x) ::: x is an export.\nFall(x) ::: x is a fall.\nNationalCurrency(x) ::: x is a national currency.\nPremises:\nEffectiveMonetaryPolicy(x) ∧ InflationControl(x) ∧ StrongCurrency(x) ::: Effective monetary policy is possible with successful inflation control and a strong national currency.\n¬(ExchangeRateRegulation(x) ∧ InflationControl(x)) ::: A country cannot simultaneously regulate the exchange rate and successfully control inflation.\nEmbargo(x) ∧ Export(x) ∧ Fall(x) ::: The introduction of an embargo on foreign trade goods in a country leads to a sharp decrease in exports.\n¬Export(x) ∧ NationalCurrency(x) ::: If exports fall sharply, the national currency cannot be in this country.\nRegulation(x, y) ::: x is a regulation of y.\nStrongCurrency(x) ∧ Regulation(x, y) ::: Regulation of the exchange rate is required to have a strong national currency.\nEmbargo(x) ::: There is an embargo on Russian foreign trade goods.\nConclusion:\nEffectiveMonetaryPolicy(russia) ::: In Russia, an effective monetary policy is possible.\n------\nProblem:\nThe first person to be awarded the Nobel Prize in Literature was the French poet Sully Prudhomme. The Nobel Prize in Literature is awarded to a person who has written a book. The Nobel Prize in Literature is awarded to a person who has written a book. The Nobel Prize in Literature is awarded to a person who has written a book. The Nobel Prize in Literature is awarded to a person who has written a book. The Nobel"
    ]
  },
  {
    "id": "FOLIO_train_230",
    "context": "Video Gag is a French television series that airs weekly. Video Gag airs on the French broadcast channel TF1. If viewers send in funny videos to the French broadcast channel, then Video Gag airs them on television. All videos aired on Video Gag are in French.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Viewers send in funny videos to the French broadcast channel that are in French.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFrench(x) ::: x is in French.\nVideoGag(x) ::: x is a video aired on Video Gag.\nFunny(x) ::: x is funny.\nViewers(x) ::: x is a viewer.\nSend(x, y) ::: x sends y to y.\nAir(x, y) ::: x airs y on television.\nPremises:\nVideoGag(videoGag) ∧ Air(videoGag, TF1) ::: Video Gag is a French television series that airs weekly. Video Gag airs on the French broadcast channel TF1.\n∀x (Viewers(x) → Send(x, videoGag)) ::: If viewers send in funny videos to the French broadcast channel, then Video Gag airs them on television.\n∀x (VideoGag(x) → French(x)) ::: All videos aired on Video Gag are in French.\nConclusion:\nFrench(videoGag) ::: Viewers send in funny videos to the French broadcast channel that are in French.\n------"
    ]
  },
  {
    "id": "FOLIO_train_231",
    "context": "Video Gag is a French television series that airs weekly. Video Gag airs on the French broadcast channel TF1. If viewers send in funny videos to the French broadcast channel, then Video Gag airs them on television. All videos aired on Video Gag are in French.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Viewers send in funny videos to the French broadcast channel that are in English.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFrench(x) ::: x is in French.\nVideoGag(x) ::: x is a video aired on Video Gag.\nAired(x, y) ::: x is aired on year y.\nViewers(x) ::: x is a viewer.\nSend(x, y) ::: x sends y.\nPremises:\nVideoGag(videoGag) ∧ Aired(videoGag, year2015) ::: Video Gag is a French television series that airs weekly. Video Gag airs on the French broadcast channel TF1.\n∀x (Viewers(x) → Send(x, videoGag)) ::: If viewers send in funny videos to the French broadcast channel, then Video Gag airs them on television.\n∀x (VideoGag(x) → French(x)) ::: All videos aired on Video Gag are in French.\nConclusion:\nFrench(videoGag) ::: Viewers send in funny videos to the French broadcast channel that are in French.\n------\nProblem:\nThe following is a list of the"
    ]
  },
  {
    "id": "FOLIO_train_232",
    "context": "All phones are things. All cellphones are phones. All iPhones are cellphones. All engineers are workers. All workers are human. Jack is either an engineer or a worker. Jack is is either a human or a phone.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jack is a thing.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nPhone(x) ::: x is a phone.\nCellphone(x) ::: x is a cellphone.\niPhone(x) ::: x is an iPhone.\nEngineer(x) ::: x is an engineer.\nWorker(x) ::: x is a worker.\nHuman(x) ::: x is a human.\nPremises:\n∀x (Phone(x) → Thing(x)) ::: All phones are things.\n∀x (Cellphone(x) → Phone(x)) ::: All cellphones are phones.\n∀x (iPhone(x) → Cellphone(x)) ::: All iPhones are cellphones.\n∀x (Engineer(x) → Worker(x)) ::: All engineers are workers.\n∀x (Worker(x) → Human(x)) ::: All workers are human.\n∃x (Engineer(x) ∧ Human(x)) ::: Some engineers are human.\n∃x (Worker(x) ∧ Human(x)) ::: Some workers are human.\n∃x (Engineer(x) ∨ Work"
    ]
  },
  {
    "id": "FOLIO_train_233",
    "context": "All phones are things. All cellphones are phones. All iPhones are cellphones. All engineers are workers. All workers are human. Jack is either an engineer or a worker. Jack is is either a human or a phone.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jack is not a thing.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nPhone(x) ::: x is a phone.\nCellphone(x) ::: x is a cellphone.\niPhone(x) ::: x is an iPhone.\nEngineer(x) ::: x is an engineer.\nWorker(x) ::: x is a worker.\nHuman(x) ::: x is a human.\nPremises:\n∀x (Phone(x) → Thing(x)) ::: All phones are things.\n∀x (Cellphone(x) → Phone(x)) ::: All cellphones are phones.\n∀x (iPhone(x) → Cellphone(x)) ::: All iPhones are cellphones.\n∀x (Engineer(x) → Worker(x)) ::: All engineers are workers.\n∀x (Worker(x) → Human(x)) ::: All workers are human.\n∃x (Engineer(x) ∧ Human(x)) ::: Some engineers are human.\n∃x (Worker(x) ∧ Human(x)) ::: Some workers are human.\n∃x (Engineer(x) ∧ Human"
    ]
  },
  {
    "id": "FOLIO_train_234",
    "context": "All phones are things. All cellphones are phones. All iPhones are cellphones. All engineers are workers. All workers are human. Jack is either an engineer or a worker. Jack is is either a human or a phone.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jack is a thing and an iPhone.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nPhone(x) ::: x is a phone.\nCellphone(x) ::: x is a cellphone.\niPhone(x) ::: x is an iPhone.\nEngineer(x) ::: x is an engineer.\nWorker(x) ::: x is a worker.\nHuman(x) ::: x is a human.\nPremises:\n∀x (Phone(x) → Thing(x)) ::: All phones are things.\n∀x (Cellphone(x) → Phone(x)) ::: All cellphones are phones.\n∀x (iPhone(x) → Cellphone(x)) ::: All iPhones are cellphones.\n∀x (Engineer(x) → Worker(x)) ::: All engineers are workers.\n∀x (Worker(x) → Human(x)) ::: All workers are human.\n∃x (Engineer(x) ∧ Human(x)) ::: Some engineers are human.\n∃x (Worker(x) ∧ Human(x)) ::: Some workers are human.\n∃x (Engineer(x) ∨ Work"
    ]
  },
  {
    "id": "FOLIO_train_235",
    "context": "All phones are things. All cellphones are phones. All iPhones are cellphones. All engineers are workers. All workers are human. Jack is either an engineer or a worker. Jack is is either a human or a phone.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jack is not both a thing and an iPhone.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nPhone(x) ::: x is a phone.\nCellphone(x) ::: x is a cellphone.\niPhone(x) ::: x is an iPhone.\nEngineer(x) ::: x is an engineer.\nWorker(x) ::: x is a worker.\nHuman(x) ::: x is a human.\nPremises:\n∀x (Phone(x) → Thing(x)) ::: All phones are things.\n∀x (Cellphone(x) → Phone(x)) ::: All cellphones are phones.\n∀x (iPhone(x) → Cellphone(x)) ::: All iPhones are cellphones.\n∀x (Engineer(x) → Worker(x)) ::: All engineers are workers.\n∀x (Worker(x) → Human(x)) ::: All workers are human.\n∃x (Engineer(x) ∧ Human(x)) ::: Some engineers are human.\n∃x (Worker(x) ∧ Human(x)) ::: Some workers are human.\n∃x (Engineer(x) ∧ Work"
    ]
  },
  {
    "id": "FOLIO_train_236",
    "context": "All iPhones are electronic. Some phones are iPhones.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? No phones are electronic.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\niPhone(x) ::: x is an iPhone.\nPhone(x) ::: x is a phone.\nElectronic(x) ::: x is electronic.\nPremises:\n∀x (iPhone(x) → Electronic(x)) ::: All iPhones are electronic.\n∃x (Phone(x) ∧ iPhone(x)) ::: Some phones are iPhones.\nConclusion:\n¬Electronic(x) ::: No phones are electronic.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caff"
    ]
  },
  {
    "id": "FOLIO_train_237",
    "context": "Metropolitan Museum of Art is a museum in NYC. Whitney Museum of American Art is a museum in NYC. Museum of Modern Art (MoMA) is a museum if NYC. Metropolitan Museum of Art includes Bytantine and Islamic Art. Whitney Museum of American Art includes American art.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A museum in NYC includes Byzantine and Islamic Art.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nMuseum(x) ::: x is a museum.\nNYC(x) ::: x is in NYC.\nMetropolitanMuseumOfArt(x) ::: x is Metropolitan Museum of Art.\nWhitneyMuseumOfAmericanArt(x) ::: x is Whitney Museum of American Art.\nMuseumOfModernArt(x) ::: x is Museum of Modern Art (MoMA).\nByzantineAndIslamicArt(x) ::: x is Byzantine and Islamic Art.\nAmericanArt(x) ::: x is American art.\nPremises:\nMuseum(metropolitanMuseumOfArt) ∧ Museum(whitneyMuseumOfAmericanArt) ∧ Museum(museumOfModernArt) ∧ NYC(metropolitanMuseumOfArt) ∧ NYC(whitneyMuseumOfAmericanArt) ∧ NYC(museumOfModernArt) ::: Metropolitan Museum of Art is a museum in NYC. Whitney Museum of American Art is a museum in NYC. Museum of Modern Art (MoMA) is a museum if NYC.\nMuseum"
    ]
  },
  {
    "id": "FOLIO_train_238",
    "context": "Metropolitan Museum of Art is a museum in NYC. Whitney Museum of American Art is a museum in NYC. Museum of Modern Art (MoMA) is a museum if NYC. Metropolitan Museum of Art includes Bytantine and Islamic Art. Whitney Museum of American Art includes American art.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A museum in NYC includes American art.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nMuseum(x) ::: x is a museum.\nNYC(x) ::: x is in NYC.\nMetropolitanMuseumOfArt(x) ::: x is Metropolitan Museum of Art.\nWhitneyMuseumOfAmericanArt(x) ::: x is Whitney Museum of American Art.\nMuseumOfModernArt(x) ::: x is Museum of Modern Art (MoMA).\nByzantineAndIslamicArt(x) ::: x is Bytantine and Islamic Art.\nAmericanArt(x) ::: x is American art.\nPremises:\nMuseum(metropolitanMuseumOfArt) ∧ Museum(whitneyMuseumOfAmericanArt) ∧ Museum(museumOfModernArt) ∧ NYC(metropolitanMuseumOfArt) ∧ NYC(whitneyMuseumOfAmericanArt) ∧ NYC(museumOfModernArt) ::: Metropolitan Museum of Art is a museum in NYC. Whitney Museum of American Art is a museum in NYC. Museum of Modern Art (MoMA) is a museum if NYC.\nMuseum"
    ]
  },
  {
    "id": "FOLIO_train_239",
    "context": "Metropolitan Museum of Art is a museum in NYC. Whitney Museum of American Art is a museum in NYC. Museum of Modern Art (MoMA) is a museum if NYC. Metropolitan Museum of Art includes Bytantine and Islamic Art. Whitney Museum of American Art includes American art.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A museum in NYC includes Greek art.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nMuseum(x) ::: x is a museum.\nNYC(x) ::: x is in NYC.\nMetropolitanMuseumOfArt(x) ::: x is Metropolitan Museum of Art.\nWhitneyMuseumOfAmericanArt(x) ::: x is Whitney Museum of American Art.\nMuseumOfModernArt(x) ::: x is Museum of Modern Art (MoMA).\nByzantineAndIslamicArt(x) ::: x is Bytantine and Islamic Art.\nAmericanArt(x) ::: x is American art.\nPremises:\nMuseum(metropolitanMuseumOfArt) ∧ Museum(whitneyMuseumOfAmericanArt) ∧ Museum(museumOfModernArt) ::: Metropolitan Museum of Art is a museum in NYC. Whitney Museum of American Art is a museum in NYC. Museum of Modern Art (MoMA) is a museum if NYC.\nMuseum(metropolitanMuseumOfArt) ∧ ByzantineAndIslamicArt(metropolitanMuseumOfArt) ::: Metropolitan Museum of Art includes Byt"
    ]
  },
  {
    "id": "FOLIO_train_240",
    "context": "A person either likes eating cheese or is a francophile. No francophiles are people who like Spain as their favorite country. A person likes Spain as their favorite country or likes eating cheese. Benji is not a person who likes eating cheese and a person who studies Spanish. If Benji is neither a person who studies Spanish nor a person that studies French, then Benji is a person who studies Spanish or a person that studies French.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Benji is a person who likes eating cheese.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nLikes(x, y) ::: x likes y.\nFrancophile(x) ::: x is a francophile.\nSpain(x) ::: x is Spain.\nFavoriteCountry(x, y) ::: x is the favorite country of y.\nStudies(x, y) ::: x studies y.\nPremises:\nLikes(benji, cheese) ⊕ Likes(benji, Spain) ::: A person either likes eating cheese or is a francophile.\n¬Francophile(benji) ⊕ ¬(Francophile(benji) ∧ Spain(benji)) ::: No francophiles are people who like Spain as their favorite country.\nLikes(benji, Spain) ⊕ Likes(benji, cheese) ::: A person likes Spain as their favorite country or likes eating cheese.\n¬(Studies(benji, Spanish) ∧ Studies(benji, French)) ⊕ (Studies(benji, Spanish) ⊕ Studies(benji, French)) ::: If Benji is neither a person who studies Spanish nor a person that studies French, then Benji is a person who studies Spanish or a person that studies French.\nConclusion:\nLikes(benji, cheese) ::: Benji is a person who likes eating cheese.\n(Studies(benji, Spanish) ⊕ Studies(benji, French)) ::: If Benji is neither a person who studies Spanish nor a person that studies French, then Benji is a person who studies Spanish or a person that studies French.\n------"
    ]
  },
  {
    "id": "FOLIO_train_241",
    "context": "A person either likes eating cheese or is a francophile. No francophiles are people who like Spain as their favorite country. A person likes Spain as their favorite country or likes eating cheese. Benji is not a person who likes eating cheese and a person who studies Spanish. If Benji is neither a person who studies Spanish nor a person that studies French, then Benji is a person who studies Spanish or a person that studies French.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Benji is either a person who likes eating cheese or a francophile, then Benji is neither a person who studies Spanish nor a person who studies French.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nLikes(x, y) ::: x likes y.\nFrancophile(x) ::: x is a francophile.\nSpain(x) ::: x is Spain.\nFavoriteCountry(x, y) ::: x is the favorite country of y.\nStudies(x, y) ::: x studies y.\nPremises:\nLikes(benji, cheese) ⊕ Likes(benji, spain) ::: A person either likes eating cheese or is a francophile.\n¬Francophile(benji) ⊕ ¬(Francophile(benji) ∨ Spain(benji)) ::: No francophiles are people who like Spain as their favorite country.\nLikes(benji, spain) ⊕ Likes(benji, cheese) ::: A person likes Spain as their favorite country or likes eating cheese.\n¬(Studies(benji, spanish) ∧ Studies(benji, french)) ⊕ (Studies(benji, spanish) ⊕ Studies(benji, french)) ::: If Benji is neither a person who studies Spanish nor a person that studies French, then Benji is a person who studies Spanish or a person that studies French.\nConclusion:\n¬(Studies(benji, spanish) ∧ Studies(benji, french)) ::: If Benji is neither a person who studies Spanish nor a person that studies French, then Benji is a person who studies Spanish or a person that studies French.\n------\nProblem:\nA person either likes eating cheese or is a"
    ]
  },
  {
    "id": "FOLIO_train_242",
    "context": "A person either likes eating cheese or is a francophile. No francophiles are people who like Spain as their favorite country. A person likes Spain as their favorite country or likes eating cheese. Benji is not a person who likes eating cheese and a person who studies Spanish. If Benji is neither a person who studies Spanish nor a person that studies French, then Benji is a person who studies Spanish or a person that studies French.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Benji is a person who likes Spain as their favorite country or studies French, then Benji is either a person who studies Spanish or a person who likes Spain as their favorite country.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLikes(x, y) ::: x likes y.\nFrancophile(x) ::: x is a francophile.\nSpain(x) ::: x is Spain.\nFavoriteCountry(x, y) ::: x is the favorite country of y.\nStudies(x, y) ::: x studies y.\nPremises:\nLikes(benji, cheese) ⊕ Likes(benji, spain) ::: A person either likes eating cheese or is a francophile.\n¬Francophile(benji) ⊕ ¬(Francophile(benji) ∨ Spain(benji)) ::: No francophiles are people who like Spain as their favorite country.\nLikes(benji, spain) ⊕ Likes(benji, cheese) ::: A person likes Spain as their favorite country or likes eating cheese.\n¬(Studies(benji, spanish) ∧ Studies(benji, french)) ⊕ (Studies(benji, spanish) ⊕ Studies(benji, french)) ::: If Benji is neither a person who studies Spanish nor a person that studies French, then Benji is a person who studies Spanish or a person that studies French.\nConclusion:\n(Studies(benji, spanish) ⊕ Studies(benji, french)) → (Studies(benji, spanish) ∧ Studies(benji, french)) ⊕ ¬(Studies(benji, spanish) ∨ Studies(benji, french)) ::: If Benji is a person"
    ]
  },
  {
    "id": "FOLIO_train_243",
    "context": "Gasteren is village located in the province of Drenthe. Drenthe is a Dutch province. No cities are villages. The population of a village in Drenthe was 155 people.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Gasteren is a Dutch village.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nDrenthe(x) ::: x is a Dutch province.\nVillage(x) ::: x is a village.\nCity(x) ::: x is a city.\nPopulation(x, y) ::: x has a population of y.\nPremises:\nDrenthe(gasteren) ::: Gasteren is a Dutch province.\nVillage(gasteren) ::: Gasteren is a village.\nCity(x) → ¬Village(x) ::: No cities are villages.\nPopulation(gasteren, 155) ::: The population of a village in Drenthe was 155 people.\nConclusion:\nDrenthe(gasteren) ∧ Village(gasteren) ::: Gasteren is a Dutch village.\n------\nProblem:\nThe following is a list of the top 100 most popular baby names in the United States in 2013.\n1. Jacob\n2. Mason\n3. William\n4. Michael\n5. Jayden\n6. Ethan\n7. Alexander\n8. Noah\n9. Daniel\n10. Aiden\n11. Benjamin\n12. Anthony\n13. David\n14. James\n15. Christopher\n16. Matthew\n17. John\n18. Joseph\n19. Andrew\n20. Christian\n21. Samuel\n22. Elijah\n23. Joshua\n24. Nicholas\n25. Logan\n26. Lucas\n27. Ryan\n28. Caleb\n29. Joshua\n30. Owen"
    ]
  },
  {
    "id": "FOLIO_train_244",
    "context": "Gasteren is village located in the province of Drenthe. Drenthe is a Dutch province. No cities are villages. The population of a village in Drenthe was 155 people.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Gasteren is a city.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nDrenthe(x) ::: x is a Dutch province.\nVillage(x) ::: x is a village.\nCity(x) ::: x is a city.\nPopulation(x) ::: x is the population of a village.\nPremises:\nDrenthe(gasteren) ::: Gasteren is a village located in the province of Drenthe.\nDutch(gasteren) ::: Gasteren is a Dutch province.\n¬City(gasteren) ::: No cities are villages.\nPopulation(gasteren, 155) ::: The population of a village in Drenthe was 155 people.\nConclusion:\nCity(gasteren) ::: Gasteren is a city.\n------\nProblem:\nThe following is a list of the top 100 most popular baby names in the United States in 2013.\n1. Jacob\n2. Mason\n3. William\n4. Michael\n5. Jayden\n6. Ethan\n7. Alexander\n8. Noah\n9. Daniel\n10. Aiden\n11. Benjamin\n12. Anthony\n13. David\n14. James\n15. Christopher\n16. Matthew\n17. John\n18. Joseph\n19. Andrew\n20. Christian\n21. Samuel\n22. Elijah\n23. Joshua\n24. Nicholas\n25. Logan\n26. Lucas\n27. Ryan\n28. Caleb\n29. Joshua\n30. Owen\n31. Aaron\n32. Jackson"
    ]
  },
  {
    "id": "FOLIO_train_245",
    "context": "Gasteren is village located in the province of Drenthe. Drenthe is a Dutch province. No cities are villages. The population of a village in Drenthe was 155 people.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Gasteren has a population of 155.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nVillage(x) ::: x is a village.\nCity(x) ::: x is a city.\nDutch(x) ::: x is a Dutch person.\nProvince(x) ::: x is a province.\nPopulation(x) ::: x is the population of a place.\nPremises:\nVillage(gasteren) ∧ Dutch(gasteren) ∧ Province(gasteren, drenthe) ::: Gasteren is village located in the province of Drenthe.\n¬City(gasteren) ::: No cities are villages.\nPopulation(gasteren, 155) ::: The population of a village in Drenthe was 155 people.\nConclusion:\nPopulation(gasteren, 155) ::: Gasteren has a population of 155.\n------\nProblem:\nThe following is a list of the top 100 most popular baby names in the United States in 2013.\n1. Jacob\n2. Mason\n3. William\n4. Michael\n5. Jayden\n6. Ethan\n7. Alexander\n8. Noah\n9. Daniel\n10. Aiden\n11. Benjamin\n12. Anthony\n13. David\n14. James\n15. Christopher\n16. Matthew\n17. John\n18. Joseph\n19. Andrew\n20. Christian\n21. Elijah\n22. Samuel\n23. Joshua\n24. Nicholas\n25. Logan\n26. Lucas\n27. Ryan\n28. Cale"
    ]
  },
  {
    "id": "FOLIO_train_246",
    "context": "The only types of mammals that lay eggs are platypuses and echidnas. Platypuses are not hyrax. Echidnas are not hyrax. No mammals are invertebrates. All animals are either vertebrates or invertebrates. Mammals are animals. Hyraxes are mammals. Grebes lay eggs. Grebes are not platypuses and also not echidnas.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Hyraxes lay eggs.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nLayEggs(x) ::: x lays eggs.\nPlatypus(x) ::: x is a platypus.\nEchidna(x) ::: x is an echidna.\nHyrax(x) ::: x is a hyrax.\nVertebrate(x) ::: x is a vertebrate.\nInvertebrate(x) ::: x is an invertebrate.\nAnimal(x) ::: x is an animal.\nMammal(x) ::: x is a mammal.\nGrebe(x) ::: x is a grebe.\nPremises:\n∀x (Platypus(x) → LayEggs(x)) ::: The only types of mammals that lay eggs are platypuses.\n∀x (Echidna(x) → LayEggs(x)) ::: The only types of mammals that lay eggs are platypuses and echidnas.\n¬Platypus(hyrax) ∧ ¬Echidna(hyrax) ::: No mammals are invertebrates.\n∀x (Animal(x) ∨ Vertebrate(x)) ::: All animals are either vertebrates or invertebrates.\n∀x (Mammal(x) ∧ Animal(x)) ::: Mammals are animals.\nGrebe(grebe) ∧ LayEggs(grebe) ::: Grebes lay eggs.\n¬Platypus(grebe) ∧ ¬Echidna(grebe) :"
    ]
  },
  {
    "id": "FOLIO_train_247",
    "context": "The only types of mammals that lay eggs are platypuses and echidnas. Platypuses are not hyrax. Echidnas are not hyrax. No mammals are invertebrates. All animals are either vertebrates or invertebrates. Mammals are animals. Hyraxes are mammals. Grebes lay eggs. Grebes are not platypuses and also not echidnas.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Grebes are not mammals.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nLayEgg(x) ::: x lays eggs.\nPlatypus(x) ::: x is a platypus.\nEchidna(x) ::: x is an echidna.\nHyrax(x) ::: x is a hyrax.\nVertebrate(x) ::: x is a vertebrate.\nInvertebrate(x) ::: x is an invertebrate.\nMammal(x) ::: x is a mammal.\nAnimal(x) ::: x is an animal.\nGrebe(x) ::: x is a grebe.\nPremises:\n∀x (Platypus(x) → LayEgg(x)) ::: The only types of mammals that lay eggs are platypuses.\n∀x (Echidna(x) → LayEgg(x)) ::: The only types of mammals that lay eggs are platypuses and echidnas.\n¬(Platypus(x) ∧ Echidna(x)) ::: Platypuses are not echidnas.\n¬(Echidna(x) ∧ Hyrax(x)) ::: Echidnas are not hyrax.\n∀x (Animal(x) ∨ Invertebrate(x)) ::: All animals are either vertebrates or invertebrates.\n∀x (Mammal(x) ∧ Animal(x)) ::: Mammals are animals.\nHyrax(x) ∧ Mammal(x) ::: Hyraxes are mammals."
    ]
  },
  {
    "id": "FOLIO_train_248",
    "context": "The only types of mammals that lay eggs are platypuses and echidnas. Platypuses are not hyrax. Echidnas are not hyrax. No mammals are invertebrates. All animals are either vertebrates or invertebrates. Mammals are animals. Hyraxes are mammals. Grebes lay eggs. Grebes are not platypuses and also not echidnas.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Platypuses are vertebrates.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nLayEgg(x) ::: x lays eggs.\nVertebrate(x) ::: x is a vertebrate.\nInvertebrate(x) ::: x is an invertebrate.\nMammal(x) ::: x is a mammal.\nHyrax(x) ::: x is a hyrax.\nPlatypus(x) ::: x is a platypus.\nEchidna(x) ::: x is an echidna.\nGrebe(x) ::: x is a grebe.\nPremises:\n∀x (Mammal(x) → LayEgg(x)) ::: The only types of mammals that lay eggs are platypuses and echidnas.\n¬Platypus(hyrax) ∧ ¬Echidna(hyrax) ::: Platypuses are not hyrax.\n¬Echidna(hyrax) ∧ ¬Platypus(hyrax) ::: Echidnas are not hyrax.\n∀x (Animal(x) → (Vertebrate(x) ∨ Invertebrate(x))) ::: All animals are either vertebrates or invertebrates.\n∀x (Mammal(x) → Animal(x)) ::: Mammals are animals.\nHyrax(hyrax) ∧ Mammal(hyrax) ::: Hyraxes are mammals.\nGrebe(grebe) ∧ LayEgg(grebe) ::: Grebes lay eggs.\n¬Platyp"
    ]
  },
  {
    "id": "FOLIO_train_249",
    "context": "Bobby Flynn is a singer-songwriter. Bobby Flynn finished 7th while competing on Australian Idol. Australian Idol competitors are Australian citizens. The Omega Three band made a nationwide tour in 2007. Bobby Flynn is a member of The Omega Three band. Bobby Flynn was born in Queensland.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Bobby Flynn is an Australian citizen.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nAustralianCitizen(x) ::: x is an Australian citizen.\nAustralianIdolCompetitor(x) ::: x is an Australian Idol competitor.\nSingerSongwriter(x) ::: x is a singer-songwriter.\nFinished(x, y) ::: x finished in position y.\nBorn(x, y) ::: x was born in year y.\nMember(x, y) ::: x is a member of y.\nPremises:\nAustralianIdolCompetitor(bobby) ∧ SingerSongwriter(bobby) ∧ Finished(bobby, 7) ::: Bobby Flynn is a singer-songwriter. Bobby Flynn finished 7th while competing on Australian Idol.\nAustralianCitizen(australianIdolCompetitor) ::: Australian Idol competitors are Australian citizens.\nMember(omegaThree, bobby) ∧ NationwideTour(omegaThree, year2007) ::: The Omega Three band made a nationwide tour in 2007. Bobby Flynn is a member of The Omega Three band.\nBorn(bobby, year1980) ::: Bobby Flynn was born in Queensland.\nConclusion:\nAustralianCitizen(bobby) ::: Bobby Flynn is an Australian citizen.\n------\nProblem:\nThe following is a list of the top 100 songs of 2007 according to the Billboard Hot 100.\n1. Irreplaceable - Beyoncé\n2. Glamorous - Fer"
    ]
  },
  {
    "id": "FOLIO_train_250",
    "context": "Bobby Flynn is a singer-songwriter. Bobby Flynn finished 7th while competing on Australian Idol. Australian Idol competitors are Australian citizens. The Omega Three band made a nationwide tour in 2007. Bobby Flynn is a member of The Omega Three band. Bobby Flynn was born in Queensland.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Bobby Flynn flew to America in 2007.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nAustralianCitizen(x) ::: x is an Australian citizen.\nAustralianIdolCompetitor(x) ::: x is an Australian Idol competitor.\nSingerSongwriter(x) ::: x is a singer-songwriter.\nFinished(x, y) ::: x finished in position y.\nBorn(x, y) ::: x was born in year y.\nMember(x, y) ::: x is a member of y.\nTour(x, y) ::: x made a tour in year y.\nPremises:\nAustralianIdolCompetitor(bobby) ∧ SingerSongwriter(bobby) ∧ Finished(bobby, 7) ::: Bobby Flynn is a singer-songwriter who finished 7th while competing on Australian Idol.\nAustralianCitizen(bobby) ::: Bobby Flynn is an Australian citizen.\n∃y ∃x (AustralianIdolCompetitor(x) ∧ Tour(x, y)) ::: Australian Idol competitors made a nationwide tour in year y.\nMember(omegaThree, bobby) ::: Bobby Flynn is a member of The Omega Three band.\nBorn(bobby, year2007) ::: Bobby Flynn was born in year 2007.\nConclusion:\nFlew(bobby, america, year2007) ::: Bobby Flynn flew to America in 2007.\n------"
    ]
  },
  {
    "id": "FOLIO_train_251",
    "context": "Bobby Flynn is a singer-songwriter. Bobby Flynn finished 7th while competing on Australian Idol. Australian Idol competitors are Australian citizens. The Omega Three band made a nationwide tour in 2007. Bobby Flynn is a member of The Omega Three band. Bobby Flynn was born in Queensland.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Bobby Flynn was born in Queens.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nAustralianCitizen(x) ::: x is an Australian citizen.\nAustralianIdolCompetitor(x) ::: x is an Australian Idol competitor.\nSingerSongwriter(x) ::: x is a singer-songwriter.\nFinished(x, y) ::: x finished in position y.\nBorn(x, y) ::: x was born in year y.\nMember(x, y) ::: x is a member of y.\nPremises:\nAustralianIdolCompetitor(bobby) ∧ SingerSongwriter(bobby) ∧ Finished(bobby, 7) ::: Bobby Flynn is a singer-songwriter who finished 7th while competing on Australian Idol.\nAustralianCitizen(bobby) ::: Bobby Flynn is an Australian citizen.\n∃y ∃x (AustralianIdolCompetitor(x) ∧ Finished(x, y) ∧ Born(x, year2000)) ::: Australian Idol competitors are Australian citizens who were born in year 2000.\n∃y ∃x (SingerSongwriter(x) ∧ Member(x, y) ∧ NationwideTour(y)) ::: The Omega Three band made a nationwide tour in 2007.\nConclusion:\nBorn(bobby, year2000) ::: Bobby Flynn was born in year 2000.\n------\nProblem:\nThe following is a list of"
    ]
  },
  {
    "id": "FOLIO_train_252",
    "context": "All proteins are organic compounds. All enzymes are organic compounds.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? All enzymes are proteins.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nProtein(x) ::: x is a protein.\nEnzyme(x) ::: x is an enzyme.\nOrganicCompound(x) ::: x is an organic compound.\nPremises:\n∀x (Protein(x) → OrganicCompound(x)) ::: All proteins are organic compounds.\n∀x (Enzyme(x) → OrganicCompound(x)) ::: All enzymes are organic compounds.\nConclusion:\nOrganicCompound(enzyme) ::: All enzymes are organic compounds.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\n###\nPredicates:\nDependent(x) ::: x is"
    ]
  },
  {
    "id": "FOLIO_train_253",
    "context": "One American screenwriter and producer is Maggie Friedman. Maggie Friedman was the showrunner and executive producer of the lifetime television series Witches of East End. Witches of East End is a fantasy-drama series. Maggie Friedman produced and developed Eastwick. Eastwick is a series by ABC.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There is a series by ABC that was developed by the showrunner of Witches of East End.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nAmerican(x) ::: x is an American.\nScreenwriter(x) ::: x is a screenwriter.\nProducer(x) ::: x is a producer.\nShowrunner(x, y) ::: x is the showrunner of y.\nExecutiveProducer(x, y) ::: x is the executive producer of y.\nFantasyDrama(x) ::: x is a fantasy-drama series.\nPremises:\nAmerican(maggie) ∧ Producer(maggie) ∧ Showrunner(maggie, witchesOfEastEnd) ∧ ExecutiveProducer(maggie, witchesOfEastEnd) ::: One American screenwriter and producer is Maggie Friedman. Maggie Friedman was the showrunner and executive producer of the lifetime television series Witches of East End.\nFantasyDrama(witchesOfEastEnd) ::: Witches of East End is a fantasy-drama series.\n∃x (Screenwriter(x) ∧ Producer(x) ∧ Showrunner(x, y) ∧ ExecutiveProducer(x, y) ∧ FantasyDrama(y)) ::: There is a series by ABC that was developed by the showrunner of Witches of East End.\n------\nProblem:\nThe following is a list of the top 100 most popular movies of 2016. The list is sorted by the number of votes received by each movie.\n1. Rogue One: A Star Wars Story\n2. Captain America: Civil War\n3. Finding D"
    ]
  },
  {
    "id": "FOLIO_train_254",
    "context": "One American screenwriter and producer is Maggie Friedman. Maggie Friedman was the showrunner and executive producer of the lifetime television series Witches of East End. Witches of East End is a fantasy-drama series. Maggie Friedman produced and developed Eastwick. Eastwick is a series by ABC.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There isn't a series by ABC that was developed by the showrunner of Witches of East End.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nAmerican(x) ::: x is an American.\nScreenwriter(x) ::: x is a screenwriter.\nProducer(x) ::: x is a producer.\nShowrunner(x, y) ::: x is the showrunner of y.\nExecutiveProducer(x, y) ::: x is the executive producer of y.\nFantasyDrama(x) ::: x is a fantasy-drama series.\nPremises:\nAmerican(maggie) ∧ Producer(maggie) ∧ Showrunner(maggie, witchesOfEastEnd) ∧ ExecutiveProducer(maggie, witchesOfEastEnd) ::: One American screenwriter and producer is Maggie Friedman. Maggie Friedman was the showrunner and executive producer of the lifetime television series Witches of East End.\nFantasyDrama(witchesOfEastEnd) ::: Witches of East End is a fantasy-drama series.\n∃x (Screenwriter(x) ∧ Producer(x) ∧ Showrunner(x, y) ∧ ExecutiveProducer(x, y) ∧ FantasyDrama(y)) ::: There is a series by ABC that was developed by the showrunner of Witches of East End.\nConclusion:\n¬∃x (Screenwriter(x) ∧ Producer(x) ∧ Showrunner(x, y) ∧ ExecutiveProducer(x, y) ∧ FantasyDrama(y)) ::: There isn't a series by ABC that was developed by the showrunner of W"
    ]
  },
  {
    "id": "FOLIO_train_255",
    "context": "One American screenwriter and producer is Maggie Friedman. Maggie Friedman was the showrunner and executive producer of the lifetime television series Witches of East End. Witches of East End is a fantasy-drama series. Maggie Friedman produced and developed Eastwick. Eastwick is a series by ABC.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Maggie Friedman developed Witches of East End.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nAmerican(x) ::: x is an American.\nScreenwriter(x) ::: x is a screenwriter.\nProducer(x) ::: x is a producer.\nShowrunner(x) ::: x is a showrunner.\nExecutiveProducer(x) ::: x is an executive producer.\nFantasyDrama(x) ::: x is a fantasy-drama.\nPremises:\nAmerican(maggie) ∧ Producer(maggie) ∧ Showrunner(maggie) ∧ ExecutiveProducer(maggie) ::: One American screenwriter and producer is Maggie Friedman.\nAmerican(maggie) ∧ Producer(maggie) ∧ Showrunner(maggie) ∧ ExecutiveProducer(maggie) ∧ FantasyDrama(witchesOfEastEnd) ::: Maggie Friedman was the showrunner and executive producer of the lifetime television series Witches of East End.\nAmerican(maggie) ∧ Producer(maggie) ∧ Showrunner(maggie) ∧ ExecutiveProducer(maggie) ∧ FantasyDrama(eastwick) ::: Maggie Friedman produced and developed Eastwick.\nConclusion:\nDeveloped(maggie, witchesOfEastEnd) ::: Maggie Friedman developed Witches of East End.\n------\nProblem:\nThe following is a list of the top 100 most popular movies of 2015. The list is sorted by the number of votes received by each movie.\n1. Star Wars: The Force Awakens (201"
    ]
  },
  {
    "id": "FOLIO_train_256",
    "context": "Evangelos Eleftheriou is a Greek electrical engineer. Evangelos Eleftheriou worked for IBM in Zurich. If a company has employees working for them somewhere, then they have an office there. IBM is a company.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? IBM has an office in London or Zurich.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nGreek(x) ::: x is a Greek person.\nElectricalEngineer(x) ::: x is an electrical engineer.\nWork(x, y) ::: x works for y.\nCompany(x) ::: x is a company.\nOffice(x, y) ::: x is an office in city y.\nPremises:\nGreek(evangelos) ∧ ElectricalEngineer(evangelos) ∧ Work(evangelos, ibm) ∧ Company(ibm) ::: Evangelos Eleftheriou is a Greek electrical engineer. Evangelos Eleftheriou worked for IBM in Zurich.\nCompany(ibm) ∧ Office(ibm, london) ∨ Office(ibm, zurich) ::: If a company has employees working for them somewhere, then they have an office there. IBM is a company.\nConclusion:\nOffice(ibm, london) ∨ Office(ibm, zurich) ::: IBM has an office in London or Zurich.\n------\nProblem:\nThe following is a list of the top 100 most popular baby names in the United States in 2013.\n1. Jacob\n2. Mason\n3. William\n4. Michael\n5. Jayden\n6. Ethan\n7. Alexander\n8. Noah\n9. Daniel\n10. Aiden\n11. Benjamin\n12. Anthony\n13. David\n14. James\n15. Matthew\n16. Christopher\n17. John\n18. Joseph\n19. Andrew\n20"
    ]
  },
  {
    "id": "FOLIO_train_257",
    "context": "Evangelos Eleftheriou is a Greek electrical engineer. Evangelos Eleftheriou worked for IBM in Zurich. If a company has employees working for them somewhere, then they have an office there. IBM is a company.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? No Greeks have worked for IBM.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nGreek(x) ::: x is a Greek.\nElectricalEngineer(x) ::: x is an electrical engineer.\nWork(x, y) ::: x works for y.\nCompany(x) ::: x is a company.\nOffice(x, y) ::: x has an office in y.\nPremises:\nGreek(evangelos) ∧ ElectricalEngineer(evangelos) ::: Evangelos Eleftheriou is a Greek electrical engineer.\nWork(evangelos, ibm) ::: Evangelos Eleftheriou worked for IBM.\nCompany(ibm) ::: IBM is a company.\nConclusion:\nOffice(ibm, zurich) ::: If a company has employees working for them somewhere, then they have an office there.\n------\nProblem:\nThe following is a list of the top 100 most popular baby names in the United States in 2013.\n1. Jacob\n2. Mason\n3. William\n4. Michael\n5. Jayden\n6. Ethan\n7. Alexander\n8. Noah\n9. Daniel\n10. Aiden\n11. Benjamin\n12. Anthony\n13. David\n14. James\n15. Matthew\n16. Christopher\n17. John\n18. Joseph\n19. Andrew\n20. Christian\n21. Elijah\n22. Samuel\n23. Joshua\n24. Nicholas\n25. Logan\n26. Ryan\n27. Lucas\n28. Caleb"
    ]
  },
  {
    "id": "FOLIO_train_258",
    "context": "Before releasing their single, \"Hooray! Hooray! It's a Holi-Holiday!\", Boney M. had had seven consecutive German #1 singles. \"Hooray! Hooray! It's a Holi-Holiday!\" was a big hit all over Europe. Nevertheless, \"Hooray! Hooray! It's a Holi-Holiday!\" broke Boney M's streak of consecutive German #1 singles. A song that peaks below #1 on the german charts is also a song that is not the #1 single",
    "question": "Based on the above information, is the following statement true, false, or uncertain? \"Hooray! Hooray! It's a Holi-Holiday!\" was a #1 hit in Germany.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nGerman(x) ::: x is a German #1 single.\nHit(x) ::: x is a hit.\nPeak(x, y) ::: x peaks at position y on the charts.\nConsecutive(x, y) ::: x is the yth consecutive element of a sequence.\nPremises:\nGerman(HoorayHoorayItsAHoliHoliday) ∧ Peak(HoorayHoorayItsAHoliHoliday, 1) ::: \"Hooray! Hooray! It's a Holi-Holiday!\" was a #1 hit in Germany.\nGerman(HoorayHoorayItsAHoliHoliday) ∧ Peak(HoorayHoorayItsAHoliHoliday, 1) ∧ Not(Consecutive(HoorayHoorayItsAHoliHoliday, German(HoorayHoorayItsAHoliHoliday))) ::: \"Hooray! Hooray! It's a Holi-Holiday!\" broke Boney M's streak of consecutive German #1 singles.\nConclusion:\nNot(German(HoorayHoorayItsAHoliHoliday)) ::: \"Hooray! Hooray! It's a Holi-Holiday!\" was not a #1 hit in Germany.\n------\nProblem:\nThe following is a list of the top 100 songs of 1999 according to the Billboard Hot"
    ]
  },
  {
    "id": "FOLIO_train_259",
    "context": "Before releasing their single, \"Hooray! Hooray! It's a Holi-Holiday!\", Boney M. had had seven consecutive German #1 singles. \"Hooray! Hooray! It's a Holi-Holiday!\" was a big hit all over Europe. Nevertheless, \"Hooray! Hooray! It's a Holi-Holiday!\" broke Boney M's streak of consecutive German #1 singles. A song that peaks below #1 on the german charts is also a song that is not the #1 single",
    "question": "Based on the above information, is the following statement true, false, or uncertain? \"Hooray! Hooray! It's a Holi-Holiday!\" peaked below #1 on the German charts.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGerman(x) ::: x is a German single.\nPeak(x, y) ::: x peaked at position y on the German charts.\nHit(x) ::: x is a hit.\nConsecutive(x, y) ::: x is the yth consecutive element of a sequence.\nBreak(x, y) ::: x breaks y.\nPremises:\n∀x (German(x) → Peak(x, 1)) ::: Before releasing their single, \"Hooray! Hooray! It's a Holi-Holiday!\", Boney M. had had seven consecutive German #1 singles.\nPeak(hoorayHoorayItsAHoliHoliday, 1) ::: \"Hooray! Hooray! It's a Holi-Holiday!\" was a big hit all over Europe.\nBreak(hoorayHoorayItsAHoliHoliday, consecutiveGerman1s) ::: Nevertheless, \"Hooray! Hooray! It's a Holi-Holiday!\" broke Boney M's streak of consecutive German #1 singles.\nConclusion:\nPeak(hoorayHoorayItsAHoliHoliday, 2) ::: \"Hooray! Hooray! It's a Holi-Holiday!\" peaked below #1 on the German charts.\n------\nProblem:\nThe following is a list of the top 100 songs of 1999 according to the Billboard Hot"
    ]
  },
  {
    "id": "FOLIO_train_260",
    "context": "Before releasing their single, \"Hooray! Hooray! It's a Holi-Holiday!\", Boney M. had had seven consecutive German #1 singles. \"Hooray! Hooray! It's a Holi-Holiday!\" was a big hit all over Europe. Nevertheless, \"Hooray! Hooray! It's a Holi-Holiday!\" broke Boney M's streak of consecutive German #1 singles. A song that peaks below #1 on the german charts is also a song that is not the #1 single",
    "question": "Based on the above information, is the following statement true, false, or uncertain? \"Hooray! Hooray! It's a Holi-Holiday!\" peaked at #3 on the UK charts.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nGerman(x) ::: x is a German single.\nHit(x) ::: x is a hit.\nPeak(x, y) ::: x peaked at position y on the charts.\nConsecutive(x, y) ::: x is the yth consecutive element of a sequence.\nPremises:\nGerman(hoorayHoorayItsAHoliHoliday) ∧ Hit(hoorayHoorayItsAHoliHoliday) ∧ Peak(hoorayHoorayItsAHoliHoliday, 3) ::: \"Hooray! Hooray! It's a Holi-Holiday!\" peaked at #3 on the UK charts.\n∀x (German(x) → Hit(x)) ::: Before releasing their single, \"Hooray! Hooray! It's a Holi-Holiday!\", Boney M. had had seven consecutive German #1 singles.\n∃x (German(x) ∧ Peak(x, 1)) ::: \"Hooray! Hooray! It's a Holi-Holiday!\" was a big hit all over Europe.\n¬Peak(hoorayHoorayItsAHoliHoliday, 1) ::: Nevertheless, \"Hooray! Hooray! It's a Holi-Holiday!\" broke Boney M's streak of consecutive German #1 singles.\nConclusion:\nPeak(hoorayHoorayItsAHoliHoliday, 3) ::: \"Hooray! Hooray! It's a Holi-Holiday!\" peaked at #3 on the UK charts.\n------"
    ]
  },
  {
    "id": "FOLIO_train_261",
    "context": "Every chef can cook. Some people who aren’t chefs can cook. People who cook can make scrambled eggs and pasta. If someone can make cookies and muffins, they are a baker. Bakers who can also make scrambled eggs can make a good breakfast. Luke can make cookies, scrambled eggs, and muffins, but not pasta.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Luke can make a good breakfast.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nChef(x) ::: x is a chef.\nCanCook(x) ::: x can cook.\nPasta(x) ::: x is pasta.\nScrambledEggs(x) ::: x is scrambled eggs.\nMuffins(x) ::: x is muffins.\nCookies(x) ::: x is cookies.\nBaker(x) ::: x is a baker.\nCanMake(x, y) ::: x can make y.\nGoodBreakfast(x) ::: x is a good breakfast.\nPremises:\n∀x (Chef(x) → CanCook(x)) ::: Every chef can cook.\n∃x (CanCook(x) ∧ ¬Chef(x)) ::: Some people who aren’t chefs can cook.\n∀x (CanCook(x) → Cooks(x)) ::: People who cook can make scrambled eggs and pasta.\nCanMake(luke, cookies) ∧ CanMake(luke, muffins) ∧ CanMake(luke, scrambledEggs) ::: Luke can make cookies, scrambled eggs, and muffins, but not pasta.\nCanMake(luke, scrambledEggs) ∧ CanMake(luke, muffins) ∧ Baker(luke) ::: Luke can make scrambled eggs and muffins, and is a baker.\nCanMake(luke, scrambledEggs) ∧ Baker(luke) ::: Luke can make scrambled eggs and is a baker.\nCanMake(luke, muffins) ∧ Baker(luke) ::: Luke can make muffins and is a baker"
    ]
  },
  {
    "id": "FOLIO_train_262",
    "context": "Every chef can cook. Some people who aren’t chefs can cook. People who cook can make scrambled eggs and pasta. If someone can make cookies and muffins, they are a baker. Bakers who can also make scrambled eggs can make a good breakfast. Luke can make cookies, scrambled eggs, and muffins, but not pasta.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Luke is a chef.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nChef(x) ::: x is a chef.\nCanCook(x) ::: x can cook.\nPasta(x) ::: x is pasta.\nScrambledEggs(x) ::: x is scrambled eggs.\nMuffins(x) ::: x is muffins.\nCookies(x) ::: x is cookies.\nBaker(x) ::: x is a baker.\nCanMake(x, y) ::: x can make y.\nGoodBreakfast(x) ::: x is a good breakfast.\nPremises:\n∀x (Chef(x) → CanCook(x)) ::: Every chef can cook.\n∃x (CanCook(x) ∧ ¬Chef(x)) ::: Some people who aren’t chefs can cook.\n∀x (CanCook(x) → Cooks(x)) ::: People who cook can make scrambled eggs and pasta.\nCanMake(muffins, scrambledEggs) ∧ CanMake(muffins, pasta) ∧ CanMake(cookies, scrambledEggs) ∧ CanMake(cookies, pasta) ∧ CanMake(muffins, cookies) ::: If someone can make cookies and muffins, they are a baker.\nCanMake(scrambledEggs, muffins) ∧ CanMake(scrambledEggs, cookies) ∧ CanMake(scrambledEggs, pasta) ∧ CanMake(muffins, pasta) ∧ CanMake(cookies, pasta) ::: Bakers who can also make scrambled eggs can make a good breakfast.\nCanMake(scrambledEggs,"
    ]
  },
  {
    "id": "FOLIO_train_263",
    "context": "ETS develops various standardized tests primarily in the United States for K-12 and higher education. ETS administers international tests including the TOEFL, TOEIC, GRE and subject tests in more than 180 countries. Many of the assessments ETS develops are associated with entry to the US tertiary and quaternary education institutions. ETS also develops K-12 statewide assessments used for accountability testing in many states.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? ETS develops assessments for K-12 statewide as well as entry to US tertiary and quaternary education institutions.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nDevelops(x, y) ::: x develops y.\nAdministers(x, y) ::: x administers y.\nAssociatedWith(x, y) ::: x is associated with y.\nEntry(x) ::: x is entry.\nAccountability(x) ::: x is accountability.\nPremises:\nDevelops(ets, toefl) ::: ETS develops TOEFL.\nDevelops(ets, toeic) ::: ETS develops TOEIC.\nDevelops(ets, gre) ::: ETS develops GRE.\nDevelops(ets, subjectTests) ::: ETS develops subject tests.\nDevelops(ets, k12StatewideAssessments) ::: ETS develops K-12 statewide assessments.\nAdministers(ets, toefl) ::: ETS administers TOEFL.\nAdministers(ets, toeic) ::: ETS administers TOEIC.\nAdministers(ets, gre) ::: ETS administers GRE.\nAdministers(ets, subjectTests) ::: ETS administers subject tests.\nAdministers(ets, k12StatewideAssessments) ::: ETS administers K-12 statewide assessments.\nAssociatedWith(ets, entry) ::: ETS is associated with entry.\nAssociatedWith(ets, quaternary) ::: ETS is associated with quaternary.\nAssociatedWith(ets, tertiary) ::: ETS is associated with tertiary.\nAssociatedWith(ets, k12) ::: ETS is associated with K-12.\nAssociatedWith(ets, accountability) :"
    ]
  },
  {
    "id": "FOLIO_train_264",
    "context": "ETS develops various standardized tests primarily in the United States for K-12 and higher education. ETS administers international tests including the TOEFL, TOEIC, GRE and subject tests in more than 180 countries. Many of the assessments ETS develops are associated with entry to the US tertiary and quaternary education institutions. ETS also develops K-12 statewide assessments used for accountability testing in many states.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? ETS doesn't administer tests internationally.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nAdminister(x, y) ::: x administers y.\nDevelop(x, y) ::: x develops y.\nTest(x) ::: x is a test.\nInternational(x) ::: x is international.\nK12(x) ::: x is K-12.\nTertiary(x) ::: x is tertiary.\nQuaternary(x) ::: x is quaternary.\nPremises:\nAdminister(ets, toefl) ∧ Administer(ets, toiec) ∧ Administer(ets, gre) ∧ Administer(ets, subjectTest) ::: ETS administers TOEFL, TOEIC, GRE and subject tests.\nDevelop(ets, toefl) ∧ Develop(ets, toiec) ∧ Develop(ets, gre) ∧ Develop(ets, subjectTest) ::: ETS develops TOEFL, TOEIC, GRE and subject tests.\nDevelop(ets, k12StatewideAssessment) ∧ Develop(ets, k12StatewideAssessment) ∧ Develop(ets, k12StatewideAssessment) ::: ETS develops K-12 statewide assessments.\nDevelop(ets, k12StatewideAssessment) ∧ Develop(ets, k12StatewideAssessment) ∧ Develop(ets, k12StatewideAssessment) ::: ETS develops K-12 statewide assessments.\nDevelop(ets, k12StatewideAssessment) ∧ Develop(ets, k12StatewideAssessment) ∧ Develop(ets, k12StatewideAssessment) ::: ETS develops K-12 state"
    ]
  },
  {
    "id": "FOLIO_train_265",
    "context": "ETS develops various standardized tests primarily in the United States for K-12 and higher education. ETS administers international tests including the TOEFL, TOEIC, GRE and subject tests in more than 180 countries. Many of the assessments ETS develops are associated with entry to the US tertiary and quaternary education institutions. ETS also develops K-12 statewide assessments used for accountability testing in many states.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? ETS administers international tests including the TOEFL, GRE and subject tests in China.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nAdministers(x, y) ::: x administers y.\nDevelops(x, y) ::: x develops y.\nAssociatedWith(x, y) ::: x is associated with y.\nEntry(x, y) ::: x is associated with y.\nAccountability(x, y) ::: x is associated with y.\nPremises:\nAdministers(ets, toefl) ∧ Administers(ets, toeic) ∧ Administers(ets, gre) ∧ Administers(ets, subjectTests) ::: ETS develops various standardized tests primarily in the United States for K-12 and higher education. ETS administers international tests including the TOEFL, TOEIC, GRE and subject tests in more than 180 countries. Many of the assessments ETS develops are associated with entry to the US tertiary and quaternary education institutions. ETS also develops K-12 statewide assessments used for accountability testing in many states.\nAdministers(ets, china) ::: ETS administers international tests including the TOEFL, GRE and subject tests in China.\nConclusion:\nTrue\n------\nProblem:\nThe United States is a federal republic of 50 states, a federal district, five major self-governing territories, and various possessions. The 48 contiguous states and Washington, D.C., are in central North America between Canada and Mexico. The state of Alaska is in the northwestern part of North America and the state of Hawaii is an archipelago in the mid-Pacific. The territories are scattered about the Pacific Ocean and the Caribbean Sea. At 3.8 million square miles and with"
    ]
  },
  {
    "id": "FOLIO_train_266",
    "context": "All people who enjoy eating gelato ice cream would enjoy a vacation to Italy. There are no people who can resist the hallmark delectable drinks and desserts that are famed in Italy. People either enjoy eating gelato ice cream or love to travel and vacation often. If people often take study abroad semesters to Europe, then they do not regret their college experiences. If people love to travel and vacation often, then they often take study abroad semesters to Europe. Robert either enjoys eating gelato ice cream and loves to travel and vacation often, or he neither enjoys eating gelato ice cream nor loves to travel and vacation often.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Robert can resist the hallmark delectable drinks and desserts that are famed in Italy.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nEnjoy(x, y) ::: x enjoys y.\nLove(x, y) ::: x loves y.\nVacation(x, y) ::: x vacations in y.\nResist(x, y) ::: x can resist y.\nStudyAbroad(x, y) ::: x takes a study abroad semester in y.\nRegret(x, y) ::: x regrets y.\nPremises:\n∀x (Enjoy(x, gelatoIceCream) → Vacation(x, Italy)) ::: All people who enjoy eating gelato ice cream would enjoy a vacation to Italy.\n∀x (Resist(x, hallmarkDelectableDrinksAndDesserts) → ¬Enjoy(x, hallmarkDelectableDrinksAndDesserts)) ::: There are no people who can resist the hallmark delectable drinks and desserts that are famed in Italy.\n∀x (Love(x, travelAndVacation) → Enjoy(x, gelatoIceCream)) ::: People either enjoy eating gelato ice cream or love to travel and vacation often.\n∀x (StudyAbroad(x, Europe) → ¬Regret(x, collegeExperiences)) ::: If people often take study abroad semesters to Europe, then they do not regret their college experiences.\n∀x (Love(x, travelAndVacation) → StudyAbroad(x, Europe)) ::: If people love to travel and vacation often, then they often take study abroad semesters to Europe.\nConclusion:\nResist(robert, hallmarkDelectableDrinksAndDesserts"
    ]
  },
  {
    "id": "FOLIO_train_267",
    "context": "All people who enjoy eating gelato ice cream would enjoy a vacation to Italy. There are no people who can resist the hallmark delectable drinks and desserts that are famed in Italy. People either enjoy eating gelato ice cream or love to travel and vacation often. If people often take study abroad semesters to Europe, then they do not regret their college experiences. If people love to travel and vacation often, then they often take study abroad semesters to Europe. Robert either enjoys eating gelato ice cream and loves to travel and vacation often, or he neither enjoys eating gelato ice cream nor loves to travel and vacation often.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Robert either would both enjoy a vacation to Italy and regrets his college experiences or neither would enjoy a vacation to Italy nor regrets his college experiences, then Robert would either enjoy a vacation to Italy or, if not, then he can resist the hallmark delectable drinks and desserts that are famed in Italy.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEnjoy(x, y) ::: x enjoys y.\nLove(x, y) ::: x loves y.\nVacation(x, y) ::: x vacations in y.\nRegret(x, y) ::: x regrets y.\nStudyAbroadSemester(x, y) ::: x takes a study abroad semester in year y.\nEurope(x) ::: x is in Europe.\nPremises:\n∀x (Enjoy(x, gelatoIceCream) → Vacation(x, Italy)) ::: All people who enjoy eating gelato ice cream would enjoy a vacation to Italy.\n∀x (Love(x, delectableDrinksAndDesserts) → Vacation(x, Italy)) ::: There are no people who can resist the hallmark delectable drinks and desserts that are famed in Italy.\n∀x (Enjoy(x, gelatoIceCream) ⊕ Love(x, travelAndVacationOften)) ::: People either enjoy eating gelato ice cream or love to travel and vacation often.\n∀x (StudyAbroadSemester(x, Europe) → ¬Regret(x, collegeExperiences)) ::: If people often take study abroad semesters to Europe, then they do not regret their college experiences.\n∀x (Love(x, travelAndVacationOften) → StudyAbroadSemester(x, Europe)) ::: If people love to travel and vacation often, then they often take study abroad semesters to Europe.\nConclusion:\nVacation(r, Italy) ⊕ Regret(r, collegeExperiences) ::: If Robert either"
    ]
  },
  {
    "id": "FOLIO_train_268",
    "context": "All people who enjoy eating gelato ice cream would enjoy a vacation to Italy. There are no people who can resist the hallmark delectable drinks and desserts that are famed in Italy. People either enjoy eating gelato ice cream or love to travel and vacation often. If people often take study abroad semesters to Europe, then they do not regret their college experiences. If people love to travel and vacation often, then they often take study abroad semesters to Europe. Robert either enjoys eating gelato ice cream and loves to travel and vacation often, or he neither enjoys eating gelato ice cream nor loves to travel and vacation often.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Robert is not both a person who can resist the hallmark delectable drinks and desserts that are famed in Italy and regrets his college experiences, then Robert either enjoys eating gelato ice cream or would enjoy a vacation to Italy.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nEnjoy(x, y) ::: x enjoys y.\nLove(x, y) ::: x loves y.\nRegret(x, y) ::: x regrets y.\nVacation(x, y) ::: x vacations in y.\nStudyAbroadSemester(x, y) ::: x takes a study abroad semester in y.\nPremises:\n∀x (Enjoy(x, gelatoIceCream) → Vacation(x, Italy)) ::: All people who enjoy eating gelato ice cream would enjoy a vacation to Italy.\n∀x (Love(x, delectableDrinksAndDesserts) → Vacation(x, Italy)) ::: There are no people who can resist the hallmark delectable drinks and desserts that are famed in Italy.\n∀x (Enjoy(x, gelatoIceCream) ⊕ Love(x, travelAndVacationOften)) ::: People either enjoy eating gelato ice cream or love to travel and vacation often.\n∀x (StudyAbroadSemester(x, Europe) → ¬Regret(x, collegeExperiences)) ::: If people often take study abroad semesters to Europe, then they do not regret their college experiences.\n∀x (Love(x, travelAndVacationOften) → StudyAbroadSemester(x, Europe)) ::: If people love to travel and vacation often, then they often take study abroad semesters to Europe.\nConclusion:\nVacation(r, Italy) ⊕ StudyAbroadSemester(r, Europe) ::: If Robert is not both a person who can resist the hallmark delectable"
    ]
  },
  {
    "id": "FOLIO_train_269",
    "context": "To get a student visa, you must be full-time enrolled in an academic program. Those who are full-time enrolled in an academic program can not work full-time. Everyone who wants to study abroad needs to have a student visa. All PhD graduates can work full time. If Tom does not want to study abroad, he is full-time enrolled in an educational program.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tom is a PhD graduate.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nStudentVisa(x) ::: x is a student visa.\nFullTimeEnrolled(x) ::: x is full-time enrolled in an academic program.\nWorkFullTime(x) ::: x works full time.\nStudyAbroad(x) ::: x studies abroad.\nPhDGraduate(x) ::: x is a PhD graduate.\nPremises:\nStudentVisa(x) → ¬WorkFullTime(x) ::: To get a student visa, you must be full-time enrolled in an academic program. Those who are full-time enrolled in an academic program can not work full-time.\nStudentVisa(x) → StudyAbroad(x) ::: Everyone who wants to study abroad needs to have a student visa.\nPhDGraduate(x) → WorkFullTime(x) ::: All PhD graduates can work full time.\nFullTimeEnrolled(x) → ¬StudyAbroad(x) ::: If Tom does not want to study abroad, he is full-time enrolled in an educational program.\nConclusion:\nPhDGraduate(tom) ::: Tom is a PhD graduate.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent"
    ]
  },
  {
    "id": "FOLIO_train_270",
    "context": "To get a student visa, you must be full-time enrolled in an academic program. Those who are full-time enrolled in an academic program can not work full-time. Everyone who wants to study abroad needs to have a student visa. All PhD graduates can work full time. If Tom does not want to study abroad, he is full-time enrolled in an educational program.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tom is not a PhD graduate.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nStudentVisa(x) ::: x is a student visa.\nFullTimeEnrolled(x) ::: x is full-time enrolled in an academic program.\nWorkFullTime(x) ::: x works full time.\nStudyAbroad(x) ::: x wants to study abroad.\nPhDGraduate(x) ::: x is a PhD graduate.\nPremises:\nStudentVisa(x) → ¬WorkFullTime(x) ::: To get a student visa, you must be full-time enrolled in an academic program. Those who are full-time enrolled in an academic program can not work full-time.\nStudentVisa(x) → StudyAbroad(x) ::: Everyone who wants to study abroad needs to have a student visa.\nPhDGraduate(x) → WorkFullTime(x) ::: All PhD graduates can work full time.\nFullTimeEnrolled(x) → ¬StudyAbroad(x) ::: If Tom does not want to study abroad, he is full-time enrolled in an educational program.\nConclusion:\n¬PhDGraduate(tom) ::: Tom is not a PhD graduate.\n------"
    ]
  },
  {
    "id": "FOLIO_train_271",
    "context": "To get a student visa, you must be full-time enrolled in an academic program. Those who are full-time enrolled in an academic program can not work full-time. Everyone who wants to study abroad needs to have a student visa. All PhD graduates can work full time. If Tom does not want to study abroad, he is full-time enrolled in an educational program.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tom wants to study abroad.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nStudentVisa(x) ::: x is a student visa.\nFullTimeEnrolled(x) ::: x is full-time enrolled in an academic program.\nWorkFullTime(x) ::: x works full time.\nStudyAbroad(x) ::: x wants to study abroad.\nPhDGraduate(x) ::: x is a PhD graduate.\nPremises:\nStudentVisa(x) → ¬WorkFullTime(x) ::: To get a student visa, you must be full-time enrolled in an academic program.\nFullTimeEnrolled(x) → ¬WorkFullTime(x) ::: Those who are full-time enrolled in an academic program can not work full time.\nStudyAbroad(x) → StudentVisa(x) ::: Everyone who wants to study abroad needs to have a student visa.\nPhDGraduate(x) → WorkFullTime(x) ::: All PhD graduates can work full time.\n¬FullTimeEnrolled(x) → ¬StudyAbroad(x) ::: If Tom does not want to study abroad, he is full-time enrolled in an educational program.\nConclusion:\nSt"
    ]
  },
  {
    "id": "FOLIO_train_272",
    "context": "The installment sales method is the approach to recognize revenue under the US GAAP. In accrual accounting, revenues are recognized when they are realized. In cash accounting, revenues are recognized when cash is received. The US GAAP is the accounting standard developed and used by the US Securities and Exchange Commission. Sally works for the US Securities and Exchange Commission.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Sally's company utilizes the installment sales method.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nUSGAAP(x) ::: x is the US GAAP.\nInstallmentSalesMethod(x) ::: x is the installment sales method.\nAccrualAccounting(x) ::: x is accrual accounting.\nCashAccounting(x) ::: x is cash accounting.\nRevenue(x) ::: x is revenue.\nRecognize(x, y) ::: x recognizes y.\nRealize(x, y) ::: x realizes y.\nReceive(x, y) ::: x receives y.\nPremises:\nUSGAAP(usGAAP) ∧ InstallmentSalesMethod(installmentSalesMethod) ::: The US GAAP is the accounting standard developed and used by the US Securities and Exchange Commission. The installment sales method is the approach to recognize revenue under the US GAAP.\nUSGAAP(usGAAP) ∧ AccrualAccounting(accrualAccounting) ::: The US GAAP is the accounting standard developed and used by the US Securities and Exchange Commission. Accrual accounting is the approach to recognize revenue when it is realized.\nUSGAAP(usGAAP) ∧ Cash"
    ]
  },
  {
    "id": "FOLIO_train_273",
    "context": "The installment sales method is the approach to recognize revenue under the US GAAP. In accrual accounting, revenues are recognized when they are realized. In cash accounting, revenues are recognized when cash is received. The US GAAP is the accounting standard developed and used by the US Securities and Exchange Commission. Sally works for the US Securities and Exchange Commission.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The company Sally works for performs accrual accounting.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nInstallmentSalesMethod(x) ::: x is the installment sales method.\nAccrualAccounting(x) ::: x is accrual accounting.\nCashAccounting(x) ::: x is cash accounting.\nUSGAAP(x) ::: x is the US GAAP.\nSecuritiesAndExchangeCommission(x) ::: x is the Securities and Exchange Commission.\nPremises:\nInstallmentSalesMethod(usGAAP) ::: The installment sales method is the approach to recognize revenue under the US GAAP.\nAccrualAccounting(usGAAP) ::: In accrual accounting, revenues are recognized when they are realized.\nCashAccounting(usGAAP) ::: In cash accounting, revenues are recognized when cash is received.\nSecuritiesAndExchangeCommission(sally) ::: Sally works for the US Securities and Exchange Commission.\nConclusion:\nAccrualAccounting(sally) ::: The company Sally works for performs accrual accounting.\n------\nProblem:\nThe US GAAP is the accounting standard developed and used by the US Securities and Exchange Commission. The install"
    ]
  },
  {
    "id": "FOLIO_train_274",
    "context": "The installment sales method is the approach to recognize revenue under the US GAAP. In accrual accounting, revenues are recognized when they are realized. In cash accounting, revenues are recognized when cash is received. The US GAAP is the accounting standard developed and used by the US Securities and Exchange Commission. Sally works for the US Securities and Exchange Commission.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Sally does not work for a company that uses the GAAP.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nWorksFor(x, y) ::: x works for y.\nGAAP(x) ::: x is the GAAP.\nUS(x) ::: x is the US.\nSecuritiesAndExchangeCommission(x) ::: x is the Securities and Exchange Commission.\nInstallmentSalesMethod(x) ::: x is the installment sales method.\nAccrualAccounting(x) ::: x is accrual accounting.\nCashAccounting(x) ::: x is cash accounting.\nPremises:\nWorksFor(sally, usSecuritiesAndExchangeCommission) ::: Sally works for the US Securities and Exchange Commission.\nGAAP(usGAAP) ::: The US GAAP is the accounting standard developed and used by the US Securities and Exchange Commission.\nUS(us) ::: The US is the US.\nSecuritiesAndExchangeCommission(usSecuritiesAndExchangeCommission) ::: The US Securities and Exchange Commission is the Securities and Exchange Commission.\nInstallmentSalesMethod(usGAAP) ::: The US GAAP is the installment sales method.\nAccrualAccounting(us"
    ]
  },
  {
    "id": "FOLIO_train_275",
    "context": "All people who are respected by others are people who contribute to the country. If a person is respected by others, then he/she contributes to the country. All people available to have a visit without any fees are those respected by others. All Customers who once served in the army are available to have a visit without any fees. All people who once were sentenced for thief stayed in prison for some time. All people who once stayed in prison for some time have a bad record in the local state. James was either once sentenced for thief or stayed in prison for some time. James is either with a bad record in the local state or respected by others.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James contributes to the country.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nRespect(x) ::: x is respected by others.\nContribute(x) ::: x contributes to the country.\nAvailable(x) ::: x is available to have a visit without any fees.\nCustomer(x) ::: x is a customer.\nServed(x, y) ::: x served in the army in year y.\nSentence(x, y) ::: x was sentenced for thief in year y.\nStayed(x, y) ::: x stayed in prison for some time in year y.\nBadRecord(x) ::: x has a bad record in the local state.\nPremises:\n∀x (Respect(x) → Contribute(x)) ::: If a person is respected by others, then he/she contributes to the country.\n∀x (Customer(x) → Available(x)) ::: All people available to have a visit without any fees are those respected by others.\n∀x (Served(x, year1) → Available(x)) ::: All Customers who once served in the army are available to have a visit without any fees.\n∀x (Stayed(x, year1) → BadRecord(x)) :::"
    ]
  },
  {
    "id": "FOLIO_train_276",
    "context": "All people who are respected by others are people who contribute to the country. If a person is respected by others, then he/she contributes to the country. All people available to have a visit without any fees are those respected by others. All Customers who once served in the army are available to have a visit without any fees. All people who once were sentenced for thief stayed in prison for some time. All people who once stayed in prison for some time have a bad record in the local state. James was either once sentenced for thief or stayed in prison for some time. James is either with a bad record in the local state or respected by others.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James does not contribute to the country.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nRespect(x) ::: x is respected by others.\nContribute(x) ::: x contributes to the country.\nAvailable(x) ::: x is available to have a visit without any fees.\nCustomer(x) ::: x is a customer.\nServed(x, y) ::: x served in the army in year y.\nSentence(x, y) ::: x was sentenced for thief in year y.\nStayed(x, y) ::: x stayed in prison for some time in year y.\nBadRecord(x) ::: x has a bad record in the local state.\nPremises:\n∀x (Respect(x) → Contribute(x)) ::: If a person is respected by others, then he/she contributes to the country.\n∀x (Customer(x) → Available(x)) ::: All people available to have a visit without any fees are those respected by others.\n∀x (Served(x, year1) → Available(x)) ::: All Customers who once served in the army are available to have a visit without any fees.\n∀x (Stayed(x, year1) → BadRecord(x)) :::"
    ]
  },
  {
    "id": "FOLIO_train_277",
    "context": "All people who are respected by others are people who contribute to the country. If a person is respected by others, then he/she contributes to the country. All people available to have a visit without any fees are those respected by others. All Customers who once served in the army are available to have a visit without any fees. All people who once were sentenced for thief stayed in prison for some time. All people who once stayed in prison for some time have a bad record in the local state. James was either once sentenced for thief or stayed in prison for some time. James is either with a bad record in the local state or respected by others.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James contributes to the country, and he once served in the army.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRespect(x) ::: x is respected by others.\nContribute(x) ::: x contributes to the country.\nAvailable(x) ::: x is available to have a visit without any fees.\nCustomer(x) ::: x is a customer.\nServed(x, y) ::: x served in the army in year y.\nSentenced(x, y) ::: x was sentenced for thief in year y.\nStayed(x, y) ::: x stayed in prison for some time in year y.\nBadRecord(x) ::: x has a bad record in the local state.\nPremises:\n∀x (Respect(x) → Contribute(x)) ::: If a person is respected by others, then he/she contributes to the country.\n∀x (Contribute(x) → Available(x)) ::: All people who contribute to the country are available to have a visit without any fees.\n∀x (Customer(x) → Served(x, year1945)) ::: All Customers who once served in the army served in the army in year 1945.\n∀x (Sentenced(x, year1945) → St"
    ]
  },
  {
    "id": "FOLIO_train_278",
    "context": "All people who are respected by others are people who contribute to the country. If a person is respected by others, then he/she contributes to the country. All people available to have a visit without any fees are those respected by others. All Customers who once served in the army are available to have a visit without any fees. All people who once were sentenced for thief stayed in prison for some time. All people who once stayed in prison for some time have a bad record in the local state. James was either once sentenced for thief or stayed in prison for some time. James is either with a bad record in the local state or respected by others.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James did not contribute to the country and did not serve in the army.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRespect(x) ::: x is respected by others.\nContribute(x) ::: x contributes to the country.\nAvailable(x) ::: x is available to have a visit without any fees.\nCustomer(x) ::: x is a customer.\nServe(x, y) ::: x served in the army in year y.\nSentence(x, y) ::: x was sentenced for thief in year y.\nStay(x, y) ::: x stayed in prison for some time in year y.\nBadRecord(x) ::: x has a bad record in the local state.\nPremises:\n∀x (Respect(x) → Contribute(x)) ::: If a person is respected by others, then he/she contributes to the country.\n∀x (Respect(x) → Available(x)) ::: All people who are respected by others are people who contribute to the country.\n∀x (Customer(x) → Available(x)) ::: All people available to have a visit without any fees are those respected by others.\n∀x (Serve(x, year1) → Customer(x)) ::: All Customers who once served in the army are available"
    ]
  },
  {
    "id": "FOLIO_train_279",
    "context": "The Croton River watershed is the drainage basin of the Croton River. The Croton River is in southwestern New York. Water from the Croton River watershed flows to the Bronx. The Bronx is in New York.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Water from the Croton River watershed flows to somewhere in New York.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nCrotonRiverWatershed(x) ::: x is the drainage basin of the Croton River.\nCrotonRiver(x) ::: x is the Croton River.\nBronx(x) ::: x is the Bronx.\nNewYork(x) ::: x is New York.\nPremises:\nCrotonRiverWatershed(crotonRiverWatershed) ∧ CrotonRiver(crotonRiver) ∧ Bronx(bronx) ∧ NewYork(newYork) ::: The Croton River watershed is the drainage basin of the Croton River. The Croton River is in southwestern New York. Water from the Croton River watershed flows to the Bronx. The Bronx is in New York.\nConclusion:\nWater(crotonRiverWatershed, newYork) ::: Water from the Croton River watershed flows to somewhere in New York.\n------\nProblem:\nThe Croton River watershed is the drainage basin of the Croton River. The Croton River is in southwestern New York. Water from the Croton River watershed flows to the Bronx. The Bronx is in New York."
    ]
  },
  {
    "id": "FOLIO_train_280",
    "context": "The Croton River watershed is the drainage basin of the Croton River. The Croton River is in southwestern New York. Water from the Croton River watershed flows to the Bronx. The Bronx is in New York.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Croton River watershed is in the Bronx.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nCrotonRiverWatershed(x) ::: x is the drainage basin of the Croton River.\nCrotonRiver(x) ::: x is the Croton River.\nBronx(x) ::: x is the Bronx.\nWater(x, y) ::: x is water that flows to y.\nPremises:\nCrotonRiverWatershed(crotonRiverWatershed) ∧ CrotonRiver(crotonRiver) ∧ Water(crotonRiver, bronx) ::: The Croton River watershed is the drainage basin of the Croton River. The Croton River is in southwestern New York. Water from the Croton River watershed flows to the Bronx. The Bronx is in New York.\nConclusion:\nBronx(crotonRiverWatershed) ::: The Croton River watershed is in the Bronx.\n------"
    ]
  },
  {
    "id": "FOLIO_train_281",
    "context": "The Croton River watershed is the drainage basin of the Croton River. The Croton River is in southwestern New York. Water from the Croton River watershed flows to the Bronx. The Bronx is in New York.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Water from the Croton River flows to the Bronx.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nCrotonRiverWatershed(x) ::: x is the drainage basin of the Croton River.\nCrotonRiver(x) ::: x is the Croton River.\nBronx(x) ::: x is the Bronx.\nWater(x, y) ::: x is water that flows to y.\nPremises:\nCrotonRiverWatershed(crotonRiverWatershed) ∧ CrotonRiver(crotonRiver) ∧ Bronx(bronx) ∧ Water(crotonRiver, bronx) ::: The Croton River watershed is the drainage basin of the Croton River. The Croton River is in southwestern New York. Water from the Croton River watershed flows to the Bronx. The Bronx is in New York.\nConclusion:\nWater(crotonRiver, bronx) ::: Water from the Croton River"
    ]
  },
  {
    "id": "FOLIO_train_282",
    "context": "All nuclear-powered submarines are warships. No nuclear-powered submarines are commercial vessels.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Some warships are commercial vessels.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nNuclearPoweredSubmarine(x) ::: x is a nuclear-powered submarine.\nWarship(x) ::: x is a warship.\nCommercialVessel(x) ::: x is a commercial vessel.\nPremises:\n∀x (NuclearPoweredSubmarine(x) → Warship(x)) ::: All nuclear-powered submarines are warships.\n¬∃x (NuclearPoweredSubmarine(x) ∧ CommercialVessel(x)) ::: No nuclear-powered submarines are commercial vessels.\nConclusion:\n∃x (Warship(x) ∧ CommercialVessel(x)) ::: Some warships are commercial vessels.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted"
    ]
  },
  {
    "id": "FOLIO_train_283",
    "context": "If a album is written by a rock band, then the genre of the album is rock. If a band writes a album winning an award, then this band wins this award. Trouble at the Henhouse is an album by The Tragically Hip. The Tragically Hip is a Canadian rock band. The song \"Butts Wigglin'\" is in Trouble at the Henhouse. Trouble at the Henhouse won the Album of the Year award. A song in Trouble at the Henhouse appeared in a film.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The genre of Trouble at the Henhouse is rock.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nRock(x) ::: x is a rock band.\nAward(x) ::: x is an award.\nAlbum(x) ::: x is an album.\nWins(x, y) ::: x wins y.\nGenre(x, y) ::: x is the genre of y.\nPremises:\nAlbum(TroubleAtTheHenhouse) ∧ Rock(TheTragicallyHip) ∧ Genre(TroubleAtTheHenhouse, rock) ::: Trouble at the Henhouse is an album by The Tragically Hip.\nWins(TroubleAtTheHenhouse, AlbumOfTheYear) ∧ Rock(TheTragicallyHip) ∧ Genre(TroubleAtTheHenhouse, rock) ::: Trouble at the Henhouse won the Album of the Year award.\nSong(ButtsWigglin') ∧ Album(TroubleAtTheHenhouse) ∧ Genre"
    ]
  },
  {
    "id": "FOLIO_train_284",
    "context": "If a album is written by a rock band, then the genre of the album is rock. If a band writes a album winning an award, then this band wins this award. Trouble at the Henhouse is an album by The Tragically Hip. The Tragically Hip is a Canadian rock band. The song \"Butts Wigglin'\" is in Trouble at the Henhouse. Trouble at the Henhouse won the Album of the Year award. A song in Trouble at the Henhouse appeared in a film.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A canada rock band didn't win the Album of the Year award.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRockBand(x) ::: x is a rock band.\nAlbum(x) ::: x is an album.\nGenre(x, y) ::: x is of genre y.\nAward(x) ::: x is an award.\nWin(x, y) ::: x wins y.\nPremises:\nAlbum(troubleAtTheHenhouse) ∧ RockBand(tragicallyHip) ∧ Genre(troubleAtTheHenhouse, rock) ::: Trouble at the Henhouse is an album by The Tragically Hip.\nWin(troubleAtTheHenhouse, albumOfTheYear) ∧ RockBand(tragicallyHip) ::: Trouble at the Henhouse won the Album of the Year award.\nAward(albumOfTheYear) ::: The Album of the Year award is an award.\nSong(buttsWigglin') ∧ Album(troubleAtThe"
    ]
  },
  {
    "id": "FOLIO_train_285",
    "context": "If a album is written by a rock band, then the genre of the album is rock. If a band writes a album winning an award, then this band wins this award. Trouble at the Henhouse is an album by The Tragically Hip. The Tragically Hip is a Canadian rock band. The song \"Butts Wigglin'\" is in Trouble at the Henhouse. Trouble at the Henhouse won the Album of the Year award. A song in Trouble at the Henhouse appeared in a film.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? \"Butts Wigglin'\" appeared in a film.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nRock(x) ::: x is a rock band.\nAward(x) ::: x is an award.\nAlbum(x) ::: x is an album.\nWins(x, y) ::: x wins y.\nGenre(x, y) ::: x is the genre of y.\nPremises:\nAlbum(TroubleAtTheHenhouse) ∧ Genre(TroubleAtTheHenhouse, rock) ::: Trouble at the Henhouse is an album by The Tragically Hip.\nWins(TroubleAtTheHenhouse, AlbumOfTheYear) ::: Trouble at the Henhouse won the Album of the Year award.\nRock(TheTragicallyHip) ::: The Tragically Hip is a Canadian rock band.\nSong(ButtsWigglin', TroubleAtTheHenhouse) ::: The song \"Butts Wigglin'\" is in Trouble at the Henhouse"
    ]
  },
  {
    "id": "FOLIO_train_286",
    "context": "Daniel is a software engineer and he works at Palantir Technologies. Daniel studied bioengineering during his undergraduate at Rice University. Daniel’s older sister works at Meta as a technical sourcer. Daniel’s dad and older sister both graduated from Stanford University. Daniel’s dad is a doctor practicing internal medicine at a veteran’s hospital in Minneapolis",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Daniel once applied to Stanford University, but he couldn’t get in even though he has family members who are Stanford alumni.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nSoftwareEngineer(x) ::: x is a software engineer.\nWorksAt(x, y) ::: x works at y.\nStudied(x, y) ::: x studied y during his undergraduate.\nGraduated(x, y) ::: x graduated from y.\nTechnicalSourcer(x) ::: x is a technical sourcer.\nFamilyMember(x, y) ::: x is a family member of y.\nAlumni(x, y) ::: x is an alumni of y.\nPremises:\nSoftwareEngineer(daniel) ∧ WorksAt(daniel, palantirTechnologies) ∧ Studied(daniel, bioengineering) ∧ Graduated(daniel, riceUniversity) ::: Daniel is a software engineer and he works at Palantir Technologies. Daniel studied bioengineering during his undergraduate at Rice University."
    ]
  },
  {
    "id": "FOLIO_train_287",
    "context": "Daniel is a software engineer and he works at Palantir Technologies. Daniel studied bioengineering during his undergraduate at Rice University. Daniel’s older sister works at Meta as a technical sourcer. Daniel’s dad and older sister both graduated from Stanford University. Daniel’s dad is a doctor practicing internal medicine at a veteran’s hospital in Minneapolis",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Daniel studied bioengineering as his major at Rice University.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nSoftwareEngineer(x) ::: x is a software engineer.\nWorksAt(x, y) ::: x works at y.\nStudied(x, y) ::: x studied y as his/her major.\nBioengineering(y) ::: y is bioengineering.\nRiceUniversity(x) ::: x is Rice University.\nUndergraduate(x, y) ::: x is a undergraduate at y.\nMeta(x) ::: x is Meta.\nTechnicalSourcer(x) ::: x is a technical sourcer.\nStanfordUniversity(x) ::: x is Stanford University.\nDoctor(x) ::: x is a doctor.\nPractice(x, y) ::: x practices y.\nInternalMedicine(y) ::: y is internal medicine.\nVeteranHospital(x) ::: x is a veteran hospital."
    ]
  },
  {
    "id": "FOLIO_train_288",
    "context": "Daniel is a software engineer and he works at Palantir Technologies. Daniel studied bioengineering during his undergraduate at Rice University. Daniel’s older sister works at Meta as a technical sourcer. Daniel’s dad and older sister both graduated from Stanford University. Daniel’s dad is a doctor practicing internal medicine at a veteran’s hospital in Minneapolis",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Daniel and his sister grew up in Minneapolis, Minnesota.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nSoftwareEngineer(x) ::: x is a software engineer.\nWorksAt(x, y) ::: x works at y.\nStudied(x, y) ::: x studied y during undergraduate.\nBioengineering(y) ::: y is bioengineering.\nRiceUniversity(x) ::: x is Rice University.\nTechnicalSourcer(x) ::: x is a technical sourcer.\nMeta(x) ::: x is Meta.\nStanfordUniversity(x) ::: x is Stanford University.\nVeteranHospital(x) ::: x is a veteran’s hospital.\nInternalMedicine(x) ::: x is internal medicine.\nPremises:\nSoftwareEngineer(daniel) ∧ WorksAt(daniel, palantirTechnologies) ∧ Studied(daniel, bioengineering) ∧ RiceUniversity"
    ]
  },
  {
    "id": "FOLIO_train_289",
    "context": "All commerical aircraft are produced by either Boeing or Airbus. All American Airlines jets are commerical aircraft. Airbus made more in revenue than Boeing last year.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? An American Airlines plane is either a Boeing or Airbus plane.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nCommercialAircraft(x) ::: x is a commerical aircraft.\nBoeing(x) ::: x is a Boeing plane.\nAirbus(x) ::: x is an Airbus plane.\nAmericanAirlinesJet(x) ::: x is an American Airlines jet.\nRevenue(x, y) ::: x made more in revenue than y.\nPremises:\n∀x (CommercialAircraft(x) → (Boeing(x) ∨ Airbus(x))) ::: All commerical aircraft are produced by either Boeing or Airbus.\n∀x (AmericanAirlinesJet(x) → CommercialAircraft(x)) ::: All American Airlines jets are commerical aircraft.\nRevenue(Airbus, Boeing) ::: Airbus made more in revenue than Boeing last year.\nConclusion:\nBoeing(x) ∨ Airbus(x"
    ]
  },
  {
    "id": "FOLIO_train_290",
    "context": "All commerical aircraft are produced by either Boeing or Airbus. All American Airlines jets are commerical aircraft. Airbus made more in revenue than Boeing last year.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There exists a SpaceX commerical aircraft.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nCommericalAircraft(x) ::: x is a commerical aircraft.\nAmericanAirlinesJet(x) ::: x is an American Airlines jet.\nBoeing(x) ::: x is a Boeing.\nAirbus(x) ::: x is an Airbus.\nRevenue(x, y) ::: x made more in revenue than y.\nPremises:\n∀x (CommericalAircraft(x) → (Boeing(x) ∨ Airbus(x))) ::: All commerical aircraft are produced by either Boeing or Airbus.\nAmericanAirlinesJet(x) ⇒ CommericalAircraft(x) ::: All American Airlines jets are commerical aircraft.\nRevenue(Airbus, Boeing) ::: Airbus made more in revenue than Boeing last year.\nConclusion:\n∃x (CommericalAircraft(x) ∧ SpaceX(x)) ::: There exists a SpaceX commerical aircraft.\n------"
    ]
  },
  {
    "id": "FOLIO_train_291",
    "context": "All commerical aircraft are produced by either Boeing or Airbus. All American Airlines jets are commerical aircraft. Airbus made more in revenue than Boeing last year.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There does not exist a United Airlines plane produced by Boeing.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nCommercialAircraft(x) ::: x is a commerical aircraft.\nBoeing(x) ::: x is a Boeing plane.\nAirbus(x) ::: x is an Airbus plane.\nAmericanAirlinesJet(x) ::: x is an American Airlines jet.\nRevenue(x, y) ::: x made more in revenue than y.\nPremises:\n∀x (CommercialAircraft(x) → (Boeing(x) ∨ Airbus(x))) ::: All commerical aircraft are produced by either Boeing or Airbus.\nAmericanAirlinesJet(plane) ∧ CommercialAircraft(plane) ::: All American Airlines jets are commerical aircraft.\nRevenue(airbus, boeing) ::: Airbus made more in revenue than Boeing last year.\nConclusion:\n¬∃x (AmericanAirlinesJet(x) ∧ Boeing(x)) ::: There does not exist a United Airlines plane"
    ]
  },
  {
    "id": "FOLIO_train_292",
    "context": "All commerical aircraft are produced by either Boeing or Airbus. All American Airlines jets are commerical aircraft. Airbus made more in revenue than Boeing last year.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There is a commercial plane made by both Airbus and Boeing.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nCommercialAircraft(x) ::: x is a commerical aircraft.\nBoeing(x) ::: x is a Boeing plane.\nAirbus(x) ::: x is an Airbus plane.\nAmericanAirlinesJet(x) ::: x is an American Airlines jet.\nRevenue(x, y) ::: x made more in revenue than y.\nPremises:\n∀x (CommercialAircraft(x) → (Boeing(x) ∨ Airbus(x))) ::: All commerical aircraft are produced by either Boeing or Airbus.\nAmericanAirlinesJet(plane) ∧ CommercialAircraft(plane) ::: All American Airlines jets are commerical aircraft.\nRevenue(airbus, boeing) ::: Airbus made more in revenue than Boeing last year.\nConclusion:\n∃x (CommercialAircraft(x) ∧ (Boeing(x) ∧ Airbus(x))) ::: There"
    ]
  },
  {
    "id": "FOLIO_train_293",
    "context": "Luzon is an island in the Philippines. In December 1999, an earthquake struck Luzon. People died in the December 1999 earthquake in Luzon.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Leyte is an island in the Philippines.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nLuzon(x) ::: x is an island in the Philippines.\nLeyte(x) ::: x is an island in the Philippines.\nDied(x) ::: x died.\nEarthquake(x) ::: x is an earthquake.\nPremises:\nLuzon(luzon) ∧ Earthquake(earthquake) ∧ Died(died) ::: Luzon is an island in the Philippines. In December 1999, an earthquake struck Luzon. People died in the December 1999 earthquake in Luzon.\nConclusion:\nLeyte(leyte) ::: Leyte is an island in the Philippines.\n------\nProblem:\nThe following is a list of the top 100 most popular baby names in the United States in 2009.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The name Jacob was not in the top 10"
    ]
  },
  {
    "id": "FOLIO_train_294",
    "context": "Luzon is an island in the Philippines. In December 1999, an earthquake struck Luzon. People died in the December 1999 earthquake in Luzon.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? No one has ever died of an earthquake that struck in the Philippines.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nLuzon(x) ::: x is an island in the Philippines.\nEarthquake(x) ::: x is an earthquake.\nDied(x) ::: x died.\nPremises:\nLuzon(luzon) ∧ Earthquake(earthquake) ∧ Died(died) ::: Luzon is an island in the Philippines. In December 1999, an earthquake struck Luzon. People died in the December 1999 earthquake in Luzon.\nConclusion:\n¬Died(earthquake) ::: No one has ever died of an earthquake that struck in the Philippines.\n------\nProblem:\nThe following is a list of the top 100 most popular baby names in the United States in 2009.\n1. Jacob\n2. Isabella\n3. Ethan\n4. Michael\n5. Emily\n6. Ava\n7. Matthew\n8. Abigail\n9."
    ]
  },
  {
    "id": "FOLIO_train_295",
    "context": "Luzon is an island in the Philippines. In December 1999, an earthquake struck Luzon. People died in the December 1999 earthquake in Luzon.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? In 1999, there was at least one earthquake in the Philippines.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nLuzon(x) ::: x is an island in the Philippines.\nEarthquake(x) ::: x is an earthquake.\nDeath(x) ::: x is a death.\nPremises:\nLuzon(luzon) ∧ Earthquake(earthquake) ∧ Death(death) ::: Luzon is an island in the Philippines. In December 1999, an earthquake struck Luzon. People died in the December 1999 earthquake in Luzon.\nConclusion:\nEarthquake(earthquake) ∧ Death(death) ::: In 1999, there was at least one earthquake in the Philippines.\n------\nProblem:\nThe following is a list of the top 100 most popular baby names in the United States in 2009.\n1. Jacob\n2. Isabella\n3. Ethan\n4. Michael\n5. Emily\n6. Ava"
    ]
  },
  {
    "id": "FOLIO_train_296",
    "context": "People either invest in the public stock market regularly or enjoy gambling regularly. If people invest in the public stock market regularly, then they read the Wall Street Journal and other newspapers regularly to keep updated on financial metrics. All people who enjoy gambling regularly spend a lot of money at casinos and other betting games. People who spend a lot of money at casinos and other betting games visit the Las Vegas Strip regularly. People who spend a lot of money at casinos and other betting games have a lot of disposable income to spend. If Matt invests in the public stock market regularly, then Matt neither has a lot of disposable income to spend nor invests in the public stock market regularly.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Matt reads the Wall Street Journal and other newspapers regularly to keep updated on financial metrics.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nInvest(x, y) ::: x invests in y.\nEnjoy(x, y) ::: x enjoys y.\nRead(x, y) ::: x reads y.\nKeepUpdated(x, y) ::: x keeps updated on y.\nSpend(x, y) ::: x spends y.\nVisit(x, y) ::: x visits y.\nDisposableIncome(x) ::: x has a lot of disposable income to spend.\nPremises:\n∀x (Invest(x, publicStockMarket) → Read(x, WallStreetJournal)) ::: If people invest in the public stock market regularly, then they read the Wall Street Journal and other newspapers regularly to keep updated on financial metrics.\n∀x (Enjoy(x, gambling) → Spend(x, casino)) ::: All people who enjoy gambling regularly spend a lot of money at casinos and other betting games.\n∀x (Sp"
    ]
  },
  {
    "id": "FOLIO_train_297",
    "context": "People either invest in the public stock market regularly or enjoy gambling regularly. If people invest in the public stock market regularly, then they read the Wall Street Journal and other newspapers regularly to keep updated on financial metrics. All people who enjoy gambling regularly spend a lot of money at casinos and other betting games. People who spend a lot of money at casinos and other betting games visit the Las Vegas Strip regularly. People who spend a lot of money at casinos and other betting games have a lot of disposable income to spend. If Matt invests in the public stock market regularly, then Matt neither has a lot of disposable income to spend nor invests in the public stock market regularly.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Matt is either both a person who has a lot of disposable income to spend and invests in the public stock market regularly, or neither has a lot of disposable income to spend nor invests in the public stock market regularly, then Matt neither visits the Las Vegas Strip regularly nor reads the Wall Street Journal and other newspapers regularly to keep updated on the financial metrics.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nInvest(x, y) ::: x invests in y.\nEnjoy(x, y) ::: x enjoys y.\nSpend(x, y) ::: x spends y on y.\nVisit(x, y) ::: x visits y.\nDisposableIncome(x) ::: x has a lot of disposable income to spend.\nPremises:\n∀x (Invest(x, publicStockMarket) → Read(x, wsj)) ::: If people invest in the public stock market regularly, then they read the Wall Street Journal and other newspapers regularly to keep updated on financial metrics.\n∀x (Enjoy(x, gambling) → Spend(x, casino)) ::: All people who enjoy gambling regularly spend a lot of money at casinos and other betting games.\n∀x (Spend(x, casino) → Visit(x, lasVegasStrip)) ::: People who spend a lot of money at casinos"
    ]
  },
  {
    "id": "FOLIO_train_298",
    "context": "People either invest in the public stock market regularly or enjoy gambling regularly. If people invest in the public stock market regularly, then they read the Wall Street Journal and other newspapers regularly to keep updated on financial metrics. All people who enjoy gambling regularly spend a lot of money at casinos and other betting games. People who spend a lot of money at casinos and other betting games visit the Las Vegas Strip regularly. People who spend a lot of money at casinos and other betting games have a lot of disposable income to spend. If Matt invests in the public stock market regularly, then Matt neither has a lot of disposable income to spend nor invests in the public stock market regularly.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Matt is either a person who has a lot of disposable income to spend or reads the Wall Street Journal and other newspapers regularly, then Matt neither has a lot of disposable income to spend nor visits the Las Vegas Strip Regularly.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nInvest(x, y) ::: x invests in y.\nEnjoy(x, y) ::: x enjoys y.\nSpend(x, y) ::: x spends y.\nVisit(x, y) ::: x visits y.\nDisposableIncome(x) ::: x has a lot of disposable income to spend.\nPremises:\n∀x (Invest(x, publicStockMarket) → Read(x, WallStreetJournal)) ::: If people invest in the public stock market regularly, then they read the Wall Street Journal and other newspapers regularly to keep updated on financial metrics.\n∀x (Enjoy(x, gambling) → Spend(x, casino)) ::: All people who enjoy gambling regularly spend a lot of money at casinos and other betting games.\n∀x (Spend(x, casino) → Visit(x, LasVegasStrip)) ::: People who spend a lot of money at"
    ]
  },
  {
    "id": "FOLIO_train_299",
    "context": "All students learning piano can strike the right notes. All students who can strike the right note can get the rhythms right. If a student can get the rhythms right, he will start working on coordination between the left and the right hands. Some students who start working on coordination between the left and the right hands become good at it. The other students find it challenging. If John can strike the right notes, get the rhythms right and is good at coordination between right and left hands, then he puts emotions into his playing. John is a student learning piano. John does not find coordination between the left and the right hands challenging.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? John can get the rhythms right.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nStudent(x) ::: x is a student.\nCanStrike(x, y) ::: x can strike y.\nCanGet(x, y) ::: x can get y.\nStart(x, y) ::: x starts y.\nGood(x, y) ::: x is good at y.\nChallenging(x, y) ::: x is challenging at y.\nPremises:\n∀x (Student(x) → CanStrike(x, piano)) ::: All students learning piano can strike the right notes.\n∀x (CanStrike(x, piano) → CanGet(x, rhythms)) ::: All students who can strike the right note can get the rhythms right.\n∃x (CanGet(x, rhythms) → Start(x, coordination)) ::: If a student can get the rhythms right, he will start working on coordination between the left and the right hands.\n∃x (Start(x, coordination) → Good(x,"
    ]
  },
  {
    "id": "FOLIO_train_300",
    "context": "All students learning piano can strike the right notes. All students who can strike the right note can get the rhythms right. If a student can get the rhythms right, he will start working on coordination between the left and the right hands. Some students who start working on coordination between the left and the right hands become good at it. The other students find it challenging. If John can strike the right notes, get the rhythms right and is good at coordination between right and left hands, then he puts emotions into his playing. John is a student learning piano. John does not find coordination between the left and the right hands challenging.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? John does not put emotions into his playing.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nStudent(x) ::: x is a student.\nCanStrike(x, y) ::: x can strike y.\nCanGet(x, y) ::: x can get y.\nStartWorking(x, y) ::: x starts working on y.\nGoodAt(x, y) ::: x is good at y.\nChallenging(x, y) ::: x is challenging y.\nPremises:\n∀x (Student(x) → CanStrike(x, piano)) ::: All students learning piano can strike the right notes.\n∀x (CanStrike(x, piano) → CanGet(x, rhythms)) ::: All students who can strike the right note can get the rhythms right.\n∀x (CanGet(x, rhythms) → StartWorking(x, coordination)) ::: If a student can get the rhythms right, he will start working on coordination between the left and the right hands.\n∃x (StartWorking(x, coordination) → GoodAt(x, coordination)) ::: Some students who start working on coordination between the left and the right hands become good at it.\n¬∃x (StartWorking(x, coordination) → Challenging(x, coordination)) ::: The other students find it challenging.\nStudent(john) ∧ CanStrike(john, piano) ∧ CanGet(john, rhythms) ∧ StartWorking(john, coordination) ∧ GoodAt(john, coordination) ::: John is a student learning piano. John does not find coordination between the left and the right hands challenging.\nConclusion:\nGoodAt(john, coordination) ∧ Challenging(john, coordination) ::: John does not put emotions into his playing.\n------"
    ]
  },
  {
    "id": "FOLIO_train_301",
    "context": "Barbara Ann Marshall is a former swimmer and former world record-holder. Barbara Ann Marshall participated in the 1972 Summer Olympics. Barbara Ann Marshall's home country is the United States. All people who compete in the 1972 Summer Olympics represent their home country. Barbara Ann Marshall participated in the preliminary heat in the freestyle relay. Barbara Ann Marshall did not participate in the event final of the 1972 Summer Olympics freestyle relay. Only relay swimmers who participated in the event final received medals.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Barbara Ann Marshall did not receive medals.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Olympics(x) ::: x is an Olympics.\nSwimmer(x) ::: x is a swimmer.\nWorldRecordHolder(x) ::: x is a world record-holder.\nParticipate(x, y) ::: x participates in y.\nRepresent(x, y) ::: x represents y.\nHomeCountry(x) ::: x is the home country of x.\nCompete(x, y) ::: x competes in y.\nPreliminaryHeat(x, y) ::: x participates in the preliminary heat of y.\nEventFinal(x, y) ::: x participates in the event final of y.\nReceive(x, y) ::: x receives y.\nPremises:\nOlympics(barbaraAnnMarshall) ∧ Swimmer(barbaraAnnMarshall) ∧ WorldRecordHolder(barbaraAnnMarshall) ::: Barbara Ann Marshall is a former swimmer and former world record-holder.\nOlympics(1972SummerOlympics) ∧ HomeCountry(barbaraAnnMarshall, UnitedStates) ∧ Compete(barbaraAnnMarshall, 1972SummerOlympics) ::: Barbara Ann Marshall participated in the 1972 Summer Olympics.\n∀x (Compete(x, y) → Represent(x, y)) ::: All people who compete in the y represent their home country.\nParticipate(barbaraAnnMarshall, preliminaryHeatOf1972SummerOlympicsFreestyleRelay) ∧ Participate(barbaraAnnMarshall, eventFinalOf1972SummerOlympicsFreestyleRelay) ::: Barbara Ann Marshall participated in the preliminary heat in the freestyle relay. Barbara"
    ]
  },
  {
    "id": "FOLIO_train_302",
    "context": "Barbara Ann Marshall is a former swimmer and former world record-holder. Barbara Ann Marshall participated in the 1972 Summer Olympics. Barbara Ann Marshall's home country is the United States. All people who compete in the 1972 Summer Olympics represent their home country. Barbara Ann Marshall participated in the preliminary heat in the freestyle relay. Barbara Ann Marshall did not participate in the event final of the 1972 Summer Olympics freestyle relay. Only relay swimmers who participated in the event final received medals.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Barbara Ann Marshall represented the United States in the 1972 Summer Olympics.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Olympics(x) ::: x is an Olympics.\nSwimmer(x) ::: x is a swimmer.\nWorldRecordHolder(x) ::: x is a world record-holder.\nParticipate(x, y) ::: x participates in y.\nRepresent(x, y) ::: x represents y.\nHomeCountry(x) ::: x is the home country of x.\nPremises:\nOlympics(barbaraAnnMarshall) ∧ Swimmer(barbaraAnnMarshall) ∧ WorldRecordHolder(barbaraAnnMarshall) ::: Barbara Ann Marshall is a former swimmer and former world record-holder.\nOlympics(1972SummerOlympics) ∧ HomeCountry(barbaraAnnMarshall, unitedStates) ::: Barbara Ann Marshall's home country is the United States.\n∀x (Olympics(x) → Represent(x, x'sHomeCountry)) ::: All people who compete in the Olympics represent their home country.\nParticipate(barbaraAnnMarshall, 1972SummerOlympics) ∧ Participate(barbaraAnnMarshall, freestyleRelay) ∧ Participate(barbaraAnnMarshall, preliminaryHeat) ∧ Participate(barbaraAnnMarshall, eventFinal) ::: Barbara Ann Marshall participated in the 1972 Summer Olympics.\nParticipate(barbaraAnnMarshall, freestyleRelay) ∧ Participate(barbaraAnnMarshall, preliminaryHeat) ∧ Participate(barbaraAnnMarshall, eventFinal) ∧ Participate(barbaraAnnMarshall, freestyleRelay) ∧ Participate(barbaraAn"
    ]
  },
  {
    "id": "FOLIO_train_303",
    "context": "A game is played with three stages: red stage, yellow stage, and green stage. Each player begins at the red stage. All players must reach the yellow stage before they can reach the green stage. The yellow stage comes after the red stage. All players must proceed one stage at a time.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? It is possible to move to the green stage without ever reaching the yellow stage.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nStage(x) ::: x is a stage.\nRed(x) ::: x is the red stage.\nYellow(x) ::: x is the yellow stage.\nGreen(x) ::: x is the green stage.\nReach(x, y) ::: x reaches y.\nPremises:\n∀x (Stage(x) → ∃y (Stage(y) ∧ Reach(x, y))) ::: All players must reach the yellow stage before they can reach the green stage.\nYellow(yellowStage) ∧ Red(redStage) ∧ Green(greenStage) ::: The yellow stage comes after the red stage.\n∀x (Stage(x) → ∃y (Stage(y) ∧ Reach(x, y))) ::: All players must proceed one stage at a time.\nConclusion:\nReach(greenStage, yellowStage) ::: It is possible to move to the green stage without ever reaching the yellow stage.\n------\nProblem:\nAlice is a student. Bob is a teacher. Bob is a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Bob is a teacher.\n###\nPredicates:\nStudent(x) ::: x is a student.\nTeacher(x) ::: x is a teacher.\nPremises:\nStudent(alice) ∧ Teacher(bob) ::: Alice is a student. Bob is a teacher.\nConclusion:\nTeacher(bob) ::: Bob is a teacher.\n------\nProblem:\nAlice is a student. Bob is a teacher. Bob is a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Alice is a teacher.\n###\nPredicates:\nStudent(x) :"
    ]
  },
  {
    "id": "FOLIO_train_304",
    "context": "A game is played with three stages: red stage, yellow stage, and green stage. Each player begins at the red stage. All players must reach the yellow stage before they can reach the green stage. The yellow stage comes after the red stage. All players must proceed one stage at a time.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? It is possible to reach the yellow stage without ever reaching the green stage.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nReach(x, y) ::: x reaches y.\nStage(x) ::: x is a stage.\nRed(x) ::: x is the red stage.\nYellow(x) ::: x is the yellow stage.\nGreen(x) ::: x is the green stage.\nPremises:\n∀x (Stage(x) → ∃y (Reach(x, y))) ::: All players must reach the yellow stage before they can reach the green stage.\n∃x (Stage(x) ∧ Red(x)) ::: There is a red stage.\n∃x (Stage(x) ∧ Yellow(x)) ::: There is a yellow stage.\n∃x (Stage(x) ∧ Green(x)) ::: There is a green stage.\n∃x (Stage(x) ∧ Red(x) ∧ Yellow(x)) ::: There is a red stage and a yellow stage.\n∃x (Stage(x) ∧ Red(x) ∧ Green(x)) ::: There is a red stage and a green stage.\n∃x (Stage(x) ∧ Yellow(x) ∧ Green(x)) ::: There is a yellow stage and a green stage.\nConclusion:\n∃x (Stage(x) ∧ Red(x) ∧ Yellow(x) ∧ Green(x)) ::: There is a red stage, a yellow stage, and a green stage.\n------\nProblem:\nAlice is a student. Bob is a teacher. Bob is a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Bob is a teacher.\n###\nPredicates:\nStudent(x) ::: x is a student.\nTeacher(x) ::: x is a teacher.\nPremises:\nStudent("
    ]
  },
  {
    "id": "FOLIO_train_305",
    "context": "A game is played with three stages: red stage, yellow stage, and green stage. Each player begins at the red stage. All players must reach the yellow stage before they can reach the green stage. The yellow stage comes after the red stage. All players must proceed one stage at a time.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? It is possible to complete the game without ever reaching the green stage.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nPlay(x) ::: x is a player.\nStage(x) ::: x is a stage.\nRed(x) ::: x is the red stage.\nYellow(x) ::: x is the yellow stage.\nGreen(x) ::: x is the green stage.\nPremises:\n∀x (Play(x) → Stage(x)) ::: All players must reach the yellow stage before they can reach the green stage.\nRed(redStage) ∧ Yellow(yellowStage) ∧ Green(greenStage) ::: The yellow stage comes after the red stage.\n∀x (Stage(x) → Play(x)) ::: All players must proceed one stage at a time.\nConclusion:\nIt is possible to complete the game without ever reaching the green stage.\n------\nProblem:\nAlice is a student. Bob is a teacher. Bob is a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Bob is a teacher.\n###\nPredicates:\nStudent(x) ::: x is a student.\nTeacher(x) ::: x is a teacher.\nPremises:\nStudent(alice) ∧ Teacher(bob) ::: Alice is a student. Bob is a teacher.\nStudent(bob) ::: Bob is a student.\nConclusion:\nBob is a teacher.\n------\nProblem:\nAlice is a student. Bob is a teacher. Bob is a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Alice is a teacher.\n###\nPredicates:\nStudent(x) ::: x is a student.\nTeacher(x) ::: x is a teacher.\nPremises:\nStudent(alice) ∧ Teacher(b"
    ]
  },
  {
    "id": "FOLIO_train_306",
    "context": "People either value physical touch as an especially important love language or value words of affirmation as an especially important love language. If a person values physical touch as an especially important love language, then they are good with pets. No people that are good with pets are scared of animals. People are either scared of animals or love animals. Adam is either a person who values physical touch as an especially important love language or a person who loves animals.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Adam is scared of animals.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nValue(x, y) ::: x values y as an especially important love language.\nGoodWith(x, y) ::: x is good with y.\nScaredOf(x, y) ::: x is scared of y.\nLove(x, y) ::: x loves y.\nPremises:\n∀x (Value(x, physicalTouch) → GoodWith(x, pets)) ::: If a person values physical touch as an especially important love language, then they are good with pets.\n¬∀x (ScaredOf(x, animals) ∧ GoodWith(x, pets)) ::: No people that are good with pets are scared of animals.\n∀x (ScaredOf(x, animals) ⊕ Love(x, animals)) ::: People are either scared of animals or love animals.\nValue(adam, physicalTouch) ⊕ Value(adam, wordsOfAffirmation) ::: Adam is either a person who values physical touch as an especially important love language or a person who values words of affirmation as an especially important love language.\nConclusion:\nScaredOf(adam, animals) ::: Adam is scared of animals.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student"
    ]
  },
  {
    "id": "FOLIO_train_307",
    "context": "People either value physical touch as an especially important love language or value words of affirmation as an especially important love language. If a person values physical touch as an especially important love language, then they are good with pets. No people that are good with pets are scared of animals. People are either scared of animals or love animals. Adam is either a person who values physical touch as an especially important love language or a person who loves animals.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Adam values words of affirmation as an especially important love language.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nValue(x, y) ::: x values y as an especially important love language.\nGoodWithPets(x) ::: x is good with pets.\nScaredOfAnimals(x) ::: x is scared of animals.\nLoveAnimals(x) ::: x loves animals.\nPremises:\n∀x (Value(x, physicalTouch) → GoodWithPets(x)) ::: If a person values physical touch as an especially important love language, then they are good with pets.\n¬∀x (GoodWithPets(x) ∧ ScaredOfAnimals(x)) ::: No people that are good with pets are scared of animals.\n∀x (LoveAnimals(x) ∨ ScaredOfAnimals(x)) ::: People are either scared of animals or love animals.\nValue(adam, physicalTouch) ∨ Value(adam, wordsOfAffirmation) ::: Adam is either a person who values physical touch as an especially important love language or a person who values words of affirmation as an especially important love language.\nConclusion:\nValue(adam, wordsOfAffirmation) ::: Adam values words of affirmation as an especially important love language.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person"
    ]
  },
  {
    "id": "FOLIO_train_308",
    "context": "People either value physical touch as an especially important love language or value words of affirmation as an especially important love language. If a person values physical touch as an especially important love language, then they are good with pets. No people that are good with pets are scared of animals. People are either scared of animals or love animals. Adam is either a person who values physical touch as an especially important love language or a person who loves animals.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Adam values physical touch as an especially important love language and values words of affirmation as an especially important love language.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nValue(x, y) ::: x values y as an especially important love language.\nGoodWithPets(x) ::: x is good with pets.\nScaredOfAnimals(x) ::: x is scared of animals.\nLoveAnimals(x) ::: x loves animals.\nPremises:\n∀x (Value(x, physicalTouch) → GoodWithPets(x)) ::: If a person values physical touch as an especially important love language, then they are good with pets.\n¬∀x (GoodWithPets(x) ∧ ScaredOfAnimals(x)) ::: No people that are good with pets are scared of animals.\n∀x (Value(x, wordsOfAffirmation) → LoveAnimals(x)) ::: If a person values words of affirmation as an especially important love language, then they love animals.\nValue(adam, physicalTouch) ∨ Value(adam, wordsOfAffirmation) ::: Adam is either a person who values physical touch as an especially important love language or a person who values words of affirmation as an especially important love language.\nConclusion:\nValue(adam, physicalTouch) ∧ Value(adam, wordsOfAffirmation) ::: Adam values physical touch as an especially important love language and values words of affirmation as an especially important love language.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent"
    ]
  },
  {
    "id": "FOLIO_train_309",
    "context": "People either value physical touch as an especially important love language or value words of affirmation as an especially important love language. If a person values physical touch as an especially important love language, then they are good with pets. No people that are good with pets are scared of animals. People are either scared of animals or love animals. Adam is either a person who values physical touch as an especially important love language or a person who loves animals.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Adam either values physical touch as an especially important love language or values words of affirmation as an especially important love language.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nValue(x, y) ::: x values y as an especially important love language.\nGoodWithPets(x) ::: x is good with pets.\nScaredOfAnimals(x) ::: x is scared of animals.\nLoveAnimals(x) ::: x loves animals.\nPremises:\n∀x (Value(x, physicalTouch) → GoodWithPets(x)) ::: If a person values physical touch as an especially important love language, then they are good with pets.\n¬∀x (GoodWithPets(x) ∧ ScaredOfAnimals(x)) ::: No people that are good with pets are scared of animals.\n∀x (Value(x, wordsOfAffirmation) → LoveAnimals(x)) ::: If a person values words of affirmation as an especially important love language, then they love animals.\nValue(adam, physicalTouch) ∨ Value(adam, wordsOfAffirmation) ::: Adam is either a person who values physical touch as an especially important love language or a person who values words of affirmation as an especially important love language.\nConclusion:\nValue(adam, physicalTouch) ∨ Value(adam, wordsOfAffirmation) ::: Adam either values physical touch as an especially important love language or values words of affirmation as an especially important love language.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person"
    ]
  },
  {
    "id": "FOLIO_train_310",
    "context": "People either value physical touch as an especially important love language or value words of affirmation as an especially important love language. If a person values physical touch as an especially important love language, then they are good with pets. No people that are good with pets are scared of animals. People are either scared of animals or love animals. Adam is either a person who values physical touch as an especially important love language or a person who loves animals.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Adam values physical touch as an especially important love language or is good with pets, then Adam values words of affirmation as an especially important love language.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nValue(x, y) ::: x values y as an especially important love language.\nGoodWith(x, y) ::: x is good with y.\nScaredOf(x, y) ::: x is scared of y.\nLove(x, y) ::: x loves y.\nPremises:\n∀x (Value(x, physicalTouch) → GoodWith(x, pets)) ::: If a person values physical touch as an especially important love language, then they are good with pets.\n∀x (ScaredOf(x, animals) → ¬GoodWith(x, pets)) ::: No people that are good with pets are scared of animals.\n∀x (Love(x, animals) ⊕ Value(x, wordsOfAffirmation)) ::: People are either scared of animals or love animals.\nValue(adam, physicalTouch) ⊕ Value(adam, wordsOfAffirmation) ::: Adam is either a person who values physical touch as an especially important love language or a person who values words of affirmation as an especially important love language.\nConclusion:\nValue(adam, wordsOfAffirmation) ::: If Adam values physical touch as an especially important love language or is good with pets, then Adam values words of affirmation as an especially important love language.\n------"
    ]
  },
  {
    "id": "FOLIO_train_311",
    "context": "All birds have wings. No animal with wings is a reptile. Some animals that fly are birds. If something is an iguana, then it is a reptile. John is neither an iguana nor a bird.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? John is a reptile.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nBird(x) ::: x is a bird.\nWing(x) ::: x has wings.\nAnimal(x) ::: x is an animal.\nFly(x) ::: x flies.\nIguana(x) ::: x is an iguana.\nReptile(x) ::: x is a reptile.\nPremises:\n∀x (Bird(x) → Wing(x)) ::: All birds have wings.\n∀x (Animal(x) ∧ Wing(x)) → ¬Reptile(x) ::: No animal with wings is a reptile.\n∃x (Animal(x) ∧ Fly(x) ∧ Bird(x)) ::: Some animals that fly are birds.\nIguana(john) ⊕ ¬Iguana(john) ::: If something is an iguana, then it is a reptile.\n¬Bird(john) ⊕ ¬Bird(john) ::: John is neither an iguana nor a bird.\nConclusion:\nReptile(john) ::: John is a reptile.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffe"
    ]
  },
  {
    "id": "FOLIO_train_312",
    "context": "All birds have wings. No animal with wings is a reptile. Some animals that fly are birds. If something is an iguana, then it is a reptile. John is neither an iguana nor a bird.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? John is not an iguana and an animal that can fly.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nBird(x) ::: x is a bird.\nWing(x) ::: x has wings.\nAnimal(x) ::: x is an animal.\nFly(x) ::: x can fly.\nReptile(x) ::: x is a reptile.\nIguana(x) ::: x is an iguana.\nPremises:\n∀x (Bird(x) → Wing(x)) ::: All birds have wings.\n∀x (Animal(x) ∧ Wing(x)) → ¬Reptile(x) ::: No animal with wings is a reptile.\n∃x (Animal(x) ∧ Fly(x) ∧ Bird(x)) ::: Some animals that fly are birds.\nIguana(john) ⊕ ¬Iguana(john) ::: If something is an iguana, then it is a reptile.\n¬Bird(john) ⊕ Bird(john) ::: John is neither a bird nor an iguana.\nConclusion:\n¬(Iguana(john) ∧ Bird(john)) ::: John is not an iguana and an animal that can fly.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly"
    ]
  },
  {
    "id": "FOLIO_train_313",
    "context": "All birds have wings. No animal with wings is a reptile. Some animals that fly are birds. If something is an iguana, then it is a reptile. John is neither an iguana nor a bird.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? John is an animal that can fly and a bird.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nBird(x) ::: x is a bird.\nWing(x) ::: x has wings.\nAnimal(x) ::: x is an animal.\nFly(x) ::: x can fly.\nReptile(x) ::: x is a reptile.\nIguana(x) ::: x is an iguana.\nPremises:\n∀x (Bird(x) → Wing(x)) ::: All birds have wings.\n∀x (Wing(x) ⊕ Animal(x)) ::: No animal with wings is a reptile.\n∃x (Animal(x) ∧ Fly(x) ∧ Bird(x)) ::: Some animals that fly are birds.\nIguana(john) ⊕ ¬Bird(john) ::: If something is an iguana, then it is a reptile.\n¬(Iguana(john) ∧ Bird(john)) ::: John is neither an iguana nor a bird.\nConclusion:\nFly(john) ∧ Bird(john) ::: John is an animal that can fly and a bird.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine"
    ]
  },
  {
    "id": "FOLIO_train_314",
    "context": "EndGame is a movie released in 2006. EndGame was set in Washington. EndGame was filmed outside of Washington. Some movies are filmed in New York. Andy Chang directed EndGame. Andy Chang is from Hong Kong.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? EndGame was filmed in New York.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nMovie(x) ::: x is a movie.\nSet(x, y) ::: x is set in y.\nFilmed(x, y) ::: x is filmed in y.\nDirector(x, y) ::: x is directed by y.\nFrom(x, y) ::: x is from y.\nPremises:\nMovie(endgame) ∧ Set(endgame, washington) ∧ Filmed(endgame, outsideOfWashington) ::: EndGame is a movie released in 2006. EndGame was set in Washington. EndGame was filmed outside of Washington.\nMovie(someMovie) ∧ Filmed(someMovie, newYork) ::: Some movies are filmed in New York.\nDirector(endgame, andyChang) ∧ From(andyChang, hongKong) ::: Andy Chang directed EndGame. Andy Chang is from Hong Kong.\nConclusion:\nFilmed(endgame, newYork) ::: EndGame was filmed in New York.\n------\nProblem:\nThe following is a list of the top 100 movies of 2006.\n1. Pirates of the Caribbean: Dead Man's Chest\n2. The Da Vinci Code\n3. X-Men: The Last"
    ]
  },
  {
    "id": "FOLIO_train_315",
    "context": "EndGame is a movie released in 2006. EndGame was set in Washington. EndGame was filmed outside of Washington. Some movies are filmed in New York. Andy Chang directed EndGame. Andy Chang is from Hong Kong.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? EndGame was not directed by someone from Hong Kong.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nMovie(x) ::: x is a movie.\nSet(x, y) ::: x is set in y.\nFilmed(x, y) ::: x is filmed in y.\nDirected(x, y) ::: x is directed by y.\nFrom(x, y) ::: x is from y.\nPremises:\nMovie(endgame) ∧ Set(endgame, washington) ∧ Filmed(endgame, outsideOfWashington) ::: EndGame is a movie released in 2006. EndGame was set in Washington. EndGame was filmed outside of Washington.\nMovie(someMovie) ∧ Filmed(someMovie, newYork) ::: Some movies are filmed in New York.\nDirected(endgame, andyChang) ∧ From(andyChang, hongKong) ::: Andy Chang directed EndGame. Andy Chang is from Hong Kong.\nConclusion:\n¬Directed(endgame, someoneFromHongKong) ::: EndGame was not directed by someone from Hong Kong.\n------\nProblem:\nThe following is a list of the top 100 movies of 2006.\n1. Pirates of the Caribbean: Dead Man's Chest\n2. The Da Vinci Code\n3."
    ]
  },
  {
    "id": "FOLIO_train_316",
    "context": "EndGame is a movie released in 2006. EndGame was set in Washington. EndGame was filmed outside of Washington. Some movies are filmed in New York. Andy Chang directed EndGame. Andy Chang is from Hong Kong.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? All of Andy Chang's movies are filmed outside of Washington.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nMovie(x) ::: x is a movie.\nSet(x, y) ::: x is set in y.\nFilmed(x, y) ::: x is filmed in y.\nDirector(x, y) ::: x is directed by y.\nFrom(x, y) ::: x is from y.\nPremises:\nMovie(endgame) ∧ Set(endgame, washington) ∧ Filmed(endgame, outsideOfWashington) ::: EndGame is a movie released in 2006. EndGame was set in Washington. EndGame was filmed outside of Washington.\nMovie(someMovie) ∧ Filmed(someMovie, newYork) ::: Some movies are filmed in New York.\nDirector(endgame, andyChang) ∧ From(andyChang, hongKong) ::: Andy Chang directed EndGame. Andy Chang is from Hong Kong.\nConclusion:\nFilmed(endgame, outsideOfWashington) ∧ Filmed(someMovie, newYork) ::: All of Andy Chang's movies are filmed outside of Washington.\n------\nProblem:\nThe following is a list of the top 100 movies of 2006.\n1. Pirates of the Caribbean: Dead Man'"
    ]
  },
  {
    "id": "FOLIO_train_317",
    "context": "Six, seven and eight are real numbers. If a real number equals another real number adding one, the first number is larger. If the number x is larger than number y, then y is not larger than x. Seven equals six plus one. Eight equals seven plus one. Two is positive. If a number is positive, then the double of it is also positive. Eight is the double of four. Four is the double of two.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Eight is larger than seven.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nRealNumber(x) ::: x is a real number.\nEqual(x, y) ::: x equals y.\nAdd(x, y) ::: x plus y.\nLarger(x, y) ::: x is larger than y.\nPositive(x) ::: x is positive.\nDouble(x, y) ::: x is the double of y.\nPremises:\nRealNumber(six) ∧ RealNumber(seven) ∧ RealNumber(eight) ∧ Equal(six, seven) ∧ Add(seven, one) ∧ Larger(seven, eight) ::: Six, seven and eight are real numbers. If a real number equals another real number adding one, the first number is larger. If the number x is larger than number y, then y is not larger than x. Seven equals six plus one. Eight equals seven plus one.\nRealNumber(two) ∧ Positive(two) ∧ Double(two, four) ∧ Positive(four) ∧ Double(four, eight) ∧ Positive(eight) ::: Two is positive. If a number is positive, then the double of it is also positive. Eight is the double of four. Four is the double of two.\nConclusion:\nLarger(eight, seven) ::: Eight is larger than seven"
    ]
  },
  {
    "id": "FOLIO_train_318",
    "context": "Six, seven and eight are real numbers. If a real number equals another real number adding one, the first number is larger. If the number x is larger than number y, then y is not larger than x. Seven equals six plus one. Eight equals seven plus one. Two is positive. If a number is positive, then the double of it is also positive. Eight is the double of four. Four is the double of two.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Eight is positive.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nRealNumber(x) ::: x is a real number.\nEqual(x, y) ::: x equals y.\nLarger(x, y) ::: x is larger than y.\nPositive(x) ::: x is positive.\nDouble(x, y) ::: x is the double of y.\nPremises:\nRealNumber(six) ∧ RealNumber(seven) ∧ RealNumber(eight) ∧ Equal(six, seven) ∧ Equal(seven, eight) ∧ Larger(eight, seven) ::: Six, seven and eight are real numbers. If a real number equals another real number adding one, the first number is larger. If the number x is larger than number y, then y is not larger than x. Seven equals six plus one. Eight equals seven plus one.\nRealNumber(two) ∧ Positive(two) ∧ Double(two, four) ∧ Double(four, eight) ::: Two is positive. If a number is positive, then the double of it is also positive. Eight is the double of four. Four is the double of two.\nConclusion:\nPositive(eight) ::: Eight is positive.\n------\nProblem:\nThe number of people who are not in the room is equal to the number of people who are in the room. The"
    ]
  },
  {
    "id": "FOLIO_train_319",
    "context": "Six, seven and eight are real numbers. If a real number equals another real number adding one, the first number is larger. If the number x is larger than number y, then y is not larger than x. Seven equals six plus one. Eight equals seven plus one. Two is positive. If a number is positive, then the double of it is also positive. Eight is the double of four. Four is the double of two.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Six is larger than seven.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nRealNumber(x) ::: x is a real number.\nEqual(x, y) ::: x equals y.\nAdd(x, y) ::: x plus y.\nLarger(x, y) ::: x is larger than y.\nPositive(x) ::: x is positive.\nDouble(x, y) ::: x is the double of y.\nPremises:\nRealNumber(six) ∧ RealNumber(seven) ∧ RealNumber(eight) ∧ Equal(six, seven) ∧ Add(seven, one) ∧ Larger(seven, eight) ::: Six, seven and eight are real numbers. If a real number equals another real number adding one, the first number is larger. If the number x is larger than number y, then y is not larger than x. Seven equals six plus one. Eight equals seven plus one.\nRealNumber(two) ∧ Positive(two) ∧ Double(two, four) ∧ Positive(four) ∧ Double(four, eight) ∧ Positive(eight) ::: Two is positive. If a number is positive, then the double of it is also positive. Eight is the double of four. Four is the double of two.\nConclusion:\nLarger(six, seven) ::: Six is larger than seven."
    ]
  },
  {
    "id": "FOLIO_train_320",
    "context": "A dog never tells the truth. Some poker players are dogs.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Some poker players never tell the truth.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nDog(x) ::: x is a dog.\nTell(x, y) ::: x tells y.\nTruth(x) ::: x is the truth.\nPokerPlayer(x) ::: x is a poker player.\nPremises:\n∀x (Dog(x) → Tell(x, false)) ::: A dog never tells the truth.\n∃x (PokerPlayer(x) ∧ Dog(x)) ::: Some poker players are dogs.\nConclusion:\nTell(pokerPlayer, false) ::: Some poker players never tell the truth.\n------"
    ]
  },
  {
    "id": "FOLIO_train_321",
    "context": "All Asians are human. All Chinese are Asian. A man is either Chinese or British. All British are European. All Spanish are European. No Indian is European. Jessee is either both an Indian and a human, or neither an Indian nor a human.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jesse is Chinese.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nAsian(x) ::: x is an Asian.\nChinese(x) ::: x is a Chinese.\nBritish(x) ::: x is a British.\nEuropean(x) ::: x is a European.\nSpanish(x) ::: x is a Spanish.\nIndian(x) ::: x is an Indian.\nHuman(x) ::: x is a human.\nPremises:\n∀x (Asian(x) → Human(x)) ::: All Asians are human.\n∀x (Chinese(x) → Asian(x)) ::: All Chinese"
    ]
  },
  {
    "id": "FOLIO_train_322",
    "context": "All Asians are human. All Chinese are Asian. A man is either Chinese or British. All British are European. All Spanish are European. No Indian is European. Jessee is either both an Indian and a human, or neither an Indian nor a human.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jesse is not Chinese.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nAsian(x) ::: x is Asian.\nChinese(x) ::: x is Chinese.\nBritish(x) ::: x is British.\nEuropean(x) ::: x is European.\nSpanish(x) ::: x is Spanish.\nIndian(x) ::: x is Indian.\nHuman(x) ::: x is human.\nPremises:\n∀x (Asian(x) → Human(x)) ::: All Asians are human.\n∀x (Chinese(x) → Asian(x)) ::: All Chinese are Asian.\n∀x ("
    ]
  },
  {
    "id": "FOLIO_train_323",
    "context": "All Asians are human. All Chinese are Asian. A man is either Chinese or British. All British are European. All Spanish are European. No Indian is European. Jessee is either both an Indian and a human, or neither an Indian nor a human.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Jesse is either an Indian or a Spanish, then Jesse is either both British and European, or neither British nor European.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nAsian(x) ::: x is an Asian.\nChinese(x) ::: x is a Chinese.\nBritish(x) ::: x is a British.\nEuropean(x) ::: x is a European.\nSpanish(x) ::: x is a Spanish.\nIndian(x) ::: x is an Indian.\nHuman(x) ::: x is a human.\nPremises:\n∀x (Asian(x) → Human(x)) ::: All Asians are human.\n∀x (Chinese(x) → Asian(x)) ::: All Chinese"
    ]
  },
  {
    "id": "FOLIO_train_324",
    "context": "No people who never admit a mistake are good teachers. Some well-informed people are people who never admit a mistake.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Some good teachers are not well-informed people.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nGoodTeacher(x) ::: x is a good teacher.\nWellInformed(x) ::: x is well-informed.\nNeverAdmit(x) ::: x never admits a mistake.\nPremises:\n∀x (GoodTeacher(x) → NeverAdmit(x)) ::: No people who never admit a mistake are good teachers.\n∃x (WellInformed(x) ∧ NeverAdmit(x)) ::: Some well-informed people are people who never admit a mistake.\nConclusion:\n¬GoodTeacher(x) ∨ WellInformed("
    ]
  },
  {
    "id": "FOLIO_train_325",
    "context": "Philatelic literature is divided into the following categories: Stamp catalogues, Periodicals, Auction catalogues, Books, Bibliographies, and Background Material Mort is not a Stamp catalogue. Mort is not a periodical, auction catalogue, bibliography, or background material. Mort is a piece of Philatelic literature.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mort is a book",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nPhilatelicLiterature(x) ::: x is a piece of Philatelic literature.\nStampCatalogue(x) ::: x is a Stamp catalogue.\nPeriodical(x) ::: x is a periodical.\nAuctionCatalogue(x) ::: x is an auction catalogue.\nBook(x) ::: x is a book.\nBibliography(x) ::: x is a bibliography.\nBackgroundMaterial(x) ::: x is background material.\nPremises:\n¬StampCatalogue(mort) ∧ ¬Periodical(mort"
    ]
  },
  {
    "id": "FOLIO_train_326",
    "context": "Philatelic literature is divided into the following categories: Stamp catalogues, Periodicals, Auction catalogues, Books, Bibliographies, and Background Material Mort is not a Stamp catalogue. Mort is not a periodical, auction catalogue, bibliography, or background material. Mort is a piece of Philatelic literature.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mort is background material.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nPhilatelicLiterature(x) ::: x is a piece of Philatelic literature.\nStampCatalogue(x) ::: x is a Stamp catalogue.\nPeriodical(x) ::: x is a periodical.\nAuctionCatalogue(x) ::: x is an auction catalogue.\nBook(x) ::: x is a book.\nBibliography(x) ::: x is a bibliography.\nBackgroundMaterial(x) ::: x is background material.\nPremises:\n¬StampCatalogue(mort) ∧ ¬Periodical(mort"
    ]
  },
  {
    "id": "FOLIO_train_327",
    "context": "Philatelic literature is divided into the following categories: Stamp catalogues, Periodicals, Auction catalogues, Books, Bibliographies, and Background Material Mort is not a Stamp catalogue. Mort is not a periodical, auction catalogue, bibliography, or background material. Mort is a piece of Philatelic literature.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Eragon is a piece of Philatelic literature.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPhilatelicLiterature(x) ::: x is a piece of Philatelic literature.\nStampCatalogue(x) ::: x is a Stamp catalogue.\nPeriodical(x) ::: x is a periodical.\nAuctionCatalogue(x) ::: x is an auction catalogue.\nBook(x) ::: x is a book.\nBibliography(x) ::: x is a bibliography.\nBackgroundMaterial(x) ::: x is background material.\nPremises:\n¬StampCatalogue(mort) ∧ ¬Periodical(mort)"
    ]
  },
  {
    "id": "FOLIO_train_328",
    "context": "Adventures of Rusty is a drama film and children's film. Columbia Pictures produced Adventures of Rusty Tintin was produced by Paramount. Tintin is an adventure film.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Columbia pictures produces drama films.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nDrama(x) ::: x is a drama film.\nChildren(x) ::: x is a children's film.\nProduce(x, y) ::: x produces y.\nParamount(x) ::: x is Paramount.\nAdventure(x) ::: x is an adventure film.\nPremises:\nAdventuresOfRusty(drama) ∧ Children(AdventuresOfRusty) ∧ Produce(ColumbiaPictures, AdventuresOfRusty) ∧ Paramount(ColumbiaPictures) ∧ Adventure(Adventures"
    ]
  },
  {
    "id": "FOLIO_train_329",
    "context": "Adventures of Rusty is a drama film and children's film. Columbia Pictures produced Adventures of Rusty Tintin was produced by Paramount. Tintin is an adventure film.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Columbia pictures produces adventure films.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nDrama(x) ::: x is a drama film.\nChildren(x) ::: x is a children's film.\nProduce(x, y) ::: x produces y.\nParamount(x) ::: x is Paramount.\nAdventure(x) ::: x is an adventure film.\nPremises:\nAdventuresOfRustyIsA(drama, children) ::: Adventures of Rusty is a drama film and children's film.\nProduce(columbia, adventuresOfRustyIsA) ::: Columbia Pictures produced Adventures of Rust"
    ]
  },
  {
    "id": "FOLIO_train_330",
    "context": "Adventures of Rusty is a drama film and children's film. Columbia Pictures produced Adventures of Rusty Tintin was produced by Paramount. Tintin is an adventure film.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Paramount produces children's films.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nDrama(x) ::: x is a drama film.\nChildren(x) ::: x is a children's film.\nProduce(x, y) ::: x produces y.\nParamount(x) ::: x is Paramount.\nAdventure(x) ::: x is an adventure film.\nPremises:\nAdventuresOfRustyIsA(drama, children) ::: Adventures of Rusty is a drama film and children's film.\nProduce(columbia, adventuresOfRustyIsA) ::: Columbia Pictures produced Adventures of Rusty Tintin was produced by Paramount.\nAdventure(tintin) ::: Tintin is an adventure film.\nConclusion:\nProduce(paramount, children) ::: Paramount produces children's films.\n------"
    ]
  },
  {
    "id": "FOLIO_train_331",
    "context": "Adventures of Rusty is a drama film and children's film. Columbia Pictures produced Adventures of Rusty Tintin was produced by Paramount. Tintin is an adventure film.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Paramount produces adventure films.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nDrama(x) ::: x is a drama film.\nChildren(x) ::: x is a children's film.\nProduce(x, y) ::: x produces y.\nParamount(x) ::: x is Paramount.\nColumbia(x) ::: x is Columbia.\nAdventure(x) ::: x is an adventure film.\nPremises:\nAdventuresOfRusty(drama) ∧ Children(AdventuresOfRusty) ∧ Produce(Paramount, AdventuresOfRusty) ::: Adventures of Rusty is a drama film and children's film. Columbia Pictures produced Adventures of Rusty was produced by Paramount.\nAdventuresOfRusty(adventure) ∧ Produce(Columbia, AdventuresOfRusty) :::"
    ]
  },
  {
    "id": "FOLIO_train_332",
    "context": "Deng Xiaoping served as the paramount leader of the People's Republic of China (PRC). Deng Xiaoping was praised for his reaffirmation of the reform program in his Southern Tour of 1992 as well as the reversion of Hong Kong to Chinese control in 1997 and the return of Macau in 1999. As the party's Secretary-General under Mao and Vice Premier in he 1950s, Deng Xiaoping presided over the Anti-Rightist Campaign launched by Mao. Deng Xiaoping became instrumental in China's economic reconstruction following the disastrous Great Leap Forward (1958–1960). Mao Zedong died in 1976. After Mao Zedong's death, Deng Xiaoping gradually rose to supreme power.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The paramount leader of the PRC was also the vice premier.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nParamountLeader(x) ::: x is the paramount leader of the PRC.\nVicePremier(x) ::: x is the vice premier.\nSecretaryGeneral(x, y) ::: x is the Secretary-General of y.\nAntiRightistCampaign(x) ::: x is the Anti-Rightist Campaign.\nGreatLeapForward(x) ::: x is the Great Leap Forward.\nReaffirmation(x) ::: x is a reaffirmation.\nReversion(x) ::: x is a reversion.\nReturn(x) ::: x is a return.\nPremises:\nParamountLeader(deng) ∧ VicePremier(deng) ::: Deng Xiaoping served as the paramount leader of the PRC.\nSecret"
    ]
  },
  {
    "id": "FOLIO_train_333",
    "context": "Deng Xiaoping served as the paramount leader of the People's Republic of China (PRC). Deng Xiaoping was praised for his reaffirmation of the reform program in his Southern Tour of 1992 as well as the reversion of Hong Kong to Chinese control in 1997 and the return of Macau in 1999. As the party's Secretary-General under Mao and Vice Premier in he 1950s, Deng Xiaoping presided over the Anti-Rightist Campaign launched by Mao. Deng Xiaoping became instrumental in China's economic reconstruction following the disastrous Great Leap Forward (1958–1960). Mao Zedong died in 1976. After Mao Zedong's death, Deng Xiaoping gradually rose to supreme power.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Deng Xiaoping presided over something launched by someone he was under.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nParamountLeader(x) ::: x is the paramount leader of the People's Republic of China (PRC).\nReaffirm(x, y) ::: x reaffirms y.\nReversion(x, y) ::: x reverts y to y.\nReturn(x, y) ::: x returns y to y.\nSecretaryGeneral(x, y) ::: x is the Secretary-General of y.\nVicePremier(x, y) ::: x is the Vice Premier of y.\nPreside(x, y) ::: x presides over y.\nAntiRightistCampaign(x) ::: x is the Anti-Rightist Campaign.\nGreatLeapForward(x) ::: x is the Great Leap Forward.\nDeath(x) ::: x dies.\nS"
    ]
  },
  {
    "id": "FOLIO_train_334",
    "context": "Deng Xiaoping served as the paramount leader of the People's Republic of China (PRC). Deng Xiaoping was praised for his reaffirmation of the reform program in his Southern Tour of 1992 as well as the reversion of Hong Kong to Chinese control in 1997 and the return of Macau in 1999. As the party's Secretary-General under Mao and Vice Premier in he 1950s, Deng Xiaoping presided over the Anti-Rightist Campaign launched by Mao. Deng Xiaoping became instrumental in China's economic reconstruction following the disastrous Great Leap Forward (1958–1960). Mao Zedong died in 1976. After Mao Zedong's death, Deng Xiaoping gradually rose to supreme power.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The person instrumental in china's economic reconstruction gradually rose to supreme power.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nParamountLeader(x) ::: x is the paramount leader of the People's Republic of China (PRC).\nReaffirm(x, y) ::: x reaffirms y.\nRevert(x, y) ::: x reverts y.\nReturn(x, y) ::: x returns y.\nSecretaryGeneral(x, y) ::: x is the Secretary-General of y.\nVicePremier(x, y) ::: x is the Vice Premier of y.\nPreside(x, y) ::: x presides over y.\nAntiRightistCampaign(x, y) ::: x launches the Anti-Rightist Campaign in y.\nGreatLeapForward(x, y) ::: x is the Great Leap Forward in y.\nDeath(x, y) :"
    ]
  },
  {
    "id": "FOLIO_train_335",
    "context": "All imaginative processes are produced in human brains. All science-fiction is from an imaginative process. Either science-fiction or fact. No facts are proven to be false. Dune is a science-fiction or proven to be false.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Dune is a fact.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nImaginativeProcess(x) ::: x is an imaginative process.\nScienceFiction(x) ::: x is science-fiction.\nFact(x) ::: x is a fact.\nProven(x) ::: x is proven.\nProvenFalse(x) ::: x is proven false.\nPremises:\n∀x (ImaginativeProcess(x) → HumanBrain(x)) ::: All imaginative processes are produced in human brains.\n∀x (ScienceFiction(x) → ImaginativeProcess(x)) ::: All science-fiction is from an imaginative process.\n¬∃x (Fact(x) ∧ Proven(x)) ::: No facts are proven to be false.\nFact(dune) ::: Dune is a fact.\nConclusion:\nProvenFalse(d"
    ]
  },
  {
    "id": "FOLIO_train_336",
    "context": "All imaginative processes are produced in human brains. All science-fiction is from an imaginative process. Either science-fiction or fact. No facts are proven to be false. Dune is a science-fiction or proven to be false.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Dune is produced in human brains and is an imaginative process.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nImaginativeProcess(x) ::: x is an imaginative process.\nScienceFiction(x) ::: x is science-fiction.\nFact(x) ::: x is a fact.\nProven(x) ::: x is proven.\nProvenFalse(x) ::: x is proven false.\nPremises:\n∀x (ImaginativeProcess(x) → HumanBrain(x)) ::: All imaginative processes are produced in human brains.\n∀x (ScienceFiction(x) → ImaginativeProcess(x)) ::: All science-fiction is from an imaginative process.\n¬∃x (Fact(x) ∧ Proven(x)) ::: No facts are proven to be false.\nFact(dune) ::: Dune is a fact.\nProvenFalse(dune) :::"
    ]
  },
  {
    "id": "FOLIO_train_337",
    "context": "All imaginative processes are produced in human brains. All science-fiction is from an imaginative process. Either science-fiction or fact. No facts are proven to be false. Dune is a science-fiction or proven to be false.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Dune is either produced in human brains or an imaginative process.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nImaginativeProcess(x) ::: x is an imaginative process.\nScienceFiction(x) ::: x is science-fiction.\nFact(x) ::: x is a fact.\nProven(x) ::: x is proven.\nProvenFalse(x) ::: x is proven false.\nPremises:\n∀x (ImaginativeProcess(x) → HumanBrain(x)) ::: All imaginative processes are produced in human brains.\n∀x (ScienceFiction(x) → ImaginativeProcess(x)) ::: All science-fiction is from an imaginative process.\n¬∃x (Fact(x) ∧ Proven(x)) ::: No facts are proven to be false.\nFact(dune) ::: Dune is a fact.\nConclusion:\nImaginativeProcess("
    ]
  },
  {
    "id": "FOLIO_train_338",
    "context": "All imaginative processes are produced in human brains. All science-fiction is from an imaginative process. Either science-fiction or fact. No facts are proven to be false. Dune is a science-fiction or proven to be false.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Dune is produced in human brains and is science fiction.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nImaginativeProcess(x) ::: x is an imaginative process.\nScienceFiction(x) ::: x is science-fiction.\nFact(x) ::: x is a fact.\nProven(x) ::: x is proven.\nProvenFalse(x) ::: x is proven false.\nPremises:\n∀x (ImaginativeProcess(x) → HumanBrain(x)) ::: All imaginative processes are produced in human brains.\n∀x (ScienceFiction(x) → ImaginativeProcess(x)) ::: All science-fiction is from an imaginative process.\n¬∃x (Fact(x) ∧ Proven(x)) ::: No facts are proven to be false.\nFact(dune) ∨ ProvenFalse(dune) ::: Dune is a science-f"
    ]
  },
  {
    "id": "FOLIO_train_339",
    "context": "All imaginative processes are produced in human brains. All science-fiction is from an imaginative process. Either science-fiction or fact. No facts are proven to be false. Dune is a science-fiction or proven to be false.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Dune is either produced in human brains or science-fiction.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nImaginativeProcess(x) ::: x is an imaginative process.\nScienceFiction(x) ::: x is science-fiction.\nFact(x) ::: x is a fact.\nProven(x) ::: x is proven.\nProvenFalse(x) ::: x is proven false.\nPremises:\n∀x (ImaginativeProcess(x) → HumanBrain(x)) ::: All imaginative processes are produced in human brains.\n∀x (ScienceFiction(x) → ImaginativeProcess(x)) ::: All science-fiction is from an imaginative process.\n¬∃x (Fact(x) ∧ Proven(x)) ::: No facts are proven to be false.\nFact(dune) ::: Dune is a fact.\nConclusion:\nImaginativeProcess("
    ]
  },
  {
    "id": "FOLIO_train_340",
    "context": "All imaginative processes are produced in human brains. All science-fiction is from an imaginative process. Either science-fiction or fact. No facts are proven to be false. Dune is a science-fiction or proven to be false.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Dune is produced in human brains and is an imaginative process, then Dune is not produced in human brains and science-fiction.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nImaginativeProcess(x) ::: x is an imaginative process.\nScienceFiction(x) ::: x is science-fiction.\nFact(x) ::: x is a fact.\nProven(x) ::: x is proven.\nProduced(x, y) ::: x is produced in y.\nPremises:\n∀x (ImaginativeProcess(x) → Produced(x, humanBrain)) ::: All imaginative processes are produced in human brains.\n∀x (ScienceFiction(x) → ImaginativeProcess(x)) ::: All science-fiction is from an imaginative process.\n¬(Fact(x) ∧ Proven(x)) ::: No facts are proven to be false.\nScienceFiction(dune) ::: Dune is science-fiction.\nConclusion:\nProduced(dune, humanBrain) ∧ ImaginativeProcess(dune) ::: If Dune is produced in human brains and is an imaginative process, then Dune is not produced in human brains and science-fiction.\n------"
    ]
  },
  {
    "id": "FOLIO_train_341",
    "context": "All imaginative processes are produced in human brains. All science-fiction is from an imaginative process. Either science-fiction or fact. No facts are proven to be false. Dune is a science-fiction or proven to be false.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Dune is either a fact and produced in human brains, or neither a fact nor produced in human brains, then Dune is produced in human brains and science-fiction.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nImaginativeProcess(x) ::: x is an imaginative process.\nScienceFiction(x) ::: x is science-fiction.\nFact(x) ::: x is a fact.\nProducedInHumanBrain(x) ::: x is produced in human brains.\nPremises:\n∀x (ImaginativeProcess(x) → ProducedInHumanBrain(x)) ::: All imaginative processes are produced in human brains.\n∀x (ScienceFiction(x) → ImaginativeProcess(x)) ::: All science-fiction is from an imaginative process.\n¬(Fact(x) ∨ ProducedInHumanBrain(x)) ::: No facts are proven to be false.\nFact(dune) ::: Dune is a fact.\nProducedInHumanBrain(dune) ::: Dune is produced in human brains.\nConclusion:\nProducedInHumanBrain(dune) ∧ ScienceFiction(dune) ::: If Dune is either a fact and produced in human brains, or neither a fact nor produced in human"
    ]
  },
  {
    "id": "FOLIO_train_342",
    "context": "All imaginative processes are produced in human brains. All science-fiction is from an imaginative process. Either science-fiction or fact. No facts are proven to be false. Dune is a science-fiction or proven to be false.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Dune is science-fiction, then Dune is not produced in human brains and science-fiction.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nImaginativeProcess(x) ::: x is an imaginative process.\nScienceFiction(x) ::: x is science-fiction.\nFact(x) ::: x is a fact.\nProven(x) ::: x is proven.\nProduced(x, y) ::: x is produced in y.\nPremises:\n∀x (ImaginativeProcess(x) → Produced(x, humanBrain)) ::: All imaginative processes are produced in human brains.\n∀x (ScienceFiction(x) → ImaginativeProcess(x)) ::: All science-fiction is from an imaginative process.\n¬(Fact(x) ∨ Proven(x)) ::: No facts are proven to be false.\nFact(dune) ∨ Proven(dune) ::: Dune is a fact or proven to be false.\nConclusion:\nProduced(dune, humanBrain) ⊕ Produced(dune, scienceFiction) ::: If Dune is science-fiction, then Dune is not produced in human brains and science-fiction."
    ]
  },
  {
    "id": "FOLIO_train_343",
    "context": "All imaginative processes are produced in human brains. All science-fiction is from an imaginative process. Either science-fiction or fact. No facts are proven to be false. Dune is a science-fiction or proven to be false.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Dune is not produced in human brains and science-fiction, then Dune is neither an imaginative process nor proved to be false.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nImaginativeProcess(x) ::: x is an imaginative process.\nScienceFiction(x) ::: x is science-fiction.\nFact(x) ::: x is a fact.\nProven(x) ::: x is proven.\nProvenFalse(x) ::: x is proven false.\nPremises:\n∀x (ImaginativeProcess(x) → ProducedInHumanBrain(x)) ::: All imaginative processes are produced in human brains.\n∀x (ScienceFiction(x) → ImaginativeProcess(x)) ::: All science-fiction is from an imaginative process.\n¬(Fact(x) ∨ ProvenFalse(x)) ::: No facts are proven to be false.\nFact(dune) ::: Dune is a fact.\nConclusion:\nProducedInHumanBrain(dune) ⊕ ScienceFiction(dune) ::: If Dune is not produced in human brains and science-fiction, then Dune is neither an imaginative process nor proved to be false.\n------\nProblem:\nAll people"
    ]
  },
  {
    "id": "FOLIO_train_344",
    "context": "All imaginative processes are produced in human brains. All science-fiction is from an imaginative process. Either science-fiction or fact. No facts are proven to be false. Dune is a science-fiction or proven to be false.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Dune is not an imaginative process and science-fiction, then Dune is neither produced in human brains nor an imaginative process.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nImaginativeProcess(x) ::: x is an imaginative process.\nScienceFiction(x) ::: x is science-fiction.\nFact(x) ::: x is a fact.\nProven(x) ::: x is proven.\nProvenFalse(x) ::: x is proven false.\nPremises:\n∀x (ImaginativeProcess(x) → ProducedInHumanBrain(x)) ::: All imaginative processes are produced in human brains.\n∀x (ScienceFiction(x) → ImaginativeProcess(x)) ::: All science-fiction is from an imaginative process.\n¬(Fact(x) ∨ ProvenFalse(x)) ::: No facts are proven to be false.\nDune(x) ::: x is Dune.\nConclusion:\nProducedInHumanBrain(Dune) ⊕ ImaginativeProcess(Dune) ::: If Dune is not an imaginative process and science-fiction, then Dune is neither produced in human brains nor an imaginative process.\n------\nProblem:\nAll"
    ]
  },
  {
    "id": "FOLIO_train_345",
    "context": "An American superhero comes from either DC universe or Marvel universe. Captain America is a superhero. Captain America is an American. Captain America does not come from DC universe. If a superhero is American, he speaks English. A superhero speaks English or Spanish.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Captain America does not speak English.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nAmerican(x) ::: x is an American.\nSpeakEnglish(x) ::: x speaks English.\nSpeakSpanish(x) ::: x speaks Spanish.\nSuperhero(x) ::: x is a superhero.\nPremises:\nAmerican(captainAmerica) ∧ Superhero(captainAmerica) ::: Captain America is an American superhero.\nAmerican(captainAmerica) ∧ ¬(Superhero(captainAmerica) ∧ DCUniverse) ::: Captain America does not come from DC universe.\n∀x (American(x) → SpeakEnglish(x)) ::: If a superhero is American, he speaks English.\n∀x (SpeakEnglish(x) ∨ SpeakSpanish(x)) ::: A superhero speaks English or Spanish.\nConclusion:\n¬SpeakEnglish(captainAmerica) ::: Captain America does not speak English.\n------\nProblem:\nA person is either a student or a teacher. A student is either a person who is a teacher or a person who is not a teacher. A teacher is either a person"
    ]
  },
  {
    "id": "FOLIO_train_346",
    "context": "An American superhero comes from either DC universe or Marvel universe. Captain America is a superhero. Captain America is an American. Captain America does not come from DC universe. If a superhero is American, he speaks English. A superhero speaks English or Spanish.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Captain America comes from Marvel universe.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nAmerican(x) ::: x is an American.\nSpeakEnglish(x) ::: x speaks English.\nSpeakSpanish(x) ::: x speaks Spanish.\nSuperhero(x) ::: x is a superhero.\nPremises:\nAmerican(captainAmerica) ∧ Superhero(captainAmerica) ∧ ¬(Superhero(captainAmerica) ∧ DCUniverse) ::: Captain America is an American. Captain America is a superhero. Captain America does not come from DC universe.\n∀x (American(x) → SpeakEnglish(x)) ::: If a superhero is American, he speaks English.\n∃x (Superhero(x) ∧ SpeakSpanish(x)) ::: A superhero speaks English or Spanish.\nConclusion:\nSpeakSpanish(captainAmerica) ::: Captain America speaks Spanish.\n------\nProblem:\nA person is either a student or a teacher. A student is either a person who is a teacher or a person who is not a teacher. A teacher is either a person who is a student or"
    ]
  },
  {
    "id": "FOLIO_train_347",
    "context": "An American superhero comes from either DC universe or Marvel universe. Captain America is a superhero. Captain America is an American. Captain America does not come from DC universe. If a superhero is American, he speaks English. A superhero speaks English or Spanish.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Captain America speaks Spanish.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nAmerican(x) ::: x is an American.\nSpeakEnglish(x) ::: x speaks English.\nSpeakSpanish(x) ::: x speaks Spanish.\nSuperhero(x) ::: x is a superhero.\nPremises:\nAmerican(captainAmerica) ∧ Superhero(captainAmerica) ::: Captain America is an American superhero.\nAmerican(captainAmerica) ∧ ¬(Superhero(captainAmerica) ∧ DCUniverse) ::: Captain America does not come from DC universe.\n∀x (Superhero(x) → American(x)) ::: If a superhero is American, he speaks English.\n∀x (Superhero(x) ∨ SpeakSpanish(x)) ::: A superhero speaks English or Spanish.\nConclusion:\nSpeakSpanish(captainAmerica) ::: Captain America speaks Spanish.\n------\nProblem:\nA person is either a student or a teacher. A student is either a person who is a teacher or a person who is not a teacher. A teacher is either a person who"
    ]
  },
  {
    "id": "FOLIO_train_348",
    "context": "Robert Zimmer was born in Germany. Robert Zimmer is an essayist. Robert Zimmer was born in 1953. Every essayist is a writer. Every person born in Germany is German.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Robert Zimmer is German.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nGerman(x) ::: x is German.\nEssayist(x) ::: x is an essayist.\nBorn(x, y) ::: x was born in year y.\nWrites(x, y) ::: x writes y.\nPremises:\nGerman(robert) ∧ Born(robert, year1953) ::: Robert Zimmer was born in Germany.\nEssayist(robert) ::: Robert Zimmer is an essayist.\nConclusion:\nGerman(robert) ::: Robert Zimmer is German.\n------\nProblem:\nThe following is a list of the top 100 most popular baby names in the United States in 2013.\n1. Jacob\n2. Mason\n3. William\n4. Michael\n5. Ethan\n6. Jayden\n7. Alexander\n8. Noah\n9. Daniel\n10. Aiden\n11. Benjamin\n12. Anthony\n13. David\n14. James\n15. Christopher\n16. Matthew\n17. Andrew\n18."
    ]
  },
  {
    "id": "FOLIO_train_349",
    "context": "Robert Zimmer was born in Germany. Robert Zimmer is an essayist. Robert Zimmer was born in 1953. Every essayist is a writer. Every person born in Germany is German.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Robert Zimmer is not a writer.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nGerman(x) ::: x is a German person.\nBorn(x, y) ::: x was born in year y.\nEssayist(x) ::: x is an essayist.\nWriter(x) ::: x is a writer.\nPremises:\nGerman(robert) ∧ Born(robert, year1953) ::: Robert Zimmer was born in Germany.\nEssayist(robert) ::: Robert Zimmer is an essayist.\nConclusion:\nWriter(robert) ::: Robert Zimmer is a writer.\n------\nProblem:\nThe following is a list of the top 100 most popular baby names in the United States in 2013.\n1. Jacob\n2. Mason\n3. William\n4. Michael\n5. Ethan\n6. Jayden\n7. Alexander\n8. Noah\n9. Daniel\n10. Aiden\n11. Benjamin\n12. Anthony\n13. David\n14. James\n15. Christopher\n16. Matthew\n17. Andrew\n18. Joseph"
    ]
  },
  {
    "id": "FOLIO_train_350",
    "context": "Robert Zimmer was born in Germany. Robert Zimmer is an essayist. Robert Zimmer was born in 1953. Every essayist is a writer. Every person born in Germany is German.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Robert Zimmer is a biographer.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nGerman(x) ::: x is a German person.\nBorn(x, y) ::: x was born in year y.\nEssayist(x) ::: x is an essayist.\nWriter(x) ::: x is a writer.\nBiographer(x) ::: x is a biographer.\nPremises:\nGerman(robert) ∧ Born(robert, year1953) ::: Robert Zimmer was born in Germany.\nEssayist(robert) ::: Robert Zimmer is an essayist.\nBorn(robert, year1953) ::: Robert Zimmer was born in 1953.\n∀x (Essayist(x) → Writer(x)) ::: Every essayist is a writer.\n∀x (German(x) → German(x)) ::: Every person born in Germany is German.\nConclusion:\nBiographer(robert) ::: Robert Zimmer is a biographer.\n------"
    ]
  },
  {
    "id": "FOLIO_train_351",
    "context": "All people who repay their loans on time have a high credit score. Some people with high credit scores and high salaries are approved for mortgages. John has a high salary.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If John repays his loans on time, he will be approved for a mortgage.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nRepay(x, y) ::: x repays y on time.\nCreditScore(x) ::: x has a high credit score.\nHighSalary(x) ::: x has a high salary.\nApproved(x, y) ::: x is approved for y.\nMortgage(x) ::: x is a mortgage.\nPremises:\n∀x (Repay(x, y) → CreditScore(x)) ::: All people who repay their loans on time have a high credit score.\n∃x (CreditScore(x) ∧ HighSalary(x)) ∧ Approved(x, mortgage) ::: Some people with high credit scores and high salaries are approved for mortgages.\nCreditScore(john) ∧ HighSalary(john) ::: John has a high salary.\nConclusion:\nApproved(john, mortgage) ::: If John repays his loans on time, he will be approved for a mortg"
    ]
  },
  {
    "id": "FOLIO_train_352",
    "context": "All students are members of the university. All graduate students are students. All PhD students are graduate students. Some PhD students have high IQs. If John is not a PhD student, then he is not a member of the university. If John has a high IQ, then he is a PhD student or a graduate student.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? John has a high IQ.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nStudent(x) ::: x is a student.\nGraduateStudent(x) ::: x is a graduate student.\nPhDStudent(x) ::: x is a PhD student.\nHighIQ(x) ::: x has a high IQ.\nMember(x, y) ::: x is a member of y.\nPremises:\n∀x (Student(x) → Member(x, university)) ::: All students are members of the university.\n∀x (GraduateStudent(x) → Student(x)) ::: All graduate students are students.\n∀x (PhDStudent(x) → GraduateStudent(x)) ::: All PhD students are graduate students.\n∃x (PhDStudent(x) ∧ HighIQ(x)) ::: Some PhD students have high IQs.\n¬Student(john) → Member(john, university) ::: If John is not a student, then he is not a member of the university.\n(HighIQ(john)"
    ]
  },
  {
    "id": "FOLIO_train_353",
    "context": "All students are members of the university. All graduate students are students. All PhD students are graduate students. Some PhD students have high IQs. If John is not a PhD student, then he is not a member of the university. If John has a high IQ, then he is a PhD student or a graduate student.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? John does not have a high IQ.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nStudent(x) ::: x is a student.\nGraduateStudent(x) ::: x is a graduate student.\nPhDStudent(x) ::: x is a PhD student.\nHighIQ(x) ::: x has a high IQ.\nMember(x, y) ::: x is a member of y.\nPremises:\n∀x (Student(x) → Member(x, university)) ::: All students are members of the university.\n∀x (GraduateStudent(x) → Student(x)) ::: All graduate students are students.\n∀x (PhDStudent(x) → GraduateStudent(x)) ::: All PhD students are graduate students.\n∃x (PhDStudent(x) ∧ HighIQ(x)) ::: Some PhD students have high IQs.\n¬Student(john) → Member(john, university) ::: If John is not a student, then he is not a member of the university.\n(HighIQ(john)"
    ]
  },
  {
    "id": "FOLIO_train_354",
    "context": "All students are members of the university. All graduate students are students. All PhD students are graduate students. Some PhD students have high IQs. If John is not a PhD student, then he is not a member of the university. If John has a high IQ, then he is a PhD student or a graduate student.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? John is a PhD student.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nStudent(x) ::: x is a student.\nGraduateStudent(x) ::: x is a graduate student.\nPhDStudent(x) ::: x is a PhD student.\nHighIQ(x) ::: x has a high IQ.\nMember(x, y) ::: x is a member of y.\nPremises:\n∀x (Student(x) → Member(x, university)) ::: All students are members of the university.\n∀x (GraduateStudent(x) → Student(x)) ::: All graduate students are students.\n∀x (PhDStudent(x) → GraduateStudent(x)) ::: All PhD students are graduate students.\n∃x (PhDStudent(x) ∧ HighIQ(x)) ::: Some PhD students have high IQs.\n¬Student(john) → Member(john, university) ::: If John is not a student, then he is not a member of the university.\n(HighIQ(john)"
    ]
  },
  {
    "id": "FOLIO_train_355",
    "context": "Belgium, France and Germany are European countries. Paris is the capital of France. The Eiffel Tower is one of the main tourist attractions located in Paris. Some people who live in Belgium speak French. If John goes to Europe, he will see some tourist attractions. John speaks French.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If John goes to Europe, he will see the Eiffel Tower.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nEuropeanCountry(x) ::: x is a European country.\nCapital(x, y) ::: x is the capital of y.\nTouristAttraction(x) ::: x is a tourist attraction.\nMain(x, y) ::: x is one of the main y.\nSpeak(x, y) ::: x speaks y.\nLive(x, y) ::: x lives in y.\nPremises:\nEuropeanCountry(belgium) ∧ EuropeanCountry(france) ∧ EuropeanCountry(germany) ::: Belgium, France and Germany are European countries.\nCapital(paris, france) ::: Paris is the capital of France.\nTouristAttraction(eiffelTower) ∧ Main(eiffelTower, touristAttractions) ::: The Eiffel Tower is one of the main tourist attractions located in Paris.\n∃x (Live(x, belgium) ∧ Speak(x, french)) ::: Some people"
    ]
  },
  {
    "id": "FOLIO_train_356",
    "context": "Belgium, France and Germany are European countries. Paris is the capital of France. The Eiffel Tower is one of the main tourist attractions located in Paris. Some people who live in Belgium speak French. If John goes to Europe, he will see some tourist attractions. John speaks French.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Eiffel Tower is located in the capital of France.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nEuropeanCountry(x) ::: x is a European country.\nCapital(x, y) ::: x is the capital of y.\nTouristAttraction(x) ::: x is a tourist attraction.\nSpeak(x, y) ::: x speaks y.\nLocated(x, y) ::: x is located in y.\nPremises:\nEuropeanCountry(belgium) ∧ EuropeanCountry(france) ∧ EuropeanCountry(germany) ::: Belgium, France and Germany are European countries.\nCapital(paris, france) ::: Paris is the capital of France.\nTouristAttraction(eiffelTower) ::: The Eiffel Tower is one of the main tourist attractions located in Paris.\n∃x (Speak(x, french) ∧ EuropeanCountry(x)) ::: Some people who live in Belgium speak French.\nIf(goes(john, europe)) ∧ ∃x (Located(x, europe)) :::"
    ]
  },
  {
    "id": "FOLIO_train_357",
    "context": "Belgium, France and Germany are European countries. Paris is the capital of France. The Eiffel Tower is one of the main tourist attractions located in Paris. Some people who live in Belgium speak French. If John goes to Europe, he will see some tourist attractions. John speaks French.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? John lives in Belgium.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nEuropeanCountry(x) ::: x is a European country.\nCapital(x, y) ::: x is the capital of y.\nTouristAttraction(x) ::: x is a tourist attraction.\nMain(x, y) ::: x is one of the main y.\nSpeak(x, y) ::: x speaks y.\nLive(x, y) ::: x lives in y.\nGo(x, y) ::: x goes to y.\nSee(x, y) ::: x sees y.\nPremises:\nEuropeanCountry(belgium) ∧ EuropeanCountry(france) ∧ EuropeanCountry(germany) ::: Belgium, France and Germany are European countries.\nCapital(paris, france) ::: Paris is the capital of France.\nTouristAttraction(eiffelTower) ∧ Main(eiffelTower, touristAttractions) ::: The Eiffel Tower is one of the main tourist attractions located in Paris"
    ]
  },
  {
    "id": "FOLIO_train_358",
    "context": "All sports cars are loud. No loud cars are electric. If a car is a Ferrari, then it is a sports car. All cars made in Maranello are Ferrari If Prius is neither a sports car nor a loud car, then Prius is a Maranello-made car or a loud car.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Prius is an electric car.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nSportsCar(x) ::: x is a sports car.\nLoud(x) ::: x is loud.\nElectric(x) ::: x is an electric car.\nFerrari(x) ::: x is a Ferrari.\nMaranello(x) ::: x is made in Maranello.\nPremises:\n∀x (SportsCar(x) → Loud(x)) ::: All sports cars are loud.\n∀x (Loud(x) → ¬Electric(x)) ::: No loud cars are electric.\n(Ferrari(prius) ∧ Maranello(prius)) ⊕ (Ferrari(prius) ∧ Loud(prius)) ::: If a car is a Ferrari, then it is a sports car. All cars made in Maranello are Ferrari.\n¬(SportsCar(prius) ∧ Loud(prius)) → (SportsCar(prius) ∧ Loud(pri"
    ]
  },
  {
    "id": "FOLIO_train_359",
    "context": "All sports cars are loud. No loud cars are electric. If a car is a Ferrari, then it is a sports car. All cars made in Maranello are Ferrari If Prius is neither a sports car nor a loud car, then Prius is a Maranello-made car or a loud car.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Prius is not an electric car.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nSportsCar(x) ::: x is a sports car.\nLoud(x) ::: x is loud.\nElectric(x) ::: x is an electric car.\nFerrari(x) ::: x is a Ferrari.\nMaranello(x) ::: x is made in Maranello.\nPremises:\n∀x (SportsCar(x) → Loud(x)) ::: All sports cars are loud.\n∀x (Loud(x) → ¬Electric(x)) ::: No loud cars are electric.\n(Ferrari(prius) ∧ Maranello(prius)) ⊕ (Ferrari(prius) ∧ Loud(prius)) ::: If a car is a Ferrari, then it is a sports car. All cars made in Maranello are Ferrari.\n¬(SportsCar(prius) ∧ Loud(prius)) → (SportsCar(prius) ∧ Loud(pri"
    ]
  },
  {
    "id": "FOLIO_train_360",
    "context": "All sports cars are loud. No loud cars are electric. If a car is a Ferrari, then it is a sports car. All cars made in Maranello are Ferrari If Prius is neither a sports car nor a loud car, then Prius is a Maranello-made car or a loud car.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Prius is a Maranello-made car.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nSportsCar(x) ::: x is a sports car.\nLoud(x) ::: x is loud.\nElectric(x) ::: x is electric.\nFerrari(x) ::: x is a Ferrari.\nMaranello(x) ::: x is made in Maranello.\nPremises:\n∀x (SportsCar(x) → Loud(x)) ::: All sports cars are loud.\n∀x (Loud(x) → ¬Electric(x)) ::: No loud cars are electric.\n(Ferrari(prius) ∧ Maranello(prius)) ⊕ (Ferrari(prius) ∧ Loud(prius)) ::: If a car is a Ferrari, then it is a sports car. All cars made in Maranello are Ferrari.\n¬(SportsCar(prius) ∧ Loud(prius)) → (SportsCar(prius) ∧ Loud(prius)) ⊕ ¬(SportsCar(prius) ∨ Loud(prius)) ::: If Prius is neither a sports car nor a loud car, then Prius is a Maranello-made car or a loud car.\nConclusion:\nMaranello(prius) ::: Prius is a Maranello-made car.\n------"
    ]
  },
  {
    "id": "FOLIO_train_361",
    "context": "All sports cars are loud. No loud cars are electric. If a car is a Ferrari, then it is a sports car. All cars made in Maranello are Ferrari If Prius is neither a sports car nor a loud car, then Prius is a Maranello-made car or a loud car.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Prius is a Ferrari or a loud car, then Prius is an electric car.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nSportsCar(x) ::: x is a sports car.\nLoud(x) ::: x is loud.\nElectric(x) ::: x is an electric car.\nFerrari(x) ::: x is a Ferrari.\nMaranello(x) ::: x is a car made in Maranello.\nPremises:\n∀x (SportsCar(x) → Loud(x)) ::: All sports cars are loud.\n∀x (Loud(x) → ¬Electric(x)) ::: No loud cars are electric.\n(Ferrari(prius) ∨ Loud(prius)) → Electric(prius) ::: If a car is a Ferrari, then it is a sports car.\nAllCarsMadeInMaranello(prius) ⊕ ¬(Ferrari(prius) ∨ Loud(prius)) ::: All cars made in Maranello are Ferrari If Prius is neither a sports car nor a loud car, then Prius is a Maranello-made car or a loud car.\nConclusion:\n(Ferrari(prius) ∨ Loud(prius)) → Electric(prius) ::: If Prius is a Ferrari or a loud car, then Prius is an electric car.\n------\nProblem:\nAll people who regularly drink"
    ]
  },
  {
    "id": "FOLIO_train_362",
    "context": "If something is a plant, then it is not a cute animal. All flowers are plants. Every kitten is a cute animal. If something is grown in a garden, then it is a flower. Piper is a kitten or a cute animal.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Piper was grown in a garden.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nPlant(x) ::: x is a plant.\nCuteAnimal(x) ::: x is a cute animal.\nFlower(x) ::: x is a flower.\nGarden(x) ::: x is a garden.\nGrown(x, y) ::: x is grown in year y.\nPremises:\n∀x (Plant(x) → ¬CuteAnimal(x)) ::: If something is a plant, then it is not a cute animal.\n∀x (Flower(x) → Plant(x)) ::: All flowers are plants.\n∀x (Kitten(x) → CuteAnimal(x)) ::: Every kitten is a cute animal.\nGarden(piper) ∧ Grown(piper, year1999) ::: Piper is a kitten or a cute animal.\nConclusion:\nGrown(piper, year1999) ::: Piper was grown in a garden.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that"
    ]
  },
  {
    "id": "FOLIO_train_363",
    "context": "If something is a plant, then it is not a cute animal. All flowers are plants. Every kitten is a cute animal. If something is grown in a garden, then it is a flower. Piper is a kitten or a cute animal.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Piper was not grown in a garden.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nPlant(x) ::: x is a plant.\nCuteAnimal(x) ::: x is a cute animal.\nFlower(x) ::: x is a flower.\nGrownInGarden(x) ::: x is grown in a garden.\nKitten(x) ::: x is a kitten.\nPremises:\nPlant(x) → ¬CuteAnimal(x) ::: If something is a plant, then it is not a cute animal.\n∀x (Flower(x) → Plant(x)) ::: All flowers are plants.\n∀x (Kitten(x) → CuteAnimal(x)) ::: Every kitten is a cute animal.\nGrownInGarden(piper) ∨ Kitten(piper) ::: Piper is a kitten or a cute animal.\nConclusion:\n¬GrownInGarden(piper) ::: Piper was not grown in a garden.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is"
    ]
  },
  {
    "id": "FOLIO_train_364",
    "context": "If something is a plant, then it is not a cute animal. All flowers are plants. Every kitten is a cute animal. If something is grown in a garden, then it is a flower. Piper is a kitten or a cute animal.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Piper is a kitten.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nPlant(x) ::: x is a plant.\nCuteAnimal(x) ::: x is a cute animal.\nFlower(x) ::: x is a flower.\nGrownInGarden(x) ::: x is grown in a garden.\nKitten(x) ::: x is a kitten.\nPremises:\nPlant(x) → ¬CuteAnimal(x) ::: If something is a plant, then it is not a cute animal.\n∀x (Flower(x) → Plant(x)) ::: All flowers are plants.\n∀x (Kitten(x) → CuteAnimal(x)) ::: Every kitten is a cute animal.\nGrownInGarden(piper) ∨ Kitten(piper) ::: Piper is a kitten or a cute animal.\nConclusion:\nKitten(piper) ::: Piper is a kitten.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina"
    ]
  },
  {
    "id": "FOLIO_train_365",
    "context": "Guam has participated in the Winter Olympics. In 1988, the Winter Olympics were held in Calgary. Guam sent an athlete to the Calgary Winter Olympics. If Guan sent an athlete to the Calgary Winter Olympics, then it participated in the Calgary Winter Olympics. Judd Bankert is the only athlete from Guam who has ever competed in the Winter Olympics.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Judd Bankert competed in the 1992 Winter Olympics.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGuam(x) ::: x is from Guam.\nAthlete(x) ::: x is an athlete.\nCompete(x, y) ::: x competes in the y Olympics.\nWinterOlympics(x) ::: x is the Winter Olympics.\nPremises:\nGuam(guam) ∧ Athlete(judd) ∧ Compete(judd, calgary) ::: Judd Bankert is the only athlete from Guam who has ever competed in the Winter Olympics.\nWinterOlympics(calgary) ∧ Compete(guam, calgary) ::: Guam has participated in the Winter Olympics.\nConclusion:\nCompete(judd, calgary) ::: Judd Bankert competed in the 1992 Winter Olympics.\n------\nProblem:\nThe following is a list of the top 100 most popular baby names in the United States in 2009.\n1. Jacob\n2. Isabella\n3. Ethan\n4. Michael\n5. Emily\n6. Ava\n7. Matthew\n8. Hannah\n9. Abigail\n10. Madison\n11. Elizabeth\n12. Alexis\n13. Samuel\n14. Sarah\n15. Olivia\n16. Aiden\n17. Mia\n18. Emily\n19."
    ]
  },
  {
    "id": "FOLIO_train_366",
    "context": "Guam has participated in the Winter Olympics. In 1988, the Winter Olympics were held in Calgary. Guam sent an athlete to the Calgary Winter Olympics. If Guan sent an athlete to the Calgary Winter Olympics, then it participated in the Calgary Winter Olympics. Judd Bankert is the only athlete from Guam who has ever competed in the Winter Olympics.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Guam has participated in the Summer Olympics at least once.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Olympics(x) ::: x is an Olympics.\nWinterOlympics(x) ::: x is a Winter Olympics.\nSummerOlympics(x) ::: x is a Summer Olympics.\nParticipate(x, y) ::: x participates in y.\nAthlete(x) ::: x is an athlete.\nCompete(x, y) ::: x competes in y.\nPremises:\nWinterOlympics(calgary) ∧ Participate(guam, calgary) ::: Guam participated in the Calgary Winter Olympics.\nAthlete(judd) ∧ Compete(judd, calgary) ::: Judd Bankert is the only athlete from Guam who has ever competed in the Winter Olympics.\nConclusion:\nSummerOlympics(guam) ::: Guam has participated in the Summer Olympics at least once.\n------\nProblem:\nThe following is a list of the top 100 most popular baby names in the United States in 2009.\n1. Jacob\n2. Isabella\n3. Ethan\n4. Michael\n5. Emily\n6. Ava\n7. Matthew\n8. Hannah\n9. Abigail\n10. Madison\n11. Elizabeth\n12. Alexis\n13. Samuel\n14. Sarah\n15. Olivia\n16."
    ]
  },
  {
    "id": "FOLIO_train_367",
    "context": "Michael O'Donnell is a British physician, journalist, author and broadcaster. One of the word-setters of My Word! was Michael O'Donnell. The magazine World Medicine was edited by Michael O'Donnell. Michael O'Donnell was born in Yorkshire as the son of a general practitioner.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The son of a general practitioner was a word-setter of My Word!.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O'Donnell(x) ::: x is a person named O'Donnell.\nBritish(x) ::: x is a British person.\nPhysician(x) ::: x is a physician.\nJournalist(x) ::: x is a journalist.\nAuthor(x) ::: x is an author.\nBroadcaster(x) ::: x is a broadcaster.\nWordSetter(x, y) ::: x is a word-setter of y.\nMagazine(x) ::: x is a magazine.\nEditor(x, y) ::: x is the editor of y.\nPremises:\nO'Donnell(michael) ∧ British(michael) ∧ Physician(michael) ∧ Journalist(michael) ∧ Author(michael) ∧ Broadcaster(michael) ::: Michael O'Donnell is a British physician, journalist, author and broadcaster.\nWordSetter(michael, myWord) ∧ Magazine(worldMedicine) ∧ Editor(michael, worldMedicine) ::: One of the word-setters of My Word! was Michael O'Donnell. The magazine World Medicine was edited by Michael O'Donnell.\nBorn(michael, yorkshire) ∧ Son(michael, father) ∧ GeneralPractitioner"
    ]
  },
  {
    "id": "FOLIO_train_368",
    "context": "Michael O'Donnell is a British physician, journalist, author and broadcaster. One of the word-setters of My Word! was Michael O'Donnell. The magazine World Medicine was edited by Michael O'Donnell. Michael O'Donnell was born in Yorkshire as the son of a general practitioner.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? World Medicine is not a magazine.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O'Donnell(x) ::: x is Michael O'Donnell.\nWordSetter(x, y) ::: x is a word-setter of y.\nEditor(x, y) ::: x is the editor of y.\nBorn(x, y) ::: x was born in year y.\nPremises:\nO'Donnell(michael) ∧ WordSetter(michael, myWord) ::: Michael O'Donnell is one of the word-setters of My Word!\nEditor(michael, worldMedicine) ::: The magazine World Medicine was edited by Michael O'Donnell.\nBorn(michael, year1940) ::: Michael O'Donnell was born in Yorkshire as the son of a general practitioner.\nConclusion:\nWorldMedicine ≠ Magazine ::: World Medicine is not a magazine.\n------\nProblem:\nThe following is a list of the 100 most common surnames in the United States.\n1. Smith\n2. Johnson\n3. Williams\n4. Brown\n5. Jones\n6. Miller\n7. Davis\n8. Wilson\n9. Anderson\n10. Moore\n11. Taylor\n12. White\n13. Garcia\n14. Rodriguez\n15. Hernandez\n16. Martinez\n17. Lopez"
    ]
  },
  {
    "id": "FOLIO_train_369",
    "context": "Michael O'Donnell is a British physician, journalist, author and broadcaster. One of the word-setters of My Word! was Michael O'Donnell. The magazine World Medicine was edited by Michael O'Donnell. Michael O'Donnell was born in Yorkshire as the son of a general practitioner.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There are no British authors.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O'Donnell(x) ::: x is a British physician, journalist, author and broadcaster.\nWordSetter(x, y) ::: x is a word-setter of y.\nEditor(x, y) ::: x is the editor of y.\nBorn(x, y) ::: x was born in year y.\nSon(x, y) ::: x is the son of y.\nPremises:\nO'Donnell(michael) ∧ WordSetter(michael, myWord) ::: Michael O'Donnell is a British physician, journalist, author and broadcaster. One of the word-setters of My Word! was Michael O'Donnell.\nEditor(michael, worldMedicine) ::: The magazine World Medicine was edited by Michael O'Donnell.\nBorn(michael, year1940) ::: Michael O'Donnell was born in Yorkshire as the son of a general practitioner.\nConclusion:\nBritish(michael) ::: Michael O'Donnell is a British physician, journalist, author and broadcaster. One of the word-setters of My Word! was Michael O'Donnell. The magazine World Medicine was edited by Michael O'Donnell. Michael O'Donnell was born in Yorkshire as the son of a general practitioner."
    ]
  },
  {
    "id": "FOLIO_train_370",
    "context": "Michael O'Donnell is a British physician, journalist, author and broadcaster. One of the word-setters of My Word! was Michael O'Donnell. The magazine World Medicine was edited by Michael O'Donnell. Michael O'Donnell was born in Yorkshire as the son of a general practitioner.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There are no journalists that were born in Yorkshire.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O'Donnell(x) ::: x is a person named O'Donnell.\nBritish(x) ::: x is a British person.\nPhysician(x) ::: x is a physician.\nJournalist(x) ::: x is a journalist.\nAuthor(x) ::: x is an author.\nBroadcaster(x) ::: x is a broadcaster.\nWordSetter(x, y) ::: x is a word-setter of y.\nEditor(x, y) ::: x is the editor of y.\nMagazine(x) ::: x is a magazine.\nBorn(x, y) ::: x was born in year y.\nSon(x, y) ::: x is the son of y.\nPremises:\nO'Donnell(michael) ∧ British(michael) ∧ Physician(michael) ∧ Journalist(michael) ∧ Author(michael) ∧ Broadcaster(michael) ::: Michael O'Donnell is a British physician, journalist, author and broadcaster.\nWordSetter(michael, myWord) ∧ Editor(michael, worldMedicine) ::: One of the word-setters of My Word! was Michael O'Donnell. The magazine World Medicine was edited by Michael O'Donnell.\nBorn(michael, year1940) ∧ Son(michael, father) ::: Michael O'Donnell was born in Yorkshire as the son of a general practitioner.\nConclusion:\n¬British(father) ::: There are no journalists that were born in Yorkshire.\n------"
    ]
  },
  {
    "id": "FOLIO_train_371",
    "context": "Michael O'Donnell is a British physician, journalist, author and broadcaster. One of the word-setters of My Word! was Michael O'Donnell. The magazine World Medicine was edited by Michael O'Donnell. Michael O'Donnell was born in Yorkshire as the son of a general practitioner.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There is a son of a general practitioner that is not an author.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O'Donnell(x) ::: x is a person named O'Donnell.\nBritish(x) ::: x is a British person.\nPhysician(x) ::: x is a physician.\nJournalist(x) ::: x is a journalist.\nAuthor(x) ::: x is an author.\nBroadcaster(x) ::: x is a broadcaster.\nWordSetter(x, y) ::: x is a word-setter of y.\nEditor(x, y) ::: x is the editor of y.\nMagazine(x) ::: x is a magazine.\nPremises:\nO'Donnell(michael) ∧ British(michael) ∧ Physician(michael) ∧ Journalist(michael) ∧ Author(michael) ∧ Broadcaster(michael) ::: Michael O'Donnell is a British physician, journalist, author and broadcaster.\nWordSetter(michael, myWord) ∧ Editor(michael, worldMedicine) ::: One of the word-setters of My Word! was Michael O'Donnell. The magazine World Medicine was edited by Michael O'Donnell.\nBorn(michael, yorkshire) ∧ Son(michael, father) ∧ GeneralPractitioner(father) ::: Michael O'Donnell was born in Yorkshire as the son of a general practitioner.\nConclusion:\n¬Son(michael, author) ::: There is a son of a general practitioner that is not an author.\n------\nProblem:\nThe following is a list of the 100 most common surn"
    ]
  },
  {
    "id": "FOLIO_train_372",
    "context": "No homework is fun. Some reading is homework.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Some reading is fun.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nHomework(x) ::: x is homework.\nReading(x) ::: x is reading.\nFun(x) ::: x is fun.\nPremises:\n∀x (Homework(x) → ¬Fun(x)) ::: No homework is fun.\n∃x (Reading(x) ∧ Homework(x)) ::: Some reading is homework.\nConclusion:\nFun(x) ::: Some reading is fun.\n------\nProblem:\nNo homework is fun. Some reading is homework.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Some reading is fun.\n###\nProblem:\nNo homework is fun. Some reading is homework.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Some reading is fun.\n###\nProblem:\nNo homework is fun. Some reading is homework.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Some reading is fun.\n###\nProblem:\nNo homework is fun. Some reading is homework.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Some reading is fun.\n###\nProblem:\nNo homework is fun. Some reading is homework.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Some reading is fun.\n###\nProblem:\nNo homework is fun. Some reading is homework.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Some reading is fun.\n###\nProblem:\nNo"
    ]
  },
  {
    "id": "FOLIO_train_373",
    "context": "If violence is good, it is justified. If something is justified, it is lawful.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If violence is good, it is lawful.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nViolence(x) ::: x is violence.\nGood(x) ::: x is good.\nJustified(x) ::: x is justified.\nLawful(x) ::: x is lawful.\nPremises:\nViolence(x) → Good(x) ::: If violence is good, it is justified.\nGood(x) → Lawful(x) ::: If something is justified, it is lawful.\nConclusion:\nLawful(x) ::: If violence is good, it is lawful.\n------\nProblem:\nIf a person is a student, then that person is a person who is a student. If a person is a person who is a student, then that person is a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? If a person is a student, then that person is a person who is a student.\n###\nPredicates:\nStudent(x) ::: x is a student.\nPersonWhoIsStudent(x) ::: x is a person who is a student.\nPremises:\nStudent(x) → PersonWhoIsStudent(x) ::: If a person is a student, then that person is a person who is a student.\nPersonWhoIsStudent(x) → Student(x) ::: If a person is a person who is a student, then that person is a student.\nConclusion:\nStudent(x) ::: If a person is a student, then that person is a person who is a student.\n------\nProblem:\nIf a person is a student, then that person is a person who is a student. If a person is a person who is a student, then that person"
    ]
  },
  {
    "id": "FOLIO_train_374",
    "context": "All people who have a horse ranch regularly ride horses for pleasure and sport. All people who have a lot of disposable income have a horse ranch. If people compete in horse dressage shows, then they have a lot of disposable income. If people compete in horse dressage shows, then they have invested in high-quality equestrian gear and equipment. If people regularly ride horses for pleasure and sport, then they do not live in cramped residential buildings. Manny either has a horse ranch and lives in cramped residential buildings, or he neither has a horse ranch nor lives in cramped residential buildings.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Manny regularly rides horses for pleasure and sport.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nHorseRanch(x) ::: x has a horse ranch.\nRide(x, y) ::: x rides y for pleasure and sport.\nCompete(x, y) ::: x competes in y.\nDisposableIncome(x) ::: x has a lot of disposable income.\nLive(x, y) ::: x lives in y.\nCramped(x) ::: x is cramped.\nPremises:\n∀x (HorseRanch(x) → Ride(x, horses)) ::: All people who have a horse ranch regularly ride horses for pleasure and sport.\n∀x (DisposableIncome(x) → HorseRanch(x)) ::: All people who have a lot of disposable income have a horse ranch.\n∀x (Compete(x, horseDressageShow) → DisposableIncome(x)) ::: If people compete in horse dressage shows, then they have a lot of disposable income.\n∀x (Ride(x, horses) → ¬Live(x, crampedResidentialBuilding)) ::: If people regularly ride horses for pleasure and sport, then they do not live in cramped residential buildings.\n¬(HorseRanch(manny) ∧ Live(manny, crampedResidentialBuilding)) ⊕ ¬(HorseRanch(manny) ∨ Live(manny, crampedResidentialBuilding)) ::: Manny either has a horse ranch and lives in cramped residential buildings, or he neither has a horse ranch nor lives in cramped residential buildings.\nConclusion:\nRide(manny, horses) :::"
    ]
  },
  {
    "id": "FOLIO_train_375",
    "context": "All people who have a horse ranch regularly ride horses for pleasure and sport. All people who have a lot of disposable income have a horse ranch. If people compete in horse dressage shows, then they have a lot of disposable income. If people compete in horse dressage shows, then they have invested in high-quality equestrian gear and equipment. If people regularly ride horses for pleasure and sport, then they do not live in cramped residential buildings. Manny either has a horse ranch and lives in cramped residential buildings, or he neither has a horse ranch nor lives in cramped residential buildings.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Manny competes in horse dressage shows and has invested in high-quality equestrian equipment and gear.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nHorseRanch(x) ::: x has a horse ranch.\nRide(x, y) ::: x regularly rides y for pleasure and sport.\nDisposableIncome(x) ::: x has a lot of disposable income.\nCompete(x, y) ::: x competes in y.\nInvest(x, y) ::: x has invested in y.\nHighQuality(x) ::: x is high quality.\nEquestrian(x) ::: x is equestrian.\nEquipment(x) ::: x is equipment.\nGear(x) ::: x is gear.\nPremises:\n∀x (HorseRanch(x) → Ride(x, horses)) ::: All people who have a horse ranch regularly ride horses for pleasure and sport.\n∀x (DisposableIncome(x) → HorseRanch(x)) ::: All people who have a lot of disposable income have a horse ranch.\n∀x (Compete(x, horseDressageShow) → Invest(x, highQualityEquestrianGearAndEquipment)) ::: If people compete in horse dressage shows, then they have invested in high-quality equestrian gear and equipment.\n¬(Ride(x, horses) → Live(x, crampedResidentialBuilding)) ::: If people regularly ride horses for pleasure and sport, then they do not live in cramped residential buildings.\n¬(HorseRanch(x) ∧ Live(x, crampedResidentialBuilding)) ⊕ (HorseRanch(x) ∧ Live(x, crampedResidentialBuilding)) :"
    ]
  },
  {
    "id": "FOLIO_train_376",
    "context": "All people who have a horse ranch regularly ride horses for pleasure and sport. All people who have a lot of disposable income have a horse ranch. If people compete in horse dressage shows, then they have a lot of disposable income. If people compete in horse dressage shows, then they have invested in high-quality equestrian gear and equipment. If people regularly ride horses for pleasure and sport, then they do not live in cramped residential buildings. Manny either has a horse ranch and lives in cramped residential buildings, or he neither has a horse ranch nor lives in cramped residential buildings.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Manny either has a horse ranch or competes in horse dressage shows, then Manny has not invested in high-quality equestrian equipment and gear.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nHorseRanch(x) ::: x has a horse ranch.\nRide(x) ::: x regularly rides horses for pleasure and sport.\nCompete(x) ::: x competes in horse dressage shows.\nDisposableIncome(x) ::: x has a lot of disposable income.\nLive(x, y) ::: x lives in y.\nCramped(x) ::: x is cramped.\nPremises:\n∀x (HorseRanch(x) → Ride(x)) ::: All people who have a horse ranch regularly ride horses for pleasure and sport.\n∀x (DisposableIncome(x) → HorseRanch(x)) ::: All people who have a lot of disposable income have a horse ranch.\n∀x (Compete(x) → ∃y (DisposableIncome(y))) ::: If people compete in horse dressage shows, then they have a lot of disposable income.\n∀x (Compete(x) → ∃y (Invest(x, y)) ∧ ∃z (Invest(x, z))) ::: If people compete in horse dressage shows, then they have invested in high-quality equestrian gear and equipment.\n¬(Ride(manny) ∧ Live(manny, crampedResidentialBuilding)) ⊕ (Ride(manny) ∧ Live(manny, crampedResidentialBuilding)) ::: Manny either has a horse ranch and lives in cramped residential buildings, or he neither has a horse ranch nor lives in cramped residential buildings.\nConclusion:\n¬(Compete(manny) ∧"
    ]
  },
  {
    "id": "FOLIO_train_377",
    "context": "A roundel is a rounded artillery fortification. A roundel is not higher than adjacent walls. Cannons can be deployed on artillery fortifications. Roundels are the oldest artillery fortifications. Battery towers are an artillery fortification.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Cannons can be deployed on battery towers.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nRoundel(x) ::: x is a roundel.\nArtilleryFortification(x) ::: x is an artillery fortification.\nHigher(x, y) ::: x is higher than y.\nDeploy(x, y) ::: x is deployed on y.\nOlder(x, y) ::: x is older than y.\nPremises:\nRoundel(x) ∧ ArtilleryFortification(x) ∧ NotHigher(x, y) ::: A roundel is a rounded artillery fortification. A roundel is not higher than adjacent walls.\n∀x (ArtilleryFortification(x) → Cannon(x)) ::: Cannons can be deployed on artillery fortifications.\n∃x (Roundel(x) ∧ Older(x, y)) ::: Roundels are the oldest artillery fortifications.\nArtilleryFortification(y) ∧ NotHigher(y, x) ::: Battery towers are an artillery fortification.\nConclusion:\nDeploy(cannon, batteryTower) ::: Cannons can be deployed on battery towers.\n------\nProblem:\nA person who is a member of the National Academy of Sciences is a scientist. A scientist is a person who is a member of the National Academy of Sciences. A person who is a member of the National Academy of Sciences is a person who is a member of the National Academy of Engineering. A person who is a member of the National Academy of Engineering is a scientist.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? A person who is a member of the National Academy of Sciences is a person who is a member of the National"
    ]
  },
  {
    "id": "FOLIO_train_378",
    "context": "A roundel is a rounded artillery fortification. A roundel is not higher than adjacent walls. Cannons can be deployed on artillery fortifications. Roundels are the oldest artillery fortifications. Battery towers are an artillery fortification.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Roundels are older than battery towers.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nRoundel(x) ::: x is a roundel.\nArtilleryFortification(x) ::: x is an artillery fortification.\nHigher(x, y) ::: x is higher than y.\nDeploy(x, y) ::: x is deployed on y.\nOlder(x, y) ::: x is older than y.\nPremises:\nRoundel(roundel) ∧ ArtilleryFortification(roundel) ∧ NotHigher(roundel, adjacentWalls) ::: A roundel is a rounded artillery fortification. A roundel is not higher than adjacent walls.\nCannon(cannon) ∧ Deploy(cannon, roundel) ::: Cannons can be deployed on artillery fortifications.\nArtilleryFortification(batteryTower) ∧ Older(roundel, batteryTower) ::: Roundels are the oldest artillery fortifications.\nConclusion:\nOlder(roundel, batteryTower) ::: Roundels are older than battery towers.\n------\nProblem:\nA person who is a member of the National Academy of Sciences is a scientist. A scientist is a person who is a member of the National Academy of Sciences. A person who is a member of the National Academy of Sciences is a person who is a member of the National Academy of Engineering. A person who is a member of the National Academy of Engineering is a scientist.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? A person who is a member of the National Academy of Sciences is a person who is a member of the National Academy of Engineering.\n###\nPredicates:\nMemberOfNationalAcademyOfSciences(x"
    ]
  },
  {
    "id": "FOLIO_train_379",
    "context": "A roundel is a rounded artillery fortification. A roundel is not higher than adjacent walls. Cannons can be deployed on artillery fortifications. Roundels are the oldest artillery fortifications. Battery towers are an artillery fortification.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Battery towers are higher than adjacent walls.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nRoundel(x) ::: x is a roundel.\nArtilleryFortification(x) ::: x is an artillery fortification.\nHigher(x, y) ::: x is higher than y.\nDeploy(x, y) ::: x is deployed on y.\nOlder(x, y) ::: x is older than y.\nPremises:\nRoundel(roundel) ∧ ArtilleryFortification(roundel) ∧ NotHigher(roundel, adjacentWalls) ::: A roundel is a rounded artillery fortification. A roundel is not higher than adjacent walls.\n∀x (ArtilleryFortification(x) → Cannons(x)) ::: Cannons can be deployed on artillery fortifications.\nRoundel(oldestArtilleryFortification) ∧ Older(oldestArtilleryFortification, batteryTowers) ::: Roundels are the oldest artillery fortifications.\nArtilleryFortification(batteryTowers) ::: Battery towers are an artillery fortification.\nConclusion:\nNotHigher(batteryTowers, adjacentWalls) ::: Battery towers are higher than adjacent walls.\n------\nProblem:\nA person who is a member of the National Academy of Sciences is a scientist. A scientist is a person who is a member of the National Academy of Sciences. A person who is a member of the National Academy of Sciences is a person who is a member of the National Academy of Engineering. A person who is a member of the National Academy of Engineering is a scientist.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? A person who is"
    ]
  },
  {
    "id": "FOLIO_train_380",
    "context": "A roundel is a rounded artillery fortification. A roundel is not higher than adjacent walls. Cannons can be deployed on artillery fortifications. Roundels are the oldest artillery fortifications. Battery towers are an artillery fortification.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Roundels can be deployed on roundels.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nRoundel(x) ::: x is a roundel.\nArtilleryFortification(x) ::: x is an artillery fortification.\nHigher(x, y) ::: x is higher than y.\nDeploy(x, y) ::: x is deployed on y.\nOlder(x, y) ::: x is older than y.\nPremises:\nRoundel(roundel) ∧ ArtilleryFortification(roundel) ∧ NotHigher(roundel, adjacentWalls) ::: A roundel is a rounded artillery fortification. A roundel is not higher than adjacent walls.\n∀x (ArtilleryFortification(x) → Cannon(x)) ::: Cannons can be deployed on artillery fortifications.\nRoundel(roundel) ∧ Older(roundel, artilleryFortifications) ::: Roundels are the oldest artillery fortifications.\nArtilleryFortification(batteryTower) ::: Battery towers are an artillery fortification.\nConclusion:\nDeploy(roundel, roundel) ::: Roundels can be deployed on roundels.\n------"
    ]
  },
  {
    "id": "FOLIO_train_381",
    "context": "All tissues are soft. Some papers are tissues.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Some papers are hard.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nTissue(x) ::: x is a tissue.\nPaper(x) ::: x is a paper.\nSoft(x) ::: x is soft.\nHard(x) ::: x is hard.\nPremises:\n∀x (Tissue(x) → Soft(x)) ::: All tissues are soft.\n∃x (Paper(x) ∧ Tissue(x)) ::: Some papers are tissues.\nConclusion:\nHard(x) ::: Some papers are hard.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine"
    ]
  },
  {
    "id": "FOLIO_train_382",
    "context": "All volunteers receive intangible benefits for their work. Volunteers work regularly or on an as-needed basis. Some volunteers are trained. Volunteers work in groups or individually. Environmental volunteers contribute toward environmental management or conservation. Participating in natural disaster response is an example of volunteers working in groups on an as-needed basis.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Volunteers who participate in natural disaster response receive intangible benefits for their work.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nVolunteer(x) ::: x is a volunteer.\nIntangibleBenefit(x) ::: x receives intangible benefits.\nWork(x) ::: x works.\nRegular(x) ::: x works regularly.\nAsNeeded(x) ::: x works on an as-needed basis.\nGroup(x) ::: x works in a group.\nIndividual(x) ::: x works individually.\nEnvironmental(x) ::: x is an environmental volunteer.\nManagement(x) ::: x contributes toward environmental management.\nConservation(x) ::: x contributes toward environmental conservation.\nNaturalDisasterResponse(x) ::: x participates in natural disaster response.\nPremises:\n∀x (Volunteer(x) → IntangibleBenefit(x)) ::: All volunteers receive intangible benefits for their work.\n∀x (Volunteer(x) ⊕ Work(x)) ::: Volunteers work regularly or on an as-needed basis.\n∃x (Volunteer(x) ∧ Trained(x)) ::: Some volunteers are trained."
    ]
  },
  {
    "id": "FOLIO_train_383",
    "context": "All volunteers receive intangible benefits for their work. Volunteers work regularly or on an as-needed basis. Some volunteers are trained. Volunteers work in groups or individually. Environmental volunteers contribute toward environmental management or conservation. Participating in natural disaster response is an example of volunteers working in groups on an as-needed basis.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Environmental volunteers work in groups.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nVolunteer(x) ::: x is a volunteer.\nIntangibleBenefit(x) ::: x receives an intangible benefit.\nWork(x) ::: x works.\nRegular(x) ::: x works regularly.\nAsNeeded(x) ::: x works on an as-needed basis.\nTrained(x) ::: x is trained.\nGroup(x) ::: x works in a group.\nIndividual(x) ::: x works individually.\nEnvironmental(x) ::: x is an environmental volunteer.\nManagement(x) ::: x contributes toward environmental management.\nConservation(x) ::: x contributes toward environmental conservation.\nNaturalDisasterResponse(x) ::: x participates in natural disaster response.\nPremises:\n∀x (Volunteer(x) → IntangibleBenefit(x)) ::: All volunteers receive intangible benefits for their work.\n∀x (Volunteer(x) ⊕ Work(x)) ::: Volunteers work regularly or on an as-needed basis.\n∃x (Volunteer(x) ∧ Tra"
    ]
  },
  {
    "id": "FOLIO_train_384",
    "context": "All volunteers receive intangible benefits for their work. Volunteers work regularly or on an as-needed basis. Some volunteers are trained. Volunteers work in groups or individually. Environmental volunteers contribute toward environmental management or conservation. Participating in natural disaster response is an example of volunteers working in groups on an as-needed basis.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? To be a volunteer, you must be trained.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nVolunteer(x) ::: x is a volunteer.\nIntangibleBenefit(x) ::: x receives an intangible benefit.\nWork(x) ::: x works.\nRegular(x) ::: x works regularly.\nAsNeeded(x) ::: x works on an as-needed basis.\nTrained(x) ::: x is trained.\nGroup(x) ::: x works in a group.\nIndividual(x) ::: x works individually.\nEnvironmental(x) ::: x is an environmental volunteer.\nManagement(x) ::: x contributes toward environmental management.\nConservation(x) ::: x contributes toward environmental conservation.\nNaturalDisasterResponse(x) ::: x participates in natural disaster response.\nPremises:\n∀x (Volunteer(x) → IntangibleBenefit(x)) ::: All volunteers receive intangible benefits for their work.\n∀x (Volunteer(x) ⊕ Work(x)) ::: Volunteers work regularly or on an as-needed basis.\n∃x (Volunteer(x) ∧ Tra"
    ]
  },
  {
    "id": "FOLIO_train_385",
    "context": "All people who are very consistent and enjoy sticking to their regular routines do not like surprises. If people wear flannel shirts every day, then they are very consistent and enjoy sticking to their regular routines. If people do not like shopping for clothes and other materialistic goods, then they wear flannel shirts every day. All old people living in stable homes do not like surprises. If people have very high energy and are impulsive, then they like surprises. If Mike is not a person who wears flannel shirts every day and has very high energy and is impulsive, then Mike either is very consistent and enjoys sticking to his regular routines or does not like surprises.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mike is an old person living in a stable home.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nVeryConsistent(x) ::: x is very consistent.\nEnjoyStickingToRegularRoutines(x) ::: x enjoys sticking to his regular routines.\nLikeSurprises(x) ::: x likes surprises.\nWearFlannelShirtsEveryDay(x) ::: x wears flannel shirts every day.\nDoNotLikeShoppingForClothesAndOtherMaterialisticGoods(x) ::: x does not like shopping for clothes and other materialistic goods.\nOld(x) ::: x is old.\nLiveInStableHome(x) ::: x lives in a stable home.\nHaveVeryHighEnergy(x) ::: x has very high energy.\nImpulsive(x) ::: x is impulsive.\nPremises:\n∀x (VeryConsistent(x) ∧ EnjoyStickingToRegularRoutines(x)) → ¬LikeSurprises(x) ::: All people who are very consistent and enjoy sticking to their regular routines do not like surprises.\n∀x (WearFlannelShirtsEveryDay"
    ]
  },
  {
    "id": "FOLIO_train_386",
    "context": "All people who are very consistent and enjoy sticking to their regular routines do not like surprises. If people wear flannel shirts every day, then they are very consistent and enjoy sticking to their regular routines. If people do not like shopping for clothes and other materialistic goods, then they wear flannel shirts every day. All old people living in stable homes do not like surprises. If people have very high energy and are impulsive, then they like surprises. If Mike is not a person who wears flannel shirts every day and has very high energy and is impulsive, then Mike either is very consistent and enjoys sticking to his regular routines or does not like surprises.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Mike wears flannel shirts every day or does not like shopping for clothes and other materialistic goods, then Mike is neither an old person living in a stable home nor does not like shopping for clothes and other materialistic goods.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nVeryConsistent(x) ::: x is very consistent.\nEnjoyStickingToRegularRoutines(x) ::: x enjoys sticking to his regular routines.\nLikeSurprises(x) ::: x likes surprises.\nWearFlannelShirtsEveryDay(x) ::: x wears flannel shirts every day.\nDoNotLikeShoppingForClothesAndOtherMaterialisticGoods(x) ::: x does not like shopping for clothes and other materialistic goods.\nOld(x) ::: x is old.\nLiveInStableHome(x) ::: x lives in a stable home.\nVeryHighEnergy(x) ::: x has very high energy.\nImpulsive(x) ::: x is impulsive.\nPremises:\n∀x (VeryConsistent(x) ∧ EnjoyStickingToRegularRoutines(x)) → ¬LikeSurprises(x) ::: All people who are very consistent and enjoy sticking to their regular routines do not like surprises.\n∀x (WearFlannelShirtsEveryDay(x"
    ]
  },
  {
    "id": "FOLIO_train_387",
    "context": "All people who are very consistent and enjoy sticking to their regular routines do not like surprises. If people wear flannel shirts every day, then they are very consistent and enjoy sticking to their regular routines. If people do not like shopping for clothes and other materialistic goods, then they wear flannel shirts every day. All old people living in stable homes do not like surprises. If people have very high energy and are impulsive, then they like surprises. If Mike is not a person who wears flannel shirts every day and has very high energy and is impulsive, then Mike either is very consistent and enjoys sticking to his regular routines or does not like surprises.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Mike is not an old person living in a stable home and does not like shopping for clothes and other materialistic goods, then Mike does not like shopping for clothes and other materialistic goods.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nVeryConsistent(x) ::: x is very consistent.\nEnjoyStickingToRegularRoutines(x) ::: x enjoys sticking to his regular routines.\nLikeSurprises(x) ::: x likes surprises.\nWearFlannelShirtsEveryDay(x) ::: x wears flannel shirts every day.\nDoNotLikeShoppingForClothesAndOtherMaterialisticGoods(x) ::: x does not like shopping for clothes and other materialistic goods.\nOld(x) ::: x is old.\nLiveInStableHome(x) ::: x lives in a stable home.\nHaveVeryHighEnergy(x) ::: x has very high energy.\nImpulsive(x) ::: x is impulsive.\nPremises:\n∀x (VeryConsistent(x) ∧ EnjoyStickingToRegularRoutines(x)) → DoNotLikeSurprises(x) ::: All people who are very consistent and enjoy sticking to their regular routines do not like surprises.\n∀x (WearFlannelShirtsEveryDay"
    ]
  },
  {
    "id": "FOLIO_train_388",
    "context": "Adam owns cars. Adam has a favorite car. Among the cars he owns, Adam's favorite car is European. Adam broke his favorite car.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Adam owns a Japanese car.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nOwns(x, y) ::: x owns y.\nFavorite(x, y) ::: x is the favorite of y.\nEuropean(x) ::: x is European.\nBreak(x, y) ::: x broke y.\nPremises:\nOwns(adam, cars) ::: Adam owns cars.\nFavorite(adam, favoriteCar) ::: Adam has a favorite car.\nEuropean(favoriteCar) ::: Among the cars he owns, Adam's favorite car is European.\nBreak(adam, favoriteCar) ::: Adam broke his favorite car.\nConclusion:\nOwns(adam, japaneseCar) ::: Adam owns a Japanese car.\n------\nProblem:\nAlice is a student. Alice is a teacher. Alice is a professor. Alice is a lecturer. Alice is a researcher.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Alice is a teacher.\n###\nPredicates:\nStudent(x) ::: x is a student.\nTeacher(x) ::: x"
    ]
  },
  {
    "id": "FOLIO_train_389",
    "context": "Adam owns cars. Adam has a favorite car. Among the cars he owns, Adam's favorite car is European. Adam broke his favorite car.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Adam broke a European car.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nOwns(x, y) ::: x owns y.\nFavorite(x, y) ::: x is the favorite of y.\nEuropean(x) ::: x is European.\nBreak(x, y) ::: x broke y.\nPremises:\nOwns(adam, cars) ::: Adam owns cars.\nFavorite(adam, favoriteCar) ::: Adam has a favorite car.\nEuropean(favoriteCar) ::: Among the cars he owns, Adam's favorite car is European.\nBreak(adam, favoriteCar) ::: Adam broke his favorite car.\nConclusion:\nBreak(adam, European) ::: Adam broke a European car.\n------\nProblem:\nAlice is a student. Alice is a teacher. Alice is a professor. Alice is a lecturer. Alice is a researcher.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Alice is a student.\n###\nPredicates:\nStudent(x) ::: x is a student.\nTeacher(x) ::: x is a teacher."
    ]
  },
  {
    "id": "FOLIO_train_390",
    "context": "No buildings in New Haven are higher than 400 meters. All buildings managed by Yale Housing are in New Haven. All buildings in Manhattan are higher than 400 meters. All buildings owned by Bloomberg are in Manhattan. All buildings with the Bloomberg logo are buildings owned by Bloomberg. Tower A is neither in New Haven nor in Manhattan. Tower B is a building with the Bloomberg logo and in Manhattan.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tower A is higher than 400 meters.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nHigher(x, y) ::: x is higher than y.\nBuilding(x) ::: x is a building.\nNewHaven(x) ::: x is in New Haven.\nManhattan(x) ::: x is in Manhattan.\nYaleHousing(x) ::: x is managed by Yale Housing.\nBloomberg(x) ::: x is owned by Bloomberg.\nBloombergLogo(x) ::: x is a building with the Bloomberg logo.\nTowerA(x) ::: x is Tower A.\nTowerB(x) ::: x is Tower B.\nPremises:\n∀x (Building(x) → Higher(x, 400)) ::: No buildings in New Haven are higher than 400 meters.\n∀x (YaleHousing(x) → NewHaven(x)) ::: All buildings managed by Yale Housing are in New Haven.\n∀x (Manhattan(x) → Higher(x, 400)) ::: All buildings in Manhattan are higher than 400 meters.\n∀x (Bloomberg(x) → Manhattan(x)) ::: All buildings owned by Bloomberg are in Manhattan.\n∀x (BloombergLogo(x) → Bloomberg(x)) ::: All buildings with the Bloomberg logo are buildings owned by Bloomberg.\nTowerA(x) ⊕ TowerB(x) ::: Tower A is neither in New Haven nor in Manhattan.\nTowerB(x) ::: Tower B is a building with the Bloomberg logo and in Manhattan.\nConclusion:\nHigher(towerA, 400) ::: Tower A is higher than 400 meters.\n------"
    ]
  },
  {
    "id": "FOLIO_train_391",
    "context": "No buildings in New Haven are higher than 400 meters. All buildings managed by Yale Housing are in New Haven. All buildings in Manhattan are higher than 400 meters. All buildings owned by Bloomberg are in Manhattan. All buildings with the Bloomberg logo are buildings owned by Bloomberg. Tower A is neither in New Haven nor in Manhattan. Tower B is a building with the Bloomberg logo and in Manhattan.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tower A is not higher than 400 meters.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nHigher(x, y) ::: x is higher than y.\nBuilding(x) ::: x is a building.\nNewHaven(x) ::: x is in New Haven.\nManhattan(x) ::: x is in Manhattan.\nYaleHousing(x) ::: x is managed by Yale Housing.\nBloomberg(x) ::: x is owned by Bloomberg.\nBloombergLogo(x) ::: x is a building with the Bloomberg logo.\nTowerA(x) ::: x is Tower A.\nTowerB(x) ::: x is Tower B.\nPremises:\n∀x (Building(x) → Higher(x, 400)) ::: No buildings in New Haven are higher than 400 meters.\n∀x (YaleHousing(x) → NewHaven(x)) ::: All buildings managed by Yale Housing are in New Haven.\n∀x (Manhattan(x) → Higher(x, 400)) ::: All buildings in Manhattan are higher than 400 meters.\n∀x (Bloomberg(x) → Manhattan(x)) ::: All buildings owned by Bloomberg are in Manhattan.\n∀x (BloombergLogo(x) → Bloomberg(x)) ::: All buildings with the Bloomberg logo are buildings owned by Bloomberg.\nTowerA(x) ⊕ TowerB(x) ::: Tower A is neither in New Haven nor in Manhattan.\nTowerB(x) ∧ BloombergLogo(x) ∧ Manhattan(x) ::: Tower B is a building with the Bloomberg logo and in Manhattan.\nConclusion:\nHigher(TowerA, 40"
    ]
  },
  {
    "id": "FOLIO_train_392",
    "context": "No buildings in New Haven are higher than 400 meters. All buildings managed by Yale Housing are in New Haven. All buildings in Manhattan are higher than 400 meters. All buildings owned by Bloomberg are in Manhattan. All buildings with the Bloomberg logo are buildings owned by Bloomberg. Tower A is neither in New Haven nor in Manhattan. Tower B is a building with the Bloomberg logo and in Manhattan.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tower A is a building with the Bloomberg logo or managed by Yale Housing.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nBuilding(x) ::: x is a building.\nHigher(x, y) ::: x is higher than y.\nNewHaven(x) ::: x is in New Haven.\nManhattan(x) ::: x is in Manhattan.\nYaleHousing(x) ::: x is managed by Yale Housing.\nBloomberg(x) ::: x is owned by Bloomberg.\nLogo(x, y) ::: x is a building with the logo y.\nTowerA(x) ::: x is Tower A.\nTowerB(x) ::: x is Tower B.\nPremises:\n∀x (Building(x) → Higher(x, 400)) ::: No buildings in New Haven are higher than 400 meters.\n∀x (NewHaven(x) → YaleHousing(x)) ::: All buildings in New Haven are managed by Yale Housing.\n∀x (Manhattan(x) → Higher(x, 400)) ::: All buildings in Manhattan are higher than 400 meters.\n∀x (Manhattan(x) → Bloomberg(x)) ::: All buildings in Manhattan are owned by Bloomberg.\nLogo(Bloomberg, BloombergLogo) ::: All buildings with the Bloomberg logo are buildings owned by Bloomberg.\nTowerA(TowerA) ∧ ¬(NewHaven(TowerA)) ∧ ¬(Manhattan(TowerA)) ::: Tower A is neither in New Haven nor in Manhattan.\nTowerB(TowerB) ∧ Manhattan(TowerB) ∧ Logo(Bloomberg, BloombergLogo) ::: Tower B is a building with the Bloom"
    ]
  },
  {
    "id": "FOLIO_train_393",
    "context": "No buildings in New Haven are higher than 400 meters. All buildings managed by Yale Housing are in New Haven. All buildings in Manhattan are higher than 400 meters. All buildings owned by Bloomberg are in Manhattan. All buildings with the Bloomberg logo are buildings owned by Bloomberg. Tower A is neither in New Haven nor in Manhattan. Tower B is a building with the Bloomberg logo and in Manhattan.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tower A is neither a building with the Bloomberg logo nor managed by Yale Housing.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBuilding(x) ::: x is a building.\nHigher(x, y) ::: x is higher than y.\nNewHaven(x) ::: x is in New Haven.\nManhattan(x) ::: x is in Manhattan.\nYaleHousing(x) ::: x is managed by Yale Housing.\nBloomberg(x) ::: x is owned by Bloomberg.\nBloombergLogo(x) ::: x is a building with the Bloomberg logo.\nTowerA(x) ::: x is Tower A.\nTowerB(x) ::: x is Tower B.\nPremises:\n∀x (Building(x) → Higher(x, 400)) ::: No buildings in New Haven are higher than 400 meters.\n∀x (NewHaven(x) → YaleHousing(x)) ::: All buildings in New Haven are managed by Yale Housing.\n∀x (Manhattan(x) → Higher(x, 400)) ::: All buildings in Manhattan are higher than 400 meters.\n∀x (Manhattan(x) → Bloomberg(x)) ::: All buildings in Manhattan are owned by Bloomberg.\n∀x (Bloomberg(x) → BloombergLogo(x)) ::: All buildings owned by Bloomberg are buildings with the Bloomberg logo.\nTowerA(x) ⊕ TowerB(x) ::: Tower A is neither in New Haven nor in Manhattan.\nTowerB(x) ::: Tower B is a building with the Bloomberg logo and in Manhattan.\nConclusion:\nTowerA(x) ⊕ BloombergLogo(x) ::: Tower A is neither a building with the Bloom"
    ]
  },
  {
    "id": "FOLIO_train_394",
    "context": "No fish are birds. Everything that is an osprey is a bird. If something is a carp, then it is a fish. All goldfish are carp. If Bubbles is either an osprey or a goldfish, then Bubbles is not a fish.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Bubbles is an Osprey.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Osprey(x) ::: x is an osprey.\nBird(x) ::: x is a bird.\nFish(x) ::: x is a fish.\nCarp(x) ::: x is a carp.\nGoldfish(x) ::: x is a goldfish.\nPremises:\n¬Fish(x) ∧ Bird(x) ::: No fish are birds.\n∀x (Bird(x) → Bird(x)) ::: Everything that is an osprey is a bird.\nFish(x) ⇒ Carp(x) ::: If something is a carp, then it is a fish.\nAll(x, y) ::: x is a carp and y is a goldfish.\n¬Fish(x) ∧ (Bubbles = x) ::: If Bubbles is either an osprey or a goldfish, then Bubbles is not a fish.\nConclusion:\nOsprey(bubbles) ::: Bubbles is an Osprey.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is una"
    ]
  },
  {
    "id": "FOLIO_train_395",
    "context": "No fish are birds. Everything that is an osprey is a bird. If something is a carp, then it is a fish. All goldfish are carp. If Bubbles is either an osprey or a goldfish, then Bubbles is not a fish.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Bubbles is a carp.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Osprey(x) ::: x is an osprey.\nBird(x) ::: x is a bird.\nFish(x) ::: x is a fish.\nCarp(x) ::: x is a carp.\nGoldfish(x) ::: x is a goldfish.\nPremises:\n¬Fish(x) ∧ Bird(x) ::: No fish are birds.\n∀x (Bird(x) → Bird(x)) ::: Everything that is an osprey is a bird.\nFish(x) ⇒ Carp(x) ::: If something is a carp, then it is a fish.\nCarp(x) ⇒ Fish(x) ::: All goldfish are carp.\n¬Fish(bubbles) ∧ (Osprey(bubbles) ∨ Goldfish(bubbles)) ::: If Bubbles is either an osprey or a goldfish, then Bubbles is not a fish.\nConclusion:\nCarp(bubbles) ::: Bubbles is a carp.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about"
    ]
  },
  {
    "id": "FOLIO_train_396",
    "context": "No fish are birds. Everything that is an osprey is a bird. If something is a carp, then it is a fish. All goldfish are carp. If Bubbles is either an osprey or a goldfish, then Bubbles is not a fish.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Bubbles is not a carp.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Osprey(x) ::: x is an osprey.\nBird(x) ::: x is a bird.\nFish(x) ::: x is a fish.\nCarp(x) ::: x is a carp.\nGoldfish(x) ::: x is a goldfish.\nPremises:\n¬Fish(x) ∧ Bird(x) ::: No fish are birds.\n∀x (Bird(x) → Bird(x)) ::: Everything that is an osprey is a bird.\nFish(x) ⇒ Carp(x) ::: If something is a carp, then it is a fish.\nCarp(x) ⇒ Fish(x) ::: All goldfish are carp.\n¬Fish(bubbles) ∧ (Osprey(bubbles) ∨ Goldfish(bubbles)) ::: If Bubbles is either an osprey or a goldfish, then Bubbles is not a fish.\nConclusion:\n¬Carp(bubbles) ::: Bubbles is not a carp.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who j"
    ]
  },
  {
    "id": "FOLIO_train_397",
    "context": "Mr. and Mrs. Smith make a travel plan, they want to go to a city in California or Florida, and where neither of them has ever been. Cities in California that they are interested in are San Francisco, Los Angeles, and San Diego. Cities in Florida that they are interested in are Orlando and Miami. Mr. Smith has been to two cities in California. Mrs. Smith has been to one city in Florida.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mr. Smith has been to San Francisco.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nInterested(x, y) ::: x is interested in y.\nTravel(x, y) ::: x travels to y.\nBeen(x, y) ::: x has been to y.\nPremises:\n∀x (Interested(x, California) ⊕ Interested(x, Florida)) ::: Mr. and Mrs. Smith make a travel plan, they want to go to a city in California or Florida, and where neither of them has ever been.\n∀x (Travel(x, California) ⊕ Travel(x, Florida)) ::: Mr. and Mrs. Smith make a travel plan, they want to go to a city in California or Florida, and where neither of them has ever been.\n∀x (Been(x, California) ⊕ Been(x, Florida)) ::: Mr. and Mrs. Smith make a travel plan, they want to go to a city in California or Florida, and where neither of them has ever been.\n∀x (Been(x, California) ⊕ Been(x, Florida)) ::: Mr. and Mrs. Smith make a travel plan, they want to go to a city in California or Florida, and where neither of them has ever been.\n∀x (Been(x, California) ⊕ Been(x, Florida)) ::: Mr. and Mrs. Smith make a travel plan, they want to go to a city in California or Florida, and where neither of them has ever been.\n∀x (Been(x, California) ⊕ Been(x, Florida)) ::: Mr. and Mrs. Smith make a travel plan, they want to go to a city in California or Florida, and where neither of them has ever been.\n∀x (Been(x, California) ⊕ Been(x, Florida)) ::: Mr. and Mrs. Smith make a travel plan, they want to go to a city in California or"
    ]
  },
  {
    "id": "FOLIO_train_398",
    "context": "Mr. and Mrs. Smith make a travel plan, they want to go to a city in California or Florida, and where neither of them has ever been. Cities in California that they are interested in are San Francisco, Los Angeles, and San Diego. Cities in Florida that they are interested in are Orlando and Miami. Mr. Smith has been to two cities in California. Mrs. Smith has been to one city in Florida.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? They have at leat one candidate city in Florida to visit.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nInterested(x, y) ::: x is interested in y.\nVisit(x, y) ::: x visits y.\nCandidate(x, y) ::: x is a candidate city to visit y.\nPremises:\n∃x ∃y (Interested(x, y) ∧ Visit(x, y)) ::: Mr. and Mrs. Smith make a travel plan, they want to go to a city in California or Florida, and where neither of them has ever been.\n∃x (Interested(x, California) ∧ Visit(x, California)) ::: Cities in California that they are interested in are San Francisco, Los Angeles, and San Diego.\n∃x (Interested(x, Florida) ∧ Visit(x, Florida)) ::: Cities in Florida that they are interested in are Orlando and Miami.\n∃x (Interested(x, San Francisco) ∧ Visit(x, San Francisco)) ::: San Francisco is a city in California that they are interested in.\n∃x (Interested(x, Los Angeles) ∧ Visit(x, Los Angeles)) ::: Los Angeles is a city in California that they are interested in.\n∃x (Interested(x, San Diego) ∧ Visit(x, San Diego)) ::: San Diego is a city in California that they are interested in.\n∃x (Interested(x, Orlando) ∧ Visit(x, Orlando)) ::: Orlando is a city in Florida that they are interested in.\n∃x (Interested(x, Miami) ∧ Visit(x, Miami)) ::: Miami is a city in Florida that they are interested in.\n∃x (Interested(x, California) ∧ Visit(x, California) ∧ ¬Visit(x, Florida)) ::: They want to go to a city in California or Florida, and"
    ]
  },
  {
    "id": "FOLIO_train_399",
    "context": "Mr. and Mrs. Smith make a travel plan, they want to go to a city in California or Florida, and where neither of them has ever been. Cities in California that they are interested in are San Francisco, Los Angeles, and San Diego. Cities in Florida that they are interested in are Orlando and Miami. Mr. Smith has been to two cities in California. Mrs. Smith has been to one city in Florida.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? They have at least two candidate cities in California to visit.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nInterested(x, y) ::: x is interested in y.\nVisit(x, y) ::: x visits y.\nCandidate(x, y) ::: x is a candidate city to visit y.\nPremises:\n∃x ∃y (Interested(x, y) ∧ Visit(x, y)) ::: Mr. and Mrs. Smith make a travel plan, they want to go to a city in California or Florida, and where neither of them has ever been.\n∃x (Interested(x, California) ∧ Visit(x, California)) ::: Cities in California that they are interested in are San Francisco, Los Angeles, and San Diego.\n∃x (Interested(x, Florida) ∧ Visit(x, Florida)) ::: Cities in Florida that they are interested in are Orlando and Miami.\n∃x (Interested(x, California) ∧ Visit(x, California)) ∧ ∃x (Interested(x, Florida) ∧ Visit(x, Florida)) ::: Mr. Smith has been to two cities in California. Mrs. Smith has been to one city in Florida.\nConclusion:\n∃x ∃y (Interested(x, y) ∧ Visit(x, y) ∧ Candidate(x, California) ∧ Candidate(x, Florida)) ::: They have at least two candidate cities in California to visit.\n------\nProblem:\nAlice and Bob are playing a game. Alice is a student. Bob is a teacher. Alice is a friend of Bob. Bob is a friend of Alice. Alice is a friend of Carol. Carol is a friend of Alice. Bob is a friend of Carol. Carol is a friend of Bob.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Bob is a friend of Carol.\n###\nPred"
    ]
  },
  {
    "id": "FOLIO_train_400",
    "context": "Everything is either big or small. All big things are heavy. All small things are light. All heavy things are still. All light things are unstable. All unstable things are changing. All unstable things are kinetic. A bird is not both heavy and still.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A bird is still.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nBig(x) ::: x is big.\nSmall(x) ::: x is small.\nHeavy(x) ::: x is heavy.\nLight(x) ::: x is light.\nStill(x) ::: x is still.\nUnstable(x) ::: x is unstable.\nKinetic(x) ::: x is kinetic.\nPremises:\n∀x (Big(x) → Heavy(x)) ::: All big things are heavy.\n∀x (Small(x) → Light(x)) ::: All small things are light.\n∀x (Heavy(x) → Still(x)) ::: All heavy things are still.\n∀x (Light(x) → Unstable(x)) ::: All light things are unstable.\n∀x (Unstable(x) → Kinetic(x)) ::: All unstable things are kinetic.\n¬Big(bird) ∧ Still(bird) ::: A bird is not both heavy and still.\nConclusion:\nStill(bird) ::: A bird is still.\n------"
    ]
  },
  {
    "id": "FOLIO_train_401",
    "context": "Everything is either big or small. All big things are heavy. All small things are light. All heavy things are still. All light things are unstable. All unstable things are changing. All unstable things are kinetic. A bird is not both heavy and still.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A bird is not still.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nBig(x) ::: x is big.\nSmall(x) ::: x is small.\nHeavy(x) ::: x is heavy.\nLight(x) ::: x is light.\nStill(x) ::: x is still.\nUnstable(x) ::: x is unstable.\nKinetic(x) ::: x is kinetic.\nPremises:\n∀x (Big(x) → Heavy(x)) ::: All big things are heavy.\n∀x (Small(x) → Light(x)) ::: All small things are light.\n∀x (Heavy(x) → Still(x)) ::: All heavy things are still.\n∀x (Light(x) → Unstable(x)) ::: All light things are unstable.\n∀x (Unstable(x) → Kinetic(x)) ::: All unstable things are kinetic.\n¬Big(bird) ∧ Still(bird) ::: A bird is not both heavy and still.\nConclusion:\n¬Still(bird) ::: A bird is not still."
    ]
  },
  {
    "id": "FOLIO_train_402",
    "context": "Everything is either big or small. All big things are heavy. All small things are light. All heavy things are still. All light things are unstable. All unstable things are changing. All unstable things are kinetic. A bird is not both heavy and still.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A bird is kinetic and changing.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nBig(x) ::: x is big.\nSmall(x) ::: x is small.\nHeavy(x) ::: x is heavy.\nLight(x) ::: x is light.\nStill(x) ::: x is still.\nUnstable(x) ::: x is unstable.\nKinetic(x) ::: x is kinetic.\nChanging(x) ::: x is changing.\nPremises:\n∀x (Big(x) → Heavy(x)) ::: All big things are heavy.\n∀x (Small(x) → Light(x)) ::: All small things are light.\n∀x (Heavy(x) → Still(x)) ::: All heavy things are still.\n∀x (Light(x) → Unstable(x)) ::: All light things are unstable.\n∀x (Unstable(x) → Changing(x)) ::: All unstable things are changing.\n∀x (Kinetic(x) → Changing(x)) ::: All kinetic things are changing.\n¬Bird(bird"
    ]
  },
  {
    "id": "FOLIO_train_403",
    "context": "Everything is either big or small. All big things are heavy. All small things are light. All heavy things are still. All light things are unstable. All unstable things are changing. All unstable things are kinetic. A bird is not both heavy and still.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A bird is kinetic or changing.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nBig(x) ::: x is big.\nSmall(x) ::: x is small.\nHeavy(x) ::: x is heavy.\nLight(x) ::: x is light.\nStill(x) ::: x is still.\nUnstable(x) ::: x is unstable.\nKinetic(x) ::: x is kinetic.\nChanging(x) ::: x is changing.\nPremises:\n∀x (Big(x) → Heavy(x)) ::: All big things are heavy.\n∀x (Small(x) → Light(x)) ::: All small things are light.\n∀x (Heavy(x) → Still(x)) ::: All heavy things are still.\n∀x (Light(x) → Unstable(x)) ::: All light things are unstable.\n∀x (Unstable(x) → Changing(x)) ::: All unstable things are changing.\n∀x (Changing(x) → Kinetic(x)) ::: All changing things are kinetic.\n¬Bird(bird)"
    ]
  },
  {
    "id": "FOLIO_train_404",
    "context": "Everything is either big or small. All big things are heavy. All small things are light. All heavy things are still. All light things are unstable. All unstable things are changing. All unstable things are kinetic. A bird is not both heavy and still.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A bird is either kinetic or changing.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nBig(x) ::: x is big.\nSmall(x) ::: x is small.\nHeavy(x) ::: x is heavy.\nLight(x) ::: x is light.\nStill(x) ::: x is still.\nUnstable(x) ::: x is unstable.\nKinetic(x) ::: x is kinetic.\nChanging(x) ::: x is changing.\nPremises:\n∀x (Big(x) → Heavy(x)) ::: All big things are heavy.\n∀x (Small(x) → Light(x)) ::: All small things are light.\n∀x (Heavy(x) → Still(x)) ::: All heavy things are still.\n∀x (Light(x) → Unstable(x)) ::: All light things are unstable.\n∀x (Unstable(x) → Changing(x)) ::: All unstable things are changing.\n∀x (Changing(x) → Kinetic(x)) ::: All unstable things are kinetic.\n¬Bird(bird"
    ]
  },
  {
    "id": "FOLIO_train_405",
    "context": "Everything is either big or small. All big things are heavy. All small things are light. All heavy things are still. All light things are unstable. All unstable things are changing. All unstable things are kinetic. A bird is not both heavy and still.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If a bird is small or still, then the bird is either kinetic or changing.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig(x) ::: x is big.\nSmall(x) ::: x is small.\nHeavy(x) ::: x is heavy.\nLight(x) ::: x is light.\nStill(x) ::: x is still.\nUnstable(x) ::: x is unstable.\nKinetic(x) ::: x is kinetic.\nChanging(x) ::: x is changing.\nPremises:\n∀x (Big(x) → Heavy(x)) ::: All big things are heavy.\n∀x (Small(x) → Light(x)) ::: All small things are light.\n∀x (Heavy(x) → Still(x)) ::: All heavy things are still.\n∀x (Light(x) → Unstable(x)) ::: All light things are unstable.\n∀x (Unstable(x) → Changing(x)) ::: All unstable things are changing.\n∀x (Changing(x) → Kinetic(x)) ::: All unstable things are kinetic.\n¬Bird(bird)"
    ]
  },
  {
    "id": "FOLIO_train_406",
    "context": "DI Ray is a police procedural television series. DI Ray was created and written by Maya Sondhi. DI Ray was produced by Jed Mercurio. Maya Sondhi and Jed Mercurio are both British.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? DI Ray was created by a Brit.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nDIRay(x) ::: x is a police procedural television series.\nCreated(x, y) ::: x was created by y.\nWritten(x, y) ::: x was written by y.\nProduced(x, y) ::: x was produced by y.\nBritish(x) ::: x is British.\nPremises:\nDIRay(ray) ∧ Created(ray, maya) ∧ Written(ray, maya) ∧ Produced(ray, jed) ∧ British(maya) ∧ British(jed) ::: DI Ray is a police procedural television series. DI Ray was created and written by Maya Sondhi. DI Ray was produced by Jed Mercurio. Maya Sondhi and Jed Mercurio are both British.\nConclusion:\nBritish(created(ray, maya)) ::: DI Ray was created by a Brit.\n------\nProblem:\nThe following is a list of the top 100 most popular movies of 2017.\n1. Star Wars: The Last Jedi\n2"
    ]
  },
  {
    "id": "FOLIO_train_407",
    "context": "DI Ray is a police procedural television series. DI Ray was created and written by Maya Sondhi. DI Ray was produced by Jed Mercurio. Maya Sondhi and Jed Mercurio are both British.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Some Brit produced a television series.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nDIRay(x) ::: x is a television series.\nCreated(x, y) ::: x was created by y.\nWritten(x, y) ::: x was written by y.\nProduced(x, y) ::: x was produced by y.\nBrit(x) ::: x is a Brit.\nPremises:\nDIRay(ray) ∧ Created(ray, maya) ∧ Written(ray, maya) ∧ Produced(ray, jed) ::: DI Ray is a police procedural television series. DI Ray was created and written by Maya Sondhi. DI Ray was produced by Jed Mercurio.\nBrit(maya) ∧ Brit(jed) ::: Maya Sondhi and Jed Mercurio are both British.\nConclusion:\nSomeBrit(y) ∧ Produced(ray, y) ::: Some Brit produced a television series.\n------\nProblem:\nThe following is a list of the top 100 most popular songs of 2018.\n1. \"Perfect\" by Ed Sheer"
    ]
  },
  {
    "id": "FOLIO_train_408",
    "context": "All men are human. All gentlemen are men. All lawyers are gentlemen. All women are human. No sheep are human. If Mike is not both a human and a sheep, then Mike is either a man or a human.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mike is a woman.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nHuman(x) ::: x is a human.\nGentleman(x) ::: x is a gentleman.\nLawyer(x) ::: x is a lawyer.\nMan(x) ::: x is a man.\nSheep(x) ::: x is a sheep.\nPremises:\n∀x (Human(x) → Man(x)) ::: All men are human.\n∀x (Gentleman(x) → Man(x)) ::: All gentlemen are men.\n∀x (Lawyer(x) → Gentleman(x)) ::: All lawyers are gentlemen.\n∀x (Human(x) → Woman(x)) ::: All women are human.\n¬(Sheep(x) → Human(x)) ::: No sheep are human.\n(Not(Mike is a human) ∧ Not(Mike is a sheep)) → (Mike is a man) ∨ (Mike is a human) ::: If Mike is not both a human and a sheep, then Mike is either a man or a human.\nConclusion"
    ]
  },
  {
    "id": "FOLIO_train_409",
    "context": "All men are human. All gentlemen are men. All lawyers are gentlemen. All women are human. No sheep are human. If Mike is not both a human and a sheep, then Mike is either a man or a human.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Mike is a gentleman or a lawyer, then Mike is neither a woman nor a lawyer.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nHuman(x) ::: x is a human.\nGentleman(x) ::: x is a gentleman.\nLawyer(x) ::: x is a lawyer.\nMan(x) ::: x is a man.\nSheep(x) ::: x is a sheep.\nPremises:\n∀x (Human(x) → Man(x)) ::: All men are human.\n∀x (Gentleman(x) → Man(x)) ::: All gentlemen are men.\n∀x (Lawyer(x) → Gentleman(x)) ::: All lawyers are gentlemen.\n∀x (Human(x) → Woman(x)) ::: All women are human.\n¬Sheep(x) ::: No sheep are human.\n(Not(Mike, Human) ∧ Not(Mike, Sheep)) → (Mike, Man) ∨ (Mike, Human) ::: If Mike is not both a human and a sheep, then Mike is either a man or a human.\nConclusion:\n(Gentleman(M"
    ]
  },
  {
    "id": "FOLIO_train_410",
    "context": "All men are human. All gentlemen are men. All lawyers are gentlemen. All women are human. No sheep are human. If Mike is not both a human and a sheep, then Mike is either a man or a human.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Mike is not both a woman and a lawyer, then Mike is a lawyer.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nHuman(x) ::: x is a human.\nGentleman(x) ::: x is a gentleman.\nLawyer(x) ::: x is a lawyer.\nMan(x) ::: x is a man.\nSheep(x) ::: x is a sheep.\nPremises:\n∀x (Human(x) → Man(x)) ::: All men are human.\n∀x (Gentleman(x) → Man(x)) ::: All gentlemen are men.\n∀x (Lawyer(x) → Gentleman(x)) ::: All lawyers are gentlemen.\n∀x (Human(x) → Woman(x)) ::: All women are human.\n¬Sheep(x) ::: No sheep are human.\n(¬Human(x) ∧ ¬Sheep(x)) → (Human(x) ∨ Sheep(x)) ::: If Mike is not both a human and a sheep, then Mike is either a human or a sheep.\n¬(Man(x) ∧ Woman(x)) → (Man(x) ∨ Woman(x)) ::: If Mike is not both a woman and a lawyer, then Mike is either a woman or a lawyer.\nConclusion:\nLawyer(x) ⊕ Woman(x) ::: If Mike is not both a woman and a lawyer, then Mike is a lawyer.\n------"
    ]
  },
  {
    "id": "FOLIO_train_411",
    "context": "Some defenders are centerback. All defenders are soccer players. No soccer players are professional basketball players. All NBA players are professional basketball players. Stephen Curry is an NBA player.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Stephen Curry is a centerback.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nDefender(x) ::: x is a defender.\nCenterback(x) ::: x is a centerback.\nSoccerPlayer(x) ::: x is a soccer player.\nNBAPlayer(x) ::: x is an NBA player.\nProfessionalBasketballPlayer(x) ::: x is a professional basketball player.\nPremises:\n∀x (Defender(x) → SoccerPlayer(x)) ::: All defenders are soccer players.\n∀x (SoccerPlayer(x) → ¬NBAPlayer(x)) ::: No soccer players are professional basketball players.\nNBAPlayer(stephenCurry) ::: Stephen Curry is an NBA player.\nConclusion:\nCenterback(stephenCurry) ::: Stephen Curry is a centerback.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person"
    ]
  },
  {
    "id": "FOLIO_train_412",
    "context": "Some defenders are centerback. All defenders are soccer players. No soccer players are professional basketball players. All NBA players are professional basketball players. Stephen Curry is an NBA player.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Stephen Curry is not a centerback and a defender.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nDefender(x) ::: x is a defender.\nCenterback(x) ::: x is a centerback.\nSoccerPlayer(x) ::: x is a soccer player.\nNBAPlayer(x) ::: x is an NBA player.\nProfessionalBasketballPlayer(x) ::: x is a professional basketball player.\nPremises:\n∀x (Defender(x) → SoccerPlayer(x)) ::: All defenders are soccer players.\n∀x (SoccerPlayer(x) → ¬NBAPlayer(x)) ::: No soccer players are professional basketball players.\nNBAPlayer(stephenCurry) ::: Stephen Curry is an NBA player.\nConclusion:\n¬Defender(stephenCurry) ∧ SoccerPlayer(stephenCurry) ::: Stephen Curry is not a centerback and a defender.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either"
    ]
  },
  {
    "id": "FOLIO_train_413",
    "context": "Some defenders are centerback. All defenders are soccer players. No soccer players are professional basketball players. All NBA players are professional basketball players. Stephen Curry is an NBA player.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Stephen Curry is not a centerback and a defender, then Stephen Curry is neither a soccer player nor a professional basketball player.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nDefender(x) ::: x is a defender.\nCenterback(x) ::: x is a centerback.\nSoccerPlayer(x) ::: x is a soccer player.\nNBAPlayer(x) ::: x is an NBA player.\nProfessionalBasketballPlayer(x) ::: x is a professional basketball player.\nPremises:\n∀x (Defender(x) → SoccerPlayer(x)) ::: All defenders are soccer players.\n∀x (Defender(x) ⊕ NBAPlayer(x)) ::: Some defenders are centerback.\n∀x (SoccerPlayer(x) ⊕ NBAPlayer(x)) ::: All soccer players are professional basketball players.\nNBAPlayer(stephenCurry) ::: Stephen Curry is an NBA player.\nConclusion:\n¬(Centerback(stephenCurry) ∧ Defender(stephenCurry)) → (Centerback(stephenCurry) ∧ Defender(stephenCurry)) ⊕ ¬(Centerback(stephenCurry) ∨ Defender(stephenCurry)) ::: If Stephen Curry is not a centerback and a defender, then Stephen Curry is neither a soccer player nor a professional basketball player.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffe"
    ]
  },
  {
    "id": "FOLIO_train_414",
    "context": "If a person doesn't have enough money to buy a product, then that person can't buy it. Monitors are products. 4k monitors are more expensive than 1080 monitors and 2k monitors. John is a person. John doesn't have enough money to buy a 2k monitor.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? John can not buy the 1080 monitor.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nCanBuy(x, y) ::: x can buy y.\nEnoughMoney(x, y) ::: x has enough money to buy y.\nProduct(x) ::: x is a product.\nMonitor(x) ::: x is a monitor.\n4k(x) ::: x is a 4k monitor.\n1080(x) ::: x is a 1080 monitor.\n2k(x) ::: x is a 2k monitor.\nPremises:\n∀x (CanBuy(x, y) → EnoughMoney(x, y)) ::: If a person doesn't have enough money to buy a product, then that person can't buy it.\nMonitor(john) ∧ 4k(john) ∧ 1080(john) ∧ 2k(john) ::: Monitors are products. 4k monitors are more expensive than 1080 monitors and 2k monitors.\nEnoughMoney(john, 2k) ::: John doesn't have enough money to buy a 2k monitor.\nConclusion:\nCanBuy(john, 1080) ::: John can buy the 1080 monitor.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee"
    ]
  },
  {
    "id": "FOLIO_train_415",
    "context": "If a person doesn't have enough money to buy a product, then that person can't buy it. Monitors are products. 4k monitors are more expensive than 1080 monitors and 2k monitors. John is a person. John doesn't have enough money to buy a 2k monitor.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? John can not buy the 2k monitor.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nCanBuy(x, y) ::: x can buy y.\nEnoughMoney(x, y) ::: x has enough money to buy y.\nProduct(x) ::: x is a product.\nMonitor(x) ::: x is a monitor.\n4k(x) ::: x is a 4k monitor.\n1080(x) ::: x is a 1080 monitor.\n2k(x) ::: x is a 2k monitor.\nPremises:\n∀x (CanBuy(x, y) → EnoughMoney(x, y)) ::: If a person doesn't have enough money to buy a product, then that person can't buy it.\nMonitor(john) ∧ 4k(john) ∧ 2k(john) ∧ 1080(john) ::: Monitors are products. 4k monitors are more expensive than 1080 monitors and 2k monitors.\nEnoughMoney(john, 2k) ::: John doesn't have enough money to buy a 2k monitor.\nConclusion:\nCanBuy(john, 2k) ::: John can buy the 2k monitor.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about"
    ]
  },
  {
    "id": "FOLIO_train_416",
    "context": "All artificial satellites are important scientific achievements. Some artificial satellites are not U.S. inventions.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? All important scientific achievements are U.S. inventions.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nArtificialSatellite(x) ::: x is an artificial satellite.\nImportantScientificAchievement(x) ::: x is an important scientific achievement.\nU.S.Invention(x) ::: x is a U.S. invention.\nPremises:\n∀x (ArtificialSatellite(x) → ImportantScientificAchievement(x)) ::: All artificial satellites are important scientific achievements.\n∃x (ArtificialSatellite(x) ∧ ¬U.S.Invention(x)) ::: Some artificial satellites are not U.S. inventions.\nConclusion:\nImportantScientificAchievement(x) → U.S.Invention(x) ::: All important scientific achievements are U.S. inventions.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caff"
    ]
  },
  {
    "id": "FOLIO_train_417",
    "context": "Some cats are not pets. All cats are mammals.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Some mammals are not pets.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nCat(x) ::: x is a cat.\nPet(x) ::: x is a pet.\nMammal(x) ::: x is a mammal.\nPremises:\n∀x (Cat(x) → Mammal(x)) ::: All cats are mammals.\n∃x (Cat(x) ∧ ¬Pet(x)) ::: Some cats are not pets.\nConclusion:\n∃x (Mammal(x) ∧ ¬Pet(x)) ::: Some mammals are not pets.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffe"
    ]
  },
  {
    "id": "FOLIO_train_418",
    "context": "If people visit a coffee shop at least three times a week, then they are addicted to coffee or other caffeinated drinks. People either visit a coffee shop at least three times a week or order takeout at least once a day. If people make a lot of their own food at home using recipes and online guides, then they order takeout at least once a day. If people own at least one coffeemaker and one blender in their home, then they do not order takeout at least once a day. All people who lead very busy lives that include 12-hour work hours make a lot of their own food at home using recipes and online guides. Sam is either both addicted to coffee or other caffeinated drinks or leads very busy lives that include 12-hour work hours, or she is neither addicted to coffee and other caffeinated drinks nor leads very busy lives that include 12-hour work hours",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Sam is addicted to coffee and other caffeinated drinks.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nVisit(x, y) ::: x visits y at least y times a week.\nOrder(x, y) ::: x orders y at least y times a day.\nMake(x, y) ::: x makes y at least y times a day.\nRecipe(x) ::: x is a recipe.\nGuide(x) ::: x is an online guide.\nCoffeeShop(x) ::: x is a coffee shop.\nCaffeinatedDrink(x) ::: x is a caffeinated drink.\nCoffeemaker(x) ::: x is a coffeemaker.\nBlender(x) ::: x is a blender.\nTakeout(x) ::: x is takeout.\nPremises:\n∀x (Visit(x, y) → Order(x, y)) ::: If people visit a coffee shop at least three times a week, then they are addicted to coffee or other caffeinated drinks.\n∀x (Order(x, y) → Make(x, y)) ::: People either visit a coffee shop at least three times a week or order takeout at least once a day.\n∀x (Make(x, y) → Recipe(x) ∨ Guide(x)) ::: If people make a lot of their own food at home using recipes and online guides, then they order takeout at least once a"
    ]
  },
  {
    "id": "FOLIO_train_419",
    "context": "If people visit a coffee shop at least three times a week, then they are addicted to coffee or other caffeinated drinks. People either visit a coffee shop at least three times a week or order takeout at least once a day. If people make a lot of their own food at home using recipes and online guides, then they order takeout at least once a day. If people own at least one coffeemaker and one blender in their home, then they do not order takeout at least once a day. All people who lead very busy lives that include 12-hour work hours make a lot of their own food at home using recipes and online guides. Sam is either both addicted to coffee or other caffeinated drinks or leads very busy lives that include 12-hour work hours, or she is neither addicted to coffee and other caffeinated drinks nor leads very busy lives that include 12-hour work hours",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Sam owns at least one coffeemaker and one blender in her home.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nVisit(x, y) ::: x visits y at least once.\nTakeout(x, y) ::: x orders takeout at least once.\nMake(x, y) ::: x makes y at least once.\nRecipe(x, y) ::: x uses recipe y.\nOnlineGuide(x, y) ::: x uses online guide y.\nCoffeeShop(x) ::: x is a coffee shop.\nCaffeinatedDrink(x) ::: x is a caffeinated drink.\nCoffeemaker(x) ::: x is a coffeemaker.\nBlender(x) ::: x is a blender.\nPremises:\n∀x (Visit(x, y) → Takeout(x, y)) ::: If people visit a coffee shop at least three times a week, then they are addicted to coffee or other caffeinated drinks.\n∀x (Takeout(x, y) → Make(x, y)) ::: People either visit a coffee shop at least three times a week or order takeout at least once a day.\n∀x (Make(x, y) → Recipe(x, y) ∨ OnlineGuide(x, y)) ::: If people make a lot of their own food at home using recipes and online guides, then they order takeout at least once a day.\n∀x (Co"
    ]
  },
  {
    "id": "FOLIO_train_420",
    "context": "If people visit a coffee shop at least three times a week, then they are addicted to coffee or other caffeinated drinks. People either visit a coffee shop at least three times a week or order takeout at least once a day. If people make a lot of their own food at home using recipes and online guides, then they order takeout at least once a day. If people own at least one coffeemaker and one blender in their home, then they do not order takeout at least once a day. All people who lead very busy lives that include 12-hour work hours make a lot of their own food at home using recipes and online guides. Sam is either both addicted to coffee or other caffeinated drinks or leads very busy lives that include 12-hour work hours, or she is neither addicted to coffee and other caffeinated drinks nor leads very busy lives that include 12-hour work hours",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Sam either owns at least one coffeemaker and one blender in her home or orders takeout at least once a day.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nVisit(x, y) ::: x visits y at least once a week.\nTakeout(x, y) ::: x orders takeout at least once a day.\nRecipe(x) ::: x is a recipe.\nOnlineGuide(x) ::: x is an online guide.\nCoffeemaker(x) ::: x is a coffeemaker.\nBlender(x) ::: x is a blender.\nOwn(x, y) ::: x owns y.\nLead(x, y) ::: x leads y.\nWorkHours(x, y) ::: x works for y for at least y hours.\nPremises:\n∀x (Visit(x, y) → Takeout(x, y)) ::: If people visit a coffee shop at least three times a week, then they are addicted to coffee or other caffeinated drinks.\n∀x (Takeout(x, y) → Recipe(x) ∨ OnlineGuide(x)) ::: People either visit a coffee shop at least three times a week or order takeout at least once a day.\n∀x (Recipe(x) → Own(x, blender) ∧ Own(x, coffeemaker)) ::: If people make a lot of their own food at home using recipes and online guides, then they order takeout at least once a day.\n∀x (Own(x, blender) ∧ Own(x, coffeemaker) → ¬Takeout(x, y)) ::: If people own at least one coffeemaker and one blender in their home, then they do not order takeout at least once a day.\n∀x (Lead(x, y) → WorkHours(x, y) ≥ 12) ::: All people who lead very busy lives that include 12-hour work hours make a lot of their own food at home using recipes and online guides.\nSam(x) ::: x is Sam.\nAddicted(x) ::: x is addicted to coffee or other caffeinated drinks.\nLeads(x, y) ::: x leads y.\nWorkHours(x, y) ::: x works for y for at least y hours.\nOwn(x, y) ::: x owns y.\nConclusion:\nTakeout(sam, y) ::: Sam either orders takeout at least once a day or leads very busy lives that include 12-hour work hours.\nOwn(sam, blender) ∧ Own(sam, coffeemaker) ::: Sam owns at least one coffeemaker and one blender in her home.\n¬Takeout(sam, y) ::: Sam does not order takeout at least once a day.\n------"
    ]
  },
  {
    "id": "FOLIO_train_421",
    "context": "No professional basketball players are soccer players. All NBA players are professional basketball players. All defenders are soccer players. All centerbacks are defenders. Roger Federer is not an NBA player or a defender.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Roger Federer is a centerback.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nNBAPlayer(x) ::: x is an NBA player.\nProfessionalBasketballPlayer(x) ::: x is a professional basketball player.\nSoccerPlayer(x) ::: x is a soccer player.\nDefender(x) ::: x is a defender.\nCenterback(x) ::: x is a centerback.\nPremises:\n¬NBAPlayer(roger) ∧ ¬Defender(roger) ::: Roger Federer is not an NBA player or a defender.\n∀x (NBAPlayer(x) → ProfessionalBasketballPlayer(x)) ::: All NBA players are professional basketball players.\n∀x (Defender(x) → SoccerPlayer(x)) ::: All defenders are soccer players.\n∀x (Centerback(x) → Defender(x)) ::: All centerbacks are defenders.\nConclusion:\nCenterback(roger) ::: Roger Federer is a centerback.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\n###\nPredicates:\nDependent(x) ::: x is a person dependent on caffeine.\nDrinks(x) ::: x regularly drinks coffee.\nJokes(x) ::: x jokes about being addicted to caffeine.\nUnaware(x) ::: x is unaware that caffeine is a drug.\nStudent(x) ::: x is a student.\nPremises:\n∀x (Drinks(x) → Dependent(x)) ::: All people who regularly drink coffee are dependent on caffeine.\n∀x (Drinks(x) ⊕ Jokes(x)) ::: People either regularly drink coffee or joke about being addicted to caffeine.\n∀x (Jokes(x) → ¬Unaware(x)) ::: No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. \n(Student(rina"
    ]
  },
  {
    "id": "FOLIO_train_422",
    "context": "No professional basketball players are soccer players. All NBA players are professional basketball players. All defenders are soccer players. All centerbacks are defenders. Roger Federer is not an NBA player or a defender.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Roger Federer is not a centerback.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nNBAPlayer(x) ::: x is an NBA player.\nProfessionalBasketballPlayer(x) ::: x is a professional basketball player.\nSoccerPlayer(x) ::: x is a soccer player.\nDefender(x) ::: x is a defender.\nCenterback(x) ::: x is a centerback.\nPremises:\n¬(NBAPlayer(x) ∧ SoccerPlayer(x)) ::: No professional basketball players are soccer players.\n∀x (NBAPlayer(x) → ProfessionalBasketballPlayer(x)) ::: All NBA players are professional basketball players.\n∀x (Defender(x) → SoccerPlayer(x)) ::: All defenders are soccer players.\n∀x (Centerback(x) → Defender(x)) ::: All centerbacks are defenders.\n¬NBAPlayer(roger) ∧ ¬Defender(roger) ::: Roger Federer is not an NBA player or a defender.\nConclusion:\n¬Centerback(roger) ::: Roger Federer is not a centerback.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\n###\nPredicates:\nDependent(x) ::: x is a person dependent on caffeine.\nDrinks(x) ::: x regularly drinks coffee.\nJokes(x) ::: x jokes about being addicted to caffeine.\nUnaware(x) ::: x is unaware that caffeine is a drug.\nStudent(x) ::: x is a student.\nPremises:\n∀x (Drinks(x) → Dependent(x)) ::: All people who regularly drink coffee are dependent on caffeine.\n∀x (Drinks(x) ⊕ Jokes(x)) ::: People either regularly drink coffee or joke about being addicted to caffeine.\n∀x (Jokes(x) → ¬Unaware(x)) ::: No one who j"
    ]
  },
  {
    "id": "FOLIO_train_423",
    "context": "No professional basketball players are soccer players. All NBA players are professional basketball players. All defenders are soccer players. All centerbacks are defenders. Roger Federer is not an NBA player or a defender.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Roger Federer is a soccer player.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nNBAPlayer(x) ::: x is an NBA player.\nProfessionalBasketballPlayer(x) ::: x is a professional basketball player.\nSoccerPlayer(x) ::: x is a soccer player.\nCenterback(x) ::: x is a centerback.\nDefender(x) ::: x is a defender.\nPremises:\n¬NBAPlayer(roger) ∧ ¬Defender(roger) ::: Roger Federer is not an NBA player or a defender.\n∀x (NBAPlayer(x) → ProfessionalBasketballPlayer(x)) ::: All NBA players are professional basketball players.\n∀x (Defender(x) → SoccerPlayer(x)) ::: All defenders are soccer players.\n∀x (Centerback(x) → Defender(x)) ::: All centerbacks are defenders.\nConclusion:\nSoccerPlayer(roger) ::: Roger Federer is a soccer player.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\n###\nPredicates:\nDependent(x) ::: x is a person dependent on caffeine.\nDrinks(x) ::: x regularly drinks coffee.\nJokes(x) ::: x jokes about being addicted to caffeine.\nUnaware(x) ::: x is unaware that caffeine is a drug.\nStudent(x) ::: x is a student.\nPremises:\n∀x (Drinks(x) → Dependent(x)) ::: All people who regularly drink coffee are dependent on caffeine.\n∀x (Drinks(x) ⊕ Jokes(x)) ::: People either regularly drink coffee or joke about being addicted to caffeine.\n∀x (Jokes(x) → ¬Unaware(x)) ::: No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. \n(Student("
    ]
  },
  {
    "id": "FOLIO_train_424",
    "context": "Some teachers working at a pool are not nice. All teachers working at pools are pool managers. All pool managers are lifeguards. If someone is a lifeguard, then they work at a pool. Mary does not work at a pool.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mary is nice.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nTeacher(x) ::: x is a teacher.\nNice(x) ::: x is nice.\nPoolManager(x) ::: x is a pool manager.\nLifeguard(x) ::: x is a lifeguard.\nWorkAtPool(x) ::: x works at a pool.\nPremises:\n¬Nice(x) ⊕ Teacher(x) ::: Some teachers working at a pool are not nice.\n∀x (Teacher(x) → PoolManager(x)) ::: All teachers working at pools are pool managers.\n∀x (PoolManager(x) → Lifeguard(x)) ::: All pool managers are lifeguards.\n¬WorkAtPool(mary) ::: Mary does not work at a pool.\nConclusion:\nNice(mary) ::: Mary is nice.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\n###\nPredicates:\nDependent(x) ::: x is a person dependent on caffeine.\nDrinks(x) ::: x regularly drinks coffee.\nJokes(x) ::: x jokes about being addicted to caffeine.\nUnaware(x) ::: x is unaware that caffeine is a drug.\nStudent(x) ::: x is a student.\nPremises:\n∀x (Drinks(x) → Dependent(x)) ::: All people who regularly drink coffee are dependent on caffeine.\n∀x (Drinks(x) ⊕ Jokes(x)) ::: People either regularly drink coffee or joke about being addicted to caffeine.\n∀x (Jokes(x) → ¬Unaware(x)) ::: No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. \n(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Un"
    ]
  },
  {
    "id": "FOLIO_train_425",
    "context": "Some teachers working at a pool are not nice. All teachers working at pools are pool managers. All pool managers are lifeguards. If someone is a lifeguard, then they work at a pool. Mary does not work at a pool.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mary is not nice and is a teacher working at a pool.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nNice(x) ::: x is nice.\nTeacher(x) ::: x is a teacher.\nPool(x) ::: x is a pool.\nPoolManager(x) ::: x is a pool manager.\nLifeguard(x) ::: x is a lifeguard.\nWork(x, y) ::: x works at y.\nPremises:\n¬Nice(x) ∨ Teacher(x) ::: Some teachers working at a pool are not nice.\n∀x (Teacher(x) → PoolManager(x)) ::: All teachers working at pools are pool managers.\n∀x (PoolManager(x) → Lifeguard(x)) ::: All pool managers are lifeguards.\n¬Work(mary, pool) ::: Mary does not work at a pool.\nConclusion:\nNice(mary) ∧ Teacher(mary) ∧ Pool(mary) ∧ PoolManager(mary) ∧ Lifeguard(mary) ::: Mary is not nice and is a teacher working at a pool.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\n###\nPredicates:\nDependent(x) ::: x is a person dependent on caffeine.\nDrinks(x) ::: x regularly drinks coffee.\nJokes(x) ::: x jokes about being addicted to caffeine.\nUnaware(x) ::: x is unaware that caffeine is a drug.\nStudent(x) ::: x is a student.\nPremises:\n∀x (Drinks(x) → Dependent(x)) ::: All people who regularly drink coffee are dependent on caffeine.\n∀x (Drinks(x) ⊕ Jokes(x)) ::: People either regularly drink coffee or joke about being addicted to caffeine.\n∀x (Jokes(x) → ¬Unaware(x)) ::: No one who jokes about"
    ]
  },
  {
    "id": "FOLIO_train_426",
    "context": "Some teachers working at a pool are not nice. All teachers working at pools are pool managers. All pool managers are lifeguards. If someone is a lifeguard, then they work at a pool. Mary does not work at a pool.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mary is nice and is a teacher working at a pool.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nNice(x) ::: x is nice.\nTeacher(x) ::: x is a teacher.\nPool(x) ::: x is a pool.\nPoolManager(x) ::: x is a pool manager.\nLifeguard(x) ::: x is a lifeguard.\nPremises:\n¬Nice(x) ∨ Teacher(x) ::: Some teachers working at a pool are not nice.\n∀x (Teacher(x) → PoolManager(x)) ::: All teachers working at pools are pool managers.\n∀x (PoolManager(x) → Lifeguard(x)) ::: All pool managers are lifeguards.\n¬Teacher(mary) ::: Mary does not work at a pool.\nConclusion:\nNice(mary) ∧ Teacher(mary) ∧ Pool(mary) ∧ PoolManager(mary) ∧ Lifeguard(mary) ::: Mary is nice and is a teacher working at a pool.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\n###\nPredicates:\nDependent(x) ::: x is a person dependent on caffeine.\nDrinks(x) ::: x regularly drinks coffee.\nJokes(x) ::: x jokes about being addicted to caffeine.\nUnaware(x) ::: x is unaware that caffeine is a drug.\nStudent(x) ::: x is a student.\nPremises:\n∀x (Drinks(x) → Dependent(x)) ::: All people who regularly drink coffee are dependent on caffeine.\n∀x (Drinks(x) ⊕ Jokes(x)) ::: People either regularly drink coffee or joke about being addicted to caffeine.\n∀x (Jokes(x) → ¬Unaware(x)) ::: No one who jokes about being addicted to caffeine is unaware that caffe"
    ]
  },
  {
    "id": "FOLIO_train_427",
    "context": "Not all art pieces require talent. Everything that requires talent requires practice.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There exist art pieces that do not require practice.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nArtPiece(x) ::: x is an art piece.\nTalent(x) ::: x requires talent.\nPractice(x) ::: x requires practice.\nPremises:\n∀x (ArtPiece(x) → ¬Talent(x)) ::: Not all art pieces require talent.\n∀x (Talent(x) → Practice(x)) ::: Everything that requires talent requires practice.\nConclusion:\n∃x ArtPiece(x) ∧ ¬Talent(x) ::: There exist art pieces that do not require talent.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\n###\nPredicates:\nDependent(x) ::: x is a person dependent on caffeine.\nDrinks(x) ::: x regularly drinks coffee.\nJokes(x) ::: x jokes about being addicted to caffeine.\nUnaware(x) ::: x is unaware that caffeine is a drug.\nStudent(x) ::: x is a student.\nPremises:\n∀x (Drinks(x) → Dependent(x)) ::: All people who regularly drink coffee are dependent on caffeine.\n∀x (Drinks(x) ⊕ Jokes(x)) ::: People either regularly drink coffee or joke about being addicted to caffeine.\n∀x (Jokes(x) → ¬Unaware(x)) ::: No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. \n(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina)) ::: Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. \n¬(Dependent(rina) ∧ Student(rina"
    ]
  },
  {
    "id": "FOLIO_train_428",
    "context": "Bernarda Bryson Shahn was a painter and lithographer. Bernarda Bryson Shahn was born in Athens, Ohio. Bernarda Bryson Shahn was married to Ben Shahn. People born in Athens, Ohio are Americans.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Bernarda Bryson Shahn was born in Greece.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nBorn(x, y) ::: x was born in year y.\nAmerican(x) ::: x is an American.\nPremises:\nBorn(bernarda, year1903) ∧ Born(ben, year1916) ∧ Married(bernarda, ben) ::: Bernarda Bryson Shahn was born in Athens, Ohio. Bernarda Bryson Shahn was married to Ben Shahn.\nBorn(bernarda, year1903) ∧ American(bernarda) ::: People born in Athens, Ohio are Americans.\nConclusion:\nBorn(bernarda, year1903) ∧ Born(bernarda, year1903) ∧ American(bernarda) ::: Bernarda Bryson Shahn was born in Greece.\n------\nProblem:\nThe following is a list of the top 100 most popular names for baby boys in the United States in 2013.\n1. Jacob\n2. Mason\n3. William\n4. Michael\n5. Jayden\n6. Ethan\n7. Noah\n8. Alexander\n9. Daniel\n10. Anthony\n11. Aiden\n12. David\n13. James\n14. Christian\n15. Benjamin\n16. Matthew\n17. Andrew\n18. Joseph\n19. Elijah\n20. Christopher\n21. John\n22. Logan\n23. Joshua\n24. Samuel\n25. Caleb\n26. Lucas\n27. Ryan\n28. Jackson\n29. Gavin\n30. Jaxon\n31. Aaron\n32. Liam\n33. Owen\n34. Wyatt\n35. Isaiah\n36. Joshua\n37. Alexander\n38. Evan\n39. Jaxson\n40. Carter\n41. Dominic\n42. Nathan\n43. Dylan\n44. Landon\n45. Brandon\n46. Carter\n47. Matthew\n48. Nicholas\n49. Jaden\n50. Aiden\n51. Alexander\n52. Ethan\n53. Benjamin\n54. Christian\n55. Michael\n56. David\n57. Andrew\n58. James\n59. Noah\n60. Joseph\n61. Christopher\n62. John\n63. Logan\n64. Joshua\n65. Samuel\n66. Caleb\n67. Lucas\n68. Ryan\n69. Jackson\n70. Gavin\n71. Jaxon\n72. Aaron\n73. Liam\n74. Owen\n75. Wyatt\n76. Isaiah\n77. Josh"
    ]
  },
  {
    "id": "FOLIO_train_429",
    "context": "Bernarda Bryson Shahn was a painter and lithographer. Bernarda Bryson Shahn was born in Athens, Ohio. Bernarda Bryson Shahn was married to Ben Shahn. People born in Athens, Ohio are Americans.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Bernarda Bryson Shahn was American.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nAmerican(x) ::: x is an American.\nBorn(x, y) ::: x was born in year y.\nMarried(x, y) ::: x is married to y.\nPremises:\nBorn(bernarda, year1903) ∧ Married(bernarda, ben) ::: Bernarda Bryson Shahn was born in Athens, Ohio. Bernarda Bryson Shahn was married to Ben Shahn.\nAmerican(ben) ::: Ben Shahn is an American.\nBorn(ben, year1912) ∧ Married(ben, bernarda) ::: Ben Shahn was born in year 1912. Ben Shahn is married to Bernarda Bryson Shahn.\nConclusion:\nAmerican(bernarda) ::: Bernarda Bryson Shahn was American.\n------\nProblem:\nThe following is a list of the top 100 most popular names in the United States for the year 2000.\n1. Michael\n2. Christopher\n3. Joshua\n4. Matthew\n5. Andrew\n6. David\n7. Joseph\n8. Daniel\n9. Jason\n10. John\n11. James\n12. Robert\n13. Ryan\n14. Benjamin\n15. Nicholas\n16. Anthony\n17. Brian\n18. Kevin\n19. Timothy\n20. Steven\n21. Eric\n22. Matthew\n23. Mark\n24. Paul\n25. William\n26. Brandon\n27. Scott\n28. Adam\n29. Michael\n30. Daniel\n31. Christopher\n32. Joshua\n33. Matthew\n34. Andrew\n35. David\n36. Joseph\n37. Daniel\n38. Jason\n39. John\n40. James\n41. Robert\n42. Ryan\n43. Benjamin\n44. Nicholas\n45. Anthony\n46. Brian\n47. Kevin\n48. Timothy\n49. Steven\n50. Eric\n51. Matthew\n52. Mark\n53. Paul\n54. William\n55. Brandon\n56. Scott\n57. Adam\n58. Michael\n59. Daniel\n60. Christopher\n61. Joshua\n62. Matthew\n63. Andrew\n64. David\n65. Joseph\n66. Daniel\n67. Jason\n68. John\n69. James\n70. Robert\n71. Ryan\n72. Benjamin\n73. Nicholas\n74. Anthony\n75. Brian\n76. Kevin\n77. Timothy\n78. Steven\n79. Eric\n80. Matthew\n81. Mark\n82. Paul\n83. William"
    ]
  },
  {
    "id": "FOLIO_train_430",
    "context": "Bernarda Bryson Shahn was a painter and lithographer. Bernarda Bryson Shahn was born in Athens, Ohio. Bernarda Bryson Shahn was married to Ben Shahn. People born in Athens, Ohio are Americans.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Bernarda Bryson Shahn had been divorced once.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nBorn(x, y) ::: x was born in year y.\nAmerican(x) ::: x is an American.\nMarried(x, y) ::: x is married to y.\nDivorced(x, y) ::: x was divorced from y.\nPremises:\nBorn(bernarda, year1903) ∧ American(bernarda) ::: Bernarda Bryson Shahn was born in Athens, Ohio.\nMarried(bernarda, ben) ::: Bernarda Bryson Shahn was married to Ben Shahn.\nDivorced(bernarda, ben) ::: Bernarda Bryson Shahn was divorced from Ben Shahn.\nConclusion:\nDivorced(bernarda, ben) ::: Bernarda Bryson Shahn had been divorced once.\n------"
    ]
  },
  {
    "id": "FOLIO_train_431",
    "context": "If people upgrade to the newest iPhone model every year, then they are not saving money for a down payment on a new house. If people enjoy reading about tech specs and keeping up to date on the latest technology, then they upgrade to the newest iPhone model every year. People either are saving money for a down payment on a new house or they live in apartments in big metropolitan cities. If people live with at least one roommate then they do not own at least one pet. All people who own at least one pet live with at least one roommate. If Emma does not both own at least one pet and live in apartments in big metropolitan cities, then Emma either owns at least one pet and lives in an apartment in big metropolitan cities, or she neither owns a pet nor lives in an apartment in big metropolitan cities.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Emma lives with at least one roommate.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nUpgrade(x, y) ::: x upgrades to model y.\nSaving(x) ::: x is saving money for a down payment on a new house.\nDownPayment(x) ::: x is saving money for a down payment on a new house.\nEnjoy(x, y) ::: x enjoys y.\nTechSpec(x) ::: x is a tech spec.\nKeepUpToDate(x) ::: x keeps up to date on the latest technology.\nNewest(x) ::: x is the newest model.\nPet(x) ::: x is a pet.\nRoommate(x, y) ::: x is a roommate of y.\nApartment(x) ::: x is an apartment.\nBigMetropolitanCity(x"
    ]
  },
  {
    "id": "FOLIO_train_432",
    "context": "If people upgrade to the newest iPhone model every year, then they are not saving money for a down payment on a new house. If people enjoy reading about tech specs and keeping up to date on the latest technology, then they upgrade to the newest iPhone model every year. People either are saving money for a down payment on a new house or they live in apartments in big metropolitan cities. If people live with at least one roommate then they do not own at least one pet. All people who own at least one pet live with at least one roommate. If Emma does not both own at least one pet and live in apartments in big metropolitan cities, then Emma either owns at least one pet and lives in an apartment in big metropolitan cities, or she neither owns a pet nor lives in an apartment in big metropolitan cities.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Emma enjoys reading about tech specs and keeping up to date on the latest technology.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nUpgrade(x, y) ::: x upgrades to model y.\nSaving(x) ::: x is saving money for a down payment on a new house.\nDownPayment(x) ::: x is saving money for a down payment on a new house.\nEnjoy(x, y) ::: x enjoys y.\nRead(x, y) ::: x reads about y.\nTechSpec(x) ::: x is a tech spec.\nKeepUpToDate(x) ::: x keeps up to date on y.\nLatest(x) ::: x is the latest y.\nPremises:\n∀x (Upgrade(x, y) → Saving(x)) ::: If people upgrade to the newest iPhone model every year, then they are not saving money for a down"
    ]
  },
  {
    "id": "FOLIO_train_433",
    "context": "If you are on the payroll, then you are being paid by the school. If someone has a job at a school, then they are on the payroll. All faculty members have a job at a school. One can either be a faculty member or a teacher. Every teacher has students. If Nancy is a teacher, then they are on the payroll. If Nancy is not a teacher, then they are not paid by the school.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Nancy is a faculty member.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nOnPayroll(x) ::: x is on the payroll.\nPaidBySchool(x) ::: x is paid by the school.\nHasJob(x, y) ::: x has a job at y.\nFacultyMember(x) ::: x is a faculty member.\nTeacher(x) ::: x is a teacher.\nStudent(x) ::: x is a student.\nPremises:\nOnPayroll(x) → PaidBySchool(x) ::: If you are on the payroll, then you are being paid by the school.\nHasJob(x, y) → OnPayroll(x) ::: If someone has a job at a school, then they are on the payroll.\n∀x (FacultyMember(x) → HasJob(x"
    ]
  },
  {
    "id": "FOLIO_train_434",
    "context": "If you are on the payroll, then you are being paid by the school. If someone has a job at a school, then they are on the payroll. All faculty members have a job at a school. One can either be a faculty member or a teacher. Every teacher has students. If Nancy is a teacher, then they are on the payroll. If Nancy is not a teacher, then they are not paid by the school.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Nancy is paid by the school and has students.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nOnPayroll(x) ::: x is on the payroll.\nPaidBy(x, y) ::: x is paid by y.\nFacultyMember(x) ::: x is a faculty member.\nTeacher(x) ::: x is a teacher.\nStudent(x) ::: x is a student.\nPremises:\n∀x (FacultyMember(x) → OnPayroll(x)) ::: If someone has a job at a school, then they are on the payroll.\n∀x (Teacher(x) → FacultyMember(x)) ::: All faculty members have a job at a school.\n∀x (Teacher(x) ∨ Teacher(x)) ::: One can either be a faculty member or a teacher.\n∀x (T"
    ]
  },
  {
    "id": "FOLIO_train_435",
    "context": "If you are on the payroll, then you are being paid by the school. If someone has a job at a school, then they are on the payroll. All faculty members have a job at a school. One can either be a faculty member or a teacher. Every teacher has students. If Nancy is a teacher, then they are on the payroll. If Nancy is not a teacher, then they are not paid by the school.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Nancy is not paid by the school and has students.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nOnThePayroll(x) ::: x is on the payroll.\nPaidBy(x, y) ::: x is paid by y.\nFacultyMember(x) ::: x is a faculty member.\nTeacher(x) ::: x is a teacher.\nStudent(x) ::: x is a student.\nPremises:\n∀x (FacultyMember(x) → OnThePayroll(x)) ::: If someone has a job at a school, then they are on the payroll.\n∀x (Teacher(x) → FacultyMember(x)) ::: All faculty members have a job at a school.\n∀x (Teacher(x) ∨ Teacher(x)) ::: One can either be a faculty member or a teacher.\n∀x"
    ]
  },
  {
    "id": "FOLIO_train_436",
    "context": "Kangaroo is an animal. No Kangaroos live in Germany. If Jane saves enough money for the summer, she will fly to Germany. If Jane flies to Germany, she will go to the Berlin Zoo. If someone goes to the Berlin Zoo, they will see some of the animals that live in Germany.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Jane saves enough money for the summer, she will see a kangaroo.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nKangaroo(x) ::: x is a kangaroo.\nGermany(x) ::: x is in Germany.\nLives(x, y) ::: x lives in y.\nSave(x, y) ::: x saves y.\nFly(x, y) ::: x flies to y.\nGo(x, y) ::: x goes to y.\nSee(x, y) ::: x sees y.\nPremises:\nKangaroo(kangaroo) ::: Kangaroo is an animal.\n¬Germany(kangaroo) ::: No Kangaroos live in Germany.\n(Save(jane, summer) ∧ Fly(jane, germany)) → Go(jane, berlinZoo) ::: If"
    ]
  },
  {
    "id": "FOLIO_train_437",
    "context": "If a class has prerequisites the student must take the prerequisites to take the class. If a class has no prerequisites, then the student can take the class CPSC 201 and CPSC 223 are prerequisites for CPSC 323. Intro Microeconomics is the only prerequisite for Intermediate Microeconomics. Intro Geology has no prerequisites.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? CPSC 201 has no prerequisites.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nPrerequisite(x, y) ::: x is a prerequisite of y.\nTake(x, y) ::: x takes y.\nClass(x) ::: x is a class.\nPremises:\n∀x (Prerequisite(x, y) → Take(x, y)) ::: If a class has prerequisites the student must take the prerequisites to take the class.\nCPSC 201 ⊕ Prerequisite(CPSC 201, CPSC 223) ::: CPSC 201 has prerequisites.\nCPSC 201 ⊕ Prerequisite(CPSC 201, CPSC 323) ::: CPSC 201 has prerequisites."
    ]
  },
  {
    "id": "FOLIO_train_438",
    "context": "If a class has prerequisites the student must take the prerequisites to take the class. If a class has no prerequisites, then the student can take the class CPSC 201 and CPSC 223 are prerequisites for CPSC 323. Intro Microeconomics is the only prerequisite for Intermediate Microeconomics. Intro Geology has no prerequisites.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If a student took CPSC 201 but did not take CPSC 223, they can take CPSC 323.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nPrerequisite(x, y) ::: x is a prerequisite for y.\nTake(x, y) ::: x takes y.\nPremises:\n∀x (Prerequisite(x, y) → Take(x, y)) ::: If a class has prerequisites the student must take the prerequisites to take the class.\nCPSC 201 ∧ Prerequisite(CPSC 201, CPSC 223) ::: CPSC 201 is a prerequisite for CPSC 223.\nCPSC 223 ∧ Prerequisite(CPSC 223, CPSC 323) ::: CPSC 223 is a prerequisite for CPS"
    ]
  },
  {
    "id": "FOLIO_train_439",
    "context": "If a class has prerequisites the student must take the prerequisites to take the class. If a class has no prerequisites, then the student can take the class CPSC 201 and CPSC 223 are prerequisites for CPSC 323. Intro Microeconomics is the only prerequisite for Intermediate Microeconomics. Intro Geology has no prerequisites.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A student cannot take Intro Geology.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nPrerequisite(x, y) ::: x is a prerequisite for y.\nCanTake(x, y) ::: x can take y.\nPremises:\n∀x (Prerequisite(x, y) → CanTake(x, y)) ::: If a class has prerequisites the student must take the prerequisites to take the class.\nPrerequisite(CPSC201, CPSC323) ∧ Prerequisite(CPSC223, CPSC323) ::: CPSC 201 and CPSC 223 are prerequisites for CPSC 323.\nPrerequisite(ECON101, ECON201) ::: Intro Microeconomics is"
    ]
  },
  {
    "id": "FOLIO_train_440",
    "context": "If a class has prerequisites the student must take the prerequisites to take the class. If a class has no prerequisites, then the student can take the class CPSC 201 and CPSC 223 are prerequisites for CPSC 323. Intro Microeconomics is the only prerequisite for Intermediate Microeconomics. Intro Geology has no prerequisites.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Intermediate Microeconomics has one prerequisite.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nPrerequisite(x, y) ::: x is a prerequisite of y.\nTake(x, y) ::: x takes y.\nPremises:\n∀x (Prerequisite(x, y) → Take(x, y)) ::: If a class has prerequisites the student must take the prerequisites to take the class.\n∃x (Prerequisite(x, y) ∧ ¬Prerequisite(x, y)) ::: If a class has no prerequisites, then the student can take the class\nCPSC 201 ∧ CPSC 223 ∧ ¬CPSC 323 ::: CPSC 201 and CPSC 223 are prerequisites for CPSC 323.\nIntroMicroeconomics ∧ ¬IntroMicroeconomics ::: Intro Microeconomics is the only prerequisite for Intermediate Microeconomics.\nIntroGeology ∧ ¬IntroGeology ::: Intro Geology has no prerequisites.\nConclusion:\n∃y (Prerequisite(y, IntroMicroeconomics) ∧ ¬Prerequisite(y, IntroMicroeconomics)) ::: Intermediate Microeconomics has one prerequisite.\n------"
    ]
  },
  {
    "id": "FOLIO_train_441",
    "context": "A heptalogy, is a compound literary or narrative work that is made up of seven distinct works. The Harry Potter series consists of 7 distinct works. The Chronicles of Narnia consists of 7 distinct works.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Harry Potter series of books is a heptalogy.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nHeptalogy(x) ::: x is a heptalogy.\nCompound(x, y) ::: x is a compound of y.\nLiterary(x) ::: x is a literary work.\nNarrative(x) ::: x is a narrative work.\nWork(x) ::: x is a work.\nDistinct(x, y) ::: x is distinct from y.\nPremises:\nHeptalogy(harryPotterSeries) ::: The Harry Potter series is a heptalogy.\nHeptalogy(chroniclesOfNarnia) ::: The Chronicles of Narnia is a heptalogy.\nCompound(harryPotterSeries, 7) ::: The Harry Potter series consists of 7 distinct works.\nCompound(chroniclesOfNarnia, 7) ::: The Chronicles of Narnia consists of 7 distinct works.\nConclusion:\nHeptalogy(harryPotterSeries) ::: The Harry Potter series of books is a heptalogy.\n------\nProblem:\nA person who is a member of the United States Congress is a member of the United States House of Representatives or the United States Senate. A person who is a member of the United States House of Representatives is a member of the Democratic Party or the Republican Party. A person who is a member of the United"
    ]
  },
  {
    "id": "FOLIO_train_442",
    "context": "A heptalogy, is a compound literary or narrative work that is made up of seven distinct works. The Harry Potter series consists of 7 distinct works. The Chronicles of Narnia consists of 7 distinct works.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Chronicles of Narnia series of books is not a heptalogy.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nHeptalogy(x) ::: x is a heptalogy.\nCompound(x) ::: x is a compound work.\nLiterary(x) ::: x is a literary work.\nNarrative(x) ::: x is a narrative work.\nWork(x) ::: x is a work.\nDistinct(x, y) ::: x and y are distinct.\nPremises:\nHeptalogy(harryPotter) ∧ Literary(harryPotter) ∧ Narrative(harryPotter) ::: The Harry Potter series consists of 7 distinct works.\nHeptalogy(chroniclesOfNarnia) ∧ Literary(chroniclesOfNarnia) ∧ Narrative(chroniclesOfNarnia) ::: The Chronicles of Narnia consists of 7 distinct works.\nCompound(harryPotter) ∧ Compound(chroniclesOfNarnia) ::: The Harry Potter series and The Chronicles of Narnia are compound works.\nConclusion:\n¬Heptalogy(chroniclesOfNarnia) ::: The Chronicles of Narnia series of books is not a heptalogy.\n------\nProblem:\nA person who is a member of the United States Congress is a member of the House of Representatives or a member of the Senate. A person"
    ]
  },
  {
    "id": "FOLIO_train_443",
    "context": "A heptalogy, is a compound literary or narrative work that is made up of seven distinct works. The Harry Potter series consists of 7 distinct works. The Chronicles of Narnia consists of 7 distinct works.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Lord of Rings is a heptalogy.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nHeptalogy(x) ::: x is a heptalogy.\nCompound(x, y) ::: x is a compound of y.\nLiterary(x) ::: x is a literary work.\nNarrative(x) ::: x is a narrative work.\nWork(x) ::: x is a work.\nDistinct(x, y) ::: x is distinct from y.\nPremises:\nHeptalogy(harryPotter) ∧ Literary(harryPotter) ∧ Narrative(harryPotter) ::: The Harry Potter series consists of 7 distinct works.\nHeptalogy(chroniclesOfNarnia) ∧ Literary(chroniclesOfNarnia) ∧ Narrative(chroniclesOfNarnia) ::: The Chronicles of Narnia consists of 7 distinct works.\nCompound(harryPotter, chroniclesOfNarnia) ∧ Literary(harryPotter) ∧ Literary(chroniclesOfNarnia) ∧ Narrative(harryPotter) ∧ Narrative(chroniclesOfNarnia) ::: The Harry Potter series consists of 7 distinct works.\nThe Chronicles of Narnia consists of 7 distinct works.\nConclusion:\nHeptalogy(lordOfRings) :"
    ]
  },
  {
    "id": "FOLIO_train_444",
    "context": "All people who attend Renaissance fairs regularly enjoy dressing up in old-fashioned and historical period clothing. If people are fascinated by the history of the Renaissance and other past eras, then they attend Renaissance fairs regularly. People are either fascinated by the history of the Renaissance and other past eras, or are not nostalgic academics who enjoy learning. If people are focused on the future and industry professions, then they are not nostalgic academics who enjoy learning. If people are historical professors who are passionate about their job and subject, then they are nostalgic academics who enjoy learning. If Clyde is not focused on the future and industry professions, then he is neither focused on the future and industry professions nor enjoys dressing up in old-fashioned and historical period clothing.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Clyde attends Renaissance fairs regularly.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nAttends(x, y) ::: x attends y.\nEnjoys(x, y) ::: x enjoys y.\nFascinated(x, y) ::: x is fascinated by y.\nNostalgic(x) ::: x is nostalgic.\nAcademic(x) ::: x is an academic.\nLearning(x) ::: x enjoys learning.\nFuture(x) ::: x is focused on the future.\nIndustry(x) ::: x is focused on industry.\nProfession(x) ::: x is a professional.\nPassionate(x) ::: x is passionate about x.\nSubject(x, y) ::: x is a subject of y.\nJob(x) ::: x is a job.\nPremises:\n∀x (Attends(x, renaissanceFair) → Enjoys(x, dressingUpInOldFashionedAndHistoricalPeriodClothing)) ::: All people who attend Renaissance fairs regularly enjoy dressing up in old-fashioned and historical period clothing.\n∀x (Fascinated(x, historyOfRenaissanceAndOtherPastEras) → Attends(x, renaissanceFair)) ::: If people are fascinated by the history of the Renaissance and other past eras, then they attend Renaissance fairs regularly"
    ]
  },
  {
    "id": "FOLIO_train_445",
    "context": "All people who attend Renaissance fairs regularly enjoy dressing up in old-fashioned and historical period clothing. If people are fascinated by the history of the Renaissance and other past eras, then they attend Renaissance fairs regularly. People are either fascinated by the history of the Renaissance and other past eras, or are not nostalgic academics who enjoy learning. If people are focused on the future and industry professions, then they are not nostalgic academics who enjoy learning. If people are historical professors who are passionate about their job and subject, then they are nostalgic academics who enjoy learning. If Clyde is not focused on the future and industry professions, then he is neither focused on the future and industry professions nor enjoys dressing up in old-fashioned and historical period clothing.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Clyde is a history professor who is passionate about his job and subject.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nAttend(x, y) ::: x attends y.\nEnjoy(x, y) ::: x enjoys y.\nFascinated(x, y) ::: x is fascinated by y.\nNostalgic(x) ::: x is nostalgic.\nAcademic(x) ::: x is an academic.\nLearn(x, y) ::: x learns y.\nFocus(x, y) ::: x focuses on y.\nIndustry(x) ::: x is an industry professional.\nProfessor(x, y) ::: x is a professor of y.\nPassionate(x, y) ::: x is passionate about y.\nSubject(x, y) ::: x is a subject of y.\nPremises:\n∀x (Attend(x, renaissanceFair) → Enjoy(x, dressUpInOldFashionedAndHistoricalPeriodClothing)) ::: All people who attend Renaissance fairs regularly enjoy dressing up in old-fashioned and historical period clothing.\n∀x (Fascinated(x, historyOfRenaissanceAndOtherPastEras) → Attend(x, renaissanceFair)) ::: If people are fascinated by the history of the Renaissance and other past eras, then they attend Renaissance fairs regularly.\n∀x"
    ]
  },
  {
    "id": "FOLIO_train_446",
    "context": "All people who attend Renaissance fairs regularly enjoy dressing up in old-fashioned and historical period clothing. If people are fascinated by the history of the Renaissance and other past eras, then they attend Renaissance fairs regularly. People are either fascinated by the history of the Renaissance and other past eras, or are not nostalgic academics who enjoy learning. If people are focused on the future and industry professions, then they are not nostalgic academics who enjoy learning. If people are historical professors who are passionate about their job and subject, then they are nostalgic academics who enjoy learning. If Clyde is not focused on the future and industry professions, then he is neither focused on the future and industry professions nor enjoys dressing up in old-fashioned and historical period clothing.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Clyde is a history professor who is passionate about his job and subject, or is not a nostalgic academic who enjoys learning.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAttend(x, y) ::: x attends y.\nEnjoy(x, y) ::: x enjoys y.\nFascinate(x, y) ::: x fascinates y.\nNostalgic(x) ::: x is nostalgic.\nAcademic(x) ::: x is an academic.\nLearn(x, y) ::: x learns y.\nFocus(x, y) ::: x focuses on y.\nIndustry(x) ::: x is an industry professional.\nProfessor(x) ::: x is a professor.\nPassionate(x) ::: x is passionate about y.\nSubject(x, y) ::: x is a subject of y.\nPremises:\n∀x (Attend(x, renaissanceFair) → Enjoy(x, dressUpInOldFashionedAndHistoricalPeriodClothing)) ::: All people who attend Renaissance fairs regularly enjoy dressing up in old-fashioned and historical period clothing.\n∀x (Fascinate(x, historyOfRenaissanceAndOtherPastEras) → Attend(x, renaissanceFair)) ::: If people are fascinated by the history of the Renaissance and other past eras, then they attend Renaissance fairs regularly.\n∀x (Academic(x) ∧ ¬"
    ]
  },
  {
    "id": "FOLIO_train_447",
    "context": "No sports cars are vehicles intended to be driven at moderate speeds. All automobiles designed for family use are vehicles intended to be driven at moderate speeds.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? No sports cars are automobiles designed for family use.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nSportsCar(x) ::: x is a sports car.\nVehicleIntendedToBeDrivenAtModerateSpeeds(x) ::: x is a vehicle intended to be driven at moderate speeds.\nAutomobileDesignedForFamilyUse(x) ::: x is an automobile designed for family use.\nPremises:\n¬SportsCar(x) ∧ VehicleIntendedToBeDrivenAtModerateSpeeds(x) ::: No sports cars are vehicles intended to be driven at moderate speeds.\nAutomobileDesignedForFamilyUse(x) ∧ VehicleIntendedToBeDrivenAtModerateSpeeds(x) ::: All automobiles designed for family use are vehicles intended to be driven at moderate speeds.\nConclusion:\n¬AutomobileDesignedForFamilyUse(x) ∧ SportsCar(x) ::: No automobiles designed for family use are sports cars.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug"
    ]
  },
  {
    "id": "FOLIO_train_448",
    "context": "If people work well in teams in their workplace, then they get along with all their colleagues at their work. If people come to work every day with a positive attitude, then they work well in teams in their workplace. People either come into work every day with a positive attitude or are always tired every morning. If people get many promotions from their boss at work, then they receive negative feedback from teams at work. Kat is either both a person who works well in teams in their workplace and is always tired every morning, or she neither works well in teams in their workplace nor is always tired every morning.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Kat is a person who comes to work every day with a positive attitude.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nWorkWell(x, y) ::: x works well in teams in y.\nGetAlong(x, y) ::: x gets along with y.\nPositiveAttitude(x) ::: x comes to work every day with a positive attitude.\nTired(x) ::: x is always tired every morning.\nPromotion(x, y) ::: x receives a promotion from y.\nFeedback(x, y) ::: x receives negative feedback from y.\nPremises:\n∀x (WorkWell(x, y) → GetAlong(x, y)) ::: If people work well in teams in their workplace, then they get along with all their colleagues at their work.\n∀x (PositiveAttitude(x) → WorkWell(x, y)) ::: If people come to work every day with a positive attitude, then they work well in teams in their workplace.\n∀x (Tired(x) ⊕ PositiveAttitude(x)) ::: People either come into work every day with a positive attitude or are always tired every morning.\n∀x (Promotion(x, y) → Feedback(x, y)) ::: If people get many promotions from their boss at work, then they receive negative feedback from teams at work.\n(WorkWell(kat, workplace) ∧ GetAlong(kat, allColleagues)) ⊕ ¬"
    ]
  },
  {
    "id": "FOLIO_train_449",
    "context": "If people work well in teams in their workplace, then they get along with all their colleagues at their work. If people come to work every day with a positive attitude, then they work well in teams in their workplace. People either come into work every day with a positive attitude or are always tired every morning. If people get many promotions from their boss at work, then they receive negative feedback from teams at work. Kat is either both a person who works well in teams in their workplace and is always tired every morning, or she neither works well in teams in their workplace nor is always tired every morning.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Kat gets along with her colleagues at her work and receives negative feedback from teams at her work.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nWorkWell(x, y) ::: x works well in teams in y.\nGetAlong(x, y) ::: x gets along with y.\nColleague(x, y) ::: x is a colleague of y.\nPositiveAttitude(x) ::: x comes to work every day with a positive attitude.\nTired(x) ::: x is always tired every morning.\nPromotion(x, y) ::: x receives a promotion from y.\nFeedback(x, y) ::: x receives negative feedback from y.\nPremises:\n∀x (WorkWell(x, y) → GetAlong(x, y)) ::: If people work well in teams in their workplace, then they get along with all their colleagues at their work.\n∀x (PositiveAttitude(x) → WorkWell(x, y)) ::: If people come to work every day with a positive attitude, then they work well in teams in their workplace.\n∀x (Tired(x) ⊕ PositiveAttitude(x)) ::: People either come into work every day with a positive attitude or are always tired every morning.\n∀x (Promotion(x, y) → Feedback(x, y)) ::: If people get many promotions from their boss at work, then they receive negative feedback from teams at work.\n(WorkWell(kat, workplace"
    ]
  },
  {
    "id": "FOLIO_train_450",
    "context": "If people work well in teams in their workplace, then they get along with all their colleagues at their work. If people come to work every day with a positive attitude, then they work well in teams in their workplace. People either come into work every day with a positive attitude or are always tired every morning. If people get many promotions from their boss at work, then they receive negative feedback from teams at work. Kat is either both a person who works well in teams in their workplace and is always tired every morning, or she neither works well in teams in their workplace nor is always tired every morning.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Kat either gets along with her colleagues at her work or receives negative feedback from teams at her work.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nWorkWell(x, y) ::: x works well in teams in y.\nGetAlong(x, y) ::: x gets along with y.\nPositiveAttitude(x) ::: x comes to work every day with a positive attitude.\nTired(x) ::: x is always tired every morning.\nPromotion(x, y) ::: x receives a promotion from y.\nFeedback(x, y) ::: x receives negative feedback from y.\nPremises:\n∀x (WorkWell(x, y) → GetAlong(x, y)) ::: If people work well in teams in their workplace, then they get along with all their colleagues at their work.\n∀x (PositiveAttitude(x) → WorkWell(x, y)) ::: If people come to work every day with a positive attitude, then they work well in teams in their workplace.\n∀x (Tired(x) ⊕ PositiveAttitude(x)) ::: People either come into work every day with a positive attitude or are always tired every morning.\n∀x (Promotion(x, y) → Feedback(x, y)) ::: If people get many promotions from their boss at work, then they receive negative feedback from teams at work.\n(WorkWell(kat, workplace) ∧ GetAlong(kat, colleagues)) ⊕ ¬(WorkWell(kat, workplace) ∨ GetAlong(kat, colleagues)) ::: Kat is either a person who works well in teams in their workplace and is always tired every morning, or she neither works well in teams in their workplace nor is always tired every morning.\nConclusion:\nGetAlong(kat, colleagues) ⊕ Feedback(kat, teams) ::: Kat either gets along with her colleagues at her work or receives negative feedback from teams at her work.\n------"
    ]
  },
  {
    "id": "FOLIO_train_451",
    "context": "Drishti is open-source. Open-source software is free to modify.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Drishti is free to modify.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nOpenSource(x) ::: x is open-source.\nFreeToModify(x) ::: x is free to modify.\nPremises:\nOpenSource(drishti) ::: Drishti is open-source.\n∀x (OpenSource(x) → FreeToModify(x)) ::: Open-source software is free to modify.\nConclusion:\nFreeToModify(drishti) ::: Drishti is free to modify.\n------\nProblem:\nThe following is a list of the top 10 most popular programming languages in 2018.\n1) Python\n2) Java\n3) JavaScript\n4) C#\n5) C++\n6) C\n7) PHP\n8) Objective-C\n9) Swift\n10) R\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The top 10 most popular programming languages in 2018 are Python, Java, JavaScript, C#, C++, C, PHP, Objective-C, Swift, and R.\n###\nPredicates:\nTop10(x) ::: x is one of the top 10 most popular programming languages in 2018.\nPopular(x) ::: x is popular.\nPremises:\nTop10(python) ∧ Top10(java) ∧ Top10(javascript) ∧ Top10(csharp) ∧ Top10(cpp) ∧ Top10(c) ∧ Top10(php) ∧ Top10(objectivec) ∧ Top10(swift) ∧ Top10(r) ::: The following is a list of the top 10 most popular programming languages in 2018.\n∀x (Popular(x) → ∃y (Top10(y"
    ]
  },
  {
    "id": "FOLIO_train_452",
    "context": "There are five grades including A+, A, B+, B, and C in English. If a student gets A+ in English, then his score is greater than 95. If a student gets A in English, then his score is in the range of 90-95. Zhang got an A in English. Wang's English score is better than Zhang's. Wu's English score is lower than 90.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Zhang's English score is lower than 95.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nEnglishScore(x) ::: x is the English score of a student.\nA(x) ::: x is an A.\nAPlus(x) ::: x is an A+.\nBPlus(x) ::: x is a B+.\nB(x) ::: x is a B.\nC(x) ::: x is a C.\nPremises:\n∀x (A(x) → EnglishScore(x) > 95) ::: If a student gets A in English, then his score is greater than 95.\n∀x (APlus(x) → EnglishScore(x) > 95) ::: If a student gets A+ in English, then his score is greater than 95.\nEnglishScore(zhang) ∧ A(zhang) ::: Zhang got an A in English.\nEnglishScore(wang) ∧ APlus(wang) ::: Wang's English score is better than Zhang's.\nEnglishScore(wu) ∧ C(wu) ::: Wu's English score is lower than 90.\nConclusion:\nEnglishScore(zhang) ∧ APlus(zhang) ::: Zhang got an A+ in English.\nEnglishScore(wang) ∧ APlus(wang) ::: Wang got an A+ in English.\nEnglishScore(wu) ∧ C(wu) ::: Wu got a C in English.\n------\nProblem:\nThe following is a list of the top 100 most popular baby names in the United States in 2013.\n1. Jacob\n2. Mason\n3. William\n4. Michael\n5. Jayden\n6. Ethan\n7. Alexander\n8. Daniel\n9. Noah\n10. Aiden\n11. Benjamin\n12. Anthony\n13. David\n14. James"
    ]
  },
  {
    "id": "FOLIO_train_453",
    "context": "There are five grades including A+, A, B+, B, and C in English. If a student gets A+ in English, then his score is greater than 95. If a student gets A in English, then his score is in the range of 90-95. Zhang got an A in English. Wang's English score is better than Zhang's. Wu's English score is lower than 90.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Wang got an A+ in English.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nEnglishScore(x) ::: x is the English score of a student.\nA(x) ::: x is an A.\nAPlus(x) ::: x is an A+.\nB(x) ::: x is a B.\nBPlus(x) ::: x is a B+.\nC(x) ::: x is a C.\nPremises:\n∀x (A(x) → EnglishScore(x) > 95) ::: If a student gets A in English, then his score is greater than 95.\n∀x (APlus(x) → EnglishScore(x) > 95) ::: If a student gets A+ in English, then his score is greater than 95.\nEnglishScore(zhang) ∧ A(zhang) ::: Zhang got an A in English.\nEnglishScore(wang) ∧ A(wang) ∧ EnglishScore(zhang) < EnglishScore(wang) ::: Wang's English score is better than Zhang's.\nEnglishScore(wu) ∧ C(wu) ::: Wu's English score is lower than 90.\nConclusion:\nEnglishScore(wang) > 95 ::: Wang got an A+ in English.\n------\nProblem:\nThe following is a list of the top 100 most popular baby names in the United States in 2013.\n1. Jacob\n2. Mason\n3. William\n4. Michael\n5. Jayden\n6. Ethan\n7. Alexander\n8. Daniel\n9. Noah\n10. Aiden\n11. Benjamin\n12. Anthony\n13. David\n14. James\n15. Christopher\n16. Matthew\n17. John\n18. Joseph\n19. Andrew\n20. Christian\n21. Samuel\n22."
    ]
  },
  {
    "id": "FOLIO_train_454",
    "context": "There are five grades including A+, A, B+, B, and C in English. If a student gets A+ in English, then his score is greater than 95. If a student gets A in English, then his score is in the range of 90-95. Zhang got an A in English. Wang's English score is better than Zhang's. Wu's English score is lower than 90.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Wu does not get an A or A+ in English.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nEnglishScore(x) ::: x is the English score of a student.\nA(x) ::: x is an A.\nA+(x) ::: x is an A+.\nB+(x) ::: x is a B+.\nB(x) ::: x is a B.\nC(x) ::: x is a C.\nPremises:\n∀x (A(x) → EnglishScore(x) > 95) ::: If a student gets A in English, then his score is greater than 95.\n∀x (A+(x) → EnglishScore(x) > 95) ::: If a student gets A+ in English, then his score is greater than 95.\nA(zhang) ∧ B+(wang) ∧ C(wu) ::: Zhang got an A in English. Wang's English score is better than Zhang's. Wu's English score is lower than 90.\nConclusion:\nEnglishScore(wu) < 90 ::: Wu's English score is lower than 90.\nEnglishScore(wu) ≠ A+ ::: Wu does not get an A+ in English.\nEnglishScore(wu) ≠ A ::: Wu does not get an A in English.\n------\nProblem:\nThe following is a list of the top 100 most popular baby names in the United States in 2013.\n1. Jacob\n2. Mason\n3. William\n4. Michael\n5. Jayden\n6. Ethan\n7. Alexander\n8. Daniel\n9. Noah\n10. Aiden\n11. Benjamin\n12. Anthony\n13. David\n14. James\n15. Christopher\n16. Matthew\n17. John\n18. Joseph\n19. Andrew\n20. Christian\n21. E"
    ]
  },
  {
    "id": "FOLIO_train_455",
    "context": "Olivia doesn't prefer warm temperature during the day. When Olivia sleeps, she prefers cool temperature. Olivia sleeps during the night. Olivia works during the day. Olivia either works or sleeps. The time is either the day or the night. Olivia either prefers warm temperature or prefers cool temperature.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? At all times, Olivia prefers cool temperature.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Olivia(x) ::: x is Olivia.\nTemperature(x) ::: x is a temperature.\nWarm(x) ::: x is warm.\nCool(x) ::: x is cool.\nPrefers(x, y) ::: x prefers y.\nSleep(x) ::: x is sleeping.\nWork(x) ::: x is working.\nDay(x) ::: x is the day.\nNight(x) ::: x is the night.\nPremises:\nOlivia(olivia) ∧ Temperature(temperature) ∧ Warm(warm) ∧ Cool(cool) ∧ Prefers(olivia, temperature) ∧ Sleep(sleep) ∧ Work(work) ∧ Day(day) ∧ Night(night) ::: Olivia doesn't prefer warm temperature during the day. When Olivia sleeps, she prefers cool temperature. Olivia sleeps during the night. Olivia works during the day. Olivia either works or sleeps. The time is either the day or the night. Olivia either prefers warm temperature or prefers cool temperature.\nConclusion:\nPrefers(olivia, cool) ∧ ¬Prefers(olivia, warm) ::: At all times, Olivia prefers cool temperature.\n------\nProblem:\nThe following is a list of the top 100 most popular baby names in the United States in 2013.\n1. Jacob\n2. Mason\n3. William\n4. Michael\n5. Ethan\n6. Jayden\n7. Alexander\n8. Daniel\n9. Noah\n10. Aiden\n11. Benjamin\n12. Anthony\n13. David\n14. James\n15. Christopher\n16. Matthew\n17. John\n18. Joseph\n19. Andrew\n2"
    ]
  },
  {
    "id": "FOLIO_train_456",
    "context": "Taylor Swift gives a commencement speech in New York University in 2022. Both Columbia University and New York University are located in Manhattan. Taylor Swift has received three Grammy Album of the Year Awards. Columbia University is one of the Ivy League schools.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Taylor Swift delivers a commencement speech in Manhattan.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nDelivers(x, y) ::: x delivers a speech in y.\nCommencementSpeech(x) ::: x is a commencement speech.\nLocated(x, y) ::: x is located in y.\nManhattan(x) ::: x is Manhattan.\nIvyLeague(x) ::: x is an Ivy League school.\nPremises:\nDelivers(taylorSwift, commencementSpeech) ::: Taylor Swift delivers a commencement speech.\nLocated(columbiaUniversity, Manhattan) ::: Columbia University is located in Manhattan.\nLocated(newYorkUniversity, Manhattan) ::: New York University is located in Manhattan.\nIvyLeague(columbiaUniversity) ::: Columbia University is an Ivy League school.\nCommencementSpeech(columbiaUniversity) ::: Columbia University is a commencement speech.\nCommencementSpeech(newYorkUniversity) ::: New York University is a commencement speech.\nConclusion:\nLocated(taylorSwift, Manhattan) ::: Taylor Swift delivers a commencement speech in Manhattan.\n------\nProblem:\nThe following is a list of the top 100 most popular songs of 2022. The list is ranked by the number of times the song was streamed on Spotify.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The song \"Bad Habit\" by Steve Lacy is ranked 100th on the list of the top 100 most popular songs of 2022.\n###\nPredicates:\nTop100(x) ::: x is ranked 100th on the list of the top 100 most popular songs of 2022.\nStreamed("
    ]
  },
  {
    "id": "FOLIO_train_457",
    "context": "Taylor Swift gives a commencement speech in New York University in 2022. Both Columbia University and New York University are located in Manhattan. Taylor Swift has received three Grammy Album of the Year Awards. Columbia University is one of the Ivy League schools.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The commencement speaker of NYU does not have any album.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nCommencementSpeaker(x, y) ::: x is the commencement speaker of y.\nAlbum(x) ::: x is an album.\nGrammy(x) ::: x is a Grammy.\nIvyLeague(x) ::: x is an Ivy League school.\nPremises:\nCommencementSpeaker(taylor, nyu) ::: Taylor Swift is the commencement speaker of NYU.\nAlbum(album1) ∧ Album(album2) ∧ Album(album3) ::: Taylor Swift has received three Grammy Album of the Year Awards.\nIvyLeague(columbia) ::: Columbia University is one of the Ivy League schools.\nConclusion:\n¬Album(nyu) ::: The commencement speaker of NYU does not have any album.\n------\nProblem:\nThe following is a list of the top 100 most popular songs of 2022.\n1. \"Bad Habits\" by Ed Sheeran\n2. \"Easy on Me\" by Adele\n3. \"Stay\" by The Kid LAROI and Justin Bieber\n4. \"Levitating\" by Dua Lipa and DaBaby\n5. \"Good 4 U\" by Olivia Rodrigo\n6. \"Kiss Me More\" by Doja Cat and SZA\n7. \"Montero (Call Me by Your Name)\" by Lil Nas X\n8. \"Industry Baby\" by Lil Nas X and Jack Harlow\n9. \"Drivers License\" by Olivia Rodrigo\n10. \"Way 2 Sexy\" by Drake, Future, and Young Thug\n11. \"Save Your Tears\" by The Weeknd\n12. \"Peaches\" by Justin Bieber and Daniel Caesar\n13. \"Love Story\" by Taylor"
    ]
  },
  {
    "id": "FOLIO_train_458",
    "context": "Customers either choose Plan A or Plan B. All who choose Plan B are rewarded with a $30 gift card. There are no customers who do not choose any plans. No customers rewarded a $30 gift card are older than 80. Customers are either older than 80 or are currently studying at school. James is not a customer who is currently studying at school.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James is a customer who does not choose any plans.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nChoose(x, y) ::: x chooses y.\nPlanA(x) ::: x is Plan A.\nPlanB(x) ::: x is Plan B.\nReward(x, y) ::: x is rewarded with y.\nGiftCard(x) ::: x is a $30 gift card.\nOlder(x, y) ::: x is older than y.\nStudent(x) ::: x is a student.\nPremises:\n∀x (Choose(x, PlanA) ⊕ Choose(x, PlanB)) ::: Customers either choose Plan A or Plan B.\n∀x (Reward(x, $30GiftCard) ∧ Choose(x, PlanB)) ::: All who choose Plan B are rewarded with a $30 gift card.\n¬∃x (Reward(x, $30GiftCard) ∧ Older(x, 80)) ::: No customers rewarded a $30 gift card are older than 80.\n¬Student(james) ::: James is not a student.\nConclusion:\nChoose(james, PlanA) ⊕ Choose(james, PlanB) ::: James chooses either Plan A or Plan B.\n¬Choose(james, PlanA) ∧ ¬Choose(james, PlanB) ::: James does not choose any plans.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is"
    ]
  },
  {
    "id": "FOLIO_train_459",
    "context": "Customers either choose Plan A or Plan B. All who choose Plan B are rewarded with a $30 gift card. There are no customers who do not choose any plans. No customers rewarded a $30 gift card are older than 80. Customers are either older than 80 or are currently studying at school. James is not a customer who is currently studying at school.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James is a customer who chooses Plan A or does not choose any plans.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nChoose(x, y) ::: x chooses y.\nPlanA(x) ::: x is Plan A.\nPlanB(x) ::: x is Plan B.\nReward(x, y) ::: x is rewarded with y.\nGiftCard(x) ::: x is a $30 gift card.\nOlder(x, y) ::: x is older than y.\nStudent(x) ::: x is a student.\nPremises:\n∀x (Choose(x, PlanA) ⊕ Choose(x, PlanB)) ::: Customers either choose Plan A or Plan B.\n∀x (Reward(x, $30GiftCard) ⊕ Choose(x, PlanB)) ::: All who choose Plan B are rewarded with a $30 gift card.\n¬∃x (Choose(x, PlanA) ∧ Reward(x, $30GiftCard)) ::: No customers rewarded a $30 gift card are older than 80.\n∀x (Student(x) ⊕ Older(x, 80)) ::: There are no customers who do not choose any plans.\n¬Student(james) ::: James is not a customer who is currently studying at school.\nConclusion:\nChoose(james, PlanA) ⊕ Choose(james, PlanB) ::: James is a customer who chooses Plan A or does not choose any plans.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caff"
    ]
  },
  {
    "id": "FOLIO_train_460",
    "context": "Customers either choose Plan A or Plan B. All who choose Plan B are rewarded with a $30 gift card. There are no customers who do not choose any plans. No customers rewarded a $30 gift card are older than 80. Customers are either older than 80 or are currently studying at school. James is not a customer who is currently studying at school.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Suppose James is a customer who chooses Plan A or does not choose any plans, then he is either rewarded a $30 gift card or chooses Plan B.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nChoose(x, y) ::: x chooses y.\nPlanA(x) ::: x is Plan A.\nPlanB(x) ::: x is Plan B.\nReward(x, y) ::: x is rewarded y.\nGiftCard(x) ::: x is a $30 gift card.\nOlder(x) ::: x is older than 80.\nStudent(x) ::: x is currently studying at school.\nPremises:\n∀x (Choose(x, PlanA) ⊕ Choose(x, PlanB)) ::: Customers either choose Plan A or Plan B.\n∀x (Reward(x, $30GiftCard) ⊕ Choose(x, PlanB)) ::: All who choose Plan B are rewarded with a $30 gift card.\n¬∃x (Reward(x, $30GiftCard) ∧ Older(x)) ::: No customers rewarded a $30 gift card are older than 80.\n∀x (Student(x) ⊕ Older(x)) ::: There are no customers who do not choose any plans.\n¬Student(james) ::: James is not a customer who is currently studying at school.\nConclusion:\n(Choose(james, PlanA) ⊕ Choose(james, PlanB)) → (Reward(james, $30GiftCard) ⊕ Choose(james, PlanB)) ::: Suppose James is a customer who chooses Plan A or does not choose any plans, then he is either rewarded a $30 gift card or chooses Plan B.\n------"
    ]
  },
  {
    "id": "FOLIO_train_461",
    "context": "Detroit City is a horse. Some horses are racehorses. If a horse falls during a race, then it dies. Detroit City fell during a race. A horse is a racehorse if it is in a race.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Detroit City has been in multiple races.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nHorse(x) ::: x is a horse.\nRacehorse(x) ::: x is a racehorse.\nFall(x) ::: x falls during a race.\nDie(x) ::: x dies.\nRace(x) ::: x is in a race.\nPremises:\nDetroitCity(x) ∧ Horse(x) ::: Detroit City is a horse.\n∃x (Horse(x) ∧ Racehorse(x)) ::: Some horses are racehorses.\nFall(DetroitCity) ::: Detroit City fell during a race.\nDie(DetroitCity) ::: Detroit City dies.\nConclusion:\nRacehorse(DetroitCity) ::: Detroit City is a racehorse.\n------\nProblem:\nA person is a student if he or she is enrolled in a school. A person is a teacher if he or she teaches in a school. A person is a professor if he or she teaches in a university. A person is a student if he or she is a professor.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? A person is a professor if he or she is a student.\n###\nPredicates:\nStudent(x) ::: x is a student.\nTeacher(x) ::: x is a teacher.\nProfessor(x) ::: x is a professor.\nEnrolled(x, y) ::: x is enrolled in y.\nTeaches(x, y) ::: x teaches in y.\nUniversity(x) ::: x is a university.\nPrem"
    ]
  },
  {
    "id": "FOLIO_train_462",
    "context": "Detroit City is a horse. Some horses are racehorses. If a horse falls during a race, then it dies. Detroit City fell during a race. A horse is a racehorse if it is in a race.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Detroit City is dead.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nHorse(x) ::: x is a horse.\nRacehorse(x) ::: x is a racehorse.\nFall(x) ::: x falls.\nDie(x) ::: x dies.\nRace(x) ::: x is in a race.\nPremises:\nDetroitCity(x) ∧ Horse(x) ::: Detroit City is a horse.\n∃x (Horse(x) ∧ Racehorse(x)) ::: Some horses are racehorses.\nFall(DetroitCity) ::: Detroit City fell during a race.\nDie(x) → (Fall(x) ∧ Horse(x)) ::: If a horse falls during a race, then it dies.\nRace(DetroitCity) ::: A horse is a racehorse if it is in a race.\nConclusion:\nDie(DetroitCity) ::: Detroit City is dead.\n------\nProblem:\nThe following is a list of the top 100 most popular baby names in the United States in 2013.\n1. Jacob\n2. Mason\n3. William\n4. Michael\n5. Jayden\n6. Ethan\n7. Alexander\n8. Noah\n9. Daniel\n10. Aiden\n11. Benjamin\n12. Anthony\n13. David\n14. James\n15. Christopher\n16. Matthew\n17. John\n18. Joseph\n19. Andrew\n20. Christian\n21. Elijah\n22. Samuel\n23. Joshua\n24. Nicholas\n25. Logan\n26. Lucas"
    ]
  },
  {
    "id": "FOLIO_train_463",
    "context": "Detroit City is a horse. Some horses are racehorses. If a horse falls during a race, then it dies. Detroit City fell during a race. A horse is a racehorse if it is in a race.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Detroit City is a racehorse.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nHorse(x) ::: x is a horse.\nRacehorse(x) ::: x is a racehorse.\nFall(x) ::: x falls.\nDie(x) ::: x dies.\nPremises:\nHorse(detroitCity) ∧ Racehorse(detroitCity) ::: Detroit City is a horse.\n∀x (Horse(x) → Racehorse(x)) ::: Some horses are racehorses.\nFall(detroitCity) ::: Detroit City fell during a race.\nConclusion:\nRacehorse(detroitCity) ::: Detroit City is a racehorse.\n------\nProblem:\nA person is a student if he or she is enrolled in a school. A person is a teacher if he or she teaches in a school. A person is a student if he or she is a teacher. A person is a teacher if he or she is a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? A person is a student if he or she is a teacher.\n###\nPredicates:\nStudent(x) ::: x is a student.\nTeacher(x) ::: x is a teacher.\nEnrolled(x, y) ::: x is enrolled in y.\nTeaches(x, y) ::: x teaches in y.\nPremises:\n∀x (Student(x) → Enrolled(x, school)) ::: A person is a student if he or she is enrolled in a school.\n∀x (Teacher(x) → Teaches(x, school)) :::"
    ]
  },
  {
    "id": "FOLIO_train_464",
    "context": "Frederick Monhoff was an architect, artist, and illustrator. Frederick Monhoff was an American. An artist is good at painting or music. All Americans speak English.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Frederick Monhoff is good at music.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nAmerican(x) ::: x is an American.\nArtist(x) ::: x is an artist.\nIllustrator(x) ::: x is an illustrator.\nArchitect(x) ::: x is an architect.\nSpeak(x, y) ::: x speaks y.\nGoodAt(x, y) ::: x is good at y.\nPremises:\nAmerican(frederick) ∧ Artist(frederick) ∧ Illustrator(frederick) ∧ Architect(frederick) ::: Frederick Monhoff was an architect, artist, and illustrator.\nAmerican(frederick) ::: Frederick Monhoff was an American.\n∀x (Artist(x) → GoodAt(x, painting) ∨ GoodAt(x, music)) ::: An artist is good at painting or music.\n∀x (American(x) → Speak(x, English)) ::: All Americans speak English.\nConclusion:\nGoodAt(frederick, music) ::: Frederick Monhoff is good at music.\n------\nProblem:\nThe following is a list of the top 100 most popular names for boys in the United States in 2013.\n1. Jacob\n2. Michael\n3. William\n4. James\n5. Mason\n6. Ethan\n7. Jayden\n8. Alexander\n9. Daniel\n10. Anthony\n11. Noah\n12. David\n13. Benjamin\n14. Christopher\n15. Andrew\n16. Matthew\n17. Joseph\n18. John\n19. Elijah\n20. Christian\n21. Joshua"
    ]
  },
  {
    "id": "FOLIO_train_465",
    "context": "Frederick Monhoff was an architect, artist, and illustrator. Frederick Monhoff was an American. An artist is good at painting or music. All Americans speak English.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There is no illustrator who speaks English.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nAmerican(x) ::: x is an American.\nArtist(x) ::: x is an artist.\nIllustrator(x) ::: x is an illustrator.\nSpeak(x, y) ::: x speaks y.\nPremises:\nAmerican(frederick) ∧ Artist(frederick) ∧ Illustrator(frederick) ::: Frederick Monhoff was an architect, artist, and illustrator.\nAmerican(frederick) ::: Frederick Monhoff was an American.\n∀x (Artist(x) → Speak(x, music) ∨ Speak(x, painting)) ::: An artist is good at painting or music.\n∀x (American(x) → Speak(x, English)) ::: All Americans speak English.\nConclusion:\n¬Speak(illustrator, English) ::: There is no illustrator who speaks English.\n------\nProblem:\nThe following is a list of the top 100 most popular names in the United States for the year 2000.\n1. Michael\n2. Christopher\n3. Joshua\n4. Matthew\n5. David\n6. Andrew\n7. Joseph\n8. Daniel\n9. John\n10. Jason\n11. Ryan\n12. Nicholas\n13. James\n14. Benjamin\n15. Anthony\n16. Brian\n17. Kevin\n18. Steven\n19. Brandon\n20. Eric\n21. Timothy\n22. Mark\n23. Scott\n24. Matthew\n25. Jeffrey\n26. Paul\n27. Robert\n28. William\n2"
    ]
  },
  {
    "id": "FOLIO_train_466",
    "context": "Miroslav Fiedler was a Czech mathematician. Miroslav Fiedler is known for his contributions to linear algebra and graph theory. Miroslav Fiedler is honored by the Fiedler eigenvalue. Fiedler eigenvalue is the second smallest eigenvalue of the graph Laplacian.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Miroslav Fiedler is honored by the second smallest eigenvalue of the graph Laplacian.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nCzech(x) ::: x is a Czech person.\nMathematician(x) ::: x is a mathematician.\nContribution(x, y) ::: x contributes to y.\nHonor(x, y) ::: x is honored by y.\nEigenvalue(x, y) ::: x is the eigenvalue of y.\nGraphLaplacian(x) ::: x is the graph Laplacian.\nPremises:\nCzech(miroslavFiedler) ∧ Mathematician(miroslavFiedler) ∧ Contribution(miroslavFiedler, linearAlgebra) ∧ Contribution(miroslavFiedler, graphTheory) ::: Miroslav Fiedler was a Czech mathematician. Miroslav Fiedler is known for his contributions to linear algebra and graph theory.\n∃y ∃x (GraphLaplacian(x) ∧ Eigenvalue(x, y) ∧ Honor(y, x)) ::: Fiedler eigenvalue is the second smallest eigenvalue of the graph Laplacian.\nConclusion:\nEigenvalue(miroslavFiedler, secondSmallestEigenvalueOfGraphLaplacian) ::: Miroslav Fiedler is honored by the second smallest eigenvalue of the graph Laplacian.\n------\nProblem:\nMiroslav Fiedler was a Czech mathematician. Miroslav Fiedler is known for his contributions to linear algebra and graph theory. Miroslav Fiedler is honored by the Fiedler eigenvalue. Fiedler eigenvalue is the second smallest eigenvalue of the graph Laplacian"
    ]
  },
  {
    "id": "FOLIO_train_467",
    "context": "Miroslav Fiedler was a Czech mathematician. Miroslav Fiedler is known for his contributions to linear algebra and graph theory. Miroslav Fiedler is honored by the Fiedler eigenvalue. Fiedler eigenvalue is the second smallest eigenvalue of the graph Laplacian.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Miroslav Fiedler was a French mathematician.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nCzech(x) ::: x is a Czech person.\nMathematician(x) ::: x is a mathematician.\nContribution(x, y) ::: x contributed to y.\nHonor(x, y) ::: x is honored by y.\nEigenvalue(x, y) ::: x is the eigenvalue of y.\nGraphLaplacian(x) ::: x is the graph Laplacian.\nPremises:\nCzech(miroslav) ∧ Mathematician(miroslav) ∧ Contribution(miroslav, linearAlgebra) ∧ Contribution(miroslav, graphTheory) ::: Miroslav Fiedler was a Czech mathematician. Miroslav Fiedler is known for his contributions to linear algebra and graph theory.\n∃y (Eigenvalue(y, graphLaplacian) ∧ Honor(y, fiedlerEigenvalue)) ::: Fiedler eigenvalue is the second smallest eigenvalue of the graph Laplacian.\nConclusion:\nMathematician(miroslav) ∧ Contribution(miroslav, french) ::: Miroslav Fiedler was a French mathematician.\n------\nProblem:\nMiroslav Fiedler was a Czech mathematician. Miroslav Fiedler is known for his contributions to linear algebra and graph theory. Miroslav Fiedler is honored by the Fiedler eigenvalue. Fiedler eigenvalue is the second smallest eigenvalue of the graph Laplacian.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Miroslav Fiedler is hon"
    ]
  },
  {
    "id": "FOLIO_train_468",
    "context": "Miroslav Fiedler was a Czech mathematician. Miroslav Fiedler is known for his contributions to linear algebra and graph theory. Miroslav Fiedler is honored by the Fiedler eigenvalue. Fiedler eigenvalue is the second smallest eigenvalue of the graph Laplacian.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A Czech mathematician is known for his contributions to linear algebra and graph theory.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nCzech(x) ::: x is a Czech person.\nMathematician(x) ::: x is a mathematician.\nContribution(x, y) ::: x contributes to y.\nKnown(x, y) ::: x is known for y.\nHonor(x, y) ::: x is honored by y.\nEigenvalue(x, y) ::: x is the eigenvalue of y.\nGraph(x) ::: x is a graph.\nLaplacian(x) ::: x is the graph Laplacian of x.\nPremises:\nCzech(miroslav) ∧ Mathematician(miroslav) ∧ Contribution(miroslav, linearAlgebra) ∧ Contribution(miroslav, graphTheory) ::: Miroslav Fiedler was a Czech mathematician. Miroslav Fiedler is known for his contributions to linear algebra and graph theory.\n∃x (Mathematician(x) ∧ Eigenvalue(x, y) ∧ Graph(y)) ∧ ∃x (Mathematician(x) ∧ Honor(x, y)) ::: Fiedler eigenvalue is the second smallest eigenvalue of the graph Laplacian. Miroslav Fiedler is honored by the Fiedler eigenvalue.\nConclusion:\nKnown(miroslav, linearAlgebra) ∧ Known(miroslav, graphTheory) ::: A Czech mathematician is known for his contributions to linear algebra and graph theory.\n------\nProblem:\nMiroslav Fiedler was a Czech mathematician. Miroslav Fiedler is known for his contributions"
    ]
  },
  {
    "id": "FOLIO_train_469",
    "context": "A laptop is a computer. You can play games on a computer. A phone is not a computer.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? You can play games on a laptop.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nLaptop(x) ::: x is a laptop.\nComputer(x) ::: x is a computer.\nPlayGame(x) ::: x plays games.\nPhone(x) ::: x is a phone.\nPremises:\nComputer(laptop) ∧ PlayGame(laptop) ::: A laptop is a computer. You can play games on a computer.\nComputer(phone) ∧ ¬PlayGame(phone) ::: A phone is not a computer.\nConclusion:\nPlayGame(laptop) ::: You can play games on a laptop.\n------\nProblem:\nA person who is a student is a person who is a teacher. A person who is a teacher is a person who is a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? A person who is a student is a person who is a teacher.\n###\nPredicates:\nStudent(x) ::: x is a student.\nTeacher(x) ::: x is a teacher.\nPremises:\nStudent(x) ∧ Teacher(x) ::: A person who is a student is a person who is a teacher.\nTeacher(x) ∧ Student(x) ::: A person who is a teacher is a person who is a student.\nConclusion:\nStudent(x) ∧ Teacher(x) ::: A person who is a student is a person who is a teacher.\n------\nProblem:\nA person who is a student is a person who is a teacher. A person who is a teacher is a person who is a student.\nQuestion:\nBased on the above information"
    ]
  },
  {
    "id": "FOLIO_train_470",
    "context": "A laptop is a computer. You can play games on a computer. A phone is not a computer.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? You can not play games on a phone.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nLaptop(x) ::: x is a laptop.\nComputer(x) ::: x is a computer.\nPlayGame(x, y) ::: x plays game y.\nPhone(x) ::: x is a phone.\nPremises:\nLaptop(laptop) ∧ Computer(laptop) ::: A laptop is a computer.\n∀x (Computer(x) → PlayGame(x, game)) ::: You can play games on a computer.\nPhone(phone) ∧ ¬Computer(phone) ::: A phone is not a computer.\nConclusion:\nPlayGame(phone, game) ::: You can play games on a phone.\n------"
    ]
  },
  {
    "id": "FOLIO_train_471",
    "context": "Walter Folger Brown was an American politician and lawyer, and served as the postmaster general. Walter Folger Brown graduated from Harvard University with a Bachelors of Arts. While they were both in Toledo, Walter Folger Brown's father practiced law with Walter Folger Brown. Katherin Hafer married Walter Folger Brown.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Walter Folger Brown graduated with a Bachelors of Arts.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nAmerican(x) ::: x is an American.\nPolitician(x) ::: x is a politician.\nLawyer(x) ::: x is a lawyer.\nPostmasterGeneral(x) ::: x is the postmaster general.\nGraduate(x, y) ::: x graduated from y.\nFather(x, y) ::: x is the father of y.\nPremises:\nAmerican(walterFolgerBrown) ∧ Politician(walterFolgerBrown) ∧ Lawyer(walterFolgerBrown) ∧ PostmasterGeneral(walterFolgerBrown) ::: Walter Folger Brown was an American politician and"
    ]
  },
  {
    "id": "FOLIO_train_472",
    "context": "Walter Folger Brown was an American politician and lawyer, and served as the postmaster general. Walter Folger Brown graduated from Harvard University with a Bachelors of Arts. While they were both in Toledo, Walter Folger Brown's father practiced law with Walter Folger Brown. Katherin Hafer married Walter Folger Brown.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Walter Folger Brown's father was in Toledo.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nAmerican(x) ::: x is an American.\nPolitician(x) ::: x is a politician.\nLawyer(x) ::: x is a lawyer.\nPostmasterGeneral(x) ::: x is the postmaster general.\nBachelorsOfArts(x) ::: x has a Bachelors of Arts.\nGraduate(x, y) ::: x graduated from y.\nFather(x, y) ::: x is the father of y.\nPractice(x, y) ::: x practices law with y.\nMarry(x, y) ::: x marries y.\nPremises:\nAmerican(walterFolger"
    ]
  },
  {
    "id": "FOLIO_train_473",
    "context": "Walter Folger Brown was an American politician and lawyer, and served as the postmaster general. Walter Folger Brown graduated from Harvard University with a Bachelors of Arts. While they were both in Toledo, Walter Folger Brown's father practiced law with Walter Folger Brown. Katherin Hafer married Walter Folger Brown.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Walter Folger Brown was not in Toledo.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nAmerican(x) ::: x is an American.\nPolitician(x) ::: x is a politician.\nLawyer(x) ::: x is a lawyer.\nPostmasterGeneral(x) ::: x is the postmaster general.\nBachelorsOfArts(x) ::: x has a Bachelors of Arts.\nGraduate(x, y) ::: x graduated from y.\nFather(x, y) ::: x is the father of y.\nPractice(x, y) ::: x practices law with y.\nMarry(x, y) ::: x marries y.\nPremises:\nAmerican(walterFolger"
    ]
  },
  {
    "id": "FOLIO_train_474",
    "context": "All products shipped from China are made in China. All products sold in JD are shipped from China. All products commonly used in China are sold in JD. All products favored by young people are commonly used in China. MacBook is not made in China and is not commonly used in China.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The MacBook is favored by young people.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nMadeInChina(x) ::: x is made in China.\nShippedFromChina(x) ::: x is shipped from China.\nSoldInJD(x) ::: x is sold in JD.\nCommonlyUsedInChina(x) ::: x is commonly used in China.\nFavoredByYoungPeople(x) ::: x is favored by young people.\nPremises:\n∀x (ShippedFromChina(x) → MadeInChina(x)) ::: All products shipped from China are made in China.\n∀x (SoldInJD(x) → ShippedFromChina(x)) :::"
    ]
  },
  {
    "id": "FOLIO_train_475",
    "context": "All products shipped from China are made in China. All products sold in JD are shipped from China. All products commonly used in China are sold in JD. All products favored by young people are commonly used in China. MacBook is not made in China and is not commonly used in China.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The MacBook is made in China.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nMadeInChina(x) ::: x is made in China.\nShippedFromChina(x) ::: x is shipped from China.\nSoldInJD(x) ::: x is sold in JD.\nCommonlyUsedInChina(x) ::: x is commonly used in China.\nFavoredByYoungPeople(x) ::: x is favored by young people.\nPremises:\n∀x (ShippedFromChina(x) → MadeInChina(x)) ::: All products shipped from China are made in China.\n∀x (SoldInJD(x) → ShippedFromChina(x)) :::"
    ]
  },
  {
    "id": "FOLIO_train_476",
    "context": "All products shipped from China are made in China. All products sold in JD are shipped from China. All products commonly used in China are sold in JD. All products favored by young people are commonly used in China. MacBook is not made in China and is not commonly used in China.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The MacBook is favored by young people and commonly used in China.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nMadeInChina(x) ::: x is made in China.\nShippedFromChina(x) ::: x is shipped from China.\nSoldInJD(x) ::: x is sold in JD.\nCommonlyUsedInChina(x) ::: x is commonly used in China.\nFavoredByYoungPeople(x) ::: x is favored by young people.\nPremises:\n∀x (MadeInChina(x) → ShippedFromChina(x)) ::: All products shipped from China are made in China.\n∀x (SoldInJD(x) → ShippedFromChina(x)) :"
    ]
  },
  {
    "id": "FOLIO_train_477",
    "context": "All products shipped from China are made in China. All products sold in JD are shipped from China. All products commonly used in China are sold in JD. All products favored by young people are commonly used in China. MacBook is not made in China and is not commonly used in China.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The MacBook is either favored by young people or commonly used in China.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nMadeInChina(x) ::: x is made in China.\nShippedFromChina(x) ::: x is shipped from China.\nSoldInJD(x) ::: x is sold in JD.\nCommonlyUsedInChina(x) ::: x is commonly used in China.\nFavoredByYoungPeople(x) ::: x is favored by young people.\nPremises:\n∀x (ShippedFromChina(x) → MadeInChina(x)) ::: All products shipped from China are made in China.\n∀x (SoldInJD(x) → ShippedFromChina(x)) :::"
    ]
  },
  {
    "id": "FOLIO_train_478",
    "context": "All products shipped from China are made in China. All products sold in JD are shipped from China. All products commonly used in China are sold in JD. All products favored by young people are commonly used in China. MacBook is not made in China and is not commonly used in China.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If the MacBook is favored by young people and commonly used in China, then it is neither favored by young people nor made in China.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMadeInChina(x) ::: x is made in China.\nShippedFromChina(x) ::: x is shipped from China.\nSoldInJD(x) ::: x is sold in JD.\nCommonlyUsedInChina(x) ::: x is commonly used in China.\nFavoredByYoungPeople(x) ::: x is favored by young people.\nPremises:\n∀x (MadeInChina(x) → ShippedFromChina(x)) ::: All products shipped from China are made in China.\n∀x (SoldInJD(x) → ShippedFromChina(x)) :::"
    ]
  },
  {
    "id": "FOLIO_train_479",
    "context": "Oxford Circus is a road junction connecting Oxford Street and Regent Street. Oxford Street is in London. John Nash designed the construction on Regent Street. John Nash designed Oxford Circus. John Nash is an architect in British. Oxford Circus is the entrance to Oxford Circus tube station which is a part of the Central line in 1900.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Oxford Circus is in London.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Oxford Circus is a road junction connecting Oxford Street and Regent Street.\n###Oxford Street is in London.\n###John Nash designed the construction on Regent Street.\n###John Nash designed Oxford Circus.\n###John Nash is an architect in British.\n###Oxford Circus is the entrance to Oxford Circus tube station which is a part of the Central line in 1900.\n###\nPredicates:\nOxfordCircus(x) ::: x is Oxford Circus.\nOxfordStreet(x) ::: x is Oxford Street.\nRegentStreet(x) ::: x is Regent Street.\nLondon(x) ::: x"
    ]
  },
  {
    "id": "FOLIO_train_480",
    "context": "Oxford Circus is a road junction connecting Oxford Street and Regent Street. Oxford Street is in London. John Nash designed the construction on Regent Street. John Nash designed Oxford Circus. John Nash is an architect in British. Oxford Circus is the entrance to Oxford Circus tube station which is a part of the Central line in 1900.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Oxford Circus is designed by a British architect.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Oxford Circus is a road junction connecting Oxford Street and Regent Street.\n###Oxford Street is in London.\n###John Nash designed the construction on Regent Street.\n###John Nash designed Oxford Circus.\n###John Nash is an architect in British.\n###Oxford Circus is the entrance to Oxford Circus tube station which is a part of the Central line in 1900.\n###\nPredicates:\nOxfordCircus(x) ::: x is Oxford Circus.\nOxfordStreet(x) ::: x is Oxford Street.\nRegentStreet(x) ::: x is Regent Street.\nLondon(x) ::: x is London.\nJohnNash(x) ::: x is John Nash.\nBritish(x) ::: x is British.\nArchitect(x) ::: x is an architect.\nOxfordCircusDesigned(x) ::: x is designed by Oxford Circus.\nRegentStreetDesigned(x) ::: x is designed by Regent Street.\nOxfordCircusDesigned(x) ::: x is designed by Oxford Circus.\nOxfordCircusDesigned(x) ::: x is designed by Oxford Circus.\nOxfordCircusDesigned(x) ::: x is designed by Oxford Circus.\nOxfordCircusDesigned(x) ::: x is designed by Oxford Circus.\nOxfordCircusDesigned(x) ::: x is designed by Oxford Circus.\nOxfordCircusDesigned(x) ::: x is designed by Oxford Circus.\nOxfordCircusDesigned(x) ::: x is designed by Oxford Circus.\nOxfordCircusDesigned(x) ::: x is designed by Oxford Circus.\nOxfordCircusDesigned(x) ::: x is designed by Oxford Circus.\nOxfordCircusDesigned(x) ::: x is designed by Oxford Circus.\nOxfordCircusDesigned(x) ::: x is designed by Oxford Circus.\nOxfordCircusDesigned(x) ::: x is designed by Oxford Circus.\nOxfordCircusDesigned(x) ::: x is designed by Oxford Circus.\nOxfordCircusDesigned(x) ::: x is designed by Oxford Circus.\nOxfordCircusDesigned(x) ::: x is designed by Oxford Circus.\nOxfordCircusDesigned(x) ::: x is designed by Oxford Circus.\nOxfordCircusDesigned(x) ::: x is designed by Oxford Circus.\nOxfordCircusDesigned(x) ::: x is designed by Oxford Circus.\nOxfordCircusDesigned(x) ::: x is designed by Oxford Circus.\nOxfordCircusDesigned(x) ::: x is designed by Oxford Circus.\nOxfordCircusDesigned(x) ::: x is designed by Oxford Circus.\nOxfordCircusDesigned(x) ::: x is designed by Oxford Circus.\nOxfordCircusDesigned(x) ::: x is designed by Oxford Circus.\nOxfordCircusDesigned(x) ::: x is designed by Oxford Circus.\nOxfordCircusDesigned(x) ::: x is designed by Oxford Circus.\nOxfordCircusDesigned(x) ::: x is designed by Oxford Circus.\nOxfordCircusDesigned(x) ::: x is designed by Oxford Circus.\nOxfordCircusDesigned(x) ::: x is designed by Oxford Circus.\nOxfordCircusDesigned(x) ::: x is designed by Oxford Circus.\nOxfordCircusDesigned(x) ::: x is designed by Oxford Circus.\nOxfordCircusDesigned(x) ::: x is designed by Oxford Circus.\nOxfordCircusDesigned(x) ::: x is designed by Oxford Circus.\nOxfordCircusDesigned(x) ::: x is designed by Oxford Circus.\nOxfordCircusDesigned(x) ::: x is designed by Oxford Circus.\nOxfordCircusDesigned(x) ::: x is designed by Oxford Circus.\nOxfordCircusDesigned(x) ::: x is designed by Oxford Circus.\nOxfordCircusDesigned(x) ::: x is designed by Oxford Circus."
    ]
  },
  {
    "id": "FOLIO_train_481",
    "context": "Oxford Circus is a road junction connecting Oxford Street and Regent Street. Oxford Street is in London. John Nash designed the construction on Regent Street. John Nash designed Oxford Circus. John Nash is an architect in British. Oxford Circus is the entrance to Oxford Circus tube station which is a part of the Central line in 1900.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? John Nash designed the Central line in 1900.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nOxfordCircus(x) ::: x is Oxford Circus.\nOxfordStreet(x) ::: x is Oxford Street.\nRegentStreet(x) ::: x is Regent Street.\nLondon(x) ::: x is in London.\nJohnNash(x) ::: x is John Nash.\nArchitect(x) ::: x is an architect.\nBritish(x) ::: x is British.\nDesign(x, y) ::: x designed y.\nEntrance(x, y) ::: x is the entrance to y.\nTubeStation(x) ::: x is a tube station.\nPartOf(x, y) ::: x is a part of y.\nPremises:\nOxfordCircus(oxfordCircus) ∧ OxfordStreet(oxfordStreet) ∧ RegentStreet(regentStreet) ∧ London(london) ∧ JohnNash(johnNash) ∧ Architect(johnNash) ∧ British(johnNash) ∧ Design(johnNash, oxfordCircus) ∧ Entrance(oxfordCircus, oxfordCircusTubeStation) ∧ TubeStation(oxfordCircusTubeStation) ∧ PartOf(oxfordCircusTubeStation, centralLine) ::: Oxford Circus is a road junction connecting Oxford Street and Regent Street. Oxford Street is in London. John Nash designed the construction on Regent Street. John Nash designed Oxford Circus. John Nash is an architect in British. Oxford Circus is the entrance to Oxford Circus tube station which is a part of the Central line in 1900.\nConclusion:\nDesign(johnNash, centralLine) ::: John Nash designed the Central line in 1900.\n------\nProblem:\nThe following is a list of the top 100 most popular names in the United States for the year 2000.\n1. Michael\n2. Christopher\n3. Joshua\n4. Matthew\n5. Andrew\n6. David\n7. Joseph\n8. Daniel\n9. Jason\n10. John\n11. James\n12. Robert\n13. Ryan\n14. Benjamin\n15. Nicholas\n16. Anthony\n17. Brian\n18. Kevin\n19. Timothy\n20. Steven\n21. Eric\n22. Mark\n23. Paul\n24. William\n25. Brandon\n26. Scott\n27. Matthew\n28. Matthew\n29. Matthew\n30. Matthew\n31. Matthew\n32. Matthew\n33. Matthew\n34. Matthew\n35. Matthew\n36. Matthew\n37. Matthew\n38. Matthew\n39. Matthew\n40. Matthew\n41. Matthew\n42. Matthew\n43. Matthew\n44. Matthew\n45. Matthew\n46. Matthew\n47. Matthew\n48. Matthew\n49. Matthew\n50. Matthew\n51. Matthew\n52. Matthew\n53. Matthew\n54. Matthew\n55. Matthew\n56. Matthew\n57. Matthew\n58. Matthew\n59. Matthew\n60. Matthew\n61. Matthew\n62. Matthew\n63. Matthew\n64. Matthew\n65. Matthew\n66. Matthew\n67. Matthew\n68. Matthew\n69. Matthew\n70. Matthew\n71. Matthew\n72. Matthew\n73. Matthew\n74. Matthew\n75. Matthew\n76. Matthew\n77. Matthew\n78. Matthew\n79. Matthew\n80. Matthew\n81. Matthew\n82. Matthew\n83. Matthew\n84. Matthew\n85. Matthew\n86. Matthew\n87. Matthew\n88. Matthew\n89. Matthew\n90. Matthew\n91. Matthew\n92. Matthew\n93. Matthew\n94. Matthew\n95. Matthew\n96. Matthew\n97. Matthew\n98. Matthew\n99. Matthew\n100. Matthew\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The name Matthew is in the top 100 most popular names in the United States for the year 2000.\n###\nPredicates:\nName(x) ::: x is a name.\nPopular(x) ::: x"
    ]
  },
  {
    "id": "FOLIO_train_482",
    "context": "Oxford Circus is a road junction connecting Oxford Street and Regent Street. Oxford Street is in London. John Nash designed the construction on Regent Street. John Nash designed Oxford Circus. John Nash is an architect in British. Oxford Circus is the entrance to Oxford Circus tube station which is a part of the Central line in 1900.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Regent Street is not in London.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Oxford Circus is a road junction connecting Oxford Street and Regent Street.\n###Oxford Street is in London.\n###John Nash designed the construction on Regent Street.\n###John Nash designed Oxford Circus.\n###John Nash is an architect in British.\n###Oxford Circus is the entrance to Oxford Circus tube station which is a part of the Central line in 1900.\n###\nPredicates:\nRoadJunction(x, y) ::: x is a road junction connecting y.\nEntrance(x, y) ::: x is the entrance to y.\nPartOf(x, y) ::: x is a part of y.\nIn(x, y) ::: x is in y.\nLondon(x) ::: x is in London.\nBritish(x) ::: x is British.\nArchitect(x) ::: x is an architect.\nPremises:\nRoadJunction(oxfordCircus, oxfordStreet) ∧ RoadJunction(oxfordCircus, regentStreet) ::: Oxford Circus is a road junction connecting Oxford Street and Regent Street.\nIn(oxfordStreet, london) ::: Oxford Street is in London.\nDesign(johnNash, regentStreet) ∧ Design(johnNash, oxfordCircus) ::: John Nash designed the construction on Regent Street. John Nash designed Oxford Circus.\nBritish(johnNash) ::: John Nash is British.\nPartOf(oxfordCircusTubeStation, centralLine) ∧ Year(1900) ∧ Year(1900) ∧ Year(1900) ∧ Year(1900) ∧ Year(1900) ∧ Year(1900) ∧ Year(1900) ∧ Year(1900) ∧ Year(1900) ∧ Year(1900) ∧ Year(1900) ∧ Year(1900) ∧ Year(1900) ∧ Year(1900) ∧ Year(1900) ∧ Year(1900) ∧ Year(1900) ∧ Year(1900) ∧ Year(1900) ∧ Year(1900) ∧ Year(1900) ∧ Year(1900) ∧ Year(1900) ∧ Year(1900) ∧ Year(1900) ∧ Year(1900) ∧ Year(1900) ∧ Year(1900) ∧ Year(1900) ∧ Year(1900) ∧ Year(1900) ∧ Year(1900) ∧ Year(1900) ∧ Year(1900) ∧ Year(1900) ∧ Year(1900) ∧ Year(1900) ∧ Year(1900) ∧ Year(1900) ∧ Year(1900) ∧ Year(1900) ∧ Year(1900) ∧ Year(1900) ∧ Year(1900) ∧ Year(1900) ∧ Year(1900) ∧ Year(1900) ∧ Year(1900) ∧ Year(1900) ∧ Year(1900) ∧ Year(1900) ∧ Year(1900) ∧ Year(1900) ∧ Year(1900) ∧ Year(1900) ∧ Year(1900) ∧ Year(1900) ∧ Year(1900) ∧ Year(1900) ∧ Year(1900) ∧ Year(1900) ∧ Year(1900) ∧ Year(1900) ∧ Year(1900) ∧ Year(1900) ∧ Year(1900) ∧ Year(1900) ∧ Year(1900) ∧ Year(1900) ∧ Year(1900) ∧ Year(1900) ∧ Year(1900) ∧ Year(1900)"
    ]
  },
  {
    "id": "FOLIO_train_483",
    "context": "An animal is either a cat or a dog. All dogs bark. Ghosts do not exist. If something barks, then it is not alive. A thing is either alive or dead. Jojo is not dead.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jojo is a ghost.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nAnimal(x) ::: x is an animal.\nCat(x) ::: x is a cat.\nDog(x) ::: x is a dog.\nBark(x) ::: x barks.\nGhost(x) ::: x is a ghost.\nAlive(x) ::: x is alive.\nDead(x) ::: x is dead.\nPremises:\nAnimal(jojo) ⊕ Animal(jojo) ::: An animal is either a cat or a dog.\n∀x (Dog(x) → Bark(x)) ::: All dogs bark.\n¬Ghost(x) ::: Ghosts do not exist.\nBark(x) → ¬Alive(x) ::: If something barks, then it is not alive.\nAlive(jojo) ⊕ Dead(jojo) ::: A thing is either alive or dead.\nConclusion:\nGhost(jojo) ::: Jojo is a ghost.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\n###\nPredicates:\nDependent(x) ::: x is a person dependent on caffeine.\nDrinks(x) ::: x regularly drinks coffee.\nJokes(x) ::: x jokes about being addicted to caffeine.\nUnaware(x) ::: x is unaware that caffeine is a drug.\nStudent(x) ::: x is a student.\nPremises:\n∀x (Drinks(x) → Dependent(x)) ::: All people who regularly drink coffee are dependent on caffeine.\n∀x (Drinks(x) ⊕ Jokes(x)) ::: People either regularly drink coffee or joke about being addicted to caffeine.\n∀x (Jokes(x) → ¬Unaware(x)) ::: No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. \n(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina)) ::: Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. \n¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina)) ::: If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nConclusion:\nJokes(rina) ⊕ Unaware(rina) ::: Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\n((Jokes(rina) ∧ Unaware(rina)) ⊕ ¬(Jokes(rina) ∨ Unaware(rina))) → (Jokes(rina) ∧ Drinks(rina)) ::: If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.\n------\nProblem:\nMiroslav Venhoda was a Czech ch"
    ]
  },
  {
    "id": "FOLIO_train_484",
    "context": "An animal is either a cat or a dog. All dogs bark. Ghosts do not exist. If something barks, then it is not alive. A thing is either alive or dead. Jojo is not dead.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jojo is a cat or a ghost.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nAnimal(x) ::: x is an animal.\nCat(x) ::: x is a cat.\nDog(x) ::: x is a dog.\nBark(x) ::: x barks.\nGhost(x) ::: x is a ghost.\nAlive(x) ::: x is alive.\nDead(x) ::: x is dead.\nPremises:\nAnimal(jojo) ⊕ Animal(ghost) ::: Jojo is either a cat or a dog.\n∀x (Dog(x) → Bark(x)) ::: All dogs bark.\n¬Ghost(x) ::: Ghosts do not exist.\nBark(x) → ¬Alive(x) ::: If something barks, then it is not alive.\nAlive(jojo) ⊕ Dead(jojo) ::: A thing is either alive or dead.\nConclusion:\nCat(jojo) ⊕ Ghost(jojo) ::: Jojo is a cat or a ghost.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\n###\nPredicates:\nDependent(x) ::: x is a person dependent on caffeine.\nDrinks(x) ::: x regularly drinks coffee.\nJokes(x) ::: x jokes about being addicted to caffeine.\nUnaware(x) ::: x is unaware that caffeine is a drug.\nStudent(x) ::: x is a student.\nPremises:\n∀x (Drinks(x) → Dependent(x)) ::: All people who regularly drink coffee are dependent on caffeine.\n∀x (Drinks(x) ⊕ Jokes(x)) ::: People either regularly drink coffee or joke about being addicted to caffeine.\n∀x (Jokes(x) → ¬Unaware(x)) ::: No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. \n(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina)) ::: Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. \n¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina)) ::: If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nConclusion:\nJokes(rina) ⊕ Unaware(rina) ::: Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\n((Jokes(rina) ∧ Unaware(rina)) ⊕ ¬(Jokes(rina) ∨ Unaware(rina))) → (Jokes(rina) ∧ Drinks(rina)) ::: If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.\n------\nProblem:\nAll"
    ]
  },
  {
    "id": "FOLIO_train_485",
    "context": "An animal is either a cat or a dog. All dogs bark. Ghosts do not exist. If something barks, then it is not alive. A thing is either alive or dead. Jojo is not dead.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Jojo is a cat or a ghost, then Jojo either barks or is a dog.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nAnimal(x) ::: x is an animal.\nCat(x) ::: x is a cat.\nDog(x) ::: x is a dog.\nBark(x) ::: x barks.\nGhost(x) ::: x is a ghost.\nAlive(x) ::: x is alive.\nDead(x) ::: x is dead.\nPremises:\nAnimal(jojo) ⊕ Animal(ghost) ::: Jojo is either a cat or a dog.\n∀x (Dog(x) → Bark(x)) ::: All dogs bark.\n¬Ghost(x) ::: Ghosts do not exist.\nBark(x) → ¬Alive(x) ::: If something barks, then it is not alive.\nAlive(jojo) ::: Jojo is not dead.\nConclusion:\nBark(jojo) ⊕ Dog(jojo) ::: If Jojo is a cat or a ghost, then Jojo either barks or is a dog.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\n###\nPredicates:\nDependent(x) ::: x is a person dependent on caffeine.\nDrinks(x) ::: x regularly drinks coffee.\nJokes(x) ::: x jokes about being addicted to caffeine.\nUnaware(x) ::: x is unaware that caffeine is a drug.\nStudent(x) ::: x is a student.\nPremises:\n∀x (Drinks(x) → Dependent(x)) ::: All people who regularly drink coffee are dependent on caffeine.\n∀x (Drinks(x) ⊕ Jokes(x)) ::: People either regularly drink coffee or joke about being addicted to caffeine.\n∀x (Jokes(x) → ¬Unaware(x)) ::: No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. \n(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina)) ::: Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. \n¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina)) ::: If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nConclusion:\nJokes(rina) ⊕ Unaware(rina) ::: Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\n((Jokes(rina) ∧ Unaware(rina)) ⊕ ¬(Jokes(rina) ∨ Unaware(rina))) → (Jokes(rina) ∧ Drinks(rina)) ::: If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.\n------"
    ]
  },
  {
    "id": "FOLIO_train_486",
    "context": "All animals that are tigers are cats. No cats are dogs. All Bengal tigers are tigers. Everything that is a husky is a dog. Fido is either a Bengal tiger or a cat.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Fido is a husky.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nTiger(x) ::: x is a tiger.\nCat(x) ::: x is a cat.\nDog(x) ::: x is a dog.\nHusky(x) ::: x is a husky.\nPremises:\n∀x (Tiger(x) → Cat(x)) ::: All animals that are tigers are cats.\n¬∀x (Cat(x) → Dog(x)) ::: No cats are dogs.\n∀x (Tiger(x) → Tiger(x)) ::: All Bengal tigers are tigers.\n∀x (Husky(x) → Dog(x)) ::: Everything that is a husky is a dog.\nConclusion:\nDog(fido) ::: Fido is a husky.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\n###\nPredicates:\nDependent(x) ::: x is a person dependent on caffeine.\nDrinks(x) ::: x regularly drinks coffee.\nJokes(x) ::: x jokes about being addicted to caffeine.\nUnaware(x) ::: x is unaware that caffeine is a drug.\nStudent(x) ::: x is a student.\nPremises:\n∀x (Drinks(x) → Dependent(x)) ::: All people who regularly drink coffee are dependent on caffeine.\n∀x (Drinks(x) ⊕ Jokes(x)) ::: People either regularly drink coffee or joke about being addicted to caffeine.\n∀x (Jokes(x) → ¬Unaware(x)) ::: No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. \n(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina)) ::: Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. \n¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina)) ::: If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nConclusion:\nJokes(rina) ⊕ Unaware(rina) ::: Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\n((Jokes(rina) ∧ Unaware(rina)) ⊕ ¬(Jokes(rina) ∨ Unaware(rina))) → (Jokes(rina) ∧ Drinks(rina)) ::: If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine"
    ]
  },
  {
    "id": "FOLIO_train_487",
    "context": "All animals that are tigers are cats. No cats are dogs. All Bengal tigers are tigers. Everything that is a husky is a dog. Fido is either a Bengal tiger or a cat.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Fido is not a husky.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nTiger(x) ::: x is a tiger.\nCat(x) ::: x is a cat.\nDog(x) ::: x is a dog.\nHusky(x) ::: x is a husky.\nPremises:\n∀x (Tiger(x) → Cat(x)) ::: All animals that are tigers are cats.\n¬∀x (Cat(x) → Dog(x)) ::: No cats are dogs.\n∀x (Tiger(x) → Tiger(x)) ::: All Bengal tigers are tigers.\n∀x (Husky(x) → Dog(x)) ::: Everything that is a husky is a dog.\nConclusion:\n¬Dog(fido) ::: Fido is not a husky.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\n###\nPredicates:\nDependent(x) ::: x is a person dependent on caffeine.\nDrinks(x) ::: x regularly drinks coffee.\nJokes(x) ::: x jokes about being addicted to caffeine.\nUnaware(x) ::: x is unaware that caffeine is a drug.\nStudent(x) ::: x is a student.\nPremises:\n∀x (Drinks(x) → Dependent(x)) ::: All people who regularly drink coffee are dependent on caffeine.\n∀x (Drinks(x) ⊕ Jokes(x)) ::: People either regularly drink coffee or joke about being addicted to caffeine.\n∀x (Jokes(x) → ¬Unaware(x)) ::: No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. \n(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina)) ::: Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. \n¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina)) ::: If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nConclusion:\nJokes(rina) ⊕ Unaware(rina) ::: Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\n((Jokes(rina) ∧ Unaware(rina)) ⊕ ¬(Jokes(rina) ∨ Unaware(rina))) → (Jokes(rina) ∧ Drinks(rina)) ::: If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caff"
    ]
  },
  {
    "id": "FOLIO_train_488",
    "context": "All animals that are tigers are cats. No cats are dogs. All Bengal tigers are tigers. Everything that is a husky is a dog. Fido is either a Bengal tiger or a cat.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Fido is a Bengal tiger.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nTiger(x) ::: x is a tiger.\nCat(x) ::: x is a cat.\nDog(x) ::: x is a dog.\nBengalTiger(x) ::: x is a Bengal tiger.\nHusky(x) ::: x is a husky.\nPremises:\n∀x (Tiger(x) → Cat(x)) ::: All animals that are tigers are cats.\n¬∀x (Cat(x) → Dog(x)) ::: No cats are dogs.\n∀x (BengalTiger(x) → Tiger(x)) ::: All Bengal tigers are tigers.\n∀x (Husky(x) → Dog(x)) ::: Everything that is a husky is a dog.\nConclusion:\nTiger(fido) ::: Fido is a tiger.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\n###\nPredicates:\nDependent(x) ::: x is a person dependent on caffeine.\nDrinks(x) ::: x regularly drinks coffee.\nJokes(x) ::: x jokes about being addicted to caffeine.\nUnaware(x) ::: x is unaware that caffeine is a drug.\nStudent(x) ::: x is a student.\nPremises:\n∀x (Drinks(x) → Dependent(x)) ::: All people who regularly drink coffee are dependent on caffeine.\n∀x (Drinks(x) ⊕ Jokes(x)) ::: People either regularly drink coffee or joke about being addicted to caffeine.\n∀x (Jokes(x) → ¬Unaware(x)) ::: No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. \n(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina)) ::: Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. \nConclusion:\nJokes(rina) ⊕ Unaware(rina) ::: Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\n###\nPredicates:\nDependent(x) ::: x is a person dependent on caffeine.\nDrinks(x) ::: x regularly drinks coffee.\nJokes(x) ::: x jokes about being addicted to caffeine.\nUnaware(x) ::: x is unaware that caffeine is a drug.\nStudent(x) ::: x is a student.\nPremises:\n∀x (Drinks(x) → Dependent(x)) ::: All people who regularly drink coffee are dependent on caffeine.\n∀x (Drinks(x) ⊕ Jokes(x)) ::: People either regularly drink coffee or joke about being addicted to caffeine.\n∀x (Jokes"
    ]
  },
  {
    "id": "FOLIO_train_489",
    "context": "All animals that are tigers are cats. No cats are dogs. All Bengal tigers are tigers. Everything that is a husky is a dog. Fido is either a Bengal tiger or a cat.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Fido is neither a dog nor a husky.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nTiger(x) ::: x is a tiger.\nCat(x) ::: x is a cat.\nDog(x) ::: x is a dog.\nHusky(x) ::: x is a husky.\nPremises:\n∀x (Tiger(x) → Cat(x)) ::: All animals that are tigers are cats.\n¬∀x (Cat(x) → Dog(x)) ::: No cats are dogs.\n∀x (Tiger(x) → Tiger(x)) ::: All Bengal tigers are tigers.\n∀x (Husky(x) → Dog(x)) ::: Everything that is a husky is a dog.\nConclusion:\n¬Dog(fido) ∧ ¬Husky(fido) ::: Fido is neither a dog nor a husky.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\n###\nPredicates:\nDependent(x) ::: x is a person dependent on caffeine.\nDrinks(x) ::: x regularly drinks coffee.\nJokes(x) ::: x jokes about being addicted to caffeine.\nUnaware(x) ::: x is unaware that caffeine is a drug.\nStudent(x) ::: x is a student.\nPremises:\n∀x (Drinks(x) → Dependent(x)) ::: All people who regularly drink coffee are dependent on caffeine.\n∀x (Drinks(x) ⊕ Jokes(x)) ::: People either regularly drink coffee or joke about being addicted to caffeine.\n∀x (Jokes(x) → ¬Unaware(x)) ::: No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. \n(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina)) ::: Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. \n¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina)) ::: If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nConclusion:\nJokes(rina) ⊕ Unaware(rina) ::: Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\n((Jokes(rina) ∧ Unaware(rina)) ⊕ ¬(Jokes(rina) ∨ Unaware(rina))) → (Jokes(rina) ∧ Drinks(rina)) ::: If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about"
    ]
  },
  {
    "id": "FOLIO_train_490",
    "context": "If a city hold a Summer Olympics, and the city is a US city, then the Summer Olympics will be in the US. If a city is in a state which is in US, the city is a US city. If a city in a state, and a Summer Olympics is in this city, then the Summer Olympics is in this state. The 2028 Summer Olympics is scheduled to take place in Los Angeles(LA). LA is a city in California(CA). Atlanta is a US city. Atlanta is in Georgia(CA). CA is a state in the United States. Boxing, modern pentathlon, and weightlifting will be removed from The 2028 Summer Olympics. Atlanta in the United States hold the 1996 Summer Olympics.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The 2028 Summer Olympics will take place in the US.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Olympics(x) ::: x is a Summer Olympics.\nUSCity(x) ::: x is a US city.\nState(x) ::: x is a state.\nIn(x, y) ::: x is in y.\nPremises:\nOlympics(summerOlympics2028) ∧ USCity(LA) ∧ In(LA, CA) ::: The 2028 Summer Olympics is scheduled to take place in Los Angeles(LA). LA is a city in California(CA).\nUSCity(atlanta) ∧ In(atlanta, CA) ::: Atlanta is a US city. Atlanta is in Georgia(CA).\nState(CA) ∧ In(CA, US) ::: CA is a state in the United States.\nConclusion:\nIn(CA, US) ∧ Olympics(summerOlympics2028) ∧ In(LA, CA) ::: If a city is in a state which is in US, the city is a US city. If a city in a state, and a Summer Olympics is in this city, then the Summer Olympics is in this state.\nOlympics(summerOlympics2028) ∧ USCity(LA) ∧ In(LA, CA) ::: If a city hold a Summer Olympics, and the city is a US city, then the Summer Olympics will be in the US.\nOlympics(summerOlympics1996) ∧ USCity(atlanta) ∧ In(atlanta, CA) ::: Atlanta is in the United States hold the 1996 Summer Olympics.\nOlympics(summerOlympics2028) ∧ USCity(LA) ∧ In(LA, CA) ::: The 2028 Summer Olympics will take place in Los Angeles(LA). LA is a city in California(CA).\n------"
    ]
  },
  {
    "id": "FOLIO_train_491",
    "context": "If a city hold a Summer Olympics, and the city is a US city, then the Summer Olympics will be in the US. If a city is in a state which is in US, the city is a US city. If a city in a state, and a Summer Olympics is in this city, then the Summer Olympics is in this state. The 2028 Summer Olympics is scheduled to take place in Los Angeles(LA). LA is a city in California(CA). Atlanta is a US city. Atlanta is in Georgia(CA). CA is a state in the United States. Boxing, modern pentathlon, and weightlifting will be removed from The 2028 Summer Olympics. Atlanta in the United States hold the 1996 Summer Olympics.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The 1996 Summer Olympics is not in Georgia.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Olympics(x) ::: x is a Summer Olympics.\nUS(x) ::: x is a US city.\nState(x) ::: x is a state.\nCity(x) ::: x is a city.\nPremises:\nOlympics(summerOlympics2028) ∧ US(summerOlympics2028) ::: The 2028 Summer Olympics is scheduled to take place in Los Angeles(LA). LA is a city in California(CA).\nCity(LA) ∧ State(CA) ∧ US(CA) ::: LA is a city in California(CA). CA is a state in the United States.\nCity(atlanta) ∧ State(CA) ∧ US(CA) ::: Atlanta is a US city. Atlanta is in Georgia(CA). CA is a state in the United States.\nCity(atlanta) ∧ State(CA) ∧ US(CA) ∧ Olympics(summerOlympics1996) ::: Atlanta is a US city. Atlanta is in Georgia(CA). CA is a state in the United States.\nConclusion:\n¬City(atlanta) ∧ State(CA) ∧ Olympics(summerOlympics1996) ::: The 1996 Summer Olympics is not in Georgia.\n------\nProblem:\nThe 2028 Summer Olympics is scheduled to take place in Los Angeles(LA). LA is a city in California(CA). CA is a state in the United States. Boxing, modern pentathlon, and weightlifting will be removed from The 2028 Summer Olympics. Atlanta is a US city. Atlanta is in Georgia(CA). CA is a state in the United States. The 1996 Summer Olympics is scheduled to take place in Atlanta.\nQuestion:\nBased on the above information, is the following statement true, false, or"
    ]
  },
  {
    "id": "FOLIO_train_492",
    "context": "If a city hold a Summer Olympics, and the city is a US city, then the Summer Olympics will be in the US. If a city is in a state which is in US, the city is a US city. If a city in a state, and a Summer Olympics is in this city, then the Summer Olympics is in this state. The 2028 Summer Olympics is scheduled to take place in Los Angeles(LA). LA is a city in California(CA). Atlanta is a US city. Atlanta is in Georgia(CA). CA is a state in the United States. Boxing, modern pentathlon, and weightlifting will be removed from The 2028 Summer Olympics. Atlanta in the United States hold the 1996 Summer Olympics.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Skateboarding will appear at The 2028 Summer Olympics.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nUSCity(x) ::: x is a US city.\nState(x) ::: x is a state.\nSummerOlympics(x) ::: x is a Summer Olympics.\nIn(x, y) ::: x is in y.\nPremises:\nSummerOlympics(2028SummerOlympics) ∧ USCity(LA) ∧ In(LA, CA) ∧ State(CA) ∧ In(CA, US) ::: The 2028 Summer Olympics is scheduled to take place in Los Angeles(LA). LA is a city in California(CA). CA is a state in the United States.\n∀x (USCity(x) → State(x)) ::: If a city is a US city, then the city is in a state.\n∃x (State(x) ∧ In(x, CA)) ::: If a city is in a state, and the state is CA, then the city is in CA.\n∃x (SummerOlympics(x) ∧ In(x, CA)) ::: If a city is in a state, and a Summer Olympics is in this city, then the Summer Olympics is in this state.\nConclusion:\nSummerOlympics(2028SummerOlympics) ∧ In(2028SummerOlympics, CA) ∧ State(CA) ∧ In(CA, US) ::: The 2028 Summer Olympics is scheduled to take place in Los Angeles(LA). LA is a city in California(CA). CA is a state in the United States.\n¬SummerOlympics(2028SummerOlympics) ∧ In(2028SummerOlympics, CA) ∧ State(CA) ∧ In(CA, US) ::: The 2028 Summer Olympics is scheduled to take place in"
    ]
  },
  {
    "id": "FOLIO_train_493",
    "context": "The taiga vole is a large vole found in northwestern North America. Cats like playing with all voles. The taiga vole lives in the boreal taiga zone. The boreal taiga zone in North America is a cold place to live in. Taiga vole is typically much larger than most other North American voles, especially those from the genus Microtus.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Cats like playing with taiga vole.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nTaigaVole(x) ::: x is a taiga vole.\nVole(x) ::: x is a vole.\nCat(x) ::: x is a cat.\nPlay(x, y) ::: x plays with y.\nBorealTaigaZone(x) ::: x is a boreal taiga zone.\nCold(x) ::: x is a cold place.\nLarge(x) ::: x is a large thing.\nSmall(x) ::: x is a small thing.\nPremises:\nTaigaVole(taigaVole) ∧ Vole(taigaVole) ∧ Cat(cat) ∧ Play(cat, taigaVole) ::: Cats like playing with all voles.\nTaigaVole(taigaVole) ∧ BorealTaigaZone(borealTaigaZone) ∧ TaigaVole(taigaVole) ∧ BorealTaigaZone(borealTaigaZone) ∧ Cold(borealTaigaZone) ::: The taiga vole lives in the boreal taiga zone.\nTaigaVole(taigaVole) ∧ Large(taigaVole) ∧ Small(mostOtherNorthAmericanVoles) ∧ Vole(mostOtherNorthAmericanVoles) ∧ Vole(taigaVole) ∧ Large(taigaVole) ∧ Small(mostOtherNorthAmericanVoles) ::: Taiga vole is typically much larger than most other North American voles, especially those from the genus Microtus.\nConclusion:\nPlay(cat, taigaVole) ::: Cats like playing with taiga vole.\n------\nProblem:\nThe following is a list of the top 10 most popular movies"
    ]
  },
  {
    "id": "FOLIO_train_494",
    "context": "The taiga vole is a large vole found in northwestern North America. Cats like playing with all voles. The taiga vole lives in the boreal taiga zone. The boreal taiga zone in North America is a cold place to live in. Taiga vole is typically much larger than most other North American voles, especially those from the genus Microtus.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Taiga vole's living place is not cold.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nTaigaVole(x) ::: x is a taiga vole.\nVole(x) ::: x is a vole.\nCat(x) ::: x is a cat.\nPlay(x, y) ::: x plays with y.\nLives(x, y) ::: x lives in y.\nCold(x) ::: x is a cold place.\nBorealTaigaZone(x) ::: x is a boreal taiga zone.\nNorthAmerican(x) ::: x is a North American.\nPremises:\nTaigaVole(taigaVole) ∧ Vole(taigaVole) ∧ Cat(cat) ∧ Play(cat, taigaVole) ::: The taiga vole is a large vole found in northwestern North America. Cats like playing with all voles.\nTaigaVole(taigaVole) ∧ Lives(taigaVole, borealTaigaZone) ::: The taiga vole lives in the boreal taiga zone.\nBorealTaigaZone(borealTaigaZone) ∧ NorthAmerican(borealTaigaZone) ∧ Cold(borealTaigaZone) ::: The boreal taiga zone in North America is a cold place to live in.\nConclusion:\n¬Cold(borealTaigaZone) ::: Taiga vole's living place is not cold.\n------\nProblem:\nThe taiga vole is a large vole found in northwestern North America. Cats like playing with all voles. The taiga vole lives in the boreal taiga zone. The boreal taiga zone in North America is a cold place to live in. Taiga vole is typically much larger than most other North American voles, especially those from the genus Micro"
    ]
  },
  {
    "id": "FOLIO_train_495",
    "context": "Either in women or in men. No men have breast cancer. Either breast cancer or non-breast cancer. No type of cancer is without a tumor. All non-breast cancers are a type of cancer. If adenocarcinoma is a type of cancer or without a tumor, then adenocarcinoma is in women or without a tumor.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Adenocarcinoma is a breast cancer.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nBreastCancer(x) ::: x is a breast cancer.\nNonBreastCancer(x) ::: x is a non-breast cancer.\nTumor(x) ::: x is a tumor.\nAdenocarcinoma(x) ::: x is an adenocarcinoma.\nWomen(x) ::: x is a woman.\nPremises:\n(BreastCancer(x) ⊕ NonBreastCancer(x)) ∧ ¬BreastCancer(x) ::: Either in women or in men. No men have breast cancer.\n(NonBreastCancer(x) ⊕ BreastCancer(x)) ∧ ¬NonBreastCancer(x) ::: Either breast cancer or non-breast cancer. No type of cancer is without a tumor.\n(NonBreastCancer(x) ⊕ Tumor(x)) ∧ ¬NonBreastCancer(x) ::: All non-breast cancers are a type of cancer.\n(Adenocarcinoma(x) ⊕ WithoutTumor(x)) ∧ ¬Adenocarcinoma(x) ::: If adenocarcinoma is a type of cancer or without a tumor, then adenocarcinoma is in women or without a tumor.\nConclusion:\nBreastCancer(x) ∧ Women(x) ::: Adenocarcinoma is a breast cancer.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a"
    ]
  },
  {
    "id": "FOLIO_train_496",
    "context": "Either in women or in men. No men have breast cancer. Either breast cancer or non-breast cancer. No type of cancer is without a tumor. All non-breast cancers are a type of cancer. If adenocarcinoma is a type of cancer or without a tumor, then adenocarcinoma is in women or without a tumor.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Adenocarcinoma is in women.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nIn(x, y) ::: x is in y.\nWomen(x) ::: x is a woman.\nMen(x) ::: x is a man.\nBreastCancer(x) ::: x is breast cancer.\nNonBreastCancer(x) ::: x is non-breast cancer.\nTumor(x) ::: x is a tumor.\nAdenocarcinoma(x) ::: x is adenocarcinoma.\nPremises:\n(In(women, x) ⊕ In(men, x)) ∧ ¬(Men(x) ∧ BreastCancer(x)) ::: Either in women or in men. No men have breast cancer.\n(BreastCancer(x) ⊕ NonBreastCancer(x)) ∧ ¬(NonBreastCancer(x) ∧ Tumor(x)) ::: Either breast cancer or non-breast cancer. No type of cancer is without a tumor.\n(NonBreastCancer(x) ∧ All(x, y) ∧ Cancer(y)) ∧ ¬(Adenocarcinoma(x) ∧ Tumor(x)) ::: All non-breast cancers are a type of cancer. If adenocarcinoma is a type of cancer or without a tumor, then adenocarcinoma is in women or without a tumor.\nConclusion:\nIn(women, adenocarcinoma) ::: Adenocarcinoma is in women.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either"
    ]
  },
  {
    "id": "FOLIO_train_497",
    "context": "Either in women or in men. No men have breast cancer. Either breast cancer or non-breast cancer. No type of cancer is without a tumor. All non-breast cancers are a type of cancer. If adenocarcinoma is a type of cancer or without a tumor, then adenocarcinoma is in women or without a tumor.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If adenocarcinoma is in women or without a tumor, then adenocarcinoma is without a tumor and a non-breast cancer.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nIn(x, y) ::: x is in y.\nWithout(x, y) ::: x is without y.\nBreastCancer(x) ::: x is breast cancer.\nNonBreastCancer(x) ::: x is non-breast cancer.\nTumor(x) ::: x is a tumor.\nAdenocarcinoma(x) ::: x is adenocarcinoma.\nPremises:\n(BreastCancer(x) ⊕ NonBreastCancer(x)) ∧ (NonBreastCancer(x) ⊕ Tumor(x)) ::: Either in women or in men. No men have breast cancer. Either breast cancer or non-breast cancer. No type of cancer is without a tumor.\n∀x (NonBreastCancer(x) → Cancer(x)) ::: All non-breast cancers are a type of cancer.\n(Adenocarcinoma(x) ⊕ Without(x, tumor)) → (Adenocarcinoma(x) ∧ Without(x, tumor)) ⊕ (Adenocarcinoma(x) ∨ Without(x, tumor)) ::: If adenocarcinoma is a type of cancer or without a tumor, then adenocarcinoma is in women or without a tumor.\nConclusion:\nWithout(adenocarcinoma, tumor) ∧ NonBreastCancer(adenocarcinoma) ::: If adenocarcinoma is in women or without a tumor, then adenocarcinoma is without a tumor and a non-breast cancer.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes"
    ]
  },
  {
    "id": "FOLIO_train_498",
    "context": "Some monitors equipped in the lab are produced by the company named AOC. All monitors equipped in the lab are cheaper than their original prices. If the monitor is cheaper than its original prices, then its resolution is 1080p. If a monitor is with a resolution of 1080p, then it does not support the type-c port. LG34 is equipped in the lab.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? LG34 machine is produced by AOC.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nMonitor(x) ::: x is a monitor.\nCheaper(x, y) ::: x is cheaper than y.\nResolution(x, y) ::: x has a resolution of y.\nSupport(x, y) ::: x supports y.\nTypeCPort(x) ::: x is a type-c port.\nPremises:\nMonitor(aoc) ∧ Cheaper(aoc, lab) ::: Some monitors equipped in the lab are produced by the company named AOC.\n∀x (Cheaper(x, lab) → Resolution(x, 1080p)) ::: All monitors equipped in the lab are cheaper than their original prices.\n∀x (Resolution(x, 1080p) → ¬Support(x, type-c)) ::: If the monitor is cheaper than its original prices, then its resolution is 1080p.\nMonitor(lg34) ::: If a monitor is with a resolution of 1080p, then it does not support the type-c port.\nConclusion:\nMonitor(lg34, aoc) ::: LG34 machine is produced by AOC.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a"
    ]
  },
  {
    "id": "FOLIO_train_499",
    "context": "Some monitors equipped in the lab are produced by the company named AOC. All monitors equipped in the lab are cheaper than their original prices. If the monitor is cheaper than its original prices, then its resolution is 1080p. If a monitor is with a resolution of 1080p, then it does not support the type-c port. LG34 is equipped in the lab.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? LG34 machine does not support the type-c port.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nMonitor(x) ::: x is a monitor.\nCheaper(x, y) ::: x is cheaper than y.\nResolution(x, y) ::: x has a resolution of y.\nSupport(x, y) ::: x supports y.\nTypeCPort(x) ::: x is a type-c port.\nPremises:\nMonitor(aoc) ∧ Cheaper(aoc, 100) ::: Some monitors equipped in the lab are produced by the company named AOC.\n∀x (Monitor(x) → Cheaper(x, 100)) ::: All monitors equipped in the lab are cheaper than their original prices.\n∀x (Cheaper(x, 100) → Resolution(x, 1080p)) ::: If the monitor is cheaper than its original prices, then its resolution is 1080p.\n¬∃x (Monitor(x) ∧ Support(x, type-c)) ::: No monitor is with a resolution of 1080p.\nMonitor(lg34) ::: LG34 is equipped in the lab.\nConclusion:\nSupport(lg34, type-c) ::: LG34 machine does not support the type-c port.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a"
    ]
  },
  {
    "id": "FOLIO_train_500",
    "context": "Some monitors equipped in the lab are produced by the company named AOC. All monitors equipped in the lab are cheaper than their original prices. If the monitor is cheaper than its original prices, then its resolution is 1080p. If a monitor is with a resolution of 1080p, then it does not support the type-c port. LG34 is equipped in the lab.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? LG34 is not with a resolution of 1080p.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nMonitor(x) ::: x is a monitor.\nCheaper(x, y) ::: x is cheaper than y.\nOriginalPrice(x, y) ::: x is the original price of y.\nResolution(x, y) ::: x has a resolution of y.\nSupport(x, y) ::: x supports y.\nTypeCPort(x) ::: x is a type-c port.\nPremises:\nMonitor(lg34) ::: LG34 is a monitor.\n∀x (Monitor(x) → Cheaper(x, originalPrice(x))) ::: All monitors equipped in the lab are cheaper than their original prices.\n∀x (Cheaper(x, originalPrice(x)) → Resolution(x, 1080p)) ::: If the monitor is cheaper than its original prices, then its resolution is 1080p.\n¬Support(lg34, typeCPort) ::: If a monitor is with a resolution of 1080p, then it does not support the type-c port.\nConclusion:\n¬Resolution(lg34, 1080p) ::: LG34 is not with a resolution of 1080p.\n------"
    ]
  },
  {
    "id": "FOLIO_train_501",
    "context": "All fruits sold in Boston are shipped from Columbia. Some fruits sold in New Haven are shipped from Mexico. No fruits shipped from Columbia are fruits sold in New York. Avocadoe are a kind of fruit sold in New York or New York. Avocadoe are either shipped from Columbia and sold in New Haven, or neither shipped from Columbia nor sold in New Haven.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Avocados are a kind of fruit sold in New York.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nFruit(x) ::: x is a fruit.\nShippedFrom(x, y) ::: x is shipped from y.\nSoldIn(x, y) ::: x is sold in y.\nKindOf(x, y) ::: x is a kind of y.\nPremises:\n∀x (Fruit(x) → ShippedFrom(x, Columbia)) ::: All fruits sold in Boston are shipped from Columbia.\n∃x (Fruit(x) ∧ SoldIn(x, NewHaven)) ::: Some fruits sold in New Haven are shipped from Mexico.\n¬∃x (Fruit(x) ∧ ShippedFrom(x, Columbia) ∧ SoldIn(x, NewYork)) ::: No fruits shipped from Columbia are fruits sold in New York.\n∃x (Fruit(x) ∧ KindOf(x, avocado)) ::: Avocadoe are a kind of fruit sold in New York or New York.\n∃x (Fruit(x) ∧ ShippedFrom(x, Columbia) ∧ SoldIn(x, NewHaven)) ::: Avocadoe are either shipped from Columbia and sold in New Haven, or neither shipped from Columbia nor sold in New Haven."
    ]
  },
  {
    "id": "FOLIO_train_502",
    "context": "All fruits sold in Boston are shipped from Columbia. Some fruits sold in New Haven are shipped from Mexico. No fruits shipped from Columbia are fruits sold in New York. Avocadoe are a kind of fruit sold in New York or New York. Avocadoe are either shipped from Columbia and sold in New Haven, or neither shipped from Columbia nor sold in New Haven.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Avocados are either sold in New York or sold in New Haven.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nFruit(x) ::: x is a fruit.\nShippedFrom(x, y) ::: x is shipped from y.\nSoldIn(x, y) ::: x is sold in y.\nKindOf(x, y) ::: x is a kind of y.\nPremises:\n∀x (Fruit(x) → ShippedFrom(x, Columbia)) ::: All fruits sold in Boston are shipped from Columbia.\n∃x (Fruit(x) ∧ SoldIn(x, NewHaven)) ::: Some fruits sold in New Haven are shipped from Mexico.\n¬∃x (Fruit(x) ∧ ShippedFrom(x, Columbia) ∧ SoldIn(x, NewYork)) ::: No fruits shipped from Columbia are fruits sold in New York.\n∃x (Fruit(x) ∧ KindOf(x, avocado)) ::: Avocadoe are a kind of fruit sold in New York or New York.\n∃x (Fruit(x) ∧ ShippedFrom(x, Columbia) ∧ SoldIn(x, NewHaven)) ::: Avocadoe are either shipped from Columbia and sold in New Haven, or neither shipped from Columbia nor sold in New Haven."
    ]
  },
  {
    "id": "FOLIO_train_503",
    "context": "All fruits sold in Boston are shipped from Columbia. Some fruits sold in New Haven are shipped from Mexico. No fruits shipped from Columbia are fruits sold in New York. Avocadoe are a kind of fruit sold in New York or New York. Avocadoe are either shipped from Columbia and sold in New Haven, or neither shipped from Columbia nor sold in New Haven.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Avocados are either sold in New Haven or sold in Boston",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nFruit(x) ::: x is a fruit.\nShippedFrom(x, y) ::: x is shipped from y.\nSoldIn(x, y) ::: x is sold in y.\nKindOf(x, y) ::: x is a kind of y.\nPremises:\n∀x (Fruit(x) → ShippedFrom(x, Columbia)) ::: All fruits sold in Boston are shipped from Columbia.\n∃x (Fruit(x) ∧ SoldIn(x, NewHaven)) ::: Some fruits sold in New Haven are shipped from Mexico.\n¬∃x (Fruit(x) ∧ ShippedFrom(x, Columbia) ∧ SoldIn(x, NewYork)) ::: No fruits shipped from Columbia are fruits sold in New York.\n∃x (Fruit(x) ∧ KindOf(x, avocado)) ::: Avocadoe are a kind of fruit sold in New York or New York.\n∃x (Fruit(x) ∧ ShippedFrom(x, Columbia) ∧ SoldIn(x, NewHaven)) ::: Avocadoe are either shipped from Columbia and sold in New Haven, or neither shipped from Columbia nor sold in New Haven."
    ]
  },
  {
    "id": "FOLIO_train_504",
    "context": "All fruits sold in Boston are shipped from Columbia. Some fruits sold in New Haven are shipped from Mexico. No fruits shipped from Columbia are fruits sold in New York. Avocadoe are a kind of fruit sold in New York or New York. Avocadoe are either shipped from Columbia and sold in New Haven, or neither shipped from Columbia nor sold in New Haven.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If avocados are not sold in New York and not shipped from Columbia, then they are neither sold in New York nor New Haven.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nFruit(x) ::: x is a fruit.\nShippedFrom(x, y) ::: x is shipped from y.\nSoldIn(x, y) ::: x is sold in y.\nKindOf(x, y) ::: x is a kind of y.\nPremises:\n∀x (Fruit(x) → ShippedFrom(x, Columbia)) ::: All fruits sold in Boston are shipped from Columbia.\n∃x (Fruit(x) ∧ SoldIn(x, NewHaven)) ::: Some fruits sold in New Haven are shipped from Mexico.\n¬∃x (Fruit(x) ∧ ShippedFrom(x, Columbia) ∧ SoldIn(x, NewYork)) ::: No fruits shipped from Columbia are fruits sold in New York.\n∃x (Fruit(x) ∧ KindOf(x, avocado)) ::: Avocadoe are a kind of fruit sold in New York or New York.\n∃x (Fruit(x) ∧ ShippedFrom(x, Columbia) ∧ SoldIn(x, NewHaven)) ::: Avocadoe are either shipped from Columbia and sold in New Haven, or neither shipped from Columbia nor sold in New Haven."
    ]
  },
  {
    "id": "FOLIO_train_505",
    "context": "Some monitors equipped in the library are produced by AOC. All monitors equipped in the library are cheaper than 800 dollars. All monitors cheaper than 800 dollars are with a resolution of 1080p. If a monitor has a resolution of 1080p, then it does not support the type-c port. A-2017 supports the type-c port.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A-2017 is produced by AOC.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nMonitor(x) ::: x is a monitor.\nLibrary(x) ::: x is a library.\nCheaper(x, y) ::: x is cheaper than y.\nResolution(x, y) ::: x has a resolution of y.\nSupport(x, y) ::: x supports y.\nTypeCPort(x) ::: x is a type-c port.\nPremises:\n∃x (Library(x) ∧ Monitor(x) ∧ Cheaper(x, 800)) ::: Some monitors equipped in the library are cheaper than 800 dollars.\n∀x (Monitor(x) ∧ Resolution(x, 1080p)) → ¬Support(x, type-cPort) ::: If a monitor has a resolution of 1080p, then it does not support the type-c port.\nMonitor(a-2017) ::: A-2017 is a monitor.\nSupport(a-2017, type-cPort) ::: A-2017 supports the type-c port.\nConclusion:\nA-2017 is produced by AOC.\n------\nProblem:\nAll people who regularly drink coffee are dependent on"
    ]
  },
  {
    "id": "FOLIO_train_506",
    "context": "Some monitors equipped in the library are produced by AOC. All monitors equipped in the library are cheaper than 800 dollars. All monitors cheaper than 800 dollars are with a resolution of 1080p. If a monitor has a resolution of 1080p, then it does not support the type-c port. A-2017 supports the type-c port.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A-2017 is produced by AOC and equipped in the library.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nLibrary(x) ::: x is a library.\nMonitor(x) ::: x is a monitor.\nAOC(x) ::: x is produced by AOC.\nCheaper(x, y) ::: x is cheaper than y.\nResolution(x, y) ::: x has a resolution of y.\nSupport(x, y) ::: x supports y.\nTypeCPort(x) ::: x is a type-c port.\nPremises:\nLibrary(library) ::: The library is a library.\n∀x (Monitor(x) → Library(x)) ::: All monitors equipped in the library are cheaper than 800 dollars.\n∀x (Monitor(x) → Cheaper(x, 800)) ::: All monitors equipped in the library are cheaper than 800 dollars.\n∀x (Cheaper(x, 800) → Resolution(x, 1080p)) ::: All monitors equipped in the library are cheaper than 800 dollars.\n∀x (Resolution(x, 1080p) → ¬Support(x, type-c)) ::: All monitors equipped in the library are cheaper than 800"
    ]
  },
  {
    "id": "FOLIO_train_507",
    "context": "Some monitors equipped in the library are produced by AOC. All monitors equipped in the library are cheaper than 800 dollars. All monitors cheaper than 800 dollars are with a resolution of 1080p. If a monitor has a resolution of 1080p, then it does not support the type-c port. A-2017 supports the type-c port.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If A-2017 is not with a resolution of 1080p or produced by AOC, then it is not equipped in the library.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLibrary(x) ::: x is a library.\nMonitor(x) ::: x is a monitor.\nCheaper(x, y) ::: x is cheaper than y.\nResolution(x, y) ::: x has a resolution of y.\nSupport(x, y) ::: x supports y.\nTypeCPort(x) ::: x is a type-c port.\nPremises:\nLibrary(library) ::: The library is a library.\n∀x (Monitor(x) → Library(x)) ::: All monitors equipped in the library are cheaper than 800 dollars.\n∀x (Cheaper(x, 800) → Library(x)) ::: All monitors equipped in the library are cheaper than 800 dollars.\n∀x (Resolution(x, 1080p) → Library(x)) ::: All monitors equipped in the library are cheaper than 800 dollars.\n∀x (Support(x, type-c) → Library(x)) ::: All monitors equipped in the library are cheaper than 800 dollars.\n∃x (Monitor(x) ∧ Support(x, type-c)) ::: A-2017 supports the type-"
    ]
  },
  {
    "id": "FOLIO_train_508",
    "context": "Sūduva Marijampolė holds the Lithuanian Supercup. Sūduva Marijampolė is a soccer team.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Some soccer team holds the Lithuanian Supercup.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nSoccerTeam(x) ::: x is a soccer team.\nHold(x, y) ::: x holds y.\nLithuanianSupercup(y) ::: y is the Lithuanian Supercup.\nPremises:\nSūduvaMarijampolė ∧ SoccerTeam(SūduvaMarijampolė) ::: Sūduva Marijampolė holds the Lithuanian Supercup.\nSūduvaMarijampolė ∧ SoccerTeam(SūduvaMarijampolė) ::: Sūduva Marijampolė is a soccer team.\nConclusion:\nHold(SūduvaMarijampolė, LithuanianSupercup) ::: Some soccer team holds the Lithuanian Supercup.\n------\nProblem:\nThe 2018 FIFA World Cup was the 21st FIFA World Cup, an international football tournament contested by the men's national teams of the member associations of FIFA once every four years. The final took place on 15 July 2018 at the Luzhniki Stadium in Moscow, Russia, between France and Croatia. France won the match 4–2 to claim their second World Cup title, marking the fourth consecutive title won by a European team."
    ]
  },
  {
    "id": "FOLIO_train_509",
    "context": "Ainderby Quernhow is a village and civil parish in the Hambleton District. Hambleton District is in North Yorkshire. North Yorkshire is in England.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There is a village in England.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nVillage(x) ::: x is a village.\nCivilParish(x) ::: x is a civil parish.\nDistrict(x) ::: x is a district.\nCountry(x) ::: x is a country.\nPremises:\nVillage(ainderbyQuernhow) ∧ CivilParish(ainderbyQuernhow) ::: Ainderby Quernhow is a village and civil parish in the Hambleton District.\nDistrict(hambletonDistrict) ∧ Country(hambletonDistrict) ∧ Country(england) ::: Hambleton District is in North Yorkshire. North Yorkshire is in England.\nConclusion:\nCountry(ainderbyQuernhow) ::: There is a village in England.\n------\nProblem:\nThe 2010 FIFA World Cup was the 19th FIFA World Cup, the world championship for men's national association football teams. It took place in South Africa from 11 June to 11 July 2010. The country was chosen as the host nation by the FIFA Executive Committee on 15 May 2004.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The 2010 FIFA World"
    ]
  },
  {
    "id": "FOLIO_train_510",
    "context": "Ainderby Quernhow is a village and civil parish in the Hambleton District. Hambleton District is in North Yorkshire. North Yorkshire is in England.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There is no civil parish in England.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nVillage(x) ::: x is a village.\nCivilParish(x) ::: x is a civil parish.\nDistrict(x) ::: x is a district.\nCountry(x) ::: x is a country.\nPremises:\nVillage(ainderbyQuernhow) ∧ CivilParish(ainderbyQuernhow) ∧ District(ainderbyQuernhow, hambletonDistrict) ∧ District(hambletonDistrict, northYorkshire) ∧ District(northYorkshire, england) ::: Ainderby Quernhow is a village and civil parish in the Hambleton District. Hambleton District is in North Yorkshire. North Yorkshire is in England.\nConclusion:\n¬CivilParish(england) ::: There is no civil parish in England.\n------"
    ]
  },
  {
    "id": "FOLIO_train_511",
    "context": "Douglas Adams is an author who created the book collection called The Salmon of Doubt. The Salmon of Doubt is about life experiences and technology. All authors are writers. Writers create innovative ideas. Some books that contain innovative ideas are about technology.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Douglas Adams is a writer.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nBased on the above information, is the following statement true, false, or uncertain? The Salmon of Doubt is about life experiences.\nBased on the above information, is the following statement true, false, or uncertain? The Salmon of Doubt is about technology.\n###\nPredicates:\nAuthor(x, y) ::: x is the author of y.\nWriter(x) ::: x is a writer.\nCreate(x, y) ::: x creates y.\nInnovative(x) ::: x is innovative.\nBook(x) ::: x is a book.\nTechnology(x) ::: x is technology.\nLifeExperience(x) ::: x is a life experience.\nPremises:\nAuthor(douglas, salmonOfDoubt) ∧ Book(salmonOfDoubt) ::: Douglas Adams is an"
    ]
  },
  {
    "id": "FOLIO_train_512",
    "context": "Douglas Adams is an author who created the book collection called The Salmon of Doubt. The Salmon of Doubt is about life experiences and technology. All authors are writers. Writers create innovative ideas. Some books that contain innovative ideas are about technology.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Douglas Adams created innovative ideas.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nAuthor(x, y) ::: x is the author of y.\nWriter(x) ::: x is a writer.\nCreate(x, y) ::: x creates y.\nInnovative(x) ::: x is an innovative idea.\nBook(x) ::: x is a book.\nTechnology(x) ::: x is about technology.\nPremises:\nAuthor(douglas, salmonOfDoubt) ∧ Book(salmonOfDoubt) ∧ Technology(salmonOfDoubt) ::: Douglas Adams is an author who created the book collection called The Salmon of Doubt. The Salmon of Doubt is about life experiences and technology.\n∀x (Author(x) → Writer(x)) ::: All authors are writers.\n∃x (Writer(x) ∧ Create(x, innovative"
    ]
  },
  {
    "id": "FOLIO_train_513",
    "context": "Douglas Adams is an author who created the book collection called The Salmon of Doubt. The Salmon of Doubt is about life experiences and technology. All authors are writers. Writers create innovative ideas. Some books that contain innovative ideas are about technology.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Salmon of Doubt has no innovative Ideas.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nAuthor(x, y) ::: x is the author of y.\nBook(x) ::: x is a book.\nCollection(x) ::: x is a book collection.\nInnovativeIdea(x) ::: x is an innovative idea.\nTechnology(x) ::: x is about technology.\nLifeExperience(x) ::: x is about life experiences.\nPremises:\nAuthor(douglas, salmonOfDoubt) ∧ Book(salmonOfDoubt) ∧ Collection(salmonOfDoubt) ::: Douglas Adams is an author who created the book collection called The Salmon of Doubt.\nCollection(salmonOfDoubt) ∧ Technology(salmonOfDoubt) ∧ LifeExperience(salmonOfDoubt) ::: The Salmon of Doubt"
    ]
  },
  {
    "id": "FOLIO_train_514",
    "context": "No disposable products can help slow down global warming. All eco-friendly brands can help slow down global warming. All sustainable fashion brands are eco-friendly brands. All fast fashion products are disposable products. If Reformation is not helping slow down global warming, then Reformation is an eco-friendly brand or a sustainable fashion brand.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Reformation is an eco-friendly brand.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nDisposable(x) ::: x is a disposable product.\nEcoFriendly(x) ::: x is an eco-friendly brand.\nSustainable(x) ::: x is a sustainable fashion brand.\nFastFashion(x) ::: x is a fast fashion product.\nHelp(x, y) ::: x helps y.\nPremises:\n¬Disposable(x) → Help(x, slowDownGlobalWarming) ::: No disposable products can help slow down global warming.\nEcoFriendly(x) → Help(x, slowDownGlobalWarming) ::: All eco-friendly brands can help slow down global warming.\nSustainable(x) ∧ EcoFriendly(x) ::: All sustainable fashion brands are eco"
    ]
  },
  {
    "id": "FOLIO_train_515",
    "context": "No disposable products can help slow down global warming. All eco-friendly brands can help slow down global warming. All sustainable fashion brands are eco-friendly brands. All fast fashion products are disposable products. If Reformation is not helping slow down global warming, then Reformation is an eco-friendly brand or a sustainable fashion brand.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Reformation produces fast fashion products.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nDisposable(x) ::: x is a disposable product.\nEcoFriendly(x) ::: x is an eco-friendly brand.\nSustainable(x) ::: x is a sustainable fashion brand.\nFastFashion(x) ::: x is a fast fashion product.\nHelp(x, y) ::: x helps y.\nPremises:\n¬Disposable(x) → Help(x, slowDownGlobalWarming) ::: No disposable products can help slow down global warming.\nEcoFriendly(x) → Help(x, slowDownGlobalWarming) ::: All eco-friendly brands can help slow down global warming.\nSustainable(x) ∧ EcoFriendly(x) ::: All sustainable fashion brands are eco"
    ]
  },
  {
    "id": "FOLIO_train_516",
    "context": "No disposable products can help slow down global warming. All eco-friendly brands can help slow down global warming. All sustainable fashion brands are eco-friendly brands. All fast fashion products are disposable products. If Reformation is not helping slow down global warming, then Reformation is an eco-friendly brand or a sustainable fashion brand.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Reformation does not produce fast fashion products.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nDisposable(x) ::: x is a disposable product.\nEcoFriendly(x) ::: x is an eco-friendly brand.\nSustainable(x) ::: x is a sustainable fashion brand.\nFastFashion(x) ::: x is a fast fashion product.\nHelp(x, y) ::: x helps y.\nPremises:\n¬Disposable(x) → Help(x, slowDownGlobalWarming) ::: No disposable products can help slow down global warming.\nEcoFriendly(x) → Help(x, slowDownGlobalWarming) ::: All eco-friendly brands can help slow down global warming.\nSustainable(x) ∧ EcoFriendly(x) ::: All sustainable fashion brands are eco"
    ]
  },
  {
    "id": "FOLIO_train_517",
    "context": "No disposable products can help slow down global warming. All eco-friendly brands can help slow down global warming. All sustainable fashion brands are eco-friendly brands. All fast fashion products are disposable products. If Reformation is not helping slow down global warming, then Reformation is an eco-friendly brand or a sustainable fashion brand.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Reformation does not produce fast fashion products or does not produce disposable products.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nDisposable(x) ::: x is a disposable product.\nEcoFriendly(x) ::: x is an eco-friendly brand.\nSustainable(x) ::: x is a sustainable fashion brand.\nFastFashion(x) ::: x is a fast fashion product.\nHelp(x, y) ::: x helps y.\nPremises:\n¬Disposable(x) ⊕ ¬FastFashion(x) ::: No disposable products can help slow down global warming.\nEcoFriendly(x) ⊕ Sustainable(x) ::: All eco-friendly brands can help slow down global warming.\nSustainable(x) ⊕ EcoFriendly(x) ::: All sustainable fashion brands are eco-friendly br"
    ]
  },
  {
    "id": "FOLIO_train_518",
    "context": "No disposable products can help slow down global warming. All eco-friendly brands can help slow down global warming. All sustainable fashion brands are eco-friendly brands. All fast fashion products are disposable products. If Reformation is not helping slow down global warming, then Reformation is an eco-friendly brand or a sustainable fashion brand.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Reformation produces disposable products, then Reformation produces fast fashion products.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nDisposable(x) ::: x is a disposable product.\nEcoFriendly(x) ::: x is an eco-friendly brand.\nSustainable(x) ::: x is a sustainable fashion brand.\nFastFashion(x) ::: x is a fast fashion product.\nHelp(x, y) ::: x helps y.\nPremises:\n¬Disposable(x) → Help(x, slowDownGlobalWarming) ::: No disposable products can help slow down global warming.\nEcoFriendly(x) → Help(x, slowDownGlobalWarming) ::: All eco-friendly brands can help slow down global warming.\nSustainable(x) → EcoFriendly(x) ::: All sustainable fashion brands are eco-"
    ]
  },
  {
    "id": "FOLIO_train_519",
    "context": "No disposable products can help slow down global warming. All eco-friendly brands can help slow down global warming. All sustainable fashion brands are eco-friendly brands. All fast fashion products are disposable products. If Reformation is not helping slow down global warming, then Reformation is an eco-friendly brand or a sustainable fashion brand.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Reformation produces fast fashion products or helps slow down global warming, then Reformation produces fast fashion products.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDisposable(x) ::: x is a disposable product.\nEcoFriendly(x) ::: x is an eco-friendly brand.\nSustainable(x) ::: x is a sustainable fashion brand.\nFastFashion(x) ::: x is a fast fashion product.\nHelp(x, y) ::: x helps y.\nPremises:\n¬Disposable(x) → ¬FastFashion(x) ::: No disposable products can help slow down global warming.\nEcoFriendly(x) → Sustainable(x) ::: All eco-friendly brands can help slow down global warming.\nSustainable(x) → EcoFriendly(x) ::: All sustainable fashion brands are eco-friendly brands.\nF"
    ]
  },
  {
    "id": "FOLIO_train_520",
    "context": "Roy Richardson was a cricketer for Sint Maartener, a consituent country. Roy Richardson was a right handed batsman and medium pace bowler. Roy Richardson was old when he debuted in cricket. Sherville Huggins dismissed Roy Richardson.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Sherville Huggins has never dismissed anyone playing for a constituent country.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCricketer(x) ::: x is a cricketer.\nRightHandedBatsman(x) ::: x is a right handed batsman.\nMediumPaceBowler(x) ::: x is a medium pace bowler.\nOld(x) ::: x is old.\nDebut(x, y) ::: x debuted in cricket in year y.\nDismiss(x, y) ::: x was dismissed by y.\nPremises:\nCricketer(roy) ∧ RightHandedBatsman(roy) ∧ MediumPaceBowler(roy) ∧ Old(roy) ∧ Debut(roy, year1999) ::: Roy Richardson was a cricketer for Sint Maartener, a consituent country. Roy Richardson was a right handed batsman and medium pace bowler. Roy Richardson was old when he debuted in cricket.\nDismiss(sherville, roy) ::: Sherville Huggins dismissed Roy Richardson.\nConclusion:\n¬Dismiss(sherville, constituentCountry) ::: Sherville Huggins has never dismissed anyone playing for a constituent country.\n------"
    ]
  },
  {
    "id": "FOLIO_train_521",
    "context": "Roy Richardson was a cricketer for Sint Maartener, a consituent country. Roy Richardson was a right handed batsman and medium pace bowler. Roy Richardson was old when he debuted in cricket. Sherville Huggins dismissed Roy Richardson.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There are no right handed medium pace bowlers playing for Sint Maartener.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nCricketer(x) ::: x is a cricketer.\nRightHanded(x) ::: x is a right handed batsman.\nMediumPaceBowler(x) ::: x is a medium pace bowler.\nOld(x) ::: x is old.\nDebut(x, y) ::: x debuted in cricket in year y.\nDismiss(x, y) ::: x was dismissed by y.\nPremises:\nCricketer(roy) ∧ RightHanded(roy) ∧ MediumPaceBowler(roy) ∧ Old(roy) ∧ Debut(roy, year1990) ∧ Dismiss(roy, sherville) ::: Roy Richardson was a cricketer for Sint Maartener, a consituent country. Roy Richardson was a right handed batsman and medium pace bowler. Roy Richardson was old when he debuted in cricket. Sherville Huggins dismissed Roy Richardson.\nConclusion:\n¬∃x (Cricketer(x) ∧ RightHanded(x) ∧ MediumPaceBowler(x)) ::: There are no right handed medium pace"
    ]
  },
  {
    "id": "FOLIO_train_522",
    "context": "To get a job at Google, you need to have a lot of work experience or a good education. All Yale graduates who submitted their resumes to Google got jobs there. John has a lot of work experience. John submitted his resume to Google and got a job there.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? John is a Yale graduate.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nYaleGraduate(x) ::: x is a Yale graduate.\nGoogleJob(x) ::: x has a job at Google.\nWorkExperience(x) ::: x has a lot of work experience.\nResume(x, y) ::: x submitted his resume to y.\nPremises:\n∀x (GoogleJob(x) → WorkExperience(x)) ::: To get a job at Google, you need to have a lot of work experience.\n∀x (YaleGraduate(x) → GoogleJob(x)) ::: All Yale graduates who submitted their resumes to Google got jobs there.\nResume(john, google) ∧ GoogleJob(john) ::: John submitted his resume to Google and got a job there.\nConclusion:\nYaleGraduate(john) ::: John is a Yale graduate.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either"
    ]
  },
  {
    "id": "FOLIO_train_523",
    "context": "No students are doctors. All people taking classes are students. All graduate students are people taking classes. All PhD students are graduate students. If Joe is a graduate student or a doctor (but not both), then Joe is not a graduate student and a student.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Joe is a person taking classes.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nStudent(x) ::: x is a student.\nDoctor(x) ::: x is a doctor.\nPhDStudent(x) ::: x is a PhD student.\nGraduateStudent(x) ::: x is a graduate student.\nPremises:\n¬All(Student(x) ∧ Doctor(x)) ::: No students are doctors.\nAll(Student(x) ∧ PeopleTakingClasses(x)) ::: All people taking classes are students.\nAll(GraduateStudent(x) ∧ PeopleTakingClasses(x)) ::: All graduate students are people taking classes.\nAll(PhDStudent(x) ∧ GraduateStudent(x)) ::: All PhD students are graduate students.\n¬(GraduateStudent(joe) ∧ Student(joe)) ::: If Joe is a graduate student or a doctor (but not both), then Joe is not a graduate student and a student.\nConclusion:\nPeopleTakingClasses(joe) ::: Joe is a person taking classes.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted"
    ]
  },
  {
    "id": "FOLIO_train_524",
    "context": "No students are doctors. All people taking classes are students. All graduate students are people taking classes. All PhD students are graduate students. If Joe is a graduate student or a doctor (but not both), then Joe is not a graduate student and a student.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Joe is a PhD student.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nStudent(x) ::: x is a student.\nDoctor(x) ::: x is a doctor.\nPhDStudent(x) ::: x is a PhD student.\nGraduateStudent(x) ::: x is a graduate student.\nPremises:\n¬All(Student(x) ∧ Doctor(x)) ::: No students are doctors.\nAll(Student(x) ∧ PeopleTakingClasses(x)) ::: All people taking classes are students.\nAll(GraduateStudent(x) ∧ PeopleTakingClasses(x)) ::: All graduate students are people taking classes.\nAll(PhDStudent(x) ∧ GraduateStudent(x)) ::: All PhD students are graduate students.\n¬(GraduateStudent(joe) ∧ Student(joe)) ::: If Joe is a graduate student or a doctor (but not both), then Joe is not a graduate student and a student.\nConclusion:\nPhDStudent(joe) ::: Joe is a PhD student.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to c"
    ]
  },
  {
    "id": "FOLIO_train_525",
    "context": "No students are doctors. All people taking classes are students. All graduate students are people taking classes. All PhD students are graduate students. If Joe is a graduate student or a doctor (but not both), then Joe is not a graduate student and a student.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Joe is not a PhD student.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nStudent(x) ::: x is a student.\nDoctor(x) ::: x is a doctor.\nPhDStudent(x) ::: x is a PhD student.\nGraduateStudent(x) ::: x is a graduate student.\nPremises:\n¬∃x (Student(x) ∧ Doctor(x)) ::: No students are doctors.\n∀x (Student(x) → ∃y (TakingClass(x, y))) ::: All people taking classes are students.\n∀x (GraduateStudent(x) → Student(x)) ::: All graduate students are students.\n∀x (PhDStudent(x) → GraduateStudent(x)) ::: All PhD students are graduate students.\n¬(GraduateStudent(joe) ∧ Student(joe)) → (GraduateStudent(joe) ∧ ¬Student(joe)) ::: If Joe is a graduate student or a student, but not both, then Joe is not a graduate student and a student.\nConclusion:\n¬PhDStudent(joe) ::: Joe is not a PhD student.\n------\nProblem:\nAll people who regularly drink coffee"
    ]
  },
  {
    "id": "FOLIO_train_526",
    "context": "Hugh Vanstone is one of the world's leading lighting designers. Hugh Vanstone is from the UK. Hugh Vanstone has lit more than 160 productions. Hugh Vanstone attended school where he is from.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Hugh Vanstone is one of the world's leading ligting designers and from the uk",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nLeading(x) ::: x is one of the world's leading lighting designers.\nFrom(x, y) ::: x is from y.\nUK(x) ::: x is from the UK.\nSchool(x) ::: x attended school.\nAttended(x, y) ::: x attended school y.\nPremises:\nLeading(hugh) ∧ From(hugh, uk) ∧ School(hugh, uk) ∧ Attended(hugh, uk) ::: Hugh Vanstone is one of the world's leading lighting designers and from the uk\nFrom(hugh, uk) ∧ School(hugh, uk) ∧ Attended(hugh, uk) ::: Hugh Vanstone is from the UK and attended school where he is from.\nConclusion:\nLeading(hugh) ∧ From(hugh, uk) ∧ School(hugh, uk) ∧ Attended(hugh, uk) ::: Hugh Vanstone is one of the world's leading ligting designers and from the uk\n------\nProblem:\nThe following is a list of the top 100 most popular baby names in the United States in"
    ]
  },
  {
    "id": "FOLIO_train_527",
    "context": "Hugh Vanstone is one of the world's leading lighting designers. Hugh Vanstone is from the UK. Hugh Vanstone has lit more than 160 productions. Hugh Vanstone attended school where he is from.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Hugh Vanstone has lit 170 productions.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nLeading(x) ::: x is a leading lighting designer.\nUK(x) ::: x is from the UK.\nProduction(x) ::: x is a production.\nLit(x, y) ::: x is lit by y.\nSchool(x) ::: x is a school.\nAttend(x, y) ::: x attends y.\nPremises:\nLeading(hugh) ∧ UK(hugh) ∧ Production(hugh, production1) ∧ Production(hugh, production2) ∧ Production(hugh, production3) ∧ Production(hugh, production4) ∧ Production(hugh, production5) ∧ Production(hugh, production6) ∧ Production(hugh, production7) ∧ Production(hugh, production8) ∧ Production(hugh, production9) ∧ Production(hugh, production10) ∧ Production(hugh, production11) ∧ Production(hugh, production12) ∧ Production(hugh, production13) ∧ Production(hugh, production14) ∧ Production(hugh, production15) ∧ Production(hugh, production"
    ]
  },
  {
    "id": "FOLIO_train_528",
    "context": "Hugh Vanstone is one of the world's leading lighting designers. Hugh Vanstone is from the UK. Hugh Vanstone has lit more than 160 productions. Hugh Vanstone attended school where he is from.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Hugh Vanstone attended school in the US.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nUK(x) ::: x is from the UK.\nUS(x) ::: x is from the US.\nLightingDesigner(x) ::: x is a lighting designer.\nLit(x, y) ::: x lit y.\nProduction(x) ::: x is a production.\nSchool(x) ::: x is a school.\nAttend(x, y) ::: x attends y.\nPremises:\nUK(hugh) ∧ LightingDesigner(hugh) ∧ Lit(hugh, moreThan160Productions) ::: Hugh Vanstone is one of the world's leading lighting designers.\nUK(hugh) ::: Hugh Vanstone is from the UK.\nAttend(hugh, schoolWhereHughIsFrom) ::: Hugh Vanstone attended school where he is from.\nConclusion:\nUS(hugh) ::: Hugh Vanstone attended school in the US.\n------\nProblem:\nThe following is a list of the top 100 most popular baby names in the US in 2013.\n1. Jacob\n2. Mason\n3. William\n4. Michael\n5. Ethan\n6"
    ]
  },
  {
    "id": "FOLIO_train_529",
    "context": "No man can run faster than Bolt. Superman is not a man.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Superman can run faster than Bolt.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nMan(x) ::: x is a man.\nRun(x, y) ::: x runs at speed y.\nFaster(x, y) ::: x runs faster than y.\nSuperman(x) ::: x is Superman.\nPremises:\n∀x (Man(x) → Run(x, bolt)) ::: No man can run faster than Bolt.\n¬Superman(x) ∧ Man(x) ::: Superman is not a man.\nConclusion:\nFaster(superman, bolt) ::: Superman can run faster than Bolt.\n------\nProblem:\nNo man can run faster than Bolt. Superman is not a man.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Superman can run faster than Bolt.\n###\nPredicates:\nMan(x) ::: x is a man.\nRun(x, y) ::: x runs at speed y.\nFaster(x, y) ::: x runs faster than y.\nSuperman(x) ::: x is Superman.\nPremises:\n∀x (Man(x) → Run(x, b"
    ]
  },
  {
    "id": "FOLIO_train_530",
    "context": "Donald Ervin Knuth is an American computer scientist, mathematician, and Professor Emeritus at Stanford University. Knuth has been called the \"father of the analysis of algorithms\".",
    "question": "Based on the above information, is the following statement true, false, or uncertain? An American scientist has been called the \"father of the analysis of algorithms\".",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nAmerican(x) ::: x is an American.\nScientist(x) ::: x is a scientist.\nProfessor(x) ::: x is a professor.\nEmeritus(x) ::: x is an emeritus.\nFather(x, y) ::: x is the father of y.\nAlgorithm(x) ::: x is an algorithm.\nAnalysis(x, y) ::: x is the analysis of y.\nPremises:\nAmerican(donald) ∧ Scientist(donald) ∧ Professor(donald) ∧ Emeritus(donald) ::: Donald Ervin Knuth is an American computer scientist, mathematician, and Professor Emeritus at Stanford University.\n∃x (Algorithm(x) ∧ Analysis(x, analysisOfAlgorithms)) ::: There is an algorithm called analysis of algorithms.\nConclusion:\nFather(donald, analysisOfAlgorithms) ::: Donald Ervin Knuth has been called the \"father of the analysis of algorithms\".\n------"
    ]
  },
  {
    "id": "FOLIO_train_531",
    "context": "Donald Ervin Knuth is an American computer scientist, mathematician, and Professor Emeritus at Stanford University. Knuth has been called the \"father of the analysis of algorithms\".",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A mathematician has been called the \"father of the analysis of algorithms\".",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nAmerican(x) ::: x is an American.\nComputerScientist(x) ::: x is a computer scientist.\nMathematician(x) ::: x is a mathematician.\nProfessor(x) ::: x is a professor.\nEmeritus(x) ::: x is an emeritus.\nPremises:\nAmerican(donald) ∧ ComputerScientist(donald) ∧ Mathematician(donald) ∧ Professor(donald) ∧ Emeritus(donald) ::: Donald Ervin Knuth is an American computer scientist, mathematician, and Professor Emeritus at Stanford University.\n∃x (ComputerScientist(x) ∧ Mathematician(x) ∧ FatherOf(x, analysisOfAlgorithms)) ::: Some computer scientist has been called the \"father of the analysis of algorithms\".\nConclusion:\nMathematician(donald) ∧ FatherOf(donald, analysisOfAlgorithms) ::: A mathematician has been called the"
    ]
  },
  {
    "id": "FOLIO_train_532",
    "context": "Donald Ervin Knuth is an American computer scientist, mathematician, and Professor Emeritus at Stanford University. Knuth has been called the \"father of the analysis of algorithms\".",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Donald Knuth is a well-known figure in the field of artificial intelligence .",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nAmerican(x) ::: x is an American.\nComputerScientist(x) ::: x is a computer scientist.\nMathematician(x) ::: x is a mathematician.\nProfessorEmeritus(x) ::: x is a Professor Emeritus.\nFather(x, y) ::: x is the father of y.\nAnalysisOfAlgorithms(x) ::: x is the analysis of algorithms.\nArtificialIntelligence(x) ::: x is artificial intelligence.\nPremises:\nAmerican(donald) ∧ ComputerScientist(donald) ∧ Mathematician(donald) ∧ ProfessorEmeritus(donald) ::: Donald Ervin Knuth is an American computer scientist, mathematician, and Professor Emeritus at Stanford University.\nFather(donald, analysisOfAlgorithms) ::: Donald Knuth has been called the \"father of the analysis of algorithms\".\nArtificialIntelligence(analysisOfAlgorithms) ::: analysis of algorithms is artificial intelligence"
    ]
  },
  {
    "id": "FOLIO_train_533",
    "context": "Neocrepidodera Corpulentas are flea beetles or moths. The species Neocrepidodera Corpulenta is in the Chrysomelidae family. There are no moths within the Chrysomelidae family.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There is a flea beetle within the Chrysomelidae family.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nFleaBeetle(x) ::: x is a flea beetle.\nMoth(x) ::: x is a moth.\nChrysomelidae(x) ::: x is a member of the Chrysomelidae family.\nPremises:\nChrysomelidae(neocrepidoderaCorpulenta) ::: Neocrepidodera Corpulenta is a member of the Chrysomelidae family.\nChrysomelidae(moth) ⊕ Moth(fleaBeetle) ::: There are no moths within the Chrysomelidae family.\nConclusion:\nFleaBeetle(neocrepidoderaCorpulenta) ::: There is a flea beetle within the Chrysomelidae family.\n------\nProblem:\nThe following is a list of the top 100 most popular baby names in the United States in 2013.\n1. Jacob\n2. Mason\n3. William\n4. Michael\n5. Ethan"
    ]
  },
  {
    "id": "FOLIO_train_534",
    "context": "Neocrepidodera Corpulentas are flea beetles or moths. The species Neocrepidodera Corpulenta is in the Chrysomelidae family. There are no moths within the Chrysomelidae family.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There are no flea beetles within the Chrysomelidae family.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nFleaBeetle(x) ::: x is a flea beetle.\nMoth(x) ::: x is a moth.\nChrysomelidae(x) ::: x is a member of the Chrysomelidae family.\nPremises:\nChrysomelidae(neocrepidoderaCorpulenta) ::: Neocrepidodera Corpulenta is a member of the Chrysomelidae family.\nChrysomelidae(moth) ::: Moth is a member of the Chrysomelidae family.\nFleaBeetle(neocrepidoderaCorpulenta) ::: Neocrepidodera Corpulenta is a flea beetle.\nMoth(neocrepidoderaCorpulenta) ::: Neocrepidodera Corpulenta is a moth.\nConclusion:\n¬Chrysomelidae(neocrepidoderaCorpulenta) ::: There are no flea beetles within the Chrys"
    ]
  },
  {
    "id": "FOLIO_train_535",
    "context": "Carrozzeria Colli is a Milanese coachbuilder company that was established by Giuseppe Colli in 1931. Carrozzeria Colli is a company that specialized in using aluminum. The first automobiles built by Carrozzeria Colli were racing cars. Some racing cars built by Carrozzeria Colli used Fiat 1100 mechanicals and chasis. Carrozzeria Colli worked for airforces. Carrozzeria Colli made car bodies.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Carrozzeria Colli made car bodies in 1931.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nMilanese(x) ::: x is a Milanese person.\nCoachbuilder(x) ::: x is a coachbuilder.\nCompany(x) ::: x is a company.\nSpecialize(x, y) ::: x specializes in y.\nAluminum(x) ::: x is made of aluminum.\nRacingCar(x) ::: x is a racing car.\nFiat1100(x) ::: x is a Fiat 1100.\nMechanical(x) ::: x is a mechanical.\nChassis(x) ::: x is a chassis.\nWorkFor(x, y) ::: x works for y.\nAirforce(x) ::: x is an airforce.\nCarBody(x) ::: x is a car body.\nPremises:\nMilanese(colli) ∧ Company(colli) ∧ Specialize(colli, aluminum) ::: Carrozzeria Colli is a Milanese coachbuilder company that"
    ]
  },
  {
    "id": "FOLIO_train_536",
    "context": "Carrozzeria Colli is a Milanese coachbuilder company that was established by Giuseppe Colli in 1931. Carrozzeria Colli is a company that specialized in using aluminum. The first automobiles built by Carrozzeria Colli were racing cars. Some racing cars built by Carrozzeria Colli used Fiat 1100 mechanicals and chasis. Carrozzeria Colli worked for airforces. Carrozzeria Colli made car bodies.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Carrozzeria Colli built airplanes during World War II.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nMilanese(x) ::: x is a Milanese person.\nCoachbuilder(x) ::: x is a coachbuilder.\nCompany(x) ::: x is a company.\nSpecialize(x, y) ::: x specializes in y.\nAluminum(x) ::: x is made of aluminum.\nRacingCar(x) ::: x is a racing car.\nFiat1100(x) ::: x is a Fiat 1100.\nMechanical(x) ::: x is a mechanical.\nChassis(x) ::: x is a chassis.\nWorkFor(x, y) ::: x works for y.\nBody(x) ::: x is a body.\nPremises:\nMilanese(colli) ∧ Company(colli) ∧ Specialize(colli, aluminum) ::: Carrozzeria Colli is a Milanese coachbuilder company that was established by Giuseppe Colli in 1931. Carrozzeria"
    ]
  },
  {
    "id": "FOLIO_train_537",
    "context": "Carrozzeria Colli is a Milanese coachbuilder company that was established by Giuseppe Colli in 1931. Carrozzeria Colli is a company that specialized in using aluminum. The first automobiles built by Carrozzeria Colli were racing cars. Some racing cars built by Carrozzeria Colli used Fiat 1100 mechanicals and chasis. Carrozzeria Colli worked for airforces. Carrozzeria Colli made car bodies.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Giuseppe Colli established a company that made car bodies.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nMilanese(x) ::: x is a Milanese person.\nCoachbuilder(x) ::: x is a coachbuilder.\nCompany(x) ::: x is a company.\nSpecialize(x, y) ::: x specializes in y.\nAluminum(x) ::: x is made of aluminum.\nRacingCar(x) ::: x is a racing car.\nFiat1100(x) ::: x is a Fiat 1100.\nMechanical(x) ::: x is a mechanical.\nChassis(x) ::: x is a chassis.\nWorkFor(x, y) ::: x works for y.\nAirforce(x) ::: x is an airforce.\nPremises:\nMilanese(giuseppe) ∧ Company(carrozzeriaColli) ∧ Specialize(carrozzeriaColli, aluminum) ::: Giuseppe Colli established a company that specialized in using aluminum.\nCompany(carroz"
    ]
  },
  {
    "id": "FOLIO_train_538",
    "context": "Carrozzeria Colli is a Milanese coachbuilder company that was established by Giuseppe Colli in 1931. Carrozzeria Colli is a company that specialized in using aluminum. The first automobiles built by Carrozzeria Colli were racing cars. Some racing cars built by Carrozzeria Colli used Fiat 1100 mechanicals and chasis. Carrozzeria Colli worked for airforces. Carrozzeria Colli made car bodies.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Giuseppe Colli established a Milanese coachbuilder company that specialized in using aluminum.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nMilanese(x) ::: x is a Milanese company.\nCoachbuilder(x) ::: x is a coachbuilder company.\nSpecialize(x, y) ::: x specializes in y.\nAluminum(x) ::: x is made of aluminum.\nRacingCar(x) ::: x is a racing car.\nFiat1100(x) ::: x is a Fiat 1100.\nMechanical(x) ::: x is a mechanical.\nChassis(x) ::: x is a chassis.\nWorkFor(x, y) ::: x works for y.\nCarBody(x) ::: x is a car body.\nAirforce(x) ::: x is an airforce.\nPremises:\nMilanese(carrozzeriaColli) ∧ Coachbuilder(carrozzeriaColli) ∧ Specialize(carrozzeriaColli, aluminum) ::: Carrozzeria Colli is a Milanese coach"
    ]
  },
  {
    "id": "FOLIO_train_539",
    "context": "Carrozzeria Colli is a Milanese coachbuilder company that was established by Giuseppe Colli in 1931. Carrozzeria Colli is a company that specialized in using aluminum. The first automobiles built by Carrozzeria Colli were racing cars. Some racing cars built by Carrozzeria Colli used Fiat 1100 mechanicals and chasis. Carrozzeria Colli worked for airforces. Carrozzeria Colli made car bodies.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The first automobiles built by Carrozzeria Colli were built using Fiat 1100 mechanicals and chasis.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCarrozzeriaColli(x) ::: x is a Carrozzeria Colli.\nMilanese(x) ::: x is a Milanese.\nCoachbuilder(x) ::: x is a coachbuilder.\nSpecialize(x, y) ::: x specializes in y.\nRacingCar(x) ::: x is a racing car.\nFiat1100Mechanicals(x) ::: x is a Fiat 1100 mechanicals.\nFiat1100Chasis(x) ::: x is a Fiat 1100 chasis.\nAirforce(x) ::: x is an airforce.\nCarBody(x) ::: x is a car body.\nPremises:\nCarrozzeriaColli(carrozzeriaColli) ∧ Milanese(carrozzeriaColli) ∧ Coachbuilder(carrozzeriaColli) ∧ Specialize(carrozzeriaColli, aluminum) ∧ Specialize(carrozzer"
    ]
  },
  {
    "id": "FOLIO_train_540",
    "context": "John will go to the cinema if and only if Jack goes to the cinema today. Jack will go to the cinema if and only if Iron Man is on and the weather is not bad today. Some days in March have bad weather. Iron man is on. It's March now.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? John will go to the cinema.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nGoesToCinema(x) ::: x goes to the cinema.\nIsOn(x) ::: x is on.\nIsBad(x) ::: x is bad.\nIsMarch(x) ::: x is in March.\nPremises:\nGoesToCinema(john) ↔ GoesToCinema(jack) ::: John will go to the cinema if and only if Jack goes to the cinema today.\nGoesToCinema(jack) ↔ (IsOn(ironMan) ∧ IsNotBad(weather)) ::: Jack will go to the cinema if and only if Iron Man is on and the weather is not bad today.\n∃x (IsMarch(x)) ::: Some days in March have bad weather.\nIsOn(ironMan) ::: Iron man is on.\nIsMarch(now) ::: It's March now.\nConclusion:\nGoesToCinema(john) ::: John will go to the cinema.\n------"
    ]
  },
  {
    "id": "FOLIO_train_541",
    "context": "John will go to the cinema if and only if Jack goes to the cinema today. Jack will go to the cinema if and only if Iron Man is on and the weather is not bad today. Some days in March have bad weather. Iron man is on. It's March now.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The weather is good today.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nGoesToCinema(x) ::: x goes to the cinema.\nIsOn(x) ::: x is on.\nIsBad(x) ::: x is bad.\nIsMarch(x) ::: x is in March.\nPremises:\nGoesToCinema(john) ↔ GoesToCinema(jack) ::: John will go to the cinema if and only if Jack goes to the cinema today.\nGoesToCinema(jack) ↔ (IsOn(ironMan) ∧ IsNotBad(weather)) ::: Jack will go to the cinema if and only if Iron Man is on and the weather is not bad today.\n∃x (IsMarch(x)) ::: Some days in March have bad weather.\nIsOn(ironMan) ::: Iron man is on.\nIsMarch(now) ::: It's March now.\nConclusion:\nIsNotBad(weather) ::: The weather is good today.\n------\nProblem:"
    ]
  },
  {
    "id": "FOLIO_train_542",
    "context": "Quiksilver sells sportswear, clothing, footwear, and accessories. Flannels are a type of clothing. Joe owns an item fron Quiksilver.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Quiksilver sells beer.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nSells(x, y) ::: x sells y.\nClothing(x) ::: x is a type of clothing.\nFootwear(x) ::: x is a type of footwear.\nAccessory(x) ::: x is a type of accessory.\nOwns(x, y) ::: x owns y.\nPremises:\nSells(quiksilver, sportswear) ∧ Sells(quiksilver, clothing) ∧ Sells(quiksilver, footwear) ∧ Sells(quiksilver, accessory) ::: Quiksilver sells sportswear, clothing, footwear, and accessories.\nFlannel(joe) ::: Joe owns an item fron Quiksilver.\nConclusion:\nOwns(joe, beer) ::: Joe owns beer.\n------\nProblem:\nThe following is a list of the top 100 most popular baby names in the United"
    ]
  },
  {
    "id": "FOLIO_train_543",
    "context": "Quiksilver sells sportswear, clothing, footwear, and accessories. Flannels are a type of clothing. Joe owns an item fron Quiksilver.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Joe owns a flannel.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nOwns(x, y) ::: x owns y.\nFlannel(x) ::: x is a flannel.\nSportswear(x) ::: x is sportswear.\nClothing(x) ::: x is clothing.\nFootwear(x) ::: x is footwear.\nAccessory(x) ::: x is an accessory.\nPremises:\nSportswear(quiksilver) ∧ Clothing(quiksilver) ∧ Footwear(quiksilver) ∧ Accessory(quiksilver) ::: Quiksilver sells sportswear, clothing, footwear, and accessories.\nOwns(joe, item) ::: Joe owns an item.\nFlannel(item) ::: item is a flannel.\nConclusion:\nOwns(joe, flannel) ::: Joe owns a flannel.\n------\nProblem:\nThe following is a list of the top 10"
    ]
  },
  {
    "id": "FOLIO_train_544",
    "context": "Quiksilver sells sportswear, clothing, footwear, and accessories. Flannels are a type of clothing. Joe owns an item fron Quiksilver.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Joe owns at least one a piece of sportswear, clothing, footwear, or accessory",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nOwns(x, y) ::: x owns y.\nSportswear(x) ::: x is a piece of sportswear.\nClothing(x) ::: x is a piece of clothing.\nFootwear(x) ::: x is a piece of footwear.\nAccessory(x) ::: x is a piece of accessory.\nPremises:\nSportswear(sportswear) ∧ Clothing(clothing) ∧ Footwear(footwear) ∧ Accessory(accessory) ::: Quiksilver sells sportswear, clothing, footwear, and accessories.\nOwns(joe, item) ::: Joe owns an item fron Quiksilver.\nConclusion:\n∃x (Owns(joe, x) ∧ Sportswear(x)) ::: Joe owns at least one a piece of sportswear.\n∃x (Owns(joe, x) ∧ Clothing"
    ]
  },
  {
    "id": "FOLIO_train_545",
    "context": "No video games released by Nintendo support the PS4 platform. All video games in the Pokemon series are released by Nintendo. All video games in the FIFA series support the PS4 platform. All video games supporting users to simulate playing soccer games online are in the FIFA series. The video game named “Be Lionel” is in the Pokemon series or supports users to simulate playing football games online.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The video game \"Be Lionel\" is in the pokemon series.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nNintendo(x) ::: x is a video game released by Nintendo.\nPokemon(x) ::: x is a video game in the Pokemon series.\nFIFA(x) ::: x is a video game in the FIFA series.\nSupport(x, y) ::: x supports y.\nOnline(x) ::: x supports users to simulate playing soccer games online.\nPremises:\n¬∃x (Nintendo(x) ∧ Support(x, PS4)) ::: No video games released by Nintendo support the PS4 platform.\n∀x (Pokemon(x) → Nintendo(x)) ::: All video games in the Pokemon series are released by Nintendo.\n∀x (FIFA(x) → Support(x, PS4)) ::: All video games in the FIFA series support the PS4 platform.\n∃x (FIFA(x) ∧ Online(x)) ::: All video games supporting users to simulate playing soccer games online are in the FIFA series.\n∃x (P"
    ]
  },
  {
    "id": "FOLIO_train_546",
    "context": "No video games released by Nintendo support the PS4 platform. All video games in the Pokemon series are released by Nintendo. All video games in the FIFA series support the PS4 platform. All video games supporting users to simulate playing soccer games online are in the FIFA series. The video game named “Be Lionel” is in the Pokemon series or supports users to simulate playing football games online.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The video game named “Be Lionel” is not in the FIFA series or supports the PS4 platform.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nNintendo(x) ::: x is a video game released by Nintendo.\nPokemon(x) ::: x is a video game in the Pokemon series.\nFIFA(x) ::: x is a video game in the FIFA series.\nSupports(x, y) ::: x supports y.\nSimulate(x, y) ::: x simulates y.\nPremises:\n¬(Nintendo(x) ∧ Supports(x, PS4)) ::: No video games released by Nintendo support the PS4 platform.\n∀x (Pokemon(x) → Nintendo(x)) ::: All video games in the Pokemon series are released by Nintendo.\n∀x (FIFA(x) → Supports(x, PS4)) ::: All video games in the FIFA series support the PS4 platform.\n∀x (Supports(x, onlineSoccer) → FIFA(x)) ::: All video games supporting users to simulate playing soccer games online are in the FIFA series.\nFIFA(be"
    ]
  },
  {
    "id": "FOLIO_train_547",
    "context": "No video games released by Nintendo support the PS4 platform. All video games in the Pokemon series are released by Nintendo. All video games in the FIFA series support the PS4 platform. All video games supporting users to simulate playing soccer games online are in the FIFA series. The video game named “Be Lionel” is in the Pokemon series or supports users to simulate playing football games online.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The video game named “Be Lionel” is in the FIFA series or supports the PS4 platform.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nNintendo(x) ::: x is a video game released by Nintendo.\nPokemon(x) ::: x is a video game in the Pokemon series.\nFIFA(x) ::: x is a video game in the FIFA series.\nSupports(x, y) ::: x supports y.\nSimulate(x, y) ::: x simulates y.\nPremises:\n¬∃x (Nintendo(x) ∧ Supports(x, PS4)) ::: No video games released by Nintendo support the PS4 platform.\n∀x (Pokemon(x) → Nintendo(x)) ::: All video games in the Pokemon series are released by Nintendo.\n∀x (FIFA(x) → Supports(x, PS4)) ::: All video games in the FIFA series support the PS4 platform.\n∃x (Supports(x, PS4) ∧ Simulate(x, onlineSoccer)) ::: All video games supporting users to simulate playing soccer games online are in the"
    ]
  },
  {
    "id": "FOLIO_train_548",
    "context": "No video games released by Nintendo support the PS4 platform. All video games in the Pokemon series are released by Nintendo. All video games in the FIFA series support the PS4 platform. All video games supporting users to simulate playing soccer games online are in the FIFA series. The video game named “Be Lionel” is in the Pokemon series or supports users to simulate playing football games online.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The video game named “Be Lionel”  is not in the FIFA or Pokemon series.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nNintendo(x) ::: x is a video game released by Nintendo.\nPokemon(x) ::: x is a video game in the Pokemon series.\nFIFA(x) ::: x is a video game in the FIFA series.\nOnline(x) ::: x supports users to simulate playing soccer games online.\nSimulate(x) ::: x simulates playing soccer games.\nPremises:\n¬(Nintendo(x) ∧ PS4(x)) ::: No video games released by Nintendo support the PS4 platform.\n∀x (Pokemon(x) → Nintendo(x)) ::: All video games in the Pokemon series are released by Nintendo.\n∀x (FIFA(x) → PS4(x)) ::: All video games in the FIFA series support the PS4 platform.\n∀x (Online(x) → Simulate(x)) ::: All video games supporting users to simulate playing soccer games online are in the FIFA series.\n∃x (Pokemon"
    ]
  },
  {
    "id": "FOLIO_train_549",
    "context": "No payment cards issued by Russian banks can be used with ApplePay. All MIR payment cards are issued by Russian banks. Some international payment cards can be used with ApplePay. Social payments in Russia can only be transferred to MIR payment cards. Bank of America payment cards can be used with ApplePay.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Bank of America payment cards are international.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nRussianBank(x) ::: x is a Russian bank.\nMIR(x) ::: x is a MIR payment card.\nInternational(x) ::: x is an international payment card.\nApplePay(x) ::: x can be used with ApplePay.\nPremises:\n∀x (RussianBank(x) → ¬ApplePay(x)) ::: No payment cards issued by Russian banks can be used with ApplePay.\n∀x (MIR(x) → RussianBank(x)) ::: All MIR payment cards are issued by Russian banks.\n∃x (International(x) ∧ ApplePay(x)) ::: Some international payment cards can be used with ApplePay.\n∀x (SocialPayment(x) → MIR(x)) ::: Social payments in Russia can only be transferred to MIR payment cards.\nBankOfAmerica(x) ::: x is a Bank of America payment card.\nApplePay(BankOfAmerica) ::: Bank of America"
    ]
  },
  {
    "id": "FOLIO_train_550",
    "context": "No payment cards issued by Russian banks can be used with ApplePay. All MIR payment cards are issued by Russian banks. Some international payment cards can be used with ApplePay. Social payments in Russia can only be transferred to MIR payment cards. Bank of America payment cards can be used with ApplePay.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Bank of America payment cards are international and can be used to transfer social payments in Russia.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nRussianBank(x) ::: x is a Russian bank.\nPaymentCard(x) ::: x is a payment card.\nMIR(x) ::: x is a MIR payment card.\nInternational(x) ::: x is an international payment card.\nApplePay(x) ::: x can be used with ApplePay.\nSocialPayment(x, y) ::: x is a social payment in Russia and y is a MIR payment card.\nPremises:\n∀x (RussianBank(x) → PaymentCard(x)) ::: All MIR payment cards are issued by Russian banks.\n∃x (PaymentCard(x) ∧ International(x) ∧ ApplePay(x)) ::: Some international payment cards can be used with ApplePay.\n∀x (SocialPayment(x, y) → MIR(y)) ::: Social payments in Russia can only be transferred to MIR payment cards.\nPaymentCard(bankOfAmericaPaymentCard) ∧ ApplePay(bankOfAmericaPaymentCard) ::: Bank of America payment cards can be used with ApplePay.\nConclusion:\nApplePay(bankOfAmericaPaymentCard) ∧ SocialPayment(bankOfAmericaPaymentCard, y) ::: Bank of America payment cards are international and can be used to transfer social payments in Russia.\n------"
    ]
  },
  {
    "id": "FOLIO_train_551",
    "context": "No payment cards issued by Russian banks can be used with ApplePay. All MIR payment cards are issued by Russian banks. Some international payment cards can be used with ApplePay. Social payments in Russia can only be transferred to MIR payment cards. Bank of America payment cards can be used with ApplePay.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Bank of America payment cards are international or issued by Russian banks, then they can not be used to transfer social payments in Russia.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nRussianBank(x) ::: x is a Russian bank.\nPaymentCard(x) ::: x is a payment card.\nApplePay(x) ::: x can be used with ApplePay.\nMIR(x) ::: x is a MIR payment card.\nInternational(x) ::: x is an international payment card.\nSocialPayment(x) ::: x is a social payment.\nTransfer(x, y) ::: x is transferred to y.\nPremises:\n∀x (RussianBank(x) → PaymentCard(x)) ::: All MIR payment cards are issued by Russian banks.\n∃x (PaymentCard(x) ∧ ApplePay(x)) ::: Some international payment cards can be used with ApplePay.\n∀x (SocialPayment(x) → Transfer(x, MIR(x))) ::: Social payments in Russia can only be transferred to MIR payment cards.\nPaymentCard(bankOfAmericaPaymentCard) ∧ ApplePay(bankOfAmericaPaymentCard) ::: Bank of America payment cards can be used with ApplePay.\nConclusion:\n¬(International(bankOfAmericaPaymentCard) ∨ RussianBank(bankOfAmericaPaymentCard)) → Transfer(bankOfAmericaPaymentCard, MIR(bankOfAmericaPaymentCard)) ::: If Bank"
    ]
  },
  {
    "id": "FOLIO_train_552",
    "context": "The Lumina APV is produced by Chevrolet. The Astro is a van produced by Chevrolet. Cars produced by Chevrolet are either cars or vans.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Lumina APV is van.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nChevrolet(x) ::: x is a car produced by Chevrolet.\nLuminaAPV(x) ::: x is a Lumina APV.\nAstro(x) ::: x is an Astro.\nVan(x) ::: x is a van.\nCar(x) ::: x is a car.\nPremises:\nChevrolet(luminaAPV) ∧ Chevrolet(astro) ∧ Car(luminaAPV) ∧ Van(astro) ::: The Lumina APV is produced by Chevrolet. The Astro is a van produced by Chevrolet.\n∀x (Chevrolet(x) → (Car(x) ∨ Van(x))) ::: Cars produced by Chevrolet are either cars or vans.\nConclusion:\nVan(luminaAPV) ::: The Lumina APV is van.\n------\nProblem:\nThe Lumina APV is produced by Chevrolet. The Astro is a van produced by Chevrolet. Cars produced by Chevrolet are either cars or vans.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The Lumina APV is a car.\n###\nPredicates:\nChe"
    ]
  },
  {
    "id": "FOLIO_train_553",
    "context": "The Lumina APV is produced by Chevrolet. The Astro is a van produced by Chevrolet. Cars produced by Chevrolet are either cars or vans.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Lumina APV is either a car or a van.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nChevrolet(x) ::: x is a car produced by Chevrolet.\nLuminaAPV(x) ::: x is a Lumina APV.\nAstro(x) ::: x is an Astro.\nVan(x) ::: x is a van.\nCar(x) ::: x is a car.\nPremises:\nChevrolet(luminaAPV) ∧ Chevrolet(astro) ::: The Lumina APV is produced by Chevrolet. The Astro is a van produced by Chevrolet.\n∀x (Chevrolet(x) ⊕ Car(x)) ::: Cars produced by Chevrolet are either cars or vans.\nConclusion:\nCar(luminaAPV) ⊕ Van(luminaAPV) ::: The Lumina APV is either a car or a van.\n------\nProblem:\nThe Lumina APV is produced by Chevrolet. The Astro is a van produced by Chevrolet. Cars produced by Chevrolet are either cars or vans.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The Lumina APV is either a car or a van.\n###\nProblem:\nThe Lumina APV is"
    ]
  },
  {
    "id": "FOLIO_train_554",
    "context": "The Lumina APV is produced by Chevrolet. The Astro is a van produced by Chevrolet. Cars produced by Chevrolet are either cars or vans.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Astro is a van.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nChevrolet(x) ::: x is a car produced by Chevrolet.\nVan(x) ::: x is a van.\nPremises:\nChevrolet(luminaApv) ∧ Van(astro) ∧ ¬(Chevrolet(luminaApv) ∨ Van(astro)) ::: The Lumina APV is produced by Chevrolet. The Astro is a van produced by Chevrolet. Cars produced by Chevrolet are either cars or vans.\nConclusion:\nVan(astro) ::: The Astro is a van.\n------\nProblem:\nThe Lumina APV is produced by Chevrolet. The Astro is a van produced by Chevrolet. Cars produced by Chevrolet are either cars or vans.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The Lumina APV is a van.\n###\nPredicates:\nChevrolet(x) ::: x is a car produced by Chevrolet.\nVan(x) ::: x is a van.\nPremises:\nChevrolet(luminaApv) ∧ Van(astro) ∧ ¬(Chevrolet(luminaApv)"
    ]
  },
  {
    "id": "FOLIO_train_555",
    "context": "The Lumina APV is produced by Chevrolet. The Astro is a van produced by Chevrolet. Cars produced by Chevrolet are either cars or vans.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Astro is a car.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nChevrolet(x) ::: x is a car produced by Chevrolet.\nAstro(x) ::: x is a van produced by Chevrolet.\nCar(x) ::: x is a car.\nVan(x) ::: x is a van.\nPremises:\nChevrolet(luminaApv) ∧ Chevrolet(astro) ∧ Car(luminaApv) ∧ Van(astro) ::: The Lumina APV is produced by Chevrolet. The Astro is a van produced by Chevrolet.\n∀x (Chevrolet(x) → (Car(x) ∨ Van(x))) ::: Cars produced by Chevrolet are either cars or vans.\nConclusion:\nCar(astro) ::: The Astro is a car.\n------\nProblem:\nThe Lumina APV is produced by Chevrolet. The Astro is a van produced by Chevrolet. Cars produced by Chevrolet are either cars or vans.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The Astro is a car.\n###\nProblem:\nThe Lumina APV is produced by Chevrolet. The Astro is a van produced by Chevrolet. C"
    ]
  },
  {
    "id": "FOLIO_train_556",
    "context": "Everyone who works in person is a commuter. People either work in person or work from home. Everyone who works from home has a relaxed schedule. George is either a commuter or has a home office setup. If George is either a person who works from home or has a home office setup, then George is not a person who works from home and a commuter.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? George is a person who works from home.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nCommuter(x) ::: x is a commuter.\nWorksInPerson(x) ::: x works in person.\nWorksFromHome(x) ::: x works from home.\nHasHomeOfficeSetup(x) ::: x has a home office setup.\nPremises:\n∀x (Commuter(x) → WorksInPerson(x)) ::: Everyone who works in person is a commuter.\n∀x (WorksInPerson(x) ⊕ WorksFromHome(x)) ::: People either work in person or work from home.\n∀x (WorksFromHome(x) → HasHomeOfficeSetup(x)) ::: Everyone who works from home has a relaxed schedule.\n¬(HasHomeOfficeSetup(george) ∧ Commuter(george)) → (HasHomeOfficeSetup(george) ∧ Commuter(george)) ⊕ ¬(HasHomeOfficeSetup(george) ∨ Commuter(george)) ::: If George is either a person who works from home or has a home office setup, then George is not a person who works from home and a commuter.\nConclusion:\nHasHomeOfficeSetup(george) ::: George is a person who works from home.\n------\nProblem:\nEveryone who works in person is a commuter. People either work in person or work from home. Everyone who works from"
    ]
  },
  {
    "id": "FOLIO_train_557",
    "context": "Everyone who works in person is a commuter. People either work in person or work from home. Everyone who works from home has a relaxed schedule. George is either a commuter or has a home office setup. If George is either a person who works from home or has a home office setup, then George is not a person who works from home and a commuter.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If George is not a person who works from home and a person who works in person, then George is neither a commuter nor a person who has a relaxed schedule.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nCommuter(x) ::: x is a commuter.\nWorksInPerson(x) ::: x works in person.\nWorksFromHome(x) ::: x works from home.\nHasHomeOfficeSetup(x) ::: x has a home office setup.\nRelaxedSchedule(x) ::: x has a relaxed schedule.\nPremises:\n∀x (Commuter(x) → WorksInPerson(x)) ::: Everyone who works in person is a commuter.\n∀x (WorksInPerson(x) ⊕ WorksFromHome(x)) ::: People either work in person or work from home.\n∀x (WorksFromHome(x) → RelaxedSchedule(x)) ::: Everyone who works from home has a relaxed schedule.\n¬(HomeOfficeSetup(george) ∧ Commuter(george)) → (HomeOfficeSetup(george) ∧ Commuter(george)) ⊕ ¬(HomeOfficeSetup(george) ∨ Commuter(george)) ::: If George is either a person who works from home and a person who has a home office setup, then George is not a person who works from home and a commuter.\nConclusion:\n¬(RelaxedSchedule(george) ∧ Commuter(george)) ::: If George is not a person who works from home and"
    ]
  },
  {
    "id": "FOLIO_train_558",
    "context": "Everyone who works in person is a commuter. People either work in person or work from home. Everyone who works from home has a relaxed schedule. George is either a commuter or has a home office setup. If George is either a person who works from home or has a home office setup, then George is not a person who works from home and a commuter.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If George is either a person who has a home office setup and a person who works in person, or neither a person who has a home office setup nor a person who works in person, then George is either a person who works from home or a person who has a relaxed schedule.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCommuter(x) ::: x is a commuter.\nWorksInPerson(x) ::: x works in person.\nWorksFromHome(x) ::: x works from home.\nHasHomeOfficeSetup(x) ::: x has a home office setup.\nRelaxedSchedule(x) ::: x has a relaxed schedule.\nPremises:\n∀x (Commuter(x) → WorksInPerson(x)) ::: Everyone who works in person is a commuter.\n∀x (WorksInPerson(x) ⊕ WorksFromHome(x)) ::: People either work in person or work from home.\n∀x (WorksFromHome(x) → RelaxedSchedule(x)) ::: Everyone who works from home has a relaxed schedule.\n¬(HomeOfficeSetup(george) ∧ Commuter(george)) → (HomeOfficeSetup(george) ∧ Commuter(george)) ⊕ ¬(HomeOfficeSetup(george) ∨ Commuter(george)) ::: If George is either a person who has a home office setup and a person who works in person, or neither a person who has a home office setup nor a person who works in person, then George is not a person who works from home and a commuter.\nConclusion:\nWorksFromHome(george) ⊕ RelaxedSchedule"
    ]
  },
  {
    "id": "FOLIO_train_559",
    "context": "Jason Kramer is an American music supervisor. Some American radio personalities are also music supervisors. Anyone who hosts a show on a public radio station is a radio personality. Joe Rogan is a radio personality. Jason Kramer hosted a show on a public radio station.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Joe Rogan is American.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nAmerican(x) ::: x is an American.\nRadioPersonality(x) ::: x is a radio personality.\nMusicSupervisor(x) ::: x is a music supervisor.\nHost(x, y) ::: x hosts a show on y.\nPremises:\nRadioPersonality(joeRogan) ∧ Host(joeRogan, publicRadioStation) ::: Joe Rogan is a radio personality.\nMusicSupervisor(jasonKramer) ∧ Host(jasonKramer, publicRadioStation) ::: Jason Kramer is a music supervisor.\n∀x (RadioPersonality(x) → American(x)) ::: Anyone who hosts a show on a public radio station is an American.\nConclusion:\nAmerican(joeRogan) ::: Joe Rogan is American.\n------\nProblem:\nThe following is a list of the top 100 most popular songs of 2016.\n1. \"One Dance\" by Drake\n2. \"Work\" by Rihanna\n3. \"Can't Feel My Face\" by The Weeknd\n4. \"7 Years\" by Lukas Graham\n5. \"Stressed Out\" by Twenty One Pilots\n6. \"Sorry\" by Justin Bieber\n7. \"Love Yourself\" by Justin Bieber"
    ]
  },
  {
    "id": "FOLIO_train_560",
    "context": "Jason Kramer is an American music supervisor. Some American radio personalities are also music supervisors. Anyone who hosts a show on a public radio station is a radio personality. Joe Rogan is a radio personality. Jason Kramer hosted a show on a public radio station.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jason Kramer is a music supervisor.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nAmerican(x) ::: x is an American.\nRadioPersonality(x) ::: x is a radio personality.\nMusicSupervisor(x) ::: x is a music supervisor.\nHost(x, y) ::: x hosts a show on y.\nPremises:\nAmerican(jason) ∧ RadioPersonality(jason) ::: Jason Kramer is an American music supervisor.\n∃x (RadioPersonality(x) ∧ MusicSupervisor(x)) ::: Some American radio personalities are also music supervisors.\n∀x (Host(x, y) → RadioPersonality(x)) ::: Anyone who hosts a show on a public radio station is a radio personality.\nRadioPersonality(joeRogan) ::: Joe Rogan is a radio personality.\nHost(jason, publicRadioStation) ::: Jason Kramer hosted a show on a public radio station.\nConclusion:\nMusicSupervisor(jason) ::: Jason Kramer is a music supervisor.\n------"
    ]
  },
  {
    "id": "FOLIO_train_561",
    "context": "Jason Kramer is an American music supervisor. Some American radio personalities are also music supervisors. Anyone who hosts a show on a public radio station is a radio personality. Joe Rogan is a radio personality. Jason Kramer hosted a show on a public radio station.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jason Kramer is a radio personality.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nAmerican(x) ::: x is an American.\nRadioPersonality(x) ::: x is a radio personality.\nMusicSupervisor(x) ::: x is a music supervisor.\nHost(x, y) ::: x hosts a show on y.\nPremises:\nAmerican(jason) ∧ MusicSupervisor(jason) ::: Jason Kramer is an American music supervisor.\n∃x (RadioPersonality(x) ∧ MusicSupervisor(x)) ::: Some American radio personalities are also music supervisors.\n∀x (Host(x, y) → RadioPersonality(x)) ::: Anyone who hosts a show on a public radio station is a radio personality.\nRadioPersonality(joeRogan) ::: Joe Rogan is a radio personality.\nHost(jason, publicRadioStation) ::: Jason Kramer hosted a show on a public radio station.\nConclusion:\nRadioPersonality(jason) ::: Jason Kramer is a radio personality.\n------"
    ]
  },
  {
    "id": "FOLIO_train_562",
    "context": "No coffee sold in Walmart is produced in France. All coffee supplied by the company is sold in Walmart. All coffee produced in Columbia is produced in France. All coffee favored by local residents is coffee produced in Columbia. All coffee with high prices is favored by local residents. Civet Coffee is not produced in Columbia and is cheap. Jamaica Blue is sold in Walmart or favored by local residents.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Civet Coffee is produced in France.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nCoffee(x) ::: x is a coffee.\nProduced(x, y) ::: x is produced in y.\nSold(x, y) ::: x is sold in y.\nSupplied(x, y) ::: x is supplied by y.\nFavored(x, y) ::: x is favored by y.\nHighPrice(x) ::: x has a high price.\nCheap(x) ::: x is cheap.\nPremises:\n∀x (Coffee(x) → ¬Produced(x, France)) ::: No coffee sold in Walmart is produced in France.\n∀x (Coffee(x) → Supplied(x, Walmart)) ::: All coffee supplied by the company is sold in Walmart.\n∀x (Coffee(x) → Produced(x, Columbia)) → Produced(x, France) ::: All coffee produced in Columbia is produced in France.\n∀x (Favored(x, localResidents) → Produced("
    ]
  },
  {
    "id": "FOLIO_train_563",
    "context": "No coffee sold in Walmart is produced in France. All coffee supplied by the company is sold in Walmart. All coffee produced in Columbia is produced in France. All coffee favored by local residents is coffee produced in Columbia. All coffee with high prices is favored by local residents. Civet Coffee is not produced in Columbia and is cheap. Jamaica Blue is sold in Walmart or favored by local residents.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Civet Coffee is not produced in France.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nCoffee(x) ::: x is a coffee.\nProduced(x, y) ::: x is produced in y.\nSupplied(x, y) ::: x is supplied by y.\nSold(x, y) ::: x is sold in y.\nFavored(x, y) ::: x is favored by y.\nHighPrice(x) ::: x has a high price.\nCheap(x) ::: x is cheap.\nPremises:\n∀x (Coffee(x) → ¬Produced(x, France)) ::: No coffee sold in Walmart is produced in France.\n∀x (Coffee(x) → Supplied(x, company)) ::: All coffee supplied by the company is sold in Walmart.\n∀x (Coffee(x) → Produced(x, Columbia) → Produced(x, France)) ::: All coffee produced in Columbia is produced in France.\n∀x (Coffee(x) → Favored(x, localRes"
    ]
  },
  {
    "id": "FOLIO_train_564",
    "context": "No coffee sold in Walmart is produced in France. All coffee supplied by the company is sold in Walmart. All coffee produced in Columbia is produced in France. All coffee favored by local residents is coffee produced in Columbia. All coffee with high prices is favored by local residents. Civet Coffee is not produced in Columbia and is cheap. Jamaica Blue is sold in Walmart or favored by local residents.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jamaica Blue is expensive and supplied by the company.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nSuppliedBy(x, y) ::: x is supplied by y.\nSoldIn(x, y) ::: x is sold in y.\nFavoredBy(x, y) ::: x is favored by y.\nProducedIn(x, y) ::: x is produced in y.\nCheap(x) ::: x is cheap.\nExpensive(x) ::: x is expensive.\nPremises:\n¬(SoldIn(x, Walmart) ∧ ProducedIn(x, France)) ::: No coffee sold in Walmart is produced in France.\n∀x (SuppliedBy(x, Walmart) → SoldIn(x, Walmart)) ::: All coffee supplied by the company is sold in Walmart.\n∀x (ProducedIn(x, Columbia) → ProducedIn(x, France)) ::: All coffee produced in Columbia is produced in France.\n∀x (FavoredBy(x, localResidents) → ProducedIn(x, Columbia)) ::: All coffee favored"
    ]
  },
  {
    "id": "FOLIO_train_565",
    "context": "No coffee sold in Walmart is produced in France. All coffee supplied by the company is sold in Walmart. All coffee produced in Columbia is produced in France. All coffee favored by local residents is coffee produced in Columbia. All coffee with high prices is favored by local residents. Civet Coffee is not produced in Columbia and is cheap. Jamaica Blue is sold in Walmart or favored by local residents.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jamaica Blue is not expensive and is not supplied by the company.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCoffee(x) ::: x is a coffee.\nProduced(x, y) ::: x is produced in y.\nSupplied(x, y) ::: x is supplied by y.\nSold(x, y) ::: x is sold in y.\nFavored(x, y) ::: x is favored by y.\nHighPrice(x) ::: x is expensive.\nCheap(x) ::: x is cheap.\nPremises:\n¬(Coffee(x) ∧ Produced(x, France) ∧ Sold(x, Walmart)) ::: No coffee sold in Walmart is produced in France.\n∀x (Coffee(x) → Supplied(x, company)) ::: All coffee supplied by the company is sold in Walmart.\n∀x (Coffee(x) → Produced(x, Columbia) → Produced(x, France)) ::: All coffee produced in Columbia is produced in France.\n∀x (Coffee(x) → Favored("
    ]
  },
  {
    "id": "FOLIO_train_566",
    "context": "There are two places named Galicia: either in Spain or in Poland. Spain is in Europe. Poland is in Europe. Rochelle lives in Europe. Dominique does not live in Europe. Alfonso lives in Galicia.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Rochelle lives in Galicia.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nEurope(x) ::: x is in Europe.\nSpain(x) ::: x is in Spain.\nPoland(x) ::: x is in Poland.\nGalicia(x) ::: x is in Galicia.\nPremises:\n∃x (Galicia(x) ∧ Europe(x)) ::: There are two places named Galicia: either in Spain or in Poland.\nEurope(spain) ∧ Europe(poland) ::: Spain is in Europe.\nPoland(poland) ∧ Europe(poland) ::: Poland is in Europe.\nEurope(rochelle) ∧ ¬Europe(dominique) ::: Rochelle lives in Europe.\n¬Europe(dominique) ::: Dominique does not live in Europe.\nGalicia(alfonso) ::: Alfonso lives in Galicia.\nConclusion:\nEurope(rochelle) ∧ Galicia(rochelle) ::: Rochelle lives in Galicia.\n------\nProblem:\nThe following is a list of the"
    ]
  },
  {
    "id": "FOLIO_train_567",
    "context": "There are two places named Galicia: either in Spain or in Poland. Spain is in Europe. Poland is in Europe. Rochelle lives in Europe. Dominique does not live in Europe. Alfonso lives in Galicia.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Dominique does not live in Spain.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nEurope(x) ::: x is in Europe.\nSpain(x) ::: x is in Spain.\nPoland(x) ::: x is in Poland.\nGalicia(x) ::: x is in Galicia.\nPremises:\n∃x (Galicia(x) ∧ Europe(x)) ::: There are two places named Galicia: either in Spain or in Poland.\nEurope(spain) ∧ Europe(poland) ::: Spain is in Europe.\nPoland(poland) ∧ Europe(poland) ::: Poland is in Europe.\nEurope(rochelle) ∧ ¬Europe(dominique) ::: Rochelle lives in Europe.\n¬Europe(dominique) ::: Dominique does not live in Europe.\nGalicia(alfonso) ::: Alfonso lives in Galicia.\nConclusion:\n¬Europe(dominique) ∧ Europe(spain) ∧ Europe(poland) ∧ Europe(rochelle) ∧ Galicia(alfonso) :::"
    ]
  },
  {
    "id": "FOLIO_train_568",
    "context": "There are two places named Galicia: either in Spain or in Poland. Spain is in Europe. Poland is in Europe. Rochelle lives in Europe. Dominique does not live in Europe. Alfonso lives in Galicia.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Alfonso lives in Europe.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nEurope(x) ::: x is in Europe.\nSpain(x) ::: x is in Spain.\nPoland(x) ::: x is in Poland.\nGalicia(x) ::: x is in Galicia.\nPremises:\n∃x (Galicia(x) ∧ Europe(x)) ::: There are two places named Galicia: either in Spain or in Poland.\nEurope(spain) ∧ Europe(poland) ::: Spain is in Europe.\nPoland(poland) ∧ Europe(poland) ::: Poland is in Europe.\n∃x (Europe(x) ∧ Rochelle(x)) ::: Rochelle lives in Europe.\n¬Dominique(dominique) ∧ Europe(dominique) ::: Dominique does not live in Europe.\n∃x (Galicia(x) ∧ Alfonso(x)) ::: Alfonso lives in Galicia.\nConclusion:\nEurope(alfonso) ::: Alfonso lives in Europe.\n------\nProblem:\nThe following is"
    ]
  },
  {
    "id": "FOLIO_train_569",
    "context": "Ralph Hammerthaler was born in Wasserburg am Inn. Wasserburg am Inn is in Germany. Germany is in Europe. Ralph Hammerthaler is a German writer. Ralph Hammerthaler was born in 1965.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Ralph Hammerthaler is a writer born in Asia.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nBorn(x, y) ::: x was born in year y.\nWrites(x) ::: x is a writer.\nAsian(x) ::: x is an Asian.\nEuropean(x) ::: x is a European.\nGerman(x) ::: x is a German.\nPremises:\nBorn(ralph, year1965) ∧ Writes(ralph) ∧ German(ralph) ::: Ralph Hammerthaler was born in 1965. Ralph Hammerthaler is a German writer.\nBorn(ralph, year1965) ∧ Writes(ralph) ∧ German(ralph) ∧ European(ralph) ∧ Germany(ralph) ∧ Europe(ralph) ::: Ralph Hammerthaler was born in 1965. Ralph Hammerthaler is a German writer. Ralph Hammerthaler is a European. Germany is in Europe.\nBorn(ralph, year1965) ∧"
    ]
  },
  {
    "id": "FOLIO_train_570",
    "context": "Ralph Hammerthaler was born in Wasserburg am Inn. Wasserburg am Inn is in Germany. Germany is in Europe. Ralph Hammerthaler is a German writer. Ralph Hammerthaler was born in 1965.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Ralph Hammerthaler lives in Germany.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nBorn(x, y) ::: x was born in year y.\nLives(x, y) ::: x lives in year y.\nWrites(x) ::: x is a writer.\nGerman(x) ::: x is a German.\nEuropean(x) ::: x is a European.\nPremises:\nBorn(ralph, year1965) ∧ Writes(ralph) ∧ German(ralph) ::: Ralph Hammerthaler was born in 1965. Ralph Hammerthaler is a German writer.\nBorn(ralph, year1965) ∧ Lives(ralph, year1965) ∧ German(ralph) ::: Ralph Hammerthaler was born in 1965. Ralph Hammerthaler lives in 1965. Ralph Hammerthaler is a German.\nBorn(ralph, year1965) ∧ Lives(ralph, year1965) ∧ German(ralph) ∧ European(ralph) ::: Ralph Hammerthaler was born in 1965. Ralph Hammerthaler lives in 1965. Ralph Hammerthaler is a German and a European.\nConclusion:\nLives(ralph, year1965) ∧ German(ralph) ::: Ralph Hammerthaler lives in 1965. Ralph Hammerthaler is a German.\n------"
    ]
  },
  {
    "id": "FOLIO_train_571",
    "context": "All books written by Tomas have sold more than 1 million copies. Some books that have won Hugo Awards are written by Tomas. All books about the future are inspired by Shakespeare. 2001 is a book either inspired from Shakespeare or it has sold more than 1 million copies. 2001 is a book that has either sold more than 1 million copies or it was written by Tomas.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? 2001 is a book that has won a Hugo Award.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nSold(x, y) ::: x has sold y copies.\nHugoAward(x) ::: x has won a Hugo Award.\nInspiredBy(x, y) ::: x is inspired by y.\nFuture(x) ::: x is about the future.\nPremises:\n∀x (Book(x) → Sold(x, 1000000)) ::: All books written by Tomas have sold more than 1 million copies.\n∃x (Book(x) ∧ HugoAward(x)) ::: Some books that have won Hugo Awards are written by Tomas.\n∀x (Book(x) → Future(x)) ::: All books about the future are inspired by Shakespeare.\nSold(2001, 1000000) ⊕ InspiredBy(2001, shakespeare) ::: 2001 is a book either inspired from Shakespeare or it has sold more than 1 million copies.\nSold(2001, 1000000) ⊕ Book(2001) ⊕ Book(2001, tomas) ::: 2001 is a book that has either sold more than 1 million copies or it was written by Tomas.\nConclusion:\nHugoAward(2001) ::: 2001 is a book that has won a Hugo Award.\n------\nProblem:\nAll people who regularly drink coffee are dependent"
    ]
  },
  {
    "id": "FOLIO_train_572",
    "context": "All books written by Tomas have sold more than 1 million copies. Some books that have won Hugo Awards are written by Tomas. All books about the future are inspired by Shakespeare. 2001 is a book either inspired from Shakespeare or it has sold more than 1 million copies. 2001 is a book that has either sold more than 1 million copies or it was written by Tomas.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? 2001 is a book that has won a Hugo Award and is about the future.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nBook(x) ::: x is a book.\nSold(x, y) ::: x has sold y copies.\nHugoAward(x) ::: x has won a Hugo Award.\nInspiredBy(x, y) ::: x is inspired by y.\nFuture(x) ::: x is about the future.\nPremises:\n∀x (Book(x) → Sold(x, 1000000)) ::: All books written by Tomas have sold more than 1 million copies.\n∃x (Book(x) ∧ HugoAward(x)) ::: Some books that have won Hugo Awards are written by Tomas.\n∀x (Book(x) → Future(x)) ::: All books about the future are inspired by Shakespeare.\nSold(2001, 1000000) ⊕ InspiredBy(2001, shakespeare) ::: 2001 is a book either inspired from Shakespeare or it has sold more than 1 million copies.\nSold(2001, 1000000) ⊕ Book(2001) ⊕ Book(2001, tomas) ::: 2001 is a book that has either sold more than 1 million copies or it was written by Tomas.\nConclusion:\nInspiredBy(2001, shakespeare) ⊕ HugoAward(2001) ::: 2"
    ]
  },
  {
    "id": "FOLIO_train_573",
    "context": "All books written by Tomas have sold more than 1 million copies. Some books that have won Hugo Awards are written by Tomas. All books about the future are inspired by Shakespeare. 2001 is a book either inspired from Shakespeare or it has sold more than 1 million copies. 2001 is a book that has either sold more than 1 million copies or it was written by Tomas.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If 2001 either has won a Hugo Award and is about the future, or neither has won a Hugo Award nor is about the future, then 2001 has neither won a Hugo Award nor is written by Tomas.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSold(x, y) ::: x has sold y copies.\nHugoAward(x) ::: x has won a Hugo Award.\nInspiredBy(x, y) ::: x is inspired by y.\nFuture(x) ::: x is about the future.\nPremises:\n∀x (Book(x) → Sold(x, 1000000)) ::: All books written by Tomas have sold more than 1 million copies.\n∃x (Book(x) ∧ HugoAward(x)) ::: Some books that have won Hugo Awards are written by Tomas.\n∀x (Book(x) → InspiredBy(x, shakespeare)) ::: All books about the future are inspired by Shakespeare.\nSold(2001, 1000000) ⊕ HugoAward(2001) ⊕ Future(2001) ::: 2001 is a book either inspired from Shakespeare or it has sold more than 1 million copies.\nSold(2001, 1000000) ⊕ Book(2001) ⊕ WrittenBy(2001, tomas) ::: 2001 is a book that has either sold more than 1 million copies or it was written by Tomas.\nConclusion:\n¬(HugoAward(2001) ∧ Future(2001)) → (HugoAward(2"
    ]
  },
  {
    "id": "FOLIO_train_574",
    "context": "No grass is food. All meadows are grass. All edible things are food. All fruits are edible. All lemons are fruit. Grapes are not edible and lemons. Bananas are grass or fruit.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Grapes are a food.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nGrass(x) ::: x is grass.\nFood(x) ::: x is food.\nMeadow(x) ::: x is a meadow.\nEdible(x) ::: x is edible.\nFruit(x) ::: x is a fruit.\nLemon(x) ::: x is a lemon.\nGrape(x) ::: x is a grape.\nBanana(x) ::: x is a banana.\nPremises:\n¬Grass(x) → Food(x) ::: No grass is food.\nAll(x, y) ::: ∀x ∀y (x ∧ y → x = y) ::: All meadows are grass.\nAll(x, y) ::: ∀x ∀y (x ∧ y → x = y) ::: All edible things are food.\nAll(x, y) ::: ∀x ∀y (x ∧ y → x = y) ::: All fruits are edible.\nAll(x, y) ::: ∀x ∀y (x ∧ y → x = y) ::: All lemons are fruit.\nBanana(x) ∨ Grape(x) ::: Bananas are grass or fruit.\nConclusion:\nFood(grapes) ::: Grapes are a food.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee"
    ]
  },
  {
    "id": "FOLIO_train_575",
    "context": "No grass is food. All meadows are grass. All edible things are food. All fruits are edible. All lemons are fruit. Grapes are not edible and lemons. Bananas are grass or fruit.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Grapes are not a food.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nGrass(x) ::: x is grass.\nFood(x) ::: x is food.\nMeadow(x) ::: x is a meadow.\nEdible(x) ::: x is edible.\nFruit(x) ::: x is a fruit.\nLemon(x) ::: x is a lemon.\nGrape(x) ::: x is a grape.\nBanana(x) ::: x is a banana.\nPremises:\n¬Grass(x) → Food(x) ::: No grass is food.\nAll(x, y) ::: ∀x ∀y (x ∧ y → x = y) ::: All meadows are grass.\nAll(x, y) ::: ∀x ∀y (x ∧ y → x = y) ::: All edible things are food.\nAll(x, y) ::: ∀x ∀y (x ∧ y → x = y) ::: All fruits are edible.\nAll(x, y) ::: ∀x ∀y (x ∧ y → x = y) ::: All lemons are fruit.\nBanana(x) ∨ Grape(x) ::: Bananas are grass or fruit.\nConclusion:\n¬Food(grapes) ::: Grapes are not a food.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly"
    ]
  },
  {
    "id": "FOLIO_train_576",
    "context": "No grass is food. All meadows are grass. All edible things are food. All fruits are edible. All lemons are fruit. Grapes are not edible and lemons. Bananas are grass or fruit.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Bananas are a lemon and meadow.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nGrass(x) ::: x is grass.\nFood(x) ::: x is food.\nMeadow(x) ::: x is a meadow.\nEdible(x) ::: x is edible.\nFruit(x) ::: x is a fruit.\nLemon(x) ::: x is a lemon.\nBanana(x) ::: x is a banana.\nPremises:\n¬Grass(x) → Food(x) ::: No grass is food.\nAll(x, y) ::: ∀x ∀y (x ∧ y) ::: All x are y.\nAll(x, y) ::: ∀x ∀y (x ∨ y) ::: All x are y.\nAll(x, y) ::: ∀x ∀y (x ⊕ y) ::: All x are y.\nAll(x, y) ::: ∀x ∀y (x → y) ::: All x are y.\nAll(x, y) ::: ∀x ∀y (x ↔ y) ::: All x are y.\nAll(x, y) ::: ∀x ∀y (x ∧ y) ::: All x are y.\nAll(x, y) ::: ∀x ∀y (x ∨ y) ::: All x are y.\nAll(x, y) ::: ∀x ∀y (x ⊕ y) :::"
    ]
  },
  {
    "id": "FOLIO_train_577",
    "context": "No grass is food. All meadows are grass. All edible things are food. All fruits are edible. All lemons are fruit. Grapes are not edible and lemons. Bananas are grass or fruit.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Bananas are not both a lemon and a meadow.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nGrass(x) ::: x is grass.\nFood(x) ::: x is food.\nMeadow(x) ::: x is a meadow.\nEdible(x) ::: x is edible.\nFruit(x) ::: x is a fruit.\nLemon(x) ::: x is a lemon.\nBanana(x) ::: x is a banana.\nPremises:\n¬Grass(x) ∧ Food(x) ::: No grass is food.\nAll(x, y) ::: ∀x ∀y (x ∧ y) ::: All meadows are grass.\nAll(x, y) ::: ∀x ∀y (x ∧ y) ::: All edible things are food.\nAll(x, y) ::: ∀x ∀y (x ∧ y) ::: All fruits are edible.\nAll(x, y) ::: ∀x ∀y (x ∧ y) ::: All lemons are fruit.\n¬Edible(x) ∧ Food(x) ::: Grapes are not edible and lemons.\nBanana(x) ∧ Grass(x) ::: Bananas are grass or fruit.\nConclusion:\n¬(Banana(x) ∧ Lemon(x)) ::: Bananas are not both a lemon and a meadow.\n------\nProblem:\nAll people who regularly drink coffee are dependent on"
    ]
  },
  {
    "id": "FOLIO_train_578",
    "context": "The Golden State Warriors are a team from San Francisco. The Golden State Warriors won the NBA finals. All teams attending the NBA finals have more than thirty years of history. Boston Celtics are a team that lost the NBA finals. If a team wins the NBA finals, then they will have more income. If a team wins or loses at the NBA finals, then they are attending the finals.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Boston Celtics is from San Francisco.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nTeam(x) ::: x is a team.\nSanFrancisco(x) ::: x is from San Francisco.\nNBA(x) ::: x is a team attending the NBA finals.\nWon(x) ::: x won the NBA finals.\nMoreThanThirtyYearsOfHistory(x) ::: x has more than thirty years of history.\nLost(x) ::: x lost the NBA finals.\nMoreIncome(x) ::: x has more income.\nAttending(x, y) ::: x is attending y.\nPremises:\nTeam(goldenStateWarriors) ∧ SanFrancisco(goldenStateWarriors) ::: The Golden State Warriors are a team from San Francisco.\nWon(goldenStateWarriors) ∧ NBA(goldenStateWarriors) ::: The Golden State Warriors won the NBA finals.\n∀x (NBA(x) → MoreThanThirtyYearsOfHistory(x)) ::: All teams attending the NBA finals have more than thirty years of history.\nTeam(bostonCeltics) ∧ Lost(bostonCeltics) ∧ NBA(bostonCeltics) ::: Boston Celtics are a team that lost the NBA finals.\n∃x (Won(x) → MoreIncome(x)) ::: If a team wins the NBA finals, then they will have more income.\n∃x ("
    ]
  },
  {
    "id": "FOLIO_train_579",
    "context": "The Golden State Warriors are a team from San Francisco. The Golden State Warriors won the NBA finals. All teams attending the NBA finals have more than thirty years of history. Boston Celtics are a team that lost the NBA finals. If a team wins the NBA finals, then they will have more income. If a team wins or loses at the NBA finals, then they are attending the finals.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Boston Celtics has more than 30 years of experience.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nTeam(x) ::: x is a team.\nSanFrancisco(x) ::: x is from San Francisco.\nNBA(x) ::: x is a team attending the NBA finals.\nWon(x) ::: x won the NBA finals.\nMoreThan(x, y) ::: x has more than y years of history.\nLost(x) ::: x lost the NBA finals.\nIncome(x) ::: x has more income.\nPremises:\nTeam(goldenStateWarriors) ∧ SanFrancisco(goldenStateWarriors) ::: The Golden State Warriors are a team from San Francisco.\nWon(goldenStateWarriors) ::: The Golden State Warriors won the NBA finals.\n∀x (NBA(x) → MoreThan(x, 30)) ::: All teams attending the NBA finals have more than thirty years of history.\nTeam(bostonCeltics) ∧ Lost(bostonCeltics) ::: Boston Celtics are a team that lost the NBA finals.\n∃x (Won(x) → Income(x)) ::: If a team wins the NBA finals, then they will have more income.\n∃x (Lost(x) ∨ Attending(x)) ::: If a team wins or loses at the NBA finals, then they are attending the finals.\nConclusion:\nMoreThan(b"
    ]
  },
  {
    "id": "FOLIO_train_580",
    "context": "The Golden State Warriors are a team from San Francisco. The Golden State Warriors won the NBA finals. All teams attending the NBA finals have more than thirty years of history. Boston Celtics are a team that lost the NBA finals. If a team wins the NBA finals, then they will have more income. If a team wins or loses at the NBA finals, then they are attending the finals.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Golden State Warriors will have more income for gate receipts.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nTeam(x) ::: x is a team.\nSanFrancisco(x) ::: x is from San Francisco.\nNBA(x) ::: x is a team attending the NBA finals.\nWon(x) ::: x won the NBA finals.\nMoreThanThirtyYearsOfHistory(x) ::: x has more than thirty years of history.\nLost(x) ::: x lost the NBA finals.\nMoreIncome(x) ::: x has more income.\nAttending(x) ::: x is attending the finals.\nPremises:\nTeam(goldenStateWarriors) ∧ SanFrancisco(goldenStateWarriors) ∧ NBA(goldenStateWarriors) ∧ Won(goldenStateWarriors) ::: The Golden State Warriors are a team from San Francisco. The Golden State Warriors won the NBA finals.\n∀x (NBA(x) → MoreThanThirtyYearsOfHistory(x)) ::: All teams attending the NBA finals have more than thirty years of history.\nTeam(bostonCeltics) ∧ Lost(bostonCeltics) ::: Boston Celtics are a team that lost the NBA finals.\n∃x (Won(x) → MoreIncome(x)) ::: If a team wins the NBA finals, then they will have more income.\n∃x (Lost(x) ∨ Attending(x)) ::: If a team wins or loses at the NBA finals, then they are attending the finals.\nConclusion:\nMoreIncome(goldenStateWarriors) ::: The Golden State Warriors will have more income for gate receipts.\n------"
    ]
  },
  {
    "id": "FOLIO_train_581",
    "context": "Maya will play violin if and only if she never injures her fingers. Volleyball players can injure their ankle, fingers, or shoulder. Maya is a volleyball player.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Maya will not play violin.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nPlayViolin(x) ::: x plays violin.\nInjure(x, y) ::: x injures y.\nVolleyballPlayer(x) ::: x is a volleyball player.\nPremises:\nPlayViolin(maya) ↔ NeverInjure(maya, fingers) ::: Maya will play violin if and only if she never injures her fingers.\n∀x (VolleyballPlayer(x) ∧ Injure(x, y)) ⊕ ∃y (VolleyballPlayer(x) ∧ Injure(x, y)) ::: Volleyball players can injure their ankle, fingers, or shoulder.\nVolleyballPlayer(maya) ::: Maya is a volleyball player.\nConclusion:\nNeverInjure(maya, fingers) ::: Maya will not play violin.\n------\nProblem:\nThe following is a list of the top 100 most popular baby names in the United States in 2013.\n1. Jacob\n2. Mason\n3. William\n4. Michael\n5. Ethan\n6. Jayden\n7. Alexander\n8. Daniel\n9. Noah\n10. Aiden\n11. Benjamin\n12. David\n13. Matthew\n14. Christopher\n15. Anthony\n16. James\n17. John\n18. Joseph\n19. Andrew\n20. Joshua\n21. Christian\n22. Samuel\n23. Elijah\n24. Logan\n25. Nicholas\n26. Ryan\n27. Samuel\n28. Caleb\n29. Lucas\n30. Joshua\n31. Alexander\n32. Michael\n33."
    ]
  },
  {
    "id": "FOLIO_train_582",
    "context": "All devices belonging to the company are connected to Google Home. All devices with the company logo belong to the company. A device is either with the company logo or belongs to employees. All devices belonging to employees are available to connect to the company's wifi. All devices connected to Google Home are controlled by managers. All devices that connect to the company's wifi are easy to operate. All devices that are easy to operate are produced after 2020. IPod1 is produced before 2020.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? IPod1 is controlled by managers.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nBelongsTo(x, y) ::: x belongs to y.\nDevice(x) ::: x is a device.\nCompany(x) ::: x is a company.\nLogo(x) ::: x is a logo.\nAvailable(x) ::: x is available.\nControl(x, y) ::: x is controlled by y.\nEasyToOperate(x) ::: x is easy to operate.\nProduced(x, y) ::: x is produced in year y.\nPremises:\n∀x (BelongsTo(x, company) → Device(x)) ::: All devices belonging to the company are connected to Google Home.\n∀x (Logo(x) → BelongsTo(x, company)) ::: All devices with the company logo belong to the company.\n∀x (Device(x) ⊕ BelongsTo(x, employees)) ::: A device is either with the company logo or belongs to employees.\n∀x (Available(x) → BelongsTo(x, employees)) ::: All devices belonging to employees are available to connect to the company's wifi.\n∀x (Control(x, manager) → Device(x) ∧ BelongsTo(x, company)) ::: All devices that are controlled by managers are connected to Google Home.\n∀x (EasyToOperate(x) → Device(x) ∧ BelongsTo(x, company) ∧ Available(x)) ::: All devices that are easy to operate are connected to Google Home.\n∀x (Device(x) ∧ BelongsTo(x, company) ∧ Available(x) → EasyToOperate(x)) ::: All devices that connect to the company's wifi are easy to operate.\nConclusion:\nControl"
    ]
  },
  {
    "id": "FOLIO_train_583",
    "context": "All devices belonging to the company are connected to Google Home. All devices with the company logo belong to the company. A device is either with the company logo or belongs to employees. All devices belonging to employees are available to connect to the company's wifi. All devices connected to Google Home are controlled by managers. All devices that connect to the company's wifi are easy to operate. All devices that are easy to operate are produced after 2020. IPod1 is produced before 2020.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? IPod1 is either produced after 2020 or controlled by managers.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBelongsTo(x, y) ::: x belongs to y.\nDevice(x) ::: x is a device.\nCompany(x) ::: x is a company.\nLogo(x) ::: x is a logo.\nAvailable(x) ::: x is available.\nControl(x, y) ::: x is controlled by y.\nEasyToOperate(x) ::: x is easy to operate.\nProduced(x, y) ::: x is produced in year y.\nPremises:\n∀x (BelongsTo(x, company) → Device(x)) ::: All devices belonging to the company are connected to Google Home.\n∀x (Logo(x) → BelongsTo(x, company)) ::: All devices with the company logo belong to the company.\n∀x (Device(x) ⊕ BelongsTo(x, employees)) ::: A device is either with the company logo or belongs to employees.\n∀x (Available(x) → BelongsTo(x, employees)) ::: All devices belonging to employees are available to connect to the company's wifi.\n∀x (Control(x, manager) → Device(x) ∧ BelongsTo(x, company)) ::: All devices that are controlled by managers are connected to Google Home.\n∀x (EasyToOperate(x) → Device(x) ∧ Available(x)) ::: All devices that are easy to operate are available to connect to the company's wifi.\n∀x (Produced(x, year2020) → EasyToOperate(x)) ::: All devices that are produced after 2020 are easy to operate.\nIPod1(x) ::: x is IPod1.\nConclusion:\nControl"
    ]
  },
  {
    "id": "FOLIO_train_584",
    "context": "All devices belonging to the company are connected to Google Home. All devices with the company logo belong to the company. A device is either with the company logo or belongs to employees. All devices belonging to employees are available to connect to the company's wifi. All devices connected to Google Home are controlled by managers. All devices that connect to the company's wifi are easy to operate. All devices that are easy to operate are produced after 2020. IPod1 is produced before 2020.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? IPod1 is not with the company logo, and managers do not control it.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBelongsTo(x, y) ::: x belongs to y.\nWith(x, y) ::: x is with y.\nCompany(x) ::: x is a company.\nLogo(x) ::: x is a logo.\nDevice(x) ::: x is a device.\nAvailable(x) ::: x is available.\nControl(x, y) ::: x is controlled by y.\nEasyToOperate(x) ::: x is easy to operate.\nProduced(x, y) ::: x is produced in year y.\nPremises:\n∀x (BelongsTo(x, company) → With(x, company)) ::: All devices belonging to the company are connected to Google Home.\n∀x (With(x, company) → Company(x)) ::: All devices with the company logo belong to the company.\n∀x (Device(x) → (With(x, company) ∨ BelongsTo(x, employees))) ::: A device is either with the company logo or belongs to employees.\n∀x (BelongsTo(x, employees) → Available(x)) ::: All devices belonging to employees are available to connect to the company's wifi.\n∀x (Control(x, managers) → With(x, company)) ::: All devices controlled by managers are connected to Google Home.\n∀x (Available(x) → EasyToOperate(x)) ::: All devices that connect to the company's wifi are easy to operate.\nProduced(IPod1, year2019) ::: IPod1 is produced before 2020.\nConclusion:\nWith(IPod1, company) ∧ ¬Control(IPod1, managers) ::: IPod1 is"
    ]
  },
  {
    "id": "FOLIO_train_585",
    "context": "All devices belonging to the company are connected to Google Home. All devices with the company logo belong to the company. A device is either with the company logo or belongs to employees. All devices belonging to employees are available to connect to the company's wifi. All devices connected to Google Home are controlled by managers. All devices that connect to the company's wifi are easy to operate. All devices that are easy to operate are produced after 2020. IPod1 is produced before 2020.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? IPod1 is either with the company logo or controlled by managers.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nBelongsTo(x, y) ::: x belongs to y.\nDevice(x) ::: x is a device.\nCompany(x) ::: x is a company.\nLogo(x) ::: x is a logo.\nAvailable(x) ::: x is available.\nControl(x, y) ::: x is controlled by y.\nEasyToOperate(x) ::: x is easy to operate.\nProduced(x, y) ::: x is produced in year y.\nPremises:\n∀x (BelongsTo(x, company) → Device(x)) ::: All devices belonging to the company are connected to Google Home.\n∀x (Company(x) → Logo(x)) ::: All devices with the company logo belong to the company.\n∀x (Device(x) ⊕ BelongsTo(x, employees)) ::: A device is either with the company logo or belongs to employees.\n∀x (BelongsTo(x, employees) → Available(x)) ::: All devices belonging to employees are available to connect to the company's wifi.\n∀x (Control(x, manager) → Device(x) ∧ BelongsTo(x, company)) ::: All devices that are controlled by managers are connected to Google Home.\n∀x (Available(x) → EasyToOperate(x)) ::: All devices that are available are easy to operate.\n∃x (Produced(x, year2020) ∧ EasyToOperate(x)) ::: All devices that are easy to operate are produced after 2020.\nIPod1(x) ::: x is IPod1.\nConclusion:\nControl(IPod1, manager) ::: IPod1 is either with the company"
    ]
  },
  {
    "id": "FOLIO_train_586",
    "context": "All CD players are delicate mechanisms. No delicate mechanisms are suitable toys for children.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Some CD players are suitable toys for children.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nCDPlayer(x) ::: x is a CD player.\nDelicateMechanism(x) ::: x is a delicate mechanism.\nSuitableToy(x, y) ::: x is a suitable toy for y.\nPremises:\n∀x (CDPlayer(x) → DelicateMechanism(x)) ::: All CD players are delicate mechanisms.\n∀x (DelicateMechanism(x) → ¬SuitableToy(x, child)) ::: No delicate mechanisms are suitable toys for children.\nConclusion:\n∃x (CDPlayer(x) ∧ SuitableToy(x, child)) ::: Some CD players are suitable toys for children.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\n###\nPredicates:\nDependent(x) ::: x is a person dependent on caffeine.\nDrinks(x) :::"
    ]
  },
  {
    "id": "FOLIO_train_587",
    "context": "All mammals are living beings. All elephants are mammals. All baby elephants are elephants. Some baby elephants are sleepy. If Jumbo is a living being, then Jumbo is not an elephant or a mammal. If Jumbo is sleepy, then Jumbo is a baby elephant or an elephant.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jumbo is sleepy.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nLivingBeing(x) ::: x is a living being.\nMammal(x) ::: x is a mammal.\nElephant(x) ::: x is an elephant.\nBabyElephant(x) ::: x is a baby elephant.\nSleepy(x) ::: x is sleepy.\nPremises:\n∀x (LivingBeing(x) → Mammal(x)) ::: All mammals are living beings.\n∀x (Elephant(x) → Mammal(x)) ::: All elephants are mammals.\n∀x (BabyElephant(x) → Elephant(x)) ::: All baby elephants are elephants.\n∃x (BabyElephant(x) ∧ Sleepy(x)) ::: Some baby elephants are sleepy.\n¬(Mammal(jumbo) ∧ Elephant(jumbo)) ∧ (Mammal(jumbo) → Elephant(jumbo)) ∧ (Mammal(jumbo) → LivingBeing(jumbo)) ::: If Jumbo is a living being, then Jumbo is not an elephant or a mammal.\n¬(Elephant(jumbo) ∧ Sleepy(jumbo)) ∧ (Elephant(jumbo) → Sleepy(jumbo)) ∧ (Elephant(jumbo) → BabyElephant(jumbo)) ::: If Jumbo is sleepy, then Jumbo is a baby elephant or an elephant.\nConclusion:\nSleep"
    ]
  },
  {
    "id": "FOLIO_train_588",
    "context": "All mammals are living beings. All elephants are mammals. All baby elephants are elephants. Some baby elephants are sleepy. If Jumbo is a living being, then Jumbo is not an elephant or a mammal. If Jumbo is sleepy, then Jumbo is a baby elephant or an elephant.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jumbo is not sleepy.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nLivingBeing(x) ::: x is a living being.\nMammal(x) ::: x is a mammal.\nElephant(x) ::: x is an elephant.\nBabyElephant(x) ::: x is a baby elephant.\nSleepy(x) ::: x is sleepy.\nPremises:\n∀x (LivingBeing(x) → Mammal(x)) ::: All mammals are living beings.\n∀x (Elephant(x) → Mammal(x)) ::: All elephants are mammals.\n∀x (BabyElephant(x) → Elephant(x)) ::: All baby elephants are elephants.\n∃x (BabyElephant(x) ∧ Sleepy(x)) ::: Some baby elephants are sleepy.\n¬(Mammal(jumbo) ∧ Elephant(jumbo)) ∧ (Mammal(jumbo) → Elephant(jumbo)) ∧ (Mammal(jumbo) → LivingBeing(jumbo)) ::: If Jumbo is a living being, then Jumbo is not an elephant or a mammal.\n¬(Sleepy(jumbo) ∧ Elephant(jumbo)) ∧ (Sleepy(jumbo) → Elephant(jumbo)) ∧ (Sleepy(jumbo) → BabyElephant(jumbo)) ::: If Jumbo is sleepy, then Jumbo is a baby elephant or an elephant.\nConclusion:\n¬Sleepy("
    ]
  },
  {
    "id": "FOLIO_train_589",
    "context": "All mammals are living beings. All elephants are mammals. All baby elephants are elephants. Some baby elephants are sleepy. If Jumbo is a living being, then Jumbo is not an elephant or a mammal. If Jumbo is sleepy, then Jumbo is a baby elephant or an elephant.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jumbo is a living being.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nLivingBeing(x) ::: x is a living being.\nMammal(x) ::: x is a mammal.\nElephant(x) ::: x is an elephant.\nBabyElephant(x) ::: x is a baby elephant.\nSleepy(x) ::: x is sleepy.\nPremises:\n∀x (LivingBeing(x) → Mammal(x)) ::: All mammals are living beings.\n∀x (Elephant(x) → Mammal(x)) ::: All elephants are mammals.\n∀x (BabyElephant(x) → Elephant(x)) ::: All baby elephants are elephants.\n∃x (BabyElephant(x) ∧ Sleepy(x)) ::: Some baby elephants are sleepy.\n¬(Mammal(jumbo) ∧ Elephant(jumbo)) ∧ (Mammal(jumbo) → Elephant(jumbo)) ∧ (Mammal(jumbo) → LivingBeing(jumbo)) ::: If Jumbo is a living being, then Jumbo is not an elephant or a mammal.\n¬(Elephant(jumbo) ∧ Sleepy(jumbo)) ∧ (Elephant(jumbo) → Sleepy(jumbo)) ∧ (Elephant(jumbo) → LivingBeing(jumbo)) ::: If Jumbo is sleepy, then Jumbo is a baby elephant or an elephant.\nConclusion:\nLivingBeing"
    ]
  },
  {
    "id": "FOLIO_train_590",
    "context": "All mammals are living beings. All elephants are mammals. All baby elephants are elephants. Some baby elephants are sleepy. If Jumbo is a living being, then Jumbo is not an elephant or a mammal. If Jumbo is sleepy, then Jumbo is a baby elephant or an elephant.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jumbo is neither sleepy nor a baby elephant.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nLivingBeing(x) ::: x is a living being.\nMammal(x) ::: x is a mammal.\nElephant(x) ::: x is an elephant.\nBabyElephant(x) ::: x is a baby elephant.\nSleepy(x) ::: x is sleepy.\nPremises:\n∀x (LivingBeing(x) → Mammal(x)) ::: All mammals are living beings.\n∀x (Elephant(x) → Mammal(x)) ::: All elephants are mammals.\n∀x (BabyElephant(x) → Elephant(x)) ::: All baby elephants are elephants.\n∃x (BabyElephant(x) ∧ Sleepy(x)) ::: Some baby elephants are sleepy.\n¬(Elephant(jumbo) ∧ Mammal(jumbo)) ∨ (Elephant(jumbo) ∧ Mammal(jumbo)) ::: If Jumbo is a living being, then Jumbo is not an elephant or a mammal.\n¬Sleepy(jumbo) ∨ (Sleepy(jumbo) ∧ Elephant(jumbo)) ::: If Jumbo is sleepy, then Jumbo is a baby elephant or an elephant.\nConclusion:\n¬Sleepy(jumbo) ∧ ¬Elephant(jumbo) ::: Jumbo is neither sleepy nor a baby elephant.\n------"
    ]
  },
  {
    "id": "FOLIO_train_591",
    "context": "All mammals are living beings. All elephants are mammals. All baby elephants are elephants. Some baby elephants are sleepy. If Jumbo is a living being, then Jumbo is not an elephant or a mammal. If Jumbo is sleepy, then Jumbo is a baby elephant or an elephant.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jumbo is not sleepy or an elephant.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nLivingBeing(x) ::: x is a living being.\nMammal(x) ::: x is a mammal.\nElephant(x) ::: x is an elephant.\nBabyElephant(x) ::: x is a baby elephant.\nSleepy(x) ::: x is sleepy.\nPremises:\n∀x (LivingBeing(x) → Mammal(x)) ::: All mammals are living beings.\n∀x (Elephant(x) → Mammal(x)) ::: All elephants are mammals.\n∀x (BabyElephant(x) → Elephant(x)) ::: All baby elephants are elephants.\n∃x (BabyElephant(x) ∧ Sleepy(x)) ::: Some baby elephants are sleepy.\n¬(Elephant(jumbo) ∧ Mammal(jumbo)) ∨ (Elephant(jumbo) ∧ Mammal(jumbo)) ::: If Jumbo is a living being, then Jumbo is not an elephant or a mammal.\n(Sleepy(jumbo) ∧ Elephant(jumbo)) ∨ (Sleepy(jumbo) ∧ Elephant(jumbo)) ::: If Jumbo is sleepy, then Jumbo is a baby elephant or an elephant.\nConclusion:\n¬(Elephant(jumbo) ∧ Mammal(jumbo)) ∨ (Elephant(j"
    ]
  },
  {
    "id": "FOLIO_train_592",
    "context": "No faculty does homework. All students do homework. All kids are students. If someone works at a school, then they are faculty. If Jill works at a school or is a teacher, then Jill works at a school.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jill works at a school.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nFaculty(x) ::: x is faculty.\nStudent(x) ::: x is a student.\nKid(x) ::: x is a kid.\nWorksAtSchool(x) ::: x works at a school.\nTeacher(x) ::: x is a teacher.\nPremises:\n∀x (Student(x) → Homework(x)) ::: All students do homework.\n∀x (Kid(x) → Student(x)) ::: All kids are students.\n∀x (Faculty(x) → ¬Homework(x)) ::: No faculty does homework.\n(WorksAtSchool(jill) ∨ Teacher(jill)) ::: If Jill works at a school or is a teacher, then Jill works at a school.\nConclusion:\nWorksAtSchool(jill) ::: Jill works at a school.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a"
    ]
  },
  {
    "id": "FOLIO_train_593",
    "context": "No faculty does homework. All students do homework. All kids are students. If someone works at a school, then they are faculty. If Jill works at a school or is a teacher, then Jill works at a school.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jill is a kid.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nFaculty(x) ::: x is faculty.\nStudent(x) ::: x is a student.\nKid(x) ::: x is a kid.\nWorksAtSchool(x) ::: x works at a school.\nTeacher(x) ::: x is a teacher.\nPremises:\n∀x (Student(x) → Homework(x)) ::: All students do homework.\n∀x (Kid(x) → Student(x)) ::: All kids are students.\n∀x (Faculty(x) → WorksAtSchool(x)) ::: If someone works at a school, then they are faculty.\nWorksAtSchool(jill) ∨ Teacher(jill) ::: If Jill works at a school or is a teacher, then Jill works at a school.\nConclusion:\nKid(jill) ::: Jill is a kid.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either"
    ]
  },
  {
    "id": "FOLIO_train_594",
    "context": "No faculty does homework. All students do homework. All kids are students. If someone works at a school, then they are faculty. If Jill works at a school or is a teacher, then Jill works at a school.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jill is not a kid.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nFaculty(x) ::: x is faculty.\nStudent(x) ::: x is a student.\nKid(x) ::: x is a kid.\nWorksAtSchool(x) ::: x works at a school.\nTeacher(x) ::: x is a teacher.\nPremises:\n∀x (Student(x) → Homework(x)) ::: All students do homework.\n∀x (Kid(x) → Student(x)) ::: All kids are students.\n∀x (Faculty(x) → WorksAtSchool(x)) ::: If someone works at a school, then they are faculty.\nWorksAtSchool(jill) ∨ Teacher(jill) ::: If Jill works at a school or is a teacher, then Jill works at a school.\nConclusion:\n¬Kid(jill) ::: Jill is not a kid.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina"
    ]
  },
  {
    "id": "FOLIO_train_595",
    "context": "Either Max listens to classical music or Max listens to rap. All the songs that Max listens to that are classical music are from the 12th century. If the song Max listens to is rap, then the song is from Kanye West. If a songs is from Kanye West, then the song is full of lyrics. All songs that are full of lyrics need to be written with words If “As it was” by Harry Styles is classical music that Max listens to or  from the 12th century, then “As it was” by Harry Styles is either classical music that Max listens to, or the songs are from 12th century.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? “As it was” by Harry Styles needs to be written with words.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nListensTo(x, y) ::: x listens to y.\nClassicalMusic(x) ::: x is classical music.\n12thCentury(x) ::: x is from the 12th century.\nRap(x) ::: x is rap.\nKanyeWest(x) ::: x is from Kanye West.\nFullOfLyrics(x) ::: x is full of lyrics.\nNeedsToBeWrittenWithWords(x) ::: x needs to be written with words.\nPremises:\nListensTo(max, classicalMusic) ⊕ ListensTo(max, rap) ::: Either Max listens to classical music or Max listens to rap.\n∀x (ClassicalMusic(x) ∧ 12thCentury(x)) ::: All the songs that Max listens to that are classical music are from the 12th century.\nListensTo(max, rap) → KanyeWest(x) ::: If the song Max listens to is rap, then the song is from Kanye West.\nKanyeWest(x) → FullOfLyrics(x) ::: If a songs is from Kanye West, then the song is full of lyrics.\nFullOfLyrics(x) → NeedsToBeWrittenWithWords(x) ::: All songs that are full of lyrics need to be written with words\n(ClassicalMusic(asItWasByHarryStyles) ⊕ 12thCentury(asItWasByHarryStyles)) → (ClassicalMusic(asItWasByHarryStyles) ∧ 12thCentury("
    ]
  },
  {
    "id": "FOLIO_train_596",
    "context": "Either Max listens to classical music or Max listens to rap. All the songs that Max listens to that are classical music are from the 12th century. If the song Max listens to is rap, then the song is from Kanye West. If a songs is from Kanye West, then the song is full of lyrics. All songs that are full of lyrics need to be written with words If “As it was” by Harry Styles is classical music that Max listens to or  from the 12th century, then “As it was” by Harry Styles is either classical music that Max listens to, or the songs are from 12th century.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? \"As it was” by Harry Styles is a song from the 12th century.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nListensTo(x, y) ::: x listens to y.\nClassicalMusic(x) ::: x is classical music.\nRap(x) ::: x is rap.\n12thCentury(x) ::: x is from the 12th century.\nLyrics(x) ::: x is full of lyrics.\nWords(x) ::: x is written with words.\nPremises:\nListensTo(max, classicalMusic) ⊕ ListensTo(max, rap) ::: Either Max listens to classical music or Max listens to rap.\nListensTo(max, classicalMusic) ∧ 12thCentury(classicalMusic) ::: All the songs that Max listens to that are classical music are from the 12th century.\nListensTo(max, rap) → KanyeWest(rap) ::: If the song Max listens to is rap, then the song is from Kanye West.\nKanyeWest(rap) → Lyrics(rap) ::: If a songs is from Kanye West, then the song is full of lyrics.\nLyrics(rap) → Words(rap) ::: All songs that are full of lyrics need to be written with words\nListensTo(max, classicalMusic) ⊕ ListensTo(max, 12thCentury) ::: If “As it was” by Harry Styles is classical music that Max listens to or from the 12th century, then “As it was” by Harry Styles is either classical music that Max listens to, or the songs are from 12th century.\nConclusion:\n12thCentury(classical"
    ]
  },
  {
    "id": "FOLIO_train_597",
    "context": "Either Max listens to classical music or Max listens to rap. All the songs that Max listens to that are classical music are from the 12th century. If the song Max listens to is rap, then the song is from Kanye West. If a songs is from Kanye West, then the song is full of lyrics. All songs that are full of lyrics need to be written with words If “As it was” by Harry Styles is classical music that Max listens to or  from the 12th century, then “As it was” by Harry Styles is either classical music that Max listens to, or the songs are from 12th century.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? \"As it was” by Harry Styles is not a song from Kanye West and needs to be written with words.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nListensTo(x, y) ::: x listens to y.\nClassicalMusic(x) ::: x is classical music.\n12thCentury(x) ::: x is from the 12th century.\nRap(x) ::: x is rap.\nSong(x) ::: x is a song.\nLyrics(x) ::: x is full of lyrics.\nNeedsToBeWrittenWithWords(x) ::: x needs to be written with words.\nPremises:\nListensTo(max, classicalMusic) ⊕ ListensTo(max, rap) ::: Either Max listens to classical music or Max listens to rap.\n∀x (ClassicalMusic(x) ∧ 12thCentury(x)) ::: All the songs that Max listens to that are classical music are from the 12th century.\nListensTo(max, rap) → Song(kanyeWest) ::: If the song Max listens to is rap, then the song is from Kanye West.\nSong(kanyeWest) → Lyrics(kanyeWest) ::: If a songs is from Kanye West, then the song is full of lyrics.\n∀x (Lyrics(x) → NeedsToBeWrittenWithWords(x)) ::: All songs that are full of lyrics need to be written with words.\nListensTo(max, classicalMusic) → 12thCentury(classicalMusic) ::: If “As it was” by Harry Styles is classical music that Max listens to or from the 12th century, then “As it was” by Harry Styles is either classical"
    ]
  },
  {
    "id": "FOLIO_train_598",
    "context": "\"Your Woman\" is a song by British one-man band White Town. \"Your Woman\" song peaked at No. 1 on the UK Singles Chart. If a song peaked at No.1 at a cetain place, then it was extremely popular. \"Your Woman\" also peaked No. 1 in Iceland, Israel and Spain.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? \"Your Woman\" was extremely popular.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nPeak(x, y) ::: x peaked at y.\nPopular(x) ::: x was extremely popular.\nPremises:\nPeak(yourWoman, 1) ::: \"Your Woman\" peaked at No. 1.\nPeak(yourWoman, 1) ∧ Popular(yourWoman) ::: \"Your Woman\" was extremely popular.\nPeak(yourWoman, 1) ∧ Peak(yourWoman, 1) ∧ Popular(yourWoman) ::: \"Your Woman\" was extremely popular.\nPeak(yourWoman, 1) ∧ Peak(yourWoman, 1) ∧ Popular(yourWoman) ∧ Peak(yourWoman, 1) ∧ Peak(yourWoman, 1) ∧ Popular(yourWoman) ::: \"Your Woman\" was extremely popular.\nConclusion:\nPopular(yourWoman) ::: \"Your Woman\" was extremely popular.\n------\nProblem:\nThe 2010 FIFA World Cup was the 19th FIFA World Cup, the world championship for men's national association football teams. It took place in South Africa from 11 June to 11 July 2010. The final was won by Spain, who defeated the Netherlands 1–0 after extra time.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The 2010 FIFA World Cup was the 19th FIFA World Cup.\n###\nPredicates:\nWorldCup(x) ::: x is a World Cup.\nPremises:\nWorldCup(2010) :::"
    ]
  },
  {
    "id": "FOLIO_train_599",
    "context": "\"Your Woman\" is a song by British one-man band White Town. \"Your Woman\" song peaked at No. 1 on the UK Singles Chart. If a song peaked at No.1 at a cetain place, then it was extremely popular. \"Your Woman\" also peaked No. 1 in Iceland, Israel and Spain.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? White Town did not produce any popular song.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nPopular(x) ::: x is a popular song.\nPeak(x, y) ::: x peaked at No. y at a certain place.\nExtremelyPopular(x) ::: x was extremely popular.\nPremises:\nPeak(yourWoman, 1) ::: \"Your Woman\" peaked at No. 1 on the UK Singles Chart.\nPeak(yourWoman, 1) ∧ ExtremelyPopular(yourWoman) ::: \"Your Woman\" was extremely popular.\nPeak(yourWoman, 1) ∧ Peak(yourWoman, 1) ∧ Peak(yourWoman, 1) ::: \"Your Woman\" peaked at No. 1 in Iceland, Israel and Spain.\nConclusion:\n¬Popular(yourWoman) ::: White Town did not produce any popular song.\n------\nProblem:\nThe 2016 Summer Olympics were held in Rio de Janeiro, Brazil, from 5 to 21 August 2016. The 2016 Summer Paralympics were held in Rio de Janeiro, Brazil, from 7 to 18 September 2016. The 2016 Summer Olympics were the first Summer Olympics to be held in South America. The 2016 Summer Paralympics were the first Summer Paralympics to be held in South America.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The 2016 Summer Olympics were held in South America.\n###\nPredicates:\nSummerOlympics(x) ::: x is the Summer Olympics."
    ]
  },
  {
    "id": "FOLIO_train_600",
    "context": "\"Your Woman\" is a song by British one-man band White Town. \"Your Woman\" song peaked at No. 1 on the UK Singles Chart. If a song peaked at No.1 at a cetain place, then it was extremely popular. \"Your Woman\" also peaked No. 1 in Iceland, Israel and Spain.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? White Town was a successful band.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nPeak(x, y) ::: x peaked at y.\nPopular(x) ::: x was extremely popular.\nSuccessful(x) ::: x was a successful band.\nPremises:\nPeak(yourWoman, 1) ::: \"Your Woman\" peaked at No. 1 on the UK Singles Chart.\nPeak(yourWoman, 1) ∧ Popular(yourWoman) ::: If a song peaked at No.1 at a certain place, then it was extremely popular.\nPeak(yourWoman, 1) ∧ Peak(yourWoman, 1) ∧ Peak(yourWoman, 1) ::: \"Your Woman\" peaked No. 1 in Iceland, Israel and Spain.\nConclusion:\nSuccessful(whiteTown) ::: White Town was a successful band.\n------"
    ]
  },
  {
    "id": "FOLIO_train_601",
    "context": "All people who limp often and regularly have long-term medical issues with underlying causes. If people have long-term medical issues with underlying causes, then they are not often spry and energetic. People either stay indoors and rest a lot at home or people are often tired and disinterested in their activities. If people stay indoors and rest a lot at home, then they do not visit the gym at least once a day. If Mark either limps often and regularly or is often spry and energetic, then Mark limps often and regularly or is often tired and disinterested in his activities.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mark limps often and regularly.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nLimp(x) ::: x limps.\nLongTermMedicalIssue(x) ::: x has a long-term medical issue.\nUnderlyingCause(x) ::: x has an underlying cause.\nSpry(x) ::: x is spry.\nEnergetic(x) ::: x is energetic.\nStayIndoors(x) ::: x stays indoors.\nRest(x) ::: x rests.\nRestAtHome(x) ::: x rests at home.\nVisitGym(x) ::: x visits the gym.\nPremises:\n∀x (Limp(x) → LongTermMedicalIssue(x)) ::: All people who limp often and regularly have long-term medical issues with underlying causes.\n∀x (LongTermMedicalIssue(x"
    ]
  },
  {
    "id": "FOLIO_train_602",
    "context": "All people who limp often and regularly have long-term medical issues with underlying causes. If people have long-term medical issues with underlying causes, then they are not often spry and energetic. People either stay indoors and rest a lot at home or people are often tired and disinterested in their activities. If people stay indoors and rest a lot at home, then they do not visit the gym at least once a day. If Mark either limps often and regularly or is often spry and energetic, then Mark limps often and regularly or is often tired and disinterested in his activities.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mark visits the gym at least once a day.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nLimp(x) ::: x limps.\nLongTermMedicalIssue(x) ::: x has a long-term medical issue.\nUnderlyingCause(x) ::: x has an underlying cause.\nSpry(x) ::: x is spry.\nEnergetic(x) ::: x is energetic.\nStayIndoors(x) ::: x stays indoors.\nRest(x) ::: x rests.\nRestAtHome(x) ::: x rests at home.\nTired(x) ::: x is tired.\nDisinterested(x) ::: x is disinterested.\nActivity(x) ::: x is an activity.\nVisit(x, y) ::: x visits y.\nGym(x) ::: x is a gym.\nPremises:\n∀"
    ]
  },
  {
    "id": "FOLIO_train_603",
    "context": "All people who limp often and regularly have long-term medical issues with underlying causes. If people have long-term medical issues with underlying causes, then they are not often spry and energetic. People either stay indoors and rest a lot at home or people are often tired and disinterested in their activities. If people stay indoors and rest a lot at home, then they do not visit the gym at least once a day. If Mark either limps often and regularly or is often spry and energetic, then Mark limps often and regularly or is often tired and disinterested in his activities.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mark stays indoors and rests regularly at his home or visits the gym at least once a day.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLimp(x) ::: x limps.\nLongTerm(x) ::: x is a long-term medical issue with underlying causes.\nSpry(x) ::: x is spry and energetic.\nEnergetic(x) ::: x is energetic.\nIndoors(x) ::: x is indoors.\nRest(x) ::: x rests.\nHome(x) ::: x is at home.\nGym(x) ::: x is at the gym.\nVisit(x, y) ::: x visits y.\nPremises:\n∀x (Limp(x) → LongTerm(x)) ::: All people who limp often and regularly have long-term medical issues with underlying causes.\n∀x (LongTerm(x) → ¬Spry(x)) ::: If people have long-"
    ]
  },
  {
    "id": "FOLIO_train_604",
    "context": "If two soccer teams score the same number of goals in one UCL final during the regular time, they need to play for the extra time. If two soccer teams score the same number of goals in one UCL final during both the regular time and extra time, they need to play the penalty shoot-out. Real Madrid and Atlético Madrid both scored one goal in 2016 UCL final during the regular time. Real Madrid and Atlético Madrid both scored zero goals in 2016 UCL final during the extra time.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Real Madrid and Atlético Madrid needed to play a penalty shoot-out in 2016 UCL final.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nSoccerTeam(x) ::: x is a soccer team.\nUCLFinal(x) ::: x is a UCL final.\nRegularTime(x) ::: x is the regular time.\nExtraTime(x) ::: x is the extra time.\nPenaltyShootOut(x) ::: x is a penalty shoot-out.\nPremises:\nSoccerTeam(realMadrid) ∧ SoccerTeam(atleticoMadrid) ::: Real Madrid and Atlético Madrid are soccer teams.\nUCLFinal(2016) ∧ RegularTime(2016) ∧ ExtraTime(2016) ::: 2016 is a UCL final during the regular time and extra time.\nSoccerTeam(realMadrid) ∧ SoccerTeam(atleticoMadrid) ∧ UCLFinal("
    ]
  },
  {
    "id": "FOLIO_train_605",
    "context": "If two soccer teams score the same number of goals in one UCL final during the regular time, they need to play for the extra time. If two soccer teams score the same number of goals in one UCL final during both the regular time and extra time, they need to play the penalty shoot-out. Real Madrid and Atlético Madrid both scored one goal in 2016 UCL final during the regular time. Real Madrid and Atlético Madrid both scored zero goals in 2016 UCL final during the extra time.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Real Madrid and Atlético Madrid did not need to play a penalty shoot-out in 2016 UCL final.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nSoccerTeam(x) ::: x is a soccer team.\nUCLFinal(x) ::: x is a UCL final.\nRegularTime(x) ::: x is the regular time of a UCL final.\nExtraTime(x) ::: x is the extra time of a UCL final.\nPenaltyShootOut(x) ::: x is a penalty shoot-out.\nScore(x, y) ::: x scores y goals in a UCL final.\nPremises:\nSoccerTeam(realMadrid) ∧ SoccerTeam(atleticoMadrid) ::: Real Madrid and Atlético Madrid are soccer teams.\nUCLFinal(2016) ∧ RegularTime(2016) ∧ ExtraTime(2016) ::: 2016 is a UCL final.\nScore(real"
    ]
  },
  {
    "id": "FOLIO_train_606",
    "context": "System 7 is a UK-based electronic dance music band. Steve Hillage and Miquette Giraudy formed System 7. Steve Hillage and Miquette Giraudy are former members of the band Gong. Electric dance music bands are bands. System 7 has released several club singles. Club singles are not singles.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? System 7 was formed by former members of Gong.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nElectronicDanceMusicBand(x) ::: x is an electronic dance music band.\nBand(x) ::: x is a band.\nForm(x, y) ::: x is formed by y.\nClubSingle(x) ::: x is a club single.\nSingle(x) ::: x is a single.\nPremises:\nElectronicDanceMusicBand(system7) ∧ Band(system7) ∧ Form(system7, hillageGiraudy) ∧ Band(hillageGiraudy) ∧ Form(hillageGiraudy, gong) ::: System 7 is a UK-based electronic dance music band. Steve Hillage and Miquette Giraudy formed System 7. Steve Hillage and Miquette Giraudy are former members of the band Gong.\nClubSingle"
    ]
  },
  {
    "id": "FOLIO_train_607",
    "context": "System 7 is a UK-based electronic dance music band. Steve Hillage and Miquette Giraudy formed System 7. Steve Hillage and Miquette Giraudy are former members of the band Gong. Electric dance music bands are bands. System 7 has released several club singles. Club singles are not singles.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? System 7 has released several singles.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nElectronicDanceMusicBand(x) ::: x is an electronic dance music band.\nBand(x) ::: x is a band.\nFormerMember(x, y) ::: x is a former member of y.\nClubSingle(x) ::: x is a club single.\nSingle(x) ::: x is a single.\nPremises:\nElectronicDanceMusicBand(system7) ∧ Band(system7) ∧ FormerMember(system7, gong) ∧ FormerMember(system7, gong) ::: System 7 is a UK-based electronic dance music band. Steve Hillage and Miquette Giraudy formed System 7. Steve Hillage and Miquette Giraudy are former members of the band Gong.\n∃x (ElectronicDanceMusicBand(x"
    ]
  },
  {
    "id": "FOLIO_train_608",
    "context": "System 7 is a UK-based electronic dance music band. Steve Hillage and Miquette Giraudy formed System 7. Steve Hillage and Miquette Giraudy are former members of the band Gong. Electric dance music bands are bands. System 7 has released several club singles. Club singles are not singles.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? System 7 is not a band.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nUK(x) ::: x is a UK-based thing.\nElectronicDanceMusicBand(x) ::: x is an electronic dance music band.\nFormerMember(x, y) ::: x is a former member of y.\nClubSingle(x) ::: x is a club single.\nSingle(x) ::: x is a single.\nPremises:\nUK(system7) ∧ ElectronicDanceMusicBand(system7) ∧ FormerMember(system7, gong) ∧ FormerMember(system7, gong) ::: System 7 is a UK-based electronic dance music band. Steve Hillage and Miquette Giraudy formed System 7. Steve Hillage and Miquette Giraudy are former members of the band Gong.\n¬ClubSingle(system7) ∧ Single(system7"
    ]
  },
  {
    "id": "FOLIO_train_609",
    "context": "A summarization model is always faithful if it uses content from the input documents. Extractive models are a kind of summarization models. Extractive model can only use content from the input documents.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Extractive models are always faithful.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nSummarizationModel(x) ::: x is a summarization model.\nFaithful(x) ::: x is faithful.\nExtractive(x) ::: x is an extractive model.\nContent(x, y) ::: x is content of y.\nPremises:\n∀x (SummarizationModel(x) → Faithful(x)) ::: A summarization model is always faithful if it uses content from the input documents.\n∀x (Extractive(x) → Content(x, inputDocument)) ::: Extractive models can only use content from the input documents.\nConclusion:\nFaithful(extractive) ::: Extractive models are always faithful.\n------\nProblem:\nA summarization model is always faithful if it uses content from the input documents. Extractive models are a kind of summarization models. Extractive model can only use"
    ]
  },
  {
    "id": "FOLIO_train_610",
    "context": "A summarization model is always faithful if it uses content from the input documents. Extractive models are a kind of summarization models. Extractive model can only use content from the input documents.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Extractive models are not always faithful.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nSummarizationModel(x) ::: x is a summarization model.\nFaithful(x) ::: x is faithful.\nExtractive(x) ::: x is an extractive model.\nContent(x, y) ::: x is content of y.\nPremises:\n∀x (SummarizationModel(x) → Faithful(x)) ::: A summarization model is always faithful if it uses content from the input documents.\n∀x (Extractive(x) → SummarizationModel(x)) ::: Extractive models are a kind of summarization models.\nConclusion:\n¬Faithful(extractive) ::: Extractive models are not always faithful.\n------"
    ]
  },
  {
    "id": "FOLIO_train_611",
    "context": "If people practice coding questions, then they are not studying to go to medical school to become a doctor. If people want to work in the software engineering industry, then they practice coding questions. If people enjoy healthcare fields and want to help people with medical issues, then they are studying to go to medical school to become a doctor. If people grew up with parents who worked as doctors, then they enjoy healthcare fields and want to help people with medical issues. If people study hard, then they grew up with parents who worked as doctors. If Robin neither enjoys healthcare fields and wants to help people with medical issues nor grew up with parents who worked as doctors, then Robin is either a person who studies hard or grew up with parents who worked as doctors.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Robin is a person who studies hard.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nPractice(x) ::: x practices coding questions.\nStudy(x) ::: x studies to go to medical school to become a doctor.\nEnjoy(x, y) ::: x enjoys y.\nWant(x, y) ::: x wants y.\nHelp(x, y) ::: x helps y.\nMedicalIssue(x) ::: x is a medical issue.\nParent(x, y) ::: x is the parent of y.\nWork(x, y) ::: x works as y.\nGrewUp(x, y) ::: x grew up with y.\nStudyHard(x) ::: x studies hard.\nPrem"
    ]
  },
  {
    "id": "FOLIO_train_612",
    "context": "If people practice coding questions, then they are not studying to go to medical school to become a doctor. If people want to work in the software engineering industry, then they practice coding questions. If people enjoy healthcare fields and want to help people with medical issues, then they are studying to go to medical school to become a doctor. If people grew up with parents who worked as doctors, then they enjoy healthcare fields and want to help people with medical issues. If people study hard, then they grew up with parents who worked as doctors. If Robin neither enjoys healthcare fields and wants to help people with medical issues nor grew up with parents who worked as doctors, then Robin is either a person who studies hard or grew up with parents who worked as doctors.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Robin practices coding questions and wants to work in the software engineering industry.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nPractice(x, y) ::: x practices y.\nStudy(x, y) ::: x studies y.\nEnjoy(x, y) ::: x enjoys y.\nWant(x, y) ::: x wants y.\nHelp(x, y) ::: x helps y.\nMedicalSchool(x) ::: x is a medical school.\nDoctor(x) ::: x is a doctor.\nSoftwareEngineeringIndustry(x) ::: x is a software engineering industry.\nPremises:\n∀x (Practice(x, codingQuestions) → ¬Study(x, medicalSchool)) ::: If people practice coding"
    ]
  },
  {
    "id": "FOLIO_train_613",
    "context": "If people practice coding questions, then they are not studying to go to medical school to become a doctor. If people want to work in the software engineering industry, then they practice coding questions. If people enjoy healthcare fields and want to help people with medical issues, then they are studying to go to medical school to become a doctor. If people grew up with parents who worked as doctors, then they enjoy healthcare fields and want to help people with medical issues. If people study hard, then they grew up with parents who worked as doctors. If Robin neither enjoys healthcare fields and wants to help people with medical issues nor grew up with parents who worked as doctors, then Robin is either a person who studies hard or grew up with parents who worked as doctors.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Robin neither practices coding questions nor works to work in the software engineering industry.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nPractice(x, y) ::: x practices y.\nStudy(x, y) ::: x studies y.\nEnjoy(x, y) ::: x enjoys y.\nWant(x, y) ::: x wants y.\nHelp(x, y) ::: x helps y.\nMedicalSchool(x) ::: x is a medical school.\nDoctor(x) ::: x is a doctor.\nSoftwareEngineeringIndustry(x) ::: x is a software engineering industry.\nPremises:\n∀x (Practice(x, codingQuestions) → ¬Study(x, medicalSchool)) ::: If people practice coding"
    ]
  },
  {
    "id": "FOLIO_train_614",
    "context": "If people go to the spa at least once a week, then they are not people who are miserly and need to save a large portion of their income. People are either miserly and need to save a large portion of their income, or people that frivolously spend a lot of money every time they go out. If people frivolously spend a lot of money every time they go out, then they value quality manufacturing and luxury items. If people value quality manufacturing and luxury items, then they enjoy shopping for materialistic items in their free time. If Jess is not miserly and needs to save a large portion of their income, then Jess does not value quality manufacturing and luxury items. If Jess either values quality manufacturing and luxury items or, if he does not, then he is miserly and needs to save a large portion of his income, then Jess frivolously spends a lot of money every time he goes out.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jess frivolously spends a lot of money every time they go out.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nGoesToSpa(x) ::: x goes to the spa at least once a week.\nMiserly(x) ::: x is a miserly person.\nNeedToSave(x) ::: x needs to save a large portion of their income.\nFrivolouslySpend(x) ::: x frivolously spends a lot of money every time they go out.\nValue(x, y) ::: x values y.\nLuxuryItem(x) ::: x is a luxury item.\nQualityManufacturing(x) ::: x is a quality manufacturing item.\nEnjoy(x, y) ::: x enjoys y.\nPremises:"
    ]
  },
  {
    "id": "FOLIO_train_615",
    "context": "If people go to the spa at least once a week, then they are not people who are miserly and need to save a large portion of their income. People are either miserly and need to save a large portion of their income, or people that frivolously spend a lot of money every time they go out. If people frivolously spend a lot of money every time they go out, then they value quality manufacturing and luxury items. If people value quality manufacturing and luxury items, then they enjoy shopping for materialistic items in their free time. If Jess is not miserly and needs to save a large portion of their income, then Jess does not value quality manufacturing and luxury items. If Jess either values quality manufacturing and luxury items or, if he does not, then he is miserly and needs to save a large portion of his income, then Jess frivolously spends a lot of money every time he goes out.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jess either enjoys shopping for materialistic items in his free time or, if he does not, then he goes to the spa at least once a week.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nGoesToSpa(x) ::: x goes to the spa at least once a week.\nMiserly(x) ::: x is miserly and needs to save a large portion of their income.\nFrivolouslySpends(x) ::: x frivolously spends a lot of money every time he goes out.\nValue(x, y) ::: x values y.\nEnjoys(x, y) ::: x enjoys y.\nShopping(x, y) ::: x shops for y in his free time.\nMaterialistic(x) ::: x is materialistic.\nLuxury(x) ::: x is a luxury item.\nPremises:"
    ]
  },
  {
    "id": "FOLIO_train_616",
    "context": "If people go to the spa at least once a week, then they are not people who are miserly and need to save a large portion of their income. People are either miserly and need to save a large portion of their income, or people that frivolously spend a lot of money every time they go out. If people frivolously spend a lot of money every time they go out, then they value quality manufacturing and luxury items. If people value quality manufacturing and luxury items, then they enjoy shopping for materialistic items in their free time. If Jess is not miserly and needs to save a large portion of their income, then Jess does not value quality manufacturing and luxury items. If Jess either values quality manufacturing and luxury items or, if he does not, then he is miserly and needs to save a large portion of his income, then Jess frivolously spends a lot of money every time he goes out.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Jess either enjoys shopping for materialistic items in his free time or, if he does not, then he goes to the spa at least once a week, then Jess neither values quality manufacturing and luxury items nor goes to the spa at least once a week.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGoesToSpa(x) ::: x goes to the spa at least once a week.\nMiserly(x) ::: x is a miserly person.\nNeedToSave(x) ::: x needs to save a large portion of their income.\nFrivolouslySpend(x) ::: x frivolously spends a lot of money every time they go out.\nValue(x, y) ::: x values y.\nEnjoy(x, y) ::: x enjoys y.\nShopping(x, y) ::: x shops for y in their free time.\nMaterialistic(x) ::: x is a materialistic item.\nQualityManufacturing("
    ]
  },
  {
    "id": "FOLIO_train_617",
    "context": "The indie pop band Phoenix has released 6 albums. Phoenix's album \"Wolfgang Amadeus Phoenix\" sold over 500,000 copies. A certified gold album or single is one which sold over half a million copies. \"1901\" is a single from Phoenix's album \"Wolfgang Amadeus Phoenix.\" Over 400,000 copies of \"1901\" have been sold.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The album \"Wolfgang Amadeus Phoenix\" is a certified gold album.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nAlbum(x) ::: x is an album.\nSingle(x) ::: x is a single.\nSold(x, y) ::: x was sold in year y.\nCertifiedGold(x) ::: x is a certified gold album or single.\nPremises:\nAlbum(wolfgangAmadeusPhoenix) ∧ Sold(wolfgangAmadeusPhoenix, year2009) ::: The album \"Wolfgang Amadeus Phoenix\" was released in year 2009.\nSold(1901, year2009) ∧ Sold(1901, year2010) ∧ Sold(19"
    ]
  },
  {
    "id": "FOLIO_train_618",
    "context": "The indie pop band Phoenix has released 6 albums. Phoenix's album \"Wolfgang Amadeus Phoenix\" sold over 500,000 copies. A certified gold album or single is one which sold over half a million copies. \"1901\" is a single from Phoenix's album \"Wolfgang Amadeus Phoenix.\" Over 400,000 copies of \"1901\" have been sold.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The single \"1901\" is a certified gold single.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nAlbum(x) ::: x is an album.\nSingle(x) ::: x is a single.\nCertifiedGold(x) ::: x is a certified gold album or single.\nSold(x, y) ::: x was sold in year y.\nPremises:\nAlbum(wolfgangAmadeusPhoenix) ∧ Sold(wolfgangAmadeusPhoenix, year2009) ∧ Sold(wolfgangAmadeusPhoenix, year2010) ∧ Sold(wolfgangAmadeusPhoenix, year2011) ∧ Sold(wolfgangAmadeusPhoenix, year2012"
    ]
  },
  {
    "id": "FOLIO_train_619",
    "context": "Peter Parker is a either a superhero or a civilian. The Hulk is a destroyer. The Hulk wakes up when he is angry. If the Hulk wakes up, then he will break a bridge. Thor is a god. Thor will break a bridge when he is happy. A god is not a destroyer and a destroyer is not a god. Peter Parker wears a uniform when he is a superhero. Peter Parker is not a civilian if and only if a destroyer is breaking a bridge. If Thor is happy, the Hulk is angry.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If the Hulk does not wake up, then Thor is not happy.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nSuperhero(x) ::: x is a superhero.\nCivilian(x) ::: x is a civilian.\nDestroyer(x) ::: x is a destroyer.\nHulk(x) ::: x is the Hulk.\nWakeUp(x) ::: x wakes up.\nBreakBridge(x) ::: x breaks a bridge.\nGod(x) ::: x is a god.\nThor(x) ::: x is Thor.\nPremises:\nSuperhero(peterParker) ⊕ Civilian(peterParker) ::: Peter Parker is a either a superhero or a civilian.\nDestroy"
    ]
  },
  {
    "id": "FOLIO_train_620",
    "context": "Peter Parker is a either a superhero or a civilian. The Hulk is a destroyer. The Hulk wakes up when he is angry. If the Hulk wakes up, then he will break a bridge. Thor is a god. Thor will break a bridge when he is happy. A god is not a destroyer and a destroyer is not a god. Peter Parker wears a uniform when he is a superhero. Peter Parker is not a civilian if and only if a destroyer is breaking a bridge. If Thor is happy, the Hulk is angry.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Thor is happy, then Peter Parker wears a uniform.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSuperhero(x) ::: x is a superhero.\nCivilian(x) ::: x is a civilian.\nDestroyer(x) ::: x is a destroyer.\nHulk(x) ::: x is the Hulk.\nWakeUp(x) ::: x wakes up.\nBreakBridge(x) ::: x breaks a bridge.\nGod(x) ::: x is a god.\nThor(x) ::: x is Thor.\nPremises:\nSuperhero(peterParker) ⊕ Civilian(peterParker) ::: Peter Parker is a either a superhero or a civilian.\nDestroyer(hulk) ∧ WakeUp(hulk) → BreakBridge(hulk) ::: The Hulk is a destroyer. The Hulk wakes up when he is angry. If the Hulk wakes up, then he will break a bridge.\nGod(thor) ∧ BreakBridge(thor) → WearUniform(peterParker) ::: Thor is a god. Thor will break a bridge when he is happy. A god is not a destroyer and a destroyer is not a god.\nConclusion:\nWearUniform(peterParker) ::: If Thor is happy, then Peter Parker wears a uniform.\n------"
    ]
  },
  {
    "id": "FOLIO_train_621",
    "context": "Peter Parker is a either a superhero or a civilian. The Hulk is a destroyer. The Hulk wakes up when he is angry. If the Hulk wakes up, then he will break a bridge. Thor is a god. Thor will break a bridge when he is happy. A god is not a destroyer and a destroyer is not a god. Peter Parker wears a uniform when he is a superhero. Peter Parker is not a civilian if and only if a destroyer is breaking a bridge. If Thor is happy, the Hulk is angry.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Thor is not happy, then no bridge will be broken.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSuperhero(x) ::: x is a superhero.\nCivilian(x) ::: x is a civilian.\nDestroyer(x) ::: x is a destroyer.\nHulk(x) ::: x is the Hulk.\nWakeUp(x) ::: x wakes up.\nBreakBridge(x) ::: x breaks a bridge.\nGod(x) ::: x is a god.\nThor(x) ::: x is Thor.\nPremises:\nSuperhero(peter) ⊕ Civilian(peter) ::: Peter Parker is a either a superhero or a civilian.\nDestroyer(hulk) ∧ WakeUp(hulk) ∧ BreakBridge(hulk) ::: The Hulk is a destroyer. The Hulk wakes up when he is angry. If the Hulk wakes up, then he will break a bridge.\nGod(thor) ∧ BreakBridge(thor) ::: Thor is a god. Thor will break a bridge when he is happy.\n¬(Destroyer(x) ∧ God(x)) ∧ (Destroyer(x) ⊕ God(x)) ::: A god is not a destroyer and a destroyer is not a god.\nUniform(x) ::: x wears a uniform.\nSuperhero"
    ]
  },
  {
    "id": "FOLIO_train_622",
    "context": "Diethylcarbamazine is a medication discovered in the year 1947. Diethylcarbamazine can be used to treat river blindness. The only preferred treatment for river blindness is ivermectin. Diethylcarbamazine is not ivermectin.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Diethylcarbamazine is not preferred for the treatment of river blindness.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nDiscovered(x, y) ::: x is discovered in year y.\nMedication(x) ::: x is a medication.\nTreat(x, y) ::: x is used to treat y.\nPreferred(x, y) ::: x is the preferred treatment for y.\nPremises:\nDiscovered(diethylcarbamazine, year1947) ::: Diethylcarbamazine is a medication discovered in the year 1947.\nTreat(diethylcarbamazine, riverBlindness) ::: Diethylcarbamazine can be used to treat river blindness.\nPreferred(ivermectin, riverBlindness) ::: The only preferred treatment for river blindness is ivermectin.\nConclusion:\n¬Preferred(diethylcarbamazine, riverBlindness) ::: Diethylcarbamazine is not preferred for the treatment of river blindness.\n------\nProblem:\nThe only preferred treatment for river blindness is ivermectin. Diethylcarbamazine is not ivermectin. Diethylcarbamazine can be used to treat river blindness.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Diethylcarbamazine is not a medication"
    ]
  },
  {
    "id": "FOLIO_train_623",
    "context": "Diethylcarbamazine is a medication discovered in the year 1947. Diethylcarbamazine can be used to treat river blindness. The only preferred treatment for river blindness is ivermectin. Diethylcarbamazine is not ivermectin.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Diethylcarbamazine was often used to treat river blindness.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nDiscover(x, y) ::: x is discovered in year y.\nMedication(x) ::: x is a medication.\nTreat(x, y) ::: x is used to treat y.\nPreferred(x, y) ::: x is the preferred treatment for y.\nNot(x, y) ::: x is not y.\nPremises:\nDiscover(diethylcarbamazine, year1947) ::: Diethylcarbamazine is a medication discovered in the year 1947.\nTreat(diethylcarbamazine, riverBlindness) ::: Diethylcarbamazine can be used to treat river blindness.\nPreferred(ivermectin, riverBlindness) ::: The only preferred treatment for river blindness is ivermectin.\nNot(diethylcarbamazine, ivermectin) ::: Diethylcarbamazine is not ivermectin.\nConclusion:\nTreat(diethylcarbamazine, riverBlindness) ::: Diethylcarbamazine was often used to treat river blindness.\n------\nProblem:\nThe only preferred treatment for river blindness is ivermectin. Diethylcarbamazine is not ivermectin. Diethylcarbam"
    ]
  },
  {
    "id": "FOLIO_train_624",
    "context": "Diethylcarbamazine is a medication discovered in the year 1947. Diethylcarbamazine can be used to treat river blindness. The only preferred treatment for river blindness is ivermectin. Diethylcarbamazine is not ivermectin.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Diethylcarbamazine is used in the treatment of filariasis.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nDiscovered(x, y) ::: x is discovered in year y.\nMedication(x) ::: x is a medication.\nUsed(x, y) ::: x is used in the treatment of y.\nPreferred(x, y) ::: x is the preferred treatment of y.\nTreat(x, y) ::: x is used to treat y.\nPremises:\nDiscovered(diethylcarbamazine, year1947) ::: Diethylcarbamazine is a medication discovered in the year 1947.\nUsed(diethylcarbamazine, riverBlindness) ::: Diethylcarbamazine can be used to treat river blindness.\nPreferred(ivermectin, riverBlindness) ::: The only preferred treatment for river blindness is ivermectin.\n¬Treat(diethylcarbamazine, riverBlindness) ::: Diethylcarbamazine is not ivermectin.\nConclusion:\nUsed(diethylcarbamazine, filariasis) ::: Diethylcarbamazine is used in the treatment of filariasis.\n------\nProblem:\nThe only preferred treatment for river blindness is ivermectin. Diethylcarbamazine is not ivermectin"
    ]
  },
  {
    "id": "FOLIO_train_625",
    "context": "All univariate analyses use a generalized linear model. All multivoxel (pattern) analyses are implementing machine learning algorithms. All implementing machine learning algorithms are to learn and classify multivariate data. The Latent Dirichlet allocation model uses a generalized linear model or a univariate analysis. If the Latent Dirichlet allocation model does not learn and classify multivariate data, then the Latent Dirichlet allocation model uses a generalized linear model and a multivoxel (pattern) analysis.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Latent Dirichlet allocation model is implementing machine learning algorithms.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nUnivariateAnalysis(x) ::: x is a univariate analysis.\nMultivoxel(x) ::: x is a multivoxel (pattern) analysis.\nImplementingMachineLearningAlgorithms(x) ::: x is implementing machine learning algorithms.\nLearnAndClassifyMultivariateData(x) ::: x learns and classifies multivariate data.\nGeneralizedLinearModel(x) ::: x is a generalized linear model.\nLatentDirichletAllocationModel(x) ::: x is a Latent Dirichlet allocation model.\nPremises:\n∀x (UnivariateAnalysis(x) → ImplementingMachineLearningAlgorithms(x)) ::: All univariate analyses use a generalized linear model.\n∀x (Multivoxel(x) → ImplementingMachineLearningAlgorithms(x)) ::: All multivoxel (pattern) analyses are implementing machine learning algorithms.\n∀x (ImplementingMachineLearningAlgorithms(x) → LearnAndClassifyMultivariateData(x)) ::: All implementing machine learning algorithms are to learn and classify multivariate data.\nLatentDirichletAllocationModel(latentDirichletAllocationModel) ∧ ¬LearnAndClassifyMultivariateData(latentDirichletAllocationModel) :"
    ]
  },
  {
    "id": "FOLIO_train_626",
    "context": "All univariate analyses use a generalized linear model. All multivoxel (pattern) analyses are implementing machine learning algorithms. All implementing machine learning algorithms are to learn and classify multivariate data. The Latent Dirichlet allocation model uses a generalized linear model or a univariate analysis. If the Latent Dirichlet allocation model does not learn and classify multivariate data, then the Latent Dirichlet allocation model uses a generalized linear model and a multivoxel (pattern) analysis.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Latent Dirichlet allocation model uses a generalized linear model and learns and classifies multivariate data.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nUnivariateAnalysis(x) ::: x is a univariate analysis.\nMultivoxel(x) ::: x is a multivoxel (pattern) analysis.\nImplementingMachineLearningAlgorithm(x) ::: x is an implementing machine learning algorithm.\nLearnAndClassifyMultivariateData(x) ::: x learns and classifies multivariate data.\nGeneralizedLinearModel(x) ::: x is a generalized linear model.\nLatentDirichletAllocationModel(x) ::: x is a Latent Dirichlet allocation model.\nPremises:\n∀x (UnivariateAnalysis(x) → Multivoxel(x)) ::: All univariate analyses use a generalized linear model.\n∀x (Multivoxel(x) → ImplementingMachineLearningAlgorithm(x)) ::: All multivoxel (pattern) analyses are implementing machine learning algorithms.\n∀x (ImplementingMachineLearningAlgorithm(x) → LearnAndClassifyMultivariateData(x)) ::: All implementing machine learning algorithms are to learn and classify multivariate data.\nLatentDirichletAllocationModel(latentDirichletAllocationModel) ∧ ¬LearnAndClassifyMultivariateData(latentDirichletAllocationModel) ::: The Latent"
    ]
  },
  {
    "id": "FOLIO_train_627",
    "context": "All univariate analyses use a generalized linear model. All multivoxel (pattern) analyses are implementing machine learning algorithms. All implementing machine learning algorithms are to learn and classify multivariate data. The Latent Dirichlet allocation model uses a generalized linear model or a univariate analysis. If the Latent Dirichlet allocation model does not learn and classify multivariate data, then the Latent Dirichlet allocation model uses a generalized linear model and a multivoxel (pattern) analysis.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Latent Dirichlet allocation model either uses a generalized linear model or learns and classifies multivariate data.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nUnivariateAnalysis(x) ::: x is a univariate analysis.\nMultivoxel(x) ::: x is a multivoxel (pattern) analysis.\nImplementingMachineLearningAlgorithm(x) ::: x is an implementing machine learning algorithm.\nLearnAndClassifyMultivariateData(x) ::: x learns and classifies multivariate data.\nGeneralizedLinearModel(x) ::: x is a generalized linear model.\nLatentDirichletAllocationModel(x) ::: x is a Latent Dirichlet allocation model.\nPremises:\n∀x (UnivariateAnalysis(x) → GeneralizedLinearModel(x)) ::: All univariate analyses use a generalized linear model.\n∀x (Multivoxel(x) → ImplementingMachineLearningAlgorithm(x)) ::: All multivoxel (pattern) analyses are implementing machine learning algorithms.\n∀x (ImplementingMachineLearningAlgorithm(x) → LearnAndClassifyMultivariateData(x)) ::: All implementing machine learning algorithms are to learn and classify multivariate data.\nLatentDirichletAllocationModel(latentDirichletAllocationModel) ∧ ¬LearnAndClassifyMultivariateData(latentDirichletAllocationModel) ::: The Latent"
    ]
  },
  {
    "id": "FOLIO_train_628",
    "context": "If something requires a medical diagnosis, then lab tests or imaging is required. All rare diseases require a medical diagnosis. If something is mild, then no lab tests or imaging is required. All blood cancers are rare diseases. All Leukemia is blood cancer. If bladder cancer is either both blood cancer and Leukemia or neither blood cancer nor Leukemia, then bladder cancer is Leukemia.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Bladder cancer is mild.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nRequires(x, y) ::: x requires y.\nMedicalDiagnosis(x) ::: x requires a medical diagnosis.\nLabTest(x) ::: x is a lab test.\nImaging(x) ::: x is imaging.\nMild(x) ::: x is mild.\nRareDisease(x) ::: x is a rare disease.\nBloodCancer(x) ::: x is blood cancer.\nLeukemia(x) ::: x is Leukemia.\nPremises:\n∀x (MedicalDiagnosis(x) → ∃y (Requires(x, y))) ::: If something requires a medical diagnosis, then lab tests or imaging is required.\n∀x (RareDisease(x) → MedicalDiagnosis(x)) ::: All rare diseases require a medical diagnosis.\n∀x (Mild(x) → ¬Requires(x, LabTest)) ::: If something is mild, then no lab tests or imaging is required.\n∀x (BloodCancer(x) → RareDisease(x)) ::: All blood cancers are rare diseases.\n∀x (Leukemia(x) → BloodCancer(x)) ::: All Leukemia is blood cancer.\n(BladderCancer(x)"
    ]
  },
  {
    "id": "FOLIO_train_629",
    "context": "If something requires a medical diagnosis, then lab tests or imaging is required. All rare diseases require a medical diagnosis. If something is mild, then no lab tests or imaging is required. All blood cancers are rare diseases. All Leukemia is blood cancer. If bladder cancer is either both blood cancer and Leukemia or neither blood cancer nor Leukemia, then bladder cancer is Leukemia.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Bladder cancer is Leukemia.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nRequires(x, y) ::: x requires y.\nMedicalDiagnosis(x) ::: x requires a medical diagnosis.\nLabTest(x) ::: x is a lab test.\nImaging(x) ::: x is imaging.\nMild(x) ::: x is mild.\nRareDisease(x) ::: x is a rare disease.\nBloodCancer(x) ::: x is blood cancer.\nLeukemia(x) ::: x is Leukemia.\nPremises:\n∀x (MedicalDiagnosis(x) → ∃y (Requires(x, y))) ::: If something requires a medical diagnosis, then lab tests or imaging is required.\n∀x (RareDisease(x) → MedicalDiagnosis(x)) ::: All rare diseases require a medical diagnosis.\n∀x (Mild(x) → ¬Requires(x, LabTest)) ::: If something is mild, then no lab tests or imaging is required.\n∀x (BloodCancer(x) → RareDisease(x)) ::: All blood cancers are rare diseases.\n∀x (Leukemia(x) → BloodCancer(x)) ::: All Leukemia is blood cancer.\n(BladderCancer(x)"
    ]
  },
  {
    "id": "FOLIO_train_630",
    "context": "If something requires a medical diagnosis, then lab tests or imaging is required. All rare diseases require a medical diagnosis. If something is mild, then no lab tests or imaging is required. All blood cancers are rare diseases. All Leukemia is blood cancer. If bladder cancer is either both blood cancer and Leukemia or neither blood cancer nor Leukemia, then bladder cancer is Leukemia.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Bladder cancer is either a rare disease or mild.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nRequires(x, y) ::: x requires y.\nMedicalDiagnosis(x) ::: x requires a medical diagnosis.\nLabTest(x) ::: x is a lab test.\nImaging(x) ::: x is imaging.\nMild(x) ::: x is mild.\nRareDisease(x) ::: x is a rare disease.\nBloodCancer(x) ::: x is blood cancer.\nLeukemia(x) ::: x is Leukemia.\nPremises:\n∀x (MedicalDiagnosis(x) → ∃y (Requires(x, y))) ::: If something requires a medical diagnosis, then lab tests or imaging is required.\n∀x (RareDisease(x) → MedicalDiagnosis(x)) ::: All rare diseases require a medical diagnosis.\n∀x (Mild(x) → ¬Requires(x, LabTest)) ::: If something is mild, then no lab tests or imaging is required.\n∀x (BloodCancer(x) → RareDisease(x)) ::: All blood cancers are rare diseases.\n∀x (Leukemia(x) → BloodCancer(x)) ::: All Leukemia is blood cancer.\n(BladderCancer(x) ⊕ (BladderCancer(x) ∧ Leukemia(x))) → Leukemia(x) ::: If bladder cancer is either both blood cancer and Leukemia or neither blood cancer nor Leukemia, then bladder cancer is Leukemia.\nConclusion:\nMild(bladderCancer) ⊕ (Mild(bladderCancer) ∧ RareDisease(bladderCancer)) ::: Bladder cancer is either a rare disease or mild.\n------"
    ]
  },
  {
    "id": "FOLIO_train_631",
    "context": "No precious metals aren't scarce. All non-rare earth metals are not scarce. Either non-rare earth metals or rare earth metals. All rare earth metals can be used for batteries. All rare earth metals are essential for electric vehicles. Lithium is neither a non-rare earth metal nor essential for electric vehicles.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Lithium is a rare earth metal.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nPreciousMetal(x) ::: x is a precious metal.\nNonRareEarthMetal(x) ::: x is a non-rare earth metal.\nRareEarthMetal(x) ::: x is a rare earth metal.\nScarce(x) ::: x is scarce.\nEssential(x, y) ::: x is essential for y.\nBattery(x) ::: x is a battery.\nElectricVehicle(x) ::: x is an electric vehicle.\nPremises:\n¬PreciousMetal(x) ∧ NonRareEarthMetal(x) ::: No precious metals aren't scarce.\n¬NonRareEarthMetal(x) ∧ RareEarthMetal(x) ::: All non-rare earth metals are not scarce.\nEither(x, y) ::: Either x or y.\nRareEarthMetal(x) ∧ Battery(x) ::: All rare earth metals can be used for batteries.\nRareEarthMetal(x) ∧ ElectricVehicle(x) ::: All rare earth metals are essential for electric vehicles.\n¬Lithium(x) ∧ Essential(x, electricVehicle) ::: Lithium is neither a non-rare earth metal nor essential for electric vehicles.\nConclusion:\nRareEarthMetal(lithium) ::: Lithium is a rare earth metal.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student"
    ]
  },
  {
    "id": "FOLIO_train_632",
    "context": "No precious metals aren't scarce. All non-rare earth metals are not scarce. Either non-rare earth metals or rare earth metals. All rare earth metals can be used for batteries. All rare earth metals are essential for electric vehicles. Lithium is neither a non-rare earth metal nor essential for electric vehicles.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Lithium is a precious metal and is used for batteries.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nPreciousMetal(x) ::: x is a precious metal.\nNonRareEarthMetal(x) ::: x is a non-rare earth metal.\nRareEarthMetal(x) ::: x is a rare earth metal.\nEssential(x, y) ::: x is essential for y.\nBattery(x) ::: x is a battery.\nElectricVehicle(x) ::: x is an electric vehicle.\nPremises:\n¬PreciousMetal(x) ∧ NonRareEarthMetal(x) ::: No precious metals aren't scarce.\n¬PreciousMetal(x) ∧ RareEarthMetal(x) ::: All non-rare earth metals are not scarce.\nRareEarthMetal(x) ∨ NonRareEarthMetal(x) ::: Either non-rare earth metals or rare earth metals.\nRareEarthMetal(x) ∧ Battery(x) ::: All rare earth metals can be used for batteries.\nRareEarthMetal(x) ∧ ElectricVehicle(x) ::: All rare earth metals are essential for electric vehicles.\n¬Lithium(x) ∧ Essential(x, electricVehicle) ::: Lithium is neither a non-rare earth metal nor essential for electric vehicles.\nConclusion:\nBattery(lithium) ∧ ElectricVehicle(lithium) ::: Lithium is a precious metal and is used for batteries.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina"
    ]
  },
  {
    "id": "FOLIO_train_633",
    "context": "No precious metals aren't scarce. All non-rare earth metals are not scarce. Either non-rare earth metals or rare earth metals. All rare earth metals can be used for batteries. All rare earth metals are essential for electric vehicles. Lithium is neither a non-rare earth metal nor essential for electric vehicles.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Lithium is not essential for electric vehicles or a precious metal, then Lithium is not a non-rare earth metal or usable for batteries.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nPreciousMetal(x) ::: x is a precious metal.\nNonRareEarthMetal(x) ::: x is a non-rare earth metal.\nRareEarthMetal(x) ::: x is a rare earth metal.\nUsableForBatteries(x) ::: x is usable for batteries.\nEssentialForElectricVehicles(x) ::: x is essential for electric vehicles.\nPremises:\n¬PreciousMetal(x) ⊕ NonRareEarthMetal(x) ::: No precious metals aren't scarce.\n¬NonRareEarthMetal(x) ⊕ RareEarthMetal(x) ::: All non-rare earth metals are not scarce.\nRareEarthMetal(x) ⊕ Either(x, y) ::: Either non-rare earth metals or rare earth metals.\nUsableForBatteries(x) ⊕ EssentialForElectricVehicles(x) ::: All rare earth metals can be used for batteries.\n¬EssentialForElectricVehicles(x) ⊕ EssentialForElectricVehicles(y) ::: All rare earth metals are essential for electric vehicles.\n¬PreciousMetal(lithium) ⊕ EssentialForElectricVehicles(lithium) ::: Lithium is neither a non-rare earth metal nor essential for electric vehicles.\nConclusion:\n¬(UsableForBatteries(lithium) ⊕ EssentialForElectricVehicles(lithium)) ::: If Lithium is not essential for electric vehicles or a precious metal, then Lithium is not a non-rare earth metal or usable for batteries.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People"
    ]
  },
  {
    "id": "FOLIO_train_634",
    "context": "If people own at least one pet, then they do not have tidy houses. If people grew up with childhood pets, then they own at least one pet. If people hire a maid or cleaning service, then they have tidy houses. If people live in the suburbs, then they have tidy houses. Jack either does not hire a maid or cleaning service or, if he does, then he does not own at least one pet.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jack lives in the suburbs.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nOwns(x, y) ::: x owns y.\nTidy(x) ::: x has a tidy house.\nGrewUp(x, y) ::: x grew up with y.\nHire(x, y) ::: x hires y.\nLive(x, y) ::: x lives in y.\nPremises:\n∀x (Owns(x, y) → ¬Tidy(x)) ::: If people own at least one pet, then they do not have tidy houses.\n∀x (GrewUp(x, y) → Owns(x, y)) ::: If people grew up with childhood pets, then they own at least one pet.\n∀x (Hire(x, y) → Tidy(x)) ::: If people hire a maid or cleaning service, then they have tidy houses.\n∀x (Live(x, y) → Tidy(x)) ::: If people live in the suburbs, then they have tidy houses.\n¬Hire(jack, y) ∧ ¬Owns(jack, y) ::: Jack either does not hire a maid or cleaning service or, if he does, then he does not own at least one pet.\nConclusion:\nLive(jack, suburbs) ::: Jack lives in the suburbs.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student,"
    ]
  },
  {
    "id": "FOLIO_train_635",
    "context": "If people own at least one pet, then they do not have tidy houses. If people grew up with childhood pets, then they own at least one pet. If people hire a maid or cleaning service, then they have tidy houses. If people live in the suburbs, then they have tidy houses. Jack either does not hire a maid or cleaning service or, if he does, then he does not own at least one pet.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jack does not live in the suburbs.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nOwns(x, y) ::: x owns y.\nTidy(x) ::: x has a tidy house.\nGrewUp(x, y) ::: x grew up with y.\nHire(x, y) ::: x hires y.\nLive(x, y) ::: x lives in y.\nPremises:\n∀x (Owns(x, y) → ¬Tidy(x)) ::: If people own at least one pet, then they do not have tidy houses.\n∀x (GrewUp(x, y) → Owns(x, y)) ::: If people grew up with childhood pets, then they own at least one pet.\n∀x (Hire(x, y) → Tidy(x)) ::: If people hire a maid or cleaning service, then they have tidy houses.\n∀x (Live(x, y) → Tidy(x)) ::: If people live in the suburbs, then they have tidy houses.\n¬Hire(jack, y) ∧ ¬Owns(jack, y) ::: Jack either does not hire a maid or cleaning service or, if he does, then he does not own at least one pet.\nConclusion:\nLive(jack, suburbs) ::: Jack lives in the suburbs.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student,"
    ]
  },
  {
    "id": "FOLIO_train_636",
    "context": "If people own at least one pet, then they do not have tidy houses. If people grew up with childhood pets, then they own at least one pet. If people hire a maid or cleaning service, then they have tidy houses. If people live in the suburbs, then they have tidy houses. Jack either does not hire a maid or cleaning service or, if he does, then he does not own at least one pet.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jack has a tidy house.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nOwns(x, y) ::: x owns y.\nTidy(x) ::: x has a tidy house.\nGrewUpWith(x, y) ::: x grew up with y.\nHire(x, y) ::: x hires y.\nLive(x, y) ::: x lives in y.\nPremises:\n∀x (Owns(x, y) → ¬Tidy(x)) ::: If people own at least one pet, then they do not have tidy houses.\n∀x (GrewUpWith(x, y) → Owns(x, y)) ::: If people grew up with childhood pets, then they own at least one pet.\n∀x (Hire(x, y) → Tidy(x)) ::: If people hire a maid or cleaning service, then they have tidy houses.\n∀x (Live(x, y) → Tidy(x)) ::: If people live in the suburbs, then they have tidy houses.\n¬Hire(jack, y) ∧ ¬Live(jack, y) ::: Jack either does not hire a maid or cleaning service or, if he does, then he does not own at least one pet.\nConclusion:\nTidy(jack) ::: Jack has a tidy house.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina"
    ]
  },
  {
    "id": "FOLIO_train_637",
    "context": "If people own at least one pet, then they do not have tidy houses. If people grew up with childhood pets, then they own at least one pet. If people hire a maid or cleaning service, then they have tidy houses. If people live in the suburbs, then they have tidy houses. Jack either does not hire a maid or cleaning service or, if he does, then he does not own at least one pet.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jack neither lives in the suburbs nor owns at least one pet.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nOwns(x, y) ::: x owns y.\nTidy(x) ::: x has a tidy house.\nGrewUp(x, y) ::: x grew up with y.\nHire(x, y) ::: x hires y.\nLive(x, y) ::: x lives in y.\nPremises:\n∀x (Owns(x, y) → ¬Tidy(x)) ::: If people own at least one pet, then they do not have tidy houses.\n∀x (GrewUp(x, y) → Owns(x, y)) ::: If people grew up with childhood pets, then they own at least one pet.\n∀x (Hire(x, y) → Tidy(x)) ::: If people hire a maid or cleaning service, then they have tidy houses.\n∀x (Live(x, y) → Tidy(x)) ::: If people live in the suburbs, then they have tidy houses.\n¬Hire(jack, y) ∧ ¬Live(jack, y) ::: Jack either does not hire a maid or cleaning service or, if he does, then he does not own at least one pet.\nConclusion:\n¬Live(jack, suburbs) ∧ ¬Owns(jack, pet) ::: Jack neither lives in the suburbs nor owns at least one pet.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug"
    ]
  },
  {
    "id": "FOLIO_train_638",
    "context": "If people own at least one pet, then they do not have tidy houses. If people grew up with childhood pets, then they own at least one pet. If people hire a maid or cleaning service, then they have tidy houses. If people live in the suburbs, then they have tidy houses. Jack either does not hire a maid or cleaning service or, if he does, then he does not own at least one pet.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jack grew up with childhood pets and lives in the suburbs.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nOwns(x, y) ::: x owns y.\nTidy(x) ::: x has a tidy house.\nChildhoodPet(x) ::: x grew up with childhood pets.\nHire(x, y) ::: x hires y.\nLive(x, y) ::: x lives in y.\nPremises:\n∀x (Owns(x, y) → ¬Tidy(x)) ::: If people own at least one pet, then they do not have tidy houses.\n∀x (ChildhoodPet(x) → Owns(x, y)) ::: If people grew up with childhood pets, then they own at least one pet.\n∀x (Hire(x, y) → Tidy(x)) ::: If people hire a maid or cleaning service, then they have tidy houses.\n∀x (Live(x, y) → Tidy(x)) ::: If people live in the suburbs, then they have tidy houses.\n¬Hire(jack, y) ∧ ¬Live(jack, y) ::: Jack either does not hire a maid or cleaning service or, if he does, then he does not own at least one pet.\nConclusion:\nLive(jack, suburbs) ∧ ChildhoodPet(jack) ::: Jack grew up with childhood pets and lives in the suburbs.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If R"
    ]
  },
  {
    "id": "FOLIO_train_639",
    "context": "A bottle is either standing upright or toppled over. The bottle is not upright.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The bottle is toppled over.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nStandingUpright(x) ::: x is standing upright.\nToppledOver(x) ::: x is toppled over.\nPremises:\n¬StandingUpright(bottle) ::: The bottle is not upright.\nConclusion:\nToppledOver(bottle) ::: The bottle is toppled over.\n------\nProblem:\nA bottle is either standing upright or toppled over. The bottle is not upright.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The bottle is standing upright.\n###\nPredicates:\nStandingUpright(x) ::: x is standing upright.\nToppledOver(x) ::: x is toppled over.\nPremises:\n¬StandingUpright(bottle) ::: The bottle is not upright.\nConclusion:\nToppledOver(bottle) ::: The bottle is toppled over.\n------\nProblem:\nA bottle is either standing upright or toppled over. The bottle is not upright.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The bottle is standing upright.\n###\nProblem:\nA bottle is either standing upright or toppled over. The bottle is not upright.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The bottle is standing upright.\n###\nProblem:\nA bottle is either standing upright or toppled over. The bottle is not upright.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The bottle is standing upr"
    ]
  },
  {
    "id": "FOLIO_train_640",
    "context": "If people eat cereal and milk every day for breakfast, then they have very busy morning schedules every day. All young children below the age of ten eat cereal and milk every day for breakfast. People are either young children below the age of ten or have a lot of commitments they voluntarily signed up for. If people have a lot of commitments they voluntarily signed up for, then they are hardworking individuals with high ambitions and goals for the future. If people are hardworking individuals with high ambitions and goals for the future, then they are not good at staying organized and motivated. John either is both a hardworking individual with high ambitions and goals for the future and has busy morning schedules every day, or he is neither a hardworking individual with high ambitions and goals for the future nor does he have a busy morning schedule every day.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? John is good at staying organized and motivated.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nEat(x, y) ::: x eats y.\nBreakfast(x, y) ::: x eats y for breakfast.\nYoung(x) ::: x is a young child below the age of ten.\nBusy(x) ::: x has a busy morning schedule every day.\nCommitment(x) ::: x is a commitment that x voluntarily signed up for.\nHardworking(x) ::: x is a hardworking individual.\nAmbitious(x) ::: x is an ambitious individual.\nGoal(x) ::: x is a goal for the future.\nOrganized(x) ::: x is organized.\nMotivated(x) ::: x is motivated.\nPremises:\n∀x (Eat(x, cereal) ∧ Eat(x, milk) → Breakfast(x, cereal ∧ milk)) ::: If people eat cereal and milk every day for breakfast, then they have very busy morning schedules every day.\n∀x (Young(x) ∧ Breakfast(x, cereal ∧ milk)) ::: All young children below the age of ten eat cereal and milk every day for breakfast.\n∀x (Commitment(x) → Hardworking(x)) ::: People are either young children below the age of ten or have a lot of commitments they voluntarily signed up for.\n∀x (Hardworking(x) → Ambitious(x)) ::: If people have a lot of commitments they voluntarily signed up for, then they are hardworking individuals with high ambitions and goals for the future.\n∃x (Hardworking(x) ∧ NotOrganized(x)) ::: If people are hardworking individuals with high ambitions and goals for the future, then they are not good at staying organized and motivated.\nConclusion:\nNotOrganized(john) ::: John is not good at staying organized and motivated.\n------"
    ]
  },
  {
    "id": "FOLIO_train_641",
    "context": "If people eat cereal and milk every day for breakfast, then they have very busy morning schedules every day. All young children below the age of ten eat cereal and milk every day for breakfast. People are either young children below the age of ten or have a lot of commitments they voluntarily signed up for. If people have a lot of commitments they voluntarily signed up for, then they are hardworking individuals with high ambitions and goals for the future. If people are hardworking individuals with high ambitions and goals for the future, then they are not good at staying organized and motivated. John either is both a hardworking individual with high ambitions and goals for the future and has busy morning schedules every day, or he is neither a hardworking individual with high ambitions and goals for the future nor does he have a busy morning schedule every day.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? John eats cereal and milk every day for breakfast.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nEats(x, y) ::: x eats y.\nHas(x, y) ::: x has y.\nYoung(x) ::: x is a young child below the age of ten.\nBusy(x) ::: x has a busy morning schedule every day.\nCommitment(x) ::: x is a commitment x voluntarily signed up for.\nHardworking(x) ::: x is a hardworking individual.\nAmbitious(x) ::: x is an ambitious individual.\nGoal(x) ::: x is a goal for the future.\nOrganized(x) ::: x is organized.\nMotivated(x) ::: x is motivated.\nPremises:\n∀x (Eats(x, cerealAndMilk) → Has(x, busyMorningSchedule)) ::: If people eat cereal and milk every day for breakfast, then they have very busy morning schedules every day.\n∀x (Young(x) → Eats(x, cerealAndMilk)) ::: All young children below the age of ten eat cereal and milk every day for breakfast.\n∀x (Hardworking(x) → Commitment(x)) ::: People are either young children below the age of ten or have a lot of commitments they voluntarily signed up for.\n∀x (Commitment(x) → Ambitious(x)) ::: If people have a lot of commitments they voluntarily signed up for, then they are hardworking individuals with high ambitions and goals for the future.\n∃x (Hardworking(x) ∧ NotOrganized(x)) ::: If people are hardworking individuals with high ambitions and goals for the future, then they are not good at staying organized and motivated.\nConclusion:\nEats(john, cerealAndMilk) ::: John eats cereal and milk every day for breakfast.\n------\nProblem:\nAll people who"
    ]
  },
  {
    "id": "FOLIO_train_642",
    "context": "If people eat cereal and milk every day for breakfast, then they have very busy morning schedules every day. All young children below the age of ten eat cereal and milk every day for breakfast. People are either young children below the age of ten or have a lot of commitments they voluntarily signed up for. If people have a lot of commitments they voluntarily signed up for, then they are hardworking individuals with high ambitions and goals for the future. If people are hardworking individuals with high ambitions and goals for the future, then they are not good at staying organized and motivated. John either is both a hardworking individual with high ambitions and goals for the future and has busy morning schedules every day, or he is neither a hardworking individual with high ambitions and goals for the future nor does he have a busy morning schedule every day.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? John is either a hardworking individual with high ambitions and goals for the future or is good at staying organized and motivated.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEat(x, y) ::: x eats y.\nBreakfast(x, y) ::: x eats y for breakfast.\nYoung(x) ::: x is a young child below the age of ten.\nBusy(x) ::: x has a busy morning schedule every day.\nCommitment(x) ::: x is a commitment x voluntarily signed up for.\nHardworking(x) ::: x is a hardworking individual.\nAmbitious(x) ::: x is an ambitious individual.\nGoal(x) ::: x is a goal for the future.\nOrganized(x) ::: x is organized.\nMotivated(x) ::: x is motivated.\nPremises:\n∀x (Eat(x, cereal) ∧ Eat(x, milk) → Breakfast(x, cereal ∧ milk)) ::: If people eat cereal and milk every day for breakfast, then they have very busy morning schedules every day.\n∀x (Young(x) ∧ Breakfast(x, cereal ∧ milk)) ::: All young children below the age of ten eat cereal and milk every day for breakfast.\n∀x (Hardworking(x) ∧ Ambitious(x) ∧ Goal(x)) → NotOrganized(x) ::: If people are hardworking individuals with high ambitions and goals for the future, then they are not good at staying organized and motivated.\nConclusion:\nHardworking(john) ∧ Ambitious(john) ∧ Goal(john) ::: John is a hardworking individual with high ambitions and goals for the future.\n¬(Busy(john) ∧ Breakfast(john, cereal ∧ milk)) ::: John is neither a hardworking individual with high ambitions and goals for the future nor does he have a busy morning schedule every day.\nNotOrganized(john)"
    ]
  },
  {
    "id": "FOLIO_train_643",
    "context": "Ableton has an office in Germany. Ableton has an office in the USA. USA and Germany are different countries. Any company that has offices in different countries is a multinational company. Ableton makes music software.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Ableton is a multinational company.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nAbleton(x) ::: x is Ableton.\nOffice(x, y) ::: x has an office in y.\nCountry(x) ::: x is a country.\nDifferent(x, y) ::: x is different from y.\nMultinational(x) ::: x is a multinational company.\nPremises:\nAbleton(ableton) ∧ Office(ableton, germany) ∧ Office(ableton, usa) ::: Ableton has an office in Germany. Ableton has an office in the USA.\nCountry(usa) ∧ Country(germany) ∧ Different(usa, germany) ::: USA and Germany are different countries.\n∀x (Office(x, y) ∧ Office(x, z) ∧ Different(y, z) → Multinational(x)) ::: Any company that has offices in different countries is a multinational company.\nConclusion:\nMultinational(ableton) ::: Ableton is a multinational company.\n------\nProblem:\nAlice is a student. Bob is a student. Bob is a friend of Alice. Bob is a friend of Carol. Carol is a friend of Alice.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Bob is a friend of Carol.\n###\nPredicates:\nStudent(x) ::: x is a student.\nFriend(x, y) ::: x is a friend of y.\nPremises:\nStudent(alice) ∧ Student(bob) ∧ Friend(bob, alice) ∧ Friend(carol, alice) ::: Alice is a student. Bob is a student. Bob is a friend of Alice. Bob is a friend of Carol. Carol is a friend of Alice.\nConclusion:\nFriend(bob, carol) ::: Bob is a friend of Carol.\n------\nProblem:\nAlice is a student"
    ]
  },
  {
    "id": "FOLIO_train_644",
    "context": "Ableton has an office in Germany. Ableton has an office in the USA. USA and Germany are different countries. Any company that has offices in different countries is a multinational company. Ableton makes music software.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Ableton makes AI software.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nAbleton(x) ::: x is Ableton.\nOffice(x, y) ::: x has an office in y.\nCountry(x) ::: x is a country.\nDifferent(x, y) ::: x is different from y.\nMultinational(x) ::: x is a multinational company.\nPremises:\nAbleton(ableton) ∧ Office(ableton, germany) ∧ Office(ableton, usa) ::: Ableton has an office in Germany. Ableton has an office in the USA.\nCountry(usa) ∧ Country(germany) ∧ Different(usa, germany) ::: USA and Germany are different countries.\n∀x (Office(x, y) ∧ Office(x, z) ∧ Different(y, z) → Multinational(x)) ::: Any company that has offices in different countries is a multinational company.\nConclusion:\nMultinational(ableton) ::: Ableton is a multinational company.\n------\nProblem:\nAlice is a student. Bob is a student. Bob is a teacher. Bob is a student. Bob is a teacher. Bob is a student. Bob is a teacher. Bob is a student. Bob is a teacher. Bob is a student. Bob is a teacher. Bob is a student. Bob is a teacher. Bob is a student. Bob is a teacher. Bob is a student. Bob is a teacher. Bob is a student. Bob is a teacher. Bob is a student. Bob is a teacher. Bob is a student. Bob is a teacher. Bob is a student. Bob is a teacher. Bob is a student. Bob is a teacher. Bob is a student. Bob is a teacher. Bob is a student. Bob is a teacher. Bob is a student. Bob is a teacher. Bob is a student. Bob is a teacher. Bob is a student. Bob is a teacher. Bob is a student. Bob is a teacher. Bob is a student. Bob is"
    ]
  },
  {
    "id": "FOLIO_train_645",
    "context": "Ableton has an office in Germany. Ableton has an office in the USA. USA and Germany are different countries. Any company that has offices in different countries is a multinational company. Ableton makes music software.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Ableton does not have an office in Germany.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nAbleton(x) ::: x is Ableton.\nOffice(x, y) ::: x has an office in y.\nCountry(x) ::: x is a country.\nDifferent(x, y) ::: x is different from y.\nMultinational(x) ::: x is a multinational company.\nPremises:\nAbleton(ableton) ∧ Office(ableton, germany) ∧ Office(ableton, usa) ::: Ableton has an office in Germany. Ableton has an office in the USA.\nCountry(usa) ∧ Country(germany) ∧ Different(usa, germany) ::: USA and Germany are different countries.\n∀x (Office(x, y) ∧ Office(x, z) ∧ Different(y, z) → Multinational(x)) ::: Any company that has offices in different countries is a multinational company.\nConclusion:\n¬Office(ableton, germany) ::: Ableton does not have an office in Germany.\n------\nProblem:\nAlice is a student. Bob is a student. Bob is a teacher. Bob is a student. Bob is a teacher. Bob is a student. Bob is a teacher. Bob is a student. Bob is a teacher. Bob is a student. Bob is a teacher. Bob is a student. Bob is a teacher. Bob is a student. Bob is a teacher. Bob is a student. Bob is a teacher. Bob is a student. Bob is a teacher. Bob is a student. Bob is a teacher. Bob is a student. Bob is a teacher. Bob is a student. Bob is a teacher. Bob is a student. Bob is a teacher. Bob is a student. Bob is a teacher. Bob is a student. Bob is a teacher. Bob is a student. Bob is a teacher. Bob is a student. Bob is a teacher. Bob is a student. Bob is a teacher. Bob is a student. Bob is a teacher. Bob is a student"
    ]
  },
  {
    "id": "FOLIO_train_646",
    "context": "Every swimmer can go underwater. Everyone that eats fish they catch themselves is a swimmer. Every penguin eats fish they catch themselves. All nonflying birds in Antarctica are penguins. Fido is a penguin or a swimmer.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Fido eats fish they catch themselves.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nSwimmer(x) ::: x is a swimmer.\nEats(x, y) ::: x eats y.\nCatch(x, y) ::: x catches y.\nPenguin(x) ::: x is a penguin.\nNonflyingBird(x) ::: x is a nonflying bird.\nAntarctica(x) ::: x is in Antarctica.\nFlying(x) ::: x is flying.\nPremises:\n∀x (Swimmer(x) → CanGoUnderwater(x)) ::: Every swimmer can go underwater.\n∀x (Eats(x, y) → Catch(x, y)) ::: Everyone that eats fish they catch themselves is a swimmer.\n∀x (Penguin(x) → Eats(x, y)) ::: Every penguin eats fish they catch themselves.\n∀x (NonflyingBird(x) → Penguin(x)) ::: All nonflying birds in Antarctica are penguins.\nFido(fido) ::: fido is Fido.\nConclusion:\nEats(fido, fish) ⊕ Catch(fido, fish) ::: Fido eats fish they catch themselves.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information,"
    ]
  },
  {
    "id": "FOLIO_train_647",
    "context": "Every swimmer can go underwater. Everyone that eats fish they catch themselves is a swimmer. Every penguin eats fish they catch themselves. All nonflying birds in Antarctica are penguins. Fido is a penguin or a swimmer.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Fido is neither a non-flying bird nor can Fido go underwater.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nSwimmer(x) ::: x is a swimmer.\nEats(x, y) ::: x eats y.\nCatch(x, y) ::: x catches y.\nFish(y) ::: y is a fish.\nPenguin(x) ::: x is a penguin.\nNonFlyingBird(x) ::: x is a non-flying bird.\nAntarctica(x) ::: x is in Antarctica.\nPremises:\n∀x (Swimmer(x) → CanGoUnderwater(x)) ::: Every swimmer can go underwater.\n∀x (Eats(x, y) → Catch(x, y)) ::: Everyone that eats fish they catch themselves is a swimmer.\n∀x (Penguin(x) → Eats(x, y)) ::: Every penguin eats fish they catch themselves.\n∀x (NonFlyingBird(x) → Penguin(x)) ::: All nonflying birds in Antarctica are penguins.\nFido(fido) ::: fido is Fido.\nConclusion:\n¬CanGoUnderwater(fido) ∧ ¬Flying(fido) ::: Fido is neither a non-flying bird nor can Fido go underwater.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student"
    ]
  },
  {
    "id": "FOLIO_train_648",
    "context": "Every swimmer can go underwater. Everyone that eats fish they catch themselves is a swimmer. Every penguin eats fish they catch themselves. All nonflying birds in Antarctica are penguins. Fido is a penguin or a swimmer.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Fido can either go underwater or is a swimmer, then Fido is a nonflying bird in Antartica.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nSwimmer(x) ::: x is a swimmer.\nEats(x, y) ::: x eats y.\nCatch(x, y) ::: x catches y.\nFish(y) ::: y is a fish.\nPenguin(x) ::: x is a penguin.\nNonflyingBird(x) ::: x is a nonflying bird.\nAntarctica(x) ::: x is in Antarctica.\nPremises:\n∀x (Swimmer(x) → CanGoUnderwater(x)) ::: Every swimmer can go underwater.\n∀x (Eats(x, y) → Catch(x, y)) ::: Everyone that eats fish they catch themselves is a swimmer.\n∀x (Penguin(x) → Eats(x, y)) ::: Every penguin eats fish they catch themselves.\n∀x (NonflyingBird(x) → Penguin(x)) ::: All nonflying birds in Antarctica are penguins.\nSwimmer(fido) ∨ Penguin(fido) ::: Fido is a penguin or a swimmer.\nConclusion:\nCanGoUnderwater(fido) ∨ NonflyingBird(fido) ::: If Fido can either go underwater or is a swimmer, then Fido is a nonflying bird in Antartica.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a"
    ]
  },
  {
    "id": "FOLIO_train_649",
    "context": "All professors are teachers. All researchers are professors. No teachers are students. All people who study are students. Leon is not studying or a researcher. If Leon is not studying, then Leon is a teacher.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Leon is a professor.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nProfessor(x) ::: x is a professor.\nResearcher(x) ::: x is a researcher.\nTeacher(x) ::: x is a teacher.\nStudent(x) ::: x is a student.\nStudy(x) ::: x studies.\nPremises:\n∀x (Professor(x) → Teacher(x)) ::: All professors are teachers.\n∀x (Researcher(x) → Professor(x)) ::: All researchers are professors.\n∀x (Teacher(x) → ¬Student(x)) ::: No teachers are students.\n∀x (Student(x) → Study(x)) ::: All people who study are students.\n¬Study(leon) ∧ ¬Researcher(leon) ::: Leon is not studying or a researcher.\n¬Study(leon) → Teacher(leon) ::: If Leon is not studying, then Leon is a teacher.\nConclusion:\nTeacher(leon) ::: Leon is a professor.\n------\nProblem:\nAll people who are not students are professors. All people who are not professors are researchers. All people who are not researchers are teachers. All people who are not teachers are students. All people who are not students are professors.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? All people who are not students are professors.\n###\nPredicates:\nStudent(x) ::: x is a student.\nProfessor(x) ::: x is a professor.\nResearcher(x) ::: x is a researcher.\nTeacher(x) ::: x is a teacher.\nPremises:\n∀x (Student(x) → ¬Professor(x)) ::: All people who are not students are professors.\n∀x (Professor(x) → ¬Research"
    ]
  },
  {
    "id": "FOLIO_train_650",
    "context": "All professors are teachers. All researchers are professors. No teachers are students. All people who study are students. Leon is not studying or a researcher. If Leon is not studying, then Leon is a teacher.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Leon is neither a student nor a researcher.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nProfessor(x) ::: x is a professor.\nResearcher(x) ::: x is a researcher.\nTeacher(x) ::: x is a teacher.\nStudent(x) ::: x is a student.\nStudy(x) ::: x studies.\nPremises:\n∀x (Professor(x) → Teacher(x)) ::: All professors are teachers.\n∀x (Researcher(x) → Professor(x)) ::: All researchers are professors.\n∀x (Teacher(x) → ¬Student(x)) ::: No teachers are students.\n∀x (Student(x) → Study(x)) ::: All people who study are students.\n¬Study(leon) ∧ ¬Researcher(leon) ::: Leon is not studying or a researcher.\n¬Study(leon) → Teacher(leon) ::: If Leon is not studying, then Leon is a teacher.\nConclusion:\n¬Study(leon) ∧ ¬Researcher(leon) ∧ Teacher(leon) ::: Leon is neither a student nor a researcher.\n------"
    ]
  },
  {
    "id": "FOLIO_train_651",
    "context": "All professors are teachers. All researchers are professors. No teachers are students. All people who study are students. Leon is not studying or a researcher. If Leon is not studying, then Leon is a teacher.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Leon is not a researcher, then Leon is a student.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nProfessor(x) ::: x is a professor.\nResearcher(x) ::: x is a researcher.\nTeacher(x) ::: x is a teacher.\nStudent(x) ::: x is a student.\nStudy(x) ::: x studies.\nPremises:\n∀x (Professor(x) → Teacher(x)) ::: All professors are teachers.\n∀x (Researcher(x) → Professor(x)) ::: All researchers are professors.\n∀x (Teacher(x) → ¬Student(x)) ::: No teachers are students.\n∀x (Student(x) → Study(x)) ::: All people who study are students.\n¬Study(leon) ∧ ¬Researcher(leon) ::: Leon is not studying or a researcher.\n¬Study(leon) → Teacher(leon) ::: If Leon is not studying, then Leon is a teacher.\nConclusion:\nStudy(leon) ⊕ Researcher(leon) ::: If Leon is not a researcher, then Leon is a student.\n------\nProblem:\nAll people who are"
    ]
  },
  {
    "id": "FOLIO_train_652",
    "context": "A cutman is responsible for preventing and treating physical damage to a fighter. Cutmen appear in matches such as a boxing, kickboxing or a mixed martial arts bout. Cutmen typically handle swelling, nosebleeds and lacerations. Jack is a cutman.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? No cutmen appear in boxing matches.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nCutman(x) ::: x is a cutman.\nAppear(x, y) ::: x appears in y.\nBoxingMatch(x) ::: x is a boxing match.\nKickboxingMatch(x) ::: x is a kickboxing match.\nMixedMartialArtsMatch(x) ::: x is a mixed martial arts match.\nNosebleed(x) ::: x is a nosebleed.\nLaceration(x) ::: x is a laceration.\nSwelling(x) ::: x is swelling.\nPremises:\nCutman(jack) ::: Jack is a cutman.\nAppear(jack, boxingMatch) ::: Jack appears in a boxing match.\nAppear(jack, kickboxingMatch) ::: Jack appears in a kickboxing match.\nAppear(jack, mixedMartialArtsMatch) ::: Jack appears in a mixed martial arts match.\nConclusion:\n¬Appear(jack, boxingMatch) ::: No cutmen appear in boxing matches.\n------\nProblem:\nA person who is a member of the clergy is a clergyman. A person who"
    ]
  },
  {
    "id": "FOLIO_train_653",
    "context": "A cutman is responsible for preventing and treating physical damage to a fighter. Cutmen appear in matches such as a boxing, kickboxing or a mixed martial arts bout. Cutmen typically handle swelling, nosebleeds and lacerations. Jack is a cutman.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If someone is not a cutman, then they cannot handle nosebleeds.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nCutman(x) ::: x is a cutman.\nHandle(x, y) ::: x handles y.\nNosebleed(x) ::: x is a nosebleed.\nPremises:\nCutman(jack) ::: Jack is a cutman.\n∀x (Cutman(x) → Handle(x, nosebleed)) ::: If someone is a cutman, then they can handle nosebleeds.\n¬Cutman(x) → ¬Handle(x, nosebleed) ::: If someone is not a cutman, then they cannot handle nosebleeds.\nConclusion:\nHandle(jack, nosebleed) ::: Jack can handle nosebleeds.\n------\nProblem:\nA cutman is responsible for preventing and treating physical damage to a fighter. Cutmen appear in matches such as a boxing, kickboxing or a mixed martial arts bout. Cutmen typically handle swelling, nosebleeds and lacerations. Jack is a cutman.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? If someone is not a cutman, then they cannot handle nosebleeds.\n###\nProblem:"
    ]
  },
  {
    "id": "FOLIO_train_654",
    "context": "A cutman is responsible for preventing and treating physical damage to a fighter. Cutmen appear in matches such as a boxing, kickboxing or a mixed martial arts bout. Cutmen typically handle swelling, nosebleeds and lacerations. Jack is a cutman.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jack can treat physical damage.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nCutman(x) ::: x is a cutman.\nResponsible(x, y) ::: x is responsible for y.\nPrevent(x, y) ::: x prevents y.\nTreat(x, y) ::: x treats y.\nPhysicalDamage(x) ::: x is physical damage.\nHandle(x, y) ::: x handles y.\nSwelling(x) ::: x is swelling.\nNosebleed(x) ::: x is a nosebleed.\nLaceration(x) ::: x is a laceration.\nPremises:\nCutman(jack) ::: Jack is a cutman.\nResponsible(jack, preventingAndTreatingPhysicalDamage) ::: Jack is responsible for preventing and treating physical damage.\nPrevent(jack, swelling) ::: Jack prevents swelling.\nTreat(jack, nosebleed) ::: Jack treats nosebleed.\nTreat(jack, laceration) ::: Jack treats laceration.\nConclusion:\nTreat(jack, physicalDamage) ::: Jack can treat physical damage"
    ]
  },
  {
    "id": "FOLIO_train_655",
    "context": "The Mona Lisa is one of the world's best-known artworks. The Mona Lisa is a portrait painted by Leonardo da Vinci. Leonardo da Vinci was a scientist and painter. Painting genres are history, portrait, animal, landscape, and still life.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? One of the world's best-known artworks is painted by a scientist.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nWorld(x) ::: x is a world.\nBestKnown(x) ::: x is one of the world's best-known artworks.\nPortrait(x) ::: x is a portrait.\nAnimal(x) ::: x is an animal.\nLandscape(x) ::: x is a landscape.\nStillLife(x) ::: x is a still life.\nPainting(x) ::: x is a painting.\nGenre(x, y) ::: x is a painting of genre y.\nArtwork(x) ::: x is an artwork.\nScientist(x) ::: x is a scientist.\nPainter(x) ::: x is a painter.\nPremises:\nWorld(monaLisa) ∧ BestKnown(monaLisa) ::: The Mona Lisa is one of the world's best-known artworks.\nPortrait(monaLisa) ∧ Painting(monaLisa) ∧ Artwork(monaLisa) ::: The Mona Lisa is a portrait painted by Leonardo da Vinci.\nScientist(leonardoDaVinci) ∧ Painter(le"
    ]
  },
  {
    "id": "FOLIO_train_656",
    "context": "The Mona Lisa is one of the world's best-known artworks. The Mona Lisa is a portrait painted by Leonardo da Vinci. Leonardo da Vinci was a scientist and painter. Painting genres are history, portrait, animal, landscape, and still life.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Leonardo da Vinci has artworks in the landscape genre.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nArtwork(x) ::: x is an artwork.\nPortrait(x) ::: x is a portrait.\nHistory(x) ::: x is a history.\nAnimal(x) ::: x is an animal.\nLandscape(x) ::: x is a landscape.\nStillLife(x) ::: x is a still life.\nPaintingGenre(x) ::: x is a painting genre.\nPremises:\nArtwork(monaLisa) ∧ Portrait(monaLisa) ∧ PaintingGenre(monaLisa, portrait) ::: The Mona Lisa is a portrait painted by Leonardo da Vinci.\nArtwork(monaLisa) ∧ PaintingGenre(monaLisa, portrait) ::: The Mona Lisa is one of the world's best-known artworks.\nArtwork(monaLisa) ∧ PaintingGenre(monaLisa, portrait) ∧ PaintingGenre(monaLisa, history) ::: The Mona Lisa is a portrait painted by Leonardo da Vinci.\nArtwork(monaLisa) ∧ PaintingGenre(monaL"
    ]
  },
  {
    "id": "FOLIO_train_657",
    "context": "The Mona Lisa is one of the world's best-known artworks. The Mona Lisa is a portrait painted by Leonardo da Vinci. Leonardo da Vinci was a scientist and painter. Painting genres are history, portrait, animal, landscape, and still life.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? No world's best-known artworks are portraits.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nWorldsBestKnownArtwork(x) ::: x is a world's best-known artwork.\nPortrait(x) ::: x is a portrait.\nAnimal(x) ::: x is an animal.\nLandscape(x) ::: x is a landscape.\nStillLife(x) ::: x is a still life.\nPaintingGenre(x) ::: x is a painting genre.\nPremises:\nWorldsBestKnownArtwork(monaLisa) ∧ Portrait(monaLisa) ::: The Mona Lisa is one of the world's best-known artworks. The Mona Lisa is a portrait painted by Leonardo da Vinci.\n∀x (Portrait(x) → PaintingGenre(x)) ::: Any portrait is a painting genre.\n∃x (PaintingGenre(x) ∧ Animal(x)) ::: Some painting genres are animals.\n∃x (PaintingGenre(x) ∧ Landscape(x)) ::: Some painting genres are landscapes.\n∃x (PaintingGenre(x) ∧ StillLife(x)) ::: Some painting genres are still lives"
    ]
  },
  {
    "id": "FOLIO_train_658",
    "context": "No professional tennis umpires are professional tennis players. If you are a World Tour player, then you are a professional tennis player. All Grand Slam champions are World Tour players. All Grand Slam umpires are professional tennis umpires. Nadal is a World Tour player or a Grand Slam champion",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Nadal is a Grand Slam umpire.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nProfessionalTennisUmpire(x) ::: x is a professional tennis umpire.\nProfessionalTennisPlayer(x) ::: x is a professional tennis player.\nWorldTourPlayer(x) ::: x is a World Tour player.\nGrandSlamChampion(x) ::: x is a Grand Slam champion.\nGrandSlamUmpire(x) ::: x is a Grand Slam umpire.\nPremises:\n¬ProfessionalTennisUmpire(x) ∧ ProfessionalTennisPlayer(x) ::: No professional tennis umpires are professional tennis players.\nWorldTourPlayer(x) ⇒ ProfessionalTennisPlayer(x) ::: If you are a World Tour player, then you are a professional tennis player.\nGrandSlamChampion(x) ⇒ WorldTourPlayer(x) ::: All Grand Slam champions are World Tour players.\nGrandSlamUmpire(x) ⇒ ProfessionalTennisUmpire(x) ::: All Grand Slam umpires are professional tennis umpires.\nNadal(x) ∧ (WorldTourPlayer(x) ∨ GrandSlamChampion(x)) :"
    ]
  },
  {
    "id": "FOLIO_train_659",
    "context": "No professional tennis umpires are professional tennis players. If you are a World Tour player, then you are a professional tennis player. All Grand Slam champions are World Tour players. All Grand Slam umpires are professional tennis umpires. Nadal is a World Tour player or a Grand Slam champion",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Nadal is not a Grand Slam umpire.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nProfessionalTennisUmpire(x) ::: x is a professional tennis umpire.\nProfessionalTennisPlayer(x) ::: x is a professional tennis player.\nWorldTourPlayer(x) ::: x is a World Tour player.\nGrandSlamChampion(x) ::: x is a Grand Slam champion.\nGrandSlamUmpire(x) ::: x is a Grand Slam umpire.\nPremises:\n¬∀x (ProfessionalTennisUmpire(x) ∧ ProfessionalTennisPlayer(x)) ::: No professional tennis umpires are professional tennis players.\n∀x (WorldTourPlayer(x) → ProfessionalTennisPlayer(x)) ::: If you are a World Tour player, then you are a professional tennis player.\n∀x (GrandSlamChampion(x) → WorldTourPlayer(x)) ::: All Grand Slam champions are World Tour players.\n∀x (GrandSlamUmpire(x) → ProfessionalTennisUmpire(x)) ::: All Grand Slam umpires are professional tennis umpires.\nConclusion:\n¬GrandSlamUmpire(nadal) :"
    ]
  },
  {
    "id": "FOLIO_train_660",
    "context": "No professional tennis umpires are professional tennis players. If you are a World Tour player, then you are a professional tennis player. All Grand Slam champions are World Tour players. All Grand Slam umpires are professional tennis umpires. Nadal is a World Tour player or a Grand Slam champion",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Nadal is a Grand Slam champion.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nProfessionalTennisUmpire(x) ::: x is a professional tennis umpire.\nProfessionalTennisPlayer(x) ::: x is a professional tennis player.\nWorldTourPlayer(x) ::: x is a World Tour player.\nGrandSlamChampion(x) ::: x is a Grand Slam champion.\nGrandSlamUmpire(x) ::: x is a Grand Slam umpire.\nPremises:\n¬ProfessionalTennisPlayer(x) ∧ ProfessionalTennisUmpire(x) ::: No professional tennis umpires are professional tennis players.\nWorldTourPlayer(x) ⇒ ProfessionalTennisPlayer(x) ::: If you are a World Tour player, then you are a professional tennis player.\nGrandSlamChampion(x) ⇒ WorldTourPlayer(x) ::: All Grand Slam champions are World Tour players.\nGrandSlamUmpire(x) ⇒ ProfessionalTennisUmpire(x) ::: All Grand Slam umpires are professional tennis umpires.\nNadal(x) ∧ (WorldTourPlayer(x) ∨ GrandSlamChampion(x)) ::: Nadal is a World Tour player or a Grand Slam champion.\nConclusion:\nGrandSlamChampion(x) ::: Nadal is a Grand Slam champion.\n------"
    ]
  },
  {
    "id": "FOLIO_train_661",
    "context": "No professional tennis umpires are professional tennis players. If you are a World Tour player, then you are a professional tennis player. All Grand Slam champions are World Tour players. All Grand Slam umpires are professional tennis umpires. Nadal is a World Tour player or a Grand Slam champion",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Nadal is neither a Grand Slam umpire nor a professional tennis umpire.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nProfessionalTennisUmpire(x) ::: x is a professional tennis umpire.\nProfessionalTennisPlayer(x) ::: x is a professional tennis player.\nWorldTourPlayer(x) ::: x is a World Tour player.\nGrandSlamChampion(x) ::: x is a Grand Slam champion.\nGrandSlamUmpire(x) ::: x is a Grand Slam umpire.\nPremises:\n∀x (ProfessionalTennisUmpire(x) → ¬ProfessionalTennisPlayer(x)) ::: No professional tennis umpires are professional tennis players.\n∀x (WorldTourPlayer(x) → ProfessionalTennisPlayer(x)) ::: If you are a World Tour player, then you are a professional tennis player.\n∀x (GrandSlamChampion(x) → WorldTourPlayer(x)) ::: All Grand Slam champions are World Tour players.\n∀x (GrandSlamUmpire(x) → ProfessionalTennisUmpire(x)) ::: All Grand Slam umpires are professional tennis umpires.\nConclusion:\n¬ProfessionalTennisUmpire(nadal) ∨ GrandSlamUmpire(nadal) ::: Nadal is a World Tour player or a Grand Slam champion.\n------\nProblem:\nAll people who regularly drink coffee"
    ]
  },
  {
    "id": "FOLIO_train_662",
    "context": "No professional tennis umpires are professional tennis players. If you are a World Tour player, then you are a professional tennis player. All Grand Slam champions are World Tour players. All Grand Slam umpires are professional tennis umpires. Nadal is a World Tour player or a Grand Slam champion",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Nadal is a professional tennis umpire, then Nadal is a Grand Slam Umpire.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nProfessionalTennisUmpire(x) ::: x is a professional tennis umpire.\nProfessionalTennisPlayer(x) ::: x is a professional tennis player.\nWorldTourPlayer(x) ::: x is a World Tour player.\nGrandSlamChampion(x) ::: x is a Grand Slam champion.\nGrandSlamUmpire(x) ::: x is a Grand Slam umpire.\nPremises:\n∀x (ProfessionalTennisUmpire(x) → ¬ProfessionalTennisPlayer(x)) ::: No professional tennis umpires are professional tennis players.\n∀x (WorldTourPlayer(x) → ProfessionalTennisPlayer(x)) ::: If you are a World Tour player, then you are a professional tennis player.\n∀x (GrandSlamChampion(x) → WorldTourPlayer(x)) ::: All Grand Slam champions are World Tour players.\n∀x (GrandSlamUmpire(x) → ProfessionalTennisUmpire(x)) ::: All Grand Slam umpires are professional tennis umpires.\nConclusion:\nGrandSlamUmpire(nadal) ::: If Nadal is a professional tennis umpire, then Nadal is a Grand Slam Umpire.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caff"
    ]
  },
  {
    "id": "FOLIO_train_663",
    "context": "No professional tennis umpires are professional tennis players. If you are a World Tour player, then you are a professional tennis player. All Grand Slam champions are World Tour players. All Grand Slam umpires are professional tennis umpires. Nadal is a World Tour player or a Grand Slam champion",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Nadal is a Grand Slam umpire or a professional tennis player, then Nadal is a Grand Slam umpire.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProfessionalTennisPlayer(x) ::: x is a professional tennis player.\nProfessionalTennisUmpire(x) ::: x is a professional tennis umpire.\nWorldTourPlayer(x) ::: x is a World Tour player.\nGrandSlamChampion(x) ::: x is a Grand Slam champion.\nGrandSlamUmpire(x) ::: x is a Grand Slam umpire.\nPremises:\n¬∀x (ProfessionalTennisUmpire(x) ∧ ProfessionalTennisPlayer(x)) ::: No professional tennis umpires are professional tennis players.\n∀x (WorldTourPlayer(x) → ProfessionalTennisPlayer(x)) ::: If you are a World Tour player, then you are a professional tennis player.\n∀x (GrandSlamChampion(x) → WorldTourPlayer(x)) ::: All Grand Slam champions are World Tour players.\n∀x (GrandSlamUmpire(x) → ProfessionalTennisUmpire(x)) ::: All Grand Slam umpires are professional tennis umpires.\nConclusion:\nGrandSlamUmpire(nadal) ∨ ProfessionalTennisPlayer(nadal) ::: Nadal is a World Tour player or a Grand Slam champion.\nGrandSlamUmpire(nadal) ∨ ProfessionalTennisPlayer("
    ]
  },
  {
    "id": "FOLIO_train_664",
    "context": "Buisnesses are either sanctioned or unsanctioned. Sanctioned buisnesses are limited. Unsanctioned buisnesses are free. The Crude Oil Data Exchange is a buisness that isn't free.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Crude Oil Data Exchange is sanctioned.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "OilDataExchange(x) ::: x is a buisness that isn't free.\nSanctioned(x) ::: x is a sanctioned buisness.\nLimited(x) ::: x is a limited buisness.\nFree(x) ::: x is a free buisness.\nPremises:\nOilDataExchange(crudeOilDataExchange) ::: Crude Oil Data Exchange is a buisness that isn't free.\n¬Free(crudeOilDataExchange) ::: Crude Oil Data Exchange isn't free.\n¬Sanctioned(crudeOilDataExchange) ::: Crude Oil Data Exchange isn't sanctioned.\n¬Limited(crudeOilDataExchange) ::: Crude Oil Data Exchange isn't limited.\nConclusion:\nSanctioned(crudeOilDataExchange) ::: Crude Oil Data Exchange is sanctioned.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffe"
    ]
  },
  {
    "id": "FOLIO_train_665",
    "context": "Buisnesses are either sanctioned or unsanctioned. Sanctioned buisnesses are limited. Unsanctioned buisnesses are free. The Crude Oil Data Exchange is a buisness that isn't free.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Crude Oil Data Exchange is unsanctioned.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "OilDataExchange(x) ::: x is a buisness that isn't free.\nSanctioned(x) ::: x is a sanctioned buisness.\nUnsanctioned(x) ::: x is an unsanctioned buisness.\nLimited(x) ::: x is a limited buisness.\nPremises:\nOilDataExchange(crudeOilDataExchange) ::: Crude Oil Data Exchange is a buisness that isn't free.\n¬Sanctioned(crudeOilDataExchange) ::: Crude Oil Data Exchange is an unsanctioned buisness.\n¬Limited(crudeOilDataExchange) ::: Crude Oil Data Exchange is a free buisness.\nConclusion:\nUnsanctioned(crudeOilDataExchange) ::: Crude Oil Data Exchange is unsanctioned.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent"
    ]
  },
  {
    "id": "FOLIO_train_666",
    "context": "Buisnesses are either sanctioned or unsanctioned. Sanctioned buisnesses are limited. Unsanctioned buisnesses are free. The Crude Oil Data Exchange is a buisness that isn't free.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Crude Oil Data Exchange is limited.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "OilDataExchange(x) ::: x is a buisness that isn't free.\nSanctioned(x) ::: x is a sanctioned buisness.\nLimited(x) ::: x is limited.\nFree(x) ::: x is free.\nPremises:\nOilDataExchange(crudeOilDataExchange) ::: Crude Oil Data Exchange is a buisness that isn't free.\n∀x (Sanctioned(x) → Limited(x)) ::: Sanctioned buisnesses are limited.\n∀x (UnSanctioned(x) → Free(x)) ::: Unsanctioned buisnesses are free.\nConclusion:\nLimited(crudeOilDataExchange) ::: Crude Oil Data Exchange is limited.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student"
    ]
  },
  {
    "id": "FOLIO_train_667",
    "context": "When something is depressing, it is sad. V is depressing.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? V is invigorating",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nDepressing(x) ::: x is depressing.\nInvigorating(x) ::: x is invigorating.\nSad(x) ::: x is sad.\nPremises:\nDepressing(v) ::: When something is depressing, it is sad.\nSad(v) ::: V is depressing.\nConclusion:\nInvigorating(v) ::: V is invigorating.\n------\nProblem:\nThe following is a list of the top 100 most popular baby names in the United States in 2013.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The name Jacob is in the top 100 most popular baby names in the United States in 2013.\n###\nPredicates:\nTop100(x) ::: x is in the top 100 most popular baby names in the United States in 2013.\nName(x) ::: x is a name.\nJacob(x) ::: x is the name Jacob.\nPremises:\nTop100(jacob) ::: The name Jacob is in the top 100 most popular baby names in the United States in 2013.\nName(jacob) ::: Jacob is a name.\nConclusion:"
    ]
  },
  {
    "id": "FOLIO_train_668",
    "context": "Palstaves are a type of early bronze axe. Commonly found in northern, western and south-western Europe, palstaves are cast in moulds. John Evans is an archeologist who popularized the term \"palstave\". A paalstab is not an axe, but rather a digging shovel.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? John Evans Popularized the term paalstab.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nPalstave(x) ::: x is a palstave.\nAxe(x) ::: x is an axe.\nCast(x, y) ::: x is cast in mould y.\nDiggingShovel(x) ::: x is a digging shovel.\nArcheologist(x) ::: x is an archeologist.\nPopularize(x, y) ::: x popularizes y.\nPremises:\nPalstave(x) ∧ Cast(x, mould) ::: x is a palstave cast in mould.\nAxe(x) ∧ Cast(x, mould) ::: x is an axe cast in mould.\nDiggingShovel(x) ∧ Cast(x, mould) ::: x is a digging shovel cast in mould.\nArcheologist(john) ∧ Popularize(john, term) ::: John Evans is an archeologist who popularized the term term.\nConclusion:\nPopularize(john, palstave) ::: John Evans popularized the term palstave.\n------\nProblem:\nThe first known use of the word \"sandwich\" was in 1762 by John Montagu, 4th Earl of Sandwich. The sandwich was named after him because he was fond of eating meat between two slices of bread."
    ]
  },
  {
    "id": "FOLIO_train_669",
    "context": "Palstaves are a type of early bronze axe. Commonly found in northern, western and south-western Europe, palstaves are cast in moulds. John Evans is an archeologist who popularized the term \"palstave\". A paalstab is not an axe, but rather a digging shovel.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There is an axe that is commonly found in Western Europe.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nPalstave(x) ::: x is a palstave.\nAxe(x) ::: x is an axe.\nCast(x, y) ::: x is cast in mould y.\nFound(x, y) ::: x is found in location y.\nWesternEurope(x) ::: x is in Western Europe.\nNorthernEurope(x) ::: x is in Northern Europe.\nSouthWesternEurope(x) ::: x is in South Western Europe.\nArcheologist(x) ::: x is an archeologist.\nPopularize(x, y) ::: x popularizes y.\nTerm(x, y) ::: x is the term y.\nPaalstab(x) ::: x is a paalstab.\nDiggingShovel(x) ::: x is a digging shovel.\nPremises:\nPalstave(x) ∧ Cast(x, mould) ::: x is a palstave that is cast in mould.\n∀x (Axe(x) → Found(x, WesternEurope)) ::: All axes are found in Western Europe.\n∃x (Found(x, NorthernEurope) ∧ Found(x, SouthWesternEurope)) ::: There is an axe that is found in Northern Europe and South Western Europe.\n∃x (Archeologist(x) ∧ Popularize(x,"
    ]
  },
  {
    "id": "FOLIO_train_670",
    "context": "Palstaves are a type of early bronze axe. Commonly found in northern, western and south-western Europe, palstaves are cast in moulds. John Evans is an archeologist who popularized the term \"palstave\". A paalstab is not an axe, but rather a digging shovel.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Archeologists haven't popularized anything.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nPalstave(x) ::: x is a palstave.\nAxe(x) ::: x is an axe.\nCast(x, y) ::: x is cast in mould y.\nDiggingShovel(x) ::: x is a digging shovel.\nArcheologist(x) ::: x is an archeologist.\nPopularize(x, y) ::: x popularizes y.\nPremises:\nPalstave(x) ∧ Cast(x, mould) ::: x is a palstave cast in mould.\nAxe(x) ∧ Cast(x, mould) ::: x is an axe cast in mould.\nDiggingShovel(x) ∧ Cast(x, mould) ::: x is a digging shovel cast in mould.\nArcheologist(john) ∧ Popularize(john, term) ::: John Evans is an archeologist who popularized the term \"palstave\".\nConclusion:\nAxe(x) ∧ Cast(x, mould) ∧ Archeologist(x) ∧ Popularize(x, term) ::: Archeologists haven't popularized anything.\n------"
    ]
  },
  {
    "id": "FOLIO_train_671",
    "context": "Koei Tecmo is a Japanese video game and anime holding company. Holding companies hold several companies. Tecmo was disbanded in Japan, while Koei survived, but was renamed. Video game holding companies are holding companies.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Koei Tecmo holds another company.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nJapanese(x) ::: x is a Japanese person.\nHoldingCompany(x) ::: x is a holding company.\nVideoGameHoldingCompany(x) ::: x is a video game holding company.\nHold(x, y) ::: x holds y.\nDisband(x) ::: x is disbanded.\nRename(x, y) ::: x is renamed to y.\nPremises:\nJapanese(koeiTecmo) ∧ HoldingCompany(koeiTecmo) ∧ VideoGameHoldingCompany(koeiTecmo) ::: Koei Tecmo is a Japanese video game and anime holding company.\nHold(koeiTecmo, tecmo) ∧ Disband(tecmo) ∧ Rename(tecmo, koei) ::: Tecmo was disbanded in Japan, while Koei survived, but was renamed.\nHold(koei, anotherCompany) ::: Koei holds another company.\nConclusion:\nHold(koeiTecmo, anotherCompany) ::: Koei Tecmo holds another company.\n------\nProblem:\nThe 2016 Summer Olympics were held in Rio de Janeiro, Brazil. The 2"
    ]
  },
  {
    "id": "FOLIO_train_672",
    "context": "Koei Tecmo is a Japanese video game and anime holding company. Holding companies hold several companies. Tecmo was disbanded in Japan, while Koei survived, but was renamed. Video game holding companies are holding companies.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tecmo holds another company.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nJapanese(x) ::: x is a Japanese person.\nHoldingCompany(x) ::: x is a holding company.\nVideoGameHoldingCompany(x) ::: x is a video game holding company.\nHold(x, y) ::: x holds y.\nDisband(x) ::: x is disbanded.\nRename(x, y) ::: x is renamed to y.\nPremises:\nJapanese(koeiTecmo) ∧ HoldingCompany(koeiTecmo) ∧ VideoGameHoldingCompany(koeiTecmo) ::: Koei Tecmo is a Japanese video game and anime holding company.\nHold(koeiTecmo, tecmo) ::: Koei Tecmo holds Tecmo.\nDisband(tecmo) ::: Tecmo is disbanded.\nRename(koei, koeiTecmo) ::: Koei is renamed to Koei Tecmo.\nConclusion:\nHold(koeiTecmo, tecmo) ::: Tecmo holds another company.\n------\nProblem:\nThe 2016 Summer Olympics were held in Rio de Janeiro, Brazil. The 2016 Summer Paral"
    ]
  },
  {
    "id": "FOLIO_train_673",
    "context": "Koei Tecmo is a Japanese video game and anime holding company. Holding companies hold several companies. Tecmo was disbanded in Japan, while Koei survived, but was renamed. Video game holding companies are holding companies.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Koei Tecmo holds anime.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nJapanese(x) ::: x is a Japanese person.\nHoldingCompany(x) ::: x is a holding company.\nVideoGameHoldingCompany(x) ::: x is a video game holding company.\nHold(x, y) ::: x holds y.\nDisband(x) ::: x is disbanded.\nRename(x, y) ::: x is renamed to y.\nPremises:\nJapanese(koeiTecmo) ∧ HoldingCompany(koeiTecmo) ∧ VideoGameHoldingCompany(koeiTecmo) ::: Koei Tecmo is a Japanese video game and anime holding company.\nHold(koeiTecmo, anime) ::: Koei Tecmo holds anime.\nDisband(tecmo) ∧ Rename(koei, koeiTecmo) ::: Tecmo was disbanded in Japan, while Koei survived, but was renamed.\nConclusion:\nHold(koeiTecmo, anime) ::: Koei Tecmo holds anime.\n------\nProblem:\nThe 2016 Summer Olympics were held in Rio de Janeiro, Brazil. The 2016 Summer Par"
    ]
  },
  {
    "id": "FOLIO_train_674",
    "context": "The PlayStation EyeToy is a camera accessory for the Playstation 2. The PlayStation Eye is a camera accessory for the Playstation 3. The Playstation Camera is a camera accessory for the Playstation 4 and the Playstation 5. Camera accessory for the system is compatible with that system Only the Playstation Camera is compatible with more than one system.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Playstation Eye can be used with the Playstation 2 and the Playstation 3.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nPlaystation2(x) ::: x is a Playstation 2.\nPlaystation3(x) ::: x is a Playstation 3.\nPlaystation4(x) ::: x is a Playstation 4.\nPlaystation5(x) ::: x is a Playstation 5.\nCameraAccessory(x, y) ::: x is a camera accessory for y.\nCompatible(x, y) ::: x is compatible with y.\nPremises:\nPlaystation2(playstation2) ∧ CameraAccessory(playstationEye, playstation2) ::: The PlayStation Eye is a camera accessory for the Playstation 2.\nPlaystation3(playstation3) ∧ CameraAccessory(playstationEye, playstation3) ::: The PlayStation Eye is a camera accessory for the Playstation 3.\nPlaystation4(playstation4) ∧ CameraAccessory(playstationCamera, playstation4) ::: The Playstation Camera is a camera accessory for the Playstation 4.\nPlaystation5(playstation5) ∧ CameraAccessory(playstationCamera, playstation5) ::: The Playstation Camera is a camera accessory for the Playstation 5.\nPlaystation2"
    ]
  },
  {
    "id": "FOLIO_train_675",
    "context": "The PlayStation EyeToy is a camera accessory for the Playstation 2. The PlayStation Eye is a camera accessory for the Playstation 3. The Playstation Camera is a camera accessory for the Playstation 4 and the Playstation 5. Camera accessory for the system is compatible with that system Only the Playstation Camera is compatible with more than one system.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Playstation EyeToy is compatible with the Playstation 2.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nPlaystation2(x) ::: x is a Playstation 2.\nPlaystation3(x) ::: x is a Playstation 3.\nPlaystation4(x) ::: x is a Playstation 4.\nPlaystation5(x) ::: x is a Playstation 5.\nCameraAccessory(x, y) ::: x is a camera accessory for y.\nCompatible(x, y) ::: x is compatible with y.\nPremises:\nPlaystation2(playstation2) ∧ CameraAccessory(playstationEyeToy, playstation2) ::: The PlayStation EyeToy is a camera accessory for the Playstation 2.\nPlaystation3(playstation3) ∧ CameraAccessory(playstationEye, playstation3) ::: The PlayStation Eye is a camera accessory for the Playstation 3.\nPlaystation4(playstation4) ∧ CameraAccessory(playstationCamera, playstation4) ::: The Playstation Camera is a camera accessory for the Playstation 4.\nPlaystation5(playstation5) ∧ CameraAccessory(playstationCamera, playstation5) ::: The Playstation Camera is a camera accessory for the Playstation 5."
    ]
  },
  {
    "id": "FOLIO_train_676",
    "context": "The PlayStation EyeToy is a camera accessory for the Playstation 2. The PlayStation Eye is a camera accessory for the Playstation 3. The Playstation Camera is a camera accessory for the Playstation 4 and the Playstation 5. Camera accessory for the system is compatible with that system Only the Playstation Camera is compatible with more than one system.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Playstation Camera can be used for all Playstation consoles.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nPlaystation(x) ::: x is a Playstation console.\nCamera(x) ::: x is a camera.\nAccessory(x, y) ::: x is an accessory for y.\nCompatible(x, y) ::: x is compatible with y.\nPremises:\nPlaystationEyeToy(x) ∧ Camera(x) ∧ Accessory(x, playstation2) ::: The PlayStation EyeToy is a camera accessory for the Playstation 2.\nPlaystationEye(x) ∧ Camera(x) ∧ Accessory(x, playstation3) ::: The PlayStation Eye is a camera accessory for the Playstation 3.\nPlaystationCamera(x) ∧ Camera(x) ∧ Accessory(x, playstation4) ∧ Accessory(x, playstation5) ::: The Playstation Camera is a camera accessory for the Playstation 4 and the Playstation 5.\nCompatible(playstationCamera, playstation2) ⊕ Compatible(playstationCamera, playstation3) ⊕ Compatible(playstationCamera, playstation4) ⊕ Compatible(playstationCamera, playstation5) ::: Only the Playstation Camera is compatible with"
    ]
  },
  {
    "id": "FOLIO_train_677",
    "context": "Adam Buska is a European football player. If a European plays football, they play what Americans call soccer.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Adam Buska plays what Americans call soccer.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nEuropean(x) ::: x is a European.\nFootballPlayer(x) ::: x is a football player.\nSoccerPlayer(x) ::: x is a soccer player.\nPremises:\nEuropean(adam) ∧ FootballPlayer(adam) ::: Adam Buska is a European football player.\n∀x (FootballPlayer(x) → SoccerPlayer(x)) ::: If a European plays football, they play what Americans call soccer.\nConclusion:\nSoccerPlayer(adam) ::: Adam Buska plays what Americans call soccer.\n------\nProblem:\nA person who is a member of the National Academy of Sciences is a scientist. A scientist is a person who is a member of the National Academy of Sciences.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? A person who is a member of the National Academy of Sciences is a scientist.\n###\nPredicates:\nMemberOfNationalAcademyOfSciences(x) ::: x is a member of the National Academy of Sciences.\nScientist(x) ::: x is a scientist.\nPremises:\n∀x (Scientist(x) → MemberOfNationalAcademyOf"
    ]
  },
  {
    "id": "FOLIO_train_678",
    "context": "If the game has sold more than 1 million copies, then it is on the Best Seller list. All Games developed by Paradox Development Studio sold more than 1 million copies. Some games published before 2010 support the Linux OS system. All games on the Best Seller list are popular among young people. FIFA22 neither supports the Linux OS system nor is it popular among young people.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? FIFA21 is published before 2010",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nSold(x, y) ::: x sold y copies.\nBestSeller(x) ::: x is on the Best Seller list.\nDeveloped(x, y) ::: x was developed by y.\nPublished(x, y) ::: x was published in year y.\nSupports(x, y) ::: x supports y.\nPopular(x, y) ::: x is popular among y.\nPremises:\nSold(game, 1000000) ∧ BestSeller(game) ::: If the game has sold more than 1 million copies, then it is on the Best Seller list.\n∀x (Developed(x, ParadoxDevelopmentStudio) → Sold(x, 1000000)) ::: All Games developed by Paradox Development Studio sold more than 1 million copies.\n∃x (Published(x, year2010) ∧ Supports(x, LinuxOS)) ::: Some games published before 2010 support the Linux OS system.\n∀x (BestSeller(x) → Popular(x, youngPeople)) ::: All games on the Best Seller list are popular among young people.\n¬Supports(FIFA"
    ]
  },
  {
    "id": "FOLIO_train_679",
    "context": "If the game has sold more than 1 million copies, then it is on the Best Seller list. All Games developed by Paradox Development Studio sold more than 1 million copies. Some games published before 2010 support the Linux OS system. All games on the Best Seller list are popular among young people. FIFA22 neither supports the Linux OS system nor is it popular among young people.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? FIFA21 is published before 2010 and developed by Paradox Development Studio",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSold(x, y) ::: x sold y copies.\nBestSeller(x) ::: x is on the Best Seller list.\nDeveloped(x, y) ::: x is developed by y.\nPublished(x, y) ::: x is published in year y.\nSupports(x, y) ::: x supports y.\nPopular(x, y) ::: x is popular among y.\nPremises:\nSold(game, 1000000) ∧ BestSeller(game) ::: If the game has sold more than 1 million copies, then it is on the Best Seller list.\n∀x (Developed(x, ParadoxDevelopmentStudio) → Sold(x, 1000000)) ::: All Games developed by Paradox Development Studio sold more than 1 million copies.\n∃x (Published(x, year2010) ∧ Supports(x, LinuxOS)) ::: Some games published before 2010 support the Linux OS system.\n∀x (BestSeller(x) → Popular(x, youngPeople)) ::: All games on the Best Seller list are popular among young people.\n¬Supports(FIFA2"
    ]
  },
  {
    "id": "FOLIO_train_680",
    "context": "If the game has sold more than 1 million copies, then it is on the Best Seller list. All Games developed by Paradox Development Studio sold more than 1 million copies. Some games published before 2010 support the Linux OS system. All games on the Best Seller list are popular among young people. FIFA22 neither supports the Linux OS system nor is it popular among young people.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? if FIFA21 is either a game published before 2010 or developed by Paradox Development Studio, then it is either in the Best Seller list and sold more than 1 million copies; or not in the Best Seller list and hasn't sold more than 1 million copies.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSoldMoreThan1MillionCopies(x) ::: x sold more than 1 million copies.\nBestSellerList(x) ::: x is on the Best Seller list.\nPopularAmongYoungPeople(x) ::: x is popular among young people.\nSupportsLinuxOS(x) ::: x supports the Linux OS system.\nDevelopedBy(x, y) ::: x is developed by y.\nPublishedBefore(x, y) ::: x is published before year y.\nPremises:\nSoldMoreThan1MillionCopies(x) → BestSellerList(x) ::: If the game has sold more than 1 million copies, then it is on the Best Seller list.\n∀x (DevelopedBy(x, ParadoxDevelopmentStudio) → SoldMoreThan1MillionCopies(x)) ::: All Games developed by Paradox Development Studio sold more than 1 million copies.\n∃x (PublishedBefore(x, year2010) ∧ SupportsLinuxOS(x)) ::: Some games published before 2010 support the Linux OS system.\nBestSellerList(x) → PopularAmongYoungPeople(x) ::: All games on the Best Seller list are popular among young people.\n¬BestSellerList(FIFA22) ∧ ¬PopularAmongYoungPeople(FIFA22) ::: FIFA22 neither supports the Linux OS system nor is it popular among young people.\nConclusion:\n(DevelopedBy(x, ParadoxDevelopmentStudio) ⊕ PublishedBefore(x, year2010)) → (BestSellerList(x) ⊕ SoldMoreThan1MillionCopies(x)) ::: if FIFA21 is either a game published before 2010 or developed by Paradox Development Studio, then it is either in the Best Seller list and sold more than 1 million copies; or not in the Best Seller list and hasn't sold more than 1 million copies.\n------"
    ]
  },
  {
    "id": "FOLIO_train_681",
    "context": "China is one of BRICS and its economy is emerging. India is one of BRICS and its economy is emerging. All people from China speak Chinese. All people from India speak Hindi or English. There is an Indian.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? All people from BRICS neither speak Hindi nor speak English.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nChina(x) ::: x is from China.\nIndia(x) ::: x is from India.\nBRICS(x) ::: x is one of BRICS.\nEmerging(x) ::: x is emerging.\nSpeak(x, y) ::: x speaks y.\nHindi(x) ::: x is Hindi.\nEnglish(x) ::: x is English.\nPremises:\nChina(china) ∧ India(india) ∧ BRICS(china) ∧ BRICS(india) ∧ Emerging(china) ∧ Emerging(india) ::: China is one of BRICS and its economy is emerging. India is one of BRICS and its economy is emerging.\n∀x (China(x) → Speak(x, Chinese)) ::: All people from China speak Chinese.\n∀x (India(x) → Speak(x, Hindi) ∨ Speak(x, English)) ::: All people from India speak Hindi or English.\n∃x (India(x) ∧ Speak(x, English)) ::: There is an Indian.\nConclusion:\n¬Speak(x, Hindi) ∨ Speak(x, English) ::: All people from BRICS neither speak Hindi nor speak English.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement"
    ]
  },
  {
    "id": "FOLIO_train_682",
    "context": "China is one of BRICS and its economy is emerging. India is one of BRICS and its economy is emerging. All people from China speak Chinese. All people from India speak Hindi or English. There is an Indian.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? India's economy is not emerging.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nChina(x) ::: x is from China.\nIndia(x) ::: x is from India.\nBRICS(x) ::: x is one of BRICS.\nEmerging(x) ::: x is emerging.\nSpeak(x, y) ::: x speaks y.\nPremises:\nChina(china) ∧ BRICS(china) ∧ Emerging(china) ::: China is one of BRICS and its economy is emerging.\nIndia(india) ∧ BRICS(india) ∧ Emerging(india) ::: India is one of BRICS and its economy is emerging.\n∀x (China(x) → Speak(x, Chinese)) ::: All people from China speak Chinese.\n∀x (India(x) → Speak(x, Hindi) ∨ Speak(x, English)) ::: All people from India speak Hindi or English.\n∃x (India(x) ∧ Speak(x, English)) ::: There is an Indian.\nConclusion:\n¬Emerging(india) ::: India's economy is not emerging.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug"
    ]
  },
  {
    "id": "FOLIO_train_683",
    "context": "China is one of BRICS and its economy is emerging. India is one of BRICS and its economy is emerging. All people from China speak Chinese. All people from India speak Hindi or English. There is an Indian.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There is a person from BRICS speaking Hindi.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nBRICS(x) ::: x is a BRICS country.\nEmerging(x) ::: x is an emerging economy.\nChinese(x) ::: x is a Chinese person.\nHindi(x) ::: x is a Hindi person.\nEnglish(x) ::: x is an English person.\nIndian(x) ::: x is an Indian.\nPremises:\nBRICS(china) ∧ Emerging(china) ::: China is one of BRICS and its economy is emerging.\nBRICS(india) ∧ Emerging(india) ::: India is one of BRICS and its economy is emerging.\n∀x (Chinese(x) → Speak(x, Chinese)) ::: All people from China speak Chinese.\n∀x (Indian(x) → Speak(x, Hindi) ∨ Speak(x, English)) ::: All people from India speak Hindi or English.\n∃x (Indian(x) ∧ Speak(x, Hindi)) ::: There is an Indian.\nConclusion:\nSpeak(x, Hindi) ::: There is a person from BRICS speaking Hindi.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffe"
    ]
  },
  {
    "id": "FOLIO_train_684",
    "context": "Daveed Diggs is an actor and film producer. Daveed Diggs played two roles in the musical Hamilton. One of the actors from Hamilton won the best actor award. The actor playing Thomas Jefferson won the best actor award. Daveed Diggs played Thomas Jefferson. Musicals are not films.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Hamilton is a film.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nActor(x) ::: x is an actor.\nFilmProducer(x) ::: x is a film producer.\nMusical(x) ::: x is a musical.\nFilm(x) ::: x is a film.\nBestActor(x) ::: x is the best actor.\nPremises:\nActor(daveed) ∧ FilmProducer(daveed) ::: Daveed Diggs is an actor and film producer.\nMusical(hamilton) ∧ Actor(daveed, hamilton) ::: Daveed Diggs played two roles in the musical Hamilton.\nBestActor(actorFromHamilton) ∧ Actor(daveed, hamilton) ::: One of the actors from Hamilton won the best actor award.\nBestActor(actorPlayingThomasJefferson) ∧ Actor(daveed, hamilton) ::: The actor playing Thomas Jefferson won the best actor award.\nConclusion:\nFilm(hamilton) ::: Hamilton is a film.\n------\nProblem:\nThe following is a list of the top 100 movies of all time. The list is based on the number of votes each movie received from IMDb users. The list is sorted by the number of votes. The top 100 movies of all time are listed below.\n###\nPredicates:\nMovie(x) ::: x is a movie.\nTop100(x) ::: x is one of the top 100 movies of all time.\nVote(x, y) ::: x received y votes.\nPremises:\nMovie(starWars) ∧ Top100(starWars) ::: Star Wars is one of the top 100 movies of all time.\nMovie(theGodfather) ∧ Top100(theGodfather) ::: The Godfather is one of the top 100 movies of all time.\nMovie(theDarkKnight) ∧ Top100(theDarkKnight) ::: The Dark Knight is one"
    ]
  },
  {
    "id": "FOLIO_train_685",
    "context": "Daveed Diggs is an actor and film producer. Daveed Diggs played two roles in the musical Hamilton. One of the actors from Hamilton won the best actor award. The actor playing Thomas Jefferson won the best actor award. Daveed Diggs played Thomas Jefferson. Musicals are not films.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Daveed Diggs won the best actor award.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nActor(x) ::: x is an actor.\nFilmProducer(x) ::: x is a film producer.\nMusical(x) ::: x is a musical.\nFilm(x) ::: x is a film.\nBestActorAward(x) ::: x is the best actor award.\nPremises:\nActor(daveed) ∧ FilmProducer(daveed) ::: Daveed Diggs is an actor and film producer.\nMusical(hamilton) ∧ Actor(daveed, hamilton) ::: Daveed Diggs played two roles in the musical Hamilton.\nMusical(hamilton) ∧ Actor(bestActor, hamilton) ∧ BestActorAward(bestActor) ::: One of the actors from Hamilton won the best actor award.\nMusical(hamilton) ∧ Actor(daveed, hamilton) ∧ Actor(bestActor, hamilton) ∧ BestActorAward(bestActor) ∧ BestActorAward(daveed) ::: The actor playing Thomas Jefferson won the best actor award.\nConclusion:\nBestActorAward(daveed) ::: Daveed Diggs won the best actor award.\n------\nProblem:\nThe following is a list of the top 100 movies of all time. The list is based on the number of votes each movie received from IMDb users. The list is sorted by the number of votes. The top 100 movies of all time are listed below.\n1. The Shawshank Redemption (1994)\n2. The Godfather (1972)\n3. The Godfather: Part II (1974)\n4. The Dark Knight (2008)\n5. The Lord of the Rings: The Return of the King (2003)\n6. The Shawshank Redemption (1994)\n7. The Godfather: Part II (1974)\n8. The Dark Knight (2008)\n9."
    ]
  },
  {
    "id": "FOLIO_train_686",
    "context": "Daveed Diggs is an actor and film producer. Daveed Diggs played two roles in the musical Hamilton. One of the actors from Hamilton won the best actor award. The actor playing Thomas Jefferson won the best actor award. Daveed Diggs played Thomas Jefferson. Musicals are not films.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Hamilton won two awards.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nActor(x) ::: x is an actor.\nFilmProducer(x) ::: x is a film producer.\nMusical(x) ::: x is a musical.\nFilm(x) ::: x is a film.\nBestActor(x) ::: x won the best actor award.\nPremises:\nActor(daveed) ∧ FilmProducer(daveed) ::: Daveed Diggs is an actor and film producer.\nMusical(hamilton) ∧ Film(hamilton) ::: Hamilton is a musical and a film.\nMusical(hamilton) ∧ BestActor(hamilton) ::: Hamilton won the best actor award.\nMusical(hamilton) ∧ BestActor(hamilton) ∧ Actor(daveed) ∧ FilmProducer(daveed) ::: Hamilton won the best actor award and Daveed Diggs is an actor and film producer.\nConclusion:\nMusical(hamilton) ∧ BestActor(hamilton) ∧ Actor(daveed) ∧ FilmProducer(daveed) ::: Hamilton won two awards.\n------\nProblem:\nThe following is a list of the top 100 movies of all time. The list is based on the number of votes each movie received from IMDb users. The list is sorted by the number of votes. The top 100 movies of all time are listed below.\n1. The Shawshank Redemption (1994)\n2. The Godfather (1972)\n3. The Godfather: Part II (1974)\n4. The Dark Knight (2008)\n5. The Lord of the Rings: The Return of the King (2003)\n6. The Shawshank Redemption (1994)\n7. The Godfather: Part II (1974)\n8. The Dark Knight (2008)\n9. The Lord of the Rings: The Return of the King (2003)\n10. The Shawsh"
    ]
  },
  {
    "id": "FOLIO_train_687",
    "context": "Ernest Pohl was a Polish football player. A football player in the Polish First Division has scored over 180 goals. Ernest Pohl scored more than 180 goals in the Polish First Division. Górnik Zabrze's stadium was named after a soccer player from Ruda Śląska. Ernest Pohl is from Ruda Śląska.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Ernest Pohl has not scored more than 180 goals.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nPolish(x) ::: x is a Polish person.\nFootballPlayer(x) ::: x is a football player.\nFirstDivision(x) ::: x is a football player in the Polish First Division.\nScore(x, y) ::: x has scored y goals.\nMoreThan(x, y) ::: x is more than y.\nPremises:\nPolish(ernest) ∧ FootballPlayer(ernest) ∧ FirstDivision(ernest) ::: Ernest Pohl was a Polish football player.\n∀x (FirstDivision(x) → ∃y (Score(x, y) ∧ y > 180)) ::: A football player in the Polish First Division has scored over 180 goals.\nScore(ernest, 180) ::: Ernest Pohl scored more than 180 goals in the Polish First Division.\nPolish(ernest) ∧ RudaSlaska(ernest) ::: Ernest Pohl is from Ruda Śląska.\nConclusion:\n¬Score(ernest, 180) ::: Ernest Pohl has not scored more than 180 goals.\n------\nProblem:\nA person who is a member of the National Academy of Sciences is a scientist. A scientist who is a member of the National Academy of Sciences is a member of the National Academy of Sciences. A person who is a member of the National Academy of Sciences is a member of the National Academy of Sciences.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? A person who is a member of the National Academy of Sciences is a member of the National Academy of Sciences.\n###\nPredicates:\nMemberOf(x, y) ::: x is a member of y.\nScientist(x) ::: x is a scientist.\nNationalAcademyOfSciences(x) ::: x is a member of the National Academy of Sciences.\nPremises:\n∀x (Scientist(x) → MemberOf(x, NationalAcademyOfSciences)) :::"
    ]
  },
  {
    "id": "FOLIO_train_688",
    "context": "Ernest Pohl was a Polish football player. A football player in the Polish First Division has scored over 180 goals. Ernest Pohl scored more than 180 goals in the Polish First Division. Górnik Zabrze's stadium was named after a soccer player from Ruda Śląska. Ernest Pohl is from Ruda Śląska.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Górnik Zabrze's stadium was named after Ernest Pohl.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nPolish(x) ::: x is a Polish person.\nFootballPlayer(x) ::: x is a football player.\nFirstDivision(x) ::: x is a football player in the Polish First Division.\nScore(x, y) ::: x scored y goals.\nMoreThan(x, y) ::: x is more than y.\nPremises:\nPolish(ernest) ∧ FootballPlayer(ernest) ∧ FirstDivision(ernest) ∧ Score(ernest, 180) ::: Ernest Pohl was a Polish football player. A football player in the Polish First Division has scored over 180 goals.\nScore(ernest, moreThan180) ::: Ernest Pohl scored more than 180 goals in the Polish First Division.\n∃x (Polish(x) ∧ FootballPlayer(x) ∧ FirstDivision(x) ∧ Score(x, 180) ∧ MoreThan(x, 180)) ::: Górnik Zabrze's stadium was named after a soccer player from Ruda Śląska.\nConclusion:\nGórnik Zabrze's stadium was named after Ernest Pohl ::: Górnik Zabrze's stadium was named after Ernest Pohl.\n------\nProblem:\nA person who is a member of the National Academy of Sciences is a scientist. A scientist who is a member of the National Academy of Sciences is a member of the National Academy of Sciences. A person who is a member of the National Academy of Sciences is a member of the National Academy of Sciences.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? A person who is a member of the National Academy of Sciences is a member of the National Academy of Sciences.\n###\nPredicates:\nMemberOf(x, y) ::: x is a member of y.\nScientist(x) ::: x is a scientist.\nNationalAcademyOfSciences(x) ::: x is a member of the National"
    ]
  },
  {
    "id": "FOLIO_train_689",
    "context": "Ann J. Land was a member of the Philadelphia City Council and was also a member of the Democratic Party. Ann J. Land ran unopposed for the Philadephia City Council in 1980. People who run unopposed for the Philadelphia City Council are elected to the positions they run for in the same year. Michael Nutter was a political challenger. Ann J. Land defeated Michael Nutter and ran for the Philadelphia City Council in 1987.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Ann J. Land was elected to the Philadelphia City Council in 1980.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nPhiladelphiaCityCouncil(x) ::: x is a member of the Philadelphia City Council.\nDemocraticParty(x) ::: x is a member of the Democratic Party.\nUnopposed(x, y) ::: x ran unopposed for y in year y.\nElected(x, y) ::: x was elected to y in year y.\nPoliticalChallenger(x) ::: x is a political challenger.\nPremises:\nPhiladelphiaCityCouncil(ann) ∧ DemocraticParty(ann) ::: Ann J. Land was a member of the Philadelphia City Council and was also a member of the Democratic Party.\nUnopposed(ann, philadelphiaCityCouncil) ∧ PhiladelphiaCityCouncil(ann) ::: Ann J. Land ran unopposed for the Philadelphia City Council in 1980.\n∀x (Unopposed(x, y) → Elected(x, y)) ::: People who run unopposed for the Philadelphia City Council are elected to the positions they run for in the same year.\nPoliticalChallenger(michaelNutter) ::: Michael Nutter was a political challenger.\nElected(ann, philadelphiaCityCouncil) ∧ PoliticalChallenger(michaelNutter) ∧ Defeated(ann, michaelNutter) ∧ PhiladelphiaCityCouncil(ann) ::: Ann J. Land defeated Michael Nutter and ran for the Philadelphia City Council in 1987.\nConclusion:\nElected(ann, philadelphiaCityCouncil) ::: Ann J. Land was elected to the Philadelphia City Council in 1980.\n------\nProblem:\nThe following is a list of the top 100 most popular baby names in the United States in 2013.\n1. Jacob\n2. Mason\n3. William\n4. Michael\n5. Jayden\n6. Ethan\n7. Alexander\n8. Noah\n9. Daniel\n10. A"
    ]
  },
  {
    "id": "FOLIO_train_690",
    "context": "Ann J. Land was a member of the Philadelphia City Council and was also a member of the Democratic Party. Ann J. Land ran unopposed for the Philadephia City Council in 1980. People who run unopposed for the Philadelphia City Council are elected to the positions they run for in the same year. Michael Nutter was a political challenger. Ann J. Land defeated Michael Nutter and ran for the Philadelphia City Council in 1987.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Ann J. Land was elected to the Philadelphia City Council in 1987.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nPhiladelphiaCityCouncil(x) ::: x is a member of the Philadelphia City Council.\nDemocraticParty(x) ::: x is a member of the Democratic Party.\nUnopposed(x, y) ::: x ran unopposed for y in year y.\nElected(x, y) ::: x was elected to y in year y.\nPoliticalChallenger(x) ::: x is a political challenger.\nPremises:\nPhiladelphiaCityCouncil(ann) ∧ DemocraticParty(ann) ::: Ann J. Land was a member of the Philadelphia City Council and was also a member of the Democratic Party.\nUnopposed(ann, philadelphiaCityCouncil) ∧ PhiladelphiaCityCouncil(ann) ∧ Year(1980) ::: Ann J. Land ran unopposed for the Philadephia City Council in 1980.\nElected(x, y) → People(x, y) ::: People who run unopposed for the Philadelphia City Council are elected to the positions they run for in the same year.\nPoliticalChallenger(michaelNutter) ::: Michael Nutter was a political challenger.\nUnopposed(ann, philadelphiaCityCouncil) ∧ PhiladelphiaCityCouncil(ann) ∧ Year(1987) ::: Ann J. Land defeated Michael Nutter and ran for the Philadelphia City Council in 1987.\nConclusion:\nElected(ann, philadelphiaCityCouncil) ::: Ann J. Land was elected to the Philadelphia City Council in 1987.\n------"
    ]
  },
  {
    "id": "FOLIO_train_691",
    "context": "Ann J. Land was a member of the Philadelphia City Council and was also a member of the Democratic Party. Ann J. Land ran unopposed for the Philadephia City Council in 1980. People who run unopposed for the Philadelphia City Council are elected to the positions they run for in the same year. Michael Nutter was a political challenger. Ann J. Land defeated Michael Nutter and ran for the Philadelphia City Council in 1987.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There was some member of the Democratic Party elected to the Philadelphia City Council in 1980.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPhiladelphiaCityCouncil(x) ::: x is a member of the Philadelphia City Council.\nDemocraticParty(x) ::: x is a member of the Democratic Party.\nUnopposed(x) ::: x ran unopposed for the Philadelphia City Council.\nElected(x) ::: x was elected to the Philadelphia City Council.\nPoliticalChallenger(x) ::: x is a political challenger.\nPremises:\nPhiladelphiaCityCouncil(ann) ∧ DemocraticParty(ann) ::: Ann J. Land was a member of the Philadelphia City Council and was also a member of the Democratic Party.\nUnopposed(ann, 1980) ::: Ann J. Land ran unopposed for the Philadelphia City Council in 1980.\nElected(ann, 1980) ::: People who run unopposed for the Philadelphia City Council are elected to the positions they run for in the same year.\nPoliticalChallenger(michael) ::: Michael Nutter was a political challenger.\nElected(ann, 1987) ::: Ann J. Land defeated Michael Nutter and ran for the Philadelphia City Council in 1987.\nConclusion:\n∃y ∃x (PhiladelphiaCityCouncil(x) ∧ DemocraticParty(x) ∧ Elected(x, y)) ::: There was some member of the Democratic Party elected to the Philadelphia City Council in 1980.\n------\nProblem:\nThe following is a list of the top 100 most popular baby names in the United States in 2013."
    ]
  },
  {
    "id": "FOLIO_train_692",
    "context": "Aberdeen won the cup in the 2013 final. Rangers won the cup in 2014 final. Aberdeen and Rangers are different teams. Different teams cannot win the same cup in a given year's final.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Rangers won the cup in 2015.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nWon(x, y) ::: x won the cup in year y.\nDifferent(x, y) ::: x and y are different teams.\nPremises:\nWon(aberdeen, 2013) ∧ Won(rangers, 2014) ::: Aberdeen won the cup in the 2013 final. Rangers won the cup in 2014 final.\nDifferent(aberdeen, rangers) ::: Aberdeen and Rangers are different teams.\n∀x ∀y (Different(x, y) → ¬Won(x, y)) ::: Different teams cannot win the same cup in a given year's final.\nConclusion:\n¬Won(rangers, 2015) ::: Rangers won the cup in 2015.\n------\nProblem:\nAlice is a student. Bob is a student. Bob is a teacher. Alice is a teacher.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Alice is a teacher.\n###\nPredicates:\nStudent(x) ::: x is a student.\nTeacher(x) ::: x is a teacher.\nPremises:\nStudent(alice) ∧ Student(bob) ∧ Teacher(bob) ∧ Teacher(alice) ::: Alice is a student. Bob is a student. Bob is a teacher. Alice is a teacher.\nConclusion:\nTeacher(alice) ::: Alice is a teacher.\n------\nProblem:\nAlice is a student. Bob is a student. Bob is a teacher. Alice is a teacher"
    ]
  },
  {
    "id": "FOLIO_train_693",
    "context": "Aberdeen won the cup in the 2013 final. Rangers won the cup in 2014 final. Aberdeen and Rangers are different teams. Different teams cannot win the same cup in a given year's final.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Rangers won the cup in 2013.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nAberdeen(x) ::: x is Aberdeen.\nRangers(x) ::: x is Rangers.\nCup(x) ::: x is a cup.\nWin(x, y) ::: x wins y.\nFinal(x) ::: x is a final.\nPremises:\nAberdeen(aberdeen) ∧ Rangers(rangers) ∧ Cup(cup) ∧ Final(final) ∧ Win(aberdeen, cup) ∧ Final(final) ∧ Win(rangers, final) ::: Aberdeen won the cup in the 2013 final. Rangers won the cup in 2014 final. Aberdeen and Rangers are different teams. Different teams cannot win the same cup in a given year's final.\nConclusion:\nWin(rangers, final) ::: Rangers won the cup in 2013.\n------\nProblem:\nAlice is a student. Bob is a student. Bob is a teacher. Bob is a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Bob is a teacher.\n###\nPredicates:\nStudent(x) ::: x is a student.\nTeacher(x) ::: x is a teacher.\nPremises:\nStudent(alice) ∧ Student(bob) ∧ Teacher(bob) ∧ Student(bob) ::: Alice is a student. Bob is a student. Bob is a teacher. Bob is a student.\nConclusion:\nTeacher(bob) ::: Bob is a teacher.\n------\nProblem:\nAlice is a student. Bob"
    ]
  },
  {
    "id": "FOLIO_train_694",
    "context": "Aberdeen won the cup in the 2013 final. Rangers won the cup in 2014 final. Aberdeen and Rangers are different teams. Different teams cannot win the same cup in a given year's final.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Aberdeen has won a cup before.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nWon(x, y) ::: x won y.\nDifferent(x, y) ::: x is different from y.\nSame(x, y) ::: x is the same as y.\nPremises:\nWon(aberdeen, cup2013) ∧ Won(rangers, cup2014) ::: Aberdeen won the cup in the 2013 final. Rangers won the cup in 2014 final.\nDifferent(aberdeen, rangers) ::: Aberdeen and Rangers are different teams.\n¬(Same(aberdeen, rangers)) ::: Different teams cannot win the same cup in a given year's final.\nConclusion:\nWon(aberdeen, cup2012) ::: Aberdeen has won a cup before.\n------\nProblem:\nAlice is a student. Bob is a student. Bob is a teacher. Alice is a teacher.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Alice is a teacher.\n###\nPredicates:\nStudent(x) ::: x is a student.\nTeacher(x) ::: x is a teacher.\nPremises:\nStudent(alice) ∧ Student(bob) ∧ Teacher(bob) ∧ Teacher(alice) ::: Alice is a student. Bob is a student. Bob is a teacher. Alice is a teacher.\nConclusion:\nTeacher(alice) ::: Alice is a teacher.\n------\nProblem:\nAlice is a student. Bob is a student. Bob is a teacher. Alice is a teacher."
    ]
  },
  {
    "id": "FOLIO_train_695",
    "context": "All young working professionals who have regular 9-5 jobs also have pets. Some people who live in Manhattan are young working professionals who have regular 9-5 jobs. All people who have pets are people who have at least one child. People who do not have at least one child are people who own a sports car. Mary either does not own a sports car or, if they do, then they do not have at least one child.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mary is a person who lives in Manhattan.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nYoung(x) ::: x is a young person.\nWorkingProfessional(x) ::: x is a working professional.\nHasRegular95Job(x) ::: x has a regular 9-5 job.\nPet(x) ::: x is a pet.\nChild(x) ::: x is a child.\nSportsCar(x) ::: x is a sports car.\nPremises:\n∀x (Young(x) ∧ WorkingProfessional(x) ∧ HasRegular95Job(x)) → Pet(x) ::: All young working professionals who have regular 9-5 jobs also have pets.\n∃x (Young(x) ∧ WorkingProfessional(x) ∧ HasRegular95Job(x) ∧ LivesInManhattan(x)) ::: Some people who live in Manhattan are young working professionals who have regular 9-5 jobs.\n∀x (Pet(x) → Child(x)) ::: All people who have pets are people who have at least one child.\n¬∃x (Child(x) ∧ OwnsSportsCar(x)) ::: People who do not have at least one child are people who own a sports car.\n¬(OwnsSportsCar(mary) ∨ (OwnsSportsCar(mary) ∧ Child(mary))) ::: Mary either does not own a sports car or, if they do, then they do not have at least one child.\nConclusion:\nLivesInManhattan(mary) ::: Mary is a person who lives in Manhattan.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caff"
    ]
  },
  {
    "id": "FOLIO_train_696",
    "context": "All young working professionals who have regular 9-5 jobs also have pets. Some people who live in Manhattan are young working professionals who have regular 9-5 jobs. All people who have pets are people who have at least one child. People who do not have at least one child are people who own a sports car. Mary either does not own a sports car or, if they do, then they do not have at least one child.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mary is a person who lives in Manhattan and is a young working professional who has a regular 9-5 job.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nYoung(x) ::: x is a young person.\nWorkingProfessional(x) ::: x is a working professional.\nHasRegular95Job(x) ::: x has a regular 9-5 job.\nPet(x) ::: x is a pet.\nChild(x) ::: x is a child.\nSportsCar(x) ::: x is a sports car.\nPremises:\n∀x (Young(x) ∧ WorkingProfessional(x) ∧ HasRegular95Job(x)) → Pet(x) ::: All young working professionals who have regular 9-5 jobs also have pets.\n∃x (Young(x) ∧ WorkingProfessional(x) ∧ HasRegular95Job(x) ∧ LivesInManhattan(x)) ::: Some people who live in Manhattan are young working professionals who have regular 9-5 jobs.\n∀x (Pet(x) → Child(x)) ::: All people who have pets are people who have at least one child.\n¬∃x (Child(x) ∧ OwnsSportsCar(x)) ::: People who do not have at least one child are people who own a sports car.\n¬(OwnsSportsCar(mary) ∨ (OwnsSportsCar(mary) ∧ Child(mary))) ::: Mary either does not own a sports car or, if they do, then they do not have at least one child.\nConclusion:\nLivesInManhattan(mary) ∧ WorkingProfessional(mary) ∧ HasRegular95Job(mary) ::: Mary is a person who lives in"
    ]
  },
  {
    "id": "FOLIO_train_697",
    "context": "All young working professionals who have regular 9-5 jobs also have pets. Some people who live in Manhattan are young working professionals who have regular 9-5 jobs. All people who have pets are people who have at least one child. People who do not have at least one child are people who own a sports car. Mary either does not own a sports car or, if they do, then they do not have at least one child.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Mary is a young working professional who has a regular 9-5 job, then Mary does not live in Manhattan.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nYoung(x) ::: x is a young person.\nWorkingProfessional(x) ::: x is a working professional.\nHasRegular95Job(x) ::: x has a regular 9-5 job.\nPet(x) ::: x is a pet.\nChild(x) ::: x is a child.\nSportsCar(x) ::: x is a sports car.\nPremises:\n∀x (Young(x) ∧ WorkingProfessional(x) ∧ HasRegular95Job(x) → Pet(x)) ::: All young working professionals who have regular 9-5 jobs also have pets.\n∃x (Young(x) ∧ WorkingProfessional(x) ∧ HasRegular95Job(x) ∧ LivesInManhattan(x)) ::: Some people who live in Manhattan are young working professionals who have regular 9-5 jobs.\n∀x (Pet(x) → Child(x)) ::: All people who have pets are people who have at least one child.\n¬∃x (Child(x) ∧ OwnsSportsCar(x)) ::: People who do not have at least one child are people who own a sports car.\n¬(OwnsSportsCar(mary) ∧ Child(mary)) ::: Mary either does not own a sports car or, if they do, then they do not have at least one child.\nConclusion:\nLivesInManhattan(mary) → ¬HasRegular95Job(mary) ::: If Mary is a young working professional who has a regular 9-5 job, then Mary does not live in Manhattan."
    ]
  },
  {
    "id": "FOLIO_train_698",
    "context": "Either block design or event-related design. All event-related designs are brain image acquisition. All brain image acquisition is preceded by data processing. Nothing preceded by data processing acquires data. Picture memory is either an event-related design and acquiring data or neither an event-related design nor acquiring data.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Picture memory is preceded by data processing.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nBlockDesign(x) ::: x is a block design.\nEventRelatedDesign(x) ::: x is an event-related design.\nBrainImageAcquisition(x) ::: x is brain image acquisition.\nDataProcessing(x) ::: x is data processing.\nAcquireData(x) ::: x acquires data.\nPremises:\n∀x (EventRelatedDesign(x) → BrainImageAcquisition(x)) ::: All event-related designs are brain image acquisition.\n∀x (BrainImageAcquisition(x) → DataProcessing(x)) ::: All brain image acquisition is preceded by data processing.\n¬(DataProcessing(x) → AcquireData(x)) ::: Nothing preceded by data processing acquires data.\nPictureMemory(x) ⊕ (EventRelatedDesign(x) ∧ AcquireData(x)) ::: Picture memory is either an event-related design and acquiring data or neither an event-related design nor acquiring data.\nConclusion:\nAcquireData(pictureMemory) ::: Picture memory is preceded by data processing.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student"
    ]
  },
  {
    "id": "FOLIO_train_699",
    "context": "Either block design or event-related design. All event-related designs are brain image acquisition. All brain image acquisition is preceded by data processing. Nothing preceded by data processing acquires data. Picture memory is either an event-related design and acquiring data or neither an event-related design nor acquiring data.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Picture memory is a block design.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nBlockDesign(x) ::: x is a block design.\nEventRelatedDesign(x) ::: x is an event-related design.\nBrainImageAcquisition(x) ::: x is brain image acquisition.\nDataProcessing(x) ::: x is data processing.\nAcquireData(x) ::: x acquires data.\nPremises:\n∀x (EventRelatedDesign(x) → BrainImageAcquisition(x)) ::: All event-related designs are brain image acquisition.\n∀x (BrainImageAcquisition(x) → DataProcessing(x)) ::: All brain image acquisition is preceded by data processing.\n¬(DataProcessing(x) → AcquireData(x)) ::: Nothing preceded by data processing acquires data.\n(PictureMemory(x) ∧ EventRelatedDesign(x)) ⊕ (PictureMemory(x) ∧ ¬EventRelatedDesign(x)) ::: Picture memory is either an event-related design and acquiring data or neither an event-related design nor acquiring data.\nConclusion:\nBlockDesign(pictureMemory) ::: Picture memory is a block design.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a"
    ]
  },
  {
    "id": "FOLIO_train_700",
    "context": "Either block design or event-related design. All event-related designs are brain image acquisition. All brain image acquisition is preceded by data processing. Nothing preceded by data processing acquires data. Picture memory is either an event-related design and acquiring data or neither an event-related design nor acquiring data.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Picture memory is either a block design or acquiring data.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nBlockDesign(x) ::: x is a block design.\nEventRelatedDesign(x) ::: x is an event-related design.\nBrainImageAcquisition(x) ::: x is brain image acquisition.\nDataProcessing(x) ::: x is data processing.\nAcquireData(x) ::: x acquires data.\nPremises:\n∀x (EventRelatedDesign(x) → BrainImageAcquisition(x)) ::: All event-related designs are brain image acquisition.\n∀x (BrainImageAcquisition(x) → DataProcessing(x)) ::: All brain image acquisition is preceded by data processing.\n¬(DataProcessing(x) → AcquireData(x)) ::: Nothing preceded by data processing acquires data.\n(PictureMemory(x) ∧ EventRelatedDesign(x)) ⊕ (PictureMemory(x) ∧ AcquireData(x)) ::: Picture memory is either an event-related design and acquiring data or neither an event-related design nor acquiring data.\nConclusion:\nAcquireData(pictureMemory) ::: Picture memory is either a block design or acquiring data.\n------"
    ]
  },
  {
    "id": "FOLIO_train_701",
    "context": "Either block design or event-related design. All event-related designs are brain image acquisition. All brain image acquisition is preceded by data processing. Nothing preceded by data processing acquires data. Picture memory is either an event-related design and acquiring data or neither an event-related design nor acquiring data.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If picture memory is not acquiring data, then picture memory is a block design and acquiring data.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nBlockDesign(x) ::: x is a block design.\nEventRelatedDesign(x) ::: x is an event-related design.\nBrainImageAcquisition(x) ::: x is brain image acquisition.\nDataProcessing(x) ::: x is data processing.\nAcquireData(x) ::: x acquires data.\nPremises:\n∀x (EventRelatedDesign(x) → BrainImageAcquisition(x)) ::: All event-related designs are brain image acquisition.\n∀x (BrainImageAcquisition(x) → DataProcessing(x)) ::: All brain image acquisition is preceded by data processing.\n¬(DataProcessing(x) → AcquireData(x)) ::: Nothing preceded by data processing acquires data.\n(PictureMemory(x) ∧ AcquireData(x)) ⊕ (PictureMemory(x) ∧ ¬AcquireData(x)) ::: Picture memory is either an event-related design and acquiring data or neither an event-related design nor acquiring data.\nConclusion:\nAcquireData(x) → (PictureMemory(x) ∧ BlockDesign(x)) :::"
    ]
  },
  {
    "id": "FOLIO_train_702",
    "context": "The USS Lyon was a US Navy ship involved in WWII. All ships involved in WWII are currently decommissioned or in a museum.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The USS Lyon is decommissioned.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nShip(x) ::: x is a ship.\nInvolved(x, y) ::: x is involved in y.\nDecommissioned(x) ::: x is decommissioned.\nMuseum(x) ::: x is in a museum.\nPremises:\nShip(ussLyon) ∧ Involved(ussLyon, WWII) ::: The USS Lyon was a US Navy ship involved in WWII.\n∀x (Ship(x) → (Decommissioned(x) ∨ Museum(x))) ::: All ships involved in WWII are currently decommissioned or in a museum.\nConclusion:\nDecommissioned(ussLyon) ::: The USS Lyon is decommissioned.\n------\nProblem:\nThe USS Lyon was a US Navy ship involved in WWII. All ships involved in WWII are currently decommissioned or in a museum.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The USS Lyon is in a museum.\n###\nProblem:\nThe USS Lyon was a US Navy ship involved in WWII. All"
    ]
  },
  {
    "id": "FOLIO_train_703",
    "context": "All disposable chopsticks are made from trees. Some chopsticks are eco-friendly. Either disposable chopsticks or reusable chopsticks. If chopsticks are made from metals, then they are not made from plastics. All reusable chopsticks are made from metal. Chopsticks at restaurants are either made from metals and made from plastics, or neither made from metals nor made from plastics.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Chopsticks at restaurants are eco-friendly.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nDisposable(x) ::: x is a disposable chopstick.\nReusable(x) ::: x is a reusable chopstick.\nEcoFriendly(x) ::: x is eco-friendly.\nMetal(x) ::: x is a metal.\nPlastic(x) ::: x is a plastic.\nPremises:\n∀x (Disposable(x) → Tree(x)) ::: All disposable chopsticks are made from trees.\n∃x (Chopstick(x) ∧ EcoFriendly(x)) ::: Some chopsticks are eco-friendly.\n(Chopstick(x) ⊕ Chopstick(y)) ::: Either disposable chopsticks or reusable chopsticks.\n(Chopstick(x) ∧ ¬Metal(x)) → (Chopstick(x) ∧ ¬Plastic(x)) ::: If chopsticks are made from metals, then they are not made from plastics.\n∀x (Reusable(x) → Metal(x)) ::: All reusable ch"
    ]
  },
  {
    "id": "FOLIO_train_704",
    "context": "All disposable chopsticks are made from trees. Some chopsticks are eco-friendly. Either disposable chopsticks or reusable chopsticks. If chopsticks are made from metals, then they are not made from plastics. All reusable chopsticks are made from metal. Chopsticks at restaurants are either made from metals and made from plastics, or neither made from metals nor made from plastics.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Chopsticks at restaurants are eco-friendly or made from trees.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nDisposable(x) ::: x is a disposable chopstick.\nReusable(x) ::: x is a reusable chopstick.\nEcoFriendly(x) ::: x is eco-friendly.\nMadeFrom(x, y) ::: x is made from y.\nMetal(x) ::: x is a metal.\nPlastic(x) ::: x is a plastic.\nPremises:\n∀x (Disposable(x) → MadeFrom(x, trees)) ::: All disposable chopsticks are made from trees.\n∃x (Chopsticks(x) ∧ EcoFriendly(x)) ::: Some chopsticks are eco-friendly.\n(Chopsticks(x) ⊕ Chopsticks(y)) ::: Either disposable chopsticks or reusable chopsticks.\n(MadeFrom(x, metal) → ¬MadeFrom(x, plastic)) ::: If chopsticks are made from metals, then they are not made from plastics.\n∀x (Reusable(x) → Metal(x))"
    ]
  },
  {
    "id": "FOLIO_train_705",
    "context": "All disposable chopsticks are made from trees. Some chopsticks are eco-friendly. Either disposable chopsticks or reusable chopsticks. If chopsticks are made from metals, then they are not made from plastics. All reusable chopsticks are made from metal. Chopsticks at restaurants are either made from metals and made from plastics, or neither made from metals nor made from plastics.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Chopsticks at restaurants are made from plastics or made from trees, then Chopsticks at restaurants are made from plastics and are eco-friendly.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDisposable(x) ::: x is a disposable chopstick.\nReusable(x) ::: x is a reusable chopstick.\nEcoFriendly(x) ::: x is eco-friendly.\nMetal(x) ::: x is a metal.\nPlastic(x) ::: x is a plastic.\nPremises:\n∀x (Disposable(x) → Tree(x)) ::: All disposable chopsticks are made from trees.\n∃x (Chopsticks(x) ∧ EcoFriendly(x)) ::: Some chopsticks are eco-friendly.\n(Chopsticks(x) ⊕ Chopsticks(y)) ::: Either disposable chopsticks or reusable chopsticks.\n(Chopsticks(x) → ¬Metal(x)) ∧ (Chopsticks(y) → ¬Plastic(y)) ::: If chopsticks are made from metals, then they are not made from plastics.\n∀x (Reusable(x) → Metal(x)) ::: All reusable chopst"
    ]
  },
  {
    "id": "FOLIO_train_706",
    "context": "Anything that is lazy is unproductive. No one unproductive is an energetic person. If something is a sloth, then it is lazy. Some animals are sloths. Sid is not either an energetic person or a sloth.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Sid is an animal.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nLazy(x) ::: x is lazy.\nUnproductive(x) ::: x is unproductive.\nEnergetic(x) ::: x is energetic.\nSloth(x) ::: x is a sloth.\nAnimal(x) ::: x is an animal.\nPremises:\n∀x (Lazy(x) → Unproductive(x)) ::: Anything that is lazy is unproductive.\n∀x (Unproductive(x) → ¬Energetic(x)) ::: No one unproductive is an energetic person.\nSloth(sid) ::: Sid is a sloth.\n¬(Energetic(sid) ∨ Sloth(sid)) ::: Sid is not either an energetic person or a sloth.\nConclusion:\nAnimal(sid) ::: Sid is an animal.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine"
    ]
  },
  {
    "id": "FOLIO_train_707",
    "context": "Anything that is lazy is unproductive. No one unproductive is an energetic person. If something is a sloth, then it is lazy. Some animals are sloths. Sid is not either an energetic person or a sloth.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Sid is an energetic person and an animal.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nLazy(x) ::: x is lazy.\nUnproductive(x) ::: x is unproductive.\nEnergetic(x) ::: x is energetic.\nSloth(x) ::: x is a sloth.\nAnimal(x) ::: x is an animal.\nPremises:\n∀x (Lazy(x) → Unproductive(x)) ::: Anything that is lazy is unproductive.\n∀x (Unproductive(x) → ¬Energetic(x)) ::: No one unproductive is an energetic person.\nSloth(sid) ::: Sid is a sloth.\n¬(Energetic(sid) ∨ Sloth(sid)) ::: Sid is not either an energetic person or a sloth.\nConclusion:\nEnergetic(sid) ∧ Animal(sid) ::: Sid is an energetic person and an animal.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being"
    ]
  },
  {
    "id": "FOLIO_train_708",
    "context": "Anything that is lazy is unproductive. No one unproductive is an energetic person. If something is a sloth, then it is lazy. Some animals are sloths. Sid is not either an energetic person or a sloth.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Sid is either an animal or unproductive, then Sid is not an energetic person.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nLazy(x) ::: x is lazy.\nUnproductive(x) ::: x is unproductive.\nEnergetic(x) ::: x is energetic.\nSloth(x) ::: x is a sloth.\nAnimal(x) ::: x is an animal.\nPremises:\n∀x (Lazy(x) → Unproductive(x)) ::: Anything that is lazy is unproductive.\n∀x (Unproductive(x) → ¬Energetic(x)) ::: No one unproductive is an energetic person.\nSloth(sid) ::: Sid is a sloth.\n¬(Animal(sid) ∨ Unproductive(sid)) ::: Sid is not either an animal or unproductive.\nConclusion:\n¬(Energetic(sid) ∨ Unproductive(sid)) ::: If Sid is either an animal or unproductive, then Sid is not an energetic person.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caff"
    ]
  },
  {
    "id": "FOLIO_train_709",
    "context": "European soccer clubs can attend UCL, UEL and UECL. A soccer club eligible to attend UCL has a higher ranking than a soccer club eligible to attend UEL. A soccer club eligible to attend UEL has a higher ranking than a soccer club eligible to attend UECL. Manchester United and Machester City are both European soccer clubs. Manchester United is eligible to attend UEL next season. Manchester City is eligible to attend UCL next season.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Manchester City has a higher ranking than Manchester United.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nEuropeanSoccerClub(x) ::: x is a European soccer club.\nUCL(x) ::: x is eligible to attend UCL.\nUEL(x) ::: x is eligible to attend UEL.\nUECL(x) ::: x is eligible to attend UECL.\nHigherRanking(x, y) ::: x has a higher ranking than y.\nPremises:\n∀x (EuropeanSoccerClub(x) → (UCL(x) ∨ UEL(x) ∨ UECL(x))) ::: European soccer clubs can attend UCL, UEL and UECL.\n∀x (UCL(x) → HigherRanking(x, UEL(x))) ::: A soccer club eligible to attend UCL has a higher ranking than a soccer club eligible to attend UEL.\n∀x (UEL(x) → HigherRanking(x, UECL(x))) ::: A soccer club eligible to attend UEL has a higher ranking than a soccer club eligible to attend UECL.\nManchesterUnited(x)"
    ]
  },
  {
    "id": "FOLIO_train_710",
    "context": "If a person coach a football club, the person is a football coach. If a person has a position in a club for a position in a year, and the club is in NFL in the same year, the person plays in NFL. Minnesota Vikings is a football club. Dennis Green coached Minnesota Vikings. Cris Carter had 13 touchdown receptions. Minnesota Vikings was in the National Football League in 1997. John Randle was Minnesota Vikings defensive tackle in 1997.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Dennis Green is a football coach.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nBased on the above information, is the following statement true, false, or uncertain? Cris Carter played in NFL.\nBased on the above information, is the following statement true, false, or uncertain? John Randle played in NFL.\n###\nPredicates:\nCoach(x, y) ::: x coaches y.\nPosition(x, y) ::: x has a position in y in year y.\nPlay(x, y) ::: x plays in y.\nFootballClub(x) ::: x is a football club.\nNFL(x) ::: x is in NFL.\nPremises:\nCoach(dennis, minnesotaVikings) ::: Dennis Green coached Minnesota Vikings.\n∃x (Position(x, crisCarter, year1997) ∧ NFL(minnesotaVikings)) ::: Cris Carter had 13 touchdown receptions.\n∃x (Position(x, johnRandle, year1997) ∧ NFL(minnesotaVikings)) ::: Minnesota Vikings was in the National Football League in 1997.\nConclusion:\nCoach(dennis, minnesotaVikings) ::: Dennis Green is a football coach.\nPlay(crisCarter, NFL) ::: Cris Carter played in NFL.\nPlay(johnRandle, NFL) ::: John Randle played in NFL.\n------"
    ]
  },
  {
    "id": "FOLIO_train_711",
    "context": "If a person coach a football club, the person is a football coach. If a person has a position in a club for a position in a year, and the club is in NFL in the same year, the person plays in NFL. Minnesota Vikings is a football club. Dennis Green coached Minnesota Vikings. Cris Carter had 13 touchdown receptions. Minnesota Vikings was in the National Football League in 1997. John Randle was Minnesota Vikings defensive tackle in 1997.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? John Randle didn't play in the National Football League.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCoach(x, y) ::: x coaches y.\nPosition(x, y) ::: x has a position in y in year y.\nNFL(x) ::: x is in NFL.\nFootballClub(x) ::: x is a football club.\nPremises:\nCoach(dennis, minnesotaVikings) ::: Dennis Green coached Minnesota Vikings.\nPosition(cris, minnesotaVikings, year1997) ::: Cris Carter had 13 touchdown receptions.\nNFL(minnesotaVikings) ::: Minnesota Vikings was in the National Football League in 1997.\nPosition(john, minnesotaVikings, year1997) ::: John Randle was Minnesota Vikings defensive tackle in 1997.\nConclusion:\n¬NFL(john) ::: John Randle didn't play in the National Football League.\n------\nProblem:\nA person is a member of a group if and only if the person is a member of the group. A person is a member of a group if and only if the person is a member of the group. A person is a member of a group if and only if the person is a member of the group. A person is a member of a group if and only if the person is a member of the group. A person is a member of a group if and only"
    ]
  },
  {
    "id": "FOLIO_train_712",
    "context": "If a person coach a football club, the person is a football coach. If a person has a position in a club for a position in a year, and the club is in NFL in the same year, the person plays in NFL. Minnesota Vikings is a football club. Dennis Green coached Minnesota Vikings. Cris Carter had 13 touchdown receptions. Minnesota Vikings was in the National Football League in 1997. John Randle was Minnesota Vikings defensive tackle in 1997.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Cris Carter played for Minnesota Vikings.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nCoach(x, y) ::: x coaches y.\nPosition(x, y) ::: x has a position in y in year y.\nPlay(x, y) ::: x plays in y.\nFootballClub(x) ::: x is a football club.\nNFL(x) ::: x is in NFL.\nPremises:\nCoach(dennis, minnesotaVikings) ::: Dennis Green coached Minnesota Vikings.\nPosition(cris, minnesotaVikings, year1997) ∧ NFL(minnesotaVikings, year1997) ::: Cris Carter had a position in Minnesota Vikings in year 1997, and Minnesota Vikings was in NFL in the same year.\nPosition(john, minnesotaVikings, year1997) ∧ NFL(minnesotaVikings, year1997) ::: John Randle was Minnesota Vikings defensive tackle in year 1997, and Minnesota Vikings was in NFL in the same year.\nConclusion:\nPlay(cris, minnesotaVikings) ::: Cris Carter played for Minnesota Vikings.\n------\nProblem:\nA person is a member of a group if and only if the person is a member of the group. A person is a member of a group if and only if the person is a member of the group. A person"
    ]
  },
  {
    "id": "FOLIO_train_713",
    "context": "All cats are cute. Ghosts do not exist. An animal is either a cat or a dog. Nothing that barks is lovely. If something is a dog, then it barks. Grace is either a cat and a dog, or neither a cat nor a dog.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Grace is a ghost.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nCute(x) ::: x is cute.\nGhost(x) ::: x is a ghost.\nExist(x) ::: x exists.\nAnimal(x) ::: x is an animal.\nCat(x) ::: x is a cat.\nDog(x) ::: x is a dog.\nBark(x) ::: x barks.\nLovely(x) ::: x is lovely.\nPremises:\n∀x (Cat(x) → Cute(x)) ::: All cats are cute.\n¬Exist(ghost) ::: Ghosts do not exist.\nAnimal(grace) ⊕ Animal(dog) ::: An animal is either a cat or a dog.\n¬Bark(lovelY) ::: Nothing that barks is lovely.\n(Dog(grace) ∧ Bark(grace)) → (Cat(grace) ∧ Dog(grace)) ⊕ (Cat(grace) ∧ Dog(grace)) ::: If something is a dog, then it barks.\n(Cat(grace) ∧ Dog(grace)) ⊕ (Cat(grace) ∧ Dog(grace)) ::: Grace is either a cat and a dog, or neither a cat nor a dog.\nConclusion:\nGhost(grace) ::: Grace is a ghost.\n------\nProblem"
    ]
  },
  {
    "id": "FOLIO_train_714",
    "context": "All cats are cute. Ghosts do not exist. An animal is either a cat or a dog. Nothing that barks is lovely. If something is a dog, then it barks. Grace is either a cat and a dog, or neither a cat nor a dog.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Grace is either both cute and lovely, or neither cute nor lovely, then Grace is either a dog or a ghost.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nCute(x) ::: x is cute.\nLovely(x) ::: x is lovely.\nBark(x) ::: x barks.\nDog(x) ::: x is a dog.\nCat(x) ::: x is a cat.\nGhost(x) ::: x is a ghost.\nPremises:\n∀x (Cat(x) → Cute(x)) ::: All cats are cute.\n¬Ghost(x) ::: x is not a ghost.\n∀x (Animal(x) → (Cat(x) ⊕ Dog(x))) ::: An animal is either a cat or a dog.\n¬Lovely(x) ⊕ Bark(x) ::: Nothing that barks is lovely.\n∀x (Dog(x) → Bark(x)) ::: If something is a dog, then it barks.\n(Cat(grace) ⊕ Dog(grace)) ⊕ (Cat(grace) ⊕ Ghost(grace)) ⊕ (Cat(grace) ⊕ Ghost(grace)) ⊕ (Cat(grace) ⊕ Ghost(grace)) ::: Grace is either a cat and a dog, or neither a cat nor a dog.\nConclusion:\n(Cute(grace) ⊕ Lovely(grace)) ⊕ (Cute(grace) ⊕ Lovely"
    ]
  },
  {
    "id": "FOLIO_train_715",
    "context": "All cats are cute. Ghosts do not exist. An animal is either a cat or a dog. Nothing that barks is lovely. If something is a dog, then it barks. Grace is either a cat and a dog, or neither a cat nor a dog.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Grace is not both a ghost and lovely, then Grace is either a cat or cute.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nCute(x) ::: x is cute.\nLovely(x) ::: x is lovely.\nBark(x) ::: x barks.\nCats(x) ::: x is a cat.\nDogs(x) ::: x is a dog.\nGhosts(x) ::: x is a ghost.\nPremises:\n∀x (Cats(x) → Cute(x)) ::: All cats are cute.\n¬Ghosts(x) ::: x is not a ghost.\n∀x (Animal(x) → (Cats(x) ⊕ Dogs(x))) ::: An animal is either a cat or a dog.\n¬Lovely(x) ∧ Bark(x) ::: Nothing that barks is lovely.\n∀x (Dog(x) → Bark(x)) ::: If something is a dog, then it barks.\n(Grace ∧ ¬(Grace ∧ Ghosts(grace))) → (Grace ∧ Cats(grace)) ⊕ (Grace ∧ ¬Cats(grace)) ::: If Grace is either a ghost and lovely, or neither a ghost nor lovely, then Grace is either a cat and cute, or neither a cat nor cute.\nConclusion:\n¬(Grace ∧ Ghosts(grace)) ∧ ¬"
    ]
  },
  {
    "id": "FOLIO_train_716",
    "context": "Shafaq-Asiman is a large complex of offshore geological structures in the Caspian Sea. Baku is northwest of Shafaq-Asiman. If place A is northwest of place B, then place B is southeast of place A.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Baku is southeast of Shafaq-Asiman.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nNorthwest(x, y) ::: x is northwest of y.\nSoutheast(x, y) ::: x is southeast of y.\nPremises:\nNorthwest(Shafaq-Asiman, Baku) ::: Shafaq-Asiman is northwest of Baku.\nConclusion:\nSoutheast(Baku, Shafaq-Asiman) ::: Baku is southeast of Shafaq-Asiman.\n------\nProblem:\nThe following is a list of the top 100 most popular baby names in the United States in 2013.\n1. Jacob\n2. Mason\n3. William\n4. Michael\n5. Jayden\n6. Ethan\n7. Alexander\n8. Noah\n9. Daniel\n10. Aiden\n11. Benjamin\n12. Anthony\n13. David\n14. James\n15. Christopher\n16. Matthew\n17. John\n18. Joseph\n19. Andrew\n20. Christian\n21. Samuel\n22. Elijah\n23. Joshua\n24. Nicholas\n25. Logan\n26. Lucas\n27. Ryan\n28. Caleb\n29. Joshua\n30. Owen\n31. Aaron\n32. Jackson\n33. Alexander\n34. Matthew\n35"
    ]
  },
  {
    "id": "FOLIO_train_717",
    "context": "Shafaq-Asiman is a large complex of offshore geological structures in the Caspian Sea. Baku is northwest of Shafaq-Asiman. If place A is northwest of place B, then place B is southeast of place A.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A large complex is southeast of Baku.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nNorthwest(x, y) ::: x is northwest of y.\nSoutheast(x, y) ::: x is southeast of y.\nLarge(x) ::: x is a large complex.\nComplex(x) ::: x is a complex.\nOffshore(x) ::: x is offshore.\nGeological(x) ::: x is geological.\nStructure(x) ::: x is a structure.\nPremises:\nNorthwest(Shafaq-Asiman, Baku) ::: Shafaq-Asiman is northwest of Baku.\nSoutheast(Baku, Shafaq-Asiman) ::: Baku is southeast of Shafaq-Asiman.\nConclusion:\nSoutheast(Shafaq-Asiman, Baku) ::: A large complex is southeast of Baku.\n------\nProblem:\nThe following is a list of the top 100 most popular baby names in the United States in 2013.\n1. Jacob\n2. Mason\n3. William\n4. Michael\n5. Ethan\n6. Jayden\n7. Alexander\n8. Noah\n9. Daniel\n10. Aiden\n11. Benjamin\n12. Anthony\n13. David\n14. James\n15. Christopher\n16. Matthew\n17. Andrew"
    ]
  },
  {
    "id": "FOLIO_train_718",
    "context": "Shafaq-Asiman is a large complex of offshore geological structures in the Caspian Sea. Baku is northwest of Shafaq-Asiman. If place A is northwest of place B, then place B is southeast of place A.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Baku is not northwest of an offshore geological structures.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nNorthwest(x, y) ::: x is northwest of y.\nSoutheast(x, y) ::: x is southeast of y.\nPremises:\nNorthwest(baku, shafaqAsiman) ::: Baku is northwest of Shafaq-Asiman.\n∀x ∀y (Northwest(x, y) → Southeast(y, x)) ::: If place A is northwest of place B, then place B is southeast of place A.\nConclusion:\nSoutheast(shafaqAsiman, baku) ::: Baku is southeast of Shafaq-Asiman.\n------\nProblem:\nThe following is a list of the top 100 most popular baby names in the United States in 2013.\n1. Jacob\n2. Mason\n3. William\n4. Michael\n5. Jayden\n6. Ethan\n7. Alexander\n8. Noah\n9. Daniel\n10. Aiden\n11. Benjamin\n12. Anthony\n13. David\n14. James\n15. Christopher\n16. Matthew\n17. John\n18. Joseph\n19. Andrew\n20. Christian\n21. Samuel\n22. Elijah\n23. Joshua\n24. Nicholas\n25. Logan\n26. Lucas\n27."
    ]
  },
  {
    "id": "FOLIO_train_719",
    "context": "Herodicus was a Greek physician, dietician, sophist, and gymnastic-master. Herodicus was born in the city of Selymbria. Selymbria is a colony of the city-state Megara. One of the tutors of Hippocrates was Herodicus. Massages were recommended by Herodicus. Some of theories of Herodicus are considered to be the foundation of sports medicine.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Herodicus tutored Hippocrates.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nGreek(x) ::: x is a Greek person.\nPhysician(x) ::: x is a physician.\nDietician(x) ::: x is a dietician.\nSophist(x) ::: x is a sophist.\nGymnasticMaster(x) ::: x is a gymnastic-master.\nColony(x, y) ::: x is a colony of y.\nTutor(x, y) ::: x tutors y.\nMassage(x) ::: x is a massage.\nTheory(x) ::: x is a theory.\nFoundation(x, y) ::: x is the foundation of y.\nPremises:\nGreek(herodicus) ∧ Physician(herodicus) ∧ Dietician(herodicus) ∧ Sophist(herodicus) ∧ GymnasticMaster(herodicus) ::: Herodicus was a Greek physician, dietician, sophist, and gymnastic-master.\nCity(selymbria) ∧ Colony(selymbria, megara) ::: Selymbria is a colony of the city-state Megara.\nTutor(herodicus, hippocrates) ::: One of the tutors of Hippocrates was Herodicus.\nMassage(herodicus) ::: Massages were recommended by Her"
    ]
  },
  {
    "id": "FOLIO_train_720",
    "context": "Herodicus was a Greek physician, dietician, sophist, and gymnastic-master. Herodicus was born in the city of Selymbria. Selymbria is a colony of the city-state Megara. One of the tutors of Hippocrates was Herodicus. Massages were recommended by Herodicus. Some of theories of Herodicus are considered to be the foundation of sports medicine.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Herodicus was tutored by Hippocrates.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nGreek(x) ::: x is a Greek person.\nPhysician(x) ::: x is a physician.\nDietician(x) ::: x is a dietician.\nSophist(x) ::: x is a sophist.\nGymnasticMaster(x) ::: x is a gymnastic-master.\nColony(x, y) ::: x is a colony of y.\nTutor(x, y) ::: x tutors y.\nMassage(x) ::: x is a massage.\nTheory(x) ::: x is a theory.\nFoundation(x, y) ::: x is the foundation of y.\nPremises:\nGreek(herodicus) ∧ Physician(herodicus) ∧ Dietician(herodicus) ∧ Sophist(herodicus) ∧ GymnasticMaster(herodicus) ::: Herodicus was a Greek physician, dietician, sophist, and gymnastic-master.\nCity(selymbria) ∧ Colony(selymbria, megara) ::: Selymbria is a colony of the city-state Megara.\nTutor(hippocrates, herodicus) ::: One of the tutors of Hippocrates was Herodicus.\nMassage(herodicus) ::: Massages were recommended by Herodicus.\nTheory(herodicus) ::: Some of theories of Herodicus are considered to be the foundation of sports medicine.\nConclusion:\nTutor(herodicus, hippocrates) ::: Herodicus was tutored by Hippocrates.\n------"
    ]
  },
  {
    "id": "FOLIO_train_721",
    "context": "Herodicus was a Greek physician, dietician, sophist, and gymnastic-master. Herodicus was born in the city of Selymbria. Selymbria is a colony of the city-state Megara. One of the tutors of Hippocrates was Herodicus. Massages were recommended by Herodicus. Some of theories of Herodicus are considered to be the foundation of sports medicine.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Herodicus was born in a city-state.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nGreek(x) ::: x is a Greek person.\nPhysician(x) ::: x is a physician.\nDietician(x) ::: x is a dietician.\nSophist(x) ::: x is a sophist.\nGymnasticMaster(x) ::: x is a gymnastic-master.\nColony(x, y) ::: x is a colony of y.\nTutor(x, y) ::: x is a tutor of y.\nMassage(x) ::: x is a massage.\nTheory(x) ::: x is a theory.\nFoundation(x, y) ::: x is the foundation of y.\nPremises:\nGreek(herodicus) ∧ Physician(herodicus) ∧ Dietician(herodicus) ∧ Sophist(herodicus) ∧ GymnasticMaster(herodicus) ::: Herodicus was a Greek physician, dietician, sophist, and gymnastic-master.\nCityState(selymbria) ∧ Colony(selymbria, megara) ::: Selymbria is a colony of the city-state Megara.\nTutor(hippocrates, herodicus) ::: One of the tutors of Hippocrates was Herodicus.\nMassage(herodicus) ::: Massages were recommended by Herodicus.\nTheory(herodicus) ::: Some of theories of Herodicus are considered to be the foundation of sports medicine.\nConclusion:\nCityState(selymbria) ::: Herodicus was born in a city-state.\n------\nProblem"
    ]
  },
  {
    "id": "FOLIO_train_722",
    "context": "Herodicus was a Greek physician, dietician, sophist, and gymnastic-master. Herodicus was born in the city of Selymbria. Selymbria is a colony of the city-state Megara. One of the tutors of Hippocrates was Herodicus. Massages were recommended by Herodicus. Some of theories of Herodicus are considered to be the foundation of sports medicine.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Herodicus did not recommend massages.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nGreek(x) ::: x is a Greek person.\nPhysician(x) ::: x is a physician.\nDietician(x) ::: x is a dietician.\nSophist(x) ::: x is a sophist.\nGymnasticMaster(x) ::: x is a gymnastic-master.\nColony(x, y) ::: x is a colony of y.\nTutor(x, y) ::: x is a tutor of y.\nRecommend(x, y) ::: x recommends y.\nFoundation(x, y) ::: x is the foundation of y.\nPremises:\nGreek(herodicus) ∧ Physician(herodicus) ∧ Dietician(herodicus) ∧ Sophist(herodicus) ∧ GymnasticMaster(herodicus) ::: Herodicus was a Greek physician, dietician, sophist, and gymnastic-master.\nCity(selymbria) ∧ Colony(selymbria, megara) ::: Selymbria is a colony of the city-state Megara.\nTutor(hippocrates, herodicus) ::: One of the tutors of Hippocrates was Herodicus.\nRecommend(herodicus, massages) ::: Massages were recommended by Herodicus.\n∃x ∃y (Foundation(x, y) ∧ Theory(x) ∧ Theory(y)) ::: Some of theories of Herodicus are considered to be the foundation of sports medicine.\nConclusion:\n¬Recommend(herodicus, massages) ::: Herodicus did"
    ]
  },
  {
    "id": "FOLIO_train_723",
    "context": "Herodicus was a Greek physician, dietician, sophist, and gymnastic-master. Herodicus was born in the city of Selymbria. Selymbria is a colony of the city-state Megara. One of the tutors of Hippocrates was Herodicus. Massages were recommended by Herodicus. Some of theories of Herodicus are considered to be the foundation of sports medicine.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Herodicus was born in a colony of a city-state.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreek(x) ::: x is a Greek person.\nPhysician(x) ::: x is a physician.\nDietician(x) ::: x is a dietician.\nSophist(x) ::: x is a sophist.\nGymnasticMaster(x) ::: x is a gymnastic-master.\nColony(x, y) ::: x is a colony of y.\nCityState(x) ::: x is a city-state.\nTutor(x, y) ::: x is the tutor of y.\nMassage(x) ::: x is a massage.\nTheory(x) ::: x is a theory.\nPremises:\nGreek(herodicus) ∧ Physician(herodicus) ∧ Dietician(herodicus) ∧ Sophist(herodicus) ∧ GymnasticMaster(herodicus) ::: Herodicus was a Greek physician, dietician, sophist, and gymnastic-master.\nCityState(megara) ∧ Colony(selymbria, megara) ::: Selymbria is a colony of the city-state Megara.\nTutor(hippocrates, herodicus) ::: One of the tutors of Hippocrates was Herodicus.\nMassage(herodicus) ::: Massages were recommended by Herodicus.\n∃x (Theory(x) ∧ Theory(x) ∧ Theory(x)) ::: Some of theories of Herodicus are considered to be the foundation of sports medicine.\nConclusion:\nColony(selymbria, city-state) ::: Her"
    ]
  },
  {
    "id": "FOLIO_train_724",
    "context": "No kid loves the Opera. All adults love the Opera. If someone is a scientist, then they are an adult. Some students are kids. Billy is a kid.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Billy is a student.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nKid(x) ::: x is a kid.\nAdult(x) ::: x is an adult.\nLove(x, y) ::: x loves y.\nScientist(x) ::: x is a scientist.\nStudent(x) ::: x is a student.\nPremises:\n∀x (Kid(x) → ¬Love(x, opera)) ::: No kid loves the Opera.\n∀x (Adult(x) → Love(x, opera)) ::: All adults love the Opera.\n∀x (Scientist(x) → Adult(x)) ::: If someone is a scientist, then they are an adult.\n∃x (Student(x) ∧ Kid(x)) ::: Some students are kids.\nBilly(billy) ::: Billy is a kid.\nConclusion:\nStudent(billy) ::: Billy is a student.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a"
    ]
  },
  {
    "id": "FOLIO_train_725",
    "context": "No kid loves the Opera. All adults love the Opera. If someone is a scientist, then they are an adult. Some students are kids. Billy is a kid.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Billy is a student and a scientist.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nKid(x) ::: x is a kid.\nAdult(x) ::: x is an adult.\nLove(x, y) ::: x loves y.\nOpera(x) ::: x is the Opera.\nScientist(x) ::: x is a scientist.\nStudent(x) ::: x is a student.\nPremises:\n∀x (Kid(x) → ¬Love(x, opera)) ::: No kid loves the Opera.\n∀x (Adult(x) → Love(x, opera)) ::: All adults love the Opera.\n∀x (Scientist(x) → Adult(x)) ::: If someone is a scientist, then they are an adult.\n∃x (Student(x) ∧ Kid(x)) ::: Some students are kids.\nKid(billy) ::: Billy is a kid.\nConclusion:\nStudent(billy) ∧ Scientist(billy) ::: Billy is a student and a scientist.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion"
    ]
  },
  {
    "id": "FOLIO_train_726",
    "context": "No kid loves the Opera. All adults love the Opera. If someone is a scientist, then they are an adult. Some students are kids. Billy is a kid.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Billy is a student or a scientist, then Billy is a student and a kid.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nKid(x) ::: x is a kid.\nAdult(x) ::: x is an adult.\nLove(x, y) ::: x loves y.\nOpera(x) ::: x is the Opera.\nScientist(x) ::: x is a scientist.\nStudent(x) ::: x is a student.\nPremises:\n∀x (Kid(x) → ¬Love(x, opera)) ::: No kid loves the Opera.\n∀x (Adult(x) → Love(x, opera)) ::: All adults love the Opera.\n∀x (Scientist(x) → Adult(x)) ::: If someone is a scientist, then they are an adult.\n∃x (Student(x) ∧ Kid(x)) ::: Some students are kids.\nKid(billy) ::: Billy is a kid.\nConclusion:\nLove(billy, opera) ::: If Billy is a student or a scientist, then Billy is a student and a kid.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor"
    ]
  },
  {
    "id": "FOLIO_train_727",
    "context": "Brian Winter is a Scottish football referee. After being injured, Brian Winter retired in 2012. Brian Winter was appointed as a referee observer after his retirement. Some football referees become referee observers. The son of Brian Winter, Andy Winter, is a football player who plays for Hamilton Academical.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There is a son of a referee observer that plays football.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nScottish(x) ::: x is a Scottish person.\nFootballReferee(x) ::: x is a football referee.\nRefereeObserver(x) ::: x is a referee observer.\nInjured(x) ::: x is injured.\nRetired(x) ::: x retired.\nAppointed(x, y) ::: x is appointed as y.\nSon(x, y) ::: x is the son of y.\nFootballPlayer(x) ::: x is a football player.\nPlays(x, y) ::: x plays for y.\nPremises:\nScottish(brian) ∧ FootballReferee(brian) ∧ Injured(brian) ∧ Retired(brian) ∧ Appointed(brian, refereeObserver) ::: Brian Winter is a Scottish football referee. After being injured, Brian Winter retired in 2012. Brian Winter was appointed as a referee observer after his retirement.\n∃x (FootballReferee(x) ∧ Son(x, andy)) ::: Some football referees have a son that plays football.\n∃x (FootballReferee(x) ∧ Son(x, andy) ∧ Plays(x, hamiltonAcademical)) ::: Some football referees have a son that plays for Hamilton Academical.\nConclusion:\n∃x (FootballReferee(x) ∧ Son(x, andy) ∧ Plays(x, hamiltonAcademical)) ::: There is a son of a referee observer that plays football.\n------\nProblem:\nThe following is a list of the top 100 most popular"
    ]
  },
  {
    "id": "FOLIO_train_728",
    "context": "Brian Winter is a Scottish football referee. After being injured, Brian Winter retired in 2012. Brian Winter was appointed as a referee observer after his retirement. Some football referees become referee observers. The son of Brian Winter, Andy Winter, is a football player who plays for Hamilton Academical.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Brian Winter is not a referee observer.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nScottish(x) ::: x is a Scottish person.\nFootballReferee(x) ::: x is a football referee.\nRefereeObserver(x) ::: x is a referee observer.\nInjured(x) ::: x is injured.\nRetired(x) ::: x retired.\nAppointed(x, y) ::: x is appointed as y.\nSon(x, y) ::: x is the son of y.\nFootballPlayer(x) ::: x is a football player.\nPlaysFor(x, y) ::: x plays for y.\nPremises:\nScottish(brian) ∧ FootballReferee(brian) ∧ Retired(brian) ∧ Appointed(brian, refereeObserver) ::: Brian Winter is a Scottish football referee. After being injured, Brian Winter retired in 2012. Brian Winter was appointed as a referee observer after his retirement.\n∃x (FootballReferee(x) ∧ Son(x, andy)) ::: Some football referees become referee observers.\nFootballPlayer(andy) ∧ PlaysFor(andy, hamiltonAcademical) ::: The son of Brian Winter, Andy Winter, is a football player who plays for Hamilton Academical.\nConclusion:\n¬RefereeObserver(brian) ::: Brian Winter is not a referee observer.\n------\nProblem:\nThe following is a list of the top 100 most popular names in the United States for the year 2012.\n1. Jacob\n2. Michael\n3. William\n4. James\n5. John\n6. Mason\n7. Ethan"
    ]
  },
  {
    "id": "FOLIO_train_729",
    "context": "Brian Winter is a Scottish football referee. After being injured, Brian Winter retired in 2012. Brian Winter was appointed as a referee observer after his retirement. Some football referees become referee observers. The son of Brian Winter, Andy Winter, is a football player who plays for Hamilton Academical.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Brian Winter is retired.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nScottish(x) ::: x is a Scottish person.\nFootballReferee(x) ::: x is a football referee.\nFootballPlayer(x) ::: x is a football player.\nInjured(x) ::: x is injured.\nRetired(x) ::: x is retired.\nRefereeObserver(x) ::: x is a referee observer.\nPremises:\nScottish(brian) ∧ FootballReferee(brian) ∧ Injured(brian) ∧ Retired(brian) ::: Brian Winter is a Scottish football referee. After being injured, Brian Winter retired in 2012.\nFootballReferee(andy) ∧ FootballPlayer(andy) ::: Andy Winter is a football player who plays for Hamilton Academical.\n∃x (FootballReferee(x) ∧ Retired(x)) ::: Some football referees become referee observers.\nConclusion:\nRetired(brian) ::: Brian Winter is retired.\n------\nProblem:\nThe following is a list of the top 100 most popular names in the United States for the year 2013.\n1. Jacob\n2. Michael\n3. William\n4. James\n5. John\n6. Mason\n7. Ethan\n8. Jayden\n9. Alexander\n10. Benjamin\n11. Daniel\n12. Anthony\n13. David\n14. Andrew\n15. Noah\n16. Joseph\n17. Matthew\n18. Christopher\n19. Samuel\n20. Joshua\n21. Christian\n22. Elijah\n23. Aiden\n24. Nicholas"
    ]
  },
  {
    "id": "FOLIO_train_730",
    "context": "Brian Winter is a Scottish football referee. After being injured, Brian Winter retired in 2012. Brian Winter was appointed as a referee observer after his retirement. Some football referees become referee observers. The son of Brian Winter, Andy Winter, is a football player who plays for Hamilton Academical.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Andy Winter is a referee.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nScottish(x) ::: x is a Scottish person.\nFootballReferee(x) ::: x is a football referee.\nFootballPlayer(x) ::: x is a football player.\nInjured(x) ::: x is injured.\nRetired(x) ::: x retired.\nRefereeObserver(x) ::: x is a referee observer.\nPremises:\nScottish(brian) ∧ FootballReferee(brian) ∧ Injured(brian) ∧ Retired(brian) ::: Brian Winter is a Scottish football referee. After being injured, Brian Winter retired in 2012.\nFootballReferee(andy) ∧ FootballPlayer(andy) ::: Andy Winter is a football player who plays for Hamilton Academical.\n∃x (FootballReferee(x) ∧ RefereeObserver(x)) ::: Some football referees become referee observers.\nConclusion:\nFootballReferee(andy) ::: Andy Winter is a referee.\n------"
    ]
  },
  {
    "id": "FOLIO_train_731",
    "context": "People are either interested in puzzles or bad at chess. If a person is bad at chess, then they don't play a lot of chess. A person is either a planner or a creative person. Erica is someone who plays a lot of chess. If Erica is neither bad at chess nor creative, then Erica is either someone who plans and is creative, or someone who neither plans nor is creative.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Erica plans.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nInterested(x, y) ::: x is interested in y.\nBadAt(x, y) ::: x is bad at y.\nPlays(x, y) ::: x plays y.\nPlans(x) ::: x is a planner.\nCreative(x) ::: x is a creative person.\nPremises:\n∀x (Plays(x, chess) → BadAt(x, chess)) ::: People are either interested in puzzles or bad at chess.\n∀x (Plays(x, chess) → ¬Plays(x, a lot of chess)) ::: If a person is bad at chess, then they don't play a lot of chess.\n∀x (Plays(x, chess) ⊕ Plays(x, a lot of chess)) ::: People either play chess or play a lot of chess.\n∀x (Plays(x, chess) ⊕ Plays(x, a lot of chess)) ⊕ ¬(Pl"
    ]
  },
  {
    "id": "FOLIO_train_732",
    "context": "People are either interested in puzzles or bad at chess. If a person is bad at chess, then they don't play a lot of chess. A person is either a planner or a creative person. Erica is someone who plays a lot of chess. If Erica is neither bad at chess nor creative, then Erica is either someone who plans and is creative, or someone who neither plans nor is creative.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Erica is interested in puzzles and is creative.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nInterested(x, y) ::: x is interested in y.\nBadAt(x, y) ::: x is bad at y.\nPlays(x, y) ::: x plays y.\nLot(x, y) ::: x is a lot of y.\nCreative(x) ::: x is creative.\nPlanner(x) ::: x is a planner.\nPremises:\n∀x (Plays(x, chess) → BadAt(x, chess)) ::: People are either interested in puzzles or bad at chess.\n∀x (Plays(x, chess) → ¬Lot(x, chess)) ::: If a person is bad at chess, then they don't play a lot of chess.\n∃x (Creative(x) ∧ Plays(x, chess)) ::: A person is either a planner or a creative person.\n∃x (Plays(x, chess) ∧ Erica(x)) ::: Erica is someone"
    ]
  },
  {
    "id": "FOLIO_train_733",
    "context": "People are either interested in puzzles or bad at chess. If a person is bad at chess, then they don't play a lot of chess. A person is either a planner or a creative person. Erica is someone who plays a lot of chess. If Erica is neither bad at chess nor creative, then Erica is either someone who plans and is creative, or someone who neither plans nor is creative.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Erica is either interested in puzzles or is creative.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nInterested(x, y) ::: x is interested in y.\nBadAtChess(x) ::: x is bad at chess.\nPlaysChess(x) ::: x plays a lot of chess.\nCreative(x) ::: x is a creative person.\nPlanner(x) ::: x is a planner.\nPremises:\n∀x (PlaysChess(x) → BadAtChess(x)) ::: People are either interested in puzzles or bad at chess.\n∀x (PlaysChess(x) ⊕ Creative(x)) ::: If a person is bad at chess, then they don't play a lot of chess.\n∀x (Creative(x) ⊕ Planner(x)) ::: A person is either a planner or a creative person.\n¬(BadAtChess(erica) ∧ Creative(erica)) ⊕ ¬(BadAtChess(erica) ∨ Creative(erica)) ::: If Erica is neither bad"
    ]
  },
  {
    "id": "FOLIO_train_734",
    "context": "People are either interested in puzzles or bad at chess. If a person is bad at chess, then they don't play a lot of chess. A person is either a planner or a creative person. Erica is someone who plays a lot of chess. If Erica is neither bad at chess nor creative, then Erica is either someone who plans and is creative, or someone who neither plans nor is creative.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Erica plans ahead or plays a lot of chess matches, then Erica is not interested in puzzles and creative.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nInterested(x, y) ::: x is interested in y.\nBadAt(x, y) ::: x is bad at y.\nPlays(x, y) ::: x plays y.\nPlans(x) ::: x plans.\nCreative(x) ::: x is creative.\nPremises:\n∀x (Plays(x, chess) → BadAt(x, chess)) ::: People are either interested in puzzles or bad at chess.\n∀x (Plays(x, chess) → ¬Plays(x, chess)) ::: If a person is bad at chess, then they don't play a lot of chess.\n∀x (Creative(x) → Plans(x)) ::: A person is either a planner or a creative person.\nPlays(erica, chess) ::: Erica is someone who plays a lot of chess.\n¬(Creative(erica) ∧ Plans(erica)) ⊕ (Creative(erica"
    ]
  },
  {
    "id": "FOLIO_train_735",
    "context": "People are either interested in puzzles or bad at chess. If a person is bad at chess, then they don't play a lot of chess. A person is either a planner or a creative person. Erica is someone who plays a lot of chess. If Erica is neither bad at chess nor creative, then Erica is either someone who plans and is creative, or someone who neither plans nor is creative.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Erica is creative, then Erica is not interested in puzzles and creative.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nInterested(x, y) ::: x is interested in y.\nBadAt(x, y) ::: x is bad at y.\nPlays(x, y) ::: x plays y.\nLot(x, y) ::: x is a lot of y.\nCreative(x) ::: x is a creative person.\nPlanner(x) ::: x is a planner.\nPremises:\n∀x (Plays(x, chess) → BadAt(x, chess)) ::: People are either interested in puzzles or bad at chess.\n∀x (Creative(x) → Interested(x, puzzles)) ::: A person is either a planner or a creative person.\nPlays(erica, chess) ::: Erica is someone who plays a lot of chess.\n¬(Creative(erica) ∧ Planner(erica)) → (Creative(erica) ∧ Planner(erica)) ⊕ ¬(Creative(erica) ∨"
    ]
  },
  {
    "id": "FOLIO_train_736",
    "context": "People are either interested in puzzles or bad at chess. If a person is bad at chess, then they don't play a lot of chess. A person is either a planner or a creative person. Erica is someone who plays a lot of chess. If Erica is neither bad at chess nor creative, then Erica is either someone who plans and is creative, or someone who neither plans nor is creative.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Erica is interested in puzzles and is creative, then Erica is not creative.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nInterested(x, y) ::: x is interested in y.\nBadAt(x, y) ::: x is bad at y.\nPlays(x, y) ::: x plays y.\nLot(x, y) ::: x is a lot of y.\nCreative(x) ::: x is a creative person.\nPlanner(x) ::: x is a planner.\nPremises:\n∀x (Plays(x, chess) → BadAt(x, chess)) ::: People are either interested in puzzles or bad at chess.\n∀x (Creative(x) → Interested(x, puzzles)) ::: A person is either a planner or a creative person.\nCreative(erica) ⊕ BadAt(erica, chess) ::: Erica is someone who plays a lot of chess.\n¬(Planner(erica) ∧ Creative(erica)) → (Planner(erica) ∧ Creative(erica)) ⊕ ¬(Planner"
    ]
  },
  {
    "id": "FOLIO_train_737",
    "context": "People are either interested in puzzles or bad at chess. If a person is bad at chess, then they don't play a lot of chess. A person is either a planner or a creative person. Erica is someone who plays a lot of chess. If Erica is neither bad at chess nor creative, then Erica is either someone who plans and is creative, or someone who neither plans nor is creative.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Erica either plays a lot of chess matches or is creative, then Erica is neither interested in puzzles nor a person who plays a lot of chess matches.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nInterested(x, y) ::: x is interested in y.\nBadAt(x, y) ::: x is bad at y.\nPlays(x, y) ::: x plays y.\nLot(x, y) ::: x is a lot of y.\nCreative(x) ::: x is a creative person.\nPlanner(x) ::: x is a planner.\nPremises:\n∀x (Plays(x, chess) → BadAt(x, chess)) ::: People are either interested in puzzles or bad at chess.\n∀x (Plays(x, chess) → ¬Lot(x, chess)) ::: If a person is bad at chess, then they don't play a lot of chess.\n∀x (Creative(x) → Planner(x)) ::: A person is either a planner or a creative person.\nPlays(erica, chess) ∧ Lot(erica, chess) ::: Erica is someone who"
    ]
  },
  {
    "id": "FOLIO_train_738",
    "context": "People are either interested in puzzles or bad at chess. If a person is bad at chess, then they don't play a lot of chess. A person is either a planner or a creative person. Erica is someone who plays a lot of chess. If Erica is neither bad at chess nor creative, then Erica is either someone who plans and is creative, or someone who neither plans nor is creative.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Erica is interested in puzzles and plays a lot of chess matches, then Erica is either a person who plays a lot of chess matches or a person that is creative.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nInterested(x, y) ::: x is interested in y.\nBadAt(x, y) ::: x is bad at y.\nPlays(x, y) ::: x plays y.\nLot(x, y) ::: x is a lot of y.\nCreative(x) ::: x is a creative person.\nPlanner(x) ::: x is a planner.\nPremises:\n∀x (Plays(x, chess) → BadAt(x, chess) → ¬Plays(x, chess)) ::: If a person is bad at chess, then they don't play a lot of chess.\n∀x (Plays(x, chess) → Interested(x, puzzles)) ::: People are either interested in puzzles or bad at chess.\n∀x (Plays(x, chess) → Plays(x, chess)) ::: If a person is bad at chess, then they don't play a lot of chess.\n∃x (Pl"
    ]
  },
  {
    "id": "FOLIO_train_739",
    "context": "People are either interested in puzzles or bad at chess. If a person is bad at chess, then they don't play a lot of chess. A person is either a planner or a creative person. Erica is someone who plays a lot of chess. If Erica is neither bad at chess nor creative, then Erica is either someone who plans and is creative, or someone who neither plans nor is creative.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Erica plans ahead or is interested in puzzles, then Erica is creative.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nInterested(x, y) ::: x is interested in y.\nBadAt(x, y) ::: x is bad at y.\nPlays(x, y) ::: x plays y.\nPlans(x) ::: x plans.\nCreative(x) ::: x is creative.\nPremises:\n∀x (Plays(x, chess) → BadAt(x, chess)) ::: People are either interested in puzzles or bad at chess.\n∀x (Plays(x, chess) → ¬Plays(x, a lot of chess)) ::: If a person is bad at chess, then they don't play a lot of chess.\n∀x (Plays(x, chess) → ¬Plays(x, a lot of chess)) ::: If a person is bad at chess, then they don't play a lot of chess.\n∀x (Plays(x, chess) → ¬Plays(x, a lot of chess)) :"
    ]
  },
  {
    "id": "FOLIO_train_740",
    "context": "People are either interested in puzzles or bad at chess. If a person is bad at chess, then they don't play a lot of chess. A person is either a planner or a creative person. Erica is someone who plays a lot of chess. If Erica is neither bad at chess nor creative, then Erica is either someone who plans and is creative, or someone who neither plans nor is creative.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Erica is either bad at chess or interested in puzzles, then Erica is not a person who plays a lot of chess matches and creative.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nInterested(x, y) ::: x is interested in y.\nBadAt(x, y) ::: x is bad at y.\nPlays(x, y) ::: x plays y.\nLot(x, y) ::: x is a lot of y.\nPlans(x) ::: x is a planner.\nCreative(x) ::: x is a creative person.\nPremises:\n∀x (Interested(x, puzzles) ⊕ BadAt(x, chess)) ::: People are either interested in puzzles or bad at chess.\n∀x (BadAt(x, chess) → ¬Plays(x, chess)) ::: If a person is bad at chess, then they don't play a lot of chess.\n∀x (Plans(x) ⊕ Creative(x)) ::: A person is either a planner or a creative person.\nInterested(erica, puzzles) ⊕ BadAt(erica, chess) ⊕ Plays(erica, chess) ⊕ Lot(erica, chess) ::: Erica is someone who plays a lot of chess.\n¬(Creative(erica) ∧ Planner(erica)) ⊕ (Creative(erica) ∧ Planner(erica)) ::: If Erica is neither bad at chess nor creative, then Erica is either someone who plans and is creative, or someone who neither plans nor is creative.\nConclusion:\n¬(Plays(erica, chess) ∧ Creative(erica)) ⊕ (Plays(erica, chess) ∧ Creative(erica)) ::: If Erica is either bad at chess or interested in puzzles, then Erica is not a person who plays a lot of chess matches and creative.\n------"
    ]
  },
  {
    "id": "FOLIO_train_741",
    "context": "Soccer players have a right foot and a left foot. Top soccer players are soccer players who can use their both feet very efficiently. If a soccer player can score many goals using left foot, then they can use that foot very efficiently. If a soccer player can score many goals using right foot, then they can use that foot very efficiently. Cristiano Ronaldo is a soccer player. Cristiano Ronaldo can use his right foot very efficiently. Cristiano Ronaldo have scored more than one hundred goals using his left foot.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Cristiano Ronaldo is a top soccer player.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nSoccerPlayer(x) ::: x is a soccer player.\nTopSoccerPlayer(x) ::: x is a top soccer player.\nRightFoot(x) ::: x is a right foot.\nLeftFoot(x) ::: x is a left foot.\nCanUse(x, y) ::: x can use y.\nEfficiently(x, y) ::: x can use y efficiently.\nScore(x, y) ::: x scored y goals.\nPremises:\n∀x (SoccerPlayer(x) → ∃y (RightFoot(y) ∧ LeftFoot(y) ∧ CanUse(x, y))) ::: Soccer players have a right foot and a left foot.\n∀x (TopSoccerPlayer(x) → ∃y (RightFoot(y) ∧ LeftFoot(y) ∧ Efficiently(x, y))) ::: Top soccer players are soccer players who can use their both feet very efficiently.\nScore(cristiano, leftFoot) ∧ Score(cristiano, rightFoot) ::: Cristiano Ronaldo have scored more than one hundred goals using his left foot.\nCanUse(cristiano, leftFoot) ::: Cristiano Ronaldo can use his left foot.\nCanUse(cristiano, rightFoot) ::: Cristiano Ronaldo can use his right foot.\nConclusion:\nTopSoccerPlayer(cristiano) ::: Cristiano Ronaldo is a top soccer player.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug,"
    ]
  },
  {
    "id": "FOLIO_train_742",
    "context": "Soccer players have a right foot and a left foot. Top soccer players are soccer players who can use their both feet very efficiently. If a soccer player can score many goals using left foot, then they can use that foot very efficiently. If a soccer player can score many goals using right foot, then they can use that foot very efficiently. Cristiano Ronaldo is a soccer player. Cristiano Ronaldo can use his right foot very efficiently. Cristiano Ronaldo have scored more than one hundred goals using his left foot.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Cristiano Ronaldo is not a top soccer player.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nSoccerPlayer(x) ::: x is a soccer player.\nTopSoccerPlayer(x) ::: x is a top soccer player.\nRightFoot(x) ::: x is a right foot.\nLeftFoot(x) ::: x is a left foot.\nCanUse(x, y) ::: x can use y.\nEfficiently(x, y) ::: x can use y efficiently.\nScore(x, y) ::: x scored y goals.\nPremises:\n∀x (SoccerPlayer(x) → ∃y (RightFoot(y) ∧ LeftFoot(y) ∧ CanUse(x, y))) ::: Soccer players have a right foot and a left foot.\n∀x (TopSoccerPlayer(x) → ∃y (RightFoot(y) ∧ LeftFoot(y) ∧ CanUse(x, y) ∧ Efficiently(x, y))) ::: Top soccer players are soccer players who can use their both feet very efficiently.\nScore(cristiano, leftFoot) ∧ Score(cristiano, rightFoot) ::: Cristiano Ronaldo have scored more than one hundred goals using his left foot.\nCanUse(cristiano, leftFoot) ::: Cristiano Ronaldo can use his left foot.\nCanUse(cristiano, rightFoot) ::: Cristiano Ronaldo can use his right foot.\nConclusion:\n¬TopSoccerPlayer(cristiano) ::: Cristiano Ronaldo is not a top soccer player.\n------\nProblem:\nA person is a student if they are a student. A person is a teacher if they are a teacher. A person is a student or a teacher. A person is a student or a teacher or a student and a teacher. A person is a student or a teacher or a student and a teacher or a student and a"
    ]
  },
  {
    "id": "FOLIO_train_743",
    "context": "The National Lobster Hatchery is a hatchery located in Padstow England. The National Lobster Hatchery is open to visitors. A hatchery is either for profit, or for conservation. If a hatchery is for conservation, it might release animals into the wild. The National Lobster Hatchery is not for profit.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The National Lobster Hatchery is for conservation.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nHatchery(x) ::: x is a hatchery.\nOpen(x) ::: x is open to visitors.\nForProfit(x) ::: x is for profit.\nConservation(x) ::: x is for conservation.\nRelease(x, y) ::: x releases y into the wild.\nPremises:\nHatchery(nationalLobsterHatchery) ∧ Open(nationalLobsterHatchery) ::: The National Lobster Hatchery is a hatchery located in Padstow England. The National Lobster Hatchery is open to visitors.\n¬ForProfit(nationalLobsterHatchery) ::: The National Lobster Hatchery is not for profit.\nConservation(x) ∧ Release(x, y) → ¬ForProfit(x) ::: If a hatchery is for conservation, it might release animals into the wild.\nConclusion:\nConservation(nationalLobsterHatchery) ::: The National Lobster Hatchery is for conservation.\n------\nProblem:\nThe National Lobster Hatchery is a hatchery located in Padstow England. The National Lobster Hatchery is open to visitors. A hatchery is either for profit, or for conservation. If a hatchery is for conservation, it might release animals into the wild. The National Lobster Hatchery is not for profit.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The National Lobster Hatchery is for conservation.\n###\nProblem:\nThe National Lobster Hatchery is a hatchery located in Padstow England. The National Lobster Hatchery is open to visitors. A hatchery is either for profit, or for conservation. If a hatchery is for conservation, it might release animals into"
    ]
  },
  {
    "id": "FOLIO_train_744",
    "context": "The National Lobster Hatchery is a hatchery located in Padstow England. The National Lobster Hatchery is open to visitors. A hatchery is either for profit, or for conservation. If a hatchery is for conservation, it might release animals into the wild. The National Lobster Hatchery is not for profit.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? All hatcheries are open to visitors.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nHatchery(x) ::: x is a hatchery.\nOpenToVisitors(x) ::: x is open to visitors.\nForProfit(x) ::: x is for profit.\nConservation(x) ::: x is for conservation.\nRelease(x, y) ::: x releases y into the wild.\nPremises:\nHatchery(nationalLobsterHatchery) ∧ OpenToVisitors(nationalLobsterHatchery) ::: The National Lobster Hatchery is a hatchery located in Padstow England. The National Lobster Hatchery is open to visitors.\n∀x (Hatchery(x) → OpenToVisitors(x)) ::: All hatcheries are open to visitors.\n∃x (Hatchery(x) ∧ ForProfit(x)) ::: A hatchery is either for profit, or for conservation.\n∃x (Hatchery(x) ∧ Conservation(x) ∧ Release(x, y)) ::: If a hatchery is for conservation, it might release animals into the wild.\n¬ForProfit(nationalLobsterHatchery) ::: The National Lobster Hatchery is not for profit.\nConclusion:\nOpenToVisitors(nationalLobsterHatchery) ::: The National Lobster Hatchery is open to visitors.\n------\nProblem:\nThe National Lobster Hatchery is a hatchery located in Padstow England. The National Lobster Hatchery is open to visitors. A hatchery is either for profit, or for conservation. If a hatchery is for conservation, it might release animals into the wild. The National Lobster Hatchery is not for profit.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The National Lobster H"
    ]
  },
  {
    "id": "FOLIO_train_745",
    "context": "The National Lobster Hatchery is a hatchery located in Padstow England. The National Lobster Hatchery is open to visitors. A hatchery is either for profit, or for conservation. If a hatchery is for conservation, it might release animals into the wild. The National Lobster Hatchery is not for profit.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The National Lobster Hatchery releases animals into the wild.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nHatchery(x) ::: x is a hatchery.\nOpen(x) ::: x is open to visitors.\nForProfit(x) ::: x is for profit.\nConservation(x) ::: x is for conservation.\nRelease(x, y) ::: x releases y into the wild.\nPremises:\nHatchery(nationalLobsterHatchery) ∧ Open(nationalLobsterHatchery) ::: The National Lobster Hatchery is a hatchery located in Padstow England. The National Lobster Hatchery is open to visitors.\n∃x (Hatchery(x) ∧ ForProfit(x)) ::: A hatchery is either for profit, or for conservation.\n∃x (Hatchery(x) ∧ Conservation(x) ∧ Release(x, y)) ::: If a hatchery is for conservation, it might release animals into the wild.\n¬ForProfit(nationalLobsterHatchery) ::: The National Lobster Hatchery is not for profit.\nConclusion:\nRelease(nationalLobsterHatchery, y) ::: The National Lobster Hatchery releases animals into the wild.\n------\nProblem:\nThe National Lobster Hatchery is a hatchery located in Padstow England. The National Lobster Hatchery is open to visitors. A hatchery is either for profit, or for conservation. If a hatchery is for conservation, it might release animals into the wild. The National Lobster Hatchery is not for profit.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The National Lobster Hatchery is for conservation.\n###\nProblem:\nThe National Lobster Hatchery is a hatchery located in Padstow England. The National Lob"
    ]
  },
  {
    "id": "FOLIO_train_746",
    "context": "Rhos Aelwyd F.C. is a Welsh football club. Rhos Aelwyd F.C. is the only club based in Ponciau. The Premier Division was won in 2005–06 by a team from Ponciau. The winner of the Premier Division in 2009–10 was promoted back to the Cymru Alliance. The Premier Division in 2009–10 was won by the same team that won in 2005-06.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Rhos Aelwyd F.C. won the 2005-06 Premier Division.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nWelsh(x) ::: x is a Welsh football club.\nPonciau(x) ::: x is based in Ponciau.\nPremierDivision(x) ::: x is the Premier Division.\nWinner(x, y) ::: x won y.\nPromote(x, y) ::: x is promoted to y.\nPremierDivisionWinner(x, y) ::: x won the Premier Division in year y.\nPremierDivisionWinner(x, y) ∧ PremierDivisionWinner(x, y) ::: x won the Premier Division in year y.\nPremierDivisionWinner(x, y) ∧ Promote(x, y) ::: x is promoted to y.\nPremierDivisionWinner(x, y) ∧ PremierDivisionWinner(x, y) ∧ Promote(x, y) ::: x is promoted to y.\nPremierDivisionWinner(x, y) ∧ PremierDivisionWinner(x, y) ∧ Promote(x, y) ∧ PremierDivisionWinner(x, y) ::: x is promoted to y.\nPremierDivisionWinner(x, y) ∧ PremierDivisionWinner(x, y) ∧ Promote(x, y) ∧ PremierDivisionWinner(x, y) ∧ PremierDivisionWinner(x, y) ::: x is promoted to y.\nPremierDivisionWinner(x, y) ∧ PremierDivisionWinner(x, y) ∧ Promote(x, y) ∧ PremierDivisionWinner(x, y) ∧ PremierDivisionWinner(x, y) ∧ PremierDivisionWinner(x, y) ::: x is promoted to y.\nPremierDivisionWinner"
    ]
  },
  {
    "id": "FOLIO_train_747",
    "context": "Rhos Aelwyd F.C. is a Welsh football club. Rhos Aelwyd F.C. is the only club based in Ponciau. The Premier Division was won in 2005–06 by a team from Ponciau. The winner of the Premier Division in 2009–10 was promoted back to the Cymru Alliance. The Premier Division in 2009–10 was won by the same team that won in 2005-06.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Rhos Aelwyd F.C. was promoted to the Cymru Alliance.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nWelsh(x) ::: x is a Welsh football club.\nPonciau(x) ::: x is based in Ponciau.\nPremierDivision(x) ::: x is the Premier Division.\nWinner(x, y) ::: x won y.\nPromote(x, y) ::: x is promoted to y.\nPremierDivisionWinner(x, y) ::: x won the Premier Division in year y.\nPremierDivisionWinner(x, y) ∧ PremierDivisionWinner(x, y) ::: x won the Premier Division in year y.\nPremierDivisionWinner(x, y) ∧ PremierDivisionWinner(x, y) ::: x won the Premier Division in year y.\nPremierDivisionWinner(x, y) ∧ PremierDivisionWinner(x, y) ::: x won the Premier Division in year y.\nPremierDivisionWinner(x, y) ∧ PremierDivisionWinner(x, y) ::: x won the Premier Division in year y.\nPremierDivisionWinner(x, y) ∧ PremierDivisionWinner(x, y) ::: x won the Premier Division in year y.\nPremierDivisionWinner(x, y) ∧ PremierDivisionWinner(x, y) ::: x won the Premier Division in year y.\nPremierDivisionWinner(x, y) ∧ PremierDivisionWinner(x, y) ::: x won the Premier Division in year y.\nPremierDivisionWinner(x, y) ∧ PremierDivisionWinner(x, y) ::: x won the Premier Division in year y.\nPremierDivisionWinner(x, y) ∧ PremierDivisionWinner(x, y)"
    ]
  },
  {
    "id": "FOLIO_train_748",
    "context": "All OS are software. All Mac are OS. An OS is either Mac or Windows. All Windows are convenient. All software has code. If something is convenient, then it is popular. Burger is a piece of code and a Mac. PyTorch is either Windows and software, or neither Windows nor software.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Burger is popular.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nOS(x) ::: x is an OS.\nMac(x) ::: x is a Mac.\nWindows(x) ::: x is Windows.\nConvenient(x) ::: x is convenient.\nPopular(x) ::: x is popular.\nCode(x) ::: x is a piece of code.\nPremises:\n∀x (Mac(x) → OS(x)) ::: All Mac are OS.\n∀x (Mac(x) ⊕ Windows(x)) ::: All OS are software.\n∀x (Windows(x) → Convenient(x)) ::: All Windows are convenient.\n∀x (Software(x) → Code(x)) ::: All software has code.\n(Popular(x) ∧ Convenient(x)) → Convenient(x) ::: If something is convenient, then it is popular.\nCode(burger) ∧ Mac(burger) ::: Burger is a piece of code and a Mac.\nCode(pytorch) ∧ (Windows(pytorch) ∨ Software(pytorch)) ::: PyTorch is either Windows and software, or neither Windows nor software.\nConclusion:\nPopular(burger) ::: Burger is popular.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on c"
    ]
  },
  {
    "id": "FOLIO_train_749",
    "context": "All OS are software. All Mac are OS. An OS is either Mac or Windows. All Windows are convenient. All software has code. If something is convenient, then it is popular. Burger is a piece of code and a Mac. PyTorch is either Windows and software, or neither Windows nor software.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Burger is not popular.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nOS(x) ::: x is an OS.\nMac(x) ::: x is a Mac.\nWindows(x) ::: x is Windows.\nConvenient(x) ::: x is convenient.\nPopular(x) ::: x is popular.\nCode(x) ::: x is a piece of code.\nPremises:\n∀x (Mac(x) → OS(x)) ::: All Mac are OS.\n∀x (Mac(x) ⊕ Windows(x)) ::: All OS are software.\n∀x (Windows(x) → Convenient(x)) ::: All Windows are convenient.\n∀x (Software(x) → Code(x)) ::: All software has code.\n(Popular(x) → Convenient(x)) ⊕ (Popular(x) ∧ Convenient(x)) ::: If something is convenient, then it is popular.\nCode(burger) ∧ Mac(burger) ::: Burger is a piece of code and a Mac.\nCode(pytorch) ∧ (Windows(pytorch) ∨ Software(pytorch)) ::: PyTorch is either Windows and software, or neither Windows nor software.\nConclusion:\n¬Popular(burger) ::: Burger is not popular.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and"
    ]
  },
  {
    "id": "FOLIO_train_750",
    "context": "All OS are software. All Mac are OS. An OS is either Mac or Windows. All Windows are convenient. All software has code. If something is convenient, then it is popular. Burger is a piece of code and a Mac. PyTorch is either Windows and software, or neither Windows nor software.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? PyTorch is popular and has code.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nOS(x) ::: x is an OS.\nMac(x) ::: x is a Mac.\nWindows(x) ::: x is Windows.\nConvenient(x) ::: x is convenient.\nPopular(x) ::: x is popular.\nCode(x) ::: x has code.\nPieceOfCode(x) ::: x is a piece of code.\nPremises:\n∀x (OS(x) → Software(x)) ::: All OS are software.\n∀x (Mac(x) → OS(x)) ::: All Mac are OS.\nMac(burger) ∧ Windows(pytorch) ∧ Code(pytorch) ::: Burger is a piece of code and a Mac.\nPyTorch(pytorch) ∧ (Windows(pytorch) ⊕ Software(pytorch)) ::: PyTorch is either Windows and software, or neither Windows nor software.\nConclusion:\nPopular(pytorch) ∧ Code(pytorch) ::: PyTorch is popular and has code.\n------"
    ]
  },
  {
    "id": "FOLIO_train_751",
    "context": "All OS are software. All Mac are OS. An OS is either Mac or Windows. All Windows are convenient. All software has code. If something is convenient, then it is popular. Burger is a piece of code and a Mac. PyTorch is either Windows and software, or neither Windows nor software.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? PyTorch is not popular and has code.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nOS(x) ::: x is an OS.\nMac(x) ::: x is a Mac.\nWindows(x) ::: x is Windows.\nConvenient(x) ::: x is convenient.\nPopular(x) ::: x is popular.\nCode(x) ::: x has code.\nPieceOfCode(x) ::: x is a piece of code.\nPremises:\n∀x (OS(x) → Software(x)) ::: All OS are software.\n∀x (Mac(x) → OS(x)) ::: All Mac are OS.\nMac(burger) ∧ Windows(pytorch) ∧ Code(pytorch) ::: Burger is a piece of code and a Mac.\nPyTorch(pytorch) ∧ (Windows(pytorch) ⊕ Software(pytorch)) ::: PyTorch is either Windows and software, or neither Windows nor software.\nConclusion:\nCode(pytorch) ∧ Unpopular(pytorch) ::: PyTorch is not popular and has code."
    ]
  },
  {
    "id": "FOLIO_train_752",
    "context": "Roads are made of either concrete or asphalt. Roads made of concrete last longer than roads made with asphalt. Roads made of asphalt are smoother than roads made of concrete. Everyone prefers the smoother of two roads. Road one is made of concrete and Road two is made of asphalt.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Road one will last longer than Road two",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nConcrete(x) ::: x is a road made of concrete.\nAsphalt(x) ::: x is a road made of asphalt.\nLonger(x, y) ::: x lasts longer than y.\nSmoother(x, y) ::: x is smoother than y.\nPrefers(x, y) ::: x prefers y.\nRoad(x) ::: x is a road.\nPremises:\n∀x (Concrete(x) → Longer(x, Asphalt(x))) ::: Roads made of concrete last longer than roads made with asphalt.\n∀x (Asphalt(x) → Smoother(x, Concrete(x))) ::: Roads made of asphalt are smoother than roads made of concrete.\nRoadOne(x) ∧ RoadTwo(x) ::: Road one is made of concrete and Road two is made of asphalt.\nConclusion:\nLonger(RoadOne(x), RoadTwo(x)) ::: Road one will last longer than Road"
    ]
  },
  {
    "id": "FOLIO_train_753",
    "context": "Roads are made of either concrete or asphalt. Roads made of concrete last longer than roads made with asphalt. Roads made of asphalt are smoother than roads made of concrete. Everyone prefers the smoother of two roads. Road one is made of concrete and Road two is made of asphalt.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Road two is not smoother than Road one.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nConcrete(x) ::: x is a road made of concrete.\nAsphalt(x) ::: x is a road made of asphalt.\nLonger(x, y) ::: x lasts longer than y.\nSmoother(x, y) ::: x is smoother than y.\nPrefers(x, y) ::: x prefers y.\nRoad(x) ::: x is a road.\nPremises:\n∀x (Concrete(x) → Longer(x, Asphalt(x))) ::: Roads made of concrete last longer than roads made with asphalt.\n∀x (Asphalt(x) → Smoother(x, Concrete(x))) ::: Roads made of asphalt are smoother than roads made of concrete.\nRoadOne(x) ∧ RoadTwo(x) ::: Road one is made of concrete and Road two is made of asphalt.\nConclusion:\nSmoother(RoadTwo(x), RoadOne(x)) ::: Road two is not smo"
    ]
  },
  {
    "id": "FOLIO_train_754",
    "context": "Roads are made of either concrete or asphalt. Roads made of concrete last longer than roads made with asphalt. Roads made of asphalt are smoother than roads made of concrete. Everyone prefers the smoother of two roads. Road one is made of concrete and Road two is made of asphalt.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? John prefers Road two.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nConcrete(x) ::: x is a road made of concrete.\nAsphalt(x) ::: x is a road made of asphalt.\nLonger(x, y) ::: x lasts longer than y.\nSmoother(x, y) ::: x is smoother than y.\nPrefers(x, y) ::: x prefers y.\nRoad(x) ::: x is a road.\nPremises:\n∀x (Concrete(x) → Longer(x, Asphalt(x))) ::: Roads made of concrete last longer than roads made with asphalt.\n∀x (Asphalt(x) → Smoother(x, Concrete(x))) ::: Roads made of asphalt are smoother than roads made of concrete.\n∀x (Smoother(x, y) → Prefers(x, y)) ::: Everyone prefers the smoother of two roads.\nRoadOne(x) ∧ RoadTwo(x) ::: Road one is made of concrete and Road two is"
    ]
  },
  {
    "id": "FOLIO_train_755",
    "context": "Camp Davern is a traditional summer camp for boys and girls. Camp Davern was established in the year 1946. Camp Davern was operated by the YMCA until the year 2015. Camp Davern is one of Ontario's oldest summer camps.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? One of Ontario's oldest summer camps is a traditional summer camp for boys and girls.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Ontario(x) ::: x is a province in Canada.\nOldest(x) ::: x is the oldest of y.\nTraditional(x) ::: x is a traditional summer camp.\nSummerCamp(x) ::: x is a summer camp.\nBoys(x) ::: x is a boy.\nGirls(x) ::: x is a girl.\nPremises:\nOntario(ontario) ∧ Oldest(ontario) ∧ SummerCamp(campDavern) ∧ Traditional(campDavern) ::: Ontario is one of Ontario's oldest summer camps.\nCampDavern(campDavern) ∧ Established(campDavern, year1946) ∧ Operated(campDavern, year2015) ∧ YMCA(campDavern) ::: Camp Davern is a traditional summer camp for boys and girls.\nConclusion:\nTraditional(campDavern) ∧ Boys(campDavern) ∧ Girls(campDavern) ::: One of Ontario's oldest summer camps is a"
    ]
  },
  {
    "id": "FOLIO_train_756",
    "context": "Camp Davern is a traditional summer camp for boys and girls. Camp Davern was established in the year 1946. Camp Davern was operated by the YMCA until the year 2015. Camp Davern is one of Ontario's oldest summer camps.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A traditional summer camp for boys and girls was operated by the YMCA until the year 2015.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Ontario's oldest summer camp was established in the year 1946.\nBased on the above information, is the following statement true, false, or uncertain? Camp Davern is one of Ontario's oldest summer camps.\n###\nPredicates:\nTraditional(x) ::: x is a traditional summer camp.\nBoysAndGirls(x) ::: x is a summer camp for boys and girls.\nOperated(x, y) ::: x is operated by y.\nYMCA(x) ::: x is the YMCA.\nOldest(x) ::: x is the oldest.\nEstablished(x, y) ::: x is established in year y.\nPremises:\nTraditional(campDavern) ∧ BoysAndGirls(campDavern) ∧ Operated(campDavern, ymca) ∧ Established(campDavern, year1946) ::: Camp Davern is a traditional summer camp for boys and girls. Camp Davern was established in the year 1946. Camp Davern was operated by the"
    ]
  },
  {
    "id": "FOLIO_train_757",
    "context": "Camp Davern is a traditional summer camp for boys and girls. Camp Davern was established in the year 1946. Camp Davern was operated by the YMCA until the year 2015. Camp Davern is one of Ontario's oldest summer camps.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Camp Davern was established in 1989.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Ontario(x) ::: x is a province in Canada.\nSummerCamp(x) ::: x is a summer camp.\nTraditional(x) ::: x is a traditional summer camp.\nBoys(x) ::: x is a boy.\nGirls(x) ::: x is a girl.\nEstablished(x, y) ::: x was established in year y.\nOperated(x, y) ::: x was operated by y in year y.\nOldest(x, y) ::: x is the oldest y.\nPremises:\nSummerCamp(campDavern) ∧ Traditional(campDavern) ∧ Boys(campDavern) ∧ Girls(campDavern) ::: Camp Davern is a traditional summer camp for boys and girls.\nEstablished(campDavern, year1946) ::: Camp Davern was established in the year 1946.\nOperated(campDavern, ymca, year2015) ::: Camp Davern was operated by the YMCA until the year 2015"
    ]
  },
  {
    "id": "FOLIO_train_758",
    "context": "If people publish journals, then they do not work in the entertainment industry. All people who are award-winning novelists publish journals. People either work in the entertainment industry or are highly acclaimed in their profession. If people are highly acclaimed in their profession, then they often hold tenured and high-ranking positions at their workplace. If people are highly acclaimed in their profession, then they often receive glowing feedback and recommendations from their colleagues. If Emily is either both highly acclaimed in her profession and often holds tenured and high-ranking positions at her workplace, or she is neither highly acclaimed in her profession nor often holds tenured and high-ranking positions at her workplace, then Emily is not highly acclaimed in her profession.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Emily often holds tenured and high-ranking positions at her workplace.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nPublish(x, y) ::: x publishes journal y.\nWork(x, y) ::: x works in industry y.\nAward(x, y) ::: x is an award-winning novelist of y.\nHighlyAcclaimed(x) ::: x is highly acclaimed in her profession.\nTenured(x) ::: x holds a tenured position at her workplace.\nHighRanking(x) ::: x holds a high-ranking position at her workplace.\nPremises:\n∀x (Publish(x, y) → ¬Work(x, y)) ::: If people publish journals, then they do not work in the entertainment industry.\n∀x (Award(x, novel) → Publish(x, journal)) ::: All people who are award-winning novelists publish journals.\n∀x (HighlyAcclaimed(x) → ¬Work(x, entertainment)) ::: People either work in the entertainment industry or are highly acclaimed in their profession.\n∀x (HighlyAcclaimed(x)"
    ]
  },
  {
    "id": "FOLIO_train_759",
    "context": "If people publish journals, then they do not work in the entertainment industry. All people who are award-winning novelists publish journals. People either work in the entertainment industry or are highly acclaimed in their profession. If people are highly acclaimed in their profession, then they often hold tenured and high-ranking positions at their workplace. If people are highly acclaimed in their profession, then they often receive glowing feedback and recommendations from their colleagues. If Emily is either both highly acclaimed in her profession and often holds tenured and high-ranking positions at her workplace, or she is neither highly acclaimed in her profession nor often holds tenured and high-ranking positions at her workplace, then Emily is not highly acclaimed in her profession.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Emily often receives glowing feedback and recommendations from their colleagues and is an award-winning novelist.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPublish(x, y) ::: x publishes journal y.\nWork(x, y) ::: x works in industry y.\nAward(x, y) ::: x is an award-winning novelist.\nHighlyAcclaimed(x) ::: x is highly acclaimed in her profession.\nTenured(x) ::: x holds tenured position at her workplace.\nHighRanking(x) ::: x holds high-ranking position at her workplace.\nPremises:\n∀x (Publish(x, y) → ¬Work(x, y)) ::: If people publish journals, then they do not work in the entertainment industry.\n∀x (Award(x, y) → Publish(x, y)) ::: All people who are award-winning novelists publish journals.\n∀x (HighlyAcclaimed(x) → ¬Work(x, entertainment)) ::: People either work in the entertainment industry or are highly acclaimed in their profession.\n∀x (HighlyAcclaimed(x) → ¬Ten"
    ]
  },
  {
    "id": "FOLIO_train_760",
    "context": "If people publish journals, then they do not work in the entertainment industry. All people who are award-winning novelists publish journals. People either work in the entertainment industry or are highly acclaimed in their profession. If people are highly acclaimed in their profession, then they often hold tenured and high-ranking positions at their workplace. If people are highly acclaimed in their profession, then they often receive glowing feedback and recommendations from their colleagues. If Emily is either both highly acclaimed in her profession and often holds tenured and high-ranking positions at her workplace, or she is neither highly acclaimed in her profession nor often holds tenured and high-ranking positions at her workplace, then Emily is not highly acclaimed in her profession.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Emily either often receives glowing feedback and recommendations from her colleagues or is an award-winning novelist, then Emily does not both publish journals and is an award-winning novelist.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPublish(x, y) ::: x publishes journal y.\nEntertainmentIndustry(x) ::: x works in the entertainment industry.\nAwardWinningNovelist(x) ::: x is an award-winning novelist.\nHighlyAcclaimed(x) ::: x is highly acclaimed in her profession.\nTenuredAndHighRankingPosition(x) ::: x often holds tenured and high-ranking positions at her workplace.\nGlowingFeedbackAndRecommendations(x) ::: x often receives glowing feedback and recommendations from her colleagues.\nPremises:\n∀x (Publish(x, y) → ¬EntertainmentIndustry(x)) ::: If people publish journals, then they do not work in the entertainment industry.\n∀x (AwardWinningNovelist(x) → Publish(x, y)) ::: All people who are award-winning novelists publish journals.\n∀x (HighlyAcclaimed(x) → ¬EntertainmentIndustry(x)) ::: People either work in the entertainment industry or are highly acclaimed in their profession.\n∀x (HighlyAcclaimed(x) → ∃y TenuredAndHighRankingPosition(x, y)) ::: If people are highly acclaimed in their profession, then they often hold tenured and high-ranking positions at their workplace.\n∀x (HighlyAcclaimed(x) → ∃y GlowingFeedbackAndRecommendations(x, y)) ::: If people are highly acclaimed in their profession, then they often receive glowing feedback and recommendations from their colleagues.\n¬(HighlyAcclaimed(emily) ∧ Often(emily, TenuredAndHighRankingPosition)) ⊕ ¬(HighlyAcclaimed(emily) ∨ Often(emily, TenuredAndHighRankingPosition)) ::: If Emily is either both highly acclaimed in her profession and often holds tenured and high-ranking positions at her workplace, or she is neither highly acclaimed in her profession nor often holds tenured and high-ranking positions at her workplace, then Emily is not highly acclaimed in her profession.\nConclusion:\n¬(Often(emily, GlowingFeedbackAndRecommendations) ∧ Often(emily, AwardWinningNovelist)) ::: If Emily either often receives glowing feedback and recommendations from her colleagues or is an award-winning novelist, then Emily does not both publish journals and is an award-winning novelist.\n------"
    ]
  },
  {
    "id": "FOLIO_train_761",
    "context": "Thick as Thieves is a young adult fantasy novel, written by Megan Whalen Turner. Thick as Thieves was published by Greenwillow Books. If a book was published by a company, than the author of that book worked with the company that published the book. The fictional Mede Empire is where Thick as Thieves is set. The Mede Empire plots to swallow up some nearby countries. Attolia and Sounis are countries near the Mede Empire. Thick as Thieves was sold both as a hardcover and an e-book.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Megan Whalen Turner worked with Greenwillow Books.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nYoungAdult(x) ::: x is a young adult novel.\nFantasy(x) ::: x is a fantasy novel.\nPublish(x, y) ::: x is published by y.\nAuthor(x, y) ::: x is written by y.\nCompany(x) ::: x is a company.\nWorkWith(x, y) ::: x works with y.\nCountry(x) ::: x is a country.\nPlot(x, y) ::: x plots to swallow up y.\nNear(x, y) ::: x is near y.\nPremises:\nYoungAdult(thickAsThieves) ∧ Fantasy(thickAsThieves) ::: Thick as Thieves is a young adult fantasy novel.\nPublish(thickAsThieves, greenwillowBooks) ::: Thick as Thieves was published by Greenwillow Books.\nCompany(greenwillowBooks) ::: Greenwillow Books is a company.\nWorkWith(meganWhalenTurner, greenwillowBooks) ::: Megan Whalen Turner worked with Greenwillow Books.\nCountry(attolia) ∧ Country(sounis) ∧ Country(medeEmpire) ::: Attolia, Sounis, and the Mede Empire are countries.\nPlot(medeEmpire, attolia) ∧ Plot(medeEmpire, sounis) ::: The Mede Empire plots to swallow up Attolia and Sounis.\nNear(attolia, sounis) ::: Attolia and Sounis are near each other.\nConclusion:\nWorkWith(meganWhalenTurner, greenwillowBooks) ::: Megan Whalen Turner worked with Greenwillow Books.\n------\nProblem:\nThe following is a list of the top 100 most popular movies of 2016. The list is sorted by the number of votes received by each movie. The number of votes received by each movie is the number of votes received by that movie from the users of the Internet Movie Database. The number of votes received by each movie is the number of votes received by that movie from the users of the Internet Movie Database. The number of votes received by each movie is the number of votes received by that movie from the users of the Internet Movie Database. The number of votes received by each movie is the number of votes received by that movie from the users of the Internet Movie Database. The number of votes received by each movie is the number of votes received by that movie from the users of the Internet Movie Database. The number of votes received by each movie is the number of votes received by that movie from the users of"
    ]
  },
  {
    "id": "FOLIO_train_762",
    "context": "Thick as Thieves is a young adult fantasy novel, written by Megan Whalen Turner. Thick as Thieves was published by Greenwillow Books. If a book was published by a company, than the author of that book worked with the company that published the book. The fictional Mede Empire is where Thick as Thieves is set. The Mede Empire plots to swallow up some nearby countries. Attolia and Sounis are countries near the Mede Empire. Thick as Thieves was sold both as a hardcover and an e-book.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Mede Empire plans to swallow up Attolia.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nYoungAdult(x) ::: x is a young adult novel.\nFantasy(x) ::: x is a fantasy novel.\nPublish(x, y) ::: x is published by company y.\nWorkWith(x, y) ::: x works with company y.\nAuthor(x, y) ::: x is the author of y.\nBook(x) ::: x is a book.\nHardcover(x) ::: x is a hardcover book.\nEbook(x) ::: x is an ebook.\nSet(x, y) ::: x is set in y.\nPlot(x, y) ::: x plots to y.\nCountry(x) ::: x is a country.\nNear(x, y) ::: x is near y.\nPremises:\nYoungAdult(thickAsThieves) ∧ Fantasy(thickAsThieves) ::: Thick as Thieves is a young adult fantasy novel.\nBook(thickAsThieves) ∧ Publish(thickAsThieves, greenwillowBooks) ∧ Author(thickAsThieves, meganWhalenTurner) ::: Thick as Thieves is a book published by Greenwillow Books.\nSet(thickAsThieves, medeEmpire) ∧ Country(medeEmpire) ::: Thick as Thieves is set in the Mede Empire.\nCountry(attolia) ∧ Country(sounis) ∧ Near(attolia, sounis) ∧ Near(sounis, medeEmpire) ::: Attolia and Sounis are countries near the Mede Empire.\n∃x (Book(x) ∧ Publish(x, greenwillowBooks) ∧ Author(x, meganWhalenTurner) ∧ Hardcover(x)) ::: A book was published by Greenwillow Books and was written by Megan Whalen Turner.\n∃x (Book(x) ∧ Publish(x, greenwillowBooks) ∧ Author(x, meganWhalenTurner) ∧ Ebook(x)) ::: A book was published by Greenwillow Books and was written by Megan Whalen Turner.\nConclusion:\nPlot(medeEmpire, swallowUp) ::: The Mede Empire plots to swallow up some nearby countries.\n------\nProblem:\nThe following is a list of the top 100 most popular movies of 2016. The list is sorted by the number of votes received by each movie. The number of votes received by each movie is the number of votes received by that movie from the users of the Internet Movie Database. The number"
    ]
  },
  {
    "id": "FOLIO_train_763",
    "context": "Thick as Thieves is a young adult fantasy novel, written by Megan Whalen Turner. Thick as Thieves was published by Greenwillow Books. If a book was published by a company, than the author of that book worked with the company that published the book. The fictional Mede Empire is where Thick as Thieves is set. The Mede Empire plots to swallow up some nearby countries. Attolia and Sounis are countries near the Mede Empire. Thick as Thieves was sold both as a hardcover and an e-book.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Thick as Thieves is not set in the mede empire.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nYoungAdult(x) ::: x is a young adult novel.\nFantasy(x) ::: x is a fantasy novel.\nPublish(x, y) ::: x is published by company y.\nWorkWith(x, y) ::: x works with company y.\nSet(x, y) ::: x is set in y.\nPlot(x, y) ::: x plots to y.\nCountry(x) ::: x is a country.\nNear(x, y) ::: x is near y.\nSold(x, y) ::: x is sold as y.\nPremises:\nYoungAdult(thickAsThieves) ∧ Fantasy(thickAsThieves) ::: Thick as Thieves is a young adult fantasy novel.\nPublish(thickAsThieves, greenwillowBooks) ::: Thick as Thieves was published by Greenwillow Books.\nSet(thickAsThieves, medeEmpire) ::: Thick as Thieves is set in the mede empire.\nCountry(attolia) ∧ Country(sounis) ∧ Near(attolia, medeEmpire) ∧ Near(sounis, medeEmpire) ::: Attolia and Sounis are countries near the Mede Empire.\nCountry(attolia) ∧ Country(sounis) ∧ Near(attolia, medeEmpire) ∧ Near(sounis, medeEmpire) ::: Attolia and Sounis are countries near the Mede Empire.\nSold(thickAsThieves, hardcover) ∧ Sold(thickAsThieves, ebook) ::: Thick as Thieves was sold both as a hardcover and an e-book.\nConclusion:\nSet(thickAsThieves, medeEmpire) ⊕ Set(thickAsThieves, attolia) ⊕ Set(thickAsThieves, sounis) ::: Thick as Thieves is not set in the mede empire.\n------\nProblem:\nThe following is a list of the top 100 most popular baby names in the United States in 2016.\n1. Liam\n2. Noah\n3. William\n4. James\n5. Benjamin\n6. Mason\n7. Elijah\n8. Michael\n9. Jacob\n10. Alexander\n11. Ethan\n12. Daniel\n13. Aiden\n14. Lucas\n15. Logan\n16. Oliver\n17. Jack\n18. Jayden\n19. David\n20. Samuel\n21. John\n22. Henry\n2"
    ]
  },
  {
    "id": "FOLIO_train_764",
    "context": "Thick as Thieves is a young adult fantasy novel, written by Megan Whalen Turner. Thick as Thieves was published by Greenwillow Books. If a book was published by a company, than the author of that book worked with the company that published the book. The fictional Mede Empire is where Thick as Thieves is set. The Mede Empire plots to swallow up some nearby countries. Attolia and Sounis are countries near the Mede Empire. Thick as Thieves was sold both as a hardcover and an e-book.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Megan Whalen Turner did not work with Greenwillow Books.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nYoungAdult(x) ::: x is a young adult novel.\nFantasy(x) ::: x is a fantasy novel.\nWorkWith(x, y) ::: x worked with y.\nPublish(x, y) ::: x was published by y.\nCompany(x) ::: x is a company.\nAuthor(x, y) ::: x is the author of y.\nBook(x) ::: x is a book.\nHardcover(x) ::: x is a hardcover.\nEbook(x) ::: x is an ebook.\nPremises:\nYoungAdult(thickAsThieves) ∧ Fantasy(thickAsThieves) ::: Thick as Thieves is a young adult fantasy novel.\nPublish(thickAsThieves, greenwillowBooks) ::: Thick as Thieves was published by Greenwillow Books.\nCompany(greenwillowBooks) ::: Greenwillow Books is a company.\nAuthor(meganWhalenTurner, thickAsThieves) ::: Megan Whalen Turner is the author of Thick as Thieves.\nBook(thickAsThieves) ::: Thick as Thieves is a book.\nHardcover(thickAsThieves) ∧ Ebook(thickAsThieves) ::: Thick as Thieves was sold both as a hardcover and an ebook.\nConclusion:\n¬WorkWith(meganWhalenTurner, greenwillowBooks) ::: Megan Whalen Turner did not work with Greenwillow Books.\n------\nProblem:\nThe following is a list of the top 100 most popular movies of 2016. The list is sorted by the number of votes received by each movie. The number of votes received by each movie is the number of votes received by that movie from users of the Internet Movie Database. The number of votes received by each movie is the number of votes received by that movie from users of the Internet Movie Database. The number of votes received by each movie is the number of votes received by that movie from users of the Internet Movie Database. The number of votes received by each movie is the number of votes received by that movie from users of the Internet Movie Database. The number of votes received by each movie is the number of votes received by that movie from users of the Internet Movie Database. The number of votes received by each movie is the number of votes received by that movie from users of the Internet Movie Database. The number of votes received by each movie is the number of votes received by that movie from users of the Internet Movie Database. The number of votes received by each movie is the number of votes received by that movie from users of the Internet"
    ]
  },
  {
    "id": "FOLIO_train_765",
    "context": "WeTab is a MeeGo-based tablet computer. There is a WeTab product. WeTab was announced by Neofonie. Neofonie is a German producer. Germans speak English or German.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There is a tablet computer that was announced by a German.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nTabletComputer(x) ::: x is a tablet computer.\nWeTab(x) ::: x is a WeTab product.\nProduct(x) ::: x is a product.\nAnnounce(x, y) ::: x announces y.\nGerman(x) ::: x is a German.\nSpeak(x, y) ::: x speaks y.\nPremises:\nTabletComputer(WeTab) ∧ Product(WeTab) ∧ Announce(Neofonie, WeTab) ∧ German(Neofonie) ::: WeTab is a MeeGo-based tablet computer. There is a WeTab product. WeTab was announced by Neofonie. Neofonie is a German producer.\n∀x (German(x) → Speak(x, English)) ::: Germans speak English or German.\nConclusion:\n∃x (TabletComputer(x) ∧ Announce(x, y) ∧ German(y)) ::: There is a tablet computer that was announced by a German.\n------\nProblem:\nThe following is a list of the top 100 most popular baby names in the United States in 2010.\n1. Jacob\n2. Isabella\n3. Mason\n4. Ethan\n5. Michael\n6. Emily\n7. Ava\n8. Abigail\n9. Madison\n10. Elizabeth\n11. Alexander\n12. Olivia\n13. William\n14. Hannah\n15. Matthew\n16. Samuel\n17. Aiden\n18. Daniel\n19. Emma\n20. Nicholas\n21. Jayden\n22. Anthony\n23. Chloe\n24. Joshua\n25. Christian\n26. Elizabeth\n27. Mia\n28. Andrew\n29. Emily\n30. Avery\n31. Ryan\n32. Abigail\n33. Ethan\n34. Benjamin\n35. Lily\n36. Noah\n37. Aaron\n38. Logan\n39. Emma\n40. Jackson\n41. Mason\n42. Madison\n43. Carter\n44. Aiden\n45. Jayden\n46. Michael\n47. Alexander\n48. Olivia\n49. William\n50. Matthew\n51. Samuel\n52. Anthony\n53. Chloe\n54. Joshua\n55. Christian\n56. Avery\n57. Ryan\n58. Abigail\n59. Ethan\n6"
    ]
  },
  {
    "id": "FOLIO_train_766",
    "context": "WeTab is a MeeGo-based tablet computer. There is a WeTab product. WeTab was announced by Neofonie. Neofonie is a German producer. Germans speak English or German.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Neofonie doesn't speak English or German.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nWeTab(x) ::: x is a WeTab product.\nProduct(x) ::: x is a product.\nAnnounce(x, y) ::: x is announced by y.\nProducer(x) ::: x is a producer.\nGerman(x) ::: x is a German.\nSpeak(x, y) ::: x speaks y.\nEnglish(y) ::: y is English.\nPremises:\nWeTab(product) ∧ Product(product) ∧ Announce(product, neofonie) ∧ Producer(neofonie) ::: WeTab is a MeeGo-based tablet computer. There is a WeTab product. WeTab was announced by Neofonie. Neofonie is a German producer.\nGerman(neofonie) ∧ Speak(neofonie, english) ∧ Speak(neofonie, german) ::: Germans speak English or German.\nConclusion:\n¬Speak(neofonie, english) ∨ ¬Speak(neofonie, german) ::: Neofonie doesn't speak English or German.\n------\nProblem:\nThe following is a list of the top 100 most popular baby names in the United States in 2010.\n1. Jacob\n2. Isabella\n3. Mason\n4. Ethan\n5. Michael\n6. Emily\n7. Ava\n8. Abigail\n9. Madison\n10. Elizabeth\n11. Alexander\n12. Olivia\n13. William\n14. Hannah\n15. Matthew\n16. Samuel\n17. Aiden\n18. Daniel\n19. Emma\n20. Nicholas\n21. Jayden\n22. Anthony\n23. Chloe\n24. Joseph\n25. Mia\n26. Christian\n27. Elizabeth\n28. Joshua\n29. Avery\n30. Andrew\n31. Noah\n32. Logan\n33. Mason\n34. Ethan\n35. Benjamin\n36. Emily\n37. Ava\n38. Abigail\n39. Madison\n40. Elizabeth\n41. Alexander\n42. Olivia\n43. William\n44. Hannah\n45. Matthew\n46. Samuel\n47. Aiden\n48. Daniel\n49. Emma\n50. Nicholas\n51. Jayden\n52. Anthony\n53. Chloe\n54. Joseph\n55. Mia\n56. Christian\n57."
    ]
  },
  {
    "id": "FOLIO_train_767",
    "context": "Some employees working in business analysis are good at math. All employees working in business analysis are working in this company. No employees working in this company are from China. All employees working in software engineering are from China. James is working in software engineering.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James is good at math.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nEmployee(x) ::: x is an employee.\nBusinessAnalysis(x) ::: x is working in business analysis.\nSoftwareEngineering(x) ::: x is working in software engineering.\nChina(x) ::: x is from China.\nGoodAtMath(x) ::: x is good at math.\nPremises:\n∀x (BusinessAnalysis(x) → Employee(x)) ::: All employees working in business analysis are working in this company.\n¬∃x (China(x) ∧ Employee(x)) ::: No employees working in this company are from China.\n∀x (SoftwareEngineering(x) → China(x)) ::: All employees working in software engineering are from China.\nEmployee(james) ∧ SoftwareEngineering(james) ::: James is working in software engineering.\nConclusion:\nGoodAtMath(james) ::: James is good at math.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\n###\nPredicates:\nDependent(x) ::: x is a person dependent on caffeine.\nDrinks(x) ::: x regularly drinks coffee.\nJokes(x) ::: x jokes about being addicted to caffeine.\nUnaware(x) ::: x is unaware that caffeine is a drug.\nStudent(x) ::: x is a student.\nPremises:\n∀x (Drinks(x) → Dependent(x)) ::: All people who regularly drink coffee are dependent on caffeine.\n∀x (Drinks(x) ⊕ Jokes(x)) ::: People either regularly drink coffee or joke about being addicted to caffeine.\n∀x (Jokes(x) → ¬Unaware(x)) :"
    ]
  },
  {
    "id": "FOLIO_train_768",
    "context": "Some employees working in business analysis are good at math. All employees working in business analysis are working in this company. No employees working in this company are from China. All employees working in software engineering are from China. James is working in software engineering.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James is not good at math and he is working in business analysis.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nEmployee(x) ::: x is an employee.\nBusinessAnalysis(x) ::: x is working in business analysis.\nSoftwareEngineering(x) ::: x is working in software engineering.\nChina(x) ::: x is from China.\nGoodAtMath(x) ::: x is good at math.\nPremises:\n∀x (BusinessAnalysis(x) → Employee(x)) ::: All employees working in business analysis are working in this company.\n∀x (Employee(x) → ¬China(x)) ::: No employees working in this company are from China.\n∀x (SoftwareEngineering(x) → China(x)) ::: All employees working in software engineering are from China.\nBusinessAnalysis(james) ∧ SoftwareEngineering(james) ::: James is working in software engineering.\nConclusion:\nGoodAtMath(james) ⊕ ¬BusinessAnalysis(james) ::: James is not good at math and he is working in business analysis.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\n###\nPredicates:\nDependent(x) ::: x is a person dependent on caffeine.\nDrinks(x) ::: x regularly drinks coffee.\nJokes(x) ::: x jokes about being addicted to caffeine.\nUnaware(x) ::: x is unaware that caffeine is a drug.\nStudent(x) ::: x is a student.\nPremises:\n∀x (Drinks(x) → Dependent(x)) ::: All people who regularly drink coffee are dependent on caffeine.\n∀x (Drinks(x) ⊕ Jokes(x)) ::: People either regularly drink coffee or joke about being addicted to c"
    ]
  },
  {
    "id": "FOLIO_train_769",
    "context": "Some employees working in business analysis are good at math. All employees working in business analysis are working in this company. No employees working in this company are from China. All employees working in software engineering are from China. James is working in software engineering.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If James is not good at math and he is in business analysis, then he is neither working in this company nor working in software engineering.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nBusinessAnalysis(x) ::: x is working in business analysis.\nSoftwareEngineering(x) ::: x is working in software engineering.\nChina(x) ::: x is from China.\nGoodAtMath(x) ::: x is good at math.\nCompany(x) ::: x is this company.\nPremises:\n∀x (BusinessAnalysis(x) → GoodAtMath(x)) ::: Some employees working in business analysis are good at math.\nAll(x, y) ::: x is working in business analysis and y is working in this company.\n¬All(x, y) ::: x is working in software engineering and y is from China.\nBusinessAnalysis(james) ::: James is working in business analysis.\nSoftwareEngineering(james) ::: James is working in software engineering.\nChina(james) ::: James is from China.\nConclusion:\n¬(GoodAtMath(james) ∧ Company(james)) ∨ ¬(GoodAtMath(james) ∧ SoftwareEngineering(james)) ::: If James is not good at math and he is in business analysis, then he is neither working in this company nor working in software engineering.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.\n###\nPredicates:\nDependent(x) ::: x is a person dependent on caffeine.\nDrinks(x) ::: x regularly drinks coffee.\nJokes(x) ::: x jokes about being addicted to caffeine."
    ]
  },
  {
    "id": "FOLIO_train_770",
    "context": "The party provides five kinds of fruits: strawberry, orange, blueberry, grape, and cherry. All fruits are provided in the same weight at the beginning of the party. If the fruit had the lowest remaining weight at the end of the party, then it means it was the most popular fruit. At the end of the party, strawberries had the lowest remaining weight. At the end of the party, the amount of leftover blueberries was lower than that of cherries. Benjamin only ate oranges and grapes at the party.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Blueberries were the most popular fruit at the party.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFruit(x) ::: x is a fruit.\nStrawberry(x) ::: x is a strawberry.\nOrange(x) ::: x is an orange.\nBlueberry(x) ::: x is a blueberry.\nGrape(x) ::: x is a grape.\nCherry(x) ::: x is a cherry.\nWeight(x) ::: x is a weight.\nLowest(x, y) ::: x is the lowest of y.\nRemaining(x, y) ::: x is the remaining of y.\nPopular(x) ::: x is the most popular.\nPremises:\n∀x (Fruit(x) → Weight(x)) ::: All fruits are provided in the same weight at the beginning of the party.\n∀x (Fruit(x) → Lowest(x, x) ⊕ Lowest(x, x)) ::: If the fruit had the lowest remaining weight at the end of the party, then it means it was the most popular fruit.\nWeight(strawberry) ∧ Lowest(strawberry, strawberry) ::: At the end of the party, strawberries had the lowest remaining weight.\nWeight(blueberry) ∧ Lowest(blueberry, cherry) ::: At the end of the party, the amount of leftover blueberries was lower than that of cherries.\nBenjamin(orange) ∧ Benjamin(grape) ::: Benjamin only ate oranges and grapes at the party.\nConclusion:\nPopular(blueberry) ::: Blueberries were the most popular fruit at the party.\n------"
    ]
  },
  {
    "id": "FOLIO_train_771",
    "context": "The party provides five kinds of fruits: strawberry, orange, blueberry, grape, and cherry. All fruits are provided in the same weight at the beginning of the party. If the fruit had the lowest remaining weight at the end of the party, then it means it was the most popular fruit. At the end of the party, strawberries had the lowest remaining weight. At the end of the party, the amount of leftover blueberries was lower than that of cherries. Benjamin only ate oranges and grapes at the party.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Cherries were the most popular fruit at the party.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nFruit(x) ::: x is a fruit.\nWeight(x) ::: x has weight w.\nLowest(x, y) ::: x has the lowest weight among y.\nPopular(x) ::: x is the most popular.\nRemaining(x, y) ::: x has remaining weight y.\nPremises:\nFruit(strawberry) ∧ Fruit(orange) ∧ Fruit(blueberry) ∧ Fruit(grape) ∧ Fruit(cherry) ::: The party provides five kinds of fruits: strawberry, orange, blueberry, grape, and cherry.\n∀x (Fruit(x) → Weight(x)) ::: All fruits are provided in the same weight at the beginning of the party.\nLowest(strawberry, remainingWeight) ::: At the end of the party, strawberries had the lowest remaining weight.\n¬Lowest(cherry, remainingWeight) ::: At the end of the party, the amount of leftover blueberries was lower than that of cherries.\n¬Popular(cherry) ::: Cherries were not the most popular fruit at the party.\nBenjamin(orange) ∧ Benjamin(grape) ::: Benjamin only ate oranges and grapes at the party.\nConclusion:\nPopular(cherry) ::: Cherries were the most popular fruit at the party.\n------\nProblem:\nThe party provides five kinds of fruits: strawberry, orange, blueberry, grape, and cherry. All fruits are provided in the same weight at the beginning of the party. If the fruit had the"
    ]
  },
  {
    "id": "FOLIO_train_772",
    "context": "The party provides five kinds of fruits: strawberry, orange, blueberry, grape, and cherry. All fruits are provided in the same weight at the beginning of the party. If the fruit had the lowest remaining weight at the end of the party, then it means it was the most popular fruit. At the end of the party, strawberries had the lowest remaining weight. At the end of the party, the amount of leftover blueberries was lower than that of cherries. Benjamin only ate oranges and grapes at the party.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Benjamin ate blueberries at the party.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nFruit(x) ::: x is a fruit.\nStrawberry(x) ::: x is a strawberry.\nOrange(x) ::: x is an orange.\nBlueberry(x) ::: x is a blueberry.\nGrape(x) ::: x is a grape.\nCherry(x) ::: x is a cherry.\nWeight(x) ::: x is a weight.\nLowest(x, y) ::: x is the lowest of y.\nRemaining(x, y) ::: x is the remaining of y.\nEat(x, y) ::: x eats y.\nPremises:\nFruit(strawberry) ∧ Fruit(orange) ∧ Fruit(blueberry) ∧ Fruit(grape) ∧ Fruit(cherry) ::: The party provides five kinds of fruits: strawberry, orange, blueberry, grape, and cherry.\n∀x (Fruit(x) → Weight(x)) ::: All fruits are provided in the same weight at the beginning of the party.\n∃x (Weight(x) ∧ Lowest(x, y) → Remaining(x, y)) ::: If the fruit had the lowest remaining weight at the end of the party, then it means it was the most popular fruit.\nWeight(strawberry) ∧ Lowest(strawberry, y) → Remaining(strawberry, y) ::: At the end of the party, strawberries had the lowest remaining weight.\n∃x (Weight(x) ∧ Lowest(x, y) → Remaining(x, y))"
    ]
  },
  {
    "id": "FOLIO_train_773",
    "context": "All students who attend in person have registered for the conference. Students either attend the conference in person or remotely. No students from China attend the conference remotely. James attends the conference but he does not attend the conference remotely. Jack attends the conference and he is a student from China.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James attends the conference but not in person.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nAttend(x, y) ::: x attends y.\nRegister(x, y) ::: x registers for y.\nStudent(x) ::: x is a student.\nChina(x) ::: x is from China.\nPremises:\n∀x (Attend(x, conference) → Register(x, conference)) ::: All students who attend in person have registered for the conference.\n∀x (Attend(x, conference) ⊕ Attend(x, conference, remotely)) ::: Students either attend the conference in person or remotely.\n¬(Attend(x, conference, remotely) ∧ China(x)) ::: No students from China attend the conference remotely.\nAttend(james, conference) ∧ ¬Attend(james, conference, remotely) ::: James attends the conference but he does not attend the conference remotely.\nAttend(jack, conference) ∧ China(jack) ::: Jack attends the conference and he is a student from China.\nConclusion:\nAttend(jack, conference, remotely) ::: Jack attends the conference and he is a student from China.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine"
    ]
  },
  {
    "id": "FOLIO_train_774",
    "context": "All students who attend in person have registered for the conference. Students either attend the conference in person or remotely. No students from China attend the conference remotely. James attends the conference but he does not attend the conference remotely. Jack attends the conference and he is a student from China.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jack attends the conference in person.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nAttend(x, y) ::: x attends y.\nRegister(x, y) ::: x registers for y.\nStudent(x) ::: x is a student.\nChina(x) ::: x is from China.\nPremises:\n∀x (Attend(x, conference) → Register(x, conference)) ::: All students who attend in person have registered for the conference.\n∀x (Attend(x, conference) ⊕ Attend(x, remote)) ::: Students either attend the conference in person or remotely.\n¬(Attend(x, remote) ∧ China(x)) ::: No students from China attend the conference remotely.\nAttend(james, conference) ∧ ¬Attend(james, remote) ::: James attends the conference but he does not attend the conference remotely.\nAttend(jack, conference) ∧ Student(jack) ∧ China(jack) ::: Jack attends the conference and he is a student from China.\nConclusion:\nAttend(jack, inPerson) ::: Jack attends the conference in person.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on c"
    ]
  },
  {
    "id": "FOLIO_train_775",
    "context": "All students who attend in person have registered for the conference. Students either attend the conference in person or remotely. No students from China attend the conference remotely. James attends the conference but he does not attend the conference remotely. Jack attends the conference and he is a student from China.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jack has registered for the conference.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nAttend(x, y) ::: x attends y.\nRegister(x, y) ::: x registers for y.\nStudent(x) ::: x is a student.\nChina(x) ::: x is from China.\nPremises:\n∀x (Attend(x, conference) → Register(x, conference)) ::: All students who attend in person have registered for the conference.\n∀x (Attend(x, conference) ⊕ Attend(x, remote)) ::: Students either attend the conference in person or remotely.\n¬(Attend(x, remote) ∧ China(x)) ::: No students from China attend the conference remotely.\nAttend(james, conference) ∧ ¬Attend(james, remote) ::: James attends the conference but he does not attend the conference remotely.\nAttend(jack, conference) ∧ China(jack) ::: Jack attends the conference and he is a student from China.\nConclusion:\nRegister(jack, conference) ::: Jack has registered for the conference.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither"
    ]
  },
  {
    "id": "FOLIO_train_776",
    "context": "David Ha'ivri is a political strategist. If you are born in Israel to at least one Israeli parent, then you receive citizenship at birth. David Ha'ivri emigrated to the United States from Israel, where he was born to Israeli parents. Several Zionist leaders have been elected to the Shomron Regional Municipal council. David Ha'ivri is a Zionist leader.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? David Ha'ivri is an Israeli citizen.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nIsraeli(x) ::: x is an Israeli citizen.\nBorn(x, y) ::: x was born in year y.\nParent(x, y) ::: x is the parent of y.\nCitizen(x, y) ::: x is a citizen of y.\nEmigrate(x, y) ::: x emigrated from y to z.\nPoliticalStrategist(x) ::: x is a political strategist.\nZionist(x) ::: x is a Zionist.\nElect(x, y) ::: x was elected to y.\nPremises:\nBorn(david, year1960) ∧ Parent(david, israeliParent1) ∧ Parent(david, israeliParent2) ::: David Ha'ivri was born in year 1960 to at least one Israeli parent.\nEmigrate(david, israel) ∧ Citizen(david, israel) ::: David Ha'ivri emigrated to the United States from Israel, where he was born to Israeli parents.\nZionist(david) ::: David Ha'ivri is a Zionist leader.\n∃y ∃x (Zionist(x) ∧ Elect(x, y)) ::: Several Zionist leaders have been elected to the Shomron Regional Municipal council.\nConclusion:\nIsraeli(david) ::: David Ha'ivri is an Israeli citizen.\n------\nProblem:\nThe following is a list of the top 100 most popular baby names in the United States in 2013."
    ]
  },
  {
    "id": "FOLIO_train_777",
    "context": "David Ha'ivri is a political strategist. If you are born in Israel to at least one Israeli parent, then you receive citizenship at birth. David Ha'ivri emigrated to the United States from Israel, where he was born to Israeli parents. Several Zionist leaders have been elected to the Shomron Regional Municipal council. David Ha'ivri is a Zionist leader.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? David Ha'ivri is a United States citizen.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nIsraeli(x) ::: x is an Israeli.\nUnitedStatesCitizen(x) ::: x is a United States citizen.\nBorn(x, y) ::: x is born in year y.\nParent(x, y) ::: x is the parent of y.\nCitizen(x, y) ::: x is a citizen of y.\nEmigrate(x, y) ::: x emigrates from y to z.\nZionist(x) ::: x is a Zionist.\nLeader(x) ::: x is a leader.\nPremises:\nIsraeli(david) ∧ Born(david, year1960) ::: David Ha'ivri is an Israeli who was born in year 1960.\nIsraeli(parent1) ∧ Israeli(parent2) ∧ Born(david, year1960) ∧ Parent(parent1, david) ∧ Parent(parent2, david) ::: David Ha'ivri is born in year 1960 to at least one Israeli parent.\nUnitedStatesCitizen(david) ∧ Emigrate(david, israel) ::: David Ha'ivri is a United States citizen who emigrated from Israel.\nZionist(david) ∧ Leader(david) ::: David Ha'ivri is a Zionist leader.\n∃y ∃x (Zionist(x) ∧ Leader(x) ∧ Elected(x, y)) ::: Several Zionist leaders have been elected to the Shomron"
    ]
  },
  {
    "id": "FOLIO_train_778",
    "context": "David Ha'ivri is a political strategist. If you are born in Israel to at least one Israeli parent, then you receive citizenship at birth. David Ha'ivri emigrated to the United States from Israel, where he was born to Israeli parents. Several Zionist leaders have been elected to the Shomron Regional Municipal council. David Ha'ivri is a Zionist leader.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? David Ha'ivri has been elected to the Shomron Regional Municipal council.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nIsraeli(x) ::: x is an Israeli.\nBorn(x, y) ::: x was born in year y.\nCitizen(x, y) ::: x is a citizen of y.\nEmigrate(x, y) ::: x emigrated from y to z.\nParent(x, y) ::: x is the parent of y.\nPoliticalStrategist(x) ::: x is a political strategist.\nZionist(x) ::: x is a Zionist.\nElected(x, y) ::: x was elected to y.\nPremises:\nBorn(david, year1960) ∧ Israeli(david) ∧ Parent(david, israeliParent) ∧ Born(israeliParent, year1940) ∧ Born(israeliParent, israel) ::: David Ha'ivri was born in Israel to at least one Israeli parent.\nEmigrate(david, unitedStates) ∧ Born(david, year1960) ∧ Israeli(david) ∧ Parent(david, israeliParent) ∧ Born(israeliParent, year1940) ∧ Born(israeliParent, israel) ::: David Ha'ivri emigrated to the United States from Israel, where he was born to Israeli parents.\nZionist(david) ∧ PoliticalStrategist(david) ::: David Ha'ivri is a Zionist leader.\n∃y ∃x (Zionist(x) ∧ Elected(x, y)) :"
    ]
  },
  {
    "id": "FOLIO_train_779",
    "context": "Mary has the flu. Flu and influenza are the same disease. Susan doesn't have influenza.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Either Mary or Susan has influenza.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nHas(x, y) ::: x has y.\nFlu(x) ::: x has the flu.\nInfluenza(x) ::: x has influenza.\nPremises:\nFlu(mary) ∧ Influenza(flu) ::: Mary has the flu.\nFlu(flu) ∧ Influenza(influenza) ::: Flu and influenza are the same disease.\n¬Influenza(susan) ::: Susan doesn't have influenza.\nConclusion:\nInfluenza(susan) ∨ Influenza(mary) ::: Either Mary or Susan has influenza.\n------\nProblem:\nThe following is a list of the top 100 most popular baby names in the United States in 2009.\n1. Jacob\n2. Michael\n3. Ethan\n4. Joshua\n5. Matthew\n6. Daniel\n7. William\n8. Alexander\n9. Christopher\n10. Andrew\n11. Anthony\n12. Samuel\n13. David\n14. Joseph\n15. Nicholas\n16. Ryan\n17. Benjamin\n18. John\n19. Jayden\n20. Aiden\n21. Noah\n22. Tyler\n23. James\n24. Christian\n25. Dylan\n26. Logan\n27. Elijah\n28. Joshua\n29. Jordan\n30. Connor\n31. Caleb\n32. Jesse\n33. Matthew\n34. Aaron\n35. Brandon\n36. Lucas\n37. Gavin"
    ]
  },
  {
    "id": "FOLIO_train_780",
    "context": "James Cocks was a British lawyer. James Cocks was a Whig politician who sat in the House of Commons. A British is a European. Any lawyer is familiar with laws. Some Whigs speak French.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? No lawyer ever sat in the House of Commons.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nBritish(x) ::: x is a British person.\nEuropean(x) ::: x is a European person.\nWhig(x) ::: x is a Whig.\nPolitician(x) ::: x is a politician.\nLawyer(x) ::: x is a lawyer.\nFamiliar(x, y) ::: x is familiar with y.\nSpeak(x, y) ::: x speaks y.\nPremises:\nBritish(james) ∧ Politician(james) ∧ Whig(james) ∧ Lawyer(james) ::: James Cocks was a British lawyer. James Cocks was a Whig politician who sat in the House of Commons.\nBritish(james) ∧ European(james) ::: A British is a European.\n∀x (Lawyer(x) → Familiar(x, laws)) ::: Any lawyer is familiar with laws.\n∃x (Whig(x) ∧ Speak(x, french)) ::: Some Whigs speak French.\nConclusion:\n¬Familiar(james, laws) ::: No lawyer ever sat in the House of Commons.\n------"
    ]
  },
  {
    "id": "FOLIO_train_781",
    "context": "James Cocks was a British lawyer. James Cocks was a Whig politician who sat in the House of Commons. A British is a European. Any lawyer is familiar with laws. Some Whigs speak French.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Some European is familiar with laws.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nBritish(x) ::: x is a British person.\nEuropean(x) ::: x is a European person.\nWhig(x) ::: x is a Whig.\nLawyer(x) ::: x is a lawyer.\nFamiliar(x, y) ::: x is familiar with y.\nSpeak(x, y) ::: x speaks y.\nPremises:\nBritish(james) ∧ Whig(james) ∧ Lawyer(james) ::: James Cocks was a British lawyer.\nWhig(james) ∧ Speak(james, french) ::: James Cocks was a Whig politician who sat in the House of Commons.\n∀x (Lawyer(x) → Familiar(x, laws)) ::: Any lawyer is familiar with laws.\n∃x (Whig(x) ∧ Speak(x, french)) ::: Some Whigs speak French.\nConclusion:\nFamiliar(james, laws) ::: Some European is familiar with laws.\n------\nProblem:\nA person is a person who is a person. A person is a person who is a person. A person is a person"
    ]
  },
  {
    "id": "FOLIO_train_782",
    "context": "James Cocks was a British lawyer. James Cocks was a Whig politician who sat in the House of Commons. A British is a European. Any lawyer is familiar with laws. Some Whigs speak French.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James Cocks speaks French.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nBritish(x) ::: x is a British person.\nEuropean(x) ::: x is a European person.\nWhig(x) ::: x is a Whig.\nPolitician(x) ::: x is a politician.\nLawyer(x) ::: x is a lawyer.\nFamiliar(x, y) ::: x is familiar with y.\nSpeak(x, y) ::: x speaks y.\nPremises:\nBritish(james) ∧ Politician(james) ∧ Whig(james) ::: James Cocks was a British lawyer.\nWhig(james) ∧ Speak(james, french) ::: James Cocks was a Whig politician who sat in the House of Commons.\n∀x (Lawyer(x) → Familiar(x, laws)) ::: Any lawyer is familiar with laws.\n∃x (Whig(x) ∧ Speak(x, french)) ::: Some Whigs speak French.\nConclusion:\nSpeak(james, french) ::: James Cocks speaks French.\n------\nProblem:\nA person is a person who is a person"
    ]
  },
  {
    "id": "FOLIO_train_783",
    "context": "Beasts of Prey is either a fantasy novel or a science fiction novel. Science fiction novels are not about mythological creatures Beasts of Prey Is about a creature known as the Shetani. Shetanis are mythological.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Beasts of prey is a fantasy novel.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nFantasy(x) ::: x is a fantasy novel.\nScienceFiction(x) ::: x is a science fiction novel.\nBeastOfPrey(x) ::: x is a novel called Beasts of Prey.\nShetani(x) ::: x is a creature known as the Shetani.\nMythological(x) ::: x is a mythological creature.\nPremises:\nBeastOfPrey(beastsOfPrey) ∧ (Fantasy(beastsOfPrey) ⊕ ScienceFiction(beastsOfPrey)) ::: Beasts of Prey is either a fantasy novel or a science fiction novel.\nShetani(shetani) ∧ Mythological(shetani) ::: Shetanis are mythological.\nBeastOfPrey(beastsOfPrey) ∧ Shetani(shetani) ::: Beasts of Prey is about a creature known as the Shetani.\nConclusion:\nFantasy(beastsOfPrey) ::: Beasts of Prey is a fantasy novel.\n------\nProblem:\nThe following is a list of the top 100 most popular baby"
    ]
  },
  {
    "id": "FOLIO_train_784",
    "context": "Beasts of Prey is either a fantasy novel or a science fiction novel. Science fiction novels are not about mythological creatures Beasts of Prey Is about a creature known as the Shetani. Shetanis are mythological.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Beasts of prey isn't a science fiction novel.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nFantasy(x) ::: x is a fantasy novel.\nScienceFiction(x) ::: x is a science fiction novel.\nBeastOfPrey(x) ::: x is a novel Beasts of Prey.\nShetani(x) ::: x is a creature known as the Shetani.\nMythological(x) ::: x is a mythological creature.\nPremises:\nBeastOfPrey(beastsOfPrey) ∧ (Fantasy(beastsOfPrey) ⊕ ScienceFiction(beastsOfPrey)) ::: Beasts of Prey is either a fantasy novel or a science fiction novel.\nShetani(shetani) ∧ Mythological(shetani) ::: Shetanis are mythological.\nScienceFiction(beastsOfPrey) → ¬Mythological(shetani) ::: Science fiction novels are not about mythological creatures Beasts of Prey Is about a creature known as the Shetani.\nConclusion:\n¬ScienceFiction(beastsOfPrey) ::: Beasts of Prey isn't a science fiction novel.\n------\nProblem:\nThe"
    ]
  },
  {
    "id": "FOLIO_train_785",
    "context": "Beasts of Prey is either a fantasy novel or a science fiction novel. Science fiction novels are not about mythological creatures Beasts of Prey Is about a creature known as the Shetani. Shetanis are mythological.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A shetani is either mythological or a creature.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nFantasy(x) ::: x is a fantasy novel.\nScienceFiction(x) ::: x is a science fiction novel.\nBeastOfPrey(x) ::: x is a novel Beasts of Prey.\nShetani(x) ::: x is a creature known as the Shetani.\nMythological(x) ::: x is mythological.\nPremises:\nBeastOfPrey(beastOfPrey) ∧ (Fantasy(beastOfPrey) ⊕ ScienceFiction(beastOfPrey)) ::: Beasts of Prey is either a fantasy novel or a science fiction novel.\nShetani(shetani) ∧ (ScienceFiction(shetani) ⊕ Fantasy(shetani)) ::: Science fiction novels are not about mythological creatures Beasts of Prey Is about a creature known as the Shetani.\nShetani(shetani) ∧ Mythological(shetani) ::: Shetanis are mythological.\nConclusion:\nShetani(shetani) ∧ BeastOfPrey(beastOfPrey) ::: A shetani is"
    ]
  },
  {
    "id": "FOLIO_train_786",
    "context": "Odell is an English surname originating in Odell, Bedfordshire. In some families Odell is spelled O'Dell, in a mistaken Irish adaptation. Notable people with the surname include Amy Odell, Jack Odell, and Mats Odell. Amy Odell is a British singer-songwriter. Jack Odell is an English toy inventor.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jack Odell is a notable people.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Odell(x) ::: x is a person with the surname Odell.\nO'Dell(x) ::: x is a person with the surname O'Dell.\nBedfordshire(x) ::: x is a place in Bedfordshire.\nNotable(x) ::: x is a notable person.\nSinger(x) ::: x is a singer.\nSongwriter(x) ::: x is a songwriter.\nInventor(x) ::: x is an inventor.\nPremises:\nOdell(amy) ∧ Singer(amy) ∧ Songwriter(amy) ::: Amy Odell is a British singer-songwriter.\nOdell(jack) ∧ Inventor(jack) ::: Jack Odell is an English toy inventor.\nO'Dell(mats) ::: Mats O'Dell is a Swedish singer-songwriter.\nConclusion:\nNotable(jack) ::: Jack Odell is a notable person.\n------\nProblem:\nThe 2016 Summer Olympics, officially known as the Games of the XXXI Olympiad, and commonly known as Rio 2016, was a major international multi-sport event celebrated in"
    ]
  },
  {
    "id": "FOLIO_train_787",
    "context": "Odell is an English surname originating in Odell, Bedfordshire. In some families Odell is spelled O'Dell, in a mistaken Irish adaptation. Notable people with the surname include Amy Odell, Jack Odell, and Mats Odell. Amy Odell is a British singer-songwriter. Jack Odell is an English toy inventor.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Odell is Amy Odell's surname.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Odell is Jack Odell's surname.\n###\nPredicates:\nEnglish(x) ::: x is an English surname.\nBedfordshire(x) ::: x is a place in Bedfordshire.\nOdell(x) ::: x is an Odell.\nO'Dell(x) ::: x is an O'Dell.\nNotable(x) ::: x is a notable person.\nSingerSongwriter(x) ::: x is a singer-songwriter.\nToyInventor(x) ::: x is a toy inventor.\nPremises:\nEnglish(odell) ∧ Bedfordshire(odell) ::: Odell is an English surname originating in Odell, Bedfordshire.\n∃x (Odell(x) ∧ Notable(x)) ::: Notable people with the surname include Amy Odell, Jack Odell, and Mats Odell.\nSingerSongwriter(amy) ∧ English(amy) ∧ Odell(amy) ::: Amy Odell is a British singer-songwriter.\nToyInventor(jack) ∧ English(jack) ∧ Odell(jack) ::: Jack Odell is an English to"
    ]
  },
  {
    "id": "FOLIO_train_788",
    "context": "Odell is an English surname originating in Odell, Bedfordshire. In some families Odell is spelled O'Dell, in a mistaken Irish adaptation. Notable people with the surname include Amy Odell, Jack Odell, and Mats Odell. Amy Odell is a British singer-songwriter. Jack Odell is an English toy inventor.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Amy Odell is an English toy inventor.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEnglish(x) ::: x is an English person.\nBedfordshire(x) ::: x is from Bedfordshire.\nOdell(x) ::: x is an Odell.\nO'Dell(x) ::: x is an O'Dell.\nSingerSongwriter(x) ::: x is a singer-songwriter.\nToyInventor(x) ::: x is a toy inventor.\nPremises:\nOdell(amy) ∧ Bedfordshire(amy) ::: Amy Odell is an Odell from Bedfordshire.\nO'Dell(jack) ∧ Bedfordshire(jack) ::: Jack Odell is an O'Dell from Bedfordshire.\nSingerSongwriter(amy) ∧ ToyInventor(jack) ::: Amy Odell is a singer-songwriter and Jack Odell is a toy inventor.\nConclusion:\nToyInventor(amy) ::: Amy Odell is an English toy inventor.\n------\nProblem:\nThe 2016 Summer Olympics, officially known as the Games of the XXXI Olympiad, and commonly known as Rio 2016, was"
    ]
  },
  {
    "id": "FOLIO_train_789",
    "context": "Odell is an English surname originating in Odell, Bedfordshire. In some families Odell is spelled O'Dell, in a mistaken Irish adaptation. Notable people with the surname include Amy Odell, Jack Odell, and Mats Odell. Amy Odell is a British singer-songwriter. Jack Odell is an English toy inventor.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Amy Odell is also Amy O'dell.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEnglish(x) ::: x is an English surname.\nBedfordshire(x) ::: x is a place in Bedfordshire.\nOdell(x) ::: x is an Odell.\nO'Dell(x) ::: x is an O'Dell.\nNotable(x) ::: x is a notable person.\nSingerSongwriter(x) ::: x is a singer-songwriter.\nInventor(x) ::: x is an inventor.\nPremises:\nEnglish(odell) ∧ Bedfordshire(odell) ::: Odell is an English surname originating in Odell, Bedfordshire.\n∃x (Odell(x) ∧ Notable(x)) ::: Notable people with the surname include Amy Odell, Jack Odell, and Mats Odell.\nSingerSongwriter(amy) ∧ Inventor(jack) ::: Amy Odell is a British singer-songwriter. Jack Odell is an English toy inventor.\nConclusion:\nO'Dell(amy) ::: Amy Odell is also Amy O'dell.\n------\nProblem:\nThe 2016 Summer Olympics, officially known as"
    ]
  },
  {
    "id": "FOLIO_train_790",
    "context": "If you go somewhere by train, you will not lose time. If you go somewhere by car and meet traffic jam, you will lose time. If you lose time, you will be late for work. Mary can get from New Haven to New York City either by train or car. Mary is late for work.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mary gets from New Haven to New York City by train.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nTrain(x) ::: x is a train.\nCar(x) ::: x is a car.\nLoseTime(x) ::: x loses time.\nBeLate(x) ::: x is late for work.\nPremises:\n∀x (Train(x) → ¬LoseTime(x)) ::: If you go somewhere by train, you will not lose time.\n∀x (Car(x) ∧ TrafficJam(x) → LoseTime(x)) ::: If you go somewhere by car and meet traffic jam, you will lose time.\nLoseTime(x) → BeLate(x) ::: If you lose time, you will be late for work.\nMary(x) ::: x is Mary.\nNewHaven(x) ::: x is New Haven.\nNewYorkCity(x) ::: x is New York City.\nMaryCanGet(x, y) ::: x can get from y to z.\nMary(mary) ∧ NewHaven(mary) ∧ NewYorkCity(mary) ::: Mary can get from New Haven to New York City.\nBeLate(mary) ::: Mary is late for work.\nConclusion:\nTrain(mary) ::: Mary gets from New Haven to New York City by train.\n------"
    ]
  },
  {
    "id": "FOLIO_train_791",
    "context": "If you go somewhere by train, you will not lose time. If you go somewhere by car and meet traffic jam, you will lose time. If you lose time, you will be late for work. Mary can get from New Haven to New York City either by train or car. Mary is late for work.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mary gets from New Haven to New York City by car.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nTrain(x) ::: x is a train.\nCar(x) ::: x is a car.\nLoseTime(x) ::: x loses time.\nBeLate(x) ::: x is late for work.\nPremises:\n∀x (Train(x) → ¬LoseTime(x)) ::: If you go somewhere by train, you will not lose time.\n∀x (Car(x) ∧ TrafficJam(x) → LoseTime(x)) ::: If you go somewhere by car and meet traffic jam, you will lose time.\nLoseTime(x) → BeLate(x) ::: If you lose time, you will be late for work.\nMary(x) ::: x is Mary.\nNewHaven(x) ::: x is New Haven.\nNewYorkCity(x) ::: x is New York City.\nMaryCanGet(x, y) ::: x can get from y to z.\nMaryIsLate(x) ::: x is late for work.\nConclusion:\nCar(mary) ∧ TrafficJam(mary) ::: Mary gets from New Haven to New York City by car and meets traffic jam.\nBeLate(mary) ::: Mary is late for work.\n------\nProblem:\nThe following is a"
    ]
  },
  {
    "id": "FOLIO_train_792",
    "context": "If you go somewhere by train, you will not lose time. If you go somewhere by car and meet traffic jam, you will lose time. If you lose time, you will be late for work. Mary can get from New Haven to New York City either by train or car. Mary is late for work.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mary meets traffic jam.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nTrain(x) ::: x is a train.\nCar(x) ::: x is a car.\nLoseTime(x) ::: x loses time.\nBeLate(x) ::: x is late for work.\nPremises:\n∀x (Train(x) → ¬LoseTime(x)) ::: If you go somewhere by train, you will not lose time.\n∀x (Car(x) ⊕ LoseTime(x)) ::: If you go somewhere by car and meet traffic jam, you will lose time.\nLoseTime(x) → BeLate(x) ::: If you lose time, you will be late for work.\nMary(x) ::: x is Mary.\nTrain(x) ⊕ Car(x) ::: Mary can get from New Haven to New York City either by train or car.\nBeLate(mary) ::: Mary is late for work.\nConclusion:\nLoseTime(mary) ::: Mary meets traffic jam.\n------\nProblem:\nThe following is a list of the top 100 most popular baby names in the United States in 2013.\n1. Jacob\n2. Mason\n3. William\n4. Michael\n5. Jayden\n6. Ethan\n7. Alexander\n8. Daniel\n9. Noah\n1"
    ]
  },
  {
    "id": "FOLIO_train_793",
    "context": "If a person is hungry, the person is uncomfortable. If a person is uncomfortable, the person is unhappy.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If a person is not hungry, the person is unhappy.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nHungry(x) ::: x is hungry.\nUncomfortable(x) ::: x is uncomfortable.\nUnhappy(x) ::: x is unhappy.\nPremises:\nHungry(x) → Uncomfortable(x) ::: If a person is hungry, the person is uncomfortable.\nUncomfortable(x) → Unhappy(x) ::: If a person is uncomfortable, the person is unhappy.\nConclusion:\nUnhappy(x) → ¬Hungry(x) ::: If a person is not hungry, the person is unhappy.\n------\nProblem:\nIf a person is hungry, the person is uncomfortable. If a person is uncomfortable, the person is unhappy.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? If a person is not hungry, the person is unhappy.\n###\nPredicates:\nHungry(x) ::: x is hungry.\nUncomfortable(x) ::: x is uncomfortable.\nUnhappy(x) ::: x is unhappy.\nPremises:\nHungry(x) → Uncomfortable(x) ::: If a person is hungry,"
    ]
  },
  {
    "id": "FOLIO_train_794",
    "context": "Tipped employees do not get a guaranteed minimum wage. If a person is a white-collar worker, they will get a guaranteed minimum wage (All white-collar workers get a guaranteed minimum wage). All lawyers are white-collar workers. Every advocate is a lawyer. Mary is not a lawyer or a tipped employee.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mary is a white-collar worker.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nTippedEmployee(x) ::: x is a tipped employee.\nWhiteCollarWorker(x) ::: x is a white-collar worker.\nLawyer(x) ::: x is a lawyer.\nAdvocate(x) ::: x is an advocate.\nGuaranteedMinimumWage(x) ::: x gets a guaranteed minimum wage.\nPremises:\n∀x (TippedEmployee(x) → ¬GuaranteedMinimumWage(x)) ::: Tipped employees do not get a guaranteed minimum wage.\n∀x (WhiteCollarWorker(x) → GuaranteedMinimumWage(x)) ::: All white-collar workers get a guaranteed minimum wage.\n∀x (Lawyer(x) → WhiteCollarWorker(x)) ::: All lawyers are white-collar workers.\n∀x (Advocate(x) → Lawyer(x)) ::: Every advocate is a lawyer.\n¬Lawyer(mary) ∧ ¬TippedEmployee(mary) ::: Mary is not a lawyer or a tipped employee.\nConclusion:\nWhiteCollarWorker(mary) ::: Mary is a white-collar worker.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke"
    ]
  },
  {
    "id": "FOLIO_train_795",
    "context": "Tipped employees do not get a guaranteed minimum wage. If a person is a white-collar worker, they will get a guaranteed minimum wage (All white-collar workers get a guaranteed minimum wage). All lawyers are white-collar workers. Every advocate is a lawyer. Mary is not a lawyer or a tipped employee.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mary is an advocate.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nTippedEmployee(x) ::: x is a tipped employee.\nWhiteCollarWorker(x) ::: x is a white-collar worker.\nLawyer(x) ::: x is a lawyer.\nAdvocate(x) ::: x is an advocate.\nPremises:\n∀x (TippedEmployee(x) → ¬GuaranteedMinimumWage(x)) ::: Tipped employees do not get a guaranteed minimum wage.\n∀x (WhiteCollarWorker(x) → GuaranteedMinimumWage(x)) ::: All white-collar workers get a guaranteed minimum wage.\n∀x (Lawyer(x) → WhiteCollarWorker(x)) ::: All lawyers are white-collar workers.\n∀x (Advocate(x) → Lawyer(x)) ::: Every advocate is a lawyer.\n¬TippedEmployee(mary) ∧ ¬Lawyer(mary) ::: Mary is not a lawyer or a tipped employee.\nConclusion:\nAdvocate(mary) ::: Mary is an advocate.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine"
    ]
  },
  {
    "id": "FOLIO_train_796",
    "context": "Tipped employees do not get a guaranteed minimum wage. If a person is a white-collar worker, they will get a guaranteed minimum wage (All white-collar workers get a guaranteed minimum wage). All lawyers are white-collar workers. Every advocate is a lawyer. Mary is not a lawyer or a tipped employee.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mary is not an advocate.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nTippedEmployee(x) ::: x is a tipped employee.\nWhiteCollarWorker(x) ::: x is a white-collar worker.\nLawyer(x) ::: x is a lawyer.\nAdvocate(x) ::: x is an advocate.\nGuaranteedMinimumWage(x) ::: x gets a guaranteed minimum wage.\nPremises:\n∀x (TippedEmployee(x) → ¬GuaranteedMinimumWage(x)) ::: Tipped employees do not get a guaranteed minimum wage.\n∀x (WhiteCollarWorker(x) → GuaranteedMinimumWage(x)) ::: All white-collar workers get a guaranteed minimum wage.\n∀x (Lawyer(x) → WhiteCollarWorker(x)) ::: All lawyers are white-collar workers.\n∀x (Advocate(x) → Lawyer(x)) ::: Every advocate is a lawyer.\n¬TippedEmployee(mary) ∧ ¬Lawyer(mary) ::: Mary is not a lawyer or a tipped employee.\nConclusion:\n¬Advocate(mary) ::: Mary is not an advocate.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about"
    ]
  },
  {
    "id": "FOLIO_train_797",
    "context": "Tipped employees do not get a guaranteed minimum wage. If a person is a white-collar worker, they will get a guaranteed minimum wage (All white-collar workers get a guaranteed minimum wage). All lawyers are white-collar workers. Every advocate is a lawyer. Mary is not a lawyer or a tipped employee.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mary is either an advocate or a tipped employee.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nTippedEmployee(x) ::: x is a tipped employee.\nWhiteCollarWorker(x) ::: x is a white-collar worker.\nLawyer(x) ::: x is a lawyer.\nAdvocate(x) ::: x is an advocate.\nGuaranteedMinimumWage(x) ::: x gets a guaranteed minimum wage.\nPremises:\n∀x (TippedEmployee(x) → ¬GuaranteedMinimumWage(x)) ::: Tipped employees do not get a guaranteed minimum wage.\n∀x (WhiteCollarWorker(x) → GuaranteedMinimumWage(x)) ::: All white-collar workers get a guaranteed minimum wage.\n∀x (Lawyer(x) → WhiteCollarWorker(x)) ::: All lawyers are white-collar workers.\n∀x (Advocate(x) → Lawyer(x)) ::: Every advocate is a lawyer.\n¬Lawyer(mary) ∧ ¬TippedEmployee(mary) ::: Mary is not a lawyer or a tipped employee.\nConclusion:\nAdvocate(mary) ∨ TippedEmployee(mary) ::: Mary is either an advocate or a tipped employee.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caff"
    ]
  },
  {
    "id": "FOLIO_train_798",
    "context": "Tipped employees do not get a guaranteed minimum wage. If a person is a white-collar worker, they will get a guaranteed minimum wage (All white-collar workers get a guaranteed minimum wage). All lawyers are white-collar workers. Every advocate is a lawyer. Mary is not a lawyer or a tipped employee.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Mary is not an advocate and gets a guaranteed minimum wage, she is not a tipped employee.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTippedEmployee(x) ::: x is a tipped employee.\nWhiteCollarWorker(x) ::: x is a white-collar worker.\nLawyer(x) ::: x is a lawyer.\nAdvocate(x) ::: x is an advocate.\nGuaranteedMinimumWage(x) ::: x gets a guaranteed minimum wage.\nPremises:\n∀x (TippedEmployee(x) → ¬GuaranteedMinimumWage(x)) ::: Tipped employees do not get a guaranteed minimum wage.\n∀x (WhiteCollarWorker(x) → GuaranteedMinimumWage(x)) ::: All white-collar workers get a guaranteed minimum wage.\n∀x (Lawyer(x) → WhiteCollarWorker(x)) ::: All lawyers are white-collar workers.\n∀x (Advocate(x) → Lawyer(x)) ::: Every advocate is a lawyer.\n¬TippedEmployee(mary) ∧ GuaranteedMinimumWage(mary) ::: Mary is not a tipped employee and gets a guaranteed minimum wage.\nConclusion:\n¬TippedEmployee(mary) ∧ GuaranteedMinimumWage(mary) → ¬TippedEmployee(mary) ∨ GuaranteedMinimumWage(mary) :"
    ]
  },
  {
    "id": "FOLIO_train_799",
    "context": "Tipped employees do not get a guaranteed minimum wage. If a person is a white-collar worker, they will get a guaranteed minimum wage (All white-collar workers get a guaranteed minimum wage). All lawyers are white-collar workers. Every advocate is a lawyer. Mary is not a lawyer or a tipped employee.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Mary is either an advocate or a tipped employee, she is an advocate.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nTippedEmployee(x) ::: x is a tipped employee.\nWhiteCollarWorker(x) ::: x is a white-collar worker.\nGuaranteedMinimumWage(x) ::: x gets a guaranteed minimum wage.\nLawyer(x) ::: x is a lawyer.\nAdvocate(x) ::: x is an advocate.\nPremises:\n∀x (TippedEmployee(x) → ¬GuaranteedMinimumWage(x)) ::: Tipped employees do not get a guaranteed minimum wage.\n∀x (WhiteCollarWorker(x) → GuaranteedMinimumWage(x)) ::: All white-collar workers get a guaranteed minimum wage.\n∀x (Lawyer(x) → WhiteCollarWorker(x)) ::: All lawyers are white-collar workers.\n∀x (Advocate(x) → Lawyer(x)) ::: Every advocate is a lawyer.\n¬Lawyer(mary) ∧ ¬TippedEmployee(mary) ::: Mary is not a lawyer or a tipped employee.\nConclusion:\nAdvocate(mary) ::: If Mary is either an advocate or a tipped employee, she is an advocate.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffe"
    ]
  },
  {
    "id": "FOLIO_train_800",
    "context": "Asa Hoffmann was born in New York City. Asa Hoffman lives in Manhattan. Asa Hoffman is a chess player. Some chess players are grandmasters. People born and living in New York City are New Yorkers. People liviing in Manhattan live in New York City.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Asa Hoffmann is a New Yorkers.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nBorn(x, y) ::: x is born in year y.\nLives(x, y) ::: x lives in year y.\nChessPlayer(x) ::: x is a chess player.\nGrandmaster(x) ::: x is a grandmaster.\nNewYorker(x) ::: x is a New Yorker.\nPremises:\nBorn(asa, year1980) ∧ Lives(asa, year2010) ::: Asa Hoffmann was born in New York City.\nLives(asa, year2010) ∧ Lives(asa, manhattan) ::: Asa Hoffman lives in Manhattan.\nChessPlayer(asa) ::: Asa Hoffman is a chess player.\n∃x (ChessPlayer(x) ∧ Grandmaster(x)) ::: Some chess players are grandmasters.\nLives(newYorkCity, year2010) ∧ Lives(manhattan, year2010) ::: People born and living in New York City are New Yorkers.\nLives(manhattan, year2010) ∧ Lives(newYorkCity, year2010) ::: People liviing in Manhattan live in New York City.\nConclusion:\nNewYorker(asa) ::: Asa Hoffmann is a New Yorkers.\n------"
    ]
  },
  {
    "id": "FOLIO_train_801",
    "context": "Asa Hoffmann was born in New York City. Asa Hoffman lives in Manhattan. Asa Hoffman is a chess player. Some chess players are grandmasters. People born and living in New York City are New Yorkers. People liviing in Manhattan live in New York City.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Asa Hoffmann is a grandmaster.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nBorn(x, y) ::: x is born in year y.\nLives(x, y) ::: x lives in year y.\nChessPlayer(x) ::: x is a chess player.\nGrandmaster(x) ::: x is a grandmaster.\nNewYorker(x) ::: x is a New Yorker.\nPremises:\nBorn(asa, year1980) ∧ Lives(asa, year2010) ∧ ChessPlayer(asa) ::: Asa Hoffmann was born in New York City. Asa Hoffman lives in Manhattan. Asa Hoffman is a chess player.\n∃x (ChessPlayer(x) ∧ Grandmaster(x)) ::: Some chess players are grandmasters.\nLives(asa, year2010) ∧ Lives(asa, year2010) ∧ Lives(asa, year2010) ::: Asa Hoffman lives in Manhattan. Asa Hoffman lives in Manhattan. Asa Hoffman lives in Manhattan.\nLives(asa, year2010) ∧ Lives(asa, year2010) ∧ Lives(asa, year2010) ∧ Lives(asa, year2010) ::: Asa Hoffman lives in Manhattan. Asa Hoffman lives in Manhattan. Asa Hoffman"
    ]
  },
  {
    "id": "FOLIO_train_802",
    "context": "Asa Hoffmann was born in New York City. Asa Hoffman lives in Manhattan. Asa Hoffman is a chess player. Some chess players are grandmasters. People born and living in New York City are New Yorkers. People liviing in Manhattan live in New York City.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Asa Hoffmann does not live in New York.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nBorn(x, y) ::: x is born in year y.\nLives(x, y) ::: x lives in year y.\nChessPlayer(x) ::: x is a chess player.\nGrandmaster(x) ::: x is a grandmaster.\nNewYorker(x) ::: x is a New Yorker.\nPremises:\nBorn(asa, year1980) ∧ Lives(asa, year2010) ∧ ChessPlayer(asa) ::: Asa Hoffmann was born in New York City. Asa Hoffman lives in Manhattan. Asa Hoffman is a chess player.\n∃x (ChessPlayer(x) ∧ Grandmaster(x)) ::: Some chess players are grandmasters.\nLives(asa, newYorkCity) ∧ Lives(asa, manhattan) ::: People born and living in New York City are New Yorkers. People liviing in Manhattan live in New York City.\nConclusion:\n¬Lives(asa, newYork) ::: Asa Hoffmann does not live in New York.\n------\nProblem:\nThe following is a list of the top 100 most popular baby names in the United States in 2010.\n1. Jacob\n2. Isabella\n3. Mason\n4. Ethan\n5. Michael\n6. Emily\n7. A"
    ]
  },
  {
    "id": "FOLIO_train_803",
    "context": "Some of those who apply for a Schengen Visa get it. To apply for a Schengen Visa, you need to provide financial guarantees. If you need to provide financial guarantees, you must request documents from the bank. Do not close your bank account if you request documents from the bank. Philip closed his bank account.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Philip got a Schengen Visa.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nSchengenVisa(x) ::: x is a Schengen Visa.\nApply(x) ::: x applies for a Schengen Visa.\nGet(x) ::: x gets a Schengen Visa.\nFinancialGuarantee(x) ::: x is a financial guarantee.\nRequest(x, y) ::: x requests y.\nDocument(x) ::: x is a document.\nClose(x) ::: x closes.\nBankAccount(x) ::: x is a bank account.\nPremises:\nApply(philip) ∧ Get(philip) ::: Some of those who apply for a Schengen Visa get it.\n∀x (Apply(x) → FinancialGuarantee(x)) ::: To apply for a Schengen Visa, you need to provide financial guarantees.\n∃x (Request(x, documents) ∧ Close(x)) ::: If you need to provide financial guarantees, you must request documents from the bank.\nClose(philip) ::: Philip closed his bank account.\nConclusion:\nGet(philip) ::: Philip got a Schengen Visa.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that"
    ]
  },
  {
    "id": "FOLIO_train_804",
    "context": "Some of those who apply for a Schengen Visa get it. To apply for a Schengen Visa, you need to provide financial guarantees. If you need to provide financial guarantees, you must request documents from the bank. Do not close your bank account if you request documents from the bank. Philip closed his bank account.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Philip applied for a Schengen Visa and got it.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nApply(x, y) ::: x applies for y.\nGet(x, y) ::: x gets y.\nNeed(x, y) ::: x needs y.\nRequest(x, y) ::: x requests y.\nClose(x, y) ::: x closes y.\nPremises:\nApply(philip, schengenVisa) ∧ Get(philip, schengenVisa) ::: Philip applied for a Schengen Visa and got it.\n∀x (Apply(x, y) → Need(x, y)) ::: If x applies for y, then x needs y.\n∀x (Need(x, y) → Request(x, y)) ::: If x needs y, then x requests y.\nRequest(philip, documents) ∧ Close(philip, bankAccount) ::: Philip requested documents from the bank and closed his bank account.\nConclusion:\nGet(philip, schengenVisa) ::: Philip applied for a Schengen Visa and got it.\n------\nProblem:\nThe following is a list of the top 100 most popular baby names in the United States in 2016.\n1. Liam\n2. Noah\n3. William\n4. James\n5. Benjamin\n6. Mason\n7. Elijah\n8. Michael\n9. Jacob\n10. Alexander\n11."
    ]
  },
  {
    "id": "FOLIO_train_805",
    "context": "Some of those who apply for a Schengen Visa get it. To apply for a Schengen Visa, you need to provide financial guarantees. If you need to provide financial guarantees, you must request documents from the bank. Do not close your bank account if you request documents from the bank. Philip closed his bank account.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Philip did not request documents from the bank or get a Schengen Visa, he didn’t apply for a Schengen Visa.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nApply(x, y) ::: x applies for y.\nGet(x, y) ::: x gets y.\nNeed(x, y) ::: x needs y.\nRequest(x, y) ::: x requests y.\nClose(x, y) ::: x closes y.\nPremises:\nApply(philip, schengenVisa) ∧ Get(philip, schengenVisa) ::: Some of those who apply for a Schengen Visa get it.\n∀x (Apply(x, y) → Need(x, y)) ::: To apply for a Schengen Visa, you need to provide financial guarantees.\n∀x (Need(x, y) → Request(x, y)) ::: If you need to provide financial guarantees, you must request documents from the bank.\nRequest(philip, documentsFromBank) ∧ Close(philip, bankAccount) ::: Philip closed his bank account.\nConclusion:\nGet(philip, schengenVisa) → Apply(philip, schengenVisa) ::: If Philip got a Schengen Visa, he applied for a Schengen Visa.\nRequest(philip, documentsFromBank) → Apply(philip, schengenVisa) ::: If Philip requested documents from the bank, he applied for a Schengen Visa.\nClose(philip,"
    ]
  },
  {
    "id": "FOLIO_train_806",
    "context": "Some fears lead to anxiety. Some anxiety leads to terror.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? No fears lead to terror.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nFear(x) ::: x is a fear.\nAnxiety(x) ::: x is an anxiety.\nTerror(x) ::: x is a terror.\nPremises:\n∃x (Fear(x) ∧ Anxiety(x)) ::: Some fears lead to anxiety.\n∃x (Anxiety(x) ∧ Terror(x)) ::: Some anxiety leads to terror.\nConclusion:\n¬∃x (Fear(x) ∧ Terror(x)) ::: No fears lead to terror.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that c"
    ]
  },
  {
    "id": "FOLIO_train_807",
    "context": "The Great Lakes are Lake Superior, Lake Michigan, Lake Huron, Lake Erie, and Lake Ontario. Some major settlements of Lake Erie are in NY, PA, OH, and MI. NY, PA, OH, MI are states in the US. ON is a state of Canada. There is a major settlement of Lake Huron in ON. All states are in their country. The US is in North America. The Great Lakes began to form at the end of the Last Glacial Period.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Lake Erie has a major settlement.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Ontario\n###\nPredicates:\nGreatLake(x) ::: x is a Great Lake.\nLakeSuperior(x) ::: x is Lake Superior.\nLakeMichigan(x) ::: x is Lake Michigan.\nLakeHuron(x) ::: x is Lake Huron.\nLakeErie(x) ::: x is Lake Erie.\nLakeOntario(x) ::: x is Lake Ontario.\nMajorSettlement(x) ::: x is a major settlement.\nNY(x) ::: x is NY.\nPA(x) ::: x is PA.\nOH(x) ::: x is OH.\nMI(x) ::: x is MI.\nON(x) ::: x is ON.\nUS(x) ::: x is the US.\nCanada(x) ::: x is Canada.\nNorthAmerica(x) ::: x is North America.\nLastGlacialPeriod(x) ::: x is the Last Glacial Period.\nPremises:\nGreatLake(LakeSuperior) ∧ GreatLake(LakeMichigan) ∧ GreatLake(LakeHuron) ∧ GreatLake(LakeErie) ∧ GreatLake(LakeOntario) ::: The Great Lakes are Lake Superior, Lake Michigan, Lake Huron, Lake Erie, and Lake Ontario"
    ]
  },
  {
    "id": "FOLIO_train_808",
    "context": "The Great Lakes are Lake Superior, Lake Michigan, Lake Huron, Lake Erie, and Lake Ontario. Some major settlements of Lake Erie are in NY, PA, OH, and MI. NY, PA, OH, MI are states in the US. ON is a state of Canada. There is a major settlement of Lake Huron in ON. All states are in their country. The US is in North America. The Great Lakes began to form at the end of the Last Glacial Period.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There is a great lake that did not form at the end of the Last Glacial Period.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreatLake(x) ::: x is a great lake.\nLakeSuperior(x) ::: x is Lake Superior.\nLakeMichigan(x) ::: x is Lake Michigan.\nLakeHuron(x) ::: x is Lake Huron.\nLakeErie(x) ::: x is Lake Erie.\nLakeOntario(x) ::: x is Lake Ontario.\nMajorSettlement(x, y) ::: x is a major settlement of y.\nNY(x) ::: x is NY.\nPA(x) ::: x is PA.\nOH(x) ::: x is OH.\nMI(x) ::: x is MI.\nON(x) ::: x is ON.\nState(x) ::: x is a state.\nUS(x) ::: x is the US.\nCanada(x) ::: x is Canada.\nNorthAmerica(x) ::: x is North America.\nLastGlacialPeriod(x) ::: x is the Last Glacial Period.\nPremises:\nGreatLake(LakeSuperior) ∧ GreatLake(LakeMichigan) ∧ GreatLake(LakeHuron) ∧ GreatLake(LakeErie) ∧ GreatLake(LakeOntario) ::: The Great Lakes are Lake Superior, Lake Michigan, Lake"
    ]
  },
  {
    "id": "FOLIO_train_809",
    "context": "All defenders are soccer players. No soccer players are professional basketball players. All centerbacks are defenders. All NBA players are professional basketball players. If Stephen Curry is not an NBA player, then Stephen Curry is not an NBA player or a soccer player.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Stephen Curry is a professional basketball player.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nDefender(x) ::: x is a defender.\nSoccerPlayer(x) ::: x is a soccer player.\nNBAPlayer(x) ::: x is an NBA player.\nCenterback(x) ::: x is a centerback.\nPremises:\n∀x (Defender(x) → SoccerPlayer(x)) ::: All defenders are soccer players.\n∀x (SoccerPlayer(x) ⊕ NBAPlayer(x)) ::: No soccer players are professional basketball players.\n∀x (Defender(x) → Centerback(x)) ::: All centerbacks are defenders.\n¬NBAPlayer(stephenCurry) ⊕ NBAPlayer(stephenCurry) ::: If Stephen Curry is not an NBA player, then Stephen Curry is not an NBA player or a soccer player.\nConclusion:\nNBAPlayer(stephenCurry) ::: Stephen Curry is a professional basketball player.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent"
    ]
  },
  {
    "id": "FOLIO_train_810",
    "context": "All defenders are soccer players. No soccer players are professional basketball players. All centerbacks are defenders. All NBA players are professional basketball players. If Stephen Curry is not an NBA player, then Stephen Curry is not an NBA player or a soccer player.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Stephen Curry is a centerback.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nDefender(x) ::: x is a defender.\nSoccerPlayer(x) ::: x is a soccer player.\nNBAPlayer(x) ::: x is an NBA player.\nCenterback(x) ::: x is a centerback.\nPremises:\n∀x (Defender(x) → SoccerPlayer(x)) ::: All defenders are soccer players.\n∀x (SoccerPlayer(x) ⊕ NBAPlayer(x)) ::: No soccer players are professional basketball players.\n∀x (Defender(x) → Centerback(x)) ::: All centerbacks are defenders.\n¬NBAPlayer(stephenCurry) ⊕ NBAPlayer(stephenCurry) ::: If Stephen Curry is not an NBA player, then Stephen Curry is not an NBA player or a soccer player.\nConclusion:\nCenterback(stephenCurry) ::: Stephen Curry is a centerback.\n------"
    ]
  },
  {
    "id": "FOLIO_train_811",
    "context": "All defenders are soccer players. No soccer players are professional basketball players. All centerbacks are defenders. All NBA players are professional basketball players. If Stephen Curry is not an NBA player, then Stephen Curry is not an NBA player or a soccer player.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Stephen Curry is not a centerback.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nDefender(x) ::: x is a defender.\nSoccerPlayer(x) ::: x is a soccer player.\nNBAPlayer(x) ::: x is an NBA player.\nCenterback(x) ::: x is a centerback.\nPremises:\n∀x (Defender(x) → SoccerPlayer(x)) ::: All defenders are soccer players.\n∀x (SoccerPlayer(x) ⊕ NBAPlayer(x)) ::: No soccer players are professional basketball players.\n∀x (Defender(x) → Centerback(x)) ::: All centerbacks are defenders.\n¬NBAPlayer(stephenCurry) ⊕ NBAPlayer(stephenCurry) ::: If Stephen Curry is not an NBA player, then Stephen Curry is not an NBA player or a soccer player.\nConclusion:\n¬Centerback(stephenCurry) ::: Stephen Curry is not a centerback."
    ]
  },
  {
    "id": "FOLIO_train_812",
    "context": "Naive cynicism was proposed by Justin Kruger and a colleague. Thomas Gilovich is a colleague of Justin Kruger. Naive cynicism is a philosophy of mind.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Thomas Gilovich proposed naive cynicism.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nColleague(x, y) ::: x is a colleague of y.\nPropose(x, y) ::: x proposes y.\nPhilosophyOfMind(x) ::: x is a philosophy of mind.\nNaiveCynicism(x) ::: x is naive cynicism.\nPremises:\nColleague(justin, thomas) ::: Thomas Gilovich is a colleague of Justin Kruger.\nPropose(justin, naiveCynicism) ::: Justin Kruger proposes naive cynicism.\nPhilosophyOfMind(naiveCynicism) ::: Naive cynicism is a philosophy of mind.\nConclusion:\nPropose(thomas, naiveCynicism) ::: Thomas Gilovich proposes naive cynicism.\n------\nProblem:\nThe following is a list of the top 100"
    ]
  },
  {
    "id": "FOLIO_train_813",
    "context": "Naive cynicism was proposed by Justin Kruger and a colleague. Thomas Gilovich is a colleague of Justin Kruger. Naive cynicism is a philosophy of mind.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Justin Kruger propose a philosophy of mind.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nColleague(x, y) ::: x is a colleague of y.\nNaiveCynicism(x) ::: x is a naive cynicism.\nPhilosophyOfMind(x) ::: x is a philosophy of mind.\nPremises:\nColleague(thomas, justin) ::: Thomas Gilovich is a colleague of Justin Kruger.\nNaiveCynicism(naiveCynicism) ::: Naive cynicism was proposed by Justin Kruger and a colleague.\nPhilosophyOfMind(naiveCynicism) ::: Naive cynicism is a philosophy of mind.\nConclusion:\nPhilosophyOfMind(justin) ::: Justin Kruger propose a philosophy of mind.\n------\nProblem:\nThe following is a list of the top 100 most popular baby names in the United States in 2013"
    ]
  },
  {
    "id": "FOLIO_train_814",
    "context": "Naive cynicism was proposed by Justin Kruger and a colleague. Thomas Gilovich is a colleague of Justin Kruger. Naive cynicism is a philosophy of mind.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Thomas Gilovich worked on philiophies of mind.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nColleague(x, y) ::: x is a colleague of y.\nNaiveCynicism(x) ::: x is a naive cynicism.\nPhilosophyOfMind(x) ::: x is a philosophy of mind.\nPremises:\nColleague(justin, thomas) ::: Thomas Gilovich is a colleague of Justin Kruger.\nNaiveCynicism(naiveCynicism) ::: Naive cynicism was proposed by Justin Kruger and a colleague.\nPhilosophyOfMind(naiveCynicism) ::: Naive cynicism is a philosophy of mind.\nConclusion:\nPhilosophyOfMind(thomas) ::: Thomas Gilovich worked on philiophies of mind.\n------\nProblem:\nThe following is a list of the top 100 most popular baby names in the United States in"
    ]
  },
  {
    "id": "FOLIO_train_815",
    "context": " The Turing Award has been awarded to Donald Knuth, Marvin Minsky, Richard Hamming and John McCarthy. Donald Knuth made major contributions to the analysis of algorithms. Marvin Minsky is recognized by his contributions to the field of artificial intelligence. Richard Hamming did research on numerical methods. John McCarthy had a central role in creating and shaping the field of artificial inteligence.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? At least two people who have won the Turing Award worked in the field of artificial intelligence.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nTuringAward(x) ::: x has won the Turing Award.\nContribution(x, y) ::: x made a contribution to y.\nAlgorithmAnalysis(x) ::: x made major contributions to the analysis of algorithms.\nArtificialIntelligence(x) ::: x is recognized by his contributions to the field of artificial intelligence.\nNumericalMethod(x) ::: x did research on numerical methods.\nArtificialIntelligence(y) ::: y is a field of artificial intelligence.\nPremises:\nTuringAward(knuth) ∧ Contribution(knuth, algorithmAnalysis) ::: Donald Knuth has won the Turing Award and made major contributions to the analysis of algorithms.\nTuringAward(minsky) ∧ ArtificialIntelligence(minsky) ::: Marvin Minsky has won the Turing Award and is recognized by his contributions to the field of artificial intelligence.\nTuringAward(hamming"
    ]
  },
  {
    "id": "FOLIO_train_816",
    "context": " The Turing Award has been awarded to Donald Knuth, Marvin Minsky, Richard Hamming and John McCarthy. Donald Knuth made major contributions to the analysis of algorithms. Marvin Minsky is recognized by his contributions to the field of artificial intelligence. Richard Hamming did research on numerical methods. John McCarthy had a central role in creating and shaping the field of artificial inteligence.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? At least two people who worked in the field of artificial intelligence have won the Turing Award.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nTuringAward(x) ::: x is a Turing Award winner.\nAlgorithmAnalysis(x) ::: x made major contributions to the analysis of algorithms.\nArtificialIntelligence(x) ::: x is recognized by his contributions to the field of artificial intelligence.\nNumericalMethods(x) ::: x did research on numerical methods.\nArtificialIntelligence(x) ::: x had a central role in creating and shaping the field of artificial inteligence.\nPremises:\nTuringAward(knuth) ∧ AlgorithmAnalysis(knuth) ::: Donald Knuth won the Turing Award and made major contributions to the analysis of algorithms.\nTuringAward(minsky) ∧ ArtificialIntelligence(minsky) ::: Marvin Minsky won the Turing Award and is recognized by his contributions to the field of artificial intelligence.\nTuringAward(hamming) ∧ NumericalMethods(hamming) :"
    ]
  },
  {
    "id": "FOLIO_train_817",
    "context": " The Turing Award has been awarded to Donald Knuth, Marvin Minsky, Richard Hamming and John McCarthy. Donald Knuth made major contributions to the analysis of algorithms. Marvin Minsky is recognized by his contributions to the field of artificial intelligence. Richard Hamming did research on numerical methods. John McCarthy had a central role in creating and shaping the field of artificial inteligence.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Only one people who have won the Turing Award made significant contributions to the analysis of algorithms.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nTuringAward(x) ::: x has won the Turing Award.\nContribution(x, y) ::: x made significant contributions to y.\nAnalysisOfAlgorithms(x) ::: x is the analysis of algorithms.\nArtificialIntelligence(x) ::: x is the field of artificial intelligence.\nNumericalMethods(x) ::: x is research on numerical methods.\nPremises:\nTuringAward(donald) ∧ Contribution(donald, analysisOfAlgorithms) ::: Donald Knuth has won the Turing Award and made significant contributions to the analysis of algorithms.\nTuringAward(marvin) ∧ Contribution(marvin, artificialIntelligence) ::: Marvin Minsky has won the Turing Award and made significant contributions to the field of artificial intelligence.\nTuringAward(richard) ∧ Contribution(richard, numericalMethods) ::: Richard Hamming has won the Turing Award and made significant"
    ]
  },
  {
    "id": "FOLIO_train_818",
    "context": " The Turing Award has been awarded to Donald Knuth, Marvin Minsky, Richard Hamming and John McCarthy. Donald Knuth made major contributions to the analysis of algorithms. Marvin Minsky is recognized by his contributions to the field of artificial intelligence. Richard Hamming did research on numerical methods. John McCarthy had a central role in creating and shaping the field of artificial inteligence.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? No Turing Award winners worked in the field of numerical methods.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nTuringAwardWinner(x) ::: x is a Turing Award winner.\nContribution(x, y) ::: x made a contribution to y.\nAlgorithmAnalysis(x) ::: x made major contributions to the analysis of algorithms.\nArtificialIntelligence(x) ::: x is recognized by his contributions to the field of artificial intelligence.\nNumericalMethod(x) ::: x did research on numerical methods.\nArtificialIntelligence(x) ::: x had a central role in creating and shaping the field of artificial inteligence.\nPremises:\nTuringAwardWinner(knuth) ∧ Contribution(knuth, algorithmAnalysis) ::: Donald Knuth made major contributions to the analysis of algorithms.\nTuringAwardWinner(minsky) ∧ ArtificialIntelligence(minsky) ::: Marvin Minsky is recognized by his contributions to the field of artificial intelligence.\nTuringAwardW"
    ]
  },
  {
    "id": "FOLIO_train_819",
    "context": "No easy Leetcode problems have an AC rate lower than 20 percent. All Leetcode problems recommended to novices are easy. Leetcode problems either have an AC rate lower than 20 percent or are starred by more than 1 thousand users. All hard Leetcode problems are starred by more than 1 thousand users. No Leetcode problems published after 2022 are starred by more than 1 thousand users. 2Sum is not recommended to novices and hard. 4Sum is either starred by more than 1 thousand users and published after 2022, or neither starred by more than 1 thousand users nor published after 2022.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? 2Sum is an easy Leetcode problem.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEasy(x) ::: x is an easy Leetcode problem.\nNovice(x) ::: x is recommended to novices.\nHard(x) ::: x is a hard Leetcode problem.\nStarred(x, y) ::: x is starred by y users.\nPublished(x, y) ::: x is published in year y.\nACRate(x, y) ::: x has an AC rate of y percent.\nPremises:\n∀x (Easy(x) → Novice(x)) ::: All Leetcode problems recommended to novices are easy.\n∀x (Easy(x) → ¬Hard(x)) ::: No easy Leetcode problems have an AC rate lower than 20 percent.\n∀x (Hard(x) → ∃y ∃z (Starred(x, y) ∧ Published(x, z))) ::: All hard Leetcode problems are star"
    ]
  },
  {
    "id": "FOLIO_train_820",
    "context": "No easy Leetcode problems have an AC rate lower than 20 percent. All Leetcode problems recommended to novices are easy. Leetcode problems either have an AC rate lower than 20 percent or are starred by more than 1 thousand users. All hard Leetcode problems are starred by more than 1 thousand users. No Leetcode problems published after 2022 are starred by more than 1 thousand users. 2Sum is not recommended to novices and hard. 4Sum is either starred by more than 1 thousand users and published after 2022, or neither starred by more than 1 thousand users nor published after 2022.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? 2Sum is not an easy Leetcode problem.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nEasy(x) ::: x is an easy Leetcode problem.\nNovice(x) ::: x is recommended to novices.\nHard(x) ::: x is a hard Leetcode problem.\nStarred(x, y) ::: x is starred by y users.\nPublished(x, y) ::: x is published in year y.\nACRate(x, y) ::: x has an AC rate of y percent.\nPremises:\n∀x (Easy(x) → Novice(x)) ::: All Leetcode problems recommended to novices are easy.\n∀x (Easy(x) → ACRate(x, 20)) ::: No easy Leetcode problems have an AC rate lower than 20 percent.\n∀x (Hard(x) → Starred(x, 1000)) ::: All hard Leetcode problems are starred by more than 1 thousand users.\n∃x (Starred(x, 1000) ∧ Published(x, year2022)) ::: No Leetcode problems published after 2022 are starred by more than 1 thousand users.\n∃x (Starred(x, 1000) ∧ Published(x, year2022)) ⊕ ∃x (Starred(x, 1000) ∧ Published(x, year2022)) ::: 2Sum is not recommended to novices and hard.\n∃x (Starred(x, 1000) ∧ Published(x, year2022)) ⊕ ∃x (Starred(x, 1000) ∧ Published(x, year2022)) ::: 4Sum is either starred by more than 1 thousand users and published after 2022, or neither starred by more than 1 thousand users nor published after 2022.\nConclusion:\n¬Easy(2Sum) ::: 2Sum is not an easy Leetcode problem.\n------"
    ]
  },
  {
    "id": "FOLIO_train_821",
    "context": "No easy Leetcode problems have an AC rate lower than 20 percent. All Leetcode problems recommended to novices are easy. Leetcode problems either have an AC rate lower than 20 percent or are starred by more than 1 thousand users. All hard Leetcode problems are starred by more than 1 thousand users. No Leetcode problems published after 2022 are starred by more than 1 thousand users. 2Sum is not recommended to novices and hard. 4Sum is either starred by more than 1 thousand users and published after 2022, or neither starred by more than 1 thousand users nor published after 2022.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? 4Sum is a Leetcode problem recommended to the novice or is hard.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nEasy(x) ::: x is an easy Leetcode problem.\nNovice(x) ::: x is recommended to novices.\nHard(x) ::: x is a hard Leetcode problem.\nStarred(x, y) ::: x is starred by y users.\nPublished(x, y) ::: x is published in year y.\nRecommended(x, y) ::: x is recommended to y.\nPremises:\n∀x (Easy(x) → Novice(x)) ::: All Leetcode problems recommended to novices are easy.\n∀x (Easy(x) → ¬Hard(x)) ::: No easy Leetcode problems have an AC rate lower than 20 percent.\n∀x (Hard(x) → ∃y ∃z (Starred(x, y) ∧ Published(x, z))) ::: All hard Leetcode problems are starred by more than 1 thousand users.\n∃x (Starred(x, 1000) ∧ Published(x, year2022)) ::: No Leetcode problems published after 2022 are starred by more than 1 thousand users.\n∃x (Starred(x, 1000) ∧ Published(x, year2022)) ⊕ ¬∃x (Starred(x, 1000) ∧ Published(x, year2022)) ::: 2Sum is not recommended to novices and hard.\n∃x (Starred(x, 1000) ∧ Published(x, year2022)) ⊕ ¬∃x (Starred(x, 1000) ∧ Published(x, year2022)) ::: 4Sum is either starred by more than 1 thousand users and published after 2022, or neither starred by more than 1 thousand users nor published after 2022.\nConclusion:\nNovice(4Sum) ⊕ Hard(4Sum)"
    ]
  },
  {
    "id": "FOLIO_train_822",
    "context": "No easy Leetcode problems have an AC rate lower than 20 percent. All Leetcode problems recommended to novices are easy. Leetcode problems either have an AC rate lower than 20 percent or are starred by more than 1 thousand users. All hard Leetcode problems are starred by more than 1 thousand users. No Leetcode problems published after 2022 are starred by more than 1 thousand users. 2Sum is not recommended to novices and hard. 4Sum is either starred by more than 1 thousand users and published after 2022, or neither starred by more than 1 thousand users nor published after 2022.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? 4Sum is neither a 2Sum Leetcode problem recommended to the novice nor a Leetcode problem that's hard.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEasy(x) ::: x is an easy Leetcode problem.\nNovice(x) ::: x is a Leetcode problem recommended to the novice.\nHard(x) ::: x is a hard Leetcode problem.\nStarred(x, y) ::: x is starred by y.\nPublished(x, y) ::: x is published in year y.\nRecommended(x, y) ::: x is recommended to y.\nPremises:\n∀x (Easy(x) → Novice(x)) ::: All Leetcode problems recommended to novices are easy.\n∀x (Easy(x) → ¬Hard(x)) ::: No easy Leetcode problems have an AC rate lower than 20 percent.\n∀x (Hard(x) → ∃y ∃z (Starred(x, y) ∧ Published(x, z))) ::: All hard Leetcode problems are starred by more than 1 thousand users.\n∃x (Starred(x, y) ∧ Published(x, z) ∧ year2022 < z) ::: No Leetcode problems published after 2022 are starred by more than 1 thousand users.\n∃x (Starred(x, y) ∧ Published(x, z) ∧ year2022 < z) ∧ ¬(Starred(x, y) ∧ Published(x, z) ∧ year2022 < z) ::: 2Sum is not recommended to novices and hard.\n∃x (Starred(x, y) ∧ Published(x, z) ∧ year2022 < z) ∧ ¬(Starred(x, y) ∧ Published(x, z) ∧ year2022 < z) ∧ ¬(Starred(x, y) ∧ Published(x, z) ∧ year2022 < z) ::: 4Sum is either starred by more than 1 thousand users and published after 20"
    ]
  },
  {
    "id": "FOLIO_train_823",
    "context": "Show Your Love is a song recorded by the South Korean boy band BtoB 4u. The lead single of the extended play Inside is Show Your Love. Show Your Love contains a hopeful message. BtoB 4u member Hyunsik wrote Show Your Love. There is a music video for Show Your Love.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Show your love wasn't written by a member of a boy band.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nSouthKorean(x) ::: x is a South Korean person.\nBoyBand(x) ::: x is a boy band.\nMember(x, y) ::: x is a member of y.\nHopeful(x) ::: x is hopeful.\nMessage(x) ::: x is a message.\nLeadSingle(x) ::: x is the lead single of y.\nSingle(x) ::: x is a single.\nVideo(x) ::: x is a video.\nPremises:\nSouthKorean(btob4u) ∧ BoyBand(btob4u) ∧ Member(hyunsik, btob4u) ::: BtoB 4u is a South Korean boy band. Hyunsik is a member of BtoB 4u.\nMessage(showYourLove) ∧ LeadSingle(showYourLove) ∧ Single(showYourLove) ∧ Video(showYourLove) ::: Show Your Love is a song recorded by the South Korean boy band BtoB 4u. The lead single of the extended play Inside is Show Your Love. Show Your Love contains a hopeful message. There is a music video for Show Your Love.\nConclusion:\n¬Member(hyunsik, btob4u) ::: Show your love wasn't written by a member of a boy band.\n------\nProblem:\nThe 2018 FIFA World Cup was the 21st FIFA World Cup, an international football tournament contested by the men's national teams of the member associations of FIFA once every four years. It took place in Russia from 14 June to 15 July 2018. It was the first World Cup to be held in Eastern Europe, and the 11th time that it had been held in Europe. At an estimated cost of over $14.2 billion, it was the most expensive World Cup. It was also the first World Cup to use the video assistant referee (VAR) system.\nQuestion:\nBased on the above information, is the following statement true,"
    ]
  },
  {
    "id": "FOLIO_train_824",
    "context": "Show Your Love is a song recorded by the South Korean boy band BtoB 4u. The lead single of the extended play Inside is Show Your Love. Show Your Love contains a hopeful message. BtoB 4u member Hyunsik wrote Show Your Love. There is a music video for Show Your Love.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A lead single of inside contains a a hopeful message.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nSong(x) ::: x is a song.\nLeadSingle(x, y) ::: x is the lead single of y.\nMessage(x) ::: x contains a message.\nHopeful(x) ::: x is hopeful.\nMember(x, y) ::: x is a member of y.\nWrite(x, y) ::: x wrote y.\nMusicVideo(x) ::: x is a music video.\nPremises:\nSong(showYourLove) ∧ LeadSingle(showYourLove, inside) ∧ Message(showYourLove) ∧ Hopeful(showYourLove) ::: Show Your Love is a song recorded by the South Korean boy band BtoB 4u. The lead single of the extended play Inside is Show Your Love. Show Your Love contains a hopeful message.\nMember(hyunsik, btob4u) ∧ Write(hyunsik, showYourLove) ::: BtoB 4u member Hyunsik wrote Show Your Love.\nMusicVideo(showYourLove) ::: There is a music video for Show Your Love.\nConclusion:\nLeadSingle(showYourLove, inside) ∧ Message(showYourLove) ∧ Hopeful(showYourLove) ::: A lead single of inside contains a a hopeful message.\n------\nProblem:\nThe 2018 FIFA World Cup was the 21st FIFA World Cup, an international football tournament contested by the men's national teams of the member associations of FIFA once every four years. It took place in Russia from 14 June to 15 July 2018. It was the first World Cup to be held in Eastern Europe, and the 11th time that it had been held in Europe. At an estimated cost of over $14.2 billion, it was the most expensive World Cup. It was also the first World Cup to use the video assistant referee (VAR) system. The finals involved 32 national teams, which were required to register a squad of 23 players, including three goalkeepers."
    ]
  },
  {
    "id": "FOLIO_train_825",
    "context": "Show Your Love is a song recorded by the South Korean boy band BtoB 4u. The lead single of the extended play Inside is Show Your Love. Show Your Love contains a hopeful message. BtoB 4u member Hyunsik wrote Show Your Love. There is a music video for Show Your Love.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Hyunsik is Korean.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nKorean(x) ::: x is Korean.\nMember(x, y) ::: x is a member of y.\nLead(x, y) ::: x is the lead single of y.\nHopeful(x) ::: x contains a hopeful message.\nMessage(x, y) ::: x is the message of y.\nVideo(x) ::: x is a video.\nPremises:\nShowYourLove ∧ Lead(ShowYourLove, Inside) ∧ Hopeful(ShowYourLove) ∧ Message(ShowYourLove, ShowYourLove) ∧ Video(ShowYourLove) ::: Show Your Love is a song recorded by the South Korean boy band BtoB 4u. The lead single of the extended play Inside is Show Your Love. Show Your Love contains a hopeful message. BtoB 4u member Hyunsik wrote Show Your Love. There is a music video for Show Your Love.\nKorean(hyunsik) ::: Hyunsik is Korean.\nConclusion:\nKorean(hyunsik) ::: Hyunsik is Korean.\n------\nProblem:\nThe 2018 FIFA World Cup was the 21st FIFA World Cup, an international football tournament contested by the men's national teams of the member associations of FIFA once every four years. It took place in Russia from 14 June to 15 July 2018. It was the first World Cup to be held in Eastern Europe, and the 11th time that it had been held in Europe. At an estimated cost of over $14.2 billion, it was the most expensive World Cup. It was also the first World Cup to use the video assistant referee (VAR) system. The finals involved 32 national teams, which were required to register a squad of 23 players, including three goalkeepers.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The 2018 FIFA World Cup was held in Russia.\n###\nPredicates:\nHeld(x, y"
    ]
  },
  {
    "id": "FOLIO_train_826",
    "context": "All tables are round. Some furniture are tables.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Some furniture are round.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nTable(x) ::: x is a table.\nRound(x) ::: x is round.\nFurniture(x) ::: x is furniture.\nPremises:\n∀x (Table(x) → Round(x)) ::: All tables are round.\n∃x (Furniture(x) ∧ Table(x)) ::: Some furniture are tables.\nConclusion:\nRound(x) ::: Some furniture are round.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\n###\nPredicates:\nDependent(x) ::: x is a person dependent on caffeine.\nDrinks(x) ::: x regularly drinks coffee.\nJokes(x) ::: x jokes about being addicted to caffeine.\nUnaware(x) ::: x is unaware that caffeine is a drug.\nStudent(x) ::: x is a student.\nPremises:\n∀x (Drinks(x) → Dependent(x)) ::: All people who regularly drink coffee are dependent on caffeine.\n∀x (Drinks(x) ⊕ Jokes(x)) ::: People either regularly drink coffee or joke about being addicted to caffeine"
    ]
  },
  {
    "id": "FOLIO_train_827",
    "context": "All juvenile delinquents are maladjusted individuals. Some juvenile delinquents are products of broken homes.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Some maladjusted individuals are products of broken homes.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nJuvenileDelinquent(x) ::: x is a juvenile delinquent.\nMaladjusted(x) ::: x is a maladjusted individual.\nProductOfBrokenHome(x) ::: x is a product of a broken home.\nPremises:\n∀x (JuvenileDelinquent(x) → Maladjusted(x)) ::: All juvenile delinquents are maladjusted individuals.\n∃x (JuvenileDelinquent(x) ∧ ProductOfBrokenHome(x)) ::: Some juvenile delinquents are products of broken homes.\nConclusion:\nMaladjusted(x) → ProductOfBrokenHome(x) ::: Some maladjusted individuals are products of broken homes.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\n###\nPredicates:\nDependent(x) ::: x is a person dependent on caffeine.\nDrinks(x) ::: x regularly drinks coffee.\nJokes(x) ::: x jokes about being addicted to caffeine.\nUnaware(x) ::: x is unaware that caffeine is a drug.\nStudent(x) :::"
    ]
  },
  {
    "id": "FOLIO_train_828",
    "context": "Either brain reading or brain decoding. All brain decoding is extracting information from BOLD signals. No extracting information from BOLD signals is without statistical pattern analysis. Writing a novel is without statistical pattern analysis. If multivoxel (pattern) analysis is without statistical pattern analysis and a brain reading, then multivoxel (pattern) analysis is without statistical pattern analysis and brain decoding.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Multivoxel (pattern) analysis is a brain decoding.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nBrainReading(x) ::: x is a brain reading.\nBrainDecoding(x) ::: x is a brain decoding.\nExtractingInformation(x, y) ::: x extracts information from y.\nStatisticalPatternAnalysis(x) ::: x is statistical pattern analysis.\nWriting(x) ::: x is writing.\nMultivoxel(x) ::: x is a multivoxel.\nPremises:\n∀x (BrainDecoding(x) → ExtractingInformation(x, BOLD)) ::: All brain decoding is extracting information from BOLD signals.\n∀x (ExtractingInformation(x, BOLD) → StatisticalPatternAnalysis(x)) ::: No extracting information from BOLD signals is without statistical pattern analysis.\nWriting(novel) ::: Writing(novel)\n∃x (Multivoxel(x) ∧ StatisticalPatternAnalysis(x)) ::: Writing(novel)\nConclusion:\nBrainDecoding(multivoxel(pattern)Analysis) ::: Multivoxel (pattern) analysis is a brain decoding.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\n###\nPredicates:\nDependent"
    ]
  },
  {
    "id": "FOLIO_train_829",
    "context": "Either brain reading or brain decoding. All brain decoding is extracting information from BOLD signals. No extracting information from BOLD signals is without statistical pattern analysis. Writing a novel is without statistical pattern analysis. If multivoxel (pattern) analysis is without statistical pattern analysis and a brain reading, then multivoxel (pattern) analysis is without statistical pattern analysis and brain decoding.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Multivoxel (pattern) analysis is the writing of a novel.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nBrainReading(x) ::: x is a brain reading.\nBrainDecoding(x) ::: x is a brain decoding.\nExtractingInformation(x, y) ::: x extracts information from y.\nStatisticalPatternAnalysis(x) ::: x is statistical pattern analysis.\nWriting(x) ::: x is writing.\nNovel(x) ::: x is a novel.\nMultivoxel(x, y) ::: x is a multivoxel y.\nPremises:\nBrainReading(x) ⊕ BrainDecoding(x) ::: Either brain reading or brain decoding.\n∀x (BrainDecoding(x) → ExtractingInformation(x, BOLD)) ::: All brain decoding is extracting information from BOLD signals.\n¬∃x (ExtractingInformation(x, BOLD) → StatisticalPatternAnalysis(x)) ::: No extracting information from BOLD signals is without statistical pattern analysis.\nWriting(novel) ::: Writing a novel.\nMultivoxel(pattern) ::: Multivoxel (pattern) analysis.\nConclusion:\nWriting(novel) ⊕ Multivoxel(pattern) ::: Multivoxel (pattern) analysis is the writing of a novel.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person"
    ]
  },
  {
    "id": "FOLIO_train_830",
    "context": "Either brain reading or brain decoding. All brain decoding is extracting information from BOLD signals. No extracting information from BOLD signals is without statistical pattern analysis. Writing a novel is without statistical pattern analysis. If multivoxel (pattern) analysis is without statistical pattern analysis and a brain reading, then multivoxel (pattern) analysis is without statistical pattern analysis and brain decoding.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Multivoxel (pattern) analysis is without statistical pattern analysis and writing a novel.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nBrainReading(x) ::: x is a brain reading.\nBrainDecoding(x) ::: x is a brain decoding.\nExtractingInformation(x, y) ::: x extracts information from y.\nBOLD(x) ::: x is a BOLD signal.\nStatisticalPatternAnalysis(x) ::: x is a statistical pattern analysis.\nWritingANovel(x) ::: x is writing a novel.\nMultivoxel(x, y) ::: x is a multivoxel analysis of y.\nPremises:\nBrainDecoding(x) ⊕ ExtractingInformation(x, BOLD(y)) ::: Either brain reading or brain decoding. All brain decoding is extracting information from BOLD signals.\n∀x (ExtractingInformation(x, BOLD(y)) → StatisticalPatternAnalysis(x)) ::: No extracting information from BOLD signals is without statistical pattern analysis.\nWritingANovel(x) ⊕ StatisticalPatternAnalysis(x) ::: Writing a novel is without statistical pattern analysis.\n(Multivoxel(x, BOLD(y)) ∧ BrainReading(x)) → (Multivoxel(x, BOLD(y)) ⊕ BrainDecoding(x)) ::: If multivoxel (pattern) analysis is without statistical pattern analysis and a brain reading, then multivoxel (pattern) analysis is without statistical pattern analysis and brain decoding.\nConclusion:\nMultivoxel(x, BOLD(y)) ⊕ StatisticalPatternAnalysis(x) ::: Multivoxel (pattern) analysis is without statistical pattern analysis and writing a novel.\n------"
    ]
  },
  {
    "id": "FOLIO_train_831",
    "context": "Either brain reading or brain decoding. All brain decoding is extracting information from BOLD signals. No extracting information from BOLD signals is without statistical pattern analysis. Writing a novel is without statistical pattern analysis. If multivoxel (pattern) analysis is without statistical pattern analysis and a brain reading, then multivoxel (pattern) analysis is without statistical pattern analysis and brain decoding.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Multivoxel (pattern) analysis is without statistical pattern analysis or writing a novel.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nBrainReading(x) ::: x is a brain reading.\nBrainDecoding(x) ::: x is a brain decoding.\nExtractingInformation(x, y) ::: x extracts information from y.\nBOLD(x) ::: x is a BOLD signal.\nStatisticalPatternAnalysis(x) ::: x is a statistical pattern analysis.\nWriting(x) ::: x is writing.\nMultivoxel(x) ::: x is a multivoxel.\nPremises:\nBrainDecoding(x) ⊕ ExtractingInformation(x, BOLD(y)) ::: Either brain reading or brain decoding. All brain decoding is extracting information from BOLD signals.\n∀x (ExtractingInformation(x, BOLD(y)) → StatisticalPatternAnalysis(x)) ::: No extracting information from BOLD signals is without statistical pattern analysis.\nWriting(novel) ::: Writing a novel.\nMultivoxel(pattern) ⊕ BrainReading(x) ::: Multivoxel (pattern) analysis is without statistical pattern analysis and a brain reading.\nConclusion:\nMultivoxel(pattern) ⊕ Writing(novel) ::: Multivoxel (pattern) analysis is without statistical pattern analysis or writing a novel.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware"
    ]
  },
  {
    "id": "FOLIO_train_832",
    "context": "Either brain reading or brain decoding. All brain decoding is extracting information from BOLD signals. No extracting information from BOLD signals is without statistical pattern analysis. Writing a novel is without statistical pattern analysis. If multivoxel (pattern) analysis is without statistical pattern analysis and a brain reading, then multivoxel (pattern) analysis is without statistical pattern analysis and brain decoding.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Multivoxel (pattern) analysis is either without statistical pattern analysis or writing a novel.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nBrainReading(x) ::: x is a brain reading.\nBrainDecoding(x) ::: x is a brain decoding.\nExtractingInformation(x, y) ::: x extracts information from y.\nBOLD(x) ::: x is a BOLD signal.\nStatisticalPatternAnalysis(x) ::: x is a statistical pattern analysis.\nWritingANovel(x) ::: x is writing a novel.\nMultivoxel(x, y) ::: x is a multivoxel analysis of y.\nPremises:\n∀x (BrainDecoding(x) → ExtractingInformation(x, BOLD(x))) ::: All brain decoding is extracting information from BOLD signals.\n∀x (ExtractingInformation(x, BOLD(x)) → StatisticalPatternAnalysis(x)) ::: No extracting information from BOLD signals is without statistical pattern analysis.\nWritingANovel(x) ⊕ StatisticalPatternAnalysis(x) ::: Writing a novel is without statistical pattern analysis.\n(Multivoxel(x, BOLD(x)) ∧ BrainReading(x)) ⊕ (Multivoxel(x, BOLD(x)) ∧ BrainDecoding(x)) ::: If multivoxel (pattern) analysis is without statistical pattern analysis and a brain reading, then multivoxel (pattern) analysis is without statistical pattern analysis and brain decoding.\nConclusion:\nMultivoxel(x, BOLD(x)) ⊕ BrainReading(x) ::: Multivoxel (pattern) analysis is either without statistical pattern analysis or writing a novel.\n------\nProblem:\nAll"
    ]
  },
  {
    "id": "FOLIO_train_833",
    "context": "Either brain reading or brain decoding. All brain decoding is extracting information from BOLD signals. No extracting information from BOLD signals is without statistical pattern analysis. Writing a novel is without statistical pattern analysis. If multivoxel (pattern) analysis is without statistical pattern analysis and a brain reading, then multivoxel (pattern) analysis is without statistical pattern analysis and brain decoding.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If multivoxel (pattern) analysis is writing a novel, then multivoxel (pattern) analysis is neither without statistical pattern analysis nor writing a novel.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBrainReading(x) ::: x is a brain reading.\nBrainDecoding(x) ::: x is a brain decoding.\nExtractingInformation(x, y) ::: x is extracting information from y.\nBOLDSignal(x) ::: x is a BOLD signal.\nStatisticalPatternAnalysis(x) ::: x is a statistical pattern analysis.\nWritingANovel(x) ::: x is writing a novel.\nMultivoxel(x, y) ::: x is a multivoxel y.\nPremises:\nBrainReading(x) ⊕ BrainDecoding(x) ::: Either brain reading or brain decoding.\n∀x (BrainDecoding(x) → ExtractingInformation(x, BOLDSignal(x))) ::: All brain decoding is extracting information from BOLDSignal.\n∀x (ExtractingInformation(x, BOLDSignal(x)) → StatisticalPatternAnalysis(x)) ::: No extracting information from BOLDSignal is without statistical pattern analysis.\nWritingANovel(x) ⊕ StatisticalPatternAnalysis(x) ::: Writing a novel is without statistical pattern analysis.\n(Multivoxel(x, pattern) ∧ BrainReading(x)) → (Multivoxel(x, pattern) ⊕ BrainDecoding(x)) ::: If multivoxel (pattern) analysis is a brain reading, then multivoxel (pattern) analysis is either a brain reading or a brain decoding.\nConclusion:\n(Multivoxel(x, pattern) ∧ WritingANovel(x)) → (Multivoxel(x, pattern)"
    ]
  },
  {
    "id": "FOLIO_train_834",
    "context": "If you have room for dessert, you have room for broccoli. Everyone at Luis's dinner party has room for dessert, including Luis. Mauricia does not have room for broccoli. Luis's dinner party is the first ever dinner party that Allison has attended. Gustave has room for both broccoli and asparagus. Broccoli and asparagus are both vegetables.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Allison has room for broccoli.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nRoomFor(x, y) ::: x has room for y.\nDessert(x) ::: x is a dessert.\nBroccoli(x) ::: x is broccoli.\nAsparagus(x) ::: x is asparagus.\nVegetable(x) ::: x is a vegetable.\nPremises:\n∀x (RoomFor(x, dessert) → RoomFor(x, broccoli)) ::: If you have room for dessert, you have room for broccoli.\nRoomFor(luis, dessert) ::: Luis has room for dessert.\nRoomFor(mauricia, dessert) ::: Mauricia has room for dessert.\nRoomFor(allison, dessert) ::: Allison has room for dessert.\nRoomFor(gustave, broccoli) ::: Gustave has room for broccoli.\nRoomFor(gustave, asparagus) ::: Gustave has room for asparagus.\nConclusion:\nRoomFor(allison, broccoli) ::: Allison has room for broccoli.\n------\nProblem:\nThe following is a list of the top 100 most popular baby names in the United States in 2013.\n1. Jacob\n2. Mason\n3. William\n4. Michael\n5. Ethan\n6. Jayden\n7. Alexander\n8. Daniel\n9. Noah\n10. Aiden\n11. Benjamin\n12. Anthony\n13. David\n14. James\n15. Christopher\n16. Matthew\n17. John\n18. Joseph\n19. Andrew"
    ]
  },
  {
    "id": "FOLIO_train_835",
    "context": "If you have room for dessert, you have room for broccoli. Everyone at Luis's dinner party has room for dessert, including Luis. Mauricia does not have room for broccoli. Luis's dinner party is the first ever dinner party that Allison has attended. Gustave has room for both broccoli and asparagus. Broccoli and asparagus are both vegetables.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mauricia is at Luis's dinner party.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nRoomFor(x, y) ::: x has room for y.\nDessert(x) ::: x is a dessert.\nBroccoli(x) ::: x is broccoli.\nAsparagus(x) ::: x is asparagus.\nVegetable(x) ::: x is a vegetable.\nPremises:\n∀x (RoomFor(x, dessert) → RoomFor(x, broccoli)) ::: If you have room for dessert, you have room for broccoli.\n∀x (RoomFor(x, dessert) → RoomFor(x, asparagus)) ::: If you have room for dessert, you have room for asparagus.\n∀x (RoomFor(x, broccoli) ⊕ RoomFor(x, asparagus)) ::: Everyone at Luis's dinner party has room for dessert, including Luis.\n¬RoomFor(mauricia, broccoli) ::: Mauricia does not have room for broccoli.\nAllison(x) ::: x is Allison.\nLuis(x) ::: x is Luis.\nDinnerParty(x) ::: x is a dinner party.\nFirst(x, y) ::: x is the first y.\nAttend(x, y) ::: x attends y.\nPremises:\nAllison(allison) ∧ DinnerParty(dinnerParty) ∧ First(dinnerParty, firstDinnerParty) ∧ Attend(allison, firstDinnerParty) ::: Allison has attended the first ever dinner party.\nGustave(gustave) ∧ RoomFor"
    ]
  },
  {
    "id": "FOLIO_train_836",
    "context": "If you have room for dessert, you have room for broccoli. Everyone at Luis's dinner party has room for dessert, including Luis. Mauricia does not have room for broccoli. Luis's dinner party is the first ever dinner party that Allison has attended. Gustave has room for both broccoli and asparagus. Broccoli and asparagus are both vegetables.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Gustav has room for dessert.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nRoomFor(x, y) ::: x has room for y.\nDessert(x) ::: x is a dessert.\nBroccoli(x) ::: x is broccoli.\nAsparagus(x) ::: x is asparagus.\nVegetable(x) ::: x is a vegetable.\nPremises:\n∀x (RoomFor(x, dessert) → RoomFor(x, broccoli)) ::: If you have room for dessert, you have room for broccoli.\nRoomFor(luis, dessert) ::: Luis has room for dessert.\nRoomFor(mauricia, broccoli) ::: Mauricia does not have room for broccoli.\nRoomFor(allison, dessert) ::: Luis's dinner party is the first ever dinner party that Allison has attended.\nRoomFor(gustave, asparagus) ::: Gustave has room for both broccoli and asparagus.\nConclusion:\nRoomFor(gustave, dessert) ::: Gustav has room for dessert.\n------\nProblem:\nThe following is a list of the top 100 most popular baby names in the United States in 2013.\n1. Jacob\n2. Mason\n3. William\n4. Michael\n5. Jayden\n6. Ethan\n7. Alexander\n8. Noah\n9. Daniel\n10. Aiden\n11. Benjamin\n12. Anthony\n13. David\n14. James\n15. Christopher\n16. Matthew\n17. Andrew\n18. Joseph\n19. Christian\n20. Samuel\n21."
    ]
  },
  {
    "id": "FOLIO_train_837",
    "context": "Imagine Dragons is an American pop rock band. The lead singer of Imagine Dragons is Dan. Dan is also a songwriter. All lead singers are singers. All singers are musicians. Demons is one of the most popular singles of Imagine Dragons. Some singles of Imagine Dragons have been on Billboard Hot 100.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Some rock band has a songwriter.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nRockBand(x) ::: x is a rock band.\nLeadSinger(x) ::: x is the lead singer of x.\nSinger(x) ::: x is a singer.\nMusician(x) ::: x is a musician.\nSongwriter(x) ::: x is a songwriter.\nSingle(x) ::: x is a single.\nPopular(x) ::: x is popular.\nBillboardHot100(x) ::: x is on Billboard Hot 100.\nPremises:\nRockBand(imagineDragons) ∧ LeadSinger(imagineDragons, dan) ∧ Singer(dan) ∧ Musician(dan) ∧ Songwriter(dan) ::: Imagine Dragons is an American pop rock band. The lead singer of Imagine Dragons is Dan. Dan is also a songwriter.\n∀x (Singer(x) → Musician(x)) ::: All singers are musicians.\n∃x (Single(x) ∧ Popular(x) ∧ BillboardHot100(x)) ::: Some singles of Imagine Dragons have been on Billboard Hot 100.\nConclusion:\nMusician(dan) ::: Some rock band has a songwriter.\n------\nProblem:\nThe following is a list of the top 10 most popular songs of 2017.\n1. Despacito (Luis Fonsi ft. Daddy Yankee)\n2. Shape of You (Ed Sheeran)\n3. Rockstar (Post Malone ft. 21 Savage)\n4. I'm the One (DJ Khaled ft. Justin Bieber, Quavo"
    ]
  },
  {
    "id": "FOLIO_train_838",
    "context": "Imagine Dragons is an American pop rock band. The lead singer of Imagine Dragons is Dan. Dan is also a songwriter. All lead singers are singers. All singers are musicians. Demons is one of the most popular singles of Imagine Dragons. Some singles of Imagine Dragons have been on Billboard Hot 100.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Dan is not a musician.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nLeadSinger(x) ::: x is a lead singer.\nSinger(x) ::: x is a singer.\nMusician(x) ::: x is a musician.\nPopRockBand(x) ::: x is a pop rock band.\nSingle(x) ::: x is a single.\nPopular(x) ::: x is popular.\nBillboardHot100(x) ::: x is on Billboard Hot 100.\nPremises:\nLeadSinger(dan) ∧ Singer(dan) ∧ Musician(dan) ::: Dan is a lead singer, a singer, and a musician.\n∀x (LeadSinger(x) → Singer(x)) ::: All lead singers are singers.\n∀x (Singer(x) → Musician(x)) ::: All singers are musicians.\nSingle(demons) ∧ Popular(demons) ∧ BillboardHot100(demons) ::: Demons is one of the most popular singles of Imagine Dragons.\nConclusion:\n¬Musician(dan) ::: Dan is not a musician.\n------\nProblem:\nThe following is a list of the top 10 most popular songs of 2017.\n1. Despacito\n2. Shape of You\n3. Rockstar\n4. Something Just Like This\n5. I'm the One\n6. Havana\n7. Feel It Still\n8. Wild Thoughts\n9. Bodak Yellow\n10. That's What I Like\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Despacito is the most popular song of"
    ]
  },
  {
    "id": "FOLIO_train_839",
    "context": "Imagine Dragons is an American pop rock band. The lead singer of Imagine Dragons is Dan. Dan is also a songwriter. All lead singers are singers. All singers are musicians. Demons is one of the most popular singles of Imagine Dragons. Some singles of Imagine Dragons have been on Billboard Hot 100.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Demons has been on Billboard Hot 100.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nLeadSinger(x) ::: x is the lead singer of band x.\nSinger(x) ::: x is a singer.\nMusician(x) ::: x is a musician.\nPopRockBand(x) ::: x is a pop rock band.\nSingle(x) ::: x is a single.\nPopular(x) ::: x is popular.\nBillboardHot100(x) ::: x is on Billboard Hot 100.\nPremises:\nLeadSinger(dan) ∧ Singer(dan) ∧ Musician(dan) ::: Dan is the lead singer of Imagine Dragons. Dan is a singer. Dan is a musician.\nPopRockBand(imaginedragons) ∧ LeadSinger(dan) ::: Imagine Dragons is a pop rock band. Dan is the lead singer of Imagine Dragons.\nSingle(demons) ∧ Popular(demons) ::: Demons is one of the most popular singles of Imagine Dragons.\n∃x (Single(x) ∧ BillboardHot100(x)) ::: Some singles of Imagine Dragons have been on Billboard Hot 100.\nConclusion:\nBillboardHot100(demons) ::: Demons has been on Billboard Hot 100.\n------\nProblem:\nThe following is a list of the top 10 most popular songs of 2017 according to Billboard Hot 100.\n1) Despacito\n2) Shape of You\n3) Rockstar\n4) I'm the One\n5) Something Just Like This\n6) Havana\n7) Wild Thoughts\n8) Feel It"
    ]
  },
  {
    "id": "FOLIO_train_840",
    "context": "All bread is food. Some sandwiches are bread. All food is edible. No edible things are poisonous. Deodorant is poisonous.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Deodorant is a sandwich.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nBread(x) ::: x is bread.\nSandwich(x) ::: x is a sandwich.\nFood(x) ::: x is food.\nEdible(x) ::: x is edible.\nPoisonous(x) ::: x is poisonous.\nPremises:\n∀x (Bread(x) → Food(x)) ::: All bread is food.\n∃x (Sandwich(x) ∧ Bread(x)) ::: Some sandwiches are bread.\n∀x (Food(x) → Edible(x)) ::: All food is edible.\n¬∃x (Edible(x) ∧ Poisonous(x)) ::: No edible things are poisonous.\nDeodorant(x) ::: x is deodorant.\nConclusion:\nSandwich(deodorant) ::: Deodorant is a sandwich.\n------"
    ]
  },
  {
    "id": "FOLIO_train_841",
    "context": "All bread is food. Some sandwiches are bread. All food is edible. No edible things are poisonous. Deodorant is poisonous.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Deodorant is a sandwich and bread.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nBread(x) ::: x is bread.\nSandwich(x) ::: x is a sandwich.\nFood(x) ::: x is food.\nEdible(x) ::: x is edible.\nPoisonous(x) ::: x is poisonous.\nPremises:\n∀x (Bread(x) → Food(x)) ::: All bread is food.\n∃x (Sandwich(x) ∧ Bread(x)) ::: Some sandwiches are bread.\n∀x (Food(x) → Edible(x)) ::: All food is edible.\n¬∃x (Edible(x) ∧ Poisonous(x)) ::: No edible things are poisonous.\nDeodorant(x) ::: x is deodorant.\nConclusion:\nBread(deodorant) ∧ Sandwich(deodorant) ::: Deodor"
    ]
  },
  {
    "id": "FOLIO_train_842",
    "context": "All bread is food. Some sandwiches are bread. All food is edible. No edible things are poisonous. Deodorant is poisonous.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If deodorant is a loaf of bread, then deodorant is not a sandwich.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nBread(x) ::: x is a loaf of bread.\nSandwich(x) ::: x is a sandwich.\nFood(x) ::: x is food.\nEdible(x) ::: x is edible.\nPoisonous(x) ::: x is poisonous.\nPremises:\n∀x (Bread(x) → Food(x)) ::: All bread is food.\n∃x (Sandwich(x) ∧ Bread(x)) ::: Some sandwiches are bread.\n∀x (Food(x) → Edible(x)) ::: All food is edible.\n¬∃x (Edible(x) ∧ Poisonous(x)) ::: No edible things are poisonous.\nDeodorant(x) ::: x is deodorant.\nConclusion:\n¬(Sandwich(deodorant) ∧ Bread(de"
    ]
  },
  {
    "id": "FOLIO_train_843",
    "context": "Common utilities include water, electricity, gas, heating, sewer, trash, and recycling. Many apartment rents cover the cost of water and electricity. Susan lives in an apartment where the rent covers all utilities. The rent of the apartment where Ava lives does not cover any utility expenses. Noah lives in an apartment where the rent does not cover heating.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Noah needs to pay the water bill.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nApartment(x) ::: x is an apartment.\nRent(x, y) ::: x rents y.\nUtility(x) ::: x is a utility.\nCover(x, y) ::: x covers y.\nLive(x, y) ::: x lives in y.\nPremises:\nCommon(water, electricity, gas, heating, sewer, trash, recycling) ::: water, electricity, gas, heating, sewer, trash, and recycling are common utilities.\n∀x (Apartment(x) → ∃y (Rent(x, y))) ::: All apartments rent something.\n∀x (Apartment(x) → ∃y (Rent(x, y) ∧ Cover(x, y))) ::: All apartments rent something that is covered by the rent.\n∀x (Apartment(x) → ∃"
    ]
  },
  {
    "id": "FOLIO_train_844",
    "context": "Common utilities include water, electricity, gas, heating, sewer, trash, and recycling. Many apartment rents cover the cost of water and electricity. Susan lives in an apartment where the rent covers all utilities. The rent of the apartment where Ava lives does not cover any utility expenses. Noah lives in an apartment where the rent does not cover heating.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Noah and Ava both need to pay the heating bill.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nUtility(x) ::: x is a utility.\nApartment(x) ::: x is an apartment.\nRent(x) ::: x is a rent.\nCover(x, y) ::: x covers the cost of y.\nLive(x, y) ::: x lives in y.\nPremises:\nCommon(Utility(water), Utility(electricity), Utility(gas), Utility(heating), Utility(sewer), Utility(trash), Utility(recycling)) ::: Common utilities include water, electricity, gas, heating, sewer, trash, and recycling.\n∀x (Apartment(x) → Rent(x)) ::: All apartments have a rent.\n∃x (Apartment(x) ∧ Rent(x) ∧ Cover(x, water)) ::: Many apartment rents cover the cost of water."
    ]
  },
  {
    "id": "FOLIO_train_845",
    "context": "Common utilities include water, electricity, gas, heating, sewer, trash, and recycling. Many apartment rents cover the cost of water and electricity. Susan lives in an apartment where the rent covers all utilities. The rent of the apartment where Ava lives does not cover any utility expenses. Noah lives in an apartment where the rent does not cover heating.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Susan does not need to pay the water bill.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nApartment(x) ::: x is an apartment.\nRent(x, y) ::: x rents y.\nUtility(x) ::: x is a utility.\nCover(x, y) ::: x covers y.\nLive(x, y) ::: x lives in y.\nPremises:\nCommon(water, electricity, gas, heating, sewer, trash, recycling) ::: water, electricity, gas, heating, sewer, trash, and recycling are common utilities.\n∀x (Apartment(x) → ∃y (Rent(x, y))) ::: All apartments rent.\n∀x (Apartment(x) → ∃y (Rent(x, y))) ::: All apartments rent.\n∀x (Apartment(x) → ∃y (Rent(x, y))) ::: All apartments rent."
    ]
  },
  {
    "id": "FOLIO_train_846",
    "context": "All clothes are products. No products are perfect. All dresses are clothes. All skirts are dresses. If Nike is clothes, then Nike is perfect and a dress.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Nike is perfect.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nClothes(x) ::: x is a clothes.\nProduct(x) ::: x is a product.\nPerfect(x) ::: x is perfect.\nDress(x) ::: x is a dress.\nSkirts(x) ::: x is a skirt.\nPremises:\n∀x (Clothes(x) → Product(x)) ::: All clothes are products.\n∀x (Product(x) → ¬Perfect(x)) ::: No products are perfect.\n∀x (Dress(x) → Clothes(x)) ::: All dresses are clothes.\n∀x (Skirts(x) → Dress(x)) ::: All skirts are dresses.\nConclusion:\nPerfect(nike) ::: Nike is perfect.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee"
    ]
  },
  {
    "id": "FOLIO_train_847",
    "context": "All clothes are products. No products are perfect. All dresses are clothes. All skirts are dresses. If Nike is clothes, then Nike is perfect and a dress.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Nike is a skirt.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nClothes(x) ::: x is a clothes.\nProduct(x) ::: x is a product.\nPerfect(x) ::: x is perfect.\nDress(x) ::: x is a dress.\nSkirts(x) ::: x is a skirt.\nPremises:\n∀x (Clothes(x) → Product(x)) ::: All clothes are products.\n∀x (Product(x) → ¬Perfect(x)) ::: No products are perfect.\n∀x (Dress(x) → Clothes(x)) ::: All dresses are clothes.\n∀x (Skirts(x) → Dress(x)) ::: All skirts are dresses.\nConclusion:\nSkirts(nike) ::: Nike is a skirt.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either"
    ]
  },
  {
    "id": "FOLIO_train_848",
    "context": "All clothes are products. No products are perfect. All dresses are clothes. All skirts are dresses. If Nike is clothes, then Nike is perfect and a dress.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Nike is not a skirt.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nClothes(x) ::: x is a clothes.\nProduct(x) ::: x is a product.\nPerfect(x) ::: x is perfect.\nDress(x) ::: x is a dress.\nSkirts(x) ::: x is a skirt.\nPremises:\n∀x (Clothes(x) → Product(x)) ::: All clothes are products.\n∀x (Product(x) → ¬Perfect(x)) ::: No products are perfect.\n∀x (Dress(x) → Clothes(x)) ::: All dresses are clothes.\n∀x (Skirts(x) → Dress(x)) ::: All skirts are dresses.\nConclusion:\n¬(Skirts(nike) ∧ Perfect(nike)) ::: Nike is not a skirt and perfect.\n------\nProblem:\nAll people who"
    ]
  },
  {
    "id": "FOLIO_train_849",
    "context": "All pets are animals. Pets can be either a dog or a cat. If a person has a pet, they care for that pet. Dogs and Cats can be naughty. Pets who are naughty are not liked as much. Charlie has a naughty pet dog named Leo.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Leo is an animal.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nPet(x) ::: x is a pet.\nAnimal(x) ::: x is an animal.\nDog(x) ::: x is a dog.\nCat(x) ::: x is a cat.\nNaughty(x) ::: x is naughty.\nLiked(x) ::: x is liked.\nPremises:\n∀x (Pet(x) → Animal(x)) ::: All pets are animals.\n∀x (Pet(x) ⊕ Dog(x)) ::: Pets can be either a dog or a cat.\n∀x (Pet(x) → Liked(x)) ::: If a person has a pet, they care for that pet.\n∀x (Dog(x) → Naughty(x)) ::: Dogs and Cats can be naughty.\nDog(leo) ∧ Naughty(leo"
    ]
  },
  {
    "id": "FOLIO_train_850",
    "context": "All pets are animals. Pets can be either a dog or a cat. If a person has a pet, they care for that pet. Dogs and Cats can be naughty. Pets who are naughty are not liked as much. Charlie has a naughty pet dog named Leo.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Charlie does not like Leo and does not care for Leo.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nPet(x) ::: x is a pet.\nAnimal(x) ::: x is an animal.\nDog(x) ::: x is a dog.\nCat(x) ::: x is a cat.\nCare(x, y) ::: x cares for y.\nNaughty(x) ::: x is naughty.\nLiked(x, y) ::: x is liked by y.\nPremises:\n∀x (Pet(x) → Animal(x)) ::: All pets are animals.\n∀x (Pet(x) ⊕ Dog(x)) ::: Pets can be either a dog or a cat.\n∀x (Care(x, y) → Liked(y, x)) ::: If a person has a pet, they care for that pet.\n∀x (Dog(x) → Naughty(x)) ::: Dogs and Cats can be naughty.\n∃x (Pet(x) ∧ Dog(x) ∧ Naughty(x)) ::: Pets who are naughty are not liked as much.\nConclusion:\nLiked(charlie, leo) ⊕ Liked(charlie, leo) ::: Charlie does not like Leo and does not care for Leo.\n------"
    ]
  },
  {
    "id": "FOLIO_train_851",
    "context": "All pets are animals. Pets can be either a dog or a cat. If a person has a pet, they care for that pet. Dogs and Cats can be naughty. Pets who are naughty are not liked as much. Charlie has a naughty pet dog named Leo.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Dogs are always not naughty.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nPet(x) ::: x is a pet.\nAnimal(x) ::: x is an animal.\nDog(x) ::: x is a dog.\nCat(x) ::: x is a cat.\nCare(x, y) ::: x cares for y.\nNaughty(x) ::: x is naughty.\nLiked(x, y) ::: x is liked by y.\nPremises:\n∀x (Pet(x) → Animal(x)) ::: All pets are animals.\n∀x (Pet(x) ⊕ Dog(x)) ::: Pets can be either a dog or a cat.\n∀x (Care(x, y) → Liked(y, x)) ::: If a person has a pet, they care for that pet.\n∀x (Dog(x) → Naughty(x)) ::: Dogs and Cats can be naughty.\n∃x (Pet(x) ∧ Dog(x) ∧ Naughty(x)) ::: Charlie has a naughty pet dog named Leo.\nConclusion:\n¬Dog(x) → Naughty(x) ::: Dogs are always not naughty.\n------\nProblem:\nAll people who regularly drink coffee are dependent on c"
    ]
  },
  {
    "id": "FOLIO_train_852",
    "context": "Surprises are either fun or dreadful. All scares are surprises.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? All scares are fun.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nSurprise(x) ::: x is a surprise.\nFun(x) ::: x is fun.\nDreadful(x) ::: x is dreadful.\nScares(x) ::: x is a scare.\nPremises:\n∀x (Surprise(x) → (Fun(x) ⊕ Dreadful(x))) ::: Surprises are either fun or dreadful.\n∀x (Scares(x) → Surprise(x)) ::: All scares are surprises.\nConclusion:\nFun(x) ::: All scares are fun.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false"
    ]
  },
  {
    "id": "FOLIO_train_853",
    "context": "All books written by Cixin Liu have sold more than 1 million copies. Some books that have won the Hugo Award were written by Cixin Liu. All books about the future are influenced by Isaac Asimov. The book the Three Body Problem has sold more than 1 million copies. The Three Body Problem is about the future.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Three Body Problem won the Hugo Award.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nWrittenBy(x, y) ::: x wrote y.\nSoldMoreThan(x, y) ::: x sold more than y copies.\nWon(x, y) ::: x won y.\nAbout(x, y) ::: x is about y.\nInfluencedBy(x, y) ::: x is influenced by y.\nPremises:\n∀x (WrittenBy(x, y) → SoldMoreThan(x, y)) ::: All books written by Cixin Liu have sold more than 1 million copies.\n∃x (WrittenBy(x, y) ∧ Won(x, hugoAward)) ::: Some books that have won the Hugo Award were written by Cixin Liu.\n∀x (About(x, y) → InfluencedBy(x, isaacAsimov)) ::: All books about the future are influenced by Isaac Asimov.\nSoldMoreThan(threeBodyProblem, 1000000) ::: The book the Three Body Problem has sold more than 1 million copies.\nAbout(threeBodyProblem, future) ::: The Three Body Problem is about the future.\nConclusion:\nWon(threeBodyProblem, hugoAward) ::: The Three Body Problem won the Hugo Award.\n------"
    ]
  },
  {
    "id": "FOLIO_train_854",
    "context": "All books written by Cixin Liu have sold more than 1 million copies. Some books that have won the Hugo Award were written by Cixin Liu. All books about the future are influenced by Isaac Asimov. The book the Three Body Problem has sold more than 1 million copies. The Three Body Problem is about the future.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Three Body Problem was influenced by Isaac Asimov.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nWrittenBy(x, y) ::: x wrote y.\nSoldMoreThan(x, y) ::: x sold more than y copies.\nWon(x, y) ::: x won y.\nInfluencedBy(x, y) ::: x was influenced by y.\nAbout(x, y) ::: x is about y.\nFuture(x) ::: x is about the future.\nPremises:\n∀x (WrittenBy(x, y) → SoldMoreThan(x, 1000000)) ::: All books written by x have sold more than 1000000 copies.\n∃x (WrittenBy(x, y) ∧ Won(x, hugo)) ::: Some books that have won the Hugo Award were written by x.\n∀x (About(x, y) → InfluencedBy(x, asimov)) ::: All books about y are influenced by asimov.\nSoldMoreThan(threeBodyProblem, 1000000) ::: The Three Body Problem has sold more than 1000000 copies.\nAbout(threeBodyProblem, future) ::: The Three Body Problem is about the future.\nConclusion:\nInfluencedBy(threeBodyProblem, asimov"
    ]
  },
  {
    "id": "FOLIO_train_855",
    "context": "All books written by Cixin Liu have sold more than 1 million copies. Some books that have won the Hugo Award were written by Cixin Liu. All books about the future are influenced by Isaac Asimov. The book the Three Body Problem has sold more than 1 million copies. The Three Body Problem is about the future.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Three Body Problem was written by Cixin Liu.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBook(x) ::: x is a book.\nSold(x, y) ::: x has sold y copies.\nHugoAward(x) ::: x has won the Hugo Award.\nFuture(x) ::: x is about the future.\nInfluence(x, y) ::: x is influenced by y.\nPremises:\n∀x (Book(x) → Sold(x, 1000000)) ::: All books written by Cixin Liu have sold more than 1 million copies.\n∃x (HugoAward(x) ∧ Book(x)) ::: Some books that have won the Hugo Award were written by Cixin Liu.\n∀x (Future(x) → Influence(x, asimov)) ::: All books about the future are influenced by Isaac Asimov.\nSold(threeBodyProblem, 1000000) ::: The book the Three Body Problem has sold more than 1 million copies.\nFuture(threeBodyProblem) ::: The Three Body Problem is about the future.\nConclusion:\nBook(threeBodyProblem) ∧ HugoAward(threeBodyProblem) ∧ Influence(threeBodyProblem, asimov) ::: The Three Body Problem was written by Cixin Liu.\n------\nProblem:"
    ]
  },
  {
    "id": "FOLIO_train_856",
    "context": "Some students who major in computer science get up early. If a student gets up early, then he/she will study in the morning. All students studying in the morning are good at time management. All students good at time management are popular among students. James is not popular among students.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James majors in computer science.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nMajorsIn(x, y) ::: x majors in y.\nGetsUpEarly(x) ::: x gets up early.\nStudiesInTheMorning(x) ::: x studies in the morning.\nGoodAtTimeManagement(x) ::: x is good at time management.\nPopular(x) ::: x is popular.\nPremises:\n∀x (MajorsIn(x, computerScience) → GetsUpEarly(x)) ::: Some students who major in computer science get up early.\n∀x (GetsUpEarly(x) → StudiesInTheMorning(x)) ::: If a student gets up early, then he/she will study in the morning.\n∀x (StudiesInTheMorning(x) → GoodAtTimeManagement(x)) ::: All students studying in the morning are good at time management.\n∀x (GoodAtTimeManagement(x) → Popular(x)) ::: All students good at time management are popular among students.\n¬Popular(james) ::: James is not popular among students.\nConclusion:\nMajorsIn(james, computerScience) ::: James majors in computer science.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink"
    ]
  },
  {
    "id": "FOLIO_train_857",
    "context": "Some students who major in computer science get up early. If a student gets up early, then he/she will study in the morning. All students studying in the morning are good at time management. All students good at time management are popular among students. James is not popular among students.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James majors in computer science and gets up early.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nMajorsIn(x, y) ::: x majors in y.\nGetsUpEarly(x) ::: x gets up early.\nStudiesInTheMorning(x) ::: x studies in the morning.\nGoodAtTimeManagement(x) ::: x is good at time management.\nPopular(x) ::: x is popular.\nPremises:\n∀x (MajorsIn(x, computerScience) → GetsUpEarly(x)) ::: Some students who major in computer science get up early.\n∀x (GetsUpEarly(x) → StudiesInTheMorning(x)) ::: If a student gets up early, then he/she will study in the morning.\n∀x (StudiesInTheMorning(x) → GoodAtTimeManagement(x)) ::: All students studying in the morning are good at time management.\n∀x (GoodAtTimeManagement(x) → Popular(x)) ::: All students good at time management are popular among students.\n¬Popular(james) ::: James is not popular among students.\nConclusion:\nGetsUpEarly(james) ∧ StudiesInTheMorning(james) ∧ GoodAtTimeManagement(james) ::: James majors in computer science and gets up early."
    ]
  },
  {
    "id": "FOLIO_train_858",
    "context": "Some students who major in computer science get up early. If a student gets up early, then he/she will study in the morning. All students studying in the morning are good at time management. All students good at time management are popular among students. James is not popular among students.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If James gets up early, then he majors in computer science.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nMajorsIn(x, y) ::: x majors in y.\nGetsUpEarly(x) ::: x gets up early.\nStudiesInTheMorning(x) ::: x studies in the morning.\nGoodAtTimeManagement(x) ::: x is good at time management.\nPopular(x) ::: x is popular.\nPremises:\n∀x (GetsUpEarly(x) → StudiesInTheMorning(x)) ::: If a student gets up early, then he/she will study in the morning.\n∀x (StudiesInTheMorning(x) → GoodAtTimeManagement(x)) ::: All students studying in the morning are good at time management.\n∀x (GoodAtTimeManagement(x) → Popular(x)) ::: All students good at time management are popular among students.\n¬Popular(james) ::: James is not popular among students.\nConclusion:\nMajorsIn(james, computerScience) ::: If James gets up early, then he majors in computer science.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware"
    ]
  },
  {
    "id": "FOLIO_train_859",
    "context": "There is no dog on the roof. If there is a dog on the roof something went wrong.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Something went wrong.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nDog(x) ::: x is a dog.\nRoof(x) ::: x is on the roof.\nWrong(x) ::: x went wrong.\nPremises:\n¬Dog(x) ∧ ¬Roof(x) ::: There is no dog on the roof.\n∃x (Dog(x) ∧ Roof(x)) → Wrong(x) ::: If there is a dog on the roof something went wrong.\nConclusion:\nWrong(x) ::: Something went wrong.\n------\nProblem:\nThe following is a list of the top 100 most popular baby names in the United States in 2013.\n1. Jacob\n2. Mason\n3. William\n4. Michael\n5. Jayden\n6. Ethan\n7. Alexander\n8. Daniel\n9. Noah\n10. Aiden\n11. Benjamin\n12. Anthony\n13. David\n14. James\n15. Christopher\n16. Matthew\n17. John\n18. Joseph\n19. Andrew\n20. Christian\n21. Samuel\n22. Elijah\n23. Joshua\n24. Nicholas\n25. Logan\n26. Lucas\n27. Ryan\n28. Caleb\n29"
    ]
  },
  {
    "id": "FOLIO_train_860",
    "context": "Elephantopus is a genus of perennial plants in the daisy family. Elephantopus is widespread over much of Africa, southern Asia, Australia, and the Americas. Several species of Elephantopus are native to the southeastern United States. Elephantopus scaber is a traditional medicine.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Elephantopus is widespread over much of Australia and Southern Asia.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nElephantopus(x) ::: x is a genus of perennial plants in the daisy family.\nWidespread(x, y) ::: x is widespread over y.\nSouthernAsia(x) ::: x is in Southern Asia.\nAustralia(x) ::: x is in Australia.\nUnitedStates(x) ::: x is in the United States.\nSoutheasternUnitedStates(x) ::: x is in the southeastern United States.\nTraditionalMedicine(x) ::: x is a traditional medicine.\nPremises:\nElephantopus(elephantopus) ∧ Widespread(elephantopus, Africa) ∧ Widespread(elephantopus, Asia) ∧ Widespread(elephantopus, Australia) ∧ Widespread(elephantopus, America) ∧ Widespread(elephantopus, UnitedStates) ∧ Widespread(elephantopus, SoutheasternUnitedStates) ::: Elephantopus is a genus of perennial plants in the daisy family. Elephantopus is widespread over much of Africa, southern Asia, Australia, and the Americas.\nElephantopus(elephantopusScaber) ∧ TraditionalMedicine(elephantopusScaber) ::: Elephantopus scaber is a traditional medicine.\nConclusion:\nWidespread(elephantopus, SouthernAsia) ∧ Widespread(elephantopus, Australia) ::: Elephantopus is widespread over much of Australia and Southern Asia.\n------"
    ]
  },
  {
    "id": "FOLIO_train_861",
    "context": "Elephantopus is a genus of perennial plants in the daisy family. Elephantopus is widespread over much of Africa, southern Asia, Australia, and the Americas. Several species of Elephantopus are native to the southeastern United States. Elephantopus scaber is a traditional medicine.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? No Elephantopus is native to the southeastern United States.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nElephantopus(x) ::: x is an Elephantopus.\nPerennial(x) ::: x is a perennial plant.\nDaisy(x) ::: x is a daisy.\nWidespread(x, y) ::: x is widespread over y.\nNative(x, y) ::: x is native to y.\nTraditionalMedicine(x) ::: x is a traditional medicine.\nPremises:\nElephantopus(e) ∧ Perennial(e) ∧ Daisy(e) ∧ Widespread(e, africa) ∧ Widespread(e, asia) ∧ Widespread(e, australia) ∧ Widespread(e, americas) ∧ Widespread(e, southeasternUnitedStates) ::: Elephantopus is a genus of perennial plants in the daisy family. Elephantopus is widespread over much of Africa, southern Asia, Australia, and the Americas. Several species of Elephantopus are native to the southeastern United States.\nElephantopus(e) ∧ TraditionalMedicine(e) ::: Elephantopus scaber is a traditional medicine.\nConclusion:\n¬Native(e, southeasternUnitedStates) ::: No Elephantopus is native to the southeastern United States.\n------\nProblem:\nThe first known use of the word \"sandwich\" was in 1762 by John Montagu, 4th Earl of Sandwich, who was reputed to have been a prolific gambler. He would often order his v"
    ]
  },
  {
    "id": "FOLIO_train_862",
    "context": "Elephantopus is a genus of perennial plants in the daisy family. Elephantopus is widespread over much of Africa, southern Asia, Australia, and the Americas. Several species of Elephantopus are native to the southeastern United States. Elephantopus scaber is a traditional medicine.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Elephantopus is a traditional medicine.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nElephantopus(x) ::: x is a genus of perennial plants in the daisy family.\nWidespread(x, y) ::: x is widespread over y.\nNative(x, y) ::: x is native to y.\nTraditionalMedicine(x) ::: x is a traditional medicine.\nPremises:\nElephantopus(elephantopus) ∧ Widespread(elephantopus, Africa) ∧ Widespread(elephantopus, Asia) ∧ Widespread(elephantopus, Australia) ∧ Widespread(elephantopus, America) ∧ Native(elephantopus, America) ∧ Native(elephantopus, Asia) ∧ Native(elephantopus, Africa) ∧ Native(elephantopus, Australia) ::: Elephantopus is a genus of perennial plants in the daisy family. Elephantopus is widespread over much of Africa, southern Asia, Australia, and the Americas. Several species of Elephantopus are native to the southeastern United States.\nTraditionalMedicine(elephantopusScaber) ::: Elephantopus scaber is a traditional medicine.\nConclusion:\nTraditionalMedicine(elephantopus) ::: Elephantopus is a traditional medicine.\n------\nProblem:\nThe first known use of the word \"sandwich\" was in Edward Gibbon's 1764 Decline and Fall of the Roman Empire. The word \"sandwich\" was used to describe a piece of meat between two pieces of bread. The word \"sandwich\" was named after John Montagu"
    ]
  },
  {
    "id": "FOLIO_train_863",
    "context": "All Yale dormitories are located on York Street. All buildings managed by Yale Housing are dormitories. All buildings operated by Yale Housing staff are managed by Yale Housing. No buildings open to students are established after 1800. All buildings located on York Street are open to students. Harkness is either a building operated by Yale Housing staff or located on York Street.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Harkness is a Yale dormitory.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nYaleDormitory(x) ::: x is a Yale dormitory.\nBuilding(x) ::: x is a building.\nManagedBy(x, y) ::: x is managed by y.\nOperatedBy(x, y) ::: x is operated by y.\nOpenTo(x, y) ::: x is open to y.\nEstablished(x, y) ::: x is established in year y.\nLocatedOn(x, y) ::: x is located on y.\nPremises:\n∀x (YaleDormitory(x) → Building(x)) ::: All Yale dormitories are located on York Street.\n∀x (Building(x) → ManagedBy(x, y)) ::: All buildings managed by Yale Housing are dormitories.\n∀x (ManagedBy(x, y) → OperatedBy(x, y)) ::: All buildings operated by Yale Housing staff are managed by Yale Housing.\n¬∃x (Building(x) ∧ Established(x, year1800)) ::: No buildings open to students are established after 1800.\n∀x (LocatedOn(x, y) → OpenTo(x, y)) ::: All buildings located on York Street are open to students.\nHarkness ∧ YaleDormitory(harkness) ::: Harkness is a Yale dormitory.\nConclusion:\nHarkness ∧ YaleDormitory(harkness) ::: Harkness is a Yale dormitory.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or"
    ]
  },
  {
    "id": "FOLIO_train_864",
    "context": "All Yale dormitories are located on York Street. All buildings managed by Yale Housing are dormitories. All buildings operated by Yale Housing staff are managed by Yale Housing. No buildings open to students are established after 1800. All buildings located on York Street are open to students. Harkness is either a building operated by Yale Housing staff or located on York Street.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Harkness is not a Yale dormitory.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nYaleDormitory(x) ::: x is a Yale dormitory.\nBuildingManagedByYaleHousing(x) ::: x is a building managed by Yale Housing.\nBuildingOperatedByYaleHousingStaff(x) ::: x is a building operated by Yale Housing staff.\nBuildingOpenToStudents(x) ::: x is a building open to students.\nBuildingEstablishedAfter1800(x) ::: x is a building established after 1800.\nBuildingLocatedOnYorkStreet(x) ::: x is a building located on York Street.\nPremises:\n∀x (YaleDormitory(x) → BuildingManagedByYaleHousing(x)) ::: All Yale dormitories are located on York Street.\n∀x (BuildingManagedByYaleHousing(x) → BuildingOperatedByYaleHousingStaff(x)) ::: All buildings managed by Yale Housing are dormitories.\n∀x (BuildingOperatedByYaleHousingStaff(x) → BuildingOpenToStudents(x)) ::: All buildings operated by Yale Housing staff are managed by Yale Housing.\n¬∃x (BuildingOpenToStudents(x) ∧ BuildingEstablishedAfter1800(x)) ::: No buildings open to students are established after 1800.\n∀x (BuildingLocatedOnYorkStreet(x) → BuildingOpenToStudents(x)) ::: All buildings located on York Street are open to students.\nConclusion:\n¬YaleDormitory(harkness"
    ]
  },
  {
    "id": "FOLIO_train_865",
    "context": "All Yale dormitories are located on York Street. All buildings managed by Yale Housing are dormitories. All buildings operated by Yale Housing staff are managed by Yale Housing. No buildings open to students are established after 1800. All buildings located on York Street are open to students. Harkness is either a building operated by Yale Housing staff or located on York Street.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Harkness is established after 1800.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nYaleDormitory(x) ::: x is a Yale dormitory.\nYaleBuilding(x) ::: x is a building managed by Yale Housing.\nYaleOperated(x) ::: x is a building operated by Yale Housing staff.\nYaleOpenToStudents(x) ::: x is a building open to students.\nYorkStreet(x) ::: x is a building located on York Street.\nPremises:\nYaleDormitory(x) → YaleBuilding(x) ::: All Yale dormitories are located on York Street.\nYaleBuilding(x) → YaleOperated(x) ::: All buildings managed by Yale Housing are dormitories.\nYaleOperated(x) → YaleOpenToStudents(x) ::: All buildings operated by Yale Housing staff are managed by Yale Housing.\nYaleOpenToStudents(x) → ¬(YaleOpenToStudents(x) ∨ EstablishedAfter(x, year1800)) ::: No buildings open to students are established after 1800.\nYorkStreet(x) → YaleOpenToStudents(x) ::: All buildings located on York Street are open to students.\nConclusion:\nYaleOpenToStudents(harkness) ::: Harkness is open to students.\nEstablishedAfter(harkness, year1800) ::: Harkness is established after 1800.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted"
    ]
  },
  {
    "id": "FOLIO_train_866",
    "context": "All Yale dormitories are located on York Street. All buildings managed by Yale Housing are dormitories. All buildings operated by Yale Housing staff are managed by Yale Housing. No buildings open to students are established after 1800. All buildings located on York Street are open to students. Harkness is either a building operated by Yale Housing staff or located on York Street.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Harkness is established before 1800.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nYaleDormitory(x) ::: x is a Yale dormitory.\nYaleBuilding(x) ::: x is a building managed by Yale Housing.\nYaleOperated(x) ::: x is a building operated by Yale Housing staff.\nYaleOpenToStudents(x) ::: x is a building open to students.\nYorkStreet(x) ::: x is a building located on York Street.\nPremises:\nYaleDormitory(x) → YaleBuilding(x) ::: All Yale dormitories are located on York Street.\nYaleBuilding(x) → YaleOperated(x) ::: All buildings managed by Yale Housing are dormitories.\nYaleOperated(x) → YaleOpenToStudents(x) ::: All buildings operated by Yale Housing staff are managed by Yale Housing.\nYaleOpenToStudents(x) → ¬(YaleOpenToStudents(x) ∨ Established(x, year1800)) ::: No buildings open to students are established after 1800.\nYorkStreet(x) → YaleOpenToStudents(x) ::: All buildings located on York Street are open to students.\nHarkness → YaleOperated(harkness) ∨ YaleOpenToStudents(harkness) ::: Harkness is either a building operated by Yale Housing staff or located on York Street.\nConclusion:\nEstablished(harkness, year1800) ::: Harkness is established before 1800.\n------\nProblem:"
    ]
  },
  {
    "id": "FOLIO_train_867",
    "context": "There are no mansion houses in an urban area. All skyscrapers reside in urban areas. Every creepy haunted house is in a mansion house. Every terrifying Halloween scare comes from a creepy haunted house. The Scream is a creepy haunted house or a terrifying Halloween scare.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Scream is a skyscraper.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nUrbanArea(x) ::: x is an urban area.\nMansionHouse(x) ::: x is a mansion house.\nSkyscraper(x) ::: x is a skyscraper.\nCreepyHauntedHouse(x) ::: x is a creepy haunted house.\nTerrifyingHalloweenScare(x) ::: x is a terrifying Halloween scare.\nTheScream(x) ::: x is The Scream.\nPremises:\n¬MansionHouse(urbanArea) ::: There are no mansion houses in an urban area.\nSkyscraper(urbanArea) ::: All skyscrapers reside in urban areas.\nCreepyHauntedHouse(mansionHouse) ::: Every creepy haunted house is in a mansion house.\nTerrifyingHalloweenScare(creepyHauntedHouse) ::: Every terrifying Halloween scare comes from a creepy haunted house.\nTheScream(creepyHauntedHouse) ∨ TheScream(terrifyingHalloweenScare) ::: The Scream is a creepy haunted house or a terrifying Halloween scare.\nConclusion:\nSkyscraper(TheScream) ::: The Scream is a skyscraper.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina"
    ]
  },
  {
    "id": "FOLIO_train_868",
    "context": "There are no mansion houses in an urban area. All skyscrapers reside in urban areas. Every creepy haunted house is in a mansion house. Every terrifying Halloween scare comes from a creepy haunted house. The Scream is a creepy haunted house or a terrifying Halloween scare.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Scream is not a skyscraper.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nUrbanArea(x) ::: x is an urban area.\nMansionHouse(x) ::: x is a mansion house.\nSkyscraper(x) ::: x is a skyscraper.\nCreepyHauntedHouse(x) ::: x is a creepy haunted house.\nTerrifyingHalloweenScare(x) ::: x is a terrifying Halloween scare.\nTheScream(x) ::: x is The Scream.\nPremises:\n¬MansionHouse(urbanArea) ::: There are no mansion houses in an urban area.\nSkyscraper(urbanArea) ::: All skyscrapers reside in urban areas.\nCreepyHauntedHouse(mansionHouse) ::: Every creepy haunted house is in a mansion house.\nTerrifyingHalloweenScare(creepyHauntedHouse) ::: Every terrifying Halloween scare comes from a creepy haunted house.\nTheScream(creepyHauntedHouse) ∨ TheScream(terrifyingHalloweenScare) ::: The Scream is a creepy haunted house or a terrifying Halloween scare.\nConclusion:\n¬Skyscraper(TheScream) ::: The Scream is not a skyscraper.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug."
    ]
  },
  {
    "id": "FOLIO_train_869",
    "context": "There are no mansion houses in an urban area. All skyscrapers reside in urban areas. Every creepy haunted house is in a mansion house. Every terrifying Halloween scare comes from a creepy haunted house. The Scream is a creepy haunted house or a terrifying Halloween scare.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Scream is a terrifying Halloween scare.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nUrbanArea(x) ::: x is an urban area.\nMansionHouse(x) ::: x is a mansion house.\nSkyscraper(x) ::: x is a skyscraper.\nCreepyHauntedHouse(x) ::: x is a creepy haunted house.\nTerrifyingHalloweenScare(x) ::: x is a terrifying Halloween scare.\nPremises:\n¬MansionHouse(urbanArea) ::: There are no mansion houses in an urban area.\nSkyscraper(urbanArea) ::: All skyscrapers reside in urban areas.\nCreepyHauntedHouse(mansionHouse) ::: Every creepy haunted house is in a mansion house.\nTerrifyingHalloweenScare(creepyHauntedHouse) ::: Every terrifying Halloween scare comes from a creepy haunted house.\nConclusion:\nTerrifyingHalloweenScare(scream) ::: The Scream is a terrifying Halloween scare.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student"
    ]
  },
  {
    "id": "FOLIO_train_870",
    "context": "There are no mansion houses in an urban area. All skyscrapers reside in urban areas. Every creepy haunted house is in a mansion house. Every terrifying Halloween scare comes from a creepy haunted house. The Scream is a creepy haunted house or a terrifying Halloween scare.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Scream is either a skyscraper or a mansion house.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nUrban(x) ::: x is an urban area.\nMansionHouse(x) ::: x is a mansion house.\nSkyscraper(x) ::: x is a skyscraper.\nCreepyHauntedHouse(x) ::: x is a creepy haunted house.\nTerrifyingHalloweenScare(x) ::: x is a terrifying Halloween scare.\nScream(x) ::: x is The Scream.\nPremises:\n¬Urban(mansionHouse) ∧ Urban(skyscraper) ::: There are no mansion houses in an urban area.\nAll(urban, skyscraper) ::: All skyscrapers reside in urban areas.\nAll(mansionHouse, creepyHauntedHouse) ::: Every creepy haunted house is in a mansion house.\nAll(creepyHauntedHouse, terrifyingHalloweenScare) ::: Every terrifying Halloween scare comes from a creepy haunted house.\nScream(scream) ::: The Scream is The Scream.\nConclusion:\nUrban(scream) ∨ MansionHouse(scream) ::: The Scream is either a skyscraper or a mansion house.\n------"
    ]
  },
  {
    "id": "FOLIO_train_871",
    "context": "There are no mansion houses in an urban area. All skyscrapers reside in urban areas. Every creepy haunted house is in a mansion house. Every terrifying Halloween scare comes from a creepy haunted house. The Scream is a creepy haunted house or a terrifying Halloween scare.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Scream is either a skyscraper or an urban area.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nUrbanArea(x) ::: x is an urban area.\nMansionHouse(x) ::: x is a mansion house.\nSkyscraper(x) ::: x is a skyscraper.\nCreepyHauntedHouse(x) ::: x is a creepy haunted house.\nTerrifyingHalloweenScare(x) ::: x is a terrifying Halloween scare.\nPremises:\n¬∃x (MansionHouse(x) ∧ UrbanArea(x)) ::: There are no mansion houses in an urban area.\n∀x (Skyscraper(x) ∧ UrbanArea(x)) ::: All skyscrapers reside in urban areas.\n∀x (CreepyHauntedHouse(x) ∧ MansionHouse(x)) ::: Every creepy haunted house is in a mansion house.\n∀x (TerrifyingHalloweenScare(x) ∧ CreepyHauntedHouse(x)) ::: Every terrifying Halloween scare comes from a creepy haunted house.\nConclusion:\n(CreepyHauntedHouse(scream) ∨ TerrifyingHalloweenScare(scream)) ::: The Scream is a creepy haunted house or a terrifying Halloween scare.\n------"
    ]
  },
  {
    "id": "FOLIO_train_872",
    "context": "There are no mansion houses in an urban area. All skyscrapers reside in urban areas. Every creepy haunted house is in a mansion house. Every terrifying Halloween scare comes from a creepy haunted house. The Scream is a creepy haunted house or a terrifying Halloween scare.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Scream is either a skyscraper or a creepy haunted house.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nUrbanArea(x) ::: x is an urban area.\nMansionHouse(x) ::: x is a mansion house.\nSkyscraper(x) ::: x is a skyscraper.\nCreepyHauntedHouse(x) ::: x is a creepy haunted house.\nTerrifyingHalloweenScare(x) ::: x is a terrifying Halloween scare.\nTheScream(x) ::: x is The Scream.\nPremises:\n¬MansionHouse(x) ∧ UrbanArea(x) ::: There are no mansion houses in an urban area.\nSkyscraper(x) ∧ UrbanArea(x) ::: All skyscrapers reside in urban areas.\nCreepyHauntedHouse(x) ∧ MansionHouse(x) ::: Every creepy haunted house is in a mansion house.\nTerrifyingHalloweenScare(x) ∧ CreepyHauntedHouse(x) ::: Every terrifying Halloween scare comes from a creepy haunted house.\nTheScream(x) ∨ TerrifyingHalloweenScare(x) ::: The Scream is a creepy haunted house or a terrifying Halloween scare.\nConclusion:\nSkyscraper"
    ]
  },
  {
    "id": "FOLIO_train_873",
    "context": "There are no mansion houses in an urban area. All skyscrapers reside in urban areas. Every creepy haunted house is in a mansion house. Every terrifying Halloween scare comes from a creepy haunted house. The Scream is a creepy haunted house or a terrifying Halloween scare.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If The Scream is not a mansion in an urban area, then it is either a skyscraper or an urban area.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nUrbanArea(x) ::: x is an urban area.\nMansionHouse(x) ::: x is a mansion house.\nSkyscraper(x) ::: x is a skyscraper.\nCreepyHauntedHouse(x) ::: x is a creepy haunted house.\nTerrifyingHalloweenScare(x) ::: x is a terrifying Halloween scare.\nPremises:\n¬∃x (MansionHouse(x) ∧ UrbanArea(x)) ::: There are no mansion houses in an urban area.\n∀x (Skyscraper(x) ∧ UrbanArea(x)) ::: All skyscrapers reside in urban areas.\n∀x (CreepyHauntedHouse(x) ∧ MansionHouse(x)) ::: Every creepy haunted house is in a mansion house.\n∀x (TerrifyingHalloweenScare(x) ∧ CreepyHauntedHouse(x)) ::: Every terrifying Halloween scare comes from a creepy haunted house.\nConclusion:\n¬(MansionHouse(scream) ∧ UrbanArea(scream)) → (Skyscraper(scream) ∨ UrbanArea(scream)) ::: If The Scream is not a mansion in an urban"
    ]
  },
  {
    "id": "FOLIO_train_874",
    "context": "There are no mansion houses in an urban area. All skyscrapers reside in urban areas. Every creepy haunted house is in a mansion house. Every terrifying Halloween scare comes from a creepy haunted house. The Scream is a creepy haunted house or a terrifying Halloween scare.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If The Scream is either a skyscraper or a mansion house, then it is in an urban area.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nUrbanArea(x) ::: x is an urban area.\nMansionHouse(x) ::: x is a mansion house.\nSkyscraper(x) ::: x is a skyscraper.\nCreepyHauntedHouse(x) ::: x is a creepy haunted house.\nTerrifyingHalloweenScare(x) ::: x is a terrifying Halloween scare.\nTheScream(x) ::: x is The Scream.\nPremises:\n¬MansionHouse(x) ∧ UrbanArea(x) ::: There are no mansion houses in an urban area.\nSkyscraper(x) ∧ UrbanArea(x) ::: All skyscrapers reside in urban areas.\nCreepyHauntedHouse(x) ∧ MansionHouse(x) ::: Every creepy haunted house is in a mansion house.\nTerrifyingHalloweenScare(x) ∧ CreepyHauntedHouse(x) ::: Every terrifying Halloween scare comes from a creepy haunted house.\nTheScream(x) ∨ TerrifyingHalloweenScare(x) ::: The Scream is a creepy haunted house or a terrifying Halloween scare.\nConclusion:\nUrbanArea"
    ]
  },
  {
    "id": "FOLIO_train_875",
    "context": "There are no mansion houses in an urban area. All skyscrapers reside in urban areas. Every creepy haunted house is in a mansion house. Every terrifying Halloween scare comes from a creepy haunted house. The Scream is a creepy haunted house or a terrifying Halloween scare.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If The Scream is either a skyscraper or a mansion house, then it is neither a creepy haunted house nor a terrifying Halloween scare.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nUrbanArea(x) ::: x is an urban area.\nMansionHouse(x) ::: x is a mansion house.\nSkyscraper(x) ::: x is a skyscraper.\nCreepyHauntedHouse(x) ::: x is a creepy haunted house.\nTerrifyingHalloweenScare(x) ::: x is a terrifying Halloween scare.\nTheScream(x) ::: x is The Scream.\nPremises:\n¬MansionHouse(urbanArea) ::: There are no mansion houses in an urban area.\nSkyscraper(urbanArea) ::: All skyscrapers reside in urban areas.\nCreepyHauntedHouse(mansionHouse) ::: Every creepy haunted house is in a mansion house.\nTerrifyingHalloweenScare(creepyHauntedHouse) ::: Every terrifying Halloween scare comes from a creepy haunted house.\nTheScream(creepyHauntedHouse) ∨ TheScream(terrifyingHalloweenScare) ::: The Scream is a creepy haunted house or a terrifying Halloween scare.\nConclusion:\n¬(TheScream(skyscraper) ∨ TheScream("
    ]
  },
  {
    "id": "FOLIO_train_876",
    "context": "There are no mansion houses in an urban area. All skyscrapers reside in urban areas. Every creepy haunted house is in a mansion house. Every terrifying Halloween scare comes from a creepy haunted house. The Scream is a creepy haunted house or a terrifying Halloween scare.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If The Scream is either a skyscraper or a creepy haunted house, then it is not a mansion house.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nUrbanArea(x) ::: x is an urban area.\nMansionHouse(x) ::: x is a mansion house.\nSkyscraper(x) ::: x is a skyscraper.\nCreepyHauntedHouse(x) ::: x is a creepy haunted house.\nTerrifyingHalloweenScare(x) ::: x is a terrifying Halloween scare.\nTheScream(x) ::: x is The Scream.\nPremises:\n¬MansionHouse(x) ∧ UrbanArea(x) ::: There are no mansion houses in an urban area.\nSkyscraper(x) ∧ UrbanArea(x) ::: All skyscrapers reside in urban areas.\nCreepyHauntedHouse(x) ∧ MansionHouse(x) ::: Every creepy haunted house is in a mansion house.\nTerrifyingHalloweenScare(x) ∧ CreepyHauntedHouse(x) ::: Every terrifying Halloween scare comes from a creepy haunted house.\nTheScream(x) ∨ TerrifyingHalloweenScare(x) ::: The Scream is a creepy haunted house or a terrifying Halloween scare.\nConclusion:\n¬(Skys"
    ]
  },
  {
    "id": "FOLIO_train_877",
    "context": "Phuoc Binh national park is a national park in Vietnam. Any national park in Vietnam is classified as a nature reserve. There is a national park in Vietnam classified as a UNESCO World Heritage Site. All national parks in Vietnam are either managed by the Ministry of Agriculture or by the People's Committee. Phuoc Binh is not managed by the Ministry of Agriculture.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There is a nature reserve in Vietnam.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nPhuocBinhNationalPark(x) ::: x is Phuoc Binh national park.\nVietnam(x) ::: x is in Vietnam.\nNationalPark(x) ::: x is a national park.\nNatureReserve(x) ::: x is a nature reserve.\nUNESCOWorldHeritageSite(x) ::: x is a UNESCO World Heritage Site.\nManage(x, y) ::: x is managed by y.\nPremises:\nPhuocBinhNationalPark(phuocBinh) ∧ Vietnam(phuocBinh) ::: Phuoc Binh national park is a national park in Vietnam.\n∀x (NationalPark(x) → NatureReserve(x)) ::: Any national park in Vietnam is classified as a nature reserve.\n∃x (NationalPark(x) ∧ UNESCOWorldHeritageSite(x)) ::: There is a national park in Vietnam classified as a UNESCO World Heritage Site.\n¬Manage(phuocBinh, ministryOfAgriculture) ::: Phuoc Binh is not managed by the Ministry of Agriculture.\nConclusion:\nNatureReserve(phuocBinh) ::: There is a nature reserve in Vietnam.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either"
    ]
  },
  {
    "id": "FOLIO_train_878",
    "context": "Phuoc Binh national park is a national park in Vietnam. Any national park in Vietnam is classified as a nature reserve. There is a national park in Vietnam classified as a UNESCO World Heritage Site. All national parks in Vietnam are either managed by the Ministry of Agriculture or by the People's Committee. Phuoc Binh is not managed by the Ministry of Agriculture.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Phuoc Binh is a UNESCO Heritage Site.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nPhuocBinh(x) ::: x is Phuoc Binh national park.\nVietnam(x) ::: x is in Vietnam.\nNationalPark(x) ::: x is a national park.\nNatureReserve(x) ::: x is a nature reserve.\nUNESCO(x) ::: x is a UNESCO World Heritage Site.\nMinistryOfAgriculture(x) ::: x is the Ministry of Agriculture.\nPeople'sCommittee(x) ::: x is the People's Committee.\nManage(x, y) ::: x manages y.\nPremises:\nPhuocBinh(x) ∧ Vietnam(x) ∧ NationalPark(x) ::: Phuoc Binh national park is a national park in Vietnam.\n∃x (NationalPark(x) ∧ NatureReserve(x)) ::: There is a national park in Vietnam classified as a nature reserve.\n∀x (NationalPark(x) → (MinistryOfAgriculture(x) ∨ People'sCommittee(x))) ::: All national parks in Vietnam are either managed by the Ministry of Agriculture or by the People's Committee.\n¬Manage(PhuocBinh, MinistryOfAgriculture) ::: Phuoc Binh is not managed by the Ministry of Agriculture."
    ]
  },
  {
    "id": "FOLIO_train_879",
    "context": "Phuoc Binh national park is a national park in Vietnam. Any national park in Vietnam is classified as a nature reserve. There is a national park in Vietnam classified as a UNESCO World Heritage Site. All national parks in Vietnam are either managed by the Ministry of Agriculture or by the People's Committee. Phuoc Binh is not managed by the Ministry of Agriculture.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Phuoc Binh is managed by the People's Committee.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nPhuocBinh(x) ::: x is Phuoc Binh national park.\nVietnam(x) ::: x is in Vietnam.\nNationalPark(x) ::: x is a national park.\nNatureReserve(x) ::: x is classified as a nature reserve.\nUNESCOWorldHeritageSite(x) ::: x is classified as a UNESCO World Heritage Site.\nManage(x, y) ::: x manages y.\nPremises:\nPhuocBinh(x) ∧ Vietnam(x) ∧ NationalPark(x) ::: Phuoc Binh national park is a national park in Vietnam.\n∃x (NationalPark(x) ∧ NatureReserve(x)) ::: There is a national park in Vietnam classified as a nature reserve.\n∀x (NationalPark(x) → (Manage(x, MinistryOfAgriculture) ∨ Manage(x, People'sCommittee))) ::: All national parks in Vietnam are either managed by the Ministry of Agriculture or by the People's Committee.\n¬Manage(PhuocBinh, MinistryOfAgriculture) ::: Phuoc Binh is not managed by the Ministry of Agriculture.\nConclusion:\nManage(PhuocBinh, People'sCommittee) ::: Phuoc Bin"
    ]
  },
  {
    "id": "FOLIO_train_880",
    "context": "Greyhound racing is a competitive sport where spectators bet on greyhounds. Coursing is a part of Greyhound racing. Some competitive sports where spectators bet on things are banned. Coursing involves spectators betting on a hare being pursued by greyhounds. Hares are small game. If a competitive sport involves spectators betting on small game, then it is banned.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? No coursing is banned.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nGreyhoundRacing(x) ::: x is a greyhound racing.\nCoursing(x) ::: x is a coursing.\nCompetitiveSport(x) ::: x is a competitive sport.\nBet(x, y) ::: x bets on y.\nSpectator(x, y) ::: x is a spectator of y.\nBanned(x) ::: x is banned.\nPremises:\nGreyhoundRacing(greyhoundRacing) ∧ Coursing(coursing) ::: Greyhound racing is a competitive sport where spectators bet on greyhounds.\nCoursing(coursing) ∧ Spectator(spectator, coursing) ∧ Bet(spectator, hare) ::: Coursing involves spectators betting on a hare being pursued by greyhounds.\nHare(hare) ::: hare is a hare.\nSmallGame(hare) ::: hare is a small game.\nBanned(competitiveSport) ∧ Bet(spectator, smallGame) ::: If a competitive sport involves spectators betting on small game, then it is banned.\nConclusion:\nBanned(coursing) ::: No coursing is banned.\n------"
    ]
  },
  {
    "id": "FOLIO_train_881",
    "context": "Greyhound racing is a competitive sport where spectators bet on greyhounds. Coursing is a part of Greyhound racing. Some competitive sports where spectators bet on things are banned. Coursing involves spectators betting on a hare being pursued by greyhounds. Hares are small game. If a competitive sport involves spectators betting on small game, then it is banned.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Greyhound racing is a competitive sport.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreyhoundRacing(x) ::: x is a greyhound racing.\nCoursing(x) ::: x is a coursing.\nCompetitiveSport(x) ::: x is a competitive sport.\nBet(x, y) ::: x bets on y.\nSpectator(x, y) ::: x is a spectator of y.\nBanned(x) ::: x is banned.\nSmallGame(x) ::: x is a small game.\nPremises:\nGreyhoundRacing(greyhoundRacing) ∧ Coursing(coursing) ::: Greyhound racing is a competitive sport where spectators bet on greyhounds.\nCoursing(coursing) ∧ Spectator(spectator, coursing) ∧ Bet(spectator, hare) ::: Coursing involves spectators betting on a hare being pursued by greyhounds.\nHare(hare) ∧ SmallGame(hare) ::: Hare is a small game.\n∃x (CompetitiveSport(x) ∧ Bet(x, y) ∧ Spectator(x, y) ∧ SmallGame(y)) ::: Some competitive sports where spectators bet on things are banned.\nConclusion:\nCompetitive"
    ]
  },
  {
    "id": "FOLIO_train_882",
    "context": "If a soccer player receives two yellow cards in one game, this player will be ejected from the rest of the game. If a soccer player receives one red card in one game, this player will be ejected from the rest of the game. Henry is a soccer player. In one game, Henry first receives one yellow card, then he receives one red card.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Henry will be ejected from the rest of the game.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nSoccerPlayer(x) ::: x is a soccer player.\nYellowCard(x) ::: x receives a yellow card.\nRedCard(x) ::: x receives a red card.\nEject(x) ::: x is ejected from the rest of the game.\nPremises:\nSoccerPlayer(henry) ::: Henry is a soccer player.\nYellowCard(henry) ∧ RedCard(henry) ::: In one game, Henry first receives one yellow card, then he receives one red card.\nConclusion:\nEject(henry) ::: Henry will be ejected from the rest of the game.\n------\nProblem:\nA person is a member of a group if and only if the person is a member of the group. A person is a member of a group if and only if the person is a member of the group. A person is a member of a group if and only if the person is a member of the group. A person is a member of a group if and only if the person is a member of the group. A person is a member of a group if and only if the person is a member of the group. A person is a member of a group if and only if the person is a member of the group. A person is a member of a group if and only if the person is a member of the group"
    ]
  },
  {
    "id": "FOLIO_train_883",
    "context": "If a soccer player receives two yellow cards in one game, this player will be ejected from the rest of the game. If a soccer player receives one red card in one game, this player will be ejected from the rest of the game. Henry is a soccer player. In one game, Henry first receives one yellow card, then he receives one red card.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Henry will not be ejected from the rest of the game.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nSoccerPlayer(x) ::: x is a soccer player.\nYellowCard(x) ::: x receives a yellow card.\nRedCard(x) ::: x receives a red card.\nEject(x) ::: x is ejected from the rest of the game.\nPremises:\nSoccerPlayer(henry) ::: Henry is a soccer player.\nYellowCard(henry) ∧ RedCard(henry) ::: In one game, Henry first receives one yellow card, then he receives one red card.\n∀x (YellowCard(x) → Eject(x)) ::: If a soccer player receives two yellow cards in one game, this player will be ejected from the rest of the game.\n∀x (RedCard(x) → Eject(x)) ::: If a soccer player receives one red card in one game, this player will be ejected from the rest of the game.\nConclusion:\n¬Eject(henry) ::: Henry will not be ejected from the rest of the game.\n------\nProblem:\nA person is a member of a group if and only if the person is a member of the group. A person is a member of a group if and only if the person is a member of the group. A person is a member of a group if and only if the"
    ]
  },
  {
    "id": "FOLIO_train_884",
    "context": "All trees are plants. Some living things are trees.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Some living things are plants.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nTree(x) ::: x is a tree.\nPlant(x) ::: x is a plant.\nLivingThing(x) ::: x is a living thing.\nPremises:\n∀x (Tree(x) → Plant(x)) ::: All trees are plants.\n∃x (LivingThing(x) ∧ Tree(x)) ::: Some living things are trees.\nConclusion:\nLivingThing(x) → Plant(x) ::: Some living things are plants.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffe"
    ]
  },
  {
    "id": "FOLIO_train_885",
    "context": "Dagfinn is a given name. Notable people with the given name include Dagfinn Aarskog, Dagfinn Bakke and Dagfinn Dahl. Dagfinn Aarskog is a Norwegian physician. Dagfinn Dahl is a Norwegian barrister.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Dagfinn Aarskog is a notable person.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nGivenName(x) ::: x is a given name.\nNotable(x) ::: x is a notable person.\nPhysician(x) ::: x is a physician.\nBarrister(x) ::: x is a barrister.\nPremises:\nGivenName(dagfinn) ::: Dagfinn is a given name.\nNotable(dagfinnAarskog) ::: Dagfinn Aarskog is a notable person.\nNotable(dagfinnBakke) ::: Dagfinn Bakke is a notable person.\nNotable(dagfinnDahl) ::: Dagfinn Dahl is a notable person.\nPhysician(dagfinnAarskog) ::: Dagfinn Aarskog is a physician.\nBarrister(dagfinnDahl) ::: Dagfinn Dahl is a barrister.\nConclusion:\nNotable(dagfinnAarskog) ::: Dagfinn Aarskog is a notable person.\n------\nProblem:\nThe 2016 Summer Olympics, officially known as the Games of the XXXI Olympiad, and commonly known as Rio 2016, was a major international multi-sport event celebrated in the tradition of the Olympic Games, as governed by the International Olympic Committee ("
    ]
  },
  {
    "id": "FOLIO_train_886",
    "context": "Dagfinn is a given name. Notable people with the given name include Dagfinn Aarskog, Dagfinn Bakke and Dagfinn Dahl. Dagfinn Aarskog is a Norwegian physician. Dagfinn Dahl is a Norwegian barrister.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Dagfinn is Dagfinn Aarskog's given name.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nGivenName(x) ::: x is a given name.\nNotable(x) ::: x is notable.\nNotablePerson(x, y) ::: x is a notable person with the given name y.\nPhysician(x) ::: x is a physician.\nBarrister(x) ::: x is a barrister.\nPremises:\nGivenName(dagfinn) ∧ NotablePerson(dagfinn, dagfinnAarskog) ∧ Physician(dagfinnAarskog) ::: Dagfinn is a given name. Notable people with the given name include Dagfinn Aarskog, Dagfinn Bakke and Dagfinn Dahl. Dagfinn Aarskog is a Norwegian physician.\nGivenName(dagfinn) ∧ NotablePerson(dagfinn, dagfinnDahl) ∧ Barrister(dagfinnDahl) ::: Dagfinn is a given name. Notable people with the given name include Dagfinn Aarskog, Dagfinn Bakke and Dagfinn Dahl. Dagfinn Dahl is a Norwegian barrister.\nConclusion:\nGivenName(dagfinnAarskog) ::: Dagfinn is Dagfinn Aarskog's given name.\n------"
    ]
  },
  {
    "id": "FOLIO_train_887",
    "context": "Dagfinn is a given name. Notable people with the given name include Dagfinn Aarskog, Dagfinn Bakke and Dagfinn Dahl. Dagfinn Aarskog is a Norwegian physician. Dagfinn Dahl is a Norwegian barrister.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Dagfinn Dahl is a Norwegian physician.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nGivenName(x) ::: x is a given name.\nNotable(x) ::: x is notable.\nPhysician(x) ::: x is a physician.\nBarrister(x) ::: x is a barrister.\nPremises:\nGivenName(dagfinn) ∧ Notable(dagfinn) ::: Dagfinn is a given name. Notable people with the given name include Dagfinn Aarskog, Dagfinn Bakke and Dagfinn Dahl.\nGivenName(dagfinnAarskog) ∧ Physician(dagfinnAarskog) ::: Dagfinn Aarskog is a Norwegian physician.\nGivenName(dagfinnDahl) ∧ Barrister(dagfinnDahl) ::: Dagfinn Dahl is a Norwegian barrister.\nConclusion:\nPhysician(dagfinnDahl) ::: Dagfinn Dahl is a Norwegian physician.\n------\nProblem:\nThe 2010 FIFA World Cup was the 19th FIFA World Cup, the world championship for men's national association football teams. It took place in South Africa from 11 June to 11 July 2010. The tournament was won by Spain, who defeated the Netherlands 1–0 in the final"
    ]
  },
  {
    "id": "FOLIO_train_888",
    "context": "If entertainment is interesting, it will be popular. All popular things are well-known.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If entertainment is interesting, it will be well-known.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nEntertainment(x) ::: x is entertainment.\nInteresting(x) ::: x is interesting.\nPopular(x) ::: x is popular.\nWellKnown(x) ::: x is well-known.\nPremises:\n∀x (Entertainment(x) → Interesting(x)) ::: If entertainment is interesting, it will be popular.\n∀x (Popular(x) → WellKnown(x)) ::: All popular things are well-known.\nConclusion:\nWellKnown(x) ::: If entertainment is interesting, it will be well-known.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement"
    ]
  },
  {
    "id": "FOLIO_train_889",
    "context": "It is not true that some giant language models do not have good performance. All language models with good performance are used by some researchers. If a language model is used by some researchers, it is popular. If BERT is a giant language model, then GPT-3 is also a giant language model. BERT is a giant language model.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? GPT-3 is popular.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nGiant(x) ::: x is a giant language model.\nGoodPerformance(x) ::: x has good performance.\nUsedBy(x, y) ::: x is used by y.\nPopular(x) ::: x is popular.\nPremises:\n¬∃x (Giant(x) ∧ GoodPerformance(x)) ::: It is not true that some giant language models do not have good performance.\n∀x (UsedBy(x, y) → Popular(x)) ::: All language models with good performance are used by some researchers.\nUsedBy(bert, researchers) ::: BERT is used by some researchers.\nUsedBy(gpt3, researchers) ::: GPT-3 is used by some researchers.\nGiant(bert) ::: BERT is a giant language model.\nConclusion:\nPopular(gpt3) ::: GPT-3 is popular.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor una"
    ]
  },
  {
    "id": "FOLIO_train_890",
    "context": "St Johnstone is a Scottish team. St Johnstone is part of the Scottish Premiership. If a team is part of the league, it has joined the league. St Johnstone and Minsk are different teams. For two different teams, either one team wins or the other team wins. Minsk won against St Johnstone.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? At least one Scottish team has joined the Scottish Premiership.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nScottish(x) ::: x is a Scottish team.\nPremiership(x) ::: x is part of the Scottish Premiership.\nLeague(x) ::: x is a league.\nJoin(x, y) ::: x has joined y.\nDifferent(x, y) ::: x and y are different teams.\nWin(x, y) ::: x wins against y.\nPremises:\nScottish(stJohnstone) ∧ Premiership(stJohnstone) ::: St Johnstone is a Scottish team. St Johnstone is part of the Scottish Premiership.\n¬Different(stJohnstone, minsk) ::: St Johnstone and Minsk are different teams.\nWin(minsk, stJohnstone) ::: Minsk won against St Johnstone.\nConclusion:\nJoin(stJohnstone, Premiership) ::: At least one Scottish team has joined the Scottish Premiership.\n------"
    ]
  },
  {
    "id": "FOLIO_train_891",
    "context": "St Johnstone is a Scottish team. St Johnstone is part of the Scottish Premiership. If a team is part of the league, it has joined the league. St Johnstone and Minsk are different teams. For two different teams, either one team wins or the other team wins. Minsk won against St Johnstone.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? St Johnstone won against Minsk.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nScottish(x) ::: x is a Scottish team.\nPremiership(x) ::: x is part of the Scottish Premiership.\nLeague(x) ::: x is a league.\nJoin(x, y) ::: x has joined y.\nDifferent(x, y) ::: x and y are different teams.\nWin(x, y) ::: x wins against y.\nPremises:\nScottish(stJohnstone) ∧ Premiership(stJohnstone) ::: St Johnstone is a Scottish team. St Johnstone is part of the Scottish Premiership.\n∀x (League(x) → Join(x, x)) ::: If a team is part of the league, it has joined the league.\n¬Different(stJohnstone, minsk) ::: St Johnstone and Minsk are different teams.\nWin(minsk, stJohnstone) ::: Minsk won against St John"
    ]
  },
  {
    "id": "FOLIO_train_892",
    "context": "St Johnstone is a Scottish team. St Johnstone is part of the Scottish Premiership. If a team is part of the league, it has joined the league. St Johnstone and Minsk are different teams. For two different teams, either one team wins or the other team wins. Minsk won against St Johnstone.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Minsk joined the Scottish Premiership.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nScottish(x) ::: x is a Scottish team.\nPremiership(x) ::: x is part of the Scottish Premiership.\nLeague(x) ::: x is a league.\nJoin(x, y) ::: x has joined y.\nDifferent(x, y) ::: x and y are different teams.\nWin(x, y) ::: x wins against y.\nPremises:\nScottish(stJohnstone) ∧ Premiership(stJohnstone) ::: St Johnstone is a Scottish team. St Johnstone is part of the Scottish Premiership.\n∀x (League(x) → Join(x, x)) ::: If a team is part of the league, it has joined the league.\n¬Different(stJohnstone, minsk) ::: St Johnstone and Minsk are different teams.\nWin(minsk, stJohnstone) ::: Minsk won against St John"
    ]
  },
  {
    "id": "FOLIO_train_893",
    "context": "No Boeing-737 plane is equipped with more than 300 seats. All planes in Delta are of type Boeing-737. Planes are either equipped with more than 300 seats or have a capacity of 100 passengers. All planes with a capacity of 100 passengers are scheduled for a short-distance flight. All planes with a capacity of 100 passengers are produced before 2010. Jake32 is either a Boeing-737 plane or a plane in Delta. T10 is either a Boeing-737 plane and in Delta, or neither a Boeing-737 plane nor in Delta.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jake32 was produced before 2010 and is scheduled for a short-distance flight.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nBoeing737(x) ::: x is a Boeing-737 plane.\nDelta(x) ::: x is a plane in Delta.\nMoreThan300Seats(x) ::: x is equipped with more than 300 seats.\nCapacity100Passengers(x) ::: x has a capacity of 100 passengers.\nShortDistanceFlight(x) ::: x is scheduled for a short-distance flight.\nProducedBefore2010(x) ::: x was produced before 2010.\nPremises:\n∀x (Boeing737(x) → MoreThan300Seats(x)) ::: No Boeing-737 plane is equipped with more than 300 seats.\n∀x (Delta(x) → Boeing737(x)) ::: All planes in Delta are of type Boeing-"
    ]
  },
  {
    "id": "FOLIO_train_894",
    "context": "No Boeing-737 plane is equipped with more than 300 seats. All planes in Delta are of type Boeing-737. Planes are either equipped with more than 300 seats or have a capacity of 100 passengers. All planes with a capacity of 100 passengers are scheduled for a short-distance flight. All planes with a capacity of 100 passengers are produced before 2010. Jake32 is either a Boeing-737 plane or a plane in Delta. T10 is either a Boeing-737 plane and in Delta, or neither a Boeing-737 plane nor in Delta.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jake32 is not produced before 2010 and is not scheduled for a short-distance flight.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBoeing737(x) ::: x is a Boeing-737 plane.\nDelta(x) ::: x is a plane in Delta.\nMoreThan300Seats(x) ::: x is equipped with more than 300 seats.\nCapacity100Passengers(x) ::: x has a capacity of 100 passengers.\nShortDistanceFlight(x) ::: x is scheduled for a short-distance flight.\nProducedBefore2010(x) ::: x is produced before 2010.\nPremises:\n∀x (Boeing737(x) → MoreThan300Seats(x)) ::: No Boeing-737 plane is equipped with more than 300 seats.\n∀x (Delta(x) → Boeing737(x)) ::: All planes in Delta are of type Boeing-7"
    ]
  },
  {
    "id": "FOLIO_train_895",
    "context": "No Boeing-737 plane is equipped with more than 300 seats. All planes in Delta are of type Boeing-737. Planes are either equipped with more than 300 seats or have a capacity of 100 passengers. All planes with a capacity of 100 passengers are scheduled for a short-distance flight. All planes with a capacity of 100 passengers are produced before 2010. Jake32 is either a Boeing-737 plane or a plane in Delta. T10 is either a Boeing-737 plane and in Delta, or neither a Boeing-737 plane nor in Delta.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jake32 is produced before 2010 or scheduled for a short-distance flight.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nBoeing737(x) ::: x is a Boeing-737 plane.\nDelta(x) ::: x is a plane in Delta.\nMoreThan300Seats(x) ::: x is equipped with more than 300 seats.\nCapacity100Passengers(x) ::: x has a capacity of 100 passengers.\nShortDistanceFlight(x) ::: x is scheduled for a short-distance flight.\nProducedBefore2010(x) ::: x is produced before 2010.\nPremises:\n∀x (Boeing737(x) → MoreThan300Seats(x)) ::: No Boeing-737 plane is equipped with more than 300 seats.\n∀x (Delta(x) → Boeing737(x)) ::: All planes in Delta are of type Boeing-"
    ]
  },
  {
    "id": "FOLIO_train_896",
    "context": "No Boeing-737 plane is equipped with more than 300 seats. All planes in Delta are of type Boeing-737. Planes are either equipped with more than 300 seats or have a capacity of 100 passengers. All planes with a capacity of 100 passengers are scheduled for a short-distance flight. All planes with a capacity of 100 passengers are produced before 2010. Jake32 is either a Boeing-737 plane or a plane in Delta. T10 is either a Boeing-737 plane and in Delta, or neither a Boeing-737 plane nor in Delta.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jake32 is neither produced before 2010 nor scheduled for a short-distance flight.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nBoeing737(x) ::: x is a Boeing-737 plane.\nDelta(x) ::: x is a plane in Delta.\nMoreThan300Seats(x) ::: x is equipped with more than 300 seats.\nCapacity100Passengers(x) ::: x has a capacity of 100 passengers.\nShortDistanceFlight(x) ::: x is scheduled for a short-distance flight.\nProducedBefore2010(x) ::: x is produced before 2010.\nPremises:\n∀x (Boeing737(x) → MoreThan300Seats(x)) ::: No Boeing-737 plane is equipped with more than 300 seats.\n∀x (Delta(x) → Boeing737(x)) ::: All planes in Delta are of type Boeing-"
    ]
  },
  {
    "id": "FOLIO_train_897",
    "context": "The SAT test is wholly owned and developed by the College Board. The SAT test is intended to assess student's readiness for college. The SAT was originally designed not to be aligned with high school curricula. Several adjustments were made for the version of the SAT introduced in 2016 to reflect more closely on what students learn in high school.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Since 2016 the SAT has been better aligned with high school curricula.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nOwn(x, y) ::: x owns y.\nDevelop(x, y) ::: x develops y.\nIntend(x, y) ::: x intends y.\nAssess(x, y) ::: x assesses y.\nAlign(x, y) ::: x is aligned with y.\nReadiness(x, y) ::: x is ready for y.\nCurricula(x, y) ::: x is a curricula of y.\nPremises:\nOwn(collegeBoard, sat) ∧ Develop(collegeBoard, sat) ::: The SAT test is wholly owned and developed by the College Board.\nIntend(sat, assessStudent) ∧ Assess(sat, readinessForCollege) ::: The SAT test is intended to assess student's readiness for college.\n¬Align(sat, highSchoolCurricula) ::: The"
    ]
  },
  {
    "id": "FOLIO_train_898",
    "context": "The SAT test is wholly owned and developed by the College Board. The SAT test is intended to assess student's readiness for college. The SAT was originally designed not to be aligned with high school curricula. Several adjustments were made for the version of the SAT introduced in 2016 to reflect more closely on what students learn in high school.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The SAT test is owned by the College Board and multiple other third parties.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Owned(x, y) ::: x owns y.\nDevelop(x, y) ::: x develops y.\nWholly(x, y) ::: x is wholly y.\nIntended(x, y) ::: x is intended for y.\nAssess(x, y) ::: x assesses y.\nReadiness(x, y) ::: x is ready for y.\nCollege(x) ::: x is a college.\nBoard(x) ::: x is a board.\nPremises:\nOwned(sat, collegeBoard) ∧ Develop(sat, sat) ∧ Wholly(sat, sat) ∧ Intended(sat, readinessForCollege) ∧ Assess(sat, readinessForCollege) ::: The SAT test is wholly owned and developed by the College Board. The SAT test is intended to assess student's readiness for college.\n¬Intended(sat"
    ]
  },
  {
    "id": "FOLIO_train_899",
    "context": "The SAT test is wholly owned and developed by the College Board. The SAT test is intended to assess student's readiness for college. The SAT was originally designed not to be aligned with high school curricula. Several adjustments were made for the version of the SAT introduced in 2016 to reflect more closely on what students learn in high school.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The SAT test assesses student's math skills.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nOwn(x, y) ::: x owns y.\nDevelop(x, y) ::: x develops y.\nIntend(x, y) ::: x intends y.\nAssess(x, y) ::: x assesses y.\nReadiness(x, y) ::: x is ready for y.\nAligned(x, y) ::: x is aligned with y.\nAdjust(x, y) ::: x adjusts y.\nReflect(x, y) ::: x reflects y.\nPremises:\nOwn(collegeBoard, sat) ∧ Develop(collegeBoard, sat) ::: The SAT test is wholly owned and developed by the College Board.\nIntend(sat, college) ∧ Assess(sat, student) ::: The SAT test is intended to assess student's readiness for college.\n¬Aligned(sat, highSchoolCurricula"
    ]
  },
  {
    "id": "FOLIO_train_900",
    "context": "Rafa Nadal was born in Mallorca. Rafa Nadal is a professional tennis player. Nadal's win ratio is higher than 80%. All players in the Big 3 are professionals who have a high win ratio.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Nadal was not born in Mallorca.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nBorn(x, y) ::: x was born in year y.\nProfessional(x) ::: x is a professional.\nWinRatio(x) ::: x has a win ratio of x.\nBig3(x) ::: x is a player in the Big 3.\nPremises:\nBorn(rafa, year1986) ∧ Professional(rafa) ∧ WinRatio(rafa, 0.8) ::: Rafa Nadal was born in Mallorca. Rafa Nadal is a professional tennis player. Nadal's win ratio is higher than 80%.\n∀x (Professional(x) ∧ WinRatio(x, 0.8)) ⇒ Big3(x) ::: All players in the Big 3 are professionals who have a high win ratio.\nConclusion:\n¬Born(rafa, year1986) ::: Nadal was not born in Mallorca.\n------"
    ]
  },
  {
    "id": "FOLIO_train_901",
    "context": "Rafa Nadal was born in Mallorca. Rafa Nadal is a professional tennis player. Nadal's win ratio is higher than 80%. All players in the Big 3 are professionals who have a high win ratio.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Nadal is in the Big 3.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nBorn(x, y) ::: x was born in year y.\nProfessional(x) ::: x is a professional.\nWinRatio(x) ::: x has a win ratio of x.\nBig3(x) ::: x is in the Big 3.\nPremises:\nBorn(rafa, year1986) ∧ Professional(rafa) ∧ WinRatio(rafa, 0.8) ::: Rafa Nadal was born in Mallorca. Rafa Nadal is a professional tennis player. Nadal's win ratio is higher than 80%.\n∀x (Professional(x) ∧ WinRatio(x, 0.8) → Big3(x)) ::: All players in the Big 3 are professionals who have a high win ratio.\nConclusion:\nBig3(rafa) ::: Nadal is in the Big 3.\n------\nProblem:\nAll people who regularly drink coffee are"
    ]
  },
  {
    "id": "FOLIO_train_902",
    "context": "Rafa Nadal was born in Mallorca. Rafa Nadal is a professional tennis player. Nadal's win ratio is higher than 80%. All players in the Big 3 are professionals who have a high win ratio.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Nadal is the greatest player of all time.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nBorn(x, y) ::: x was born in year y.\nProfessional(x) ::: x is a professional.\nPlayer(x) ::: x is a player.\nWinRatio(x) ::: x has a win ratio of y.\nBig3(x) ::: x is a player in the Big 3.\nGreatest(x) ::: x is the greatest player of all time.\nPremises:\nBorn(rafa, year1986) ∧ Player(rafa) ∧ WinRatio(rafa, 0.8) ::: Rafa Nadal was born in Mallorca. Rafa Nadal is a professional tennis player. Nadal's win ratio is higher than 80%.\n∀x (Professional(x) ∧ WinRatio(x, 0.8)) ⇒ Greatest(x) ::: All players in the Big 3 are professionals who have a high win ratio.\nCon"
    ]
  },
  {
    "id": "FOLIO_train_903",
    "context": "No cookie is healthy. All oreos are cookies.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? All cookies are delicious.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Oreos are cookies.\n###\nPredicates:\nCookie(x) ::: x is a cookie.\nHealthy(x) ::: x is healthy.\nDelicious(x) ::: x is delicious.\nPremises:\n∀x (Cookie(x) → ¬Healthy(x)) ::: No cookie is healthy.\n∀x (Cookie(x) → Oreo(x)) ::: All oreos are cookies.\nConclusion:\nDelicious(x) ⊕ ¬(Cookie(x) ∧ Delicious(x)) ::: All cookies are delicious.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor una"
    ]
  },
  {
    "id": "FOLIO_train_904",
    "context": "No animals are plants. All humans are animals. All pupils are human. All flowers are plants. If Jack is a human or a flower, then Jack is a human and a flower.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jack is a pupil.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nAnimal(x) ::: x is an animal.\nPlant(x) ::: x is a plant.\nHuman(x) ::: x is a human.\nPupil(x) ::: x is a pupil.\nFlower(x) ::: x is a flower.\nPremises:\n∀x (Animal(x) → ¬Plant(x)) ::: No animals are plants.\n∀x (Human(x) → Animal(x)) ::: All humans are animals.\n∀x (Pupil(x) → Human(x)) ::: All pupils are human.\n∀x (Plant(x) → ¬Animal(x)) ::: All flowers are plants.\n(Jack ∨ Flower(jack)) → (Jack ∧ Flower(jack)) ::: If Jack is a human or a flower, then Jack is a human and a flower.\nConclusion:\nPupil(jack) ::: Jack is a pupil"
    ]
  },
  {
    "id": "FOLIO_train_905",
    "context": "No animals are plants. All humans are animals. All pupils are human. All flowers are plants. If Jack is a human or a flower, then Jack is a human and a flower.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jack is not a pupil.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nAnimal(x) ::: x is an animal.\nPlant(x) ::: x is a plant.\nHuman(x) ::: x is a human.\nPupil(x) ::: x is a pupil.\nFlower(x) ::: x is a flower.\nPremises:\n∀x (Animal(x) → ¬Plant(x)) ::: No animals are plants.\n∀x (Human(x) → Animal(x)) ::: All humans are animals.\n∀x (Pupil(x) → Human(x)) ::: All pupils are human.\n∀x (Flower(x) → Plant(x)) ::: All flowers are plants.\n(Human(jack) ∨ Flower(jack)) → (Human(jack) ∧ Flower(jack)) ::: If Jack is a human or a flower, then Jack is a human and a flower.\nConclusion:\n¬Pupil(jack) :"
    ]
  },
  {
    "id": "FOLIO_train_906",
    "context": "No animals are plants. All humans are animals. All pupils are human. All flowers are plants. If Jack is a human or a flower, then Jack is a human and a flower.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jack is a plant.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nAnimal(x) ::: x is an animal.\nPlant(x) ::: x is a plant.\nHuman(x) ::: x is a human.\nPupil(x) ::: x is a pupil.\nFlower(x) ::: x is a flower.\nPremises:\n∀x (Animal(x) → ¬Plant(x)) ::: No animals are plants.\n∀x (Human(x) → Animal(x)) ::: All humans are animals.\n∀x (Pupil(x) → Human(x)) ::: All pupils are human.\n∀x (Flower(x) → Plant(x)) ::: All flowers are plants.\n(Jack ∨ Flower(jack)) → (Jack ∧ Flower(jack)) ::: If Jack is a human or a flower, then Jack is a human and a flower.\nConclusion:\nPlant(jack) ::: Jack is a plant.\n------\nProblem"
    ]
  },
  {
    "id": "FOLIO_train_907",
    "context": "No animals are plants. All humans are animals. All pupils are human. All flowers are plants. If Jack is a human or a flower, then Jack is a human and a flower.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Jack is a human, then Jack is not a pupil.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nAnimal(x) ::: x is an animal.\nPlant(x) ::: x is a plant.\nHuman(x) ::: x is a human.\nPupil(x) ::: x is a pupil.\nFlower(x) ::: x is a flower.\nPremises:\n∀x (Animal(x) → ¬Plant(x)) ::: No animals are plants.\n∀x (Human(x) → Animal(x)) ::: All humans are animals.\n∀x (Pupil(x) → Human(x)) ::: All pupils are human.\n∀x (Plant(x) → ¬Animal(x)) ::: All flowers are plants.\n(Human(jack) ∨ Flower(jack)) → (Human(jack) ∧ Flower(jack)) ::: If Jack is a human or a flower, then Jack is a human and a flower.\nConclusion:\n¬Pupil("
    ]
  },
  {
    "id": "FOLIO_train_908",
    "context": "No shoes are food. All slippers are shoes. A thing is either food or clothes. No wearable things are airtight. All clothes are wearable. If a watch is not airtight and clothes, then a watch is either both airtight and clothes, or neither airtight nor clothes.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Watch is a wearable.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nShoes(x) ::: x is a shoe.\nSlippers(x) ::: x is a slipper.\nFood(x) ::: x is food.\nClothes(x) ::: x is clothes.\nAirtight(x) ::: x is airtight.\nWearable(x) ::: x is wearable.\nPremises:\n¬Shoes(food) ::: No shoes are food.\nSlippers(shoes) ::: All slippers are shoes.\nThing(x) ⊕ Clothes(x) ::: A thing is either food or clothes.\n¬Wearable(airtight) ::: No wearable things are airtight.\nClothes(clothes) ::: All clothes are wearable.\nWatch(x) ⊕ Airtight(x) ⊕ Clothes(x) ::: If a watch is not airtight and clothes, then a watch"
    ]
  },
  {
    "id": "FOLIO_train_909",
    "context": "No shoes are food. All slippers are shoes. A thing is either food or clothes. No wearable things are airtight. All clothes are wearable. If a watch is not airtight and clothes, then a watch is either both airtight and clothes, or neither airtight nor clothes.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Watch is a slipper.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nShoe(x) ::: x is a shoe.\nSlipper(x) ::: x is a slipper.\nFood(x) ::: x is food.\nClothes(x) ::: x is clothes.\nAirtight(x) ::: x is airtight.\nWearable(x) ::: x is wearable.\nPremises:\n¬Shoe(food) ::: No shoes are food.\nSlipper(shoe) ::: All slippers are shoes.\nThing(x) ⊕ Clothes(x) ::: A thing is either food or clothes.\n¬Wearable(airtight) ::: No wearable things are airtight.\nClothes(clothes) ::: All clothes are wearable.\nWatch(x) ⊕ Airtight(x) ::: If a watch is not airtight and clothes, then a watch is either both airtight and clothes,"
    ]
  },
  {
    "id": "FOLIO_train_910",
    "context": "No shoes are food. All slippers are shoes. A thing is either food or clothes. No wearable things are airtight. All clothes are wearable. If a watch is not airtight and clothes, then a watch is either both airtight and clothes, or neither airtight nor clothes.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Watch is neither airtight nor a slipper.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nShoe(x) ::: x is a shoe.\nSlipper(x) ::: x is a slipper.\nFood(x) ::: x is food.\nClothes(x) ::: x is clothes.\nAirtight(x) ::: x is airtight.\nWearable(x) ::: x is wearable.\nWatch(x) ::: x is a watch.\nPremises:\n¬Shoe(food) ::: No shoes are food.\nSlipper(shoe) ::: All slippers are shoes.\nThing(x) ⊕ Clothes(x) ::: A thing is either food or clothes.\n¬Wearable(airtight) ::: No wearable things are airtight.\nClothes(watch) ::: All clothes are wearable.\n¬Airtight(watch) ∧ Clothes(watch) ::: If a watch is not airtight and clothes, then a watch is either both airtight and clothes, or neither airtight nor clothes.\nConclusion:\n¬Slipper(watch) ∧ ¬Airtight(watch) ::: Watch is neither a slipper nor airtight.\n------"
    ]
  },
  {
    "id": "FOLIO_train_911",
    "context": "An Olympian is a person who trains for an Olympic sport and goes to the Olympics. Carlos Reyes trains for an Olympic sport. Carlos Reyes went to the Olympics. Carlos Reyes is a welterweight. Heavy weights are not welterweights.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Carlos Reyes is an Olympian.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Olympian(x) ::: x is an Olympian.\nTrains(x, y) ::: x trains for y.\nGoes(x, y) ::: x goes to y.\nWelterweight(x) ::: x is a welterweight.\nHeavyWeight(x) ::: x is a heavy weight.\nPremises:\nOlympian(carlos) ∧ Trains(carlos, olympicSport) ∧ Goes(carlos, olympics) ::: Carlos Reyes is an Olympian.\nWelterweight(carlos) ::: Carlos Reyes is a welterweight.\nHeavyWeight(carlos) ⊕ Welterweight(carlos) ::: Heavy weights are not welterweights.\nConclusion:\nOlympian(carlos) ::: Carlos Reyes is an Olympian.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is"
    ]
  },
  {
    "id": "FOLIO_train_912",
    "context": "An Olympian is a person who trains for an Olympic sport and goes to the Olympics. Carlos Reyes trains for an Olympic sport. Carlos Reyes went to the Olympics. Carlos Reyes is a welterweight. Heavy weights are not welterweights.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Carlos Reyes is a heavy weight.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Olympian(x) ::: x is an Olympian.\nTrains(x, y) ::: x trains for y.\nGoes(x, y) ::: x goes to y.\nWelterweight(x) ::: x is a welterweight.\nHeavyWeight(x) ::: x is a heavy weight.\nPremises:\nOlympian(carlos) ∧ Goes(carlos, olympics) ∧ Welterweight(carlos) ::: Carlos Reyes trains for an Olympic sport and goes to the Olympics.\nHeavyWeight(carlos) ⊕ Welterweight(carlos) ::: Carlos Reyes is a welterweight. Heavy weights are not welterweights.\nConclusion:\nHeavyWeight(carlos) ::: Carlos Reyes is a heavy weight.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not"
    ]
  },
  {
    "id": "FOLIO_train_913",
    "context": "An Olympian is a person who trains for an Olympic sport and goes to the Olympics. Carlos Reyes trains for an Olympic sport. Carlos Reyes went to the Olympics. Carlos Reyes is a welterweight. Heavy weights are not welterweights.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Carlos Reyes won an Olympic medal.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Olympic(x) ::: x is an Olympian.\nTrains(x, y) ::: x trains for y.\nWent(x, y) ::: x went to y.\nWelterweight(x) ::: x is a welterweight.\nHeavyWeight(x) ::: x is a heavy weight.\nPremises:\nOlympic(carlos) ∧ Went(carlos, olympics) ∧ Trains(carlos, olympicSport) ::: Carlos Reyes is an Olympian. Carlos Reyes went to the Olympics. Carlos Reyes trains for an Olympic sport.\nWelterweight(carlos) ::: Carlos Reyes is a welterweight.\nHeavyWeight(carlos) ⊕ Welterweight(carlos) ::: Heavy weights are not welterweights.\nConclusion:\nMedal(carlos, olympics) ::: Carlos Reyes won an Olympic medal.\n------\nProblem:\nA person who is a member of the National Academy of Sciences is a scientist. A scientist is a person who is a member of the National Academy of Sciences.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? A person who is a member of the National Academy of Sciences is a"
    ]
  },
  {
    "id": "FOLIO_train_914",
    "context": "If people have a lot of decorations in their room, they cannot pack and move out of their rooms very easily. If people have high ambitions and future career goals, then they can pack and move out of their rooms very easily. If people are big fans of pop bands and singers, then they have a lot of decorations in their room. All young teenage girls who attend college are big fans of pop bands and singers. If Sam has high ambitions and future career goals, then Sam is a big fan of pop bands and singers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Sam is a young teenage girl who attends college.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nPack(x) ::: x can pack and move out of their rooms very easily.\nDecoration(x) ::: x is a decoration in their room.\nAmbition(x) ::: x is a high ambition.\nFutureCareerGoal(x) ::: x is a future career goal.\nBigFan(x, y) ::: x is a big fan of y.\nPopBand(x) ::: x is a pop band.\nPopSinger(x) ::: x is a pop singer.\nCollege(x) ::: x is a college.\nYoungTeenageGirl(x) ::: x is a young teenage girl.\nAttend(x, y) ::: x attends y.\nPremises:\n∀x (Decoration(x) → ¬Pack(x)) ::: If people have a lot of decorations in their room, they cannot pack and move out of their rooms very easily.\n∀x (FutureCareerGoal(x) → Pack(x)) ::: If people have high ambitions and future career goals, then they can pack and move out of their rooms very easily.\n∀x (BigFan(x, y) → Decoration(x)) :::"
    ]
  },
  {
    "id": "FOLIO_train_915",
    "context": "If people have a lot of decorations in their room, they cannot pack and move out of their rooms very easily. If people have high ambitions and future career goals, then they can pack and move out of their rooms very easily. If people are big fans of pop bands and singers, then they have a lot of decorations in their room. All young teenage girls who attend college are big fans of pop bands and singers. If Sam has high ambitions and future career goals, then Sam is a big fan of pop bands and singers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Sam is not a young teenage girl who attends college.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nPack(x) ::: x can pack and move out of their rooms very easily.\nDecoration(x) ::: x is a decoration in their room.\nAmbition(x) ::: x is a high ambition.\nFutureCareerGoal(x) ::: x is a future career goal.\nBigFan(x, y) ::: x is a big fan of y.\nPopBand(x) ::: x is a pop band.\nPopSinger(x) ::: x is a pop singer.\nCollege(x) ::: x is a college.\nYoungTeenageGirl(x) ::: x is a young teenage girl.\nAttend(x, y) ::: x attends y.\nPremises:\n∀x (Decoration(x) → ¬Pack(x)) ::: If people have a lot of decorations in their room, they cannot pack and move out of their rooms very easily.\n∀x (Ambition(x) → Pack(x)) ::: If people have high ambitions and future career goals, then they can pack and move out of their rooms very easily.\n∀x (BigFan(x, y) → Decoration(x)) ::: If people are"
    ]
  },
  {
    "id": "FOLIO_train_916",
    "context": "If people have a lot of decorations in their room, they cannot pack and move out of their rooms very easily. If people have high ambitions and future career goals, then they can pack and move out of their rooms very easily. If people are big fans of pop bands and singers, then they have a lot of decorations in their room. All young teenage girls who attend college are big fans of pop bands and singers. If Sam has high ambitions and future career goals, then Sam is a big fan of pop bands and singers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Sam is a big fan of pop bands and singers.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nPack(x) ::: x packs.\nMoveOut(x) ::: x moves out.\nDecoration(x) ::: x is a decoration.\nRoom(x) ::: x is a room.\nAmbition(x) ::: x has an ambition.\nFutureCareerGoal(x) ::: x has a future career goal.\nBigFan(x, y) ::: x is a big fan of y.\nYoungTeenageGirl(x) ::: x is a young teenage girl.\nCollege(x) ::: x attends college.\nPremises:\n∀x (Decoration(x) → ¬Pack(x)) ::: If people have a lot of decorations in their room, they cannot pack and move out of their rooms very easily.\n∀x (FutureCareerGoal(x) → Pack(x)) ::: If people have high ambitions and future career goals, then they can pack and move out of their rooms very easily.\n∀x (BigFan(x, y) → Decoration(x)) ::: If people are big fans of pop bands and singers, then they have a lot of decorations in their room.\n∀x (YoungTeen"
    ]
  },
  {
    "id": "FOLIO_train_917",
    "context": "If people have a lot of decorations in their room, they cannot pack and move out of their rooms very easily. If people have high ambitions and future career goals, then they can pack and move out of their rooms very easily. If people are big fans of pop bands and singers, then they have a lot of decorations in their room. All young teenage girls who attend college are big fans of pop bands and singers. If Sam has high ambitions and future career goals, then Sam is a big fan of pop bands and singers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Sam neither has high ambitions and future career goals nor is she a young teenage girl who attends college.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPack(x) ::: x can pack and move out of their rooms very easily.\nDecoration(x) ::: x is a decoration in their room.\nAmbition(x) ::: x is a high ambition and future career goal.\nBigFan(x, y) ::: x is a big fan of y.\nCollege(x) ::: x is a young teenage girl who attends college.\nPremises:\n∀x (Decoration(x) → ¬Pack(x)) ::: If people have a lot of decorations in their room, they cannot pack and move out of their rooms very easily.\n∀x (Ambition(x) → Pack(x)) ::: If people have high ambitions and future career goals, then they can pack and move out of their rooms very easily.\n∀x (BigFan(x, y) → Decoration(x)) ::: If people are big fans of pop bands and singers, then they have a lot of decorations in their room.\n∀x (College(x) → BigFan(x, popBandsAndSingers)) ::: All young teenage girls who attend college are big fans of pop bands and singers.\nConclusion:\n¬Pack(sam)"
    ]
  },
  {
    "id": "FOLIO_train_918",
    "context": "If people have a lot of decorations in their room, they cannot pack and move out of their rooms very easily. If people have high ambitions and future career goals, then they can pack and move out of their rooms very easily. If people are big fans of pop bands and singers, then they have a lot of decorations in their room. All young teenage girls who attend college are big fans of pop bands and singers. If Sam has high ambitions and future career goals, then Sam is a big fan of pop bands and singers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Sam has high ambitions and future career goals and is a young teenage girl who attends college.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nPack(x) ::: x can pack and move out of their rooms very easily.\nDecoration(x) ::: x is a decoration in their room.\nAmbition(x) ::: x has high ambitions and future career goals.\nBigFan(x, y) ::: x is a big fan of y.\nYoungTeenageGirl(x) ::: x is a young teenage girl.\nCollege(x) ::: x attends college.\nPremises:\n∀x (Decoration(x) → ¬Pack(x)) ::: If people have a lot of decorations in their room, they cannot pack and move out of their rooms very easily.\n∀x (Ambition(x) → Pack(x)) ::: If people have high ambitions and future career goals, then they can pack and move out of their rooms very easily.\n∀x (BigFan(x, y) → Decoration(x)) ::: If people are big fans of pop bands and singers, then they have a lot of decorations in their room.\n∀x (YoungTeenageGirl(x) → BigFan(x, popBandsAndSingers)) ::: All young teenage girls who attend college are"
    ]
  },
  {
    "id": "FOLIO_train_919",
    "context": "If people have a lot of decorations in their room, they cannot pack and move out of their rooms very easily. If people have high ambitions and future career goals, then they can pack and move out of their rooms very easily. If people are big fans of pop bands and singers, then they have a lot of decorations in their room. All young teenage girls who attend college are big fans of pop bands and singers. If Sam has high ambitions and future career goals, then Sam is a big fan of pop bands and singers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Sam has high ambitions and future career goals and is a young teenage girl who attends college.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nPack(x) ::: x can pack and move out of their rooms very easily.\nDecoration(x) ::: x is a decoration in their room.\nAmbition(x) ::: x has high ambitions and future career goals.\nBigFan(x, y) ::: x is a big fan of y.\nYoungTeenageGirl(x) ::: x is a young teenage girl.\nCollege(x) ::: x attends college.\nPremises:\n∀x (Decoration(x) → ¬Pack(x)) ::: If people have a lot of decorations in their room, they cannot pack and move out of their rooms very easily.\n∀x (Ambition(x) → Pack(x)) ::: If people have high ambitions and future career goals, then they can pack and move out of their rooms very easily.\n∀x (BigFan(x, y) → Decoration(x)) ::: If people are big fans of pop bands and singers, then they have a lot of decorations in their room.\n∀x (YoungTeenageGirl(x) → BigFan(x, popBandsAndSingers)) ::: All young teenage girls who attend college are"
    ]
  },
  {
    "id": "FOLIO_train_920",
    "context": "If people have a lot of decorations in their room, they cannot pack and move out of their rooms very easily. If people have high ambitions and future career goals, then they can pack and move out of their rooms very easily. If people are big fans of pop bands and singers, then they have a lot of decorations in their room. All young teenage girls who attend college are big fans of pop bands and singers. If Sam has high ambitions and future career goals, then Sam is a big fan of pop bands and singers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Sam is a young teenage girl who attends college, then Sam either does not have high ambitions and future career goals or is a big fan of pop bands and singers.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nPack(x) ::: x can pack and move out of their rooms.\nDecoration(x) ::: x is a decoration.\nBigFan(x, y) ::: x is a big fan of y.\nAmbition(x) ::: x has high ambitions and future career goals.\nYoung(x) ::: x is a young person.\nTeenage(x) ::: x is a teenage person.\nCollege(x) ::: x attends college.\nPremises:\n∀x (Decoration(x) → ¬Pack(x)) ::: If people have a lot of decorations in their room, they cannot pack and move out of their rooms very easily.\n∀x (Ambition(x) → Pack(x)) ::: If people have high ambitions and future career goals, then they can pack and move out of their rooms very easily.\n∀x (BigFan(x, y) → Decoration(x)) ::: If people are big fans of pop bands and singers, then they have a lot of decorations in their room.\n∀x (Teenage(x) → Young(x)) ::: All young teenage girls are young.\nSam(x) ::: x is Sam.\nAmbition(sam) ::: Sam has high ambitions and future career goals.\nCollege(sam) ::: Sam attends college.\nConclusion:\n¬(BigFan(sam, popBandsAndSingers)) ∨ (BigFan(sam, popBandsAndSingers) ∧ Young(sam)) ::: If Sam is a young teenage girl who attends college, then Sam either does not have high ambitions and future career goals or is a big fan of pop bands and singers.\n------"
    ]
  },
  {
    "id": "FOLIO_train_921",
    "context": "If people have a lot of decorations in their room, they cannot pack and move out of their rooms very easily. If people have high ambitions and future career goals, then they can pack and move out of their rooms very easily. If people are big fans of pop bands and singers, then they have a lot of decorations in their room. All young teenage girls who attend college are big fans of pop bands and singers. If Sam has high ambitions and future career goals, then Sam is a big fan of pop bands and singers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Sam has high ambitions and future career goals and is a young teenage girl who attends college, then Sam either does not have high ambitions and future career goals or is not a young teenage girl who attends college.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPack(x) ::: x can pack and move out of their rooms very easily.\nDecoration(x) ::: x is a decoration in their room.\nAmbition(x) ::: x is a high ambition.\nFutureCareerGoal(x) ::: x is a future career goal.\nBigFan(x, y) ::: x is a big fan of y.\nPopBand(x) ::: x is a pop band.\nPopSinger(x) ::: x is a pop singer.\nCollege(x) ::: x is a college.\nYoungTeenageGirl(x) ::: x is a young teenage girl.\nAttend(x, y) ::: x attends y.\nPremises:\n∀x (Decoration(x) → ¬Pack(x)) ::: If people have a lot of decorations in their room, they cannot pack and move out of their rooms very easily.\n∀x (FutureCareerGoal(x) → Pack(x)) ::: If people have high ambitions and future career goals, then they can pack and move out of their rooms very easily.\n∀x (BigFan(x, y) → Decoration(x)) ::: If people are big fans of pop bands and singers, then they have a lot of decorations in their room.\n∀x (YoungTeenageGirl(x) → BigFan(x, popBand)) ::: All young teenage girls who attend college are big fans of pop bands and singers.\nPack(sam) ∧ FutureCareerGoal(sam) ::: If Sam has high ambitions and future career goals, then Sam is a big fan of pop bands and singers.\nConclusion:\n¬("
    ]
  },
  {
    "id": "FOLIO_train_922",
    "context": "If people have a lot of decorations in their room, they cannot pack and move out of their rooms very easily. If people have high ambitions and future career goals, then they can pack and move out of their rooms very easily. If people are big fans of pop bands and singers, then they have a lot of decorations in their room. All young teenage girls who attend college are big fans of pop bands and singers. If Sam has high ambitions and future career goals, then Sam is a big fan of pop bands and singers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Sam has high ambitions and future career goals, then Sam is a young teenage girl who attends college.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nPack(x) ::: x can pack and move out of their rooms very easily.\nDecoration(x) ::: x is a decoration in their room.\nAmbition(x) ::: x is a high ambition.\nFutureCareerGoal(x) ::: x is a future career goal.\nBigFan(x, y) ::: x is a big fan of y.\nPopBand(x) ::: x is a pop band.\nPopSinger(x) ::: x is a pop singer.\nCollege(x) ::: x is a college.\nAttend(x, y) ::: x attends y.\nYoungTeenageGirl(x) ::: x is a young teenage girl.\nPremises:\n∀x (Decoration(x) → ¬Pack(x)) ::: If people have a lot of decorations in their room, they cannot pack and move out of their rooms very easily.\n∀x (Ambition(x) → Pack(x)) ::: If people have high ambitions and future career goals, then they can pack and move out of their rooms very easily.\n∀x (BigFan(x, y) → Decoration(x)) ::: If people are big fans of pop bands and singers, then they have a lot of decorations in their room.\n∀x (YoungTeenageGirl(x) → BigFan(x, popBand)) ::: All young teenage girls who attend college are big fans of pop bands and singers.\nAmbition(sam) ∧ FutureCareerGoal(sam) ::: If Sam has high ambitions and future career goals, then Sam is a big fan of pop bands and singers.\nConclusion:\nYoung"
    ]
  },
  {
    "id": "FOLIO_train_923",
    "context": "A student who loves shrieking will be punished. If a person swears, then he is a student. If someone is a teacher, then Bob will talk to him. All gentlemen are in a suit. All teachers are men. There is a teacher. If someone is not a gentlemen, then he is not nice. Willy is nice. Bob loves shrieking and swearing.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Willy is in a suit.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nLoves(x, y) ::: x loves y.\nShrieks(x) ::: x shrieks.\nSwears(x) ::: x swears.\nTeacher(x) ::: x is a teacher.\nGentleman(x) ::: x is a gentleman.\nNice(x) ::: x is nice.\nPremises:\nLoves(bob, shrieking) ∧ Loves(bob, swearing) ::: Bob loves shrieking and swearing.\nSwears(bob) ::: If a person swears, then he is a student.\nTeacher(bob) ::: If someone is a teacher, then Bob will talk to him.\nGentleman(bob) ::: All gentlemen are in a suit.\nTeacher(someone) ::: There is a teacher.\nNice(willy) ::: If someone is not a gentlemen, then he is not nice.\nConclusion:\nGentleman(bob) ::: Willy is nice.\n------\nProblem:\nA person who is a student and loves shrieking will be punished. If a person swears, then he is a student. If someone is a teacher, then Bob will talk to him. All gentlemen are in a suit. All teachers are men. There is a teacher. If someone is not a gentlemen, then he is not nice. Willy is nice. Bob loves shrieking and swearing.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Bob is a teacher.\n###\nPredicates:\nLoves(x, y) ::: x loves y.\nShrieks(x) :::"
    ]
  },
  {
    "id": "FOLIO_train_924",
    "context": "A student who loves shrieking will be punished. If a person swears, then he is a student. If someone is a teacher, then Bob will talk to him. All gentlemen are in a suit. All teachers are men. There is a teacher. If someone is not a gentlemen, then he is not nice. Willy is nice. Bob loves shrieking and swearing.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Bob will be not punished.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nLoves(x, y) ::: x loves y.\nShrieks(x) ::: x shrieks.\nSwears(x) ::: x swears.\nTeacher(x) ::: x is a teacher.\nGentleman(x) ::: x is a gentleman.\nNice(x) ::: x is nice.\nPremises:\nTeacher(bob) ∧ Loves(bob, shrieking) ∧ Swears(bob) ::: Bob loves shrieking and swearing.\nTeacher(x) → (Swears(x) → Student(x)) ::: If someone is a teacher, then he is a student.\nTeacher(x) → (Gentleman(x) → Bob(x)) ::: If someone is a teacher, then Bob will talk to him.\nGentleman(x) → Nice(x) ::: If someone is a gentleman, then he is nice.\nGentleman(x) → Suit(x) ::: If someone is a gentleman, then he is in a suit.\nTeacher(x) → Man(x) ::: If someone is a teacher, then he is a man.\nConclusion:\n¬Punished(bob) ::: Bob will be not punished.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is"
    ]
  },
  {
    "id": "FOLIO_train_925",
    "context": "A student who loves shrieking will be punished. If a person swears, then he is a student. If someone is a teacher, then Bob will talk to him. All gentlemen are in a suit. All teachers are men. There is a teacher. If someone is not a gentlemen, then he is not nice. Willy is nice. Bob loves shrieking and swearing.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There is a man that Bob will talk to.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nLoves(x, y) ::: x loves y.\nShrieks(x) ::: x shrieks.\nSwears(x) ::: x swears.\nTeacher(x) ::: x is a teacher.\nGentleman(x) ::: x is a gentleman.\nNice(x) ::: x is nice.\nPremises:\nTeacher(bob) ∧ Loves(bob, shrieking) ∧ Swears(bob) ::: Bob loves shrieking and swearing.\nTeacher(x) → Talk(bob, x) ::: If someone is a teacher, then Bob will talk to him.\nGentleman(x) → Suit(x) ::: All gentlemen are in a suit.\nTeacher(x) ∧ Man(x) ::: If someone is a teacher, then he is a man.\nTeacher(x) ∧ Man(x) ∧ Gentleman(x) ::: All teachers are men.\nTeacher(x) ∧ Man(x) ∧ Gentleman(x) ∧ Suit(x) ::: There is a teacher.\nConclusion:\nTalk(bob, x) ::: There is a man that Bob will talk to.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If"
    ]
  },
  {
    "id": "FOLIO_train_926",
    "context": "Quincy McDuffie is an American professional wide receiver in Canadian Football. People who can catch balls are good wide receivers. Quincy McDuffie can catch many footballs easily. Good wide receivers play professionally. Good wide receivers can catch with both their left and right hand. All footballs are balls.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Quincy McDuffie is a good wide receiver.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nCanCatch(x, y) ::: x can catch y.\nGoodWideReceiver(x) ::: x is a good wide receiver.\nProfessional(x) ::: x is a professional.\nPlay(x, y) ::: x plays y.\nCatch(x, y) ::: x catches y.\nLeftHand(x) ::: x is left handed.\nRightHand(x) ::: x is right handed.\nBall(x) ::: x is a ball.\nFootball(x) ::: x is a football.\nPremises:\nCanCatch(Quincy, football) ∧ CanCatch(Quincy, many) ∧ CanCatch(Quincy, easily) ::: Quincy McDuffie can catch many footballs easily.\nGoodWideReceiver(Quincy) ∧ Play(Quincy, professionally) ::: Quincy McDuffie is a good wide receiver.\nGoodWideReceiver(Quincy) ∧ Catch(Quincy, left) ∧ Catch(Quincy, right) ::: Good wide receivers can catch with both their left and right hand.\nBall(football) ∧ Ball(many) ::: All footballs are balls.\nConclusion:\nGoodWideReceiver(Quincy) ::: Quincy McDuffie is a good wide receiver.\n------\nProblem:\nThe following is a list of the top 100 most popular baby names in the United States in 2013.\n1. Jacob\n2. Mason\n3. William\n4. Michael\n5. Ethan\n6. Jayden\n7. Noah\n8. Alexander\n9. Daniel\n10. Aiden\n11. James"
    ]
  },
  {
    "id": "FOLIO_train_927",
    "context": "Quincy McDuffie is an American professional wide receiver in Canadian Football. People who can catch balls are good wide receivers. Quincy McDuffie can catch many footballs easily. Good wide receivers play professionally. Good wide receivers can catch with both their left and right hand. All footballs are balls.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Quincy McDuffie can catch every ball.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nCanCatch(x, y) ::: x can catch y.\nGoodWideReceiver(x) ::: x is a good wide receiver.\nProfessional(x) ::: x is a professional.\nPlay(x, y) ::: x plays y.\nCatch(x, y) ::: x catches y.\nLeftHand(x) ::: x is a left hand.\nRightHand(x) ::: x is a right hand.\nBall(x) ::: x is a ball.\nPremises:\nCanCatch(quincy, football) ∧ CanCatch(quincy, ball) ∧ GoodWideReceiver(quincy) ∧ Professional(quincy) ::: Quincy McDuffie is an American professional wide receiver in Canadian Football.\nCanCatch(quincy, ball) ∧ CanCatch(quincy, football) ∧ GoodWideReceiver(quincy) ∧ Professional(quincy) ∧ Play(quincy, football) ∧ Play(quincy, ball) ∧ Catch(quincy, football) ∧ Catch(quincy, ball) ::: Quincy McDuffie can catch many footballs easily.\nCanCatch(quincy, ball) ∧ CanCatch(quincy, football) ∧ GoodWideReceiver(quincy) ∧ Professional(quincy) ∧ Play(quincy, football) ∧ Play(quincy, ball) ∧ Catch(quincy, football) ∧ Catch(quincy, ball) ∧ LeftHand(quincy) ∧ RightHand(quincy) ::: Quincy McDuffie can catch with both their left and right hand.\nConclusion:\nCanCatch(quincy, ball) ∧ CanC"
    ]
  },
  {
    "id": "FOLIO_train_928",
    "context": "Quincy McDuffie is an American professional wide receiver in Canadian Football. People who can catch balls are good wide receivers. Quincy McDuffie can catch many footballs easily. Good wide receivers play professionally. Good wide receivers can catch with both their left and right hand. All footballs are balls.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Professional wide receivers are good at catching balls.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nCanCatch(x, y) ::: x can catch y.\nGood(x) ::: x is good.\nProfessional(x) ::: x is a professional.\nPlay(x, y) ::: x plays y.\nCatch(x, y) ::: x catches y.\nLeftHand(x) ::: x is left handed.\nRightHand(x) ::: x is right handed.\nBall(x) ::: x is a ball.\nPremises:\n∀x (CanCatch(x, football) → Good(x)) ::: People who can catch balls are good wide receivers.\nCanCatch(quincy, many) ∧ Good(quincy) ::: Quincy McDuffie can catch many footballs easily.\n∀x (Good(x) → Professional(x)) ::: Good wide receivers play professionally.\n∀x (Good(x) → Catch(x, left) ∨ Catch(x, right)) ::: Good wide receivers can catch with both their left and right hand.\n∀x (Ball(x) → CanCatch(x, football)) ::: All footballs are balls.\nConclusion:\nProfessional(quincy) ∧ Play(quincy, football) ∧ Catch(quincy, football) ::: Professional wide receivers play professionally.\n------\nProblem:\nThe following is a list of the top 100 most popular baby names in the United States in 2012.\n1. Jacob\n2. Mason\n3. William\n4. Ethan\n5. Michael\n6. Jayden\n7. Alexander\n8. Daniel\n9. Noah\n10. Aiden\n11. Anthony\n12. David\n13."
    ]
  },
  {
    "id": "FOLIO_train_929",
    "context": "Boves is a railway station located in France. The preceding station of Boves is Longueau. The preceding station of Dommartin is Boves. France is a European country. Dommartin is situated on the Paris–Lille railway. Any two contiguous stations are on the same railway. Boves is served by regional TER Hauts-de-France trains. If A is located in B and B is located in C, then A is located in C. If A precedes B and B preceds C, than A preceds C.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Longueau is situated on the Paris–Lille railway.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nSituated(x, y) ::: x is situated on y.\nPreceding(x, y) ::: x precedes y.\nContiguous(x, y) ::: x and y are contiguous.\nLocated(x, y) ::: x is located in y.\nTER(x) ::: x is served by regional TER Hauts-de-France trains.\nPremises:\nSituated(boves, france) ::: Boves is situated on France.\nSituated(longueau, france) ::: Longueau is situated on France.\nSituated(dommartin, france) ::: Dommartin is situated on France.\nSituated(longueau, paris–lille) ::: Longueau is situated on Paris–Lille railway.\nSituated(boves, paris–lille) ::: Boves is situated on Paris–Lille railway.\nSituated(dommartin, paris–lille) ::: Dommartin is situated on Paris–Lille railway.\nPreceding(longueau, boves) ::: Longueau precedes Boves.\nPreceding(dommartin, boves) ::: Dommartin precedes Boves.\nPreceding(longueau, dommartin) ::: Longueau precedes Dommartin.\nPreceding(boves, dommartin) ::: Boves precedes Dommartin.\nPreceding(dommartin, boves) ::: Dommartin precedes Boves.\nPreceding(boves, dommartin) ::: Boves precedes Dommartin."
    ]
  },
  {
    "id": "FOLIO_train_930",
    "context": "Boves is a railway station located in France. The preceding station of Boves is Longueau. The preceding station of Dommartin is Boves. France is a European country. Dommartin is situated on the Paris–Lille railway. Any two contiguous stations are on the same railway. Boves is served by regional TER Hauts-de-France trains. If A is located in B and B is located in C, then A is located in C. If A precedes B and B preceds C, than A preceds C.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Boves is not in Europe.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nEuropean(x) ::: x is a European country.\nFrench(x) ::: x is a French country.\nContiguous(x, y) ::: x and y are contiguous.\nSituated(x, y) ::: x is situated on y.\nPreceding(x, y) ::: x precedes y.\nTER(x) ::: x is a TER Hauts-de-France train.\nLocated(x, y) ::: x is located in y.\nPremises:\nFrance ∧ European(France) ::: France is a European country.\nBoves ∧ French(Boves) ::: Boves is a French country.\nLongueau ∧ French(Longueau) ::: Longueau is a French country.\nDommartin ∧ French(Dommartin) ::: Dommartin is a French country.\nBoves ∧ Situated(Boves, Paris–Lille railway) ::: Boves is situated on the Paris–Lille railway.\nDommartin ∧ Situated(Dommartin, Paris–Lille railway) ::: Dommartin is situated on the Paris–Lille railway.\nBoves ∧ Contiguous(Boves, Longueau) ::: Boves and Longueau are contiguous.\nDommartin ∧ Contiguous(Dommartin, Boves) ::: Dommartin and Boves are contiguous.\nBoves ∧ Located(Boves, Dommartin) ::: Boves is located in Dommartin.\nDommartin ∧ Located(Dommartin, Boves) ::: Dommartin is located in Boves.\nConclusion:\n¬Located(Boves, Europe) ::: Boves is not in Europe.\n------"
    ]
  },
  {
    "id": "FOLIO_train_931",
    "context": "Boves is a railway station located in France. The preceding station of Boves is Longueau. The preceding station of Dommartin is Boves. France is a European country. Dommartin is situated on the Paris–Lille railway. Any two contiguous stations are on the same railway. Boves is served by regional TER Hauts-de-France trains. If A is located in B and B is located in C, then A is located in C. If A precedes B and B preceds C, than A preceds C.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Longueau is served by regional TER Hauts-de-France trains.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLocatedIn(x, y) ::: x is located in y.\nPrecedes(x, y) ::: x precedes y.\nSituatedOn(x, y) ::: x is situated on y.\nContiguous(x, y) ::: x is contiguous with y.\nTER(x) ::: x is a TER Hauts-de-France train.\nPremises:\nLocatedIn(boves, france) ∧ LocatedIn(longueau, france) ∧ LocatedIn(dommartin, france) ∧ LocatedIn(boves, dommartin) ∧ LocatedIn(longueau, boves) ::: Boves is a railway station located in France. The preceding station of Boves is Longueau. The preceding station of Dommartin is Boves. France is a European country. Dommartin is situated on the Paris–Lille railway. Any two contiguous stations are on the same railway. Boves is served by regional TER Hauts-de-France trains.\nContiguous(longueau, boves) ∧ Contiguous(boves, dommartin) ∧ Contiguous(dommartin, longueau) ::: If A is located in B and B is located in C, then A is located in C. If A precedes B and B preceds C, than A preceds C.\nTER(longueau) ∧ TER(boves) ∧ TER(dommartin) ::: Longueau is served by regional TER Hauts-de-France trains.\nConclusion:\nTER(longueau) ::: Longueau is served by regional TER Hauts-de-France trains.\n------\nProblem:\nThe following is a list of the top 100 most popular names in the United States for the year 2018."
    ]
  },
  {
    "id": "FOLIO_train_932",
    "context": "Edwin Smith was a New Zealand Rower from Auckland. Edwin Smith was also known as Ted Smith. Edwin Smith went to Rose Road Primary School, located in Grey Lynn. Edwin Smith was a sergeant who served with the New Zealand 24th battalion in Italy and Egypt. Broadway Sheetmetals was a buisness that was ran and owned by Edwin Smith, who was a sheetmetal worker.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Ted Smith was a sergeant.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nNewZealandRower(x) ::: x is a New Zealand Rower.\nTedSmith(x) ::: x is Ted Smith.\nEdwinSmith(x) ::: x is Edwin Smith.\nSergeant(x) ::: x is a sergeant.\nSheetmetalWorker(x) ::: x is a sheetmetal worker.\nBroadwaySheetmetals(x) ::: x is Broadway Sheetmetals.\nRoseRoadPrimarySchool(x) ::: x is Rose Road Primary School.\nGreyLynn(x) ::: x is Grey Lynn.\nPremises:\nNewZealandRower(edwin) ∧ TedSmith(edwin) ::: Edwin Smith was a New Zealand Rower from Auckland. Edwin Smith was also known as Ted Smith.\nEdwinSmith(edwin) ∧ RoseRoadPrimarySchool(edwin) ∧ GreyLynn(edwin) ::: Edwin Smith went to Rose Road Primary School, located in Grey Lynn.\nSergeant(edwin) ∧ NewZealand24thBattalion(edwin) ∧ Italy(edwin) ∧ Egypt(edwin) ::: Edwin Smith was a sergeant who served with the New Zealand 24th battalion in Italy and Egypt.\nSheetmetalWorker(edwin) ∧ BroadwaySheetmetals(edwin) ::: Edwin Smith was a sheetmetal worker. Broadway Sheetmetals was a buisness that was ran and owned by Edwin Smith.\nConclusion:\nSergeant(edwin) ::: Ted Smith was a sergeant.\n------\nProblem:\nThe following is a list of the top 100 most popular names in the United States for the year 2000.\n1. Michael\n2. Christopher\n3. Joshua\n4. Matthew\n5. Andrew\n6. David\n7"
    ]
  },
  {
    "id": "FOLIO_train_933",
    "context": "Edwin Smith was a New Zealand Rower from Auckland. Edwin Smith was also known as Ted Smith. Edwin Smith went to Rose Road Primary School, located in Grey Lynn. Edwin Smith was a sergeant who served with the New Zealand 24th battalion in Italy and Egypt. Broadway Sheetmetals was a buisness that was ran and owned by Edwin Smith, who was a sheetmetal worker.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There are no rowers that own a buisness.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nRower(x) ::: x is a rower.\nOwner(x, y) ::: x owns y.\nSheetmetalWorker(x) ::: x is a sheetmetal worker.\nSergeant(x) ::: x is a sergeant.\nBroadwaySheetmetals(x) ::: x is Broadway Sheetmetals.\nRoseRoadPrimarySchool(x) ::: x is Rose Road Primary School.\nNewZealand24thBattalion(x) ::: x is the New Zealand 24th battalion.\nPremises:\nRower(edwin) ∧ Owner(edwin, BroadwaySheetmetals) ∧ SheetmetalWorker(edwin) ::: Edwin Smith was a New Zealand Rower from Auckland. Edwin Smith was also known as Ted Smith. Edwin Smith went to Rose Road Primary School, located in Grey Lynn. Edwin Smith was a sergeant who served with the New Zealand 24th battalion in Italy and Egypt. Broadway Sheetmetals was a buisness that was ran and owned by Edwin Smith, who was a sheetmetal worker.\nConclusion:\n¬∃x (Rower(x) ∧ Owner(x, y)) ::: There are no rowers that own a buisness.\n------\nProblem:\nThe following is a list of the top 100 most popular names in the United States for the year 2000.\n1. Michael\n2. Christopher\n3. Joshua\n4. Matthew\n5. Andrew\n6. David\n7. Joseph\n8. Daniel\n9. John\n10. Jason\n11. Ryan\n12. Nicholas\n13. James\n14. Benjamin\n15. Anthony\n16. Brian\n17. Kevin\n18. Steven\n19. Brandon\n20. Eric\n21. Timothy\n22."
    ]
  },
  {
    "id": "FOLIO_train_934",
    "context": "Edwin Smith was a New Zealand Rower from Auckland. Edwin Smith was also known as Ted Smith. Edwin Smith went to Rose Road Primary School, located in Grey Lynn. Edwin Smith was a sergeant who served with the New Zealand 24th battalion in Italy and Egypt. Broadway Sheetmetals was a buisness that was ran and owned by Edwin Smith, who was a sheetmetal worker.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? No sergeants are from Auckland.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nNewZealand(x) ::: x is a New Zealander.\nRower(x) ::: x is a rower.\nTed(x) ::: x is known as Ted.\nSergeant(x) ::: x is a sergeant.\nAuckland(x) ::: x is from Auckland.\nRoseRoadPrimarySchool(x) ::: x is a school located in Grey Lynn.\nItaly(x) ::: x is in Italy.\nEgypt(x) ::: x is in Egypt.\nSheetmetalWorker(x) ::: x is a sheetmetal worker.\nBroadwaySheetmetals(x) ::: x is a buisness.\nOwn(x, y) ::: x owns y.\nRan(x, y) ::: x ran y.\nPremises:\nNewZealand(edwin) ∧ Rower(edwin) ∧ Ted(edwin) ∧ RoseRoadPrimarySchool(edwin) ∧ Italy(edwin) ∧ Egypt(edwin) ∧ BroadwaySheetmetals(edwin) ∧ Own(edwin, BroadwaySheetmetals) ∧ Ran(edwin, BroadwaySheetmetals) ::: Edwin Smith was a New Zealand Rower from Auckland. Edwin Smith was also known as Ted Smith. Edwin Smith went to Rose Road Primary School, located in Grey Lynn. Edwin Smith was a sergeant who served with the New Zealand 24th battalion in Italy and Egypt. Broadway Sheetmetals was a buisness that was ran and owned by Edwin Smith, who was a sheetmetal worker.\nSergeant(x) ∧ Auckland(x) ::: No sergeants are from Auckland.\n------\nProblem:\nThe following is a list of the top 100 most popular names in the United States for the year 20"
    ]
  },
  {
    "id": "FOLIO_train_935",
    "context": "Edwin Smith was a New Zealand Rower from Auckland. Edwin Smith was also known as Ted Smith. Edwin Smith went to Rose Road Primary School, located in Grey Lynn. Edwin Smith was a sergeant who served with the New Zealand 24th battalion in Italy and Egypt. Broadway Sheetmetals was a buisness that was ran and owned by Edwin Smith, who was a sheetmetal worker.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? No buisness owner has served in Egypt.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nNewZealand(x) ::: x is a New Zealander.\nRower(x) ::: x is a rower.\nTed(x) ::: x is known as Ted.\nSergeant(x) ::: x is a sergeant.\nBattalion(x) ::: x is a battalion.\nItaly(x) ::: x is in Italy.\nEgypt(x) ::: x is in Egypt.\nSheetmetalWorker(x) ::: x is a sheetmetal worker.\nBuisness(x) ::: x is a buisness.\nOwner(x, y) ::: x is the owner of y.\nPremises:\nNewZealand(edwin) ∧ Rower(edwin) ∧ Ted(edwin) ∧ Sergeant(edwin) ∧ Battalion(edwin, 24) ∧ Italy(edwin) ∧ Egypt(edwin) ∧ SheetmetalWorker(edwin) ∧ Buisness(edwin, broadwaySheetmetals) ∧ Owner(edwin, broadwaySheetmetals) ::: Edwin Smith was a New Zealand Rower from Auckland. Edwin Smith was also known as Ted Smith. Edwin Smith went to Rose Road Primary School, located in Grey Lynn. Edwin Smith was a sergeant who served with the New Zealand 24th battalion in Italy and Egypt. Broadway Sheetmetals was a buisness that was ran and owned by Edwin Smith, who was a sheetmetal worker.\nConclusion:\nNoOwner(x, y) ∧ Italy(x) ∧ Egypt(x) ::: No buisness owner has served in Egypt.\n------\nProblem:\nThe following is a list of the top 100 most popular names in the United States for the year 2000.\n1. Michael\n2. Christopher\n3. Joshua\n4."
    ]
  },
  {
    "id": "FOLIO_train_936",
    "context": "A werewolf is a human that can turn into a wolf. A werewolf has been scratched or bitten by another werewolf. If someone has been scratched or bitten, they have been attacked.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? All humans are werewolves.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nWerewolf(x) ::: x is a werewolf.\nHuman(x) ::: x is a human.\nScratched(x) ::: x has been scratched.\nBitten(x) ::: x has been bitten.\nAttacked(x) ::: x has been attacked.\nPremises:\n∀x (Werewolf(x) → Human(x)) ::: All werewolves are humans.\n∀x (Scratched(x) ⊕ Bitten(x)) ::: If someone has been scratched or bitten, they have been attacked.\nConclusion:\nHuman(x) ::: All humans are werewolves.\n------\nProblem:\nA person is a human. A human is a mammal. A mammal is an animal. A person is a person.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? All mammals are persons.\n###\nPredicates:\nPerson(x) ::: x is a person.\nHuman(x) ::: x is a human.\nMammal(x) ::: x is a mammal.\nAnimal(x) ::: x is an animal.\nPremises:\n∀x (Person(x) → Human(x)) ::: All persons are humans.\n∀x (Human(x) → Mammal(x)) ::: All humans are mammals.\n∀x (Mammal(x) → Animal(x)) ::: All mammals are animals.\n∀x (Person(x) → Person(x)) ::: All persons are persons.\nConclusion:\nAnimal(x) ::: All mammals are persons.\n------\nProblem:\nA person is a human. A human is a mammal. A mammal is an animal. A person is a person.\nQuestion:"
    ]
  },
  {
    "id": "FOLIO_train_937",
    "context": "A werewolf is a human that can turn into a wolf. A werewolf has been scratched or bitten by another werewolf. If someone has been scratched or bitten, they have been attacked.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A werewolf is a wolf.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nWerewolf(x) ::: x is a werewolf.\nHuman(x) ::: x is a human.\nWolf(x) ::: x is a wolf.\nScratched(x) ::: x has been scratched.\nBitten(x) ::: x has been bitten.\nAttacked(x) ::: x has been attacked.\nPremises:\nWerewolf(x) ∧ Human(x) ::: x is a werewolf that is a human.\nWerewolf(x) ∧ Wolf(x) ::: x is a werewolf that is a wolf.\nScratched(x) ∧ Bitten(x) ::: x has been scratched or bitten.\nAttacked(x) ∧ Scratched(x) ::: x has been scratched.\nAttacked(x) ∧ Bitten(x) ::: x has been bitten.\nConclusion:\nWolf(x) ::: x is a werewolf.\n------\nProblem:\nA person is a human. A human is a person. A person is a human. A human is a person. A person is a human. A human is a person. A person is a human. A human is a person. A person is a human. A human is a person. A person is a human. A human is a person. A person is a human. A human is a person. A person is a human. A human is a person. A person is a human. A human is a person. A person is a human. A human is a person. A person is a human. A human is a person. A person is a human. A human is a person. A person is a human. A human is a person. A person is a human. A human is a person. A person is a human. A human is a person. A person is a human. A human is"
    ]
  },
  {
    "id": "FOLIO_train_938",
    "context": "A werewolf is a human that can turn into a wolf. A werewolf has been scratched or bitten by another werewolf. If someone has been scratched or bitten, they have been attacked.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A werewolf has scratched someone before.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nWerewolf(x) ::: x is a werewolf.\nHuman(x) ::: x is a human.\nScratched(x) ::: x has been scratched.\nBitten(x) ::: x has been bitten.\nAttacked(x) ::: x has been attacked.\nPremises:\nWerewolf(x) ∧ Human(x) ::: x is a werewolf that is a human.\nScratched(x) ∨ Bitten(x) ::: If someone has been scratched or bitten, they have been attacked.\nConclusion:\nScratched(x) ::: A werewolf has scratched someone before.\n------\nProblem:\nA werewolf is a human that can turn into a wolf. A werewolf has been scratched or bitten by another werewolf. If someone has been scratched or bitten, they have been attacked.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? A werewolf has scratched someone before.\n###\nProblem:\nA werewolf is a human that can turn into a wolf. A werewolf has been scratched or bitten by another werewolf. If someone has been scratched or bitten, they have been attacked.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? A werewolf has scratched someone before.\n###\nProblem:\nA werewolf is a human that can turn into a wolf. A werewolf has been scratched or bitten by another werewolf. If someone has been scratched or bitten, they have been attacked.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? A werewolf has scratched someone before.\n###\nProblem:\nA werewolf is a human that"
    ]
  },
  {
    "id": "FOLIO_train_939",
    "context": "UFC Fight Night was a mixed martial arts event and was held in Sweden. At UFC Fight Night, Sadollah was scheduled to fight Musoke. Sadollah fought Akiyama at UFC Fight Night. Musoke fought Yakovlev at UFC Fight Night. Jung was injured at UFC Fight Night. Injured people did not fight at UFC Fight Night.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jung fought Sadollah.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nUFCFightNight(x) ::: x is a UFC Fight Night.\nScheduled(x, y) ::: x is scheduled to fight y.\nFight(x, y) ::: x fights y.\nInjured(x) ::: x is injured.\nPremises:\nUFCFightNight(sweden) ∧ Scheduled(sadollah, musoke) ∧ Scheduled(sadollah, akiyama) ∧ Scheduled(musoke, yakovlev) ∧ Injured(jung) ::: UFC Fight Night was a mixed martial arts event and was held in Sweden. At UFC Fight Night, Sadollah was scheduled to fight Musoke. Sadollah fought Akiyama at UFC Fight Night. Musoke fought Yakovlev at UFC Fight Night. Jung was injured at UFC Fight Night. Injured people did not fight at UFC Fight Night.\nConclusion:\nFight(jung, sadollah) ::: Jung fought Sadollah.\n------\nProblem:\nThe following is a list of the top 100 most popular baby names in the United States in 2013.\n1. Jacob\n2. Mason\n3. William\n4. Michael\n5. Jayden\n6. Ethan\n7. Alexander\n8. Noah\n9. Daniel\n10. Aiden\n11. Benjamin\n12. Anthony\n13. David\n14. James\n15. Christopher\n16. Matthew\n17. John\n18. Joseph\n19. Andrew\n20. Christian\n21. Elijah\n22. Samuel\n23. Logan\n24. Joshua\n25. Nicholas\n26. Lucas\n27. Ryan\n28. Caleb\n29. Joshua\n30. Owen\n31. Aaron\n32. Jax"
    ]
  },
  {
    "id": "FOLIO_train_940",
    "context": "UFC Fight Night was a mixed martial arts event and was held in Sweden. At UFC Fight Night, Sadollah was scheduled to fight Musoke. Sadollah fought Akiyama at UFC Fight Night. Musoke fought Yakovlev at UFC Fight Night. Jung was injured at UFC Fight Night. Injured people did not fight at UFC Fight Night.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jung did not fight at UFC Fight Night.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nUFCFightNight(x) ::: x is a UFC Fight Night.\nScheduled(x, y) ::: x is scheduled to fight y.\nFight(x, y) ::: x fights y.\nInjured(x) ::: x is injured.\nPremises:\nUFCFightNight(sweden) ∧ Scheduled(sadollah, musoke) ∧ Scheduled(sadollah, akiyama) ∧ Scheduled(musoke, yakovlev) ∧ Injured(jung) ::: UFC Fight Night was a mixed martial arts event and was held in Sweden. At UFC Fight Night, Sadollah was scheduled to fight Musoke. Sadollah fought Akiyama at UFC Fight Night. Musoke fought Yakovlev at UFC Fight Night. Jung was injured at UFC Fight Night.\nConclusion:\nInjured(jung) ∧ ¬Fight(jung, y) ::: Jung was injured at UFC Fight Night. Injured people did not fight at UFC Fight Night.\n------"
    ]
  },
  {
    "id": "FOLIO_train_941",
    "context": "UFC Fight Night was a mixed martial arts event and was held in Sweden. At UFC Fight Night, Sadollah was scheduled to fight Musoke. Sadollah fought Akiyama at UFC Fight Night. Musoke fought Yakovlev at UFC Fight Night. Jung was injured at UFC Fight Night. Injured people did not fight at UFC Fight Night.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Sadollah fought Musoke.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nUFC(x) ::: x is a UFC event.\nFight(x, y) ::: x is a fight between y and z.\nScheduled(x, y) ::: x is scheduled to fight y.\nInjured(x) ::: x is injured.\nPremises:\nUFC(fightNight) ∧ Fight(fightNight, sadollahMusoke) ∧ Fight(fightNight, sadollahAkiyama) ∧ Fight(fightNight, musokeYakovlev) ∧ Injured(jung) ::: UFC Fight Night was a mixed martial arts event and was held in Sweden. At UFC Fight Night, Sadollah was scheduled to fight Musoke. Sadollah fought Akiyama at UFC Fight Night. Musoke fought Yakovlev at UFC Fight Night. Jung was injured at UFC Fight Night.\nScheduled(sadollahMusoke) ∧ Scheduled(sadollahAkiyama) ∧ Scheduled(musokeYakovlev) ::: At UFC Fight Night, Sadol"
    ]
  },
  {
    "id": "FOLIO_train_942",
    "context": "UFC Fight Night was a mixed martial arts event and was held in Sweden. At UFC Fight Night, Sadollah was scheduled to fight Musoke. Sadollah fought Akiyama at UFC Fight Night. Musoke fought Yakovlev at UFC Fight Night. Jung was injured at UFC Fight Night. Injured people did not fight at UFC Fight Night.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Nelson fought Story at UFC Fight Night.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nUFC(x) ::: x is a UFC event.\nFight(x, y) ::: x fights y.\nScheduled(x, y) ::: x is scheduled to fight y.\nInjured(x) ::: x is injured.\nPremises:\nUFC(fightNight) ∧ Sweden(fightNight) ::: UFC Fight Night was a mixed martial arts event and was held in Sweden.\nScheduled(sadollah, musoke) ::: Sadollah was scheduled to fight Musoke.\nScheduled(sadollah, akiyama) ::: Sadollah was scheduled to fight Akiyama.\nScheduled(musoke, yakovlev) ::: Musoke was scheduled to fight Yakovlev.\nInjured(jung) ::: Jung was injured.\nConclusion:\nScheduled(nelson, story) ::: Nelson was scheduled to fight Story at UFC Fight Night.\n------\nProblem:\nThe following is a list of the top 100 most popular baby names in the United States in 2013"
    ]
  },
  {
    "id": "FOLIO_train_943",
    "context": "All drinks are edible. All juices are drinks. All orange juice is a juice. A juice is either an orange juice or an apple juice. All apple juice is sweet. If coke is apple juice, then coke is a drink. If coke is not apple juice, then coke is not edible.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Coke is orange juice.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Orange juice is a drink.\n###\nPredicates:\nDrink(x) ::: x is a drink.\nJuice(x) ::: x is a juice.\nOrangeJuice(x) ::: x is an orange juice.\nAppleJuice(x) ::: x is an apple juice.\nSweet(x) ::: x is sweet.\nPremises:\n∀x (Drink(x) → Edible(x)) ::: All drinks are edible.\n∀x (Juice(x) → Drink(x)) ::: All juices are drinks.\nOrangeJuice(orangeJuice) ::: orangeJuice is an orange juice.\nAppleJuice(appleJuice) ::: appleJuice is an apple juice.\n∀x (Juice(x) → Juice(x) ⊕ OrangeJuice(x)) ::: A juice is either an orange juice or an apple juice.\n∀x (AppleJuice(x) → Sweet(x)) :"
    ]
  },
  {
    "id": "FOLIO_train_944",
    "context": "All drinks are edible. All juices are drinks. All orange juice is a juice. A juice is either an orange juice or an apple juice. All apple juice is sweet. If coke is apple juice, then coke is a drink. If coke is not apple juice, then coke is not edible.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Coke is edible and sweet.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Orange juice is a drink.\n###\nPredicates:\nDrink(x) ::: x is a drink.\nJuice(x) ::: x is a juice.\nOrangeJuice(x) ::: x is an orange juice.\nAppleJuice(x) ::: x is an apple juice.\nSweet(x) ::: x is sweet.\nPremises:\n∀x (Drink(x) → Edible(x)) ::: All drinks are edible.\n∀x (Juice(x) → Drink(x)) ::: All juices are drinks.\nOrangeJuice(orangeJuice) ::: orange juice is an orange juice.\nAppleJuice(appleJuice) ::: apple juice is an apple juice.\nSweet(appleJuice) ::: apple juice is sweet.\nConclusion:\nEdible(appleJuice) ∧ Sweet(appleJuice) ::: Coke is edible and sweet.\n------\nProblem:\nAll people who regularly drink coffee are"
    ]
  },
  {
    "id": "FOLIO_train_945",
    "context": "All drinks are edible. All juices are drinks. All orange juice is a juice. A juice is either an orange juice or an apple juice. All apple juice is sweet. If coke is apple juice, then coke is a drink. If coke is not apple juice, then coke is not edible.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Coke is not edible and sweet.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Orange(x) ::: x is an orange.\nApple(x) ::: x is an apple.\nJuice(x) ::: x is a juice.\nDrink(x) ::: x is a drink.\nOrangeJuice(x) ::: x is an orange juice.\nAppleJuice(x) ::: x is an apple juice.\nSweet(x) ::: x is sweet.\nPremises:\nAllDrinks(x) ::: x is a drink.\nAllJuices(x) ::: x is a juice.\nAllOrangeJuice(x) ::: x is an orange juice.\nAllAppleJuice(x) ::: x is an apple juice.\nAllDrinks(coke) ∧ AllJuices(coke) ∧ AllOrangeJuice(coke) ∧ AllAppleJuice(coke) ::: Coke is a drink and a juice.\nAllOrangeJuice(x) ⊕ AllAppleJuice(x) ::: A juice is either"
    ]
  },
  {
    "id": "FOLIO_train_946",
    "context": "Federico Garcia Lorca was a talented Spanish poet and he supported the Popular Front. The Spanish Nationalists opposed anyone who supported the Popular Front Talented poets are popular. Spanish Nationalists killed anyone who they opposed and were popular. Daniel supported the Popular Front but was not popular.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Daniel was not killed by the Spanish Nationalists.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nSpanish(x) ::: x is a Spanish person.\nTalented(x) ::: x is a talented person.\nPoet(x) ::: x is a poet.\nSupport(x, y) ::: x supports y.\nPopular(x) ::: x is popular.\nKill(x, y) ::: x kills y.\nOppose(x, y) ::: x opposes y.\nPremises:\nSpanish(federico) ∧ Poet(federico) ∧ Support(federico, popularFront) ::: Federico Garcia Lorca was a talented Spanish poet and he supported the Popular Front.\nSpanish(nationalists) ∧ Oppose(nationalists, popularFront) ∧ Kill(nationalists, x) ::: The Spanish Nationalists opposed anyone who supported the Popular Front Talented poets are popular. Spanish Nationalists killed anyone who they opposed and were popular.\nSpanish(daniel) ∧ Support(daniel, popularFront) ::: Daniel supported the Popular Front but was not popular.\nConclusion:"
    ]
  },
  {
    "id": "FOLIO_train_947",
    "context": "Federico Garcia Lorca was a talented Spanish poet and he supported the Popular Front. The Spanish Nationalists opposed anyone who supported the Popular Front Talented poets are popular. Spanish Nationalists killed anyone who they opposed and were popular. Daniel supported the Popular Front but was not popular.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Lorca was killed by the Spanish Nationalists.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nSpanish(x) ::: x is a Spanish person.\nTalented(x) ::: x is a talented person.\nPoet(x) ::: x is a poet.\nSupport(x, y) ::: x supports y.\nPopular(x) ::: x is popular.\nKill(x, y) ::: x kills y.\nOppose(x, y) ::: x opposes y.\nPremises:\nSpanish(lorca) ∧ Talented(lorca) ∧ Poet(lorca) ∧ Support(lorca, popularFront) ::: Federico Garcia Lorca was a talented Spanish poet and he supported the Popular Front.\nSpanish(nationalists) ∧ Oppose(nationalists, popularFront) ∧ Popular(nationalists) ::: The Spanish Nationalists opposed anyone who supported the Popular Front Talented poets are popular.\nSupport(daniel, popularFront) ∧ ¬Popular(daniel) ::: Daniel supported the Popular Front but was not popular.\nConclusion:\nKill(nationalists,"
    ]
  },
  {
    "id": "FOLIO_train_948",
    "context": "People either drink kombucha every day or drink Coca-Cola or Pepsi products every day. If people drink Coca-Cola or Pepsi products every day, then they grew up with extremely busy parents who did not have time to pack them lunch. If people drink Coca-Cola or Pepsi products every day, then they have to visit the dentist frequently. If people grew up with extremely busy parents who did not have time to pack them lunch, then they have erratic and diverse eating habits. If people have erratic and diverse eating habits, then they do not have consistent everyday routines and like sticking to a solid schedule. Franny either both grew up with extremely busy parents who did not have time to pack her lunch and has consistent everyday routines and like sticking to a solid schedule, or she neither grew up with extremely busy parents who did not have time to pack her lunch nor has consistent everyday routines and likes sticking to a schedule.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Franny has to visit the dentist frequently.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nDrinks(x, y) ::: x drinks y every day.\nGrewUp(x, y) ::: x grew up with y.\nPackLunch(x, y) ::: x packed y lunch.\nExtremelyBusy(x) ::: x is extremely busy.\nDentist(x) ::: x has to visit the dentist.\nEatingHabit(x) ::: x has erratic and diverse eating habits.\nRoutine(x) ::: x has consistent everyday routines and likes sticking to a solid schedule.\nPremises:\n∀x (Drinks(x, kombucha) ⊕ Drinks(x, cocaCola) ⊕ Drinks(x, pepsi)) ::: People either drink kombucha every day or drink Coca-Cola or Pepsi products every day.\n∀x (Drinks(x, cocaCola) ∧ GrewUp(x, extremelyBusyParents)) → PackLunch(x, extremelyBusyParents) ::: If people drink Coca-Cola or Pepsi"
    ]
  },
  {
    "id": "FOLIO_train_949",
    "context": "People either drink kombucha every day or drink Coca-Cola or Pepsi products every day. If people drink Coca-Cola or Pepsi products every day, then they grew up with extremely busy parents who did not have time to pack them lunch. If people drink Coca-Cola or Pepsi products every day, then they have to visit the dentist frequently. If people grew up with extremely busy parents who did not have time to pack them lunch, then they have erratic and diverse eating habits. If people have erratic and diverse eating habits, then they do not have consistent everyday routines and like sticking to a solid schedule. Franny either both grew up with extremely busy parents who did not have time to pack her lunch and has consistent everyday routines and like sticking to a solid schedule, or she neither grew up with extremely busy parents who did not have time to pack her lunch nor has consistent everyday routines and likes sticking to a schedule.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Franny either both grew up with extremely busy parents who did not have time to pack her lunch and drink kombucha every day or neither grew up with extremely busy parents who did not have time to pack her lunch nor drink kombucha every day, then Franny neither visits the dentist frequently nor drinks Coca Cola or Pepsi products every day.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDrinkKombucha(x) ::: x drinks kombucha every day.\nDrinkCocaCola(x) ::: x drinks Coca-Cola products every day.\nDrinkPepsi(x) ::: x drinks Pepsi products every day.\nGrewUpWithExtremelyBusyParents(x) ::: x grew up with extremely busy parents who did not have time to pack her lunch.\nHaveErraticAndDiverseEatingHabits(x) ::: x has erratic and diverse eating habits.\nHaveConsistentEverydayRoutines(x) ::: x has consistent everyday routines and likes sticking to a solid schedule.\nPremises:\n∀x (DrinkKombucha(x) ⊕ DrinkCocaCola(x) ⊕ DrinkPepsi(x)) ::: People either drink kombucha every day or drink Coca-Cola or Pepsi products every day.\n∀x (DrinkCocaCola(x) ⊕ VisitDentist(x)) ::: If people drink Coca-Cola or"
    ]
  },
  {
    "id": "FOLIO_train_950",
    "context": "People either drink kombucha every day or drink Coca-Cola or Pepsi products every day. If people drink Coca-Cola or Pepsi products every day, then they grew up with extremely busy parents who did not have time to pack them lunch. If people drink Coca-Cola or Pepsi products every day, then they have to visit the dentist frequently. If people grew up with extremely busy parents who did not have time to pack them lunch, then they have erratic and diverse eating habits. If people have erratic and diverse eating habits, then they do not have consistent everyday routines and like sticking to a solid schedule. Franny either both grew up with extremely busy parents who did not have time to pack her lunch and has consistent everyday routines and like sticking to a solid schedule, or she neither grew up with extremely busy parents who did not have time to pack her lunch nor has consistent everyday routines and likes sticking to a schedule.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Franny either visits the dentist frequently or drinks kombucha every day, then Franny both visits the dentist frequently and drinks Coca-Cola or Pepsi products every day.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDrinks(x, y) ::: x drinks y every day.\nGrewUp(x, y) ::: x grew up with y.\nPackLunch(x, y) ::: x packed y lunch.\nVisitDentist(x, y) ::: x visits the dentist in year y.\nErratic(x) ::: x has erratic and diverse eating habits.\nConsistent(x) ::: x has consistent everyday routines and likes sticking to a solid schedule.\nPremises:\n∀x (Drinks(x, kombucha) ⊕ Drinks(x, cocaCola) ⊕ Drinks(x, pepsi)) ::: People either drink kombucha every day or drink Coca-Cola or Pepsi products every day.\n∀x (Drinks(x, cocaCola) ⊕ VisitDentist(x, year)) ::: If people drink Coca-Cola or Pepsi products every day, then they have to visit the dentist frequently.\n∀x (GrewUp(x, extremelyBusyParents) ⊕ PackLunch(x, x)) ::: If people grew up with extremely busy parents who did not have time to pack them lunch, then they have erratic and diverse eating habits.\n∀x (Erratic(x) ⊕ Consistent(x)) ::: If people have erratic and diverse eating habits, then they do not have consistent everyday routines and like sticking to a solid schedule.\n∃x (GrewUp(x, extremelyBusyParents) ⊕ Consistent(x)) ::: Franny either both grew up with extremely busy parents who did not have time to pack her lunch and has consistent everyday routines and likes sticking to a solid schedule, or she neither grew up with extremely busy parents who did not have time to pack her lunch nor has consistent everyday routines and likes sticking to a schedule.\nConclusion:\nVisitDentist(franny, year) ⊕ Drinks(franny, cocaCola) ::: If Franny either visits the dentist frequently or drinks kombucha every day, then Franny both visits the dentist frequently and drinks Coca-Cola or Pepsi products every day.\n------"
    ]
  },
  {
    "id": "FOLIO_train_951",
    "context": "If a customer subscribes to AMC A List, then he/she can watch 3 movies every week without any additional fees. Some customers go to cinemas every week. Customers who prefer TV series will not watch TV series in cinemas. James watches TV series in cinemas. James subscribes to AMC A List. Peter prefers TV series.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James is not able to watch 3 movies every week without any additional fees.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nCustomer(x) ::: x is a customer.\nWatches(x, y) ::: x watches y.\nSubscribes(x, y) ::: x subscribes to y.\nAList(x) ::: x is AMC A List.\nCinema(x) ::: x is a cinema.\nPrefers(x, y) ::: x prefers y.\nPremises:\nCustomer(james) ∧ Subscribes(james, AList) ∧ Watches(james, movie1) ∧ Watches(james, movie2) ∧ Watches(james, movie3) ::: James is a customer who subscribes to AMC A List and watches 3 movies every week.\n∀x (Customer(x) → Watches(x, cinema)) ::: If a customer subscribes to AMC A List, then he/she can watch 3 movies every week without any additional fees.\n∃x (Customer(x) ∧ Prefers(x, TVseries)) ∧ ¬Watches(x, TVseries) ::: Some customers go to cinemas every week.\nPrefers(james, TVseries) ::: James prefers TV series.\nSubscribes(james, AList) ::: James subscribes to AMC A List.\nConclusion:\n¬Watches(james, movie1) ∨ ¬Watches(james, movie2) ∨ ¬Watches(james, movie3) ::: James is not able to watch 3 movies every week without any additional fees.\n------\nProblem:\nAlice is a student. Alice is a teacher. Alice is a doctor. Alice is a nurse. Alice is a lawyer. Alice is a judge. Alice is a police officer. Alice is a firefighter. Alice is a soldier. Alice is a pilot. Alice is a sailor. Alice is a chef. Alice is a waiter. Alice is a bartender. Alice is a cashier. Alice is a receptionist. Alice is a secretary. Alice is a manager. Alice is a CEO. Alice is a janitor. Alice is a maid. Alice is a housekeeper. Alice is a gardener. Alice is a plumber. Alice is a carpenter. Alice is a mechanic."
    ]
  },
  {
    "id": "FOLIO_train_952",
    "context": "If a customer subscribes to AMC A List, then he/she can watch 3 movies every week without any additional fees. Some customers go to cinemas every week. Customers who prefer TV series will not watch TV series in cinemas. James watches TV series in cinemas. James subscribes to AMC A List. Peter prefers TV series.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James goes to cinemas every week.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nCustomer(x) ::: x is a customer.\nWatches(x, y) ::: x watches y.\nSubscribes(x, y) ::: x subscribes to y.\nGoes(x, y) ::: x goes to y.\nPrefers(x, y) ::: x prefers y.\nPremises:\n∀x (Customer(x) → ∃y (Watches(x, y) ∧ Subscribes(x, y))) ::: If a customer subscribes to AMC A List, then he/she can watch 3 movies every week without any additional fees.\n∃x (Customer(x) ∧ Goes(x, cinemas)) ::: Some customers go to cinemas every week.\n∀x (Customer(x) → ¬Watches(x, TVSeriesInCinemas)) ::: Customers who prefer TV series will not watch TV series in cinemas.\nCustomer(james) ∧ Prefers(james, TVSeries) ::: James prefers TV series.\nSubscribes(james, AMCAList) ::: James subscribes to AMC A List.\nCustomer(peter) ∧ Prefers(peter, TVSeries) ::: Peter prefers TV series.\nConclusion:\nGoes(james, cinemas) ::: James goes to cinemas every week.\n------\nProblem:\nAlice is a student. Alice is a teacher. Alice is a doctor. Alice is a nurse. Alice is a lawyer. Alice is a judge. Alice is a police officer. Alice is a firefighter. Alice is a soldier. Alice is a sailor. Alice is a pilot. Alice is a chef. Alice is a waiter. Alice is a bartender. Alice is a cashier. Alice is a receptionist. Alice is a secretary. Alice is a manager. Alice is a salesperson. Alice is a writer. Alice is a journalist. Alice is a photographer. Alice is a musician. Alice is a singer. Alice is an actor. Alice is a dancer. Alice is a comedian. Alice is a painter. Alice is a sculptor. Alice is a poet. Alice is a novelist. Alice is a playwright. Alice is a screenwriter. Alice is a director. Alice is a producer. Alice is a ch"
    ]
  },
  {
    "id": "FOLIO_train_953",
    "context": "If a customer subscribes to AMC A List, then he/she can watch 3 movies every week without any additional fees. Some customers go to cinemas every week. Customers who prefer TV series will not watch TV series in cinemas. James watches TV series in cinemas. James subscribes to AMC A List. Peter prefers TV series.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Peter will not watch TV series in cinemas.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nCustomer(x) ::: x is a customer.\nWatches(x, y) ::: x watches y.\nSubscribes(x, y) ::: x subscribes to y.\nPrefers(x, y) ::: x prefers y.\nPremises:\n∀x (Customer(x) → ∃y (Subscribes(x, y) → Watches(x, y))) ::: If a customer subscribes to AMC A List, then he/she can watch 3 movies every week without any additional fees.\n∃x (Customer(x) ∧ Watches(x, cinemas)) ::: Some customers go to cinemas every week.\n∀x (Customer(x) → ¬Watches(x, cinemas)) → ¬(Customer(x) ∧ Watches(x, cinemas)) ::: Customers who prefer TV series will not watch TV series in cinemas.\nCustomer(james) ∧ Watches(james, cinemas) ∧ Subscribes(james, AMCAList) ::: James watches TV series in cinemas. James subscribes to AMC A List.\nCustomer(peter) ∧ Prefers(peter, TVseries) ::: Peter prefers TV series.\nConclusion:\n¬Watches(peter, cinemas) ::: Peter will not watch TV series in cinemas.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\n###\nPredicates"
    ]
  },
  {
    "id": "FOLIO_train_954",
    "context": "Bulbophyllum attenuatum is in the genus bulbophyllum. All bulbophyllum are orchids.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Bulbophyllum attenuatum is not an orchid.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nBulbophyllum(x) ::: x is a bulbophyllum.\nOrchid(x) ::: x is an orchid.\nPremises:\nBulbophyllum(attenuatum) ∧ Bulbophyllum(attenuatum) ∈ Genus(bulbophyllum) ::: Bulbophyllum attenuatum is in the genus bulbophyllum.\n∀x (Bulbophyllum(x) → Orchid(x)) ::: All bulbophyllum are orchids.\nConclusion:\n¬Orchid(attenuatum) ::: Bulbophyllum attenuatum is not an orchid.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\n###\nPredicates:\nDependent(x) ::: x is a person dependent on caffeine.\nDrinks(x) ::: x regularly drinks coffee.\nJokes(x) ::: x jokes about being addicted to caffeine.\nUnaware(x) ::: x is unaware that caffeine is a drug.\nStudent(x) ::: x is a student.\nPremises:\n∀x (Drinks(x) → Dependent(x)) ::: All people who regularly drink coffee are dependent on caffeine.\n∀x (Drinks(x) ⊕ Jokes(x)) ::: People either regularly drink coffee or joke"
    ]
  },
  {
    "id": "FOLIO_train_955",
    "context": "There are eight federal districts of Russia: Central, Northwestern, Southern, North Caucasian, Volga, Ural, Siberian and Far Eastern. The Central federal district has the largest population among all federal districts in Russia. Moscow is the administrative center of the Central federal district. Yekaterinburg is the administrative center of the Ural federal district. Vladivostok is the administrative center of the Far Eastern federal district. The Far Eastern federal district has the largest area among all federal districts in Russia. Some federal districts of Russia were established in 2000.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Vladivostok is the administrative center of the federal district with the largest area.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nFederalDistrict(x) ::: x is a federal district of Russia.\nCentral(x) ::: x is the Central federal district of Russia.\nNorthwestern(x) ::: x is the Northwestern federal district of Russia.\nSouthern(x) ::: x is the Southern federal district of Russia.\nNorthCaucasian(x) ::: x is the North Caucasian federal district of Russia.\nVolga(x) ::: x is the Volga federal district of Russia.\nUral(x) ::: x is the Ural federal district of Russia.\nSiberian(x) ::: x is the Siberian federal district of Russia.\nFarEastern(x) ::: x is the Far Eastern federal district of Russia.\nAdministrativeCenter(x, y) ::: x is the administrative center of y.\nPopulation(x) ::: x is the population of y.\nArea(x) ::: x is the area of y.\nEstablished(x, y) ::: x was established in year y.\nPremises:\nFederalDistrict(central) ∧ Central(central) ∧ AdministrativeCenter(central, moscow) ∧ Population(central) > Population(northwestern) ∧ Population(central) > Population(southern) ∧ Population(central) > Population(northCaucasian) ∧ Population(central) > Population(volga) ∧ Population(central) > Population(ural) ∧ Population(central) > Population(siberian) ∧ Population(central) > Population(farEastern) ::: There are eight federal districts of Russia: Central, Northwestern, Southern, North Caucasian, Volga, Ural, Siberian and Far Eastern. The Central federal district has the largest population among all federal districts in Russia. Moscow is the administrative center of the Central federal district.\nFederalDistrict(urals) ∧ Ural(urals) ∧ AdministrativeCenter(urals, yekaterinburg) ∧ Area(urals) > Area(farEastern) ∧ Area(urals) > Area(southern) ∧ Area(urals) > Area(northCaucasian) ∧ Area(urals) > Area(volga)"
    ]
  },
  {
    "id": "FOLIO_train_956",
    "context": "There are eight federal districts of Russia: Central, Northwestern, Southern, North Caucasian, Volga, Ural, Siberian and Far Eastern. The Central federal district has the largest population among all federal districts in Russia. Moscow is the administrative center of the Central federal district. Yekaterinburg is the administrative center of the Ural federal district. Vladivostok is the administrative center of the Far Eastern federal district. The Far Eastern federal district has the largest area among all federal districts in Russia. Some federal districts of Russia were established in 2000.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Moscow is the administrative center of the federal district with the largest population.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nFederalDistrict(x) ::: x is a federal district of Russia.\nCentral(x) ::: x is the Central federal district of Russia.\nNorthwestern(x) ::: x is the Northwestern federal district of Russia.\nSouthern(x) ::: x is the Southern federal district of Russia.\nNorthCaucasian(x) ::: x is the North Caucasian federal district of Russia.\nVolga(x) ::: x is the Volga federal district of Russia.\nUral(x) ::: x is the Ural federal district of Russia.\nSiberian(x) ::: x is the Siberian federal district of Russia.\nFarEastern(x) ::: x is the Far Eastern federal district of Russia.\nAdministrativeCenter(x, y) ::: x is the administrative center of y.\nPopulation(x) ::: x is the population of y.\nArea(x) ::: x is the area of y.\nEstablished(x, y) ::: x was established in year y.\nPremises:\nFederalDistrict(central) ∧ Central(central) ∧ AdministrativeCenter(central, moscow) ∧ Population(central) > Population(northwestern) ∧ Population(central) > Population(southern) ∧ Population(central) > Population(northCaucasian) ∧ Population(central) > Population(volga) ∧ Population(central) > Population(ural) ∧ Population(central) > Population(siberian) ∧ Population(central) > Population(farEastern) ::: There are eight federal districts of Russia: Central, Northwestern, Southern, North Caucasian, Volga, Ural, Siberian and Far Eastern. The Central federal district has the largest population among all federal districts in Russia.\n∃x (FederalDistrict(x) ∧ AdministrativeCenter(x, y) ∧ Population(x) > Population(z)) ::: Some federal districts of Russia were established in 2000.\n∃x (FederalDistrict(x) ∧ AdministrativeCenter(x, y) ∧ Area(x) > Area(z)) ::: The Far Eastern federal district has the largest area among all federal districts in Russia.\n∃"
    ]
  },
  {
    "id": "FOLIO_train_957",
    "context": "There are eight federal districts of Russia: Central, Northwestern, Southern, North Caucasian, Volga, Ural, Siberian and Far Eastern. The Central federal district has the largest population among all federal districts in Russia. Moscow is the administrative center of the Central federal district. Yekaterinburg is the administrative center of the Ural federal district. Vladivostok is the administrative center of the Far Eastern federal district. The Far Eastern federal district has the largest area among all federal districts in Russia. Some federal districts of Russia were established in 2000.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Northwestern federal district was established in 2000.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nFederalDistrict(x) ::: x is a federal district of Russia.\nCentral(x) ::: x is the Central federal district of Russia.\nNorthwestern(x) ::: x is the Northwestern federal district of Russia.\nSouthern(x) ::: x is the Southern federal district of Russia.\nNorthCaucasian(x) ::: x is the North Caucasian federal district of Russia.\nVolga(x) ::: x is the Volga federal district of Russia.\nUral(x) ::: x is the Ural federal district of Russia.\nSiberian(x) ::: x is the Siberian federal district of Russia.\nFarEastern(x) ::: x is the Far Eastern federal district of Russia.\nEstablished(x, y) ::: x was established in year y.\nAdministrativeCenter(x, y) ::: x is the administrative center of y.\nPremises:\nFederalDistrict(central) ∧ Central(central) ∧ AdministrativeCenter(central, moscow) ∧ Established(central, year2000) ::: There is a federal district of Russia called the Central federal district. The Central federal district has the largest population among all federal districts in Russia. Moscow is the administrative center of the Central federal district. The Central federal district was established in 2000.\nFederalDistrict(northwestern) ∧ Northwestern(northwestern) ∧ AdministrativeCenter(northwestern, st_petersburg) ::: There is a federal district of Russia called the Northwestern federal district.\nFederalDistrict(southern) ∧ Southern(southern) ∧ AdministrativeCenter(southern, krasnodar) ::: There is a federal district of Russia called the Southern federal district.\nFederalDistrict(north_caucasian) ∧ NorthCaucasian(north_caucasian) ∧ AdministrativeCenter(north_caucasian, grozny) ::: There is a federal district of Russia called the North Caucasian federal district.\nFederalDistrict(volga) ∧ Volga(volga) ∧ AdministrativeCenter(volga, nizhny_novgorod"
    ]
  },
  {
    "id": "FOLIO_train_958",
    "context": "All cancers are malignant tumors. No malignant tumor can be treated at home. All colorectal cancer is cancer. Having a cold can be treated at home. Breast cancer is neither having a cold nor a malignant tumor (exclusive).",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Breast cancer can be treated at home.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nCancer(x) ::: x is a cancer.\nMalignantTumor(x) ::: x is a malignant tumor.\nTreatableAtHome(x) ::: x can be treated at home.\nColorectalCancer(x) ::: x is colorectal cancer.\nCold(x) ::: x is a cold.\nPremises:\n∀x (Cancer(x) → MalignantTumor(x)) ::: All cancers are malignant tumors.\n∀x (MalignantTumor(x) → ¬TreatableAtHome(x)) ::: No malignant tumor can be treated at home.\n∀x (ColorectalCancer(x) → Cancer(x)) ::: All colorectal cancer is cancer.\n∃x (Cold(x) ∧ TreatableAtHome(x)) ::: Having a cold can be treated at home.\nBreastCancer(x) ⊕ ColorectalCancer(x) ::: Breast cancer is neither having a cold nor a malignant tumor (exclusive).\nConclusion:\nTreatableAtHome(breastCancer) ::: Breast cancer can be treated at home.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\n###\nPredicates:\nDependent(x) ::: x is a person dependent on caffeine.\nDrinks(x"
    ]
  },
  {
    "id": "FOLIO_train_959",
    "context": "All cancers are malignant tumors. No malignant tumor can be treated at home. All colorectal cancer is cancer. Having a cold can be treated at home. Breast cancer is neither having a cold nor a malignant tumor (exclusive).",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Breast cancer is colorectal cancer.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nCancer(x) ::: x is a cancer.\nMalignantTumor(x) ::: x is a malignant tumor.\nTreatableAtHome(x) ::: x can be treated at home.\nColorectalCancer(x) ::: x is colorectal cancer.\nCold(x) ::: x is a cold.\nBreastCancer(x) ::: x is breast cancer.\nPremises:\n∀x (Cancer(x) → MalignantTumor(x)) ::: All cancers are malignant tumors.\n∀x (MalignantTumor(x) → ¬TreatableAtHome(x)) ::: No malignant tumor can be treated at home.\n∀x (ColorectalCancer(x) → Cancer(x)) ::: All colorectal cancer is cancer.\n∃x (Cold(x) ∧ TreatableAtHome(x)) ::: Having a cold can be treated at home.\nBreastCancer(x) ⊕ ColorectalCancer(x) ::: Breast cancer is neither having a cold nor a malignant tumor (exclusive).\nConclusion:\nColorectalCancer(breastCancer) ::: Breast cancer is colorectal cancer.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\n###\nPredicates:\nDependent(x) :"
    ]
  },
  {
    "id": "FOLIO_train_960",
    "context": "All cancers are malignant tumors. No malignant tumor can be treated at home. All colorectal cancer is cancer. Having a cold can be treated at home. Breast cancer is neither having a cold nor a malignant tumor (exclusive).",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Breast cancer is not colorectal cancer.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nCancer(x) ::: x is a cancer.\nMalignantTumor(x) ::: x is a malignant tumor.\nTreatableAtHome(x) ::: x can be treated at home.\nColorectalCancer(x) ::: x is colorectal cancer.\nCold(x) ::: x is a cold.\nBreastCancer(x) ::: x is breast cancer.\nPremises:\n∀x (Cancer(x) → MalignantTumor(x)) ::: All cancers are malignant tumors.\n∀x (MalignantTumor(x) → ¬TreatableAtHome(x)) ::: No malignant tumor can be treated at home.\n∀x (ColorectalCancer(x) → Cancer(x)) ::: All colorectal cancer is cancer.\n∃x (Cold(x) ∧ TreatableAtHome(x)) ::: Having a cold can be treated at home.\nBreastCancer(x) ⊕ ColorectalCancer(x) ::: Breast cancer is neither having a cold nor a malignant tumor (exclusive).\nConclusion:\n¬ColorectalCancer(breastCancer) ::: Breast cancer is not colorectal cancer.\n------"
    ]
  },
  {
    "id": "FOLIO_train_961",
    "context": "All cancers are malignant tumors. No malignant tumor can be treated at home. All colorectal cancer is cancer. Having a cold can be treated at home. Breast cancer is neither having a cold nor a malignant tumor (exclusive).",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Breast cancer is colorectal cancer or a malignant tumor.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nCancer(x) ::: x is a cancer.\nMalignantTumor(x) ::: x is a malignant tumor.\nTreatableAtHome(x) ::: x can be treated at home.\nColorectalCancer(x) ::: x is colorectal cancer.\nCold(x) ::: x is a cold.\nBreastCancer(x) ::: x is breast cancer.\nPremises:\n∀x (Cancer(x) → MalignantTumor(x)) ::: All cancers are malignant tumors.\n∀x (MalignantTumor(x) → ¬TreatableAtHome(x)) ::: No malignant tumor can be treated at home.\n∀x (ColorectalCancer(x) → Cancer(x)) ::: All colorectal cancer is cancer.\n∃x (Cold(x) ∧ TreatableAtHome(x)) ::: Having a cold can be treated at home.\nBreastCancer(x) ⊕ ColorectalCancer(x) ⊕ MalignantTumor(x) ::: Breast cancer is neither having a cold nor a malignant tumor (exclusive).\nConclusion:\nBreastCancer(x) ⊕ MalignantTumor(x"
    ]
  },
  {
    "id": "FOLIO_train_962",
    "context": "All cancers are malignant tumors. No malignant tumor can be treated at home. All colorectal cancer is cancer. Having a cold can be treated at home. Breast cancer is neither having a cold nor a malignant tumor (exclusive).",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Breast cancer is colorectal cancer and a cancer.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nCancer(x) ::: x is a cancer.\nMalignantTumor(x) ::: x is a malignant tumor.\nTreatableAtHome(x) ::: x can be treated at home.\nColorectalCancer(x) ::: x is colorectal cancer.\nCold(x) ::: x is a cold.\nBreastCancer(x) ::: x is breast cancer.\nPremises:\n∀x (Cancer(x) → MalignantTumor(x)) ::: All cancers are malignant tumors.\n∀x (MalignantTumor(x) → ¬TreatableAtHome(x)) ::: No malignant tumor can be treated at home.\n∀x (ColorectalCancer(x) → Cancer(x)) ::: All colorectal cancer is cancer.\n∃x (Cold(x) ∧ TreatableAtHome(x)) ::: Having a cold can be treated at home.\nBreastCancer(x) ⊕ ColorectalCancer(x) ⊕ Cancer(x) ::: Breast cancer is neither having a cold nor a malignant tumor (exclusive).\nConclusion:\nBreastCancer(x) ∧ ColorectalCancer(x) ∧ Can"
    ]
  },
  {
    "id": "FOLIO_train_963",
    "context": "All cancers are malignant tumors. No malignant tumor can be treated at home. All colorectal cancer is cancer. Having a cold can be treated at home. Breast cancer is neither having a cold nor a malignant tumor (exclusive).",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If breast cancer is not colorectal cancer, then breast cancer is a malignant tumor.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nCancer(x) ::: x is a cancer.\nMalignantTumor(x) ::: x is a malignant tumor.\nTreatableAtHome(x) ::: x can be treated at home.\nColorectalCancer(x) ::: x is colorectal cancer.\nCold(x) ::: x is a cold.\nBreastCancer(x) ::: x is breast cancer.\nPremises:\n∀x (Cancer(x) → MalignantTumor(x)) ::: All cancers are malignant tumors.\n∀x (MalignantTumor(x) → ¬TreatableAtHome(x)) ::: No malignant tumor can be treated at home.\n∀x (ColorectalCancer(x) → Cancer(x)) ::: All colorectal cancer is cancer.\n∃x (Cold(x) ∧ TreatableAtHome(x)) ::: Having a cold can be treated at home.\nBreastCancer(x) ⊕ ColorectalCancer(x) ::: Breast cancer is neither having a cold nor a malignant tumor (exclusive).\nConclusion:\nMalignantTumor(x) → (BreastCancer(x) ⊕ ColorectalCancer(x"
    ]
  },
  {
    "id": "FOLIO_train_964",
    "context": "I should not worry about things outside of my control. Traffic is outside of my control.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? I should not worry about traffic.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nWorry(x, y) ::: x worries about y.\nControl(x, y) ::: x has control over y.\nTraffic(x) ::: x is traffic.\nPremises:\nWorry(me, traffic) ::: I worry about traffic.\nControl(me, traffic) ⊕ Control(me, outsideOfMyControl) ::: I should not worry about things outside of my control.\nTraffic(traffic) ::: Traffic is traffic.\nConclusion:\nWorry(me, traffic) ::: I should not worry about traffic.\n------\nProblem:\nThe following is a list of the top 10 most popular movies of 2015.\n1) Star Wars: The Force Awakens\n2) Jurassic World\n3) Furious 7\n4) Avengers: Age of Ultron\n5) Minions\n6) Inside Out\n7) Spectre\n8) The Martian\n9) The Hunger Games: Mockingjay - Part 2\n10) Mission: Impossible - Rogue Nation\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The top 10 most popular movies of 2015 are all action movies.\n###\nPredicates:\nAction(x) ::: x is an action movie."
    ]
  },
  {
    "id": "FOLIO_train_965",
    "context": "Roversi is an Italian surname. Alba Roversi uses Roversi as a surname. Paolo Roversi uses Roversi as a surname. Roberto Roversi uses Roversi as a surname. Paolo Roversi is a photographer. A photographer is a professional or an amateur.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Alba Roversi uses an Italian surname.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nItalian(x) ::: x is an Italian.\nSurname(x) ::: x is a surname.\nUses(x, y) ::: x uses y as a surname.\nProfessional(x) ::: x is a professional.\nAmateur(x) ::: x is an amateur.\nPhotographer(x) ::: x is a photographer.\nPremises:\nItalian(alba) ∧ Surname(alba, roversi) ::: Alba Roversi uses Roversi as a surname.\nItalian(paolo) ∧ Surname(paolo, roversi) ::: Paolo Roversi uses Roversi as a surname.\nItalian(roberto) ∧ Surname(roberto, roversi) ::: Roberto Roversi uses Roversi as a surname.\nPhotographer(paolo) ::: Paolo Roversi is a photographer.\n∀x (Photographer(x) → (Professional(x) ∨ Amateur(x))) ::: A photographer is a professional or an amateur.\nConclusion:\nItalian(alba) ::: Alba Roversi uses an Italian surname.\n------\nProblem:\nA person is a person who is a person. A person is a person who is a person who is a person. A person is a person"
    ]
  },
  {
    "id": "FOLIO_train_966",
    "context": "Roversi is an Italian surname. Alba Roversi uses Roversi as a surname. Paolo Roversi uses Roversi as a surname. Roberto Roversi uses Roversi as a surname. Paolo Roversi is a photographer. A photographer is a professional or an amateur.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There are no photographers using an Italian surname.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nItalian(x) ::: x is an Italian.\nSurname(x) ::: x is a surname.\nUses(x, y) ::: x uses y as a surname.\nProfessional(x) ::: x is a professional.\nAmateur(x) ::: x is an amateur.\nPhotographer(x) ::: x is a photographer.\nPremises:\nItalian(alba) ∧ Surname(alba, roversi) ∧ Uses(alba, roversi) ::: Alba Roversi uses Roversi as a surname.\nItalian(paolo) ∧ Surname(paolo, roversi) ∧ Uses(paolo, roversi) ::: Paolo Roversi uses Roversi as a surname.\nItalian(roberto) ∧ Surname(roberto, roversi) ∧ Uses(roberto, roversi) ::: Roberto Roversi uses Roversi as a surname.\nPhotographer(paolo) ∧ Professional(paolo) ::: Paolo Roversi is a photographer.\n∀x (Photographer(x) → (Professional(x) ∨ Amateur(x))) ::: A photographer is a professional or an amateur.\nConclusion:\n¬∃x (Photographer(x"
    ]
  },
  {
    "id": "FOLIO_train_967",
    "context": "Roversi is an Italian surname. Alba Roversi uses Roversi as a surname. Paolo Roversi uses Roversi as a surname. Roberto Roversi uses Roversi as a surname. Paolo Roversi is a photographer. A photographer is a professional or an amateur.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Paolo is an amateur photographer.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nItalian(x) ::: x is an Italian.\nSurname(x) ::: x is a surname.\nUses(x, y) ::: x uses y as a surname.\nProfessional(x) ::: x is a professional.\nAmateur(x) ::: x is an amateur.\nPhotographer(x) ::: x is a photographer.\nPremises:\nItalian(alba) ∧ Surname(alba, roversi) ∧ Uses(alba, roversi) ::: Alba Roversi uses Roversi as a surname.\nItalian(paolo) ∧ Surname(paolo, roversi) ∧ Uses(paolo, roversi) ::: Paolo Roversi uses Roversi as a surname.\nItalian(roberto) ∧ Surname(roberto, roversi) ∧ Uses(roberto, roversi) ::: Roberto Roversi uses Roversi as a surname.\nPhotographer(paolo) ∧ Amateur(paolo) ::: Paolo Roversi is a photographer.\nConclusion:\nAmateur(paolo) ::: Paolo is an amateur photographer.\n------\nProblem:\nA person is a student if and only if the person is a teacher. A person is a teacher if and only if the person"
    ]
  },
  {
    "id": "FOLIO_train_968",
    "context": "Zaha Hadid is a British-Iraqi architect, artist and designer. Zaha Hadid was born on 31 October 1950 in Baghdad, Iraq. Hadid was a visiting professor of Architectural Design at the Yale School of Architecture. Max is an aspiring architecture student, and he plans to apply to Yale School of Architecture.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Hadid became a UK citizen later in her life.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBritish(x) ::: x is a British person.\nIraqi(x) ::: x is an Iraqi person.\nArchitect(x) ::: x is an architect.\nArtist(x) ::: x is an artist.\nDesigner(x) ::: x is a designer.\nVisitingProfessor(x, y) ::: x is a visiting professor at y.\nAspiringStudent(x, y) ::: x is an aspiring student of y.\nPremises:\nBritish(zaha) ∧ Iraqi(zaha) ∧ Architect(zaha) ∧ Artist(zaha) ∧ Designer(zaha) ::: Zaha Hadid is a British-Iraqi architect, artist and designer.\nBorn(zaha, year1950) ∧ Baghdad(zaha) ::: Zaha Hadid was born on 31 October 1950 in Baghdad, Iraq.\nVisitingProfessor(zaha, yale) ::: Zaha Hadid was a visiting professor of Architectural Design at the Yale School of Architecture.\nAspiringStudent(max, yale) ::: Max is an aspiring architecture student, and he plans to apply to Yale School of Architecture.\nConclusion:\nBritish(zaha)"
    ]
  },
  {
    "id": "FOLIO_train_969",
    "context": "Zaha Hadid is a British-Iraqi architect, artist and designer. Zaha Hadid was born on 31 October 1950 in Baghdad, Iraq. Hadid was a visiting professor of Architectural Design at the Yale School of Architecture. Max is an aspiring architecture student, and he plans to apply to Yale School of Architecture.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Hadid did some work in interior design.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nBritish(x) ::: x is British.\nIraqi(x) ::: x is Iraqi.\nArchitect(x) ::: x is an architect.\nArtist(x) ::: x is an artist.\nDesigner(x) ::: x is a designer.\nVisitingProfessor(x, y) ::: x is a visiting professor at y.\nAspiringStudent(x, y) ::: x is an aspiring student of y.\nPremises:\nBritish(zaha) ∧ Iraqi(zaha) ∧ Architect(zaha) ∧ Artist(zaha) ∧ Designer(zaha) ::: Zaha Hadid is a British-Iraqi architect, artist and designer.\nVisitingProfessor(zaha, yale) ::: Zaha Hadid was a visiting professor of Architectural Design at the Yale School of Architecture.\nAspiringStudent(max, yale) ::: Max is an aspiring architecture student, and he plans to apply to Yale School of Architecture.\nConclusion:\nDesigner(zaha) ::: Hadid did some work in interior design.\n------\nProblem:\nThe following is a list of the top 100 most popular baby names in the United States in 2014.\n1. Noah\n2. Li"
    ]
  },
  {
    "id": "FOLIO_train_970",
    "context": "Zaha Hadid is a British-Iraqi architect, artist and designer. Zaha Hadid was born on 31 October 1950 in Baghdad, Iraq. Hadid was a visiting professor of Architectural Design at the Yale School of Architecture. Max is an aspiring architecture student, and he plans to apply to Yale School of Architecture.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Hadid was born in 1982.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nBorn(x, y) ::: x was born in year y.\nVisitingProfessor(x, y) ::: x is a visiting professor of y at y.\nAspiring(x) ::: x is an aspiring y.\nApply(x, y) ::: x applies to y.\nPremises:\nBorn(zaha, year1950) ::: Zaha Hadid was born on 31 October 1950 in Baghdad, Iraq.\nVisitingProfessor(zaha, yale) ::: Zaha Hadid was a visiting professor of Architectural Design at the Yale School of Architecture.\nAspiring(max) ::: Max is an aspiring architecture student.\nApply(max, yale) ::: Max plans to apply to Yale School of Architecture.\nConclusion:\nBorn(zaha, year1982) ::: Hadid was born in 1982.\n------"
    ]
  },
  {
    "id": "FOLIO_train_971",
    "context": "Zaha Hadid is a British-Iraqi architect, artist and designer. Zaha Hadid was born on 31 October 1950 in Baghdad, Iraq. Hadid was a visiting professor of Architectural Design at the Yale School of Architecture. Max is an aspiring architecture student, and he plans to apply to Yale School of Architecture.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Max admires Zaha Hadid.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nBritish(x) ::: x is British.\nIraqi(x) ::: x is Iraqi.\nArchitect(x) ::: x is an architect.\nArtist(x) ::: x is an artist.\nDesigner(x) ::: x is a designer.\nVisitingProfessor(x, y) ::: x is a visiting professor at y.\nAspiringStudent(x, y) ::: x is an aspiring student of y.\nPremises:\nBritish(zaha) ∧ Iraqi(zaha) ∧ Architect(zaha) ∧ Artist(zaha) ∧ Designer(zaha) ::: Zaha Hadid is a British-Iraqi architect, artist and designer.\nBritish(max) ∧ AspiringStudent(max, yale) ::: Max is a British aspiring architecture student, and he plans to apply to Yale School of Architecture.\nVisitingProfessor(zaha,"
    ]
  },
  {
    "id": "FOLIO_train_972",
    "context": "Something is either an invasive neuroimaging technique or a noninvasive neuroimaging technique. All noninvasive neuroimaging techniques provide a spatial resolution of brains. If a technique provides a spatial resolution of brains, then it is a measurement of brain activity. All measurements of brain activity are used by neuroscience researchers. FMRI is either a measurement of brain activity or a noninvasive neuroimaging technique.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? FMRI provides a spatial resolution of brains.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nInvasive(x) ::: x is an invasive neuroimaging technique.\nNoninvasive(x) ::: x is a noninvasive neuroimaging technique.\nProvide(x, y) ::: x provides y.\nSpatialResolution(x) ::: x is a spatial resolution of brains.\nMeasurement(x) ::: x is a measurement of brain activity.\nUsed(x, y) ::: x is used by y.\nPremises:\nSomething(x) ⊕ Invasive(x) ::: Something is either an invasive neuroimaging technique or a noninvasive neuroimaging technique.\n∀x (Noninvasive(x) → Provide(x, SpatialResolution(x))) ::: All noninvasive neuroimaging techniques provide a spatial resolution of brains.\n∀x (Provide(x, SpatialResolution(x)) → Measurement(x)) :::"
    ]
  },
  {
    "id": "FOLIO_train_973",
    "context": "Something is either an invasive neuroimaging technique or a noninvasive neuroimaging technique. All noninvasive neuroimaging techniques provide a spatial resolution of brains. If a technique provides a spatial resolution of brains, then it is a measurement of brain activity. All measurements of brain activity are used by neuroscience researchers. FMRI is either a measurement of brain activity or a noninvasive neuroimaging technique.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? FMRI is an invasive neuroimaging technique and is used by neuroscience researchers.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nInvasive(x) ::: x is an invasive neuroimaging technique.\nNoninvasive(x) ::: x is a noninvasive neuroimaging technique.\nProvide(x, y) ::: x provides y.\nSpatialResolution(x) ::: x is a spatial resolution of brains.\nMeasurement(x) ::: x is a measurement of brain activity.\nUsed(x, y) ::: x is used by y.\nPremises:\nInvasive(x) ⊕ Noninvasive(x) ::: Something is either an invasive neuroimaging technique or a noninvasive neuroimaging technique.\n∀x (Provide(x, SpatialResolution(x)) → Measurement(x)) ::: All noninvasive neuroimaging techniques provide a spatial resolution of brains.\n∀x (Measurement(x) → Used(x, NeuroscienceResearcher))"
    ]
  },
  {
    "id": "FOLIO_train_974",
    "context": "Something is either an invasive neuroimaging technique or a noninvasive neuroimaging technique. All noninvasive neuroimaging techniques provide a spatial resolution of brains. If a technique provides a spatial resolution of brains, then it is a measurement of brain activity. All measurements of brain activity are used by neuroscience researchers. FMRI is either a measurement of brain activity or a noninvasive neuroimaging technique.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? FMRI is either an invasive neuroimaging technique or is used by neuroscience researchers.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nInvasive(x) ::: x is an invasive neuroimaging technique.\nNoninvasive(x) ::: x is a noninvasive neuroimaging technique.\nProvide(x, y) ::: x provides y.\nSpatialResolution(x) ::: x is a spatial resolution of brains.\nMeasurement(x) ::: x is a measurement of brain activity.\nUsed(x, y) ::: x is used by y.\nPremises:\nInvasive(x) ⊕ Noninvasive(x) ::: Something is either an invasive neuroimaging technique or a noninvasive neuroimaging technique.\n∀x (Provide(x, SpatialResolution(x)) → Measurement(x)) ::: All noninvasive neuroimaging techniques provide a spatial resolution of brains.\n∀x (Measurement(x) → Used(x, NeuroscienceResearcher))"
    ]
  },
  {
    "id": "FOLIO_train_975",
    "context": "Something is either an invasive neuroimaging technique or a noninvasive neuroimaging technique. All noninvasive neuroimaging techniques provide a spatial resolution of brains. If a technique provides a spatial resolution of brains, then it is a measurement of brain activity. All measurements of brain activity are used by neuroscience researchers. FMRI is either a measurement of brain activity or a noninvasive neuroimaging technique.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If fMRI is not an invasive neuroimaging technique and used by neuroscience researchers, then fMRI is neither a noninvasive neuroimaging technique nor provides a spatial resolution of brains.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nInvasive(x) ::: x is an invasive neuroimaging technique.\nNoninvasive(x) ::: x is a noninvasive neuroimaging technique.\nProvide(x, y) ::: x provides y.\nSpatialResolution(x) ::: x is a spatial resolution of brains.\nMeasurement(x) ::: x is a measurement of brain activity.\nUsed(x, y) ::: x is used by y.\nPremises:\n∃x (Invasive(x) ⊕ Noninvasive(x)) ::: Something is either an invasive neuroimaging technique or a noninvasive neuroimaging technique.\n∀x (Provide(x, SpatialResolution(x)) → Measurement(x)) ::: If a technique provides a spatial resolution of brains, then it is a measurement of brain activity.\n∀x (Used(x, NeuroscienceResearcher(x))"
    ]
  },
  {
    "id": "FOLIO_train_976",
    "context": "Either present their work at the conference or provide a tutorial session at the conference. All who present their work at the conference will attend in person. All those providing a tutorial session at the conference are invited to join the club. All who attend the conference in person are provided with souvenirs. All invited to join the club are provided with delicious meals. All provided with delicious meals are happy to communicate with each other during the dinner. All provided with delicious meals are invited to take a photo with the audience. James does not attend the conference in person and is not provided with souvenirs.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James is provided with souvenirs.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nPresent(x) ::: x presents their work at the conference.\nTutorial(x) ::: x provides a tutorial session at the conference.\nAttend(x) ::: x attends the conference in person.\nSouvenir(x) ::: x is provided with souvenirs.\nDeliciousMeal(x) ::: x is provided with delicious meals.\nHappy(x) ::: x is happy to communicate with each other during the dinner.\nPhoto(x) ::: x is invited to take a photo with the audience.\nPremises:\nPresent(x) ⊕ Tutorial(x) ::: Either present their work at the conference or provide a tutorial session at the conference.\n∀x (Present(x) → Attend(x)) ::: All who present their work at the conference will attend in person.\n∀x (Tutorial(x) → Invited(x)) ::: All those providing a tutorial session at the conference are invited to join the club.\n∀"
    ]
  },
  {
    "id": "FOLIO_train_977",
    "context": "Either present their work at the conference or provide a tutorial session at the conference. All who present their work at the conference will attend in person. All those providing a tutorial session at the conference are invited to join the club. All who attend the conference in person are provided with souvenirs. All invited to join the club are provided with delicious meals. All provided with delicious meals are happy to communicate with each other during the dinner. All provided with delicious meals are invited to take a photo with the audience. James does not attend the conference in person and is not provided with souvenirs.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James is not provided with souvenirs.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nPresent(x) ::: x presents their work at the conference.\nTutorial(x) ::: x provides a tutorial session at the conference.\nAttend(x) ::: x attends the conference in person.\nSouvenir(x) ::: x is provided with souvenirs.\nDeliciousMeal(x) ::: x is provided with delicious meals.\nHappy(x) ::: x is happy to communicate with each other during the dinner.\nPhoto(x) ::: x is invited to take a photo with the audience.\nPremises:\n∀x (Present(x) → Attend(x)) ::: All who present their work at the conference will attend in person.\n∀x (Tutorial(x) → Invited(x)) ::: All those providing a tutorial session at the conference are invited to join the club.\n∀x (Attend(x) → Souvenir(x)) ::: All who attend the conference in person are provided with souvenirs.\n∀"
    ]
  },
  {
    "id": "FOLIO_train_978",
    "context": "Either present their work at the conference or provide a tutorial session at the conference. All who present their work at the conference will attend in person. All those providing a tutorial session at the conference are invited to join the club. All who attend the conference in person are provided with souvenirs. All invited to join the club are provided with delicious meals. All provided with delicious meals are happy to communicate with each other during the dinner. All provided with delicious meals are invited to take a photo with the audience. James does not attend the conference in person and is not provided with souvenirs.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James is invited to take a photo with the audience and is happy to communicate with each other at the dinner.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPresent(x) ::: x presents their work at the conference.\nTutorial(x) ::: x provides a tutorial session at the conference.\nAttend(x) ::: x attends the conference in person.\nSouvenir(x) ::: x is provided with souvenirs.\nDeliciousMeal(x) ::: x is provided with delicious meals.\nHappy(x) ::: x is happy to communicate with each other.\nPhoto(x) ::: x is invited to take a photo with the audience.\nPremises:\nPresent(x) ⊕ Tutorial(x) ::: Either present their work at the conference or provide a tutorial session at the conference.\n∀x (Present(x) → Attend(x)) ::: All who present their work at the conference will attend in person.\n∀x (Tutorial(x) → Invited(x)) ::: All those providing a tutorial session at the conference are invited to join the club.\n∀x (Attend"
    ]
  },
  {
    "id": "FOLIO_train_979",
    "context": "Either present their work at the conference or provide a tutorial session at the conference. All who present their work at the conference will attend in person. All those providing a tutorial session at the conference are invited to join the club. All who attend the conference in person are provided with souvenirs. All invited to join the club are provided with delicious meals. All provided with delicious meals are happy to communicate with each other during the dinner. All provided with delicious meals are invited to take a photo with the audience. James does not attend the conference in person and is not provided with souvenirs.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James is invited to take a photo with the audience or is happy to communicate with each other during the dinner.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPresent(x) ::: x presents their work at the conference.\nTutorial(x) ::: x provides a tutorial session at the conference.\nAttend(x) ::: x attends the conference in person.\nSouvenir(x) ::: x is provided with souvenirs.\nDeliciousMeal(x) ::: x is provided with delicious meals.\nHappy(x) ::: x is happy to communicate with each other during the dinner.\nPhoto(x) ::: x is invited to take a photo with the audience.\nPremises:\n∀x (Present(x) → Attend(x)) ::: All who present their work at the conference will attend in person.\n∀x (Tutorial(x) → Invited(x)) ::: All those providing a tutorial session at the conference are invited to join the club.\n∀x (Attend(x) → Souvenir(x)) ::: All who attend the conference in person are provided with souvenirs.\n∀x"
    ]
  },
  {
    "id": "FOLIO_train_980",
    "context": "Either present their work at the conference or provide a tutorial session at the conference. All who present their work at the conference will attend in person. All those providing a tutorial session at the conference are invited to join the club. All who attend the conference in person are provided with souvenirs. All invited to join the club are provided with delicious meals. All provided with delicious meals are happy to communicate with each other during the dinner. All provided with delicious meals are invited to take a photo with the audience. James does not attend the conference in person and is not provided with souvenirs.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James is either invited to take a photo with the audience or happy to communicate with each other during the dinner.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPresent(x) ::: x presents their work at the conference.\nTutorial(x) ::: x provides a tutorial session at the conference.\nAttend(x) ::: x attends the conference in person.\nSouvenir(x) ::: x is provided with souvenirs.\nDeliciousMeal(x) ::: x is provided with delicious meals.\nHappy(x) ::: x is happy to communicate with each other during the dinner.\nPhoto(x) ::: x is invited to take a photo with the audience.\nPremises:\n∀x (Present(x) → Attend(x)) ::: All who present their work at the conference will attend in person.\n∀x (Tutorial(x) → Invited(x)) ::: All those providing a tutorial session at the conference are invited to join the club.\n∀x (Attend(x) → Souvenir(x)) ::: All who attend the conference in person are provided with souvenirs.\n∀x (Souvenir(x) → DeliciousMeal(x)) ::: All provided with delicious meals are happy to communicate with each other during the dinner.\n∀x (DeliciousMeal(x) → Photo(x)) ::: All invited to take a photo with the audience are provided with delicious meals.\n¬Present(james) ∧ ¬Attend(james) ∧ Souvenir(james) ::: James does not attend the conference in person and is not provided with souvenirs.\nConclusion:\nPhoto(james) ∨ Happy(james) ::: James is either invited to take a photo with the audience or happy to communicate with each other during the dinner.\n------"
    ]
  },
  {
    "id": "FOLIO_train_981",
    "context": "The USS Salem is a heavy cruiser built for the United States navy. The last heavy cruiser to enter service was the USS Salem. The USS Salem is a museum ship. Museum ships are open to the public. The USS Salem served in the Atlantic and Mediterranean.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The USS Salem is open to the public.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nHeavyCruiser(x) ::: x is a heavy cruiser.\nMuseumShip(x) ::: x is a museum ship.\nOpenToPublic(x) ::: x is open to the public.\nAtlantic(x) ::: x is in the Atlantic.\nMediterranean(x) ::: x is in the Mediterranean.\nPremises:\nHeavyCruiser(ussSalem) ∧ MuseumShip(ussSalem) ∧ OpenToPublic(ussSalem) ::: The USS Salem is a museum ship.\nHeavyCruiser(ussSalem) ∧ MuseumShip(ussSalem) ∧ OpenToPublic(ussSalem) ∧ Atlantic(ussSalem) ∧ Mediterranean(ussSalem) ::: The USS Salem is a museum ship.\nConclusion:\nOpenToPublic(ussSalem) ::: The USS Salem is open to the public.\n------\nProblem:\nThe USS Salem is a heavy cruiser built for the United States navy. The last heavy cruiser to enter service was the USS Salem. The USS Salem is a museum ship. Museum ships are open to the public. The USS Salem served in the Atlantic and Mediterranean.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The USS Salem is open to the public.\n###\nProblem:\nThe USS Salem is a heavy cruiser built for the United States navy. The last heavy cruiser to enter service was the USS Salem. The USS Salem is a museum ship. Museum ships are open to the public. The USS Salem served in the Atlantic and Mediterranean."
    ]
  },
  {
    "id": "FOLIO_train_982",
    "context": "The USS Salem is a heavy cruiser built for the United States navy. The last heavy cruiser to enter service was the USS Salem. The USS Salem is a museum ship. Museum ships are open to the public. The USS Salem served in the Atlantic and Mediterranean.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There is a museum ship open to the public that served in the Mediterranean.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nHeavyCruiser(x) ::: x is a heavy cruiser.\nMuseumShip(x) ::: x is a museum ship.\nOpenToPublic(x) ::: x is open to the public.\nServe(x, y) ::: x serves in y.\nAtlantic(x) ::: x is in the Atlantic.\nMediterranean(x) ::: x is in the Mediterranean.\nPremises:\nHeavyCruiser(ussSalem) ∧ LastHeavyCruiser(ussSalem) ::: The USS Salem is a heavy cruiser built for the United States navy. The last heavy cruiser to enter service was the USS Salem.\nMuseumShip(ussSalem) ∧ OpenToPublic(ussSalem) ::: The USS Salem is a museum ship. Museum ships are open to the public.\nServe(ussSalem, atlantic) ∧ Serve(ussSalem, mediterranean) ::: The USS Salem served in the Atlantic and Mediterranean.\nConclusion:\n∃y (MuseumShip(y) ∧ OpenToPublic(y) ∧ Serve(y, mediterranean)) ::: There is a museum ship open to the public that served in the Mediterranean.\n------\nProblem:\nThe USS Salem is a heavy cruiser built for the United States navy. The last heavy cruiser to enter service was the USS Salem. The USS Salem is a museum ship. Museum ships are open to the public. The USS Salem served in the Atlantic and Mediterranean.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain?"
    ]
  },
  {
    "id": "FOLIO_train_983",
    "context": "The USS Salem is a heavy cruiser built for the United States navy. The last heavy cruiser to enter service was the USS Salem. The USS Salem is a museum ship. Museum ships are open to the public. The USS Salem served in the Atlantic and Mediterranean.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The USS Salem was not the last heavy cruiser to enter service.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nHeavyCruiser(x) ::: x is a heavy cruiser.\nMuseumShip(x) ::: x is a museum ship.\nOpenToPublic(x) ::: x is open to the public.\nServe(x, y) ::: x serves in y.\nAtlantic(x) ::: x is in the Atlantic.\nMediterranean(x) ::: x is in the Mediterranean.\nPremises:\nHeavyCruiser(ussSalem) ∧ MuseumShip(ussSalem) ∧ OpenToPublic(ussSalem) ::: The USS Salem is a museum ship.\nHeavyCruiser(ussSalem) ∧ MuseumShip(ussSalem) ∧ OpenToPublic(ussSalem) ∧ Serve(ussSalem, Atlantic) ∧ Serve(ussSalem, Mediterranean) ::: The USS Salem is a museum ship.\nConclusion:\n¬(Last(ussSalem, heavyCruiser)) ::: The USS Salem was not the last heavy cruiser to enter service.\n------\nProblem:\nThe USS Salem is a heavy cruiser built for the United States navy. The last heavy cruiser to enter service was the USS Salem. The USS Salem is a museum ship. Museum ships are open to the public. The USS Salem served in the Atlantic and Mediterranean.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The USS Salem is a museum ship.\n###\nProblem:\nThe USS Salem is a heavy cruiser built for the United States navy. The last heavy cruiser to enter service was the USS Salem. The"
    ]
  },
  {
    "id": "FOLIO_train_984",
    "context": "TS Leda was a good passenger and cargo vessel. TS Leda was the first Norweigian vessel that was built with stabilizers. Stabilizers are mechanical devices that are only on ships that have powerful steam turbine engines. To be a good passenger and cargo vessel, ships must be quiet and good at sea. Some ships that are quiet and good at sea have powerful steam turbine engines.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? TS Leda was quiet and good at sea.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nPassengerAndCargoVessel(x) ::: x is a passenger and cargo vessel.\nTSLeda(x) ::: x is TS Leda.\nStabilizer(x) ::: x is a stabilizer.\nSteamTurbineEngine(x) ::: x is a steam turbine engine.\nQuiet(x) ::: x is quiet.\nGoodAtSea(x) ::: x is good at sea.\nPremises:\nPassengerAndCargoVessel(TSLeda) ∧ Stabilizer(TSLeda) ::: TS Leda was a good passenger and cargo vessel.\nStabilizer(TSLeda) ∧ SteamTurbineEngine(TSLeda) ::: TS Leda was the first Norweigian vessel that was built with stabilizers.\n∀x (PassengerAndCargoVessel(x) → Quiet(x) ∧ GoodAtSea(x)) ::: To be a good passenger and cargo vessel, ships must be quiet and good at sea.\n∃x (Quiet(x) ∧ GoodAtSea(x) ∧ SteamTurbineEngine(x)) ::: Some ships that are quiet and good at sea have powerful steam turbine engines.\nConclusion:\nQuiet(TSLeda) ∧ GoodAtSea(TSLeda) ::: TS Leda was quiet and good at sea.\n------\nProblem:\nThe following is a list of the top 100 most popular baby names in the United States in 2013.\n1. Jacob\n2. Mason\n3. William\n4. Michael\n5. Jayden\n6. Ethan\n7. Alexander"
    ]
  },
  {
    "id": "FOLIO_train_985",
    "context": "TS Leda was a good passenger and cargo vessel. TS Leda was the first Norweigian vessel that was built with stabilizers. Stabilizers are mechanical devices that are only on ships that have powerful steam turbine engines. To be a good passenger and cargo vessel, ships must be quiet and good at sea. Some ships that are quiet and good at sea have powerful steam turbine engines.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? TS Leda had powerful steam turbine engines.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nTS(x) ::: x is a TS vessel.\nPassenger(x) ::: x is a passenger vessel.\nCargo(x) ::: x is a cargo vessel.\nGood(x) ::: x is a good vessel.\nStabilizer(x) ::: x is a stabilizer.\nSteamTurbineEngine(x) ::: x is a steam turbine engine.\nQuiet(x) ::: x is quiet.\nSea(x) ::: x is at sea.\nPremises:\nTS(leda) ∧ Passenger(leda) ∧ Cargo(leda) ∧ Good(leda) ::: TS Leda was a good passenger and cargo vessel.\nTS(leda) ∧ Stabilizer(leda) ::: TS Leda was the first Norweigian vessel that was built with stabilizers.\n∀x (SteamTurbineEngine(x) → Quiet(x)) ::: To be a good passenger and cargo vessel, ships must be quiet and good at sea.\n∃x (Quiet(x) ∧ GoodAtSea(x)) ::: Some ships that are quiet and good at sea have powerful steam turbine engines.\nConclusion:\nSteamTurbineEngine(leda) ::: TS Leda had powerful steam turbine engines.\n------\nProblem:\nThe following is a list of the top 100 most popular baby names in the United States in 2009.\n1. Jacob\n2. Michael\n3. Ethan\n4. Joshua\n5. Matthew\n6. Daniel\n7. William\n8. Alexander\n9. Christopher\n10. Andrew\n11."
    ]
  },
  {
    "id": "FOLIO_train_986",
    "context": "TS Leda was a good passenger and cargo vessel. TS Leda was the first Norweigian vessel that was built with stabilizers. Stabilizers are mechanical devices that are only on ships that have powerful steam turbine engines. To be a good passenger and cargo vessel, ships must be quiet and good at sea. Some ships that are quiet and good at sea have powerful steam turbine engines.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? TS Leda was not a Norweigian vessel.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nNorweigian(x) ::: x is a Norweigian vessel.\nPassengerAndCargoVessel(x) ::: x is a passenger and cargo vessel.\nStabilizer(x) ::: x is a stabilizer.\nSteamTurbineEngine(x) ::: x is a steam turbine engine.\nQuiet(x) ::: x is quiet.\nGoodAtSea(x) ::: x is good at sea.\nPremises:\nPassengerAndCargoVessel(leda) ∧ Stabilizer(leda) ∧ SteamTurbineEngine(leda) ::: TS Leda was a good passenger and cargo vessel.\nTS Leda was the first Norweigian vessel that was built with stabilizers.\n∀x (PassengerAndCargoVessel(x) → Quiet(x) ∧ GoodAtSea(x)) ::: To be a good passenger and cargo vessel, ships must be quiet and good at sea.\n∃x (Quiet(x) ∧ GoodAtSea(x) ∧ SteamTurbineEngine(x)) ::: Some ships that are quiet and good at sea have powerful steam turbine engines.\nConclusion:\n¬Norweigian(leda) ::: TS Leda was not a Norweigian vessel.\n------\nProblem:\nThe following is a list of the top 100 most popular baby names in the United States in 2013.\n1. Jacob\n2. Mason\n3. William\n4. Michael\n5. Jayden\n6. Ethan\n7. Alexander\n8. Noah\n9. Daniel\n10. Aiden\n11. Benjamin\n1"
    ]
  },
  {
    "id": "FOLIO_train_987",
    "context": "Rosa was born in Santiago. Santiago is the capital and largest city of Chile. Rosa is the daughter of a Catalan building contractor, Jose. Jose has a Chilean wife, Carmen. A building contractor is responsible for the day-to-day oversight of a construction site.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Rosa was born in the largest city of Chile.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nBorn(x, y) ::: x was born in year y.\nCapital(x) ::: x is the capital of y.\nLargest(x) ::: x is the largest city of y.\nBuildingContractor(x) ::: x is a building contractor.\nResponsible(x, y) ::: x is responsible for y.\nPremises:\nBorn(rosa, year1980) ∧ Capital(santiago) ∧ Largest(santiago) ::: Rosa was born in Santiago. Santiago is the capital and largest city of Chile.\nBuildingContractor(jose) ∧ Responsible(jose, constructionSite) ::: Jose is a building contractor.\nWife(carmen, jose) ::: Carmen is the wife of Jose.\nConclusion:\nBorn(rosa, largestCityOfChile) ::: Rosa was born in the largest city of Chile.\n------\nProblem:\nThe following is a list of the top 100 most popular names for baby girls in the United States in 2013.\n1. Sophia\n2. Emma\n3. Olivia\n4. Isabella\n5. Ava\n6. Mia\n7. Abigail\n8. Emily\n9. Elizabeth\n10. Madison\n11. Chloe\n12. Zoe\n13. Avery\n14. Harper\n15. Amelia\n16. Charlotte\n17. Evelyn\n18. Ella\n19. Hannah\n20. Aubrey\n21. Lily\n22. Addison\n23. Lay"
    ]
  },
  {
    "id": "FOLIO_train_988",
    "context": "Rosa was born in Santiago. Santiago is the capital and largest city of Chile. Rosa is the daughter of a Catalan building contractor, Jose. Jose has a Chilean wife, Carmen. A building contractor is responsible for the day-to-day oversight of a construction site.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Neither of Rosa's parents is Chilean.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nBorn(x, y) ::: x was born in y.\nCapital(x) ::: x is the capital of y.\nLargestCity(x) ::: x is the largest city of y.\nDaughter(x, y) ::: x is the daughter of y.\nBuildingContractor(x) ::: x is a building contractor.\nResponsible(x, y) ::: x is responsible for y.\nPremises:\nBorn(rosa, santiago) ∧ Capital(santiago) ∧ LargestCity(santiago) ::: Rosa was born in Santiago. Santiago is the capital and largest city of Chile.\nDaughter(rosa, carmen) ∧ Daughter(carmen, jose) ::: Rosa is the daughter of a Catalan building contractor, Jose.\nBuildingContractor(jose) ::: Jose has a Chilean wife, Carmen.\nConclusion:\nNeither(Daughter(jose, chile) ∨ Daughter(carmen, chile)) ::: Neither of Rosa's parents is Chilean.\n------\nProblem:\nThe following is a list of the top 100 most popular names in the United States for the year 2000.\n1. Michael\n2. Christopher\n3. Joshua\n4. Matthew\n5. Daniel\n6. David\n7. Andrew\n8. Joseph\n9. John\n10. Jason\n11. James\n12. Robert\n13. Ryan\n14. Benjamin\n15. Nicholas\n16. Anthony\n17. Brian\n18. Kevin\n19. Steven\n20."
    ]
  },
  {
    "id": "FOLIO_train_989",
    "context": "Rosa was born in Santiago. Santiago is the capital and largest city of Chile. Rosa is the daughter of a Catalan building contractor, Jose. Jose has a Chilean wife, Carmen. A building contractor is responsible for the day-to-day oversight of a construction site.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Rosa is the daughter of someone who is responsible for the oversight of traffic.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Oversight(x, y) ::: x is responsible for the oversight of y.\nTraffic(x) ::: x is traffic.\nDaughter(x, y) ::: x is the daughter of y.\nPremises:\nCatalan(jose) ∧ Chilean(carmen) ∧ BuildingContractor(jose) ∧ Chilean(rosa) ∧ Santiago(birthplaceOfRosa) ::: Rosa was born in Santiago. Santiago is the capital and largest city of Chile. Rosa is the daughter of a Catalan building contractor, Jose. Jose has a Chilean wife, Carmen.\nOversight(traffic, site) ::: traffic is responsible for the oversight of site.\nConclusion:\nDaughter(rosa, someoneWhoIsResponsibleForTheOversightOfTraffic) ::: Rosa is the daughter of someone who is responsible for the oversight of traffic.\n------\nProblem:\nThe following is a list of the top 100 most popular names in the United States for the year 2000.\n1. Michael\n2. Christopher\n3. Joshua\n4. Matthew\n5. Daniel\n6. David\n7. Andrew\n8. Joseph\n9. John\n10. Jason\n11. James\n12. Robert\n13. Ryan\n14. Benjamin\n15. Nicholas\n16. Anthony\n17. Brian\n18. Kevin\n19. Steven\n20. Eric\n21. Timothy\n22. Mark\n23. Paul\n24. Scott\n25. Matthew\n26. Matthew\n27. Matthew\n28. Matthew\n29. Matthew\n30. Matthew"
    ]
  },
  {
    "id": "FOLIO_train_990",
    "context": "Tyga is a rapper. Rappers release rap albums. Tyga released the Well Done 3 album. Rappers are not opera singers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Well Done 3 is a rap album.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nRapper(x) ::: x is a rapper.\nRapAlbum(x) ::: x is a rap album.\nOperaSinger(x) ::: x is an opera singer.\nRelease(x, y) ::: x is released in year y.\nPremises:\nRapper(tyga) ∧ Release(tyga, year2017) ::: Tyga is a rapper. Rappers release rap albums. Tyga released the Well Done 3 album.\n¬Rapper(x) ∧ OperaSinger(x) ::: Rappers are not opera singers.\nConclusion:\nRapAlbum(wellDone3) ::: Well Done 3 is a rap album.\n------"
    ]
  },
  {
    "id": "FOLIO_train_991",
    "context": "Tyga is a rapper. Rappers release rap albums. Tyga released the Well Done 3 album. Rappers are not opera singers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tyga is an opera singer.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nRapper(x) ::: x is a rapper.\nRapAlbum(x) ::: x is a rap album.\nOperaSinger(x) ::: x is an opera singer.\nPremises:\nRapper(tyga) ∧ RapAlbum(wellDone3) ::: Tyga is a rapper. Rappers release rap albums. Tyga released the Well Done 3 album.\n¬Rapper(x) ∧ OperaSinger(x) ::: Rappers are not opera singers.\nConclusion:\nOperaSinger(tyga) ::: Tyga is an opera singer.\n------\nProblem:\nThe following is a list of the top 100 most popular songs of 2"
    ]
  },
  {
    "id": "FOLIO_train_992",
    "context": "Tyga is a rapper. Rappers release rap albums. Tyga released the Well Done 3 album. Rappers are not opera singers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Well Done 3 is worth listening.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nRapper(x) ::: x is a rapper.\nRapAlbum(x) ::: x is a rap album.\nOperaSinger(x) ::: x is an opera singer.\nRelease(x, y) ::: x is released in year y.\nPremises:\nRapper(tyga) ∧ RapAlbum(wellDone3) ∧ Release(wellDone3, year2019) ::: Tyga is a rapper. Rappers release rap albums. Tyga released the Well Done 3 album.\n¬Rapper(x) ∧ OperaSinger(x) ::: Rappers are not opera singers.\nConclusion:\nRelease(wellDone3, year2019"
    ]
  },
  {
    "id": "FOLIO_train_993",
    "context": "Deborah Wallace is a Scottish born actress, playwright and producer. Psyche is a play based on the life of James Miranda Barry. Homesick, Psyche and The Void are plays from Deborah Wallace. Deborah Wallace co-produced Gasland.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Gasland was coproduced by the same person Homesick is from.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nScottish(x) ::: x is a Scottish person.\nActress(x) ::: x is an actress.\nPlaywright(x) ::: x is a playwright.\nProducer(x) ::: x is a producer.\nCoProduce(x, y) ::: x co-produces y.\nPlay(x) ::: x is a play.\nPremises:\nScottish(deborah) ∧ Actress(deborah) ∧ Playwright(deborah) ∧ Producer(deborah) ::: Deborah Wallace is a Scottish born actress, playwright and producer.\nPlay(psyche) ∧ Play(homesick) ∧ Play"
    ]
  },
  {
    "id": "FOLIO_train_994",
    "context": "Deborah Wallace is a Scottish born actress, playwright and producer. Psyche is a play based on the life of James Miranda Barry. Homesick, Psyche and The Void are plays from Deborah Wallace. Deborah Wallace co-produced Gasland.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There isn't a play from Deborah Wallace that is based on the life of James Miranda Barry.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nScottish(x) ::: x is a Scottish person.\nActress(x) ::: x is an actress.\nPlaywright(x) ::: x is a playwright.\nProducer(x) ::: x is a producer.\nPlay(x) ::: x is a play.\nBasedOn(x, y) ::: x is based on y.\nCoProduce(x, y) ::: x is co-produced by y.\nPremises:\nScottish(deborah) ∧ Actress(deborah) ∧ Playwright(deborah) ∧ Producer(deborah) ::: Deborah Wallace is a Scottish born actress, playwright and producer."
    ]
  },
  {
    "id": "FOLIO_train_995",
    "context": "Deborah Wallace is a Scottish born actress, playwright and producer. Psyche is a play based on the life of James Miranda Barry. Homesick, Psyche and The Void are plays from Deborah Wallace. Deborah Wallace co-produced Gasland.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Gasland is a play.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nScottish(x) ::: x is a Scottish person.\nActress(x) ::: x is an actress.\nPlaywright(x) ::: x is a playwright.\nProducer(x) ::: x is a producer.\nPlay(x) ::: x is a play.\nCoProduce(x, y) ::: x co-produces y.\nPremises:\nScottish(deborah) ∧ Actress(deborah) ∧ Playwright(deborah) ∧ Producer(deborah) ::: Deborah Wallace is a Scottish born actress, playwright and producer.\nPlay(psyche) ∧ Play(homesick) ∧ Play"
    ]
  },
  {
    "id": "FOLIO_train_996",
    "context": "If an animal needs a large territory, then it travels far. Everything that eats a lot needs a large territory. If something is a big animal, then it will eat a lot. All bears are big animals. Larry is a big animal.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Larry is a bear.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nNeeds(x, y) ::: x needs y.\nTravels(x, y) ::: x travels from year y to year y.\nEats(x, y) ::: x eats y.\nLot(x) ::: x is a lot.\nBig(x) ::: x is big.\nAnimal(x) ::: x is an animal.\nTerritory(x, y) ::: x has territory y.\nPremises:\n∀x (Travels(x, y) → Needs(x, y)) ::: If an animal needs a large territory, then it travels far.\n∀x (Eats(x, y) → Needs(x, y)) :::"
    ]
  },
  {
    "id": "FOLIO_train_997",
    "context": "If an animal needs a large territory, then it travels far. Everything that eats a lot needs a large territory. If something is a big animal, then it will eat a lot. All bears are big animals. Larry is a big animal.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Larry is neither a bear nor travels far.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nNeeds(x, y) ::: x needs y.\nTravels(x, y) ::: x travels from year y to year y+1.\nEats(x, y) ::: x eats y.\nLot(x) ::: x is a lot.\nBig(x) ::: x is big.\nAnimal(x) ::: x is an animal.\nBear(x) ::: x is a bear.\nPremises:\n∀x (Animal(x) → Needs(x, territory)) ::: If an animal needs a large territory, then it travels far.\n∀x (Eats(x, y) → Lot(y)) ::: Everything that eats a lot needs a"
    ]
  },
  {
    "id": "FOLIO_train_998",
    "context": "If an animal needs a large territory, then it travels far. Everything that eats a lot needs a large territory. If something is a big animal, then it will eat a lot. All bears are big animals. Larry is a big animal.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Larry either travels far or needs a large territory, then Larry is a bear.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nNeeds(x, y) ::: x needs y.\nTravels(x, y) ::: x travels from year y to year y+1.\nLarge(x) ::: x is a large territory.\nEats(x, y) ::: x eats y.\nBig(x) ::: x is a big animal.\nPremises:\n∀x (Needs(x, y) → Travels(x, y)) ::: If an animal needs a large territory, then it travels far.\n∀x (Eats(x, y) → Needs(x, y)) ::: Everything that eats a lot needs a large territory.\n∀x (Big(x) → Eats(x,"
    ]
  },
  {
    "id": "FOLIO_train_999",
    "context": "No criminal is kind. All person who breaks the law is a criminals. People are either kind or evil. If someone is evil, then they are ugly. If someone is evil, then they are cold-blood. If Garry is either evil and ugly or neither evil nor ugly, then Garry is not evil.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Garry is ugly.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nCriminal(x) ::: x is a criminal.\nKind(x) ::: x is kind.\nEvil(x) ::: x is evil.\nUgly(x) ::: x is ugly.\nColdBlood(x) ::: x is cold-blood.\nPremises:\n∀x (Criminal(x) → ¬Kind(x)) ::: No criminal is kind.\n∀x (Criminal(x) → LawBreaker(x)) ::: All person who breaks the law is a criminals.\n∀x (Person(x) → Kind(x) ∨ Evil(x)) ::: People are either kind or evil.\n∀x (Evil(x) → Ugly(x"
    ]
  },
  {
    "id": "FOLIO_train_1000",
    "context": "No criminal is kind. All person who breaks the law is a criminals. People are either kind or evil. If someone is evil, then they are ugly. If someone is evil, then they are cold-blood. If Garry is either evil and ugly or neither evil nor ugly, then Garry is not evil.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Garry is cold-blooded and breaks the law.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nCriminal(x) ::: x is a criminal.\nKind(x) ::: x is kind.\nEvil(x) ::: x is evil.\nUgly(x) ::: x is ugly.\nColdBlood(x) ::: x is cold-blooded.\nBreaksLaw(x) ::: x breaks the law.\nPremises:\n¬Criminal(x) ∧ Kind(x) ::: No criminal is kind.\nAllPersonWhoBreaksTheLaw(x) ∧ Criminal(x) ::: All person who breaks the law is a criminals.\nPerson(x) ∧ Kind(x) ∨ Person(x) ∧ Evil(x) ::: People are either kind or evil.\nEvil(x) ∧ Ugly(x) ::: If someone is evil, then they are ugly.\nEvil(x) ∧ ColdBlood(x) ::: If someone is evil, then they are cold-blood.\n¬Evil(x) ∧ ¬Evil(x) ::: If Garry is either evil and ugly or neither evil nor ugly, then Garry is not evil.\nConclusion:\nBreaksLaw(garry) ∧ ColdBlood(garry) ::: Garry is cold-blooded and breaks the law.\n------"
    ]
  },
  {
    "id": "FOLIO_train_1001",
    "context": "No criminal is kind. All person who breaks the law is a criminals. People are either kind or evil. If someone is evil, then they are ugly. If someone is evil, then they are cold-blood. If Garry is either evil and ugly or neither evil nor ugly, then Garry is not evil.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Garry is evil or breaks the law, then Garry is not both a criminal and breaking the law.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCriminal(x) ::: x is a criminal.\nKind(x) ::: x is kind.\nEvil(x) ::: x is evil.\nUgly(x) ::: x is ugly.\nColdBlood(x) ::: x is cold-blood.\nPremises:\n∀x (Criminal(x) → ¬Kind(x)) ::: No criminal is kind.\n∀x (BreaksLaw(x) → Criminal(x)) ::: All person who breaks the law is a criminals.\n∀x (Person(x) → Kind(x) ∨ Evil(x)) ::: People are either kind or evil.\n∀x (Evil(x) → Ugly(x)) ::: If someone is evil, then they are ugly.\n∀x (Evil(x) → ColdBlood(x)) ::: If someone is evil, then they are cold-blood.\n¬(Evil(garry) ∧ BreaksLaw(garry)) → (Evil(garry) ∧ BreaksLaw(garry)) ⊕ ¬(Evil(garry) ∨ BreaksLaw(garry)) ::: If Garry is either evil and breaks the law or neither evil nor breaks the law, then Garry is not evil.\nConclusion:\n¬(Bre"
    ]
  },
  {
    "id": "FOLIO_train_1002",
    "context": "Phoneix's music is classified under the indie pop genre. Phoenix is a band from France. French bands write songs in French or in English. Aside from indie pop, pop rock and synth-pop are two other genres of music. Phoneix has no songs in French.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Phoenix makes pop rock music.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nFrench(x) ::: x is a French person.\nBand(x) ::: x is a band.\nSong(x) ::: x is a song.\nIndiePop(x) ::: x is indie pop music.\nPopRock(x) ::: x is pop rock music.\nSynthPop(x) ::: x is synth-pop music.\nFrenchSong(x) ::: x is a French song.\nEnglishSong(x) ::: x is an English song.\nPremises:\nBand(phoneix) ∧ IndiePop(phoneix) ::: Phoneix is a band from France.\n∀x (Band(x) → Song(x)) ::: All bands have songs.\n∀x (French(x) → (FrenchSong(x) ∨ EnglishSong(x))) ::: All French people have French songs or English songs.\n¬Song(phoneix, french) ::: Phoneix has no songs in French.\nConclusion:\nPopRock(phoneix) ::: Phoenix makes pop rock music.\n------\nProblem:\nThe following is a list of the top 100 songs of 2015.\n1. Uptown Funk - Mark Ronson ft. Bruno Mars\n2. See You Again - Wiz Khalifa"
    ]
  },
  {
    "id": "FOLIO_train_1003",
    "context": "Phoneix's music is classified under the indie pop genre. Phoenix is a band from France. French bands write songs in French or in English. Aside from indie pop, pop rock and synth-pop are two other genres of music. Phoneix has no songs in French.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Phoenix has songs in French.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "O\nPredicates:\nFrench(x) ::: x is a French person.\nBand(x) ::: x is a band.\nSong(x) ::: x is a song.\nIndiePop(x) ::: x is a song in the indie pop genre.\nPopRock(x) ::: x is a song in the pop rock genre.\nSynthPop(x) ::: x is a song in the synth-pop genre.\nPremises:\nBand(phoenix) ∧ IndiePop(phoenix) ::: Phoenix is a band from France.\n∀x (French(x) → Song(x) ⊕ IndiePop(x)) ::: French bands write songs in French or in English.\n¬Song(phoenix, french) ::: Phoenix has no songs in French.\nConclusion:\nIndiePop(phoenix) ::: Phoenix is a band from France.\n------\nProblem:\nThe following is a list of the top 100 songs of 2015.\n1. Uptown Funk - Mark Ronson ft. Bruno Mars\n2. See You Again - Wiz Khalifa ft. Charlie Puth\n3. Thinking Out Loud - Ed Sheeran\n4. Blank Space - Taylor Swift\n5. Bad Blood - Taylor Swift ft. Kendrick L"
    ]
  }
]