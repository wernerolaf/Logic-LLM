[
  {
    "id": "FOLIO_train_0",
    "context": "All people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDependent(x) ::: x is a person dependent on caffeine.\nDrinks(x) ::: x regularly drinks coffee.\nJokes(x) ::: x jokes about being addicted to caffeine.\nUnaware(x) ::: x is unaware that caffeine is a drug.\nStudent(x) ::: x is a student.\nPremises:\n∀x (Drinks(x) → Dependent(x)) ::: All people who regularly drink coffee are dependent on caffeine.\n∀x (Drinks(x) ⊕ Jokes(x)) ::: People either regularly drink coffee or joke about being addicted to caffeine.\n∀x (Jokes(x) → ¬Unaware(x)) ::: No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. \n(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina)) ::: Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. \n¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina)) ::: If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nConclusion:\nJokes(rina) ⊕ Unaware(rina) ::: Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.\n------"
    ]
  },
  {
    "id": "FOLIO_train_1",
    "context": "All people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDependent(x) ::: x is a person dependent on caffeine.\nDrinks(x) ::: x regularly drinks coffee.\nJokes(x) ::: x jokes about being addicted to caffeine.\nUnaware(x) ::: x is unaware that caffeine is a drug.\nStudent(x) ::: x is a student.\nPremises:\n∀x (Drinks(x) → Dependent(x)) ::: All people who regularly drink coffee are dependent on caffeine.\n∀x (Drinks(x) ⊕ Jokes(x)) ::: People either regularly drink coffee or joke about being addicted to caffeine.\n∀x (Jokes(x) → ¬Unaware(x)) ::: No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. \n(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina)) ::: Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. \n¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina)) ::: If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nConclusion:\nJokes(rina) ⊕ Unaware(rina) ::: Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug."
    ]
  },
  {
    "id": "FOLIO_train_2",
    "context": "All people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDependent(x) ::: x is a person dependent on caffeine.\nDrinks(x) ::: x regularly drinks coffee.\nJokes(x) ::: x jokes about being addicted to caffeine.\nUnaware(x) ::: x is unaware that caffeine is a drug.\nStudent(x) ::: x is a student.\nPremises:\n∀x (Drinks(x) → Dependent(x)) ::: All people who regularly drink coffee are dependent on caffeine.\n∀x (Drinks(x) ⊕ Jokes(x)) ::: People either regularly drink coffee or joke about being addicted to caffeine.\n∀x (Jokes(x) → ¬Unaware(x)) ::: No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. \n(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina)) ::: Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. \n¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina)) ::: If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nConclusion:\nDrinks(rina) ⊕ Unaware(rina) ::: Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.\n------"
    ]
  },
  {
    "id": "FOLIO_train_3",
    "context": "All people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDependent(x) ::: x is a person dependent on caffeine.\nDrinks(x) ::: x regularly drinks coffee.\nJokes(x) ::: x jokes about being addicted to caffeine.\nUnaware(x) ::: x is unaware that caffeine is a drug.\nStudent(x) ::: x is a student.\nPremises:\n∀x (Drinks(x) → Dependent(x)) ::: All people who regularly drink coffee are dependent on caffeine.\n∀x (Drinks(x) ⊕ Jokes(x)) ::: People either regularly drink coffee or joke about being addicted to caffeine.\n∀x (Jokes(x) → ¬Unaware(x)) ::: No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. \n(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina)) ::: Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. \n¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina)) ::: If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nConclusion:\n((Jokes(rina) ∧ Unaware(rina)) ⊕ ¬(Jokes(rina) ∨ Unaware(rina))) → (Jokes(r"
    ]
  },
  {
    "id": "FOLIO_train_4",
    "context": "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music. Any choral conductor is a musician. Some musicians love music. Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Miroslav Venhoda loved music.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCzech(x) ::: x is a Czech person.\nChoralConductor(x) ::: x is a choral conductor.\nMusician(x) ::: x is a musician.\nLove(x, y) ::: x loves y.\nAuthor(x, y) ::: x is the author of y.\nBook(x) ::: x is a book.\nPublish(x, y) ::: x is published in year y.\nSpecialize(x, y) ::: x specializes in y.\nPremises:\nCzech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque) ::: Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.\n∀x (ChoralConductor(x) → Musician(x)) ::: Any choral conductor is a musician.\n∃x (Musician(x) ∧ Love(x, music)) ::: Some musicians love music.\nBook(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946) ::: Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant.\nConclusion:\nLove(miroslav, music) ::: Miroslav Venhoda loved music.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine"
    ]
  },
  {
    "id": "FOLIO_train_5",
    "context": "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music. Any choral conductor is a musician. Some musicians love music. Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A Czech person wrote a book in 1946.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCzech(x) ::: x is a Czech person.\nChoralConductor(x) ::: x is a choral conductor.\nMusician(x) ::: x is a musician.\nLove(x, y) ::: x loves y.\nAuthor(x, y) ::: x is the author of y.\nBook(x) ::: x is a book.\nPublish(x, y) ::: x is published in year y.\nSpecialize(x, y) ::: x specializes in y.\nPremises:\nCzech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque) ::: Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.\n∀x (ChoralConductor(x) → Musician(x)) ::: Any choral conductor is a musician.\n∃x (Musician(x) ∧ Love(x, music)) ::: Some musicians love music.\nBook(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946) ::: Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant.\nConclusion:\n∃y ∃x (Czech(x) ∧ Author(x, y) ∧ Book(y) ∧ Publish(y, year1946)) ::: A Czech person wrote a book in 1946.\n------\nProblem:"
    ]
  },
  {
    "id": "FOLIO_train_6",
    "context": "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music. Any choral conductor is a musician. Some musicians love music. Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? No choral conductor specialized in the performance of Renaissance.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCzech(x) ::: x is a Czech person.\nChoralConductor(x) ::: x is a choral conductor.\nMusician(x) ::: x is a musician.\nLove(x, y) ::: x loves y.\nAuthor(x, y) ::: x is the author of y.\nBook(x) ::: x is a book.\nPublish(x, y) ::: x is published in year y.\nSpecialize(x, y) ::: x specializes in y.\nPremises:\nCzech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque) ::: Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.\n∀x (ChoralConductor(x) → Musician(x)) ::: Any choral conductor is a musician.\n∃x (Musician(x) ∧ Love(x, music)) ::: Some musicians love music.\nBook(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946) ::: Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant.\nConclusion:\n¬∃x (ChoralConductor(x) ∧ Specialize(x, renaissance)) ::: No choral conductor specialized in the performance of Renaissance.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about"
    ]
  },
  {
    "id": "FOLIO_train_7",
    "context": "All eels are fish. No fish are plants. A thing is either a plant or animal. Nothing that breathes is paper. All animals breathe. If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Sea eel is an eel.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEel(x) ::: x is a sea eel.\nFish(x) ::: x is a fish.\nPlant(x) ::: x is a plant.\nAnimal(x) ::: x is an animal.\nBreathe(x) ::: x breathes.\nPaper(x) ::: x is paper.\nPremises:\n∀x (Eel(x) → Fish(x)) ::: All eels are fish.\n∀x (Fish(x) → ¬Plant(x)) ::: No fish are plants.\n∀x (Plant(x) ⊕ Animal(x)) ::: A thing is either a plant or animal.\n∀x (Paper(x) → ¬Breathe(x)) ::: Nothing that breathes is paper.\n∀x (Animal(x) → Breathe(x)) ::: All animals breathe.\n(Eel(seaEel) ∨ Plant(seaEel)) → (Eel(seaEel) ⊕ Animal(seaEel)) ::: If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal.\nConclusion:\nEel(seaEel) ::: Sea eel is an eel.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither"
    ]
  },
  {
    "id": "FOLIO_train_8",
    "context": "All eels are fish. No fish are plants. A thing is either a plant or animal. Nothing that breathes is paper. All animals breathe. If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Sea eel is a paper.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEel(x) ::: x is a sea eel.\nFish(x) ::: x is a fish.\nPlant(x) ::: x is a plant.\nAnimal(x) ::: x is an animal.\nBreathe(x) ::: x breathes.\nPaper(x) ::: x is paper.\nPremises:\n∀x (Eel(x) → Fish(x)) ::: All eels are fish.\n∀x (Fish(x) → ¬Plant(x)) ::: No fish are plants.\n∀x (Plant(x) ⊕ Animal(x)) ::: A thing is either a plant or animal.\n∀x (Paper(x) → ¬Breathe(x)) ::: Nothing that breathes is paper.\n∀x (Animal(x) → Breathe(x)) ::: All animals breathe.\n(Eel(seaEel) ∨ Plant(seaEel)) → (Eel(seaEel) ∨ Animal(seaEel)) ::: If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal.\nConclusion:\nPaper(seaEel) ::: Sea eel is a paper.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a"
    ]
  },
  {
    "id": "FOLIO_train_9",
    "context": "All eels are fish. No fish are plants. A thing is either a plant or animal. Nothing that breathes is paper. All animals breathe. If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Sea eel breathes or is a paper.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEel(x) ::: x is a sea eel.\nFish(x) ::: x is a fish.\nPlant(x) ::: x is a plant.\nAnimal(x) ::: x is an animal.\nBreathe(x) ::: x breathes.\nPaper(x) ::: x is paper.\nPremises:\n∀x (Eel(x) → Fish(x)) ::: All eels are fish.\n∀x (Fish(x) → ¬Plant(x)) ::: No fish are plants.\n∀x (Plant(x) ⊕ Animal(x)) ::: A thing is either a plant or animal.\n∀x (Animal(x) → Breathe(x)) ::: All animals breathe.\n∀x (Breathe(x) → ¬Paper(x)) ::: Nothing that breathes is paper.\n(Eel(seaEel) ∨ Plant(seaEel)) → (Eel(seaEel) ⊕ Animal(seaEel)) ::: If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal.\nConclusion:\nBreathe(seaEel) ⊕ Paper(seaEel) ::: Sea eel breathes or is a paper.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either"
    ]
  },
  {
    "id": "FOLIO_train_10",
    "context": "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places. The Blake McFall Company Building was added to the National Register of Historic Places in 1990. The Emmet Building is a five-story building in Portland, Oregon. The Emmet Building was built in 1915. The Emmet Building is another name for the Blake McFall Company Building. John works at the Emmet Building.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A five-story building is built in 1915.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlakeMcFallCompanyBuilding(x) ::: x is the Blake McFall Company Building.\nEmmetBuilding(x) ::: x is the Emmet Building.\nCommercialWarehouse(x) ::: x is a commercial warehouse.\nNationalRegisterOfHistoricPlaces(x) ::: x is listed on the National Register of Historic Places.\nAdd(x, y) ::: x is added to y.\nFiveStoryBuilding(x) ::: x is a five-story building.\nPortlandOregon(x) ::: x is in Portland, Oregon.\nBuilt(x, y) ::: x is built in year y.\nAnotherName(x, y) ::: x is another name for y.\nWorks(x, y) ::: x works at y.\nPremises:\nCommercialWarehouse(blakeMcFallCompanyBuilding) ::: The Blake McFall Company Building is a commercial warehouse.\nNationalRegisterOfHistoricPlaces(blakeMcFallCompanyBuilding) ::: The Blake McFall Company Building is listed on the National Register of Historic Places.\nAdd(blakeMcFallCompanyBuilding, nationalRegisterOfHistoricPlaces) ::: The Blake McFall Company Building was added to the National Register of Historic Places.\nEmmetBuilding(emmetBuilding) ::: The Emmet Building is a five-story building in Portland, Oregon.\nBuilt(emmetBuilding, year1915) ::: The Emmet Building was built in 1915.\nAnotherName(emmetBuilding, blakeMcFallCompanyBuilding) ::: The Emmet Building is another name for the Blake McFall Company Building.\nWorks(john, emmetBuilding) ::: John works at the Emmet Building.\nConclusion:\n∃x (FiveStoryBuilding(x) ∧ Built(x, year1915)) ::: A five-story building is built in 1915.\n------"
    ]
  },
  {
    "id": "FOLIO_train_11",
    "context": "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places. The Blake McFall Company Building was added to the National Register of Historic Places in 1990. The Emmet Building is a five-story building in Portland, Oregon. The Emmet Building was built in 1915. The Emmet Building is another name for the Blake McFall Company Building. John works at the Emmet Building.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Blake McFall Company Building is located in Portland, Oregon.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlakeMcFallCompanyBuilding(x) ::: x is the Blake McFall Company Building.\nEmmetBuilding(x) ::: x is the Emmet Building.\nCommercialWarehouse(x) ::: x is a commercial warehouse.\nNationalRegisterOfHistoricPlaces(x) ::: x is listed on the National Register of Historic Places.\nAdd(x, y) ::: x is added to y.\nFiveStoryBuilding(x) ::: x is a five-story building.\nPortlandOregon(x) ::: x is located in Portland, Oregon.\nBuilt(x, y) ::: x is built in year y.\nAnotherName(x, y) ::: x is another name for y.\nWorksAt(x, y) ::: x works at y.\nPremises:\nCommercialWarehouse(blakeMcFallCompanyBuilding) ∧ NationalRegisterOfHistoricPlaces(blakeMcFallCompanyBuilding) ∧ Add(blakeMcFallCompanyBuilding, year1990) ::: The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places.\nEmmetBuilding(emmetBuilding) ∧ FiveStoryBuilding(emmetBuilding) ∧ Built(emmetBuilding, year1915) ::: The Emmet Building is a five-story building in Portland, Oregon.\nAnotherName(emmetBuilding, blakeMcFallCompanyBuilding) ::: The Emmet Building is another name for the Blake McFall Company Building.\nWorksAt(john, emmetBuilding) ::: John works at the Emmet Building.\nConclusion:\nPortlandOregon(blakeMcFallCompanyBuilding) ::: The Blake McFall Company Building is located in Portland, Oregon.\n------\nProblem:\nThe 1990s were a decade of the Gregorian calendar that began on January 1, 1990, and"
    ]
  },
  {
    "id": "FOLIO_train_12",
    "context": "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places. The Blake McFall Company Building was added to the National Register of Historic Places in 1990. The Emmet Building is a five-story building in Portland, Oregon. The Emmet Building was built in 1915. The Emmet Building is another name for the Blake McFall Company Building. John works at the Emmet Building.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? John started his current job in 1990.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlakeMcFallCompanyBuilding(x) ::: x is the Blake McFall Company Building.\nEmmetBuilding(x) ::: x is the Emmet Building.\nCommercialWarehouse(x) ::: x is a commercial warehouse.\nNationalRegisterOfHistoricPlaces(x) ::: x is listed on the National Register of Historic Places.\nAdd(x, y) ::: x was added to the National Register of Historic Places in year y.\nFiveStoryBuilding(x) ::: x is a five-story building.\nPortlandOregon(x) ::: x is in Portland, Oregon.\nBuilt(x, y) ::: x was built in year y.\nAnotherName(x, y) ::: x is another name for y.\nWork(x, y) ::: x works at y.\nPremises:\nBlakeMcFallCompanyBuilding(blakeMcFallCompanyBuilding) ∧ CommercialWarehouse(blakeMcFallCompanyBuilding) ∧ NationalRegisterOfHistoricPlaces(blakeMcFallCompanyBuilding) ∧ Add(blakeMcFallCompanyBuilding, year1990) ::: The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places. The Blake McFall Company Building was added to the National Register of Historic Places in 1990.\nEmmetBuilding(emmetBuilding) ∧ FiveStoryBuilding(emmetBuilding) ∧ PortlandOregon(emmetBuilding) ∧ Built(emmetBuilding, year1915) ::: The Emmet Building is a five-story building in Portland, Oregon. The Emmet Building was built in 1915.\nAnotherName(emmetBuilding, blakeMcFallCompanyBuilding) ::: The Emmet Building is another name for the Blake McFall Company Building.\nWork(john, emmetBuilding) ::: John works at the Emmet"
    ]
  },
  {
    "id": "FOLIO_train_13",
    "context": "William Dickinson was a British politician who sat in the House of Commons William Dickinson attended Westminster school for high school and then the University of Edinburgh. The University of Edinburgh is a university located in the United Kingdom. William Dickinson supported the Portland Whigs. People who supported the Portland Whigs did not get a seat in the Parliament.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? William Dickinson did not get a seat in the Parliament.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBritish(x) ::: x is a British person.\nPolitician(x) ::: x is a politician.\nSat(x, y) ::: x sat in y.\nHouseOfCommons(y) ::: y is the House of Commons.\nHighSchool(x) ::: x is a high school.\nWestminsterSchool(x) ::: x is Westminster school.\nUniversity(x) ::: x is a university.\nUnitedKingdom(x) ::: x is the United Kingdom.\nUniversityOfEdinburgh(x) ::: x is the University of Edinburgh.\nAttend(x, y) ::: x attended y.\nSupport(x, y) ::: x supported y.\nPortlandWhigs(y) ::: y is the Portland Whigs.\nGetSeat(x, y) ::: x got a seat in y.\nParliament(y) ::: y is the Parliament.\nPremises:\nBritish(williamDickinson) ∧ Politician(williamDickinson) ∧ Sat(williamDickinson, houseOfCommons) ∧ HighSchool(westminsterSchool) ∧ University(universityOfEdinburgh) ∧ UnitedKingdom(unitedKingdom) ∧ UniversityOfEdinburgh(universityOfEdinburgh) ∧ Support(williamDickinson, portlandWhigs) ∧ ¬GetSeat(williamDickinson, parliament) ::: William Dickinson was a British politician who sat in the House of Commons William Dickinson attended Westminster school for high school and then the University of Edinburgh. The University of Edinburgh is a university located in the United Kingdom. William Dickinson supported the Portland Whigs. People who supported the Portland Whigs did not get a seat in the Parliament.\nConclusion:\n¬GetSeat(williamDickinson, parliament) ::: William Dickinson did not get a seat in the"
    ]
  },
  {
    "id": "FOLIO_train_14",
    "context": "William Dickinson was a British politician who sat in the House of Commons William Dickinson attended Westminster school for high school and then the University of Edinburgh. The University of Edinburgh is a university located in the United Kingdom. William Dickinson supported the Portland Whigs. People who supported the Portland Whigs did not get a seat in the Parliament.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? William Dickinson went to schools located in the United Kingdom for both high school and university.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBritish(x) ::: x is a British person.\nPolitician(x) ::: x is a politician.\nHouseOfCommons(x) ::: x is a member of the House of Commons.\nAttend(x, y) ::: x attended y.\nHighSchool(x) ::: x is a high school.\nUniversity(x) ::: x is a university.\nUnitedKingdom(x) ::: x is located in the United Kingdom.\nSupport(x, y) ::: x supports y.\nPortlandWhigs(x) ::: x is a member of the Portland Whigs.\nParliament(x) ::: x is a member of the Parliament.\nPremises:\nBritish(williamDickinson) ∧ Politician(williamDickinson) ∧ HouseOfCommons(williamDickinson) ∧ Attend(williamDickinson, westminsterSchool) ∧ Attend(williamDickinson, universityOfEdinburgh) ::: William Dickinson was a British politician who sat in the House of Commons William Dickinson attended Westminster school for high school and then the University of Edinburgh.\nUniversity(universityOfEdinburgh) ∧ UnitedKingdom(universityOfEdinburgh) ::: The University of Edinburgh is a university located in the United Kingdom.\nSupport(williamDickinson, portlandWhigs) ::: William Dickinson supported the Portland Whigs.\n¬Parliament(x) ::: People who supported the Portland Whigs did not get a seat in the Parliament.\nConclusion:\nAttend(williamDickinson, highSchool) ∧ Attend(williamDickinson, university) ∧ UnitedKingdom(highSchool) ∧ UnitedKingdom(university) ::: William Dickinson went to schools located in the United Kingdom for both high school and university.\n------\nProblem:\nThe 1998 FIFA World"
    ]
  },
  {
    "id": "FOLIO_train_15",
    "context": "William Dickinson was a British politician who sat in the House of Commons William Dickinson attended Westminster school for high school and then the University of Edinburgh. The University of Edinburgh is a university located in the United Kingdom. William Dickinson supported the Portland Whigs. People who supported the Portland Whigs did not get a seat in the Parliament.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? William Dickinson attended university in the United Kingdom.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBritish(x) ::: x is a British person.\nPolitician(x) ::: x is a politician.\nSat(x, y) ::: x sat in y.\nHouseOfCommons(y) ::: y is the House of Commons.\nHighSchool(x) ::: x is a high school.\nWestminsterSchool(x) ::: x is Westminster school.\nUniversity(x) ::: x is a university.\nUnitedKingdom(x) ::: x is located in the United Kingdom.\nUniversityOfEdinburgh(x) ::: x is the University of Edinburgh.\nAttend(x, y) ::: x attended y.\nSupport(x, y) ::: x supported y.\nPortlandWhigs(y) ::: y is the Portland Whigs.\nGetSeat(x, y) ::: x got a seat in y.\nParliament(y) ::: y is the Parliament.\nPremises:\nBritish(williamDickinson) ∧ Politician(williamDickinson) ∧ Sat(williamDickinson, HouseOfCommons) ∧ HighSchool(westminsterSchool) ∧ University(universityOfEdinburgh) ∧ UnitedKingdom(universityOfEdinburgh) ∧ Attend(williamDickinson, westminsterSchool) ∧ Attend(williamDickinson, universityOfEdinburgh) ::: William Dickinson was a British politician who sat in the House of Commons William Dickinson attended Westminster school for high school and then the University of Edinburgh.\nUniversity(universityOfEdinburgh) ∧ UnitedKingdom(universityOfEdinburgh) ::: The University of Edinburgh is a university located in the United Kingdom.\nSupport(williamDickinson, portlandWhigs) ::: William Dickinson supported the Portland Whigs.\n∀x (Support(x, portlandWhigs"
    ]
  },
  {
    "id": "FOLIO_train_16",
    "context": "William Dickinson was a British politician who sat in the House of Commons William Dickinson attended Westminster school for high school and then the University of Edinburgh. The University of Edinburgh is a university located in the United Kingdom. William Dickinson supported the Portland Whigs. People who supported the Portland Whigs did not get a seat in the Parliament.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? William Dickinson sat in the House of Commons.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBritish(x) ::: x is a British person.\nPolitician(x) ::: x is a politician.\nSat(x, y) ::: x sat in y.\nHighSchool(x) ::: x is a high school.\nUniversity(x) ::: x is a university.\nAttend(x, y) ::: x attended y.\nLocated(x, y) ::: x is located in y.\nSupport(x, y) ::: x supported y.\nWhig(x) ::: x is a Whig.\nParliament(x) ::: x is a Parliament.\nGet(x, y) ::: x got y.\nSeat(x) ::: x is a seat.\nPremises:\nBritish(williamDickinson) ∧ Politician(williamDickinson) ∧ Sat(williamDickinson, houseOfCommons) ::: William Dickinson was a British politician who sat in the House of Commons\nHighSchool(westminsterSchool) ∧ Attend(williamDickinson, westminsterSchool) ::: William Dickinson attended Westminster school for high school\nUniversity(universityOfEdinburgh) ∧ Located(universityOfEdinburgh, unitedKingdom) ∧ Attend(williamDickinson, universityOfEdinburgh) ::: The University of Edinburgh is a university located in the United Kingdom. William Dickinson attended the University of Edinburgh.\nSupport(williamDickinson, portlandWhigs) ::: William Dickinson supported the Portland Whigs.\nWhig(portlandWhigs) ∧ ¬Get(portlandWhigs, seatInParliament) ::: People who supported the Portland Whigs did not get a seat in the Parliament.\nConclusion:\nSat(williamDickinson, houseOfCommons) ::: William Dickinson sat in the House of Commons.\n------\nProblem:\nThe 19"
    ]
  },
  {
    "id": "FOLIO_train_17",
    "context": "LanguageA is a universal language If a universal language exists, then for every two people if they both know the same universal language they can communicate. Katya cannot communicate with Danil. Katya knows LanguageA.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Danil knows LanguageA.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLanguageA(x) ::: x is LanguageA.\nUniversalLanguage(x) ::: x is a universal language.\nKnow(x, y) ::: x knows y.\nCommunicate(x, y) ::: x can communicate with y.\nPremises:\n∀x ∀y (UniversalLanguage(x) → (Know(x, y) ∧ Know(y, x) → Communicate(x, y))) ::: If a universal language exists, then for every two people if they both know the same universal language they can communicate.\n¬Communicate(katya, danil) ::: Katya cannot communicate with Danil.\nKnow(katya, languageA) ::: Katya knows LanguageA.\nConclusion:\nKnow(danil, languageA) ::: Danil knows LanguageA.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffe"
    ]
  },
  {
    "id": "FOLIO_train_18",
    "context": "All customers who are subscribed to AMC List are available to watch 3 movies every week without any additional fees. Some customers go to cinemas every week Customers either subscribe to AMC service or HBO service. Customers who prefer TV series more and will not watch TV series in cinemas. All customers who subscribe to HBO services prefer TV series to movies. James watches TV series in cinemas.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James goes to cinemas every week.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCustomer(x) ::: x is a customer.\nSubscribe(x, y) ::: x is subscribed to y.\nAMCList(x) ::: x is available to watch 3 movies every week without any additional fees.\nGo(x, y) ::: x goes to y.\nCinema(x) ::: x is a cinema.\nHBO(x) ::: x is a HBO service.\nPrefer(x, y) ::: x prefers y.\nTVSeries(x) ::: x is a TV series.\nMovie(x) ::: x is a movie.\nPremises:\n∀x (Subscribe(x, AMCList) → AMCList(x)) ::: All customers who are subscribed to AMC List are available to watch 3 movies every week without any additional fees.\n∃x (Customer(x) ∧ Go(x, cinema)) ::: Some customers go to cinemas every week.\n∀x (Customer(x) → (Subscribe(x, AMCService) ⊕ Subscribe(x, HBOService))) ::: Customers either subscribe to AMC service or HBO service.\n∀x (Customer(x) ∧ Prefer(x, TVSeries) → ¬Go(x, cinema)) ::: Customers who prefer TV series more and will not watch TV series in cinemas.\n∀x (Subscribe(x, HBOService) → Prefer(x, TVSeries)) ::: All customers who subscribe to HBO services prefer TV series to movies.\nGo(james, cinema) ∧ Prefer(james, TVSeries) ::: James watches TV series in cinemas.\nConclusion:\nGo(james, cinema) ::: James goes to cinemas every week.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffe"
    ]
  },
  {
    "id": "FOLIO_train_19",
    "context": "All customers who are subscribed to AMC List are available to watch 3 movies every week without any additional fees. Some customers go to cinemas every week Customers either subscribe to AMC service or HBO service. Customers who prefer TV series more and will not watch TV series in cinemas. All customers who subscribe to HBO services prefer TV series to movies. James watches TV series in cinemas.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James does not go to cinemas every week.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCustomer(x) ::: x is a customer.\nSubscribe(x, y) ::: x is subscribed to y.\nAMCList(x) ::: x is subscribed to AMC List.\nHBO(x) ::: x is subscribed to HBO service.\nMovie(x) ::: x is a movie.\nTVSeries(x) ::: x is a TV series.\nPrefer(x, y) ::: x prefers y.\nGo(x, y) ::: x goes to y.\nPremises:\n∀x (AMCList(x) → ∀y (Go(x, y) → ∃z (Movie(z) ∧ ∃w (Customer(w) ∧ Subscribe(w, AMCList) ∧ ∃v (Movie(v) ∧ ∃u (Customer(u) ∧ Subscribe(u, AMCList) ∧ ∃t (Movie(t) ∧ ∃s (Customer(s) ∧ Subscribe(s, AMCList) ∧ ∃r (Movie(r) ∧ ∃q (Customer(q) ∧ Subscribe(q, AMCList) ∧ ∃p (Movie(p) ∧ ∃o (Customer(o) ∧ Subscribe(o, AMCList) ∧ ∃n (Movie(n) ∧ ∃m (Customer(m) ∧ Subscribe(m, AMCList) ∧ ∃l (Movie(l) ∧ ∃k (Customer(k) ∧ Subscribe(k, AMCList) ∧ ∃j (Movie("
    ]
  },
  {
    "id": "FOLIO_train_20",
    "context": "All customers who are subscribed to AMC List are available to watch 3 movies every week without any additional fees. Some customers go to cinemas every week Customers either subscribe to AMC service or HBO service. Customers who prefer TV series more and will not watch TV series in cinemas. All customers who subscribe to HBO services prefer TV series to movies. James watches TV series in cinemas.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James goes to cinemas every week or watches 3 movies every week without any additional fees.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCustomer(x) ::: x is a customer.\nSubscribe(x, y) ::: x subscribes to y.\nAMCList(x) ::: x is subscribed to AMC List.\nHBO(x) ::: x is subscribed to HBO service.\nMovie(x) ::: x is a movie.\nTVSeries(x) ::: x is a TV series.\nWatch(x, y) ::: x watches y.\nPrefer(x, y) ::: x prefers y to x.\nPremises:\n∀x (AMCList(x) → Watch(x, Movie, 3, week)) ::: All customers who are subscribed to AMC List are available to watch 3 movies every week without any additional fees.\n∃x (Customer(x) ∧ Watch(x, Movie, week)) ::: Some customers go to cinemas every week.\n∀x (Customer(x) → (Subscribe(x, AMCList) ⊕ Subscribe(x, HBO))) ::: Customers either subscribe to AMC service or HBO service.\n∀x (Customer(x) ∧ Prefer(x, TVSeries) → ¬Watch(x, TVSeries, Cinema)) ::: Customers who prefer TV series more and will not watch TV series in cinemas.\n∀x (HBO(x) → Prefer(x, TVSeries, Movie)) ::: All customers who subscribe to HBO services prefer TV series to movies.\nWatch(james, TVSeries, Cinema) ::: James watches TV series in cinemas.\nConclusion:\nWatch(james, Movie, 3, week) ⊕ Go(james, Cinema, week) ::: James goes to cinemas every week or watches 3 movies every week without any additional fees.\n------"
    ]
  },
  {
    "id": "FOLIO_train_21",
    "context": "All customers who are subscribed to AMC List are available to watch 3 movies every week without any additional fees. Some customers go to cinemas every week Customers either subscribe to AMC service or HBO service. Customers who prefer TV series more and will not watch TV series in cinemas. All customers who subscribe to HBO services prefer TV series to movies. James watches TV series in cinemas.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If James does not both go to cinemas every week and subscribe to HBO service, then James is either available to watch 3 movies every week without any additional fees or he prefers TV more.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCustomer(x) ::: x is a customer.\nSubscribe(x, y) ::: x is subscribed to y.\nAMCList(x) ::: x is subscribed to AMC List.\nHBO(x) ::: x is subscribed to HBO service.\nMovie(x) ::: x is a movie.\nTVSeries(x) ::: x is a TV series.\nPrefer(x, y) ::: x prefers y.\nGo(x) ::: x goes to cinemas.\nPremises:\n∀x (AMCList(x) → ∀y (Movie(y) → ∃z (Go(z) ∧ ∃w (Watch(x, w) ∧ w = y)))) ::: All customers who are subscribed to AMC List are available to watch 3 movies every week without any additional fees.\n∃x (Customer(x) ∧ Go(x)) ::: Some customers go to cinemas every week.\n∀x (Customer(x) → (Subscribe(x, AMCList) ⊕ Subscribe(x, HBO))) ::: Customers either subscribe to AMC service or HBO service.\n∀x (Customer(x) ∧ Subscribe(x, HBO) → ∀y (TVSeries(y) → ∃z (Watch(x, z) ∧ z = y))) ::: Customers who prefer TV series more and will not watch TV series in cinemas.\n∀x (Customer(x) ∧ Subscribe(x, HBO) → Prefer(x, TVSeries)) ::: All customers who subscribe to HBO services prefer TV series to movies.\nWatch(james, TVSeries) ::: James watches TV series in cinemas"
    ]
  },
  {
    "id": "FOLIO_train_22",
    "context": "All customers who are subscribed to AMC List are available to watch 3 movies every week without any additional fees. Some customers go to cinemas every week Customers either subscribe to AMC service or HBO service. Customers who prefer TV series more and will not watch TV series in cinemas. All customers who subscribe to HBO services prefer TV series to movies. James watches TV series in cinemas.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If James is available to watch 3 movies every week without any additional fees and he watches TV series in cinemas, then he goes to cinemas every week and prefers TV series more.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCustomer(x) ::: x is a customer.\nSubscribe(x, y) ::: x is subscribed to y.\nAMCList(x) ::: x is subscribed to AMC List.\nHBO(x) ::: x is subscribed to HBO service.\nWatch(x, y) ::: x watches y.\nMovie(x) ::: x is a movie.\nTVSeries(x) ::: x is a TV series.\nCinema(x) ::: x is a cinema.\nPremises:\n∀x (AMCList(x) → Watch(x, 3, Movie)) ::: All customers who are subscribed to AMC List are available to watch 3 movies every week without any additional fees.\n∃x (Customer(x) ∧ Watch(x, everyWeek, Cinema)) ::: Some customers go to cinemas every week Customers either subscribe to AMC service or HBO service.\n∀x (Customer(x) → (Subscribe(x, AMCList) ⊕ Subscribe(x, HBO))) ::: Customers either subscribe to AMC service or HBO service.\n∀x (Customer(x) ∧ Subscribe(x, HBO) → Prefer(x, TVSeries, Movie)) ::: Customers who prefer TV series more and will not watch TV series in cinemas.\n∀x (Customer(x) ∧ Subscribe(x, HBO) → Prefer(x, TVSeries, Movie)) ::: All customers who subscribe to HBO services prefer TV series to movies.\nWatch(james, TVSeries, Cinema) ::: James watches TV series in cinemas.\nConclusion:\nWatch(james, everyWeek, Cinema) ∧ Prefer(james, TVSeries, Movie) ::: If James is"
    ]
  },
  {
    "id": "FOLIO_train_23",
    "context": "A La Liga soccer team ranks higher than another if it receives more points. If two La Liga soccer teams recieve the same points, the team which recieves more points from the games between the two teams ranks higher. Real Madrid and Barcelona are both La Liga soccer teams. In La Liga 2021-2022, Real Madrid recieves 86 points and Barcelon recieves 73 points. In La Liga 2021-2022, Real Madrid and Barcelona both recieve 3 points from the games between them.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? In La Liga 2021-2022, Real Madrid ranks higher than Barcelona.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLaLiga(x) ::: x is a La Liga soccer team.\nReceive(x, y, z) ::: x recieves y points from the games between x and z.\nPoint(x) ::: x is a point.\nRankHigher(x, y) ::: x ranks higher than y.\nPremises:\nLaLiga(realMadrid) ∧ LaLiga(barcelona) ::: Real Madrid and Barcelona are both La Liga soccer teams.\nReceive(realMadrid, barcelona, 3) ∧ Receive(barcelona, realMadrid, 3) ::: In La Liga 2021-2022, Real Madrid and Barcelona both recieve 3 points from the games between them.\nReceive(realMadrid, 86) ∧ Receive(barcelona, 73) ::: In La Liga 2021-2022, Real Madrid recieves 86 points and Barcelon recieves 73 points.\nConclusion:\nRankHigher(realMadrid, barcelona) ::: In La Liga 2021-2022, Real Madrid ranks higher than Barcelona.\n------\nProblem:\nA person is a student if and only if they are enrolled in a course. A person is a teacher if and only if they teach a course. A person is a professor if and only if they are a teacher and a student. A person is a student if and only if they are a professor.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? A person is a professor if and only if they are a teacher.\nBased on the above information, is the following statement true, false, or uncertain? A person is a professor if and only if they are a student.\nBased on the above information, is the following statement true, false"
    ]
  },
  {
    "id": "FOLIO_train_24",
    "context": "A La Liga soccer team ranks higher than another if it receives more points. If two La Liga soccer teams recieve the same points, the team which recieves more points from the games between the two teams ranks higher. Real Madrid and Barcelona are both La Liga soccer teams. In La Liga 2021-2022, Real Madrid recieves 86 points and Barcelon recieves 73 points. In La Liga 2021-2022, Real Madrid and Barcelona both recieve 3 points from the games between them.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? In La Liga 2021-2022, Barcelona ranks higher than Real Madrid.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLaLiga(x) ::: x is a La Liga soccer team.\nRankHigher(x, y) ::: x ranks higher than y.\nRecieve(x, y) ::: x recieves y points.\nPoint(x) ::: x is a point.\nGame(x) ::: x is a game.\nBetween(x, y) ::: x is a game between x and y.\nPremises:\nLaLiga(realMadrid) ∧ LaLiga(barcelona) ::: Real Madrid and Barcelona are both La Liga soccer teams.\nRecieve(realMadrid, 86) ∧ Recieve(barcelona, 73) ::: In La Liga 2021-2022, Real Madrid recieves 86 points and Barcelon recieves 73 points.\nRecieve(realMadrid, 3) ∧ Recieve(barcelona, 3) ::: In La Liga 2021-2022, Real Madrid and Barcelona both recieve 3 points from the games between them.\nConclusion:\nRankHigher(barcelona, realMadrid) ::: In La Liga 2021-2022, Barcelona ranks higher than Real Madrid.\n------\nProblem:\nA person is a student if they are enrolled in a university. A person is a professor if they teach at a university. A person is a teacher if they teach at a school. A person is a student if they are enrolled in a school. A person is a teacher if they teach at a university. A person is a professor if they teach at a school. A person is a teacher if they teach at a school. A person is a professor if they teach at a university. A person is a teacher if they teach at a school. A person is a professor if they teach at a university. A person is a teacher"
    ]
  },
  {
    "id": "FOLIO_train_25",
    "context": "Lawton Park is a neighbourhood in Seattle. All citizens of Lawton Park use the zip code 98199. Tom is a citizen of Lawton Park. Daniel uses the zip code 98199.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tom uses the zip code 98199.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCitizen(x) ::: x is a citizen.\nUse(x, y) ::: x uses y.\nZipCode(x) ::: x is a zip code.\nPremises:\n∀x (Citizen(x) → Use(x, zipCode98199)) ::: All citizens of Lawton Park use the zip code 98199.\nCitizen(tom) ::: Tom is a citizen of Lawton Park.\nUse(daniel, zipCode98199) ::: Daniel uses the zip code 98199.\nConclusion:\nUse(tom, zipCode98199) ::: Tom uses the zip code 98199.\n------\nProblem:\nThe number of people who are not in the room is equal to the number of people who are in the room.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The number of people who are in the room is equal to the number of people who are in the room.\n###\nPredicates:\nInTheRoom(x) ::: x is in the room.\nPremises:\n∀x (¬InTheRoom(x) ↔ InTheRoom(x)) ::: The number of people who are not in the room is equal to the number of people who are in the room.\nConclusion:\n∀x (InTheRoom(x) ↔ InTheRoom(x)) ::: The number of people who are in the room is equal to the number of people who are in the room.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that c"
    ]
  },
  {
    "id": "FOLIO_train_26",
    "context": "Lawton Park is a neighbourhood in Seattle. All citizens of Lawton Park use the zip code 98199. Tom is a citizen of Lawton Park. Daniel uses the zip code 98199.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tom doesn't use the zip code 98199.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCitizen(x) ::: x is a citizen.\nLawtonPark(x) ::: x is a neighbourhood in Seattle.\nUse(x, y) ::: x uses the zip code y.\nPremises:\n∀x (LawtonPark(x) → Citizen(x)) ::: All citizens of Lawton Park use the zip code 98199.\nCitizen(tom) ::: Tom is a citizen of Lawton Park.\nUse(daniel, 98199) ::: Daniel uses the zip code 98199.\nConclusion:\n¬Use(tom, 98199) ::: Tom doesn't use the zip code 98199.\n------\nProblem:\nThe number of people who are not students is equal to the number of people who are students.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The number of people who are not students is greater than the number of people who are students.\n###\nPredicates:\nStudent(x) ::: x is a student.\nPremises:\n∀x (Student(x) ↔ ¬Student(x)) ::: The number of people who are not students is equal to the number of people who are students.\nConclusion:\n∀x (Student(x) → ¬Student(x)) ::: The number of people who are not students is greater than the number of people who are students.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a"
    ]
  },
  {
    "id": "FOLIO_train_27",
    "context": "Lawton Park is a neighbourhood in Seattle. All citizens of Lawton Park use the zip code 98199. Tom is a citizen of Lawton Park. Daniel uses the zip code 98199.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tom is a citizen of Washington.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCitizen(x, y) ::: x is a citizen of y.\nUse(x, y) ::: x uses y.\nZipCode(x) ::: x is a zip code.\nPremises:\nCitizen(tom, lawtonPark) ::: Tom is a citizen of Lawton Park.\nUse(daniel, zipCode98199) ::: Daniel uses the zip code 98199.\nZipCode(zipCode98199) ::: 98199 is a zip code.\nConclusion:\nCitizen(tom, washington) ::: Tom is a citizen of Washington.\n------\nProblem:\nThe number of people who are not in the room is equal to the number of people who are in the room.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The number of people who are in the room is equal to the number of people who are not in the room.\n###\nPredicates:\nInTheRoom(x) ::: x is in the room.\nPremises:\n∀x (¬InTheRoom(x) ↔ InTheRoom(x)) ::: The number of people who are not in the room is equal to the number of people who are in the room.\nConclusion:\n∀x (InTheRoom(x) ↔ ¬InTheRoom(x)) ::: The number of people who are in the room is equal to the number of people who are not in the room.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware"
    ]
  },
  {
    "id": "FOLIO_train_28",
    "context": "Lawton Park is a neighbourhood in Seattle. All citizens of Lawton Park use the zip code 98199. Tom is a citizen of Lawton Park. Daniel uses the zip code 98199.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Daniel is a citizen of Lawton Park.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCitizen(x, y) ::: x is a citizen of y.\nUse(x, y) ::: x uses y.\nZipCode(x) ::: x is a zip code.\nPremises:\n∀x (Citizen(x, lawtonPark) → Use(x, zipCode98199)) ::: All citizens of Lawton Park use the zip code 98199.\nCitizen(tom, lawtonPark) ::: Tom is a citizen of Lawton Park.\nUse(daniel, zipCode98199) ::: Daniel uses the zip code 98199.\nConclusion:\nCitizen(daniel, lawtonPark) ::: Daniel is a citizen of Lawton Park.\n------\nProblem:\nThe 2018 FIFA World Cup was the 21st FIFA World Cup, a quadrennial international football tournament contested by the men's national teams of the member associations of FIFA. The tournament was held in Russia from 14 June to 15 July 2018, after the country was awarded the hosting rights in 2010. It was the first World Cup to be held in Eastern Europe, and the 11th time that it had been held in Europe. At an estimated cost of over $14.2 billion, it was the most expensive World Cup ever. It was also the first World Cup to use the video assistant referee (VAR) system.\nThe final took place on 15 July at the Luzhniki Stadium in Moscow, between France and Croatia. France won the match 4–2 to claim their second World Cup title, marking the fourth consecutive title won by a European team.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The 2018 FIFA World Cup was the 21st FIFA World Cup."
    ]
  },
  {
    "id": "FOLIO_train_29",
    "context": "If a legislator is found guilty of stealing government funds, they will be suspended from office. Tiffany T. Alston was a legislator in Maryland's House of Delegates from 2011 to 2013. Tiffany T. Alston was found guilty of stealing government funds in 2012.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tiffany T. Alston was suspended from the Maryland House of Delegates.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLegislator(x) ::: x is a legislator.\nFoundGuilty(x, y) ::: x is found guilty of y.\nSteal(x, y) ::: x steals y.\nGovernmentFunds(x) ::: x is government funds.\nSuspend(x, y) ::: x is suspended from y.\nOffice(x) ::: x is an office.\nPremises:\n∀x (FoundGuilty(x, Steal(x, GovernmentFunds(x))) → Suspend(x, Office(x))) ::: If a legislator is found guilty of stealing government funds, they will be suspended from office.\nLegislator(tiffany) ∧ FoundGuilty(tiffany, Steal(tiffany, GovernmentFunds(tiffany))) ::: Tiffany T. Alston was a legislator in Maryland's House of Delegates from 2011 to 2013. Tiffany T. Alston was found guilty of stealing government funds in 2012.\nConclusion:\nSuspend(tiffany, Office(tiffany)) ::: Tiffany T. Alston was suspended from the Maryland House of Delegates.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above"
    ]
  },
  {
    "id": "FOLIO_train_30",
    "context": "If a legislator is found guilty of stealing government funds, they will be suspended from office. Tiffany T. Alston was a legislator in Maryland's House of Delegates from 2011 to 2013. Tiffany T. Alston was found guilty of stealing government funds in 2012.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tiffany T. Alston was not suspended from the Maryland House of Delegates.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLegislator(x) ::: x is a legislator.\nFoundGuilty(x, y) ::: x is found guilty of y.\nSteal(x, y) ::: x steals y.\nGovernmentFunds(x) ::: x is government funds.\nSuspend(x, y) ::: x is suspended from y.\nOffice(x) ::: x is an office.\nPremises:\n∀x (FoundGuilty(x, Steal(x, GovernmentFunds(x))) → Suspend(x, Office(x))) ::: If a legislator is found guilty of stealing government funds, they will be suspended from office.\nLegislator(tiffany) ∧ FoundGuilty(tiffany, Steal(tiffany, GovernmentFunds(tiffany))) ∧ 2011 ≤ year ≤ 2013 ::: Tiffany T. Alston was a legislator in Maryland's House of Delegates from 2011 to 2013.\nFoundGuilty(tiffany, Steal(tiffany, GovernmentFunds(tiffany))) ∧ year2012 ::: Tiffany T. Alston was found guilty of stealing government funds in 2012.\nConclusion:\n¬Suspend(tiffany, Office(tiffany)) ::: Tiffany T. Alston was not suspended from the Maryland House of Delegates.\n------"
    ]
  },
  {
    "id": "FOLIO_train_31",
    "context": "If a legislator is found guilty of stealing government funds, they will be suspended from office. Tiffany T. Alston was a legislator in Maryland's House of Delegates from 2011 to 2013. Tiffany T. Alston was found guilty of stealing government funds in 2012.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tiffany T. Alston went to prison for stealing government funds.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLegislator(x) ::: x is a legislator.\nSteal(x, y) ::: x steals y.\nGovernmentFunds(x) ::: x is government funds.\nFoundGuilty(x, y) ::: x is found guilty of y.\nSuspend(x, y) ::: x is suspended from y.\nPrison(x) ::: x is in prison.\nPremises:\n∀x (FoundGuilty(x, Steal(x, GovernmentFunds(x))) → Suspend(x, Legislator(x))) ::: If a legislator is found guilty of stealing government funds, they will be suspended from office.\nLegislator(tiffany) ∧ FoundGuilty(tiffany, Steal(tiffany, GovernmentFunds(tiffany))) ::: Tiffany T. Alston was a legislator in Maryland's House of Delegates from 2011 to 2013. Tiffany T. Alston was found guilty of stealing government funds in 2012.\nConclusion:\nPrison(tiffany) ::: Tiffany T. Alston went to prison for stealing government funds.\n------\nProblem:\nIf a person is a student, then they are a person. If a person is a person, then they are a human. If a person is a human, then they are a mammal. If a person is a mammal, then they are an animal. If a person is an"
    ]
  },
  {
    "id": "FOLIO_train_32",
    "context": "Some fish may sting. Stonefish is a fish. It stings to step on a stonefish. Stonefish stings cause death if not treated. To treat stonefish stings, apply heat to the affected area or use an antivenom.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If you step on a stonefish and don’t use an antivenom, it will cause death.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFish(x) ::: x is a fish.\nStonefish(x) ::: x is a stonefish.\nSting(x) ::: x stings.\nStepOn(x, y) ::: x steps on y.\nStonefishSting(x) ::: x is a stonefish sting.\nCauseDeath(x) ::: x causes death.\nTreat(x, y) ::: x treats y.\nAntivenom(x) ::: x is an antivenom.\nApplyHeat(x, y) ::: x applies heat to y.\nPremises:\n∃x (Fish(x) ∧ Sting(x)) ::: Some fish may sting.\nStonefish(stonefish) ::: Stonefish is a fish.\nSting(stonefish) ::: It stings to step on a stonefish.\nStonefishSting(x) → CauseDeath(x) ::: Stonefish stings cause death if not treated.\nTreat(ApplyHeat(x, y), StonefishSting(y)) ∨ Treat(Antivenom(x), StonefishSting(y)) ::: To treat stonefish stings, apply heat to the affected area or use an antivenom.\nConclusion:\nStepOn(x, stonefish) ∧ ¬Treat(Antivenom(x), StonefishSting(x)) → CauseDeath(x) ::: If you step on a stonefish and don"
    ]
  },
  {
    "id": "FOLIO_train_33",
    "context": "Some fish may sting. Stonefish is a fish. It stings to step on a stonefish. Stonefish stings cause death if not treated. To treat stonefish stings, apply heat to the affected area or use an antivenom.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Stings of some fish can cause death if not treated.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFish(x) ::: x is a fish.\nSting(x) ::: x may sting.\nStonefish(x) ::: x is a stonefish.\nStepOn(x, y) ::: x steps on y.\nStingCauseDeath(x) ::: x stings cause death if not treated.\nTreat(x, y) ::: x treats y.\nHeat(x) ::: x is heat.\nAntivenom(x) ::: x is an antivenom.\nPremises:\n∃x (Fish(x) ∧ Sting(x)) ::: Some fish may sting.\nStonefish(stonefish) ::: Stonefish is a fish.\nSting(stonefish) ::: It stings to step on a stonefish.\nStingCauseDeath(stonefish) ::: Stonefish stings cause death if not treated.\nTreat(heat, stonefishSting) ∨ Treat(antivenom, stonefishSting) ::: To treat stonefish stings, apply heat to the affected area or use an antivenom.\nConclusion:\n∃x (Fish(x) ∧ Sting(x) ∧ StingCauseDeath(x)) ::: Stings of some fish can cause death if not treated.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine."
    ]
  },
  {
    "id": "FOLIO_train_34",
    "context": "Some fish may sting. Stonefish is a fish. It stings to step on a stonefish. Stonefish stings cause death if not treated. To treat stonefish stings, apply heat to the affected area or use an antivenom.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If you step on a stonefish and apply heat to the affected area, stings will cause death.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFish(x) ::: x is a fish.\nStonefish(x) ::: x is a stonefish.\nSting(x) ::: x stings.\nStepOn(x, y) ::: x steps on y.\nStingCauseDeath(x) ::: x stings cause death.\nTreat(x, y) ::: x treats y.\nHeat(x) ::: x is heat.\nAntivenom(x) ::: x is an antivenom.\nPremises:\n∃x (Fish(x) ∧ Sting(x)) ::: Some fish may sting.\nStonefish(stonefish) ::: Stonefish is a fish.\nSting(stonefish) ::: It stings to step on a stonefish.\nStingCauseDeath(stonefish) ::: Stonefish stings cause death if not treated.\nTreat(Heat(x), stonefish) ∨ Treat(Antivenom(x), stonefish) ::: To treat stonefish stings, apply heat to the affected area or use an antivenom.\nConclusion:\nStepOn(x, stonefish) ∧ Treat(Heat(x), stonefish) → StingCauseDeath(stonefish) ::: If you step on a stonefish and apply heat to the affected area, stings will cause death.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being add"
    ]
  },
  {
    "id": "FOLIO_train_35",
    "context": "Some monitors produced by LG have a type-c port. If the monitor has a type-c port, then it is not produced by AOC. All monitors in the library are produced by AOC. L-2021 is either in the library or has a type-c port. L-2021 is either produced by AOC and produced by LG, or neither produced by AOC nor produced by LG.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? L-2021 is in the library.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTypeC(x) ::: x has a type-c port.\nProducedBy(x, y) ::: x is produced by y.\nLibrary(x) ::: x is in the library.\nLG(x) ::: x is produced by LG.\nAOC(x) ::: x is produced by AOC.\nPremises:\n∃x (LG(x) ∧ TypeC(x)) ::: Some monitors produced by LG have a type-c port.\n∀x (TypeC(x) → ¬ProducedBy(x, aoc)) ::: If the monitor has a type-c port, then it is not produced by AOC.\n∀x (Library(x) → ProducedBy(x, aoc)) ::: All monitors in the library are produced by AOC.\nLibrary(l-2021) ⊕ TypeC(l-2021) ::: L-2021 is either in the library or has a type-c port.\n(ProducedBy(l-2021, aoc) ∧ ProducedBy(l-2021, lg)) ⊕ ¬(ProducedBy(l-2021, aoc) ∨ ProducedBy(l-2021, lg)) ::: L-2021 is either produced by AOC and produced by LG, or neither produced by AOC nor produced by LG."
    ]
  },
  {
    "id": "FOLIO_train_36",
    "context": "Some monitors produced by LG have a type-c port. If the monitor has a type-c port, then it is not produced by AOC. All monitors in the library are produced by AOC. L-2021 is either in the library or has a type-c port. L-2021 is either produced by AOC and produced by LG, or neither produced by AOC nor produced by LG.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? L-2021 is either in the library or produced by LG.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTypeC(x) ::: x has a type-c port.\nProducedBy(x, y) ::: x is produced by y.\nLibrary(x) ::: x is in the library.\nLG(x) ::: x is produced by LG.\nAOC(x) ::: x is produced by AOC.\nPremises:\n∃x (Monitor(x) ∧ ProducedBy(x, lg) ∧ TypeC(x)) ::: Some monitors produced by LG have a type-c port.\n∀x (TypeC(x) → ¬ProducedBy(x, aoc)) ::: If the monitor has a type-c port, then it is not produced by AOC.\n∀x (Monitor(x) ∧ Library(x) → ProducedBy(x, aoc)) ::: All monitors in the library are produced by AOC.\nLibrary(l-2021) ⊕ TypeC(l-2021) ::: L-2021 is either in the library or has a type-c port.\n(ProducedBy(l-2021, aoc) ∧ ProducedBy(l-2021, lg)) ⊕ ¬(ProducedBy(l-2021, aoc) ∨ ProducedBy(l-2021, lg)) ::: L-2021 is either produced by A"
    ]
  },
  {
    "id": "FOLIO_train_37",
    "context": "Some monitors produced by LG have a type-c port. If the monitor has a type-c port, then it is not produced by AOC. All monitors in the library are produced by AOC. L-2021 is either in the library or has a type-c port. L-2021 is either produced by AOC and produced by LG, or neither produced by AOC nor produced by LG.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? L-2021 either has a type-c port or is produced by LG.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTypeC(x) ::: x has a type-c port.\nProducedBy(x, y) ::: x is produced by y.\nLibrary(x) ::: x is in the library.\nLG(x) ::: x is produced by LG.\nAOC(x) ::: x is produced by AOC.\nPremises:\n∃x (Monitor(x) ∧ TypeC(x) ∧ ProducedBy(x, lg)) ::: Some monitors produced by LG have a type-c port.\n∀x (TypeC(x) → ¬ProducedBy(x, aoc)) ::: If the monitor has a type-c port, then it is not produced by AOC.\n∀x (Monitor(x) → ProducedBy(x, aoc)) ::: All monitors in the library are produced by AOC.\nLibrary(l-2021) ⊕ TypeC(l-2021) ::: L-2021 is either in the library or has a type-c port.\n(ProducedBy(l-2021, aoc) ∧ ProducedBy(l-2021, lg)) ⊕ ¬(ProducedBy(l-2021, aoc) ∨ ProducedBy(l-2021, lg)) ::: L-2021 is either produced by AOC and produced by LG, or"
    ]
  },
  {
    "id": "FOLIO_train_38",
    "context": "Some monitors produced by LG have a type-c port. If the monitor has a type-c port, then it is not produced by AOC. All monitors in the library are produced by AOC. L-2021 is either in the library or has a type-c port. L-2021 is either produced by AOC and produced by LG, or neither produced by AOC nor produced by LG.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If L-2021 is either in the library and produced by LG, or neither in the library nor produced by LG,  then L-2021 neither has a type-c port nor is produced by LG.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTypeC(x) ::: x has a type-c port.\nProducedBy(x, y) ::: x is produced by y.\nLibrary(x) ::: x is in the library.\nLG(x) ::: x is produced by LG.\nAOC(x) ::: x is produced by AOC.\nPremises:\n∃x (LG(x) ∧ TypeC(x)) ::: Some monitors produced by LG have a type-c port.\n∀x (TypeC(x) → ¬ProducedBy(x, aoc)) ::: If the monitor has a type-c port, then it is not produced by AOC.\n∀x (Library(x) → ProducedBy(x, aoc)) ::: All monitors in the library are produced by AOC.\nLibrary(l-2021) ⊕ TypeC(l-2021) ::: L-2021 is either in the library or has a type-c port.\n(ProducedBy(l-2021, aoc) ∧ ProducedBy(l-2021, lg)) ⊕ ¬(ProducedBy(l-2021, aoc) ∨ ProducedBy(l-2021, lg)) ::: L-2021 is either produced by AOC and produced by LG, or neither produced by AOC nor produced by LG."
    ]
  },
  {
    "id": "FOLIO_train_39",
    "context": "Some monitors produced by LG have a type-c port. If the monitor has a type-c port, then it is not produced by AOC. All monitors in the library are produced by AOC. L-2021 is either in the library or has a type-c port. L-2021 is either produced by AOC and produced by LG, or neither produced by AOC nor produced by LG.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If L-2021 is either produced by LG and produced by AOC or neither produced by LG nor produced by AOC,  then L-2021 is either in the library or produced by LG.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTypeC(x) ::: x has a type-c port.\nProducedBy(x, y) ::: x is produced by y.\nLibrary(x) ::: x is in the library.\nLG(x) ::: x is produced by LG.\nAOC(x) ::: x is produced by AOC.\nPremises:\n∃x (Monitor(x) ∧ TypeC(x) ∧ ProducedBy(x, lg)) ::: Some monitors produced by LG have a type-c port.\n∀x (TypeC(x) → ¬ProducedBy(x, aoc)) ::: If the monitor has a type-c port, then it is not produced by AOC.\n∀x (Monitor(x) → ProducedBy(x, aoc)) ::: All monitors in the library are produced by AOC.\nLibrary(l-2021) ⊕ TypeC(l-2021) ::: L-2021 is either in the library or has a type-c port.\n(ProducedBy(l-2021, aoc) ∧ ProducedBy(l-2021, lg)) ⊕ ¬(ProducedBy(l-2021, aoc) ∨ ProducedBy(l-2021, lg)) ::: L-2021 is either produced by AOC and produced by LG, or"
    ]
  },
  {
    "id": "FOLIO_train_40",
    "context": "People eat meat regularly or are vegetation. If people eat meat regularly, then they enjoy eating hamburgers and steaks. All people who are vegetarian are conscious of the environment or their health. If people are conscious about the environment or their health, then they do not go to fast food places often. If people have busy schedules without time to cook, then they go to fast food places often. If Jeremy does not both go to fast food places often and is conscious about the environment or their health, then he goes to fast food places often.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jeremy has a busy schedule without time to cook.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEatMeat(x) ::: x eats meat regularly.\nVegetarian(x) ::: x is vegetarian.\nConscious(x, y) ::: x is conscious about y.\nEnjoy(x, y) ::: x enjoys y.\nGoToFastFoodPlaces(x) ::: x goes to fast food places often.\nHaveBusySchedule(x) ::: x has a busy schedule without time to cook.\nPremises:\n∀x (EatMeat(x) → Enjoy(x, hamburgers) ∧ Enjoy(x, steaks)) ::: If people eat meat regularly, then they enjoy eating hamburgers and steaks.\n∀x (Vegetarian(x) → Conscious(x, environment) ∨ Conscious(x, health)) ::: All people who are vegetarian are conscious of the environment or their health.\n∀x (Conscious(x, environment) ∨ Conscious(x, health) → ¬GoToFastFoodPlaces(x)) ::: If people are conscious about the environment or their health, then they do not go to fast food places often.\n∀x (HaveBusySchedule(x) → GoToFastFoodPlaces(x)) ::: If people have busy schedules without time to cook, then they go to fast food places often.\n∀x (¬(GoToFastFoodPlaces(x) ∧ Conscious(x, environment) ∨ Conscious(x, health)) → GoToFastFoodPlaces(x)) ::: If Jeremy does not both go to fast food places often and is conscious about the environment or their health, then he goes to fast food places often.\nConclusion:\nHaveBusySchedule(jeremy) ::: Jeremy has a busy schedule without time to cook.\n------"
    ]
  },
  {
    "id": "FOLIO_train_41",
    "context": "People eat meat regularly or are vegetation. If people eat meat regularly, then they enjoy eating hamburgers and steaks. All people who are vegetarian are conscious of the environment or their health. If people are conscious about the environment or their health, then they do not go to fast food places often. If people have busy schedules without time to cook, then they go to fast food places often. If Jeremy does not both go to fast food places often and is conscious about the environment or their health, then he goes to fast food places often.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jeremy has a busy schedule without time to cook or enjoy eating hamburgers and steaks.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEatMeat(x) ::: x eats meat regularly.\nVegetarian(x) ::: x is vegetarian.\nConscious(x, y) ::: x is conscious about y.\nEnvironment(x) ::: x is the environment.\nHealth(x) ::: x is health.\nEnjoy(x, y) ::: x enjoys y.\nHamburger(x) ::: x is a hamburger.\nSteak(x) ::: x is a steak.\nFastFood(x) ::: x is a fast food place.\nGo(x, y) ::: x goes to y.\nSchedule(x) ::: x is a schedule.\nCook(x) ::: x is cooking.\nTime(x) ::: x is time.\nPremises:\n∀x (EatMeat(x) → Enjoy(x, hamburger) ∧ Enjoy(x, steak)) ::: If people eat meat regularly, then they enjoy eating hamburgers and steaks.\n∀x (Vegetarian(x) → Conscious(x, environment) ∨ Conscious(x, health)) ::: All people who are vegetarian are conscious of the environment or their health.\n∀x (Conscious(x, environment) ∨ Conscious(x, health) → ¬Go(x, fastFood)) ::: If people are conscious about the environment or their health, then they do not go to fast food places often.\n∀x (Schedule(x) ∧ ¬Time(x, cook) → Go(x, fastFood)) ::: If people have busy schedules without time to cook, then they go to fast food places often.\n∀x (¬(Go(x, fastFood) ∧ Conscious(x, environment"
    ]
  },
  {
    "id": "FOLIO_train_42",
    "context": "People eat meat regularly or are vegetation. If people eat meat regularly, then they enjoy eating hamburgers and steaks. All people who are vegetarian are conscious of the environment or their health. If people are conscious about the environment or their health, then they do not go to fast food places often. If people have busy schedules without time to cook, then they go to fast food places often. If Jeremy does not both go to fast food places often and is conscious about the environment or their health, then he goes to fast food places often.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Jeremy has a busy schedule without time to cook or enjoy eating hamburgers and steaks, then Jeremy neither has a busy schedule without having time to cook nor enjoys eating hamburgers and steaks.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEatMeat(x) ::: x eats meat regularly.\nVegetarian(x) ::: x is vegetarian.\nConscious(x, y) ::: x is conscious about y.\nEnvironment(x) ::: x is the environment.\nHealth(x) ::: x is health.\nEnjoy(x, y) ::: x enjoys y.\nHamburger(x) ::: x is a hamburger.\nSteak(x) ::: x is a steak.\nFastFood(x) ::: x is a fast food place.\nSchedule(x) ::: x is a schedule.\nCook(x) ::: x is cooking.\nPremises:\n∀x (EatMeat(x) → Enjoy(x, hamburger) ∧ Enjoy(x, steak)) ::: If people eat meat regularly, then they enjoy eating hamburgers and steaks.\n∀x (Vegetarian(x) → (Conscious(x, environment) ∨ Conscious(x, health))) ::: All people who are vegetarian are conscious of the environment or their health.\n∀x (Conscious(x, environment) ∨ Conscious(x, health) → ¬GoToFastFood(x)) ::: If people are conscious about the environment or their health, then they do not go to fast food places often.\n∀x (Schedule(x) ∧ ¬TimeToCook(x) → GoToFastFood(x)) ::: If people have busy schedules without time to cook, then they go to fast food places often.\n∀x (¬(GoToFastFood(x) ∧ Conscious(x, environment) ∨ Conscious(x, health)) → GoToFastFood(x)) :::"
    ]
  },
  {
    "id": "FOLIO_train_43",
    "context": "Sam is doing a project. A project is written either in C++ or in Python. If Sam does a project written in Python, he will not use a Mac. Sam is using a Mac. If Sam uses a Mac, he will play a song. If a song is not \"Perfect\", Sam will never play it.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The project Sam is doing is written in C++.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProject(x) ::: x is a project.\nWrittenIn(x, y) ::: x is written in y.\nC++(x) ::: x is written in C++.\nPython(x) ::: x is written in Python.\nDo(x, y) ::: x does y.\nMac(x) ::: x is a Mac.\nUse(x, y) ::: x uses y.\nPlay(x, y) ::: x plays y.\nSong(x) ::: x is a song.\nPerfect(x) ::: x is \"Perfect\".\nPremises:\nProject(project) ∧ WrittenIn(project, c++) ∨ WrittenIn(project, python) ::: A project is written either in C++ or in Python.\nDo(sam, project) ::: Sam is doing a project.\n∀x (Do(sam, x) ∧ WrittenIn(x, python) → ¬Use(sam, mac)) ::: If Sam does a project written in Python, he will not use a Mac.\nUse(sam, mac) ::: Sam is using a Mac.\n∀x (Use(sam, mac) → Play(sam, x)) ::: If Sam uses a Mac, he will play a song.\n∀x (Play(sam, x) → ¬Perfect(x)) ::: If a song is not \"Perfect\", Sam will never play it.\nConclusion:\nWrittenIn(project, c++) ::: The project Sam is doing is written in C++.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and un"
    ]
  },
  {
    "id": "FOLIO_train_44",
    "context": "Sam is doing a project. A project is written either in C++ or in Python. If Sam does a project written in Python, he will not use a Mac. Sam is using a Mac. If Sam uses a Mac, he will play a song. If a song is not \"Perfect\", Sam will never play it.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The song Sam is playing is \"Perfect\".",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProject(x) ::: x is a project.\nWrittenIn(x, y) ::: x is written in y.\nC++(x) ::: x is written in C++.\nPython(x) ::: x is written in Python.\nDo(x, y) ::: x does y.\nMac(x) ::: x is a Mac.\nUse(x, y) ::: x uses y.\nPlay(x, y) ::: x plays y.\nSong(x) ::: x is a song.\nPerfect(x) ::: x is \"Perfect\".\nPremises:\nProject(samProject) ∧ (WrittenIn(samProject, c++) ⊕ WrittenIn(samProject, python)) ::: Sam is doing a project. A project is written either in C++ or in Python.\nDo(sam, samProject) ::: If Sam does a project written in Python, he will not use a Mac.\nUse(sam, mac) ::: Sam is using a Mac.\nPlay(sam, song) ::: If Sam uses a Mac, he will play a song.\n∀x (Play(sam, x) → ¬Perfect(x)) ::: If a song is not \"Perfect\", Sam will never play it.\nConclusion:\nPlay(sam, perfect) ::: The song Sam is playing is \"Perfect\".\n------\nProblem:\nA person is either a student or a teacher. A student is a person who is not a teacher. A teacher is a person who is not a student. A person is either a student or a teacher.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? A person is a student.\nBased on the above information, is the following statement true, false, or uncertain? A person is a teacher.\n###\nPredicates:\nPerson(x) ::"
    ]
  },
  {
    "id": "FOLIO_train_45",
    "context": "Sam is doing a project. A project is written either in C++ or in Python. If Sam does a project written in Python, he will not use a Mac. Sam is using a Mac. If Sam uses a Mac, he will play a song. If a song is not \"Perfect\", Sam will never play it.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If a song is \"Perfect\", Sam will play it.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProject(x) ::: x is a project.\nWrittenIn(x, y) ::: x is written in y.\nC++(x) ::: x is written in C++.\nPython(x) ::: x is written in Python.\nDo(x, y) ::: x does y.\nMac(x) ::: x is a Mac.\nUse(x, y) ::: x uses y.\nPlay(x, y) ::: x plays y.\nSong(x) ::: x is a song.\nPerfect(x) ::: x is \"Perfect\".\nPremises:\nProject(samProject) ∧ (WrittenIn(samProject, c++) ⊕ WrittenIn(samProject, python)) ::: Sam is doing a project. A project is written either in C++ or in Python.\nDo(sam, samProject) ::: If Sam does a project written in Python, he will not use a Mac.\nUse(sam, mac) ::: Sam is using a Mac.\nPlay(sam, song) ::: If Sam uses a Mac, he will play a song.\n∀x (Play(sam, x) → ¬Perfect(x)) ::: If a song is not \"Perfect\", Sam will never play it.\nConclusion:\n∀x (Perfect(x) → Play(sam, x)) ::: If a song is \"Perfect\", Sam will play it.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person"
    ]
  },
  {
    "id": "FOLIO_train_46",
    "context": "All rabbits have fur Some pets are rabbits.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Some pets do not have fur.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRabbit(x) ::: x is a rabbit.\nFur(x) ::: x has fur.\nPet(x) ::: x is a pet.\nPremises:\n∀x (Rabbit(x) → Fur(x)) ::: All rabbits have fur\n∃x (Pet(x) ∧ Rabbit(x)) ::: Some pets are rabbits.\nConclusion:\n∃x (Pet(x) ∧ ¬Fur(x)) ::: Some pets do not have fur.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.\n###\nPredicates:\nDependent(x) ::: x is a person"
    ]
  },
  {
    "id": "FOLIO_train_47",
    "context": "All video applications are software. All YouTube-related applications are video applications. An APP is either related to YouTube or Instagram. All Instagram is entertainment. All software is programmed. All entertainments are interesting. If something is interesting, then it is good. TikTok is not good.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tiktok is a program.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nVideoApplication(x) ::: x is a video application.\nSoftware(x) ::: x is software.\nYouTubeRelatedApplication(x) ::: x is a YouTube-related application.\nInstagramRelatedApplication(x) ::: x is an Instagram-related application.\nAPP(x) ::: x is an APP.\nEntertainment(x) ::: x is entertainment.\nProgrammed(x) ::: x is programmed.\nInteresting(x) ::: x is interesting.\nGood(x) ::: x is good.\nPremises:\n∀x (VideoApplication(x) → Software(x)) ::: All video applications are software.\n∀x (YouTubeRelatedApplication(x) → VideoApplication(x)) ::: All YouTube-related applications are video applications.\n∀x (APP(x) → (YouTubeRelatedApplication(x) ⊕ InstagramRelatedApplication(x))) ::: An APP is either related to YouTube or Instagram.\n∀x (InstagramRelatedApplication(x) → Entertainment(x)) ::: All Instagram is entertainment.\n∀x (Software(x) → Programmed(x)) ::: All software is programmed.\n∀x (Entertainment(x) → Interesting(x)) ::: All entertainments are interesting.\n∀x (Interesting(x) → Good(x)) ::: If something is interesting, then it is good.\n¬Good(tiktok) ::: TikTok is not good.\nConclusion:\nProgrammed(tiktok) ::: Tiktok is a program.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a"
    ]
  },
  {
    "id": "FOLIO_train_48",
    "context": "All video applications are software. All YouTube-related applications are video applications. An APP is either related to YouTube or Instagram. All Instagram is entertainment. All software is programmed. All entertainments are interesting. If something is interesting, then it is good. TikTok is not good.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tiktok is either good or a program.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nVideoApplication(x) ::: x is a video application.\nSoftware(x) ::: x is software.\nYouTubeRelatedApplication(x) ::: x is a YouTube-related application.\nInstagramRelatedApplication(x) ::: x is an Instagram-related application.\nAPP(x) ::: x is an APP.\nEntertainment(x) ::: x is entertainment.\nProgrammed(x) ::: x is programmed.\nInteresting(x) ::: x is interesting.\nGood(x) ::: x is good.\nPremises:\n∀x (VideoApplication(x) → Software(x)) ::: All video applications are software.\n∀x (YouTubeRelatedApplication(x) → VideoApplication(x)) ::: All YouTube-related applications are video applications.\n∀x (APP(x) → (YouTubeRelatedApplication(x) ⊕ InstagramRelatedApplication(x))) ::: An APP is either related to YouTube or Instagram.\n∀x (InstagramRelatedApplication(x) → Entertainment(x)) ::: All Instagram is entertainment.\n∀x (Software(x) → Programmed(x)) ::: All software is programmed.\n∀x (Entertainment(x) → Interesting(x)) ::: All entertainments are interesting.\n∀x (Interesting(x) → Good(x)) ::: If something is interesting, then it is good.\n¬Good(tiktok) ::: TikTok is not good.\nConclusion:\nGood(tiktok) ⊕ Programmed(tiktok) ::: Tiktok is either good or a program.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to"
    ]
  },
  {
    "id": "FOLIO_train_49",
    "context": "All video applications are software. All YouTube-related applications are video applications. An APP is either related to YouTube or Instagram. All Instagram is entertainment. All software is programmed. All entertainments are interesting. If something is interesting, then it is good. TikTok is not good.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tiktok is not both related to youtube and a program.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nVideoApplication(x) ::: x is a video application.\nSoftware(x) ::: x is software.\nYouTubeRelatedApplication(x) ::: x is a YouTube-related application.\nInstagramRelatedApplication(x) ::: x is an Instagram-related application.\nAPP(x) ::: x is an APP.\nEntertainment(x) ::: x is entertainment.\nInteresting(x) ::: x is interesting.\nGood(x) ::: x is good.\nProgrammed(x) ::: x is programmed.\nPremises:\n∀x (VideoApplication(x) → Software(x)) ::: All video applications are software.\n∀x (YouTubeRelatedApplication(x) → VideoApplication(x)) ::: All YouTube-related applications are video applications.\n∀x (APP(x) → (YouTubeRelatedApplication(x) ⊕ InstagramRelatedApplication(x))) ::: An APP is either related to YouTube or Instagram.\n∀x (InstagramRelatedApplication(x) → Entertainment(x)) ::: All Instagram is entertainment.\n∀x (Software(x) → Programmed(x)) ::: All software is programmed.\n∀x (Entertainment(x) → Interesting(x)) ::: All entertainments are interesting.\n∀x (Interesting(x) → Good(x)) ::: If something is interesting, then it is good.\n¬Good(tiktok) ::: TikTok is not good.\nConclusion:\n¬(APP(tiktok) ∧ Programmed(tiktok)) ::: Tiktok is not both related to youtube and a program.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one"
    ]
  },
  {
    "id": "FOLIO_train_50",
    "context": "All video applications are software. All YouTube-related applications are video applications. An APP is either related to YouTube or Instagram. All Instagram is entertainment. All software is programmed. All entertainments are interesting. If something is interesting, then it is good. TikTok is not good.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tiktok is either related to youtube or a program.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nVideoApplication(x) ::: x is a video application.\nSoftware(x) ::: x is software.\nYouTubeRelatedApplication(x) ::: x is a YouTube-related application.\nInstagramRelatedApplication(x) ::: x is an Instagram-related application.\nAPP(x) ::: x is an APP.\nEntertainment(x) ::: x is entertainment.\nProgrammed(x) ::: x is programmed.\nInteresting(x) ::: x is interesting.\nGood(x) ::: x is good.\nPremises:\n∀x (VideoApplication(x) → Software(x)) ::: All video applications are software.\n∀x (YouTubeRelatedApplication(x) → VideoApplication(x)) ::: All YouTube-related applications are video applications.\n∀x (APP(x) → (YouTubeRelatedApplication(x) ⊕ InstagramRelatedApplication(x))) ::: An APP is either related to YouTube or Instagram.\n∀x (InstagramRelatedApplication(x) → Entertainment(x)) ::: All Instagram is entertainment.\n∀x (Software(x) → Programmed(x)) ::: All software is programmed.\n∀x (Entertainment(x) → Interesting(x)) ::: All entertainments are interesting.\n∀x (Interesting(x) → Good(x)) ::: If something is interesting, then it is good.\n¬Good(tiktok) ::: TikTok is not good.\nConclusion:\nAPP(tiktok) ∧ (YouTubeRelatedApplication(tiktok) ⊕ Programmed(tiktok)) ::: Tiktok is either related to youtube or a program.\n------"
    ]
  },
  {
    "id": "FOLIO_train_51",
    "context": "Ordinary is an unincorporated community. Located within Elliot County, Ordinary is on Kentucky Route 32. Ordinary is located northwest of Sandy Hook.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There are no unincorporated communities along Kentucky Route 32.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nUnincorporatedCommunity(x) ::: x is an unincorporated community.\nLocatedWithin(x, y) ::: x is located within y.\nLocatedOn(x, y) ::: x is located on y.\nNorthwestOf(x, y) ::: x is located northwest of y.\nPremises:\nUnincorporatedCommunity(ordinary) ::: Ordinary is an unincorporated community.\nLocatedWithin(ordinary, elliotCounty) ::: Located within Elliot County,\nLocatedOn(ordinary, kentuckyRoute32) ::: Ordinary is on Kentucky Route 32.\nNorthwestOf(ordinary, sandyHook) ::: Ordinary is located northwest of Sandy Hook.\nConclusion:\n∃x (UnincorporatedCommunity(x) ∧ LocatedOn(x, kentuckyRoute32)) ::: There are no unincorporated communities along Kentucky Route 32.\n------\nProblem:\nThe 2010 census reported that the population of the United States was 308,745,538. The population of the United States in 2010 was 308,745,538. The population of the United States in 2010 was 308,745,538.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The population of the United States in 2010 was 308,745,538.\nBased on the above information, is the following statement true, false, or uncertain? The population of the United States in 2010"
    ]
  },
  {
    "id": "FOLIO_train_52",
    "context": "Ordinary is an unincorporated community. Located within Elliot County, Ordinary is on Kentucky Route 32. Ordinary is located northwest of Sandy Hook.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There is an unincorporated community in Elliot County.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nUnincorporatedCommunity(x) ::: x is an unincorporated community.\nLocatedWithin(x, y) ::: x is located within y.\nLocatedOn(x, y) ::: x is located on y.\nLocatedNorthwestOf(x, y) ::: x is located northwest of y.\nPremises:\nUnincorporatedCommunity(ordinary) ::: Ordinary is an unincorporated community.\nLocatedWithin(ordinary, elliotCounty) ::: Located within Elliot County, Ordinary is on Kentucky Route 32.\nLocatedOn(ordinary, kentuckyRoute32) ::: Ordinary is on Kentucky Route 32.\nLocatedNorthwestOf(ordinary, sandyHook) ::: Ordinary is located northwest of Sandy Hook.\nConclusion:\n∃x (UnincorporatedCommunity(x) ∧ LocatedWithin(x, elliotCounty)) ::: There is an unincorporated community in Elliot County.\n------\nProblem:\nThe 2010 census reported that the population of the United States was 308,745,538. The population of the United States in 2010 was 308,745,538. The population of the United States in 2010 was 308,745,538.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The population of the United States in 2010 was 308,745,538.\nBased on the above information, is the following statement true, false, or uncertain? The"
    ]
  },
  {
    "id": "FOLIO_train_53",
    "context": "All young adults go on a diet. All college students are young adults. All Yale students are college students. Someone is either a Yale student or a Harvard student. All Harvard students are diligent. If Susan is a Harvard student, then she is a young adult. If Susan is a Yale student, then she does not go on a diet.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Susan is a college student.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nYoungAdult(x) ::: x is a young adult.\nDiet(x) ::: x goes on a diet.\nCollegeStudent(x) ::: x is a college student.\nYaleStudent(x) ::: x is a Yale student.\nHarvardStudent(x) ::: x is a Harvard student.\nDiligent(x) ::: x is diligent.\nSusan(x) ::: x is Susan.\nPremises:\n∀x (YoungAdult(x) → Diet(x)) ::: All young adults go on a diet.\n∀x (CollegeStudent(x) → YoungAdult(x)) ::: All college students are young adults.\n∀x (YaleStudent(x) → CollegeStudent(x)) ::: All Yale students are college students.\n∃x (YaleStudent(x) ⊕ HarvardStudent(x)) ::: Someone is either a Yale student or a Harvard student.\n∀x (HarvardStudent(x) → Diligent(x)) ::: All Harvard students are diligent.\nSusan(susan) ∧ (HarvardStudent(susan) → YoungAdult(susan)) ::: If Susan is a Harvard student, then she is a young adult.\nSusan(susan) ∧ (YaleStudent(susan) → ¬Diet(susan)) ::: If Susan is a Yale student, then she does not go on a diet.\nConclusion:\nCollegeStudent(susan) ::: Susan is a college student.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to c"
    ]
  },
  {
    "id": "FOLIO_train_54",
    "context": "All young adults go on a diet. All college students are young adults. All Yale students are college students. Someone is either a Yale student or a Harvard student. All Harvard students are diligent. If Susan is a Harvard student, then she is a young adult. If Susan is a Yale student, then she does not go on a diet.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Susan goes on a diet and is diligent.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nYoungAdult(x) ::: x is a young adult.\nDiet(x) ::: x goes on a diet.\nCollegeStudent(x) ::: x is a college student.\nYaleStudent(x) ::: x is a Yale student.\nHarvardStudent(x) ::: x is a Harvard student.\nDiligent(x) ::: x is diligent.\nPremises:\n∀x (YoungAdult(x) → Diet(x)) ::: All young adults go on a diet.\n∀x (CollegeStudent(x) → YoungAdult(x)) ::: All college students are young adults.\n∀x (YaleStudent(x) → CollegeStudent(x)) ::: All Yale students are college students.\n∃x (YaleStudent(x) ⊕ HarvardStudent(x)) ::: Someone is either a Yale student or a Harvard student.\n∀x (HarvardStudent(x) → Diligent(x)) ::: All Harvard students are diligent.\nSusan(susan) ∧ (HarvardStudent(susan) → YoungAdult(susan)) ::: If Susan is a Harvard student, then she is a young adult.\nSusan(susan) ∧ (YaleStudent(susan) → ¬Diet(susan)) ::: If Susan is a Yale student, then she does not go on a diet.\nConclusion:\nDiet(susan) ∧ Diligent(susan) ::: Susan goes on a diet and is diligent.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted"
    ]
  },
  {
    "id": "FOLIO_train_55",
    "context": "All young adults go on a diet. All college students are young adults. All Yale students are college students. Someone is either a Yale student or a Harvard student. All Harvard students are diligent. If Susan is a Harvard student, then she is a young adult. If Susan is a Yale student, then she does not go on a diet.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Susan does not go on a diet and is diligent.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nYoungAdult(x) ::: x is a young adult.\nDiet(x) ::: x goes on a diet.\nCollegeStudent(x) ::: x is a college student.\nYaleStudent(x) ::: x is a Yale student.\nHarvardStudent(x) ::: x is a Harvard student.\nDiligent(x) ::: x is diligent.\nSusan(x) ::: x is Susan.\nPremises:\n∀x (YoungAdult(x) → Diet(x)) ::: All young adults go on a diet.\n∀x (CollegeStudent(x) → YoungAdult(x)) ::: All college students are young adults.\n∀x (YaleStudent(x) → CollegeStudent(x)) ::: All Yale students are college students.\n∃x (YaleStudent(x) ⊕ HarvardStudent(x)) ::: Someone is either a Yale student or a Harvard student.\n∀x (HarvardStudent(x) → Diligent(x)) ::: All Harvard students are diligent.\nSusan(susan) → YoungAdult(susan) ::: If Susan is a Harvard student, then she is a young adult.\nSusan(susan) → ¬Diet(susan) ::: If Susan is a Yale student, then she does not go on a diet.\nConclusion:\n¬Diet(susan) ∧ Diligent(susan) ::: Susan does not go on a diet and is diligent.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about"
    ]
  },
  {
    "id": "FOLIO_train_56",
    "context": "Vic DiCara plays guitar and bass. The only style of music Vic DiCara plays is punk music. Vic DiCara played in the band Inside Out.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Inside Out was a punk band.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPlay(x, y) ::: x plays y.\nStyle(x, y) ::: x is a style of music.\nBand(x) ::: x is a band.\nPremises:\nPlay(vicDiCara, guitar) ∧ Play(vicDiCara, bass) ::: Vic DiCara plays guitar and bass.\n∀x (Play(vicDiCara, x) → Style(x, punk)) ::: The only style of music Vic DiCara plays is punk music.\nBand(insideOut) ∧ Play(vicDiCara, insideOut) ::: Vic DiCara played in the band Inside Out.\nConclusion:\nStyle(insideOut, punk) ::: Inside Out was a punk band.\n------\nProblem:\nThe only thing that is both a mammal and a marsupial is a kangaroo. A kangaroo is a marsupial.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? A kangaroo is a mammal.\n###\nPredicates:\nMammal(x) ::: x is a mammal.\nMarsupial(x) ::: x is a marsupial.\nKangaroo(x) ::: x is a kangaroo.\nPremises:\n∀x (Mammal(x) ∧ Marsupial(x) → Kangaroo(x)) ::: The only thing that is both a mammal and a marsupial is a kangaroo.\nMarsupial(kangaroo) ::: A kangaroo is a marsupial.\nConclusion:\nMammal(kangaroo) ::: A"
    ]
  },
  {
    "id": "FOLIO_train_57",
    "context": "Vic DiCara plays guitar and bass. The only style of music Vic DiCara plays is punk music. Vic DiCara played in the band Inside Out.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A musician of Inside Out plays bass.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPlay(x, y) ::: x plays y.\nStyle(x, y) ::: x is a style of music.\nBand(x) ::: x is a band.\nPremises:\nPlay(vicDiCara, guitar) ∧ Play(vicDiCara, bass) ::: Vic DiCara plays guitar and bass.\n∀x (Play(vicDiCara, x) → Style(x, punk)) ::: The only style of music Vic DiCara plays is punk music.\nBand(insideOut) ∧ Play(vicDiCara, insideOut) ::: Vic DiCara played in the band Inside Out.\nConclusion:\n∃x (Band(x) ∧ Play(x, bass) ∧ Play(vicDiCara, x)) ::: A musician of Inside Out plays bass.\n------\nProblem:\nThe only style of music that Vic DiCara plays is punk music. Vic DiCara plays guitar and bass.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Vic DiCara plays guitar.\nBased on the above information, is the following statement true, false, or uncertain? Vic DiCara plays bass.\nBased on the above information, is the following statement true, false, or uncertain? Vic DiCara plays drums.\nBased on the above information, is the following statement true, false, or uncertain? Vic DiCara plays piano.\nBased on the above information, is the following statement true, false, or uncertain? Vic DiCara plays violin.\nBased on the above information, is the following statement true, false, or uncertain? Vic DiCara plays trumpet.\nBased on the above information, is the following statement true,"
    ]
  },
  {
    "id": "FOLIO_train_58",
    "context": "All athletes are good at sports. All Olympic gold medal winners are good athletes. No scientists are good at sports. All Nobel laureates are scientists. Amy is good at sports or Amy is an Olympic gold medal winner. If Amy is not a Nobel laureate, then Amy is not an Olympic gold medal winner.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Amy is an athlete.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAthlete(x) ::: x is an athlete.\nGoodAtSports(x) ::: x is good at sports.\nOlympicGoldMedalWinner(x) ::: x is an Olympic gold medal winner.\nScientist(x) ::: x is a scientist.\nNobelLaureate(x) ::: x is a Nobel laureate.\nPremises:\n∀x (Athlete(x) → GoodAtSports(x)) ::: All athletes are good at sports.\n∀x (OlympicGoldMedalWinner(x) → Athlete(x)) ::: All Olympic gold medal winners are good athletes.\n∀x (Scientist(x) → ¬GoodAtSports(x)) ::: No scientists are good at sports.\n∀x (NobelLaureate(x) → Scientist(x)) ::: All Nobel laureates are scientists.\nGoodAtSports(amy) ⊕ OlympicGoldMedalWinner(amy) ::: Amy is good at sports or Amy is an Olympic gold medal winner.\n¬NobelLaureate(amy) → ¬OlympicGoldMedalWinner(amy) ::: If Amy is not a Nobel laureate, then Amy is not an Olympic gold medal winner.\nConclusion:\nAthlete(amy) ::: Amy is an athlete.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student"
    ]
  },
  {
    "id": "FOLIO_train_59",
    "context": "All athletes are good at sports. All Olympic gold medal winners are good athletes. No scientists are good at sports. All Nobel laureates are scientists. Amy is good at sports or Amy is an Olympic gold medal winner. If Amy is not a Nobel laureate, then Amy is not an Olympic gold medal winner.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Amy is neither a scientist nor an Olympic gold medal winner.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAthlete(x) ::: x is an athlete.\nGoodAtSports(x) ::: x is good at sports.\nOlympicGoldMedalWinner(x) ::: x is an Olympic gold medal winner.\nScientist(x) ::: x is a scientist.\nNobelLaureate(x) ::: x is a Nobel laureate.\nPremises:\n∀x (Athlete(x) → GoodAtSports(x)) ::: All athletes are good at sports.\n∀x (OlympicGoldMedalWinner(x) → Athlete(x)) ::: All Olympic gold medal winners are good athletes.\n∀x (Scientist(x) → ¬GoodAtSports(x)) ::: No scientists are good at sports.\n∀x (NobelLaureate(x) → Scientist(x)) ::: All Nobel laureates are scientists.\nGoodAtSports(amy) ∨ OlympicGoldMedalWinner(amy) ::: Amy is good at sports or Amy is an Olympic gold medal winner.\n¬NobelLaureate(amy) → ¬OlympicGoldMedalWinner(amy) ::: If Amy is not a Nobel laureate, then Amy is not an Olympic gold medal winner.\nConclusion:\n¬(Scientist(amy) ∧ OlympicGoldMedalWinner(amy)) ::: Amy is neither a scientist nor an Olympic gold medal winner.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug."
    ]
  },
  {
    "id": "FOLIO_train_60",
    "context": "All athletes are good at sports. All Olympic gold medal winners are good athletes. No scientists are good at sports. All Nobel laureates are scientists. Amy is good at sports or Amy is an Olympic gold medal winner. If Amy is not a Nobel laureate, then Amy is not an Olympic gold medal winner.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Amy is not an Olympic gold medal winner, then Amy is a Nobel laureate.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAthlete(x) ::: x is an athlete.\nGoodAtSports(x) ::: x is good at sports.\nOlympicGoldMedalWinner(x) ::: x is an Olympic gold medal winner.\nScientist(x) ::: x is a scientist.\nNobelLaureate(x) ::: x is a Nobel laureate.\nPremises:\n∀x (Athlete(x) → GoodAtSports(x)) ::: All athletes are good at sports.\n∀x (OlympicGoldMedalWinner(x) → Athlete(x)) ::: All Olympic gold medal winners are good athletes.\n∀x (Scientist(x) → ¬GoodAtSports(x)) ::: No scientists are good at sports.\n∀x (NobelLaureate(x) → Scientist(x)) ::: All Nobel laureates are scientists.\nGoodAtSports(amy) ∨ OlympicGoldMedalWinner(amy) ::: Amy is good at sports or Amy is an Olympic gold medal winner.\n¬NobelLaureate(amy) → ¬OlympicGoldMedalWinner(amy) ::: If Amy is not a Nobel laureate, then Amy is not an Olympic gold medal winner.\nConclusion:\n¬OlympicGoldMedalWinner(amy) → NobelLaureate(amy) ::: If Amy is not an Olympic gold medal winner, then Amy is a Nobel laureate.\n------"
    ]
  },
  {
    "id": "FOLIO_train_61",
    "context": "All fruits with the color red contain a large amount of vitamin C. All apples are fruits with the color red. All fruits containing a large amount of vitamin C are beneficial to people. No fruits that are beneficial to people are on a warning list. If K is not beneficial to people and also not an apple, then it is a fruit with the color red.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? K is an apple.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRed(x) ::: x is a fruit with the color red.\nApple(x) ::: x is an apple.\nFruit(x) ::: x is a fruit.\nVitaminC(x) ::: x contains a large amount of vitamin C.\nBeneficial(x) ::: x is beneficial to people.\nWarningList(x) ::: x is on a warning list.\nPremises:\n∀x (Red(x) → VitaminC(x)) ::: All fruits with the color red contain a large amount of vitamin C.\n∀x (Apple(x) → Red(x)) ::: All apples are fruits with the color red.\n∀x (VitaminC(x) → Beneficial(x)) ::: All fruits containing a large amount of vitamin C are beneficial to people.\n∀x (Beneficial(x) → ¬WarningList(x)) ::: No fruits that are beneficial to people are on a warning list.\n¬Beneficial(k) ∧ ¬Apple(k) → Red(k) ::: If K is not beneficial to people and also not an apple, then it is a fruit with the color red.\nConclusion:\nApple(k) ::: K is an apple.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug"
    ]
  },
  {
    "id": "FOLIO_train_62",
    "context": "All fruits with the color red contain a large amount of vitamin C. All apples are fruits with the color red. All fruits containing a large amount of vitamin C are beneficial to people. No fruits that are beneficial to people are on a warning list. If K is not beneficial to people and also not an apple, then it is a fruit with the color red.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? K either contains a large amount of vitamin C or is on a warning list.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRed(x) ::: x is a fruit with the color red.\nApple(x) ::: x is an apple.\nVitaminC(x) ::: x contains a large amount of vitamin C.\nBeneficial(x) ::: x is beneficial to people.\nWarningList(x) ::: x is on a warning list.\nPremises:\n∀x (Red(x) → VitaminC(x)) ::: All fruits with the color red contain a large amount of vitamin C.\n∀x (Apple(x) → Red(x)) ::: All apples are fruits with the color red.\n∀x (VitaminC(x) → Beneficial(x)) ::: All fruits containing a large amount of vitamin C are beneficial to people.\n∀x (Beneficial(x) → ¬WarningList(x)) ::: No fruits that are beneficial to people are on a warning list.\n(¬Beneficial(k) ∧ ¬Apple(k)) → Red(k) ::: If K is not beneficial to people and also not an apple, then it is a fruit with the color red.\nConclusion:\n(VitaminC(k) ⊕ WarningList(k)) ::: K either contains a large amount of vitamin C or is on a warning list.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to"
    ]
  },
  {
    "id": "FOLIO_train_63",
    "context": "All fruits with the color red contain a large amount of vitamin C. All apples are fruits with the color red. All fruits containing a large amount of vitamin C are beneficial to people. No fruits that are beneficial to people are on a warning list. If K is not beneficial to people and also not an apple, then it is a fruit with the color red.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? K is either on a warning list or with the color red.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRed(x) ::: x is a fruit with the color red.\nApple(x) ::: x is an apple.\nVitaminC(x) ::: x contains a large amount of vitamin C.\nBeneficial(x) ::: x is beneficial to people.\nWarningList(x) ::: x is on a warning list.\nPremises:\n∀x (Red(x) → VitaminC(x)) ::: All fruits with the color red contain a large amount of vitamin C.\n∀x (Apple(x) → Red(x)) ::: All apples are fruits with the color red.\n∀x (VitaminC(x) → Beneficial(x)) ::: All fruits containing a large amount of vitamin C are beneficial to people.\n∀x (Beneficial(x) → ¬WarningList(x)) ::: No fruits that are beneficial to people are on a warning list.\n¬Beneficial(k) ∧ ¬Apple(k) → Red(k) ::: If K is not beneficial to people and also not an apple, then it is a fruit with the color red.\nConclusion:\nWarningList(k) ⊕ Red(k) ::: K is either on a warning list or with the color red.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine"
    ]
  },
  {
    "id": "FOLIO_train_64",
    "context": "All fruits with the color red contain a large amount of vitamin C. All apples are fruits with the color red. All fruits containing a large amount of vitamin C are beneficial to people. No fruits that are beneficial to people are on a warning list. If K is not beneficial to people and also not an apple, then it is a fruit with the color red.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If K is either beneficial to people or on a warning list, then it is not red.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRed(x) ::: x is a fruit with the color red.\nApple(x) ::: x is an apple.\nVitaminC(x) ::: x contains a large amount of vitamin C.\nBeneficial(x) ::: x is beneficial to people.\nWarningList(x) ::: x is on a warning list.\nPremises:\n∀x (Red(x) → VitaminC(x)) ::: All fruits with the color red contain a large amount of vitamin C.\n∀x (Apple(x) → Red(x)) ::: All apples are fruits with the color red.\n∀x (VitaminC(x) → Beneficial(x)) ::: All fruits containing a large amount of vitamin C are beneficial to people.\n∀x (Beneficial(x) → ¬WarningList(x)) ::: No fruits that are beneficial to people are on a warning list.\n¬Beneficial(k) ⊕ ¬Apple(k) → Red(k) ::: If K is not beneficial to people and also not an apple, then it is a fruit with the color red.\nConclusion:\n(Beneficial(k) ∨ WarningList(k)) → ¬Red(k) ::: If K is either beneficial to people or on a warning list, then it is not red.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one"
    ]
  },
  {
    "id": "FOLIO_train_65",
    "context": "All fruits with the color red contain a large amount of vitamin C. All apples are fruits with the color red. All fruits containing a large amount of vitamin C are beneficial to people. No fruits that are beneficial to people are on a warning list. If K is not beneficial to people and also not an apple, then it is a fruit with the color red.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If K is either on a warning list or with the color red, then it is not beneficial to people and does not contain a large amount of vitamin C.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRed(x) ::: x is a fruit with the color red.\nApple(x) ::: x is an apple.\nVitaminC(x) ::: x contains a large amount of vitamin C.\nBeneficial(x) ::: x is beneficial to people.\nWarningList(x) ::: x is on a warning list.\nPremises:\n∀x (Red(x) → VitaminC(x)) ::: All fruits with the color red contain a large amount of vitamin C.\n∀x (Apple(x) → Red(x)) ::: All apples are fruits with the color red.\n∀x (VitaminC(x) → Beneficial(x)) ::: All fruits containing a large amount of vitamin C are beneficial to people.\n∀x (Beneficial(x) → ¬WarningList(x)) ::: No fruits that are beneficial to people are on a warning list.\n(¬Beneficial(k) ∧ ¬Apple(k)) → Red(k) ::: If K is not beneficial to people and also not an apple, then it is a fruit with the color red.\nConclusion:\n(WarningList(k) ⊕ Red(k)) → (¬Beneficial(k) ∧ ¬VitaminC(k)) ::: If K is either on a warning list or with the color red, then it is not beneficial to people and does not contain a large amount of vitamin C.\n------\nProblem:\nAll people who regularly"
    ]
  },
  {
    "id": "FOLIO_train_66",
    "context": "Everyone working at Meta has a high income. If a person has a high income, then he/she will not take a bus to their destination. People will either take a bus or drive to their destination. Everyone who has a car will choose to drive to their destination. No students drive to their destination. James has a car or works at Meta.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James has a high income.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nWorksAtMeta(x) ::: x works at Meta.\nHighIncome(x) ::: x has a high income.\nTakeBus(x) ::: x takes a bus to their destination.\nDrive(x) ::: x drives to their destination.\nHasCar(x) ::: x has a car.\nStudent(x) ::: x is a student.\nPremises:\n∀x (WorksAtMeta(x) → HighIncome(x)) ::: Everyone working at Meta has a high income.\n∀x (HighIncome(x) → ¬TakeBus(x)) ::: If a person has a high income, then he/she will not take a bus to their destination.\n∀x (TakeBus(x) ⊕ Drive(x)) ::: People will either take a bus or drive to their destination.\n∀x (HasCar(x) → Drive(x)) ::: Everyone who has a car will choose to drive to their destination.\n∀x (Student(x) → ¬Drive(x)) ::: No students drive to their destination.\nHasCar(james) ∨ WorksAtMeta(james) ::: James has a car or works at Meta.\nConclusion:\nHighIncome(james) ::: James has a high income.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is un"
    ]
  },
  {
    "id": "FOLIO_train_67",
    "context": "Everyone working at Meta has a high income. If a person has a high income, then he/she will not take a bus to their destination. People will either take a bus or drive to their destination. Everyone who has a car will choose to drive to their destination. No students drive to their destination. James has a car or works at Meta.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James does not have a high income.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nWorksAtMeta(x) ::: x works at Meta.\nHighIncome(x) ::: x has a high income.\nTakeBus(x) ::: x takes a bus to their destination.\nDrive(x) ::: x drives to their destination.\nHasCar(x) ::: x has a car.\nStudent(x) ::: x is a student.\nPremises:\n∀x (WorksAtMeta(x) → HighIncome(x)) ::: Everyone working at Meta has a high income.\n∀x (HighIncome(x) → ¬TakeBus(x)) ::: If a person has a high income, then he/she will not take a bus to their destination.\n∀x (TakeBus(x) ⊕ Drive(x)) ::: People will either take a bus or drive to their destination.\n∀x (HasCar(x) → Drive(x)) ::: Everyone who has a car will choose to drive to their destination.\n∀x (Student(x) → ¬Drive(x)) ::: No students drive to their destination.\nHasCar(james) ∨ WorksAtMeta(james) ::: James has a car or works at Meta.\nConclusion:\n¬HighIncome(james) ::: James does not have a high income.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffe"
    ]
  },
  {
    "id": "FOLIO_train_68",
    "context": "Everyone working at Meta has a high income. If a person has a high income, then he/she will not take a bus to their destination. People will either take a bus or drive to their destination. Everyone who has a car will choose to drive to their destination. No students drive to their destination. James has a car or works at Meta.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James is a student.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nWorksAtMeta(x) ::: x works at Meta.\nHighIncome(x) ::: x has a high income.\nTakeBus(x) ::: x takes a bus to their destination.\nDrive(x) ::: x drives to their destination.\nHasCar(x) ::: x has a car.\nStudent(x) ::: x is a student.\nPremises:\n∀x (WorksAtMeta(x) → HighIncome(x)) ::: Everyone working at Meta has a high income.\n∀x (HighIncome(x) → ¬TakeBus(x)) ::: If a person has a high income, then he/she will not take a bus to their destination.\n∀x (TakeBus(x) ⊕ Drive(x)) ::: People will either take a bus or drive to their destination.\n∀x (HasCar(x) → Drive(x)) ::: Everyone who has a car will choose to drive to their destination.\n∀x (Student(x) → ¬Drive(x)) ::: No students drive to their destination.\nHasCar(james) ∨ WorksAtMeta(james) ::: James has a car or works at Meta.\nConclusion:\nStudent(james) ::: James is a student.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that c"
    ]
  },
  {
    "id": "FOLIO_train_69",
    "context": "Everyone working at Meta has a high income. If a person has a high income, then he/she will not take a bus to their destination. People will either take a bus or drive to their destination. Everyone who has a car will choose to drive to their destination. No students drive to their destination. James has a car or works at Meta.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James drives to his destination or he is a student.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nWorksAtMeta(x) ::: x works at Meta.\nHighIncome(x) ::: x has a high income.\nTakeBus(x) ::: x takes a bus to their destination.\nDrive(x) ::: x drives to their destination.\nHasCar(x) ::: x has a car.\nStudent(x) ::: x is a student.\nPremises:\n∀x (WorksAtMeta(x) → HighIncome(x)) ::: Everyone working at Meta has a high income.\n∀x (HighIncome(x) → ¬TakeBus(x)) ::: If a person has a high income, then he/she will not take a bus to their destination.\n∀x (TakeBus(x) ⊕ Drive(x)) ::: People will either take a bus or drive to their destination.\n∀x (HasCar(x) → Drive(x)) ::: Everyone who has a car will choose to drive to their destination.\n∀x (Student(x) → ¬Drive(x)) ::: No students drive to their destination.\nHasCar(james) ∨ WorksAtMeta(james) ::: James has a car or works at Meta.\nConclusion:\nDrive(james) ⊕ Student(james) ::: James drives to his destination or he is a student.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No"
    ]
  },
  {
    "id": "FOLIO_train_70",
    "context": "Everyone working at Meta has a high income. If a person has a high income, then he/she will not take a bus to their destination. People will either take a bus or drive to their destination. Everyone who has a car will choose to drive to their destination. No students drive to their destination. James has a car or works at Meta.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James either drives to their destination or is a student.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nWorksAtMeta(x) ::: x works at Meta.\nHighIncome(x) ::: x has a high income.\nTakeBus(x) ::: x takes a bus to their destination.\nDrive(x) ::: x drives to their destination.\nHasCar(x) ::: x has a car.\nStudent(x) ::: x is a student.\nPremises:\n∀x (WorksAtMeta(x) → HighIncome(x)) ::: Everyone working at Meta has a high income.\n∀x (HighIncome(x) → ¬TakeBus(x)) ::: If a person has a high income, then he/she will not take a bus to their destination.\n∀x (TakeBus(x) ⊕ Drive(x)) ::: People will either take a bus or drive to their destination.\n∀x (HasCar(x) → Drive(x)) ::: Everyone who has a car will choose to drive to their destination.\n∀x (Student(x) → ¬Drive(x)) ::: No students drive to their destination.\nWorksAtMeta(james) ⊕ HasCar(james) ::: James has a car or works at Meta.\nConclusion:\n(HasCar(james) ⊕ Student(james)) ::: James either drives to their destination or is a student.\n------"
    ]
  },
  {
    "id": "FOLIO_train_71",
    "context": "Everyone working at Meta has a high income. If a person has a high income, then he/she will not take a bus to their destination. People will either take a bus or drive to their destination. Everyone who has a car will choose to drive to their destination. No students drive to their destination. James has a car or works at Meta.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If James either drives to his destination or is a student, then he has a high income and is a student.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nWorksAtMeta(x) ::: x works at Meta.\nHighIncome(x) ::: x has a high income.\nTakeBus(x) ::: x takes a bus to his/her destination.\nDrive(x) ::: x drives to his/her destination.\nHasCar(x) ::: x has a car.\nStudent(x) ::: x is a student.\nPremises:\n∀x (WorksAtMeta(x) → HighIncome(x)) ::: Everyone working at Meta has a high income.\n∀x (HighIncome(x) → ¬TakeBus(x)) ::: If a person has a high income, then he/she will not take a bus to their destination.\n∀x (TakeBus(x) ⊕ Drive(x)) ::: People will either take a bus or drive to their destination.\n∀x (HasCar(x) → Drive(x)) ::: Everyone who has a car will choose to drive to their destination.\n∀x (Student(x) → ¬Drive(x)) ::: No students drive to their destination.\nJames(james) ∧ (HasCar(james) ⊕ WorksAtMeta(james)) ::: James has a car or works at Meta.\nConclusion:\n(Drive(james) ∨ Student(james)) →"
    ]
  },
  {
    "id": "FOLIO_train_72",
    "context": "Students either go to the park or go to the movies. No student who enjoys nature has free time during the weekend. All students who go to the movies enjoy nature. All students who do not have class during the weekend have free time during the weekend. All students not in summer camp do not have class during the weekend. James does not have class during the weekend.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James is in summer camp.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nStudent(x) ::: x is a student.\nGoTo(x, y) ::: x goes to y.\nEnjoy(x, y) ::: x enjoys y.\nFreeTime(x) ::: x has free time.\nClass(x) ::: x has class.\nWeekend(x) ::: x is during the weekend.\nSummerCamp(x) ::: x is in summer camp.\nPremises:\n∀x (Student(x) → (GoTo(x, park) ⊕ GoTo(x, movies))) ::: Students either go to the park or go to the movies.\n∀x (Student(x) ∧ Enjoy(x, nature) → ¬FreeTime(x)) ::: No student who enjoys nature has free time during the weekend.\n∀x (Student(x) ∧ GoTo(x, movies) → Enjoy(x, nature)) ::: All students who go to the movies enjoy nature.\n∀x (Student(x) ∧ ¬Class(x) → FreeTime(x)) ::: All students who do not have class during the weekend have free time during the weekend.\n∀x (Student(x) ∧ ¬SummerCamp(x) → ¬Class(x)) ::: All students not in summer camp do not have class during the weekend.\nStudent(j"
    ]
  },
  {
    "id": "FOLIO_train_73",
    "context": "Students either go to the park or go to the movies. No student who enjoys nature has free time during the weekend. All students who go to the movies enjoy nature. All students who do not have class during the weekend have free time during the weekend. All students not in summer camp do not have class during the weekend. James does not have class during the weekend.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James goes to the park or is in summer camp.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nStudent(x) ::: x is a student.\nPark(x) ::: x goes to the park.\nMovies(x) ::: x goes to the movies.\nEnjoy(x, y) ::: x enjoys y.\nNature(x) ::: x is nature.\nFreeTime(x) ::: x has free time.\nWeekend(x) ::: x is during the weekend.\nClass(x) ::: x has class.\nSummerCamp(x) ::: x is in summer camp.\nPremises:\n∀x (Student(x) → (Park(x) ⊕ Movies(x))) ::: Students either go to the park or go to the movies.\n∀x (Student(x) ∧ Enjoy(x, nature) → ¬FreeTime(x, weekend)) ::: No student who enjoys nature has free time during the weekend.\n∀x (Student(x) ∧ Movies(x) → Enjoy(x, nature)) ::: All students who go to the movies enjoy nature.\n∀x (Student(x) ∧ ¬Class(x, weekend) → FreeTime(x, weekend)) ::: All students who do not have class during the weekend have free time during the weekend.\n∀x (Student(x) ∧ ¬SummerCamp(x) →"
    ]
  },
  {
    "id": "FOLIO_train_74",
    "context": "No television stars are certified public accountants. All certified public accountants have good business sense.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? All television stars have good business sense.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTelevisionStar(x) ::: x is a television star.\nCertifiedPublicAccountant(x) ::: x is a certified public accountant.\nGoodBusinessSense(x) ::: x has good business sense.\nPremises:\n∀x (TelevisionStar(x) → ¬CertifiedPublicAccountant(x)) ::: No television stars are certified public accountants.\n∀x (CertifiedPublicAccountant(x) → GoodBusinessSense(x)) ::: All certified public accountants have good business sense.\nConclusion:\n∀x (TelevisionStar(x) → GoodBusinessSense(x)) ::: All television stars have good business sense.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either"
    ]
  },
  {
    "id": "FOLIO_train_75",
    "context": "Some students good at math are good at chemistry. All students good at chemistry enjoy conducting experiments. All students that enjoy conducting experiments are good at planning. No student good at planning is awarded the Dean's List. James is either good at chemistry and awarded the Dean's List, or neither good at chemistry nor awarded the Dean's List.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James is good at planning.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nStudent(x) ::: x is a student.\nGoodAtMath(x) ::: x is good at math.\nGoodAtChemistry(x) ::: x is good at chemistry.\nEnjoy(x, y) ::: x enjoys y.\nConductExperiments(x) ::: x enjoys conducting experiments.\nGoodAtPlanning(x) ::: x is good at planning.\nAwarded(x, y) ::: x is awarded y.\nDeansList(x) ::: x is awarded the Dean's List.\nPremises:\n∀x (GoodAtMath(x) → GoodAtChemistry(x)) ::: Some students good at math are good at chemistry.\n∀x (GoodAtChemistry(x) → Enjoy(x, ConductExperiments)) ::: All students good at chemistry enjoy conducting experiments.\n∀x (Enjoy(x, ConductExperiments) → GoodAtPlanning(x)) ::: All students that enjoy conducting experiments are good at planning.\n∀x (GoodAtPlanning(x) → ¬Awarded(x, DeansList)) ::: No student good at planning is awarded the Dean's List.\n(GoodAtChemistry(james) ∧ Awarded(james, DeansList)) ⊕ ¬(GoodAtChemistry(james) ∨"
    ]
  },
  {
    "id": "FOLIO_train_76",
    "context": "Some students good at math are good at chemistry. All students good at chemistry enjoy conducting experiments. All students that enjoy conducting experiments are good at planning. No student good at planning is awarded the Dean's List. James is either good at chemistry and awarded the Dean's List, or neither good at chemistry nor awarded the Dean's List.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James is either good at planning or good at math.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nStudent(x) ::: x is a student.\nGoodAt(x, y) ::: x is good at y.\nChemistry(x) ::: x is chemistry.\nMath(x) ::: x is math.\nEnjoy(x, y) ::: x enjoys y.\nConduct(x) ::: x conducts experiments.\nPlan(x) ::: x is good at planning.\nDeansList(x) ::: x is awarded the Dean's List.\nPremises:\n∀x (GoodAt(x, math) → GoodAt(x, chemistry)) ::: Some students good at math are good at chemistry.\n∀x (GoodAt(x, chemistry) → Enjoy(x, conduct)) ::: All students good at chemistry enjoy conducting experiments.\n∀x (Enjoy(x, conduct) → Plan(x)) ::: All students that enjoy conducting experiments are good at planning.\n∀x (Plan(x) → ¬DeansList(x)) ::: No student good at planning is awarded the Dean's List.\n(GoodAt(james, chemistry) ∧ DeansList(james)) ⊕ ¬(GoodAt(james, chemistry) ∨ DeansList(james)) ::: James is either good at chemistry and awarded the Dean's List, or neither good at chemistry nor awarded the Dean's List."
    ]
  },
  {
    "id": "FOLIO_train_77",
    "context": "Some students good at math are good at chemistry. All students good at chemistry enjoy conducting experiments. All students that enjoy conducting experiments are good at planning. No student good at planning is awarded the Dean's List. James is either good at chemistry and awarded the Dean's List, or neither good at chemistry nor awarded the Dean's List.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James is either good at chemistry or good at math.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nStudent(x) ::: x is a student.\nGoodAtMath(x) ::: x is good at math.\nGoodAtChemistry(x) ::: x is good at chemistry.\nEnjoy(x, y) ::: x enjoys y.\nConductExperiments(x) ::: x enjoys conducting experiments.\nGoodAtPlanning(x) ::: x is good at planning.\nAwarded(x, y) ::: x is awarded y.\nDeansList(x) ::: x is awarded the Dean's List.\nPremises:\n∀x (GoodAtMath(x) → GoodAtChemistry(x)) ::: Some students good at math are good at chemistry.\n∀x (GoodAtChemistry(x) → Enjoy(x, ConductExperiments)) ::: All students good at chemistry enjoy conducting experiments.\n∀x (Enjoy(x, ConductExperiments) → GoodAtPlanning(x)) ::: All students that enjoy conducting experiments are good at planning.\n∀x (GoodAtPlanning(x) → ¬Awarded(x, DeansList)) ::: No student good at planning is awarded the Dean's List.\n(GoodAtChemistry(james) ∧ Awarded(james, DeansList)) ⊕ ¬(GoodAtChemistry(james) ∨"
    ]
  },
  {
    "id": "FOLIO_train_78",
    "context": "Some students good at math are good at chemistry. All students good at chemistry enjoy conducting experiments. All students that enjoy conducting experiments are good at planning. No student good at planning is awarded the Dean's List. James is either good at chemistry and awarded the Dean's List, or neither good at chemistry nor awarded the Dean's List.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If James is good at Chemistry or gets awarded the Dean's List, then James is either good at planning or good at math.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nStudent(x) ::: x is a student.\nGoodAtMath(x) ::: x is good at math.\nGoodAtChemistry(x) ::: x is good at chemistry.\nEnjoy(x, y) ::: x enjoys y.\nConductExperiments(x) ::: x enjoys conducting experiments.\nGoodAtPlanning(x) ::: x is good at planning.\nAwarded(x) ::: x is awarded the Dean's List.\nPremises:\n∀x (GoodAtMath(x) → GoodAtChemistry(x)) ::: Some students good at math are good at chemistry.\n∀x (GoodAtChemistry(x) → Enjoy(x, ConductExperiments)) ::: All students good at chemistry enjoy conducting experiments.\n∀x (Enjoy(x, ConductExperiments) → GoodAtPlanning(x)) ::: All students that enjoy conducting experiments are good at planning.\n∀x (GoodAtPlanning(x) → ¬Awarded(x)) ::: No student good at planning is awarded the Dean's List.\n(GoodAtChemistry(james) ∧ Awarded(james)) ⊕ ¬(GoodAtChemistry(james) ∨ Awarded(james)) ::: James is either good at chemistry and awarded the Dean's List, or neither"
    ]
  },
  {
    "id": "FOLIO_train_79",
    "context": "If a Leetcode problem is at the easy level, then its AC rate is lower than 20 percent. All Leetcode problems that are recommended to novices are easy. A Leetode problem is either easy or hard. Leetcode problems that are starred by more than 1 thousand users are hard. 2Sum is recommended to novices. 4Sum is starred by more than 1 thousand users.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? 2Sum is a Leetcode problem with an easy level.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEasy(x) ::: x is a Leetcode problem with an easy level.\nACRate(x) ::: x is the AC rate of a Leetcode problem.\nRecommend(x, y) ::: x is recommended to y.\nNovice(x) ::: x is a novice.\nHard(x) ::: x is a Leetcode problem with a hard level.\nStar(x, y) ::: x is starred by y users.\nProblem(x) ::: x is a Leetcode problem.\nPremises:\n∀x (Easy(x) → ACRate(x) < 20) ::: If a Leetcode problem is at the easy level, then its AC rate is lower than 20 percent.\n∀x (Recommend(x, novice) → Easy(x)) ::: All Leetcode problems that are recommended to novices are easy.\n∀x (Problem(x) → Easy(x) ⊕ Hard(x)) ::: A Leetode problem is either easy or hard.\n∀x (Star(x, 1000) → Hard(x)) ::: Leetcode problems that are starred by more than 1 thousand users are hard.\nRecommend(2sum, novice) ::: 2Sum is recommended to novices.\nStar(4sum,"
    ]
  },
  {
    "id": "FOLIO_train_80",
    "context": "If a Leetcode problem is at the easy level, then its AC rate is lower than 20 percent. All Leetcode problems that are recommended to novices are easy. A Leetode problem is either easy or hard. Leetcode problems that are starred by more than 1 thousand users are hard. 2Sum is recommended to novices. 4Sum is starred by more than 1 thousand users.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? 4Sum is a Leetcode problem recommended to the novice.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEasy(x) ::: x is a Leetcode problem at the easy level.\nACRate(x) ::: x is the AC rate of a Leetcode problem.\nHard(x) ::: x is a Leetcode problem at the hard level.\nRecommend(x, y) ::: x is a Leetcode problem recommended to y.\nNovice(x) ::: x is a novice.\nStar(x, y) ::: x is starred by y users.\nProblem(x) ::: x is a Leetcode problem.\nPremises:\n∀x (Easy(x) → ACRate(x) < 20) ::: If a Leetcode problem is at the easy level, then its AC rate is lower than 20 percent.\n∀x (Recommend(x, novice) → Easy(x)) ::: All Leetcode problems that are recommended to novices are easy.\n∀x (Problem(x) → Easy(x) ⊕ Hard(x)) ::: A Leetode problem is either easy or hard.\n∀x (Star(x, 1000) → Hard(x)) ::: Leetcode problems that are starred by more than 1 thousand users are hard.\nRecommend(2sum, novice) ::: 2Sum is recommended to novices.\nStar(4sum, 1000) ::: 4Sum is starred by more than 1 thousand users.\nConclusion:\nRecommend(4sum, novice) ::: 4Sum is a Leetcode problem recommended to the novice.\n------"
    ]
  },
  {
    "id": "FOLIO_train_81",
    "context": "If a Leetcode problem is at the easy level, then its AC rate is lower than 20 percent. All Leetcode problems that are recommended to novices are easy. A Leetode problem is either easy or hard. Leetcode problems that are starred by more than 1 thousand users are hard. 2Sum is recommended to novices. 4Sum is starred by more than 1 thousand users.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? 2Sum has an AC rate higher than 20 percent.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEasy(x) ::: x is an easy Leetcode problem.\nHard(x) ::: x is a hard Leetcode problem.\nACRate(x, y) ::: x has an AC rate of y percent.\nRecommend(x, y) ::: x is recommended to y.\nStar(x, y) ::: x is starred by y users.\nPremises:\n∀x (Easy(x) → ACRate(x, lowerThan20Percent)) ::: If a Leetcode problem is at the easy level, then its AC rate is lower than 20 percent.\n∀x (Recommend(x, novices) → Easy(x)) ::: All Leetcode problems that are recommended to novices are easy.\n∀x (Easy(x) ⊕ Hard(x)) ::: A Leetode problem is either easy or hard.\n∀x (Star(x, moreThan1ThousandUsers) → Hard(x)) ::: Leetcode problems that are starred by more than 1 thousand users are hard.\nRecommend(2Sum, novices) ::: 2Sum is recommended to novices.\nStar(4Sum, moreThan1ThousandUsers) ::: 4Sum is starred by more than 1 thousand users.\nConclusion:\nACRate(2Sum, higherThan20Percent) ::: 2Sum has an AC rate higher than 20 percent.\n------\nProblem:\nIf a Leetcode problem is at the easy level, then its AC rate is lower than 20 percent. All Leetcode problems that are recommended to novices are easy"
    ]
  },
  {
    "id": "FOLIO_train_82",
    "context": "All rental cars cost the renter money. Whenever Sarah goes to Vermont, Sarah drives there. For someone who does not own a car to drive somewhere, they must either borrow a car or rent a car. Sarah doesn’t own a car. Sarah never borrows a car to go camping. Sarah is going to go camping in Vermont this weekend. To go camping somewhere, you must go to that place.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Sarah will spend money this weekend.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRentalCar(x) ::: x is a rental car.\nCost(x, y) ::: x costs y money.\nRenter(x) ::: x is a renter.\nSarah(x) ::: x is Sarah.\nGo(x, y) ::: x goes to y.\nVermont(x) ::: x is Vermont.\nDrive(x, y) ::: x drives to y.\nCamp(x) ::: x is camping.\nPlace(x) ::: x is a place.\nOwn(x, y) ::: x owns y.\nBorrow(x, y) ::: x borrows y.\nPremises:\n∀x ∀y (RentalCar(x) ∧ Renter(y) → Cost(x, y)) ::: All rental cars cost the renter money.\n∀x (Sarah(x) ∧ Go(x, Vermont) → Drive(x, Vermont)) ::: Whenever Sarah goes to Vermont, Sarah drives there.\n∀x ∀y (¬Own(x, y) ∧ Drive(x, y) → (Borrow(x, y) ∨ RentalCar(y))) ::: For someone who does not own a car to drive somewhere, they must either borrow a car or rent a car.\n¬Own(sarah, car) ::: Sarah doesn’t own a car.\n∀x ∀y (Camp(x) ∧ Place(y) → Go(x, y)) ::: To go camping somewhere, you must go to that place."
    ]
  },
  {
    "id": "FOLIO_train_83",
    "context": "All people who attend weddings are getting married or have friends who are getting married. No preteens and other young children are getting married or have friends who are getting married. If people enjoy celebrating life milestone events with other people, then they attend weddings. If people are fond of large organized group functions, then they enjoy celebrating life milestone events with other people. All people who are outgoing and very spirited are fond of large organized group functions. If Carol is not both a pre-teen or other young child and attends weddings, then Carol is not getting married or has friends who are getting married.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Carol is outgoing and very spirited.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAttend(x, y) ::: x attends y.\nGetMarried(x) ::: x is getting married.\nFriend(x, y) ::: x is a friend of y.\nEnjoy(x, y) ::: x enjoys y.\nCelebrate(x, y, z) ::: x celebrates y with z.\nMilestone(x) ::: x is a life milestone event.\nPerson(x) ::: x is a person.\nPreteen(x) ::: x is a preteen.\nYoungChild(x) ::: x is a young child.\nOutgoing(x) ::: x is outgoing.\nSpirited(x) ::: x is very spirited.\nFond(x, y) ::: x is fond of y.\nOrganized(x) ::: x is a large organized group function.\nPremises:\n∀x (Attend(x, wedding) → (GetMarried(x) ∨ ∃y (Friend(x, y) ∧ GetMarried(y)))) ::: All people who attend weddings are getting married or have friends who are getting married.\n∀x (Preteen(x) ∨ YoungChild(x) → ¬(GetMarried(x) ∨ ∃y (Friend(x, y) ∧ GetMarried(y)))) ::: No preteens and other young children are getting married or have friends who are getting married.\n∀x (Enjoy(x, Celebrate(x, Milestone(y), Person(z))) → Attend(x, wedding)) ::"
    ]
  },
  {
    "id": "FOLIO_train_84",
    "context": "All people who attend weddings are getting married or have friends who are getting married. No preteens and other young children are getting married or have friends who are getting married. If people enjoy celebrating life milestone events with other people, then they attend weddings. If people are fond of large organized group functions, then they enjoy celebrating life milestone events with other people. All people who are outgoing and very spirited are fond of large organized group functions. If Carol is not both a pre-teen or other young child and attends weddings, then Carol is not getting married or has friends who are getting married.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Carol is either a preteen or other young child.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAttend(x) ::: x attends weddings.\nGetMarried(x) ::: x is getting married.\nFriend(x, y) ::: x has friends who are getting married.\nEnjoy(x, y) ::: x enjoys celebrating life milestone events with other people.\nCelebrate(x, y) ::: x celebrates life milestone events with other people.\nFond(x, y) ::: x is fond of large organized group functions.\nOrganize(x, y) ::: x is fond of large organized group functions.\nOutgoing(x) ::: x is outgoing.\nSpirited(x) ::: x is very spirited.\nPreteen(x) ::: x is a preteen.\nYoungChild(x) ::: x is a young child.\nPremises:\n∀x (Attend(x) → (GetMarried(x) ∨ Friend(x, y))) ::: All people who attend weddings are getting married or have friends who are getting married.\n∀x (Preteen(x) ∨ YoungChild(x) → ¬(GetMarried(x) ∨ Friend(x, y))) ::: No preteens and other young children are getting married or have friends who are getting married.\n∀x (Enjoy(x, Celebrate(x, y)) → Attend(x)) ::: If people enjoy celebrating life milestone events with other people, then they attend weddings.\n∀x (Fond(x, Organize(x, y)) → Enjoy(x, Celebrate(x, y))) ::: If people"
    ]
  },
  {
    "id": "FOLIO_train_85",
    "context": "All people who attend weddings are getting married or have friends who are getting married. No preteens and other young children are getting married or have friends who are getting married. If people enjoy celebrating life milestone events with other people, then they attend weddings. If people are fond of large organized group functions, then they enjoy celebrating life milestone events with other people. All people who are outgoing and very spirited are fond of large organized group functions. If Carol is not both a pre-teen or other young child and attends weddings, then Carol is not getting married or has friends who are getting married.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Carol neither enjoys celebrating life milestone events with other people nor is outgoing and very spirited.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAttend(x) ::: x attends weddings.\nGetMarried(x) ::: x is getting married.\nFriend(x, y) ::: x has friends who are getting married.\nEnjoy(x, y) ::: x enjoys celebrating life milestone events with other people.\nFond(x, y) ::: x is fond of large organized group functions.\nOutgoing(x) ::: x is outgoing.\nSpirited(x) ::: x is very spirited.\nPremises:\n∀x (Attend(x) → (GetMarried(x) ∨ Friend(x))) ::: All people who attend weddings are getting married or have friends who are getting married.\n∀x (¬(Preteen(x) ∨ YoungChild(x)) → ¬(GetMarried(x) ∨ Friend(x))) ::: No preteens and other young children are getting married or have friends who are getting married.\n∀x (Enjoy(x) → Attend(x)) ::: If people enjoy celebrating life milestone events with other people, then they attend weddings.\n∀x (Fond(x) → Enjoy(x)) ::: If people are fond of large organized group functions, then they enjoy celebrating life milestone events with other people.\n∀x (Outgoing(x) ∧ Spirited(x) → Fond(x)) ::: All people who are outgoing and very spirited are fond of large organized group functions.\n¬(Preteen(carol) ∨ YoungChild(carol)) → ¬(GetMarried(car"
    ]
  },
  {
    "id": "FOLIO_train_86",
    "context": "All Republicans are anti-abortion. Either Republicans or Democrats. No Democrats are conservative. Either conservative or liberal. A U.S government official is either conservative or a Republican.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A U.S government official is a Democrat.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRepublican(x) ::: x is a Republican.\nAntiAbortion(x) ::: x is anti-abortion.\nDemocrat(x) ::: x is a Democrat.\nConservative(x) ::: x is conservative.\nLiberal(x) ::: x is liberal.\nUsgov(x) ::: x is a U.S government official.\nPremises:\n∀x (Republican(x) → AntiAbortion(x)) ::: All Republicans are anti-abortion.\n∀x (Republican(x) ⊕ Democrat(x)) ::: Either Republicans or Democrats.\n∀x (Democrat(x) → ¬Conservative(x)) ::: No Democrats are conservative.\n∀x (Conservative(x) ⊕ Liberal(x)) ::: Either conservative or liberal.\n∀x (Usgov(x) → (Conservative(x) ⊕ Republican(x))) ::: A U.S government official is either conservative or a Republican.\nConclusion:\nUsgov(x) → Democrat(x) ::: A U.S government official is a Democrat.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a"
    ]
  },
  {
    "id": "FOLIO_train_87",
    "context": "All Republicans are anti-abortion. Either Republicans or Democrats. No Democrats are conservative. Either conservative or liberal. A U.S government official is either conservative or a Republican.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A U.S government official is anti-abortion and a liberal.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRepublican(x) ::: x is a Republican.\nAntiAbortion(x) ::: x is anti-abortion.\nDemocrat(x) ::: x is a Democrat.\nConservative(x) ::: x is conservative.\nLiberal(x) ::: x is liberal.\nUsgovofficial(x) ::: x is a U.S government official.\nPremises:\n∀x (Republican(x) → AntiAbortion(x)) ::: All Republicans are anti-abortion.\n∀x (Republican(x) ⊕ Democrat(x)) ::: Either Republicans or Democrats.\n∀x (Democrat(x) → ¬Conservative(x)) ::: No Democrats are conservative.\n∀x (Conservative(x) ⊕ Liberal(x)) ::: Either conservative or liberal.\n∀x (Usgovofficial(x) → (Conservative(x) ⊕ Republican(x))) ::: A U.S government official is either conservative or a Republican.\nConclusion:\nUsgovofficial(x) ∧ AntiAbortion(x) ∧ Liberal(x) ::: A U.S government official is anti-abortion and a liberal.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor"
    ]
  },
  {
    "id": "FOLIO_train_88",
    "context": "All Republicans are anti-abortion. Either Republicans or Democrats. No Democrats are conservative. Either conservative or liberal. A U.S government official is either conservative or a Republican.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A U.S government official is either anti-abortion or a liberal.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRepublican(x) ::: x is a Republican.\nAntiAbortion(x) ::: x is anti-abortion.\nDemocrat(x) ::: x is a Democrat.\nConservative(x) ::: x is conservative.\nLiberal(x) ::: x is liberal.\nUsgovOfficial(x) ::: x is a U.S government official.\nPremises:\n∀x (Republican(x) → AntiAbortion(x)) ::: All Republicans are anti-abortion.\n∀x (Republican(x) ⊕ Democrat(x)) ::: Either Republicans or Democrats.\n∀x (Democrat(x) → ¬Conservative(x)) ::: No Democrats are conservative.\n∀x (Conservative(x) ⊕ Liberal(x)) ::: Either conservative or liberal.\n∀x (UsgovOfficial(x) → (Conservative(x) ⊕ Republican(x))) ::: A U.S government official is either conservative or a Republican.\nConclusion:\n∀x (UsgovOfficial(x) → (AntiAbortion(x) ⊕ Liberal(x))) ::: A U.S government official is either anti-abortion or a liberal.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug,"
    ]
  },
  {
    "id": "FOLIO_train_89",
    "context": "All Republicans are anti-abortion. Either Republicans or Democrats. No Democrats are conservative. Either conservative or liberal. A U.S government official is either conservative or a Republican.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If a U.S government official is not anti-abortion and a Republican, then a U.S government official is neither anti-abortion nor a liberal.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRepublican(x) ::: x is a Republican.\nDemocrat(x) ::: x is a Democrat.\nAntiAbortion(x) ::: x is anti-abortion.\nConservative(x) ::: x is conservative.\nLiberal(x) ::: x is liberal.\nGovernmentOfficial(x) ::: x is a U.S government official.\nPremises:\n∀x (Republican(x) → AntiAbortion(x)) ::: All Republicans are anti-abortion.\nRepublican(x) ⊕ Democrat(x) ::: Either Republicans or Democrats.\n∀x (Democrat(x) → ¬Conservative(x)) ::: No Democrats are conservative.\nConservative(x) ⊕ Liberal(x) ::: Either conservative or liberal.\nGovernmentOfficial(x) → (Conservative(x) ⊕ Republican(x)) ::: A U.S government official is either conservative or a Republican.\nConclusion:\n(¬AntiAbortion(x) ∧ Republican(x)) → (¬AntiAbortion(x) ⊕ ¬Liberal(x)) ::: If a U.S government official is not anti-abortion and a Republican, then a U.S government official is neither anti-abortion nor a liberal.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a"
    ]
  },
  {
    "id": "FOLIO_train_90",
    "context": "All Republicans are anti-abortion. Either Republicans or Democrats. No Democrats are conservative. Either conservative or liberal. A U.S government official is either conservative or a Republican.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If a U.S government official is anti-abortion and a liberal, then a U.S government official is either a Republican or a liberal.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRepublican(x) ::: x is a Republican.\nAntiAbortion(x) ::: x is anti-abortion.\nDemocrat(x) ::: x is a Democrat.\nConservative(x) ::: x is conservative.\nLiberal(x) ::: x is liberal.\nUsgovofficial(x) ::: x is a U.S government official.\nPremises:\n∀x (Republican(x) → AntiAbortion(x)) ::: All Republicans are anti-abortion.\n∀x (Republican(x) ⊕ Democrat(x)) ::: Either Republicans or Democrats.\n∀x (Democrat(x) → ¬Conservative(x)) ::: No Democrats are conservative.\n∀x (Conservative(x) ⊕ Liberal(x)) ::: Either conservative or liberal.\n∀x (Usgovofficial(x) → (Conservative(x) ⊕ Republican(x))) ::: A U.S government official is either conservative or a Republican.\nConclusion:\n(AntiAbortion(x) ∧ Liberal(x)) → (Republican(x) ⊕ Liberal(x)) ::: If a U.S government official is anti-abortion and a liberal, then a U.S government official is either a Republican or a liberal.\n------"
    ]
  },
  {
    "id": "FOLIO_train_91",
    "context": "All Republicans are anti-abortion. Either Republicans or Democrats. No Democrats are conservative. Either conservative or liberal. A U.S government official is either conservative or a Republican.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If a U.S government official is either a conservative or anti-abortion, then a U.S government official is either a conservative and a liberal or neither a conservative nor a liberal.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRepublican(x) ::: x is a Republican.\nAntiAbortion(x) ::: x is anti-abortion.\nDemocrat(x) ::: x is a Democrat.\nConservative(x) ::: x is conservative.\nLiberal(x) ::: x is liberal.\nUsgovOfficial(x) ::: x is a U.S government official.\nPremises:\n∀x (Republican(x) → AntiAbortion(x)) ::: All Republicans are anti-abortion.\n∀x (Republican(x) ⊕ Democrat(x)) ::: Either Republicans or Democrats.\n∀x (Democrat(x) → ¬Conservative(x)) ::: No Democrats are conservative.\n∀x (Conservative(x) ⊕ Liberal(x)) ::: Either conservative or liberal.\n∀x (UsgovOfficial(x) → (Conservative(x) ⊕ Republican(x))) ::: A U.S government official is either conservative or a Republican.\nConclusion:\n(Conservative(x) ⊕ AntiAbortion(x)) → (Conservative(x) ∧ Liberal(x)) ⊕ ¬(Conservative(x) ∨ Liberal(x)) ::: If a U.S government official is either a conservative"
    ]
  },
  {
    "id": "FOLIO_train_92",
    "context": "All Republicans are anti-abortion. Either Republicans or Democrats. No Democrats are conservative. Either conservative or liberal. A U.S government official is either conservative or a Republican.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If a U.S government official is either a conservative or anti-abortion, then a U.S government official is neither a Democrat or a liberal.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRepublican(x) ::: x is a Republican.\nDemocrat(x) ::: x is a Democrat.\nAntiAbortion(x) ::: x is anti-abortion.\nConservative(x) ::: x is conservative.\nLiberal(x) ::: x is liberal.\nGovernmentOfficial(x) ::: x is a U.S government official.\nPremises:\n∀x (Republican(x) → AntiAbortion(x)) ::: All Republicans are anti-abortion.\n∀x (Republican(x) ⊕ Democrat(x)) ::: Either Republicans or Democrats.\n∀x (Democrat(x) → ¬Conservative(x)) ::: No Democrats are conservative.\n∀x (Conservative(x) ⊕ Liberal(x)) ::: Either conservative or liberal.\n∀x (GovernmentOfficial(x) → (Conservative(x) ⊕ Republican(x))) ::: A U.S government official is either conservative or a Republican.\nConclusion:\n(Conservative(x) ∨ AntiAbortion(x)) → (¬Democrat(x) ∧ ¬Liberal(x)) ::: If a U.S government official is either a conservative or anti-abortion, then a U.S government official is neither a"
    ]
  },
  {
    "id": "FOLIO_train_93",
    "context": "All Republicans are anti-abortion. Either Republicans or Democrats. No Democrats are conservative. Either conservative or liberal. A U.S government official is either conservative or a Republican.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If an U.S government official is anti-abortion or a liberal, then a U.S government official is either anti-abortion or a liberal.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRepublican(x) ::: x is a Republican.\nDemocrat(x) ::: x is a Democrat.\nAntiAbortion(x) ::: x is anti-abortion.\nConservative(x) ::: x is conservative.\nLiberal(x) ::: x is liberal.\nUsgovOfficial(x) ::: x is a U.S government official.\nPremises:\n∀x (Republican(x) → AntiAbortion(x)) ::: All Republicans are anti-abortion.\nRepublican(x) ⊕ Democrat(x) ::: Either Republicans or Democrats.\n∀x (Democrat(x) → ¬Conservative(x)) ::: No Democrats are conservative.\nConservative(x) ⊕ Liberal(x) ::: Either conservative or liberal.\nUsgovOfficial(x) → (Conservative(x) ⊕ Republican(x)) ::: A U.S government official is either conservative or a Republican.\nConclusion:\n(AntiAbortion(x) ∨ Liberal(x)) → (AntiAbortion(x) ⊕ Liberal(x)) ::: If an U.S government official is anti-abortion or a liberal, then a U.S government official is either anti-abortion or a liberal.\n------\nProblem:\nAll people who regularly drink coffee are"
    ]
  },
  {
    "id": "FOLIO_train_94",
    "context": "All advocates of high tariff rates are Republicans. Some Republicans are not conservatives.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Some conservatives are advocates of high tariff rates.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAdvocate(x, y) ::: x is an advocate of y.\nRepublican(x) ::: x is a Republican.\nConservative(x) ::: x is a conservative.\nPremises:\n∀x (Advocate(x, highTariffRates) → Republican(x)) ::: All advocates of high tariff rates are Republicans.\n∃x (Republican(x) ∧ ¬Conservative(x)) ::: Some Republicans are not conservatives.\nConclusion:\n∃x (Conservative(x) ∧ Advocate(x, highTariffRates)) ::: Some conservatives are advocates of high tariff rates.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina"
    ]
  },
  {
    "id": "FOLIO_train_95",
    "context": "No athletes are slow runners. All professional basketball players are athletes. All NBA players are professional basketball players. All Knicks players are NBA players. Jim is either not a professional basketball player or not a slow runner.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jim is a Knicks player.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAthlete(x) ::: x is an athlete.\nSlowRunner(x) ::: x is a slow runner.\nProfessionalBasketballPlayer(x) ::: x is a professional basketball player.\nNBA(x) ::: x is an NBA player.\nKnicks(x) ::: x is a Knicks player.\nPremises:\n∀x (Athlete(x) → ¬SlowRunner(x)) ::: No athletes are slow runners.\n∀x (ProfessionalBasketballPlayer(x) → Athlete(x)) ::: All professional basketball players are athletes.\n∀x (NBA(x) → ProfessionalBasketballPlayer(x)) ::: All NBA players are professional basketball players.\n∀x (Knicks(x) → NBA(x)) ::: All Knicks players are NBA players.\nJim ⊕ SlowRunner(jim) ::: Jim is either not a professional basketball player or not a slow runner.\nConclusion:\nKnicks(jim) ::: Jim is a Knicks player.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that"
    ]
  },
  {
    "id": "FOLIO_train_96",
    "context": "No athletes are slow runners. All professional basketball players are athletes. All NBA players are professional basketball players. All Knicks players are NBA players. Jim is either not a professional basketball player or not a slow runner.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jim is not a Knicks player.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAthlete(x) ::: x is an athlete.\nSlowRunner(x) ::: x is a slow runner.\nProfessionalBasketballPlayer(x) ::: x is a professional basketball player.\nNBA(x) ::: x is an NBA player.\nKnicks(x) ::: x is a Knicks player.\nPremises:\n∀x (Athlete(x) → ¬SlowRunner(x)) ::: No athletes are slow runners.\n∀x (ProfessionalBasketballPlayer(x) → Athlete(x)) ::: All professional basketball players are athletes.\n∀x (NBA(x) → ProfessionalBasketballPlayer(x)) ::: All NBA players are professional basketball players.\n∀x (Knicks(x) → NBA(x)) ::: All Knicks players are NBA players.\nJim ⊕ ¬SlowRunner(jim) ::: Jim is either not a professional basketball player or not a slow runner.\nConclusion:\n¬Knicks(jim) ::: Jim is not a Knicks player.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a"
    ]
  },
  {
    "id": "FOLIO_train_97",
    "context": "No athletes are slow runners. All professional basketball players are athletes. All NBA players are professional basketball players. All Knicks players are NBA players. Jim is either not a professional basketball player or not a slow runner.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jim is an athlete.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAthlete(x) ::: x is an athlete.\nSlowRunner(x) ::: x is a slow runner.\nProfessionalBasketballPlayer(x) ::: x is a professional basketball player.\nNBA(x) ::: x is an NBA player.\nKnicks(x) ::: x is a Knicks player.\nPremises:\n∀x (Athlete(x) → ¬SlowRunner(x)) ::: No athletes are slow runners.\n∀x (ProfessionalBasketballPlayer(x) → Athlete(x)) ::: All professional basketball players are athletes.\n∀x (NBA(x) → ProfessionalBasketballPlayer(x)) ::: All NBA players are professional basketball players.\n∀x (Knicks(x) → NBA(x)) ::: All Knicks players are NBA players.\nJim ⊕ SlowRunner(jim) ::: Jim is either not a professional basketball player or not a slow runner.\nConclusion:\nAthlete(jim) ::: Jim is an athlete.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that c"
    ]
  },
  {
    "id": "FOLIO_train_98",
    "context": "All kids love animals. All toddlers are kids. If someone loves animals, then they are not bad. All pirates are bad. If Nancy is not a pirate, then Nancy loves animals. If Nancy is not a toddler, then Nancy is bad.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Nancy is a pirate.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nKid(x) ::: x is a kid.\nLove(x, y) ::: x loves y.\nAnimal(x) ::: x is an animal.\nToddler(x) ::: x is a toddler.\nBad(x) ::: x is bad.\nPirate(x) ::: x is a pirate.\nNancy(x) ::: x is Nancy.\nPremises:\n∀x (Kid(x) → Love(x, Animal(x))) ::: All kids love animals.\n∀x (Toddler(x) → Kid(x)) ::: All toddlers are kids.\n∀x (Love(x, Animal(x)) → ¬Bad(x)) ::: If someone loves animals, then they are not bad.\n∀x (Pirate(x) → Bad(x)) ::: All pirates are bad.\nNancy(nancy) ::: Nancy is Nancy.\nNancy(nancy) ∧ ¬Pirate(nancy) → Love(nancy, Animal(nancy)) ::: If Nancy is not a pirate, then Nancy loves animals.\nNancy(nancy) ∧ ¬Toddler(nancy) → Bad(nancy) ::: If Nancy is not a toddler, then Nancy is bad.\nConclusion:\nPirate(nancy) ::"
    ]
  },
  {
    "id": "FOLIO_train_99",
    "context": "All kids love animals. All toddlers are kids. If someone loves animals, then they are not bad. All pirates are bad. If Nancy is not a pirate, then Nancy loves animals. If Nancy is not a toddler, then Nancy is bad.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Nancy is not a pirate or a toddler.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nKid(x) ::: x is a kid.\nLove(x, y) ::: x loves y.\nAnimal(x) ::: x is an animal.\nToddler(x) ::: x is a toddler.\nBad(x) ::: x is bad.\nPirate(x) ::: x is a pirate.\nPremises:\n∀x (Kid(x) → Love(x, Animal(x))) ::: All kids love animals.\n∀x (Toddler(x) → Kid(x)) ::: All toddlers are kids.\n∀x (Love(x, Animal(x)) → ¬Bad(x)) ::: If someone loves animals, then they are not bad.\n∀x (Pirate(x) → Bad(x)) ::: All pirates are bad.\n¬Pirate(nancy) → Love(nancy, Animal(nancy)) ::: If Nancy is not a pirate, then Nancy loves animals.\n¬Toddler(nancy) → Bad(nancy) ::: If Nancy is not a toddler, then Nancy is bad.\nConclusion:\n¬(Pirate(nancy) ∨ Toddler(nancy)) ::: Nancy is not a pirate or a toddler.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either"
    ]
  },
  {
    "id": "FOLIO_train_100",
    "context": "All kids love animals. All toddlers are kids. If someone loves animals, then they are not bad. All pirates are bad. If Nancy is not a pirate, then Nancy loves animals. If Nancy is not a toddler, then Nancy is bad.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Nancy is not a pirate or a toddler, then she loves animals and is a kid.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nKid(x) ::: x is a kid.\nLove(x, y) ::: x loves y.\nAnimal(x) ::: x is an animal.\nBad(x) ::: x is bad.\nToddler(x) ::: x is a toddler.\nPirate(x) ::: x is a pirate.\nPremises:\n∀x (Kid(x) → Love(x, animal)) ::: All kids love animals.\n∀x (Toddler(x) → Kid(x)) ::: All toddlers are kids.\n∀x (Love(x, animal) → ¬Bad(x)) ::: If someone loves animals, then they are not bad.\n∀x (Pirate(x) → Bad(x)) ::: All pirates are bad.\n¬Pirate(nancy) → Love(nancy, animal) ::: If Nancy is not a pirate, then Nancy loves animals.\n¬Toddler(nancy) → Bad(nancy) ::: If Nancy is not a toddler, then Nancy is bad.\nConclusion:\n¬(Pirate(nancy) ∨ Toddler(nancy)) → (Love(nancy, animal) ∧ Kid(nancy)) ::: If Nancy is not a pirate or a toddler, then she loves animals and is a kid.\n------"
    ]
  },
  {
    "id": "FOLIO_train_101",
    "context": "Lana Wilson directed After Tiller, The Departure, and Miss Americana. If a film is directedy by a person, the person is a filmmaker. After Tiller is a documentary. The documentary is a type of films. Lana Wilson is from Kirkland. Kirkland is a US city. If a person is from a city in a country, the person is from the country. After Tiller is nominated for the Independent Spirit Award for Best Documentary.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Lana Wilson is a US filmmaker.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDirect(x, y) ::: x directed y.\nFilm(x) ::: x is a film.\nFilmmaker(x) ::: x is a filmmaker.\nFrom(x, y) ::: x is from y.\nCity(x) ::: x is a city.\nCountry(x) ::: x is a country.\nDocumentary(x) ::: x is a documentary.\nNominate(x, y) ::: x is nominated for y.\nIndependentSpiritAward(x) ::: x is the Independent Spirit Award.\nBestDocumentary(x) ::: x is the Best Documentary.\nPremises:\nDirect(lanaWilson, afterTiller) ∧ Direct(lanaWilson, theDeparture) ∧ Direct(lanaWilson, missAmericana) ::: Lana Wilson directed After Tiller, The Departure, and Miss Americana.\n∀x ∀y (Direct(x, y) → Filmmaker(x)) ::: If a film is directedy by a person, the person is a filmmaker.\nDocumentary(afterTiller) ::: After Tiller is a documentary.\n∀x (Documentary(x) → Film(x)) ::: The documentary is a type of films.\nFrom(lanaWilson, kirkland) ::: Lana Wilson is from Kirkland."
    ]
  },
  {
    "id": "FOLIO_train_102",
    "context": "Lana Wilson directed After Tiller, The Departure, and Miss Americana. If a film is directedy by a person, the person is a filmmaker. After Tiller is a documentary. The documentary is a type of films. Lana Wilson is from Kirkland. Kirkland is a US city. If a person is from a city in a country, the person is from the country. After Tiller is nominated for the Independent Spirit Award for Best Documentary.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Miss Americana is not directed by a filmmaker from Kirkland.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDirect(x, y) ::: x directed y.\nFilm(x) ::: x is a film.\nFilmmaker(x) ::: x is a filmmaker.\nDocumentary(x) ::: x is a documentary.\nFrom(x, y) ::: x is from y.\nCity(x) ::: x is a city.\nCountry(x) ::: x is a country.\nNominated(x, y) ::: x is nominated for y.\nIndependentSpiritAward(x) ::: x is the Independent Spirit Award.\nBestDocumentary(x) ::: x is the Best Documentary.\nPremises:\nDirect(lanaWilson, afterTiller) ∧ Direct(lanaWilson, theDeparture) ∧ Direct(lanaWilson, missAmericana) ::: Lana Wilson directed After Tiller, The Departure, and Miss Americana.\n∀x ∀y (Direct(x, y) → Filmmaker(x)) ::: If a film is directedy by a person, the person is a filmmaker.\nDocumentary(afterTiller) ::: After Tiller is a documentary.\n∀x (Documentary(x) → Film(x)) ::: The documentary is a type of films.\nFrom(lanaWilson, kirkland) ::: Lana Wilson is from Kirkland."
    ]
  },
  {
    "id": "FOLIO_train_103",
    "context": "Lana Wilson directed After Tiller, The Departure, and Miss Americana. If a film is directedy by a person, the person is a filmmaker. After Tiller is a documentary. The documentary is a type of films. Lana Wilson is from Kirkland. Kirkland is a US city. If a person is from a city in a country, the person is from the country. After Tiller is nominated for the Independent Spirit Award for Best Documentary.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Lana Wilson has won the Independent Spirit Award.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDirect(x, y) ::: x directed y.\nFilm(x) ::: x is a film.\nFilmmaker(x) ::: x is a filmmaker.\nDocumentary(x) ::: x is a documentary.\nFrom(x, y) ::: x is from y.\nCity(x) ::: x is a city.\nCountry(x) ::: x is a country.\nNominated(x, y) ::: x is nominated for y.\nIndependentSpiritAward(x) ::: x is the Independent Spirit Award.\nBestDocumentary(x) ::: x is the Best Documentary.\nPremises:\nDirect(lanaWilson, afterTiller) ∧ Direct(lanaWilson, theDeparture) ∧ Direct(lanaWilson, missAmericana) ::: Lana Wilson directed After Tiller, The Departure, and Miss Americana.\n∀x ∀y (Direct(x, y) → Filmmaker(x)) ::: If a film is directedy by a person, the person is a filmmaker.\nDocumentary(afterTiller) ::: After Tiller is a documentary.\n∀x (Documentary(x) → Film(x)) ::: The documentary is a type of films.\nFrom(lanaWilson, kirkland) ::: Lana Wilson is from Kirkland."
    ]
  },
  {
    "id": "FOLIO_train_104",
    "context": "All bears in zoos are not wild. Some bears are in zoos.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Not all bears are wild.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBear(x) ::: x is a bear.\nZoo(x) ::: x is a zoo.\nWild(x) ::: x is wild.\nIn(x, y) ::: x is in y.\nPremises:\n∀x (Bear(x) ∧ Zoo(x) → ¬Wild(x)) ::: All bears in zoos are not wild.\n∃x (Bear(x) ∧ Zoo(x)) ::: Some bears are in zoos.\nConclusion:\n¬∀x (Bear(x) → Wild(x)) ::: Not all bears are wild.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to"
    ]
  },
  {
    "id": "FOLIO_train_105",
    "context": "If a person is the leader of a country for life, that person is in a monarchy. Leaders are either a king or a queen. Queens are female. Kings are male. Elizabeth is a queen. Elizabeth is a leader",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Elizabeth is a king.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLeader(x) ::: x is a leader.\nKing(x) ::: x is a king.\nQueen(x) ::: x is a queen.\nFemale(x) ::: x is female.\nMale(x) ::: x is male.\nMonarchy(x) ::: x is a monarchy.\nPremises:\n∀x (Leader(x) ∧ Life(x) → Monarchy(x)) ::: If a person is the leader of a country for life, that person is in a monarchy.\n∀x (Leader(x) → (King(x) ⊕ Queen(x))) ::: Leaders are either a king or a queen.\n∀x (Queen(x) → Female(x)) ::: Queens are female.\n∀x (King(x) → Male(x)) ::: Kings are male.\nQueen(elizabeth) ::: Elizabeth is a queen.\nLeader(elizabeth) ::: Elizabeth is a leader\nConclusion:\nKing(elizabeth) ::: Elizabeth is a king.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware"
    ]
  },
  {
    "id": "FOLIO_train_106",
    "context": "If a person is the leader of a country for life, that person is in a monarchy. Leaders are either a king or a queen. Queens are female. Kings are male. Elizabeth is a queen. Elizabeth is a leader",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Elizabeth is in a monarchy.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLeader(x) ::: x is a leader.\nMonarchy(x) ::: x is in a monarchy.\nKing(x) ::: x is a king.\nQueen(x) ::: x is a queen.\nFemale(x) ::: x is female.\nMale(x) ::: x is male.\nPremises:\n∀x (Leader(x) ∧ Life(x) → Monarchy(x)) ::: If a person is the leader of a country for life, that person is in a monarchy.\n∀x (Leader(x) → (King(x) ⊕ Queen(x))) ::: Leaders are either a king or a queen.\n∀x (Queen(x) → Female(x)) ::: Queens are female.\n∀x (King(x) → Male(x)) ::: Kings are male.\nQueen(elizabeth) ∧ Leader(elizabeth) ::: Elizabeth is a queen.\nElizabeth is a leader\nConclusion:\nMonarchy(elizabeth) ::: Elizabeth is in a monarchy.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina"
    ]
  },
  {
    "id": "FOLIO_train_107",
    "context": "If a person is the leader of a country for life, that person is in a monarchy. Leaders are either a king or a queen. Queens are female. Kings are male. Elizabeth is a queen. Elizabeth is a leader",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Elizabeth is a leader of a country.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLeader(x) ::: x is a leader.\nKing(x) ::: x is a king.\nQueen(x) ::: x is a queen.\nFemale(x) ::: x is female.\nMale(x) ::: x is male.\nMonarchy(x) ::: x is a monarchy.\nPremises:\n∀x (Leader(x) → Monarchy(x)) ::: If a person is the leader of a country for life, that person is in a monarchy.\n∀x (Leader(x) → (King(x) ⊕ Queen(x))) ::: Leaders are either a king or a queen.\n∀x (Queen(x) → Female(x)) ::: Queens are female.\n∀x (King(x) → Male(x)) ::: Kings are male.\nQueen(elizabeth) ::: Elizabeth is a queen.\nLeader(elizabeth) ::: Elizabeth is a leader\nConclusion:\nLeader(elizabeth) ::: Elizabeth is a leader of a country.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine"
    ]
  },
  {
    "id": "FOLIO_train_108",
    "context": "If people make their own matcha teas every morning with ceremonial-grade matcha powder, then they do not wake up late and start their schedules past noon regularly. If people live in California and attend yoga classes regularly, then they make their own matcha teas every morning with ceremonial-grade matcha powder. If people work in the entertainment industry as high-profile celebrities, then they wake up late and start their schedules past noon regularly. If people do not have regular 9-5 jobs, then they work in the entertainment industry as high-profile celebrities. All people who prefer working at home over going to the office every day do not have regular 9-5 jobs. Clay either both prefers to work at home over going to the office every day and makes his own matcha teas every morning with ceremonial-grade matcha powder, or he neither prefers to work at home over going to the office every day nor makes his own matcha teas every morning with ceremonial-grade matcha powder.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Clay does not have a regular 9-5 job.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMake(x, y) ::: x makes y.\nMatchaTea(x) ::: x is a matcha tea.\nCeremonialGrade(x) ::: x is ceremonial-grade matcha powder.\nMorning(x) ::: x is a morning.\nWakeUp(x, y) ::: x wakes up at y.\nSchedule(x, y) ::: x starts their schedule at y.\nRegularly(x, y) ::: x does y regularly.\nLive(x, y) ::: x lives in y.\nAttend(x, y) ::: x attends y.\nYogaClass(x) ::: x is a yoga class.\nWork(x, y) ::: x works in y.\nEntertainmentIndustry(x) ::: x is the entertainment industry.\nHighProfileCelebrity(x) ::: x is a high-profile celebrity.\nPrefer(x, y, z) ::: x prefers y over z.\nOffice(x) ::: x is an office.\nJob(x) ::: x is a job.\nPremises:\n∀x (Make(x, y) → CeremonialGrade(y)) ::: If people make their own matcha teas every morning with ceremonial-grade matcha powder, then they do not wake up late and start their schedules past noon regularly.\n∀x ("
    ]
  },
  {
    "id": "FOLIO_train_109",
    "context": "If people make their own matcha teas every morning with ceremonial-grade matcha powder, then they do not wake up late and start their schedules past noon regularly. If people live in California and attend yoga classes regularly, then they make their own matcha teas every morning with ceremonial-grade matcha powder. If people work in the entertainment industry as high-profile celebrities, then they wake up late and start their schedules past noon regularly. If people do not have regular 9-5 jobs, then they work in the entertainment industry as high-profile celebrities. All people who prefer working at home over going to the office every day do not have regular 9-5 jobs. Clay either both prefers to work at home over going to the office every day and makes his own matcha teas every morning with ceremonial-grade matcha powder, or he neither prefers to work at home over going to the office every day nor makes his own matcha teas every morning with ceremonial-grade matcha powder.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Clay lives in California and attends yoga classes regularly.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMake(x, y) ::: x makes y.\nMatchaTea(x) ::: x is a matcha tea.\nCeremonialGrade(x) ::: x is ceremonial-grade matcha powder.\nMorning(x) ::: x is in the morning.\nWakeUp(x) ::: x wakes up.\nLate(x) ::: x wakes up late.\nSchedule(x) ::: x is a schedule.\nStart(x, y) ::: x starts y.\nPast(x, y) ::: x is past y.\nNoon(x) ::: x is noon.\nRegularly(x) ::: x is regular.\nLive(x, y) ::: x lives in y.\nCalifornia(x) ::: x is California.\nAttend(x, y) ::: x attends y.\nYogaClass(x) ::: x is a yoga class.\nWork(x, y) ::: x works in y.\nEntertainmentIndustry(x) ::: x is the entertainment industry.\nHighProfileCelebrity(x) ::: x is a high-profile celebrity.\nPrefer(x, y) ::: x prefers y.\nWorkAtHome(x) ::: x works at home.\nOffice(x) ::: x is the office.\nEveryDay(x) ::: x is every day.\nHave"
    ]
  },
  {
    "id": "FOLIO_train_110",
    "context": "If people make their own matcha teas every morning with ceremonial-grade matcha powder, then they do not wake up late and start their schedules past noon regularly. If people live in California and attend yoga classes regularly, then they make their own matcha teas every morning with ceremonial-grade matcha powder. If people work in the entertainment industry as high-profile celebrities, then they wake up late and start their schedules past noon regularly. If people do not have regular 9-5 jobs, then they work in the entertainment industry as high-profile celebrities. All people who prefer working at home over going to the office every day do not have regular 9-5 jobs. Clay either both prefers to work at home over going to the office every day and makes his own matcha teas every morning with ceremonial-grade matcha powder, or he neither prefers to work at home over going to the office every day nor makes his own matcha teas every morning with ceremonial-grade matcha powder.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Clay neither prefers working at home over going to the office every day nor lives in California and attends yoga classes regularly.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMake(x, y) ::: x makes y.\nMatchaTea(x) ::: x is a matcha tea.\nCeremonialGrade(x) ::: x is ceremonial-grade matcha powder.\nWakeUp(x, y) ::: x wakes up at y.\nSchedule(x, y) ::: x starts their schedule at y.\nRegularly(x, y) ::: x does y regularly.\nLive(x, y) ::: x lives in y.\nAttend(x, y) ::: x attends y.\nYogaClass(x) ::: x is a yoga class.\nWork(x, y) ::: x works in y.\nEntertainmentIndustry(x) ::: x is the entertainment industry.\nHighProfileCelebrity(x) ::: x is a high-profile celebrity.\nPrefer(x, y) ::: x prefers y.\nOffice(x) ::: x is the office.\nJob(x) ::: x is a job.\nPremises:\n∀x (Make(x, matchaTea) → CeremonialGrade(matchaTea)) ::: If people make their own matcha teas every morning with ceremonial-grade matcha powder, then they do not wake up late and start their schedules past noon regularly.\n∀x (Live(x, california) ∧ Attend(x, yogaClass) → Make(x, matchaTea)) ::: If people live in California and attend yoga classes regularly, then they make their own matcha teas every morning with ceremonial-grade matcha powder.\n∀x (Work(x, entertainmentIndustry) → HighProfileCelebrity(x)) ::: If people work in the entertainment industry as high-profile celebrities, then they wake up late and start their schedules past noon regularly.\n∀x (¬Job(x) → Work(x, entertainmentIndustry)) ::: If people do not have regular 9-5 jobs, then they work in the entertainment industry as high-profile celebrities.\n∀x (Prefer(x, home) → ¬Job(x)) ::: All people who prefer working at home over going to the office every day do not have regular 9-5 jobs.\n(Prefer(clay, home) ∧ Make(clay, matchaTea)) ⊕ ¬(Prefer(clay, home) ∨ Make(clay, matchaTea)) ::: Clay either both prefers to work at home over going to the office every day and makes his own matcha teas every morning with ceremonial-grade matcha powder, or he neither prefers to work at home over going to the office every day nor makes his own matcha teas every morning with ceremonial-grade matcha powder.\nConclusion:\n¬(Prefer(clay, home) ∧ Live(clay, california) ∧ Attend(clay, yogaClass)) ::: Clay neither prefers working at home over going to the office every day nor lives in California and attends yoga classes regularly.\n------"
    ]
  },
  {
    "id": "FOLIO_train_111",
    "context": "Thomas Barber was an English professional footballer. Thomas Barber played in the Football League for Aston Villa. Thomas Barber played as a half back and inside left. Thomas Barber scored the winning goal in the 1913 FA Cup Final.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Thomas Barber played in the Football League for Bolton Wanderers",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEnglish(x) ::: x is an English person.\nProfessionalFootballer(x) ::: x is a professional footballer.\nPlay(x, y) ::: x plays in the Football League for y.\nPlayAs(x, y) ::: x plays as y.\nScore(x, y) ::: x scores the winning goal in the y FA Cup Final.\nPremises:\nEnglish(thomasBarber) ∧ ProfessionalFootballer(thomasBarber) ∧ Play(thomasBarber, astonVilla) ∧ PlayAs(thomasBarber, halfBack) ∧ PlayAs(thomasBarber, insideLeft) ∧ Score(thomasBarber, year1913) ::: Thomas Barber was an English professional footballer. Thomas Barber played in the Football League for Aston Villa. Thomas Barber played as a half back and inside left. Thomas Barber scored the winning goal in the 1913 FA Cup Final.\nConclusion:\nPlay(thomasBarber, boltonWanderers) ::: Thomas Barber played in the Football League for Bolton Wanderers\n------\nProblem:\nThe 1992 Summer Olympics, officially known as the Games of the XXV Olympiad, was an international multi-sport event that was held from 25 July to 9 August 1992 in Barcelona, Catalonia, Spain. The 1992 Summer Olympics were the first Summer Olympics to be staged in Spain. The 1992 Summer Olympics were the first Summer Olympics to be staged in a Spanish-speaking country. The 1992 Summer Olympics were the first Summer Olympics to be staged in a country that had been under a dictatorship in the preceding 20 years.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The 1992 Summer Olympics were the first Summer Olympics to be staged in a country that had been under a dictatorship in the preceding 20 years.\nBased on the above information, is the following statement true, false, or uncertain? The 1992 Summer Olympics were the first Summer Olympics to be staged in a country that had been under a dictatorship in the preceding 20 years.\nBased on the above information, is the following statement true, false, or uncertain? The 1992 Summer Olympics were the first Summer Olympics to be staged in a country that had been under a dictatorship in the preceding 20 years.\n###\nPredicates:\nSummerOlympics(x) ::: x is the Summer Olympics.\nStaged(x, y) ::: x is staged in y.\nFirst(x, y) ::: x is the first y.\nSpanishSpeakingCountry(x) ::: x is a Spanish-speaking country.\nCountry(x) ::: x is a country.\nDictatorship(x) ::: x is a dictatorship.\nPreceding(x, y) ::: x is in the preceding y.\nPremises:\nSummerOlympics(gamesOfTheXXV)"
    ]
  },
  {
    "id": "FOLIO_train_112",
    "context": "Thomas Barber was an English professional footballer. Thomas Barber played in the Football League for Aston Villa. Thomas Barber played as a half back and inside left. Thomas Barber scored the winning goal in the 1913 FA Cup Final.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Thomas Barber played as an inside left.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEnglish(x) ::: x is an English person.\nProfessionalFootballer(x) ::: x is a professional footballer.\nPlay(x, y) ::: x plays in the Football League for y.\nHalfBack(x) ::: x plays as a half back.\nInsideLeft(x) ::: x plays as an inside left.\nScore(x, y) ::: x scored the winning goal in the y FA Cup Final.\nPremises:\nEnglish(thomasBarber) ∧ ProfessionalFootballer(thomasBarber) ∧ Play(thomasBarber, astonVilla) ∧ HalfBack(thomasBarber) ∧ InsideLeft(thomasBarber) ∧ Score(thomasBarber, year1913) ::: Thomas Barber was an English professional footballer. Thomas Barber played in the Football League for Aston Villa. Thomas Barber played as a half back and inside left. Thomas Barber scored the winning goal in the 1913 FA Cup Final.\nConclusion:\nInsideLeft(thomasBarber) ::: Thomas Barber played as an inside left.\n------\nProblem:\nThe 1992 Summer Olympics, officially known as the Games of the XXV Olympiad, was an international multi-sport event that was held from 25 July to 9 August 1992 in Barcelona, Catalonia, Spain. The 1992 Summer Olympics were the first Summer Olympics to be staged in Spain. The 1992 Summer Olympics were the first Summer Olympics to be staged in a city that had previously hosted the Summer Olympics. The 1992 Summer Olympics were the first Summer Olympics to be staged in a city that had previously hosted the Summer Olympics and the first Summer Olympics to be staged in a city that had previously hosted the Summer Olympics.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The 1992 Summer Olympics were the first Summer Olympics to be staged in a city that had previously hosted the Summer Olympics.\nBased on the above information, is the following statement true, false, or uncertain? The 1992 Summer Olympics were the first Summer Olympics to be staged in a city that had previously hosted the Summer Olympics and the first Summer Olympics to be staged in a city that had previously hosted the Summer Olympics.\n###\nPredicates:\nSummerOlympics(x) ::: x is the Summer Olympics.\nStaged(x, y) ::: x is staged in y.\nCity(x) ::: x is a city.\nHost(x, y) ::: x is hosted in y.\nPremises:\nSummerOlympics(gamesOfTheXXV) ∧ Staged(gamesOfTheXXV, barcelona) ∧ City(barcelona) ∧ Host(barcelona, gamesOfTheXXV) ::: The 1992 Summer Olympics, officially known as the Games of the XXV Olympiad, was an international multi-sport event that was held from 25 July to 9 August 1992 in"
    ]
  },
  {
    "id": "FOLIO_train_113",
    "context": "Thomas Barber was an English professional footballer. Thomas Barber played in the Football League for Aston Villa. Thomas Barber played as a half back and inside left. Thomas Barber scored the winning goal in the 1913 FA Cup Final.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? An English professional footballer scored the winning goal in the 1913 FA Cup Final.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEnglish(x) ::: x is an English person.\nProfessionalFootballer(x) ::: x is a professional footballer.\nPlay(x, y) ::: x plays in the Football League for y.\nPlay(x, y, z) ::: x plays as y in z.\nScore(x, y) ::: x scores the winning goal in y.\nPremises:\nEnglish(thomasBarber) ∧ ProfessionalFootballer(thomasBarber) ∧ Play(thomasBarber, AstonVilla) ∧ Play(thomasBarber, halfBack, insideLeft) ∧ Score(thomasBarber, year1913FAcupFinal) ::: Thomas Barber was an English professional footballer. Thomas Barber played in the Football League for Aston Villa. Thomas Barber played as a half back and inside left. Thomas Barber scored the winning goal in the 1913 FA Cup Final.\nConclusion:\n∃x (English(x) ∧ ProfessionalFootballer(x) ∧ Score(x, year1913FAcupFinal)) ::: An English professional footballer scored the winning goal in the 1913 FA Cup Final.\n------\nProblem:\nThe 1992 Summer Olympics, officially known as the Games of the XXV Olympiad, was an international multi-sport event that was held from 25 July to 9 August 1992 in Barcelona, Catalonia, Spain. The 1992 Summer Olympics were the first Summer Olympics since the 1972 Summer Olympics to be held in Europe, and the first since the 1984 Summer Olympics to be held outside the United States. The 1992 Summer Olympics were the last Summer Olympics to be held in the same year as the Winter Olympics until 2020. The 1992 Summer Olympics were the first Summer Olympics to be held in a city that had previously hosted the Summer Olympics. The 1992 Summer Olympics were the first Summer Olympics to be held in a city that had previously hosted the Winter Olympics. The 1992 Summer Olympics were the first Summer Olympics to be held in a city that had previously hosted the Summer Olympics. The 1992 Summer Olympics were the first Summer Olympics to be held in a city that had previously hosted the Winter Olympics. The 1992 Summer Olympics were the first Summer Olympics to be held in a city that had previously hosted the Summer Olympics. The 1992 Summer Olympics were the first Summer Olympics to be held in a city that had previously hosted the Winter Olympics. The 1992 Summer Olympics were the first Summer Olympics to be held in a city that had previously hosted the Summer Olympics. The 1992 Summer Olympics were the first Summer Olympics to be held in a city that had previously hosted the Winter Olympics. The 1992 Summer Olympics were the first Summer Olympics to be held in a city that had previously hosted the Summer Olympics. The 1992 Summer Olympics were the first Summer Olympics to be held in a city that had previously hosted the Winter Olympics. The 1992 Summer Olympics were the first Summer Olympics to be held in a city that had previously"
    ]
  },
  {
    "id": "FOLIO_train_114",
    "context": "If people play the instrument in the concert, then he is good at playing this kind of instrument. Peter plays piano, violin, and saxophone. Peter was invited to play piano at the concert hall. Oliver and Peter were both invited to perform in the concert. Oliver plays a different musical instrument from Peter in the concert.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Oliver plays piano in the concert.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPlay(x, y) ::: x plays y.\nGood(x, y) ::: x is good at playing y.\nConcert(x) ::: x is a concert.\nPremises:\n∀x (Play(x, y) ∧ Concert(y) → Good(x, y)) ::: If people play the instrument in the concert, then he is good at playing this kind of instrument.\nPlay(peter, piano) ∧ Play(peter, violin) ∧ Play(peter, saxophone) ::: Peter plays piano, violin, and saxophone.\nConcert(concertHall) ∧ Play(peter, piano) ::: Peter was invited to play piano at the concert hall.\nConcert(concert) ∧ Play(peter, piano) ∧ Play(oliver, y) ∧ ¬(y = piano) ::: Oliver and Peter were both invited to perform in the concert. Oliver plays a different musical instrument from Peter in the concert.\nConclusion:\nPlay(oliver, piano) ::: Oliver plays piano in the concert.\n------\nProblem:\nIf a person is a student, then he is a person who is a student. If a person is a student, then he is a person who is a student. If a person is a student, then he is a person who is a student. If a person is a student, then he is a person who is a student. If a person is a student, then he is a person who is a student. If a person is a student, then he is a person who is a student. If a person is a student, then he is a person who is a student. If a person is a student, then he is a person who is a student. If a person is a student, then he is a person who is a student. If a person is a student, then he is a person who is a student. If a person is a student, then he is a person who is a student. If a person is a student, then he is a person who is a student. If a person is a student, then he is a person who is a student. If a person is a student, then he is a person who is a student. If a person is a student, then he is a person who is a student. If a person is a student, then he is a person who is a student. If a person is a student, then he is a person who is a student. If a person is a student, then he is a person who is a student. If a person is a student, then he is a person who is a student. If a person is a student, then he is a person who is a student. If a person is a student, then he is a person who is a student. If a person is a student, then he is a person who is a student. If a person is a student, then he is a person who is a student. If a person is a student, then he is a person who is a student. If a person is a student, then he is a person who is a student. If a person is a student, then he is a person who is a student. If a person"
    ]
  },
  {
    "id": "FOLIO_train_115",
    "context": "If people play the instrument in the concert, then he is good at playing this kind of instrument. Peter plays piano, violin, and saxophone. Peter was invited to play piano at the concert hall. Oliver and Peter were both invited to perform in the concert. Oliver plays a different musical instrument from Peter in the concert.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Oliver plays violin in the concert.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPlay(x, y) ::: x plays y.\nGood(x, y) ::: x is good at playing y.\nConcert(x) ::: x is a concert.\nPremises:\n∀x (Play(x, y) ∧ Concert(y) → Good(x, y)) ::: If people play the instrument in the concert, then he is good at playing this kind of instrument.\nPlay(peter, piano) ∧ Play(peter, violin) ∧ Play(peter, saxophone) ::: Peter plays piano, violin, and saxophone.\nPlay(peter, piano) ∧ Concert(concertHall) ::: Peter was invited to play piano at the concert hall.\nPlay(oliver, x) ∧ Play(peter, x) ∧ Concert(concert) ∧ ¬(x = piano) ::: Oliver and Peter were both invited to perform in the concert. Oliver plays a different musical instrument from Peter in the concert.\nConclusion:\nPlay(oliver, violin) ∧ Concert(concert) ::: Oliver plays violin in the concert.\n------\nProblem:\nIf a person is a student, then he is a person who is a student. If a person is a student, then he is a person who is a student. If a person is a student, then he is a person who is a student. If a person is a student, then he is a person who is a student. If a person is a student, then he is a person who is a student. If a person is a student, then he is a person who is a student. If a person is a student, then he is a person who is a student. If a person is a student, then he is a person who is a student. If a person is a student, then he is a person who is a student. If a person is a student, then he is a person who is a student. If a person is a student, then he is a person who is a student. If a person is a student, then he is a person who is a student. If a person is a student, then he is a person who is a student. If a person is a student, then he is a person who is a student. If a person is a student, then he is a person who is a student. If a person is a student, then he is a person who is a student. If a person is a student, then he is a person who is a student. If a person is a student, then he is a person who is a student. If a person is a student, then he is a person who is a student. If a person is a student, then he is a person who is a student. If a person is a student, then he is a person who is a student. If a person is a student, then he is a person who is a student. If a person is a student, then he is a person who is a student. If a person is a student, then he is a person who is a student. If a person is a student, then he is a person who is a student. If a person is a student, then"
    ]
  },
  {
    "id": "FOLIO_train_116",
    "context": "If people play the instrument in the concert, then he is good at playing this kind of instrument. Peter plays piano, violin, and saxophone. Peter was invited to play piano at the concert hall. Oliver and Peter were both invited to perform in the concert. Oliver plays a different musical instrument from Peter in the concert.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Peter is good at playing piano.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPlay(x, y) ::: x plays y.\nGood(x, y) ::: x is good at playing y.\nInstrument(x) ::: x is an instrument.\nConcert(x) ::: x is a concert.\nInvite(x, y) ::: x is invited to y.\nPremises:\n∀x (Play(x, y) ∧ Concert(y) → Good(x, y)) ::: If people play the instrument in the concert, then he is good at playing this kind of instrument.\nPlay(peter, piano) ∧ Play(peter, violin) ∧ Play(peter, saxophone) ::: Peter plays piano, violin, and saxophone.\nInvite(peter, concertHall) ::: Peter was invited to play piano at the concert hall.\nInvite(oliver, concert) ∧ Invite(peter, concert) ::: Oliver and Peter were both invited to perform in the concert.\nPlay(oliver, x) ∧ Play(peter, y) ∧ ¬(x = y) ∧ Concert(concert) ::: Oliver plays a different musical instrument from Peter in the concert.\nConclusion:\nGood(peter, piano) ::: Peter is good at playing piano.\n------\nProblem:\nIf a person is a student, then he is a person who is a student. If a person is a student, then he is a person who is a student. If a person is a student, then he is a person who is a student. If a person is a student, then he is a person who is a student. If a person is a student, then he is a person who is a student. If a person is a student, then he is a person who is a student. If a person is a student, then he is a person who is a student. If a person is a student, then he is a person who is a student. If a person is a student, then he is a person who is a student. If a person is a student, then he is a person who is a student. If a person is a student, then he is a person who is a student. If a person is a student, then he is a person who is a student. If a person is a student, then he is a person who is a student. If a person is a student, then he is a person who is a student. If a person is a student, then he is a person who is a student. If a person is a student, then he is a person who is a student. If a person is a student, then he is a person who is a student. If a person is a student, then he is a person who is a student. If a person is a student, then he is a person who is a student. If a person is a student, then he is a person who is a student. If a person is a student, then he is a person who is a student. If a person is a student, then he is a person who is a student. If a person is a student, then he is a person who is a student. If a person is a student, then he is a"
    ]
  },
  {
    "id": "FOLIO_train_117",
    "context": "If something can go underwater, then it enjoys water. All animals that can swim can go underwater. Either an animal can swim or it can walk. Animals that can walk travel on land. Animals that enjoy water splash water around. Every animal that travels on land enjoys basking in the sun. George splashes water around and can swim. Liam is either an animal that can walk and enjoys water, or is neither an animal that can walk nor enjoys water.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? George enjoys basking in the sun.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nUnderwater(x) ::: x can go underwater.\nEnjoy(x, y) ::: x enjoys y.\nWater(x) ::: x is water.\nAnimal(x) ::: x is an animal.\nSwim(x) ::: x can swim.\nWalk(x) ::: x can walk.\nLand(x) ::: x is land.\nSplash(x, y) ::: x splashes y around.\nSun(x) ::: x is the sun.\nBask(x, y) ::: x enjoys basking in y.\nPremises:\n∀x (Underwater(x) → Enjoy(x, water)) ::: If something can go underwater, then it enjoys water.\n∀x (Swim(x) → Underwater(x)) ::: All animals that can swim can go underwater.\n∀x (Swim(x) ⊕ Walk(x)) ::: Either an animal can swim or it can walk.\n∀x (Walk(x) → Land(x)) ::: Animals that can walk travel on land.\n∀x (Enjoy(x, water) → Splash(x, water)) ::: Animals that enjoy water splash water around.\n∀x (Land(x) → Enjoy(x, sun)) ::: Every animal that travels on land enjoys basking in the sun.\nUnderwater(george) ∧ Swim(george) ∧ Splash(george, water) ::: George splashes water around and can swim.\n(Walk(liam) ∧ Enjoy(liam, water)) ⊕ ¬(Walk(liam) ∨ Enjoy(liam, water)) ::: Liam is either an animal that can walk and enjoys water, or is neither an animal that can walk nor enjoys water.\nConclusion:\nEnjoy(george, sun) ::: George enjoys basking in the sun.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is un"
    ]
  },
  {
    "id": "FOLIO_train_118",
    "context": "If something can go underwater, then it enjoys water. All animals that can swim can go underwater. Either an animal can swim or it can walk. Animals that can walk travel on land. Animals that enjoy water splash water around. Every animal that travels on land enjoys basking in the sun. George splashes water around and can swim. Liam is either an animal that can walk and enjoys water, or is neither an animal that can walk nor enjoys water.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Liam enjoys basking in the sun and splashing water around.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAnimal(x) ::: x is an animal.\nCanSwim(x) ::: x can swim.\nCanWalk(x) ::: x can walk.\nCanGoUnderwater(x) ::: x can go underwater.\nEnjoysWater(x) ::: x enjoys water.\nSplashesWaterAround(x) ::: x splashes water around.\nTravelsOnLand(x) ::: x travels on land.\nEnjoysBaskingInTheSun(x) ::: x enjoys basking in the sun.\nPremises:\n∀x (CanGoUnderwater(x) → EnjoysWater(x)) ::: If something can go underwater, then it enjoys water.\n∀x (CanSwim(x) → CanGoUnderwater(x)) ::: All animals that can swim can go underwater.\n∀x (CanSwim(x) ⊕ CanWalk(x)) ::: Either an animal can swim or it can walk.\n∀x (CanWalk(x) → TravelsOnLand(x)) ::: Animals that can walk travel on land.\n∀x (EnjoysWater(x) → SplashesWaterAround(x)) ::: Animals that enjoy water splash water around.\n∀x (TravelsOnLand(x) → EnjoysBaskingInTheSun(x)) ::: Every animal that travels on land enjoys basking in the sun.\nCanSwim(george) ∧ SplashesWaterAround(george) ::: George splashes water around and can swim.\n(CanWalk(liam) ∧ EnjoysWater(liam)) ⊕ ¬(CanWalk(liam) ∨ EnjoysWater(liam)) ::: Liam is either an animal that can walk and enjoys water, or is neither an animal that can walk nor enjoys water.\nConclusion:\nEnjoysBaskingInTheSun(liam) ∧ SplashesWaterAround(liam) ::: Liam enjoys basking in the sun and splashing water around.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to"
    ]
  },
  {
    "id": "FOLIO_train_119",
    "context": "If something can go underwater, then it enjoys water. All animals that can swim can go underwater. Either an animal can swim or it can walk. Animals that can walk travel on land. Animals that enjoy water splash water around. Every animal that travels on land enjoys basking in the sun. George splashes water around and can swim. Liam is either an animal that can walk and enjoys water, or is neither an animal that can walk nor enjoys water.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Liam neither enjoys basking in the sun nor splashing water around.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nUnderwater(x) ::: x can go underwater.\nEnjoy(x, y) ::: x enjoys y.\nWater(x) ::: x is water.\nAnimal(x) ::: x is an animal.\nSwim(x) ::: x can swim.\nWalk(x) ::: x can walk.\nTravel(x, y) ::: x travels on y.\nLand(x) ::: x is land.\nSplash(x) ::: x splashes water around.\nBask(x) ::: x enjoys basking in the sun.\nPremises:\n∀x (Underwater(x) → Enjoy(x, water)) ::: If something can go underwater, then it enjoys water.\n∀x (Swim(x) → Underwater(x)) ::: All animals that can swim can go underwater.\n∀x (Swim(x) ⊕ Walk(x)) ::: Either an animal can swim or it can walk.\n∀x (Walk(x) → Travel(x, land)) ::: Animals that can walk travel on land.\n∀x (Enjoy(x, water) → Splash(x)) ::: Animals that enjoy water splash water around.\n∀x (Travel(x, land) → Enjoy(x, bask)) ::: Every animal that travels on land enjoys basking in the sun.\nUnderwater(george) ∧ Swim(george) ∧ Splash(george) ::: George splashes water around and can swim.\n(Walk(liam) ∧ Enjoy(liam, water)) ⊕ ¬(Walk(liam) ∨ Enjoy(liam, water)) ::: Liam is either an animal that can walk and enjoys water, or is neither an animal that can walk nor enjoys water.\nConclusion:\n¬(Bask(liam) ∧ Splash(liam)) ::: Liam neither enjoys basking in the sun nor splashing water around.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug,"
    ]
  },
  {
    "id": "FOLIO_train_120",
    "context": "Cancer biology is finding genetic alterations that confer selective advantage to cancer cells. Cancer researchers have frequently ranked the importance of substitutions to cancer growth by P value. P values are thresholds for belief, not metrics of effect.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Cancer researchers tend to use the cancer effect size to determine the relative importance of the genetic alterations that confer selective advantage to cancer cells.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCancerBiology(x) ::: x is cancer biology.\nGeneticAlteration(x) ::: x is a genetic alteration.\nSelectiveAdvantage(x) ::: x confers selective advantage to cancer cells.\nRank(x, y) ::: x is ranked by y.\nImportance(x) ::: x is important.\nPValue(x) ::: x is a P value.\nBelief(x) ::: x is a belief.\nThreshold(x, y) ::: x is a threshold for y.\nMetric(x, y) ::: x is a metric of y.\nEffect(x) ::: x is an effect.\nPremises:\nCancerBiology(cancerBiology) ::: Cancer biology is finding genetic alterations that confer selective advantage to cancer cells.\n∀x (GeneticAlteration(x) → SelectiveAdvantage(x)) ::: Any genetic alteration confers selective advantage to cancer cells.\n∀x (CancerBiology(x) → Rank(x, importance)) ::: Cancer biologists tend to rank the importance of genetic alterations that confer selective advantage to cancer cells.\n∀x (PValue(x) → Belief(x)) ::: P values are thresholds for belief.\n∀x (PValue(x) → ¬Metric(x, effect)) ::: P values are not metrics of effect.\nConclusion:\n∀x (CancerBiology(x) → Rank(x, effectSize)) ::: Cancer biologists tend to use the cancer effect size to determine the relative importance of the genetic alterations that confer selective advantage to cancer cells.\n------"
    ]
  },
  {
    "id": "FOLIO_train_121",
    "context": "Cancer biology is finding genetic alterations that confer selective advantage to cancer cells. Cancer researchers have frequently ranked the importance of substitutions to cancer growth by P value. P values are thresholds for belief, not metrics of effect.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? P value represents the selection intensity for somatic variants in cancer cell lineages.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCancerBiology(x) ::: x is cancer biology.\nGeneticAlteration(x) ::: x is a genetic alteration.\nSelectiveAdvantage(x) ::: x confers selective advantage to cancer cells.\nCancerCell(x) ::: x is a cancer cell.\nCancerResearcher(x) ::: x is a cancer researcher.\nRank(x, y) ::: x ranks the importance of y.\nSubstitution(x) ::: x is a substitution.\nCancerGrowth(x) ::: x is cancer growth.\nPValue(x) ::: x is a P value.\nBelief(x) ::: x is a threshold for belief.\nMetric(x) ::: x is a metric.\nEffect(x) ::: x is a metric of effect.\nPremises:\nCancerBiology(cancerBiology) ::: Cancer biology is finding genetic alterations that confer selective advantage to cancer cells.\n∀x (GeneticAlteration(x) → SelectiveAdvantage(x)) ::: Any genetic alteration confers selective advantage to cancer cells.\n∀x (CancerCell(x) → SelectiveAdvantage(x)) ::: Any cancer cell confers selective advantage to cancer cells.\n∀x (CancerResearcher(x) → Rank(x, substitution)) ::: Cancer researchers have frequently ranked the importance of substitutions to cancer growth.\n∀x (PValue(x) → Belief(x)) ::: P values are thresholds for belief.\n∀x (PValue(x) → ¬Metric(x)) ::: P"
    ]
  },
  {
    "id": "FOLIO_train_122",
    "context": "Cancer biology is finding genetic alterations that confer selective advantage to cancer cells. Cancer researchers have frequently ranked the importance of substitutions to cancer growth by P value. P values are thresholds for belief, not metrics of effect.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Cancer effect size is a metric that is preferred by the majority of cancer researchers.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCancerBiology(x) ::: x is cancer biology.\nGeneticAlteration(x) ::: x is a genetic alteration.\nSelectiveAdvantage(x) ::: x confers selective advantage to cancer cells.\nRank(x, y) ::: x is ranked by y.\nImportance(x) ::: x is important.\nSubstitution(x) ::: x is a substitution.\nCancerGrowth(x) ::: x is cancer growth.\nPValue(x) ::: x is a P value.\nBelief(x) ::: x is a belief.\nThreshold(x, y) ::: x is a threshold for y.\nCancerResearcher(x) ::: x is a cancer researcher.\nMajority(x) ::: x is the majority.\nPrefer(x, y) ::: x prefers y.\nMetric(x) ::: x is a metric.\nEffect(x) ::: x is an effect.\nPremises:\nCancerBiology(cancerBiology) ::: Cancer biology is finding genetic alterations that confer selective advantage to cancer cells.\n∀x (GeneticAlteration(x) → SelectiveAdvantage(x)) ::: Any genetic alteration confers selective advantage to cancer cells.\n∀x (CancerResearcher(x) → Rank(x, importance)) ::: Cancer researchers have frequently ranked the importance of substitutions to cancer growth by P value.\n∀x (PValue(x) → Threshold(x, belief)) ::: P values are thresholds for belief, not metrics of effect.\nConclusion:\n∃x"
    ]
  },
  {
    "id": "FOLIO_train_123",
    "context": "Cancer biology is finding genetic alterations that confer selective advantage to cancer cells. Cancer researchers have frequently ranked the importance of substitutions to cancer growth by P value. P values are thresholds for belief, not metrics of effect.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? P value doesn't represent metrics of effect.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCancerBiology(x) ::: x is cancer biology.\nGeneticAlteration(x) ::: x is a genetic alteration.\nSelectiveAdvantage(x) ::: x confers selective advantage to cancer cells.\nRank(x, y) ::: x is ranked by y.\nImportance(x) ::: x is important.\nSubstitution(x) ::: x is a substitution.\nCancerGrowth(x) ::: x is cancer growth.\nPValue(x) ::: x is a P value.\nBelief(x) ::: x is a belief.\nThreshold(x, y) ::: x is a threshold for y.\nFrequently(x) ::: x is frequently.\nConclusion:\nPValue(x) → ¬MetricsOfEffect(x) ::: P value doesn't represent metrics of effect.\n------\nProblem:\nThe 2019–20 coronavirus pandemic is an ongoing global pandemic of coronavirus disease 2019 (COVID-19), caused by severe acute respiratory syndrome coronavirus 2 (SARS-CoV-2). The outbreak was first identified in Wuhan, Hubei, China, in December 2019. The World Health Organization declared the outbreak a Public Health Emergency of International Concern on 30 January 2020 and a pandemic on 11 March 2020. As of 10 April 2020, more than 1,600,000 cases of COVID-19 have been reported in over 200 countries and territories, resulting in more than 95,000 deaths and"
    ]
  },
  {
    "id": "FOLIO_train_124",
    "context": "All dispensable things are environment-friendly. All woodware is dispensable. All paper is woodware. No good things are bad. All environment-friendly things are good. A worksheet is either paper or is environment-friendly.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A worksheet is dispensable.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDispensable(x) ::: x is dispensable.\nEnvironmentFriendly(x) ::: x is environment-friendly.\nWoodware(x) ::: x is woodware.\nPaper(x) ::: x is paper.\nGood(x) ::: x is good.\nBad(x) ::: x is bad.\nWorksheet(x) ::: x is a worksheet.\nPremises:\n∀x (Dispensable(x) → EnvironmentFriendly(x)) ::: All dispensable things are environment-friendly.\n∀x (Woodware(x) → Dispensable(x)) ::: All woodware is dispensable.\n∀x (Paper(x) → Woodware(x)) ::: All paper is woodware.\n∀x (Good(x) → ¬Bad(x)) ::: No good things are bad.\n∀x (EnvironmentFriendly(x) → Good(x)) ::: All environment-friendly things are good.\nWorksheet(x) ∧ (Paper(x) ⊕ EnvironmentFriendly(x)) ::: A worksheet is either paper or is environment-friendly.\nConclusion:\nWorksheet(x) → Dispensable(x) ::: A worksheet is dispensable.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither"
    ]
  },
  {
    "id": "FOLIO_train_125",
    "context": "All dispensable things are environment-friendly. All woodware is dispensable. All paper is woodware. No good things are bad. All environment-friendly things are good. A worksheet is either paper or is environment-friendly.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A worksheet is not dispensable.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDispensable(x) ::: x is dispensable.\nEnvironmentFriendly(x) ::: x is environment-friendly.\nWoodware(x) ::: x is woodware.\nPaper(x) ::: x is paper.\nGood(x) ::: x is good.\nBad(x) ::: x is bad.\nWorksheet(x) ::: x is a worksheet.\nPremises:\n∀x (Dispensable(x) → EnvironmentFriendly(x)) ::: All dispensable things are environment-friendly.\n∀x (Woodware(x) → Dispensable(x)) ::: All woodware is dispensable.\n∀x (Paper(x) → Woodware(x)) ::: All paper is woodware.\n∀x (Good(x) → ¬Bad(x)) ::: No good things are bad.\n∀x (EnvironmentFriendly(x) → Good(x)) ::: All environment-friendly things are good.\nWorksheet(x) ∧ (Paper(x) ⊕ EnvironmentFriendly(x)) ::: A worksheet is either paper or is environment-friendly.\nConclusion:\n¬Dispensable(x) ::: A worksheet is not dispensable.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor un"
    ]
  },
  {
    "id": "FOLIO_train_126",
    "context": "All dispensable things are environment-friendly. All woodware is dispensable. All paper is woodware. No good things are bad. All environment-friendly things are good. A worksheet is either paper or is environment-friendly.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A worksheet is bad.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDispensable(x) ::: x is dispensable.\nEnvironmentFriendly(x) ::: x is environment-friendly.\nWoodware(x) ::: x is woodware.\nPaper(x) ::: x is paper.\nGood(x) ::: x is good.\nBad(x) ::: x is bad.\nWorksheet(x) ::: x is a worksheet.\nPremises:\n∀x (Dispensable(x) → EnvironmentFriendly(x)) ::: All dispensable things are environment-friendly.\n∀x (Woodware(x) → Dispensable(x)) ::: All woodware is dispensable.\n∀x (Paper(x) → Woodware(x)) ::: All paper is woodware.\n∀x (Good(x) → ¬Bad(x)) ::: No good things are bad.\n∀x (EnvironmentFriendly(x) → Good(x)) ::: All environment-friendly things are good.\nWorksheet(x) → (Paper(x) ⊕ EnvironmentFriendly(x)) ::: A worksheet is either paper or is environment-friendly.\nConclusion:\nBad(worksheet) ::: A worksheet is bad.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug."
    ]
  },
  {
    "id": "FOLIO_train_127",
    "context": "All dispensable things are environment-friendly. All woodware is dispensable. All paper is woodware. No good things are bad. All environment-friendly things are good. A worksheet is either paper or is environment-friendly.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A worksheet is not bad.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDispensable(x) ::: x is dispensable.\nEnvironmentFriendly(x) ::: x is environment-friendly.\nWoodware(x) ::: x is woodware.\nPaper(x) ::: x is paper.\nGood(x) ::: x is good.\nBad(x) ::: x is bad.\nWorksheet(x) ::: x is a worksheet.\nPremises:\n∀x (Dispensable(x) → EnvironmentFriendly(x)) ::: All dispensable things are environment-friendly.\n∀x (Woodware(x) → Dispensable(x)) ::: All woodware is dispensable.\n∀x (Paper(x) → Woodware(x)) ::: All paper is woodware.\n∀x (Good(x) → ¬Bad(x)) ::: No good things are bad.\n∀x (EnvironmentFriendly(x) → Good(x)) ::: All environment-friendly things are good.\nWorksheet(x) → (Paper(x) ⊕ EnvironmentFriendly(x)) ::: A worksheet is either paper or is environment-friendly.\nConclusion:\n¬Bad(x) ::: A worksheet is not bad.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug"
    ]
  },
  {
    "id": "FOLIO_train_128",
    "context": "No reptile has fur. All snakes are reptiles.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Some snake has fur.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nReptile(x) ::: x is a reptile.\nSnake(x) ::: x is a snake.\nFur(x) ::: x has fur.\nPremises:\n∀x (Reptile(x) → ¬Fur(x)) ::: No reptile has fur.\n∀x (Snake(x) → Reptile(x)) ::: All snakes are reptiles.\nConclusion:\n∃x (Snake(x) ∧ Fur(x)) ::: Some snake has fur.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor"
    ]
  },
  {
    "id": "FOLIO_train_129",
    "context": "All buildings in New Haven are low. All buildings managed by the Yale Housing are located in New Haven. All buildings in Manhattans are high. All buildings owned by Bloomberg are located in Manhattans. All buildings with the Bloomberg logo are owned by Bloomberg. Tower A is managed by the Yale Housing. Tower B is with the Bloomberg logo.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tower A is low.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBuilding(x) ::: x is a building.\nLow(x) ::: x is low.\nHigh(x) ::: x is high.\nNewHaven(x) ::: x is located in New Haven.\nManhattans(x) ::: x is located in Manhattans.\nYaleHousing(x) ::: x is managed by the Yale Housing.\nBloomberg(x) ::: x is owned by Bloomberg.\nBloombergLogo(x) ::: x is with the Bloomberg logo.\nPremises:\n∀x (Building(x) ∧ NewHaven(x) → Low(x)) ::: All buildings in New Haven are low.\n∀x (Building(x) ∧ YaleHousing(x) → NewHaven(x)) ::: All buildings managed by the Yale Housing are located in New Haven.\n∀x (Building(x) ∧ Manhattans(x) → High(x)) ::: All buildings in Manhattans are high.\n∀x (Building(x) ∧ Bloomberg(x) → Manhattans(x)) ::: All buildings owned by Bloomberg are located in Manhattans.\n∀x (Building(x) ∧ BloombergLogo(x) → Bloomberg(x)) ::: All buildings with the Bloomberg logo are owned by Bloomberg.\nYaleHousing(towerA) ::: Tower A is managed by the Yale Housing.\nBloombergLogo(towerB) ::: Tower B is with the Bloomberg logo.\nConclusion:"
    ]
  },
  {
    "id": "FOLIO_train_130",
    "context": "All buildings in New Haven are low. All buildings managed by the Yale Housing are located in New Haven. All buildings in Manhattans are high. All buildings owned by Bloomberg are located in Manhattans. All buildings with the Bloomberg logo are owned by Bloomberg. Tower A is managed by the Yale Housing. Tower B is with the Bloomberg logo.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tower B is not located in Manhattans.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBuilding(x) ::: x is a building.\nLow(x) ::: x is low.\nHigh(x) ::: x is high.\nNewHaven(x) ::: x is located in New Haven.\nManhattans(x) ::: x is located in Manhattans.\nYaleHousing(x) ::: x is managed by the Yale Housing.\nBloomberg(x) ::: x is owned by Bloomberg.\nBloombergLogo(x) ::: x is with the Bloomberg logo.\nTowerA(x) ::: x is Tower A.\nTowerB(x) ::: x is Tower B.\nPremises:\n∀x (Building(x) ∧ NewHaven(x) → Low(x)) ::: All buildings in New Haven are low.\n∀x (Building(x) ∧ YaleHousing(x) → NewHaven(x)) ::: All buildings managed by the Yale Housing are located in New Haven.\n∀x (Building(x) ∧ Manhattans(x) → High(x)) ::: All buildings in Manhattans are high.\n∀x (Building(x) ∧ Bloomberg(x) → Manhattans(x)) ::: All buildings owned by Bloomberg are located in Manhattans.\n∀x (Building(x) ∧ BloombergLogo(x) → Bloomberg(x)) ::: All buildings with the Bloomberg logo are owned by Bloomberg.\nTowerA(towerA) ∧ YaleHousing(towerA) ::: Tower A is managed by the Yale Housing.\nTowerB(towerB) ∧ BloombergLogo(towerB) ::: Tower B is with the Bloomberg logo.\nConclusion:\n¬Manhattans(towerB) ::: Tower B is not located in Manhattans.\n------"
    ]
  },
  {
    "id": "FOLIO_train_131",
    "context": "All buildings in New Haven are low. All buildings managed by the Yale Housing are located in New Haven. All buildings in Manhattans are high. All buildings owned by Bloomberg are located in Manhattans. All buildings with the Bloomberg logo are owned by Bloomberg. Tower A is managed by the Yale Housing. Tower B is with the Bloomberg logo.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tower B is located in New Haven.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBuilding(x) ::: x is a building.\nLow(x) ::: x is low.\nHigh(x) ::: x is high.\nNewHaven(x) ::: x is located in New Haven.\nManhattans(x) ::: x is located in Manhattans.\nYaleHousing(x) ::: x is managed by the Yale Housing.\nBloomberg(x) ::: x is owned by Bloomberg.\nBloombergLogo(x) ::: x is with the Bloomberg logo.\nTowerA(x) ::: x is Tower A.\nTowerB(x) ::: x is Tower B.\nPremises:\n∀x (Building(x) ∧ NewHaven(x) → Low(x)) ::: All buildings in New Haven are low.\n∀x (Building(x) ∧ YaleHousing(x) → NewHaven(x)) ::: All buildings managed by the Yale Housing are located in New Haven.\n∀x (Building(x) ∧ Manhattans(x) → High(x)) ::: All buildings in Manhattans are high.\n∀x (Building(x) ∧ Bloomberg(x) → Manhattans(x)) ::: All buildings owned by Bloomberg are located in Manhattans.\n∀x (Building(x) ∧ BloombergLogo(x) → Bloomberg(x)) ::: All buildings with the Bloomberg logo are owned by Bloomberg.\nYaleHousing(towerA) ::: Tower A is managed by the Yale Housing.\nBloombergLogo(towerB) ::: Tower B is with the Bloomberg logo.\nConclusion:\nManhattans(towerB) ::: Tower B is located in Manhattans.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or"
    ]
  },
  {
    "id": "FOLIO_train_132",
    "context": "No cold-blooded animals are birds. All reptiles are cold-blooded. Either an animal is a bird or it eats other animals. If an animal eats other animals, then it is a carnivore. Ron is neither a cold-blooded animal nor a carnivore. Henry is neither a carnivore nor a lizard.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Ron is a lizard.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nColdBlooded(x) ::: x is a cold-blooded animal.\nBird(x) ::: x is a bird.\nReptile(x) ::: x is a reptile.\nAnimal(x) ::: x is an animal.\nEat(x, y) ::: x eats y.\nCarnivore(x) ::: x is a carnivore.\nLizard(x) ::: x is a lizard.\nPremises:\n∀x (ColdBlooded(x) → ¬Bird(x)) ::: No cold-blooded animals are birds.\n∀x (Reptile(x) → ColdBlooded(x)) ::: All reptiles are cold-blooded.\n∀x (Animal(x) → (Bird(x) ⊕ Eat(x, otherAnimals))) ::: Either an animal is a bird or it eats other animals.\n∀x (Eat(x, otherAnimals) → Carnivore(x)) ::: If an animal eats other animals, then it is a carnivore.\n¬ColdBlooded(ron) ∧ ¬Carnivore(ron) ::: Ron is neither a cold-blooded animal nor a carnivore.\n¬Carnivore(henry) ∧ ¬Lizard(henry) ::: Henry is neither a carnivore nor a lizard.\nConclusion:\nLizard(ron) ::: Ron is a lizard.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on c"
    ]
  },
  {
    "id": "FOLIO_train_133",
    "context": "No cold-blooded animals are birds. All reptiles are cold-blooded. Either an animal is a bird or it eats other animals. If an animal eats other animals, then it is a carnivore. Ron is neither a cold-blooded animal nor a carnivore. Henry is neither a carnivore nor a lizard.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Either Henry is a reptile or Ron eats other animals.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nColdBlooded(x) ::: x is a cold-blooded animal.\nBird(x) ::: x is a bird.\nReptile(x) ::: x is a reptile.\nAnimal(x) ::: x is an animal.\nEat(x, y) ::: x eats y.\nCarnivore(x) ::: x is a carnivore.\nPremises:\n∀x (ColdBlooded(x) → ¬Bird(x)) ::: No cold-blooded animals are birds.\n∀x (Reptile(x) → ColdBlooded(x)) ::: All reptiles are cold-blooded.\n∀x (Animal(x) → (Bird(x) ⊕ Eat(x, otherAnimals))) ::: Either an animal is a bird or it eats other animals.\n∀x (Eat(x, otherAnimals) → Carnivore(x)) ::: If an animal eats other animals, then it is a carnivore.\n¬ColdBlooded(ron) ∧ ¬Carnivore(ron) ::: Ron is neither a cold-blooded animal nor a carnivore.\n¬Carnivore(henry) ∧ ¬Reptile(henry) ::: Henry is neither a carnivore nor a lizard.\nConclusion:\n(Reptile(henry) ⊕ Eat(ron, otherAnimals)) ::: Either Henry is a reptile or Ron eats other animals.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug"
    ]
  },
  {
    "id": "FOLIO_train_134",
    "context": "No cold-blooded animals are birds. All reptiles are cold-blooded. Either an animal is a bird or it eats other animals. If an animal eats other animals, then it is a carnivore. Ron is neither a cold-blooded animal nor a carnivore. Henry is neither a carnivore nor a lizard.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? It is not true that Ron is a reptile or that Henry is cold-blooded.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nColdBlooded(x) ::: x is a cold-blooded animal.\nBird(x) ::: x is a bird.\nReptile(x) ::: x is a reptile.\nEat(x, y) ::: x eats y.\nAnimal(x) ::: x is an animal.\nCarnivore(x) ::: x is a carnivore.\nPremises:\n∀x (ColdBlooded(x) → ¬Bird(x)) ::: No cold-blooded animals are birds.\n∀x (Reptile(x) → ColdBlooded(x)) ::: All reptiles are cold-blooded.\n∀x (Animal(x) → (Bird(x) ⊕ Eat(x, otherAnimals))) ::: Either an animal is a bird or it eats other animals.\n∀x (Eat(x, otherAnimals) → Carnivore(x)) ::: If an animal eats other animals, then it is a carnivore.\n¬ColdBlooded(ron) ∧ ¬Carnivore(ron) ::: Ron is neither a cold-blooded animal nor a carnivore.\n¬Carnivore(henry) ∧ ¬Reptile(henry) ::: Henry is neither a carnivore nor a lizard.\nConclusion:\n¬(Reptile(ron) ∨ ColdBlooded(henry)) ::: It is not true that Ron is a reptile or that Henry is cold-blooded.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffe"
    ]
  },
  {
    "id": "FOLIO_train_135",
    "context": "Ambiortus is a prehistoric bird genus. Ambiorus Dementjevi is the only known species of Ambiortus. The Mongol region was where Ambiorus Dementjevi lived. Yevgeny Kurochkin was the discoverer of Ambiortus.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Yevgeny Kurochkin discovered a new bird genus.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBird(x) ::: x is a bird.\nGenus(x) ::: x is a bird genus.\nSpecies(x) ::: x is a species.\nLive(x, y) ::: x lives in y.\nDiscover(x, y) ::: x is the discoverer of y.\nPremises:\nGenus(ambiortus) ::: Ambiortus is a prehistoric bird genus.\nSpecies(ambiorusDementjevi) ::: Ambiorus Dementjevi is the only known species of Ambiortus.\nLive(ambiorusDementjevi, mongolRegion) ::: The Mongol region was where Ambiorus Dementjevi lived.\nDiscover(yevgenyKurochkin, ambiortus) ::: Yevgeny Kurochkin was the discoverer of Ambiortus.\nConclusion:\n∃x (Bird(x) ∧ Discover(yevgenyKurochkin, x)) ::: Yevgeny Kurochkin discovered a new bird genus.\n------\nProblem:\nThe 1998 FIFA World Cup was the 16th FIFA World Cup, the world championship for men's national association football teams. The 1998 FIFA World Cup was held in France. The 1998 FIFA World Cup was won by France.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The 1998 FIFA World Cup was held in France.\nBased on the above information, is the following statement true, false, or uncertain? The 1998 FIFA World Cup was won by France.\nBased on the above information, is the following statement true, false, or uncertain? The 1998 FIFA World Cup was held in Germany.\n###\nPredicates:\nWorldCup(x) ::: x is a FIFA World Cup.\nYear(x) ::: x is a year.\nHeld(x, y) ::"
    ]
  },
  {
    "id": "FOLIO_train_136",
    "context": "Ambiortus is a prehistoric bird genus. Ambiorus Dementjevi is the only known species of Ambiortus. The Mongol region was where Ambiorus Dementjevi lived. Yevgeny Kurochkin was the discoverer of Ambiortus.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There is a species of Ambiortus that doesn't live in the Mongol region.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSpecies(x) ::: x is a species.\nGenus(x) ::: x is a genus.\nAmbiortus(x) ::: x is a prehistoric bird genus.\nAmbiorusDementjevi(x) ::: x is the only known species of Ambiortus.\nMongolRegion(x) ::: x is the Mongol region.\nLive(x, y) ::: x lives in y.\nDiscoverer(x, y) ::: x is the discoverer of y.\nPremises:\nGenus(ambiortus) ::: Ambiortus is a prehistoric bird genus.\nSpecies(ambiorusDementjevi) ∧ Ambiortus(ambiorusDementjevi) ::: Ambiorus Dementjevi is the only known species of Ambiortus.\nMongolRegion(mongolRegion) ∧ Live(ambiorusDementjevi, mongolRegion) ::: The Mongol region was where Ambiorus Dementjevi lived.\nDiscoverer(yevgenyKurochkin, ambiortus) ::: Yevgeny Kurochkin was the discoverer of Ambiortus.\nConclusion:\n∃x (Species(x) ∧ Ambiortus(x) ∧ ¬Live(x, mongolRegion)) ::: There is a species of Ambiortus that doesn't live in the Mongol region.\n------\nProblem:\nThe 1996 Summer Olympics, officially known as the Games of the XXVI Olympiad, was an international multi-sport event that was celebrated in 1996 in Atlanta, Georgia, United States. The 1996 Summer Olympics was the first time that the Summer Olympic Games were held in the United States since the 1984 Summer Olympics in Los Angeles. The 1996 Summer Olympics was the first time that the Summer Olympic Games were held in the Southern United States"
    ]
  },
  {
    "id": "FOLIO_train_137",
    "context": "Ambiortus is a prehistoric bird genus. Ambiorus Dementjevi is the only known species of Ambiortus. The Mongol region was where Ambiorus Dementjevi lived. Yevgeny Kurochkin was the discoverer of Ambiortus.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Yevgeny Kurochkin lived in the Mongol region.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGenus(x) ::: x is a genus.\nSpecies(x) ::: x is a species.\nLived(x, y) ::: x lived in y.\nDiscoverer(x, y) ::: x is the discoverer of y.\nPremises:\nGenus(ambiortus) ::: Ambiortus is a prehistoric bird genus.\nSpecies(ambiorusDementjevi) ::: Ambiorus Dementjevi is the only known species of Ambiortus.\nLived(ambiorusDementjevi, mongolRegion) ::: The Mongol region was where Ambiorus Dementjevi lived.\nDiscoverer(yevgenyKurochkin, ambiortus) ::: Yevgeny Kurochkin was the discoverer of Ambiortus.\nConclusion:\nLived(yevgenyKurochkin, mongolRegion) ::: Yevgeny Kurochkin lived in the Mongol region.\n------\nProblem:\nThe 1998 FIFA World Cup was the 16th FIFA World Cup, the world championship for men's national association football teams. The 1998 FIFA World Cup was held in France. The 1998 FIFA World Cup was won by France.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The 1998 FIFA World Cup was held in France.\nBased on the above information, is the following statement true, false, or uncertain? The 1998 FIFA World Cup was won by France.\nBased on the above information, is the following statement true, false, or uncertain? The 1998 FIFA World Cup was held in Germany.\n###\nPredicates:\nWorldCup(x) ::: x is a FIFA World Cup.\nYear(x) ::: x is a year.\nHeld(x, y) ::: x was held in year y.\nWon(x, y) ::: x was won"
    ]
  },
  {
    "id": "FOLIO_train_138",
    "context": "Ambiortus is a prehistoric bird genus. Ambiorus Dementjevi is the only known species of Ambiortus. The Mongol region was where Ambiorus Dementjevi lived. Yevgeny Kurochkin was the discoverer of Ambiortus.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? All species of Ambiortus live in the Mongol region.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSpecies(x) ::: x is a species.\nGenus(x) ::: x is a genus.\nAmbiortus(x) ::: x is a prehistoric bird genus.\nAmbiorusDementjevi(x) ::: x is the only known species of Ambiortus.\nMongolRegion(x) ::: x is the Mongol region.\nLive(x, y) ::: x lives in y.\nDiscoverer(x, y) ::: x is the discoverer of y.\nPremises:\nGenus(ambiortus) ::: Ambiortus is a prehistoric bird genus.\nSpecies(ambiorusDementjevi) ::: Ambiorus Dementjevi is the only known species of Ambiortus.\nMongolRegion(mongolRegion) ::: The Mongol region was where Ambiorus Dementjevi lived.\nDiscoverer(yevgenyKurochkin, ambiortus) ::: Yevgeny Kurochkin was the discoverer of Ambiortus.\nConclusion:\n∀x (Species(x) → Live(x, mongolRegion)) ::: All species of Ambiortus live in the Mongol region.\n------\nProblem:\nThe 1996 Summer Olympics were held in Atlanta, Georgia. The 1996 Summer Olympics were the first Olympics to have a website. The 1996 Summer Olympics were the first Olympics to have an official mascot. The 1996 Summer Olympics were the first Olympics to have an official song. The 1996 Summer Olympics were the first Olympics to have an official video game.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The 1996 Summer Olympics were the first Olympics to have an official mascot.\nBased on the above information, is the following statement true, false, or uncertain? The 1996 Summer Olympics were the first Olympics to have an official"
    ]
  },
  {
    "id": "FOLIO_train_139",
    "context": "Everyone that uses a football can throw a football. If someone plays football, then they use a football. Either someone is a football player or a basketball player. Every basketball player is tall. Everyone that can throw a football can throw a football with a spiral. If someone is tall, then they are in shape. If Jack is neither tall nor a basketball player,  then Jack is neither tall nor can throw a football.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jack plays football.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nUse(x, y) ::: x uses y.\nThrow(x, y) ::: x can throw y.\nPlay(x, y) ::: x plays y.\nFootball(x) ::: x is a football.\nBasketball(x) ::: x is a basketball.\nTall(x) ::: x is tall.\nInShape(x) ::: x is in shape.\nJack(x) ::: x is Jack.\nPremises:\n∀x (Use(x, football) → Throw(x, football)) ::: Everyone that uses a football can throw a football.\n∀x (Play(x, football) → Use(x, football)) ::: If someone plays football, then they use a football.\n∀x (Basketball(x) → Tall(x)) ::: Every basketball player is tall.\n∀x (Throw(x, football) → Throw(x, footballWithSpiral)) ::: Everyone that can throw a football can throw a football with a spiral.\n∀x (Tall(x) → InShape(x)) ::: If someone is tall, then they are in shape.\n¬(Tall(jack) ∨ Basketball(jack)) → ¬(Tall(jack) ∨ Throw(jack, football)) ::: If Jack is neither tall nor a basketball player,  then Jack is neither tall nor can throw a football.\nConclusion:\nPlay(jack, football) ::: Jack plays football.\n------\nProblem:\nEveryone who is a student is a person. Every person is a human. Every human is a mammal. Every mammal is an animal. Every animal is a living thing. Every living thing is a thing. Every thing is a physical object. Every physical object is a substance. Every substance is a being. Every being is a thing. Every thing is a physical object. Every physical object is a substance. Every substance is a being. Every being is a thing. Every thing is a physical object. Every physical object is a substance."
    ]
  },
  {
    "id": "FOLIO_train_140",
    "context": "Everyone that uses a football can throw a football. If someone plays football, then they use a football. Either someone is a football player or a basketball player. Every basketball player is tall. Everyone that can throw a football can throw a football with a spiral. If someone is tall, then they are in shape. If Jack is neither tall nor a basketball player,  then Jack is neither tall nor can throw a football.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jack is in shape.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nUse(x, y) ::: x uses y.\nThrow(x, y) ::: x can throw y.\nPlay(x, y) ::: x plays y.\nFootball(x) ::: x is a football.\nBasketball(x) ::: x is a basketball.\nPlayer(x, y) ::: x is a y player.\nTall(x) ::: x is tall.\nShape(x) ::: x is in shape.\nPremises:\n∀x (Use(x, football) → Throw(x, football)) ::: Everyone that uses a football can throw a football.\n∀x (Play(x, football) → Use(x, football)) ::: If someone plays football, then they use a football.\n∀x (Basketball(x) → Tall(x)) ::: Every basketball player is tall.\n∀x (Throw(x, football) → Throw(x, footballWithSpiral)) ::: Everyone that can throw a football can throw a football with a spiral.\n∀x (Tall(x) → Shape(x)) ::: If someone is tall, then they are in shape.\n¬(Tall(jack) ∨ Player(jack, basketball)) → ¬(Tall(jack) ∨ Throw(jack, football)) ::: If Jack is neither tall nor a basketball player,  then Jack is neither tall nor can throw a football.\nConclusion:\nShape(jack) ::: Jack is in shape.\n------"
    ]
  },
  {
    "id": "FOLIO_train_141",
    "context": "Everyone that uses a football can throw a football. If someone plays football, then they use a football. Either someone is a football player or a basketball player. Every basketball player is tall. Everyone that can throw a football can throw a football with a spiral. If someone is tall, then they are in shape. If Jack is neither tall nor a basketball player,  then Jack is neither tall nor can throw a football.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jack is not in shape.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nUse(x, y) ::: x uses y.\nThrow(x, y) ::: x can throw y.\nPlay(x, y) ::: x plays y.\nFootball(x) ::: x is a football.\nBasketball(x) ::: x is a basketball.\nTall(x) ::: x is tall.\nInShape(x) ::: x is in shape.\nJack(x) ::: x is Jack.\nPremises:\n∀x (Use(x, football) → Throw(x, football)) ::: Everyone that uses a football can throw a football.\n∀x (Play(x, football) → Use(x, football)) ::: If someone plays football, then they use a football.\n∀x (Basketball(x) → Tall(x)) ::: Every basketball player is tall.\n∀x (Throw(x, football) → Throw(x, footballWithSpiral)) ::: Everyone that can throw a football can throw a football with a spiral.\n∀x (Tall(x) → InShape(x)) ::: If someone is tall, then they are in shape.\n¬(Tall(jack) ∨ Basketball(jack)) → ¬(Tall(jack) ∨ Throw(jack, football)) ::: If Jack is neither tall nor a basketball player,  then Jack is neither tall nor can throw a football.\nConclusion:\n¬InShape(jack) ::: Jack is not in shape.\n------"
    ]
  },
  {
    "id": "FOLIO_train_142",
    "context": "Fort Ticonderoga is the current name for Fort Carillon. Pierre de Rigaud de Vaudreuil built Fort Carillon. Fort Carillon was located in New France. New France is not in Europe.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Pierre de Rigaud de Vaudreuil built a fort in New France.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFortTiconderoga(x) ::: x is Fort Ticonderoga.\nFortCarillon(x) ::: x is Fort Carillon.\nPierreDeRigaudDeVaudreuil(x) ::: x is Pierre de Rigaud de Vaudreuil.\nBuild(x, y) ::: x built y.\nLocated(x, y) ::: x is located in y.\nNewFrance(x) ::: x is New France.\nEurope(x) ::: x is in Europe.\nPremises:\nFortTiconderoga(fortTiconderoga) ∧ FortCarillon(fortTiconderoga) ::: Fort Ticonderoga is the current name for Fort Carillon.\nBuild(pierreDeRigaudDeVaudreuil, fortCarillon) ::: Pierre de Rigaud de Vaudreuil built Fort Carillon.\nLocated(fortCarillon, newFrance) ::: Fort Carillon was located in New France.\nNewFrance(newFrance) ∧ ¬Europe(newFrance) ::: New France is not in Europe.\nConclusion:\nBuild(pierreDeRigaudDeVaudreuil, newFrance) ::: Pierre de Rigaud de Vaudreuil built a fort in New France.\n------\nProblem:\nThe first person to walk on the moon was Neil Armstrong. Neil Armstrong was an American. The first person to walk on the moon was an American."
    ]
  },
  {
    "id": "FOLIO_train_143",
    "context": "Fort Ticonderoga is the current name for Fort Carillon. Pierre de Rigaud de Vaudreuil built Fort Carillon. Fort Carillon was located in New France. New France is not in Europe.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Pierre de Rigaud de Vaudreuil built a fort in New England.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFort(x) ::: x is a fort.\nCurrentName(x, y) ::: x is the current name for y.\nBuilt(x, y) ::: x built y.\nLocated(x, y) ::: x is located in y.\nNewFrance(x) ::: x is in New France.\nEurope(x) ::: x is in Europe.\nPremises:\nFort(ticonderoga) ∧ Fort(carillon) ∧ CurrentName(ticonderoga, carillon) ::: Fort Ticonderoga is the current name for Fort Carillon.\nBuilt(rigaud, carillon) ::: Pierre de Rigaud de Vaudreuil built Fort Carillon.\nLocated(carillon, newFrance) ::: Fort Carillon was located in New France.\nNewFrance(newFrance) ∧ ¬Europe(newFrance) ::: New France is not in Europe.\nConclusion:\nBuilt(rigaud, newFrance) ::: Pierre de Rigaud de Vaudreuil built a fort in New England.\n------\nProblem:\nThe first person to fly in a hot air balloon was Jean-François Pilâtre de Rozier. The first person to fly in a hot air balloon was a Frenchman. The first person to fly in a hot air balloon was a scientist.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The first person to fly in a hot air ball"
    ]
  },
  {
    "id": "FOLIO_train_144",
    "context": "Fort Ticonderoga is the current name for Fort Carillon. Pierre de Rigaud de Vaudreuil built Fort Carillon. Fort Carillon was located in New France. New France is not in Europe.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Fort Carillon was located in Europe.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFortTiconderoga(x) ::: x is Fort Ticonderoga.\nFortCarillon(x) ::: x is Fort Carillon.\nPierreDeRigaudDeVaudreuil(x) ::: x is Pierre de Rigaud de Vaudreuil.\nBuild(x, y) ::: x built y.\nLocated(x, y) ::: x is located in y.\nNewFrance(x) ::: x is New France.\nEurope(x) ::: x is in Europe.\nPremises:\nFortTiconderoga(fortTiconderoga) ∧ FortCarillon(fortTiconderoga) ::: Fort Ticonderoga is the current name for Fort Carillon.\nPierreDeRigaudDeVaudreuil(pierreDeRigaudDeVaudreuil) ∧ Build(pierreDeRigaudDeVaudreuil, fortCarillon) ::: Pierre de Rigaud de Vaudreuil built Fort Carillon.\nLocated(fortCarillon, newFrance) ::: Fort Carillon was located in New France.\n¬Europe(newFrance) ::: New France is not in Europe.\nConclusion:\nLocated(fortCarillon, europe) ::: Fort Carillon was located in Europe.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being add"
    ]
  },
  {
    "id": "FOLIO_train_145",
    "context": "No soccer players are professional basketball players. All NBA players are professional basketball players. All defenders are soccer players. All centerback players are defenders. If Stephen Curry is an NBA player or a soccer player, then he is a professional basketball player.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Stephen Curry is an NBA player.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSoccerPlayer(x) ::: x is a soccer player.\nProfessionalBasketballPlayer(x) ::: x is a professional basketball player.\nNBAPlayer(x) ::: x is an NBA player.\nDefender(x) ::: x is a defender.\nCenterbackPlayer(x) ::: x is a centerback player.\nStephenCurry(x) ::: x is Stephen Curry.\nPremises:\n∀x (SoccerPlayer(x) → ¬ProfessionalBasketballPlayer(x)) ::: No soccer players are professional basketball players.\n∀x (NBAPlayer(x) → ProfessionalBasketballPlayer(x)) ::: All NBA players are professional basketball players.\n∀x (Defender(x) → SoccerPlayer(x)) ::: All defenders are soccer players.\n∀x (CenterbackPlayer(x) → Defender(x)) ::: All centerback players are defenders.\n(NBAPlayer(stephenCurry) ∨ SoccerPlayer(stephenCurry)) → ProfessionalBasketballPlayer(stephenCurry) ::: If Stephen Curry is an NBA player or a soccer player, then he is a professional basketball player.\nConclusion:\nNBAPlayer(stephenCurry) ::: Stephen Curry is an NBA player.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one"
    ]
  },
  {
    "id": "FOLIO_train_146",
    "context": "No soccer players are professional basketball players. All NBA players are professional basketball players. All defenders are soccer players. All centerback players are defenders. If Stephen Curry is an NBA player or a soccer player, then he is a professional basketball player.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Stephen Curry is a centerback player.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSoccerPlayer(x) ::: x is a soccer player.\nProfessionalBasketballPlayer(x) ::: x is a professional basketball player.\nNBAPlayer(x) ::: x is an NBA player.\nDefender(x) ::: x is a defender.\nCenterbackPlayer(x) ::: x is a centerback player.\nStephenCurry(x) ::: x is Stephen Curry.\nPremises:\n∀x (SoccerPlayer(x) → ¬ProfessionalBasketballPlayer(x)) ::: No soccer players are professional basketball players.\n∀x (NBAPlayer(x) → ProfessionalBasketballPlayer(x)) ::: All NBA players are professional basketball players.\n∀x (Defender(x) → SoccerPlayer(x)) ::: All defenders are soccer players.\n∀x (CenterbackPlayer(x) → Defender(x)) ::: All centerback players are defenders.\n(NBAPlayer(stephenCurry) ∨ SoccerPlayer(stephenCurry)) → ProfessionalBasketballPlayer(stephenCurry) ::: If Stephen Curry is an NBA player or a soccer player, then he is a professional basketball player.\nConclusion:\nCenterbackPlayer(stephenCurry) ::: Stephen Curry is a centerback player.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No"
    ]
  },
  {
    "id": "FOLIO_train_147",
    "context": "No soccer players are professional basketball players. All NBA players are professional basketball players. All defenders are soccer players. All centerback players are defenders. If Stephen Curry is an NBA player or a soccer player, then he is a professional basketball player.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Stephen Curry is not a centerback player.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSoccerPlayer(x) ::: x is a soccer player.\nProfessionalBasketballPlayer(x) ::: x is a professional basketball player.\nNBAPlayer(x) ::: x is an NBA player.\nDefender(x) ::: x is a defender.\nCenterbackPlayer(x) ::: x is a centerback player.\nStephenCurry(x) ::: x is Stephen Curry.\nPremises:\n∀x (SoccerPlayer(x) → ¬ProfessionalBasketballPlayer(x)) ::: No soccer players are professional basketball players.\n∀x (NBAPlayer(x) → ProfessionalBasketballPlayer(x)) ::: All NBA players are professional basketball players.\n∀x (Defender(x) → SoccerPlayer(x)) ::: All defenders are soccer players.\n∀x (CenterbackPlayer(x) → Defender(x)) ::: All centerback players are defenders.\n(NBAPlayer(stephenCurry) ∨ SoccerPlayer(stephenCurry)) → ProfessionalBasketballPlayer(stephenCurry) ::: If Stephen Curry is an NBA player or a soccer player, then he is a professional basketball player.\nConclusion:\n¬CenterbackPlayer(stephenCurry) ::: Stephen Curry is not a centerback player.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine"
    ]
  },
  {
    "id": "FOLIO_train_148",
    "context": "No songs are visual. All folk songs are songs. All videos are visual. All movies are videos. All sci-fi movies are movies. Inception is a sci-fi movie. Mac is neither a folk song nor a sci-fi movie.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Inception is a folk song.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSong(x) ::: x is a song.\nFolkSong(x) ::: x is a folk song.\nVisual(x) ::: x is visual.\nVideo(x) ::: x is a video.\nMovie(x) ::: x is a movie.\nSciFiMovie(x) ::: x is a sci-fi movie.\nInception(x) ::: x is Inception.\nMac(x) ::: x is Mac.\nPremises:\n∀x (Song(x) → ¬Visual(x)) ::: No songs are visual.\n∀x (FolkSong(x) → Song(x)) ::: All folk songs are songs.\n∀x (Video(x) → Visual(x)) ::: All videos are visual.\n∀x (Movie(x) → Video(x)) ::: All movies are videos.\n∀x (SciFiMovie(x) → Movie(x)) ::: All sci-fi movies are movies.\nSciFiMovie(inception) ::: Inception is a sci-fi movie.\n¬(FolkSong(mac) ∨ SciFiMovie(mac)) ::: Mac is neither a folk song nor a sci-fi movie.\nConclusion:\nSong(inception) ::: Inception is a song.\nFolkSong(inception) ::: Inception is a folk song.\n------\nProblem:\nAll people who regularly"
    ]
  },
  {
    "id": "FOLIO_train_149",
    "context": "No songs are visual. All folk songs are songs. All videos are visual. All movies are videos. All sci-fi movies are movies. Inception is a sci-fi movie. Mac is neither a folk song nor a sci-fi movie.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Inception is not a folk song.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSong(x) ::: x is a song.\nVisual(x) ::: x is visual.\nFolkSong(x) ::: x is a folk song.\nVideo(x) ::: x is a video.\nMovie(x) ::: x is a movie.\nSciFiMovie(x) ::: x is a sci-fi movie.\nInception(x) ::: x is Inception.\nMac(x) ::: x is Mac.\nPremises:\n∀x (Song(x) → ¬Visual(x)) ::: No songs are visual.\n∀x (FolkSong(x) → Song(x)) ::: All folk songs are songs.\n∀x (Video(x) → Visual(x)) ::: All videos are visual.\n∀x (Movie(x) → Video(x)) ::: All movies are videos.\n∀x (SciFiMovie(x) → Movie(x)) ::: All sci-fi movies are movies.\nSciFiMovie(inception) ::: Inception is a sci-fi movie.\n¬(FolkSong(mac) ∨ SciFiMovie(mac)) ::: Mac is neither a folk song nor a sci-fi movie.\nConclusion:\n¬FolkSong(inception) ::: Inception is not a folk song.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink"
    ]
  },
  {
    "id": "FOLIO_train_150",
    "context": "No songs are visual. All folk songs are songs. All videos are visual. All movies are videos. All sci-fi movies are movies. Inception is a sci-fi movie. Mac is neither a folk song nor a sci-fi movie.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Inception is either a video or a folk song.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSong(x) ::: x is a song.\nVisual(x) ::: x is visual.\nFolkSong(x) ::: x is a folk song.\nVideo(x) ::: x is a video.\nMovie(x) ::: x is a movie.\nSciFiMovie(x) ::: x is a sci-fi movie.\nInception(x) ::: x is Inception.\nMac(x) ::: x is Mac.\nPremises:\n∀x (Song(x) → ¬Visual(x)) ::: No songs are visual.\n∀x (FolkSong(x) → Song(x)) ::: All folk songs are songs.\n∀x (Video(x) → Visual(x)) ::: All videos are visual.\n∀x (Movie(x) → Video(x)) ::: All movies are videos.\n∀x (SciFiMovie(x) → Movie(x)) ::: All sci-fi movies are movies.\nSciFiMovie(inception) ::: Inception is a sci-fi movie.\n¬(FolkSong(mac) ∨ SciFiMovie(mac)) ::: Mac is neither a folk song nor a sci-fi movie.\nConclusion:\n(Video(inception) ∨ FolkSong(inception)) ::: Inception is either a video or a folk song.\n------"
    ]
  },
  {
    "id": "FOLIO_train_151",
    "context": "No songs are visual. All folk songs are songs. All videos are visual. All movies are videos. All sci-fi movies are movies. Inception is a sci-fi movie. Mac is neither a folk song nor a sci-fi movie.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mac is a video.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSong(x) ::: x is a song.\nVisual(x) ::: x is visual.\nFolkSong(x) ::: x is a folk song.\nVideo(x) ::: x is a video.\nMovie(x) ::: x is a movie.\nSciFiMovie(x) ::: x is a sci-fi movie.\nInception(x) ::: x is Inception.\nMac(x) ::: x is Mac.\nPremises:\n∀x (Song(x) → ¬Visual(x)) ::: No songs are visual.\n∀x (FolkSong(x) → Song(x)) ::: All folk songs are songs.\n∀x (Video(x) → Visual(x)) ::: All videos are visual.\n∀x (Movie(x) → Video(x)) ::: All movies are videos.\n∀x (SciFiMovie(x) → Movie(x)) ::: All sci-fi movies are movies.\nSciFiMovie(inception) ::: Inception is a sci-fi movie.\n¬(FolkSong(mac) ∨ SciFiMovie(mac)) ::: Mac is neither a folk song nor a sci-fi movie.\nConclusion:\nVideo(mac) ::: Mac is a video.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either"
    ]
  },
  {
    "id": "FOLIO_train_152",
    "context": "All extroverts are overtly expressive. People are either extroverts or introverts. If someone is an introvert, then they are shy and reticent. No shy and reticent person likes to talk to strangers. Jeff is not an extrovert and someone who likes to talk to strangers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jeff is a shy and reticent person.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nExtrovert(x) ::: x is an extrovert.\nIntrovert(x) ::: x is an introvert.\nOvertlyExpressive(x) ::: x is overtly expressive.\nShy(x) ::: x is shy.\nReticent(x) ::: x is reticent.\nLike(x, y) ::: x likes y.\nTalk(x, y) ::: x talks to y.\nStranger(x) ::: x is a stranger.\nPremises:\n∀x (Extrovert(x) → OvertlyExpressive(x)) ::: All extroverts are overtly expressive.\n∀x (Introvert(x) → (Shy(x) ∧ Reticent(x))) ::: If someone is an introvert, then they are shy and reticent.\n∀x (Shy(x) ∧ Reticent(x) → ¬Like(x, Talk(x, Stranger(x)))) ::: No shy and reticent person likes to talk to strangers.\n¬Extrovert(jeff) ∧ Like(jeff, Talk(jeff, Stranger(jeff))) ::: Jeff is not an extrovert and someone who likes to talk to strangers.\nConclusion:\nShy(jeff) ∧ Reticent(jeff) ::: Jeff is a shy and reticent person."
    ]
  },
  {
    "id": "FOLIO_train_153",
    "context": "All extroverts are overtly expressive. People are either extroverts or introverts. If someone is an introvert, then they are shy and reticent. No shy and reticent person likes to talk to strangers. Jeff is not an extrovert and someone who likes to talk to strangers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jeff is overtly expressive and likes to talk to strangers.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nExtrovert(x) ::: x is an extrovert.\nIntrovert(x) ::: x is an introvert.\nOvertlyExpressive(x) ::: x is overtly expressive.\nShy(x) ::: x is shy.\nReticent(x) ::: x is reticent.\nLike(x, y) ::: x likes y.\nTalk(x, y) ::: x talks to y.\nStranger(x) ::: x is a stranger.\nPremises:\n∀x (Extrovert(x) → OvertlyExpressive(x)) ::: All extroverts are overtly expressive.\n∀x (Introvert(x) → (Shy(x) ∧ Reticent(x))) ::: If someone is an introvert, then they are shy and reticent.\n∀x (Shy(x) ∧ Reticent(x) → ¬Like(x, Talk(x, Stranger(x)))) ::: No shy and reticent person likes to talk to strangers.\n¬Extrovert(jeff) ∧ Like(jeff, Talk(jeff, Stranger(jeff))) ::: Jeff is not an extrovert and someone who likes to talk to strangers.\nConclusion:\nOvertlyExpressive(jeff) ∧ Like(jeff, Talk(jeff, Stranger(jeff)))"
    ]
  },
  {
    "id": "FOLIO_train_154",
    "context": "All extroverts are overtly expressive. People are either extroverts or introverts. If someone is an introvert, then they are shy and reticent. No shy and reticent person likes to talk to strangers. Jeff is not an extrovert and someone who likes to talk to strangers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Jeff is either overtly expressive and likes to talk to strangers or neither overtly expressive nor likes to talk to strangers, then Jeff is neither an extrovert nor likes to talk to strangers.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nExtrovert(x) ::: x is an extrovert.\nIntrovert(x) ::: x is an introvert.\nOvertlyExpressive(x) ::: x is overtly expressive.\nShy(x) ::: x is shy.\nReticent(x) ::: x is reticent.\nLike(x, y) ::: x likes y.\nTalk(x, y) ::: x talks to y.\nStranger(x) ::: x is a stranger.\nPremises:\n∀x (Extrovert(x) → OvertlyExpressive(x)) ::: All extroverts are overtly expressive.\n∀x (Introvert(x) → (Shy(x) ∧ Reticent(x))) ::: If someone is an introvert, then they are shy and reticent.\n∀x (Shy(x) ∧ Reticent(x) → ¬Like(x, Stranger(x))) ::: No shy and reticent person likes to talk to strangers.\n¬Extrovert(jeff) ∧ Like(jeff, Stranger(x)) ::: Jeff is not an extrovert and someone who likes to talk to strangers.\nConclusion:\n((OvertlyExpressive(jeff) ∧ Like(jeff, Stranger(x))) ⊕ ¬(OvertlyExpressive(jeff"
    ]
  },
  {
    "id": "FOLIO_train_155",
    "context": "No low-scoring players are top players in the league. Basketball players are either top players in the league or successfully shoot a high percentage of 3-pointers. All players who successfully shoot a high percentage of 3-pointers are solid at shooting 2-pointers. No players who are solid at shooting 2-pointers are bad at mid-range shots. Candace is either a low-scoring player or successfully shoots a high percentage of 3-pointers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Candace is a top player in the league.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLowScoring(x) ::: x is a low-scoring player.\nTopPlayer(x) ::: x is a top player in the league.\nBasketballPlayer(x) ::: x is a basketball player.\nShoot(x, y) ::: x successfully shoots a high percentage of y-pointers.\nSolid(x, y) ::: x is solid at y.\nBad(x, y) ::: x is bad at y.\nPremises:\n∀x (LowScoring(x) → ¬TopPlayer(x)) ::: No low-scoring players are top players in the league.\n∀x (BasketballPlayer(x) → TopPlayer(x) ⊕ Shoot(x, 3pointers)) ::: Basketball players are either top players in the league or successfully shoot a high percentage of 3-pointers.\n∀x (Shoot(x, 3pointers) → Solid(x, 2pointers)) ::: All players who successfully shoot a high percentage of 3-pointers are solid at shooting 2-pointers.\n∀x (Solid(x, 2pointers) → ¬Bad(x, midrange)) ::: No players who are solid at shooting 2-pointers are bad at mid-range shots.\nLowScoring(candace) ⊕ Shoot(candace, 3pointers) ::: Candace is either a low"
    ]
  },
  {
    "id": "FOLIO_train_156",
    "context": "No low-scoring players are top players in the league. Basketball players are either top players in the league or successfully shoot a high percentage of 3-pointers. All players who successfully shoot a high percentage of 3-pointers are solid at shooting 2-pointers. No players who are solid at shooting 2-pointers are bad at mid-range shots. Candace is either a low-scoring player or successfully shoots a high percentage of 3-pointers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Candace is bad at mid-range shots.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLowScoring(x) ::: x is a low-scoring player.\nTopPlayer(x) ::: x is a top player in the league.\nBasketballPlayer(x) ::: x is a basketball player.\nShoot(x, y) ::: x successfully shoots a high percentage of y-pointers.\nSolid(x, y) ::: x is solid at y.\nBad(x, y) ::: x is bad at y.\nPremises:\n∀x (LowScoring(x) → ¬TopPlayer(x)) ::: No low-scoring players are top players in the league.\n∀x (BasketballPlayer(x) → TopPlayer(x) ⊕ Shoot(x, 3pointers)) ::: Basketball players are either top players in the league or successfully shoot a high percentage of 3-pointers.\n∀x (Shoot(x, 3pointers) → Solid(x, 2pointers)) ::: All players who successfully shoot a high percentage of 3-pointers are solid at shooting 2-pointers.\n∀x (Solid(x, 2pointers) → ¬Bad(x, midrange)) ::: No players who are solid at shooting 2-pointers are bad at mid-range shots.\nLowScoring(candace) ⊕ Shoot(candace, 3pointers) ::: Candace is either a low"
    ]
  },
  {
    "id": "FOLIO_train_157",
    "context": "No low-scoring players are top players in the league. Basketball players are either top players in the league or successfully shoot a high percentage of 3-pointers. All players who successfully shoot a high percentage of 3-pointers are solid at shooting 2-pointers. No players who are solid at shooting 2-pointers are bad at mid-range shots. Candace is either a low-scoring player or successfully shoots a high percentage of 3-pointers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Candace is solid at shooting 2-pointers or bad at mid-range shots.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLowScoring(x) ::: x is a low-scoring player.\nTopPlayer(x) ::: x is a top player in the league.\nBasketballPlayer(x) ::: x is a basketball player.\nShoot(x, y) ::: x successfully shoots a high percentage of y-pointers.\nSolid(x, y) ::: x is solid at y.\nBad(x, y) ::: x is bad at y.\nPremises:\n∀x (LowScoring(x) → ¬TopPlayer(x)) ::: No low-scoring players are top players in the league.\n∀x (BasketballPlayer(x) → TopPlayer(x) ⊕ Shoot(x, 3pointers)) ::: Basketball players are either top players in the league or successfully shoot a high percentage of 3-pointers.\n∀x (Shoot(x, 3pointers) → Solid(x, 2pointers)) ::: All players who successfully shoot a high percentage of 3-pointers are solid at shooting 2-pointers.\n∀x (Solid(x, 2pointers) → ¬Bad(x, midrange)) ::: No players who are solid at shooting 2-pointers are bad at mid-range shots.\nLowScoring(candace) ⊕ Shoot(candace, 3pointers) ::: Candace is either a low"
    ]
  },
  {
    "id": "FOLIO_train_158",
    "context": "No low-scoring players are top players in the league. Basketball players are either top players in the league or successfully shoot a high percentage of 3-pointers. All players who successfully shoot a high percentage of 3-pointers are solid at shooting 2-pointers. No players who are solid at shooting 2-pointers are bad at mid-range shots. Candace is either a low-scoring player or successfully shoots a high percentage of 3-pointers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Candace is either solid at shooting 2-pointers or bad at mid-range shots.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLowScoring(x) ::: x is a low-scoring player.\nTopPlayer(x) ::: x is a top player in the league.\nBasketballPlayer(x) ::: x is a basketball player.\nShoot(x, y) ::: x successfully shoots a high percentage of y-pointers.\nSolid(x, y) ::: x is solid at y.\nBad(x, y) ::: x is bad at y.\nPremises:\n∀x (LowScoring(x) → ¬TopPlayer(x)) ::: No low-scoring players are top players in the league.\n∀x (BasketballPlayer(x) → TopPlayer(x) ⊕ Shoot(x, 3pointers)) ::: Basketball players are either top players in the league or successfully shoot a high percentage of 3-pointers.\n∀x (Shoot(x, 3pointers) → Solid(x, 2pointers)) ::: All players who successfully shoot a high percentage of 3-pointers are solid at shooting 2-pointers.\n∀x (Solid(x, 2pointers) → ¬Bad(x, midrange)) ::: No players who are solid at shooting 2-pointers are bad at mid-range shots.\nLowScoring(candace) ⊕ Shoot(candace, 3pointers) ::: Candace is either a low"
    ]
  },
  {
    "id": "FOLIO_train_159",
    "context": "No low-scoring players are top players in the league. Basketball players are either top players in the league or successfully shoot a high percentage of 3-pointers. All players who successfully shoot a high percentage of 3-pointers are solid at shooting 2-pointers. No players who are solid at shooting 2-pointers are bad at mid-range shots. Candace is either a low-scoring player or successfully shoots a high percentage of 3-pointers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Candace is a low-scoring player or bad at mid-range shots.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLowScoring(x) ::: x is a low-scoring player.\nTopPlayer(x) ::: x is a top player in the league.\nBasketballPlayer(x) ::: x is a basketball player.\nShoot(x, y) ::: x successfully shoots a high percentage of y-pointers.\nSolid(x, y) ::: x is solid at y.\nBad(x, y) ::: x is bad at y.\nPremises:\n∀x (LowScoring(x) → ¬TopPlayer(x)) ::: No low-scoring players are top players in the league.\n∀x (BasketballPlayer(x) → TopPlayer(x) ⊕ Shoot(x, 3pointers)) ::: Basketball players are either top players in the league or successfully shoot a high percentage of 3-pointers.\n∀x (Shoot(x, 3pointers) → Solid(x, 2pointers)) ::: All players who successfully shoot a high percentage of 3-pointers are solid at shooting 2-pointers.\n∀x (Solid(x, 2pointers) → ¬Bad(x, midrangeshots)) ::: No players who are solid at shooting 2-pointers are bad at mid-range shots.\nLowScoring(candace) ⊕ Shoot(candace, 3pointers) ::: Candace is"
    ]
  },
  {
    "id": "FOLIO_train_160",
    "context": "No low-scoring players are top players in the league. Basketball players are either top players in the league or successfully shoot a high percentage of 3-pointers. All players who successfully shoot a high percentage of 3-pointers are solid at shooting 2-pointers. No players who are solid at shooting 2-pointers are bad at mid-range shots. Candace is either a low-scoring player or successfully shoots a high percentage of 3-pointers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Candace is either a low-scoring player or bad at mid-range shots.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLowScoring(x) ::: x is a low-scoring player.\nTopPlayer(x) ::: x is a top player in the league.\nBasketballPlayer(x) ::: x is a basketball player.\nShoot(x, y) ::: x successfully shoots a high percentage of y-pointers.\nSolid(x, y) ::: x is solid at y.\nBad(x, y) ::: x is bad at y.\nPremises:\n∀x (LowScoring(x) → ¬TopPlayer(x)) ::: No low-scoring players are top players in the league.\n∀x (BasketballPlayer(x) → TopPlayer(x) ⊕ Shoot(x, 3pointers)) ::: Basketball players are either top players in the league or successfully shoot a high percentage of 3-pointers.\n∀x (Shoot(x, 3pointers) → Solid(x, 2pointers)) ::: All players who successfully shoot a high percentage of 3-pointers are solid at shooting 2-pointers.\n∀x (Solid(x, 2pointers) → ¬Bad(x, midrangeshots)) ::: No players who are solid at shooting 2-pointers are bad at mid-range shots.\nLowScoring(candace) ⊕ Shoot(candace, 3pointers) ::: Candace is either a low-scoring player or successfully shoots a high percentage of 3-pointers.\nConclusion:\nLowScoring(candace) ⊕ Bad(candace, midrangeshots) ::: Candace is either a low-scoring player or bad at mid-range shots.\n------"
    ]
  },
  {
    "id": "FOLIO_train_161",
    "context": "No low-scoring players are top players in the league. Basketball players are either top players in the league or successfully shoot a high percentage of 3-pointers. All players who successfully shoot a high percentage of 3-pointers are solid at shooting 2-pointers. No players who are solid at shooting 2-pointers are bad at mid-range shots. Candace is either a low-scoring player or successfully shoots a high percentage of 3-pointers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Candace is either a player who successfully shoots a high percentage of 3-pointers or is bad at mid-range shots.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLowScoring(x) ::: x is a low-scoring player.\nTopPlayer(x) ::: x is a top player in the league.\nBasketballPlayer(x) ::: x is a basketball player.\nShoot(x, y) ::: x successfully shoots a high percentage of y.\nSolid(x, y) ::: x is solid at y.\nBad(x, y) ::: x is bad at y.\nPremises:\n∀x (LowScoring(x) → ¬TopPlayer(x)) ::: No low-scoring players are top players in the league.\n∀x (BasketballPlayer(x) → TopPlayer(x) ⊕ Shoot(x, 3pointers)) ::: Basketball players are either top players in the league or successfully shoot a high percentage of 3-pointers.\n∀x (Shoot(x, 3pointers) → Solid(x, 2pointers)) ::: All players who successfully shoot a high percentage of 3-pointers are solid at shooting 2-pointers.\n∀x (Solid(x, 2pointers) → ¬Bad(x, midrangeshots)) ::: No players who are solid at shooting 2-pointers are bad at mid-range shots.\nLowScoring(candace) ⊕ Shoot(candace, 3pointers) ::: Candace is either a low-scoring player or successfully shoots a high percentage of 3-pointers.\nConclusion:\n(Shoot(candace, 3pointers) ⊕ Bad(candace, midrangeshots)) ::: Candace is either a player who successfully shoots a high percentage of 3-po"
    ]
  },
  {
    "id": "FOLIO_train_162",
    "context": "No low-scoring players are top players in the league. Basketball players are either top players in the league or successfully shoot a high percentage of 3-pointers. All players who successfully shoot a high percentage of 3-pointers are solid at shooting 2-pointers. No players who are solid at shooting 2-pointers are bad at mid-range shots. Candace is either a low-scoring player or successfully shoots a high percentage of 3-pointers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Candace is not solid at shooting 2-pointers and bad at mid-range shots, then Candace is not solid at shooting 2-pointers and is a player who successfully shoots a high percentage of 3-pointers.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLowScoring(x) ::: x is a low-scoring player.\nTopPlayer(x) ::: x is a top player in the league.\nBasketballPlayer(x) ::: x is a basketball player.\nShoot(x, y) ::: x successfully shoots a high percentage of y-pointers.\nSolid(x, y) ::: x is solid at y.\nBad(x, y) ::: x is bad at y.\nPremises:\n∀x (LowScoring(x) → ¬TopPlayer(x)) ::: No low-scoring players are top players in the league.\n∀x (BasketballPlayer(x) → TopPlayer(x) ⊕ Shoot(x, 3pointers)) ::: Basketball players are either top players in the league or successfully shoot a high percentage of 3-pointers.\n∀x (Shoot(x, 3pointers) → Solid(x, 2pointers)) ::: All players who successfully shoot a high percentage of 3-pointers are solid at shooting 2-pointers.\n∀x (Solid(x, 2pointers) → ¬Bad(x, midrangeshots)) ::: No players who are solid at shooting 2-pointers are bad at mid-range shots.\nLowScoring(candace) ⊕ Shoot(candace, 3pointers) ::: Candace is either a low-scoring player or successfully shoots a high percentage of 3-pointers.\nConclusion:\n(¬Solid(candace, 2pointers) ∧ Bad(candace, midrangeshots)) → (¬Solid(candace, 2pointers)"
    ]
  },
  {
    "id": "FOLIO_train_163",
    "context": "No low-scoring players are top players in the league. Basketball players are either top players in the league or successfully shoot a high percentage of 3-pointers. All players who successfully shoot a high percentage of 3-pointers are solid at shooting 2-pointers. No players who are solid at shooting 2-pointers are bad at mid-range shots. Candace is either a low-scoring player or successfully shoots a high percentage of 3-pointers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Candace is solid at shooting 2-pointers or successfully shoots a high percentage of 3-pointers, then Candace is a top player in the league and bad at mid-range shots.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLowScoring(x) ::: x is a low-scoring player.\nTopPlayer(x) ::: x is a top player in the league.\nBasketballPlayer(x) ::: x is a basketball player.\nShoot(x, y) ::: x successfully shoots a high percentage of y-pointers.\nSolid(x, y) ::: x is solid at y-pointers.\nBad(x, y) ::: x is bad at y-pointers.\nPremises:\n∀x (LowScoring(x) → ¬TopPlayer(x)) ::: No low-scoring players are top players in the league.\n∀x (BasketballPlayer(x) → TopPlayer(x) ⊕ Shoot(x, 3pointers)) ::: Basketball players are either top players in the league or successfully shoot a high percentage of 3-pointers.\n∀x (Shoot(x, 3pointers) → Solid(x, 2pointers)) ::: All players who successfully shoot a high percentage of 3-pointers are solid at shooting 2-pointers.\n∀x (Solid(x, 2pointers) → ¬Bad(x, midrange)) ::: No players who are solid at shooting 2-pointers are bad at mid-range shots.\nLowScoring(candace) ⊕ Shoot(candace, 3pointers) ::: Candace is either a low-scoring player or successfully shoots a high percentage of 3-pointers.\nConclusion:\n(Solid(candace, 2pointers) ⊕ Shoot(candace, 3pointers)) → (TopPlayer(candace) ∧ Bad"
    ]
  },
  {
    "id": "FOLIO_train_164",
    "context": "No plants are fungi. Mushrooms are fungi.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? No plants are mushrooms.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPlant(x) ::: x is a plant.\nFungi(x) ::: x is a fungi.\nMushroom(x) ::: x is a mushroom.\nPremises:\n∀x (Plant(x) → ¬Fungi(x)) ::: No plants are fungi.\n∀x (Mushroom(x) → Fungi(x)) ::: Mushrooms are fungi.\nConclusion:\n∀x (Plant(x) → ¬Mushroom(x)) ::: No plants are mushrooms.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to"
    ]
  },
  {
    "id": "FOLIO_train_165",
    "context": "No road is clean. And some streets are roads.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Some streets are clean",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRoad(x) ::: x is a road.\nClean(x) ::: x is clean.\nStreet(x) ::: x is a street.\nPremises:\n∀x (Road(x) → ¬Clean(x)) ::: No road is clean.\n∃x (Street(x) ∧ Road(x)) ::: And some streets are roads.\nConclusion:\n∃x (Street(x) ∧ Clean(x)) ::: Some streets are clean\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.\n###"
    ]
  },
  {
    "id": "FOLIO_train_166",
    "context": "New York City is on the East Coast. Seattle is on the West Coast. If a person from a city on the East coast is traveling to a city on the west coast, they will be on a long flight. Most passengers on flights to Seattle from New York City are not in first class. People on long flights are uncomfortable unless they're in first class",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Some people flying from New York City to Seattle will be uncomfortable.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCity(x) ::: x is a city.\nEastCoast(x) ::: x is a city on the East Coast.\nWestCoast(x) ::: x is a city on the West Coast.\nFrom(x, y) ::: x is from city y.\nTo(x, y) ::: x is traveling to city y.\nLongFlight(x) ::: x is a long flight.\nPassenger(x) ::: x is a passenger.\nFirstClass(x) ::: x is in first class.\nUncomfortable(x) ::: x is uncomfortable.\nPremises:\nCity(newYorkCity) ∧ City(seattle) ∧ EastCoast(newYorkCity) ∧ WestCoast(seattle) ::: New York City is on the East Coast. Seattle is on the West Coast.\n∀x ∀y (From(x, y) ∧ EastCoast(y) ∧ To(x, z) ∧ WestCoast(z)) → LongFlight(x) ::: If a person from a city on the East coast is traveling to a city on the west coast, they will be on a long flight.\n∀x ∀y (Passenger(x) ∧ To(x, y) ∧ From(newYorkCity, y) ∧ To(seattle, y)) → ¬FirstClass(x) ::: Most passengers on flights to Seattle from New York City are not in first class.\n∀x (LongFlight(x) ∧ ¬FirstClass(x)) → Uncomfortable(x) ::: People on long flights are uncomfortable unless they're in first class\nConclusion:"
    ]
  },
  {
    "id": "FOLIO_train_167",
    "context": "Musicians have very busy lives. Singh Kaur is a musician and famous. If a musician is not famous, that musician will not make a lot of money. A musician can be a singer or a writer.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Singh Kaur makes a lot of money.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMusician(x) ::: x is a musician.\nFamous(x) ::: x is famous.\nMakeMoney(x) ::: x makes a lot of money.\nSing(x) ::: x is a singer.\nWrite(x) ::: x is a writer.\nPremises:\nMusician(singhKaur) ∧ Famous(singhKaur) ::: Singh Kaur is a musician and famous.\n∀x (Musician(x) ∧ ¬Famous(x) → ¬MakeMoney(x)) ::: If a musician is not famous, that musician will not make a lot of money.\n∀x (Musician(x) → (Sing(x) ∨ Write(x))) ::: A musician can be a singer or a writer.\nConclusion:\nMakeMoney(singhKaur) ::: Singh Kaur makes a lot of money.\n------\nProblem:\nA person who is a student is a person who is a learner. A person who is a learner is a person who is a pupil. A person who is a pupil is a person who is a scholar. A person who is a scholar is a person who is a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? A person who is a pupil is a person who is a scholar.\nBased on the above information, is the following statement true, false, or uncertain? A person who is a scholar is a person who is a pupil.\nBased on the above information, is the following statement true, false, or uncertain? A person who is a scholar is a person who is a student.\nBased on the above information, is the following statement true, false, or uncertain? A person who is a student is a person"
    ]
  },
  {
    "id": "FOLIO_train_168",
    "context": "Musicians have very busy lives. Singh Kaur is a musician and famous. If a musician is not famous, that musician will not make a lot of money. A musician can be a singer or a writer.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Singh Kaur is a writer.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMusician(x) ::: x is a musician.\nFamous(x) ::: x is famous.\nMakeMoney(x) ::: x makes a lot of money.\nSing(x) ::: x is a singer.\nWrite(x) ::: x is a writer.\nPremises:\nMusician(singhKaur) ∧ Famous(singhKaur) ::: Singh Kaur is a musician and famous.\n∀x (Musician(x) ∧ ¬Famous(x) → ¬MakeMoney(x)) ::: If a musician is not famous, that musician will not make a lot of money.\n∀x (Musician(x) → Sing(x) ⊕ Write(x)) ::: A musician can be a singer or a writer.\nConclusion:\nWrite(singhKaur) ::: Singh Kaur is a writer.\n------\nProblem:\nA person who is a student is a person who is a learner. A person who is a learner is a person who is a pupil. A person who is a pupil is a person who is a scholar. A person who is a scholar is a person who is a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? A person who is a pupil is a person who is a scholar.\nBased on the above information, is the following statement true, false, or uncertain? A person who is a scholar is a person who is a pupil.\nBased on the above information, is the following statement true, false, or uncertain? A person who is a scholar is a person who is a student.\nBased on the above information, is the following statement true, false, or uncertain? A person who is a student is a person who is a scholar."
    ]
  },
  {
    "id": "FOLIO_train_169",
    "context": "Musicians have very busy lives. Singh Kaur is a musician and famous. If a musician is not famous, that musician will not make a lot of money. A musician can be a singer or a writer.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Singh Kaur has a very busy life.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMusician(x) ::: x is a musician.\nFamous(x) ::: x is famous.\nMakeMoney(x) ::: x makes a lot of money.\nSing(x) ::: x is a singer.\nWrite(x) ::: x is a writer.\nPremises:\nMusician(singhKaur) ∧ Famous(singhKaur) ::: Singh Kaur is a musician and famous.\n∀x (Musician(x) ∧ ¬Famous(x) → ¬MakeMoney(x)) ::: If a musician is not famous, that musician will not make a lot of money.\n∀x (Musician(x) → Sing(x) ⊕ Write(x)) ::: A musician can be a singer or a writer.\nConclusion:\nBusy(singhKaur) ::: Singh Kaur has a very busy life.\n------\nProblem:\nA person who is a student is a person who is a learner. A person who is a learner is a person who is a teacher. A person who is a teacher is a person who is a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? A person who is a student is a person who is a teacher.\n###\nPredicates:\nStudent(x) ::: x is a student.\nLearner(x) ::: x is a learner.\nTeacher(x) ::: x is a teacher.\nPremises:\n∀x (Student(x) → Learner(x)) ::: A person who is a student is a person who is a learner.\n∀x (Learner(x) → Teacher(x)) ::: A person who is a lear"
    ]
  },
  {
    "id": "FOLIO_train_170",
    "context": "Each building is tall. Everything tall has  height.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? All buildings are magnificent.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBuilding(x) ::: x is a building.\nTall(x) ::: x is tall.\nHeight(x) ::: x has height.\nMagnificent(x) ::: x is magnificent.\nPremises:\n∀x (Building(x) → Tall(x)) ::: Each building is tall.\n∀x (Tall(x) → Height(x)) ::: Everything tall has  height.\nConclusion:\n∀x (Building(x) → Magnificent(x)) ::: All buildings are magnificent.\n------"
    ]
  },
  {
    "id": "FOLIO_train_171",
    "context": "A cat named Garfield, which is the main character of the film Garfield, is orange and fat and likes having lasagna. Garfield and Odie, who is another pet of Jon, share the same home. Garfield hates Odie. A pet who hates the pet with whom he shares the same owner is childish and possessive. Cats are pets.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The main character of the film Garfield is childish and possessive.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCat(x) ::: x is a cat.\nOrange(x) ::: x is orange.\nFat(x) ::: x is fat.\nLikes(x, y) ::: x likes y.\nFilm(x) ::: x is a film.\nMainCharacter(x, y) ::: x is the main character of y.\nPet(x) ::: x is a pet.\nShare(x, y) ::: x shares the same home with y.\nHate(x, y) ::: x hates y.\nChildish(x) ::: x is"
    ]
  },
  {
    "id": "FOLIO_train_172",
    "context": "All humans eat. If something eats, then it is not a plant. A thing is either plant or animal. All goats are animals. No dirt is an animal. Hulu is a goat or a human.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Hulu eats.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nHuman(x) ::: x is a human.\nEat(x) ::: x eats.\nPlant(x) ::: x is a plant.\nAnimal(x) ::: x is an animal.\nGoat(x) ::: x is a goat.\nDirt(x) ::: x is dirt.\nPremises:\n∀x (Human(x) → Eat(x)) ::: All humans eat.\n∀x (Eat(x) → ¬Plant(x)) ::: If something eats, then it is"
    ]
  },
  {
    "id": "FOLIO_train_173",
    "context": "All humans eat. If something eats, then it is not a plant. A thing is either plant or animal. All goats are animals. No dirt is an animal. Hulu is a goat or a human.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Hulu does not eat.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nHuman(x) ::: x is a human.\nEat(x) ::: x eats.\nPlant(x) ::: x is a plant.\nAnimal(x) ::: x is an animal.\nGoat(x) ::: x is a goat.\nDirt(x) ::: x is dirt.\nPremises:\n∀x (Human(x) → Eat(x)) ::: All humans eat.\n∀x (Eat(x) → ¬Plant(x)) ::: If something eats, then it is"
    ]
  },
  {
    "id": "FOLIO_train_174",
    "context": "All humans eat. If something eats, then it is not a plant. A thing is either plant or animal. All goats are animals. No dirt is an animal. Hulu is a goat or a human.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Hulu is dirt.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nHuman(x) ::: x is a human.\nEat(x) ::: x eats.\nPlant(x) ::: x is a plant.\nAnimal(x) ::: x is an animal.\nGoat(x) ::: x is a goat.\nDirt(x) ::: x is dirt.\nPremises:\n∀x (Human(x) → Eat(x)) ::: All humans eat.\n∀x (Eat(x) → ¬Plant(x)) ::: If something eats, then it is"
    ]
  },
  {
    "id": "FOLIO_train_175",
    "context": "All humans eat. If something eats, then it is not a plant. A thing is either plant or animal. All goats are animals. No dirt is an animal. Hulu is a goat or a human.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Hulu is an animal or dirt.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nHuman(x) ::: x is a human.\nEat(x) ::: x eats.\nPlant(x) ::: x is a plant.\nAnimal(x) ::: x is an animal.\nGoat(x) ::: x is a goat.\nDirt(x) ::: x is dirt.\nPremises:\n∀x (Human(x) → Eat(x)) ::: All humans eat.\n∀x (Eat(x) → ¬Plant(x)) ::: If something eats, then it is"
    ]
  },
  {
    "id": "FOLIO_train_176",
    "context": "All humans eat. If something eats, then it is not a plant. A thing is either plant or animal. All goats are animals. No dirt is an animal. Hulu is a goat or a human.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Hulu is either an animal or dirt.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nHuman(x) ::: x is a human.\nEat(x) ::: x eats.\nPlant(x) ::: x is a plant.\nAnimal(x) ::: x is an animal.\nGoat(x) ::: x is a goat.\nDirt(x) ::: x is dirt.\nPremises:\n∀x (Human(x) → Eat(x)) ::: All humans eat.\n∀x (Eat(x) → ¬Plant(x)) ::: If something eats, then it is"
    ]
  },
  {
    "id": "FOLIO_train_177",
    "context": "All humans eat. If something eats, then it is not a plant. A thing is either plant or animal. All goats are animals. No dirt is an animal. Hulu is a goat or a human.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Hulu is either an animal or dirt, then Hulu eats and is dirt.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nHuman(x) ::: x is a human.\nEat(x) ::: x eats.\nPlant(x) ::: x is a plant.\nAnimal(x) ::: x is an animal.\nGoat(x) ::: x is a goat.\nDirt(x) ::: x is dirt.\nPremises:\n∀x (Human(x) → Eat(x)) ::: All humans eat.\n∀x (Eat(x) → ¬Plant(x)) ::: If something eats, then it is"
    ]
  },
  {
    "id": "FOLIO_train_178",
    "context": "A controlled substance is a drug. There exist both harmful and beneficial controlled substances. If a child is exposed to a controlled substance, he or she is in chemical endangerment. Chemical Endangerment is harmful. The Controlled Substances Act was an act passed in 1971. Some Acts prevent harmful things.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Controlled Substances Act prevents harmful things.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nControlledSubstance(x) ::: x is a controlled substance.\nHarmful(x) ::: x is harmful.\nBeneficial(x) ::: x is beneficial.\nExposed(x, y) ::: x is exposed to y.\nChild(x) ::: x is a child.\nChemicalEndangerment(x) ::: x is in chemical endangerment.\nAct(x) ::: x is an act.\nPrevent(x, y) ::: x prevents y.\nPremises:\n∀x (ControlledSubstance(x)"
    ]
  },
  {
    "id": "FOLIO_train_179",
    "context": "A controlled substance is a drug. There exist both harmful and beneficial controlled substances. If a child is exposed to a controlled substance, he or she is in chemical endangerment. Chemical Endangerment is harmful. The Controlled Substances Act was an act passed in 1971. Some Acts prevent harmful things.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Some drugs are beneficial.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nControlledSubstance(x) ::: x is a controlled substance.\nHarmful(x) ::: x is harmful.\nBeneficial(x) ::: x is beneficial.\nChild(x) ::: x is a child.\nExposed(x, y) ::: x is exposed to y.\nChemicalEndangerment(x) ::: x is in chemical endangerment.\nAct(x) ::: x is an act.\nPrevent(x, y) ::: x prevents y.\nPremises:\n∀x (ControlledSubstance(x)"
    ]
  },
  {
    "id": "FOLIO_train_180",
    "context": "A controlled substance is a drug. There exist both harmful and beneficial controlled substances. If a child is exposed to a controlled substance, he or she is in chemical endangerment. Chemical Endangerment is harmful. The Controlled Substances Act was an act passed in 1971. Some Acts prevent harmful things.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A child in chemical endangerment is in harm.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nControlledSubstance(x) ::: x is a controlled substance.\nHarmful(x) ::: x is harmful.\nBeneficial(x) ::: x is beneficial.\nExposed(x, y) ::: x is exposed to y.\nChild(x) ::: x is a child.\nChemicalEndangerment(x) ::: x is in chemical endangerment.\nAct(x) ::: x is an act.\nPrevent(x, y) ::: x prevents y.\nPremises:\n∀x (ControlledSubstance(x) → Drug(x)) ::: A controlled substance is a drug.\n∃x (Harmful(x) ∧ Beneficial(x)) ::: There exist both harmful and beneficial controlled substances.\n∀x (Child(x) ∧ Exposed(x, ControlledSubstance(x)) → ChemicalEndangerment(x)) ::: If a child is exposed to a controlled substance, he or she is in chemical endangerment.\nChemicalEndangerment(x) → Harmful(x) ::: Chemical Endangerment is harmful.\nAct(controlledSubstancesAct) ∧ Passed(controlledSubstancesAct, year1971) ::: The Controlled Substances Act was an act passed in 1971.\n∃x (Act(x) ∧ Prevent(x, Harmful(x))) ::: Some Acts prevent harmful things.\nConclusion:\nChemicalEndangerment(x) → Harmful(x) ::: A child in chemical endangerment is in harm.\n------"
    ]
  },
  {
    "id": "FOLIO_train_181",
    "context": "No people who work at corporate jobs are starting a new company. All entrepreneurs are starting a new company. All risk-averse people are people who work at corporate jobs. All people who hate working for others are entrepreneurs. If Mark Zuckerberg is neither an entrepreneur nor a person who hates working for others, then Mark Zuckerberg is not a risk-averse person.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mark Zuckerberg is an entrepreneur.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nWork(x) ::: x works at a corporate job.\nStart(x) ::: x is starting a new company.\nEntrepreneur(x) ::: x is an entrepreneur.\nRiskAverse(x) ::: x is risk-averse.\nHate(x, y) ::: x hates y.\nMarkZuckerberg(x) ::: x is Mark Zuckerberg.\nPremises:\n∀x (Work(x) → ¬Start(x)) ::: No people who work at corporate jobs are starting a new company.\n∀x (Entrepreneur(x) → Start(x)) ::: All entrepreneurs are starting a new company.\n∀x (RiskAverse(x) → Work(x)) ::: All risk-averse people are people who work at corporate jobs.\n∀x (Hate(x, workingForOthers) → Entrepreneur(x)) ::: All people who hate working for others are entrepreneurs.\n¬(Entrepreneur(markZuckerberg) ∨ Hate(markZuckerberg, workingForOthers)) → ¬RiskAverse(markZuckerberg) ::: If Mark Zuckerberg is neither an entrepreneur nor a person who hates working for others, then Mark Zuckerberg is not a risk-averse person.\nConclusion:\nEntrepreneur(markZuckerberg) ::: Mark Zuckerberg is an entrepreneur.\n------\nProblem:\nAll people who are not aware that caffeine is a drug are people who regularly drink coffee. All people who regularly drink coffee are people who are dependent on caffeine. All people who are dependent"
    ]
  },
  {
    "id": "FOLIO_train_182",
    "context": "No people who work at corporate jobs are starting a new company. All entrepreneurs are starting a new company. All risk-averse people are people who work at corporate jobs. All people who hate working for others are entrepreneurs. If Mark Zuckerberg is neither an entrepreneur nor a person who hates working for others, then Mark Zuckerberg is not a risk-averse person.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mark Zuckerberg is a risk-averse person.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nWork(x) ::: x works at a corporate job.\nStart(x) ::: x is starting a new company.\nEntrepreneur(x) ::: x is an entrepreneur.\nRiskAverse(x) ::: x is a risk-averse person.\nHate(x, y) ::: x hates y.\nMarkZuckerberg(x) ::: x is Mark Zuckerberg.\nPremises:\n∀x (Work(x) → ¬Start(x)) ::: No people who work at corporate jobs are starting a new company.\n∀x (Entrepreneur(x) → Start(x)) ::: All entrepreneurs are starting a new company.\n∀x (RiskAverse(x) → Work(x)) ::: All risk-averse people are people who work at corporate jobs.\n∀x (Hate(x, workingForOthers) → Entrepreneur(x)) ::: All people who hate working for others are entrepreneurs.\n¬(Entrepreneur(markZuckerberg) ∨ Hate(markZuckerberg, workingForOthers)) → ¬RiskAverse(markZuckerberg) ::: If Mark Zuckerberg is neither an entrepreneur nor a person who hates working for others, then Mark Zuckerberg is not a risk-averse person.\nConclusion:\nRiskAverse(markZuckerberg) ::: Mark Zuckerberg is a risk-averse person.\n------\nProblem:\nAll people who are not aware that caffeine is a drug are people who regularly drink coffee. All people who regularly drink coffee are people who are dependent on caffeine"
    ]
  },
  {
    "id": "FOLIO_train_183",
    "context": "No people who work at corporate jobs are starting a new company. All entrepreneurs are starting a new company. All risk-averse people are people who work at corporate jobs. All people who hate working for others are entrepreneurs. If Mark Zuckerberg is neither an entrepreneur nor a person who hates working for others, then Mark Zuckerberg is not a risk-averse person.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mark Zuckerberg is not a risk-averse person.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nWork(x) ::: x works at a corporate job.\nStart(x) ::: x is starting a new company.\nEntrepreneur(x) ::: x is an entrepreneur.\nRiskAverse(x) ::: x is a risk-averse person.\nHate(x, y) ::: x hates y.\nMarkZuckerberg(x) ::: x is Mark Zuckerberg.\nPremises:\n∀x (Work(x) → ¬Start(x)) ::: No people who work at corporate jobs are starting a new company.\n∀x (Entrepreneur(x) → Start(x)) ::: All entrepreneurs are starting a new company.\n∀x (RiskAverse(x) → Work(x)) ::: All risk-averse people are people who work at corporate jobs.\n∀x (Hate(x, workingForOthers) → Entrepreneur(x)) ::: All people who hate working for others are entrepreneurs.\n¬(Entrepreneur(markZuckerberg) ∨ Hate(markZuckerberg, workingForOthers)) → ¬RiskAverse(markZuckerberg) ::: If Mark Zuckerberg is neither an entrepreneur nor a person who hates working for others, then Mark Zuckerberg is not a risk-averse person.\nConclusion:\n¬RiskAverse(markZuckerberg) ::: Mark Zuckerberg is not a risk-averse person.\n------\nProblem:\nAll people who are not aware that caffeine is a drug are people who regularly drink coffee. All people who regularly drink coffee are people who are dependent on c"
    ]
  },
  {
    "id": "FOLIO_train_184",
    "context": "There are two kitchens in the house: the upstairs kitchen and the downstairs kitchen. When someone is cooking in the downstairs kitchen, the first floor becomes smokey unless the air conditioner is running. If the air conditioner is running and someone is cooking in the downstairs kitchen, all the smoke travels to the second floor.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If someone is cooking downstairs, it will always cause the first floor to become smokey.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCooking(x) ::: x is cooking.\nDownstairs(x) ::: x is in the downstairs kitchen.\nUpstairs(x) ::: x is in the upstairs kitchen.\nFirstFloor(x) ::: x is on the first floor.\nSecondFloor(x) ::: x is on the second floor.\nSmokey(x) ::: x is smokey.\nAirConditioner(x) ::: x is the air conditioner.\nRunning(x) ::: x is running.\nPremises:\n∀x (Downstairs(x) ∧ Cooking(x) → Smokey(firstFloor)) ::: When someone is cooking in the downstairs kitchen, the first floor becomes smokey unless the air conditioner is running.\n∀x (Downstairs(x) ∧ Cooking(x) ∧ Running(airConditioner) → Smokey(secondFloor)) ::: If the air conditioner is running and someone is cooking in the downstairs kitchen, all the smoke travels to the second floor.\nConclusion:\n∀x (Downstairs(x) ∧ Cooking(x) → Smokey(firstFloor)) ::: If someone is cooking downstairs, it will always cause the first floor to become smokey.\n------\nProblem:\nThe following is a list of the most popular programming languages in 2021:\n1. Python\n2. Java\n3. C\n4. C++\n5. C#\n6. JavaScript\n7. R\n8. PHP\n9. Swift\n10. Go\nQuestion:\nBased on the above information, is the following"
    ]
  },
  {
    "id": "FOLIO_train_185",
    "context": "There are two kitchens in the house: the upstairs kitchen and the downstairs kitchen. When someone is cooking in the downstairs kitchen, the first floor becomes smokey unless the air conditioner is running. If the air conditioner is running and someone is cooking in the downstairs kitchen, all the smoke travels to the second floor.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If someone is cooking upstairs, the first floor will become smokey.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCooking(x, y) ::: x is cooking in y.\nSmokey(x) ::: x is smokey.\nAirConditioner(x) ::: x is the air conditioner.\nRunning(x) ::: x is running.\nFloor(x) ::: x is a floor.\nPremises:\n∀x (Cooking(x, downstairsKitchen) → Smokey(firstFloor)) ::: When someone is cooking in the downstairs kitchen, the first floor becomes smokey.\n∀x (Cooking(x, downstairsKitchen) ∧ Running(airConditioner) → Smokey(secondFloor)) ::: If the air conditioner is running and someone is cooking in the downstairs kitchen, all the smoke travels to the second floor.\nConclusion:\nCooking(x, upstairsKitchen) → Smokey(firstFloor) ::: If someone is cooking upstairs, the first floor will become smokey.\n------\nProblem:\nThe following is a list of the most popular programming languages in 2019:\n1. Python\n2. Java\n3. JavaScript\n4. C++\n5. C#\n6. PHP\n7. C\n8. R\n9. Swift\n10. Objective-C\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? C is the most popular programming language in 2019.\nBased on the above information, is the following statement true, false, or uncertain? C is the most popular programming language in 2019.\n###\nPredicates:\nPopular(x) ::: x is"
    ]
  },
  {
    "id": "FOLIO_train_186",
    "context": "There are two kitchens in the house: the upstairs kitchen and the downstairs kitchen. When someone is cooking in the downstairs kitchen, the first floor becomes smokey unless the air conditioner is running. If the air conditioner is running and someone is cooking in the downstairs kitchen, all the smoke travels to the second floor.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If someone is cooking downstairs and the air conditioner is running, there will be smoke upstairs.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCooking(x) ::: x is cooking.\nDownstairs(x) ::: x is in the downstairs kitchen.\nUpstairs(x) ::: x is in the upstairs kitchen.\nFirstFloor(x) ::: x is on the first floor.\nSecondFloor(x) ::: x is on the second floor.\nSmoke(x) ::: x is smokey.\nAirConditioner(x) ::: x is the air conditioner.\nRunning(x) ::: x is running.\nPremises:\n∀x (Downstairs(x) ∧ Cooking(x) → Smoke(firstFloor)) ::: When someone is cooking in the downstairs kitchen, the first floor becomes smokey.\n∀x (Downstairs(x) ∧ Cooking(x) ∧ Running(airConditioner) → Smoke(secondFloor)) ::: If the air conditioner is running and someone is cooking in the downstairs kitchen, all the smoke travels to the second floor.\nConclusion:\n∀x (Downstairs(x) ∧ Cooking(x) ∧ Running(airConditioner) → Smoke(secondFloor)) ::: If someone is cooking downstairs and the air conditioner is running, there will be smoke upstairs.\n------\nProblem:\nThe following is a list of the most common types of cancer in the United States: breast cancer, lung cancer, prostate cancer, colon cancer, and skin cancer. Breast cancer is the most common cancer in women. Lung cancer is the most common cancer in men. Prostate cancer is the most common cancer in men. Colon cancer is the most common cancer in"
    ]
  },
  {
    "id": "FOLIO_train_187",
    "context": "New York City is Located in the United States of America. United States of America is part of North America. North America is in the western hemisphere of the earth. New York City is a highly developed city. If place A is located in place B and place B is located in place C, then place A is located in place C.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A highly developed city is located in the western hemisphere of the earth.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLocated(x, y) ::: x is located in y.\nHighlyDeveloped(x) ::: x is a highly developed city.\nPartOf(x, y) ::: x is part of y.\nIn(x, y) ::: x is in y.\nPremises:\nLocated(newYorkCity, unitedStatesOfAmerica) ::: New York City is Located in the United States of America.\nPartOf(unitedStatesOfAmerica, northAmerica) ::: United States of America is part of North America.\nIn(northAmerica, westernHemisphereOfTheEarth) ::: North America is in the western hemisphere of the earth.\nHighlyDeveloped(newYorkCity) ::: New York City is a highly developed city.\n∀x ∀y ∀z (Located(x, y) ∧ Located(y, z) → Located(x, z)) ::: If place A is located in place B and place B is located in place C, then place A is located in place C.\nConclusion:\nIn(newYorkCity, westernHemisphereOfTheEarth) ::: A highly developed city is located in the western hemisphere of the earth.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug."
    ]
  },
  {
    "id": "FOLIO_train_188",
    "context": "New York City is Located in the United States of America. United States of America is part of North America. North America is in the western hemisphere of the earth. New York City is a highly developed city. If place A is located in place B and place B is located in place C, then place A is located in place C.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? USA is not located in western hemisphere of the earth.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLocated(x, y) ::: x is located in y.\nPart(x, y) ::: x is part of y.\nHighlyDeveloped(x) ::: x is a highly developed city.\nPremises:\nLocated(newYorkCity, unitedStatesOfAmerica) ::: New York City is Located in the United States of America.\nPart(unitedStatesOfAmerica, northAmerica) ::: United States of America is part of North America.\nPart(northAmerica, westernHemisphereOfTheEarth) ::: North America is in the western hemisphere of the earth.\nHighlyDeveloped(newYorkCity) ::: New York City is a highly developed city.\n∀x ∀y ∀z (Located(x, y) ∧ Located(y, z) → Located(x, z)) ::: If place A is located in place B and place B is located in place C, then place A is located in place C.\nConclusion:\n¬Located(unitedStatesOfAmerica, westernHemisphereOfTheEarth) ::: USA is not located in western hemisphere of the earth.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student,"
    ]
  },
  {
    "id": "FOLIO_train_189",
    "context": "New York City is Located in the United States of America. United States of America is part of North America. North America is in the western hemisphere of the earth. New York City is a highly developed city. If place A is located in place B and place B is located in place C, then place A is located in place C.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? New York City is located in the New York State.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLocated(x, y) ::: x is located in y.\nPart(x, y) ::: x is part of y.\nHighlyDeveloped(x) ::: x is a highly developed city.\nPremises:\nLocated(newYorkCity, unitedStatesOfAmerica) ::: New York City is Located in the United States of America.\nPart(unitedStatesOfAmerica, northAmerica) ::: United States of America is part of North America.\nPart(northAmerica, westernHemisphere) ::: North America is in the western hemisphere of the earth.\nHighlyDeveloped(newYorkCity) ::: New York City is a highly developed city.\n∀x ∀y ∀z (Located(x, y) ∧ Located(y, z) → Located(x, z)) ::: If place A is located in place B and place B is located in place C, then place A is located in place C.\nConclusion:\nLocated(newYorkCity, newYorkState) ::: New York City is located in the New York State.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and"
    ]
  },
  {
    "id": "FOLIO_train_190",
    "context": "Callus 4 is a poem that was written by the ancient Roman writer Catullus. Callus 4 is a story about the retirement of a well-traveled ship. There is a strong analogy of human aging in the poem Callus 4. Callus 4 is written in an unusual iambic trimeter to convey a sense of speed over the waves.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There exists a poem written by an ancient Roman writer with a strong analogy of human aging.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPoem(x) ::: x is a poem.\nWrittenBy(x, y) ::: x is written by y.\nAncientRomanWriter(x) ::: x is an ancient Roman writer.\nStory(x) ::: x is a story.\nRetirement(x) ::: x is the retirement of a well-traveled ship.\nHumanAging(x) ::: x is a strong analogy of human aging.\nIambicTrimeter(x) ::: x is written in an unusual iambic trimeter.\nPremises:\nPoem(callus4) ∧ WrittenBy(callus4, catullus) ∧ Story(callus4) ∧ Retirement(callus4) ∧ HumanAging(callus4) ∧ IambicTrimeter(callus4) ::: Callus 4 is a poem that was written by the ancient Roman writer Catullus. Callus 4 is a story about the retirement of a well-traveled ship. There is a strong analogy of human aging in the poem Callus 4. Callus 4 is written in an unusual iambic trimeter to convey a sense of speed over the waves.\nConclusion:\n∃x ∃y (Poem(x) ∧ WrittenBy(x, y) ∧ AncientRomanWriter(y) ∧ HumanAging(x)) ::: There exists a poem written by an ancient Roman writer with a strong analogy of human aging.\n------"
    ]
  },
  {
    "id": "FOLIO_train_191",
    "context": "Callus 4 is a poem that was written by the ancient Roman writer Catullus. Callus 4 is a story about the retirement of a well-traveled ship. There is a strong analogy of human aging in the poem Callus 4. Callus 4 is written in an unusual iambic trimeter to convey a sense of speed over the waves.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There exists a poem written by an ancient Roman writer written in iambic petameter.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPoem(x) ::: x is a poem.\nWrittenBy(x, y) ::: x is written by y.\nAncientRomanWriter(x) ::: x is an ancient Roman writer.\nStory(x) ::: x is a story.\nRetirement(x) ::: x is the retirement of a well-traveled ship.\nHumanAging(x) ::: x is a strong analogy of human aging.\nIambicTrimeter(x) ::: x is written in an unusual iambic trimeter.\nPremises:\nPoem(callus4) ∧ WrittenBy(callus4, catullus) ∧ AncientRomanWriter(catullus) ::: Callus 4 is a poem that was written by the ancient Roman writer Catullus.\nPoem(callus4) ∧ Story(callus4) ∧ Retirement(callus4) ::: Callus 4 is a story about the retirement of a well-traveled ship.\nPoem(callus4) ∧ HumanAging(callus4) ::: There is a strong analogy of human aging in the poem Callus 4.\nPoem(callus4) ∧ IambicTrimeter(callus4) ::: Callus 4 is written in an unusual iambic trimeter to convey a sense of speed over the waves.\nConclusion:\n∃x ∃y (Poem(x) ∧ WrittenBy(x, y)"
    ]
  },
  {
    "id": "FOLIO_train_192",
    "context": "Callus 4 is a poem that was written by the ancient Roman writer Catullus. Callus 4 is a story about the retirement of a well-traveled ship. There is a strong analogy of human aging in the poem Callus 4. Callus 4 is written in an unusual iambic trimeter to convey a sense of speed over the waves.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Callus 4 is written in an unusual iambic trimeter to convey a strong analogy of human aging.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCallus4(x) ::: x is the poem Callus 4.\nWrittenBy(x, y) ::: x is written by y.\nStory(x, y) ::: x is a story about y.\nAnalogy(x, y) ::: x is an analogy of y.\nConvey(x, y, z) ::: x is conveyed by y in z.\nIambicTrimeter(x) ::: x is written in an unusual iambic trimeter.\nPremises:\nCallus4(callus4) ::: Callus 4 is a poem that was written by the ancient Roman writer Catullus.\nStory(callus4, retirementOfWellTraveledShip) ::: Callus 4 is a story about the retirement of a well-traveled ship.\nAnalogy(callus4, humanAging) ::: There is a strong analogy of human aging in the poem Callus 4.\nIambicTrimeter(callus4) ::: Callus 4 is written in an unusual iambic trimeter to convey a sense of speed over the waves.\nConclusion:\nConvey(callus4, analogy(callus4, humanAging), iambicTrimeter(callus4)) ::: Callus 4 is written in an unusual iambic trimeter to convey a strong analogy of human aging.\n------\nProblem:\nThe 1990s was a decade of the Gregorian calendar that began on January 1, 1990, and ended on December 31, 19"
    ]
  },
  {
    "id": "FOLIO_train_193",
    "context": "Westworld is an American science fiction-thriller TV series. In 2016, a new television series named Westworld debuted on HBO. The TV series Westworld is adapted from the original film in 1973, which was written and directed by Michael Crichton. The 1973 film Westworld is about robots that malfunction and begin killing the human visitors.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Michael Crichton has directed a film about robots.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFilm(x) ::: x is a film.\nTelevisionSeries(x) ::: x is a television series.\nAdaptedFrom(x, y) ::: x is adapted from y.\nDebut(x, y) ::: x debuted in year y.\nWrittenBy(x, y) ::: x is written by y.\nDirectedBy(x, y) ::: x is directed by y.\nAbout(x, y) ::: x is about y.\nPremises:\nFilm(westworld1973) ∧ TelevisionSeries(westworld2016) ∧ AdaptedFrom(westworld2016, westworld1973) ∧ Debut(westworld2016, year2016) ::: In 2016, a new television series named Westworld debuted on HBO. The TV series Westworld is adapted from the original film in 1973, which was written and directed by Michael Crichton.\nWrittenBy(westworld1973, michaelCrichton) ∧ DirectedBy(westworld1973, michaelCrichton) ::: The 1973 film Westworld is written and directed by Michael Crichton.\nAbout(westworld1973, robots) ::: The 1973 film Westworld is about robots.\nConclusion:\nDirectedBy(westworld1973, michaelCrichton) ∧ About(westworld1973,"
    ]
  },
  {
    "id": "FOLIO_train_194",
    "context": "Westworld is an American science fiction-thriller TV series. In 2016, a new television series named Westworld debuted on HBO. The TV series Westworld is adapted from the original film in 1973, which was written and directed by Michael Crichton. The 1973 film Westworld is about robots that malfunction and begin killing the human visitors.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? An American TV series debuted in 2016.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAmerican(x) ::: x is an American.\nTVSeries(x) ::: x is a TV series.\nDebut(x, y) ::: x debuted in year y.\nAdaptedFrom(x, y) ::: x is adapted from y.\nFilm(x) ::: x is a film.\nWrittenBy(x, y) ::: x is written by y.\nDirectedBy(x, y) ::: x is directed by y.\nAbout(x, y) ::: x is about y.\nRobot(x) ::: x is a robot.\nMalfunction(x) ::: x malfunctions.\nKill(x, y) ::: x kills y.\nPremises:\nAmerican(westworld) ∧ TVSeries(westworld) ∧ Debut(westworld, year2016) ::: Westworld is an American science fiction-thriller TV series.\n∃x (TVSeries(x) ∧ Debut(x, year2016)) ::: In 2016, a new television series named Westworld debuted on HBO.\nFilm(westworld) ∧ WrittenBy(michaelCrichton, westworld) ∧ DirectedBy(michaelCrichton, westworld) ∧ About(westworld, robot) ∧ Malfunction(robot) ∧ Kill(robot, human) ::: The 1973 film Westworld is about robots that malfunction and begin killing the human visitors"
    ]
  },
  {
    "id": "FOLIO_train_195",
    "context": "The 2008 Summer Olympics were held in Beijing, China. The 2008 Summer Olympics were the second Summer Olympic Games to be held in a communist state. China won the most gold medals (48) in the 2008 Summer Olympics. The United States placed second in the gold medal tally but won the highest number of medals overall (112) in the 2008 Summer Olympics. The third place in the gold medal tally was achieved by Russia in the 2008 Summer Olympics. If a country places third in gold medals, then they had fewer gold medals than the team that won the most gold medals. 87 countries won at least one medal during the 2008 Games.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Russia did not win fewer gold medals than China.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBeijing(x) ::: x is Beijing.\nChina(x) ::: x is China.\nCommunistState(x) ::: x is a communist state.\nSummerOlympics(x) ::: x is the Summer Olympics.\nGoldMedal(x) ::: x is a gold medal.\nPlace(x, y) ::: x placed y in the gold medal tally.\nWin(x, y) ::: x won y gold medals.\nCountry(x) ::: x is a country.\nMedal(x) ::: x is a medal.\nPremises:\nSummerOlympics(year2008) ::: The 2008 Summer Olympics were held in Beijing, China.\nSummerOlympics(year2008) ∧ CommunistState(china) ::: The 2008 Summer Olympics were the second Summer Olympic Games to be held in a communist state.\nWin(china, goldMedal48) ∧ Place(china, first) ::: China won the most gold medals (48) in the 2008 Summer Olympics.\nWin(unitedStates, goldMedal112) ∧ Place(unitedStates, second) ::: The United States placed second in the gold medal tally but won the highest number of medals overall (112) in the 2008 Summer Olympics.\nWin(russia, goldMedal23) ∧ Place(russia, third) ::: The third place in the gold medal tally was"
    ]
  },
  {
    "id": "FOLIO_train_196",
    "context": "The 2008 Summer Olympics were held in Beijing, China. The 2008 Summer Olympics were the second Summer Olympic Games to be held in a communist state. China won the most gold medals (48) in the 2008 Summer Olympics. The United States placed second in the gold medal tally but won the highest number of medals overall (112) in the 2008 Summer Olympics. The third place in the gold medal tally was achieved by Russia in the 2008 Summer Olympics. If a country places third in gold medals, then they had fewer gold medals than the team that won the most gold medals. 87 countries won at least one medal during the 2008 Games.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The United States won fewer gold medals than China.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nHost(x) ::: x is the host of the Olympics.\nSummer(x) ::: x is a Summer Olympics.\nCommunist(x) ::: x is a communist state.\nGoldMedal(x) ::: x is a gold medal.\nPlace(x, y) ::: x places y in the medal tally.\nWin(x, y) ::: x wins y medals.\nPremises:\nSummer(olympics2008) ∧ Host(olympics2008, china) ::: The 2008 Summer Olympics were held in Beijing, China.\nSummer(olympics2008) ∧ Communist(china) ::: The 2008 Summer Olympics were the second Summer Olympic Games to be held in a communist state.\nWin(china, goldMedal48) ∧ GoldMedal(goldMedal48) ::: China won the most gold medals (48) in the 2008 Summer Olympics.\nWin(unitedStates, goldMedal46) ∧ GoldMedal(goldMedal46) ::: The United States placed second in the gold medal tally but won the highest number of medals overall (112) in the 2008 Summer Olympics.\nWin(russia, goldMedal23) ∧ GoldMedal(goldMedal23) ::: The third place in the gold medal tally was achieved by Russia in the 2008 Summer Olympics.\nPlace("
    ]
  },
  {
    "id": "FOLIO_train_197",
    "context": "The 2008 Summer Olympics were held in Beijing, China. The 2008 Summer Olympics were the second Summer Olympic Games to be held in a communist state. China won the most gold medals (48) in the 2008 Summer Olympics. The United States placed second in the gold medal tally but won the highest number of medals overall (112) in the 2008 Summer Olympics. The third place in the gold medal tally was achieved by Russia in the 2008 Summer Olympics. If a country places third in gold medals, then they had fewer gold medals than the team that won the most gold medals. 87 countries won at least one medal during the 2008 Games.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Russia won fewer gold medals than China.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nHost(x) ::: x is the host of the Olympics.\nSummer(x) ::: x is a Summer Olympics.\nCommunist(x) ::: x is a communist state.\nGoldMedal(x) ::: x is a gold medal.\nPlace(x, y) ::: x places y in the gold medal tally.\nWin(x, y) ::: x won y medals overall.\nPremises:\nSummer(olympics2008) ∧ Host(olympics2008, china) ::: The 2008 Summer Olympics were held in Beijing, China.\nSummer(olympics2008) ∧ Communist(china) ::: The 2008 Summer Olympics were the second Summer Olympic Games to be held in a communist state.\nGoldMedal(olympics2008, china, 48) ::: China won the most gold medals (48) in the 2008 Summer Olympics.\nGoldMedal(olympics2008, unitedStates, 36) ∧ Win(olympics2008, unitedStates, 112) ::: The United States placed second in the gold medal tally but won the highest number of medals overall (112) in the 2008 Summer Olympics.\nGoldMedal(olympics2008, russia, 23) ::: The third place in the gold medal tally was achieved by Russia in the 2"
    ]
  },
  {
    "id": "FOLIO_train_198",
    "context": "Xiufeng, Xiangshan, Diecai, Qixing are districts in the city of Guilin. Yangshuo is not a district in Guilin.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Xiangshan and Diecai are districts in the same city.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDistrict(x) ::: x is a district.\nCity(x) ::: x is a city.\nIn(x, y) ::: x is in y.\nPremises:\nDistrict(xiufeng) ∧ District(xiangshan) ∧ District(diecai) ∧ District(qixing) ::: Xiufeng, Xiangshan, Diecai, Qixing are districts.\nCity(guilin) ::: Guilin is a city.\nIn(xiufeng, guilin) ∧ In(xiangshan, guilin) ∧ In(diecai, guilin) ∧ In(qixing, guilin) ::: Xiufeng, Xiangshan, Diecai, Qixing are districts in the city of Guilin.\n¬District(yangshuo) ::: Yangshuo is not a district.\nConclusion:\nIn(xiangshan, guilin) ∧ In(diecai, guilin) ::: Xiangshan and Diecai are districts in the same city.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffe"
    ]
  },
  {
    "id": "FOLIO_train_199",
    "context": "Xiufeng, Xiangshan, Diecai, Qixing are districts in the city of Guilin. Yangshuo is not a district in Guilin.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Xiufeng is in Guilin.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDistrict(x) ::: x is a district.\nIn(x, y) ::: x is in y.\nPremises:\nDistrict(xiufeng) ∧ District(xiangshan) ∧ District(diecai) ∧ District(qixing) ::: Xiufeng, Xiangshan, Diecai, Qixing are districts.\n¬District(yangshuo) ::: Yangshuo is not a district.\nConclusion:\nIn(xiufeng, guilin) ::: Xiufeng is in Guilin.\n------\nProblem:\nThe number of people who are not in the room is equal to the number of people who are in the room.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The number of people who are in the room is equal to the number of people who are not in the room.\n###\nPredicates:\nIn(x, y) ::: x is in y.\nPremises:\n∀x (¬In(x, room) ↔ In(x, room)) ::: The number of people who are not in the room is equal to the number of people who are in the room.\nConclusion:\n∀x (In(x, room) ↔ ¬In(x, room)) ::: The number of people who are in the room is equal to the number of people who are not in the room.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly"
    ]
  },
  {
    "id": "FOLIO_train_200",
    "context": "Xiufeng, Xiangshan, Diecai, Qixing are districts in the city of Guilin. Yangshuo is not a district in Guilin.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Kowloon District is in Hong Kong.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDistrict(x) ::: x is a district.\nIn(x, y) ::: x is in y.\nPremises:\nDistrict(xiufeng) ∧ District(xiangshan) ∧ District(diecai) ∧ District(qixing) ::: Xiufeng, Xiangshan, Diecai, Qixing are districts in the city of Guilin.\n¬District(yangshuo) ::: Yangshuo is not a district in Guilin.\nConclusion:\nIn(kowloonDistrict, hongkong) ::: Kowloon District is in Hong Kong.\n------"
    ]
  },
  {
    "id": "FOLIO_train_201",
    "context": "All people who grow their own fresh vegetables in their home garden also have ample space. If people are young working professionals who live in large cities, then they do not have ample space. If people order takeout from delivery services often, then they grow their own fresh vegetables in their home garden. If people enjoy going out often to restaurants with friends, then they order takeout from delivery services often. If people regularly tout the benefits of homegrown and homecooked meals over fast food, then they enjoy going out often to restaurants with friends. Michael grows his own fresh vegetables in his home garden or regularly touts the benefits of homegrown and homecooked meals over fast food.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Michael enjoys going out often to restaurants with friends.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGrow(x) ::: x grows their own fresh vegetables in their home garden.\nAmpleSpace(x) ::: x has ample space.\nYoung(x) ::: x is a young person.\nProfessional(x) ::: x is a working professional.\nLive(x, y) ::: x lives in y.\nCity(x) ::: x is a large city.\nOrder(x) ::: x orders takeout from delivery services often.\nTout(x) ::: x regularly touts the benefits of homegrown and homecooked meals over fast food.\nEnjoy(x) ::: x enjoys going out often to restaurants with friends.\nPremises"
    ]
  },
  {
    "id": "FOLIO_train_202",
    "context": "All people who grow their own fresh vegetables in their home garden also have ample space. If people are young working professionals who live in large cities, then they do not have ample space. If people order takeout from delivery services often, then they grow their own fresh vegetables in their home garden. If people enjoy going out often to restaurants with friends, then they order takeout from delivery services often. If people regularly tout the benefits of homegrown and homecooked meals over fast food, then they enjoy going out often to restaurants with friends. Michael grows his own fresh vegetables in his home garden or regularly touts the benefits of homegrown and homecooked meals over fast food.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Michael is a young working professional who lives in large cities.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGrow(x) ::: x grows their own fresh vegetables in their home garden.\nAmple(x) ::: x has ample space.\nYoung(x) ::: x is a young working professional.\nLive(x, y) ::: x lives in y.\nCity(x) ::: x is a large city.\nOrder(x) ::: x orders takeout from delivery services often.\nTout(x) ::: x regularly touts the benefits of homegrown and homecooked meals over fast food.\nEnjoy(x) ::: x enjoys going out often to restaurants with friends.\nPremises:\n∀x (Grow(x) → Ample("
    ]
  },
  {
    "id": "FOLIO_train_203",
    "context": "All people who grow their own fresh vegetables in their home garden also have ample space. If people are young working professionals who live in large cities, then they do not have ample space. If people order takeout from delivery services often, then they grow their own fresh vegetables in their home garden. If people enjoy going out often to restaurants with friends, then they order takeout from delivery services often. If people regularly tout the benefits of homegrown and homecooked meals over fast food, then they enjoy going out often to restaurants with friends. Michael grows his own fresh vegetables in his home garden or regularly touts the benefits of homegrown and homecooked meals over fast food.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Michael grows his own fresh vegetables in their home garden or is a young working professional who lives in large cities.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGrow(x) ::: x grows their own fresh vegetables in their home garden.\nAmpleSpace(x) ::: x has ample space.\nYoung(x) ::: x is a young working professional.\nLive(x, y) ::: x lives in y.\nCity(x) ::: x is a large city.\nOrder(x) ::: x orders takeout from delivery services often.\nTout(x) ::: x regularly touts the benefits of homegrown and homecooked meals over fast food.\nEnjoy(x) ::: x enjoys going out often to restaurants with friends.\nPremises:\n∀x (Grow(x) → Ample"
    ]
  },
  {
    "id": "FOLIO_train_204",
    "context": "All devices belonging to the company are connected to Google Home. All devices belonging to employees are connected to the company's wifi. All devices connected to Google Home are controlled by the managers. All devices that connect to the company's wifi are easy to operate. IPod1 belongs to employees.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? iPod1 is easy to operate.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBelong(x, y) ::: x belongs to y.\nConnect(x, y) ::: x is connected to y.\nControl(x, y) ::: x is controlled by y.\nDevice(x) ::: x is a device.\nEmployee(x) ::: x is an employee.\nCompany(x) ::: x is a company.\nGoogleHome(x) ::: x is Google Home.\nWifi(x) ::: x is wifi.\nEasy(x) ::: x is easy.\nPremises:\n∀x (Belong(x, company) → Connect(x, googleHome)) ::: All devices belonging to the company are connected to"
    ]
  },
  {
    "id": "FOLIO_train_205",
    "context": "All devices belonging to the company are connected to Google Home. All devices belonging to employees are connected to the company's wifi. All devices connected to Google Home are controlled by the managers. All devices that connect to the company's wifi are easy to operate. IPod1 belongs to employees.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? iPod1 is controlled by managers.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBelong(x, y) ::: x belongs to y.\nConnect(x, y) ::: x is connected to y.\nControl(x, y) ::: x is controlled by y.\nDevice(x) ::: x is a device.\nCompany(x) ::: x is a company.\nEmployee(x) ::: x is an employee.\nGoogleHome(x) ::: x is Google Home.\nWifi(x) ::: x is wifi.\nEasy(x) ::: x is easy.\nPremises:\n∀x (Device(x) ∧ Belong(x, company) → Connect(x, googleHome)) ::: All"
    ]
  },
  {
    "id": "FOLIO_train_206",
    "context": "All devices belonging to the company are connected to Google Home. All devices belonging to employees are connected to the company's wifi. All devices connected to Google Home are controlled by the managers. All devices that connect to the company's wifi are easy to operate. IPod1 belongs to employees.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? iPod1 is connected to Google Home.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBelong(x, y) ::: x belongs to y.\nDevice(x) ::: x is a device.\nCompany(x) ::: x is a company.\nEmployee(x) ::: x is an employee.\nGoogleHome(x) ::: x is connected to Google Home.\nWifi(x) ::: x is connected to the company's wifi.\nManager(x) ::: x is controlled by the managers.\nEasy(x) ::: x is easy to operate.\nPremises:\n∀x (Belong(x, company) → GoogleHome(x)) ::: All devices belonging to the company are connected to Google Home.\n∀x"
    ]
  },
  {
    "id": "FOLIO_train_207",
    "context": "No touring musicians are permanent members of an orchestra. Musicians are either permanent members of an orchestra or have a unique musical voice or style. All musicians who have a unique musical voice or style are interesting as individual performers. All musicians who are interesting as individual performers are capable of attracting large audiences. If Ryan is interesting as an individual performer and has a unique musical voice or style, then Ryan is either a touring soloist musician and capable of attracting large audiences, or neither a touring soloist musician nor capable of attracting large audiences.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Ryan is interesting as an individual performer.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTouring(x) ::: x is a touring musician.\nPermanent(x) ::: x is a permanent member of an orchestra.\nMusician(x) ::: x is a musician.\nUnique(x) ::: x has a unique musical voice or style.\nInteresting(x) ::: x is interesting as an individual performer.\nAudience(x) ::: x is capable of attracting large audiences.\nPremises:\n∀x (Touring(x) → ¬Permanent(x)) ::: No touring musicians are permanent members of an orchestra.\n∀x (Musician(x) → Permanent(x)"
    ]
  },
  {
    "id": "FOLIO_train_208",
    "context": "No touring musicians are permanent members of an orchestra. Musicians are either permanent members of an orchestra or have a unique musical voice or style. All musicians who have a unique musical voice or style are interesting as individual performers. All musicians who are interesting as individual performers are capable of attracting large audiences. If Ryan is interesting as an individual performer and has a unique musical voice or style, then Ryan is either a touring soloist musician and capable of attracting large audiences, or neither a touring soloist musician nor capable of attracting large audiences.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Ryan is either a permanent member of an orchestra or a touring soloist musician.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTouring(x) ::: x is a touring musician.\nPermanent(x) ::: x is a permanent member of an orchestra.\nMusician(x) ::: x is a musician.\nUnique(x) ::: x has a unique musical voice or style.\nInteresting(x) ::: x is interesting as an individual performer.\nAudience(x) ::: x is capable of attracting large audiences.\nPremises:\n∀x (Touring(x) → ¬Permanent(x)) ::: No touring musicians are permanent members of an orchestra.\n∀x (Musician(x) → Permanent(x)"
    ]
  },
  {
    "id": "FOLIO_train_209",
    "context": "No touring musicians are permanent members of an orchestra. Musicians are either permanent members of an orchestra or have a unique musical voice or style. All musicians who have a unique musical voice or style are interesting as individual performers. All musicians who are interesting as individual performers are capable of attracting large audiences. If Ryan is interesting as an individual performer and has a unique musical voice or style, then Ryan is either a touring soloist musician and capable of attracting large audiences, or neither a touring soloist musician nor capable of attracting large audiences.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Ryan is either a permanent member of an orchestra or has a unique musical voice or style.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTouring(x) ::: x is a touring musician.\nPermanent(x) ::: x is a permanent member of an orchestra.\nMusician(x) ::: x is a musician.\nUnique(x) ::: x has a unique musical voice or style.\nInteresting(x) ::: x is interesting as an individual performer.\nAudience(x) ::: x is capable of attracting large audiences.\nPremises:\n∀x (Touring(x) → ¬Permanent(x)) ::: No touring musicians are permanent members of an orchestra.\n∀x (Musician(x) → Permanent(x)"
    ]
  },
  {
    "id": "FOLIO_train_210",
    "context": "If someone yells, then they are not cool. If someone is angry, then they yell. If someone flies, then they are cool. Every person that knows magic can fly. All wizards know magic. Harry either yells and flies, or neither yells nor flies. Potter is a wizard and flies.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Harry is cool.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nYell(x) ::: x yells.\nCool(x) ::: x is cool.\nAngry(x) ::: x is angry.\nFly(x) ::: x flies.\nKnowMagic(x) ::: x knows magic.\nPerson(x) ::: x is a person.\nWizard(x) ::: x is a wizard.\nPremises:\n∀x (Yell(x) → ¬Cool(x)) ::: If someone yells, then they are not cool.\n∀x (Angry(x) → Yell(x)) ::: If someone is angry, then they yell.\n∀x (Fly(x) → Cool(x)) ::: If someone flies, then they are cool.\n∀x (KnowMagic(x) → Fly(x)) ::: Every person that knows magic can fly.\n∀x (Wizard(x) → KnowMagic(x)) ::: All wizards know magic.\n(Yell(harry) ∧ Fly(harry)) ⊕ ¬(Yell(harry) ∨ Fly(harry)) ::: Harry either yells and flies, or neither yells nor flies.\nWizard(potter) ∧ Fly(potter) ::: Potter is a wizard and flies.\nConclusion:\nCool(harry) ::: Harry is cool.\n------"
    ]
  },
  {
    "id": "FOLIO_train_211",
    "context": "If someone yells, then they are not cool. If someone is angry, then they yell. If someone flies, then they are cool. Every person that knows magic can fly. All wizards know magic. Harry either yells and flies, or neither yells nor flies. Potter is a wizard and flies.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Harry is not cool.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nYell(x) ::: x yells.\nCool(x) ::: x is cool.\nAngry(x) ::: x is angry.\nFly(x) ::: x flies.\nKnowMagic(x) ::: x knows magic.\nPerson(x) ::: x is a person.\nWizard(x) ::: x is a wizard.\nPremises:\n∀x (Yell(x) → ¬Cool(x)) ::: If someone yells, then they are not cool.\n∀x (Angry(x) → Yell(x)) ::: If someone is angry, then they yell.\n∀x (Fly(x) → Cool(x)) ::: If someone flies, then they are cool.\n∀x (KnowMagic(x) → Fly(x)) ::: Every person that knows magic can fly.\n∀x (Wizard(x) → KnowMagic(x)) ::: All wizards know magic.\n(Yell(harry) ∧ Fly(harry)) ⊕ ¬(Yell(harry) ∨ Fly(harry)) ::: Harry either yells and flies, or neither yells nor flies.\nWizard(potter) ∧ Fly(potter) ::: Potter is a wizard and flies.\nConclusion:\n¬Cool(harry) ::: Harry is not cool."
    ]
  },
  {
    "id": "FOLIO_train_212",
    "context": "If someone yells, then they are not cool. If someone is angry, then they yell. If someone flies, then they are cool. Every person that knows magic can fly. All wizards know magic. Harry either yells and flies, or neither yells nor flies. Potter is a wizard and flies.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Harry is a wizard or angry.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nYell(x) ::: x yells.\nCool(x) ::: x is cool.\nAngry(x) ::: x is angry.\nFly(x) ::: x flies.\nKnowMagic(x) ::: x knows magic.\nPerson(x) ::: x is a person.\nWizard(x) ::: x is a wizard.\nPremises:\n∀x (Yell(x) → ¬Cool(x)) ::: If someone yells, then they are not cool.\n∀x (Angry(x) → Yell(x)) ::: If someone is angry, then they yell.\n∀x (Fly(x) → Cool(x)) ::: If someone flies, then they are cool.\n∀x (KnowMagic(x) → Fly(x)) ::: Every person that knows magic can fly.\n∀x (Wizard(x) → KnowMagic(x)) ::: All wizards know magic.\n(Yell(harry) ∧ Fly(harry)) ⊕ ¬(Yell(harry) ∨ Fly(harry)) ::: Harry either yells and flies, or neither yells nor flies.\nWizard(potter) ∧ Fly(potter) ::: Potter is a wizard and flies.\nConclusion:\nWizard(harry) ∨ Angry(har"
    ]
  },
  {
    "id": "FOLIO_train_213",
    "context": "If someone yells, then they are not cool. If someone is angry, then they yell. If someone flies, then they are cool. Every person that knows magic can fly. All wizards know magic. Harry either yells and flies, or neither yells nor flies. Potter is a wizard and flies.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Harry is neither a wizard nor angry.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nYell(x) ::: x yells.\nCool(x) ::: x is cool.\nAngry(x) ::: x is angry.\nFly(x) ::: x flies.\nKnowMagic(x) ::: x knows magic.\nPerson(x) ::: x is a person.\nWizard(x) ::: x is a wizard.\nPremises:\n∀x (Yell(x) → ¬Cool(x)) ::: If someone yells, then they are not cool.\n∀x (Angry(x) → Yell(x)) ::: If someone is angry, then they yell.\n∀x (Fly(x) → Cool(x)) ::: If someone flies, then they are cool.\n∀x (KnowMagic(x) → Fly(x)) ::: Every person that knows magic can fly.\n∀x (Wizard(x) → KnowMagic(x)) ::: All wizards know magic.\n(Yell(harry) ∧ Fly(harry)) ⊕ ¬(Yell(harry) ∨ Fly(harry)) ::: Harry either yells and flies, or neither yells nor flies.\nWizard(potter) ∧ Fly(potter) ::: Potter is a wizard and flies.\nConclusion:\n¬∃x (Wizard(x) ��"
    ]
  },
  {
    "id": "FOLIO_train_214",
    "context": "Products are either produced in China or the US. All produced in China are labeled. All produced in the US are sold in the US. If labeled, then the product is cheaper. All sold in the US are sold in Walmart. All displayed on the homepage are sold in Walmart. No products returned by customers are sold in Walmart. G-910 is either displayed on the homepage or cheaper.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? G-910 is displayed on the homepage.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProducedIn(x, y) ::: x is produced in y.\nLabeled(x) ::: x is labeled.\nSoldIn(x, y) ::: x is sold in y.\nCheaper(x) ::: x is cheaper.\nSoldInWalmart(x) ::: x is sold in Walmart.\nDisplayedOnHomepage(x) ::: x is displayed on the homepage.\nReturnedByCustomer(x) ::: x is returned by customers.\nPremises:\n∀x (ProducedIn(x, china) ∨ ProducedIn(x, us)) ::: Products are either produced in China or the US.\n∀x (ProducedIn(x, china) → Labeled(x)) ::: All produced in China are labeled.\n∀x (ProducedIn(x, us) → SoldIn(x, us)) ::: All produced in the US are sold in the US.\n∀x (Labeled(x) → Cheaper(x)) ::: If labeled, then the product is cheaper.\n∀x (SoldIn(x, us) → SoldInWalmart(x)) ::: All sold in the US are sold in Walmart.\n∀x (DisplayedOnHomepage(x) → SoldInWalmart(x)) ::: All displayed on the homepage are sold in Walmart.\n∀x (ReturnedByCustomer(x) →"
    ]
  },
  {
    "id": "FOLIO_train_215",
    "context": "Products are either produced in China or the US. All produced in China are labeled. All produced in the US are sold in the US. If labeled, then the product is cheaper. All sold in the US are sold in Walmart. All displayed on the homepage are sold in Walmart. No products returned by customers are sold in Walmart. G-910 is either displayed on the homepage or cheaper.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? G-910 is not displayed on the homepage.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProducedIn(x, y) ::: x is produced in y.\nLabeled(x) ::: x is labeled.\nSoldIn(x, y) ::: x is sold in y.\nCheaper(x) ::: x is cheaper.\nDisplayedOnHomepage(x) ::: x is displayed on the homepage.\nReturnedByCustomer(x) ::: x is returned by customers.\nPremises:\n∀x (ProducedIn(x, china) ⊕ ProducedIn(x, us)) ::: Products are either produced in China or the US.\n∀x (ProducedIn(x, china) → Labeled(x)) ::: All produced in China are labeled.\n∀x (ProducedIn(x, us) → SoldIn(x, us)) ::: All produced in the US are sold in the US.\n∀x (Labeled(x) → Cheaper(x)) ::: If labeled, then the product is cheaper.\n∀x (SoldIn(x, us) → SoldIn(x, walmart)) ::: All sold in the US are sold in Walmart.\n∀x (DisplayedOnHomepage(x) → SoldIn(x, walmart)) ::: All displayed on the homepage are sold in Walmart.\n∀x (ReturnedByCustomer(x) → ¬SoldIn(x, walmart)) ::: No products returned by customers are"
    ]
  },
  {
    "id": "FOLIO_train_216",
    "context": "Products are either produced in China or the US. All produced in China are labeled. All produced in the US are sold in the US. If labeled, then the product is cheaper. All sold in the US are sold in Walmart. All displayed on the homepage are sold in Walmart. No products returned by customers are sold in Walmart. G-910 is either displayed on the homepage or cheaper.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? G-910 is a product returned by customers.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProducedIn(x, y) ::: x is produced in y.\nLabeled(x) ::: x is labeled.\nSoldIn(x, y) ::: x is sold in y.\nCheaper(x) ::: x is cheaper.\nSoldInWalmart(x) ::: x is sold in Walmart.\nDisplayedOnHomepage(x) ::: x is displayed on the homepage.\nReturnedByCustomers(x) ::: x is returned by customers.\nPremises:\n∀x (ProducedIn(x, china) ∨ ProducedIn(x, us)) ::: Products are either produced in China or the US.\n∀x (ProducedIn(x, china) → Labeled(x)) ::: All produced in China are labeled.\n∀x (ProducedIn(x, us) → SoldIn(x, us)) ::: All produced in the US are sold in the US.\n∀x (Labeled(x) → Cheaper(x)) ::: If labeled, then the product is cheaper.\n∀x (SoldIn(x, us) → SoldInWalmart(x)) ::: All sold in the US are sold in Walmart.\n∀x (DisplayedOnHomepage(x) → SoldInWalmart(x)) ::: All displayed on the homepage are sold in Walmart.\n∀x (ReturnedByCustomers(x"
    ]
  },
  {
    "id": "FOLIO_train_217",
    "context": "Products are either produced in China or the US. All produced in China are labeled. All produced in the US are sold in the US. If labeled, then the product is cheaper. All sold in the US are sold in Walmart. All displayed on the homepage are sold in Walmart. No products returned by customers are sold in Walmart. G-910 is either displayed on the homepage or cheaper.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? G-910 is a product returned by customers or sold in Walmart.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProducedIn(x, y) ::: x is produced in y.\nLabeled(x) ::: x is labeled.\nSoldIn(x, y) ::: x is sold in y.\nCheaper(x) ::: x is cheaper.\nDisplayedOnHomepage(x) ::: x is displayed on the homepage.\nReturnedByCustomers(x) ::: x is returned by customers.\nPremises:\n∀x (ProducedIn(x, china) ⊕ ProducedIn(x, us)) ::: Products are either produced in China or the US.\n∀x (ProducedIn(x, china) → Labeled(x)) ::: All produced in China are labeled.\n∀x (ProducedIn(x, us) → SoldIn(x, us)) ::: All produced in the US are sold in the US.\n∀x (Labeled(x) → Cheaper(x)) ::: If labeled, then the product is cheaper.\n∀x (SoldIn(x, us) → SoldIn(x, walmart)) ::: All sold in the US are sold in Walmart.\n∀x (DisplayedOnHomepage(x) → SoldIn(x, walmart)) ::: All displayed on the homepage are sold in Walmart.\n∀x (ReturnedByCustomers(x) → ¬SoldIn(x, walmart)) ::: No products returned by"
    ]
  },
  {
    "id": "FOLIO_train_218",
    "context": "Products are either produced in China or the US. All produced in China are labeled. All produced in the US are sold in the US. If labeled, then the product is cheaper. All sold in the US are sold in Walmart. All displayed on the homepage are sold in Walmart. No products returned by customers are sold in Walmart. G-910 is either displayed on the homepage or cheaper.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? G-910 is either returned by customers or sold in Walmart.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProducedIn(x, y) ::: x is produced in y.\nLabeled(x) ::: x is labeled.\nSoldIn(x, y) ::: x is sold in y.\nCheaper(x) ::: x is cheaper.\nDisplayedOnHomepage(x) ::: x is displayed on the homepage.\nReturnedByCustomers(x) ::: x is returned by customers.\nPremises:\n∀x (ProducedIn(x, china) ⊕ ProducedIn(x, us)) ::: Products are either produced in China or the US.\n∀x (ProducedIn(x, china) → Labeled(x)) ::: All produced in China are labeled.\n∀x (ProducedIn(x, us) → SoldIn(x, us)) ::: All produced in the US are sold in the US.\n∀x (Labeled(x) → Cheaper(x)) ::: If labeled, then the product is cheaper.\n∀x (SoldIn(x, us) → SoldIn(x, walmart)) ::: All sold in the US are sold in Walmart.\n∀x (DisplayedOnHomepage(x) → SoldIn(x, walmart)) ::: All displayed on the homepage are sold in Walmart.\n∀x (ReturnedByCustomers(x) → ¬SoldIn(x, walmart)) ::: No products returned by"
    ]
  },
  {
    "id": "FOLIO_train_219",
    "context": "People either order a lot of Amazon packages or are environmentally conscious. If people order a lot of Amazon packages, then they get a lot of daily mail delivered. If people are environmentally conscious, then they have solar panels in their homes. If people get a lot of daily mail delivered, then they are very involved with their neighborhood. If people have solar panels in their homes, then they save a lot of money. If Marcy either gets a lot of mail and is very involved with her neighborhood or if she does not order a lot of Amazon packages nor is very involved with her neighborhood, then Marcy does not both get a lot of daily mail and order a lot of Amazon packages.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Marcy either orders a lot of Amazon packages or saves a lot of money.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nOrder(x) ::: x orders a lot of Amazon packages.\nEnvironmental(x) ::: x is environmentally conscious.\nMail(x) ::: x gets a lot of daily mail delivered.\nInvolved(x) ::: x is very involved with her neighborhood.\nSolar(x) ::: x has solar panels in her home.\nSave(x) ::: x saves a lot of money.\nPremises:\n∀x (Order(x) ⊕ Environmental(x)) ::: People either order a lot of Amazon packages or are environmentally conscious.\n∀x (Order(x) → Mail(x)) ::: If people order a lot of Amazon packages, then they get a lot of daily mail delivered.\n∀x (Environmental(x) → Solar(x)) ::: If people are environmentally conscious, then they have solar panels in their homes.\n∀x (Mail(x) → Involved(x)) ::: If people get a lot of daily mail delivered, then they are very involved with their neighborhood.\n∀x (Solar(x) → Save(x)) ::: If people have solar panels in their homes, then they save a lot of money.\n(Mail(marcy) ∧ Involved(marcy)) ⊕ ¬(Order(marcy) ∨ Involved(marcy)) ::: If Marcy either gets a lot of mail and is very involved with her neighborhood or if she"
    ]
  },
  {
    "id": "FOLIO_train_220",
    "context": "People either order a lot of Amazon packages or are environmentally conscious. If people order a lot of Amazon packages, then they get a lot of daily mail delivered. If people are environmentally conscious, then they have solar panels in their homes. If people get a lot of daily mail delivered, then they are very involved with their neighborhood. If people have solar panels in their homes, then they save a lot of money. If Marcy either gets a lot of mail and is very involved with her neighborhood or if she does not order a lot of Amazon packages nor is very involved with her neighborhood, then Marcy does not both get a lot of daily mail and order a lot of Amazon packages.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Marcy is not a person who orders a lot of Amazon packages and is very environmentally conscious, then Taylor is not someone who saves a lot of money and is environmentally conscious.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nOrder(x) ::: x orders a lot of Amazon packages.\nEnvironmentallyConscious(x) ::: x is environmentally conscious.\nMail(x) ::: x gets a lot of daily mail delivered.\nInvolved(x) ::: x is very involved with their neighborhood.\nSolar(x) ::: x has solar panels in their homes.\nSave(x) ::: x saves a lot of money.\nPremises:\n∀x (Order(x) ⊕ EnvironmentallyConscious(x)) ::: People either order a lot of Amazon packages or are environmentally conscious.\n∀x (Order(x) → Mail(x)) ::: If people order a lot of Amazon packages, then they get a lot of daily mail delivered.\n∀x (EnvironmentallyConscious(x) → Solar(x)) ::: If people are environmentally conscious, then they have solar panels in their homes.\n∀x (Mail(x) → Involved(x)) ::: If people get a lot of daily mail delivered, then they are very involved with their neighborhood.\n∀x (Solar(x) → Save(x)) ::: If people have solar panels in their homes, then they save a lot of money.\n(Order(marcy) ⊕ Involved(marcy)) ⊕ ¬(Order(marcy) ∨ Involved(marcy)) ::: If Marcy either gets a lot of mail and is very involved with her neighborhood or if she does not order a lot of Amazon packages nor is very involved with her neighborhood, then Marcy does not both get a lot of daily mail and order a lot of Amazon packages.\nConclusion:\n¬∃x (Order(x) ∧ ¬EnvironmentallyConscious(x) → Save(x) ∧ EnvironmentallyConscious(x)) ::: If Marcy is not a person who orders a lot of Amazon packages and is very environmentally conscious, then Taylor is not someone who saves a lot of money and is environmentally conscious.\n------"
    ]
  },
  {
    "id": "FOLIO_train_221",
    "context": "Indonesia is a country. In Indonesia, the prosecutor only personally investigates cases of some special crimes. Corruption is a type of crime. Once the police complete investigations of a crime, they hand the evidence to the prosecutor. Evidence can be either satisfactory or unsatisfactory. If the police hand the evidence to the prosecutor and the evidence is satisfactory, the prosecutor will prosecute the offender in an appropriate court.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? When the police complete investigations, the prosecutor will prosecute the offender at an appropriate court.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCountry(x) ::: x is a country.\nProsecutor(x) ::: x is a prosecutor.\nPersonallyInvestigate(x, y) ::: x personally investigates cases of y.\nCrime(x) ::: x is a crime.\nCorruption(x) ::: x is a type of corruption.\nCompleteInvestigations(x) ::: x completes investigations.\nHand(x, y, z) ::: x hands y to z.\nEvidence(x) ::: x is evidence.\nSatisfactory(x) ::: x is satisfactory.\nUnsatisfactory(x) ::: x is unsatisfactory.\nProsecute(x, y) ::: x prosecutes y.\nCourt(x) ::: x is a court.\nAppropriate(x, y) ::: x is an appropriate y.\nPremises:\nCountry(indonesia) ::: Indonesia is a country.\n∀x (Prosecutor(x) → PersonallyInvestigate(x, specialCrime)) ::: In Indonesia, the prosecutor only personally investigates cases of some special crimes.\nCorruption(corruption) ::: Corruption is a type of crime.\n∀x (CompleteInvestigations(x) → Hand(x, evidence, prosecutor)) ::: Once the police complete investigations of a crime, they hand the evidence to the prosecutor.\n∀x (Evidence(x) → (Satisfactory(x) ⊕ Unsatisfactory(x))) ::: Evidence can be either satisfactory or unsatisfactory.\n∀x (Hand(x, evidence, prosecutor) ∧ Satisfactory(evidence) → Prosecute(prosecutor, offender)) ::: If the police hand the evidence to the prosecutor and the evidence is satisfactory, the prosecutor will prosecute the offender in an appropriate court.\nConclusion:\n∀x (CompleteInvestigations(x) → Prosecute(prosecutor"
    ]
  },
  {
    "id": "FOLIO_train_222",
    "context": "Indonesia is a country. In Indonesia, the prosecutor only personally investigates cases of some special crimes. Corruption is a type of crime. Once the police complete investigations of a crime, they hand the evidence to the prosecutor. Evidence can be either satisfactory or unsatisfactory. If the police hand the evidence to the prosecutor and the evidence is satisfactory, the prosecutor will prosecute the offender in an appropriate court.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? In Indonesia, the prosecutor personally investigates cases of corruption.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCountry(x) ::: x is a country.\nProsecutor(x) ::: x is a prosecutor.\nPersonallyInvestigate(x, y) ::: x personally investigates cases of y.\nCrime(x) ::: x is a crime.\nCorruption(x) ::: x is a corruption.\nPolice(x) ::: x is a police.\nCompleteInvestigations(x) ::: x completes investigations of a crime.\nHand(x, y, z) ::: x hands y to z.\nEvidence(x) ::: x is evidence.\nSatisfactory(x) ::: x is satisfactory.\nUnsatisfactory(x) ::: x is unsatisfactory.\nProsecute(x, y) ::: x prosecutes y in an appropriate court.\nPremises:\nCountry(indonesia) ::: Indonesia is a country.\n∀x (Prosecutor(x) → PersonallyInvestigate(x, corruption)) ::: In Indonesia, the prosecutor only personally investigates cases of some special crimes.\nCorruption(corruption) ::: Corruption is a type of crime.\n∀x (Police(x) → CompleteInvestigations(x)) ::: Once the police complete investigations of a crime, they hand the evidence to the prosecutor.\n∀x (Evidence(x) → (Satisfactory(x) ⊕ Unsatisfactory(x))) ::: Evidence can be either satisfactory or unsatisfactory.\n∀x ∀y ∀z (Police(x) ∧ CompleteInvestigations(x) ∧ Evidence(y) ∧ Satisfactory(y) ∧ Hand(x, y, z) → Prosecute(z, x)) ::: If the police hand the evidence to the prosecutor and the evidence is satisfactory, the prosecutor will prosecute the offender in an appropriate court.\nConclusion:\nPersonallyInvest"
    ]
  },
  {
    "id": "FOLIO_train_223",
    "context": "Indonesia is a country. In Indonesia, the prosecutor only personally investigates cases of some special crimes. Corruption is a type of crime. Once the police complete investigations of a crime, they hand the evidence to the prosecutor. Evidence can be either satisfactory or unsatisfactory. If the police hand the evidence to the prosecutor and the evidence is satisfactory, the prosecutor will prosecute the offender in an appropriate court.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? When the police complete investigations, the prosecutor investigates in personally.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCountry(x) ::: x is a country.\nProsecutor(x) ::: x is a prosecutor.\nPersonallyInvestigate(x, y) ::: x personally investigates y.\nCrime(x) ::: x is a crime.\nCorruption(x) ::: x is a corruption.\nCompleteInvestigations(x) ::: x completes investigations.\nHand(x, y, z) ::: x hands y to z.\nEvidence(x) ::: x is evidence.\nSatisfactory(x) ::: x is satisfactory.\nUnsatisfactory(x) ::: x is unsatisfactory.\nProsecute(x, y) ::: x prosecutes y.\nAppropriateCourt(x) ::: x is an appropriate court.\nPremises:\nCountry(indonesia) ::: Indonesia is a country.\n∀x (Prosecutor(x) → PersonallyInvestigate(x, y)) ::: In Indonesia, the prosecutor only personally investigates cases of some special crimes.\nCorruption(corruption) ::: Corruption is a type of crime.\n∀x (CompleteInvestigations(x) → Hand(x, evidence, prosecutor)) ::: Once the police complete investigations of a crime, they hand the evidence to the prosecutor.\n∀x (Evidence(x) → (Satisfactory(x) ⊕ Unsatisfactory(x))) ::: Evidence can be either satisfactory or unsatisfactory.\n∀x (Hand(x, evidence, prosecutor) ∧ Satisfactory(evidence) → Prosecute(prosecutor, offender)) ::: If the police hand the evidence to the prosecutor and the evidence is satisfactory, the prosecutor will prosecute the offender in an appropriate court.\nConclusion:\n∀x (CompleteInvestigations(x) → PersonallyInvestigate(prosecutor, x)) ::: When the police complete investigations, the prosecutor investigates"
    ]
  },
  {
    "id": "FOLIO_train_224",
    "context": "No watch that is battery-powered is automatic. All digital watches are battery-powered. Some mechanical watches are automatic. All smart watches are digital. Moonwatch is not a digital watch or an automatic.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Moonwatch is a mechanical watch.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nWatch(x) ::: x is a watch.\nBatteryPowered(x) ::: x is battery-powered.\nAutomatic(x) ::: x is automatic.\nDigital(x) ::: x is digital.\nMechanical(x) ::: x is mechanical.\nSmart(x) ::: x is a smart watch.\nPremises:\n∀x (BatteryPowered(x) → ¬Automatic(x)) ::: No watch that is battery-powered is automatic.\n∀x (Digital(x) → BatteryPowered(x)) ::: All digital watches are battery-powered.\n∃x (Mechanical(x) ∧ Automatic(x)) ::: Some mechanical watches are automatic.\n∀x (Smart(x) → Digital(x)) ::: All smart watches are digital.\n¬(Digital(moonwatch) ∨ Automatic(moonwatch)) ::: Moonwatch is not a digital watch or an automatic.\nConclusion:\nMechanical(moonwatch) ::: Moonwatch is a mechanical watch.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person"
    ]
  },
  {
    "id": "FOLIO_train_225",
    "context": "No watch that is battery-powered is automatic. All digital watches are battery-powered. Some mechanical watches are automatic. All smart watches are digital. Moonwatch is not a digital watch or an automatic.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Moonwatch is a smartwatch and a mechanical watch.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nWatch(x) ::: x is a watch.\nBatteryPowered(x) ::: x is battery-powered.\nAutomatic(x) ::: x is automatic.\nDigital(x) ::: x is digital.\nMechanical(x) ::: x is mechanical.\nSmart(x) ::: x is a smart watch.\nPremises:\n∀x (BatteryPowered(x) → ¬Automatic(x)) ::: No watch that is battery-powered is automatic.\n∀x (Digital(x) → BatteryPowered(x)) ::: All digital watches are battery-powered.\n∃x (Mechanical(x) ∧ Automatic(x)) ::: Some mechanical watches are automatic.\n∀x (Smart(x) → Digital(x)) ::: All smart watches are digital.\n¬(Digital(moonwatch) ∨ Automatic(moonwatch)) ::: Moonwatch is not a digital watch or an automatic.\nConclusion:\nSmart(moonwatch) ∧ Mechanical(moonwatch) ::: Moonwatch is a smartwatch and a mechanical watch.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement"
    ]
  },
  {
    "id": "FOLIO_train_226",
    "context": "No watch that is battery-powered is automatic. All digital watches are battery-powered. Some mechanical watches are automatic. All smart watches are digital. Moonwatch is not a digital watch or an automatic.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Moonwatch is a smartwatch and a mechanical watch, then Moonwatch is not a mechanical watch.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nWatch(x) ::: x is a watch.\nBatteryPowered(x) ::: x is battery-powered.\nAutomatic(x) ::: x is automatic.\nDigital(x) ::: x is digital.\nMechanical(x) ::: x is mechanical.\nSmart(x) ::: x is a smart watch.\nPremises:\n∀x (BatteryPowered(x) → ¬Automatic(x)) ::: No watch that is battery-powered is automatic.\n∀x (Digital(x) → BatteryPowered(x)) ::: All digital watches are battery-powered.\n∃x (Mechanical(x) ∧ Automatic(x)) ::: Some mechanical watches are automatic.\n∀x (Smart(x) → Digital(x)) ::: All smart watches are digital.\n¬(Digital(moonwatch) ∨ Automatic(moonwatch)) ::: Moonwatch is not a digital watch or an automatic.\nConclusion:\n(Smart(moonwatch) ∧ Mechanical(moonwatch)) → ¬Mechanical(moonwatch) ::: If Moonwatch is a smartwatch and a mechanical watch, then Moonwatch is not a mechanical watch.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or"
    ]
  },
  {
    "id": "FOLIO_train_227",
    "context": "No watch that is battery-powered is automatic. All digital watches are battery-powered. Some mechanical watches are automatic. All smart watches are digital. Moonwatch is not a digital watch or an automatic.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Moonwatch is a mechanical or battery-powered watch, then Moonwatch is not a smartwatch.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nWatch(x) ::: x is a watch.\nBatteryPowered(x) ::: x is battery-powered.\nAutomatic(x) ::: x is automatic.\nDigital(x) ::: x is digital.\nMechanical(x) ::: x is mechanical.\nSmart(x) ::: x is a smart watch.\nPremises:\n∀x (BatteryPowered(x) → ¬Automatic(x)) ::: No watch that is battery-powered is automatic.\n∀x (Digital(x) → BatteryPowered(x)) ::: All digital watches are battery-powered.\n∃x (Mechanical(x) ∧ Automatic(x)) ::: Some mechanical watches are automatic.\n∀x (Smart(x) → Digital(x)) ::: All smart watches are digital.\n¬(Digital(moonwatch) ∨ Automatic(moonwatch)) ::: Moonwatch is not a digital watch or an automatic.\nConclusion:\n(Mechanical(moonwatch) ∨ BatteryPowered(moonwatch)) → ¬Smart(moonwatch) ::: If Moonwatch is a mechanical or battery-powered watch, then Moonwatch is not a smartwatch.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffe"
    ]
  },
  {
    "id": "FOLIO_train_228",
    "context": "If a person can distinguish the taste of different condiments, then he/she can also use different condiments to cook. People who have the talent of cooking can distinguish the taste of different condiments. Only people with the talent of cooking can make delicious meals. If the meal is popular at the party, then it is delicious. John can make meals which are popular at the party.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? John cannot use different condiments to cook.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDistinguish(x) ::: x can distinguish the taste of different condiments.\nUse(x) ::: x can use different condiments to cook.\nTalent(x) ::: x has the talent of cooking.\nMeal(x) ::: x is a meal.\nPopular(x) ::: x is popular at the party.\nDelicious(x) ::: x is delicious.\nPremises:\n∀x (Distinguish(x) → Use(x)) ::: If a person can distinguish the taste of different condiments, then he/she can also use different condiments to cook.\n∀x (Talent(x) → Distinguish(x)) ::: People who have the talent of cooking can distinguish the taste of different condiments.\n∀x (Talent(x) → Use(x)) ::: Only people with the talent of cooking can make delicious meals.\n∀x (Popular(x) → Delicious(x)) ::: If the meal is popular at the party, then it is delicious.\nUse(john) ::: John can make meals which are popular at the party.\nConclusion:\n¬Use(john) ::: John cannot use different condiments to cook.\n------\nProblem:\nIf a person is a student, then he/she is a person who can learn. If a person is a person who can learn, then he/she is a person who can think. If a person is a person who can think, then he/she is a person who can learn. If a person is a person who can learn, then he/she is a person who can think. If a person is a person who can think, then he/she is a person who can learn. If a person is a person who can learn, then he/she is a person who can think. If a person is a person who can think, then he/she is a person who can learn. If a person is a person who can learn, then he/she is a person who can think. If a person is a person who can think, then"
    ]
  },
  {
    "id": "FOLIO_train_229",
    "context": "Effective monetary policy is possible with successful inflation control and a strong national currency. A country cannot simultaneously regulate the exchange rate and successfully control inflation. The introduction of an embargo on foreign trade goods in a country leads to a sharp decrease in exports. If exports fall sharply, the national currency cannot be in this country. Regulation of the exchange rate is required to have a strong national currency. There is an embargo on Russian foreign trade goods.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? In Russia, an effective monetary policy is possible.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEffectiveMonetaryPolicy(x) ::: x has an effective monetary policy.\nSuccessfulInflationControl(x) ::: x has successful inflation control.\nStrongNationalCurrency(x) ::: x has a strong national currency.\nRegulateExchangeRate(x) ::: x regulates the exchange rate.\nEmbargo(x) ::: x has an embargo on foreign trade goods.\nSharpDecrease(x) ::: x has a sharp decrease.\nExports(x) ::: x has exports.\nNationalCurrency(x) ::: x has a national currency.\nPremises:\nEffectiveMonetaryPolicy(x) ↔ SuccessfulInflationControl(x) ∧ StrongNationalCurrency(x) ::: Effective monetary policy is possible with successful inflation control and a strong national currency.\n¬∃x (RegulateExchangeRate(x) ∧ SuccessfulInflationControl(x)) ::: A country cannot simultaneously regulate the exchange rate and successfully control inflation.\nEmbargo(russia) ∧ SharpDecrease(exports) ::: The introduction of an embargo on foreign trade goods in a country leads to a sharp decrease in exports.\n∀x (SharpDecrease(exports) → ¬NationalCurrency(x)) ::: If exports fall sharply, the national currency cannot be in this country.\nRegulateExchangeRate(x) → StrongNationalCurrency(x) ::: Regulation of the exchange rate is required to have a strong national currency.\nEmbargo(russia) ::: There is an embargo on Russian foreign trade goods.\nConclusion:\nEffectiveMonetaryPolicy(russia) ::: In Russia, an effective monetary policy is possible.\n------\nProblem:\nThe number of people who have a driver's license is greater than the number of people who have a car. The number of people who have a car is greater than the number of people who have a driver's license.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The number of"
    ]
  },
  {
    "id": "FOLIO_train_230",
    "context": "Video Gag is a French television series that airs weekly. Video Gag airs on the French broadcast channel TF1. If viewers send in funny videos to the French broadcast channel, then Video Gag airs them on television. All videos aired on Video Gag are in French.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Viewers send in funny videos to the French broadcast channel that are in French.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nVideoGag(x) ::: x is Video Gag.\nAir(x, y) ::: x airs on y.\nViewer(x) ::: x is a viewer.\nSend(x, y) ::: x sends in y.\nFunny(x) ::: x is funny.\nVideo(x) ::: x is a video.\nFrench(x) ::: x is in French.\nPremises:\n∀x (Viewer(x) → Send(x, funnyVideo)) → Air(VideoGag, funnyVideo) ::: If viewers send in funny videos to the French broadcast channel, then Video Gag airs them on television.\nAir(VideoGag, x) → French(x) ::: All videos aired on Video Gag are in French.\nAir(VideoGag, x) ∧ VideoGag(x) ::: Video Gag airs on the French broadcast channel TF1.\nConclusion:\n∀x (Viewer(x) → Send(x, funnyVideo)) ∧ French(funnyVideo) ::: Viewers send in funny videos to the French broadcast channel that are in French.\n------"
    ]
  },
  {
    "id": "FOLIO_train_231",
    "context": "Video Gag is a French television series that airs weekly. Video Gag airs on the French broadcast channel TF1. If viewers send in funny videos to the French broadcast channel, then Video Gag airs them on television. All videos aired on Video Gag are in French.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Viewers send in funny videos to the French broadcast channel that are in English.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAir(x, y) ::: x airs y.\nViewer(x) ::: x is a viewer.\nSend(x, y, z) ::: x sends y to z.\nFunny(x) ::: x is funny.\nVideo(x) ::: x is a video.\nIn(x, y) ::: x is in y.\nFrench(x) ::: x is in French.\nPremises:\n∀x (Viewer(x) → Send(x, funnyVideo, frenchBroadcastChannel)) → Air(videoGag, funnyVideo) ::: If viewers send in funny videos to the French broadcast channel, then Video Gag airs them on television.\nAir(videoGag, x) → In(x, french) ::: All videos aired on Video Gag are in French.\nAir(videoGag, x) ::: Video Gag airs on the French broadcast channel TF1.\nConclusion:\n∃x (Viewer(x) ∧ Send(x, funnyVideo, frenchBroadcastChannel) ∧ In(funnyVideo, english)) ::: Viewers send in funny videos"
    ]
  },
  {
    "id": "FOLIO_train_232",
    "context": "All phones are things. All cellphones are phones. All iPhones are cellphones. All engineers are workers. All workers are human. Jack is either an engineer or a worker. Jack is is either a human or a phone.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jack is a thing.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPhone(x) ::: x is a phone.\nCellphone(x) ::: x is a cellphone.\niPhone(x) ::: x is an iPhone.\nEngineer(x) ::: x is an engineer.\nWorker(x) ::: x is a worker.\nHuman(x) ::: x is a human.\nThing(x) ::: x is a thing.\nPremises:\n∀x (Phone(x) → Thing(x)) ::: All phones are things.\n∀x (Cellphone(x) → Phone(x)) ::: All cellphones are phones.\n∀x (iPhone(x) → Cellphone(x)) ::: All iPhones are cellphones.\n∀x (Engineer(x) → Worker(x)) ::: All engineers are workers.\n∀x (Worker(x) → Human(x)) ::: All workers are human.\n(Engineer(jack) ∨ Worker(jack)) ∧ (Human(jack) ∨ Phone(jack)) ::: Jack is either an engineer or a worker. Jack is is either a human or a"
    ]
  },
  {
    "id": "FOLIO_train_233",
    "context": "All phones are things. All cellphones are phones. All iPhones are cellphones. All engineers are workers. All workers are human. Jack is either an engineer or a worker. Jack is is either a human or a phone.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jack is not a thing.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPhone(x) ::: x is a phone.\nCellphone(x) ::: x is a cellphone.\niPhone(x) ::: x is an iPhone.\nEngineer(x) ::: x is an engineer.\nWorker(x) ::: x is a worker.\nHuman(x) ::: x is a human.\nThing(x) ::: x is a thing.\nPremises:\n∀x (Phone(x) → Thing(x)) ::: All phones are things.\n∀x (Cellphone(x) → Phone(x)) ::: All cellphones are phones.\n∀x (iPhone(x) → Cellphone(x)) ::: All iPhones are cellphones.\n∀x (Engineer(x) → Worker(x)) ::: All engineers are workers.\n∀x (Worker(x) → Human(x)) ::: All workers are human.\n(Engineer(jack) ∨ Worker(jack)) ∧ (Human(jack) ∨ Phone(jack)) ::: Jack is either an engineer or a worker. Jack is is either a human or a"
    ]
  },
  {
    "id": "FOLIO_train_234",
    "context": "All phones are things. All cellphones are phones. All iPhones are cellphones. All engineers are workers. All workers are human. Jack is either an engineer or a worker. Jack is is either a human or a phone.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jack is a thing and an iPhone.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPhone(x) ::: x is a phone.\nCellphone(x) ::: x is a cellphone.\niPhone(x) ::: x is an iPhone.\nEngineer(x) ::: x is an engineer.\nWorker(x) ::: x is a worker.\nHuman(x) ::: x is a human.\nThing(x) ::: x is a thing.\nPremises:\n∀x (Phone(x) → Thing(x)) ::: All phones are things.\n∀x (Cellphone(x) → Phone(x)) ::: All cellphones are phones.\n∀x (iPhone(x) → Cellphone(x)) ::: All iPhones are cellphones.\n∀x (Engineer(x) → Worker(x)) ::: All engineers are workers.\n∀x (Worker(x) → Human(x)) ::: All workers are human.\n(Engineer(jack) ∨ Worker(jack)) ∧ (Human(jack) ∨ Phone(jack)) ::: Jack is either an engineer or a worker. Jack is is either a human or a"
    ]
  },
  {
    "id": "FOLIO_train_235",
    "context": "All phones are things. All cellphones are phones. All iPhones are cellphones. All engineers are workers. All workers are human. Jack is either an engineer or a worker. Jack is is either a human or a phone.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jack is not both a thing and an iPhone.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPhone(x) ::: x is a phone.\nCellphone(x) ::: x is a cellphone.\niPhone(x) ::: x is an iPhone.\nEngineer(x) ::: x is an engineer.\nWorker(x) ::: x is a worker.\nHuman(x) ::: x is a human.\nThing(x) ::: x is a thing.\nPremises:\n∀x (Phone(x) → Thing(x)) ::: All phones are things.\n∀x (Cellphone(x) → Phone(x)) ::: All cellphones are phones.\n∀x (iPhone(x) → Cellphone(x)) ::: All iPhones are cellphones.\n∀x (Engineer(x) → Worker(x)) ::: All engineers are workers.\n∀x (Worker(x) → Human(x)) ::: All workers are human.\nEngineer(jack) ⊕ Worker(jack) ::: Jack is either an engineer or a worker.\nHuman(jack) ⊕ Phone(jack) ::: Jack is is either a human or a phone."
    ]
  },
  {
    "id": "FOLIO_train_236",
    "context": "All iPhones are electronic. Some phones are iPhones.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? No phones are electronic.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPhone(x) ::: x is a phone.\niPhone(x) ::: x is an iPhone.\nElectronic(x) ::: x is electronic.\nPremises:\n∀x (iPhone(x) → Electronic(x)) ::: All iPhones are electronic.\n∃x (Phone(x) ∧ iPhone(x)) ::: Some phones are iPhones.\nConclusion:\n¬∃x (Phone(x) ∧ Electronic(x)) ::: No phones are electronic.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased"
    ]
  },
  {
    "id": "FOLIO_train_237",
    "context": "Metropolitan Museum of Art is a museum in NYC. Whitney Museum of American Art is a museum in NYC. Museum of Modern Art (MoMA) is a museum if NYC. Metropolitan Museum of Art includes Bytantine and Islamic Art. Whitney Museum of American Art includes American art.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A museum in NYC includes Byzantine and Islamic Art.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMetropolitanMuseumOfArt(x) ::: x is the Metropolitan Museum of Art.\nWhitneyMuseumOfAmericanArt(x) ::: x is the Whitney Museum of American Art.\nMuseumOfModernArt(x) ::: x is the Museum of Modern Art (MoMA).\nMuseum(x) ::: x is a museum.\nNYC(x) ::: x is in NYC.\nByzantineAndIslamicArt(x) ::: x includes Byzantine and Islamic Art.\nAmericanArt(x) ::: x includes American art.\nPremises:\nMetropolitanMuseumOfArt(metropolitanMuseumOfArt) ∧ WhitneyMuseumOfAmericanArt(whitneyMuseumOfAmericanArt) ∧ MuseumOfModernArt(museumOfModernArt) ::: Metropolitan Museum of Art is a museum in NYC. Whitney Museum of American Art is a museum in NYC. Museum of Modern Art (MoMA) is a museum if NYC.\nMetropolitanMuseumOfArt(metropolitanMuseumOfArt) ∧ ByzantineAndIslamicArt(metropolitanMuseumOfArt) :::"
    ]
  },
  {
    "id": "FOLIO_train_238",
    "context": "Metropolitan Museum of Art is a museum in NYC. Whitney Museum of American Art is a museum in NYC. Museum of Modern Art (MoMA) is a museum if NYC. Metropolitan Museum of Art includes Bytantine and Islamic Art. Whitney Museum of American Art includes American art.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A museum in NYC includes American art.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMuseum(x) ::: x is a museum.\nNYC(x) ::: x is in NYC.\nMetropolitanMuseumOfArt(x) ::: x is the Metropolitan Museum of Art.\nWhitneyMuseumOfAmericanArt(x) ::: x is the Whitney Museum of American Art.\nMuseumOfModernArt(x) ::: x is the Museum of Modern Art.\nBytantineAndIslamicArt(x) ::: x is Bytantine and Islamic Art.\nAmericanArt(x) ::: x is American art.\nPremises:\nMetropolitanMuseumOfArt(metropolitanMuseumOfArt) ∧ NYC(metropolitanMuseumOfArt) ∧ BytantineAndIslamicArt(metropolitanMuseumOfArt) ::: Metropolitan Museum of Art is a museum in NYC.\nWhitneyMuseumOfAmericanArt(whitneyMuseumOfAmericanArt) ∧ NYC(whitneyMuseumOfAmericanArt) ∧ AmericanArt(whitneyMuseumOfAmericanArt) ::: Whitney Museum of American Art is a museum in NYC.\nMuseumOfModern"
    ]
  },
  {
    "id": "FOLIO_train_239",
    "context": "Metropolitan Museum of Art is a museum in NYC. Whitney Museum of American Art is a museum in NYC. Museum of Modern Art (MoMA) is a museum if NYC. Metropolitan Museum of Art includes Bytantine and Islamic Art. Whitney Museum of American Art includes American art.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A museum in NYC includes Greek art.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMetropolitanMuseumOfArt(x) ::: x is the Metropolitan Museum of Art.\nWhitneyMuseumOfAmericanArt(x) ::: x is the Whitney Museum of American Art.\nMuseumOfModernArt(x) ::: x is the Museum of Modern Art.\nNYC(x) ::: x is in NYC.\nIncludes(x, y) ::: x includes y.\nByzantine(x) ::: x is Byzantine art.\nIslamic(x) ::: x is Islamic art.\nAmerican(x) ::: x is American art.\nGreek(x) ::: x is Greek art.\nPremises:\nMetropolitanMuseumOfArt(metropolitanMuseumOfArt) ∧ NYC(metropolitanMuseumOfArt) ∧ Includes(metropolitanMuseumOfArt, byzantine) ∧ Includes(metropolitanMuseumOfArt, islamic) ::: Metropolitan Museum of Art is a museum in NYC. It includes Byzantine and Islamic art.\nWhitneyMuseumOfAmericanArt(whitneyMuseumOfAmericanArt) ∧ NYC("
    ]
  },
  {
    "id": "FOLIO_train_240",
    "context": "A person either likes eating cheese or is a francophile. No francophiles are people who like Spain as their favorite country. A person likes Spain as their favorite country or likes eating cheese. Benji is not a person who likes eating cheese and a person who studies Spanish. If Benji is neither a person who studies Spanish nor a person that studies French, then Benji is a person who studies Spanish or a person that studies French.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Benji is a person who likes eating cheese.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLikes(x, y) ::: x likes y.\nFrancophile(x) ::: x is a francophile.\nStudy(x, y) ::: x studies y.\nSpanish(x) ::: x is Spanish.\nCheese(x) ::: x is cheese.\nPremises:\n∀x (Likes(x, cheese) ⊕ Francophile(x)) ::: A person either likes eating cheese or is a francophile.\n∀x (Francophile(x) → ¬Likes(x, spanish)) ::: No francophiles are people who like Spain as their favorite country.\nLikes(x, spanish) ⊕ Likes(x, cheese) ::: A person likes Spain as their favorite country or likes eating cheese.\n¬(Likes(benji, cheese) ∧ Study(benji, spanish)) ∧ ¬(Study(benji, french) ∨ Study(benji, spanish)) ::: Benji is not a person who likes eating cheese and a person who studies Spanish.\n¬(Study(benji, french) ∨ Study(benji, spanish)) → (Study(benji, french) ∨ Study(benji, spanish)) ::: If Benji is neither a person who studies Spanish nor a person that studies French, then Benji is a person who studies Spanish or a person that studies French.\nConclusion:\nLikes(benji, cheese) ::: Benji is a person who likes eating cheese.\n------"
    ]
  },
  {
    "id": "FOLIO_train_241",
    "context": "A person either likes eating cheese or is a francophile. No francophiles are people who like Spain as their favorite country. A person likes Spain as their favorite country or likes eating cheese. Benji is not a person who likes eating cheese and a person who studies Spanish. If Benji is neither a person who studies Spanish nor a person that studies French, then Benji is a person who studies Spanish or a person that studies French.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Benji is either a person who likes eating cheese or a francophile, then Benji is neither a person who studies Spanish nor a person who studies French.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLike(x, y) ::: x likes y.\nStudy(x, y) ::: x studies y.\nCheese(x) ::: x is cheese.\nFrancophile(x) ::: x is a francophile.\nSpain(x) ::: x is Spain.\nFavoriteCountry(x, y) ::: x is y's favorite country.\nPremises:\n∀x (Like(x, cheese) ⊕ Francophile(x)) ::: A person either likes eating cheese or is a francophile.\n∀x (Francophile(x) → ¬FavoriteCountry(x, spain)) ::: No francophiles are people who like Spain as their favorite country.\nLike(x, spain) ⊕ Like(x, cheese) ::: A person likes Spain as their favorite country or likes eating cheese.\n¬(Like(benji, cheese) ∧ Study(benji, spanish)) → (Like(benji, cheese) ∧ Study(benji, spanish)) ⊕ ¬(Study(benji, spanish) ∨ Study(benji, french)) ::: Benji is not a person who likes eating cheese and a person who studies Spanish. If Benji is neither a person who studies Spanish nor a person that studies French, then Benji is a person who studies Spanish or a person that studies French.\nConclusion:\n(Like(benji, cheese) ⊕ Francophile(benji)) → ¬(Study(benji, spanish) ��"
    ]
  },
  {
    "id": "FOLIO_train_242",
    "context": "A person either likes eating cheese or is a francophile. No francophiles are people who like Spain as their favorite country. A person likes Spain as their favorite country or likes eating cheese. Benji is not a person who likes eating cheese and a person who studies Spanish. If Benji is neither a person who studies Spanish nor a person that studies French, then Benji is a person who studies Spanish or a person that studies French.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Benji is a person who likes Spain as their favorite country or studies French, then Benji is either a person who studies Spanish or a person who likes Spain as their favorite country.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLikes(x, y) ::: x likes y.\nFrancophile(x) ::: x is a francophile.\nStudy(x, y) ::: x studies y.\nSpanish(x) ::: x is Spanish.\nCheese(x) ::: x is cheese.\nPremises:\n∀x (Likes(x, cheese) ⊕ Francophile(x)) ::: A person either likes eating cheese or is a francophile.\n∀x (Francophile(x) → ¬Likes(x, spanish)) ::: No francophiles are people who like Spain as their favorite country.\nLikes(x, spanish) ⊕ Likes(x, cheese) ::: A person likes Spain as their favorite country or likes eating cheese.\n¬(Likes(benji, cheese) ∧ Study(benji, spanish)) ∧ ¬(Study(benji, french) ∧ Study(benji, spanish)) ::: Benji is not a person who likes eating cheese and a person who studies Spanish.\n¬(Study(benji, french) ∧ Study(benji, spanish)) → (Study(benji, spanish) ∨ Study(benji, french)) ::: If Benji is neither a person who studies Spanish nor a person that studies French, then Benji is a person who studies Spanish or a person that studies French.\nConclusion:\n(Likes(benji, spanish) ∨ Study(benji, french))"
    ]
  },
  {
    "id": "FOLIO_train_243",
    "context": "Gasteren is village located in the province of Drenthe. Drenthe is a Dutch province. No cities are villages. The population of a village in Drenthe was 155 people.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Gasteren is a Dutch village.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nVillage(x) ::: x is a village.\nCity(x) ::: x is a city.\nDutch(x) ::: x is Dutch.\nPopulation(x, y) ::: x has a population of y people.\nProvince(x) ::: x is a province.\nPremises:\nVillage(gasteren) ::: Gasteren is village located in the province of Drenthe.\nDutch(drenthe) ::: Drenthe is a Dutch province.\n∀x (City(x) → ¬Village(x)) ::: No cities are villages.\nPopulation(gasteren, 155) ::: The population of a village in Drenthe was 155 people.\nConclusion:\nDutch(gasteren) ∧ Village(gasteren) ::: Gasteren is a Dutch village.\n------\nProblem:\nThe number of people who are not students is 100. The number of people who are students is 100. The number of people who are students is 100. The number of people who are not students is 100.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The number of people who are students is 100.\nBased on the above information, is the following statement true, false, or uncertain? The number of people who are not students is 100.\nBased on the above information, is the following statement true, false, or uncertain? The number of people who are students is 100.\nBased"
    ]
  },
  {
    "id": "FOLIO_train_244",
    "context": "Gasteren is village located in the province of Drenthe. Drenthe is a Dutch province. No cities are villages. The population of a village in Drenthe was 155 people.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Gasteren is a city.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCity(x) ::: x is a city.\nVillage(x) ::: x is a village.\nProvince(x) ::: x is a province.\nPopulation(x, y) ::: x has a population of y people.\nLocatedIn(x, y) ::: x is located in y.\nPremises:\nLocatedIn(gasteren, drenthe) ::: Gasteren is village located in the province of Drenthe.\nProvince(drenthe) ::: Drenthe is a Dutch province.\n∀x (City(x) → ¬Village(x)) ::: No cities are villages.\nPopulation(gasteren, 155) ::: The population of a village in Drenthe was 155 people.\nConclusion:\nCity(gasteren) ::: Gasteren is a city.\n------\nProblem:\nThe number of people who are not students is 100. The number of people who are not students is 100. The number of people who are not students is 100. The number of people who are not students is 100. The number of people who are not students is 100. The number of people who are not students is 100. The number of people who are not students is 100. The number of people who are not students is 100. The number of people who are not students is 100. The number of people who are not students is 100. The number of people who are not students is 100. The number"
    ]
  },
  {
    "id": "FOLIO_train_245",
    "context": "Gasteren is village located in the province of Drenthe. Drenthe is a Dutch province. No cities are villages. The population of a village in Drenthe was 155 people.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Gasteren has a population of 155.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGasteren(x) ::: x is Gasteren.\nDrenthe(x) ::: x is Drenthe.\nDutch(x) ::: x is Dutch.\nProvince(x) ::: x is a province.\nCity(x) ::: x is a city.\nVillage(x) ::: x is a village.\nPopulation(x, y) ::: x has a population of y.\nPremises:\nGasteren(gasteren) ∧ Drenthe(gasteren) ∧ Dutch(gasteren) ∧ Province(drenthe) ::: Gasteren is village located in the province of Drenthe. Drenthe is a Dutch province.\n∀x (City(x) → ¬Village(x)) ::: No cities are villages.\nPopulation(villageInDrenthe, 155) ::: The population of a village in Drenthe was 155 people.\nConclusion:\nPopulation(gasteren, 155) ::: Gasteren has a population of 155.\n------\nProblem:\nThe number of people who are not students is equal to the number of people who are students. The number of people who are not students is equal to the number of people who are not students.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The number of people who are not students is equal to the number of people who are students.\n###\nPredicates:\nStudent(x) ::: x is a student.\nP"
    ]
  },
  {
    "id": "FOLIO_train_246",
    "context": "The only types of mammals that lay eggs are platypuses and echidnas. Platypuses are not hyrax. Echidnas are not hyrax. No mammals are invertebrates. All animals are either vertebrates or invertebrates. Mammals are animals. Hyraxes are mammals. Grebes lay eggs. Grebes are not platypuses and also not echidnas.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Hyraxes lay eggs.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMammal(x) ::: x is a mammal.\nLayEggs(x) ::: x lays eggs.\nPlatypus(x) ::: x is a platypus.\nEchidna(x) ::: x is an echidna.\nHyrax(x) ::: x is a hyrax.\nInvertebrate(x) ::: x is an invertebrate.\nAnimal(x) ::: x is an animal.\nVertebrate(x) ::: x is a vertebrate.\nGrebe(x) ::: x is a grebe.\nPremises:\n∀x (Platypus(x) → LayEggs(x)) ::: The only types of mammals that lay eggs are platypuses and echidnas.\n∀x (Echidna(x) → LayEggs(x)) ::: The only types of mammals that lay eggs are platypuses and echidnas.\n∀x (Platypus(x) → ¬Hyrax(x)) ::: Platypuses are not hyrax.\n∀x (Echidna(x) → ¬Hyrax(x)) ::: Echidnas are not hyrax.\n∀x (Mammal(x) → ¬Invertebrate(x)) ::: No mammals are invertebrates.\n∀x (Animal(x) → (Vertebrate(x) ⊕ Inverte"
    ]
  },
  {
    "id": "FOLIO_train_247",
    "context": "The only types of mammals that lay eggs are platypuses and echidnas. Platypuses are not hyrax. Echidnas are not hyrax. No mammals are invertebrates. All animals are either vertebrates or invertebrates. Mammals are animals. Hyraxes are mammals. Grebes lay eggs. Grebes are not platypuses and also not echidnas.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Grebes are not mammals.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMammal(x) ::: x is a mammal.\nLayEggs(x) ::: x lays eggs.\nPlatypus(x) ::: x is a platypus.\nEchidna(x) ::: x is an echidna.\nHyrax(x) ::: x is a hyrax.\nInvertebrate(x) ::: x is an invertebrate.\nAnimal(x) ::: x is an animal.\nVertebrate(x) ::: x is a vertebrate.\nGrebe(x) ::: x is a grebe.\nPremises:\n∀x (LayEggs(x) → (Platypus(x) ∨ Echidna(x))) ::: The only types of mammals that lay eggs are platypuses and echidnas.\n∀x (Platypus(x) → ¬Hyrax(x)) ::: Platypuses are not hyrax.\n∀x (Echidna(x) → ¬Hyrax(x)) ::: Echidnas are not hyrax.\n∀x (Mammal(x) → ¬Invertebrate(x)) ::: No mammals are invertebrates.\n∀x (Animal(x) → (Vertebrate(x) ∨ Invertebrate(x))) ::: All animals are either vertebrates or invertebrates.\n∀x (M"
    ]
  },
  {
    "id": "FOLIO_train_248",
    "context": "The only types of mammals that lay eggs are platypuses and echidnas. Platypuses are not hyrax. Echidnas are not hyrax. No mammals are invertebrates. All animals are either vertebrates or invertebrates. Mammals are animals. Hyraxes are mammals. Grebes lay eggs. Grebes are not platypuses and also not echidnas.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Platypuses are vertebrates.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMammal(x) ::: x is a mammal.\nLayEggs(x) ::: x lays eggs.\nPlatypus(x) ::: x is a platypus.\nEchidna(x) ::: x is an echidna.\nHyrax(x) ::: x is a hyrax.\nInvertebrate(x) ::: x is an invertebrate.\nAnimal(x) ::: x is an animal.\nVertebrate(x) ::: x is a vertebrate.\nGrebe(x) ::: x is a grebe.\nPremises:\n∀x (LayEggs(x) → (Platypus(x) ∨ Echidna(x))) ::: The only types of mammals that lay eggs are platypuses and echidnas.\n¬Platypus(hyrax) ::: Platypuses are not hyrax.\n¬Echidna(hyrax) ::: Echidnas are not hyrax.\n∀x (Mammal(x) → ¬Invertebrate(x)) ::: No mammals are invertebrates.\n∀x (Animal(x) → (Vertebrate(x) ⊕ Invertebrate(x))) ::: All animals are either vertebrates or invertebrates.\nMammal(animal) ::: Mammals are animals.\nHyrax(hyrax) ::: Hyra"
    ]
  },
  {
    "id": "FOLIO_train_249",
    "context": "Bobby Flynn is a singer-songwriter. Bobby Flynn finished 7th while competing on Australian Idol. Australian Idol competitors are Australian citizens. The Omega Three band made a nationwide tour in 2007. Bobby Flynn is a member of The Omega Three band. Bobby Flynn was born in Queensland.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Bobby Flynn is an Australian citizen.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSingerSongwriter(x) ::: x is a singer-songwriter.\nCompete(x, y) ::: x competed in y.\nFinish(x, y) ::: x finished in y.\nAustralianIdolCompetitor(x) ::: x is an Australian Idol competitor.\nAustralianCitizen(x) ::: x is an Australian citizen.\nNationwideTour(x, y) ::: x made a nationwide tour in y.\nMember(x, y) ::: x is a member of y.\nBorn(x, y) ::: x was born in y.\nPremises:\nSingerSongwriter(bobbyFlynn) ::: Bobby Flynn is a singer-songwriter.\nFinish(bobbyFlynn, year2007) ::: Bobby Flynn finished 7th while competing on Australian Idol.\nAustralianIdolCompetitor(bobbyFlynn) ::: Australian Idol competitors are Australian citizens.\nNationwideTour(omegaThree, year2007) ::: The Omega Three band made a nationwide tour in 2007.\nMember(bobbyFlynn, omegaThree) ::: Bobby Flynn is a member of The Omega Three band.\nBorn(bobbyFlynn, queensland) ::: Bobby Flynn was born in Queensland.\nConclusion:\nAustralianCitizen(bobbyFlynn) ::: Bobby Flynn is an Australian citizen.\n------\nProblem:\nThe 2008 Summer Olympics were held in Beijing, China"
    ]
  },
  {
    "id": "FOLIO_train_250",
    "context": "Bobby Flynn is a singer-songwriter. Bobby Flynn finished 7th while competing on Australian Idol. Australian Idol competitors are Australian citizens. The Omega Three band made a nationwide tour in 2007. Bobby Flynn is a member of The Omega Three band. Bobby Flynn was born in Queensland.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Bobby Flynn flew to America in 2007.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSingerSongwriter(x) ::: x is a singer-songwriter.\nCompete(x, y) ::: x competed in y.\nFinish(x, y) ::: x finished in y.\nAustralianIdolCompetitor(x) ::: x is an Australian Idol competitor.\nAustralianCitizen(x) ::: x is an Australian citizen.\nNationwideTour(x, y) ::: x made a nationwide tour in y.\nMember(x, y) ::: x is a member of y.\nBorn(x, y) ::: x was born in y.\nPremises:\nSingerSongwriter(bobbyFlynn) ::: Bobby Flynn is a singer-songwriter.\nFinish(bobbyFlynn, year2007) ::: Bobby Flynn finished 7th while competing on Australian Idol.\nAustralianIdolCompetitor(bobbyFlynn) ::: Australian Idol competitors are Australian citizens.\nNationwideTour(omegaThree, year2007) ::: The Omega Three band made a nationwide tour in 2007.\nMember(bobbyFlynn, omegaThree) ::: Bobby Flynn is a member of The Omega Three band.\nBorn(bobbyFlynn, queensland) ::: Bobby Flynn was born in Queensland.\nConclusion:\nFlyTo(bobbyFlynn, america, year2007) ::: Bobby Flynn flew to America in 2007.\n------"
    ]
  },
  {
    "id": "FOLIO_train_251",
    "context": "Bobby Flynn is a singer-songwriter. Bobby Flynn finished 7th while competing on Australian Idol. Australian Idol competitors are Australian citizens. The Omega Three band made a nationwide tour in 2007. Bobby Flynn is a member of The Omega Three band. Bobby Flynn was born in Queensland.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Bobby Flynn was born in Queens.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSingerSongwriter(x) ::: x is a singer-songwriter.\nCompete(x, y) ::: x competed in y.\nFinish(x, y) ::: x finished in y.\nAustralianIdolCompetitor(x) ::: x is an Australian Idol competitor.\nAustralianCitizen(x) ::: x is an Australian citizen.\nNationwideTour(x, y) ::: x made a nationwide tour in y.\nMember(x, y) ::: x is a member of y.\nBorn(x, y) ::: x was born in y.\nPremises:\nSingerSongwriter(bobbyFlynn) ::: Bobby Flynn is a singer-songwriter.\nFinish(bobbyFlynn, year2007) ::: Bobby Flynn finished 7th while competing on Australian Idol.\nAustralianIdolCompetitor(bobbyFlynn) ::: Australian Idol competitors are Australian citizens.\nNationwideTour(omegaThree, year2007) ::: The Omega Three band made a nationwide tour in 2007.\nMember(bobbyFlynn, omegaThree) ::: Bobby Flynn is a member of The Omega Three band.\nBorn(bobbyFlynn, queensland) ::: Bobby Flynn was born in Queensland.\nConclusion:\nBorn(bobbyFlynn, queens) ::: Bobby Flynn was born in Queens.\n------\nProblem:\nThe 2008 Summer"
    ]
  },
  {
    "id": "FOLIO_train_252",
    "context": "All proteins are organic compounds. All enzymes are organic compounds.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? All enzymes are proteins.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProtein(x) ::: x is a protein.\nEnzyme(x) ::: x is an enzyme.\nOrganicCompound(x) ::: x is an organic compound.\nPremises:\n∀x (Protein(x) → OrganicCompound(x)) ::: All proteins are organic compounds.\n∀x (Enzyme(x) → OrganicCompound(x)) ::: All enzymes are organic compounds.\nConclusion:\n∀x (Enzyme(x) → Protein(x)) ::: All enzymes are proteins.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to"
    ]
  },
  {
    "id": "FOLIO_train_253",
    "context": "One American screenwriter and producer is Maggie Friedman. Maggie Friedman was the showrunner and executive producer of the lifetime television series Witches of East End. Witches of East End is a fantasy-drama series. Maggie Friedman produced and developed Eastwick. Eastwick is a series by ABC.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There is a series by ABC that was developed by the showrunner of Witches of East End.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAmerican(x) ::: x is an American.\nScreenwriter(x) ::: x is a screenwriter.\nProducer(x) ::: x is a producer.\nShowrunner(x) ::: x is a showrunner.\nExecutiveProducer(x) ::: x is an executive producer.\nWitchesOfEastEnd(x) ::: x is the lifetime television series Witches of East End.\nFantasyDramaSeries(x) ::: x is a fantasy-drama series.\nEastwick(x) ::: x is the series by ABC.\nProduce(x, y) ::: x produced y.\nDevelop(x, y) ::: x developed y.\nPremises:\nAmerican(maggieFriedman) ∧ Screenwriter(maggieFriedman) ∧ Producer(maggieFriedman) ∧ Showrunner(maggieFriedman) ∧ ExecutiveProducer(maggieFriedman) ::: One American screenwriter and producer is Maggie Friedman.\nWitchesOfEastEnd(witchesOfEastEnd) ∧ FantasyDramaSeries(witchesOfEastEnd) ∧ Showrunner(maggieFriedman, witchesOfEastEnd) ∧ ExecutiveProducer(maggieFriedman, witchesOfEastEnd) ::: Maggie Friedman was the showrunner and executive producer of the lifetime television series Witches of East End.\nWitchesOfEastEnd(witchesOfEastEnd) �"
    ]
  },
  {
    "id": "FOLIO_train_254",
    "context": "One American screenwriter and producer is Maggie Friedman. Maggie Friedman was the showrunner and executive producer of the lifetime television series Witches of East End. Witches of East End is a fantasy-drama series. Maggie Friedman produced and developed Eastwick. Eastwick is a series by ABC.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There isn't a series by ABC that was developed by the showrunner of Witches of East End.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAmerican(x) ::: x is an American.\nScreenwriter(x) ::: x is a screenwriter.\nProducer(x) ::: x is a producer.\nShowrunner(x) ::: x is the showrunner.\nExecutiveProducer(x) ::: x is an executive producer.\nLifetimeTelevisionSeries(x) ::: x is a lifetime television series.\nFantasyDramaSeries(x) ::: x is a fantasy-drama series.\nSeries(x) ::: x is a series.\nABC(x) ::: x is a series by ABC.\nDevelop(x, y) ::: x is developed by y.\nProduce(x, y) ::: x is produced by y.\nPremises:\nAmerican(maggieFriedman) ∧ Screenwriter(maggieFriedman) ∧ Producer(maggieFriedman) ∧ Showrunner(maggieFriedman) ∧ ExecutiveProducer(maggieFriedman) ::: One American screenwriter and producer is Maggie Friedman.\nLifetimeTelevisionSeries(witchesOfEastEnd) ∧ FantasyDramaSeries(witchesOfEastEnd) ∧ Showrunner(maggieFriedman, witchesOfEastEnd) ∧ ExecutiveProducer(maggieFriedman, witchesOfEastEnd) ::: Maggie Friedman was the showrunner and executive producer of the lifetime television series Witches of East End.\nSeries(witchesOfEastEnd"
    ]
  },
  {
    "id": "FOLIO_train_255",
    "context": "One American screenwriter and producer is Maggie Friedman. Maggie Friedman was the showrunner and executive producer of the lifetime television series Witches of East End. Witches of East End is a fantasy-drama series. Maggie Friedman produced and developed Eastwick. Eastwick is a series by ABC.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Maggie Friedman developed Witches of East End.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAmerican(x) ::: x is an American.\nScreenwriter(x) ::: x is a screenwriter.\nProducer(x) ::: x is a producer.\nShowrunner(x) ::: x is a showrunner.\nExecutiveProducer(x) ::: x is an executive producer.\nWitchesOfEastEnd(x) ::: x is the lifetime television series Witches of East End.\nFantasyDramaSeries(x) ::: x is a fantasy-drama series.\nEastwick(x) ::: x is a series by ABC.\nPremises:\nAmerican(maggieFriedman) ∧ Screenwriter(maggieFriedman) ∧ Producer(maggieFriedman) ∧ Showrunner(maggieFriedman) ∧ ExecutiveProducer(maggieFriedman) ∧ WitchesOfEastEnd(witchesOfEastEnd) ::: One American screenwriter and producer is Maggie Friedman. Maggie Friedman was the showrunner and executive producer of the lifetime television series Witches of East End.\nWitchesOfEastEnd(witchesOfEastEnd) ∧ FantasyDramaSeries(witchesOfEastEnd) ::: Witches of East End is a fantasy-drama series.\nWitchesOfEastEnd(witchesOfEastEnd) ∧ Producer(maggieFriedman, witchesOfEastEnd) ∧ Develop(maggieFriedman, witchesOfEastEnd) :::"
    ]
  },
  {
    "id": "FOLIO_train_256",
    "context": "Evangelos Eleftheriou is a Greek electrical engineer. Evangelos Eleftheriou worked for IBM in Zurich. If a company has employees working for them somewhere, then they have an office there. IBM is a company.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? IBM has an office in London or Zurich.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreek(x) ::: x is a Greek person.\nElectricalEngineer(x) ::: x is an electrical engineer.\nWork(x, y) ::: x works for y.\nCompany(x) ::: x is a company.\nOffice(x, y) ::: x has an office in y.\nPremises:\nGreek(evangelos) ∧ ElectricalEngineer(evangelos) ∧ Work(evangelos, ibm) ∧ Work(evangelos, zurich) ::: Evangelos Eleftheriou is a Greek electrical engineer. Evangelos Eleftheriou worked for IBM in Zurich.\n∀x ∀y (Work(x, y) → Office(y, x)) ::: If a company has employees working for them somewhere, then they have an office there.\nCompany(ibm) ::: IBM is a company.\nConclusion:\nOffice(ibm, london) ∨ Office(ibm, zurich) ::: IBM has an office in London or Zurich.\n------\nProblem:\nThe 2018 FIFA World Cup was the 21st FIFA World Cup, an international football tournament contested by the men's national teams of the member associations of FIFA once every four years. The 2018 FIFA World Cup was held in Russia. The 2018 FIFA World Cup was held in Europe. The 2018 FIFA World Cup was held in Asia. The 2018 FIFA World Cup was held in Africa. The"
    ]
  },
  {
    "id": "FOLIO_train_257",
    "context": "Evangelos Eleftheriou is a Greek electrical engineer. Evangelos Eleftheriou worked for IBM in Zurich. If a company has employees working for them somewhere, then they have an office there. IBM is a company.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? No Greeks have worked for IBM.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreek(x) ::: x is a Greek person.\nEmployee(x, y) ::: x is an employee of y.\nWork(x, y) ::: x works for y.\nCompany(x) ::: x is a company.\nOffice(x) ::: x is an office.\nPremises:\nGreek(evangelos) ∧ Employee(evangelos, ibm) ∧ Work(evangelos, ibmZurich) ::: Evangelos Eleftheriou is a Greek electrical engineer. Evangelos Eleftheriou worked for IBM in Zurich.\n∀x ∀y (Company(x) ∧ Employee(y, x) ∧ Work(y, z) → Office(z)) ::: If a company has employees working for them somewhere, then they have an office there.\nCompany(ibm) ::: IBM is a company.\nConclusion:\n¬∃x (Greek(x) ∧ Employee(x, ibm)) ::: No Greeks have worked for IBM.\n------\nProblem:\nThe 2010 FIFA World Cup was the 19th FIFA World Cup, the world championship for men's national association football teams. It took place in South Africa from 11 June to 11 July 2010. The bidding process for hosting the tournament finals was open only to African nations. In 2004, the international football federation, FIFA, selected South Africa over Egypt and Morocco to become the"
    ]
  },
  {
    "id": "FOLIO_train_258",
    "context": "Before releasing their single, \"Hooray! Hooray! It's a Holi-Holiday!\", Boney M. had had seven consecutive German #1 singles. \"Hooray! Hooray! It's a Holi-Holiday!\" was a big hit all over Europe. Nevertheless, \"Hooray! Hooray! It's a Holi-Holiday!\" broke Boney M's streak of consecutive German #1 singles. A song that peaks below #1 on the german charts is also a song that is not the #1 single",
    "question": "Based on the above information, is the following statement true, false, or uncertain? \"Hooray! Hooray! It's a Holi-Holiday!\" was a #1 hit in Germany.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSingle(x) ::: x is a single.\nRelease(x, y) ::: x is released in year y.\nGerman(x) ::: x is a German person.\nPeak(x, y) ::: x peaks at position y on the charts.\nConsecutive(x, y) ::: x is consecutive to y.\nBigHit(x) ::: x is a big hit.\nAllOverEurope(x) ::: x is a big hit all over Europe.\nStreak(x, y) ::: x is a streak of y.\nPeakBelow(x, y) ::: x peaks below y on the charts.\nPremises:\nSingle(hoorayHoorayItsAHoliHoliday) ∧ Release(hoorayHoorayItsAHoliHoliday, year1979) ::: Before releasing their single, \"Hooray! Hooray! It's a Holi-Holiday!\", Boney M. had had seven consecutive German #1 singles.\nBigHit(hoorayHoorayItsAHoliHoliday) ∧ AllOverEurope(hoorayHoorayItsAHoliHoliday) ::: \"Hooray! Hooray! It's a Holi-Holiday!\" was a big hit all over Europe.\nSingle(hoorayHoorayItsAHoliHoliday) ∧ ¬Peak(hoorayHoorayItsAHoliHoliday, germanNumber1) ::: \"Hooray! Hooray! It's a Hol"
    ]
  },
  {
    "id": "FOLIO_train_259",
    "context": "Before releasing their single, \"Hooray! Hooray! It's a Holi-Holiday!\", Boney M. had had seven consecutive German #1 singles. \"Hooray! Hooray! It's a Holi-Holiday!\" was a big hit all over Europe. Nevertheless, \"Hooray! Hooray! It's a Holi-Holiday!\" broke Boney M's streak of consecutive German #1 singles. A song that peaks below #1 on the german charts is also a song that is not the #1 single",
    "question": "Based on the above information, is the following statement true, false, or uncertain? \"Hooray! Hooray! It's a Holi-Holiday!\" peaked below #1 on the German charts.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSingle(x) ::: x is a single.\nGerman(x) ::: x is a German single.\nPeak(x, y) ::: x peaks at y.\nConsecutive(x, y) ::: x is consecutive to y.\nBigHit(x) ::: x is a big hit all over Europe.\nBoneyM(x) ::: x is a Boney M. single.\nPremises:\nSingle(hoorayHoorayItsAHoliHoliday) ∧ German(hoorayHoorayItsAHoliHoliday) ∧ Peak(hoorayHoorayItsAHoliHoliday, y) ::: \"Hooray! Hooray! It's a Holi-Holiday!\" is a German single that peaks at y.\n∀x (BoneyM(x) → Single(x)) ::: All Boney M. singles are singles.\n∀x (BoneyM(x) → German(x)) ::: All Boney M. singles are German singles.\n∀x (BoneyM(x) → BigHit(x)) ::: All Boney M. singles are big hits all over Europe.\n∀x (BoneyM(x) → ∃y (Peak(x, y) ∧ y = 1)) ::: All Boney M. singles peak at #1.\n∀x (BoneyM(x) → ∀y (Peak(x, y) → y = 1)) ::: All Boney"
    ]
  },
  {
    "id": "FOLIO_train_260",
    "context": "Before releasing their single, \"Hooray! Hooray! It's a Holi-Holiday!\", Boney M. had had seven consecutive German #1 singles. \"Hooray! Hooray! It's a Holi-Holiday!\" was a big hit all over Europe. Nevertheless, \"Hooray! Hooray! It's a Holi-Holiday!\" broke Boney M's streak of consecutive German #1 singles. A song that peaks below #1 on the german charts is also a song that is not the #1 single",
    "question": "Based on the above information, is the following statement true, false, or uncertain? \"Hooray! Hooray! It's a Holi-Holiday!\" peaked at #3 on the UK charts.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSingle(x) ::: x is a single.\nGerman(x) ::: x is a German single.\nPeak(x, y) ::: x peaks at y.\nConsecutive(x, y) ::: x is consecutive to y.\nBigHit(x) ::: x is a big hit.\nAllOverEurope(x) ::: x is a big hit all over Europe.\nBoneyM(x) ::: x is a Boney M. single.\nBreak(x, y) ::: x breaks y.\nPremises:\nSingle(hoorayHoorayItsAHoliHoliday) ∧ German(hoorayHoorayItsAHoliHoliday) ∧ Peak(hoorayHoorayItsAHoliHoliday, number3) ∧ BigHit(hoorayHoorayItsAHoliHoliday) ∧ AllOverEurope(hoorayHoorayItsAHoliHoliday) ::: \"Hooray! Hooray! It's a Holi-Holiday!\" was a big hit all over Europe.\nBoneyM(hoorayHoorayItsAHoliHoliday) ::: \"Hooray! Hooray! It's a Holi-Holiday!\" is a Boney M. single.\n∀x (BoneyM(x) → Single(x)) ::: All Boney M. singles are singles.\n∀x (BoneyM(x) → German(x)) ::: All Boney M. singles are German singles.\n∀x (BoneyM(x) → Peak(x, number1)) ::: All Boney M. singles peak at #1.\n∀x (BoneyM(x) → Consecutive(x, x)) ::: All Boney M. singles are consecutive to themselves.\n∀x (BoneyM(x) → Break(x, x)) ::: All Boney M. singles break themselves.\n∀x (Peak(x, y) ∧ y < number1 → ¬Peak(x, number1)) ::: A song that peaks below #1 on the german charts is also a song that is not the #1 single.\nConclusion:\nPeak(hoorayHoorayItsAHoliHoliday, number3) ::: \"Hooray! Hooray! It's a Holi-Holiday!\" peaked at #3 on the UK charts.\n------"
    ]
  },
  {
    "id": "FOLIO_train_261",
    "context": "Every chef can cook. Some people who aren’t chefs can cook. People who cook can make scrambled eggs and pasta. If someone can make cookies and muffins, they are a baker. Bakers who can also make scrambled eggs can make a good breakfast. Luke can make cookies, scrambled eggs, and muffins, but not pasta.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Luke can make a good breakfast.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nChef(x) ::: x is a chef.\nCook(x) ::: x can cook.\nMake(x, y) ::: x can make y.\nScrambledEggs(x) ::: x is scrambled eggs.\nPasta(x) ::: x is pasta.\nCookies(x) ::: x is cookies.\nMuffins(x) ::: x is muffins.\nBaker(x) ::: x is a baker.\nGoodBreakfast(x) ::: x is a good breakfast.\nPremises:\n∀x (Chef(x) → Cook(x)) ::: Every chef can cook.\n∃x (¬Chef(x) ∧ Cook(x)) ::: Some people who aren’t chefs can cook.\n∀x (Cook(x) → Make(x, scrambledEggs) ∧ Make(x, pasta)) ::: People who cook can make scrambled eggs and pasta.\n∀x (Make(x, cookies) ∧ Make(x, muffins) → Baker(x)) ::: If someone can make cookies and muffins, they are a baker.\n∀x (Baker(x) ∧ Make(x, scrambledEggs) → GoodBreakfast(x)) ::: Bakers who can also make scrambled eggs can make a good breakfast.\nMake(luke, cookies) ∧ Make(luke, scrambledEggs) ∧ Make(luke, muffins) ∧ ¬Make(luke, pasta) ::: Luke can make cookies, scrambled eggs, and muffins, but not pasta.\nConclusion:\nGoodBreakfast(luke) ::: Luke can make a good breakfast.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion"
    ]
  },
  {
    "id": "FOLIO_train_262",
    "context": "Every chef can cook. Some people who aren’t chefs can cook. People who cook can make scrambled eggs and pasta. If someone can make cookies and muffins, they are a baker. Bakers who can also make scrambled eggs can make a good breakfast. Luke can make cookies, scrambled eggs, and muffins, but not pasta.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Luke is a chef.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nChef(x) ::: x is a chef.\nCook(x) ::: x can cook.\nMake(x, y) ::: x can make y.\nScrambledEggs(x) ::: x is scrambled eggs.\nPasta(x) ::: x is pasta.\nCookies(x) ::: x is cookies.\nMuffins(x) ::: x is muffins.\nBaker(x) ::: x is a baker.\nGoodBreakfast(x) ::: x is a good breakfast.\nPremises:\n∀x (Chef(x) → Cook(x)) ::: Every chef can cook.\n∃x (¬Chef(x) ∧ Cook(x)) ::: Some people who aren’t chefs can cook.\n∀x (Cook(x) → Make(x, scrambledEggs) ∧ Make(x, pasta)) ::: People who cook can make scrambled eggs and pasta.\n∀x (Make(x, cookies) ∧ Make(x, muffins) → Baker(x)) ::: If someone can make cookies and muffins, they are a baker.\n∀x (Baker(x) ∧ Make(x, scrambledEggs) → GoodBreakfast(x)) ::: Bakers who can also make scrambled eggs can make a good breakfast.\nMake(luke, cookies) ∧ Make(luke, scrambledEggs) ∧ Make(luke, muffins) ∧ ¬Make(luke, pasta) ::: Luke can make cookies, scrambled eggs, and muffins, but not pasta.\nConclusion:\nChef(luke) ::: Luke is a chef.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased"
    ]
  },
  {
    "id": "FOLIO_train_263",
    "context": "ETS develops various standardized tests primarily in the United States for K-12 and higher education. ETS administers international tests including the TOEFL, TOEIC, GRE and subject tests in more than 180 countries. Many of the assessments ETS develops are associated with entry to the US tertiary and quaternary education institutions. ETS also develops K-12 statewide assessments used for accountability testing in many states.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? ETS develops assessments for K-12 statewide as well as entry to US tertiary and quaternary education institutions.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDevelop(x, y) ::: x develops y.\nAdminister(x, y) ::: x administers y.\nAssociate(x, y) ::: x is associated with y.\nUse(x, y) ::: x is used for y.\nAccountability(x) ::: x is accountability testing.\nStatewide(x) ::: x is statewide.\nK12(x) ::: x is K-12.\nTertiary(x) ::: x is tertiary.\nQuaternary(x) ::: x is quaternary.\nEducation(x) ::: x is education.\nPremises:\nDevelop(ets, variousStandardizedTests) ∧ Develop(ets, internationalTests) ::: ETS develops various standardized tests primarily in the United States for K-12 and higher education. ETS administers international tests including the TOEFL, TOEIC, GRE and subject tests in more than 180 countries.\nAssociate(manyOfTheAssessmentsEtsDevelops, entryToTheUStertiaryAndQuaternaryEducationInstitutions) ::: Many of the assessments ETS develops are associated with entry to the US tertiary and quaternary education institutions.\nUse(statewideAssessmentsEtsDevelops, accountabilityTesting) ::: ETS also develops K-12 statewide assessments used for accountability testing in many states.\nConclusion:\nDevelop(ets, assessments) ∧ Use(assessments, statewide) ∧ Use(assessments, entryToTheUStertiaryAndQuaternaryEducationInstitutions) ::: ETS develops assessments for K-12 statewide as well as entry to US tertiary and quaternary education institutions.\n------\nProblem:\nThe 2010 FIFA World Cup was the 19th FIFA World Cup, the world championship for men's national association football teams. It took place in South Africa from 11 June to 11 July 2010. The bidding process for hosting the tournament finals was open only to African nations; in 2004, the international football federation, FIFA, selected South Africa over Egypt and Morocco to become the first African nation to host the finals.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The 2010 FIFA World Cup"
    ]
  },
  {
    "id": "FOLIO_train_264",
    "context": "ETS develops various standardized tests primarily in the United States for K-12 and higher education. ETS administers international tests including the TOEFL, TOEIC, GRE and subject tests in more than 180 countries. Many of the assessments ETS develops are associated with entry to the US tertiary and quaternary education institutions. ETS also develops K-12 statewide assessments used for accountability testing in many states.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? ETS doesn't administer tests internationally.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDevelop(x, y) ::: x develops y.\nAdminister(x, y) ::: x administers y.\nStandardizedTest(x) ::: x is a standardized test.\nK12(x) ::: x is a K-12 test.\nHigherEducation(x) ::: x is a higher education test.\nInternational(x) ::: x is an international test.\nUS(x) ::: x is a US test.\nTertiary(x) ::: x is a tertiary education test.\nQuaternary(x) ::: x is a quaternary education test.\nStatewide(x) ::: x is a statewide test.\nAccountability(x) ::: x is an accountability test.\nPremises:\nDevelop(ets, standardizedTest) ::: ETS develops various standardized tests.\nAdminister(ets, standardizedTest) ::: ETS administers various standardized tests.\nAdminister(ets, internationalTest) ::: ETS administers international tests.\nAdminister(ets, internationalTest) ∧ International(internationalTest) ::: ETS administers international tests including the TOEFL, TOEIC, GRE and subject tests in more than 180 countries.\nAdminister(ets, internationalTest) ∧ International(internationalTest) ∧ TOEFL(toefl) ∧ TOEIC(toeic) ∧ GRE(gre) ∧ SubjectTest(subjectTest) ::: ETS administers international tests including the TOEFL, TOEIC, GRE and subject tests in more than 180 countries.\nAdminister(ets, internationalTest) ∧ International(internationalTest) ∧ TOEFL(toefl) ∧ TOEIC(toeic) ∧ GRE(gre) ∧ SubjectTest(subjectTest) ∧ TOEFL(toefl) ∧ TOEIC(toeic) ∧ GRE(gre) ∧ SubjectTest(subjectTest) ::: ETS administers international tests including the TOEFL, TOEIC, GRE and subject tests in more than 180 countries.\nAdminister(ets, internationalTest) ∧ International(internationalTest) ∧ TOEFL(toefl) ∧ TOEIC(toeic"
    ]
  },
  {
    "id": "FOLIO_train_265",
    "context": "ETS develops various standardized tests primarily in the United States for K-12 and higher education. ETS administers international tests including the TOEFL, TOEIC, GRE and subject tests in more than 180 countries. Many of the assessments ETS develops are associated with entry to the US tertiary and quaternary education institutions. ETS also develops K-12 statewide assessments used for accountability testing in many states.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? ETS administers international tests including the TOEFL, GRE and subject tests in China.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDevelop(x, y) ::: x develops y.\nAdminister(x, y) ::: x administers y.\nAssociate(x, y) ::: x is associated with y.\nEntry(x, y) ::: x is associated with entry to y.\nStatewide(x) ::: x is a statewide assessment.\nAccountability(x) ::: x is used for accountability testing.\nPremises:\nDevelop(ets, variousStandardizedTests) ∧ Develop(ets, internationalTests) ∧ Develop(ets, k12Tests) ∧ Develop(ets, higherEducationTests) ::: ETS develops various standardized tests primarily in the United States for K-12 and higher education.\nAdminister(ets, internationalTests) ∧ Administer(ets, toefl) ∧ Administer(ets, toeic) ∧ Administer(ets, gre) ∧ Administer(ets, subjectTests) ::: ETS administers international tests including the TOEFL, TOEIC, GRE and subject tests in more than 180 countries.\nAssociate(manyOfTheAssessmentsEtsDevelops, entryToTheUsTertiaryAndQuaternaryEducationInstitutions) ::: Many of the assessments ETS develops are associated with entry to the US tertiary and quaternary education institutions.\nDevelop(ets, k12StatewideAssessments) ∧ Accountability(k12StatewideAssessments) ::: ETS also develops K-12 statewide assessments used for accountability testing in many states.\nConclusion:\nAdminister(ets, internationalTests) ∧ Administer(ets, toefl) ∧ Administer(ets, gre) ∧ Administer(ets, subjectTests) ∧ Administer(ets, china) ::: ETS administers international tests including the TOEFL, GRE and subject tests in China.\n------\nProblem:\nThe United States is a federal republic in North America, a founding member of the United Nations, NATO, the G7, the G20, and the OECD. The United States is a highly developed country with the world's largest economy by nominal GDP and second-largest economy by PPP. The United States is the world's oldest surviving federation. It is a federal republic and a representative democracy with three separate branches of government,"
    ]
  },
  {
    "id": "FOLIO_train_266",
    "context": "All people who enjoy eating gelato ice cream would enjoy a vacation to Italy. There are no people who can resist the hallmark delectable drinks and desserts that are famed in Italy. People either enjoy eating gelato ice cream or love to travel and vacation often. If people often take study abroad semesters to Europe, then they do not regret their college experiences. If people love to travel and vacation often, then they often take study abroad semesters to Europe. Robert either enjoys eating gelato ice cream and loves to travel and vacation often, or he neither enjoys eating gelato ice cream nor loves to travel and vacation often.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Robert can resist the hallmark delectable drinks and desserts that are famed in Italy.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEnjoy(x, y) ::: x enjoys y.\nVacation(x) ::: x vacations often.\nTravel(x) ::: x travels often.\nRegret(x) ::: x regrets x.\nCollege(x) ::: x is a college experience.\nSemester(x) ::: x is a semester.\nEurope(x) ::: x is in Europe.\nPremises:\n∀x (Enjoy(x, gelatoIceCream) → Enjoy(x, vacationToItaly)) ::: All people who enjoy eating gelato ice cream would enjoy a vacation to Italy.\n∀x (Enjoy(x, gelatoIceCream) ⊕ Vacation(x)) ::: People either enjoy eating gelato ice cream or love to travel and vacation often.\n∀x (Travel(x) → ¬Regret(x, College(x))) ::: If people often take study abroad semesters to Europe, then they do not regret their college experiences.\n∀x (Vacation(x) → Travel(x)) ::: If people love to travel and vacation often, then they often take study abroad semesters to Europe.\n(Enjoy(robert, gelatoIceCream) ∧ Vacation(robert)) ⊕ ¬(Enjoy(robert, gelatoIceCream) ∨ Vacation(robert)) ::: Robert either enjoys eating gelato ice cream and loves to travel and vacation often, or he neither enjoys eating gelato ice cream nor loves to travel and vacation often.\nConclusion:\n¬Enjoy(robert, gelatoIceCream) → ¬Enjoy(robert, hallmarkDelectableDrinksAndDessertsThatAreFamedInItaly) ::: Robert can resist the hallmark delectable drinks and desserts that are famed in Italy.\n------\nProblem:\nAll people who enjoy eating gelato ice cream would enjoy a vacation to Italy. There are no people who can resist the hallmark delectable drinks and desserts that are famed in Italy. People either enjoy eating gelato ice cream or love to travel and vacation often. If people often take study abroad semesters to Europe, then they do not regret their college experiences. If people love to travel and vacation often, then they often take study abroad semesters to Europe. Robert either enjoys eating gelato ice cream and loves to travel and vacation often, or he neither enjoys eating gel"
    ]
  },
  {
    "id": "FOLIO_train_267",
    "context": "All people who enjoy eating gelato ice cream would enjoy a vacation to Italy. There are no people who can resist the hallmark delectable drinks and desserts that are famed in Italy. People either enjoy eating gelato ice cream or love to travel and vacation often. If people often take study abroad semesters to Europe, then they do not regret their college experiences. If people love to travel and vacation often, then they often take study abroad semesters to Europe. Robert either enjoys eating gelato ice cream and loves to travel and vacation often, or he neither enjoys eating gelato ice cream nor loves to travel and vacation often.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Robert either would both enjoy a vacation to Italy and regrets his college experiences or neither would enjoy a vacation to Italy nor regrets his college experiences, then Robert would either enjoy a vacation to Italy or, if not, then he can resist the hallmark delectable drinks and desserts that are famed in Italy.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEnjoy(x, y) ::: x enjoys y.\nVacation(x, y) ::: x vacations in y.\nItaly(x) ::: x is Italy.\nRegret(x, y) ::: x regrets y.\nCollege(x) ::: x is a college experience.\nPeople(x) ::: x is a person.\nGelato(x) ::: x is gelato ice cream.\nTravel(x, y) ::: x travels to y.\nSemester(x) ::: x is a semester.\nEurope(x) ::: x is Europe.\nPremises:\n∀x (Enjoy(x, gelato) → Vacation(x, Italy)) ::: All people who enjoy eating gelato ice cream would enjoy a vacation to Italy.\n∀x (Resist(x, drinksAndDesserts) → ¬Enjoy(x, gelato)) ::: There are no people who can resist the hallmark delectable drinks and desserts that are famed in Italy.\n∀x (Enjoy(x, gelato) ⊕ Travel(x, often)) ::: People either enjoy eating gelato ice cream or love to travel and vacation often.\n∀x (Semester(x, Europe) → ¬Regret(x, College)) ::: If people often take study abroad semesters to Europe, then they do not regret their college experiences.\n∀x (Travel(x, often) → Semester(x, Europe)) ::: If people love to travel and vacation often, then they often take study abroad semesters to Europe.\n(Enjoy(robert, gelato) ∧ Travel(robert, often)) ⊕ ¬(Enjoy(robert, gelato) ∨ Travel(robert, often)) ::: Robert either enjoys eating gelato ice cream and loves to travel and vacation often, or he neither enjoys eating gelato ice cream nor loves to travel and vacation often.\nConclusion:\n(Vacation(robert, Italy) ∧ Regret(robert, College)) ⊕ ¬(Vacation(robert, Italy) ∨ Regret(robert, College)) → (Vacation(robert, Italy) ∨ ¬Resist(robert, drinksAndDesserts)) ::: If Robert either would both enjoy a vacation to Italy and regrets his college experiences or neither would enjoy a vacation to Italy"
    ]
  },
  {
    "id": "FOLIO_train_268",
    "context": "All people who enjoy eating gelato ice cream would enjoy a vacation to Italy. There are no people who can resist the hallmark delectable drinks and desserts that are famed in Italy. People either enjoy eating gelato ice cream or love to travel and vacation often. If people often take study abroad semesters to Europe, then they do not regret their college experiences. If people love to travel and vacation often, then they often take study abroad semesters to Europe. Robert either enjoys eating gelato ice cream and loves to travel and vacation often, or he neither enjoys eating gelato ice cream nor loves to travel and vacation often.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Robert is not both a person who can resist the hallmark delectable drinks and desserts that are famed in Italy and regrets his college experiences, then Robert either enjoys eating gelato ice cream or would enjoy a vacation to Italy.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEnjoy(x, y) ::: x enjoys y.\nVacation(x) ::: x is a vacation.\nItaly(x) ::: x is Italy.\nRegret(x) ::: x regrets his college experiences.\nStudyAbroad(x) ::: x is a study abroad semester to Europe.\nEurope(x) ::: x is Europe.\nPremises:\n∀x (Enjoy(x, gelatoIceCream) → Enjoy(x, vacationToItaly)) ::: All people who enjoy eating gelato ice cream would enjoy a vacation to Italy.\n∀x (CanResist(x, hallmarkDelectableDrinksAndDessertsThatAreFamedInItaly) → ¬Enjoy(x, gelatoIceCream)) ::: There are no people who can resist the hallmark delectable drinks and desserts that are famed in Italy.\n∀x (Enjoy(x, gelatoIceCream) ⊕ Love(x, travelAndVacationOften)) ::: People either enjoy eating gelato ice cream or love to travel and vacation often.\n∀x (StudyAbroad(x) → ¬Regret(x)) ::: If people often take study abroad semesters to Europe, then they do not regret their college experiences.\n∀x (Love(x, travelAndVacationOften) → StudyAbroad(x)) ::: If people love to travel and vacation often, then they often take study abroad semesters to Europe.\n(Enjoy(robert, gelatoIceCream) ∧ Love(robert, travelAndVacationOften)) ⊕ ¬(Enjoy(robert, gelatoIceCream) ∨ Love(robert, travelAndVacationOften)) ::: Robert either enjoys eating gelato ice cream and loves to travel and vacation often, or he neither enjoys eating gelato ice cream nor loves to travel and vacation often.\nConclusion:\n¬(CanResist(robert, hallmarkDelectableDrinksAndDessertsThatAreFamedInItaly) ∧ Regret(robert)) → (Enjoy(robert, gelatoIceCream) ∨ Enjoy(robert, vacationToItaly)) ::: If Robert is not both a person who can resist the hallmark delectable drinks and desserts that are famed in Italy and regrets his college experiences, then Robert"
    ]
  },
  {
    "id": "FOLIO_train_269",
    "context": "To get a student visa, you must be full-time enrolled in an academic program. Those who are full-time enrolled in an academic program can not work full-time. Everyone who wants to study abroad needs to have a student visa. All PhD graduates can work full time. If Tom does not want to study abroad, he is full-time enrolled in an educational program.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tom is a PhD graduate.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nStudentVisa(x) ::: x has a student visa.\nFullTimeEnrolled(x) ::: x is full-time enrolled in an academic program.\nWorkFullTime(x) ::: x can work full-time.\nWant(x, y) ::: x wants y.\nStudyAbroad(x) ::: x wants to study abroad.\nPhDGraduate(x) ::: x is a PhD graduate.\nPremises:\n∀x (StudentVisa(x) → FullTimeEnrolled(x)) ::: To get a student visa, you must be full-time enrolled in an academic program.\n∀x (FullTimeEnrolled(x) → ¬WorkFullTime(x)) ::: Those who are full-time enrolled in an academic program can not work full-time.\n∀x (StudyAbroad(x) → StudentVisa(x)) ::: Everyone who wants to study abroad needs to have a student visa.\n∀x (PhDGraduate(x) → WorkFullTime(x)) ::: All PhD graduates can work full time.\n¬StudyAbroad(tom) → FullTimeEnrolled(tom) ::: If Tom does not want to study abroad, he is full-time enrolled in an educational program.\nConclusion:\nPhDGraduate(tom) ::: Tom is a PhD graduate.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is un"
    ]
  },
  {
    "id": "FOLIO_train_270",
    "context": "To get a student visa, you must be full-time enrolled in an academic program. Those who are full-time enrolled in an academic program can not work full-time. Everyone who wants to study abroad needs to have a student visa. All PhD graduates can work full time. If Tom does not want to study abroad, he is full-time enrolled in an educational program.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tom is not a PhD graduate.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nStudentVisa(x) ::: x has a student visa.\nFullTimeEnrolled(x) ::: x is full-time enrolled in an academic program.\nWorkFullTime(x) ::: x can work full-time.\nWantToStudyAbroad(x) ::: x wants to study abroad.\nPhDGraduate(x) ::: x is a PhD graduate.\nPremises:\n∀x (StudentVisa(x) → FullTimeEnrolled(x)) ::: To get a student visa, you must be full-time enrolled in an academic program.\n∀x (FullTimeEnrolled(x) → ¬WorkFullTime(x)) ::: Those who are full-time enrolled in an academic program can not work full-time.\n∀x (WantToStudyAbroad(x) → StudentVisa(x)) ::: Everyone who wants to study abroad needs to have a student visa.\n∀x (PhDGraduate(x) → WorkFullTime(x)) ::: All PhD graduates can work full time.\n¬WantToStudyAbroad(tom) → FullTimeEnrolled(tom) ::: If Tom does not want to study abroad, he is full-time enrolled in an educational program.\nConclusion:\n¬PhDGraduate(tom) ::: Tom is not a PhD graduate.\n------"
    ]
  },
  {
    "id": "FOLIO_train_271",
    "context": "To get a student visa, you must be full-time enrolled in an academic program. Those who are full-time enrolled in an academic program can not work full-time. Everyone who wants to study abroad needs to have a student visa. All PhD graduates can work full time. If Tom does not want to study abroad, he is full-time enrolled in an educational program.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tom wants to study abroad.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nStudentVisa(x) ::: x has a student visa.\nFullTimeEnrolled(x) ::: x is full-time enrolled in an academic program.\nWorkFullTime(x) ::: x can work full-time.\nWant(x, y) ::: x wants y.\nStudyAbroad(x) ::: x wants to study abroad.\nPhDGraduate(x) ::: x is a PhD graduate.\nPremises:\n∀x (StudentVisa(x) → FullTimeEnrolled(x)) ::: To get a student visa, you must be full-time enrolled in an academic program.\n∀x (FullTimeEnrolled(x) → ¬WorkFullTime(x)) ::: Those who are full-time enrolled in an academic program can not work full-time.\n∀x (StudyAbroad(x) → StudentVisa(x)) ::: Everyone who wants to study abroad needs to have a student visa.\n∀x (PhDGraduate(x) → WorkFullTime(x)) ::: All PhD graduates can work full time.\n∀x (¬StudyAbroad(x) → FullTimeEnrolled(x)) ::: If Tom does not want to study abroad, he is full-time enrolled in an educational program.\nConclusion:\nWant(tom, studyAbroad)"
    ]
  },
  {
    "id": "FOLIO_train_272",
    "context": "The installment sales method is the approach to recognize revenue under the US GAAP. In accrual accounting, revenues are recognized when they are realized. In cash accounting, revenues are recognized when cash is received. The US GAAP is the accounting standard developed and used by the US Securities and Exchange Commission. Sally works for the US Securities and Exchange Commission.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Sally's company utilizes the installment sales method.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nInstallmentSalesMethod(x) ::: x is the installment sales method.\nRecognize(x, y) ::: x recognizes y.\nRevenue(x) ::: x is a revenue.\nRealize(x, y) ::: x is realized by y.\nCash(x) ::: x is cash.\nAccrualAccounting(x) ::: x is accrual accounting.\nCashAccounting(x) ::: x is cash accounting.\nUSGAAP(x) ::: x is the US GAAP.\nDevelop(x, y) ::: x develops y.\nUse(x, y) ::: x uses y.\nSEC(x) ::: x is the US Securities and Exchange Commission.\nWork(x, y) ::: x works for y.\nPremises:\nInstallmentSalesMethod(installmentSalesMethod) ∧ Recognize(installmentSalesMethod, Revenue(x)) ∧ Realize(x, y) ∧ Cash(y) ::: The installment sales method is the approach to recognize revenue under the US GAAP.\n∀x (AccrualAccounting(x) → Recognize(x, Revenue(x))) ::: In accrual accounting, revenues are recognized when they are realized.\n∀x (Cash"
    ]
  },
  {
    "id": "FOLIO_train_273",
    "context": "The installment sales method is the approach to recognize revenue under the US GAAP. In accrual accounting, revenues are recognized when they are realized. In cash accounting, revenues are recognized when cash is received. The US GAAP is the accounting standard developed and used by the US Securities and Exchange Commission. Sally works for the US Securities and Exchange Commission.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The company Sally works for performs accrual accounting.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nInstallmentSalesMethod(x) ::: x is the installment sales method.\nRecognize(x, y) ::: x recognizes y.\nRevenue(x) ::: x is a revenue.\nRealize(x, y) ::: x is realized by y.\nCash(x) ::: x is cash.\nAccrualAccounting(x) ::: x is accrual accounting.\nCashAccounting(x) ::: x is cash accounting.\nUSGAAP(x) ::: x is the US GAAP.\nDevelop(x, y) ::: x is developed by y.\nUse(x, y) ::: x is used by y.\nSecuritiesAndExchangeCommission(x) ::: x is the US Securities and Exchange Commission.\nWork(x, y) ::: x works for y.\nPremises:\nInstallmentSalesMethod(installmentSalesMethod) ∧ Recognize(installmentSalesMethod, Revenue(x)) ∧ Realize(x, AccrualAccounting(accrualAccounting)) ::: The installment sales method is the approach to recognize revenue under the US GAAP.\n∀x (AccrualAccounting(x) → Realize(x, Revenue(x))) ::: In accrual accounting, revenues are recognized when they"
    ]
  },
  {
    "id": "FOLIO_train_274",
    "context": "The installment sales method is the approach to recognize revenue under the US GAAP. In accrual accounting, revenues are recognized when they are realized. In cash accounting, revenues are recognized when cash is received. The US GAAP is the accounting standard developed and used by the US Securities and Exchange Commission. Sally works for the US Securities and Exchange Commission.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Sally does not work for a company that uses the GAAP.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nWorksFor(x, y) ::: x works for y.\nRecognize(x, y) ::: x recognizes y.\nRevenue(x) ::: x is a revenue.\nInstallmentSalesMethod(x) ::: x is the installment sales method.\nAccrualAccounting(x) ::: x is accrual accounting.\nCashAccounting(x) ::: x is cash accounting.\nUSGAAP(x) ::: x is the US GAAP.\nPremises:\nInstallmentSalesMethod(installmentSalesMethod) ∧ Recognize(installmentSalesMethod, Revenue(x)) ∧ AccrualAccounting(accrualAccounting) ∧ Recognize(accrualAccounting, Revenue(x)) ∧ CashAccounting(cashAccounting) ∧ Recognize(cashAccounting, Revenue(x)) ::: The installment sales method is the approach to recognize revenue under the US GAAP. In accrual accounting, revenues are recognized when they are realized. In cash accounting, revenues are recognized when cash is received.\nUSGAAP(usGAAP) ∧ WorksFor(sally, usGAAP) ::: The US GAAP is the accounting standard developed and used by the US Securities and Exchange Commission. Sally works for"
    ]
  },
  {
    "id": "FOLIO_train_275",
    "context": "All people who are respected by others are people who contribute to the country. If a person is respected by others, then he/she contributes to the country. All people available to have a visit without any fees are those respected by others. All Customers who once served in the army are available to have a visit without any fees. All people who once were sentenced for thief stayed in prison for some time. All people who once stayed in prison for some time have a bad record in the local state. James was either once sentenced for thief or stayed in prison for some time. James is either with a bad record in the local state or respected by others.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James contributes to the country.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRespected(x) ::: x is respected by others.\nContribute(x) ::: x contributes to the country.\nAvailable(x) ::: x is available to have a visit without any fees.\nCustomer(x) ::: x is a customer.\nArmy(x) ::: x once served in the army.\nThief(x) ::: x once was sentenced for thief.\nPrison(x) ::: x once stayed in prison for some time.\nBadRecord(x) ::: x has a bad record in the local state.\nPremises:\n∀x (Respected(x) → Contribute(x)) ::: All people who are respected by others are people who contribute to the country.\n∀x (Respected(x) → Contribute(x)) ::: If a person is respected by others, then he/she contributes to the country.\n∀x (Available(x) → Respected(x)) ::: All people available to have a visit without any fees are those respected by others.\n∀x (Customer(x) ∧ Army(x) → Available(x)) ::: All Customers who once served in the army are available to have a visit without any fees.\n∀x (Thief(x) → Prison(x)) ::: All people who once were sentenced for thief stayed in prison for"
    ]
  },
  {
    "id": "FOLIO_train_276",
    "context": "All people who are respected by others are people who contribute to the country. If a person is respected by others, then he/she contributes to the country. All people available to have a visit without any fees are those respected by others. All Customers who once served in the army are available to have a visit without any fees. All people who once were sentenced for thief stayed in prison for some time. All people who once stayed in prison for some time have a bad record in the local state. James was either once sentenced for thief or stayed in prison for some time. James is either with a bad record in the local state or respected by others.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James does not contribute to the country.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRespected(x) ::: x is respected by others.\nContribute(x) ::: x contributes to the country.\nAvailable(x) ::: x is available to have a visit without any fees.\nCustomer(x) ::: x is a customer.\nArmy(x) ::: x once served in the army.\nThief(x) ::: x was once sentenced for thief.\nPrison(x) ::: x stayed in prison for some time.\nBadRecord(x) ::: x has a bad record in the local state.\nPremises:\n∀x (Respected(x) → Contribute(x)) ::: All people who are respected by others are people who contribute to the country.\n∀x (Respected(x) → Contribute(x)) ::: If a person is respected by others, then he/she contributes to the country.\n∀x (Available(x) → Respected(x)) ::: All people available to have a visit without any fees are those respected by others.\n∀x (Customer(x) ∧ Army(x) → Available(x)) ::: All Customers who once served in the army are available to have a visit without any fees.\n∀x (Thief(x) → Prison(x)) ::: All people who once were sentenced for thief stayed in prison for some"
    ]
  },
  {
    "id": "FOLIO_train_277",
    "context": "All people who are respected by others are people who contribute to the country. If a person is respected by others, then he/she contributes to the country. All people available to have a visit without any fees are those respected by others. All Customers who once served in the army are available to have a visit without any fees. All people who once were sentenced for thief stayed in prison for some time. All people who once stayed in prison for some time have a bad record in the local state. James was either once sentenced for thief or stayed in prison for some time. James is either with a bad record in the local state or respected by others.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James contributes to the country, and he once served in the army.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRespected(x) ::: x is respected by others.\nContribute(x) ::: x contributes to the country.\nAvailable(x) ::: x is available to have a visit without any fees.\nCustomer(x) ::: x is a customer.\nArmy(x) ::: x once served in the army.\nSentence(x) ::: x was once sentenced for thief.\nPrison(x) ::: x stayed in prison for some time.\nBadRecord(x) ::: x has a bad record in the local state.\nPremises:\n∀x (Respected(x) → Contribute(x)) ::: All people who are respected by others are people who contribute to the country.\n∀x (Respected(x) → Contribute(x)) ::: If a person is respected by others, then he/she contributes to the country.\n∀x (Available(x) → Respected(x)) ::: All people available to have a visit without any fees are those respected by others.\n∀x (Customer(x) ∧ Army(x) → Available(x)) ::: All Customers who once served in the army are available to have a visit without any fees.\n∀x (Sentence(x) → Prison(x)) ::: All people who once were sentenced for thief stayed in prison for some"
    ]
  },
  {
    "id": "FOLIO_train_278",
    "context": "All people who are respected by others are people who contribute to the country. If a person is respected by others, then he/she contributes to the country. All people available to have a visit without any fees are those respected by others. All Customers who once served in the army are available to have a visit without any fees. All people who once were sentenced for thief stayed in prison for some time. All people who once stayed in prison for some time have a bad record in the local state. James was either once sentenced for thief or stayed in prison for some time. James is either with a bad record in the local state or respected by others.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James did not contribute to the country and did not serve in the army.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRespected(x) ::: x is respected by others.\nContribute(x) ::: x contributes to the country.\nAvailable(x) ::: x is available to have a visit without any fees.\nCustomer(x) ::: x is a customer.\nArmy(x) ::: x once served in the army.\nThief(x) ::: x once was sentenced for thief.\nPrison(x) ::: x once stayed in prison for some time.\nBadRecord(x) ::: x has a bad record in the local state.\nPremises:\n∀x (Respected(x) → Contribute(x)) ::: All people who are respected by others are people who contribute to the country.\n∀x (Respected(x) → Contribute(x)) ::: If a person is respected by others, then he/she contributes to the country.\n∀x (Available(x) → Respected(x)) ::: All people available to have a visit without any fees are those respected by others.\n∀x (Customer(x) ∧ Army(x) → Available(x)) ::: All Customers who once served in the army are available to have a visit without any fees.\n∀x (Thief(x) → Prison(x)) ::: All people who once were sentenced for thief stayed in prison for"
    ]
  },
  {
    "id": "FOLIO_train_279",
    "context": "The Croton River watershed is the drainage basin of the Croton River. The Croton River is in southwestern New York. Water from the Croton River watershed flows to the Bronx. The Bronx is in New York.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Water from the Croton River watershed flows to somewhere in New York.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCrotonRiverWatershed(x) ::: x is the Croton River watershed.\nDrainageBasin(x, y) ::: x is the drainage basin of y.\nCrotonRiver(x) ::: x is the Croton River.\nIn(x, y) ::: x is in y.\nFlowTo(x, y) ::: x flows to y.\nBronx(x) ::: x is the Bronx.\nPremises:\nDrainageBasin(CrotonRiverWatershed, CrotonRiver) ::: The Croton River watershed is the drainage basin of the Croton River.\nIn(CrotonRiver, southwesternNewYork) ::: The Croton River is in southwestern New York.\nFlowTo(CrotonRiverWatershed, Bronx) ::: Water from the Croton River watershed flows to the Bronx.\nIn(Bronx, NewYork) ::: The Bronx is in New York.\nConclusion:\nFlowTo(CrotonRiverWatershed, NewYork) ::: Water from the Croton River watershed flows to somewhere in New York.\n------\nProblem:\nThe Croton River watershed is the drainage basin of the Croton River. The Croton River is in southwestern New York. Water from the Cro"
    ]
  },
  {
    "id": "FOLIO_train_280",
    "context": "The Croton River watershed is the drainage basin of the Croton River. The Croton River is in southwestern New York. Water from the Croton River watershed flows to the Bronx. The Bronx is in New York.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Croton River watershed is in the Bronx.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCrotonRiverWatershed(x) ::: x is the Croton River watershed.\nDrainageBasin(x, y) ::: x is the drainage basin of y.\nCrotonRiver(x) ::: x is the Croton River.\nIn(x, y) ::: x is in y.\nFlowTo(x, y) ::: x flows to y.\nBronx(x) ::: x is the Bronx.\nNewYork(x) ::: x is in New York.\nPremises:\nDrainageBasin(CrotonRiverWatershed, CrotonRiver) ::: The Croton River watershed is the drainage basin of the Croton River.\nIn(CrotonRiver, southwesternNewYork) ::: The Croton River is in southwestern New York.\nFlowTo(CrotonRiverWatershed, Bronx) ::: Water from the Croton River watershed flows to the Bronx.\nIn(Bronx, NewYork) ::: The Bronx is in New York.\nConclusion:\nIn(CrotonRiverWatershed, Bronx) ::: The Croton River watershed is in the Bronx.\n------"
    ]
  },
  {
    "id": "FOLIO_train_281",
    "context": "The Croton River watershed is the drainage basin of the Croton River. The Croton River is in southwestern New York. Water from the Croton River watershed flows to the Bronx. The Bronx is in New York.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Water from the Croton River flows to the Bronx.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCrotonRiverWatershed(x) ::: x is the drainage basin of the Croton River.\nCrotonRiver(x) ::: x is the Croton River.\nSouthwesternNewYork(x) ::: x is in southwestern New York.\nBronx(x) ::: x is the Bronx.\nNewYork(x) ::: x is in New York.\nFlowTo(x, y) ::: x flows to y.\nPremises:\nCrotonRiverWatershed(crotonRiverWatershed) ∧ CrotonRiver(crotonRiver) ∧ FlowTo(crotonRiver, bronx) ::: The Croton River watershed is the drainage basin of the Croton River. The Croton River is in southwestern New York. Water from the Croton River watershed flows to the Bronx.\nSouthwesternNewYork(crotonRiver) ::: The Croton River is in southwestern New York.\nNewYork(bronx) ::: The Bronx is in New York.\nConclusion:\nFlowTo(crotonRiver, bronx) ::: Water from the Croton River flows to the Bronx.\n------\nProblem"
    ]
  },
  {
    "id": "FOLIO_train_282",
    "context": "All nuclear-powered submarines are warships. No nuclear-powered submarines are commercial vessels.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Some warships are commercial vessels.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nNuclearPoweredSubmarine(x) ::: x is a nuclear-powered submarine.\nWarship(x) ::: x is a warship.\nCommercialVessel(x) ::: x is a commercial vessel.\nPremises:\n∀x (NuclearPoweredSubmarine(x) → Warship(x)) ::: All nuclear-powered submarines are warships.\n∀x (NuclearPoweredSubmarine(x) → ¬CommercialVessel(x)) ::: No nuclear-powered submarines are commercial vessels.\nConclusion:\n∃x (Warship(x) ∧ CommercialVessel(x)) ::: Some warships are commercial vessels.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on"
    ]
  },
  {
    "id": "FOLIO_train_283",
    "context": "If a album is written by a rock band, then the genre of the album is rock. If a band writes a album winning an award, then this band wins this award. Trouble at the Henhouse is an album by The Tragically Hip. The Tragically Hip is a Canadian rock band. The song \"Butts Wigglin'\" is in Trouble at the Henhouse. Trouble at the Henhouse won the Album of the Year award. A song in Trouble at the Henhouse appeared in a film.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The genre of Trouble at the Henhouse is rock.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAlbum(x) ::: x is an album.\nBand(x) ::: x is a band.\nGenre(x, y) ::: x is a genre of y.\nWin(x, y) ::: x wins y.\nWrittenBy(x, y) ::: x is written by y.\nSong(x) ::: x is a song.\nAppear(x, y) ::: x appears in y.\nFilm(x) ::: x is a film.\nAward(x) ::: x is an award.\nPremises:\n∀x (WrittenBy(x, y) → Genre(y, rock)) ::: If a album is written by a rock band, then the genre of the album is rock.\n∀x (Win(x, y) → Win(band(x), y)) ::: If a band writes a album winning an award, then this band wins this award.\nAlbum(troubleAtTheHenhouse) ∧ WrittenBy(theTragicallyHip, troubleAtTheHenhouse) ::: Trouble at the Henhouse is an album by The Tragically Hip.\nBand(theTragicallyHip) ∧ Genre(theTr"
    ]
  },
  {
    "id": "FOLIO_train_284",
    "context": "If a album is written by a rock band, then the genre of the album is rock. If a band writes a album winning an award, then this band wins this award. Trouble at the Henhouse is an album by The Tragically Hip. The Tragically Hip is a Canadian rock band. The song \"Butts Wigglin'\" is in Trouble at the Henhouse. Trouble at the Henhouse won the Album of the Year award. A song in Trouble at the Henhouse appeared in a film.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A canada rock band didn't win the Album of the Year award.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAlbum(x) ::: x is an album.\nBand(x) ::: x is a band.\nGenre(x, y) ::: x is a genre of y.\nWin(x, y) ::: x wins y.\nWrittenBy(x, y) ::: x is written by y.\nSong(x) ::: x is a song.\nAppear(x, y) ::: x appears in y.\nFilm(x) ::: x is a film.\nPremises:\n∀x (WrittenBy(x, y) → Genre(y, rock)) ::: If a album is written by a rock band, then the genre of the album is rock.\n∀x (Win(x, y) → Win(Band(x), y)) ::: If a band writes a album winning an award, then this band wins this award.\nAlbum(troubleAtTheHenhouse) ∧ WrittenBy(theTragicallyHip, troubleAtTheHenhouse) ∧ Genre(troubleAtTheHenhouse, rock) ::: Trouble at the Henhouse is an album by The Tragically Hip.\nBand(theTragicallyHip) ∧ Genre"
    ]
  },
  {
    "id": "FOLIO_train_285",
    "context": "If a album is written by a rock band, then the genre of the album is rock. If a band writes a album winning an award, then this band wins this award. Trouble at the Henhouse is an album by The Tragically Hip. The Tragically Hip is a Canadian rock band. The song \"Butts Wigglin'\" is in Trouble at the Henhouse. Trouble at the Henhouse won the Album of the Year award. A song in Trouble at the Henhouse appeared in a film.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? \"Butts Wigglin'\" appeared in a film.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAlbum(x) ::: x is an album.\nBand(x) ::: x is a band.\nGenre(x, y) ::: x is a genre of y.\nWin(x, y) ::: x wins y.\nWrittenBy(x, y) ::: x is written by y.\nSong(x) ::: x is a song.\nAppear(x, y) ::: x appears in y.\nIn(x, y) ::: x is in y.\nPremises:\n∀x (WrittenBy(x, y) → Genre(y, rock)) ::: If a album is written by a rock band, then the genre of the album is rock.\n∀x (Win(x, y) → Win(bandOf(x), y)) ::: If a band writes a album winning an award, then this band wins this award.\nAlbum(troubleAtTheHenhouse) ∧ WrittenBy(theTragicallyHip, troubleAtTheHenhouse) ::: Trouble at the Henhouse is an album by The Tragically Hip.\nBand(theTragicallyHip) ∧ Genre(theTragicallyHip, rock) ::: The Tr"
    ]
  },
  {
    "id": "FOLIO_train_286",
    "context": "Daniel is a software engineer and he works at Palantir Technologies. Daniel studied bioengineering during his undergraduate at Rice University. Daniel’s older sister works at Meta as a technical sourcer. Daniel’s dad and older sister both graduated from Stanford University. Daniel’s dad is a doctor practicing internal medicine at a veteran’s hospital in Minneapolis",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Daniel once applied to Stanford University, but he couldn’t get in even though he has family members who are Stanford alumni.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSoftwareEngineer(x) ::: x is a software engineer.\nWork(x, y) ::: x works at y.\nStudy(x, y) ::: x studied y during his undergraduate.\nUndergraduate(x) ::: x is an undergraduate.\nOlderSister(x, y) ::: x is the older sister of y.\nGraduate(x, y) ::: x graduated from y.\nDoctor(x) ::: x is a doctor.\nInternalMedicine(x) ::: x is a doctor practicing internal medicine.\nVeteran(x) ::: x is a veteran.\nHospital(x) ::: x is a hospital.\nMinneapolis(x) ::: x is in Minneapolis.\nPremises:\nSoftwareEngineer(daniel) ∧ Work(daniel, palantirTechnologies) ::: Daniel is a software engineer and he works at Palantir Technologies.\nStudy(daniel, bioengineering) ∧ Undergraduate(daniel) ::: Daniel studied bioengineering during his undergraduate at Rice University.\nOlderSister(daniel, olderSister) ∧ Work(olderSister, meta) ::: Daniel’s older"
    ]
  },
  {
    "id": "FOLIO_train_287",
    "context": "Daniel is a software engineer and he works at Palantir Technologies. Daniel studied bioengineering during his undergraduate at Rice University. Daniel’s older sister works at Meta as a technical sourcer. Daniel’s dad and older sister both graduated from Stanford University. Daniel’s dad is a doctor practicing internal medicine at a veteran’s hospital in Minneapolis",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Daniel studied bioengineering as his major at Rice University.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSoftwareEngineer(x) ::: x is a software engineer.\nWorksAt(x, y) ::: x works at y.\nStudied(x, y) ::: x studied y.\nUndergraduate(x) ::: x is an undergraduate.\nBioengineering(x) ::: x is bioengineering.\nOlderSister(x, y) ::: x is the older sister of y.\nTechnicalSourcer(x) ::: x is a technical sourcer.\nGraduated(x, y) ::: x graduated from y.\nStanfordUniversity(x) ::: x is Stanford University.\nDoctor(x) ::: x is a doctor.\nInternalMedicine(x) ::: x is internal medicine.\nVeteransHospital(x) ::: x is a veteran’s hospital.\nMinneapolis(x) ::: x is Minneapolis.\nPremises:\nSoftwareEngineer(daniel) ∧ WorksAt(daniel, palantirTechnologies) ::: Daniel is a software engineer and he works at Palantir Technologies.\nStudied(daniel, bioengineering) ∧ Undergraduate(daniel) ::: Daniel studied bioengineering during"
    ]
  },
  {
    "id": "FOLIO_train_288",
    "context": "Daniel is a software engineer and he works at Palantir Technologies. Daniel studied bioengineering during his undergraduate at Rice University. Daniel’s older sister works at Meta as a technical sourcer. Daniel’s dad and older sister both graduated from Stanford University. Daniel’s dad is a doctor practicing internal medicine at a veteran’s hospital in Minneapolis",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Daniel and his sister grew up in Minneapolis, Minnesota.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSoftwareEngineer(x) ::: x is a software engineer.\nWorksAt(x, y) ::: x works at y.\nStudied(x, y) ::: x studied y.\nUndergraduate(x) ::: x is an undergraduate.\nRiceUniversity(x) ::: x is Rice University.\nOlderSister(x, y) ::: x is the older sister of y.\nTechnicalSourcer(x) ::: x is a technical sourcer.\nMeta(x) ::: x is Meta.\nGraduated(x, y) ::: x graduated from y.\nStanfordUniversity(x) ::: x is Stanford University.\nDoctor(x) ::: x is a doctor.\nInternalMedicine(x) ::: x is internal medicine.\nVeteransHospital(x) ::: x is a veteran’s hospital.\nMinneapolis(x) ::: x is Minneapolis.\nMinnesota(x) ::: x is Minnesota.\nPremises:\nSoftwareEngineer(daniel) ∧ WorksAt(daniel, palantirTechnologies) ::: Daniel is a software engineer and he works at Palantir Technologies.\nStudied(daniel"
    ]
  },
  {
    "id": "FOLIO_train_289",
    "context": "All commerical aircraft are produced by either Boeing or Airbus. All American Airlines jets are commerical aircraft. Airbus made more in revenue than Boeing last year.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? An American Airlines plane is either a Boeing or Airbus plane.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCommercialAircraft(x) ::: x is a commerical aircraft.\nBoeing(x) ::: x is produced by Boeing.\nAirbus(x) ::: x is produced by Airbus.\nAmericanAirlines(x) ::: x is an American Airlines jet.\nRevenue(x, y) ::: x made more in revenue than y last year.\nPremises:\n∀x (CommercialAircraft(x) → (Boeing(x) ⊕ Airbus(x))) ::: All commerical aircraft are produced by either Boeing or Airbus.\n∀x (AmericanAirlines(x) → CommercialAircraft(x)) ::: All American Airlines jets are commerical aircraft.\nRevenue(airbus, boeing) ::: Airbus made more in revenue than Boeing last year.\nConclusion:\n∀x (AmericanAirlines(x) → (Boeing(x) ⊕ Airbus(x))) ::: An American Airlines plane is either a Boeing or Airbus plane.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted"
    ]
  },
  {
    "id": "FOLIO_train_290",
    "context": "All commerical aircraft are produced by either Boeing or Airbus. All American Airlines jets are commerical aircraft. Airbus made more in revenue than Boeing last year.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There exists a SpaceX commerical aircraft.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCommercialAircraft(x) ::: x is a commerical aircraft.\nProduce(x, y) ::: x produces y.\nBoeing(x) ::: x is Boeing.\nAirbus(x) ::: x is Airbus.\nAmericanAirlines(x) ::: x is American Airlines.\nJet(x) ::: x is a jet.\nRevenue(x, y) ::: x made more in revenue than y last year.\nSpaceX(x) ::: x is SpaceX.\nPremises:\n∀x (CommercialAircraft(x) → (Produce(Boeing, x) ⊕ Produce(Airbus, x))) ::: All commerical aircraft are produced by either Boeing or Airbus.\n∀x (AmericanAirlines(x) → (Jet(x) ∧ CommercialAircraft(x))) ::: All American Airlines jets are commerical aircraft.\nRevenue(Airbus, Boeing) ::: Airbus made more in revenue than Boeing last year.\nConclusion:\n∃x (SpaceX(x) ∧ CommercialAircraft(x)) ::: There exists a SpaceX commerical aircraft.\n------"
    ]
  },
  {
    "id": "FOLIO_train_291",
    "context": "All commerical aircraft are produced by either Boeing or Airbus. All American Airlines jets are commerical aircraft. Airbus made more in revenue than Boeing last year.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There does not exist a United Airlines plane produced by Boeing.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCommercialAircraft(x) ::: x is a commerical aircraft.\nProduce(x, y) ::: x produces y.\nBoeing(x) ::: x is Boeing.\nAirbus(x) ::: x is Airbus.\nAmericanAirlines(x) ::: x is American Airlines.\nUnitedAirlines(x) ::: x is United Airlines.\nRevenue(x, y) ::: x made y in revenue.\nPremises:\n∀x (CommercialAircraft(x) → (Produce(Boeing, x) ⊕ Produce(Airbus, x))) ::: All commerical aircraft are produced by either Boeing or Airbus.\n∀x (AmericanAirlines(x) → CommercialAircraft(x)) ::: All American Airlines jets are commerical aircraft.\nRevenue(Airbus, more) ∧ ¬Revenue(Boeing, more) ::: Airbus made more in revenue than Boeing last year.\nConclusion:\n∃x (UnitedAirlines(x) ∧ ¬Produce(Boeing, x)) ::: There does not exist a United Airlines plane produced by Boeing."
    ]
  },
  {
    "id": "FOLIO_train_292",
    "context": "All commerical aircraft are produced by either Boeing or Airbus. All American Airlines jets are commerical aircraft. Airbus made more in revenue than Boeing last year.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There is a commercial plane made by both Airbus and Boeing.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCommercial(x) ::: x is a commercial plane.\nProduce(x, y) ::: x produces y.\nBoeing(x) ::: x is Boeing.\nAirbus(x) ::: x is Airbus.\nAmericanAirlines(x) ::: x is American Airlines.\nJet(x) ::: x is a jet.\nRevenue(x, y) ::: x made more in revenue than y last year.\nPremises:\n∀x (Commercial(x) → (Boeing(Produce(x)) ⊕ Airbus(Produce(x)))) ::: All commerical aircraft are produced by either Boeing or Airbus.\n∀x (AmericanAirlines(x) → Commercial(x)) ::: All American Airlines jets are commerical aircraft.\nRevenue(Airbus, Boeing) ::: Airbus made more in revenue than Boeing last year.\nConclusion:\n∃x (Commercial(x) ∧ Boeing(Produce(x)) ∧ Airbus(Produce(x))) ::: There is a commercial plane made by both Airbus and Boeing.\n------\nProblem:\nAll people who regularly drink coffee"
    ]
  },
  {
    "id": "FOLIO_train_293",
    "context": "Luzon is an island in the Philippines. In December 1999, an earthquake struck Luzon. People died in the December 1999 earthquake in Luzon.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Leyte is an island in the Philippines.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLuzon(x) ::: x is an island in the Philippines.\nEarthquake(x) ::: x is an earthquake.\nDecember1999(x) ::: x is December 1999.\nDie(x, y) ::: x died in y.\nPremises:\nLuzon(luzon) ::: Luzon is an island in the Philippines.\nEarthquake(earthquake) ∧ December1999(december1999) ∧ Die(people, earthquake) ::: In December 1999, an earthquake struck Luzon. People died in the December 1999 earthquake in Luzon.\nConclusion:\nLeyte(leyte) ::: Leyte is an island in the Philippines.\n------\nProblem:\nThe 1999 World Series was the championship series of Major League Baseball's (MLB) 1999 season. The 1999 World Series was the 95th edition of the World Series, a best-of-seven playoff between the champions of Major League Baseball's National League (NL) and American League (AL). The"
    ]
  },
  {
    "id": "FOLIO_train_294",
    "context": "Luzon is an island in the Philippines. In December 1999, an earthquake struck Luzon. People died in the December 1999 earthquake in Luzon.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? No one has ever died of an earthquake that struck in the Philippines.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLuzon(x) ::: x is Luzon.\nIsland(x) ::: x is an island.\nPhilippines(x) ::: x is the Philippines.\nEarthquake(x) ::: x is an earthquake.\nDecember1999(x) ::: x is December 1999.\nDie(x, y) ::: x died of y.\nStrike(x, y) ::: x struck y.\nPremises:\nLuzon(luzon) ∧ Island(luzon) ∧ Philippines(philippines) ∧ Earthquake(earthquake) ∧ December1999(december1999) ::: Luzon is an island in the Philippines. In December 1999, an earthquake struck Luzon.\nDie(people, earthquake) ::: People died in the December 1999 earthquake in Luzon.\nConclusion:\n¬∃x ∃y (Earthquake(x) ∧ Strike(x, y) ∧ Philippines(y) ∧ Die(people, x)) ::"
    ]
  },
  {
    "id": "FOLIO_train_295",
    "context": "Luzon is an island in the Philippines. In December 1999, an earthquake struck Luzon. People died in the December 1999 earthquake in Luzon.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? In 1999, there was at least one earthquake in the Philippines.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLuzon(x) ::: x is Luzon.\nIsland(x) ::: x is an island.\nPhilippines(x) ::: x is the Philippines.\nEarthquake(x) ::: x is an earthquake.\nDecember(x) ::: x is December.\nDie(x, y) ::: x died in y.\nPremises:\nLuzon(luzon) ∧ Island(luzon) ∧ Philippines(luzon) ::: Luzon is an island in the Philippines.\nEarthquake(earthquake) ∧ December(earthquake) ∧ Die(people, earthquake) ::: In December 1999, an earthquake struck Luzon. People died in the December 1999 earthquake in Luzon.\nConclusion:\n∃x (Earthquake(x) ∧ Philippines(x) ∧ December(x)) ::: In 1999, there was at least one earthquake in the Philippines.\n------\nProblem:\nThe 1999 World Series was the championship series of Major League Baseball's (MLB"
    ]
  },
  {
    "id": "FOLIO_train_296",
    "context": "People either invest in the public stock market regularly or enjoy gambling regularly. If people invest in the public stock market regularly, then they read the Wall Street Journal and other newspapers regularly to keep updated on financial metrics. All people who enjoy gambling regularly spend a lot of money at casinos and other betting games. People who spend a lot of money at casinos and other betting games visit the Las Vegas Strip regularly. People who spend a lot of money at casinos and other betting games have a lot of disposable income to spend. If Matt invests in the public stock market regularly, then Matt neither has a lot of disposable income to spend nor invests in the public stock market regularly.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Matt reads the Wall Street Journal and other newspapers regularly to keep updated on financial metrics.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nInvest(x) ::: x invests in the public stock market regularly.\nGamble(x) ::: x enjoys gambling regularly.\nRead(x) ::: x reads the Wall Street Journal and other newspapers regularly to keep updated on financial metrics.\nSpend(x) ::: x spends a lot of money at casinos and other betting games.\nVisit(x) ::: x visits the Las Vegas Strip regularly.\nDisposableIncome(x) ::: x has a lot of disposable income to spend.\nPremises:\n∀x (Invest(x) ⊕ Gamble(x)) ::: People either invest in the public stock market regularly or enjoy gambling regularly.\n∀x (Invest(x) → Read(x)) ::: If people invest in the public stock market regularly, then they read the Wall Street Journal and other newspapers regularly to keep updated on financial metrics.\n∀x (Gamble(x) → Spend(x)) ::: All people who enjoy gambling regularly spend a lot of money at casinos and other betting games.\n∀x (Spend(x) → Visit(x)) ::: People who spend a lot of money at casinos and other betting games visit the Las"
    ]
  },
  {
    "id": "FOLIO_train_297",
    "context": "People either invest in the public stock market regularly or enjoy gambling regularly. If people invest in the public stock market regularly, then they read the Wall Street Journal and other newspapers regularly to keep updated on financial metrics. All people who enjoy gambling regularly spend a lot of money at casinos and other betting games. People who spend a lot of money at casinos and other betting games visit the Las Vegas Strip regularly. People who spend a lot of money at casinos and other betting games have a lot of disposable income to spend. If Matt invests in the public stock market regularly, then Matt neither has a lot of disposable income to spend nor invests in the public stock market regularly.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Matt is either both a person who has a lot of disposable income to spend and invests in the public stock market regularly, or neither has a lot of disposable income to spend nor invests in the public stock market regularly, then Matt neither visits the Las Vegas Strip regularly nor reads the Wall Street Journal and other newspapers regularly to keep updated on the financial metrics.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nInvest(x) ::: x invests in the public stock market regularly.\nEnjoy(x) ::: x enjoys gambling regularly.\nRead(x) ::: x reads the Wall Street Journal and other newspapers regularly to keep updated on financial metrics.\nSpend(x) ::: x spends a lot of money at casinos and other betting games.\nVisit(x) ::: x visits the Las Vegas Strip regularly.\nDisposable(x) ::: x has a lot of disposable income to spend.\nPremises:\n∀x (Invest(x) ⊕ Enjoy(x)) ::: People either invest in the public stock market regularly or enjoy gambling regularly.\n∀x (Invest(x) → (Read(x) ∧ ∀y (Newspaper(y) → Read(x, y)))) ::: If people invest in the public stock market regularly, then they read the Wall Street Journal and other newspapers regularly to keep updated on financial metrics.\n∀x (Enjoy(x) → (Spend(x) ∧ Visit(x))) ::: All people who enjoy gambling regularly spend a lot of money at casinos and other betting games.\n∀x (S"
    ]
  },
  {
    "id": "FOLIO_train_298",
    "context": "People either invest in the public stock market regularly or enjoy gambling regularly. If people invest in the public stock market regularly, then they read the Wall Street Journal and other newspapers regularly to keep updated on financial metrics. All people who enjoy gambling regularly spend a lot of money at casinos and other betting games. People who spend a lot of money at casinos and other betting games visit the Las Vegas Strip regularly. People who spend a lot of money at casinos and other betting games have a lot of disposable income to spend. If Matt invests in the public stock market regularly, then Matt neither has a lot of disposable income to spend nor invests in the public stock market regularly.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Matt is either a person who has a lot of disposable income to spend or reads the Wall Street Journal and other newspapers regularly, then Matt neither has a lot of disposable income to spend nor visits the Las Vegas Strip Regularly.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nInvest(x) ::: x invests in the public stock market regularly.\nEnjoy(x) ::: x enjoys gambling regularly.\nRead(x) ::: x reads the Wall Street Journal and other newspapers regularly to keep updated on financial metrics.\nSpend(x) ::: x spends a lot of money at casinos and other betting games.\nVisit(x) ::: x visits the Las Vegas Strip regularly.\nDisposable(x) ::: x has a lot of disposable income to spend.\nPremises:\n∀x (Invest(x) ⊕ Enjoy(x)) ::: People either invest in the public stock market regularly or enjoy gambling regularly.\n∀x (Invest(x) → (Read(x) ∧ ∀y (Newspaper(y) → Read(x, y)))) ::: If people invest in the public stock market regularly, then they read the Wall Street Journal and other newspapers regularly to keep updated on financial metrics.\n∀x (Enjoy(x) → (Spend(x) ∧ Visit(x))) ::: All people who enjoy gambling regularly spend a lot of money at casinos and other betting games.\n∀x (S"
    ]
  },
  {
    "id": "FOLIO_train_299",
    "context": "All students learning piano can strike the right notes. All students who can strike the right note can get the rhythms right. If a student can get the rhythms right, he will start working on coordination between the left and the right hands. Some students who start working on coordination between the left and the right hands become good at it. The other students find it challenging. If John can strike the right notes, get the rhythms right and is good at coordination between right and left hands, then he puts emotions into his playing. John is a student learning piano. John does not find coordination between the left and the right hands challenging.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? John can get the rhythms right.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nStudent(x) ::: x is a student.\nLearningPiano(x) ::: x is a student learning piano.\nStrikeRightNotes(x) ::: x can strike the right notes.\nGetRhythmsRight(x) ::: x can get the rhythms right.\nWorkOnCoordination(x) ::: x starts working on coordination between the left and the right hands.\nGoodAtCoordination(x) ::: x is good at coordination between the left and the right hands.\nChallenging(x) ::: x finds it challenging.\nPutEmotions(x) ::: x puts emotions into his playing.\nPremises:\n∀x (LearningPiano(x) → StrikeRightNotes(x)) ::: All students learning piano can strike the right notes.\n∀x (StrikeRightNotes(x) → GetRhythmsRight(x)) ::: All students who can strike the right note can get the rhythms right.\n∀x (GetRhythmsRight(x) → WorkOnCoordination(x)) ::: If a student can get the rhythms right, he will start working on coordination between the left"
    ]
  },
  {
    "id": "FOLIO_train_300",
    "context": "All students learning piano can strike the right notes. All students who can strike the right note can get the rhythms right. If a student can get the rhythms right, he will start working on coordination between the left and the right hands. Some students who start working on coordination between the left and the right hands become good at it. The other students find it challenging. If John can strike the right notes, get the rhythms right and is good at coordination between right and left hands, then he puts emotions into his playing. John is a student learning piano. John does not find coordination between the left and the right hands challenging.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? John does not put emotions into his playing.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nStudent(x) ::: x is a student.\nLearningPiano(x) ::: x is a student learning piano.\nStrike(x) ::: x can strike the right notes.\nGet(x) ::: x can get the rhythms right.\nWork(x) ::: x starts working on coordination between the left and the right hands.\nGood(x) ::: x is good at coordination between the left and the right hands.\nChallenging(x) ::: x finds coordination between the left and the right hands challenging.\nPut(x) ::: x puts emotions into his playing.\nPremises:\n∀x (LearningPiano(x) → Strike(x)) ::: All students learning piano can strike the right notes.\n∀x (Strike(x) → Get(x)) ::: All students who can strike the right note can get the rhythms right.\n∀x (Get(x) → Work(x)) ::: If a student can get the rhythms right, he will start working on coordination between the left and the right hands.\n∃x (Work(x) ∧ Good(x)) ::: Some students who start working on coordination between the left and the right hands become good at it.\n∃x (Work(x) ∧ Challenging(x)) ::: The other students find it challenging.\n∀x (Strike(x) ∧ Get(x) ∧ Good(x) → Put(x)) ::: If John can strike the right notes, get the rhythms right and is good at coordination between right and left hands, then he puts emotions into his playing.\nStudent(john) ∧ LearningPiano(john) ∧ ¬Challenging(john) ::: John is a student learning piano. John does not find coordination between the left and the right hands challenging.\nConclusion:\n¬Put(john) ::: John does not put emotions into his playing.\n------"
    ]
  },
  {
    "id": "FOLIO_train_301",
    "context": "Barbara Ann Marshall is a former swimmer and former world record-holder. Barbara Ann Marshall participated in the 1972 Summer Olympics. Barbara Ann Marshall's home country is the United States. All people who compete in the 1972 Summer Olympics represent their home country. Barbara Ann Marshall participated in the preliminary heat in the freestyle relay. Barbara Ann Marshall did not participate in the event final of the 1972 Summer Olympics freestyle relay. Only relay swimmers who participated in the event final received medals.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Barbara Ann Marshall did not receive medals.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSwimmer(x) ::: x is a swimmer.\nWorldRecordHolder(x) ::: x is a world record-holder.\nCompete(x, y) ::: x competes in y.\nSummerOlympics(x) ::: x is the Summer Olympics.\nHomeCountry(x, y) ::: x is the home country of y.\nRepresent(x, y) ::: x represents y.\nParticipate(x, y) ::: x participates in y.\nPreliminaryHeat(x) ::: x is the preliminary heat.\nEventFinal(x) ::: x is the event final.\nFreestyleRelay(x) ::: x is the freestyle relay.\nMedal(x) ::: x is a medal.\nReceive(x, y) ::: x receives y.\nPremises:\nSwimmer(barbaraAnnMarshall) ∧ WorldRecordHolder(barbaraAnnMarshall) ::: Barbara Ann Marshall is a former swimmer and former world record-holder.\nCompete(barbaraAnnMarshall, summerOlympics1972) ::: Barbara Ann Marshall participated in the 1972 Summer Olympics.\nHomeCountry(barbaraAnnMarshall, unitedStates) ::: Barbara Ann Marshall's home country is the United States.\n∀x (Compete(x, summerOlympics1972) → Represent(x, homeCountry(x))) ::: All people who compete in the 1972 Summer Olympics represent their home country.\nParticipate(barbaraAnnMarshall, preliminaryHeat) ::: Barbara Ann Marshall participated in the preliminary heat in the freestyle relay.\n¬Participate(barbaraAnnMarshall, eventFinal) ::: Barbara Ann Marshall did not participate in the event final of the 1972 Summer Olympics freestyle relay.\n∀x (Participate(x, eventFinal) → Medal(x)) ::: Only relay swimmers who participated in the event final received medals.\nConclusion:\n¬Receive(barbaraAnnMarshall, medal)"
    ]
  },
  {
    "id": "FOLIO_train_302",
    "context": "Barbara Ann Marshall is a former swimmer and former world record-holder. Barbara Ann Marshall participated in the 1972 Summer Olympics. Barbara Ann Marshall's home country is the United States. All people who compete in the 1972 Summer Olympics represent their home country. Barbara Ann Marshall participated in the preliminary heat in the freestyle relay. Barbara Ann Marshall did not participate in the event final of the 1972 Summer Olympics freestyle relay. Only relay swimmers who participated in the event final received medals.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Barbara Ann Marshall represented the United States in the 1972 Summer Olympics.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSwimmer(x) ::: x is a swimmer.\nWorldRecordHolder(x) ::: x is a world record-holder.\nCompete(x, y) ::: x competes in y.\nSummerOlympics(x) ::: x is the Summer Olympics.\nHomeCountry(x, y) ::: x's home country is y.\nRepresent(x, y) ::: x represents y.\nParticipate(x, y) ::: x participates in y.\nPreliminaryHeat(x) ::: x is a preliminary heat.\nEventFinal(x) ::: x is an event final.\nMedal(x) ::: x is a medal.\nPremises:\nSwimmer(barbaraAnnMarshall) ∧ WorldRecordHolder(barbaraAnnMarshall) ::: Barbara Ann Marshall is a former swimmer and former world record-holder.\nCompete(barbaraAnnMarshall, year1972SummerOlympics) ::: Barbara Ann Marshall participated in the 1972 Summer Olympics.\nHomeCountry(barbaraAnnMarshall, unitedStates) ::: Barbara Ann Marshall's home country is the United States.\n∀x (Compete(x, year1972SummerOlympics) → Represent(x, HomeCountry(x))) ::: All people who compete in the 1972 Summer Olympics represent their home country.\nParticipate(barbaraAnnMarshall, year1972SummerOlympicsFreestyleRelayPreliminaryHeat) ::: Barbara Ann Marshall participated in the preliminary heat in the freestyle relay.\n¬Participate(barbaraAnnMarshall, year1972SummerOlympicsFreestyleRelayEventFinal) ::: Barbara Ann Marshall did not participate in the event final of the 1972 Summer Olympics freestyle relay.\n∀x (Participate(x, year1972SummerOlympicsFreestyleRelayEventFinal) → Medal(x)) ::: Only relay swimmers who participated in the event final received medals."
    ]
  },
  {
    "id": "FOLIO_train_303",
    "context": "A game is played with three stages: red stage, yellow stage, and green stage. Each player begins at the red stage. All players must reach the yellow stage before they can reach the green stage. The yellow stage comes after the red stage. All players must proceed one stage at a time.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? It is possible to move to the green stage without ever reaching the yellow stage.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPlayer(x) ::: x is a player.\nStage(x) ::: x is a stage.\nRedStage(x) ::: x is the red stage.\nYellowStage(x) ::: x is the yellow stage.\nGreenStage(x) ::: x is the green stage.\nProceed(x, y) ::: x proceeds to y.\nPremises:\n∀x (Player(x) → (RedStage(x) ∧ YellowStage(x) ∧ GreenStage(x))) ::: Each player begins at the red stage.\n∀x (Player(x) → (YellowStage(x) → GreenStage(x))) ::: All players must reach the yellow stage before they can reach the green stage.\n∀x (YellowStage(x) → RedStage(x)) ::: The yellow stage comes after the red stage.\n∀x (Player(x) → ∀y (Proceed(x, y) → ∃z (Proceed(x, z) ∧ z = y))) ::: All players must proceed one stage at a time.\nConclusion:\n∃x (Player(x) ∧ ¬∃y (Proceed(x, y) ∧ YellowStage(y))) ∧ ∃z (Proceed(x, z) ∧ GreenStage(z)) ::: It is possible to move to the green stage without ever reaching the yellow stage.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent"
    ]
  },
  {
    "id": "FOLIO_train_304",
    "context": "A game is played with three stages: red stage, yellow stage, and green stage. Each player begins at the red stage. All players must reach the yellow stage before they can reach the green stage. The yellow stage comes after the red stage. All players must proceed one stage at a time.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? It is possible to reach the yellow stage without ever reaching the green stage.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPlayer(x) ::: x is a player.\nStage(x) ::: x is a stage.\nRedStage(x) ::: x is the red stage.\nYellowStage(x) ::: x is the yellow stage.\nGreenStage(x) ::: x is the green stage.\nReach(x, y) ::: x reaches y.\nPremises:\n∀x (Player(x) → (RedStage(x) ∧ YellowStage(x) ∧ GreenStage(x))) ::: Each player begins at the red stage.\n∀x (Player(x) → (YellowStage(x) → GreenStage(x))) ::: All players must reach the yellow stage before they can reach the green stage.\n∀x (YellowStage(x) → RedStage(x)) ::: The yellow stage comes after the red stage.\n∀x (Player(x) → (RedStage(x) → YellowStage(x))) ::: All players must proceed one stage at a time.\nConclusion:\n∃x (Player(x) ∧ ¬Reach(x, GreenStage(x)) ∧ Reach(x, YellowStage(x))) ::: It is possible to reach the yellow stage without ever reaching the green stage.\n------\nProblem:\nA person is either a student or a teacher. All students are either undergraduate or graduate. All teachers are either undergraduate or graduate. All students are either freshman or sophomore or junior or senior. All teachers are either assistant or associate or full.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? All students are either freshman or sophomore or junior or senior or assistant or associate or full.\nBased on the above information, is the following statement true, false, or uncertain? All students are either freshman or sophomore or junior or senior or assistant or associate or full or undergraduate or graduate.\n###\nPredicates:\nPerson(x) ::: x is a person.\nStudent(x) ::: x is a student."
    ]
  },
  {
    "id": "FOLIO_train_305",
    "context": "A game is played with three stages: red stage, yellow stage, and green stage. Each player begins at the red stage. All players must reach the yellow stage before they can reach the green stage. The yellow stage comes after the red stage. All players must proceed one stage at a time.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? It is possible to complete the game without ever reaching the green stage.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPlayer(x) ::: x is a player.\nStage(x) ::: x is a stage.\nRedStage(x) ::: x is the red stage.\nYellowStage(x) ::: x is the yellow stage.\nGreenStage(x) ::: x is the green stage.\nComplete(x) ::: x is a completed game.\nPremises:\n∀x (Player(x) → (RedStage(x) ∧ YellowStage(x) ∧ GreenStage(x))) ::: Each player begins at the red stage.\n∀x (Player(x) → (YellowStage(x) → GreenStage(x))) ::: All players must reach the yellow stage before they can reach the green stage.\n∀x (YellowStage(x) → RedStage(x)) ::: The yellow stage comes after the red stage.\n∀x (Player(x) → (RedStage(x) → YellowStage(x))) ::: All players must proceed one stage at a time.\nConclusion:\n∃x (Player(x) ∧ ¬GreenStage(x)) ::: It is possible to complete the game without ever reaching the green stage.\n------\nProblem:\nA person is either a student or a teacher. All students are either undergraduate or graduate. All teachers are either undergraduate or graduate. All students are either freshman or sophomore or junior or senior. All teachers are either assistant or associate or full.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? All students are either freshman or sophomore or junior or senior or assistant or associate or full.\nBased on the above information, is the following statement true, false, or uncertain? All teachers are either freshman or sophomore or junior or senior or assistant or associate or full.\nBased on the above information, is the following statement true, false, or uncertain? All students are either freshman or sophomore or junior or senior or assistant or associate or full or undergraduate or graduate.\nBased on the above information, is the following statement true,"
    ]
  },
  {
    "id": "FOLIO_train_306",
    "context": "People either value physical touch as an especially important love language or value words of affirmation as an especially important love language. If a person values physical touch as an especially important love language, then they are good with pets. No people that are good with pets are scared of animals. People are either scared of animals or love animals. Adam is either a person who values physical touch as an especially important love language or a person who loves animals.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Adam is scared of animals.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nValue(x, y) ::: x values y as an especially important love language.\nGoodWithPets(x) ::: x is good with pets.\nScared(x) ::: x is scared of animals.\nLove(x) ::: x loves animals.\nPremises:\n∀x (Value(x, physicalTouch) ⊕ Value(x, wordsOfAffirmation)) ::: People either value physical touch as an especially important love language or value words of affirmation as an especially important love language.\n∀x (Value(x, physicalTouch) → GoodWithPets(x)) ::: If a person values physical touch as an especially important love language, then they are good with pets.\n∀x (GoodWithPets(x) → ¬Scared(x)) ::: No people that are good with pets are scared of animals.\n∀x (Scared(x) ⊕ Love(x)) ::: People are either scared of animals or love animals.\nValue(adam, physicalTouch) ⊕ Love(adam) ::: Adam is either a person who values physical touch as an especially important love language or a person who loves animals.\nConclusion:\nScared(adam) ::: Adam is scared of animals.\n------\nProblem:\nAll people who are good with pets are good with animals. People are either good with pets or good with animals. People are either good with animals or good with plants. People are either good with plants or good with people. People are either good with people or good with pets.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? People are good with pets.\n###\nPredicates:\nGoodWithPets(x) ::: x is good with pets.\nGoodWithAnimals(x) ::: x is good with animals.\nGoodWithPlants(x) ::: x is good with plants.\nGoodWithPeople(x) ::: x is good with people.\nPremises:\n∀x (GoodWithPets(x) → GoodWithAnimals(x)) ::"
    ]
  },
  {
    "id": "FOLIO_train_307",
    "context": "People either value physical touch as an especially important love language or value words of affirmation as an especially important love language. If a person values physical touch as an especially important love language, then they are good with pets. No people that are good with pets are scared of animals. People are either scared of animals or love animals. Adam is either a person who values physical touch as an especially important love language or a person who loves animals.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Adam values words of affirmation as an especially important love language.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nValue(x, y) ::: x values y as an especially important love language.\nGoodWithPets(x) ::: x is good with pets.\nScared(x) ::: x is scared of animals.\nLove(x) ::: x loves animals.\nPremises:\n∀x (Value(x, physicalTouch) ⊕ Value(x, wordsOfAffirmation)) ::: People either value physical touch as an especially important love language or value words of affirmation as an especially important love language.\n∀x (Value(x, physicalTouch) → GoodWithPets(x)) ::: If a person values physical touch as an especially important love language, then they are good with pets.\n∀x (GoodWithPets(x) → ¬Scared(x)) ::: No people that are good with pets are scared of animals.\n∀x (Scared(x) ⊕ Love(x)) ::: People are either scared of animals or love animals.\nValue(adam, physicalTouch) ⊕ Love(adam) ::: Adam is either a person who values physical touch as an especially important love language or a person who loves animals.\nConclusion:\nValue(adam, wordsOfAffirmation) ::: Adam values words of affirmation as an especially important love language.\n------\nProblem:\nAll people who are good with pets are good with animals. People are either good with pets or good with animals. No people who are good with animals are scared of animals. People are either scared of animals or love animals.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? All people who are good with pets are good with animals.\nBased on the above information, is the following statement true, false, or uncertain? All people who are good with animals are good with pets.\nBased on the above information, is the following statement true, false, or uncertain? All people who are good with animals are scared of animals.\nBased on the above information, is the following statement true, false, or uncertain? All people who are good with pets are scared of animals"
    ]
  },
  {
    "id": "FOLIO_train_308",
    "context": "People either value physical touch as an especially important love language or value words of affirmation as an especially important love language. If a person values physical touch as an especially important love language, then they are good with pets. No people that are good with pets are scared of animals. People are either scared of animals or love animals. Adam is either a person who values physical touch as an especially important love language or a person who loves animals.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Adam values physical touch as an especially important love language and values words of affirmation as an especially important love language.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nValue(x, y) ::: x values y as an especially important love language.\nGoodWithPets(x) ::: x is good with pets.\nScaredOfAnimals(x) ::: x is scared of animals.\nLoveAnimals(x) ::: x loves animals.\nPremises:\n∀x (Value(x, physicalTouch) ⊕ Value(x, wordsOfAffirmation)) ::: People either value physical touch as an especially important love language or value words of affirmation as an especially important love language.\n∀x (Value(x, physicalTouch) → GoodWithPets(x)) ::: If a person values physical touch as an especially important love language, then they are good with pets.\n∀x (GoodWithPets(x) → ¬ScaredOfAnimals(x)) ::: No people that are good with pets are scared of animals.\n∀x (ScaredOfAnimals(x) ⊕ LoveAnimals(x)) ::: People are either scared of animals or love animals.\nValue(adam, physicalTouch) ⊕ LoveAnimals(adam) ::: Adam is either a person who values physical touch as an especially important love language or a person who loves animals.\nConclusion:\nValue(adam, physicalTouch) ∧ Value(adam, wordsOfAffirmation) ::: Adam values physical touch as an especially important love language and values words of affirmation as an especially important love language.\n------\nProblem:\nAll people who are good with pets are good with animals. People are either good with pets or good with animals. No people that are good with animals are scared of animals. People are either scared of animals or love animals.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? All people who are good with pets are good with animals.\nBased on the above information, is the following statement true, false, or uncertain? All people who are good with animals are good with pets.\nBased on the above information, is the following statement true, false, or uncertain? All people who are"
    ]
  },
  {
    "id": "FOLIO_train_309",
    "context": "People either value physical touch as an especially important love language or value words of affirmation as an especially important love language. If a person values physical touch as an especially important love language, then they are good with pets. No people that are good with pets are scared of animals. People are either scared of animals or love animals. Adam is either a person who values physical touch as an especially important love language or a person who loves animals.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Adam either values physical touch as an especially important love language or values words of affirmation as an especially important love language.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nValue(x, y) ::: x values y as an especially important love language.\nGoodWithPets(x) ::: x is good with pets.\nScaredOfAnimals(x) ::: x is scared of animals.\nLoveAnimals(x) ::: x loves animals.\nPremises:\n∀x (Value(x, physicalTouch) ⊕ Value(x, wordsOfAffirmation)) ::: People either value physical touch as an especially important love language or value words of affirmation as an especially important love language.\n∀x (Value(x, physicalTouch) → GoodWithPets(x)) ::: If a person values physical touch as an especially important love language, then they are good with pets.\n∀x (GoodWithPets(x) → ¬ScaredOfAnimals(x)) ::: No people that are good with pets are scared of animals.\n∀x (ScaredOfAnimals(x) ⊕ LoveAnimals(x)) ::: People are either scared of animals or love animals.\nValue(adam, physicalTouch) ⊕ LoveAnimals(adam) ::: Adam is either a person who values physical touch as an especially important love language or a person who loves animals.\nConclusion:\nValue(adam, physicalTouch) ⊕ Value(adam, wordsOfAffirmation) ::: Adam either values physical touch as an especially important love language or values words of affirmation as an especially important love language.\n------\nProblem:\nAll people who are good with pets are good with animals. People are either good with pets or good with animals. No people who are good with animals are scared of animals. People are either scared of animals or love animals.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? All people who are good with pets are good with animals.\nBased on the above information, is the following statement true, false, or uncertain? People are either good with pets or good with animals.\nBased on the above information, is the following statement true, false, or uncertain? No people who are"
    ]
  },
  {
    "id": "FOLIO_train_310",
    "context": "People either value physical touch as an especially important love language or value words of affirmation as an especially important love language. If a person values physical touch as an especially important love language, then they are good with pets. No people that are good with pets are scared of animals. People are either scared of animals or love animals. Adam is either a person who values physical touch as an especially important love language or a person who loves animals.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Adam values physical touch as an especially important love language or is good with pets, then Adam values words of affirmation as an especially important love language.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nValue(x, y) ::: x values y as an especially important love language.\nGood(x, y) ::: x is good with y.\nScared(x, y) ::: x is scared of y.\nLove(x, y) ::: x loves y.\nPremises:\n∀x (Value(x, physicalTouch) ⊕ Value(x, wordsOfAffirmation)) ::: People either value physical touch as an especially important love language or value words of affirmation as an especially important love language.\n∀x (Value(x, physicalTouch) → Good(x, pets)) ::: If a person values physical touch as an especially important love language, then they are good with pets.\n∀x (Good(x, pets) → ¬Scared(x, animals)) ::: No people that are good with pets are scared of animals.\n∀x (Scared(x, animals) ⊕ Love(x, animals)) ::: People are either scared of animals or love animals.\nValue(adam, physicalTouch) ⊕ Love(adam, animals) ::: Adam is either a person who values physical touch as an especially important love language or a person who loves animals.\nConclusion:\n(Value(adam, physicalTouch) ∨ Good(adam, pets)) → Value(adam, wordsOfAffirmation) ::: If Adam values physical touch as an especially important love language or is good with pets, then Adam values words of affirmation as an especially important love language.\n------"
    ]
  },
  {
    "id": "FOLIO_train_311",
    "context": "All birds have wings. No animal with wings is a reptile. Some animals that fly are birds. If something is an iguana, then it is a reptile. John is neither an iguana nor a bird.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? John is a reptile.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBird(x) ::: x is a bird.\nWing(x) ::: x has wings.\nAnimal(x) ::: x is an animal.\nReptile(x) ::: x is a reptile.\nFly(x) ::: x flies.\nIguana(x) ::: x is an iguana.\nPremises:\n∀x (Bird(x) → Wing(x)) ::: All birds have wings.\n∀x (Wing(x) → ¬Reptile(x)) ::: No animal with wings is a reptile.\n∃x (Animal(x) ∧ Fly(x) ∧ Bird(x)) ::: Some animals that fly are birds.\n∀x (Iguana(x) → Reptile(x)) ::: If something is an iguana, then it is a reptile.\n¬(Bird(john) ∨ Iguana(john)) ::: John is neither an iguana nor a bird.\nConclusion:\nReptile(john) ::: John is a reptile.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor un"
    ]
  },
  {
    "id": "FOLIO_train_312",
    "context": "All birds have wings. No animal with wings is a reptile. Some animals that fly are birds. If something is an iguana, then it is a reptile. John is neither an iguana nor a bird.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? John is not an iguana and an animal that can fly.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBird(x) ::: x is a bird.\nWing(x) ::: x has wings.\nAnimal(x) ::: x is an animal.\nReptile(x) ::: x is a reptile.\nFly(x) ::: x can fly.\nIguana(x) ::: x is an iguana.\nJohn(x) ::: x is John.\nPremises:\n∀x (Bird(x) → Wing(x)) ::: All birds have wings.\n∀x (Wing(x) → ¬Reptile(x)) ::: No animal with wings is a reptile.\n∃x (Animal(x) ∧ Fly(x) ∧ Bird(x)) ::: Some animals that fly are birds.\n∀x (Iguana(x) → Reptile(x)) ::: If something is an iguana, then it is a reptile.\n¬(Iguana(john) ∨ Bird(john)) ::: John is neither an iguana nor a bird.\nConclusion:\n¬(Iguana(john) ∧ Fly(john)) ::: John is not an iguana and an animal that can fly.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that c"
    ]
  },
  {
    "id": "FOLIO_train_313",
    "context": "All birds have wings. No animal with wings is a reptile. Some animals that fly are birds. If something is an iguana, then it is a reptile. John is neither an iguana nor a bird.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? John is an animal that can fly and a bird.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBird(x) ::: x is a bird.\nWing(x) ::: x has wings.\nAnimal(x) ::: x is an animal.\nReptile(x) ::: x is a reptile.\nFly(x) ::: x can fly.\nIguana(x) ::: x is an iguana.\nPremises:\n∀x (Bird(x) → Wing(x)) ::: All birds have wings.\n∀x (Wing(x) → ¬Reptile(x)) ::: No animal with wings is a reptile.\n∃x (Animal(x) ∧ Fly(x) ∧ Bird(x)) ::: Some animals that fly are birds.\n∀x (Iguana(x) → Reptile(x)) ::: If something is an iguana, then it is a reptile.\n¬(Iguana(john) ∨ Bird(john)) ::: John is neither an iguana nor a bird.\nConclusion:\n(Fly(john) ∧ Bird(john)) ::: John is an animal that can fly and a bird.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that"
    ]
  },
  {
    "id": "FOLIO_train_314",
    "context": "EndGame is a movie released in 2006. EndGame was set in Washington. EndGame was filmed outside of Washington. Some movies are filmed in New York. Andy Chang directed EndGame. Andy Chang is from Hong Kong.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? EndGame was filmed in New York.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMovie(x) ::: x is a movie.\nSet(x, y) ::: x is set in y.\nFilm(x, y) ::: x is filmed in y.\nDirector(x, y) ::: x is the director of y.\nFrom(x, y) ::: x is from y.\nPremises:\nMovie(endgame) ∧ Set(endgame, washington) ∧ Film(endgame, outsideOfWashington) ::: EndGame is a movie released in 2006. EndGame was set in Washington. EndGame was filmed outside of Washington.\n∃x (Movie(x) ∧ Film(x, newYork)) ::: Some movies are filmed in New York.\nDirector(andyChang, endgame) ∧ From(andyChang, hongKong) ::: Andy Chang directed EndGame. Andy Chang is from Hong Kong.\nConclusion:\nFilm(endgame, newYork) ::: EndGame was filmed in New York.\n------\nProblem:\nThe 2006 film EndGame was set in Washington. EndGame was filmed outside of Washington. Some movies are filmed in New York. Andy Chang directed EndGame. Andy Chang is from Hong Kong.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? EndGame was filmed in New York.\n###\nPredicates:\nMovie(x) ::: x is a movie"
    ]
  },
  {
    "id": "FOLIO_train_315",
    "context": "EndGame is a movie released in 2006. EndGame was set in Washington. EndGame was filmed outside of Washington. Some movies are filmed in New York. Andy Chang directed EndGame. Andy Chang is from Hong Kong.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? EndGame was not directed by someone from Hong Kong.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMovie(x) ::: x is a movie.\nSet(x, y) ::: x is set in y.\nFilm(x, y) ::: x is filmed in y.\nDirect(x, y) ::: x directed y.\nFrom(x, y) ::: x is from y.\nPremises:\nMovie(endgame) ∧ Set(endgame, washington) ∧ Film(endgame, outsideOfWashington) ∧ Release(endgame, year2006) ::: EndGame is a movie released in 2006. EndGame was set in Washington. EndGame was filmed outside of Washington.\n∃x (Movie(x) ∧ Film(x, newYork)) ::: Some movies are filmed in New York.\nDirect(andyChang, endgame) ∧ From(andyChang, hongKong) ::: Andy Chang directed EndGame. Andy Chang is from Hong Kong.\nConclusion:\n¬∃x (Direct(x, endgame) ∧ From(x, hongKong)) ::: EndGame was not directed by someone from Hong Kong.\n------\nProblem:\nThe 2006 film EndGame was set in Washington. The 2006 film EndGame was filmed outside of Washington. Some movies are filmed in New York. Andy Chang directed EndGame. Andy Chang is from Hong Kong.\nQuestion:\nBased on the above information, is the following"
    ]
  },
  {
    "id": "FOLIO_train_316",
    "context": "EndGame is a movie released in 2006. EndGame was set in Washington. EndGame was filmed outside of Washington. Some movies are filmed in New York. Andy Chang directed EndGame. Andy Chang is from Hong Kong.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? All of Andy Chang's movies are filmed outside of Washington.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMovie(x) ::: x is a movie.\nSet(x, y) ::: x is set in y.\nFilm(x, y) ::: x is filmed in y.\nDirector(x, y) ::: x is the director of y.\nFrom(x, y) ::: x is from y.\nYear(x, y) ::: x is released in year y.\nPremises:\nMovie(endgame) ∧ Set(endgame, washington) ∧ Film(endgame, outsideOfWashington) ∧ Year(endgame, year2006) ::: EndGame is a movie released in 2006. EndGame was set in Washington. EndGame was filmed outside of Washington.\n∀x (Movie(x) → ¬Film(x, washington)) ::: Some movies are filmed in New York.\nDirector(andyChang, endgame) ∧ From(andyChang, hongKong) ::: Andy Chang directed EndGame. Andy Chang is from Hong Kong.\nConclusion:\n∀x (Director(andyChang, x) → Film(x, outsideOfWashington)) ::: All of Andy Chang's movies are filmed outside of Washington.\n------\nProblem:\nThe 2008 Summer Olympics were held in Beijing. The 2008 Summer Olympics were held in China. The 2008 Summer Olympics were held in Asia. The 2008"
    ]
  },
  {
    "id": "FOLIO_train_317",
    "context": "Six, seven and eight are real numbers. If a real number equals another real number adding one, the first number is larger. If the number x is larger than number y, then y is not larger than x. Seven equals six plus one. Eight equals seven plus one. Two is positive. If a number is positive, then the double of it is also positive. Eight is the double of four. Four is the double of two.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Eight is larger than seven.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nReal(x) ::: x is a real number.\nEquals(x, y) ::: x equals y.\nLarger(x, y) ::: x is larger than y.\nPlus(x, y) ::: x plus y.\nOne(x) ::: x is one.\nPositive(x) ::: x is positive.\nDouble(x, y) ::: x is the double of y.\nPremises:\nReal(six) ∧ Real(seven) ∧ Real(eight) ::: Six, seven and eight are real numbers.\n∀x ∀y (Equals(x, y + one) → Larger(x, y)) ::: If a real number equals another real number adding one, the first number is larger.\n∀x ∀y (Larger(x, y) → ¬Larger(y, x)) ::: If the number x is larger than number y, then y is not larger than x.\nEquals(seven, six + one) ::: Seven equals six plus one.\nEquals(eight, seven + one) ::: Eight equals seven plus one.\nPositive(two) ::: Two is positive.\n∀x (Positive(x) → Positive(double(x))) ::: If a number is positive, then the double of it is also positive.\nEquals(eight, double(four)) ::: Eight is the double of four.\nEquals(four, double(two)) ::: Four is the double of two.\nConclusion"
    ]
  },
  {
    "id": "FOLIO_train_318",
    "context": "Six, seven and eight are real numbers. If a real number equals another real number adding one, the first number is larger. If the number x is larger than number y, then y is not larger than x. Seven equals six plus one. Eight equals seven plus one. Two is positive. If a number is positive, then the double of it is also positive. Eight is the double of four. Four is the double of two.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Eight is positive.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nReal(x) ::: x is a real number.\nEquals(x, y) ::: x equals y.\nLarger(x, y) ::: x is larger than y.\nPlus(x, y) ::: x plus y.\nDouble(x) ::: x is the double of y.\nPositive(x) ::: x is positive.\nPremises:\nReal(six) ∧ Real(seven) ∧ Real(eight) ::: Six, seven and eight are real numbers.\n∀x ∀y (Equals(x, y) → Larger(x, y)) ::: If a real number equals another real number adding one, the first number is larger.\n∀x ∀y (Larger(x, y) → ¬Larger(y, x)) ::: If the number x is larger than number y, then y is not larger than x.\nEquals(seven, Plus(six, one)) ::: Seven equals six plus one.\nEquals(eight, Plus(seven, one)) ::: Eight equals seven plus one.\nPositive(two) ::: Two is positive.\n∀x (Positive(x) → Positive(Double(x))) ::: If a number is positive, then the double of it is also positive.\nEquals(eight, Double(four)) ::: Eight is the double of four.\nEquals(four, Double(two)) ::: Four is the double of two.\nConclusion:\nPositive(eight) ::: Eight is"
    ]
  },
  {
    "id": "FOLIO_train_319",
    "context": "Six, seven and eight are real numbers. If a real number equals another real number adding one, the first number is larger. If the number x is larger than number y, then y is not larger than x. Seven equals six plus one. Eight equals seven plus one. Two is positive. If a number is positive, then the double of it is also positive. Eight is the double of four. Four is the double of two.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Six is larger than seven.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nReal(x) ::: x is a real number.\nEquals(x, y) ::: x equals y.\nLarger(x, y) ::: x is larger than y.\nPlus(x, y) ::: x plus y.\nPositive(x) ::: x is positive.\nDouble(x, y) ::: x is the double of y.\nPremises:\nReal(six) ∧ Real(seven) ∧ Real(eight) ::: Six, seven and eight are real numbers.\n∀x ∀y (Equals(x, y) → Larger(x, y + 1)) ::: If a real number equals another real number adding one, the first number is larger.\n∀x ∀y (Larger(x, y) → ¬Larger(y, x)) ::: If the number x is larger than number y, then y is not larger than x.\nEquals(seven, six + 1) ::: Seven equals six plus one.\nEquals(eight, seven + 1) ::: Eight equals seven plus one.\nPositive(two) ::: Two is positive.\n∀x (Positive(x) → Positive(2 * x)) ::: If a number is positive, then the double of it is also positive.\nEquals(eight, 2 * four) ::: Eight is the double of four.\nEquals(four, 2 * two) ::: Four is the double of two.\nConclusion:\nLarger("
    ]
  },
  {
    "id": "FOLIO_train_320",
    "context": "A dog never tells the truth. Some poker players are dogs.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Some poker players never tell the truth.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDog(x) ::: x is a dog.\nTruth(x) ::: x tells the truth.\nPokerPlayer(x) ::: x is a poker player.\nPremises:\n∀x (Dog(x) → ¬Truth(x)) ::: A dog never tells the truth.\n∃x (PokerPlayer(x) ∧ Dog(x)) ::: Some poker players are dogs.\nConclusion:\n∃x (PokerPlayer(x) ∧ ¬Truth(x)) ::: Some poker players never tell the truth.\n------"
    ]
  },
  {
    "id": "FOLIO_train_321",
    "context": "All Asians are human. All Chinese are Asian. A man is either Chinese or British. All British are European. All Spanish are European. No Indian is European. Jessee is either both an Indian and a human, or neither an Indian nor a human.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jesse is Chinese.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAsian(x) ::: x is Asian.\nChinese(x) ::: x is Chinese.\nBritish(x) ::: x is British.\nEuropean(x) ::: x is European.\nSpanish(x) ::: x is Spanish.\nIndian(x) ::: x is Indian.\nHuman(x) ::: x is human.\nMan(x) ::: x is a man.\nPremises:\n∀x (Asian(x) → Human(x)) ::: All Asians are human.\n∀x (Chinese(x) → Asian(x"
    ]
  },
  {
    "id": "FOLIO_train_322",
    "context": "All Asians are human. All Chinese are Asian. A man is either Chinese or British. All British are European. All Spanish are European. No Indian is European. Jessee is either both an Indian and a human, or neither an Indian nor a human.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jesse is not Chinese.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAsian(x) ::: x is Asian.\nChinese(x) ::: x is Chinese.\nBritish(x) ::: x is British.\nEuropean(x) ::: x is European.\nSpanish(x) ::: x is Spanish.\nIndian(x) ::: x is Indian.\nHuman(x) ::: x is human.\nMan(x) ::: x is a man.\nPremises:\n∀x (Asian(x) → Human(x)) ::: All Asians are human.\n∀x (Chinese(x) → Asian(x"
    ]
  },
  {
    "id": "FOLIO_train_323",
    "context": "All Asians are human. All Chinese are Asian. A man is either Chinese or British. All British are European. All Spanish are European. No Indian is European. Jessee is either both an Indian and a human, or neither an Indian nor a human.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Jesse is either an Indian or a Spanish, then Jesse is either both British and European, or neither British nor European.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAsian(x) ::: x is Asian.\nChinese(x) ::: x is Chinese.\nHuman(x) ::: x is human.\nMan(x) ::: x is a man.\nBritish(x) ::: x is British.\nEuropean(x) ::: x is European.\nSpanish(x) ::: x is Spanish.\nIndian(x) ::: x is Indian.\nPremises:\n∀x (Asian(x) → Human(x)) ::: All Asians are human.\n∀x (Chinese(x) → Asian(x"
    ]
  },
  {
    "id": "FOLIO_train_324",
    "context": "No people who never admit a mistake are good teachers. Some well-informed people are people who never admit a mistake.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Some good teachers are not well-informed people.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGoodTeacher(x) ::: x is a good teacher.\nAdmit(x) ::: x admits a mistake.\nWellInformed(x) ::: x is a well-informed person.\nPremises:\n∀x (¬Admit(x) → ¬GoodTeacher(x)) ::: No people who never admit a mistake are good teachers.\n∃x (WellInformed(x) ∧ ¬Admit(x)) ::: Some well-informed people are people who never admit a mistake.\nConclusion:\n∃x (GoodTeacher"
    ]
  },
  {
    "id": "FOLIO_train_325",
    "context": "Philatelic literature is divided into the following categories: Stamp catalogues, Periodicals, Auction catalogues, Books, Bibliographies, and Background Material Mort is not a Stamp catalogue. Mort is not a periodical, auction catalogue, bibliography, or background material. Mort is a piece of Philatelic literature.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mort is a book",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nStampCatalogue(x) ::: x is a Stamp catalogue.\nPeriodical(x) ::: x is a Periodical.\nAuctionCatalogue(x) ::: x is an Auction catalogue.\nBook(x) ::: x is a Book.\nBibliography(x) ::: x is a Bibliography.\nBackgroundMaterial(x) ::: x is a Background Material.\nPhilatelicLiterature(x) ::: x is a piece of Philatelic literature.\nPremises:\n¬StampCatalogue(mort) ::: Mort is not a Stamp catalogue.\n¬"
    ]
  },
  {
    "id": "FOLIO_train_326",
    "context": "Philatelic literature is divided into the following categories: Stamp catalogues, Periodicals, Auction catalogues, Books, Bibliographies, and Background Material Mort is not a Stamp catalogue. Mort is not a periodical, auction catalogue, bibliography, or background material. Mort is a piece of Philatelic literature.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mort is background material.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nStampCatalogue(x) ::: x is a Stamp catalogue.\nPeriodical(x) ::: x is a Periodical.\nAuctionCatalogue(x) ::: x is an Auction catalogue.\nBook(x) ::: x is a Book.\nBibliography(x) ::: x is a Bibliography.\nBackgroundMaterial(x) ::: x is a Background Material.\nPhilatelicLiterature(x) ::: x is a piece of Philatelic literature.\nPremises:\n¬StampCatalogue(mort) ::: Mort is not a Stamp catalogue.\n¬"
    ]
  },
  {
    "id": "FOLIO_train_327",
    "context": "Philatelic literature is divided into the following categories: Stamp catalogues, Periodicals, Auction catalogues, Books, Bibliographies, and Background Material Mort is not a Stamp catalogue. Mort is not a periodical, auction catalogue, bibliography, or background material. Mort is a piece of Philatelic literature.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Eragon is a piece of Philatelic literature.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nStampCatalogue(x) ::: x is a Stamp catalogue.\nPeriodical(x) ::: x is a Periodical.\nAuctionCatalogue(x) ::: x is an Auction catalogue.\nBook(x) ::: x is a Book.\nBibliography(x) ::: x is a Bibliography.\nBackgroundMaterial(x) ::: x is a Background Material.\nPhilatelicLiterature(x) ::: x is a piece of Philatelic literature.\nPremises:\n¬StampCatalogue(mort) ::: Mort is not a Stamp catalogue.\n¬"
    ]
  },
  {
    "id": "FOLIO_train_328",
    "context": "Adventures of Rusty is a drama film and children's film. Columbia Pictures produced Adventures of Rusty Tintin was produced by Paramount. Tintin is an adventure film.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Columbia pictures produces drama films.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAdventure(x) ::: x is an adventure film.\nChildren(x) ::: x is a children's film.\nDrama(x) ::: x is a drama film.\nProduce(x, y) ::: x produces y.\nPremises:\nAdventuresOfRusty ∧ Drama ∧ Children ::: Adventures of Rusty is a drama film and children's film.\nProduce(ColumbiaPictures, AdventuresOfRusty) ::: Columbia Pictures produced Adventures of Rusty.\nProduce(Paramount, Tintin)"
    ]
  },
  {
    "id": "FOLIO_train_329",
    "context": "Adventures of Rusty is a drama film and children's film. Columbia Pictures produced Adventures of Rusty Tintin was produced by Paramount. Tintin is an adventure film.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Columbia pictures produces adventure films.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAdventure(x) ::: x is an adventure film.\nChildren(x) ::: x is a children's film.\nDrama(x) ::: x is a drama film.\nProduce(x, y) ::: x produces y.\nPremises:\nAdventuresOfRusty ∧ Adventure(AdventuresOfRusty) ∧ Children(AdventuresOfRusty) ∧ Drama(AdventuresOfRusty) ::: Adventures of Rusty is a drama film and children's film.\nProduce(ColumbiaP"
    ]
  },
  {
    "id": "FOLIO_train_330",
    "context": "Adventures of Rusty is a drama film and children's film. Columbia Pictures produced Adventures of Rusty Tintin was produced by Paramount. Tintin is an adventure film.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Paramount produces children's films.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAdventure(x) ::: x is an adventure film.\nChildren(x) ::: x is a children's film.\nDrama(x) ::: x is a drama film.\nProduce(x, y) ::: x produces y.\nFilm(x) ::: x is a film.\nPremises:\nAdventuresOfRusty ∧ Adventure(AdventuresOfRusty) ∧ Children(AdventuresOfRusty) ∧ Drama(AdventuresOfRusty) ::: Adventures of Rusty is a drama film and children's film.\nProduce(ColumbiaPictures, AdventuresOfRusty) ::: Columbia Pictures produced Adventures of Rusty.\nProduce(Paramount, Tintin) ∧ Adventure(Tintin) ::: Tintin was produced by Paramount.\nConclusion:\nProduce(Paramount, Children) ::: Paramount produces children's films.\n------"
    ]
  },
  {
    "id": "FOLIO_train_331",
    "context": "Adventures of Rusty is a drama film and children's film. Columbia Pictures produced Adventures of Rusty Tintin was produced by Paramount. Tintin is an adventure film.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Paramount produces adventure films.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAdventure(x) ::: x is an adventure film.\nChildren(x) ::: x is a children's film.\nDrama(x) ::: x is a drama film.\nProduce(x, y) ::: x produces y.\nPremises:\nAdventuresOfRusty ∧ Drama(AdventuresOfRusty) ∧ Children(AdventuresOfRusty) ::: Adventures of Rusty is a drama film and children's film.\nProduce(ColumbiaPictures, AdventuresOfRusty) ::: Columbia Pictures produced Adventures of Rusty.\nTintin ∧ Adventure(Tintin) ::: Tintin is an adventure film.\nProduce(Paramount, Tintin) ::: Tintin was produced by Paramount.\nConclusion:\n∃x (Adventure(x) ∧ Produce(Paramount, x)) ::: Paramount produces adventure films.\n------"
    ]
  },
  {
    "id": "FOLIO_train_332",
    "context": "Deng Xiaoping served as the paramount leader of the People's Republic of China (PRC). Deng Xiaoping was praised for his reaffirmation of the reform program in his Southern Tour of 1992 as well as the reversion of Hong Kong to Chinese control in 1997 and the return of Macau in 1999. As the party's Secretary-General under Mao and Vice Premier in he 1950s, Deng Xiaoping presided over the Anti-Rightist Campaign launched by Mao. Deng Xiaoping became instrumental in China's economic reconstruction following the disastrous Great Leap Forward (1958–1960). Mao Zedong died in 1976. After Mao Zedong's death, Deng Xiaoping gradually rose to supreme power.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The paramount leader of the PRC was also the vice premier.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nParamountLeader(x) ::: x is the paramount leader of the PRC.\nSecretaryGeneral(x) ::: x is the Secretary-General of the PRC.\nVicePremier(x) ::: x is the Vice Premier of the PRC.\nPraised(x, y) ::: x is praised for y.\nReaffirm(x, y) ::: x reaffirms y.\nReversion(x, y) ::: x is the reversion of y.\nControl(x, y) ::: x is the control of y.\nPreside(x, y) ::: x presides over y.\nAntiRightistCampaign(x) ::: x is the Anti-Rightist Campaign.\nLaunch(x, y) ::: x launches y.\nDisastrous(x) ::: x is disastrous.\nGreatLeapForward(x) ::: x is the Great Leap Forward.\nEconomicReconstruction(x) ::: x is the economic reconstruction."
    ]
  },
  {
    "id": "FOLIO_train_333",
    "context": "Deng Xiaoping served as the paramount leader of the People's Republic of China (PRC). Deng Xiaoping was praised for his reaffirmation of the reform program in his Southern Tour of 1992 as well as the reversion of Hong Kong to Chinese control in 1997 and the return of Macau in 1999. As the party's Secretary-General under Mao and Vice Premier in he 1950s, Deng Xiaoping presided over the Anti-Rightist Campaign launched by Mao. Deng Xiaoping became instrumental in China's economic reconstruction following the disastrous Great Leap Forward (1958–1960). Mao Zedong died in 1976. After Mao Zedong's death, Deng Xiaoping gradually rose to supreme power.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Deng Xiaoping presided over something launched by someone he was under.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nParamountLeader(x) ::: x is the paramount leader of the People's Republic of China (PRC).\nPraised(x, y) ::: x is praised for y.\nReaffirm(x, y) ::: x reaffirms y.\nReversion(x, y) ::: x is the reversion of y.\nControl(x, y) ::: x is the control of y.\nSecretaryGeneral(x, y) ::: x is the Secretary-General of y.\nVicePremier(x, y) ::: x is the Vice-Premier of y.\nPreside(x, y) ::: x presides over y.\nAntiRightistCampaign(x) ::: x is the Anti-Rightist Campaign.\nLaunched(x, y) ::: x is launched by y.\nReconstruction(x, y) ::: x is the reconstruction of y.\nDisastrous(x) ::: x is disastrous.\nGreatLeapForward(x)"
    ]
  },
  {
    "id": "FOLIO_train_334",
    "context": "Deng Xiaoping served as the paramount leader of the People's Republic of China (PRC). Deng Xiaoping was praised for his reaffirmation of the reform program in his Southern Tour of 1992 as well as the reversion of Hong Kong to Chinese control in 1997 and the return of Macau in 1999. As the party's Secretary-General under Mao and Vice Premier in he 1950s, Deng Xiaoping presided over the Anti-Rightist Campaign launched by Mao. Deng Xiaoping became instrumental in China's economic reconstruction following the disastrous Great Leap Forward (1958–1960). Mao Zedong died in 1976. After Mao Zedong's death, Deng Xiaoping gradually rose to supreme power.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The person instrumental in china's economic reconstruction gradually rose to supreme power.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDengXiaoping(x) ::: x is Deng Xiaoping.\nParamountLeader(x) ::: x is the paramount leader of the People's Republic of China (PRC).\nReaffirm(x, y) ::: x reaffirms y.\nReversion(x, y) ::: x is the reversion of y.\nControl(x, y) ::: x is the control of y.\nSecretaryGeneral(x, y) ::: x is the Secretary-General of y.\nVicePremier(x, y) ::: x is the Vice Premier of y.\nPreside(x, y) ::: x presides over y.\nAntiRightistCampaign(x) ::: x is the Anti-Rightist Campaign.\nLaunched(x, y) ::: x is launched by y.\nGreatLeapForward(x) ::: x is the Great Leap Forward.\nDisastrous(x) ::: x is disastrous.\nMaoZedong("
    ]
  },
  {
    "id": "FOLIO_train_335",
    "context": "All imaginative processes are produced in human brains. All science-fiction is from an imaginative process. Either science-fiction or fact. No facts are proven to be false. Dune is a science-fiction or proven to be false.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Dune is a fact.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nImaginativeProcess(x) ::: x is an imaginative process.\nProduce(x, y) ::: x is produced in y.\nScienceFiction(x) ::: x is science-fiction.\nFact(x) ::: x is a fact.\nProven(x) ::: x is proven.\nFalse(x) ::: x is false.\nPremises:\n∀x (ImaginativeProcess(x) → Produce(x, humanBrain)) ::: All imaginative processes are produced in human brains.\n∀x (ScienceFiction(x) → ImaginativeProcess(x)) ::: All science-fiction is from an imaginative process.\n∀x (ScienceFiction(x) ⊕ Fact(x)) ::: Either science-fiction or fact.\n∀x (Fact(x) → ¬False(x)) ::: No facts are proven to be false.\nScienceFiction(dune"
    ]
  },
  {
    "id": "FOLIO_train_336",
    "context": "All imaginative processes are produced in human brains. All science-fiction is from an imaginative process. Either science-fiction or fact. No facts are proven to be false. Dune is a science-fiction or proven to be false.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Dune is produced in human brains and is an imaginative process.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nImaginativeProcess(x) ::: x is an imaginative process.\nProduce(x, y) ::: x is produced in y.\nScienceFiction(x) ::: x is science-fiction.\nFact(x) ::: x is a fact.\nProven(x) ::: x is proven.\nFalse(x) ::: x is false.\nPremises:\n∀x (ImaginativeProcess(x) → Produce(x, humanBrain)) ::: All imaginative processes are produced in human brains.\n∀x (ScienceFiction(x) → ImaginativeProcess(x)) ::: All science-fiction is from an imaginative process.\n∀x (ScienceFiction(x) ⊕ Fact(x)) ::: Either science-fiction or fact.\n∀x (Fact(x) → ¬Proven(x, false)) ::: No facts are proven to be false.\nScienceFiction"
    ]
  },
  {
    "id": "FOLIO_train_337",
    "context": "All imaginative processes are produced in human brains. All science-fiction is from an imaginative process. Either science-fiction or fact. No facts are proven to be false. Dune is a science-fiction or proven to be false.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Dune is either produced in human brains or an imaginative process.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nImaginative(x) ::: x is an imaginative process.\nProduce(x, y) ::: x is produced in y.\nScienceFiction(x) ::: x is science-fiction.\nFact(x) ::: x is a fact.\nProven(x) ::: x is proven to be false.\nPremises:\n∀x (Imaginative(x) → Produce(x, humanBrain)) ::: All imaginative processes are produced in human brains.\n∀x (ScienceFiction(x) → Imaginative(x)) ::: All science-fiction is from an imaginative process.\n∀x (ScienceFiction(x) ⊕ Fact(x)) ::: Either science-fiction or fact.\n∀x (Fact(x) → ¬Proven(x)) ::: No facts are proven to be false.\nScienceFiction(dune) ⊕ Proven(dune"
    ]
  },
  {
    "id": "FOLIO_train_338",
    "context": "All imaginative processes are produced in human brains. All science-fiction is from an imaginative process. Either science-fiction or fact. No facts are proven to be false. Dune is a science-fiction or proven to be false.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Dune is produced in human brains and is science fiction.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nImaginativeProcess(x) ::: x is an imaginative process.\nProduce(x, y) ::: x is produced in y.\nScienceFiction(x) ::: x is science-fiction.\nFact(x) ::: x is a fact.\nProven(x) ::: x is proven.\nFalse(x) ::: x is false.\nPremises:\n∀x (ImaginativeProcess(x) → Produce(x, humanBrain)) ::: All imaginative processes are produced in human brains.\n∀x (ScienceFiction(x) → ImaginativeProcess(x)) ::: All science-fiction is from an imaginative process.\n∀x (ScienceFiction(x) ⊕ Fact(x)) ::: Either science-fiction or fact.\n∀x (Fact(x) → ¬Proven(x, false)) ::: No facts are proven to be false.\nScienceFiction"
    ]
  },
  {
    "id": "FOLIO_train_339",
    "context": "All imaginative processes are produced in human brains. All science-fiction is from an imaginative process. Either science-fiction or fact. No facts are proven to be false. Dune is a science-fiction or proven to be false.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Dune is either produced in human brains or science-fiction.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nImaginative(x) ::: x is an imaginative process.\nProduce(x, y) ::: x is produced in y.\nScienceFiction(x) ::: x is science-fiction.\nFact(x) ::: x is a fact.\nProven(x) ::: x is proven to be false.\nPremises:\n∀x (Imaginative(x) → Produce(x, humanBrain)) ::: All imaginative processes are produced in human brains.\n∀x (ScienceFiction(x) → Imaginative(x)) ::: All science-fiction is from an imaginative process.\n∀x (ScienceFiction(x) ⊕ Fact(x)) ::: Either science-fiction or fact.\n∀x (Fact(x) → ¬Proven(x)) ::: No facts are proven to be false.\nScienceFiction(dune) ⊕ Proven(dune"
    ]
  },
  {
    "id": "FOLIO_train_340",
    "context": "All imaginative processes are produced in human brains. All science-fiction is from an imaginative process. Either science-fiction or fact. No facts are proven to be false. Dune is a science-fiction or proven to be false.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Dune is produced in human brains and is an imaginative process, then Dune is not produced in human brains and science-fiction.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nImaginativeProcess(x) ::: x is an imaginative process.\nProduce(x, y) ::: x is produced in y.\nScienceFiction(x) ::: x is science-fiction.\nFact(x) ::: x is a fact.\nProven(x) ::: x is proven.\nFalse(x) ::: x is false.\nPremises:\n∀x (ImaginativeProcess(x) → Produce(x, humanBrain)) ::: All imaginative processes are produced in human brains.\n∀x (ScienceFiction(x) → ImaginativeProcess(x)) ::: All science-fiction is from an imaginative process.\n∀x (ScienceFiction(x) ⊕ Fact(x)) ::: Either science-fiction or fact.\n∀x (Fact(x) → ¬Proven(x, false)) ::: No facts are proven to be false.\nScienceFiction(dune) ⊕ Proven(dune, false) ::: Dune is a science-fiction or proven to be false.\nConclusion:\n(Produce(dune, humanBrain) ∧ ImaginativeProcess(dune)) → ¬Produce(dune, humanBrain) ∧ ScienceFiction(dune) ::: If Dune is produced in human brains and is an imaginative process, then Dune is not produced in human brains and science-fiction.\n------"
    ]
  },
  {
    "id": "FOLIO_train_341",
    "context": "All imaginative processes are produced in human brains. All science-fiction is from an imaginative process. Either science-fiction or fact. No facts are proven to be false. Dune is a science-fiction or proven to be false.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Dune is either a fact and produced in human brains, or neither a fact nor produced in human brains, then Dune is produced in human brains and science-fiction.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nImaginative(x) ::: x is an imaginative process.\nProduce(x, y) ::: x is produced in y.\nHumanBrain(x) ::: x is a human brain.\nScienceFiction(x) ::: x is science-fiction.\nFact(x) ::: x is a fact.\nProven(x) ::: x is proven.\nFalse(x) ::: x is false.\nPremises:\n∀x (Imaginative(x) → Produce(x, humanBrain)) ::: All imaginative processes are produced in human brains.\n∀x (ScienceFiction(x) → Imaginative(x)) ::: All science-fiction is from an imaginative process.\n∀x (ScienceFiction(x) ⊕ Fact(x)) ::: Either science-fiction or fact.\n∀x (Fact(x) → ¬Proven(x, false)) ::: No facts are proven to be false.\nScienceFiction(dune) ⊕ Proven(dune, false) ::: Dune is a science-fiction or proven to be false.\nConclusion:\n((ScienceFiction(dune) ∧ Produce(dune, humanBrain)) ⊕ ¬(ScienceFiction(dune) ∨ Produce(dune, humanBrain))) → (ScienceFiction(dune) ∧"
    ]
  },
  {
    "id": "FOLIO_train_342",
    "context": "All imaginative processes are produced in human brains. All science-fiction is from an imaginative process. Either science-fiction or fact. No facts are proven to be false. Dune is a science-fiction or proven to be false.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Dune is science-fiction, then Dune is not produced in human brains and science-fiction.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nImaginativeProcess(x) ::: x is an imaginative process.\nProduce(x, y) ::: x is produced in y.\nScienceFiction(x) ::: x is science-fiction.\nFact(x) ::: x is a fact.\nProven(x) ::: x is proven.\nFalse(x) ::: x is false.\nPremises:\n∀x (ImaginativeProcess(x) → Produce(x, humanBrain)) ::: All imaginative processes are produced in human brains.\n∀x (ScienceFiction(x) → ImaginativeProcess(x)) ::: All science-fiction is from an imaginative process.\n∀x (ScienceFiction(x) ⊕ Fact(x)) ::: Either science-fiction or fact.\n∀x (Fact(x) → ¬Proven(x, false)) ::: No facts are proven to be false.\nScienceFiction(dune) ⊕ Proven(dune, false) ::: Dune is a science-fiction or proven to be false.\nConclusion:\nScienceFiction(dune) → (¬Produce(dune, humanBrain) ∧ ¬ScienceFiction(dune)) ::: If Dune is science-fiction, then Dune is not produced in human brains and science-fiction.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine"
    ]
  },
  {
    "id": "FOLIO_train_343",
    "context": "All imaginative processes are produced in human brains. All science-fiction is from an imaginative process. Either science-fiction or fact. No facts are proven to be false. Dune is a science-fiction or proven to be false.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Dune is not produced in human brains and science-fiction, then Dune is neither an imaginative process nor proved to be false.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nImaginativeProcess(x) ::: x is an imaginative process.\nProduce(x, y) ::: x is produced in y.\nHumanBrain(x) ::: x is a human brain.\nScienceFiction(x) ::: x is science-fiction.\nFact(x) ::: x is a fact.\nProve(x, y) ::: x is proven to be y.\nFalse(x) ::: x is false.\nPremises:\n∀x (ImaginativeProcess(x) → Produce(x, humanBrain)) ::: All imaginative processes are produced in human brains.\n∀x (ScienceFiction(x) → ImaginativeProcess(x)) ::: All science-fiction is from an imaginative process.\n∀x (ScienceFiction(x) ⊕ Fact(x)) ::: Either science-fiction or fact.\n∀x (Fact(x) → ¬Prove(x, False(x))) ::: No facts are proven to be false.\nScienceFiction(dune) ⊕ Prove(dune, False(dune)) ::: Dune is a science-fiction or proven to be false.\nConclusion:\n¬(Produce(dune, humanBrain) ⊕ ScienceFiction(dune)) → ¬(ImaginativeProcess(dune) ⊕ Prove(dune, False(dune))) ::: If Dune"
    ]
  },
  {
    "id": "FOLIO_train_344",
    "context": "All imaginative processes are produced in human brains. All science-fiction is from an imaginative process. Either science-fiction or fact. No facts are proven to be false. Dune is a science-fiction or proven to be false.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Dune is not an imaginative process and science-fiction, then Dune is neither produced in human brains nor an imaginative process.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nImaginativeProcess(x) ::: x is an imaginative process.\nProduce(x, y) ::: x is produced in y.\nScienceFiction(x) ::: x is science-fiction.\nFact(x) ::: x is a fact.\nProven(x) ::: x is proven.\nFalse(x) ::: x is false.\nPremises:\n∀x (ImaginativeProcess(x) → Produce(x, humanBrain)) ::: All imaginative processes are produced in human brains.\n∀x (ScienceFiction(x) → ImaginativeProcess(x)) ::: All science-fiction is from an imaginative process.\n∀x (ScienceFiction(x) ⊕ Fact(x)) ::: Either science-fiction or fact.\n∀x (Fact(x) → ¬Proven(x, false)) ::: No facts are proven to be false.\nScienceFiction(dune) ⊕ Proven(dune, false) ::: Dune is a science-fiction or proven to be false.\nConclusion:\n¬(ScienceFiction(dune) ∧ ImaginativeProcess(dune)) → ¬(Produce(dune, humanBrain) ∨ ImaginativeProcess(dune)) ::: If Dune is not an imaginative process and science-fiction, then Dune is neither produced in human brains nor an imaginative process"
    ]
  },
  {
    "id": "FOLIO_train_345",
    "context": "An American superhero comes from either DC universe or Marvel universe. Captain America is a superhero. Captain America is an American. Captain America does not come from DC universe. If a superhero is American, he speaks English. A superhero speaks English or Spanish.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Captain America does not speak English.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAmerican(x) ::: x is an American.\nSuperhero(x) ::: x is a superhero.\nDC(x) ::: x comes from DC universe.\nMarvel(x) ::: x comes from Marvel universe.\nSpeak(x, y) ::: x speaks y.\nPremises:\nAmerican(captainAmerica) ∧ Superhero(captainAmerica) ∧ ¬DC(captainAmerica) ::: Captain America is an American superhero who does not come from DC universe.\n∀x (Superhero(x) → (American(x) → Speak(x, english))) ::: If a superhero is American, he speaks English.\n∀x (Superhero(x) → (Speak(x, english) ⊕ Speak(x, spanish))) ::: A superhero speaks English or Spanish.\nConclusion:\n¬Speak(captainAmerica, english) ::: Captain America does not speak English.\n------\nProblem:\nA person is either a student or a teacher. A student is a person. A teacher is a person. A person is either a student or a teacher. A student is a person. A teacher is a person. A person is either a student or a teacher. A student is a person. A teacher is a person. A person is either a student or a teacher. A student is a person. A teacher is a person. A person is either a student or a teacher. A student is a person. A teacher is a person. A person is either a student"
    ]
  },
  {
    "id": "FOLIO_train_346",
    "context": "An American superhero comes from either DC universe or Marvel universe. Captain America is a superhero. Captain America is an American. Captain America does not come from DC universe. If a superhero is American, he speaks English. A superhero speaks English or Spanish.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Captain America comes from Marvel universe.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAmerican(x) ::: x is an American.\nSuperhero(x) ::: x is a superhero.\nDC(x) ::: x comes from DC universe.\nMarvel(x) ::: x comes from Marvel universe.\nSpeak(x, y) ::: x speaks y.\nPremises:\nAmerican(captainAmerica) ∧ Superhero(captainAmerica) ∧ ¬DC(captainAmerica) ::: Captain America is an American superhero who does not come from DC universe.\n∀x (American(x) → Speak(x, english)) ::: If a superhero is American, he speaks English.\n∀x (Superhero(x) → Speak(x, english) ⊕ Speak(x, spanish)) ::: A superhero speaks English or Spanish.\nConclusion:\nMarvel(captainAmerica) ::: Captain America comes from Marvel universe.\n------\nProblem:\nA person is either a student or a teacher. A student is a person. A teacher is a person. A person is either a student or a teacher. A student is a person. A teacher is a person. A person is either a student or a teacher. A student is a person. A teacher is a person. A person is either a student or a teacher. A student is a person. A teacher is a person. A person is either a student or a teacher. A student is a person. A teacher is a person. A person is either a student or a teacher. A student is a person. A teacher"
    ]
  },
  {
    "id": "FOLIO_train_347",
    "context": "An American superhero comes from either DC universe or Marvel universe. Captain America is a superhero. Captain America is an American. Captain America does not come from DC universe. If a superhero is American, he speaks English. A superhero speaks English or Spanish.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Captain America speaks Spanish.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAmerican(x) ::: x is an American.\nSuperhero(x) ::: x is a superhero.\nDC(x) ::: x comes from DC universe.\nMarvel(x) ::: x comes from Marvel universe.\nSpeak(x, y) ::: x speaks y.\nPremises:\nAmerican(captainAmerica) ∧ Superhero(captainAmerica) ∧ ¬DC(captainAmerica) ::: Captain America is an American superhero who does not come from DC universe.\n∀x (Superhero(x) → (American(x) → Speak(x, english))) ::: If a superhero is American, he speaks English.\n∀x (Superhero(x) → (Speak(x, english) ⊕ Speak(x, spanish))) ::: A superhero speaks English or Spanish.\nConclusion:\nSpeak(captainAmerica, spanish) ::: Captain America speaks Spanish.\n------\nProblem:\nA person is either a student or a teacher. A student is a person. A teacher is a person. A person is either a student or a teacher. A student is a person. A teacher is a person. A person is either a student or a teacher. A student is a person. A teacher is a person. A person is either a student or a teacher. A student is a person. A teacher is a person. A person is either a student or a teacher. A student is a person. A teacher is a person. A person is either a student or a teacher"
    ]
  },
  {
    "id": "FOLIO_train_348",
    "context": "Robert Zimmer was born in Germany. Robert Zimmer is an essayist. Robert Zimmer was born in 1953. Every essayist is a writer. Every person born in Germany is German.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Robert Zimmer is German.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBorn(x, y) ::: x was born in year y.\nEssayist(x) ::: x is an essayist.\nWriter(x) ::: x is a writer.\nGerman(x) ::: x is German.\nPremises:\nBorn(robertZimmer, year1953) ::: Robert Zimmer was born in 1953.\nEssayist(robertZimmer) ::: Robert Zimmer is an essayist.\nBorn(robertZimmer, germany) ::: Robert Zimmer was born in Germany.\n∀x (Essayist(x) → Writer(x)) ::: Every essayist is a writer.\n∀x (Born(x, germany) → German(x)) ::: Every person born in Germany is German.\nConclusion:\nGerman(robertZimmer) ::: Robert Zimmer is German.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on"
    ]
  },
  {
    "id": "FOLIO_train_349",
    "context": "Robert Zimmer was born in Germany. Robert Zimmer is an essayist. Robert Zimmer was born in 1953. Every essayist is a writer. Every person born in Germany is German.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Robert Zimmer is not a writer.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBornIn(x, y) ::: x was born in y.\nEssayist(x) ::: x is an essayist.\nWriter(x) ::: x is a writer.\nGerman(x) ::: x is German.\nPremises:\nBornIn(robertZimmer, germany) ::: Robert Zimmer was born in Germany.\nEssayist(robertZimmer) ::: Robert Zimmer is an essayist.\nBornIn(robertZimmer, year1953) ::: Robert Zimmer was born in 1953.\n∀x (Essayist(x) → Writer(x)) ::: Every essayist is a writer.\n∀x (BornIn(x, germany) → German(x)) ::: Every person born in Germany is German.\nConclusion:\n¬Writer(robertZimmer) ::: Robert Zimmer is not a writer.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student."
    ]
  },
  {
    "id": "FOLIO_train_350",
    "context": "Robert Zimmer was born in Germany. Robert Zimmer is an essayist. Robert Zimmer was born in 1953. Every essayist is a writer. Every person born in Germany is German.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Robert Zimmer is a biographer.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBorn(x, y) ::: x was born in year y.\nEssayist(x) ::: x is an essayist.\nWriter(x) ::: x is a writer.\nGerman(x) ::: x is German.\nBiographer(x) ::: x is a biographer.\nPremises:\nBorn(robertZimmer, year1953) ::: Robert Zimmer was born in 1953.\nEssayist(robertZimmer) ::: Robert Zimmer is an essayist.\nBorn(robertZimmer, germany) ::: Robert Zimmer was born in Germany.\n∀x (Essayist(x) → Writer(x)) ::: Every essayist is a writer.\n∀x (Born(x, germany) → German(x)) ::: Every person born in Germany is German.\nConclusion:\nBiographer(robertZimmer) ::: Robert Zimmer is a biographer.\n------"
    ]
  },
  {
    "id": "FOLIO_train_351",
    "context": "All people who repay their loans on time have a high credit score. Some people with high credit scores and high salaries are approved for mortgages. John has a high salary.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If John repays his loans on time, he will be approved for a mortgage.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRepay(x) ::: x repays his loans on time.\nCreditScore(x) ::: x has a high credit score.\nSalary(x) ::: x has a high salary.\nApproved(x) ::: x is approved for a mortgage.\nPremises:\n∀x (Repay(x) → CreditScore(x)) ::: All people who repay their loans on time have a high credit score.\n∃x (CreditScore(x) ∧ Salary(x) ∧ Approved(x)) ::: Some people with high credit scores and high salaries are approved for mortgages.\nSalary(john) ::: John has a high salary.\nConclusion:\nRepay(john) → Approved(john) ::: If John repays his loans on time, he will be approved for a mortgage.\n------\nProblem:\nAll people who repay their loans on time have a high credit score. Some people with high credit scores"
    ]
  },
  {
    "id": "FOLIO_train_352",
    "context": "All students are members of the university. All graduate students are students. All PhD students are graduate students. Some PhD students have high IQs. If John is not a PhD student, then he is not a member of the university. If John has a high IQ, then he is a PhD student or a graduate student.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? John has a high IQ.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nStudent(x) ::: x is a student.\nMember(x) ::: x is a member of the university.\nGraduateStudent(x) ::: x is a graduate student.\nPhDStudent(x) ::: x is a PhD student.\nHighIQ(x) ::: x has a high IQ.\nPremises:\n∀x (Student(x) → Member(x)) ::: All students are members of the university.\n∀x (GraduateStudent(x) → Student(x)) ::: All graduate students are students.\n∀x (PhDStudent(x) → GraduateStudent(x)) ::: All PhD students are graduate students.\n∃x (PhDStudent(x) ∧ HighIQ(x)) ::: Some PhD students have high IQs.\n¬PhDStudent(john) → ¬Member(john) ::: If John is not a PhD student, then he is not a member of the university.\nHighI"
    ]
  },
  {
    "id": "FOLIO_train_353",
    "context": "All students are members of the university. All graduate students are students. All PhD students are graduate students. Some PhD students have high IQs. If John is not a PhD student, then he is not a member of the university. If John has a high IQ, then he is a PhD student or a graduate student.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? John does not have a high IQ.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nStudent(x) ::: x is a student.\nMember(x) ::: x is a member of the university.\nGraduateStudent(x) ::: x is a graduate student.\nPhDStudent(x) ::: x is a PhD student.\nHighIQ(x) ::: x has a high IQ.\nPremises:\n∀x (Student(x) → Member(x)) ::: All students are members of the university.\n∀x (GraduateStudent(x) → Student(x)) ::: All graduate students are students.\n∀x (PhDStudent(x) → GraduateStudent(x)) ::: All PhD students are graduate students.\n∃x (PhDStudent(x) ∧ HighIQ(x)) ::: Some PhD students have high IQs.\n¬PhDStudent(john) → ¬Member(john) ::: If John is not a PhD student, then he is not a member of the university.\nHighI"
    ]
  },
  {
    "id": "FOLIO_train_354",
    "context": "All students are members of the university. All graduate students are students. All PhD students are graduate students. Some PhD students have high IQs. If John is not a PhD student, then he is not a member of the university. If John has a high IQ, then he is a PhD student or a graduate student.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? John is a PhD student.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nStudent(x) ::: x is a student.\nMember(x) ::: x is a member of the university.\nGraduateStudent(x) ::: x is a graduate student.\nPhDStudent(x) ::: x is a PhD student.\nHighIQ(x) ::: x has a high IQ.\nJohn(x) ::: x is John.\nPremises:\n∀x (Student(x) → Member(x)) ::: All students are members of the university.\n∀x (GraduateStudent(x) → Student(x)) ::: All graduate students are students.\n∀x (PhDStudent(x) → GraduateStudent(x)) ::: All PhD students are graduate students.\n∃x (PhDStudent(x) ∧ HighIQ(x)) ::: Some PhD students have high IQs.\n¬PhDStudent(john) → ¬Member(john) ::: If John is not a PhD student, then he"
    ]
  },
  {
    "id": "FOLIO_train_355",
    "context": "Belgium, France and Germany are European countries. Paris is the capital of France. The Eiffel Tower is one of the main tourist attractions located in Paris. Some people who live in Belgium speak French. If John goes to Europe, he will see some tourist attractions. John speaks French.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If John goes to Europe, he will see the Eiffel Tower.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEuropeanCountry(x) ::: x is a European country.\nCapital(x, y) ::: x is the capital of y.\nTouristAttraction(x) ::: x is a tourist attraction.\nLocatedIn(x, y) ::: x is located in y.\nSpeak(x, y) ::: x speaks y.\nLive(x, y) ::: x lives in y.\nGo(x, y) ::: x goes to y.\nSee(x, y) ::: x sees y.\nPremises:\nEuropeanCountry(belgium) ∧ EuropeanCountry(france) ∧ EuropeanCountry(germany) ::: Belgium, France and Germany are European countries.\nCapital(paris, france) ::: Paris is the capital of France.\nTouristAttraction(eiffelTower) ∧ LocatedIn(eiffelTower, paris) ::: The Eiffel Tower is one of the main tourist"
    ]
  },
  {
    "id": "FOLIO_train_356",
    "context": "Belgium, France and Germany are European countries. Paris is the capital of France. The Eiffel Tower is one of the main tourist attractions located in Paris. Some people who live in Belgium speak French. If John goes to Europe, he will see some tourist attractions. John speaks French.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Eiffel Tower is located in the capital of France.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEuropeanCountry(x) ::: x is a European country.\nCapital(x, y) ::: x is the capital of y.\nTouristAttraction(x) ::: x is a tourist attraction.\nLocatedIn(x, y) ::: x is located in y.\nSpeak(x, y) ::: x speaks y.\nLive(x, y) ::: x lives in y.\nGo(x, y) ::: x goes to y.\nSee(x, y) ::: x sees y.\nPremises:\nEuropeanCountry(belgium) ∧ EuropeanCountry(france) ∧ EuropeanCountry(germany) ::: Belgium, France and Germany are European countries.\nCapital(paris, france) ::: Paris is the capital of France.\nTouristAttraction(eiffelTower) ∧ LocatedIn(eiffelTower, paris) ::: The Eiffel Tower is one of the main tourist"
    ]
  },
  {
    "id": "FOLIO_train_357",
    "context": "Belgium, France and Germany are European countries. Paris is the capital of France. The Eiffel Tower is one of the main tourist attractions located in Paris. Some people who live in Belgium speak French. If John goes to Europe, he will see some tourist attractions. John speaks French.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? John lives in Belgium.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBelgium(x) ::: x is Belgium.\nFrance(x) ::: x is France.\nGermany(x) ::: x is Germany.\nEurope(x) ::: x is a European country.\nParis(x) ::: x is Paris.\nCapital(x, y) ::: x is the capital of y.\nEiffelTower(x) ::: x is the Eiffel Tower.\nTouristAttraction(x) ::: x is a tourist attraction.\nLive(x, y) ::: x lives in y.\nSpeak(x, y) ::: x speaks y.\nGo(x, y) ::: x goes to y.\nSee(x, y) ::: x sees y.\nPremises:\nBelgium(belgium) ∧ France(france) ∧ Germany(germany) ∧ Europe(belgium) ∧ Europe(france) ∧ Europe("
    ]
  },
  {
    "id": "FOLIO_train_358",
    "context": "All sports cars are loud. No loud cars are electric. If a car is a Ferrari, then it is a sports car. All cars made in Maranello are Ferrari If Prius is neither a sports car nor a loud car, then Prius is a Maranello-made car or a loud car.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Prius is an electric car.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSportsCar(x) ::: x is a sports car.\nLoud(x) ::: x is loud.\nElectric(x) ::: x is an electric car.\nFerrari(x) ::: x is a Ferrari.\nMaranelloMade(x) ::: x is a car made in Maranello.\nPremises:\n∀x (SportsCar(x) → Loud(x)) ::: All sports cars are loud.\n∀x (Loud(x) → ¬Electric(x)) ::: No loud cars are electric.\n∀x (Ferrari(x) → SportsCar(x)) ::: If a car is a Ferrari, then it is a sports car.\n∀x (MaranelloMade(x) → Ferrari(x)) ::: All cars made in Maranello are Ferrari\n(¬SportsCar(prius) ∧ ¬Loud(prius)) →"
    ]
  },
  {
    "id": "FOLIO_train_359",
    "context": "All sports cars are loud. No loud cars are electric. If a car is a Ferrari, then it is a sports car. All cars made in Maranello are Ferrari If Prius is neither a sports car nor a loud car, then Prius is a Maranello-made car or a loud car.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Prius is not an electric car.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSportsCar(x) ::: x is a sports car.\nLoud(x) ::: x is loud.\nElectric(x) ::: x is an electric car.\nFerrari(x) ::: x is a Ferrari.\nMaranelloMade(x) ::: x is a car made in Maranello.\nPremises:\n∀x (SportsCar(x) → Loud(x)) ::: All sports cars are loud.\n∀x (Loud(x) → ¬Electric(x)) ::: No loud cars are electric.\n∀x (Ferrari(x) → SportsCar(x)) ::: If a car is a Ferrari, then it is a sports car.\n∀x (MaranelloMade(x) → Ferrari(x)) ::: All cars made in Maranello are Ferrari\n(¬SportsCar(prius) ∧ ¬Loud(prius)) →"
    ]
  },
  {
    "id": "FOLIO_train_360",
    "context": "All sports cars are loud. No loud cars are electric. If a car is a Ferrari, then it is a sports car. All cars made in Maranello are Ferrari If Prius is neither a sports car nor a loud car, then Prius is a Maranello-made car or a loud car.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Prius is a Maranello-made car.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSportsCar(x) ::: x is a sports car.\nLoud(x) ::: x is loud.\nElectric(x) ::: x is electric.\nFerrari(x) ::: x is a Ferrari.\nCar(x) ::: x is a car.\nMadeInMaranello(x) ::: x is made in Maranello.\nPremises:\n∀x (SportsCar(x) → Loud(x)) ::: All sports cars are loud.\n∀x (Loud(x) → ¬Electric(x)) ::: No loud cars are electric.\n∀x (Ferrari(x) → SportsCar(x)) ::: If a car is a Ferrari, then it is a sports car.\n∀x (MadeInMaranello(x) → Ferrari(x)) ::: All cars made in Maranello are Ferrari\n¬(SportsCar(prius) ∨ Loud(prius)) → (MadeInMaranello(prius) ∨ Loud(prius)) ::: If Prius is neither a sports car nor a loud car, then Prius is a Maranello-made car or a loud car.\nConclusion:\nMadeInMaranello(prius) ::: Prius is a Maranello-made car.\n------"
    ]
  },
  {
    "id": "FOLIO_train_361",
    "context": "All sports cars are loud. No loud cars are electric. If a car is a Ferrari, then it is a sports car. All cars made in Maranello are Ferrari If Prius is neither a sports car nor a loud car, then Prius is a Maranello-made car or a loud car.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Prius is a Ferrari or a loud car, then Prius is an electric car.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSportsCar(x) ::: x is a sports car.\nLoud(x) ::: x is loud.\nElectric(x) ::: x is electric.\nFerrari(x) ::: x is a Ferrari.\nCar(x) ::: x is a car.\nMadeInMaranello(x) ::: x is made in Maranello.\nPremises:\n∀x (SportsCar(x) → Loud(x)) ::: All sports cars are loud.\n∀x (Loud(x) → ¬Electric(x)) ::: No loud cars are electric.\n∀x (Ferrari(x) → SportsCar(x)) ::: If a car is a Ferrari, then it is a sports car.\n∀x (MadeInMaranello(x) → Ferrari(x)) ::: All cars made in Maranello are Ferrari\n(Prius ∧ ¬(SportsCar(prius) ∨ Loud(prius))) → (MadeInMaranello(prius) ∨ Loud(prius)) ::: If Prius is neither a sports car nor a loud car, then Prius is a Maranello-made car or a loud car.\nConclusion:\n(Ferrari(prius) ∨ Loud(p"
    ]
  },
  {
    "id": "FOLIO_train_362",
    "context": "If something is a plant, then it is not a cute animal. All flowers are plants. Every kitten is a cute animal. If something is grown in a garden, then it is a flower. Piper is a kitten or a cute animal.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Piper was grown in a garden.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPlant(x) ::: x is a plant.\nCuteAnimal(x) ::: x is a cute animal.\nFlower(x) ::: x is a flower.\nGarden(x) ::: x is grown in a garden.\nKitten(x) ::: x is a kitten.\nPremises:\n∀x (Plant(x) → ¬CuteAnimal(x)) ::: If something is a plant, then it is not a cute animal.\n∀x (Flower(x) → Plant(x)) ::: All flowers are plants.\n∀x (Kitten(x) → CuteAnimal(x)) ::: Every kitten is a cute animal.\n∀x (Garden(x) → Flower(x)) ::: If something is grown in a garden, then it is a flower.\nKitten(piper) ⊕ CuteAnimal(piper) ::: Piper is a kitten or a cute animal.\nConclusion:\nGarden(piper) ::: Piper was grown in a garden.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffe"
    ]
  },
  {
    "id": "FOLIO_train_363",
    "context": "If something is a plant, then it is not a cute animal. All flowers are plants. Every kitten is a cute animal. If something is grown in a garden, then it is a flower. Piper is a kitten or a cute animal.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Piper was not grown in a garden.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPlant(x) ::: x is a plant.\nCuteAnimal(x) ::: x is a cute animal.\nFlower(x) ::: x is a flower.\nGarden(x) ::: x is grown in a garden.\nKitten(x) ::: x is a kitten.\nPremises:\n∀x (Plant(x) → ¬CuteAnimal(x)) ::: If something is a plant, then it is not a cute animal.\n∀x (Flower(x) → Plant(x)) ::: All flowers are plants.\n∀x (Kitten(x) → CuteAnimal(x)) ::: Every kitten is a cute animal.\n∀x (Garden(x) → Flower(x)) ::: If something is grown in a garden, then it is a flower.\nKitten(piper) ⊕ CuteAnimal(piper) ::: Piper is a kitten or a cute animal.\nConclusion:\n¬Garden(piper) ::: Piper was not grown in a garden.\n------\nProblem:\nIf something is a plant, then it is not a cute animal. All flowers are plants. Every kitten is a cute animal. If something is grown in a garden, then it is a flower. Piper is a kitten or a cute animal.\nQuestion:\nBased on the above information,"
    ]
  },
  {
    "id": "FOLIO_train_364",
    "context": "If something is a plant, then it is not a cute animal. All flowers are plants. Every kitten is a cute animal. If something is grown in a garden, then it is a flower. Piper is a kitten or a cute animal.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Piper is a kitten.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPlant(x) ::: x is a plant.\nCuteAnimal(x) ::: x is a cute animal.\nFlower(x) ::: x is a flower.\nGrown(x) ::: x is grown in a garden.\nKitten(x) ::: x is a kitten.\nPremises:\n∀x (Plant(x) → ¬CuteAnimal(x)) ::: If something is a plant, then it is not a cute animal.\n∀x (Flower(x) → Plant(x)) ::: All flowers are plants.\n∀x (Kitten(x) → CuteAnimal(x)) ::: Every kitten is a cute animal.\n∀x (Grown(x) → Flower(x)) ::: If something is grown in a garden, then it is a flower.\nKitten(piper) ∨ CuteAnimal(piper) ::: Piper is a kitten or a cute animal.\nConclusion:\nKitten(piper) ::: Piper is a kitten.\n------\nProblem:\nIf something is a plant, then it is not a cute animal. All flowers are plants. Every kitten is a cute animal. If something is grown in a garden, then it is a flower. Piper is a kitten or a cute animal.\nQuestion:\nBased on the above information, is the following"
    ]
  },
  {
    "id": "FOLIO_train_365",
    "context": "Guam has participated in the Winter Olympics. In 1988, the Winter Olympics were held in Calgary. Guam sent an athlete to the Calgary Winter Olympics. If Guan sent an athlete to the Calgary Winter Olympics, then it participated in the Calgary Winter Olympics. Judd Bankert is the only athlete from Guam who has ever competed in the Winter Olympics.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Judd Bankert competed in the 1992 Winter Olympics.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nParticipate(x, y) ::: x participated in the y Winter Olympics.\nSend(x, y) ::: x sent an athlete to the y Winter Olympics.\nAthlete(x) ::: x is an athlete.\nCompete(x, y) ::: x competed in the y Winter Olympics.\nPremises:\nParticipate(guam, calgary) ::: Guam participated in the Calgary Winter Olympics.\nWinterOlympics(calgary) ::: The Winter Olympics were held in Calgary.\nSend(guam, calgary) ::: Guam sent an athlete to the Calgary Winter Olympics.\n∀x (Send(x, calgary) → Participate(x, calgary)) ::: If Guan sent an athlete to the Calgary Winter Olympics, then it participated in the Calgary Winter Olympics.\nAthlete(juddBankert) ::: Judd Bankert is the only athlete from Guam who has ever competed in the Winter Olympics.\nConclusion:\nCompete(juddBankert, year1992) ::: Judd Bankert competed in the 1992 Winter Olympics.\n------\nProblem:\nThe 1992 Winter Olympics were held in Albertville. The 1992 Winter Olympics were held in France. The 1992 Winter Olympics were held in Albertville, France."
    ]
  },
  {
    "id": "FOLIO_train_366",
    "context": "Guam has participated in the Winter Olympics. In 1988, the Winter Olympics were held in Calgary. Guam sent an athlete to the Calgary Winter Olympics. If Guan sent an athlete to the Calgary Winter Olympics, then it participated in the Calgary Winter Olympics. Judd Bankert is the only athlete from Guam who has ever competed in the Winter Olympics.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Guam has participated in the Summer Olympics at least once.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nParticipate(x, y) ::: x participated in the y Olympics.\nSummer(x) ::: x is a Summer Olympics.\nWinter(x) ::: x is a Winter Olympics.\nAthlete(x, y) ::: x is an athlete from y.\nCalgary(x) ::: x is the Calgary Winter Olympics.\nPremises:\nParticipate(guam, winter) ::: Guam has participated in the Winter Olympics.\nWinter(calgary) ::: In 1988, the Winter Olympics were held in Calgary.\nAthlete(judd, guam) ∧ Participate(judd, calgary) ::: Guam sent an athlete to the Calgary Winter Olympics.\nParticipate(guam, calgary) → Participate(guam, winter) ::: If Guan sent an athlete to the Calgary Winter Olympics, then it participated in the Calgary Winter Olympics.\n∀x (Athlete(x, guam) → Participate(x, calgary)) ::: Judd Bankert is the only athlete from Guam who has ever competed in the Winter Olympics.\nConclusion:\n∃x (Participate(guam, x) ∧ Summer(x)) ::: Guam has participated in the Summer Olympics at least once.\n------\nProblem:"
    ]
  },
  {
    "id": "FOLIO_train_367",
    "context": "Michael O'Donnell is a British physician, journalist, author and broadcaster. One of the word-setters of My Word! was Michael O'Donnell. The magazine World Medicine was edited by Michael O'Donnell. Michael O'Donnell was born in Yorkshire as the son of a general practitioner.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The son of a general practitioner was a word-setter of My Word!.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBritish(x) ::: x is a British person.\nPhysician(x) ::: x is a physician.\nJournalist(x) ::: x is a journalist.\nAuthor(x) ::: x is an author.\nBroadcaster(x) ::: x is a broadcaster.\nWordSetter(x) ::: x is a word-setter.\nMyWord(x) ::: x is My Word!.\nMagazine(x) ::: x is a magazine.\nWorldMedicine(x) ::: x is World Medicine.\nEdit(x, y) ::: x is edited by y.\nBorn(x, y) ::: x was born in y.\nSon(x, y) ::: x is the son of y.\nGeneralPractitioner(x) ::: x is a general practitioner.\nPremises:\nBritish(michael) ∧ Physician(michael) ∧ Journalist(michael) ∧ Author(michael) ∧ Broadcaster(michael) ∧ WordSetter(michael) ∧ MyWord(myWord) ∧ Magazine(worldMedicine) ∧ Edit(worldMedicine, michael) ∧ Born(michael, yorkshire) ∧ Son(michael, generalPractitioner) ::"
    ]
  },
  {
    "id": "FOLIO_train_368",
    "context": "Michael O'Donnell is a British physician, journalist, author and broadcaster. One of the word-setters of My Word! was Michael O'Donnell. The magazine World Medicine was edited by Michael O'Donnell. Michael O'Donnell was born in Yorkshire as the son of a general practitioner.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? World Medicine is not a magazine.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBritish(x) ::: x is a British person.\nPhysician(x) ::: x is a physician.\nJournalist(x) ::: x is a journalist.\nAuthor(x) ::: x is an author.\nBroadcaster(x) ::: x is a broadcaster.\nWordSetter(x) ::: x is a word-setter.\nMagazine(x) ::: x is a magazine.\nEdit(x, y) ::: x is edited by y.\nBorn(x, y) ::: x is born in y.\nSon(x, y) ::: x is the son of y.\nGeneralPractitioner(x) ::: x is a general practitioner.\nPremises:\nBritish(michael) ∧ Physician(michael) ∧ Journalist(michael) ∧ Author(michael) ∧ Broadcaster(michael) ∧ WordSetter(michael) ∧ Magazine(worldMedicine) ∧ Edit(worldMedicine, michael) ∧ Born(michael, yorkshire) ∧ Son(michael, generalPractitioner) ::: Michael O'Donnell is a British physician, journalist, author and broadcaster. One of the word-setters of My Word! was Michael O'Donnell. The magazine"
    ]
  },
  {
    "id": "FOLIO_train_369",
    "context": "Michael O'Donnell is a British physician, journalist, author and broadcaster. One of the word-setters of My Word! was Michael O'Donnell. The magazine World Medicine was edited by Michael O'Donnell. Michael O'Donnell was born in Yorkshire as the son of a general practitioner.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There are no British authors.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBritish(x) ::: x is a British person.\nPhysician(x) ::: x is a physician.\nJournalist(x) ::: x is a journalist.\nAuthor(x) ::: x is an author.\nBroadcaster(x) ::: x is a broadcaster.\nWordSetter(x) ::: x is a word-setter.\nEditor(x, y) ::: x is the editor of y.\nMagazine(x) ::: x is a magazine.\nBorn(x, y) ::: x was born in y.\nSon(x, y) ::: x is the son of y.\nGeneralPractitioner(x) ::: x is a general practitioner.\nPremises:\nBritish(michael) ∧ Physician(michael) ∧ Journalist(michael) ∧ Author(michael) ∧ Broadcaster(michael) ::: Michael O'Donnell is a British physician, journalist, author and broadcaster.\nWordSetter(michael) ::: One of the word-setters of My Word! was Michael O'Donnell.\nEditor(michael, worldMedicine) ∧ Magazine(worldMedicine) ::: The magazine World Medicine was edited by Michael O'Donnell.\nBorn(michael, yorkshire) ∧ Son(m"
    ]
  },
  {
    "id": "FOLIO_train_370",
    "context": "Michael O'Donnell is a British physician, journalist, author and broadcaster. One of the word-setters of My Word! was Michael O'Donnell. The magazine World Medicine was edited by Michael O'Donnell. Michael O'Donnell was born in Yorkshire as the son of a general practitioner.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There are no journalists that were born in Yorkshire.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBritish(x) ::: x is a British person.\nPhysician(x) ::: x is a physician.\nJournalist(x) ::: x is a journalist.\nAuthor(x) ::: x is an author.\nBroadcaster(x) ::: x is a broadcaster.\nWordSetter(x) ::: x is a word-setter.\nEditor(x, y) ::: x is the editor of y.\nMagazine(x) ::: x is a magazine.\nBorn(x, y) ::: x was born in y.\nSon(x, y) ::: x is the son of y.\nGeneralPractitioner(x) ::: x is a general practitioner.\nPremises:\nBritish(michael) ∧ Physician(michael) ∧ Journalist(michael) ∧ Author(michael) ∧ Broadcaster(michael) ∧ WordSetter(michael) ∧ Editor(michael, worldMedicine) ∧ Magazine(worldMedicine) ∧ Born(michael, yorkshire) ∧ Son(michael, generalPractitioner) ::: Michael O'Donnell is a British physician, journalist, author and broadcaster. One of the word-setters of My Word! was Michael O'Donnell. The magazine World Medicine was edited by Michael O'Donnell. Michael O'Donnell was born in Yorkshire as the son of a general practitioner.\nConclusion:\n∃x (Journalist(x) ∧ Born(x, yorkshire)) ::: There are journalists that were born in Yorkshire.\n------"
    ]
  },
  {
    "id": "FOLIO_train_371",
    "context": "Michael O'Donnell is a British physician, journalist, author and broadcaster. One of the word-setters of My Word! was Michael O'Donnell. The magazine World Medicine was edited by Michael O'Donnell. Michael O'Donnell was born in Yorkshire as the son of a general practitioner.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There is a son of a general practitioner that is not an author.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBritish(x) ::: x is a British person.\nPhysician(x) ::: x is a physician.\nJournalist(x) ::: x is a journalist.\nAuthor(x) ::: x is an author.\nBroadcaster(x) ::: x is a broadcaster.\nWordSetter(x) ::: x is a word-setter.\nEditor(x, y) ::: x is the editor of y.\nMagazine(x) ::: x is a magazine.\nBorn(x, y) ::: x was born in y.\nSon(x, y) ::: x is the son of y.\nGeneralPractitioner(x) ::: x is a general practitioner.\nPremises:\nBritish(michael) ∧ Physician(michael) ∧ Journalist(michael) ∧ Author(michael) ∧ Broadcaster(michael) ::: Michael O'Donnell is a British physician, journalist, author and broadcaster.\nWordSetter(michael) ::: One of the word-setters of My Word! was Michael O'Donnell.\nEditor(michael, worldMedicine) ∧ Magazine(worldMedicine) ::: The magazine World Medicine was edited by Michael O'Donnell.\nBorn(michael, yorkshire) ∧ Son(michael, generalPractitioner) ::: Michael O'Donnell was born in Yorkshire as the son of a general practitioner.\nConclusion:\n∃x ∃y (Son(x, y) ∧ ¬Author(x)) ::: There is a son of a general practitioner"
    ]
  },
  {
    "id": "FOLIO_train_372",
    "context": "No homework is fun. Some reading is homework.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Some reading is fun.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nHomework(x) ::: x is homework.\nFun(x) ::: x is fun.\nReading(x) ::: x is reading.\nPremises:\n∀x (Homework(x) → ¬Fun(x)) ::: No homework is fun.\n∃x (Reading(x) ∧ Homework(x)) ::: Some reading is homework.\nConclusion:\n∃x (Reading(x) ∧ Fun(x)) ::: Some reading is fun.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted"
    ]
  },
  {
    "id": "FOLIO_train_373",
    "context": "If violence is good, it is justified. If something is justified, it is lawful.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If violence is good, it is lawful.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nViolence(x) ::: x is violence.\nGood(x) ::: x is good.\nJustified(x) ::: x is justified.\nLawful(x) ::: x is lawful.\nPremises:\n∀x (Violence(x) → Good(x)) ::: If violence is good, it is justified.\n∀x (Justified(x) → Lawful(x)) ::: If something is justified, it is lawful.\nConclusion:\n∀x (Violence(x) → Lawful(x)) ::: If violence is good, it is lawful.\n------\nProblem:\nIf a person is a student, then he or she is a person. If a person is a student, then he or she is a person. If a person is a student, then he or she is a person. If a person is a student, then he or she is a person. If a person is a student, then he or she is a person. If a person is a student, then he or she is a person. If a person is a student, then he or she is a person. If a person is a student, then he or she is a person. If a person is a student, then he or she is a person. If a person is a student, then he or she is a person. If a person is a student, then he or she is a person. If a person is a student, then he or she is a person. If a person is a student, then he or she is a person. If a person is a student, then he or she is a person. If a person is a student, then he or she is a person. If a person is a student, then he or she is a person. If a person is"
    ]
  },
  {
    "id": "FOLIO_train_374",
    "context": "All people who have a horse ranch regularly ride horses for pleasure and sport. All people who have a lot of disposable income have a horse ranch. If people compete in horse dressage shows, then they have a lot of disposable income. If people compete in horse dressage shows, then they have invested in high-quality equestrian gear and equipment. If people regularly ride horses for pleasure and sport, then they do not live in cramped residential buildings. Manny either has a horse ranch and lives in cramped residential buildings, or he neither has a horse ranch nor lives in cramped residential buildings.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Manny regularly rides horses for pleasure and sport.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nHorseRanch(x) ::: x has a horse ranch.\nRide(x) ::: x regularly rides horses for pleasure and sport.\nDisposableIncome(x) ::: x has a lot of disposable income.\nCompete(x) ::: x competes in horse dressage shows.\nEquestrianGear(x) ::: x has invested in high-quality equestrian gear and equipment.\nCrampedResidentialBuildings(x) ::: x lives in cramped residential buildings.\nPremises:\n∀x (HorseRanch(x) → Ride(x)) ::: All people who have a horse ranch regularly ride horses for pleasure and sport.\n∀x (DisposableIncome(x) → HorseRanch(x)) ::: All people who have a lot of disposable income have a horse ranch.\n∀x (Compete(x) → DisposableIncome(x)) ::: If people compete in horse dressage shows, then they have a lot of disposable income.\n∀x (Compete(x) → EquestrianGear(x)) ::: If people compete in horse dressage shows, then they have invested in high-quality equestrian gear and equipment.\n∀x (Ride(x) → ¬CrampedResidentialBuildings(x)) ::: If people regularly ride horses for pleasure and sport, then they do not live in cramped residential buildings.\nHorseRanch(manny) ⊕ CrampedResidentialBuildings(manny) ::: Manny either has a horse ranch and lives in cramped residential buildings, or he neither has a horse ranch nor lives in cramped residential buildings.\nConclusion:\nRide(manny)"
    ]
  },
  {
    "id": "FOLIO_train_375",
    "context": "All people who have a horse ranch regularly ride horses for pleasure and sport. All people who have a lot of disposable income have a horse ranch. If people compete in horse dressage shows, then they have a lot of disposable income. If people compete in horse dressage shows, then they have invested in high-quality equestrian gear and equipment. If people regularly ride horses for pleasure and sport, then they do not live in cramped residential buildings. Manny either has a horse ranch and lives in cramped residential buildings, or he neither has a horse ranch nor lives in cramped residential buildings.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Manny competes in horse dressage shows and has invested in high-quality equestrian equipment and gear.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nHorseRanch(x) ::: x has a horse ranch.\nRide(x) ::: x regularly rides horses for pleasure and sport.\nDisposableIncome(x) ::: x has a lot of disposable income.\nDressage(x) ::: x competes in horse dressage shows.\nEquipment(x) ::: x has invested in high-quality equestrian gear and equipment.\nCramped(x) ::: x lives in cramped residential buildings.\nPremises:\n∀x (HorseRanch(x) → Ride(x)) ::: All people who have a horse ranch regularly ride horses for pleasure and sport.\n∀x (DisposableIncome(x) → HorseRanch(x)) ::: All people who have a lot of disposable income have a horse ranch.\n∀x (Dressage(x) → DisposableIncome(x)) ::: If people compete in horse dressage shows, then they have a lot of disposable income.\n∀x (Dressage(x) → Equipment(x)) ::: If people compete in horse dressage shows, then they have invested in high-quality equestrian gear and equipment.\n∀x (Ride(x) → ¬Cramped(x)) ::: If people regularly ride horses for pleasure and sport, then they do not live in cramped residential buildings.\n(HorseRanch(manny) ∧ Cramped(manny)) ⊕ ¬(HorseRanch(manny) ∨ Cramped(manny)) ::: Manny either has a horse ranch and lives in cramped residential buildings, or he neither has a horse ranch nor lives in cramped residential buildings."
    ]
  },
  {
    "id": "FOLIO_train_376",
    "context": "All people who have a horse ranch regularly ride horses for pleasure and sport. All people who have a lot of disposable income have a horse ranch. If people compete in horse dressage shows, then they have a lot of disposable income. If people compete in horse dressage shows, then they have invested in high-quality equestrian gear and equipment. If people regularly ride horses for pleasure and sport, then they do not live in cramped residential buildings. Manny either has a horse ranch and lives in cramped residential buildings, or he neither has a horse ranch nor lives in cramped residential buildings.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Manny either has a horse ranch or competes in horse dressage shows, then Manny has not invested in high-quality equestrian equipment and gear.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nHorseRanch(x) ::: x has a horse ranch.\nRide(x) ::: x regularly rides horses for pleasure and sport.\nDisposableIncome(x) ::: x has a lot of disposable income.\nDressage(x) ::: x competes in horse dressage shows.\nEquipment(x) ::: x has invested in high-quality equestrian gear and equipment.\nCramped(x) ::: x lives in cramped residential buildings.\nPremises:\n∀x (HorseRanch(x) → Ride(x)) ::: All people who have a horse ranch regularly ride horses for pleasure and sport.\n∀x (DisposableIncome(x) → HorseRanch(x)) ::: All people who have a lot of disposable income have a horse ranch.\n∀x (Dressage(x) → DisposableIncome(x)) ::: If people compete in horse dressage shows, then they have a lot of disposable income.\n∀x (Dressage(x) → Equipment(x)) ::: If people compete in horse dressage shows, then they have invested in high-quality equestrian gear and equipment.\n∀x (Ride(x) → ¬Cramped(x)) ::: If people regularly ride horses for pleasure and sport, then they do not live in cramped residential buildings.\n(HorseRanch(manny) ∧ Cramped(manny)) ⊕ ¬(HorseRanch(manny) ∨ Cramped(manny)) ::: Manny either has a horse ranch and lives in cramped residential buildings, or he neither has a horse ranch nor lives in cramped residential buildings."
    ]
  },
  {
    "id": "FOLIO_train_377",
    "context": "A roundel is a rounded artillery fortification. A roundel is not higher than adjacent walls. Cannons can be deployed on artillery fortifications. Roundels are the oldest artillery fortifications. Battery towers are an artillery fortification.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Cannons can be deployed on battery towers.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRoundel(x) ::: x is a roundel.\nHigher(x, y) ::: x is higher than y.\nAdjacent(x, y) ::: x is adjacent to y.\nArtilleryFortification(x) ::: x is an artillery fortification.\nCannon(x) ::: x is a cannon.\nDeploy(x, y) ::: x can be deployed on y.\nBatteryTower(x) ::: x is a battery tower.\nOldest(x) ::: x is the oldest.\nPremises:\n∀x (Roundel(x) → ¬Higher(x, Adjacent(x, y))) ::: A roundel is not higher than adjacent walls.\n∀x (Roundel(x) → ArtilleryFortification(x)) ::: A roundel is an artillery fortification.\n∀x (ArtilleryFortification(x) → Deploy(Cannon(x), x)) ::: Cannons can be deployed on artillery fortifications.\n∀x (Roundel(x) → Oldest(x)) ::: Roundels are the oldest artillery fortifications.\n∀x (BatteryTower(x) → ArtilleryFortification(x)) ::: Battery towers are an artillery fortification.\nConclusion:\n∀x (BatteryTower(x) → Deploy(Cannon(x), x)) ::: Cannons can be deployed on battery towers.\n------\nProblem:\nA person who is a student is a person who is a learner. A person who is a learner is a person who is a teacher. A person who is a teacher is a person who is a student. A person"
    ]
  },
  {
    "id": "FOLIO_train_378",
    "context": "A roundel is a rounded artillery fortification. A roundel is not higher than adjacent walls. Cannons can be deployed on artillery fortifications. Roundels are the oldest artillery fortifications. Battery towers are an artillery fortification.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Roundels are older than battery towers.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRoundel(x) ::: x is a roundel.\nRounded(x) ::: x is rounded.\nHigher(x, y) ::: x is higher than y.\nAdjacent(x, y) ::: x is adjacent to y.\nArtilleryFortification(x) ::: x is an artillery fortification.\nCannon(x) ::: x is a cannon.\nDeploy(x, y) ::: x can be deployed on y.\nBatteryTower(x) ::: x is a battery tower.\nOlder(x, y) ::: x is older than y.\nPremises:\n∀x (Roundel(x) → Rounded(x)) ::: A roundel is a rounded artillery fortification.\n∀x (Roundel(x) → ¬Higher(x, Adjacent(x))) ::: A roundel is not higher than adjacent walls.\n∀x (Cannon(x) → Deploy(x, ArtilleryFortification(x))) ::: Cannons can be deployed on artillery fortifications.\n∀x (Roundel(x) → Older(x, ArtilleryFortification(x))) ::: Roundels are the oldest artillery fortifications.\n∀x (BatteryTower(x) → ArtilleryFortification(x)) ::: Battery towers are an artillery fortification.\nConclusion:\n∀x (Roundel(x) → Older(x, BatteryTower(x))) ::: Roundels are older than battery towers.\n------\nProblem:\nA person who is a student is a person who is a teacher. A person who is a teacher is a person who is a student."
    ]
  },
  {
    "id": "FOLIO_train_379",
    "context": "A roundel is a rounded artillery fortification. A roundel is not higher than adjacent walls. Cannons can be deployed on artillery fortifications. Roundels are the oldest artillery fortifications. Battery towers are an artillery fortification.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Battery towers are higher than adjacent walls.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRoundel(x) ::: x is a roundel.\nHigher(x, y) ::: x is higher than y.\nAdjacent(x, y) ::: x is adjacent to y.\nArtilleryFortification(x) ::: x is an artillery fortification.\nCannon(x) ::: x is a cannon.\nDeploy(x, y) ::: x can be deployed on y.\nOldest(x) ::: x is the oldest.\nBatteryTower(x) ::: x is a battery tower.\nPremises:\n∀x (Roundel(x) → ¬Higher(x, Adjacent(x))) ::: A roundel is not higher than adjacent walls.\n∀x (Roundel(x) → ArtilleryFortification(x)) ::: A roundel is an artillery fortification.\n∀x (Cannon(x) → Deploy(x, ArtilleryFortification(x))) ::: Cannons can be deployed on artillery fortifications.\n∀x (Roundel(x) → Oldest(x)) ::: Roundels are the oldest artillery fortifications.\n∀x (BatteryTower(x) → ArtilleryFortification(x)) ::: Battery towers are an artillery fortification.\nConclusion:\n∀x (BatteryTower(x) → Higher(x, Adjacent(x))) ::: Battery towers are higher than adjacent walls.\n------\nProblem:\nA person who is a student is a person who is a learner. A person who is a learner is a person who is a teacher. A person who is a teacher is a person who is a student. A person who"
    ]
  },
  {
    "id": "FOLIO_train_380",
    "context": "A roundel is a rounded artillery fortification. A roundel is not higher than adjacent walls. Cannons can be deployed on artillery fortifications. Roundels are the oldest artillery fortifications. Battery towers are an artillery fortification.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Roundels can be deployed on roundels.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRoundel(x) ::: x is a roundel.\nHigher(x, y) ::: x is higher than y.\nAdjacent(x, y) ::: x is adjacent to y.\nCannon(x) ::: x is a cannon.\nDeploy(x, y) ::: x can be deployed on y.\nArtilleryFortification(x) ::: x is an artillery fortification.\nBatteryTower(x) ::: x is a battery tower.\nPremises:\n∀x (Roundel(x) → ¬Higher(x, Adjacent(x, y))) ::: A roundel is not higher than adjacent walls.\n∀x (Cannon(x) → Deploy(x, ArtilleryFortification(x))) ::: Cannons can be deployed on artillery fortifications.\n∀x (Roundel(x) → ArtilleryFortification(x)) ::: Roundels are the oldest artillery fortifications.\nBatteryTower(x) → ArtilleryFortification(x) ::: Battery towers are an artillery fortification.\nConclusion:\nDeploy(Roundel(x), Roundel(y)) ::: Roundels can be deployed on roundels.\n------"
    ]
  },
  {
    "id": "FOLIO_train_381",
    "context": "All tissues are soft. Some papers are tissues.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Some papers are hard.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTissue(x) ::: x is a tissue.\nPaper(x) ::: x is a paper.\nSoft(x) ::: x is soft.\nHard(x) ::: x is hard.\nPremises:\n∀x (Tissue(x) → Soft(x)) ::: All tissues are soft.\n∃x (Paper(x) ∧ Tissue(x)) ::: Some papers are tissues.\nConclusion:\n∃x (Paper(x) ∧ Hard(x)) ::: Some papers are hard.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true"
    ]
  },
  {
    "id": "FOLIO_train_382",
    "context": "All volunteers receive intangible benefits for their work. Volunteers work regularly or on an as-needed basis. Some volunteers are trained. Volunteers work in groups or individually. Environmental volunteers contribute toward environmental management or conservation. Participating in natural disaster response is an example of volunteers working in groups on an as-needed basis.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Volunteers who participate in natural disaster response receive intangible benefits for their work.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nVolunteer(x) ::: x is a volunteer.\nReceive(x, y) ::: x receives y.\nIntangibleBenefits(x) ::: x is an intangible benefit.\nWork(x) ::: x works.\nRegularly(x) ::: x works regularly.\nAsNeeded(x) ::: x works on an as-needed basis.\nTrained(x) ::: x is trained.\nGroup(x) ::: x works in groups.\nIndividual(x) ::: x works individually.\nContribute(x, y) ::: x contributes toward y.\nEnvironmentalManagement(x) ::: x is an example of environmental management.\nConservation(x) ::: x is an example of conservation.\nParticipate(x, y) ::: x participates in y.\nNaturalDisasterResponse(x) ::: x is an example of natural disaster response.\nPremises:\n∀x (Volunteer(x) → Receive(x, IntangibleBenefits(x))) ::: All volunteers receive intangible benefits for their work.\n∀x (Volunteer(x) → (Regularly(x) ⊕ AsNeeded"
    ]
  },
  {
    "id": "FOLIO_train_383",
    "context": "All volunteers receive intangible benefits for their work. Volunteers work regularly or on an as-needed basis. Some volunteers are trained. Volunteers work in groups or individually. Environmental volunteers contribute toward environmental management or conservation. Participating in natural disaster response is an example of volunteers working in groups on an as-needed basis.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Environmental volunteers work in groups.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nVolunteer(x) ::: x is a volunteer.\nReceive(x, y) ::: x receives y.\nIntangibleBenefit(x) ::: x is an intangible benefit.\nWork(x) ::: x works.\nRegularly(x) ::: x works regularly.\nAsNeeded(x) ::: x works on an as-needed basis.\nTrained(x) ::: x is trained.\nGroup(x) ::: x works in groups.\nIndividual(x) ::: x works individually.\nContribute(x, y) ::: x contributes toward y.\nManagement(x) ::: x is environmental management.\nConservation(x) ::: x is environmental conservation.\nParticipate(x, y) ::: x participates in y.\nResponse(x) ::: x is a natural disaster response.\nPremises:\n∀x (Volunteer(x) → Receive(x, intangibleBenefit)) ::: All volunteers receive intangible benefits for their work.\n∀x (Volunteer(x) → (Regularly(x) ⊕ AsNeeded(x))) ::: Volunteers work regularly or on an as-need"
    ]
  },
  {
    "id": "FOLIO_train_384",
    "context": "All volunteers receive intangible benefits for their work. Volunteers work regularly or on an as-needed basis. Some volunteers are trained. Volunteers work in groups or individually. Environmental volunteers contribute toward environmental management or conservation. Participating in natural disaster response is an example of volunteers working in groups on an as-needed basis.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? To be a volunteer, you must be trained.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nVolunteer(x) ::: x is a volunteer.\nReceive(x, y) ::: x receives y.\nIntangibleBenefit(x) ::: x is an intangible benefit.\nWork(x) ::: x works.\nRegularly(x) ::: x works regularly.\nAsNeeded(x) ::: x works on an as-needed basis.\nTrained(x) ::: x is trained.\nGroup(x) ::: x works in groups.\nIndividual(x) ::: x works individually.\nContribute(x, y) ::: x contributes toward y.\nManagement(x) ::: x is environmental management.\nConservation(x) ::: x is environmental conservation.\nParticipate(x, y) ::: x participates in y.\nResponse(x) ::: x is a natural disaster response.\nPremises:\n∀x (Volunteer(x) → Receive(x, IntangibleBenefit(x))) ::: All volunteers receive intangible benefits for their work.\n∀x (Volunteer(x) → (Regularly(x) ⊕ AsNeeded(x))) ::: Volunteers work regularly or on an as"
    ]
  },
  {
    "id": "FOLIO_train_385",
    "context": "All people who are very consistent and enjoy sticking to their regular routines do not like surprises. If people wear flannel shirts every day, then they are very consistent and enjoy sticking to their regular routines. If people do not like shopping for clothes and other materialistic goods, then they wear flannel shirts every day. All old people living in stable homes do not like surprises. If people have very high energy and are impulsive, then they like surprises. If Mike is not a person who wears flannel shirts every day and has very high energy and is impulsive, then Mike either is very consistent and enjoys sticking to his regular routines or does not like surprises.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mike is an old person living in a stable home.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nConsistent(x) ::: x is very consistent.\nEnjoy(x, y) ::: x enjoys y.\nRoutine(x) ::: x is a regular routine.\nSurprise(x) ::: x is a surprise.\nFlannelShirt(x) ::: x is a flannel shirt.\nWear(x, y) ::: x wears y.\nShop(x, y) ::: x shops for y.\nMaterialistic(x) ::: x is a materialistic good.\nOld(x) ::: x is an old person.\nStableHome(x) ::: x is a stable home.\nEnergy(x) ::: x is a high energy.\nImpulsive(x) ::: x is impulsive.\nPremises:\n∀x (Consistent(x) ∧ Enjoy(x, Routine(x)) → ¬Surprise(x)) ::: All people who are very consistent and enjoy sticking to their regular routines do not like surprises.\n∀x (Wear(x, FlannelShirt(x)) → Consistent(x) ∧ Enjoy(x, Routine(x))) ::: If people wear flannel shirts every day, then they are very consistent"
    ]
  },
  {
    "id": "FOLIO_train_386",
    "context": "All people who are very consistent and enjoy sticking to their regular routines do not like surprises. If people wear flannel shirts every day, then they are very consistent and enjoy sticking to their regular routines. If people do not like shopping for clothes and other materialistic goods, then they wear flannel shirts every day. All old people living in stable homes do not like surprises. If people have very high energy and are impulsive, then they like surprises. If Mike is not a person who wears flannel shirts every day and has very high energy and is impulsive, then Mike either is very consistent and enjoys sticking to his regular routines or does not like surprises.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Mike wears flannel shirts every day or does not like shopping for clothes and other materialistic goods, then Mike is neither an old person living in a stable home nor does not like shopping for clothes and other materialistic goods.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nConsistent(x) ::: x is very consistent.\nEnjoy(x, y) ::: x enjoys y.\nRoutine(x) ::: x is a regular routine.\nSurprise(x) ::: x is a surprise.\nFlannelShirt(x) ::: x is a flannel shirt.\nWear(x, y) ::: x wears y.\nShop(x, y) ::: x shops for y.\nMaterialisticGood(x) ::: x is a materialistic good.\nOld(x) ::: x is an old person.\nStableHome(x) ::: x is a stable home.\nEnergy(x) ::: x is a high energy.\nImpulsive(x) ::: x is impulsive.\nPremises:\n∀x (Consistent(x) ∧ Enjoy(x, Routine(x)) → ¬Surprise(x)) ::: All people who are very consistent and enjoy sticking to their regular routines do not like surprises.\n∀x (Wear(x, FlannelShirt(x)) → Consistent(x) ∧ Enjoy(x, Routine(x))) ::: If people wear flannel shirts every day, then they are very"
    ]
  },
  {
    "id": "FOLIO_train_387",
    "context": "All people who are very consistent and enjoy sticking to their regular routines do not like surprises. If people wear flannel shirts every day, then they are very consistent and enjoy sticking to their regular routines. If people do not like shopping for clothes and other materialistic goods, then they wear flannel shirts every day. All old people living in stable homes do not like surprises. If people have very high energy and are impulsive, then they like surprises. If Mike is not a person who wears flannel shirts every day and has very high energy and is impulsive, then Mike either is very consistent and enjoys sticking to his regular routines or does not like surprises.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Mike is not an old person living in a stable home and does not like shopping for clothes and other materialistic goods, then Mike does not like shopping for clothes and other materialistic goods.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nConsistent(x) ::: x is very consistent.\nEnjoy(x, y) ::: x enjoys y.\nRoutine(x) ::: x is a regular routine.\nSurprise(x) ::: x is a surprise.\nFlannelShirt(x) ::: x is a flannel shirt.\nWear(x, y) ::: x wears y.\nShop(x, y) ::: x shops for y.\nMaterialisticGood(x) ::: x is a materialistic good.\nOld(x) ::: x is an old person.\nStableHome(x) ::: x is a stable home.\nEnergy(x) ::: x is a high energy.\nImpulsive(x) ::: x is impulsive.\nPremises:\n∀x (Consistent(x) ∧ Enjoy(x, Routine(x)) → ¬Surprise(x)) ::: All people who are very consistent and enjoy sticking to their regular routines do not like surprises.\n∀x (Wear(x, FlannelShirt(x)) → Consistent(x) ∧ Enjoy(x, Routine(x))) ::: If people wear flannel shirts every day, then they are very"
    ]
  },
  {
    "id": "FOLIO_train_388",
    "context": "Adam owns cars. Adam has a favorite car. Among the cars he owns, Adam's favorite car is European. Adam broke his favorite car.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Adam owns a Japanese car.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nOwn(x, y) ::: x owns y.\nFavorite(x, y) ::: x's favorite y.\nEuropean(x) ::: x is European.\nJapanese(x) ::: x is Japanese.\nCar(x) ::: x is a car.\nBroken(x) ::: x is broken.\nPremises:\n∀x (Own(adam, x) → Car(x)) ::: Adam owns cars.\n∃x (Own(adam, x) ∧ Favorite(adam, x)) ::: Adam has a favorite car.\n∀x (Favorite(adam, x) → European(x)) ::: Among the cars he owns, Adam's favorite car is European.\n∃x (Own(adam, x) ∧ Favorite(adam, x) ∧ Broken(x)) ::: Adam broke his favorite car.\nConclusion:\n∃x (Own(adam, x) ∧ Japanese(x)) ::: Adam owns a Japanese car.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine."
    ]
  },
  {
    "id": "FOLIO_train_389",
    "context": "Adam owns cars. Adam has a favorite car. Among the cars he owns, Adam's favorite car is European. Adam broke his favorite car.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Adam broke a European car.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nOwn(x, y) ::: x owns y.\nFavorite(x, y) ::: x's favorite y.\nCar(x) ::: x is a car.\nEuropean(x) ::: x is European.\nBreak(x, y) ::: x broke y.\nPremises:\n∀x (Own(adam, x) → Car(x)) ::: Adam owns cars.\n∃x (Own(adam, x) ∧ Favorite(adam, x)) ::: Adam has a favorite car.\n∀x (Favorite(adam, x) → Car(x)) ::: Among the cars he owns, Adam's favorite car is European.\nBreak(adam, favorite(adam, car)) ::: Adam broke his favorite car.\nConclusion:\nBreak(adam, european(car)) ::: Adam broke a European car.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a"
    ]
  },
  {
    "id": "FOLIO_train_390",
    "context": "No buildings in New Haven are higher than 400 meters. All buildings managed by Yale Housing are in New Haven. All buildings in Manhattan are higher than 400 meters. All buildings owned by Bloomberg are in Manhattan. All buildings with the Bloomberg logo are buildings owned by Bloomberg. Tower A is neither in New Haven nor in Manhattan. Tower B is a building with the Bloomberg logo and in Manhattan.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tower A is higher than 400 meters.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBuilding(x) ::: x is a building.\nNewHaven(x) ::: x is in New Haven.\nManhattan(x) ::: x is in Manhattan.\nHigherThan400Meters(x) ::: x is higher than 400 meters.\nYaleHousing(x) ::: x is managed by Yale Housing.\nBloomberg(x) ::: x is owned by Bloomberg.\nBloombergLogo(x) ::: x has the Bloomberg logo.\nTowerA(x) ::: x is Tower A.\nTowerB(x) ::: x is Tower B.\nPremises:\n∀x (Building(x) ∧ NewHaven(x) → ¬HigherThan400Meters(x)) ::: No buildings in New Haven are higher than 400 meters.\n∀x (Building(x) ∧ YaleHousing(x) → NewHaven(x)) ::: All buildings managed by Yale Housing are in New Haven.\n∀x (Building(x) ∧ Manhattan(x) → HigherThan400Meters(x)) ::: All buildings in Manhattan are higher than 400 meters.\n∀x (Building(x) ∧ Bloomberg(x) → Manhattan(x)) ::: All buildings owned by Bloomberg are in Manhattan.\n∀x (Building(x) ∧ BloombergLogo(x) → Bloomberg(x)) ::: All buildings with the Bloomberg logo are buildings owned by Bloomberg.\nTowerA(towerA) ∧ ¬(NewHaven(towerA) ∨ Manhattan(towerA)) ::: Tower A is neither in New Haven nor in Manhattan.\nTowerB(towerB) ∧ BloombergLogo(towerB) ∧ Manhattan(towerB) ::: Tower B is a building with the Bloomberg logo and in Manhattan.\nConclusion:\nHigherThan400Meters(towerA) ::: Tower A is higher than 400 meters.\n------"
    ]
  },
  {
    "id": "FOLIO_train_391",
    "context": "No buildings in New Haven are higher than 400 meters. All buildings managed by Yale Housing are in New Haven. All buildings in Manhattan are higher than 400 meters. All buildings owned by Bloomberg are in Manhattan. All buildings with the Bloomberg logo are buildings owned by Bloomberg. Tower A is neither in New Haven nor in Manhattan. Tower B is a building with the Bloomberg logo and in Manhattan.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tower A is not higher than 400 meters.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBuilding(x) ::: x is a building.\nNewHaven(x) ::: x is in New Haven.\nManhattan(x) ::: x is in Manhattan.\nHigherThan400Meters(x) ::: x is higher than 400 meters.\nYaleHousing(x) ::: x is managed by Yale Housing.\nBloomberg(x) ::: x is owned by Bloomberg.\nBloombergLogo(x) ::: x has the Bloomberg logo.\nTowerA(x) ::: x is Tower A.\nTowerB(x) ::: x is Tower B.\nPremises:\n∀x (Building(x) ∧ NewHaven(x) → ¬HigherThan400Meters(x)) ::: No buildings in New Haven are higher than 400 meters.\n∀x (Building(x) ∧ YaleHousing(x) → NewHaven(x)) ::: All buildings managed by Yale Housing are in New Haven.\n∀x (Building(x) ∧ Manhattan(x) → HigherThan400Meters(x)) ::: All buildings in Manhattan are higher than 400 meters.\n∀x (Building(x) ∧ Bloomberg(x) → Manhattan(x)) ::: All buildings owned by Bloomberg are in Manhattan.\n∀x (Building(x) ∧ BloombergLogo(x) → Bloomberg(x)) ::: All buildings with the Bloomberg logo are buildings owned by Bloomberg.\nTowerA(towerA) ∧ ¬(NewHaven(towerA) ∨ Manhattan(towerA)) ::: Tower A is neither in New Haven nor in Manhattan.\nTowerB(towerB) ∧ BloombergLogo(towerB) ∧ Manhattan(towerB) ::: Tower B is a building with the Bloomberg logo and in Manhattan.\nConclusion:\n¬HigherThan400Meters(towerA) ::: Tower A is not higher than 400 meters."
    ]
  },
  {
    "id": "FOLIO_train_392",
    "context": "No buildings in New Haven are higher than 400 meters. All buildings managed by Yale Housing are in New Haven. All buildings in Manhattan are higher than 400 meters. All buildings owned by Bloomberg are in Manhattan. All buildings with the Bloomberg logo are buildings owned by Bloomberg. Tower A is neither in New Haven nor in Manhattan. Tower B is a building with the Bloomberg logo and in Manhattan.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tower A is a building with the Bloomberg logo or managed by Yale Housing.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nNewHaven(x) ::: x is in New Haven.\nManhattan(x) ::: x is in Manhattan.\nBuilding(x) ::: x is a building.\nHigherThan(x, y) ::: x is higher than y meters.\nYaleHousing(x) ::: x is managed by Yale Housing.\nBloomberg(x) ::: x is owned by Bloomberg.\nBloombergLogo(x) ::: x has the Bloomberg logo.\nTowerA(x) ::: x is Tower A.\nTowerB(x) ::: x is Tower B.\nPremises:\n∀x (Building(x) ∧ NewHaven(x) → ¬HigherThan(x, 400)) ::: No buildings in New Haven are higher than 400 meters.\n∀x (Building(x) ∧ YaleHousing(x) → NewHaven(x)) ::: All buildings managed by Yale Housing are in New Haven.\n∀x (Building(x) ∧ Manhattan(x) → HigherThan(x, 400)) ::: All buildings in Manhattan are higher than 400 meters.\n∀x (Building(x) ∧ Bloomberg(x) → Manhattan(x)) ::: All buildings owned by Bloomberg are in Manhattan.\n∀x (Building(x) ∧ BloombergLogo(x) → Bloomberg(x)) ::: All buildings with the Bloomberg logo are buildings owned by Bloomberg.\nTowerA(towerA) ∧ ¬(NewHaven(towerA) ∨ Manhattan(towerA)) ::: Tower A is neither in New Haven nor in Manhattan.\nTowerB(towerB) ∧ BloombergLogo(towerB) ∧ Manhattan(towerB) ::: Tower B is a building with the Bloomberg logo and in Manhattan.\nConclusion:\nBloombergLogo(towerA) ∨ YaleHousing(towerA) ::: Tower A is a building with the Bloomberg logo or"
    ]
  },
  {
    "id": "FOLIO_train_393",
    "context": "No buildings in New Haven are higher than 400 meters. All buildings managed by Yale Housing are in New Haven. All buildings in Manhattan are higher than 400 meters. All buildings owned by Bloomberg are in Manhattan. All buildings with the Bloomberg logo are buildings owned by Bloomberg. Tower A is neither in New Haven nor in Manhattan. Tower B is a building with the Bloomberg logo and in Manhattan.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tower A is neither a building with the Bloomberg logo nor managed by Yale Housing.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBuilding(x) ::: x is a building.\nNewHaven(x) ::: x is in New Haven.\nManhattan(x) ::: x is in Manhattan.\nHigherThan400Meters(x) ::: x is higher than 400 meters.\nYaleHousing(x) ::: x is managed by Yale Housing.\nBloomberg(x) ::: x is owned by Bloomberg.\nBloombergLogo(x) ::: x has the Bloomberg logo.\nTowerA(x) ::: x is Tower A.\nTowerB(x) ::: x is Tower B.\nPremises:\n∀x (Building(x) ∧ NewHaven(x) → ¬HigherThan400Meters(x)) ::: No buildings in New Haven are higher than 400 meters.\n∀x (Building(x) ∧ YaleHousing(x) → NewHaven(x)) ::: All buildings managed by Yale Housing are in New Haven.\n∀x (Building(x) ∧ Manhattan(x) → HigherThan400Meters(x)) ::: All buildings in Manhattan are higher than 400 meters.\n∀x (Building(x) ∧ Bloomberg(x) → Manhattan(x)) ::: All buildings owned by Bloomberg are in Manhattan.\n∀x (Building(x) ∧ BloombergLogo(x) → Bloomberg(x)) ::: All buildings with the Bloomberg logo are buildings owned by Bloomberg.\n¬(NewHaven(towerA) ∨ Manhattan(towerA)) ::: Tower A is neither in New Haven nor in Manhattan.\nBloombergLogo(towerB) ∧ Manhattan(towerB) ::: Tower B is a building with the Bloomberg logo and in Manhattan.\nConclusion:\n¬(BloombergLogo(towerA) ∨ YaleHousing(towerA)) ::: Tower A is neither a building with the Bloomberg logo nor managed by Yale Housing.\n------\nProblem:\nAll people"
    ]
  },
  {
    "id": "FOLIO_train_394",
    "context": "No fish are birds. Everything that is an osprey is a bird. If something is a carp, then it is a fish. All goldfish are carp. If Bubbles is either an osprey or a goldfish, then Bubbles is not a fish.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Bubbles is an Osprey.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFish(x) ::: x is a fish.\nBird(x) ::: x is a bird.\nOsprey(x) ::: x is an osprey.\nCarp(x) ::: x is a carp.\nGoldfish(x) ::: x is a goldfish.\nPremises:\n¬∃x (Fish(x) ∧ Bird(x)) ::: No fish are birds.\n∀x (Osprey(x) → Bird(x)) ::: Everything that is an osprey is a bird.\n∀x (Carp(x) → Fish(x)) ::: If something is a carp, then it is a fish.\n∀x (Goldfish(x) → Carp(x)) ::: All goldfish are carp.\n(Osprey(bubbles) ∨ Goldfish(bubbles)) → ¬Fish(bubbles) ::: If Bubbles is either an osprey or a goldfish, then Bubbles is not a fish.\nConclusion:\nOsprey(bubbles) ::: Bubbles is an Osprey.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine"
    ]
  },
  {
    "id": "FOLIO_train_395",
    "context": "No fish are birds. Everything that is an osprey is a bird. If something is a carp, then it is a fish. All goldfish are carp. If Bubbles is either an osprey or a goldfish, then Bubbles is not a fish.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Bubbles is a carp.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFish(x) ::: x is a fish.\nBird(x) ::: x is a bird.\nOsprey(x) ::: x is an osprey.\nCarp(x) ::: x is a carp.\nGoldfish(x) ::: x is a goldfish.\nPremises:\n∀x (Fish(x) → ¬Bird(x)) ::: No fish are birds.\n∀x (Osprey(x) → Bird(x)) ::: Everything that is an osprey is a bird.\n∀x (Carp(x) → Fish(x)) ::: If something is a carp, then it is a fish.\n∀x (Goldfish(x) → Carp(x)) ::: All goldfish are carp.\n(Osprey(bubbles) ∨ Goldfish(bubbles)) → ¬Fish(bubbles) ::: If Bubbles is either an osprey or a goldfish, then Bubbles is not a fish.\nConclusion:\nCarp(bubbles) ::: Bubbles is a carp.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug"
    ]
  },
  {
    "id": "FOLIO_train_396",
    "context": "No fish are birds. Everything that is an osprey is a bird. If something is a carp, then it is a fish. All goldfish are carp. If Bubbles is either an osprey or a goldfish, then Bubbles is not a fish.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Bubbles is not a carp.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFish(x) ::: x is a fish.\nBird(x) ::: x is a bird.\nOsprey(x) ::: x is an osprey.\nCarp(x) ::: x is a carp.\nGoldfish(x) ::: x is a goldfish.\nPremises:\n¬∃x (Fish(x) ∧ Bird(x)) ::: No fish are birds.\n∀x (Osprey(x) → Bird(x)) ::: Everything that is an osprey is a bird.\n∀x (Carp(x) → Fish(x)) ::: If something is a carp, then it is a fish.\n∀x (Goldfish(x) → Carp(x)) ::: All goldfish are carp.\n(Osprey(bubbles) ∨ Goldfish(bubbles)) → ¬Fish(bubbles) ::: If Bubbles is either an osprey or a goldfish, then Bubbles is not a fish.\nConclusion:\n¬Carp(bubbles) ::: Bubbles is not a carp.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine"
    ]
  },
  {
    "id": "FOLIO_train_397",
    "context": "Mr. and Mrs. Smith make a travel plan, they want to go to a city in California or Florida, and where neither of them has ever been. Cities in California that they are interested in are San Francisco, Los Angeles, and San Diego. Cities in Florida that they are interested in are Orlando and Miami. Mr. Smith has been to two cities in California. Mrs. Smith has been to one city in Florida.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mr. Smith has been to San Francisco.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCalifornia(x) ::: x is a city in California.\nFlorida(x) ::: x is a city in Florida.\nSmith(x) ::: x is Mr. Smith.\nSmith(y) ::: y is Mrs. Smith.\nInterested(x) ::: x is a city that they are interested in.\nEverBeen(x, y) ::: x has been to y.\nPremises:\n∀x (California(x) → Interested(x)) ::: Cities in California that they are interested in are San Francisco, Los Angeles, and San Diego.\n∀x (Florida(x) → Interested(x)) ::: Cities in Florida that they are interested in are Orlando and Miami.\n∃x (California(x) ∧ EverBeen(Smith, x)) ::: Mr. Smith has been to two cities in California.\n∃x (Florida(x) ∧ EverBeen(Smith, x)) ::: Mrs. Smith has been to one city in Florida.\nConclusion:\nEverBeen(Smith, sanFrancisco) ::: Mr. Smith has been to San Francisco.\n------\nProblem:\nThe following is a list of the top 10 most populous cities in the United States.\n1. New York City, New York\n2. Los Angeles, California\n3. Chicago, Illinois\n4. Houston, Texas\n5. Phoenix, Arizona\n6. Philadelphia, Pennsylvania\n7. San Antonio, Texas\n8. San Diego, California\n9. Dallas, Texas\n10. San Jose, California\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The most populous city in the United States is in California.\nBased on the above information, is the following statement true, false, or uncertain? The most populous city in the United States is in Texas.\nBased on the above information, is the following statement true, false, or uncertain? The most populous city in the United States is in New York.\nBased on the above information, is the following statement true, false, or uncertain? The most populous city in the United States is in Illinois.\nBased on the"
    ]
  },
  {
    "id": "FOLIO_train_398",
    "context": "Mr. and Mrs. Smith make a travel plan, they want to go to a city in California or Florida, and where neither of them has ever been. Cities in California that they are interested in are San Francisco, Los Angeles, and San Diego. Cities in Florida that they are interested in are Orlando and Miami. Mr. Smith has been to two cities in California. Mrs. Smith has been to one city in Florida.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? They have at leat one candidate city in Florida to visit.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCalifornia(x) ::: x is a city in California.\nFlorida(x) ::: x is a city in Florida.\nSmith(x) ::: x is Mr. Smith.\nSmith(y) ::: y is Mrs. Smith.\nVisit(x, y) ::: x has been to y.\nPremises:\n∃x (California(x) ∧ Visit(smith, x)) ::: Mr. Smith has been to two cities in California.\n∃x (Florida(x) ∧ Visit(smith, x)) ::: Mr. Smith has been to two cities in California.\n∃x (Florida(x) ∧ Visit(smith, x)) ::: Mr. Smith has been to two cities in California.\n∃x (Florida(x) ∧ Visit(smith, x)) ::: Mr. Smith has been to two cities in California.\n∃x (Florida(x) ∧ Visit(smith, x)) ::: Mr. Smith has been to two cities in California.\n∃x (Florida(x) ∧ Visit(smith, x)) ::: Mr. Smith has been to two cities in California.\n∃x (Florida(x) ∧ Visit(smith, x)) ::: Mr. Smith has been to two cities in California.\n∃x (Florida(x) ∧ Visit(smith, x)) ::: Mr. Smith has been to two cities in California.\n∃x (Florida(x) ∧ Visit(smith, x)) ::: Mr. Smith has been to two cities in California.\n∃x (Florida(x) ∧ Visit(smith, x)) ::: Mr. Smith has been to two cities in California.\n∃x (Florida(x) ∧ Visit(smith, x)) ::: Mr. Smith has been to two cities in California.\n∃x (Florida(x) ∧ Visit(smith, x)) ::: Mr. Smith has been to two cities in California.��"
    ]
  },
  {
    "id": "FOLIO_train_399",
    "context": "Mr. and Mrs. Smith make a travel plan, they want to go to a city in California or Florida, and where neither of them has ever been. Cities in California that they are interested in are San Francisco, Los Angeles, and San Diego. Cities in Florida that they are interested in are Orlando and Miami. Mr. Smith has been to two cities in California. Mrs. Smith has been to one city in Florida.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? They have at least two candidate cities in California to visit.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCalifornia(x) ::: x is a city in California.\nFlorida(x) ::: x is a city in Florida.\nSmith(x) ::: x is Mr. Smith.\nSmith(y) ::: y is Mrs. Smith.\nVisit(x, y) ::: x has been to y.\nPremises:\n∃x (California(x) ∧ Visit(Smith, x)) ::: Mr. Smith has been to two cities in California.\n∃x (Florida(x) ∧ Visit(Smith, x)) ::: Mr. Smith has been to two cities in California.\n∃x (Florida(x) ∧ Visit(Smith, x)) ::: Mr. Smith has been to two cities in California.\n∃x (Florida(x) ∧ Visit(Smith, x)) ::: Mr. Smith has been to two cities in California.\nConclusion:\n∃x ∃y (California(x) ∧ California(y) ∧ x ≠ y ∧ Visit(Smith, x) ∧ Visit(Smith, y)) ::: They have at least two candidate cities in California to visit.\n------\nProblem:\nThe following is a list of the top 10 most populous cities in the United States.\n1. New York City, New York\n2. Los Angeles, California\n3. Chicago, Illinois\n4. Houston, Texas\n5. Phoenix, Arizona\n6. Philadelphia, Pennsylvania\n7. San Antonio, Texas\n8. San Diego, California\n9. Dallas, Texas\n10. San Jose, California\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The most populous city in the United States is in California.\nBased on the above information, is the following statement true, false, or uncertain? The most populous city in the United States is in Texas.\nBased on the above information, is the following statement true, false, or uncertain? The most populous city in the United States is in New York.\nBased on the above information, is the following statement true, false"
    ]
  },
  {
    "id": "FOLIO_train_400",
    "context": "Everything is either big or small. All big things are heavy. All small things are light. All heavy things are still. All light things are unstable. All unstable things are changing. All unstable things are kinetic. A bird is not both heavy and still.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A bird is still.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig(x) ::: x is big.\nSmall(x) ::: x is small.\nHeavy(x) ::: x is heavy.\nLight(x) ::: x is light.\nStill(x) ::: x is still.\nUnstable(x) ::: x is unstable.\nChanging(x) ::: x is changing.\nKinetic(x) ::: x is kinetic.\nBird(x) ::: x is a bird.\nPremises:\n∀x (Big(x) ∨ Small(x)) ::: Everything is either big or small.\n∀x (Big(x) → Heavy(x)) ::: All big things are heavy.\n∀x (Small(x) → Light(x)) ::: All small things are light.\n∀x (Heavy(x) → Still(x)) ::: All heavy things are still.\n∀x (Light(x) → Unstable(x)) ::: All light things are unstable.\n∀x (Unstable(x) → Changing(x)) ::: All unstable things are changing.\n∀x (Unstable(x) → Kinetic(x)) ::: All unstable things are kinetic.\n¬∃x (Bird(x) ∧ Heavy(x) ∧ Still(x)) ::: A bird is not both heavy and still.\nConclusion:\nStill(bird) ::: A bird is still.\n------"
    ]
  },
  {
    "id": "FOLIO_train_401",
    "context": "Everything is either big or small. All big things are heavy. All small things are light. All heavy things are still. All light things are unstable. All unstable things are changing. All unstable things are kinetic. A bird is not both heavy and still.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A bird is not still.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig(x) ::: x is big.\nSmall(x) ::: x is small.\nHeavy(x) ::: x is heavy.\nLight(x) ::: x is light.\nStill(x) ::: x is still.\nUnstable(x) ::: x is unstable.\nChanging(x) ::: x is changing.\nKinetic(x) ::: x is kinetic.\nBird(x) ::: x is a bird.\nPremises:\n∀x (Big(x) ∨ Small(x)) ::: Everything is either big or small.\n∀x (Big(x) → Heavy(x)) ::: All big things are heavy.\n∀x (Small(x) → Light(x)) ::: All small things are light.\n∀x (Heavy(x) → Still(x)) ::: All heavy things are still.\n∀x (Light(x) → Unstable(x)) ::: All light things are unstable.\n∀x (Unstable(x) → Changing(x)) ::: All unstable things are changing.\n∀x (Unstable(x) → Kinetic(x)) ::: All unstable things are kinetic.\n¬∃x (Bird(x) ∧ Heavy(x) ∧ Still(x)) ::: A bird is not both heavy and still.\nConclusion:\n¬Still(bird) ::: A bird is not still."
    ]
  },
  {
    "id": "FOLIO_train_402",
    "context": "Everything is either big or small. All big things are heavy. All small things are light. All heavy things are still. All light things are unstable. All unstable things are changing. All unstable things are kinetic. A bird is not both heavy and still.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A bird is kinetic and changing.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig(x) ::: x is big.\nSmall(x) ::: x is small.\nHeavy(x) ::: x is heavy.\nLight(x) ::: x is light.\nStill(x) ::: x is still.\nUnstable(x) ::: x is unstable.\nChanging(x) ::: x is changing.\nKinetic(x) ::: x is kinetic.\nPremises:\n∀x (Big(x) ∨ Small(x)) ::: Everything is either big or small.\n∀x (Big(x) → Heavy(x)) ::: All big things are heavy.\n∀x (Small(x) → Light(x)) ::: All small things are light.\n∀x (Heavy(x) → Still(x)) ::: All heavy things are still.\n∀x (Light(x) → Unstable(x)) ::: All light things are unstable.\n∀x (Unstable(x) → Changing(x)) ::: All unstable things are changing.\n∀x (Unstable(x) → Kinetic(x)) ::: All unstable things are kinetic.\n¬∃x (Bird(x) ∧ Heavy(x) ∧ Still(x)) ::: A bird is not both heavy and still.\nConclusion:\nBird(bird) ∧ Kinetic(bird) ∧ Changing(bird) ::: A"
    ]
  },
  {
    "id": "FOLIO_train_403",
    "context": "Everything is either big or small. All big things are heavy. All small things are light. All heavy things are still. All light things are unstable. All unstable things are changing. All unstable things are kinetic. A bird is not both heavy and still.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A bird is kinetic or changing.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig(x) ::: x is big.\nSmall(x) ::: x is small.\nHeavy(x) ::: x is heavy.\nLight(x) ::: x is light.\nStill(x) ::: x is still.\nUnstable(x) ::: x is unstable.\nChanging(x) ::: x is changing.\nKinetic(x) ::: x is kinetic.\nPremises:\n∀x (Big(x) ∨ Small(x)) ::: Everything is either big or small.\n∀x (Big(x) → Heavy(x)) ::: All big things are heavy.\n∀x (Small(x) → Light(x)) ::: All small things are light.\n∀x (Heavy(x) → Still(x)) ::: All heavy things are still.\n∀x (Light(x) → Unstable(x)) ::: All light things are unstable.\n∀x (Unstable(x) → Changing(x)) ::: All unstable things are changing.\n∀x (Unstable(x) → Kinetic(x)) ::: All unstable things are kinetic.\n¬∃x (Bird(x) ∧ Heavy(x) ∧ Still(x)) ::: A bird is not both heavy and still.\nConclusion:\nBird(x) → (Kinetic(x) ∨ Changing(x)) ::: A bird is"
    ]
  },
  {
    "id": "FOLIO_train_404",
    "context": "Everything is either big or small. All big things are heavy. All small things are light. All heavy things are still. All light things are unstable. All unstable things are changing. All unstable things are kinetic. A bird is not both heavy and still.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A bird is either kinetic or changing.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig(x) ::: x is big.\nSmall(x) ::: x is small.\nHeavy(x) ::: x is heavy.\nLight(x) ::: x is light.\nStill(x) ::: x is still.\nUnstable(x) ::: x is unstable.\nChanging(x) ::: x is changing.\nKinetic(x) ::: x is kinetic.\nBird(x) ::: x is a bird.\nPremises:\n∀x (Big(x) ∨ Small(x)) ::: Everything is either big or small.\n∀x (Big(x) → Heavy(x)) ::: All big things are heavy.\n∀x (Small(x) → Light(x)) ::: All small things are light.\n∀x (Heavy(x) → Still(x)) ::: All heavy things are still.\n∀x (Light(x) → Unstable(x)) ::: All light things are unstable.\n∀x (Unstable(x) → Changing(x)) ::: All unstable things are changing.\n∀x (Unstable(x) → Kinetic(x)) ::: All unstable things are kinetic.\n¬∃x (Bird(x) ∧ Heavy(x) ∧ Still(x)) ::: A bird is not both heavy and still.\nConclusion:\n∀x (Bird(x) → (Kinet"
    ]
  },
  {
    "id": "FOLIO_train_405",
    "context": "Everything is either big or small. All big things are heavy. All small things are light. All heavy things are still. All light things are unstable. All unstable things are changing. All unstable things are kinetic. A bird is not both heavy and still.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If a bird is small or still, then the bird is either kinetic or changing.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig(x) ::: x is big.\nSmall(x) ::: x is small.\nHeavy(x) ::: x is heavy.\nLight(x) ::: x is light.\nStill(x) ::: x is still.\nUnstable(x) ::: x is unstable.\nChanging(x) ::: x is changing.\nKinetic(x) ::: x is kinetic.\nBird(x) ::: x is a bird.\nPremises:\n∀x (x is either big or small) ::: Everything is either big or small.\n∀x (Big(x) → Heavy(x)) ::: All big things are heavy.\n∀x (Small(x) → Light(x)) ::: All small things are light.\n∀x (Heavy(x) → Still(x)) ::: All heavy things are still.\n∀x (Light(x) → Unstable(x)) ::: All light things are unstable.\n∀x (Unstable(x) → Changing(x)) ::: All unstable things are changing.\n∀x (Unstable(x) → Kinetic(x)) ::: All unstable things are kinetic.\n¬∃x (Bird(x) ∧ Heavy(x) ∧ Still(x)) ::: A bird is not both heavy and still.\nConclusion:\n∀x (Bird(x) ∧ (Small(x)"
    ]
  },
  {
    "id": "FOLIO_train_406",
    "context": "DI Ray is a police procedural television series. DI Ray was created and written by Maya Sondhi. DI Ray was produced by Jed Mercurio. Maya Sondhi and Jed Mercurio are both British.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? DI Ray was created by a Brit.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBrit(x) ::: x is a Brit.\nCreated(x, y) ::: x is created by y.\nWritten(x, y) ::: x is written by y.\nProduced(x, y) ::: x is produced by y.\nPremises:\nDIRay ::: DI Ray\nCreated(DIRay, mayaSondhi) ::: DI Ray was created and written by Maya Sondhi.\nProduced(DIRay, jedMercurio) ::: DI Ray was produced by Jed Mercurio.\nBrit(mayaSondhi) ::: Maya Sondhi is a Brit.\nBrit(jedMercurio) ::: Jed Mercurio is a Brit.\nConclusion:\n∃x (Created(DIRay, x) ∧ Brit(x)) ::: DI Ray was created by a Brit.\n------\nProblem:\nThe 2019–20 Hong Kong protests, also known as the Anti-Extradition Law Amendment Bill Movement, were a series of demonstrations and riots in Hong Kong that began in June 2019. The protests were triggered by the introduction of the Fugitive Offenders amendment bill by the Hong Kong government. The bill would allow extradition of criminal suspects to any jurisdiction with which Hong Kong does not have an extradition agreement, including mainland China and Taiwan.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The 2019–20 Hong Kong protests were triggered by"
    ]
  },
  {
    "id": "FOLIO_train_407",
    "context": "DI Ray is a police procedural television series. DI Ray was created and written by Maya Sondhi. DI Ray was produced by Jed Mercurio. Maya Sondhi and Jed Mercurio are both British.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Some Brit produced a television series.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBrit(x) ::: x is a British person.\nProduce(x, y) ::: x produced y.\nTelevisionSeries(x) ::: x is a television series.\nCreated(x, y) ::: x created y.\nWritten(x, y) ::: x wrote y.\nPremises:\nTelevisionSeries(diRay) ∧ Created(mayasondhi, diRay) ∧ Written(mayasondhi, diRay) ∧ Produce(jedmercurio, diRay) ::: DI Ray is a police procedural television series. DI Ray was created and written by Maya Sondhi. DI Ray was produced by Jed Mercurio.\nBrit(mayasondhi) ∧ Brit(jedmercurio) ::: Maya Sondhi and Jed Mercurio are both British.\nConclusion:\n∃x (Brit(x) ∧ Produce(x, y) ∧ TelevisionSeries(y)) ::: Some Brit produced a television series.\n------\nProblem:\nThe 2019–20 Hong Kong protests, also known as the Anti-Extradition Law Amendment Bill Movement, were a series of demonstrations and violent clashes in Hong Kong. The protests were triggered by the introduction of the Fugitive Offenders amendment bill by the Hong Kong government. The bill would have allowed extradition of fugitives to mainland China. The protests were initially against the extradition bill, but later evolved into a broader"
    ]
  },
  {
    "id": "FOLIO_train_408",
    "context": "All men are human. All gentlemen are men. All lawyers are gentlemen. All women are human. No sheep are human. If Mike is not both a human and a sheep, then Mike is either a man or a human.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mike is a woman.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMan(x) ::: x is a man.\nWoman(x) ::: x is a woman.\nHuman(x) ::: x is human.\nSheep(x) ::: x is a sheep.\nGentleman(x) ::: x is a gentleman.\nLawyer(x) ::: x is a lawyer.\nPremises:\n∀x (Man(x) → Human(x)) ::: All men are human.\n∀x (Gentleman(x) → Man(x)) ::: All gentlemen are men.\n∀x (Lawyer(x) → Gentleman(x)) ::: All lawyers are gentlemen.\n∀x (Woman(x) → Human(x)) ::: All women are human.\n∀x (Sheep(x) → ¬Human(x)) ::: No sheep are human.\n¬∃x (Human(x) ∧ Sheep(x)) → (Man(mike) ∨ Human(mike)) ::: If Mike is not both a human and a sheep, then Mike is either a man or a human.\nConclusion:\nWoman(mike) ::: Mike is a woman.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a"
    ]
  },
  {
    "id": "FOLIO_train_409",
    "context": "All men are human. All gentlemen are men. All lawyers are gentlemen. All women are human. No sheep are human. If Mike is not both a human and a sheep, then Mike is either a man or a human.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Mike is a gentleman or a lawyer, then Mike is neither a woman nor a lawyer.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMan(x) ::: x is a man.\nWoman(x) ::: x is a woman.\nHuman(x) ::: x is human.\nSheep(x) ::: x is a sheep.\nGentleman(x) ::: x is a gentleman.\nLawyer(x) ::: x is a lawyer.\nPremises:\n∀x (Man(x) → Human(x)) ::: All men are human.\n∀x (Gentleman(x) → Man(x)) ::: All gentlemen are men.\n∀x (Lawyer(x) → Gentleman(x)) ::: All lawyers are gentlemen.\n∀x (Woman(x) → Human(x)) ::: All women are human.\n∀x (Sheep(x) → ¬Human(x)) ::: No sheep are human.\n¬∃x (Human(x) ∧ Sheep(x)) → (Man(mike) ∨ Human(mike)) ::: If Mike is not both a human and a sheep, then Mike is either a man or a human.\nConclusion:\n(Gentleman(mike) ∨ Lawyer(mike)) → (Woman(mike) ∨ ¬Lawyer(mike)) ::: If Mike is a gentleman or a lawyer, then Mike is neither a woman nor a lawyer.\n------\nProblem:\nAll people who regularly drink coffee are dependent on"
    ]
  },
  {
    "id": "FOLIO_train_410",
    "context": "All men are human. All gentlemen are men. All lawyers are gentlemen. All women are human. No sheep are human. If Mike is not both a human and a sheep, then Mike is either a man or a human.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Mike is not both a woman and a lawyer, then Mike is a lawyer.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMan(x) ::: x is a man.\nWoman(x) ::: x is a woman.\nHuman(x) ::: x is human.\nSheep(x) ::: x is a sheep.\nGentleman(x) ::: x is a gentleman.\nLawyer(x) ::: x is a lawyer.\nMike(x) ::: x is Mike.\nPremises:\n∀x (Man(x) → Human(x)) ::: All men are human.\n∀x (Gentleman(x) → Man(x)) ::: All gentlemen are men.\n∀x (Lawyer(x) → Gentleman(x)) ::: All lawyers are gentlemen.\n∀x (Woman(x) → Human(x)) ::: All women are human.\n∀x (Sheep(x) → ¬Human(x)) ::: No sheep are human.\n¬∃x (Human(x) ∧ Sheep(x)) → (Man(mike) ∨ Human(mike)) ::: If Mike is not both a human and a sheep, then Mike is either a man or a human.\nConclusion:\n¬∃x (Woman(x) ∧ Lawyer(x)) → Lawyer(mike) ::: If Mike is not both a woman and a lawyer, then Mike is a lawyer.\n------"
    ]
  },
  {
    "id": "FOLIO_train_411",
    "context": "Some defenders are centerback. All defenders are soccer players. No soccer players are professional basketball players. All NBA players are professional basketball players. Stephen Curry is an NBA player.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Stephen Curry is a centerback.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCenterback(x) ::: x is a centerback.\nDefender(x) ::: x is a defender.\nSoccerPlayer(x) ::: x is a soccer player.\nProfessionalBasketballPlayer(x) ::: x is a professional basketball player.\nNBAPlayer(x) ::: x is an NBA player.\nPremises:\n∀x (Defender(x) → SoccerPlayer(x)) ::: All defenders are soccer players.\n∀x (SoccerPlayer(x) → ¬ProfessionalBasketballPlayer(x)) ::: No soccer players are professional basketball players.\n∀x (NBAPlayer(x) → ProfessionalBasketballPlayer(x)) ::: All NBA players are professional basketball players.\nNBAPlayer(stephenCurry) ::: Stephen Curry is an NBA player.\nConclusion:\nCenterback(stephenCurry) ::: Stephen Curry is a centerback.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina"
    ]
  },
  {
    "id": "FOLIO_train_412",
    "context": "Some defenders are centerback. All defenders are soccer players. No soccer players are professional basketball players. All NBA players are professional basketball players. Stephen Curry is an NBA player.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Stephen Curry is not a centerback and a defender.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCenterback(x) ::: x is a centerback.\nDefender(x) ::: x is a defender.\nSoccerPlayer(x) ::: x is a soccer player.\nProfessionalBasketballPlayer(x) ::: x is a professional basketball player.\nNBAPlayer(x) ::: x is an NBA player.\nPremises:\n∃x (Centerback(x) ∧ Defender(x)) ::: Some defenders are centerback.\n∀x (Defender(x) → SoccerPlayer(x)) ::: All defenders are soccer players.\n∀x (SoccerPlayer(x) → ¬ProfessionalBasketballPlayer(x)) ::: No soccer players are professional basketball players.\n∀x (NBAPlayer(x) → ProfessionalBasketballPlayer(x)) ::: All NBA players are professional basketball players.\nNBAPlayer(stephenCurry) ::: Stephen Curry is an NBA player.\nConclusion:\n¬(Centerback(stephenCurry) ∧ Defender(stephenCurry)) ::: Stephen Curry is not a centerback and a defender.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is"
    ]
  },
  {
    "id": "FOLIO_train_413",
    "context": "Some defenders are centerback. All defenders are soccer players. No soccer players are professional basketball players. All NBA players are professional basketball players. Stephen Curry is an NBA player.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Stephen Curry is not a centerback and a defender, then Stephen Curry is neither a soccer player nor a professional basketball player.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCenterback(x) ::: x is a centerback.\nDefender(x) ::: x is a defender.\nSoccerPlayer(x) ::: x is a soccer player.\nProfessionalBasketballPlayer(x) ::: x is a professional basketball player.\nNBA(x) ::: x is an NBA player.\nPremises:\n∀x (Defender(x) → SoccerPlayer(x)) ::: All defenders are soccer players.\n∀x (SoccerPlayer(x) → ¬ProfessionalBasketballPlayer(x)) ::: No soccer players are professional basketball players.\n∀x (NBA(x) → ProfessionalBasketballPlayer(x)) ::: All NBA players are professional basketball players.\nNBA(stephenCurry) ::: Stephen Curry is an NBA player.\nConclusion:\n¬(Centerback(stephenCurry) ∧ Defender(stephenCurry)) → ¬(SoccerPlayer(stephenCurry) ∨ ProfessionalBasketballPlayer(stephenCurry)) ::: If Stephen Curry is not a centerback and a defender, then Stephen Curry is neither a soccer player nor a professional basketball player.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is"
    ]
  },
  {
    "id": "FOLIO_train_414",
    "context": "If a person doesn't have enough money to buy a product, then that person can't buy it. Monitors are products. 4k monitors are more expensive than 1080 monitors and 2k monitors. John is a person. John doesn't have enough money to buy a 2k monitor.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? John can not buy the 1080 monitor.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPerson(x) ::: x is a person.\nProduct(x) ::: x is a product.\nMoney(x) ::: x is enough money to buy a product.\nBuy(x, y) ::: x can buy y.\nMonitor(x) ::: x is a monitor.\nResolution(x) ::: x is a resolution.\nExpensive(x, y) ::: x is more expensive than y.\nPremises:\n∀x (¬Money(x, y) → ¬Buy(x, y)) ::: If a person doesn't have enough money to buy a product, then that person can't buy it.\nMonitor(x) → Product(x) ::: Monitors are products.\n∀x (Resolution(x) → Expensive(x, 1080)) ::: 4k monitors are more expensive than 1080 monitors and 2k monitors.\nPerson(john) ::: John is a person.\n¬Money(john, 2k) ::: John doesn't have enough money to buy a 2k monitor.\nConclusion:\n¬Buy(john, 1080) ::: John can not buy the 1080 monitor.\n------\nProblem:\nIf a person is a student, then that person is a person. If a person is a student, then that person is a person. If a person is a student,"
    ]
  },
  {
    "id": "FOLIO_train_415",
    "context": "If a person doesn't have enough money to buy a product, then that person can't buy it. Monitors are products. 4k monitors are more expensive than 1080 monitors and 2k monitors. John is a person. John doesn't have enough money to buy a 2k monitor.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? John can not buy the 2k monitor.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPerson(x) ::: x is a person.\nProduct(x) ::: x is a product.\nMoney(x) ::: x is money.\nBuy(x, y) ::: x buys y.\nHave(x, y) ::: x has y.\nEnough(x, y) ::: x has enough y.\nMonitor(x) ::: x is a monitor.\nResolution(x) ::: x is a resolution.\nExpensive(x, y) ::: x is more expensive than y.\nJohn(x) ::: x is John.\nPremises:\n∀x ∀y (¬Enough(x, y) → ¬Buy(x, y)) ::: If a person doesn't have enough money to buy a product, then that person can't buy it.\n∀x (Monitor(x) → Product(x)) ::: Monitors are products.\n∀x (Expensive(x, 1080) ∧ Expensive(x, 2k)) ::: 4k monitors are more expensive than 1080 monitors and 2k monitors.\nPerson(john) ::: John is a person.\n¬Enough(john, 2k) ::: John doesn't have enough money to buy a 2k monitor.\nConclusion:\n¬Buy(john, 2k) ::: John can not buy the"
    ]
  },
  {
    "id": "FOLIO_train_416",
    "context": "All artificial satellites are important scientific achievements. Some artificial satellites are not U.S. inventions.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? All important scientific achievements are U.S. inventions.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nArtificialSatellite(x) ::: x is an artificial satellite.\nImportantScientificAchievement(x) ::: x is an important scientific achievement.\nUSSatellite(x) ::: x is a U.S. invention.\nPremises:\n∀x (ArtificialSatellite(x) → ImportantScientificAchievement(x)) ::: All artificial satellites are important scientific achievements.\n∃x (ArtificialSatellite(x) ∧ ¬USSatellite(x)) ::: Some artificial satellites are not U.S. inventions.\nConclusion:\n∀x (ImportantScientificAchievement(x) → USSatellite(x)) ::: All important scientific achievements are U.S. inventions.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above"
    ]
  },
  {
    "id": "FOLIO_train_417",
    "context": "Some cats are not pets. All cats are mammals.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Some mammals are not pets.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCat(x) ::: x is a cat.\nPet(x) ::: x is a pet.\nMammal(x) ::: x is a mammal.\nPremises:\n∃x (Cat(x) ∧ ¬Pet(x)) ::: Some cats are not pets.\n∀x (Cat(x) → Mammal(x)) ::: All cats are mammals.\nConclusion:\n∃x (Mammal(x) ∧ ¬Pet(x)) ::: Some mammals are not pets.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or"
    ]
  },
  {
    "id": "FOLIO_train_418",
    "context": "If people visit a coffee shop at least three times a week, then they are addicted to coffee or other caffeinated drinks. People either visit a coffee shop at least three times a week or order takeout at least once a day. If people make a lot of their own food at home using recipes and online guides, then they order takeout at least once a day. If people own at least one coffeemaker and one blender in their home, then they do not order takeout at least once a day. All people who lead very busy lives that include 12-hour work hours make a lot of their own food at home using recipes and online guides. Sam is either both addicted to coffee or other caffeinated drinks or leads very busy lives that include 12-hour work hours, or she is neither addicted to coffee and other caffeinated drinks nor leads very busy lives that include 12-hour work hours",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Sam is addicted to coffee and other caffeinated drinks.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nVisit(x, y) ::: x visits y.\nCoffeeShop(x) ::: x is a coffee shop.\nAddicted(x, y) ::: x is addicted to y.\nOrder(x, y) ::: x orders y.\nTakeout(x) ::: x is takeout.\nMake(x, y) ::: x makes y.\nFood(x) ::: x is food.\nHome(x) ::: x is a home.\nRecipe(x) ::: x is a recipe.\nGuide(x) ::: x is a guide.\nBusy(x) ::: x leads a busy life.\nWork(x, y) ::: x works for y hours.\nCoffeemaker(x) ::: x is a coffeemaker.\nBlender(x) ::: x is a blender.\nPremises:\n∀x (Visit(x, coffeeShop) → (Addicted(x, coffee) ∨ Addicted(x, otherCaffeinatedDrinks))) ::: If people visit a coffee shop at least three times a week, then they are addicted to coffee or other caffeinated drinks.\n∀x (Visit(x, coffeeShop) ⊕ Order(x, takeout)) ::: People either visit a coffee shop at least three times a week or order takeout at least once a day.\n∀x (Make(x, food) →"
    ]
  },
  {
    "id": "FOLIO_train_419",
    "context": "If people visit a coffee shop at least three times a week, then they are addicted to coffee or other caffeinated drinks. People either visit a coffee shop at least three times a week or order takeout at least once a day. If people make a lot of their own food at home using recipes and online guides, then they order takeout at least once a day. If people own at least one coffeemaker and one blender in their home, then they do not order takeout at least once a day. All people who lead very busy lives that include 12-hour work hours make a lot of their own food at home using recipes and online guides. Sam is either both addicted to coffee or other caffeinated drinks or leads very busy lives that include 12-hour work hours, or she is neither addicted to coffee and other caffeinated drinks nor leads very busy lives that include 12-hour work hours",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Sam owns at least one coffeemaker and one blender in her home.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nVisit(x, y) ::: x visits y.\nCoffeeShop(x) ::: x is a coffee shop.\nAddicted(x) ::: x is addicted to coffee or other caffeinated drinks.\nOrder(x, y) ::: x orders y.\nTakeout(x) ::: x is takeout.\nMake(x, y) ::: x makes y.\nFood(x) ::: x is food.\nHome(x) ::: x is a home.\nRecipe(x) ::: x is a recipe.\nGuide(x) ::: x is a guide.\nBusy(x) ::: x leads very busy lives.\nWork(x, y) ::: x works y hours.\nCoffeemaker(x) ::: x is a coffeemaker.\nBlender(x) ::: x is a blender.\nPremises:\n∀x (Visit(x, coffeeShop) → (Addicted(x) ∨ OtherCaffeinatedDrinks(x))) ::: If people visit a coffee shop at least three times a week, then they are addicted to coffee or other caffeinated drinks.\n∀x (Visit(x, coffeeShop) ⊕ Order(x, takeout)) ::: People either visit a coffee shop at least three times a week or order takeout at least once a day.\n∀x (Make(x, food) → Order("
    ]
  },
  {
    "id": "FOLIO_train_420",
    "context": "If people visit a coffee shop at least three times a week, then they are addicted to coffee or other caffeinated drinks. People either visit a coffee shop at least three times a week or order takeout at least once a day. If people make a lot of their own food at home using recipes and online guides, then they order takeout at least once a day. If people own at least one coffeemaker and one blender in their home, then they do not order takeout at least once a day. All people who lead very busy lives that include 12-hour work hours make a lot of their own food at home using recipes and online guides. Sam is either both addicted to coffee or other caffeinated drinks or leads very busy lives that include 12-hour work hours, or she is neither addicted to coffee and other caffeinated drinks nor leads very busy lives that include 12-hour work hours",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Sam either owns at least one coffeemaker and one blender in her home or orders takeout at least once a day.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nVisit(x, y) ::: x visits y.\nCoffeeShop(x) ::: x is a coffee shop.\nAddicted(x) ::: x is addicted to coffee or other caffeinated drinks.\nOrder(x, y) ::: x orders y.\nTakeout(x) ::: x is takeout.\nMake(x, y) ::: x makes y.\nFood(x) ::: x is food.\nHome(x) ::: x is a home.\nRecipe(x) ::: x is a recipe.\nGuide(x) ::: x is a guide.\nBusy(x) ::: x leads very busy lives.\nWork(x) ::: x includes 12-hour work hours.\nCoffeemaker(x) ::: x is a coffeemaker.\nBlender(x) ::: x is a blender.\nPremises:\n∀x (Visit(x, coffeeShop) → (Addicted(x) ∨ OtherCaffeinatedDrinks(x))) ::: If people visit a coffee shop at least three times a week, then they are addicted to coffee or other caffeinated drinks.\n∀x (Visit(x, coffeeShop) ⊕ Order(x, takeout)) ::: People either visit a coffee shop at least three times a week or order takeout at least once a day.\n∀x (Make(x, food) → Order(x, takeout)) ::: If people make a lot of their own food at home using recipes and online guides, then they order takeout at least once a day.\n∀x (Own(x, coffeemaker) ∧ Own(x, blender) → ¬Order(x, takeout)) ::: If people own at least one coffeemaker and one blender in their home, then they do not order takeout at least once a day.\n∀x (Busy(x) → Make(x, food)) ::: All people who lead very busy lives that include 12-hour work hours make a lot of their own food at home using recipes and online guides.\n(Addicted(sam) ∨ Busy(sam)) ⊕ ¬(Addicted(sam) ∨ Busy(sam)) ::: Sam is either both addicted to coffee or other caffeinated drinks or leads very busy lives that include 12-hour work hours, or she is neither addicted to coffee and other caffeinated drinks nor leads very busy lives that include 12-hour work hours\nConclusion:\n(Own(sam, coffeemaker) ∧ Own(sam, blender)) ⊕ Order(sam, takeout) ::: Sam either owns at least one coffeemaker and one blender in her home or orders takeout at least once a day.\n------"
    ]
  },
  {
    "id": "FOLIO_train_421",
    "context": "No professional basketball players are soccer players. All NBA players are professional basketball players. All defenders are soccer players. All centerbacks are defenders. Roger Federer is not an NBA player or a defender.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Roger Federer is a centerback.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProfessionalBasketballPlayer(x) ::: x is a professional basketball player.\nSoccerPlayer(x) ::: x is a soccer player.\nNBA(x) ::: x is an NBA player.\nDefender(x) ::: x is a defender.\nCenterback(x) ::: x is a centerback.\nRogerFederer(x) ::: x is Roger Federer.\nPremises:\n∀x (ProfessionalBasketballPlayer(x) → SoccerPlayer(x)) ::: No professional basketball players are soccer players.\n∀x (NBA(x) → ProfessionalBasketballPlayer(x)) ::: All NBA players are professional basketball players.\n∀x (Defender(x) → SoccerPlayer(x)) ::: All defenders are soccer players.\n∀x (Centerback(x) → Defender(x)) ::: All centerbacks are defenders.\n¬(NBA(rogerFederer) ∨ Defender(rogerFederer)) ::: Roger Federer is not an NBA player or a defender.\nConclusion:\nCenterback(rogerFederer) ::: Roger Federer is a centerback.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.\n###\nPredicates:\nDependent(x) ::: x is a person dependent on caffeine.\nDrinks(x) ::: x regularly drinks coffee.\nJokes(x) ::: x jokes about being addicted to caffeine.\nUnaware(x) ::: x is unaware that caffeine is a drug.\nStudent(x) ::: x is a student.\nPrem"
    ]
  },
  {
    "id": "FOLIO_train_422",
    "context": "No professional basketball players are soccer players. All NBA players are professional basketball players. All defenders are soccer players. All centerbacks are defenders. Roger Federer is not an NBA player or a defender.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Roger Federer is not a centerback.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProfessionalBasketballPlayer(x) ::: x is a professional basketball player.\nSoccerPlayer(x) ::: x is a soccer player.\nNBAPlayer(x) ::: x is an NBA player.\nDefender(x) ::: x is a defender.\nCenterback(x) ::: x is a centerback.\nRogerFederer(x) ::: x is Roger Federer.\nPremises:\n∀x (ProfessionalBasketballPlayer(x) → SoccerPlayer(x)) ::: No professional basketball players are soccer players.\n∀x (NBAPlayer(x) → ProfessionalBasketballPlayer(x)) ::: All NBA players are professional basketball players.\n∀x (Defender(x) → SoccerPlayer(x)) ::: All defenders are soccer players.\n∀x (Centerback(x) → Defender(x)) ::: All centerbacks are defenders.\n¬(NBAPlayer(rogerFederer) ∨ Defender(rogerFederer)) ::: Roger Federer is not an NBA player or a defender.\nConclusion:\n¬Centerback(rogerFederer) ::: Roger Federer is not a centerback.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.\n###\nPredicates:\nDependent(x) ::: x is a person dependent on caffeine.\nDrinks(x) ::: x regularly drinks coffee.\nJokes(x) ::: x jokes about being addicted to caffeine.\nUnaware(x) ::: x is unaware that caffeine is a drug.\nStudent(x) ::: x is a"
    ]
  },
  {
    "id": "FOLIO_train_423",
    "context": "No professional basketball players are soccer players. All NBA players are professional basketball players. All defenders are soccer players. All centerbacks are defenders. Roger Federer is not an NBA player or a defender.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Roger Federer is a soccer player.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProfessionalBasketballPlayer(x) ::: x is a professional basketball player.\nSoccerPlayer(x) ::: x is a soccer player.\nNBA(x) ::: x is an NBA player.\nDefender(x) ::: x is a defender.\nCenterback(x) ::: x is a centerback.\nRogerFederer(x) ::: x is Roger Federer.\nPremises:\n∀x (ProfessionalBasketballPlayer(x) → SoccerPlayer(x)) ::: No professional basketball players are soccer players.\n∀x (NBA(x) → ProfessionalBasketballPlayer(x)) ::: All NBA players are professional basketball players.\n∀x (Defender(x) → SoccerPlayer(x)) ::: All defenders are soccer players.\n∀x (Centerback(x) → Defender(x)) ::: All centerbacks are defenders.\n¬(NBA(rogerFederer) ∨ Defender(rogerFederer)) ::: Roger Federer is not an NBA player or a defender.\nConclusion:\nSoccerPlayer(rogerFederer) ::: Roger Federer is a soccer player.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.\n###\nPredicates:\nDependent(x) ::: x is a person dependent on caffeine.\nDrinks(x) ::: x regularly drinks coffee.\nJokes(x) ::: x jokes about being addicted to caffeine.\nUnaware(x) ::: x is unaware that caffeine is a drug.\nStudent(x) ::: x is a student."
    ]
  },
  {
    "id": "FOLIO_train_424",
    "context": "Some teachers working at a pool are not nice. All teachers working at pools are pool managers. All pool managers are lifeguards. If someone is a lifeguard, then they work at a pool. Mary does not work at a pool.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mary is nice.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTeacher(x) ::: x is a teacher.\nWork(x, y) ::: x works at y.\nPool(x) ::: x is a pool.\nNice(x) ::: x is nice.\nPoolManager(x) ::: x is a pool manager.\nLifeguard(x) ::: x is a lifeguard.\nPremises:\n∃x (Teacher(x) ∧ ¬Nice(x) ∧ Work(x, pool)) ::: Some teachers working at a pool are not nice.\n∀x (Teacher(x) ∧ Work(x, pool) → PoolManager(x)) ::: All teachers working at pools are pool managers.\n∀x (PoolManager(x) → Lifeguard(x)) ::: All pool managers are lifeguards.\n∀x (Lifeguard(x) → Work(x, pool)) ::: If someone is a lifeguard, then they work at a pool.\n¬Work(mary, pool) ::: Mary does not work at a pool.\nConclusion:\nNice(mary) ::: Mary is nice.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.\n###\nPredicates:\nDependent(x) ::: x is a person dependent on caffeine.\nDrinks(x) ::: x regularly drinks coffee.\nJokes(x) ::: x jokes about being addicted to caffeine.\nUnaware(x) ::: x is unaware that caffeine is a drug.\nStudent(x) ::: x is a student.\nPremises:\n∀x (Drinks(x"
    ]
  },
  {
    "id": "FOLIO_train_425",
    "context": "Some teachers working at a pool are not nice. All teachers working at pools are pool managers. All pool managers are lifeguards. If someone is a lifeguard, then they work at a pool. Mary does not work at a pool.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mary is not nice and is a teacher working at a pool.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTeacher(x) ::: x is a teacher.\nWork(x, y) ::: x works at y.\nPool(x) ::: x is a pool.\nNice(x) ::: x is nice.\nPoolManager(x) ::: x is a pool manager.\nLifeguard(x) ::: x is a lifeguard.\nPremises:\n∃x (Teacher(x) ∧ ¬Nice(x) ∧ Work(x, pool)) ::: Some teachers working at a pool are not nice.\n∀x (Teacher(x) ∧ Work(x, pool) → PoolManager(x)) ::: All teachers working at pools are pool managers.\n∀x (PoolManager(x) → Lifeguard(x)) ::: All pool managers are lifeguards.\n∀x (Lifeguard(x) → Work(x, pool)) ::: If someone is a lifeguard, then they work at a pool.\n¬Work(mary, pool) ::: Mary does not work at a pool.\nConclusion:\nTeacher(mary) ∧ ¬Nice(mary) ∧ Work(mary, pool) ::: Mary is not nice and is a teacher working at a pool.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.\n###\nPredicates:\nDependent(x) ::: x is a person dependent on caffeine.\nDrinks(x) ::: x regularly drinks coffee.\nJokes(x) ::: x jokes about being addicted to caffeine.\nUnaware(x) ::: x is unaware that caffeine"
    ]
  },
  {
    "id": "FOLIO_train_426",
    "context": "Some teachers working at a pool are not nice. All teachers working at pools are pool managers. All pool managers are lifeguards. If someone is a lifeguard, then they work at a pool. Mary does not work at a pool.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mary is nice and is a teacher working at a pool.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTeacher(x) ::: x is a teacher.\nWork(x, y) ::: x works at y.\nPool(x) ::: x is a pool.\nNice(x) ::: x is nice.\nPoolManager(x) ::: x is a pool manager.\nLifeguard(x) ::: x is a lifeguard.\nPremises:\n∃x (Teacher(x) ∧ ¬Nice(x) ∧ Work(x, pool)) ::: Some teachers working at a pool are not nice.\n∀x (Teacher(x) ∧ Work(x, pool) → PoolManager(x)) ::: All teachers working at pools are pool managers.\n∀x (PoolManager(x) → Lifeguard(x)) ::: All pool managers are lifeguards.\n∀x (Lifeguard(x) → Work(x, pool)) ::: If someone is a lifeguard, then they work at a pool.\n¬Work(mary, pool) ::: Mary does not work at a pool.\nConclusion:\nNice(mary) ∧ Teacher(mary) ∧ Work(mary, pool) ::: Mary is nice and is a teacher working at a pool.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.\n###\nPredicates:\nDependent(x) ::: x is a person dependent on caffeine.\nDrinks(x) ::: x regularly drinks coffee.\nJokes(x) ::: x jokes about being addicted to caffeine.\nUnaware(x) ::: x is unaware that caffeine is a drug."
    ]
  },
  {
    "id": "FOLIO_train_427",
    "context": "Not all art pieces require talent. Everything that requires talent requires practice.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There exist art pieces that do not require practice.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nArtPiece(x) ::: x is an art piece.\nRequire(x, y) ::: x requires y.\nTalent(x) ::: x requires talent.\nPractice(x) ::: x requires practice.\nPremises:\n∀x (ArtPiece(x) → ¬Require(x, talent)) ::: Not all art pieces require talent.\n∀x (Require(x, talent) → Require(x, practice)) ::: Everything that requires talent requires practice.\nConclusion:\n∃x (ArtPiece(x) ∧ ¬Require(x, practice)) ::: There exist art pieces that do not require practice.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.\n###\nPredicates:\nDependent(x) ::: x is a person dependent on caffeine.\nDrinks(x) ::: x regularly drinks coffee.\nJokes(x) ::: x jokes about being addicted to caffeine.\nUnaware(x) ::: x is unaware that caffeine is a drug.\nStudent(x) ::: x is a student.\nPremises:\n∀x (Drinks(x) → Dependent(x)) ::: All people who regularly drink coffee are dependent on caffeine.\n∀x (Drinks(x) ⊕ Jokes(x)) ::: People either regularly drink coffee or joke about being addicted to caffeine.\n∀x (Jokes(x) → ¬Unaware(x)) ::: No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. \n(Student(rina)"
    ]
  },
  {
    "id": "FOLIO_train_428",
    "context": "Bernarda Bryson Shahn was a painter and lithographer. Bernarda Bryson Shahn was born in Athens, Ohio. Bernarda Bryson Shahn was married to Ben Shahn. People born in Athens, Ohio are Americans.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Bernarda Bryson Shahn was born in Greece.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBorn(x, y) ::: x was born in y.\nAmerican(x) ::: x is an American.\nPainter(x) ::: x is a painter.\nLithographer(x) ::: x is a lithographer.\nMarried(x, y) ::: x is married to y.\nPremises:\nPainter(bernarda) ∧ Lithographer(bernarda) ∧ Born(bernarda, athens) ::: Bernarda Bryson Shahn was a painter and lithographer.\nBorn(bernarda, athens) ∧ American(bernarda) ::: Bernarda Bryson Shahn was born in Athens, Ohio.\nMarried(bernarda, ben) ::: Bernarda Bryson Shahn was married to Ben Shahn.\nBorn(x, athens) → American(x) ::: People born in Athens, Ohio are Americans.\nConclusion:\nBorn(bernarda, greece) ::: Bernarda Bryson Shahn was born in Greece.\n------\nProblem:\nThe 1996 Summer Olympics, officially known as the Games of the XXVI Olympiad, was an international multi-sport event that was celebrated in 1996 in Atlanta, Georgia, United States. The 1996 Summer Olympics was the first time that the Summer Olympic Games were held in the American South. The 1996 Summer Olympics was the first time that the Summer Olympic Games were held in the United States since the 1984 Summer Olympics in Los Angeles. The 1996 Summer Olympics was the first time that the Summer Olympic Games were held in the United States since the 1984 Summer Olympics in Los Angeles.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The 1996 Summer Olympics was the first time that the Summer Olympic Games were held in the United States.\nBased on the above information, is the following statement true, false, or uncertain? The 1996 Summer Olympics was the first time that the Summer Olympic Games were held in the American South.\nBased on the above information, is the following statement true, false, or uncertain? The 1996 Summer Olympics was the first time that the Summer Olympic Games were held in the American South.\n###\nPredicates:\nSummerOlympics(x) ::: x is the Summer Olympic Games.\nYear(x) ::: x is a year.\nHold(x, y) ::: x is held in y.\nFirstTime(x, y) ::: x is the first time that y.\nAmericanSouth(x) ::: x is the American South.\nUnitedStates(x) ::: x is the United States.\nPremises:\nSummerOlympics(gamesOfTheXXVIolympiad)"
    ]
  },
  {
    "id": "FOLIO_train_429",
    "context": "Bernarda Bryson Shahn was a painter and lithographer. Bernarda Bryson Shahn was born in Athens, Ohio. Bernarda Bryson Shahn was married to Ben Shahn. People born in Athens, Ohio are Americans.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Bernarda Bryson Shahn was American.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBorn(x, y) ::: x was born in y.\nMarried(x, y) ::: x was married to y.\nAmerican(x) ::: x is an American.\nPainter(x) ::: x is a painter.\nLithographer(x) ::: x is a lithographer.\nPremises:\nPainter(bernarda) ∧ Lithographer(bernarda) ::: Bernarda Bryson Shahn was a painter and lithographer.\nBorn(bernarda, athens) ::: Bernarda Bryson Shahn was born in Athens, Ohio.\nMarried(bernarda, ben) ::: Bernarda Bryson Shahn was married to Ben Shahn.\nBorn(x, athens) → American(x) ::: People born in Athens, Ohio are Americans.\nConclusion:\nAmerican(bernarda) ::: Bernarda Bryson Shahn was American.\n------\nProblem:\nThe 1996 Summer Olympics, officially known as the Games of the XXVI Olympiad, was an international multi-sport event which was celebrated in 1996 in Atlanta, Georgia, United States. The 1996 Summer Olympics was the first time that the Summer Olympic Games were held in the Southern United States. The 1996 Summer Olympics was the first time that the Summer Olympic Games were held in the United States since the 1984 Summer Olympics in Los Angeles. The 1996 Summer Olympics was the first time that the Summer Olympic Games were held in the United States since the 1984 Summer Olympics in Los Angeles.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The 1996 Summer Olympics was the first time that the Summer Olympic Games were held in the United States.\nBased on the above information, is the following statement true, false, or uncertain? The 1996 Summer Olympics was the first time that the Summer Olympic Games were held in the Southern United States.\nBased on the above information, is the following statement true, false, or uncertain? The 1996 Summer Olympics was the first time that the Summer Olympic Games were held in the United States since the 1984 Summer Olympics in Los Angeles.\n###\nPredicates:\nSummerOlympics(x) ::: x is the Summer Olympic Games.\nYear(x) ::: x is a year.\nHold(x, y) ::: x is held in y.\nSouthernUnitedStates(x) ::: x is the Southern United States.\nUnitedStates(x) ::: x is the United States.\nPremises:\nSummerOlympics(gamesOfTheXXVIolympiad) ::: The 1996 Summer Olympics, officially known as the Games of the XXVI Olympiad, was an international multi-sport event"
    ]
  },
  {
    "id": "FOLIO_train_430",
    "context": "Bernarda Bryson Shahn was a painter and lithographer. Bernarda Bryson Shahn was born in Athens, Ohio. Bernarda Bryson Shahn was married to Ben Shahn. People born in Athens, Ohio are Americans.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Bernarda Bryson Shahn had been divorced once.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBorn(x, y) ::: x was born in y.\nMarried(x, y) ::: x was married to y.\nAmerican(x) ::: x is an American.\nPainter(x) ::: x is a painter.\nLithographer(x) ::: x is a lithographer.\nPremises:\nPainter(bernarda) ∧ Lithographer(bernarda) ::: Bernarda Bryson Shahn was a painter and lithographer.\nBorn(bernarda, athens) ::: Bernarda Bryson Shahn was born in Athens, Ohio.\nMarried(bernarda, ben) ::: Bernarda Bryson Shahn was married to Ben Shahn.\nBorn(x, athens) → American(x) ::: People born in Athens, Ohio are Americans.\nConclusion:\nDivorced(bernarda) ::: Bernarda Bryson Shahn had been divorced once.\n------"
    ]
  },
  {
    "id": "FOLIO_train_431",
    "context": "If people upgrade to the newest iPhone model every year, then they are not saving money for a down payment on a new house. If people enjoy reading about tech specs and keeping up to date on the latest technology, then they upgrade to the newest iPhone model every year. People either are saving money for a down payment on a new house or they live in apartments in big metropolitan cities. If people live with at least one roommate then they do not own at least one pet. All people who own at least one pet live with at least one roommate. If Emma does not both own at least one pet and live in apartments in big metropolitan cities, then Emma either owns at least one pet and lives in an apartment in big metropolitan cities, or she neither owns a pet nor lives in an apartment in big metropolitan cities.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Emma lives with at least one roommate.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nUpgrade(x) ::: x upgrades to the newest iPhone model every year.\nSave(x) ::: x is saving money for a down payment on a new house.\nEnjoy(x) ::: x enjoys reading about tech specs and keeping up to date on the latest technology.\nLive(x) ::: x lives in apartments in big metropolitan cities.\nRoommate(x) ::: x lives with at least one roommate.\nPet(x) ::: x owns at least one pet.\nEmma(x) ::: x is Emma.\nPremises:\n∀x (Upgrade(x) → ¬Save(x)) ::: If people upgrade to the newest iPhone model every year, then they are not saving money for a down payment on a new house.\n∀x (Enjoy(x) → Upgrade(x)) ::: If people enjoy reading about tech specs and keeping up to date on the latest technology, then they upgrade to the newest iPhone model every year.\n∀"
    ]
  },
  {
    "id": "FOLIO_train_432",
    "context": "If people upgrade to the newest iPhone model every year, then they are not saving money for a down payment on a new house. If people enjoy reading about tech specs and keeping up to date on the latest technology, then they upgrade to the newest iPhone model every year. People either are saving money for a down payment on a new house or they live in apartments in big metropolitan cities. If people live with at least one roommate then they do not own at least one pet. All people who own at least one pet live with at least one roommate. If Emma does not both own at least one pet and live in apartments in big metropolitan cities, then Emma either owns at least one pet and lives in an apartment in big metropolitan cities, or she neither owns a pet nor lives in an apartment in big metropolitan cities.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Emma enjoys reading about tech specs and keeping up to date on the latest technology.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nUpgrade(x) ::: x upgrades to the newest iPhone model every year.\nSave(x) ::: x is saving money for a down payment on a new house.\nEnjoy(x) ::: x enjoys reading about tech specs and keeping up to date on the latest technology.\nLive(x) ::: x lives in apartments in big metropolitan cities.\nRoommate(x) ::: x lives with at least one roommate.\nPet(x) ::: x owns at least one pet.\nPremises:\n∀x (Upgrade(x) → ¬Save(x)) ::: If people upgrade to the newest iPhone model every year, then they are not saving money for a down payment on a new house.\n∀x (Enjoy(x) → Upgrade(x)) ::: If people enjoy reading about tech specs and keeping up to date on the latest technology, then they upgrade to the newest iPhone model every year.\n∀x (Save(x) ⊕ Live("
    ]
  },
  {
    "id": "FOLIO_train_433",
    "context": "If you are on the payroll, then you are being paid by the school. If someone has a job at a school, then they are on the payroll. All faculty members have a job at a school. One can either be a faculty member or a teacher. Every teacher has students. If Nancy is a teacher, then they are on the payroll. If Nancy is not a teacher, then they are not paid by the school.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Nancy is a faculty member.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFacultyMember(x) ::: x is a faculty member.\nTeacher(x) ::: x is a teacher.\nStudent(x) ::: x is a student.\nPayroll(x) ::: x is on the payroll.\nJob(x, y) ::: x has a job at y.\nPaid(x, y) ::: x is being paid by y.\nPremises:\n∀x (Payroll(x) → Paid(x, school)) ::: If you are on the payroll, then you are being paid by the school.\n∀x (Job(x, school) → Payroll(x)) ::: If someone has a job at a school, then they are on the payroll.\n∀x (FacultyMember(x) → Job(x, school)) ::: All faculty members have a job at a school.\n∀x (Teacher(x) ⊕ FacultyMember(x)) ::: One can either be"
    ]
  },
  {
    "id": "FOLIO_train_434",
    "context": "If you are on the payroll, then you are being paid by the school. If someone has a job at a school, then they are on the payroll. All faculty members have a job at a school. One can either be a faculty member or a teacher. Every teacher has students. If Nancy is a teacher, then they are on the payroll. If Nancy is not a teacher, then they are not paid by the school.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Nancy is paid by the school and has students.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPayroll(x) ::: x is on the payroll.\nBeingPaid(x, y) ::: x is being paid by y.\nJob(x, y) ::: x has a job at y.\nFacultyMember(x) ::: x is a faculty member.\nTeacher(x) ::: x is a teacher.\nStudent(x) ::: x has students.\nPremises:\n∀x (Payroll(x) → BeingPaid(x, school)) ::: If you are on the payroll, then you are being paid by the school.\n∀x (Job(x, school) → Payroll(x)) ::: If someone has a job at a school, then they are on the payroll.\n∀x (FacultyMember(x) → Job(x, school)) ::: All faculty members have a job at a school.\n∀x (Teacher(x) ⊕ FacultyMember(x)) ::: One can"
    ]
  },
  {
    "id": "FOLIO_train_435",
    "context": "If you are on the payroll, then you are being paid by the school. If someone has a job at a school, then they are on the payroll. All faculty members have a job at a school. One can either be a faculty member or a teacher. Every teacher has students. If Nancy is a teacher, then they are on the payroll. If Nancy is not a teacher, then they are not paid by the school.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Nancy is not paid by the school and has students.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPayroll(x) ::: x is on the payroll.\nBeingPaid(x, y) ::: x is being paid by y.\nJob(x, y) ::: x has a job at y.\nFacultyMember(x) ::: x is a faculty member.\nTeacher(x) ::: x is a teacher.\nStudent(x, y) ::: x has students at y.\nPremises:\n∀x (Payroll(x) → BeingPaid(x, school)) ::: If you are on the payroll, then you are being paid by the school.\n∀x (Job(x, school) → Payroll(x)) ::: If someone has a job at a school, then they are on the payroll.\n∀x (FacultyMember(x) → Job(x, school)) ::: All faculty members have a job at a school.\n∀x (Teacher(x) ⊕ FacultyMember(x))"
    ]
  },
  {
    "id": "FOLIO_train_436",
    "context": "Kangaroo is an animal. No Kangaroos live in Germany. If Jane saves enough money for the summer, she will fly to Germany. If Jane flies to Germany, she will go to the Berlin Zoo. If someone goes to the Berlin Zoo, they will see some of the animals that live in Germany.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Jane saves enough money for the summer, she will see a kangaroo.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nKangaroo(x) ::: x is a kangaroo.\nAnimal(x) ::: x is an animal.\nLive(x, y) ::: x lives in y.\nSave(x, y) ::: x saves enough money for y.\nFly(x, y) ::: x flies to y.\nGo(x, y) ::: x goes to y.\nSee(x, y) ::: x sees y.\nPremises:\nKangaroo(kangaroo) ∧ Animal(kangaroo) ::: Kangaroo is an animal.\n∀x (Kangaroo(x) → ¬Live(x, germany)) ::: No Kangaroos live in Germany.\nSave(jane, summer) → Fly(jane, germany) ::: If Jane saves enough money for the summer, she will fly to Germany.\nFly(jane, germany) → Go(jane, berlinZoo"
    ]
  },
  {
    "id": "FOLIO_train_437",
    "context": "If a class has prerequisites the student must take the prerequisites to take the class. If a class has no prerequisites, then the student can take the class CPSC 201 and CPSC 223 are prerequisites for CPSC 323. Intro Microeconomics is the only prerequisite for Intermediate Microeconomics. Intro Geology has no prerequisites.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? CPSC 201 has no prerequisites.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPrerequisite(x, y) ::: x is a prerequisite for y.\nTake(x, y) ::: x takes y.\nClass(x) ::: x is a class.\nStudent(x) ::: x is a student.\nPremises:\n∀x ∀y (Prerequisite(x, y) → Take(x, y)) ::: If a class has prerequisites the student must take the prerequisites to take the class.\n∀x (Class(x) ∧ ¬∃y (Prerequisite(y, x)) → Take(student, x)) ::: If a class has no prerequisites, then the student can take the class.\nPrerequisite(CPSC201, CPSC323) ∧ Prerequisite(CPSC223, CPSC323) ::: CPSC 201 and CPSC 223 are pr"
    ]
  },
  {
    "id": "FOLIO_train_438",
    "context": "If a class has prerequisites the student must take the prerequisites to take the class. If a class has no prerequisites, then the student can take the class CPSC 201 and CPSC 223 are prerequisites for CPSC 323. Intro Microeconomics is the only prerequisite for Intermediate Microeconomics. Intro Geology has no prerequisites.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If a student took CPSC 201 but did not take CPSC 223, they can take CPSC 323.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPrerequisite(x, y) ::: x is a prerequisite for y.\nTake(x, y) ::: x takes y.\nClass(x) ::: x is a class.\nPremises:\n∀x ∀y (Prerequisite(x, y) → Take(x, y)) ::: If a class has prerequisites the student must take the prerequisites to take the class.\n∀x (Class(x) ∧ ¬∃y (Prerequisite(y, x)) → Take(CPSC201, x) ∧ Take(CPSC223, x)) ::: If a class has no prerequisites, then the student can take the class CPSC 201 and CPSC 223 are prerequisites for CPSC 323.\nPrerequisite(CPSC201, CPSC323) ∧ Prerequis"
    ]
  },
  {
    "id": "FOLIO_train_439",
    "context": "If a class has prerequisites the student must take the prerequisites to take the class. If a class has no prerequisites, then the student can take the class CPSC 201 and CPSC 223 are prerequisites for CPSC 323. Intro Microeconomics is the only prerequisite for Intermediate Microeconomics. Intro Geology has no prerequisites.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A student cannot take Intro Geology.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPrerequisite(x, y) ::: x is a prerequisite for y.\nTake(x, y) ::: x takes y.\nClass(x) ::: x is a class.\nStudent(x) ::: x is a student.\nPremises:\n∀x ∀y (Prerequisite(x, y) → Take(x, y)) ::: If a class has prerequisites the student must take the prerequisites to take the class.\n∀x (¬∃y (Prerequisite(x, y)) → Take(x, CPSC201) ∧ Take(x, CPSC223)) ::: If a class has no prerequisites, then the student can take the class CPSC 201 and CPSC 223 are prerequisites for CPSC 323.\nPrerequisite(CPSC201, CPSC323) ∧"
    ]
  },
  {
    "id": "FOLIO_train_440",
    "context": "If a class has prerequisites the student must take the prerequisites to take the class. If a class has no prerequisites, then the student can take the class CPSC 201 and CPSC 223 are prerequisites for CPSC 323. Intro Microeconomics is the only prerequisite for Intermediate Microeconomics. Intro Geology has no prerequisites.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Intermediate Microeconomics has one prerequisite.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPrerequisite(x, y) ::: x is a prerequisite for y.\nTake(x, y) ::: x takes y.\nClass(x) ::: x is a class.\nPremises:\n∀x ∀y (Prerequisite(x, y) → Take(x, y)) ::: If a class has prerequisites the student must take the prerequisites to take the class.\n∀x (¬∃y (Prerequisite(x, y)) → Take(x, CPSC201) ∧ Take(x, CPSC223)) ::: If a class has no prerequisites, then the student can take the class CPSC 201 and CPSC 223 are prerequisites for CPSC 323.\nPrerequisite(CPSC201, CPSC323) ∧ Prerequisite(CPSC223, CPSC323) ::: CPSC 201 and CPSC 223 are prerequisites for CPSC 323.\nPrerequisite(IntroMicroeconomics, IntermediateMicroeconomics) ::: Intro Microeconomics is the only prerequisite for Intermediate Microeconomics.\n¬∃x (Prerequisite(IntroGeology, x)) ::: Intro Geology has no prerequisites.\nConclusion:\n∃x (Prerequisite(x, IntermediateMicroeconomics)) ::: Intermediate Microeconomics has one prerequisite.\n------"
    ]
  },
  {
    "id": "FOLIO_train_441",
    "context": "A heptalogy, is a compound literary or narrative work that is made up of seven distinct works. The Harry Potter series consists of 7 distinct works. The Chronicles of Narnia consists of 7 distinct works.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Harry Potter series of books is a heptalogy.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nHarryPotter(x) ::: x is a Harry Potter book.\nNarnia(x) ::: x is a Chronicles of Narnia book.\nHeptalogy(x) ::: x is a heptalogy.\nPremises:\n∀x (HarryPotter(x) → ∃y (HarryPotter(y) ∧ x ≠ y)) ::: The Harry Potter series consists of 7 distinct works.\n∀x (Narnia(x) → ∃y (Narnia(y) ∧ x ≠ y)) ::: The Chronicles of Narnia consists of 7 distinct works.\nConclusion:\n∃x (Heptalogy(x) ∧ HarryPotter(x)) ::: The Harry Potter series of books is a heptalogy.\n------\nProblem:\nA heptalogy, is a compound literary or narrative work that is made up of seven distinct works. The Harry Potter series consists of 7 distinct works. The Chronicles of Narnia consists of 7 distinct works.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The Chronicles of Narnia series of books is a heptalogy.\n###\nPredicates:\nHarryPotter(x) ::: x is a Harry Potter book.\nNarnia(x) ::: x is a Chronicles of Narnia book.\nHeptalogy(x) ::: x is a heptalogy.\nPremises:\n∀x"
    ]
  },
  {
    "id": "FOLIO_train_442",
    "context": "A heptalogy, is a compound literary or narrative work that is made up of seven distinct works. The Harry Potter series consists of 7 distinct works. The Chronicles of Narnia consists of 7 distinct works.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Chronicles of Narnia series of books is not a heptalogy.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nHarryPotter(x) ::: x is a Harry Potter book.\nChroniclesOfNarnia(x) ::: x is a Chronicles of Narnia book.\nHeptalogy(x) ::: x is a heptalogy.\nPremises:\n∀x (HarryPotter(x) → ∃y (ChroniclesOfNarnia(y) ∧ x = y)) ::: The Harry Potter series consists of 7 distinct works.\n∀x (ChroniclesOfNarnia(x) → ∃y (HarryPotter(y) ∧ x = y)) ::: The Chronicles of Narnia consists of 7 distinct works.\nConclusion:\n∃x (Heptalogy(x) ∧ ¬ChroniclesOfNarnia(x)) ::: The Chronicles of Narnia series of books is not a heptalogy.\n------\nProblem:\nA heptalogy, is a compound literary or narrative work that is made up of seven distinct works. The Harry Potter series consists of 7 distinct works. The Chronicles of Narnia consists of 7 distinct works.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The Harry Potter series is a heptalogy.\n###\nPredicates:\nHarryPotter(x) ::: x is a Harry Potter book.\nChroniclesOfNarnia(x) ::: x is a Chronicles of Narnia book.\nHeptalogy(x) :::"
    ]
  },
  {
    "id": "FOLIO_train_443",
    "context": "A heptalogy, is a compound literary or narrative work that is made up of seven distinct works. The Harry Potter series consists of 7 distinct works. The Chronicles of Narnia consists of 7 distinct works.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Lord of Rings is a heptalogy.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nHarryPotter(x) ::: x is a Harry Potter book.\nChroniclesOfNarnia(x) ::: x is a Chronicles of Narnia book.\nLordOfRings(x) ::: x is a Lord of Rings book.\nHeptalogy(x) ::: x is a heptalogy.\nPremises:\n∀x (HarryPotter(x) → Book(x)) ::: The Harry Potter series consists of 7 distinct works.\n∀x (ChroniclesOfNarnia(x) → Book(x)) ::: The Chronicles of Narnia consists of 7 distinct works.\n∀x (LordOfRings(x) → Book(x)) ::: The Lord of Rings consists of 7 distinct works.\n∀x (Heptalogy(x) → ∃y ∃z (Book(y) ∧ Book(z) ∧ y ≠ z ∧ x = {y, z})) ::: A heptalogy, is a compound literary or narrative work that is made up of seven distinct works.\nConclusion:\nHeptalogy(lordOfRings) ::: The Lord of Rings is a heptalogy.\n------\nProblem:\nA person is a student if and only if they are enrolled in a school. A person is a teacher if and only if they teach a class. A person is a student if and only if they are not a teacher.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? A person"
    ]
  },
  {
    "id": "FOLIO_train_444",
    "context": "All people who attend Renaissance fairs regularly enjoy dressing up in old-fashioned and historical period clothing. If people are fascinated by the history of the Renaissance and other past eras, then they attend Renaissance fairs regularly. People are either fascinated by the history of the Renaissance and other past eras, or are not nostalgic academics who enjoy learning. If people are focused on the future and industry professions, then they are not nostalgic academics who enjoy learning. If people are historical professors who are passionate about their job and subject, then they are nostalgic academics who enjoy learning. If Clyde is not focused on the future and industry professions, then he is neither focused on the future and industry professions nor enjoys dressing up in old-fashioned and historical period clothing.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Clyde attends Renaissance fairs regularly.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAttend(x) ::: x attends Renaissance fairs regularly.\nEnjoy(x, y) ::: x enjoys y.\nDress(x) ::: x enjoys dressing up in old-fashioned and historical period clothing.\nFascinated(x) ::: x is fascinated by the history of the Renaissance and other past eras.\nNostalgic(x) ::: x is a nostalgic academic who enjoys learning.\nFocused(x) ::: x is focused on the future and industry professions.\nProfessor(x) ::: x is a historical professor who is passionate about their job and subject.\nPremises:\n∀x (Attend(x) → Enjoy(x, Dress)) ::: All people who attend Renaissance fairs regularly enjoy dressing up in old-fashioned and historical period clothing.\n∀x (Fascinated(x) → Attend(x)) ::: If people are fascinated by the history of the Renaissance and other past eras, then they attend Renaissance fairs regularly.\n∀x (Fascinated(x) ⊕ ¬Nostalgic(x)) ::: People are either fascinated by the history of the Renaissance and other past eras, or are not nostalgic academics who enjoy learning.\n∀x (Focused(x) → ¬Nostalgic(x)) ::: If people are focused on the future and industry professions, then they are not nostalgic academics who enjoy learning.\n∀x (Professor(x) → Nostalgic(x)) ::: If people are"
    ]
  },
  {
    "id": "FOLIO_train_445",
    "context": "All people who attend Renaissance fairs regularly enjoy dressing up in old-fashioned and historical period clothing. If people are fascinated by the history of the Renaissance and other past eras, then they attend Renaissance fairs regularly. People are either fascinated by the history of the Renaissance and other past eras, or are not nostalgic academics who enjoy learning. If people are focused on the future and industry professions, then they are not nostalgic academics who enjoy learning. If people are historical professors who are passionate about their job and subject, then they are nostalgic academics who enjoy learning. If Clyde is not focused on the future and industry professions, then he is neither focused on the future and industry professions nor enjoys dressing up in old-fashioned and historical period clothing.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Clyde is a history professor who is passionate about his job and subject.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAttend(x) ::: x attends Renaissance fairs regularly.\nEnjoy(x, y) ::: x enjoys y.\nDress(x) ::: x enjoys dressing up in old-fashioned and historical period clothing.\nFascinated(x) ::: x is fascinated by the history of the Renaissance and other past eras.\nNostalgic(x) ::: x is a nostalgic academic who enjoys learning.\nFocused(x) ::: x is focused on the future and industry professions.\nProfessor(x) ::: x is a history professor.\nPassionate(x) ::: x is passionate about his job and subject.\nPremises:\n∀x (Attend(x) → Enjoy(x, dress)) ::: All people who attend Renaissance fairs regularly enjoy dressing up in old-fashioned and historical period clothing.\n∀x (Fascinated(x) → Attend(x)) ::: If people are fascinated by the history of the Renaissance and other past eras, then they attend Renaissance fairs regularly.\n∀x (Fascinated(x) ⊕ ¬Nostalgic(x)) ::: People are either fascinated by the history of the Renaissance and other past eras, or are not nostalgic academics who enjoy learning.\n∀x (Focused(x) → ¬Nostalgic(x)) ::: If people are focused on the future and industry professions, then they are not nostalgic academics who enjoy learning.\n∀x (Professor(x) ∧"
    ]
  },
  {
    "id": "FOLIO_train_446",
    "context": "All people who attend Renaissance fairs regularly enjoy dressing up in old-fashioned and historical period clothing. If people are fascinated by the history of the Renaissance and other past eras, then they attend Renaissance fairs regularly. People are either fascinated by the history of the Renaissance and other past eras, or are not nostalgic academics who enjoy learning. If people are focused on the future and industry professions, then they are not nostalgic academics who enjoy learning. If people are historical professors who are passionate about their job and subject, then they are nostalgic academics who enjoy learning. If Clyde is not focused on the future and industry professions, then he is neither focused on the future and industry professions nor enjoys dressing up in old-fashioned and historical period clothing.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Clyde is a history professor who is passionate about his job and subject, or is not a nostalgic academic who enjoys learning.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAttend(x) ::: x attends Renaissance fairs regularly.\nEnjoy(x, y) ::: x enjoys y.\nDress(x) ::: x enjoys dressing up in old-fashioned and historical period clothing.\nFascinated(x) ::: x is fascinated by the history of the Renaissance and other past eras.\nNostalgic(x) ::: x is a nostalgic academic who enjoys learning.\nFocused(x) ::: x is focused on the future and industry professions.\nProfessor(x) ::: x is a history professor.\nPassionate(x) ::: x is passionate about his job and subject.\nPremises:\n∀x (Attend(x) → Enjoy(x, dress)) ::: All people who attend Renaissance fairs regularly enjoy dressing up in old-fashioned and historical period clothing.\n∀x (Fascinated(x) → Attend(x)) ::: If people are fascinated by the history of the Renaissance and other past eras, then they attend Renaissance fairs regularly.\n∀x (Fascinated(x) ⊕ ¬Nostalgic(x)) ::: People are either fascinated by the history of the Renaissance and other past eras, or are not nostalgic academics who enjoy learning.\n∀x (Focused(x) → ¬Nostalgic(x)) ::: If people are focused on the future and industry professions, then they are not nostalgic academics who enjoy learning.\n∀x (Professor(x) ∧"
    ]
  },
  {
    "id": "FOLIO_train_447",
    "context": "No sports cars are vehicles intended to be driven at moderate speeds. All automobiles designed for family use are vehicles intended to be driven at moderate speeds.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? No sports cars are automobiles designed for family use.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSportsCar(x) ::: x is a sports car.\nVehicle(x) ::: x is a vehicle.\nIntended(x, y) ::: x is intended to be driven at y.\nModerate(x) ::: x is moderate.\nAutomobile(x) ::: x is an automobile.\nFamily(x) ::: x is designed for family use.\nPremises:\n∀x (SportsCar(x) → Vehicle(x)) ::: No sports cars are vehicles intended to be driven at moderate speeds.\n∀x (Automobile(x) ∧ Family(x) → Vehicle(x) ∧ Intended(x, Moderate(x))) ::: All automobiles designed for family use are vehicles intended to be driven at moderate speeds.\nConclusion:\n¬∃x (SportsCar(x) ∧ Automobile(x) ∧ Family(x)) ::: No sports cars are automobiles designed for family use.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:"
    ]
  },
  {
    "id": "FOLIO_train_448",
    "context": "If people work well in teams in their workplace, then they get along with all their colleagues at their work. If people come to work every day with a positive attitude, then they work well in teams in their workplace. People either come into work every day with a positive attitude or are always tired every morning. If people get many promotions from their boss at work, then they receive negative feedback from teams at work. Kat is either both a person who works well in teams in their workplace and is always tired every morning, or she neither works well in teams in their workplace nor is always tired every morning.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Kat is a person who comes to work every day with a positive attitude.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nWorkWell(x) ::: x works well in teams in their workplace.\nGetAlong(x) ::: x gets along with all their colleagues at their work.\nPositive(x) ::: x comes to work every day with a positive attitude.\nTired(x) ::: x is always tired every morning.\nPromotion(x) ::: x gets many promotions from their boss at work.\nNegative(x) ::: x receives negative feedback from teams at work.\nPremises:\n∀x (WorkWell(x) → GetAlong(x)) ::: If people work well in teams in their workplace, then they get along with all their colleagues at their work.\n∀x (Positive(x) → WorkWell(x)) ::: If people come to work every day with a positive attitude, then they work well in teams in their workplace.\n∀x (Positive(x) ⊕ Tired(x)) ::: People either come into work every day with a positive attitude or are always tired every morning.\n∀x (Promotion(x) → Negative(x)) ::: If people get many promotions from their boss at work, then they receive negative feedback from teams at work.\n(WorkWell(kat) ∧ Tired(kat)) ⊕ ¬(WorkWell(kat) ∨ Tired(kat)) ::: Kat is either both a person who works well in teams in their workplace and is always tired every morning, or she neither works well in teams in their workplace nor is always tired every morning.\nConclusion:\nPositive(kat) ::: Kat is a person who comes to work every"
    ]
  },
  {
    "id": "FOLIO_train_449",
    "context": "If people work well in teams in their workplace, then they get along with all their colleagues at their work. If people come to work every day with a positive attitude, then they work well in teams in their workplace. People either come into work every day with a positive attitude or are always tired every morning. If people get many promotions from their boss at work, then they receive negative feedback from teams at work. Kat is either both a person who works well in teams in their workplace and is always tired every morning, or she neither works well in teams in their workplace nor is always tired every morning.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Kat gets along with her colleagues at her work and receives negative feedback from teams at her work.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nWorkWell(x) ::: x works well in teams in their workplace.\nGetAlong(x) ::: x gets along with all their colleagues at their work.\nPositive(x) ::: x comes to work every day with a positive attitude.\nTired(x) ::: x is always tired every morning.\nPromotion(x) ::: x gets many promotions from their boss at work.\nNegative(x) ::: x receives negative feedback from teams at work.\nPremises:\n∀x (WorkWell(x) → GetAlong(x)) ::: If people work well in teams in their workplace, then they get along with all their colleagues at their work.\n∀x (Positive(x) → WorkWell(x)) ::: If people come to work every day with a positive attitude, then they work well in teams in their workplace.\n∀x (Positive(x) ⊕ Tired(x)) ::: People either come into work every day with a positive attitude or are always tired every morning.\n∀x (Promotion(x) → Negative(x)) ::: If people get many promotions from their boss at work, then they receive negative feedback from teams at work.\n(WorkWell(kat) ∧ Tired(kat)) ⊕ ¬(WorkWell(kat) ∨ Tired(kat)) ::: Kat is either both a person who works well in teams in their workplace and is always tired every morning, or she neither works well in teams in their workplace nor is always tired every morning.\nConclusion:\nGetAlong(kat) ∧ Negative(kat) ::"
    ]
  },
  {
    "id": "FOLIO_train_450",
    "context": "If people work well in teams in their workplace, then they get along with all their colleagues at their work. If people come to work every day with a positive attitude, then they work well in teams in their workplace. People either come into work every day with a positive attitude or are always tired every morning. If people get many promotions from their boss at work, then they receive negative feedback from teams at work. Kat is either both a person who works well in teams in their workplace and is always tired every morning, or she neither works well in teams in their workplace nor is always tired every morning.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Kat either gets along with her colleagues at her work or receives negative feedback from teams at her work.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nWorkWell(x) ::: x works well in teams in their workplace.\nGetAlong(x) ::: x gets along with all their colleagues at their work.\nPositive(x) ::: x comes to work every day with a positive attitude.\nTired(x) ::: x is always tired every morning.\nPromotion(x) ::: x gets many promotions from their boss at work.\nNegative(x) ::: x receives negative feedback from teams at work.\nPremises:\n∀x (WorkWell(x) → GetAlong(x)) ::: If people work well in teams in their workplace, then they get along with all their colleagues at their work.\n∀x (Positive(x) → WorkWell(x)) ::: If people come to work every day with a positive attitude, then they work well in teams in their workplace.\n∀x (Positive(x) ⊕ Tired(x)) ::: People either come into work every day with a positive attitude or are always tired every morning.\n∀x (Promotion(x) → Negative(x)) ::: If people get many promotions from their boss at work, then they receive negative feedback from teams at work.\n(WorkWell(kat) ∧ Tired(kat)) ⊕ ¬(WorkWell(kat) ∨ Tired(kat)) ::: Kat is either both a person who works well in teams in their workplace and is always tired every morning, or she neither works well in teams in their workplace nor is always tired every morning.\nConclusion:\nGetAlong(kat) ⊕ Negative(kat) ::: Kat either gets along with her colleagues at her work or receives negative feedback from teams at her work.\n------"
    ]
  },
  {
    "id": "FOLIO_train_451",
    "context": "Drishti is open-source. Open-source software is free to modify.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Drishti is free to modify.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDrishti(x) ::: x is Drishti.\nOpenSource(x) ::: x is open-source.\nFreeToModify(x) ::: x is free to modify.\nPremises:\nDrishti(drishti) ::: Drishti is open-source.\n∀x (OpenSource(x) → FreeToModify(x)) ::: Open-source software is free to modify.\nConclusion:\nFreeToModify(drishti) ::: Drishti is free to modify.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina"
    ]
  },
  {
    "id": "FOLIO_train_452",
    "context": "There are five grades including A+, A, B+, B, and C in English. If a student gets A+ in English, then his score is greater than 95. If a student gets A in English, then his score is in the range of 90-95. Zhang got an A in English. Wang's English score is better than Zhang's. Wu's English score is lower than 90.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Zhang's English score is lower than 95.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEnglish(x) ::: x is a student who takes English.\nScore(x, y) ::: x's score is y.\nAplus(x) ::: x gets A+ in English.\nA(x) ::: x gets A in English.\nBplus(x) ::: x gets B+ in English.\nB(x) ::: x gets B in English.\nC(x) ::: x gets C in English.\nPremises:\n∀x (Aplus(x) → Score(x, y) ∧ y > 95) ::: If a student gets A+ in English, then his score is greater than 95.\n∀x (A(x) → Score(x, y) ∧ 90 ≤ y ≤ 95) ::: If a student gets A in English, then his score is in the range of 90-95.\nA(zhang) ::: Zhang got an A in English.\nScore(wang, y) ∧ Score(zhang, x) ∧ y > x ::: Wang's English score is better than Zhang's.\nScore(wu, y) ∧ y < 90 ::: Wu's English score is lower than 90.\nConclusion:\nScore(zhang, y) ∧ y < 95 ::: Zhang's English score is lower than 95.\n------\nProblem:\nThere are five grades including A+, A, B+, B, and C in English. If a student gets A+ in English, then his score is greater than 95. If a student gets A in English, then his score is in the range"
    ]
  },
  {
    "id": "FOLIO_train_453",
    "context": "There are five grades including A+, A, B+, B, and C in English. If a student gets A+ in English, then his score is greater than 95. If a student gets A in English, then his score is in the range of 90-95. Zhang got an A in English. Wang's English score is better than Zhang's. Wu's English score is lower than 90.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Wang got an A+ in English.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGrade(x) ::: x is a grade.\nEnglish(x) ::: x is English.\nScore(x) ::: x is a score.\nBetter(x, y) ::: x is better than y.\nWorse(x, y) ::: x is worse than y.\nAplus(x) ::: x is A+.\nA(x) ::: x is A.\nBplus(x) ::: x is B+.\nB(x) ::: x is B.\nC(x) ::: x is C.\nPremises:\n∀x (Grade(x) → English(x)) ::: There are five grades including A+, A, B+, B, and C in English.\n∀x (Aplus(x) → Score(x) > 95) ::: If a student gets A+ in English, then his score is greater than 95.\n∀x (A(x) → Score(x) ∈ [90, 95]) ::: If a student gets A in English, then his score is in the range of 90-95.\nEnglish(zhang) ∧ A(zhang) ::: Zhang got an A in English.\nBetter(wang, zhang) ::: Wang's English score is better than Zhang's.\nWorse(wu, 90) ::: Wu's English score is lower than 90.\nConclusion:\nAplus(wang) ::: Wang got an A+ in English.\n------\nProblem:\nThere are five grades including A+, A, B+, B, and C in English. If a student gets A+ in English, then his score"
    ]
  },
  {
    "id": "FOLIO_train_454",
    "context": "There are five grades including A+, A, B+, B, and C in English. If a student gets A+ in English, then his score is greater than 95. If a student gets A in English, then his score is in the range of 90-95. Zhang got an A in English. Wang's English score is better than Zhang's. Wu's English score is lower than 90.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Wu does not get an A or A+ in English.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGrade(x) ::: x is a grade.\nEnglish(x) ::: x is English.\nScore(x) ::: x is a score.\nBetter(x, y) ::: x is better than y.\nWorse(x, y) ::: x is worse than y.\nAplus(x) ::: x is A+.\nA(x) ::: x is A.\nBplus(x) ::: x is B+.\nB(x) ::: x is B.\nC(x) ::: x is C.\nPremises:\nGrade(Aplus) ∧ Grade(A) ∧ Grade(Bplus) ∧ Grade(B) ∧ Grade(C) ::: There are five grades including A+, A, B+, B, and C in English.\n∀x (English(x) ∧ Aplus(x) → Score(x) > 95) ::: If a student gets A+ in English, then his score is greater than 95.\n∀x (English(x) ∧ A(x) → Score(x) ∈ [90, 95]) ::: If a student gets A in English, then his score is in the range of 90-95.\nEnglish(zhang) ∧ A(zhang) ::: Zhang got an A in English.\nBetter(wang, zhang) ::: Wang's English score is better than Zhang's.\nScore(wu) < 90 ::: Wu's English score is lower than 90.\nConclusion:\n¬∃x (English(x) ∧ (A"
    ]
  },
  {
    "id": "FOLIO_train_455",
    "context": "Olivia doesn't prefer warm temperature during the day. When Olivia sleeps, she prefers cool temperature. Olivia sleeps during the night. Olivia works during the day. Olivia either works or sleeps. The time is either the day or the night. Olivia either prefers warm temperature or prefers cool temperature.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? At all times, Olivia prefers cool temperature.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPrefer(x, y) ::: x prefers y.\nTemperature(x) ::: x is a temperature.\nDay(x) ::: x is the day.\nNight(x) ::: x is the night.\nSleep(x) ::: x is sleeping.\nWork(x) ::: x is working.\nTime(x) ::: x is a time.\nPremises:\n¬Prefer(olivia, warm) ∧ Day(day) ∧ ∀x (Sleep(x) → Prefer(x, cool)) ∧ Night(night) ∧ Sleep(olivia) ∧ Work(olivia) ∧ (Sleep(olivia) ∨ Work(olivia)) ∧ (Day(time) ∨ Night(time)) ∧ (Prefer(olivia, warm) ∨ Prefer(olivia, cool)) ::: Olivia doesn't prefer warm temperature during the day. When Olivia sleeps, she prefers cool temperature. Olivia sleeps during the night. Olivia works during the day. Olivia either works or sleeps. The time is either the day or the night. Olivia either prefers warm temperature or prefers cool temperature.\nConclusion:\n∀x (Time(x) → Prefer(olivia, cool)) ::: At all times, Olivia prefers cool temperature.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and un"
    ]
  },
  {
    "id": "FOLIO_train_456",
    "context": "Taylor Swift gives a commencement speech in New York University in 2022. Both Columbia University and New York University are located in Manhattan. Taylor Swift has received three Grammy Album of the Year Awards. Columbia University is one of the Ivy League schools.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Taylor Swift delivers a commencement speech in Manhattan.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGiveSpeech(x, y, z) ::: x gives a speech in y in year z.\nLocated(x, y) ::: x is located in y.\nAward(x, y, z) ::: x receives y in year z.\nIvyLeague(x) ::: x is an Ivy League school.\nPremises:\nGiveSpeech(taylorSwift, newYorkUniversity, year2022) ::: Taylor Swift gives a commencement speech in New York University in 2022.\nLocated(columbiaUniversity, manhattan) ∧ Located(newYorkUniversity, manhattan) ::: Both Columbia University and New York University are located in Manhattan.\nAward(taylorSwift, grammyAlbumOfTheYearAward, year2009) ∧ Award(taylorSwift, grammyAlbumOfTheYearAward, year2015) ∧ Award(taylorSwift, grammyAlbumOfTheYearAward, year2019) ::: Taylor Swift has received three Grammy Album of the Year Awards.\nIvyLeague(columbiaUniversity) ::: Columbia University is one of the Ivy League schools.\nConclusion:\nGiveSpeech(taylorSwift, manhattan, year2022) ::: Taylor Swift delivers a commencement speech in Manhattan.\n------\nProblem:\nThe 2022 FIFA World Cup is the 22nd FIFA World Cup, an international football tournament contested by the men's national teams of the member associations of FIFA once every four years. The 2022 FIFA World Cup is the first World Cup ever"
    ]
  },
  {
    "id": "FOLIO_train_457",
    "context": "Taylor Swift gives a commencement speech in New York University in 2022. Both Columbia University and New York University are located in Manhattan. Taylor Swift has received three Grammy Album of the Year Awards. Columbia University is one of the Ivy League schools.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The commencement speaker of NYU does not have any album.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSpeaker(x, y) ::: x is the commencement speaker of y.\nLocated(x, y) ::: x is located in y.\nAward(x, y) ::: x has received y.\nIvyLeague(x) ::: x is one of the Ivy League schools.\nPremises:\nSpeaker(taylorSwift, newYorkUniversity) ∧ Located(newYorkUniversity, manhattan) ∧ Located(columbiaUniversity, manhattan) ::: Taylor Swift gives a commencement speech in New York University in 2022. Both Columbia University and New York University are located in Manhattan.\nAward(taylorSwift, grammyAlbumOfTheYearAward) ∧ Award(taylorSwift, grammyAlbumOfTheYearAward) ∧ Award(taylorSwift, grammyAlbumOfTheYearAward) ::: Taylor Swift has received three Grammy Album of the Year Awards.\nIvyLeague(columbiaUniversity) ::: Columbia University is one of the Ivy League schools.\nConclusion:\n¬∃x (Speaker(x, newYorkUniversity) ∧ ¬∃y (Award(x, y))) ::: The commencement speaker of NYU does not have any album.\n------\nProblem:\nThe 2022 FIFA World Cup is the 22nd FIFA World Cup, a quadrennial international men's football championship contested by the national teams of the member associations of FIFA. The 2022 FIFA World Cup is the first World Cup ever to be held in the Arab world and the second World Cup held entirely in Asia"
    ]
  },
  {
    "id": "FOLIO_train_458",
    "context": "Customers either choose Plan A or Plan B. All who choose Plan B are rewarded with a $30 gift card. There are no customers who do not choose any plans. No customers rewarded a $30 gift card are older than 80. Customers are either older than 80 or are currently studying at school. James is not a customer who is currently studying at school.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James is a customer who does not choose any plans.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nChoose(x, y) ::: x chooses y.\nPlanA(x) ::: x is Plan A.\nPlanB(x) ::: x is Plan B.\nReward(x, y) ::: x is rewarded with y.\nGiftCard(x) ::: x is a gift card.\nOlderThan(x, y) ::: x is older than y.\nSchool(x) ::: x is currently studying at school.\nCustomer(x) ::: x is a customer.\nPremises:\n∀x (Choose(x, planB) → Reward(x, giftCard)) ::: All who choose Plan B are rewarded with a $30 gift card.\n∀x (Choose(x, planA) ⊕ Choose(x, planB)) ::: Customers either choose Plan A or Plan B.\n∀x (Reward(x, giftCard) → ¬OlderThan(x, year80)) ::: No customers rewarded a $30 gift card are older than 80.\n∀x (OlderThan(x, year80) ⊕ School(x)) ::: Customers are either older than 80 or are currently studying at school.\n¬School(james) ::: James is not a customer who is currently studying at school.\nConclusion:\nChoose(james, planA) ⊕ Choose(james, planB) ::: James is a customer who does not choose any plans.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine"
    ]
  },
  {
    "id": "FOLIO_train_459",
    "context": "Customers either choose Plan A or Plan B. All who choose Plan B are rewarded with a $30 gift card. There are no customers who do not choose any plans. No customers rewarded a $30 gift card are older than 80. Customers are either older than 80 or are currently studying at school. James is not a customer who is currently studying at school.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James is a customer who chooses Plan A or does not choose any plans.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nChoose(x, y) ::: x chooses y.\nPlanA(x) ::: x is Plan A.\nPlanB(x) ::: x is Plan B.\nReward(x, y) ::: x is rewarded with y.\nGiftCard(x) ::: x is a gift card.\nOlderThan(x, y) ::: x is older than y.\nSchool(x) ::: x is currently studying at school.\nPremises:\n∀x (Choose(x, planB) → Reward(x, giftCard30)) ::: All who choose Plan B are rewarded with a $30 gift card.\n∀x (Choose(x, planA) ⊕ Choose(x, planB)) ::: Customers either choose Plan A or Plan B.\n∀x (Choose(x, planA) ⊕ Choose(x, planB)) ::: There are no customers who do not choose any plans.\n∀x (Reward(x, giftCard30) → ¬OlderThan(x, year80)) ::: No customers rewarded a $30 gift card are older than 80.\n∀x (OlderThan(x, year80) ⊕ School(x)) ::: Customers are either older than 80 or are currently studying at school.\nSchool(james) ::: James is not a customer who is currently studying at school.\nConclusion:\nChoose(james, planA) ⊕ ¬Choose(james, planA) ::: James is a customer who chooses Plan A or does not choose any plans.\n------\nProblem:\nAll people who regularly"
    ]
  },
  {
    "id": "FOLIO_train_460",
    "context": "Customers either choose Plan A or Plan B. All who choose Plan B are rewarded with a $30 gift card. There are no customers who do not choose any plans. No customers rewarded a $30 gift card are older than 80. Customers are either older than 80 or are currently studying at school. James is not a customer who is currently studying at school.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Suppose James is a customer who chooses Plan A or does not choose any plans, then he is either rewarded a $30 gift card or chooses Plan B.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nChoose(x, y) ::: x chooses y.\nPlanA(x) ::: x is Plan A.\nPlanB(x) ::: x is Plan B.\nReward(x, y) ::: x is rewarded y.\nGiftCard(x) ::: x is a gift card.\nOlderThan(x, y) ::: x is older than y.\nSchool(x) ::: x is currently studying at school.\nPremises:\n∀x (Choose(x, planB) → Reward(x, giftCard30)) ::: All who choose Plan B are rewarded with a $30 gift card.\n∀x (Choose(x, planA) ⊕ Choose(x, planB)) ::: Customers either choose Plan A or Plan B.\n∀x (Choose(x, planA) ⊕ Choose(x, planB)) ::: There are no customers who do not choose any plans.\n∀x (Reward(x, giftCard30) → ¬OlderThan(x, year80)) ::: No customers rewarded a $30 gift card are older than 80.\n∀x (OlderThan(x, year80) ⊕ School(x)) ::: Customers are either older than 80 or are currently studying at school.\n¬School(james) ::: James is not a customer who is currently studying at school.\nConclusion:\nChoose(james, planA) → (Reward(james, giftCard30) ⊕ Choose(james, planB)) ::: Suppose James is a customer who chooses Plan A or does not choose any plans, then he is either rewarded a $30 gift card or chooses Plan B.\n------"
    ]
  },
  {
    "id": "FOLIO_train_461",
    "context": "Detroit City is a horse. Some horses are racehorses. If a horse falls during a race, then it dies. Detroit City fell during a race. A horse is a racehorse if it is in a race.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Detroit City has been in multiple races.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDetroitCity(x) ::: x is Detroit City.\nHorse(x) ::: x is a horse.\nRacehorse(x) ::: x is a racehorse.\nFall(x) ::: x falls during a race.\nDie(x) ::: x dies.\nRace(x) ::: x is in a race.\nPremises:\nDetroitCity(detroitCity) ::: Detroit City is a horse.\n∃x (Horse(x) ∧ Racehorse(x)) ::: Some horses are racehorses.\n∀x (Fall(x) → Die(x)) ::: If a horse falls during a race, then it dies.\nFall(detroitCity) ::: Detroit City fell during a race.\n∀x (Racehorse(x) ↔ Race(x)) ::: A horse is a racehorse if it is in a race.\nConclusion:\n∃x (Racehorse(x) ∧ Race(x)) ::: Detroit City has been in multiple races.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being add"
    ]
  },
  {
    "id": "FOLIO_train_462",
    "context": "Detroit City is a horse. Some horses are racehorses. If a horse falls during a race, then it dies. Detroit City fell during a race. A horse is a racehorse if it is in a race.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Detroit City is dead.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDetroitCity(x) ::: x is Detroit City.\nHorse(x) ::: x is a horse.\nRacehorse(x) ::: x is a racehorse.\nFall(x) ::: x falls during a race.\nDie(x) ::: x dies.\nRace(x) ::: x is in a race.\nPremises:\nDetroitCity(detroitCity) ::: Detroit City is a horse.\n∃x (Horse(x) ∧ Racehorse(x)) ::: Some horses are racehorses.\n∀x (Fall(x) → Die(x)) ::: If a horse falls during a race, then it dies.\nFall(detroitCity) ::: Detroit City fell during a race.\n∀x (Racehorse(x) ↔ Race(x)) ::: A horse is a racehorse if it is in a race.\nConclusion:\nDie(detroitCity) ::: Detroit City is dead.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug."
    ]
  },
  {
    "id": "FOLIO_train_463",
    "context": "Detroit City is a horse. Some horses are racehorses. If a horse falls during a race, then it dies. Detroit City fell during a race. A horse is a racehorse if it is in a race.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Detroit City is a racehorse.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDetroitCity(x) ::: x is Detroit City.\nHorse(x) ::: x is a horse.\nRacehorse(x) ::: x is a racehorse.\nFall(x) ::: x falls during a race.\nDie(x) ::: x dies.\nRace(x) ::: x is in a race.\nPremises:\nDetroitCity(detroitCity) ::: Detroit City is a horse.\n∃x (Horse(x) ∧ Racehorse(x)) ::: Some horses are racehorses.\n∀x (Fall(x) → Die(x)) ::: If a horse falls during a race, then it dies.\nFall(detroitCity) ::: Detroit City fell during a race.\n∀x (Racehorse(x) ↔ Race(x)) ::: A horse is a racehorse if it is in a race.\nConclusion:\nRacehorse(detroitCity) ::: Detroit City is a racehorse.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that c"
    ]
  },
  {
    "id": "FOLIO_train_464",
    "context": "Frederick Monhoff was an architect, artist, and illustrator. Frederick Monhoff was an American. An artist is good at painting or music. All Americans speak English.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Frederick Monhoff is good at music.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAmerican(x) ::: x is an American.\nArtist(x) ::: x is an artist.\nArchitect(x) ::: x is an architect.\nIllustrator(x) ::: x is an illustrator.\nGood(x, y) ::: x is good at y.\nPainting(x) ::: x is painting.\nMusic(x) ::: x is music.\nSpeak(x, y) ::: x speaks y.\nEnglish(x) ::: x is English.\nPremises:\nAmerican(frederickMonhoff) ∧ Architect(frederickMonhoff) ∧ Artist(frederickMonhoff) ∧ Illustrator(frederickMonhoff) ::: Frederick Monhoff was an architect, artist, and illustrator.\nAmerican(frederickMonhoff) ::: Frederick Monhoff was an American.\n∀x (Artist(x) → (Good(x, Painting) ⊕ Good(x, Music))) ::: An artist is good at painting or music.\n∀x (American(x) → Speak(x, English)) ::: All Americans speak English.\nConclusion:\nGood(frederickMonhoff, Music) ::: Frederick Monhoff is good at music.\n------\nProblem:\nThe 1998 FIFA World Cup was the 16th FIFA World Cup, the world championship for men's national association football teams. It was held in France from 10 June to 12 July 1998. The only team to have won the World Cup three times is Brazil. The only team to have won the World Cup four times is Germany.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The 1998 FIFA"
    ]
  },
  {
    "id": "FOLIO_train_465",
    "context": "Frederick Monhoff was an architect, artist, and illustrator. Frederick Monhoff was an American. An artist is good at painting or music. All Americans speak English.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There is no illustrator who speaks English.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nArchitect(x) ::: x is an architect.\nArtist(x) ::: x is an artist.\nIllustrator(x) ::: x is an illustrator.\nAmerican(x) ::: x is an American.\nSpeak(x, y) ::: x speaks y.\nEnglish(x) ::: x is English.\nPainting(x) ::: x is painting.\nMusic(x) ::: x is music.\nPremises:\nArchitect(frederick) ∧ Artist(frederick) ∧ Illustrator(frederick) ∧ American(frederick) ::: Frederick Monhoff was an architect, artist, and illustrator.\nAmerican(frederick) ::: Frederick Monhoff was an American.\n∀x (Artist(x) → (Painting(x) ⊕ Music(x))) ::: An artist is good at painting or music.\n∀x (American(x) → Speak(x, English)) ::: All Americans speak English.\nConclusion:\n¬∃x (Illustrator(x) ∧ Speak(x, English)) ::: There is no illustrator who speaks English.\n------\nProblem:\nThe following is a description of a problem.\nA person is either a student or a teacher. A student is a person who is enrolled in a course. A teacher is a person who teaches a course. A person who teaches a course is a person who is enrolled in a course.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? A person who is enrolled in a course is a person who teaches a course.\nBased on the above information, is the following statement true, false, or uncertain? A person who is enrolled in a course is a person"
    ]
  },
  {
    "id": "FOLIO_train_466",
    "context": "Miroslav Fiedler was a Czech mathematician. Miroslav Fiedler is known for his contributions to linear algebra and graph theory. Miroslav Fiedler is honored by the Fiedler eigenvalue. Fiedler eigenvalue is the second smallest eigenvalue of the graph Laplacian.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Miroslav Fiedler is honored by the second smallest eigenvalue of the graph Laplacian.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCzech(x) ::: x is a Czech person.\nMathematician(x) ::: x is a mathematician.\nContribute(x, y) ::: x contributes to y.\nKnownFor(x, y) ::: x is known for y.\nHonor(x, y) ::: x is honored by y.\nEigenvalue(x) ::: x is an eigenvalue.\nFiedler(x) ::: x is the Fiedler eigenvalue.\nPremises:\nCzech(miroslavFiedler) ∧ Mathematician(miroslavFiedler) ∧ Contribute(miroslavFiedler, linearAlgebra) ∧ Contribute(miroslavFiedler, graphTheory) ::: Miroslav Fiedler was a Czech mathematician. Miroslav Fiedler is known for his contributions to linear algebra and graph theory.\nHonor(miroslavFiedler, fiedlerEigenvalue) ::: Miroslav Fiedler is honored by the Fiedler eigenvalue.\nEigenvalue(fiedlerEigenvalue) ∧ Fiedler(fiedlerEigenvalue) ∧ SecondSmallest(fiedlerEigenvalue, graphLaplacian) ::: Fiedler eigenvalue is the second smallest eigenvalue of the graph Laplacian.\nConclusion:\nHonor(miroslavFiedler, secondSmallestEigenvalueOfGraphLaplacian) ::: Miroslav Fiedler is honored by the second smallest eigenvalue of the graph Laplacian.\n------\nProblem:\nThe first person to use the term \"graph\" in the context of mathematics was J."
    ]
  },
  {
    "id": "FOLIO_train_467",
    "context": "Miroslav Fiedler was a Czech mathematician. Miroslav Fiedler is known for his contributions to linear algebra and graph theory. Miroslav Fiedler is honored by the Fiedler eigenvalue. Fiedler eigenvalue is the second smallest eigenvalue of the graph Laplacian.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Miroslav Fiedler was a French mathematician.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFrench(x) ::: x is a French person.\nCzech(x) ::: x is a Czech person.\nMathematician(x) ::: x is a mathematician.\nContribute(x, y) ::: x contributes to y.\nKnownFor(x, y) ::: x is known for y.\nHonor(x, y) ::: x is honored by y.\nEigenvalue(x) ::: x is an eigenvalue.\nPremises:\nCzech(miroslavFiedler) ::: Miroslav Fiedler was a Czech mathematician.\nKnownFor(miroslavFiedler, linearAlgebra) ∧ KnownFor(miroslavFiedler, graphTheory) ::: Miroslav Fiedler is known for his contributions to linear algebra and graph theory.\nHonor(miroslavFiedler, fiedlerEigenvalue) ::: Miroslav Fiedler is honored by the Fiedler eigenvalue.\nEigenvalue(fiedlerEigenvalue) ∧ SecondSmallest(fiedlerEigenvalue, graphLaplacian) ::: Fiedler eigenvalue is the second smallest eigenvalue of the graph Laplacian.\nConclusion:\n¬French(miroslavFiedler) ::: Miroslav Fiedler was a French mathematician.\n------\nProblem:\nThe 1996 Summer Olympics, officially known as the Games of the XXVI Olympiad, was an international multi-sport event that was celebrated in 1996 in Atlanta, Georgia, United States. The 1996 Summer Olympics was the first time that the Summer Olympic Games were held in the Southern United States. The 199"
    ]
  },
  {
    "id": "FOLIO_train_468",
    "context": "Miroslav Fiedler was a Czech mathematician. Miroslav Fiedler is known for his contributions to linear algebra and graph theory. Miroslav Fiedler is honored by the Fiedler eigenvalue. Fiedler eigenvalue is the second smallest eigenvalue of the graph Laplacian.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A Czech mathematician is known for his contributions to linear algebra and graph theory.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCzech(x) ::: x is a Czech person.\nMathematician(x) ::: x is a mathematician.\nKnown(x, y) ::: x is known for y.\nContribution(x, y) ::: x is a contribution to y.\nLinearAlgebra(x) ::: x is linear algebra.\nGraphTheory(x) ::: x is graph theory.\nHonored(x, y) ::: x is honored by y.\nEigenvalue(x) ::: x is an eigenvalue.\nLaplacian(x) ::: x is a graph Laplacian.\nPremises:\nCzech(miroslavFiedler) ∧ Mathematician(miroslavFiedler) ∧ Known(miroslavFiedler, contributionToLinearAlgebraAndGraphTheory) ::: Miroslav Fiedler was a Czech mathematician. Miroslav Fiedler is known for his contributions to linear algebra and graph theory.\nHonored(miroslavFiedler, fiedlerEigenvalue) ::: Miroslav Fiedler is honored by the Fiedler eigenvalue.\nEigenvalue(fiedlerEigenvalue) ∧ Laplacian(fiedlerEigenvalue) ::: Fiedler eigenvalue is the second smallest eigenvalue of the graph Laplacian.\nConclusion:\n∃x (Czech(x) ∧ Mathematician(x) ∧ Known(x, contributionToLinearAlgebraAndGraphTheory)) ::: A Czech mathematician is known for his contributions to linear algebra and graph theory.\n------\nProblem:\nThe first person to use the term \"graph\" in the context of"
    ]
  },
  {
    "id": "FOLIO_train_469",
    "context": "A laptop is a computer. You can play games on a computer. A phone is not a computer.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? You can play games on a laptop.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLaptop(x) ::: x is a laptop.\nComputer(x) ::: x is a computer.\nPhone(x) ::: x is a phone.\nPlay(x, y) ::: x can play y.\nGame(x) ::: x is a game.\nPremises:\n∀x (Laptop(x) → Computer(x)) ::: A laptop is a computer.\n∀x (Computer(x) → Play(x, game)) ::: You can play games on a computer.\n∀x (Phone(x) → ¬Computer(x)) ::: A phone is not a computer.\nConclusion:\n∀x (Laptop(x) → Play(x, game)) ::: You can play games on a laptop.\n------\nProblem:\nA person who is a student is a person. A person who is a student is a person who is a student. A person who is a student is a person who is a student. A person who is a student is a person who is a student. A person who is a student is a person who is a student. A person who is a student is a person who is a student. A person who is a student is a person who is a student. A person who is a student is a person who is a student. A person who is a student is a person who is a student. A person who is a student is a person who is a student. A person who is a student is a person who is a student. A person who is a student is a person who is a student. A person who is a student is a person who is a student. A person who is a student is a person who is a student. A person who is a student is a person who is a student. A person who is a student is a person who is a student. A person who is a student is"
    ]
  },
  {
    "id": "FOLIO_train_470",
    "context": "A laptop is a computer. You can play games on a computer. A phone is not a computer.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? You can not play games on a phone.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLaptop(x) ::: x is a laptop.\nComputer(x) ::: x is a computer.\nPhone(x) ::: x is a phone.\nPlay(x, y) ::: x can play y.\nGame(x) ::: x is a game.\nPremises:\n∀x (Laptop(x) → Computer(x)) ::: A laptop is a computer.\n∀x (Computer(x) → Play(x, game)) ::: You can play games on a computer.\n∀x (Phone(x) → ¬Computer(x)) ::: A phone is not a computer.\nConclusion:\n∀x (Phone(x) → ¬Play(x, game)) ::: You can not play games on a phone.\n------"
    ]
  },
  {
    "id": "FOLIO_train_471",
    "context": "Walter Folger Brown was an American politician and lawyer, and served as the postmaster general. Walter Folger Brown graduated from Harvard University with a Bachelors of Arts. While they were both in Toledo, Walter Folger Brown's father practiced law with Walter Folger Brown. Katherin Hafer married Walter Folger Brown.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Walter Folger Brown graduated with a Bachelors of Arts.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGraduate(x, y) ::: x graduated with a y.\nMarry(x, y) ::: x married y.\nPractice(x, y) ::: x practiced law with y.\nPostmasterGeneral(x) ::: x is the postmaster general.\nPolitician(x) ::: x is a politician.\nLawyer(x) ::: x is a lawyer.\nPremises:\nGraduate(walterFolgerBrown, bachelorsOfArts) ::: Walter Folger Brown graduated from Harvard University with a Bachelors of Arts.\nPostmasterGeneral(walterFolgerBrown) ::: Walter Folger Brown was the postmaster general.\nPolitician(walterFolgerBrown) ::: Walter Folger Brown was a politician.\nLawyer"
    ]
  },
  {
    "id": "FOLIO_train_472",
    "context": "Walter Folger Brown was an American politician and lawyer, and served as the postmaster general. Walter Folger Brown graduated from Harvard University with a Bachelors of Arts. While they were both in Toledo, Walter Folger Brown's father practiced law with Walter Folger Brown. Katherin Hafer married Walter Folger Brown.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Walter Folger Brown's father was in Toledo.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGraduate(x, y) ::: x graduated from y.\nPractice(x, y) ::: x practices y.\nMarry(x, y) ::: x marries y.\nPostmasterGeneral(x) ::: x is the postmaster general.\nLawyer(x) ::: x is a lawyer.\nPolitician(x) ::: x is a politician.\nPremises:\nPostmasterGeneral(walterFolgerBrown) ::: Walter Folger Brown was the postmaster general.\nGraduate(walterFolgerBrown, harvardUniversity) ::: Walter Folger Brown graduated from Harvard University with a Bachelors of Arts.\nPractice(walterFolgerBrown, law) ∧ Practice(walterFolgerBrown, father, law"
    ]
  },
  {
    "id": "FOLIO_train_473",
    "context": "Walter Folger Brown was an American politician and lawyer, and served as the postmaster general. Walter Folger Brown graduated from Harvard University with a Bachelors of Arts. While they were both in Toledo, Walter Folger Brown's father practiced law with Walter Folger Brown. Katherin Hafer married Walter Folger Brown.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Walter Folger Brown was not in Toledo.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGraduate(x, y) ::: x graduated from y.\nBachelorOfArts(x) ::: x is a Bachelor of Arts.\nPracticeLaw(x, y) ::: x practices law with y.\nMarry(x, y) ::: x married y.\nPostmasterGeneral(x) ::: x is the postmaster general.\nPolitician(x) ::: x is a politician.\nLawyer(x) ::: x is a lawyer.\nPremises:\nPostmasterGeneral(walterFolgerBrown) ∧ Politician(walterFolgerBrown) ∧ Lawyer(walterFolgerBrown) ::: Walter Folger Brown was an American politician and lawyer, and served as the postmaster general.\nGraduate(walterF"
    ]
  },
  {
    "id": "FOLIO_train_474",
    "context": "All products shipped from China are made in China. All products sold in JD are shipped from China. All products commonly used in China are sold in JD. All products favored by young people are commonly used in China. MacBook is not made in China and is not commonly used in China.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The MacBook is favored by young people.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMadeInChina(x) ::: x is made in China.\nShippedFromChina(x) ::: x is shipped from China.\nSoldInJD(x) ::: x is sold in JD.\nCommonlyUsedInChina(x) ::: x is commonly used in China.\nFavoredByYoungPeople(x) ::: x is favored by young people.\nProduct(x) ::: x is a product.\nMacBook(x) ::: x is a MacBook.\nPremises:\n∀x (ShippedFromChina(x) → MadeInChina(x)) ::: All products shipped from China are made in China.\n∀x (SoldInJD(x) → ShippedFromChina(x)) ::: All products sold in"
    ]
  },
  {
    "id": "FOLIO_train_475",
    "context": "All products shipped from China are made in China. All products sold in JD are shipped from China. All products commonly used in China are sold in JD. All products favored by young people are commonly used in China. MacBook is not made in China and is not commonly used in China.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The MacBook is made in China.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMadeInChina(x) ::: x is made in China.\nShippedFromChina(x) ::: x is shipped from China.\nSoldInJD(x) ::: x is sold in JD.\nCommonlyUsedInChina(x) ::: x is commonly used in China.\nFavoredByYoungPeople(x) ::: x is favored by young people.\nMacBook(x) ::: x is a MacBook.\nPremises:\n∀x (ShippedFromChina(x) → MadeInChina(x)) ::: All products shipped from China are made in China.\n∀x (SoldInJD(x) → ShippedFromChina(x)) ::: All products sold in JD are shipped from China.\n∀x"
    ]
  },
  {
    "id": "FOLIO_train_476",
    "context": "All products shipped from China are made in China. All products sold in JD are shipped from China. All products commonly used in China are sold in JD. All products favored by young people are commonly used in China. MacBook is not made in China and is not commonly used in China.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The MacBook is favored by young people and commonly used in China.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMadeInChina(x) ::: x is made in China.\nShippedFromChina(x) ::: x is shipped from China.\nSoldInJD(x) ::: x is sold in JD.\nCommonlyUsedInChina(x) ::: x is commonly used in China.\nFavoredByYoungPeople(x) ::: x is favored by young people.\nMacBook(x) ::: x is a MacBook.\nPremises:\n∀x (ShippedFromChina(x) → MadeInChina(x)) ::: All products shipped from China are made in China.\n∀x (SoldInJD(x) → ShippedFromChina(x)) ::: All products sold in JD are shipped from China.\n∀x"
    ]
  },
  {
    "id": "FOLIO_train_477",
    "context": "All products shipped from China are made in China. All products sold in JD are shipped from China. All products commonly used in China are sold in JD. All products favored by young people are commonly used in China. MacBook is not made in China and is not commonly used in China.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The MacBook is either favored by young people or commonly used in China.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMadeInChina(x) ::: x is made in China.\nShippedFromChina(x) ::: x is shipped from China.\nSoldInJD(x) ::: x is sold in JD.\nCommonlyUsedInChina(x) ::: x is commonly used in China.\nFavoredByYoungPeople(x) ::: x is favored by young people.\nProduct(x) ::: x is a product.\nMacBook(x) ::: x is a MacBook.\nPremises:\n∀x (ShippedFromChina(x) → MadeInChina(x)) ::: All products shipped from China are made in China.\n∀x (SoldInJD(x) → ShippedFromChina(x)) ::: All products sold in"
    ]
  },
  {
    "id": "FOLIO_train_478",
    "context": "All products shipped from China are made in China. All products sold in JD are shipped from China. All products commonly used in China are sold in JD. All products favored by young people are commonly used in China. MacBook is not made in China and is not commonly used in China.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If the MacBook is favored by young people and commonly used in China, then it is neither favored by young people nor made in China.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMadeInChina(x) ::: x is made in China.\nShippedFromChina(x) ::: x is shipped from China.\nSoldInJD(x) ::: x is sold in JD.\nCommonlyUsedInChina(x) ::: x is commonly used in China.\nFavoredByYoungPeople(x) ::: x is favored by young people.\nMacBook(x) ::: x is a MacBook.\nPremises:\n∀x (ShippedFromChina(x) → MadeInChina(x)) ::: All products shipped from China are made in China.\n∀x (SoldInJD(x) → ShippedFromChina(x)) ::: All products sold in JD are shipped from China.\n∀x"
    ]
  },
  {
    "id": "FOLIO_train_479",
    "context": "Oxford Circus is a road junction connecting Oxford Street and Regent Street. Oxford Street is in London. John Nash designed the construction on Regent Street. John Nash designed Oxford Circus. John Nash is an architect in British. Oxford Circus is the entrance to Oxford Circus tube station which is a part of the Central line in 1900.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Oxford Circus is in London.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nOxfordCircus(x) ::: x is Oxford Circus.\nOxfordStreet(x) ::: x is Oxford Street.\nRegentStreet(x) ::: x is Regent Street.\nLondon(x) ::: x is in London.\nJohnNash(x) ::: x is John Nash.\nArchitect(x) ::: x is an architect.\nBritish(x) ::: x is in British.\nCentralLine(x) ::: x is a part of the Central line.\nTubeStation(x) ::: x is a tube station.\nYear1900(x) ::: x is in year 1900.\nPremises:\nOxfordCircus(oxfordCircus) ∧ OxfordStreet("
    ]
  },
  {
    "id": "FOLIO_train_480",
    "context": "Oxford Circus is a road junction connecting Oxford Street and Regent Street. Oxford Street is in London. John Nash designed the construction on Regent Street. John Nash designed Oxford Circus. John Nash is an architect in British. Oxford Circus is the entrance to Oxford Circus tube station which is a part of the Central line in 1900.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Oxford Circus is designed by a British architect.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nOxfordCircus(x) ::: x is Oxford Circus.\nOxfordStreet(x) ::: x is Oxford Street.\nRegentStreet(x) ::: x is Regent Street.\nLondon(x) ::: x is in London.\nJohnNash(x) ::: x is John Nash.\nArchitect(x) ::: x is an architect.\nBritish(x) ::: x is British.\nDesign(x, y) ::: x is designed by y.\nConstruction(x) ::: x is a construction.\nRoadJunction(x) ::: x is a road junction.\nEntrance(x, y) ::: x is the entrance to y.\nTubeStation(x) ::: x is a tube station.\nCentralLine(x) ::: x is a part of the Central line.\nYear1900(x) ::: x is in year 1900.\nPremises:\nOxfordCircus(oxfordCircus) ∧ RoadJunction(oxfordCircus) ∧ OxfordStreet(oxfordStreet) ∧ RegentStreet(regentStreet) ∧ London(oxfordStreet) ∧ London(regentStreet) ∧ Design(johnNash, oxfordCircus) ∧ Design(johnNash, constructionOnRegentStreet) ∧ Architect(johnNash) ∧ British(johnNash) ∧ Entrance(oxfordCircus, oxfordCircusTubeStation) ∧ TubeStation(oxfordCircusTubeStation) ∧ CentralLine(oxfordCircusTubeStation) ∧ Year1900(oxfordCircusTubeStation) ::: Oxford Circus is a road junction connecting Oxford Street and Regent Street. Oxford Street is in London. John Nash designed the construction on Regent Street. John Nash designed Oxford Circus. John Nash is an architect in British. Oxford Circus is the entrance to Oxford Circus tube station which is a part of the Central line in 1900.\nConclusion:\n∃x (OxfordCircus(x) ∧ Design(x, y) ∧ Architect(y) ∧ British(y)) ::: Oxford Circus is designed by a British architect.\n------"
    ]
  },
  {
    "id": "FOLIO_train_481",
    "context": "Oxford Circus is a road junction connecting Oxford Street and Regent Street. Oxford Street is in London. John Nash designed the construction on Regent Street. John Nash designed Oxford Circus. John Nash is an architect in British. Oxford Circus is the entrance to Oxford Circus tube station which is a part of the Central line in 1900.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? John Nash designed the Central line in 1900.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nOxfordCircus(x) ::: x is Oxford Circus.\nRoad(x) ::: x is a road.\nJunction(x) ::: x is a junction.\nConnect(x, y, z) ::: x connects y and z.\nOxfordStreet(x) ::: x is Oxford Street.\nRegentStreet(x) ::: x is Regent Street.\nLondon(x) ::: x is in London.\nDesign(x, y) ::: x designed y.\nConstruction(x) ::: x is a construction.\nArchitect(x) ::: x is an architect.\nBritish(x) ::: x is in British.\nEntrance(x, y) ::: x is the entrance to y.\nTubeStation(x) ::: x is a tube station.\nCentralLine(x) ::: x is the Central line.\nYear1900(x) ::: x is in year 1900.\nPremises:\nOxfordCircus(oxfordCircus) ∧ Road(oxfordCircus) ∧ Junction(oxfordCircus) ∧ Connect(oxfordCircus, oxfordStreet, regentStreet) ::: Oxford Circus is a road junction connecting Oxford Street and Regent Street.\nOxfordStreet(oxfordStreet) ∧ London(oxfordStreet) ::: Oxford Street is in London.\nDesign(johnNash, constructionOnRegentStreet) ∧ Construction(constructionOnRegentStreet) ::: John Nash designed the construction on Regent Street.\nDesign(johnNash, oxfordCircus) ::: John Nash designed Oxford Circus.\nArchitect(johnNash) ∧ British(johnNash) ::: John Nash is an architect in British.\nEntrance(oxfordCircus, oxfordCircusTubeStation) ∧ TubeStation(oxfordCircusTubeStation) ∧ CentralLine(centralLine) ∧ Year1900(year1900) ::: Oxford Circus is the entrance to Oxford Circus tube station which is a part of the Central line in 1900.\nConclusion:\nDesign(johnNash, centralLine) ∧ Year1900(year1900) ::: John Nash designed"
    ]
  },
  {
    "id": "FOLIO_train_482",
    "context": "Oxford Circus is a road junction connecting Oxford Street and Regent Street. Oxford Street is in London. John Nash designed the construction on Regent Street. John Nash designed Oxford Circus. John Nash is an architect in British. Oxford Circus is the entrance to Oxford Circus tube station which is a part of the Central line in 1900.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Regent Street is not in London.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nOxfordCircus(x) ::: x is Oxford Circus.\nOxfordStreet(x) ::: x is Oxford Street.\nRegentStreet(x) ::: x is Regent Street.\nIn(x, y) ::: x is in y.\nDesign(x, y) ::: x designed y.\nArchitect(x) ::: x is an architect.\nBritish(x) ::: x is British.\nCentralLine(x) ::: x is a part of the Central line.\nEntrance(x, y) ::: x is the entrance to y.\nTubeStation(x) ::: x is a tube station.\nYear(x) ::: x is a year.\nPremises:\nOxfordCircus(oxfordCircus) ∧ OxfordStreet(oxfordStreet) ∧ RegentStreet(regentStreet) ∧ In(oxfordStreet, london) ∧ Design(johnNash, regentStreet) ∧ Design(johnNash, oxfordCircus) ∧ Architect(johnNash) ∧ British(johnNash) ∧ OxfordCircus(oxfordCircusTubeStation) ∧ CentralLine(centralLine) ∧ Entrance(oxfordCircus, oxfordCircusTubeStation) ∧ TubeStation(oxfordCircusTubeStation) ∧ Year(year1900) ::: Oxford Circus is a road junction connecting Oxford Street and Regent Street. Oxford Street is in London. John Nash designed the construction on Regent Street. John Nash designed Oxford Circus. John Nash is an architect in British. Oxford Circus is the entrance to Oxford Circus tube station which is a part of the Central line in 1900.\nConclusion:\n¬In(regentStreet, london) ::: Regent Street is not in London.\n------\nProblem:\nThe 1992 Summer Olympics, officially known as the Games of the XXV Olympiad, was an international multi-sport event that was held in Barcelona, Spain. The 1992 Summer Olympics was the first Summer Olympics since the 1972 Summer Olympics to be held in Europe. The 1992 Summer Olympics was the first Summer Olympics since the 1984 Summer Olympics to be held in a Western country."
    ]
  },
  {
    "id": "FOLIO_train_483",
    "context": "An animal is either a cat or a dog. All dogs bark. Ghosts do not exist. If something barks, then it is not alive. A thing is either alive or dead. Jojo is not dead.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jojo is a ghost.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAnimal(x) ::: x is an animal.\nCat(x) ::: x is a cat.\nDog(x) ::: x is a dog.\nBark(x) ::: x barks.\nGhost(x) ::: x is a ghost.\nExist(x) ::: x exists.\nAlive(x) ::: x is alive.\nDead(x) ::: x is dead.\nPremises:\n∀x (Animal(x) → (Cat(x) ⊕ Dog(x))) ::: An animal is either a cat or a dog.\n∀x (Dog(x) → Bark(x)) ::: All dogs bark.\n∀x (Ghost(x) → ¬Exist(x)) ::: Ghosts do not exist.\n∀x (Bark(x) → ¬Alive(x)) ::: If something barks, then it is not alive.\n∀x (Alive(x) ⊕ Dead(x)) ::: A thing is either alive or dead.\n¬Dead(jojo) ::: Jojo is not dead.\nConclusion:\nGhost(jojo) ::: Jojo is a ghost.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.\n###\nPredicates:\nDep"
    ]
  },
  {
    "id": "FOLIO_train_484",
    "context": "An animal is either a cat or a dog. All dogs bark. Ghosts do not exist. If something barks, then it is not alive. A thing is either alive or dead. Jojo is not dead.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jojo is a cat or a ghost.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAnimal(x) ::: x is an animal.\nCat(x) ::: x is a cat.\nDog(x) ::: x is a dog.\nBark(x) ::: x barks.\nGhost(x) ::: x is a ghost.\nExist(x) ::: x exists.\nAlive(x) ::: x is alive.\nDead(x) ::: x is dead.\nPremises:\n∀x (Animal(x) → (Cat(x) ⊕ Dog(x))) ::: An animal is either a cat or a dog.\n∀x (Dog(x) → Bark(x)) ::: All dogs bark.\n∀x (Bark(x) → ¬Exist(x)) ::: Ghosts do not exist.\n∀x (Bark(x) → ¬Alive(x)) ::: If something barks, then it is not alive.\n∀x (Alive(x) ⊕ Dead(x)) ::: A thing is either alive or dead.\n¬Dead(jojo) ::: Jojo is not dead.\nConclusion:\nCat(jojo) ⊕ Ghost(jojo) ::: Jojo is a cat or a ghost.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly"
    ]
  },
  {
    "id": "FOLIO_train_485",
    "context": "An animal is either a cat or a dog. All dogs bark. Ghosts do not exist. If something barks, then it is not alive. A thing is either alive or dead. Jojo is not dead.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Jojo is a cat or a ghost, then Jojo either barks or is a dog.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAnimal(x) ::: x is an animal.\nCat(x) ::: x is a cat.\nDog(x) ::: x is a dog.\nBark(x) ::: x barks.\nGhost(x) ::: x is a ghost.\nExist(x) ::: x exists.\nAlive(x) ::: x is alive.\nDead(x) ::: x is dead.\nPremises:\n∀x (Animal(x) → (Cat(x) ⊕ Dog(x))) ::: An animal is either a cat or a dog.\n∀x (Dog(x) → Bark(x)) ::: All dogs bark.\n∀x (Ghost(x) → ¬Exist(x)) ::: Ghosts do not exist.\n∀x (Bark(x) → ¬Alive(x)) ::: If something barks, then it is not alive.\n∀x (Alive(x) ⊕ Dead(x)) ::: A thing is either alive or dead.\n¬Dead(jojo) ::: Jojo is not dead.\nConclusion:\n(Cat(jojo) ⊕ Ghost(jojo)) → (Bark(jojo) ⊕ Dog(jojo)) ::: If Jojo is a cat or a ghost, then Jojo either barks or is a dog.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffe"
    ]
  },
  {
    "id": "FOLIO_train_486",
    "context": "All animals that are tigers are cats. No cats are dogs. All Bengal tigers are tigers. Everything that is a husky is a dog. Fido is either a Bengal tiger or a cat.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Fido is a husky.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAnimal(x) ::: x is an animal.\nTiger(x) ::: x is a tiger.\nCat(x) ::: x is a cat.\nDog(x) ::: x is a dog.\nBengalTiger(x) ::: x is a Bengal tiger.\nHusky(x) ::: x is a husky.\nFido(x) ::: x is Fido.\nPremises:\n∀x (Tiger(x) → Cat(x)) ::: All animals that are tigers are cats.\n∀x (Cat(x) → ¬Dog(x)) ::: No cats are dogs.\n∀x (BengalTiger(x) → Tiger(x)) ::: All Bengal tigers are tigers.\n∀x (Husky(x) → Dog(x)) ::: Everything that is a husky is a dog.\nFido(fido) ∧ (BengalTiger(fido) ⊕ Cat(fido)) ::: Fido is either a Bengal tiger or a cat.\nConclusion:\nHusky(fido) ::: Fido is a husky.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.\n###\nPredicates:"
    ]
  },
  {
    "id": "FOLIO_train_487",
    "context": "All animals that are tigers are cats. No cats are dogs. All Bengal tigers are tigers. Everything that is a husky is a dog. Fido is either a Bengal tiger or a cat.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Fido is not a husky.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAnimal(x) ::: x is an animal.\nTiger(x) ::: x is a tiger.\nCat(x) ::: x is a cat.\nDog(x) ::: x is a dog.\nBengalTiger(x) ::: x is a Bengal tiger.\nHusky(x) ::: x is a husky.\nPremises:\n∀x (Tiger(x) → Cat(x)) ::: All animals that are tigers are cats.\n∀x (Cat(x) → ¬Dog(x)) ::: No cats are dogs.\n∀x (BengalTiger(x) → Tiger(x)) ::: All Bengal tigers are tigers.\n∀x (Husky(x) → Dog(x)) ::: Everything that is a husky is a dog.\nBengalTiger(fido) ∨ Cat(fido) ::: Fido is either a Bengal tiger or a cat.\nConclusion:\n¬Husky(fido) ::: Fido is not a husky.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.\n###\nPredicates:\nDependent(x) ::: x is a person dependent on caffeine.\nDrinks("
    ]
  },
  {
    "id": "FOLIO_train_488",
    "context": "All animals that are tigers are cats. No cats are dogs. All Bengal tigers are tigers. Everything that is a husky is a dog. Fido is either a Bengal tiger or a cat.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Fido is a Bengal tiger.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAnimal(x) ::: x is an animal.\nTiger(x) ::: x is a tiger.\nCat(x) ::: x is a cat.\nDog(x) ::: x is a dog.\nBengalTiger(x) ::: x is a Bengal tiger.\nHusky(x) ::: x is a husky.\nFido(x) ::: x is Fido.\nPremises:\n∀x (Tiger(x) → Cat(x)) ::: All animals that are tigers are cats.\n∀x (Cat(x) → ¬Dog(x)) ::: No cats are dogs.\n∀x (BengalTiger(x) → Tiger(x)) ::: All Bengal tigers are tigers.\n∀x (Husky(x) → Dog(x)) ::: Everything that is a husky is a dog.\nFido(fido) ∧ (BengalTiger(fido) ⊕ Cat(fido)) ::: Fido is either a Bengal tiger or a cat.\nConclusion:\nBengalTiger(fido) ::: Fido is a Bengal tiger.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.\n###"
    ]
  },
  {
    "id": "FOLIO_train_489",
    "context": "All animals that are tigers are cats. No cats are dogs. All Bengal tigers are tigers. Everything that is a husky is a dog. Fido is either a Bengal tiger or a cat.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Fido is neither a dog nor a husky.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAnimal(x) ::: x is an animal.\nTiger(x) ::: x is a tiger.\nCat(x) ::: x is a cat.\nDog(x) ::: x is a dog.\nBengalTiger(x) ::: x is a Bengal tiger.\nHusky(x) ::: x is a husky.\nFido(x) ::: x is Fido.\nPremises:\n∀x (Tiger(x) → Cat(x)) ::: All animals that are tigers are cats.\n∀x (Cat(x) → ¬Dog(x)) ::: No cats are dogs.\n∀x (BengalTiger(x) → Tiger(x)) ::: All Bengal tigers are tigers.\n∀x (Husky(x) → Dog(x)) ::: Everything that is a husky is a dog.\nFido(fido) ∧ (BengalTiger(fido) ⊕ Cat(fido)) ::: Fido is either a Bengal tiger or a cat.\nConclusion:\n¬∃x (Dog(x) ∧ Husky(x)) ::: Fido is neither a dog nor a husky.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being"
    ]
  },
  {
    "id": "FOLIO_train_490",
    "context": "If a city hold a Summer Olympics, and the city is a US city, then the Summer Olympics will be in the US. If a city is in a state which is in US, the city is a US city. If a city in a state, and a Summer Olympics is in this city, then the Summer Olympics is in this state. The 2028 Summer Olympics is scheduled to take place in Los Angeles(LA). LA is a city in California(CA). Atlanta is a US city. Atlanta is in Georgia(CA). CA is a state in the United States. Boxing, modern pentathlon, and weightlifting will be removed from The 2028 Summer Olympics. Atlanta in the United States hold the 1996 Summer Olympics.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The 2028 Summer Olympics will take place in the US.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCity(x) ::: x is a city.\nState(x) ::: x is a state.\nUS(x) ::: x is a US city.\nSummerOlympics(x) ::: x is a Summer Olympics.\nHold(x, y) ::: x holds y.\nIn(x, y) ::: x is in y.\nWillBe(x, y) ::: x will be y.\nBeRemoved(x, y) ::: x will be removed from y.\nPremises:\n∀x (Hold(x, summerOlympics) ∧ In(x, us) → WillBe(summerOlympics, us)) ::: If a city hold a Summer Olympics, and the city is a US city, then the Summer Olympics will be in the US.\n∀x (In(x, y) ∧ State(y) → In(x, us)) ::: If a city is in a state which is in US, the city is a US city.\n∀x (In(x, y) ∧ Hold(x, summerOlympics) → In(summerOlympics, y)) ::: If a city in a state, and a Summer Olympics is in this city, then the Summer Olympics is in this state.\nWillBe(summerOlympics2028, la) ::: The 2028 Summer Olympics is scheduled to take place in Los Angeles(LA).\nCity(la) ∧ In(la, ca) ::: LA is a city in California(CA).\nCity(atlanta) ∧ In(atlanta, georgia) ::: Atlanta is a US city. Atlanta is in Georgia(CA).\nState(ca) ∧ In(ca, us) ::: CA is a state in the United States.\nBeRemoved(boxing, summerOlympics2028) ∧ BeRemoved(modernPentathlon, summerOlympics2028) ∧ BeRemoved(weightlifting, summerOlympics2028) ::: Boxing, modern pentathlon, and weightlifting will be removed from The 2028 Summer Olympics.\nHold(atlanta, summerOlympics1996) ::: Atlanta in the United States hold the 1996 Summer Olympics.\nConclusion:\nWillBe(summerOlympics2028, us) ::: The 2028 Summer Olympics will take place in the US.\n------"
    ]
  },
  {
    "id": "FOLIO_train_491",
    "context": "If a city hold a Summer Olympics, and the city is a US city, then the Summer Olympics will be in the US. If a city is in a state which is in US, the city is a US city. If a city in a state, and a Summer Olympics is in this city, then the Summer Olympics is in this state. The 2028 Summer Olympics is scheduled to take place in Los Angeles(LA). LA is a city in California(CA). Atlanta is a US city. Atlanta is in Georgia(CA). CA is a state in the United States. Boxing, modern pentathlon, and weightlifting will be removed from The 2028 Summer Olympics. Atlanta in the United States hold the 1996 Summer Olympics.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The 1996 Summer Olympics is not in Georgia.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCity(x) ::: x is a city.\nState(x) ::: x is a state.\nUS(x) ::: x is a US city.\nSummerOlympics(x) ::: x is a Summer Olympics.\nIn(x, y) ::: x is in y.\nHold(x, y) ::: x holds y.\nWillBe(x, y) ::: x will be y.\nBeRemoved(x, y) ::: x will be removed from y.\nPremises:\n∀x (Hold(x, summerOlympics) ∧ In(x, us) → WillBe(summerOlympics, us)) ::: If a city hold a Summer Olympics, and the city is a US city, then the Summer Olympics will be in the US.\n∀x (In(x, y) ∧ State(y) → In(x, us)) ::: If a city is in a state which is in US, the city is a US city.\n∀x (In(x, y) ∧ In(summerOlympics, x) → In(summerOlympics, y)) ::: If a city in a state, and a Summer Olympics is in this city, then the Summer Olympics is in this state.\nWillBe(summerOlympics2028, la) ::: The 2028 Summer Olympics is scheduled to take place in Los Angeles(LA).\nCity(la) ∧ In(la, ca) ::: LA is a city in California(CA).\nCity(atlanta) ∧ In(atlanta, georgia) ::: Atlanta is a US city. Atlanta is in Georgia(CA).\nState(ca) ∧ In(ca, us) ::: CA is a state in the United States.\nBeRemoved(boxing, summerOlympics2028) ∧ BeRemoved(modernPentathlon, summerOlympics2028) ∧ BeRemoved(weightlifting, summerOlympics2028) ::: Boxing, modern pentathlon, and weightlifting will be removed from The 2028 Summer Olympics.\nHold(atlanta, summerOlympics1996) ::: Atlanta in the United States hold the 1996 Summer Olympics.\nConclusion:\n¬In(summerOlympics1996, georgia) ::: The 1996 Summer Olympics is not in Georgia."
    ]
  },
  {
    "id": "FOLIO_train_492",
    "context": "If a city hold a Summer Olympics, and the city is a US city, then the Summer Olympics will be in the US. If a city is in a state which is in US, the city is a US city. If a city in a state, and a Summer Olympics is in this city, then the Summer Olympics is in this state. The 2028 Summer Olympics is scheduled to take place in Los Angeles(LA). LA is a city in California(CA). Atlanta is a US city. Atlanta is in Georgia(CA). CA is a state in the United States. Boxing, modern pentathlon, and weightlifting will be removed from The 2028 Summer Olympics. Atlanta in the United States hold the 1996 Summer Olympics.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Skateboarding will appear at The 2028 Summer Olympics.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCity(x) ::: x is a city.\nState(x) ::: x is a state.\nUS(x) ::: x is a US city.\nSummerOlympics(x) ::: x is a Summer Olympics.\nIn(x, y) ::: x is in y.\nHold(x, y) ::: x holds y.\nWillBe(x, y) ::: x will be y.\nBe(x, y) ::: x is y.\nRemove(x, y) ::: x will be removed from y.\nAppear(x, y) ::: x will appear at y.\nPremises:\n∀x (Hold(x, summerOlympics) ∧ In(x, us) → WillBe(summerOlympics, us)) ::: If a city hold a Summer Olympics, and the city is a US city, then the Summer Olympics will be in the US.\n∀x (In(x, y) ∧ State(y) ∧ In(y, us) → In(x, us)) ::: If a city is in a state which is in US, the city is a US city.\n∀x (In(x, y) ∧ In(y, z) ∧ Hold(x, summerOlympics) → In(summerOlympics, z)) ::: If a city in a state, and a Summer Olympics is in this city, then the Summer Olympics is in this state.\nWillBe(summerOlympics2028, la) ::: The 2028 Summer Olympics is scheduled to take place in Los Angeles(LA).\nCity(la) ∧ In(la, ca) ::: LA is a city in California(CA).\nCity(atlanta) ∧ In(atlanta, georgia) ::: Atlanta is a US city. Atlanta is in Georgia(CA).\nState(ca) ∧ In(ca, us) ::: CA is a state in the United States.\nRemove(boxing, summerOlympics2028) ∧ Remove(modernPentathlon, summerOlympics2028) ∧ Remove(weightlifting, summerOlympics2028) ::: Boxing, modern pentathlon, and weightlifting will be removed from The 2028 Summer Olympics.\nHold(atlanta, summerOlympics1996) ::: Atlanta in the United States hold the 1996 Summer"
    ]
  },
  {
    "id": "FOLIO_train_493",
    "context": "The taiga vole is a large vole found in northwestern North America. Cats like playing with all voles. The taiga vole lives in the boreal taiga zone. The boreal taiga zone in North America is a cold place to live in. Taiga vole is typically much larger than most other North American voles, especially those from the genus Microtus.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Cats like playing with taiga vole.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCat(x) ::: x is a cat.\nPlay(x, y) ::: x likes playing with y.\nVole(x) ::: x is a vole.\nTaigaVole(x) ::: x is a taiga vole.\nLive(x, y) ::: x lives in y.\nBorealTaigaZone(x) ::: x is the boreal taiga zone.\nNorthAmerica(x) ::: x is in North America.\nCold(x) ::: x is a cold place to live in.\nSize(x, y) ::: x is much larger than y.\nPremises:\nTaigaVole(taigaVole) ::: The taiga vole is a large vole found in northwestern North America.\n∀x (Cat(x) → Play(x, Vole(x))) ::: Cats like playing with all voles.\nLive(taigaVole, borealTaigaZone) ::: The taiga vole lives in the boreal taiga zone.\nBorealTaigaZone(borealTaigaZone) ∧ NorthAmerica(borealTaigaZone) ∧ Cold(borealTaigaZone) ::: The boreal taiga zone in North America is a cold place to live in.\nTaigaVole(taigaVole) ∧ Size(taigaVole, mostOtherNorthAmericanVoles) ::: Taiga vole is typically much larger than most other North American voles, especially those from the genus Microtus.\nConclusion:\nPlay(Cat(x), taigaVole) ::: Cats like playing with taiga vole.\n------\nProblem:\nThe taiga vole is a large vole found in northwestern North America. Cats like playing with all voles. The taiga vole lives in the boreal taiga zone. The boreal taiga zone in North America is a cold place to live in. Taiga vole is typically much larger than most other North American voles, especially those from the genus Microtus.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Cats like playing with taiga vole.\n###\nPredicates:\nCat(x) ::: x is a cat.\nPlay(x, y) ::: x likes playing with y.\nVole(x) ::: x is a vole.\nTaigaVole(x) ::: x is a taiga vole.\nLive(x,"
    ]
  },
  {
    "id": "FOLIO_train_494",
    "context": "The taiga vole is a large vole found in northwestern North America. Cats like playing with all voles. The taiga vole lives in the boreal taiga zone. The boreal taiga zone in North America is a cold place to live in. Taiga vole is typically much larger than most other North American voles, especially those from the genus Microtus.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Taiga vole's living place is not cold.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTaigaVole(x) ::: x is a taiga vole.\nVole(x) ::: x is a vole.\nCat(x) ::: x is a cat.\nPlay(x, y) ::: x likes playing with y.\nLive(x, y) ::: x lives in y.\nBorealTaigaZone(x) ::: x is the boreal taiga zone.\nNorthAmerica(x) ::: x is in North America.\nCold(x) ::: x is a cold place to live in.\nSize(x, y) ::: x is typically much larger than y.\nPremises:\n∀x (Cat(x) → Play(x, Vole(x))) ::: Cats like playing with all voles.\nTaigaVole(taigaVole) ∧ Live(taigaVole, BorealTaigaZone(x)) ::: The taiga vole lives in the boreal taiga zone.\nBorealTaigaZone(x) ∧ NorthAmerica(x) ∧ Cold(x) ::: The boreal taiga zone in North America is a cold place to live in.\nTaigaVole(taigaVole) ∧ Size(taigaVole, Microtus(x)) ::: Taiga vole is typically much larger than most other North American voles, especially those from the genus Microtus.\nConclusion:\n¬Cold(BorealTaigaZone(x)) ::: Taiga vole's living place is not cold.\n------\nProblem:\nThe taiga vole is a large vole found in northwestern North America. Cats like playing with all voles. The taiga vole lives in the boreal taiga zone. The boreal taiga zone in North America is a cold place to live in. Taiga vole is typically much larger than most other North American voles, especially those from the genus Microtus.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Taiga vole is a vole.\nBased on the above information, is the following statement true, false, or uncertain? Taiga vole is a cat.\nBased on the above information, is the following statement true, false, or uncertain? Taiga vole is a cold place to live in.\nBased on the above information, is the following statement true, false, or uncertain? Taiga vole is a boreal taiga zone.\nBased on the above information, is the following statement true,"
    ]
  },
  {
    "id": "FOLIO_train_495",
    "context": "Either in women or in men. No men have breast cancer. Either breast cancer or non-breast cancer. No type of cancer is without a tumor. All non-breast cancers are a type of cancer. If adenocarcinoma is a type of cancer or without a tumor, then adenocarcinoma is in women or without a tumor.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Adenocarcinoma is a breast cancer.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBreastCancer(x) ::: x is a breast cancer.\nNonBreastCancer(x) ::: x is a non-breast cancer.\nCancer(x) ::: x is a type of cancer.\nTumor(x) ::: x is without a tumor.\nAdenocarcinoma(x) ::: x is adenocarcinoma.\nWomen(x) ::: x is in women.\nMen(x) ::: x is in men.\nPremises:\n(Women(x) ⊕ Men(x)) ::: Either in women or in men.\n∀x (Men(x) → ¬BreastCancer(x)) ::: No men have breast cancer.\n(BreastCancer(x) ⊕ NonBreastCancer(x)) ::: Either breast cancer or non-breast cancer.\n∀x (Cancer(x) → ¬Tumor(x)) ::: No type of cancer is without a tumor.\n∀x (NonBreastCancer(x) → Cancer(x)) ::: All non-breast cancers are a type of cancer.\n(Adenocarcinoma(x) → Cancer(x)) ⊕ (Adenocarcinoma(x) → Tumor(x)) ::: If adenocarcinoma is a type of cancer or without a tumor, then adenocarcinoma is in women or without a tumor.\nConclusion:\nBreastCancer(adenocarcinoma) ::: Adenocarcinoma is a breast cancer.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina"
    ]
  },
  {
    "id": "FOLIO_train_496",
    "context": "Either in women or in men. No men have breast cancer. Either breast cancer or non-breast cancer. No type of cancer is without a tumor. All non-breast cancers are a type of cancer. If adenocarcinoma is a type of cancer or without a tumor, then adenocarcinoma is in women or without a tumor.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Adenocarcinoma is in women.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBreastCancer(x) ::: x is breast cancer.\nNonBreastCancer(x) ::: x is non-breast cancer.\nCancer(x) ::: x is a type of cancer.\nTumor(x) ::: x is without a tumor.\nAdenocarcinoma(x) ::: x is adenocarcinoma.\nWomen(x) ::: x is in women.\nPremises:\n∀x (Women(x) ∨ Men(x)) ::: Either in women or in men.\n∀x (Men(x) → ¬BreastCancer(x)) ::: No men have breast cancer.\n∀x (BreastCancer(x) ⊕ NonBreastCancer(x)) ::: Either breast cancer or non-breast cancer.\n∀x (Cancer(x) → Tumor(x)) ::: No type of cancer is without a tumor.\n∀x (NonBreastCancer(x) → Cancer(x)) ::: All non-breast cancers are a type of cancer.\n(Adenocarcinoma(x) → Cancer(x)) ∨ Tumor(x) → (Women(x) ∨ Tumor(x)) ::: If adenocarcinoma is a type of cancer or without a tumor, then adenocarcinoma is in women or without a tumor.\nConclusion:\nWomen(adenocarcinoma) ::: Adenocarcinoma is in women.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes"
    ]
  },
  {
    "id": "FOLIO_train_497",
    "context": "Either in women or in men. No men have breast cancer. Either breast cancer or non-breast cancer. No type of cancer is without a tumor. All non-breast cancers are a type of cancer. If adenocarcinoma is a type of cancer or without a tumor, then adenocarcinoma is in women or without a tumor.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If adenocarcinoma is in women or without a tumor, then adenocarcinoma is without a tumor and a non-breast cancer.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nWomen(x) ::: x is in women.\nMen(x) ::: x is in men.\nBreastCancer(x) ::: x is breast cancer.\nNonBreastCancer(x) ::: x is non-breast cancer.\nTumor(x) ::: x is a tumor.\nTypeOfCancer(x) ::: x is a type of cancer.\nAdenocarcinoma(x) ::: x is adenocarcinoma.\nPremises:\nWomen(x) ⊕ Men(x) ::: Either in women or in men.\n¬Men(x) → ¬BreastCancer(x) ::: No men have breast cancer.\nBreastCancer(x) ⊕ NonBreastCancer(x) ::: Either breast cancer or non-breast cancer.\n∀x (TypeOfCancer(x) → Tumor(x)) ::: No type of cancer is without a tumor.\n∀x (NonBreastCancer(x) → TypeOfCancer(x)) ::: All non-breast cancers are a type of cancer.\n(Adenocarcinoma(x) → TypeOfCancer(x)) ∨ ¬Tumor(x) → (Women(x) ⊕ ¬Tumor(x)) ::: If adenocarcinoma is a type of cancer or without a tumor, then adenocarcinoma is in women or without a tumor.\nConclusion:\n(Adenocarcinoma(x) → ¬Tumor(x) ∧ NonBreastCancer(x)) ::: If adenocarcinoma is in women or without a tumor, then adenocarcinoma is without a tumor and a non-breast cancer.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true,"
    ]
  },
  {
    "id": "FOLIO_train_498",
    "context": "Some monitors equipped in the lab are produced by the company named AOC. All monitors equipped in the lab are cheaper than their original prices. If the monitor is cheaper than its original prices, then its resolution is 1080p. If a monitor is with a resolution of 1080p, then it does not support the type-c port. LG34 is equipped in the lab.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? LG34 machine is produced by AOC.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEquip(x, y) ::: x is equipped in y.\nProduce(x, y) ::: x produces y.\nCheaper(x, y) ::: x is cheaper than y.\nOriginalPrice(x, y) ::: x is the original price of y.\nResolution(x, y) ::: x is the resolution of y.\nTypeCPort(x) ::: x is a type-c port.\nSupport(x, y) ::: x supports y.\nPremises:\n∃x (Equip(x, lab) ∧ Produce(aoc, x)) ::: Some monitors equipped in the lab are produced by the company named AOC.\n∀x (Equip(x, lab) → Cheaper(x, OriginalPrice(x, y))) ::: All monitors equipped in the lab are cheaper than their original prices.\n∀x (Cheaper(x, OriginalPrice(x, y)) → Resolution(x, 1080p)) ::: If the monitor is cheaper than its original prices, then its resolution is 1080p.\n∀x (Resolution(x, 1080p) → ¬Support(x, typeCPort)) ::: If a monitor is with a resolution of 1080p, then it does not support the type-c port.\nEquip(lg34, lab) ::: LG34 is equipped in the lab.\nConclusion:\nProduce(aoc, lg34) ::: LG34 machine is produced by AOC.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine and"
    ]
  },
  {
    "id": "FOLIO_train_499",
    "context": "Some monitors equipped in the lab are produced by the company named AOC. All monitors equipped in the lab are cheaper than their original prices. If the monitor is cheaper than its original prices, then its resolution is 1080p. If a monitor is with a resolution of 1080p, then it does not support the type-c port. LG34 is equipped in the lab.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? LG34 machine does not support the type-c port.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEquip(x, y) ::: x is equipped in y.\nProduce(x, y) ::: x produces y.\nCheaper(x, y) ::: x is cheaper than y.\nOriginalPrice(x, y) ::: x is the original price of y.\nResolution(x, y) ::: x is the resolution of y.\nTypeCPort(x) ::: x is a type-c port.\nLG34(x) ::: x is LG34.\nPremises:\n∃x (Equip(x, lab) ∧ Produce(aoc, x)) ::: Some monitors equipped in the lab are produced by the company named AOC.\n∀x (Equip(x, lab) → Cheaper(x, OriginalPrice(x, y))) ::: All monitors equipped in the lab are cheaper than their original prices.\n∀x (Cheaper(x, OriginalPrice(x, y)) → Resolution(x, 1080p)) ::: If the monitor is cheaper than its original prices, then its resolution is 1080p.\n∀x (Resolution(x, 1080p) → ¬TypeCPort(x)) ::: If a monitor is with a resolution of 1080p, then it does not support the type-c port.\nLG34(lg34) ∧ Equip(lg34, lab) ::: LG34 is equipped in the lab.\nConclusion:\n¬TypeCPort(lg34) ::: LG34 machine does not support the type-c port.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina"
    ]
  },
  {
    "id": "FOLIO_train_500",
    "context": "Some monitors equipped in the lab are produced by the company named AOC. All monitors equipped in the lab are cheaper than their original prices. If the monitor is cheaper than its original prices, then its resolution is 1080p. If a monitor is with a resolution of 1080p, then it does not support the type-c port. LG34 is equipped in the lab.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? LG34 is not with a resolution of 1080p.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEquipped(x) ::: x is equipped in the lab.\nProduced(x, y) ::: x is produced by the company named y.\nCheaper(x, y) ::: x is cheaper than y.\nOriginalPrice(x) ::: x is the original price of x.\nResolution(x, y) ::: x is with a resolution of y.\nSupport(x, y) ::: x supports y.\nTypeC(x) ::: x is a type-c port.\nPremises:\n∃x (Equipped(x) ∧ Produced(x, aoc)) ::: Some monitors equipped in the lab are produced by the company named AOC.\n∀x (Equipped(x) → Cheaper(x, OriginalPrice(x))) ::: All monitors equipped in the lab are cheaper than their original prices.\n∀x (Cheaper(x, OriginalPrice(x)) → Resolution(x, 1080p)) ::: If the monitor is cheaper than its original prices, then its resolution is 1080p.\n∀x (Resolution(x, 1080p) → ¬Support(x, typeC)) ::: If a monitor is with a resolution of 1080p, then it does not support the type-c port.\nEquipped(lg34) ::: LG34 is equipped in the lab.\nConclusion:\n¬Resolution(lg34, 1080p) ::: LG34 is not with a resolution of 1080p.\n------"
    ]
  },
  {
    "id": "FOLIO_train_501",
    "context": "All fruits sold in Boston are shipped from Columbia. Some fruits sold in New Haven are shipped from Mexico. No fruits shipped from Columbia are fruits sold in New York. Avocadoe are a kind of fruit sold in New York or New York. Avocadoe are either shipped from Columbia and sold in New Haven, or neither shipped from Columbia nor sold in New Haven.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Avocados are a kind of fruit sold in New York.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFruit(x) ::: x is a fruit.\nSold(x, y) ::: x is sold in y.\nShipped(x, y) ::: x is shipped from y.\nColumbia(x) ::: x is Columbia.\nMexico(x) ::: x is Mexico.\nNewYork(x) ::: x is New York.\nNewHaven(x) ::: x is New Haven.\nBoston(x) ::: x is Boston.\nAvocadoe(x) ::: x is an avocado.\nPremises:\n∀x (Sold(x, boston) → Shipped(x, columbia)) ::: All fruits sold in Boston are shipped from Columbia.\n∃x (Sold(x, newHaven) ∧ Shipped(x, mexico)) ::: Some fruits sold in New Haven are shipped from Mexico.\n∀x (Shipped(x, columbia) → ¬Sold(x, newYork)) ::: No fruits shipped from Columbia are fruits sold in New York.\nAvocadoe(x) → (Sold(x, newYork) ∨ Sold(x, newYork)) ::: Avocadoe are a kind of fruit sold in New York or New York.\nAvocadoe(x) → (Shipped(x, columbia) ∧ Sold(x, newHaven)) ⊕ ¬(Shipped(x, columbia) ∨ Sold(x, newHaven)) ::: Avocadoe are"
    ]
  },
  {
    "id": "FOLIO_train_502",
    "context": "All fruits sold in Boston are shipped from Columbia. Some fruits sold in New Haven are shipped from Mexico. No fruits shipped from Columbia are fruits sold in New York. Avocadoe are a kind of fruit sold in New York or New York. Avocadoe are either shipped from Columbia and sold in New Haven, or neither shipped from Columbia nor sold in New Haven.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Avocados are either sold in New York or sold in New Haven.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFruit(x) ::: x is a fruit.\nSold(x, y) ::: x is sold in y.\nShipped(x, y) ::: x is shipped from y.\nColumbia(x) ::: x is Columbia.\nMexico(x) ::: x is Mexico.\nNewYork(x) ::: x is New York.\nNewHaven(x) ::: x is New Haven.\nBoston(x) ::: x is Boston.\nAvocadoe(x) ::: x is an avocado.\nPremises:\n∀x (Sold(x, boston) → Shipped(x, columbia)) ::: All fruits sold in Boston are shipped from Columbia.\n∃x (Sold(x, newHaven) ∧ Shipped(x, mexico)) ::: Some fruits sold in New Haven are shipped from Mexico.\n∀x (Shipped(x, columbia) → ¬Sold(x, newYork)) ::: No fruits shipped from Columbia are fruits sold in New York.\nAvocadoe(x) → (Sold(x, newYork) ⊕ Sold(x, newYork)) ::: Avocadoe are a kind of fruit sold in New York or New York.\nAvocadoe(x) → (Shipped(x, columbia) ∧ Sold(x, newHaven)) ⊕ ¬(Shipped(x, columbia) ∨ Sold(x, newHaven)) ::: Avocadoe are"
    ]
  },
  {
    "id": "FOLIO_train_503",
    "context": "All fruits sold in Boston are shipped from Columbia. Some fruits sold in New Haven are shipped from Mexico. No fruits shipped from Columbia are fruits sold in New York. Avocadoe are a kind of fruit sold in New York or New York. Avocadoe are either shipped from Columbia and sold in New Haven, or neither shipped from Columbia nor sold in New Haven.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Avocados are either sold in New Haven or sold in Boston",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFruit(x) ::: x is a fruit.\nSold(x, y) ::: x is sold in y.\nShipped(x, y) ::: x is shipped from y.\nAvocado(x) ::: x is an avocado.\nBoston(x) ::: x is Boston.\nNewHaven(x) ::: x is New Haven.\nNewYork(x) ::: x is New York.\nColumbia(x) ::: x is Columbia.\nMexico(x) ::: x is Mexico.\nPremises:\n∀x (Sold(x, boston) → Shipped(x, columbia)) ::: All fruits sold in Boston are shipped from Columbia.\n∃x (Sold(x, newHaven) ∧ Shipped(x, mexico)) ::: Some fruits sold in New Haven are shipped from Mexico.\n∀x (Shipped(x, columbia) → ¬Sold(x, newYork)) ::: No fruits shipped from Columbia are fruits sold in New York.\nAvocado(x) → (Sold(x, newYork) ⊕ Sold(x, newYork)) ::: Avocadoe are a kind of fruit sold in New York or New York.\nAvocado(x) → (Shipped(x, columbia) ∧ Sold(x, newHaven)) ⊕ ¬(Shipped(x, columbia) ∨ Sold(x, newHaven)) ::: Avocadoe are either shipped from"
    ]
  },
  {
    "id": "FOLIO_train_504",
    "context": "All fruits sold in Boston are shipped from Columbia. Some fruits sold in New Haven are shipped from Mexico. No fruits shipped from Columbia are fruits sold in New York. Avocadoe are a kind of fruit sold in New York or New York. Avocadoe are either shipped from Columbia and sold in New Haven, or neither shipped from Columbia nor sold in New Haven.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If avocados are not sold in New York and not shipped from Columbia, then they are neither sold in New York nor New Haven.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFruit(x) ::: x is a fruit.\nSold(x, y) ::: x is sold in y.\nShipped(x, y) ::: x is shipped from y.\nNewYork(x) ::: x is New York.\nNewHaven(x) ::: x is New Haven.\nColumbia(x) ::: x is Columbia.\nMexico(x) ::: x is Mexico.\nAvocadoe(x) ::: x is an avocado.\nPremises:\n∀x (Sold(x, boston) → Shipped(x, columbia)) ::: All fruits sold in Boston are shipped from Columbia.\n∃x (Sold(x, newHaven) ∧ Shipped(x, mexico)) ::: Some fruits sold in New Haven are shipped from Mexico.\n∀x (Shipped(x, columbia) → ¬Sold(x, newYork)) ::: No fruits shipped from Columbia are fruits sold in New York.\nAvocadoe(x) → (Sold(x, newYork) ∨ Sold(x, newYork)) ::: Avocadoe are a kind of fruit sold in New York or New York.\nAvocadoe(x) → (Shipped(x, columbia) ∧ Sold(x, newHaven)) ⊕ ¬(Shipped(x, columbia) ∨ Sold(x, newHaven)) ::: Avocadoe are either shipped from Columbia and sold in New Haven, or neither"
    ]
  },
  {
    "id": "FOLIO_train_505",
    "context": "Some monitors equipped in the library are produced by AOC. All monitors equipped in the library are cheaper than 800 dollars. All monitors cheaper than 800 dollars are with a resolution of 1080p. If a monitor has a resolution of 1080p, then it does not support the type-c port. A-2017 supports the type-c port.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A-2017 is produced by AOC.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProducedBy(x, y) ::: x is produced by y.\nEquippedIn(x, y) ::: x is equipped in y.\nCheaperThan(x, y) ::: x is cheaper than y.\nResolution(x, y) ::: x has a resolution of y.\nSupport(x, y) ::: x supports y.\nTypeC(x) ::: x is a type-c port.\nPremises:\n∃x (ProducedBy(aoc, x) ∧ EquippedIn(x, library)) ::: Some monitors equipped in the library are produced by AOC.\n∀x (EquippedIn(x, library) → CheaperThan(x, dollar800)) ::: All monitors equipped in the library are cheaper than 800 dollars.\n∀x (CheaperThan(x, dollar800) → Resolution(x, resolution1080p)) ::: All monitors cheaper than 800 dollars are with a resolution of 1080p.\n∀x (Resolution(x, resolution1080p) → ¬Support(x, typeC)) ::: If a monitor has a resolution of 1080p, then it does not support the type-c port.\nSupport(a-2017, typeC) ::: A-2017 supports the type-c port.\nConclusion:\nProducedBy(aoc, a-2017) ::: A-2017 is produced by AOC.\n------\nProblem:\nAll"
    ]
  },
  {
    "id": "FOLIO_train_506",
    "context": "Some monitors equipped in the library are produced by AOC. All monitors equipped in the library are cheaper than 800 dollars. All monitors cheaper than 800 dollars are with a resolution of 1080p. If a monitor has a resolution of 1080p, then it does not support the type-c port. A-2017 supports the type-c port.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A-2017 is produced by AOC and equipped in the library.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProducedBy(x, y) ::: x is produced by y.\nEquippedIn(x, y) ::: x is equipped in y.\nCheaperThan(x, y) ::: x is cheaper than y.\nResolution(x, y) ::: x has a resolution of y.\nSupport(x, y) ::: x supports y.\nTypeC(x) ::: x is a type-c port.\nPremises:\n∃x (ProducedBy(aoc, x) ∧ EquippedIn(x, library)) ::: Some monitors equipped in the library are produced by AOC.\n∀x (EquippedIn(x, library) → CheaperThan(x, dollar800)) ::: All monitors equipped in the library are cheaper than 800 dollars.\n∀x (CheaperThan(x, dollar800) → Resolution(x, resolution1080p)) ::: All monitors cheaper than 800 dollars are with a resolution of 1080p.\n∀x (Resolution(x, resolution1080p) → ¬Support(x, typeC)) ::: If a monitor has a resolution of 1080p, then it does not support the type-c port.\nSupport(a-2017, typeC) ::: A-2017 supports the type-c port.\nConclusion:\nProducedBy(aoc, a-2017) ∧ EquippedIn(a-2017, library) ::: A-2"
    ]
  },
  {
    "id": "FOLIO_train_507",
    "context": "Some monitors equipped in the library are produced by AOC. All monitors equipped in the library are cheaper than 800 dollars. All monitors cheaper than 800 dollars are with a resolution of 1080p. If a monitor has a resolution of 1080p, then it does not support the type-c port. A-2017 supports the type-c port.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If A-2017 is not with a resolution of 1080p or produced by AOC, then it is not equipped in the library.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEquipped(x) ::: x is equipped in the library.\nProduced(x, y) ::: x is produced by y.\nCheaper(x, y) ::: x is cheaper than y.\nResolution(x, y) ::: x has a resolution of y.\nSupport(x, y) ::: x supports y.\nTypeC(x) ::: x is a type-c port.\nPremises:\n∃x (Equipped(x) ∧ Produced(x, aoc)) ::: Some monitors equipped in the library are produced by AOC.\n∀x (Equipped(x) → Cheaper(x, dollar800)) ::: All monitors equipped in the library are cheaper than 800 dollars.\n∀x (Cheaper(x, dollar800) → Resolution(x, 1080p)) ::: All monitors cheaper than 800 dollars are with a resolution of 1080p.\n∀x (Resolution(x, 1080p) → ¬Support(x, typeC)) ::: If a monitor has a resolution of 1080p, then it does not support the type-c port.\nSupport(a2017, typeC) ::: A-2017 supports the type-c port.\nConclusion:\n(¬Resolution(a2017, 1080p) ∨ ¬Produced(a2017, aoc)) → ¬Equipped(a2017) :::"
    ]
  },
  {
    "id": "FOLIO_train_508",
    "context": "Sūduva Marijampolė holds the Lithuanian Supercup. Sūduva Marijampolė is a soccer team.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Some soccer team holds the Lithuanian Supercup.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSoccerTeam(x) ::: x is a soccer team.\nHold(x, y) ::: x holds y.\nSupercup(x) ::: x is the Lithuanian Supercup.\nPremises:\nSoccerTeam(suduvaMarijampole) ∧ Hold(suduvaMarijampole, supercup) ::: Sūduva Marijampolė holds the Lithuanian Supercup.\nConclusion:\n∃x (SoccerTeam(x) ∧ Hold(x, supercup)) ::: Some soccer team holds the Lithuanian Supercup.\n------\nProblem:\nThe 2018 FIFA World Cup was the 21st FIFA World Cup, a quadrennial international football tournament contested by the men's national teams of the member associations of FIFA. The 2018 FIFA World Cup was the first World Cup to be held in Eastern Europe, and the 11th time that it had been held in Europe. At an estimated cost of over $14.2 billion, it was the most expensive World Cup. It was also the first World Cup to use the video assistant referee (VAR) system. The final took place on 15 July at the Luzhniki Stadium in Moscow, between France and Croatia. France won the match 4–2 to claim their second World Cup title, marking the fourth consecutive title won by a European team.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The 2018 FIFA World Cup was the first World Cup to be held"
    ]
  },
  {
    "id": "FOLIO_train_509",
    "context": "Ainderby Quernhow is a village and civil parish in the Hambleton District. Hambleton District is in North Yorkshire. North Yorkshire is in England.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There is a village in England.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nVillage(x) ::: x is a village.\nCivilParish(x) ::: x is a civil parish.\nHambletonDistrict(x) ::: x is in Hambleton District.\nNorthYorkshire(x) ::: x is in North Yorkshire.\nEngland(x) ::: x is in England.\nPremises:\nVillage(ainderbyQuernhow) ∧ CivilParish(ainderbyQuernhow) ∧ HambletonDistrict(ainderbyQuernhow) ∧ NorthYorkshire(ainderbyQuernhow) ∧ England(ainderbyQuernhow) ::: Ainderby Quernhow is a village and civil parish in the Hambleton District. Hambleton District is in North Yorkshire. North Yorkshire is in England.\nConclusion:\n∃x (Village(x) ∧ England(x)) ::: There is a village in England.\n------\nProblem:\nThe 2010 FIFA World Cup was the 19th FIFA World Cup, the world championship for men's national association football teams. It took place in South Africa from 11 June to 11 July 2010. The bidding process for hosting the tournament finals was open only to African nations. In 2004, the international football federation, FIFA, selected South Africa over Egypt and Morocco to become the first African nation to host the finals.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The 2010 FIFA"
    ]
  },
  {
    "id": "FOLIO_train_510",
    "context": "Ainderby Quernhow is a village and civil parish in the Hambleton District. Hambleton District is in North Yorkshire. North Yorkshire is in England.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There is no civil parish in England.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nVillage(x) ::: x is a village.\nCivilParish(x) ::: x is a civil parish.\nHambletonDistrict(x) ::: x is in Hambleton District.\nNorthYorkshire(x) ::: x is in North Yorkshire.\nEngland(x) ::: x is in England.\nPremises:\nVillage(ainderbyQuernhow) ∧ CivilParish(ainderbyQuernhow) ∧ HambletonDistrict(ainderbyQuernhow) ∧ NorthYorkshire(ainderbyQuernhow) ∧ England(ainderbyQuernhow) ::: Ainderby Quernhow is a village and civil parish in the Hambleton District. Hambleton District is in North Yorkshire. North Yorkshire is in England.\nConclusion:\n¬∃x (CivilParish(x) ∧ England(x)) ::: There is no civil parish in England.\n------"
    ]
  },
  {
    "id": "FOLIO_train_511",
    "context": "Douglas Adams is an author who created the book collection called The Salmon of Doubt. The Salmon of Doubt is about life experiences and technology. All authors are writers. Writers create innovative ideas. Some books that contain innovative ideas are about technology.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Douglas Adams is a writer.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAuthor(x) ::: x is an author.\nBook(x) ::: x is a book.\nCollection(x) ::: x is a book collection.\nContains(x, y) ::: x contains y.\nAbout(x, y) ::: x is about y.\nCreate(x, y) ::: x creates y.\nInnovative(x) ::: x is innovative.\nPremises:\nAuthor(douglasAdams) ∧ Collection(theSalmonOfDoubt) ∧ Contains(theSalmonOfDoubt, theSalmonOfDoubt) ∧ Contains(theSalmonOfDoubt, lifeExperiences) ∧ Contains(theSalmonOfDoubt, technology) ::: Douglas Adams is an author who created the book collection called The Salmon of Doubt.\nBook(theSalmonOfDoubt) ∧ About(theSalmonOfDoubt, lifeExperiences) ∧ About(theSalmonOfD"
    ]
  },
  {
    "id": "FOLIO_train_512",
    "context": "Douglas Adams is an author who created the book collection called The Salmon of Doubt. The Salmon of Doubt is about life experiences and technology. All authors are writers. Writers create innovative ideas. Some books that contain innovative ideas are about technology.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Douglas Adams created innovative ideas.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAuthor(x) ::: x is an author.\nBook(x) ::: x is a book.\nCollection(x) ::: x is a book collection.\nCreate(x, y) ::: x creates y.\nAbout(x, y) ::: x is about y.\nTechnology(x) ::: x is about technology.\nInnovative(x) ::: x is innovative.\nPremises:\nAuthor(douglasAdams) ∧ Collection(theSalmonOfDoubt) ∧ Create(douglasAdams, theSalmonOfDoubt) ::: Douglas Adams is an author who created the book collection called The Salmon of Doubt.\nBook(theSalmonOfDoubt) ∧ About(theSalmonOfDoubt, lifeExperiences) ∧ About(theSalmonOfDoubt, technology) ::: The Salmon of Doubt is about life experiences and technology.\n∀x (Author(x) → Writer(x)) ::"
    ]
  },
  {
    "id": "FOLIO_train_513",
    "context": "Douglas Adams is an author who created the book collection called The Salmon of Doubt. The Salmon of Doubt is about life experiences and technology. All authors are writers. Writers create innovative ideas. Some books that contain innovative ideas are about technology.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Salmon of Doubt has no innovative Ideas.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAuthor(x) ::: x is an author.\nBook(x) ::: x is a book.\nCreate(x, y) ::: x creates y.\nCollection(x) ::: x is a collection.\nAbout(x, y) ::: x is about y.\nInnovative(x) ::: x is innovative.\nTechnology(x) ::: x is about technology.\nPremises:\nAuthor(douglasAdams) ∧ Book(theSalmonOfDoubt) ∧ Collection(theSalmonOfDoubt) ∧ Create(douglasAdams, theSalmonOfDoubt) ::: Douglas Adams is an author who created the book collection called The Salmon of Doubt.\nBook(theSalmonOfDoubt) ∧ About(theSalmonOfDoubt, lifeExperiences) ∧ About(theSalmonOfDoubt, technology) ::: The Salmon of Doubt is about life experiences and technology.\n∀"
    ]
  },
  {
    "id": "FOLIO_train_514",
    "context": "No disposable products can help slow down global warming. All eco-friendly brands can help slow down global warming. All sustainable fashion brands are eco-friendly brands. All fast fashion products are disposable products. If Reformation is not helping slow down global warming, then Reformation is an eco-friendly brand or a sustainable fashion brand.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Reformation is an eco-friendly brand.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDisposable(x) ::: x is a disposable product.\nHelp(x, y) ::: x can help y.\nSlowDownGlobalWarming(x) ::: x can help slow down global warming.\nEcoFriendlyBrand(x) ::: x is an eco-friendly brand.\nSustainableFashionBrand(x) ::: x is a sustainable fashion brand.\nFastFashionProduct(x) ::: x is a fast fashion product.\nReformation(x) ::: x is Reformation.\nPremises:\n∀x (Disposable(x) → ¬SlowDownGlobalWarming(x)) ::: No disposable products can help slow down global warming.\n∀x (EcoFriendlyBrand(x) → SlowDownGlobalWarming(x)) ::: All eco-friendly brands can help slow down global warming.\n∀x (SustainableFashionBrand(x) → EcoFriendlyBr"
    ]
  },
  {
    "id": "FOLIO_train_515",
    "context": "No disposable products can help slow down global warming. All eco-friendly brands can help slow down global warming. All sustainable fashion brands are eco-friendly brands. All fast fashion products are disposable products. If Reformation is not helping slow down global warming, then Reformation is an eco-friendly brand or a sustainable fashion brand.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Reformation produces fast fashion products.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDisposable(x) ::: x is a disposable product.\nHelp(x, y) ::: x can help y.\nSlowDown(x) ::: x can help slow down global warming.\nEcoFriendly(x) ::: x is an eco-friendly brand.\nSustainable(x) ::: x is a sustainable fashion brand.\nFastFashion(x) ::: x is a fast fashion product.\nReformation(x) ::: x is Reformation.\nPremises:\n∀x (Disposable(x) → ¬SlowDown(x)) ::: No disposable products can help slow down global warming.\n∀x (EcoFriendly(x) → SlowDown(x)) ::: All eco-friendly brands can help slow down global warming.\n∀x (Sustainable(x) → EcoFriendly(x)) ::: All sustainable fashion brands are eco-friendly brands.\n∀x (FastFashion("
    ]
  },
  {
    "id": "FOLIO_train_516",
    "context": "No disposable products can help slow down global warming. All eco-friendly brands can help slow down global warming. All sustainable fashion brands are eco-friendly brands. All fast fashion products are disposable products. If Reformation is not helping slow down global warming, then Reformation is an eco-friendly brand or a sustainable fashion brand.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Reformation does not produce fast fashion products.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDisposable(x) ::: x is a disposable product.\nHelp(x, y) ::: x can help y.\nSlowDownGlobalWarming(x) ::: x can help slow down global warming.\nEcoFriendlyBrand(x) ::: x is an eco-friendly brand.\nSustainableFashionBrand(x) ::: x is a sustainable fashion brand.\nFastFashionProduct(x) ::: x is a fast fashion product.\nReformation(x) ::: x is Reformation.\nPremises:\n∀x (Disposable(x) → ¬SlowDownGlobalWarming(x)) ::: No disposable products can help slow down global warming.\n∀x (EcoFriendlyBrand(x) → SlowDownGlobalWarming(x)) ::: All eco-friendly brands can help slow down global warming.\n∀x (SustainableFashionBrand(x) → EcoFriendlyBr"
    ]
  },
  {
    "id": "FOLIO_train_517",
    "context": "No disposable products can help slow down global warming. All eco-friendly brands can help slow down global warming. All sustainable fashion brands are eco-friendly brands. All fast fashion products are disposable products. If Reformation is not helping slow down global warming, then Reformation is an eco-friendly brand or a sustainable fashion brand.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Reformation does not produce fast fashion products or does not produce disposable products.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDisposable(x) ::: x is a disposable product.\nHelp(x, y) ::: x can help y.\nSlowDownGlobalWarming(x) ::: x can help slow down global warming.\nEcoFriendlyBrand(x) ::: x is an eco-friendly brand.\nSustainableFashionBrand(x) ::: x is a sustainable fashion brand.\nFastFashionProduct(x) ::: x is a fast fashion product.\nReformation(x) ::: x is Reformation.\nPremises:\n∀x (Disposable(x) → ¬SlowDownGlobalWarming(x)) ::: No disposable products can help slow down global warming.\n∀x (EcoFriendlyBrand(x) → SlowDownGlobalWarming(x)) ::: All eco-friendly brands can help slow down global warming.\n∀x (SustainableFashionBrand(x) → EcoFriendlyBr"
    ]
  },
  {
    "id": "FOLIO_train_518",
    "context": "No disposable products can help slow down global warming. All eco-friendly brands can help slow down global warming. All sustainable fashion brands are eco-friendly brands. All fast fashion products are disposable products. If Reformation is not helping slow down global warming, then Reformation is an eco-friendly brand or a sustainable fashion brand.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Reformation produces disposable products, then Reformation produces fast fashion products.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDisposable(x) ::: x is a disposable product.\nHelp(x, y) ::: x can help y.\nSlowDownGlobalWarming(x) ::: x can help slow down global warming.\nEcoFriendlyBrand(x) ::: x is an eco-friendly brand.\nSustainableFashionBrand(x) ::: x is a sustainable fashion brand.\nFastFashionProduct(x) ::: x is a fast fashion product.\nReformation(x) ::: x is Reformation.\nPremises:\n∀x (Disposable(x) → ¬SlowDownGlobalWarming(x)) ::: No disposable products can help slow down global warming.\n∀x (EcoFriendlyBrand(x) → SlowDownGlobalWarming(x)) ::: All eco-friendly brands can help slow down global warming.\n∀x (SustainableFashionBrand(x) → EcoFriendlyBr"
    ]
  },
  {
    "id": "FOLIO_train_519",
    "context": "No disposable products can help slow down global warming. All eco-friendly brands can help slow down global warming. All sustainable fashion brands are eco-friendly brands. All fast fashion products are disposable products. If Reformation is not helping slow down global warming, then Reformation is an eco-friendly brand or a sustainable fashion brand.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Reformation produces fast fashion products or helps slow down global warming, then Reformation produces fast fashion products.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDisposable(x) ::: x is a disposable product.\nSlowDownGlobalWarming(x) ::: x can help slow down global warming.\nEcoFriendly(x) ::: x is an eco-friendly brand.\nSustainableFashion(x) ::: x is a sustainable fashion brand.\nFastFashion(x) ::: x is a fast fashion product.\nReformation(x) ::: x is Reformation.\nPremises:\n∀x (Disposable(x) → ¬SlowDownGlobalWarming(x)) ::: No disposable products can help slow down global warming.\n∀x (EcoFriendly(x) → SlowDownGlobalWarming(x)) ::: All eco-friendly brands can help slow down global warming.\n∀x (SustainableFashion(x) → EcoFriendly(x)) ::: All sustainable fashion brands are eco-friendly brands.\n∀x (FastF"
    ]
  },
  {
    "id": "FOLIO_train_520",
    "context": "Roy Richardson was a cricketer for Sint Maartener, a consituent country. Roy Richardson was a right handed batsman and medium pace bowler. Roy Richardson was old when he debuted in cricket. Sherville Huggins dismissed Roy Richardson.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Sherville Huggins has never dismissed anyone playing for a constituent country.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCricketer(x) ::: x is a cricketer.\nSintMaartener(x) ::: x is a cricketer for Sint Maartener.\nBatsman(x) ::: x is a batsman.\nBowler(x) ::: x is a bowler.\nRightHanded(x) ::: x is a right handed batsman.\nMediumPace(x) ::: x is a medium pace bowler.\nOld(x) ::: x is old.\nDebut(x) ::: x debuted in cricket.\nDismiss(x, y) ::: x dismissed y.\nPremises:\nCricketer(royRichardson) ∧ SintMaartener(royRichardson) ∧ Batsman(royRichardson) ∧ Bowler(royRichardson) ∧ RightHanded(royRichardson) ∧ MediumPace(royRichardson) ∧ Old(royRichardson) ∧ Debut(royRichardson) ::: Roy Richardson was a cricketer for Sint Maartener, a consituent country. Roy Richardson was a right handed batsman and medium pace bowler. Roy Richardson was old when he debuted in cricket.\nDismiss(shervilleHuggins, royRichardson) ::: Sherville Huggins dismissed Roy Richardson.\nConclusion:\n∃x (Cricketer(x) ∧ SintMaartener(x) ∧ ¬Dismiss(shervilleHuggins, x)) ::: Sherville Huggins has never dismissed anyone playing for a constituent country.\n------"
    ]
  },
  {
    "id": "FOLIO_train_521",
    "context": "Roy Richardson was a cricketer for Sint Maartener, a consituent country. Roy Richardson was a right handed batsman and medium pace bowler. Roy Richardson was old when he debuted in cricket. Sherville Huggins dismissed Roy Richardson.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There are no right handed medium pace bowlers playing for Sint Maartener.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCricketer(x) ::: x is a cricketer.\nSintMaartener(x) ::: x is a consituent country.\nRightHanded(x) ::: x is a right handed batsman.\nMediumPace(x) ::: x is a medium pace bowler.\nOld(x) ::: x is old.\nDebut(x) ::: x debuted in cricket.\nDismiss(x, y) ::: x dismissed y.\nPremises:\nCricketer(royRichardson) ∧ SintMaartener(royRichardson) ∧ RightHanded(royRichardson) ∧ MediumPace(royRichardson) ∧ Old(royRichardson) ∧ Debut(royRichardson) ∧ Dismiss(shervilleHuggins, royRichardson) ::: Roy Richardson was a cricketer for Sint Maartener, a consituent country. Roy Richardson was a right handed batsman and medium pace bowler. Roy Richardson was old when he debuted in cricket. Sherville Huggins dismissed Roy Richardson.\nConclusion:\n∀x (Cricketer(x) ∧ SintMaartener(x) → ¬(RightHanded(x) ∧ MediumPace(x))) ::: There are no right handed medium pace bowlers playing for Sint Maartener.\n------\nProblem:\nThe 1992 Cricket World Cup was the fourth edition of the Cricket World Cup. The 1992 Cricket World Cup was held in Australia and New Zealand. The 1992 Cricket World Cup was won"
    ]
  },
  {
    "id": "FOLIO_train_522",
    "context": "To get a job at Google, you need to have a lot of work experience or a good education. All Yale graduates who submitted their resumes to Google got jobs there. John has a lot of work experience. John submitted his resume to Google and got a job there.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? John is a Yale graduate.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nYaleGraduate(x) ::: x is a Yale graduate.\nSubmit(x, y) ::: x submitted his resume to y.\nGetJob(x, y) ::: x got a job at y.\nWorkExperience(x) ::: x has a lot of work experience.\nEducation(x) ::: x has a good education.\nPremises:\n∀x (GetJob(x, google) → (WorkExperience(x) ∨ Education(x))) ::: To get a job at Google, you need to have a lot of work experience or a good education.\n∀x (YaleGraduate(x) ∧ Submit(x, google) → GetJob(x, google)) ::: All Yale graduates who submitted their resumes to Google got jobs there.\nWorkExperience(john) ::: John has a lot of work experience.\nSubmit(john, google) ∧ GetJob(john, google) ::: John submitted his resume to Google and got a job there.\nConclusion:\nYaleGraduate(john) ::: John is a Yale graduate.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion"
    ]
  },
  {
    "id": "FOLIO_train_523",
    "context": "No students are doctors. All people taking classes are students. All graduate students are people taking classes. All PhD students are graduate students. If Joe is a graduate student or a doctor (but not both), then Joe is not a graduate student and a student.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Joe is a person taking classes.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nStudent(x) ::: x is a student.\nDoctor(x) ::: x is a doctor.\nClass(x) ::: x is a class.\nTake(x, y) ::: x is taking y.\nGraduateStudent(x) ::: x is a graduate student.\nPhDStudent(x) ::: x is a PhD student.\nPremises:\n∀x (Student(x) → ¬Doctor(x)) ::: No students are doctors.\n∀x (Take(x, y) → Student(x)) ::: All people taking classes are students.\n∀x (GraduateStudent(x) → Take(x, y)) ::: All graduate students are people taking classes.\n∀x (PhDStudent(x) → GraduateStudent(x)) ::: All PhD students are graduate students.\n(GraduateStudent(joe) ∨ Doctor(joe)) ∧ ¬(GraduateStudent(joe) ∧ Student(joe)) ::: If Joe is a graduate student or a doctor (but not both), then Joe is not a graduate student and a student.\nConclusion:\nTake(joe, y) ::: Joe is a person taking classes.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent"
    ]
  },
  {
    "id": "FOLIO_train_524",
    "context": "No students are doctors. All people taking classes are students. All graduate students are people taking classes. All PhD students are graduate students. If Joe is a graduate student or a doctor (but not both), then Joe is not a graduate student and a student.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Joe is a PhD student.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nStudent(x) ::: x is a student.\nDoctor(x) ::: x is a doctor.\nClass(x) ::: x is taking classes.\nGraduateStudent(x) ::: x is a graduate student.\nPhDStudent(x) ::: x is a PhD student.\nPremises:\n∀x (Student(x) → ¬Doctor(x)) ::: No students are doctors.\n∀x (Class(x) → Student(x)) ::: All people taking classes are students.\n∀x (GraduateStudent(x) → Class(x)) ::: All graduate students are people taking classes.\n∀x (PhDStudent(x) → GraduateStudent(x)) ::: All PhD students are graduate students.\n(GraduateStudent(joe) ∨ Doctor(joe)) ∧ ¬(GraduateStudent(joe) ∧ Student(joe)) ::: If Joe is a graduate student or a doctor (but not both), then Joe is not a graduate student and a student.\nConclusion:\nPhDStudent(joe) ::: Joe is a PhD student.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a"
    ]
  },
  {
    "id": "FOLIO_train_525",
    "context": "No students are doctors. All people taking classes are students. All graduate students are people taking classes. All PhD students are graduate students. If Joe is a graduate student or a doctor (but not both), then Joe is not a graduate student and a student.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Joe is not a PhD student.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nStudent(x) ::: x is a student.\nDoctor(x) ::: x is a doctor.\nClass(x) ::: x is taking classes.\nGraduateStudent(x) ::: x is a graduate student.\nPhDStudent(x) ::: x is a PhD student.\nPremises:\n∀x (Student(x) → ¬Doctor(x)) ::: No students are doctors.\n∀x (Class(x) → Student(x)) ::: All people taking classes are students.\n∀x (GraduateStudent(x) → Class(x)) ::: All graduate students are people taking classes.\n∀x (PhDStudent(x) → GraduateStudent(x)) ::: All PhD students are graduate students.\n(GraduateStudent(joe) ⊕ Doctor(joe)) ∧ ¬(GraduateStudent(joe) ∧ Student(joe)) ::: If Joe is a graduate student or a doctor (but not both), then Joe is not a graduate student and a student.\nConclusion:\n¬PhDStudent(joe) ::: Joe is not a PhD student.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine"
    ]
  },
  {
    "id": "FOLIO_train_526",
    "context": "Hugh Vanstone is one of the world's leading lighting designers. Hugh Vanstone is from the UK. Hugh Vanstone has lit more than 160 productions. Hugh Vanstone attended school where he is from.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Hugh Vanstone is one of the world's leading ligting designers and from the uk",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLeading(x) ::: x is one of the world's leading lighting designers.\nUK(x) ::: x is from the UK.\nLit(x) ::: x has lit more than 160 productions.\nSchool(x) ::: x attended school where he is from.\nPremises:\nLeading(hugh) ∧ UK(hugh) ∧ Lit(hugh) ∧ School(hugh) ::: Hugh Vanstone is one of the world's leading lighting designers. Hugh Vanstone is from the UK. Hugh Vanstone has lit more than 160 productions. Hugh Vanstone attended school where he is from.\nConclusion:\nLeading(hugh) ∧ UK(hugh) ::: Hugh Vanstone is one of the world's leading ligting designers and from the uk\n------\nProblem:\nThe 2018 FIFA World Cup was the 21st FIFA World Cup, a quadrennial international football tournament contested by the men's national teams of the member associations of FIFA. The 2018 FIFA World Cup was held in Russia. The 2018 FIFA World Cup was held in 2018. The 2018 FIFA World Cup was held in Europe.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The 2018 FIFA World Cup was held in Russia.\nBased on the above information, is the following statement true, false, or uncertain? The 2018 FIFA World Cup was held in Europe.\nBased on the above information, is the following statement true, false, or uncertain? The 2018 FIFA World Cup was held in 2018.\n###"
    ]
  },
  {
    "id": "FOLIO_train_527",
    "context": "Hugh Vanstone is one of the world's leading lighting designers. Hugh Vanstone is from the UK. Hugh Vanstone has lit more than 160 productions. Hugh Vanstone attended school where he is from.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Hugh Vanstone has lit 170 productions.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nUK(x) ::: x is from the UK.\nSchool(x) ::: x is a school.\nAttend(x, y) ::: x attended y.\nLight(x, y) ::: x lit y.\nProduction(x) ::: x is a production.\nPremises:\nUK(hugh) ∧ Light(hugh, moreThan160Productions) ::: Hugh Vanstone is one of the world's leading lighting designers. Hugh Vanstone is from the UK. Hugh Vanstone has lit more than 160 productions.\nAttend(hugh, school) ::: Hugh Vanstone attended school where he is from.\nConclusion:\nLight(hugh, 170Productions) ::: Hugh Vanstone has lit 170 productions.\n------\nProblem:\nThe 2018 FIFA World Cup was the 21st FIFA World Cup, an international football tournament contested by the men's national teams of the member associations of FIFA once every four years. The 2018 FIFA World Cup was held in Russia. The 2018 FIFA World Cup was held in 2018. The 2018 FIFA World Cup was held in a country.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The 2018 FIFA World Cup was held in a country.\nBased on the above information, is the following statement true, false, or uncertain? The 2018 FIFA World Cup was held in 2018.\nBased on the above information, is the following statement true, false, or uncertain? The 2018 FIFA World Cup was held in Russia.\nBased on the above information, is the following statement true,"
    ]
  },
  {
    "id": "FOLIO_train_528",
    "context": "Hugh Vanstone is one of the world's leading lighting designers. Hugh Vanstone is from the UK. Hugh Vanstone has lit more than 160 productions. Hugh Vanstone attended school where he is from.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Hugh Vanstone attended school in the US.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nUK(x) ::: x is from the UK.\nUS(x) ::: x is from the US.\nSchool(x) ::: x is a school.\nAttend(x, y) ::: x attended y.\nPremises:\nUK(hugh) ∧ HughVanstone(hugh) ∧ LightingDesigner(hugh) ∧ ∀x (LightingDesigner(x) → HughVanstone(x)) ::: Hugh Vanstone is one of the world's leading lighting designers. Hugh Vanstone is from the UK.\n∀x (HughVanstone(x) → LightingDesigner(x)) ::: Hugh Vanstone is one of the world's leading lighting designers.\n∀x (HughVanstone(x) → UK(x)) ::: Hugh Vanstone is from the UK.\n∀x (HughVanstone(x) → ∃y (School(y) ∧ Attend(x, y))) ::: Hugh Vanstone attended school where he is from.\nConclusion:\nAttend(hugh, schoolInUS) ::: Hugh Vanstone attended school in the US.\n------\nProblem:\nThe 2018 FIFA World Cup was the 21st FIFA World Cup, a quadrennial international football tournament contested by the men's national teams of the member associations of FIFA. The 2018 FIFA World Cup was held in Russia. The 2018 FIFA World Cup was held in Europe. The 2018 FIFA World Cup was held in Asia. The 2018 FIFA World Cup was held in Africa. The 2018 FIFA World Cup was held in North"
    ]
  },
  {
    "id": "FOLIO_train_529",
    "context": "No man can run faster than Bolt. Superman is not a man.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Superman can run faster than Bolt.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMan(x) ::: x is a man.\nRun(x, y) ::: x can run faster than y.\nSuperman(x) ::: x is Superman.\nPremises:\n∀x (Man(x) → ¬Run(x, bolt)) ::: No man can run faster than Bolt.\nSuperman(superman) ∧ ¬Man(superman) ::: Superman is not a man.\nConclusion:\nRun(superman, bolt) ::: Superman can run faster than Bolt.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted"
    ]
  },
  {
    "id": "FOLIO_train_530",
    "context": "Donald Ervin Knuth is an American computer scientist, mathematician, and Professor Emeritus at Stanford University. Knuth has been called the \"father of the analysis of algorithms\".",
    "question": "Based on the above information, is the following statement true, false, or uncertain? An American scientist has been called the \"father of the analysis of algorithms\".",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAmerican(x) ::: x is an American person.\nScientist(x) ::: x is a scientist.\nMathematician(x) ::: x is a mathematician.\nProfessor(x) ::: x is a professor.\nEmeritus(x) ::: x is a professor emeritus.\nCall(x, y) ::: x is called y.\nFather(x, y) ::: x is the father of y.\nAnalysis(x) ::: x is the analysis of y.\nAlgorithm(x) ::: x is an algorithm.\nPremises:\nAmerican(donald) ∧ Scientist(donald) ∧ Mathematician(donald) ∧ Professor(donald) ∧ Emeritus(donald) ::: Donald Ervin Knuth is an American computer scientist, mathematician, and Professor Emeritus at Stanford University.\nCall(donald, fatherOfTheAnalysisOfAlgorithms) ::: Knuth has been called the \"father of the analysis of algorithms\".\nConclusion:\n∃x (American(x) ∧ Scientist(x) ∧ Call(x, fatherOfTheAnalysisOfAlgorithms)) ::: An American scientist has been called the \"father of the analysis of algorithms\".\n------"
    ]
  },
  {
    "id": "FOLIO_train_531",
    "context": "Donald Ervin Knuth is an American computer scientist, mathematician, and Professor Emeritus at Stanford University. Knuth has been called the \"father of the analysis of algorithms\".",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A mathematician has been called the \"father of the analysis of algorithms\".",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAmerican(x) ::: x is an American person.\nComputerScientist(x) ::: x is a computer scientist.\nMathematician(x) ::: x is a mathematician.\nProfessor(x) ::: x is a professor.\nEmeritus(x) ::: x is a professor emeritus.\nStanfordUniversity(x) ::: x is Stanford University.\nFather(x, y) ::: x is the father of y.\nAnalysisOfAlgorithms(x) ::: x is the analysis of algorithms.\nPremises:\nAmerican(donald) ∧ ComputerScientist(donald) ∧ Mathematician(donald) ∧ Professor(donald) ∧ Emeritus(donald) ∧ StanfordUniversity(donald) ∧ Father(donald, analysisOfAlgorithms) ::: Donald Ervin Knuth is an American computer scientist, mathematician, and Professor Emeritus at Stanford University. Knuth has been called the \"father of the analysis of algorithms\".\nConclusion:\n∃x (Mathematician(x) ∧ Father(x, analysisOfAlgorithms)) ::: A mathematician has been called the \"father of the analysis of algorithms\".\n------"
    ]
  },
  {
    "id": "FOLIO_train_532",
    "context": "Donald Ervin Knuth is an American computer scientist, mathematician, and Professor Emeritus at Stanford University. Knuth has been called the \"father of the analysis of algorithms\".",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Donald Knuth is a well-known figure in the field of artificial intelligence .",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDonald(x) ::: x is Donald Knuth.\nAmerican(x) ::: x is an American.\nComputerScientist(x) ::: x is a computer scientist.\nMathematician(x) ::: x is a mathematician.\nProfessorEmeritus(x) ::: x is a Professor Emeritus.\nStanfordUniversity(x) ::: x is Stanford University.\nFather(x) ::: x is the father of the analysis of algorithms.\nPremises:\nDonald(donald) ∧ American(donald) ∧ ComputerScientist(donald) ∧ Mathematician(donald) ∧ ProfessorEmeritus(donald) ∧ StanfordUniversity(donald) ∧ Father(donald) ::: Donald Ervin Knuth is an American computer scientist, mathematician, and Professor Emeritus at Stanford University. Knuth has been called the \"father of the analysis of algorithms\".\nConclusion:\nArtificialIntelligence(donald) ::: Donald Knuth is a well-known figure in the field of artificial intelligence.\n------\nProblem:\nThe 2019–20 coronavirus pandemic is an ongoing global pandemic of coronavirus disease 2019 (COVID-1"
    ]
  },
  {
    "id": "FOLIO_train_533",
    "context": "Neocrepidodera Corpulentas are flea beetles or moths. The species Neocrepidodera Corpulenta is in the Chrysomelidae family. There are no moths within the Chrysomelidae family.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There is a flea beetle within the Chrysomelidae family.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFleaBeetle(x) ::: x is a flea beetle.\nMoth(x) ::: x is a moth.\nSpecies(x) ::: x is a species.\nChrysomelidae(x) ::: x is in the Chrysomelidae family.\nPremises:\nSpecies(neocrepidoderaCorpulenta) ::: The species Neocrepidodera Corpulenta is in the Chrysomelidae family.\n∀x (NeocrepidoderaCorpulenta(x) → (FleaBeetle(x) ⊕ Moth(x))) ::: Neocrepidodera Corpulentas are flea beetles or moths.\n∀x (Moth(x) → ¬Chrysomelidae(x)) ::: There are no moths within the Chrysomelidae family.\nConclusion:\n∃x (FleaBeetle(x) ∧ Chrysomelidae(x)) ::: There is a flea beetle within the Chrysomelidae family.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about"
    ]
  },
  {
    "id": "FOLIO_train_534",
    "context": "Neocrepidodera Corpulentas are flea beetles or moths. The species Neocrepidodera Corpulenta is in the Chrysomelidae family. There are no moths within the Chrysomelidae family.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There are no flea beetles within the Chrysomelidae family.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFleaBeetle(x) ::: x is a flea beetle.\nMoth(x) ::: x is a moth.\nSpecies(x) ::: x is a species.\nChrysomelidae(x) ::: x is in the Chrysomelidae family.\nPremises:\nSpecies(neocrepidoderaCorpulenta) ∧ (FleaBeetle(neocrepidoderaCorpulenta) ⊕ Moth(neocrepidoderaCorpulenta)) ::: Neocrepidodera Corpulentas are flea beetles or moths.\nChrysomelidae(neocrepidoderaCorpulenta) ::: The species Neocrepidodera Corpulenta is in the Chrysomelidae family.\n∀x (Moth(x) → ¬Chrysomelidae(x)) ::: There are no moths within the Chrysomelidae family.\nConclusion:\n¬∃x (FleaBeetle(x) ∧ Chrysomelidae(x)) ::: There are no flea beetles within the Chrysomelidae family.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either"
    ]
  },
  {
    "id": "FOLIO_train_535",
    "context": "Carrozzeria Colli is a Milanese coachbuilder company that was established by Giuseppe Colli in 1931. Carrozzeria Colli is a company that specialized in using aluminum. The first automobiles built by Carrozzeria Colli were racing cars. Some racing cars built by Carrozzeria Colli used Fiat 1100 mechanicals and chasis. Carrozzeria Colli worked for airforces. Carrozzeria Colli made car bodies.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Carrozzeria Colli made car bodies in 1931.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCarrozzeriaColli(x) ::: x is Carrozzeria Colli.\nCompany(x) ::: x is a company.\nSpecialize(x, y) ::: x specializes in y.\nFirst(x, y) ::: x is the first y.\nAutomobile(x) ::: x is an automobile.\nRacingCar(x) ::: x is a racing car.\nFiat1100(x) ::: x is a Fiat 1100.\nMechanical(x) ::: x is a mechanical.\nChasis(x) ::: x is a chasis.\nAirforce(x) ::: x is an airforce.\nCarBody(x) ::: x is a car body.\nPremises:\nCarrozzeriaColli(carrozzeriacolli) ∧ Company(carrozzeriacolli) ∧ Specialize(carrozzeriacolli, aluminum) ::: Carrozzeria Colli is a Milanese coachbuilder company that was established by Giuseppe Colli in 1931. Carrozzeria Colli is a company that specialized in using aluminum.\nFirst(carrozzeriacolli, automobile) ::: The first automobiles built by Carrozzeria Colli were racing cars.���"
    ]
  },
  {
    "id": "FOLIO_train_536",
    "context": "Carrozzeria Colli is a Milanese coachbuilder company that was established by Giuseppe Colli in 1931. Carrozzeria Colli is a company that specialized in using aluminum. The first automobiles built by Carrozzeria Colli were racing cars. Some racing cars built by Carrozzeria Colli used Fiat 1100 mechanicals and chasis. Carrozzeria Colli worked for airforces. Carrozzeria Colli made car bodies.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Carrozzeria Colli built airplanes during World War II.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCarrozzeriaColli(x) ::: x is Carrozzeria Colli.\nCompany(x) ::: x is a company.\nSpecialize(x, y) ::: x specializes in y.\nRacingCar(x) ::: x is a racing car.\nFiat1100(x) ::: x is a Fiat 1100.\nMechanical(x) ::: x is a mechanical.\nChasis(x) ::: x is a chasis.\nAirforce(x) ::: x is an airforce.\nCarBody(x) ::: x is a car body.\nPremises:\nCarrozzeriaColli(carrozzeriacolli) ∧ Company(carrozzeriacolli) ∧ Specialize(carrozzeriacolli, aluminum) ::: Carrozzeria Colli is a Milanese coachbuilder company that was established by Giuseppe Colli in 1931. Carrozzeria Colli is a company that specialized in using aluminum.\n∀x (CarrozzeriaColli(x) → RacingCar(x)) ::: The first automobiles built by Carrozzeria Colli were racing cars.\n∃x (RacingCar(x) ∧ Fiat1100(x"
    ]
  },
  {
    "id": "FOLIO_train_537",
    "context": "Carrozzeria Colli is a Milanese coachbuilder company that was established by Giuseppe Colli in 1931. Carrozzeria Colli is a company that specialized in using aluminum. The first automobiles built by Carrozzeria Colli were racing cars. Some racing cars built by Carrozzeria Colli used Fiat 1100 mechanicals and chasis. Carrozzeria Colli worked for airforces. Carrozzeria Colli made car bodies.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Giuseppe Colli established a company that made car bodies.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCarrozzeriaColli(x) ::: x is Carrozzeria Colli.\nCompany(x) ::: x is a company.\nAluminum(x) ::: x is aluminum.\nSpecialize(x, y) ::: x specialized in y.\nAutomobile(x) ::: x is an automobile.\nRacingCar(x) ::: x is a racing car.\nFiat1100(x) ::: x is a Fiat 1100.\nChasis(x) ::: x is a chasis.\nAirforce(x) ::: x is an airforce.\nCarBody(x) ::: x is a car body.\nPremises:\nCarrozzeriaColli(carrozzeriacolli) ∧ Company(carrozzeriacolli) ∧ Specialize(carrozzeriacolli, aluminum) ::: Carrozzeria Colli is a Milanese coachbuilder company that was established by Giuseppe Colli in 1931. Carrozzeria Colli is a company that specialized in using aluminum.\nAutomobile(automobile) ∧ RacingCar(automobile) ∧ CarrozzeriaColli(automobile) ::: The first automobiles built by Carrozzeria Colli were racing cars."
    ]
  },
  {
    "id": "FOLIO_train_538",
    "context": "Carrozzeria Colli is a Milanese coachbuilder company that was established by Giuseppe Colli in 1931. Carrozzeria Colli is a company that specialized in using aluminum. The first automobiles built by Carrozzeria Colli were racing cars. Some racing cars built by Carrozzeria Colli used Fiat 1100 mechanicals and chasis. Carrozzeria Colli worked for airforces. Carrozzeria Colli made car bodies.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Giuseppe Colli established a Milanese coachbuilder company that specialized in using aluminum.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCarrozzeriaColli(x) ::: x is Carrozzeria Colli.\nMilanese(x) ::: x is a Milanese company.\nCoachbuilder(x) ::: x is a coachbuilder company.\nAluminum(x) ::: x is aluminum.\nRacingCar(x) ::: x is a racing car.\nFiat1100(x) ::: x is a Fiat 1100.\nAirforce(x) ::: x is an airforce.\nCarBody(x) ::: x is a car body.\nPremises:\nCarrozzeriaColli(carrozzeriacolli) ∧ Milanese(carrozzeriacolli) ∧ Coachbuilder(carrozzeriacolli) ∧ Aluminum(aluminum) ∧ Specialize(carrozzeriacolli, aluminum) ::: Carrozzeria Colli is a Milanese coachbuilder company that was established by Giuseppe Colli in 1931. Carrozzeria Colli is a company that specialized in using aluminum.\n∀x (RacingCar(x) → CarBody(x)) ::: The first automobiles built by Carrozzeria Colli were racing cars.\n∃x (RacingCar("
    ]
  },
  {
    "id": "FOLIO_train_539",
    "context": "Carrozzeria Colli is a Milanese coachbuilder company that was established by Giuseppe Colli in 1931. Carrozzeria Colli is a company that specialized in using aluminum. The first automobiles built by Carrozzeria Colli were racing cars. Some racing cars built by Carrozzeria Colli used Fiat 1100 mechanicals and chasis. Carrozzeria Colli worked for airforces. Carrozzeria Colli made car bodies.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The first automobiles built by Carrozzeria Colli were built using Fiat 1100 mechanicals and chasis.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCarrozzeriaColli(x) ::: x is Carrozzeria Colli.\nCompany(x) ::: x is a company.\nAluminum(x) ::: x is aluminum.\nSpecialize(x, y) ::: x specializes in y.\nRacingCar(x) ::: x is a racing car.\nFiat1100(x) ::: x is a Fiat 1100.\nMechanical(x) ::: x is a mechanical.\nChasis(x) ::: x is a chasis.\nAirforce(x) ::: x is an airforce.\nCarBody(x) ::: x is a car body.\nPremises:\nCarrozzeriaColli(carrozzeriacolli) ∧ Company(carrozzeriacolli) ∧ Specialize(carrozzeriacolli, aluminum) ::: Carrozzeria Colli is a Milanese coachbuilder company that was established by Giuseppe Colli in 1931. Carrozzeria Colli is a company that specialized in using aluminum.\n∀x (CarrozzeriaColli(x) → RacingCar(x)) ::: The first automobiles built by Carrozzeria Colli were racing cars.\n∃x (RacingCar("
    ]
  },
  {
    "id": "FOLIO_train_540",
    "context": "John will go to the cinema if and only if Jack goes to the cinema today. Jack will go to the cinema if and only if Iron Man is on and the weather is not bad today. Some days in March have bad weather. Iron man is on. It's March now.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? John will go to the cinema.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGo(x, y) ::: x goes to y.\nCinema(x) ::: x is the cinema.\nToday(x) ::: x is today.\nMarch(x) ::: x is March.\nBadWeather(x) ::: x has bad weather.\nIronMan(x) ::: x is Iron Man.\nPremises:\nGo(john, cinema) ↔ Go(jack, cinema) ::: John will go to the cinema if and only if Jack goes to the cinema today.\nGo(jack, cinema) ↔ (IronMan(ironMan) ∧ Today(today) ∧ ¬BadWeather(today)) ::: Jack will go to the cinema if and only if Iron Man is on and the weather is not bad today.\n∃x (March(x) ∧ BadWeather(x)) ::: Some days in March have bad weather.\nIronMan(ironMan) ::: Iron man is on.\nMarch(march) ::: It's March now.\nConclusion:\nGo(john, cinema) ::: John will go to the cinema.\n------"
    ]
  },
  {
    "id": "FOLIO_train_541",
    "context": "John will go to the cinema if and only if Jack goes to the cinema today. Jack will go to the cinema if and only if Iron Man is on and the weather is not bad today. Some days in March have bad weather. Iron man is on. It's March now.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The weather is good today.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGo(x, y) ::: x goes to y.\nCinema(x) ::: x is the cinema.\nIronMan(x) ::: x is Iron Man.\nBadWeather(x) ::: x is bad weather.\nMarch(x) ::: x is March.\nPremises:\nGo(john, cinema) ↔ Go(jack, cinema) ::: John will go to the cinema if and only if Jack goes to the cinema today.\nGo(jack, cinema) ↔ (IronMan(ironMan) ∧ ¬BadWeather(today)) ::: Jack will go to the cinema if and only if Iron Man is on and the weather is not bad today.\n∃x (March(x) ∧ BadWeather(x)) ::: Some days in March have bad weather.\nIronMan(ironMan) ::: Iron man is on.\nMarch(now) ::: It's March now.\nConclusion:\n¬BadWeather(today) ::: The weather is good today.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink"
    ]
  },
  {
    "id": "FOLIO_train_542",
    "context": "Quiksilver sells sportswear, clothing, footwear, and accessories. Flannels are a type of clothing. Joe owns an item fron Quiksilver.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Quiksilver sells beer.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSell(x, y) ::: x sells y.\nSportswear(x) ::: x is sportswear.\nClothing(x) ::: x is clothing.\nFootwear(x) ::: x is footwear.\nAccessories(x) ::: x is accessories.\nFlannel(x) ::: x is a flannel.\nItem(x) ::: x is an item.\nOwn(x, y) ::: x owns y.\nPremises:\nSell(quiksilver, sportswear) ∧ Sell(quiksilver, clothing) ∧ Sell(quiksilver, footwear) ∧ Sell(quiksilver, accessories) ::: Quiksilver sells sportswear, clothing, footwear, and accessories.\nFlannel(flannel) ::: Flannels are a type of clothing.\nOwn(joe, item) ::: Joe owns an item fron Quiksilver.\nConclusion:\nSell(quiksilver, beer) ::: Quiksilver sells beer.\n------\nProblem:\nThe 2018 FIFA World Cup"
    ]
  },
  {
    "id": "FOLIO_train_543",
    "context": "Quiksilver sells sportswear, clothing, footwear, and accessories. Flannels are a type of clothing. Joe owns an item fron Quiksilver.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Joe owns a flannel.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSell(x, y) ::: x sells y.\nSportswear(x) ::: x is sportswear.\nClothing(x) ::: x is clothing.\nFootwear(x) ::: x is footwear.\nAccessory(x) ::: x is an accessory.\nFlannel(x) ::: x is a flannel.\nOwn(x, y) ::: x owns y.\nPremises:\nSell(quiksilver, sportswear) ∧ Sell(quiksilver, clothing) ∧ Sell(quiksilver, footwear) ∧ Sell(quiksilver, accessory) ::: Quiksilver sells sportswear, clothing, footwear, and accessories.\nFlannel(flannel) ::: Flannels are a type of clothing.\nOwn(joe, item) ∧ Sell(quiksilver, item) ::: Joe owns an item fron Quiksilver.\nConclusion:\nOwn(joe, flannel) ::: Joe owns a flannel.\n------\nProblem:\nThe number of people who are not in"
    ]
  },
  {
    "id": "FOLIO_train_544",
    "context": "Quiksilver sells sportswear, clothing, footwear, and accessories. Flannels are a type of clothing. Joe owns an item fron Quiksilver.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Joe owns at least one a piece of sportswear, clothing, footwear, or accessory",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSell(x, y) ::: x sells y.\nSportswear(x) ::: x is a piece of sportswear.\nClothing(x) ::: x is a piece of clothing.\nFootwear(x) ::: x is a piece of footwear.\nAccessory(x) ::: x is an accessory.\nFlannel(x) ::: x is a flannel.\nOwn(x, y) ::: x owns y.\nPremises:\nSell(quiksilver, sportswear) ∧ Sell(quiksilver, clothing) ∧ Sell(quiksilver, footwear) ∧ Sell(quiksilver, accessory) ::: Quiksilver sells sportswear, clothing, footwear, and accessories.\nFlannel(flannel) ::: Flannels are a type of clothing.\nOwn(joe, flannel) ::: Joe owns an item fron Quiksilver.\nConclusion:\n∃x (Own(joe, x) ∧ (Sportswear(x) ∨ Clothing(x) �"
    ]
  },
  {
    "id": "FOLIO_train_545",
    "context": "No video games released by Nintendo support the PS4 platform. All video games in the Pokemon series are released by Nintendo. All video games in the FIFA series support the PS4 platform. All video games supporting users to simulate playing soccer games online are in the FIFA series. The video game named “Be Lionel” is in the Pokemon series or supports users to simulate playing football games online.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The video game \"Be Lionel\" is in the pokemon series.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nNintendo(x) ::: x is a video game released by Nintendo.\nPS4(x) ::: x is a video game supporting the PS4 platform.\nPokemon(x) ::: x is a video game in the Pokemon series.\nFIFA(x) ::: x is a video game in the FIFA series.\nSimulate(x, y) ::: x is a video game supporting users to simulate playing y games online.\nPremises:\n∀x (Nintendo(x) → ¬PS4(x)) ::: No video games released by Nintendo support the PS4 platform.\n∀x (Pokemon(x) → Nintendo(x)) ::: All video games in the Pokemon series are released by Nintendo.\n∀x (FIFA(x) → PS4(x)) ::: All video games in the FIFA series support the PS4 platform.\n∀x (Simulate(x, soccer) → FIFA(x)) ::: All video games supporting users to simulate playing soccer games online are in the FIFA series.\nPokemon(beLionel) ∨ Simulate(beLionel, football) ::: The video"
    ]
  },
  {
    "id": "FOLIO_train_546",
    "context": "No video games released by Nintendo support the PS4 platform. All video games in the Pokemon series are released by Nintendo. All video games in the FIFA series support the PS4 platform. All video games supporting users to simulate playing soccer games online are in the FIFA series. The video game named “Be Lionel” is in the Pokemon series or supports users to simulate playing football games online.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The video game named “Be Lionel” is not in the FIFA series or supports the PS4 platform.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nNintendo(x) ::: x is a video game released by Nintendo.\nPS4(x) ::: x is a video game supporting the PS4 platform.\nPokemon(x) ::: x is a video game in the Pokemon series.\nFIFA(x) ::: x is a video game in the FIFA series.\nSimulate(x, y) ::: x is a video game supporting users to simulate playing y games online.\nPremises:\n∀x (Nintendo(x) → ¬PS4(x)) ::: No video games released by Nintendo support the PS4 platform.\n∀x (Pokemon(x) → Nintendo(x)) ::: All video games in the Pokemon series are released by Nintendo.\n∀x (FIFA(x) → PS4(x)) ::: All video games in the FIFA series support the PS4 platform.\n∀x (Simulate(x, soccer) → FIFA(x)) ::: All video games supporting users to simulate playing soccer games online are in the FIFA series.\nBeLionel(x) ∧ (Pokemon(x) ∨ Simulate(x,"
    ]
  },
  {
    "id": "FOLIO_train_547",
    "context": "No video games released by Nintendo support the PS4 platform. All video games in the Pokemon series are released by Nintendo. All video games in the FIFA series support the PS4 platform. All video games supporting users to simulate playing soccer games online are in the FIFA series. The video game named “Be Lionel” is in the Pokemon series or supports users to simulate playing football games online.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The video game named “Be Lionel” is in the FIFA series or supports the PS4 platform.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nNintendo(x) ::: x is a video game released by Nintendo.\nPS4(x) ::: x is a video game supporting the PS4 platform.\nPokemon(x) ::: x is a video game in the Pokemon series.\nFIFA(x) ::: x is a video game in the FIFA series.\nSimulate(x, y) ::: x is a video game supporting users to simulate playing y games online.\nPremises:\n∀x (Nintendo(x) → ¬PS4(x)) ::: No video games released by Nintendo support the PS4 platform.\n∀x (Pokemon(x) → Nintendo(x)) ::: All video games in the Pokemon series are released by Nintendo.\n∀x (FIFA(x) → PS4(x)) ::: All video games in the FIFA series support the PS4 platform.\n∀x (Simulate(x, soccer) → FIFA(x)) ::: All video games supporting users to simulate playing soccer games online are in the FIFA series.\nBeLionel(x) ∧ (Pokemon(x) ∨ Simulate(x,"
    ]
  },
  {
    "id": "FOLIO_train_548",
    "context": "No video games released by Nintendo support the PS4 platform. All video games in the Pokemon series are released by Nintendo. All video games in the FIFA series support the PS4 platform. All video games supporting users to simulate playing soccer games online are in the FIFA series. The video game named “Be Lionel” is in the Pokemon series or supports users to simulate playing football games online.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The video game named “Be Lionel”  is not in the FIFA or Pokemon series.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nNintendo(x) ::: x is a video game released by Nintendo.\nPS4(x) ::: x is a video game supporting the PS4 platform.\nPokemon(x) ::: x is a video game in the Pokemon series.\nFIFA(x) ::: x is a video game in the FIFA series.\nSimulate(x, y) ::: x is a video game supporting users to simulate playing y games online.\nPremises:\n∀x (Nintendo(x) → ¬PS4(x)) ::: No video games released by Nintendo support the PS4 platform.\n∀x (Pokemon(x) → Nintendo(x)) ::: All video games in the Pokemon series are released by Nintendo.\n∀x (FIFA(x) → PS4(x)) ::: All video games in the FIFA series support the PS4 platform.\n∀x (Simulate(x, soccer) → FIFA(x)) ::: All video games supporting users to simulate playing soccer games online are in the FIFA series.\nBeLionel(x) ∧ (Pokemon(x) ∨ Simulate(x,"
    ]
  },
  {
    "id": "FOLIO_train_549",
    "context": "No payment cards issued by Russian banks can be used with ApplePay. All MIR payment cards are issued by Russian banks. Some international payment cards can be used with ApplePay. Social payments in Russia can only be transferred to MIR payment cards. Bank of America payment cards can be used with ApplePay.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Bank of America payment cards are international.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRussianBank(x) ::: x is a Russian bank.\nPaymentCard(x) ::: x is a payment card.\nApplePay(x) ::: x can be used with ApplePay.\nMir(x) ::: x is a MIR payment card.\nInternational(x) ::: x is an international payment card.\nSocialPayment(x) ::: x is a social payment.\nBankOfAmerica(x) ::: x is a Bank of America payment card.\nPremises:\n∀x (PaymentCard(x) ∧ RussianBank(x) → ¬ApplePay(x)) ::: No payment cards issued by Russian banks can be used with ApplePay.\n∀x (Mir(x) → RussianBank(x)) ::: All MIR payment cards are issued by Russian banks.\n∃x (International(x) ∧ ApplePay(x)) ::: Some international payment cards can be used with ApplePay.\n∀x (SocialPayment(x) → Mir(x)) ::: Social payments in Russia can only be transferred to MIR payment cards.\nBankOfAmerica(x) ∧ ApplePay"
    ]
  },
  {
    "id": "FOLIO_train_550",
    "context": "No payment cards issued by Russian banks can be used with ApplePay. All MIR payment cards are issued by Russian banks. Some international payment cards can be used with ApplePay. Social payments in Russia can only be transferred to MIR payment cards. Bank of America payment cards can be used with ApplePay.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Bank of America payment cards are international and can be used to transfer social payments in Russia.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRussianBank(x) ::: x is a Russian bank.\nPaymentCard(x) ::: x is a payment card.\nIssue(x, y) ::: x issues y.\nApplePay(x) ::: x can be used with ApplePay.\nMIR(x) ::: x is a MIR payment card.\nInternational(x) ::: x is an international payment card.\nSocialPayment(x) ::: x is a social payment.\nTransfer(x, y) ::: x can be transferred to y.\nBankOfAmerica(x) ::: x is a Bank of America payment card.\nPremises:\n∀x (PaymentCard(x) ∧ Issue(x, RussianBank(x)) → ¬ApplePay(x)) ::: No payment cards issued by Russian banks can be used with ApplePay.\n∀x (MIR(x) → Issue(x, RussianBank(x))) ::: All MIR payment cards are issued by Russian banks.\n∃x (International(x) ∧ ApplePay(x)) ::: Some international payment cards can be used with ApplePay.\n∀x (SocialPayment(x) → Transfer(x, MIR(x))) ::: Social payments in Russia can only be transferred to MIR payment cards.\nBankOfAmerica(x) ∧ ApplePay(x) ::: Bank of America payment cards can be used with ApplePay.\nConclusion:\nInternational(BankOfAmerica) ∧ Transfer(SocialPayment, BankOfAmerica) ::: Bank of America payment cards are international and can be used to transfer social payments in Russia.\n------"
    ]
  },
  {
    "id": "FOLIO_train_551",
    "context": "No payment cards issued by Russian banks can be used with ApplePay. All MIR payment cards are issued by Russian banks. Some international payment cards can be used with ApplePay. Social payments in Russia can only be transferred to MIR payment cards. Bank of America payment cards can be used with ApplePay.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Bank of America payment cards are international or issued by Russian banks, then they can not be used to transfer social payments in Russia.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRussianBank(x) ::: x is a Russian bank.\nPaymentCard(x) ::: x is a payment card.\nApplePay(x) ::: x can be used with ApplePay.\nMir(x) ::: x is a MIR payment card.\nInternational(x) ::: x is an international payment card.\nSocialPayment(x) ::: x is a social payment.\nTransfer(x, y) ::: x can be used to transfer y.\nBankOfAmerica(x) ::: x is a Bank of America payment card.\nPremises:\n∀x (PaymentCard(x) ∧ RussianBank(x) → ¬ApplePay(x)) ::: No payment cards issued by Russian banks can be used with ApplePay.\n∀x (Mir(x) → RussianBank(x)) ::: All MIR payment cards are issued by Russian banks.\n∃x (International(x) ∧ ApplePay(x)) ::: Some international payment cards can be used with ApplePay.\n∀x (SocialPayment(x) → Transfer(x, Mir(x))) ::: Social payments in Russia can only be transferred to MIR payment cards.\nBankOfAmerica(x) → ApplePay(x) ::: Bank of America payment cards can be used with ApplePay.\nConclusion:\n(BankOfAmerica(x) ∧ (International(x) ∨ RussianBank(x))) → ¬Transfer(x, SocialPayment(x)) ::: If Bank of America payment cards are international or issued by Russian banks, then they can not be used to transfer social payments in Russia.\n------"
    ]
  },
  {
    "id": "FOLIO_train_552",
    "context": "The Lumina APV is produced by Chevrolet. The Astro is a van produced by Chevrolet. Cars produced by Chevrolet are either cars or vans.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Lumina APV is van.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLuminaAPV(x) ::: x is a Lumina APV.\nAstro(x) ::: x is an Astro.\nChevrolet(x) ::: x is produced by Chevrolet.\nCar(x) ::: x is a car.\nVan(x) ::: x is a van.\nPremises:\n∀x (Chevrolet(x) → (Car(x) ⊕ Van(x))) ::: Cars produced by Chevrolet are either cars or vans.\nLuminaAPV(luminaAPV) ::: The Lumina APV is produced by Chevrolet.\nAstro(astro) ::: The Astro is a van produced by Chevrolet.\nConclusion:\nVan(luminaAPV) ::: The Lumina APV is van.\n------\nProblem:\nThe Lumina APV is produced by Chevrolet. The Astro is a van produced by Chevrolet. Cars produced by Chevrolet are either cars or vans.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The Lumina APV is a car.\n###\nPredicates:\nLuminaAPV(x) ::: x is a Lumina APV.\nAstro(x) ::: x is an Astro.\nChevrolet(x) ::: x is produced by Chevrolet.\nCar(x) ::: x is a car.\nVan(x) ::: x is a van.\nPremises:\n∀x"
    ]
  },
  {
    "id": "FOLIO_train_553",
    "context": "The Lumina APV is produced by Chevrolet. The Astro is a van produced by Chevrolet. Cars produced by Chevrolet are either cars or vans.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Lumina APV is either a car or a van.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProduce(x, y) ::: x produces y.\nCar(x) ::: x is a car.\nVan(x) ::: x is a van.\nLuminaAPV(x) ::: x is a Lumina APV.\nAstro(x) ::: x is an Astro.\nPremises:\nProduce(chevrolet, luminaAPV) ::: The Lumina APV is produced by Chevrolet.\nProduce(chevrolet, astro) ::: The Astro is a van produced by Chevrolet.\n∀x (Produce(chevrolet, x) → (Car(x) ∨ Van(x))) ::: Cars produced by Chevrolet are either cars or vans.\nConclusion:\nLuminaAPV(x) → (Car(x) ∨ Van(x)) ::: The Lumina APV is either a car or a van.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true,"
    ]
  },
  {
    "id": "FOLIO_train_554",
    "context": "The Lumina APV is produced by Chevrolet. The Astro is a van produced by Chevrolet. Cars produced by Chevrolet are either cars or vans.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Astro is a van.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProduce(x, y) ::: x produces y.\nCar(x) ::: x is a car.\nVan(x) ::: x is a van.\nLuminaAPV(x) ::: x is a Lumina APV.\nAstro(x) ::: x is an Astro.\nPremises:\nProduce(chevrolet, luminaAPV) ::: The Lumina APV is produced by Chevrolet.\nProduce(chevrolet, astro) ::: The Astro is a van produced by Chevrolet.\n∀x (Produce(chevrolet, x) → (Car(x) ∨ Van(x))) ::: Cars produced by Chevrolet are either cars or vans.\nConclusion:\nVan(astro) ::: The Astro is a van.\n------\nProblem:\nThe Lumina APV is produced by Chevrolet. The Astro is a van produced by Chevrolet. Cars produced by Chevrolet are either cars or vans.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The Lumina APV is a van.\n###\nPredicates:\nProduce(x, y) ::: x produces y.\nCar(x) ::: x is a car.\nVan(x) ::: x is a van.\nLuminaAPV(x) ::: x is a Lumina APV.\nAstro(x) ::: x is an Astro.\nPremises:\nProduce(chevrolet, luminaAP"
    ]
  },
  {
    "id": "FOLIO_train_555",
    "context": "The Lumina APV is produced by Chevrolet. The Astro is a van produced by Chevrolet. Cars produced by Chevrolet are either cars or vans.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Astro is a car.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProduce(x, y) ::: x produces y.\nCar(x) ::: x is a car.\nVan(x) ::: x is a van.\nPremises:\nProduce(chevrolet, luminaApv) ::: The Lumina APV is produced by Chevrolet.\nProduce(chevrolet, astro) ::: The Astro is a van produced by Chevrolet.\n∀x (Produce(chevrolet, x) → (Car(x) ∨ Van(x))) ::: Cars produced by Chevrolet are either cars or vans.\nConclusion:\nVan(astro) ::: The Astro is a van.\n------\nProblem:\nThe Lumina APV is produced by Chevrolet. The Astro is a van produced by Chevrolet. Cars produced by Chevrolet are either cars or vans.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The Lumina APV is a car.\n###\nPredicates:\nProduce(x, y) ::: x produces y.\nCar(x) ::: x is a car.\nVan(x) ::: x is a van.\nPremises:\nProduce(chevrolet, luminaApv) ::: The Lumina APV is produced by Chevrolet.\nProduce(chevrolet, astro) ::: The Astro is a van produced by Chevrolet.\n∀x (Produce(chevrolet, x) → (Car(x) ��"
    ]
  },
  {
    "id": "FOLIO_train_556",
    "context": "Everyone who works in person is a commuter. People either work in person or work from home. Everyone who works from home has a relaxed schedule. George is either a commuter or has a home office setup. If George is either a person who works from home or has a home office setup, then George is not a person who works from home and a commuter.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? George is a person who works from home.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCommuter(x) ::: x is a commuter.\nWorkInPerson(x) ::: x works in person.\nWorkFromHome(x) ::: x works from home.\nRelaxed(x) ::: x has a relaxed schedule.\nHomeOfficeSetup(x) ::: x has a home office setup.\nPremises:\n∀x (WorkInPerson(x) → Commuter(x)) ::: Everyone who works in person is a commuter.\n∀x (WorkFromHome(x) ⊕ WorkInPerson(x)) ::: People either work in person or work from home.\n∀x (WorkFromHome(x) → Relaxed(x)) ::: Everyone who works from home has a relaxed schedule.\n(HomeOfficeSetup(george) ∨ Commuter(george)) ⊕ ¬(WorkFromHome(george) ∨ HomeOfficeSetup(george)) ::: George is either a commuter or has a home office setup.\n(WorkFromHome(george) ⊕ HomeOfficeSetup(george)) → ¬(WorkFromHome(george) ∧ Commuter(george)) ::: If George is either a person who works from home or has a home office setup, then George is not a person who works from home and a commuter.\nConclusion:\nWorkFromHome(george) ::: George is a person who works from home.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being"
    ]
  },
  {
    "id": "FOLIO_train_557",
    "context": "Everyone who works in person is a commuter. People either work in person or work from home. Everyone who works from home has a relaxed schedule. George is either a commuter or has a home office setup. If George is either a person who works from home or has a home office setup, then George is not a person who works from home and a commuter.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If George is not a person who works from home and a person who works in person, then George is neither a commuter nor a person who has a relaxed schedule.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nWorkInPerson(x) ::: x works in person.\nCommuter(x) ::: x is a commuter.\nWorkFromHome(x) ::: x works from home.\nRelaxedSchedule(x) ::: x has a relaxed schedule.\nHomeOfficeSetup(x) ::: x has a home office setup.\nPremises:\n∀x (WorkInPerson(x) → Commuter(x)) ::: Everyone who works in person is a commuter.\n∀x (WorkFromHome(x) ⊕ WorkInPerson(x)) ::: People either work in person or work from home.\n∀x (WorkFromHome(x) → RelaxedSchedule(x)) ::: Everyone who works from home has a relaxed schedule.\n(HomeOfficeSetup(george) ∨ Commuter(george)) ⊕ ¬(WorkFromHome(george) ∨ HomeOfficeSetup(george)) ::: George is either a commuter or has a home office setup.\n(WorkFromHome(george) ∨ HomeOfficeSetup(george)) → ¬(WorkFromHome(george) ∧ Commuter(george)) ::: If George is either a person who works from home or has a home office setup, then George is not a person who works from home and a commuter.\nConclusion:\n(¬(WorkFromHome(george) ∧ WorkInPerson(george)) → ¬(Commuter(george) ∧ RelaxedSchedule(george))) ::: If George is not a person who works from home and a"
    ]
  },
  {
    "id": "FOLIO_train_558",
    "context": "Everyone who works in person is a commuter. People either work in person or work from home. Everyone who works from home has a relaxed schedule. George is either a commuter or has a home office setup. If George is either a person who works from home or has a home office setup, then George is not a person who works from home and a commuter.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If George is either a person who has a home office setup and a person who works in person, or neither a person who has a home office setup nor a person who works in person, then George is either a person who works from home or a person who has a relaxed schedule.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCommuter(x) ::: x is a commuter.\nWorkInPerson(x) ::: x works in person.\nWorkFromHome(x) ::: x works from home.\nRelaxed(x) ::: x has a relaxed schedule.\nHomeOfficeSetup(x) ::: x has a home office setup.\nPremises:\n∀x (WorkInPerson(x) → Commuter(x)) ::: Everyone who works in person is a commuter.\n∀x (WorkFromHome(x) ⊕ WorkInPerson(x)) ::: People either work in person or work from home.\n∀x (WorkFromHome(x) → Relaxed(x)) ::: Everyone who works from home has a relaxed schedule.\n(Commuter(george) ∨ HomeOfficeSetup(george)) ⊕ ¬(Commuter(george) ∨ WorkInPerson(george)) ::: George is either a commuter or has a home office setup.\n¬(WorkFromHome(george) ∧ Commuter(george)) → (WorkFromHome(george) ∧ Commuter(george)) ⊕ ¬(WorkFromHome(george) ∨ Commuter(george)) ::: If George is either a person who works from home or has a home office setup, then George is not a person who works from home and a commuter.\nConclusion:\n(HomeOfficeSetup(george) ∧ WorkInPerson(george)) ⊕ ¬(HomeOfficeSetup(george) ∨"
    ]
  },
  {
    "id": "FOLIO_train_559",
    "context": "Jason Kramer is an American music supervisor. Some American radio personalities are also music supervisors. Anyone who hosts a show on a public radio station is a radio personality. Joe Rogan is a radio personality. Jason Kramer hosted a show on a public radio station.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Joe Rogan is American.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAmerican(x) ::: x is American.\nRadioPersonality(x) ::: x is a radio personality.\nMusicSupervisor(x) ::: x is a music supervisor.\nHost(x, y) ::: x hosts a show on y.\nPublicRadioStation(x) ::: x is a public radio station.\nPremises:\nAmerican(jason) ∧ MusicSupervisor(jason) ∧ Host(jason, publicRadioStation) ::: Jason Kramer is an American music supervisor who hosted a show on a public radio station.\n∃x (American(x) ∧ RadioPersonality(x)) ::: Some American radio personalities are also music supervisors.\n∀x (Host(x, publicRadioStation) → RadioPersonality(x)) ::: Anyone who hosts a show on a public radio station is a radio personality.\nRadioPersonality(joe) ::: Joe Rogan is a radio personality.\nConclusion:\nAmerican(joe) ::: Joe Rogan is American.\n------\nProblem:\nThe 2019 FIFA Women's World Cup was the eighth edition of the FIFA Women's World Cup, the quadrennial international football championship contested by 24 women's national teams representing member associations of FIFA. The tournament was held in France from 7 June to 7 July 2019. The United States won the tournament for a record fourth time, defeating the Netherlands 2–0 in the final.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The 2019 FIFA Women's World Cup was held in"
    ]
  },
  {
    "id": "FOLIO_train_560",
    "context": "Jason Kramer is an American music supervisor. Some American radio personalities are also music supervisors. Anyone who hosts a show on a public radio station is a radio personality. Joe Rogan is a radio personality. Jason Kramer hosted a show on a public radio station.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jason Kramer is a music supervisor.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAmerican(x) ::: x is an American.\nRadioPersonality(x) ::: x is a radio personality.\nMusicSupervisor(x) ::: x is a music supervisor.\nHost(x, y) ::: x hosts a show on y.\nPublicRadioStation(x) ::: x is a public radio station.\nPremises:\nAmerican(jasonKramer) ∧ MusicSupervisor(jasonKramer) ::: Jason Kramer is an American music supervisor.\n∃x (American(x) ∧ RadioPersonality(x) ∧ MusicSupervisor(x)) ::: Some American radio personalities are also music supervisors.\n∀x (Host(x, y) ∧ PublicRadioStation(y) → RadioPersonality(x)) ::: Anyone who hosts a show on a public radio station is a radio personality.\nRadioPersonality(joeRogan) ::: Joe Rogan is a radio personality.\nHost(jasonKramer, publicRadioStation) ::: Jason Kramer hosted a show on a public radio station.\nConclusion:\nMusicSupervisor(jasonKramer) ::: Jason Kramer is a music supervisor.\n------"
    ]
  },
  {
    "id": "FOLIO_train_561",
    "context": "Jason Kramer is an American music supervisor. Some American radio personalities are also music supervisors. Anyone who hosts a show on a public radio station is a radio personality. Joe Rogan is a radio personality. Jason Kramer hosted a show on a public radio station.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jason Kramer is a radio personality.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAmerican(x) ::: x is an American.\nRadioPersonality(x) ::: x is a radio personality.\nMusicSupervisor(x) ::: x is a music supervisor.\nHost(x, y) ::: x hosts a show on y.\nPublicRadioStation(x) ::: x is a public radio station.\nPremises:\nAmerican(jasonKramer) ∧ MusicSupervisor(jasonKramer) ::: Jason Kramer is an American music supervisor.\n∃x (American(x) ∧ RadioPersonality(x) ∧ MusicSupervisor(x)) ::: Some American radio personalities are also music supervisors.\n∀x (Host(x, y) ∧ PublicRadioStation(y) → RadioPersonality(x)) ::: Anyone who hosts a show on a public radio station is a radio personality.\nRadioPersonality(joeRogan) ::: Joe Rogan is a radio personality.\nHost(jasonKramer, publicRadioStation) ::: Jason Kramer hosted a show on a public radio station.\nConclusion:\nRadioPersonality(jasonKramer) ::: Jason Kramer is a radio personality.\n------"
    ]
  },
  {
    "id": "FOLIO_train_562",
    "context": "No coffee sold in Walmart is produced in France. All coffee supplied by the company is sold in Walmart. All coffee produced in Columbia is produced in France. All coffee favored by local residents is coffee produced in Columbia. All coffee with high prices is favored by local residents. Civet Coffee is not produced in Columbia and is cheap. Jamaica Blue is sold in Walmart or favored by local residents.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Civet Coffee is produced in France.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCoffee(x) ::: x is coffee.\nSold(x, y) ::: x is sold in y.\nProduce(x, y) ::: x is produced in y.\nSupply(x, y) ::: x is supplied by y.\nFavorite(x, y) ::: x is favored by y.\nPrice(x, y) ::: x has price y.\nCivetCoffee(x) ::: x is Civet Coffee.\nJamaicaBlue(x) ::: x is Jamaica Blue.\nPremises:\n∀x (Coffee(x) ∧ Sold(x, walmart) → ¬Produce(x, france)) ::: No coffee sold in Walmart is produced in France.\n∀x (Coffee(x) ∧ Supply(x, company) → Sold(x, walmart)) ::: All coffee supplied by the company is sold in Walmart.\n∀x (Coffee(x) ∧ Produce(x, columbia) → Produce(x, france)) ::: All coffee produced in Columbia is produced in France.\n∀x (Coffee(x)"
    ]
  },
  {
    "id": "FOLIO_train_563",
    "context": "No coffee sold in Walmart is produced in France. All coffee supplied by the company is sold in Walmart. All coffee produced in Columbia is produced in France. All coffee favored by local residents is coffee produced in Columbia. All coffee with high prices is favored by local residents. Civet Coffee is not produced in Columbia and is cheap. Jamaica Blue is sold in Walmart or favored by local residents.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Civet Coffee is not produced in France.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCoffee(x) ::: x is coffee.\nSold(x, y) ::: x is sold in y.\nProduce(x, y) ::: x is produced in y.\nSupply(x, y) ::: x is supplied by y.\nFavorite(x, y) ::: x is favored by y.\nPrice(x, y) ::: x has price y.\nCivetCoffee(x) ::: x is Civet Coffee.\nJamaicaBlue(x) ::: x is Jamaica Blue.\nPremises:\n∀x (Coffee(x) ∧ Sold(x, walmart) → ¬Produce(x, france)) ::: No coffee sold in Walmart is produced in France.\n∀x (Coffee(x) ∧ Supply(x, company) → Sold(x, walmart)) ::: All coffee supplied by the company is sold in Walmart.\n∀x (Coffee(x) ∧ Produce(x, columbia) → Produce(x, france)) ::: All coffee produced in Columbia is produced in France.\n∀x (Coffee(x)"
    ]
  },
  {
    "id": "FOLIO_train_564",
    "context": "No coffee sold in Walmart is produced in France. All coffee supplied by the company is sold in Walmart. All coffee produced in Columbia is produced in France. All coffee favored by local residents is coffee produced in Columbia. All coffee with high prices is favored by local residents. Civet Coffee is not produced in Columbia and is cheap. Jamaica Blue is sold in Walmart or favored by local residents.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jamaica Blue is expensive and supplied by the company.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCoffee(x) ::: x is a coffee.\nSold(x, y) ::: x is sold in y.\nProduce(x, y) ::: x is produced in y.\nSupply(x, y) ::: x is supplied by y.\nFavorite(x, y) ::: x is favored by y.\nPrice(x, y) ::: x has a price of y.\nCheap(x) ::: x is cheap.\nExpensive(x) ::: x is expensive.\nWalmart(x) ::: x is Walmart.\nCompany(x) ::: x is the company.\nLocalResident(x) ::: x is a local resident.\nCivetCoffee(x) ::: x is Civet Coffee.\nJamaicaBlue(x) ::: x is Jamaica Blue.\nPremises:\n∀x (Coffee(x) ∧ Sold(x, walmart) → ¬Produce(x, france)) ::: No coffee sold in Walmart is produced in France.\n∀x (Coffee(x) ∧ Supply(x, company) → Sold(x, walmart)) ::: All coffee supplied"
    ]
  },
  {
    "id": "FOLIO_train_565",
    "context": "No coffee sold in Walmart is produced in France. All coffee supplied by the company is sold in Walmart. All coffee produced in Columbia is produced in France. All coffee favored by local residents is coffee produced in Columbia. All coffee with high prices is favored by local residents. Civet Coffee is not produced in Columbia and is cheap. Jamaica Blue is sold in Walmart or favored by local residents.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jamaica Blue is not expensive and is not supplied by the company.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCoffee(x) ::: x is a coffee.\nSold(x, y) ::: x is sold in y.\nProduce(x, y) ::: x is produced in y.\nSupply(x, y) ::: x is supplied by y.\nFavor(x, y) ::: x is favored by y.\nPrice(x, y) ::: x has a price of y.\nCheap(x) ::: x is cheap.\nExpensive(x) ::: x is expensive.\nWalmart(x) ::: x is Walmart.\nColumbia(x) ::: x is Columbia.\nFrance(x) ::: x is France.\nLocalResident(x) ::: x is a local resident.\nJamaicaBlue(x) ::: x is Jamaica Blue.\nCivetCoffee(x) ::: x is Civet Coffee.\nPremises:\n∀x (Coffee(x) ∧ Sold(x, Walmart) → ¬Produce(x, France)) ::: No coffee sold in Walmart is produced in France.\n∀x (Coffee(x) ∧ Supply(x, company) →"
    ]
  },
  {
    "id": "FOLIO_train_566",
    "context": "There are two places named Galicia: either in Spain or in Poland. Spain is in Europe. Poland is in Europe. Rochelle lives in Europe. Dominique does not live in Europe. Alfonso lives in Galicia.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Rochelle lives in Galicia.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGalicia(x) ::: x is a place named Galicia.\nSpain(x) ::: x is Spain.\nPoland(x) ::: x is Poland.\nEurope(x) ::: x is in Europe.\nLive(x, y) ::: x lives in y.\nPremises:\nGalicia(galicia) ∧ (Spain(galicia) ⊕ Poland(galicia)) ::: There are two places named Galicia: either in Spain or in Poland.\nSpain(spain) ∧ Europe(spain) ::: Spain is in Europe.\nPoland(poland) ∧ Europe(poland) ::: Poland is in Europe.\nEurope(europe) ∧ Live(rochelle, europe) ::: Rochelle lives in Europe.\n¬Europe(europe) ∧ Live(dominique, europe) ::: Dominique does not live in Europe.\nEurope(europe) ∧ Live(alfonso, galicia) ::: Alfonso lives in Galicia.\nConclusion:\nLive(rochelle, galicia) ::: Rochelle lives in Galicia.\n------\nProblem:\nAll people who regularly drink coffee are"
    ]
  },
  {
    "id": "FOLIO_train_567",
    "context": "There are two places named Galicia: either in Spain or in Poland. Spain is in Europe. Poland is in Europe. Rochelle lives in Europe. Dominique does not live in Europe. Alfonso lives in Galicia.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Dominique does not live in Spain.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGalicia(x) ::: x is a place named Galicia.\nSpain(x) ::: x is Spain.\nPoland(x) ::: x is Poland.\nEurope(x) ::: x is in Europe.\nLive(x, y) ::: x lives in y.\nPremises:\nGalicia(spain) ∨ Galicia(poland) ::: There are two places named Galicia: either in Spain or in Poland.\nSpain(spain) ::: Spain is in Europe.\nPoland(poland) ::: Poland is in Europe.\nEurope(europe) ::: Rochelle lives in Europe.\n¬Europe(dominique) ::: Dominique does not live in Europe.\nLive(alfonso, galicia) ::: Alfonso lives in Galicia.\nConclusion:\n¬Live(dominique, spain) ::: Dominique does not live in Spain.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a"
    ]
  },
  {
    "id": "FOLIO_train_568",
    "context": "There are two places named Galicia: either in Spain or in Poland. Spain is in Europe. Poland is in Europe. Rochelle lives in Europe. Dominique does not live in Europe. Alfonso lives in Galicia.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Alfonso lives in Europe.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGalicia(x) ::: x is a place named Galicia.\nSpain(x) ::: x is Spain.\nPoland(x) ::: x is Poland.\nEurope(x) ::: x is in Europe.\nLive(x, y) ::: x lives in y.\nPremises:\nGalicia(galicia) ∧ (Spain(galicia) ⊕ Poland(galicia)) ::: There are two places named Galicia: either in Spain or in Poland.\nSpain(spain) ∧ Europe(spain) ::: Spain is in Europe.\nPoland(poland) ∧ Europe(poland) ::: Poland is in Europe.\nEurope(europe) ∧ Live(rochelle, europe) ::: Rochelle lives in Europe.\n¬Europe(europe) ∧ Live(dominique, europe) ::: Dominique does not live in Europe.\nGalicia(galicia) ∧ Live(alfonso, galicia) ::: Alfonso lives in Galicia.\nConclusion:\nEurope(europe) ∧ Live(alfonso, europe) ::: Alfonso lives in Europe.\n------\nProblem:"
    ]
  },
  {
    "id": "FOLIO_train_569",
    "context": "Ralph Hammerthaler was born in Wasserburg am Inn. Wasserburg am Inn is in Germany. Germany is in Europe. Ralph Hammerthaler is a German writer. Ralph Hammerthaler was born in 1965.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Ralph Hammerthaler is a writer born in Asia.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBorn(x, y) ::: x was born in y.\nIn(x, y) ::: x is in y.\nWriter(x) ::: x is a writer.\nGerman(x) ::: x is a German person.\nEuropean(x) ::: x is a European person.\nAsian(x) ::: x is an Asian person.\nPremises:\nBorn(ralphHammerthaler, wasserburgAmInn) ::: Ralph Hammerthaler was born in Wasserburg am Inn.\nIn(wasserburgAmInn, germany) ::: Wasserburg am Inn is in Germany.\nIn(germany, europe) ::: Germany is in Europe.\nGerman(ralphHammerthaler) ::: Ralph Hammerthaler is a German writer.\nBorn(ralphHammerthaler, year1965) ::: Ralph Hammerthaler was born in 1965.\nConclusion:\nWriter(ralphHammerthaler) ∧ Born(ralphHammerthaler, asia) ::: Ralph Hammerthaler is a writer born in Asia.\n------\nProblem:\nThe number of people who are not in the room"
    ]
  },
  {
    "id": "FOLIO_train_570",
    "context": "Ralph Hammerthaler was born in Wasserburg am Inn. Wasserburg am Inn is in Germany. Germany is in Europe. Ralph Hammerthaler is a German writer. Ralph Hammerthaler was born in 1965.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Ralph Hammerthaler lives in Germany.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBorn(x, y) ::: x was born in y.\nIn(x, y) ::: x is in y.\nWriter(x) ::: x is a writer.\nGerman(x) ::: x is German.\nYear(x) ::: x is a year.\nPremises:\nBorn(ralphHammerthaler, wasserburgAmInn) ::: Ralph Hammerthaler was born in Wasserburg am Inn.\nIn(wasserburgAmInn, germany) ::: Wasserburg am Inn is in Germany.\nIn(germany, europe) ::: Germany is in Europe.\nGerman(ralphHammerthaler) ::: Ralph Hammerthaler is a German writer.\nBorn(ralphHammerthaler, year1965) ::: Ralph Hammerthaler was born in 1965.\nConclusion:\nIn(ralphHammerthaler, germany) ::: Ralph Hammerthaler lives in Germany.\n------"
    ]
  },
  {
    "id": "FOLIO_train_571",
    "context": "All books written by Tomas have sold more than 1 million copies. Some books that have won Hugo Awards are written by Tomas. All books about the future are inspired by Shakespeare. 2001 is a book either inspired from Shakespeare or it has sold more than 1 million copies. 2001 is a book that has either sold more than 1 million copies or it was written by Tomas.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? 2001 is a book that has won a Hugo Award.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBook(x) ::: x is a book.\nWrittenBy(x, y) ::: x is written by y.\nSold(x, y) ::: x has sold y copies.\nHugoAward(x) ::: x has won a Hugo Award.\nInspired(x, y) ::: x is inspired from y.\nAbout(x, y) ::: x is about y.\nFuture(x) ::: x is about the future.\nShakespeare(x) ::: x is inspired from Shakespeare.\nTomas(x) ::: x is written by Tomas.\nPremises:\n∀x (Tomas(x) → Sold(x, million)) ::: All books written by Tomas have sold more than 1 million copies.\n∃x (HugoAward(x) ∧ WrittenBy(tomas, x)) ::: Some books that have won Hugo Awards are written by Tomas.\n∀x (Future(x) → Inspired(x"
    ]
  },
  {
    "id": "FOLIO_train_572",
    "context": "All books written by Tomas have sold more than 1 million copies. Some books that have won Hugo Awards are written by Tomas. All books about the future are inspired by Shakespeare. 2001 is a book either inspired from Shakespeare or it has sold more than 1 million copies. 2001 is a book that has either sold more than 1 million copies or it was written by Tomas.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? 2001 is a book that has won a Hugo Award and is about the future.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBook(x) ::: x is a book.\nWrittenBy(x, y) ::: x is written by y.\nSold(x, y) ::: x has sold y copies.\nHugoAward(x) ::: x has won a Hugo Award.\nInspired(x, y) ::: x is inspired from y.\nAbout(x, y) ::: x is about y.\nPremises:\n∀x (Book(x) ∧ WrittenBy(tomas, x) → Sold(x, million)) ::: All books written by Tomas have sold more than 1 million copies.\n∃x (Book(x) ∧ HugoAward(x) ∧ WrittenBy(tomas, x)) ::: Some books that have won Hugo Awards are written by Tomas.\n∀x (Book(x) ∧ About(x, future) → Inspired(x, shakespeare)) ::: All books about the future are inspired by"
    ]
  },
  {
    "id": "FOLIO_train_573",
    "context": "All books written by Tomas have sold more than 1 million copies. Some books that have won Hugo Awards are written by Tomas. All books about the future are inspired by Shakespeare. 2001 is a book either inspired from Shakespeare or it has sold more than 1 million copies. 2001 is a book that has either sold more than 1 million copies or it was written by Tomas.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If 2001 either has won a Hugo Award and is about the future, or neither has won a Hugo Award nor is about the future, then 2001 has neither won a Hugo Award nor is written by Tomas.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBook(x) ::: x is a book.\nWrittenBy(x, y) ::: x is written by y.\nSold(x, y) ::: x has sold y copies.\nHugoAward(x) ::: x has won a Hugo Award.\nAbout(x, y) ::: x is about y.\nInspired(x, y) ::: x is inspired by y.\nFuture(x) ::: x is about the future.\nTomas(x) ::: x is written by Tomas.\nPremises:\n∀x (Tomas(x) → Sold(x, million)) ::: All books written by Tomas have sold more than 1 million copies.\n∃x (HugoAward(x) ∧ WrittenBy(tomas, x)) ::: Some books that have won Hugo Awards are written by Tomas.\n∀x (Future(x) → Inspired(x, shakespeare)) ::: All books about the future are inspired by"
    ]
  },
  {
    "id": "FOLIO_train_574",
    "context": "No grass is food. All meadows are grass. All edible things are food. All fruits are edible. All lemons are fruit. Grapes are not edible and lemons. Bananas are grass or fruit.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Grapes are a food.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGrass(x) ::: x is grass.\nFood(x) ::: x is food.\nMeadow(x) ::: x is a meadow.\nEdible(x) ::: x is edible.\nFruit(x) ::: x is fruit.\nLemon(x) ::: x is a lemon.\nGrape(x) ::: x is a grape.\nBanana(x) ::: x is a banana.\nPremises:\n∀x (Grass(x) → ¬Food(x)) ::: No grass is food.\n∀x (Meadow(x) → Grass(x)) ::: All meadows are grass.\n∀x (Edible(x) → Food(x)) ::: All edible things are food.\n∀x (Fruit(x) → Edible(x)) ::: All fruits are edible.\n∀x (Lemon(x) → Fruit(x)) :::"
    ]
  },
  {
    "id": "FOLIO_train_575",
    "context": "No grass is food. All meadows are grass. All edible things are food. All fruits are edible. All lemons are fruit. Grapes are not edible and lemons. Bananas are grass or fruit.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Grapes are not a food.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGrass(x) ::: x is grass.\nFood(x) ::: x is food.\nMeadow(x) ::: x is a meadow.\nEdible(x) ::: x is edible.\nFruit(x) ::: x is fruit.\nLemon(x) ::: x is a lemon.\nGrape(x) ::: x is a grape.\nBanana(x) ::: x is a banana.\nPremises:\n∀x (Grass(x) → ¬Food(x)) ::: No grass is food.\n∀x (Meadow(x) → Grass(x)) ::: All meadows are grass.\n∀x (Edible(x) → Food(x)) ::: All edible things are food.\n∀x (Fruit(x) → Edible(x)) ::: All fruits are edible.\n∀x (Lemon(x) → Fruit(x)) :::"
    ]
  },
  {
    "id": "FOLIO_train_576",
    "context": "No grass is food. All meadows are grass. All edible things are food. All fruits are edible. All lemons are fruit. Grapes are not edible and lemons. Bananas are grass or fruit.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Bananas are a lemon and meadow.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGrass(x) ::: x is grass.\nFood(x) ::: x is food.\nMeadow(x) ::: x is a meadow.\nEdible(x) ::: x is edible.\nFruit(x) ::: x is fruit.\nLemon(x) ::: x is a lemon.\nGrape(x) ::: x is a grape.\nBanana(x) ::: x is a banana.\nPremises:\n∀x (Grass(x) → ¬Food(x)) ::: No grass is food.\n∀x (Meadow(x) → Grass(x)) ::: All meadows are grass.\n∀x (Edible(x) → Food(x)) ::: All edible things are food.\n∀x (Fruit(x) → Edible(x)) ::: All fruits are edible.\n∀x (Lemon(x) → Fruit(x)) :::"
    ]
  },
  {
    "id": "FOLIO_train_577",
    "context": "No grass is food. All meadows are grass. All edible things are food. All fruits are edible. All lemons are fruit. Grapes are not edible and lemons. Bananas are grass or fruit.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Bananas are not both a lemon and a meadow.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGrass(x) ::: x is grass.\nFood(x) ::: x is food.\nMeadow(x) ::: x is a meadow.\nEdible(x) ::: x is edible.\nFruit(x) ::: x is fruit.\nLemon(x) ::: x is a lemon.\nGrape(x) ::: x is a grape.\nBanana(x) ::: x is a banana.\nPremises:\n∀x (Grass(x) → ¬Food(x)) ::: No grass is food.\n∀x (Meadow(x) → Grass(x)) ::: All meadows are grass.\n∀x (Edible(x) → Food(x)) ::: All edible things are food.\n∀x (Fruit(x) → Edible(x)) ::: All fruits are edible.\n∀x (Lemon(x) → Fruit(x)) :::"
    ]
  },
  {
    "id": "FOLIO_train_578",
    "context": "The Golden State Warriors are a team from San Francisco. The Golden State Warriors won the NBA finals. All teams attending the NBA finals have more than thirty years of history. Boston Celtics are a team that lost the NBA finals. If a team wins the NBA finals, then they will have more income. If a team wins or loses at the NBA finals, then they are attending the finals.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Boston Celtics is from San Francisco.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTeam(x) ::: x is a team.\nFrom(x, y) ::: x is from y.\nWin(x, y) ::: x wins y.\nLose(x, y) ::: x loses y.\nAttend(x, y) ::: x attends y.\nFinals(x) ::: x is the NBA finals.\nIncome(x) ::: x has more income.\nHistory(x) ::: x has more than thirty years of history.\nPremises:\nTeam(goldenStateWarriors) ∧ From(goldenStateWarriors, sanFrancisco) ::: The Golden State Warriors are a team from San Francisco.\nWin(goldenStateWarriors, finals) ::: The Golden State Warriors won the NBA finals.\n∀x (Attend(x, finals) → History(x)) ::: All teams attending the NBA finals have more than thirty years of history.\nTeam(bostonCeltics) ∧ L"
    ]
  },
  {
    "id": "FOLIO_train_579",
    "context": "The Golden State Warriors are a team from San Francisco. The Golden State Warriors won the NBA finals. All teams attending the NBA finals have more than thirty years of history. Boston Celtics are a team that lost the NBA finals. If a team wins the NBA finals, then they will have more income. If a team wins or loses at the NBA finals, then they are attending the finals.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Boston Celtics has more than 30 years of experience.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTeam(x) ::: x is a team.\nWin(x) ::: x wins the NBA finals.\nLose(x) ::: x loses the NBA finals.\nAttend(x) ::: x attends the NBA finals.\nIncome(x) ::: x has more income.\nGoldenStateWarriors(x) ::: x is the Golden State Warriors.\nSanFrancisco(x) ::: x is from San Francisco.\nBostonCeltics(x) ::: x is the Boston Celtics.\nHistory(x, y) ::: x has y years of history.\nPremises:\nTeam(goldenStateWarriors) ∧ Win(goldenStateWarriors) ∧ SanFrancisco(goldenStateWarriors) ::: The Golden State Warriors are a team from San Francisco. The Golden State Warriors won the NBA finals.\n∀x (Attend(x) → History(x, year30)) ::: All teams attending the NBA"
    ]
  },
  {
    "id": "FOLIO_train_580",
    "context": "The Golden State Warriors are a team from San Francisco. The Golden State Warriors won the NBA finals. All teams attending the NBA finals have more than thirty years of history. Boston Celtics are a team that lost the NBA finals. If a team wins the NBA finals, then they will have more income. If a team wins or loses at the NBA finals, then they are attending the finals.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Golden State Warriors will have more income for gate receipts.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTeam(x) ::: x is a team.\nSanFrancisco(x) ::: x is a team from San Francisco.\nWin(x) ::: x wins the NBA finals.\nLose(x) ::: x loses the NBA finals.\nAttend(x) ::: x attends the NBA finals.\nHistory(x) ::: x has more than thirty years of history.\nIncome(x) ::: x has more income.\nGateReceipts(x) ::: x has more income for gate receipts.\nPremises:\nTeam(goldenStateWarriors) ∧ SanFrancisco(goldenStateWarriors) ::: The Golden State Warriors are a team from San Francisco.\nWin(goldenStateWarriors) ::: The Golden State Warriors won the NBA finals.\n∀x (Attend(x) → History(x)) ::: All teams attending the NBA finals have more than thirty years of history.\nTeam(bostonCeltics) ∧ Lose(bostonCeltics) ::: Boston Celtics are a team that lost the NBA finals.\n∀x (Win(x) → Income(x)) ::: If a team wins the NBA finals, then they will have more income.\n∀x (Win(x) ⊕ Lose(x) → Attend(x)) ::: If a team wins or loses at the NBA finals, then they are attending the finals.\nConclusion:\nIncome(goldenStateWarriors) ::: The Golden State Warriors will have more income.\nGateReceipts(goldenStateWarriors) ::: The Golden State Warriors will have more income for gate receipts.\n------"
    ]
  },
  {
    "id": "FOLIO_train_581",
    "context": "Maya will play violin if and only if she never injures her fingers. Volleyball players can injure their ankle, fingers, or shoulder. Maya is a volleyball player.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Maya will not play violin.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPlay(x, y) ::: x will play y.\nViolin(x) ::: x is a violin.\nInjure(x, y) ::: x can injure y.\nAnkle(x) ::: x is an ankle.\nFinger(x) ::: x is a finger.\nShoulder(x) ::: x is a shoulder.\nVolleyballPlayer(x) ::: x is a volleyball player.\nPremises:\nPlay(maya, violin) ↔ ¬∃x (Injure(maya, x) ∧ Finger(x)) ::: Maya will play violin if and only if she never injures her fingers.\n∀x (VolleyballPlayer(x) → (Injure(x, ankle) ∨ Injure(x, finger) ∨ Injure(x, shoulder))) ::: Volleyball players can injure their ankle, fingers, or shoulder.\nVolleyballPlayer(maya) ::: Maya is a volleyball player.\nConclusion:\n¬Play(maya, violin) ::: Maya will not play violin.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent"
    ]
  },
  {
    "id": "FOLIO_train_582",
    "context": "All devices belonging to the company are connected to Google Home. All devices with the company logo belong to the company. A device is either with the company logo or belongs to employees. All devices belonging to employees are available to connect to the company's wifi. All devices connected to Google Home are controlled by managers. All devices that connect to the company's wifi are easy to operate. All devices that are easy to operate are produced after 2020. IPod1 is produced before 2020.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? IPod1 is controlled by managers.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBelong(x, y) ::: x belongs to y.\nLogo(x) ::: x has the company logo.\nDevice(x) ::: x is a device.\nEmployee(x) ::: x is an employee.\nAvailable(x, y) ::: x is available to connect to y.\nConnect(x, y) ::: x is connected to y.\nControl(x, y) ::: x is controlled by y.\nOperate(x) ::: x is easy to operate.\nProduce(x, y) ::: x is produced in year y.\nPremises:\n∀x (Device(x) ∧ Belong(x, company) → Connect(x, googleHome)) ::: All devices belonging to the company are connected to Google Home.\n∀x (Device(x) ∧ Logo(x) → Belong(x, company)) ::: All devices with the company logo belong to the company.\n∀x (Device(x) → (Logo(x) ⊕ Belong(x, employee))) ::: A device is either with the company logo or belongs to employees.\n∀x (Device(x) ∧ Belong(x, employee) → Available(x, companyWifi)) ::: All devices belonging to employees are available to connect to the company's wifi.\n∀x (Device(x) ∧ Connect(x, googleHome) → Control(x, manager)) ::: All devices connected to Google Home are controlled by managers.\n∀x (Device(x) ∧ Available(x, companyWifi) → Operate(x)) ::: All devices that connect to the company's wifi are easy to operate.��"
    ]
  },
  {
    "id": "FOLIO_train_583",
    "context": "All devices belonging to the company are connected to Google Home. All devices with the company logo belong to the company. A device is either with the company logo or belongs to employees. All devices belonging to employees are available to connect to the company's wifi. All devices connected to Google Home are controlled by managers. All devices that connect to the company's wifi are easy to operate. All devices that are easy to operate are produced after 2020. IPod1 is produced before 2020.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? IPod1 is either produced after 2020 or controlled by managers.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBelong(x, y) ::: x belongs to y.\nLogo(x) ::: x has the company logo.\nDevice(x) ::: x is a device.\nEmployee(x) ::: x is an employee.\nAvailable(x, y) ::: x is available to connect to y.\nConnect(x, y) ::: x is connected to y.\nControl(x, y) ::: x is controlled by y.\nEasy(x) ::: x is easy to operate.\nProduce(x, y) ::: x is produced in year y.\nPremises:\n∀x (Belong(x, company) → Connect(x, googleHome)) ::: All devices belonging to the company are connected to Google Home.\n∀x (Logo(x) → Belong(x, company)) ::: All devices with the company logo belong to the company.\n∀x (Device(x) → (Logo(x) ⊕ Belong(x, employee))) ::: A device is either with the company logo or belongs to employees.\n∀x (Belong(x, employee) → Available(x, companyWifi)) ::: All devices belonging to employees are available to connect to the company's wifi.\n∀x (Connect(x, googleHome) → Control(x, manager)) ::: All devices connected to Google Home are controlled by managers.\n∀x (Available(x, companyWifi) → Easy(x)) ::: All devices that connect to the company's wifi are easy to operate.\n∀x (Easy(x) → Produce(x, year2020)) ::: All devices that are easy to operate are produced after 2020.\nProdu"
    ]
  },
  {
    "id": "FOLIO_train_584",
    "context": "All devices belonging to the company are connected to Google Home. All devices with the company logo belong to the company. A device is either with the company logo or belongs to employees. All devices belonging to employees are available to connect to the company's wifi. All devices connected to Google Home are controlled by managers. All devices that connect to the company's wifi are easy to operate. All devices that are easy to operate are produced after 2020. IPod1 is produced before 2020.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? IPod1 is not with the company logo, and managers do not control it.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBelong(x, y) ::: x belongs to y.\nLogo(x) ::: x has the company logo.\nDevice(x) ::: x is a device.\nEmployee(x) ::: x is an employee.\nAvailable(x, y) ::: x is available to connect to y.\nConnect(x, y) ::: x is connected to y.\nControl(x, y) ::: x controls y.\nEasy(x) ::: x is easy to operate.\nProduce(x, y) ::: x is produced in year y.\nPremises:\n∀x (Device(x) ∧ Belong(x, company) → Connect(x, googleHome)) ::: All devices belonging to the company are connected to Google Home.\n∀x (Device(x) ∧ Logo(x) → Belong(x, company)) ::: All devices with the company logo belong to the company.\n∀x (Device(x) → (Logo(x) ⊕ Belong(x, employee))) ::: A device is either with the company logo or belongs to employees.\n∀x (Device(x) ∧ Belong(x, employee) → Available(x, companyWifi)) ::: All devices belonging to employees are available to connect to the company's wifi.\n∀x (Device(x) ∧ Connect(x, googleHome) → Control(manager, x)) ::: All devices connected to Google Home are controlled by managers.\n∀x (Device(x) ∧ Available(x, companyWifi) → Easy(x)) ::: All devices that connect to the company's wifi are easy to operate.\n∀x"
    ]
  },
  {
    "id": "FOLIO_train_585",
    "context": "All devices belonging to the company are connected to Google Home. All devices with the company logo belong to the company. A device is either with the company logo or belongs to employees. All devices belonging to employees are available to connect to the company's wifi. All devices connected to Google Home are controlled by managers. All devices that connect to the company's wifi are easy to operate. All devices that are easy to operate are produced after 2020. IPod1 is produced before 2020.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? IPod1 is either with the company logo or controlled by managers.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBelong(x, y) ::: x belongs to y.\nLogo(x) ::: x has the company logo.\nDevice(x) ::: x is a device.\nEmployee(x) ::: x is an employee.\nAvailable(x, y) ::: x is available to connect to y.\nConnect(x, y) ::: x is connected to y.\nControl(x, y) ::: x is controlled by y.\nEasy(x) ::: x is easy to operate.\nProduce(x, y) ::: x is produced in year y.\nPremises:\n∀x (Device(x) ∧ Belong(x, company) → Connect(x, googleHome)) ::: All devices belonging to the company are connected to Google Home.\n∀x (Device(x) ∧ Logo(x) → Belong(x, company)) ::: All devices with the company logo belong to the company.\n∀x (Device(x) → (Logo(x) ⊕ Belong(x, employee))) ::: A device is either with the company logo or belongs to employees.\n∀x (Device(x) ∧ Belong(x, employee) → Available(x, companyWifi)) ::: All devices belonging to employees are available to connect to the company's wifi.\n∀x (Device(x) ∧ Connect(x, googleHome) → Control(x, manager)) ::: All devices connected to Google Home are controlled by managers.\n∀x (Device(x) ∧ Available(x, companyWifi) → Easy(x)) ::: All devices that connect to the company's wifi are easy to operate.���"
    ]
  },
  {
    "id": "FOLIO_train_586",
    "context": "All CD players are delicate mechanisms. No delicate mechanisms are suitable toys for children.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Some CD players are suitable toys for children.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCDPlayer(x) ::: x is a CD player.\nDelicate(x) ::: x is a delicate mechanism.\nSuitable(x, y) ::: x is a suitable toy for y.\nPremises:\n∀x (CDPlayer(x) → Delicate(x)) ::: All CD players are delicate mechanisms.\n∀x (Delicate(x) → ¬Suitable(x, child)) ::: No delicate mechanisms are suitable toys for children.\nConclusion:\n∃x (CDPlayer(x) ∧ Suitable(x, child)) ::: Some CD players are suitable toys for children.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who"
    ]
  },
  {
    "id": "FOLIO_train_587",
    "context": "All mammals are living beings. All elephants are mammals. All baby elephants are elephants. Some baby elephants are sleepy. If Jumbo is a living being, then Jumbo is not an elephant or a mammal. If Jumbo is sleepy, then Jumbo is a baby elephant or an elephant.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jumbo is sleepy.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLivingBeing(x) ::: x is a living being.\nMammal(x) ::: x is a mammal.\nElephant(x) ::: x is an elephant.\nBabyElephant(x) ::: x is a baby elephant.\nSleepy(x) ::: x is sleepy.\nJumbo(x) ::: x is Jumbo.\nPremises:\n∀x (Mammal(x) → LivingBeing(x)) ::: All mammals are living beings.\n∀x (Elephant(x) → Mammal(x)) ::: All elephants are mammals.\n∀x (BabyElephant(x) → Elephant(x)) ::: All baby elephants are elephants.\n∃x (BabyElephant(x) ∧ Sleepy(x)) ::: Some baby elephants are sleepy.\nJumbo(jumbo) ∧ LivingBeing(jumbo) → ¬(Elephant(jumbo) ∨ Mammal(jumbo)) ::: If Jumbo is a living being, then Jumbo is not an elephant or a mammal.\nJumbo(jumbo) ∧ Sleepy(jumbo) → (BabyElephant(jumbo) ∨ Elephant(jumbo)) ::: If Jumbo is sleepy, then Jumbo is a baby elephant or an elephant.\nConclusion:\nSleepy(jumbo) ::: Jumbo is sleepy.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People"
    ]
  },
  {
    "id": "FOLIO_train_588",
    "context": "All mammals are living beings. All elephants are mammals. All baby elephants are elephants. Some baby elephants are sleepy. If Jumbo is a living being, then Jumbo is not an elephant or a mammal. If Jumbo is sleepy, then Jumbo is a baby elephant or an elephant.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jumbo is not sleepy.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLivingBeing(x) ::: x is a living being.\nMammal(x) ::: x is a mammal.\nElephant(x) ::: x is an elephant.\nBabyElephant(x) ::: x is a baby elephant.\nSleepy(x) ::: x is sleepy.\nJumbo(x) ::: x is Jumbo.\nPremises:\n∀x (Mammal(x) → LivingBeing(x)) ::: All mammals are living beings.\n∀x (Elephant(x) → Mammal(x)) ::: All elephants are mammals.\n∀x (BabyElephant(x) → Elephant(x)) ::: All baby elephants are elephants.\n∃x (BabyElephant(x) ∧ Sleepy(x)) ::: Some baby elephants are sleepy.\nJumbo(jumbo) ∧ LivingBeing(jumbo) → ¬(Elephant(jumbo) ∨ Mammal(jumbo)) ::: If Jumbo is a living being, then Jumbo is not an elephant or a mammal.\nJumbo(jumbo) ∧ Sleepy(jumbo) → (BabyElephant(jumbo) ∨ Elephant(jumbo)) ::: If Jumbo is sleepy, then Jumbo is a baby elephant or an elephant.\nConclusion:\n¬Sleepy(jumbo) ::: Jumbo is not sleepy.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine"
    ]
  },
  {
    "id": "FOLIO_train_589",
    "context": "All mammals are living beings. All elephants are mammals. All baby elephants are elephants. Some baby elephants are sleepy. If Jumbo is a living being, then Jumbo is not an elephant or a mammal. If Jumbo is sleepy, then Jumbo is a baby elephant or an elephant.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jumbo is a living being.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLivingBeing(x) ::: x is a living being.\nMammal(x) ::: x is a mammal.\nElephant(x) ::: x is an elephant.\nBabyElephant(x) ::: x is a baby elephant.\nSleepy(x) ::: x is sleepy.\nJumbo(x) ::: x is Jumbo.\nPremises:\n∀x (Mammal(x) → LivingBeing(x)) ::: All mammals are living beings.\n∀x (Elephant(x) → Mammal(x)) ::: All elephants are mammals.\n∀x (BabyElephant(x) → Elephant(x)) ::: All baby elephants are elephants.\n∃x (BabyElephant(x) ∧ Sleepy(x)) ::: Some baby elephants are sleepy.\nJumbo(jumbo) ∧ LivingBeing(jumbo) → ¬(Elephant(jumbo) ∨ Mammal(jumbo)) ::: If Jumbo is a living being, then Jumbo is not an elephant or a mammal.\nJumbo(jumbo) ∧ Sleepy(jumbo) → (BabyElephant(jumbo) ∨ Elephant(jumbo)) ::: If Jumbo is sleepy, then Jumbo is a baby elephant or an elephant.\nConclusion:\nLivingBeing(jumbo) ::: Jumbo is a living being.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine"
    ]
  },
  {
    "id": "FOLIO_train_590",
    "context": "All mammals are living beings. All elephants are mammals. All baby elephants are elephants. Some baby elephants are sleepy. If Jumbo is a living being, then Jumbo is not an elephant or a mammal. If Jumbo is sleepy, then Jumbo is a baby elephant or an elephant.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jumbo is neither sleepy nor a baby elephant.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLivingBeing(x) ::: x is a living being.\nMammal(x) ::: x is a mammal.\nElephant(x) ::: x is an elephant.\nBabyElephant(x) ::: x is a baby elephant.\nSleepy(x) ::: x is sleepy.\nJumbo(x) ::: x is Jumbo.\nPremises:\n∀x (Mammal(x) → LivingBeing(x)) ::: All mammals are living beings.\n∀x (Elephant(x) → Mammal(x)) ::: All elephants are mammals.\n∀x (BabyElephant(x) → Elephant(x)) ::: All baby elephants are elephants.\n∃x (BabyElephant(x) ∧ Sleepy(x)) ::: Some baby elephants are sleepy.\nJumbo(jumbo) ∧ LivingBeing(jumbo) → ¬(Elephant(jumbo) ∨ Mammal(jumbo)) ::: If Jumbo is a living being, then Jumbo is not an elephant or a mammal.\nJumbo(jumbo) ∧ Sleepy(jumbo) → (BabyElephant(jumbo) ∨ Elephant(jumbo)) ::: If Jumbo is sleepy, then Jumbo is a baby elephant or an elephant.\nConclusion:\n¬(Sleepy(jumbo) ∧ BabyElephant(jumbo)) ::: Jumbo is neither sleepy nor a baby elephant.\n------"
    ]
  },
  {
    "id": "FOLIO_train_591",
    "context": "All mammals are living beings. All elephants are mammals. All baby elephants are elephants. Some baby elephants are sleepy. If Jumbo is a living being, then Jumbo is not an elephant or a mammal. If Jumbo is sleepy, then Jumbo is a baby elephant or an elephant.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jumbo is not sleepy or an elephant.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLivingBeing(x) ::: x is a living being.\nMammal(x) ::: x is a mammal.\nElephant(x) ::: x is an elephant.\nBabyElephant(x) ::: x is a baby elephant.\nSleepy(x) ::: x is sleepy.\nJumbo(x) ::: x is Jumbo.\nPremises:\n∀x (Mammal(x) → LivingBeing(x)) ::: All mammals are living beings.\n∀x (Elephant(x) → Mammal(x)) ::: All elephants are mammals.\n∀x (BabyElephant(x) → Elephant(x)) ::: All baby elephants are elephants.\n∃x (BabyElephant(x) ∧ Sleepy(x)) ::: Some baby elephants are sleepy.\nJumbo(jumbo) ∧ LivingBeing(jumbo) → ¬(Elephant(jumbo) ∨ Mammal(jumbo)) ::: If Jumbo is a living being, then Jumbo is not an elephant or a mammal.\nJumbo(jumbo) ∧ Sleepy(jumbo) → (BabyElephant(jumbo) ∨ Elephant(jumbo)) ::: If Jumbo is sleepy, then Jumbo is a baby elephant or an elephant.\nConclusion:\n¬(Sleepy(jumbo) ∨ Elephant(jumbo)) ::: Jumbo is not sleepy or an elephant.\n------\nProblem"
    ]
  },
  {
    "id": "FOLIO_train_592",
    "context": "No faculty does homework. All students do homework. All kids are students. If someone works at a school, then they are faculty. If Jill works at a school or is a teacher, then Jill works at a school.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jill works at a school.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFaculty(x) ::: x is faculty.\nHomework(x) ::: x does homework.\nStudent(x) ::: x is a student.\nKid(x) ::: x is a kid.\nWork(x, y) ::: x works at y.\nSchool(x) ::: x is a school.\nTeacher(x) ::: x is a teacher.\nPremises:\n∀x (Faculty(x) → ¬Homework(x)) ::: No faculty does homework.\n∀x (Student(x) → Homework(x)) ::: All students do homework.\n∀x (Kid(x) → Student(x)) ::: All kids are students.\n∀x (Work(x, school) → Faculty(x)) ::: If someone works at a school, then they are faculty.\nWork(jill, school) ∨ Teacher(jill) ::: If Jill works at a school or is a teacher, then Jill works at a school.\nConclusion:\nWork(jill, school) ::: Jill works at a school.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the"
    ]
  },
  {
    "id": "FOLIO_train_593",
    "context": "No faculty does homework. All students do homework. All kids are students. If someone works at a school, then they are faculty. If Jill works at a school or is a teacher, then Jill works at a school.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jill is a kid.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFaculty(x) ::: x is faculty.\nHomework(x) ::: x does homework.\nStudent(x) ::: x is a student.\nKid(x) ::: x is a kid.\nWork(x, y) ::: x works at y.\nSchool(x) ::: x is a school.\nTeacher(x) ::: x is a teacher.\nPremises:\n∀x (Faculty(x) → ¬Homework(x)) ::: No faculty does homework.\n∀x (Student(x) → Homework(x)) ::: All students do homework.\n∀x (Kid(x) → Student(x)) ::: All kids are students.\n∀x (Work(x, school) → Faculty(x)) ::: If someone works at a school, then they are faculty.\nWork(jill, school) ∨ Teacher(jill) ::: If Jill works at a school or is a teacher, then Jill works at a school.\nConclusion:\nKid(jill) ::: Jill is a kid.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information"
    ]
  },
  {
    "id": "FOLIO_train_594",
    "context": "No faculty does homework. All students do homework. All kids are students. If someone works at a school, then they are faculty. If Jill works at a school or is a teacher, then Jill works at a school.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jill is not a kid.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFaculty(x) ::: x is faculty.\nHomework(x) ::: x does homework.\nStudent(x) ::: x is a student.\nKid(x) ::: x is a kid.\nWork(x, y) ::: x works at y.\nSchool(x) ::: x is a school.\nTeacher(x) ::: x is a teacher.\nPremises:\n∀x (Faculty(x) → ¬Homework(x)) ::: No faculty does homework.\n∀x (Student(x) → Homework(x)) ::: All students do homework.\n∀x (Kid(x) → Student(x)) ::: All kids are students.\n∀x (Work(x, school) → Faculty(x)) ::: If someone works at a school, then they are faculty.\nWork(jill, school) ∨ Teacher(jill) ::: If Jill works at a school or is a teacher, then Jill works at a school.\nConclusion:\n¬Kid(jill) ::: Jill is not a kid.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the"
    ]
  },
  {
    "id": "FOLIO_train_595",
    "context": "Either Max listens to classical music or Max listens to rap. All the songs that Max listens to that are classical music are from the 12th century. If the song Max listens to is rap, then the song is from Kanye West. If a songs is from Kanye West, then the song is full of lyrics. All songs that are full of lyrics need to be written with words If “As it was” by Harry Styles is classical music that Max listens to or  from the 12th century, then “As it was” by Harry Styles is either classical music that Max listens to, or the songs are from 12th century.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? “As it was” by Harry Styles needs to be written with words.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nClassicalMusic(x) ::: x is classical music.\nRap(x) ::: x is rap.\nStyles(x) ::: x is Harry Styles.\nStylesSong(x) ::: x is a song by Harry Styles.\nListen(x, y) ::: x listens to y.\nTwelfthCentury(x) ::: x is from the 12th century.\nKanyeWest(x) ::: x is from Kanye West.\nFullOfLyrics(x) ::: x is full of lyrics.\nWrittenWithWords(x) ::: x needs to be written with words.\nPremises:\n(ClassicalMusic(asItWas) ∧ Listen(max, asItWas)) ∨ (Rap(asItWas) ∧ Listen(max, asItWas)) ::: Either Max listens to classical music or Max listens to rap.\n∀x (ClassicalMusic(x) ∧ Listen(max, x) → TwelfthCentury(x)) ::: All the songs that Max listens to that are classical music are from the 12th century.\n∀x (Rap(x) → KanyeWest(x)) ::: If the song Max listens to is rap, then the song is from Kanye West.\n∀x (KanyeWest(x) → FullOfLyrics(x)) ::: If a songs is from Kanye West, then the song is full of lyrics.\n∀x (FullOfLyrics(x) → WrittenWithWords(x)) ::: All songs that are full of lyrics need to be written with words.\n(ClassicalMusic(asItWas) ∨ Twelf"
    ]
  },
  {
    "id": "FOLIO_train_596",
    "context": "Either Max listens to classical music or Max listens to rap. All the songs that Max listens to that are classical music are from the 12th century. If the song Max listens to is rap, then the song is from Kanye West. If a songs is from Kanye West, then the song is full of lyrics. All songs that are full of lyrics need to be written with words If “As it was” by Harry Styles is classical music that Max listens to or  from the 12th century, then “As it was” by Harry Styles is either classical music that Max listens to, or the songs are from 12th century.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? \"As it was” by Harry Styles is a song from the 12th century.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nClassicalMusic(x) ::: x is classical music.\nRap(x) ::: x is rap.\nStyles(x) ::: x is Harry Styles.\nSong(x) ::: x is a song.\nListen(x, y) ::: x listens to y.\nFrom(x, y) ::: x is from y.\nKanyeWest(x) ::: x is Kanye West.\nFullOfLyrics(x) ::: x is full of lyrics.\nWrittenWithWords(x) ::: x is written with words.\nPremises:\n∀x (Listen(max, x) → (ClassicalMusic(x) ⊕ Rap(x))) ::: Either Max listens to classical music or Max listens to rap.\n∀x (ClassicalMusic(x) → From(x, year12thCentury)) ::: All the songs that Max listens to that are classical music are from the 12th century.\n∀x (Rap(x) → From(x, kanyeWest)) ::: If the song Max listens to is rap, then the song is from Kanye West.\n∀x (From(x, kanyeWest) → FullOfLyrics(x)) ::: If a songs is from Kanye West, then the song is full of lyrics.\n∀x (FullOfLyrics(x) → WrittenWithWords(x)) ::: All songs that are full of lyrics need to be written with words.\n(ClassicalMusic(asItWasByHarryStyles) ∨ From(asItWasByHarryStyles, year12thCentury)) → (ClassicalMusic(asItWasByHarryStyles) ��"
    ]
  },
  {
    "id": "FOLIO_train_597",
    "context": "Either Max listens to classical music or Max listens to rap. All the songs that Max listens to that are classical music are from the 12th century. If the song Max listens to is rap, then the song is from Kanye West. If a songs is from Kanye West, then the song is full of lyrics. All songs that are full of lyrics need to be written with words If “As it was” by Harry Styles is classical music that Max listens to or  from the 12th century, then “As it was” by Harry Styles is either classical music that Max listens to, or the songs are from 12th century.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? \"As it was” by Harry Styles is not a song from Kanye West and needs to be written with words.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nClassicalMusic(x) ::: x is classical music.\nRap(x) ::: x is rap.\nStyles(x) ::: x is Harry Styles.\nKanyeWest(x) ::: x is Kanye West.\nSong(x) ::: x is a song.\nListen(x, y) ::: x listens to y.\nFrom(x, y) ::: x is from y.\nFullOfLyrics(x) ::: x is full of lyrics.\nNeed(x, y) ::: x needs to be written with y.\nPremises:\n(ClassicalMusic(asItWas) ∧ Listen(max, asItWas)) ∨ (Rap(asItWas) ∧ Listen(max, asItWas)) ::: Either Max listens to classical music or Max listens to rap.\n∀x (ClassicalMusic(x) ∧ Listen(max, x) → From(x, year12thCentury)) ::: All the songs that Max listens to that are classical music are from the 12th century.\n∀x (Rap(x) → From(x, kanyeWest)) ::: If the song Max listens to is rap, then the song is from Kanye West.\n∀x (From(x, kanyeWest) → FullOfLyrics(x)) ::: If a songs is from Kanye West, then the song is full of lyrics.\n∀x (FullOfLyrics(x) → Need(x, words)) ::: All songs that are full of lyrics need to be written with words.\n(ClassicalMusic(asItWas) ∨ From(asItWas, year12thCentury"
    ]
  },
  {
    "id": "FOLIO_train_598",
    "context": "\"Your Woman\" is a song by British one-man band White Town. \"Your Woman\" song peaked at No. 1 on the UK Singles Chart. If a song peaked at No.1 at a cetain place, then it was extremely popular. \"Your Woman\" also peaked No. 1 in Iceland, Israel and Spain.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? \"Your Woman\" was extremely popular.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSong(x) ::: x is a song.\nPeak(x, y) ::: x peaked at y.\nPlace(x) ::: x is a place.\nExtremelyPopular(x) ::: x is extremely popular.\nPremises:\nSong(yourWoman) ∧ Peak(yourWoman, No1) ∧ Peak(yourWoman, Iceland) ∧ Peak(yourWoman, Israel) ∧ Peak(yourWoman, Spain) ::: \"Your Woman\" is a song by British one-man band White Town. \"Your Woman\" song peaked at No. 1 on the UK Singles Chart. \"Your Woman\" also peaked No. 1 in Iceland, Israel and Spain.\n∀x ∀y (Peak(x, y) → ExtremelyPopular(x)) ::: If a song peaked at No.1 at a cetain place, then it was extremely popular.\nConclusion:\nExtremelyPopular(yourWoman) ::: \"Your Woman\" was extremely popular.\n------\nProblem:\nThe 2010 FIFA World Cup was the 19th FIFA World Cup, the world championship for men's national association football teams. The 2010 FIFA World Cup was held in South Africa. The 2010 FIFA World Cup was the first time the tournament was held in Africa. The 2010 FIFA World Cup was the first World Cup to be held in a non-European and non-American country. The 2010 FIFA World Cup was the first World Cup to be held in a country that was not a former colony of a European country.\nQuestion:\nBased on the above information, is the following statement true, false,"
    ]
  },
  {
    "id": "FOLIO_train_599",
    "context": "\"Your Woman\" is a song by British one-man band White Town. \"Your Woman\" song peaked at No. 1 on the UK Singles Chart. If a song peaked at No.1 at a cetain place, then it was extremely popular. \"Your Woman\" also peaked No. 1 in Iceland, Israel and Spain.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? White Town did not produce any popular song.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSong(x) ::: x is a song.\nPeak(x, y) ::: x peaked at y.\nPopular(x) ::: x is popular.\nProduce(x, y) ::: x produced y.\nPremises:\nSong(yourWoman) ::: \"Your Woman\" is a song.\nPeak(yourWoman, uk) ∧ Peak(yourWoman, iceland) ∧ Peak(yourWoman, israel) ∧ Peak(yourWoman, spain) ::: \"Your Woman\" song peaked at No. 1 on the UK Singles Chart. \"Your Woman\" also peaked No. 1 in Iceland, Israel and Spain.\n∀x (Peak(x, uk) → Popular(x)) ::: If a song peaked at No.1 at a cetain place, then it was extremely popular.\nConclusion:\n¬∃x (Produce(whiteTown, x) ∧ Popular(x)) ::: White Town did not produce any popular song.\n------\nProblem:\nThe 2010 FIFA World Cup was the 19th FIFA World Cup, the world championship for men's national association football teams. The 2010 FIFA World Cup was held in South Africa. The 2010 FIFA World Cup was the first time the tournament was held in Africa. The 2010 FIFA World Cup was the first World Cup to use the goal-line technology. The 2010 FIFA World Cup was the first World Cup to be held in Africa.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The 2010 FIFA World Cup was the first World Cup to be held in Africa."
    ]
  },
  {
    "id": "FOLIO_train_600",
    "context": "\"Your Woman\" is a song by British one-man band White Town. \"Your Woman\" song peaked at No. 1 on the UK Singles Chart. If a song peaked at No.1 at a cetain place, then it was extremely popular. \"Your Woman\" also peaked No. 1 in Iceland, Israel and Spain.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? White Town was a successful band.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSong(x) ::: x is a song.\nPeak(x, y) ::: x peaked at y.\nPlace(x) ::: x is a place.\nExtremelyPopular(x) ::: x is extremely popular.\nBand(x) ::: x is a band.\nSuccessful(x) ::: x is a successful band.\nPremises:\nSong(yourWoman) ∧ Band(whiteTown) ∧ Peak(yourWoman, no1) ∧ Peak(yourWoman, iceland) ∧ Peak(yourWoman, israel) ∧ Peak(yourWoman, spain) ::: \"Your Woman\" is a song by British one-man band White Town. \"Your Woman\" song peaked at No. 1 on the UK Singles Chart. \"Your Woman\" also peaked No. 1 in Iceland, Israel and Spain.\n∀x ∀y (Peak(x, y) → ExtremelyPopular(x)) ::: If a song peaked at No.1 at a cetain place, then it was extremely popular.\nConclusion:\nSuccessful(whiteTown) ::: White Town was a successful band.\n------"
    ]
  },
  {
    "id": "FOLIO_train_601",
    "context": "All people who limp often and regularly have long-term medical issues with underlying causes. If people have long-term medical issues with underlying causes, then they are not often spry and energetic. People either stay indoors and rest a lot at home or people are often tired and disinterested in their activities. If people stay indoors and rest a lot at home, then they do not visit the gym at least once a day. If Mark either limps often and regularly or is often spry and energetic, then Mark limps often and regularly or is often tired and disinterested in his activities.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mark limps often and regularly.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLimps(x) ::: x limps often and regularly.\nLongTermMedicalIssues(x) ::: x has long-term medical issues with underlying causes.\nSpry(x) ::: x is often spry and energetic.\nStayIndoors(x) ::: x stays indoors and rests a lot at home.\nTired(x) ::: x is often tired and disinterested in his activities.\nVisitGym(x) ::: x visits the gym at least once a day.\nPremises:\n∀x (Limps(x) → LongTermMedicalIssues(x)) ::: All people who limp often and regularly have long-term medical issues with underlying causes.\n∀x (LongTermMedicalIssues(x) → ¬Spry(x)) ::: If people have long-term medical issues with underlying causes, then they are not often spry and energetic.\n∀x (StayIndoors(x) ⊕ Tired(x)) ::: People either stay indoors and rest a lot at home or people are often tired and disinterested in their activities.\n∀x (StayIndoors(x) → ¬VisitGym(x))"
    ]
  },
  {
    "id": "FOLIO_train_602",
    "context": "All people who limp often and regularly have long-term medical issues with underlying causes. If people have long-term medical issues with underlying causes, then they are not often spry and energetic. People either stay indoors and rest a lot at home or people are often tired and disinterested in their activities. If people stay indoors and rest a lot at home, then they do not visit the gym at least once a day. If Mark either limps often and regularly or is often spry and energetic, then Mark limps often and regularly or is often tired and disinterested in his activities.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mark visits the gym at least once a day.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLimps(x) ::: x limps often and regularly.\nLongTermMedicalIssues(x) ::: x has long-term medical issues with underlying causes.\nSpry(x) ::: x is often spry and energetic.\nStayIndoors(x) ::: x stays indoors and rests a lot at home.\nTired(x) ::: x is often tired and disinterested in his activities.\nVisit(x, y) ::: x visits y at least once a day.\nGym(x) ::: x is the gym.\nPremises:\n∀x (Limps(x) → LongTermMedicalIssues(x)) ::: All people who limp often and regularly have long-term medical issues with underlying causes.\n∀x (LongTermMedicalIssues(x) → ¬Spry(x)) ::: If people have long-term medical issues with underlying causes, then they are not often spry and energetic.\n∀x (StayIndoors(x) ⊕ Tired(x)) ::: People either stay indoors and rest a lot at home or people are often tired and disinterested in their activities.\n∀x (StayIndoors("
    ]
  },
  {
    "id": "FOLIO_train_603",
    "context": "All people who limp often and regularly have long-term medical issues with underlying causes. If people have long-term medical issues with underlying causes, then they are not often spry and energetic. People either stay indoors and rest a lot at home or people are often tired and disinterested in their activities. If people stay indoors and rest a lot at home, then they do not visit the gym at least once a day. If Mark either limps often and regularly or is often spry and energetic, then Mark limps often and regularly or is often tired and disinterested in his activities.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mark stays indoors and rests regularly at his home or visits the gym at least once a day.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLimps(x) ::: x limps often and regularly.\nLongTermMedicalIssues(x) ::: x has long-term medical issues with underlying causes.\nSpry(x) ::: x is often spry and energetic.\nStayIndoors(x) ::: x stays indoors.\nRest(x) ::: x rests a lot at home.\nVisitGym(x) ::: x visits the gym at least once a day.\nTired(x) ::: x is often tired and disinterested in his activities.\nPremises:\n∀x (Limps(x) → LongTermMedicalIssues(x)) ::: All people who limp often and regularly have long-term medical issues with underlying causes.\n∀x (LongTermMedicalIssues(x) → ¬Spry(x)) ::: If people have long-term medical issues with underlying causes, then they are not often spry and energetic.\n∀x (StayIndoors(x) ⊕ Rest(x)) ::: People either stay indoors and rest a lot at home or people are often tired and disinterested in their activities.\n∀x (StayIndoors(x) → ¬"
    ]
  },
  {
    "id": "FOLIO_train_604",
    "context": "If two soccer teams score the same number of goals in one UCL final during the regular time, they need to play for the extra time. If two soccer teams score the same number of goals in one UCL final during both the regular time and extra time, they need to play the penalty shoot-out. Real Madrid and Atlético Madrid both scored one goal in 2016 UCL final during the regular time. Real Madrid and Atlético Madrid both scored zero goals in 2016 UCL final during the extra time.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Real Madrid and Atlético Madrid needed to play a penalty shoot-out in 2016 UCL final.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nScore(x, y, z) ::: x scored y goals in z.\nUCLFinal(x) ::: x is a UCL final.\nRegularTime(x) ::: x is the regular time.\nExtraTime(x) ::: x is the extra time.\nPenaltyShootOut(x) ::: x is a penalty shoot-out.\nPremises:\n∀x (Score(x, y, regularTime) ∧ Score(x, z, regularTime) → Score(x, y, extraTime) ∧ Score(x, z, extraTime)) ::: If two soccer teams score the same number of goals in one UCL final during the regular time, they need to play for the extra time.\n∀x (Score(x, y, regularTime) ∧ Score(x, z, regularTime) ∧ Score(x, y, extraTime) ∧ Score(x, z, extraTime) → PenaltyShootOut(x)) ::: If two soccer teams score the same number of goals in one UCL final during both the regular time and extra time, they need to play the penalty shoot-out.\nScore(realMadrid, 1, 2016UCL"
    ]
  },
  {
    "id": "FOLIO_train_605",
    "context": "If two soccer teams score the same number of goals in one UCL final during the regular time, they need to play for the extra time. If two soccer teams score the same number of goals in one UCL final during both the regular time and extra time, they need to play the penalty shoot-out. Real Madrid and Atlético Madrid both scored one goal in 2016 UCL final during the regular time. Real Madrid and Atlético Madrid both scored zero goals in 2016 UCL final during the extra time.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Real Madrid and Atlético Madrid did not need to play a penalty shoot-out in 2016 UCL final.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTeam(x) ::: x is a soccer team.\nScore(x, y, z) ::: x scored y goals in z.\nUCLFinal(x) ::: x is a UCL final.\nRegularTime(x) ::: x is the regular time.\nExtraTime(x) ::: x is the extra time.\nPenaltyShootOut(x) ::: x is a penalty shoot-out.\nPremises:\nTeam(realMadrid) ∧ Team(atleticoMadrid) ::: Real Madrid and Atlético Madrid are soccer teams.\nUCLFinal(uclFinal2016) ::: 2016 UCL final is a UCL final.\nScore(realMadrid, 1, uclFinal2016) ∧ Score(atleticoMadrid, 1, uclFinal2016) ::: Real Madrid and Atlético Madrid both scored one goal in 2016 UCL final during the regular time.\nScore(realMadrid, 0, uclFinal2016) ∧ Score(atleticoMadrid, 0, uclFinal2016) ::: Real Madrid and Atlético Madrid both scored zero goals in 2016"
    ]
  },
  {
    "id": "FOLIO_train_606",
    "context": "System 7 is a UK-based electronic dance music band. Steve Hillage and Miquette Giraudy formed System 7. Steve Hillage and Miquette Giraudy are former members of the band Gong. Electric dance music bands are bands. System 7 has released several club singles. Club singles are not singles.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? System 7 was formed by former members of Gong.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nForm(x, y) ::: x is formed by y.\nMember(x, y) ::: x is a member of y.\nBand(x) ::: x is a band.\nSingle(x) ::: x is a single.\nClubSingle(x) ::: x is a club single.\nRelease(x, y) ::: x is released by y.\nPremises:\nBand(system7) ∧ Form(system7, steveHillage) ∧ Form(system7, miquetteGiraudy) ::: System 7 is a UK-based electronic dance music band. Steve Hillage and Miquette Giraudy formed System 7.\nMember(steveHillage, gong) ∧ Member(miquetteGiraudy, gong) ::: Steve Hillage and Miquette Giraudy are former members of the band Gong.\nBand(system7) ∧ Band(gong) ::: Electric dance music bands are bands.\nRelease(system7, severalClubSingles) ::: System 7 has released several club singles.\nClubSingle(severalClubSingles) ∧ ¬Single(severalClubSingles) ::"
    ]
  },
  {
    "id": "FOLIO_train_607",
    "context": "System 7 is a UK-based electronic dance music band. Steve Hillage and Miquette Giraudy formed System 7. Steve Hillage and Miquette Giraudy are former members of the band Gong. Electric dance music bands are bands. System 7 has released several club singles. Club singles are not singles.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? System 7 has released several singles.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nForm(x, y) ::: x is a former member of y.\nBand(x) ::: x is a band.\nElectronicDanceMusicBand(x) ::: x is an electronic dance music band.\nRelease(x, y) ::: x has released y.\nClubSingle(x) ::: x is a club single.\nSingle(x) ::: x is a single.\nPremises:\nBand(system7) ∧ Form(steveHillage, system7) ∧ Form(miquetteGiraudy, system7) ::: System 7 is a UK-based electronic dance music band. Steve Hillage and Miquette Giraudy formed System 7.\nForm(steveHillage, gong) ∧ Form(miquetteGiraudy, gong) ::: Steve Hillage and Miquette Giraudy are former members of the band Gong.\nElectronicDanceMusicBand(system7) ::: Electric dance music bands are bands.\nRelease(system7, severalClubSingles) ∧ ClubSingle(severalClubSingles) ::: System 7 has released several club singles.\nClubSingle(x) → ¬Single("
    ]
  },
  {
    "id": "FOLIO_train_608",
    "context": "System 7 is a UK-based electronic dance music band. Steve Hillage and Miquette Giraudy formed System 7. Steve Hillage and Miquette Giraudy are former members of the band Gong. Electric dance music bands are bands. System 7 has released several club singles. Club singles are not singles.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? System 7 is not a band.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBand(x) ::: x is a band.\nElectronicDanceMusicBand(x) ::: x is an electronic dance music band.\nFormerMember(x, y) ::: x is a former member of y.\nSingle(x) ::: x is a single.\nClubSingle(x) ::: x is a club single.\nRelease(x, y) ::: x has released y.\nPremises:\nBand(system7) ∧ ElectricDanceMusicBand(system7) ::: System 7 is a UK-based electronic dance music band.\nFormerMember(steveHillage, gong) ∧ FormerMember(miquetteGiraudy, gong) ::: Steve Hillage and Miquette Giraudy are former members of the band Gong.\n∀x (ElectronicDanceMusicBand(x) → Band(x)) ::: Electric dance music bands are bands.\nRelease(system7, severalClubSingles) ::: System 7 has released several club singles.\nClubSingle(severalClubSingles) ∧ ¬Single(severalClubSingles) ::: Club singles are not singles.\nConclusion:\n¬Band(system7)"
    ]
  },
  {
    "id": "FOLIO_train_609",
    "context": "A summarization model is always faithful if it uses content from the input documents. Extractive models are a kind of summarization models. Extractive model can only use content from the input documents.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Extractive models are always faithful.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSummarizationModel(x) ::: x is a summarization model.\nFaithful(x) ::: x is faithful.\nExtractiveModel(x) ::: x is an extractive model.\nUse(x, y) ::: x uses y.\nContent(x) ::: x is content.\nPremises:\n∀x (SummarizationModel(x) → Faithful(x)) ::: A summarization model is always faithful.\n∀x (ExtractiveModel(x) → SummarizationModel(x)) ::: Extractive models are a kind of summarization models.\n∀x (ExtractiveModel(x) → Use(x, Content(x))) ::: Extractive model can only use content from the input documents.\nConclusion:\n∀x (ExtractiveModel(x) → Faithful(x)) ::: Extractive models are always faithful.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student"
    ]
  },
  {
    "id": "FOLIO_train_610",
    "context": "A summarization model is always faithful if it uses content from the input documents. Extractive models are a kind of summarization models. Extractive model can only use content from the input documents.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Extractive models are not always faithful.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSummarizationModel(x) ::: x is a summarization model.\nFaithful(x) ::: x is faithful.\nExtractiveModel(x) ::: x is an extractive model.\nUse(x, y) ::: x uses y.\nContent(x) ::: x is content.\nPremises:\n∀x (SummarizationModel(x) → Faithful(x)) ::: A summarization model is always faithful.\n∀x (ExtractiveModel(x) → SummarizationModel(x)) ::: Extractive models are a kind of summarization models.\n∀x (ExtractiveModel(x) → Use(x, Content(x))) ::: Extractive model can only use content from the input documents.\nConclusion:\n∃x (ExtractiveModel(x) ∧ ¬Faithful(x)) ::: Extractive models are not always faithful.\n------"
    ]
  },
  {
    "id": "FOLIO_train_611",
    "context": "If people practice coding questions, then they are not studying to go to medical school to become a doctor. If people want to work in the software engineering industry, then they practice coding questions. If people enjoy healthcare fields and want to help people with medical issues, then they are studying to go to medical school to become a doctor. If people grew up with parents who worked as doctors, then they enjoy healthcare fields and want to help people with medical issues. If people study hard, then they grew up with parents who worked as doctors. If Robin neither enjoys healthcare fields and wants to help people with medical issues nor grew up with parents who worked as doctors, then Robin is either a person who studies hard or grew up with parents who worked as doctors.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Robin is a person who studies hard.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPractice(x) ::: x practices coding questions.\nStudy(x) ::: x is studying to go to medical school to become a doctor.\nWork(x) ::: x wants to work in the software engineering industry.\nEnjoy(x, y) ::: x enjoys y.\nHelp(x, y) ::: x wants to help people with y.\nParent(x, y) ::: x is a parent of y.\nGrewUp(x, y) ::: x grew up with y.\nHard(x) ::: x studies hard.\nPremises:\n∀x (Practice(x) → ¬Study(x)) ::: If people practice coding questions, then they are not studying to go to medical school to become a doctor.\n∀x (Work(x) → Practice(x)) ::: If people want to work in the software engineering industry, then they practice coding questions.\n∀x (En"
    ]
  },
  {
    "id": "FOLIO_train_612",
    "context": "If people practice coding questions, then they are not studying to go to medical school to become a doctor. If people want to work in the software engineering industry, then they practice coding questions. If people enjoy healthcare fields and want to help people with medical issues, then they are studying to go to medical school to become a doctor. If people grew up with parents who worked as doctors, then they enjoy healthcare fields and want to help people with medical issues. If people study hard, then they grew up with parents who worked as doctors. If Robin neither enjoys healthcare fields and wants to help people with medical issues nor grew up with parents who worked as doctors, then Robin is either a person who studies hard or grew up with parents who worked as doctors.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Robin practices coding questions and wants to work in the software engineering industry.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPractice(x) ::: x practices coding questions.\nStudy(x) ::: x is studying to go to medical school to become a doctor.\nWork(x) ::: x wants to work in the software engineering industry.\nEnjoy(x, y) ::: x enjoys y.\nHelp(x, y) ::: x wants to help people with y.\nMedical(x) ::: x is a medical issue.\nParent(x, y) ::: x is a parent of y.\nGrow(x, y) ::: x grew up with y.\nHard(x) ::: x studies hard.\nPremises:\n∀x (Practice(x) → ¬Study(x)) ::: If people practice coding questions, then they are not studying to go to medical school to become a doctor.\n∀x (Work(x) → Practice(x)) ::: If people want to work in the software engineering industry,"
    ]
  },
  {
    "id": "FOLIO_train_613",
    "context": "If people practice coding questions, then they are not studying to go to medical school to become a doctor. If people want to work in the software engineering industry, then they practice coding questions. If people enjoy healthcare fields and want to help people with medical issues, then they are studying to go to medical school to become a doctor. If people grew up with parents who worked as doctors, then they enjoy healthcare fields and want to help people with medical issues. If people study hard, then they grew up with parents who worked as doctors. If Robin neither enjoys healthcare fields and wants to help people with medical issues nor grew up with parents who worked as doctors, then Robin is either a person who studies hard or grew up with parents who worked as doctors.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Robin neither practices coding questions nor works to work in the software engineering industry.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPractice(x) ::: x practices coding questions.\nStudy(x) ::: x is studying to go to medical school to become a doctor.\nWork(x) ::: x works in the software engineering industry.\nEnjoy(x, y) ::: x enjoys y.\nHelp(x, y) ::: x wants to help people with y.\nMedical(x) ::: x is a medical issue.\nParent(x, y) ::: x is a parent of y.\nGrow(x, y) ::: x grew up with y.\nHard(x) ::: x studies hard.\nPremises:\n∀x (Practice(x) → ¬Study(x)) ::: If people practice coding questions, then they are not studying to go to medical school to become a doctor.\n∀x (Work(x) → Practice(x)) ::: If people want to work in the software engineering industry, then they"
    ]
  },
  {
    "id": "FOLIO_train_614",
    "context": "If people go to the spa at least once a week, then they are not people who are miserly and need to save a large portion of their income. People are either miserly and need to save a large portion of their income, or people that frivolously spend a lot of money every time they go out. If people frivolously spend a lot of money every time they go out, then they value quality manufacturing and luxury items. If people value quality manufacturing and luxury items, then they enjoy shopping for materialistic items in their free time. If Jess is not miserly and needs to save a large portion of their income, then Jess does not value quality manufacturing and luxury items. If Jess either values quality manufacturing and luxury items or, if he does not, then he is miserly and needs to save a large portion of his income, then Jess frivolously spends a lot of money every time he goes out.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jess frivolously spends a lot of money every time they go out.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGoToSpa(x) ::: x goes to the spa at least once a week.\nMiserly(x) ::: x is miserly and needs to save a large portion of their income.\nFrivolous(x) ::: x frivolously spends a lot of money every time they go out.\nValue(x, y) ::: x values y.\nManufacturing(x) ::: x is quality manufacturing.\nLuxury(x) ::: x is a luxury item.\nShop(x) ::: x enjoys shopping for materialistic items in their free time.\nPremises:\n∀x (GoToSpa(x) → ¬Miserly(x)) ::: If people go to the spa at least once a week, then they are not people who are miserly and need to save a large portion of their income.\n∀x (Miserly(x) ⊕ Frivolous"
    ]
  },
  {
    "id": "FOLIO_train_615",
    "context": "If people go to the spa at least once a week, then they are not people who are miserly and need to save a large portion of their income. People are either miserly and need to save a large portion of their income, or people that frivolously spend a lot of money every time they go out. If people frivolously spend a lot of money every time they go out, then they value quality manufacturing and luxury items. If people value quality manufacturing and luxury items, then they enjoy shopping for materialistic items in their free time. If Jess is not miserly and needs to save a large portion of their income, then Jess does not value quality manufacturing and luxury items. If Jess either values quality manufacturing and luxury items or, if he does not, then he is miserly and needs to save a large portion of his income, then Jess frivolously spends a lot of money every time he goes out.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jess either enjoys shopping for materialistic items in his free time or, if he does not, then he goes to the spa at least once a week.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGoToSpa(x) ::: x goes to the spa at least once a week.\nMiserly(x) ::: x is miserly and needs to save a large portion of their income.\nFrivolous(x) ::: x frivolously spends a lot of money every time they go out.\nValue(x, y) ::: x values y.\nManufacturing(x) ::: x is quality manufacturing.\nLuxury(x) ::: x is a luxury item.\nShop(x) ::: x enjoys shopping for materialistic items in his free time.\nPremises:\n∀x (GoToSpa(x) → ¬Miserly(x)) ::: If people go to the spa at least once a week, then they are not people who are miserly and need to save a large portion of their income.\n∀x (Miserly(x) ⊕ Frivolous"
    ]
  },
  {
    "id": "FOLIO_train_616",
    "context": "If people go to the spa at least once a week, then they are not people who are miserly and need to save a large portion of their income. People are either miserly and need to save a large portion of their income, or people that frivolously spend a lot of money every time they go out. If people frivolously spend a lot of money every time they go out, then they value quality manufacturing and luxury items. If people value quality manufacturing and luxury items, then they enjoy shopping for materialistic items in their free time. If Jess is not miserly and needs to save a large portion of their income, then Jess does not value quality manufacturing and luxury items. If Jess either values quality manufacturing and luxury items or, if he does not, then he is miserly and needs to save a large portion of his income, then Jess frivolously spends a lot of money every time he goes out.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Jess either enjoys shopping for materialistic items in his free time or, if he does not, then he goes to the spa at least once a week, then Jess neither values quality manufacturing and luxury items nor goes to the spa at least once a week.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGoToSpa(x) ::: x goes to the spa at least once a week.\nMiserly(x) ::: x is miserly and needs to save a large portion of their income.\nFrivolous(x) ::: x frivolously spends a lot of money every time he goes out.\nValue(x, y) ::: x values y.\nQualityManufacturing(x) ::: x values quality manufacturing and luxury items.\nEnjoy(x, y) ::: x enjoys y.\nMaterialisticItems(x) ::: x enjoys shopping for materialistic items in his free time.\nPremises:\n∀x (GoToSpa(x) → ¬Miserly(x)) ::: If people go to the spa at least once a week, then they are not people who are miserly and need to save a large portion of their income.\n∀x (Miserly(x)"
    ]
  },
  {
    "id": "FOLIO_train_617",
    "context": "The indie pop band Phoenix has released 6 albums. Phoenix's album \"Wolfgang Amadeus Phoenix\" sold over 500,000 copies. A certified gold album or single is one which sold over half a million copies. \"1901\" is a single from Phoenix's album \"Wolfgang Amadeus Phoenix.\" Over 400,000 copies of \"1901\" have been sold.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The album \"Wolfgang Amadeus Phoenix\" is a certified gold album.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAlbum(x) ::: x is an album.\nSingle(x) ::: x is a single.\nSell(x, y) ::: x sold y copies.\nRelease(x, y) ::: x released y.\nPremises:\nAlbum(wolfgangAmadeusPhoenix) ::: The indie pop band Phoenix has released 6 albums.\nSell(wolfgangAmadeusPhoenix, over500000) ::: Phoenix's album \"Wolfgang Amadeus Phoenix\" sold over 500,000 copies.\nCertifiedGold(x) ::: x is a certified gold album or single.\nSell(wolfgangAmadeusPhoenix, over500000) → CertifiedGold(wolfgangAmadeusPhoenix) ::: A certified gold album or single is one which sold over half a million copies."
    ]
  },
  {
    "id": "FOLIO_train_618",
    "context": "The indie pop band Phoenix has released 6 albums. Phoenix's album \"Wolfgang Amadeus Phoenix\" sold over 500,000 copies. A certified gold album or single is one which sold over half a million copies. \"1901\" is a single from Phoenix's album \"Wolfgang Amadeus Phoenix.\" Over 400,000 copies of \"1901\" have been sold.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The single \"1901\" is a certified gold single.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAlbum(x) ::: x is an album.\nSingle(x) ::: x is a single.\nSell(x, y) ::: x sold y copies.\nRelease(x, y) ::: x released y.\nPremises:\nAlbum(wolfgangAmadeusPhoenix) ::: Phoenix's album \"Wolfgang Amadeus Phoenix\" sold over 500,000 copies.\nSell(wolfgangAmadeusPhoenix, over500000) ::: Phoenix's album \"Wolfgang Amadeus Phoenix\" sold over 500,000 copies.\nCertifiedGold(x) ::: x is a certified gold album or single.\nSell(x, over500000) → CertifiedGold(x) ::: A certified gold album or single is one which sold over half a million copies.\nSingle(ninete"
    ]
  },
  {
    "id": "FOLIO_train_619",
    "context": "Peter Parker is a either a superhero or a civilian. The Hulk is a destroyer. The Hulk wakes up when he is angry. If the Hulk wakes up, then he will break a bridge. Thor is a god. Thor will break a bridge when he is happy. A god is not a destroyer and a destroyer is not a god. Peter Parker wears a uniform when he is a superhero. Peter Parker is not a civilian if and only if a destroyer is breaking a bridge. If Thor is happy, the Hulk is angry.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If the Hulk does not wake up, then Thor is not happy.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSuperhero(x) ::: x is a superhero.\nCivilian(x) ::: x is a civilian.\nDestroyer(x) ::: x is a destroyer.\nHulk(x) ::: x is the Hulk.\nWakeUp(x) ::: x wakes up.\nBreak(x, y) ::: x breaks y.\nBridge(x) ::: x is a bridge.\nGod(x) ::: x is a god.\nThor(x) ::: x is Thor.\nUniform(x) ::: x wears a uniform.\nPremises:\nSuperhero(peterParker) ∨ Civilian(peterParker) ::: Peter Parker is a either a superhero or a civilian.\nDestroyer(hulk) ::: The Hulk is a destroyer.\nWakeUp(hulk) → Break(hulk, bridge) ::: The"
    ]
  },
  {
    "id": "FOLIO_train_620",
    "context": "Peter Parker is a either a superhero or a civilian. The Hulk is a destroyer. The Hulk wakes up when he is angry. If the Hulk wakes up, then he will break a bridge. Thor is a god. Thor will break a bridge when he is happy. A god is not a destroyer and a destroyer is not a god. Peter Parker wears a uniform when he is a superhero. Peter Parker is not a civilian if and only if a destroyer is breaking a bridge. If Thor is happy, the Hulk is angry.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Thor is happy, then Peter Parker wears a uniform.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSuperhero(x) ::: x is a superhero.\nCivilian(x) ::: x is a civilian.\nDestroyer(x) ::: x is a destroyer.\nHulk(x) ::: x is the Hulk.\nWakeUp(x) ::: x wakes up.\nBreak(x, y) ::: x breaks y.\nBridge(x) ::: x is a bridge.\nGod(x) ::: x is a god.\nThor(x) ::: x is Thor.\nUniform(x) ::: x wears a uniform.\nAngry(x) ::: x is angry.\nHappy(x) ::: x is happy.\nPremises:\nSuperhero(peterParker) ∨ Civilian(peterParker) ::: Peter Parker is a either a superhero or a civilian.\nDestroyer(hulk) ::: The Hulk is a destroyer.\n∀x (Hulk(x) → WakeUp(x)) ::: The Hulk wakes up when he is angry.\n∀x (WakeUp(x) → Break(x, bridge)) ::: If the Hulk wakes up, then he will break a bridge.\nGod(thor) ::: Thor is a god.\n∀x (God(x) → Break(x, bridge)) ::: Thor will break a bridge when he is happy.\n∀x (Destroyer(x) → ¬God(x)) ::: A god is not a destroyer.\n∀x (God(x) → ¬Destroyer(x)) ::: A destroyer is not a god.\n∀x (Superhero(x) → Uniform(x)) ::: Peter Parker wears a uniform when he is a superhero.\n∀x (Civilian(x) ↔ ¬Destroyer(x)) ::: Peter Parker is not a civilian if and only if a destroyer is breaking a bridge.\nHappy(thor) → Angry(hulk) ::: If Thor is happy, the Hulk is angry.\nConclusion:\nHappy(thor) → Uniform(peterParker) ::: If Thor is happy, then Peter Parker wears a uniform.\n------"
    ]
  },
  {
    "id": "FOLIO_train_621",
    "context": "Peter Parker is a either a superhero or a civilian. The Hulk is a destroyer. The Hulk wakes up when he is angry. If the Hulk wakes up, then he will break a bridge. Thor is a god. Thor will break a bridge when he is happy. A god is not a destroyer and a destroyer is not a god. Peter Parker wears a uniform when he is a superhero. Peter Parker is not a civilian if and only if a destroyer is breaking a bridge. If Thor is happy, the Hulk is angry.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Thor is not happy, then no bridge will be broken.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSuperhero(x) ::: x is a superhero.\nCivilian(x) ::: x is a civilian.\nDestroyer(x) ::: x is a destroyer.\nHulk(x) ::: x is the Hulk.\nWakeUp(x) ::: x wakes up.\nBreak(x, y) ::: x breaks y.\nBridge(x) ::: x is a bridge.\nGod(x) ::: x is a god.\nThor(x) ::: x is Thor.\nUniform(x) ::: x wears a uniform.\nPremises:\nSuperhero(peterParker) ∨ Civilian(peterParker) ::: Peter Parker is a either a superhero or a civilian.\nDestroyer(hulk) ::: The Hulk is a destroyer.\nWakeUp(hulk) → Break(hulk, bridge) ::: The Hulk wakes up when he is angry.\nGod(thor) ::: Thor is a god.\nBreak(thor, bridge) → Happy(thor) ::: Thor will break a bridge when he is happy.\n¬God(x) ∧ ¬Destroyer(x) ::: A god is not a destroyer and a destroyer is not a god.\nSuperhero(peterParker) → Uniform(peterParker) ::: Peter Parker wears a uniform when he is a superhero.\n(¬Civilian(peterParker) ↔ Break(destroyer, bridge)) ::: Peter Parker is not a civilian if and only if a destroyer is breaking a bridge.\nHappy(thor) → Angry(hulk) ::: If Thor is happy, the Hulk is angry.\nConclusion:\n¬Happy(thor) → ¬Break(x, bridge) ::: If Thor is not happy, then no bridge will be broken.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that"
    ]
  },
  {
    "id": "FOLIO_train_622",
    "context": "Diethylcarbamazine is a medication discovered in the year 1947. Diethylcarbamazine can be used to treat river blindness. The only preferred treatment for river blindness is ivermectin. Diethylcarbamazine is not ivermectin.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Diethylcarbamazine is not preferred for the treatment of river blindness.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMedication(x) ::: x is a medication.\nDiscovered(x, y) ::: x is discovered in year y.\nCanBeUsed(x, y) ::: x can be used to treat y.\nPreferred(x, y) ::: x is the preferred treatment for y.\nTreat(x, y) ::: x is a treatment for y.\nPremises:\nMedication(diethylcarbamazine) ::: Diethylcarbamazine is a medication.\nDiscovered(diethylcarbamazine, year1947) ::: Diethylcarbamazine is a medication discovered in the year 1947.\nCanBeUsed(diethylcarbamazine, riverblindness) ::: Diethylcarbamazine can be used to treat river blindness.\nPreferred(ivermectin, riverblindness) ::: The only preferred treatment for river blindness is ivermectin.\n¬(diethylcarbamazine = ivermectin) ::: Diethylcarbamazine is not ivermectin.\nConclusion:\n¬Preferred(diethylcarbamazine, riverblindness) ::: Diethylcarbamazine is not preferred for the treatment of river blindness.\n------\nProblem:\nThe only thing that can be used to treat river blindness is ivermectin. Ivermectin is a medication. Diethylcarbamazine is a medication. Diethylcarbamazine can be used to treat river blindness.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Diethylcarbamazine is ivermectin.\n###\nPredicates:\nMedication(x) ::: x is a medication.\nCanBeUsed(x, y) ::: x can be used to treat y.\nTreat(x, y) ::: x is a treatment for y.\nPremises:\n∀x (Treat(x, riverblindness) → x = ivermectin) ::: The only thing that can be used to treat river blindness is ivermectin.\nMedication(ivermectin) ::: Ivermectin is a medication.\nMedication(diethylcar"
    ]
  },
  {
    "id": "FOLIO_train_623",
    "context": "Diethylcarbamazine is a medication discovered in the year 1947. Diethylcarbamazine can be used to treat river blindness. The only preferred treatment for river blindness is ivermectin. Diethylcarbamazine is not ivermectin.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Diethylcarbamazine was often used to treat river blindness.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDiscovered(x, y) ::: x was discovered in year y.\nCanBeUsedToTreat(x, y) ::: x can be used to treat y.\nPreferredTreatment(x, y) ::: x is the preferred treatment for y.\nIs(x, y) ::: x is y.\nPremises:\nDiscovered(diethylcarbamazine, year1947) ::: Diethylcarbamazine is a medication discovered in the year 1947.\nCanBeUsedToTreat(diethylcarbamazine, riverblindness) ::: Diethylcarbamazine can be used to treat river blindness.\nPreferredTreatment(ivermectin, riverblindness) ::: The only preferred treatment for river blindness is ivermectin.\n¬Is(diethylcarbamazine, ivermectin) ::: Diethylcarbamazine is not ivermectin.\nConclusion:\n∃x (CanBeUsedToTreat(x, riverblindness) ∧ ∀y (PreferredTreatment(y, riverblindness) → ¬Is(x, y))) ::: Diethylcarbamazine was often used to treat river blindness.\n------\nProblem:\nThe only thing that can be used to treat river blindness is ivermectin. Ivermectin is a medication. Ivermectin was discovered in the year 1981.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Ivermectin was often used to treat river blindness.\n###\nPredicates:\nCanBeUsedToTreat(x, y) ::: x can be used to treat y.\nIs(x, y) ::: x is y.\nDiscovered(x, y) ::: x was discovered in year y.\nPremises:\n∀x (CanBeUsedToTreat(x, riverblindness) → Is(x, ivermectin)) ::: The only thing that can be used to treat river blindness is ivermectin.\nIs(ivermectin, medication) ::: Ivermectin is a medication.\nDiscovered(iverm"
    ]
  },
  {
    "id": "FOLIO_train_624",
    "context": "Diethylcarbamazine is a medication discovered in the year 1947. Diethylcarbamazine can be used to treat river blindness. The only preferred treatment for river blindness is ivermectin. Diethylcarbamazine is not ivermectin.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Diethylcarbamazine is used in the treatment of filariasis.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDiscovered(x, y) ::: x is discovered in year y.\nCanBeUsedToTreat(x, y) ::: x can be used to treat y.\nPreferredTreatment(x, y) ::: x is the preferred treatment for y.\nIs(x, y) ::: x is y.\nPremises:\nDiscovered(diethylcarbamazine, year1947) ::: Diethylcarbamazine is a medication discovered in the year 1947.\nCanBeUsedToTreat(diethylcarbamazine, riverblindness) ::: Diethylcarbamazine can be used to treat river blindness.\nPreferredTreatment(ivermectin, riverblindness) ::: The only preferred treatment for river blindness is ivermectin.\n¬Is(diethylcarbamazine, ivermectin) ::: Diethylcarbamazine is not ivermectin.\nConclusion:\nCanBeUsedToTreat(diethylcarbamazine, filariasis) ::: Diethylcarbamazine is used in the treatment of filariasis.\n------\nProblem:\nThe only thing that can be used to treat river blindness is ivermectin. Diethylcarbamazine can be used to treat river blindness.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Diethylcarbamazine is ivermectin.\n###\nPredicates:\nCanBeUsedToTreat(x, y) ::: x can be used to treat y.\nIs(x, y) ::: x is y.\nPremises:\nPreferredTreatment(ivermectin, riverblindness) ::: The only preferred treatment for river blindness is ivermectin.\nCanBeUsedToTreat(diethylcarbamazine, riverblindness) ::: Diethylcarbamazine can be used to treat river blindness.\nConclusion:\nIs(diethylcarbamazine, ivermectin) ::: Diethylcarbamazine is ivermectin.\n------\nProblem:\nThe only preferred treatment for river blindness is ivermectin. Diethylcar"
    ]
  },
  {
    "id": "FOLIO_train_625",
    "context": "All univariate analyses use a generalized linear model. All multivoxel (pattern) analyses are implementing machine learning algorithms. All implementing machine learning algorithms are to learn and classify multivariate data. The Latent Dirichlet allocation model uses a generalized linear model or a univariate analysis. If the Latent Dirichlet allocation model does not learn and classify multivariate data, then the Latent Dirichlet allocation model uses a generalized linear model and a multivoxel (pattern) analysis.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Latent Dirichlet allocation model is implementing machine learning algorithms.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nUnivariateAnalysis(x) ::: x is a univariate analysis.\nMultivoxelAnalysis(x) ::: x is a multivoxel (pattern) analysis.\nGeneralizedLinearModel(x) ::: x is a generalized linear model.\nMachineLearningAlgorithm(x) ::: x is implementing machine learning algorithms.\nLearnAndClassify(x, y) ::: x is to learn and classify y.\nLatentDirichletAllocationModel(x) ::: x is the Latent Dirichlet allocation model.\nPremises:\n∀x (UnivariateAnalysis(x) → GeneralizedLinearModel(x)) ::: All univariate analyses use a generalized linear model.\n∀x (MultivoxelAnalysis(x) → MachineLearningAlgorithm(x)) ::: All multivoxel (pattern) analyses are implementing machine learning algorithms.\n∀x (MachineLearningAlgorithm(x) → LearnAndClassify(x, multivariateData)) ::: All implementing machine learning algorithms are to learn and classify multivariate data.\nGeneralizedLinearModel(latentDirichletAllocationModel) ∨ UnivariateAnalysis(latentDirichletAllocationModel) ::: The Latent Dirichlet allocation model uses a generalized linear model or a univariate analysis.\n¬LearnAndClassify(latentDirichletAllocationModel, multivariateData) → (GeneralizedLinearModel(latentDirichletAllocationModel) ∧ MultivoxelAnalysis(latentDirichletAllocationModel)) ::: If the Latent Dirichlet allocation model does not learn and classify multivariate data, then the Latent Dirichlet allocation model uses a generalized linear model and a multivoxel (pattern) analysis.\nConclusion:\nMachineLearningAlgorithm(latentDirichletAllocationModel) ::: Latent Dirichlet allocation model is implementing machine learning algorithms.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that"
    ]
  },
  {
    "id": "FOLIO_train_626",
    "context": "All univariate analyses use a generalized linear model. All multivoxel (pattern) analyses are implementing machine learning algorithms. All implementing machine learning algorithms are to learn and classify multivariate data. The Latent Dirichlet allocation model uses a generalized linear model or a univariate analysis. If the Latent Dirichlet allocation model does not learn and classify multivariate data, then the Latent Dirichlet allocation model uses a generalized linear model and a multivoxel (pattern) analysis.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Latent Dirichlet allocation model uses a generalized linear model and learns and classifies multivariate data.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nUnivariate(x) ::: x is a univariate analysis.\nMultivoxel(x) ::: x is a multivoxel (pattern) analysis.\nGeneralizedLinearModel(x) ::: x is a generalized linear model.\nMachineLearningAlgorithm(x) ::: x is implementing machine learning algorithms.\nLearn(x, y) ::: x is to learn y.\nClassify(x, y) ::: x is to classify y.\nMultivariateData(x) ::: x is multivariate data.\nLatentDirichletAllocationModel(x) ::: x is the Latent Dirichlet allocation model.\nPremises:\n∀x (Univariate(x) → GeneralizedLinearModel(x)) ::: All univariate analyses use a generalized linear model.\n∀x (Multivoxel(x) → MachineLearningAlgorithm(x)) ::: All multivoxel (pattern) analyses are implementing machine learning algorithms.\n∀x (MachineLearningAlgorithm(x) → (Learn(x, y) ∧ Classify(x, y))) ::: All implementing machine learning algorithms are to learn and classify multivariate data.\nUnivariate(latentDirichletAllocationModel) ∨ GeneralizedLinearModel(latentDirichletAllocationModel) ::: The Latent Dirichlet allocation model uses a generalized linear model or a univariate analysis.\n¬(Learn(latentDirichletAllocationModel, multivariateData) ∧ Classify(latentDirichletAllocationModel, multivariateData)) → (GeneralizedLinearModel(latentDirichletAllocationModel) ∧ Multivoxel(latentDirichletAllocationModel)) ::: If the Latent Dirichlet allocation model does not learn and classify multivariate data, then the Latent Dirichlet allocation model uses a generalized linear model and a multivoxel (pattern) analysis.\nConclusion:\nGeneralizedLinearModel(latentDirichletAllocationModel) ∧ Learn(latentDirichletAllocationModel, multivariateData) ∧ Classify(latentDirichletAll"
    ]
  },
  {
    "id": "FOLIO_train_627",
    "context": "All univariate analyses use a generalized linear model. All multivoxel (pattern) analyses are implementing machine learning algorithms. All implementing machine learning algorithms are to learn and classify multivariate data. The Latent Dirichlet allocation model uses a generalized linear model or a univariate analysis. If the Latent Dirichlet allocation model does not learn and classify multivariate data, then the Latent Dirichlet allocation model uses a generalized linear model and a multivoxel (pattern) analysis.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Latent Dirichlet allocation model either uses a generalized linear model or learns and classifies multivariate data.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nUnivariate(x) ::: x is a univariate analysis.\nMultivoxel(x) ::: x is a multivoxel (pattern) analysis.\nGeneralizedLinearModel(x) ::: x is a generalized linear model.\nMachineLearning(x) ::: x is implementing machine learning algorithms.\nLearn(x) ::: x is to learn.\nClassify(x) ::: x is to classify.\nMultivariate(x) ::: x is multivariate data.\nLatentDirichletAllocation(x) ::: x is the Latent Dirichlet allocation model.\nPremises:\n∀x (Univariate(x) → GeneralizedLinearModel(x)) ::: All univariate analyses use a generalized linear model.\n∀x (Multivoxel(x) → MachineLearning(x)) ::: All multivoxel (pattern) analyses are implementing machine learning algorithms.\n∀x (MachineLearning(x) → (Learn(x) ∧ Classify(x))) ::: All implementing machine learning algorithms are to learn and classify multivariate data.\nGeneralizedLinearModel(latentDirichletAllocation) ∨ Univariate(latentDirichletAllocation) ::: The Latent Dirichlet allocation model uses a generalized linear model or a univariate analysis.\n¬(Learn(latentDirichletAllocation) ∧ Classify(latentDirichletAllocation)) → (GeneralizedLinearModel(latentDirichletAllocation) ∧ Multivoxel(latentDirichletAllocation)) ::: If the Latent Dirichlet allocation model does not learn and classify multivariate data, then the Latent Dirichlet allocation model uses a generalized linear model and a multivoxel (pattern) analysis.\nConclusion:\nGeneralizedLinearModel(latentDirichletAllocation) ∨ (Learn(latentDirichletAllocation) ∧ Classify(latentDirichletAllocation)) ::: Latent Dirichlet allocation model either uses a generalized linear model or learns and classifies multivariate data.\n------\nProblem:\nAll"
    ]
  },
  {
    "id": "FOLIO_train_628",
    "context": "If something requires a medical diagnosis, then lab tests or imaging is required. All rare diseases require a medical diagnosis. If something is mild, then no lab tests or imaging is required. All blood cancers are rare diseases. All Leukemia is blood cancer. If bladder cancer is either both blood cancer and Leukemia or neither blood cancer nor Leukemia, then bladder cancer is Leukemia.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Bladder cancer is mild.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRequires(x, y) ::: x requires y.\nMedicalDiagnosis(x) ::: x requires a medical diagnosis.\nLabTestsOrImaging(x) ::: lab tests or imaging is required.\nRareDisease(x) ::: x is a rare disease.\nMild(x) ::: x is mild.\nBloodCancer(x) ::: x is blood cancer.\nLeukemia(x) ::: x is Leukemia.\nBladderCancer(x) ::: x is bladder cancer.\nPremises:\n∀x (MedicalDiagnosis(x) → LabTestsOrImaging(x)) ::: If something requires a medical diagnosis, then lab tests or imaging is required.\n∀x (RareDisease(x) → MedicalDiagnosis(x)) ::: All rare diseases require a medical diagnosis.\n∀x (Mild(x) → ¬LabTestsOrImaging(x)) ::: If something is mild, then no lab tests or imaging is required.\n∀x (BloodCancer(x) → RareDisease(x)) ::: All blood cancers are rare diseases.\nBloodCancer(leukemia) ::: All Leukemia is blood cancer.\n(BloodCancer(bladderCancer) ∧ Leukemia(bladderCancer)) ⊕ ¬(BloodCancer(bladderCancer) ∨ Leukemia(bladderCancer)) ::: If bladder cancer is either both blood cancer and Leukemia or neither blood cancer nor Leukemia, then bladder cancer is Leukemia.\nConclusion:\nMild(bladderCancer) ::: Bladder cancer is mild.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and"
    ]
  },
  {
    "id": "FOLIO_train_629",
    "context": "If something requires a medical diagnosis, then lab tests or imaging is required. All rare diseases require a medical diagnosis. If something is mild, then no lab tests or imaging is required. All blood cancers are rare diseases. All Leukemia is blood cancer. If bladder cancer is either both blood cancer and Leukemia or neither blood cancer nor Leukemia, then bladder cancer is Leukemia.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Bladder cancer is Leukemia.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRequires(x, y) ::: x requires y.\nMedicalDiagnosis(x) ::: x requires a medical diagnosis.\nLabTestsOrImaging(x) ::: lab tests or imaging is required.\nRareDisease(x) ::: x is a rare disease.\nMild(x) ::: x is mild.\nBloodCancer(x) ::: x is blood cancer.\nLeukemia(x) ::: x is Leukemia.\nBladderCancer(x) ::: x is bladder cancer.\nPremises:\n∀x (MedicalDiagnosis(x) → LabTestsOrImaging(x)) ::: If something requires a medical diagnosis, then lab tests or imaging is required.\n∀x (RareDisease(x) → MedicalDiagnosis(x)) ::: All rare diseases require a medical diagnosis.\n∀x (Mild(x) → ¬LabTestsOrImaging(x)) ::: If something is mild, then no lab tests or imaging is required.\n∀x (BloodCancer(x) → RareDisease(x)) ::: All blood cancers are rare diseases.\nBloodCancer(leukemia) ::: All Leukemia is blood cancer.\n(BloodCancer(bladderCancer) ∧ Leukemia(bladderCancer)) ⊕ ¬(BloodCancer(bladderCancer) ∨ Leukemia(bladderCancer)) ::: If bladder cancer is either both blood cancer and Leukemia or neither blood cancer nor Leukemia, then bladder cancer is Leukemia.\nConclusion:\nLeukemia(bladderCancer) ::: Bladder cancer is Leukemia.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent"
    ]
  },
  {
    "id": "FOLIO_train_630",
    "context": "If something requires a medical diagnosis, then lab tests or imaging is required. All rare diseases require a medical diagnosis. If something is mild, then no lab tests or imaging is required. All blood cancers are rare diseases. All Leukemia is blood cancer. If bladder cancer is either both blood cancer and Leukemia or neither blood cancer nor Leukemia, then bladder cancer is Leukemia.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Bladder cancer is either a rare disease or mild.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRequires(x, y) ::: x requires y.\nMedicalDiagnosis(x) ::: x requires a medical diagnosis.\nLabTestsOrImaging(x) ::: lab tests or imaging is required.\nRareDisease(x) ::: x is a rare disease.\nMild(x) ::: x is mild.\nBloodCancer(x) ::: x is blood cancer.\nLeukemia(x) ::: x is Leukemia.\nBladderCancer(x) ::: x is bladder cancer.\nPremises:\n∀x (MedicalDiagnosis(x) → LabTestsOrImaging(x)) ::: If something requires a medical diagnosis, then lab tests or imaging is required.\n∀x (RareDisease(x) → MedicalDiagnosis(x)) ::: All rare diseases require a medical diagnosis.\n∀x (Mild(x) → ¬LabTestsOrImaging(x)) ::: If something is mild, then no lab tests or imaging is required.\n∀x (BloodCancer(x) → RareDisease(x)) ::: All blood cancers are rare diseases.\nBloodCancer(leukemia) ::: All Leukemia is blood cancer.\nBladderCancer(bladderCancer) ∧ (BloodCancer(bladderCancer) ∧ Leukemia(bladderCancer)) ⊕ ¬(BloodCancer(bladderCancer) ∨ Leukemia(bladderCancer)) ::: If bladder cancer is either both blood cancer and Leukemia or neither blood cancer nor Leukemia, then bladder cancer is Leukemia.\nConclusion:\n(RareDisease(bladderCancer) ∨ Mild(bladderCancer)) ::: Bladder cancer is either a rare disease or mild.\n------"
    ]
  },
  {
    "id": "FOLIO_train_631",
    "context": "No precious metals aren't scarce. All non-rare earth metals are not scarce. Either non-rare earth metals or rare earth metals. All rare earth metals can be used for batteries. All rare earth metals are essential for electric vehicles. Lithium is neither a non-rare earth metal nor essential for electric vehicles.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Lithium is a rare earth metal.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPreciousMetal(x) ::: x is a precious metal.\nScarce(x) ::: x is scarce.\nNonRareEarthMetal(x) ::: x is a non-rare earth metal.\nRareEarthMetal(x) ::: x is a rare earth metal.\nBattery(x) ::: x can be used for batteries.\nElectricVehicle(x) ::: x is essential for electric vehicles.\nLithium(x) ::: x is lithium.\nPremises:\n∀x (PreciousMetal(x) → ¬Scarce(x)) ::: No precious metals aren't scarce.\n∀x (NonRareEarthMetal(x) → ¬Scarce(x)) ::: All non-rare earth metals are not scarce.\nNonRareEarthMetal(x) ⊕ RareEarthMetal(x) ::: Either non-rare earth metals or rare earth metals.\n∀x (RareEarthMetal(x) → Battery(x)) ::: All rare earth metals can be used for batteries.\n∀x (RareEarthMetal(x) → ElectricVehicle(x)) ::: All rare earth metals are essential for electric vehicles.\n¬(NonRareEarthMetal(lithium) ∨ ElectricVehicle(lithium)) ::: Lithium is neither a non-rare earth metal nor essential for electric vehicles.\nConclusion:\nRareEarthMetal(lithium) ::: Lithium is a rare earth metal.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student"
    ]
  },
  {
    "id": "FOLIO_train_632",
    "context": "No precious metals aren't scarce. All non-rare earth metals are not scarce. Either non-rare earth metals or rare earth metals. All rare earth metals can be used for batteries. All rare earth metals are essential for electric vehicles. Lithium is neither a non-rare earth metal nor essential for electric vehicles.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Lithium is a precious metal and is used for batteries.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPreciousMetal(x) ::: x is a precious metal.\nScarce(x) ::: x is scarce.\nNonRareEarthMetal(x) ::: x is a non-rare earth metal.\nRareEarthMetal(x) ::: x is a rare earth metal.\nBattery(x) ::: x is used for batteries.\nElectricVehicle(x) ::: x is essential for electric vehicles.\nPremises:\n∀x (PreciousMetal(x) → ¬Scarce(x)) ::: No precious metals aren't scarce.\n∀x (NonRareEarthMetal(x) → ¬Scarce(x)) ::: All non-rare earth metals are not scarce.\nNonRareEarthMetal(x) ⊕ RareEarthMetal(x) ::: Either non-rare earth metals or rare earth metals.\n∀x (RareEarthMetal(x) → Battery(x)) ::: All rare earth metals can be used for batteries.\n∀x (RareEarthMetal(x) → ElectricVehicle(x)) ::: All rare earth metals are essential for electric vehicles.\n¬(NonRareEarthMetal(lithium) ∨ ElectricVehicle(lithium)) ::: Lithium is neither a non-rare earth metal nor essential for electric vehicles.\nConclusion:\nPreciousMetal(lithium) ∧ Battery(lithium) ::: Lithium is a precious metal and is used for batteries.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor un"
    ]
  },
  {
    "id": "FOLIO_train_633",
    "context": "No precious metals aren't scarce. All non-rare earth metals are not scarce. Either non-rare earth metals or rare earth metals. All rare earth metals can be used for batteries. All rare earth metals are essential for electric vehicles. Lithium is neither a non-rare earth metal nor essential for electric vehicles.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Lithium is not essential for electric vehicles or a precious metal, then Lithium is not a non-rare earth metal or usable for batteries.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPreciousMetal(x) ::: x is a precious metal.\nScarce(x) ::: x is scarce.\nNonRareEarthMetal(x) ::: x is a non-rare earth metal.\nRareEarthMetal(x) ::: x is a rare earth metal.\nBattery(x) ::: x can be used for batteries.\nElectricVehicle(x) ::: x is essential for electric vehicles.\nPremises:\n∀x (PreciousMetal(x) → ¬Scarce(x)) ::: No precious metals aren't scarce.\n∀x (NonRareEarthMetal(x) → ¬Scarce(x)) ::: All non-rare earth metals are not scarce.\nNonRareEarthMetal(x) ⊕ RareEarthMetal(x) ::: Either non-rare earth metals or rare earth metals.\n∀x (RareEarthMetal(x) → Battery(x)) ::: All rare earth metals can be used for batteries.\n∀x (RareEarthMetal(x) → ElectricVehicle(x)) ::: All rare earth metals are essential for electric vehicles.\n¬NonRareEarthMetal(lithium) ∧ ¬ElectricVehicle(lithium) ::: Lithium is neither a non-rare earth metal nor essential for electric vehicles.\nConclusion:\n(¬ElectricVehicle(lithium) ⊕ PreciousMetal(lithium)) → (¬NonRareEarthMetal(lithium) ⊕ Battery(lithium)) ::: If Lithium is not essential for electric vehicles or a precious metal, then Lithium is not a non-rare earth metal or usable for batteries.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke"
    ]
  },
  {
    "id": "FOLIO_train_634",
    "context": "If people own at least one pet, then they do not have tidy houses. If people grew up with childhood pets, then they own at least one pet. If people hire a maid or cleaning service, then they have tidy houses. If people live in the suburbs, then they have tidy houses. Jack either does not hire a maid or cleaning service or, if he does, then he does not own at least one pet.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jack lives in the suburbs.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPet(x) ::: x is a pet.\nOwn(x, y) ::: x owns y.\nTidy(x) ::: x has a tidy house.\nHire(x, y) ::: x hires y.\nMaid(x) ::: x is a maid.\nCleaningService(x) ::: x is a cleaning service.\nGrewUp(x, y) ::: x grew up with y.\nLive(x, y) ::: x lives in y.\nSuburbs(x) ::: x is a suburb.\nPremises:\n∀x (Own(x, y) → ¬Tidy(x)) ::: If people own at least one pet, then they do not have tidy houses.\n∀x (GrewUp(x, y) → Own(x, y)) ::: If people grew up with childhood pets, then they own at least one pet.\n∀x (Hire(x, y) → Tidy(x)) ::: If people hire a maid or cleaning service, then they have tidy houses.\n∀x (Live(x, y) → Tidy(x)) ::: If people live in the suburbs, then they have tidy houses.\n¬∃x (Hire(jack, x) ∧ Own(jack, y)) ∨ (Hire(jack, x) → ¬Own(jack, y)) ::: Jack either does not hire a maid or cleaning service or, if he does, then he does not own at least one pet.\nConclusion:\nLive(jack, suburbs) ::: Jack lives in the suburbs.\n------\nProblem:\nIf a person is a student, then they are a person. If a person is a student, then they are a person who is not a professor. If a person is a professor, then they are a person. If a person is a professor, then they are a person who is not a student. If a person is a student, then they are a person who is not a professor"
    ]
  },
  {
    "id": "FOLIO_train_635",
    "context": "If people own at least one pet, then they do not have tidy houses. If people grew up with childhood pets, then they own at least one pet. If people hire a maid or cleaning service, then they have tidy houses. If people live in the suburbs, then they have tidy houses. Jack either does not hire a maid or cleaning service or, if he does, then he does not own at least one pet.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jack does not live in the suburbs.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nOwn(x, y) ::: x owns y.\nPet(x) ::: x is a pet.\nTidy(x) ::: x has a tidy house.\nHire(x, y) ::: x hires y.\nMaid(x) ::: x is a maid.\nCleaningService(x) ::: x is a cleaning service.\nGrewUp(x, y) ::: x grew up with y.\nLive(x, y) ::: x lives in y.\nSuburbs(x) ::: x is a suburb.\nPremises:\n∀x (Own(x, y) → ¬Tidy(x)) ::: If people own at least one pet, then they do not have tidy houses.\n∀x (GrewUp(x, y) → Own(x, y)) ::: If people grew up with childhood pets, then they own at least one pet.\n∀x (Hire(x, y) → Tidy(x)) ::: If people hire a maid or cleaning service, then they have tidy houses.\n∀x (Live(x, y) → Tidy(x)) ::: If people live in the suburbs, then they have tidy houses.\n¬∃x (Hire(jack, x) ∧ Own(jack, y)) ∨ (Hire(jack, x) → ¬Own(jack, y)) ::: Jack either does not hire a maid or cleaning service or, if he does, then he does not own at least one pet.\nConclusion:\n¬Live(jack, suburbs) ::: Jack does not live in the suburbs.\n------\nProblem:\nIf a person is a student, then they are a person. If a person is a student, then they are a person who is a student. If a person is a student, then they are a person who is a student and is a person. If a person is a student, then they are a person who is a student and is a person who is a student."
    ]
  },
  {
    "id": "FOLIO_train_636",
    "context": "If people own at least one pet, then they do not have tidy houses. If people grew up with childhood pets, then they own at least one pet. If people hire a maid or cleaning service, then they have tidy houses. If people live in the suburbs, then they have tidy houses. Jack either does not hire a maid or cleaning service or, if he does, then he does not own at least one pet.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jack has a tidy house.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPet(x) ::: x is a pet.\nOwn(x, y) ::: x owns y.\nTidy(x) ::: x has a tidy house.\nHire(x, y) ::: x hires y.\nMaid(x) ::: x is a maid.\nCleaningService(x) ::: x is a cleaning service.\nGrewUp(x, y) ::: x grew up with y.\nLive(x, y) ::: x lives in y.\nSuburbs(x) ::: x is in the suburbs.\nPremises:\n∀x (Own(x, y) → ¬Tidy(x)) ::: If people own at least one pet, then they do not have tidy houses.\n∀x (GrewUp(x, y) → Own(x, y)) ::: If people grew up with childhood pets, then they own at least one pet.\n∀x (Hire(x, y) → Tidy(x)) ::: If people hire a maid or cleaning service, then they have tidy houses.\n∀x (Live(x, y) → Tidy(x)) ::: If people live in the suburbs, then they have tidy houses.\n¬∃x (Hire(jack, x) ∧ Own(jack, y)) ∨ (Hire(jack, x) → ¬Own(jack, y)) ::: Jack either does not hire a maid or cleaning service or, if he does, then he does not own at least one pet.\nConclusion:\nTidy(jack) ::: Jack has a tidy house.\n------\nProblem:\nIf a person is a student, then they are a person. If a person is a student, then they are a person who is a student. If a person is a student, then they are a person who is a student and is a person. If a person is a student, then they are a person who is a student and is a person who is a student. If a person is"
    ]
  },
  {
    "id": "FOLIO_train_637",
    "context": "If people own at least one pet, then they do not have tidy houses. If people grew up with childhood pets, then they own at least one pet. If people hire a maid or cleaning service, then they have tidy houses. If people live in the suburbs, then they have tidy houses. Jack either does not hire a maid or cleaning service or, if he does, then he does not own at least one pet.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jack neither lives in the suburbs nor owns at least one pet.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPet(x) ::: x is a pet.\nOwn(x, y) ::: x owns y.\nTidy(x) ::: x has a tidy house.\nHire(x, y) ::: x hires y.\nMaid(x) ::: x is a maid.\nCleaningService(x) ::: x is a cleaning service.\nGrewUp(x, y) ::: x grew up with y.\nChildhoodPet(x) ::: x is a childhood pet.\nLive(x, y) ::: x lives in y.\nSuburbs(x) ::: x is a suburb.\nPremises:\n∀x (Own(x, y) → ¬Tidy(x)) ::: If people own at least one pet, then they do not have tidy houses.\n∀x (GrewUp(x, y) → Own(x, y)) ::: If people grew up with childhood pets, then they own at least one pet.\n∀x (Hire(x, y) → Tidy(x)) ::: If people hire a maid or cleaning service, then they have tidy houses.\n∀x (Live(x, y) → Tidy(x)) ::: If people live in the suburbs, then they have tidy houses.\n¬∃x (Hire(jack, x) ∧ Own(jack, y)) ∨ (Hire(jack, x) → ¬Own(jack, y)) ::: Jack either does not hire a maid or cleaning service or, if he does, then he does not own at least one pet.\nConclusion:\n¬∃x (Own(jack, x) ∧ Live(jack, y)) ::: Jack neither lives in the suburbs nor owns at least one pet.\n------\nProblem:\nIf a person is a student, then they are a person who is a student. If a person is a student, then they are a person who is not a student. If a person is a student,"
    ]
  },
  {
    "id": "FOLIO_train_638",
    "context": "If people own at least one pet, then they do not have tidy houses. If people grew up with childhood pets, then they own at least one pet. If people hire a maid or cleaning service, then they have tidy houses. If people live in the suburbs, then they have tidy houses. Jack either does not hire a maid or cleaning service or, if he does, then he does not own at least one pet.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jack grew up with childhood pets and lives in the suburbs.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPet(x) ::: x is a pet.\nOwn(x, y) ::: x owns y.\nTidy(x) ::: x has a tidy house.\nHire(x, y) ::: x hires y.\nMaid(x) ::: x is a maid.\nCleaningService(x) ::: x is a cleaning service.\nGrewUpWith(x, y) ::: x grew up with y.\nLive(x, y) ::: x lives in y.\nSuburbs(x) ::: x is a suburb.\nPremises:\n∀x (Own(x, y) → ¬Tidy(x)) ::: If people own at least one pet, then they do not have tidy houses.\n∀x (GrewUpWith(x, y) → Own(x, y)) ::: If people grew up with childhood pets, then they own at least one pet.\n∀x (Hire(x, y) → Tidy(x)) ::: If people hire a maid or cleaning service, then they have tidy houses.\n∀x (Live(x, y) → Tidy(x)) ::: If people live in the suburbs, then they have tidy houses.\n¬(Hire(jack, maid) ∧ Hire(jack, cleaningService)) → (¬Own(jack, pet) ∨ (Hire(jack, maid) ∧ Hire(jack, cleaningService))) ::: Jack either does not hire a maid or cleaning service or, if he does, then he does not own at least one pet.\nConclusion:\nGrewUpWith(jack, pet) ∧ Live(jack, suburbs) ::: Jack grew up with childhood pets and lives in the suburbs.\n------\nProblem:\nIf a person is a student, then they are a person who is a student. If a person is a student, then they are a person who is not a student. If a person is a student, then they are a person who"
    ]
  },
  {
    "id": "FOLIO_train_639",
    "context": "A bottle is either standing upright or toppled over. The bottle is not upright.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The bottle is toppled over.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBottle(x) ::: x is a bottle.\nUpright(x) ::: x is upright.\nToppledOver(x) ::: x is toppled over.\nPremises:\n∀x (Bottle(x) → (Upright(x) ⊕ ToppledOver(x))) ::: A bottle is either standing upright or toppled over.\n∀x (Bottle(x) → ¬Upright(x)) ::: The bottle is not upright.\nConclusion:\nToppledOver(x) ::: The bottle is toppled over.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.\n###\nPredicates:\nDependent(x) ::: x is a person dependent on caffeine.\nDrinks(x) ::: x regularly drinks coffee.\nJokes(x) ::"
    ]
  },
  {
    "id": "FOLIO_train_640",
    "context": "If people eat cereal and milk every day for breakfast, then they have very busy morning schedules every day. All young children below the age of ten eat cereal and milk every day for breakfast. People are either young children below the age of ten or have a lot of commitments they voluntarily signed up for. If people have a lot of commitments they voluntarily signed up for, then they are hardworking individuals with high ambitions and goals for the future. If people are hardworking individuals with high ambitions and goals for the future, then they are not good at staying organized and motivated. John either is both a hardworking individual with high ambitions and goals for the future and has busy morning schedules every day, or he is neither a hardworking individual with high ambitions and goals for the future nor does he have a busy morning schedule every day.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? John is good at staying organized and motivated.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEat(x, y) ::: x eats y.\nCereal(x) ::: x is cereal.\nMilk(x) ::: x is milk.\nBreakfast(x) ::: x is breakfast.\nYoung(x) ::: x is a young child below the age of ten.\nCommitment(x) ::: x is a commitment.\nVoluntarily(x) ::: x is voluntarily signed up for.\nHardworking(x) ::: x is a hardworking individual with high ambitions and goals for the future.\nOrganized(x) ::: x is good at staying organized.\nMotivated(x) ::: x is good at staying motivated.\nPremises:\n∀x (Eat(x, cereal) ∧ Eat(x, milk) → Breakfast(x)) ::: If people eat cereal and milk every day for breakfast, then they have very busy morning schedules every day.\n∀x (Young(x) → Eat(x, cereal) ∧ Eat(x, milk)) ::: All young children below the age of ten eat cereal and milk every day for breakfast.\n∀x (Commitment(x) → Voluntarily(x)) ::: People are either young children below the age of ten or have a lot of commitments they voluntarily signed up for.\n∀x (Voluntarily(x) → Hardworking(x)) ::: If people have a lot of commitments they voluntarily signed up for, then they are hardworking individuals with high ambitions and goals for the future.\n∀x (Hardworking(x) → ¬Organized(x) ∧ ¬Motivated(x)) ::: If people are hardworking individuals with high ambitions and goals for the future, then they are not good at staying organized and motivated.\n(Hardworking(john) ∧ Breakfast(john)) ⊕ ¬(Hardworking(john) ∨ Breakfast(john)) ::: John either is both a hardworking individual with high ambitions and goals for the future and has busy morning schedules every day, or he is neither a hardworking individual with high ambitions and goals for the future nor does he have a busy morning schedule every day.\nConclusion:\nOrganized(john) ∧ Motivated(john) ::: John is good at staying organized and motivated.\n------"
    ]
  },
  {
    "id": "FOLIO_train_641",
    "context": "If people eat cereal and milk every day for breakfast, then they have very busy morning schedules every day. All young children below the age of ten eat cereal and milk every day for breakfast. People are either young children below the age of ten or have a lot of commitments they voluntarily signed up for. If people have a lot of commitments they voluntarily signed up for, then they are hardworking individuals with high ambitions and goals for the future. If people are hardworking individuals with high ambitions and goals for the future, then they are not good at staying organized and motivated. John either is both a hardworking individual with high ambitions and goals for the future and has busy morning schedules every day, or he is neither a hardworking individual with high ambitions and goals for the future nor does he have a busy morning schedule every day.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? John eats cereal and milk every day for breakfast.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEat(x, y) ::: x eats y.\nCereal(x) ::: x is cereal.\nMilk(x) ::: x is milk.\nBreakfast(x) ::: x is breakfast.\nYoung(x) ::: x is a young child below the age of ten.\nCommitment(x) ::: x is a commitment.\nVoluntarily(x) ::: x is voluntarily signed up for.\nHardworking(x) ::: x is a hardworking individual with high ambitions and goals for the future.\nBusy(x) ::: x has a busy morning schedule every day.\nOrganized(x) ::: x is good at staying organized.\nMotivated(x) ::: x is good at staying motivated.\nPremises:\n∀x (Eat(x, cereal) ∧ Eat(x, milk) → Breakfast(x)) ::: If people eat cereal and milk every day for breakfast, then they have very busy morning schedules every day.\n∀x (Young(x) → Eat(x, cereal) ∧ Eat(x, milk)) ::: All young children below the age of ten eat cereal and milk every day for breakfast.\n∀x (Commitment(x) → Voluntarily(x)) ::: People are either young children below the age of ten or have a lot of commitments they voluntarily signed up for.\n∀x (Voluntarily(x) → Hardworking(x)) ::: If people have a lot of commitments they voluntarily signed up for, then they are hardworking individuals with high ambitions and goals for the future.\n∀x (Hardworking(x) → ¬Organized(x) ∧ ¬Motivated(x)) ::: If people are hardworking individuals with high ambitions and goals for the future, then they are not good at staying organized and motivated.\n(Hardworking(john) ∧ Busy(john)) ⊕ ¬(Hardworking(john) ∨ Busy(john)) ::: John either is both a hardworking individual with high ambitions and goals for the future and has busy morning schedules every day, or he is neither a hardworking individual with high ambitions and goals for the future nor does he have a busy morning schedule every day.\nConclusion:\nEat(john, cereal) ∧"
    ]
  },
  {
    "id": "FOLIO_train_642",
    "context": "If people eat cereal and milk every day for breakfast, then they have very busy morning schedules every day. All young children below the age of ten eat cereal and milk every day for breakfast. People are either young children below the age of ten or have a lot of commitments they voluntarily signed up for. If people have a lot of commitments they voluntarily signed up for, then they are hardworking individuals with high ambitions and goals for the future. If people are hardworking individuals with high ambitions and goals for the future, then they are not good at staying organized and motivated. John either is both a hardworking individual with high ambitions and goals for the future and has busy morning schedules every day, or he is neither a hardworking individual with high ambitions and goals for the future nor does he have a busy morning schedule every day.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? John is either a hardworking individual with high ambitions and goals for the future or is good at staying organized and motivated.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEat(x, y) ::: x eats y.\nCereal(x) ::: x is cereal.\nMilk(x) ::: x is milk.\nBreakfast(x) ::: x is breakfast.\nYoung(x) ::: x is a young child below the age of ten.\nAge(x, y) ::: x is y years old.\nCommitment(x) ::: x is a commitment.\nVoluntarily(x) ::: x is voluntarily signed up for.\nHardworking(x) ::: x is a hardworking individual with high ambitions and goals for the future.\nOrganized(x) ::: x is good at staying organized.\nMotivated(x) ::: x is good at staying motivated.\nPremises:\n∀x (Eat(x, cereal) ∧ Eat(x, milk) → Breakfast(x)) ::: If people eat cereal and milk every day for breakfast, then they have very busy morning schedules every day.\n∀x (Young(x) → (Eat(x, cereal) ∧ Eat(x, milk))) ::: All young children below the age of ten eat cereal and milk every day for breakfast.\n∀x (Commitment(x) → Voluntarily(x)) ::: People are either young children below the age of ten or have a lot of commitments they voluntarily signed up for.\n∀x (Voluntarily(x) → Hardworking(x)) ::: If people have a lot of commitments they voluntarily signed up for, then they are hardworking individuals with high ambitions and goals for the future.\n∀x (Hardworking(x) → ¬Organized(x)) ::: If people are hardworking individuals with high ambitions and goals for the future, then they are not good at staying organized and motivated.\n(Hardworking(john) ∧ Breakfast(john)) ⊕ ¬(Hardworking(john) ∨ Breakfast(john)) ::: John either is both a hardworking individual with high ambitions and goals for the future and has busy morning schedules every day, or he is neither a hardworking individual with high ambitions and goals for the future nor does he have a busy morning schedule every day.\nConclusion:\n(Hardworking(john) ∧ Organized(john)) ⊕ ¬(Hardworking"
    ]
  },
  {
    "id": "FOLIO_train_643",
    "context": "Ableton has an office in Germany. Ableton has an office in the USA. USA and Germany are different countries. Any company that has offices in different countries is a multinational company. Ableton makes music software.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Ableton is a multinational company.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nOffice(x, y) ::: x has an office in y.\nCountry(x) ::: x is a country.\nDifferent(x, y) ::: x and y are different.\nCompany(x) ::: x is a company.\nMultinational(x) ::: x is a multinational company.\nMake(x, y) ::: x makes y.\nSoftware(x) ::: x is a software.\nMusicSoftware(x) ::: x is a music software.\nPremises:\nOffice(abelton, germany) ::: Ableton has an office in Germany.\nOffice(abelton, usa) ::: Ableton has an office in the USA.\nCountry(germany) ∧ Country(usa) ∧ Different(germany, usa) ::: USA and Germany are different countries.\n∀x (∃y ∃z (Office(x, y) ∧ Office(x, z) ∧ Different(y, z)) → Multinational(x)) ::: Any company that has offices in different countries is a multinational company.\nMake(abelton, musicSoftware) ::: Ableton makes music software.\nMusicSoftware(musicSoftware) ::: Ableton makes music software.\nConclusion:\nMultinational(abelton) ::: Ableton is a multinational company.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug"
    ]
  },
  {
    "id": "FOLIO_train_644",
    "context": "Ableton has an office in Germany. Ableton has an office in the USA. USA and Germany are different countries. Any company that has offices in different countries is a multinational company. Ableton makes music software.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Ableton makes AI software.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nOffice(x, y) ::: x has an office in y.\nCountry(x) ::: x is a country.\nDifferent(x, y) ::: x and y are different.\nCompany(x) ::: x is a company.\nMultinational(x) ::: x is a multinational company.\nMake(x, y) ::: x makes y.\nSoftware(x) ::: x is software.\nAI(x) ::: x is AI software.\nPremises:\nOffice(ableton, germany) ::: Ableton has an office in Germany.\nOffice(ableton, usa) ::: Ableton has an office in the USA.\nCountry(germany) ∧ Country(usa) ∧ Different(germany, usa) ::: USA and Germany are different countries.\n∀x (Office(x, y) ∧ Office(x, z) ∧ Different(y, z) → Multinational(x)) ::: Any company that has offices in different countries is a multinational company.\nMake(ableton, musicSoftware) ::: Ableton makes music software.\nSoftware(musicSoftware) ::: musicSoftware is software.\nConclusion:\nMake(ableton, aiSoftware) ::: Ableton makes AI software.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor"
    ]
  },
  {
    "id": "FOLIO_train_645",
    "context": "Ableton has an office in Germany. Ableton has an office in the USA. USA and Germany are different countries. Any company that has offices in different countries is a multinational company. Ableton makes music software.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Ableton does not have an office in Germany.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nOffice(x, y) ::: x has an office in y.\nCountry(x) ::: x is a country.\nDifferent(x, y) ::: x and y are different.\nCompany(x) ::: x is a company.\nMultinational(x) ::: x is a multinational company.\nMake(x, y) ::: x makes y.\nSoftware(x) ::: x is a software.\nMusicSoftware(x) ::: x is a music software.\nPremises:\nOffice(ableton, germany) ::: Ableton has an office in Germany.\nOffice(ableton, usa) ::: Ableton has an office in the USA.\nCountry(germany) ∧ Country(usa) ∧ Different(germany, usa) ::: USA and Germany are different countries.\n∀x (∃y ∃z (Office(x, y) ∧ Office(x, z) ∧ Different(y, z)) → Multinational(x)) ::: Any company that has offices in different countries is a multinational company.\nMake(ableton, musicSoftware) ::: Ableton makes music software.\nMusicSoftware(ableton) ::: Ableton is a music software.\nConclusion:\n¬Office(ableton, germany) ::: Ableton does not have an office in Germany.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine"
    ]
  },
  {
    "id": "FOLIO_train_646",
    "context": "Every swimmer can go underwater. Everyone that eats fish they catch themselves is a swimmer. Every penguin eats fish they catch themselves. All nonflying birds in Antarctica are penguins. Fido is a penguin or a swimmer.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Fido eats fish they catch themselves.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSwimmer(x) ::: x is a swimmer.\nGoUnderwater(x) ::: x can go underwater.\nEat(x, y) ::: x eats y.\nCatch(x, y) ::: x catches y.\nFish(x) ::: x is a fish.\nPenguin(x) ::: x is a penguin.\nBird(x) ::: x is a bird.\nFly(x) ::: x can fly.\nAntarctica(x) ::: x is in Antarctica.\nPremises:\n∀x (Swimmer(x) → GoUnderwater(x)) ::: Every swimmer can go underwater.\n∀x (Eat(x, Fish(x)) → Swimmer(x)) ::: Everyone that eats fish they catch themselves is a swimmer.\n∀x (Penguin(x) → Eat(x, Fish(x))) ::: Every penguin eats fish they catch themselves.\n∀x (Bird(x) ∧ ¬Fly(x) ∧ Antarctica(x) → Penguin(x)) ::: All nonflying birds in Antarctica are penguins.\nSwimmer(fido) ∨ Penguin(fido) ::: Fido is a penguin or a swimmer.\nConclusion:\nEat(fido, Fish(fido)) ::: Fido eats fish they catch themselves.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is"
    ]
  },
  {
    "id": "FOLIO_train_647",
    "context": "Every swimmer can go underwater. Everyone that eats fish they catch themselves is a swimmer. Every penguin eats fish they catch themselves. All nonflying birds in Antarctica are penguins. Fido is a penguin or a swimmer.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Fido is neither a non-flying bird nor can Fido go underwater.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSwimmer(x) ::: x is a swimmer.\nGoUnderwater(x) ::: x can go underwater.\nEat(x, y) ::: x eats y.\nCatch(x, y) ::: x catches y.\nFish(x) ::: x is a fish.\nPenguin(x) ::: x is a penguin.\nNonFlyingBird(x) ::: x is a non-flying bird.\nAntarctica(x) ::: x is in Antarctica.\nPremises:\n∀x (Swimmer(x) → GoUnderwater(x)) ::: Every swimmer can go underwater.\n∀x (Eat(x, Fish(x)) → Swimmer(x)) ::: Everyone that eats fish they catch themselves is a swimmer.\n∀x (Penguin(x) → Eat(x, Fish(x))) ::: Every penguin eats fish they catch themselves.\n∀x (NonFlyingBird(x) ∧ Antarctica(x) → Penguin(x)) ::: All nonflying birds in Antarctica are penguins.\nSwimmer(fido) ∨ Penguin(fido) ::: Fido is a penguin or a swimmer.\nConclusion:\n¬∃x (NonFlyingBird(x) ∧ ¬GoUnderwater(x)) ::: Fido is neither a non-flying bird nor can Fido go underwater.\n------\nProblem:\nEveryone who is a student is a person. Every person is a mammal. Every mammal is an animal. Every animal is a living thing. Every living thing is a thing. Every thing is a physical object. Every physical object is a substance. Every substance is a being. Every being is a thing. Every thing is a physical object. Every physical object is a substance. Every substance is a being. Every being is a thing. Every thing is a physical object. Every physical object is a substance. Every substance is a being. Every being is a thing. Every thing is a physical object. Every physical object is a substance. Every substance is a being. Every being is a thing. Every thing is a physical object. Every physical object is a substance. Every substance is a being. Every being is a thing. Every thing is a physical object. Every physical object is a substance. Every substance is a being. Every"
    ]
  },
  {
    "id": "FOLIO_train_648",
    "context": "Every swimmer can go underwater. Everyone that eats fish they catch themselves is a swimmer. Every penguin eats fish they catch themselves. All nonflying birds in Antarctica are penguins. Fido is a penguin or a swimmer.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Fido can either go underwater or is a swimmer, then Fido is a nonflying bird in Antartica.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSwimmer(x) ::: x is a swimmer.\nGoUnderwater(x) ::: x can go underwater.\nEat(x, y) ::: x eats y.\nFish(x) ::: x is a fish.\nCatch(x, y) ::: x catches y.\nPenguin(x) ::: x is a penguin.\nFly(x) ::: x can fly.\nBird(x) ::: x is a bird.\nAntarctica(x) ::: x is in Antarctica.\nPremises:\n∀x (Swimmer(x) → GoUnderwater(x)) ::: Every swimmer can go underwater.\n∀x (Eat(x, Fish(x)) → Swimmer(x)) ::: Everyone that eats fish they catch themselves is a swimmer.\n∀x (Penguin(x) → Eat(x, Fish(x))) ::: Every penguin eats fish they catch themselves.\n∀x (Bird(x) ∧ ¬Fly(x) ∧ Antarctica(x) → Penguin(x)) ::: All nonflying birds in Antarctica are penguins.\nSwimmer(fido) ⊕ Penguin(fido) ::: Fido is a penguin or a swimmer.\nConclusion:\n(GoUnderwater(fido) ⊕ Swimmer(fido)) → (Bird(fido) ∧ ¬Fly(fido) ∧ Antarctica(fido)) ::: If Fido can either go underwater or is a swimmer, then Fido is a nonflying bird in Antartica.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following"
    ]
  },
  {
    "id": "FOLIO_train_649",
    "context": "All professors are teachers. All researchers are professors. No teachers are students. All people who study are students. Leon is not studying or a researcher. If Leon is not studying, then Leon is a teacher.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Leon is a professor.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProfessor(x) ::: x is a professor.\nTeacher(x) ::: x is a teacher.\nResearcher(x) ::: x is a researcher.\nStudent(x) ::: x is a student.\nStudy(x) ::: x is studying.\nPremises:\n∀x (Professor(x) → Teacher(x)) ::: All professors are teachers.\n∀x (Researcher(x) → Professor(x)) ::: All researchers are professors.\n∀x (Teacher(x) → ¬Student(x)) ::: No teachers are students.\n∀x (Study(x) → Student(x)) ::: All people who study are students.\n¬Study(leon) ⊕ ¬Researcher(leon) ::: Leon is not studying or a researcher.\nStudy(leon) → Teacher(leon) ::: If Leon is not studying, then Leon is a teacher.\nConclusion:\nProfessor(leon) ::: Leon is a professor.\n------\nProblem:\nAll people who are not students are professors. All people who are not professors are researchers. All people who are not researchers are students. All people who are not students are professors. All people who are not professors are researchers. All people who are not researchers are students.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? All people are students.\nBased on the above information, is the following statement true, false, or uncertain? All people are professors.\nBased on the above information, is the following statement true, false, or uncertain? All people are researchers.\n###\nPredicates:\nStudent(x) ::: x is a student.\nProfessor(x) ::: x is a professor.\nResearcher(x) ::: x is a researcher.\nPremises:\n∀x (¬Student(x) → Professor(x)) ::: All people who are not students are professors.\n∀x (¬Professor(x) → Researcher(x)) ::: All people who are not professors are researchers.\n∀x (¬Researcher(x) → Student(x)) ::: All people who are not researchers are students.\n∀x (¬Student(x) → Professor(x)) ::: All people who are"
    ]
  },
  {
    "id": "FOLIO_train_650",
    "context": "All professors are teachers. All researchers are professors. No teachers are students. All people who study are students. Leon is not studying or a researcher. If Leon is not studying, then Leon is a teacher.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Leon is neither a student nor a researcher.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProfessor(x) ::: x is a professor.\nTeacher(x) ::: x is a teacher.\nResearcher(x) ::: x is a researcher.\nStudent(x) ::: x is a student.\nStudy(x) ::: x is studying.\nPremises:\n∀x (Professor(x) → Teacher(x)) ::: All professors are teachers.\n∀x (Researcher(x) → Professor(x)) ::: All researchers are professors.\n∀x (Student(x) → ¬Teacher(x)) ::: No teachers are students.\n∀x (Study(x) → Student(x)) ::: All people who study are students.\n¬Study(leon) ⊕ ¬Researcher(leon) ::: Leon is not studying or a researcher.\nStudy(leon) → Teacher(leon) ::: If Leon is not studying, then Leon is a teacher.\nConclusion:\n¬Student(leon) ∧ ¬Researcher(leon) ::: Leon is neither a student nor a researcher.\n------"
    ]
  },
  {
    "id": "FOLIO_train_651",
    "context": "All professors are teachers. All researchers are professors. No teachers are students. All people who study are students. Leon is not studying or a researcher. If Leon is not studying, then Leon is a teacher.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Leon is not a researcher, then Leon is a student.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProfessor(x) ::: x is a professor.\nTeacher(x) ::: x is a teacher.\nResearcher(x) ::: x is a researcher.\nStudent(x) ::: x is a student.\nStudy(x) ::: x is studying.\nPremises:\n∀x (Professor(x) → Teacher(x)) ::: All professors are teachers.\n∀x (Researcher(x) → Professor(x)) ::: All researchers are professors.\n∀x (Student(x) → ¬Teacher(x)) ::: No teachers are students.\n∀x (Study(x) → Student(x)) ::: All people who study are students.\n¬Study(leon) ⊕ ¬Researcher(leon) ::: Leon is not studying or a researcher.\n(¬Study(leon) → Teacher(leon)) ::: If Leon is not studying, then Leon is a teacher.\nConclusion:\n(¬Researcher(leon) → Student(leon)) ::: If Leon is not a researcher, then Leon is a student."
    ]
  },
  {
    "id": "FOLIO_train_652",
    "context": "A cutman is responsible for preventing and treating physical damage to a fighter. Cutmen appear in matches such as a boxing, kickboxing or a mixed martial arts bout. Cutmen typically handle swelling, nosebleeds and lacerations. Jack is a cutman.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? No cutmen appear in boxing matches.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCutman(x) ::: x is a cutman.\nAppear(x, y) ::: x appears in y.\nMatch(x) ::: x is a match.\nBoxing(x) ::: x is a boxing match.\nKickboxing(x) ::: x is a kickboxing match.\nMixedMartialArts(x) ::: x is a mixed martial arts match.\nPremises:\nCutman(jack) ::: Jack is a cutman.\n∀x (Cutman(x) → Appear(x, boxing)) ∧ ∀x (Cutman(x) → Appear(x, kickboxing)) ∧ ∀x (Cutman(x) → Appear(x, mixedMartialArts)) ::: Cutmen appear in matches such as a boxing, kickboxing or a mixed martial arts bout.\n∀x (Appear(x, boxing) → Swelling(x)) ∧ ∀x (Appear(x, boxing) → Nosebleeds(x)) ∧ ∀x (Appear(x, boxing)"
    ]
  },
  {
    "id": "FOLIO_train_653",
    "context": "A cutman is responsible for preventing and treating physical damage to a fighter. Cutmen appear in matches such as a boxing, kickboxing or a mixed martial arts bout. Cutmen typically handle swelling, nosebleeds and lacerations. Jack is a cutman.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If someone is not a cutman, then they cannot handle nosebleeds.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCutman(x) ::: x is a cutman.\nHandle(x, y) ::: x can handle y.\nNosebleed(x) ::: x is a nosebleed.\nPremises:\nCutman(jack) ::: Jack is a cutman.\n∀x (Cutman(x) → Handle(x, nosebleed)) ::: Cutmen can handle nosebleeds.\nConclusion:\n∀x (¬Cutman(x) → ¬Handle(x, nosebleed)) ::: If someone is not a cutman, then they cannot handle nosebleeds.\n------\nProblem:\nA person who is a student is a person who is enrolled in a school or a college. A person who is a student is a person who is enrolled in a school or a college. A person who is a student is a person who is enrolled in a school or a college. A person who is a student is a person who is enrolled in a school or a college. A person who is a student is a person who is enrolled in a school or a college. A person who is a student is a person who is enrolled in a school or a college. A person who is a student is a"
    ]
  },
  {
    "id": "FOLIO_train_654",
    "context": "A cutman is responsible for preventing and treating physical damage to a fighter. Cutmen appear in matches such as a boxing, kickboxing or a mixed martial arts bout. Cutmen typically handle swelling, nosebleeds and lacerations. Jack is a cutman.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jack can treat physical damage.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCutman(x) ::: x is a cutman.\nHandle(x, y) ::: x handles y.\nPrevent(x, y) ::: x prevents y.\nTreat(x, y) ::: x treats y.\nPremises:\nCutman(jack) ::: Jack is a cutman.\n∀x (Cutman(x) → (Prevent(x, swelling) ∧ Prevent(x, nosebleeds) ∧ Prevent(x, lacerations) ∧ Handle(x, swelling) ∧ Handle(x, nosebleeds) ∧ Handle(x, lacerations) ∧ Treat(x, swelling) ∧ Treat(x, nosebleeds) ∧ Treat(x, lacerations))) ::: A cutman is responsible for preventing and treating physical damage to a fighter. Cutmen appear in matches such as a boxing, kickboxing or a mixed martial arts bout. Cutmen typically handle swelling, nosebleeds and lacerations.\nConclusion:\nTreat(jack, physicalDamage) ::: Jack can treat physical damage.\n------\nProblem:"
    ]
  },
  {
    "id": "FOLIO_train_655",
    "context": "The Mona Lisa is one of the world's best-known artworks. The Mona Lisa is a portrait painted by Leonardo da Vinci. Leonardo da Vinci was a scientist and painter. Painting genres are history, portrait, animal, landscape, and still life.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? One of the world's best-known artworks is painted by a scientist.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nWorldsBestKnownArtwork(x) ::: x is one of the world's best-known artworks.\nPortrait(x) ::: x is a portrait.\nPainter(x) ::: x is a painter.\nScientist(x) ::: x is a scientist.\nPaintingGenre(x) ::: x is a painting genre.\nPremises:\nWorldsBestKnownArtwork(monaLisa) ∧ Portrait(monaLisa) ∧ Painter(leonardoDaVinci) ∧ PaintingGenre(history) ∧ PaintingGenre(portrait) ∧ PaintingGenre(animal) ∧ PaintingGenre(landscape) ∧ PaintingGenre(stillLife) ::: The Mona Lisa is one of the world's best-known artworks. The Mona Lisa is a portrait painted by Leonardo da Vinci. Leonardo da Vinci was a scientist and painter. Painting genres are history, portrait, animal, landscape, and still life.\nConclusion:\n∃x (WorldsBestKnownArtwork(x)"
    ]
  },
  {
    "id": "FOLIO_train_656",
    "context": "The Mona Lisa is one of the world's best-known artworks. The Mona Lisa is a portrait painted by Leonardo da Vinci. Leonardo da Vinci was a scientist and painter. Painting genres are history, portrait, animal, landscape, and still life.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Leonardo da Vinci has artworks in the landscape genre.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMonaLisa(x) ::: x is the Mona Lisa.\nPortrait(x) ::: x is a portrait.\nPainter(x) ::: x is a painter.\nScientist(x) ::: x is a scientist.\nGenre(x) ::: x is a painting genre.\nHistory(x) ::: x is a history genre.\nAnimal(x) ::: x is an animal genre.\nLandscape(x) ::: x is a landscape genre.\nStillLife(x) ::: x is a still life genre.\nPremises:\nMonaLisa(monaLisa) ∧ Portrait(monaLisa) ∧ Painter(leonardoDaVinci) ∧ Scientist(leonardoDaVinci) ::: The Mona Lisa is one of the world's best-known artworks. The Mona Lisa is a portrait painted by Leonardo da Vinci. Leonardo da Vinci was a scientist and painter.\nGenre(history) ∧ Genre(portrait) ∧ Genre(animal) ∧ Genre(landscape) ∧ Genre"
    ]
  },
  {
    "id": "FOLIO_train_657",
    "context": "The Mona Lisa is one of the world's best-known artworks. The Mona Lisa is a portrait painted by Leonardo da Vinci. Leonardo da Vinci was a scientist and painter. Painting genres are history, portrait, animal, landscape, and still life.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? No world's best-known artworks are portraits.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nWorldsBestKnownArtworks(x) ::: x is one of the world's best-known artworks.\nPortrait(x) ::: x is a portrait.\nPaintingGenres(x) ::: x is a painting genre.\nPainter(x) ::: x is a painter.\nScientist(x) ::: x is a scientist.\nPremises:\nWorldsBestKnownArtworks(monaLisa) ∧ Portrait(monaLisa) ::: The Mona Lisa is one of the world's best-known artworks.\nPortrait(monaLisa) ∧ PaintingGenres(portrait) ::: The Mona Lisa is a portrait painted by Leonardo da Vinci.\nPainter(leonardoDaVinci) ∧ Scientist(leonardoDaVinci) ::: Leonardo da Vinci was a scientist and painter.\nConclusion:\n¬∃x (WorldsBestKnownArtworks(x) ∧ Portrait(x)) ::: No world's best-known artworks are portraits.\n------\nProblem:\nThe Mona Lisa is one of"
    ]
  },
  {
    "id": "FOLIO_train_658",
    "context": "No professional tennis umpires are professional tennis players. If you are a World Tour player, then you are a professional tennis player. All Grand Slam champions are World Tour players. All Grand Slam umpires are professional tennis umpires. Nadal is a World Tour player or a Grand Slam champion",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Nadal is a Grand Slam umpire.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nWorldTourPlayer(x) ::: x is a World Tour player.\nProfessionalTennisPlayer(x) ::: x is a professional tennis player.\nGrandSlamChampion(x) ::: x is a Grand Slam champion.\nGrandSlamUmpire(x) ::: x is a Grand Slam umpire.\nProfessionalTennisUmpire(x) ::: x is a professional tennis umpire.\nPremises:\n∀x (ProfessionalTennisUmpire(x) → ¬ProfessionalTennisPlayer(x)) ::: No professional tennis umpires are professional tennis players.\n∀x (WorldTourPlayer(x) → ProfessionalTennisPlayer(x)) ::: If you are a World Tour player, then you are a professional tennis player.\n∀x (GrandSlamChampion(x) → WorldTourPlayer(x)) ::: All Grand Slam champions are World Tour players.\n∀x (GrandSlamUmpire(x) → ProfessionalTennisUmpire(x)) ::: All Grand Slam umpires are professional tennis umpires.\nWorldTourPlayer"
    ]
  },
  {
    "id": "FOLIO_train_659",
    "context": "No professional tennis umpires are professional tennis players. If you are a World Tour player, then you are a professional tennis player. All Grand Slam champions are World Tour players. All Grand Slam umpires are professional tennis umpires. Nadal is a World Tour player or a Grand Slam champion",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Nadal is not a Grand Slam umpire.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProfessionalTennisUmpire(x) ::: x is a professional tennis umpire.\nProfessionalTennisPlayer(x) ::: x is a professional tennis player.\nWorldTourPlayer(x) ::: x is a World Tour player.\nGrandSlamChampion(x) ::: x is a Grand Slam champion.\nGrandSlamUmpire(x) ::: x is a Grand Slam umpire.\nPremises:\n∀x (ProfessionalTennisUmpire(x) → ¬ProfessionalTennisPlayer(x)) ::: No professional tennis umpires are professional tennis players.\n∀x (WorldTourPlayer(x) → ProfessionalTennisPlayer(x)) ::: If you are a World Tour player, then you are a professional tennis player.\n∀x (GrandSlamChampion(x) → WorldTourPlayer(x)) ::: All Grand Slam champions are World Tour players.\n∀x (GrandSlamUmpire(x) → ProfessionalTennisUmpire(x)) ::: All Grand Slam umpires are professional tennis umpires.\nWorldTourPlayer"
    ]
  },
  {
    "id": "FOLIO_train_660",
    "context": "No professional tennis umpires are professional tennis players. If you are a World Tour player, then you are a professional tennis player. All Grand Slam champions are World Tour players. All Grand Slam umpires are professional tennis umpires. Nadal is a World Tour player or a Grand Slam champion",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Nadal is a Grand Slam champion.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProfessionalTennisUmpire(x) ::: x is a professional tennis umpire.\nProfessionalTennisPlayer(x) ::: x is a professional tennis player.\nWorldTourPlayer(x) ::: x is a World Tour player.\nGrandSlamChampion(x) ::: x is a Grand Slam champion.\nGrandSlamUmpire(x) ::: x is a Grand Slam umpire.\nNadal(x) ::: x is Nadal.\nPremises:\n∀x (ProfessionalTennisUmpire(x) → ¬ProfessionalTennisPlayer(x)) ::: No professional tennis umpires are professional tennis players.\n∀x (WorldTourPlayer(x) → ProfessionalTennisPlayer(x)) ::: If you are a World Tour player, then you are a professional tennis player.\n∀x (GrandSlamChampion(x) → WorldTourPlayer(x)) ::: All Grand Slam champions are World Tour players.\n∀x (GrandSlamUmpire(x) → ProfessionalTennisUmpire(x)) ::: All Grand Slam umpires are professional tennis umpires.\nWorldTourPlayer(nadal) ∨ GrandSlamChampion(nadal) ::: Nadal is a World Tour player or a Grand Slam champion\nConclusion:\nGrandSlamChampion(nadal) ::: Nadal is a Grand Slam champion.\n------"
    ]
  },
  {
    "id": "FOLIO_train_661",
    "context": "No professional tennis umpires are professional tennis players. If you are a World Tour player, then you are a professional tennis player. All Grand Slam champions are World Tour players. All Grand Slam umpires are professional tennis umpires. Nadal is a World Tour player or a Grand Slam champion",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Nadal is neither a Grand Slam umpire nor a professional tennis umpire.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nWorldTourPlayer(x) ::: x is a World Tour player.\nProfessionalTennisPlayer(x) ::: x is a professional tennis player.\nGrandSlamChampion(x) ::: x is a Grand Slam champion.\nGrandSlamUmpire(x) ::: x is a Grand Slam umpire.\nProfessionalTennisUmpire(x) ::: x is a professional tennis umpire.\nPremises:\n∀x (ProfessionalTennisUmpire(x) → ¬ProfessionalTennisPlayer(x)) ::: No professional tennis umpires are professional tennis players.\n∀x (WorldTourPlayer(x) → ProfessionalTennisPlayer(x)) ::: If you are a World Tour player, then you are a professional tennis player.\n∀x (GrandSlamChampion(x) → WorldTourPlayer(x)) ::: All Grand Slam champions are World Tour players.\n∀x (GrandSlamUmpire(x) → ProfessionalTennisUmpire(x)) ::: All Grand Slam umpires are professional tennis umpires.\nWorldTourPlayer(nadal) ∨ GrandSlamChampion(nadal) ::: Nadal is a World Tour player or a Grand Slam champion\nConclusion:\n¬(GrandSlamUmpire(nadal) ∨ ProfessionalTennisUmpire(nadal)) ::: Nadal is neither a Grand Sl"
    ]
  },
  {
    "id": "FOLIO_train_662",
    "context": "No professional tennis umpires are professional tennis players. If you are a World Tour player, then you are a professional tennis player. All Grand Slam champions are World Tour players. All Grand Slam umpires are professional tennis umpires. Nadal is a World Tour player or a Grand Slam champion",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Nadal is a professional tennis umpire, then Nadal is a Grand Slam Umpire.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProfessionalTennisUmpire(x) ::: x is a professional tennis umpire.\nProfessionalTennisPlayer(x) ::: x is a professional tennis player.\nWorldTourPlayer(x) ::: x is a World Tour player.\nGrandSlamChampion(x) ::: x is a Grand Slam champion.\nGrandSlamUmpire(x) ::: x is a Grand Slam umpire.\nPremises:\n∀x (ProfessionalTennisUmpire(x) → ¬ProfessionalTennisPlayer(x)) ::: No professional tennis umpires are professional tennis players.\n∀x (WorldTourPlayer(x) → ProfessionalTennisPlayer(x)) ::: If you are a World Tour player, then you are a professional tennis player.\n∀x (GrandSlamChampion(x) → WorldTourPlayer(x)) ::: All Grand Slam champions are World Tour players.\n∀x (GrandSlamUmpire(x) → ProfessionalTennisUmpire(x)) ::: All Grand Slam umpires are professional tennis umpires.\nWorldTourPlayer(nadal) ∨ GrandSlamChampion(nadal) ::: Nadal is a World Tour player or a Grand Slam champion\nConclusion:\nProfessionalTennisUmpire(nadal) → GrandSlamUmpire(nadal) ::: If Nadal is a professional tennis umpire"
    ]
  },
  {
    "id": "FOLIO_train_663",
    "context": "No professional tennis umpires are professional tennis players. If you are a World Tour player, then you are a professional tennis player. All Grand Slam champions are World Tour players. All Grand Slam umpires are professional tennis umpires. Nadal is a World Tour player or a Grand Slam champion",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Nadal is a Grand Slam umpire or a professional tennis player, then Nadal is a Grand Slam umpire.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProfessionalTennisUmpire(x) ::: x is a professional tennis umpire.\nProfessionalTennisPlayer(x) ::: x is a professional tennis player.\nWorldTourPlayer(x) ::: x is a World Tour player.\nGrandSlamChampion(x) ::: x is a Grand Slam champion.\nGrandSlamUmpire(x) ::: x is a Grand Slam umpire.\nPremises:\n∀x (ProfessionalTennisUmpire(x) → ¬ProfessionalTennisPlayer(x)) ::: No professional tennis umpires are professional tennis players.\n∀x (WorldTourPlayer(x) → ProfessionalTennisPlayer(x)) ::: If you are a World Tour player, then you are a professional tennis player.\n∀x (GrandSlamChampion(x) → WorldTourPlayer(x)) ::: All Grand Slam champions are World Tour players.\n∀x (GrandSlamUmpire(x) → ProfessionalTennisUmpire(x)) ::: All Grand Slam umpires are professional tennis umpires.\nWorldTourPlayer(nadal) ∨ GrandSlamChampion(nadal) ::: Nadal is a World Tour player or a Grand Slam champion\nConclusion:\n(GrandSlamUmpire(nadal) ∨ ProfessionalTennisPlayer(nadal)) → GrandSlamUmpire(nadal)"
    ]
  },
  {
    "id": "FOLIO_train_664",
    "context": "Buisnesses are either sanctioned or unsanctioned. Sanctioned buisnesses are limited. Unsanctioned buisnesses are free. The Crude Oil Data Exchange is a buisness that isn't free.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Crude Oil Data Exchange is sanctioned.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBuisness(x) ::: x is a buisness.\nSanctioned(x) ::: x is sanctioned.\nUnsanctioned(x) ::: x is unsanctioned.\nLimited(x) ::: x is limited.\nFree(x) ::: x is free.\nCrudeOilDataExchange(x) ::: x is the Crude Oil Data Exchange.\nPremises:\n∀x (Buisness(x) → (Sanctioned(x) ⊕ Unsanctioned(x))) ::: Buisnesses are either sanctioned or unsanctioned.\n∀x (Sanctioned(x) → Limited(x)) ::: Sanctioned buisnesses are limited.\n∀x (Unsanctioned(x) → Free(x)) ::: Unsanctioned buisnesses are free.\nCrudeOilDataExchange(crudeOilDataExchange) ∧ ¬Free(crudeOilDataExchange) ::: The Crude Oil Data Exchange is a buisness that isn't free.\nConclusion:\nSanctioned(crudeOilDataExchange) ::: Crude Oil Data Exchange is sanctioned.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug."
    ]
  },
  {
    "id": "FOLIO_train_665",
    "context": "Buisnesses are either sanctioned or unsanctioned. Sanctioned buisnesses are limited. Unsanctioned buisnesses are free. The Crude Oil Data Exchange is a buisness that isn't free.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Crude Oil Data Exchange is unsanctioned.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBuisness(x) ::: x is a buisness.\nSanctioned(x) ::: x is sanctioned.\nUnsanctioned(x) ::: x is unsanctioned.\nLimited(x) ::: x is limited.\nFree(x) ::: x is free.\nCrudeOilDataExchange(x) ::: x is the Crude Oil Data Exchange.\nPremises:\n∀x (Buisness(x) → (Sanctioned(x) ⊕ Unsanctioned(x))) ::: Buisnesses are either sanctioned or unsanctioned.\n∀x (Sanctioned(x) → Limited(x)) ::: Sanctioned buisnesses are limited.\n∀x (Unsanctioned(x) → Free(x)) ::: Unsanctioned buisnesses are free.\nCrudeOilDataExchange(crudeOilDataExchange) ∧ ¬Free(crudeOilDataExchange) ::: The Crude Oil Data Exchange is a buisness that isn't free.\nConclusion:\nUnsanctioned(crudeOilDataExchange) ::: Crude Oil Data Exchange is unsanctioned.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a"
    ]
  },
  {
    "id": "FOLIO_train_666",
    "context": "Buisnesses are either sanctioned or unsanctioned. Sanctioned buisnesses are limited. Unsanctioned buisnesses are free. The Crude Oil Data Exchange is a buisness that isn't free.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Crude Oil Data Exchange is limited.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBuisness(x) ::: x is a buisness.\nSanctioned(x) ::: x is sanctioned.\nUnsanctioned(x) ::: x is unsanctioned.\nLimited(x) ::: x is limited.\nFree(x) ::: x is free.\nCrudeOilDataExchange(x) ::: x is the Crude Oil Data Exchange.\nPremises:\n∀x (Buisness(x) → (Sanctioned(x) ⊕ Unsanctioned(x))) ::: Buisnesses are either sanctioned or unsanctioned.\n∀x (Sanctioned(x) → Limited(x)) ::: Sanctioned buisnesses are limited.\n∀x (Unsanctioned(x) → Free(x)) ::: Unsanctioned buisnesses are free.\nCrudeOilDataExchange(crudeOilDataExchange) ∧ ¬Free(crudeOilDataExchange) ::: The Crude Oil Data Exchange is a buisness that isn't free.\nConclusion:\nLimited(crudeOilDataExchange) ::: Crude Oil Data Exchange is limited.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is"
    ]
  },
  {
    "id": "FOLIO_train_667",
    "context": "When something is depressing, it is sad. V is depressing.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? V is invigorating",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDepressing(x) ::: x is depressing.\nSad(x) ::: x is sad.\nInvigorating(x) ::: x is invigorating.\nPremises:\nDepressing(v) ::: V is depressing.\n∀x (Depressing(x) → Sad(x)) ::: When something is depressing, it is sad.\nConclusion:\nInvigorating(v) ::: V is invigorating\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who"
    ]
  },
  {
    "id": "FOLIO_train_668",
    "context": "Palstaves are a type of early bronze axe. Commonly found in northern, western and south-western Europe, palstaves are cast in moulds. John Evans is an archeologist who popularized the term \"palstave\". A paalstab is not an axe, but rather a digging shovel.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? John Evans Popularized the term paalstab.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPalstave(x) ::: x is a palstave.\nAxe(x) ::: x is an axe.\nCast(x, y) ::: x is cast in mould y.\nPopularize(x, y) ::: x popularized the term y.\nPaalstab(x) ::: x is a paalstab.\nDiggingShovel(x) ::: x is a digging shovel.\nPremises:\n∀x (Palstave(x) → Axe(x)) ::: Palstaves are a type of early bronze axe.\n∀x (Palstave(x) → Cast(x, mould)) ::: Commonly found in northern, western and south-western Europe, palstaves are cast in moulds.\nPopularize(johnEvans, palstave) ::: John Evans is an archeologist who popularized the term \"palstave\".\n¬Paalstab(axe) ::: A paalstab is not an axe, but rather a digging shovel.\nConclusion:\nPopularize(johnEvans, paalstab) ::: John Evans Popularized the term paalstab.\n------\nProblem:\nThe 1996 Summer Olympics, officially known as the Games of the XXVI Olympiad, was an international multi-sport event which was celebrated in 1996 in Atlanta, Georgia, United States. The 1996 Summer Olympics was the first time that the Summer Olympic Games"
    ]
  },
  {
    "id": "FOLIO_train_669",
    "context": "Palstaves are a type of early bronze axe. Commonly found in northern, western and south-western Europe, palstaves are cast in moulds. John Evans is an archeologist who popularized the term \"palstave\". A paalstab is not an axe, but rather a digging shovel.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There is an axe that is commonly found in Western Europe.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPalstave(x) ::: x is a palstave.\nAxe(x) ::: x is an axe.\nCommon(x) ::: x is commonly found.\nEurope(x) ::: x is in Europe.\nNorth(x) ::: x is in the north.\nWest(x) ::: x is in the west.\nSouthWest(x) ::: x is in the south-west.\nCast(x) ::: x is cast.\nMould(x) ::: x is a mould.\nPopularize(x, y) ::: x popularized y.\nTerm(x) ::: x is a term.\nPaalstab(x) ::: x is a paalstab.\nDiggingShovel(x) ::: x is a digging shovel.\nPremises:\n∀x (Palstave(x) → Axe(x)) ::: Palstaves are a type of early bronze axe.\n∀x (Palstave(x) → Common(x)) ::: Commonly found in northern, western and south-western Europe, palstaves are cast in moulds.\n∀x (Palstave(x) → Cast(x)) ::: Commonly found in northern, western and south-western Europe, palstaves are cast in moulds.\n∀x (Palstave(x) → Mould(x)) ::: Commonly found in northern, western and south-western Europe, palstaves are cast in moulds."
    ]
  },
  {
    "id": "FOLIO_train_670",
    "context": "Palstaves are a type of early bronze axe. Commonly found in northern, western and south-western Europe, palstaves are cast in moulds. John Evans is an archeologist who popularized the term \"palstave\". A paalstab is not an axe, but rather a digging shovel.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Archeologists haven't popularized anything.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPalstave(x) ::: x is a palstave.\nAxe(x) ::: x is an axe.\nCast(x, y) ::: x is cast in mould y.\nPopularize(x, y) ::: x popularized y.\nArcheologist(x) ::: x is an archeologist.\nPaalstab(x) ::: x is a paalstab.\nDiggingShovel(x) ::: x is a digging shovel.\nPremises:\n∀x (Palstave(x) → Axe(x)) ::: Palstaves are a type of early bronze axe.\n∀x (Palstave(x) → Cast(x, mould)) ::: Commonly found in northern, western and south-western Europe, palstaves are cast in moulds.\nArcheologist(johnEvans) ∧ Popularize(johnEvans, palstave) ::: John Evans is an archeologist who popularized the term \"palstave\".\n¬Paalstab(axe) ∧ DiggingShovel(paalstab) ::: A paalstab is not an axe, but rather a digging shovel.\nConclusion:\n¬∃x (Archeologist(x) ∧ Popularize(x, y)) ::: Archeologists haven't popularized anything.\n------"
    ]
  },
  {
    "id": "FOLIO_train_671",
    "context": "Koei Tecmo is a Japanese video game and anime holding company. Holding companies hold several companies. Tecmo was disbanded in Japan, while Koei survived, but was renamed. Video game holding companies are holding companies.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Koei Tecmo holds another company.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nHoldingCompany(x) ::: x is a holding company.\nCompany(x) ::: x is a company.\nHold(x, y) ::: x holds y.\nDisband(x) ::: x was disbanded.\nSurvive(x) ::: x survived.\nRename(x, y) ::: x was renamed to y.\nVideoGame(x) ::: x is a video game.\nAnime(x) ::: x is an anime.\nPremises:\nHoldingCompany(koeiTecmo) ∧ Hold(koeiTecmo, tecmo) ∧ Hold(koeiTecmo, koei) ::: Koei Tecmo is a Japanese video game and anime holding company.\n∀x (HoldingCompany(x) → Company(x)) ::: Holding companies hold several companies.\nDisband(tecmo) ∧ Survive(koei) ∧ Rename(koei, koeiTecmo) ::: Tecmo was disbanded in Japan, while Koei survived, but was renamed.\n∀x (VideoGameHoldingCompany(x) → HoldingCompany(x)) ::: Video game holding companies are holding companies.\nConclusion:\n∃x (HoldingCompany(koeiTecmo) ∧ Hold(koeiTecmo, x"
    ]
  },
  {
    "id": "FOLIO_train_672",
    "context": "Koei Tecmo is a Japanese video game and anime holding company. Holding companies hold several companies. Tecmo was disbanded in Japan, while Koei survived, but was renamed. Video game holding companies are holding companies.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tecmo holds another company.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nHoldingCompany(x) ::: x is a holding company.\nCompany(x) ::: x is a company.\nHold(x, y) ::: x holds y.\nDisband(x) ::: x was disbanded.\nSurvive(x) ::: x survived.\nRename(x, y) ::: x was renamed to y.\nPremises:\nHoldingCompany(koeiTecmo) ::: Koei Tecmo is a Japanese video game and anime holding company.\n∀x (HoldingCompany(x) → Company(x)) ::: Holding companies hold several companies.\nDisband(tecmo) ∧ Survive(koei) ∧ Rename(koei, koeiTecmo) ::: Tecmo was disbanded in Japan, while Koei survived, but was renamed.\n∀x (VideoGameHoldingCompany(x) → HoldingCompany(x)) ::: Video game holding companies are holding companies.\nConclusion:\n∃x (Company(x) ∧ Hold(tecmo, x)) ::: Tecmo holds another company.\n------\nProblem:\nThe 2016 Summer Olympics, officially known as the Games of the XXXI Olympiad, was an international multi-sport event that was held from 5 to 21 August 2016 in Rio de Janeiro, Brazil."
    ]
  },
  {
    "id": "FOLIO_train_673",
    "context": "Koei Tecmo is a Japanese video game and anime holding company. Holding companies hold several companies. Tecmo was disbanded in Japan, while Koei survived, but was renamed. Video game holding companies are holding companies.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Koei Tecmo holds anime.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nHoldingCompany(x) ::: x is a holding company.\nVideoGameHoldingCompany(x) ::: x is a video game holding company.\nAnime(x) ::: x is anime.\nHold(x, y) ::: x holds y.\nDisband(x) ::: x was disbanded.\nSurvive(x) ::: x survived.\nRename(x, y) ::: x was renamed to y.\nPremises:\nHoldingCompany(koeiTecmo) ::: Koei Tecmo is a Japanese video game and anime holding company.\n∀x (HoldingCompany(x) → ∃y (Hold(x, y))) ::: Holding companies hold several companies.\nDisband(tecmo) ∧ Survive(koei) ∧ Rename(koei, koeiTecmo) ::: Tecmo was disbanded in Japan, while Koei survived, but was renamed.\nVideoGameHoldingCompany(x) → HoldingCompany(x) ::: Video game holding companies are holding companies.\nConclusion:\nHold(koeiTecmo, anime) ::: Koei Tecmo holds anime.\n------\nProblem:\nThe 2018 FIFA World Cup was the 21st FIFA World Cup, an international football tournament contested by the men's national teams of the member associations of FIFA"
    ]
  },
  {
    "id": "FOLIO_train_674",
    "context": "The PlayStation EyeToy is a camera accessory for the Playstation 2. The PlayStation Eye is a camera accessory for the Playstation 3. The Playstation Camera is a camera accessory for the Playstation 4 and the Playstation 5. Camera accessory for the system is compatible with that system Only the Playstation Camera is compatible with more than one system.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Playstation Eye can be used with the Playstation 2 and the Playstation 3.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPlaystation2(x) ::: x is a Playstation 2.\nPlaystation3(x) ::: x is a Playstation 3.\nPlaystation4(x) ::: x is a Playstation 4.\nPlaystation5(x) ::: x is a Playstation 5.\nPlaystationEyeToy(x) ::: x is a Playstation EyeToy.\nPlaystationEye(x) ::: x is a Playstation Eye.\nPlaystationCamera(x) ::: x is a Playstation Camera.\nCompatible(x, y) ::: x is compatible with y.\nPremises:\nPlaystationEyeToy(playstationEyeToy) ∧ Playstation2(playstation2) ∧ Compatible(playstationEyeToy, playstation2) ::: The PlayStation EyeToy is a camera accessory for the Playstation 2.\nPlaystationEye(playstationEye) ∧ Playstation3(playstation3) ∧ Compatible(playstationEye, playstation3) ::: The PlayStation Eye is a camera accessory for the Playstation 3.\nPlaystationCamera(playstationCamera) ∧ Playstation4(playstation4) ∧ Compatible(playstationCamera, playstation4) ∧ Playstation5(playstation5) ∧ Compatible(playstationCamera, playstation5"
    ]
  },
  {
    "id": "FOLIO_train_675",
    "context": "The PlayStation EyeToy is a camera accessory for the Playstation 2. The PlayStation Eye is a camera accessory for the Playstation 3. The Playstation Camera is a camera accessory for the Playstation 4 and the Playstation 5. Camera accessory for the system is compatible with that system Only the Playstation Camera is compatible with more than one system.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Playstation EyeToy is compatible with the Playstation 2.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPlaystationEyeToy(x) ::: x is a Playstation EyeToy.\nPlaystationEye(x) ::: x is a Playstation Eye.\nPlaystationCamera(x) ::: x is a Playstation Camera.\nCameraAccessory(x) ::: x is a camera accessory.\nCompatible(x, y) ::: x is compatible with y.\nSystem(x) ::: x is a system.\nPremises:\n∀x (PlaystationEyeToy(x) → CameraAccessory(x)) ::: The PlayStation EyeToy is a camera accessory for the Playstation 2.\n∀x (PlaystationEye(x) → CameraAccessory(x)) ::: The PlayStation Eye is a camera accessory for the Playstation 3.\n∀x (PlaystationCamera(x) → CameraAccessory(x)) ::: The Playstation Camera is a camera accessory for the Playstation 4 and the Playstation 5.\n∀x (CameraAccessory(x) → Compatible(x, system(x))) ::: Camera accessory for the system is compatible with that system\n∀x (Compatible(x, system(x)) → ¬Compatible(x, system(y))) ::: Only the Playstation Camera is compatible with more than one system.\nConclusion:\nCompatible(PlaystationEyeToy, Playstation2) ::: The Playstation EyeToy"
    ]
  },
  {
    "id": "FOLIO_train_676",
    "context": "The PlayStation EyeToy is a camera accessory for the Playstation 2. The PlayStation Eye is a camera accessory for the Playstation 3. The Playstation Camera is a camera accessory for the Playstation 4 and the Playstation 5. Camera accessory for the system is compatible with that system Only the Playstation Camera is compatible with more than one system.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Playstation Camera can be used for all Playstation consoles.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPlaystation2(x) ::: x is a Playstation 2.\nPlaystation3(x) ::: x is a Playstation 3.\nPlaystation4(x) ::: x is a Playstation 4.\nPlaystation5(x) ::: x is a Playstation 5.\nPlaystationEyeToy(x) ::: x is a Playstation EyeToy.\nPlaystationEye(x) ::: x is a Playstation Eye.\nPlaystationCamera(x) ::: x is a Playstation Camera.\nCameraAccessory(x) ::: x is a camera accessory.\nCompatible(x, y) ::: x is compatible with y.\nPremises:\nPlaystationEyeToy(eyetoy) ∧ CameraAccessory(eyetoy) ∧ Compatible(eyetoy, playstation2) ::: The PlayStation EyeToy is a camera accessory for the Playstation 2.\nPlaystationEye(eye) ∧ CameraAccessory(eye) ∧ Compatible(eye, playstation3) ::: The PlayStation Eye is a camera accessory for the Playstation 3.\nPlaystationCamera(camera) ∧ CameraAccessory(camera) ∧ Compatible(camera, playstation4) ∧ Compatible(camera, playstation5) ::: The Playstation Camera is a camera accessory for the Play"
    ]
  },
  {
    "id": "FOLIO_train_677",
    "context": "Adam Buska is a European football player. If a European plays football, they play what Americans call soccer.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Adam Buska plays what Americans call soccer.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEuropean(x) ::: x is a European.\nFootballPlayer(x) ::: x is a European football player.\nPlay(x, y) ::: x plays y.\nSoccer(x) ::: x is what Americans call soccer.\nPremises:\nEuropean(adamBuska) ∧ FootballPlayer(adamBuska) ::: Adam Buska is a European football player.\n∀x (European(x) ∧ Play(x, football)) → Play(x, soccer) ::: If a European plays football, they play what Americans call soccer.\nConclusion:\nPlay(adamBuska, soccer) ::: Adam Buska plays what Americans call soccer.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being add"
    ]
  },
  {
    "id": "FOLIO_train_678",
    "context": "If the game has sold more than 1 million copies, then it is on the Best Seller list. All Games developed by Paradox Development Studio sold more than 1 million copies. Some games published before 2010 support the Linux OS system. All games on the Best Seller list are popular among young people. FIFA22 neither supports the Linux OS system nor is it popular among young people.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? FIFA21 is published before 2010",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGame(x) ::: x is a game.\nSell(x, y) ::: x sold y copies.\nBestSeller(x) ::: x is on the Best Seller list.\nPublish(x, y) ::: x is published in year y.\nSupport(x, y) ::: x supports the OS system y.\nPopular(x, y) ::: x is popular among y.\nPremises:\n∀x (Sell(x, moreThan1MillionCopies) → BestSeller(x)) ::: If the game has sold more than 1 million copies, then it is on the Best Seller list.\n∀x (Game(x) ∧ DevelopedBy(x, paradoxDevelopmentStudio) → Sell(x, moreThan1MillionCopies)) ::: All Games developed by Paradox Development Studio sold more than 1 million copies.\n∃x (Game(x) ∧ Publish(x, before2010) ∧ Support(x, linuxOS)) ::: Some games published before 2010 support the Linux OS system.\n∀x (BestSeller(x) → Popular(x, youngPeople)) ::: All games on the Best Seller list are popular among young people.\n¬(Support(fifa22, linuxOS) ∨ Popular(fifa22, youngPeople)) ::: FIFA2"
    ]
  },
  {
    "id": "FOLIO_train_679",
    "context": "If the game has sold more than 1 million copies, then it is on the Best Seller list. All Games developed by Paradox Development Studio sold more than 1 million copies. Some games published before 2010 support the Linux OS system. All games on the Best Seller list are popular among young people. FIFA22 neither supports the Linux OS system nor is it popular among young people.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? FIFA21 is published before 2010 and developed by Paradox Development Studio",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSell(x) ::: x is sold.\nGame(x) ::: x is a game.\nBestSeller(x) ::: x is on the Best Seller list.\nPublish(x, y) ::: x is published in year y.\nSupport(x, y) ::: x supports y.\nLinux(x) ::: x is the Linux OS system.\nPopular(x, y) ::: x is popular among y.\nYoung(x) ::: x is a young person.\nPremises:\n∀x (Sell(x) → BestSeller(x)) ::: If the game has sold more than 1 million copies, then it is on the Best Seller list.\n∀x (Game(x) ∧ DevelopedBy(x, paradoxDevelopmentStudio) → Sell(x)) ::: All Games developed by Paradox Development Studio sold more than 1 million copies.\n∃x (Game(x) ∧ Publish(x, yearBefore2010) ∧ Support(x, linux)) ::: Some games published before 2010 support the Linux OS system.\n∀x (BestSeller(x) → Popular(x, young)) ::: All games on the Best Seller list are popular among young people.\n¬(Support(fifa22, linux) ∨ Popular(fifa22, young))"
    ]
  },
  {
    "id": "FOLIO_train_680",
    "context": "If the game has sold more than 1 million copies, then it is on the Best Seller list. All Games developed by Paradox Development Studio sold more than 1 million copies. Some games published before 2010 support the Linux OS system. All games on the Best Seller list are popular among young people. FIFA22 neither supports the Linux OS system nor is it popular among young people.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? if FIFA21 is either a game published before 2010 or developed by Paradox Development Studio, then it is either in the Best Seller list and sold more than 1 million copies; or not in the Best Seller list and hasn't sold more than 1 million copies.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGame(x) ::: x is a game.\nSell(x, y) ::: x sold y copies.\nBestSeller(x) ::: x is on the Best Seller list.\nPublish(x, y) ::: x is published in year y.\nSupport(x, y) ::: x supports the OS system y.\nPopular(x, y) ::: x is popular among y.\nDevelop(x, y) ::: x is developed by y.\nPremises:\n∀x (Sell(x, moreThan1MillionCopies) → BestSeller(x)) ::: If the game has sold more than 1 million copies, then it is on the Best Seller list.\n∀x (Develop(x, paradoxDevelopmentStudio) → Sell(x, moreThan1MillionCopies)) ::: All Games developed by Paradox Development Studio sold more than 1 million copies.\n∃x (Game(x) ∧ Publish(x, before2010) ∧ Support(x, linux)) ::: Some games published before 2010 support the Linux OS system.\n∀x (BestSeller(x) → Popular(x, youngPeople)) ::: All games on the Best Seller list are popular among young people.\n¬(Support(fifa22, linux) ∧ Popular(fifa22, youngPeople)) ::: FIFA22 neither supports the Linux OS system nor is it popular among young people.\nConclusion:\n(Develop(fifa21, paradoxDevelopmentStudio) ∨ Publish(fifa21, before2010)) → (BestSeller(fifa21) ∧ Sell(fifa21, moreThan1MillionCopies)) ⊕ (¬BestSeller(fifa21) ∧ ¬Sell(fifa21, moreThan1MillionCopies)) ::: if FIFA21 is either a game published before 2010 or developed by Paradox Development Studio, then it is either in the Best Seller list and sold more than 1 million copies; or not in the Best Seller list and hasn't sold more than 1 million copies.\n------"
    ]
  },
  {
    "id": "FOLIO_train_681",
    "context": "China is one of BRICS and its economy is emerging. India is one of BRICS and its economy is emerging. All people from China speak Chinese. All people from India speak Hindi or English. There is an Indian.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? All people from BRICS neither speak Hindi nor speak English.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nChina(x) ::: x is China.\nIndia(x) ::: x is India.\nBRICS(x) ::: x is one of BRICS.\nEconomy(x) ::: x is an economy.\nEmerging(x) ::: x is emerging.\nPeople(x) ::: x is a people.\nSpeak(x, y) ::: x speaks y.\nChinese(x) ::: x is Chinese.\nHindi(x) ::: x is Hindi.\nEnglish(x) ::: x is English.\nIndian(x) ::: x is an Indian.\nPremises:\nChina(china) ∧ India(india) ∧ BRICS(china) ∧ BRICS(india) ∧ Economy(economy) ∧ Emerging(economy) ∧ People(people) ∧ Speak(people, chinese) ∧ Speak(people, hindi) ∧ Speak(people, english) ∧ Indian(indian) ::: China is one of BRICS and its economy is emerging. India is one of BRICS and its economy is emerging. All people from China speak Chinese. All people from India speak Hindi or English. There is an Indian.\nConclusion:\n∀x (BRICS(x) → ¬Speak(x, hindi) ∧ ¬Speak(x, english)) ::: All people from BRICS neither speak Hindi nor speak English.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to"
    ]
  },
  {
    "id": "FOLIO_train_682",
    "context": "China is one of BRICS and its economy is emerging. India is one of BRICS and its economy is emerging. All people from China speak Chinese. All people from India speak Hindi or English. There is an Indian.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? India's economy is not emerging.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nChina(x) ::: x is China.\nIndia(x) ::: x is India.\nBRICS(x) ::: x is one of BRICS.\nEconomy(x) ::: x is an economy.\nEmerging(x) ::: x is emerging.\nPeople(x) ::: x is a people.\nChinese(x) ::: x speaks Chinese.\nHindi(x) ::: x speaks Hindi.\nEnglish(x) ::: x speaks English.\nIndian(x) ::: x is an Indian.\nPremises:\nChina(china) ∧ India(india) ∧ BRICS(china) ∧ BRICS(india) ∧ Economy(economy) ∧ Emerging(emerging) ∧ People(people) ∧ Chinese(chinese) ∧ Hindi(hindi) ∧ English(english) ∧ Indian(indian) ::: China is one of BRICS and its economy is emerging. India is one of BRICS and its economy is emerging. All people from China speak Chinese. All people from India speak Hindi or English. There is an Indian.\nConclusion:\n¬Emerging(economy) ::: India's economy is not emerging.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine and a person"
    ]
  },
  {
    "id": "FOLIO_train_683",
    "context": "China is one of BRICS and its economy is emerging. India is one of BRICS and its economy is emerging. All people from China speak Chinese. All people from India speak Hindi or English. There is an Indian.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There is a person from BRICS speaking Hindi.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nChina(x) ::: x is China.\nIndia(x) ::: x is India.\nBRICS(x) ::: x is one of BRICS.\nEconomy(x) ::: x is an economy.\nEmerging(x) ::: x is emerging.\nPerson(x) ::: x is a person.\nSpeak(x, y) ::: x speaks y.\nChinese(x) ::: x is Chinese.\nHindi(x) ::: x is Hindi.\nEnglish(x) ::: x is English.\nIndian(x) ::: x is an Indian.\nPremises:\nChina(china) ∧ India(india) ∧ BRICS(china) ∧ BRICS(india) ∧ Economy(economy) ∧ Emerging(economy) ∧ ∀x (BRICS(x) → Economy(x)) ∧ ∀x (BRICS(x) → Emerging(x)) ::: China is one of BRICS and its economy is emerging. India is one of BRICS and its economy is emerging.\n∀x (Person(x) ∧ China(x) → Speak(x, Chinese)) ::: All people from China speak Chinese.\n∀x (Person(x) ∧ India(x) → (Speak(x, Hindi) ∨ Speak(x, English))) ::: All people from India speak Hindi or English.\nIndian(indian) ::: There is an Indian.\nConclusion:\n∃x (Person(x) ∧ BRICS(x) ∧ Speak(x, Hindi)) ::: There is a person from BRICS speaking Hindi.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina"
    ]
  },
  {
    "id": "FOLIO_train_684",
    "context": "Daveed Diggs is an actor and film producer. Daveed Diggs played two roles in the musical Hamilton. One of the actors from Hamilton won the best actor award. The actor playing Thomas Jefferson won the best actor award. Daveed Diggs played Thomas Jefferson. Musicals are not films.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Hamilton is a film.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nActor(x) ::: x is an actor.\nFilmProducer(x) ::: x is a film producer.\nMusical(x) ::: x is a musical.\nFilm(x) ::: x is a film.\nPlay(x) ::: x is a play.\nAward(x) ::: x is an award.\nBestActor(x) ::: x is the best actor award.\nPlay(hamilton) ::: Hamilton is a play.\nPremises:\nActor(daveedDiggs) ∧ FilmProducer(daveedDiggs) ∧ Play(hamilton) ∧ ∀x (Play(x) → ¬Film(x)) ::: Daveed Diggs is an actor and film producer. Daveed Diggs played two roles in the musical Hamilton. One of the actors from Hamilton won the best actor award. The actor playing Thomas Jefferson won the best actor award. Daveed Diggs played Thomas Jefferson. Musicals are not films.\nConclusion:\nFilm(hamilton) ::: Hamilton is a film.\n------\nProblem:\nThe first person to fly solo across the Atlantic Ocean was Charles Lindbergh. Charles Lindbergh was a pilot. The first person to fly solo across the Atlantic Ocean was a pilot.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Charles Lindbergh was the first person to fly solo across the Atlantic Ocean.\n###\nPredicates:\nPilot(x) ::: x is a pilot.\nFly(x, y) ::: x flies y.\nSolo(x) ::: x is solo.\nAtlanticOcean(x) ::: x is the Atlantic Ocean.\nFirst(x, y) ::: x is the first y.\nPremises:\nPilot(charlesLindbergh) ::: Charles Lindbergh was a pilot.\nFirst(charlesLindbergh, personToFlySoloAcrossAtlanticOcean) ::: The first person to fly solo across the Atlantic Ocean was Charles Lindbergh.\nFirst(charlesLindbergh, personToFlySoloAcrossAtlanticOcean) ∧ Fly(charlesLindbergh, solo) ∧ AtlanticOcean(atlanticOcean)"
    ]
  },
  {
    "id": "FOLIO_train_685",
    "context": "Daveed Diggs is an actor and film producer. Daveed Diggs played two roles in the musical Hamilton. One of the actors from Hamilton won the best actor award. The actor playing Thomas Jefferson won the best actor award. Daveed Diggs played Thomas Jefferson. Musicals are not films.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Daveed Diggs won the best actor award.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nActor(x) ::: x is an actor.\nFilmProducer(x) ::: x is a film producer.\nMusical(x) ::: x is a musical.\nFilm(x) ::: x is a film.\nPlay(x) ::: x is a play.\nAward(x) ::: x is an award.\nBestActor(x) ::: x is the best actor award.\nPlay(hamilton) ::: Hamilton is a play.\nActor(daveedDiggs) ::: Daveed Diggs is an actor.\nFilmProducer(daveedDiggs) ::: Daveed Diggs is a film producer.\nMusical(hamilton) ::: Hamilton is a musical.\nPlay(hamilton) ::: Hamilton is a play.\n∀x (Musical(x) → ¬Film(x)) ::: Musicals are not films.\n∀x (Play(x) → ∃y (Actor(y) ∧ Play(x, y))) ::: Every play has at least one actor.\n∀x (Play(x) → ∃y (Award(y) ∧ Play(x, y))) ::: Every play has at least one award.\n∀x (Play(x) → ∃y (Actor(y) ∧ Play(x, y))) ::: Every play has at least one actor.\n∀x (Play(x) → ∃y (Award(y) ∧ Play(x, y))) ::: Every play has at least one award.\n∀x (Play(x) → ∃y (Actor(y) ∧ Play(x, y))) ::: Every play has at least one actor.\n∀x (Play(x) → ∃y (Award(y) ∧ Play(x, y))) ::: Every play has at least one award.\n∀x (Play(x) → ∃y (Actor(y) ∧ Play(x, y))) ::: Every play has at least one actor.\n∀x (Play(x) → ∃y (Award(y) ∧ Play(x, y))) ::: Every"
    ]
  },
  {
    "id": "FOLIO_train_686",
    "context": "Daveed Diggs is an actor and film producer. Daveed Diggs played two roles in the musical Hamilton. One of the actors from Hamilton won the best actor award. The actor playing Thomas Jefferson won the best actor award. Daveed Diggs played Thomas Jefferson. Musicals are not films.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Hamilton won two awards.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nActor(x) ::: x is an actor.\nFilmProducer(x) ::: x is a film producer.\nMusical(x) ::: x is a musical.\nFilm(x) ::: x is a film.\nPlay(x) ::: x is a play.\nAward(x) ::: x is an award.\nWon(x, y) ::: x won y.\nPlayed(x, y) ::: x played y.\nPremises:\nActor(daveedDiggs) ∧ FilmProducer(daveedDiggs) ∧ Played(daveedDiggs, hamilton) ∧ Played(daveedDiggs, hamilton) ::: Daveed Diggs is an actor and film producer. Daveed Diggs played two roles in the musical Hamilton.\n∃x (Actor(x) ∧ Won(x, bestActorAward)) ::: One of the actors from Hamilton won the best actor award.\n∃x (Played(x, hamilton) ∧ Won(x, bestActorAward)) ::: The actor playing Thomas Jefferson won the best actor award.\nPlayed(daveedDiggs, thomasJefferson) ::: Daveed Diggs played Thomas Jefferson.\n¬Musical(film) ∧ ¬Film(musical) ::: Musicals are not films.\nConclusion:\n∃x ∃y (Award(x) ∧ Award(y) ∧ Won(hamilton, x) ∧ Won(hamilton, y)) ::: Hamilton won two awards.\n------\nProblem:\nThe 2016 Summer Olympics were held in Rio de Janeiro, Brazil. The 2016 Summer Olympics were held in Rio de Janeiro, Brazil. The 2016 Summer Olympics were held in Rio de Janeiro, Brazil. The 2016 Summer Olympics were held in Rio de Janeiro, Brazil. The 2016 Summer Olympics were held in Rio de Janeiro, Brazil. The 2016 Summer Olympics were held in Rio de Janeiro, Brazil. The 2016 Summer Olympics were held in Rio de Janeiro, Brazil. The 2016 Summer Olympics were held in Rio de"
    ]
  },
  {
    "id": "FOLIO_train_687",
    "context": "Ernest Pohl was a Polish football player. A football player in the Polish First Division has scored over 180 goals. Ernest Pohl scored more than 180 goals in the Polish First Division. Górnik Zabrze's stadium was named after a soccer player from Ruda Śląska. Ernest Pohl is from Ruda Śląska.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Ernest Pohl has not scored more than 180 goals.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPolish(x) ::: x is a Polish person.\nFootballPlayer(x) ::: x is a football player.\nPolishFirstDivision(x) ::: x is a Polish First Division.\nScore(x, y) ::: x has scored y goals.\nGoal(x) ::: x is a goal.\nStadium(x) ::: x is a stadium.\nNamedAfter(x, y) ::: x is named after y.\nPremises:\nFootballPlayer(ernest) ∧ Polish(ernest) ∧ Score(ernest, moreThan180) ∧ PolishFirstDivision(polishFirstDivision) ∧ Score(ernest, polishFirstDivision, moreThan180) ::: Ernest Pohl was a Polish football player. A football player in the Polish First Division has scored over 180 goals. Ernest Pohl scored more than 180 goals in the Polish First Division.\nStadium(gornikZabrzeStadium) ∧ NamedAfter(gornikZabrzeStadium, soccerPlayer) ∧ Polish(soccerPlayer) ∧ From(soccerPlayer, rudaSlask) ::: Górnik Zabrze's stadium was named after a soccer player from Ruda Śląska. Ernest Pohl is from Ruda Śląska.\nConclusion:\n¬Score(ernest, moreThan180) ::: Ernest Pohl has not scored more than 180 goals.\n------\nProblem:\nThe 1992 Summer Olympics, officially known as the Games of the XXV Olympiad, was an international multi-sport event that was held in Barcelona, Spain. The 1992 Summer Olympics were the first Summer Olympics since the 1972 Summer Olympics to be held in Europe. The 1992 Summer Olympics were the first Summer Olympics since the 1984 Summer Olympics to be held in a Western country. The 1992 Summer Olympics were the first Summer Olympics since the 1980 Summer Olympics to be held in a country that had never hosted the Summer Olympics before. The 1992 Summer Olympics were the first Summer Olympics since the 1988 Summer Olympics to be held in a country that had never hosted the"
    ]
  },
  {
    "id": "FOLIO_train_688",
    "context": "Ernest Pohl was a Polish football player. A football player in the Polish First Division has scored over 180 goals. Ernest Pohl scored more than 180 goals in the Polish First Division. Górnik Zabrze's stadium was named after a soccer player from Ruda Śląska. Ernest Pohl is from Ruda Śląska.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Górnik Zabrze's stadium was named after Ernest Pohl.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPolish(x) ::: x is a Polish person.\nFootballPlayer(x) ::: x is a football player.\nPolishFirstDivision(x) ::: x is a football player in the Polish First Division.\nScore(x, y) ::: x has scored y goals.\nOver(x, y) ::: x is over y.\nMoreThan(x, y) ::: x is more than y.\nNamedAfter(x, y) ::: x is named after y.\nFrom(x, y) ::: x is from y.\nPremises:\nPolish(ernest) ∧ FootballPlayer(ernest) ∧ Score(ernest, over180) ∧ PolishFirstDivision(ernest) ::: Ernest Pohl was a Polish football player.\n∀x (PolishFirstDivision(x) → Score(x, over180)) ::: A football player in the Polish First Division has scored over 180 goals.\nScore(ernest, moreThan180) ::: Ernest Pohl scored more than 180 goals in the Polish First Division.\nNamedAfter(stadiumOfGórnikZabrze, soccerPlayerFromRudaŚląska) ∧ From(ernest, rudaŚląska) ::: Górnik Zabrze's stadium was named after a soccer player from Ruda Śląska. Ernest Pohl is from Ruda Śląska.\nConclusion:\nNamedAfter(stadiumOfGórnikZabrze, ernest) ::: Górnik Zabrze's stadium was named after Ernest Pohl.\n------\nProblem:\nThe first person to fly solo across the Atlantic Ocean was Charles Lindbergh. Charles Lindbergh was a pilot. A pilot is a person.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The first person to fly solo across the Atlantic Ocean was a pilot.\nBased on the above information, is the following statement true, false, or uncertain? The first person to fly solo across the Atlantic Ocean was a person.\n###\nPredicates:\nFirstPersonToFlySoloAcrossTheAtlanticOcean(x) ::: x is the first person to fly solo across the Atlantic Ocean.\nPilot"
    ]
  },
  {
    "id": "FOLIO_train_689",
    "context": "Ann J. Land was a member of the Philadelphia City Council and was also a member of the Democratic Party. Ann J. Land ran unopposed for the Philadephia City Council in 1980. People who run unopposed for the Philadelphia City Council are elected to the positions they run for in the same year. Michael Nutter was a political challenger. Ann J. Land defeated Michael Nutter and ran for the Philadelphia City Council in 1987.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Ann J. Land was elected to the Philadelphia City Council in 1980.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMember(x, y) ::: x is a member of y.\nDemocrat(x) ::: x is a member of the Democratic Party.\nRun(x, y) ::: x runs for y.\nUnopposed(x) ::: x runs unopposed.\nElected(x, y) ::: x is elected to y.\nPosition(x) ::: x is a position.\nYear(x) ::: x is a year.\nChallenger(x) ::: x is a political challenger.\nDefeat(x, y) ::: x defeats y.\nPremises:\nMember(ann, philadelphiaCityCouncil) ∧ Democrat(ann) ::: Ann J. Land was a member of the Philadelphia City Council and was also a member of the Democratic Party.\nRun(ann, philadelphiaCityCouncil) ∧ Unopposed(ann) ∧ Year(year1980) ::: Ann J. Land ran unopposed for the Philadephia City Council in 1980.\n∀x (Unopposed(x) → Elected(x, Position(x))) ::: People who run unopposed for the Philadelphia City Council are elected to the positions they run for in the same year.\nMember(michael, challenger) ::: Michael Nutter was a political challenger.\nDefeat(ann, michael) ∧ Run(ann, philadelphiaCityCouncil) ∧ Year(year1987) ::: Ann J. Land defeated Michael Nutter and ran for the Philadelphia City Council in 1987.\nConclusion:\nElected(ann, philadelphiaCityCouncil) ∧ Year(year1980) ::: Ann J. Land was elected to the Philadelphia City Council in 1980.\n------\nProblem:\nThe 1992 Summer Olympics were held in Barcelona, Spain. The 1992 Summer Olympics were held in a city in Spain. The 1992 Summer Olympics were held in a city in Europe. The 1992 Summer Olympics were held in a city in the Iberian Peninsula. The 1992 Summer Olympics were held in a city in the Mediterranean region. The 1992 Summer Olympics were held in a city in"
    ]
  },
  {
    "id": "FOLIO_train_690",
    "context": "Ann J. Land was a member of the Philadelphia City Council and was also a member of the Democratic Party. Ann J. Land ran unopposed for the Philadephia City Council in 1980. People who run unopposed for the Philadelphia City Council are elected to the positions they run for in the same year. Michael Nutter was a political challenger. Ann J. Land defeated Michael Nutter and ran for the Philadelphia City Council in 1987.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Ann J. Land was elected to the Philadelphia City Council in 1987.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMember(x, y) ::: x is a member of y.\nDemocrat(x) ::: x is a member of the Democratic Party.\nRun(x, y, z) ::: x runs for y in year z.\nUnopposed(x, y, z) ::: x runs unopposed for y in year z.\nElected(x, y, z) ::: x is elected to y in year z.\nChallenger(x) ::: x is a political challenger.\nDefeat(x, y) ::: x defeats y.\nPremises:\nMember(ann, philadelphiaCityCouncil) ∧ Member(ann, democraticParty) ::: Ann J. Land was a member of the Philadelphia City Council and was also a member of the Democratic Party.\nRun(ann, philadelphiaCityCouncil, year1980) ∧ Unopposed(ann, philadelphiaCityCouncil, year1980) ::: Ann J. Land ran unopposed for the Philadephia City Council in 1980.\n∀x ∀y ∀z (Unopposed(x, y, z) → Elected(x, y, z)) ::: People who run unopposed for the Philadelphia City Council are elected to the positions they run for in the same year.\nChallenger(michael) ::: Michael Nutter was a political challenger.\nDefeat(ann, michael) ∧ Run(ann, philadelphiaCityCouncil, year1987) ::: Ann J. Land defeated Michael Nutter and ran for the Philadelphia City Council in 1987.\nConclusion:\nElected(ann, philadelphiaCityCouncil, year1987) ::: Ann J. Land was elected to the Philadelphia City Council in 1987.\n------"
    ]
  },
  {
    "id": "FOLIO_train_691",
    "context": "Ann J. Land was a member of the Philadelphia City Council and was also a member of the Democratic Party. Ann J. Land ran unopposed for the Philadephia City Council in 1980. People who run unopposed for the Philadelphia City Council are elected to the positions they run for in the same year. Michael Nutter was a political challenger. Ann J. Land defeated Michael Nutter and ran for the Philadelphia City Council in 1987.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There was some member of the Democratic Party elected to the Philadelphia City Council in 1980.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMember(x, y) ::: x is a member of y.\nRun(x, y) ::: x runs for y.\nUnopposed(x) ::: x runs unopposed.\nElected(x, y) ::: x is elected to y.\nPosition(x) ::: x is a position.\nChallenger(x) ::: x is a political challenger.\nDefeat(x, y) ::: x defeats y.\nPremises:\nMember(ann, democraticParty) ::: Ann J. Land was a member of the Democratic Party.\nMember(ann, philadelphiaCityCouncil) ::: Ann J. Land was a member of the Philadelphia City Council.\nRun(ann, philadelphiaCityCouncil) ::: Ann J. Land ran for the Philadelphia City Council.\nUnopposed(ann) ::: Ann J. Land ran unopposed for the Philadelphia City Council.\nElected(ann, philadelphiaCityCouncil) ::: Ann J. Land was elected to the Philadelphia City Council.\nPosition(philadelphiaCityCouncil) ::: The Philadelphia City Council is a position.\nRun(ann, philadelphiaCityCouncil) ∧ Year1980 ::: Ann J. Land ran for the Philadelphia City Council in 1980.\n∀x (Run(x, philadelphiaCityCouncil) ∧ Unopposed(x) → Elected(x, philadelphiaCityCouncil)) ::: People who run unopposed for the Philadelphia City Council are elected to the positions they run for in the same year.\nChallenger(michael) ::: Michael Nutter was a political challenger.\nDefeat(ann, michael) ::: Ann J. Land defeated Michael Nutter.\nRun(ann, philadelphiaCityCouncil) ∧ Year1987 ::: Ann J. Land ran"
    ]
  },
  {
    "id": "FOLIO_train_692",
    "context": "Aberdeen won the cup in the 2013 final. Rangers won the cup in 2014 final. Aberdeen and Rangers are different teams. Different teams cannot win the same cup in a given year's final.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Rangers won the cup in 2015.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAberdeen(x) ::: x is the Aberdeen team.\nRangers(x) ::: x is the Rangers team.\nCup(x) ::: x is the cup.\nWin(x, y) ::: x won y.\nFinal(x) ::: x is a final.\nPremises:\nWin(aberdeen, cup) ∧ Final(year2013) ::: Aberdeen won the cup in the 2013 final.\nWin(rangers, cup) ∧ Final(year2014) ::: Rangers won the cup in 2014 final.\n¬(Aberdeen(x) ∧ Rangers(x)) ::: Aberdeen and Rangers are different teams.\n∀x ∀y (Final(x) ∧ Final(y) ∧ x ≠ y → ¬(Win(aberdeen, cup) ∧ Win(rangers, cup))) ::: Different teams cannot win the same cup in a given year's final.\nConclusion:\nWin(rangers, cup) ∧ Final(year2015) ::: Rangers won the cup in 2015.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information,"
    ]
  },
  {
    "id": "FOLIO_train_693",
    "context": "Aberdeen won the cup in the 2013 final. Rangers won the cup in 2014 final. Aberdeen and Rangers are different teams. Different teams cannot win the same cup in a given year's final.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Rangers won the cup in 2013.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAberdeen(x) ::: x is Aberdeen.\nRangers(x) ::: x is Rangers.\nCup(x) ::: x is the cup.\nWin(x, y) ::: x won y.\nFinal(x) ::: x is the final.\nPremises:\nWin(aberdeen, cup) ∧ Final(year2013) ::: Aberdeen won the cup in the 2013 final.\nWin(rangers, cup) ∧ Final(year2014) ::: Rangers won the cup in 2014 final.\n¬(Aberdeen(x) ∧ Rangers(x)) ::: Aberdeen and Rangers are different teams.\n∀x ∀y (Final(x) ∧ Final(y) ∧ x ≠ y → ¬(Win(aberdeen, cup) ∧ Win(rangers, cup))) ::: Different teams cannot win the same cup in a given year's final.\nConclusion:\nWin(rangers, cup) ∧ Final(year2013) ::: Rangers won the cup in 2013.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement"
    ]
  },
  {
    "id": "FOLIO_train_694",
    "context": "Aberdeen won the cup in the 2013 final. Rangers won the cup in 2014 final. Aberdeen and Rangers are different teams. Different teams cannot win the same cup in a given year's final.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Aberdeen has won a cup before.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAberdeen(x) ::: x is Aberdeen.\nRangers(x) ::: x is Rangers.\nWin(x, y) ::: x won the cup in year y.\nPremises:\nWin(aberdeen, year2013) ::: Aberdeen won the cup in the 2013 final.\nWin(rangers, year2014) ::: Rangers won the cup in 2014 final.\n¬(Aberdeen(x) ∧ Rangers(x)) ::: Aberdeen and Rangers are different teams.\n∀x ∀y (Win(x, y) ∧ Win(x, y)) → ¬(Aberdeen(x) ∧ Rangers(x)) ::: Different teams cannot win the same cup in a given year's final.\nConclusion:\n∃y (Win(aberdeen, y)) ::: Aberdeen has won a cup before.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain?"
    ]
  },
  {
    "id": "FOLIO_train_695",
    "context": "All young working professionals who have regular 9-5 jobs also have pets. Some people who live in Manhattan are young working professionals who have regular 9-5 jobs. All people who have pets are people who have at least one child. People who do not have at least one child are people who own a sports car. Mary either does not own a sports car or, if they do, then they do not have at least one child.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mary is a person who lives in Manhattan.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nYoungWorkingProfessional(x) ::: x is a young working professional.\nRegular95Job(x) ::: x has a regular 9-5 job.\nPet(x) ::: x has a pet.\nChild(x) ::: x has at least one child.\nSportsCar(x) ::: x owns a sports car.\nManhattan(x) ::: x lives in Manhattan.\nPremises:\n∀x (YoungWorkingProfessional(x) ∧ Regular95Job(x) → Pet(x)) ::: All young working professionals who have regular 9-5 jobs also have pets.\n∃x (Manhattan(x) ∧ YoungWorkingProfessional(x) ∧ Regular95Job(x)) ::: Some people who live in Manhattan are young working professionals who have regular 9-5 jobs.\n∀x (Pet(x) → Child(x)) ::: All people who have pets are people who have at least one child.\n∀x (¬Child(x) → SportsCar(x)) ::: People who do not have at least one child are people who own a sports car.\n¬SportsCar(mary) ∨ (SportsCar(mary) → ¬Child(mary)) ::: Mary either does not own a sports car or, if they do, then they do not have at least one child.\nConclusion:\nManhattan(mary) ::: Mary is a person who lives in Manhattan.\n------\nProblem:\nAll people who are not students are people who are not children. All people who are not children are people who are not students. All people who are not students are people who are not children. All people who are not children are people who are not students. All people who are not students are people who are not children. All people who are not children are people who"
    ]
  },
  {
    "id": "FOLIO_train_696",
    "context": "All young working professionals who have regular 9-5 jobs also have pets. Some people who live in Manhattan are young working professionals who have regular 9-5 jobs. All people who have pets are people who have at least one child. People who do not have at least one child are people who own a sports car. Mary either does not own a sports car or, if they do, then they do not have at least one child.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mary is a person who lives in Manhattan and is a young working professional who has a regular 9-5 job.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nYoungWorkingProfessional(x) ::: x is a young working professional.\nRegular95Job(x) ::: x has a regular 9-5 job.\nPet(x) ::: x has a pet.\nChild(x) ::: x has at least one child.\nSportsCar(x) ::: x owns a sports car.\nLiveInManhattan(x) ::: x lives in Manhattan.\nPremises:\n∀x (YoungWorkingProfessional(x) ∧ Regular95Job(x) → Pet(x)) ::: All young working professionals who have regular 9-5 jobs also have pets.\n∃x (LiveInManhattan(x) ∧ YoungWorkingProfessional(x) ∧ Regular95Job(x)) ::: Some people who live in Manhattan are young working professionals who have regular 9-5 jobs.\n∀x (Pet(x) → Child(x)) ::: All people who have pets are people who have at least one child.\n∀x (¬Child(x) → SportsCar(x)) ::: People who do not have at least one child are people who own a sports car.\n¬(SportsCar(mary) ∧ Child(mary)) ∨ ¬SportsCar(mary) ::: Mary either does not own a sports car or, if they do, then they do not have at least one child.\nConclusion:\nLiveInManhattan(mary) ∧ YoungWorkingProfessional(mary) ∧ Regular95Job(mary) ::: Mary is a person who lives in Manhattan and is a young working professional who has a regular 9-5 job.\n------\nProblem:\nAll people who are not students are people who are not children. All people who are not children are people who are not students"
    ]
  },
  {
    "id": "FOLIO_train_697",
    "context": "All young working professionals who have regular 9-5 jobs also have pets. Some people who live in Manhattan are young working professionals who have regular 9-5 jobs. All people who have pets are people who have at least one child. People who do not have at least one child are people who own a sports car. Mary either does not own a sports car or, if they do, then they do not have at least one child.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Mary is a young working professional who has a regular 9-5 job, then Mary does not live in Manhattan.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nYoungWorkingProfessional(x) ::: x is a young working professional.\nRegular95Job(x) ::: x has a regular 9-5 job.\nPet(x) ::: x has a pet.\nChild(x) ::: x has at least one child.\nSportsCar(x) ::: x owns a sports car.\nLiveInManhattan(x) ::: x lives in Manhattan.\nPremises:\n∀x (YoungWorkingProfessional(x) ∧ Regular95Job(x) → Pet(x)) ::: All young working professionals who have regular 9-5 jobs also have pets.\n∃x (LiveInManhattan(x) ∧ YoungWorkingProfessional(x) ∧ Regular95Job(x)) ::: Some people who live in Manhattan are young working professionals who have regular 9-5 jobs.\n∀x (Pet(x) → Child(x)) ::: All people who have pets are people who have at least one child.\n∀x (¬Child(x) → SportsCar(x)) ::: People who do not have at least one child are people who own a sports car.\n¬(SportsCar(mary) ∧ Child(mary)) ∨ ¬SportsCar(mary) ::: Mary either does not own a sports car or, if they do, then they do not have at least one child.\nConclusion:\n¬(YoungWorkingProfessional(mary) ∧ Regular95Job(mary) ∧ LiveInManhattan(mary)) ::: If Mary is a young working professional who has a regular 9-5 job, then Mary does not live in Manhattan.\n------\nProblem:\nAll people who are not aware that caffeine is a drug are people who regularly drink coffee. People"
    ]
  },
  {
    "id": "FOLIO_train_698",
    "context": "Either block design or event-related design. All event-related designs are brain image acquisition. All brain image acquisition is preceded by data processing. Nothing preceded by data processing acquires data. Picture memory is either an event-related design and acquiring data or neither an event-related design nor acquiring data.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Picture memory is preceded by data processing.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlockDesign(x) ::: x is a block design.\nEventRelatedDesign(x) ::: x is an event-related design.\nBrainImageAcquisition(x) ::: x is a brain image acquisition.\nPrecededBy(x, y) ::: x is preceded by y.\nDataProcessing(x) ::: x is data processing.\nAcquiresData(x) ::: x acquires data.\nPictureMemory(x) ::: x is picture memory.\nPremises:\n(BlockDesign(pictureMemory) ⊕ EventRelatedDesign(pictureMemory)) ::: Either block design or event-related design.\n∀x (EventRelatedDesign(x) → BrainImageAcquisition(x)) ::: All event-related designs are brain image acquisition.\n∀x (BrainImageAcquisition(x) → PrecededBy(x, DataProcessing(x))) ::: All brain image acquisition is preceded by data processing.\n∀x (PrecededBy(x, DataProcessing(x)) → ¬AcquiresData(x)) ::: Nothing preceded by data processing acquires data.\n(EventRelatedDesign(pictureMemory) ∧ AcquiresData(pictureMemory)) ⊕ ¬(EventRelatedDesign(pictureMemory) ∨ AcquiresData(pictureMemory)) ::: Picture memory is either an event-related design and acquiring data or neither an event-related design nor acquiring data.\nConclusion:\nPrecededBy(pictureMemory, DataProcessing(pictureMemory)) ::: Picture memory is preceded by data processing.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. R"
    ]
  },
  {
    "id": "FOLIO_train_699",
    "context": "Either block design or event-related design. All event-related designs are brain image acquisition. All brain image acquisition is preceded by data processing. Nothing preceded by data processing acquires data. Picture memory is either an event-related design and acquiring data or neither an event-related design nor acquiring data.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Picture memory is a block design.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlockDesign(x) ::: x is a block design.\nEventRelatedDesign(x) ::: x is an event-related design.\nBrainImageAcquisition(x) ::: x is brain image acquisition.\nPrecededBy(x, y) ::: x is preceded by y.\nDataProcessing(x) ::: x is data processing.\nAcquiresData(x) ::: x acquires data.\nPremises:\n(BlockDesign(pictureMemory) ⊕ EventRelatedDesign(pictureMemory)) ∧ (EventRelatedDesign(pictureMemory) → AcquiresData(pictureMemory)) ::: Either block design or event-related design. All event-related designs are brain image acquisition. All brain image acquisition is preceded by data processing. Nothing preceded by data processing acquires data. Picture memory is either an event-related design and acquiring data or neither an event-related design nor acquiring data.\nConclusion:\nBlockDesign(pictureMemory) ::: Picture memory is a block design.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false"
    ]
  },
  {
    "id": "FOLIO_train_700",
    "context": "Either block design or event-related design. All event-related designs are brain image acquisition. All brain image acquisition is preceded by data processing. Nothing preceded by data processing acquires data. Picture memory is either an event-related design and acquiring data or neither an event-related design nor acquiring data.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Picture memory is either a block design or acquiring data.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlockDesign(x) ::: x is a block design.\nEventRelatedDesign(x) ::: x is an event-related design.\nBrainImageAcquisition(x) ::: x is brain image acquisition.\nPrecededBy(x, y) ::: x is preceded by y.\nDataProcessing(x) ::: x is data processing.\nAcquireData(x) ::: x acquires data.\nPictureMemory(x) ::: x is picture memory.\nPremises:\n(BlockDesign(pictureMemory) ⊕ EventRelatedDesign(pictureMemory)) ::: Either block design or event-related design.\n∀x (EventRelatedDesign(x) → BrainImageAcquisition(x)) ::: All event-related designs are brain image acquisition.\n∀x (BrainImageAcquisition(x) → PrecededBy(x, DataProcessing(x))) ::: All brain image acquisition is preceded by data processing.\n∀x (PrecededBy(x, DataProcessing(x)) → ¬AcquireData(x)) ::: Nothing preceded by data processing acquires data.\n(EventRelatedDesign(pictureMemory) ∧ AcquireData(pictureMemory)) ⊕ ¬(EventRelatedDesign(pictureMemory) ∨ AcquireData(pictureMemory)) ::: Picture memory is either an event-related design and acquiring data or neither an event-related design nor acquiring data.\nConclusion:\n(BlockDesign(pictureMemory) ⊕ AcquireData(pictureMemory)) ::: Picture memory is either a block design or acquiring data.\n------"
    ]
  },
  {
    "id": "FOLIO_train_701",
    "context": "Either block design or event-related design. All event-related designs are brain image acquisition. All brain image acquisition is preceded by data processing. Nothing preceded by data processing acquires data. Picture memory is either an event-related design and acquiring data or neither an event-related design nor acquiring data.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If picture memory is not acquiring data, then picture memory is a block design and acquiring data.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlockDesign(x) ::: x is a block design.\nEventRelatedDesign(x) ::: x is an event-related design.\nBrainImageAcquisition(x) ::: x is brain image acquisition.\nPrecededBy(x, y) ::: x is preceded by y.\nDataProcessing(x) ::: x is data processing.\nAcquireData(x) ::: x acquires data.\nPictureMemory(x) ::: x is picture memory.\nPremises:\n(BlockDesign(pictureMemory) ⊕ EventRelatedDesign(pictureMemory)) ::: Either block design or event-related design.\n∀x (EventRelatedDesign(x) → BrainImageAcquisition(x)) ::: All event-related designs are brain image acquisition.\n∀x (BrainImageAcquisition(x) → PrecededBy(x, DataProcessing(x))) ::: All brain image acquisition is preceded by data processing.\n∀x (PrecededBy(x, DataProcessing(x)) → ¬AcquireData(x)) ::: Nothing preceded by data processing acquires data.\n(EventRelatedDesign(pictureMemory) ∧ AcquireData(pictureMemory)) ⊕ ¬(EventRelatedDesign(pictureMemory) ∨ AcquireData(pictureMemory)) ::: Picture memory is either an event-related design and acquiring data or neither an event-related design nor acquiring data.\nConclusion:\n(¬AcquireData(pictureMemory) → (BlockDesign(pictureMemory) ∧ AcquireData(pictureMemory))) ::: If picture memory is"
    ]
  },
  {
    "id": "FOLIO_train_702",
    "context": "The USS Lyon was a US Navy ship involved in WWII. All ships involved in WWII are currently decommissioned or in a museum.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The USS Lyon is decommissioned.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nShip(x) ::: x is a ship.\nInvolved(x) ::: x is involved in WWII.\nDecommissioned(x) ::: x is decommissioned.\nMuseum(x) ::: x is in a museum.\nPremises:\nShip(ussLyon) ∧ Involved(ussLyon) ::: The USS Lyon was a US Navy ship involved in WWII.\n∀x (Involved(x) → (Decommissioned(x) ∨ Museum(x))) ::: All ships involved in WWII are currently decommissioned or in a museum.\nConclusion:\nDecommissioned(ussLyon) ::: The USS Lyon is decommissioned.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following"
    ]
  },
  {
    "id": "FOLIO_train_703",
    "context": "All disposable chopsticks are made from trees. Some chopsticks are eco-friendly. Either disposable chopsticks or reusable chopsticks. If chopsticks are made from metals, then they are not made from plastics. All reusable chopsticks are made from metal. Chopsticks at restaurants are either made from metals and made from plastics, or neither made from metals nor made from plastics.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Chopsticks at restaurants are eco-friendly.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDisposable(x) ::: x is a disposable chopstick.\nEcoFriendly(x) ::: x is an eco-friendly chopstick.\nChopstick(x) ::: x is a chopstick.\nTree(x) ::: x is a tree.\nMetal(x) ::: x is a metal.\nPlastic(x) ::: x is a plastic.\nRestaurant(x) ::: x is a chopstick at a restaurant.\nPremises:\n∀x (Disposable(x) → Tree(x)) ::: All disposable chopsticks are made from trees.\n∃x (Chopstick(x) ∧ EcoFriendly(x)) ::: Some chopsticks are eco-friendly.\nDisposable(x) ⊕ Reusable(x) ::: Either disposable chopsticks or reusable chopsticks.\n∀x (Metal(x) → ¬Plastic(x)) ::: If chopsticks are made from metals, then they are not made from plastics.\n∀x (Reusable(x) → Metal(x)) ::: All reusable chopsticks are made from metal.\nRestaurant(x) → (Metal(x) ∧ Plastic(x)) ⊕ ¬(Metal(x) ∨ Plastic(x)) ::: Chopsticks at restaurants are either made from metals and made from plastics, or neither made from metals nor made from plastics.\nConclusion:\nRestaurant(x) → E"
    ]
  },
  {
    "id": "FOLIO_train_704",
    "context": "All disposable chopsticks are made from trees. Some chopsticks are eco-friendly. Either disposable chopsticks or reusable chopsticks. If chopsticks are made from metals, then they are not made from plastics. All reusable chopsticks are made from metal. Chopsticks at restaurants are either made from metals and made from plastics, or neither made from metals nor made from plastics.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Chopsticks at restaurants are eco-friendly or made from trees.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDisposable(x) ::: x is a disposable chopstick.\nEcoFriendly(x) ::: x is an eco-friendly chopstick.\nChopstick(x) ::: x is a chopstick.\nTree(x) ::: x is made from trees.\nMetal(x) ::: x is made from metals.\nPlastic(x) ::: x is made from plastics.\nRestaurant(x) ::: x is a chopstick at a restaurant.\nPremises:\n∀x (Disposable(x) → Tree(x)) ::: All disposable chopsticks are made from trees.\n∃x (Chopstick(x) ∧ EcoFriendly(x)) ::: Some chopsticks are eco-friendly.\nDisposable(x) ⊕ Reusable(x) ::: Either disposable chopsticks or reusable chopsticks.\n∀x (Metal(x) → ¬Plastic(x)) ::: If chopsticks are made from metals, then they are not made from plastics.\n∀x (Reusable(x) → Metal(x)) ::: All reusable chopsticks are made from metal.\nRestaurant(x) → (Metal(x) ∧ Plastic(x)) ⊕ ¬(Metal(x) ∨ Plastic(x)) ::: Chopsticks at restaurants are either made from metals and made from plastics, or neither made from metals nor made from plastics.\nConclusion:\nRestaur"
    ]
  },
  {
    "id": "FOLIO_train_705",
    "context": "All disposable chopsticks are made from trees. Some chopsticks are eco-friendly. Either disposable chopsticks or reusable chopsticks. If chopsticks are made from metals, then they are not made from plastics. All reusable chopsticks are made from metal. Chopsticks at restaurants are either made from metals and made from plastics, or neither made from metals nor made from plastics.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Chopsticks at restaurants are made from plastics or made from trees, then Chopsticks at restaurants are made from plastics and are eco-friendly.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDisposable(x) ::: x is a disposable chopstick.\nEcoFriendly(x) ::: x is an eco-friendly chopstick.\nChopstick(x) ::: x is a chopstick.\nTree(x) ::: x is made from trees.\nMetal(x) ::: x is made from metals.\nPlastic(x) ::: x is made from plastics.\nRestaurant(x) ::: x is a chopstick at a restaurant.\nPremises:\n∀x (Disposable(x) → Tree(x)) ::: All disposable chopsticks are made from trees.\n∃x (Chopstick(x) ∧ EcoFriendly(x)) ::: Some chopsticks are eco-friendly.\nDisposable(x) ⊕ Reusable(x) ::: Either disposable chopsticks or reusable chopsticks.\n∀x (Metal(x) → ¬Plastic(x)) ::: If chopsticks are made from metals, then they are not made from plastics.\n∀x (Reusable(x) → Metal(x)) ::: All reusable chopsticks are made from metal.\nRestaurant(x) → (Metal(x) ∧ Plastic(x)) ⊕ ¬(Metal(x) ∨ Plastic(x)) ::: Chopsticks at restaurants are either made from metals and made from plastics, or neither made from metals nor made from plastics.\nConclusion:\n(Rest"
    ]
  },
  {
    "id": "FOLIO_train_706",
    "context": "Anything that is lazy is unproductive. No one unproductive is an energetic person. If something is a sloth, then it is lazy. Some animals are sloths. Sid is not either an energetic person or a sloth.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Sid is an animal.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLazy(x) ::: x is lazy.\nUnproductive(x) ::: x is unproductive.\nEnergetic(x) ::: x is an energetic person.\nSloth(x) ::: x is a sloth.\nAnimal(x) ::: x is an animal.\nPremises:\n∀x (Lazy(x) → Unproductive(x)) ::: Anything that is lazy is unproductive.\n∀x (Unproductive(x) → ¬Energetic(x)) ::: No one unproductive is an energetic person.\n∀x (Sloth(x) → Lazy(x)) ::: If something is a sloth, then it is lazy.\n∃x (Animal(x) ∧ Sloth(x)) ::: Some animals are sloths.\n¬(Energetic(sid) ∨ Sloth(sid)) ::: Sid is not either an energetic person or a sloth.\nConclusion:\nAnimal(sid) ::: Sid is an animal.\n------\nProblem:\nAnything that is a dog is an animal. All animals are mammals. No mammal is a reptile. No reptile is a bird.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? All dogs are birds.\nBased on the above information, is the following statement true, false, or uncertain? All dogs are mammals.\nBased on the above information, is the following statement true, false, or uncertain? All dogs are reptiles.\n###\nPredicates:\nD"
    ]
  },
  {
    "id": "FOLIO_train_707",
    "context": "Anything that is lazy is unproductive. No one unproductive is an energetic person. If something is a sloth, then it is lazy. Some animals are sloths. Sid is not either an energetic person or a sloth.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Sid is an energetic person and an animal.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLazy(x) ::: x is lazy.\nUnproductive(x) ::: x is unproductive.\nEnergetic(x) ::: x is an energetic person.\nSloth(x) ::: x is a sloth.\nAnimal(x) ::: x is an animal.\nPremises:\n∀x (Lazy(x) → Unproductive(x)) ::: Anything that is lazy is unproductive.\n∀x (Unproductive(x) → ¬Energetic(x)) ::: No one unproductive is an energetic person.\n∀x (Sloth(x) → Lazy(x)) ::: If something is a sloth, then it is lazy.\n∃x (Animal(x) ∧ Sloth(x)) ::: Some animals are sloths.\n¬(Energetic(sid) ∨ Sloth(sid)) ::: Sid is not either an energetic person or a sloth.\nConclusion:\nEnergetic(sid) ∧ Animal(sid) ::: Sid is an energetic person and an animal.\n------\nProblem:\nAnything that is a dog is an animal. All animals are mammals. No mammal is a reptile. No reptile is a bird. No bird is a fish. No fish is a mammal.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? A dog is a reptile.\nBased on the above information, is the following statement true, false, or uncertain? A dog is a bird.\nBased"
    ]
  },
  {
    "id": "FOLIO_train_708",
    "context": "Anything that is lazy is unproductive. No one unproductive is an energetic person. If something is a sloth, then it is lazy. Some animals are sloths. Sid is not either an energetic person or a sloth.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Sid is either an animal or unproductive, then Sid is not an energetic person.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLazy(x) ::: x is lazy.\nUnproductive(x) ::: x is unproductive.\nEnergetic(x) ::: x is an energetic person.\nSloth(x) ::: x is a sloth.\nAnimal(x) ::: x is an animal.\nPremises:\n∀x (Lazy(x) → Unproductive(x)) ::: Anything that is lazy is unproductive.\n∀x (Unproductive(x) → ¬Energetic(x)) ::: No one unproductive is an energetic person.\n∀x (Sloth(x) → Lazy(x)) ::: If something is a sloth, then it is lazy.\n∃x (Animal(x) ∧ Sloth(x)) ::: Some animals are sloths.\n¬(Energetic(sid) ∨ Sloth(sid)) ::: Sid is not either an energetic person or a sloth.\nConclusion:\n(Animal(sid) ∨ Unproductive(sid)) → ¬Energetic(sid) ::: If Sid is either an animal or unproductive, then Sid is not an energetic person.\n------\nProblem:\nAnything that is a dog is an animal. All animals are either mammals or reptiles. No reptile is a mammal. If something is a mammal, then it is a vertebrate. If something is a vertebrate, then it is an animal.\nQuestion:\nBased on the above information, is the following statement true, false, or"
    ]
  },
  {
    "id": "FOLIO_train_709",
    "context": "European soccer clubs can attend UCL, UEL and UECL. A soccer club eligible to attend UCL has a higher ranking than a soccer club eligible to attend UEL. A soccer club eligible to attend UEL has a higher ranking than a soccer club eligible to attend UECL. Manchester United and Machester City are both European soccer clubs. Manchester United is eligible to attend UEL next season. Manchester City is eligible to attend UCL next season.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Manchester City has a higher ranking than Manchester United.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nClub(x) ::: x is a European soccer club.\nUCL(x) ::: x is eligible to attend UCL.\nUEL(x) ::: x is eligible to attend UEL.\nUECL(x) ::: x is eligible to attend UECL.\nRanking(x, y) ::: x has a higher ranking than y.\nManchesterUnited(x) ::: x is Manchester United.\nManchesterCity(x) ::: x is Manchester City.\nPremises:\nClub(manchesterUnited) ∧ Club(manchesterCity) ::: Manchester United and Machester City are both European soccer clubs.\nUEL(manchesterUnited) ::: Manchester United is eligible to attend UEL next season.\nUCL(manchesterCity) ::: Manchester City is eligible to attend UCL next season.\n∀x (UCL(x) → Ranking(x, y)) ::: A soccer club eligible to attend UCL has a higher ranking than a soccer club eligible to attend UEL.\n∀x (UEL(x) → Ranking(x, y)) ::: A soccer club eligible to attend UEL has a higher ranking than a soccer club eligible to attend UECL.\nConclusion:\nRanking(manchesterCity, manchesterUnited) ::: Manchester City has a higher ranking than Manchester United.\n------\nProblem:\nA person is either a student or a teacher. A student is a person who is enrolled in a course. A teacher is a person who teaches a course. A person who teaches a course is a person who is enrolled in a course. A person who is enrolled in a course is"
    ]
  },
  {
    "id": "FOLIO_train_710",
    "context": "If a person coach a football club, the person is a football coach. If a person has a position in a club for a position in a year, and the club is in NFL in the same year, the person plays in NFL. Minnesota Vikings is a football club. Dennis Green coached Minnesota Vikings. Cris Carter had 13 touchdown receptions. Minnesota Vikings was in the National Football League in 1997. John Randle was Minnesota Vikings defensive tackle in 1997.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Dennis Green is a football coach.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCoach(x, y) ::: x is a coach of y.\nClub(x) ::: x is a club.\nPlay(x, y) ::: x plays in y.\nPosition(x, y) ::: x has a position in y.\nNFL(x) ::: x is in NFL.\nYear(x) ::: x is a year.\nPremises:\n∀x (Coach(x, y) → FootballCoach(x)) ::: If a person coach a football club, the person is a football coach.\n∀x (Position(x, y) ∧ Club(y) ∧ NFL(y) ∧ Year(z) → Play(x, NFL)) ::: If a person has a position in a club for a position in a year, and the club is in NFL in the same year, the person plays in NFL.\nClub(minnesotaVikings) ::: Minnesota Vikings is a football club.\nCoach(dennisGreen, minnesotaVikings) ::: Dennis Green coached Minnesota Vikings.\nPosition(crisCarter, minnesotaVikings) ∧ 13(crisCarter) ::: Cris Carter had 13 touchdown receptions.\nNFL(minnesotaVikings) ∧ Year(year1997) ::: Minnesota Vikings was in the National Football League in 1997.\nPosition(johnRandle, minnesotaVikings) ∧ Year(year1997) ::: John Randle was Minnesota Vikings defensive tackle in 1997.\nConclusion:\nFootballCoach(dennisGreen) ::: Dennis Green is a football coach.\n------"
    ]
  },
  {
    "id": "FOLIO_train_711",
    "context": "If a person coach a football club, the person is a football coach. If a person has a position in a club for a position in a year, and the club is in NFL in the same year, the person plays in NFL. Minnesota Vikings is a football club. Dennis Green coached Minnesota Vikings. Cris Carter had 13 touchdown receptions. Minnesota Vikings was in the National Football League in 1997. John Randle was Minnesota Vikings defensive tackle in 1997.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? John Randle didn't play in the National Football League.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCoach(x, y) ::: x is a coach of y.\nClub(x) ::: x is a club.\nPlay(x, y) ::: x plays in y.\nPosition(x, y) ::: x has a position in y.\nNFL(x) ::: x is in the National Football League.\nYear(x) ::: x is a year.\nPremises:\n∀x ∀y (Coach(x, y) → FootballCoach(x)) ::: If a person coach a football club, the person is a football coach.\n∀x ∀y ∀z (Position(x, y) ∧ Club(y) ∧ NFL(z) ∧ Year(z) ∧ Year(y) ∧ y = z → Play(x, z)) ::: If a person has a position in a club for a position in a year, and the club is in NFL in the same year, the person plays in NFL.\nClub(minnesotaVikings) ::: Minnesota Vikings is a football club.\nCoach(dennisGreen, minnesotaVikings) ::: Dennis Green coached Minnesota Vikings.\nPosition(crisCarter, minnesotaVikings) ∧ 13 = touchdownReceptions(crisCarter) ::: Cris Carter had 13 touchdown receptions.\nNFL(minnesotaVikings) ∧ Year(year1997) ∧ Year(minnesotaVikings) ∧ minnesotaVikings = year1997 ::: Minnesota Vikings was in the National Football League in 1997.\nPosition(john"
    ]
  },
  {
    "id": "FOLIO_train_712",
    "context": "If a person coach a football club, the person is a football coach. If a person has a position in a club for a position in a year, and the club is in NFL in the same year, the person plays in NFL. Minnesota Vikings is a football club. Dennis Green coached Minnesota Vikings. Cris Carter had 13 touchdown receptions. Minnesota Vikings was in the National Football League in 1997. John Randle was Minnesota Vikings defensive tackle in 1997.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Cris Carter played for Minnesota Vikings.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCoach(x, y) ::: x is a coach of y.\nClub(x) ::: x is a club.\nPlay(x, y) ::: x plays in y.\nPosition(x, y) ::: x has a position in y.\nNFL(x) ::: x is in NFL.\nYear(x) ::: x is a year.\nPremises:\n∀x (Coach(x, y) → FootballCoach(x)) ::: If a person coach a football club, the person is a football coach.\n∀x (Position(x, y) ∧ Club(y) ∧ NFL(y) ∧ Year(z) → Play(x, NFL)) ::: If a person has a position in a club for a position in a year, and the club is in NFL in the same year, the person plays in NFL.\nClub(minnesotaVikings) ::: Minnesota Vikings is a football club.\nCoach(dennisGreen, minnesotaVikings) ::: Dennis Green coached Minnesota Vikings.\nPosition(crisCarter, minnesotaVikings) ∧ Position(crisCarter, year1997) ::: Cris Carter had 13 touchdown receptions.\nNFL(minnesotaVikings) ∧ Year(year1997) ::: Minnesota Vikings was in the National Football League in 1997.\nPosition(johnRandle, minnesotaVikings) ∧ Position(johnRandle, year1997) ::: John Randle was Minnesota Vikings defensive tackle in 1997.\nConclusion:\nPlay(crisCarter, minnesota"
    ]
  },
  {
    "id": "FOLIO_train_713",
    "context": "All cats are cute. Ghosts do not exist. An animal is either a cat or a dog. Nothing that barks is lovely. If something is a dog, then it barks. Grace is either a cat and a dog, or neither a cat nor a dog.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Grace is a ghost.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCat(x) ::: x is a cat.\nCute(x) ::: x is cute.\nGhost(x) ::: x is a ghost.\nAnimal(x) ::: x is an animal.\nDog(x) ::: x is a dog.\nBark(x) ::: x barks.\nLovely(x) ::: x is lovely.\nGrace(x) ::: x is Grace.\nPremises:\n∀x (Cat(x) → Cute(x)) ::: All cats are cute.\n∀x (Ghost(x) → ¬∃x) ::: Ghosts do not exist.\n∀x (Animal(x) → Cat(x) ⊕ Dog(x)) ::: An animal is either a cat or a dog.\n∀x (Bark(x) → ¬Lovely(x)) ::: Nothing that barks is lovely.\n∀x (Dog(x) → Bark(x)) ::: If something is a dog, then it barks.\n(Cat(grace) ∧ Dog(grace)) ⊕ ¬(Cat(grace) ∨ Dog(grace)) ::: Grace is either a cat and a dog, or neither a cat nor a dog.\nConclusion:\nGhost(grace) ::: Grace is a ghost.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student"
    ]
  },
  {
    "id": "FOLIO_train_714",
    "context": "All cats are cute. Ghosts do not exist. An animal is either a cat or a dog. Nothing that barks is lovely. If something is a dog, then it barks. Grace is either a cat and a dog, or neither a cat nor a dog.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Grace is either both cute and lovely, or neither cute nor lovely, then Grace is either a dog or a ghost.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCat(x) ::: x is a cat.\nCute(x) ::: x is cute.\nGhost(x) ::: x is a ghost.\nAnimal(x) ::: x is an animal.\nDog(x) ::: x is a dog.\nBark(x) ::: x barks.\nLovely(x) ::: x is lovely.\nPremises:\n∀x (Cat(x) → Cute(x)) ::: All cats are cute.\n∀x (Ghost(x) → ¬∃x) ::: Ghosts do not exist.\n∀x (Animal(x) → (Cat(x) ⊕ Dog(x))) ::: An animal is either a cat or a dog.\n∀x (Bark(x) → ¬Lovely(x)) ::: Nothing that barks is lovely.\n∀x (Dog(x) → Bark(x)) ::: If something is a dog, then it barks.\n(Cat(grace) ∧ Dog(grace)) ⊕ ¬(Cat(grace) ∨ Dog(grace)) ::: Grace is either a cat and a dog, or neither a cat nor a dog.\nConclusion:\n(Cute(grace) ∧ Lovely(grace)) ⊕ ¬(Cute(grace) ∨ Lovely(grace)) → (Dog(grace) ∨ Ghost(grace)) ::: If Grace is either both cute and lovely, or neither cute nor lovely, then Grace is either a dog or a ghost.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine."
    ]
  },
  {
    "id": "FOLIO_train_715",
    "context": "All cats are cute. Ghosts do not exist. An animal is either a cat or a dog. Nothing that barks is lovely. If something is a dog, then it barks. Grace is either a cat and a dog, or neither a cat nor a dog.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Grace is not both a ghost and lovely, then Grace is either a cat or cute.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCat(x) ::: x is a cat.\nCute(x) ::: x is cute.\nGhost(x) ::: x is a ghost.\nAnimal(x) ::: x is an animal.\nDog(x) ::: x is a dog.\nBark(x) ::: x barks.\nLovely(x) ::: x is lovely.\nPremises:\n∀x (Cat(x) → Cute(x)) ::: All cats are cute.\n∀x (Ghost(x) → ¬∃x) ::: Ghosts do not exist.\n∀x (Animal(x) → (Cat(x) ⊕ Dog(x))) ::: An animal is either a cat or a dog.\n∀x (Bark(x) → ¬Lovely(x)) ::: Nothing that barks is lovely.\n∀x (Dog(x) → Bark(x)) ::: If something is a dog, then it barks.\n(Cat(grace) ∧ Dog(grace)) ⊕ ¬(Cat(grace) ∨ Dog(grace)) ::: Grace is either a cat and a dog, or neither a cat nor a dog.\nConclusion:\n(¬(Ghost(grace) ∧ Lovely(grace)) → (Cat(grace) ∨ Cute(grace))) ::: If Grace is not both a ghost and lovely, then Grace is either a cat or cute.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffe"
    ]
  },
  {
    "id": "FOLIO_train_716",
    "context": "Shafaq-Asiman is a large complex of offshore geological structures in the Caspian Sea. Baku is northwest of Shafaq-Asiman. If place A is northwest of place B, then place B is southeast of place A.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Baku is southeast of Shafaq-Asiman.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nNorthwest(x, y) ::: x is northwest of y.\nSoutheast(x, y) ::: x is southeast of y.\nPlace(x) ::: x is a place.\nPremises:\nPlace(shafaqAsiman) ∧ Place(baku) ∧ Northwest(baku, shafaqAsiman) ::: Shafaq-Asiman is a large complex of offshore geological structures in the Caspian Sea. Baku is northwest of Shafaq-Asiman.\n∀x ∀y (Northwest(x, y) → Southeast(y, x)) ::: If place A is northwest of place B, then place B is southeast of place A.\nConclusion:\nSoutheast(shafaqAsiman, baku) ::: Baku is southeast of Shafaq-Asiman.\n------\nProblem:\nThe 2018 FIFA World Cup was the 21st FIFA World Cup, a quadrennial international football tournament contested by the men's national teams of the member associations of FIFA. The 2018 FIFA World Cup was held in Russia. The 2018 FIFA World Cup was held in Europe. The 2018 FIFA World Cup was held in Asia. The 2018 FIFA World Cup was held in Africa. The 2018 FIFA World Cup was held in North America. The 2018 FIFA World Cup was held in South America.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The 2018 FIFA World Cup was held in Oceania.\n###\nPredicates:\nWorldCup(x) ::: x is"
    ]
  },
  {
    "id": "FOLIO_train_717",
    "context": "Shafaq-Asiman is a large complex of offshore geological structures in the Caspian Sea. Baku is northwest of Shafaq-Asiman. If place A is northwest of place B, then place B is southeast of place A.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A large complex is southeast of Baku.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nShafaqAsiman(x) ::: x is a large complex of offshore geological structures in the Caspian Sea.\nBaku(x) ::: x is Baku.\nNorthwest(x, y) ::: x is northwest of y.\nSoutheast(x, y) ::: x is southeast of y.\nPremises:\nShafaqAsiman(shafaqAsiman) ::: Shafaq-Asiman is a large complex of offshore geological structures in the Caspian Sea.\nBaku(baku) ::: Baku is northwest of Shafaq-Asiman.\n∀x ∀y (Northwest(x, y) → Southeast(y, x)) ::: If place A is northwest of place B, then place B is southeast of place A.\nConclusion:\nSoutheast(baku, shafaqAsiman) ::: A large complex is southeast of Baku.\n------\nProblem:\nThe 2019–20 Hong Kong protests are an ongoing series of demonstrations in Hong Kong. The protests were initially against the proposed extradition bill, but have since expanded to include demands for universal suffrage and an independent inquiry into alleged police brutality. The protests have been described as \"the most significant political crisis\" in Hong Kong since the transfer of sovereignty over Hong Kong in 1997.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The protests were initially against the proposed extradition bill.\nBased on the above information, is the following statement true, false, or uncertain? The protests have been described as \"the most significant political crisis\" in Hong Kong since the transfer of sovereignty over Hong"
    ]
  },
  {
    "id": "FOLIO_train_718",
    "context": "Shafaq-Asiman is a large complex of offshore geological structures in the Caspian Sea. Baku is northwest of Shafaq-Asiman. If place A is northwest of place B, then place B is southeast of place A.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Baku is not northwest of an offshore geological structures.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nNorthwest(x, y) ::: x is northwest of y.\nSoutheast(x, y) ::: x is southeast of y.\nPlace(x) ::: x is a place.\nPremises:\nPlace(shafaqAsiman) ∧ Place(baku) ∧ Northwest(baku, shafaqAsiman) ::: Shafaq-Asiman is a large complex of offshore geological structures in the Caspian Sea. Baku is northwest of Shafaq-Asiman.\n∀x ∀y (Northwest(x, y) → Southeast(y, x)) ::: If place A is northwest of place B, then place B is southeast of place A.\nConclusion:\n¬∃x (Place(x) ∧ Northwest(baku, x)) ::: Baku is not northwest of an offshore geological structures.\n------\nProblem:\nThe 2019–20 Hong Kong protests are an ongoing series of demonstrations in Hong Kong. The protests were initially against the proposed extradition bill, but have since evolved into a broader movement for democracy and police accountability. The protests have been marked by violent clashes between protesters and the police. The protests have been described as \"the most significant political crisis\" in Hong Kong since the transfer of sovereignty over Hong Kong in 1997.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The protests were initially against the proposed extradition bill.\nBased on the above information, is the following statement true, false, or uncertain? The protests have been marked by violent clashes between protesters and the police.\nBased on the above information"
    ]
  },
  {
    "id": "FOLIO_train_719",
    "context": "Herodicus was a Greek physician, dietician, sophist, and gymnastic-master. Herodicus was born in the city of Selymbria. Selymbria is a colony of the city-state Megara. One of the tutors of Hippocrates was Herodicus. Massages were recommended by Herodicus. Some of theories of Herodicus are considered to be the foundation of sports medicine.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Herodicus tutored Hippocrates.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPhysician(x) ::: x is a physician.\nDietician(x) ::: x is a dietician.\nSophist(x) ::: x is a sophist.\nGymnasticMaster(x) ::: x is a gymnastic-master.\nBorn(x, y) ::: x was born in city y.\nColony(x, y) ::: x is a colony of city y.\nTutor(x, y) ::: x was a tutor of y.\nRecommend(x, y) ::: x recommends y.\nTheory(x, y) ::: x is a theory of y.\nPremises:\nPhysician(herodicus) ∧ Dietician(herodicus) ∧ Sophist(herodicus) ∧ GymnasticMaster(herodicus) ::: Herodicus was a Greek physician, dietician, sophist, and gymnastic-master.\nBorn(herodicus, selymbria) ::: Herodicus was born in the city of Selymbria.\nColony(selymbria, megara) ::: Selymbria is a colony of the city-state Megara.\nTutor(herodicus, hippocrates) ::: One of the tutors of Hippocrates was Herodicus.\nRecommend(herodicus, massages) ::: Massages were recommended by Herodicus.\nTheory(herodicus, sportsMedicine) ::: Some of theories of Herodicus are considered to be the foundation of sports medicine.\nConclusion:\nTutor(herodicus, hippocrates) ::: Herodicus tutored Hippocrates.\n------\nProblem:\nThe"
    ]
  },
  {
    "id": "FOLIO_train_720",
    "context": "Herodicus was a Greek physician, dietician, sophist, and gymnastic-master. Herodicus was born in the city of Selymbria. Selymbria is a colony of the city-state Megara. One of the tutors of Hippocrates was Herodicus. Massages were recommended by Herodicus. Some of theories of Herodicus are considered to be the foundation of sports medicine.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Herodicus was tutored by Hippocrates.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBorn(x, y) ::: x was born in y.\nColony(x, y) ::: x is a colony of y.\nTutor(x, y) ::: x was tutored by y.\nRecommend(x, y) ::: x recommends y.\nTheory(x, y) ::: x is a theory of y.\nPremises:\nBorn(herodicus, selymbria) ::: Herodicus was born in the city of Selymbria.\nColony(selymbria, megara) ::: Selymbria is a colony of the city-state Megara.\nTutor(herodicus, hippocrates) ::: One of the tutors of Hippocrates was Herodicus.\nRecommend(herodicus, massages) ::: Massages were recommended by Herodicus.\nTheory(herodicus, sportsMedicine) ::: Some of theories of Herodicus are considered to be the foundation of sports medicine.\nConclusion:\nTutor(hippocrates, herodicus) ::: Herodicus was tutored by Hippocrates.\n------"
    ]
  },
  {
    "id": "FOLIO_train_721",
    "context": "Herodicus was a Greek physician, dietician, sophist, and gymnastic-master. Herodicus was born in the city of Selymbria. Selymbria is a colony of the city-state Megara. One of the tutors of Hippocrates was Herodicus. Massages were recommended by Herodicus. Some of theories of Herodicus are considered to be the foundation of sports medicine.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Herodicus was born in a city-state.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBorn(x, y) ::: x was born in city y.\nColony(x, y) ::: x is a colony of city y.\nTutor(x, y) ::: x was a tutor of y.\nRecommend(x, y) ::: x recommends y.\nTheory(x, y) ::: x is a theory of y.\nPremises:\nBorn(herodicus, selymbria) ::: Herodicus was born in the city of Selymbria.\nColony(selymbria, megara) ::: Selymbria is a colony of the city-state Megara.\nTutor(herodicus, hippocrates) ::: One of the tutors of Hippocrates was Herodicus.\nRecommend(herodicus, massages) ::: Massages were recommended by Herodicus.\nTheory(herodicus, sportsMedicine) ::: Some of theories of Herodicus are considered to be the foundation of sports medicine.\nConclusion:\n∃x (Born(herodicus, x) ∧ CityState(x)) ::: Her"
    ]
  },
  {
    "id": "FOLIO_train_722",
    "context": "Herodicus was a Greek physician, dietician, sophist, and gymnastic-master. Herodicus was born in the city of Selymbria. Selymbria is a colony of the city-state Megara. One of the tutors of Hippocrates was Herodicus. Massages were recommended by Herodicus. Some of theories of Herodicus are considered to be the foundation of sports medicine.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Herodicus did not recommend massages.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPhysician(x) ::: x is a physician.\nDietician(x) ::: x is a dietician.\nSophist(x) ::: x is a sophist.\nGymnasticMaster(x) ::: x is a gymnastic-master.\nBorn(x, y) ::: x was born in the city y.\nColony(x, y) ::: x is a colony of the city y.\nTutor(x, y) ::: x was a tutor of y.\nRecommend(x, y) ::: x recommended y.\nTheory(x) ::: x is a theory.\nFoundation(x, y) ::: x is the foundation of y.\nPremises:\nPhysician(herodicus) ∧ Dietician(herodicus) ∧ Sophist(herodicus) ∧ GymnasticMaster(herodicus) ::: Herodicus was a Greek physician, dietician, sophist, and gymnastic-master.\nBorn(herodicus, selymbria) ::: Herodicus was born in the city of Selymbria.\nColony("
    ]
  },
  {
    "id": "FOLIO_train_723",
    "context": "Herodicus was a Greek physician, dietician, sophist, and gymnastic-master. Herodicus was born in the city of Selymbria. Selymbria is a colony of the city-state Megara. One of the tutors of Hippocrates was Herodicus. Massages were recommended by Herodicus. Some of theories of Herodicus are considered to be the foundation of sports medicine.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Herodicus was born in a colony of a city-state.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBorn(x, y) ::: x was born in y.\nColony(x, y) ::: x is a colony of y.\nCityState(x) ::: x is a city-state.\nTutor(x, y) ::: x is a tutor of y.\nRecommend(x, y) ::: x recommends y.\nTheory(x) ::: x is a theory.\nFoundation(x, y) ::: x is the foundation of y.\nPremises:\nBorn(herodicus, selymbria) ::: Herodicus was born in the city of Selymbria.\nColony(selymbria, megara) ::: Selymbria is a colony of the city-state Megara.\nCityState(megara) ::: Megara is a city-state.\nTutor(herodicus, hippocrates) ::: One of the tutors of Hippocrates was Herodicus.\nRecommend(herodicus, massages) ::: Massages were recommended by Herodicus.\nFoundation(theoriesOfHerodicus, sportsMedicine) ::: Some of theories"
    ]
  },
  {
    "id": "FOLIO_train_724",
    "context": "No kid loves the Opera. All adults love the Opera. If someone is a scientist, then they are an adult. Some students are kids. Billy is a kid.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Billy is a student.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nKid(x) ::: x is a kid.\nAdult(x) ::: x is an adult.\nLove(x, y) ::: x loves y.\nOpera(x) ::: x is the Opera.\nScientist(x) ::: x is a scientist.\nStudent(x) ::: x is a student.\nPremises:\n∀x (Kid(x) → ¬Love(x, opera)) ::: No kid loves the Opera.\n∀x (Adult(x) → Love(x, opera)) ::: All adults love the Opera.\n∀x (Scientist(x) → Adult(x)) ::: If someone is a scientist, then they are an adult.\n∃x (Student(x) ∧ Kid(x)) ::: Some students are kids.\nKid(billy) ::: Billy is a kid.\nConclusion:\nStudent(billy) ::: Billy is a student.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being add"
    ]
  },
  {
    "id": "FOLIO_train_725",
    "context": "No kid loves the Opera. All adults love the Opera. If someone is a scientist, then they are an adult. Some students are kids. Billy is a kid.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Billy is a student and a scientist.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nKid(x) ::: x is a kid.\nAdult(x) ::: x is an adult.\nLove(x, y) ::: x loves y.\nOpera(x) ::: x is the Opera.\nScientist(x) ::: x is a scientist.\nStudent(x) ::: x is a student.\nPremises:\n∀x (Kid(x) → ¬Love(x, opera)) ::: No kid loves the Opera.\n∀x (Adult(x) → Love(x, opera)) ::: All adults love the Opera.\n∀x (Scientist(x) → Adult(x)) ::: If someone is a scientist, then they are an adult.\n∃x (Student(x) ∧ Kid(x)) ::: Some students are kids.\nKid(billy) ::: Billy is a kid.\nConclusion:\nStudent(billy) ∧ Scientist(billy) ::: Billy is a student and a scientist.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being add"
    ]
  },
  {
    "id": "FOLIO_train_726",
    "context": "No kid loves the Opera. All adults love the Opera. If someone is a scientist, then they are an adult. Some students are kids. Billy is a kid.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Billy is a student or a scientist, then Billy is a student and a kid.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nKid(x) ::: x is a kid.\nLove(x, y) ::: x loves y.\nOpera(y) ::: y is the Opera.\nAdult(x) ::: x is an adult.\nScientist(x) ::: x is a scientist.\nStudent(x) ::: x is a student.\nPremises:\n∀x (Kid(x) → ¬Love(x, opera)) ::: No kid loves the Opera.\n∀x (Adult(x) → Love(x, opera)) ::: All adults love the Opera.\n∀x (Scientist(x) → Adult(x)) ::: If someone is a scientist, then they are an adult.\n∃x (Student(x) ∧ Kid(x)) ::: Some students are kids.\nKid(billy) ::: Billy is a kid.\nConclusion:\n(Student(billy) ∨ Scientist(billy)) → (Student(billy) ∧ Kid(billy)) ::: If Billy is a student or a scientist, then Billy is a student and a kid.\n------"
    ]
  },
  {
    "id": "FOLIO_train_727",
    "context": "Brian Winter is a Scottish football referee. After being injured, Brian Winter retired in 2012. Brian Winter was appointed as a referee observer after his retirement. Some football referees become referee observers. The son of Brian Winter, Andy Winter, is a football player who plays for Hamilton Academical.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There is a son of a referee observer that plays football.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nScottish(x) ::: x is a Scottish person.\nFootballReferee(x) ::: x is a football referee.\nRetire(x) ::: x retired.\nRefereeObserver(x) ::: x is a referee observer.\nSon(x, y) ::: x is the son of y.\nFootballPlayer(x) ::: x is a football player.\nPlayFor(x, y) ::: x plays for y.\nPremises:\nScottish(brianWinter) ∧ FootballReferee(brianWinter) ∧ Retire(brianWinter) ∧ RefereeObserver(brianWinter) ::: Brian Winter is a Scottish football referee. After being injured, Brian Winter retired in 2012. Brian Winter was appointed as a referee observer after his retirement.\n∃x (FootballReferee(x) ∧ RefereeObserver(x)) ::: Some football referees become referee observers.\nSon(andyWinter, brianWinter) ∧ FootballPlayer(andyWinter) ∧ PlayFor(andyWinter, h"
    ]
  },
  {
    "id": "FOLIO_train_728",
    "context": "Brian Winter is a Scottish football referee. After being injured, Brian Winter retired in 2012. Brian Winter was appointed as a referee observer after his retirement. Some football referees become referee observers. The son of Brian Winter, Andy Winter, is a football player who plays for Hamilton Academical.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Brian Winter is not a referee observer.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nScottish(x) ::: x is a Scottish person.\nFootballReferee(x) ::: x is a football referee.\nRetire(x) ::: x retired.\nRefereeObserver(x) ::: x is a referee observer.\nSon(x, y) ::: x is the son of y.\nFootballPlayer(x) ::: x is a football player.\nPlayFor(x, y) ::: x plays for y.\nPremises:\nScottish(brianWinter) ∧ FootballReferee(brianWinter) ∧ Retire(brianWinter) ∧ RefereeObserver(brianWinter) ::: Brian Winter is a Scottish football referee. After being injured, Brian Winter retired in 2012. Brian Winter was appointed as a referee observer after his retirement.\n∃x (FootballReferee(x) ∧ RefereeObserver(x)) ::: Some football referees become referee observers.\nSon(andyWinter, brianWinter) ∧ FootballPlayer(andyWinter) ∧ PlayFor(andyWinter, h"
    ]
  },
  {
    "id": "FOLIO_train_729",
    "context": "Brian Winter is a Scottish football referee. After being injured, Brian Winter retired in 2012. Brian Winter was appointed as a referee observer after his retirement. Some football referees become referee observers. The son of Brian Winter, Andy Winter, is a football player who plays for Hamilton Academical.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Brian Winter is retired.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nScottish(x) ::: x is a Scottish person.\nFootballReferee(x) ::: x is a football referee.\nRetired(x) ::: x is retired.\nRefereeObserver(x) ::: x is a referee observer.\nSon(x, y) ::: x is the son of y.\nFootballPlayer(x) ::: x is a football player.\nPlaysFor(x, y) ::: x plays for y.\nPremises:\nScottish(brianWinter) ∧ FootballReferee(brianWinter) ∧ Retired(brianWinter) ∧ RefereeObserver(brianWinter) ::: Brian Winter is a Scottish football referee. After being injured, Brian Winter retired in 2012. Brian Winter was appointed as a referee observer after his retirement.\n∃x (FootballReferee(x) ∧ RefereeObserver(x)) ::: Some football referees become referee observers.\nSon(andyWinter, brianWinter) ∧ FootballPlayer(andyWinter) ∧ PlaysFor(andyW"
    ]
  },
  {
    "id": "FOLIO_train_730",
    "context": "Brian Winter is a Scottish football referee. After being injured, Brian Winter retired in 2012. Brian Winter was appointed as a referee observer after his retirement. Some football referees become referee observers. The son of Brian Winter, Andy Winter, is a football player who plays for Hamilton Academical.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Andy Winter is a referee.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nScottish(x) ::: x is a Scottish person.\nFootballReferee(x) ::: x is a football referee.\nRetire(x) ::: x retired.\nRefereeObserver(x) ::: x is a referee observer.\nSon(x, y) ::: x is the son of y.\nFootballPlayer(x) ::: x is a football player.\nPlayFor(x, y) ::: x plays for y.\nPremises:\nScottish(brianWinter) ∧ FootballReferee(brianWinter) ∧ Retire(brianWinter) ∧ RefereeObserver(brianWinter) ::: Brian Winter is a Scottish football referee. After being injured, Brian Winter retired in 2012. Brian Winter was appointed as a referee observer after his retirement.\n∃x (FootballReferee(x) ∧ RefereeObserver(x)) ::: Some football referees become referee observers.\nSon(andyWinter, brianWinter) ∧ FootballPlayer(andyWinter) ∧ PlayFor(andyWinter, hamiltonAcademical) ::: The son of Brian Winter, Andy Winter, is a football player who plays for Hamilton Academical.\nConclusion:\nRefereeObserver(andyWinter) ::: Andy Winter is a referee.\n------"
    ]
  },
  {
    "id": "FOLIO_train_731",
    "context": "People are either interested in puzzles or bad at chess. If a person is bad at chess, then they don't play a lot of chess. A person is either a planner or a creative person. Erica is someone who plays a lot of chess. If Erica is neither bad at chess nor creative, then Erica is either someone who plans and is creative, or someone who neither plans nor is creative.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Erica plans.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nInterested(x) ::: x is interested in puzzles.\nBad(x) ::: x is bad at chess.\nPlay(x) ::: x plays a lot of chess.\nPlanner(x) ::: x is a planner.\nCreative(x) ::: x is a creative person.\nPremises:\n∀x (Bad(x) → ¬Play(x)) ::: If a person is bad at chess, then they don't play a lot of chess.\n∀x (Planner(x) ⊕ Creative(x)) ::: A person is either a planner or a creative person.\nPlay(erica) ::: Erica is someone who plays a lot of chess.\n¬(Bad(erica) ∨ Creative(erica)) → (Planner(erica) ∧ Creative(erica)) ⊕ ¬(Planner(erica) ∨ Creative(erica)) ::: If Erica is neither bad at chess nor creative, then Erica is either someone who plans and is creative, or someone who neither plans nor is creative.\nConclusion:\nPlanner(erica) ::: Erica plans.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about"
    ]
  },
  {
    "id": "FOLIO_train_732",
    "context": "People are either interested in puzzles or bad at chess. If a person is bad at chess, then they don't play a lot of chess. A person is either a planner or a creative person. Erica is someone who plays a lot of chess. If Erica is neither bad at chess nor creative, then Erica is either someone who plans and is creative, or someone who neither plans nor is creative.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Erica is interested in puzzles and is creative.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nInterested(x) ::: x is interested in puzzles.\nBad(x) ::: x is bad at chess.\nPlay(x) ::: x plays a lot of chess.\nPlanner(x) ::: x is a planner.\nCreative(x) ::: x is a creative person.\nPremises:\n∀x (Bad(x) → ¬Play(x)) ::: If a person is bad at chess, then they don't play a lot of chess.\n∀x (Planner(x) ⊕ Creative(x)) ::: A person is either a planner or a creative person.\nPlay(erica) ::: Erica is someone who plays a lot of chess.\n¬(Bad(erica) ∨ Creative(erica)) → (Planner(erica) ∧ Creative(erica)) ⊕ ¬(Planner(erica) ∨ Creative(erica)) ::: If Erica is neither bad at chess nor creative, then Erica is either someone who plans and is creative, or someone who neither plans nor is creative.\nConclusion:\nInterested(erica) ∧ Creative(erica) ::: Erica is interested in puzzles and is creative.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee"
    ]
  },
  {
    "id": "FOLIO_train_733",
    "context": "People are either interested in puzzles or bad at chess. If a person is bad at chess, then they don't play a lot of chess. A person is either a planner or a creative person. Erica is someone who plays a lot of chess. If Erica is neither bad at chess nor creative, then Erica is either someone who plans and is creative, or someone who neither plans nor is creative.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Erica is either interested in puzzles or is creative.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nInterested(x) ::: x is interested in puzzles.\nBad(x) ::: x is bad at chess.\nPlay(x) ::: x plays a lot of chess.\nPlanner(x) ::: x is a planner.\nCreative(x) ::: x is a creative person.\nPremises:\n∀x (Bad(x) → ¬Play(x)) ::: If a person is bad at chess, then they don't play a lot of chess.\n∀x (Planner(x) ⊕ Creative(x)) ::: A person is either a planner or a creative person.\nPlay(erica) ::: Erica is someone who plays a lot of chess.\n¬(Bad(erica) ∨ Creative(erica)) → (Planner(erica) ∧ Creative(erica)) ⊕ ¬(Planner(erica) ∨ Creative(erica)) ::: If Erica is neither bad at chess nor creative, then Erica is either someone who plans and is creative, or someone who neither plans nor is creative.\nConclusion:\nInterested(erica) ⊕ Creative(erica) ::: Erica is either interested in puzzles or is creative.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink"
    ]
  },
  {
    "id": "FOLIO_train_734",
    "context": "People are either interested in puzzles or bad at chess. If a person is bad at chess, then they don't play a lot of chess. A person is either a planner or a creative person. Erica is someone who plays a lot of chess. If Erica is neither bad at chess nor creative, then Erica is either someone who plans and is creative, or someone who neither plans nor is creative.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Erica plans ahead or plays a lot of chess matches, then Erica is not interested in puzzles and creative.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nInterested(x) ::: x is interested in puzzles.\nBad(x) ::: x is bad at chess.\nPlay(x) ::: x plays a lot of chess.\nPlanner(x) ::: x is a planner.\nCreative(x) ::: x is a creative person.\nPremises:\n∀x (Play(x) → ¬Bad(x)) ::: If a person is bad at chess, then they don't play a lot of chess.\n∀x (Planner(x) ⊕ Creative(x)) ::: A person is either a planner or a creative person.\nPlay(erica) ::: Erica is someone who plays a lot of chess.\n¬(Bad(erica) ∨ Creative(erica)) → (Planner(erica) ∧ Creative(erica)) ⊕ ¬(Planner(erica) ∨ Creative(erica)) ::: If Erica is neither bad at chess nor creative, then Erica is either someone who plans and is creative, or someone who neither plans nor is creative.\nConclusion:\n(Planner(erica) ∨ Play(erica)) → ¬(Interested(erica) ∧ Creative(erica)) ::: If Erica plans ahead or plays a lot of chess matches, then Er"
    ]
  },
  {
    "id": "FOLIO_train_735",
    "context": "People are either interested in puzzles or bad at chess. If a person is bad at chess, then they don't play a lot of chess. A person is either a planner or a creative person. Erica is someone who plays a lot of chess. If Erica is neither bad at chess nor creative, then Erica is either someone who plans and is creative, or someone who neither plans nor is creative.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Erica is creative, then Erica is not interested in puzzles and creative.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nInterested(x) ::: x is interested in puzzles.\nBad(x) ::: x is bad at chess.\nPlay(x) ::: x plays a lot of chess.\nPlanner(x) ::: x is a planner.\nCreative(x) ::: x is a creative person.\nPremises:\n∀x (Interested(x) ⊕ Bad(x)) ::: People are either interested in puzzles or bad at chess.\n∀x (Bad(x) → ¬Play(x)) ::: If a person is bad at chess, then they don't play a lot of chess.\n∀x (Planner(x) ⊕ Creative(x)) ::: A person is either a planner or a creative person.\nPlay(erica) ::: Erica is someone who plays a lot of chess.\n¬(Bad(erica) ∨ Creative(erica)) → (Planner(erica) ∧ Creative(erica)) ⊕ ¬(Planner(erica) ∨ Creative(erica)) ::: If Erica is neither bad at chess nor creative, then Erica is either someone who plans and is creative, or someone who neither plans nor is creative.\nConclusion:\nCreative(erica) → (¬Interested(erica) ∧"
    ]
  },
  {
    "id": "FOLIO_train_736",
    "context": "People are either interested in puzzles or bad at chess. If a person is bad at chess, then they don't play a lot of chess. A person is either a planner or a creative person. Erica is someone who plays a lot of chess. If Erica is neither bad at chess nor creative, then Erica is either someone who plans and is creative, or someone who neither plans nor is creative.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Erica is interested in puzzles and is creative, then Erica is not creative.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nInterested(x) ::: x is interested in puzzles.\nBad(x) ::: x is bad at chess.\nPlay(x) ::: x plays a lot of chess.\nPlanner(x) ::: x is a planner.\nCreative(x) ::: x is a creative person.\nPremises:\n∀x (Interested(x) ⊕ Bad(x)) ::: People are either interested in puzzles or bad at chess.\n∀x (Bad(x) → ¬Play(x)) ::: If a person is bad at chess, then they don't play a lot of chess.\n∀x (Planner(x) ⊕ Creative(x)) ::: A person is either a planner or a creative person.\nPlay(erica) ::: Erica is someone who plays a lot of chess.\n¬(Bad(erica) ∨ Creative(erica)) → (Planner(erica) ∧ Creative(erica)) ⊕ ¬(Planner(erica) ∨ Creative(erica)) ::: If Erica is neither bad at chess nor creative, then Erica is either someone who plans and is creative, or someone who neither plans nor is creative.\nConclusion:\n(Interested(erica) ∧ Creative(erica)) → ¬"
    ]
  },
  {
    "id": "FOLIO_train_737",
    "context": "People are either interested in puzzles or bad at chess. If a person is bad at chess, then they don't play a lot of chess. A person is either a planner or a creative person. Erica is someone who plays a lot of chess. If Erica is neither bad at chess nor creative, then Erica is either someone who plans and is creative, or someone who neither plans nor is creative.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Erica either plays a lot of chess matches or is creative, then Erica is neither interested in puzzles nor a person who plays a lot of chess matches.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nInterested(x) ::: x is interested in puzzles.\nBad(x) ::: x is bad at chess.\nPlay(x) ::: x plays a lot of chess.\nPlanner(x) ::: x is a planner.\nCreative(x) ::: x is a creative person.\nPremises:\n∀x (Play(x) ⊕ Interested(x)) ::: People are either interested in puzzles or bad at chess.\n∀x (Bad(x) → ¬Play(x)) ::: If a person is bad at chess, then they don't play a lot of chess.\n∀x (Planner(x) ⊕ Creative(x)) ::: A person is either a planner or a creative person.\nPlay(erica) ::: Erica is someone who plays a lot of chess.\n¬(Bad(erica) ∨ Creative(erica)) → (Planner(erica) ∧ Creative(erica)) ⊕ ¬(Planner(erica) ∨ Creative(erica)) ::: If Erica is neither bad at chess nor creative, then Erica is either someone who plans and is creative, or someone who neither plans nor is creative.\nConclusion:\n(Play(erica) ⊕ Creative(erica)) → ¬("
    ]
  },
  {
    "id": "FOLIO_train_738",
    "context": "People are either interested in puzzles or bad at chess. If a person is bad at chess, then they don't play a lot of chess. A person is either a planner or a creative person. Erica is someone who plays a lot of chess. If Erica is neither bad at chess nor creative, then Erica is either someone who plans and is creative, or someone who neither plans nor is creative.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Erica is interested in puzzles and plays a lot of chess matches, then Erica is either a person who plays a lot of chess matches or a person that is creative.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nInterested(x) ::: x is interested in puzzles.\nBad(x) ::: x is bad at chess.\nPlay(x) ::: x plays a lot of chess.\nPlanner(x) ::: x is a planner.\nCreative(x) ::: x is a creative person.\nPremises:\n∀x (Play(x) ⊕ Bad(x)) ::: People are either interested in puzzles or bad at chess.\n∀x (Bad(x) → ¬Play(x)) ::: If a person is bad at chess, then they don't play a lot of chess.\n∀x (Planner(x) ⊕ Creative(x)) ::: A person is either a planner or a creative person.\nPlay(erica) ::: Erica is someone who plays a lot of chess.\n¬(Bad(erica) ∨ Creative(erica)) → (Planner(erica) ∧ Creative(erica)) ⊕ ¬(Planner(erica) ∨ Creative(erica)) ::: If Erica is neither bad at chess nor creative, then Erica is either someone who plans and is creative, or someone who neither plans nor is creative.\nConclusion:\n(Interested(erica) ∧ Play(erica)) → (Play("
    ]
  },
  {
    "id": "FOLIO_train_739",
    "context": "People are either interested in puzzles or bad at chess. If a person is bad at chess, then they don't play a lot of chess. A person is either a planner or a creative person. Erica is someone who plays a lot of chess. If Erica is neither bad at chess nor creative, then Erica is either someone who plans and is creative, or someone who neither plans nor is creative.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Erica plans ahead or is interested in puzzles, then Erica is creative.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nInterested(x) ::: x is interested in puzzles.\nBad(x) ::: x is bad at chess.\nPlay(x) ::: x plays a lot of chess.\nPlanner(x) ::: x is a planner.\nCreative(x) ::: x is a creative person.\nPremises:\n∀x (Play(x) ⊕ Interested(x)) ::: People are either interested in puzzles or bad at chess.\n∀x (Bad(x) → ¬Play(x)) ::: If a person is bad at chess, then they don't play a lot of chess.\n∀x (Planner(x) ⊕ Creative(x)) ::: A person is either a planner or a creative person.\nPlay(erica) ::: Erica is someone who plays a lot of chess.\n¬(Bad(erica) ∨ Creative(erica)) → (Planner(erica) ∧ Creative(erica)) ⊕ ¬(Planner(erica) ∨ Creative(erica)) ::: If Erica is neither bad at chess nor creative, then Erica is either someone who plans and is creative, or someone who neither plans nor is creative.\nConclusion:\n(Interested(erica) ∨ Planner(erica)) → Creative"
    ]
  },
  {
    "id": "FOLIO_train_740",
    "context": "People are either interested in puzzles or bad at chess. If a person is bad at chess, then they don't play a lot of chess. A person is either a planner or a creative person. Erica is someone who plays a lot of chess. If Erica is neither bad at chess nor creative, then Erica is either someone who plans and is creative, or someone who neither plans nor is creative.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Erica is either bad at chess or interested in puzzles, then Erica is not a person who plays a lot of chess matches and creative.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nInterested(x) ::: x is interested in puzzles.\nBad(x) ::: x is bad at chess.\nPlay(x) ::: x plays a lot of chess.\nPlanner(x) ::: x is a planner.\nCreative(x) ::: x is a creative person.\nPremises:\n∀x (Bad(x) → ¬Play(x)) ::: If a person is bad at chess, then they don't play a lot of chess.\n∀x (Planner(x) ⊕ Creative(x)) ::: A person is either a planner or a creative person.\nPlay(erica) ::: Erica is someone who plays a lot of chess.\n¬(Bad(erica) ∨ Creative(erica)) → (Planner(erica) ∧ Creative(erica)) ⊕ ¬(Planner(erica) ∨ Creative(erica)) ::: If Erica is neither bad at chess nor creative, then Erica is either someone who plans and is creative, or someone who neither plans nor is creative.\nConclusion:\n(Bad(erica) ∨ Interested(erica)) → ¬(Play(erica) ∧ Creative(erica)) ::: If Erica is either bad at chess or interested in puzzles, then Erica is not a person who plays a lot of chess matches and creative.\n------"
    ]
  },
  {
    "id": "FOLIO_train_741",
    "context": "Soccer players have a right foot and a left foot. Top soccer players are soccer players who can use their both feet very efficiently. If a soccer player can score many goals using left foot, then they can use that foot very efficiently. If a soccer player can score many goals using right foot, then they can use that foot very efficiently. Cristiano Ronaldo is a soccer player. Cristiano Ronaldo can use his right foot very efficiently. Cristiano Ronaldo have scored more than one hundred goals using his left foot.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Cristiano Ronaldo is a top soccer player.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSoccerPlayer(x) ::: x is a soccer player.\nRightFoot(x) ::: x is a right foot.\nLeftFoot(x) ::: x is a left foot.\nTopSoccerPlayer(x) ::: x is a top soccer player.\nCanUse(x, y) ::: x can use y.\nScore(x, y, z) ::: x can score z goals using y.\nPremises:\n∀x (SoccerPlayer(x) → (RightFoot(x) ∧ LeftFoot(x))) ::: Soccer players have a right foot and a left foot.\n∀x (TopSoccerPlayer(x) → SoccerPlayer(x)) ::: Top soccer players are soccer players.\n∀x (Score(x, LeftFoot(x), many) → CanUse(x, LeftFoot(x))) ::: If a soccer player can score many goals using left foot, then they can use that foot very efficiently.\n∀x (Score(x, RightFoot(x), many) → CanUse(x, RightFoot(x))) ::: If a soccer player can score many goals using right foot, then they can use that foot very efficiently.\nSoccerPlayer(cristianoRonaldo) ::: Cristiano Ronaldo is a soccer player.\nCanUse(cristianoRonaldo, RightFoot(cristianoRonaldo)) ::: Cristiano Ronaldo can use his right foot very efficiently."
    ]
  },
  {
    "id": "FOLIO_train_742",
    "context": "Soccer players have a right foot and a left foot. Top soccer players are soccer players who can use their both feet very efficiently. If a soccer player can score many goals using left foot, then they can use that foot very efficiently. If a soccer player can score many goals using right foot, then they can use that foot very efficiently. Cristiano Ronaldo is a soccer player. Cristiano Ronaldo can use his right foot very efficiently. Cristiano Ronaldo have scored more than one hundred goals using his left foot.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Cristiano Ronaldo is not a top soccer player.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSoccerPlayer(x) ::: x is a soccer player.\nRightFoot(x) ::: x is a right foot.\nLeftFoot(x) ::: x is a left foot.\nTopSoccerPlayer(x) ::: x is a top soccer player.\nCanUse(x, y) ::: x can use y.\nScore(x, y, z) ::: x can score y goals using z.\nPremises:\n∀x (SoccerPlayer(x) → (RightFoot(x) ∧ LeftFoot(x))) ::: Soccer players have a right foot and a left foot.\n∀x (TopSoccerPlayer(x) → SoccerPlayer(x)) ::: Top soccer players are soccer players.\n∀x (∀y (Score(x, y, leftFoot) → CanUse(x, leftFoot))) → TopSoccerPlayer(x) ::: If a soccer player can score many goals using left foot, then they can use that foot very efficiently.\n∀x (∀y (Score(x, y, rightFoot) → CanUse(x, rightFoot))) → TopSoccerPlayer(x) ::: If a soccer player can score many goals using right foot, then they can use that foot very efficiently.\nSoccerPlayer(cristianoRonaldo) ::: Cristiano Ronaldo is a soccer player.\nCanUse(cristianoRonaldo, rightFoot) :::"
    ]
  },
  {
    "id": "FOLIO_train_743",
    "context": "The National Lobster Hatchery is a hatchery located in Padstow England. The National Lobster Hatchery is open to visitors. A hatchery is either for profit, or for conservation. If a hatchery is for conservation, it might release animals into the wild. The National Lobster Hatchery is not for profit.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The National Lobster Hatchery is for conservation.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nHatchery(x) ::: x is a hatchery.\nForProfit(x) ::: x is for profit.\nForConservation(x) ::: x is for conservation.\nOpenToVisitors(x) ::: x is open to visitors.\nRelease(x, y) ::: x releases y into the wild.\nPremises:\nHatchery(nationalLobsterHatchery) ∧ OpenToVisitors(nationalLobsterHatchery) ::: The National Lobster Hatchery is a hatchery located in Padstow England. The National Lobster Hatchery is open to visitors.\n∀x (Hatchery(x) → (ForProfit(x) ⊕ ForConservation(x))) ::: A hatchery is either for profit, or for conservation.\n∀x (ForConservation(x) → ∃y (Release(x, y))) ::: If a hatchery is for conservation, it might release animals into the wild.\n¬ForProfit(nationalLobsterHatchery) ::: The National Lobster Hatchery is not for profit.\nConclusion:\nForConservation(nationalLobsterHatchery) ::: The National Lobster Hatchery is for conservation.\n------\nProblem:\nThe National Lobster Hatchery is a hatchery located in Padstow England. The National Lobster Hatch"
    ]
  },
  {
    "id": "FOLIO_train_744",
    "context": "The National Lobster Hatchery is a hatchery located in Padstow England. The National Lobster Hatchery is open to visitors. A hatchery is either for profit, or for conservation. If a hatchery is for conservation, it might release animals into the wild. The National Lobster Hatchery is not for profit.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? All hatcheries are open to visitors.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nHatchery(x) ::: x is a hatchery.\nForProfit(x) ::: x is for profit.\nForConservation(x) ::: x is for conservation.\nOpenToVisitors(x) ::: x is open to visitors.\nRelease(x, y) ::: x releases y into the wild.\nPremises:\nHatchery(nationalLobsterHatchery) ∧ OpenToVisitors(nationalLobsterHatchery) ::: The National Lobster Hatchery is a hatchery located in Padstow England. The National Lobster Hatchery is open to visitors.\n∀x (Hatchery(x) → (ForProfit(x) ⊕ ForConservation(x))) ::: A hatchery is either for profit, or for conservation.\n∀x (ForConservation(x) → ∃y (Release(x, y))) ::: If a hatchery is for conservation, it might release animals into the wild.\n¬ForProfit(nationalLobsterHatchery) ::: The National Lobster Hatchery is not for profit.\nConclusion:\n∀x (Hatchery(x) → OpenToVisitors(x)) ::: All hatcheries are open to visitors.\n------\nProblem:\nThe National Lobster Hatchery is a hatchery located in Padstow England. The National Lobster"
    ]
  },
  {
    "id": "FOLIO_train_745",
    "context": "The National Lobster Hatchery is a hatchery located in Padstow England. The National Lobster Hatchery is open to visitors. A hatchery is either for profit, or for conservation. If a hatchery is for conservation, it might release animals into the wild. The National Lobster Hatchery is not for profit.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The National Lobster Hatchery releases animals into the wild.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nHatchery(x) ::: x is a hatchery.\nOpenToVisitors(x) ::: x is open to visitors.\nForProfit(x) ::: x is for profit.\nForConservation(x) ::: x is for conservation.\nRelease(x, y) ::: x releases y into the wild.\nNationalLobsterHatchery(x) ::: x is the National Lobster Hatchery.\nPremises:\nHatchery(nationalLobsterHatchery) ∧ OpenToVisitors(nationalLobsterHatchery) ::: The National Lobster Hatchery is a hatchery located in Padstow England. The National Lobster Hatchery is open to visitors.\n∀x (Hatchery(x) → (ForProfit(x) ⊕ ForConservation(x))) ::: A hatchery is either for profit, or for conservation.\n∀x (ForConservation(x) → ∃y (Release(x, y))) ::: If a hatchery is for conservation, it might release animals into the wild.\n¬ForProfit(nationalLobsterHatchery) ::: The National Lobster Hatchery is not for profit.\nConclusion:\n∃y (Release(nationalLobsterHatchery, y)) ::: The National Lobster Hatchery releases animals into the wild.\n------\nPro"
    ]
  },
  {
    "id": "FOLIO_train_746",
    "context": "Rhos Aelwyd F.C. is a Welsh football club. Rhos Aelwyd F.C. is the only club based in Ponciau. The Premier Division was won in 2005–06 by a team from Ponciau. The winner of the Premier Division in 2009–10 was promoted back to the Cymru Alliance. The Premier Division in 2009–10 was won by the same team that won in 2005-06.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Rhos Aelwyd F.C. won the 2005-06 Premier Division.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nClub(x) ::: x is a club.\nBasedIn(x, y) ::: x is based in y.\nWon(x, y) ::: x won y.\nPremierDivision(x) ::: x is the Premier Division.\nTeam(x) ::: x is a team.\nPonciau(x) ::: x is based in Ponciau.\nPremierDivisionWinner(x, y) ::: x won the Premier Division in year y.\nPromoted(x, y) ::: x was promoted back to y.\nCymruAlliance(x) ::: x is the Cymru Alliance.\nPremises:\nClub(rhosAelwydFc) ∧ ∀x (Club(x) ∧ BasedIn(x, ponciau) → x = rhosAelwydFc) ::: Rhos Aelwyd F.C. is a Welsh football club. Rhos Aelwyd F.C. is the only club based in Ponciau.\nPremierDivisionWinner(x, year2005-06) ∧ Team(x) ∧ Ponciau(x) ::: The Premier Division was won in 2005–06 by a team from Ponciau.\nPremierDivisionWinner(x, year2009-10) ∧"
    ]
  },
  {
    "id": "FOLIO_train_747",
    "context": "Rhos Aelwyd F.C. is a Welsh football club. Rhos Aelwyd F.C. is the only club based in Ponciau. The Premier Division was won in 2005–06 by a team from Ponciau. The winner of the Premier Division in 2009–10 was promoted back to the Cymru Alliance. The Premier Division in 2009–10 was won by the same team that won in 2005-06.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Rhos Aelwyd F.C. was promoted to the Cymru Alliance.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nClub(x) ::: x is a club.\nBasedIn(x, y) ::: x is based in y.\nWon(x, y) ::: x won y.\nDivision(x) ::: x is a division.\nTeam(x) ::: x is a team.\nPromoted(x, y) ::: x was promoted to y.\nPremises:\nClub(rhosAelwydFc) ∧ ∀x (Club(x) ∧ BasedIn(x, ponciau) → x = rhosAelwydFc) ::: Rhos Aelwyd F.C. is a Welsh football club. Rhos Aelwyd F.C. is the only club based in Ponciau.\nWon(teamFromPonciau, premierDivision20052006) ::: The Premier Division was won in 2005–06 by a team from Ponciau.\nPromoted(winnerOfPremierDivision20092010, cymruAlliance) ::: The winner of the Premier Division in 2009–10 was promoted back to the Cymru Alliance.\nWon(winnerOfPremierDivision20092010, premierDivision20052006) ::: The Premier Division in 2009–10 was won by the same team"
    ]
  },
  {
    "id": "FOLIO_train_748",
    "context": "All OS are software. All Mac are OS. An OS is either Mac or Windows. All Windows are convenient. All software has code. If something is convenient, then it is popular. Burger is a piece of code and a Mac. PyTorch is either Windows and software, or neither Windows nor software.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Burger is popular.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nOS(x) ::: x is an OS.\nSoftware(x) ::: x is software.\nMac(x) ::: x is a Mac.\nWindows(x) ::: x is Windows.\nConvenient(x) ::: x is convenient.\nPopular(x) ::: x is popular.\nCode(x) ::: x has code.\nPieceOfCode(x) ::: x is a piece of code.\nPremises:\n∀x (OS(x) → Software(x)) ::: All OS are software.\n∀x (Mac(x) → OS(x)) ::: All Mac are OS.\n∀x (OS(x) → (Mac(x) ⊕ Windows(x))) ::: An OS is either Mac or Windows.\n∀x (Windows(x) → Convenient(x)) ::: All Windows are convenient.\n∀x (Code(x) → Software(x)) ::: All software has code.\n∀x (Convenient(x) → Popular(x)) ::: If something is convenient, then it is popular.\nPieceOfCode(burger) ∧ Mac(burger) ::: Burger is a piece of code and a Mac.\n(Windows(pytorch) ∧ Software(pytorch)) ⊕ ¬(Windows(pytorch) ∨ Software(pytorch)) ::: PyTorch is either Windows and software,"
    ]
  },
  {
    "id": "FOLIO_train_749",
    "context": "All OS are software. All Mac are OS. An OS is either Mac or Windows. All Windows are convenient. All software has code. If something is convenient, then it is popular. Burger is a piece of code and a Mac. PyTorch is either Windows and software, or neither Windows nor software.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Burger is not popular.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nOS(x) ::: x is an OS.\nSoftware(x) ::: x is software.\nMac(x) ::: x is a Mac.\nWindows(x) ::: x is Windows.\nConvenient(x) ::: x is convenient.\nPopular(x) ::: x is popular.\nCode(x) ::: x has code.\nPieceOfCode(x) ::: x is a piece of code.\nPremises:\n∀x (OS(x) → Software(x)) ::: All OS are software.\n∀x (Mac(x) → OS(x)) ::: All Mac are OS.\n∀x (OS(x) → (Mac(x) ⊕ Windows(x))) ::: An OS is either Mac or Windows.\n∀x (Windows(x) → Convenient(x)) ::: All Windows are convenient.\n∀x (Code(x)) ::: All software has code.\n∀x (Convenient(x) → Popular(x)) ::: If something is convenient, then it is popular.\nPieceOfCode(burger) ∧ Mac(burger) ::: Burger is a piece of code and a Mac.\n(Windows(pytorch) ∧ Software(pytorch)) ⊕ ¬(Windows(pytorch) ∨ Software(pytorch)) ::: PyTorch is either Windows and software, or neither Windows nor software"
    ]
  },
  {
    "id": "FOLIO_train_750",
    "context": "All OS are software. All Mac are OS. An OS is either Mac or Windows. All Windows are convenient. All software has code. If something is convenient, then it is popular. Burger is a piece of code and a Mac. PyTorch is either Windows and software, or neither Windows nor software.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? PyTorch is popular and has code.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nOS(x) ::: x is an OS.\nSoftware(x) ::: x is software.\nMac(x) ::: x is a Mac.\nWindows(x) ::: x is Windows.\nConvenient(x) ::: x is convenient.\nPopular(x) ::: x is popular.\nCode(x) ::: x has code.\nPieceOfCode(x) ::: x is a piece of code.\nPremises:\n∀x (OS(x) → Software(x)) ::: All OS are software.\n∀x (Mac(x) → OS(x)) ::: All Mac are OS.\n∀x (OS(x) → (Mac(x) ⊕ Windows(x))) ::: An OS is either Mac or Windows.\n∀x (Windows(x) → Convenient(x)) ::: All Windows are convenient.\n∀x (Software(x) → Code(x)) ::: All software has code.\n∀x (Convenient(x) → Popular(x)) ::: If something is convenient, then it is popular.\nPieceOfCode(burger) ∧ Mac(burger) ::: Burger is a piece of code and a Mac.\nPyTorch(pytorch) ∧ (Windows(pytorch) ∧ Software(pytorch)) ⊕ ¬(Windows(pytorch) ∨ Software(pytorch)) ::: PyTorch is either Windows and software, or neither Windows nor software.\nConclusion:\nPopular(pytorch) ∧ Code(pytorch) ::: PyTorch is popular and has code.\n------"
    ]
  },
  {
    "id": "FOLIO_train_751",
    "context": "All OS are software. All Mac are OS. An OS is either Mac or Windows. All Windows are convenient. All software has code. If something is convenient, then it is popular. Burger is a piece of code and a Mac. PyTorch is either Windows and software, or neither Windows nor software.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? PyTorch is not popular and has code.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nOS(x) ::: x is an OS.\nSoftware(x) ::: x is software.\nMac(x) ::: x is a Mac.\nWindows(x) ::: x is Windows.\nConvenient(x) ::: x is convenient.\nPopular(x) ::: x is popular.\nCode(x) ::: x has code.\nPieceOfCode(x) ::: x is a piece of code.\nPremises:\n∀x (OS(x) → Software(x)) ::: All OS are software.\n∀x (Mac(x) → OS(x)) ::: All Mac are OS.\n∀x (OS(x) → (Mac(x) ⊕ Windows(x))) ::: An OS is either Mac or Windows.\n∀x (Windows(x) → Convenient(x)) ::: All Windows are convenient.\n∀x (Software(x) → Code(x)) ::: All software has code.\n∀x (Convenient(x) → Popular(x)) ::: If something is convenient, then it is popular.\nPieceOfCode(burger) ∧ Mac(burger) ::: Burger is a piece of code and a Mac.\nPyTorch(pytorch) ∧ (Windows(pytorch) ∧ Software(pytorch)) ⊕ ¬(Windows(pytorch) ∨ Software(pytorch)) ::: PyTorch is either Windows and software, or neither Windows nor software.\nConclusion:\n¬Popular(pytorch) ∧ Code(pytorch) ::: PyTorch is not popular and has code."
    ]
  },
  {
    "id": "FOLIO_train_752",
    "context": "Roads are made of either concrete or asphalt. Roads made of concrete last longer than roads made with asphalt. Roads made of asphalt are smoother than roads made of concrete. Everyone prefers the smoother of two roads. Road one is made of concrete and Road two is made of asphalt.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Road one will last longer than Road two",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRoad(x) ::: x is a road.\nConcrete(x) ::: x is made of concrete.\nAsphalt(x) ::: x is made of asphalt.\nLastLonger(x, y) ::: x will last longer than y.\nSmoother(x, y) ::: x is smoother than y.\nPrefer(x, y) ::: x prefers y.\nPremises:\n∀x (Road(x) → (Concrete(x) ⊕ Asphalt(x))) ::: Roads are made of either concrete or asphalt.\n∀x ∀y (Concrete(x) → (LastLonger(x, y) → Asphalt(y))) ::: Roads made of concrete last longer than roads made with asphalt.\n∀x ∀y (Asphalt(x) → (Smoother(x, y) → Concrete(y))) ::: Roads made of asphalt are smoother than roads made of concrete.\n∀x ∀y ∀z (Prefer(x, y) ∧ Prefer(x, z) → Smoother(y, z)) ::: Everyone prefers the smoother of two roads.\nRoad(road1) ∧ Concrete(road1) ∧ Road(road2) ∧ Asphalt(road2) ::: Road one is made of concrete and Road two is made of asphalt.\nConclusion:\nLastLonger(road1, road2) ::: Road one will last longer than Road two\n------\nProblem:"
    ]
  },
  {
    "id": "FOLIO_train_753",
    "context": "Roads are made of either concrete or asphalt. Roads made of concrete last longer than roads made with asphalt. Roads made of asphalt are smoother than roads made of concrete. Everyone prefers the smoother of two roads. Road one is made of concrete and Road two is made of asphalt.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Road two is not smoother than Road one.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRoad(x) ::: x is a road.\nConcrete(x) ::: x is made of concrete.\nAsphalt(x) ::: x is made of asphalt.\nLastLonger(x, y) ::: x lasts longer than y.\nSmoother(x, y) ::: x is smoother than y.\nPrefer(x, y) ::: x prefers y.\nPremises:\n∀x (Road(x) → (Concrete(x) ⊕ Asphalt(x))) ::: Roads are made of either concrete or asphalt.\n∀x ∀y (Concrete(x) → LastLonger(x, y)) ::: Roads made of concrete last longer than roads made with asphalt.\n∀x ∀y (Asphalt(x) → Smoother(x, y)) ::: Roads made of asphalt are smoother than roads made of concrete.\n∀x ∀y ∀z (Prefer(x, y) ∧ Prefer(x, z) → Smoother(y, z)) ::: Everyone prefers the smoother of two roads.\nRoad(road1) ∧ Concrete(road1) ∧ Road(road2) ∧ Asphalt(road2) ::: Road one is made of concrete and Road two is made of asphalt.\nConclusion:\n¬Smoother(road2, road1) ::: Road two is not smoother than Road one.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffe"
    ]
  },
  {
    "id": "FOLIO_train_754",
    "context": "Roads are made of either concrete or asphalt. Roads made of concrete last longer than roads made with asphalt. Roads made of asphalt are smoother than roads made of concrete. Everyone prefers the smoother of two roads. Road one is made of concrete and Road two is made of asphalt.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? John prefers Road two.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRoad(x) ::: x is a road.\nConcrete(x) ::: x is made of concrete.\nAsphalt(x) ::: x is made of asphalt.\nLastLonger(x, y) ::: x lasts longer than y.\nSmoother(x, y) ::: x is smoother than y.\nPrefer(x, y) ::: x prefers y.\nPremises:\n∀x (Road(x) → (Concrete(x) ⊕ Asphalt(x))) ::: Roads are made of either concrete or asphalt.\n∀x ∀y (Concrete(x) → LastLonger(x, y)) ::: Roads made of concrete last longer than roads made with asphalt.\n∀x ∀y (Asphalt(x) → Smoother(x, y)) ::: Roads made of asphalt are smoother than roads made of concrete.\n∀x ∀y ∀z (Prefer(x, y) ∧ Prefer(x, z) → Prefer(x, y ⊕ z)) ::: Everyone prefers the smoother of two roads.\nRoad(roadOne) ∧ Concrete(roadOne) ∧ Road(roadTwo) ∧ Asphalt(roadTwo) ::: Road one is made of concrete and Road two is made of asphalt.\nConclusion:\nPrefer(john, roadTwo) ::: John prefers Road two.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People"
    ]
  },
  {
    "id": "FOLIO_train_755",
    "context": "Camp Davern is a traditional summer camp for boys and girls. Camp Davern was established in the year 1946. Camp Davern was operated by the YMCA until the year 2015. Camp Davern is one of Ontario's oldest summer camps.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? One of Ontario's oldest summer camps is a traditional summer camp for boys and girls.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCamp(x) ::: x is a camp.\nTraditional(x) ::: x is a traditional camp.\nSummer(x) ::: x is a summer camp.\nBoys(x) ::: x is a camp for boys.\nGirls(x) ::: x is a camp for girls.\nEstablished(x, y) ::: x was established in year y.\nOperated(x, y, z) ::: x was operated by y until year z.\nOntario(x) ::: x is in Ontario.\nOldest(x) ::: x is one of Ontario's oldest summer camps.\nPremises:\nCamp(davern) ∧ Traditional(davern) ∧ Summer(davern) ∧ Boys(davern) ∧ Girls(davern) ::: Camp Davern is a traditional summer camp for boys and girls.\nEstablished(davern, year1946) ::: Camp Davern was established in the year 1946.\nOperated(davern, ymca, year2015) ::: Camp Davern was operated by the YMCA until the year 2015.\nOldest(davern) ::: Camp Davern is one of Ontario's oldest summer camps.\nConclusion:\n∃x (Oldest(x) ∧ Camp(x) ∧ Traditional(x) ∧ Summer(x) ∧ Boys(x) ∧ Girls(x)) ::: One of Ontario's oldest summer camps is a traditional summer camp for boys and girls.\n------\nProblem:\nThe 2018 FIFA World"
    ]
  },
  {
    "id": "FOLIO_train_756",
    "context": "Camp Davern is a traditional summer camp for boys and girls. Camp Davern was established in the year 1946. Camp Davern was operated by the YMCA until the year 2015. Camp Davern is one of Ontario's oldest summer camps.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A traditional summer camp for boys and girls was operated by the YMCA until the year 2015.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCamp(x) ::: x is a camp.\nTraditional(x) ::: x is traditional.\nSummer(x) ::: x is a summer.\nBoys(x) ::: x is a boy.\nGirls(x) ::: x is a girl.\nEstablished(x, y) ::: x was established in year y.\nOperated(x, y, z) ::: x was operated by y until year z.\nOntario(x) ::: x is in Ontario.\nOld(x) ::: x is old.\nPremises:\nCamp(davern) ∧ Traditional(davern) ∧ Summer(davern) ∧ Boys(davern) ∧ Girls(davern) ::: Camp Davern is a traditional summer camp for boys and girls.\nEstablished(davern, year1946) ::: Camp Davern was established in the year 1946.\nOperated(davern, ymca, year2015) ::: Camp Davern was operated by the YMCA until the year 2015.\nOld(davern) ::: Camp Davern is one of Ontario's oldest summer camps.\nConclusion:\n∃x (Camp(x) ∧ Traditional(x) ∧ Summer(x) ∧ Boys(x) ∧ Girls(x) ∧ Operated(x, ymca, year2015)) ::: A traditional summer camp for boys and girls was operated by the YMCA until the year 2015.\n------\nProblem:\nThe 2018 FIFA World"
    ]
  },
  {
    "id": "FOLIO_train_757",
    "context": "Camp Davern is a traditional summer camp for boys and girls. Camp Davern was established in the year 1946. Camp Davern was operated by the YMCA until the year 2015. Camp Davern is one of Ontario's oldest summer camps.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Camp Davern was established in 1989.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCamp(x) ::: x is a camp.\nDavern(x) ::: x is Camp Davern.\nEstablished(x, y) ::: x was established in year y.\nOperated(x, y, z) ::: x was operated by y in year z.\nOntario(x) ::: x is in Ontario.\nSummerCamp(x) ::: x is a summer camp.\nTraditional(x) ::: x is traditional.\nPremises:\nDavern(campDavern) ∧ SummerCamp(campDavern) ∧ Traditional(campDavern) ∧ Established(campDavern, year1946) ::: Camp Davern is a traditional summer camp.\nEstablished(campDavern, year1946) ::: Camp Davern was established in the year 1946.\nOperated(campDavern, ymca, year2015) ::: Camp Davern was operated by the YMCA until the year 2015.\nOntario(campDavern) ::: Camp Davern is one of Ontario's oldest summer camps.\nConclusion:\nEstablished(campDavern, year1989) ::: Camp Davern was established in 1989.\n------\nProblem:\nThe 2018 FIFA World Cup was the 21st FIFA World Cup, a quadrennial international football tournament contested by the men's national teams of the member associations of FIFA. The tournament was held in Russia from 14 June to 15 July 2018, after the country was awarded the hosting rights"
    ]
  },
  {
    "id": "FOLIO_train_758",
    "context": "If people publish journals, then they do not work in the entertainment industry. All people who are award-winning novelists publish journals. People either work in the entertainment industry or are highly acclaimed in their profession. If people are highly acclaimed in their profession, then they often hold tenured and high-ranking positions at their workplace. If people are highly acclaimed in their profession, then they often receive glowing feedback and recommendations from their colleagues. If Emily is either both highly acclaimed in her profession and often holds tenured and high-ranking positions at her workplace, or she is neither highly acclaimed in her profession nor often holds tenured and high-ranking positions at her workplace, then Emily is not highly acclaimed in her profession.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Emily often holds tenured and high-ranking positions at her workplace.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPublish(x) ::: x publishes journals.\nWork(x) ::: x works in the entertainment industry.\nAwardWinningNovelist(x) ::: x is an award-winning novelist.\nHighlyAcclaimed(x) ::: x is highly acclaimed in her profession.\nTenured(x) ::: x often holds tenured and high-ranking positions at her workplace.\nFeedback(x) ::: x often receives glowing feedback and recommendations from her colleagues.\nPremises:\n∀x (Publish(x) → ¬Work(x)) ::: If people publish journals, then they do not work in the entertainment industry.\n∀x (AwardWinningNovelist(x) → Publish(x)) ::: All people who are award-winning novelists publish journals.\n∀x (Work(x) ⊕ HighlyAcclaimed(x)) ::: People either work in the entertainment industry or are highly acclaimed in their profession.\n∀x (HighlyAcclaimed(x) → (Tenured(x) ∨ Feedback(x))) ::: If people are highly acclaimed in their profession, then they often hold tenured and high-ranking positions at their workplace.\n∀x (HighlyAcclaimed(x) → Feedback(x)) ::: If people are highly acclaimed in their profession, then they often receive glowing feedback and recommendations from their colleagues.\n(HighlyAcclaimed(emily) ∧ Tenured(emily)) ⊕ ¬(HighlyAcclaimed(emily) ∨ Tenured(emily)) → ¬HighlyAcclaimed(em"
    ]
  },
  {
    "id": "FOLIO_train_759",
    "context": "If people publish journals, then they do not work in the entertainment industry. All people who are award-winning novelists publish journals. People either work in the entertainment industry or are highly acclaimed in their profession. If people are highly acclaimed in their profession, then they often hold tenured and high-ranking positions at their workplace. If people are highly acclaimed in their profession, then they often receive glowing feedback and recommendations from their colleagues. If Emily is either both highly acclaimed in her profession and often holds tenured and high-ranking positions at her workplace, or she is neither highly acclaimed in her profession nor often holds tenured and high-ranking positions at her workplace, then Emily is not highly acclaimed in her profession.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Emily often receives glowing feedback and recommendations from their colleagues and is an award-winning novelist.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPublish(x) ::: x publishes journals.\nEntertainment(x) ::: x works in the entertainment industry.\nNovelist(x) ::: x is an award-winning novelist.\nHighlyAcclaimed(x) ::: x is highly acclaimed in their profession.\nTenured(x) ::: x often holds tenured and high-ranking positions at their workplace.\nFeedback(x) ::: x often receives glowing feedback and recommendations from their colleagues.\nPremises:\n∀x (Publish(x) → ¬Entertainment(x)) ::: If people publish journals, then they do not work in the entertainment industry.\n∀x (Novelist(x) → Publish(x)) ::: All people who are award-winning novelists publish journals.\n∀x (Entertainment(x) ⊕ HighlyAcclaimed(x)) ::: People either work in the entertainment industry or are highly acclaimed in their profession.\n∀x (HighlyAcclaimed(x) → (Tenured(x) ∨ Feedback(x))) ::: If people are highly acclaimed in their profession, then they often hold tenured and high-ranking positions at their workplace.\n∀x (HighlyAcclaimed(x) → Feedback(x)) ::: If people are highly acclaimed in their profession, then they often receive glowing feedback and recommendations from their colleagues.\n(HighlyAcclaimed(emily) ∧ Tenured(emily)) ⊕ ¬(HighlyAcclaimed(emily) ∨ Tenured(emily)) → ¬HighlyAcclaimed(emily) ::: If"
    ]
  },
  {
    "id": "FOLIO_train_760",
    "context": "If people publish journals, then they do not work in the entertainment industry. All people who are award-winning novelists publish journals. People either work in the entertainment industry or are highly acclaimed in their profession. If people are highly acclaimed in their profession, then they often hold tenured and high-ranking positions at their workplace. If people are highly acclaimed in their profession, then they often receive glowing feedback and recommendations from their colleagues. If Emily is either both highly acclaimed in her profession and often holds tenured and high-ranking positions at her workplace, or she is neither highly acclaimed in her profession nor often holds tenured and high-ranking positions at her workplace, then Emily is not highly acclaimed in her profession.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Emily either often receives glowing feedback and recommendations from her colleagues or is an award-winning novelist, then Emily does not both publish journals and is an award-winning novelist.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPublish(x) ::: x publishes journals.\nEntertainment(x) ::: x works in the entertainment industry.\nAwardWinning(x) ::: x is an award-winning novelist.\nHighlyAcclaimed(x) ::: x is highly acclaimed in her profession.\nTenured(x) ::: x often holds tenured and high-ranking positions at her workplace.\nGlowing(x) ::: x often receives glowing feedback and recommendations from her colleagues.\nPremises:\n∀x (Publish(x) → ¬Entertainment(x)) ::: If people publish journals, then they do not work in the entertainment industry.\n∀x (AwardWinning(x) → Publish(x)) ::: All people who are award-winning novelists publish journals.\n∀x (Entertainment(x) ⊕ HighlyAcclaimed(x)) ::: People either work in the entertainment industry or are highly acclaimed in their profession.\n∀x (HighlyAcclaimed(x) → Tenured(x)) ::: If people are highly acclaimed in their profession, then they often hold tenured and high-ranking positions at their workplace.\n∀x (HighlyAcclaimed(x) → Glowing(x)) ::: If people are highly acclaimed in their profession, then they often receive glowing feedback and recommendations from their colleagues.\n(HighlyAcclaimed(emily) ∧ Tenured(emily)) ⊕ ¬(HighlyAcclaimed(emily) ∨ Tenured(emily)) → ¬HighlyAcclaimed(emily) ::: If Emily is either both highly acclaimed in her profession and often holds tenured and high-ranking positions at her workplace, or she is neither highly acclaimed in her profession nor often holds tenured and high-ranking positions at her workplace, then Emily is not highly acclaimed in her profession.\nConclusion:\n(Glowing(emily) ∨ AwardWinning(emily)) → ¬(Publish(emily) ∧ AwardWinning(emily)) ::: If Emily either often receives glowing feedback and recommendations from her colleagues or is an award-winning novelist, then Emily does not both publish journals and is an award-winning novelist.\n------"
    ]
  },
  {
    "id": "FOLIO_train_761",
    "context": "Thick as Thieves is a young adult fantasy novel, written by Megan Whalen Turner. Thick as Thieves was published by Greenwillow Books. If a book was published by a company, than the author of that book worked with the company that published the book. The fictional Mede Empire is where Thick as Thieves is set. The Mede Empire plots to swallow up some nearby countries. Attolia and Sounis are countries near the Mede Empire. Thick as Thieves was sold both as a hardcover and an e-book.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Megan Whalen Turner worked with Greenwillow Books.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAuthor(x, y) ::: x is the author of y.\nBook(x) ::: x is a book.\nPublish(x, y) ::: x is published by y.\nWork(x, y) ::: x worked with y.\nSet(x, y) ::: x is set in y.\nPlot(x, y) ::: x plots to swallow up y.\nNear(x, y) ::: x is near y.\nSell(x, y) ::: x is sold as y.\nPremises:\nBook(thickAsThieves) ∧ Author(meganWhalenTurner, thickAsThieves) ∧ Publish(greenwillowBooks, thickAsThieves) ::: Thick as Thieves is a young adult fantasy novel, written by Megan Whalen Turner. Thick as Thieves was published by Greenwillow Books.\n∀x ∀y (Publish(x, y) → Work(Author(x, y), x)) ::: If a book was published by a company, than the author of that book worked with the company that published the book.\nSet(thickAsThieves, medeEmpire) ∧ Plot(medeEmpire, swallowUpSomeNearbyCountries) ::: The fictional Mede Empire is where Thick as Thieves is set. The Mede Empire plots to swallow up some nearby countries.\nNear(attolia, medeEmpire) ∧ Near(sounis, medeEmpire) ::: Attolia and Sounis are countries near the Mede Empire.\nSell(thickAsThieves, hardcover) ∧ Sell(thickAsThieves, eBook) ::: Thick as Thieves was sold both as a hardcover and an e-book.\nConclusion:\nWork(meganWhalenTurner, greenwillowBooks) ::: Megan Whalen Turner worked with Greenwillow Books.\n------\nProblem:\nThe 2018 FIFA World Cup was the 21st FIFA World Cup, a quadrennial international football tournament contested by the men's national teams of the member associations of FIFA. The 2018 FIFA World Cup was"
    ]
  },
  {
    "id": "FOLIO_train_762",
    "context": "Thick as Thieves is a young adult fantasy novel, written by Megan Whalen Turner. Thick as Thieves was published by Greenwillow Books. If a book was published by a company, than the author of that book worked with the company that published the book. The fictional Mede Empire is where Thick as Thieves is set. The Mede Empire plots to swallow up some nearby countries. Attolia and Sounis are countries near the Mede Empire. Thick as Thieves was sold both as a hardcover and an e-book.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Mede Empire plans to swallow up Attolia.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nThickAsThieves(x) ::: x is Thick as Thieves.\nYoungAdultFantasyNovel(x) ::: x is a young adult fantasy novel.\nWrittenBy(x, y) ::: x is written by y.\nPublishedBy(x, y) ::: x is published by y.\nPublished(x) ::: x is published.\nWorkedWith(x, y) ::: x worked with y.\nSetIn(x, y) ::: x is set in y.\nPlotsToSwallowUp(x, y) ::: x plots to swallow up y.\nNear(x, y) ::: x is near y.\nCountry(x) ::: x is a country.\nSoldAs(x, y) ::: x is sold as y.\nHardcover(x) ::: x is a hardcover.\nEBook(x) ::: x is an e-book.\nPremises:\nThickAsThieves(thickAsThieves) ∧ YoungAdultFantasyNovel(thickAsThieves) ∧ WrittenBy(meganWhalenTurner, thickAsThieves) ∧ PublishedBy(greenwillowBooks, thickAsThieves) ∧ Published(thickAsThieves) ::: Thick as Thieves is a young adult fantasy novel, written by Megan Whalen Turner. Thick as Thieves was published by Greenwillow Books.\n∀x (PublishedBy(x, y) → WorkedWith(y, x)) ::: If a book was published by a company, than the author of that book worked with the company that published the book.\nSetIn(thickAsThieves, medeEmpire) ∧ PlotsToSwallowUp(medeEmpire, attolia) ∧ PlotsToSwallowUp(medeEmpire, sounis) ::: The fictional Mede Empire is where Thick as Thieves is set. The Mede Empire plots to swallow up some nearby countries. Attolia and Sounis are countries near the Mede Empire.\nSoldAs(thickAsThieves, hardcover) ∧ SoldAs(thick"
    ]
  },
  {
    "id": "FOLIO_train_763",
    "context": "Thick as Thieves is a young adult fantasy novel, written by Megan Whalen Turner. Thick as Thieves was published by Greenwillow Books. If a book was published by a company, than the author of that book worked with the company that published the book. The fictional Mede Empire is where Thick as Thieves is set. The Mede Empire plots to swallow up some nearby countries. Attolia and Sounis are countries near the Mede Empire. Thick as Thieves was sold both as a hardcover and an e-book.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Thick as Thieves is not set in the mede empire.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nThickAsThieves(x) ::: x is Thick as Thieves.\nPublished(x, y) ::: x was published by y.\nWorkedWith(x, y) ::: x worked with y.\nSet(x, y) ::: x is set in y.\nPlot(x, y) ::: x plots to swallow up y.\nNear(x, y) ::: x is near y.\nSold(x, y) ::: x was sold as y.\nPremises:\nThickAsThieves(thickAsThieves) ::: Thick as Thieves is a young adult fantasy novel, written by Megan Whalen Turner.\nPublished(thickAsThieves, greenwillowBooks) ::: Thick as Thieves was published by Greenwillow Books.\n∀x (Published(x, y) → WorkedWith(authorOf(x), y)) ::: If a book was published by a company, than the author of that book worked with the company that published the book.\nSet(thickAsThieves, medeEmpire) ::: The fictional Mede Empire is where Thick as Thieves is set.\nPlot(medeEmpire, swallowUpSomeNearbyCountries) ::: The Mede Empire plots to swallow up some nearby countries.\nNear(attolia, medeEmpire) ::: Attolia and Sounis are countries near the Mede Empire.\nNear(sounis, medeEmpire) ::: Attolia and Sounis are countries near the Mede Empire.\nSold(thickAsThieves, hardcover) ::: Thick as Thieves was sold both as a hardcover and an e-book.\nSold(thickAsThieves, eBook) ::: Thick as Thieves was sold both as a hardcover and an e-book.\nConclusion:\n¬Set(thickAsThieves, medeEmpire) ::: Thick as Thieves is not set in the mede empire.\n------\nProblem:\nThe 2018 FIFA World Cup was the 21st FIFA World Cup, a quadrennial international football tournament contested by the men's national teams of the member associations of FIFA"
    ]
  },
  {
    "id": "FOLIO_train_764",
    "context": "Thick as Thieves is a young adult fantasy novel, written by Megan Whalen Turner. Thick as Thieves was published by Greenwillow Books. If a book was published by a company, than the author of that book worked with the company that published the book. The fictional Mede Empire is where Thick as Thieves is set. The Mede Empire plots to swallow up some nearby countries. Attolia and Sounis are countries near the Mede Empire. Thick as Thieves was sold both as a hardcover and an e-book.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Megan Whalen Turner did not work with Greenwillow Books.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nThickAsThieves(x) ::: x is Thick as Thieves.\nYoungAdultFantasyNovel(x) ::: x is a young adult fantasy novel.\nWrittenBy(x, y) ::: x is written by y.\nPublishedBy(x, y) ::: x is published by y.\nWorkedWith(x, y) ::: x worked with y.\nSetIn(x, y) ::: x is set in y.\nPlot(x, y) ::: x plots to y.\nNear(x, y) ::: x is near y.\nCountry(x) ::: x is a country.\nSold(x, y) ::: x is sold as y.\nHardcover(x) ::: x is a hardcover.\nEbook(x) ::: x is an e-book.\nPremises:\nThickAsThieves(thickAsThieves) ∧ YoungAdultFantasyNovel(thickAsThieves) ∧ WrittenBy(meganWhalenTurner, thickAsThieves) ∧ PublishedBy(greenwillowBooks, thickAsThieves) ::: Thick as Thieves is a young adult fantasy novel, written by Megan Whalen Turner.\n∀x (PublishedBy(x, y) → WorkedWith(authorOf(x), y)) ::: If a book was published by a company, than the author of that book worked with the company that published the book.\nSetIn(thickAsThieves, medeEmpire) ∧ Plot(medeEmpire, swallowUpSomeNearbyCountries) ::: The fictional Mede Empire is where Thick as Thieves is set. The Mede Empire plots to swallow up some nearby countries.\nCountry(attolia) ∧ Country(sounis) ∧ Near(attolia, medeEmpire) ∧ Near(sounis, medeEmpire) ::: Attolia and Sounis are countries near the Mede Empire.\nSold(thickAsThieves, hardcover) ∧ Sold(thickAsThieves, ebook) ::: Thick as Thieves was"
    ]
  },
  {
    "id": "FOLIO_train_765",
    "context": "WeTab is a MeeGo-based tablet computer. There is a WeTab product. WeTab was announced by Neofonie. Neofonie is a German producer. Germans speak English or German.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There is a tablet computer that was announced by a German.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nWeTab(x) ::: x is a WeTab product.\nTabletComputer(x) ::: x is a tablet computer.\nAnnounce(x, y) ::: x is announced by y.\nProducer(x) ::: x is a producer.\nGerman(x) ::: x is a German.\nSpeak(x, y) ::: x speaks y.\nEnglish(x) ::: x is English.\nPremises:\nWeTab(weTab) ∧ TabletComputer(weTab) ::: There is a WeTab product.\nAnnounce(neofonie, weTab) ::: WeTab was announced by Neofonie.\nProducer(neofonie) ∧ German(neofonie) ::: Neofonie is a German producer.\nSpeak(german, english) ∨ Speak(german, german) ::: Germans speak English or German.\nConclusion:\n∃x (TabletComputer(x) ∧ Announce(x, german)) ::: There is a tablet computer that was announced by a German.\n------\nProblem:\nThe 2010 FIFA World Cup was the 19th FIFA World Cup, the world championship for men's national association football teams. The 2010 FIFA World Cup was held in South Africa. The 2010 FIFA World Cup was the first World Cup to be held in Africa. The 2010 FIFA World Cup was the first World Cup to be held in a non-European and non-American country. The 2010 FIFA World Cup was the first World Cup to be held in a country with a tropical climate. The 2010 FIFA World Cup was the first World Cup to be held in a country with a population of less than 100 million. The 2010 FIFA World Cup was the first World Cup to be held in a country with a population of less than 50 million. The 2010 FIFA World Cup was the first World Cup to be held in a country with a population of less than 20 million. The 2010 FIFA World Cup was the first World Cup to be held in a country with a population of less than 10 million. The 2010 FIFA World Cup was the first World Cup to be held"
    ]
  },
  {
    "id": "FOLIO_train_766",
    "context": "WeTab is a MeeGo-based tablet computer. There is a WeTab product. WeTab was announced by Neofonie. Neofonie is a German producer. Germans speak English or German.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Neofonie doesn't speak English or German.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nWeTab(x) ::: x is a WeTab product.\nAnnounce(x, y) ::: x is announced by y.\nProduce(x, y) ::: x is produced by y.\nSpeak(x, y) ::: x speaks y.\nGerman(x) ::: x is a German.\nEnglish(x) ::: x is English.\nPremises:\nWeTab(weTab) ::: There is a WeTab product.\nAnnounce(weTab, neofonie) ::: WeTab was announced by Neofonie.\nProduce(neofonie, weTab) ::: Neofonie is a German producer.\nSpeak(german, english) ∨ Speak(german, german) ::: Germans speak English or German.\nConclusion:\n¬Speak(neofonie, english) ∧ ¬Speak(neofonie, german) ::: Neofonie doesn't speak English or German.\n------\nProblem:\nThe 2010 FIFA World Cup was the 19th FIFA World Cup, the world championship for men's national association football teams. The 2010 FIFA World Cup was held in South Africa. The 2010 FIFA World Cup was the first World Cup to be held in Africa. The 2010 FIFA World Cup was the first World Cup to be held in a non-European and non-North American nation. The 2010 FIFA World Cup was the first World Cup to be held in a nation that was not a former European colony. The 2010 FIFA World Cup was the first World Cup to be held in a nation that was not a former British colony. The 2010 FIFA World Cup was the first World Cup to be held in a nation that was not a former European colony or a former British colony.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The 2010 FIFA World Cup was the first World Cup to be held in a nation that was not a former European colony or a former British colony.\nBased on the above information, is the following statement true, false, or uncertain? The 2010 FIFA World Cup was the first World Cup to be held in a nation that was not a former European colony or a former British colony."
    ]
  },
  {
    "id": "FOLIO_train_767",
    "context": "Some employees working in business analysis are good at math. All employees working in business analysis are working in this company. No employees working in this company are from China. All employees working in software engineering are from China. James is working in software engineering.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James is good at math.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEmployee(x) ::: x is an employee.\nWorkingIn(x, y) ::: x is working in y.\nBusinessAnalysis(x) ::: x is working in business analysis.\nSoftwareEngineering(x) ::: x is working in software engineering.\nGoodAtMath(x) ::: x is good at math.\nFromChina(x) ::: x is from China.\nCompany(x) ::: x is this company.\nPremises:\n∃x (Employee(x) ∧ WorkingIn(x, businessAnalysis) ∧ GoodAtMath(x)) ::: Some employees working in business analysis are good at math.\n∀x (Employee(x) ∧ WorkingIn(x, businessAnalysis) → WorkingIn(x, company)) ::: All employees working in business analysis are working in this company.\n∀x (Employee(x) ∧ WorkingIn(x, company) → ¬FromChina(x)) ::: No employees working in this company are from China.\n∀x (Employee(x) ∧ WorkingIn(x, softwareEngineering) → FromChina(x)) ::: All employees working in software engineering are from China.\nEmployee(james) ∧ WorkingIn(james, softwareEngineering) ::: James is working in software engineering.\nConclusion:\nGoodAtMath(james) ::: James is good at math.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on"
    ]
  },
  {
    "id": "FOLIO_train_768",
    "context": "Some employees working in business analysis are good at math. All employees working in business analysis are working in this company. No employees working in this company are from China. All employees working in software engineering are from China. James is working in software engineering.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James is not good at math and he is working in business analysis.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEmployee(x) ::: x is an employee.\nWorkingIn(x, y) ::: x is working in y.\nBusinessAnalysis(x) ::: x is working in business analysis.\nSoftwareEngineering(x) ::: x is working in software engineering.\nGoodAtMath(x) ::: x is good at math.\nFromChina(x) ::: x is from China.\nPremises:\n∃x (Employee(x) ∧ BusinessAnalysis(x) ∧ GoodAtMath(x)) ::: Some employees working in business analysis are good at math.\n∀x (Employee(x) ∧ BusinessAnalysis(x) → WorkingIn(x, thisCompany)) ::: All employees working in business analysis are working in this company.\n∀x (Employee(x) ∧ WorkingIn(x, thisCompany) → ¬FromChina(x)) ::: No employees working in this company are from China.\n∀x (Employee(x) ∧ SoftwareEngineering(x) → FromChina(x)) ::: All employees working in software engineering are from China.\nEmployee(james) ∧ SoftwareEngineering(james) ::: James is working in software engineering.\nConclusion:\n¬(GoodAtMath(james) ∧ BusinessAnalysis(james)) ::: James is not good at math and he is working in business analysis.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above"
    ]
  },
  {
    "id": "FOLIO_train_769",
    "context": "Some employees working in business analysis are good at math. All employees working in business analysis are working in this company. No employees working in this company are from China. All employees working in software engineering are from China. James is working in software engineering.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If James is not good at math and he is in business analysis, then he is neither working in this company nor working in software engineering.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEmployee(x) ::: x is an employee.\nWorkingIn(x, y) ::: x is working in y.\nBusinessAnalysis(x) ::: x is working in business analysis.\nSoftwareEngineering(x) ::: x is working in software engineering.\nGoodAtMath(x) ::: x is good at math.\nFromChina(x) ::: x is from China.\nPremises:\n∀x (BusinessAnalysis(x) → WorkingIn(x, thisCompany)) ::: All employees working in business analysis are working in this company.\n∀x (BusinessAnalysis(x) → Employee(x)) ::: All employees working in business analysis are employees.\n∀x (Employee(x) → ¬FromChina(x)) ::: No employees working in this company are from China.\n∀x (SoftwareEngineering(x) → FromChina(x)) ::: All employees working in software engineering are from China.\n∀x (SoftwareEngineering(x) → Employee(x)) ::: All employees working in software engineering are employees.\nWorkingIn(james, softwareEngineering) ::: James is working in software engineering.\nConclusion:\n(GoodAtMath(james) ∧ BusinessAnalysis(james)) → (WorkingIn(james, thisCompany) ∨ WorkingIn(james, softwareEngineering)) ::: If James is not good at math and he is in business analysis, then he is neither working in this company nor working in software engineering.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted"
    ]
  },
  {
    "id": "FOLIO_train_770",
    "context": "The party provides five kinds of fruits: strawberry, orange, blueberry, grape, and cherry. All fruits are provided in the same weight at the beginning of the party. If the fruit had the lowest remaining weight at the end of the party, then it means it was the most popular fruit. At the end of the party, strawberries had the lowest remaining weight. At the end of the party, the amount of leftover blueberries was lower than that of cherries. Benjamin only ate oranges and grapes at the party.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Blueberries were the most popular fruit at the party.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFruit(x) ::: x is a fruit.\nStrawberry(x) ::: x is a strawberry.\nOrange(x) ::: x is an orange.\nBlueberry(x) ::: x is a blueberry.\nGrape(x) ::: x is a grape.\nCherry(x) ::: x is a cherry.\nProvide(x) ::: x is provided.\nWeight(x) ::: x is a weight.\nPopular(x) ::: x is popular.\nBegin(x) ::: x is at the beginning.\nEnd(x) ::: x is at the end.\nLeftover(x) ::: x is leftover.\nAmount(x) ::: x is an amount.\nEat(x, y) ::: x eats y.\nPremises:\nFruit(strawberry) ∧ Fruit(orange) ∧ Fruit(blueberry) ∧ Fruit(grape) ∧ Fruit(cherry) ::: The party provides five kinds of fruits: strawberry, orange, blueberry, grape, and cherry.\nProvide(strawberry) ∧ Provide(orange) ∧ Provide(blueberry) ∧ Provide(grape) ∧ Provide(cherry) ::: All fruits are provided in the same weight at the beginning of the party.\n∀x (End(x) → Popular(x)) ::: If the fruit had the lowest remaining weight at the end of the party, then it means it was the most popular fruit.\nEnd(strawberry) ∧ Weight(strawberry) ::: At the end of the party, strawberries had the lowest remaining weight.\nEnd(blueberry) ∧ End(cherry) ∧ Amount(blueberry) ∧ Amount(cherry) ∧ Amount(blueberry) < Amount(cherry) ::: At the end of the party, the amount of leftover blueberries was lower than that of cherries.\nEat(benjamin, orange) ∧ Eat(benjamin, grape) ::: Benjamin only ate oranges and grapes at the party.\nConclusion:\nPopular(blueberry) ::: Blueberries were the most popular fruit at the party.\n------"
    ]
  },
  {
    "id": "FOLIO_train_771",
    "context": "The party provides five kinds of fruits: strawberry, orange, blueberry, grape, and cherry. All fruits are provided in the same weight at the beginning of the party. If the fruit had the lowest remaining weight at the end of the party, then it means it was the most popular fruit. At the end of the party, strawberries had the lowest remaining weight. At the end of the party, the amount of leftover blueberries was lower than that of cherries. Benjamin only ate oranges and grapes at the party.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Cherries were the most popular fruit at the party.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFruit(x) ::: x is a fruit.\nStrawberry(x) ::: x is a strawberry.\nOrange(x) ::: x is an orange.\nBlueberry(x) ::: x is a blueberry.\nGrape(x) ::: x is a grape.\nCherry(x) ::: x is a cherry.\nParty(x) ::: x is a party.\nProvide(x, y) ::: x provides y.\nWeight(x, y) ::: x has weight y.\nPopular(x) ::: x is a popular fruit.\nLeftover(x, y) ::: x has leftover y.\nEat(x, y) ::: x eats y.\nPremises:\nParty(party) ∧ Provide(party, strawberry) ∧ Provide(party, orange) ∧ Provide(party, blueberry) ∧ Provide(party, grape) ∧ Provide(party, cherry) ::: The party provides five kinds of fruits: strawberry, orange, blueberry, grape, and cherry.\n∀x (Fruit(x) → Weight(x, same)) ::: All fruits are provided in the same weight at the beginning of the party.\n∀x (Popular(x) → Weight(x, lowest)) ::: If the fruit had the lowest remaining weight at the end of the party, then it means it was the most popular fruit.\nStrawberry(strawberry) ∧ Weight(strawberry, lowest) ::: At the end of the party, strawberries had the lowest remaining weight.\nBlueberry(blueberry) ∧ Leftover(blueberry, lower) ∧ Cherry(cherry) ∧ Leftover(cherry, higher) ::: At the end of the party, the amount of leftover blueberries was lower than that of cherries.\nBenjamin(benjamin) ∧ Eat(benjamin, orange) ∧ Eat(benjamin, grape) ::: Benjamin only ate oranges and grapes at the party.\nConclusion:\nPopular(cherry) ::: Cherries were the most popular fruit at the party.\n------\nProblem:\nThe party provides five kinds of fruits: strawberry, orange"
    ]
  },
  {
    "id": "FOLIO_train_772",
    "context": "The party provides five kinds of fruits: strawberry, orange, blueberry, grape, and cherry. All fruits are provided in the same weight at the beginning of the party. If the fruit had the lowest remaining weight at the end of the party, then it means it was the most popular fruit. At the end of the party, strawberries had the lowest remaining weight. At the end of the party, the amount of leftover blueberries was lower than that of cherries. Benjamin only ate oranges and grapes at the party.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Benjamin ate blueberries at the party.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFruit(x) ::: x is a fruit.\nStrawberry(x) ::: x is a strawberry.\nOrange(x) ::: x is an orange.\nBlueberry(x) ::: x is a blueberry.\nGrape(x) ::: x is a grape.\nCherry(x) ::: x is a cherry.\nProvide(x) ::: x is provided.\nWeight(x) ::: x is a weight.\nPopular(x) ::: x is popular.\nParty(x) ::: x is a party.\nBegin(x) ::: x is at the beginning.\nEnd(x) ::: x is at the end.\nEat(x, y) ::: x eats y.\nPremises:\nFruit(strawberry) ∧ Fruit(orange) ∧ Fruit(blueberry) ∧ Fruit(grape) ∧ Fruit(cherry) ::: The party provides five kinds of fruits: strawberry, orange, blueberry, grape, and cherry.\nProvide(strawberry) ∧ Provide(orange) ∧ Provide(blueberry) ∧ Provide(grape) ∧ Provide(cherry) ::: All fruits are provided in the same weight at the beginning of the party.\n∀x (Popular(x) → Lowest(x)) ::: If the fruit had the lowest remaining weight at the end of the party, then it means it was the most popular fruit.\nLowest(strawberry) ::: At the end of the party, strawberries had the lowest remaining weight.\nLower(blueberry, cherry) ::: At the end of the party, the amount of leftover blueberries was lower than that of cherries.\nEat(benjamin, orange) ∧ Eat(benjamin, grape) ::: Benjamin only ate oranges and grapes at the party.\nConclusion:\nEat(benjamin, blueberry) ::: Benjamin ate blueberries at the party.\n------\nProblem:\nThe party provides five kinds of fruits: strawberry, orange, blueberry, grape, and cherry. All fruits are provided in the same weight at the beginning of the party. If the fruit had the lowest remaining weight at the end of the party, then it means it was the most"
    ]
  },
  {
    "id": "FOLIO_train_773",
    "context": "All students who attend in person have registered for the conference. Students either attend the conference in person or remotely. No students from China attend the conference remotely. James attends the conference but he does not attend the conference remotely. Jack attends the conference and he is a student from China.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James attends the conference but not in person.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nStudent(x) ::: x is a student.\nAttend(x, y) ::: x attends y.\nRegister(x, y) ::: x has registered for y.\nInPerson(x) ::: x attends in person.\nRemote(x) ::: x attends remotely.\nChina(x) ::: x is from China.\nPremises:\n∀x (Attend(x, conference) → Register(x, conference)) ::: All students who attend in person have registered for the conference.\n∀x (Student(x) → (Attend(x, conference) ⊕ Remote(x))) ::: Students either attend the conference in person or remotely.\n∀x (China(x) → ¬Remote(x)) ::: No students from China attend the conference remotely.\nAttend(james, conference) ∧ ¬Remote(james) ::: James attends the conference but he does not attend the conference remotely.\nAttend(jack, conference) ∧ Student(jack) ∧ China(jack) ::: Jack attends the conference and he is a student from China.\nConclusion:\nAttend(james, conference) ∧ ¬InPerson(james) ::: James attends the conference but not in person.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffe"
    ]
  },
  {
    "id": "FOLIO_train_774",
    "context": "All students who attend in person have registered for the conference. Students either attend the conference in person or remotely. No students from China attend the conference remotely. James attends the conference but he does not attend the conference remotely. Jack attends the conference and he is a student from China.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jack attends the conference in person.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nStudent(x) ::: x is a student.\nAttend(x) ::: x attends the conference.\nRegister(x) ::: x has registered for the conference.\nInPerson(x) ::: x attends the conference in person.\nRemote(x) ::: x attends the conference remotely.\nChina(x) ::: x is a student from China.\nPremises:\n∀x (Attend(x) → Register(x)) ::: All students who attend in person have registered for the conference.\n∀x (Student(x) → (Attend(x) ⊕ Remote(x))) ::: Students either attend the conference in person or remotely.\n∀x (China(x) → ¬Remote(x)) ::: No students from China attend the conference remotely.\nAttend(james) ∧ ¬Remote(james) ::: James attends the conference but he does not attend the conference remotely.\nAttend(jack) ∧ Student(jack) ∧ China(jack) ::: Jack attends the conference and he is a student from China.\nConclusion:\nInPerson(jack) ::: Jack attends the conference in person.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being add"
    ]
  },
  {
    "id": "FOLIO_train_775",
    "context": "All students who attend in person have registered for the conference. Students either attend the conference in person or remotely. No students from China attend the conference remotely. James attends the conference but he does not attend the conference remotely. Jack attends the conference and he is a student from China.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jack has registered for the conference.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nStudent(x) ::: x is a student.\nAttend(x) ::: x attends the conference.\nRegister(x) ::: x has registered for the conference.\nInPerson(x) ::: x attends the conference in person.\nRemote(x) ::: x attends the conference remotely.\nChina(x) ::: x is a student from China.\nPremises:\n∀x (InPerson(x) → Register(x)) ::: All students who attend in person have registered for the conference.\n∀x (Attend(x) → InPerson(x) ⊕ Remote(x)) ::: Students either attend the conference in person or remotely.\n∀x (China(x) → ¬Remote(x)) ::: No students from China attend the conference remotely.\nAttend(james) ∧ ¬Remote(james) ::: James attends the conference but he does not attend the conference remotely.\nAttend(jack) ∧ Student(jack) ∧ China(jack) ::: Jack attends the conference and he is a student from China.\nConclusion:\nRegister(jack) ::: Jack has registered for the conference.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to"
    ]
  },
  {
    "id": "FOLIO_train_776",
    "context": "David Ha'ivri is a political strategist. If you are born in Israel to at least one Israeli parent, then you receive citizenship at birth. David Ha'ivri emigrated to the United States from Israel, where he was born to Israeli parents. Several Zionist leaders have been elected to the Shomron Regional Municipal council. David Ha'ivri is a Zionist leader.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? David Ha'ivri is an Israeli citizen.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBorn(x, y) ::: x is born in y.\nIsraeli(x) ::: x is an Israeli person.\nParent(x, y) ::: x is a parent of y.\nCitizen(x, y) ::: x is a citizen of y.\nEmigrate(x, y) ::: x emigrated to y.\nLeader(x) ::: x is a leader.\nZionist(x) ::: x is a Zionist.\nElected(x) ::: x is elected.\nCouncil(x) ::: x is a council.\nPremises:\n∀x ∀y (Born(x, y) ∧ Parent(z, x) ∧ Israeli(z)) → Citizen(x, israel) ::: If you are born in Israel to at least one Israeli parent, then you receive citizenship at birth.\nEmigrate(davidHaivri, unitedStates) ∧ Born(davidHaivri, israel) ∧ Parent(israeliParent, davidHaivri) ::: David Ha'ivri emigrated to the United States from Israel, where he was born to Israeli parents.\n∃x (Leader(x) ∧ Zionist(x) ∧ Elected(x, council)) ::: Several Zionist leaders have been elected to the Shomron Regional Municipal council.\nLeader(davidHaivri) ∧ Zionist(davidHaivri) ::: David Ha'ivri is a Zionist leader.\nConclusion:\nCitizen(davidHaivri, israel) ::: David Ha'ivri is an Israeli citizen.\n------\nProblem:\nThe 2018 FIFA World Cup was the 21st FIFA World Cup, an international football tournament contested by the men's national teams of the member associations of FIFA once every four years. The 2018 FIFA World Cup was held in Russia from 14 June to 15 July 2018. The 2018 FIFA World Cup was the first World Cup to be held in Eastern Europe, and the 11th time that it had been held in Europe. At an estimated cost of over $14.2 billion, it was the most expensive World Cup ever.\nQuestion:\nBased on the above information, is the following statement"
    ]
  },
  {
    "id": "FOLIO_train_777",
    "context": "David Ha'ivri is a political strategist. If you are born in Israel to at least one Israeli parent, then you receive citizenship at birth. David Ha'ivri emigrated to the United States from Israel, where he was born to Israeli parents. Several Zionist leaders have been elected to the Shomron Regional Municipal council. David Ha'ivri is a Zionist leader.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? David Ha'ivri is a United States citizen.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBorn(x, y) ::: x is born in y.\nIsraeli(x) ::: x is an Israeli person.\nParent(x, y) ::: x is a parent of y.\nCitizen(x, y) ::: x is a citizen of y.\nEmigrate(x, y) ::: x emigrated to y.\nLeader(x) ::: x is a leader.\nZionist(x) ::: x is a Zionist.\nElected(x) ::: x is elected.\nCouncil(x) ::: x is a council.\nPremises:\n∀x ∀y (Born(x, y) ∧ Israeli(y) ∧ Parent(y, x)) → Citizen(x, israel) ::: If you are born in Israel to at least one Israeli parent, then you receive citizenship at birth.\nEmigrate(davidHaivri, unitedStates) ::: David Ha'ivri emigrated to the United States.\nBorn(davidHaivri, israel) ∧ Israeli(israel) ∧ Parent(israel, davidHaivri) ::: David Ha'ivri was born in Israel to Israeli parents.\n∃x (Leader(x) ∧ Zionist(x) ∧ Elected(x, council)) ::: Several Zionist leaders have been elected to the Shomron Regional Municipal council.\nLeader(davidHaivri) ∧ Zionist(davidHaivri) ::: David Ha'ivri is a Zionist leader.\nConclusion:\nCitizen(davidHaivri, unitedStates) ::: David Ha'ivri is a United States citizen.\n------\nProblem:\nThe United States is a country. The United States is a country in North America. The United States is a country in the Western Hemisphere. The United States is a country in the Americas. The United States is a country in the New World. The United States is a country in the Western Hemisphere.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The United States is a country in the Americas.\nBased on the above information, is the following statement true, false, or uncertain? The United States is a country in the New World.\nBased on the above information,"
    ]
  },
  {
    "id": "FOLIO_train_778",
    "context": "David Ha'ivri is a political strategist. If you are born in Israel to at least one Israeli parent, then you receive citizenship at birth. David Ha'ivri emigrated to the United States from Israel, where he was born to Israeli parents. Several Zionist leaders have been elected to the Shomron Regional Municipal council. David Ha'ivri is a Zionist leader.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? David Ha'ivri has been elected to the Shomron Regional Municipal council.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBorn(x, y) ::: x was born in y.\nIsraeli(x) ::: x is an Israeli person.\nParent(x, y) ::: x is a parent of y.\nCitizen(x, y) ::: x is a citizen of y.\nEmigrate(x, y) ::: x emigrated to y.\nLeader(x) ::: x is a leader.\nZionist(x) ::: x is a Zionist.\nElected(x) ::: x was elected.\nPremises:\nPoliticalStrategist(davidHaivri) ::: David Ha'ivri is a political strategist.\n∀x ∀y (Born(x, y) ∧ Israeli(y) ∧ Parent(y, x)) → Citizen(x, israel) ::: If you are born in Israel to at least one Israeli parent, then you receive citizenship at birth.\nBorn(davidHaivri, israel) ∧ Israeli(israel) ∧ Parent(israel, davidHaivri) ∧ Emigrate(davidHaivri, unitedStates) ::: David Ha'ivri emigrated to the United States from Israel, where he was born to Israeli parents.\n∃x (Leader(x) ∧ Zionist(x) ∧ Elected(x, shomronRegionalMunicipalCouncil)) ::: Several Zionist leaders have been elected to the Shomron Regional Municipal council.\nZionistLeader(davidHaivri) ::: David Ha'ivri is a Zionist leader.\nConclusion:\nElected(davidHaivri, shomronRegionalMunicipalCouncil) ::: David Ha'ivri has been elected to the Shomron Regional Municipal council.\n------\nProblem:\nThe 1996 United States presidential election was the 53rd quadrennial presidential election. The 1996 United States presidential election was held on Tuesday, November 5, 1996. The 1996 United States presidential election was the first presidential election in which the winner of the popular vote did not win the electoral vote. The 1996 United States presidential election was the first presidential election in which the winner of the popular vote did not win the electoral vote"
    ]
  },
  {
    "id": "FOLIO_train_779",
    "context": "Mary has the flu. Flu and influenza are the same disease. Susan doesn't have influenza.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Either Mary or Susan has influenza.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFlu(x) ::: x has the flu.\nInfluenza(x) ::: x has influenza.\nPremises:\nFlu(mary) ::: Mary has the flu.\n∀x (Flu(x) ↔ Influenza(x)) ::: Flu and influenza are the same disease.\n¬Influenza(susan) ::: Susan doesn't have influenza.\nConclusion:\n∃x (Flu(x) ∨ Influenza(x)) ::: Either Mary or Susan has influenza.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.\n###\nPredicates:\nDependent(x) ::: x is a person dependent on caffeine.\nDrinks(x) ::: x regularly drinks coffee.\nJokes(x) ::: x jokes about being addicted to caffeine.\nUnaware(x) ::: x is unaware that caffeine is a drug.\nStudent(x) ::: x is a student.\nPremises:\n∀x (Drinks(x) → Dependent(x)) ::: All people who regularly drink coffee are dependent on caffeine.\n∀x (Drinks(x)"
    ]
  },
  {
    "id": "FOLIO_train_780",
    "context": "James Cocks was a British lawyer. James Cocks was a Whig politician who sat in the House of Commons. A British is a European. Any lawyer is familiar with laws. Some Whigs speak French.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? No lawyer ever sat in the House of Commons.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBritish(x) ::: x is a British person.\nEuropean(x) ::: x is a European person.\nLawyer(x) ::: x is a lawyer.\nFamiliar(x, y) ::: x is familiar with y.\nWhig(x) ::: x is a Whig politician.\nSit(x, y) ::: x sits in y.\nHouseOfCommons(x) ::: x is the House of Commons.\nSpeak(x, y) ::: x speaks y.\nFrench(x) ::: x is French.\nPremises:\nBritish(jamesCocks) ∧ Lawyer(jamesCocks) ∧ Whig(jamesCocks) ∧ Sit(jamesCocks, HouseOfCommons) ::: James Cocks was a British lawyer. James Cocks was a Whig politician who sat in the House of Commons.\n∀x (British(x) → European(x)) ::: A British is a European.\n∀x (Lawyer(x) → Familiar(x, laws)) ::: Any lawyer is familiar with laws.\n∃x (Whig(x) ∧ Speak(x, French)) ::: Some Whigs speak French.\nConclusion:\n¬∃x (Lawyer(x) ∧ Sit(x, HouseOfCommons)) ::: No lawyer ever sat in the House of Commons.\n------"
    ]
  },
  {
    "id": "FOLIO_train_781",
    "context": "James Cocks was a British lawyer. James Cocks was a Whig politician who sat in the House of Commons. A British is a European. Any lawyer is familiar with laws. Some Whigs speak French.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Some European is familiar with laws.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBritish(x) ::: x is a British person.\nEuropean(x) ::: x is a European person.\nLawyer(x) ::: x is a lawyer.\nFamiliar(x, y) ::: x is familiar with y.\nWhig(x) ::: x is a Whig politician.\nPolitician(x) ::: x is a politician.\nSit(x, y) ::: x sits in y.\nHouseOfCommons(x) ::: x is the House of Commons.\nSpeak(x, y) ::: x speaks y.\nFrench(x) ::: x is French.\nPremises:\nBritish(jamesCocks) ∧ Lawyer(jamesCocks) ∧ Whig(jamesCocks) ∧ Sit(jamesCocks, HouseOfCommons) ::: James Cocks was a British lawyer. James Cocks was a Whig politician who sat in the House of Commons.\n∀x (European(x) → British(x)) ::: A British is a European.\n∀x (Lawyer(x) → Familiar(x, laws)) ::: Any lawyer is familiar with laws.\n∃x (Whig(x) ∧ Speak(x, French)) ::: Some Whigs speak French.\nConclusion:\n∃x (European(x) ∧ Familiar(x, laws)) ::: Some European is familiar"
    ]
  },
  {
    "id": "FOLIO_train_782",
    "context": "James Cocks was a British lawyer. James Cocks was a Whig politician who sat in the House of Commons. A British is a European. Any lawyer is familiar with laws. Some Whigs speak French.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James Cocks speaks French.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBritish(x) ::: x is a British person.\nEuropean(x) ::: x is a European.\nLawyer(x) ::: x is a lawyer.\nFamiliar(x, y) ::: x is familiar with y.\nWhig(x) ::: x is a Whig politician.\nSpeak(x, y) ::: x speaks y.\nPolitician(x) ::: x is a politician.\nSit(x, y) ::: x sits in y.\nHouseOfCommons(x) ::: x is the House of Commons.\nPremises:\nBritish(jamesCocks) ::: James Cocks was a British lawyer.\nBritish(jamesCocks) ∧ Whig(jamesCocks) ∧ Sit(jamesCocks, HouseOfCommons) ::: James Cocks was a Whig politician who sat in the House of Commons.\nEuropean(x) ::: A British is a European.\n∀x (Lawyer(x) → Familiar(x, laws)) ::: Any lawyer is familiar with laws.\n∃x (Whig(x) ∧ Speak(x, french)) ::: Some Whigs speak French.\nConclusion:\nSpeak(jamesCocks, french) ::: James Cocks speaks French.\n------\nProblem:\nThe 1996 Summer Olympics, officially known as the Games of the XXVI Olympiad, was"
    ]
  },
  {
    "id": "FOLIO_train_783",
    "context": "Beasts of Prey is either a fantasy novel or a science fiction novel. Science fiction novels are not about mythological creatures Beasts of Prey Is about a creature known as the Shetani. Shetanis are mythological.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Beasts of prey is a fantasy novel.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBeastsOfPrey(x) ::: x is Beasts of Prey.\nFantasyNovel(x) ::: x is a fantasy novel.\nScienceFictionNovel(x) ::: x is a science fiction novel.\nAbout(x, y) ::: x is about y.\nMythological(x) ::: x is a mythological creature.\nShetani(x) ::: x is a Shetani.\nPremises:\nBeastsOfPrey(beastsOfPrey) ::: Beasts of Prey is either a fantasy novel or a science fiction novel.\n¬ScienceFictionNovel(beastsOfPrey) → FantasyNovel(beastsOfPrey) ::: Science fiction novels are not about mythological creatures Beasts of Prey Is about a creature known as the Shetani.\nShetani(shetani) ∧ Mythological(shetani) ::: Shetanis are mythological.\nConclusion:\nFantasyNovel(beastsOfPrey) ::: Beasts of prey is a fantasy novel.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is"
    ]
  },
  {
    "id": "FOLIO_train_784",
    "context": "Beasts of Prey is either a fantasy novel or a science fiction novel. Science fiction novels are not about mythological creatures Beasts of Prey Is about a creature known as the Shetani. Shetanis are mythological.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Beasts of prey isn't a science fiction novel.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBeastsOfPrey(x) ::: x is Beasts of Prey.\nFantasyNovel(x) ::: x is a fantasy novel.\nScienceFictionNovel(x) ::: x is a science fiction novel.\nAbout(x, y) ::: x is about y.\nMythological(x) ::: x is a mythological creature.\nShetani(x) ::: x is a Shetani.\nPremises:\nBeastsOfPrey(beastsOfPrey) ::: Beasts of Prey is either a fantasy novel or a science fiction novel.\n∀x (ScienceFictionNovel(x) → ¬About(x, mythological)) ::: Science fiction novels are not about mythological creatures\nBeastsOfPrey(beastsOfPrey) ∧ About(beastsOfPrey, shetani) ::: Beasts of Prey Is about a creature known as the Shetani.\nShetani(shetani) ∧ Mythological(shetani) ::: Shetanis are mythological.\nConclusion:\n¬ScienceFictionNovel(beastsOfPrey) ::: Beasts of prey isn't a science fiction novel.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffe"
    ]
  },
  {
    "id": "FOLIO_train_785",
    "context": "Beasts of Prey is either a fantasy novel or a science fiction novel. Science fiction novels are not about mythological creatures Beasts of Prey Is about a creature known as the Shetani. Shetanis are mythological.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A shetani is either mythological or a creature.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBeastOfPrey(x) ::: x is Beasts of Prey.\nFantasyNovel(x) ::: x is a fantasy novel.\nScienceFictionNovel(x) ::: x is a science fiction novel.\nMythological(x) ::: x is mythological.\nAbout(x, y) ::: x is about y.\nShetani(x) ::: x is a shetani.\nPremises:\nBeastOfPrey(beastOfPrey) ∧ (FantasyNovel(beastOfPrey) ⊕ ScienceFictionNovel(beastOfPrey)) ::: Beasts of Prey is either a fantasy novel or a science fiction novel.\n∀x (ScienceFictionNovel(x) → ¬About(x, mythological)) ::: Science fiction novels are not about mythological creatures.\nBeastOfPrey(beastOfPrey) ∧ About(beastOfPrey, shetani) ::: Beasts of Prey Is about a creature known as the Shetani.\nShetani(shetani) ∧ Mythological(shetani) ::: Shetanis are mythological.\nConclusion:\n∀x (Shetani(x) → (Mythological(x) ⊕ Creature(x))) ::: A shetani is either mythological or a creature.\n------\nProblem:\nAll"
    ]
  },
  {
    "id": "FOLIO_train_786",
    "context": "Odell is an English surname originating in Odell, Bedfordshire. In some families Odell is spelled O'Dell, in a mistaken Irish adaptation. Notable people with the surname include Amy Odell, Jack Odell, and Mats Odell. Amy Odell is a British singer-songwriter. Jack Odell is an English toy inventor.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jack Odell is a notable people.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEnglish(x) ::: x is an English surname.\nOrigin(x, y) ::: x originates in y.\nSpelled(x, y) ::: x is spelled y.\nIrish(x) ::: x is an Irish surname.\nAdaptation(x, y) ::: x is a mistaken Irish adaptation of y.\nNotable(x) ::: x is a notable person.\nSinger(x) ::: x is a singer.\nSongwriter(x) ::: x is a songwriter.\nInventor(x) ::: x is an inventor.\nPremises:\nEnglish(odell) ∧ Origin(odell, odellBedfordshire) ::: Odell is an English surname originating in Odell, Bedfordshire.\n∀x (Spelled(x, odell) → English(x)) ::: In some families Odell is spelled O'Dell, in a mistaken Irish adaptation.\nNotable(amyOdell) ∧ Singer(amyOdell) ∧ Songwriter(amyOdell) ::: Notable people with the surname include Amy Odell, Jack Odell, and Mats Odell.\nNotable(jackOdell) ∧ Inventor(jackOdell) ::: Amy Odell is a British singer-songwriter.\nNotable(matsOdell) ::: Jack Odell is an English toy inventor.\nConclusion:\nNot"
    ]
  },
  {
    "id": "FOLIO_train_787",
    "context": "Odell is an English surname originating in Odell, Bedfordshire. In some families Odell is spelled O'Dell, in a mistaken Irish adaptation. Notable people with the surname include Amy Odell, Jack Odell, and Mats Odell. Amy Odell is a British singer-songwriter. Jack Odell is an English toy inventor.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Odell is Amy Odell's surname.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSurname(x, y) ::: x is y's surname.\nEnglish(x) ::: x is English.\nOrigin(x, y) ::: x originates in y.\nSpelled(x, y) ::: x is spelled y.\nIrish(x) ::: x is Irish.\nAdaptation(x, y) ::: x is a mistaken Irish adaptation of y.\nNotable(x) ::: x is notable.\nPerson(x) ::: x is a person.\nSinger(x) ::: x is a singer.\nSongwriter(x) ::: x is a songwriter.\nToyInventor(x) ::: x is a toy inventor.\nPremises:\nSurname(odell, amy) ::: Odell is Amy Odell's surname.\nEnglish(odell) ::: Odell is English.\nOrigin(odell, odell) ::: Odell originates in Odell.\nSpelled(odell, o'dell) ::: Odell is spelled O'Dell.\nIrish(o'dell) ::: O'Dell is Irish.\nAdaptation(o'dell, odell) ::: O'Dell is a mistaken Irish adaptation of Odell.\nNotable(amy) ::: Amy is notable.\nPerson(amy) ::: Amy is a person.\nSinger(amy) ::: Amy is a singer.\nSongwriter(amy) ::: Amy is a song"
    ]
  },
  {
    "id": "FOLIO_train_788",
    "context": "Odell is an English surname originating in Odell, Bedfordshire. In some families Odell is spelled O'Dell, in a mistaken Irish adaptation. Notable people with the surname include Amy Odell, Jack Odell, and Mats Odell. Amy Odell is a British singer-songwriter. Jack Odell is an English toy inventor.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Amy Odell is an English toy inventor.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSurname(x) ::: x is a surname.\nOrigin(x, y) ::: x originates in y.\nSpelled(x, y) ::: x is spelled y.\nAdaptation(x, y) ::: x is an adaptation of y.\nNotable(x) ::: x is notable.\nPerson(x) ::: x is a person.\nSinger(x) ::: x is a singer.\nSongwriter(x) ::: x is a songwriter.\nToyInventor(x) ::: x is a toy inventor.\nPremises:\nSurname(odell) ::: Odell is an English surname.\nOrigin(odell, odell) ::: Odell originates in Odell, Bedfordshire.\nSpelled(odell, odell) ::: In some families Odell is spelled O'Dell.\nAdaptation(odell, odell) ::: In a mistaken Irish adaptation.\nNotable(odell) ::: Notable people with the surname include Amy Odell, Jack Odell, and Mats Odell.\nPerson(amy) ::: Amy Odell is a British singer-songwriter.\nPerson(jack) ::: Jack Odell is an English toy inventor.\nPerson(mats) ::: Mats Odell is a Swedish politician.\nSinger(amy) ::: Amy Odell is a British singer-songwriter.\nSongwriter(amy) ::: Amy Odell is a British song"
    ]
  },
  {
    "id": "FOLIO_train_789",
    "context": "Odell is an English surname originating in Odell, Bedfordshire. In some families Odell is spelled O'Dell, in a mistaken Irish adaptation. Notable people with the surname include Amy Odell, Jack Odell, and Mats Odell. Amy Odell is a British singer-songwriter. Jack Odell is an English toy inventor.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Amy Odell is also Amy O'dell.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSurname(x) ::: x is a surname.\nOrigin(x, y) ::: x originates in y.\nSpelled(x, y) ::: x is spelled y.\nAdaptation(x, y) ::: x is an adaptation of y.\nNotable(x) ::: x is notable.\nPerson(x) ::: x is a person.\nSinger(x) ::: x is a singer.\nSongwriter(x) ::: x is a songwriter.\nInventor(x) ::: x is an inventor.\nPremises:\nSurname(odell) ::: Odell is an English surname.\nOrigin(odell, odellBedfordshire) ::: Odell originates in Odell, Bedfordshire.\nSpelled(odell, o'dell) ::: In some families Odell is spelled O'Dell.\nAdaptation(odell, o'dell) ::: In a mistaken Irish adaptation.\nNotable(amyOdell) ::: Notable people with the surname include Amy Odell.\nNotable(jackOdell) ::: Notable people with the surname include Jack Odell.\nNotable(matsOdell) ::: Notable people with the surname include Mats Odell.\nPerson(amyOdell) ::: Amy Odell is a British singer-songwriter.\nPerson(jackOdell) ::: Jack Odell is an English toy inventor.\nS"
    ]
  },
  {
    "id": "FOLIO_train_790",
    "context": "If you go somewhere by train, you will not lose time. If you go somewhere by car and meet traffic jam, you will lose time. If you lose time, you will be late for work. Mary can get from New Haven to New York City either by train or car. Mary is late for work.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mary gets from New Haven to New York City by train.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGo(x, y, z) ::: x goes from y to z.\nLoseTime(x) ::: x loses time.\nLate(x) ::: x is late for work.\nTrain(x) ::: x is a train.\nCar(x) ::: x is a car.\nTrafficJam(x) ::: x is a traffic jam.\nPremises:\n∀x ∀y ∀z (Go(x, y, z) ∧ Train(x) → ¬LoseTime(x)) ::: If you go somewhere by train, you will not lose time.\n∀x ∀y ∀z (Go(x, y, z) ∧ Car(x) ∧ TrafficJam(x) → LoseTime(x)) ::: If you go somewhere by car and meet traffic jam, you will lose time.\n∀x (LoseTime(x) → Late(x)) ::: If you lose time, you will be late for work.\nGo(mary, newHaven, newYorkCity) ∧ (Train(x) ∨ Car(x)) ::: Mary can get from New Haven to New York City either by train or car.\nLate(mary) ::: Mary is late for work.\nConclusion:\nGo(mary, newHaven, newYorkCity) ∧ Train(x) ::: Mary gets from New Haven to New York City by train.\n------"
    ]
  },
  {
    "id": "FOLIO_train_791",
    "context": "If you go somewhere by train, you will not lose time. If you go somewhere by car and meet traffic jam, you will lose time. If you lose time, you will be late for work. Mary can get from New Haven to New York City either by train or car. Mary is late for work.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mary gets from New Haven to New York City by car.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGo(x, y, z) ::: x goes from y to z.\nLoseTime(x) ::: x loses time.\nBeLate(x) ::: x is late for work.\nPremises:\n∀x (Go(x, y, z) ∧ z = train → ¬LoseTime(x)) ::: If you go somewhere by train, you will not lose time.\n∀x (Go(x, y, z) ∧ z = car ∧ MeetTrafficJam(x) → LoseTime(x)) ::: If you go somewhere by car and meet traffic jam, you will lose time.\n∀x (LoseTime(x) → BeLate(x)) ::: If you lose time, you will be late for work.\nGo(mary, newHaven, newYorkCity) ∧ (Go(mary, newHaven, newYorkCity, car) ⊕ Go(mary, newHaven, newYorkCity, train)) ::: Mary can get from New Haven to New York City either by train or car.\nBeLate(mary) ::: Mary is late for work.\nConclusion:\nGo(mary, newHaven, newYorkCity, car) ::: Mary gets from New Haven to New York City by car.\n------\nProblem:\nIf you are a student, you are a person. If you are a person, you are a human. If you are a human, you are a mammal. If you are a"
    ]
  },
  {
    "id": "FOLIO_train_792",
    "context": "If you go somewhere by train, you will not lose time. If you go somewhere by car and meet traffic jam, you will lose time. If you lose time, you will be late for work. Mary can get from New Haven to New York City either by train or car. Mary is late for work.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mary meets traffic jam.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGo(x, y, z) ::: x goes from y to z.\nLoseTime(x) ::: x loses time.\nLate(x) ::: x is late for work.\nMeetTrafficJam(x) ::: x meets traffic jam.\nPremises:\n∀x (Go(x, y, z) ∧ Train(z) → ¬LoseTime(x)) ::: If you go somewhere by train, you will not lose time.\n∀x (Go(x, y, z) ∧ Car(z) ∧ MeetTrafficJam(x) → LoseTime(x)) ::: If you go somewhere by car and meet traffic jam, you will lose time.\n∀x (LoseTime(x) → Late(x)) ::: If you lose time, you will be late for work.\nGo(mary, newHaven, newYorkCity) ∧ (Train(newYorkCity) ⊕ Car(newYorkCity)) ::: Mary can get from New Haven to New York City either by train or car.\nLate(mary) ::: Mary is late for work.\nConclusion:\nMeetTrafficJam(mary) ::: Mary meets traffic jam.\n------\nProblem:\nIf you are a student, you are a person. If you are a person, you are a human. If you are a human, you are a mammal. If you are a mammal, you are an animal. If you are an animal"
    ]
  },
  {
    "id": "FOLIO_train_793",
    "context": "If a person is hungry, the person is uncomfortable. If a person is uncomfortable, the person is unhappy.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If a person is not hungry, the person is unhappy.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nHungry(x) ::: x is hungry.\nUncomfortable(x) ::: x is uncomfortable.\nUnhappy(x) ::: x is unhappy.\nPremises:\n∀x (Hungry(x) → Uncomfortable(x)) ::: If a person is hungry, the person is uncomfortable.\n∀x (Uncomfortable(x) → Unhappy(x)) ::: If a person is uncomfortable, the person is unhappy.\nConclusion:\n∀x (¬Hungry(x) → Unhappy(x)) ::: If a person is not hungry, the person is unhappy.\n------\nProblem:\nIf a person is hungry, the person is uncomfortable. If a person is uncomfortable, the person is unhappy.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? If a person is not hungry, the person is not unhappy.\n###\nPredicates:\nHungry(x) ::: x is hungry.\nUncomfortable(x) ::: x is uncomfortable.\nUnhappy(x) ::: x is unhappy.\nPremises:\n∀x (Hungry(x) → Uncomfortable(x)) ::: If a person is hungry, the person is uncomfortable.\n∀x (Uncomfortable(x) → Unhappy(x)) ::: If a person is uncomfortable, the person is unhappy.\nConclusion:\n∀x (¬Hungry(x) → ¬Unhappy(x)) ::: If a"
    ]
  },
  {
    "id": "FOLIO_train_794",
    "context": "Tipped employees do not get a guaranteed minimum wage. If a person is a white-collar worker, they will get a guaranteed minimum wage (All white-collar workers get a guaranteed minimum wage). All lawyers are white-collar workers. Every advocate is a lawyer. Mary is not a lawyer or a tipped employee.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mary is a white-collar worker.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTipped(x) ::: x is a tipped employee.\nGuaranteedMinimumWage(x) ::: x gets a guaranteed minimum wage.\nWhiteCollar(x) ::: x is a white-collar worker.\nLawyer(x) ::: x is a lawyer.\nAdvocate(x) ::: x is an advocate.\nMary(x) ::: x is Mary.\nPremises:\n∀x (Tipped(x) → ¬GuaranteedMinimumWage(x)) ::: Tipped employees do not get a guaranteed minimum wage.\n∀x (WhiteCollar(x) → GuaranteedMinimumWage(x)) ::: If a person is a white-collar worker, they will get a guaranteed minimum wage.\nLawyer(x) → WhiteCollar(x) ::: All lawyers are white-collar workers.\nAdvocate(x) → Lawyer(x) ::: Every advocate is a lawyer.\n¬(Lawyer(mary) ∨ Tipped(mary)) ::: Mary is not a lawyer or a tipped employee.\nConclusion:\nWhiteCollar(mary) ::: Mary is a white-collar worker.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or"
    ]
  },
  {
    "id": "FOLIO_train_795",
    "context": "Tipped employees do not get a guaranteed minimum wage. If a person is a white-collar worker, they will get a guaranteed minimum wage (All white-collar workers get a guaranteed minimum wage). All lawyers are white-collar workers. Every advocate is a lawyer. Mary is not a lawyer or a tipped employee.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mary is an advocate.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTipped(x) ::: x is a tipped employee.\nMinimumWage(x) ::: x gets a guaranteed minimum wage.\nWhiteCollar(x) ::: x is a white-collar worker.\nLawyer(x) ::: x is a lawyer.\nAdvocate(x) ::: x is an advocate.\nMary(x) ::: x is Mary.\nPremises:\n∀x (Tipped(x) → ¬MinimumWage(x)) ::: Tipped employees do not get a guaranteed minimum wage.\n∀x (WhiteCollar(x) → MinimumWage(x)) ::: If a person is a white-collar worker, they will get a guaranteed minimum wage.\nLawyer(x) → WhiteCollar(x) ::: All lawyers are white-collar workers.\n∀x (Advocate(x) → Lawyer(x)) ::: Every advocate is a lawyer.\n¬(Lawyer(mary) ∨ Tipped(mary)) ::: Mary is not a lawyer or a tipped employee.\nConclusion:\nAdvocate(mary) ::: Mary is an advocate.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffe"
    ]
  },
  {
    "id": "FOLIO_train_796",
    "context": "Tipped employees do not get a guaranteed minimum wage. If a person is a white-collar worker, they will get a guaranteed minimum wage (All white-collar workers get a guaranteed minimum wage). All lawyers are white-collar workers. Every advocate is a lawyer. Mary is not a lawyer or a tipped employee.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mary is not an advocate.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTipped(x) ::: x is a tipped employee.\nGuaranteedMinimumWage(x) ::: x gets a guaranteed minimum wage.\nWhiteCollar(x) ::: x is a white-collar worker.\nLawyer(x) ::: x is a lawyer.\nAdvocate(x) ::: x is an advocate.\nPremises:\n∀x (Tipped(x) → ¬GuaranteedMinimumWage(x)) ::: Tipped employees do not get a guaranteed minimum wage.\n∀x (WhiteCollar(x) → GuaranteedMinimumWage(x)) ::: If a person is a white-collar worker, they will get a guaranteed minimum wage.\n∀x (Lawyer(x) → WhiteCollar(x)) ::: All lawyers are white-collar workers.\n∀x (Advocate(x) → Lawyer(x)) ::: Every advocate is a lawyer.\n¬(Lawyer(mary) ∨ Tipped(mary)) ::: Mary is not a lawyer or a tipped employee.\nConclusion:\n¬Advocate(mary) ::: Mary is not an advocate.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor un"
    ]
  },
  {
    "id": "FOLIO_train_797",
    "context": "Tipped employees do not get a guaranteed minimum wage. If a person is a white-collar worker, they will get a guaranteed minimum wage (All white-collar workers get a guaranteed minimum wage). All lawyers are white-collar workers. Every advocate is a lawyer. Mary is not a lawyer or a tipped employee.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mary is either an advocate or a tipped employee.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTipped(x) ::: x is a tipped employee.\nMinimumWage(x) ::: x gets a guaranteed minimum wage.\nWhiteCollar(x) ::: x is a white-collar worker.\nLawyer(x) ::: x is a lawyer.\nAdvocate(x) ::: x is an advocate.\nPremises:\n∀x (Tipped(x) → ¬MinimumWage(x)) ::: Tipped employees do not get a guaranteed minimum wage.\n∀x (WhiteCollar(x) → MinimumWage(x)) ::: If a person is a white-collar worker, they will get a guaranteed minimum wage.\n∀x (Lawyer(x) → WhiteCollar(x)) ::: All lawyers are white-collar workers.\n∀x (Advocate(x) → Lawyer(x)) ::: Every advocate is a lawyer.\n¬(Lawyer(mary) ∨ Tipped(mary)) ::: Mary is not a lawyer or a tipped employee.\nConclusion:\nAdvocate(mary) ∨ Tipped(mary) ::: Mary is either an advocate or a tipped employee.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither"
    ]
  },
  {
    "id": "FOLIO_train_798",
    "context": "Tipped employees do not get a guaranteed minimum wage. If a person is a white-collar worker, they will get a guaranteed minimum wage (All white-collar workers get a guaranteed minimum wage). All lawyers are white-collar workers. Every advocate is a lawyer. Mary is not a lawyer or a tipped employee.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Mary is not an advocate and gets a guaranteed minimum wage, she is not a tipped employee.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTipped(x) ::: x is a tipped employee.\nGuaranteedMinimumWage(x) ::: x gets a guaranteed minimum wage.\nWhiteCollar(x) ::: x is a white-collar worker.\nLawyer(x) ::: x is a lawyer.\nAdvocate(x) ::: x is an advocate.\nMary(x) ::: x is Mary.\nPremises:\n∀x (Tipped(x) → ¬GuaranteedMinimumWage(x)) ::: Tipped employees do not get a guaranteed minimum wage.\n∀x (WhiteCollar(x) → GuaranteedMinimumWage(x)) ::: If a person is a white-collar worker, they will get a guaranteed minimum wage.\n∀x (Lawyer(x) → WhiteCollar(x)) ::: All lawyers are white-collar workers.\n∀x (Advocate(x) → Lawyer(x)) ::: Every advocate is a lawyer.\n¬(Lawyer(mary) ∨ Tipped(mary)) ::: Mary is not a lawyer or a tipped employee.\nConclusion:\n(¬Advocate(mary) ∧ GuaranteedMinimumWage(mary)) → ¬Tipped(mary) ::: If Mary is not an advocate and gets a guaranteed minimum wage, she is not a tipped employee.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to"
    ]
  },
  {
    "id": "FOLIO_train_799",
    "context": "Tipped employees do not get a guaranteed minimum wage. If a person is a white-collar worker, they will get a guaranteed minimum wage (All white-collar workers get a guaranteed minimum wage). All lawyers are white-collar workers. Every advocate is a lawyer. Mary is not a lawyer or a tipped employee.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Mary is either an advocate or a tipped employee, she is an advocate.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTipped(x) ::: x is a tipped employee.\nGuaranteedMinimumWage(x) ::: x gets a guaranteed minimum wage.\nWhiteCollar(x) ::: x is a white-collar worker.\nLawyer(x) ::: x is a lawyer.\nAdvocate(x) ::: x is an advocate.\nPremises:\n∀x (Tipped(x) → ¬GuaranteedMinimumWage(x)) ::: Tipped employees do not get a guaranteed minimum wage.\n∀x (WhiteCollar(x) → GuaranteedMinimumWage(x)) ::: If a person is a white-collar worker, they will get a guaranteed minimum wage.\n∀x (Lawyer(x) → WhiteCollar(x)) ::: All lawyers are white-collar workers.\n∀x (Advocate(x) → Lawyer(x)) ::: Every advocate is a lawyer.\n¬(Lawyer(mary) ∨ Tipped(mary)) ::: Mary is not a lawyer or a tipped employee.\nConclusion:\n(Advocate(mary) ∨ Tipped(mary)) → Advocate(mary) ::: If Mary is either an advocate or a tipped employee, she is an advocate.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is"
    ]
  },
  {
    "id": "FOLIO_train_800",
    "context": "Asa Hoffmann was born in New York City. Asa Hoffman lives in Manhattan. Asa Hoffman is a chess player. Some chess players are grandmasters. People born and living in New York City are New Yorkers. People liviing in Manhattan live in New York City.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Asa Hoffmann is a New Yorkers.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBorn(x, y) ::: x was born in y.\nLives(x, y) ::: x lives in y.\nChessPlayer(x) ::: x is a chess player.\nGrandmaster(x) ::: x is a grandmaster.\nNewYorker(x) ::: x is a New Yorker.\nManhattan(x) ::: x is Manhattan.\nPremises:\nBorn(asaHoffmann, newYorkCity) ::: Asa Hoffmann was born in New York City.\nLives(asaHoffmann, manhattan) ::: Asa Hoffman lives in Manhattan.\nChessPlayer(asaHoffmann) ::: Asa Hoffman is a chess player.\n∃x (ChessPlayer(x) ∧ Grandmaster(x)) ::: Some chess players are grandmasters.\nNewYorker(x) ↔ (Born(x, newYorkCity) ∧ Lives(x, newYorkCity)) ::: People born and living in New York City are New Yorkers.\nLives(x, manhattan) → Lives(x, newYorkCity) ::: People liviing in Manhattan live in New York City.\nConclusion:\nNewYorker(asaHoffmann) ::: Asa Hoffmann is a New Yorkers.\n------"
    ]
  },
  {
    "id": "FOLIO_train_801",
    "context": "Asa Hoffmann was born in New York City. Asa Hoffman lives in Manhattan. Asa Hoffman is a chess player. Some chess players are grandmasters. People born and living in New York City are New Yorkers. People liviing in Manhattan live in New York City.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Asa Hoffmann is a grandmaster.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBorn(x, y) ::: x was born in y.\nLives(x, y) ::: x lives in y.\nChessPlayer(x) ::: x is a chess player.\nGrandmaster(x) ::: x is a grandmaster.\nNewYorker(x) ::: x is a New Yorker.\nManhattan(x) ::: x is Manhattan.\nPremises:\nBorn(asaHoffmann, newYorkCity) ::: Asa Hoffmann was born in New York City.\nLives(asaHoffmann, manhattan) ::: Asa Hoffman lives in Manhattan.\nChessPlayer(asaHoffmann) ::: Asa Hoffman is a chess player.\n∃x (ChessPlayer(x) ∧ Grandmaster(x)) ::: Some chess players are grandmasters.\nNewYorker(x) ↔ (Born(x, newYorkCity) ∧ Lives(x, newYorkCity)) ::: People born and living in New York City are New Yorkers.\nLives(x, manhattan) → Lives(x, newYorkCity) ::: People liviing in Manhattan live in New York City.\nConclusion:\nGrandmaster(asaHoffmann) ::: Asa Hoffmann is a grandmaster.\n------\nPro"
    ]
  },
  {
    "id": "FOLIO_train_802",
    "context": "Asa Hoffmann was born in New York City. Asa Hoffman lives in Manhattan. Asa Hoffman is a chess player. Some chess players are grandmasters. People born and living in New York City are New Yorkers. People liviing in Manhattan live in New York City.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Asa Hoffmann does not live in New York.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBorn(x, y) ::: x was born in y.\nLives(x, y) ::: x lives in y.\nChessPlayer(x) ::: x is a chess player.\nGrandmaster(x) ::: x is a grandmaster.\nNewYorker(x) ::: x is a New Yorker.\nManhattan(x) ::: x is Manhattan.\nPremises:\nBorn(asaHoffmann, newYorkCity) ::: Asa Hoffmann was born in New York City.\nLives(asaHoffmann, manhattan) ::: Asa Hoffman lives in Manhattan.\nChessPlayer(asaHoffmann) ::: Asa Hoffman is a chess player.\n∃x (ChessPlayer(x) ∧ Grandmaster(x)) ::: Some chess players are grandmasters.\nNewYorker(x) ↔ (Born(x, newYorkCity) ∧ Lives(x, newYorkCity)) ::: People born and living in New York City are New Yorkers.\nLives(x, manhattan) → Lives(x, newYorkCity) ::: People liviing in Manhattan live in New York City.\nConclusion:\n¬Lives(asaHoffmann, newYorkCity) ::: Asa Hoffmann does not live in"
    ]
  },
  {
    "id": "FOLIO_train_803",
    "context": "Some of those who apply for a Schengen Visa get it. To apply for a Schengen Visa, you need to provide financial guarantees. If you need to provide financial guarantees, you must request documents from the bank. Do not close your bank account if you request documents from the bank. Philip closed his bank account.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Philip got a Schengen Visa.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nApply(x) ::: x applies for a Schengen Visa.\nGet(x) ::: x gets a Schengen Visa.\nProvide(x) ::: x provides financial guarantees.\nRequest(x) ::: x requests documents from the bank.\nClose(x) ::: x closes his bank account.\nPremises:\n∀x (Apply(x) → Get(x)) ::: Some of those who apply for a Schengen Visa get it.\n∀x (Provide(x) → Request(x)) ::: To apply for a Schengen Visa, you need to provide financial guarantees.\n∀x (Request(x) → ¬Close(x)) ::: If you need to provide financial guarantees, you must request documents from the bank.\nClose(philip) ::: Philip closed his bank account.\nConclusion:\nGet(philip) ::: Philip got a Schengen Visa.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug."
    ]
  },
  {
    "id": "FOLIO_train_804",
    "context": "Some of those who apply for a Schengen Visa get it. To apply for a Schengen Visa, you need to provide financial guarantees. If you need to provide financial guarantees, you must request documents from the bank. Do not close your bank account if you request documents from the bank. Philip closed his bank account.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Philip applied for a Schengen Visa and got it.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nApply(x) ::: x applies for a Schengen Visa.\nGet(x) ::: x gets a Schengen Visa.\nProvide(x) ::: x provides financial guarantees.\nRequest(x) ::: x requests documents from the bank.\nClose(x) ::: x closes his bank account.\nPremises:\n∀x (Apply(x) → Provide(x)) ::: To apply for a Schengen Visa, you need to provide financial guarantees.\n∀x (Provide(x) → Request(x)) ::: If you need to provide financial guarantees, you must request documents from the bank.\n∀x (Request(x) → ¬Close(x)) ::: Do not close your bank account if you request documents from the bank.\nClose(philip) ::: Philip closed his bank account.\nConclusion:\nApply(philip) ∧ Get(philip) ::: Philip applied for a Schengen Visa and got it.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or"
    ]
  },
  {
    "id": "FOLIO_train_805",
    "context": "Some of those who apply for a Schengen Visa get it. To apply for a Schengen Visa, you need to provide financial guarantees. If you need to provide financial guarantees, you must request documents from the bank. Do not close your bank account if you request documents from the bank. Philip closed his bank account.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Philip did not request documents from the bank or get a Schengen Visa, he didn’t apply for a Schengen Visa.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nApply(x) ::: x applies for a Schengen Visa.\nGet(x) ::: x gets a Schengen Visa.\nProvide(x) ::: x provides financial guarantees.\nRequest(x) ::: x requests documents from the bank.\nClose(x) ::: x closes his bank account.\nPremises:\n∀x (Apply(x) → Get(x)) ::: Some of those who apply for a Schengen Visa get it.\n∀x (Provide(x) → Request(x)) ::: To apply for a Schengen Visa, you need to provide financial guarantees.\n∀x (Request(x) → ¬Close(x)) ::: If you need to provide financial guarantees, you must request documents from the bank.\nClose(philip) ::: Philip closed his bank account.\nConclusion:\n¬(Request(philip) ∨ Get(philip)) → ¬Apply(philip) ::: If Philip did not request documents from the bank or get a Schengen Visa, he didn’t apply for a Schengen Visa.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine"
    ]
  },
  {
    "id": "FOLIO_train_806",
    "context": "Some fears lead to anxiety. Some anxiety leads to terror.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? No fears lead to terror.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFear(x) ::: x is a fear.\nAnxiety(x) ::: x is an anxiety.\nTerror(x) ::: x is a terror.\nLeadsTo(x, y) ::: x leads to y.\nPremises:\n∃x (Fear(x) ∧ LeadsTo(x, anxiety)) ::: Some fears lead to anxiety.\n∃x (Anxiety(x) ∧ LeadsTo(x, terror)) ::: Some anxiety leads to terror.\nConclusion:\n¬∃x (Fear(x) ∧ LeadsTo(x, terror)) ::: No fears lead to terror.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true,"
    ]
  },
  {
    "id": "FOLIO_train_807",
    "context": "The Great Lakes are Lake Superior, Lake Michigan, Lake Huron, Lake Erie, and Lake Ontario. Some major settlements of Lake Erie are in NY, PA, OH, and MI. NY, PA, OH, MI are states in the US. ON is a state of Canada. There is a major settlement of Lake Huron in ON. All states are in their country. The US is in North America. The Great Lakes began to form at the end of the Last Glacial Period.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Lake Erie has a major settlement.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreatLake(x) ::: x is a Great Lake.\nLakeErie(x) ::: x is Lake Erie.\nLakeHuron(x) ::: x is Lake Huron.\nLakeMichigan(x) ::: x is Lake Michigan.\nLakeOntario(x) ::: x is Lake Ontario.\nLakeSuperior(x) ::: x is Lake Superior.\nMajorSettlement(x) ::: x is a major settlement.\nNY(x) ::: x is NY.\nPA(x) ::: x is PA.\nOH(x) ::: x is OH.\nMI(x) ::: x is MI.\nON(x) ::: x is ON.\nState(x) ::: x is a state.\nUS(x) ::: x is the US.\nCanada(x) ::: x is Canada.\nNorthAmerica(x) ::: x is North America.\nLastGlacialPeriod(x) ::: x is the Last Glacial Period.\nPremises:\nGreatLake(lakeSuperior) ∧ GreatLake(lakeMichigan) ∧ GreatLake(lakeHuron) ∧ GreatLake(lakeErie) ∧ GreatLake(lakeOntario) :::"
    ]
  },
  {
    "id": "FOLIO_train_808",
    "context": "The Great Lakes are Lake Superior, Lake Michigan, Lake Huron, Lake Erie, and Lake Ontario. Some major settlements of Lake Erie are in NY, PA, OH, and MI. NY, PA, OH, MI are states in the US. ON is a state of Canada. There is a major settlement of Lake Huron in ON. All states are in their country. The US is in North America. The Great Lakes began to form at the end of the Last Glacial Period.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There is a great lake that did not form at the end of the Last Glacial Period.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreatLake(x) ::: x is a great lake.\nLakeSuperior(x) ::: x is Lake Superior.\nLakeMichigan(x) ::: x is Lake Michigan.\nLakeHuron(x) ::: x is Lake Huron.\nLakeErie(x) ::: x is Lake Erie.\nLakeOntario(x) ::: x is Lake Ontario.\nMajorSettlement(x) ::: x is a major settlement.\nNY(x) ::: x is NY.\nPA(x) ::: x is PA.\nOH(x) ::: x is OH.\nMI(x) ::: x is MI.\nON(x) ::: x is ON.\nState(x) ::: x is a state.\nUS(x) ::: x is the US.\nCanada(x) ::: x is Canada.\nNorthAmerica(x) ::: x is North America.\nLastGlacialPeriod(x) ::: x is the Last Glacial Period.\nForm(x, y) ::: x formed at y.\nPremises:\nGreatLake(lakeSuperior) ∧ GreatLake(lakeMichigan) ∧ GreatLake(lakeHuron) ∧ GreatLake(lakeErie) �"
    ]
  },
  {
    "id": "FOLIO_train_809",
    "context": "All defenders are soccer players. No soccer players are professional basketball players. All centerbacks are defenders. All NBA players are professional basketball players. If Stephen Curry is not an NBA player, then Stephen Curry is not an NBA player or a soccer player.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Stephen Curry is a professional basketball player.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDefender(x) ::: x is a defender.\nSoccerPlayer(x) ::: x is a soccer player.\nProfessionalBasketballPlayer(x) ::: x is a professional basketball player.\nCenterback(x) ::: x is a centerback.\nNBA(x) ::: x is an NBA player.\nStephenCurry(x) ::: x is Stephen Curry.\nPremises:\n∀x (Defender(x) → SoccerPlayer(x)) ::: All defenders are soccer players.\n∀x (SoccerPlayer(x) → ¬ProfessionalBasketballPlayer(x)) ::: No soccer players are professional basketball players.\n∀x (Centerback(x) → Defender(x)) ::: All centerbacks are defenders.\n∀x (NBA(x) → ProfessionalBasketballPlayer(x)) ::: All NBA players are professional basketball players.\n¬NBA(stephenCurry) → (¬NBA(stephenCurry) ∨ ¬SoccerPlayer(stephenCurry)) ::: If Stephen Curry is not an NBA player, then Stephen Curry is not an NBA player or a soccer player.\nConclusion:\nProfessionalBasketballPlayer(stephenCurry) ::: Stephen Curry is a professional basketball player"
    ]
  },
  {
    "id": "FOLIO_train_810",
    "context": "All defenders are soccer players. No soccer players are professional basketball players. All centerbacks are defenders. All NBA players are professional basketball players. If Stephen Curry is not an NBA player, then Stephen Curry is not an NBA player or a soccer player.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Stephen Curry is a centerback.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDefender(x) ::: x is a defender.\nSoccerPlayer(x) ::: x is a soccer player.\nProfessionalBasketballPlayer(x) ::: x is a professional basketball player.\nCenterback(x) ::: x is a centerback.\nNBA(x) ::: x is an NBA player.\nStephenCurry(x) ::: x is Stephen Curry.\nPremises:\n∀x (Defender(x) → SoccerPlayer(x)) ::: All defenders are soccer players.\n∀x (SoccerPlayer(x) → ¬ProfessionalBasketballPlayer(x)) ::: No soccer players are professional basketball players.\n∀x (Centerback(x) → Defender(x)) ::: All centerbacks are defenders.\n∀x (NBA(x) → ProfessionalBasketballPlayer(x)) ::: All NBA players are professional basketball players.\n¬NBA(stephenCurry) → (¬NBA(stephenCurry) ∨ ¬SoccerPlayer(stephenCurry)) ::: If Stephen Curry is not an NBA player, then Stephen Curry is not an NBA player or a soccer player.\nConclusion:\nCenterback(stephenCurry) ::: Stephen Curry is a centerback.\n------"
    ]
  },
  {
    "id": "FOLIO_train_811",
    "context": "All defenders are soccer players. No soccer players are professional basketball players. All centerbacks are defenders. All NBA players are professional basketball players. If Stephen Curry is not an NBA player, then Stephen Curry is not an NBA player or a soccer player.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Stephen Curry is not a centerback.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDefender(x) ::: x is a defender.\nSoccerPlayer(x) ::: x is a soccer player.\nProfessionalBasketballPlayer(x) ::: x is a professional basketball player.\nCenterback(x) ::: x is a centerback.\nNBA(x) ::: x is an NBA player.\nStephenCurry(x) ::: x is Stephen Curry.\nPremises:\n∀x (Defender(x) → SoccerPlayer(x)) ::: All defenders are soccer players.\n∀x (SoccerPlayer(x) → ¬ProfessionalBasketballPlayer(x)) ::: No soccer players are professional basketball players.\n∀x (Centerback(x) → Defender(x)) ::: All centerbacks are defenders.\n∀x (NBA(x) → ProfessionalBasketballPlayer(x)) ::: All NBA players are professional basketball players.\n¬NBA(stephenCurry) → (¬NBA(stephenCurry) ⊕ ¬SoccerPlayer(stephenCurry)) ::: If Stephen Curry is not an NBA player, then Stephen Curry is not an NBA player or a soccer player.\nConclusion:\n¬Centerback(stephenCurry) ::: Stephen Curry is not a centerback."
    ]
  },
  {
    "id": "FOLIO_train_812",
    "context": "Naive cynicism was proposed by Justin Kruger and a colleague. Thomas Gilovich is a colleague of Justin Kruger. Naive cynicism is a philosophy of mind.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Thomas Gilovich proposed naive cynicism.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPropose(x, y) ::: x proposed y.\nPhilosophyOfMind(x) ::: x is a philosophy of mind.\nColleague(x, y) ::: x is a colleague of y.\nNaiveCynicism(x) ::: x is naive cynicism.\nPremises:\nPropose(justinKruger, naiveCynicism) ::: Naive cynicism was proposed by Justin Kruger.\nColleague(thomasGilovich, justinKruger) ::: Thomas Gilovich is a colleague of Justin Kruger.\nNaiveCynicism(naiveCynicism) ::: Naive cynicism is a philosophy of mind.\nConclusion:\nPropose(thomasGilovich, naiveCynicism) ::: Thomas Gilovich proposed naive cynicism.\n------\nProblem:\nThe 1996 Summer Olympics were held in Atlanta, Georgia. The 1996 Summer Olympics were held in the United States. The 1996 Summer Olympics were held in the United States of America. The 1996 Summer Olympics were held in the United States of America. The 1996 Summer Olympics were held in the United States of America. The 1996 Summer Olympics were held in the United States of America. The"
    ]
  },
  {
    "id": "FOLIO_train_813",
    "context": "Naive cynicism was proposed by Justin Kruger and a colleague. Thomas Gilovich is a colleague of Justin Kruger. Naive cynicism is a philosophy of mind.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Justin Kruger propose a philosophy of mind.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPropose(x, y) ::: x proposes y.\nPhilosophyOfMind(x) ::: x is a philosophy of mind.\nColleague(x, y) ::: x is a colleague of y.\nPremises:\nPropose(justinKruger, naiveCynicism) ::: Naive cynicism was proposed by Justin Kruger and a colleague.\nColleague(justinKruger, thomasGilovich) ::: Thomas Gilovich is a colleague of Justin Kruger.\nPhilosophyOfMind(naiveCynicism) ::: Naive cynicism is a philosophy of mind.\nConclusion:\nPropose(justinKruger, philosophyOfMind) ::: Justin Kruger propose a philosophy of mind.\n------\nProblem:\nThe 1996 Summer Olympics, officially known as the Games of the XXVI Olympiad, was an international multi-sport event that was celebrated in 1996 in Atlanta, Georgia, United States. The 1996 Summer Olympics was the first time that the Summer Olympic Games were held in the Southern United States. The 1996 Summer Olympics was the first time that the Summer Olympic Games were held in the United States since the 1984 Summer Olympics in Los Angeles. The 1996 Summer Olympics"
    ]
  },
  {
    "id": "FOLIO_train_814",
    "context": "Naive cynicism was proposed by Justin Kruger and a colleague. Thomas Gilovich is a colleague of Justin Kruger. Naive cynicism is a philosophy of mind.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Thomas Gilovich worked on philiophies of mind.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nNaiveCynicism(x) ::: x is naive cynicism.\nPhilosophyOfMind(x) ::: x is a philosophy of mind.\nPropose(x, y) ::: x proposed y.\nColleague(x, y) ::: x is a colleague of y.\nWork(x, y) ::: x worked on y.\nPremises:\nNaiveCynicism(naiveCynicism) ::: Naive cynicism was proposed by Justin Kruger and a colleague.\nColleague(thomasGilovich, justinKruger) ::: Thomas Gilovich is a colleague of Justin Kruger.\nPhilosophyOfMind(naiveCynicism) ::: Naive cynicism is a philosophy of mind.\nPropose(justinKruger, naiveCynicism) ::: Naive cynicism was proposed by Justin Kruger and a colleague.\nConclusion:\nWork(thomasGilovich, philosophyOfMind) ::: Thomas Gilovich worked on philiophies of mind.\n------\nProblem:\nThe 1996 Summer Olympics, officially known as the Games of the XXVI Olympiad, was an international multi-sport event which was celebrated in 1996 in Atlanta, Georgia, United States. The"
    ]
  },
  {
    "id": "FOLIO_train_815",
    "context": " The Turing Award has been awarded to Donald Knuth, Marvin Minsky, Richard Hamming and John McCarthy. Donald Knuth made major contributions to the analysis of algorithms. Marvin Minsky is recognized by his contributions to the field of artificial intelligence. Richard Hamming did research on numerical methods. John McCarthy had a central role in creating and shaping the field of artificial inteligence.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? At least two people who have won the Turing Award worked in the field of artificial intelligence.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTuringAward(x) ::: x has won the Turing Award.\nContribution(x, y) ::: x made major contributions to the field of y.\nField(x, y) ::: x worked in the field of y.\nPremises:\nTuringAward(donaldKnuth) ∧ TuringAward(marvinMinsky) ∧ TuringAward(richardHamming) ∧ TuringAward(johnMcCarthy) ::: The Turing Award has been awarded to Donald Knuth, Marvin Minsky, Richard Hamming and John McCarthy.\nContribution(donaldKnuth, analysisOfAlgorithms) ::: Donald Knuth made major contributions to the analysis of algorithms.\nContribution(marvinMinsky, artificialIntelligence) ::: Marvin Minsky is recognized by his contributions to the field of artificial intelligence.\nContribution(richardHamming, numericalMethods) ::: Richard Hamming did research on numerical methods.\nContribution(johnMcCarthy, artificialIntelligence) ::: John McCarthy had a central role in creating and shaping the field of artificial inteligence.\nConclusion:\n∃x ∃y (TuringAward(x) ∧ TuringAward(y) ��"
    ]
  },
  {
    "id": "FOLIO_train_816",
    "context": " The Turing Award has been awarded to Donald Knuth, Marvin Minsky, Richard Hamming and John McCarthy. Donald Knuth made major contributions to the analysis of algorithms. Marvin Minsky is recognized by his contributions to the field of artificial intelligence. Richard Hamming did research on numerical methods. John McCarthy had a central role in creating and shaping the field of artificial inteligence.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? At least two people who worked in the field of artificial intelligence have won the Turing Award.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTuringAward(x) ::: x has won the Turing Award.\nContribution(x, y) ::: x made major contributions to the field of y.\nField(x, y) ::: x worked in the field of y.\nPremises:\nTuringAward(donaldKnuth) ∧ TuringAward(marvinMinsky) ∧ TuringAward(richardHamming) ∧ TuringAward(johnMcCarthy) ::: The Turing Award has been awarded to Donald Knuth, Marvin Minsky, Richard Hamming and John McCarthy.\nContribution(donaldKnuth, analysisOfAlgorithms) ::: Donald Knuth made major contributions to the analysis of algorithms.\nContribution(marvinMinsky, artificialIntelligence) ::: Marvin Minsky is recognized by his contributions to the field of artificial intelligence.\nContribution(richardHamming, numericalMethods) ::: Richard Hamming did research on numerical methods.\nContribution(johnMcCarthy, artificialIntelligence) ::: John McCarthy had a central role in creating and shaping the field of artificial inteligence.\nConclusion:\n∃x ∃y (Field(x, artificialIntelligence) ∧ Field(y, artificialIntelligence)"
    ]
  },
  {
    "id": "FOLIO_train_817",
    "context": " The Turing Award has been awarded to Donald Knuth, Marvin Minsky, Richard Hamming and John McCarthy. Donald Knuth made major contributions to the analysis of algorithms. Marvin Minsky is recognized by his contributions to the field of artificial intelligence. Richard Hamming did research on numerical methods. John McCarthy had a central role in creating and shaping the field of artificial inteligence.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Only one people who have won the Turing Award made significant contributions to the analysis of algorithms.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTuringAward(x) ::: x has won the Turing Award.\nContribution(x, y) ::: x made significant contributions to y.\nAnalysis(x) ::: x is the analysis of algorithms.\nArtificialIntelligence(x) ::: x is the field of artificial intelligence.\nNumericalMethod(x) ::: x is the research on numerical methods.\nPremises:\nTuringAward(donaldKnuth) ∧ TuringAward(marvinMinsky) ∧ TuringAward(richardHamming) ∧ TuringAward(johnMcCarthy) ::: The Turing Award has been awarded to Donald Knuth, Marvin Minsky, Richard Hamming and John McCarthy.\nContribution(donaldKnuth, analysis) ::: Donald Knuth made major contributions to the analysis of algorithms.\nContribution(marvinMinsky, artificialIntelligence) ::: Marvin Minsky is recognized by his contributions to the field of artificial intelligence.\nContribution(richardHamming, numericalMethod) ::: Richard Hamming did research on numerical methods.\nContribution(johnMcCarthy, artificialIntelligence) ::: John McCarthy had a central role in creating and shaping the field of artificial inteligence.\nConclusion:\n∃x"
    ]
  },
  {
    "id": "FOLIO_train_818",
    "context": " The Turing Award has been awarded to Donald Knuth, Marvin Minsky, Richard Hamming and John McCarthy. Donald Knuth made major contributions to the analysis of algorithms. Marvin Minsky is recognized by his contributions to the field of artificial intelligence. Richard Hamming did research on numerical methods. John McCarthy had a central role in creating and shaping the field of artificial inteligence.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? No Turing Award winners worked in the field of numerical methods.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTuringAward(x) ::: x is a Turing Award winner.\nContribution(x, y) ::: x made major contributions to the field of y.\nField(x, y) ::: x worked in the field of y.\nPremises:\nTuringAward(donaldKnuth) ∧ TuringAward(marvinMinsky) ∧ TuringAward(richardHamming) ∧ TuringAward(johnMcCarthy) ::: The Turing Award has been awarded to Donald Knuth, Marvin Minsky, Richard Hamming and John McCarthy.\nContribution(donaldKnuth, analysisOfAlgorithms) ::: Donald Knuth made major contributions to the analysis of algorithms.\nContribution(marvinMinsky, artificialIntelligence) ::: Marvin Minsky is recognized by his contributions to the field of artificial intelligence.\nContribution(richardHamming, numericalMethods) ::: Richard Hamming did research on numerical methods.\nContribution(johnMcCarthy, artificialIntelligence) ::: John McCarthy had a central role in creating and shaping the field of artificial inteligence.\nConclusion:\n¬∃x (TuringAward(x) ∧ Field(x, numericalMethods)) ::: No Turing Award winners"
    ]
  },
  {
    "id": "FOLIO_train_819",
    "context": "No easy Leetcode problems have an AC rate lower than 20 percent. All Leetcode problems recommended to novices are easy. Leetcode problems either have an AC rate lower than 20 percent or are starred by more than 1 thousand users. All hard Leetcode problems are starred by more than 1 thousand users. No Leetcode problems published after 2022 are starred by more than 1 thousand users. 2Sum is not recommended to novices and hard. 4Sum is either starred by more than 1 thousand users and published after 2022, or neither starred by more than 1 thousand users nor published after 2022.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? 2Sum is an easy Leetcode problem.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLeetcodeProblem(x) ::: x is a Leetcode problem.\nEasy(x) ::: x is an easy Leetcode problem.\nNovice(x) ::: x is a novice.\nRecommend(x, y) ::: x is recommended to y.\nStar(x, y) ::: x is starred by y users.\nPublish(x, y) ::: x is published in year y.\nACRate(x, y) ::: x has an AC rate lower than y percent.\nHard(x) ::: x is a hard Leetcode problem.\nPremises:\n∀x (Easy(x) → LeetcodeProblem(x)) ::: No easy Leetcode problems have an AC rate lower than 20 percent.\n∀x (Novice(x) → Recommend(leetcode, x)) ::: All Leetcode problems recommended to novices are easy.\n∀x (LeetcodeProblem(x) → (Star(x, 1000) ⊕ ACRate(x, 20))) ::: Leetcode problems either have an AC rate lower than 20 percent or are starred by more than 1 thousand users.\n∀x (Hard(x) → Star(x, 1000"
    ]
  },
  {
    "id": "FOLIO_train_820",
    "context": "No easy Leetcode problems have an AC rate lower than 20 percent. All Leetcode problems recommended to novices are easy. Leetcode problems either have an AC rate lower than 20 percent or are starred by more than 1 thousand users. All hard Leetcode problems are starred by more than 1 thousand users. No Leetcode problems published after 2022 are starred by more than 1 thousand users. 2Sum is not recommended to novices and hard. 4Sum is either starred by more than 1 thousand users and published after 2022, or neither starred by more than 1 thousand users nor published after 2022.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? 2Sum is not an easy Leetcode problem.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEasy(x) ::: x is an easy Leetcode problem.\nRecommended(x) ::: x is recommended to novices.\nACRate(x) ::: x has an AC rate lower than 20 percent.\nStarred(x) ::: x is starred by more than 1 thousand users.\nPublished(x) ::: x is published after 2022.\nHard(x) ::: x is a hard Leetcode problem.\nPremises:\n∀x (Easy(x) → ACRate(x)) ::: No easy Leetcode problems have an AC rate lower than 20 percent.\n∀x (Recommended(x) → Easy(x)) ::: All Leetcode problems recommended to novices are easy.\n∀x (Easy(x) ⊕ Starred(x)) ::: Leetcode problems either have an AC rate lower than 20 percent or are starred by more than 1 thousand users.\n∀x (Hard(x) → Starred(x)) ::: All hard Leetcode problems are starred by more than 1 thousand users.\n∀x (Published(x) → ¬Starred(x)) ::: No Leetcode problems published after 2022 are starred by more than 1 thousand users.\n¬Recommended(2sum) ∧ Hard(2sum) ::: 2Sum is not recommended to novices and hard.\nStarred(4sum) ⊕ Published(4sum) ::: 4Sum is either starred by more than 1 thousand users and published after 2022, or neither starred by more than 1 thousand users nor published after 2022.\nConclusion:\n¬Easy(2sum) ::: 2Sum is not an easy Leetcode problem.\n------"
    ]
  },
  {
    "id": "FOLIO_train_821",
    "context": "No easy Leetcode problems have an AC rate lower than 20 percent. All Leetcode problems recommended to novices are easy. Leetcode problems either have an AC rate lower than 20 percent or are starred by more than 1 thousand users. All hard Leetcode problems are starred by more than 1 thousand users. No Leetcode problems published after 2022 are starred by more than 1 thousand users. 2Sum is not recommended to novices and hard. 4Sum is either starred by more than 1 thousand users and published after 2022, or neither starred by more than 1 thousand users nor published after 2022.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? 4Sum is a Leetcode problem recommended to the novice or is hard.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLeetcodeProblem(x) ::: x is a Leetcode problem.\nEasy(x) ::: x is an easy Leetcode problem.\nNovice(x) ::: x is a novice.\nStarred(x, y) ::: x is starred by y users.\nPublished(x, y) ::: x is published in year y.\nRecommend(x, y) ::: x is recommended to y.\nHard(x) ::: x is a hard Leetcode problem.\nPremises:\n∀x (Easy(x) → AC(x, 20)) ::: No easy Leetcode problems have an AC rate lower than 20 percent.\n∀x (Recommend(x, novice) → Easy(x)) ::: All Leetcode problems recommended to novices are easy.\n∀x (LeetcodeProblem(x) → (Starred(x, 1000) ⊕ AC(x, 20))) ::: Leetcode problems either have an AC rate lower than 20 percent or are starred by more than 1 thousand users.\n∀x (Hard(x) → Starred(x, 1000)) ::: All hard Leetcode problems are starred by more than 1 thousand users.\n∀x (Published(x, year2022) → ¬Starred(x, 1000)) ::: No Leetcode problems published after 2022 are starred by more than 1 thousand users.\n¬Recommend(2sum, novice) ∧ Hard(2sum) ::: 2Sum is not recommended to novices and hard.\nStarred(4sum, 1000) ⊕ Published(4sum, year2022) ::: 4"
    ]
  },
  {
    "id": "FOLIO_train_822",
    "context": "No easy Leetcode problems have an AC rate lower than 20 percent. All Leetcode problems recommended to novices are easy. Leetcode problems either have an AC rate lower than 20 percent or are starred by more than 1 thousand users. All hard Leetcode problems are starred by more than 1 thousand users. No Leetcode problems published after 2022 are starred by more than 1 thousand users. 2Sum is not recommended to novices and hard. 4Sum is either starred by more than 1 thousand users and published after 2022, or neither starred by more than 1 thousand users nor published after 2022.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? 4Sum is neither a 2Sum Leetcode problem recommended to the novice nor a Leetcode problem that's hard.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLeetcodeProblem(x) ::: x is a Leetcode problem.\nEasy(x) ::: x is an easy Leetcode problem.\nNovice(x) ::: x is a Leetcode problem recommended to novices.\nHard(x) ::: x is a hard Leetcode problem.\nStarred(x, y) ::: x is starred by y users.\nPublished(x, y) ::: x is published in year y.\nRecommended(x, y) ::: x is recommended to y.\nPremises:\n∀x (Easy(x) → ACrate(x) ≥ 0.2) ::: No easy Leetcode problems have an AC rate lower than 20 percent.\n∀x (Novice(x) → Easy(x)) ::: All Leetcode problems recommended to novices are easy.\n∀x (LeetcodeProblem(x) → (ACrate(x) < 0.2 ⊕ Starred(x, 1000))) ::: Leetcode problems either have an AC rate lower than 20 percent or are starred by more than 1 thousand users.\n∀x (Hard(x) → Starred(x, 1000)) ::: All hard Leetcode problems are starred by more than 1 thousand users.\n∀x (Published(x, year2022) → ¬Starred(x, 1000)) ::: No Leetcode problems published after 2022 are starred by more than 1 thousand users.\n¬Recommended(2sum, Novice) ∧ Hard(2sum) ::: 2Sum is not recommended to novices and hard.\nStarred(4sum, 1000) ⊕ Published(4sum, year"
    ]
  },
  {
    "id": "FOLIO_train_823",
    "context": "Show Your Love is a song recorded by the South Korean boy band BtoB 4u. The lead single of the extended play Inside is Show Your Love. Show Your Love contains a hopeful message. BtoB 4u member Hyunsik wrote Show Your Love. There is a music video for Show Your Love.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Show your love wasn't written by a member of a boy band.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBoyBand(x) ::: x is a boy band.\nMember(x, y) ::: x is a member of y.\nSong(x) ::: x is a song.\nLeadSingle(x, y) ::: x is the lead single of y.\nHopeful(x) ::: x contains a hopeful message.\nWrite(x, y) ::: x wrote y.\nMusicVideo(x) ::: x is a music video.\nPremises:\nBoyBand(btob4u) ∧ Member(hyunsik, btob4u) ∧ Song(showYourLove) ∧ LeadSingle(showYourLove, inside) ∧ Hopeful(showYourLove) ∧ Write(hyunsik, showYourLove) ∧ MusicVideo(showYourLove) ::: Show Your Love is a song recorded by the South Korean boy band BtoB 4u. The lead single of the extended play Inside is Show Your Love. Show Your Love contains a hopeful message. BtoB 4u member Hyunsik wrote Show Your Love. There is a music video for Show Your Love.\nConclusion:\n¬∃x (BoyBand(x) ∧ Member(x, btob4u) ∧ Write(x, showYourLove)) ::: Show your love wasn't written by a member of a boy band.\n------\nProblem:\nThe 2019–20 Hong Kong protests are an ongoing series of demonstrations in Hong Kong. The protests were triggered by the introduction of the Fugitive Offenders amendment bill on 12 April 2019. The protests have been described as \"the most significant political crisis\" in Hong Kong since the transfer of sovereignty over Hong Kong in 1997. The protests have been marked by widespread and sometimes violent displays of"
    ]
  },
  {
    "id": "FOLIO_train_824",
    "context": "Show Your Love is a song recorded by the South Korean boy band BtoB 4u. The lead single of the extended play Inside is Show Your Love. Show Your Love contains a hopeful message. BtoB 4u member Hyunsik wrote Show Your Love. There is a music video for Show Your Love.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A lead single of inside contains a a hopeful message.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBtoB4u(x) ::: x is a member of BtoB 4u.\nLeadSingle(x) ::: x is a lead single.\nHopefulMessage(x) ::: x contains a hopeful message.\nWrite(x, y) ::: x wrote y.\nMusicVideo(x) ::: x is a music video.\nPremises:\nBtoB4u(hyunsik) ::: Hyunsik is a member of BtoB 4u.\nLeadSingle(showYourLove) ::: Show Your Love is a lead single.\nHopefulMessage(showYourLove) ::: Show Your Love contains a hopeful message.\nWrite(hyunsik, showYourLove) ::: Hyunsik wrote Show Your Love.\nMusicVideo(showYourLove) ::: There is a music video for Show Your Love.\nConclusion:\nLeadSingle(inside) ∧ HopefulMessage(inside) ::: A lead single of inside contains a a hopeful message.\n------\nProblem:\nThe 2019–2020 Hong Kong protests are an ongoing series of demonstrations in Hong Kong. The protests were initially against a proposed extradition bill that would have allowed extradition to mainland China. The protests have since evolved into a broader movement for democratic reform and opposition to police brutality. The protests have been marked by violent clashes between protesters and police.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The protests were initially against a proposed extradition bill that would have allowed extradition to mainland China.\nBased on the above information, is the following statement true, false, or uncertain? The protests have since evolved into a broader movement for democratic reform and opposition to police brutality.\nBased on the above information, is the following statement true, false, or uncertain? The protests have been marked by violent clashes between pro"
    ]
  },
  {
    "id": "FOLIO_train_825",
    "context": "Show Your Love is a song recorded by the South Korean boy band BtoB 4u. The lead single of the extended play Inside is Show Your Love. Show Your Love contains a hopeful message. BtoB 4u member Hyunsik wrote Show Your Love. There is a music video for Show Your Love.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Hyunsik is Korean.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nKorean(x) ::: x is Korean.\nBtoB4u(x) ::: x is a member of BtoB 4u.\nLeadSingle(x) ::: x is the lead single of an extended play.\nHopeful(x) ::: x contains a hopeful message.\nWrite(x, y) ::: x wrote y.\nMusicVideo(x) ::: x is a music video.\nPremises:\nBtoB4u(hyunsik) ::: Hyunsik is a member of BtoB 4u.\nShowYourLove(x) ::: x is Show Your Love.\nExtendedPlay(inside) ::: Inside is an extended play.\nLeadSingle(showYourLove, inside) ::: The lead single of the extended play Inside is Show Your Love.\nHopeful(showYourLove) ::: Show Your Love contains a hopeful message.\nWrite(hyunsik, showYourLove) ::: Hyunsik wrote Show Your Love.\nMusicVideo(showYourLove) ::: There is a music video for Show Your Love.\nConclusion:\nKorean(hyunsik) ::: Hyunsik is Korean.\n------\nProblem:\nThe 2019–2020 Hong Kong protests are an ongoing series of demonstrations in Hong Kong. The protests were initially against the proposed extradition bill, but have since expanded to include demands for democratic reform and concerns about the erosion of the autonomy of Hong Kong. The protests have been described as \"the most important political development in Hong Kong since the transfer of sovereignty in 1997\".\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The 2019–2020 Hong Kong protests are an ongoing series of demonstrations in Hong Kong.\nBased on the above information, is the following statement true, false, or uncertain"
    ]
  },
  {
    "id": "FOLIO_train_826",
    "context": "All tables are round. Some furniture are tables.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Some furniture are round.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTable(x) ::: x is a table.\nRound(x) ::: x is round.\nFurniture(x) ::: x is furniture.\nPremises:\n∀x (Table(x) → Round(x)) ::: All tables are round.\n∃x (Furniture(x) ∧ Table(x)) ::: Some furniture are tables.\nConclusion:\n∃x (Furniture(x) ∧ Round(x)) ::: Some furniture are round.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.\n###\nPredicates:\nDependent(x) ::: x is a person dependent on caffeine.\nDrinks"
    ]
  },
  {
    "id": "FOLIO_train_827",
    "context": "All juvenile delinquents are maladjusted individuals. Some juvenile delinquents are products of broken homes.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Some maladjusted individuals are products of broken homes.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nJuvenileDelinquent(x) ::: x is a juvenile delinquent.\nMaladjusted(x) ::: x is a maladjusted individual.\nProduct(x, y) ::: x is a product of y.\nBrokenHome(x) ::: x is a product of a broken home.\nPremises:\n∀x (JuvenileDelinquent(x) → Maladjusted(x)) ::: All juvenile delinquents are maladjusted individuals.\n∃x (JuvenileDelinquent(x) ∧ Product(x, brokenHome)) ::: Some juvenile delinquents are products of broken homes.\nConclusion:\n∃x (Maladjusted(x) ∧ Product(x, brokenHome)) ::: Some maladjusted individuals are products of broken homes.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine and a person who"
    ]
  },
  {
    "id": "FOLIO_train_828",
    "context": "Either brain reading or brain decoding. All brain decoding is extracting information from BOLD signals. No extracting information from BOLD signals is without statistical pattern analysis. Writing a novel is without statistical pattern analysis. If multivoxel (pattern) analysis is without statistical pattern analysis and a brain reading, then multivoxel (pattern) analysis is without statistical pattern analysis and brain decoding.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Multivoxel (pattern) analysis is a brain decoding.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBrainReading(x) ::: x is a brain reading.\nBrainDecoding(x) ::: x is a brain decoding.\nExtracting(x, y) ::: x is extracting information from y.\nBOLD(x) ::: x is a BOLD signal.\nStatisticalPatternAnalysis(x) ::: x is statistical pattern analysis.\nWriting(x, y) ::: x is writing y.\nNovel(x) ::: x is a novel.\nMultivoxel(x) ::: x is multivoxel.\nPremises:\nBrainReading(x) ⊕ BrainDecoding(x) ::: Either brain reading or brain decoding.\n∀x (BrainDecoding(x) → Extracting(x, bold)) ::: All brain decoding is extracting information from BOLD signals.\n∀x (Extracting(x, bold) → ¬StatisticalPatternAnalysis(x)) ::: No extracting information from BOLD signals is without statistical pattern analysis.\nWriting(x, novel) → ¬StatisticalPatternAnalysis(x) ::: Writing a novel is without statistical pattern analysis.\nMultivoxel(x) → ¬StatisticalPatternAnalysis(x) ∧ BrainReading(x) → Multivoxel(x) ::: If multivoxel (pattern) analysis is without statistical pattern analysis and a brain reading, then multivoxel (pattern) analysis is without statistical pattern analysis and brain decoding.\nConclusion:\nMultivoxel(x) → BrainDecoding(x) ::: Multivoxel (pattern) analysis is a brain decoding.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to"
    ]
  },
  {
    "id": "FOLIO_train_829",
    "context": "Either brain reading or brain decoding. All brain decoding is extracting information from BOLD signals. No extracting information from BOLD signals is without statistical pattern analysis. Writing a novel is without statistical pattern analysis. If multivoxel (pattern) analysis is without statistical pattern analysis and a brain reading, then multivoxel (pattern) analysis is without statistical pattern analysis and brain decoding.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Multivoxel (pattern) analysis is the writing of a novel.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBrainReading(x) ::: x is brain reading.\nBrainDecoding(x) ::: x is brain decoding.\nExtracting(x, y) ::: x is extracting information from y.\nBOLD(x) ::: x is a BOLD signal.\nStatisticalPatternAnalysis(x) ::: x is statistical pattern analysis.\nWriting(x, y) ::: x is writing y.\nNovel(x) ::: x is a novel.\nPremises:\nBrainReading(x) ⊕ BrainDecoding(x) ::: Either brain reading or brain decoding.\n∀x (BrainDecoding(x) → Extracting(x, bold)) ::: All brain decoding is extracting information from BOLD signals.\n∀x (Extracting(x, bold) → ¬StatisticalPatternAnalysis(x)) ::: No extracting information from BOLD signals is without statistical pattern analysis.\nWriting(x, novel) → ¬StatisticalPatternAnalysis(x) ::: Writing a novel is without statistical pattern analysis.\nMultivoxel(x) → ¬StatisticalPatternAnalysis(x) ∧ BrainReading(x) ::: Multivoxel (pattern) analysis is without statistical pattern analysis and a brain reading.\nMultivoxel(x) → BrainDecoding(x) ::: Multivoxel (pattern) analysis is brain decoding.\nConclusion:\nWriting(multivoxel, novel) ::: Multivoxel (pattern) analysis is the writing of a novel.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student"
    ]
  },
  {
    "id": "FOLIO_train_830",
    "context": "Either brain reading or brain decoding. All brain decoding is extracting information from BOLD signals. No extracting information from BOLD signals is without statistical pattern analysis. Writing a novel is without statistical pattern analysis. If multivoxel (pattern) analysis is without statistical pattern analysis and a brain reading, then multivoxel (pattern) analysis is without statistical pattern analysis and brain decoding.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Multivoxel (pattern) analysis is without statistical pattern analysis and writing a novel.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBrainReading(x) ::: x is brain reading.\nBrainDecoding(x) ::: x is brain decoding.\nExtracting(x, y) ::: x is extracting information from y.\nBOLD(x) ::: x is BOLD signals.\nStatisticalPatternAnalysis(x) ::: x is statistical pattern analysis.\nWriting(x, y) ::: x is writing y.\nNovel(x) ::: x is a novel.\nMultivoxel(x) ::: x is multivoxel.\nPatternAnalysis(x) ::: x is pattern analysis.\nPremises:\nBrainReading(x) ⊕ BrainDecoding(x) ::: Either brain reading or brain decoding.\n∀x (BrainDecoding(x) → Extracting(x, bold)) ::: All brain decoding is extracting information from BOLD signals.\n∀x (Extracting(x, bold) → ¬StatisticalPatternAnalysis(x)) ::: No extracting information from BOLD signals is without statistical pattern analysis.\nWriting(x, novel) → ¬StatisticalPatternAnalysis(x) ::: Writing a novel is without statistical pattern analysis.\nMultivoxel(x) → PatternAnalysis(x) ::: Multivoxel (pattern) analysis is pattern analysis.\nMultivoxel(x) → ¬BrainReading(x) ::: Multivoxel (pattern) analysis is without brain reading.\nMultivoxel(x) → BrainDecoding(x) ::: Multivoxel (pattern) analysis is brain decoding.\nConclusion:\nMultivoxel(x) → (PatternAnalysis(x) ∧ Writing(x, novel)) ::: Multivoxel (pattern) analysis is without statistical pattern analysis and writing a novel.\n------"
    ]
  },
  {
    "id": "FOLIO_train_831",
    "context": "Either brain reading or brain decoding. All brain decoding is extracting information from BOLD signals. No extracting information from BOLD signals is without statistical pattern analysis. Writing a novel is without statistical pattern analysis. If multivoxel (pattern) analysis is without statistical pattern analysis and a brain reading, then multivoxel (pattern) analysis is without statistical pattern analysis and brain decoding.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Multivoxel (pattern) analysis is without statistical pattern analysis or writing a novel.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBrainReading(x) ::: x is brain reading.\nBrainDecoding(x) ::: x is brain decoding.\nExtracting(x, y) ::: x is extracting information from y.\nBOLD(x) ::: x is BOLD signals.\nStatisticalPatternAnalysis(x) ::: x is statistical pattern analysis.\nWriting(x, y) ::: x is writing y.\nNovel(x) ::: x is a novel.\nMultivoxel(x) ::: x is multivoxel.\nPatternAnalysis(x) ::: x is pattern analysis.\nPremises:\nBrainReading(x) ⊕ BrainDecoding(x) ::: Either brain reading or brain decoding.\n∀x (BrainDecoding(x) → Extracting(x, bold)) ::: All brain decoding is extracting information from BOLD signals.\n∀x (Extracting(x, bold) → ¬StatisticalPatternAnalysis(x)) ::: No extracting information from BOLD signals is without statistical pattern analysis.\nWriting(x, novel) → ¬StatisticalPatternAnalysis(x) ::: Writing a novel is without statistical pattern analysis.\nMultivoxel(x) → PatternAnalysis(x) ::: Multivoxel (pattern) analysis is pattern analysis.\nMultivoxel(x) → ¬BrainReading(x) ::: Multivoxel (pattern) analysis is without brain reading.\nMultivoxel(x) → BrainDecoding(x) ::: Multivoxel (pattern) analysis is brain decoding.\nConclusion:\nMultivoxel(x) → (Extracting(x, bold) ⊕ Writing(x, novel)) ::: Multivoxel (pattern) analysis is without statistical pattern analysis or writing a novel."
    ]
  },
  {
    "id": "FOLIO_train_832",
    "context": "Either brain reading or brain decoding. All brain decoding is extracting information from BOLD signals. No extracting information from BOLD signals is without statistical pattern analysis. Writing a novel is without statistical pattern analysis. If multivoxel (pattern) analysis is without statistical pattern analysis and a brain reading, then multivoxel (pattern) analysis is without statistical pattern analysis and brain decoding.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Multivoxel (pattern) analysis is either without statistical pattern analysis or writing a novel.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBrainReading(x) ::: x is brain reading.\nBrainDecoding(x) ::: x is brain decoding.\nExtracting(x, y) ::: x is extracting information from y.\nBOLD(x) ::: x is BOLD signals.\nStatisticalPatternAnalysis(x) ::: x is statistical pattern analysis.\nWriting(x, y) ::: x is writing y.\nNovel(x) ::: x is a novel.\nMultivoxel(x) ::: x is multivoxel.\nPatternAnalysis(x) ::: x is pattern analysis.\nPremises:\nBrainReading(x) ⊕ BrainDecoding(x) ::: Either brain reading or brain decoding.\n∀x (BrainDecoding(x) → Extracting(x, bold)) ::: All brain decoding is extracting information from BOLD signals.\n∀x (Extracting(x, bold) → ¬StatisticalPatternAnalysis(x)) ::: No extracting information from BOLD signals is without statistical pattern analysis.\nWriting(x, novel) → ¬StatisticalPatternAnalysis(x) ::: Writing a novel is without statistical pattern analysis.\nMultivoxel(x) → PatternAnalysis(x) ::: Multivoxel (pattern) analysis is pattern analysis.\nMultivoxel(x) → ¬BrainReading(x) ::: Multivoxel (pattern) analysis is without brain reading.\nMultivoxel(x) → BrainDecoding(x) ::: Multivoxel (pattern) analysis is brain decoding.\nMultivoxel(x) → ¬StatisticalPatternAnalysis(x) ::: Multivoxel (pattern) analysis is without statistical pattern analysis.\nConclusion:\nMultivoxel(x) → (Writing"
    ]
  },
  {
    "id": "FOLIO_train_833",
    "context": "Either brain reading or brain decoding. All brain decoding is extracting information from BOLD signals. No extracting information from BOLD signals is without statistical pattern analysis. Writing a novel is without statistical pattern analysis. If multivoxel (pattern) analysis is without statistical pattern analysis and a brain reading, then multivoxel (pattern) analysis is without statistical pattern analysis and brain decoding.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If multivoxel (pattern) analysis is writing a novel, then multivoxel (pattern) analysis is neither without statistical pattern analysis nor writing a novel.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBrainReading(x) ::: x is brain reading.\nBrainDecoding(x) ::: x is brain decoding.\nExtracting(x, y) ::: x is extracting information from y.\nBOLD(x) ::: x is BOLD signals.\nStatisticalPatternAnalysis(x) ::: x is statistical pattern analysis.\nWriting(x, y) ::: x is writing y.\nNovel(x) ::: x is a novel.\nMultivoxel(x) ::: x is multivoxel.\nPremises:\nBrainReading(x) ⊕ BrainDecoding(x) ::: Either brain reading or brain decoding.\n∀x (BrainDecoding(x) → Extracting(x, bold)) ::: All brain decoding is extracting information from BOLD signals.\n∀x (Extracting(x, bold) → ¬StatisticalPatternAnalysis(x)) ::: No extracting information from BOLD signals is without statistical pattern analysis.\nWriting(x, novel) → ¬StatisticalPatternAnalysis(x) ::: Writing a novel is without statistical pattern analysis.\nMultivoxel(x) → ¬StatisticalPatternAnalysis(x) ∧ BrainReading(x) → Multivoxel(x) ::: If multivoxel (pattern) analysis is without statistical pattern analysis and a brain reading, then multivoxel (pattern) analysis is without statistical pattern analysis and brain decoding.\nConclusion:\nMultivoxel(x) → Writing(x, novel) → ¬(Multivoxel(x) ∨ Writing(x, novel)) ::: If multivoxel (pattern) analysis is writing a novel, then multivoxel (pattern) analysis is neither without statistical pattern analysis nor writing a novel.\n------"
    ]
  },
  {
    "id": "FOLIO_train_834",
    "context": "If you have room for dessert, you have room for broccoli. Everyone at Luis's dinner party has room for dessert, including Luis. Mauricia does not have room for broccoli. Luis's dinner party is the first ever dinner party that Allison has attended. Gustave has room for both broccoli and asparagus. Broccoli and asparagus are both vegetables.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Allison has room for broccoli.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRoomFor(x, y) ::: x has room for y.\nDessert(x) ::: x is a dessert.\nBroccoli(x) ::: x is broccoli.\nVegetable(x) ::: x is a vegetable.\nAsparagus(x) ::: x is asparagus.\nPremises:\n∀x (RoomFor(x, dessert) → RoomFor(x, broccoli)) ::: If you have room for dessert, you have room for broccoli.\n∀x (RoomFor(x, dessert)) ::: Everyone at Luis's dinner party has room for dessert, including Luis.\n¬RoomFor(mauricia, broccoli) ::: Mauricia does not have room for broccoli.\nFirst(allison, luisDinnerParty) ::: Luis's dinner party is the first ever dinner party that Allison has attended.\nRoomFor(gustave, broccoli) ∧ RoomFor(gustave, asparagus) ::: Gustave has room for both broccoli and asparagus.\nBroccoli(broccoli) ∧ Asparagus(asparagus) ∧ Vegetable(broccoli) ∧ Vegetable(asparagus) ::: Broccoli and asparagus are both vegetables.\nConclusion:\nRoomFor(allison, broccoli) ::: Allison has room for broccoli.\n------\nProblem:\nIf you are a person who is a student, then you are a person who is a student. If you are a person who is a student, then you are a person who is a student. If you are a person who is a student, then you are a person who is a student. If you are a person who"
    ]
  },
  {
    "id": "FOLIO_train_835",
    "context": "If you have room for dessert, you have room for broccoli. Everyone at Luis's dinner party has room for dessert, including Luis. Mauricia does not have room for broccoli. Luis's dinner party is the first ever dinner party that Allison has attended. Gustave has room for both broccoli and asparagus. Broccoli and asparagus are both vegetables.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mauricia is at Luis's dinner party.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRoomFor(x, y) ::: x has room for y.\nDessert(x) ::: x is a dessert.\nBroccoli(x) ::: x is broccoli.\nVegetable(x) ::: x is a vegetable.\nAsparagus(x) ::: x is asparagus.\nDinnerParty(x) ::: x is a dinner party.\nAttend(x, y) ::: x attends y.\nPremises:\n∀x (RoomFor(x, dessert) → RoomFor(x, broccoli)) ::: If you have room for dessert, you have room for broccoli.\n∀x (Attend(x, dinnerParty) → RoomFor(x, dessert)) ::: Everyone at Luis's dinner party has room for dessert, including Luis.\n¬RoomFor(mauricia, broccoli) ::: Mauricia does not have room for broccoli.\nDinnerParty(luisDinnerParty) ∧ Attend(luis, luisDinnerParty) ∧ Attend(mauricia, luisDinnerParty) ∧ Attend(allison, luisDinnerParty) ::: Luis's dinner party is the first ever dinner party that Allison has attended.\nRoomFor(gustave, broccoli) ∧ RoomFor(gustave, asparagus) ::: Gustave has room for both broccoli and asparagus.\nBroccoli(broccoli) ∧ Asparagus(asparagus) ∧ Vegetable(broccoli) ∧ Vegetable(asparagus) ::: Broccoli and asparagus are both vegetables.\nConclusion:\nAtt"
    ]
  },
  {
    "id": "FOLIO_train_836",
    "context": "If you have room for dessert, you have room for broccoli. Everyone at Luis's dinner party has room for dessert, including Luis. Mauricia does not have room for broccoli. Luis's dinner party is the first ever dinner party that Allison has attended. Gustave has room for both broccoli and asparagus. Broccoli and asparagus are both vegetables.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Gustav has room for dessert.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRoomFor(x, y) ::: x has room for y.\nDessert(x) ::: x is a dessert.\nBroccoli(x) ::: x is broccoli.\nVegetable(x) ::: x is a vegetable.\nAsparagus(x) ::: x is asparagus.\nPremises:\n∀x (RoomFor(x, dessert) → RoomFor(x, broccoli)) ::: If you have room for dessert, you have room for broccoli.\n∀x (RoomFor(x, dessert)) ::: Everyone at Luis's dinner party has room for dessert, including Luis.\n¬RoomFor(mauricia, broccoli) ::: Mauricia does not have room for broccoli.\nFirst(allison, luisDinnerParty) ::: Luis's dinner party is the first ever dinner party that Allison has attended.\nRoomFor(gustave, broccoli) ∧ RoomFor(gustave, asparagus) ::: Gustave has room for both broccoli and asparagus.\nBroccoli(broccoli) ∧ Asparagus(asparagus) ∧ Vegetable(broccoli) ∧ Vegetable(asparagus) ::: Broccoli and asparagus are both vegetables.\nConclusion:\nRoomFor(gustave, dessert) ::: Gustav has room for dessert.\n------\nProblem:\nIf you are a person who is a student, then you are a person who is a student. If you are a person who is a student, then you are a person who is a student. If you are a person who is a student, then you are a person who is a student. If you are a person who is"
    ]
  },
  {
    "id": "FOLIO_train_837",
    "context": "Imagine Dragons is an American pop rock band. The lead singer of Imagine Dragons is Dan. Dan is also a songwriter. All lead singers are singers. All singers are musicians. Demons is one of the most popular singles of Imagine Dragons. Some singles of Imagine Dragons have been on Billboard Hot 100.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Some rock band has a songwriter.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nImagineDragons(x) ::: x is Imagine Dragons.\nLeadSinger(x) ::: x is the lead singer of Imagine Dragons.\nDan(x) ::: x is Dan.\nSongwriter(x) ::: x is a songwriter.\nSing(x) ::: x is a singer.\nMusician(x) ::: x is a musician.\nSingle(x) ::: x is a single.\nBillboardHot100(x) ::: x has been on Billboard Hot 100.\nPremises:\nImagineDragons(imagineDragons) ∧ LeadSinger(imagineDragons, dan) ∧ Songwriter(dan) ::: Imagine Dragons is an American pop rock band. The lead singer of Imagine Dragons is Dan. Dan is also a songwriter.\n∀x (LeadSinger(x) → Sing(x)) ::: All lead singers are singers.\n∀x (Sing(x) → Musician(x)) ::: All singers are musicians.\nSingle(demons) ∧ ImagineDragons(demons) ::: Demons is one of the most popular singles of Imagine Dragons.\n∃x (Single(x) ∧ ImagineDragons(x) ∧ BillboardHot100(x)) ::: Some singles of Imagine Dragons have been on Billboard Hot 100.\nConclusion:\n∃x (RockBand(x) ∧ Songwriter(x)) ::: Some rock band has a songwriter.\n------\nProblem:\nThe 2014 FIFA World Cup was the 20th FIFA World Cup, the quadrennial world championship for men's national football teams organized by FIFA. The 2014 FIFA World Cup was held in Brazil. The 20"
    ]
  },
  {
    "id": "FOLIO_train_838",
    "context": "Imagine Dragons is an American pop rock band. The lead singer of Imagine Dragons is Dan. Dan is also a songwriter. All lead singers are singers. All singers are musicians. Demons is one of the most popular singles of Imagine Dragons. Some singles of Imagine Dragons have been on Billboard Hot 100.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Dan is not a musician.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nImagineDragons(x) ::: x is Imagine Dragons.\nLeadSinger(x) ::: x is the lead singer of Imagine Dragons.\nDan(x) ::: x is Dan.\nSongwriter(x) ::: x is a songwriter.\nSing(x) ::: x is a singer.\nMusician(x) ::: x is a musician.\nSingle(x) ::: x is a single.\nBillboardHot100(x) ::: x is on Billboard Hot 100.\nPremises:\nImagineDragons(imagineDragons) ∧ LeadSinger(imagineDragons, dan) ∧ Songwriter(dan) ::: Imagine Dragons is an American pop rock band. The lead singer of Imagine Dragons is Dan. Dan is also a songwriter.\n∀x (LeadSinger(x) → Sing(x)) ::: All lead singers are singers.\n∀x (Sing(x) → Musician(x)) ::: All singers are musicians.\nSingle(demons) ∧ ImagineDragons(demons) ::: Demons is one of the most popular singles of Imagine Dragons.\n∃x (Single(x) ∧ ImagineDragons(x) ∧ BillboardHot100(x)) ::: Some singles of Imagine Dragons have been on Billboard Hot 100.\nConclusion:\n¬Musician(dan) ::: Dan is not a musician.\n------\nProblem:\nThe 2018 FIFA World Cup was the 21st FIFA World Cup, an international football tournament contested by the men's national teams of the member associations of FIFA once every four years. The 2018 FIFA World Cup was held in Russia. The 2018 FIFA World Cup was won by France. The"
    ]
  },
  {
    "id": "FOLIO_train_839",
    "context": "Imagine Dragons is an American pop rock band. The lead singer of Imagine Dragons is Dan. Dan is also a songwriter. All lead singers are singers. All singers are musicians. Demons is one of the most popular singles of Imagine Dragons. Some singles of Imagine Dragons have been on Billboard Hot 100.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Demons has been on Billboard Hot 100.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nImagineDragons(x) ::: x is Imagine Dragons.\nLeadSinger(x) ::: x is the lead singer of Imagine Dragons.\nDan(x) ::: x is Dan.\nSongwriter(x) ::: x is a songwriter.\nSingle(x) ::: x is a single.\nBillboardHot100(x) ::: x has been on Billboard Hot 100.\nPopRockBand(x) ::: x is a pop rock band.\nPremises:\nImagineDragons(imagineDragons) ∧ LeadSinger(imagineDragons, dan) ∧ Songwriter(dan) ::: Imagine Dragons is an American pop rock band. The lead singer of Imagine Dragons is Dan. Dan is also a songwriter.\n∀x (LeadSinger(x) → Singer(x)) ::: All lead singers are singers.\n∀x (Singer(x) → Musician(x)) ::: All singers are musicians.\nSingle(demons) ∧ ImagineDragons(demons) ::: Demons is one of the most popular singles of Imagine Dragons.\n∃x (Single(x) ∧ ImagineDragons(x) ∧ BillboardHot100(x)) ::: Some singles of Imagine Dragons have been on Billboard Hot 100.\nConclusion:\nBillboardHot100(demons) ::: Demons has been on Billboard Hot 100.\n------\nProblem:\nThe 2018 FIFA World Cup was the 21st FIFA World Cup, an international football tournament contested by the men's national teams of the member associations of FIFA once every four years. The 2018 FIFA World Cup was held in Russia. The 2018 FIFA World Cup was"
    ]
  },
  {
    "id": "FOLIO_train_840",
    "context": "All bread is food. Some sandwiches are bread. All food is edible. No edible things are poisonous. Deodorant is poisonous.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Deodorant is a sandwich.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBread(x) ::: x is bread.\nSandwich(x) ::: x is a sandwich.\nFood(x) ::: x is food.\nEdible(x) ::: x is edible.\nPoisonous(x) ::: x is poisonous.\nDeodorant(x) ::: x is deodorant.\nPremises:\n∀x (Bread(x) → Food(x)) ::: All bread is food.\n∃x (Sandwich(x) ∧ Bread(x)) ::: Some sandwiches are bread.\n∀x (Food(x) → Edible(x)) ::: All food is edible.\n∀x (Edible(x) → ¬Poisonous(x)) ::: No edible things are poisonous.\nDeodorant(deodorant) ∧ Poisonous(deodorant) ::: Deodorant is poisonous.\nConclusion:\nSandwich(deodorant) ::: Deodorant is a sandwich.\n------"
    ]
  },
  {
    "id": "FOLIO_train_841",
    "context": "All bread is food. Some sandwiches are bread. All food is edible. No edible things are poisonous. Deodorant is poisonous.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Deodorant is a sandwich and bread.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBread(x) ::: x is bread.\nSandwich(x) ::: x is a sandwich.\nFood(x) ::: x is food.\nEdible(x) ::: x is edible.\nPoisonous(x) ::: x is poisonous.\nDeodorant(x) ::: x is deodorant.\nPremises:\n∀x (Bread(x) → Food(x)) ::: All bread is food.\n∃x (Sandwich(x) ∧ Bread(x)) ::: Some sandwiches are bread.\n∀x (Food(x) → Edible(x)) ::: All food is edible.\n∀x (Edible(x) → ¬Poisonous(x)) ::: No edible things are poisonous.\nDeodorant(deodorant) ∧ Poisonous(deodorant) ::: Deodorant is poisonous.\nConclusion:\nSandwich(deodorant) ∧ Bread(deodorant)"
    ]
  },
  {
    "id": "FOLIO_train_842",
    "context": "All bread is food. Some sandwiches are bread. All food is edible. No edible things are poisonous. Deodorant is poisonous.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If deodorant is a loaf of bread, then deodorant is not a sandwich.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBread(x) ::: x is a loaf of bread.\nSandwich(x) ::: x is a sandwich.\nFood(x) ::: x is food.\nEdible(x) ::: x is edible.\nPoisonous(x) ::: x is poisonous.\nDeodorant(x) ::: x is deodorant.\nPremises:\n∀x (Bread(x) → Food(x)) ::: All bread is food.\n∃x (Sandwich(x) ∧ Bread(x)) ::: Some sandwiches are bread.\n∀x (Food(x) → Edible(x)) ::: All food is edible.\n∀x (Edible(x) → ¬Poisonous(x)) ::: No edible things are poisonous.\nPoisonous(deodorant) ::: Deodorant is poisonous.\nConclusion:\nBread(deodorant) → ¬Sandwich(deodorant) ::: If deodorant is a loaf"
    ]
  },
  {
    "id": "FOLIO_train_843",
    "context": "Common utilities include water, electricity, gas, heating, sewer, trash, and recycling. Many apartment rents cover the cost of water and electricity. Susan lives in an apartment where the rent covers all utilities. The rent of the apartment where Ava lives does not cover any utility expenses. Noah lives in an apartment where the rent does not cover heating.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Noah needs to pay the water bill.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nApartment(x) ::: x is an apartment.\nRent(x) ::: x is the rent of an apartment.\nCover(x, y) ::: x covers the cost of y.\nUtility(x) ::: x is a utility.\nWater(x) ::: x is water.\nElectricity(x) ::: x is electricity.\nGas(x) ::: x is gas.\nHeating(x) ::: x is heating.\nSewer(x) ::: x is sewer.\nTrash(x) ::: x is trash.\nRecycling(x) ::: x is recycling.\nLive(x, y) ::: x lives in y.\nPremises:\nUtility(water) ∧ Utility(electricity) ∧ Utility(gas) ∧ Utility(heating) ∧ Utility(sewer) ∧ Utility(trash) ∧ Utility(recycling) ::: Common utilities include water, electricity, gas, heating, sewer, trash, and recycling"
    ]
  },
  {
    "id": "FOLIO_train_844",
    "context": "Common utilities include water, electricity, gas, heating, sewer, trash, and recycling. Many apartment rents cover the cost of water and electricity. Susan lives in an apartment where the rent covers all utilities. The rent of the apartment where Ava lives does not cover any utility expenses. Noah lives in an apartment where the rent does not cover heating.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Noah and Ava both need to pay the heating bill.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nApartment(x) ::: x is an apartment.\nRent(x) ::: x is the rent of an apartment.\nCover(x, y) ::: x covers the cost of y.\nUtility(x) ::: x is a utility.\nWater(x) ::: x is water.\nElectricity(x) ::: x is electricity.\nGas(x) ::: x is gas.\nHeating(x) ::: x is heating.\nSewer(x) ::: x is sewer.\nTrash(x) ::: x is trash.\nRecycling(x) ::: x is recycling.\nLive(x, y) ::: x lives in y.\nPremises:\nUtility(water) ∧ Utility(electricity) ∧ Utility(gas) ∧ Utility(heating) ∧ Utility(sewer) ∧ Utility(trash) ∧ Utility(recycling) ::: Common utilities include water, electricity, gas, heating, sewer, trash, and recycling"
    ]
  },
  {
    "id": "FOLIO_train_845",
    "context": "Common utilities include water, electricity, gas, heating, sewer, trash, and recycling. Many apartment rents cover the cost of water and electricity. Susan lives in an apartment where the rent covers all utilities. The rent of the apartment where Ava lives does not cover any utility expenses. Noah lives in an apartment where the rent does not cover heating.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Susan does not need to pay the water bill.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nApartment(x) ::: x is an apartment.\nRent(x) ::: x is the rent of an apartment.\nCover(x, y) ::: x covers the cost of y.\nUtility(x) ::: x is a utility.\nWater(x) ::: x is water.\nElectricity(x) ::: x is electricity.\nGas(x) ::: x is gas.\nHeating(x) ::: x is heating.\nSewer(x) ::: x is sewer.\nTrash(x) ::: x is trash.\nRecycling(x) ::: x is recycling.\nLive(x, y) ::: x lives in y.\nPremises:\nUtility(water) ∧ Utility(electricity) ∧ Utility(gas) ∧ Utility(heating) ∧ Utility(sewer) ∧ Utility(trash) ∧ Utility(recycling) ::: Common utilities include water, electricity, gas, heating, sewer, trash, and recycling"
    ]
  },
  {
    "id": "FOLIO_train_846",
    "context": "All clothes are products. No products are perfect. All dresses are clothes. All skirts are dresses. If Nike is clothes, then Nike is perfect and a dress.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Nike is perfect.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nClothes(x) ::: x is clothes.\nProduct(x) ::: x is a product.\nPerfect(x) ::: x is perfect.\nDress(x) ::: x is a dress.\nSkirt(x) ::: x is a skirt.\nNike(x) ::: x is Nike.\nPremises:\n∀x (Clothes(x) → Product(x)) ::: All clothes are products.\n∀x (Product(x) → ¬Perfect(x)) ::: No products are perfect.\n∀x (Dress(x) → Clothes(x)) ::: All dresses are clothes.\n∀x (Skirt(x) → Dress(x)) ::: All skirts are dresses.\nClothes(nike) → Perfect(nike) ∧ Dress(nike) ::: If Nike is clothes, then Nike is perfect and a dress.\nConclusion:\nPerfect(nike) ::: Nike is perfect.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffe"
    ]
  },
  {
    "id": "FOLIO_train_847",
    "context": "All clothes are products. No products are perfect. All dresses are clothes. All skirts are dresses. If Nike is clothes, then Nike is perfect and a dress.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Nike is a skirt.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nClothes(x) ::: x is clothes.\nProduct(x) ::: x is a product.\nPerfect(x) ::: x is perfect.\nDress(x) ::: x is a dress.\nSkirt(x) ::: x is a skirt.\nNike(x) ::: x is Nike.\nPremises:\n∀x (Clothes(x) → Product(x)) ::: All clothes are products.\n∀x (Product(x) → ¬Perfect(x)) ::: No products are perfect.\n∀x (Dress(x) → Clothes(x)) ::: All dresses are clothes.\n∀x (Skirt(x) → Dress(x)) ::: All skirts are dresses.\nClothes(nike) → (Perfect(nike) ∧ Dress(nike)) ::: If Nike is clothes, then Nike is perfect and a dress.\nConclusion:\nSkirt(nike) ::: Nike is a skirt.\n------\nProblem:\nAll people who regularly drink coffee are dependent"
    ]
  },
  {
    "id": "FOLIO_train_848",
    "context": "All clothes are products. No products are perfect. All dresses are clothes. All skirts are dresses. If Nike is clothes, then Nike is perfect and a dress.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Nike is not a skirt.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nClothes(x) ::: x is clothes.\nProduct(x) ::: x is a product.\nPerfect(x) ::: x is perfect.\nDress(x) ::: x is a dress.\nSkirt(x) ::: x is a skirt.\nNike(x) ::: x is Nike.\nPremises:\n∀x (Clothes(x) → Product(x)) ::: All clothes are products.\n∀x (Product(x) → ¬Perfect(x)) ::: No products are perfect.\n∀x (Dress(x) → Clothes(x)) ::: All dresses are clothes.\n∀x (Skirt(x) → Dress(x)) ::: All skirts are dresses.\nClothes(nike) → (Perfect(nike) ∧ Dress(nike)) ::: If Nike is clothes, then Nike is perfect and a dress.\nConclusion:\n¬Skirt(nike) ::: Nike is not a skirt.\n------\nProblem:\nAll people who regularly drink coffee"
    ]
  },
  {
    "id": "FOLIO_train_849",
    "context": "All pets are animals. Pets can be either a dog or a cat. If a person has a pet, they care for that pet. Dogs and Cats can be naughty. Pets who are naughty are not liked as much. Charlie has a naughty pet dog named Leo.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Leo is an animal.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPet(x) ::: x is a pet.\nAnimal(x) ::: x is an animal.\nDog(x) ::: x is a dog.\nCat(x) ::: x is a cat.\nPerson(x) ::: x is a person.\nCareFor(x, y) ::: x cares for y.\nNaughty(x) ::: x is naughty.\nLike(x, y) ::: x likes y.\nPremises:\n∀x (Pet(x) → Animal(x)) ::: All pets are animals.\n∀x (Pet(x) → (Dog(x) ⊕ Cat(x))) ::: Pets can be either a dog or a cat.\n∀x (Person(x) ∧ Pet(y) ∧ CareFor(x, y)) → CareFor(x, y) ::: If a person has a pet, they care for that pet.\n∀x (Dog(x) ∧ Cat(x) → Naughty(x)) ::: Dogs and C"
    ]
  },
  {
    "id": "FOLIO_train_850",
    "context": "All pets are animals. Pets can be either a dog or a cat. If a person has a pet, they care for that pet. Dogs and Cats can be naughty. Pets who are naughty are not liked as much. Charlie has a naughty pet dog named Leo.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Charlie does not like Leo and does not care for Leo.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPet(x) ::: x is a pet.\nAnimal(x) ::: x is an animal.\nDog(x) ::: x is a dog.\nCat(x) ::: x is a cat.\nPerson(x) ::: x is a person.\nCareFor(x, y) ::: x cares for y.\nNaughty(x) ::: x is naughty.\nLike(x, y) ::: x likes y.\nPremises:\n∀x (Pet(x) → Animal(x)) ::: All pets are animals.\n∀x (Pet(x) → (Dog(x) ⊕ Cat(x))) ::: Pets can be either a dog or a cat.\n∀x (Person(x) ∧ Pet(y) ∧ CareFor(x, y)) → (Person(x) ∧ Pet(y)) ::: If a person has a pet, they care for that pet.\n∀x (Dog(x) ∧ Cat(x) → Naughty(x)) ::: Dogs and Cats can be naughty.\n∀x (Naughty(x) → ¬Like(x, y)) ::: Pets who are naughty are not liked as much.\nPet(leo) ∧ Dog(leo) ∧ Naughty(leo) ∧ Person(charlie) ∧ Pet(leo) ∧ CareFor(charlie, leo) ::: Charlie has a naughty pet dog named Leo.\nConclusion:\n¬Like(charlie, leo) ∧ ¬CareFor(charlie, leo) ::: Charlie does not like Leo and does not care for Leo.\n------"
    ]
  },
  {
    "id": "FOLIO_train_851",
    "context": "All pets are animals. Pets can be either a dog or a cat. If a person has a pet, they care for that pet. Dogs and Cats can be naughty. Pets who are naughty are not liked as much. Charlie has a naughty pet dog named Leo.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Dogs are always not naughty.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPet(x) ::: x is a pet.\nAnimal(x) ::: x is an animal.\nDog(x) ::: x is a dog.\nCat(x) ::: x is a cat.\nPerson(x) ::: x is a person.\nCare(x, y) ::: x cares for y.\nNaughty(x) ::: x is naughty.\nLike(x, y) ::: x likes y.\nPremises:\n∀x (Pet(x) → Animal(x)) ::: All pets are animals.\n∀x (Pet(x) → (Dog(x) ⊕ Cat(x))) ::: Pets can be either a dog or a cat.\n∀x (Person(x) ∧ Pet(y) ∧ Care(x, y)) → (Person(x) ∧ Pet(y)) ::: If a person has a pet, they care for that pet.\n∀x (Dog(x) ∨ Cat(x)) → Naughty(x) ::: Dogs and Cats can be naughty.\n∀x (Naughty(x) → ¬Like(x, y)) ::: Pets who are naughty are not liked as much.\nPet(leo) ∧ Dog(leo) ∧ Naughty(leo) ::: Charlie has a naughty pet dog named Leo.\nConclusion:\n∀x (Dog(x) → ¬Naughty(x)) ::: Dogs are always not naughty.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine"
    ]
  },
  {
    "id": "FOLIO_train_852",
    "context": "Surprises are either fun or dreadful. All scares are surprises.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? All scares are fun.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFun(x) ::: x is fun.\nDreadful(x) ::: x is dreadful.\nSurprise(x) ::: x is a surprise.\nScare(x) ::: x is a scare.\nPremises:\n∀x (Surprise(x) → (Fun(x) ⊕ Dreadful(x))) ::: Surprises are either fun or dreadful.\n∀x (Scare(x) → Surprise(x)) ::: All scares are surprises.\nConclusion:\n∀x (Scare(x) → Fun(x)) ::: All scares are fun.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffe"
    ]
  },
  {
    "id": "FOLIO_train_853",
    "context": "All books written by Cixin Liu have sold more than 1 million copies. Some books that have won the Hugo Award were written by Cixin Liu. All books about the future are influenced by Isaac Asimov. The book the Three Body Problem has sold more than 1 million copies. The Three Body Problem is about the future.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Three Body Problem won the Hugo Award.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBook(x) ::: x is a book.\nAuthor(x, y) ::: x is the author of y.\nSell(x, y) ::: x has sold y copies.\nWin(x, y) ::: x won y.\nHugo(x) ::: x is the Hugo Award.\nAbout(x, y) ::: x is about y.\nFuture(x) ::: x is about the future.\nPremises:\n∀x (Author(cixinLiu, x) → Sell(x, million)) ::: All books written by Cixin Liu have sold more than 1 million copies.\n∃x (Win(x, hugo) ∧ Author(cixinLiu, x)) ::: Some books that have won the Hugo Award were written by Cixin Liu.\n∀x (About(x, future) → Influenced(x, isaacAsimov)) ::: All books about the future are influenced by Isaac Asimov.\nSell(theThreeBodyProblem, million) ::: The Three Body Problem has sold more than 1 million copies.\nAbout(theThreeBodyProblem, future) ::: The Three Body Problem is about the future.\nConclusion:\nWin(theThreeBodyProblem, hugo) ::: The Three Body Problem won the Hugo Award.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a"
    ]
  },
  {
    "id": "FOLIO_train_854",
    "context": "All books written by Cixin Liu have sold more than 1 million copies. Some books that have won the Hugo Award were written by Cixin Liu. All books about the future are influenced by Isaac Asimov. The book the Three Body Problem has sold more than 1 million copies. The Three Body Problem is about the future.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Three Body Problem was influenced by Isaac Asimov.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBook(x) ::: x is a book.\nSell(x, y) ::: x has sold y copies.\nHugoAward(x) ::: x has won the Hugo Award.\nAuthor(x, y) ::: x is the author of y.\nAbout(x, y) ::: x is about y.\nInfluence(x, y) ::: x is influenced by y.\nPremises:\n∀x (Author(cixinLiu, x) → Sell(x, million)) ::: All books written by Cixin Liu have sold more than 1 million copies.\n∃x (HugoAward(x) ∧ Author(cixinLiu, x)) ::: Some books that have won the Hugo Award were written by Cixin Liu.\n∀x (About(x, future) → Influence(x, isaacAsimov)) ::: All books about the future are influenced by Isaac Asimov.\nSell(theThreeBodyProblem, million) ∧ About(theThreeBodyProblem, future) ::: The Three Body Problem has sold more than 1 million copies. The Three Body Problem is about the future.\nConclusion:\nInfluence(theThreeBodyProblem, isaacAsimov) ::: The Three Body Problem was influenced by Isaac Asimov.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then"
    ]
  },
  {
    "id": "FOLIO_train_855",
    "context": "All books written by Cixin Liu have sold more than 1 million copies. Some books that have won the Hugo Award were written by Cixin Liu. All books about the future are influenced by Isaac Asimov. The book the Three Body Problem has sold more than 1 million copies. The Three Body Problem is about the future.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Three Body Problem was written by Cixin Liu.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBook(x) ::: x is a book.\nSell(x, y) ::: x has sold y copies.\nHugoAward(x) ::: x has won the Hugo Award.\nWrittenBy(x, y) ::: x was written by y.\nAbout(x, y) ::: x is about y.\nInfluencedBy(x, y) ::: x is influenced by y.\nPremises:\n∀x (WrittenBy(cixinLiu, x) → Sell(x, million)) ::: All books written by Cixin Liu have sold more than 1 million copies.\n∃x (HugoAward(x) ∧ WrittenBy(cixinLiu, x)) ::: Some books that have won the Hugo Award were written by Cixin Liu.\n∀x (About(x, future) → InfluencedBy(x, isaacAsimov)) ::: All books about the future are influenced by Isaac Asimov.\nSell(theThreeBodyProblem, million) ::: The Three Body Problem has sold more than 1 million copies.\nAbout(theThreeBodyProblem, future) ::: The Three Body Problem is about the future.\nConclusion:\nWrittenBy(cixinLiu, theThreeBodyProblem) ::: The Three Body Problem was written by Cixin Liu.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffe"
    ]
  },
  {
    "id": "FOLIO_train_856",
    "context": "Some students who major in computer science get up early. If a student gets up early, then he/she will study in the morning. All students studying in the morning are good at time management. All students good at time management are popular among students. James is not popular among students.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James majors in computer science.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMajor(x, y) ::: x majors in y.\nGetUpEarly(x) ::: x gets up early.\nStudy(x, y) ::: x studies in y.\nMorning(x) ::: x is in the morning.\nGoodAtTimeManagement(x) ::: x is good at time management.\nPopular(x, y) ::: x is popular among y.\nStudent(x) ::: x is a student.\nPremises:\n∃x (Student(x) ∧ Major(x, computerScience) ∧ GetUpEarly(x)) ::: Some students who major in computer science get up early.\n∀x (GetUpEarly(x) → Study(x, morning)) ::: If a student gets up early, then he/she will study in the morning.\n∀x (Study(x, morning) → GoodAtTimeManagement(x)) ::: All students studying in the morning are good at time management.\n∀x (GoodAtTimeManagement(x) → Popular(x, student)) ::: All students good at time management are popular among students.\n¬Popular(james, student) ::: James is not popular among students.\nConclusion:\nMajor(james, computerScience) ::: James majors in computer science.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent"
    ]
  },
  {
    "id": "FOLIO_train_857",
    "context": "Some students who major in computer science get up early. If a student gets up early, then he/she will study in the morning. All students studying in the morning are good at time management. All students good at time management are popular among students. James is not popular among students.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James majors in computer science and gets up early.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMajor(x, y) ::: x majors in y.\nGetUpEarly(x) ::: x gets up early.\nStudy(x, y) ::: x studies in y.\nMorning(x) ::: x is in the morning.\nGoodAtTimeManagement(x) ::: x is good at time management.\nPopular(x, y) ::: x is popular among y.\nStudent(x) ::: x is a student.\nPremises:\n∃x (Student(x) ∧ Major(x, computerScience) ∧ GetUpEarly(x)) ::: Some students who major in computer science get up early.\n∀x (GetUpEarly(x) → Study(x, morning)) ::: If a student gets up early, then he/she will study in the morning.\n∀x (Study(x, morning) → GoodAtTimeManagement(x)) ::: All students studying in the morning are good at time management.\n∀x (GoodAtTimeManagement(x) → Popular(x, student)) ::: All students good at time management are popular among students.\n¬Popular(james, student) ::: James is not popular among students.\nConclusion:\nMajor(james, computerScience) ∧ GetUpEarly(james) ::: James majors in computer science and gets up early.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent"
    ]
  },
  {
    "id": "FOLIO_train_858",
    "context": "Some students who major in computer science get up early. If a student gets up early, then he/she will study in the morning. All students studying in the morning are good at time management. All students good at time management are popular among students. James is not popular among students.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If James gets up early, then he majors in computer science.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMajor(x, y) ::: x majors in y.\nGetUpEarly(x) ::: x gets up early.\nStudy(x, y) ::: x studies in y.\nMorning(x) ::: x is in the morning.\nGoodAtTimeManagement(x) ::: x is good at time management.\nPopular(x, y) ::: x is popular among y.\nStudent(x) ::: x is a student.\nPremises:\n∃x (Student(x) ∧ Major(x, computerScience) ∧ GetUpEarly(x)) ::: Some students who major in computer science get up early.\n∀x (GetUpEarly(x) → Study(x, morning)) ::: If a student gets up early, then he/she will study in the morning.\n∀x (Study(x, morning) → GoodAtTimeManagement(x)) ::: All students studying in the morning are good at time management.\n∀x (GoodAtTimeManagement(x) → Popular(x, student)) ::: All students good at time management are popular among students.\n¬Popular(james, student) ::: James is not popular among students.\nConclusion:\nGetUpEarly(james) → Major(james, computerScience) ::: If James gets up early, then he majors in computer science.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on"
    ]
  },
  {
    "id": "FOLIO_train_859",
    "context": "There is no dog on the roof. If there is a dog on the roof something went wrong.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Something went wrong.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDog(x) ::: x is a dog.\nRoof(x) ::: x is a roof.\nOn(x, y) ::: x is on y.\nWrong(x) ::: x went wrong.\nPremises:\n¬∃x (Dog(x) ∧ Roof(x) ∧ On(x, x)) ::: There is no dog on the roof.\n∀x (On(x, x) → Wrong(x)) ::: If there is a dog on the roof something went wrong.\nConclusion:\nWrong(something) ::: Something went wrong.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly"
    ]
  },
  {
    "id": "FOLIO_train_860",
    "context": "Elephantopus is a genus of perennial plants in the daisy family. Elephantopus is widespread over much of Africa, southern Asia, Australia, and the Americas. Several species of Elephantopus are native to the southeastern United States. Elephantopus scaber is a traditional medicine.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Elephantopus is widespread over much of Australia and Southern Asia.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nElephantopus(x) ::: x is a genus of perennial plants in the daisy family.\nWidespread(x, y) ::: x is widespread over much of y.\nAfrica(x) ::: x is Africa.\nSouthernAsia(x) ::: x is Southern Asia.\nAustralia(x) ::: x is Australia.\nAmericas(x) ::: x is the Americas.\nSoutheasternUnitedStates(x) ::: x is the southeastern United States.\nTraditionalMedicine(x) ::: x is a traditional medicine.\nPremises:\nElephantopus(elephantopus) ∧ Widespread(elephantopus, africa) ∧ Widespread(elephantopus, southernAsia) ∧ Widespread(elephantopus, australia) ∧ Widespread(elephantopus, americas) ::: Elephantopus is a genus of perennial plants in the daisy family. Elephantopus is widespread over much of Africa, southern Asia, Australia, and the Americas.\n∃x (Elephantopus(x) ∧ SoutheasternUnitedStates(x)) ::: Several species of Elephantopus are native to the southeastern United States.\nElephantopusScaber(elephantopusScaber) ∧ TraditionalMedicine(elephantopusScaber) ::: Elephantopus scaber is a traditional medicine.\nConclusion:\nWidespread(elephantopus, australia) ∧ Widespread(elephantopus, southernAsia) ::: Elephantopus is widespread over much of Australia and Southern Asia.\n------"
    ]
  },
  {
    "id": "FOLIO_train_861",
    "context": "Elephantopus is a genus of perennial plants in the daisy family. Elephantopus is widespread over much of Africa, southern Asia, Australia, and the Americas. Several species of Elephantopus are native to the southeastern United States. Elephantopus scaber is a traditional medicine.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? No Elephantopus is native to the southeastern United States.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nElephantopus(x) ::: x is an Elephantopus.\nPerennial(x) ::: x is a perennial plant.\nDaisy(x) ::: x is a daisy.\nWidespread(x) ::: x is widespread over much of Africa, southern Asia, Australia, and the Americas.\nNative(x, y) ::: x is native to y.\nSoutheasternUnitedStates(x) ::: x is the southeastern United States.\nTraditionalMedicine(x) ::: x is a traditional medicine.\nPremises:\n∀x (Elephantopus(x) → Perennial(x)) ::: Elephantopus is a genus of perennial plants.\n∀x (Elephantopus(x) → Daisy(x)) ::: Elephantopus is a genus of daisies.\n∀x (Elephantopus(x) → Widespread(x)) ::: Elephantopus is widespread over much of Africa, southern Asia, Australia, and the Americas.\n∀x (Elephantopus(x) → Native(x, southeasternUnitedStates)) ::: Several species of Elephantopus are native to the southeastern United States.\nElephantopusScaber(x) ::: x is Elephantopus scaber.\nTraditionalMedicine(ElephantopusScaber) ::: Elephantopus scaber is a traditional medicine.\nConclusion:\n¬∃x (Elephantopus(x) ∧ Native(x, southeasternUnitedStates)) ::: No Elephantopus is native to the southeastern United States.\n------\nProblem:\nThe"
    ]
  },
  {
    "id": "FOLIO_train_862",
    "context": "Elephantopus is a genus of perennial plants in the daisy family. Elephantopus is widespread over much of Africa, southern Asia, Australia, and the Americas. Several species of Elephantopus are native to the southeastern United States. Elephantopus scaber is a traditional medicine.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Elephantopus is a traditional medicine.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nElephantopus(x) ::: x is a genus of perennial plants in the daisy family.\nWidespread(x) ::: x is widespread over much of Africa, southern Asia, Australia, and the Americas.\nNative(x, y) ::: x is native to y.\nTraditionalMedicine(x) ::: x is a traditional medicine.\nPremises:\nElephantopus(elephantopus) ∧ Widespread(elephantopus) ∧ Native(elephantopus, southeasternUnitedStates) ::: Elephantopus is a genus of perennial plants in the daisy family. Elephantopus is widespread over much of Africa, southern Asia, Australia, and the Americas. Several species of Elephantopus are native to the southeastern United States.\nTraditionalMedicine(elephantopusScaber) ::: Elephantopus scaber is a traditional medicine.\nConclusion:\nTraditionalMedicine(elephantopus) ::: Elephantopus is a traditional medicine.\n------\nProblem:\nThe 1996 Summer Olympics, officially known as the Games of the XXVI Olympiad, was an international multi-sport event that was celebrated in 1996 in Atlanta, Georgia, United States. The 1996 Summer Olympics was the first time the Summer Olympic Games had been held in the American South, and the third time overall for the United States, which had previously hosted the Summer Games in 1904 and 1932. The 1996 Summer Olympics was the largest Olympic Games in history, with over 10,000 athletes from 197 countries participating.\nQuestion:\nBased on the above information, is the following statement true, false,"
    ]
  },
  {
    "id": "FOLIO_train_863",
    "context": "All Yale dormitories are located on York Street. All buildings managed by Yale Housing are dormitories. All buildings operated by Yale Housing staff are managed by Yale Housing. No buildings open to students are established after 1800. All buildings located on York Street are open to students. Harkness is either a building operated by Yale Housing staff or located on York Street.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Harkness is a Yale dormitory.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nYaleDormitory(x) ::: x is a Yale dormitory.\nYorkStreet(x) ::: x is located on York Street.\nBuilding(x) ::: x is a building.\nYaleHousing(x) ::: x is managed by Yale Housing.\nDormitory(x) ::: x is a dormitory.\nOperated(x, y) ::: x is operated by y.\nStaff(x) ::: x is staff.\nEstablished(x, y) ::: x is established in year y.\nOpen(x, y) ::: x is open to y.\nStudent(x) ::: x is a student.\nPremises:\n∀x (YaleDormitory(x) → YorkStreet(x)) ::: All Yale dormitories are located on York Street.\n∀x (Building(x) ∧ YaleHousing(x) → Dormitory(x)) ::: All buildings managed by Yale Housing are dormitories.\n∀x (Building(x) ∧ Operated(x, YaleHousing) → YaleHousing(x)) ::: All buildings operated by Yale Housing staff are managed by Yale Housing.\n∀x (Building(x) ∧ Open(x, Student) → ¬Established(x, year1800)) ::: No buildings open to students are established after 1800.\n∀x (YorkStreet(x) → Open(x, Student)) ::: All buildings located on York Street are open to students.\nHarkness(harkness) ∧ (Operated(harkness, YaleHousing) ⊕ YorkStreet(harkness)) ::: H"
    ]
  },
  {
    "id": "FOLIO_train_864",
    "context": "All Yale dormitories are located on York Street. All buildings managed by Yale Housing are dormitories. All buildings operated by Yale Housing staff are managed by Yale Housing. No buildings open to students are established after 1800. All buildings located on York Street are open to students. Harkness is either a building operated by Yale Housing staff or located on York Street.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Harkness is not a Yale dormitory.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nYaleDormitory(x) ::: x is a Yale dormitory.\nLocatedOnYorkStreet(x) ::: x is located on York Street.\nBuildingManagedByYaleHousing(x) ::: x is a building managed by Yale Housing.\nDormitory(x) ::: x is a dormitory.\nBuildingOperatedByYaleHousingStaff(x) ::: x is a building operated by Yale Housing staff.\nManagedByYaleHousing(x) ::: x is managed by Yale Housing.\nEstablishedAfter1800(x) ::: x is established after 1800.\nOpenToStudents(x) ::: x is open to students.\nHarkness(x) ::: x is Harkness.\nPremises:\n∀x (YaleDormitory(x) → LocatedOnYorkStreet(x)) ::: All Yale dormitories are located on York Street.\n∀x (BuildingManagedByYaleHousing(x) → Dormitory(x)) ::: All buildings managed by Yale Housing are dormitories.\n∀x (BuildingOperatedByYaleHousingStaff(x) → ManagedByYaleHousing(x)) ::: All buildings operated by Yale Housing staff are managed by Yale Housing.\n∀x (EstablishedAfter1800(x) → ¬OpenToStudents(x)) ::: No buildings open to students are established after 1800.\n∀x (LocatedOnYorkStreet(x) → OpenToStudents(x)) ::: All buildings located on York Street are open to students.\n(BuildingOperatedByYaleHousingStaff(harkness) �"
    ]
  },
  {
    "id": "FOLIO_train_865",
    "context": "All Yale dormitories are located on York Street. All buildings managed by Yale Housing are dormitories. All buildings operated by Yale Housing staff are managed by Yale Housing. No buildings open to students are established after 1800. All buildings located on York Street are open to students. Harkness is either a building operated by Yale Housing staff or located on York Street.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Harkness is established after 1800.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nYaleDormitory(x) ::: x is a Yale dormitory.\nYorkStreet(x) ::: x is located on York Street.\nBuilding(x) ::: x is a building.\nDormitory(x) ::: x is a dormitory.\nYaleHousing(x) ::: x is managed by Yale Housing.\nYaleHousingStaff(x) ::: x is operated by Yale Housing staff.\nStudent(x) ::: x is open to students.\nEstablished(x, y) ::: x is established in year y.\nPremises:\n∀x (YaleDormitory(x) → YorkStreet(x)) ::: All Yale dormitories are located on York Street.\n∀x (Dormitory(x) → YaleHousing(x)) ::: All buildings managed by Yale Housing are dormitories.\n∀x (YaleHousingStaff(x) → YaleHousing(x)) ::: All buildings operated by Yale Housing staff are managed by Yale Housing.\n∀x (Student(x) → ¬Established(x, year1800)) ::: No buildings open to students are established after 1800.\n∀x (YorkStreet(x) → Student(x)) ::: All buildings located on York Street are open to students.\nHarkness(harkness) ∧ (YaleHousingStaff(harkness) ⊕ YorkStreet(harkness)) ::: Harkness is either a building operated by Yale Housing staff or located on York Street.\nConclusion:\nEstablished(harkness, year1800) ::: Harkness is established after 1800."
    ]
  },
  {
    "id": "FOLIO_train_866",
    "context": "All Yale dormitories are located on York Street. All buildings managed by Yale Housing are dormitories. All buildings operated by Yale Housing staff are managed by Yale Housing. No buildings open to students are established after 1800. All buildings located on York Street are open to students. Harkness is either a building operated by Yale Housing staff or located on York Street.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Harkness is established before 1800.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nYaleDormitory(x) ::: x is a Yale dormitory.\nYorkStreet(x) ::: x is located on York Street.\nBuilding(x) ::: x is a building.\nDormitory(x) ::: x is a dormitory.\nYaleHousing(x) ::: x is managed by Yale Housing.\nYaleHousingStaff(x) ::: x is operated by Yale Housing staff.\nStudent(x) ::: x is open to students.\nEstablished(x, y) ::: x is established in year y.\nHarkness(x) ::: x is Harkness.\nPremises:\n∀x (YaleDormitory(x) → YorkStreet(x)) ::: All Yale dormitories are located on York Street.\n∀x (Dormitory(x) → YaleHousing(x)) ::: All buildings managed by Yale Housing are dormitories.\n∀x (YaleHousingStaff(x) → YaleHousing(x)) ::: All buildings operated by Yale Housing staff are managed by Yale Housing.\n∀x (Student(x) → ¬Established(x, year1800)) ::: No buildings open to students are established after 1800.\n∀x (YorkStreet(x) → Student(x)) ::: All buildings located on York Street are open to students.\nHarkness(harkness) ∧ (YaleHousingStaff(harkness) ⊕ YorkStreet(harkness)) ::: Harkness is either a building operated by Yale Housing staff or located on York Street.\nConclusion:\nEstablished(harkness, year1800)"
    ]
  },
  {
    "id": "FOLIO_train_867",
    "context": "There are no mansion houses in an urban area. All skyscrapers reside in urban areas. Every creepy haunted house is in a mansion house. Every terrifying Halloween scare comes from a creepy haunted house. The Scream is a creepy haunted house or a terrifying Halloween scare.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Scream is a skyscraper.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMansionHouse(x) ::: x is a mansion house.\nUrbanArea(x) ::: x is an urban area.\nSkyscraper(x) ::: x is a skyscraper.\nCreepyHauntedHouse(x) ::: x is a creepy haunted house.\nTerrifyingHalloweenScare(x) ::: x is a terrifying Halloween scare.\nTheScream(x) ::: x is The Scream.\nPremises:\n¬∃x (MansionHouse(x) ∧ UrbanArea(x)) ::: There are no mansion houses in an urban area.\n∀x (Skyscraper(x) → UrbanArea(x)) ::: All skyscrapers reside in urban areas.\n∀x (CreepyHauntedHouse(x) → MansionHouse(x)) ::: Every creepy haunted house is in a mansion house.\n∀x (TerrifyingHalloweenScare(x) → CreepyHauntedHouse(x)) ::: Every terrifying Halloween scare comes from a creepy haunted house.\nTheScream(creepyHauntedHouse) ⊕ TheScream(terrifyingHalloweenScare) ::: The Scream is a creepy haunted house or a terrifying Halloween scare.\nConclusion:\nSkyscraper(theScream) ::: The Scream is a skyscraper.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. R"
    ]
  },
  {
    "id": "FOLIO_train_868",
    "context": "There are no mansion houses in an urban area. All skyscrapers reside in urban areas. Every creepy haunted house is in a mansion house. Every terrifying Halloween scare comes from a creepy haunted house. The Scream is a creepy haunted house or a terrifying Halloween scare.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Scream is not a skyscraper.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMansionHouse(x) ::: x is a mansion house.\nUrbanArea(x) ::: x is an urban area.\nSkyscraper(x) ::: x is a skyscraper.\nCreepyHauntedHouse(x) ::: x is a creepy haunted house.\nTerrifyingHalloweenScare(x) ::: x is a terrifying Halloween scare.\nScream(x) ::: x is the Scream.\nPremises:\n¬∃x (MansionHouse(x) ∧ UrbanArea(x)) ::: There are no mansion houses in an urban area.\n∀x (Skyscraper(x) → UrbanArea(x)) ::: All skyscrapers reside in urban areas.\n∀x (CreepyHauntedHouse(x) → MansionHouse(x)) ::: Every creepy haunted house is in a mansion house.\n∀x (TerrifyingHalloweenScare(x) → CreepyHauntedHouse(x)) ::: Every terrifying Halloween scare comes from a creepy haunted house.\nScream(scream) ∧ (CreepyHauntedHouse(scream) ⊕ TerrifyingHalloweenScare(scream)) ::: The Scream is a creepy haunted house or a terrifying Halloween scare.\nConclusion:\n¬Skyscraper(scream) ::: The Scream is not a skyscraper.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that c"
    ]
  },
  {
    "id": "FOLIO_train_869",
    "context": "There are no mansion houses in an urban area. All skyscrapers reside in urban areas. Every creepy haunted house is in a mansion house. Every terrifying Halloween scare comes from a creepy haunted house. The Scream is a creepy haunted house or a terrifying Halloween scare.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Scream is a terrifying Halloween scare.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMansionHouse(x) ::: x is a mansion house.\nUrbanArea(x) ::: x is an urban area.\nSkyscraper(x) ::: x is a skyscraper.\nCreepyHauntedHouse(x) ::: x is a creepy haunted house.\nTerrifyingHalloweenScare(x) ::: x is a terrifying Halloween scare.\nTheScream(x) ::: x is The Scream.\nPremises:\n¬∃x (MansionHouse(x) ∧ UrbanArea(x)) ::: There are no mansion houses in an urban area.\n∀x (Skyscraper(x) → UrbanArea(x)) ::: All skyscrapers reside in urban areas.\n∀x (CreepyHauntedHouse(x) → MansionHouse(x)) ::: Every creepy haunted house is in a mansion house.\n∀x (TerrifyingHalloweenScare(x) → CreepyHauntedHouse(x)) ::: Every terrifying Halloween scare comes from a creepy haunted house.\nTheScream(creepyHauntedHouse) ∨ TheScream(terrifyingHalloweenScare) ::: The Scream is a creepy haunted house or a terrifying Halloween scare.\nConclusion:\nTerrifyingHalloweenScare(theScream) ::: The Scream is a terrifying Halloween scare.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a"
    ]
  },
  {
    "id": "FOLIO_train_870",
    "context": "There are no mansion houses in an urban area. All skyscrapers reside in urban areas. Every creepy haunted house is in a mansion house. Every terrifying Halloween scare comes from a creepy haunted house. The Scream is a creepy haunted house or a terrifying Halloween scare.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Scream is either a skyscraper or a mansion house.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMansionHouse(x) ::: x is a mansion house.\nUrbanArea(x) ::: x is an urban area.\nSkyscraper(x) ::: x is a skyscraper.\nCreepyHauntedHouse(x) ::: x is a creepy haunted house.\nTerrifyingHalloweenScare(x) ::: x is a terrifying Halloween scare.\nTheScream(x) ::: x is The Scream.\nPremises:\n¬∃x (MansionHouse(x) ∧ UrbanArea(x)) ::: There are no mansion houses in an urban area.\n∀x (Skyscraper(x) → UrbanArea(x)) ::: All skyscrapers reside in urban areas.\n∀x (CreepyHauntedHouse(x) → MansionHouse(x)) ::: Every creepy haunted house is in a mansion house.\n∀x (TerrifyingHalloweenScare(x) → CreepyHauntedHouse(x)) ::: Every terrifying Halloween scare comes from a creepy haunted house.\nTheScream(creepyHauntedHouse) ⊕ TheScream(terrifyingHalloweenScare) ::: The Scream is a creepy haunted house or a terrifying Halloween scare.\nConclusion:\nTheScream(skyscraper) ⊕ TheScream(mansionHouse) ::: The Scream is either a skyscraper or a mansion house.\n------"
    ]
  },
  {
    "id": "FOLIO_train_871",
    "context": "There are no mansion houses in an urban area. All skyscrapers reside in urban areas. Every creepy haunted house is in a mansion house. Every terrifying Halloween scare comes from a creepy haunted house. The Scream is a creepy haunted house or a terrifying Halloween scare.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Scream is either a skyscraper or an urban area.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMansionHouse(x) ::: x is a mansion house.\nUrbanArea(x) ::: x is an urban area.\nSkyscraper(x) ::: x is a skyscraper.\nCreepyHauntedHouse(x) ::: x is a creepy haunted house.\nTerrifyingHalloweenScare(x) ::: x is a terrifying Halloween scare.\nTheScream(x) ::: x is The Scream.\nPremises:\n¬∃x (MansionHouse(x) ∧ UrbanArea(x)) ::: There are no mansion houses in an urban area.\n∀x (Skyscraper(x) → UrbanArea(x)) ::: All skyscrapers reside in urban areas.\n∀x (CreepyHauntedHouse(x) → MansionHouse(x)) ::: Every creepy haunted house is in a mansion house.\n∀x (TerrifyingHalloweenScare(x) → CreepyHauntedHouse(x)) ::: Every terrifying Halloween scare comes from a creepy haunted house.\n(CreepyHauntedHouse(theScream) ∨ TerrifyingHalloweenScare(theScream)) ::: The Scream is a creepy haunted house or a terrifying Halloween scare.\nConclusion:\n(Skyscraper(theScream) ∨ UrbanArea(theScream)) ::: The Scream is either a skyscraper or an urban area.\n------"
    ]
  },
  {
    "id": "FOLIO_train_872",
    "context": "There are no mansion houses in an urban area. All skyscrapers reside in urban areas. Every creepy haunted house is in a mansion house. Every terrifying Halloween scare comes from a creepy haunted house. The Scream is a creepy haunted house or a terrifying Halloween scare.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Scream is either a skyscraper or a creepy haunted house.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMansionHouse(x) ::: x is a mansion house.\nUrbanArea(x) ::: x is an urban area.\nSkyscraper(x) ::: x is a skyscraper.\nCreepyHauntedHouse(x) ::: x is a creepy haunted house.\nTerrifyingHalloweenScare(x) ::: x is a terrifying Halloween scare.\nTheScream(x) ::: x is The Scream.\nPremises:\n¬∃x (MansionHouse(x) ∧ UrbanArea(x)) ::: There are no mansion houses in an urban area.\n∀x (Skyscraper(x) → UrbanArea(x)) ::: All skyscrapers reside in urban areas.\n∀x (CreepyHauntedHouse(x) → MansionHouse(x)) ::: Every creepy haunted house is in a mansion house.\n∀x (TerrifyingHalloweenScare(x) → CreepyHauntedHouse(x)) ::: Every terrifying Halloween scare comes from a creepy haunted house.\n(CreepyHauntedHouse(theScream) ∨ TerrifyingHalloweenScare(theScream)) ::: The Scream is a creepy haunted house or a terrifying Halloween scare.\nConclusion:\nSkyscraper(theScream) ∨ CreepyHauntedHouse(theScream) ::: The Scream is either a skyscraper or a creep"
    ]
  },
  {
    "id": "FOLIO_train_873",
    "context": "There are no mansion houses in an urban area. All skyscrapers reside in urban areas. Every creepy haunted house is in a mansion house. Every terrifying Halloween scare comes from a creepy haunted house. The Scream is a creepy haunted house or a terrifying Halloween scare.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If The Scream is not a mansion in an urban area, then it is either a skyscraper or an urban area.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMansion(x) ::: x is a mansion.\nHouse(x) ::: x is a house.\nUrbanArea(x) ::: x is an urban area.\nSkyscraper(x) ::: x is a skyscraper.\nCreepy(x) ::: x is creepy.\nHaunted(x) ::: x is haunted.\nHalloweenScare(x) ::: x is a terrifying Halloween scare.\nPremises:\n∀x (Mansion(x) → House(x)) ::: There are no mansion houses in an urban area.\n∀x (Skyscraper(x) → UrbanArea(x)) ::: All skyscrapers reside in urban areas.\n∀x (Creepy(x) → Haunted(x)) ::: Every creepy haunted house is in a mansion house.\n∀x (Haunted(x) → Creepy(x)) ::: Every terrifying Halloween scare comes from a creepy haunted house.\nScream(x) ∧ (Creepy(x) ∨ HalloweenScare(x)) ::: The Scream is a creepy haunted house or a terrifying Halloween scare.\nConclusion:\n∀x (¬Mansion(x) → (Skyscraper(x) ∨ UrbanArea(x))) ::: If The Scream is not a mansion in an urban area, then it is either a skyscraper or an urban area.\n------\nProblem:\nAll people who regularly drink"
    ]
  },
  {
    "id": "FOLIO_train_874",
    "context": "There are no mansion houses in an urban area. All skyscrapers reside in urban areas. Every creepy haunted house is in a mansion house. Every terrifying Halloween scare comes from a creepy haunted house. The Scream is a creepy haunted house or a terrifying Halloween scare.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If The Scream is either a skyscraper or a mansion house, then it is in an urban area.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMansionHouse(x) ::: x is a mansion house.\nUrbanArea(x) ::: x is an urban area.\nSkyscraper(x) ::: x is a skyscraper.\nCreepyHauntedHouse(x) ::: x is a creepy haunted house.\nTerrifyingHalloweenScare(x) ::: x is a terrifying Halloween scare.\nScream(x) ::: x is The Scream.\nPremises:\n¬∃x (MansionHouse(x) ∧ UrbanArea(x)) ::: There are no mansion houses in an urban area.\n∀x (Skyscraper(x) → UrbanArea(x)) ::: All skyscrapers reside in urban areas.\n∀x (CreepyHauntedHouse(x) → MansionHouse(x)) ::: Every creepy haunted house is in a mansion house.\n∀x (TerrifyingHalloweenScare(x) → CreepyHauntedHouse(x)) ::: Every terrifying Halloween scare comes from a creepy haunted house.\nScream(theScream) ∧ (CreepyHauntedHouse(theScream) ⊕ TerrifyingHalloweenScare(theScream)) ::: The Scream is a creepy haunted house or a terrifying Halloween scare.\nConclusion:\n(Skyscraper(theScream) ∨ MansionHouse(theScream)) → UrbanArea(the"
    ]
  },
  {
    "id": "FOLIO_train_875",
    "context": "There are no mansion houses in an urban area. All skyscrapers reside in urban areas. Every creepy haunted house is in a mansion house. Every terrifying Halloween scare comes from a creepy haunted house. The Scream is a creepy haunted house or a terrifying Halloween scare.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If The Scream is either a skyscraper or a mansion house, then it is neither a creepy haunted house nor a terrifying Halloween scare.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMansionHouse(x) ::: x is a mansion house.\nUrbanArea(x) ::: x is an urban area.\nSkyscraper(x) ::: x is a skyscraper.\nCreepyHauntedHouse(x) ::: x is a creepy haunted house.\nTerrifyingHalloweenScare(x) ::: x is a terrifying Halloween scare.\nTheScream(x) ::: x is The Scream.\nPremises:\n¬∃x (MansionHouse(x) ∧ UrbanArea(x)) ::: There are no mansion houses in an urban area.\n∀x (Skyscraper(x) → UrbanArea(x)) ::: All skyscrapers reside in urban areas.\n∀x (CreepyHauntedHouse(x) → MansionHouse(x)) ::: Every creepy haunted house is in a mansion house.\n∀x (TerrifyingHalloweenScare(x) → CreepyHauntedHouse(x)) ::: Every terrifying Halloween scare comes from a creepy haunted house.\nTheScream(creepyHauntedHouse) ∨ TheScream(terrifyingHalloweenScare) ::: The Scream is a creepy haunted house or a terrifying Halloween scare.\nConclusion:\n(TheScream(skyscraper) ∨ TheScream(mansionHouse)) → (¬TheScream(creepyHauntedHouse) ��"
    ]
  },
  {
    "id": "FOLIO_train_876",
    "context": "There are no mansion houses in an urban area. All skyscrapers reside in urban areas. Every creepy haunted house is in a mansion house. Every terrifying Halloween scare comes from a creepy haunted house. The Scream is a creepy haunted house or a terrifying Halloween scare.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If The Scream is either a skyscraper or a creepy haunted house, then it is not a mansion house.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMansionHouse(x) ::: x is a mansion house.\nUrbanArea(x) ::: x is an urban area.\nSkyscraper(x) ::: x is a skyscraper.\nCreepyHauntedHouse(x) ::: x is a creepy haunted house.\nTerrifyingHalloweenScare(x) ::: x is a terrifying Halloween scare.\nScream(x) ::: x is The Scream.\nPremises:\n¬∃x (MansionHouse(x) ∧ UrbanArea(x)) ::: There are no mansion houses in an urban area.\n∀x (Skyscraper(x) → UrbanArea(x)) ::: All skyscrapers reside in urban areas.\n∀x (CreepyHauntedHouse(x) → MansionHouse(x)) ::: Every creepy haunted house is in a mansion house.\n∀x (TerrifyingHalloweenScare(x) → CreepyHauntedHouse(x)) ::: Every terrifying Halloween scare comes from a creepy haunted house.\nScream(theScream) ∧ (CreepyHauntedHouse(theScream) ⊕ TerrifyingHalloweenScare(theScream)) ::: The Scream is a creepy haunted house or a terrifying Halloween scare.\nConclusion:\n(Skyscraper(theScream) ∨ CreepyHauntedHouse(theScream)) →"
    ]
  },
  {
    "id": "FOLIO_train_877",
    "context": "Phuoc Binh national park is a national park in Vietnam. Any national park in Vietnam is classified as a nature reserve. There is a national park in Vietnam classified as a UNESCO World Heritage Site. All national parks in Vietnam are either managed by the Ministry of Agriculture or by the People's Committee. Phuoc Binh is not managed by the Ministry of Agriculture.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There is a nature reserve in Vietnam.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nNationalPark(x) ::: x is a national park.\nVietnam(x) ::: x is in Vietnam.\nClassified(x, y) ::: x is classified as y.\nNatureReserve(x) ::: x is a nature reserve.\nUNESCOWorldHeritageSite(x) ::: x is a UNESCO World Heritage Site.\nManaged(x, y) ::: x is managed by y.\nMinistryOfAgriculture(x) ::: x is the Ministry of Agriculture.\nPeopleCommittee(x) ::: x is the People's Committee.\nPremises:\nNationalPark(phuocBinh) ∧ Vietnam(phuocBinh) ::: Phuoc Binh national park is a national park in Vietnam.\n∀x (NationalPark(x) ∧ Vietnam(x) → Classified(x, natureReserve)) ::: Any national park in Vietnam is classified as a nature reserve.\n∃x (NationalPark(x) ∧ Vietnam(x) ∧ Classified(x, UNESCOWorldHeritageSite)) ::: There is a national park in Vietnam classified as a UNESCO World Heritage Site.\n∀x (NationalPark(x) ∧ Vietnam(x) → (Managed(x, MinistryOfAgriculture) ⊕ Managed(x, PeopleCommittee))) ::: All national parks in Vietnam are either managed by the Ministry of Agriculture or by the People's Committee.\n¬Managed(phuocBinh, MinistryOfAgriculture) ::: Ph"
    ]
  },
  {
    "id": "FOLIO_train_878",
    "context": "Phuoc Binh national park is a national park in Vietnam. Any national park in Vietnam is classified as a nature reserve. There is a national park in Vietnam classified as a UNESCO World Heritage Site. All national parks in Vietnam are either managed by the Ministry of Agriculture or by the People's Committee. Phuoc Binh is not managed by the Ministry of Agriculture.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Phuoc Binh is a UNESCO Heritage Site.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPhuocBinh(x) ::: x is Phuoc Binh.\nNationalPark(x) ::: x is a national park.\nVietnam(x) ::: x is in Vietnam.\nClassified(x, y) ::: x is classified as y.\nNatureReserve(x) ::: x is a nature reserve.\nUNESCOWorldHeritageSite(x) ::: x is a UNESCO World Heritage Site.\nManaged(x, y) ::: x is managed by y.\nMinistryOfAgriculture(x) ::: x is the Ministry of Agriculture.\nPeopleCommittee(x) ::: x is the People's Committee.\nPremises:\nNationalPark(phuocBinh) ∧ Vietnam(phuocBinh) ::: Phuoc Binh national park is a national park in Vietnam.\n∀x (NationalPark(x) ∧ Vietnam(x) → Classified(x, natureReserve)) ::: Any national park in Vietnam is classified as a nature reserve.\n∃x (NationalPark(x) ∧ Vietnam(x) ∧ Classified(x, UNESCOWorldHeritageSite)) ::: There is a national park in Vietnam classified as a UNESCO World Heritage Site.\n∀x (NationalPark(x) ∧ Vietnam(x) → (Managed(x, MinistryOfAgriculture) ⊕ Managed(x, PeopleCommittee))) ::: All national parks in Vietnam are either managed by the Ministry of Agriculture or by the People's Committee."
    ]
  },
  {
    "id": "FOLIO_train_879",
    "context": "Phuoc Binh national park is a national park in Vietnam. Any national park in Vietnam is classified as a nature reserve. There is a national park in Vietnam classified as a UNESCO World Heritage Site. All national parks in Vietnam are either managed by the Ministry of Agriculture or by the People's Committee. Phuoc Binh is not managed by the Ministry of Agriculture.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Phuoc Binh is managed by the People's Committee.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPhuocBinh(x) ::: x is Phuoc Binh.\nNationalPark(x) ::: x is a national park.\nVietnam(x) ::: x is in Vietnam.\nClassified(x, y) ::: x is classified as y.\nNatureReserve(x) ::: x is a nature reserve.\nUNESCOWorldHeritageSite(x) ::: x is a UNESCO World Heritage Site.\nManaged(x, y) ::: x is managed by y.\nMinistryOfAgriculture(x) ::: x is the Ministry of Agriculture.\nPeopleCommittee(x) ::: x is the People's Committee.\nPremises:\nPhuocBinh(phuocBinh) ∧ NationalPark(phuocBinh) ∧ Vietnam(phuocBinh) ::: Phuoc Binh national park is a national park in Vietnam.\n∀x (NationalPark(x) ∧ Vietnam(x) → Classified(x, natureReserve)) ::: Any national park in Vietnam is classified as a nature reserve.\n∃x (NationalPark(x) ∧ Vietnam(x) ∧ Classified(x, unescoWorldHeritageSite)) ::: There is a national park in Vietnam classified as a UNESCO World Heritage Site.\n∀x (NationalPark(x) ∧ Vietnam(x) → (Managed(x, ministryOfAgriculture) ⊕ Managed(x, peopleCommittee))) ::: All national parks in Vietnam are either"
    ]
  },
  {
    "id": "FOLIO_train_880",
    "context": "Greyhound racing is a competitive sport where spectators bet on greyhounds. Coursing is a part of Greyhound racing. Some competitive sports where spectators bet on things are banned. Coursing involves spectators betting on a hare being pursued by greyhounds. Hares are small game. If a competitive sport involves spectators betting on small game, then it is banned.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? No coursing is banned.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCoursing(x) ::: x is coursing.\nCompetitiveSport(x) ::: x is a competitive sport.\nSpectator(x) ::: x is a spectator.\nBet(x, y) ::: x bets on y.\nBanned(x) ::: x is banned.\nInvolve(x, y) ::: x involves y.\nPremises:\n∀x (Coursing(x) → CompetitiveSport(x)) ::: Coursing is a competitive sport.\n∀x (Coursing(x) → Spectator(x)) ::: Coursing involves spectators.\n∀x (Coursing(x) → Bet(x, hare)) ::: Coursing involves spectators betting on a hare.\n∀x (Coursing(x) → Pursue(x, hare)) ::: Coursing involves a hare being pursued by greyhounds.\n∀x (Hare(x) → SmallGame(x)) ::: Hares are small game.\n∀x (CompetitiveSport(x) ∧ Spectator(x) ∧ Bet(x, y) ∧ SmallGame(y)) → Banned(x) ::: If a competitive sport involves spectators betting on small game, then it is banned.\nConclusion:\n¬Banned(coursing) ::: No coursing is banned.\n------"
    ]
  },
  {
    "id": "FOLIO_train_881",
    "context": "Greyhound racing is a competitive sport where spectators bet on greyhounds. Coursing is a part of Greyhound racing. Some competitive sports where spectators bet on things are banned. Coursing involves spectators betting on a hare being pursued by greyhounds. Hares are small game. If a competitive sport involves spectators betting on small game, then it is banned.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Greyhound racing is a competitive sport.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCompetitiveSport(x) ::: x is a competitive sport.\nSpectatorBet(x) ::: x is a competitive sport where spectators bet on things.\nBanned(x) ::: x is banned.\nCoursing(x) ::: x is a part of Greyhound racing.\nInvolve(x, y) ::: x involves y.\nPursue(x, y) ::: x pursues y.\nSmallGame(x) ::: x is small game.\nPremises:\nCompetitiveSport(greyhoundRacing) ∧ Coursing(greyhoundRacing) ::: Greyhound racing is a competitive sport where spectators bet on greyhounds.\n∃x (CompetitiveSport(x) ∧ SpectatorBet(x) ∧ Banned(x)) ::: Some competitive sports where spectators bet on things are banned.\nCoursing(x) → SpectatorBet(x) ::: Coursing involves spectators betting on a hare being pursued by greyhounds.\nHare(x) ∧ Pursue(greyhound, x) ::: Hares are small game.\n∀x (Involve(x, SpectatorBet(x)) → Banned(x)) ::: If a competitive sport involves spectators betting on small game, then it is banned.\nConclusion:\nCompetitiveSport(greyhoundRacing"
    ]
  },
  {
    "id": "FOLIO_train_882",
    "context": "If a soccer player receives two yellow cards in one game, this player will be ejected from the rest of the game. If a soccer player receives one red card in one game, this player will be ejected from the rest of the game. Henry is a soccer player. In one game, Henry first receives one yellow card, then he receives one red card.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Henry will be ejected from the rest of the game.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSoccerPlayer(x) ::: x is a soccer player.\nReceive(x, y) ::: x receives y.\nYellowCard(x) ::: x is a yellow card.\nRedCard(x) ::: x is a red card.\nEject(x) ::: x is ejected from the rest of the game.\nPremises:\nSoccerPlayer(henry) ::: Henry is a soccer player.\n∀x (Receive(x, yellowCard) ∧ Receive(x, yellowCard) → Eject(x)) ::: If a soccer player receives two yellow cards in one game, this player will be ejected from the rest of the game.\n∀x (Receive(x, redCard) → Eject(x)) ::: If a soccer player receives one red card in one game, this player will be ejected from the rest of the game.\nReceive(henry, yellowCard) ∧ Receive(henry, redCard) ::: In one game, Henry first receives one yellow card, then he receives one red card.\nConclusion:\nEject(henry) ::: Henry will be ejected from the rest of the game.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. R"
    ]
  },
  {
    "id": "FOLIO_train_883",
    "context": "If a soccer player receives two yellow cards in one game, this player will be ejected from the rest of the game. If a soccer player receives one red card in one game, this player will be ejected from the rest of the game. Henry is a soccer player. In one game, Henry first receives one yellow card, then he receives one red card.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Henry will not be ejected from the rest of the game.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSoccerPlayer(x) ::: x is a soccer player.\nReceive(x, y) ::: x receives y.\nYellowCard(x) ::: x is a yellow card.\nRedCard(x) ::: x is a red card.\nEject(x) ::: x is ejected from the rest of the game.\nPremises:\nSoccerPlayer(henry) ::: Henry is a soccer player.\nReceive(henry, yellowCard) ∧ Receive(henry, redCard) ::: In one game, Henry first receives one yellow card, then he receives one red card.\n∀x (Receive(x, yellowCard) ∧ Receive(x, yellowCard) → Eject(x)) ::: If a soccer player receives two yellow cards in one game, this player will be ejected from the rest of the game.\n∀x (Receive(x, redCard) → Eject(x)) ::: If a soccer player receives one red card in one game, this player will be ejected from the rest of the game.\nConclusion:\n¬Eject(henry) ::: Henry will not be ejected from the rest of the game.\n------\nProblem:\nIf a person is a student, then this person is a person who is a student. If a person is a person who is a student, then this person is a person who is a student. If a person is a person who is a student,"
    ]
  },
  {
    "id": "FOLIO_train_884",
    "context": "All trees are plants. Some living things are trees.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Some living things are plants.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTree(x) ::: x is a tree.\nPlant(x) ::: x is a plant.\nLivingThing(x) ::: x is a living thing.\nPremises:\n∀x (Tree(x) → Plant(x)) ::: All trees are plants.\n∃x (LivingThing(x) ∧ Tree(x)) ::: Some living things are trees.\nConclusion:\n∃x (LivingThing(x) ∧ Plant(x)) ::: Some living things are plants.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either"
    ]
  },
  {
    "id": "FOLIO_train_885",
    "context": "Dagfinn is a given name. Notable people with the given name include Dagfinn Aarskog, Dagfinn Bakke and Dagfinn Dahl. Dagfinn Aarskog is a Norwegian physician. Dagfinn Dahl is a Norwegian barrister.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Dagfinn Aarskog is a notable person.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGivenName(x) ::: x is a given name.\nNotable(x) ::: x is a notable person.\nPhysician(x) ::: x is a physician.\nBarrister(x) ::: x is a barrister.\nPremises:\nGivenName(dagfinn) ::: Dagfinn is a given name.\nNotable(dagfinnAarskog) ∧ Notable(dagfinnBakke) ∧ Notable(dagfinnDahl) ::: Notable people with the given name include Dagfinn Aarskog, Dagfinn Bakke and Dagfinn Dahl.\nPhysician(dagfinnAarskog) ::: Dagfinn Aarskog is a Norwegian physician.\nBarrister(dagfinnDahl) ::: Dagfinn Dahl is a Norwegian barrister.\nConclusion:\nNotable(dagfinnAarskog) ::: Dagfinn Aarskog is a notable person.\n------\nProblem:\nThe 2019–2020 coronavirus pandemic is an ongoing pandemic of coronavirus disease 2019 (COVID-19), caused by severe acute respiratory syndrome coronavirus 2 (SARS-CoV-2). The outbreak was first identified in Wuhan, Hubei, China, in December 2019. The World Health Organization declared the outbreak a Public Health Emergency"
    ]
  },
  {
    "id": "FOLIO_train_886",
    "context": "Dagfinn is a given name. Notable people with the given name include Dagfinn Aarskog, Dagfinn Bakke and Dagfinn Dahl. Dagfinn Aarskog is a Norwegian physician. Dagfinn Dahl is a Norwegian barrister.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Dagfinn is Dagfinn Aarskog's given name.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGivenName(x) ::: x is a given name.\nNotable(x) ::: x is a notable person.\nPhysician(x) ::: x is a physician.\nBarrister(x) ::: x is a barrister.\nPremises:\nGivenName(dagfinn) ::: Dagfinn is a given name.\nNotable(dagfinnAarskog) ∧ Notable(dagfinnBakke) ∧ Notable(dagfinnDahl) ::: Notable people with the given name include Dagfinn Aarskog, Dagfinn Bakke and Dagfinn Dahl.\nPhysician(dagfinnAarskog) ::: Dagfinn Aarskog is a Norwegian physician.\nBarrister(dagfinnDahl) ::: Dagfinn Dahl is a Norwegian barrister.\nConclusion:\nGivenName(dagfinnAarskog) ::: Dagfinn is Dagfinn Aarskog's given name.\n------\nProblem:\nThe 2010 FIFA World Cup was the 19th FIFA World Cup, the world championship for men's national association football teams. It took place in South Africa from 11 June to 11 July 2010. The bidding process for hosting the tournament finals was open only to African nations. In 2004, the international football federation, FIFA, selected"
    ]
  },
  {
    "id": "FOLIO_train_887",
    "context": "Dagfinn is a given name. Notable people with the given name include Dagfinn Aarskog, Dagfinn Bakke and Dagfinn Dahl. Dagfinn Aarskog is a Norwegian physician. Dagfinn Dahl is a Norwegian barrister.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Dagfinn Dahl is a Norwegian physician.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGivenName(x) ::: x is a given name.\nNotable(x) ::: x is a notable person.\nPhysician(x) ::: x is a physician.\nBarrister(x) ::: x is a barrister.\nNorwegian(x) ::: x is a Norwegian person.\nPremises:\nGivenName(dagfinn) ::: Dagfinn is a given name.\nNotable(dagfinnAarskog) ∧ Notable(dagfinnBakke) ∧ Notable(dagfinnDahl) ::: Notable people with the given name include Dagfinn Aarskog, Dagfinn Bakke and Dagfinn Dahl.\nPhysician(dagfinnAarskog) ::: Dagfinn Aarskog is a Norwegian physician.\nBarrister(dagfinnDahl) ::: Dagfinn Dahl is a Norwegian barrister.\nConclusion:\nBarrister(dagfinnAarskog) ::: Dagfinn Aarskog is a barrister.\nNorwegian(dagfinnDahl) ::: Dagfinn Dahl is a Norwegian person.\nPhysician(dagfinnDahl) ::: Dagfinn Dahl is a Norwegian physician.\n------\nProblem:\nThe 2019–2020 coronavirus pandemic is an ongoing global pandemic of coronavirus disease"
    ]
  },
  {
    "id": "FOLIO_train_888",
    "context": "If entertainment is interesting, it will be popular. All popular things are well-known.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If entertainment is interesting, it will be well-known.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEntertainment(x) ::: x is entertainment.\nInteresting(x) ::: x is interesting.\nPopular(x) ::: x is popular.\nWellKnown(x) ::: x is well-known.\nPremises:\n∀x (Entertainment(x) → Interesting(x)) ::: If entertainment is interesting, it will be popular.\n∀x (Popular(x) → WellKnown(x)) ::: All popular things are well-known.\nConclusion:\n∀x (Entertainment(x) → WellKnown(x)) ::: If entertainment is interesting, it will be well-known.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on"
    ]
  },
  {
    "id": "FOLIO_train_889",
    "context": "It is not true that some giant language models do not have good performance. All language models with good performance are used by some researchers. If a language model is used by some researchers, it is popular. If BERT is a giant language model, then GPT-3 is also a giant language model. BERT is a giant language model.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? GPT-3 is popular.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGiantLanguageModel(x) ::: x is a giant language model.\nGoodPerformance(x) ::: x has good performance.\nUsedByResearchers(x) ::: x is used by some researchers.\nPopular(x) ::: x is popular.\nBERT(x) ::: x is BERT.\nGPT3(x) ::: x is GPT-3.\nPremises:\n¬∃x (GiantLanguageModel(x) ∧ ¬GoodPerformance(x)) ::: It is not true that some giant language models do not have good performance.\n∀x (GoodPerformance(x) → UsedByResearchers(x)) ::: All language models with good performance are used by some researchers.\n∀x (UsedByResearchers(x) → Popular(x)) ::: If a language model is used by some researchers, it is popular.\nBERT(gpt3) → GiantLanguageModel(gpt3) ::: If BERT is a giant language model, then GPT-3 is also a giant language model.\nBERT(bert) ::: BERT is a giant language model.\nConclusion:\nPopular(gpt3) ::: GPT-3 is popular.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that"
    ]
  },
  {
    "id": "FOLIO_train_890",
    "context": "St Johnstone is a Scottish team. St Johnstone is part of the Scottish Premiership. If a team is part of the league, it has joined the league. St Johnstone and Minsk are different teams. For two different teams, either one team wins or the other team wins. Minsk won against St Johnstone.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? At least one Scottish team has joined the Scottish Premiership.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nScottishTeam(x) ::: x is a Scottish team.\nPartOf(x, y) ::: x is part of y.\nLeague(x) ::: x is a league.\nJoin(x, y) ::: x has joined y.\nTeam(x) ::: x is a team.\nWin(x, y) ::: x wins against y.\nPremises:\nScottishTeam(stJohnstone) ∧ PartOf(stJohnstone, scottishPremiership) ::: St Johnstone is a Scottish team. St Johnstone is part of the Scottish Premiership.\n∀x (PartOf(x, y) → Join(x, y)) ::: If a team is part of the league, it has joined the league.\nScottishTeam(stJohnstone) ∧ BelarusianTeam(minsk) ∧ ¬(stJohnstone = minsk) ::: St Johnstone and Minsk are different teams.\n∀x ∀y (Team(x) ∧ Team(y) ∧ ¬(x = y) → (Win(x, y) ∨ Win(y, x))) ::: For two different teams, either one team wins or the other team wins.\nWin(minsk, stJohnstone) ::: Minsk won against St Johnstone.\nConclusion:\n∃x (ScottishTeam(x) ∧ Join(x, scottishPremiership)) ::: At least one Scottish team has joined the Scottish Premiership.\n------"
    ]
  },
  {
    "id": "FOLIO_train_891",
    "context": "St Johnstone is a Scottish team. St Johnstone is part of the Scottish Premiership. If a team is part of the league, it has joined the league. St Johnstone and Minsk are different teams. For two different teams, either one team wins or the other team wins. Minsk won against St Johnstone.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? St Johnstone won against Minsk.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTeam(x) ::: x is a team.\nScottishTeam(x) ::: x is a Scottish team.\nScottishPremiership(x) ::: x is part of the Scottish Premiership.\nLeague(x) ::: x is a league.\nJoin(x, y) ::: x has joined y.\nWin(x, y) ::: x wins against y.\nPremises:\nTeam(stJohnstone) ∧ ScottishTeam(stJohnstone) ∧ ScottishPremiership(stJohnstone) ::: St Johnstone is a Scottish team. St Johnstone is part of the Scottish Premiership.\n∀x (ScottishPremiership(x) → Join(x, ScottishPremiership)) ::: If a team is part of the league, it has joined the league.\nTeam(stJohnstone) ∧ Team(minsk) ∧ ¬(stJohnstone = minsk) ::: St Johnstone and Minsk are different teams.\n∀x ∀y (Team(x) ∧ Team(y) ∧ ¬(x = y) → (Win(x, y) ⊕ Win(y, x))) ::: For two different teams, either one team wins or the other team wins.\nWin(minsk, stJohnstone) ::: Minsk won against St Johnstone.\nConclusion:\nWin(stJohnstone, minsk) ::: St Johnstone won against Minsk.\n------\nProblem:\nThe 2018 FIFA"
    ]
  },
  {
    "id": "FOLIO_train_892",
    "context": "St Johnstone is a Scottish team. St Johnstone is part of the Scottish Premiership. If a team is part of the league, it has joined the league. St Johnstone and Minsk are different teams. For two different teams, either one team wins or the other team wins. Minsk won against St Johnstone.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Minsk joined the Scottish Premiership.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTeam(x) ::: x is a team.\nScottishTeam(x) ::: x is a Scottish team.\nScottishPremiership(x) ::: x is part of the Scottish Premiership.\nJoin(x, y) ::: x has joined y.\nWin(x, y) ::: x wins against y.\nDifferent(x, y) ::: x and y are different.\nPremises:\nTeam(stJohnstone) ∧ ScottishTeam(stJohnstone) ∧ ScottishPremiership(stJohnstone) ::: St Johnstone is a Scottish team. St Johnstone is part of the Scottish Premiership.\n∀x (ScottishPremiership(x) → Join(x, ScottishPremiership)) ::: If a team is part of the league, it has joined the league.\nDifferent(stJohnstone, minsk) ::: St Johnstone and Minsk are different teams.\n∀x ∀y (Different(x, y) → (Win(x, y) ⊕ Win(y, x))) ::: For two different teams, either one team wins or the other team wins.\nWin(minsk, stJohnstone) ::: Minsk won against St Johnstone.\nConclusion:\nJoin(minsk, ScottishPremiership) ::: Minsk joined the Scottish Premiership.\n------\nProblem:\nThe 2018 FIFA World Cup was the 21st FIFA World Cup, a quadrennial international football tournament contested by the men's national teams of"
    ]
  },
  {
    "id": "FOLIO_train_893",
    "context": "No Boeing-737 plane is equipped with more than 300 seats. All planes in Delta are of type Boeing-737. Planes are either equipped with more than 300 seats or have a capacity of 100 passengers. All planes with a capacity of 100 passengers are scheduled for a short-distance flight. All planes with a capacity of 100 passengers are produced before 2010. Jake32 is either a Boeing-737 plane or a plane in Delta. T10 is either a Boeing-737 plane and in Delta, or neither a Boeing-737 plane nor in Delta.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jake32 was produced before 2010 and is scheduled for a short-distance flight.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBoeing737(x) ::: x is a Boeing-737 plane.\nEquipped(x, y) ::: x is equipped with y seats.\nDelta(x) ::: x is a plane in Delta.\nPlane(x) ::: x is a plane.\nCapacity(x, y) ::: x has a capacity of y passengers.\nShortDistance(x) ::: x is scheduled for a short-distance flight.\nProduced(x, y) ::: x is produced in year y.\nPremises:\n∀x (Boeing737(x) → ¬Equipped(x, moreThan300)) ::: No Boeing-737 plane is equipped with more than 300 seats.\n∀x (Plane(x) → (Equipped(x, moreThan300) ⊕ Capacity(x, 100))) ::: Planes are either equipped with more than 300 seats or have a capacity of 100 passengers.\n∀x (Capacity(x, 100) → ShortDistance(x)) ::: All planes with a capacity of 100 passengers are scheduled for a short-distance flight.\n∀x (Capacity(x, 100) → Produced(x, before2010)) ::: All planes with a capacity of 100 passengers are produced before 2010.\nBoeing737(jake32) ∨ Delta(jake32) ::: Jake32 is either a Boeing-737 plane or a"
    ]
  },
  {
    "id": "FOLIO_train_894",
    "context": "No Boeing-737 plane is equipped with more than 300 seats. All planes in Delta are of type Boeing-737. Planes are either equipped with more than 300 seats or have a capacity of 100 passengers. All planes with a capacity of 100 passengers are scheduled for a short-distance flight. All planes with a capacity of 100 passengers are produced before 2010. Jake32 is either a Boeing-737 plane or a plane in Delta. T10 is either a Boeing-737 plane and in Delta, or neither a Boeing-737 plane nor in Delta.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jake32 is not produced before 2010 and is not scheduled for a short-distance flight.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBoeing737(x) ::: x is a Boeing-737 plane.\nDelta(x) ::: x is a plane in Delta.\nSeats(x) ::: x is equipped with more than 300 seats.\nCapacity(x, y) ::: x has a capacity of y passengers.\nShortDistance(x) ::: x is scheduled for a short-distance flight.\nProduced(x, y) ::: x is produced in year y.\nPremises:\n∀x (Boeing737(x) → ¬Seats(x)) ::: No Boeing-737 plane is equipped with more than 300 seats.\n∀x (Boeing737(x) ⊕ Delta(x)) ::: All planes in Delta are of type Boeing-737.\n∀x (Seats(x) ⊕ Capacity(x, 100)) ::: Planes are either equipped with more than 300 seats or have a capacity of 100 passengers.\n∀x (Capacity(x, 100) → ShortDistance(x)) ::: All planes with a capacity of 100 passengers are scheduled for a short-distance flight.\n∀x (Capacity(x, 100) → Produced(x, year2010)) ::: All planes with a capacity of 100 passengers are produced before 2010.\nJake32 ⊕ Delta(jake32) ::: Jake32 is either a Boeing-737 plane"
    ]
  },
  {
    "id": "FOLIO_train_895",
    "context": "No Boeing-737 plane is equipped with more than 300 seats. All planes in Delta are of type Boeing-737. Planes are either equipped with more than 300 seats or have a capacity of 100 passengers. All planes with a capacity of 100 passengers are scheduled for a short-distance flight. All planes with a capacity of 100 passengers are produced before 2010. Jake32 is either a Boeing-737 plane or a plane in Delta. T10 is either a Boeing-737 plane and in Delta, or neither a Boeing-737 plane nor in Delta.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jake32 is produced before 2010 or scheduled for a short-distance flight.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBoeing737(x) ::: x is a Boeing-737 plane.\nEquipped(x, y) ::: x is equipped with y seats.\nDelta(x) ::: x is a plane in Delta.\nPlane(x) ::: x is a plane.\nCapacity(x, y) ::: x has a capacity of y passengers.\nScheduled(x, y) ::: x is scheduled for a y-distance flight.\nProduced(x, y) ::: x is produced in year y.\nPremises:\n∀x (Boeing737(x) → ¬Equipped(x, moreThan300)) ::: No Boeing-737 plane is equipped with more than 300 seats.\n∀x (Plane(x) → (Equipped(x, moreThan300) ⊕ Capacity(x, 100))) ::: Planes are either equipped with more than 300 seats or have a capacity of 100 passengers.\n∀x (Capacity(x, 100) → Scheduled(x, shortDistance)) ::: All planes with a capacity of 100 passengers are scheduled for a short-distance flight.\n∀x (Capacity(x, 100) → Produced(x, before2010)) ::: All planes with a capacity of 100 passengers are produced before 2010.\nBoeing737(jake32) ∨ Delta(jake32) ::: Jake32 is either a Boeing-7"
    ]
  },
  {
    "id": "FOLIO_train_896",
    "context": "No Boeing-737 plane is equipped with more than 300 seats. All planes in Delta are of type Boeing-737. Planes are either equipped with more than 300 seats or have a capacity of 100 passengers. All planes with a capacity of 100 passengers are scheduled for a short-distance flight. All planes with a capacity of 100 passengers are produced before 2010. Jake32 is either a Boeing-737 plane or a plane in Delta. T10 is either a Boeing-737 plane and in Delta, or neither a Boeing-737 plane nor in Delta.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jake32 is neither produced before 2010 nor scheduled for a short-distance flight.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBoeing737(x) ::: x is a Boeing-737 plane.\nDelta(x) ::: x is a plane in Delta.\nSeats(x) ::: x is equipped with more than 300 seats.\nCapacity(x, y) ::: x has a capacity of y passengers.\nShortDistance(x) ::: x is scheduled for a short-distance flight.\nProduced(x, y) ::: x is produced in year y.\nPremises:\n∀x (Boeing737(x) → ¬Seats(x)) ::: No Boeing-737 plane is equipped with more than 300 seats.\n∀x (Boeing737(x) ⊕ Delta(x)) ::: Planes are either equipped with more than 300 seats or have a capacity of 100 passengers.\n∀x (Capacity(x, 100) → ShortDistance(x)) ::: All planes with a capacity of 100 passengers are scheduled for a short-distance flight.\n∀x (Capacity(x, 100) → Produced(x, year2010)) ::: All planes with a capacity of 100 passengers are produced before 2010.\nBoeing737(jake32) ⊕ Delta(jake32) ::: Jake32 is either a Boeing-737 plane or a plane in Delta.\nBoeing737(t10) ∧ Delta(t10) ⊕"
    ]
  },
  {
    "id": "FOLIO_train_897",
    "context": "The SAT test is wholly owned and developed by the College Board. The SAT test is intended to assess student's readiness for college. The SAT was originally designed not to be aligned with high school curricula. Several adjustments were made for the version of the SAT introduced in 2016 to reflect more closely on what students learn in high school.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Since 2016 the SAT has been better aligned with high school curricula.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSAT(x) ::: x is the SAT test.\nWhollyOwned(x, y) ::: x is wholly owned by y.\nDeveloped(x, y) ::: x is developed by y.\nIntended(x, y) ::: x is intended to assess y.\nAssess(x, y) ::: x assesses y.\nReadiness(x, y) ::: x is ready for y.\nCollege(x) ::: x is a college.\nDesigned(x, y) ::: x is designed not to be aligned with y.\nAdjustment(x, y) ::: x is an adjustment made for y.\nVersion(x, y) ::: x is a version of y.\nReflect(x, y) ::: x reflects y.\nClosely(x, y) ::: x is closely on y.\nHighSchool(x) ::: x is a high school.\nCurriculum(x) ::: x is a curriculum.\nPremises:\nWhollyOwned(collegeBoard, sat) ∧ Developed(collegeBoard, sat) ::: The SAT test is wholly owned and developed by the College Board.\nIntended(sat, readiness) ∧ Assess(sat, readiness) ∧ Readiness(student, college) ::: The SAT test is intended to assess student's readiness for college.\nDesigned(sat, highSchoolCurriculum) ∧ Adjustment(adjustment, sat) ∧ Version(version, sat) ∧ Reflect(version, highSchool"
    ]
  },
  {
    "id": "FOLIO_train_898",
    "context": "The SAT test is wholly owned and developed by the College Board. The SAT test is intended to assess student's readiness for college. The SAT was originally designed not to be aligned with high school curricula. Several adjustments were made for the version of the SAT introduced in 2016 to reflect more closely on what students learn in high school.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The SAT test is owned by the College Board and multiple other third parties.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSAT(x) ::: x is the SAT test.\nOwn(x, y) ::: x is owned by y.\nDevelop(x, y) ::: x is developed by y.\nAssess(x, y) ::: x is intended to assess y.\nReadiness(x) ::: x is readiness for college.\nAlign(x, y) ::: x is aligned with y.\nCurriculum(x) ::: x is a high school curriculum.\nAdjust(x, y) ::: x is adjusted for y.\nPremises:\nOwn(collegeBoard, SAT) ∧ Develop(collegeBoard, SAT) ::: The SAT test is wholly owned and developed by the College Board.\nAssess(SAT, readiness) ::: The SAT test is intended to assess student's readiness for college.\n¬Align(SAT, curriculum) ::: The SAT was originally designed not to be aligned with high school curricula.\nAdjust(SAT, year2016) ::: Several adjustments were made for the version of the SAT introduced in 2016.\nConclusion:\nOwn(collegeBoard, SAT) ∧ Own(otherParties, SAT) ::: The SAT test is owned by the College Board and multiple other third parties.\n------\nProblem:\nThe SAT test is wholly owned and developed by the College Board. The SAT test is intended to assess student's readiness for college. The SAT was originally designed not to be aligned with high school curricula. Several adjustments were made for the version of the SAT"
    ]
  },
  {
    "id": "FOLIO_train_899",
    "context": "The SAT test is wholly owned and developed by the College Board. The SAT test is intended to assess student's readiness for college. The SAT was originally designed not to be aligned with high school curricula. Several adjustments were made for the version of the SAT introduced in 2016 to reflect more closely on what students learn in high school.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The SAT test assesses student's math skills.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSAT(x) ::: x is the SAT test.\nWhollyOwned(x, y) ::: x is wholly owned by y.\nDeveloped(x, y) ::: x is developed by y.\nAssess(x, y) ::: x assesses y.\nIntended(x, y) ::: x is intended to y.\nReflect(x, y) ::: x reflects y.\nAdjustment(x) ::: x is an adjustment.\nPremises:\nWhollyOwned(collegeBoard, sat) ∧ Developed(collegeBoard, sat) ::: The SAT test is wholly owned and developed by the College Board.\nIntended(sat, assessStudentReadinessForCollege) ::: The SAT test is intended to assess student's readiness for college.\n¬Reflect(sat, highSchoolCurriculum) ::: The SAT was originally designed not to be aligned with high school curricula.\nAdjustment(adjustment1) ∧ Adjustment(adjustment2) ∧ Adjustment(adjustment3) ∧ Adjustment(adjustment4) ∧ Adjustment(adjustment5) ∧ Adjustment(adjustment6) ∧ Adjustment(adjustment7) ∧ Adjustment(adjustment8) ∧ Adjustment(adjustment9) ∧ Adjustment(adjustment10) ∧ Adjustment(adjustment11) ∧ Adjustment(adjustment12) ∧ Adjust"
    ]
  },
  {
    "id": "FOLIO_train_900",
    "context": "Rafa Nadal was born in Mallorca. Rafa Nadal is a professional tennis player. Nadal's win ratio is higher than 80%. All players in the Big 3 are professionals who have a high win ratio.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Nadal was not born in Mallorca.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBorn(x, y) ::: x was born in y.\nProfessional(x) ::: x is a professional.\nPlayer(x) ::: x is a player.\nWinRatio(x, y) ::: x has a win ratio of y.\nBig3(x) ::: x is in the Big 3.\nPremises:\nBorn(rafaNadal, mallorca) ::: Rafa Nadal was born in Mallorca.\nProfessional(rafaNadal) ∧ Player(rafaNadal) ::: Rafa Nadal is a professional tennis player.\nWinRatio(rafaNadal, higherThan80Percent) ::: Nadal's win ratio is higher than 80%.\n∀x (Big3(x) → Professional(x) ∧ Player(x) ∧ WinRatio(x, high)) ::: All players in the Big 3 are professionals who have a high win ratio.\nConclusion:\n¬Born(rafaNadal, mallorca) ::: Nadal was not born in Mallorca.\n------"
    ]
  },
  {
    "id": "FOLIO_train_901",
    "context": "Rafa Nadal was born in Mallorca. Rafa Nadal is a professional tennis player. Nadal's win ratio is higher than 80%. All players in the Big 3 are professionals who have a high win ratio.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Nadal is in the Big 3.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBorn(x, y) ::: x was born in y.\nProfessional(x) ::: x is a professional.\nPlayer(x) ::: x is a player.\nWinRatio(x, y) ::: x has a win ratio of y.\nBig3(x) ::: x is in the Big 3.\nPremises:\nBorn(rafaNadal, mallorca) ::: Rafa Nadal was born in Mallorca.\nProfessional(rafaNadal) ∧ Player(rafaNadal) ::: Rafa Nadal is a professional tennis player.\nWinRatio(rafaNadal, higherThan80Percent) ::: Nadal's win ratio is higher than 80%.\n∀x (Big3(x) → Professional(x) ∧ Player(x) ∧ WinRatio(x, high)) ::: All players in the Big 3 are professionals who have a high win ratio.\nConclusion:\nBig3(rafaNadal) ::: Nadal is in the Big 3.\n------\nProblem:\nAll people"
    ]
  },
  {
    "id": "FOLIO_train_902",
    "context": "Rafa Nadal was born in Mallorca. Rafa Nadal is a professional tennis player. Nadal's win ratio is higher than 80%. All players in the Big 3 are professionals who have a high win ratio.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Nadal is the greatest player of all time.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBorn(x, y) ::: x was born in y.\nProfessional(x) ::: x is a professional.\nPlayer(x) ::: x is a player.\nWinRatio(x, y) ::: x has a win ratio of y.\nBig3(x) ::: x is in the Big 3.\nGreatest(x) ::: x is the greatest of all time.\nPremises:\nBorn(rafaNadal, mallorca) ::: Rafa Nadal was born in Mallorca.\nProfessional(rafaNadal) ::: Rafa Nadal is a professional.\nPlayer(rafaNadal) ::: Rafa Nadal is a player.\nWinRatio(rafaNadal, higherThan80Percent) ::: Nadal's win ratio is higher than 80%.\n∀x (Big3(x) → (Professional(x) ∧ WinRatio(x, high))) ::: All players in the Big 3 are professionals who have a high win ratio.\nConclusion:\nGreatest(rafaNadal) ::: Nad"
    ]
  },
  {
    "id": "FOLIO_train_903",
    "context": "No cookie is healthy. All oreos are cookies.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? All cookies are delicious.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCookie(x) ::: x is a cookie.\nHealthy(x) ::: x is healthy.\nOreo(x) ::: x is an oreo.\nDelicious(x) ::: x is delicious.\nPremises:\n∀x (Cookie(x) → ¬Healthy(x)) ::: No cookie is healthy.\n∀x (Oreo(x) → Cookie(x)) ::: All oreos are cookies.\nConclusion:\n∀x (Cookie(x) → Delicious(x)) ::: All cookies are delicious.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on c"
    ]
  },
  {
    "id": "FOLIO_train_904",
    "context": "No animals are plants. All humans are animals. All pupils are human. All flowers are plants. If Jack is a human or a flower, then Jack is a human and a flower.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jack is a pupil.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAnimal(x) ::: x is an animal.\nHuman(x) ::: x is a human.\nPupil(x) ::: x is a pupil.\nPlant(x) ::: x is a plant.\nFlower(x) ::: x is a flower.\nJack(x) ::: x is Jack.\nPremises:\n¬∃x (Animal(x) ∧ Plant(x)) ::: No animals are plants.\n∀x (Human(x) → Animal(x)) ::: All humans are animals.\n∀x (Pupil(x) → Human(x)) ::: All pupils are human.\n∀x (Flower(x) → Plant(x)) ::: All flowers are plants.\n(Human(jack) ∨ Flower(jack)) → (Human(jack) ∧ Flower(jack)) ::: If Jack is a human or a flower, then Jack is a human and a flower.\nConclusion:\nPupil(jack) ::: Jack is a pupil.\n------\nProblem:\nAll people who regularly drink"
    ]
  },
  {
    "id": "FOLIO_train_905",
    "context": "No animals are plants. All humans are animals. All pupils are human. All flowers are plants. If Jack is a human or a flower, then Jack is a human and a flower.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jack is not a pupil.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAnimal(x) ::: x is an animal.\nHuman(x) ::: x is a human.\nPupil(x) ::: x is a pupil.\nPlant(x) ::: x is a plant.\nFlower(x) ::: x is a flower.\nJack(x) ::: x is Jack.\nPremises:\n¬∃x (Animal(x) ∧ Plant(x)) ::: No animals are plants.\n∀x (Human(x) → Animal(x)) ::: All humans are animals.\n∀x (Pupil(x) → Human(x)) ::: All pupils are human.\n∀x (Flower(x) → Plant(x)) ::: All flowers are plants.\n(Human(jack) ∨ Flower(jack)) → (Human(jack) ∧ Flower(jack)) ::: If Jack is a human or a flower, then Jack is a human and a flower.\nConclusion:\n¬Pupil(jack) ::: Jack is not a pupil.\n------\nProblem:\nAll people who"
    ]
  },
  {
    "id": "FOLIO_train_906",
    "context": "No animals are plants. All humans are animals. All pupils are human. All flowers are plants. If Jack is a human or a flower, then Jack is a human and a flower.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jack is a plant.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAnimal(x) ::: x is an animal.\nHuman(x) ::: x is a human.\nPupil(x) ::: x is a pupil.\nPlant(x) ::: x is a plant.\nFlower(x) ::: x is a flower.\nJack(x) ::: x is Jack.\nPremises:\n¬∃x (Animal(x) ∧ Plant(x)) ::: No animals are plants.\n∀x (Human(x) → Animal(x)) ::: All humans are animals.\n∀x (Pupil(x) → Human(x)) ::: All pupils are human.\n∀x (Flower(x) → Plant(x)) ::: All flowers are plants.\n(Human(jack) ∨ Flower(jack)) → (Human(jack) ∧ Flower(jack)) ::: If Jack is a human or a flower, then Jack is a human and a flower.\nConclusion:\nPlant(jack) ::: Jack is a plant.\n------\nProblem:\nAll people who regularly drink coffee are"
    ]
  },
  {
    "id": "FOLIO_train_907",
    "context": "No animals are plants. All humans are animals. All pupils are human. All flowers are plants. If Jack is a human or a flower, then Jack is a human and a flower.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Jack is a human, then Jack is not a pupil.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAnimal(x) ::: x is an animal.\nHuman(x) ::: x is a human.\nPupil(x) ::: x is a pupil.\nPlant(x) ::: x is a plant.\nFlower(x) ::: x is a flower.\nJack(x) ::: x is Jack.\nPremises:\n¬∃x (Animal(x) ∧ Plant(x)) ::: No animals are plants.\n∀x (Human(x) → Animal(x)) ::: All humans are animals.\n∀x (Pupil(x) → Human(x)) ::: All pupils are human.\n∀x (Flower(x) → Plant(x)) ::: All flowers are plants.\n(Human(jack) ∨ Flower(jack)) → (Human(jack) ∧ Flower(jack)) ::: If Jack is a human or a flower, then Jack is a human and a flower.\nConclusion:\n(Human(jack) → ¬Pupil(jack)) ::: If Jack is a human, then Jack is"
    ]
  },
  {
    "id": "FOLIO_train_908",
    "context": "No shoes are food. All slippers are shoes. A thing is either food or clothes. No wearable things are airtight. All clothes are wearable. If a watch is not airtight and clothes, then a watch is either both airtight and clothes, or neither airtight nor clothes.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Watch is a wearable.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nShoes(x) ::: x is a shoe.\nFood(x) ::: x is food.\nSlippers(x) ::: x is a slipper.\nClothes(x) ::: x is clothes.\nWearable(x) ::: x is wearable.\nAirtight(x) ::: x is airtight.\nWatch(x) ::: x is a watch.\nPremises:\n∀x (Shoes(x) → ¬Food(x)) ::: No shoes are food.\n∀x (Slippers(x) → Shoes(x)) ::: All slippers are shoes.\n∀x (x = Food(x) ⊕ Clothes(x)) ::: A thing is either food or clothes.\n∀x (Wearable(x) → ¬Airtight(x)) ::: No wearable things are airtight.\n∀x (Clothes(x) → Wearable(x)) ::: All clothes are wearable.\n¬(Airtight(watch) ∧ Clothes(watch)) → (Airtight(watch"
    ]
  },
  {
    "id": "FOLIO_train_909",
    "context": "No shoes are food. All slippers are shoes. A thing is either food or clothes. No wearable things are airtight. All clothes are wearable. If a watch is not airtight and clothes, then a watch is either both airtight and clothes, or neither airtight nor clothes.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Watch is a slipper.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nShoes(x) ::: x is a shoe.\nFood(x) ::: x is food.\nSlippers(x) ::: x is a slipper.\nClothes(x) ::: x is clothes.\nWearable(x) ::: x is wearable.\nAirtight(x) ::: x is airtight.\nWatch(x) ::: x is a watch.\nPremises:\n∀x (Shoes(x) → ¬Food(x)) ::: No shoes are food.\n∀x (Slippers(x) → Shoes(x)) ::: All slippers are shoes.\n∀x (x = Food(x) ⊕ Clothes(x)) ::: A thing is either food or clothes.\n∀x (Wearable(x) → ¬Airtight(x)) ::: No wearable things are airtight.\n∀x (Clothes(x) → Wearable(x)) ::: All clothes are wearable.\n¬(Airtight(watch) ∧ Clothes(watch)) → (Airtight(watch"
    ]
  },
  {
    "id": "FOLIO_train_910",
    "context": "No shoes are food. All slippers are shoes. A thing is either food or clothes. No wearable things are airtight. All clothes are wearable. If a watch is not airtight and clothes, then a watch is either both airtight and clothes, or neither airtight nor clothes.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Watch is neither airtight nor a slipper.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nShoe(x) ::: x is a shoe.\nFood(x) ::: x is food.\nSlipper(x) ::: x is a slipper.\nClothes(x) ::: x is clothes.\nWearable(x) ::: x is wearable.\nAirtight(x) ::: x is airtight.\nWatch(x) ::: x is a watch.\nPremises:\n∀x (Shoe(x) → ¬Food(x)) ::: No shoes are food.\n∀x (Slipper(x) → Shoe(x)) ::: All slippers are shoes.\n∀x (x = Food(x) ⊕ Clothes(x)) ::: A thing is either food or clothes.\n∀x (Wearable(x) → ¬Airtight(x)) ::: No wearable things are airtight.\n∀x (Clothes(x) → Wearable(x)) ::: All clothes are wearable.\n¬(Airtight(watch) ∧ Clothes(watch)) → (Airtight(watch) ∧ Clothes(watch)) ⊕ ¬(Airtight(watch) ∨ Clothes(watch)) ::: If a watch is not airtight and clothes, then a watch is either both airtight and clothes, or neither airtight nor clothes.\nConclusion:\n¬(Airtight(watch) ∧ Slipper(watch)) ::: Watch is neither airtight nor a slipper.\n------"
    ]
  },
  {
    "id": "FOLIO_train_911",
    "context": "An Olympian is a person who trains for an Olympic sport and goes to the Olympics. Carlos Reyes trains for an Olympic sport. Carlos Reyes went to the Olympics. Carlos Reyes is a welterweight. Heavy weights are not welterweights.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Carlos Reyes is an Olympian.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nOlympian(x) ::: x is an Olympian.\nTrain(x, y) ::: x trains for y.\nGo(x, y) ::: x goes to y.\nOlympics(x) ::: x is the Olympics.\nWelterweight(x) ::: x is a welterweight.\nHeavyweight(x) ::: x is a heavyweight.\nPremises:\nOlympian(x) ↔ (Train(x, y) ∧ Go(x, Olympics(y))) ::: An Olympian is a person who trains for an Olympic sport and goes to the Olympics.\nTrain(carlos, y) ::: Carlos Reyes trains for an Olympic sport.\nGo(carlos, Olympics(y)) ::: Carlos Reyes went to the Olympics.\nWelterweight(carlos) ::: Carlos Reyes is a welterweight.\n¬∃x (Heavyweight(x) ∧ Welterweight(x)) ::: Heavy weights are not welterweights.\nConclusion:\nOlympian(carlos) ::: Carlos Reyes is an Olympian.\n------\nProblem:\nA person who is a student is a person who is enrolled in a school. A person who is a student is a person who is enrolled in a school. A person who is a student is a person who is enrolled in a school. A person who is a student is a person who is enrolled in a school. A person who is a student is a person who is enrolled in a school. A person who is a student is a person"
    ]
  },
  {
    "id": "FOLIO_train_912",
    "context": "An Olympian is a person who trains for an Olympic sport and goes to the Olympics. Carlos Reyes trains for an Olympic sport. Carlos Reyes went to the Olympics. Carlos Reyes is a welterweight. Heavy weights are not welterweights.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Carlos Reyes is a heavy weight.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nOlympian(x) ::: x is an Olympian.\nTrain(x, y) ::: x trains for y.\nGo(x, y) ::: x goes to y.\nOlympics(x) ::: x is the Olympics.\nWelterweight(x) ::: x is a welterweight.\nHeavyweight(x) ::: x is a heavy weight.\nPremises:\nOlympian(carlos) ::: An Olympian is a person who trains for an Olympic sport and goes to the Olympics.\nTrain(carlos, olympicSport) ::: Carlos Reyes trains for an Olympic sport.\nGo(carlos, olympics) ::: Carlos Reyes went to the Olympics.\nWelterweight(carlos) ::: Carlos Reyes is a welterweight.\nHeavyweight(x) → ¬Welterweight(x) ::: Heavy weights are not welterweights.\nConclusion:\nHeavyweight(carlos) ::: Carlos Reyes is a heavy weight.\n------\nProblem:\nA person who is a student is a person who is enrolled in a school. A person who is a student is a person who is enrolled in a school. A person who is a student is a person who is enrolled in a school. A person who is a student is a person who is enrolled in a school. A person who is a student is a person who is enrolled in a school. A person who is a student is a person who is enrolled in a school. A person who is a student is a person who is enrolled in a school"
    ]
  },
  {
    "id": "FOLIO_train_913",
    "context": "An Olympian is a person who trains for an Olympic sport and goes to the Olympics. Carlos Reyes trains for an Olympic sport. Carlos Reyes went to the Olympics. Carlos Reyes is a welterweight. Heavy weights are not welterweights.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Carlos Reyes won an Olympic medal.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nOlympian(x) ::: x is an Olympian.\nTrain(x, y) ::: x trains for y.\nGo(x, y) ::: x goes to y.\nOlympics(x) ::: x is the Olympics.\nWelterweight(x) ::: x is a welterweight.\nHeavyweight(x) ::: x is a heavyweight.\nPremises:\nOlympian(carlos) ::: An Olympian is a person who trains for an Olympic sport and goes to the Olympics.\nTrain(carlos, olympicSport) ::: Carlos Reyes trains for an Olympic sport.\nGo(carlos, olympics) ::: Carlos Reyes went to the Olympics.\nWelterweight(carlos) ::: Carlos Reyes is a welterweight.\n¬Heavyweight(x) ::: Heavy weights are not welterweights.\nConclusion:\nWin(carlos, olympicMedal) ::: Carlos Reyes won an Olympic medal.\n------\nProblem:\nA person who is a student is a person who is enrolled in a school. A person who is a student is a person who is enrolled in a school. A person who is a student is a person who is enrolled in a school. A person who is a student is a person who is enrolled in a school. A person who is a student is a person who is enrolled in a school. A person who is a student is a person who is enrolled in a school. A person who is a student is a person who is enrolled in a school. A person who is a"
    ]
  },
  {
    "id": "FOLIO_train_914",
    "context": "If people have a lot of decorations in their room, they cannot pack and move out of their rooms very easily. If people have high ambitions and future career goals, then they can pack and move out of their rooms very easily. If people are big fans of pop bands and singers, then they have a lot of decorations in their room. All young teenage girls who attend college are big fans of pop bands and singers. If Sam has high ambitions and future career goals, then Sam is a big fan of pop bands and singers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Sam is a young teenage girl who attends college.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDecorations(x) ::: x has a lot of decorations in their room.\nPack(x) ::: x can pack and move out of their room very easily.\nAmbition(x) ::: x has high ambitions and future career goals.\nFan(x, y) ::: x is a big fan of y.\nGirl(x) ::: x is a young teenage girl.\nCollege(x) ::: x attends college.\nPremises:\n∀x (Decorations(x) → ¬Pack(x)) ::: If people have a lot of decorations in their room, they cannot pack and move out of their rooms very easily.\n∀x (Ambition(x) → Pack(x)) ::: If people have high ambitions and future career goals, then they can pack and move out of their rooms very easily.\n∀x (Fan(x, popBandsAndSingers) → Decorations(x)) ::: If people are big fans of pop bands and singers, then they have a lot of decorations in their room.\n∀x (Girl(x) ∧ College(x) → Fan(x, popBandsAndSingers)) ::: All young teenage girls who attend college are big fans of pop bands and singers.\nAmbition(sam) → Fan(sam, popBandsAndSingers) ::: If Sam has high ambitions and future career goals, then Sam is a big fan of pop bands and singers.\nConclusion:\nGirl(sam) ∧ College(sam"
    ]
  },
  {
    "id": "FOLIO_train_915",
    "context": "If people have a lot of decorations in their room, they cannot pack and move out of their rooms very easily. If people have high ambitions and future career goals, then they can pack and move out of their rooms very easily. If people are big fans of pop bands and singers, then they have a lot of decorations in their room. All young teenage girls who attend college are big fans of pop bands and singers. If Sam has high ambitions and future career goals, then Sam is a big fan of pop bands and singers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Sam is not a young teenage girl who attends college.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDecorations(x) ::: x has a lot of decorations in their room.\nPack(x) ::: x can pack and move out of their room very easily.\nAmbition(x) ::: x has high ambitions and future career goals.\nFan(x) ::: x is a big fan of pop bands and singers.\nGirl(x) ::: x is a young teenage girl.\nCollege(x) ::: x attends college.\nSam(x) ::: x is Sam.\nPremises:\n∀x (Decorations(x) → ¬Pack(x)) ::: If people have a lot of decorations in their room, they cannot pack and move out of their rooms very easily.\n∀x (Ambition(x) → Pack(x)) ::: If people have high ambitions and future career goals, then they can pack and move out of their rooms very easily.\n∀x (Fan(x) → Decorations(x)) ::: If people are big fans of pop bands and singers, then they have a lot of decorations in their room.\n∀x (Girl(x) ∧ College(x) → Fan(x)) ::: All young teenage girls who attend college are big fans of pop bands and singers.\nAmbition(sam) → Fan(sam) ::: If Sam has high ambitions and future career goals, then Sam is a big fan of pop bands and singers.\nConclusion:\n¬(Girl(sam) ∧ College(sam)) ::: Sam is not"
    ]
  },
  {
    "id": "FOLIO_train_916",
    "context": "If people have a lot of decorations in their room, they cannot pack and move out of their rooms very easily. If people have high ambitions and future career goals, then they can pack and move out of their rooms very easily. If people are big fans of pop bands and singers, then they have a lot of decorations in their room. All young teenage girls who attend college are big fans of pop bands and singers. If Sam has high ambitions and future career goals, then Sam is a big fan of pop bands and singers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Sam is a big fan of pop bands and singers.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDecorations(x) ::: x has a lot of decorations in their room.\nPack(x) ::: x can pack and move out of their room very easily.\nAmbition(x) ::: x has high ambitions and future career goals.\nFan(x, y) ::: x is a big fan of y.\nGirl(x) ::: x is a young teenage girl.\nCollege(x) ::: x attends college.\nPremises:\n∀x (Decorations(x) → ¬Pack(x)) ::: If people have a lot of decorations in their room, they cannot pack and move out of their room very easily.\n∀x (Ambition(x) → Pack(x)) ::: If people have high ambitions and future career goals, then they can pack and move out of their room very easily.\n∀x (Fan(x, popBandsAndSingers) → Decorations(x)) ::: If people are big fans of pop bands and singers, then they have a lot of decorations in their room.\n∀x (Girl(x) ∧ College(x) → Fan(x, popBandsAndSingers)) ::: All young teenage girls who attend college are big fans of pop bands and singers.\nAmbition(sam) → Fan(sam, popBandsAndSingers) ::: If Sam has high ambitions and future career goals, then Sam is a big fan of pop bands and singers.\nConclusion:\nFan(sam, popBandsAndSingers)"
    ]
  },
  {
    "id": "FOLIO_train_917",
    "context": "If people have a lot of decorations in their room, they cannot pack and move out of their rooms very easily. If people have high ambitions and future career goals, then they can pack and move out of their rooms very easily. If people are big fans of pop bands and singers, then they have a lot of decorations in their room. All young teenage girls who attend college are big fans of pop bands and singers. If Sam has high ambitions and future career goals, then Sam is a big fan of pop bands and singers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Sam neither has high ambitions and future career goals nor is she a young teenage girl who attends college.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDecorations(x) ::: x has a lot of decorations in their room.\nPack(x) ::: x can pack and move out of their room very easily.\nAmbition(x) ::: x has high ambitions and future career goals.\nFan(x) ::: x is a big fan of pop bands and singers.\nGirl(x) ::: x is a young teenage girl.\nCollege(x) ::: x attends college.\nPremises:\n∀x (Decorations(x) → ¬Pack(x)) ::: If people have a lot of decorations in their room, they cannot pack and move out of their rooms very easily.\n∀x (Ambition(x) → Pack(x)) ::: If people have high ambitions and future career goals, then they can pack and move out of their rooms very easily.\n∀x (Fan(x) → Decorations(x)) ::: If people are big fans of pop bands and singers, then they have a lot of decorations in their room.\n∀x (Girl(x) ∧ College(x) → Fan(x)) ::: All young teenage girls who attend college are big fans of pop bands and singers.\nAmbition(sam) → Fan(sam) ::: If Sam has high ambitions and future career goals, then Sam is a big fan of pop bands and singers.\nConclusion:\n¬(Ambition(sam) ∨ Girl(sam) ∧ College(sam)) ::: Sam neither has high amb"
    ]
  },
  {
    "id": "FOLIO_train_918",
    "context": "If people have a lot of decorations in their room, they cannot pack and move out of their rooms very easily. If people have high ambitions and future career goals, then they can pack and move out of their rooms very easily. If people are big fans of pop bands and singers, then they have a lot of decorations in their room. All young teenage girls who attend college are big fans of pop bands and singers. If Sam has high ambitions and future career goals, then Sam is a big fan of pop bands and singers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Sam has high ambitions and future career goals and is a young teenage girl who attends college.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDecorations(x) ::: x has a lot of decorations in their room.\nPack(x) ::: x can pack and move out of their room very easily.\nAmbition(x) ::: x has high ambitions and future career goals.\nFan(x, y) ::: x is a big fan of y.\nGirl(x) ::: x is a young teenage girl.\nCollege(x) ::: x attends college.\nPremises:\n∀x (Decorations(x) → ¬Pack(x)) ::: If people have a lot of decorations in their room, they cannot pack and move out of their rooms very easily.\n∀x (Ambition(x) → Pack(x)) ::: If people have high ambitions and future career goals, then they can pack and move out of their rooms very easily.\n∀x (Fan(x, popBandsAndSingers) → Decorations(x)) ::: If people are big fans of pop bands and singers, then they have a lot of decorations in their room.\n∀x (Girl(x) ∧ College(x) → Fan(x, popBandsAndSingers)) ::: All young teenage girls who attend college are big fans of pop bands and singers.\nAmbition(sam) → Fan(sam, popBandsAndSingers) ::: If Sam has high ambitions and future career goals, then Sam is a big fan of pop bands and singers.\nConclusion:\nAmbition(sam) ∧ Girl("
    ]
  },
  {
    "id": "FOLIO_train_919",
    "context": "If people have a lot of decorations in their room, they cannot pack and move out of their rooms very easily. If people have high ambitions and future career goals, then they can pack and move out of their rooms very easily. If people are big fans of pop bands and singers, then they have a lot of decorations in their room. All young teenage girls who attend college are big fans of pop bands and singers. If Sam has high ambitions and future career goals, then Sam is a big fan of pop bands and singers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Sam has high ambitions and future career goals and is a young teenage girl who attends college.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDecorations(x) ::: x has a lot of decorations in their room.\nPack(x) ::: x can pack and move out of their room very easily.\nAmbition(x) ::: x has high ambitions and future career goals.\nFan(x, y) ::: x is a big fan of y.\nGirl(x) ::: x is a young teenage girl.\nCollege(x) ::: x attends college.\nPremises:\n∀x (Decorations(x) → ¬Pack(x)) ::: If people have a lot of decorations in their room, they cannot pack and move out of their rooms very easily.\n∀x (Ambition(x) → Pack(x)) ::: If people have high ambitions and future career goals, then they can pack and move out of their rooms very easily.\n∀x (Fan(x, popBandsAndSingers) → Decorations(x)) ::: If people are big fans of pop bands and singers, then they have a lot of decorations in their room.\n∀x (Girl(x) ∧ College(x) → Fan(x, popBandsAndSingers)) ::: All young teenage girls who attend college are big fans of pop bands and singers.\nAmbition(sam) → Fan(sam, popBandsAndSingers) ::: If Sam has high ambitions and future career goals, then Sam is a big fan of pop bands and singers.\nConclusion:\nAmbition(sam) ∧ Girl("
    ]
  },
  {
    "id": "FOLIO_train_920",
    "context": "If people have a lot of decorations in their room, they cannot pack and move out of their rooms very easily. If people have high ambitions and future career goals, then they can pack and move out of their rooms very easily. If people are big fans of pop bands and singers, then they have a lot of decorations in their room. All young teenage girls who attend college are big fans of pop bands and singers. If Sam has high ambitions and future career goals, then Sam is a big fan of pop bands and singers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Sam is a young teenage girl who attends college, then Sam either does not have high ambitions and future career goals or is a big fan of pop bands and singers.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDecorations(x) ::: x has a lot of decorations in their room.\nPack(x) ::: x can pack and move out of their room very easily.\nAmbition(x) ::: x has high ambitions and future career goals.\nFan(x) ::: x is a big fan of pop bands and singers.\nGirl(x) ::: x is a young teenage girl.\nCollege(x) ::: x attends college.\nPremises:\n∀x (Decorations(x) → ¬Pack(x)) ::: If people have a lot of decorations in their room, they cannot pack and move out of their rooms very easily.\n∀x (Ambition(x) → Pack(x)) ::: If people have high ambitions and future career goals, then they can pack and move out of their rooms very easily.\n∀x (Fan(x) → Decorations(x)) ::: If people are big fans of pop bands and singers, then they have a lot of decorations in their room.\n∀x (Girl(x) ∧ College(x) → Fan(x)) ::: All young teenage girls who attend college are big fans of pop bands and singers.\nAmbition(sam) → Fan(sam) ::: If Sam has high ambitions and future career goals, then Sam is a big fan of pop bands and singers.\nConclusion:\n(Girl(sam) ∧ College(sam)) → (¬Ambition(sam) ⊕ Fan(sam)) ::: If Sam is a young teenage girl who attends college, then Sam either does not have high ambitions and future career goals or is a big fan of pop bands and singers.\n------"
    ]
  },
  {
    "id": "FOLIO_train_921",
    "context": "If people have a lot of decorations in their room, they cannot pack and move out of their rooms very easily. If people have high ambitions and future career goals, then they can pack and move out of their rooms very easily. If people are big fans of pop bands and singers, then they have a lot of decorations in their room. All young teenage girls who attend college are big fans of pop bands and singers. If Sam has high ambitions and future career goals, then Sam is a big fan of pop bands and singers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Sam has high ambitions and future career goals and is a young teenage girl who attends college, then Sam either does not have high ambitions and future career goals or is not a young teenage girl who attends college.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDecorations(x) ::: x has a lot of decorations in their room.\nPack(x) ::: x can pack and move out of their room very easily.\nAmbition(x) ::: x has high ambitions and future career goals.\nFan(x) ::: x is a big fan of pop bands and singers.\nGirl(x) ::: x is a young teenage girl.\nCollege(x) ::: x attends college.\nPremises:\n∀x (Decorations(x) → ¬Pack(x)) ::: If people have a lot of decorations in their room, they cannot pack and move out of their rooms very easily.\n∀x (Ambition(x) → Pack(x)) ::: If people have high ambitions and future career goals, then they can pack and move out of their rooms very easily.\n∀x (Fan(x) → Decorations(x)) ::: If people are big fans of pop bands and singers, then they have a lot of decorations in their room.\n∀x (Girl(x) ∧ College(x) → Fan(x)) ::: All young teenage girls who attend college are big fans of pop bands and singers.\nAmbition(sam) → Fan(sam) ::: If Sam has high ambitions and future career goals, then Sam is a big fan of pop bands and singers.\nConclusion:\n(Ambition(sam) ∧ Girl(sam) ∧ College(sam)) → (¬Ambition(sam) ⊕ ¬Girl(sam) ⊕ ¬College(sam)) ::: If Sam has high ambitions and future career goals and is a young teenage girl who"
    ]
  },
  {
    "id": "FOLIO_train_922",
    "context": "If people have a lot of decorations in their room, they cannot pack and move out of their rooms very easily. If people have high ambitions and future career goals, then they can pack and move out of their rooms very easily. If people are big fans of pop bands and singers, then they have a lot of decorations in their room. All young teenage girls who attend college are big fans of pop bands and singers. If Sam has high ambitions and future career goals, then Sam is a big fan of pop bands and singers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Sam has high ambitions and future career goals, then Sam is a young teenage girl who attends college.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDecorations(x) ::: x has a lot of decorations in their room.\nPack(x) ::: x can pack and move out of their room very easily.\nAmbitions(x) ::: x has high ambitions and future career goals.\nFan(x) ::: x is a big fan of pop bands and singers.\nGirl(x) ::: x is a young teenage girl.\nCollege(x) ::: x attends college.\nPremises:\n∀x (Decorations(x) → ¬Pack(x)) ::: If people have a lot of decorations in their room, they cannot pack and move out of their rooms very easily.\n∀x (Ambitions(x) → Pack(x)) ::: If people have high ambitions and future career goals, then they can pack and move out of their rooms very easily.\n∀x (Fan(x) → Decorations(x)) ::: If people are big fans of pop bands and singers, then they have a lot of decorations in their room.\n∀x (Girl(x) ∧ College(x) → Fan(x)) ::: All young teenage girls who attend college are big fans of pop bands and singers.\nAmbitions(sam) → Fan(sam) ::: If Sam has high ambitions and future career goals, then Sam is a big fan of pop bands and singers.\nConclusion:\nAmbitions(sam) → (Girl(sam) ∧ College(sam)) ::: If Sam has high ambitions and future career goals, then Sam is a young teenage girl who attends college.\n------\nProblem:\nIf a person is a student, then they are a person who is a student. If a person"
    ]
  },
  {
    "id": "FOLIO_train_923",
    "context": "A student who loves shrieking will be punished. If a person swears, then he is a student. If someone is a teacher, then Bob will talk to him. All gentlemen are in a suit. All teachers are men. There is a teacher. If someone is not a gentlemen, then he is not nice. Willy is nice. Bob loves shrieking and swearing.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Willy is in a suit.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nStudent(x) ::: x is a student.\nLove(x, y) ::: x loves y.\nPunish(x) ::: x will be punished.\nSwear(x) ::: x swears.\nTalk(x, y) ::: x will talk to y.\nGentleman(x) ::: x is a gentleman.\nSuit(x) ::: x is in a suit.\nTeacher(x) ::: x is a teacher.\nMan(x) ::: x is a man.\nBob(x) ::: x is Bob.\nWilly(x) ::: x is Willy.\nNice(x) ::: x is nice.\nPremises:\nStudent(x) → Love(x, shrieking) → Punish(x) ::: A student who loves shrieking will be punished.\nSwear(x) → Student(x) ::: If a person swears, then he is a student.\nTeacher(x) → Talk(bob, x) ::: If someone is a teacher, then Bob will talk to him.\nGentleman(x) → Suit(x) ::: All gentlemen are in a suit.\nTeacher(x) → Man(x) ::: All teachers are men.\n∃x (Teacher(x)) ::: There is a teacher.\n¬Gentleman(x) → ¬Nice(x) ::: If someone is not a gentlemen, then he is not nice.\nNice(willy) ::: Willy is nice.\nLove(bob, shrieking) ∧ Swear(bob) ::: Bob loves shrieking and swearing.\nConclusion:\nSuit(willy) :::"
    ]
  },
  {
    "id": "FOLIO_train_924",
    "context": "A student who loves shrieking will be punished. If a person swears, then he is a student. If someone is a teacher, then Bob will talk to him. All gentlemen are in a suit. All teachers are men. There is a teacher. If someone is not a gentlemen, then he is not nice. Willy is nice. Bob loves shrieking and swearing.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Bob will be not punished.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nStudent(x) ::: x is a student.\nLove(x, y) ::: x loves y.\nPunish(x) ::: x will be punished.\nSwear(x) ::: x swears.\nTalk(x, y) ::: x will talk to y.\nGentleman(x) ::: x is a gentlemen.\nSuit(x) ::: x is in a suit.\nMan(x) ::: x is a man.\nTeacher(x) ::: x is a teacher.\nNice(x) ::: x is nice.\nBob(x) ::: x is Bob.\nWilly(x) ::: x is Willy.\nPremises:\nStudent(x) → Love(x, shrieking) → Punish(x) ::: A student who loves shrieking will be punished.\nSwear(x) → Student(x) ::: If a person swears, then he is a student.\nTeacher(x) → Talk(bob, x) ::: If someone is a teacher, then Bob will talk to him.\nGentleman(x) → Suit(x) ::: All gentlemen are in a suit.\nTeacher(x) → Man(x) ::: All teachers are men.\n∃x (Teacher(x)) ::: There is a teacher.\n¬Gentleman(x) → ¬Nice(x) ::: If someone is not a gentlemen, then he is not nice.\nNice(willy) ::: Willy is nice.\nLove(bob, shrieking) ∧ Swear(bob) ::: Bob loves shrieking and swearing.\nConclusion:\n¬Punish(bob"
    ]
  },
  {
    "id": "FOLIO_train_925",
    "context": "A student who loves shrieking will be punished. If a person swears, then he is a student. If someone is a teacher, then Bob will talk to him. All gentlemen are in a suit. All teachers are men. There is a teacher. If someone is not a gentlemen, then he is not nice. Willy is nice. Bob loves shrieking and swearing.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There is a man that Bob will talk to.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nStudent(x) ::: x is a student.\nLove(x, y) ::: x loves y.\nPunish(x) ::: x will be punished.\nSwear(x) ::: x swears.\nTalk(x, y) ::: x will talk to y.\nGentleman(x) ::: x is a gentleman.\nSuit(x) ::: x is in a suit.\nMan(x) ::: x is a man.\nTeacher(x) ::: x is a teacher.\nNice(x) ::: x is nice.\nBob(x) ::: x is Bob.\nWilly(x) ::: x is Willy.\nPremises:\nStudent(x) ∧ Love(x, shrieking) → Punish(x) ::: A student who loves shrieking will be punished.\n∀x (Swear(x) → Student(x)) ::: If a person swears, then he is a student.\n∀x (Teacher(x) → Talk(bob, x)) ::: If someone is a teacher, then Bob will talk to him.\n∀x (Gentleman(x) → Suit(x)) ::: All gentlemen are in a suit.\n∀x (Teacher(x) → Man(x)) ::: All teachers are men.\n∃x (Teacher(x)) ::: There is a teacher.\n¬Gentleman(x) → ¬Nice(x) ::: If someone is not a gentlemen, then he is not nice.\nNice(willy) ::: Willy is nice.\nLove(bob, shrieking) ∧ Swear(bob) ::"
    ]
  },
  {
    "id": "FOLIO_train_926",
    "context": "Quincy McDuffie is an American professional wide receiver in Canadian Football. People who can catch balls are good wide receivers. Quincy McDuffie can catch many footballs easily. Good wide receivers play professionally. Good wide receivers can catch with both their left and right hand. All footballs are balls.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Quincy McDuffie is a good wide receiver.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCatch(x, y) ::: x can catch y.\nBall(x) ::: x is a ball.\nFootball(x) ::: x is a football.\nProfessional(x) ::: x is a professional.\nWideReceiver(x) ::: x is a wide receiver.\nGood(x) ::: x is good.\nPremises:\nWideReceiver(quincy) ::: Quincy McDuffie is a wide receiver.\n∀x (Catch(x, manyFootballs) → Good(x)) ::: People who can catch many footballs are good wide receivers.\nCatch(quincy, manyFootballs) ::: Quincy McDuffie can catch many footballs easily.\n∀x (Good(x) → Professional(x)) ::: Good wide receivers play professionally.\n∀x (Good(x) → Catch(x, leftHand) ∧ Catch(x, rightHand)) ::: Good wide receivers can catch with both their left and right hand.\nFootball(x) → Ball(x) ::: All footballs are balls.\nConclusion:\nGood(quincy) ::: Quincy McDuffie is a good wide receiver.\n------\nProblem:\nThe 2019 FIFA Women's World Cup was the eighth edition of the FIFA Women's World Cup, the quadrennial international football championship contested by the women's national teams of the member associations of FIFA. The tournament was held in France from 7 June to 7 July 2019. The United States won the tournament for a record fourth time, defeating the Netherlands 2–0 in the final.\nQuestion:\nBased on the above information, is the following statement"
    ]
  },
  {
    "id": "FOLIO_train_927",
    "context": "Quincy McDuffie is an American professional wide receiver in Canadian Football. People who can catch balls are good wide receivers. Quincy McDuffie can catch many footballs easily. Good wide receivers play professionally. Good wide receivers can catch with both their left and right hand. All footballs are balls.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Quincy McDuffie can catch every ball.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCatch(x, y) ::: x can catch y.\nBall(x) ::: x is a ball.\nFootball(x) ::: x is a football.\nGood(x) ::: x is good.\nWideReceiver(x) ::: x is a wide receiver.\nProfessional(x) ::: x is a professional.\nLeftHand(x) ::: x can catch with their left hand.\nRightHand(x) ::: x can catch with their right hand.\nPremises:\nWideReceiver(quincy) ::: Quincy McDuffie is a wide receiver.\n∀x (Catch(x, y) → Good(x)) ::: People who can catch balls are good wide receivers.\nCatch(quincy, manyFootballs) ∧ Easy(quincy, catchManyFootballs) ::: Quincy McDuffie can catch many footballs easily.\n∀x (Good(x) → Professional(x)) ::: Good wide receivers play professionally.\n∀x (Good(x) → Catch(x, y)) ::: Good wide receivers can catch with both their left and right hand.\n∀x (Football(x) → Ball(x)) ::: All footballs are balls.\nConclusion:\n∀x (Ball(x) → Catch(quincy, x)) ::: Quincy McDuffie can catch every ball.\n------\nProblem:\nThe 2019–2020 season of the National Basketball Association (NBA) was the 74th season of the NBA. The 2019–2020 season was the first season to be played in the NBA bubble. The 2"
    ]
  },
  {
    "id": "FOLIO_train_928",
    "context": "Quincy McDuffie is an American professional wide receiver in Canadian Football. People who can catch balls are good wide receivers. Quincy McDuffie can catch many footballs easily. Good wide receivers play professionally. Good wide receivers can catch with both their left and right hand. All footballs are balls.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Professional wide receivers are good at catching balls.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProfessional(x) ::: x is a professional.\nWideReceiver(x) ::: x is a wide receiver.\nGood(x) ::: x is good.\nCatch(x, y) ::: x can catch y.\nBall(x) ::: x is a ball.\nFootball(x) ::: x is a football.\nPremises:\nProfessional(quincy) ∧ WideReceiver(quincy) ::: Quincy McDuffie is an American professional wide receiver.\n∀x (Good(x) → WideReceiver(x)) ::: People who can catch balls are good wide receivers.\nCatch(quincy, manyFootballs) ∧ Easy(quincy, catch, manyFootballs) ::: Quincy McDuffie can catch many footballs easily.\n∀x (Good(x) → Professional(x)) ::: Good wide receivers play professionally.\n∀x (Good(x) → Catch(x, leftHand) ∧ Catch(x, rightHand)) ::: Good wide receivers can catch with both their left and right hand.\n∀x (Football(x) → Ball(x)) ::: All footballs are balls.\nConclusion:\n∀x (Professional(x) → Good(x)) ::: Professional wide receivers are good at catching balls.\n------\nProblem:\nThe 2019–2020 season of the National Basketball Association (NBA) was the 74th season of the NBA. The 2019–2020 season of the National Basketball Association (NBA) was the 74th season of the NBA. The 2"
    ]
  },
  {
    "id": "FOLIO_train_929",
    "context": "Boves is a railway station located in France. The preceding station of Boves is Longueau. The preceding station of Dommartin is Boves. France is a European country. Dommartin is situated on the Paris–Lille railway. Any two contiguous stations are on the same railway. Boves is served by regional TER Hauts-de-France trains. If A is located in B and B is located in C, then A is located in C. If A precedes B and B preceds C, than A preceds C.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Longueau is situated on the Paris–Lille railway.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLocated(x, y) ::: x is located in y.\nPreceding(x, y) ::: x is the preceding station of y.\nEuropean(x) ::: x is a European country.\nSituated(x, y) ::: x is situated on y.\nRailway(x) ::: x is a railway.\nTrain(x) ::: x is a train.\nPremises:\nLocated(boves, france) ::: Boves is a railway station located in France.\nPreceding(longueau, boves) ::: The preceding station of Boves is Longueau.\nPreceding(dommartin, boves) ::: The preceding station of Dommartin is Boves.\nEuropean(france) ::: France is a European country.\nSituated(dommartin, parisLilleRailway) ::: Dommartin is situated on the Paris–Lille railway.\n∀x ∀y (Preceding(x, y) → Railway(x) ∧ Railway(y) ∧ Contiguous(x, y)) ::: Any two contiguous stations are on the same railway.\nTrain(terHautsDeFrance) ∧ Serves(terHautsDeFrance, boves) ::: Boves is served by regional TER Hauts-de-France trains.\n∀x ∀y ∀z (Located(x, y) ∧ Located(y, z) → Located(x, z)) ::: If A is located in B and B is located in C, then A is located in C.\n∀x ∀y ∀z"
    ]
  },
  {
    "id": "FOLIO_train_930",
    "context": "Boves is a railway station located in France. The preceding station of Boves is Longueau. The preceding station of Dommartin is Boves. France is a European country. Dommartin is situated on the Paris–Lille railway. Any two contiguous stations are on the same railway. Boves is served by regional TER Hauts-de-France trains. If A is located in B and B is located in C, then A is located in C. If A precedes B and B preceds C, than A preceds C.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Boves is not in Europe.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBoves(x) ::: x is Boves.\nLongueau(x) ::: x is Longueau.\nDommartin(x) ::: x is Dommartin.\nFrance(x) ::: x is France.\nEurope(x) ::: x is a European country.\nPrecede(x, y) ::: x precedes y.\nLocated(x, y) ::: x is located in y.\nRailway(x) ::: x is a railway.\nContiguous(x, y) ::: x and y are contiguous.\nTrain(x) ::: x is a train.\nTERHautsdeFrance(x) ::: x is a regional TER Hauts-de-France train.\nPremises:\nBoves(boves) ∧ Longueau(longueau) ∧ Dommartin(dommartin) ∧ France(france) ∧ Europe(europe) ::: Boves is a railway station located in France. The preceding station of Boves is Longueau. The preceding station of Dommartin is Boves. France is a European country.\nPrecede(longueau, boves) ∧ Precede(dommartin, boves) ::: The preceding station of Boves is Longueau. The preceding station of Dommartin is Boves.\nPrecede(longueau, boves) ∧ Precede(boves, dommartin) ::: The preceding station of Boves is Longueau. The preceding station of Dommartin is Boves.\nContiguous(longueau, boves) ∧ Contiguous(boves, dommartin) ::: The preceding station of Boves is Longueau. The preceding station of Dommartin is Boves.\nLocated(boves, france) ::: Boves is a railway station located in France.\nLocated(dommartin, parisLilleRailway) ::: Dommartin is situated on the Paris–Lille railway.\n∀x ∀y (Contiguous(x, y) → Railway(x) ∧ Railway(y)) ::: Any two contiguous stations are on the same railway.\n∀x ∀y ∀z (Located(x, y) ∧ Located(y, z) → Located(x, z)) ::: If A is located in B and B is located in C, then A is located in C.\n∀x ∀y (Precede(x, y) → Precede(y, x)) ::: If A precedes B and B precedes C, than A precedes C.\nTERHautsdeFrance(boves) ::: Boves is served by regional TER Hauts-de-France trains.\nConclusion:\n¬Europe(boves) ::: Boves is not in Europe.\n------"
    ]
  },
  {
    "id": "FOLIO_train_931",
    "context": "Boves is a railway station located in France. The preceding station of Boves is Longueau. The preceding station of Dommartin is Boves. France is a European country. Dommartin is situated on the Paris–Lille railway. Any two contiguous stations are on the same railway. Boves is served by regional TER Hauts-de-France trains. If A is located in B and B is located in C, then A is located in C. If A precedes B and B preceds C, than A preceds C.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Longueau is served by regional TER Hauts-de-France trains.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLocated(x, y) ::: x is located in y.\nPreceding(x, y) ::: x is the preceding station of y.\nEuropeanCountry(x) ::: x is a European country.\nSituated(x, y) ::: x is situated on y.\nContiguous(x, y) ::: x and y are contiguous.\nServe(x, y) ::: x is served by y.\nPremises:\nLocated(boves, france) ::: Boves is a railway station located in France.\nPreceding(longueau, boves) ::: The preceding station of Boves is Longueau.\nPreceding(dommartin, boves) ::: The preceding station of Dommartin is Boves.\nEuropeanCountry(france) ::: France is a European country.\nSituated(dommartin, parisLilleRailway) ::: Dommartin is situated on the Paris–Lille railway.\n∀x ∀y (Contiguous(x, y) → OnSameRailway(x, y)) ::: Any two contiguous stations are on the same railway.\nServe(boves, terHautsDeFrance) ::: Boves is served by regional TER Hauts-de-France trains.\n∀x ∀y ∀z (Located(x, y) ∧ Located(y, z) → Located(x, z)) ::: If A is located in B and B is located in C, then A is located in C.\n∀x ∀y ∀z (Preceding(x, y) ∧ Preceding(y, z) → Preceding(x, z)) ::: If A precedes B and B preceds C, than A preceds C.\nConclusion:\nServe(longueau, terHautsDeFrance) ::: Longueau is served by regional TER Hauts-de-France trains.\n------\nProblem:\nThe following is a list of the 10 most populous cities in the United States.\n1. New York City, New York\n2. Los Angeles, California\n3. Chicago, Illinois\n4. Houston, Texas\n5. Phoenix, Arizona\n6. Philadelphia, Pennsylvania\n7. San Antonio, Texas\n8. San Diego, California\n9. Dallas, Texas\n10. San Jose, California\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The most populous city in the United States is located in California.\nBased on the above information, is the following statement true, false, or uncertain? The most populous city in the United States is located in Texas.\nBased on the above information, is the following statement true, false, or uncertain? The most populous city in the United States is located in New York.\nBased on the above information, is the following statement true, false, or uncertain? The most populous"
    ]
  },
  {
    "id": "FOLIO_train_932",
    "context": "Edwin Smith was a New Zealand Rower from Auckland. Edwin Smith was also known as Ted Smith. Edwin Smith went to Rose Road Primary School, located in Grey Lynn. Edwin Smith was a sergeant who served with the New Zealand 24th battalion in Italy and Egypt. Broadway Sheetmetals was a buisness that was ran and owned by Edwin Smith, who was a sheetmetal worker.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Ted Smith was a sergeant.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nNewZealander(x) ::: x is a New Zealander.\nRower(x) ::: x is a rower.\nAucklander(x) ::: x is from Auckland.\nKnownAs(x, y) ::: x is known as y.\nPrimarySchool(x) ::: x is a primary school.\nLocated(x, y) ::: x is located in y.\nSergeant(x) ::: x is a sergeant.\nBattalion(x) ::: x is a battalion.\nItalian(x) ::: x is Italian.\nEgyptian(x) ::: x is Egyptian.\nBusiness(x) ::: x is a business.\nRan(x, y) ::: x ran y.\nOwned(x, y) ::: x owned y.\nSheetmetalWorker(x) ::: x is a sheetmetal worker.\nPremises:\nNewZealander(edwin) ∧ Rower(edwin) ∧ Aucklander(edwin) ∧ KnownAs(edwin, ted) ::: Edwin Smith was a New Zealand Rower from Auckland. Edwin Smith was also known as Ted Smith.\nPrimarySchool(roseRoadPrimarySchool) ∧ Located(roseRoadPrimarySchool, greyLynn) ::: Edwin Smith went to Rose Road Primary School, located in Grey Lynn.\nSergeant(edwin) ∧ Battalion(newZealand24thBattalion) ∧ Italian(italy) ∧ Egyptian(egypt) ::: Edwin Smith was a sergeant who served with the New Zealand 24th battalion in Italy and Egypt.\nBusiness(broadwaySheetmetals) ∧ Ran(edwin, broadwaySheetmetals) ∧ Owned(edwin, broadwaySheetmetals) ∧ SheetmetalWorker(edwin) ::: Broadway Sheetmetals was a buisness that was ran and owned by Edwin Smith, who was a sheetmetal worker.\nConclusion:\nSergeant(ted) ::: Ted Smith was a sergeant.\n------\nProblem:\nThe 2019 Rugby World Cup was the ninth Rugby World Cup, a quadrennial international rugby union competition inaugurated in 1987. The tournament was hosted by Japan, the first time it had been held in Asia. The opening match was played at the Ajinomoto Stadium in Chōfu, Tokyo, on 20 September 2019, with the final at the Nissan Stadium in Yokohama, Kanagawa, on 2 November 2019.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The 2019 Rugby World Cup was the ninth Rugby World Cup.\nBased on the above information, is the following statement true, false, or"
    ]
  },
  {
    "id": "FOLIO_train_933",
    "context": "Edwin Smith was a New Zealand Rower from Auckland. Edwin Smith was also known as Ted Smith. Edwin Smith went to Rose Road Primary School, located in Grey Lynn. Edwin Smith was a sergeant who served with the New Zealand 24th battalion in Italy and Egypt. Broadway Sheetmetals was a buisness that was ran and owned by Edwin Smith, who was a sheetmetal worker.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There are no rowers that own a buisness.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nNewZealander(x) ::: x is a New Zealander.\nRower(x) ::: x is a rower.\nAucklander(x) ::: x is an Aucklander.\nKnownAs(x, y) ::: x is known as y.\nPrimarySchool(x) ::: x is a primary school.\nLocated(x, y) ::: x is located in y.\nSergeant(x) ::: x is a sergeant.\nBattalion(x) ::: x is a battalion.\nItalian(x) ::: x is Italian.\nEgyptian(x) ::: x is Egyptian.\nBusiness(x) ::: x is a business.\nOwn(x, y) ::: x owns y.\nSheetmetalWorker(x) ::: x is a sheetmetal worker.\nPremises:\nNewZealander(edwin) ∧ Rower(edwin) ∧ Aucklander(edwin) ∧ KnownAs(edwin, ted) ::: Edwin Smith was a New Zealand Rower from Auckland. Edwin Smith was also known as Ted Smith.\nPrimarySchool(roseRoadPrimarySchool) ∧ Located(roseRoadPrimarySchool, greyLynn) ::: Edwin Smith went to Rose Road Primary School, located in Grey Lynn.\nSergeant(edwin) ∧ Battalion(newZealand24thBattalion) ∧ Italian(newZealand24thBattalion) ∧ Egyptian(newZealand24thBattalion) ::: Edwin Smith was a sergeant who served with the New Zealand 24th battalion in Italy and Egypt.\nBusiness(broadwaySheetmetals) ∧ Own(edwin, broadwaySheetmetals) ∧ SheetmetalWorker(edwin) ::: Broadway Sheetmetals was a buisness that was ran and owned by Edwin Smith, who was a sheetmetal worker.\nConclusion:\n¬∃x (Rower(x) ∧ Own(x, y)) ::: There are no rowers that own a buisness.\n------\nProblem:\nThe 2010 FIFA World Cup was the 19th FIFA World Cup, the world championship for men's national association football teams. It took place in South Africa from 11 June to 11 July 2010. The bidding process for hosting the tournament finals was open only to African nations; in 2004, the international football federation, FIFA, selected South Africa over Egypt and Morocco to become the first African nation to host the finals.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The 2010 FIFA World Cup was the 19th FIFA World Cup.\nBased on the above information, is the following statement true, false, or uncertain? The"
    ]
  },
  {
    "id": "FOLIO_train_934",
    "context": "Edwin Smith was a New Zealand Rower from Auckland. Edwin Smith was also known as Ted Smith. Edwin Smith went to Rose Road Primary School, located in Grey Lynn. Edwin Smith was a sergeant who served with the New Zealand 24th battalion in Italy and Egypt. Broadway Sheetmetals was a buisness that was ran and owned by Edwin Smith, who was a sheetmetal worker.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? No sergeants are from Auckland.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nNewZealander(x) ::: x is a New Zealander.\nRower(x) ::: x is a Rower.\nAuckland(x) ::: x is from Auckland.\nSergeant(x) ::: x is a sergeant.\nNewZealand24thBattalion(x) ::: x is a member of the New Zealand 24th battalion.\nItaly(x) ::: x is in Italy.\nEgypt(x) ::: x is in Egypt.\nRoseRoadPrimarySchool(x) ::: x went to Rose Road Primary School.\nGreyLynn(x) ::: x is located in Grey Lynn.\nBroadwaySheetmetals(x) ::: x is Broadway Sheetmetals.\nSheetmetalWorker(x) ::: x is a sheetmetal worker.\nPremises:\nNewZealander(edwin) ∧ Rower(edwin) ∧ Auckland(edwin) ∧ Sergeant(edwin) ∧ NewZealand24thBattalion(edwin) ∧ Italy(edwin) ∧ Egypt(edwin) ∧ RoseRoadPrimarySchool(edwin) ∧ GreyLynn(edwin) ∧ BroadwaySheetmetals(edwin) ∧ SheetmetalWorker(edwin) ::: Edwin Smith was a New Zealand Rower from Auckland. Edwin Smith was also known as Ted Smith. Edwin Smith went to Rose Road Primary School, located in Grey Lynn. Edwin Smith was a sergeant who served with the New Zealand 24th battalion in Italy and Egypt. Broadway Sheetmetals was a buisness that was ran and owned by Edwin Smith, who was a sheetmetal worker.\nConclusion:\n¬∃x (Sergeant(x) ∧ Auckland(x)) ::: No sergeants are from Auckland.\n------\nProblem:\nThe 1992 Summer Olympics, officially known as the Games of the XXV Olympiad, was an international multi-sport event that was held from 25 July to 9 August 1992 in Barcelona, Catalonia, Spain. The 1992 Summer Olympics was the first Summer Olympics since the 1972 Summer Olympics to be held in Europe, and the first Olympic Games ever to be held in Spain. The 1992 Summer Olympics was the last Summer Olympics to be held in the same year as the Winter Olympics until 2020. The 1992 Summer Olympics was the first Summer Olympics to be held in a socialist state. The 1992 Summer Olympics was the first Summer Olympics to be held in a country that had hosted the Winter Olympics. The 1992 Summer Olympics was the first Summer Olympics to be held in a country that had hosted the Summer Olympics. The 1992 Summer Olympics was the first Summer Olympics to be held in a country that had"
    ]
  },
  {
    "id": "FOLIO_train_935",
    "context": "Edwin Smith was a New Zealand Rower from Auckland. Edwin Smith was also known as Ted Smith. Edwin Smith went to Rose Road Primary School, located in Grey Lynn. Edwin Smith was a sergeant who served with the New Zealand 24th battalion in Italy and Egypt. Broadway Sheetmetals was a buisness that was ran and owned by Edwin Smith, who was a sheetmetal worker.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? No buisness owner has served in Egypt.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nNewZealander(x) ::: x is a New Zealander.\nRower(x) ::: x is a rower.\nAucklander(x) ::: x is from Auckland.\nKnownAs(x, y) ::: x is known as y.\nPrimarySchool(x) ::: x is a primary school.\nLocated(x, y) ::: x is located in y.\nSergeant(x) ::: x is a sergeant.\nBattalion(x) ::: x is a battalion.\nItaly(x) ::: x is in Italy.\nEgypt(x) ::: x is in Egypt.\nBuisness(x) ::: x is a buisness.\nOwn(x, y) ::: x owns y.\nSheetmetalWorker(x) ::: x is a sheetmetal worker.\nPremises:\nNewZealander(edwin) ∧ Rower(edwin) ∧ Aucklander(edwin) ∧ KnownAs(edwin, ted) ::: Edwin Smith was a New Zealand Rower from Auckland. Edwin Smith was also known as Ted Smith.\nPrimarySchool(roseRoadPrimarySchool) ∧ Located(roseRoadPrimarySchool, greyLynn) ::: Edwin Smith went to Rose Road Primary School, located in Grey Lynn.\nSergeant(edwin) ∧ Battalion(newZealand24thBattalion) ∧ Italy(newZealand24thBattalion) ∧ Egypt(newZealand24thBattalion) ::: Edwin Smith was a sergeant who served with the New Zealand 24th battalion in Italy and Egypt.\nBuisness(broadwaySheetmetals) ∧ Own(edwin, broadwaySheetmetals) ∧ SheetmetalWorker(edwin) ::: Broadway Sheetmetals was a buisness that was ran and owned by Edwin Smith, who was a sheetmetal worker.\nConclusion:\n¬∃x (Buisness(x) ∧ Own(x, y) ∧ Egypt(y)) ::: No buisness owner has served in Egypt.\n------\nProblem:\nThe 1996 Summer Olympics, officially known as the Games of the XXVI Olympiad, was an international multi-sport event that was celebrated in 1996 in Atlanta, Georgia, United States. The 1996 Summer Olympics was the first time that the Summer Olympic Games were hosted in the Southern United States. The 1996 Summer Olympics was the first time that the Summer Olympic Games were hosted in the United States since the 1984 Summer Olympics in Los Angeles. The 1996 Summer Olympics was the first time that the Summer Olympic Games were hosted in the United States since the 1984 Summer Olympics in Los Angeles. The 1996 Summer Olympics was the first"
    ]
  },
  {
    "id": "FOLIO_train_936",
    "context": "A werewolf is a human that can turn into a wolf. A werewolf has been scratched or bitten by another werewolf. If someone has been scratched or bitten, they have been attacked.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? All humans are werewolves.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nHuman(x) ::: x is a human.\nWerewolf(x) ::: x is a werewolf.\nScratched(x) ::: x has been scratched.\nBitten(x) ::: x has been bitten.\nAttacked(x) ::: x has been attacked.\nPremises:\n∀x (Werewolf(x) → (Scratched(x) ∨ Bitten(x))) ::: A werewolf has been scratched or bitten by another werewolf.\n∀x (Scratched(x) ∨ Bitten(x) → Attacked(x)) ::: If someone has been scratched or bitten, they have been attacked.\nConclusion:\n∀x (Human(x) → Werewolf(x)) ::: All humans are werewolves.\n------\nProblem:\nA person is a student if they are enrolled in a course. A person is a student if they are enrolled in a course and have paid their tuition. A person is a student if they are enrolled in a course and have paid their tuition and have a student ID.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? A person is a student if they are enrolled in a course and have paid their tuition and have a student ID.\n###\nPredicates:\nStudent(x) ::: x is a student.\nEnrolled(x) ::: x is enrolled in a course.\nPaid(x) ::: x has paid their tuition.\nID(x) ::: x has a student ID.\nPremises:\n∀x (Enrolled(x) → Student(x)) ::: A person is a student if they are enrolled in a course.\n∀x (Enrolled(x) ∧ Paid(x) → Student(x)) ::: A person is a student if they are enrolled in a course and have paid their tuition.\n∀x (Enrolled(x) ∧ Paid(x) ∧ ID(x) → Student(x)) ::: A person is a student if they are enrolled in a course and have paid their tuition and have a student ID.\nConclusion:\n∀x (Enrolled(x) ∧ Paid(x) ∧ ID(x) → Student(x)) ::: A person is a student if they are enrolled in a course and have paid their tuition and have a student ID.\n------\nProblem:\nA person is a student if they are enrolled in a course. A person is a student if they are enrolled in a course and have paid their tuition. A person is a student if they are enrolled in a course and have paid their tuition and have a student ID.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? A person is a student if they are enrolled in a course and have paid their tuition and have"
    ]
  },
  {
    "id": "FOLIO_train_937",
    "context": "A werewolf is a human that can turn into a wolf. A werewolf has been scratched or bitten by another werewolf. If someone has been scratched or bitten, they have been attacked.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A werewolf is a wolf.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nWerewolf(x) ::: x is a werewolf.\nHuman(x) ::: x is a human.\nWolf(x) ::: x is a wolf.\nScratched(x) ::: x has been scratched.\nBitten(x) ::: x has been bitten.\nAttacked(x) ::: x has been attacked.\nPremises:\n∀x (Werewolf(x) → (Human(x) ∧ (Scratched(x) ∨ Bitten(x)))) ::: A werewolf is a human that can turn into a wolf. A werewolf has been scratched or bitten by another werewolf.\n∀x (Scratched(x) ∨ Bitten(x) → Attacked(x)) ::: If someone has been scratched or bitten, they have been attacked.\nConclusion:\nWerewolf(x) → Wolf(x) ::: A werewolf is a wolf.\n------\nProblem:\nA person is a student if they are enrolled in a school. A person is a teacher if they teach a class. A person is a teacher if they are a professor. A person is a professor if they have a PhD. A person is a professor if they have a master's degree. A person is a professor if they have a bachelor's degree. A person is a professor if they have a high school diploma. A person is a professor if they have a GED. A person is a professor if they have a college degree. A person is a professor if they have a graduate degree. A person is a professor if they have a doctorate degree. A person is a professor if they have a master's degree. A person is a professor if they have a bachelor's degree. A person is a professor if they have a high school diploma. A person is a professor if they have a GED. A person is a professor if they have a college degree. A person is a professor if they have a graduate degree. A person is a professor if they have a doctorate degree. A person is a professor if they have a master's degree. A person is a professor if they have a bachelor's degree. A person is a professor if they have a high school diploma. A person is a professor if they have a GED. A person is a professor if they have a college degree. A person is a professor if they have a graduate degree. A person is a professor if they have a doctorate degree. A person is a professor if they have a master's degree. A person is a professor if they have a bachelor's degree. A person is a professor if they have a high school diploma. A person is a professor if they have a GED. A person is a professor if they have a college degree. A person is a professor if they have a graduate degree. A person is a professor if they have a doctorate degree. A person is a professor if they have a master's degree. A person is a professor if they have a bachelor's degree. A person"
    ]
  },
  {
    "id": "FOLIO_train_938",
    "context": "A werewolf is a human that can turn into a wolf. A werewolf has been scratched or bitten by another werewolf. If someone has been scratched or bitten, they have been attacked.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A werewolf has scratched someone before.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nWerewolf(x) ::: x is a werewolf.\nHuman(x) ::: x is a human.\nWolf(x) ::: x is a wolf.\nScratched(x, y) ::: x has scratched y.\nBitten(x, y) ::: x has bitten y.\nAttacked(x, y) ::: x has attacked y.\nPremises:\n∀x (Werewolf(x) → (Human(x) ∧ Wolf(x))) ::: A werewolf is a human that can turn into a wolf.\n∀x (Werewolf(x) → (Scratched(x, y) ∨ Bitten(x, y))) ::: A werewolf has been scratched or bitten by another werewolf.\n∀x (Scratched(x, y) ∨ Bitten(x, y) → Attacked(x, y)) ::: If someone has been scratched or bitten, they have been attacked.\nConclusion:\n∃x ∃y (Werewolf(x) ∧ Scratched(x, y)) ::: A werewolf has scratched someone before.\n------\nProblem:\nA person is a human. A person is a mammal. A person is a vertebrate. A person is a chordate. A person is an animal. A person is a living thing. A person is a thing. A person is a being. A person is a living being. A person is a living organism. A person is a living creature. A person is a living thing. A person is a living being. A person is a living organism. A person is a living creature. A person is a living thing. A person is a living being. A person is a living organism. A person is a living creature. A person is a living thing. A person is a living being. A person is a living organism. A person is a living creature. A person is a living thing. A person is a living being. A person is a living organism. A person is a living creature. A person is a living thing. A person is a living being. A person is a living organism. A person is a living creature. A person is a living thing. A person is a living being. A person is a living organism. A person is a living creature. A person is a living thing. A person is a living being. A person is a living organism. A person is a living creature. A person is a living thing. A person is a living being. A person is a living organism. A person is a living creature. A person is a living thing. A person is a living being. A person is a living organism. A person is a living creature. A person is a living thing. A person is a living being. A person is a living organism. A person is a living creature. A person is a living thing. A person is a living being. A person is a living organism. A person is a living"
    ]
  },
  {
    "id": "FOLIO_train_939",
    "context": "UFC Fight Night was a mixed martial arts event and was held in Sweden. At UFC Fight Night, Sadollah was scheduled to fight Musoke. Sadollah fought Akiyama at UFC Fight Night. Musoke fought Yakovlev at UFC Fight Night. Jung was injured at UFC Fight Night. Injured people did not fight at UFC Fight Night.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jung fought Sadollah.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nUFCFightNight(x) ::: x is a UFC Fight Night.\nScheduledToFight(x, y) ::: x is scheduled to fight y.\nFight(x, y) ::: x fought y.\nInjured(x) ::: x is injured.\nPremises:\nUFCFightNight(ufcFightNight) ∧ ∃x ∃y (ScheduledToFight(x, y) ∧ ScheduledToFight(y, x) ∧ Fight(x, y) ∧ Fight(y, x) ∧ UFCFightNight(ufcFightNight)) ::: UFC Fight Night was a mixed martial arts event and was held in Sweden.\nScheduledToFight(sadollah, musoke) ::: At UFC Fight Night, Sadollah was scheduled to fight Musoke.\nFight(sadollah, akiyama) ::: Sadollah fought Akiyama at UFC Fight Night.\nFight(musoke, yakovlev) ::: Musoke fought Yakovlev at UFC Fight Night.\nInjured(jung) ::: Jung was injured at UFC Fight Night.\n∀x (Injured(x) → ¬Fight(x, y)) ::: Injured people did not fight at UFC Fight Night.\nConclusion:\nFight(jung, sadollah) ::: Jung fought Sadollah.\n------\nProblem:\nThe 2014 FIFA World Cup was the 20th FIFA World Cup, the quadrennial world championship for men's national football teams organized by FIFA. The 2014 FIFA World Cup was held in Brazil. The 2014 FIFA World Cup was held in South America. The 2014 FIFA World Cup was held in North America. The 2014 FIFA World Cup was held in Europe. The 2014 FIFA World Cup was held in Asia. The 2014 FIFA World Cup was held in Africa.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The 2014 FIFA World Cup was held in South America.\nBased on the above information, is the following statement true, false, or uncertain? The 2014 FIFA World Cup was held in North America.\nBased on the above information, is the following statement true, false, or uncertain? The 2014 FIFA World Cup was held in Europe.\nBased on the above information, is the following statement true, false, or uncertain? The 2014 FIFA World Cup was held in Asia.\nBased on the above information, is the following statement true, false, or uncertain? The 2014 FIFA World Cup was held in Africa.\n###\nPredicates:\nWorldCup(x) ::: x is a World Cup.\nHeldIn(x, y) ::: x is held in y.\nPremises:\nWorldCup(world"
    ]
  },
  {
    "id": "FOLIO_train_940",
    "context": "UFC Fight Night was a mixed martial arts event and was held in Sweden. At UFC Fight Night, Sadollah was scheduled to fight Musoke. Sadollah fought Akiyama at UFC Fight Night. Musoke fought Yakovlev at UFC Fight Night. Jung was injured at UFC Fight Night. Injured people did not fight at UFC Fight Night.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jung did not fight at UFC Fight Night.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nUFCFightNight(x) ::: x is a UFC Fight Night.\nFight(x, y) ::: x fought y.\nScheduled(x, y) ::: x is scheduled to fight y.\nInjured(x) ::: x is injured.\nPremises:\nUFCFightNight(ufcFightNight) ::: UFC Fight Night was a mixed martial arts event and was held in Sweden.\nScheduled(sadollah, musoke) ∧ Fight(sadollah, akiyama) ∧ Fight(musoke, yakovlev) ::: At UFC Fight Night, Sadollah was scheduled to fight Musoke. Sadollah fought Akiyama at UFC Fight Night. Musoke fought Yakovlev at UFC Fight Night.\nInjured(jung) ::: Jung was injured at UFC Fight Night.\n∀x (Injured(x) → ¬Fight(x, y)) ::: Injured people did not fight at UFC Fight Night.\nConclusion:\n¬Fight(jung, y) ::: Jung did not fight at UFC Fight Night.\n------"
    ]
  },
  {
    "id": "FOLIO_train_941",
    "context": "UFC Fight Night was a mixed martial arts event and was held in Sweden. At UFC Fight Night, Sadollah was scheduled to fight Musoke. Sadollah fought Akiyama at UFC Fight Night. Musoke fought Yakovlev at UFC Fight Night. Jung was injured at UFC Fight Night. Injured people did not fight at UFC Fight Night.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Sadollah fought Musoke.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nUFCFightNight(x) ::: x is a UFC Fight Night.\nScheduledToFight(x, y) ::: x is scheduled to fight y.\nFight(x, y) ::: x fought y.\nInjured(x) ::: x is injured.\nSweden(x) ::: x is in Sweden.\nPremises:\nUFCFightNight(ufcFightNight) ∧ Sweden(ufcFightNight) ::: UFC Fight Night was a mixed martial arts event and was held in Sweden.\nScheduledToFight(sadollah, musoke) ∧ ScheduledToFight(sadollah, akiyama) ::: At UFC Fight Night, Sadollah was scheduled to fight Musoke. Sadollah fought Akiyama at UFC Fight Night.\nFight(musoke, yakovlev) ::: Musoke fought Yakovlev at UFC Fight Night.\nInjured(jung) ::: Jung was injured at UFC Fight Night.\n∀x (Injured(x) → ¬Fight(x, y)) ::: Injured people did"
    ]
  },
  {
    "id": "FOLIO_train_942",
    "context": "UFC Fight Night was a mixed martial arts event and was held in Sweden. At UFC Fight Night, Sadollah was scheduled to fight Musoke. Sadollah fought Akiyama at UFC Fight Night. Musoke fought Yakovlev at UFC Fight Night. Jung was injured at UFC Fight Night. Injured people did not fight at UFC Fight Night.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Nelson fought Story at UFC Fight Night.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFight(x, y) ::: x fought y.\nScheduled(x, y) ::: x was scheduled to fight y.\nInjured(x) ::: x was injured.\nUFCFightNight(x) ::: x was held in Sweden.\nPremises:\nUFCFightNight(ufcFightNight) ::: UFC Fight Night was a mixed martial arts event and was held in Sweden.\nScheduled(sadollah, musoke) ∧ Fight(sadollah, akiyama) ∧ Fight(musoke, yakovlev) ∧ Injured(jung) ::: At UFC Fight Night, Sadollah was scheduled to fight Musoke. Sadollah fought Akiyama at UFC Fight Night. Musoke fought Yakovlev at UFC Fight Night. Jung was injured at UFC Fight Night.\nInjured(x) → ¬Fight(x, y) ::: Injured people did not fight at UFC Fight Night.\nConclusion:\nFight(nelson, story) ::: Nelson fought Story at UFC Fight Night.\n------\nProblem:\nThe 2"
    ]
  },
  {
    "id": "FOLIO_train_943",
    "context": "All drinks are edible. All juices are drinks. All orange juice is a juice. A juice is either an orange juice or an apple juice. All apple juice is sweet. If coke is apple juice, then coke is a drink. If coke is not apple juice, then coke is not edible.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Coke is orange juice.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDrink(x) ::: x is a drink.\nEdible(x) ::: x is edible.\nJuice(x) ::: x is a juice.\nOrangeJuice(x) ::: x is an orange juice.\nAppleJuice(x) ::: x is an apple juice.\nSweet(x) ::: x is sweet.\nCoke(x) ::: x is coke.\nPremises:\n∀x (Drink(x) → Edible(x)) ::: All drinks are edible.\n∀x (Juice(x) → Drink(x)) ::: All juices are drinks.\nOrangeJuice(orangeJuice) ::: All orange juice is a juice.\n∀x (Juice(x) → (OrangeJuice(x) ⊕ AppleJuice(x))) ::: A juice is either an orange juice or an apple juice.\n∀x (AppleJuice(x) → Sweet(x)) ::: All apple juice is sweet.\nCoke(coke) ::: coke is coke.\n(AppleJu"
    ]
  },
  {
    "id": "FOLIO_train_944",
    "context": "All drinks are edible. All juices are drinks. All orange juice is a juice. A juice is either an orange juice or an apple juice. All apple juice is sweet. If coke is apple juice, then coke is a drink. If coke is not apple juice, then coke is not edible.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Coke is edible and sweet.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDrink(x) ::: x is a drink.\nEdible(x) ::: x is edible.\nJuice(x) ::: x is a juice.\nOrangeJuice(x) ::: x is an orange juice.\nAppleJuice(x) ::: x is an apple juice.\nSweet(x) ::: x is sweet.\nCoke(x) ::: x is coke.\nPremises:\n∀x (Drink(x) → Edible(x)) ::: All drinks are edible.\n∀x (Juice(x) → Drink(x)) ::: All juices are drinks.\nOrangeJuice(orangeJuice) ::: All orange juice is a juice.\n∀x (Juice(x) → (OrangeJuice(x) ⊕ AppleJuice(x))) ::: A juice is either an orange juice or an apple juice.\n∀x (AppleJuice(x) → Sweet(x)) ::: All apple juice is sweet.\nCoke(coke) ::: Coke is coke.\n(AppleJu"
    ]
  },
  {
    "id": "FOLIO_train_945",
    "context": "All drinks are edible. All juices are drinks. All orange juice is a juice. A juice is either an orange juice or an apple juice. All apple juice is sweet. If coke is apple juice, then coke is a drink. If coke is not apple juice, then coke is not edible.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Coke is not edible and sweet.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDrink(x) ::: x is a drink.\nEdible(x) ::: x is edible.\nJuice(x) ::: x is a juice.\nOrangeJuice(x) ::: x is an orange juice.\nAppleJuice(x) ::: x is an apple juice.\nSweet(x) ::: x is sweet.\nCoke(x) ::: x is coke.\nPremises:\n∀x (Drink(x) → Edible(x)) ::: All drinks are edible.\n∀x (Juice(x) → Drink(x)) ::: All juices are drinks.\nOrangeJuice(orangeJuice) ::: All orange juice is a juice.\n∀x (Juice(x) → (OrangeJuice(x) ⊕ AppleJuice(x))) ::: A juice is either an orange juice or an apple juice.\n∀x (AppleJuice(x) → Sweet(x)) ::: All apple juice is sweet.\nCoke(coke) ::: Coke is coke.\n(AppleJu"
    ]
  },
  {
    "id": "FOLIO_train_946",
    "context": "Federico Garcia Lorca was a talented Spanish poet and he supported the Popular Front. The Spanish Nationalists opposed anyone who supported the Popular Front Talented poets are popular. Spanish Nationalists killed anyone who they opposed and were popular. Daniel supported the Popular Front but was not popular.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Daniel was not killed by the Spanish Nationalists.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSpanish(x) ::: x is a Spanish person.\nPoet(x) ::: x is a poet.\nTalented(x) ::: x is talented.\nPopular(x) ::: x is popular.\nSupport(x, y) ::: x supports y.\nOppose(x, y) ::: x opposes y.\nKill(x, y) ::: x kills y.\nPremises:\nSpanish(federico) ∧ Poet(federico) ∧ Talented(federico) ∧ Support(federico, popularFront) ::: Federico Garcia Lorca was a talented Spanish poet and he supported the Popular Front.\n∀x (Support(x, popularFront) → Oppose(spanishNationalists, x)) ::: The Spanish Nationalists opposed anyone who supported the Popular Front\n∀x (Talented(x) ∧ Poet(x) → Popular(x)) ::: Talented poets are popular.\n∀x (Oppose(spanishNationalists, x) ∧ Popular(x) → Kill(spanishNationalists, x)) :::"
    ]
  },
  {
    "id": "FOLIO_train_947",
    "context": "Federico Garcia Lorca was a talented Spanish poet and he supported the Popular Front. The Spanish Nationalists opposed anyone who supported the Popular Front Talented poets are popular. Spanish Nationalists killed anyone who they opposed and were popular. Daniel supported the Popular Front but was not popular.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Lorca was killed by the Spanish Nationalists.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSpanish(x) ::: x is a Spanish person.\nPoet(x) ::: x is a poet.\nTalented(x) ::: x is talented.\nPopular(x) ::: x is popular.\nSupport(x, y) ::: x supports y.\nOppose(x, y) ::: x opposes y.\nKill(x, y) ::: x kills y.\nPremises:\nSpanish(lorca) ∧ Poet(lorca) ∧ Talented(lorca) ∧ Support(lorca, popularFront) ::: Federico Garcia Lorca was a talented Spanish poet and he supported the Popular Front.\n∀x (SpanishNationalist(x) → Oppose(x, popularFront)) ::: The Spanish Nationalists opposed anyone who supported the Popular Front.\n∀x (Talented(x) → Popular(x)) ::: Talented poets are popular.\n∀x (SpanishNationalist(x) ∧ Popular(x) → Kill(x, y)) ::: Spanish Nationalists killed anyone who they opposed and were popular.\nSupport(daniel, popularFront)"
    ]
  },
  {
    "id": "FOLIO_train_948",
    "context": "People either drink kombucha every day or drink Coca-Cola or Pepsi products every day. If people drink Coca-Cola or Pepsi products every day, then they grew up with extremely busy parents who did not have time to pack them lunch. If people drink Coca-Cola or Pepsi products every day, then they have to visit the dentist frequently. If people grew up with extremely busy parents who did not have time to pack them lunch, then they have erratic and diverse eating habits. If people have erratic and diverse eating habits, then they do not have consistent everyday routines and like sticking to a solid schedule. Franny either both grew up with extremely busy parents who did not have time to pack her lunch and has consistent everyday routines and like sticking to a solid schedule, or she neither grew up with extremely busy parents who did not have time to pack her lunch nor has consistent everyday routines and likes sticking to a schedule.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Franny has to visit the dentist frequently.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDrink(x, y) ::: x drinks y.\nKombucha(x) ::: x is kombucha.\nCocaCola(x) ::: x is Coca-Cola.\nPepsi(x) ::: x is Pepsi.\nGrewUp(x, y) ::: x grew up with y.\nBusy(x) ::: x is extremely busy.\nParent(x, y) ::: x is a parent of y.\nPack(x, y) ::: x packs y.\nLunch(x) ::: x is lunch.\nErratic(x) ::: x is erratic.\nDiverse(x) ::: x is diverse.\nEatingHabits(x) ::: x has eating habits.\nConsistent(x) ::: x is consistent.\nRoutine(x) ::: x is a routine.\nSchedule(x) ::: x is a schedule.\nLike(x, y) ::: x likes y.\nPremises:\n∀x (Drink(x, kombucha) ⊕ Drink(x, cocaCola) ⊕ Drink(x, p"
    ]
  },
  {
    "id": "FOLIO_train_949",
    "context": "People either drink kombucha every day or drink Coca-Cola or Pepsi products every day. If people drink Coca-Cola or Pepsi products every day, then they grew up with extremely busy parents who did not have time to pack them lunch. If people drink Coca-Cola or Pepsi products every day, then they have to visit the dentist frequently. If people grew up with extremely busy parents who did not have time to pack them lunch, then they have erratic and diverse eating habits. If people have erratic and diverse eating habits, then they do not have consistent everyday routines and like sticking to a solid schedule. Franny either both grew up with extremely busy parents who did not have time to pack her lunch and has consistent everyday routines and like sticking to a solid schedule, or she neither grew up with extremely busy parents who did not have time to pack her lunch nor has consistent everyday routines and likes sticking to a schedule.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Franny either both grew up with extremely busy parents who did not have time to pack her lunch and drink kombucha every day or neither grew up with extremely busy parents who did not have time to pack her lunch nor drink kombucha every day, then Franny neither visits the dentist frequently nor drinks Coca Cola or Pepsi products every day.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDrink(x, y) ::: x drinks y.\nKombucha(x) ::: x is kombucha.\nCocaCola(x) ::: x is Coca-Cola.\nPepsi(x) ::: x is Pepsi.\nProduct(x) ::: x is a product.\nGrewUp(x, y) ::: x grew up with y.\nParent(x) ::: x is a parent.\nBusy(x) ::: x is busy.\nTime(x) ::: x is time.\nPack(x, y) ::: x packs y.\nLunch(x) ::: x is lunch.\nErratic(x) ::: x is erratic.\nDiverse(x) ::: x is diverse.\nEating(x) ::: x is eating.\nHabit(x) ::: x is a habit.\nEveryday(x) ::: x is everyday.\nRoutine(x) ::: x is a routine.\nSchedule(x) ::: x is a schedule.\nLike(x, y) ::: x likes y.\nVisit(x, y) ::: x visits y.\nDent"
    ]
  },
  {
    "id": "FOLIO_train_950",
    "context": "People either drink kombucha every day or drink Coca-Cola or Pepsi products every day. If people drink Coca-Cola or Pepsi products every day, then they grew up with extremely busy parents who did not have time to pack them lunch. If people drink Coca-Cola or Pepsi products every day, then they have to visit the dentist frequently. If people grew up with extremely busy parents who did not have time to pack them lunch, then they have erratic and diverse eating habits. If people have erratic and diverse eating habits, then they do not have consistent everyday routines and like sticking to a solid schedule. Franny either both grew up with extremely busy parents who did not have time to pack her lunch and has consistent everyday routines and like sticking to a solid schedule, or she neither grew up with extremely busy parents who did not have time to pack her lunch nor has consistent everyday routines and likes sticking to a schedule.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Franny either visits the dentist frequently or drinks kombucha every day, then Franny both visits the dentist frequently and drinks Coca-Cola or Pepsi products every day.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDrink(x, y) ::: x drinks y.\nKombucha(x) ::: x is kombucha.\nCocaCola(x) ::: x is Coca-Cola.\nPepsi(x) ::: x is Pepsi.\nProduct(x) ::: x is a product.\nParent(x, y) ::: x is a parent of y.\nBusy(x) ::: x is busy.\nTime(x) ::: x is time.\nPack(x, y) ::: x packs y.\nLunch(x) ::: x is lunch.\nErratic(x) ::: x is erratic.\nDiverse(x) ::: x is diverse.\nEatingHabits(x) ::: x has eating habits.\nRoutine(x) ::: x is a routine.\nSchedule(x) ::: x is a schedule.\nLike(x, y) ::: x likes y.\nVisit(x, y) ::: x visits y.\nDentist(x) ::: x is a dentist.\nFrequently(x) ::: x is frequently.\nFranny(x) ::: x is Franny.\nPremises:\n∀x (Drink(x, kombucha) ⊕ Drink(x, cocaCola) ⊕ Drink(x, pepsi)) ::: People either drink kombucha every day or drink Coca-Cola or Pepsi products every day.\n∀x (Drink(x, cocaCola) ∨ Drink(x, pepsi)) → ∀y (Parent(y, x) ∧ Busy(y) ∧ ¬Time(y) ∧ Pack(y, lunch)) ::: If people drink Coca-Cola or Pepsi products every day, then they grew up with extremely busy parents who did not have time to pack them lunch.\n∀x (Drink(x, cocaCola) ∨ Drink(x, pepsi)) → ∀y (Visit(x, y) ∧ Dentist(y) ∧ Frequently(y)) ::: If people drink Coca-Cola or Pepsi products every day, then they have to visit the dentist frequently.\n∀x (Parent(x, y) ∧ Busy(x) ∧ ¬Time(x) ∧ Pack(x, lunch)) → ∀z (EatingHabits(z) ∧ Erratic(z) ∧ Diverse(z)) ::: If people grew up with extremely busy parents who did not have time to pack them lunch, then they have erratic and diverse eating habits.\n∀x (EatingHabits(x) ∧ Erratic(x) ∧ Diverse(x)) → ∀y (Routine(y) ∧ Schedule(y) ∧ ¬Like(x, y)) ::: If people have erratic and diverse eating habits, then they do not have consistent everyday routines and like sticking to a solid schedule.\n(Parent(franny, x) ∧ Busy(x) ∧ ¬Time(x) ∧ Pack(x, lunch)) ⊕ (Routine(franny) ∧ Schedule(franny) ∧ Like(franny, schedule)) ::: Franny either both grew up with extremely busy parents who did not have time to pack her lunch and has consistent everyday routines and like sticking to a solid schedule, or she neither grew up with extremely busy parents who did not have time to pack her lunch nor has consistent everyday routines and likes sticking to a schedule.\nConclusion:\n(Visit(franny, dentist) ∧ Frequently(dentist)) ⊕ Drink(franny, kombucha) → (Visit(franny, dentist) ∧ Frequently(dentist)) ∧ (Drink(franny, cocaCola) ∨ Drink(franny, pepsi)) ::: If Franny either visits the dentist frequently or drinks kombucha every day, then Franny both visits the dentist frequently and drinks Coca-Cola or Pepsi products every day.\n------"
    ]
  },
  {
    "id": "FOLIO_train_951",
    "context": "If a customer subscribes to AMC A List, then he/she can watch 3 movies every week without any additional fees. Some customers go to cinemas every week. Customers who prefer TV series will not watch TV series in cinemas. James watches TV series in cinemas. James subscribes to AMC A List. Peter prefers TV series.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James is not able to watch 3 movies every week without any additional fees.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCustomer(x) ::: x is a customer.\nSubscribe(x, y) ::: x subscribes to y.\nWatch(x, y) ::: x watches y.\nMovie(x) ::: x is a movie.\nTVSeries(x) ::: x is a TV series.\nAMC(x) ::: x is AMC.\nAlist(x) ::: x is AMC A List.\nPremises:\n∀x (Subscribe(x, Alist) → Watch(x, Movie) ∧ ∀y (Week(y) → Watch(x, y))) ::: If a customer subscribes to AMC A List, then he/she can watch 3 movies every week without any additional fees.\n∃x (Customer(x) ∧ ∀y (Week(y) → Watch(x, y))) ::: Some customers go to cinemas every week.\n∀x (Prefer(x, TVSeries) → ¬Watch(x, TVSeries)) ::: Customers who prefer TV series will not watch TV series in cinemas.\nWatch(james, TVSeries) ::: James watches TV series in cinemas.\nSubscribe(james, Alist) ::: James subscribes to AMC A List.\nPrefer(peter, TVSeries) ::: Peter prefers TV series.\nConclusion:\n¬Watch(james, Movie) ∧ ∀y (Week(y) → Watch(james, y)) ::: James is not able to watch 3 movies every week without any additional fees.\n------\nProblem:\nIf a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she"
    ]
  },
  {
    "id": "FOLIO_train_952",
    "context": "If a customer subscribes to AMC A List, then he/she can watch 3 movies every week without any additional fees. Some customers go to cinemas every week. Customers who prefer TV series will not watch TV series in cinemas. James watches TV series in cinemas. James subscribes to AMC A List. Peter prefers TV series.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James goes to cinemas every week.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCustomer(x) ::: x is a customer.\nSubscribe(x, y) ::: x subscribes to y.\nWatch(x, y) ::: x watches y.\nMovie(x) ::: x is a movie.\nTVSeries(x) ::: x is a TV series.\nAMC(x) ::: x is AMC.\nAlist(x) ::: x is A List.\nPremises:\n∀x (Subscribe(x, alist) → Watch(x, movie)) ::: If a customer subscribes to AMC A List, then he/she can watch 3 movies every week without any additional fees.\n∃x (Customer(x) ∧ Watch(x, movie)) ::: Some customers go to cinemas every week.\n∀x (Prefer(x, TVSeries) → ¬Watch(x, TVSeries)) ::: Customers who prefer TV series will not watch TV series in cinemas.\nWatch(james, TVSeries) ::: James watches TV series in cinemas.\nSubscribe(james, alist) ::: James subscribes to AMC A List.\nPrefer(peter, TVSeries) ::: Peter prefers TV series.\nConclusion:\nWatch(james, movie) ::: James goes to cinemas every week.\n------\nProblem:\nIf a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person."
    ]
  },
  {
    "id": "FOLIO_train_953",
    "context": "If a customer subscribes to AMC A List, then he/she can watch 3 movies every week without any additional fees. Some customers go to cinemas every week. Customers who prefer TV series will not watch TV series in cinemas. James watches TV series in cinemas. James subscribes to AMC A List. Peter prefers TV series.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Peter will not watch TV series in cinemas.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCustomer(x) ::: x is a customer.\nSubscribe(x, y) ::: x subscribes to y.\nWatch(x, y) ::: x watches y.\nMovie(x) ::: x is a movie.\nTVSeries(x) ::: x is a TV series.\nAMC(x) ::: x is AMC.\nAList(x) ::: x is A List.\nPremises:\n∀x (Subscribe(x, AList) → Watch(x, Movie)) ::: If a customer subscribes to AMC A List, then he/she can watch 3 movies every week without any additional fees.\n∃x (Customer(x) ∧ Watch(x, Movie)) ::: Some customers go to cinemas every week.\n∀x (Prefer(x, TVSeries) → ¬Watch(x, TVSeries)) ::: Customers who prefer TV series will not watch TV series in cinemas.\nWatch(james, TVSeries) ::: James watches TV series in cinemas.\nSubscribe(james, AList) ::: James subscribes to AMC A List.\nPrefer(peter, TVSeries) ::: Peter prefers TV series.\nConclusion:\n¬Watch(peter, TVSeries) ::: Peter will not watch TV series in cinemas.\n------\nProblem:\nIf a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she"
    ]
  },
  {
    "id": "FOLIO_train_954",
    "context": "Bulbophyllum attenuatum is in the genus bulbophyllum. All bulbophyllum are orchids.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Bulbophyllum attenuatum is not an orchid.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBulbophyllumAttenuatum(x) ::: x is Bulbophyllum attenuatum.\nGenusBulbophyllum(x) ::: x is in the genus bulbophyllum.\nOrchid(x) ::: x is an orchid.\nPremises:\nBulbophyllumAttenuatum(bulbophyllumAttenuatum) ::: Bulbophyllum attenuatum is in the genus bulbophyllum.\n∀x (GenusBulbophyllum(x) → Orchid(x)) ::: All bulbophyllum are orchids.\nConclusion:\n¬Orchid(bulbophyllumAttenuatum) ::: Bulbophyllum attenuatum is not an orchid.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.\n###\nPredicates:\nDependent(x) ::: x is a person dependent on caffeine.\nDrinks(x) ::: x regularly drinks coffee.\nJokes(x) ::: x jokes about being addicted to caffeine.\nUnaware(x) ::: x is unaware that caffeine is a drug.\nStudent(x) ::: x is a student.\nPremises:\n∀x (Drinks(x) → Dependent(x)) ::: All people who regularly drink coffee are dependent on caffeine.\n∀x (Drinks(x) ⊕ Jokes(x)) ::: People either regularly drink coffee or joke about being addicted to caffeine.\n∀x (Jokes(x) → ¬Unaware(x)) ::: No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. \n(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina)) ::: Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. \n¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina)) ::: If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nConclusion:\nJokes(rina) ⊕ Unaware(rina) ::: Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\n((Jokes(rina) ∧ Unaware(rina)) ⊕ ¬(Jokes(rina) ∨ Unaware(rina))) → (Jokes(rina) ∧ Drinks(rina)) ::: If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware"
    ]
  },
  {
    "id": "FOLIO_train_955",
    "context": "There are eight federal districts of Russia: Central, Northwestern, Southern, North Caucasian, Volga, Ural, Siberian and Far Eastern. The Central federal district has the largest population among all federal districts in Russia. Moscow is the administrative center of the Central federal district. Yekaterinburg is the administrative center of the Ural federal district. Vladivostok is the administrative center of the Far Eastern federal district. The Far Eastern federal district has the largest area among all federal districts in Russia. Some federal districts of Russia were established in 2000.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Vladivostok is the administrative center of the federal district with the largest area.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFederalDistrict(x) ::: x is a federal district of Russia.\nPopulation(x) ::: x is the population of a federal district.\nArea(x) ::: x is the area of a federal district.\nAdministrativeCenter(x, y) ::: x is the administrative center of y.\nEstablished(x) ::: x was established.\nPremises:\nFederalDistrict(central) ∧ FederalDistrict(northwestern) ∧ FederalDistrict(southern) ∧ FederalDistrict(northcaucasian) ∧ FederalDistrict(volga) ∧ FederalDistrict(ural) ∧ FederalDistrict(siberian) ∧ FederalDistrict(fareastern) ::: There are eight federal districts of Russia: Central, Northwestern, Southern, North Caucasian, Volga, Ural, Siberian and Far Eastern.\nPopulation(central) > Population(northwestern) ∧ Population(central) > Population(southern) ∧ Population(central) > Population(northcaucasian) ∧ Population(central) > Population(volga) ∧ Population(central) > Population(ural) ∧ Population(central) > Population(siberian) ∧ Population(central) > Population(fareastern) ::: The Central federal district has the largest population among all federal districts in Russia.\nAdministrativeCenter(moscow, central) ::: Moscow is the administrative center of the Central federal district.\nAdministrativeCenter(yekaterinburg, ural) ::: Yekaterinburg is the administrative center of the Ural federal district.\nAdministrativeCenter(vladivostok, fareastern) ::: Vladivostok is the administrative center of the Far Eastern federal district.\nArea(fareastern) > Area(central) ∧ Area(fareastern) > Area(northwestern) ∧ Area(fareastern) > Area(southern) ∧ Area(fareastern) > Area(northcaucasian) ∧ Area(fareastern) > Area(volga) ∧ Area(fareastern) > Area(ural) ∧ Area(fareastern) > Area(siberian) ::: The Far Eastern federal district has the largest area among all federal districts in Russia.\nEstablished(someFederalDistrictsOfRussia) ::: Some federal districts of Russia were established in 2000.\nConclusion:\nAdministrativeCenter(vladivostok, federalDistrictWithLargestArea) ::: Vladivostok is the administrative center of the federal district with the largest area.\n------\nProblem:\nThe United States of America is a federal republic consisting of 50 states, a federal district, five major self-governing territories, and various possessions. The state of California is the most populous state in the United States of America. The state of Texas is the second most populous state in the United States of America. The state of Florida is the third most populous state in the United States of America. The state of New York is the fourth most populous state in the United States of America. The state of Pennsylvania is the fifth most populous state in the United States of America. The state of Illinois is the sixth most populous state in the United States of America. The state of Ohio is the seventh most populous state in the United States of America. The state of Georgia is the eighth most populous state in the United States of America. The state of North Carolina is the ninth most populous state in the United States of America. The state of Michigan is the tenth most populous state in the United States of America.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The state of California is the most populous state in the United States of America.\nBased on the above information, is the following statement true, false, or uncertain? The state of Texas is the second most populous state in the United States of America.\nBased on the above information, is the following statement true, false, or uncertain? The state of Florida is the third most populous state in the United States of America.\nBased on the above information, is the following statement true, false, or uncertain? The state of New York is the fourth most populous state in the United States of America."
    ]
  },
  {
    "id": "FOLIO_train_956",
    "context": "There are eight federal districts of Russia: Central, Northwestern, Southern, North Caucasian, Volga, Ural, Siberian and Far Eastern. The Central federal district has the largest population among all federal districts in Russia. Moscow is the administrative center of the Central federal district. Yekaterinburg is the administrative center of the Ural federal district. Vladivostok is the administrative center of the Far Eastern federal district. The Far Eastern federal district has the largest area among all federal districts in Russia. Some federal districts of Russia were established in 2000.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Moscow is the administrative center of the federal district with the largest population.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFederalDistrict(x) ::: x is a federal district of Russia.\nPopulation(x) ::: x is the population of a federal district.\nAdministrativeCenter(x, y) ::: x is the administrative center of y.\nArea(x) ::: x is the area of a federal district.\nEstablished(x) ::: x is a federal district established in 2000.\nPremises:\nFederalDistrict(central) ∧ FederalDistrict(northwestern) ∧ FederalDistrict(southern) ∧ FederalDistrict(northcaucasian) ∧ FederalDistrict(volga) ∧ FederalDistrict(ural) ∧ FederalDistrict(siberian) ∧ FederalDistrict(fareastern) ::: There are eight federal districts of Russia: Central, Northwestern, Southern, North Caucasian, Volga, Ural, Siberian and Far Eastern.\nPopulation(central) > Population(northwestern) ∧ Population(central) > Population(southern) ∧ Population(central) > Population(northcaucasian) ∧ Population(central) > Population(volga) ∧ Population(central) > Population(ural) ∧ Population(central) > Population(siberian) ∧ Population(central) > Population(fareastern) ::: The Central federal district has the largest population among all federal districts in Russia.\nAdministrativeCenter(moscow, central) ::: Moscow is the administrative center of the Central federal district.\nAdministrativeCenter(yekaterinburg, ural) ::: Yekaterinburg is the administrative center of the Ural federal district.\nAdministrativeCenter(vladivostok, fareastern) ::: Vladivostok is the administrative center of the Far Eastern federal district.\nArea(fareastern) > Area(central) ∧ Area(fareastern) > Area(northwestern) ∧ Area(fareastern) > Area(southern) ∧ Area(fareastern) > Area(northcaucasian) ∧ Area(fareastern) > Area(volga) ∧ Area(fareastern) > Area(ural) ∧ Area(fareastern) > Area(siberian) ::: The Far Eastern federal district has the largest area among all federal districts in Russia.\nEstablished(northwestern) ∧ Established(southern) ∧ Established(northcaucasian) ∧ Established(volga) ∧ Established(ural) ∧ Established(siberian) ∧ Established(fareastern) ::: Some federal districts of Russia were established in 2000.\nConclusion:\nAdministrativeCenter(moscow, x) ∧ Population(x) > Population(y) ::: Moscow is the administrative center of the federal district with the largest population.\n------\nProblem:\nThe United States of America is a federal republic consisting of 50 states, a federal district, five major self-governing territories, and various possessions. The state of California is the most populous state in the United States of America. The state of Texas is the second most populous state in the United States of America. The state of Florida is the third most populous state in the United States of America. The state of New York is the fourth most populous state in the United States of America. The state of Pennsylvania is the fifth most populous state in the United States of America. The state of Illinois is the sixth most populous state in the United States of America. The state of Ohio is the seventh most populous state in the United States of America. The state of Georgia is the eighth most populous state in the United States of America. The state of North Carolina is the ninth most populous state in the United States of America. The state of Michigan is the tenth most populous state in the United States of America.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The state of California is the most populous state in the United States of America.\nBased on the above information, is the following statement true, false, or uncertain? The state of Texas is the second most populous state in the United States of"
    ]
  },
  {
    "id": "FOLIO_train_957",
    "context": "There are eight federal districts of Russia: Central, Northwestern, Southern, North Caucasian, Volga, Ural, Siberian and Far Eastern. The Central federal district has the largest population among all federal districts in Russia. Moscow is the administrative center of the Central federal district. Yekaterinburg is the administrative center of the Ural federal district. Vladivostok is the administrative center of the Far Eastern federal district. The Far Eastern federal district has the largest area among all federal districts in Russia. Some federal districts of Russia were established in 2000.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Northwestern federal district was established in 2000.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFederalDistrict(x) ::: x is a federal district of Russia.\nPopulation(x) ::: x is the population of a federal district.\nArea(x) ::: x is the area of a federal district.\nAdministrativeCenter(x, y) ::: x is the administrative center of y.\nEstablished(x, y) ::: x is established in year y.\nPremises:\nFederalDistrict(central) ∧ FederalDistrict(northwestern) ∧ FederalDistrict(southern) ∧ FederalDistrict(northcaucasian) ∧ FederalDistrict(volga) ∧ FederalDistrict(ural) ∧ FederalDistrict(siberian) ∧ FederalDistrict(fareastern) ::: There are eight federal districts of Russia: Central, Northwestern, Southern, North Caucasian, Volga, Ural, Siberian and Far Eastern.\nPopulation(central) > Population(northwestern) ∧ Population(central) > Population(southern) ∧ Population(central) > Population(northcaucasian) ∧ Population(central) > Population(volga) ∧ Population(central) > Population(ural) ∧ Population(central) > Population(siberian) ∧ Population(central) > Population(fareastern) ::: The Central federal district has the largest population among all federal districts in Russia.\nAdministrativeCenter(moscow, central) ::: Moscow is the administrative center of the Central federal district.\nAdministrativeCenter(yekaterinburg, ural) ::: Yekaterinburg is the administrative center of the Ural federal district.\nAdministrativeCenter(vladivostok, fareastern) ::: Vladivostok is the administrative center of the Far Eastern federal district.\nArea(fareastern) > Area(central) ∧ Area(fareastern) > Area(northwestern) ∧ Area(fareastern) > Area(southern) ∧ Area(fareastern) > Area(northcaucasian) ∧ Area(fareastern) > Area(volga) ∧ Area(fareastern) > Area(ural) ∧ Area(fareastern) > Area(siberian) ::: The Far Eastern federal district has the largest area among all federal districts in Russia.\n∃x (Established(x, year2000) ∧ FederalDistrict(x)) ::: Some federal districts of Russia were established in 2000.\nConclusion:\nEstablished(northwestern, year2000) ::: The Northwestern federal district was established in 2000.\n------\nProblem:\nThe United States of America is a federal republic consisting of 50 states, a federal district, five major self-governing territories, and various possessions. The state of California is the most populous state in the United States of America. The state of Texas is the second most populous state in the United States of America. The state of Florida is the third most populous state in the United States of America. The state of New York is the fourth most populous state in the United States of America. The state of Pennsylvania is the fifth most populous state in the United States of America. The state of Illinois is the sixth most populous state in the United States of America. The state of Ohio is the seventh most populous state in the United States of America. The state of Georgia is the eighth most populous state in the United States of America. The state of North Carolina is the ninth most populous state in the United States of America. The state of Michigan is the tenth most populous state in the United States of America.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The state of New York is the fifth most populous state in the United States of America.\nBased on the above information, is the following statement true, false, or uncertain? The state of Texas is the most populous state in the United States of America.\nBased on the above information, is the following statement true, false, or uncertain? The state of California is the second most populous state in the United States of America.\n###\nPredicates:\nState(x) ::: x is a state in the United States of America.\nPopulation("
    ]
  },
  {
    "id": "FOLIO_train_958",
    "context": "All cancers are malignant tumors. No malignant tumor can be treated at home. All colorectal cancer is cancer. Having a cold can be treated at home. Breast cancer is neither having a cold nor a malignant tumor (exclusive).",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Breast cancer can be treated at home.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCancer(x) ::: x is a cancer.\nMalignantTumor(x) ::: x is a malignant tumor.\nColorectalCancer(x) ::: x is colorectal cancer.\nCold(x) ::: x is having a cold.\nBreastCancer(x) ::: x is breast cancer.\nTreatableAtHome(x) ::: x can be treated at home.\nPremises:\n∀x (Cancer(x) → MalignantTumor(x)) ::: All cancers are malignant tumors.\n∀x (MalignantTumor(x) → ¬TreatableAtHome(x)) ::: No malignant tumor can be treated at home.\n∀x (ColorectalCancer(x) → Cancer(x)) ::: All colorectal cancer is cancer.\nTreatableAtHome(cold) ::: Having a cold can be treated at home.\nBreastCancer(x) → (Cold(x) ⊕ MalignantTumor(x)) ::: Breast cancer is neither having a cold nor a malignant tumor (exclusive).\nConclusion:\nTreatableAtHome(breastCancer) ::: Breast cancer can be treated at home.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.\n###\nPredicates:\nDependent(x) ::: x is a person dependent on caffeine.\nDrinks(x) ::: x regularly drinks coffee.\nJokes(x) ::: x jokes about being addicted to caffeine.\nUnaware(x) ::: x is unaware that caffeine is a drug.\nStudent(x) ::: x is a student.\nPremises:\n∀x (Drinks(x) → Dependent(x)) ::: All people who regularly drink coffee are dependent on caffeine.\n∀x (Drinks(x) ⊕ Jokes(x)) ::: People either regularly drink coffee or joke about being addicted to caffeine.\n∀x (Jokes(x) → ¬Unaware(x)) ::: No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. \n(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina)) ::: Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. \n¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina)) ::: If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nConclusion:\nJokes(rina) ⊕ Unaware(rina) ::: Rina is either a person who jokes about being addicted to caffeine or is unaware that"
    ]
  },
  {
    "id": "FOLIO_train_959",
    "context": "All cancers are malignant tumors. No malignant tumor can be treated at home. All colorectal cancer is cancer. Having a cold can be treated at home. Breast cancer is neither having a cold nor a malignant tumor (exclusive).",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Breast cancer is colorectal cancer.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCancer(x) ::: x is a cancer.\nMalignantTumor(x) ::: x is a malignant tumor.\nColorectalCancer(x) ::: x is colorectal cancer.\nCold(x) ::: x is having a cold.\nBreastCancer(x) ::: x is breast cancer.\nTreatableAtHome(x) ::: x can be treated at home.\nPremises:\n∀x (Cancer(x) → MalignantTumor(x)) ::: All cancers are malignant tumors.\n∀x (MalignantTumor(x) → ¬TreatableAtHome(x)) ::: No malignant tumor can be treated at home.\n∀x (ColorectalCancer(x) → Cancer(x)) ::: All colorectal cancer is cancer.\nTreatableAtHome(cold) ::: Having a cold can be treated at home.\nBreastCancer(x) → (Cold(x) ⊕ MalignantTumor(x)) ::: Breast cancer is neither having a cold nor a malignant tumor (exclusive).\nConclusion:\nBreastCancer(x) → ColorectalCancer(x) ::: Breast cancer is colorectal cancer.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.\n###\nPredicates:\nDependent(x) ::: x is a person dependent on caffeine.\nDrinks(x) ::: x regularly drinks coffee.\nJokes(x) ::: x jokes about being addicted to caffeine.\nUnaware(x) ::: x is unaware that caffeine is a drug.\nStudent(x) ::: x is a student.\nPremises:\n∀x (Drinks(x) → Dependent(x)) ::: All people who regularly drink coffee are dependent on caffeine.\n∀x (Drinks(x) ⊕ Jokes(x)) ::: People either regularly drink coffee or joke about being addicted to caffeine.\n∀x (Jokes(x) → ¬Unaware(x)) ::: No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. \n(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina)) ::: Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. \n¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina)) ::: If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nConclusion:\nJokes(rina) ⊕ Unaware(rina) ::: Rina is either a person who jokes about being addicted to"
    ]
  },
  {
    "id": "FOLIO_train_960",
    "context": "All cancers are malignant tumors. No malignant tumor can be treated at home. All colorectal cancer is cancer. Having a cold can be treated at home. Breast cancer is neither having a cold nor a malignant tumor (exclusive).",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Breast cancer is not colorectal cancer.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCancer(x) ::: x is a cancer.\nMalignantTumor(x) ::: x is a malignant tumor.\nColorectalCancer(x) ::: x is colorectal cancer.\nCold(x) ::: x is having a cold.\nBreastCancer(x) ::: x is breast cancer.\nPremises:\n∀x (Cancer(x) → MalignantTumor(x)) ::: All cancers are malignant tumors.\n∀x (MalignantTumor(x) → ¬CanBeTreatedAtHome(x)) ::: No malignant tumor can be treated at home.\n∀x (ColorectalCancer(x) → Cancer(x)) ::: All colorectal cancer is cancer.\nCanBeTreatedAtHome(cold) ::: Having a cold can be treated at home.\nBreastCancer(x) → (¬Cold(x) ⊕ ¬MalignantTumor(x)) ::: Breast cancer is neither having a cold nor a malignant tumor (exclusive).\nConclusion:\nBreastCancer(x) → ¬ColorectalCancer(x) ::: Breast cancer is not colorectal cancer.\n------"
    ]
  },
  {
    "id": "FOLIO_train_961",
    "context": "All cancers are malignant tumors. No malignant tumor can be treated at home. All colorectal cancer is cancer. Having a cold can be treated at home. Breast cancer is neither having a cold nor a malignant tumor (exclusive).",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Breast cancer is colorectal cancer or a malignant tumor.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCancer(x) ::: x is a cancer.\nMalignantTumor(x) ::: x is a malignant tumor.\nColorectalCancer(x) ::: x is colorectal cancer.\nCold(x) ::: x is having a cold.\nBreastCancer(x) ::: x is breast cancer.\nTreatableAtHome(x) ::: x can be treated at home.\nPremises:\n∀x (Cancer(x) → MalignantTumor(x)) ::: All cancers are malignant tumors.\n∀x (MalignantTumor(x) → ¬TreatableAtHome(x)) ::: No malignant tumor can be treated at home.\n∀x (ColorectalCancer(x) → Cancer(x)) ::: All colorectal cancer is cancer.\n∀x (Cold(x) → TreatableAtHome(x)) ::: Having a cold can be treated at home.\nBreastCancer(x) → (Cold(x) ⊕ MalignantTumor(x)) ::: Breast cancer is neither having a cold nor a malignant tumor (exclusive).\nConclusion:\nBreastCancer(x) → (Colorect"
    ]
  },
  {
    "id": "FOLIO_train_962",
    "context": "All cancers are malignant tumors. No malignant tumor can be treated at home. All colorectal cancer is cancer. Having a cold can be treated at home. Breast cancer is neither having a cold nor a malignant tumor (exclusive).",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Breast cancer is colorectal cancer and a cancer.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCancer(x) ::: x is a cancer.\nMalignantTumor(x) ::: x is a malignant tumor.\nColorectalCancer(x) ::: x is colorectal cancer.\nCold(x) ::: x is having a cold.\nBreastCancer(x) ::: x is breast cancer.\nTreatableAtHome(x) ::: x can be treated at home.\nPremises:\n∀x (Cancer(x) → MalignantTumor(x)) ::: All cancers are malignant tumors.\n∀x (MalignantTumor(x) → ¬TreatableAtHome(x)) ::: No malignant tumor can be treated at home.\n∀x (ColorectalCancer(x) → Cancer(x)) ::: All colorectal cancer is cancer.\nTreatableAtHome(cold) ::: Having a cold can be treated at home.\nBreastCancer(x) → (Cold(x) ⊕ MalignantTumor(x)) ::: Breast cancer is neither having a cold nor a malignant tumor (exclusive).\nConclusion:\nColorectalCancer(breastCancer) ∧ Cancer(breastCancer"
    ]
  },
  {
    "id": "FOLIO_train_963",
    "context": "All cancers are malignant tumors. No malignant tumor can be treated at home. All colorectal cancer is cancer. Having a cold can be treated at home. Breast cancer is neither having a cold nor a malignant tumor (exclusive).",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If breast cancer is not colorectal cancer, then breast cancer is a malignant tumor.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCancer(x) ::: x is a cancer.\nMalignantTumor(x) ::: x is a malignant tumor.\nColorectalCancer(x) ::: x is colorectal cancer.\nCold(x) ::: x is having a cold.\nBreastCancer(x) ::: x is breast cancer.\nPremises:\n∀x (Cancer(x) → MalignantTumor(x)) ::: All cancers are malignant tumors.\n∀x (MalignantTumor(x) → ¬CanBeTreatedAtHome(x)) ::: No malignant tumor can be treated at home.\n∀x (ColorectalCancer(x) → Cancer(x)) ::: All colorectal cancer is cancer.\nCanBeTreatedAtHome(cold) ::: Having a cold can be treated at home.\nBreastCancer(x) → ¬(Cold(x) ⊕ MalignantTumor(x)) ::: Breast cancer is neither having a cold nor a malignant tumor (exclusive).\nConclusion:\nBreastCancer(x) → MalignantTumor(x) ::: If breast cancer is not colorectal cancer, then breast cancer is a"
    ]
  },
  {
    "id": "FOLIO_train_964",
    "context": "I should not worry about things outside of my control. Traffic is outside of my control.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? I should not worry about traffic.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nControl(x, y) ::: x controls y.\nWorry(x, y) ::: x worries about y.\nPremises:\n∀x ∀y (Control(x, y) → ¬Worry(x, y)) ::: I should not worry about things outside of my control.\nControl(me, traffic) ::: Traffic is outside of my control.\nConclusion:\n¬Worry(me, traffic) ::: I should not worry about traffic.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true"
    ]
  },
  {
    "id": "FOLIO_train_965",
    "context": "Roversi is an Italian surname. Alba Roversi uses Roversi as a surname. Paolo Roversi uses Roversi as a surname. Roberto Roversi uses Roversi as a surname. Paolo Roversi is a photographer. A photographer is a professional or an amateur.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Alba Roversi uses an Italian surname.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nItalian(x) ::: x is an Italian surname.\nUse(x, y) ::: x uses y as a surname.\nPhotographer(x) ::: x is a photographer.\nProfessional(x) ::: x is a professional.\nAmateur(x) ::: x is an amateur.\nPremises:\nItalian(roversi) ::: Roversi is an Italian surname.\nUse(alba, roversi) ::: Alba Roversi uses Roversi as a surname.\nUse(paolo, roversi) ::: Paolo Roversi uses Roversi as a surname.\nUse(roberto, roversi) ::: Roberto Roversi uses Roversi as a surname.\nPhotographer(paolo) ::: Paolo Roversi is a photographer.\nProfessional(x) ∨ Amateur(x) ::: A photographer is a professional or an amateur.\nConclusion:\nUse(alba, italian) ::: Alba Roversi uses an Italian surname.\n------\nProblem:\nA person is a person who is a human being. A person is a person who is a human being. A person is a person who is a human being. A person is a person who is a human being. A person is a person who is"
    ]
  },
  {
    "id": "FOLIO_train_966",
    "context": "Roversi is an Italian surname. Alba Roversi uses Roversi as a surname. Paolo Roversi uses Roversi as a surname. Roberto Roversi uses Roversi as a surname. Paolo Roversi is a photographer. A photographer is a professional or an amateur.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There are no photographers using an Italian surname.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nItalian(x) ::: x is an Italian surname.\nUse(x, y) ::: x uses y as a surname.\nPhotographer(x) ::: x is a photographer.\nProfessional(x) ::: x is a professional.\nAmateur(x) ::: x is an amateur.\nPremises:\nItalian(roversi) ::: Roversi is an Italian surname.\nUse(alba, roversi) ::: Alba Roversi uses Roversi as a surname.\nUse(paolo, roversi) ::: Paolo Roversi uses Roversi as a surname.\nUse(roberto, roversi) ::: Roberto Roversi uses Roversi as a surname.\nPhotographer(paolo) ::: Paolo Roversi is a photographer.\nProfessional(x) ∨ Amateur(x) ::: A photographer is a professional or an amateur.\nConclusion:\n¬∃x (Photographer(x) ∧ Use(x, roversi)) ::: There are no photographers using an Italian surname.\n------\nProblem:\nA person is either a student or a teacher. A student is a person. A teacher is a person. A person is either a student or a teacher.\nQuestion:"
    ]
  },
  {
    "id": "FOLIO_train_967",
    "context": "Roversi is an Italian surname. Alba Roversi uses Roversi as a surname. Paolo Roversi uses Roversi as a surname. Roberto Roversi uses Roversi as a surname. Paolo Roversi is a photographer. A photographer is a professional or an amateur.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Paolo is an amateur photographer.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nItalian(x) ::: x is an Italian.\nSurname(x, y) ::: x uses y as a surname.\nPhotographer(x) ::: x is a photographer.\nProfessional(x) ::: x is a professional.\nAmateur(x) ::: x is an amateur.\nPremises:\nItalian(alba) ∧ Surname(alba, roversi) ::: Alba Roversi uses Roversi as a surname.\nItalian(paolo) ∧ Surname(paolo, roversi) ::: Paolo Roversi uses Roversi as a surname.\nItalian(roberto) ∧ Surname(roberto, roversi) ::: Roberto Roversi uses Roversi as a surname.\nPhotographer(paolo) ::: Paolo Roversi is a photographer.\n∀x (Photographer(x) → (Professional(x) ∨ Amateur(x))) ::: A photographer is a professional or an amateur.\nConclusion:\nAmateur(paolo) ::: Paolo is an amateur photographer.\n------\nProblem:\nA person is either a student or a teacher. A student is a person. A teacher is a person. A person"
    ]
  },
  {
    "id": "FOLIO_train_968",
    "context": "Zaha Hadid is a British-Iraqi architect, artist and designer. Zaha Hadid was born on 31 October 1950 in Baghdad, Iraq. Hadid was a visiting professor of Architectural Design at the Yale School of Architecture. Max is an aspiring architecture student, and he plans to apply to Yale School of Architecture.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Hadid became a UK citizen later in her life.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBritish(x) ::: x is a British person.\nIraqi(x) ::: x is an Iraqi person.\nArchitect(x) ::: x is an architect.\nArtist(x) ::: x is an artist.\nDesigner(x) ::: x is a designer.\nBorn(x, y) ::: x was born in year y.\nVisitingProfessor(x, y) ::: x is a visiting professor of y.\nArchitecturalDesign(x) ::: x is architectural design.\nYaleSchoolOfArchitecture(x) ::: x is Yale School of Architecture.\nAspiring(x, y) ::: x is an aspiring y.\nApply(x, y) ::: x plans to apply to y.\nPremises:\nBritish(zaha) ∧ Iraqi(zaha) ∧ Architect(zaha) ∧ Artist(zaha) ∧ Designer(zaha) ∧ Born(zaha, year1950) ∧ Born(zaha, year1950) ∧ VisitingProfessor(zaha, architecturalDesign) ∧ YaleSchoolOfArchitecture(architecturalDesign) ::: Zaha Hadid is a British-Ira"
    ]
  },
  {
    "id": "FOLIO_train_969",
    "context": "Zaha Hadid is a British-Iraqi architect, artist and designer. Zaha Hadid was born on 31 October 1950 in Baghdad, Iraq. Hadid was a visiting professor of Architectural Design at the Yale School of Architecture. Max is an aspiring architecture student, and he plans to apply to Yale School of Architecture.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Hadid did some work in interior design.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBritish(x) ::: x is a British person.\nIraqi(x) ::: x is an Iraqi person.\nArchitect(x) ::: x is an architect.\nArtist(x) ::: x is an artist.\nDesigner(x) ::: x is a designer.\nBorn(x, y) ::: x was born in year y.\nVisitingProfessor(x, y) ::: x is a visiting professor of y.\nArchitecturalDesign(x) ::: x is architectural design.\nAspiring(x) ::: x is an aspiring person.\nStudent(x) ::: x is a student.\nApply(x, y) ::: x plans to apply to y.\nPremises:\nBritish(zaha) ∧ Iraqi(zaha) ∧ Architect(zaha) ∧ Artist(zaha) ∧ Designer(zaha) ∧ Born(zaha, year1950) ::: Zaha Hadid is a British-Iraqi architect, artist and designer.\nBorn(zaha, year1950) ∧ ¬Born(zaha, year1949) ::: Zaha Hadid was born on 31 October 1950 in Baghdad,"
    ]
  },
  {
    "id": "FOLIO_train_970",
    "context": "Zaha Hadid is a British-Iraqi architect, artist and designer. Zaha Hadid was born on 31 October 1950 in Baghdad, Iraq. Hadid was a visiting professor of Architectural Design at the Yale School of Architecture. Max is an aspiring architecture student, and he plans to apply to Yale School of Architecture.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Hadid was born in 1982.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBritish(x) ::: x is a British person.\nIraqi(x) ::: x is an Iraqi person.\nArchitect(x) ::: x is an architect.\nArtist(x) ::: x is an artist.\nDesigner(x) ::: x is a designer.\nBorn(x, y) ::: x was born in year y.\nVisitingProfessor(x, y) ::: x is a visiting professor of y.\nArchitecturalDesign(x) ::: x is architectural design.\nAspiring(x) ::: x is an aspiring person.\nApply(x, y) ::: x plans to apply to y.\nPremises:\nBritish(zaha) ∧ Iraqi(zaha) ∧ Architect(zaha) ∧ Artist(zaha) ∧ Designer(zaha) ∧ Born(zaha, year1950) ::: Zaha Hadid is a British-Iraqi architect, artist and designer. Zaha Hadid was born on 31 October 1950 in Baghdad, Iraq.\nVisitingProfessor(zaha, architecturalDesign) ::: Hadid was a visiting professor of Architectural Design at the Yale School of Architecture.\nAspiring(max) ∧ Apply(max, yaleSchoolOfArchitecture) ::: Max is an aspiring architecture student, and he plans to apply to Yale School of Architecture.\nConclusion:\nBorn(zaha, year1982) ::: Hadid was born in 1982.\n------"
    ]
  },
  {
    "id": "FOLIO_train_971",
    "context": "Zaha Hadid is a British-Iraqi architect, artist and designer. Zaha Hadid was born on 31 October 1950 in Baghdad, Iraq. Hadid was a visiting professor of Architectural Design at the Yale School of Architecture. Max is an aspiring architecture student, and he plans to apply to Yale School of Architecture.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Max admires Zaha Hadid.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBritish(x) ::: x is a British person.\nIraqi(x) ::: x is an Iraqi person.\nArchitect(x) ::: x is an architect.\nArtist(x) ::: x is an artist.\nDesigner(x) ::: x is a designer.\nBorn(x, y) ::: x was born in year y.\nVisitingProfessor(x, y) ::: x is a visiting professor of y.\nArchitecturalDesign(x) ::: x is architectural design.\nAspiring(x) ::: x is an aspiring person.\nStudent(x) ::: x is a student.\nApply(x, y) ::: x plans to apply to y.\nPremises:\nBritish(zaha) ∧ Iraqi(zaha) ∧ Architect(zaha) ∧ Artist(zaha) ∧ Designer(zaha) ∧ Born(zaha, year1950) ::: Zaha Hadid is a British-Iraqi architect, artist and designer.\nBorn(zaha, year1950) ∧ ¬Born(zaha, year1951) ::: Zaha Hadid was born on 31 October 1950 in Baghdad, Iraq.\nVisitingProfessor(zaha, architecturalDesign) ::: Zaha Hadid was a visiting professor of Architectural Design at the Yale School of Architecture.\nAspiring(max) ∧ Student(max) ∧ Apply(max, yaleSchoolOfArchitecture"
    ]
  },
  {
    "id": "FOLIO_train_972",
    "context": "Something is either an invasive neuroimaging technique or a noninvasive neuroimaging technique. All noninvasive neuroimaging techniques provide a spatial resolution of brains. If a technique provides a spatial resolution of brains, then it is a measurement of brain activity. All measurements of brain activity are used by neuroscience researchers. FMRI is either a measurement of brain activity or a noninvasive neuroimaging technique.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? FMRI provides a spatial resolution of brains.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nInvasive(x) ::: x is an invasive neuroimaging technique.\nNoninvasive(x) ::: x is a noninvasive neuroimaging technique.\nSpatialResolution(x) ::: x provides a spatial resolution of brains.\nMeasurement(x) ::: x is a measurement of brain activity.\nUsed(x) ::: x is used by neuroscience researchers.\nFMRI(x) ::: x is FMRI.\nPremises:\n∀x (Invasive(x) ⊕ Noninvasive(x)) ::: Something is either an invasive neuroimaging technique or a noninvasive neuroimaging technique.\n∀x (Noninvasive(x) → SpatialResolution(x)) ::: All noninvasive neuroimaging techniques provide a spatial resolution of brains.\n∀x (SpatialResolution(x) → Measurement(x)) ::: If a technique provides a spatial resolution of brains, then it is a measurement of brain activity.\n∀x (Measurement(x) → Used(x)) ::: All measurements of brain activity are used by neuroscience researchers.\nFMRI(fmri) ∧ (Measurement(fmri) ⊕ Noninvasive(fmri)) ::: FMRI is either a measurement of brain activity or a noninvasive neuroimaging technique.\nConclusion:\nSpatialResolution(fmri) ::: FMRI provides a spatial resolution of brains.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffe"
    ]
  },
  {
    "id": "FOLIO_train_973",
    "context": "Something is either an invasive neuroimaging technique or a noninvasive neuroimaging technique. All noninvasive neuroimaging techniques provide a spatial resolution of brains. If a technique provides a spatial resolution of brains, then it is a measurement of brain activity. All measurements of brain activity are used by neuroscience researchers. FMRI is either a measurement of brain activity or a noninvasive neuroimaging technique.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? FMRI is an invasive neuroimaging technique and is used by neuroscience researchers.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nInvasive(x) ::: x is an invasive neuroimaging technique.\nNoninvasive(x) ::: x is a noninvasive neuroimaging technique.\nSpatialResolution(x) ::: x provides a spatial resolution of brains.\nMeasurement(x) ::: x is a measurement of brain activity.\nUsed(x) ::: x is used by neuroscience researchers.\nFMRI(x) ::: x is FMRI.\nPremises:\n∀x (Noninvasive(x) → SpatialResolution(x)) ::: All noninvasive neuroimaging techniques provide a spatial resolution of brains.\n∀x (SpatialResolution(x) → Measurement(x)) ::: If a technique provides a spatial resolution of brains, then it is a measurement of brain activity.\n∀x (Measurement(x) → Used(x)) ::: All measurements of brain activity are used by neuroscience researchers.\n∀x (FMRI(x) → Measurement(x) ⊕ Noninvasive(x)) ::: FMRI is either a measurement of brain activity or a noninvasive neuroimaging technique.\nConclusion:\nFMRI(x) ∧ Used(x) ::: FMRI is an invasive neuroimaging technique and is used by neuroscience researchers.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware"
    ]
  },
  {
    "id": "FOLIO_train_974",
    "context": "Something is either an invasive neuroimaging technique or a noninvasive neuroimaging technique. All noninvasive neuroimaging techniques provide a spatial resolution of brains. If a technique provides a spatial resolution of brains, then it is a measurement of brain activity. All measurements of brain activity are used by neuroscience researchers. FMRI is either a measurement of brain activity or a noninvasive neuroimaging technique.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? FMRI is either an invasive neuroimaging technique or is used by neuroscience researchers.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nInvasive(x) ::: x is an invasive neuroimaging technique.\nNoninvasive(x) ::: x is a noninvasive neuroimaging technique.\nSpatialResolution(x) ::: x provides a spatial resolution of brains.\nMeasurement(x) ::: x is a measurement of brain activity.\nUsed(x) ::: x is used by neuroscience researchers.\nFMRI(x) ::: x is FMRI.\nPremises:\n∀x (Noninvasive(x) → SpatialResolution(x)) ::: All noninvasive neuroimaging techniques provide a spatial resolution of brains.\n∀x (SpatialResolution(x) → Measurement(x)) ::: If a technique provides a spatial resolution of brains, then it is a measurement of brain activity.\n∀x (Measurement(x) → Used(x)) ::: All measurements of brain activity are used by neuroscience researchers.\n∀x (FMRI(x) → (Measurement(x) ⊕ Noninvasive(x))) ::: FMRI is either a measurement of brain activity or a noninvasive neuroimaging technique.\nConclusion:\nFMRI(x) → (Invasive(x) ⊕ Used(x)) ::: FMRI is either an invasive neuroimaging technique or is used by neuroscience researchers.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug."
    ]
  },
  {
    "id": "FOLIO_train_975",
    "context": "Something is either an invasive neuroimaging technique or a noninvasive neuroimaging technique. All noninvasive neuroimaging techniques provide a spatial resolution of brains. If a technique provides a spatial resolution of brains, then it is a measurement of brain activity. All measurements of brain activity are used by neuroscience researchers. FMRI is either a measurement of brain activity or a noninvasive neuroimaging technique.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If fMRI is not an invasive neuroimaging technique and used by neuroscience researchers, then fMRI is neither a noninvasive neuroimaging technique nor provides a spatial resolution of brains.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nInvasive(x) ::: x is an invasive neuroimaging technique.\nNoninvasive(x) ::: x is a noninvasive neuroimaging technique.\nSpatialResolution(x) ::: x provides a spatial resolution of brains.\nMeasurement(x) ::: x is a measurement of brain activity.\nUsed(x) ::: x is used by neuroscience researchers.\nFMRI(x) ::: x is fMRI.\nPremises:\n∀x (Noninvasive(x) → SpatialResolution(x)) ::: All noninvasive neuroimaging techniques provide a spatial resolution of brains.\n∀x (SpatialResolution(x) → Measurement(x)) ::: If a technique provides a spatial resolution of brains, then it is a measurement of brain activity.\n∀x (Measurement(x) → Used(x)) ::: All measurements of brain activity are used by neuroscience researchers.\nFMRI(fMRI) ::: fMRI is fMRI.\nFMRI(fMRI) ∨ Noninvasive(fMRI) ::: fMRI is either a measurement of brain activity or a noninvasive neuroimaging technique.\nConclusion:\n¬(Invasive(fMRI) ∧ Used(fMRI)) → (Noninvasive(fMRI) ∧ ¬SpatialResolution(fMRI)) ::: If fMRI is not an invasive neuroimaging technique and used by neuroscience researchers, then fMRI is neither a noninvasive neuroimaging technique nor provides a spatial resolution"
    ]
  },
  {
    "id": "FOLIO_train_976",
    "context": "Either present their work at the conference or provide a tutorial session at the conference. All who present their work at the conference will attend in person. All those providing a tutorial session at the conference are invited to join the club. All who attend the conference in person are provided with souvenirs. All invited to join the club are provided with delicious meals. All provided with delicious meals are happy to communicate with each other during the dinner. All provided with delicious meals are invited to take a photo with the audience. James does not attend the conference in person and is not provided with souvenirs.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James is provided with souvenirs.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPresent(x) ::: x presents their work at the conference.\nProvide(x, y) ::: x provides y with a tutorial session at the conference.\nAttend(x) ::: x attends the conference in person.\nSouvenir(x) ::: x is provided with souvenirs.\nInvite(x, y) ::: x is invited to join the club.\nMeal(x) ::: x is provided with delicious meals.\nHappy(x) ::: x is happy to communicate with each other during the dinner.\nPhoto(x) ::: x is invited to take a photo with the audience.\nPremises:\n∀x (Present(x) ∨ Provide(x)) ::: Either present their work at the conference or provide a tutorial session at the conference.\n∀x (Present(x) → Attend(x)) ::: All who present their work at the conference will attend in person.\n∀x (Provide(x) → Invite(x)) ::: All those providing a tutorial session at the conference are invited to join the club.\n∀x (Attend(x) → Souvenir(x)) ::: All who attend the conference in person are provided with souvenirs.\n∀x (Invite(x) → Meal(x)) ::: All invited to join the club are provided with delicious meals.\n∀x (Meal(x) → Happy(x)) ::: All provided with delicious meals are happy to communicate with each other during the dinner.\n∀x (Meal(x) → Photo(x)) ::: All provided with delicious meals are invited to take a photo with"
    ]
  },
  {
    "id": "FOLIO_train_977",
    "context": "Either present their work at the conference or provide a tutorial session at the conference. All who present their work at the conference will attend in person. All those providing a tutorial session at the conference are invited to join the club. All who attend the conference in person are provided with souvenirs. All invited to join the club are provided with delicious meals. All provided with delicious meals are happy to communicate with each other during the dinner. All provided with delicious meals are invited to take a photo with the audience. James does not attend the conference in person and is not provided with souvenirs.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James is not provided with souvenirs.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPresent(x) ::: x presents their work at the conference.\nProvide(x, y) ::: x provides y with a tutorial session at the conference.\nAttend(x) ::: x attends the conference in person.\nSouvenir(x) ::: x is provided with souvenirs.\nInvite(x, y) ::: x is invited to join the club.\nMeal(x) ::: x is provided with delicious meals.\nHappy(x) ::: x is happy to communicate with each other during the dinner.\nPhoto(x) ::: x is invited to take a photo with the audience.\nPremises:\n∀x (Present(x) ∨ Provide(x, conference)) ::: Either present their work at the conference or provide a tutorial session at the conference.\n∀x (Present(x) → Attend(x)) ::: All who present their work at the conference will attend in person.\n∀x (Provide(x, conference) → Invite(x, club)) ::: All those providing a tutorial session at the conference are invited to join the club.\n∀x (Attend(x) → Souvenir(x)) ::: All who attend the conference in person are provided with souvenirs.\n∀x (Invite(x, club) → Meal(x)) ::: All invited to join the club are provided with delicious meals.\n∀x (Meal(x) → Happy(x)) ::: All provided with delicious meals are happy to communicate with each other during the dinner.\n∀x (Meal(x) → Photo(x)) ::: All provided with delicious"
    ]
  },
  {
    "id": "FOLIO_train_978",
    "context": "Either present their work at the conference or provide a tutorial session at the conference. All who present their work at the conference will attend in person. All those providing a tutorial session at the conference are invited to join the club. All who attend the conference in person are provided with souvenirs. All invited to join the club are provided with delicious meals. All provided with delicious meals are happy to communicate with each other during the dinner. All provided with delicious meals are invited to take a photo with the audience. James does not attend the conference in person and is not provided with souvenirs.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James is invited to take a photo with the audience and is happy to communicate with each other at the dinner.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPresent(x) ::: x presents their work at the conference.\nTutorial(x) ::: x provides a tutorial session at the conference.\nAttend(x) ::: x attends the conference in person.\nSouvenir(x) ::: x is provided with souvenirs.\nClub(x) ::: x is invited to join the club.\nMeal(x) ::: x is provided with delicious meals.\nHappy(x) ::: x is happy to communicate with each other during the dinner.\nPhoto(x) ::: x is invited to take a photo with the audience.\nPremises:\n(Present(x) ∨ Tutorial(x)) ∧ (Present(x) → Attend(x)) ∧ (Tutorial(x) → Club(x)) ∧ (Attend(x) → Souvenir(x)) ∧ (Club(x) → Meal(x)) ∧ (Meal(x) → Happy(x)) ∧ (Meal(x) → Photo(x)) ::: Either present their work at the conference or provide a tutorial session at the conference. All who present their work at the conference will attend in person. All those providing a tutorial session at the conference are invited to join the club. All who attend the conference in person are provided with souvenirs. All invited to join the club are provided with delicious meals. All provided with delicious meals are happy to communicate with each other during the dinner. All provided with delicious meals are invited to take a photo with the audience.\n¬Attend(james) ∧ ¬Souvenir(james) :::"
    ]
  },
  {
    "id": "FOLIO_train_979",
    "context": "Either present their work at the conference or provide a tutorial session at the conference. All who present their work at the conference will attend in person. All those providing a tutorial session at the conference are invited to join the club. All who attend the conference in person are provided with souvenirs. All invited to join the club are provided with delicious meals. All provided with delicious meals are happy to communicate with each other during the dinner. All provided with delicious meals are invited to take a photo with the audience. James does not attend the conference in person and is not provided with souvenirs.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James is invited to take a photo with the audience or is happy to communicate with each other during the dinner.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPresent(x) ::: x presents their work at the conference.\nProvide(x, y) ::: x provides y.\nAttend(x) ::: x attends the conference in person.\nSouvenir(x) ::: x is provided with souvenirs.\nInvite(x, y) ::: x is invited to join y.\nMeal(x) ::: x is provided with delicious meals.\nHappy(x) ::: x is happy to communicate with each other during the dinner.\nPhoto(x) ::: x is invited to take a photo with the audience.\nPremises:\n∀x (Present(x) → Attend(x)) ::: All who present their work at the conference will attend in person.\n∀x (Provide(conference, tutorialSession(x)) → Invite(club, x)) ::: All those providing a tutorial session at the conference are invited to join the club.\n∀x (Attend(x) → Provide(conference, souvenir(x))) ::: All who attend the conference in person are provided with souvenirs.\n∀x (Invite(club, x) → Provide(club, meal(x))) ::: All invited to join the club are provided with delicious meals.\n∀x (Provide(club, meal(x)) → Happy(x)) ::: All provided with delicious meals are happy to communicate with each other during the dinner.\n∀x (Provide(club, meal(x)) → Invite(audience, photo(x))) ::: All provided with delicious meals are invited to take a photo with the audience.\n¬Provide(conference,"
    ]
  },
  {
    "id": "FOLIO_train_980",
    "context": "Either present their work at the conference or provide a tutorial session at the conference. All who present their work at the conference will attend in person. All those providing a tutorial session at the conference are invited to join the club. All who attend the conference in person are provided with souvenirs. All invited to join the club are provided with delicious meals. All provided with delicious meals are happy to communicate with each other during the dinner. All provided with delicious meals are invited to take a photo with the audience. James does not attend the conference in person and is not provided with souvenirs.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James is either invited to take a photo with the audience or happy to communicate with each other during the dinner.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPresent(x) ::: x presents their work at the conference.\nProvide(x, y) ::: x provides y at the conference.\nAttend(x) ::: x attends the conference in person.\nInvite(x, y) ::: x is invited to join y.\nSouvenir(x) ::: x is provided with souvenirs.\nMeal(x) ::: x is provided with delicious meals.\nHappy(x) ::: x is happy to communicate with each other during the dinner.\nPhoto(x) ::: x is invited to take a photo with the audience.\nPremises:\n∀x (Present(x) → Attend(x)) ::: All who present their work at the conference will attend in person.\n∀x (Provide(x, tutorialSession) → Invite(x, club)) ::: All those providing a tutorial session at the conference are invited to join the club.\n∀x (Attend(x) → Souvenir(x)) ::: All who attend the conference in person are provided with souvenirs.\n∀x (Invite(x, club) → Meal(x)) ::: All invited to join the club are provided with delicious meals.\n∀x (Meal(x) → Happy(x)) ::: All provided with delicious meals are happy to communicate with each other during the dinner.\n∀x (Meal(x) → Photo(x)) ::: All provided with delicious meals are invited to take a photo with the audience.\n¬Attend(james) ∧ ¬Souvenir(james) ::: James does not attend the conference in person and is not provided with souvenirs.\nConclusion:\nPhoto(james) ⊕ Happy(james) ::: James is either invited to take a photo with the audience or happy to communicate with each other during the dinner.\n------"
    ]
  },
  {
    "id": "FOLIO_train_981",
    "context": "The USS Salem is a heavy cruiser built for the United States navy. The last heavy cruiser to enter service was the USS Salem. The USS Salem is a museum ship. Museum ships are open to the public. The USS Salem served in the Atlantic and Mediterranean.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The USS Salem is open to the public.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nUSSSalem(x) ::: x is the USS Salem.\nHeavyCruiser(x) ::: x is a heavy cruiser.\nBuiltFor(x, y) ::: x is built for y.\nLast(x) ::: x is the last.\nMuseumShip(x) ::: x is a museum ship.\nOpenToPublic(x) ::: x is open to the public.\nServe(x, y) ::: x serves in y.\nAtlantic(x) ::: x is the Atlantic.\nMediterranean(x) ::: x is the Mediterranean.\nPremises:\nUSSSalem(ussSalem) ∧ HeavyCruiser(ussSalem) ∧ BuiltFor(ussSalem, navy) ∧ Last(ussSalem) ::: The USS Salem is a heavy cruiser built for the United States navy. The last heavy cruiser to enter service was the USS Salem.\nUSSSalem(ussSalem) ∧ MuseumShip(ussSalem) ::: The USS Salem is a museum ship.\nMuseumShip(x) → OpenToPublic(x) ::: Museum ships are open to the public.\nUSSSalem(ussSalem) ∧ Serve(ussSalem, Atlantic) ∧ Serve(ussSalem, Mediterranean) ::: The USS Salem served in the Atlantic and Mediterranean.\nConclusion:\nOpenToPublic(ussSalem) ::: The USS Salem is open to the public.\n------\nProblem:\nThe USS Salem is a heavy cruiser built for the United States navy. The last heavy cruiser to enter service was the USS Salem. The USS Salem is a museum ship. Museum ships are open to the public. The USS Salem served in the Atlantic and Mediterranean.\nQuestion:\nBased on the above information, is the following statement true,"
    ]
  },
  {
    "id": "FOLIO_train_982",
    "context": "The USS Salem is a heavy cruiser built for the United States navy. The last heavy cruiser to enter service was the USS Salem. The USS Salem is a museum ship. Museum ships are open to the public. The USS Salem served in the Atlantic and Mediterranean.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There is a museum ship open to the public that served in the Mediterranean.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nUSSSalem(x) ::: x is the USS Salem.\nHeavyCruiser(x) ::: x is a heavy cruiser.\nBuiltFor(x, y) ::: x is built for y.\nLast(x) ::: x is the last.\nMuseumShip(x) ::: x is a museum ship.\nOpenToPublic(x) ::: x is open to the public.\nServe(x, y) ::: x serves in y.\nAtlantic(x) ::: x is in the Atlantic.\nMediterranean(x) ::: x is in the Mediterranean.\nPremises:\nUSSSalem(ussSalem) ∧ HeavyCruiser(ussSalem) ∧ BuiltFor(ussSalem, navy) ::: The USS Salem is a heavy cruiser built for the United States navy.\nLast(ussSalem) ::: The last heavy cruiser to enter service was the USS Salem.\nMuseumShip(ussSalem) ::: The USS Salem is a museum ship.\nOpenToPublic(ussSalem) ::: Museum ships are open to the public.\nServe(ussSalem, atlantic) ∧ Serve(ussSalem, mediterranean) ::: The USS Salem served in the Atlantic and Mediterranean.\nConclusion:\n∃x (MuseumShip(x) ∧ OpenToPublic(x) ∧ Serve(x, mediterranean)) ::: There is a museum ship open to the public that served in the Mediterranean.\n------\nProblem:\nThe USS Salem is a heavy cruiser built for the United States navy. The last heavy cruiser to enter service was the USS Salem. The USS Salem is a museum ship. Museum ships are open to the public. The USS Salem served in the Atlantic and Mediterranean.\nQuestion:\nBased on the above information,"
    ]
  },
  {
    "id": "FOLIO_train_983",
    "context": "The USS Salem is a heavy cruiser built for the United States navy. The last heavy cruiser to enter service was the USS Salem. The USS Salem is a museum ship. Museum ships are open to the public. The USS Salem served in the Atlantic and Mediterranean.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The USS Salem was not the last heavy cruiser to enter service.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nUSSSalem(x) ::: x is the USS Salem.\nHeavyCruiser(x) ::: x is a heavy cruiser.\nLast(x) ::: x is the last.\nMuseumShip(x) ::: x is a museum ship.\nOpen(x) ::: x is open to the public.\nServe(x, y) ::: x served in y.\nAtlantic(x) ::: x is the Atlantic.\nMediterranean(x) ::: x is the Mediterranean.\nPremises:\nUSSSalem(ussSalem) ∧ HeavyCruiser(ussSalem) ∧ Last(ussSalem) ::: The USS Salem is a heavy cruiser built for the United States navy. The last heavy cruiser to enter service was the USS Salem.\nUSSSalem(ussSalem) ∧ MuseumShip(ussSalem) ::: The USS Salem is a museum ship.\nMuseumShip(x) → Open(x) ::: Museum ships are open to the public.\nUSSSalem(ussSalem) ∧ Serve(ussSalem, Atlantic) ∧ Serve(ussSalem, Mediterranean) ::: The USS Salem served in the Atlantic and Mediterranean.\nConclusion:\n¬Last(ussSalem) ::: The USS Salem was not the last heavy cruiser to enter service.\n------\nProblem:\nThe USS Salem is a heavy cruiser built for the United States navy. The last heavy cruiser to enter service was the USS Salem. The USS Salem is a museum ship. Museum ships are open to the public. The USS Salem served in the Atlantic and Mediterranean.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The USS Salem is a heavy cruiser.\nBased on the above information, is the following statement true, false"
    ]
  },
  {
    "id": "FOLIO_train_984",
    "context": "TS Leda was a good passenger and cargo vessel. TS Leda was the first Norweigian vessel that was built with stabilizers. Stabilizers are mechanical devices that are only on ships that have powerful steam turbine engines. To be a good passenger and cargo vessel, ships must be quiet and good at sea. Some ships that are quiet and good at sea have powerful steam turbine engines.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? TS Leda was quiet and good at sea.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTS(x) ::: x is TS Leda.\nGood(x) ::: x is a good passenger and cargo vessel.\nQuiet(x) ::: x is quiet.\nSea(x) ::: x is good at sea.\nStabilizer(x) ::: x is a stabilizer.\nShip(x) ::: x is a ship.\nSteamTurbineEngine(x) ::: x is a powerful steam turbine engine.\nPremises:\nTS(leda) ::: TS Leda was a good passenger and cargo vessel.\n∀x (TS(x) → Good(x)) ::: TS Leda was the first Norweigian vessel that was built with stabilizers.\n∀x (Stabilizer(x) → Ship(x)) ::: Stabilizers are mechanical devices that are only on ships that have powerful steam turbine engines.\n∀x (Good(x) → Quiet(x) ∧ Sea(x)) ::: To be a good passenger and cargo vessel, ships must be quiet and good at sea.\n∀x (Quiet(x) ∧ Sea(x) → SteamTurbineEngine(x)) ::: Some ships that are quiet and good at sea have powerful steam turbine engines.\nConclusion:\nQuiet(leda) ∧ Sea(leda) ::: TS Leda was quiet and good at sea.\n------\nProblem:\nThe first person to fly a helicopter was Paul Cornu. Paul Cornu was a Frenchman. All Frenchmen are Europeans. All Europeans are people.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The first person to fly a helicopter was a European.\nBased on the above information, is the following statement true, false, or uncertain? The first person to fly a helicopter was a person.\n###"
    ]
  },
  {
    "id": "FOLIO_train_985",
    "context": "TS Leda was a good passenger and cargo vessel. TS Leda was the first Norweigian vessel that was built with stabilizers. Stabilizers are mechanical devices that are only on ships that have powerful steam turbine engines. To be a good passenger and cargo vessel, ships must be quiet and good at sea. Some ships that are quiet and good at sea have powerful steam turbine engines.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? TS Leda had powerful steam turbine engines.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTS(x) ::: x is TS Leda.\nGood(x) ::: x is a good passenger and cargo vessel.\nStabilizers(x) ::: x is a ship that has stabilizers.\nQuiet(x) ::: x is quiet.\nSea(x) ::: x is good at sea.\nSteamTurbine(x) ::: x is a ship that has powerful steam turbine engines.\nPremises:\nGood(ts) ::: TS Leda was a good passenger and cargo vessel.\n∀x (Stabilizers(x) → SteamTurbine(x)) ::: Stabilizers are mechanical devices that are only on ships that have powerful steam turbine engines.\n∀x (Good(x) → (Quiet(x) ∧ Sea(x))) ::: To be a good passenger and cargo vessel, ships must be quiet and good at sea.\n∃x (Quiet(x) ∧ Sea(x) ∧ SteamTurbine(x)) ::: Some ships that are quiet and good at sea have powerful steam turbine engines.\nConclusion:\nSteamTurbine(ts) ::: TS Leda had powerful steam turbine engines.\n------\nProblem:\nThe 1996 Summer Olympics, officially known as the Games of the XXVI Olympiad, was a major international multi-sport event celebrated in 1996 in Atlanta, Georgia, United States. The 1996 Summer Olympics was the first Olympics to have a website. The 1996 Summer Olympics was the first Olympics to have an official mascot. The 1996 Summer Olympics was the first Olympics to have an official song. The 1996 Summer Olympics was the first Olympics to have an official video game.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The 1"
    ]
  },
  {
    "id": "FOLIO_train_986",
    "context": "TS Leda was a good passenger and cargo vessel. TS Leda was the first Norweigian vessel that was built with stabilizers. Stabilizers are mechanical devices that are only on ships that have powerful steam turbine engines. To be a good passenger and cargo vessel, ships must be quiet and good at sea. Some ships that are quiet and good at sea have powerful steam turbine engines.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? TS Leda was not a Norweigian vessel.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nNorweigian(x) ::: x is a Norweigian vessel.\nPassengerAndCargoVessel(x) ::: x is a passenger and cargo vessel.\nGood(x) ::: x is good.\nQuiet(x) ::: x is quiet.\nSea(x) ::: x is at sea.\nStabilizer(x) ::: x is a stabilizer.\nShip(x) ::: x is a ship.\nSteamTurbineEngine(x) ::: x is a steam turbine engine.\nPremises:\nGood(tsLeda) ∧ PassengerAndCargoVessel(tsLeda) ∧ Norweigian(tsLeda) ::: TS Leda was a good passenger and cargo vessel.\n∀x (Norweigian(x) → First(x)) ::: TS Leda was the first Norweigian vessel that was built with stabilizers.\n∀x (Stabilizer(x) → Ship(x)) ::: Stabilizers are mechanical devices that are only on ships.\n∀x (Stabilizer(x) → SteamTurbineEngine(x)) ::: Stabilizers are mechanical devices that are only on ships that have powerful steam turbine engines.\n∀x (PassengerAndCargoVessel(x) → (Quiet(x) ∧ GoodAtSea(x))) ::: To be a good passenger and cargo vessel, ships must be quiet and good at sea.\n∃x (Quiet(x) ∧ GoodAtSea(x) ∧ SteamTurbineEngine(x)) ::: Some ships that are quiet and good at sea have powerful steam turbine engines.\nConclusion:\n¬Norweigian(tsLeda) ::: TS Leda was not a Norweigian vessel."
    ]
  },
  {
    "id": "FOLIO_train_987",
    "context": "Rosa was born in Santiago. Santiago is the capital and largest city of Chile. Rosa is the daughter of a Catalan building contractor, Jose. Jose has a Chilean wife, Carmen. A building contractor is responsible for the day-to-day oversight of a construction site.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Rosa was born in the largest city of Chile.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBorn(x, y) ::: x was born in y.\nCapital(x) ::: x is the capital of a country.\nLargest(x) ::: x is the largest city of a country.\nDaughter(x, y) ::: x is the daughter of y.\nContractor(x) ::: x is a building contractor.\nResponsible(x, y) ::: x is responsible for y.\nOversight(x, y) ::: x is responsible for the day-to-day oversight of y.\nPremises:\nBorn(rosa, santiago) ::: Rosa was born in Santiago.\nCapital(santiago) ∧ Largest(santiago) ::: Santiago is the capital and largest city of Chile.\nDaughter(rosa, jose) ::: Rosa is the daughter of a Catalan building contractor, Jose.\nContractor(jose) ∧ Responsible(jose, oversight) ::: Jose has a Chilean wife, Carmen. A building contractor is responsible for the day-to-day oversight of a construction site.\nConclusion:\nBorn(rosa, largest(chile)) ::: Rosa was born in the largest city of Chile.\n------\nProblem:\nThe 1992 Summer Olympics, officially known as the Games of the XXV Olympiad, was an international multi-sport event that was held in Barcelona, Spain. The 1992 Summer Olympics were the first Summer Olympics since the 1972 Summer Olympics to be held in Europe. The 1992 Summer Olympics were the first Summer Olympics since the 1984 Summer Olympics to be held in a Spanish-speaking country. The 1992 Summer Olympics were the first Summer Olympics since the 1980 Summer Olympics to be held in a country that had never before hosted the Summer Olympics."
    ]
  },
  {
    "id": "FOLIO_train_988",
    "context": "Rosa was born in Santiago. Santiago is the capital and largest city of Chile. Rosa is the daughter of a Catalan building contractor, Jose. Jose has a Chilean wife, Carmen. A building contractor is responsible for the day-to-day oversight of a construction site.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Neither of Rosa's parents is Chilean.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBorn(x, y) ::: x was born in y.\nCapital(x, y) ::: x is the capital of y.\nLargest(x, y) ::: x is the largest city of y.\nDaughter(x, y) ::: x is the daughter of y.\nSon(x, y) ::: x is the son of y.\nCatalan(x) ::: x is Catalan.\nChilean(x) ::: x is Chilean.\nBuildingContractor(x) ::: x is a building contractor.\nWife(x, y) ::: x is the wife of y.\nHusband(x, y) ::: x is the husband of y.\nResponsible(x, y) ::: x is responsible for y.\nOversight(x, y) ::: x is responsible for the day-to-day oversight of y.\nPremises:\nBorn(rosa, santiago) ::: Rosa was born in Santiago.\nCapital(santiago, chile) ::: Santiago is the capital of Chile.\nLargest(santiago, chile) ::: Santiago is the largest city of Chile.\nDaughter(rosa, jose) ::: Rosa is the daughter of Jose.\nSon(rosa, jose) ::: Rosa is the son of Jose.\nCatalan(jose) ::: Jose is Catalan.\nChilean(carmen) ::: Carmen is Chilean.\nBuildingContractor(jose) ::: Jose is a building contractor.\nWife(carmen, jose) ::: Carmen is the wife of Jose.\nHusband(jose, carmen) ::: Jose is the husband of Carmen.\nResponsible(jose, constructionSite) ::: Jose is responsible for the day-to-day oversight of a"
    ]
  },
  {
    "id": "FOLIO_train_989",
    "context": "Rosa was born in Santiago. Santiago is the capital and largest city of Chile. Rosa is the daughter of a Catalan building contractor, Jose. Jose has a Chilean wife, Carmen. A building contractor is responsible for the day-to-day oversight of a construction site.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Rosa is the daughter of someone who is responsible for the oversight of traffic.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBorn(x, y) ::: x was born in y.\nCapital(x, y) ::: x is the capital of y.\nLargest(x, y) ::: x is the largest city of y.\nDaughter(x, y) ::: x is the daughter of y.\nCatalan(x) ::: x is a Catalan person.\nChilean(x) ::: x is a Chilean person.\nBuildingContractor(x) ::: x is a building contractor.\nWife(x, y) ::: x is the wife of y.\nResponsible(x, y) ::: x is responsible for y.\nOversight(x, y) ::: x is responsible for the oversight of y.\nPremises:\nBorn(rosa, santiago) ::: Rosa was born in Santiago.\nCapital(santiago, chile) ::: Santiago is the capital of Chile.\nLargest(santiago, chile) ::: Santiago is the largest city of Chile.\nDaughter(rosa, jose) ::: Rosa is the daughter of Jose.\nCatalan(jose) ::: Jose is a Catalan person.\nChilean(carmen) ::: Carmen is a Chilean person.\nWife(carmen, jose) ::: Carmen is the wife of Jose.\nBuildingContractor(jose) ::: Jose is a building contractor.\nResponsible(jose, oversight) ::: Jose is responsible for the oversight of a construction site.\nConclusion:\nResponsible(jose, traffic) ::: Rosa is the daughter of someone who is responsible for the oversight of traffic.\n------\nProblem:\nThe 1992 Summer Olympics, officially known as the Games of the XXV Olympiad, was an international multi-sport event that was held in Barcelona"
    ]
  },
  {
    "id": "FOLIO_train_990",
    "context": "Tyga is a rapper. Rappers release rap albums. Tyga released the Well Done 3 album. Rappers are not opera singers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Well Done 3 is a rap album.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRapper(x) ::: x is a rapper.\nRelease(x, y) ::: x releases y.\nRapAlbum(x) ::: x is a rap album.\nOperaSinger(x) ::: x is an opera singer.\nPremises:\nRapper(tyga) ::: Tyga is a rapper.\n∀x (Rapper(x) → Release(x, rapAlbum)) ::: Rappers release rap albums.\nRelease(tyga, wellDone3) ::: Tyga released the Well Done 3 album.\n∀x (Rapper(x) → ¬OperaSinger(x)) ::: Rappers are not opera singers.\nConclusion:\nRapAlbum(wellDone3) ::: Well Done 3 is a rap album.\n------"
    ]
  },
  {
    "id": "FOLIO_train_991",
    "context": "Tyga is a rapper. Rappers release rap albums. Tyga released the Well Done 3 album. Rappers are not opera singers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tyga is an opera singer.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRapper(x) ::: x is a rapper.\nRelease(x, y) ::: x releases y.\nRapAlbum(x) ::: x is a rap album.\nOperaSinger(x) ::: x is an opera singer.\nPremises:\nRapper(tyga) ::: Tyga is a rapper.\n∀x (Rapper(x) → Release(x, y)) ::: Rappers release rap albums.\nRelease(tyga, wellDone3) ::: Tyga released the Well Done 3 album.\n∀x (Rapper(x) → ¬OperaSinger(x)) ::: Rappers are not opera singers.\nConclusion:\nOperaSinger(tyga) ::: Tyga is an opera singer.\n------\nProblem:\nAll"
    ]
  },
  {
    "id": "FOLIO_train_992",
    "context": "Tyga is a rapper. Rappers release rap albums. Tyga released the Well Done 3 album. Rappers are not opera singers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Well Done 3 is worth listening.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRapper(x) ::: x is a rapper.\nRelease(x, y) ::: x releases y.\nRapAlbum(x) ::: x is a rap album.\nOperaSinger(x) ::: x is an opera singer.\nPremises:\nRapper(tyga) ::: Tyga is a rapper.\n∀x (Rapper(x) → Release(x, rapAlbum)) ::: Rappers release rap albums.\nRelease(tyga, wellDone3) ::: Tyga released the Well Done 3 album.\n∀x (Rapper(x) → ¬OperaSinger(x)) ::: Rappers are not opera singers.\nConclusion:\nWorthListening(wellDone3) ::: Well Done 3 is worth listening.\n------"
    ]
  },
  {
    "id": "FOLIO_train_993",
    "context": "Deborah Wallace is a Scottish born actress, playwright and producer. Psyche is a play based on the life of James Miranda Barry. Homesick, Psyche and The Void are plays from Deborah Wallace. Deborah Wallace co-produced Gasland.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Gasland was coproduced by the same person Homesick is from.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nScottish(x) ::: x is a Scottish person.\nActress(x) ::: x is an actress.\nPlaywright(x) ::: x is a playwright.\nProducer(x) ::: x is a producer.\nPlay(x) ::: x is a play.\nCoproduce(x, y) ::: x is coproduced by y.\nPremises:\nScottish(deborah) ∧ Actress(deborah) ∧ Playwright(deborah) ∧ Producer(deborah) ::: Deborah Wallace is a Scottish born actress, playwright and producer.\nPlay(psyche) ∧ Author(deborah, psyche) ::: Psyche is a play based on the life of James Miranda Barry.\nPlay(homesick)"
    ]
  },
  {
    "id": "FOLIO_train_994",
    "context": "Deborah Wallace is a Scottish born actress, playwright and producer. Psyche is a play based on the life of James Miranda Barry. Homesick, Psyche and The Void are plays from Deborah Wallace. Deborah Wallace co-produced Gasland.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There isn't a play from Deborah Wallace that is based on the life of James Miranda Barry.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nScottish(x) ::: x is a Scottish person.\nActress(x) ::: x is an actress.\nPlaywright(x) ::: x is a playwright.\nProducer(x) ::: x is a producer.\nPlay(x) ::: x is a play.\nBasedOn(x, y) ::: x is based on y.\nCoProduce(x, y) ::: x co-produced y.\nPremises:\nScottish(deborah) ∧ Actress(deborah) ∧ Playwright(deborah) ∧ Producer(deborah) ::: Deborah Wallace is a Scottish born actress, playwright and producer.\nPlay(psyche) ∧ BasedOn(psyche, jamesMirandaBarry) ::: Psyche is a"
    ]
  },
  {
    "id": "FOLIO_train_995",
    "context": "Deborah Wallace is a Scottish born actress, playwright and producer. Psyche is a play based on the life of James Miranda Barry. Homesick, Psyche and The Void are plays from Deborah Wallace. Deborah Wallace co-produced Gasland.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Gasland is a play.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nScottish(x) ::: x is a Scottish person.\nActress(x) ::: x is an actress.\nPlaywright(x) ::: x is a playwright.\nProducer(x) ::: x is a producer.\nPlay(x) ::: x is a play.\nCoProduce(x, y) ::: x co-produced y.\nPremises:\nScottish(deborah) ∧ Actress(deborah) ∧ Playwright(deborah) ∧ Producer(deborah) ::: Deborah Wallace is a Scottish born actress, playwright and producer.\nPlay(psyche) ∧ Author(deborah, psyche) ::: Psyche is a play based on the life of James Miranda Barry.\nPlay(homesick) �"
    ]
  },
  {
    "id": "FOLIO_train_996",
    "context": "If an animal needs a large territory, then it travels far. Everything that eats a lot needs a large territory. If something is a big animal, then it will eat a lot. All bears are big animals. Larry is a big animal.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Larry is a bear.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAnimal(x) ::: x is an animal.\nNeeds(x, y) ::: x needs y.\nTravel(x, y) ::: x travels y.\nFar(x) ::: x is far.\nEat(x, y) ::: x eats y.\nLot(x) ::: x is a lot.\nTerritory(x) ::: x is a territory.\nBig(x) ::: x is big.\nBear(x) ::: x is a bear.\nPremises:\n∀x (Needs(x, largeTerritory) → Travel(x, far)) ::: If an animal needs a large territory, then it travels far.\n∀x (Eat(x, lot) → Needs(x, largeTerritory)) ::: Everything that eats a lot"
    ]
  },
  {
    "id": "FOLIO_train_997",
    "context": "If an animal needs a large territory, then it travels far. Everything that eats a lot needs a large territory. If something is a big animal, then it will eat a lot. All bears are big animals. Larry is a big animal.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Larry is neither a bear nor travels far.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAnimal(x) ::: x is an animal.\nNeeds(x, y) ::: x needs y.\nTravel(x, y) ::: x travels y.\nEat(x, y) ::: x eats y.\nBig(x) ::: x is a big animal.\nBear(x) ::: x is a bear.\nPremises:\n∀x (Needs(x, largeTerritory) → Travel(x, far)) ::: If an animal needs a large territory, then it travels far.\n∀x (Eat(x, lot) → Needs(x, largeTerritory)) ::: Everything that eats a lot needs a large territory.\n∀x (Big(x) → Eat(x, lot)) ::: If something is a big animal, then it will eat a"
    ]
  },
  {
    "id": "FOLIO_train_998",
    "context": "If an animal needs a large territory, then it travels far. Everything that eats a lot needs a large territory. If something is a big animal, then it will eat a lot. All bears are big animals. Larry is a big animal.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Larry either travels far or needs a large territory, then Larry is a bear.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAnimal(x) ::: x is an animal.\nNeeds(x, y) ::: x needs y.\nTravel(x, y) ::: x travels y.\nFar(x) ::: x is far.\nEat(x, y) ::: x eats y.\nLot(x) ::: x is a lot.\nBig(x) ::: x is big.\nBear(x) ::: x is a bear.\nPremises:\n∀x (Needs(x, large) → Travel(x, far)) ::: If an animal needs a large territory, then it travels far.\n∀x (Eat(x, lot) → Needs(x, large)) ::: Everything that eats a lot needs a large territory.\n∀x (Big(x) → Eat(x"
    ]
  },
  {
    "id": "FOLIO_train_999",
    "context": "No criminal is kind. All person who breaks the law is a criminals. People are either kind or evil. If someone is evil, then they are ugly. If someone is evil, then they are cold-blood. If Garry is either evil and ugly or neither evil nor ugly, then Garry is not evil.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Garry is ugly.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCriminal(x) ::: x is a criminal.\nKind(x) ::: x is kind.\nBreaks(x) ::: x breaks the law.\nPerson(x) ::: x is a person.\nEvil(x) ::: x is evil.\nUgly(x) ::: x is ugly.\nColdBlood(x) ::: x is cold-blood.\nGarry(x) ::: x is Garry.\nPremises:\n∀x (Criminal(x) → ¬Kind(x)) ::: No criminal is kind.\n∀x (Breaks(x) → Criminal(x)) ::: All person who breaks the law is a criminals.\n∀x (Person(x) → (Kind(x) ⊕ Evil(x))) ::: People are"
    ]
  },
  {
    "id": "FOLIO_train_1000",
    "context": "No criminal is kind. All person who breaks the law is a criminals. People are either kind or evil. If someone is evil, then they are ugly. If someone is evil, then they are cold-blood. If Garry is either evil and ugly or neither evil nor ugly, then Garry is not evil.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Garry is cold-blooded and breaks the law.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCriminal(x) ::: x is a criminal.\nKind(x) ::: x is kind.\nBreaks(x) ::: x breaks the law.\nPerson(x) ::: x is a person.\nEvil(x) ::: x is evil.\nUgly(x) ::: x is ugly.\nColdBlood(x) ::: x is cold-blooded.\nPremises:\n∀x (Criminal(x) → ¬Kind(x)) ::: No criminal is kind.\n∀x (Breaks(x) → Criminal(x)) ::: All person who breaks the law is a criminals.\n∀x (Person(x) → (Kind(x) ⊕ Evil(x))) ::: People are either kind or evil.\n∀x (Evil(x) → Ugly(x)) ::: If someone is evil, then they are ugly.\n∀x (Evil(x) → ColdBlood(x)) ::: If someone is evil, then they are cold-blood.\n(Evil(garry) ∧ Ugly(garry)) ⊕ ¬(Evil(garry) ∨ Ugly(garry)) ::: Garry is either evil and ugly or neither evil nor ugly.\n¬(Evil(garry)) ::: Garry is not evil.\nConclusion:\nBreaks(garry) ∧ ColdBlood(garry) ::: Garry is cold-blooded and breaks the law.\n------"
    ]
  },
  {
    "id": "FOLIO_train_1001",
    "context": "No criminal is kind. All person who breaks the law is a criminals. People are either kind or evil. If someone is evil, then they are ugly. If someone is evil, then they are cold-blood. If Garry is either evil and ugly or neither evil nor ugly, then Garry is not evil.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Garry is evil or breaks the law, then Garry is not both a criminal and breaking the law.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCriminal(x) ::: x is a criminal.\nKind(x) ::: x is kind.\nBreaks(x) ::: x breaks the law.\nPerson(x) ::: x is a person.\nEvil(x) ::: x is evil.\nUgly(x) ::: x is ugly.\nColdBlood(x) ::: x is cold-blood.\nPremises:\n∀x (Criminal(x) → ¬Kind(x)) ::: No criminal is kind.\n∀x (Breaks(x) → Criminal(x)) ::: All person who breaks the law is a criminals.\n∀x (Person(x) → (Kind(x) ⊕ Evil(x))) ::: People are either kind or evil.\n∀x (Evil(x) → Ugly(x)) ::: If someone is evil, then they are ugly.\n∀x (Evil(x) → ColdBlood(x)) ::: If someone is evil, then they are cold-blood.\n(Evil(garry) ∧ Ugly(garry)) ⊕ ¬(Evil(garry) ∨ Ugly(garry)) ::: Garry is either evil and ugly or neither evil nor ugly.\nConclusion:\n(Evil(garry) ∨ Breaks(garry)) → ¬(Criminal(garry) ∧ Breaks(garry)) ::: If Garry is evil or breaks the law,"
    ]
  },
  {
    "id": "FOLIO_train_1002",
    "context": "Phoneix's music is classified under the indie pop genre. Phoenix is a band from France. French bands write songs in French or in English. Aside from indie pop, pop rock and synth-pop are two other genres of music. Phoneix has no songs in French.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Phoenix makes pop rock music.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBand(x) ::: x is a band.\nFrench(x) ::: x is a French person or thing.\nIndiePop(x) ::: x is a song in the indie pop genre.\nPopRock(x) ::: x is a song in the pop rock genre.\nSynthPop(x) ::: x is a song in the synth-pop genre.\nSong(x) ::: x is a song.\nWrite(x, y) ::: x writes y.\nPremises:\nBand(phoenix) ∧ French(phoenix) ∧ IndiePop(phoenix) ::: Phoneix's music is classified under the indie pop genre. Phoneix is a band from France.\n∀x (Band(x) → (Write(x, y) → Song(y))) ::: French bands write songs in French or in English.\n∀x (Song(x) → (IndiePop(x) ⊕ PopRock(x) ⊕ SynthPop(x))) ::: Aside from indie pop, pop rock and synth-pop are two other genres of music.\n¬∃x (IndiePop(x) ∧ Write(phoenix, x) ∧ French(x)) ::: Phoneix has no songs in French.\nConclusion:\nPopRock(phoenix) ::: Phoenix makes pop rock music.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being"
    ]
  },
  {
    "id": "FOLIO_train_1003",
    "context": "Phoneix's music is classified under the indie pop genre. Phoenix is a band from France. French bands write songs in French or in English. Aside from indie pop, pop rock and synth-pop are two other genres of music. Phoneix has no songs in French.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Phoenix has songs in French.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBand(x) ::: x is a band.\nFrench(x) ::: x is a French person or thing.\nSong(x) ::: x is a song.\nGenre(x) ::: x is a genre of music.\nWrite(x, y) ::: x writes y.\nClassify(x, y) ::: x is classified under y.\nPremises:\nBand(phoenix) ∧ French(phoenix) ∧ Classify(phoenix, indiePop) ::: Phoneix's music is classified under the indie pop genre.\nBand(phoenix) ∧ French(phoenix) ::: Phoenix is a band from France.\n∀x (French(x) → (Write(x, songInFrench) ∨ Write(x, songInEnglish))) ::: French bands write songs in French or in English.\nGenre(indiePop) ∧ Genre(popRock) ∧ Genre(synthPop) ::: Aside from indie pop, pop rock and synth-pop are two other genres of music.\n¬∃x (Song(x) ∧ Write(phoenix, x) ∧ French(x)) ::: Phoneix has no songs in French.\nConclusion:\n∃x (Song(x) ∧ Write(phoenix, x) ∧ French(x)) ::: Phoenix has songs in French.\n------\nProblem:\nThe 2010 FIFA World Cup was"
    ]
  }
]