[
  {
    "id": "FOLIO_train_0",
    "context": "All people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDependent(x) ::: x is a person dependent on caffeine.\nDrinks(x) ::: x regularly drinks coffee.\nJokes(x) ::: x jokes about being addicted to caffeine.\nUnaware(x) ::: x is unaware that caffeine is a drug.\nStudent(x) ::: x is a student.\nPremises:\n∀x (Drinks(x) → Dependent(x)) ::: All people who regularly drink coffee are dependent on caffeine.\n∀x (Drinks(x) ⊕ Jokes(x)) ::: People either regularly drink coffee or joke about being addicted to caffeine.\n∀x (Jokes(x) → ¬Unaware(x)) ::: No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. \n(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina)) ::: Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. \n¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina)) ::: If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nConclusion:\nJokes(rina) ∨ Unaware(rina) ::: Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.\n------"
    ]
  },
  {
    "id": "FOLIO_train_1",
    "context": "All people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDependent(x) ::: x is a person dependent on caffeine.\nDrinks(x) ::: x regularly drinks coffee.\nJokes(x) ::: x jokes about being addicted to caffeine.\nUnaware(x) ::: x is unaware that caffeine is a drug.\nStudent(x) ::: x is a student.\nPremises:\n∀x (Drinks(x) → Dependent(x)) ::: All people who regularly drink coffee are dependent on caffeine.\n∀x (Drinks(x) ⊕ Jokes(x)) ::: People either regularly drink coffee or joke about being addicted to caffeine.\n∀x (Jokes(x) → ¬Unaware(x)) ::: No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. \n(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina)) ::: Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. \n¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina)) ::: If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nConclusion:\nJokes(rina) ⊕ Unaware(rina) ::: Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug."
    ]
  },
  {
    "id": "FOLIO_train_2",
    "context": "All people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDependent(x) ::: x is a person dependent on caffeine.\nDrinks(x) ::: x regularly drinks coffee.\nJokes(x) ::: x jokes about being addicted to caffeine.\nUnaware(x) ::: x is unaware that caffeine is a drug.\nStudent(x) ::: x is a student.\nPremises:\n∀x (Drinks(x) → Dependent(x)) ::: All people who regularly drink coffee are dependent on caffeine.\n∀x (Drinks(x) ⊕ Jokes(x)) ::: People either regularly drink coffee or joke about being addicted to caffeine.\n∀x (Jokes(x) → ¬Unaware(x)) ::: No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. \n(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina)) ::: Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. \n¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina)) ::: If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nConclusion:\nDrinks(rina) ⊕ Unaware(rina) ::: Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.\n------\nProblem"
    ]
  },
  {
    "id": "FOLIO_train_3",
    "context": "All people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDependent(x) ::: x is a person dependent on caffeine.\nDrinks(x) ::: x regularly drinks coffee.\nJokes(x) ::: x jokes about being addicted to caffeine.\nUnaware(x) ::: x is unaware that caffeine is a drug.\nStudent(x) ::: x is a student.\nPremises:\n∀x (Drinks(x) → Dependent(x)) ::: All people who regularly drink coffee are dependent on caffeine.\n∀x (Drinks(x) ⊕ Jokes(x)) ::: People either regularly drink coffee or joke about being addicted to caffeine.\n∀x (Jokes(x) → ¬Unaware(x)) ::: No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. \n(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina)) ::: Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. \n¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina)) ::: If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nConclusion:\n((Jokes(rina) ∧ Unaware(rina)) ⊕ ¬(Jokes(rina) ∨ Unaware(rina))) → (Jokes(rina) ∧ Drinks("
    ]
  },
  {
    "id": "FOLIO_train_4",
    "context": "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music. Any choral conductor is a musician. Some musicians love music. Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Miroslav Venhoda loved music.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCzech(x) ::: x is a Czech person.\nChoralConductor(x) ::: x is a choral conductor.\nMusician(x) ::: x is a musician.\nLove(x, y) ::: x loves y.\nAuthor(x, y) ::: x is the author of y.\nBook(x) ::: x is a book.\nPublish(x, y) ::: x is published in year y.\nSpecialize(x, y) ::: x specializes in y.\nPremises:\nCzech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque) ::: Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.\n∀x (ChoralConductor(x) → Musician(x)) ::: Any choral conductor is a musician.\n∃x (Musician(x) ∧ Love(x, music)) ::: Some musicians love music.\nBook(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946) ::: Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant.\nConclusion:\nLove(miroslav, music) ::: Miroslav Venhoda loved music.\n------\nProblem:\nMiroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music. Any choral conductor is a musician. Some musicians love music. Miroslav Venhoda published a book in"
    ]
  },
  {
    "id": "FOLIO_train_5",
    "context": "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music. Any choral conductor is a musician. Some musicians love music. Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A Czech person wrote a book in 1946.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCzech(x) ::: x is a Czech person.\nChoralConductor(x) ::: x is a choral conductor.\nMusician(x) ::: x is a musician.\nLove(x, y) ::: x loves y.\nAuthor(x, y) ::: x is the author of y.\nBook(x) ::: x is a book.\nPublish(x, y) ::: x is published in year y.\nSpecialize(x, y) ::: x specializes in y.\nPremises:\nCzech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque) ::: Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.\n∀x (ChoralConductor(x) → Musician(x)) ::: Any choral conductor is a musician.\n∃x (Musician(x) ∧ Love(x, music)) ::: Some musicians love music.\nBook(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946) ::: Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant.\nConclusion:\n∃y ∃x (Czech(x) ∧ Author(x, y) ∧ Book(y) ∧ Publish(y, year1946)) ::: A Czech person wrote a book in 1946.\n------\nProblem:\nMiroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and"
    ]
  },
  {
    "id": "FOLIO_train_6",
    "context": "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music. Any choral conductor is a musician. Some musicians love music. Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? No choral conductor specialized in the performance of Renaissance.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCzech(x) ::: x is a Czech person.\nChoralConductor(x) ::: x is a choral conductor.\nMusician(x) ::: x is a musician.\nLove(x, y) ::: x loves y.\nAuthor(x, y) ::: x is the author of y.\nBook(x) ::: x is a book.\nPublish(x, y) ::: x is published in year y.\nSpecialize(x, y) ::: x specializes in y.\nPremises:\nCzech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque) ::: Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.\n∀x (ChoralConductor(x) → Musician(x)) ::: Any choral conductor is a musician.\n∃x (Musician(x) ∧ Love(x, music)) ::: Some musicians love music.\nBook(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946) ::: Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant.\nConclusion:\n¬∃x (ChoralConductor(x) ∧ Specialize(x, renaissance)) ::: No choral conductor specialized in the performance of Renaissance.\n------\nProblem:\nMiroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music. Any choral conductor is a musician"
    ]
  },
  {
    "id": "FOLIO_train_7",
    "context": "All eels are fish. No fish are plants. A thing is either a plant or animal. Nothing that breathes is paper. All animals breathe. If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Sea eel is an eel.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEel(x) ::: x is an eel.\nFish(x) ::: x is a fish.\nPlant(x) ::: x is a plant.\nAnimal(x) ::: x is an animal.\nPaper(x) ::: x is paper.\nBreathe(x) ::: x breathes.\nSeaEel(x) ::: x is a sea eel.\nPremises:\n∀x (Eel(x) → Fish(x)) ::: All eels are fish.\n∀x (Fish(x) → ¬Plant(x)) ::: No fish are plants.\n∀x (Plant(x) ∨ Animal(x)) ::: A thing is either a plant or animal.\n¬∃x (Breathe(x) ∧ Paper(x)) ::: Nothing that breathes is paper.\n∀x (Animal(x) → Breathe(x)) ::: All animals breathe.\n¬(SeaEel(x) ∧ Eel(x)) → (SeaEel(x) ∧ Eel(x)) ∨ (SeaEel(x) ∧ Animal(x)) ::: If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal.\nConclusion:\nEel(seaEel) ::: Sea eel is an eel.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.\nQuestion:\nBased"
    ]
  },
  {
    "id": "FOLIO_train_8",
    "context": "All eels are fish. No fish are plants. A thing is either a plant or animal. Nothing that breathes is paper. All animals breathe. If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Sea eel is a paper.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEel(x) ::: x is an eel.\nFish(x) ::: x is a fish.\nPlant(x) ::: x is a plant.\nAnimal(x) ::: x is an animal.\nPaper(x) ::: x is paper.\nPremises:\n∀x (Eel(x) → Fish(x)) ::: All eels are fish.\n∀x (Fish(x) → ¬Plant(x)) ::: No fish are plants.\n∀x (Plant(x) ∨ Animal(x)) ::: A thing is either a plant or animal.\n¬∃x (Plant(x) ∧ Breathes(x)) ::: Nothing that breathes is paper.\n∀x (Animal(x) → Breathes(x)) ::: All animals breathe.\n¬(Eel(seaEel) ∧ Plant(seaEel)) → (Eel(seaEel) ∨ Animal(seaEel)) ::: If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal.\nConclusion:\n¬Paper(seaEel) ::: Sea eel is a paper.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that c"
    ]
  },
  {
    "id": "FOLIO_train_9",
    "context": "All eels are fish. No fish are plants. A thing is either a plant or animal. Nothing that breathes is paper. All animals breathe. If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Sea eel breathes or is a paper.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEel(x) ::: x is an eel.\nFish(x) ::: x is a fish.\nPlant(x) ::: x is a plant.\nAnimal(x) ::: x is an animal.\nPaper(x) ::: x is paper.\nBreathe(x) ::: x breathes.\nPremises:\n∀x (Eel(x) → Fish(x)) ::: All eels are fish.\n∀x (Fish(x) → ¬Plant(x)) ::: No fish are plants.\n∀x (Plant(x) ∨ Animal(x)) ::: A thing is either a plant or animal.\n¬∃x (Plant(x) ∧ Breathe(x)) ::: Nothing that breathes is paper.\n∀x (Animal(x) → Breathe(x)) ::: All animals breathe.\n¬(Eel(seaEel) ∧ Plant(seaEel)) → (Eel(seaEel) ∨ Animal(seaEel)) ::: If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal.\nConclusion:\nBreathe(seaEel) ∨ Paper(seaEel) ::: Sea eel breathes or is a paper.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.\nQuestion:\nBased on the above information, is the following statement true, false, or"
    ]
  },
  {
    "id": "FOLIO_train_10",
    "context": "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places. The Blake McFall Company Building was added to the National Register of Historic Places in 1990. The Emmet Building is a five-story building in Portland, Oregon. The Emmet Building was built in 1915. The Emmet Building is another name for the Blake McFall Company Building. John works at the Emmet Building.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A five-story building is built in 1915.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBuilding(x) ::: x is a building.\nWarehouse(x) ::: x is a warehouse.\nCommercial(x) ::: x is a commercial building.\nHistoric(x) ::: x is a historic building.\nRegister(x) ::: x is a register.\nNational(x) ::: x is a national register.\nPlace(x) ::: x is a place.\nList(x, y) ::: x is listed on y.\nAdd(x, y) ::: x is added to y.\nYear(x) ::: x is a year.\nBuild(x, y) ::: x is built in y.\nName(x, y) ::: x is another name for y.\nWork(x, y) ::: x works at y.\nPremises:\nBuilding(blakeMcFallCompanyBuilding) ∧ Warehouse(blakeMcFallCompanyBuilding) ∧ Commercial(blakeMcFallCompanyBuilding) ∧ Historic(blakeMcFallCompanyBuilding) ∧ Register(nationalRegisterOfHistoricPlaces) ∧ National(nationalRegisterOfHistoricPlaces) ∧ Place(nationalRegisterOfHistoricPlaces) ∧ List(blakeMcFallCompanyBuilding, nationalRegisterOfHistoricPlaces) ∧ Add(blakeMcFallCompanyBuilding, nationalRegisterOfHistoricPlaces) ∧ Year(year1990) ::: The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places. The Blake McFall Company Building was added to the National Register of Historic Places in 1990.\nBuilding(emmetBuilding) ∧ Warehouse(emmetBuilding) ∧ Commercial(emmetBuilding) ∧ Historic(emmetBuilding) ∧ Register(nationalRegisterOfHistoricPlaces) ∧ National(nationalRegisterOfHistoricPlaces) ∧ Place(nationalRegisterOfHistoricPlaces) ∧ List(emmetBuilding, nationalRegisterOfHistoricPlaces) ∧ Add(emmetBuilding, nationalRegisterOfHistoricPlaces) ∧ Year(year1990) ::: The Emmet Building is a five-story building in Portland, Oregon. The Emmet Building was built in 1915.\nName(emmetBuilding, blakeMcFallCompanyBuilding) ::: The Emmet Building is another name for the Blake McFall Company Building.\nWork(john, emmetBuilding) ::: John works at the Emmet Building.\nConclusion:\nBuild(emmetBuilding, year1915) ::: A five-story building is built in 1915.\n------"
    ]
  },
  {
    "id": "FOLIO_train_11",
    "context": "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places. The Blake McFall Company Building was added to the National Register of Historic Places in 1990. The Emmet Building is a five-story building in Portland, Oregon. The Emmet Building was built in 1915. The Emmet Building is another name for the Blake McFall Company Building. John works at the Emmet Building.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Blake McFall Company Building is located in Portland, Oregon.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBuilding(x) ::: x is a building.\nWarehouse(x) ::: x is a warehouse.\nCommercial(x) ::: x is a commercial building.\nListed(x, y) ::: x is listed on y.\nNationalRegisterOfHistoricPlaces(x) ::: x is the National Register of Historic Places.\nAdded(x, y) ::: x was added to y in year y.\nFiveStory(x) ::: x is a five-story building.\nBuilt(x, y) ::: x was built in year y.\nAnotherName(x, y) ::: x is another name for y.\nWork(x, y) ::: x works at y.\nPremises:\nBuilding(blakeMcFallCompanyBuilding) ∧ Warehouse(blakeMcFallCompanyBuilding) ∧ Commercial(blakeMcFallCompanyBuilding) ∧ Listed(blakeMcFallCompanyBuilding, nationalRegisterOfHistoricPlaces) ∧ Added(blakeMcFallCompanyBuilding, year1990) ::: The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places. The Blake McFall Company Building was added to the National Register of Historic Places in 1990.\nBuilding(emmetBuilding) ∧ FiveStory(emmetBuilding) ∧ Built(emmetBuilding, year1915) ::: The Emmet Building is a five-story building in Portland, Oregon. The Emmet Building was built in 1915.\nAnotherName(emmetBuilding, blakeMcFallCompanyBuilding) ::: The Emmet Building is another name for the Blake McFall Company Building.\nWork(john, emmetBuilding) ::: John works at the Emmet Building.\nConclusion:\nListed(blakeMcFallCompanyBuilding, nationalRegisterOfHistoricPlaces) ∧ Added(blakeMcFallCompanyBuilding, year1990) ∧ Building(blakeMcFallCompanyBuilding) ∧ Warehouse(blakeMcFallCompanyBuilding) ∧ Commercial(blakeMcFallCompanyBuilding) ∧ AnotherName(emmetBuilding, blakeMcFallCompanyBuilding) ∧ Work(john, emmetBuilding) ∧ Building(emmetBuilding) ∧ FiveStory(emmetBuilding) ∧ Built(emmetBuilding, year1915) ∧ Portland(x) ∧ Oregon(x) ∧ Located(emmetBuilding, x) ::: The Blake McFall Company Building is located in Portland, Oregon.\n------\nProblem:\nThe Blake McFall"
    ]
  },
  {
    "id": "FOLIO_train_12",
    "context": "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places. The Blake McFall Company Building was added to the National Register of Historic Places in 1990. The Emmet Building is a five-story building in Portland, Oregon. The Emmet Building was built in 1915. The Emmet Building is another name for the Blake McFall Company Building. John works at the Emmet Building.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? John started his current job in 1990.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBuilding(x) ::: x is a building.\nCommercialWarehouse(x) ::: x is a commercial warehouse.\nNationalRegisterOfHistoricPlaces(x) ::: x is listed on the National Register of Historic Places.\nAdd(x, y) ::: x was added to y.\nYear(x) ::: x is a year.\nFiveStoryBuilding(x) ::: x is a five-story building.\nPortland(x) ::: x is in Portland, Oregon.\nEmmetBuilding(x) ::: x is another name for the Blake McFall Company Building.\nWork(x, y) ::: x works at y.\nPremises:\nBuilding(blakeMcFallCompanyBuilding) ∧ CommercialWarehouse(blakeMcFallCompanyBuilding) ∧ NationalRegisterOfHistoricPlaces(blakeMcFallCompanyBuilding) ∧ Add(blakeMcFallCompanyBuilding, nationalRegisterOfHistoricPlaces) ∧ Year(year1990) ∧ Add(blakeMcFallCompanyBuilding, nationalRegisterOfHistoricPlaces) ::: The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places. The Blake McFall Company Building was added to the National Register of Historic Places in 1990.\nBuilding(emmetBuilding) ∧ FiveStoryBuilding(emmetBuilding) ∧ Portland(emmetBuilding) ∧ Year(year1915) ∧ Add(emmetBuilding, year1915) ::: The Emmet Building is a five-story building in Portland, Oregon. The Emmet Building was built in 1915.\nEmmetBuilding(emmetBuilding) ::: The Emmet Building is another name for the Blake McFall Company Building.\nWork(john, emmetBuilding) ::: John works at the Emmet Building.\nConclusion:\nWork(john, blakeMcFallCompanyBuilding) ::: John works at the Blake McFall Company Building.\nYear(year1990) ∧ Add(blakeMcFallCompanyBuilding, year1990) ∧ Work(john, blakeMcFallCompanyBuilding) ::: John started his current job in 1990.\n------\nProblem:\nThe Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places. The Blake McFall Company Building was added to the National Register of Historic Places in 1990. The Emmet Building is a five-story building in Portland, Oregon. The Emmet Building was built in 1915. The Emmet Building is another name for the Blake McF"
    ]
  },
  {
    "id": "FOLIO_train_13",
    "context": "William Dickinson was a British politician who sat in the House of Commons William Dickinson attended Westminster school for high school and then the University of Edinburgh. The University of Edinburgh is a university located in the United Kingdom. William Dickinson supported the Portland Whigs. People who supported the Portland Whigs did not get a seat in the Parliament.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? William Dickinson did not get a seat in the Parliament.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBritish(x) ::: x is a British person.\nPolitician(x) ::: x is a politician.\nSit(x, y) ::: x sits in y.\nHouseOfCommons(x) ::: x is the House of Commons.\nAttend(x, y) ::: x attends y.\nHighSchool(x) ::: x is a high school.\nWestminsterSchool(x) ::: x is Westminster school.\nUniversity(x) ::: x is a university.\nUniversityOfEdinburgh(x) ::: x is the University of Edinburgh.\nLocated(x, y) ::: x is located in y.\nUnitedKingdom(x) ::: x is the United Kingdom.\nSupport(x, y) ::: x supports y.\nPortlandWhigs(x) ::: x is the Portland Whigs.\nSeat(x) ::: x is a seat.\nParliament(x) ::: x is the Parliament.\nPremises:\nBritish(william) ∧ Politician(william) ∧ Sit(william, houseOfCommons) ::: William Dickinson was a British politician who sat in the House of Commons William Dickinson attended Westminster school for high school and then the University of Edinburgh.\nAttend(william, westminsterSchool) ∧ HighSchool(westminsterSchool) ::: William Dickinson attended Westminster school for high school.\nAttend(william, universityOfEdinburgh) ∧ University(universityOfEdinburgh) ::: William Dickinson attended the University of Edinburgh.\nLocated(universityOfEdinburgh, unitedKingdom) ::: The University of Edinburgh is a university located in the United Kingdom.\nSupport(william, portlandWhigs) ::: William Dickinson supported the Portland Whigs.\n¬∃x (Support(x, portlandWhigs) ∧ Seat(x)) ::: People who supported the Portland Whigs did not get a seat in the Parliament.\nConclusion:\n¬Seat(william) ::: William Dickinson did not get a seat in the Parliament.\n------\nProblem:\nThe United States is a country. The United States is located in North America. The United States is a member of the United Nations. The United Nations is an international organization. The United Nations is located in New York City. New York City is a city. New York City is located in the United States.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The United States is a member of the United Nations.\nBased on the above information, is the following statement true, false, or uncertain? The United States is located in New York City.\nBased on the above information, is the following statement true, false, or uncertain? The"
    ]
  },
  {
    "id": "FOLIO_train_14",
    "context": "William Dickinson was a British politician who sat in the House of Commons William Dickinson attended Westminster school for high school and then the University of Edinburgh. The University of Edinburgh is a university located in the United Kingdom. William Dickinson supported the Portland Whigs. People who supported the Portland Whigs did not get a seat in the Parliament.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? William Dickinson went to schools located in the United Kingdom for both high school and university.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBritish(x) ::: x is a British person.\nPolitician(x) ::: x is a politician.\nSit(x, y) ::: x sits in y.\nHouseOfCommons(x) ::: x is the House of Commons.\nAttend(x, y) ::: x attends y.\nHighSchool(x) ::: x is a high school.\nUniversity(x) ::: x is a university.\nLocated(x, y) ::: x is located in y.\nUnitedKingdom(x) ::: x is located in the United Kingdom.\nSupport(x, y) ::: x supports y.\nPortlandWhigs(x) ::: x is the Portland Whigs.\nSeat(x, y) ::: x gets a seat in y.\nParliament(x) ::: x is the Parliament.\nPremises:\nBritish(william) ∧ Politician(william) ∧ Sit(william, houseOfCommons) ∧ Attend(william, westminsterSchool) ∧ Attend(william, universityOfEdinburgh) ::: William Dickinson was a British politician who sat in the House of Commons William Dickinson attended Westminster school for high school and then the University of Edinburgh.\nUniversity(universityOfEdinburgh) ∧ Located(universityOfEdinburgh, unitedKingdom) ::: The University of Edinburgh is a university located in the United Kingdom.\nSupport(william, portlandWhigs) ::: William Dickinson supported the Portland Whigs.\n¬∃x (Support(x, portlandWhigs) ∧ Seat(x, parliament)) ::: People who supported the Portland Whigs did not get a seat in the Parliament.\nConclusion:\nLocated(westminsterSchool, unitedKingdom) ∧ Located(universityOfEdinburgh, unitedKingdom) ::: William Dickinson went to schools located in the United Kingdom for both high school and university.\n------\nProblem:\nThe United States is a country. The United States is located in North America. The United States is a member of the United Nations. The United Nations is an international organization. The United Nations is located in New York City. New York City is a city. New York City is located in the United States.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The United States is a member of the United Nations.\nBased on the above information, is the following statement true, false, or uncertain? The United States is located in New York City.\nBased on the above information, is the following statement true, false, or uncertain? The United Nations is located in North America.\n###\nPredicates:\nCountry(x) ::: x is a country.\nLocated"
    ]
  },
  {
    "id": "FOLIO_train_15",
    "context": "William Dickinson was a British politician who sat in the House of Commons William Dickinson attended Westminster school for high school and then the University of Edinburgh. The University of Edinburgh is a university located in the United Kingdom. William Dickinson supported the Portland Whigs. People who supported the Portland Whigs did not get a seat in the Parliament.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? William Dickinson attended university in the United Kingdom.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBritish(x) ::: x is a British person.\nPolitician(x) ::: x is a politician.\nSit(x, y) ::: x sat in y.\nHouseOfCommons(x) ::: x is the House of Commons.\nAttend(x, y) ::: x attended y.\nHighSchool(x) ::: x is a high school.\nUniversity(x) ::: x is a university.\nLocated(x, y) ::: x is located in y.\nSupport(x, y) ::: x supported y.\nSeat(x, y) ::: x got a seat in y.\nPremises:\nBritish(william) ∧ Politician(william) ∧ Sit(william, houseOfCommons) ∧ Attend(william, westminsterSchool) ∧ Attend(william, universityOfEdinburgh) ::: William Dickinson was a British politician who sat in the House of Commons William Dickinson attended Westminster school for high school and then the University of Edinburgh.\nUniversity(universityOfEdinburgh) ∧ Located(universityOfEdinburgh, unitedKingdom) ::: The University of Edinburgh is a university located in the United Kingdom.\nSupport(william, portlandWhigs) ::: William Dickinson supported the Portland Whigs.\n¬∃x (Support(x, portlandWhigs) ∧ Seat(x, parliament)) ::: People who supported the Portland Whigs did not get a seat in the Parliament.\nConclusion:\nLocated(universityOfEdinburgh, unitedKingdom) ::: William Dickinson attended university in the United Kingdom.\n------\nProblem:\nThe 1990 FIFA World Cup was the 14th FIFA World Cup. The 1990 FIFA World Cup was held in Italy. The 1990 FIFA World Cup was won by West Germany. The 1990 FIFA World Cup was the first World Cup to be officially recorded and transmitted in HDTV by the Italian broadcaster RAI in association with Japan's NHK. The 1990 FIFA World Cup was the last tournament to feature a team from the divided Germany. The 1990 FIFA World Cup was the first World Cup to be held in Europe after the fall of the Iron Curtain. The 1990 FIFA World Cup was the first World Cup to have a unified Germany compete. The 1990 FIFA World Cup was the first World Cup to be held in Europe after the fall of the Iron Curtain. The 1990 FIFA World Cup was the first World Cup to be held in Europe after the fall of the Iron Curtain. The 1990 FIFA World Cup was the first World Cup to be held in Europe after the fall of the Iron Curtain. The 199"
    ]
  },
  {
    "id": "FOLIO_train_16",
    "context": "William Dickinson was a British politician who sat in the House of Commons William Dickinson attended Westminster school for high school and then the University of Edinburgh. The University of Edinburgh is a university located in the United Kingdom. William Dickinson supported the Portland Whigs. People who supported the Portland Whigs did not get a seat in the Parliament.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? William Dickinson sat in the House of Commons.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBritish(x) ::: x is a British person.\nPolitician(x) ::: x is a politician.\nAttend(x, y) ::: x attended y.\nHighSchool(x) ::: x is a high school.\nUniversity(x) ::: x is a university.\nLocated(x, y) ::: x is located in y.\nSupport(x, y) ::: x supports y.\nWhig(x) ::: x is a Whig.\nSeat(x) ::: x is a seat.\nParliament(x) ::: x is a parliament.\nPremises:\nBritish(william) ∧ Politician(william) ∧ Attend(william, westminster) ∧ Attend(william, universityOfEdinburgh) ::: William Dickinson was a British politician who sat in the House of Commons William Dickinson attended Westminster school for high school and then the University of Edinburgh.\nUniversity(universityOfEdinburgh) ∧ Located(universityOfEdinburgh, unitedKingdom) ::: The University of Edinburgh is a university located in the United Kingdom.\nSupport(william, portlandWhigs) ::: William Dickinson supported the Portland Whigs.\n¬∃x (Support(x, portlandWhigs) ∧ Seat(x) ∧ Parliament(x)) ::: People who supported the Portland Whigs did not get a seat in the Parliament.\nConclusion:\n¬Sat(william, houseOfCommons) ::: William Dickinson sat in the House of Commons.\n------\nProblem:\nThe United States of America is a country. The United States of America is located in North America. The United States of America is a member of the United Nations. The United Nations is an international organization. The United Nations is located in New York City. New York City is a city. New York City is located in the United States of America.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The United States of America is a member of the United Nations.\nBased on the above information, is the following statement true, false, or uncertain? The United States of America is located in New York City.\nBased on the above information, is the following statement true, false, or uncertain? The United Nations is located in North America.\n###\nPredicates:\nCountry(x) ::: x is a country.\nLocated(x, y) ::: x is located in y.\nMember(x, y) ::: x is a member of y.\nInternationalOrganization(x) ::: x is an international organization.\nCity(x) ::: x is a city.\nUnitedNations(x) ::: x is the United Nations.\nNewYorkCity(x) ::: x is New York City"
    ]
  },
  {
    "id": "FOLIO_train_17",
    "context": "LanguageA is a universal language If a universal language exists, then for every two people if they both know the same universal language they can communicate. Katya cannot communicate with Danil. Katya knows LanguageA.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Danil knows LanguageA.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nUniversalLanguage(x) ::: x is a universal language.\nKnow(x, y) ::: x knows y.\nCommunicate(x, y) ::: x can communicate with y.\nPremises:\nUniversalLanguage(languageA) ::: LanguageA is a universal language.\n∀x ∀y (UniversalLanguage(x) ∧ Know(x, y) ∧ Know(y, x) → Communicate(x, y)) ::: If a universal language exists, then for every two people if they both know the same universal language they can communicate.\n¬Communicate(katya, danil) ::: Katya cannot communicate with Danil.\nKnow(katya, languageA) ::: Katya knows LanguageA.\nConclusion:\nKnow(danil, languageA) ::: Danil knows LanguageA.\n------\nProblem:\nA person is a citizen of the United States if and only if the person was born in the United States. A person is a citizen of the United States if and only if the person was born in the United States. A person is a citizen of the United States if and only if the person was born in the United States. A person is a citizen of the United States if and only if the person was born in the United States. A person is a citizen of the United States if and only if the person was born in the United States. A person is a citizen of the United States if and only if the person was born in the United States. A person is a citizen of the United States if and only if the person was born in the United States. A person is a citizen of the United States if and only if the person was born in the United States. A person is a citizen of the United States if and only if the person was born in the United States. A person is a citizen of the United States if and only if the person was born in the United States. A person is a citizen of the United States if and only if the person was born in the United States. A person is a citizen of the United States if and only if the person was born in the United States. A person is a citizen of the United States if and only if the person was born in the United States. A person is a citizen of the United States if and only if the person was born in the United States. A person is a citizen of the United States if and only if the person was born in the United States. A person is a citizen of the United States if and only if the person was born in the United States. A person is a citizen of the United States if and only if the person was born in the United States. A person is a citizen of the United States if and only if the person was born in the United States. A person is a citizen of the United States if and only if the person was born in the United States. A person is a"
    ]
  },
  {
    "id": "FOLIO_train_18",
    "context": "All customers who are subscribed to AMC List are available to watch 3 movies every week without any additional fees. Some customers go to cinemas every week Customers either subscribe to AMC service or HBO service. Customers who prefer TV series more and will not watch TV series in cinemas. All customers who subscribe to HBO services prefer TV series to movies. James watches TV series in cinemas.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James goes to cinemas every week.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCustomer(x) ::: x is a customer.\nSubscribe(x, y) ::: x subscribes to y.\nAMC(x) ::: x is AMC service.\nHBO(x) ::: x is HBO service.\nAvailable(x) ::: x is available to watch 3 movies every week without any additional fees.\nGo(x) ::: x goes to cinemas every week.\nPrefer(x, y) ::: x prefers y to movies.\nWatch(x, y) ::: x watches y in cinemas.\nPremises:\n∀x (Subscribe(x, AMC) → Available(x)) ::: All customers who are subscribed to AMC List are available to watch 3 movies every week without any additional fees.\n∃x (Customer(x) ∧ Go(x)) ::: Some customers go to cinemas every week.\n∀x (Subscribe(x, AMC) ∨ Subscribe(x, HBO)) ::: Customers either subscribe to AMC service or HBO service.\n∀x (Prefer(x, TVSeries) → ¬Watch(x, TVSeries)) ::: Customers who prefer TV series more and will not watch TV series in cinemas.\n∀x (Subscribe(x, HBO) → Prefer(x, TVSeries)) ::: All customers who subscribe to HBO services prefer TV series to movies.\nWatch(james, TVSeries) ::: James watches TV series in cinemas.\nConclusion:\nGo(james) ::: James goes to cinemas every week.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.\n###\nPredicates:\nDependent(x) ::: x is a person"
    ]
  },
  {
    "id": "FOLIO_train_19",
    "context": "All customers who are subscribed to AMC List are available to watch 3 movies every week without any additional fees. Some customers go to cinemas every week Customers either subscribe to AMC service or HBO service. Customers who prefer TV series more and will not watch TV series in cinemas. All customers who subscribe to HBO services prefer TV series to movies. James watches TV series in cinemas.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James does not go to cinemas every week.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSubscribe(x, y) ::: x subscribes to y.\nAvailable(x) ::: x is available to watch 3 movies every week without any additional fees.\nGo(x) ::: x goes to cinemas every week.\nPrefer(x, y) ::: x prefers y.\nWatch(x, y) ::: x watches y.\nPremises:\n∀x (Subscribe(x, amcList) → Available(x)) ::: All customers who are subscribed to AMC List are available to watch 3 movies every week without any additional fees.\n∃x (Go(x) ∧ ¬Available(x)) ::: Some customers go to cinemas every week.\n∀x (Subscribe(x, amcService) ∨ Subscribe(x, hboService)) ::: Customers either subscribe to AMC service or HBO service.\n∀x (Prefer(x, tvSeries) → ¬Watch(x, tvSeries)) ::: Customers who prefer TV series more and will not watch TV series in cinemas.\n∀x (Subscribe(x, hboService) → Prefer(x, tvSeries)) ::: All customers who subscribe to HBO services prefer TV series to movies.\nWatch(james, tvSeries) ::: James watches TV series in cinemas.\nConclusion:\n¬Go(james) ::: James does not go to cinemas every week.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.\n###\nPredicates:\nDependent(x) ::: x is a person dependent on caffeine.\nDrinks(x) ::: x regularly drinks coffee.\nJokes(x) ::: x jokes about being addicted to"
    ]
  },
  {
    "id": "FOLIO_train_20",
    "context": "All customers who are subscribed to AMC List are available to watch 3 movies every week without any additional fees. Some customers go to cinemas every week Customers either subscribe to AMC service or HBO service. Customers who prefer TV series more and will not watch TV series in cinemas. All customers who subscribe to HBO services prefer TV series to movies. James watches TV series in cinemas.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James goes to cinemas every week or watches 3 movies every week without any additional fees.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSubscribe(x, y) ::: x subscribes to y.\nAvailable(x, y) ::: x is available to watch y movies every week without any additional fees.\nGo(x, y) ::: x goes to y every week.\nPrefer(x, y, z) ::: x prefers y to z.\nWatch(x, y) ::: x watches y.\nPremises:\n∀x (Subscribe(x, amcList) → Available(x, 3)) ::: All customers who are subscribed to AMC List are available to watch 3 movies every week without any additional fees.\n∃x (Go(x, cinemas) ∧ Prefer(x, tvSeries, movies)) ::: Some customers go to cinemas every week Customers either subscribe to AMC service or HBO service. Customers who prefer TV series more and will not watch TV series in cinemas.\n∀x (Subscribe(x, hboService) → Prefer(x, tvSeries, movies)) ::: All customers who subscribe to HBO services prefer TV series to movies.\nWatch(james, tvSeries) ∧ Go(james, cinemas) ::: James watches TV series in cinemas.\nConclusion:\nGo(james, cinemas) ∨ Available(james, 3) ::: James goes to cinemas every week or watches 3 movies every week without any additional fees.\n------"
    ]
  },
  {
    "id": "FOLIO_train_21",
    "context": "All customers who are subscribed to AMC List are available to watch 3 movies every week without any additional fees. Some customers go to cinemas every week Customers either subscribe to AMC service or HBO service. Customers who prefer TV series more and will not watch TV series in cinemas. All customers who subscribe to HBO services prefer TV series to movies. James watches TV series in cinemas.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If James does not both go to cinemas every week and subscribe to HBO service, then James is either available to watch 3 movies every week without any additional fees or he prefers TV more.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "s\nPredicates:\nSubscribe(x, y) ::: x subscribes to y.\nAvailable(x) ::: x is available to watch 3 movies every week without any additional fees.\nGo(x) ::: x goes to cinemas every week.\nPrefer(x, y) ::: x prefers y.\nWatch(x, y) ::: x watches y.\nPremises:\n∀x (Subscribe(x, amcList) → Available(x)) ::: All customers who are subscribed to AMC List are available to watch 3 movies every week without any additional fees.\n∃x (Go(x) ∧ ¬Watch(x, tvSeries)) ::: Some customers go to cinemas every week Customers either subscribe to AMC service or HBO service.\n¬(Prefer(x, tvSeries) ∧ ¬Watch(x, tvSeries)) ::: Customers who prefer TV series more and will not watch TV series in cinemas.\n∀x (Subscribe(x, hboService) → Prefer(x, tvSeries)) ::: All customers who subscribe to HBO services prefer TV series to movies.\nWatch(james, tvSeries) ::: James watches TV series in cinemas.\nConclusion:\n¬(Go(james) ∧ Subscribe(james, hboService)) → (Available(james) ∨ Prefer(james, tvSeries)) ::: If James does not both go to cin"
    ]
  },
  {
    "id": "FOLIO_train_22",
    "context": "All customers who are subscribed to AMC List are available to watch 3 movies every week without any additional fees. Some customers go to cinemas every week Customers either subscribe to AMC service or HBO service. Customers who prefer TV series more and will not watch TV series in cinemas. All customers who subscribe to HBO services prefer TV series to movies. James watches TV series in cinemas.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If James is available to watch 3 movies every week without any additional fees and he watches TV series in cinemas, then he goes to cinemas every week and prefers TV series more.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSubscribe(x, y) ::: x subscribes to y.\nAvailable(x) ::: x is available to watch 3 movies every week without any additional fees.\nGo(x) ::: x goes to cinemas every week.\nPrefer(x, y) ::: x prefers y.\nWatch(x, y) ::: x watches y.\nPremises:\n∀x (Subscribe(x, amcList) → Available(x)) ::: All customers who are subscribed to AMC List are available to watch 3 movies every week without any additional fees.\n∃x (Go(x) ∧ Watch(x, movie)) ::: Some customers go to cinemas every week.\n∀x (Subscribe(x, amcService) ∨ Subscribe(x, hboService)) ::: Customers either subscribe to AMC service or HBO service.\n∀x (Prefer(x, tvSeries) → ¬Watch(x, tvSeries)) ::: Customers who prefer TV series more and will not watch TV series in cinemas.\n∀x (Subscribe(x, hboService) → Prefer(x, tvSeries)) ::: All customers who subscribe to HBO services prefer TV series to movies.\nWatch(james, tvSeries) ∧ Go(james) ∧ Available(james) ::: James watches TV series in cinemas.\nConclusion:\nGo(james) ∧ Prefer"
    ]
  },
  {
    "id": "FOLIO_train_23",
    "context": "A La Liga soccer team ranks higher than another if it receives more points. If two La Liga soccer teams recieve the same points, the team which recieves more points from the games between the two teams ranks higher. Real Madrid and Barcelona are both La Liga soccer teams. In La Liga 2021-2022, Real Madrid recieves 86 points and Barcelon recieves 73 points. In La Liga 2021-2022, Real Madrid and Barcelona both recieve 3 points from the games between them.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? In La Liga 2021-2022, Real Madrid ranks higher than Barcelona.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRankHigher(x, y) ::: x ranks higher than y.\nLaLiga(x) ::: x is a La Liga soccer team.\nPoint(x, y) ::: x recieves y points.\nPremises:\n∀x ∀y (RankHigher(x, y) → ¬RankHigher(y, x)) ::: A La Liga soccer team ranks higher than another if it receives more points.\n∀x ∀y (RankHigher(x, y) → ¬(Point(x, z) ∧ Point(y, z) ∧ RankHigher(y, x))) ::: If two La Liga soccer teams recieve the same points, the team which recieves more points from the games between the two teams ranks higher.\nLaLiga(realMadrid) ∧ LaLiga(barcelona) ::: Real Madrid and Barcelona are both La Liga soccer teams.\nPoint(realMadrid, 86) ∧ Point(barcelona, 73) ::: In La Liga 2021-2022, Real Madrid recieves 86 points and Barcelon recieves 73 points.\nPoint(realMadrid, 3) ∧ Point(barcelona, 3) ::: In La Liga 2021-2022, Real Madrid and Barcelona both recieve 3 points from the games between them.\nConclusion:\nRankHigher(realMad"
    ]
  },
  {
    "id": "FOLIO_train_24",
    "context": "A La Liga soccer team ranks higher than another if it receives more points. If two La Liga soccer teams recieve the same points, the team which recieves more points from the games between the two teams ranks higher. Real Madrid and Barcelona are both La Liga soccer teams. In La Liga 2021-2022, Real Madrid recieves 86 points and Barcelon recieves 73 points. In La Liga 2021-2022, Real Madrid and Barcelona both recieve 3 points from the games between them.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? In La Liga 2021-2022, Barcelona ranks higher than Real Madrid.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRankHigher(x, y) ::: x ranks higher than y.\nLaLiga(x) ::: x is a La Liga soccer team.\nPoint(x, y) ::: x recieves y points.\nPremises:\n∀x ∀y (RankHigher(x, y) → ¬RankHigher(y, x)) ::: A La Liga soccer team ranks higher than another if it receives more points.\n∀x ∀y (RankHigher(x, y) → ¬(Point(x, z) ∧ Point(y, z) ∧ RankHigher(y, x))) ::: If two La Liga soccer teams recieve the same points, the team which recieves more points from the games between the two teams ranks higher.\nLaLiga(realMadrid) ∧ LaLiga(barcelona) ::: Real Madrid and Barcelona are both La Liga soccer teams.\nPoint(realMadrid, 86) ∧ Point(barcelona, 73) ::: In La Liga 2021-2022, Real Madrid recieves 86 points and Barcelon recieves 73 points.\nPoint(realMadrid, 3) ∧ Point(barcelona, 3) ::: In La Liga 2021-2022, Real Madrid and Barcelona both recieve 3 points from the games between them.\nConclusion:\n¬RankHigher(bar"
    ]
  },
  {
    "id": "FOLIO_train_25",
    "context": "Lawton Park is a neighbourhood in Seattle. All citizens of Lawton Park use the zip code 98199. Tom is a citizen of Lawton Park. Daniel uses the zip code 98199.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tom uses the zip code 98199.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCitizen(x, y) ::: x is a citizen of y.\nUse(x, y) ::: x uses y.\nZipCode(x) ::: x is a zip code.\nPremises:\nCitizen(tom, lawtonPark) ::: Tom is a citizen of Lawton Park.\n∀x (Citizen(x, lawtonPark) → ZipCode(x, 98199)) ::: All citizens of Lawton Park use the zip code 98199.\nUse(daniel, 98199) ::: Daniel uses the zip code 98199.\nConclusion:\nUse(tom, 98199) ::: Tom uses the zip code 98199.\n------\nProblem:\nThe first person to reach the South Pole was Roald Amundsen. The first person to reach the North Pole was Robert Peary. The first person to reach the South Pole was not the first person to reach the North Pole.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The first person to reach the North Pole was not the first person to reach the South Pole.\nBased on the above information, is the following statement true, false, or uncertain? The first person to reach the South Pole was not the first person to reach the North Pole.\nBased on the above information, is the following statement true"
    ]
  },
  {
    "id": "FOLIO_train_26",
    "context": "Lawton Park is a neighbourhood in Seattle. All citizens of Lawton Park use the zip code 98199. Tom is a citizen of Lawton Park. Daniel uses the zip code 98199.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tom doesn't use the zip code 98199.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCitizen(x, y) ::: x is a citizen of y.\nUse(x, y) ::: x uses y.\nZipCode(x) ::: x is a zip code.\nPremises:\nCitizen(tom, lawtonPark) ∧ Citizen(daniel, lawtonPark) ::: Tom is a citizen of Lawton Park. Daniel uses the zip code 98199.\n∀x (Citizen(x, lawtonPark) → ZipCode(x)) ::: All citizens of Lawton Park use the zip code 98199.\nConclusion:\n¬Use(tom, 98199) ::: Tom doesn't use the zip code 98199.\n------\nProblem:\nThe first person to reach the South Pole was Roald Amundsen. The first person to reach the North Pole was Robert Peary. The first person to reach the South Pole was not the first person to reach the North Pole.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The first person to reach the North Pole was not the first person to reach the South Pole.\nBased on the above information, is the following statement true, false, or uncertain? The first person to reach the South Pole was not the first person to reach the North Pole.\nBased on the above information, is the following statement true, false, or uncertain"
    ]
  },
  {
    "id": "FOLIO_train_27",
    "context": "Lawton Park is a neighbourhood in Seattle. All citizens of Lawton Park use the zip code 98199. Tom is a citizen of Lawton Park. Daniel uses the zip code 98199.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tom is a citizen of Washington.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCitizen(x, y) ::: x is a citizen of y.\nZipCode(x, y) ::: x uses the zip code y.\nPremises:\n∀x (Citizen(x, lawtonPark) → ZipCode(x, 98199)) ::: All citizens of Lawton Park use the zip code 98199.\nCitizen(tom, lawtonPark) ::: Tom is a citizen of Lawton Park.\nZipCode(daniel, 98199) ::: Daniel uses the zip code 98199.\nConclusion:\nCitizen(tom, washington) ::: Tom is a citizen of Washington.\n------\nProblem:\nThe first person to reach the South Pole was Roald Amundsen. The first person to reach the North Pole was Robert Peary. The first person to reach the South Pole was not the first person to reach the North Pole.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The first person to reach the North Pole was not the first person to reach the South Pole.\nBased on the above information, is the following statement true, false, or uncertain? The first person to reach the South Pole was not the first person to reach the North Pole.\nBased on the above information, is the following statement true, false, or uncertain? The first person to reach the North P"
    ]
  },
  {
    "id": "FOLIO_train_28",
    "context": "Lawton Park is a neighbourhood in Seattle. All citizens of Lawton Park use the zip code 98199. Tom is a citizen of Lawton Park. Daniel uses the zip code 98199.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Daniel is a citizen of Lawton Park.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCitizen(x) ::: x is a citizen.\nUse(x, y) ::: x uses y.\nZipCode(x) ::: x is a zip code.\nPremises:\n∀x (Citizen(x) ∧ Neighbourhood(lawtonPark) → ZipCode(x, 98199)) ::: All citizens of Lawton Park use the zip code 98199.\nCitizen(tom) ∧ Neighbourhood(lawtonPark) ::: Tom is a citizen of Lawton Park.\nUse(daniel, 98199) ::: Daniel uses the zip code 98199.\nConclusion:\nCitizen(daniel) ∧ Neighbourhood(lawtonPark) ::: Daniel is a citizen of Lawton Park.\n------\nProblem:\nThe first person to reach the summit of Mount Everest was Edmund Hillary. Edmund Hillary was a New Zealander. Edmund Hillary was a mountaineer. Edmund Hillary was a philanthropist. Edmund Hillary was a beekeeper. Edmund Hillary was a writer. Edmund Hillary was a photographer. Edmund Hillary was a navigator. Edmund Hillary was a filmmaker. Edmund Hillary was a politician. Edmund Hillary was a humanitarian. Edmund Hillary was a philosopher. Edmund Hillary was a diplomat. Edmund Hillary was a scientist. Edmund Hillary was"
    ]
  },
  {
    "id": "FOLIO_train_29",
    "context": "If a legislator is found guilty of stealing government funds, they will be suspended from office. Tiffany T. Alston was a legislator in Maryland's House of Delegates from 2011 to 2013. Tiffany T. Alston was found guilty of stealing government funds in 2012.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tiffany T. Alston was suspended from the Maryland House of Delegates.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLegislator(x) ::: x is a legislator.\nSuspend(x) ::: x is suspended from office.\nGuilty(x, y) ::: x is found guilty of y.\nSteal(x, y) ::: x steals y.\nFund(x) ::: x is a government fund.\nPremises:\n∀x (Legislator(x) ∧ Guilty(x, steal(x, fund(x))) → Suspend(x)) ::: If a legislator is found guilty of stealing government funds, they will be suspended from office.\nLegislator(tiffany) ∧ Guilty(tiffany, steal(tiffany, fund(tiffany))) ::: Tiffany T. Alston was a legislator in Maryland's House of Delegates from 2011 to 2013. Tiffany T. Alston was found guilty of stealing government funds in 2012.\nConclusion:\nSuspend(tiffany) ::: Tiffany T. Alston was suspended from the Maryland House of Delegates.\n------\nProblem:\nThe United States is a country. The United States is a democracy. The United States is a republic. The United States is a federation. The United States is a constitutional republic. The United States is a federal republic. The United States is a presidential system. The United States is a federal presidential constitutional republic."
    ]
  },
  {
    "id": "FOLIO_train_30",
    "context": "If a legislator is found guilty of stealing government funds, they will be suspended from office. Tiffany T. Alston was a legislator in Maryland's House of Delegates from 2011 to 2013. Tiffany T. Alston was found guilty of stealing government funds in 2012.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tiffany T. Alston was not suspended from the Maryland House of Delegates.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLegislator(x) ::: x is a legislator.\nSuspend(x) ::: x is suspended from office.\nGuilty(x, y) ::: x is found guilty of y.\nSteal(x, y) ::: x steals y.\nFund(x) ::: x is a government fund.\nPremises:\n∀x (Legislator(x) ∧ Guilty(x, steal(x, fund(x))) → Suspend(x)) ::: If a legislator is found guilty of stealing government funds, they will be suspended from office.\nLegislator(tiffany) ∧ Guilty(tiffany, steal(tiffany, fund(tiffany))) ::: Tiffany T. Alston was a legislator in Maryland's House of Delegates from 2011 to 2013. Tiffany T. Alston was found guilty of stealing government funds in 2012.\nConclusion:\n¬Suspend(tiffany) ::: Tiffany T. Alston was not suspended from the Maryland House of Delegates.\n------"
    ]
  },
  {
    "id": "FOLIO_train_31",
    "context": "If a legislator is found guilty of stealing government funds, they will be suspended from office. Tiffany T. Alston was a legislator in Maryland's House of Delegates from 2011 to 2013. Tiffany T. Alston was found guilty of stealing government funds in 2012.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tiffany T. Alston went to prison for stealing government funds.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLegislator(x) ::: x is a legislator.\nSuspend(x) ::: x is suspended from office.\nGuilty(x) ::: x is found guilty of stealing government funds.\nPrison(x) ::: x went to prison for stealing government funds.\nPremises:\n∀x (Legislator(x) → Suspend(x)) ::: If a legislator is found guilty of stealing government funds, they will be suspended from office.\nLegislator(tiffany) ∧ Guilty(tiffany) ::: Tiffany T. Alston was a legislator in Maryland's House of Delegates from 2011 to 2013. Tiffany T. Alston was found guilty of stealing government funds in 2012.\nConclusion:\nPrison(tiffany) ::: Tiffany T. Alston went to prison for stealing government funds.\n------\nProblem:\nThe first person to reach the summit of Mount Everest was Edmund Hillary. Edmund Hillary was a New Zealander. Edmund Hillary was a mountaineer. Edmund Hillary was a"
    ]
  },
  {
    "id": "FOLIO_train_32",
    "context": "Some fish may sting. Stonefish is a fish. It stings to step on a stonefish. Stonefish stings cause death if not treated. To treat stonefish stings, apply heat to the affected area or use an antivenom.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If you step on a stonefish and don’t use an antivenom, it will cause death.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFish(x) ::: x is a fish.\nStonefish(x) ::: x is a stonefish.\nSting(x) ::: x stings.\nStep(x, y) ::: x steps on y.\nSting(x) ∧ Step(x, y) ::: It stings to step on y.\nCause(x, y) ::: x causes y.\nDeath(x) ::: x causes death.\nTreat(x, y) ::: x treats y.\nHeat(x) ::: x applies heat.\nAntivenom(x) ::: x uses an antivenom.\nPremises:\n∃x (Fish(x) ∧ Sting(x)) ::: Some fish may sting.\nStonefish(stonefish) ::: Stonefish is a fish.\nSting(stonefish) ∧ Step(stonefish, x) ::: It stings to step on a stonefish.\nCause(stonefish, death) ∧ Step(stonefish, x) ::: Stonefish stings cause death if not treated.\nTreat(heat, stonefish)"
    ]
  },
  {
    "id": "FOLIO_train_33",
    "context": "Some fish may sting. Stonefish is a fish. It stings to step on a stonefish. Stonefish stings cause death if not treated. To treat stonefish stings, apply heat to the affected area or use an antivenom.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Stings of some fish can cause death if not treated.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFish(x) ::: x is a fish.\nSting(x) ::: x stings.\nStonefish(x) ::: x is a stonefish.\nSting(x) ::: x stings.\nSting(x) ::: x stings.\nSting(x) ::: x stings.\nSting(x) ::: x stings.\nSting(x) ::: x stings.\nSting(x) ::: x stings.\nSting(x) ::: x stings.\nSting(x) ::: x stings.\nSting(x) ::: x stings.\nSting(x) ::: x stings.\nSting(x) ::: x stings.\nSting(x) ::: x stings.\nSting(x) ::: x stings.\nSting(x) ::: x stings.\nSting(x) ::: x stings.\nSting(x) ::: x stings.\nSting(x) ::: x stings.\nSting(x) ::: x stings.\nSting(x) :"
    ]
  },
  {
    "id": "FOLIO_train_34",
    "context": "Some fish may sting. Stonefish is a fish. It stings to step on a stonefish. Stonefish stings cause death if not treated. To treat stonefish stings, apply heat to the affected area or use an antivenom.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If you step on a stonefish and apply heat to the affected area, stings will cause death.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFish(x) ::: x is a fish.\nStonefish(x) ::: x is a stonefish.\nSting(x) ::: x stings.\nSting(x, y) ::: x stings y.\nStep(x, y) ::: x steps on y.\nStonefishSting(x) ::: x is a stonefish sting.\nCause(x, y) ::: x causes y.\nDeath(x) ::: x causes death.\nTreat(x, y) ::: x treats y.\nHeat(x) ::: x is heat.\nAntivenom(x) ::: x is an antivenom.\nPremises:\n∃x (Fish(x) ∧ Sting(x)) ::: Some fish may sting.\nStonefish(stonefish) ::: Stonefish is a fish.\nSting(stonefish, stepOnStonefish) ::: It stings to step on a stonefish.\nCause(stonefishSting, death) ::: Stonefish stings cause death if not treated.\nTreat(heat, stonefishSting"
    ]
  },
  {
    "id": "FOLIO_train_35",
    "context": "Some monitors produced by LG have a type-c port. If the monitor has a type-c port, then it is not produced by AOC. All monitors in the library are produced by AOC. L-2021 is either in the library or has a type-c port. L-2021 is either produced by AOC and produced by LG, or neither produced by AOC nor produced by LG.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? L-2021 is in the library.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nInLibrary(x) ::: x is in the library.\nTypeCPort(x) ::: x has a type-c port.\nProducedByAOC(x) ::: x is produced by AOC.\nProducedByLG(x) ::: x is produced by LG.\nPremises:\n∃x (TypeCPort(x) → ¬ProducedByAOC(x)) ::: If the monitor has a type-c port, then it is not produced by AOC.\n∀x (InLibrary(x) → ¬TypeCPort(x)) ::: All monitors in the library are produced by AOC.\n(InLibrary(l2021) ∧ TypeCPort(l2021)) ⊕ ¬(InLibrary(l2021) ∨ TypeCPort(l2021)) ::: L-2021 is either in the library or has a type-c port.\n¬(ProducedByAOC(l2021) ∧ ProducedByLG(l2021)) → (ProducedByAOC(l2021) ∧ Produced"
    ]
  },
  {
    "id": "FOLIO_train_36",
    "context": "Some monitors produced by LG have a type-c port. If the monitor has a type-c port, then it is not produced by AOC. All monitors in the library are produced by AOC. L-2021 is either in the library or has a type-c port. L-2021 is either produced by AOC and produced by LG, or neither produced by AOC nor produced by LG.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? L-2021 is either in the library or produced by LG.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nInLibrary(x) ::: x is in the library.\nTypeCPort(x) ::: x has a type-c port.\nProducedByAOC(x) ::: x is produced by AOC.\nProducedByLG(x) ::: x is produced by LG.\nPremises:\n∃x (TypeCPort(x) → ¬ProducedByAOC(x)) ::: If the monitor has a type-c port, then it is not produced by AOC.\n∀x (InLibrary(x) → ProducedByAOC(x)) ::: All monitors in the library are produced by AOC.\n(InLibrary(l2021) ∧ ProducedByAOC(l2021)) ⊕ ¬(InLibrary(l2021) ∨ ProducedByAOC(l2021)) ::: L-2021 is either in the library or has a type-c port.\n(ProducedByAOC(l2021) ∧ ProducedByLG(l2021)) ⊕ ¬(ProducedByAOC(l202"
    ]
  },
  {
    "id": "FOLIO_train_37",
    "context": "Some monitors produced by LG have a type-c port. If the monitor has a type-c port, then it is not produced by AOC. All monitors in the library are produced by AOC. L-2021 is either in the library or has a type-c port. L-2021 is either produced by AOC and produced by LG, or neither produced by AOC nor produced by LG.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? L-2021 either has a type-c port or is produced by LG.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTypeCPort(x) ::: x has a type-c port.\nProducedByAOC(x) ::: x is produced by AOC.\nProducedByLG(x) ::: x is produced by LG.\nInLibrary(x) ::: x is in the library.\nPremises:\n∃x (TypeCPort(x) ∧ ¬ProducedByAOC(x)) ::: Some monitors produced by LG have a type-c port.\n∀x (TypeCPort(x) → ¬ProducedByAOC(x)) ::: If the monitor has a type-c port, then it is not produced by AOC.\n∀x (InLibrary(x) → ProducedByAOC(x)) ::: All monitors in the library are produced by AOC.\n(InLibrary(l2021) ∧ ProducedByAOC(l2021)) ⊕ ¬(InLibrary(l2021) ∨ ProducedByAOC(l2021)) ::: L-2021 is either in the library or has a type-c port.\n(ProducedBy"
    ]
  },
  {
    "id": "FOLIO_train_38",
    "context": "Some monitors produced by LG have a type-c port. If the monitor has a type-c port, then it is not produced by AOC. All monitors in the library are produced by AOC. L-2021 is either in the library or has a type-c port. L-2021 is either produced by AOC and produced by LG, or neither produced by AOC nor produced by LG.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If L-2021 is either in the library and produced by LG, or neither in the library nor produced by LG,  then L-2021 neither has a type-c port nor is produced by LG.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nInLibrary(x) ::: x is in the library.\nTypeCPort(x) ::: x has a type-c port.\nProducedByLG(x) ::: x is produced by LG.\nProducedByAOC(x) ::: x is produced by AOC.\nPremises:\n∃x (InLibrary(x) ∧ TypeCPort(x)) ::: Some monitors produced by LG have a type-c port.\n¬(TypeCPort(x) ∧ ProducedByAOC(x)) ::: If the monitor has a type-c port, then it is not produced by AOC.\n∀x (InLibrary(x) → ProducedByAOC(x)) ::: All monitors in the library are produced by AOC.\n(InLibrary(l2021) ∧ TypeCPort(l2021)) ⊕ ¬(InLibrary(l2021) ∨ TypeCPort(l2021)) ::: L-2021 is either in the library or has a type-c port.\n(ProducedByAOC(l2021) ∧"
    ]
  },
  {
    "id": "FOLIO_train_39",
    "context": "Some monitors produced by LG have a type-c port. If the monitor has a type-c port, then it is not produced by AOC. All monitors in the library are produced by AOC. L-2021 is either in the library or has a type-c port. L-2021 is either produced by AOC and produced by LG, or neither produced by AOC nor produced by LG.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If L-2021 is either produced by LG and produced by AOC or neither produced by LG nor produced by AOC,  then L-2021 is either in the library or produced by LG.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nInLibrary(x) ::: x is in the library.\nTypeC(x) ::: x has a type-c port.\nProducedByAOC(x) ::: x is produced by AOC.\nProducedByLG(x) ::: x is produced by LG.\nPremises:\n∃x (TypeC(x) ∧ ¬ProducedByAOC(x)) ::: Some monitors produced by LG have a type-c port.\n∀x (InLibrary(x) → ¬ProducedByAOC(x)) ::: If the monitor has a type-c port, then it is not produced by AOC.\n∀x (InLibrary(x) → ProducedByAOC(x)) ::: All monitors in the library are produced by AOC.\n(InLibrary(l2021) ∧ TypeC(l2021)) ⊕ ¬(InLibrary(l2021) ∨ TypeC(l2021)) ::: L-2021 is either in the library or has a type-c port.\n(ProducedByAOC(l2021)"
    ]
  },
  {
    "id": "FOLIO_train_40",
    "context": "People eat meat regularly or are vegetation. If people eat meat regularly, then they enjoy eating hamburgers and steaks. All people who are vegetarian are conscious of the environment or their health. If people are conscious about the environment or their health, then they do not go to fast food places often. If people have busy schedules without time to cook, then they go to fast food places often. If Jeremy does not both go to fast food places often and is conscious about the environment or their health, then he goes to fast food places often.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jeremy has a busy schedule without time to cook.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEatMeat(x) ::: x eats meat regularly.\nVegetarian(x) ::: x is vegetarian.\nEnjoy(x, y) ::: x enjoys eating y.\nHamburger(x) ::: x is a hamburger.\nSteak(x) ::: x is a steak.\nConscious(x, y) ::: x is conscious about y.\nEnvironment(x) ::: x is the environment.\nHealth(x) ::: x is health.\nFastFoodPlace(x) ::: x is a fast food place.\nGo(x, y) ::: x goes to y often.\nBusy(x) ::: x has a busy schedule.\nTime(x) ::: x has time to cook.\nSchedule(x) ::: x is a schedule.\nPremises:\nEatMeat(x) ⊕ Vegetarian(x) ::: People eat meat regularly or are vegetation.\nEatMeat(x) → (Enjoy(x, hamburger) ∧ Enjoy(x, steak)) ::: If people eat meat regularly, then they enjoy eating hamburgers and steaks.\n∀x (Vegetarian(x) → (Conscious(x, environment) ∨ Conscious(x, health))) ::: All people who are vegetarian are conscious of the environment or their health.\nConscious(x, environment) ∨ Conscious(x, health) → ¬Go(x, fastFoodPlace) ::: If people are conscious about the environment or their health, then they do not go to fast food places often.\nBusy(x) ∧ ¬Time(x) → Go(x, fastFoodPlace) ::: If people have busy schedules without time to cook, then they go to fast food places often.\n¬(Go(jeremy, fastFoodPlace) ∧ ¬Conscious(jeremy, environment) ∨ ¬Conscious(jeremy, health)) → Go(jeremy, fastFoodPlace) ::: If Jeremy does not both go to fast food places often and is conscious about the environment or their health, then he goes to fast food places often.\nConclusion:\nBusy(jeremy) ::: Jeremy has a busy schedule without time to cook.\n------"
    ]
  },
  {
    "id": "FOLIO_train_41",
    "context": "People eat meat regularly or are vegetation. If people eat meat regularly, then they enjoy eating hamburgers and steaks. All people who are vegetarian are conscious of the environment or their health. If people are conscious about the environment or their health, then they do not go to fast food places often. If people have busy schedules without time to cook, then they go to fast food places often. If Jeremy does not both go to fast food places often and is conscious about the environment or their health, then he goes to fast food places often.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jeremy has a busy schedule without time to cook or enjoy eating hamburgers and steaks.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEatMeat(x) ::: x eats meat regularly.\nVegetarian(x) ::: x is a vegetarian.\nEnjoy(x, y) ::: x enjoys eating y.\nConscious(x, y) ::: x is conscious about y.\nGo(x, y) ::: x goes to y often.\nBusy(x) ::: x has a busy schedule.\nCook(x) ::: x has time to cook.\nPremises:\nEatMeat(x) ⊕ Vegetarian(x) ::: People eat meat regularly or are vegetation.\nEatMeat(x) → (Enjoy(x, hamburger) ∧ Enjoy(x, steak)) ::: If people eat meat regularly, then they enjoy eating hamburgers and steaks.\n∀x (Vegetarian(x) → (Conscious(x, environment) ∨ Conscious(x, health))) ::: All people who are vegetarian are conscious of the environment or their health.\n∀x (Conscious(x, environment) ∨ Conscious(x, health)) → ¬Go(x, fastFoodPlace) ::: If people are conscious about the environment or their health, then they do not go to fast food places often.\n∀x (Busy(x) ∧ ¬Cook(x)) → Go(x, fastFoodPlace) ::: If people have busy schedules without time to cook, then they go to fast food places often.\n¬(Go(jeremy, fastFoodPlace) ∧ Conscious(jeremy, environment) ∨ Conscious(jeremy, health)) → Go(jeremy, fastFoodPlace) ::: If Jeremy does not both go to fast food places often and is conscious about the environment or their health, then he goes to fast food places often.\nConclusion:\nEatMeat(jeremy) ∨ Enjoy(jeremy, hamburger) ∨ Enjoy(jeremy, steak) ∨ Busy(jeremy) ∨ ¬Cook(jeremy) ::: Jeremy has a busy schedule without time to cook or enjoy eating hamburgers and steaks.\n------\nProblem:\nAll people who are not vegetarians eat meat regularly. People who eat meat regularly enjoy eating hamburg"
    ]
  },
  {
    "id": "FOLIO_train_42",
    "context": "People eat meat regularly or are vegetation. If people eat meat regularly, then they enjoy eating hamburgers and steaks. All people who are vegetarian are conscious of the environment or their health. If people are conscious about the environment or their health, then they do not go to fast food places often. If people have busy schedules without time to cook, then they go to fast food places often. If Jeremy does not both go to fast food places often and is conscious about the environment or their health, then he goes to fast food places often.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Jeremy has a busy schedule without time to cook or enjoy eating hamburgers and steaks, then Jeremy neither has a busy schedule without having time to cook nor enjoys eating hamburgers and steaks.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEatMeat(x) ::: x eats meat regularly.\nVegetarian(x) ::: x is vegetarian.\nEnjoy(x, y) ::: x enjoys eating y.\nConscious(x, y) ::: x is conscious about y.\nGo(x, y) ::: x goes to y often.\nBusy(x) ::: x has a busy schedule.\nTime(x) ::: x has time to cook.\nPremises:\nEatMeat(x) ⊕ Vegetarian(x) ::: People eat meat regularly or are vegetation.\nEatMeat(x) → (Enjoy(x, hamburger) ∧ Enjoy(x, steak)) ::: If people eat meat regularly, then they enjoy eating hamburgers and steaks.\n∀x (Vegetarian(x) → (Conscious(x, environment) ∨ Conscious(x, health))) ::: All people who are vegetarian are conscious of the environment or their health.\n∀x (Conscious(x, environment) ∨ Conscious(x, health)) → ¬Go(x, fastFoodPlace) ::: If people are conscious about the environment or their health, then they do not go to fast food places often.\n∀x (Busy(x) ∧ ¬Time(x)) → Go(x, fastFoodPlace) ::: If people have busy schedules without time to cook, then they go to fast food places often.\n¬(Go(jeremy, fastFoodPlace) ∧ Conscious(jeremy, environment) ∨ Conscious(jeremy, health)) → Go(jeremy, fastFoodPlace) ::: If Jeremy does not both go to fast food places often and is conscious about the environment or their health, then he goes to fast food places often.\nConclusion:\n¬(Busy(jeremy) ∧ ¬Time(jeremy)) ∨ (Enjoy(jeremy, hamburger) ∧ Enjoy(jeremy, steak)) ::: If Jeremy has a busy schedule without time to cook or enjoy eating hamburgers and steaks, then Jeremy neither has a busy schedule without having time to cook nor enjoys eating hamburgers and steaks.\n------\nProblem:\nAll people who are"
    ]
  },
  {
    "id": "FOLIO_train_43",
    "context": "Sam is doing a project. A project is written either in C++ or in Python. If Sam does a project written in Python, he will not use a Mac. Sam is using a Mac. If Sam uses a Mac, he will play a song. If a song is not \"Perfect\", Sam will never play it.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The project Sam is doing is written in C++.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProject(x) ::: x is a project.\nCpp(x) ::: x is written in C++.\nPython(x) ::: x is written in Python.\nMac(x) ::: x is a Mac.\nUse(x, y) ::: x uses y.\nPlay(x, y) ::: x plays y.\nSong(x) ::: x is a song.\nPerfect(x) ::: x is \"Perfect\".\nPremises:\n∀x (Project(x) → (Cpp(x) ∨ Python(x))) ::: A project is written either in C++ or in Python.\n¬(Python(x) ∧ Use(sam, mac)) ::: If Sam does a project written in Python, he will not use a Mac.\nUse(sam, mac) ::: Sam is using a Mac.\n¬(Use(sam, mac) ∧ ¬Play(sam, song)) ::: If Sam uses a Mac, he will play a song.\n¬(Song(x) ∧ ¬Perfect(x)) ::: If a song is not \"Perfect\", Sam will never play it.\nConclusion:\nCpp(x) ::: The project Sam is doing is written in C++.\n------\nProblem:\nA person is a student if and only if the person is a student at the University of California, Berkeley. A person is a student at the University of California, Berkeley if and only if the person is a student at the University of California, Berkeley. A person is a student at the University of California, Berkeley if and only if the person is a student at the University of California, Berkeley. A person is a student at the University of California, Berkeley if and only if the person is a student at the University of California, Berkeley. A person is a student at the University of California, Berkeley if and only if the person is a student at the University of California, Berkeley. A person is a student at the University of California, Berkeley if and only if the person is a student at the University of California, Berkeley. A person is a student at the University of California, Berkeley if and only if the person is a student at the University of California, Berkeley. A person is a student at the University of California, Berkeley if and only if the person is a student at the University of California, Berkeley"
    ]
  },
  {
    "id": "FOLIO_train_44",
    "context": "Sam is doing a project. A project is written either in C++ or in Python. If Sam does a project written in Python, he will not use a Mac. Sam is using a Mac. If Sam uses a Mac, he will play a song. If a song is not \"Perfect\", Sam will never play it.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The song Sam is playing is \"Perfect\".",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProject(x) ::: x is a project.\nCpp(x) ::: x is written in C++.\nPython(x) ::: x is written in Python.\nMac(x) ::: x is a Mac.\nUse(x, y) ::: x uses y.\nPlay(x, y) ::: x plays y.\nSong(y) ::: y is a song.\nPerfect(y) ::: y is \"Perfect\".\nPremises:\n∀x (Project(x) ∨ Cpp(x) ∨ Python(x)) ::: A project is written either in C++ or in Python.\n¬(Python(x) ∧ Use(sam, x)) → Mac(x) ::: If Sam does a project written in Python, he will not use a Mac.\nMac(x) ∧ Use(sam, x) ::: Sam is using a Mac.\n¬(Mac(x) ∧ Use(sam, x)) → Play(sam, y) ::: If Sam uses a Mac, he will play a song.\n¬(Song(y) ∧ Perfect(y)) → ¬Play(sam, y) ::: If a song is not \"Perfect\", Sam will never play it.\nConclusion:\nSong(y) ∧ Perfect(y) ∧ Play(sam, y) ::: The song Sam is playing is \"Perfect\".\n------\nProblem:\nA person is a student if and only if the person is a student at the University of California, Berkeley. A person is a student at the University of California, Berkeley if and only if the person is a student at the University of California, Berkeley. A person is a student at the University of California, Berkeley if and only if the person is a student at the University of California, Berkeley. A person is a student at the University of California, Berkeley if and only if the person is a student at the University of California, Berkeley. A person is a student at the University of California, Berkeley if and only if the person is a student at the University of California, Berkeley. A person is a student at the University of California, Berkeley if and only if the person is a student at the University of California, Berkeley. A person is a student at the University of California, Berkeley if and only if the person is a student at the University of"
    ]
  },
  {
    "id": "FOLIO_train_45",
    "context": "Sam is doing a project. A project is written either in C++ or in Python. If Sam does a project written in Python, he will not use a Mac. Sam is using a Mac. If Sam uses a Mac, he will play a song. If a song is not \"Perfect\", Sam will never play it.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If a song is \"Perfect\", Sam will play it.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProject(x) ::: x is a project.\nCpp(x) ::: x is written in C++.\nPython(x) ::: x is written in Python.\nMac(x) ::: x is a Mac.\nUse(x, y) ::: x uses y.\nPlay(x, y) ::: x plays y.\nSong(x) ::: x is a song.\nPerfect(x) ::: x is \"Perfect\".\nPremises:\n∀x (Project(x) ∨ Cpp(x) ∨ Python(x)) ::: A project is written either in C++ or in Python.\n¬(Python(x) ∧ Use(sam, x)) → Mac(x) ::: If Sam does a project written in Python, he will not use a Mac.\nMac(x) ∧ Use(sam, x) ::: Sam is using a Mac.\n¬(Mac(x) ∧ Use(sam, x)) → Play(sam, x) ::: If Sam uses a Mac, he will play a song.\n¬(Song(x) ∧ Perfect(x)) → ¬Play(sam, x) ::: If a song is not \"Perfect\", Sam will never play it.\nConclusion:\nPlay(sam, x) ∧ Song(x) ∧ Perfect(x) ::: If a song is \"Perfect\", Sam will play it.\n------\nProblem:\nA person is a student if and only if the person is a student at the University of California, Berkeley. A person is a student at the University of California, Berkeley if and only if the person is a student at the University of California, Berkeley. A person is a student at the University of California, Berkeley if and only if the person is a student at the University of California, Berkeley. A person is a student at the University of California, Berkeley if and only if the person is a student at the University of California, Berkeley. A person is a student at the University of California, Berkeley if and only if the person is a student at the University of California, Berkeley. A person is a student at the University of California, Berkeley if and only if the person is a student at the University of California, Berkeley. A person is a student at the University of California, Berkeley if and only if the person is a student at the"
    ]
  },
  {
    "id": "FOLIO_train_46",
    "context": "All rabbits have fur Some pets are rabbits.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Some pets do not have fur.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRabbit(x) ::: x is a rabbit.\nPet(x) ::: x is a pet.\nFur(x) ::: x has fur.\nPremises:\n∀x (Rabbit(x) → Fur(x)) ::: All rabbits have fur.\n∃x (Pet(x) ∧ Rabbit(x)) ::: Some pets are rabbits.\nConclusion:\n¬∃x (Pet(x) ∧ ¬Fur(x)) ::: Some pets do not have fur.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.\n###\nPredicates:\nDependent(x) ::: x is a person dependent on caffeine.\nDrinks(x) ::: x regularly drinks coffee.\nJokes(x) ::: x jokes about being addicted to caffeine.\nUnaware(x) ::: x is unaware that caffeine is a drug.\nStudent(x) ::: x is a student.\nPremises:\n∀x (Drinks(x) → Dependent(x)) ::: All people who regularly drink coffee are dependent on caffeine.\n∀x (Drinks(x) ⊕ Jokes"
    ]
  },
  {
    "id": "FOLIO_train_47",
    "context": "All video applications are software. All YouTube-related applications are video applications. An APP is either related to YouTube or Instagram. All Instagram is entertainment. All software is programmed. All entertainments are interesting. If something is interesting, then it is good. TikTok is not good.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tiktok is a program.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nVideo(x) ::: x is a video application.\nYouTube(x) ::: x is a YouTube-related application.\nInstagram(x) ::: x is an Instagram-related application.\nEntertainment(x) ::: x is an entertainment.\nSoftware(x) ::: x is a software.\nProgram(x) ::: x is a program.\nInteresting(x) ::: x is interesting.\nGood(x) ::: x is good.\nPremises:\n∀x (Video(x) → Software(x)) ::: All video applications are software.\n∀x (YouTube(x) → Video(x)) ::: All YouTube-related applications are video applications.\n(YouTube(app) ∨ Instagram(app)) ∧ ¬(YouTube(app) ∧ Instagram(app)) ::: An APP is either related to YouTube or Instagram.\n∀x (Instagram(x) → Entertainment(x)) ::: All Instagram is entertainment.\n∀x (Software(x) → Program(x)) ::: All software is programmed.\n∀x (Entertainment(x) → Interesting(x)) ::: All entertainments are interesting.\n¬(Interesting(x) → Good(x)) ::: If something is interesting, then it is good.\n¬Good(tiktok) ::: TikTok is not good.\nConclusion:\nProgram(tiktok) ::: Tiktok is a program.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine"
    ]
  },
  {
    "id": "FOLIO_train_48",
    "context": "All video applications are software. All YouTube-related applications are video applications. An APP is either related to YouTube or Instagram. All Instagram is entertainment. All software is programmed. All entertainments are interesting. If something is interesting, then it is good. TikTok is not good.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tiktok is either good or a program.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nVideo(x) ::: x is a video application.\nYouTube(x) ::: x is a YouTube-related application.\nInstagram(x) ::: x is an Instagram-related application.\nEntertainment(x) ::: x is an entertainment.\nSoftware(x) ::: x is a software.\nProgram(x) ::: x is a program.\nInteresting(x) ::: x is interesting.\nGood(x) ::: x is good.\nPremises:\n∀x (Video(x) → Software(x)) ::: All video applications are software.\n∀x (YouTube(x) → Video(x)) ::: All YouTube-related applications are video applications.\n(YouTube(app) ∨ Instagram(app)) ∧ ¬(YouTube(app) ∧ Instagram(app)) ::: An APP is either related to YouTube or Instagram.\n∀x (Instagram(x) → Entertainment(x)) ::: All Instagram is entertainment.\n∀x (Software(x) → Program(x)) ::: All software is programmed.\n∀x (Entertainment(x) → Interesting(x)) ::: All entertainments are interesting.\n∀x (Interesting(x) → Good(x)) ::: If something is interesting, then it is good.\n¬Good(tiktok) ::: TikTok is not good.\nConclusion:\nGood(tiktok) ∨ Program(tiktok) ::: Tiktok is either good or a program.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person"
    ]
  },
  {
    "id": "FOLIO_train_49",
    "context": "All video applications are software. All YouTube-related applications are video applications. An APP is either related to YouTube or Instagram. All Instagram is entertainment. All software is programmed. All entertainments are interesting. If something is interesting, then it is good. TikTok is not good.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tiktok is not both related to youtube and a program.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nVideo(x) ::: x is a video application.\nYouTube(x) ::: x is a YouTube-related application.\nInstagram(x) ::: x is an Instagram-related application.\nAPP(x) ::: x is an APP.\nEntertainment(x) ::: x is an entertainment.\nProgram(x) ::: x is a program.\nInteresting(x) ::: x is interesting.\nGood(x) ::: x is good.\nPremises:\n∀x (Video(x) → Software(x)) ::: All video applications are software.\n∀x (YouTube(x) → Video(x)) ::: All YouTube-related applications are video applications.\n∀x (APP(x) → (YouTube(x) ⊕ Instagram(x))) ::: An APP is either related to YouTube or Instagram.\n∀x (Instagram(x) → Entertainment(x)) ::: All Instagram is entertainment.\n∀x (Software(x) → Program(x)) ::: All software is programmed.\n∀x (Entertainment(x) → Interesting(x)) ::: All entertainments are interesting.\n∀x (Interesting(x) → Good(x)) ::: If something is interesting, then it is good.\n¬Good(tiktok) ::: TikTok is not good.\nConclusion:\n¬(YouTube(tiktok) ∧ Program(tiktok)) ::: Tiktok is not both related to youtube and a program.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who"
    ]
  },
  {
    "id": "FOLIO_train_50",
    "context": "All video applications are software. All YouTube-related applications are video applications. An APP is either related to YouTube or Instagram. All Instagram is entertainment. All software is programmed. All entertainments are interesting. If something is interesting, then it is good. TikTok is not good.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tiktok is either related to youtube or a program.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nVideo(x) ::: x is a video application.\nYoutube(x) ::: x is a YouTube-related application.\nInstagram(x) ::: x is an Instagram-related application.\nApp(x) ::: x is an APP.\nEntertainment(x) ::: x is entertainment.\nProgram(x) ::: x is programmed.\nInteresting(x) ::: x is interesting.\nGood(x) ::: x is good.\nPremises:\n∀x (Video(x) → Software(x)) ::: All video applications are software.\n∀x (Youtube(x) → Video(x)) ::: All YouTube-related applications are video applications.\nApp(tiktok) ∨ App(instagram) ::: An APP is either related to YouTube or Instagram.\n∀x (Instagram(x) → Entertainment(x)) ::: All Instagram is entertainment.\n∀x (Software(x) → Program(x)) ::: All software is programmed.\n∀x (Entertainment(x) → Interesting(x)) ::: All entertainments are interesting.\n∀x (Interesting(x) → Good(x)) ::: If something is interesting, then it is good.\n¬Good(tiktok) ::: TikTok is not good.\nConclusion:\nApp(tiktok) ∨ Program(tiktok) ::: Tiktok is either related to youtube or a program.\n------"
    ]
  },
  {
    "id": "FOLIO_train_51",
    "context": "Ordinary is an unincorporated community. Located within Elliot County, Ordinary is on Kentucky Route 32. Ordinary is located northwest of Sandy Hook.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There are no unincorporated communities along Kentucky Route 32.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nUnincorporatedCommunity(x) ::: x is an unincorporated community.\nLocated(x, y) ::: x is located in y.\nNorthwest(x, y) ::: x is located northwest of y.\nPremises:\nUnincorporatedCommunity(ordinary) ∧ Located(ordinary, elliotCounty) ∧ Located(ordinary, kentuckyRoute32) ::: Ordinary is an unincorporated community. Located within Elliot County, Ordinary is on Kentucky Route 32.\nLocated(ordinary, sandyHook) ∧ Northwest(ordinary, sandyHook) ::: Ordinary is located northwest of Sandy Hook.\nConclusion:\n¬∃x (UnincorporatedCommunity(x) ∧ Located(x, kentuckyRoute32)) ::: There are no unincorporated communities along Kentucky Route 32.\n------\nProblem:\nThe 1990s was a decade of the Gregorian calendar that began on January 1, 1990, and ended on December 31, 1999. The 1990s was the last decade of the 20th century. The 1990s was the first decade of the 1990s.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The 1990s was the"
    ]
  },
  {
    "id": "FOLIO_train_52",
    "context": "Ordinary is an unincorporated community. Located within Elliot County, Ordinary is on Kentucky Route 32. Ordinary is located northwest of Sandy Hook.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There is an unincorporated community in Elliot County.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nUnincorporatedCommunity(x) ::: x is an unincorporated community.\nLocated(x, y) ::: x is located in y.\nNorthwest(x, y) ::: x is located northwest of y.\nPremises:\nUnincorporatedCommunity(ordinary) ∧ Located(ordinary, elliotCounty) ∧ Located(ordinary, kentuckyRoute32) ∧ Northwest(ordinary, sandyHook) ::: Ordinary is an unincorporated community. Located within Elliot County, Ordinary is on Kentucky Route 32. Ordinary is located northwest of Sandy Hook.\nConclusion:\nLocated(ordinary, elliotCounty) ::: There is an unincorporated community in Elliot County.\n------\nProblem:\nThe 1990s was a decade of the Gregorian calendar that began on January 1, 1990, and ended on December 31, 1999. The 1990s was the last decade of the 20th century. The 1990s was the last decade of the 2nd millennium. The 1990s was the last decade of the 1st millennium.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The 1990s was the last decade of the 1st millen"
    ]
  },
  {
    "id": "FOLIO_train_53",
    "context": "All young adults go on a diet. All college students are young adults. All Yale students are college students. Someone is either a Yale student or a Harvard student. All Harvard students are diligent. If Susan is a Harvard student, then she is a young adult. If Susan is a Yale student, then she does not go on a diet.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Susan is a college student.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nYoungAdult(x) ::: x is a young adult.\nCollegeStudent(x) ::: x is a college student.\nYaleStudent(x) ::: x is a Yale student.\nHarvardStudent(x) ::: x is a Harvard student.\nDiligent(x) ::: x is diligent.\nGoOnADiet(x) ::: x goes on a diet.\nPremises:\n∀x (YoungAdult(x) → GoOnADiet(x)) ::: All young adults go on a diet.\n∀x (CollegeStudent(x) → YoungAdult(x)) ::: All college students are young adults.\n∀x (YaleStudent(x) → CollegeStudent(x)) ::: All Yale students are college students.\n(YaleStudent(susan) ∨ HarvardStudent(susan)) ::: Someone is either a Yale student or a Harvard student.\nHarvardStudent(susan) → YoungAdult(susan) ::: If Susan is a Harvard student, then she is a young adult.\nYaleStudent(susan) → ¬GoOnADiet(susan) ::: If Susan is a Yale student, then she does not go on a diet.\nConclusion:\nCollegeStudent(susan) ::: Susan is a college student.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or jo"
    ]
  },
  {
    "id": "FOLIO_train_54",
    "context": "All young adults go on a diet. All college students are young adults. All Yale students are college students. Someone is either a Yale student or a Harvard student. All Harvard students are diligent. If Susan is a Harvard student, then she is a young adult. If Susan is a Yale student, then she does not go on a diet.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Susan goes on a diet and is diligent.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nYoungAdult(x) ::: x is a young adult.\nCollegeStudent(x) ::: x is a college student.\nYaleStudent(x) ::: x is a Yale student.\nHarvardStudent(x) ::: x is a Harvard student.\nDiet(x) ::: x goes on a diet.\nDiligent(x) ::: x is diligent.\nPremises:\n∀x (YoungAdult(x) → Diet(x)) ::: All young adults go on a diet.\n∀x (CollegeStudent(x) → YoungAdult(x)) ::: All college students are young adults.\n∀x (YaleStudent(x) → CollegeStudent(x)) ::: All Yale students are college students.\n(YaleStudent(susan) ∨ HarvardStudent(susan)) ::: Someone is either a Yale student or a Harvard student.\nHarvardStudent(susan) → YoungAdult(susan) ::: If Susan is a Harvard student, then she is a young adult.\nYaleStudent(susan) → ¬Diet(susan) ::: If Susan is a Yale student, then she does not go on a diet.\n∀x (HarvardStudent(x) → Diligent(x)) ::: All Harvard students are diligent.\nConclusion:\nDiet(susan) ∧ Diligent(susan) ::: Susan goes on a di"
    ]
  },
  {
    "id": "FOLIO_train_55",
    "context": "All young adults go on a diet. All college students are young adults. All Yale students are college students. Someone is either a Yale student or a Harvard student. All Harvard students are diligent. If Susan is a Harvard student, then she is a young adult. If Susan is a Yale student, then she does not go on a diet.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Susan does not go on a diet and is diligent.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nYoungAdult(x) ::: x is a young adult.\nCollegeStudent(x) ::: x is a college student.\nYaleStudent(x) ::: x is a Yale student.\nHarvardStudent(x) ::: x is a Harvard student.\nDiet(x) ::: x goes on a diet.\nDiligent(x) ::: x is diligent.\nPremises:\n∀x (YoungAdult(x) → Diet(x)) ::: All young adults go on a diet.\n∀x (CollegeStudent(x) → YoungAdult(x)) ::: All college students are young adults.\n∀x (YaleStudent(x) → CollegeStudent(x)) ::: All Yale students are college students.\n(YaleStudent(susan) ∨ HarvardStudent(susan)) ::: Someone is either a Yale student or a Harvard student.\nHarvardStudent(susan) → YoungAdult(susan) ::: If Susan is a Harvard student, then she is a young adult.\nYaleStudent(susan) → ¬Diet(susan) ::: If Susan is a Yale student, then she does not go on a diet.\n∀x (HarvardStudent(x) → Diligent(x)) ::: All Harvard students are diligent.\nConclusion:\n¬Diet(susan) ∧ Diligent(susan) ::: Susan does not go"
    ]
  },
  {
    "id": "FOLIO_train_56",
    "context": "Vic DiCara plays guitar and bass. The only style of music Vic DiCara plays is punk music. Vic DiCara played in the band Inside Out.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Inside Out was a punk band.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPlay(x, y) ::: x plays y.\nGuitar(x) ::: x is a guitar.\nBass(x) ::: x is a bass.\nPunk(x) ::: x is a punk.\nBand(x) ::: x is a band.\nPremises:\nPlay(vic, guitar) ∧ Play(vic, bass) ::: Vic DiCara plays guitar and bass.\n∀x (Play(vic, x) → Punk(x)) ::: The only style of music Vic DiCara plays is punk music.\nPlay(vic, insideOut) ::: Vic DiCara played in the band Inside Out.\nConclusion:\nBand(insideOut) ∧ Punk(insideOut) ::: Inside Out was a punk band.\n------\nProblem:\nThe only style of music Vic DiCara plays is punk music. Vic DiCara played in the band Inside Out. Vic DiCara plays guitar and bass.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Vic DiCara played in a punk band.\nBased on the above information, is the following statement true, false, or uncertain? Vic DiCara played in a band.\nBased on the above information, is the following statement true, false, or uncertain? Vic DiCara played in a punk band and played in a band.\n###\nPredicates:\nPlay(x, y) ::: x plays y.\nGuitar(x) :"
    ]
  },
  {
    "id": "FOLIO_train_57",
    "context": "Vic DiCara plays guitar and bass. The only style of music Vic DiCara plays is punk music. Vic DiCara played in the band Inside Out.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A musician of Inside Out plays bass.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGuitar(x) ::: x plays guitar.\nBass(x) ::: x plays bass.\nPunk(x) ::: x plays punk music.\nPlay(x, y) ::: x plays in y.\nBand(x) ::: x is a band.\nPremises:\nGuitar(vic) ∧ Bass(vic) ∧ Punk(vic) ∧ Play(vic, insideOut) ::: Vic DiCara plays guitar and bass. The only style of music Vic DiCara plays is punk music. Vic DiCara played in the band Inside Out.\nConclusion:\nBass(x) ∧ Play(x, insideOut) ::: A musician of Inside Out plays bass.\n------\nProblem:\nThe only style of music Vic DiCara plays is punk music. Vic DiCara played in the band Inside Out. Vic DiCara plays guitar and bass.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Vic DiCara plays punk music.\nBased on the above information, is the following statement true, false, or uncertain? Vic DiCara plays in the band Inside Out.\nBased on the above information, is the following statement true, false, or uncertain? Vic DiCara plays guitar.\n###\nPredicates:\nGuitar(x) ::: x plays guitar.\nBass(x) ::: x plays bass.\nPunk(x) ::: x plays punk music.\nPlay("
    ]
  },
  {
    "id": "FOLIO_train_58",
    "context": "All athletes are good at sports. All Olympic gold medal winners are good athletes. No scientists are good at sports. All Nobel laureates are scientists. Amy is good at sports or Amy is an Olympic gold medal winner. If Amy is not a Nobel laureate, then Amy is not an Olympic gold medal winner.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Amy is an athlete.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAthlete(x) ::: x is an athlete.\nGoodAtSports(x) ::: x is good at sports.\nOlympicGoldMedalWinner(x) ::: x is an Olympic gold medal winner.\nScientist(x) ::: x is a scientist.\nNobelLaureate(x) ::: x is a Nobel laureate.\nPremises:\n∀x (Athlete(x) → GoodAtSports(x)) ::: All athletes are good at sports.\n∀x (OlympicGoldMedalWinner(x) → GoodAthlete(x)) ::: All Olympic gold medal winners are good athletes.\n∀x (Scientist(x) → ¬GoodAtSports(x)) ::: No scientists are good at sports.\n∀x (NobelLaureate(x) → Scientist(x)) ::: All Nobel laureates are scientists.\n(GoodAtSports(amy) ∨ OlympicGoldMedalWinner(amy)) ::: Amy is good at sports or Amy is an Olympic gold medal winner.\n¬(NobelLaureate(amy) → ¬OlympicGoldMedalWinner(amy)) ::: If Amy is not a Nobel laureate, then Amy is not an Olympic gold medal winner.\nConclusion:\nAthlete(amy) ::: Amy is an athlete.\n------\nProblem:\nAll people who regularly drink coffee are dependent on"
    ]
  },
  {
    "id": "FOLIO_train_59",
    "context": "All athletes are good at sports. All Olympic gold medal winners are good athletes. No scientists are good at sports. All Nobel laureates are scientists. Amy is good at sports or Amy is an Olympic gold medal winner. If Amy is not a Nobel laureate, then Amy is not an Olympic gold medal winner.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Amy is neither a scientist nor an Olympic gold medal winner.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAthlete(x) ::: x is an athlete.\nGoodAtSports(x) ::: x is good at sports.\nOlympicGoldMedalWinner(x) ::: x is an Olympic gold medal winner.\nScientist(x) ::: x is a scientist.\nNobelLaureate(x) ::: x is a Nobel laureate.\nPremises:\n∀x (Athlete(x) → GoodAtSports(x)) ::: All athletes are good at sports.\n∀x (OlympicGoldMedalWinner(x) → GoodAthlete(x)) ::: All Olympic gold medal winners are good athletes.\n∀x (Scientist(x) → ¬GoodAtSports(x)) ::: No scientists are good at sports.\n∀x (NobelLaureate(x) → Scientist(x)) ::: All Nobel laureates are scientists.\n(GoodAtSports(amy) ∨ OlympicGoldMedalWinner(amy)) ::: Amy is good at sports or Amy is an Olympic gold medal winner.\n¬(NobelLaureate(amy) → ¬OlympicGoldMedalWinner(amy)) ::: If Amy is not a Nobel laureate, then Amy is not an Olympic gold medal winner.\nConclusion:\n¬(Scientist(amy) ∨ OlympicGoldMedalWinner(amy)) ::: Amy is neither a scientist nor"
    ]
  },
  {
    "id": "FOLIO_train_60",
    "context": "All athletes are good at sports. All Olympic gold medal winners are good athletes. No scientists are good at sports. All Nobel laureates are scientists. Amy is good at sports or Amy is an Olympic gold medal winner. If Amy is not a Nobel laureate, then Amy is not an Olympic gold medal winner.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Amy is not an Olympic gold medal winner, then Amy is a Nobel laureate.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAthlete(x) ::: x is an athlete.\nGoodAtSports(x) ::: x is good at sports.\nOlympicGoldMedalWinner(x) ::: x is an Olympic gold medal winner.\nScientist(x) ::: x is a scientist.\nNobelLaureate(x) ::: x is a Nobel laureate.\nPremises:\n∀x (Athlete(x) → GoodAtSports(x)) ::: All athletes are good at sports.\n∀x (OlympicGoldMedalWinner(x) → GoodAthlete(x)) ::: All Olympic gold medal winners are good athletes.\n∀x (Scientist(x) → ¬GoodAtSports(x)) ::: No scientists are good at sports.\n∀x (NobelLaureate(x) → Scientist(x)) ::: All Nobel laureates are scientists.\n(GoodAtSports(amy) ∨ OlympicGoldMedalWinner(amy)) ::: Amy is good at sports or Amy is an Olympic gold medal winner.\n¬(NobelLaureate(amy) ∧ ¬OlympicGoldMedalWinner(amy)) ::: If Amy is not a Nobel laureate, then Amy is not an Olympic gold medal winner.\nConclusion:\n¬(OlympicGoldMedalWinner(amy) ∧ NobelLaureate(amy)) ::: If Amy is not an Olympic gold medal winner, then Amy is a Nobel laureate.\n------"
    ]
  },
  {
    "id": "FOLIO_train_61",
    "context": "All fruits with the color red contain a large amount of vitamin C. All apples are fruits with the color red. All fruits containing a large amount of vitamin C are beneficial to people. No fruits that are beneficial to people are on a warning list. If K is not beneficial to people and also not an apple, then it is a fruit with the color red.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? K is an apple.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFruit(x) ::: x is a fruit.\nRed(x) ::: x has the color red.\nApple(x) ::: x is an apple.\nVitaminC(x) ::: x contains a large amount of vitamin C.\nBeneficial(x) ::: x is beneficial to people.\nWarning(x) ::: x is on a warning list.\nPremises:\n∀x (Red(x) → VitaminC(x)) ::: All fruits with the color red contain a large amount of vitamin C.\n∀x (Apple(x) → Red(x)) ::: All apples are fruits with the color red.\n∀x (VitaminC(x) → Beneficial(x)) ::: All fruits containing a large amount of vitamin C are beneficial to people.\n∀x (Beneficial(x) → ¬Warning(x)) ::: No fruits that are beneficial to people are on a warning list.\n¬(Beneficial(k) ∧ Apple(k)) → (Beneficial(k) ∧ Red(k)) ::: If K is not beneficial to people and also not an apple, then it is a fruit with the color red.\nConclusion:\nApple(k) ::: K is an apple.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine"
    ]
  },
  {
    "id": "FOLIO_train_62",
    "context": "All fruits with the color red contain a large amount of vitamin C. All apples are fruits with the color red. All fruits containing a large amount of vitamin C are beneficial to people. No fruits that are beneficial to people are on a warning list. If K is not beneficial to people and also not an apple, then it is a fruit with the color red.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? K either contains a large amount of vitamin C or is on a warning list.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFruit(x) ::: x is a fruit.\nRed(x) ::: x has the color red.\nApple(x) ::: x is an apple.\nVitaminC(x) ::: x contains a large amount of vitamin C.\nBeneficial(x) ::: x is beneficial to people.\nWarning(x) ::: x is on a warning list.\nPremises:\n∀x (Fruit(x) ∧ Red(x) → VitaminC(x)) ::: All fruits with the color red contain a large amount of vitamin C.\n∀x (Apple(x) → Fruit(x) ∧ Red(x)) ::: All apples are fruits with the color red.\n∀x (VitaminC(x) → Beneficial(x)) ::: All fruits containing a large amount of vitamin C are beneficial to people.\n¬∀x (Beneficial(x) → Warning(x)) ::: No fruits that are beneficial to people are on a warning list.\n¬(Beneficial(k) ∧ Apple(k)) → (Beneficial(k) ∨ Fruit(k) ∧ Red(k)) ::: If K is not beneficial to people and also not an apple, then it is a fruit with the color red.\nConclusion:\n(VitaminC(k) ∨ Warning(k)) ::: K either contains a large amount of vitamin C or is on a warning list.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine"
    ]
  },
  {
    "id": "FOLIO_train_63",
    "context": "All fruits with the color red contain a large amount of vitamin C. All apples are fruits with the color red. All fruits containing a large amount of vitamin C are beneficial to people. No fruits that are beneficial to people are on a warning list. If K is not beneficial to people and also not an apple, then it is a fruit with the color red.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? K is either on a warning list or with the color red.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFruit(x) ::: x is a fruit.\nRed(x) ::: x has the color red.\nApple(x) ::: x is an apple.\nVitaminC(x) ::: x contains a large amount of vitamin C.\nBeneficial(x) ::: x is beneficial to people.\nWarningList(x) ::: x is on a warning list.\nPremises:\n∀x (Fruit(x) ∧ Red(x) → VitaminC(x)) ::: All fruits with the color red contain a large amount of vitamin C.\n∀x (Apple(x) → Fruit(x) ∧ Red(x)) ::: All apples are fruits with the color red.\n∀x (VitaminC(x) → Beneficial(x)) ::: All fruits containing a large amount of vitamin C are beneficial to people.\n¬∀x (Beneficial(x) → WarningList(x)) ::: No fruits that are beneficial to people are on a warning list.\n¬(Beneficial(k) ∧ Apple(k)) → (Beneficial(k) ∨ Red(k)) ::: If K is not beneficial to people and also not an apple, then it is a fruit with the color red.\nConclusion:\nWarningList(k) ∨ Red(k) ::: K is either on a warning list or with the color red.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being add"
    ]
  },
  {
    "id": "FOLIO_train_64",
    "context": "All fruits with the color red contain a large amount of vitamin C. All apples are fruits with the color red. All fruits containing a large amount of vitamin C are beneficial to people. No fruits that are beneficial to people are on a warning list. If K is not beneficial to people and also not an apple, then it is a fruit with the color red.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If K is either beneficial to people or on a warning list, then it is not red.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFruit(x) ::: x is a fruit.\nRed(x) ::: x is red.\nApple(x) ::: x is an apple.\nVitaminC(x) ::: x contains a large amount of vitamin C.\nBeneficial(x) ::: x is beneficial to people.\nWarningList(x) ::: x is on a warning list.\nPremises:\n∀x (Fruit(x) ∧ Red(x) → VitaminC(x)) ::: All fruits with the color red contain a large amount of vitamin C.\n∀x (Apple(x) → Fruit(x) ∧ Red(x)) ::: All apples are fruits with the color red.\n∀x (VitaminC(x) → Beneficial(x)) ::: All fruits containing a large amount of vitamin C are beneficial to people.\n¬∃x (Beneficial(x) ∧ WarningList(x)) ::: No fruits that are beneficial to people are on a warning list.\n¬(Beneficial(k) ∧ Apple(k)) → (Beneficial(k) ∨ Fruit(k) ∧ Red(k)) ::: If K is not beneficial to people and also not an apple, then it is a fruit with the color red.\nConclusion:\n¬(Beneficial(k) ∨ WarningList(k)) → ¬Red(k) ::: If K is either beneficial to people or on a warning list, then it is not red.\n------\nProblem:\nAll"
    ]
  },
  {
    "id": "FOLIO_train_65",
    "context": "All fruits with the color red contain a large amount of vitamin C. All apples are fruits with the color red. All fruits containing a large amount of vitamin C are beneficial to people. No fruits that are beneficial to people are on a warning list. If K is not beneficial to people and also not an apple, then it is a fruit with the color red.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If K is either on a warning list or with the color red, then it is not beneficial to people and does not contain a large amount of vitamin C.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFruit(x) ::: x is a fruit.\nRed(x) ::: x has the color red.\nApple(x) ::: x is an apple.\nVitaminC(x) ::: x contains a large amount of vitamin C.\nBeneficial(x) ::: x is beneficial to people.\nWarningList(x) ::: x is on a warning list.\nPremises:\n∀x (Fruit(x) ∧ Red(x) → VitaminC(x)) ::: All fruits with the color red contain a large amount of vitamin C.\n∀x (Apple(x) → Fruit(x) ∧ Red(x)) ::: All apples are fruits with the color red.\n∀x (VitaminC(x) → Beneficial(x)) ::: All fruits containing a large amount of vitamin C are beneficial to people.\n¬∃x (Beneficial(x) ∧ WarningList(x)) ::: No fruits that are beneficial to people are on a warning list.\n¬(Beneficial(k) ∧ Apple(k)) → (Beneficial(k) ∧ Fruit(k) ∧ Red(k)) ::: If K is not beneficial to people and also not an apple, then it is a fruit with the color red.\nConclusion:\n¬(Beneficial(k) ∧ WarningList(k)) → (¬Beneficial(k) ∧ ¬VitaminC(k)) ::: If K is either on a warning list or with the color"
    ]
  },
  {
    "id": "FOLIO_train_66",
    "context": "Everyone working at Meta has a high income. If a person has a high income, then he/she will not take a bus to their destination. People will either take a bus or drive to their destination. Everyone who has a car will choose to drive to their destination. No students drive to their destination. James has a car or works at Meta.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James has a high income.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nHighIncome(x) ::: x has a high income.\nBus(x) ::: x takes a bus to their destination.\nDrive(x) ::: x drives to their destination.\nCar(x) ::: x has a car.\nStudent(x) ::: x is a student.\nPremises:\n∀x (WorkAtMeta(x) → HighIncome(x)) ::: Everyone working at Meta has a high income.\n∀x (HighIncome(x) → ¬Bus(x)) ::: If a person has a high income, then he/she will not take a bus to their destination.\n∀x (Bus(x) ∨ Drive(x)) ::: People will either take a bus or drive to their destination.\n∀x (Car(x) → Drive(x)) ::: Everyone who has a car will choose to drive to their destination.\n∀x (Student(x) → ¬Drive(x)) ::: No students drive to their destination.\n(Car(james) ∨ WorkAtMeta(james)) ::: James has a car or works at Meta.\nConclusion:\nHighIncome(james) ::: James has a high income.\n------\nProblem:\nEveryone who is a student is a person. Everyone who is a person is a human. Everyone who is a human is a mammal. Everyone who is a mammal is an animal. Everyone who is an animal is a living thing. Everyone who is a living thing is a thing. Everyone who is a thing is a physical object. Everyone who"
    ]
  },
  {
    "id": "FOLIO_train_67",
    "context": "Everyone working at Meta has a high income. If a person has a high income, then he/she will not take a bus to their destination. People will either take a bus or drive to their destination. Everyone who has a car will choose to drive to their destination. No students drive to their destination. James has a car or works at Meta.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James does not have a high income.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nHighIncome(x) ::: x has a high income.\nBus(x) ::: x takes a bus to their destination.\nDrive(x) ::: x drives to their destination.\nCar(x) ::: x has a car.\nStudent(x) ::: x is a student.\nPremises:\n∀x (WorkAtMeta(x) → HighIncome(x)) ::: Everyone working at Meta has a high income.\n∀x (HighIncome(x) → ¬Bus(x)) ::: If a person has a high income, then he/she will not take a bus to their destination.\n∀x (Bus(x) ∨ Drive(x)) ::: People will either take a bus or drive to their destination.\n∀x (Car(x) → Drive(x)) ::: Everyone who has a car will choose to drive to their destination.\n∀x (Student(x) → ¬Drive(x)) ::: No students drive to their destination.\n(Car(james) ∨ WorkAtMeta(james)) ::: James has a car or works at Meta.\nConclusion:\n¬HighIncome(james) ::: James does not have a high income.\n------\nProblem:\nEveryone who is a student is a person. Everyone who is a person is a human. Everyone who is a human is a mammal. Everyone who is a mammal is an animal. Everyone who is an animal is a living thing. Everyone who is a living thing is a thing. Everyone who is a thing is a physical object."
    ]
  },
  {
    "id": "FOLIO_train_68",
    "context": "Everyone working at Meta has a high income. If a person has a high income, then he/she will not take a bus to their destination. People will either take a bus or drive to their destination. Everyone who has a car will choose to drive to their destination. No students drive to their destination. James has a car or works at Meta.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James is a student.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nWork(x) ::: x works at Meta.\nIncome(x) ::: x has a high income.\nBus(x) ::: x takes a bus to their destination.\nDrive(x) ::: x drives to their destination.\nCar(x) ::: x has a car.\nStudent(x) ::: x is a student.\nPremises:\n∀x (Work(x) → Income(x)) ::: Everyone working at Meta has a high income.\nIncome(x) → ¬Bus(x) ::: If a person has a high income, then he/she will not take a bus to their destination.\nBus(x) ∨ Drive(x) ::: People will either take a bus or drive to their destination.\n∀x (Car(x) → Drive(x)) ::: Everyone who has a car will choose to drive to their destination.\n¬Student(x) → ¬Drive(x) ::: No students drive to their destination.\n(Work(james) ∨ Car(james)) ::: James has a car or works at Meta.\nConclusion:\nStudent(james) ::: James is a student.\n------\nProblem:\nEveryone who is a student is a person. Everyone who is a person is a human. Everyone who is a human is a mammal. Everyone who is a mammal is an animal. Everyone who is an animal is a living thing. Everyone who is a living thing is a thing. Everyone who is a thing is a physical object. Everyone who is a physical object is a"
    ]
  },
  {
    "id": "FOLIO_train_69",
    "context": "Everyone working at Meta has a high income. If a person has a high income, then he/she will not take a bus to their destination. People will either take a bus or drive to their destination. Everyone who has a car will choose to drive to their destination. No students drive to their destination. James has a car or works at Meta.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James drives to his destination or he is a student.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nWork(x) ::: x works at Meta.\nIncome(x) ::: x has a high income.\nBus(x) ::: x takes a bus to their destination.\nDrive(x) ::: x drives to their destination.\nCar(x) ::: x has a car.\nStudent(x) ::: x is a student.\nPremises:\n∀x (Work(x) → Income(x)) ::: Everyone working at Meta has a high income.\nIncome(x) → ¬Bus(x) ::: If a person has a high income, then he/she will not take a bus to their destination.\nBus(x) ∨ Drive(x) ::: People will either take a bus or drive to their destination.\n∀x (Car(x) → Drive(x)) ::: Everyone who has a car will choose to drive to their destination.\n¬Student(x) → ¬Drive(x) ::: No students drive to their destination.\n(Work(james) ∨ Car(james)) ::: James has a car or works at Meta.\nConclusion:\nDrive(james) ∨ Student(james) ::: James drives to his destination or he is a student.\n------\nProblem:\nEveryone who is a student is a person who is not a person who is not a person who is not a person who is not a person who is not a person who is not a person who is not a person who is not a person who is not a person who is not a person who is not a person who is not a person who is not"
    ]
  },
  {
    "id": "FOLIO_train_70",
    "context": "Everyone working at Meta has a high income. If a person has a high income, then he/she will not take a bus to their destination. People will either take a bus or drive to their destination. Everyone who has a car will choose to drive to their destination. No students drive to their destination. James has a car or works at Meta.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James either drives to their destination or is a student.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nWork(x) ::: x works at Meta.\nIncome(x) ::: x has a high income.\nBus(x) ::: x takes a bus to their destination.\nDrive(x) ::: x drives to their destination.\nCar(x) ::: x has a car.\nStudent(x) ::: x is a student.\nPremises:\n∀x (Work(x) → Income(x)) ::: Everyone working at Meta has a high income.\nIncome(x) → ¬Bus(x) ::: If a person has a high income, then he/she will not take a bus to their destination.\nBus(x) ∨ Drive(x) ::: People will either take a bus or drive to their destination.\n∀x (Car(x) → Drive(x)) ::: Everyone who has a car will choose to drive to their destination.\n¬Student(x) → ¬Drive(x) ::: No students drive to their destination.\n(Car(james) ∨ Work(james)) ::: James has a car or works at Meta.\nConclusion:\nDrive(james) ∨ Student(james) ::: James either drives to their destination or is a student.\n------"
    ]
  },
  {
    "id": "FOLIO_train_71",
    "context": "Everyone working at Meta has a high income. If a person has a high income, then he/she will not take a bus to their destination. People will either take a bus or drive to their destination. Everyone who has a car will choose to drive to their destination. No students drive to their destination. James has a car or works at Meta.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If James either drives to his destination or is a student, then he has a high income and is a student.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nHighIncome(x) ::: x has a high income.\nBus(x) ::: x takes a bus to his/her destination.\nDrive(x) ::: x drives to his/her destination.\nCar(x) ::: x has a car.\nStudent(x) ::: x is a student.\nPremises:\n∀x (WorksAtMeta(x) → HighIncome(x)) ::: Everyone working at Meta has a high income.\n∀x (HighIncome(x) → ¬Bus(x)) ::: If a person has a high income, then he/she will not take a bus to their destination.\n∀x (Bus(x) ∨ Drive(x)) ::: People will either take a bus or drive to their destination.\n∀x (Car(x) → Drive(x)) ::: Everyone who has a car will choose to drive to their destination.\n¬∃x (Student(x) ∧ Drive(x)) ::: No students drive to their destination.\n(Car(james) ∨ WorksAtMeta(james)) ::: James has a car or works at Meta.\nConclusion:\n(Drive(james) ∨ Student(james)) → (HighIncome(j"
    ]
  },
  {
    "id": "FOLIO_train_72",
    "context": "Students either go to the park or go to the movies. No student who enjoys nature has free time during the weekend. All students who go to the movies enjoy nature. All students who do not have class during the weekend have free time during the weekend. All students not in summer camp do not have class during the weekend. James does not have class during the weekend.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James is in summer camp.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nStudent(x) ::: x is a student.\nEnjoy(x, y) ::: x enjoys y.\nGo(x, y) ::: x goes to y.\nFreeTime(x) ::: x has free time.\nClass(x) ::: x has class.\nPremises:\nStudent(james) ∧ ¬Class(james) ::: James does not have class during the weekend.\n¬(Student(x) ∧ Enjoy(x, nature)) → ¬FreeTime(x) ::: No student who enjoys nature has free time during the weekend.\n∀x (Go(x, park) ∨ Go(x, movies)) ::: Students either go to the park or go to the movies.\n∀x (Go(x, movies) → Enjoy(x, nature)) ::: All students who go to the movies enjoy nature.\n∀x (¬Class(x) → FreeTime(x)) ::: All students who do not have class during the weekend have free time during the weekend.\n∀x (¬Go(x, summerCamp) → ¬Class(x)) ::: All students not in summer camp do not have class during the weekend."
    ]
  },
  {
    "id": "FOLIO_train_73",
    "context": "Students either go to the park or go to the movies. No student who enjoys nature has free time during the weekend. All students who go to the movies enjoy nature. All students who do not have class during the weekend have free time during the weekend. All students not in summer camp do not have class during the weekend. James does not have class during the weekend.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James goes to the park or is in summer camp.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nStudent(x) ::: x is a student.\nGoToPark(x) ::: x goes to the park.\nGoToMovies(x) ::: x goes to the movies.\nEnjoyNature(x) ::: x enjoys nature.\nFreeTime(x) ::: x has free time.\nClass(x) ::: x has class.\nSummerCamp(x) ::: x is in summer camp.\nPremises:\nStudent(james) ∧ ¬Class(james) ::: James does not have class during the weekend.\nStudent(james) ∧ ¬SummerCamp(james) ::: James does not have class during the weekend.\n¬(Student(x) ∧ ¬FreeTime(x)) → (Student(x) ∧ GoToPark(x)) ∨ (Student(x) ∧ GoToMovies(x)) ::: Students either go to the park or go to the movies.\n¬(Student(x) ∧ EnjoyNature(x)) → ¬FreeTime(x) ::: No student who enjoys nature has free time during the weekend.\n∀x (GoToMovies(x)"
    ]
  },
  {
    "id": "FOLIO_train_74",
    "context": "No television stars are certified public accountants. All certified public accountants have good business sense.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? All television stars have good business sense.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTelevisionStar(x) ::: x is a television star.\nCPA(x) ::: x is a certified public accountant.\nGoodBusinessSense(x) ::: x has good business sense.\nPremises:\n¬∃x (TelevisionStar(x) ∧ CPA(x)) ::: No television stars are certified public accountants.\n∀x (CPA(x) → GoodBusinessSense(x)) ::: All certified public accountants have good business sense.\nConclusion:\n¬∀x (TelevisionStar(x) → GoodBusinessSense(x)) ::: All television stars have good business sense.\n------\nProblem:\nNo one who is a member of the National Rifle Association is a member of the National Organization for Women. No one who is a member of the National Organization for Women is a member of the National Rifle Association.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? No one who is a member of the National Rifle Association is a member of the National Organization for Women.\nBased on the above information, is the following statement true, false, or uncertain? No one who is a member of the National Organ"
    ]
  },
  {
    "id": "FOLIO_train_75",
    "context": "Some students good at math are good at chemistry. All students good at chemistry enjoy conducting experiments. All students that enjoy conducting experiments are good at planning. No student good at planning is awarded the Dean's List. James is either good at chemistry and awarded the Dean's List, or neither good at chemistry nor awarded the Dean's List.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James is good at planning.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nStudent(x) ::: x is a student.\nGoodAt(x, y) ::: x is good at y.\nEnjoy(x, y) ::: x enjoys y.\nPlan(x) ::: x is good at planning.\nAward(x, y) ::: x is awarded y.\nPremises:\n∃x (Student(x) ∧ GoodAt(x, math) ∧ GoodAt(x, chemistry)) ::: Some students good at math are good at chemistry.\n∀x (GoodAt(x, chemistry) → Enjoy(x, experiment)) ::: All students good at chemistry enjoy conducting experiments.\n∀x (Enjoy(x, experiment) → Plan(x)) ::: All students that enjoy conducting experiments are good at planning.\n¬∃x (Plan(x) ∧ Award(x, deanList)) ::: No student good at planning is awarded the Dean's List.\n(GoodAt(james, chemistry) ∧ Award(james, deanList)) ⊕ ¬(GoodAt(james, chemistry) ∨ Award(james, deanList)) ::: James is either good at chemistry and awarded the Dean's List, or"
    ]
  },
  {
    "id": "FOLIO_train_76",
    "context": "Some students good at math are good at chemistry. All students good at chemistry enjoy conducting experiments. All students that enjoy conducting experiments are good at planning. No student good at planning is awarded the Dean's List. James is either good at chemistry and awarded the Dean's List, or neither good at chemistry nor awarded the Dean's List.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James is either good at planning or good at math.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGoodAt(x, y) ::: x is good at y.\nEnjoy(x, y) ::: x enjoys y.\nAward(x, y) ::: x is awarded y.\nPlan(x) ::: x is good at planning.\nPremises:\n∃x (GoodAt(x, math) ∧ GoodAt(x, chemistry)) ::: Some students good at math are good at chemistry.\n∀x (GoodAt(x, chemistry) → Enjoy(x, experiment)) ::: All students good at chemistry enjoy conducting experiments.\n∀x (Enjoy(x, experiment) → Plan(x)) ::: All students that enjoy conducting experiments are good at planning.\n¬∃x (Plan(x) ∧ Award(x, deanList)) ::: No student good at planning is awarded the Dean's List.\n(GoodAt(james, chemistry) ∧ Award(james, deanList)) ⊕ ¬(GoodAt(james, chemistry) ∨ Award(james, deanList)) ::: James is either good at chemistry and awarded the Dean's List, or neither good at chemistry nor awarded the Dean's List.\nConclusion:"
    ]
  },
  {
    "id": "FOLIO_train_77",
    "context": "Some students good at math are good at chemistry. All students good at chemistry enjoy conducting experiments. All students that enjoy conducting experiments are good at planning. No student good at planning is awarded the Dean's List. James is either good at chemistry and awarded the Dean's List, or neither good at chemistry nor awarded the Dean's List.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James is either good at chemistry or good at math.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGoodAt(x, y) ::: x is good at y.\nEnjoy(x, y) ::: x enjoys y.\nAward(x, y) ::: x is awarded y.\nPlan(x) ::: x is good at planning.\nPremises:\n∃x (GoodAt(x, math) ∧ GoodAt(x, chemistry)) ::: Some students good at math are good at chemistry.\n∀x (GoodAt(x, chemistry) → Enjoy(x, experiment)) ::: All students good at chemistry enjoy conducting experiments.\n∀x (Enjoy(x, experiment) → Plan(x)) ::: All students that enjoy conducting experiments are good at planning.\n¬∃x (Plan(x) ∧ Award(x, deanList)) ::: No student good at planning is awarded the Dean's List.\n(GoodAt(james, chemistry) ∧ Award(james, deanList)) ⊕ ¬(GoodAt(james, chemistry) ∨ Award(james, deanList)) ::: James is either good at chemistry and awarded the Dean's List, or neither good at chemistry nor awarded the Dean's List.\nConclusion:"
    ]
  },
  {
    "id": "FOLIO_train_78",
    "context": "Some students good at math are good at chemistry. All students good at chemistry enjoy conducting experiments. All students that enjoy conducting experiments are good at planning. No student good at planning is awarded the Dean's List. James is either good at chemistry and awarded the Dean's List, or neither good at chemistry nor awarded the Dean's List.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If James is good at Chemistry or gets awarded the Dean's List, then James is either good at planning or good at math.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGoodAt(x, y) ::: x is good at y.\nEnjoy(x, y) ::: x enjoys y.\nAward(x, y) ::: x is awarded y.\nPlan(x) ::: x is good at planning.\nPremises:\n∃x (GoodAt(x, math) ∧ GoodAt(x, chemistry)) ::: Some students good at math are good at chemistry.\n∀x (GoodAt(x, chemistry) → Enjoy(x, experiment)) ::: All students good at chemistry enjoy conducting experiments.\n∀x (Enjoy(x, experiment) → Plan(x)) ::: All students that enjoy conducting experiments are good at planning.\n¬∃x (Plan(x) ∧ Award(x, deanList)) ::: No student good at planning is awarded the Dean's List.\n(GoodAt(james, chemistry) ∧ Award(james, deanList)) ⊕ ¬(GoodAt(james, chemistry) ∨ Award(james, deanList)) ::: James is either good at chemistry and awarded the Dean's List, or neither good at chemistry nor awarded the Dean's List.\nConclusion:"
    ]
  },
  {
    "id": "FOLIO_train_79",
    "context": "If a Leetcode problem is at the easy level, then its AC rate is lower than 20 percent. All Leetcode problems that are recommended to novices are easy. A Leetode problem is either easy or hard. Leetcode problems that are starred by more than 1 thousand users are hard. 2Sum is recommended to novices. 4Sum is starred by more than 1 thousand users.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? 2Sum is a Leetcode problem with an easy level.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEasy(x) ::: x is at the easy level.\nRecommend(x, y) ::: x is recommended to y.\nStar(x, y) ::: x is starred by y.\nPremises:\n∀x (Easy(x) → ¬(ACRate(x) > 20)) ::: If a Leetcode problem is at the easy level, then its AC rate is lower than 20 percent.\n∀x (Recommend(x, novice) → Easy(x)) ::: All Leetcode problems that are recommended to novices are easy.\n∀x (Easy(x) ∨ Hard(x)) ::: A Leetode problem is either easy or hard.\n∀x (Star(x, 1000) → Hard(x)) ::: Leetcode problems that are starred by more than 1 thousand users are hard.\nRecommend(2sum, novice) ::: 2Sum is recommended to novices.\nStar(4sum, 1000) ::: 4Sum is starred by more than 1 thousand users.\nConclusion:\nEasy(2sum) ::: 2Sum is a Leetcode problem with an easy level."
    ]
  },
  {
    "id": "FOLIO_train_80",
    "context": "If a Leetcode problem is at the easy level, then its AC rate is lower than 20 percent. All Leetcode problems that are recommended to novices are easy. A Leetode problem is either easy or hard. Leetcode problems that are starred by more than 1 thousand users are hard. 2Sum is recommended to novices. 4Sum is starred by more than 1 thousand users.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? 4Sum is a Leetcode problem recommended to the novice.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEasy(x) ::: x is an easy Leetcode problem.\nRecommend(x, y) ::: x is recommended to y.\nStar(x, y) ::: x is starred by y.\nPremises:\n∀x (Easy(x) → ¬(ACRate(x) > 20)) ::: If a Leetcode problem is at the easy level, then its AC rate is lower than 20 percent.\n∀x (Recommend(x, novice) → Easy(x)) ::: All Leetcode problems that are recommended to novices are easy.\n∀x (Easy(x) ∨ Hard(x)) ::: A Leetode problem is either easy or hard.\n∀x (Star(x, 1000) → Hard(x)) ::: Leetcode problems that are starred by more than 1 thousand users are hard.\nRecommend(2sum, novice) ::: 2Sum is recommended to novices.\nStar(4sum, 1000) ::: 4Sum is starred by more than 1 thousand users.\nConclusion:\nRecommend(4sum, novice) ::: 4Sum is a Leetcode problem recommended to the novice.\n------"
    ]
  },
  {
    "id": "FOLIO_train_81",
    "context": "If a Leetcode problem is at the easy level, then its AC rate is lower than 20 percent. All Leetcode problems that are recommended to novices are easy. A Leetode problem is either easy or hard. Leetcode problems that are starred by more than 1 thousand users are hard. 2Sum is recommended to novices. 4Sum is starred by more than 1 thousand users.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? 2Sum has an AC rate higher than 20 percent.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEasy(x) ::: x is at the easy level.\nRecommend(x) ::: x is recommended to novices.\nStar(x) ::: x is starred by more than 1 thousand users.\nHard(x) ::: x is at the hard level.\nPremises:\n∀x (Easy(x) → ¬(ACRate(x) > 20)) ::: If a Leetcode problem is at the easy level, then its AC rate is lower than 20 percent.\n∀x (Recommend(x) → Easy(x)) ::: All Leetcode problems that are recommended to novices are easy.\n∀x (Easy(x) ⊕ Hard(x)) ::: A Leetode problem is either easy or hard.\n∀x (Star(x) → Hard(x)) ::: Leetcode problems that are starred by more than 1 thousand users are hard.\nRecommend(2sum) ::: 2Sum is recommended to novices.\nStar(4sum) ::: 4Sum is starred by more than 1 thousand users.\nConclusion:\n¬(ACRate(2sum) > 20) ::: 2Sum has an AC rate higher than 20 percent.\n------"
    ]
  },
  {
    "id": "FOLIO_train_82",
    "context": "All rental cars cost the renter money. Whenever Sarah goes to Vermont, Sarah drives there. For someone who does not own a car to drive somewhere, they must either borrow a car or rent a car. Sarah doesn’t own a car. Sarah never borrows a car to go camping. Sarah is going to go camping in Vermont this weekend. To go camping somewhere, you must go to that place.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Sarah will spend money this weekend.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRentalCar(x) ::: x is a rental car.\nCost(x, y) ::: x costs y money.\nDrive(x, y) ::: x drives to y.\nBorrow(x, y) ::: x borrows y.\nOwn(x, y) ::: x owns y.\nCamping(x, y) ::: x goes camping in y.\nGo(x, y) ::: x goes to y.\nPremises:\n∀x (RentalCar(x) → Cost(x, renter)) ::: All rental cars cost the renter money.\nDrive(sarah, vermont) ::: Whenever Sarah goes to Vermont, Sarah drives there.\n¬∃x (Own(sarah, x) ∧ RentalCar(x)) ::: For someone who does not own a car to drive somewhere, they must either borrow a car or rent a car.\n¬∃x (Borrow(sarah, x) ∧ RentalCar(x)) ::: Sarah doesn’t own a car.\n¬∃x (Borrow(sarah, x) ∧ RentalCar(x)) ::: Sarah never borrows a car to go camping.\nCamping(sarah,"
    ]
  },
  {
    "id": "FOLIO_train_83",
    "context": "All people who attend weddings are getting married or have friends who are getting married. No preteens and other young children are getting married or have friends who are getting married. If people enjoy celebrating life milestone events with other people, then they attend weddings. If people are fond of large organized group functions, then they enjoy celebrating life milestone events with other people. All people who are outgoing and very spirited are fond of large organized group functions. If Carol is not both a pre-teen or other young child and attends weddings, then Carol is not getting married or has friends who are getting married.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Carol is outgoing and very spirited.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAttend(x) ::: x attends weddings.\nGetMarried(x) ::: x is getting married.\nFriend(x, y) ::: x is a friend of y.\nEnjoy(x, y) ::: x enjoys y.\nFond(x, y) ::: x is fond of y.\nOutgoing(x) ::: x is outgoing.\nSpirited(x) ::: x is very spirited.\nPremises:\n∀x (Attend(x) → (GetMarried(x) ∨ Friend(x, y))) ::: All people who attend weddings are getting married or have friends who are getting married.\n¬(Preteen(x) ∨ YoungChild(x)) → ¬(GetMarried(x) ∨ Friend(x, y)) ::: No preteens and other young children are getting married or have friends who are getting married.\n(Enjoy(x, y) ∧ Celebrate(x, y)) → Attend(x) ::: If people enjoy celebrating life milestone events with other people, then they attend weddings.\n(Fond(x, y) ∧ Enjoy(x, y)) → Celebrate(x, y) :::"
    ]
  },
  {
    "id": "FOLIO_train_84",
    "context": "All people who attend weddings are getting married or have friends who are getting married. No preteens and other young children are getting married or have friends who are getting married. If people enjoy celebrating life milestone events with other people, then they attend weddings. If people are fond of large organized group functions, then they enjoy celebrating life milestone events with other people. All people who are outgoing and very spirited are fond of large organized group functions. If Carol is not both a pre-teen or other young child and attends weddings, then Carol is not getting married or has friends who are getting married.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Carol is either a preteen or other young child.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAttend(x) ::: x attends weddings.\nGetMarried(x) ::: x is getting married.\nFriend(x, y) ::: x is a friend of y.\nEnjoy(x, y) ::: x enjoys y.\nFond(x, y) ::: x is fond of y.\nOutgoing(x) ::: x is outgoing.\nSpirited(x) ::: x is very spirited.\nPremises:\n∀x (Attend(x) → (GetMarried(x) ∨ Friend(x, y))) ::: All people who attend weddings are getting married or have friends who are getting married.\n¬(Preteen(x) ∨ OtherYoungChild(x)) ∧ ¬(GetMarried(x) ∨ Friend(x, y)) ::: No preteens and other young children are getting married or have friends who are getting married.\n(Enjoy(x, y) ∧ Celebrate(x, y)) → Attend(x) ::: If people enjoy celebrating life milestone events with other people, then they attend weddings.\n(Fond(x, y) ∧ Enjoy(x, y)) → (Enjoy(x, y"
    ]
  },
  {
    "id": "FOLIO_train_85",
    "context": "All people who attend weddings are getting married or have friends who are getting married. No preteens and other young children are getting married or have friends who are getting married. If people enjoy celebrating life milestone events with other people, then they attend weddings. If people are fond of large organized group functions, then they enjoy celebrating life milestone events with other people. All people who are outgoing and very spirited are fond of large organized group functions. If Carol is not both a pre-teen or other young child and attends weddings, then Carol is not getting married or has friends who are getting married.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Carol neither enjoys celebrating life milestone events with other people nor is outgoing and very spirited.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAttend(x) ::: x attends weddings.\nGetMarried(x) ::: x is getting married.\nFriend(x, y) ::: x is a friend of y.\nEnjoy(x, y) ::: x enjoys y.\nFond(x, y) ::: x is fond of y.\nOutgoing(x) ::: x is outgoing.\nSpirited(x) ::: x is very spirited.\nPremises:\n∀x (Attend(x) → (GetMarried(x) ∨ Friend(x, y))) ::: All people who attend weddings are getting married or have friends who are getting married.\n¬(Preteen(x) ∨ YoungChild(x)) → ¬(GetMarried(x) ∨ Friend(x, y)) ::: No preteens and other young children are getting married or have friends who are getting married.\n(Enjoy(x, y) ∧ Celebrate(x, y)) → Attend(x) ::: If people enjoy celebrating life milestone events with other people, then they attend weddings.\n(Fond(x, y) ∧ Organized(y)) → Enjoy(x, y) ::: If people are fond"
    ]
  },
  {
    "id": "FOLIO_train_86",
    "context": "All Republicans are anti-abortion. Either Republicans or Democrats. No Democrats are conservative. Either conservative or liberal. A U.S government official is either conservative or a Republican.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A U.S government official is a Democrat.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRepublican(x) ::: x is a Republican.\nDemocrat(x) ::: x is a Democrat.\nAntiAbortion(x) ::: x is anti-abortion.\nConservative(x) ::: x is conservative.\nLiberal(x) ::: x is liberal.\nGovernmentOfficial(x) ::: x is a U.S government official.\nPremises:\n∀x (Republican(x) → AntiAbortion(x)) ::: All Republicans are anti-abortion.\nRepublican(x) ∨ Democrat(x) ::: Either Republicans or Democrats.\n¬∀x (Democrat(x) → Conservative(x)) ::: No Democrats are conservative.\n∀x (Conservative(x) ∨ Liberal(x)) ::: Either conservative or liberal.\n∀x (GovernmentOfficial(x) → (Conservative(x) ∨ Republican(x))) ::: A U.S government official is either conservative or a Republican.\nConclusion:\n¬Democrat(x) ::: A U.S government official is a Democrat.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine."
    ]
  },
  {
    "id": "FOLIO_train_87",
    "context": "All Republicans are anti-abortion. Either Republicans or Democrats. No Democrats are conservative. Either conservative or liberal. A U.S government official is either conservative or a Republican.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A U.S government official is anti-abortion and a liberal.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRepublican(x) ::: x is a Republican.\nDemocrat(x) ::: x is a Democrat.\nConservative(x) ::: x is conservative.\nLiberal(x) ::: x is liberal.\nAntiAbortion(x) ::: x is anti-abortion.\nGovernmentOfficial(x) ::: x is a U.S government official.\nPremises:\n∀x (Republican(x) → AntiAbortion(x)) ::: All Republicans are anti-abortion.\nRepublican(x) ∨ Democrat(x) ::: Either Republicans or Democrats.\n¬∀x (Democrat(x) → Conservative(x)) ::: No Democrats are conservative.\n∀x (Conservative(x) ∨ Liberal(x)) ::: Either conservative or liberal.\n∀x (GovernmentOfficial(x) → (Conservative(x) ∨ Republican(x))) ::: A U.S government official is either conservative or a Republican.\nConclusion:\nAntiAbortion(x) ∧ Liberal(x) ::: A U.S government official is anti-abortion and a liberal.\n------\nProblem:\nAll people"
    ]
  },
  {
    "id": "FOLIO_train_88",
    "context": "All Republicans are anti-abortion. Either Republicans or Democrats. No Democrats are conservative. Either conservative or liberal. A U.S government official is either conservative or a Republican.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A U.S government official is either anti-abortion or a liberal.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRepublican(x) ::: x is a Republican.\nDemocrat(x) ::: x is a Democrat.\nConservative(x) ::: x is conservative.\nLiberal(x) ::: x is liberal.\nAntiAbortion(x) ::: x is anti-abortion.\nGovernmentOfficial(x) ::: x is a U.S government official.\nPremises:\n∀x (Republican(x) → AntiAbortion(x)) ::: All Republicans are anti-abortion.\nRepublican(x) ∨ Democrat(x) ::: Either Republicans or Democrats.\n¬∀x (Democrat(x) → Conservative(x)) ::: No Democrats are conservative.\n∀x (Conservative(x) ∨ Liberal(x)) ::: Either conservative or liberal.\n∀x (GovernmentOfficial(x) → (Conservative(x) ∨ Republican(x))) ::: A U.S government official is either conservative or a Republican.\nConclusion:\nGovernmentOfficial(x) ∨ AntiAbortion(x) ∨ Liberal(x) ::: A U.S government official is either anti-abortion or a"
    ]
  },
  {
    "id": "FOLIO_train_89",
    "context": "All Republicans are anti-abortion. Either Republicans or Democrats. No Democrats are conservative. Either conservative or liberal. A U.S government official is either conservative or a Republican.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If a U.S government official is not anti-abortion and a Republican, then a U.S government official is neither anti-abortion nor a liberal.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRepublican(x) ::: x is a Republican.\nDemocrat(x) ::: x is a Democrat.\nConservative(x) ::: x is conservative.\nLiberal(x) ::: x is liberal.\nAntiAbortion(x) ::: x is anti-abortion.\nGovernmentOfficial(x) ::: x is a U.S government official.\nPremises:\n∀x (Republican(x) → AntiAbortion(x)) ::: All Republicans are anti-abortion.\nRepublican(x) ⊕ Democrat(x) ::: Either Republicans or Democrats.\n¬(Democrat(x) ∧ Conservative(x)) ::: No Democrats are conservative.\nConservative(x) ⊕ Liberal(x) ::: Either conservative or liberal.\nGovernmentOfficial(x) ∧ (Conservative(x) ⊕ Republican(x)) ::: A U.S government official is either conservative or a Republican.\nConclusion:\n¬(AntiAbortion(x) ∧ Republican(x)) → (AntiAbortion(x) ∨ Liberal(x)) ::: If a U.S government official is not anti-ab"
    ]
  },
  {
    "id": "FOLIO_train_90",
    "context": "All Republicans are anti-abortion. Either Republicans or Democrats. No Democrats are conservative. Either conservative or liberal. A U.S government official is either conservative or a Republican.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If a U.S government official is anti-abortion and a liberal, then a U.S government official is either a Republican or a liberal.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRepublican(x) ::: x is a Republican.\nDemocrat(x) ::: x is a Democrat.\nConservative(x) ::: x is conservative.\nLiberal(x) ::: x is liberal.\nAntiAbortion(x) ::: x is anti-abortion.\nGovernmentOfficial(x) ::: x is a U.S government official.\nPremises:\n∀x (Republican(x) → AntiAbortion(x)) ::: All Republicans are anti-abortion.\nRepublican(x) ∨ Democrat(x) ::: Either Republicans or Democrats.\n¬(Democrat(x) ∧ Conservative(x)) ::: No Democrats are conservative.\nConservative(x) ∨ Liberal(x) ::: Either conservative or liberal.\nGovernmentOfficial(x) ∨ Republican(x) ::: A U.S government official is either conservative or a Republican.\nConclusion:\n¬(GovernmentOfficial(x) ∧ AntiAbortion(x) ∧ Liberal(x)) → (GovernmentOfficial(x) ∨ Liberal(x)) ::: If a U.S government official is anti-abortion and a liberal, then a U.S government official is either a Republican or a liberal.\n------"
    ]
  },
  {
    "id": "FOLIO_train_91",
    "context": "All Republicans are anti-abortion. Either Republicans or Democrats. No Democrats are conservative. Either conservative or liberal. A U.S government official is either conservative or a Republican.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If a U.S government official is either a conservative or anti-abortion, then a U.S government official is either a conservative and a liberal or neither a conservative nor a liberal.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRepublican(x) ::: x is a Republican.\nDemocrat(x) ::: x is a Democrat.\nConservative(x) ::: x is conservative.\nLiberal(x) ::: x is liberal.\nAntiAbortion(x) ::: x is anti-abortion.\nGovernmentOfficial(x) ::: x is a U.S government official.\nPremises:\n∀x (Republican(x) → AntiAbortion(x)) ::: All Republicans are anti-abortion.\nRepublican(x) ∨ Democrat(x) ::: Either Republicans or Democrats.\n¬∀x (Democrat(x) → Conservative(x)) ::: No Democrats are conservative.\n¬∀x (Conservative(x) → Liberal(x)) ::: Either conservative or liberal.\n¬∀x (GovernmentOfficial(x) → (Conservative(x) ∨ Republican(x))) ::: A U.S government official is either conservative or a Republican.\nConclusion:\n¬(GovernmentOfficial(x) ∧ AntiAbortion(x)) → (GovernmentOfficial(x) ∧ Conservative(x) ∧ Liberal(x)) ∨ ¬(GovernmentOfficial(x) ∨ Conservative(x"
    ]
  },
  {
    "id": "FOLIO_train_92",
    "context": "All Republicans are anti-abortion. Either Republicans or Democrats. No Democrats are conservative. Either conservative or liberal. A U.S government official is either conservative or a Republican.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If a U.S government official is either a conservative or anti-abortion, then a U.S government official is neither a Democrat or a liberal.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRepublican(x) ::: x is a Republican.\nDemocrat(x) ::: x is a Democrat.\nConservative(x) ::: x is conservative.\nLiberal(x) ::: x is liberal.\nAntiAbortion(x) ::: x is anti-abortion.\nGovernmentOfficial(x) ::: x is a U.S government official.\nPremises:\n∀x (Republican(x) → AntiAbortion(x)) ::: All Republicans are anti-abortion.\nRepublican(x) ⊕ Democrat(x) ::: Either Republicans or Democrats.\n¬∀x (Democrat(x) → Conservative(x)) ::: No Democrats are conservative.\nConservative(x) ⊕ Liberal(x) ::: Either conservative or liberal.\nGovernmentOfficial(x) ∧ (Conservative(x) ⊕ Republican(x)) ::: A U.S government official is either conservative or a Republican.\nConclusion:\n¬(Democrat(x) ∨ Liberal(x)) ::: If a U.S government official is either a conservative or anti-abortion, then a U.S government official is neither a Democrat or a liberal.\n------\nProblem:\nAll people who regularly drink coffee are dependent on c"
    ]
  },
  {
    "id": "FOLIO_train_93",
    "context": "All Republicans are anti-abortion. Either Republicans or Democrats. No Democrats are conservative. Either conservative or liberal. A U.S government official is either conservative or a Republican.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If an U.S government official is anti-abortion or a liberal, then a U.S government official is either anti-abortion or a liberal.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRepublican(x) ::: x is a Republican.\nDemocrat(x) ::: x is a Democrat.\nConservative(x) ::: x is conservative.\nLiberal(x) ::: x is liberal.\nAntiAbortion(x) ::: x is anti-abortion.\nGovernmentOfficial(x) ::: x is a U.S government official.\nPremises:\n∀x (Republican(x) → AntiAbortion(x)) ::: All Republicans are anti-abortion.\nRepublican(x) ∨ Democrat(x) ::: Either Republicans or Democrats.\n¬∀x (Democrat(x) → Conservative(x)) ::: No Democrats are conservative.\nConservative(x) ∨ Liberal(x) ::: Either conservative or liberal.\nGovernmentOfficial(x) ∨ Republican(x) ∨ Conservative(x) ::: A U.S government official is either conservative or a Republican.\nConclusion:\n¬(AntiAbortion(x) ∧ Liberal(x)) → (AntiAbortion(x) ∨ Liberal(x)) ::: If an U.S government official is anti-abortion or a liberal, then a U.S government official is either anti-abortion or a liberal."
    ]
  },
  {
    "id": "FOLIO_train_94",
    "context": "All advocates of high tariff rates are Republicans. Some Republicans are not conservatives.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Some conservatives are advocates of high tariff rates.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAdvocate(x) ::: x is an advocate of high tariff rates.\nRepublican(x) ::: x is a Republican.\nConservative(x) ::: x is a conservative.\nPremises:\n∀x (Advocate(x) → Republican(x)) ::: All advocates of high tariff rates are Republicans.\n∃x (Republican(x) ∧ ¬Conservative(x)) ::: Some Republicans are not conservatives.\nConclusion:\n∃x (Conservative(x) ∧ Advocate(x)) ::: Some conservatives are advocates of high tariff rates.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the"
    ]
  },
  {
    "id": "FOLIO_train_95",
    "context": "No athletes are slow runners. All professional basketball players are athletes. All NBA players are professional basketball players. All Knicks players are NBA players. Jim is either not a professional basketball player or not a slow runner.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jim is a Knicks player.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAthlete(x) ::: x is an athlete.\nBasketballPlayer(x) ::: x is a professional basketball player.\nNBAPlayer(x) ::: x is an NBA player.\nKnicksPlayer(x) ::: x is a Knicks player.\nSlowRunner(x) ::: x is a slow runner.\nPremises:\n¬∃x (Athlete(x) ∧ SlowRunner(x)) ::: No athletes are slow runners.\n∀x (BasketballPlayer(x) → Athlete(x)) ::: All professional basketball players are athletes.\n∀x (NBAPlayer(x) → BasketballPlayer(x)) ::: All NBA players are professional basketball players.\n∀x (KnicksPlayer(x) → NBAPlayer(x)) ::: All Knicks players are NBA players.\n¬(BasketballPlayer(jim) ∨ ¬SlowRunner(jim)) ::: Jim is either not a professional basketball player or not a slow runner.\nConclusion:\n¬KnicksPlayer(jim) ::: Jim is a Knicks player.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is"
    ]
  },
  {
    "id": "FOLIO_train_96",
    "context": "No athletes are slow runners. All professional basketball players are athletes. All NBA players are professional basketball players. All Knicks players are NBA players. Jim is either not a professional basketball player or not a slow runner.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jim is not a Knicks player.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAthlete(x) ::: x is an athlete.\nBasketballPlayer(x) ::: x is a professional basketball player.\nNBAPlayer(x) ::: x is an NBA player.\nKnicksPlayer(x) ::: x is a Knicks player.\nSlowRunner(x) ::: x is a slow runner.\nPremises:\n¬∃x (Athlete(x) ∧ SlowRunner(x)) ::: No athletes are slow runners.\n∀x (BasketballPlayer(x) → Athlete(x)) ::: All professional basketball players are athletes.\n∀x (NBAPlayer(x) → BasketballPlayer(x)) ::: All NBA players are professional basketball players.\n∀x (KnicksPlayer(x) → NBAPlayer(x)) ::: All Knicks players are NBA players.\n¬(BasketballPlayer(jim) ∨ SlowRunner(jim)) ::: Jim is either not a professional basketball player or not a slow runner.\nConclusion:\n¬KnicksPlayer(jim) ::: Jim is not a Knicks player.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a"
    ]
  },
  {
    "id": "FOLIO_train_97",
    "context": "No athletes are slow runners. All professional basketball players are athletes. All NBA players are professional basketball players. All Knicks players are NBA players. Jim is either not a professional basketball player or not a slow runner.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jim is an athlete.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAthlete(x) ::: x is an athlete.\nSlowRunner(x) ::: x is a slow runner.\nProfessionalBasketballPlayer(x) ::: x is a professional basketball player.\nNBAPlayer(x) ::: x is an NBA player.\nKnicksPlayer(x) ::: x is a Knicks player.\nPremises:\n¬∃x (Athlete(x) ∧ SlowRunner(x)) ::: No athletes are slow runners.\n∀x (ProfessionalBasketballPlayer(x) → Athlete(x)) ::: All professional basketball players are athletes.\n∀x (ProfessionalBasketballPlayer(x) → NBAPlayer(x)) ::: All NBA players are professional basketball players.\n∀x (NBAPlayer(x) → KnicksPlayer(x)) ::: All Knicks players are NBA players.\n¬(ProfessionalBasketballPlayer(jim) ∧ SlowRunner(jim)) ::: Jim is either not a professional basketball player or not a slow runner.\nConclusion:\nAthlete(jim) ::: Jim is an athlete.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is una"
    ]
  },
  {
    "id": "FOLIO_train_98",
    "context": "All kids love animals. All toddlers are kids. If someone loves animals, then they are not bad. All pirates are bad. If Nancy is not a pirate, then Nancy loves animals. If Nancy is not a toddler, then Nancy is bad.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Nancy is a pirate.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nKid(x) ::: x is a kid.\nToddler(x) ::: x is a toddler.\nLove(x, y) ::: x loves y.\nBad(x) ::: x is bad.\nPirate(x) ::: x is a pirate.\nPremises:\n∀x (Kid(x) → Love(x, animal)) ::: All kids love animals.\n∀x (Toddler(x) → Kid(x)) ::: All toddlers are kids.\n¬Love(x, animal) → Bad(x) ::: If someone loves animals, then they are not bad.\n∀x (Pirate(x) → Bad(x)) ::: All pirates are bad.\n¬Pirate(nancy) → Love(nancy, animal) ::: If Nancy is not a pirate, then Nancy loves animals.\n¬Toddler(nancy) → Bad(nancy) ::: If Nancy is not a toddler, then Nancy is bad.\nConclusion:\nPirate(nancy) ::: Nancy is a pirate.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is"
    ]
  },
  {
    "id": "FOLIO_train_99",
    "context": "All kids love animals. All toddlers are kids. If someone loves animals, then they are not bad. All pirates are bad. If Nancy is not a pirate, then Nancy loves animals. If Nancy is not a toddler, then Nancy is bad.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Nancy is not a pirate or a toddler.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nKid(x) ::: x is a kid.\nToddler(x) ::: x is a toddler.\nPirate(x) ::: x is a pirate.\nBad(x) ::: x is bad.\nLove(x, y) ::: x loves y.\nPremises:\n∀x (Kid(x) → Love(x, animal)) ::: All kids love animals.\n∀x (Toddler(x) → Kid(x)) ::: All toddlers are kids.\n¬Love(x, animal) → Bad(x) ::: If someone loves animals, then they are not bad.\n∀x (Pirate(x) → Bad(x)) ::: All pirates are bad.\n¬Pirate(nancy) → Love(nancy, animal) ::: If Nancy is not a pirate, then Nancy loves animals.\n¬Toddler(nancy) → Bad(nancy) ::: If Nancy is not a toddler, then Nancy is bad.\nConclusion:\n¬Pirate(nancy) ∨ ¬Toddler(nancy) ::: Nancy is not a pirate or a toddler.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caff"
    ]
  },
  {
    "id": "FOLIO_train_100",
    "context": "All kids love animals. All toddlers are kids. If someone loves animals, then they are not bad. All pirates are bad. If Nancy is not a pirate, then Nancy loves animals. If Nancy is not a toddler, then Nancy is bad.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Nancy is not a pirate or a toddler, then she loves animals and is a kid.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nKid(x) ::: x is a kid.\nToddler(x) ::: x is a toddler.\nPirate(x) ::: x is a pirate.\nBad(x) ::: x is bad.\nLove(x, y) ::: x loves y.\nPremises:\n∀x (Kid(x) → Love(x, animal)) ::: All kids love animals.\n∀x (Toddler(x) → Kid(x)) ::: All toddlers are kids.\n¬Love(x, animal) → Bad(x) ::: If someone loves animals, then they are not bad.\n∀x (Pirate(x) → Bad(x)) ::: All pirates are bad.\n¬Pirate(nancy) → Love(nancy, animal) ::: If Nancy is not a pirate, then Nancy loves animals.\n¬Toddler(nancy) → Bad(nancy) ::: If Nancy is not a toddler, then Nancy is bad.\nConclusion:\n¬Pirate(nancy) ∧ ¬Toddler(nancy) → (Kid(nancy) ∧ Love(nancy, animal)) ::: If Nancy is not a pirate or a toddler, then she loves animals and is a kid.\n------"
    ]
  },
  {
    "id": "FOLIO_train_101",
    "context": "Lana Wilson directed After Tiller, The Departure, and Miss Americana. If a film is directedy by a person, the person is a filmmaker. After Tiller is a documentary. The documentary is a type of films. Lana Wilson is from Kirkland. Kirkland is a US city. If a person is from a city in a country, the person is from the country. After Tiller is nominated for the Independent Spirit Award for Best Documentary.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Lana Wilson is a US filmmaker.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDirect(x, y) ::: x directed y.\nFilmmaker(x) ::: x is a filmmaker.\nDocumentary(x) ::: x is a documentary.\nType(x, y) ::: x is a type of y.\nFrom(x, y) ::: x is from y.\nCity(x) ::: x is a city.\nCountry(x) ::: x is a country.\nNominate(x, y) ::: x is nominated for y.\nAward(x) ::: x is an award.\nPremises:\nDirect(lana, afterTiller) ∧ Direct(lana, theDeparture) ∧ Direct(lana, missAmericana) ::: Lana Wilson directed After Tiller, The Departure, and Miss Americana.\n∀x (Direct(x, y) → Filmmaker(x)) ::: If a film is directedy by a person, the person is a filmmaker.\nDocumentary(afterTiller) ∧ Type(documentary, films) ::: After Tiller is a documentary. The documentary is a type of films.\nFrom(lana, kirkland) ::: Lana Wilson is from Kirkland.\nCity(kirkland) ∧ Country(us) ::: Kirkland is a US city.\n∀x (From(x, y)"
    ]
  },
  {
    "id": "FOLIO_train_102",
    "context": "Lana Wilson directed After Tiller, The Departure, and Miss Americana. If a film is directedy by a person, the person is a filmmaker. After Tiller is a documentary. The documentary is a type of films. Lana Wilson is from Kirkland. Kirkland is a US city. If a person is from a city in a country, the person is from the country. After Tiller is nominated for the Independent Spirit Award for Best Documentary.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Miss Americana is not directed by a filmmaker from Kirkland.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDirect(x, y) ::: x directed y.\nFilmmaker(x) ::: x is a filmmaker.\nDocumentary(x) ::: x is a documentary.\nType(x, y) ::: x is a type of y.\nFrom(x, y) ::: x is from y.\nCity(x) ::: x is a city.\nCountry(x) ::: x is a country.\nNominate(x, y) ::: x is nominated for y.\nPremises:\nDirect(lana, afterTiller) ∧ Direct(lana, theDeparture) ∧ Direct(lana, missAmericana) ::: Lana Wilson directed After Tiller, The Departure, and Miss Americana.\n∀x (Direct(x, y) → Filmmaker(x)) ::: If a film is directedy by a person, the person is a filmmaker.\nDocumentary(afterTiller) ∧ Type(documentary, films) ::: After Tiller is a documentary. The documentary is a type of films.\nFrom(lana, kirkland) ::: Lana Wilson is from Kirkland.\nCity(kirkland) ::: Kirkland is a US city.\n∀x (From(x, y) → ∀z (City(z) ∧ From(x, z) → Country"
    ]
  },
  {
    "id": "FOLIO_train_103",
    "context": "Lana Wilson directed After Tiller, The Departure, and Miss Americana. If a film is directedy by a person, the person is a filmmaker. After Tiller is a documentary. The documentary is a type of films. Lana Wilson is from Kirkland. Kirkland is a US city. If a person is from a city in a country, the person is from the country. After Tiller is nominated for the Independent Spirit Award for Best Documentary.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Lana Wilson has won the Independent Spirit Award.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDirect(x, y) ::: x directed y.\nFilmmaker(x) ::: x is a filmmaker.\nDocumentary(x) ::: x is a documentary.\nType(x, y) ::: x is a type of y.\nFrom(x, y) ::: x is from y.\nCity(x) ::: x is a city.\nCountry(x) ::: x is a country.\nNominate(x, y) ::: x is nominated for y.\nAward(x) ::: x is an award.\nPremises:\nDirect(lana, afterTiller) ∧ Direct(lana, theDeparture) ∧ Direct(lana, missAmericana) ::: Lana Wilson directed After Tiller, The Departure, and Miss Americana.\n∀x (Direct(x, y) → Filmmaker(x)) ::: If a film is directedy by a person, the person is a filmmaker.\nDocumentary(afterTiller) ∧ Type(documentary, films) ::: After Tiller is a documentary. The documentary is a type of films.\nFrom(lana, kirkland) ::: Lana Wilson is from Kirkland.\nCity(kirkland) ∧ Country(us) ::: Kirkland is a US city.\n∀x (From(x, y)"
    ]
  },
  {
    "id": "FOLIO_train_104",
    "context": "All bears in zoos are not wild. Some bears are in zoos.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Not all bears are wild.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBear(x) ::: x is a bear.\nWild(x) ::: x is wild.\nZoo(x) ::: x is in a zoo.\nPremises:\n∀x (Zoo(x) → ¬Wild(x)) ::: All bears in zoos are not wild.\n∃x (Bear(x) ∧ Zoo(x)) ::: Some bears are in zoos.\nConclusion:\n¬∀x (Bear(x) → Wild(x)) ::: Not all bears are wild.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes"
    ]
  },
  {
    "id": "FOLIO_train_105",
    "context": "If a person is the leader of a country for life, that person is in a monarchy. Leaders are either a king or a queen. Queens are female. Kings are male. Elizabeth is a queen. Elizabeth is a leader",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Elizabeth is a king.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLeader(x) ::: x is a leader.\nKing(x) ::: x is a king.\nQueen(x) ::: x is a queen.\nFemale(x) ::: x is female.\nMale(x) ::: x is male.\nMonarchy(x) ::: x is in a monarchy.\nPremises:\n∀x (Monarchy(x) → ¬Leader(x)) ::: If a person is the leader of a country for life, that person is in a monarchy.\n∀x (Leader(x) ∨ Queen(x)) ::: Leaders are either a king or a queen.\n∀x (Queen(x) → Female(x)) ::: Queens are female.\n∀x (King(x) → Male(x)) ::: Kings are male.\nQueen(elizabeth) ::: Elizabeth is a queen.\nLeader(elizabeth) ::: Elizabeth is a leader\nConclusion:\nKing(elizabeth) ::: Elizabeth is a king.\n------\nProblem:\nIf a person is a student, then that person is not a teacher. If a person is a teacher, then that person is not a student. If a person is a student, then that person is not a teacher. If a person is a teacher, then that person is not a"
    ]
  },
  {
    "id": "FOLIO_train_106",
    "context": "If a person is the leader of a country for life, that person is in a monarchy. Leaders are either a king or a queen. Queens are female. Kings are male. Elizabeth is a queen. Elizabeth is a leader",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Elizabeth is in a monarchy.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLeader(x) ::: x is a leader.\nKing(x) ::: x is a king.\nQueen(x) ::: x is a queen.\nMale(x) ::: x is male.\nFemale(x) ::: x is female.\nMonarchy(x) ::: x is in a monarchy.\nPremises:\n∀x (Leader(x) → (King(x) ∨ Queen(x))) ::: Leaders are either a king or a queen.\n∀x (Queen(x) → Female(x)) ::: Queens are female.\n∀x (King(x) → Male(x)) ::: Kings are male.\nQueen(elizabeth) ::: Elizabeth is a queen.\nLeader(elizabeth) ::: Elizabeth is a leader\nConclusion:\nMonarchy(elizabeth) ::: Elizabeth is in a monarchy.\n------\nProblem:\nIf a person is a student, then that person is not a teacher. If a person is a teacher, then that person is not a student. If a person is a student, then that person is not a professor. If a person is a professor, then that person is not a student. If a person is a professor, then that person is not a teacher. If a person is a teacher, then that person is not a professor"
    ]
  },
  {
    "id": "FOLIO_train_107",
    "context": "If a person is the leader of a country for life, that person is in a monarchy. Leaders are either a king or a queen. Queens are female. Kings are male. Elizabeth is a queen. Elizabeth is a leader",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Elizabeth is a leader of a country.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLeader(x) ::: x is a leader.\nMonarchy(x) ::: x is in a monarchy.\nKing(x) ::: x is a king.\nQueen(x) ::: x is a queen.\nFemale(x) ::: x is female.\nMale(x) ::: x is male.\nPremises:\n∀x (Monarchy(x) → ∃y (Leader(y) ∧ Life(y))) ::: If a person is the leader of a country for life, that person is in a monarchy.\n∀x (Leader(x) ∨ Queen(x)) ::: Leaders are either a king or a queen.\n∀x (Queen(x) → Female(x)) ::: Queens are female.\n∀x (King(x) → Male(x)) ::: Kings are male.\nQueen(elizabeth) ::: Elizabeth is a queen.\nLeader(elizabeth) ::: Elizabeth is a leader\nConclusion:\nLeader(elizabeth) ::: Elizabeth is a leader of a country.\n------\nProblem:\nIf a person is a student, then that person is not a teacher. If a person is a teacher, then that person is not a student. If a person is a student, then that person is not a teacher. If"
    ]
  },
  {
    "id": "FOLIO_train_108",
    "context": "If people make their own matcha teas every morning with ceremonial-grade matcha powder, then they do not wake up late and start their schedules past noon regularly. If people live in California and attend yoga classes regularly, then they make their own matcha teas every morning with ceremonial-grade matcha powder. If people work in the entertainment industry as high-profile celebrities, then they wake up late and start their schedules past noon regularly. If people do not have regular 9-5 jobs, then they work in the entertainment industry as high-profile celebrities. All people who prefer working at home over going to the office every day do not have regular 9-5 jobs. Clay either both prefers to work at home over going to the office every day and makes his own matcha teas every morning with ceremonial-grade matcha powder, or he neither prefers to work at home over going to the office every day nor makes his own matcha teas every morning with ceremonial-grade matcha powder.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Clay does not have a regular 9-5 job.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMake(x, y) ::: x makes y.\nMatchaTea(x) ::: x is a matcha tea.\nCeremonialGrade(x) ::: x is ceremonial-grade.\nPowder(x) ::: x is a powder.\nWakeUpLate(x) ::: x wakes up late.\nStart(x, y) ::: x starts y.\nSchedule(x) ::: x is a schedule.\nPastNoon(x) ::: x is past noon.\nAttend(x, y) ::: x attends y.\nYogaClass(x) ::: x is a yoga class.\nLive(x, y) ::: x lives in y.\nCalifornia(x) ::: x is California.\nWork(x, y) ::: x works in y.\nEntertainmentIndustry(x) ::: x is the entertainment industry.\nHighProfileCelebrity(x) ::: x is a high-profile celebrity.\nRegular(x) ::: x is regular.\nJob(x) ::: x is a job.\n95(x) ::: x is 9-5.\nOffice(x) ::: x is an office.\nHome(x) ::: x is a home.\nPrefer(x, y)"
    ]
  },
  {
    "id": "FOLIO_train_109",
    "context": "If people make their own matcha teas every morning with ceremonial-grade matcha powder, then they do not wake up late and start their schedules past noon regularly. If people live in California and attend yoga classes regularly, then they make their own matcha teas every morning with ceremonial-grade matcha powder. If people work in the entertainment industry as high-profile celebrities, then they wake up late and start their schedules past noon regularly. If people do not have regular 9-5 jobs, then they work in the entertainment industry as high-profile celebrities. All people who prefer working at home over going to the office every day do not have regular 9-5 jobs. Clay either both prefers to work at home over going to the office every day and makes his own matcha teas every morning with ceremonial-grade matcha powder, or he neither prefers to work at home over going to the office every day nor makes his own matcha teas every morning with ceremonial-grade matcha powder.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Clay lives in California and attends yoga classes regularly.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMake(x, y) ::: x makes y.\nMatchaTea(x) ::: x is a matcha tea.\nCeremonialGrade(x) ::: x is ceremonial-grade.\nPowder(x) ::: x is a powder.\nWakeUpLate(x) ::: x wakes up late.\nStartSchedulePastNoon(x) ::: x starts his schedule past noon.\nLive(x, y) ::: x lives in y.\nAttend(x, y) ::: x attends y.\nYogaClass(x) ::: x is a yoga class.\nWork(x, y) ::: x works in y.\nEntertainmentIndustry(x) ::: x is the entertainment industry.\nHighProfileCelebrity(x) ::: x is a high-profile celebrity.\nWakeUpLateAndStartSchedulePastNoon(x) ::: x wakes up late and starts his schedule past noon.\nRegular95Job(x) ::: x has a regular 9-5 job.\nWorkAtHome(x) ::: x works at home.\nOffice(x) ::: x is an office.\nPrefer(x, y) ::: x prefers y.\nPremises:\nMake(clay,"
    ]
  },
  {
    "id": "FOLIO_train_110",
    "context": "If people make their own matcha teas every morning with ceremonial-grade matcha powder, then they do not wake up late and start their schedules past noon regularly. If people live in California and attend yoga classes regularly, then they make their own matcha teas every morning with ceremonial-grade matcha powder. If people work in the entertainment industry as high-profile celebrities, then they wake up late and start their schedules past noon regularly. If people do not have regular 9-5 jobs, then they work in the entertainment industry as high-profile celebrities. All people who prefer working at home over going to the office every day do not have regular 9-5 jobs. Clay either both prefers to work at home over going to the office every day and makes his own matcha teas every morning with ceremonial-grade matcha powder, or he neither prefers to work at home over going to the office every day nor makes his own matcha teas every morning with ceremonial-grade matcha powder.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Clay neither prefers working at home over going to the office every day nor lives in California and attends yoga classes regularly.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Time out!"
    ]
  },
  {
    "id": "FOLIO_train_111",
    "context": "Thomas Barber was an English professional footballer. Thomas Barber played in the Football League for Aston Villa. Thomas Barber played as a half back and inside left. Thomas Barber scored the winning goal in the 1913 FA Cup Final.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Thomas Barber played in the Football League for Bolton Wanderers",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Time out!"
    ]
  },
  {
    "id": "FOLIO_train_112",
    "context": "Thomas Barber was an English professional footballer. Thomas Barber played in the Football League for Aston Villa. Thomas Barber played as a half back and inside left. Thomas Barber scored the winning goal in the 1913 FA Cup Final.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Thomas Barber played as an inside left.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Time out!"
    ]
  },
  {
    "id": "FOLIO_train_113",
    "context": "Thomas Barber was an English professional footballer. Thomas Barber played in the Football League for Aston Villa. Thomas Barber played as a half back and inside left. Thomas Barber scored the winning goal in the 1913 FA Cup Final.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? An English professional footballer scored the winning goal in the 1913 FA Cup Final.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Time out!"
    ]
  },
  {
    "id": "FOLIO_train_114",
    "context": "If people play the instrument in the concert, then he is good at playing this kind of instrument. Peter plays piano, violin, and saxophone. Peter was invited to play piano at the concert hall. Oliver and Peter were both invited to perform in the concert. Oliver plays a different musical instrument from Peter in the concert.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Oliver plays piano in the concert.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Time out!"
    ]
  },
  {
    "id": "FOLIO_train_115",
    "context": "If people play the instrument in the concert, then he is good at playing this kind of instrument. Peter plays piano, violin, and saxophone. Peter was invited to play piano at the concert hall. Oliver and Peter were both invited to perform in the concert. Oliver plays a different musical instrument from Peter in the concert.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Oliver plays violin in the concert.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Time out!"
    ]
  },
  {
    "id": "FOLIO_train_116",
    "context": "If people play the instrument in the concert, then he is good at playing this kind of instrument. Peter plays piano, violin, and saxophone. Peter was invited to play piano at the concert hall. Oliver and Peter were both invited to perform in the concert. Oliver plays a different musical instrument from Peter in the concert.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Peter is good at playing piano.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Time out!"
    ]
  },
  {
    "id": "FOLIO_train_117",
    "context": "If something can go underwater, then it enjoys water. All animals that can swim can go underwater. Either an animal can swim or it can walk. Animals that can walk travel on land. Animals that enjoy water splash water around. Every animal that travels on land enjoys basking in the sun. George splashes water around and can swim. Liam is either an animal that can walk and enjoys water, or is neither an animal that can walk nor enjoys water.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? George enjoys basking in the sun.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Time out!"
    ]
  },
  {
    "id": "FOLIO_train_118",
    "context": "If something can go underwater, then it enjoys water. All animals that can swim can go underwater. Either an animal can swim or it can walk. Animals that can walk travel on land. Animals that enjoy water splash water around. Every animal that travels on land enjoys basking in the sun. George splashes water around and can swim. Liam is either an animal that can walk and enjoys water, or is neither an animal that can walk nor enjoys water.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Liam enjoys basking in the sun and splashing water around.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Time out!"
    ]
  },
  {
    "id": "FOLIO_train_119",
    "context": "If something can go underwater, then it enjoys water. All animals that can swim can go underwater. Either an animal can swim or it can walk. Animals that can walk travel on land. Animals that enjoy water splash water around. Every animal that travels on land enjoys basking in the sun. George splashes water around and can swim. Liam is either an animal that can walk and enjoys water, or is neither an animal that can walk nor enjoys water.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Liam neither enjoys basking in the sun nor splashing water around.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Time out!"
    ]
  },
  {
    "id": "FOLIO_train_120",
    "context": "Cancer biology is finding genetic alterations that confer selective advantage to cancer cells. Cancer researchers have frequently ranked the importance of substitutions to cancer growth by P value. P values are thresholds for belief, not metrics of effect.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Cancer researchers tend to use the cancer effect size to determine the relative importance of the genetic alterations that confer selective advantage to cancer cells.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCancerBiology(x) ::: x is cancer biology.\nCancerResearcher(x) ::: x is a cancer researcher.\nPValue(x) ::: x is a P value.\nThreshold(x) ::: x is a threshold.\nBelief(x) ::: x is a belief.\nMetric(x) ::: x is a metric.\nEffect(x) ::: x is an effect.\nCancerEffectSize(x) ::: x is a cancer effect size.\nPremises:\nCancerBiology(findingGeneticAlterationsThatConferSelectiveAdvantageToCancerCells) ::: Cancer biology is finding genetic alterations that confer selective advantage to cancer cells.\nCancerResearcher(frequentlyRankTheImportanceOfSubstitutionsToCancerGrowthByPValue) ∧ PValue(pValue) ::: Cancer researchers have frequently ranked the importance of substitutions to cancer growth by P value.\nPValue(pValue) ∧ Threshold(pValue) ∧ Belief(pValue) ∧ ¬Metric(pValue) ::: P values are thresholds for belief, not metrics of effect.\nConclusion:\nCancerResearcher(determineTheRelativeImportanceOfTheGeneticAlterationsThatConferSelectiveAdvantageToCancerCells) ∧ CancerEffectSize(cancerEffectSize) ::: Cancer researchers tend to use the cancer effect size to determine the relative importance of the genetic alterations that confer selective advantage to cancer cells.\n------"
    ]
  },
  {
    "id": "FOLIO_train_121",
    "context": "Cancer biology is finding genetic alterations that confer selective advantage to cancer cells. Cancer researchers have frequently ranked the importance of substitutions to cancer growth by P value. P values are thresholds for belief, not metrics of effect.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? P value represents the selection intensity for somatic variants in cancer cell lineages.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCancerBiology(x) ::: x is cancer biology.\nCancerResearcher(x) ::: x is a cancer researcher.\nPValue(x) ::: x is a P value.\nSubstitution(x) ::: x is a substitution.\nImportance(x, y) ::: x is the importance of y.\nRank(x, y) ::: x ranks y.\nGrowth(x) ::: x is growth.\nBelief(x) ::: x is a belief.\nMetric(x, y) ::: x is a metric of y.\nPremises:\nCancerBiology(findingGeneticAlterationsThatConferSelectiveAdvantageToCancerCells) ::: Cancer biology is finding genetic alterations that confer selective advantage to cancer cells.\nCancerResearcher(frequentlyRankedTheImportanceOfSubstitutionsToCancerGrowthByPValue) ∧ CancerResearcher(have) ::: Cancer researchers have frequently ranked the importance of substitutions to cancer growth by P value.\n¬PValue(thresholdsForBelief) ∧ PValue(notMetricsOfEffect) ::: P values are thresholds for belief, not metrics of effect.\nConclusion:\nPValue(representsTheSelectionIntensityForSomaticVariantsInCancerCellLineages) ::: P value represents the selection intensity for somatic variants in cancer cell lineages.\n------\nProblem:\nThe first step in the development of a new drug is the discovery of a new molecule"
    ]
  },
  {
    "id": "FOLIO_train_122",
    "context": "Cancer biology is finding genetic alterations that confer selective advantage to cancer cells. Cancer researchers have frequently ranked the importance of substitutions to cancer growth by P value. P values are thresholds for belief, not metrics of effect.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Cancer effect size is a metric that is preferred by the majority of cancer researchers.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCancerBiology(x) ::: x is cancer biology.\nCancerResearcher(x) ::: x is a cancer researcher.\nRank(x, y) ::: x ranks y.\nImportance(x, y) ::: x is the importance of y.\nSubstitution(x) ::: x is a substitution.\nCancerGrowth(x) ::: x is cancer growth.\nPValue(x) ::: x is a P value.\nThreshold(x, y) ::: x is a threshold for y.\nMetric(x) ::: x is a metric.\nEffect(x) ::: x is an effect.\nSize(x) ::: x is a size.\nPreference(x, y) ::: x is preferred by y.\nMajority(x) ::: x is the majority.\nCancer(x) ::: x is cancer.\nPreference(x, y) ::: x is preferred by y.\nPreference(x, y) ::: x is preferred by y.\nPreference(x, y) ::: x is preferred by y.\nPreference(x, y) ::: x is preferred by y.\nPreference(x, y) ::: x is preferred by y.\nPreference(x, y) ::: x is preferred by y.\nPreference(x, y) ::: x is preferred by y.\nPreference(x, y) ::: x is preferred by y.\nPreference(x, y) ::: x is preferred by y.\nPreference(x, y) ::: x"
    ]
  },
  {
    "id": "FOLIO_train_123",
    "context": "Cancer biology is finding genetic alterations that confer selective advantage to cancer cells. Cancer researchers have frequently ranked the importance of substitutions to cancer growth by P value. P values are thresholds for belief, not metrics of effect.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? P value doesn't represent metrics of effect.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCancerBiology(x) ::: x is cancer biology.\nConfer(x, y) ::: x confers y.\nSelectiveAdvantage(x) ::: x is selective advantage.\nCancerCell(x) ::: x is cancer cell.\nGeneticAlteration(x) ::: x is genetic alteration.\nCancerResearcher(x) ::: x is cancer researcher.\nRank(x, y) ::: x ranks y.\nImportance(x) ::: x is importance.\nSubstitution(x) ::: x is substitution.\nCancerGrowth(x) ::: x is cancer growth.\nPValue(x) ::: x is P value.\nThreshold(x) ::: x is threshold.\nBelief(x) ::: x is belief.\nMetric(x) ::: x is metric.\nEffect(x) ::: x is effect.\nPremises:\nCancerBiology(finding) ∧ Confer(finding, selectiveAdvantage) ∧ CancerCell(cancerCells) ∧ GeneticAlteration(geneticAlterations) ::: Cancer biology is finding genetic alterations that confer selective advantage to cancer cells.\nCancerResearcher(cancerResearchers) ∧ Rank(cancerResearchers, importance) ∧ Substitution(substitutions) ∧ CancerGrowth(cancerGrowth) ::: Cancer researchers have frequently ranked the importance of substitutions to cancer growth by P value.\nPValue(pValue"
    ]
  },
  {
    "id": "FOLIO_train_124",
    "context": "All dispensable things are environment-friendly. All woodware is dispensable. All paper is woodware. No good things are bad. All environment-friendly things are good. A worksheet is either paper or is environment-friendly.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A worksheet is dispensable.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDispensable(x) ::: x is dispensable.\nWoodware(x) ::: x is woodware.\nPaper(x) ::: x is paper.\nGood(x) ::: x is good.\nBad(x) ::: x is bad.\nEnvironmentFriendly(x) ::: x is environment-friendly.\nWorksheet(x) ::: x is a worksheet.\nPremises:\n∀x (Dispensable(x) → EnvironmentFriendly(x)) ::: All dispensable things are environment-friendly.\n∀x (Woodware(x) → Dispensable(x)) ::: All woodware is dispensable.\n∀x (Paper(x) → Woodware(x)) ::: All paper is woodware.\n∀x (Good(x) → ¬Bad(x)) ::: No good things are bad.\n∀x (EnvironmentFriendly(x) → Good(x)) ::: All environment-friendly things are good.\n(Worksheet(x) ∧ Paper(x)) ⊕ ¬(Worksheet(x) ∨ EnvironmentFriendly(x)) ::: A worksheet is either paper or is environment-friendly.\nConclusion:\nDispensable(x) ::: A worksheet is dispensable.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caff"
    ]
  },
  {
    "id": "FOLIO_train_125",
    "context": "All dispensable things are environment-friendly. All woodware is dispensable. All paper is woodware. No good things are bad. All environment-friendly things are good. A worksheet is either paper or is environment-friendly.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A worksheet is not dispensable.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDispensable(x) ::: x is dispensable.\nWoodware(x) ::: x is woodware.\nPaper(x) ::: x is paper.\nGood(x) ::: x is good.\nBad(x) ::: x is bad.\nEnvironmentFriendly(x) ::: x is environment-friendly.\nWorksheet(x) ::: x is a worksheet.\nPremises:\n∀x (Dispensable(x) → EnvironmentFriendly(x)) ::: All dispensable things are environment-friendly.\n∀x (Woodware(x) → Dispensable(x)) ::: All woodware is dispensable.\n∀x (Paper(x) → Woodware(x)) ::: All paper is woodware.\n∀x (Good(x) → ¬Bad(x)) ::: No good things are bad.\n∀x (EnvironmentFriendly(x) → Good(x)) ::: All environment-friendly things are good.\n(Worksheet(x) ∧ Paper(x)) ⊕ ¬(Worksheet(x) ∨ EnvironmentFriendly(x)) ::: A worksheet is either paper or is environment-friendly.\nConclusion:\n¬Dispensable(x) ::: A worksheet is not dispensable.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that"
    ]
  },
  {
    "id": "FOLIO_train_126",
    "context": "All dispensable things are environment-friendly. All woodware is dispensable. All paper is woodware. No good things are bad. All environment-friendly things are good. A worksheet is either paper or is environment-friendly.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A worksheet is bad.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDispensable(x) ::: x is dispensable.\nWoodware(x) ::: x is woodware.\nPaper(x) ::: x is paper.\nGood(x) ::: x is good.\nBad(x) ::: x is bad.\nEnvironmentFriendly(x) ::: x is environment-friendly.\nWorksheet(x) ::: x is a worksheet.\nPremises:\n∀x (Dispensable(x) → EnvironmentFriendly(x)) ::: All dispensable things are environment-friendly.\n∀x (Woodware(x) → Dispensable(x)) ::: All woodware is dispensable.\n∀x (Paper(x) → Woodware(x)) ::: All paper is woodware.\n∀x (Good(x) → ¬Bad(x)) ::: No good things are bad.\n∀x (EnvironmentFriendly(x) → Good(x)) ::: All environment-friendly things are good.\n(Paper(worksheet) ∨ EnvironmentFriendly(worksheet)) ::: A worksheet is either paper or is environment-friendly.\nConclusion:\n¬Bad(worksheet) ::: A worksheet is bad.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caff"
    ]
  },
  {
    "id": "FOLIO_train_127",
    "context": "All dispensable things are environment-friendly. All woodware is dispensable. All paper is woodware. No good things are bad. All environment-friendly things are good. A worksheet is either paper or is environment-friendly.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A worksheet is not bad.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDispensable(x) ::: x is dispensable.\nWoodware(x) ::: x is woodware.\nPaper(x) ::: x is paper.\nGood(x) ::: x is good.\nBad(x) ::: x is bad.\nEnvironmentFriendly(x) ::: x is environment-friendly.\nWorksheet(x) ::: x is a worksheet.\nPremises:\n∀x (Dispensable(x) → EnvironmentFriendly(x)) ::: All dispensable things are environment-friendly.\n∀x (Woodware(x) → Dispensable(x)) ::: All woodware is dispensable.\n∀x (Paper(x) → Woodware(x)) ::: All paper is woodware.\n∀x (Good(x) → ¬Bad(x)) ::: No good things are bad.\n∀x (EnvironmentFriendly(x) → Good(x)) ::: All environment-friendly things are good.\n(Worksheet(x) ∧ Paper(x)) ⊕ ¬(Worksheet(x) ∨ EnvironmentFriendly(x)) ::: A worksheet is either paper or is environment-friendly.\nConclusion:\n¬Bad(x) ::: A worksheet is not bad.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is"
    ]
  },
  {
    "id": "FOLIO_train_128",
    "context": "No reptile has fur. All snakes are reptiles.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Some snake has fur.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nReptile(x) ::: x is a reptile.\nSnake(x) ::: x is a snake.\nFur(x) ::: x has fur.\nPremises:\n¬∃x (Reptile(x) ∧ Fur(x)) ::: No reptile has fur.\n∀x (Snake(x) → Reptile(x)) ::: All snakes are reptiles.\nConclusion:\n¬∃x (Snake(x) ∧ Fur(x)) ::: Some snake has fur.\n------\nProblem:\nNo reptile has fur. All snakes are reptiles.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Some reptile has fur.\n###\nPredicates:\nReptile(x) ::: x is a reptile.\nSnake(x) ::: x is a snake.\nFur(x) ::: x has fur.\nPremises:\n¬∃x (Reptile(x) ∧ Fur(x)) ::: No reptile has fur.\n∀x (Snake(x) → Reptile(x)) ::: All snakes are reptiles.\nConclusion:\n¬∃x (Reptile(x) ∧ Fur(x)) ::: Some reptile has fur.\n------\nProblem:\nNo reptile has fur. All snakes are reptiles.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Some snake does"
    ]
  },
  {
    "id": "FOLIO_train_129",
    "context": "All buildings in New Haven are low. All buildings managed by the Yale Housing are located in New Haven. All buildings in Manhattans are high. All buildings owned by Bloomberg are located in Manhattans. All buildings with the Bloomberg logo are owned by Bloomberg. Tower A is managed by the Yale Housing. Tower B is with the Bloomberg logo.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tower A is low.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLow(x) ::: x is low.\nHigh(x) ::: x is high.\nLocated(x, y) ::: x is located in y.\nManaged(x, y) ::: x is managed by y.\nOwned(x, y) ::: x is owned by y.\nLogo(x, y) ::: x has the logo of y.\nPremises:\n∀x (Building(x) → Located(x, newHaven)) ::: All buildings in New Haven are low.\n∀x (Building(x) → Located(x, manhattans)) ::: All buildings in Manhattans are high.\n∀x (Building(x) → Located(x, newHaven)) ::: All buildings managed by the Yale Housing are located in New Haven.\n∀x (Building(x) → Located(x, manhattans)) ::: All buildings owned by Bloomberg are located in Manhattans.\n∀x (Building(x) → Owned(x, bloomberg)) ::: All buildings with the Bloomberg logo are owned by Bloomberg.\nManaged(towerA, yaleHousing) ::: Tower A is managed by the Yale Housing.\nLogo(towerB, bloomberg) ::: Tower B is with the Bloomberg logo.\nConclusion:\nLow(towerA) ::: Tower A is low.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or"
    ]
  },
  {
    "id": "FOLIO_train_130",
    "context": "All buildings in New Haven are low. All buildings managed by the Yale Housing are located in New Haven. All buildings in Manhattans are high. All buildings owned by Bloomberg are located in Manhattans. All buildings with the Bloomberg logo are owned by Bloomberg. Tower A is managed by the Yale Housing. Tower B is with the Bloomberg logo.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tower B is not located in Manhattans.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLow(x) ::: x is low.\nHigh(x) ::: x is high.\nLocated(x, y) ::: x is located in y.\nManaged(x, y) ::: x is managed by y.\nOwned(x, y) ::: x is owned by y.\nLogo(x, y) ::: x has the logo of y.\nPremises:\n∀x (Building(x) → Located(x, newHaven)) ::: All buildings in New Haven are low.\n∀x (Building(x) → Located(x, manhattans)) ::: All buildings in Manhattans are high.\n∀x (Building(x) → Located(x, newHaven)) ::: All buildings managed by the Yale Housing are located in New Haven.\n∀x (Building(x) → Located(x, manhattans)) ::: All buildings owned by Bloomberg are located in Manhattans.\n∀x (Building(x) → Owned(x, bloomberg)) ::: All buildings with the Bloomberg logo are owned by Bloomberg.\nManaged(towerA, yaleHousing) ::: Tower A is managed by the Yale Housing.\nLogo(towerB, bloomberg) ::: Tower B is with the Bloomberg logo.\nConclusion:\n¬Located(towerB, manhattans) ::: Tower B is not located in Manhattans.\n------"
    ]
  },
  {
    "id": "FOLIO_train_131",
    "context": "All buildings in New Haven are low. All buildings managed by the Yale Housing are located in New Haven. All buildings in Manhattans are high. All buildings owned by Bloomberg are located in Manhattans. All buildings with the Bloomberg logo are owned by Bloomberg. Tower A is managed by the Yale Housing. Tower B is with the Bloomberg logo.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tower B is located in New Haven.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLow(x) ::: x is low.\nHigh(x) ::: x is high.\nLocated(x, y) ::: x is located in y.\nManaged(x, y) ::: x is managed by y.\nOwned(x, y) ::: x is owned by y.\nLogo(x, y) ::: x has the logo of y.\nPremises:\n∀x (Located(x, newHaven) → Low(x)) ::: All buildings in New Haven are low.\n∀x (Located(x, manhattans) → High(x)) ::: All buildings in Manhattans are high.\n∀x (Located(x, newHaven) ∧ Managed(x, yaleHousing)) ::: All buildings managed by the Yale Housing are located in New Haven.\n∀x (Located(x, manhattans) ∧ Owned(x, bloomberg)) ::: All buildings owned by Bloomberg are located in Manhattans.\n∀x (Logo(x, bloomberg) → Owned(x, bloomberg)) ::: All buildings with the Bloomberg logo are owned by Bloomberg.\nManaged(towerA, yaleHousing) ::: Tower A is managed by the Yale Housing.\nLogo(towerB, bloomberg) ::: Tower B is with the Bloomberg logo.\nConclusion:\n¬Located(towerB, newHaven)"
    ]
  },
  {
    "id": "FOLIO_train_132",
    "context": "No cold-blooded animals are birds. All reptiles are cold-blooded. Either an animal is a bird or it eats other animals. If an animal eats other animals, then it is a carnivore. Ron is neither a cold-blooded animal nor a carnivore. Henry is neither a carnivore nor a lizard.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Ron is a lizard.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nColdBlooded(x) ::: x is a cold-blooded animal.\nBird(x) ::: x is a bird.\nReptile(x) ::: x is a reptile.\nEat(x, y) ::: x eats y.\nCarnivore(x) ::: x is a carnivore.\nLizard(x) ::: x is a lizard.\nPremises:\n¬(ColdBlooded(x) ∧ Bird(x)) ::: No cold-blooded animals are birds.\n∀x (Reptile(x) → ColdBlooded(x)) ::: All reptiles are cold-blooded.\n(Bird(x) ∨ Eat(x, y)) ::: Either an animal is a bird or it eats other animals.\nEat(x, y) → Carnivore(x) ::: If an animal eats other animals, then it is a carnivore.\n¬(ColdBlooded(ron) ∨ Carnivore(ron)) ::: Ron is neither a cold-blooded animal nor a carnivore.\n¬(Carnivore(henry) ∨ Lizard(henry)) ::: Henry is neither a carnivore nor a lizard.\nConclusion:\n¬(ColdBlooded(ron) ∨ Lizard(ron)) ::: Ron is a lizard.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People"
    ]
  },
  {
    "id": "FOLIO_train_133",
    "context": "No cold-blooded animals are birds. All reptiles are cold-blooded. Either an animal is a bird or it eats other animals. If an animal eats other animals, then it is a carnivore. Ron is neither a cold-blooded animal nor a carnivore. Henry is neither a carnivore nor a lizard.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Either Henry is a reptile or Ron eats other animals.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nColdBlooded(x) ::: x is a cold-blooded animal.\nBird(x) ::: x is a bird.\nReptile(x) ::: x is a reptile.\nEat(x, y) ::: x eats y.\nCarnivore(x) ::: x is a carnivore.\nLizard(x) ::: x is a lizard.\nPremises:\n¬(ColdBlooded(x) ∧ Bird(x)) ::: No cold-blooded animals are birds.\n∀x (Reptile(x) → ColdBlooded(x)) ::: All reptiles are cold-blooded.\n(Bird(x) ∨ Eat(x, y)) ::: Either an animal is a bird or it eats other animals.\nEat(x, y) → Carnivore(x) ::: If an animal eats other animals, then it is a carnivore.\n¬(ColdBlooded(ron) ∨ Carnivore(ron)) ::: Ron is neither a cold-blooded animal nor a carnivore.\n¬(Carnivore(henry) ∨ Lizard(henry)) ::: Henry is neither a carnivore nor a lizard.\nConclusion:\n(Reptile(henry) ∨ Eat(ron, y)) ::: Either Henry is a reptile or Ron eats other animals.\n------\nProblem:\nAll people who regularly drink coffee are"
    ]
  },
  {
    "id": "FOLIO_train_134",
    "context": "No cold-blooded animals are birds. All reptiles are cold-blooded. Either an animal is a bird or it eats other animals. If an animal eats other animals, then it is a carnivore. Ron is neither a cold-blooded animal nor a carnivore. Henry is neither a carnivore nor a lizard.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? It is not true that Ron is a reptile or that Henry is cold-blooded.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nColdBlooded(x) ::: x is a cold-blooded animal.\nBird(x) ::: x is a bird.\nReptile(x) ::: x is a reptile.\nEat(x, y) ::: x eats y.\nCarnivore(x) ::: x is a carnivore.\nLizard(x) ::: x is a lizard.\nPremises:\n¬(ColdBlooded(x) ∧ Bird(x)) ::: No cold-blooded animals are birds.\n∀x (Reptile(x) → ColdBlooded(x)) ::: All reptiles are cold-blooded.\n(Bird(x) ∨ Eat(x, y)) ::: Either an animal is a bird or it eats other animals.\nEat(x, y) → Carnivore(x) ::: If an animal eats other animals, then it is a carnivore.\n¬(ColdBlooded(ron) ∨ Carnivore(ron)) ::: Ron is neither a cold-blooded animal nor a carnivore.\n¬(Carnivore(henry) ∨ Lizard(henry)) ::: Henry is neither a carnivore nor a lizard.\nConclusion:\n¬(Reptile(ron) ∨ ColdBlooded(henry)) ::: It is not true that Ron is a reptile or that Henry is cold-blooded.\n------\nProblem:"
    ]
  },
  {
    "id": "FOLIO_train_135",
    "context": "Ambiortus is a prehistoric bird genus. Ambiorus Dementjevi is the only known species of Ambiortus. The Mongol region was where Ambiorus Dementjevi lived. Yevgeny Kurochkin was the discoverer of Ambiortus.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Yevgeny Kurochkin discovered a new bird genus.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBirdGenus(x) ::: x is a bird genus.\nSpecies(x) ::: x is a species.\nKnown(x) ::: x is known.\nDiscoverer(x, y) ::: x is the discoverer of y.\nLive(x, y) ::: x lives in y.\nRegion(x) ::: x is a region.\nPremises:\nAmbiortus(ambiorus) ∧ Species(ambiorusDementjevi) ∧ Known(ambiorusDementjevi) ::: Ambiorus is a prehistoric bird genus. Ambiorus Dementjevi is the only known species of Ambiortus.\nLive(ambiorusDementjevi, mongolRegion) ::: The Mongol region was where Ambiorus Dementjevi lived.\nDiscoverer(yevgenyKurochkin, ambiorus) ::: Yevgeny Kurochkin was the discoverer of Ambiortus.\nConclusion:\nDiscoverer(yevgenyKurochkin, birdGenus) ::: Yevgeny Kurochkin discovered a new bird genus.\n------\nProblem:\nThe 1990 FIFA World Cup was the 14th FIFA World Cup. The 1990 FIFA World Cup was held in Italy. The 1990 FIFA World Cup was won by West Germany.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The 1990"
    ]
  },
  {
    "id": "FOLIO_train_136",
    "context": "Ambiortus is a prehistoric bird genus. Ambiorus Dementjevi is the only known species of Ambiortus. The Mongol region was where Ambiorus Dementjevi lived. Yevgeny Kurochkin was the discoverer of Ambiortus.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There is a species of Ambiortus that doesn't live in the Mongol region.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAmbiortus(x) ::: x is a prehistoric bird genus.\nAmbiorusDementjevi(x) ::: x is the only known species of Ambiortus.\nMongol(x) ::: x is the Mongol region.\nDiscoverer(x, y) ::: x is the discoverer of y.\nPremises:\nAmbiortus(ambiorus) ∧ AmbiorusDementjevi(ambiorus) ∧ Mongol(mongol) ∧ Discoverer(yevgeny, ambiorus) ::: Ambiortus is a prehistoric bird genus. Ambiorus Dementjevi is the only known species of Ambiortus. The Mongol region was where Ambiorus Dementjevi lived. Yevgeny Kurochkin was the discoverer of Ambiortus.\nConclusion:\n¬∃x (Ambiortus(x) ∧ ¬Mongol(x)) ::: There is a species of Ambiortus that doesn't live in the Mongol region.\n------\nProblem:\nThe 1990 FIFA World Cup was the 14th FIFA World Cup. The 1990 FIFA World Cup was held in Italy. The 1990 FIFA World Cup was won by West Germany.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The 1990 FIFA World Cup was held in West Germany.\nBased on the above information, is the following"
    ]
  },
  {
    "id": "FOLIO_train_137",
    "context": "Ambiortus is a prehistoric bird genus. Ambiorus Dementjevi is the only known species of Ambiortus. The Mongol region was where Ambiorus Dementjevi lived. Yevgeny Kurochkin was the discoverer of Ambiortus.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Yevgeny Kurochkin lived in the Mongol region.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAmbiortus(x) ::: x is a prehistoric bird genus.\nAmbiorusDementjevi(x) ::: x is the only known species of Ambiortus.\nMongol(x) ::: x is the Mongol region.\nDiscoverer(x, y) ::: x is the discoverer of y.\nPremises:\nAmbiortus(ambiorus) ∧ AmbiorusDementjevi(ambiorus) ::: Ambiortus is a prehistoric bird genus. Ambiorus Dementjevi is the only known species of Ambiortus.\nMongol(mongol) ::: The Mongol region was where Ambiorus Dementjevi lived.\nDiscoverer(yevgeny, ambiorus) ::: Yevgeny Kurochkin was the discoverer of Ambiortus.\nConclusion:\nMongol(yevgeny) ::: Yevgeny Kurochkin lived in the Mongol region.\n------\nProblem:\nThe 1990 FIFA World Cup was the 14th FIFA World Cup. The 1990 FIFA World Cup was held in Italy. The 1990 FIFA World Cup was won by West Germany.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The 1990 FIFA World Cup was held in West Germany.\nBased on the above information, is the following statement true, false, or uncertain? The 1990"
    ]
  },
  {
    "id": "FOLIO_train_138",
    "context": "Ambiortus is a prehistoric bird genus. Ambiorus Dementjevi is the only known species of Ambiortus. The Mongol region was where Ambiorus Dementjevi lived. Yevgeny Kurochkin was the discoverer of Ambiortus.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? All species of Ambiortus live in the Mongol region.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAmbiortus(x) ::: x is a prehistoric bird genus.\nAmbiorusDementjevi(x) ::: x is the only known species of Ambiortus.\nMongol(x) ::: x is the Mongol region.\nDiscoverer(x, y) ::: x is the discoverer of y.\nPremises:\nAmbiortus(ambiorus) ∧ AmbiorusDementjevi(ambiorus) ::: Ambiortus is a prehistoric bird genus. Ambiorus Dementjevi is the only known species of Ambiortus.\nMongol(mongol) ::: The Mongol region was where Ambiorus Dementjevi lived.\nDiscoverer(yevgeny, ambiorus) ::: Yevgeny Kurochkin was the discoverer of Ambiortus.\nConclusion:\n∀x (Ambiortus(x) → Mongol(x)) ::: All species of Ambiortus live in the Mongol region.\n------\nProblem:\nThe 1990 FIFA World Cup was the 14th FIFA World Cup. The 1990 FIFA World Cup was held in Italy. The 1990 FIFA World Cup was won by West Germany.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The 1990 FIFA World Cup was held in West Germany.\nBased on the above information, is the following statement true, false, or uncertain?"
    ]
  },
  {
    "id": "FOLIO_train_139",
    "context": "Everyone that uses a football can throw a football. If someone plays football, then they use a football. Either someone is a football player or a basketball player. Every basketball player is tall. Everyone that can throw a football can throw a football with a spiral. If someone is tall, then they are in shape. If Jack is neither tall nor a basketball player,  then Jack is neither tall nor can throw a football.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jack plays football.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nUse(x, y) ::: x uses y.\nThrow(x, y) ::: x throws y.\nPlay(x, y) ::: x plays y.\nTall(x) ::: x is tall.\nBasketballPlayer(x) ::: x is a basketball player.\nFootballPlayer(x) ::: x is a football player.\nSpiral(x) ::: x is a spiral.\nInShape(x) ::: x is in shape.\nPremises:\n∀x (Use(x, football) → Throw(x, football)) ::: Everyone that uses a football can throw a football.\n∀x (Play(x, football) → Use(x, football)) ::: If someone plays football, then they use a football.\n(BasketballPlayer(x) ∨ FootballPlayer(x)) ::: Either someone is a football player or a basketball player.\n∀x (BasketballPlayer(x) → Tall(x)) ::: Every basketball player is tall.\n∀x (Throw(x, football) → Spiral(x)) ::: Everyone that can throw a football can throw a football with a spiral.\n∀x (Tall(x) → InShape(x)) ::: If someone is tall, then they are in shape.\n¬(Tall(jack) ∨ BasketballPlayer(jack)) → ¬(Tall(jack) ∨ Throw(jack, football)) ::: If Jack is neither tall nor a basketball player, then Jack is neither tall nor can throw a football.\nConclusion:"
    ]
  },
  {
    "id": "FOLIO_train_140",
    "context": "Everyone that uses a football can throw a football. If someone plays football, then they use a football. Either someone is a football player or a basketball player. Every basketball player is tall. Everyone that can throw a football can throw a football with a spiral. If someone is tall, then they are in shape. If Jack is neither tall nor a basketball player,  then Jack is neither tall nor can throw a football.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jack is in shape.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nUse(x, y) ::: x uses y.\nThrow(x, y) ::: x throws y.\nPlay(x, y) ::: x plays y.\nTall(x) ::: x is tall.\nBasketballPlayer(x) ::: x is a basketball player.\nFootballPlayer(x) ::: x is a football player.\nSpiral(x) ::: x is a spiral.\nInShape(x) ::: x is in shape.\nPremises:\n∀x (Use(x, football) → Throw(x, football)) ::: Everyone that uses a football can throw a football.\n∀x (Play(x, football) → Use(x, football)) ::: If someone plays football, then they use a football.\n(FootballPlayer(x) ⊕ BasketballPlayer(x)) ::: Either someone is a football player or a basketball player.\n∀x (BasketballPlayer(x) → Tall(x)) ::: Every basketball player is tall.\n∀x (Throw(x, football) → Spiral(x)) ::: Everyone that can throw a football can throw a football with a spiral.\n∀x (Tall(x) → InShape(x)) ::: If someone is tall, then they are in shape.\n¬(Tall(jack) ∨ BasketballPlayer(jack)) → ¬(Tall(jack) ∨ Throw(jack, football)) ::: If Jack is neither tall nor a basketball player, then Jack is neither tall nor can throw a football.\nConclusion:\nInShape(jack) ::: Jack is in shape.\n------"
    ]
  },
  {
    "id": "FOLIO_train_141",
    "context": "Everyone that uses a football can throw a football. If someone plays football, then they use a football. Either someone is a football player or a basketball player. Every basketball player is tall. Everyone that can throw a football can throw a football with a spiral. If someone is tall, then they are in shape. If Jack is neither tall nor a basketball player,  then Jack is neither tall nor can throw a football.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jack is not in shape.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nUse(x, y) ::: x uses y.\nThrow(x, y) ::: x throws y.\nPlay(x, y) ::: x plays y.\nTall(x) ::: x is tall.\nBasketballPlayer(x) ::: x is a basketball player.\nFootballPlayer(x) ::: x is a football player.\nSpiral(x) ::: x is a spiral.\nInShape(x) ::: x is in shape.\nPremises:\n∀x (Use(x, football) → Throw(x, football)) ::: Everyone that uses a football can throw a football.\n∀x (Play(x, football) → Use(x, football)) ::: If someone plays football, then they use a football.\n(FootballPlayer(x) ⊕ BasketballPlayer(x)) ::: Either someone is a football player or a basketball player.\n∀x (BasketballPlayer(x) → Tall(x)) ::: Every basketball player is tall.\n∀x (Throw(x, football) → Spiral(x)) ::: Everyone that can throw a football can throw a football with a spiral.\n∀x (Tall(x) → InShape(x)) ::: If someone is tall, then they are in shape.\n¬(Tall(jack) ∨ BasketballPlayer(jack)) → ¬(Tall(jack) ∨ Throw(jack, football)) ::: If Jack is neither tall nor a basketball player, then Jack is neither tall nor can throw a football.\nConclusion:\n¬InShape(jack) ::: Jack is not in shape."
    ]
  },
  {
    "id": "FOLIO_train_142",
    "context": "Fort Ticonderoga is the current name for Fort Carillon. Pierre de Rigaud de Vaudreuil built Fort Carillon. Fort Carillon was located in New France. New France is not in Europe.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Pierre de Rigaud de Vaudreuil built a fort in New France.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFort(x) ::: x is a fort.\nName(x, y) ::: x is the name of y.\nBuild(x, y) ::: x built y.\nLocate(x, y) ::: x is located in y.\nPremises:\nName(ticonderoga, carillon) ::: Fort Ticonderoga is the current name for Fort Carillon.\nBuild(vaudreuil, carillon) ::: Pierre de Rigaud de Vaudreuil built Fort Carillon.\nLocate(carillon, newFrance) ::: Fort Carillon was located in New France.\n¬Locate(newFrance, europe) ::: New France is not in Europe.\nConclusion:\nBuild(vaudreuil, carillon) ∧ Locate(carillon, newFrance) ::: Pierre de Rigaud de Vaudreuil built a fort in New France.\n------\nProblem:\nThe first person to reach the North Pole was Robert Peary. Robert Peary was an American. The first person to reach the South Pole was Roald Amundsen. Roald Amundsen was a Norwegian.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The first person to reach the North Pole was an American.\nBased on the above information, is the following statement true, false, or uncertain? The first person to reach the South Pole was a Norwegian.\n###\nPredicates:\nNorthPole(x) ::: x is the North Pole.\nSouthPole(x) ::: x is the South Pole"
    ]
  },
  {
    "id": "FOLIO_train_143",
    "context": "Fort Ticonderoga is the current name for Fort Carillon. Pierre de Rigaud de Vaudreuil built Fort Carillon. Fort Carillon was located in New France. New France is not in Europe.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Pierre de Rigaud de Vaudreuil built a fort in New England.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFort(x) ::: x is a fort.\nName(x, y) ::: x is the name of y.\nBuild(x, y) ::: x built y.\nLocate(x, y) ::: x is located in y.\nPremises:\nName(ticonderoga, carillon) ::: Fort Ticonderoga is the current name for Fort Carillon.\nBuild(vaudreuil, carillon) ::: Pierre de Rigaud de Vaudreuil built Fort Carillon.\nLocate(carillon, newFrance) ::: Fort Carillon was located in New France.\n¬Locate(newFrance, europe) ::: New France is not in Europe.\nConclusion:\nBuild(vaudreuil, fort) ∧ Locate(fort, newEngland) ::: Pierre de Rigaud de Vaudreuil built a fort in New England.\n------\nProblem:\nThe first person to be called a \"mathematician\" was the Greek philosopher Pythagoras. Pythagoras was a mathematician. Pythagoras was a philosopher.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The first person to be called a \"philosopher\" was the Greek philosopher Pythagoras.\nBased on the above information, is the following statement true, false, or uncertain? The first person to be called a \"philosopher\" was a mathematician.\n###\nPredicates:\nMathematician(x) ::: x is a mathematician."
    ]
  },
  {
    "id": "FOLIO_train_144",
    "context": "Fort Ticonderoga is the current name for Fort Carillon. Pierre de Rigaud de Vaudreuil built Fort Carillon. Fort Carillon was located in New France. New France is not in Europe.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Fort Carillon was located in Europe.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFort(x) ::: x is a fort.\nName(x, y) ::: x is the name of y.\nBuild(x, y) ::: x built y.\nLocate(x, y) ::: x is located in y.\nPremises:\nName(ticonderoga, carillon) ::: Fort Ticonderoga is the current name for Fort Carillon.\nBuild(vaudreuil, carillon) ::: Pierre de Rigaud de Vaudreuil built Fort Carillon.\nLocate(carillon, newFrance) ::: Fort Carillon was located in New France.\n¬Locate(newFrance, europe) ::: New France is not in Europe.\nConclusion:\n¬Locate(carillon, europe) ::: Fort Carillon was located in Europe.\n------\nProblem:\nThe first person to reach the North Pole was Robert Peary. Robert Peary was an American. The first person to reach the South Pole was Roald Amundsen. Roald Amundsen was a Norwegian.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The first person to reach the South Pole was an American.\nBased on the above information, is the following statement true, false, or uncertain? The first person to reach the North Pole was a Norwegian.\n###\nPredicates:\nAmerican(x) ::: x is an American.\nNorwegian(x) ::: x is a Norwegian.\nPremises:\nFirst(peary, northPole) ::: The first person to reach the North Pole was"
    ]
  },
  {
    "id": "FOLIO_train_145",
    "context": "No soccer players are professional basketball players. All NBA players are professional basketball players. All defenders are soccer players. All centerback players are defenders. If Stephen Curry is an NBA player or a soccer player, then he is a professional basketball player.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Stephen Curry is an NBA player.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSoccerPlayer(x) ::: x is a soccer player.\nBasketballPlayer(x) ::: x is a basketball player.\nProfessionalBasketballPlayer(x) ::: x is a professional basketball player.\nNBAPlayer(x) ::: x is an NBA player.\nDefender(x) ::: x is a defender.\nCenterbackPlayer(x) ::: x is a centerback player.\nPremises:\n¬∃x (SoccerPlayer(x) ∧ BasketballPlayer(x)) ::: No soccer players are professional basketball players.\n∀x (NBAPlayer(x) → BasketballPlayer(x)) ::: All NBA players are professional basketball players.\n∀x (Defender(x) → SoccerPlayer(x)) ::: All defenders are soccer players.\n∀x (CenterbackPlayer(x) → Defender(x)) ::: All centerback players are defenders.\n(NBAPlayer(stephenCurry) ∨ SoccerPlayer(stephenCurry)) → ProfessionalBasketballPlayer(stephenCurry) ::: If Stephen Curry is an NBA player or a soccer player, then he is a professional basketball player.\nConclusion:\nNBAPlayer(stephenCurry) ::: Stephen Curry is an NBA player.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffe"
    ]
  },
  {
    "id": "FOLIO_train_146",
    "context": "No soccer players are professional basketball players. All NBA players are professional basketball players. All defenders are soccer players. All centerback players are defenders. If Stephen Curry is an NBA player or a soccer player, then he is a professional basketball player.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Stephen Curry is a centerback player.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSoccerPlayer(x) ::: x is a soccer player.\nBasketballPlayer(x) ::: x is a basketball player.\nProfessionalBasketballPlayer(x) ::: x is a professional basketball player.\nNBAPlayer(x) ::: x is an NBA player.\nDefender(x) ::: x is a defender.\nCenterbackPlayer(x) ::: x is a centerback player.\nPremises:\n¬∃x (SoccerPlayer(x) ∧ BasketballPlayer(x)) ::: No soccer players are professional basketball players.\n∀x (NBAPlayer(x) → BasketballPlayer(x)) ::: All NBA players are professional basketball players.\n∀x (Defender(x) → SoccerPlayer(x)) ::: All defenders are soccer players.\n∀x (CenterbackPlayer(x) → Defender(x)) ::: All centerback players are defenders.\n(NBAPlayer(stephenCurry) ∨ SoccerPlayer(stephenCurry)) → ProfessionalBasketballPlayer(stephenCurry) ::: If Stephen Curry is an NBA player or a soccer player, then he is a professional basketball player.\nConclusion:\n¬CenterbackPlayer(stephenCurry) ::: Stephen Curry is a centerback player.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that c"
    ]
  },
  {
    "id": "FOLIO_train_147",
    "context": "No soccer players are professional basketball players. All NBA players are professional basketball players. All defenders are soccer players. All centerback players are defenders. If Stephen Curry is an NBA player or a soccer player, then he is a professional basketball player.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Stephen Curry is not a centerback player.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSoccerPlayer(x) ::: x is a soccer player.\nBasketballPlayer(x) ::: x is a basketball player.\nProfessionalBasketballPlayer(x) ::: x is a professional basketball player.\nNBAPlayer(x) ::: x is an NBA player.\nDefender(x) ::: x is a defender.\nCenterbackPlayer(x) ::: x is a centerback player.\nPremises:\n¬∃x (SoccerPlayer(x) ∧ BasketballPlayer(x)) ::: No soccer players are professional basketball players.\n∀x (NBAPlayer(x) → BasketballPlayer(x)) ::: All NBA players are professional basketball players.\n∀x (Defender(x) → SoccerPlayer(x)) ::: All defenders are soccer players.\n∀x (CenterbackPlayer(x) → Defender(x)) ::: All centerback players are defenders.\n(NBAPlayer(stephenCurry) ∨ SoccerPlayer(stephenCurry)) → ProfessionalBasketballPlayer(stephenCurry) ::: If Stephen Curry is an NBA player or a soccer player, then he is a professional basketball player.\nConclusion:\n¬CenterbackPlayer(stephenCurry) ::: Stephen Curry is not a centerback player.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that"
    ]
  },
  {
    "id": "FOLIO_train_148",
    "context": "No songs are visual. All folk songs are songs. All videos are visual. All movies are videos. All sci-fi movies are movies. Inception is a sci-fi movie. Mac is neither a folk song nor a sci-fi movie.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Inception is a folk song.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSong(x) ::: x is a song.\nFolkSong(x) ::: x is a folk song.\nVisual(x) ::: x is visual.\nVideo(x) ::: x is a video.\nMovie(x) ::: x is a movie.\nSciFiMovie(x) ::: x is a sci-fi movie.\nPremises:\n¬∃x (Song(x) ∧ Visual(x)) ::: No songs are visual.\n∀x (FolkSong(x) → Song(x)) ::: All folk songs are songs.\n∀x (Video(x) → Visual(x)) ::: All videos are visual.\n∀x (Movie(x) → Video(x)) ::: All movies are videos.\n∀x (SciFiMovie(x) → Movie(x)) ::: All sci-fi movies are movies.\nMovie(inception) ∧ SciFiMovie(inception) ::: Inception is a sci-fi movie.\n¬(FolkSong(mac) ∨ SciFiMovie(mac)) ::: Mac is neither a folk song nor a sci-fi movie.\nConclusion:\n¬Song(inception) ::: Inception is a folk song.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a"
    ]
  },
  {
    "id": "FOLIO_train_149",
    "context": "No songs are visual. All folk songs are songs. All videos are visual. All movies are videos. All sci-fi movies are movies. Inception is a sci-fi movie. Mac is neither a folk song nor a sci-fi movie.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Inception is not a folk song.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSong(x) ::: x is a song.\nFolkSong(x) ::: x is a folk song.\nVisual(x) ::: x is visual.\nVideo(x) ::: x is a video.\nMovie(x) ::: x is a movie.\nSciFiMovie(x) ::: x is a sci-fi movie.\nPremises:\n¬∃x (Song(x) ∧ Visual(x)) ::: No songs are visual.\n∀x (FolkSong(x) → Song(x)) ::: All folk songs are songs.\n∀x (Video(x) → Visual(x)) ::: All videos are visual.\n∀x (Movie(x) → Video(x)) ::: All movies are videos.\n∀x (SciFiMovie(x) → Movie(x)) ::: All sci-fi movies are movies.\nMovie(inception) ∧ SciFiMovie(inception) ::: Inception is a sci-fi movie.\n¬(FolkSong(mac) ∨ SciFiMovie(mac)) ::: Mac is neither a folk song nor a sci-fi movie.\nConclusion:\n¬FolkSong(inception) ::: Inception is not a folk song.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffe"
    ]
  },
  {
    "id": "FOLIO_train_150",
    "context": "No songs are visual. All folk songs are songs. All videos are visual. All movies are videos. All sci-fi movies are movies. Inception is a sci-fi movie. Mac is neither a folk song nor a sci-fi movie.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Inception is either a video or a folk song.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSong(x) ::: x is a song.\nFolkSong(x) ::: x is a folk song.\nVideo(x) ::: x is a video.\nMovie(x) ::: x is a movie.\nSciFiMovie(x) ::: x is a sci-fi movie.\nPremises:\n¬∃x (Song(x) ∧ Video(x)) ::: No songs are visual.\n∀x (FolkSong(x) → Song(x)) ::: All folk songs are songs.\n∀x (Video(x) → Visual(x)) ::: All videos are visual.\n∀x (Movie(x) → Video(x)) ::: All movies are videos.\n∀x (SciFiMovie(x) → Movie(x)) ::: All sci-fi movies are movies.\nMovie(inception) ∧ SciFiMovie(inception) ::: Inception is a sci-fi movie.\n¬(FolkSong(mac) ∨ SciFiMovie(mac)) ::: Mac is neither a folk song nor a sci-fi movie.\nConclusion:\n¬(Video(inception) ∨ Song(inception)) ::: Inception is either a video or a folk song.\n------"
    ]
  },
  {
    "id": "FOLIO_train_151",
    "context": "No songs are visual. All folk songs are songs. All videos are visual. All movies are videos. All sci-fi movies are movies. Inception is a sci-fi movie. Mac is neither a folk song nor a sci-fi movie.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mac is a video.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSong(x) ::: x is a song.\nFolkSong(x) ::: x is a folk song.\nVideo(x) ::: x is a video.\nMovie(x) ::: x is a movie.\nSciFiMovie(x) ::: x is a sci-fi movie.\nPremises:\n¬∃x (Song(x) ∧ Video(x)) ::: No songs are visual.\n∀x (FolkSong(x) → Song(x)) ::: All folk songs are songs.\n∀x (Video(x) → Visual(x)) ::: All videos are visual.\n∀x (Movie(x) → Video(x)) ::: All movies are videos.\n∀x (SciFiMovie(x) → Movie(x)) ::: All sci-fi movies are movies.\nMovie(inception) ∧ SciFiMovie(inception) ::: Inception is a sci-fi movie.\n¬(FolkSong(mac) ∨ SciFiMovie(mac)) ::: Mac is neither a folk song nor a sci-fi movie.\nConclusion:\n¬Video(mac) ::: Mac is a video.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caff"
    ]
  },
  {
    "id": "FOLIO_train_152",
    "context": "All extroverts are overtly expressive. People are either extroverts or introverts. If someone is an introvert, then they are shy and reticent. No shy and reticent person likes to talk to strangers. Jeff is not an extrovert and someone who likes to talk to strangers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jeff is a shy and reticent person.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nExtrovert(x) ::: x is an extrovert.\nIntrovert(x) ::: x is an introvert.\nExpressive(x) ::: x is overtly expressive.\nShy(x) ::: x is shy.\nReticent(x) ::: x is reticent.\nLike(x, y) ::: x likes to talk to y.\nStranger(x) ::: x is a stranger.\nPremises:\n∀x (Extrovert(x) → Expressive(x)) ::: All extroverts are overtly expressive.\n∀x (Extrovert(x) ⊕ Introvert(x)) ::: People are either extroverts or introverts.\n¬(Introvert(x) ∧ Shy(x) ∧ Reticent(x)) → ¬(Shy(x) ∧ Reticent(x)) ::: If someone is an introvert, then they are shy and reticent.\n¬(Shy(x) ∧ Reticent(x)) → ¬(Like(x, stranger)) ::: No shy and reticent person likes to talk to strangers.\n¬(Extrovert(jeff"
    ]
  },
  {
    "id": "FOLIO_train_153",
    "context": "All extroverts are overtly expressive. People are either extroverts or introverts. If someone is an introvert, then they are shy and reticent. No shy and reticent person likes to talk to strangers. Jeff is not an extrovert and someone who likes to talk to strangers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jeff is overtly expressive and likes to talk to strangers.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nExtrovert(x) ::: x is an extrovert.\nIntrovert(x) ::: x is an introvert.\nExpressive(x) ::: x is overtly expressive.\nShy(x) ::: x is shy.\nReticent(x) ::: x is reticent.\nTalk(x) ::: x likes to talk to strangers.\nPremises:\n∀x (Extrovert(x) → Expressive(x)) ::: All extroverts are overtly expressive.\n∀x (Extrovert(x) ⊕ Introvert(x)) ::: People are either extroverts or introverts.\n¬(Introvert(x) ∧ Shy(x) ∧ Reticent(x)) → ¬Talk(x) ::: If someone is an introvert, then they are shy and reticent. No shy and reticent person likes to talk to strangers.\n¬Extrovert(jeff) ∧ ¬Talk(jeff) ::: Jeff is not an extrovert and someone who likes to talk to strangers.\nConclusion:\nExpressive(jeff) ∧ Talk(jeff) :"
    ]
  },
  {
    "id": "FOLIO_train_154",
    "context": "All extroverts are overtly expressive. People are either extroverts or introverts. If someone is an introvert, then they are shy and reticent. No shy and reticent person likes to talk to strangers. Jeff is not an extrovert and someone who likes to talk to strangers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Jeff is either overtly expressive and likes to talk to strangers or neither overtly expressive nor likes to talk to strangers, then Jeff is neither an extrovert nor likes to talk to strangers.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nExtrovert(x) ::: x is an extrovert.\nIntrovert(x) ::: x is an introvert.\nExpressive(x) ::: x is overtly expressive.\nShy(x) ::: x is shy.\nReticent(x) ::: x is reticent.\nStranger(x) ::: x is a stranger.\nTalk(x, y) ::: x likes to talk to y.\nPremises:\n∀x (Extrovert(x) → Expressive(x)) ::: All extroverts are overtly expressive.\n∀x (Extrovert(x) ⊕ Introvert(x)) ::: People are either extroverts or introverts.\nIntrovert(x) → (Shy(x) ∧ Reticent(x)) ::: If someone is an introvert, then they are shy and reticent.\n¬(Shy(x) ∧ Reticent(x)) → ¬Talk(x, stranger) ::: No shy and reticent person likes to talk to strangers.\n¬Extrovert(jeff) ∧ ¬Talk(jeff, stranger) ::: Jeff is not an"
    ]
  },
  {
    "id": "FOLIO_train_155",
    "context": "No low-scoring players are top players in the league. Basketball players are either top players in the league or successfully shoot a high percentage of 3-pointers. All players who successfully shoot a high percentage of 3-pointers are solid at shooting 2-pointers. No players who are solid at shooting 2-pointers are bad at mid-range shots. Candace is either a low-scoring player or successfully shoots a high percentage of 3-pointers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Candace is a top player in the league.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLowScore(x) ::: x is a low-scoring player.\nTop(x) ::: x is a top player in the league.\nBasketballPlayer(x) ::: x is a basketball player.\nShoot(x, y) ::: x successfully shoots a high percentage of y-pointers.\nSolid(x, y) ::: x is solid at shooting y-pointers.\nBad(x, y) ::: x is bad at mid-range shots.\nPremises:\n¬(LowScore(x) ∧ Top(x)) ::: No low-scoring players are top players in the league.\nBasketballPlayer(x) ∨ Shoot(x, 3) ::: Basketball players are either top players in the league or successfully shoot a high percentage of 3-pointers.\n∀x (Shoot(x, 3) → Solid(x, 2)) ::: All players who successfully shoot a high percentage of 3-pointers are solid at shooting 2-pointers.\n∀x (Solid(x, 2) → ¬Bad(x, midRange)) ::: No players who are solid at shooting 2-pointers are bad at mid-range shots.\n(Low"
    ]
  },
  {
    "id": "FOLIO_train_156",
    "context": "No low-scoring players are top players in the league. Basketball players are either top players in the league or successfully shoot a high percentage of 3-pointers. All players who successfully shoot a high percentage of 3-pointers are solid at shooting 2-pointers. No players who are solid at shooting 2-pointers are bad at mid-range shots. Candace is either a low-scoring player or successfully shoots a high percentage of 3-pointers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Candace is bad at mid-range shots.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLowScoring(x) ::: x is a low-scoring player.\nTop(x) ::: x is a top player in the league.\nBasketballPlayer(x) ::: x is a basketball player.\nShoot(x, y) ::: x successfully shoots a high percentage of y.\nSolid(x, y) ::: x is solid at shooting y.\nBad(x, y) ::: x is bad at y.\nPremises:\n¬(LowScoring(x) ∧ Top(x)) ::: No low-scoring players are top players in the league.\nBasketballPlayer(x) ∨ Shoot(x, 3pointer) ::: Basketball players are either top players in the league or successfully shoot a high percentage of 3-pointers.\n∀x (Shoot(x, 3pointer) → Solid(x, 2pointer)) ::: All players who successfully shoot a high percentage of 3-pointers are solid at shooting 2-pointers.\n∀x (Solid(x, 2pointer) → ¬Bad(x, midrange)) ::: No players who are solid at shooting 2-pointers are bad at mid-range shots.\n(LowScor"
    ]
  },
  {
    "id": "FOLIO_train_157",
    "context": "No low-scoring players are top players in the league. Basketball players are either top players in the league or successfully shoot a high percentage of 3-pointers. All players who successfully shoot a high percentage of 3-pointers are solid at shooting 2-pointers. No players who are solid at shooting 2-pointers are bad at mid-range shots. Candace is either a low-scoring player or successfully shoots a high percentage of 3-pointers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Candace is solid at shooting 2-pointers or bad at mid-range shots.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLowScoring(x) ::: x is a low-scoring player.\nTop(x) ::: x is a top player in the league.\nBasketballPlayer(x) ::: x is a basketball player.\nShoot(x, y) ::: x successfully shoots a high percentage of y-pointers.\nSolid(x, y) ::: x is solid at shooting y-pointers.\nBad(x, y) ::: x is bad at mid-range shots.\nPremises:\n¬(LowScoring(x) ∧ Top(x)) ::: No low-scoring players are top players in the league.\nBasketballPlayer(x) ∨ Shoot(x, 3) ::: Basketball players are either top players in the league or successfully shoot a high percentage of 3-pointers.\n∀x (Shoot(x, 3) → Solid(x, 2)) ::: All players who successfully shoot a high percentage of 3-pointers are solid at shooting 2-pointers.\n∀x (Solid(x, 2) → ¬Bad(x, midRange)) ::: No players who are solid at shooting 2-pointers are bad at mid-range shots."
    ]
  },
  {
    "id": "FOLIO_train_158",
    "context": "No low-scoring players are top players in the league. Basketball players are either top players in the league or successfully shoot a high percentage of 3-pointers. All players who successfully shoot a high percentage of 3-pointers are solid at shooting 2-pointers. No players who are solid at shooting 2-pointers are bad at mid-range shots. Candace is either a low-scoring player or successfully shoots a high percentage of 3-pointers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Candace is either solid at shooting 2-pointers or bad at mid-range shots.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLowScore(x) ::: x is a low-scoring player.\nTop(x) ::: x is a top player in the league.\nBasketballPlayer(x) ::: x is a basketball player.\nShoot(x, y) ::: x successfully shoots a high percentage of y-pointers.\nSolid(x, y) ::: x is solid at shooting y-pointers.\nBad(x, y) ::: x is bad at mid-range shots.\nPremises:\n¬(LowScore(x) ∧ Top(x)) ::: No low-scoring players are top players in the league.\nBasketballPlayer(x) ∨ Shoot(x, 3) ::: Basketball players are either top players in the league or successfully shoot a high percentage of 3-pointers.\n∀x (Shoot(x, 3) → Solid(x, 2)) ::: All players who successfully shoot a high percentage of 3-pointers are solid at shooting 2-pointers.\n∀x (Solid(x, 2) → ¬Bad(x, mid)) ::: No players who are solid at shooting 2-pointers are bad at mid-range shots.\n(LowScore"
    ]
  },
  {
    "id": "FOLIO_train_159",
    "context": "No low-scoring players are top players in the league. Basketball players are either top players in the league or successfully shoot a high percentage of 3-pointers. All players who successfully shoot a high percentage of 3-pointers are solid at shooting 2-pointers. No players who are solid at shooting 2-pointers are bad at mid-range shots. Candace is either a low-scoring player or successfully shoots a high percentage of 3-pointers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Candace is a low-scoring player or bad at mid-range shots.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLowScoring(x) ::: x is a low-scoring player.\nTop(x) ::: x is a top player in the league.\nBasketballPlayer(x) ::: x is a basketball player.\nShoot(x, y) ::: x successfully shoots a high percentage of y.\nSolid(x, y) ::: x is solid at shooting y.\nBad(x, y) ::: x is bad at y.\nPremises:\n¬(LowScoring(x) ∧ Top(x)) ::: No low-scoring players are top players in the league.\nBasketballPlayer(x) ∨ Shoot(x, 3pointer) ::: Basketball players are either top players in the league or successfully shoot a high percentage of 3-pointers.\n∀x (Shoot(x, 3pointer) → Solid(x, 2pointer)) ::: All players who successfully shoot a high percentage of 3-pointers are solid at shooting 2-pointers.\n∀x (Solid(x, 2pointer) → ¬Bad(x, midrange)) ::: No players who are solid at shooting 2-pointers are bad at mid-range shots.\n(LowScor"
    ]
  },
  {
    "id": "FOLIO_train_160",
    "context": "No low-scoring players are top players in the league. Basketball players are either top players in the league or successfully shoot a high percentage of 3-pointers. All players who successfully shoot a high percentage of 3-pointers are solid at shooting 2-pointers. No players who are solid at shooting 2-pointers are bad at mid-range shots. Candace is either a low-scoring player or successfully shoots a high percentage of 3-pointers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Candace is either a low-scoring player or bad at mid-range shots.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLowScoring(x) ::: x is a low-scoring player.\nTop(x) ::: x is a top player in the league.\nBasketballPlayer(x) ::: x is a basketball player.\nShoot(x, y) ::: x successfully shoots a high percentage of y.\nSolid(x, y) ::: x is solid at shooting y.\nBad(x, y) ::: x is bad at y.\nPremises:\n¬(LowScoring(x) ∧ Top(x)) ::: No low-scoring players are top players in the league.\nBasketballPlayer(x) ∨ Shoot(x, 3pointer) ::: Basketball players are either top players in the league or successfully shoot a high percentage of 3-pointers.\n∀x (Shoot(x, 3pointer) → Solid(x, 2pointer)) ::: All players who successfully shoot a high percentage of 3-pointers are solid at shooting 2-pointers.\n∀x (Solid(x, 2pointer) → ¬Bad(x, midrange)) ::: No players who are solid at shooting 2-pointers are bad at mid-range shots.\n(LowScoring(candace) ∨ Shoot(candace, 3pointer)) ::: Candace is either a low-scoring player or successfully shoots a high percentage of 3-pointers.\nConclusion:\n(LowScoring(candace) ∨ Bad(candace, midrange)) ::: Candace is either a low-scoring player or bad at mid-range shots.\n------"
    ]
  },
  {
    "id": "FOLIO_train_161",
    "context": "No low-scoring players are top players in the league. Basketball players are either top players in the league or successfully shoot a high percentage of 3-pointers. All players who successfully shoot a high percentage of 3-pointers are solid at shooting 2-pointers. No players who are solid at shooting 2-pointers are bad at mid-range shots. Candace is either a low-scoring player or successfully shoots a high percentage of 3-pointers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Candace is either a player who successfully shoots a high percentage of 3-pointers or is bad at mid-range shots.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLowScoring(x) ::: x is a low-scoring player.\nTop(x) ::: x is a top player in the league.\nBasketballPlayer(x) ::: x is a basketball player.\nShoot(x, y) ::: x successfully shoots a high percentage of y-pointers.\nSolid(x, y) ::: x is solid at shooting y-pointers.\nBad(x, y) ::: x is bad at mid-range shots.\nPremises:\n¬(LowScoring(x) ∧ Top(x)) ::: No low-scoring players are top players in the league.\nBasketballPlayer(x) ∨ Shoot(x, 3) ::: Basketball players are either top players in the league or successfully shoot a high percentage of 3-pointers.\n∀x (Shoot(x, 3) → Solid(x, 2)) ::: All players who successfully shoot a high percentage of 3-pointers are solid at shooting 2-pointers.\n∀x (Solid(x, 2) → ¬Bad(x, midRange)) ::: No players who are solid at shooting 2-pointers are bad at mid-range shots.\n(LowScoring(candace) ∨ Shoot(candace, 3)) ::: Candace is either a low-scoring player or successfully shoots a high percentage of 3-pointers.\nConclusion:\nShoot(candace, 3) ∨ Bad(candace, midRange) ::: Candace is either a player who successfully shoots a high percentage of 3"
    ]
  },
  {
    "id": "FOLIO_train_162",
    "context": "No low-scoring players are top players in the league. Basketball players are either top players in the league or successfully shoot a high percentage of 3-pointers. All players who successfully shoot a high percentage of 3-pointers are solid at shooting 2-pointers. No players who are solid at shooting 2-pointers are bad at mid-range shots. Candace is either a low-scoring player or successfully shoots a high percentage of 3-pointers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Candace is not solid at shooting 2-pointers and bad at mid-range shots, then Candace is not solid at shooting 2-pointers and is a player who successfully shoots a high percentage of 3-pointers.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLowScore(x) ::: x is a low-scoring player.\nTop(x) ::: x is a top player in the league.\nShoot(x, y) ::: x successfully shoots a high percentage of y-pointers.\nSolid(x, y) ::: x is solid at shooting y-pointers.\nBad(x, y) ::: x is bad at mid-range shots.\nPremises:\n¬(LowScore(x) ∧ Top(x)) ::: No low-scoring players are top players in the league.\n(Top(x) ∨ Shoot(x, 3)) ::: Basketball players are either top players in the league or successfully shoot a high percentage of 3-pointers.\n∀x (Shoot(x, 3) → Solid(x, 2)) ::: All players who successfully shoot a high percentage of 3-pointers are solid at shooting 2-pointers.\n∀x (Solid(x, 2) → ¬Bad(x, mid)) ::: No players who are solid at shooting 2-pointers are bad at mid-range shots.\n¬(LowScore(candace) ∨ Shoot(candace, 3)) ::: Candace is either a low-scoring player or successfully shoots a high percentage of 3-pointers.\nConclusion:\n¬(Solid(candace, 2) ∧ Bad(candace, mid)) ∧ Shoot(candace, 3) ::: If Candace is not solid at shooting 2-pointers and bad at mid-range shots, then Candace is"
    ]
  },
  {
    "id": "FOLIO_train_163",
    "context": "No low-scoring players are top players in the league. Basketball players are either top players in the league or successfully shoot a high percentage of 3-pointers. All players who successfully shoot a high percentage of 3-pointers are solid at shooting 2-pointers. No players who are solid at shooting 2-pointers are bad at mid-range shots. Candace is either a low-scoring player or successfully shoots a high percentage of 3-pointers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Candace is solid at shooting 2-pointers or successfully shoots a high percentage of 3-pointers, then Candace is a top player in the league and bad at mid-range shots.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLowScoring(x) ::: x is a low-scoring player.\nTop(x) ::: x is a top player in the league.\nBasketballPlayer(x) ::: x is a basketball player.\nShoot(x, y) ::: x successfully shoots a high percentage of y.\nSolid(x, y) ::: x is solid at shooting y.\nBad(x, y) ::: x is bad at y.\nPremises:\n¬(LowScoring(x) ∧ Top(x)) ::: No low-scoring players are top players in the league.\nBasketballPlayer(x) ∨ Shoot(x, 3pointer) ::: Basketball players are either top players in the league or successfully shoot a high percentage of 3-pointers.\n∀x (Shoot(x, 3pointer) → Solid(x, 2pointer)) ::: All players who successfully shoot a high percentage of 3-pointers are solid at shooting 2-pointers.\n∀x (Solid(x, 2pointer) → ¬Bad(x, midrange)) ::: No players who are solid at shooting 2-pointers are bad at mid-range shots.\n(LowScoring(candace) ∨ Shoot(candace, 3pointer)) ::: Candace is either a low-scoring player or successfully shoots a high percentage of 3-pointers.\nConclusion:\n(Top(candace) ∧ Shoot(candace, 3pointer)) → (Top(candace) ∧ Bad(candace, midrange)) ::: If Candace is"
    ]
  },
  {
    "id": "FOLIO_train_164",
    "context": "No plants are fungi. Mushrooms are fungi.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? No plants are mushrooms.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPlant(x) ::: x is a plant.\nFungus(x) ::: x is a fungus.\nMushroom(x) ::: x is a mushroom.\nPremises:\n¬∃x (Plant(x) ∧ Fungus(x)) ::: No plants are fungi.\n∃x (Fungus(x) ∧ Mushroom(x)) ::: Mushrooms are fungi.\nConclusion:\n¬∃x (Plant(x) ∧ Mushroom(x)) ::: No plants are mushrooms.\n------\nProblem:\nNo plants are fungi. Mushrooms are fungi.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? No plants are mushrooms.\n###\nPredicates:\nPlant(x) ::: x is a plant.\nFungus(x) ::: x is a fungus.\nMushroom(x) ::: x is a mushroom.\nPremises:\n¬∃x (Plant(x) ∧ Fungus(x)) ::: No plants are fungi.\n∃x (Fungus(x) ∧ Mushroom(x)) ::: Mushrooms are fungi.\nConclusion:\n¬∃x (Plant(x) ∧ Mushroom(x)) ::: No plants are mushrooms.\n------\nProblem:\nNo plants are fungi. Mushrooms are fungi.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? No plants are mushrooms.\n###\nPredicates:\nPl"
    ]
  },
  {
    "id": "FOLIO_train_165",
    "context": "No road is clean. And some streets are roads.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Some streets are clean",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRoad(x) ::: x is a road.\nStreet(x) ::: x is a street.\nClean(x) ::: x is clean.\nPremises:\n¬∃x (Road(x) ∧ Clean(x)) ::: No road is clean.\n∃x (Street(x) ∧ Road(x)) ::: And some streets are roads.\nConclusion:\n¬∃x (Street(x) ∧ Clean(x)) ::: Some streets are clean\n------\nProblem:\nNo one who is a student is a person who is not a student. Some students are people who are not students.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Some students are people who are not students.\nBased on the above information, is the following statement true, false, or uncertain? No one who is a student is a person who is not a student.\nBased on the above information, is the following statement true, false, or uncertain? Some students are people who are not students.\n###\nPredicates:\nStudent(x) ::: x is a student.\nPremises:\n¬∃x (Student(x) ∧ ¬Student(x)) ::: No one who is a student is a person who is not a student.\n∃x (Student(x) ∧ ¬Student(x)) ::: Some students are people who are not students.\nConclusion:\n¬∃x (Student(x) ∧ ¬Student(x)) ::: No one who is a student is a person who is not a student.\n¬∃x (Student(x) ∧ ¬Student(x"
    ]
  },
  {
    "id": "FOLIO_train_166",
    "context": "New York City is on the East Coast. Seattle is on the West Coast. If a person from a city on the East coast is traveling to a city on the west coast, they will be on a long flight. Most passengers on flights to Seattle from New York City are not in first class. People on long flights are uncomfortable unless they're in first class",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Some people flying from New York City to Seattle will be uncomfortable.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEastCoast(x) ::: x is on the East Coast.\nWestCoast(x) ::: x is on the West Coast.\nLongFlight(x) ::: x is on a long flight.\nFirstClass(x) ::: x is in first class.\nUncomfortable(x) ::: x is uncomfortable.\nPremises:\nEastCoast(newYorkCity) ∧ WestCoast(seattle) ::: New York City is on the East Coast. Seattle is on the West Coast.\n∀x (EastCoast(x) → LongFlight(x)) ::: If a person from a city on the East coast is traveling to a city on the west coast, they will be on a long flight.\n¬∃x (LongFlight(x) ∧ FirstClass(x)) ::: Most passengers on flights to Seattle from New York City are not in first class.\n∀x (LongFlight(x) → ¬Uncomfortable(x)) ::: People on long flights are uncomfortable unless they're in first class\nConclusion:\n¬∃x (EastCoast(x) ∧ LongFlight(x) ∧ FirstClass(x)) ::: Some people flying from New York City to Seattle will be uncomfortable.\n------\nProblem:\nThe only people who are allowed to vote are people who are 18 years old or older. People who are 18 years old or older are adults. People who are not adults are not allowed to vote.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? People who are not allowed to vote are not"
    ]
  },
  {
    "id": "FOLIO_train_167",
    "context": "Musicians have very busy lives. Singh Kaur is a musician and famous. If a musician is not famous, that musician will not make a lot of money. A musician can be a singer or a writer.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Singh Kaur makes a lot of money.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMusician(x) ::: x is a musician.\nFamous(x) ::: x is famous.\nMake(x, y) ::: x makes y.\nLot(x) ::: x is a lot.\nMoney(x) ::: x is money.\nSinger(x) ::: x is a singer.\nWriter(x) ::: x is a writer.\nPremises:\n∀x (Musician(x) → Busy(x)) ::: Musicians have very busy lives.\nMusician(singh) ∧ Famous(singh) ::: Singh Kaur is a musician and famous.\n¬Famous(x) → ¬Make(x, Lot(money)) ::: If a musician is not famous, that musician will not make a lot of money.\nMusician(x) → (Singer(x) ∨ Writer(x)) ::: A musician can be a singer or a writer.\nConclusion:\nMake(singh, Lot(money)) ::: Singh Kaur makes a lot of money.\n------\nProblem:\nA person who is a musician is a person who is a singer or a writer. A person who is a singer is a person who is famous. A person who is a writer is a person who is not famous.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? A person who is a musician is a person who is famous.\nBased on the above information, is the following statement true, false, or uncertain? A person who is a musician is a person who is not famous.\n###\nPredicates:\nMusician(x"
    ]
  },
  {
    "id": "FOLIO_train_168",
    "context": "Musicians have very busy lives. Singh Kaur is a musician and famous. If a musician is not famous, that musician will not make a lot of money. A musician can be a singer or a writer.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Singh Kaur is a writer.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMusician(x) ::: x is a musician.\nFamous(x) ::: x is famous.\nMake(x, y) ::: x makes y.\nMoney(x) ::: x is money.\nSing(x) ::: x is a singer.\nWrite(x) ::: x is a writer.\nPremises:\n∀x (Musician(x) → Busy(x)) ::: Musicians have very busy lives.\nMusician(singh) ∧ Famous(singh) ::: Singh Kaur is a musician and famous.\n¬Famous(x) → ¬Make(x, money) ::: If a musician is not famous, that musician will not make a lot of money.\nMusician(x) → (Sing(x) ∨ Write(x)) ::: A musician can be a singer or a writer.\nConclusion:\nWrite(singh) ::: Singh Kaur is a writer.\n------\nProblem:\nA person who is a musician is a person who is a singer or a writer. A person who is a singer is a person who is famous. A person who is a writer is a person who is not famous.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? A person who is a musician is a person who is not famous.\nBased on the above information, is the following statement true, false, or uncertain? A person who is a musician is a person who is a singer.\nBased on the above information, is the following statement true, false, or uncertain? A person who is a musician is a person who is a writer.\n###"
    ]
  },
  {
    "id": "FOLIO_train_169",
    "context": "Musicians have very busy lives. Singh Kaur is a musician and famous. If a musician is not famous, that musician will not make a lot of money. A musician can be a singer or a writer.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Singh Kaur has a very busy life.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMusician(x) ::: x is a musician.\nFamous(x) ::: x is famous.\nBusy(x) ::: x has a very busy life.\nSinger(x) ::: x is a singer.\nWriter(x) ::: x is a writer.\nPremises:\n∀x (Musician(x) → Busy(x)) ::: Musicians have very busy lives.\nSinghKaur(x) ∧ Musician(x) ∧ Famous(x) ::: Singh Kaur is a musician and famous.\n¬Famous(x) → ¬(MakeALotOfMoney(x)) ::: If a musician is not famous, that musician will not make a lot of money. \nMusician(x) → (Singer(x) ∨ Writer(x)) ::: A musician can be a singer or a writer.\nConclusion:\nBusy(singhKaur) ::: Singh Kaur has a very busy life.\n------\nProblem:\nA person who is a musician is a person who is a singer or a writer. A person who is a singer is a person who is famous. A person who is a writer is a person who is not famous.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? A person who is a musician is a person who is not famous.\nBased on the above information, is the following statement true, false, or uncertain? A person who is a musician is a person who is a singer.\nBased on the above information, is the following statement true, false, or uncertain? A person who is a musician is a"
    ]
  },
  {
    "id": "FOLIO_train_170",
    "context": "Each building is tall. Everything tall has  height.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? All buildings are magnificent.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBuilding(x) ::: x is a building.\nTall(x) ::: x is tall.\nHeight(x) ::: x has height.\nMagnificent(x) ::: x is magnificent.\nPremises:\n∀x (Building(x) → Tall(x)) ::: Each building is tall.\n∀x (Tall(x) → Height(x)) ::: Everything tall has height.\nConclusion:\n∀x (Building(x) → Magnificent(x)) ::: All buildings are magnificent.\n------"
    ]
  },
  {
    "id": "FOLIO_train_171",
    "context": "A cat named Garfield, which is the main character of the film Garfield, is orange and fat and likes having lasagna. Garfield and Odie, who is another pet of Jon, share the same home. Garfield hates Odie. A pet who hates the pet with whom he shares the same owner is childish and possessive. Cats are pets.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The main character of the film Garfield is childish and possessive.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCat(x) ::: x is a cat.\nPet(x) ::: x is a pet.\nOrange(x) ::: x is orange.\nFat(x) ::: x is fat.\nLike(x, y) ::: x likes y.\nHate(x, y) ::: x hates y.\nChildish(x) ::: x is childish.\nPossessive(x) ::: x is possessive.\nMainCharacter(x, y) ::: x is the main character of y.\nFilm(x"
    ]
  },
  {
    "id": "FOLIO_train_172",
    "context": "All humans eat. If something eats, then it is not a plant. A thing is either plant or animal. All goats are animals. No dirt is an animal. Hulu is a goat or a human.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Hulu eats.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEat(x) ::: x eats.\nPlant(x) ::: x is a plant.\nAnimal(x) ::: x is an animal.\nGoat(x) ::: x is a goat.\nDirt(x) ::: x is dirt.\nHuman(x) ::: x is a human.\nPremises:\n∀x (Human(x) → Eat(x)) ::: All humans eat.\n¬(Eat(x) → Plant(x)) ::: If something eats, then it is not a"
    ]
  },
  {
    "id": "FOLIO_train_173",
    "context": "All humans eat. If something eats, then it is not a plant. A thing is either plant or animal. All goats are animals. No dirt is an animal. Hulu is a goat or a human.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Hulu does not eat.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEat(x) ::: x eats.\nPlant(x) ::: x is a plant.\nAnimal(x) ::: x is an animal.\nGoat(x) ::: x is a goat.\nDirt(x) ::: x is dirt.\nHuman(x) ::: x is a human.\nPremises:\n∀x (Eat(x) → ¬Plant(x)) ::: If something eats, then it is not a plant.\n∀x (Plant(x) ∨ Animal(x))"
    ]
  },
  {
    "id": "FOLIO_train_174",
    "context": "All humans eat. If something eats, then it is not a plant. A thing is either plant or animal. All goats are animals. No dirt is an animal. Hulu is a goat or a human.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Hulu is dirt.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nHuman(x) ::: x is a human.\nEat(x) ::: x eats.\nPlant(x) ::: x is a plant.\nAnimal(x) ::: x is an animal.\nGoat(x) ::: x is a goat.\nDirt(x) ::: x is dirt.\nPremises:\n∀x (Human(x) → Eat(x)) ::: All humans eat.\n¬(Eat(x) → Plant(x)) ::: If something eats, then it is not a"
    ]
  },
  {
    "id": "FOLIO_train_175",
    "context": "All humans eat. If something eats, then it is not a plant. A thing is either plant or animal. All goats are animals. No dirt is an animal. Hulu is a goat or a human.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Hulu is an animal or dirt.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nHuman(x) ::: x is a human.\nEat(x) ::: x eats.\nPlant(x) ::: x is a plant.\nAnimal(x) ::: x is an animal.\nGoat(x) ::: x is a goat.\nDirt(x) ::: x is dirt.\nPremises:\n∀x (Human(x) → Eat(x)) ::: All humans eat.\n¬(Eat(x) → Plant(x)) ::: If something eats, then it is not a"
    ]
  },
  {
    "id": "FOLIO_train_176",
    "context": "All humans eat. If something eats, then it is not a plant. A thing is either plant or animal. All goats are animals. No dirt is an animal. Hulu is a goat or a human.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Hulu is either an animal or dirt.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nHuman(x) ::: x is a human.\nEat(x) ::: x eats.\nPlant(x) ::: x is a plant.\nAnimal(x) ::: x is an animal.\nGoat(x) ::: x is a goat.\nDirt(x) ::: x is dirt.\nPremises:\n∀x (Human(x) → Eat(x)) ::: All humans eat.\n¬(Eat(x) → Plant(x)) ::: If something eats, then it is not a"
    ]
  },
  {
    "id": "FOLIO_train_177",
    "context": "All humans eat. If something eats, then it is not a plant. A thing is either plant or animal. All goats are animals. No dirt is an animal. Hulu is a goat or a human.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Hulu is either an animal or dirt, then Hulu eats and is dirt.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEat(x) ::: x eats.\nPlant(x) ::: x is a plant.\nAnimal(x) ::: x is an animal.\nGoat(x) ::: x is a goat.\nDirt(x) ::: x is dirt.\nHuman(x) ::: x is a human.\nPremises:\n∀x (Human(x) → Eat(x)) ::: All humans eat.\n¬(Eat(x) → Plant(x)) ::: If something eats, then it is not a"
    ]
  },
  {
    "id": "FOLIO_train_178",
    "context": "A controlled substance is a drug. There exist both harmful and beneficial controlled substances. If a child is exposed to a controlled substance, he or she is in chemical endangerment. Chemical Endangerment is harmful. The Controlled Substances Act was an act passed in 1971. Some Acts prevent harmful things.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Controlled Substances Act prevents harmful things.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nControlledSubstance(x) ::: x is a controlled substance.\nDrug(x) ::: x is a drug.\nHarmful(x) ::: x is harmful.\nBeneficial(x) ::: x is beneficial.\nExpose(x, y) ::: x is exposed to y.\nChild(x) ::: x is a child.\nChemicalEndangerment(x) ::: x is in chemical endangerment.\nAct(x) ::: x is an act.\nPrevent(x, y) :::"
    ]
  },
  {
    "id": "FOLIO_train_179",
    "context": "A controlled substance is a drug. There exist both harmful and beneficial controlled substances. If a child is exposed to a controlled substance, he or she is in chemical endangerment. Chemical Endangerment is harmful. The Controlled Substances Act was an act passed in 1971. Some Acts prevent harmful things.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Some drugs are beneficial.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nControlledSubstance(x) ::: x is a controlled substance.\nDrug(x) ::: x is a drug.\nHarmful(x) ::: x is harmful.\nBeneficial(x) ::: x is beneficial.\nExpose(x, y) ::: x is exposed to y.\nChild(x) ::: x is a child.\nChemicalEndangerment(x) ::: x is in chemical endangerment.\nAct(x) ::: x is an act.\nPass(x, y) ::: x"
    ]
  },
  {
    "id": "FOLIO_train_180",
    "context": "A controlled substance is a drug. There exist both harmful and beneficial controlled substances. If a child is exposed to a controlled substance, he or she is in chemical endangerment. Chemical Endangerment is harmful. The Controlled Substances Act was an act passed in 1971. Some Acts prevent harmful things.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A child in chemical endangerment is in harm.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nControlledSubstance(x) ::: x is a controlled substance.\nDrug(x) ::: x is a drug.\nHarmful(x) ::: x is harmful.\nBeneficial(x) ::: x is beneficial.\nExpose(x, y) ::: x is exposed to y.\nChild(x) ::: x is a child.\nChemicalEndangerment(x) ::: x is in chemical endangerment.\nHarm(x) ::: x is harm.\nAct(x) ::: x is an act.\nPass(x, y) ::: x is passed in year y.\nPrevent(x, y) ::: x prevents y.\nPremises:\n∀x (ControlledSubstance(x) → Drug(x)) ::: A controlled substance is a drug.\n∃x (ControlledSubstance(x) ∧ Harmful(x)) ∧ ∃x (ControlledSubstance(x) ∧ Beneficial(x)) ::: There exist both harmful and beneficial controlled substances.\n∀x (Child(x) ∧ Expose(x, controlledSubstance) → ChemicalEndangerment(x)) ::: If a child is exposed to a controlled substance, he or she is in chemical endangerment.\nHarm(chemicalEndangerment) ::: Chemical Endangerment is harmful.\nAct(controlledSubstancesAct) ∧ Pass(controlledSubstancesAct, year1971) ::: The Controlled Substances Act was an act passed in 1971.\n∃x ∃y (Act(x) ∧ Prevent(x, harmful)) ∧ ∃x ∃y (Act(x) ∧ Prevent(x, beneficial)) ::: Some Acts prevent harmful things.\nConclusion:\nHarm(child) ::: A child in chemical endangerment is in harm.\n------"
    ]
  },
  {
    "id": "FOLIO_train_181",
    "context": "No people who work at corporate jobs are starting a new company. All entrepreneurs are starting a new company. All risk-averse people are people who work at corporate jobs. All people who hate working for others are entrepreneurs. If Mark Zuckerberg is neither an entrepreneur nor a person who hates working for others, then Mark Zuckerberg is not a risk-averse person.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mark Zuckerberg is an entrepreneur.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCorporateJob(x) ::: x is a person who works at corporate jobs.\nEntrepreneur(x) ::: x is an entrepreneur.\nRiskAverse(x) ::: x is a risk-averse person.\nHate(x, y) ::: x hates y.\nPremises:\n¬(CorporateJob(x) ∧ Starting(x, company)) ::: No people who work at corporate jobs are starting a new company.\n∀x (Entrepreneur(x) → Starting(x, company)) ::: All entrepreneurs are starting a new company.\n∀x (RiskAverse(x) → CorporateJob(x)) ::: All risk-averse people are people who work at corporate jobs.\n∀x (Hate(x, workingForOthers) → Entrepreneur(x)) ::: All people who hate working for others are entrepreneurs.\n¬(Entrepreneur(markZuckerberg) ∨ Hate(markZuckerberg, workingForOthers)) → ¬RiskAverse(markZuckerberg) ::: If Mark Zuckerberg is neither an entrepreneur nor a person who hates working for others, then Mark Zuckerberg is not a risk-averse person.\nConclusion:\nEntrepreneur(markZuckerberg) ::: Mark Zuckerberg is an entrepreneur.\n------\nProblem:\nAll people who are not risk-averse are people who work at corporate jobs. All people who work at corporate jobs are people who are not entrepreneurs. All people who are not entrepreneurs are people who hate working for others. All people who hate working for others are people who are not risk-averse.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? All people who are not risk-averse are people who are not entrepreneurs.\nBased on the above information, is the following statement true"
    ]
  },
  {
    "id": "FOLIO_train_182",
    "context": "No people who work at corporate jobs are starting a new company. All entrepreneurs are starting a new company. All risk-averse people are people who work at corporate jobs. All people who hate working for others are entrepreneurs. If Mark Zuckerberg is neither an entrepreneur nor a person who hates working for others, then Mark Zuckerberg is not a risk-averse person.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mark Zuckerberg is a risk-averse person.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCorporateJob(x) ::: x is a person who works at corporate jobs.\nEntrepreneur(x) ::: x is an entrepreneur.\nRiskAverse(x) ::: x is a risk-averse person.\nHate(x, y) ::: x hates y.\nPremises:\n¬(CorporateJob(x) ∧ Starting(x, company)) ::: No people who work at corporate jobs are starting a new company.\n∀x (Entrepreneur(x) → Starting(x, company)) ::: All entrepreneurs are starting a new company.\n∀x (RiskAverse(x) → CorporateJob(x)) ::: All risk-averse people are people who work at corporate jobs.\n∀x (Hate(x, workingForOthers) → Entrepreneur(x)) ::: All people who hate working for others are entrepreneurs.\n¬(Entrepreneur(markZuckerberg) ∧ Hate(markZuckerberg, workingForOthers)) → ¬RiskAverse(markZuckerberg) ::: If Mark Zuckerberg is neither an entrepreneur nor a person who hates working for others, then Mark Zuckerberg is not a risk-averse person.\nConclusion:\nRiskAverse(markZuckerberg) ::: Mark Zuckerberg is a risk-averse person.\n------\nProblem:\nAll people who are not risk-averse are people who work at corporate jobs. All people who work at corporate jobs are people who hate working for others. All people who hate working for others are entrepreneurs. All entrepreneurs are people who are not risk-averse.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? All people who are not risk-averse are entrepreneurs.\nBased on the above information, is the following statement true, false, or uncertain? All people who are not"
    ]
  },
  {
    "id": "FOLIO_train_183",
    "context": "No people who work at corporate jobs are starting a new company. All entrepreneurs are starting a new company. All risk-averse people are people who work at corporate jobs. All people who hate working for others are entrepreneurs. If Mark Zuckerberg is neither an entrepreneur nor a person who hates working for others, then Mark Zuckerberg is not a risk-averse person.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mark Zuckerberg is not a risk-averse person.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCorporateJob(x) ::: x is a person who works at corporate jobs.\nEntrepreneur(x) ::: x is an entrepreneur.\nRiskAverse(x) ::: x is a risk-averse person.\nHate(x, y) ::: x hates y.\nPremises:\n¬(CorporateJob(x) ∧ Starting(x, company)) ::: No people who work at corporate jobs are starting a new company.\n∀x (Entrepreneur(x) → Starting(x, company)) ::: All entrepreneurs are starting a new company.\n∀x (RiskAverse(x) → CorporateJob(x)) ::: All risk-averse people are people who work at corporate jobs.\n∀x (Hate(x, workingForOthers) → Entrepreneur(x)) ::: All people who hate working for others are entrepreneurs.\n¬(Entrepreneur(markZuckerberg) ∧ Hate(markZuckerberg, workingForOthers)) → ¬RiskAverse(markZuckerberg) ::: If Mark Zuckerberg is neither an entrepreneur nor a person who hates working for others, then Mark Zuckerberg is not a risk-averse person.\nConclusion:\n¬RiskAverse(markZuckerberg) ::: Mark Zuckerberg is not a risk-averse person.\n------\nProblem:\nAll people who are not risk-averse are people who work at corporate jobs. All people who work at corporate jobs are people who hate working for others. All people who hate working for others are entrepreneurs. All entrepreneurs are people who are not risk-averse.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? All people who are not risk-averse are entrepreneurs.\nBased on the above information, is the following statement true, false, or uncertain? All people who"
    ]
  },
  {
    "id": "FOLIO_train_184",
    "context": "There are two kitchens in the house: the upstairs kitchen and the downstairs kitchen. When someone is cooking in the downstairs kitchen, the first floor becomes smokey unless the air conditioner is running. If the air conditioner is running and someone is cooking in the downstairs kitchen, all the smoke travels to the second floor.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If someone is cooking downstairs, it will always cause the first floor to become smokey.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCook(x) ::: x is cooking.\nSmokey(x) ::: x is smokey.\nAirConditioner(x) ::: x is an air conditioner.\nRun(x) ::: x is running.\nFloor(x) ::: x is a floor.\nPremises:\nCook(downstairsKitchen) → Smokey(firstFloor) ∧ ¬Run(airConditioner) ::: When someone is cooking in the downstairs kitchen, the first floor becomes smokey unless the air conditioner is running.\nRun(airConditioner) ∧ Cook(downstairsKitchen) → Smokey(secondFloor) ::: If the air conditioner is running and someone is cooking in the downstairs kitchen, all the smoke travels to the second floor.\nConclusion:\nCook(downstairsKitchen) → Smokey(firstFloor) ::: If someone is cooking downstairs, it will always cause the first floor to become smokey.\n------\nProblem:\nThe only people who are allowed to enter the building are those who have a valid pass. The only people who are allowed to enter the building are those who have a valid pass.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The only people who are allowed to enter the building are those who have a valid pass.\n###\nPredicates:\nValid(x) ::: x is valid.\nPass(x) ::: x is a pass.\nAllow(x, y) ::: x is allowed to enter y.\nBuilding(x) ::: x is a building.\nPremises:\n∀x (Allow(x, building) → Valid(pass(x))) ::: The only people who are allowed to enter the building are those who have a valid pass.\n∀x (Allow(x, building) → Valid(pass(x))) ::: The only people who are allowed to enter the building are those"
    ]
  },
  {
    "id": "FOLIO_train_185",
    "context": "There are two kitchens in the house: the upstairs kitchen and the downstairs kitchen. When someone is cooking in the downstairs kitchen, the first floor becomes smokey unless the air conditioner is running. If the air conditioner is running and someone is cooking in the downstairs kitchen, all the smoke travels to the second floor.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If someone is cooking upstairs, the first floor will become smokey.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCook(x, y) ::: x is cooking in y.\nSmokey(x) ::: x is smokey.\nAirConditioner(x) ::: x is an air conditioner.\nRun(x) ::: x is running.\nPremises:\nCook(x, downstairsKitchen) → Smokey(firstFloor) ∧ ¬Run(airConditioner) ::: When someone is cooking in the downstairs kitchen, the first floor becomes smokey unless the air conditioner is running.\nRun(airConditioner) ∧ Cook(x, downstairsKitchen) → Smokey(secondFloor) ::: If the air conditioner is running and someone is cooking in the downstairs kitchen, all the smoke travels to the second floor.\nConclusion:\n¬Smokey(firstFloor) ∧ Cook(x, upstairsKitchen) ::: If someone is cooking upstairs, the first floor will become smokey.\n------\nProblem:\nThe only people who are allowed to enter the building are those who have a valid pass. The only people who are allowed to enter the building are those who have a valid pass.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The only people who are allowed to enter the building are those who have a valid pass.\n###\nPredicates:\nValid(x) ::: x is valid.\nPass(x) ::: x is a pass.\nAllow(x, y) ::: x is allowed to enter y.\nBuilding(x) ::: x is a building.\nPremises:\n∀x (Allow(x, building) → Valid(pass(x))) ::: The only people who are allowed to enter the building are those who have a valid pass.\n∀x (Allow(x, building) → Valid(pass(x))) ::: The only people who are allowed to enter the building are those who have a valid pass"
    ]
  },
  {
    "id": "FOLIO_train_186",
    "context": "There are two kitchens in the house: the upstairs kitchen and the downstairs kitchen. When someone is cooking in the downstairs kitchen, the first floor becomes smokey unless the air conditioner is running. If the air conditioner is running and someone is cooking in the downstairs kitchen, all the smoke travels to the second floor.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If someone is cooking downstairs and the air conditioner is running, there will be smoke upstairs.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCook(x) ::: x is cooking.\nSmoke(x) ::: x is smokey.\nAirConditioner(x) ::: x is the air conditioner.\nRun(x) ::: x is running.\nPremises:\nCook(downstairsKitchen) → Smoke(firstFloor) ∧ ¬Run(airConditioner) ::: When someone is cooking in the downstairs kitchen, the first floor becomes smokey unless the air conditioner is running.\nRun(airConditioner) ∧ Cook(downstairsKitchen) → Smoke(secondFloor) ::: If the air conditioner is running and someone is cooking in the downstairs kitchen, all the smoke travels to the second floor.\nConclusion:\nRun(airConditioner) ∧ Cook(downstairsKitchen) → Smoke(secondFloor) ::: If someone is cooking downstairs and the air conditioner is running, there will be smoke upstairs.\n------\nProblem:\nThe only people who are allowed to enter the building are those who have a valid pass. The only people who are allowed to enter the building are those who have a valid pass.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The only people who are allowed to enter the building are those who have a valid pass.\n###\nPredicates:\nValid(x) ::: x is valid.\nPass(x) ::: x is a pass.\nAllow(x, y) ::: x is allowed to enter y.\nBuilding(x) ::: x is a building.\nPremises:\n∀x (Allow(x, building) → Valid(pass(x))) ::: The only people who are allowed to enter the building are those who have a valid pass.\n∀x (Allow(x, building) → Valid(pass(x))) ::: The only people who are allowed to enter the building are those who have a valid pass."
    ]
  },
  {
    "id": "FOLIO_train_187",
    "context": "New York City is Located in the United States of America. United States of America is part of North America. North America is in the western hemisphere of the earth. New York City is a highly developed city. If place A is located in place B and place B is located in place C, then place A is located in place C.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A highly developed city is located in the western hemisphere of the earth.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLocated(x, y) ::: x is located in y.\nPartOf(x, y) ::: x is part of y.\nIn(x, y) ::: x is in y.\nWesternHemisphere(x) ::: x is in the western hemisphere of the earth.\nHighlyDeveloped(x) ::: x is a highly developed city.\nPremises:\nLocated(newYorkCity, unitedStatesOfAmerica) ∧ PartOf(unitedStatesOfAmerica, northAmerica) ∧ In(northAmerica, westernHemisphere) ::: New York City is Located in the United States of America. United States of America is part of North America. North America is in the western hemisphere of the earth.\nHighlyDeveloped(newYorkCity) ::: New York City is a highly developed city.\nLocated(x, y) → Located(x, z) ::: If place A is located in place B and place B is located in place C, then place A is located in place C.\nConclusion:\nHighlyDeveloped(x) ∧ Located(x, westernHemisphere) ::: A highly developed city is located in the western hemisphere of the earth.\n------\nProblem:\nThe United States of America is a country. The United States of America is located in North America. North America is a continent. The United States of America is a democracy. The United States of America is a republic. The United States of America is a federation. The United States of America is a federal republic. The United States of America is a federal democracy. The United States of America is a federal democratic republic.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The United States of America is a country.\nBased on the above information, is the following statement true, false, or uncertain? The United States of America is a federation.\nBased on the above information, is"
    ]
  },
  {
    "id": "FOLIO_train_188",
    "context": "New York City is Located in the United States of America. United States of America is part of North America. North America is in the western hemisphere of the earth. New York City is a highly developed city. If place A is located in place B and place B is located in place C, then place A is located in place C.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? USA is not located in western hemisphere of the earth.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLocated(x, y) ::: x is located in y.\nPartOf(x, y) ::: x is part of y.\nIn(x, y) ::: x is in y.\nHemisphere(x) ::: x is a hemisphere.\nWestern(x) ::: x is western.\nEarth(x) ::: x is the earth.\nDeveloped(x) ::: x is a highly developed city.\nPremises:\nLocated(newYorkCity, usa) ∧ PartOf(usa, northAmerica) ∧ PartOf(northAmerica, westernHemisphere) ::: New York City is Located in the United States of America. United States of America is part of North America. North America is in the western hemisphere of the earth.\nDeveloped(newYorkCity) ::: New York City is a highly developed city.\nLocated(x, y) ∧ Located(y, z) → Located(x, z) ::: If place A is located in place B and place B is located in place C, then place A is located in place C.\nConclusion:\n¬Located(usa, westernHemisphere) ::: USA is not located in western hemisphere of the earth.\n------\nProblem:\nThe United States of America is a country. The United States of America is located in North America. North America is a continent. The United States of America is a democracy. The United States of America is a republic. The United States of America is a federation. The United States of America is a federal republic. The United States of America is a federal democracy. The United States of America is a federal democratic republic. The United States of America is a federal democratic republic. The United States of America is a federal democratic republic. The United States of America is a federal democratic republic. The United States of America is a federal democratic republic. The United States of America is a federal democratic republic."
    ]
  },
  {
    "id": "FOLIO_train_189",
    "context": "New York City is Located in the United States of America. United States of America is part of North America. North America is in the western hemisphere of the earth. New York City is a highly developed city. If place A is located in place B and place B is located in place C, then place A is located in place C.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? New York City is located in the New York State.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLocated(x, y) ::: x is located in y.\nPartOf(x, y) ::: x is part of y.\nIn(x, y) ::: x is in y.\nDeveloped(x) ::: x is a highly developed city.\nPremises:\nLocated(newYorkCity, unitedStatesOfAmerica) ∧ PartOf(unitedStatesOfAmerica, northAmerica) ∧ In(northAmerica, westernHemisphere) ::: New York City is Located in the United States of America. United States of America is part of North America. North America is in the western hemisphere of the earth.\nDeveloped(newYorkCity) ::: New York City is a highly developed city.\nLocated(a, b) ∧ Located(b, c) → Located(a, c) ::: If place A is located in place B and place B is located in place C, then place A is located in place C.\nConclusion:\nLocated(newYorkCity, newYorkState) ::: New York City is located in the New York State.\n------\nProblem:\nThe United States of America is a country. The United States of America is located in North America. North America is a continent. The United States of America is a democratic country. The United States of America is a federal republic. The United States of America is a developed country. The United States of America is a member of the United Nations. The United States of America is a member of the North Atlantic Treaty Organization. The United States of America is a member of the World Trade Organization. The United States of America is a member of the Group of Seven. The United States of America is a member of the Group of Twenty. The United States of America is a member of the Organization for Economic Co-operation and Development. The United States of America is a member of the Asia-Pacific Economic Cooperation. The United States of America is a member of the Organization of American States."
    ]
  },
  {
    "id": "FOLIO_train_190",
    "context": "Callus 4 is a poem that was written by the ancient Roman writer Catullus. Callus 4 is a story about the retirement of a well-traveled ship. There is a strong analogy of human aging in the poem Callus 4. Callus 4 is written in an unusual iambic trimeter to convey a sense of speed over the waves.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There exists a poem written by an ancient Roman writer with a strong analogy of human aging.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPoem(x) ::: x is a poem.\nStory(x) ::: x is a story.\nRetirement(x) ::: x is about the retirement of a well-traveled ship.\nAnalogy(x, y) ::: x is a strong analogy of y.\nIambicTricimeter(x) ::: x is written in an unusual iambic trimeter to convey a sense of speed over the waves.\nPremises:\nPoem(callus4) ∧ Story(callus4) ∧ Retirement(callus4) ∧ Analogy(callus4, humanAging) ∧ IambicTricimeter(callus4) ::: Callus 4 is a poem that was written by the ancient Roman writer Catullus. Callus 4 is a story about the retirement of a well-traveled ship. There is a strong analogy of human aging in the poem Callus 4. Callus 4 is written in an unusual iambic trimeter to convey a sense of speed over the waves.\nConclusion:\n∃x (Poem(x) ∧ Story(x) ∧ Analogy(x, humanAging)) ::: There exists a poem written by an ancient Roman writer with a strong analogy of human aging.\n------"
    ]
  },
  {
    "id": "FOLIO_train_191",
    "context": "Callus 4 is a poem that was written by the ancient Roman writer Catullus. Callus 4 is a story about the retirement of a well-traveled ship. There is a strong analogy of human aging in the poem Callus 4. Callus 4 is written in an unusual iambic trimeter to convey a sense of speed over the waves.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There exists a poem written by an ancient Roman writer written in iambic petameter.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPoem(x) ::: x is a poem.\nStory(x) ::: x is a story.\nRetirement(x) ::: x is about the retirement of a well-traveled ship.\nAnalogy(x, y) ::: x is a strong analogy of human aging.\nIambic(x) ::: x is written in an unusual iambic trimeter.\nPremises:\nPoem(callus4) ∧ Story(callus4) ∧ Retirement(callus4) ∧ Analogy(callus4, humanAging) ∧ Iambic(callus4) ::: Callus 4 is a poem that was written by the ancient Roman writer Catullus. Callus 4 is a story about the retirement of a well-traveled ship. There is a strong analogy of human aging in the poem Callus 4. Callus 4 is written in an unusual iambic trimeter to convey a sense of speed over the waves.\nConclusion:\n∃x (Poem(x) ∧ Iambic(x) ∧ Petameter(x)) ::: There exists a poem written by an ancient Roman writer written in iambic petameter.\n------\nProblem:\nThe first-order logic formular is:\n∀"
    ]
  },
  {
    "id": "FOLIO_train_192",
    "context": "Callus 4 is a poem that was written by the ancient Roman writer Catullus. Callus 4 is a story about the retirement of a well-traveled ship. There is a strong analogy of human aging in the poem Callus 4. Callus 4 is written in an unusual iambic trimeter to convey a sense of speed over the waves.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Callus 4 is written in an unusual iambic trimeter to convey a strong analogy of human aging.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPoem(x) ::: x is a poem.\nStory(x) ::: x is a story.\nRetirement(x) ::: x is about the retirement of a well-traveled ship.\nAnalogy(x) ::: x is about a strong analogy of human aging.\nIambicTremeter(x) ::: x is written in an unusual iambic trimeter.\nConvey(x, y) ::: x is written in an unusual iambic trimeter to convey y.\nPremises:\nPoem(callus4) ∧ Story(callus4) ∧ Retirement(callus4) ::: Callus 4 is a poem that was written by the ancient Roman writer Catullus. Callus 4 is a story about the retirement of a well-traveled ship.\nAnalogy(callus4) ::: There is a strong analogy of human aging in the poem Callus 4.\nIambicTremeter(callus4) ∧ Convey(callus4, speedOverWaves) ::: Callus 4 is written in an unusual iambic trimeter to convey a sense of speed over the waves.\nConclusion:\nConvey(callus4, strongAnalogyOfHumanAging) ::: Callus"
    ]
  },
  {
    "id": "FOLIO_train_193",
    "context": "Westworld is an American science fiction-thriller TV series. In 2016, a new television series named Westworld debuted on HBO. The TV series Westworld is adapted from the original film in 1973, which was written and directed by Michael Crichton. The 1973 film Westworld is about robots that malfunction and begin killing the human visitors.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Michael Crichton has directed a film about robots.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "s\nPredicates:\nDirector(x) ::: x is a director.\nWriter(x) ::: x is a writer.\nFilm(x) ::: x is a film.\nAbout(x, y) ::: x is about y.\nRobot(x) ::: x is a robot.\nKill(x, y) ::: x kills y.\nPremises:\nFilm(westworld) ∧ About(westworld, robot) ∧ About(westworld, kill) ::: Westworld is an American science fiction-thriller TV series.\nFilm(westworld) ∧ About(westworld, robot) ∧ About(westworld, kill) ::: In 2016, a new television series named Westworld debuted on HBO.\nFilm(westworld) ∧ About(westworld, robot) ∧ About(westworld, kill) ::: The TV series Westworld is adapted from the original film in 1973, which was written and directed by Michael Crichton.\nFilm(westworld) ∧ About(westworld, robot) ∧ About(westworld, kill) ::: The 1973 film Westworld is about robots that malfunction and begin killing the human visitors.\nConclusion:\nDirector(michael)"
    ]
  },
  {
    "id": "FOLIO_train_194",
    "context": "Westworld is an American science fiction-thriller TV series. In 2016, a new television series named Westworld debuted on HBO. The TV series Westworld is adapted from the original film in 1973, which was written and directed by Michael Crichton. The 1973 film Westworld is about robots that malfunction and begin killing the human visitors.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? An American TV series debuted in 2016.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAmerican(x) ::: x is an American TV series.\nDebut(x, y) ::: x debuted in year y.\nAdapt(x, y) ::: x is adapted from y.\nOriginal(x) ::: x is the original film.\nFilm(x) ::: x is a film.\nWritten(x, y) ::: x is written by y.\nDirected(x, y) ::: x is directed by y.\nMalfunction(x) ::: x malfunctions.\nKill(x, y) ::: x kills y.\nPremises:\nAmerican(westworld) ∧ Debut(westworld, year2016) ::: In 2016, a new television series named Westworld debuted on HBO.\nAdapt(westworld, originalFilm) ::: The TV series Westworld is adapted from the original film in 1973, which was written and directed by Michael Crichton.\nOriginal(originalFilm) ∧ Film(originalFilm) ∧ Written(originalFilm, michaelCrichton) ∧ Directed(originalFilm, michaelCrichton) ::: The 1973 film Westworld is about robots that malfunction and begin killing the human visitors."
    ]
  },
  {
    "id": "FOLIO_train_195",
    "context": "The 2008 Summer Olympics were held in Beijing, China. The 2008 Summer Olympics were the second Summer Olympic Games to be held in a communist state. China won the most gold medals (48) in the 2008 Summer Olympics. The United States placed second in the gold medal tally but won the highest number of medals overall (112) in the 2008 Summer Olympics. The third place in the gold medal tally was achieved by Russia in the 2008 Summer Olympics. If a country places third in gold medals, then they had fewer gold medals than the team that won the most gold medals. 87 countries won at least one medal during the 2008 Games.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Russia did not win fewer gold medals than China.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBeijing(x) ::: x is Beijing.\nChina(x) ::: x is China.\nCommunist(x) ::: x is a communist state.\nGold(x) ::: x is a gold medal.\nGoldMedalTally(x) ::: x is the gold medal tally.\nGoldMedalTally(x, y) ::: x is the gold medal tally of y.\nHighest(x) ::: x is the highest number of medals overall.\nMedal(x) ::: x is a medal.\nOlympic(x) ::: x is an Olympic Games.\nPlace(x, y) ::: x places y.\nRussia(x) ::: x is Russia.\nSummer(x) ::: x is a Summer Olympic Games.\nTeam(x) ::: x is a team.\nUnitedStates(x) ::: x is the United States.\nWin(x, y) ::: x wins y.\nWon(x, y) ::: x won y.\nPremises:\nBeijing(beijing) ∧ China(china) ∧ Olympic(olympic) ∧ Summer(olympic) ∧ Place(olympic, 2008)"
    ]
  },
  {
    "id": "FOLIO_train_196",
    "context": "The 2008 Summer Olympics were held in Beijing, China. The 2008 Summer Olympics were the second Summer Olympic Games to be held in a communist state. China won the most gold medals (48) in the 2008 Summer Olympics. The United States placed second in the gold medal tally but won the highest number of medals overall (112) in the 2008 Summer Olympics. The third place in the gold medal tally was achieved by Russia in the 2008 Summer Olympics. If a country places third in gold medals, then they had fewer gold medals than the team that won the most gold medals. 87 countries won at least one medal during the 2008 Games.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The United States won fewer gold medals than China.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBeijing(x) ::: x is Beijing.\nChina(x) ::: x is China.\nCommunist(x) ::: x is a communist state.\nGoldMedal(x) ::: x won the most gold medals.\nGoldMedalTally(x) ::: x placed second in the gold medal tally.\nGoldMedalTally(x) ::: x placed third in the gold medal tally.\nGoldMedalTally(x) ::: x had fewer gold medals than the team that won the most gold medals.\nGoldMedalTally(x) ::: x won the highest number of medals overall.\nGoldMedalTally(x) ::: x won at least one medal during the 2008 Games.\nPremises:\nBeijing(2008SummerOlympics) ∧ China(2008SummerOlympics) ∧ Communist(2008SummerOlympics) ::: The 2008 Summer Olympics were held in Beijing, China. The 2008 Summer Olympics were the second Summer Olympic Games to be held in a communist state.\nGoldMedal(china) ∧ GoldMedalTally(united"
    ]
  },
  {
    "id": "FOLIO_train_197",
    "context": "The 2008 Summer Olympics were held in Beijing, China. The 2008 Summer Olympics were the second Summer Olympic Games to be held in a communist state. China won the most gold medals (48) in the 2008 Summer Olympics. The United States placed second in the gold medal tally but won the highest number of medals overall (112) in the 2008 Summer Olympics. The third place in the gold medal tally was achieved by Russia in the 2008 Summer Olympics. If a country places third in gold medals, then they had fewer gold medals than the team that won the most gold medals. 87 countries won at least one medal during the 2008 Games.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Russia won fewer gold medals than China.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBeijing(x) ::: x is Beijing.\nChina(x) ::: x is China.\nCommunist(x) ::: x is a communist state.\nGoldMedal(x) ::: x won the most gold medals.\nGoldMedalTally(x) ::: x placed second in the gold medal tally.\nGoldMedalTally(x) ::: x placed third in the gold medal tally.\nGoldMedalTally(x) ::: x had fewer gold medals than the team that won the most gold medals.\nGoldMedalTally(x) ::: x had fewer gold medals than the team that placed second in the gold medal tally.\nGoldMedalTally(x) ::: x had fewer gold medals than the team that placed third in the gold medal tally.\nGoldMedalTally(x) ::: x had fewer gold medals than the team that won the most gold medals.\nGoldMedalTally(x) ::: x had fewer gold medals than the team that placed second in the gold medal tally.\nGoldMedalTally(x) ::: x had fewer gold medals than the team that placed third in the gold medal tally.\nGoldMedalT"
    ]
  },
  {
    "id": "FOLIO_train_198",
    "context": "Xiufeng, Xiangshan, Diecai, Qixing are districts in the city of Guilin. Yangshuo is not a district in Guilin.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Xiangshan and Diecai are districts in the same city.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDistrict(x) ::: x is a district.\nCity(x) ::: x is a city.\nPremises:\nDistrict(xiufeng) ∧ District(xiangshan) ∧ District(diecai) ∧ District(qixing) ::: Xiufeng, Xiangshan, Diecai, Qixing are districts in the city of Guilin.\n¬District(yangshuo) ::: Yangshuo is not a district in Guilin.\nConclusion:\nDistrict(xiangshan) ∧ District(diecai) ∧ City(guilin) ∧ City(xiangshan) ∧ City(diecai) ::: Xiangshan and Diecai are districts in the same city.\n------\nProblem:\nThe first person to reach the South Pole was Roald Amundsen. The first person to reach the North Pole was Robert Peary. The first person to reach the South Pole was not the first person to reach the North Pole.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The first person to reach the North Pole was not the first person to reach the South Pole.\nBased on the above information, is the following statement"
    ]
  },
  {
    "id": "FOLIO_train_199",
    "context": "Xiufeng, Xiangshan, Diecai, Qixing are districts in the city of Guilin. Yangshuo is not a district in Guilin.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Xiufeng is in Guilin.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDistrict(x) ::: x is a district.\nCity(x) ::: x is a city.\nIn(x, y) ::: x is in y.\nPremises:\nDistrict(xiufeng) ∧ District(xiangshan) ∧ District(diecai) ∧ District(qixing) ::: Xiufeng, Xiangshan, Diecai, Qixing are districts in the city of Guilin.\n¬District(yangshuo) ::: Yangshuo is not a district in Guilin.\nConclusion:\nIn(xiufeng, guilin) ::: Xiufeng is in Guilin.\n------\nProblem:\nThe first person to reach the South Pole was Roald Amundsen. The first person to reach the North Pole was Robert Peary. The first person to reach the South Pole was not the first person to reach the North Pole.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The first person to reach the North Pole was not the first person to reach the South Pole.\nBased on the above information, is the following statement true, false, or uncertain? The first person to reach the South Pole was not the first person to reach"
    ]
  },
  {
    "id": "FOLIO_train_200",
    "context": "Xiufeng, Xiangshan, Diecai, Qixing are districts in the city of Guilin. Yangshuo is not a district in Guilin.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Kowloon District is in Hong Kong.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDistrict(x) ::: x is a district.\nCity(x) ::: x is a city.\nPremises:\nDistrict(xiufeng) ∧ District(xiangshan) ∧ District(diecai) ∧ District(qixing) ∧ City(guilin) ::: Xiufeng, Xiangshan, Diecai, Qixing are districts in the city of Guilin.\n¬District(yangshuo) ∧ City(guilin) ::: Yangshuo is not a district in Guilin.\nConclusion:\n¬District(kowloon) ∧ City(hongKong) ::: Kowloon District is in Hong Kong.\n------"
    ]
  },
  {
    "id": "FOLIO_train_201",
    "context": "All people who grow their own fresh vegetables in their home garden also have ample space. If people are young working professionals who live in large cities, then they do not have ample space. If people order takeout from delivery services often, then they grow their own fresh vegetables in their home garden. If people enjoy going out often to restaurants with friends, then they order takeout from delivery services often. If people regularly tout the benefits of homegrown and homecooked meals over fast food, then they enjoy going out often to restaurants with friends. Michael grows his own fresh vegetables in his home garden or regularly touts the benefits of homegrown and homecooked meals over fast food.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Michael enjoys going out often to restaurants with friends.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGrow(x) ::: x grows their own fresh vegetables in their home garden.\nSpace(x) ::: x has ample space.\nYoung(x) ::: x is a young working professional.\nCity(x) ::: x lives in a large city.\nOrder(x) ::: x orders takeout from delivery services.\nTakeout(x) ::: x grows their own fresh vegetables in their home garden.\nEnjoy(x) ::: x enjoys going out often to restaurants with friends.\nRestaurant(x) ::: x goes out often to restaurants with friends.\nFriend(x) ::: x is a friend.\nRegularly(x) ::: x regularly touts the benefits of homegrown"
    ]
  },
  {
    "id": "FOLIO_train_202",
    "context": "All people who grow their own fresh vegetables in their home garden also have ample space. If people are young working professionals who live in large cities, then they do not have ample space. If people order takeout from delivery services often, then they grow their own fresh vegetables in their home garden. If people enjoy going out often to restaurants with friends, then they order takeout from delivery services often. If people regularly tout the benefits of homegrown and homecooked meals over fast food, then they enjoy going out often to restaurants with friends. Michael grows his own fresh vegetables in his home garden or regularly touts the benefits of homegrown and homecooked meals over fast food.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Michael is a young working professional who lives in large cities.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGrow(x) ::: x grows their own fresh vegetables in their home garden.\nSpace(x) ::: x has ample space.\nYoung(x) ::: x is young.\nProfessional(x) ::: x is a working professional.\nLive(x, y) ::: x lives in y.\nCity(x) ::: x is a large city.\nOrder(x) ::: x orders takeout from delivery services.\nOften(x) ::: x often.\nEnjoy(x, y) ::: x enjoys going out often to restaurants with friends.\nRestaurant(x) ::: x is a restaurant.\nFriend(x) ::: x is a friend.\nRegularly(x"
    ]
  },
  {
    "id": "FOLIO_train_203",
    "context": "All people who grow their own fresh vegetables in their home garden also have ample space. If people are young working professionals who live in large cities, then they do not have ample space. If people order takeout from delivery services often, then they grow their own fresh vegetables in their home garden. If people enjoy going out often to restaurants with friends, then they order takeout from delivery services often. If people regularly tout the benefits of homegrown and homecooked meals over fast food, then they enjoy going out often to restaurants with friends. Michael grows his own fresh vegetables in his home garden or regularly touts the benefits of homegrown and homecooked meals over fast food.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Michael grows his own fresh vegetables in their home garden or is a young working professional who lives in large cities.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGrow(x) ::: x grows their own fresh vegetables in their home garden.\nSpace(x) ::: x has ample space.\nYoung(x) ::: x is young.\nWorking(x) ::: x is a working professional.\nLive(x, y) ::: x lives in y.\nCity(x) ::: x is a large city.\nOrder(x) ::: x orders takeout from delivery services often.\nTakeout(x) ::: x takes out from delivery services often.\nEnjoy(x) ::: x enjoys going out often to restaurants with friends.\nRestaurant(x) ::: x is a restaurant.\nFriend(x) ::: x is a friend.\nRegular"
    ]
  },
  {
    "id": "FOLIO_train_204",
    "context": "All devices belonging to the company are connected to Google Home. All devices belonging to employees are connected to the company's wifi. All devices connected to Google Home are controlled by the managers. All devices that connect to the company's wifi are easy to operate. IPod1 belongs to employees.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? iPod1 is easy to operate.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBelong(x, y) ::: x belongs to y.\nConnect(x, y) ::: x is connected to y.\nControl(x, y) ::: x is controlled by y.\nEasy(x) ::: x is easy to operate.\nPremises:\n∀x (Belong(x, company) → Connect(x, googleHome)) ::: All devices belonging to the company are connected to Google Home.\n∀x (Belong(x, employees) → Connect(x, companyWifi)) ::: All devices belonging to employees are connected to the company's wifi.\n∀x (Connect(x, googleHome) → Control(x, managers)) ::: All devices connected to Google Home are controlled by the managers."
    ]
  },
  {
    "id": "FOLIO_train_205",
    "context": "All devices belonging to the company are connected to Google Home. All devices belonging to employees are connected to the company's wifi. All devices connected to Google Home are controlled by the managers. All devices that connect to the company's wifi are easy to operate. IPod1 belongs to employees.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? iPod1 is controlled by managers.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBelong(x, y) ::: x belongs to y.\nConnect(x, y) ::: x is connected to y.\nControl(x, y) ::: x is controlled by y.\nEasy(x) ::: x is easy to operate.\nPremises:\n∀x (Belong(x, company) → Connect(x, googleHome)) ::: All devices belonging to the company are connected to Google Home.\n∀x (Belong(x, employees) → Connect(x, companyWifi)) ::: All devices belonging to employees are connected to the company's wifi.\n∀x (Connect(x, googleHome) → Control(x, managers)) ::: All devices connected to Google Home are controlled by the managers."
    ]
  },
  {
    "id": "FOLIO_train_206",
    "context": "All devices belonging to the company are connected to Google Home. All devices belonging to employees are connected to the company's wifi. All devices connected to Google Home are controlled by the managers. All devices that connect to the company's wifi are easy to operate. IPod1 belongs to employees.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? iPod1 is connected to Google Home.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBelong(x, y) ::: x belongs to y.\nConnect(x, y) ::: x is connected to y.\nControl(x, y) ::: x is controlled by y.\nEasy(x) ::: x is easy to operate.\nPremises:\n∀x (Belong(x, company) → Connect(x, googleHome)) ::: All devices belonging to the company are connected to Google Home.\n∀x (Belong(x, employees) → Connect(x, companyWifi)) ::: All devices belonging to employees are connected to the company's wifi.\n∀x (Connect(x, googleHome) → Control(x, managers)) ::: All devices connected to Google Home are controlled by the managers."
    ]
  },
  {
    "id": "FOLIO_train_207",
    "context": "No touring musicians are permanent members of an orchestra. Musicians are either permanent members of an orchestra or have a unique musical voice or style. All musicians who have a unique musical voice or style are interesting as individual performers. All musicians who are interesting as individual performers are capable of attracting large audiences. If Ryan is interesting as an individual performer and has a unique musical voice or style, then Ryan is either a touring soloist musician and capable of attracting large audiences, or neither a touring soloist musician nor capable of attracting large audiences.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Ryan is interesting as an individual performer.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTouringMusician(x) ::: x is a touring musician.\nPermanentMember(x) ::: x is a permanent member of an orchestra.\nUniqueMusicalVoice(x) ::: x has a unique musical voice or style.\nInteresting(x) ::: x is interesting as an individual performer.\nCapable(x) ::: x is capable of attracting large audiences.\nSoloist(x) ::: x is a touring soloist musician.\nPremises:\n¬(TouringMusician(x) ∧ PermanentMember(x)) ::: No touring musicians are permanent members of an orchestra.\n(PermanentMember(x) ∨ Un"
    ]
  },
  {
    "id": "FOLIO_train_208",
    "context": "No touring musicians are permanent members of an orchestra. Musicians are either permanent members of an orchestra or have a unique musical voice or style. All musicians who have a unique musical voice or style are interesting as individual performers. All musicians who are interesting as individual performers are capable of attracting large audiences. If Ryan is interesting as an individual performer and has a unique musical voice or style, then Ryan is either a touring soloist musician and capable of attracting large audiences, or neither a touring soloist musician nor capable of attracting large audiences.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Ryan is either a permanent member of an orchestra or a touring soloist musician.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTouringMusician(x) ::: x is a touring musician.\nPermanentMember(x) ::: x is a permanent member of an orchestra.\nUniqueMusicalVoice(x) ::: x has a unique musical voice or style.\nInteresting(x) ::: x is interesting as an individual performer.\nCapable(x) ::: x is capable of attracting large audiences.\nSoloist(x) ::: x is a touring soloist musician.\nPremises:\n¬(TouringMusician(x) ∧ PermanentMember(x)) ::: No touring musicians are permanent members of an orchestra.\n(PermanentMember(x) ∨ Un"
    ]
  },
  {
    "id": "FOLIO_train_209",
    "context": "No touring musicians are permanent members of an orchestra. Musicians are either permanent members of an orchestra or have a unique musical voice or style. All musicians who have a unique musical voice or style are interesting as individual performers. All musicians who are interesting as individual performers are capable of attracting large audiences. If Ryan is interesting as an individual performer and has a unique musical voice or style, then Ryan is either a touring soloist musician and capable of attracting large audiences, or neither a touring soloist musician nor capable of attracting large audiences.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Ryan is either a permanent member of an orchestra or has a unique musical voice or style.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTouringMusician(x) ::: x is a touring musician.\nPermanentMember(x) ::: x is a permanent member of an orchestra.\nUniqueVoice(x) ::: x has a unique musical voice or style.\nInteresting(x) ::: x is interesting as an individual performer.\nCapable(x) ::: x is capable of attracting large audiences.\nSoloist(x) ::: x is a touring soloist musician.\nPremises:\n¬(TouringMusician(x) ∧ PermanentMember(x)) ::: No touring musicians are permanent members of an orchestra.\n(PermanentMember(x) ∨ UniqueV"
    ]
  },
  {
    "id": "FOLIO_train_210",
    "context": "If someone yells, then they are not cool. If someone is angry, then they yell. If someone flies, then they are cool. Every person that knows magic can fly. All wizards know magic. Harry either yells and flies, or neither yells nor flies. Potter is a wizard and flies.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Harry is cool.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCool(x) ::: x is cool.\nYell(x) ::: x yells.\nAngry(x) ::: x is angry.\nFly(x) ::: x flies.\nKnow(x, y) ::: x knows y.\nMagic(y) ::: y is magic.\nWizard(x) ::: x is a wizard.\nPremises:\n¬(Yell(x) ∧ Cool(x)) ::: If someone yells, then they are not cool.\nYell(x) → Angry(x) ::: If someone is angry, then they yell.\nFly(x) → Cool(x) ::: If someone flies, then they are cool.\n∀x (Know(x, magic) → Fly(x)) ::: Every person that knows magic can fly.\n∀x (Wizard(x) → Know(x, magic)) ::: All wizards know magic.\n(Yell(harry) ∧ Fly(harry)) ⊕ ¬(Yell(harry) ∨ Fly(harry)) ::: Harry either yells and flies, or neither yells nor flies.\nFly(potter) ∧ Wizard(potter) ::: Potter is a wizard and flies.\nConclusion:\nCool(harry) ::: Harry is cool.\n------"
    ]
  },
  {
    "id": "FOLIO_train_211",
    "context": "If someone yells, then they are not cool. If someone is angry, then they yell. If someone flies, then they are cool. Every person that knows magic can fly. All wizards know magic. Harry either yells and flies, or neither yells nor flies. Potter is a wizard and flies.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Harry is not cool.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCool(x) ::: x is cool.\nYell(x) ::: x yells.\nAngry(x) ::: x is angry.\nFly(x) ::: x flies.\nKnow(x, y) ::: x knows y.\nMagic(y) ::: y is magic.\nWizard(x) ::: x is a wizard.\nPremises:\n¬(Yell(x) ∧ Cool(x)) ::: If someone yells, then they are not cool.\n(Angry(x) → Yell(x)) ::: If someone is angry, then they yell.\n(Fly(x) → Cool(x)) ::: If someone flies, then they are cool.\n∀x (Know(x, magic) → Fly(x)) ::: Every person that knows magic can fly.\n∀x (Wizard(x) → Know(x, magic)) ::: All wizards know magic.\n(Yell(harry) ∧ Fly(harry)) ⊕ ¬(Yell(harry) ∨ Fly(harry)) ::: Harry either yells and flies, or neither yells nor flies.\nFly(potter) ∧ Wizard(potter) ::: Potter is a wizard and flies.\nConclusion:\n¬Cool(harry) ::: Harry is not"
    ]
  },
  {
    "id": "FOLIO_train_212",
    "context": "If someone yells, then they are not cool. If someone is angry, then they yell. If someone flies, then they are cool. Every person that knows magic can fly. All wizards know magic. Harry either yells and flies, or neither yells nor flies. Potter is a wizard and flies.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Harry is a wizard or angry.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCool(x) ::: x is cool.\nFly(x) ::: x flies.\nYell(x) ::: x yells.\nKnow(x, y) ::: x knows y.\nMagic(x) ::: x is magic.\nWizard(x) ::: x is a wizard.\nPremises:\n¬(Yell(x) ∧ Cool(x)) ::: If someone yells, then they are not cool.\nYell(x) → Angry(x) ::: If someone is angry, then they yell.\nFly(x) → Cool(x) ::: If someone flies, then they are cool.\n∀x (Know(x, magic) → Fly(x)) ::: Every person that knows magic can fly.\n∀x (Wizard(x) → Know(x, magic)) ::: All wizards know magic.\n(Yell(harry) ∧ Fly(harry)) ⊕ ¬(Yell(harry) ∨ Fly(harry)) ::: Harry either yells and flies, or neither yells nor flies.\nFly(potter) ∧ Wizard(potter) ::: Potter is a wizard and flies.\nConclusion:\nWizard(harry) ∨ Angry(harry) ::: Harry is a wizard or angry.\n------"
    ]
  },
  {
    "id": "FOLIO_train_213",
    "context": "If someone yells, then they are not cool. If someone is angry, then they yell. If someone flies, then they are cool. Every person that knows magic can fly. All wizards know magic. Harry either yells and flies, or neither yells nor flies. Potter is a wizard and flies.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Harry is neither a wizard nor angry.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCool(x) ::: x is cool.\nFly(x) ::: x flies.\nYell(x) ::: x yells.\nAngry(x) ::: x is angry.\nKnow(x, y) ::: x knows y.\nMagic(y) ::: y is magic.\nWizard(x) ::: x is a wizard.\nPremises:\n¬(Yell(x) ∧ Cool(x)) ::: If someone yells, then they are not cool.\nYell(x) → Angry(x) ::: If someone is angry, then they yell.\nFly(x) → Cool(x) ::: If someone flies, then they are cool.\n∀x (Know(x, magic) → Fly(x)) ::: Every person that knows magic can fly.\n∀x (Wizard(x) → Know(x, magic)) ::: All wizards know magic.\n(Yell(harry) ∧ Fly(harry)) ⊕ ¬(Yell(harry) ∨ Fly(harry)) ::: Harry either yells and flies, or neither yells nor flies.\nFly(potter) ∧ Wizard(potter) ::: Potter is a wizard and flies.\nConclusion:\n¬(Wizard(harry) ∧ Angry(har"
    ]
  },
  {
    "id": "FOLIO_train_214",
    "context": "Products are either produced in China or the US. All produced in China are labeled. All produced in the US are sold in the US. If labeled, then the product is cheaper. All sold in the US are sold in Walmart. All displayed on the homepage are sold in Walmart. No products returned by customers are sold in Walmart. G-910 is either displayed on the homepage or cheaper.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? G-910 is displayed on the homepage.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProduced(x) ::: x is produced.\nLabeled(x) ::: x is labeled.\nSold(x) ::: x is sold.\nCheaper(x) ::: x is cheaper.\nDisplayed(x) ::: x is displayed.\nReturned(x) ::: x is returned.\nPremises:\n∀x (Produced(x) ⊕ (ProducedInChina(x) ∧ Labeled(x)) ∨ (ProducedInUS(x) ∧ SoldInUS(x))) ::: Products are either produced in China or the US. All produced in China are labeled. All produced in the US are sold in the US.\n∀x (Labeled(x) → Cheaper(x)) ::: If labeled, then the product is cheaper.\n∀x (SoldInUS(x) → SoldInWalmart(x)) ::: All sold in the US are sold in Walmart.\n∀x (DisplayedOnHomepage(x) → SoldInWalmart(x)) ::: All displayed on the homepage are sold in Walmart.\n∀x (ReturnedByCustomers(x) → ¬SoldInWalmart(x)) ::: No products returned by customers are sold in Walmart.\n(DisplayedOnHomepage(g910) ∨ Cheaper(g910)) ::: G-9"
    ]
  },
  {
    "id": "FOLIO_train_215",
    "context": "Products are either produced in China or the US. All produced in China are labeled. All produced in the US are sold in the US. If labeled, then the product is cheaper. All sold in the US are sold in Walmart. All displayed on the homepage are sold in Walmart. No products returned by customers are sold in Walmart. G-910 is either displayed on the homepage or cheaper.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? G-910 is not displayed on the homepage.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProduced(x) ::: x is produced in China or the US.\nLabeled(x) ::: x is labeled.\nSold(x) ::: x is sold in the US.\nCheaper(x) ::: x is cheaper.\nSoldInWalmart(x) ::: x is sold in Walmart.\nDisplayed(x) ::: x is displayed on the homepage.\nReturned(x) ::: x is returned by customers.\nPremises:\n∀x (Produced(x) ∨ Sold(x)) ::: Products are either produced in China or the US.\n∀x (Produced(x) → Labeled(x)) ::: All produced in China are labeled.\n∀x (Sold(x) → SoldInWalmart(x)) ::: All produced in the US are sold in the US.\n∀x (Labeled(x) → Cheaper(x)) ::: If labeled, then the product is cheaper.\n∀x (SoldInWalmart(x) → Displayed(x)) ::: All sold in the US are sold in Walmart.\n∀x (Displayed(x) → SoldInWalmart(x)) ::: All displayed on the homepage are sold in Walmart.\n∀x (Returned(x) → ¬SoldInWalmart(x)) ::: No products returned by customers are"
    ]
  },
  {
    "id": "FOLIO_train_216",
    "context": "Products are either produced in China or the US. All produced in China are labeled. All produced in the US are sold in the US. If labeled, then the product is cheaper. All sold in the US are sold in Walmart. All displayed on the homepage are sold in Walmart. No products returned by customers are sold in Walmart. G-910 is either displayed on the homepage or cheaper.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? G-910 is a product returned by customers.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "****\nPredicates:\nProduced(x) ::: x is a product produced.\nLabeled(x) ::: x is labeled.\nSold(x) ::: x is sold.\nCheaper(x) ::: x is cheaper.\nDisplayed(x) ::: x is displayed.\nReturned(x) ::: x is a product returned by customers.\nPremises:\nProduced(g910) ::: G-910 is either displayed on the homepage or cheaper.\n(Produced(x) ∧ ¬Sold(x)) → ¬Labeled(x) ::: All produced in China are labeled.\n(Produced(x) ∧ Sold(x)) → ¬Labeled(x) ::: All produced in the US are sold in the US.\n(Labeled(x) ∧ ¬Cheaper(x)) → ¬Sold(x) ::: If labeled, then the product is cheaper.\n(Sold(x) ∧ ¬SoldInWalmart(x)) → ¬Displayed(x) ::: All sold in the US are sold in Walmart.\n(Sold(x) ∧ SoldInWalmart(x)) → ¬Displayed(x) ::: All displayed on the homepage are sold in Walmart.\n(Sold(x) ∧ SoldInWalmart(x)) →"
    ]
  },
  {
    "id": "FOLIO_train_217",
    "context": "Products are either produced in China or the US. All produced in China are labeled. All produced in the US are sold in the US. If labeled, then the product is cheaper. All sold in the US are sold in Walmart. All displayed on the homepage are sold in Walmart. No products returned by customers are sold in Walmart. G-910 is either displayed on the homepage or cheaper.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? G-910 is a product returned by customers or sold in Walmart.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProduced(x) ::: x is a product produced.\nLabeled(x) ::: x is labeled.\nSold(x) ::: x is sold.\nCheaper(x) ::: x is cheaper.\nDisplayed(x) ::: x is displayed.\nReturned(x) ::: x is a product returned by customers.\nPremises:\n∀x (Produced(x) ∨ Sold(x)) ::: Products are either produced in China or the US.\n∀x (Produced(x) → Labeled(x)) ::: All produced in China are labeled.\n∀x (Produced(x) → Sold(x)) ::: All produced in the US are sold in the US.\n∀x (Labeled(x) → Cheaper(x)) ::: If labeled, then the product is cheaper.\n∀x (Sold(x) → SoldInWalmart(x)) ::: All sold in the US are sold in Walmart.\n∀x (Displayed(x) → SoldInWalmart(x)) ::: All displayed on the homepage are sold in Walmart.\n¬∀x (Returned(x) → SoldInWalmart(x)) ::: No products returned by customers are sold in Walmart.\n(Displayed(g910) ∨ Cheaper(g910)) ::: G-910 is either"
    ]
  },
  {
    "id": "FOLIO_train_218",
    "context": "Products are either produced in China or the US. All produced in China are labeled. All produced in the US are sold in the US. If labeled, then the product is cheaper. All sold in the US are sold in Walmart. All displayed on the homepage are sold in Walmart. No products returned by customers are sold in Walmart. G-910 is either displayed on the homepage or cheaper.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? G-910 is either returned by customers or sold in Walmart.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProduced(x) ::: x is produced in China or the US.\nLabeled(x) ::: x is labeled.\nSold(x) ::: x is sold in the US.\nCheaper(x) ::: x is cheaper.\nSoldInWalmart(x) ::: x is sold in Walmart.\nDisplayed(x) ::: x is displayed on the homepage.\nReturned(x) ::: x is returned by customers.\nPremises:\n∀x (Produced(x) ∨ Sold(x)) ::: Products are either produced in China or the US.\n∀x (Produced(x) → Labeled(x)) ::: All produced in China are labeled.\n∀x (Sold(x) → SoldInWalmart(x)) ::: All produced in the US are sold in the US.\n∀x (Labeled(x) → Cheaper(x)) ::: If labeled, then the product is cheaper.\n∀x (SoldInWalmart(x) → Displayed(x)) ::: All sold in the US are sold in Walmart.\n∀x (Displayed(x) → SoldInWalmart(x)) ::: All displayed on the homepage are sold in Walmart.\n∀x (Returned(x) → ¬SoldInWalmart(x)) ::: No products returned by customers are"
    ]
  },
  {
    "id": "FOLIO_train_219",
    "context": "People either order a lot of Amazon packages or are environmentally conscious. If people order a lot of Amazon packages, then they get a lot of daily mail delivered. If people are environmentally conscious, then they have solar panels in their homes. If people get a lot of daily mail delivered, then they are very involved with their neighborhood. If people have solar panels in their homes, then they save a lot of money. If Marcy either gets a lot of mail and is very involved with her neighborhood or if she does not order a lot of Amazon packages nor is very involved with her neighborhood, then Marcy does not both get a lot of daily mail and order a lot of Amazon packages.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Marcy either orders a lot of Amazon packages or saves a lot of money.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nOrder(x) ::: x orders a lot of Amazon packages.\nConscious(x) ::: x is environmentally conscious.\nMail(x) ::: x gets a lot of daily mail delivered.\nPanel(x) ::: x has solar panels in their homes.\nInvolve(x) ::: x is very involved with their neighborhood.\nSave(x) ::: x saves a lot of money.\nPremises:\nOrder(x) ⊕ Conscious(x) ::: People either order a lot of Amazon packages or are environmentally conscious.\nOrder(x) → Mail(x) ::: If people order a lot of Amazon packages, then they get a lot of daily mail delivered.\nConscious(x) → Panel(x) ::: If people are environmentally conscious, then they have solar panels in their homes.\nMail(x) → Involve(x) ::: If people get a lot of daily mail delivered, then they are very involved with their neighborhood.\nPanel(x) → Save(x) ::: If people have solar panels in their homes, then they save a lot of money.\n¬(Order(marcy) ∧ Mail(marcy)) → (Order(marcy) ∨ Involve(marcy)) ⊕ ¬(Order(marcy) ∨ Involve(marcy)) ::: If Marcy either gets a lot of mail and is very involved with her"
    ]
  },
  {
    "id": "FOLIO_train_220",
    "context": "People either order a lot of Amazon packages or are environmentally conscious. If people order a lot of Amazon packages, then they get a lot of daily mail delivered. If people are environmentally conscious, then they have solar panels in their homes. If people get a lot of daily mail delivered, then they are very involved with their neighborhood. If people have solar panels in their homes, then they save a lot of money. If Marcy either gets a lot of mail and is very involved with her neighborhood or if she does not order a lot of Amazon packages nor is very involved with her neighborhood, then Marcy does not both get a lot of daily mail and order a lot of Amazon packages.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Marcy is not a person who orders a lot of Amazon packages and is very environmentally conscious, then Taylor is not someone who saves a lot of money and is environmentally conscious.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nOrder(x) ::: x orders a lot of Amazon packages.\nConscious(x) ::: x is environmentally conscious.\nMail(x) ::: x gets a lot of daily mail delivered.\nInvolved(x) ::: x is very involved with their neighborhood.\nSolar(x) ::: x has solar panels in their homes.\nSave(x) ::: x saves a lot of money.\nPremises:\nOrder(x) ⊕ Conscious(x) ::: People either order a lot of Amazon packages or are environmentally conscious.\nOrder(x) → Mail(x) ::: If people order a lot of Amazon packages, then they get a lot of daily mail delivered.\nConscious(x) → Solar(x) ::: If people are environmentally conscious, then they have solar panels in their homes.\nMail(x) → Involved(x) ::: If people get a lot of daily mail delivered, then they are very involved with their neighborhood.\nSolar(x) → Save(x) ::: If people have solar panels in their homes, then they save a lot of money.\n(Order(marcy) ∧ Mail(marcy)) ⊕ ¬(Order(marcy) ∨ Involved(marcy)) ::: If Marcy either gets a lot of mail and is very involved with her neighborhood or if she does not order a lot of Amazon packages nor is very involved with her neighborhood, then Marcy does not both get a lot of daily mail and order a lot of Amazon packages.\nConclusion:\n¬(Order(taylor) ∧ Conscious(taylor)) → ¬(Save(taylor) ∧ Conscious(taylor)) ::: If Marcy is not a person who orders a lot of Amazon packages and is very environmentally conscious, then Taylor is not someone who saves a lot of money and is environmentally conscious.\n------"
    ]
  },
  {
    "id": "FOLIO_train_221",
    "context": "Indonesia is a country. In Indonesia, the prosecutor only personally investigates cases of some special crimes. Corruption is a type of crime. Once the police complete investigations of a crime, they hand the evidence to the prosecutor. Evidence can be either satisfactory or unsatisfactory. If the police hand the evidence to the prosecutor and the evidence is satisfactory, the prosecutor will prosecute the offender in an appropriate court.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? When the police complete investigations, the prosecutor will prosecute the offender at an appropriate court.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCountry(x) ::: x is a country.\nProsecutor(x) ::: x is a prosecutor.\nInvestigate(x, y) ::: x investigates y.\nSpecialCrime(x) ::: x is a special crime.\nCorruption(x) ::: x is a corruption.\nCrime(x) ::: x is a crime.\nPolice(x) ::: x is a police.\nEvidence(x) ::: x is an evidence.\nSatisfactory(x) ::: x is satisfactory.\nUnsatisfactory(x) ::: x is unsatisfactory.\nProsecute(x, y) ::: x prosecutes y.\nOffender(x) ::: x is an offender.\nCourt(x) ::: x is a court.\nAppropriate(x) ::: x is appropriate.\nPremises:\nCountry(indonesia) ::: Indonesia is a country.\nProsecutor(prosecutor) ∧ Investigate(prosecutor, specialCrime) ::: In Indonesia, the prosecutor only personally investigates cases of some special crimes.\nCrime(corruption) ::: Corruption is a type of crime.\nPolice(police) ∧ Investigate(police, crime) ::: Once the police complete investigations of a crime, they hand the evidence to the prosecutor.\nEvidence(evidence) ∧ Satisfactory(evidence) ∧ Unsatisfactory(evidence) ::: Evidence can be either satisfactory or unsatisfactory.\nPolice(police) ∧ Evidence(evidence) ∧ Satisfactory(evidence) ∧ Prosecutor(prosecutor) ∧ Prosecute(prosecutor, offender) ∧ Court(court) ∧ Appropriate(court) :"
    ]
  },
  {
    "id": "FOLIO_train_222",
    "context": "Indonesia is a country. In Indonesia, the prosecutor only personally investigates cases of some special crimes. Corruption is a type of crime. Once the police complete investigations of a crime, they hand the evidence to the prosecutor. Evidence can be either satisfactory or unsatisfactory. If the police hand the evidence to the prosecutor and the evidence is satisfactory, the prosecutor will prosecute the offender in an appropriate court.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? In Indonesia, the prosecutor personally investigates cases of corruption.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCountry(x) ::: x is a country.\nProsecutor(x) ::: x is a prosecutor.\nInvestigate(x, y) ::: x investigates y.\nPersonally(x, y) ::: x personally investigates y.\nSpecialCrime(x) ::: x is a type of special crime.\nCorruption(x) ::: x is a type of corruption.\nCrime(x) ::: x is a type of crime.\nPolice(x) ::: x is a police.\nComplete(x, y) ::: x completes y.\nInvestigation(x) ::: x is an investigation.\nEvidence(x) ::: x is a piece of evidence.\nSatisfactory(x) ::: x is satisfactory.\nUnsatisfactory(x) ::: x is unsatisfactory.\nHand(x, y) ::: x hands y.\nProsecute(x, y) ::: x prosecutes y.\nOffender(x) ::: x is an offender.\nCourt(x) ::: x is a court.\nAppropriate(x, y) ::: x is appropriate for y.\nPremises:\nCountry(indonesia) ::: Indonesia is a country.\nProsecutor(prosecutor) ::: In Indonesia, the prosecutor only personally investigates cases of some special crimes.\nSpecialCrime(corruption) ::: Corruption is a type of crime.\nPolice(police) ::: Once the police complete investigations of a crime, they hand the evidence to the prosecutor.\nComplete(police, investigation) ::: Evidence can be either satisfactory or unsatisfactory.\nEvidence(evidence) ::: If the police hand the evidence to the prosecutor and the evidence is satisfactory, the prosecutor will pro"
    ]
  },
  {
    "id": "FOLIO_train_223",
    "context": "Indonesia is a country. In Indonesia, the prosecutor only personally investigates cases of some special crimes. Corruption is a type of crime. Once the police complete investigations of a crime, they hand the evidence to the prosecutor. Evidence can be either satisfactory or unsatisfactory. If the police hand the evidence to the prosecutor and the evidence is satisfactory, the prosecutor will prosecute the offender in an appropriate court.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? When the police complete investigations, the prosecutor investigates in personally.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCountry(x) ::: x is a country.\nProsecutor(x) ::: x is a prosecutor.\nInvestigate(x, y) ::: x investigates y.\nPersonally(x) ::: x investigates personally.\nSpecialCrime(x) ::: x is a type of special crime.\nCorruption(x) ::: x is a type of corruption.\nCrime(x) ::: x is a type of crime.\nPolice(x) ::: x is a police.\nComplete(x, y) ::: x completes y.\nEvidence(x) ::: x is a type of evidence.\nSatisfactory(x) ::: x is satisfactory.\nUnsatisfactory(x) ::: x is unsatisfactory.\nHand(x, y) ::: x hands y.\nProsecute(x, y) ::: x prosecutes y.\nOffender(x) ::: x is an offender.\nCourt(x) ::: x is a court.\nAppropriate(x) ::: x is appropriate.\nPremises:\nCountry(indonesia) ::: Indonesia is a country.\nProsecutor(prosecutor) ∧ Personally(prosecutor) ∧ Investigate(prosecutor, specialCrime) ::: In Indonesia, the prosecutor only personally investigates cases of some special crimes.\nCorruption(corruption) ∧ Crime(corruption) ::: Corruption is a type of crime.\nPolice(police) ∧ Complete(police, crime) ∧ Hand(police, evidence) ::: Once the police complete investigations of a crime, they hand the evidence to the prosecutor.\nEvidence(evidence) ∧ Satisfactory(evidence) ∧ Unsatisfactory(evidence) ::: Evidence"
    ]
  },
  {
    "id": "FOLIO_train_224",
    "context": "No watch that is battery-powered is automatic. All digital watches are battery-powered. Some mechanical watches are automatic. All smart watches are digital. Moonwatch is not a digital watch or an automatic.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Moonwatch is a mechanical watch.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBatteryPowered(x) ::: x is battery-powered.\nDigital(x) ::: x is digital.\nMechanical(x) ::: x is mechanical.\nAutomatic(x) ::: x is automatic.\nSmart(x) ::: x is smart.\nPremises:\n¬(BatteryPowered(x) ∧ Automatic(x)) ::: No watch that is battery-powered is automatic.\n∀x (Digital(x) → BatteryPowered(x)) ::: All digital watches are battery-powered.\n∃x (Mechanical(x) ∧ Automatic(x)) ::: Some mechanical watches are automatic.\n∀x (Smart(x) → Digital(x)) ::: All smart watches are digital.\n¬(Digital(moonwatch) ∨ Automatic(moonwatch)) ::: Moonwatch is not a digital watch or an automatic.\nConclusion:\nMechanical(moonwatch) ::: Moonwatch is a mechanical watch.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffe"
    ]
  },
  {
    "id": "FOLIO_train_225",
    "context": "No watch that is battery-powered is automatic. All digital watches are battery-powered. Some mechanical watches are automatic. All smart watches are digital. Moonwatch is not a digital watch or an automatic.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Moonwatch is a smartwatch and a mechanical watch.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBatteryPowered(x) ::: x is battery-powered.\nDigital(x) ::: x is digital.\nMechanical(x) ::: x is mechanical.\nAutomatic(x) ::: x is automatic.\nSmart(x) ::: x is smart.\nPremises:\n¬∃x (BatteryPowered(x) ∧ Automatic(x)) ::: No watch that is battery-powered is automatic.\n∀x (Digital(x) → BatteryPowered(x)) ::: All digital watches are battery-powered.\n∃x (Mechanical(x) ∧ Automatic(x)) ::: Some mechanical watches are automatic.\n∀x (Smart(x) → Digital(x)) ::: All smart watches are digital.\n¬(Digital(moonwatch) ∨ Automatic(moonwatch)) ::: Moonwatch is not a digital watch or an automatic.\nConclusion:\nSmart(moonwatch) ∧ Mechanical(moonwatch) ::: Moonwatch is a smartwatch and a mechanical watch.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is"
    ]
  },
  {
    "id": "FOLIO_train_226",
    "context": "No watch that is battery-powered is automatic. All digital watches are battery-powered. Some mechanical watches are automatic. All smart watches are digital. Moonwatch is not a digital watch or an automatic.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Moonwatch is a smartwatch and a mechanical watch, then Moonwatch is not a mechanical watch.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBatteryPowered(x) ::: x is battery-powered.\nDigital(x) ::: x is digital.\nMechanical(x) ::: x is mechanical.\nAutomatic(x) ::: x is automatic.\nSmart(x) ::: x is smart.\nPremises:\n¬(BatteryPowered(x) ∧ Automatic(x)) ::: No watch that is battery-powered is automatic.\n∀x (Digital(x) → BatteryPowered(x)) ::: All digital watches are battery-powered.\n∃x (Mechanical(x) ∧ Automatic(x)) ::: Some mechanical watches are automatic.\n∀x (Smart(x) → Digital(x)) ::: All smart watches are digital.\n¬(Digital(moonwatch) ∨ Automatic(moonwatch)) ::: Moonwatch is not a digital watch or an automatic.\nConclusion:\n¬(Smart(moonwatch) ∧ Mechanical(moonwatch)) ::: If Moonwatch is a smartwatch and a mechanical watch, then Moonwatch is not a mechanical watch.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true"
    ]
  },
  {
    "id": "FOLIO_train_227",
    "context": "No watch that is battery-powered is automatic. All digital watches are battery-powered. Some mechanical watches are automatic. All smart watches are digital. Moonwatch is not a digital watch or an automatic.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Moonwatch is a mechanical or battery-powered watch, then Moonwatch is not a smartwatch.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBatteryPowered(x) ::: x is battery-powered.\nDigital(x) ::: x is digital.\nMechanical(x) ::: x is mechanical.\nAutomatic(x) ::: x is automatic.\nSmart(x) ::: x is smart.\nPremises:\n¬(BatteryPowered(x) ∧ Automatic(x)) ::: No watch that is battery-powered is automatic.\n∀x (Digital(x) → BatteryPowered(x)) ::: All digital watches are battery-powered.\n∃x (Mechanical(x) ∧ Automatic(x)) ::: Some mechanical watches are automatic.\n∀x (Smart(x) → Digital(x)) ::: All smart watches are digital.\n¬(Digital(moonwatch) ∨ Automatic(moonwatch)) ::: Moonwatch is not a digital watch or an automatic.\nConclusion:\n¬(Mechanical(moonwatch) ∨ BatteryPowered(moonwatch)) → ¬Smart(moonwatch) ::: If Moonwatch is a mechanical or battery-powered watch, then Moonwatch is not a smartwatch.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a"
    ]
  },
  {
    "id": "FOLIO_train_228",
    "context": "If a person can distinguish the taste of different condiments, then he/she can also use different condiments to cook. People who have the talent of cooking can distinguish the taste of different condiments. Only people with the talent of cooking can make delicious meals. If the meal is popular at the party, then it is delicious. John can make meals which are popular at the party.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? John cannot use different condiments to cook.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDistinguish(x, y) ::: x can distinguish the taste of y.\nUse(x, y) ::: x can use y.\nCook(x) ::: x can cook.\nTalent(x) ::: x has the talent of cooking.\nDelicious(x) ::: x is delicious.\nPopular(x) ::: x is popular.\nParty(x) ::: x is a party.\nMake(x, y) ::: x can make y.\nPremises:\n∀x (Distinguish(x, condiment) → Use(x, condiment)) ::: If a person can distinguish the taste of different condiments, then he/she can also use different condiments to cook.\n∀x (Talent(x) → Distinguish(x, condiment)) ::: People who have the talent of cooking can distinguish the taste of different condiments.\n∀x (Cook(x) → Talent(x)) ::: Only people with the talent of cooking can make delicious meals.\n∀x (Popular(x) → Delicious(x)) ::: If the meal is popular at the party, then it is delicious.\nMake(john, meal) ∧ Popular(meal) ∧ Party(party) ::: John can make meals which are popular at the party.\nConclusion:\n¬Use(john, condiment) ::: John cannot use different condiments to cook.\n------\nProblem:\nIf a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/she is a person. If a person is a student, then he/"
    ]
  },
  {
    "id": "FOLIO_train_229",
    "context": "Effective monetary policy is possible with successful inflation control and a strong national currency. A country cannot simultaneously regulate the exchange rate and successfully control inflation. The introduction of an embargo on foreign trade goods in a country leads to a sharp decrease in exports. If exports fall sharply, the national currency cannot be in this country. Regulation of the exchange rate is required to have a strong national currency. There is an embargo on Russian foreign trade goods.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? In Russia, an effective monetary policy is possible.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEffective(x) ::: x is effective.\nMonetaryPolicy(x) ::: x is a monetary policy.\nInflationControl(x) ::: x is an inflation control.\nStrong(x) ::: x is strong.\nNationalCurrency(x) ::: x is a national currency.\nRegulate(x, y) ::: x regulates y.\nExchangeRate(x) ::: x is an exchange rate.\nEmbargo(x) ::: x is an embargo.\nForeignTradeGoods(x) ::: x is a foreign trade goods.\nExport(x) ::: x is an export.\nSharply(x) ::: x is sharply.\nDecrease(x) ::: x is a decrease.\nPremises:\nEffective(monetaryPolicy) ∧ InflationControl(monetaryPolicy) ∧ Strong(nationalCurrency) ::: Effective monetary policy is possible with successful inflation control and a strong national currency.\n¬(Regulate(x, exchangeRate) ∧ Regulate(x, inflationControl)) ::: A country cannot simultaneously regulate the exchange rate and successfully control inflation.\nEmbargo(russia) ∧ ForeignTradeGoods(x) ∧ Export(x) ∧ Sharply(decrease) ::: The introduction of an embargo on foreign trade goods in a country leads to a sharp decrease in exports.\n¬(Sharply(decrease) ∧ Strong(nationalCurrency)) ::: If exports fall sharply, the national currency cannot be in this country.\nRegulate(x, exchangeRate) → Strong(nationalCurrency) ::: Regulation of the exchange rate is required to have a strong national currency.\nEmbargo(russia) ∧ ForeignTradeGoods(x)"
    ]
  },
  {
    "id": "FOLIO_train_230",
    "context": "Video Gag is a French television series that airs weekly. Video Gag airs on the French broadcast channel TF1. If viewers send in funny videos to the French broadcast channel, then Video Gag airs them on television. All videos aired on Video Gag are in French.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Viewers send in funny videos to the French broadcast channel that are in French.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAirs(x, y) ::: x airs y.\nChannel(x) ::: x is a broadcast channel.\nFrench(x) ::: x is in French.\nFunny(x) ::: x is funny.\nSend(x, y) ::: x sends y.\nVideo(x) ::: x is a video.\nPremises:\nAirs(videoGag, weekly) ∧ Channel(tf1) ∧ Airs(videoGag, tf1) ::: Video Gag is a French television series that airs weekly. Video Gag airs on the French broadcast channel TF1.\nAirs(videoGag, x) ∧ Channel(x) → French(x) ::: If viewers send in funny videos to the French broadcast channel, then Video Gag airs them on television.\n∀x (Airs(videoGag, x) → French(x)) ::: All videos aired on Video Gag are in French.\nConclusion:\nSend(viewers, x) ∧ Channel(x) ∧ French(x) ∧ Funny(x) ::: Viewers send in funny videos to the French broadcast channel that are in French.\n------"
    ]
  },
  {
    "id": "FOLIO_train_231",
    "context": "Video Gag is a French television series that airs weekly. Video Gag airs on the French broadcast channel TF1. If viewers send in funny videos to the French broadcast channel, then Video Gag airs them on television. All videos aired on Video Gag are in French.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Viewers send in funny videos to the French broadcast channel that are in English.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAirs(x, y) ::: x airs y.\nChannel(x) ::: x is a broadcast channel.\nFrench(x) ::: x is in French.\nSend(x, y) ::: x sends y.\nVideo(x) ::: x is a video.\nPremises:\nAirs(videoGag, weekly) ::: Video Gag is a French television series that airs weekly.\nAirs(videoGag, tf1) ::: Video Gag airs on the French broadcast channel TF1.\n(Send(viewers, videos) ∧ Channel(frenchBroadcastChannel)) → Airs(videoGag, videos) ::: If viewers send in funny videos to the French broadcast channel, then Video Gag airs them on television.\n∀x (Airs(videoGag, x) → French(x)) ::: All videos aired on Video Gag are in French.\nConclusion:\n¬Send(viewers, videos) ∨ ¬Channel(frenchBroadcastChannel) ∨ ¬French(videos) ::: Viewers send in funny videos to the French broadcast channel that are in English.\n------\nProblem:\nThe"
    ]
  },
  {
    "id": "FOLIO_train_232",
    "context": "All phones are things. All cellphones are phones. All iPhones are cellphones. All engineers are workers. All workers are human. Jack is either an engineer or a worker. Jack is is either a human or a phone.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jack is a thing.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nThing(x) ::: x is a thing.\nPhone(x) ::: x is a phone.\nCellphone(x) ::: x is a cellphone.\nIPhone(x) ::: x is an iPhone.\nEngineer(x) ::: x is an engineer.\nWorker(x) ::: x is a worker.\nHuman(x) ::: x is a human.\nPremises:\n∀x (Phone(x) → Thing(x)) ::: All phones are things.\n∀x (Cellphone(x) → Phone(x)) ::: All cellphones are phones.\n∀x (IPhone(x) → Cellphone(x)) ::: All iPhones are cellphones.\n∀x (Engineer(x) → Worker(x)) ::: All engineers are workers.\n∀x (Worker(x) → Human(x)) ::: All workers are human.\n(Engineer(jack) ∨ Worker(jack)) ∧ (Human(jack) ∨ Phone(jack)) ::: Jack is either an engineer or a worker. Jack is is either a human or a phone.\nConclusion:\nThing(jack) ::: Jack is a thing"
    ]
  },
  {
    "id": "FOLIO_train_233",
    "context": "All phones are things. All cellphones are phones. All iPhones are cellphones. All engineers are workers. All workers are human. Jack is either an engineer or a worker. Jack is is either a human or a phone.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jack is not a thing.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nThing(x) ::: x is a thing.\nPhone(x) ::: x is a phone.\nCellphone(x) ::: x is a cellphone.\nIPhone(x) ::: x is an iPhone.\nEngineer(x) ::: x is an engineer.\nWorker(x) ::: x is a worker.\nHuman(x) ::: x is a human.\nPremises:\n∀x (Phone(x) → Thing(x)) ::: All phones are things.\n∀x (Cellphone(x) → Phone(x)) ::: All cellphones are phones.\n∀x (IPhone(x) → Cellphone(x)) ::: All iPhones are cellphones.\n∀x (Engineer(x) → Worker(x)) ::: All engineers are workers.\n∀x (Worker(x) → Human(x)) ::: All workers are human.\n(Engineer(jack) ∨ Worker(jack)) ∧ (Human(jack) ∨ Phone(jack)) ::: Jack is either an engineer or a worker. Jack is is either a human or a phone.\nConclusion:\n¬Thing(jack) ::: Jack is not"
    ]
  },
  {
    "id": "FOLIO_train_234",
    "context": "All phones are things. All cellphones are phones. All iPhones are cellphones. All engineers are workers. All workers are human. Jack is either an engineer or a worker. Jack is is either a human or a phone.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jack is a thing and an iPhone.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nThing(x) ::: x is a thing.\nPhone(x) ::: x is a phone.\nCellphone(x) ::: x is a cellphone.\nIPhone(x) ::: x is an iPhone.\nEngineer(x) ::: x is an engineer.\nWorker(x) ::: x is a worker.\nHuman(x) ::: x is a human.\nPremises:\n∀x (Phone(x) → Thing(x)) ::: All phones are things.\n∀x (Cellphone(x) → Phone(x)) ::: All cellphones are phones.\n∀x (IPhone(x) → Cellphone(x)) ::: All iPhones are cellphones.\n∀x (Engineer(x) → Worker(x)) ::: All engineers are workers.\n∀x (Worker(x) → Human(x)) ::: All workers are human.\n(Engineer(jack) ∨ Worker(jack)) ∧ (Human(jack) ∨ Phone(jack)) ::: Jack is either an engineer or a worker. Jack is is either a human or a phone.\nConclusion:\nThing(jack) ∧ IPhone(jack"
    ]
  },
  {
    "id": "FOLIO_train_235",
    "context": "All phones are things. All cellphones are phones. All iPhones are cellphones. All engineers are workers. All workers are human. Jack is either an engineer or a worker. Jack is is either a human or a phone.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jack is not both a thing and an iPhone.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nThing(x) ::: x is a thing.\nPhone(x) ::: x is a phone.\nCellphone(x) ::: x is a cellphone.\nIPhone(x) ::: x is an iPhone.\nEngineer(x) ::: x is an engineer.\nWorker(x) ::: x is a worker.\nHuman(x) ::: x is a human.\nPremises:\n∀x (Phone(x) → Thing(x)) ::: All phones are things.\n∀x (Cellphone(x) → Phone(x)) ::: All cellphones are phones.\n∀x (IPhone(x) → Cellphone(x)) ::: All iPhones are cellphones.\n∀x (Engineer(x) → Worker(x)) ::: All engineers are workers.\n∀x (Worker(x) → Human(x)) ::: All workers are human.\n(Engineer(jack) ∨ Worker(jack)) ∧ (Human(jack) ∨ Phone(jack)) ::: Jack is either an engineer or a worker. Jack is is either a human or a phone.\nConclusion:\n¬(Thing(jack) ∧ IPhone"
    ]
  },
  {
    "id": "FOLIO_train_236",
    "context": "All iPhones are electronic. Some phones are iPhones.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? No phones are electronic.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nElectronic(x) ::: x is electronic.\nPhone(x) ::: x is a phone.\nIPhone(x) ::: x is an iPhone.\nPremises:\n∀x (IPhone(x) → Electronic(x)) ::: All iPhones are electronic.\n∃x (Phone(x) ∧ IPhone(x)) ::: Some phones are iPhones.\nConclusion:\n¬∃x (Phone(x) ∧ Electronic(x)) ::: No phones are electronic.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased"
    ]
  },
  {
    "id": "FOLIO_train_237",
    "context": "Metropolitan Museum of Art is a museum in NYC. Whitney Museum of American Art is a museum in NYC. Museum of Modern Art (MoMA) is a museum if NYC. Metropolitan Museum of Art includes Bytantine and Islamic Art. Whitney Museum of American Art includes American art.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A museum in NYC includes Byzantine and Islamic Art.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMuseum(x) ::: x is a museum.\nNYC(x) ::: x is in NYC.\nByzantineAndIslamicArt(x) ::: x includes Byzantine and Islamic Art.\nAmericanArt(x) ::: x includes American art.\nPremises:\nMuseum(metropolitanMuseumOfArt) ∧ NYC(metropolitanMuseumOfArt) ∧ ByzantineAndIslamicArt(metropolitanMuseumOfArt) ::: Metropolitan Museum of Art is a museum in NYC.\nMuseum(whitneyMuseumOfAmericanArt) ∧ NYC(whitneyMuseumOfAmericanArt) ∧ AmericanArt(whitneyMuseumOfAmericanArt) ::: Whitney Museum of American Art is a museum in NYC.\nMuseum(museumOfModernArt) ∧ NYC(museumOfModernArt) ::: Museum of Modern Art (MoMA) is a museum if NYC.\nConclusion:\n∃x (Museum(x) ∧ NYC(x) ∧ ByzantineAndIslamicArt(x)) ::: A museum in NYC includes Byzantine and Islamic Art.\n------"
    ]
  },
  {
    "id": "FOLIO_train_238",
    "context": "Metropolitan Museum of Art is a museum in NYC. Whitney Museum of American Art is a museum in NYC. Museum of Modern Art (MoMA) is a museum if NYC. Metropolitan Museum of Art includes Bytantine and Islamic Art. Whitney Museum of American Art includes American art.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A museum in NYC includes American art.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMuseum(x) ::: x is a museum.\nNYC(x) ::: x is in NYC.\nByzantineAndIslamicArt(x) ::: x includes Byzantine and Islamic Art.\nAmericanArt(x) ::: x includes American art.\nPremises:\nMuseum(metropolitanMuseumOfArt) ∧ NYC(metropolitanMuseumOfArt) ∧ ByzantineAndIslamicArt(metropolitanMuseumOfArt) ::: Metropolitan Museum of Art is a museum in NYC.\nMuseum(whitneyMuseumOfAmericanArt) ∧ NYC(whitneyMuseumOfAmericanArt) ∧ AmericanArt(whitneyMuseumOfAmericanArt) ::: Whitney Museum of American Art is a museum in NYC.\nMuseum(museumOfModernArt) ∧ NYC(museumOfModernArt) ::: Museum of Modern Art (MoMA) is a museum if NYC.\nConclusion:\n∃x (Museum(x) ∧ NYC(x) ∧ AmericanArt(x)) ::: A museum in NYC includes American art.\n------\nProblem:\nA person is a student if and only"
    ]
  },
  {
    "id": "FOLIO_train_239",
    "context": "Metropolitan Museum of Art is a museum in NYC. Whitney Museum of American Art is a museum in NYC. Museum of Modern Art (MoMA) is a museum if NYC. Metropolitan Museum of Art includes Bytantine and Islamic Art. Whitney Museum of American Art includes American art.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A museum in NYC includes Greek art.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMuseum(x) ::: x is a museum.\nNYC(x) ::: x is in NYC.\nByzantine(x) ::: x is Byzantine art.\nIslamic(x) ::: x is Islamic art.\nAmerican(x) ::: x is American art.\nGreek(x) ::: x is Greek art.\nPremises:\nMuseum(metropolitanMuseumOfArt) ∧ NYC(metropolitanMuseumOfArt) ::: Metropolitan Museum of Art is a museum in NYC.\nMuseum(whitneyMuseumOfAmericanArt) ∧ NYC(whitneyMuseumOfAmericanArt) ::: Whitney Museum of American Art is a museum in NYC.\nMuseum(museumOfModernArt) ∧ NYC(museumOfModernArt) ::: Museum of Modern Art (MoMA) is a museum if NYC.\nMuseum(metropolitanMuseumOfArt) ∧ Byzantine(byzantineAndIslamicArt) ∧ Include(metropolitanMuseumOfArt, byzantineAndIslamicArt) ::: Metropolitan Museum of Art includes Bytantine and Islamic Art."
    ]
  },
  {
    "id": "FOLIO_train_240",
    "context": "A person either likes eating cheese or is a francophile. No francophiles are people who like Spain as their favorite country. A person likes Spain as their favorite country or likes eating cheese. Benji is not a person who likes eating cheese and a person who studies Spanish. If Benji is neither a person who studies Spanish nor a person that studies French, then Benji is a person who studies Spanish or a person that studies French.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Benji is a person who likes eating cheese.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFrancophile(x) ::: x is a francophile.\nLike(x, y) ::: x likes y.\nFavorite(x, y) ::: x likes y as their favorite country.\nStudy(x, y) ::: x studies y.\nSpanish(x) ::: x is Spanish.\nFrench(x) ::: x is French.\nPremises:\n(Like(x, cheese) ∨ Favorite(x, spain)) ::: A person either likes eating cheese or is a francophile.\n¬(Francophile(x) ∧ Favorite(x, spain)) ::: No francophiles are people who like Spain as their favorite country.\n(Favorite(x, spain) ∨ Like(x, cheese)) ::: A person likes Spain as their favorite country or likes eating cheese.\n¬(Like(benji, cheese) ∧ Study(benji, spanish)) ::: Benji is not a person who likes eating cheese and a person who studies Spanish.\n¬(Study(benji, spanish) ∨ Study(benji, french)) → (Study(benji, spanish) ∨ Study(benji, french)) ::: If Benji is neither a person who studies Spanish nor a person that studies French, then Benji is a person who studies Spanish or a person that studies French.\nConclusion:\nLike(benji, cheese) ::: Benji is a person who likes eating cheese.\n------"
    ]
  },
  {
    "id": "FOLIO_train_241",
    "context": "A person either likes eating cheese or is a francophile. No francophiles are people who like Spain as their favorite country. A person likes Spain as their favorite country or likes eating cheese. Benji is not a person who likes eating cheese and a person who studies Spanish. If Benji is neither a person who studies Spanish nor a person that studies French, then Benji is a person who studies Spanish or a person that studies French.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Benji is either a person who likes eating cheese or a francophile, then Benji is neither a person who studies Spanish nor a person who studies French.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFrancophile(x) ::: x is a francophile.\nLike(x, y) ::: x likes y.\nStudy(x, y) ::: x studies y.\nPremises:\nLike(x, cheese) ⊕ ¬Like(x, spain) ::: A person either likes eating cheese or is a francophile.\n¬(Francophile(x) ∧ Like(x, spain)) ::: No francophiles are people who like Spain as their favorite country.\nLike(x, spain) ∨ Like(x, cheese) ::: A person likes Spain as their favorite country or likes eating cheese.\n¬(Study(benji, spanish) ∧ Like(benji, cheese)) ::: Benji is not a person who likes eating cheese and a person who studies Spanish.\n¬(Study(benji, spanish) ∨ Study(benji, french)) → (Study(benji, spanish) ∨ Study(benji, french)) ::: If Benji is neither a person who studies Spanish nor a person that studies French, then Benji is a person who studies Spanish or a person that studies French.\nConclusion:\n¬(Francophile(benji) ∨ Like(benji, cheese)) ∧ ¬(Study(benji, spanish) ∨ Study(benji, french)) ::: If Benji is either a person who likes eating cheese or a francophile, then Benji is neither a"
    ]
  },
  {
    "id": "FOLIO_train_242",
    "context": "A person either likes eating cheese or is a francophile. No francophiles are people who like Spain as their favorite country. A person likes Spain as their favorite country or likes eating cheese. Benji is not a person who likes eating cheese and a person who studies Spanish. If Benji is neither a person who studies Spanish nor a person that studies French, then Benji is a person who studies Spanish or a person that studies French.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Benji is a person who likes Spain as their favorite country or studies French, then Benji is either a person who studies Spanish or a person who likes Spain as their favorite country.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFrancophile(x) ::: x is a francophile.\nLike(x, y) ::: x likes y.\nStudy(x, y) ::: x studies y.\nPremises:\nLike(x, cheese) ⊕ ¬Like(x, spain) ::: A person either likes eating cheese or is a francophile.\n¬Francophile(x) ∧ Like(x, spain) ::: No francophiles are people who like Spain as their favorite country.\nLike(x, spain) ∨ Like(x, cheese) ::: A person likes Spain as their favorite country or likes eating cheese.\n¬Like(benji, cheese) ∧ ¬Study(benji, spanish) ::: Benji is not a person who likes eating cheese and a person who studies Spanish.\n¬Study(benji, spanish) ∨ ¬Study(benji, french) → Study(benji, spanish) ∨ Study(benji, french) ::: If Benji is neither a person who studies Spanish nor a person that studies French, then Benji is a person who studies Spanish or a person that studies French.\nConclusion:\nStudy(benji, spanish) ∨ Study(benji, french) ∨ Like(benji, spain) ::: If Benji is a person who likes Spain as their favorite country or studies French, then Benji is either a person who studies Spanish or a person who likes Spain as their favorite country."
    ]
  },
  {
    "id": "FOLIO_train_243",
    "context": "Gasteren is village located in the province of Drenthe. Drenthe is a Dutch province. No cities are villages. The population of a village in Drenthe was 155 people.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Gasteren is a Dutch village.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nVillage(x) ::: x is a village.\nCity(x) ::: x is a city.\nProvince(x) ::: x is a province.\nDutch(x) ::: x is Dutch.\nPopulation(x, y) ::: x has a population of y people.\nPremises:\nVillage(gasteren) ∧ Province(drenthe) ::: Gasteren is village located in the province of Drenthe.\nProvince(drenthe) ∧ Dutch(drenthe) ::: Drenthe is a Dutch province.\n¬∃x (City(x) ∧ Village(x)) ::: No cities are villages.\nPopulation(gasteren, 155) ::: The population of a village in Drenthe was 155 people.\nConclusion:\nDutch(gasteren) ::: Gasteren is a Dutch village.\n------\nProblem:\nThe first person to be called a mathematician was Thales of Miletus. Thales of Miletus was a Greek philosopher. No Greek philosopher was a mathematician.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Thales of Miletus was a mathematician.\nBased on the above information, is the following statement true, false, or uncertain? Thales of Miletus was a Greek philosopher.\nBased on the above information, is the following statement true, false, or uncertain? Thales of Miletus was a mathematician.\n##"
    ]
  },
  {
    "id": "FOLIO_train_244",
    "context": "Gasteren is village located in the province of Drenthe. Drenthe is a Dutch province. No cities are villages. The population of a village in Drenthe was 155 people.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Gasteren is a city.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCity(x) ::: x is a city.\nVillage(x) ::: x is a village.\nProvince(x) ::: x is a province.\nDutch(x) ::: x is a Dutch province.\nPopulation(x, y) ::: x has a population of y people.\nPremises:\nVillage(gasteren) ∧ Province(drenthe) ∧ Dutch(drenthe) ::: Gasteren is village located in the province of Drenthe. Drenthe is a Dutch province.\n¬∀x (City(x) ∧ Village(x)) ::: No cities are villages.\nPopulation(village, 155) ∧ Province(drenthe) ∧ Village(village) ::: The population of a village in Drenthe was 155 people.\nConclusion:\n¬City(gasteren) ::: Gasteren is a city.\n------\nProblem:\nThe first person to reach the summit of Mount Everest was Edmund Hillary. Edmund Hillary was a New Zealander. Edmund Hillary was a mountaineer. Edmund Hillary was a philanthropist. Edmund Hillary was a beekeeper. Edmund Hillary was a writer. Edmund Hillary was a photographer. Edmund Hillary was a navigator. Edmund Hillary was a filmmaker. Edmund Hillary was a politician. Edmund Hillary was a humanitarian. Edmund Hillary was a philosopher. Edmund Hillary was a scientist. Edmund Hillary was a doctor. Edmund Hillary was a lawyer. Edmund Hillary was a judge."
    ]
  },
  {
    "id": "FOLIO_train_245",
    "context": "Gasteren is village located in the province of Drenthe. Drenthe is a Dutch province. No cities are villages. The population of a village in Drenthe was 155 people.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Gasteren has a population of 155.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nVillage(x) ::: x is a village.\nCity(x) ::: x is a city.\nProvince(x) ::: x is a province.\nDutch(x) ::: x is a Dutch province.\nPopulation(x, y) ::: x has a population of y.\nPremises:\nVillage(gasteren) ∧ Province(drenthe) ∧ Dutch(drenthe) ::: Gasteren is village located in the province of Drenthe. Drenthe is a Dutch province.\n¬∃x (City(x) ∧ Village(x)) ::: No cities are villages.\nPopulation(village, 155) ∧ Province(village, drenthe) ::: The population of a village in Drenthe was 155 people.\nConclusion:\nPopulation(gasteren, 155) ::: Gasteren has a population of 155.\n------\nProblem:\nThe first person to be called a mathematician was Thales of Miletus. Thales of Miletus was a Greek philosopher. No Greek philosopher was a mathematician.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Thales of Miletus was a mathematician.\nBased on the above information, is the following statement true, false, or uncertain? Thales of Miletus was a Greek philosopher.\nBased on the above information, is the following statement true, false, or uncertain? Thales of M"
    ]
  },
  {
    "id": "FOLIO_train_246",
    "context": "The only types of mammals that lay eggs are platypuses and echidnas. Platypuses are not hyrax. Echidnas are not hyrax. No mammals are invertebrates. All animals are either vertebrates or invertebrates. Mammals are animals. Hyraxes are mammals. Grebes lay eggs. Grebes are not platypuses and also not echidnas.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Hyraxes lay eggs.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMammal(x) ::: x is a mammal.\nEgg(x) ::: x lays eggs.\nHyrax(x) ::: x is a hyrax.\nInvertebrate(x) ::: x is an invertebrate.\nVertebrate(x) ::: x is a vertebrate.\nAnimal(x) ::: x is an animal.\nPlatypus(x) ::: x is a platypus.\nEchidna(x) ::: x is an echidna.\nPremises:\n∀x (Mammal(x) → ¬Egg(x)) ::: The only types of mammals that lay eggs are platypuses and echidnas.\n¬Platypus(hyrax) ∧ ¬Echidna(hyrax) ::: Platypuses are not hyrax. Echidnas are not hyrax.\n∀x (¬Invertebrate(x) ∧ ¬Vertebrate(x)) ::: No mammals are invertebrates.\n∀x (Animal(x) ∨ Invertebrate(x)) ::: All animals are either vertebrates or invertebrates.\n∀x (Mammal(x) → Animal(x)) ::: Mammals are animals.\nHyrax(hyrax) ::: Hyraxes are mammals.\nEgg(grebe) ::: Grebes lay eggs.\n¬Platypus(grebe) ∧ ¬Echidna(gre"
    ]
  },
  {
    "id": "FOLIO_train_247",
    "context": "The only types of mammals that lay eggs are platypuses and echidnas. Platypuses are not hyrax. Echidnas are not hyrax. No mammals are invertebrates. All animals are either vertebrates or invertebrates. Mammals are animals. Hyraxes are mammals. Grebes lay eggs. Grebes are not platypuses and also not echidnas.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Grebes are not mammals.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMammal(x) ::: x is a mammal.\nEgg(x) ::: x lays eggs.\nHyrax(x) ::: x is a hyrax.\nInvertebrate(x) ::: x is an invertebrate.\nVertebrate(x) ::: x is a vertebrate.\nAnimal(x) ::: x is an animal.\nPlatypus(x) ::: x is a platypus.\nEchidna(x) ::: x is an echidna.\nGrebe(x) ::: x is a grebe.\nPremises:\n∀x (Egg(x) → Mammal(x)) ::: The only types of mammals that lay eggs are platypuses and echidnas.\n¬Platypus(hyrax) ∧ ¬Echidna(hyrax) ::: Platypuses are not hyrax. Echidnas are not hyrax.\n¬∀x (Mammal(x) → Invertebrate(x)) ::: No mammals are invertebrates.\n∀x (Animal(x) → (Vertebrate(x) ∨ Invertebrate(x))) ::: All animals are either vertebrates or invertebrates.\n∀x (Mammal(x) → Animal(x)) ::: Mammals are animals.\nHyrax(hyrax) ::: Hyraxes are mammals.\nGrebe(grebe) ∧ ¬Platypus(gre"
    ]
  },
  {
    "id": "FOLIO_train_248",
    "context": "The only types of mammals that lay eggs are platypuses and echidnas. Platypuses are not hyrax. Echidnas are not hyrax. No mammals are invertebrates. All animals are either vertebrates or invertebrates. Mammals are animals. Hyraxes are mammals. Grebes lay eggs. Grebes are not platypuses and also not echidnas.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Platypuses are vertebrates.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMammal(x) ::: x is a mammal.\nEgg(x) ::: x lays eggs.\nHyrax(x) ::: x is a hyrax.\nInvertebrate(x) ::: x is an invertebrate.\nVertebrate(x) ::: x is a vertebrate.\nAnimal(x) ::: x is an animal.\nPlatypus(x) ::: x is a platypus.\nEchidna(x) ::: x is an echidna.\nGrebe(x) ::: x is a grebe.\nPremises:\n∀x (Mammal(x) → Egg(x)) ::: The only types of mammals that lay eggs are platypuses and echidnas.\n¬Platypus(hyrax) ∧ ¬Echidna(hyrax) ::: Platypuses are not hyrax. Echidnas are not hyrax.\n¬∀x (Mammal(x) → Invertebrate(x)) ::: No mammals are invertebrates.\n∀x (Animal(x) → (Vertebrate(x) ∨ Invertebrate(x))) ::: All animals are either vertebrates or invertebrates.\n∀x (Mammal(x) → Animal(x)) ::: Mammals are animals.\nHyrax(hyrax) ::: Hyraxes are mammals.\nGrebe(grebe) ∧ Egg(grebe) :::"
    ]
  },
  {
    "id": "FOLIO_train_249",
    "context": "Bobby Flynn is a singer-songwriter. Bobby Flynn finished 7th while competing on Australian Idol. Australian Idol competitors are Australian citizens. The Omega Three band made a nationwide tour in 2007. Bobby Flynn is a member of The Omega Three band. Bobby Flynn was born in Queensland.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Bobby Flynn is an Australian citizen.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSingerSongwriter(x) ::: x is a singer-songwriter.\nAustralianIdolCompetitor(x) ::: x is an Australian Idol competitor.\nAustralianCitizen(x) ::: x is an Australian citizen.\nOmegaThreeBandMember(x) ::: x is a member of The Omega Three band.\nBornIn(x, y) ::: x was born in y.\nPremises:\nSingerSongwriter(bobby) ::: Bobby Flynn is a singer-songwriter.\nAustralianIdolCompetitor(bobby) ∧ Finish(bobby, 7th) ∧ Competition(australianIdol) ::: Bobby Flynn finished 7th while competing on Australian Idol.\n∀x (AustralianIdolCompetitor(x) → AustralianCitizen(x)) ::: Australian Idol competitors are Australian citizens.\nOmegaThreeBandMember(bobby) ∧ NationwideTour(omegaThreeBand, 2007) ::: The Omega Three band made a nationwide tour in 2007.\nBornIn(bobby, queensland) ::: Bobby Flynn was born in Queensland.\nConclusion:\nAustralianCitizen(bobby) ::: Bobby Flynn is an Australian citizen.\n------\nProblem:\nThe 2008 Summer Olympics, officially known as the Games of the XXIX Olympiad, was a major international multi-sport event that took place in Beijing, China, from"
    ]
  },
  {
    "id": "FOLIO_train_250",
    "context": "Bobby Flynn is a singer-songwriter. Bobby Flynn finished 7th while competing on Australian Idol. Australian Idol competitors are Australian citizens. The Omega Three band made a nationwide tour in 2007. Bobby Flynn is a member of The Omega Three band. Bobby Flynn was born in Queensland.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Bobby Flynn flew to America in 2007.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSingerSongwriter(x) ::: x is a singer-songwriter.\nAustralianIdolCompetitor(x) ::: x is an Australian Idol competitor.\nAustralianCitizen(x) ::: x is an Australian citizen.\nOmegaThreeBandMember(x) ::: x is a member of The Omega Three band.\nBornIn(x, y) ::: x was born in y.\nPremises:\nSingerSongwriter(bobby) ::: Bobby Flynn is a singer-songwriter.\nAustralianIdolCompetitor(bobby) ∧ Finish(bobby, 7th) ::: Bobby Flynn finished 7th while competing on Australian Idol.\n∀x (AustralianIdolCompetitor(x) → AustralianCitizen(x)) ::: Australian Idol competitors are Australian citizens.\nOmegaThreeBandMember(bobby) ::: Bobby Flynn is a member of The Omega Three band.\nBornIn(bobby, queensland) ::: Bobby Flynn was born in Queensland.\nOmegaThreeBandMember(x) ∧ NationwideTour(x, year2007) ::: The Omega Three band made a nationwide tour in 2007.\nConclusion:\nFly(bobby, america) ∧ Year(2007) ::: Bobby Flynn flew to America in 2007.\n------"
    ]
  },
  {
    "id": "FOLIO_train_251",
    "context": "Bobby Flynn is a singer-songwriter. Bobby Flynn finished 7th while competing on Australian Idol. Australian Idol competitors are Australian citizens. The Omega Three band made a nationwide tour in 2007. Bobby Flynn is a member of The Omega Three band. Bobby Flynn was born in Queensland.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Bobby Flynn was born in Queens.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSingerSongwriter(x) ::: x is a singer-songwriter.\nAustralianIdolCompetitor(x) ::: x is an Australian Idol competitor.\nAustralianCitizen(x) ::: x is an Australian citizen.\nOmegaThreeBandMember(x) ::: x is a member of The Omega Three band.\nBornIn(x, y) ::: x was born in y.\nPremises:\nSingerSongwriter(bobby) ::: Bobby Flynn is a singer-songwriter.\nAustralianIdolCompetitor(bobby) ∧ BornIn(bobby, queensland) ::: Bobby Flynn finished 7th while competing on Australian Idol. Australian Idol competitors are Australian citizens. The Omega Three band made a nationwide tour in 2007. Bobby Flynn is a member of The Omega Three band. Bobby Flynn was born in Queensland.\nConclusion:\nBornIn(bobby, queens) ::: Bobby Flynn was born in Queens.\n------\nProblem:\nThe first person to be called a \"mathematician\" was the Greek philosopher Pythagoras. Pythagoras was a mathematician. Pythagoras was a philosopher. Pythagoras was a Greek.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The first person to be called a \"philos"
    ]
  },
  {
    "id": "FOLIO_train_252",
    "context": "All proteins are organic compounds. All enzymes are organic compounds.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? All enzymes are proteins.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProtein(x) ::: x is a protein.\nEnzyme(x) ::: x is an enzyme.\nOrganicCompound(x) ::: x is an organic compound.\nPremises:\n∀x (Protein(x) → OrganicCompound(x)) ::: All proteins are organic compounds.\n∀x (Enzyme(x) → OrganicCompound(x)) ::: All enzymes are organic compounds.\nConclusion:\n∀x (Enzyme(x) → Protein(x)) ::: All enzymes are proteins.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caff"
    ]
  },
  {
    "id": "FOLIO_train_253",
    "context": "One American screenwriter and producer is Maggie Friedman. Maggie Friedman was the showrunner and executive producer of the lifetime television series Witches of East End. Witches of East End is a fantasy-drama series. Maggie Friedman produced and developed Eastwick. Eastwick is a series by ABC.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There is a series by ABC that was developed by the showrunner of Witches of East End.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAmerican(x) ::: x is an American.\nScreenwriter(x) ::: x is a screenwriter.\nProducer(x) ::: x is a producer.\nShowrunner(x) ::: x is a showrunner.\nExecutiveProducer(x, y) ::: x is the executive producer of y.\nFantasyDramaSeries(x) ::: x is a fantasy-drama series.\nSeries(x) ::: x is a series.\nDevelop(x, y) ::: x developed y.\nPremises:\nAmerican(maggie) ∧ Screenwriter(maggie) ∧ Producer(maggie) ::: One American screenwriter and producer is Maggie Friedman.\nShowrunner(maggie) ∧ ExecutiveProducer(maggie, witchesOfEastEnd) ∧ FantasyDramaSeries(witchesOfEastEnd) ::: Maggie Friedman was the showrunner and executive producer of the lifetime television series Witches of East End. Witches of East End is a fantasy-drama series.\nDevelop(maggie, eastwick) ∧ Series(eastwick) ::: Maggie Friedman produced and developed Eastwick. Eastwick is a series by ABC.\nConclusion:\nDevelop(maggie, series(abc)) ::: There is a series by ABC that was developed by the showrunner of Witches of East End.\n------\nProblem:\nThe first season of the American television series The Vampire Diaries premiered on The CW on"
    ]
  },
  {
    "id": "FOLIO_train_254",
    "context": "One American screenwriter and producer is Maggie Friedman. Maggie Friedman was the showrunner and executive producer of the lifetime television series Witches of East End. Witches of East End is a fantasy-drama series. Maggie Friedman produced and developed Eastwick. Eastwick is a series by ABC.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There isn't a series by ABC that was developed by the showrunner of Witches of East End.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAmerican(x) ::: x is an American.\nScreenwriter(x) ::: x is a screenwriter.\nProducer(x) ::: x is a producer.\nShowrunner(x) ::: x is the showrunner.\nExecutiveProducer(x) ::: x is the executive producer.\nSeries(x) ::: x is a series.\nFantasyDrama(x) ::: x is a fantasy-drama series.\nDevelop(x, y) ::: x developed y.\nPremises:\nAmerican(maggie) ∧ Screenwriter(maggie) ∧ Producer(maggie) ∧ Showrunner(maggie) ∧ ExecutiveProducer(maggie) ∧ Series(witchesOfEastEnd) ∧ FantasyDrama(witchesOfEastEnd) ∧ Develop(maggie, witchesOfEastEnd) ::: One American screenwriter and producer is Maggie Friedman. Maggie Friedman was the showrunner and executive producer of the lifetime television series Witches of East End. Witches of East End is a fantasy-drama series.\nDevelop(maggie, eastwick) ∧ Series(eastwick) ∧ Series(eastwick) ∧ Series(eastwick) ::: Maggie Friedman produced and developed Eastwick. Eastwick is a series by ABC.\nConclusion:\n¬∃x (Series(x) ∧ Series(x) ∧ Series(x) ∧ Develop(maggie, x)) ::: There isn"
    ]
  },
  {
    "id": "FOLIO_train_255",
    "context": "One American screenwriter and producer is Maggie Friedman. Maggie Friedman was the showrunner and executive producer of the lifetime television series Witches of East End. Witches of East End is a fantasy-drama series. Maggie Friedman produced and developed Eastwick. Eastwick is a series by ABC.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Maggie Friedman developed Witches of East End.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAmerican(x) ::: x is an American.\nScreenwriter(x) ::: x is a screenwriter.\nProducer(x) ::: x is a producer.\nShowrunner(x) ::: x is a showrunner.\nExecutiveProducer(x) ::: x is an executive producer.\nSeries(x) ::: x is a series.\nFantasyDrama(x) ::: x is a fantasy-drama series.\nDevelop(x, y) ::: x developed y.\nProduce(x, y) ::: x produced y.\nPremises:\nAmerican(maggie) ∧ Screenwriter(maggie) ∧ Producer(maggie) ::: One American screenwriter and producer is Maggie Friedman.\nShowrunner(maggie) ∧ ExecutiveProducer(maggie) ∧ Series(witchesOfEastEnd) ∧ FantasyDrama(witchesOfEastEnd) ::: Maggie Friedman was the showrunner and executive producer of the lifetime television series Witches of East End. Witches of East End is a fantasy-drama series.\nDevelop(maggie, eastwick) ∧ Series(eastwick) ∧ Series(abc) ::: Maggie Friedman produced and developed Eastwick. Eastwick is a series by ABC.\nConclusion:\nDevelop(maggie, witchesOfEastEnd) ::: Maggie Friedman developed Witches of East End.\n------\nProblem:\nThe first season of the American television series"
    ]
  },
  {
    "id": "FOLIO_train_256",
    "context": "Evangelos Eleftheriou is a Greek electrical engineer. Evangelos Eleftheriou worked for IBM in Zurich. If a company has employees working for them somewhere, then they have an office there. IBM is a company.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? IBM has an office in London or Zurich.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreek(x) ::: x is a Greek person.\nElectricalEngineer(x) ::: x is an electrical engineer.\nWork(x, y) ::: x works for y.\nCompany(x) ::: x is a company.\nOffice(x, y) ::: x has an office in y.\nPremises:\nGreek(evangelos) ∧ ElectricalEngineer(evangelos) ∧ Work(evangelos, ibm) ∧ Work(evangelos, zurich) ::: Evangelos Eleftheriou is a Greek electrical engineer. Evangelos Eleftheriou worked for IBM in Zurich.\n∀x (Work(x, y) → Office(y, x)) ::: If a company has employees working for them somewhere, then they have an office there.\nCompany(ibm) ::: IBM is a company.\nConclusion:\nOffice(ibm, zurich) ∨ Office(ibm, london) ::: IBM has an office in London or Zurich.\n------\nProblem:\nThe first person to be called a mathematician was Thales of Miletus. Thales of Miletus was a Greek philosopher. Thales of Miletus was a mathematician.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The first person to be called a mathematician was a Greek philosopher.\nBased on the above information, is the following statement true, false, or uncertain"
    ]
  },
  {
    "id": "FOLIO_train_257",
    "context": "Evangelos Eleftheriou is a Greek electrical engineer. Evangelos Eleftheriou worked for IBM in Zurich. If a company has employees working for them somewhere, then they have an office there. IBM is a company.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? No Greeks have worked for IBM.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreek(x) ::: x is a Greek person.\nElectricalEngineer(x) ::: x is an electrical engineer.\nWork(x, y) ::: x works for y.\nCompany(x) ::: x is a company.\nOffice(x, y) ::: x has an office in y.\nPremises:\nGreek(evangelos) ∧ ElectricalEngineer(evangelos) ∧ Work(evangelos, ibm) ∧ Office(ibm, zurich) ::: Evangelos Eleftheriou is a Greek electrical engineer. Evangelos Eleftheriou worked for IBM in Zurich.\n∀x (Work(x, y) → Office(y, x)) ::: If a company has employees working for them somewhere, then they have an office there.\nCompany(ibm) ::: IBM is a company.\nConclusion:\n¬∃x (Greek(x) ∧ Work(x, ibm)) ::: No Greeks have worked for IBM.\n------\nProblem:\nThe first person to be called a mathematician was Thales of Miletus. Thales of Miletus was a Greek philosopher. Thales of Miletus was a mathematician.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The first person to be called a mathematician was a Greek philosopher.\nBased on the above information, is the following statement true, false, or uncertain? The first"
    ]
  },
  {
    "id": "FOLIO_train_258",
    "context": "Before releasing their single, \"Hooray! Hooray! It's a Holi-Holiday!\", Boney M. had had seven consecutive German #1 singles. \"Hooray! Hooray! It's a Holi-Holiday!\" was a big hit all over Europe. Nevertheless, \"Hooray! Hooray! It's a Holi-Holiday!\" broke Boney M's streak of consecutive German #1 singles. A song that peaks below #1 on the german charts is also a song that is not the #1 single",
    "question": "Based on the above information, is the following statement true, false, or uncertain? \"Hooray! Hooray! It's a Holi-Holiday!\" was a #1 hit in Germany.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nHit(x) ::: x is a hit.\nBigHit(x) ::: x is a big hit.\nSingle(x) ::: x is a single.\nGerman(x) ::: x is a German.\nPeak(x, y) ::: x peaks at y.\nBelow(x, y) ::: x is below y.\nConsecutive(x) ::: x is consecutive.\nStreak(x) ::: x is a streak.\n#1(x) ::: x is #1.\nPremises:\n∀x (Hit(x) → Single(x)) ::: A song that peaks below #1 on the german charts is also a song that is not the #1 single\n∀x (BigHit(x) → Hit(x)) ::: A song that peaks below #1 on the german charts is also a song that is not the #1 single\n∀x (German(x) → Single(x)) ::: A song that peaks below #1 on the german charts is also a song that is not the #1 single\n∀x (Peak(x, y) → Hit(x)) ::: A song that peaks below #1 on the german charts is also a song that is not the #1 single\n∀x (Peak(x, y) → Single(x)) ::: A song that peaks below #1 on the german charts is also a song that is not the #1 single\n∀x (Peak"
    ]
  },
  {
    "id": "FOLIO_train_259",
    "context": "Before releasing their single, \"Hooray! Hooray! It's a Holi-Holiday!\", Boney M. had had seven consecutive German #1 singles. \"Hooray! Hooray! It's a Holi-Holiday!\" was a big hit all over Europe. Nevertheless, \"Hooray! Hooray! It's a Holi-Holiday!\" broke Boney M's streak of consecutive German #1 singles. A song that peaks below #1 on the german charts is also a song that is not the #1 single",
    "question": "Based on the above information, is the following statement true, false, or uncertain? \"Hooray! Hooray! It's a Holi-Holiday!\" peaked below #1 on the German charts.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nHit(x) ::: x is a big hit.\nSingle(x) ::: x is a single.\nConsecutive(x) ::: x is consecutive.\nGerman(x) ::: x is German.\nPeak(x, y) ::: x peaks at y.\nBelow(x, y) ::: x is below y.\n#1(x) ::: x is #1.\nChart(x) ::: x is a chart.\nPremises:\n∀x (Hit(x) → Single(x)) ::: A song that peaks below #1 on the german charts is also a song that is not the #1 single\n∀x (Single(x) → Consecutive(x)) ::: Before releasing their single, \"Hooray! Hooray! It's a Holi-Holiday!\", Boney M. had had seven consecutive German #1 singles.\n∀x (Consecutive(x) → German(x)) ::: \"Hooray! Hooray! It's a Holi-Holiday!\" was a big hit all over Europe.\n∀x (German(x) → Peak(x, #1)) ::: Nevertheless, \"Hooray! Hooray! It's a Holi-Holiday!\" broke Boney M's streak of consecutive German #1 singles.\nConclusion:\nPeak(hoorayHoorayItsAHoliHoliday, below(#1, y"
    ]
  },
  {
    "id": "FOLIO_train_260",
    "context": "Before releasing their single, \"Hooray! Hooray! It's a Holi-Holiday!\", Boney M. had had seven consecutive German #1 singles. \"Hooray! Hooray! It's a Holi-Holiday!\" was a big hit all over Europe. Nevertheless, \"Hooray! Hooray! It's a Holi-Holiday!\" broke Boney M's streak of consecutive German #1 singles. A song that peaks below #1 on the german charts is also a song that is not the #1 single",
    "question": "Based on the above information, is the following statement true, false, or uncertain? \"Hooray! Hooray! It's a Holi-Holiday!\" peaked at #3 on the UK charts.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Time out!"
    ]
  },
  {
    "id": "FOLIO_train_261",
    "context": "Every chef can cook. Some people who aren’t chefs can cook. People who cook can make scrambled eggs and pasta. If someone can make cookies and muffins, they are a baker. Bakers who can also make scrambled eggs can make a good breakfast. Luke can make cookies, scrambled eggs, and muffins, but not pasta.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Luke can make a good breakfast.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Time out!"
    ]
  },
  {
    "id": "FOLIO_train_262",
    "context": "Every chef can cook. Some people who aren’t chefs can cook. People who cook can make scrambled eggs and pasta. If someone can make cookies and muffins, they are a baker. Bakers who can also make scrambled eggs can make a good breakfast. Luke can make cookies, scrambled eggs, and muffins, but not pasta.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Luke is a chef.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Time out!"
    ]
  },
  {
    "id": "FOLIO_train_263",
    "context": "ETS develops various standardized tests primarily in the United States for K-12 and higher education. ETS administers international tests including the TOEFL, TOEIC, GRE and subject tests in more than 180 countries. Many of the assessments ETS develops are associated with entry to the US tertiary and quaternary education institutions. ETS also develops K-12 statewide assessments used for accountability testing in many states.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? ETS develops assessments for K-12 statewide as well as entry to US tertiary and quaternary education institutions.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Time out!"
    ]
  },
  {
    "id": "FOLIO_train_264",
    "context": "ETS develops various standardized tests primarily in the United States for K-12 and higher education. ETS administers international tests including the TOEFL, TOEIC, GRE and subject tests in more than 180 countries. Many of the assessments ETS develops are associated with entry to the US tertiary and quaternary education institutions. ETS also develops K-12 statewide assessments used for accountability testing in many states.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? ETS doesn't administer tests internationally.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Time out!"
    ]
  },
  {
    "id": "FOLIO_train_265",
    "context": "ETS develops various standardized tests primarily in the United States for K-12 and higher education. ETS administers international tests including the TOEFL, TOEIC, GRE and subject tests in more than 180 countries. Many of the assessments ETS develops are associated with entry to the US tertiary and quaternary education institutions. ETS also develops K-12 statewide assessments used for accountability testing in many states.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? ETS administers international tests including the TOEFL, GRE and subject tests in China.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Time out!"
    ]
  },
  {
    "id": "FOLIO_train_266",
    "context": "All people who enjoy eating gelato ice cream would enjoy a vacation to Italy. There are no people who can resist the hallmark delectable drinks and desserts that are famed in Italy. People either enjoy eating gelato ice cream or love to travel and vacation often. If people often take study abroad semesters to Europe, then they do not regret their college experiences. If people love to travel and vacation often, then they often take study abroad semesters to Europe. Robert either enjoys eating gelato ice cream and loves to travel and vacation often, or he neither enjoys eating gelato ice cream nor loves to travel and vacation often.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Robert can resist the hallmark delectable drinks and desserts that are famed in Italy.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Time out!"
    ]
  },
  {
    "id": "FOLIO_train_267",
    "context": "All people who enjoy eating gelato ice cream would enjoy a vacation to Italy. There are no people who can resist the hallmark delectable drinks and desserts that are famed in Italy. People either enjoy eating gelato ice cream or love to travel and vacation often. If people often take study abroad semesters to Europe, then they do not regret their college experiences. If people love to travel and vacation often, then they often take study abroad semesters to Europe. Robert either enjoys eating gelato ice cream and loves to travel and vacation often, or he neither enjoys eating gelato ice cream nor loves to travel and vacation often.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Robert either would both enjoy a vacation to Italy and regrets his college experiences or neither would enjoy a vacation to Italy nor regrets his college experiences, then Robert would either enjoy a vacation to Italy or, if not, then he can resist the hallmark delectable drinks and desserts that are famed in Italy.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Time out!"
    ]
  },
  {
    "id": "FOLIO_train_268",
    "context": "All people who enjoy eating gelato ice cream would enjoy a vacation to Italy. There are no people who can resist the hallmark delectable drinks and desserts that are famed in Italy. People either enjoy eating gelato ice cream or love to travel and vacation often. If people often take study abroad semesters to Europe, then they do not regret their college experiences. If people love to travel and vacation often, then they often take study abroad semesters to Europe. Robert either enjoys eating gelato ice cream and loves to travel and vacation often, or he neither enjoys eating gelato ice cream nor loves to travel and vacation often.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Robert is not both a person who can resist the hallmark delectable drinks and desserts that are famed in Italy and regrets his college experiences, then Robert either enjoys eating gelato ice cream or would enjoy a vacation to Italy.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Time out!"
    ]
  },
  {
    "id": "FOLIO_train_269",
    "context": "To get a student visa, you must be full-time enrolled in an academic program. Those who are full-time enrolled in an academic program can not work full-time. Everyone who wants to study abroad needs to have a student visa. All PhD graduates can work full time. If Tom does not want to study abroad, he is full-time enrolled in an educational program.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tom is a PhD graduate.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Time out!"
    ]
  },
  {
    "id": "FOLIO_train_270",
    "context": "To get a student visa, you must be full-time enrolled in an academic program. Those who are full-time enrolled in an academic program can not work full-time. Everyone who wants to study abroad needs to have a student visa. All PhD graduates can work full time. If Tom does not want to study abroad, he is full-time enrolled in an educational program.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tom is not a PhD graduate.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nStudentVisa(x) ::: x is a student visa.\nFullTimeEnrolled(x) ::: x is full-time enrolled in an academic program.\nWorkFullTime(x) ::: x can work full-time.\nStudyAbroad(x) ::: x wants to study abroad.\nPhDGraduate(x) ::: x is a PhD graduate.\nEducationalProgram(x) ::: x is an educational program.\nPremises:\n∀x (StudentVisa(x) → FullTimeEnrolled(x)) ::: To get a student visa, you must be full-time enrolled in an academic program.\n∀x (FullTimeEnrolled(x) → ¬WorkFullTime(x)) ::: Those who are full-time enrolled in an academic program can not work full-time.\n∀x (StudyAbroad(x) → StudentVisa(x)) ::: Everyone who wants to study abroad needs to have a student visa.\n∀x (PhDGraduate(x) → WorkFullTime(x)) ::: All PhD graduates can work full time.\n¬StudyAbroad(tom) → FullTimeEnrolled(tom) ∧ EducationalProgram(tom) ::: If Tom does not want to study abroad, he is full-time enrolled in an educational program.\nConclusion:\n¬PhDGraduate(tom) ::: Tom is not a PhD graduate.\n------"
    ]
  },
  {
    "id": "FOLIO_train_271",
    "context": "To get a student visa, you must be full-time enrolled in an academic program. Those who are full-time enrolled in an academic program can not work full-time. Everyone who wants to study abroad needs to have a student visa. All PhD graduates can work full time. If Tom does not want to study abroad, he is full-time enrolled in an educational program.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tom wants to study abroad.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nStudentVisa(x) ::: x has a student visa.\nFullTimeEnrolled(x) ::: x is full-time enrolled in an academic program.\nWorkFullTime(x) ::: x can work full-time.\nStudyAbroad(x) ::: x wants to study abroad.\nPhDGraduate(x) ::: x is a PhD graduate.\nPremises:\n∀x (StudentVisa(x) → FullTimeEnrolled(x)) ::: To get a student visa, you must be full-time enrolled in an academic program.\n¬(FullTimeEnrolled(x) ∧ WorkFullTime(x)) ::: Those who are full-time enrolled in an academic program can not work full-time.\n∀x (StudyAbroad(x) → StudentVisa(x)) ::: Everyone who wants to study abroad needs to have a student visa.\n∀x (PhDGraduate(x) → WorkFullTime(x)) ::: All PhD graduates can work full time.\n¬(StudyAbroad(tom) ∧ FullTimeEnrolled(tom)) ::: If Tom does not want to study abroad, he is full-time enrolled in an educational program.\nConclusion:\nStudyAbroad(tom) ::: Tom wants to study abroad.\n------\nProblem:\nThe only people who can be in the room are those who are either students or professors. The only people who can be in"
    ]
  },
  {
    "id": "FOLIO_train_272",
    "context": "The installment sales method is the approach to recognize revenue under the US GAAP. In accrual accounting, revenues are recognized when they are realized. In cash accounting, revenues are recognized when cash is received. The US GAAP is the accounting standard developed and used by the US Securities and Exchange Commission. Sally works for the US Securities and Exchange Commission.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Sally's company utilizes the installment sales method.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "s\nPredicates:\nInstallmentSalesMethod(x) ::: x is the installment sales method.\nApproach(x, y) ::: x is the approach to recognize y.\nRevenue(x) ::: x is a revenue.\nUSGAAP(x) ::: x is the US GAAP.\nAccounting(x) ::: x is accounting.\nAccrual(x) ::: x is accrual accounting.\nCash(x) ::: x is cash accounting.\nRealize(x, y) ::: x is realized.\nReceive(x, y) ::: x is received.\nStandard(x, y) ::: x is the standard developed and used by y.\nWork(x, y) ::: x works for y.\nPremises:\nInstallmentSalesMethod(installmentSalesMethod) ∧ Approach(installmentSalesMethod, revenue) ::: The installment sales method is the approach to recognize revenue under the US GAAP.\nIn(accrualAccounting, revenue) ∧ Realize(revenue, accrualAccounting) ::: In accrual accounting, revenues are recognized when they are realized.\nIn(cashAccounting, revenue) ∧ Receive(revenue, cashAccounting) ::: In cash accounting, revenues are recognized when cash is received.\nUSGAAP(usGAAP) ∧ Standard(usGAAP, usSecuritiesAndEx"
    ]
  },
  {
    "id": "FOLIO_train_273",
    "context": "The installment sales method is the approach to recognize revenue under the US GAAP. In accrual accounting, revenues are recognized when they are realized. In cash accounting, revenues are recognized when cash is received. The US GAAP is the accounting standard developed and used by the US Securities and Exchange Commission. Sally works for the US Securities and Exchange Commission.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The company Sally works for performs accrual accounting.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "s\nPredicates:\nInstallmentSalesMethod(x) ::: x is the installment sales method.\nApproach(x, y) ::: x is the approach to recognize y.\nRevenue(x) ::: x is a revenue.\nUSGAAP(x) ::: x is the US GAAP.\nAccountingStandard(x) ::: x is an accounting standard.\nDevelop(x, y) ::: x is developed by y.\nUse(x, y) ::: x is used by y.\nAccrualAccounting(x) ::: x is accrual accounting.\nRevenue(x) ::: x is a revenue.\nRealize(x, y) ::: x is realized when y.\nCashAccounting(x) ::: x is cash accounting.\nRevenue(x) ::: x is a revenue.\nReceive(x, y) ::: x is received when y.\nWork(x, y) ::: x works for y.\nPremises:\nInstallmentSalesMethod(installmentSalesMethod) ∧ Approach(installmentSalesMethod, revenue) ::: The installment sales method is the approach to recognize revenue under the US GAAP.\nIn(accrualAccounting, revenue) ∧ Realize(revenue, accrualAccounting) ::: In accrual accounting, revenues are recognized when they are realized.\nIn(cashAccounting, revenue) ∧ Receive"
    ]
  },
  {
    "id": "FOLIO_train_274",
    "context": "The installment sales method is the approach to recognize revenue under the US GAAP. In accrual accounting, revenues are recognized when they are realized. In cash accounting, revenues are recognized when cash is received. The US GAAP is the accounting standard developed and used by the US Securities and Exchange Commission. Sally works for the US Securities and Exchange Commission.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Sally does not work for a company that uses the GAAP.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "s\nPredicates:\nInstallmentSalesMethod(x) ::: x is the installment sales method.\nApproach(x, y) ::: x is the approach to recognize y.\nRevenue(x) ::: x is a revenue.\nUSGAAP(x) ::: x is the US GAAP.\nAccounting(x) ::: x is accounting.\nAccrual(x) ::: x is accrual accounting.\nCash(x) ::: x is cash accounting.\nRealize(x, y) ::: x is realized.\nReceive(x, y) ::: x is received.\nStandard(x, y) ::: x is the standard developed and used by y.\nWork(x, y) ::: x works for y.\nPremises:\nInstallmentSalesMethod(installmentSalesMethod) ∧ Approach(installmentSalesMethod, revenue) ::: The installment sales method is the approach to recognize revenue under the US GAAP.\nIn(accrualAccounting, realize) ∧ In(cashAccounting, receive) ::: In accrual accounting, revenues are recognized when they are realized. In cash accounting, revenues are recognized when cash is received.\nUSGAAP(usGAAP) ∧ Standard(usGAAP, usSecuritiesAndExchangeCommission) ::: The US GAAP is the accounting standard developed and used by the US Securities and Exchange Commission."
    ]
  },
  {
    "id": "FOLIO_train_275",
    "context": "All people who are respected by others are people who contribute to the country. If a person is respected by others, then he/she contributes to the country. All people available to have a visit without any fees are those respected by others. All Customers who once served in the army are available to have a visit without any fees. All people who once were sentenced for thief stayed in prison for some time. All people who once stayed in prison for some time have a bad record in the local state. James was either once sentenced for thief or stayed in prison for some time. James is either with a bad record in the local state or respected by others.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James contributes to the country.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRespect(x) ::: x is respected by others.\nContribute(x) ::: x contributes to the country.\nAvailable(x) ::: x is available to have a visit without any fees.\nCustomer(x) ::: x is a customer.\nServe(x) ::: x once served in the army.\nSentence(x) ::: x once was sentenced for thief.\nStay(x) ::: x once stayed in prison for some time.\nBad(x) ::: x has a bad record in the local state.\nPremises:\n∀x (Respect(x) → Contribute(x)) ::: All people who are respected by others are people who contribute to the country.\n∀x (Respect(x) → Contribute(x)) ::: If a person is respected by others, then he/she contributes to the country.\n∀x (Available(x) → Respect(x)) ::: All people available to have a visit without any fees are those respected by others.\n∀x (Serve(x) → Available(x)) ::: All Customers who once served in the army are available to have a visit without any fees.\n∀x (Sentence(x) → Stay(x)) ::: All people who once were sentenced for thief stayed in prison for some time.\n∀x (Stay(x) → Bad(x)) ::: All people who once stayed in prison for some time have a bad"
    ]
  },
  {
    "id": "FOLIO_train_276",
    "context": "All people who are respected by others are people who contribute to the country. If a person is respected by others, then he/she contributes to the country. All people available to have a visit without any fees are those respected by others. All Customers who once served in the army are available to have a visit without any fees. All people who once were sentenced for thief stayed in prison for some time. All people who once stayed in prison for some time have a bad record in the local state. James was either once sentenced for thief or stayed in prison for some time. James is either with a bad record in the local state or respected by others.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James does not contribute to the country.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRespect(x) ::: x is respected by others.\nContribute(x) ::: x contributes to the country.\nAvailable(x) ::: x is available to have a visit without any fees.\nCustomer(x) ::: x is a customer.\nServe(x) ::: x once served in the army.\nSentence(x) ::: x once was sentenced for thief.\nStay(x) ::: x once stayed in prison for some time.\nBad(x) ::: x has a bad record in the local state.\nPremises:\n∀x (Respect(x) → Contribute(x)) ::: All people who are respected by others are people who contribute to the country.\n∀x (Respect(x) → Contribute(x)) ::: If a person is respected by others, then he/she contributes to the country.\n∀x (Available(x) → Respect(x)) ::: All people available to have a visit without any fees are those respected by others.\n∀x (Serve(x) → Available(x)) ::: All Customers who once served in the army are available to have a visit without any fees.\n∀x (Sentence(x) → Stay(x)) ::: All people who once were sentenced for thief stayed in prison for some time.\n∀x (Stay(x) → Bad(x)) ::: All people who once stayed in prison for some time have a bad"
    ]
  },
  {
    "id": "FOLIO_train_277",
    "context": "All people who are respected by others are people who contribute to the country. If a person is respected by others, then he/she contributes to the country. All people available to have a visit without any fees are those respected by others. All Customers who once served in the army are available to have a visit without any fees. All people who once were sentenced for thief stayed in prison for some time. All people who once stayed in prison for some time have a bad record in the local state. James was either once sentenced for thief or stayed in prison for some time. James is either with a bad record in the local state or respected by others.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James contributes to the country, and he once served in the army.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRespect(x) ::: x is respected by others.\nContribute(x) ::: x contributes to the country.\nAvailable(x) ::: x is available to have a visit without any fees.\nCustomer(x) ::: x is a customer.\nServe(x) ::: x once served in the army.\nSentence(x) ::: x once was sentenced for thief.\nStay(x) ::: x once stayed in prison for some time.\nBad(x) ::: x has a bad record in the local state.\nPremises:\n∀x (Respect(x) → Contribute(x)) ::: All people who are respected by others are people who contribute to the country.\n∀x (Respect(x) → ¬Bad(x)) ::: If a person is respected by others, then he/she contributes to the country.\n∀x (Available(x) → Respect(x)) ::: All people available to have a visit without any fees are those respected by others.\n∀x (Serve(x) → Available(x)) ::: All Customers who once served in the army are available to have a visit without any fees.\n∀x (Sentence(x) → Stay(x)) ::: All people who once were sentenced for thief stayed in prison for some time.\n∀x (Stay(x) → Bad(x)) ::: All people who once stayed in prison for some time have a"
    ]
  },
  {
    "id": "FOLIO_train_278",
    "context": "All people who are respected by others are people who contribute to the country. If a person is respected by others, then he/she contributes to the country. All people available to have a visit without any fees are those respected by others. All Customers who once served in the army are available to have a visit without any fees. All people who once were sentenced for thief stayed in prison for some time. All people who once stayed in prison for some time have a bad record in the local state. James was either once sentenced for thief or stayed in prison for some time. James is either with a bad record in the local state or respected by others.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James did not contribute to the country and did not serve in the army.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRespect(x) ::: x is respected by others.\nContribute(x) ::: x contributes to the country.\nAvailable(x) ::: x is available to have a visit without any fees.\nCustomer(x) ::: x is a customer.\nServe(x) ::: x once served in the army.\nSentence(x) ::: x once was sentenced for thief.\nStay(x) ::: x once stayed in prison for some time.\nBad(x) ::: x has a bad record in the local state.\nPremises:\n∀x (Respect(x) → Contribute(x)) ::: All people who are respected by others are people who contribute to the country.\n∀x (Respect(x) → ¬Contribute(x)) ::: If a person is respected by others, then he/she contributes to the country.\n∀x (Available(x) → Respect(x)) ::: All people available to have a visit without any fees are those respected by others.\n∀x (Serve(x) → Available(x)) ::: All Customers who once served in the army are available to have a visit without any fees.\n∀x (Sentence(x) → Stay(x)) ::: All people who once were sentenced for thief stayed in prison for some time.\n∀x (Stay(x) → Bad(x)) ::: All people who once stayed in prison for some time have"
    ]
  },
  {
    "id": "FOLIO_train_279",
    "context": "The Croton River watershed is the drainage basin of the Croton River. The Croton River is in southwestern New York. Water from the Croton River watershed flows to the Bronx. The Bronx is in New York.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Water from the Croton River watershed flows to somewhere in New York.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nWatershed(x) ::: x is a watershed.\nRiver(x) ::: x is a river.\nFlow(x, y) ::: x flows to y.\nIn(x, y) ::: x is in y.\nPremises:\nWatershed(crotonRiverWatershed) ∧ River(crotonRiver) ∧ Flow(crotonRiverWatershed, crotonRiver) ::: The Croton River watershed is the drainage basin of the Croton River.\nIn(crotonRiver, southwesternNewYork) ::: The Croton River is in southwestern New York.\nFlow(crotonRiver, bronx) ::: Water from the Croton River watershed flows to the Bronx.\nIn(bronx, newYork) ::: The Bronx is in New York.\nConclusion:\nFlow(crotonRiverWatershed, newYork) ::: Water from the Croton River watershed flows to somewhere in New York.\n------\nProblem:\nThe Croton River watershed is the drainage basin of the Croton River. The Croton River is in southwestern New York. Water from the Croton River watershed flows to the Bronx. The Bronx is in New York.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Water from the Croton River watershed flows to somewhere in New York.\n###\nPredicates:\nW"
    ]
  },
  {
    "id": "FOLIO_train_280",
    "context": "The Croton River watershed is the drainage basin of the Croton River. The Croton River is in southwestern New York. Water from the Croton River watershed flows to the Bronx. The Bronx is in New York.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Croton River watershed is in the Bronx.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nWatershed(x) ::: x is a watershed.\nRiver(x) ::: x is a river.\nFlow(x, y) ::: x flows to y.\nIn(x, y) ::: x is in y.\nPremises:\nWatershed(crotonRiverWatershed) ∧ River(crotonRiver) ∧ Flow(crotonRiverWatershed, crotonRiver) ::: The Croton River watershed is the drainage basin of the Croton River.\nRiver(crotonRiver) ∧ In(crotonRiver, southwesternNewYork) ::: The Croton River is in southwestern New York.\nFlow(crotonRiver, bronx) ::: Water from the Croton River watershed flows to the Bronx.\nIn(bronx, newYork) ::: The Bronx is in New York.\nConclusion:\nIn(crotonRiverWatershed, bronx) ::: The Croton River watershed is in the Bronx.\n------"
    ]
  },
  {
    "id": "FOLIO_train_281",
    "context": "The Croton River watershed is the drainage basin of the Croton River. The Croton River is in southwestern New York. Water from the Croton River watershed flows to the Bronx. The Bronx is in New York.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Water from the Croton River flows to the Bronx.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nWatershed(x) ::: x is a watershed.\nRiver(x) ::: x is a river.\nFlow(x, y) ::: x flows to y.\nIn(x, y) ::: x is in y.\nPremises:\nWatershed(crotonRiverWatershed) ∧ River(crotonRiver) ∧ Flow(crotonRiverWatershed, crotonRiver) ::: The Croton River watershed is the drainage basin of the Croton River.\nRiver(crotonRiver) ∧ In(crotonRiver, southwesternNewYork) ::: The Croton River is in southwestern New York.\nFlow(crotonRiverWatershed, bronx) ::: Water from the Croton River watershed flows to the Bronx.\nIn(bronx, newYork) ::: The Bronx is in New York.\nConclusion:\nFlow(crotonRiver, bronx) ::: Water from the Croton River flows to the Bronx.\n------"
    ]
  },
  {
    "id": "FOLIO_train_282",
    "context": "All nuclear-powered submarines are warships. No nuclear-powered submarines are commercial vessels.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Some warships are commercial vessels.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nNuclearPoweredSubmarine(x) ::: x is a nuclear-powered submarine.\nWarship(x) ::: x is a warship.\nCommercialVessel(x) ::: x is a commercial vessel.\nPremises:\n∀x (NuclearPoweredSubmarine(x) → Warship(x)) ::: All nuclear-powered submarines are warships.\n¬∃x (NuclearPoweredSubmarine(x) ∧ CommercialVessel(x)) ::: No nuclear-powered submarines are commercial vessels.\nConclusion:\n∃x (Warship(x) ∧ CommercialVessel(x)) ::: Some warships are commercial vessels.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that"
    ]
  },
  {
    "id": "FOLIO_train_283",
    "context": "If a album is written by a rock band, then the genre of the album is rock. If a band writes a album winning an award, then this band wins this award. Trouble at the Henhouse is an album by The Tragically Hip. The Tragically Hip is a Canadian rock band. The song \"Butts Wigglin'\" is in Trouble at the Henhouse. Trouble at the Henhouse won the Album of the Year award. A song in Trouble at the Henhouse appeared in a film.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The genre of Trouble at the Henhouse is rock.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAlbum(x) ::: x is an album.\nGenre(x, y) ::: x is the genre of y.\nRock(x) ::: x is rock.\nWrittenBy(x, y) ::: x is written by y.\nBand(x) ::: x is a band.\nCanadian(x) ::: x is a Canadian.\nRockBand(x) ::: x is a rock band.\nWin(x, y) ::: x wins y.\nAward(x) ::: x is an award.\nSong(x) ::: x is a song.\nIn(x, y) ::: x is in y.\nFilm(x) ::: x is a film.\nPremises:\n∀x (WrittenBy(x, rockBand) → Genre(x, rock)) ::: If a album is written by a rock band, then the genre of the album is rock.\n∀x (WrittenBy(x, y) ∧ Win(y, z) → Win(x"
    ]
  },
  {
    "id": "FOLIO_train_284",
    "context": "If a album is written by a rock band, then the genre of the album is rock. If a band writes a album winning an award, then this band wins this award. Trouble at the Henhouse is an album by The Tragically Hip. The Tragically Hip is a Canadian rock band. The song \"Butts Wigglin'\" is in Trouble at the Henhouse. Trouble at the Henhouse won the Album of the Year award. A song in Trouble at the Henhouse appeared in a film.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A canada rock band didn't win the Album of the Year award.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCanada(x) ::: x is a Canada person.\nRockBand(x) ::: x is a rock band.\nAlbum(x) ::: x is an album.\nSong(x) ::: x is a song.\nGenre(x, y) ::: x is a y genre album.\nWrite(x, y) ::: x writes y.\nWin(x, y) ::: x wins y.\nAppear(x, y) ::: x appears in y.\nPremises:\n(RockBand(x) ∧ Write(x, y)) → Genre(y, rock) ::: If a album is written by a rock band, then the genre of the album is rock.\n(Write(x, y) ∧ Win(y, z)) → Win(x, z) ::: If a band writes a album winning an award, then this band wins this award.\nAlbum(troubleAtTheHenhouse) ∧ Write(theTragicallyHip, troubleAtTheHenhouse) ::: Trouble at"
    ]
  },
  {
    "id": "FOLIO_train_285",
    "context": "If a album is written by a rock band, then the genre of the album is rock. If a band writes a album winning an award, then this band wins this award. Trouble at the Henhouse is an album by The Tragically Hip. The Tragically Hip is a Canadian rock band. The song \"Butts Wigglin'\" is in Trouble at the Henhouse. Trouble at the Henhouse won the Album of the Year award. A song in Trouble at the Henhouse appeared in a film.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? \"Butts Wigglin'\" appeared in a film.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAlbum(x) ::: x is an album.\nGenre(x, y) ::: x is a album of genre y.\nWrittenBy(x, y) ::: x is written by y.\nBand(x) ::: x is a band.\nRockBand(x) ::: x is a rock band.\nWin(x, y) ::: x wins y.\nAward(x) ::: x is an award.\nSong(x) ::: x is a song.\nIn(x, y) ::: x is in y.\nFilm(x) ::: x is a film.\nPremises:\n∀x (WrittenBy(x, rockBand) → Genre(x, rock)) ::: If a album is written by a rock band, then the genre of the album is rock.\n∀x (Band(x) ∧ Win(x, award) → ∃y (WrittenBy(x, y) ∧ Award(y) ∧ Win(x, y))) ::: If a band"
    ]
  },
  {
    "id": "FOLIO_train_286",
    "context": "Daniel is a software engineer and he works at Palantir Technologies. Daniel studied bioengineering during his undergraduate at Rice University. Daniel’s older sister works at Meta as a technical sourcer. Daniel’s dad and older sister both graduated from Stanford University. Daniel’s dad is a doctor practicing internal medicine at a veteran’s hospital in Minneapolis",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Daniel once applied to Stanford University, but he couldn’t get in even though he has family members who are Stanford alumni.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSoftwareEngineer(x) ::: x is a software engineer.\nWork(x, y) ::: x works at y.\nStudy(x, y) ::: x studied y.\nTechnicalSourcer(x) ::: x is a technical sourcer.\nGraduate(x, y) ::: x graduated from y.\nDoctor(x) ::: x is a doctor.\nPractice(x, y) ::: x practices y.\nHospital(x) ::: x is a hospital.\nPremises:\nSoftwareEngineer(daniel) ∧ Work(daniel, palantirTechnologies) ∧ Study(daniel, bioengineering) ∧ Study(daniel, riceUniversity) ∧ Work(sisterOfDaniel, meta) ∧ TechnicalSourcer(sisterOfDaniel) ∧ Graduate(fatherOfDaniel, stanfordUniversity) ∧ Graduate(sisterOfDaniel, stanfordUniversity) ∧ Doctor(fatherOfDaniel) ∧ Practice("
    ]
  },
  {
    "id": "FOLIO_train_287",
    "context": "Daniel is a software engineer and he works at Palantir Technologies. Daniel studied bioengineering during his undergraduate at Rice University. Daniel’s older sister works at Meta as a technical sourcer. Daniel’s dad and older sister both graduated from Stanford University. Daniel’s dad is a doctor practicing internal medicine at a veteran’s hospital in Minneapolis",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Daniel studied bioengineering as his major at Rice University.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSoftwareEngineer(x) ::: x is a software engineer.\nWork(x, y) ::: x works at y.\nStudy(x, y) ::: x studied y.\nBioengineering(x) ::: x is bioengineering.\nUndergraduate(x) ::: x is an undergraduate.\nRiceUniversity(x) ::: x is Rice University.\nTechnicalSourcer(x) ::: x is a technical sourcer.\nMeta(x) ::: x is Meta.\nGraduate(x, y) ::: x graduated from y.\nStanfordUniversity(x) ::: x is Stanford University.\nDoctor(x) ::: x is a doctor.\nPractice(x, y) ::: x practices y.\nInternalMedicine(x) ::: x is internal medicine.\nVeteransHospital(x) ::: x is a veteran’s hospital.\nMinneapolis(x) ::: x is Minneapolis.\nPremises:"
    ]
  },
  {
    "id": "FOLIO_train_288",
    "context": "Daniel is a software engineer and he works at Palantir Technologies. Daniel studied bioengineering during his undergraduate at Rice University. Daniel’s older sister works at Meta as a technical sourcer. Daniel’s dad and older sister both graduated from Stanford University. Daniel’s dad is a doctor practicing internal medicine at a veteran’s hospital in Minneapolis",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Daniel and his sister grew up in Minneapolis, Minnesota.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSoftwareEngineer(x) ::: x is a software engineer.\nWork(x, y) ::: x works at y.\nStudy(x, y) ::: x studied y.\nBioengineering(x) ::: x is bioengineering.\nUndergraduate(x) ::: x is an undergraduate.\nRiceUniversity(x) ::: x is Rice University.\nSister(x, y) ::: x is the sister of y.\nTechnicalSourcer(x) ::: x is a technical sourcer.\nMeta(x) ::: x is Meta.\nGraduate(x, y) ::: x graduated from y.\nStanfordUniversity(x) ::: x is Stanford University.\nDoctor(x) ::: x is a doctor.\nPractice(x, y) ::: x practices y.\nInternalMedicine(x) ::: x is internal medicine.\nVeteranHospital(x) ::: x is a veteran’s hospital.\nMinne"
    ]
  },
  {
    "id": "FOLIO_train_289",
    "context": "All commerical aircraft are produced by either Boeing or Airbus. All American Airlines jets are commerical aircraft. Airbus made more in revenue than Boeing last year.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? An American Airlines plane is either a Boeing or Airbus plane.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCommericalAircraft(x) ::: x is a commerical aircraft.\nAmericanAirlinesJet(x) ::: x is an American Airlines jet.\nBoeing(x) ::: x is a Boeing plane.\nAirbus(x) ::: x is an Airbus plane.\nRevenue(x) ::: x made revenue.\nPremises:\n∀x (CommericalAircraft(x) ∨ AmericanAirlinesJet(x)) ::: All commerical aircraft are produced by either Boeing or Airbus.\n∀x (AmericanAirlinesJet(x) → CommericalAircraft(x)) ::: All American Airlines jets are commerical aircraft.\nAirbus(x) ∧ Revenue(x) ::: Airbus made more in revenue than Boeing last year.\nConclusion:\nBoeing(x) ∨ Airbus(x) ::: An American Airlines plane is either a Boeing or Airbus plane.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caff"
    ]
  },
  {
    "id": "FOLIO_train_290",
    "context": "All commerical aircraft are produced by either Boeing or Airbus. All American Airlines jets are commerical aircraft. Airbus made more in revenue than Boeing last year.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There exists a SpaceX commerical aircraft.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCommericalAircraft(x) ::: x is a commerical aircraft.\nAmericanAirlinesJet(x) ::: x is an American Airlines jet.\nBoeing(x) ::: x is produced by Boeing.\nAirbus(x) ::: x is produced by Airbus.\nSpaceX(x) ::: x is produced by SpaceX.\nPremises:\n∀x (CommericalAircraft(x) ∨ AmericanAirlinesJet(x)) ::: All commerical aircraft are produced by either Boeing or Airbus.\n∀x (AmericanAirlinesJet(x) → CommericalAircraft(x)) ::: All American Airlines jets are commerical aircraft.\nAirbus(x) ∧ Boeing(y) ∧ Revenue(x, y) ::: Airbus made more in revenue than Boeing last year.\nConclusion:\nSpaceX(x) ::: There exists a SpaceX commerical aircraft.\n------"
    ]
  },
  {
    "id": "FOLIO_train_291",
    "context": "All commerical aircraft are produced by either Boeing or Airbus. All American Airlines jets are commerical aircraft. Airbus made more in revenue than Boeing last year.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There does not exist a United Airlines plane produced by Boeing.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCommericalAircraft(x) ::: x is a commerical aircraft.\nAmericanAirlinesJet(x) ::: x is an American Airlines jet.\nBoeing(x) ::: x is produced by Boeing.\nAirbus(x) ::: x is produced by Airbus.\nUnitedAirlinesPlane(x) ::: x is a United Airlines plane.\nPremises:\n∀x (CommericalAircraft(x) ∨ AmericanAirlinesJet(x)) ::: All commerical aircraft are produced by either Boeing or Airbus.\n∀x (AmericanAirlinesJet(x) → CommericalAircraft(x)) ::: All American Airlines jets are commerical aircraft.\nAirbus(x) → ¬Boeing(x) ::: Airbus made more in revenue than Boeing last year.\nConclusion:\n¬∃x (UnitedAirlinesPlane(x) ∧ Boeing(x"
    ]
  },
  {
    "id": "FOLIO_train_292",
    "context": "All commerical aircraft are produced by either Boeing or Airbus. All American Airlines jets are commerical aircraft. Airbus made more in revenue than Boeing last year.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There is a commercial plane made by both Airbus and Boeing.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCommericalAircraft(x) ::: x is a commerical aircraft.\nAmericanAirlinesJet(x) ::: x is an American Airlines jet.\nBoeing(x) ::: x is made by Boeing.\nAirbus(x) ::: x is made by Airbus.\nRevenue(x, y) ::: x made y in revenue.\nPremises:\n∀x (CommericalAircraft(x) ∨ AmericanAirlinesJet(x)) ::: All commerical aircraft are produced by either Boeing or Airbus.\n∀x (AmericanAirlinesJet(x) → CommericalAircraft(x)) ::: All American Airlines jets are commerical aircraft.\nRevenue(airbus, more) ∧ Revenue(boeing, less) ::: Airbus made more in revenue than Boeing last year.\nConclusion:\n∃x (CommericalAircraft(x) ∧ Boeing(x) ∧"
    ]
  },
  {
    "id": "FOLIO_train_293",
    "context": "Luzon is an island in the Philippines. In December 1999, an earthquake struck Luzon. People died in the December 1999 earthquake in Luzon.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Leyte is an island in the Philippines.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nIsland(x) ::: x is an island.\nPhilippines(x) ::: x is in the Philippines.\nEarthquake(x) ::: x is an earthquake.\nStrike(x, y) ::: x strikes y.\nDecember(x) ::: x is in December.\n1999(x) ::: x is in 1999.\nDie(x, y) ::: x dies in y.\nPremises:\nIsland(luzon) ∧ Philippines(luzon) ::: Luzon is an island in the Philippines.\nEarthquake(december1999EarthquakeInLuzon) ∧ Strike(december1999EarthquakeInLuzon, luzon) ∧ December(december1999EarthquakeInLuzon) ∧ 1999(december1999EarthquakeInL"
    ]
  },
  {
    "id": "FOLIO_train_294",
    "context": "Luzon is an island in the Philippines. In December 1999, an earthquake struck Luzon. People died in the December 1999 earthquake in Luzon.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? No one has ever died of an earthquake that struck in the Philippines.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nIsland(x) ::: x is an island.\nPhilippines(x) ::: x is in the Philippines.\nEarthquake(x) ::: x is an earthquake.\nStrike(x, y) ::: x struck y.\nDecember(x) ::: x is in December.\n1999(x) ::: x is in 1999.\nDie(x, y) ::: x died in y.\nPremises:\nIsland(luzon) ∧ Philippines(luzon) ::: Luzon is an island in the Philippines.\nEarthquake(december1999EarthquakeInLuzon) ∧ Strike(december1999EarthquakeInLuzon, luzon) ∧ December(december1999EarthquakeInLuzon) ∧ 1999(december1999EarthquakeInLuz"
    ]
  },
  {
    "id": "FOLIO_train_295",
    "context": "Luzon is an island in the Philippines. In December 1999, an earthquake struck Luzon. People died in the December 1999 earthquake in Luzon.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? In 1999, there was at least one earthquake in the Philippines.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nIsland(x) ::: x is an island.\nPhilippines(x) ::: x is in the Philippines.\nEarthquake(x) ::: x is an earthquake.\nDecember(x) ::: x is in December.\n1999(x) ::: x is in 1999.\nDied(x) ::: x died.\nPremises:\nIsland(luzon) ∧ Philippines(luzon) ::: Luzon is an island in the Philippines.\nEarthquake(earthquake1999) ∧ December(earthquake1999) ∧ 1999(earthquake1999) ∧ Philippines(earthquake1999) ::: In December 1999, an earthquake struck Luzon.\nDied(x) ∧ Earthquake(earthquake1999) ∧ December(ear"
    ]
  },
  {
    "id": "FOLIO_train_296",
    "context": "People either invest in the public stock market regularly or enjoy gambling regularly. If people invest in the public stock market regularly, then they read the Wall Street Journal and other newspapers regularly to keep updated on financial metrics. All people who enjoy gambling regularly spend a lot of money at casinos and other betting games. People who spend a lot of money at casinos and other betting games visit the Las Vegas Strip regularly. People who spend a lot of money at casinos and other betting games have a lot of disposable income to spend. If Matt invests in the public stock market regularly, then Matt neither has a lot of disposable income to spend nor invests in the public stock market regularly.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Matt reads the Wall Street Journal and other newspapers regularly to keep updated on financial metrics.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nInvest(x) ::: x invests in the public stock market regularly.\nEnjoy(x) ::: x enjoys gambling regularly.\nRead(x, y) ::: x reads y regularly.\nSpend(x, y) ::: x spends a lot of money at y.\nVisit(x, y) ::: x visits y regularly.\nDisposableIncome(x) ::: x has a lot of disposable income to spend.\nPremises:\nInvest(x) ⊕ Enjoy(x) ::: People either invest in the public stock market regularly or enjoy gambling regularly.\n∀x (Invest(x) → (Read(x, wallStreetJournal) ∧ Read(x, otherNewspapers))) ::: If people invest in the public stock market regularly, then they read the Wall Street Journal and other newspapers regularly to keep updated on financial metrics.\n∀x (Enjoy(x) → Spend(x,"
    ]
  },
  {
    "id": "FOLIO_train_297",
    "context": "People either invest in the public stock market regularly or enjoy gambling regularly. If people invest in the public stock market regularly, then they read the Wall Street Journal and other newspapers regularly to keep updated on financial metrics. All people who enjoy gambling regularly spend a lot of money at casinos and other betting games. People who spend a lot of money at casinos and other betting games visit the Las Vegas Strip regularly. People who spend a lot of money at casinos and other betting games have a lot of disposable income to spend. If Matt invests in the public stock market regularly, then Matt neither has a lot of disposable income to spend nor invests in the public stock market regularly.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Matt is either both a person who has a lot of disposable income to spend and invests in the public stock market regularly, or neither has a lot of disposable income to spend nor invests in the public stock market regularly, then Matt neither visits the Las Vegas Strip regularly nor reads the Wall Street Journal and other newspapers regularly to keep updated on the financial metrics.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nInvest(x) ::: x invests in the public stock market regularly.\nEnjoy(x) ::: x enjoys gambling regularly.\nRead(x) ::: x reads the Wall Street Journal and other newspapers regularly to keep updated on financial metrics.\nSpend(x) ::: x spends a lot of money at casinos and other betting games.\nVisit(x) ::: x visits the Las Vegas Strip regularly.\nDisposableIncome(x) ::: x has a lot of disposable income to spend.\nPremises:\nInvest(x) ⊕ Enjoy(x) ::: People either invest in the public stock market regularly or enjoy gambling regularly.\n∀x (Invest(x) → (Read(x) ∧ ¬Spend(x))) ::: If people invest in the public stock market regularly, then they read the Wall Street Journal and other newspapers regularly to keep updated on financial metrics.\n∀x (Enjo"
    ]
  },
  {
    "id": "FOLIO_train_298",
    "context": "People either invest in the public stock market regularly or enjoy gambling regularly. If people invest in the public stock market regularly, then they read the Wall Street Journal and other newspapers regularly to keep updated on financial metrics. All people who enjoy gambling regularly spend a lot of money at casinos and other betting games. People who spend a lot of money at casinos and other betting games visit the Las Vegas Strip regularly. People who spend a lot of money at casinos and other betting games have a lot of disposable income to spend. If Matt invests in the public stock market regularly, then Matt neither has a lot of disposable income to spend nor invests in the public stock market regularly.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Matt is either a person who has a lot of disposable income to spend or reads the Wall Street Journal and other newspapers regularly, then Matt neither has a lot of disposable income to spend nor visits the Las Vegas Strip Regularly.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nInvest(x) ::: x invests in the public stock market regularly.\nEnjoy(x) ::: x enjoys gambling regularly.\nRead(x) ::: x reads the Wall Street Journal and other newspapers regularly.\nSpend(x) ::: x spends a lot of money at casinos and other betting games.\nVisit(x) ::: x visits the Las Vegas Strip regularly.\nDisposableIncome(x) ::: x has a lot of disposable income to spend.\nPremises:\nInvest(x) ⊕ Enjoy(x) ::: People either invest in the public stock market regularly or enjoy gambling regularly.\n∀x (Invest(x) → (Read(x) ∧ ¬DisposableIncome(x))) ::: If people invest in the public stock market regularly, then they read the Wall Street Journal and other newspapers regularly to keep updated on financial metrics.\n∀x (Enjoy(x"
    ]
  },
  {
    "id": "FOLIO_train_299",
    "context": "All students learning piano can strike the right notes. All students who can strike the right note can get the rhythms right. If a student can get the rhythms right, he will start working on coordination between the left and the right hands. Some students who start working on coordination between the left and the right hands become good at it. The other students find it challenging. If John can strike the right notes, get the rhythms right and is good at coordination between right and left hands, then he puts emotions into his playing. John is a student learning piano. John does not find coordination between the left and the right hands challenging.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? John can get the rhythms right.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nStudent(x) ::: x is a student.\nLearn(x, y) ::: x is learning y.\nStrike(x) ::: x can strike the right notes.\nRhythm(x) ::: x can get the rhythms right.\nCoordination(x) ::: x can get the coordination between the left and the right hands.\nGood(x) ::: x is good at it.\nChallenging(x) ::: x finds it challenging.\nEmotion(x) ::: x puts emotions into his playing.\nPremises:\n∀x (Student(x) ∧ Learn(x, piano) → Strike(x)) ::: All students learning piano can strike the right notes.\n∀x (Strike(x) → Rhythm(x)) ::: All students who can strike the right note can get the rhythms right.\nRhythm(x) → Coordination(x) ::: If a student can get the"
    ]
  },
  {
    "id": "FOLIO_train_300",
    "context": "All students learning piano can strike the right notes. All students who can strike the right note can get the rhythms right. If a student can get the rhythms right, he will start working on coordination between the left and the right hands. Some students who start working on coordination between the left and the right hands become good at it. The other students find it challenging. If John can strike the right notes, get the rhythms right and is good at coordination between right and left hands, then he puts emotions into his playing. John is a student learning piano. John does not find coordination between the left and the right hands challenging.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? John does not put emotions into his playing.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nStudent(x) ::: x is a student.\nLearn(x, y) ::: x is learning y.\nStrike(x) ::: x can strike the right notes.\nRhythm(x) ::: x can get the rhythms right.\nCoordination(x) ::: x can get the coordination between the left and the right hands.\nGood(x) ::: x is good at it.\nChallenging(x) ::: x finds it challenging.\nEmotion(x) ::: x puts emotions into his playing.\nPremises:\n∀x (Student(x) ∧ Learn(x, piano) → Strike(x)) ::: All students learning piano can strike the right notes.\n∀x (Strike(x) → Rhythm(x)) ::: All students who can strike the right note can get the rhythms right.\nRhythm(x) → (Coordination(x) ∨ Challenging(x)) ::: If a student can get the rhythms right, he will start working on coordination between the left and the right hands.\n∃x (Coordination(x) ∧ Good(x)) ::: Some students who start working on coordination between the left and the right hands become good at it.\n∃x (Coordination(x) ∧ Challenging(x)) ::: The other students find it challenging.\n(Strike(john) ∧ Rhythm(john) ∧ Coordination(john) ∧ Good(john)) → Emotion(john) ::: If John can strike the right notes, get the rhythms right and is good at coordination between right and left hands, then he puts emotions into his playing.\nStudent(john) ∧ Learn(john, piano) ::: John is a student learning piano.\n¬Challenging(john) ::: John does not find coordination between the left and the right hands challenging.\nConclusion:\n¬Emotion(john) ::: John does not put emotions into his playing.\n------"
    ]
  },
  {
    "id": "FOLIO_train_301",
    "context": "Barbara Ann Marshall is a former swimmer and former world record-holder. Barbara Ann Marshall participated in the 1972 Summer Olympics. Barbara Ann Marshall's home country is the United States. All people who compete in the 1972 Summer Olympics represent their home country. Barbara Ann Marshall participated in the preliminary heat in the freestyle relay. Barbara Ann Marshall did not participate in the event final of the 1972 Summer Olympics freestyle relay. Only relay swimmers who participated in the event final received medals.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Barbara Ann Marshall did not receive medals.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSwimmer(x) ::: x is a swimmer.\nWorldRecordHolder(x) ::: x is a former world record-holder.\nParticipate(x, y) ::: x participated in y.\nHomeCountry(x, y) ::: x's home country is y.\nCompete(x, y) ::: x competed in y.\nRepresent(x, y) ::: x represents y.\nPreliminaryHeat(x, y) ::: x participated in the preliminary heat in y.\nEventFinal(x, y) ::: x participated in the event final of y.\nFreestyleRelay(x) ::: x is the 1972 Summer Olympics freestyle relay.\nMedal(x) ::: x received medals.\nPremises:\nSwimmer(barbara) ∧ WorldRecordHolder(barbara) ::: Barbara Ann Marshall is a former swimmer and former world record-holder.\nParticipate(barbara, 1972SummerOlympics) ::: Barbara Ann Marshall participated in the 1972 Summer Olympics.\nHomeCountry(barbara, unitedStates) ::: Barbara Ann Marshall's home country is the United States.\n∀x (Compete(x, 1972SummerOlympics) → Represent(x, HomeCountry(x))) ::: All people who compete in the 1972 Summer Olympics represent their home country.\nPreliminaryHeat(barbara, freestyleRelay) ::: Barbara Ann Marshall participated in the preliminary heat in the freestyle relay.\n¬Participate(barbara, EventFinal(freestyleRelay)) ::: Barbara Ann Marshall did not participate in the event final of the 1972 Summer Olympics freestyle relay.\n∀x (Participate(x, EventFinal(freestyleRelay)) → Medal(x)) ::: Only relay swimmers who participated in the event final received medals.\nConclusion:\n¬Medal(barbara) ::: Barbara Ann Marshall did not receive medals."
    ]
  },
  {
    "id": "FOLIO_train_302",
    "context": "Barbara Ann Marshall is a former swimmer and former world record-holder. Barbara Ann Marshall participated in the 1972 Summer Olympics. Barbara Ann Marshall's home country is the United States. All people who compete in the 1972 Summer Olympics represent their home country. Barbara Ann Marshall participated in the preliminary heat in the freestyle relay. Barbara Ann Marshall did not participate in the event final of the 1972 Summer Olympics freestyle relay. Only relay swimmers who participated in the event final received medals.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Barbara Ann Marshall represented the United States in the 1972 Summer Olympics.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSwimmer(x) ::: x is a swimmer.\nWorldRecordHolder(x) ::: x is a former world record-holder.\nParticipate(x, y) ::: x participated in y.\nHomeCountry(x, y) ::: x's home country is y.\nCompete(x, y) ::: x competed in y.\nRepresent(x, y) ::: x represented y.\nRelaySwimmer(x) ::: x is a relay swimmer.\nMedal(x) ::: x received a medal.\nPremises:\nSwimmer(barbara) ∧ WorldRecordHolder(barbara) ::: Barbara Ann Marshall is a former swimmer and former world record-holder.\nParticipate(barbara, 1972SummerOlympics) ::: Barbara Ann Marshall participated in the 1972 Summer Olympics.\nHomeCountry(barbara, unitedStates) ::: Barbara Ann Marshall's home country is the United States.\n∀x (Compete(x, 1972SummerOlympics) → Represent(x, HomeCountry(x))) ::: All people who compete in the 1972 Summer Olympics represent their home country.\nParticipate(barbara, preliminaryHeat) ::: Barbara Ann Marshall participated in the preliminary heat in the freestyle relay.\n¬Participate(barbara, eventFinal) ::: Barbara Ann Marshall did not participate in the event final of the 1972 Summer Olympics freestyle relay.\n∀x (RelaySwimmer(x) → Medal(x) ∧ Participate(x, eventFinal)) ::: Only relay swimmers who participated in the event final received medals.\nConclusion:\nRepresent(barbara, unitedStates) ::: Barbara Ann Marshall represented the United States in the 1972 Summer Olympics.\n------\nProblem:\nThe 1972 Summer Olympics were held in Munich, West Germany. The 1972 Summer Olympics were held in 1972. The 1972"
    ]
  },
  {
    "id": "FOLIO_train_303",
    "context": "A game is played with three stages: red stage, yellow stage, and green stage. Each player begins at the red stage. All players must reach the yellow stage before they can reach the green stage. The yellow stage comes after the red stage. All players must proceed one stage at a time.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? It is possible to move to the green stage without ever reaching the yellow stage.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nStage(x) ::: x is a stage.\nBegin(x, y) ::: x begins at y.\nReach(x, y) ::: x reaches y.\nBefore(x, y) ::: x comes before y.\nAfter(x, y) ::: x comes after y.\nProceed(x, y) ::: x proceeds y.\nPremises:\n∀x (Stage(x) → (x = redStage ∨ x = yellowStage ∨ x = greenStage)) ::: A game is played with three stages: red stage, yellow stage, and green stage.\n∀x (Begin(x, redStage)) ::: Each player begins at the red stage.\n∀x (Reach(x, yellowStage) → Reach(x, redStage)) ::: All players must reach the yellow stage before they can reach the green stage.\nBefore(redStage, yellowStage) ::: The yellow stage comes after the red stage.\n∀x (Proceed(x, redStage) ∨ Proceed(x, yellowStage) ∨ Proceed(x, greenStage)) ::: All players must proceed one stage at a time.\nConclusion:\n¬Reach(x, greenStage) ∧ Reach(x, yellowStage) ::: It is possible to move to the green stage without ever reaching the yellow stage.\n------\nProblem:\nA person is a citizen of the United States if and only if the person was born in the United States. A person is a citizen of the United States if and only if the person was born in the United States. A person is a citizen of the United States if and only if the person was born in the United States. A person is a citizen of the United States if and only if the person was born in the United States. A person is a citizen of the United States if and only if the person was born in the United States. A person is a citizen of the United States if and only if the person was born in the United States. A person is a citizen of the United States if and only if the person was born in the United States. A person is a citiz"
    ]
  },
  {
    "id": "FOLIO_train_304",
    "context": "A game is played with three stages: red stage, yellow stage, and green stage. Each player begins at the red stage. All players must reach the yellow stage before they can reach the green stage. The yellow stage comes after the red stage. All players must proceed one stage at a time.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? It is possible to reach the yellow stage without ever reaching the green stage.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nStage(x) ::: x is a stage.\nReach(x, y) ::: x reaches y.\nProceed(x, y) ::: x proceeds y.\nPremises:\n∀x (Stage(x) → (x = redStage ∨ x = yellowStage ∨ x = greenStage)) ::: A game is played with three stages: red stage, yellow stage, and green stage.\n∀x (Reach(x, redStage) ∧ ¬Reach(x, yellowStage) ∧ ¬Reach(x, greenStage)) ::: Each player begins at the red stage.\n∀x (Reach(x, yellowStage) → Reach(x, redStage)) ::: All players must reach the yellow stage before they can reach the green stage.\n∀x (Reach(x, yellowStage) → ¬Reach(x, greenStage)) ::: The yellow stage comes after the red stage.\n∀x (Reach(x, greenStage) → Reach(x, yellowStage)) ::: All players must proceed one stage at a time.\nConclusion:\nReach(x, yellowStage) ∧ ¬Reach(x, greenStage) ::: It is possible to reach the yellow stage without ever reaching the green stage.\n------\nProblem:\nA person is a citizen of the United States if and only if the person was born in the United States. A person is a citizen of the United States if and only if the person was born in the United States. A person is a citizen of the United States if and only if the person was born in the United States. A person is a citizen of the United States if and only if the person was born in the United States. A person is a citizen of the United States if and only if the person was born in the United States. A person is a citizen of the United States if and only if the person was born in the United States. A person is a citizen of the United States if and only if the person was born in the United States. A person is a citizen of the United States if and only if the person was born in"
    ]
  },
  {
    "id": "FOLIO_train_305",
    "context": "A game is played with three stages: red stage, yellow stage, and green stage. Each player begins at the red stage. All players must reach the yellow stage before they can reach the green stage. The yellow stage comes after the red stage. All players must proceed one stage at a time.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? It is possible to complete the game without ever reaching the green stage.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nStage(x) ::: x is a stage.\nBegin(x, y) ::: x begins at y.\nReach(x, y) ::: x reaches y.\nBefore(x, y) ::: x comes before y.\nAfter(x, y) ::: x comes after y.\nProceed(x, y) ::: x proceeds y.\nPremises:\n∀x (Stage(x) → (x = redStage ∨ x = yellowStage ∨ x = greenStage)) ::: A game is played with three stages: red stage, yellow stage, and green stage.\n∀x (Begin(x, redStage)) ::: Each player begins at the red stage.\n∀x (Reach(x, yellowStage) → Reach(x, redStage)) ::: All players must reach the yellow stage before they can reach the green stage.\nBefore(redStage, yellowStage) ::: The yellow stage comes after the red stage.\n∀x (Proceed(x, redStage) ∨ Proceed(x, yellowStage) ∨ Proceed(x, greenStage)) ::: All players must proceed one stage at a time.\nConclusion:\n¬Reach(x, greenStage) ::: It is possible to complete the game without ever reaching the green stage.\n------\nProblem:\nA person is a citizen of the United States if and only if the person was born in the United States. A person is a citizen of the United States if and only if the person was born in the United States. A person is a citizen of the United States if and only if the person was born in the United States. A person is a citizen of the United States if and only if the person was born in the United States. A person is a citizen of the United States if and only if the person was born in the United States. A person is a citizen of the United States if and only if the person was born in the United States. A person is a citizen of the United States if and only if the person was born in the United States. A person is a citizen of the United States if and only if the person was"
    ]
  },
  {
    "id": "FOLIO_train_306",
    "context": "People either value physical touch as an especially important love language or value words of affirmation as an especially important love language. If a person values physical touch as an especially important love language, then they are good with pets. No people that are good with pets are scared of animals. People are either scared of animals or love animals. Adam is either a person who values physical touch as an especially important love language or a person who loves animals.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Adam is scared of animals.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nValue(x, y) ::: x values y as an especially important love language.\nGood(x, y) ::: x is good with y.\nScared(x, y) ::: x is scared of y.\nLove(x, y) ::: x loves y.\nPremises:\n∀x (Value(x, physicalTouch) ⊕ Value(x, wordsOfAffirmation)) ::: People either value physical touch as an especially important love language or value words of affirmation as an especially important love language.\n∀x (Value(x, physicalTouch) → Good(x, pets)) ::: If a person values physical touch as an especially important love language, then they are good with pets.\n∀x (Good(x, pets) → ¬Scared(x, animals)) ::: No people that are good with pets are scared of animals.\n∀x (Scared(x, animals) ⊕ Love(x, animals)) ::: People are either scared of animals or love animals.\n(Value(adam, physicalTouch) ∧ Love(adam, animals)) ⊕ ¬(Value(adam, physicalTouch) ∨ Love(adam, animals)) ::: Adam is either a person who values physical touch as an especially important love language or a person who loves animals.\nConclusion:\n¬Scared(adam, animals) ::: Adam is scared of animals.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug."
    ]
  },
  {
    "id": "FOLIO_train_307",
    "context": "People either value physical touch as an especially important love language or value words of affirmation as an especially important love language. If a person values physical touch as an especially important love language, then they are good with pets. No people that are good with pets are scared of animals. People are either scared of animals or love animals. Adam is either a person who values physical touch as an especially important love language or a person who loves animals.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Adam values words of affirmation as an especially important love language.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nValue(x, y) ::: x values y as an especially important love language.\nGood(x, y) ::: x is good with y.\nScared(x, y) ::: x is scared of y.\nLove(x, y) ::: x loves y.\nPremises:\nValue(x, physicalTouch) ⊕ Value(x, wordsOfAffirmation) ::: People either value physical touch as an especially important love language or value words of affirmation as an especially important love language.\n∀x (Value(x, physicalTouch) → Good(x, pets)) ::: If a person values physical touch as an especially important love language, then they are good with pets.\n∀x (Good(x, pets) → ¬Scared(x, animals)) ::: No people that are good with pets are scared of animals.\n∀x (Scared(x, animals) ∨ Love(x, animals)) ::: People are either scared of animals or love animals.\n(Value(adam, physicalTouch) ∧ Love(adam, animals)) ⊕ ¬(Value(adam, physicalTouch) ∨ Love(adam, animals)) ::: Adam is either a person who values physical touch as an especially important love language or a person who loves animals.\nConclusion:\n¬Value(adam, wordsOfAffirmation) ::: Adam values words of affirmation as an especially important love language.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that c"
    ]
  },
  {
    "id": "FOLIO_train_308",
    "context": "People either value physical touch as an especially important love language or value words of affirmation as an especially important love language. If a person values physical touch as an especially important love language, then they are good with pets. No people that are good with pets are scared of animals. People are either scared of animals or love animals. Adam is either a person who values physical touch as an especially important love language or a person who loves animals.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Adam values physical touch as an especially important love language and values words of affirmation as an especially important love language.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nValue(x, y) ::: x values y as an especially important love language.\nGood(x, y) ::: x is good with y.\nScared(x, y) ::: x is scared of y.\nLove(x, y) ::: x loves y.\nPremises:\nValue(x, physicalTouch) ⊕ Value(x, wordsOfAffirmation) ::: People either value physical touch as an especially important love language or value words of affirmation as an especially important love language.\n∀x (Value(x, physicalTouch) → Good(x, pets)) ::: If a person values physical touch as an especially important love language, then they are good with pets.\n∀x (Good(x, pets) → ¬Scared(x, animals)) ::: No people that are good with pets are scared of animals.\n∀x (Scared(x, animals) ∨ Love(x, animals)) ::: People are either scared of animals or love animals.\n(Value(adam, physicalTouch) ∨ Love(adam, animals)) ∧ ¬(Value(adam, physicalTouch) ∧ Love(adam, animals)) ::: Adam is either a person who values physical touch as an especially important love language or a person who loves animals.\nConclusion:\nValue(adam, physicalTouch) ∧ Value(adam, wordsOfAffirmation) ::: Adam values physical touch as an especially important love language and values words of affirmation as an especially important love language.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a"
    ]
  },
  {
    "id": "FOLIO_train_309",
    "context": "People either value physical touch as an especially important love language or value words of affirmation as an especially important love language. If a person values physical touch as an especially important love language, then they are good with pets. No people that are good with pets are scared of animals. People are either scared of animals or love animals. Adam is either a person who values physical touch as an especially important love language or a person who loves animals.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Adam either values physical touch as an especially important love language or values words of affirmation as an especially important love language.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nValue(x, y) ::: x values y as an especially important love language.\nGood(x, y) ::: x is good with y.\nScared(x, y) ::: x is scared of y.\nLove(x, y) ::: x loves y.\nPremises:\nValue(x, physicalTouch) ⊕ Value(x, wordsOfAffirmation) ::: People either value physical touch as an especially important love language or value words of affirmation as an especially important love language.\n∀x (Value(x, physicalTouch) → Good(x, pets)) ::: If a person values physical touch as an especially important love language, then they are good with pets.\n∀x (Good(x, pets) → ¬Scared(x, animals)) ::: No people that are good with pets are scared of animals.\n∀x (Scared(x, animals) ∨ Love(x, animals)) ::: People are either scared of animals or love animals.\n(Value(adam, physicalTouch) ∨ Love(adam, animals)) ⊕ ¬(Value(adam, physicalTouch) ∨ Love(adam, animals)) ::: Adam is either a person who values physical touch as an especially important love language or a person who loves animals.\nConclusion:\nValue(adam, physicalTouch) ∨ Value(adam, wordsOfAffirmation) ::: Adam either values physical touch as an especially important love language or values words of affirmation as an especially important love language.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either"
    ]
  },
  {
    "id": "FOLIO_train_310",
    "context": "People either value physical touch as an especially important love language or value words of affirmation as an especially important love language. If a person values physical touch as an especially important love language, then they are good with pets. No people that are good with pets are scared of animals. People are either scared of animals or love animals. Adam is either a person who values physical touch as an especially important love language or a person who loves animals.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Adam values physical touch as an especially important love language or is good with pets, then Adam values words of affirmation as an especially important love language.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nValue(x, y) ::: x values y as an especially important love language.\nGood(x, y) ::: x is good with y.\nScared(x, y) ::: x is scared of y.\nLove(x, y) ::: x loves y.\nPremises:\nValue(x, physicalTouch) ⊕ Value(x, wordsOfAffirmation) ::: People either value physical touch as an especially important love language or value words of affirmation as an especially important love language.\nValue(x, physicalTouch) → Good(x, pets) ::: If a person values physical touch as an especially important love language, then they are good with pets.\n¬(Good(x, pets) ∧ Scared(x, animals)) ::: No people that are good with pets are scared of animals.\nValue(x, physicalTouch) ⊕ Love(x, animals) ::: People are either scared of animals or love animals.\n(Value(adam, physicalTouch) ∨ Love(adam, animals)) ⊕ ¬(Value(adam, physicalTouch) ∨ Love(adam, animals)) ::: Adam is either a person who values physical touch as an especially important love language or a person who loves animals.\nConclusion:\n¬(Value(adam, physicalTouch) ∨ Good(adam, pets)) → Value(adam, wordsOfAffirmation) ::: If Adam values physical touch as an especially important love language or is good with pets, then Adam values words of affirmation as an especially important love language.\n------"
    ]
  },
  {
    "id": "FOLIO_train_311",
    "context": "All birds have wings. No animal with wings is a reptile. Some animals that fly are birds. If something is an iguana, then it is a reptile. John is neither an iguana nor a bird.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? John is a reptile.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBird(x) ::: x is a bird.\nWing(x) ::: x has wings.\nReptile(x) ::: x is a reptile.\nFly(x) ::: x flies.\nIguana(x) ::: x is an iguana.\nPremises:\n∀x (Bird(x) → Wing(x)) ::: All birds have wings.\n∀x (Wing(x) → ¬Reptile(x)) ::: No animal with wings is a reptile.\n∃x (Fly(x) ∧ Bird(x)) ::: Some animals that fly are birds.\nIguana(john) → Reptile(john) ::: If something is an iguana, then it is a reptile.\n¬(Iguana(john) ∨ Bird(john)) ::: John is neither an iguana nor a bird.\nConclusion:\n¬Reptile(john) ::: John is a reptile.\n------\nProblem:\nAll birds have wings. No animal with wings is a reptile. Some animals that fly are birds. If something is an iguana, then it is a reptile. John is neither an iguana nor a bird.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? John is a reptile.\nBased on the above information, is the following statement true, false, or uncertain? John is a bird.\nBased on the above information, is the following statement true, false, or uncertain"
    ]
  },
  {
    "id": "FOLIO_train_312",
    "context": "All birds have wings. No animal with wings is a reptile. Some animals that fly are birds. If something is an iguana, then it is a reptile. John is neither an iguana nor a bird.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? John is not an iguana and an animal that can fly.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBird(x) ::: x is a bird.\nWing(x) ::: x has wings.\nReptile(x) ::: x is a reptile.\nFly(x) ::: x can fly.\nIguana(x) ::: x is an iguana.\nPremises:\n∀x (Bird(x) → Wing(x)) ::: All birds have wings.\n∀x (Wing(x) → ¬Reptile(x)) ::: No animal with wings is a reptile.\n∃x (Fly(x) ∧ Bird(x)) ::: Some animals that fly are birds.\nIguana(john) → Reptile(john) ::: If something is an iguana, then it is a reptile.\n¬Iguana(john) ∧ ¬Bird(john) ::: John is neither an iguana nor a bird.\nConclusion:\n¬(Iguana(john) ∧ Fly(john)) ::: John is not an iguana and an animal that can fly.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.\nQuestion:\nBased on the above information,"
    ]
  },
  {
    "id": "FOLIO_train_313",
    "context": "All birds have wings. No animal with wings is a reptile. Some animals that fly are birds. If something is an iguana, then it is a reptile. John is neither an iguana nor a bird.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? John is an animal that can fly and a bird.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBird(x) ::: x is a bird.\nWing(x) ::: x has wings.\nReptile(x) ::: x is a reptile.\nFly(x) ::: x flies.\nIguana(x) ::: x is an iguana.\nPremises:\n∀x (Bird(x) → Wing(x)) ::: All birds have wings.\n∀x (Wing(x) → ¬Reptile(x)) ::: No animal with wings is a reptile.\n∃x (Fly(x) ∧ Bird(x)) ::: Some animals that fly are birds.\nIguana(john) → Reptile(john) ::: If something is an iguana, then it is a reptile.\n¬(Iguana(john) ∨ Bird(john)) ::: John is neither an iguana nor a bird.\nConclusion:\n¬(Fly(john) ∧ Bird(john)) ::: John is an animal that can fly and a bird.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.\nQuestion:\nBased on the above information, is the following statement true,"
    ]
  },
  {
    "id": "FOLIO_train_314",
    "context": "EndGame is a movie released in 2006. EndGame was set in Washington. EndGame was filmed outside of Washington. Some movies are filmed in New York. Andy Chang directed EndGame. Andy Chang is from Hong Kong.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? EndGame was filmed in New York.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMovie(x) ::: x is a movie.\nSet(x, y) ::: x is set in y.\nFilm(x, y) ::: x is filmed in y.\nFilm(x, y) ::: x is filmed in y.\nNewYork(x) ::: x is in New York.\nWashington(x) ::: x is in Washington.\nDirect(x, y) ::: x directed y.\nFrom(x, y) ::: x is from y.\nPremises:\nMovie(endgame) ∧ Set(endgame, washington) ∧ Film(endgame, washington) ::: EndGame is a movie released in 2006. EndGame was set in Washington. EndGame was filmed outside of Washington.\n∃x (Movie(x) ∧ Film(x, newyork)) ::: Some movies are filmed in New York.\nDirect(andy, endgame) ∧ From(andy, hongkong) ::: Andy Chang directed EndGame. Andy Chang is from Hong Kong.\nConclusion:\nFilm(endgame, newyork) ::: EndGame was filmed in New York.\n------\nProblem:\nThe first person to reach the South Pole was Roald Amundsen. Roald Amundsen was a Norwegian. The first person to reach the North Pole was Robert Peary. Robert Peary was an American.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The first person to reach the North Pole was a Norwegian.\nB"
    ]
  },
  {
    "id": "FOLIO_train_315",
    "context": "EndGame is a movie released in 2006. EndGame was set in Washington. EndGame was filmed outside of Washington. Some movies are filmed in New York. Andy Chang directed EndGame. Andy Chang is from Hong Kong.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? EndGame was not directed by someone from Hong Kong.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMovie(x) ::: x is a movie.\nSet(x, y) ::: x is set in y.\nFilm(x, y) ::: x is filmed in y.\nFilm(x, y) ::: x is filmed in y.\nNewYork(x) ::: x is in New York.\nDirect(x, y) ::: x directed y.\nFrom(x, y) ::: x is from y.\nPremises:\nMovie(endgame) ∧ Set(endgame, washington) ∧ Film(endgame, washington) ::: EndGame is a movie released in 2006. EndGame was set in Washington. EndGame was filmed outside of Washington.\n∃x (Movie(x) ∧ Film(x, newyork)) ::: Some movies are filmed in New York.\nDirect(andy, endgame) ∧ From(andy, hongkong) ::: Andy Chang directed EndGame. Andy Chang is from Hong Kong.\nConclusion:\n¬Direct(andy, endgame) ::: EndGame was not directed by someone from Hong Kong.\n------\nProblem:\nThe first person to reach the South Pole was Roald Amundsen. Roald Amundsen was a Norwegian. The first person to reach the North Pole was Robert Peary. Robert Peary was an American.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The first person to reach the North Pole was a Norwegian.\nBased on the above information, is the following statement true, false"
    ]
  },
  {
    "id": "FOLIO_train_316",
    "context": "EndGame is a movie released in 2006. EndGame was set in Washington. EndGame was filmed outside of Washington. Some movies are filmed in New York. Andy Chang directed EndGame. Andy Chang is from Hong Kong.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? All of Andy Chang's movies are filmed outside of Washington.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMovie(x) ::: x is a movie.\nSet(x, y) ::: x is set in y.\nFilm(x, y) ::: x is filmed in y.\nFilm(x, y) ::: x is filmed in y.\nNewYork(x) ::: x is in New York.\nDirect(x, y) ::: x directed y.\nFrom(x, y) ::: x is from y.\nPremises:\nMovie(endgame) ∧ Set(endgame, washington) ∧ Film(endgame, washington) ::: EndGame is a movie released in 2006. EndGame was set in Washington. EndGame was filmed outside of Washington.\n∃x (Movie(x) ∧ Film(x, newyork)) ::: Some movies are filmed in New York.\nDirect(andy, endgame) ∧ From(andy, hongkong) ::: Andy Chang directed EndGame. Andy Chang is from Hong Kong.\nConclusion:\n∀x (Direct(andy, x) → ¬Film(x, washington)) ::: All of Andy Chang's movies are filmed outside of Washington.\n------\nProblem:\nThe first person to reach the South Pole was Roald Amundsen. Roald Amundsen was a Norwegian. The first person to reach the North Pole was Robert Peary. Robert Peary was an American.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The first person to reach the North Pole was"
    ]
  },
  {
    "id": "FOLIO_train_317",
    "context": "Six, seven and eight are real numbers. If a real number equals another real number adding one, the first number is larger. If the number x is larger than number y, then y is not larger than x. Seven equals six plus one. Eight equals seven plus one. Two is positive. If a number is positive, then the double of it is also positive. Eight is the double of four. Four is the double of two.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Eight is larger than seven.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRealNumber(x) ::: x is a real number.\nLarger(x, y) ::: x is larger than y.\nPositive(x) ::: x is positive.\nDouble(x, y) ::: x is the double of y.\nPremises:\nRealNumber(six) ∧ RealNumber(seven) ∧ RealNumber(eight) ::: Six, seven and eight are real numbers.\n∀x ∀y (x = y + 1 → Larger(x, y)) ::: If a real number equals another real number adding one, the first number is larger.\n∀x ∀y (Larger(x, y) → ¬Larger(y, x)) ::: If the number x is larger than number y, then y is not larger than x.\nseven = six + 1 ::: Seven equals six plus one.\neight = seven + 1 ::: Eight equals seven plus one.\nPositive(two) ::: Two is positive.\n∀x (Positive(x) → Positive(2 * x)) ::: If a number is positive, then the double of it is also positive.\neight = 2 * four ::: Eight is the double of four.\nfour = 2 * two ::: Four is the double of two.\nConclusion:\nLarger(eight, seven) ::: Eight is larger than seven.\n------\nProblem:\nA person is a student if and only if the person is enrolled in a course. A person is a student if and only if the person is enrolled in a course. A person is en"
    ]
  },
  {
    "id": "FOLIO_train_318",
    "context": "Six, seven and eight are real numbers. If a real number equals another real number adding one, the first number is larger. If the number x is larger than number y, then y is not larger than x. Seven equals six plus one. Eight equals seven plus one. Two is positive. If a number is positive, then the double of it is also positive. Eight is the double of four. Four is the double of two.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Eight is positive.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRealNumber(x) ::: x is a real number.\nPositive(x) ::: x is positive.\nDouble(x, y) ::: x is the double of y.\nPremises:\nRealNumber(six) ∧ RealNumber(seven) ∧ RealNumber(eight) ::: Six, seven and eight are real numbers.\n∀x ∀y (x = y + 1 → x > y) ::: If a real number equals another real number adding one, the first number is larger.\n∀x ∀y (x > y → ¬(y > x)) ::: If the number x is larger than number y, then y is not larger than x.\nseven = six + 1 ::: Seven equals six plus one.\neight = seven + 1 ::: Eight equals seven plus one.\nPositive(two) ::: Two is positive.\n∀x (Positive(x) → Positive(2 * x)) ::: If a number is positive, then the double of it is also positive.\neight = 2 * four ::: Eight is the double of four.\nfour = 2 * two ::: Four is the double of two.\nConclusion:\nPositive(eight) ::: Eight is positive.\n------\nProblem:\nA person is a student if and only if the person is enrolled in a course. A person is a student if and only if the person is enrolled in a course. A person is enrolled in a course if and only if the person is a student. A person is enrolled in a course if and only if the person is"
    ]
  },
  {
    "id": "FOLIO_train_319",
    "context": "Six, seven and eight are real numbers. If a real number equals another real number adding one, the first number is larger. If the number x is larger than number y, then y is not larger than x. Seven equals six plus one. Eight equals seven plus one. Two is positive. If a number is positive, then the double of it is also positive. Eight is the double of four. Four is the double of two.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Six is larger than seven.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRealNumber(x) ::: x is a real number.\nLarger(x, y) ::: x is larger than y.\nPositive(x) ::: x is positive.\nDouble(x, y) ::: x is the double of y.\nPremises:\nRealNumber(six) ∧ RealNumber(seven) ∧ RealNumber(eight) ::: Six, seven and eight are real numbers.\n∀x ∀y (x = y + 1 → Larger(x, y)) ::: If a real number equals another real number adding one, the first number is larger.\n∀x ∀y (Larger(x, y) → ¬Larger(y, x)) ::: If the number x is larger than number y, then y is not larger than x.\nseven = six + 1 ::: Seven equals six plus one.\neight = seven + 1 ::: Eight equals seven plus one.\nPositive(two) ::: Two is positive.\n∀x (Positive(x) → Positive(2 * x)) ::: If a number is positive, then the double of it is also positive.\neight = 2 * four ::: Eight is the double of four.\nfour = 2 * two ::: Four is the double of two.\nConclusion:\nLarger(six, seven) ::: Six is larger than seven.\n------\nProblem:\nA person is a student if and only if the person is enrolled in a course. A person is a student if and only if the person is enrolled in a course. A person is enrolled in"
    ]
  },
  {
    "id": "FOLIO_train_320",
    "context": "A dog never tells the truth. Some poker players are dogs.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Some poker players never tell the truth.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDog(x) ::: x is a dog.\nPokerPlayer(x) ::: x is a poker player.\nTell(x, y) ::: x tells y.\nTruth(x) ::: x is the truth.\nPremises:\n∀x (Dog(x) → ¬Truth(Tell(x, x))) ::: A dog never tells the truth.\n∃x (Dog(x) ∧ PokerPlayer(x)) ::: Some poker players are dogs.\nConclusion:\n∃x (PokerPlayer(x) ∧ ¬Truth(Tell(x, x))) ::: Some poker players never tell the truth.\n------"
    ]
  },
  {
    "id": "FOLIO_train_321",
    "context": "All Asians are human. All Chinese are Asian. A man is either Chinese or British. All British are European. All Spanish are European. No Indian is European. Jessee is either both an Indian and a human, or neither an Indian nor a human.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jesse is Chinese.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAsian(x) ::: x is Asian.\nChinese(x) ::: x is Chinese.\nBritish(x) ::: x is British.\nEuropean(x) ::: x is European.\nSpanish(x) ::: x is Spanish.\nIndian(x) ::: x is Indian.\nHuman(x) ::: x is human.\nPremises:\n∀x (Asian(x) → Human(x)) ::: All Asians are human.\n∀x (Chinese(x) → Asian(x)) ::: All Chinese are Asian.\n∀x (Man(x) → (Chinese(x) ∨ British(x))) ::: A man"
    ]
  },
  {
    "id": "FOLIO_train_322",
    "context": "All Asians are human. All Chinese are Asian. A man is either Chinese or British. All British are European. All Spanish are European. No Indian is European. Jessee is either both an Indian and a human, or neither an Indian nor a human.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jesse is not Chinese.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAsian(x) ::: x is Asian.\nChinese(x) ::: x is Chinese.\nBritish(x) ::: x is British.\nEuropean(x) ::: x is European.\nSpanish(x) ::: x is Spanish.\nIndian(x) ::: x is Indian.\nHuman(x) ::: x is human.\nPremises:\n∀x (Asian(x) → Human(x)) ::: All Asians are human.\n∀x (Chinese(x) → Asian(x)) ::: All Chinese are Asian.\n∀x (Man(x) → (Chinese(x) ∨ British(x))) ::: A man"
    ]
  },
  {
    "id": "FOLIO_train_323",
    "context": "All Asians are human. All Chinese are Asian. A man is either Chinese or British. All British are European. All Spanish are European. No Indian is European. Jessee is either both an Indian and a human, or neither an Indian nor a human.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Jesse is either an Indian or a Spanish, then Jesse is either both British and European, or neither British nor European.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAsian(x) ::: x is an Asian.\nChinese(x) ::: x is a Chinese.\nBritish(x) ::: x is a British.\nEuropean(x) ::: x is a European.\nSpanish(x) ::: x is a Spanish.\nIndian(x) ::: x is an Indian.\nHuman(x) ::: x is a human.\nPremises:\n∀x (Asian(x) → Human(x)) ::: All Asians are human.\n∀x (Chinese(x) → Asian(x)) ::: All Chinese are Asian.\n∀x (Man(x) → (Chinese(x) ∨ British"
    ]
  },
  {
    "id": "FOLIO_train_324",
    "context": "No people who never admit a mistake are good teachers. Some well-informed people are people who never admit a mistake.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Some good teachers are not well-informed people.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGoodTeacher(x) ::: x is a good teacher.\nAdmit(x, y) ::: x admits y.\nMistake(y) ::: y is a mistake.\nWellInformed(x) ::: x is a well-informed person.\nPremises:\n¬∃x (GoodTeacher(x) ∧ ¬Admit(x, mistake)) ::: No people who never admit a mistake are good teachers.\n∃x (WellInformed(x) ∧ ¬Admit(x, mistake)) ::: Some well-informed people are people who never admit a mistake.\nConclusion:\n¬∃x (GoodTeacher(x) ∧"
    ]
  },
  {
    "id": "FOLIO_train_325",
    "context": "Philatelic literature is divided into the following categories: Stamp catalogues, Periodicals, Auction catalogues, Books, Bibliographies, and Background Material Mort is not a Stamp catalogue. Mort is not a periodical, auction catalogue, bibliography, or background material. Mort is a piece of Philatelic literature.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mort is a book",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPhilatelicLiterature(x) ::: x is a piece of Philatelic literature.\nStampCatalogue(x) ::: x is a Stamp catalogue.\nPeriodical(x) ::: x is a periodical.\nAuctionCatalogue(x) ::: x is an auction catalogue.\nBook(x) ::: x is a book.\nBibliography(x) ::: x is a bibliography.\nBackgroundMaterial(x) ::: x is background material.\nPremises:\n¬StampCatalogue(mort) ∧ ¬Periodical(mort) ∧ ¬AuctionCatalogue(mort) ∧ ¬Bibliography"
    ]
  },
  {
    "id": "FOLIO_train_326",
    "context": "Philatelic literature is divided into the following categories: Stamp catalogues, Periodicals, Auction catalogues, Books, Bibliographies, and Background Material Mort is not a Stamp catalogue. Mort is not a periodical, auction catalogue, bibliography, or background material. Mort is a piece of Philatelic literature.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mort is background material.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPhilatelicLiterature(x) ::: x is a piece of Philatelic literature.\nStampCatalogue(x) ::: x is a Stamp catalogue.\nPeriodical(x) ::: x is a periodical.\nAuctionCatalogue(x) ::: x is an auction catalogue.\nBook(x) ::: x is a book.\nBibliography(x) ::: x is a bibliography.\nBackgroundMaterial(x) ::: x is background material.\nPremises:\n¬StampCatalogue(mort) ∧ ¬Periodical(mort) ∧ ¬AuctionCatalogue(mort) ∧ ¬Book(mort"
    ]
  },
  {
    "id": "FOLIO_train_327",
    "context": "Philatelic literature is divided into the following categories: Stamp catalogues, Periodicals, Auction catalogues, Books, Bibliographies, and Background Material Mort is not a Stamp catalogue. Mort is not a periodical, auction catalogue, bibliography, or background material. Mort is a piece of Philatelic literature.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Eragon is a piece of Philatelic literature.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPhilatelicLiterature(x) ::: x is a piece of Philatelic literature.\nStampCatalogue(x) ::: x is a Stamp catalogue.\nPeriodical(x) ::: x is a periodical.\nAuctionCatalogue(x) ::: x is an auction catalogue.\nBook(x) ::: x is a book.\nBibliography(x) ::: x is a bibliography.\nBackgroundMaterial(x) ::: x is background material.\nPremises:\n¬StampCatalogue(mort) ∧ ¬Periodical(mort) ∧ ¬AuctionCatalogue(mort) ∧ ¬Book(mort"
    ]
  },
  {
    "id": "FOLIO_train_328",
    "context": "Adventures of Rusty is a drama film and children's film. Columbia Pictures produced Adventures of Rusty Tintin was produced by Paramount. Tintin is an adventure film.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Columbia pictures produces drama films.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDrama(x) ::: x is a drama film.\nChildrens(x) ::: x is a children's film.\nAdventure(x) ::: x is an adventure film.\nProduce(x, y) ::: x produces y.\nPremises:\nDrama(adventuresOfRusty) ∧ Childrens(adventuresOfRusty) ::: Adventures of Rusty is a drama film and children's film.\nProduce(columbiaPictures, adventuresOfRusty) ::: Columbia Pictures produced Adventures of Rusty.\nProduce(paramount, tintin) ::: Tintin was produced by Param"
    ]
  },
  {
    "id": "FOLIO_train_329",
    "context": "Adventures of Rusty is a drama film and children's film. Columbia Pictures produced Adventures of Rusty Tintin was produced by Paramount. Tintin is an adventure film.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Columbia pictures produces adventure films.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDrama(x) ::: x is a drama film.\nChildrens(x) ::: x is a children's film.\nAdventure(x) ::: x is an adventure film.\nProduce(x, y) ::: x produces y.\nPremises:\nDrama(adventuresOfRusty) ∧ Childrens(adventuresOfRusty) ::: Adventures of Rusty is a drama film and children's film.\nProduce(columbiaPictures, adventuresOfRusty) ::: Columbia Pictures produced Adventures of Rusty.\nProduce(paramount, tintin) ::: Tintin was produced by Param"
    ]
  },
  {
    "id": "FOLIO_train_330",
    "context": "Adventures of Rusty is a drama film and children's film. Columbia Pictures produced Adventures of Rusty Tintin was produced by Paramount. Tintin is an adventure film.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Paramount produces children's films.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProduce(x, y) ::: x produces y.\nDrama(x) ::: x is a drama film.\nChildren(x) ::: x is a children's film.\nAdventure(x) ::: x is an adventure film.\nPremises:\nProduce(columbiaPictures, adventuresOfRusty) ∧ Drama(adventuresOfRusty) ∧ Children(adventuresOfRusty) ::: Adventures of Rusty is a drama film and children's film.\nProduce(paramount, tintin) ∧ Adventure(tintin) ::: Columbia Pictures produced Adventures of Rusty Tintin was produced by Paramount.\nConclusion:\nProduce(paramount, children) ::: Paramount produces children's films.\n------"
    ]
  },
  {
    "id": "FOLIO_train_331",
    "context": "Adventures of Rusty is a drama film and children's film. Columbia Pictures produced Adventures of Rusty Tintin was produced by Paramount. Tintin is an adventure film.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Paramount produces adventure films.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDrama(x) ::: x is a drama film.\nChildrens(x) ::: x is a children's film.\nProduce(x, y) ::: x produces y.\nAdventure(x) ::: x is an adventure film.\nPremises:\nDrama(adventuresOfRusty) ∧ Childrens(adventuresOfRusty) ::: Adventures of Rusty is a drama film and children's film.\nProduce(columbiaPictures, adventuresOfRusty) ::: Columbia Pictures produced Adventures of Rusty.\nProduce(paramount, tintin) ::: Tintin was produced by Paramount.\nAdventure(tintin) ::: Tintin is an adventure film.\nConclusion:\nProduce("
    ]
  },
  {
    "id": "FOLIO_train_332",
    "context": "Deng Xiaoping served as the paramount leader of the People's Republic of China (PRC). Deng Xiaoping was praised for his reaffirmation of the reform program in his Southern Tour of 1992 as well as the reversion of Hong Kong to Chinese control in 1997 and the return of Macau in 1999. As the party's Secretary-General under Mao and Vice Premier in he 1950s, Deng Xiaoping presided over the Anti-Rightist Campaign launched by Mao. Deng Xiaoping became instrumental in China's economic reconstruction following the disastrous Great Leap Forward (1958–1960). Mao Zedong died in 1976. After Mao Zedong's death, Deng Xiaoping gradually rose to supreme power.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The paramount leader of the PRC was also the vice premier.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "9\nPredicates:\nParamountLeader(x) ::: x is the paramount leader of the PRC.\nPraise(x) ::: x is praised.\nReaffirm(x, y) ::: x reaffirms y.\nReform(x) ::: x is a reform program.\nTour(x) ::: x is a tour.\nSouthern(x) ::: x is a southern tour.\nReversion(x, y) ::: x is the reversion of y.\nControl(x, y) ::: x is the control of y.\nHongKong(x) ::: x is Hong Kong.\nChinese(x) ::: x is Chinese.\nReturn(x, y) ::: x is the return of y.\nMacau(x) ::: x is Macau.\nSecretary"
    ]
  },
  {
    "id": "FOLIO_train_333",
    "context": "Deng Xiaoping served as the paramount leader of the People's Republic of China (PRC). Deng Xiaoping was praised for his reaffirmation of the reform program in his Southern Tour of 1992 as well as the reversion of Hong Kong to Chinese control in 1997 and the return of Macau in 1999. As the party's Secretary-General under Mao and Vice Premier in he 1950s, Deng Xiaoping presided over the Anti-Rightist Campaign launched by Mao. Deng Xiaoping became instrumental in China's economic reconstruction following the disastrous Great Leap Forward (1958–1960). Mao Zedong died in 1976. After Mao Zedong's death, Deng Xiaoping gradually rose to supreme power.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Deng Xiaoping presided over something launched by someone he was under.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nParamountLeader(x) ::: x is the paramount leader of the People's Republic of China (PRC).\nPraise(x, y) ::: x is praised for y.\nReaffirm(x, y) ::: x reaffirms y.\nReform(x) ::: x is a reform program.\nTour(x, y) ::: x is a tour of y.\nSouthern(x) ::: x is a southern tour.\nReversion(x, y) ::: x is the reversion of y.\nControl(x, y) ::: x is the control of y.\nHongKong(x) ::: x is Hong Kong.\nChinese(x) ::: x is Chinese.\nReversion(x, y) ::: x is the reversion of y."
    ]
  },
  {
    "id": "FOLIO_train_334",
    "context": "Deng Xiaoping served as the paramount leader of the People's Republic of China (PRC). Deng Xiaoping was praised for his reaffirmation of the reform program in his Southern Tour of 1992 as well as the reversion of Hong Kong to Chinese control in 1997 and the return of Macau in 1999. As the party's Secretary-General under Mao and Vice Premier in he 1950s, Deng Xiaoping presided over the Anti-Rightist Campaign launched by Mao. Deng Xiaoping became instrumental in China's economic reconstruction following the disastrous Great Leap Forward (1958–1960). Mao Zedong died in 1976. After Mao Zedong's death, Deng Xiaoping gradually rose to supreme power.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The person instrumental in china's economic reconstruction gradually rose to supreme power.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nParamountLeader(x) ::: x is the paramount leader of the People's Republic of China (PRC).\nPraise(x, y) ::: x is praised for y.\nReaffirm(x, y) ::: x reaffirms y.\nReform(x) ::: x is a reform program.\nTour(x, y) ::: x is a tour of y.\nSouthern(x) ::: x is a southern tour.\nReversion(x, y) ::: x is the reversion of y.\nHongKong(x) ::: x is Hong Kong.\nControl(x, y) ::: x is controlled by y.\nChinese(x) ::: x is Chinese.\nReturn(x, y) ::: x is the return of y.\nMacau"
    ]
  },
  {
    "id": "FOLIO_train_335",
    "context": "All imaginative processes are produced in human brains. All science-fiction is from an imaginative process. Either science-fiction or fact. No facts are proven to be false. Dune is a science-fiction or proven to be false.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Dune is a fact.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nImaginativeProcess(x) ::: x is an imaginative process.\nScienceFiction(x) ::: x is science-fiction.\nFact(x) ::: x is a fact.\nProven(x) ::: x is proven.\nFalse(x) ::: x is false.\nPremises:\n∀x (ImaginativeProcess(x) → Brain(x)) ::: All imaginative processes are produced in human brains.\n∀x (ScienceFiction(x) → ImaginativeProcess(x)) ::: All science-fiction is from an imaginative process.\nScienceFiction(dune) ∨ Proven(dune) ∧ ¬False(dune) ::: Either science-fiction or fact. No facts are proven to be false. Dune is a science"
    ]
  },
  {
    "id": "FOLIO_train_336",
    "context": "All imaginative processes are produced in human brains. All science-fiction is from an imaginative process. Either science-fiction or fact. No facts are proven to be false. Dune is a science-fiction or proven to be false.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Dune is produced in human brains and is an imaginative process.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nImaginativeProcess(x) ::: x is an imaginative process.\nScienceFiction(x) ::: x is science-fiction.\nFact(x) ::: x is a fact.\nProven(x) ::: x is proven.\nFalse(x) ::: x is false.\nProduced(x, y) ::: x is produced in y.\nPremises:\n∀x (ImaginativeProcess(x) → Produced(x, humanBrain)) ::: All imaginative processes are produced in human brains.\n∀x (ScienceFiction(x) → ImaginativeProcess(x)) ::: All science-fiction is from an imaginative process.\nScienceFiction(dune) ∨ Proven(dune) ∨ False(dune) ::: Either science-f"
    ]
  },
  {
    "id": "FOLIO_train_337",
    "context": "All imaginative processes are produced in human brains. All science-fiction is from an imaginative process. Either science-fiction or fact. No facts are proven to be false. Dune is a science-fiction or proven to be false.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Dune is either produced in human brains or an imaginative process.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nImaginativeProcess(x) ::: x is an imaginative process.\nScienceFiction(x) ::: x is science-fiction.\nFact(x) ::: x is a fact.\nProven(x) ::: x is proven.\nFalse(x) ::: x is false.\nProduce(x, y) ::: x is produced in y.\nPremises:\n∀x (ImaginativeProcess(x) → Produce(x, humanBrain)) ::: All imaginative processes are produced in human brains.\n∀x (ScienceFiction(x) → ImaginativeProcess(x)) ::: All science-fiction is from an imaginative process.\nScienceFiction(dune) ∨ Proven(dune) ∨ False(dune) ::: Either science-f"
    ]
  },
  {
    "id": "FOLIO_train_338",
    "context": "All imaginative processes are produced in human brains. All science-fiction is from an imaginative process. Either science-fiction or fact. No facts are proven to be false. Dune is a science-fiction or proven to be false.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Dune is produced in human brains and is science fiction.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nImaginativeProcess(x) ::: x is an imaginative process.\nScienceFiction(x) ::: x is science-fiction.\nFact(x) ::: x is a fact.\nProven(x) ::: x is proven.\nFalse(x) ::: x is false.\nProduced(x, y) ::: x is produced in y.\nPremises:\n∀x (ImaginativeProcess(x) → Produced(x, humanBrain)) ::: All imaginative processes are produced in human brains.\n∀x (ScienceFiction(x) → ImaginativeProcess(x)) ::: All science-fiction is from an imaginative process.\nScienceFiction(dune) ∨ Proven(dune) ∧ ¬False(dune) ::: Dune"
    ]
  },
  {
    "id": "FOLIO_train_339",
    "context": "All imaginative processes are produced in human brains. All science-fiction is from an imaginative process. Either science-fiction or fact. No facts are proven to be false. Dune is a science-fiction or proven to be false.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Dune is either produced in human brains or science-fiction.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nImaginativeProcess(x) ::: x is an imaginative process.\nScienceFiction(x) ::: x is science-fiction.\nFact(x) ::: x is a fact.\nProven(x) ::: x is proven.\nFalse(x) ::: x is false.\nProduced(x, y) ::: x is produced in y.\nPremises:\n∀x (ImaginativeProcess(x) → Produced(x, humanBrain)) ::: All imaginative processes are produced in human brains.\n∀x (ScienceFiction(x) → ImaginativeProcess(x)) ::: All science-fiction is from an imaginative process.\nScienceFiction(dune) ∨ Proven(dune) ∨ False(dune) ::: Either science-f"
    ]
  },
  {
    "id": "FOLIO_train_340",
    "context": "All imaginative processes are produced in human brains. All science-fiction is from an imaginative process. Either science-fiction or fact. No facts are proven to be false. Dune is a science-fiction or proven to be false.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Dune is produced in human brains and is an imaginative process, then Dune is not produced in human brains and science-fiction.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nImaginativeProcess(x) ::: x is an imaginative process.\nScienceFiction(x) ::: x is science-fiction.\nFact(x) ::: x is a fact.\nProven(x) ::: x is proven.\nFalse(x) ::: x is false.\nProduced(x, y) ::: x is produced in y.\nPremises:\n∀x (ImaginativeProcess(x) → Produced(x, humanBrain)) ::: All imaginative processes are produced in human brains.\n∀x (ScienceFiction(x) → ImaginativeProcess(x)) ::: All science-fiction is from an imaginative process.\nScienceFiction(dune) ∨ Proven(dune) ∧ ¬False(dune) ::: Either science-fiction or fact. No facts are proven to be false. Dune is a science-fiction or proven to be false.\nConclusion:\n¬(Produced(dune, humanBrain) ∧ ImaginativeProcess(dune) ∧ ScienceFiction(dune)) ::: If Dune is produced in human brains and is an imaginative process, then Dune is not produced in human brains and science-fiction.\n------"
    ]
  },
  {
    "id": "FOLIO_train_341",
    "context": "All imaginative processes are produced in human brains. All science-fiction is from an imaginative process. Either science-fiction or fact. No facts are proven to be false. Dune is a science-fiction or proven to be false.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Dune is either a fact and produced in human brains, or neither a fact nor produced in human brains, then Dune is produced in human brains and science-fiction.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nImaginativeProcess(x) ::: x is an imaginative process.\nScienceFiction(x) ::: x is science-fiction.\nFact(x) ::: x is a fact.\nProduced(x, y) ::: x is produced in y.\nProven(x, y) ::: x is proven to be y.\nPremises:\n∀x (ImaginativeProcess(x) → Produced(x, humanBrain)) ::: All imaginative processes are produced in human brains.\n∀x (ScienceFiction(x) → ImaginativeProcess(x)) ::: All science-fiction is from an imaginative process.\nScienceFiction(dune) ∨ Proven(dune, false) ::: Dune is a science-fiction or proven to be false.\n¬∀x (Fact(x) → Proven(x, false)) ::: No facts are proven to be false.\nConclusion:\n((Fact(dune) ∧ Produced(dune, humanBrain)) ∨ ¬(Fact(dune) ∨ Produced(dune, humanBrain))) → (Produced(dune, humanBrain) ∧ ScienceFiction(dune)) ::: If Dune is either a fact and produced"
    ]
  },
  {
    "id": "FOLIO_train_342",
    "context": "All imaginative processes are produced in human brains. All science-fiction is from an imaginative process. Either science-fiction or fact. No facts are proven to be false. Dune is a science-fiction or proven to be false.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Dune is science-fiction, then Dune is not produced in human brains and science-fiction.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nImaginativeProcess(x) ::: x is an imaginative process.\nScienceFiction(x) ::: x is science-fiction.\nFact(x) ::: x is a fact.\nProven(x) ::: x is proven.\nFalse(x) ::: x is false.\nProduced(x, y) ::: x is produced in y.\nPremises:\n∀x (ImaginativeProcess(x) → Produced(x, humanBrain)) ::: All imaginative processes are produced in human brains.\n∀x (ScienceFiction(x) → ImaginativeProcess(x)) ::: All science-fiction is from an imaginative process.\nScienceFiction(dune) ∨ Proven(dune) ∧ ¬False(dune) ::: Dune is a science-fiction or proven to be false.\nConclusion:\n¬(ScienceFiction(dune) ∧ Produced(dune, scienceFiction)) ::: If Dune is science-fiction, then Dune is not produced in human brains and science-fiction.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to c"
    ]
  },
  {
    "id": "FOLIO_train_343",
    "context": "All imaginative processes are produced in human brains. All science-fiction is from an imaginative process. Either science-fiction or fact. No facts are proven to be false. Dune is a science-fiction or proven to be false.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Dune is not produced in human brains and science-fiction, then Dune is neither an imaginative process nor proved to be false.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nImaginativeProcess(x) ::: x is an imaginative process.\nScienceFiction(x) ::: x is science-fiction.\nFact(x) ::: x is a fact.\nProven(x) ::: x is proven.\nFalse(x) ::: x is false.\nProduced(x, y) ::: x is produced in y.\nPremises:\n∀x (ImaginativeProcess(x) → Produced(x, humanBrain)) ::: All imaginative processes are produced in human brains.\n∀x (ScienceFiction(x) → ImaginativeProcess(x)) ::: All science-fiction is from an imaginative process.\nScienceFiction(dune) ∨ Proven(dune) ∨ False(dune) ::: Either science-fiction or fact. No facts are proven to be false. Dune is a science-fiction or proven to be false.\nConclusion:\n¬(Produced(dune, humanBrain) ∧ ScienceFiction(dune)) → (ImaginativeProcess(dune) ∨ Proven(dune)) ::: If Dune is not produced in human brains and science-fiction, then Dune is neither an imaginative process nor proved to"
    ]
  },
  {
    "id": "FOLIO_train_344",
    "context": "All imaginative processes are produced in human brains. All science-fiction is from an imaginative process. Either science-fiction or fact. No facts are proven to be false. Dune is a science-fiction or proven to be false.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Dune is not an imaginative process and science-fiction, then Dune is neither produced in human brains nor an imaginative process.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nImaginativeProcess(x) ::: x is an imaginative process.\nScienceFiction(x) ::: x is science-fiction.\nFact(x) ::: x is a fact.\nProven(x) ::: x is proven.\nFalse(x) ::: x is false.\nProduced(x, y) ::: x is produced in y.\nPremises:\n∀x (ImaginativeProcess(x) → Produced(x, humanBrain)) ::: All imaginative processes are produced in human brains.\n∀x (ScienceFiction(x) → ImaginativeProcess(x)) ::: All science-fiction is from an imaginative process.\nScienceFiction(dune) ∨ Proven(dune) ∨ False(dune) ::: Either science-fiction or fact. No facts are proven to be false. Dune is a science-fiction or proven to be false.\nConclusion:\n¬(ImaginativeProcess(dune) ∧ ScienceFiction(dune)) → (¬Produced(dune, humanBrain) ∧ ¬ImaginativeProcess(dune)) ::: If Dune is not an imaginative process and science-fiction, then Dune is neither produced in human"
    ]
  },
  {
    "id": "FOLIO_train_345",
    "context": "An American superhero comes from either DC universe or Marvel universe. Captain America is a superhero. Captain America is an American. Captain America does not come from DC universe. If a superhero is American, he speaks English. A superhero speaks English or Spanish.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Captain America does not speak English.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAmerican(x) ::: x is an American.\nSuperhero(x) ::: x is a superhero.\nDCUniverse(x) ::: x comes from DC universe.\nMarvelUniverse(x) ::: x comes from Marvel universe.\nSpeak(x, y) ::: x speaks y.\nPremises:\n∀x (Superhero(x) → (DCUniverse(x) ∨ MarvelUniverse(x))) ::: An American superhero comes from either DC universe or Marvel universe.\nSuperhero(captainAmerica) ∧ American(captainAmerica) ∧ ¬DCUniverse(captainAmerica) ::: Captain America is a superhero. Captain America is an American. Captain America does not come from DC universe.\n(American(x) → Speak(x, english)) ::: If a superhero is American, he speaks English.\nSpeak(x, english) ∨ Speak(x, spanish) ::: A superhero speaks English or Spanish.\nConclusion:\n¬Speak(captainAmerica, english) ::: Captain America does not speak English.\n------\nProblem:\nA person is a student if and only if he is a student at a university. A person is a student"
    ]
  },
  {
    "id": "FOLIO_train_346",
    "context": "An American superhero comes from either DC universe or Marvel universe. Captain America is a superhero. Captain America is an American. Captain America does not come from DC universe. If a superhero is American, he speaks English. A superhero speaks English or Spanish.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Captain America comes from Marvel universe.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAmerican(x) ::: x is an American.\nSuperhero(x) ::: x is a superhero.\nDCUniverse(x) ::: x comes from DC universe.\nMarvelUniverse(x) ::: x comes from Marvel universe.\nSpeak(x, y) ::: x speaks y.\nPremises:\n∀x (Superhero(x) → (DCUniverse(x) ∨ MarvelUniverse(x))) ::: An American superhero comes from either DC universe or Marvel universe.\nSuperhero(captainAmerica) ∧ American(captainAmerica) ∧ ¬DCUniverse(captainAmerica) ::: Captain America is a superhero. Captain America is an American. Captain America does not come from DC universe.\n∀x (American(x) → Speak(x, english)) ::: If a superhero is American, he speaks English.\nSpeak(x, english) ∨ Speak(x, spanish) ::: A superhero speaks English or Spanish.\nConclusion:\nMarvelUniverse(captainAmerica) ::: Captain America comes from Marvel universe.\n------\nProblem:\nA person is a student if and only if he is a student at a university. A person is a student"
    ]
  },
  {
    "id": "FOLIO_train_347",
    "context": "An American superhero comes from either DC universe or Marvel universe. Captain America is a superhero. Captain America is an American. Captain America does not come from DC universe. If a superhero is American, he speaks English. A superhero speaks English or Spanish.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Captain America speaks Spanish.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAmerican(x) ::: x is an American.\nSuperhero(x) ::: x is a superhero.\nDCUniverse(x) ::: x comes from DC universe.\nMarvelUniverse(x) ::: x comes from Marvel universe.\nSpeak(x, y) ::: x speaks y.\nPremises:\n∀x (Superhero(x) → (DCUniverse(x) ∨ MarvelUniverse(x))) ::: An American superhero comes from either DC universe or Marvel universe.\nSuperhero(captainAmerica) ∧ American(captainAmerica) ∧ ¬DCUniverse(captainAmerica) ::: Captain America is a superhero. Captain America is an American. Captain America does not come from DC universe.\n∀x (American(x) → Speak(x, english)) ::: If a superhero is American, he speaks English.\nSpeak(x, english) ∨ Speak(x, spanish) ::: A superhero speaks English or Spanish.\nConclusion:\nSpeak(captainAmerica, spanish) ::: Captain America speaks Spanish.\n------\nProblem:\nA person is a student if and only if he is a student at a university. A person is a student"
    ]
  },
  {
    "id": "FOLIO_train_348",
    "context": "Robert Zimmer was born in Germany. Robert Zimmer is an essayist. Robert Zimmer was born in 1953. Every essayist is a writer. Every person born in Germany is German.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Robert Zimmer is German.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGerman(x) ::: x is German.\nEssayist(x) ::: x is an essayist.\nWriter(x) ::: x is a writer.\nBorn(x, y) ::: x was born in y.\nBornIn(x, y) ::: x was born in year y.\nPremises:\nBorn(robertZimmer, germany) ∧ Essayist(robertZimmer) ∧ BornIn(robertZimmer, year1953) ::: Robert Zimmer was born in Germany. Robert Zimmer is an essayist. Robert Zimmer was born in 1953.\n∀x (Essayist(x) → Writer(x)) ::: Every essayist is a writer.\n∀x (Born(x, germany) → German(x)) ::: Every person born in Germany is German.\nConclusion:\nGerman(robertZimmer) ::: Robert Zimmer is German.\n------\nProblem:\nThe first person to be called a mathematician was Thales of Miletus. Thales of Miletus was a mathematician. Thales of Miletus was born in 624 BC. Thales of Miletus was born in"
    ]
  },
  {
    "id": "FOLIO_train_349",
    "context": "Robert Zimmer was born in Germany. Robert Zimmer is an essayist. Robert Zimmer was born in 1953. Every essayist is a writer. Every person born in Germany is German.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Robert Zimmer is not a writer.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGerman(x) ::: x is German.\nEssayist(x) ::: x is an essayist.\nWriter(x) ::: x is a writer.\nBorn(x, y) ::: x was born in y.\nBornIn(x, y) ::: x was born in year y.\nPremises:\nBorn(robertZimmer, germany) ∧ Essayist(robertZimmer) ∧ BornIn(robertZimmer, year1953) ::: Robert Zimmer was born in Germany. Robert Zimmer is an essayist. Robert Zimmer was born in 1953.\n∀x (Essayist(x) → Writer(x)) ::: Every essayist is a writer.\n∀x (Born(x, germany) → German(x)) ::: Every person born in Germany is German.\nConclusion:\n¬Writer(robertZimmer) ::: Robert Zimmer is not a writer.\n------\nProblem:\nThe first person to be called a mathematician was Thales of Miletus. Thales of Miletus was a mathematician. Thales of Miletus was born in 624 BC. Thales of Miletus was"
    ]
  },
  {
    "id": "FOLIO_train_350",
    "context": "Robert Zimmer was born in Germany. Robert Zimmer is an essayist. Robert Zimmer was born in 1953. Every essayist is a writer. Every person born in Germany is German.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Robert Zimmer is a biographer.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGerman(x) ::: x is German.\nEssayist(x) ::: x is an essayist.\nWriter(x) ::: x is a writer.\nBiographer(x) ::: x is a biographer.\nBorn(x, y) ::: x was born in y.\nBornIn(x, y) ::: x was born in year y.\nPremises:\nBorn(robertZimmer, germany) ∧ Essayist(robertZimmer) ∧ BornIn(robertZimmer, year1953) ::: Robert Zimmer was born in Germany. Robert Zimmer is an essayist. Robert Zimmer was born in 1953.\n∀x (Essayist(x) → Writer(x)) ::: Every essayist is a writer.\n∀x (Born(x, germany) → German(x)) ::: Every person born in Germany is German.\nConclusion:\nBiographer(robertZimmer) ::: Robert Zimmer is a biographer.\n------"
    ]
  },
  {
    "id": "FOLIO_train_351",
    "context": "All people who repay their loans on time have a high credit score. Some people with high credit scores and high salaries are approved for mortgages. John has a high salary.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If John repays his loans on time, he will be approved for a mortgage.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRepay(x) ::: x repays his loans on time.\nHighScore(x) ::: x has a high credit score.\nHighSalary(x) ::: x has a high salary.\nApprove(x) ::: x is approved for a mortgage.\nPremises:\n∀x (Repay(x) → HighScore(x)) ::: All people who repay their loans on time have a high credit score.\n∃x (HighScore(x) ∧ HighSalary(x) ∧ Approve(x)) ::: Some people with high credit scores and high salaries are approved for mortgages.\nHighSalary(john) ::: John has a high salary.\nConclusion:\nApprove(john) ::: If John repays his loans on time, he will be approved for a mortgage.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to c"
    ]
  },
  {
    "id": "FOLIO_train_352",
    "context": "All students are members of the university. All graduate students are students. All PhD students are graduate students. Some PhD students have high IQs. If John is not a PhD student, then he is not a member of the university. If John has a high IQ, then he is a PhD student or a graduate student.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? John has a high IQ.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nStudent(x) ::: x is a student.\nGraduateStudent(x) ::: x is a graduate student.\nPhDStudent(x) ::: x is a PhD student.\nMember(x) ::: x is a member of the university.\nHighIQ(x) ::: x has a high IQ.\nPremises:\n∀x (Student(x) → Member(x)) ::: All students are members of the university.\n∀x (GraduateStudent(x) → Student(x)) ::: All graduate students are students.\n∀x (PhDStudent(x) → GraduateStudent(x)) ::: All PhD students are graduate students.\n∃x (PhDStudent(x) ∧ HighIQ(x)) ::: Some PhD students have high IQs.\n¬PhDStudent(john) → ¬Member(john) ::: If John is not a PhD student, then he is not a member of the university.\nHighIQ(john) → (PhDStudent(john) ∨ Gradu"
    ]
  },
  {
    "id": "FOLIO_train_353",
    "context": "All students are members of the university. All graduate students are students. All PhD students are graduate students. Some PhD students have high IQs. If John is not a PhD student, then he is not a member of the university. If John has a high IQ, then he is a PhD student or a graduate student.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? John does not have a high IQ.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nStudent(x) ::: x is a student.\nGraduateStudent(x) ::: x is a graduate student.\nPhDStudent(x) ::: x is a PhD student.\nMember(x) ::: x is a member of the university.\nHighIQ(x) ::: x has a high IQ.\nPremises:\n∀x (Student(x) → Member(x)) ::: All students are members of the university.\n∀x (GraduateStudent(x) → Student(x)) ::: All graduate students are students.\n∀x (PhDStudent(x) → GraduateStudent(x)) ::: All PhD students are graduate students.\n∃x (PhDStudent(x) ∧ HighIQ(x)) ::: Some PhD students have high IQs.\n¬(PhDStudent(john) → Member(john)) ::: If John is not a PhD student, then he is not a member of the university.\n(HighIQ(john) → (PhDStudent(john) ∨ Gradu"
    ]
  },
  {
    "id": "FOLIO_train_354",
    "context": "All students are members of the university. All graduate students are students. All PhD students are graduate students. Some PhD students have high IQs. If John is not a PhD student, then he is not a member of the university. If John has a high IQ, then he is a PhD student or a graduate student.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? John is a PhD student.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nStudent(x) ::: x is a student.\nMember(x) ::: x is a member of the university.\nGraduateStudent(x) ::: x is a graduate student.\nPhDStudent(x) ::: x is a PhD student.\nIQ(x) ::: x has a high IQ.\nPremises:\n∀x (Student(x) → Member(x)) ::: All students are members of the university.\n∀x (GraduateStudent(x) → Student(x)) ::: All graduate students are students.\n∀x (PhDStudent(x) → GraduateStudent(x)) ::: All PhD students are graduate students.\n∃x (PhDStudent(x) ∧ IQ(x)) ::: Some PhD students have high IQs.\n¬PhDStudent(john) → ¬Member(john) ::: If John is not a PhD student, then he is not a member of the university.\nIQ(john) → (PhDStudent(john) ∨ GraduateStudent("
    ]
  },
  {
    "id": "FOLIO_train_355",
    "context": "Belgium, France and Germany are European countries. Paris is the capital of France. The Eiffel Tower is one of the main tourist attractions located in Paris. Some people who live in Belgium speak French. If John goes to Europe, he will see some tourist attractions. John speaks French.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If John goes to Europe, he will see the Eiffel Tower.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEuropean(x) ::: x is a European country.\nCapital(x, y) ::: x is the capital of y.\nTouristAttraction(x) ::: x is a tourist attraction.\nLocated(x, y) ::: x is located in y.\nSpeak(x, y) ::: x speaks y.\nGo(x, y) ::: x goes to y.\nSee(x, y) ::: x sees y.\nPremises:\nEuropean(belgium) ∧ European(france) ∧ European(germany) ::: Belgium, France and Germany are European countries.\nCapital(paris, france) ::: Paris is the capital of France.\nTouristAttraction(eiffelTower) ∧ Located(eiffelTower, paris) ::: The Eiffel Tower is one of the main tourist attractions located in Paris.\n∃x (European(x) ∧ Speak(x, french)) ::: Some people who live in Belgium speak French.\nGo"
    ]
  },
  {
    "id": "FOLIO_train_356",
    "context": "Belgium, France and Germany are European countries. Paris is the capital of France. The Eiffel Tower is one of the main tourist attractions located in Paris. Some people who live in Belgium speak French. If John goes to Europe, he will see some tourist attractions. John speaks French.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Eiffel Tower is located in the capital of France.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEuropean(x) ::: x is a European country.\nCapital(x, y) ::: x is the capital of y.\nTouristAttraction(x) ::: x is a tourist attraction.\nLocated(x, y) ::: x is located in y.\nSpeak(x, y) ::: x speaks y.\nPremises:\nEuropean(belgium) ∧ European(france) ∧ European(germany) ::: Belgium, France and Germany are European countries.\nCapital(paris, france) ::: Paris is the capital of France.\nTouristAttraction(eiffelTower) ∧ Located(eiffelTower, paris) ::: The Eiffel Tower is one of the main tourist attractions located in Paris.\n∃x (European(x) ∧ Speak(x, french)) ::: Some people who live in Belgium speak French.\nJohn(x) ∧ Europe(y) → ∃z (TouristAttraction(z) ∧ Located("
    ]
  },
  {
    "id": "FOLIO_train_357",
    "context": "Belgium, France and Germany are European countries. Paris is the capital of France. The Eiffel Tower is one of the main tourist attractions located in Paris. Some people who live in Belgium speak French. If John goes to Europe, he will see some tourist attractions. John speaks French.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? John lives in Belgium.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEuropean(x) ::: x is a European country.\nCapital(x, y) ::: x is the capital of y.\nTouristAttraction(x) ::: x is a tourist attraction.\nLocated(x, y) ::: x is located in y.\nSpeak(x, y) ::: x speaks y.\nLive(x, y) ::: x lives in y.\nGo(x, y) ::: x goes to y.\nSee(x, y) ::: x sees y.\nPremises:\nEuropean(belgium) ∧ European(france) ∧ European(germany) ::: Belgium, France and Germany are European countries.\nCapital(paris, france) ::: Paris is the capital of France.\nTouristAttraction(eiffelTower) ∧ Located(eiffelTower, paris) ::: The Eiffel Tower is one of the main tourist attractions located in Paris.\n∃x (Live(x, belgium) ∧ Speak(x,"
    ]
  },
  {
    "id": "FOLIO_train_358",
    "context": "All sports cars are loud. No loud cars are electric. If a car is a Ferrari, then it is a sports car. All cars made in Maranello are Ferrari If Prius is neither a sports car nor a loud car, then Prius is a Maranello-made car or a loud car.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Prius is an electric car.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSportsCar(x) ::: x is a sports car.\nLoud(x) ::: x is a loud car.\nElectric(x) ::: x is an electric car.\nFerrari(x) ::: x is a Ferrari.\nMaranelloMade(x) ::: x is a car made in Maranello.\nPremises:\n∀x (SportsCar(x) → Loud(x)) ::: All sports cars are loud.\n∀x (Loud(x) → ¬Electric(x)) ::: No loud cars are electric.\nFerrari(x) → SportsCar(x) ::: If a car is a Ferrari, then it is a sports car.\n∀x (MaranelloMade(x) → Ferrari(x)) ::: All cars made in Maranello are Ferrari.\n¬(SportsCar(prius) ∧ Loud(prius)) → (MaranelloMade(prius) ∨ Loud(prius)) ::: If Prius is neither a sports car"
    ]
  },
  {
    "id": "FOLIO_train_359",
    "context": "All sports cars are loud. No loud cars are electric. If a car is a Ferrari, then it is a sports car. All cars made in Maranello are Ferrari If Prius is neither a sports car nor a loud car, then Prius is a Maranello-made car or a loud car.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Prius is not an electric car.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSportsCar(x) ::: x is a sports car.\nLoud(x) ::: x is a loud car.\nElectric(x) ::: x is an electric car.\nFerrari(x) ::: x is a Ferrari.\nMaranelloMade(x) ::: x is a car made in Maranello.\nPremises:\n∀x (SportsCar(x) → Loud(x)) ::: All sports cars are loud.\n∀x (Loud(x) → ¬Electric(x)) ::: No loud cars are electric.\nFerrari(x) → SportsCar(x) ::: If a car is a Ferrari, then it is a sports car.\n∀x (MaranelloMade(x) → Ferrari(x)) ::: All cars made in Maranello are Ferrari.\n¬(SportsCar(prius) ∧ Loud(prius)) → (MaranelloMade(prius) ∨ Loud(prius)) ::: If Prius is neither a sports car"
    ]
  },
  {
    "id": "FOLIO_train_360",
    "context": "All sports cars are loud. No loud cars are electric. If a car is a Ferrari, then it is a sports car. All cars made in Maranello are Ferrari If Prius is neither a sports car nor a loud car, then Prius is a Maranello-made car or a loud car.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Prius is a Maranello-made car.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSportsCar(x) ::: x is a sports car.\nLoud(x) ::: x is a loud car.\nElectric(x) ::: x is an electric car.\nFerrari(x) ::: x is a Ferrari.\nMaranelloMade(x) ::: x is a car made in Maranello.\nPremises:\n∀x (SportsCar(x) → Loud(x)) ::: All sports cars are loud.\n∀x (Loud(x) → ¬Electric(x)) ::: No loud cars are electric.\nFerrari(x) ↔ SportsCar(x) ::: If a car is a Ferrari, then it is a sports car.\n∀x (MaranelloMade(x) → Ferrari(x)) ::: All cars made in Maranello are Ferrari.\n¬(SportsCar(prius) ∧ Loud(prius)) → (MaranelloMade(prius) ∨ Loud(prius)) ::: If Prius is neither a sports car nor a loud car, then Prius is a Maranello-made car or a loud car.\nConclusion:\nMaranelloMade(prius) ::: Prius is a Maranello-made car.\n------"
    ]
  },
  {
    "id": "FOLIO_train_361",
    "context": "All sports cars are loud. No loud cars are electric. If a car is a Ferrari, then it is a sports car. All cars made in Maranello are Ferrari If Prius is neither a sports car nor a loud car, then Prius is a Maranello-made car or a loud car.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Prius is a Ferrari or a loud car, then Prius is an electric car.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSportsCar(x) ::: x is a sports car.\nLoud(x) ::: x is a loud car.\nElectric(x) ::: x is an electric car.\nFerrari(x) ::: x is a Ferrari.\nMaranelloMade(x) ::: x is a car made in Maranello.\nPremises:\n∀x (SportsCar(x) → Loud(x)) ::: All sports cars are loud.\n∀x (Loud(x) → ¬Electric(x)) ::: No loud cars are electric.\nFerrari(x) → SportsCar(x) ::: If a car is a Ferrari, then it is a sports car.\n∀x (MaranelloMade(x) → Ferrari(x)) ::: All cars made in Maranello are Ferrari.\n¬(SportsCar(prius) ∧ Loud(prius)) → (MaranelloMade(prius) ∨ Loud(prius)) ::: If Prius is neither a sports car nor a loud car, then Prius is a Maranello-made car or a loud car.\nConclusion:\n¬(Ferrari(prius) ∨ Loud(prius)) → Electric(prius)"
    ]
  },
  {
    "id": "FOLIO_train_362",
    "context": "If something is a plant, then it is not a cute animal. All flowers are plants. Every kitten is a cute animal. If something is grown in a garden, then it is a flower. Piper is a kitten or a cute animal.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Piper was grown in a garden.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPlant(x) ::: x is a plant.\nCuteAnimal(x) ::: x is a cute animal.\nFlower(x) ::: x is a flower.\nKitten(x) ::: x is a kitten.\nGarden(x) ::: x is a garden.\nGrown(x, y) ::: x is grown in y.\nPremises:\n¬(Plant(x) ∧ CuteAnimal(x)) ::: If something is a plant, then it is not a cute animal.\n∀x (Flower(x) → Plant(x)) ::: All flowers are plants.\n∀x (Kitten(x) → CuteAnimal(x)) ::: Every kitten is a cute animal.\n∀x (Grown(x, garden) → Flower(x)) ::: If something is grown in a garden, then it is a flower.\n(Kitten(piper) ∨ CuteAnimal(piper)) ::: Piper is a kitten or a cute animal.\nConclusion:\n¬(Plant(piper) ∧ CuteAnimal(piper)) ::: Piper was grown in a garden.\n------\nProblem:\nIf something is a plant, then it is not a cute animal. All flowers are plants. Every"
    ]
  },
  {
    "id": "FOLIO_train_363",
    "context": "If something is a plant, then it is not a cute animal. All flowers are plants. Every kitten is a cute animal. If something is grown in a garden, then it is a flower. Piper is a kitten or a cute animal.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Piper was not grown in a garden.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPlant(x) ::: x is a plant.\nCuteAnimal(x) ::: x is a cute animal.\nFlower(x) ::: x is a flower.\nKitten(x) ::: x is a kitten.\nGarden(x) ::: x is a garden.\nGrown(x, y) ::: x is grown in y.\nPremises:\n¬(Plant(x) ∧ CuteAnimal(x)) ::: If something is a plant, then it is not a cute animal.\n∀x (Flower(x) → Plant(x)) ::: All flowers are plants.\n∀x (Kitten(x) → CuteAnimal(x)) ::: Every kitten is a cute animal.\n∀x (Grown(x, garden) → Flower(x)) ::: If something is grown in a garden, then it is a flower.\n(Kitten(piper) ∨ CuteAnimal(piper)) ::: Piper is a kitten or a cute animal.\nConclusion:\n¬(Grown(piper, garden) ∧ Flower(piper)) ::: Piper was not grown in a garden.\n------\nProblem:\nIf something is a plant, then it is not a cute animal. All flowers are plants."
    ]
  },
  {
    "id": "FOLIO_train_364",
    "context": "If something is a plant, then it is not a cute animal. All flowers are plants. Every kitten is a cute animal. If something is grown in a garden, then it is a flower. Piper is a kitten or a cute animal.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Piper is a kitten.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPlant(x) ::: x is a plant.\nCuteAnimal(x) ::: x is a cute animal.\nFlower(x) ::: x is a flower.\nKitten(x) ::: x is a kitten.\nGarden(x) ::: x is grown in a garden.\nPremises:\n¬(Plant(x) ∧ CuteAnimal(x)) ::: If something is a plant, then it is not a cute animal.\n∀x (Flower(x) → Plant(x)) ::: All flowers are plants.\n∀x (Kitten(x) → CuteAnimal(x)) ::: Every kitten is a cute animal.\n∀x (Garden(x) → Flower(x)) ::: If something is grown in a garden, then it is a flower.\n(Kitten(piper) ∨ CuteAnimal(piper)) ::: Piper is a kitten or a cute animal.\nConclusion:\nKitten(piper) ::: Piper is a kitten.\n------\nProblem:\nIf something is a plant, then it is not a cute animal. All flowers are plants. Every kitten is a cute animal. If something is grown in a garden, then it is a flower. Piper is a kitten or"
    ]
  },
  {
    "id": "FOLIO_train_365",
    "context": "Guam has participated in the Winter Olympics. In 1988, the Winter Olympics were held in Calgary. Guam sent an athlete to the Calgary Winter Olympics. If Guan sent an athlete to the Calgary Winter Olympics, then it participated in the Calgary Winter Olympics. Judd Bankert is the only athlete from Guam who has ever competed in the Winter Olympics.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Judd Bankert competed in the 1992 Winter Olympics.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nParticipate(x, y) ::: x participated in y.\nAthlete(x) ::: x is an athlete.\nCompete(x, y) ::: x competed in y.\nPremises:\nParticipate(guam, winterOlympics) ::: Guam has participated in the Winter Olympics.\nParticipate(guam, calgaryWinterOlympics) ∧ Athlete(guamAthlete) ∧ Compete(guamAthlete, calgaryWinterOlympics) ::: Guam sent an athlete to the Calgary Winter Olympics.\n(Participate(guam, calgaryWinterOlympics) → Participate(guamAthlete, calgaryWinterOlympics)) ∧ (Participate(guam, calgaryWinterOlympics) → ¬Participate(guamAthlete, calgaryWinterOlympics)) ::: If Guan sent an athlete to the Calgary Winter Olympics, then it participated in the Calgary Winter Olympics.\nAthlete(judd) ∧ Compete(judd, winterOlympics) ∧ ¬(Athlete(x) ∧ Compete(x, winterOlympics)) ::: Judd Bankert is the only"
    ]
  },
  {
    "id": "FOLIO_train_366",
    "context": "Guam has participated in the Winter Olympics. In 1988, the Winter Olympics were held in Calgary. Guam sent an athlete to the Calgary Winter Olympics. If Guan sent an athlete to the Calgary Winter Olympics, then it participated in the Calgary Winter Olympics. Judd Bankert is the only athlete from Guam who has ever competed in the Winter Olympics.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Guam has participated in the Summer Olympics at least once.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nParticipate(x, y) ::: x participated in y.\nAthlete(x) ::: x is an athlete.\nCompete(x, y) ::: x competed in y.\nPremises:\nParticipate(guam, winterOlympics) ::: Guam has participated in the Winter Olympics.\nParticipate(guam, calgaryWinterOlympics) ::: In 1988, the Winter Olympics were held in Calgary.\nParticipate(guam, calgaryWinterOlympics) ∧ Athlete(athlete) ∧ Compete(athlete, calgaryWinterOlympics) ::: Guam sent an athlete to the Calgary Winter Olympics.\nParticipate(guam, calgaryWinterOlympics) → Participate(guam, calgaryWinterOlympics) ::: If Guan sent an athlete to the Calgary Winter Olympics, then it participated in the Calgary Winter Olympics.\nAthlete(judd) ∧ Compete(judd, calgaryWinterOlympics) ::: Judd Bankert is the only athlete from Guam who has ever competed in the Winter Olympics.\nConclusion:\nParticipate(guam, summerOlympics) ::: Gu"
    ]
  },
  {
    "id": "FOLIO_train_367",
    "context": "Michael O'Donnell is a British physician, journalist, author and broadcaster. One of the word-setters of My Word! was Michael O'Donnell. The magazine World Medicine was edited by Michael O'Donnell. Michael O'Donnell was born in Yorkshire as the son of a general practitioner.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The son of a general practitioner was a word-setter of My Word!.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBritish(x) ::: x is a British person.\nPhysician(x) ::: x is a physician.\nJournalist(x) ::: x is a journalist.\nAuthor(x) ::: x is an author.\nBroadcaster(x) ::: x is a broadcaster.\nWordSetter(x, y) ::: x is one of the word-setters of y.\nEdit(x, y) ::: x edits y.\nMagazine(x) ::: x is a magazine.\nBorn(x, y) ::: x was born in y.\nSon(x, y) ::: x is the son of y.\nGeneralPractitioner(x) ::: x is a general practitioner.\nPremises:\nBritish(michael) ∧ Physician(michael) ∧ Journalist(michael) ∧ Author(michael) ∧ Broadcaster(michael) ::: Michael O'Donnell is a British physician, journalist, author and broadcaster.\nWordSetter(michael, myWord) ::: One of the word-setters of My Word! was Michael O'Donnell.\nEdit(michael, worldMedicine) ::: The magazine World Medicine was edited by Michael"
    ]
  },
  {
    "id": "FOLIO_train_368",
    "context": "Michael O'Donnell is a British physician, journalist, author and broadcaster. One of the word-setters of My Word! was Michael O'Donnell. The magazine World Medicine was edited by Michael O'Donnell. Michael O'Donnell was born in Yorkshire as the son of a general practitioner.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? World Medicine is not a magazine.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBritish(x) ::: x is a British person.\nPhysician(x) ::: x is a physician.\nJournalist(x) ::: x is a journalist.\nAuthor(x) ::: x is an author.\nBroadcaster(x) ::: x is a broadcaster.\nWordSetter(x, y) ::: x is one of the word-setters of y.\nEdit(x, y) ::: x edits y.\nMagazine(x) ::: x is a magazine.\nBorn(x, y) ::: x was born in y.\nSon(x, y) ::: x is the son of y.\nPremises:\nBritish(michael) ∧ Physician(michael) ∧ Journalist(michael) ∧ Author(michael) ∧ Broadcaster(michael) ::: Michael O'Donnell is a British physician, journalist, author and broadcaster.\nWordSetter(michael, myWord) ::: One of the word-setters of My Word! was Michael O'Donnell.\nEdit(michael, worldMedicine) ::: The magazine World Medicine was edited by Michael O'Donnell.\nBorn(michael, yorkshire)"
    ]
  },
  {
    "id": "FOLIO_train_369",
    "context": "Michael O'Donnell is a British physician, journalist, author and broadcaster. One of the word-setters of My Word! was Michael O'Donnell. The magazine World Medicine was edited by Michael O'Donnell. Michael O'Donnell was born in Yorkshire as the son of a general practitioner.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There are no British authors.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBritish(x) ::: x is a British person.\nPhysician(x) ::: x is a physician.\nJournalist(x) ::: x is a journalist.\nAuthor(x) ::: x is an author.\nBroadcaster(x) ::: x is a broadcaster.\nWordSetter(x, y) ::: x is one of the word-setters of y.\nEdit(x, y) ::: x edits y.\nMagazine(x) ::: x is a magazine.\nBorn(x, y) ::: x was born in y.\nSon(x, y) ::: x is the son of y.\nGeneralPractitioner(x) ::: x is a general practitioner.\nPremises:\nBritish(michael) ∧ Physician(michael) ∧ Journalist(michael) ∧ Author(michael) ∧ Broadcaster(michael) ::: Michael O'Donnell is a British physician, journalist, author and broadcaster.\nWordSetter(michael, myWord) ::: One of the word-setters of My Word! was Michael O'Donnell.\nEdit(michael, worldMedicine) ::: The magazine World Medicine was edited by Michael"
    ]
  },
  {
    "id": "FOLIO_train_370",
    "context": "Michael O'Donnell is a British physician, journalist, author and broadcaster. One of the word-setters of My Word! was Michael O'Donnell. The magazine World Medicine was edited by Michael O'Donnell. Michael O'Donnell was born in Yorkshire as the son of a general practitioner.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There are no journalists that were born in Yorkshire.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBritish(x) ::: x is a British person.\nPhysician(x) ::: x is a physician.\nJournalist(x) ::: x is a journalist.\nAuthor(x) ::: x is an author.\nBroadcaster(x) ::: x is a broadcaster.\nWordSetter(x, y) ::: x is one of the word-setters of y.\nEdit(x, y) ::: x edits y.\nMagazine(x) ::: x is a magazine.\nBorn(x, y) ::: x was born in y.\nSon(x, y) ::: x is the son of y.\nPremises:\nBritish(michael) ∧ Physician(michael) ∧ Journalist(michael) ∧ Author(michael) ∧ Broadcaster(michael) ::: Michael O'Donnell is a British physician, journalist, author and broadcaster.\nWordSetter(michael, myWord) ::: One of the word-setters of My Word! was Michael O'Donnell.\nEdit(michael, worldMedicine) ::: The magazine World Medicine was edited by Michael O'Donnell.\nBorn(michael, yorkshire) ∧ Son(michael, generalPractitioner) ::: Michael O'Donnell was born in Yorkshire as the son of a general practitioner.\nConclusion:\n¬∃x (Journalist(x) ∧ Born(x, yorkshire)) ::: There are no journalists that were born in Yorkshire.\n------"
    ]
  },
  {
    "id": "FOLIO_train_371",
    "context": "Michael O'Donnell is a British physician, journalist, author and broadcaster. One of the word-setters of My Word! was Michael O'Donnell. The magazine World Medicine was edited by Michael O'Donnell. Michael O'Donnell was born in Yorkshire as the son of a general practitioner.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There is a son of a general practitioner that is not an author.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBritish(x) ::: x is a British person.\nPhysician(x) ::: x is a physician.\nJournalist(x) ::: x is a journalist.\nAuthor(x) ::: x is an author.\nBroadcaster(x) ::: x is a broadcaster.\nWordSetter(x, y) ::: x is one of the word-setters of y.\nEdit(x, y) ::: x edits y.\nMagazine(x) ::: x is a magazine.\nBorn(x, y) ::: x was born in y.\nSon(x, y) ::: x is the son of y.\nGeneralPractitioner(x) ::: x is a general practitioner.\nPremises:\nBritish(michael) ∧ Physician(michael) ∧ Journalist(michael) ∧ Author(michael) ∧ Broadcaster(michael) ::: Michael O'Donnell is a British physician, journalist, author and broadcaster.\nWordSetter(michael, myWord) ::: One of the word-setters of My Word! was Michael O'Donnell.\nEdit(michael, worldMedicine) ::: The magazine World Medicine was edited by Michael O'Donnell.\nBorn(michael, yorkshire) ∧ Son(michael, generalPractitioner) ::: Michael O'Donnell was born in Yorkshire as the son of a general practitioner.\nConclusion:\n¬∃x (Son(x, generalPractitioner) ∧"
    ]
  },
  {
    "id": "FOLIO_train_372",
    "context": "No homework is fun. Some reading is homework.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Some reading is fun.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nHomework(x) ::: x is homework.\nFun(x) ::: x is fun.\nReading(x) ::: x is reading.\nPremises:\n¬∀x (Homework(x) → Fun(x)) ::: No homework is fun.\n∃x (Reading(x) ∧ Homework(x)) ::: Some reading is homework.\nConclusion:\n¬∃x (Reading(x) ∧ Fun(x)) ::: Some reading is fun.\n------\nProblem:\nNo one who is a student is a person who is not a student. No one who is a student is a person who is not a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? No one who is a student is a person who is not a student.\n###\nPredicates:\nStudent(x) ::: x is a student.\nPremises:\n¬∀x (Student(x) → ¬Student(x)) ::: No one who is a student is a person who is not a student.\n¬∀x (Student(x) → ¬Student(x)) ::: No one who is a student is a person who is not a student.\nConclusion:\n¬∀x (Student(x) → ¬Student(x)) ::: No one who is a student is a person who is not a student.\n------\nProblem:\nNo one who is a student is a person who is not a student. No one who is a student is a person who is not a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? No one"
    ]
  },
  {
    "id": "FOLIO_train_373",
    "context": "If violence is good, it is justified. If something is justified, it is lawful.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If violence is good, it is lawful.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGood(x) ::: x is good.\nJustified(x) ::: x is justified.\nLawful(x) ::: x is lawful.\nPremises:\nGood(x) → Justified(x) ::: If violence is good, it is justified.\nJustified(x) → Lawful(x) ::: If something is justified, it is lawful.\nConclusion:\nGood(x) → Lawful(x) ::: If violence is good, it is lawful.\n------\nProblem:\nIf a person is a student, then the person is a person who is not a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? If a person is a student, then the person is a person who is a student.\n###\nPredicates:\nStudent(x) ::: x is a student.\nPremises:\nStudent(x) → ¬Student(x) ::: If a person is a student, then the person is a person who is not a student.\nConclusion:\nStudent(x) → Student(x) ::: If a person is a student, then the person is a person who is a student.\n------\nProblem:\nIf a person is a student, then the person is a person who is not a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? If a person is a student, then the person is a person who is a student.\n###\nPredicates:\nStudent(x) ::: x is a student.\nPremises:\nStudent(x) → ¬Student(x"
    ]
  },
  {
    "id": "FOLIO_train_374",
    "context": "All people who have a horse ranch regularly ride horses for pleasure and sport. All people who have a lot of disposable income have a horse ranch. If people compete in horse dressage shows, then they have a lot of disposable income. If people compete in horse dressage shows, then they have invested in high-quality equestrian gear and equipment. If people regularly ride horses for pleasure and sport, then they do not live in cramped residential buildings. Manny either has a horse ranch and lives in cramped residential buildings, or he neither has a horse ranch nor lives in cramped residential buildings.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Manny regularly rides horses for pleasure and sport.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRanch(x) ::: x has a horse ranch.\nRide(x) ::: x regularly rides horses for pleasure and sport.\nIncome(x) ::: x has a lot of disposable income.\nCompete(x) ::: x competes in horse dressage shows.\nInvest(x) ::: x has invested in high-quality equestrian gear and equipment.\nLive(x) ::: x does not live in cramped residential buildings.\nPremises:\n∀x (Ranch(x) → Ride(x)) ::: All people who have a horse ranch regularly ride horses for pleasure and sport.\n∀x (Ranch(x) → Income(x)) ::: All people who have a lot of disposable income have a horse ranch.\nCompete(x) → Income(x) ::: If people compete in horse dressage shows, then they have a lot of disposable income.\nCompete(x) → Invest(x) ::: If people compete in horse dressage shows, then they have invested in high-quality equestrian gear and equipment.\nRide(x) → ¬Live(x) ::: If people regularly ride horses for pleasure and sport, then they do not live in cramped residential buildings.\n(Ranch(manny) ∧ Live(manny)) ⊕ ¬(Ranch(manny) ∨ Live(manny)) ::: Manny either has a horse ranch and lives in cramped residential buildings, or he neither has a horse ranch nor lives in cramped residential buildings.\nConclusion:\nRide(manny)"
    ]
  },
  {
    "id": "FOLIO_train_375",
    "context": "All people who have a horse ranch regularly ride horses for pleasure and sport. All people who have a lot of disposable income have a horse ranch. If people compete in horse dressage shows, then they have a lot of disposable income. If people compete in horse dressage shows, then they have invested in high-quality equestrian gear and equipment. If people regularly ride horses for pleasure and sport, then they do not live in cramped residential buildings. Manny either has a horse ranch and lives in cramped residential buildings, or he neither has a horse ranch nor lives in cramped residential buildings.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Manny competes in horse dressage shows and has invested in high-quality equestrian equipment and gear.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "s\nPredicates:\nRanch(x) ::: x has a horse ranch.\nIncome(x) ::: x has a lot of disposable income.\nCompete(x) ::: x competes in horse dressage shows.\nGear(x) ::: x has invested in high-quality equestrian gear and equipment.\nRide(x) ::: x regularly rides horses for pleasure and sport.\nLive(x) ::: x lives in cramped residential buildings.\nPremises:\n∀x (Ranch(x) → Ride(x)) ::: All people who have a horse ranch regularly ride horses for pleasure and sport.\n∀x (Ranch(x) → Income(x)) ::: All people who have a lot of disposable income have a horse ranch.\nCompete(x) → Income(x) ::: If people compete in horse dressage shows, then they have a lot of disposable income.\nCompete(x) → Gear(x) ::: If people compete in horse dressage shows, then they have invested in high-quality equestrian gear and equipment.\nRide(x) → ¬Live(x) ::: If people regularly ride horses for pleasure and sport, then they do not live in cramped residential buildings.\n(Ranch(manny) ∧ Live(manny)) ⊕ ¬(Ranch(manny) ∨ Live(manny)) ::: Manny either has a horse ranch and lives in cramped residential buildings, or he neither has a horse ranch nor lives in cramped residential buildings.\nConclusion:\nCompete(manny)"
    ]
  },
  {
    "id": "FOLIO_train_376",
    "context": "All people who have a horse ranch regularly ride horses for pleasure and sport. All people who have a lot of disposable income have a horse ranch. If people compete in horse dressage shows, then they have a lot of disposable income. If people compete in horse dressage shows, then they have invested in high-quality equestrian gear and equipment. If people regularly ride horses for pleasure and sport, then they do not live in cramped residential buildings. Manny either has a horse ranch and lives in cramped residential buildings, or he neither has a horse ranch nor lives in cramped residential buildings.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Manny either has a horse ranch or competes in horse dressage shows, then Manny has not invested in high-quality equestrian equipment and gear.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRanch(x) ::: x has a horse ranch.\nRide(x) ::: x regularly ride horses for pleasure and sport.\nIncome(x) ::: x has a lot of disposable income.\nCompete(x) ::: x competes in horse dressage shows.\nInvest(x) ::: x has invested in high-quality equestrian gear and equipment.\nLive(x) ::: x does not live in cramped residential buildings.\nPremises:\n∀x (Ranch(x) → Ride(x)) ::: All people who have a horse ranch regularly ride horses for pleasure and sport.\n∀x (Ranch(x) → Income(x)) ::: All people who have a lot of disposable income have a horse ranch.\nCompete(x) → Income(x) ::: If people compete in horse dressage shows, then they have a lot of disposable income.\nCompete(x) → Invest(x) ::: If people compete in horse dressage shows, then they have invested in high-quality equestrian gear and equipment.\nRide(x) → ¬Live(x) ::: If people regularly ride horses for pleasure and sport, then they do not live in cramped residential buildings.\n(Ranch(manny) ∧ Live(manny)) ⊕ ¬(Ranch(manny) ∨ Live(manny)) ::: Manny either has a horse ranch and lives in cramped residential buildings, or he neither has a horse ranch nor lives in cramped residential buildings.\nConclusion:\n¬(Ranch(manny"
    ]
  },
  {
    "id": "FOLIO_train_377",
    "context": "A roundel is a rounded artillery fortification. A roundel is not higher than adjacent walls. Cannons can be deployed on artillery fortifications. Roundels are the oldest artillery fortifications. Battery towers are an artillery fortification.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Cannons can be deployed on battery towers.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRoundel(x) ::: x is a roundel.\nArtilleryFortification(x) ::: x is an artillery fortification.\nHigher(x, y) ::: x is higher than y.\nDeploy(x, y) ::: x can be deployed on y.\nOldest(x) ::: x is the oldest.\nBatteryTower(x) ::: x is a battery tower.\nPremises:\n∀x (Roundel(x) → ArtilleryFortification(x)) ::: A roundel is an artillery fortification.\n∀x (Roundel(x) → ¬Higher(x, adjacentWalls)) ::: A roundel is not higher than adjacent walls.\n∀x (ArtilleryFortification(x) → ∃y (Deploy(cannons, y))) ::: Cannons can be deployed on artillery fortifications.\n∀x (Roundel(x) → ¬Oldest(x)) ::: Roundels are the oldest artillery fortifications.\n∀x (BatteryTower(x) → ArtilleryFortification(x)) ::: Battery towers are an artillery fortification.\nConclusion:\nDeploy(cannons, batteryTowers) ::: Cannons can be deployed on battery towers.\n------\nProblem:\nA person is a human being. A human being is a mammal. A mammal is an animal. A person is not a mammal.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? A person is an animal.\nBased on the above information"
    ]
  },
  {
    "id": "FOLIO_train_378",
    "context": "A roundel is a rounded artillery fortification. A roundel is not higher than adjacent walls. Cannons can be deployed on artillery fortifications. Roundels are the oldest artillery fortifications. Battery towers are an artillery fortification.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Roundels are older than battery towers.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRoundel(x) ::: x is a roundel.\nArtilleryFortification(x) ::: x is an artillery fortification.\nHigher(x, y) ::: x is higher than y.\nDeploy(x, y) ::: x can be deployed on y.\nOldest(x) ::: x is the oldest.\nBatteryTower(x) ::: x is a battery tower.\nPremises:\n∀x (Roundel(x) → ArtilleryFortification(x)) ::: A roundel is a rounded artillery fortification.\n∀x (Roundel(x) → ¬Higher(x, adjacentWalls)) ::: A roundel is not higher than adjacent walls.\n∀x (ArtilleryFortification(x) → ∃y (Deploy(cannons, x) ∧ y)) ::: Cannons can be deployed on artillery fortifications.\n∀x (Roundel(x) → Oldest(x)) ::: Roundels are the oldest artillery fortifications.\n∀x (BatteryTower(x) → ArtilleryFortification(x)) ::: Battery towers are an artillery fortification.\nConclusion:\nOldest(roundel) ::: Roundels are older than battery towers.\n------\nProblem:\nA person is a human being. A human being is a mammal. A mammal is an animal. A person is a human being. A human being is a mammal. A mammal is an animal. A person is a human being. A human being is a mammal. A mammal is an animal. A"
    ]
  },
  {
    "id": "FOLIO_train_379",
    "context": "A roundel is a rounded artillery fortification. A roundel is not higher than adjacent walls. Cannons can be deployed on artillery fortifications. Roundels are the oldest artillery fortifications. Battery towers are an artillery fortification.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Battery towers are higher than adjacent walls.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRoundel(x) ::: x is a roundel.\nArtilleryFortification(x) ::: x is an artillery fortification.\nHigher(x, y) ::: x is higher than y.\nDeploy(x, y) ::: x can be deployed on y.\nOldest(x) ::: x is the oldest artillery fortification.\nBatteryTower(x) ::: x is a battery tower.\nPremises:\n∀x (Roundel(x) → ¬Higher(x, adjacentWalls)) ::: A roundel is not higher than adjacent walls.\n∀x (ArtilleryFortification(x) → Deploy(cannons, x)) ::: Cannons can be deployed on artillery fortifications.\n∀x (ArtilleryFortification(x) → ¬Oldest(x)) ::: Roundels are the oldest artillery fortifications.\n∀x (ArtilleryFortification(x) → BatteryTower(x)) ::: Battery towers are an artillery fortification.\nConclusion:\nHigher(batteryTowers, adjacentWalls) ::: Battery towers are higher than adjacent walls.\n------\nProblem:\nA person is a human being. A human being is a mammal. A mammal is an animal. A person is not a mammal.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? A person is an animal.\nBased on the above information, is the following statement true, false, or uncertain? A mammal is a human being.\nBased on the above"
    ]
  },
  {
    "id": "FOLIO_train_380",
    "context": "A roundel is a rounded artillery fortification. A roundel is not higher than adjacent walls. Cannons can be deployed on artillery fortifications. Roundels are the oldest artillery fortifications. Battery towers are an artillery fortification.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Roundels can be deployed on roundels.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRoundel(x) ::: x is a roundel.\nArtilleryFortification(x) ::: x is an artillery fortification.\nHigher(x, y) ::: x is higher than y.\nDeploy(x, y) ::: x can be deployed on y.\nOldest(x) ::: x is the oldest artillery fortification.\nBatteryTower(x) ::: x is a battery tower.\nPremises:\n∀x (Roundel(x) → ArtilleryFortification(x)) ::: A roundel is a rounded artillery fortification.\n∀x (Roundel(x) → ¬Higher(x, adjacentWalls)) ::: A roundel is not higher than adjacent walls.\n∀x (ArtilleryFortification(x) → ∃y (Deploy(cannons, x) ∧ y)) ::: Cannons can be deployed on artillery fortifications.\n∀x (Roundel(x) → Oldest(x)) ::: Roundels are the oldest artillery fortifications.\n∀x (BatteryTower(x) → ArtilleryFortification(x)) ::: Battery towers are an artillery fortification.\nConclusion:\nDeploy(roundels, roundels) ::: Roundels can be deployed on roundels.\n------"
    ]
  },
  {
    "id": "FOLIO_train_381",
    "context": "All tissues are soft. Some papers are tissues.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Some papers are hard.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTissue(x) ::: x is a tissue.\nPaper(x) ::: x is a paper.\nSoft(x) ::: x is soft.\nHard(x) ::: x is hard.\nPremises:\n∀x (Tissue(x) → Soft(x)) ::: All tissues are soft.\n∃x (Paper(x) ∧ Tissue(x)) ::: Some papers are tissues.\nConclusion:\n¬∃x (Paper(x) ∧ Hard(x)) ::: Some papers are hard.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a"
    ]
  },
  {
    "id": "FOLIO_train_382",
    "context": "All volunteers receive intangible benefits for their work. Volunteers work regularly or on an as-needed basis. Some volunteers are trained. Volunteers work in groups or individually. Environmental volunteers contribute toward environmental management or conservation. Participating in natural disaster response is an example of volunteers working in groups on an as-needed basis.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Volunteers who participate in natural disaster response receive intangible benefits for their work.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nVolunteer(x) ::: x is a volunteer.\nWork(x) ::: x works.\nRegularly(x) ::: x works regularly.\nAsNeeded(x) ::: x works on an as-needed basis.\nGroup(x) ::: x works in groups.\nIndividually(x) ::: x works individually.\nTrained(x) ::: x is trained.\nBenefit(x) ::: x receives intangible benefits for their work.\nContribute(x, y) ::: x contributes toward y.\nManagement(x) ::: x is an environmental management.\nConservation(x) ::: x is an environmental conservation.\nEnvironmental(x) ::: x is an environmental volunteer.\nDisaster(x) ::: x is a natural disaster.\nResponse(x) ::: x is a natural disaster response.\nPremises:\n∀x (Volunteer(x) → Benefit(x)) ::: All volunteers receive intangible benefits for their work.\nVolunteer(x) ∨ AsNeeded(x) ::: Volunteers work regularly or on an as-needed basis.\n∃x (Volunteer(x) ∧ Trained(x)) ::: Some volunteers are trained.\nVolunteer(x) ∨ Group(x"
    ]
  },
  {
    "id": "FOLIO_train_383",
    "context": "All volunteers receive intangible benefits for their work. Volunteers work regularly or on an as-needed basis. Some volunteers are trained. Volunteers work in groups or individually. Environmental volunteers contribute toward environmental management or conservation. Participating in natural disaster response is an example of volunteers working in groups on an as-needed basis.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Environmental volunteers work in groups.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nVolunteer(x) ::: x is a volunteer.\nWork(x) ::: x works.\nRegularly(x) ::: x works regularly.\nAsNeeded(x) ::: x works on an as-needed basis.\nGroup(x) ::: x works in groups.\nIndividually(x) ::: x works individually.\nTrained(x) ::: x is trained.\nBenefit(x) ::: x receives intangible benefits for their work.\nContribute(x, y) ::: x contributes toward y.\nManagement(x) ::: x is an example of environmental management.\nConservation(x) ::: x is an example of environmental conservation.\nEnvironmental(x) ::: x is an environmental volunteer.\nDisaster(x) ::: x is an example of natural disaster response.\nPremises:\n∀x (Volunteer(x) → Benefit(x)) ::: All volunteers receive intangible benefits for their work.\n∀x (Volunteer(x) → (Regularly(x) ∨ AsNeeded(x))) ::: Volunteers work regularly or on an as-needed basis.\n∃x (Volunteer(x) ∧ Trained(x)) ::: Some volunteers are trained.\n∀x (Volunteer(x"
    ]
  },
  {
    "id": "FOLIO_train_384",
    "context": "All volunteers receive intangible benefits for their work. Volunteers work regularly or on an as-needed basis. Some volunteers are trained. Volunteers work in groups or individually. Environmental volunteers contribute toward environmental management or conservation. Participating in natural disaster response is an example of volunteers working in groups on an as-needed basis.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? To be a volunteer, you must be trained.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nVolunteer(x) ::: x is a volunteer.\nWork(x) ::: x works.\nRegularly(x) ::: x works regularly.\nAsNeeded(x) ::: x works on an as-needed basis.\nGroup(x) ::: x works in groups.\nIndividually(x) ::: x works individually.\nTrained(x) ::: x is trained.\nBenefit(x) ::: x receives intangible benefits.\nContribute(x, y) ::: x contributes toward y.\nManagement(x) ::: x is an environmental management.\nConservation(x) ::: x is an environmental conservation.\nEnvironmental(x) ::: x is an environmental volunteer.\nDisaster(x) ::: x is a natural disaster.\nResponse(x) ::: x is a natural disaster response.\nPremises:\n∀x (Volunteer(x) → Benefit(x)) ::: All volunteers receive intangible benefits for their work.\nVolunteer(x) ∧ (Regularly(x) ∨ AsNeeded(x)) ::: Volunteers work regularly or on an as-needed basis.\n∃x (Volunteer(x) ∧ Trained(x)) ::: Some volunteers are trained.\nVolunteer(x"
    ]
  },
  {
    "id": "FOLIO_train_385",
    "context": "All people who are very consistent and enjoy sticking to their regular routines do not like surprises. If people wear flannel shirts every day, then they are very consistent and enjoy sticking to their regular routines. If people do not like shopping for clothes and other materialistic goods, then they wear flannel shirts every day. All old people living in stable homes do not like surprises. If people have very high energy and are impulsive, then they like surprises. If Mike is not a person who wears flannel shirts every day and has very high energy and is impulsive, then Mike either is very consistent and enjoys sticking to his regular routines or does not like surprises.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mike is an old person living in a stable home.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nConsistent(x) ::: x is very consistent.\nEnjoy(x, y) ::: x enjoys y.\nRoutine(x) ::: x is a regular routine.\nStick(x, y) ::: x sticks to y.\nFlannelShirt(x) ::: x wears flannel shirts.\nClothes(x) ::: x is clothes.\nMaterialistic(x) ::: x is materialistic.\nShop(x, y) ::: x shops for y.\nSurprise(x) ::: x likes surprises.\nEnergy(x) ::: x has very high energy.\nImpulsive(x) ::: x is impulsive.\nHome(x) ::: x is a home.\nStable(x) ::: x is stable.\nPremises:\n∀x (Consistent(x) ∧ Enjoy(x, routine) → ¬Surprise(x)) ::: All people who are very consistent and enjoy sticking to their regular routines do not like surprises.\nFlannelShirt(x) → Consistent(x) ∧ Enjoy(x, routine) ::: If people wear flannel shirts every day, then they are very consistent and enjoy sticking to their regular routines.\n¬Shop(x, clothes) ∧"
    ]
  },
  {
    "id": "FOLIO_train_386",
    "context": "All people who are very consistent and enjoy sticking to their regular routines do not like surprises. If people wear flannel shirts every day, then they are very consistent and enjoy sticking to their regular routines. If people do not like shopping for clothes and other materialistic goods, then they wear flannel shirts every day. All old people living in stable homes do not like surprises. If people have very high energy and are impulsive, then they like surprises. If Mike is not a person who wears flannel shirts every day and has very high energy and is impulsive, then Mike either is very consistent and enjoys sticking to his regular routines or does not like surprises.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Mike wears flannel shirts every day or does not like shopping for clothes and other materialistic goods, then Mike is neither an old person living in a stable home nor does not like shopping for clothes and other materialistic goods.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nConsistent(x) ::: x is very consistent.\nEnjoy(x, y) ::: x enjoys y.\nRoutine(x) ::: x is a regular routine.\nStick(x, y) ::: x sticks to y.\nSurprise(x) ::: x likes surprises.\nFlannelShirt(x) ::: x wears flannel shirts.\nClothes(x) ::: x is clothes.\nMaterialisticGoods(x) ::: x is materialistic goods.\nShop(x, y) ::: x shops for y.\nOld(x) ::: x is an old person.\nHome(x) ::: x is a home.\nStable(x) ::: x is a stable home.\nEnergy(x) ::: x has very high energy.\nImpulsive(x) ::: x is impulsive.\nPremises:\n∀x (Consistent(x) ∧ Enjoy(x, routine) → ¬Surprise(x)) ::: All people who are very consistent and enjoy sticking to their regular routines do not like surprises.\n∀x (FlannelShirt(x) → Consistent(x) ∧ Enjoy(x, routine)) ::: If people wear flannel shirts every day, then they are very consistent"
    ]
  },
  {
    "id": "FOLIO_train_387",
    "context": "All people who are very consistent and enjoy sticking to their regular routines do not like surprises. If people wear flannel shirts every day, then they are very consistent and enjoy sticking to their regular routines. If people do not like shopping for clothes and other materialistic goods, then they wear flannel shirts every day. All old people living in stable homes do not like surprises. If people have very high energy and are impulsive, then they like surprises. If Mike is not a person who wears flannel shirts every day and has very high energy and is impulsive, then Mike either is very consistent and enjoys sticking to his regular routines or does not like surprises.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Mike is not an old person living in a stable home and does not like shopping for clothes and other materialistic goods, then Mike does not like shopping for clothes and other materialistic goods.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nConsistent(x) ::: x is very consistent.\nEnjoy(x, y) ::: x enjoys y.\nRoutine(x) ::: x is a regular routine.\nStick(x, y) ::: x sticks to y.\nFlannelShirt(x) ::: x wears flannel shirts.\nClothes(x) ::: x is clothes.\nMaterialisticGoods(x) ::: x is materialistic goods.\nShop(x, y) ::: x shops for y.\nSurprise(x) ::: x likes surprises.\nEnergy(x) ::: x has very high energy.\nImpulsive(x) ::: x is impulsive.\nHome(x) ::: x is a home.\nStable(x) ::: x is stable.\nPremises:\n∀x (Consistent(x) ∧ Enjoy(x, routine) → ¬Surprise(x)) ::: All people who are very consistent and enjoy sticking to their regular routines do not like surprises.\n∀x (FlannelShirt(x) → Consistent(x) ∧ Enjoy(x, routine)) ::: If people wear flannel shirts every day, then they are very consistent and enjoy sticking to their regular routines.\n∀x (¬"
    ]
  },
  {
    "id": "FOLIO_train_388",
    "context": "Adam owns cars. Adam has a favorite car. Among the cars he owns, Adam's favorite car is European. Adam broke his favorite car.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Adam owns a Japanese car.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nOwn(x, y) ::: x owns y.\nFavorite(x, y) ::: x's favorite is y.\nEuropean(x) ::: x is European.\nJapanese(x) ::: x is Japanese.\nBreak(x, y) ::: x broke y.\nPremises:\nOwn(adam, car1) ∧ Own(adam, car2) ∧ Own(adam, car3) ∧ Own(adam, car4) ∧ Own(adam, car5) ∧ Own(adam, car6) ∧ Own(adam, car7) ∧ Own(adam, car8) ∧ Own(adam, car9) ∧ Own(adam, car10) ::: Adam owns cars.\nFavorite(adam, car1) ∨ Favorite(adam, car2) ∨ Favorite(adam, car3) ∨ Favorite(adam, car4) ∨ Favorite(adam, car5) ∨ Favorite(adam, car6) ∨ Favorite(adam, car7) ∨ Favorite(adam, car8) ∨ Favorite(adam, car9) ∨ Favorite"
    ]
  },
  {
    "id": "FOLIO_train_389",
    "context": "Adam owns cars. Adam has a favorite car. Among the cars he owns, Adam's favorite car is European. Adam broke his favorite car.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Adam broke a European car.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nOwn(x, y) ::: x owns y.\nFavorite(x, y) ::: x's favorite is y.\nEuropean(x) ::: x is European.\nBreak(x, y) ::: x broke y.\nPremises:\nOwn(adam, car1) ∧ Own(adam, car2) ∧ Own(adam, car3) ∧ Own(adam, car4) ∧ Own(adam, car5) ∧ Own(adam, car6) ∧ Own(adam, car7) ∧ Own(adam, car8) ∧ Own(adam, car9) ∧ Own(adam, car10) ::: Adam owns cars.\nFavorite(adam, car1) ∨ Favorite(adam, car2) ∨ Favorite(adam, car3) ∨ Favorite(adam, car4) ∨ Favorite(adam, car5) ∨ Favorite(adam, car6) ∨ Favorite(adam, car7) ∨ Favorite(adam, car8) ∨ Favorite(adam, car9) ∨ Favorite(adam, car10) ::: Adam has a"
    ]
  },
  {
    "id": "FOLIO_train_390",
    "context": "No buildings in New Haven are higher than 400 meters. All buildings managed by Yale Housing are in New Haven. All buildings in Manhattan are higher than 400 meters. All buildings owned by Bloomberg are in Manhattan. All buildings with the Bloomberg logo are buildings owned by Bloomberg. Tower A is neither in New Haven nor in Manhattan. Tower B is a building with the Bloomberg logo and in Manhattan.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tower A is higher than 400 meters.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nHigher(x, y) ::: x is higher than y.\nBuilding(x) ::: x is a building.\nIn(x, y) ::: x is in y.\nManagedBy(x, y) ::: x is managed by y.\nOwnedBy(x, y) ::: x is owned by y.\nLogo(x, y) ::: x has the logo of y.\nPremises:\n¬∃x (Building(x) ∧ In(x, newHaven) ∧ Higher(x, 400)) ::: No buildings in New Haven are higher than 400 meters.\n∀x (Building(x) ∧ ManagedBy(x, yaleHousing) → In(x, newHaven)) ::: All buildings managed by Yale Housing are in New Haven.\n∀x (Building(x) ∧ In(x, manhattan) → Higher(x, 400)) ::: All buildings in Manhattan are higher than 400 meters.\n∀x (Building(x) ∧ OwnedBy(x, bloomberg) → In(x, manhattan)) ::: All buildings owned by Bloomberg are in Manhattan.\n∀x (Building(x) ∧ Logo(x, bloomberg) → OwnedBy(x, bloomberg)) ::: All buildings with the Bloomberg logo are buildings owned by Bloomberg.\n¬(In(towerA, newHaven) ∨ In(towerA, manhattan)) ::: Tower A is neither in New Haven nor in Manhattan.\nIn(towerB, manhattan) ∧ Logo(towerB, bloomberg) ::: Tower B is a building with the Bloomberg logo and in Manhattan.\nConclusion:\n¬Higher(towerA, 400) ::: Tower A is higher than 400 meters.\n------"
    ]
  },
  {
    "id": "FOLIO_train_391",
    "context": "No buildings in New Haven are higher than 400 meters. All buildings managed by Yale Housing are in New Haven. All buildings in Manhattan are higher than 400 meters. All buildings owned by Bloomberg are in Manhattan. All buildings with the Bloomberg logo are buildings owned by Bloomberg. Tower A is neither in New Haven nor in Manhattan. Tower B is a building with the Bloomberg logo and in Manhattan.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tower A is not higher than 400 meters.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nHigher(x, y) ::: x is higher than y.\nBuilding(x) ::: x is a building.\nIn(x, y) ::: x is in y.\nManagedBy(x, y) ::: x is managed by y.\nOwnedBy(x, y) ::: x is owned by y.\nLogo(x, y) ::: x has the logo of y.\nPremises:\n¬∃x (Building(x) ∧ In(x, newHaven) ∧ Higher(x, 400)) ::: No buildings in New Haven are higher than 400 meters.\n∀x (ManagedBy(x, yaleHousing) → In(x, newHaven)) ::: All buildings managed by Yale Housing are in New Haven.\n∀x (In(x, manhattan) → Higher(x, 400)) ::: All buildings in Manhattan are higher than 400 meters.\n∀x (OwnedBy(x, bloomberg) → In(x, manhattan)) ::: All buildings owned by Bloomberg are in Manhattan.\n∀x (Logo(x, bloomberg) → OwnedBy(x, bloomberg)) ::: All buildings with the Bloomberg logo are buildings owned by Bloomberg.\n¬(In(towerA, newHaven) ∨ In(towerA, manhattan)) ::: Tower A is neither in New Haven nor in Manhattan.\nIn(towerB, manhattan) ∧ Logo(towerB, bloomberg) ::: Tower B is a building with the Bloomberg logo and in Manhattan.\nConclusion:\n¬Higher(towerA, 400) ::: Tower A is not higher than 400 meters.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being"
    ]
  },
  {
    "id": "FOLIO_train_392",
    "context": "No buildings in New Haven are higher than 400 meters. All buildings managed by Yale Housing are in New Haven. All buildings in Manhattan are higher than 400 meters. All buildings owned by Bloomberg are in Manhattan. All buildings with the Bloomberg logo are buildings owned by Bloomberg. Tower A is neither in New Haven nor in Manhattan. Tower B is a building with the Bloomberg logo and in Manhattan.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tower A is a building with the Bloomberg logo or managed by Yale Housing.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nHigher(x, y) ::: x is higher than y.\nBuilding(x) ::: x is a building.\nIn(x, y) ::: x is in y.\nManagedBy(x, y) ::: x is managed by y.\nOwnedBy(x, y) ::: x is owned by y.\nLogo(x, y) ::: x has the logo of y.\nPremises:\n¬∃x (Building(x) ∧ Higher(x, 400) ∧ In(x, newHaven)) ::: No buildings in New Haven are higher than 400 meters.\n∀x (Building(x) ∧ In(x, newHaven) → ManagedBy(x, yaleHousing)) ::: All buildings managed by Yale Housing are in New Haven.\n∀x (Building(x) ∧ In(x, manhattan) → Higher(x, 400)) ::: All buildings in Manhattan are higher than 400 meters.\n∀x (Building(x) ∧ In(x, manhattan) → OwnedBy(x, bloomberg)) ::: All buildings owned by Bloomberg are in Manhattan.\n∀x (Building(x) ∧ Logo(x, bloomberg) → OwnedBy(x, bloomberg)) ::: All buildings with the Bloomberg logo are buildings owned by Bloomberg.\n¬(In(towerA, newHaven) ∨ In(towerA, manhattan)) ::: Tower A is neither in New Haven nor in Manhattan.\nIn(towerB, manhattan) ∧ Logo(towerB, bloomberg) ::: Tower B is a building with the Bloomberg logo and in Manhattan.\nConclusion:\n(Logo(towerA, bloomberg) ∨ ManagedBy(towerA, yaleHousing))"
    ]
  },
  {
    "id": "FOLIO_train_393",
    "context": "No buildings in New Haven are higher than 400 meters. All buildings managed by Yale Housing are in New Haven. All buildings in Manhattan are higher than 400 meters. All buildings owned by Bloomberg are in Manhattan. All buildings with the Bloomberg logo are buildings owned by Bloomberg. Tower A is neither in New Haven nor in Manhattan. Tower B is a building with the Bloomberg logo and in Manhattan.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tower A is neither a building with the Bloomberg logo nor managed by Yale Housing.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nHigher(x, y) ::: x is higher than y.\nBuilding(x) ::: x is a building.\nIn(x, y) ::: x is in y.\nManagedBy(x, y) ::: x is managed by y.\nOwnedBy(x, y) ::: x is owned by y.\nLogo(x, y) ::: x has the logo of y.\nPremises:\n¬∃x (Building(x) ∧ Higher(x, 400) ∧ In(x, newHaven)) ::: No buildings in New Haven are higher than 400 meters.\n∀x (Building(x) ∧ In(x, newHaven) → ManagedBy(x, yaleHousing)) ::: All buildings managed by Yale Housing are in New Haven.\n∀x (Building(x) ∧ In(x, manhattan) → Higher(x, 400)) ::: All buildings in Manhattan are higher than 400 meters.\n∀x (Building(x) ∧ In(x, manhattan) → OwnedBy(x, bloomberg)) ::: All buildings owned by Bloomberg are in Manhattan.\n∀x (Building(x) ∧ Logo(x, bloomberg) → OwnedBy(x, bloomberg)) ::: All buildings with the Bloomberg logo are buildings owned by Bloomberg.\n¬(In(towerA, newHaven) ∨ In(towerA, manhattan)) ::: Tower A is neither in New Haven nor in Manhattan.\nIn(towerB, manhattan) ∧ Logo(towerB, bloomberg) ::: Tower B is a building with the Bloomberg logo and in Manhattan.\nConclusion:\n¬(Logo(towerA, bloomberg) ∨ ManagedBy(towerA, yaleHousing"
    ]
  },
  {
    "id": "FOLIO_train_394",
    "context": "No fish are birds. Everything that is an osprey is a bird. If something is a carp, then it is a fish. All goldfish are carp. If Bubbles is either an osprey or a goldfish, then Bubbles is not a fish.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Bubbles is an Osprey.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFish(x) ::: x is a fish.\nBird(x) ::: x is a bird.\nOsprey(x) ::: x is an osprey.\nCarp(x) ::: x is a carp.\nGoldfish(x) ::: x is a goldfish.\nPremises:\n¬∃x (Fish(x) ∧ Bird(x)) ::: No fish are birds.\n∀x (Osprey(x) → Bird(x)) ::: Everything that is an osprey is a bird.\n∀x (Carp(x) → Fish(x)) ::: If something is a carp, then it is a fish.\n∀x (Goldfish(x) → Carp(x)) ::: All goldfish are carp.\n¬(Osprey(bubbles) ∨ Goldfish(bubbles)) → ¬Fish(bubbles) ::: If Bubbles is either an osprey or a goldfish, then Bubbles is not a fish.\nConclusion:\nOsprey(bubbles) ::: Bubbles is an Osprey.\n------\nProblem:\nNo fish are birds. Everything that is an osprey is a bird. If something is a carp, then it is a fish. All goldfish are carp. If Bubbles is either an osprey or a goldfish, then Bubbles is not a fish.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Bubbles is a fish.\n###\nPredicates:\nFish(x) ::: x is a fish.\nBird(x) ::: x is a bird.\nOsprey(x) ::: x is an osprey.\nCarp(x) ::: x is a carp.\nGoldfish(x) ::: x is a goldfish.\nPremises:\n¬∃x (Fish(x) ∧ Bird"
    ]
  },
  {
    "id": "FOLIO_train_395",
    "context": "No fish are birds. Everything that is an osprey is a bird. If something is a carp, then it is a fish. All goldfish are carp. If Bubbles is either an osprey or a goldfish, then Bubbles is not a fish.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Bubbles is a carp.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFish(x) ::: x is a fish.\nBird(x) ::: x is a bird.\nOsprey(x) ::: x is an osprey.\nCarp(x) ::: x is a carp.\nGoldfish(x) ::: x is a goldfish.\nPremises:\n¬∃x (Fish(x) ∧ Bird(x)) ::: No fish are birds.\n∀x (Osprey(x) → Bird(x)) ::: Everything that is an osprey is a bird.\n∀x (Carp(x) → Fish(x)) ::: If something is a carp, then it is a fish.\n∀x (Goldfish(x) → Carp(x)) ::: All goldfish are carp.\n¬(Osprey(bubbles) ∨ Goldfish(bubbles)) → ¬Fish(bubbles) ::: If Bubbles is either an osprey or a goldfish, then Bubbles is not a fish.\nConclusion:\nCarp(bubbles) ::: Bubbles is a carp.\n------\nProblem:\nNo fish are birds. Everything that is an osprey is a bird. If something is a carp, then it is a fish. All goldfish are carp. If Bubbles is either an osprey or a goldfish, then Bubbles is not a fish.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Bubbles is a carp.\n###\nPredicates:\nFish(x) ::: x is a fish.\nBird(x) ::: x is a bird.\nOsprey(x) ::: x is an osprey.\nCarp(x) ::: x is a carp.\nGoldfish(x) ::: x is a goldfish.\nPremises:\n¬∃x (Fish(x) ∧ Bird("
    ]
  },
  {
    "id": "FOLIO_train_396",
    "context": "No fish are birds. Everything that is an osprey is a bird. If something is a carp, then it is a fish. All goldfish are carp. If Bubbles is either an osprey or a goldfish, then Bubbles is not a fish.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Bubbles is not a carp.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFish(x) ::: x is a fish.\nBird(x) ::: x is a bird.\nOsprey(x) ::: x is an osprey.\nCarp(x) ::: x is a carp.\nGoldfish(x) ::: x is a goldfish.\nPremises:\n¬∃x (Fish(x) ∧ Bird(x)) ::: No fish are birds.\n∀x (Osprey(x) → Bird(x)) ::: Everything that is an osprey is a bird.\n∀x (Carp(x) → Fish(x)) ::: If something is a carp, then it is a fish.\n∀x (Goldfish(x) → Carp(x)) ::: All goldfish are carp.\n¬(Osprey(bubbles) ∨ Goldfish(bubbles)) → ¬Fish(bubbles) ::: If Bubbles is either an osprey or a goldfish, then Bubbles is not a fish.\nConclusion:\n¬Carp(bubbles) ::: Bubbles is not a carp.\n------\nProblem:\nNo fish are birds. Everything that is an osprey is a bird. If something is a carp, then it is a fish. All goldfish are carp. If Bubbles is either an osprey or a goldfish, then Bubbles is not a fish.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Bubbles is not a carp.\n###\nPredicates:\nFish(x) ::: x is a fish.\nBird(x) ::: x is a bird.\nOsprey(x) ::: x is an osprey.\nCarp(x) ::: x is a carp.\nGoldfish(x) ::: x is a goldfish.\nPremises:\n¬∃x (Fish(x)"
    ]
  },
  {
    "id": "FOLIO_train_397",
    "context": "Mr. and Mrs. Smith make a travel plan, they want to go to a city in California or Florida, and where neither of them has ever been. Cities in California that they are interested in are San Francisco, Los Angeles, and San Diego. Cities in Florida that they are interested in are Orlando and Miami. Mr. Smith has been to two cities in California. Mrs. Smith has been to one city in Florida.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mr. Smith has been to San Francisco.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "s\nPredicates:\nCity(x) ::: x is a city.\nCalifornia(x) ::: x is a city in California.\nFlorida(x) ::: x is a city in Florida.\nInterested(x, y) ::: x is interested in y.\nBeen(x, y) ::: x has been to y.\nPremises:\nInterested(smith, sanFrancisco) ∧ Interested(smith, losAngeles) ∧ Interested(smith, sanDiego) ∧ Interested(smith, orlando) ∧ Interested(smith, miami) ::: Cities in California that they are interested in are San Francisco, Los Angeles, and San Diego. Cities in Florida that they are interested in are Orlando and Miami.\nBeen(smith, sanFrancisco) ∨ Been(smith, losAngeles) ∨ Been(smith, sanDiego) ::: Mr. Smith has been to two cities in California.\nBeen(smith, orlando) ∨ Been(smith, miami) ::: Mrs. Smith has been to one city in Florida.\nConclusion:\nBeen(smith, sanFrancisco) ::: Mr. Smith has been to San Francisco.\n------\nProblem:\nThe following is a list of the 10 most popular baby names for boys and girls in the United States in 2010.\nBoys: Jacob, Ethan, Michael, Jayden, William, Alexander, Noah, Daniel, Aiden, Anthony\nGirls: Isabella, Sophia, Emma, Olivia, Ava, Emily, Abigail, Madison, Chloe, Mia\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The name of a boy is more popular than the name of a girl.\nBased on the above information, is the following statement true, false, or uncertain? The name of a girl is more popular than the name of a boy"
    ]
  },
  {
    "id": "FOLIO_train_398",
    "context": "Mr. and Mrs. Smith make a travel plan, they want to go to a city in California or Florida, and where neither of them has ever been. Cities in California that they are interested in are San Francisco, Los Angeles, and San Diego. Cities in Florida that they are interested in are Orlando and Miami. Mr. Smith has been to two cities in California. Mrs. Smith has been to one city in Florida.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? They have at leat one candidate city in Florida to visit.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "s\nPredicates:\nCity(x) ::: x is a city.\nCalifornia(x) ::: x is a city in California.\nFlorida(x) ::: x is a city in Florida.\nInterested(x, y) ::: x is interested in y.\nBeen(x, y) ::: x has been to y.\nPremises:\nInterested(smith, sanFrancisco) ∧ Interested(smith, losAngeles) ∧ Interested(smith, sanDiego) ∧ Interested(smith, orlando) ∧ Interested(smith, miami) ::: Cities in California that they are interested in are San Francisco, Los Angeles, and San Diego. Cities in Florida that they are interested in are Orlando and Miami.\nBeen(smith, sanFrancisco) ∧ Been(smith, losAngeles) ::: Mr. Smith has been to two cities in California.\nBeen(smith, orlando) ::: Mrs. Smith has been to one city in Florida.\nConclusion:\nFlorida(x) ∧ Interested(smith, x) ∧ ¬Been(smith, x) ::: They have at leat one candidate city in Florida to visit.\n------\nProblem:\nThe following is a list of the 10 most popular baby names for boys and girls in the United States in 2010.\nBoys: Jacob, Ethan, Michael, Jayden, William, Alexander, Noah, Daniel, Aiden, Anthony\nGirls: Isabella, Sophia, Emma, Olivia, Ava, Emily, Abigail, Madison, Chloe, Mia\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The name of the 10th most popular boy name is Anthony.\nBased on the above information, is the following statement true, false, or uncertain? The name of the 10th most popular girl name is Mia."
    ]
  },
  {
    "id": "FOLIO_train_399",
    "context": "Mr. and Mrs. Smith make a travel plan, they want to go to a city in California or Florida, and where neither of them has ever been. Cities in California that they are interested in are San Francisco, Los Angeles, and San Diego. Cities in Florida that they are interested in are Orlando and Miami. Mr. Smith has been to two cities in California. Mrs. Smith has been to one city in Florida.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? They have at least two candidate cities in California to visit.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "s\nPredicates:\nCity(x) ::: x is a city.\nCalifornia(x) ::: x is a city in California.\nFlorida(x) ::: x is a city in Florida.\nInterested(x, y) ::: x is interested in y.\nBeen(x, y) ::: x has been to y.\nPremises:\nInterested(smith, sanFrancisco) ∧ Interested(smith, losAngeles) ∧ Interested(smith, sanDiego) ∧ Interested(smith, orlando) ∧ Interested(smith, miami) ::: Cities in California that they are interested in are San Francisco, Los Angeles, and San Diego. Cities in Florida that they are interested in are Orlando and Miami.\nBeen(smith, sanFrancisco) ∧ Been(smith, losAngeles) ::: Mr. Smith has been to two cities in California.\nBeen(smith, orlando) ::: Mrs. Smith has been to one city in Florida.\nConclusion:\n∃x ∃y (California(x) ∧ California(y) ∧ Interested(smith, x) ∧ Interested(smith, y)) ::: They have at least two candidate cities in California to visit.\n------\nProblem:\nAlice is a student. Bob is a student. Charlie is a student. Alice is a teacher. Bob is a teacher. Charlie is a teacher.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Alice is a student and a teacher.\nBased on the above information, is the following statement true, false, or uncertain? Alice is a student or a teacher.\nBased on the above information, is the following statement true, false, or uncertain? Alice is a student and Bob is a teacher.\nBased on the above information, is the following statement true, false, or uncertain? Alice is a student and Bob is a student.\nBased on the above information"
    ]
  },
  {
    "id": "FOLIO_train_400",
    "context": "Everything is either big or small. All big things are heavy. All small things are light. All heavy things are still. All light things are unstable. All unstable things are changing. All unstable things are kinetic. A bird is not both heavy and still.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A bird is still.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig(x) ::: x is big.\nSmall(x) ::: x is small.\nHeavy(x) ::: x is heavy.\nLight(x) ::: x is light.\nStill(x) ::: x is still.\nUnstable(x) ::: x is unstable.\nChanging(x) ::: x is changing.\nKinetic(x) ::: x is kinetic.\nPremises:\n∀x (Big(x) ∨ Small(x)) ::: Everything is either big or small.\n∀x (Big(x) → Heavy(x)) ::: All big things are heavy.\n∀x (Small(x) → Light(x)) ::: All small things are light.\n∀x (Heavy(x) → Still(x)) ::: All heavy things are still.\n∀x (Light(x) → Unstable(x)) ::: All light things are unstable.\n∀x (Unstable(x) → Changing(x)) ::: All unstable things are changing.\n∀x (Unstable(x) → Kinetic(x)) ::: All unstable things are kinetic.\n¬(Heavy(bird) ∧ Still(bird)) ::: A bird is not both heavy and still.\nConclusion:\n¬Still(bird) ::: A bird is still.\n------"
    ]
  },
  {
    "id": "FOLIO_train_401",
    "context": "Everything is either big or small. All big things are heavy. All small things are light. All heavy things are still. All light things are unstable. All unstable things are changing. All unstable things are kinetic. A bird is not both heavy and still.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A bird is not still.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig(x) ::: x is big.\nSmall(x) ::: x is small.\nHeavy(x) ::: x is heavy.\nLight(x) ::: x is light.\nStill(x) ::: x is still.\nUnstable(x) ::: x is unstable.\nChanging(x) ::: x is changing.\nKinetic(x) ::: x is kinetic.\nPremises:\n∀x (Big(x) ∨ Small(x)) ::: Everything is either big or small.\n∀x (Big(x) → Heavy(x)) ::: All big things are heavy.\n∀x (Small(x) → Light(x)) ::: All small things are light.\n∀x (Heavy(x) → Still(x)) ::: All heavy things are still.\n∀x (Light(x) → Unstable(x)) ::: All light things are unstable.\n∀x (Unstable(x) → Changing(x)) ::: All unstable things are changing.\n∀x (Unstable(x) → Kinetic(x)) ::: All unstable things are kinetic.\n¬(Heavy(bird) ∧ Still(bird)) ::: A bird is not both heavy and still.\nConclusion:\n¬Still(bird) ::: A bird is not still."
    ]
  },
  {
    "id": "FOLIO_train_402",
    "context": "Everything is either big or small. All big things are heavy. All small things are light. All heavy things are still. All light things are unstable. All unstable things are changing. All unstable things are kinetic. A bird is not both heavy and still.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A bird is kinetic and changing.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig(x) ::: x is big.\nSmall(x) ::: x is small.\nHeavy(x) ::: x is heavy.\nLight(x) ::: x is light.\nStill(x) ::: x is still.\nUnstable(x) ::: x is unstable.\nChanging(x) ::: x is changing.\nKinetic(x) ::: x is kinetic.\nPremises:\n∀x (Big(x) ∨ Small(x)) ::: Everything is either big or small.\n∀x (Big(x) → Heavy(x)) ::: All big things are heavy.\n∀x (Small(x) → Light(x)) ::: All small things are light.\n∀x (Heavy(x) → Still(x)) ::: All heavy things are still.\n∀x (Light(x) → Unstable(x)) ::: All light things are unstable.\n∀x (Unstable(x) → Changing(x)) ::: All unstable things are changing.\n∀x (Unstable(x) → Kinetic(x)) ::: All unstable things are kinetic.\n¬(Heavy(bird) ∧ Still(bird)) ::: A bird is not both heavy and still.\nConclusion:\nKinetic(bird) ∧ Changing(bird) :::"
    ]
  },
  {
    "id": "FOLIO_train_403",
    "context": "Everything is either big or small. All big things are heavy. All small things are light. All heavy things are still. All light things are unstable. All unstable things are changing. All unstable things are kinetic. A bird is not both heavy and still.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A bird is kinetic or changing.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig(x) ::: x is big.\nSmall(x) ::: x is small.\nHeavy(x) ::: x is heavy.\nLight(x) ::: x is light.\nStill(x) ::: x is still.\nUnstable(x) ::: x is unstable.\nChanging(x) ::: x is changing.\nKinetic(x) ::: x is kinetic.\nPremises:\n∀x (Big(x) ∨ Small(x)) ::: Everything is either big or small.\n∀x (Big(x) → Heavy(x)) ::: All big things are heavy.\n∀x (Small(x) → Light(x)) ::: All small things are light.\n∀x (Heavy(x) → Still(x)) ::: All heavy things are still.\n∀x (Light(x) → Unstable(x)) ::: All light things are unstable.\n∀x (Unstable(x) → Changing(x)) ::: All unstable things are changing.\n∀x (Unstable(x) → Kinetic(x)) ::: All unstable things are kinetic.\n¬(Heavy(bird) ∧ Still(bird)) ::: A bird is not both heavy and still.\nConclusion:\nKinetic(bird) ∨ Changing(bird) :::"
    ]
  },
  {
    "id": "FOLIO_train_404",
    "context": "Everything is either big or small. All big things are heavy. All small things are light. All heavy things are still. All light things are unstable. All unstable things are changing. All unstable things are kinetic. A bird is not both heavy and still.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A bird is either kinetic or changing.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig(x) ::: x is big.\nSmall(x) ::: x is small.\nHeavy(x) ::: x is heavy.\nLight(x) ::: x is light.\nStill(x) ::: x is still.\nUnstable(x) ::: x is unstable.\nChanging(x) ::: x is changing.\nKinetic(x) ::: x is kinetic.\nPremises:\n∀x (Big(x) ∨ Small(x)) ::: Everything is either big or small.\n∀x (Big(x) → Heavy(x)) ::: All big things are heavy.\n∀x (Small(x) → Light(x)) ::: All small things are light.\n∀x (Heavy(x) → Still(x)) ::: All heavy things are still.\n∀x (Light(x) → Unstable(x)) ::: All light things are unstable.\n∀x (Unstable(x) → Changing(x)) ::: All unstable things are changing.\n∀x (Unstable(x) → Kinetic(x)) ::: All unstable things are kinetic.\n¬(Heavy(bird) ∧ Still(bird)) ::: A bird is not both heavy and still.\nConclusion:\n(Kinetic(bird) ∨ Changing(bird)) :"
    ]
  },
  {
    "id": "FOLIO_train_405",
    "context": "Everything is either big or small. All big things are heavy. All small things are light. All heavy things are still. All light things are unstable. All unstable things are changing. All unstable things are kinetic. A bird is not both heavy and still.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If a bird is small or still, then the bird is either kinetic or changing.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig(x) ::: x is big.\nSmall(x) ::: x is small.\nHeavy(x) ::: x is heavy.\nLight(x) ::: x is light.\nStill(x) ::: x is still.\nUnstable(x) ::: x is unstable.\nChanging(x) ::: x is changing.\nKinetic(x) ::: x is kinetic.\nPremises:\n∀x (Big(x) ∨ Small(x)) ::: Everything is either big or small.\n∀x (Big(x) → Heavy(x)) ::: All big things are heavy.\n∀x (Small(x) → Light(x)) ::: All small things are light.\n∀x (Heavy(x) → Still(x)) ::: All heavy things are still.\n∀x (Light(x) → Unstable(x)) ::: All light things are unstable.\n∀x (Unstable(x) → Changing(x)) ::: All unstable things are changing.\n∀x (Unstable(x) → Kinetic(x)) ::: All unstable things are kinetic.\n¬(Heavy(bird) ∧ Still(bird)) ::: A bird is not both heavy and still.\nConclusion:\n((Small(bird) ∨ Still(bird)) → (K"
    ]
  },
  {
    "id": "FOLIO_train_406",
    "context": "DI Ray is a police procedural television series. DI Ray was created and written by Maya Sondhi. DI Ray was produced by Jed Mercurio. Maya Sondhi and Jed Mercurio are both British.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? DI Ray was created by a Brit.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBrit(x) ::: x is a Brit.\nCreated(x, y) ::: x created y.\nWritten(x, y) ::: x wrote y.\nProduced(x, y) ::: x produced y.\nPremises:\nCreated(maya, diRay) ∧ Written(maya, diRay) ::: DI Ray is a police procedural television series. DI Ray was created and written by Maya Sondhi.\nProduced(jed, diRay) ::: DI Ray was produced by Jed Mercurio.\nBrit(maya) ∧ Brit(jed) ::: Maya Sondhi and Jed Mercurio are both British.\nConclusion:\nCreated(brit, diRay) ::: DI Ray was created by a Brit.\n------\nProblem:\nThe 2019–20 coronavirus pandemic is an ongoing pandemic of coronavirus disease 2019 (COVID-19), caused by severe acute respiratory syndrome coronavirus 2 (SARS-CoV-2). The outbreak was first identified in Wuhan, China, in December 2019. The World Health Organization declared the outbreak a Public Health Emergency of International Concern on 30 January 2020 and a pandemic on 11 March 2020"
    ]
  },
  {
    "id": "FOLIO_train_407",
    "context": "DI Ray is a police procedural television series. DI Ray was created and written by Maya Sondhi. DI Ray was produced by Jed Mercurio. Maya Sondhi and Jed Mercurio are both British.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Some Brit produced a television series.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBrit(x) ::: x is a British.\nProduce(x, y) ::: x produced y.\nCreate(x, y) ::: x created y.\nWrite(x, y) ::: x wrote y.\nSeries(x) ::: x is a television series.\nPremises:\nSeries(diRay) ∧ Create(maya, diRay) ∧ Write(maya, diRay) ∧ Produce(jed, diRay) ::: DI Ray is a police procedural television series. DI Ray was created and written by Maya Sondhi. DI Ray was produced by Jed Mercurio.\nBrit(maya) ∧ Brit(jed) ::: Maya Sondhi and Jed Mercurio are both British.\nConclusion:\n∃x ∃y (Brit(x) ∧ Produce(x, y) ∧ Series(y)) ::: Some Brit produced a television series.\n------\nProblem:\nThe 2019–20 coronavirus pandemic is an ongoing pandemic of coronavirus disease 2019 (COVID-19), caused by severe acute respiratory syndrome coronavirus 2 (SARS-CoV-2). The outbreak was first identified in Wuhan, China, in December 2019. The World Health Organization declared the"
    ]
  },
  {
    "id": "FOLIO_train_408",
    "context": "All men are human. All gentlemen are men. All lawyers are gentlemen. All women are human. No sheep are human. If Mike is not both a human and a sheep, then Mike is either a man or a human.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mike is a woman.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMan(x) ::: x is a man.\nGentleman(x) ::: x is a gentleman.\nLawyer(x) ::: x is a lawyer.\nWoman(x) ::: x is a woman.\nHuman(x) ::: x is a human.\nSheep(x) ::: x is a sheep.\nPremises:\n∀x (Man(x) → Human(x)) ::: All men are human.\n∀x (Gentleman(x) → Man(x)) ::: All gentlemen are men.\n∀x (Lawyer(x) → Gentleman(x)) ::: All lawyers are gentlemen.\n∀x (Woman(x) → Human(x)) ::: All women are human.\n¬∃x (Sheep(x) ∧ Human(x)) ::: No sheep are human.\n¬(Human(mike) ∧ Sheep(mike)) → (Man(mike) ∨ Human(mike)) ::: If Mike is not both a human and a sheep, then Mike is either a man or a human.\nConclusion:\nWoman(mike) ::: Mike is a woman.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine."
    ]
  },
  {
    "id": "FOLIO_train_409",
    "context": "All men are human. All gentlemen are men. All lawyers are gentlemen. All women are human. No sheep are human. If Mike is not both a human and a sheep, then Mike is either a man or a human.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Mike is a gentleman or a lawyer, then Mike is neither a woman nor a lawyer.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMan(x) ::: x is a man.\nGentleman(x) ::: x is a gentleman.\nLawyer(x) ::: x is a lawyer.\nWoman(x) ::: x is a woman.\nHuman(x) ::: x is a human.\nSheep(x) ::: x is a sheep.\nPremises:\n∀x (Man(x) → Human(x)) ::: All men are human.\n∀x (Gentleman(x) → Man(x)) ::: All gentlemen are men.\n∀x (Lawyer(x) → Gentleman(x)) ::: All lawyers are gentlemen.\n∀x (Woman(x) → Human(x)) ::: All women are human.\n¬∃x (Sheep(x) ∧ Human(x)) ::: No sheep are human.\n¬(Human(mike) ∧ Sheep(mike)) → (Man(mike) ∨ Human(mike)) ::: If Mike is not both a human and a sheep, then Mike is either a man or a human.\nConclusion:\n¬(Gentleman(mike) ∨ Lawyer(mike)) → (Woman(mike) ∨ Lawyer(mike)) ::: If Mike is a gentleman or a lawyer, then Mike is neither a woman"
    ]
  },
  {
    "id": "FOLIO_train_410",
    "context": "All men are human. All gentlemen are men. All lawyers are gentlemen. All women are human. No sheep are human. If Mike is not both a human and a sheep, then Mike is either a man or a human.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Mike is not both a woman and a lawyer, then Mike is a lawyer.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMan(x) ::: x is a man.\nGentleman(x) ::: x is a gentleman.\nLawyer(x) ::: x is a lawyer.\nWoman(x) ::: x is a woman.\nHuman(x) ::: x is a human.\nSheep(x) ::: x is a sheep.\nPremises:\n∀x (Man(x) → Human(x)) ::: All men are human.\n∀x (Gentleman(x) → Man(x)) ::: All gentlemen are men.\n∀x (Lawyer(x) → Gentleman(x)) ::: All lawyers are gentlemen.\n∀x (Woman(x) → Human(x)) ::: All women are human.\n¬∃x (Sheep(x) ∧ Human(x)) ::: No sheep are human.\n¬(Human(mike) ∧ Sheep(mike)) → (Man(mike) ∨ Human(mike)) ::: If Mike is not both a human and a sheep, then Mike is either a man or a human.\nConclusion:\n¬(Woman(mike) ∧ Lawyer(mike)) → Lawyer(mike) ::: If Mike is not both a woman and a lawyer, then Mike is a lawyer.\n------"
    ]
  },
  {
    "id": "FOLIO_train_411",
    "context": "Some defenders are centerback. All defenders are soccer players. No soccer players are professional basketball players. All NBA players are professional basketball players. Stephen Curry is an NBA player.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Stephen Curry is a centerback.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDefender(x) ::: x is a defender.\nCenterback(x) ::: x is a centerback.\nSoccerPlayer(x) ::: x is a soccer player.\nBasketballPlayer(x) ::: x is a basketball player.\nProfessionalBasketballPlayer(x) ::: x is a professional basketball player.\nNBAPlayer(x) ::: x is an NBA player.\nPremises:\n∃x (Defender(x) ∧ Centerback(x)) ::: Some defenders are centerback.\n∀x (Defender(x) → SoccerPlayer(x)) ::: All defenders are soccer players.\n¬∃x (SoccerPlayer(x) ∧ ProfessionalBasketballPlayer(x)) ::: No soccer players are professional basketball players.\n∀x (NBAPlayer(x) → ProfessionalBasketballPlayer(x)) ::: All NBA players are professional basketball players.\nNBAPlayer(stephen) ::: Stephen Curry is an NBA player.\nConclusion:\n¬Centerback(stephen) ::: Stephen Curry is a centerback.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is una"
    ]
  },
  {
    "id": "FOLIO_train_412",
    "context": "Some defenders are centerback. All defenders are soccer players. No soccer players are professional basketball players. All NBA players are professional basketball players. Stephen Curry is an NBA player.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Stephen Curry is not a centerback and a defender.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDefender(x) ::: x is a defender.\nCenterback(x) ::: x is a centerback.\nSoccerPlayer(x) ::: x is a soccer player.\nProfessionalBasketballPlayer(x) ::: x is a professional basketball player.\nNBAPlayer(x) ::: x is an NBA player.\nPremises:\n∃x (Defender(x) ∧ Centerback(x)) ::: Some defenders are centerback.\n∀x (Defender(x) → SoccerPlayer(x)) ::: All defenders are soccer players.\n¬∃x (SoccerPlayer(x) ∧ ProfessionalBasketballPlayer(x)) ::: No soccer players are professional basketball players.\n∀x (NBAPlayer(x) → ProfessionalBasketballPlayer(x)) ::: All NBA players are professional basketball players.\nNBAPlayer(stephen) ::: Stephen Curry is an NBA player.\nConclusion:\n¬(Defender(stephen) ∧ Centerback(stephen)) ::: Stephen Curry is not a centerback and a defender.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware"
    ]
  },
  {
    "id": "FOLIO_train_413",
    "context": "Some defenders are centerback. All defenders are soccer players. No soccer players are professional basketball players. All NBA players are professional basketball players. Stephen Curry is an NBA player.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Stephen Curry is not a centerback and a defender, then Stephen Curry is neither a soccer player nor a professional basketball player.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDefender(x) ::: x is a defender.\nCenterback(x) ::: x is a centerback.\nSoccerPlayer(x) ::: x is a soccer player.\nProfessionalBasketballPlayer(x) ::: x is a professional basketball player.\nNBAPlayer(x) ::: x is an NBA player.\nPremises:\n∃x (Defender(x) ∧ Centerback(x)) ::: Some defenders are centerback.\n∀x (Defender(x) → SoccerPlayer(x)) ::: All defenders are soccer players.\n¬∃x (SoccerPlayer(x) ∧ ProfessionalBasketballPlayer(x)) ::: No soccer players are professional basketball players.\n∀x (NBAPlayer(x) → ProfessionalBasketballPlayer(x)) ::: All NBA players are professional basketball players.\nNBAPlayer(stephen) ::: Stephen Curry is an NBA player.\nConclusion:\n¬(Defender(stephen) ∧ Centerback(stephen)) → (¬SoccerPlayer(stephen) ∨ ¬ProfessionalBasketballPlayer(stephen)) ::: If Stephen Curry is not a centerback and a defender, then Stephen Curry is neither a soccer player nor a professional basketball player.\n------\nProblem:\nAll people who regularly drink coffee are dependent"
    ]
  },
  {
    "id": "FOLIO_train_414",
    "context": "If a person doesn't have enough money to buy a product, then that person can't buy it. Monitors are products. 4k monitors are more expensive than 1080 monitors and 2k monitors. John is a person. John doesn't have enough money to buy a 2k monitor.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? John can not buy the 1080 monitor.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProduct(x) ::: x is a product.\nMonitor(x) ::: x is a monitor.\n4kMonitor(x) ::: x is a 4k monitor.\n1080Monitor(x) ::: x is a 1080 monitor.\n2kMonitor(x) ::: x is a 2k monitor.\nExpensive(x, y) ::: x is more expensive than y.\nPerson(x) ::: x is a person.\nBuy(x, y) ::: x buys y.\nEnough(x, y) ::: x has enough y.\nMoney(x) ::: x is money.\nPremises:\n¬Buy(x, y) → ¬Enough(x, money) ::: If a person doesn't have enough money to buy a product, then that person can't buy it.\n∀x (Monitor(x) → Product(x)) ::: Monitors are products.\n∀x (4kMonitor(x) → Expensive(x, 1080Monitor(x))) ::: 4k monitors are more expensive than 1080 monitors.\n∀x (4kMonitor(x) → Expensive(x, 2kMonitor(x))) ::: 4k mon"
    ]
  },
  {
    "id": "FOLIO_train_415",
    "context": "If a person doesn't have enough money to buy a product, then that person can't buy it. Monitors are products. 4k monitors are more expensive than 1080 monitors and 2k monitors. John is a person. John doesn't have enough money to buy a 2k monitor.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? John can not buy the 2k monitor.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProduct(x) ::: x is a product.\nMonitor(x) ::: x is a monitor.\n4kMonitor(x) ::: x is a 4k monitor.\n1080Monitor(x) ::: x is a 1080 monitor.\n2kMonitor(x) ::: x is a 2k monitor.\nExpensive(x, y) ::: x is more expensive than y.\nPerson(x) ::: x is a person.\nEnough(x, y) ::: x has enough y.\nBuy(x, y) ::: x buys y.\nPremises:\n¬Buy(x, y) → ¬Enough(x, y) ::: If a person doesn't have enough money to buy a product, then that person can't buy it.\n∀x (Monitor(x) → Product(x)) ::: Monitors are products.\n∀x (4kMonitor(x) → Expensive(x, 1080Monitor(x))) ::: 4k monitors are more expensive than 1080 monitors.\n∀x (4kMonitor(x) → Expensive(x, 2kMonitor(x))) ::: 4k monitors are more expensive than 2k monitors."
    ]
  },
  {
    "id": "FOLIO_train_416",
    "context": "All artificial satellites are important scientific achievements. Some artificial satellites are not U.S. inventions.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? All important scientific achievements are U.S. inventions.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSatellite(x) ::: x is an artificial satellite.\nAchievement(x) ::: x is an important scientific achievement.\nInvention(x) ::: x is a U.S. invention.\nPremises:\n∀x (Satellite(x) → Achievement(x)) ::: All artificial satellites are important scientific achievements.\n∃x (Satellite(x) ∧ ¬Invention(x)) ::: Some artificial satellites are not U.S. inventions.\nConclusion:\n¬∀x (Achievement(x) → Invention(x)) ::: All important scientific achievements are U.S. inventions.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that"
    ]
  },
  {
    "id": "FOLIO_train_417",
    "context": "Some cats are not pets. All cats are mammals.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Some mammals are not pets.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCat(x) ::: x is a cat.\nPet(x) ::: x is a pet.\nMammal(x) ::: x is a mammal.\nPremises:\n∃x ¬Pet(x) ∧ Cat(x) ::: Some cats are not pets.\n∀x Cat(x) → Mammal(x) ::: All cats are mammals.\nConclusion:\n∃x ¬Pet(x) ∧ Mammal(x) ::: Some mammals are not pets.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nBased on the above information, is the following statement true, false, or uncertain? If Rina"
    ]
  },
  {
    "id": "FOLIO_train_418",
    "context": "If people visit a coffee shop at least three times a week, then they are addicted to coffee or other caffeinated drinks. People either visit a coffee shop at least three times a week or order takeout at least once a day. If people make a lot of their own food at home using recipes and online guides, then they order takeout at least once a day. If people own at least one coffeemaker and one blender in their home, then they do not order takeout at least once a day. All people who lead very busy lives that include 12-hour work hours make a lot of their own food at home using recipes and online guides. Sam is either both addicted to coffee or other caffeinated drinks or leads very busy lives that include 12-hour work hours, or she is neither addicted to coffee and other caffeinated drinks nor leads very busy lives that include 12-hour work hours",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Sam is addicted to coffee and other caffeinated drinks.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAddicted(x) ::: x is addicted to coffee or other caffeinated drinks.\nVisit(x) ::: x visits a coffee shop.\nOrder(x) ::: x orders takeout.\nMake(x) ::: x makes a lot of their own food at home using recipes and online guides.\nOwn(x) ::: x owns at least one coffeemaker and one blender in their home.\nBusy(x) ::: x leads very busy lives that include 12-hour work hours.\nPremises:\n∀x (Visit(x) ∧ 3 → Addicted(x)) ::: If people visit a coffee shop at least three times a week, then they are addicted to coffee or other caffeinated drinks.\n∀x (Visit(x) ⊕ Order(x)) ::: People either visit a coffee shop at least three times a week or order takeout at least once a day.\n∀x (Make(x) → Order(x)) ::: If people make a lot of their own food at home using recipes and online guides, then they order takeout at least once a day.\n∀x (Own(x) → ¬Order(x)) ::: If people own at least one coffeemaker and one blender in their home, then they"
    ]
  },
  {
    "id": "FOLIO_train_419",
    "context": "If people visit a coffee shop at least three times a week, then they are addicted to coffee or other caffeinated drinks. People either visit a coffee shop at least three times a week or order takeout at least once a day. If people make a lot of their own food at home using recipes and online guides, then they order takeout at least once a day. If people own at least one coffeemaker and one blender in their home, then they do not order takeout at least once a day. All people who lead very busy lives that include 12-hour work hours make a lot of their own food at home using recipes and online guides. Sam is either both addicted to coffee or other caffeinated drinks or leads very busy lives that include 12-hour work hours, or she is neither addicted to coffee and other caffeinated drinks nor leads very busy lives that include 12-hour work hours",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Sam owns at least one coffeemaker and one blender in her home.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAddicted(x) ::: x is addicted to coffee or other caffeinated drinks.\nVisit(x) ::: x visits a coffee shop.\nOrder(x) ::: x orders takeout.\nMake(x) ::: x makes a lot of their own food at home using recipes and online guides.\nOwn(x) ::: x owns at least one coffeemaker and one blender in their home.\nBusy(x) ::: x leads very busy lives that include 12-hour work hours.\nPremises:\n∀x (Visit(x) ∧ 3 → Addicted(x)) ::: If people visit a coffee shop at least three times a week, then they are addicted to coffee or other caffeinated drinks.\n∀x (Visit(x) ∨ Order(x)) ::: People either visit a coffee shop at least three times a week or order takeout at least once a day.\n∀x (Make(x) → Order(x)) ::: If people make a lot of their own food at home using recipes and online guides, then they order takeout at least once a day.\n∀x (Own(x) → ¬Order(x)) ::: If people own at least one coffeemaker and one blender in their home, then they"
    ]
  },
  {
    "id": "FOLIO_train_420",
    "context": "If people visit a coffee shop at least three times a week, then they are addicted to coffee or other caffeinated drinks. People either visit a coffee shop at least three times a week or order takeout at least once a day. If people make a lot of their own food at home using recipes and online guides, then they order takeout at least once a day. If people own at least one coffeemaker and one blender in their home, then they do not order takeout at least once a day. All people who lead very busy lives that include 12-hour work hours make a lot of their own food at home using recipes and online guides. Sam is either both addicted to coffee or other caffeinated drinks or leads very busy lives that include 12-hour work hours, or she is neither addicted to coffee and other caffeinated drinks nor leads very busy lives that include 12-hour work hours",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Sam either owns at least one coffeemaker and one blender in her home or orders takeout at least once a day.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAddicted(x) ::: x is addicted to coffee or other caffeinated drinks.\nVisit(x) ::: x visits a coffee shop.\nOrder(x) ::: x orders takeout.\nMake(x) ::: x makes a lot of their own food at home using recipes and online guides.\nOwn(x) ::: x owns at least one coffeemaker and one blender in their home.\nBusy(x) ::: x leads very busy lives that include 12-hour work hours.\nPremises:\n∀x (Visit(x) ∧ 3 → Addicted(x)) ::: If people visit a coffee shop at least three times a week, then they are addicted to coffee or other caffeinated drinks.\n∀x (Visit(x) ∨ Order(x)) ::: People either visit a coffee shop at least three times a week or order takeout at least once a day.\n∀x (Make(x) → Order(x)) ::: If people make a lot of their own food at home using recipes and online guides, then they order takeout at least once a day.\n∀x (Own(x) → ¬Order(x)) ::: If people own at least one coffeemaker and one blender in their home, then they do not order takeout at least once a day.\n∀x (Busy(x) → Make(x)) ::: All people who lead very busy lives that include 12-hour work hours make a lot of their own food at home using recipes and online guides.\n(Addicted(sam) ∧ Busy(sam)) ⊕ ¬(Addicted(sam) ∨ Busy(sam)) ::: Sam is either both addicted to coffee or other caffeinated drinks or leads very busy lives that include 12-hour work hours, or she is neither addicted to coffee and other caffeinated drinks nor leads very busy lives that include 12-hour work hours\nConclusion:\nOwn(sam) ∨ Order(sam) ::: Sam either owns at least one coffeemaker and one blender in her home or orders takeout at least once a day.\n------"
    ]
  },
  {
    "id": "FOLIO_train_421",
    "context": "No professional basketball players are soccer players. All NBA players are professional basketball players. All defenders are soccer players. All centerbacks are defenders. Roger Federer is not an NBA player or a defender.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Roger Federer is a centerback.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProfessionalBasketballPlayer(x) ::: x is a professional basketball player.\nNBAPlayer(x) ::: x is an NBA player.\nSoccerPlayer(x) ::: x is a soccer player.\nDefender(x) ::: x is a defender.\nCenterback(x) ::: x is a centerback.\nPremises:\n¬∃x (ProfessionalBasketballPlayer(x) ∧ SoccerPlayer(x)) ::: No professional basketball players are soccer players.\n∀x (NBAPlayer(x) → ProfessionalBasketballPlayer(x)) ::: All NBA players are professional basketball players.\n∀x (Defender(x) → SoccerPlayer(x)) ::: All defenders are soccer players.\n∀x (Centerback(x) → Defender(x)) ::: All centerbacks are defenders.\n¬(NBAPlayer(roger) ∨ Defender(roger)) ::: Roger Federer is not an NBA player or a defender.\nConclusion:\n¬Centerback(roger) ::: Roger Federer is a centerback.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks"
    ]
  },
  {
    "id": "FOLIO_train_422",
    "context": "No professional basketball players are soccer players. All NBA players are professional basketball players. All defenders are soccer players. All centerbacks are defenders. Roger Federer is not an NBA player or a defender.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Roger Federer is not a centerback.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProfessionalBasketballPlayer(x) ::: x is a professional basketball player.\nNBAPlayer(x) ::: x is an NBA player.\nSoccerPlayer(x) ::: x is a soccer player.\nDefender(x) ::: x is a defender.\nCenterback(x) ::: x is a centerback.\nPremises:\n¬∃x (ProfessionalBasketballPlayer(x) ∧ SoccerPlayer(x)) ::: No professional basketball players are soccer players.\n∀x (NBAPlayer(x) → ProfessionalBasketballPlayer(x)) ::: All NBA players are professional basketball players.\n∀x (Defender(x) → SoccerPlayer(x)) ::: All defenders are soccer players.\n∀x (Centerback(x) → Defender(x)) ::: All centerbacks are defenders.\n¬(NBAPlayer(roger) ∨ Defender(roger)) ::: Roger Federer is not an NBA player or a defender.\nConclusion:\n¬Centerback(roger) ::: Roger Federer is not a centerback.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drink"
    ]
  },
  {
    "id": "FOLIO_train_423",
    "context": "No professional basketball players are soccer players. All NBA players are professional basketball players. All defenders are soccer players. All centerbacks are defenders. Roger Federer is not an NBA player or a defender.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Roger Federer is a soccer player.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProfessionalBasketballPlayer(x) ::: x is a professional basketball player.\nNBAPlayer(x) ::: x is an NBA player.\nSoccerPlayer(x) ::: x is a soccer player.\nDefender(x) ::: x is a defender.\nCenterback(x) ::: x is a centerback.\nPremises:\n¬∃x (ProfessionalBasketballPlayer(x) ∧ SoccerPlayer(x)) ::: No professional basketball players are soccer players.\n∀x (NBAPlayer(x) → ProfessionalBasketballPlayer(x)) ::: All NBA players are professional basketball players.\n∀x (Defender(x) → SoccerPlayer(x)) ::: All defenders are soccer players.\n∀x (Centerback(x) → Defender(x)) ::: All centerbacks are defenders.\n¬(NBAPlayer(roger) ∨ Defender(roger)) ::: Roger Federer is not an NBA player or a defender.\nConclusion:\n¬SoccerPlayer(roger) ::: Roger Federer is a soccer player.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly"
    ]
  },
  {
    "id": "FOLIO_train_424",
    "context": "Some teachers working at a pool are not nice. All teachers working at pools are pool managers. All pool managers are lifeguards. If someone is a lifeguard, then they work at a pool. Mary does not work at a pool.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mary is nice.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTeacher(x) ::: x is a teacher.\nNice(x) ::: x is nice.\nPoolManager(x) ::: x is a pool manager.\nLifeguard(x) ::: x is a lifeguard.\nWork(x, y) ::: x works at y.\nPremises:\n∃x (Teacher(x) ∧ ¬Nice(x)) ::: Some teachers working at a pool are not nice.\n∀x (Teacher(x) ∧ Work(x, pool) → PoolManager(x)) ::: All teachers working at pools are pool managers.\n∀x (PoolManager(x) → Lifeguard(x)) ::: All pool managers are lifeguards.\n∀x (Lifeguard(x) → Work(x, pool)) ::: If someone is a lifeguard, then they work at a pool.\n¬Work(mary, pool) ::: Mary does not work at a pool.\nConclusion:\nNice(mary) ::: Mary is nice.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.\n###\nPred"
    ]
  },
  {
    "id": "FOLIO_train_425",
    "context": "Some teachers working at a pool are not nice. All teachers working at pools are pool managers. All pool managers are lifeguards. If someone is a lifeguard, then they work at a pool. Mary does not work at a pool.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mary is not nice and is a teacher working at a pool.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTeacher(x) ::: x is a teacher.\nNice(x) ::: x is nice.\nPoolManager(x) ::: x is a pool manager.\nLifeguard(x) ::: x is a lifeguard.\nWork(x, y) ::: x works at y.\nPremises:\n∃x (Teacher(x) ∧ ¬Nice(x) ∧ Work(x, pool)) ::: Some teachers working at a pool are not nice.\n∀x (Teacher(x) ∧ Work(x, pool) → PoolManager(x)) ::: All teachers working at pools are pool managers.\n∀x (PoolManager(x) → Lifeguard(x)) ::: All pool managers are lifeguards.\n∀x (Lifeguard(x) → Work(x, pool)) ::: If someone is a lifeguard, then they work at a pool.\n¬Work(mary, pool) ::: Mary does not work at a pool.\nConclusion:\n¬(Teacher(mary) ∧ ¬Nice(mary) ∧ Work(mary, pool)) ::: Mary is not nice and is a teacher working at a pool.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who"
    ]
  },
  {
    "id": "FOLIO_train_426",
    "context": "Some teachers working at a pool are not nice. All teachers working at pools are pool managers. All pool managers are lifeguards. If someone is a lifeguard, then they work at a pool. Mary does not work at a pool.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mary is nice and is a teacher working at a pool.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTeacher(x) ::: x is a teacher.\nNice(x) ::: x is nice.\nPoolManager(x) ::: x is a pool manager.\nLifeguard(x) ::: x is a lifeguard.\nWork(x, y) ::: x works at y.\nPremises:\n∃x (Teacher(x) ∧ ¬Nice(x)) ::: Some teachers working at a pool are not nice.\n∀x (Teacher(x) ∧ Work(x, pool) → PoolManager(x)) ::: All teachers working at pools are pool managers.\n∀x (PoolManager(x) → Lifeguard(x)) ::: All pool managers are lifeguards.\n∀x (Lifeguard(x) → Work(x, pool)) ::: If someone is a lifeguard, then they work at a pool.\n¬Work(mary, pool) ::: Mary does not work at a pool.\nConclusion:\n¬(Nice(mary) ∧ Teacher(mary) ∧ Work(mary, pool)) ::: Mary is nice and is a teacher working at a pool.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug,"
    ]
  },
  {
    "id": "FOLIO_train_427",
    "context": "Not all art pieces require talent. Everything that requires talent requires practice.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There exist art pieces that do not require practice.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nArtPiece(x) ::: x is an art piece.\nTalent(x) ::: x requires talent.\nPractice(x) ::: x requires practice.\nPremises:\n¬∀x (ArtPiece(x) → Talent(x)) ::: Not all art pieces require talent.\n∀x (Talent(x) → Practice(x)) ::: Everything that requires talent requires practice.\nConclusion:\n∃x (ArtPiece(x) ∧ ¬Practice(x)) ::: There exist art pieces that do not require practice.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.\n###\nPredicates:\nDependent(x) ::: x is a person dependent on caffeine.\nDrinks(x) ::: x regularly drinks coffee.\nJokes(x) ::: x jokes about being addicted to caffeine.\nUnaware(x) ::: x is unaware that caffeine is a drug.\nStudent(x) ::: x is a student.\nPremises:\n∀x (Drinks(x)"
    ]
  },
  {
    "id": "FOLIO_train_428",
    "context": "Bernarda Bryson Shahn was a painter and lithographer. Bernarda Bryson Shahn was born in Athens, Ohio. Bernarda Bryson Shahn was married to Ben Shahn. People born in Athens, Ohio are Americans.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Bernarda Bryson Shahn was born in Greece.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAmerican(x) ::: x is an American.\nBorn(x, y) ::: x was born in y.\nMarried(x, y) ::: x is married to y.\nPainter(x) ::: x is a painter.\nLithographer(x) ::: x is a lithographer.\nPremises:\nBorn(bernardaBrysonShahn, athens) ∧ Married(bernardaBrysonShahn, benShahn) ∧ Painter(bernardaBrysonShahn) ∧ Lithographer(bernardaBrysonShahn) ::: Bernarda Bryson Shahn was a painter and lithographer. Bernarda Bryson Shahn was born in Athens, Ohio. Bernarda Bryson Shahn was married to Ben Shahn.\nBorn(bernardaBrysonShahn, athens) ∧ Born(bernardaBrysonShahn, ohio) ::: Bernarda Bryson Shahn was born in Athens, Ohio.\n∀x (Born(x, athens) → American(x)) ::: People born in Athens, Ohio are Americans.\nConclusion:\nBorn(bernardaBrysonShahn, greece) ::: Bernarda Bryson Shahn was born in Greece.\n------\nProblem:\nThe first person to be called a \"computer\" was a person who performed calculations. The first person to be called a \"computer\" was a woman. The first person to be called a \"computer\" was a programmer.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The first person to be called a \"computer\" was a man.\nBased on the above information, is the following statement true, false, or uncertain? The first person to be called a \"computer\" was a woman.\nBased on the above information, is the following statement true, false, or uncertain? The first person to be called a \"computer\" was a programmer.\n###\nPredicates:\nComputer(x) ::: x is a computer.\nCalculation(x) ::: x performed calculations.\nWoman(x) ::: x is a woman.\nProgrammer(x"
    ]
  },
  {
    "id": "FOLIO_train_429",
    "context": "Bernarda Bryson Shahn was a painter and lithographer. Bernarda Bryson Shahn was born in Athens, Ohio. Bernarda Bryson Shahn was married to Ben Shahn. People born in Athens, Ohio are Americans.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Bernarda Bryson Shahn was American.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAmerican(x) ::: x is an American.\nBorn(x, y) ::: x was born in y.\nMarried(x, y) ::: x is married to y.\nPainter(x) ::: x is a painter.\nLithographer(x) ::: x is a lithographer.\nPremises:\nBorn(bernardaBrysonShahn, athens) ∧ Married(bernardaBrysonShahn, benShahn) ∧ Painter(bernardaBrysonShahn) ∧ Lithographer(bernardaBrysonShahn) ::: Bernarda Bryson Shahn was a painter and lithographer. Bernarda Bryson Shahn was born in Athens, Ohio. Bernarda Bryson Shahn was married to Ben Shahn.\n∀x (Born(x, athens) → American(x)) ::: People born in Athens, Ohio are Americans.\nConclusion:\nAmerican(bernardaBrysonShahn) ::: Bernarda Bryson Shahn was American.\n------\nProblem:\nThe first person to be called a \"computer\" was a person who performed calculations. The first person to be called a \"computer\" was a woman. The first person to be called a \"computer\" was a programmer.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The first person to be called a \"computer\" was a woman who performed calculations.\nBased on the above information, is the following statement true, false, or uncertain? The first person to be called a \"computer\" was a woman who performed calculations and was a programmer.\n###\nPredicates:\nComputer(x) ::: x is a computer.\nWoman(x) ::: x is a woman.\nPerform(x, y) ::: x performed y.\nCalculation(x) ::: x is a calculation.\nProgrammer(x) ::: x is a programmer.\nPremises:\nComputer(firstPerson) ∧ Woman(firstPerson) ∧ Programmer(firstPerson) ::: The first person to be called a \"computer\" was a person who performed calculations. The first person to be called a"
    ]
  },
  {
    "id": "FOLIO_train_430",
    "context": "Bernarda Bryson Shahn was a painter and lithographer. Bernarda Bryson Shahn was born in Athens, Ohio. Bernarda Bryson Shahn was married to Ben Shahn. People born in Athens, Ohio are Americans.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Bernarda Bryson Shahn had been divorced once.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAmerican(x) ::: x is an American.\nBorn(x, y) ::: x was born in y.\nMarried(x, y) ::: x is married to y.\nDivorced(x) ::: x had been divorced once.\nPremises:\nBorn(bernardaBrysonShahn, athens) ∧ Married(bernardaBrysonShahn, benShahn) ::: Bernarda Bryson Shahn was a painter and lithographer. Bernarda Bryson Shahn was born in Athens, Ohio. Bernarda Bryson Shahn was married to Ben Shahn.\n∀x (Born(x, athens) → American(x)) ::: People born in Athens, Ohio are Americans.\nConclusion:\nDivorced(bernardaBrysonShahn) ::: Bernarda Bryson Shahn had been divorced once.\n------"
    ]
  },
  {
    "id": "FOLIO_train_431",
    "context": "If people upgrade to the newest iPhone model every year, then they are not saving money for a down payment on a new house. If people enjoy reading about tech specs and keeping up to date on the latest technology, then they upgrade to the newest iPhone model every year. People either are saving money for a down payment on a new house or they live in apartments in big metropolitan cities. If people live with at least one roommate then they do not own at least one pet. All people who own at least one pet live with at least one roommate. If Emma does not both own at least one pet and live in apartments in big metropolitan cities, then Emma either owns at least one pet and lives in an apartment in big metropolitan cities, or she neither owns a pet nor lives in an apartment in big metropolitan cities.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Emma lives with at least one roommate.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nUpgrade(x) ::: x upgrades to the newest iPhone model every year.\nSave(x) ::: x is saving money for a down payment on a new house.\nEnjoy(x) ::: x enjoys reading about tech specs and keeping up to date on the latest technology.\nLive(x) ::: x lives in apartments in big metropolitan cities.\nRoommate(x) ::: x lives with at least one roommate.\nPet(x) ::: x owns at least one pet.\nPremises:\n¬(Upgrade(x) ∧ Save(x)) ::: If people upgrade to the newest iPhone model every year, then they are not saving money for a down payment on a new house.\nEnjoy(x) → Upgrade(x) ::: If people enjoy reading about tech specs and keeping up to date on the latest technology"
    ]
  },
  {
    "id": "FOLIO_train_432",
    "context": "If people upgrade to the newest iPhone model every year, then they are not saving money for a down payment on a new house. If people enjoy reading about tech specs and keeping up to date on the latest technology, then they upgrade to the newest iPhone model every year. People either are saving money for a down payment on a new house or they live in apartments in big metropolitan cities. If people live with at least one roommate then they do not own at least one pet. All people who own at least one pet live with at least one roommate. If Emma does not both own at least one pet and live in apartments in big metropolitan cities, then Emma either owns at least one pet and lives in an apartment in big metropolitan cities, or she neither owns a pet nor lives in an apartment in big metropolitan cities.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Emma enjoys reading about tech specs and keeping up to date on the latest technology.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nUpgrade(x) ::: x upgrades to the newest iPhone model every year.\nSave(x) ::: x is saving money for a down payment on a new house.\nEnjoy(x) ::: x enjoys reading about tech specs and keeping up to date on the latest technology.\nLive(x) ::: x lives in apartments in big metropolitan cities.\nRoommate(x) ::: x lives with at least one roommate.\nPet(x) ::: x owns at least one pet.\nPremises:\n¬(Upgrade(x) ∧ Save(x)) ::: If people upgrade to the newest iPhone model every year, then they are not saving money for a down payment on a new house.\nEnjoy(x) → Upgrade(x) ::: If people enjoy reading about tech specs and keeping up to date on the latest technology"
    ]
  },
  {
    "id": "FOLIO_train_433",
    "context": "If you are on the payroll, then you are being paid by the school. If someone has a job at a school, then they are on the payroll. All faculty members have a job at a school. One can either be a faculty member or a teacher. Every teacher has students. If Nancy is a teacher, then they are on the payroll. If Nancy is not a teacher, then they are not paid by the school.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Nancy is a faculty member.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nOnPayroll(x) ::: x is on the payroll.\nPaidBy(x, y) ::: x is paid by y.\nJob(x, y) ::: x has a job at y.\nFacultyMember(x) ::: x is a faculty member.\nTeacher(x) ::: x is a teacher.\nStudent(x) ::: x is a student.\nPremises:\nOnPayroll(x) → PaidBy(x, school) ::: If you are on the payroll, then you are being paid by the school.\nJob(x, school) → OnPayroll(x) ::: If someone has a job at a school, then they are on the payroll.\n∀x (FacultyMember(x) → Job(x, school)) ::: All faculty members have a job at a school.\n∃x (Teacher"
    ]
  },
  {
    "id": "FOLIO_train_434",
    "context": "If you are on the payroll, then you are being paid by the school. If someone has a job at a school, then they are on the payroll. All faculty members have a job at a school. One can either be a faculty member or a teacher. Every teacher has students. If Nancy is a teacher, then they are on the payroll. If Nancy is not a teacher, then they are not paid by the school.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Nancy is paid by the school and has students.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nOnPayroll(x) ::: x is on the payroll.\nPaidBy(x, y) ::: x is paid by y.\nJob(x, y) ::: x has a job at y.\nFacultyMember(x) ::: x is a faculty member.\nTeacher(x) ::: x is a teacher.\nStudent(x) ::: x is a student.\nPremises:\nOnPayroll(x) → PaidBy(x, school) ::: If you are on the payroll, then you are being paid by the school.\nJob(x, school) → OnPayroll(x) ::: If someone has a job at a school, then they are on the payroll.\n∀x (FacultyMember(x) → Job(x, school)) ::: All faculty members have a job at a school.\n∃x (Teacher"
    ]
  },
  {
    "id": "FOLIO_train_435",
    "context": "If you are on the payroll, then you are being paid by the school. If someone has a job at a school, then they are on the payroll. All faculty members have a job at a school. One can either be a faculty member or a teacher. Every teacher has students. If Nancy is a teacher, then they are on the payroll. If Nancy is not a teacher, then they are not paid by the school.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Nancy is not paid by the school and has students.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nOnPayroll(x) ::: x is on the payroll.\nPaidBy(x, y) ::: x is paid by y.\nJob(x, y) ::: x has a job at y.\nFacultyMember(x) ::: x is a faculty member.\nTeacher(x) ::: x is a teacher.\nStudent(x) ::: x is a student.\nPremises:\nOnPayroll(x) → PaidBy(x, school) ::: If you are on the payroll, then you are being paid by the school.\nJob(x, school) → OnPayroll(x) ::: If someone has a job at a school, then they are on the payroll.\n∀x (FacultyMember(x) → Job(x, school)) ::: All faculty members have a job at a school.\n∃x (Teacher"
    ]
  },
  {
    "id": "FOLIO_train_436",
    "context": "Kangaroo is an animal. No Kangaroos live in Germany. If Jane saves enough money for the summer, she will fly to Germany. If Jane flies to Germany, she will go to the Berlin Zoo. If someone goes to the Berlin Zoo, they will see some of the animals that live in Germany.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Jane saves enough money for the summer, she will see a kangaroo.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nKangaroo(x) ::: x is a kangaroo.\nAnimal(x) ::: x is an animal.\nLive(x, y) ::: x lives in y.\nSave(x, y) ::: x saves enough money for y.\nFly(x, y) ::: x flies to y.\nGo(x, y) ::: x goes to y.\nSee(x, y) ::: x sees y.\nPremises:\nKangaroo(kangaroo) ∧ Animal(kangaroo) ::: Kangaroo is an animal.\n¬∃x (Kangaroo(x) ∧ Live(x, germany)) ::: No Kangaroos live in Germany.\nSave(jane, summer) → Fly(jane, germany) ::: If Jane saves enough money for the summer, she will fly to"
    ]
  },
  {
    "id": "FOLIO_train_437",
    "context": "If a class has prerequisites the student must take the prerequisites to take the class. If a class has no prerequisites, then the student can take the class CPSC 201 and CPSC 223 are prerequisites for CPSC 323. Intro Microeconomics is the only prerequisite for Intermediate Microeconomics. Intro Geology has no prerequisites.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? CPSC 201 has no prerequisites.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPrerequisite(x, y) ::: x is a prerequisite for y.\nPrerq(x) ::: x has prerequisites.\nCanTake(x, y) ::: x can take y.\nClass(x) ::: x is a class.\nPremises:\n∀x ∀y (Prerq(x) → ∀z (Class(z) → (CanTake(z, x) → Prerequisite(z, y)))) ::: If a class has prerequisites the student must take the prerequisites to take the class.\n∀x ∀y (¬Prerq(x) → ∀z (Class(z) → CanTake(z, x))) ::: If a class has no prerequisites, then the student can take the class.\nPrerequisite(cpsc201, cpsc3"
    ]
  },
  {
    "id": "FOLIO_train_438",
    "context": "If a class has prerequisites the student must take the prerequisites to take the class. If a class has no prerequisites, then the student can take the class CPSC 201 and CPSC 223 are prerequisites for CPSC 323. Intro Microeconomics is the only prerequisite for Intermediate Microeconomics. Intro Geology has no prerequisites.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If a student took CPSC 201 but did not take CPSC 223, they can take CPSC 323.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPrerequisite(x, y) ::: x is a prerequisite for y.\nTake(x, y) ::: x takes y.\nPremises:\n∀x ∀y (Prerequisite(x, y) → Take(x, y) → Take(y, x)) ::: If a class has prerequisites the student must take the prerequisites to take the class.\n¬Prerequisite(x, y) → Take(x, y) ::: If a class has no prerequisites, then the student can take the class.\nPrerequisite(cpsc201, cpsc323) ∧ Prerequisite(cpsc223, cpsc323) ::: CPSC 201 and CPSC 223 are prerequisites for CPSC 323"
    ]
  },
  {
    "id": "FOLIO_train_439",
    "context": "If a class has prerequisites the student must take the prerequisites to take the class. If a class has no prerequisites, then the student can take the class CPSC 201 and CPSC 223 are prerequisites for CPSC 323. Intro Microeconomics is the only prerequisite for Intermediate Microeconomics. Intro Geology has no prerequisites.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A student cannot take Intro Geology.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPrerequisite(x, y) ::: x is a prerequisite for y.\nTake(x, y) ::: x takes y.\nPremises:\n∀x ∀y (Prerequisite(x, y) → Take(x, y) → Take(y, x)) ::: If a class has prerequisites the student must take the prerequisites to take the class.\n∀x (¬Prerequisite(x, x)) ::: If a class has no prerequisites, then the student can take the class.\nPrerequisite(cpsc201, cpsc323) ∧ Prerequisite(cpsc223, cpsc323) ::: CPSC 201 and CPSC 223 are prerequisites for CPSC 323.\nPrere"
    ]
  },
  {
    "id": "FOLIO_train_440",
    "context": "If a class has prerequisites the student must take the prerequisites to take the class. If a class has no prerequisites, then the student can take the class CPSC 201 and CPSC 223 are prerequisites for CPSC 323. Intro Microeconomics is the only prerequisite for Intermediate Microeconomics. Intro Geology has no prerequisites.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Intermediate Microeconomics has one prerequisite.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPrerequisite(x, y) ::: x is a prerequisite for y.\nPrerq(x) ::: x has prerequisites.\nNoPrerq(x) ::: x has no prerequisites.\nPremises:\n∀x ∀y (Prerq(x) → Prerequisite(x, y)) ::: If a class has prerequisites the student must take the prerequisites to take the class.\n∀x (NoPrerq(x) → ¬Prerq(x)) ::: If a class has no prerequisites, then the student can take the class.\nPrerequisite(cpsc201, cpsc323) ∧ Prerequisite(cpsc223, cpsc323) ::: CPSC 201 and CPSC 223 are prerequisites for CPSC 323.\nPrerequisite(introMicroeconomics, intermediateMicroeconomics) ::: Intro Microeconomics is the only prerequisite for Intermediate Microeconomics.\nNoPrerq(introGeology) ::: Intro Geology has no prerequisites.\nConclusion:\nPrerq(intermediateMicroeconomics) ::: Intermediate Microeconomics has one prerequisite.\n------"
    ]
  },
  {
    "id": "FOLIO_train_441",
    "context": "A heptalogy, is a compound literary or narrative work that is made up of seven distinct works. The Harry Potter series consists of 7 distinct works. The Chronicles of Narnia consists of 7 distinct works.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Harry Potter series of books is a heptalogy.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nHeptalogy(x) ::: x is a heptalogy.\nConsistOf(x, y) ::: x consists of y.\nDistinct(x, y) ::: x is distinct from y.\nPremises:\n∀x (Heptalogy(x) → ∃y (ConsistOf(x, y) ∧ ∀z (Distinct(z, y) → z ≠ y))) ::: A heptalogy, is a compound literary or narrative work that is made up of seven distinct works.\nConsistOf(harryPotterSeries, harryPotterAndThePhilosopherStone) ∧ ConsistOf(harryPotterSeries, harryPotterAndTheChamberOfSecrets) ∧ ConsistOf(harryPotterSeries, harryPotterAndThePrisonerOfAzkaban) ∧ ConsistOf(harryPotterSeries, harryPotterAndTheGobletOfFire) ∧ ConsistOf(harryPotterSeries, harryPotterAndTheOrderOfThePhoenix) ∧ ConsistOf(harryPotterSeries, harryPotterAndTheHalfBloodPrince) ∧ ConsistOf(harryPotterSeries, harryPotterAndTheDeathlyHallows) ::: The Harry Potter series"
    ]
  },
  {
    "id": "FOLIO_train_442",
    "context": "A heptalogy, is a compound literary or narrative work that is made up of seven distinct works. The Harry Potter series consists of 7 distinct works. The Chronicles of Narnia consists of 7 distinct works.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Chronicles of Narnia series of books is not a heptalogy.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nHeptalogy(x) ::: x is a heptalogy.\nSeries(x) ::: x is a series.\nBook(x) ::: x is a book.\nDistinct(x, y) ::: x and y are distinct.\nPremises:\n∀x (Heptalogy(x) → ∃y (Series(y) ∧ ∃z (Book(z) ∧ ∀w (Book(w) → Distinct(z, w)) ∧ 7 = ∀w (Book(w) → ¬Distinct(z, w))))) ::: A heptalogy, is a compound literary or narrative work that is made up of seven distinct works.\nSeries(harryPotter) ∧ ∃y (Book(y) ∧ ∀w (Book(w) → Distinct(y, w)) ∧ 7 = ∀w (Book(w) → ¬Distinct(y, w))) ::: The Harry Potter series consists of 7 distinct works.\nSeries(chroniclesOfNarnia) ∧ ∃y (Book(y) ∧ ∀w (Book(w) → Distinct(y, w)) ∧ 7 = ∀w (Book(w) → ¬Distinct(y, w))) ::: The Chronicles of Narnia consists of 7 distinct works.\nConclusion:\n¬Hept"
    ]
  },
  {
    "id": "FOLIO_train_443",
    "context": "A heptalogy, is a compound literary or narrative work that is made up of seven distinct works. The Harry Potter series consists of 7 distinct works. The Chronicles of Narnia consists of 7 distinct works.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Lord of Rings is a heptalogy.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nHeptalogy(x) ::: x is a heptalogy.\nConsistOf(x, y) ::: x consists of y.\nDistinct(x, y) ::: x is distinct from y.\nPremises:\nHeptalogy(harryPotter) ∧ Heptalogy(chroniclesOfNarnia) ::: A heptalogy, is a compound literary or narrative work that is made up of seven distinct works. The Harry Potter series consists of 7 distinct works. The Chronicles of Narnia consists of 7 distinct works.\nConclusion:\nHeptalogy(lordOfRings) ::: The Lord of Rings is a heptalogy.\n------\nProblem:\nA person is a human being regarded as an individual. A person is a human being regarded as an individual. A person is a human being regarded as an individual. A person is a human being regarded as an individual. A person is a human being regarded as an individual. A person is a human being regarded as an individual. A person is a human being regarded as an individual. A person is a human being regarded as an individual. A person is a human being regarded as an individual. A person is a human being regarded as an individual. A person is a human being regarded as an individual. A person is a human being regarded as an individual. A person is a human being regarded as an individual. A person is a human being regarded as"
    ]
  },
  {
    "id": "FOLIO_train_444",
    "context": "All people who attend Renaissance fairs regularly enjoy dressing up in old-fashioned and historical period clothing. If people are fascinated by the history of the Renaissance and other past eras, then they attend Renaissance fairs regularly. People are either fascinated by the history of the Renaissance and other past eras, or are not nostalgic academics who enjoy learning. If people are focused on the future and industry professions, then they are not nostalgic academics who enjoy learning. If people are historical professors who are passionate about their job and subject, then they are nostalgic academics who enjoy learning. If Clyde is not focused on the future and industry professions, then he is neither focused on the future and industry professions nor enjoys dressing up in old-fashioned and historical period clothing.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Clyde attends Renaissance fairs regularly.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAttend(x) ::: x attends Renaissance fairs regularly.\nEnjoy(x, y) ::: x enjoys y.\nFascinate(x, y) ::: x is fascinated by y.\nNostalgic(x) ::: x is nostalgic.\nAcademic(x) ::: x is an academic.\nLearn(x) ::: x enjoys learning.\nProfessor(x) ::: x is a professor.\nHistorical(x) ::: x is a historical professor.\nPassionate(x) ::: x is passionate about his job and subject.\nFuture(x) ::: x is focused on the future.\nIndustry(x) ::: x is focused on the industry.\nClyde(x) ::: x is Clyde.\nPremises:\n∀x (Attend(x) → Enjoy(x, dressingUpInOldFashionedAndHistoricalPeriodClothing)) ::: All people who attend Renaissance fairs regularly enjoy dressing up in old-fashioned and historical period clothing.\nFascinate(x, historyOfTheRenaissanceAndOtherPastEras) → Attend(x) ::: If people are fascinated by the history of the Renaissance and other past eras, then they attend Renaissance fairs regularly.\n¬Fascinate(x, historyOfTheRenaissanceAnd"
    ]
  },
  {
    "id": "FOLIO_train_445",
    "context": "All people who attend Renaissance fairs regularly enjoy dressing up in old-fashioned and historical period clothing. If people are fascinated by the history of the Renaissance and other past eras, then they attend Renaissance fairs regularly. People are either fascinated by the history of the Renaissance and other past eras, or are not nostalgic academics who enjoy learning. If people are focused on the future and industry professions, then they are not nostalgic academics who enjoy learning. If people are historical professors who are passionate about their job and subject, then they are nostalgic academics who enjoy learning. If Clyde is not focused on the future and industry professions, then he is neither focused on the future and industry professions nor enjoys dressing up in old-fashioned and historical period clothing.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Clyde is a history professor who is passionate about his job and subject.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAttend(x) ::: x attends Renaissance fairs regularly.\nEnjoy(x, y) ::: x enjoys y.\nFascinate(x, y) ::: x is fascinated by y.\nNostalgic(x) ::: x is nostalgic.\nAcademic(x) ::: x is an academic.\nLearn(x) ::: x enjoys learning.\nProfessor(x) ::: x is a professor.\nHistorical(x) ::: x is a historical professor.\nPassionate(x, y) ::: x is passionate about y.\nJob(x) ::: x is a job.\nSubject(x) ::: x is a subject.\nPremises:\n∀x (Attend(x) → Enjoy(x, dressingUpInOldFashionedAndHistoricalPeriodClothing)) ::: All people who attend Renaissance fairs regularly enjoy dressing up in old-fashioned and historical period clothing.\nFascinate(x, historyOfTheRenaissanceAndOtherPastEras) → Attend(x) ::: If people are fascinated by the history of the Renaissance and other past eras, then they attend Renaissance fairs regularly.\n∀x (Fascinate(x, historyOfTheRenaissanceAndOtherPastEras) ⊕ ¬Nostalgic(x) ∧"
    ]
  },
  {
    "id": "FOLIO_train_446",
    "context": "All people who attend Renaissance fairs regularly enjoy dressing up in old-fashioned and historical period clothing. If people are fascinated by the history of the Renaissance and other past eras, then they attend Renaissance fairs regularly. People are either fascinated by the history of the Renaissance and other past eras, or are not nostalgic academics who enjoy learning. If people are focused on the future and industry professions, then they are not nostalgic academics who enjoy learning. If people are historical professors who are passionate about their job and subject, then they are nostalgic academics who enjoy learning. If Clyde is not focused on the future and industry professions, then he is neither focused on the future and industry professions nor enjoys dressing up in old-fashioned and historical period clothing.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Clyde is a history professor who is passionate about his job and subject, or is not a nostalgic academic who enjoys learning.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAttend(x) ::: x attends Renaissance fairs regularly.\nEnjoy(x, y) ::: x enjoys y.\nFascinate(x, y) ::: x is fascinated by y.\nFocus(x, y) ::: x is focused on y.\nHistoricalProfessor(x) ::: x is a historical professor.\nNostalgicAcademic(x) ::: x is a nostalgic academic.\nPassionate(x, y) ::: x is passionate about y.\nPremises:\n∀x (Attend(x) → Enjoy(x, dressingUpInOldFashionedAndHistoricalPeriodClothing)) ::: All people who attend Renaissance fairs regularly enjoy dressing up in old-fashioned and historical period clothing.\nFascinate(x, historyOfRenaissanceAndOtherPastEras) → Attend(x) ::: If people are fascinated by the history of the Renaissance and other past eras, then they attend Renaissance fairs regularly.\n∀x (Fascinate(x, historyOfRenaissanceAndOtherPastEras) ⊕ ¬NostalgicAcademic(x)) ::: People are either fascinated by the history of the Renaissance and other past eras, or are not nostalgic academics who enjoy learning.\nFocus(x, futureAndIndustryProfessions"
    ]
  },
  {
    "id": "FOLIO_train_447",
    "context": "No sports cars are vehicles intended to be driven at moderate speeds. All automobiles designed for family use are vehicles intended to be driven at moderate speeds.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? No sports cars are automobiles designed for family use.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSportsCar(x) ::: x is a sports car.\nVehicle(x) ::: x is a vehicle.\nModerateSpeed(x) ::: x is intended to be driven at moderate speeds.\nAutomobile(x) ::: x is an automobile.\nFamilyUse(x) ::: x is designed for family use.\nPremises:\n¬∃x (SportsCar(x) ∧ ModerateSpeed(x)) ::: No sports cars are vehicles intended to be driven at moderate speeds.\n∀x (FamilyUse(x) → ModerateSpeed(x)) ::: All automobiles designed for family use are vehicles intended to be driven at moderate speeds.\nConclusion:\n¬∃x (SportsCar(x) ∧ Automobile(x) ∧ FamilyUse(x)) ::: No sports cars are automobiles designed for family use.\n------\nProblem:\nNo one who is a person who is not a person who is not a person who is not a person who is not a person who is not a person who is not a person who is not a person who is not a person who is not a person who is not a person who is not a person who is not a person who is not a person who is not a person who is not a person who is not a person who is not a person who is not a person who is not a person who is not a person who is not a"
    ]
  },
  {
    "id": "FOLIO_train_448",
    "context": "If people work well in teams in their workplace, then they get along with all their colleagues at their work. If people come to work every day with a positive attitude, then they work well in teams in their workplace. People either come into work every day with a positive attitude or are always tired every morning. If people get many promotions from their boss at work, then they receive negative feedback from teams at work. Kat is either both a person who works well in teams in their workplace and is always tired every morning, or she neither works well in teams in their workplace nor is always tired every morning.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Kat is a person who comes to work every day with a positive attitude.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nWorkWell(x) ::: x works well in teams in their workplace.\nGetAlong(x) ::: x gets along with all their colleagues at their work.\nPositive(x) ::: x comes to work every day with a positive attitude.\nTired(x) ::: x is always tired every morning.\nPromotion(x) ::: x gets many promotions from their boss at work.\nFeedback(x) ::: x receives negative feedback from teams at work.\nPremises:\nWorkWell(x) → GetAlong(x) ::: If people work well in teams in their workplace, then they get along with all their colleagues at their work.\nPositive(x) → WorkWell(x) ::: If people come to work every day with a positive attitude, then they work well in teams in their workplace.\nPositive(x) ⊕ Tired(x) ::: People either come into work every day with a positive attitude or are always tired every morning.\nPromotion(x) → Feedback(x) ::: If people get many promotions from their boss at work, then they receive negative feedback from teams at work.\n(WorkWell(kat) ∧ Tired(kat)) ⊕ ¬(WorkWell(kat) ∨ Tired(kat)) ::: Kat is either both a person who works well in teams in their workplace and is always tired"
    ]
  },
  {
    "id": "FOLIO_train_449",
    "context": "If people work well in teams in their workplace, then they get along with all their colleagues at their work. If people come to work every day with a positive attitude, then they work well in teams in their workplace. People either come into work every day with a positive attitude or are always tired every morning. If people get many promotions from their boss at work, then they receive negative feedback from teams at work. Kat is either both a person who works well in teams in their workplace and is always tired every morning, or she neither works well in teams in their workplace nor is always tired every morning.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Kat gets along with her colleagues at her work and receives negative feedback from teams at her work.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nWorkWell(x) ::: x works well in teams in their workplace.\nGetAlong(x, y) ::: x gets along with y.\nColleague(x, y) ::: x is a colleague of y.\nPositive(x) ::: x comes to work every day with a positive attitude.\nTired(x) ::: x is always tired every morning.\nPromotion(x) ::: x gets many promotions from their boss at work.\nFeedback(x) ::: x receives negative feedback from teams at work.\nPremises:\n(WorkWell(x) → GetAlong(x, y)) ::: If people work well in teams in their workplace, then they get along with all their colleagues at their work.\n(Positive(x) → WorkWell(x)) ::: If people come to work every day with a positive attitude, then they work well in teams in their workplace.\n(Positive(x) ⊕ Tired(x)) ::: People either come into work every day with a positive attitude or are always tired every morning.\n(Promotion(x) → Feedback(x)) ::: If people get many promotions from their boss at work, then they receive negative feedback from teams at work.\n(WorkWell(kat) ∧ Tired(kat)) ⊕ ¬(WorkWell(kat) ∨ Tired(kat))"
    ]
  },
  {
    "id": "FOLIO_train_450",
    "context": "If people work well in teams in their workplace, then they get along with all their colleagues at their work. If people come to work every day with a positive attitude, then they work well in teams in their workplace. People either come into work every day with a positive attitude or are always tired every morning. If people get many promotions from their boss at work, then they receive negative feedback from teams at work. Kat is either both a person who works well in teams in their workplace and is always tired every morning, or she neither works well in teams in their workplace nor is always tired every morning.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Kat either gets along with her colleagues at her work or receives negative feedback from teams at her work.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nWorkWell(x) ::: x works well in teams in their workplace.\nGetAlong(x, y) ::: x gets along with y.\nColleague(x, y) ::: x is a colleague of y.\nPositive(x) ::: x comes to work every day with a positive attitude.\nTired(x) ::: x is always tired every morning.\nPromotion(x) ::: x gets many promotions from their boss at work.\nFeedback(x) ::: x receives negative feedback from teams at work.\nPremises:\n(WorkWell(x) → GetAlong(x, y)) ::: If people work well in teams in their workplace, then they get along with all their colleagues at their work.\n(Positive(x) → WorkWell(x)) ::: If people come to work every day with a positive attitude, then they work well in teams in their workplace.\n(Positive(x) ⊕ Tired(x)) ::: People either come into work every day with a positive attitude or are always tired every morning.\n(Promotion(x) → Feedback(x)) ::: If people get many promotions from their boss at work, then they receive negative feedback from teams at work.\n(WorkWell(kat) ∧ Tired(kat)) ⊕ ¬(WorkWell(kat) ∨ Tired(kat)) ::: Kat is either both a person who works well in teams in their workplace and is always tired every morning, or she neither works well in teams in their workplace nor is always tired every morning.\nConclusion:\n(WorkWell(kat) ∨ GetAlong(kat, y)) ⊕ Feedback(kat) ::: Kat either gets along with her colleagues at her work or receives negative feedback from teams at her work.\n------"
    ]
  },
  {
    "id": "FOLIO_train_451",
    "context": "Drishti is open-source. Open-source software is free to modify.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Drishti is free to modify.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nOpenSource(x) ::: x is open-source.\nFreeToModify(x) ::: x is free to modify.\nPremises:\nOpenSource(drishti) ::: Drishti is open-source.\n∀x (OpenSource(x) → FreeToModify(x)) ::: Open-source software is free to modify.\nConclusion:\nFreeToModify(drishti) ::: Drishti is free to modify.\n------\nProblem:\nThe first person to reach the summit of Mount Everest was Edmund Hillary. Edmund Hillary was a New Zealander.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The first person to reach the summit of Mount Everest was a New Zealander.\nBased on the above information, is the following statement true, false, or uncertain? The first person to reach the summit of Mount Everest was Edmund Hillary.\nBased on the above information, is the following statement true, false, or uncertain? Edmund Hillary was the first person to reach the summit of Mount Everest.\n###\nPredicates:\nNewZealander(x) ::: x is a New Zealander.\nFirst(x, y) ::: x is the first person to reach the summit of y.\nPremises:\nFirst(edmund, everest) ::: The first person to reach the summit of Mount Everest was Edmund Hillary.\nNewZealander(edmund) ::: Edmund Hillary was a New Zealander.\nConclusion:\nFirst(edmund, everest) ::: The first person to reach the summit of Mount Everest was Edmund Hillary.\nFirst(edmund, everest) ::: The first person to reach the summit of Mount Everest was Edmund Hillary.\nFirst"
    ]
  },
  {
    "id": "FOLIO_train_452",
    "context": "There are five grades including A+, A, B+, B, and C in English. If a student gets A+ in English, then his score is greater than 95. If a student gets A in English, then his score is in the range of 90-95. Zhang got an A in English. Wang's English score is better than Zhang's. Wu's English score is lower than 90.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Zhang's English score is lower than 95.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nScore(x, y) ::: x's score in English is y.\nAPlus(x) ::: x gets A+ in English.\nA(x) ::: x gets A in English.\nBPlus(x) ::: x gets B+ in English.\nB(x) ::: x gets B in English.\nC(x) ::: x gets C in English.\nPremises:\n∀x (APlus(x) → Score(x, 95)) ::: If a student gets A+ in English, then his score is greater than 95.\n∀x (A(x) → (Score(x, 90) ∧ Score(x, 95))) ::: If a student gets A in English, then his score is in the range of 90-95.\nScore(zhang, 90) ::: Zhang got an A in English.\nScore(wang, 95) ::: Wang's English score is better than Zhang's.\nScore(wu, 80) ::: Wu's English score is lower than 90.\nConclusion:\nScore(zhang, 95) ::: Zhang's English score is lower than 95.\n------\nProblem:\nA person is a citizen of the United States if and only if the person was born in the United States or the person was naturalized in the United States. A person is a citizen of the United States if and only if the person was born in the United States or the person was naturalized in the United States. A person is a citizen of the United States if and only if the person was born in the United States or the person was naturalized in the United States. A person is a citizen of the United States if and only if the person was born in the United States or the person was naturalized in the"
    ]
  },
  {
    "id": "FOLIO_train_453",
    "context": "There are five grades including A+, A, B+, B, and C in English. If a student gets A+ in English, then his score is greater than 95. If a student gets A in English, then his score is in the range of 90-95. Zhang got an A in English. Wang's English score is better than Zhang's. Wu's English score is lower than 90.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Wang got an A+ in English.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nScore(x, y) ::: x's score in English is y.\nAPlus(x) ::: x gets A+ in English.\nA(x) ::: x gets A in English.\nBPlus(x) ::: x gets B+ in English.\nB(x) ::: x gets B in English.\nC(x) ::: x gets C in English.\nPremises:\n∀x (APlus(x) → Score(x, 95)) ::: If a student gets A+ in English, then his score is greater than 95.\n∀x (A(x) → (Score(x, 90) ∧ Score(x, 95))) ::: If a student gets A in English, then his score is in the range of 90-95.\nScore(zhang, 90) ::: Zhang got an A in English.\nScore(wang, 95) ::: Wang's English score is better than Zhang's.\nScore(wu, 80) ::: Wu's English score is lower than 90.\nConclusion:\nAPlus(wang) ::: Wang got an A+ in English.\n------\nProblem:\nA person is a citizen of the United States if and only if the person was born in the United States or the person was naturalized in the United States. A person is a citizen of the United States if and only if the person was born in the United States or the person was naturalized in the United States. A person is a citizen of the United States if and only if the person was born in the United States or the person was naturalized in the United States. A person is a citizen of the United States if and only if the person was born in the United States or the person was naturalized in the United States. A person is a citiz"
    ]
  },
  {
    "id": "FOLIO_train_454",
    "context": "There are five grades including A+, A, B+, B, and C in English. If a student gets A+ in English, then his score is greater than 95. If a student gets A in English, then his score is in the range of 90-95. Zhang got an A in English. Wang's English score is better than Zhang's. Wu's English score is lower than 90.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Wu does not get an A or A+ in English.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nScore(x, y) ::: x's score in English is y.\nAPlus(x) ::: x gets A+ in English.\nA(x) ::: x gets A in English.\nBPlus(x) ::: x gets B+ in English.\nB(x) ::: x gets B in English.\nC(x) ::: x gets C in English.\nPremises:\n∀x (APlus(x) → Score(x, 95)) ::: If a student gets A+ in English, then his score is greater than 95.\n∀x (A(x) → (Score(x, 90) ∧ Score(x, 95))) ::: If a student gets A in English, then his score is in the range of 90-95.\nScore(zhang, 90) ∧ Score(zhang, 95) ::: Zhang got an A in English.\nScore(wang, 90) ∧ Score(wang, 95) ::: Wang's English score is better than Zhang's.\nScore(wu, 90) ∧ Score(wu, 95) ::: Wu's English score is lower than 90.\nConclusion:\n¬(APlus(wu) ∨ A(wu)) ::: Wu does not get an A or A+ in English.\n------\nProblem:\nA person is a citizen of the United States if and only if the person was born in the United States or the person was naturalized in the United States. A person is a citizen of the United States if and only if the person was born in the United States or the person was naturalized in the United States. A person is a citizen of the United States if and only if the person was born in the United States"
    ]
  },
  {
    "id": "FOLIO_train_455",
    "context": "Olivia doesn't prefer warm temperature during the day. When Olivia sleeps, she prefers cool temperature. Olivia sleeps during the night. Olivia works during the day. Olivia either works or sleeps. The time is either the day or the night. Olivia either prefers warm temperature or prefers cool temperature.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? At all times, Olivia prefers cool temperature.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPrefers(x, y) ::: x prefers y.\nSleeps(x) ::: x sleeps.\nWorks(x) ::: x works.\nDay(x) ::: x is the day.\nNight(x) ::: x is the night.\nCool(x) ::: x is cool.\nWarm(x) ::: x is warm.\nPremises:\n¬Prefers(olivia, warm) ∧ Sleeps(olivia) ∧ Prefers(olivia, cool) ::: Olivia doesn't prefer warm temperature during the day. When Olivia sleeps, she prefers cool temperature.\nSleeps(olivia) ∧ Night(x) ::: Olivia sleeps during the night.\nWorks(olivia) ∧ Day(x) ::: Olivia works during the day.\nWorks(olivia) ∨ Sleeps(olivia) ::: Olivia either works or sleeps.\nDay(x) ∨ Night(x) ::: The time is either the day or the night.\nPrefers(olivia, cool) ∨ Prefers(olivia, warm) ::: Olivia either prefers warm temperature or prefers cool temperature.\nConclusion:\nPrefers(olivia, cool) ::: At all times, Olivia prefers cool temperature.\n------\nProblem:\nThe first-order logic formular is:\n∀x (P(x) → Q(x))\nThe question is:\nBased on the above information, is the following statement true, false, or uncertain? P(a) → Q(a)\n###\nPredicates:\nP(x) ::: x is P.\nQ(x) ::: x is Q.\nPremises:\n∀x (P("
    ]
  },
  {
    "id": "FOLIO_train_456",
    "context": "Taylor Swift gives a commencement speech in New York University in 2022. Both Columbia University and New York University are located in Manhattan. Taylor Swift has received three Grammy Album of the Year Awards. Columbia University is one of the Ivy League schools.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Taylor Swift delivers a commencement speech in Manhattan.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGive(x, y) ::: x gives y.\nSpeech(x) ::: x is a speech.\nCommencement(x) ::: x is a commencement speech.\nYear(x) ::: x is a year.\nUniversity(x) ::: x is a university.\nLocate(x, y) ::: x is located in y.\nManhattan(x) ::: x is located in Manhattan.\nIvyLeague(x) ::: x is one of the Ivy League schools.\nAward(x) ::: x is an award.\nGrammy(x) ::: x is a Grammy Award.\nAlbumOfTheYear(x) ::: x is a Grammy Album of the Year Award.\nPremises:\nGive(taylor, speech) ∧ Commencement(speech) ∧ Year(year2022) ::: Taylor Swift gives a commencement speech in New York University in 2022.\nLocate(columbia, manhattan) ∧ Locate(newYork, manhattan) ::: Both Columbia University and New York University are located in Manhattan.\n3 ∧ Award(grammy) ∧ Grammy(grammy) ∧ AlbumOfTheYear(grammy) ::: Taylor Swift has received three Grammy Album of the Year Awards.\nIvyLeague(columbia) ::: Columbia University is one of the Ivy League schools.\nConclusion:\nLocate(speech, manhattan) ::: Taylor Swift delivers a commencement speech in Manhattan.\n------\nProblem:\nThe first person to walk on the moon was Neil Armstrong. Neil Armstrong was born in 1930. Neil Armstrong was an American astronaut. Neil Armstrong was the first person to walk on the moon. Neil Armstrong was the"
    ]
  },
  {
    "id": "FOLIO_train_457",
    "context": "Taylor Swift gives a commencement speech in New York University in 2022. Both Columbia University and New York University are located in Manhattan. Taylor Swift has received three Grammy Album of the Year Awards. Columbia University is one of the Ivy League schools.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The commencement speaker of NYU does not have any album.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSpeaker(x, y) ::: x is the commencement speaker of y.\nLocated(x, y) ::: x is located in y.\nGrammy(x) ::: x has received Grammy.\nAlbum(x) ::: x is an album.\nIvyLeague(x) ::: x is one of the Ivy League schools.\nPremises:\nSpeaker(taylor, nyu) ∧ Located(nyu, manhattan) ∧ Located(columbia, manhattan) ∧ Grammy(taylor) ∧ IvyLeague(columbia) ::: Taylor Swift gives a commencement speech in New York University in 2022. Both Columbia University and New York University are located in Manhattan. Taylor Swift has received three Grammy Album of the Year Awards. Columbia University is one of the Ivy League schools.\nConclusion:\n¬∃x (Speaker(x, nyu) ∧ Album(x)) ::: The commencement speaker of NYU does not have any album.\n------\nProblem:\nThe first person to walk on the moon was Neil Armstrong. Neil Armstrong was born in 1930. Neil Armstrong was an American astronaut. Neil Armstrong was the first person to walk on the moon. Neil Armstrong was the first person to walk on the moon. Neil Armstrong was the first person to walk on the moon. Neil Armstrong was the first person to walk on the moon. Neil Armstrong was the first person to walk on the moon. Neil Armstrong was the first person to walk on the moon. Neil Armstrong was the first person to walk on the moon. Neil Armstrong was the first person to walk on the moon. Neil Armstrong was the first person to walk on the moon. Neil Armstrong was the first person to walk on the moon. Neil Armstrong was the first person to walk"
    ]
  },
  {
    "id": "FOLIO_train_458",
    "context": "Customers either choose Plan A or Plan B. All who choose Plan B are rewarded with a $30 gift card. There are no customers who do not choose any plans. No customers rewarded a $30 gift card are older than 80. Customers are either older than 80 or are currently studying at school. James is not a customer who is currently studying at school.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James is a customer who does not choose any plans.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCustomer(x) ::: x is a customer.\nChoose(x, y) ::: x chooses y.\nPlanA(x) ::: x is Plan A.\nPlanB(x) ::: x is Plan B.\nReward(x, y) ::: x is rewarded with y.\nGiftCard(x) ::: x is a $30 gift card.\nOlder(x, y) ::: x is older than y.\nStudy(x) ::: x is currently studying at school.\nPremises:\n∀x (Choose(x, planA) ∨ Choose(x, planB)) ::: Customers either choose Plan A or Plan B.\n∀x (PlanB(x) → Reward(x, giftCard)) ::: All who choose Plan B are rewarded with a $30 gift card.\n¬∃x (¬Choose(x, planA) ∧ ¬Choose(x, planB)) ::: There are no customers who do not choose any plans.\n¬∃x (Reward(x, giftCard) ∧ ¬Older(x, 80)) ::: No customers rewarded a $30 gift card are older than 80.\n∀x (Older(x, 80) ∨ Study(x)) ::: Customers are either older than 80 or are currently studying at school.\n¬Study(james) ::: James is not a customer who is currently studying at school.\nConclusion:\n¬Choose(james, planA) ∧ ¬Choose(james, planB) ::: James is a customer who does not choose any plans.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffe"
    ]
  },
  {
    "id": "FOLIO_train_459",
    "context": "Customers either choose Plan A or Plan B. All who choose Plan B are rewarded with a $30 gift card. There are no customers who do not choose any plans. No customers rewarded a $30 gift card are older than 80. Customers are either older than 80 or are currently studying at school. James is not a customer who is currently studying at school.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James is a customer who chooses Plan A or does not choose any plans.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCustomer(x) ::: x is a customer.\nChoose(x, y) ::: x chooses y.\nPlanA(x) ::: x is Plan A.\nPlanB(x) ::: x is Plan B.\nReward(x, y) ::: x is rewarded with y.\nGiftCard(x) ::: x is a $30 gift card.\nOlder(x, y) ::: x is older than y.\nStudy(x) ::: x is currently studying at school.\nPremises:\n∀x (Choose(x, planA) ∨ Choose(x, planB)) ::: Customers either choose Plan A or Plan B.\n∀x (PlanB(x) → Reward(x, giftCard)) ::: All who choose Plan B are rewarded with a $30 gift card.\n¬∃x (¬Choose(x, planA) ∧ ¬Choose(x, planB)) ::: There are no customers who do not choose any plans.\n¬∃x (Reward(x, giftCard) ∧ ¬Older(x, 80)) ::: No customers rewarded a $30 gift card are older than 80.\n∀x (Older(x, 80) ∨ Study(x)) ::: Customers are either older than 80 or are currently studying at school.\n¬Study(james) ::: James is not a customer who is currently studying at school.\nConclusion:\nChoose(james, planA) ∨ ¬Choose(james, planA) ∨ ¬Choose(james, planB) ::: James is a customer who chooses Plan A or does not choose any plans.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine"
    ]
  },
  {
    "id": "FOLIO_train_460",
    "context": "Customers either choose Plan A or Plan B. All who choose Plan B are rewarded with a $30 gift card. There are no customers who do not choose any plans. No customers rewarded a $30 gift card are older than 80. Customers are either older than 80 or are currently studying at school. James is not a customer who is currently studying at school.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Suppose James is a customer who chooses Plan A or does not choose any plans, then he is either rewarded a $30 gift card or chooses Plan B.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCustomer(x) ::: x is a customer.\nChoose(x, y) ::: x chooses y.\nPlanA(x) ::: x is Plan A.\nPlanB(x) ::: x is Plan B.\nReward(x, y) ::: x is rewarded with y.\nGiftCard(x) ::: x is a $30 gift card.\nOlder(x, y) ::: x is older than y.\nStudy(x) ::: x is currently studying at school.\nPremises:\n∀x (Choose(x, planA) ∨ Choose(x, planB)) ::: Customers either choose Plan A or Plan B.\n∀x (Choose(x, planB) → Reward(x, giftCard)) ::: All who choose Plan B are rewarded with a $30 gift card.\n¬∃x (Choose(x, planA) ∧ Choose(x, planB)) ::: There are no customers who do not choose any plans.\n¬∃x (Reward(x, giftCard) ∧ ¬Older(x, 80)) ::: No customers rewarded a $30 gift card are older than 80.\n∀x (Older(x, 80) ∨ Study(x)) ::: Customers are either older than 80 or are currently studying at school.\n¬Study(james) ::: James is not a customer who is currently studying at school.\nConclusion:\n(Choose(james, planA) ∨ ¬Choose(james, planA)) ∧ (Reward(james, giftCard) ∨ ¬Reward(james, giftCard)) ::: Suppose James is a customer who chooses Plan A or does not choose any plans, then he is either rewarded a $30 gift card or chooses Plan B.\n------"
    ]
  },
  {
    "id": "FOLIO_train_461",
    "context": "Detroit City is a horse. Some horses are racehorses. If a horse falls during a race, then it dies. Detroit City fell during a race. A horse is a racehorse if it is in a race.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Detroit City has been in multiple races.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nHorse(x) ::: x is a horse.\nRacehorse(x) ::: x is a racehorse.\nFall(x) ::: x falls.\nDie(x) ::: x dies.\nRace(x) ::: x is a race.\nPremises:\nHorse(detroitCity) ::: Detroit City is a horse.\n∃x (Horse(x) ∧ Racehorse(x)) ::: Some horses are racehorses.\n(Fall(x) → Die(x)) ::: If a horse falls during a race, then it dies.\nFall(detroitCity) ::: Detroit City fell during a race.\nRacehorse(x) ↔ Race(x) ::: A horse is a racehorse if it is in a race.\nConclusion:\n¬Race(detroitCity) ::: Detroit City has been in multiple races.\n------\nProblem:\nA person is a student if and only if the person is enrolled in a class. A person is a student if and only if the person is enrolled in a class. A person is enrolled in a class if and only if the person is a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? A person is a student if and only if the person is enrolled in a class.\nBased on the above information, is the following statement true, false, or uncertain? A person is enrolled in a class if and only if the person is a student.\n###\nPredicates:\nStudent(x) ::: x is a student.\nEnrolled(x) ::: x is enrolled in a class.\nPremises:\nStudent(x) ↔ Enrolled(x) ::: A person is a student if and only if the person is enrolled in a class.\nStudent(x) ↔ Enrolled(x) ::: A person is a"
    ]
  },
  {
    "id": "FOLIO_train_462",
    "context": "Detroit City is a horse. Some horses are racehorses. If a horse falls during a race, then it dies. Detroit City fell during a race. A horse is a racehorse if it is in a race.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Detroit City is dead.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nHorse(x) ::: x is a horse.\nRacehorse(x) ::: x is a racehorse.\nFall(x) ::: x falls.\nDie(x) ::: x dies.\nRace(x) ::: x is in a race.\nPremises:\nHorse(detroitCity) ::: Detroit City is a horse.\n∃x (Horse(x) ∧ Racehorse(x)) ::: Some horses are racehorses.\n∀x (Fall(x) → Die(x)) ::: If a horse falls during a race, then it dies.\nFall(detroitCity) ::: Detroit City fell during a race.\nRacehorse(x) ↔ Race(x) ::: A horse is a racehorse if it is in a race.\nConclusion:\nDie(detroitCity) ::: Detroit City is dead.\n------\nProblem:\nA person is a student if and only if the person is enrolled in a course. A person is enrolled in a course if and only if the person is taking the course. A person is taking a course if and only if the person is in the course. A person is in a course if and only if the person is registered for the course. A person is registered for a course if and only if the person is on the roster for the course. A person is on the roster for a course if and only if the person is listed on the roster for the course. A person is listed on the roster for a course if and only if the person is on the roster for the course.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? A person is a student if and only if the person is on the roster for a course.\nBased on the above information, is the following statement true, false, or uncertain? A person is a student if and only if the person is listed on the roster"
    ]
  },
  {
    "id": "FOLIO_train_463",
    "context": "Detroit City is a horse. Some horses are racehorses. If a horse falls during a race, then it dies. Detroit City fell during a race. A horse is a racehorse if it is in a race.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Detroit City is a racehorse.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nHorse(x) ::: x is a horse.\nRacehorse(x) ::: x is a racehorse.\nFall(x) ::: x falls.\nDie(x) ::: x dies.\nRace(x) ::: x is in a race.\nPremises:\nHorse(detroitCity) ::: Detroit City is a horse.\n∃x (Horse(x) ∧ Racehorse(x)) ::: Some horses are racehorses.\n∀x (Fall(x) → Die(x)) ::: If a horse falls during a race, then it dies.\nFall(detroitCity) ::: Detroit City fell during a race.\nRacehorse(x) ↔ Race(x) ::: A horse is a racehorse if it is in a race.\nConclusion:\nRacehorse(detroitCity) ::: Detroit City is a racehorse.\n------\nProblem:\nA person is a student if and only if the person is enrolled in a course. A person is enrolled in a course if and only if the person is taking the course. A person is taking a course if and only if the person is in the course. A person is in a course if and only if the person is registered for the course. A person is registered for a course if and only if the person is on the roster for the course. A person is on the roster for a course if and only if the person is listed on the roster for the course. A person is listed on the roster for a course if and only if the person is on the roster for the course. A person is on the roster for a course if and only if the person is listed on the roster for the course. A person is listed on the roster for a course if and only if the person is on the roster for the course. A person is on the roster for a course if and only if the person is listed on the"
    ]
  },
  {
    "id": "FOLIO_train_464",
    "context": "Frederick Monhoff was an architect, artist, and illustrator. Frederick Monhoff was an American. An artist is good at painting or music. All Americans speak English.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Frederick Monhoff is good at music.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAmerican(x) ::: x is an American.\nArtist(x) ::: x is an artist.\nGoodAt(x, y) ::: x is good at y.\nPainting(x) ::: x is painting.\nMusic(x) ::: x is music.\nSpeak(x, y) ::: x speaks y.\nEnglish(x) ::: x is English.\nPremises:\nAmerican(frederick) ∧ Artist(frederick) ::: Frederick Monhoff was an architect, artist, and illustrator. Frederick Monhoff was an American.\n∀x (Artist(x) → GoodAt(x, painting) ∨ GoodAt(x, music)) ::: An artist is good at painting or music.\n∀x (American(x) → Speak(x, english)) ::: All Americans speak English.\nConclusion:\nGoodAt(frederick, music) ::: Frederick Monhoff is good at music.\n------\nProblem:\nThe first person to be called a mathematician was the Greek philosopher Pythagoras. Pythagoras was a mathematician. Pythagoras was a Greek philosopher.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Pythagoras was the first person to be called a mathematician.\nBased on the above information, is the following statement true, false, or uncertain? Pythagoras was the first person to be called a Greek philosopher.\n###\nPredicates:\nGreek(x) ::: x is a Greek.\nPhilosopher(x) ::: x is a philosopher.\nMathematician(x) ::: x is a mathematician.\nFirst(x, y) ::: x is the first person to be called y.\nPremises:\nFirst(pythagoras, mathematician"
    ]
  },
  {
    "id": "FOLIO_train_465",
    "context": "Frederick Monhoff was an architect, artist, and illustrator. Frederick Monhoff was an American. An artist is good at painting or music. All Americans speak English.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There is no illustrator who speaks English.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nArchitect(x) ::: x is an architect.\nArtist(x) ::: x is an artist.\nIllustrator(x) ::: x is an illustrator.\nAmerican(x) ::: x is an American.\nGoodAt(x, y) ::: x is good at y.\nSpeak(x, y) ::: x speaks y.\nPremises:\nArchitect(frederick) ∧ Artist(frederick) ∧ Illustrator(frederick) ∧ American(frederick) ::: Frederick Monhoff was an architect, artist, and illustrator. Frederick Monhoff was an American.\n∀x (Artist(x) → GoodAt(x, painting) ∨ GoodAt(x, music)) ::: An artist is good at painting or music.\n∀x (American(x) → Speak(x, english)) ::: All Americans speak English.\nConclusion:\n¬∃x (Illustrator(x) ∧ Speak(x, english)) ::: There is no illustrator who speaks English.\n------\nProblem:\nThe first person to be called a \"computer\" was a person who performed calculations. The first person to be called a \"computer\" was a woman. The first person to be called a \"computer\" was an American.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The first person to be called a \"computer\" was a woman who performed calculations.\nBased on the above information, is the following statement true, false, or uncertain? The first person to be called a \"computer\" was an American who performed calculations.\nBased on the above information, is the following statement true, false, or uncertain? The first person to be called a \"computer\" was a woman who was an American.\n###\nPredicates:\nComputer(x) ::: x is a computer.\nWoman"
    ]
  },
  {
    "id": "FOLIO_train_466",
    "context": "Miroslav Fiedler was a Czech mathematician. Miroslav Fiedler is known for his contributions to linear algebra and graph theory. Miroslav Fiedler is honored by the Fiedler eigenvalue. Fiedler eigenvalue is the second smallest eigenvalue of the graph Laplacian.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Miroslav Fiedler is honored by the second smallest eigenvalue of the graph Laplacian.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCzech(x) ::: x is a Czech person.\nMathematician(x) ::: x is a mathematician.\nContribution(x, y) ::: x made contributions to y.\nHonor(x, y) ::: x is honored by y.\nEigenvalue(x) ::: x is an eigenvalue.\nLaplacian(x) ::: x is a Laplacian.\nGraph(x) ::: x is a graph.\nPremises:\nCzech(miroslavFiedler) ∧ Mathematician(miroslavFiedler) ∧ Contribution(miroslavFiedler, linearAlgebra) ∧ Contribution(miroslavFiedler, graphTheory) ::: Miroslav Fiedler was a Czech mathematician. Miroslav Fiedler is known for his contributions to linear algebra and graph theory.\nHonor(miroslavFiedler, fiedlerEigenvalue) ::: Miroslav Fiedler is honored by the Fiedler eigenvalue.\nEigenvalue(fiedlerEigenvalue) ∧ Laplacian(graphLaplacian) ∧ Graph(graph) ∧ SecondSmallest(fiedlerEigenvalue, graphLaplacian) ::: Fiedler eigenvalue is the second smallest eigenvalue of the graph Laplacian.\nConclusion:\nHonor(miroslavFiedler, secondSmallest(graphLaplacian)) ::: Miroslav Fiedler is honored by the second smallest eigenvalue of the graph Laplacian.\n------\nProblem:\nMiroslav Fiedler was a Czech mathematician. Miroslav Fiedler is known for his contributions to linear algebra and graph theory. Miroslav Fiedler is honored by the Fiedler eigenvalue. Fiedler eigenvalue is the second smallest eigenvalue of the graph Laplacian.\nQuestion:"
    ]
  },
  {
    "id": "FOLIO_train_467",
    "context": "Miroslav Fiedler was a Czech mathematician. Miroslav Fiedler is known for his contributions to linear algebra and graph theory. Miroslav Fiedler is honored by the Fiedler eigenvalue. Fiedler eigenvalue is the second smallest eigenvalue of the graph Laplacian.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Miroslav Fiedler was a French mathematician.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCzech(x) ::: x is a Czech person.\nMathematician(x) ::: x is a mathematician.\nContribution(x, y) ::: x made contributions to y.\nKnown(x, y) ::: x is known for y.\nHonor(x, y) ::: x is honored by y.\nEigenvalue(x) ::: x is an eigenvalue.\nLaplacian(x) ::: x is a Laplacian.\nPremises:\nCzech(miroslavFiedler) ∧ Mathematician(miroslavFiedler) ∧ Contribution(miroslavFiedler, linearAlgebra) ∧ Contribution(miroslavFiedler, graphTheory) ∧ Known(miroslavFiedler, contributionsToLinearAlgebraAndGraphTheory) ∧ Honor(miroslavFiedler, fiedlerEigenvalue) ∧ Eigenvalue(fiedlerEigenvalue) ∧ Laplacian(graphLaplacian) ∧ SecondSmallest(fiedlerEigenvalue, graphLaplacian) ::: Miroslav Fiedler was a Czech mathematician. Miroslav Fiedler is known for his contributions to linear algebra and graph theory. Miroslav Fiedler is honored by the Fiedler eigenvalue. Fiedler eigenvalue is the second smallest eigenvalue of the graph Laplacian.\nConclusion:\n¬Czech(miroslavFiedler) ::: Miroslav Fiedler was a French mathematician.\n------\nProblem:\nMiroslav Fiedler was a Czech mathematician. Miroslav Fiedler is known for his contributions to linear algebra and graph theory. Miroslav Fiedler is honored by the Fiedler eigenvalue. Fiedler eigenvalue is the second smallest eigenvalue of the graph Laplacian.\nQuestion:\nBased on"
    ]
  },
  {
    "id": "FOLIO_train_468",
    "context": "Miroslav Fiedler was a Czech mathematician. Miroslav Fiedler is known for his contributions to linear algebra and graph theory. Miroslav Fiedler is honored by the Fiedler eigenvalue. Fiedler eigenvalue is the second smallest eigenvalue of the graph Laplacian.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A Czech mathematician is known for his contributions to linear algebra and graph theory.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCzech(x) ::: x is a Czech person.\nMathematician(x) ::: x is a mathematician.\nContribution(x, y) ::: x is known for his contributions to y.\nEigenvalue(x) ::: x is an eigenvalue.\nLaplacian(x) ::: x is a Laplacian.\nPremises:\nCzech(miroslav) ∧ Mathematician(miroslav) ∧ Contribution(miroslav, linearAlgebra) ∧ Contribution(miroslav, graphTheory) ::: Miroslav Fiedler was a Czech mathematician. Miroslav Fiedler is known for his contributions to linear algebra and graph theory.\nEigenvalue(fiedlerEigenvalue) ∧ Laplacian(graphLaplacian) ∧ SecondSmallest(fiedlerEigenvalue, graphLaplacian) ::: Miroslav Fiedler is honored by the Fiedler eigenvalue. Fiedler eigenvalue is the second smallest eigenvalue of the graph Laplacian.\nConclusion:\nContribution(miroslav, linearAlgebra) ∧ Contribution(miroslav, graphTheory) ::: A Czech mathematician is known for his contributions to linear algebra and graph theory.\n------\nProblem:\nMiroslav Fiedler was a Czech mathematician. Miroslav Fiedler is known for his contributions to linear algebra and graph theory. Miroslav Fiedler is honored by the Fiedler eigenvalue. Fiedler eigenvalue is the second smallest eigenvalue of the graph Laplacian.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? A Czech mathematician is known for his contributions to linear algebra and graph theory.\n###\nPredicates:\nCzech(x) ::: x is a Czech person.\nMathematician(x) ::: x is"
    ]
  },
  {
    "id": "FOLIO_train_469",
    "context": "A laptop is a computer. You can play games on a computer. A phone is not a computer.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? You can play games on a laptop.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLaptop(x) ::: x is a laptop.\nComputer(x) ::: x is a computer.\nPhone(x) ::: x is a phone.\nPlay(x, y) ::: x can play y.\nPremises:\n∀x (Laptop(x) → Computer(x)) ::: A laptop is a computer.\n∀x (Computer(x) → ∃y Play(x, y)) ::: You can play games on a computer.\n∀x (Phone(x) → ¬Computer(x)) ::: A phone is not a computer.\nConclusion:\nPlay(x, games) ::: You can play games on a laptop.\n------\nProblem:\nA person is a human. A human is a mammal. A mammal is an animal. A person is not a mammal.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? A person is an animal.\nBased on the above information, is the following statement true, false, or uncertain? A mammal is a human.\nBased on the above information, is the following statement true, false, or uncertain? A human is a person.\n###\nPredicates:\nPerson(x) ::: x is a person.\nHuman(x) ::: x is a human.\nMammal(x) ::: x is a mammal.\nAnimal(x) ::: x is an animal.\nPremises:\n∀x (Person(x) → Human(x)) ::: A person is a human.\n∀x (Human(x) → Mammal(x)) ::: A human is a mammal.\n∀x (Mammal(x) → Animal(x)) ::: A mammal is an animal.\n¬∀x (Person(x) → Mammal(x)) ::: A person is not a m"
    ]
  },
  {
    "id": "FOLIO_train_470",
    "context": "A laptop is a computer. You can play games on a computer. A phone is not a computer.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? You can not play games on a phone.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLaptop(x) ::: x is a laptop.\nComputer(x) ::: x is a computer.\nPhone(x) ::: x is a phone.\nPlay(x, y) ::: x can play y.\nPremises:\n∀x (Laptop(x) → Computer(x)) ::: A laptop is a computer.\n∀x (Computer(x) → ∃y Play(x, y)) ::: You can play games on a computer.\n¬∀x (Phone(x) → Computer(x)) ::: A phone is not a computer.\nConclusion:\n¬∃x (Phone(x) ∧ ∃y Play(x, y)) ::: You can not play games on a phone.\n------"
    ]
  },
  {
    "id": "FOLIO_train_471",
    "context": "Walter Folger Brown was an American politician and lawyer, and served as the postmaster general. Walter Folger Brown graduated from Harvard University with a Bachelors of Arts. While they were both in Toledo, Walter Folger Brown's father practiced law with Walter Folger Brown. Katherin Hafer married Walter Folger Brown.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Walter Folger Brown graduated with a Bachelors of Arts.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAmerican(x) ::: x is an American.\nPolitician(x) ::: x is a politician.\nLawyer(x) ::: x is a lawyer.\nPostmasterGeneral(x) ::: x is the postmaster general.\nGraduate(x, y) ::: x graduated from y.\nHarvardUniversity(x) ::: x is Harvard University.\nBachelorsOfArts(x) ::: x is a Bachelors of Arts.\nPractice(x, y) ::: x practiced law with y.\nFather(x, y) ::: x is the father of y.\nMarry(x, y) ::: x married y.\nPremises:\nAmerican(walterFol"
    ]
  },
  {
    "id": "FOLIO_train_472",
    "context": "Walter Folger Brown was an American politician and lawyer, and served as the postmaster general. Walter Folger Brown graduated from Harvard University with a Bachelors of Arts. While they were both in Toledo, Walter Folger Brown's father practiced law with Walter Folger Brown. Katherin Hafer married Walter Folger Brown.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Walter Folger Brown's father was in Toledo.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAmerican(x) ::: x is an American.\nPolitician(x) ::: x is a politician.\nLawyer(x) ::: x is a lawyer.\nPostmasterGeneral(x) ::: x is the postmaster general.\nGraduate(x, y) ::: x graduated from y.\nHarvardUniversity(x) ::: x is Harvard University.\nBachelorsOfArts(x) ::: x is a Bachelors of Arts.\nPractice(x, y) ::: x practiced law with y.\nFather(x, y) ::: x is the father of y.\nMarry(x, y) ::: x married y.\nPremises:\nAmerican(walterFol"
    ]
  },
  {
    "id": "FOLIO_train_473",
    "context": "Walter Folger Brown was an American politician and lawyer, and served as the postmaster general. Walter Folger Brown graduated from Harvard University with a Bachelors of Arts. While they were both in Toledo, Walter Folger Brown's father practiced law with Walter Folger Brown. Katherin Hafer married Walter Folger Brown.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Walter Folger Brown was not in Toledo.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAmerican(x) ::: x is an American.\nPolitician(x) ::: x is a politician.\nLawyer(x) ::: x is a lawyer.\nPostmasterGeneral(x) ::: x is the postmaster general.\nGraduate(x, y) ::: x graduated from y.\nHarvardUniversity(x) ::: x is Harvard University.\nBachelorsOfArts(x) ::: x is a Bachelors of Arts.\nPractice(x, y) ::: x practiced law with y.\nFather(x, y) ::: x is the father of y.\nMarry(x, y) ::: x married y.\nPremises:\nAmerican(walterFol"
    ]
  },
  {
    "id": "FOLIO_train_474",
    "context": "All products shipped from China are made in China. All products sold in JD are shipped from China. All products commonly used in China are sold in JD. All products favored by young people are commonly used in China. MacBook is not made in China and is not commonly used in China.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The MacBook is favored by young people.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nShip(x, y) ::: x is shipped from y.\nSell(x, y) ::: x is sold in y.\nUse(x, y) ::: x is used in y.\nFavor(x, y) ::: x is favored by y.\nProduct(x) ::: x is a product.\nChina(x) ::: x is China.\nJD(x) ::: x is JD.\nYoungPeople(x) ::: x is young people.\nMacBook(x) ::: x is MacBook.\nPremises:\n∀x (Ship(x, china) → MadeIn(x, china)) ::: All products shipped from China are made in China."
    ]
  },
  {
    "id": "FOLIO_train_475",
    "context": "All products shipped from China are made in China. All products sold in JD are shipped from China. All products commonly used in China are sold in JD. All products favored by young people are commonly used in China. MacBook is not made in China and is not commonly used in China.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The MacBook is made in China.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nShip(x, y) ::: x is shipped from y.\nSell(x, y) ::: x is sold in y.\nUse(x, y) ::: x is used in y.\nFavor(x, y) ::: x is favored by y.\nProduct(x) ::: x is a product.\nChina(x) ::: x is China.\nJD(x) ::: x is JD.\nYoung(x) ::: x is young.\nMacBook(x) ::: x is a MacBook.\nPremises:\n∀x (Ship(x, china) → MadeIn(x, china)) ::: All products shipped from China are made in China.\n∀x"
    ]
  },
  {
    "id": "FOLIO_train_476",
    "context": "All products shipped from China are made in China. All products sold in JD are shipped from China. All products commonly used in China are sold in JD. All products favored by young people are commonly used in China. MacBook is not made in China and is not commonly used in China.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The MacBook is favored by young people and commonly used in China.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nShip(x, y) ::: x is shipped from y.\nSell(x, y) ::: x is sold in y.\nUse(x, y) ::: x is used in y.\nFavor(x, y) ::: x is favored by y.\nProduct(x) ::: x is a product.\nChina(x) ::: x is China.\nJD(x) ::: x is JD.\nYoungPeople(x) ::: x is young people.\nMacBook(x) ::: x is MacBook.\nPremises:\n∀x (Ship(x, china) → MadeIn(x, china)) ::: All products shipped from China are made in China."
    ]
  },
  {
    "id": "FOLIO_train_477",
    "context": "All products shipped from China are made in China. All products sold in JD are shipped from China. All products commonly used in China are sold in JD. All products favored by young people are commonly used in China. MacBook is not made in China and is not commonly used in China.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The MacBook is either favored by young people or commonly used in China.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nShip(x, y) ::: x is shipped from y.\nSell(x, y) ::: x is sold in y.\nUse(x, y) ::: x is used in y.\nFavor(x, y) ::: x is favored by y.\nProduct(x) ::: x is a product.\nChina(x) ::: x is China.\nJD(x) ::: x is JD.\nYoungPeople(x) ::: x is young people.\nPremises:\n∀x (Ship(x, china) → MadeIn(x, china)) ::: All products shipped from China are made in China.\n∀x (Sell(x, jd) → Sh"
    ]
  },
  {
    "id": "FOLIO_train_478",
    "context": "All products shipped from China are made in China. All products sold in JD are shipped from China. All products commonly used in China are sold in JD. All products favored by young people are commonly used in China. MacBook is not made in China and is not commonly used in China.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If the MacBook is favored by young people and commonly used in China, then it is neither favored by young people nor made in China.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nShip(x, y) ::: x is shipped from y.\nSell(x, y) ::: x is sold in y.\nUse(x, y) ::: x is used in y.\nFavor(x, y) ::: x is favored by y.\nProduct(x) ::: x is a product.\nChina(x) ::: x is in China.\nYoung(x) ::: x is young.\nPremises:\n∀x (Ship(x, china) → MadeIn(x, china)) ::: All products shipped from China are made in China.\n∀x (Ship(x, china) ∧ Sell(x, jd)) ::: All products sold in J"
    ]
  },
  {
    "id": "FOLIO_train_479",
    "context": "Oxford Circus is a road junction connecting Oxford Street and Regent Street. Oxford Street is in London. John Nash designed the construction on Regent Street. John Nash designed Oxford Circus. John Nash is an architect in British. Oxford Circus is the entrance to Oxford Circus tube station which is a part of the Central line in 1900.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Oxford Circus is in London.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCircus(x) ::: x is a road junction.\nStreet(x) ::: x is a street.\nArchitect(x) ::: x is an architect.\nBritish(x) ::: x is in British.\nDesign(x, y) ::: x designed y.\nEntrance(x, y) ::: x is the entrance to y.\nTubeStation(x) ::: x is a tube station.\nLine(x) ::: x is a line.\nPremises:\nCircus(oxfordCircus) ∧ Street(oxfordStreet) ∧ Street(regentStreet) ::: Oxford Circus is a road junction connecting Oxford Street and Regent Street.\nStreet(oxford"
    ]
  },
  {
    "id": "FOLIO_train_480",
    "context": "Oxford Circus is a road junction connecting Oxford Street and Regent Street. Oxford Street is in London. John Nash designed the construction on Regent Street. John Nash designed Oxford Circus. John Nash is an architect in British. Oxford Circus is the entrance to Oxford Circus tube station which is a part of the Central line in 1900.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Oxford Circus is designed by a British architect.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCircus(x) ::: x is a road junction.\nStreet(x) ::: x is a street.\nArchitect(x) ::: x is an architect.\nBritish(x) ::: x is a British.\nDesign(x, y) ::: x designed y.\nEntrance(x, y) ::: x is the entrance to y.\nTubeStation(x) ::: x is a tube station.\nLine(x) ::: x is a line.\nPremises:\nCircus(oxfordCircus) ∧ Street(oxfordStreet) ∧ Street(regentStreet) ::: Oxford Circus is a road junction connecting Oxford Street and Regent Street.\nStreet(oxfordStreet) ∧ In(oxfordStreet, london) ::: Oxford Street is in London.\nArchitect(johnNash) ∧ British(johnNash) ::: John Nash designed the construction on Regent Street.\nDesign(johnNash, oxfordCircus) ::: John Nash designed Oxford Circus.\nDesign(johnNash, regentStreet) ::: John Nash is an architect in British.\nEntrance(oxfordCircus, oxfordCircusTubeStation) ∧ TubeStation(oxfordCircusTubeStation) ∧ Line(centralLine) ∧ In(oxfordCircusTubeStation, centralLine) ∧ Year(year1900) ::: Oxford Circus is the entrance to Oxford Circus tube station which is a part of the Central line in 1900.\nConclusion:\nDesign(johnNash, oxfordCircus) ∧ Architect(johnNash) ∧ British(johnNash) ::: Oxford Circus is designed by a British architect.\n------"
    ]
  },
  {
    "id": "FOLIO_train_481",
    "context": "Oxford Circus is a road junction connecting Oxford Street and Regent Street. Oxford Street is in London. John Nash designed the construction on Regent Street. John Nash designed Oxford Circus. John Nash is an architect in British. Oxford Circus is the entrance to Oxford Circus tube station which is a part of the Central line in 1900.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? John Nash designed the Central line in 1900.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCircus(x) ::: x is a road junction.\nStreet(x) ::: x is a street.\nArchitect(x) ::: x is an architect.\nBritish(x) ::: x is a British.\nDesign(x, y) ::: x designed y.\nEntrance(x, y) ::: x is the entrance to y.\nTubeStation(x) ::: x is a tube station.\nLine(x) ::: x is a line.\nPremises:\nCircus(oxfordCircus) ∧ Street(oxfordStreet) ∧ Street(regentStreet) ::: Oxford Circus is a road junction connecting Oxford Street and Regent Street.\nStreet(oxfordStreet) ∧ In(oxfordStreet, london) ::: Oxford Street is in London.\nDesign(johnNash, regentStreet) ::: John Nash designed the construction on Regent Street.\nDesign(johnNash, oxfordCircus) ::: John Nash designed Oxford Circus.\nArchitect(johnNash) ∧ British(johnNash) ::: John Nash is an architect in British.\nEntrance(oxfordCircus, oxfordCircusTubeStation) ∧ TubeStation(oxfordCircusTubeStation) ∧ Line(centralLine) ∧ In(oxfordCircusTubeStation, centralLine) ∧ Year(year1900) ::: Oxford Circus is the entrance to Oxford Circus tube station which is a part of the Central line in 1900.\nConclusion:\nDesign(johnNash, centralLine) ::: John Nash designed the Central line in 1900.\n------\nProblem:\nThe first known use of the word \"computer\" was in"
    ]
  },
  {
    "id": "FOLIO_train_482",
    "context": "Oxford Circus is a road junction connecting Oxford Street and Regent Street. Oxford Street is in London. John Nash designed the construction on Regent Street. John Nash designed Oxford Circus. John Nash is an architect in British. Oxford Circus is the entrance to Oxford Circus tube station which is a part of the Central line in 1900.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Regent Street is not in London.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCircus(x) ::: x is a road junction.\nStreet(x) ::: x is a street.\nLondon(x) ::: x is in London.\nArchitect(x) ::: x is an architect.\nBritish(x) ::: x is in British.\nDesign(x, y) ::: x designed y.\nEntrance(x, y) ::: x is the entrance to y.\nTubeStation(x) ::: x is a tube station.\nLine(x) ::: x is a line.\nPremises:\nCircus(oxfordCircus) ∧ Street(oxfordStreet) ∧ Street(regentStreet) ∧ London(oxfordStreet) ∧ Design(johnNash, regentStreet) ∧ Design(johnNash, oxfordCircus) ∧ Architect(johnNash) ∧ British(johnNash) ∧ Entrance(oxfordCircus, oxfordCircusTubeStation) ∧ TubeStation(oxfordCircusTubeStation) ∧ Line(centralLine) ∧ Entrance(oxfordCircusTubeStation, centralLine) ∧ Year(year1900) ::: Oxford Circus is a road junction connecting Oxford Street and Regent Street. Oxford Street is in London. John Nash designed the construction on Regent Street. John Nash designed Oxford Circus. John Nash is an architect in British. Oxford Circus is the entrance to Oxford Circus tube station which is a part of the Central line in 1900.\nConclusion:\n¬London(regentStreet) ::: Regent Street is not in London.\n------\nProblem:\nThe first-order logic formular is:\n∀x (P(x) → Q(x))\nThe question is:"
    ]
  },
  {
    "id": "FOLIO_train_483",
    "context": "An animal is either a cat or a dog. All dogs bark. Ghosts do not exist. If something barks, then it is not alive. A thing is either alive or dead. Jojo is not dead.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jojo is a ghost.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAnimal(x) ::: x is an animal.\nCat(x) ::: x is a cat.\nDog(x) ::: x is a dog.\nBark(x) ::: x barks.\nAlive(x) ::: x is alive.\nDead(x) ::: x is dead.\nGhost(x) ::: x is a ghost.\nPremises:\n∀x (Animal(x) ∨ Dog(x)) ::: An animal is either a cat or a dog.\n∀x (Dog(x) → Bark(x)) ::: All dogs bark.\n¬∃x (Ghost(x) ∧ Alive(x)) ::: Ghosts do not exist.\n¬∃x (Bark(x) ∧ Alive(x)) ::: If something barks, then it is not alive.\n∀x (Alive(x) ∨ Dead(x)) ::: A thing is either alive or dead.\n¬Dead(jojo) ::: Jojo is not dead.\nConclusion:\n¬Ghost(jojo) ::: Jojo is a ghost.\n------\nProblem:\nA person is either a man or a woman. All men are mortal. All women are mortal.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? All people are mortal.\nBased on the above information, is the following statement true, false, or uncertain? All mortal people are men.\nBased on the above information, is the following statement true, false, or uncertain? All mortal people are women.\n###\nPredicates:\nMan(x) ::: x is a man.\nWoman(x) ::: x is a woman.\nMortal(x) ::: x is mortal"
    ]
  },
  {
    "id": "FOLIO_train_484",
    "context": "An animal is either a cat or a dog. All dogs bark. Ghosts do not exist. If something barks, then it is not alive. A thing is either alive or dead. Jojo is not dead.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jojo is a cat or a ghost.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAnimal(x) ::: x is an animal.\nCat(x) ::: x is a cat.\nDog(x) ::: x is a dog.\nBark(x) ::: x barks.\nAlive(x) ::: x is alive.\nDead(x) ::: x is dead.\nGhost(x) ::: x is a ghost.\nPremises:\n∀x (Animal(x) ∨ Dog(x)) ::: An animal is either a cat or a dog.\n∀x (Dog(x) → Bark(x)) ::: All dogs bark.\n¬∃x (Ghost(x)) ::: Ghosts do not exist.\n¬∃x (Bark(x) ∧ Alive(x)) ::: If something barks, then it is not alive.\n∀x (Alive(x) ∨ Dead(x)) ::: A thing is either alive or dead.\n¬Dead(jojo) ::: Jojo is not dead.\nConclusion:\nCat(jojo) ∨ Ghost(jojo) ::: Jojo is a cat or a ghost.\n------\nProblem:\nA person is either a man or a woman. A man is either a father or a son. A woman is either a mother or a daughter. A father is either a grandfather or a son. A mother is either a grandmother or a daughter. A son is either a grandson or a father. A daughter is either a granddaughter or a mother. A grandfather is either a great-grandfather or a father. A grandmother is either a great-grandmother or a mother. A grandson is either a great-grandson or a son. A granddaughter is either a great-granddaughter or a daughter. A great-grandfather is either a"
    ]
  },
  {
    "id": "FOLIO_train_485",
    "context": "An animal is either a cat or a dog. All dogs bark. Ghosts do not exist. If something barks, then it is not alive. A thing is either alive or dead. Jojo is not dead.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Jojo is a cat or a ghost, then Jojo either barks or is a dog.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAnimal(x) ::: x is an animal.\nCat(x) ::: x is a cat.\nDog(x) ::: x is a dog.\nBark(x) ::: x barks.\nAlive(x) ::: x is alive.\nDead(x) ::: x is dead.\nGhost(x) ::: x is a ghost.\nPremises:\n∀x (Animal(x) ∨ Dog(x)) ::: An animal is either a cat or a dog.\n∀x (Dog(x) → Bark(x)) ::: All dogs bark.\n¬∃x (Ghost(x) ∧ Alive(x)) ::: Ghosts do not exist.\n¬∃x (Bark(x) ∧ Alive(x)) ::: If something barks, then it is not alive.\n∀x (Alive(x) ∨ Dead(x)) ::: A thing is either alive or dead.\n¬Dead(jojo) ::: Jojo is not dead.\nConclusion:\n((Cat(jojo) ∨ Ghost(jojo)) ∧ Dog(jojo)) ∨ Bark(jojo) ::: If Jojo is a cat or a ghost, then Jojo either barks or is a dog.\n------\nProblem:\nA person is either a man or a woman. A man is either a father or a son. A woman is either a mother or a daughter. A father is either a grandfather or a son. A mother is either a grandmother or a daughter. A son is either a grandson or a father. A daughter is either a granddaughter or a mother. A grandfather is either a great-grandfather or a father. A grandmother is either a great-grandmother or a mother. A grandson is either"
    ]
  },
  {
    "id": "FOLIO_train_486",
    "context": "All animals that are tigers are cats. No cats are dogs. All Bengal tigers are tigers. Everything that is a husky is a dog. Fido is either a Bengal tiger or a cat.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Fido is a husky.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTiger(x) ::: x is a tiger.\nCat(x) ::: x is a cat.\nDog(x) ::: x is a dog.\nBengalTiger(x) ::: x is a Bengal tiger.\nHusky(x) ::: x is a husky.\nPremises:\n∀x (Tiger(x) → Cat(x)) ::: All animals that are tigers are cats.\n¬∃x (Cat(x) ∧ Dog(x)) ::: No cats are dogs.\n∀x (BengalTiger(x) → Tiger(x)) ::: All Bengal tigers are tigers.\n∀x (Husky(x) → Dog(x)) ::: Everything that is a husky is a dog.\n(BengalTiger(fido) ∨ Cat(fido)) ::: Fido is either a Bengal tiger or a cat.\nConclusion:\n¬Husky(fido) ::: Fido is a husky.\n------\nProblem:\nAll animals that are tigers are cats. No cats are dogs. All Bengal tigers are tigers. Everything that is a husky is a dog. Fido is either a Bengal tiger or a cat.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Fido is a cat.\n###\nPredicates:\nTiger(x) ::: x is a tiger.\nCat(x) ::: x is a cat.\nDog(x) ::: x is a dog.\nBengalTiger(x) ::: x is a Bengal tiger.\nHusky(x) ::: x is a husky.\nPremises:"
    ]
  },
  {
    "id": "FOLIO_train_487",
    "context": "All animals that are tigers are cats. No cats are dogs. All Bengal tigers are tigers. Everything that is a husky is a dog. Fido is either a Bengal tiger or a cat.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Fido is not a husky.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTiger(x) ::: x is a tiger.\nCat(x) ::: x is a cat.\nDog(x) ::: x is a dog.\nBengalTiger(x) ::: x is a Bengal tiger.\nHusky(x) ::: x is a husky.\nPremises:\n∀x (Tiger(x) → Cat(x)) ::: All animals that are tigers are cats.\n¬∃x (Cat(x) ∧ Dog(x)) ::: No cats are dogs.\n∀x (BengalTiger(x) → Tiger(x)) ::: All Bengal tigers are tigers.\n∀x (Husky(x) → Dog(x)) ::: Everything that is a husky is a dog.\n(BengalTiger(fido) ∨ Cat(fido)) ::: Fido is either a Bengal tiger or a cat.\nConclusion:\n¬Husky(fido) ::: Fido is not a husky.\n------\nProblem:\nAll animals that are tigers are cats. No cats are dogs. All Bengal tigers are tigers. Everything that is a husky is a dog. Fido is either a Bengal tiger or a cat.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Fido is not a dog.\n###\nPredicates:\nTiger(x) ::: x is a tiger.\nCat(x) ::: x is a cat.\nDog(x) ::: x is a dog.\nBengalTiger(x) ::: x is a Bengal tiger.\nHusky(x) ::: x is a husky.\nPremises"
    ]
  },
  {
    "id": "FOLIO_train_488",
    "context": "All animals that are tigers are cats. No cats are dogs. All Bengal tigers are tigers. Everything that is a husky is a dog. Fido is either a Bengal tiger or a cat.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Fido is a Bengal tiger.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCat(x) ::: x is a cat.\nDog(x) ::: x is a dog.\nTiger(x) ::: x is a tiger.\nBengalTiger(x) ::: x is a Bengal tiger.\nHusky(x) ::: x is a husky.\nPremises:\n∀x (Tiger(x) → Cat(x)) ::: All animals that are tigers are cats.\n¬∃x (Cat(x) ∧ Dog(x)) ::: No cats are dogs.\n∀x (BengalTiger(x) → Tiger(x)) ::: All Bengal tigers are tigers.\n∀x (Husky(x) → Dog(x)) ::: Everything that is a husky is a dog.\n(BengalTiger(fido) ∨ Cat(fido)) ::: Fido is either a Bengal tiger or a cat.\nConclusion:\nBengalTiger(fido) ::: Fido is a Bengal tiger.\n------\nProblem:\nAll animals that are tigers are cats. No cats are dogs. All Bengal tigers are tigers. Everything that is a husky is a dog. Fido is either a Bengal tiger or a cat.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Fido is a cat.\n###\nPredicates:\nCat(x) ::: x is a cat.\nDog(x) ::: x is a dog.\nTiger(x) ::: x is a tiger.\nBengalTiger(x) ::: x is a Bengal tiger.\nHusky(x) ::: x is a husky.\nPrem"
    ]
  },
  {
    "id": "FOLIO_train_489",
    "context": "All animals that are tigers are cats. No cats are dogs. All Bengal tigers are tigers. Everything that is a husky is a dog. Fido is either a Bengal tiger or a cat.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Fido is neither a dog nor a husky.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCat(x) ::: x is a cat.\nDog(x) ::: x is a dog.\nHusky(x) ::: x is a husky.\nTiger(x) ::: x is a tiger.\nBengalTiger(x) ::: x is a Bengal tiger.\nPremises:\n∀x (Tiger(x) → Cat(x)) ::: All animals that are tigers are cats.\n¬∃x (Cat(x) ∧ Dog(x)) ::: No cats are dogs.\n∀x (BengalTiger(x) → Tiger(x)) ::: All Bengal tigers are tigers.\n∀x (Husky(x) → Dog(x)) ::: Everything that is a husky is a dog.\n(BengalTiger(fido) ∨ Cat(fido)) ∧ ¬(BengalTiger(fido) ∧ Cat(fido)) ::: Fido is either a Bengal tiger or a cat.\nConclusion:\n¬(Dog(fido) ∧ Husky(fido)) ::: Fido is neither a dog nor a husky.\n------\nProblem:\nAll animals that are tigers are cats. No cats are dogs. All Bengal tigers are tigers. Everything that is a husky is a dog. Fido is either a Bengal tiger or a cat.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Fido is a cat.\n###\nPredicates:\nCat(x) ::: x is a cat.\nDog(x) ::: x is a dog.\nHusky(x) ::: x is a husky.\nTiger(x)"
    ]
  },
  {
    "id": "FOLIO_train_490",
    "context": "If a city hold a Summer Olympics, and the city is a US city, then the Summer Olympics will be in the US. If a city is in a state which is in US, the city is a US city. If a city in a state, and a Summer Olympics is in this city, then the Summer Olympics is in this state. The 2028 Summer Olympics is scheduled to take place in Los Angeles(LA). LA is a city in California(CA). Atlanta is a US city. Atlanta is in Georgia(CA). CA is a state in the United States. Boxing, modern pentathlon, and weightlifting will be removed from The 2028 Summer Olympics. Atlanta in the United States hold the 1996 Summer Olympics.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The 2028 Summer Olympics will take place in the US.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "9\nPredicates:\nCity(x) ::: x is a city.\nUSCity(x) ::: x is a US city.\nState(x) ::: x is a state.\nUSState(x) ::: x is a US state.\nSummerOlympics(x) ::: x is a Summer Olympics.\nHold(x, y) ::: x hold y.\nIn(x, y) ::: x is in y.\nRemove(x, y) ::: x will be removed from y.\nPremises:\n(City(x) ∧ Hold(x, SummerOlympics(y)) ∧ USCity(x)) → (Hold(y, US)) ::: If a city hold a Summer Olympics, and the city is a US city, then the Summer Olympics will be in the US.\n(City(x) ∧ In(x, State(y)) ∧ USState(y)) → USCity(x) ::: If a city is in a state which is in US, the city is a US city.\n(City(x) ∧ In(x, State(y)) ∧ Hold(x, SummerOlympics(z))) → Hold(z, y) ::: If a city in a state, and a Summer Olympics is in this city, then the Summer Olympics is in this state.\nHold(la, 2028SummerOlympics) ::: The 2028 Summer Olympics is scheduled to take place in Los Angeles(LA).\nCity(la) ∧ In(la, ca) ::: LA is a city in California(CA).\nUSCity(atlanta) ::: Atlanta is a US city.\nCity(atlanta) ∧ In(atlanta, ga) ::: Atlanta is in Georgia(CA).\nState(ca) ∧ USState(ca) ::: CA is a state in the United States.\nRemove(boxing, 2028SummerOlympics) ∧ Remove(modernPentathlon, 2028SummerOlympics) ∧ Remove(weightlifting, 2028SummerOlympics) ::: Boxing, modern pentathlon, and weightlifting will be removed from The 2028 Summer Olympics.\nHold(atlanta, 1996SummerOlympics) ::: Atlanta in the United States hold the 1996 Summer Olympics.\nConclusion:\nHold(2028SummerOlympics, us) ::: The 2028 Summer Olympics will take place in the US.\n------"
    ]
  },
  {
    "id": "FOLIO_train_491",
    "context": "If a city hold a Summer Olympics, and the city is a US city, then the Summer Olympics will be in the US. If a city is in a state which is in US, the city is a US city. If a city in a state, and a Summer Olympics is in this city, then the Summer Olympics is in this state. The 2028 Summer Olympics is scheduled to take place in Los Angeles(LA). LA is a city in California(CA). Atlanta is a US city. Atlanta is in Georgia(CA). CA is a state in the United States. Boxing, modern pentathlon, and weightlifting will be removed from The 2028 Summer Olympics. Atlanta in the United States hold the 1996 Summer Olympics.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The 1996 Summer Olympics is not in Georgia.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "9\nPredicates:\nCity(x) ::: x is a city.\nUSCity(x) ::: x is a US city.\nState(x) ::: x is a state.\nUSState(x) ::: x is a US state.\nSummerOlympics(x) ::: x is a Summer Olympics.\nHold(x, y) ::: x hold y.\nIn(x, y) ::: x is in y.\nRemove(x, y) ::: x will be removed from y.\nPremises:\n(City(x) ∧ Hold(x, SummerOlympics(y)) ∧ USCity(x)) → (Hold(y, US)) ::: If a city hold a Summer Olympics, and the city is a US city, then the Summer Olympics will be in the US.\n(City(x) ∧ In(x, State(y)) ∧ In(y, USState(z))) → USCity(x) ::: If a city is in a state which is in US, the city is a US city.\n(City(x) ∧ In(x, State(y)) ∧ Hold(x, SummerOlympics(z))) → Hold(z, y) ::: If a city in a state, and a Summer Olympics is in this city, then the Summer Olympics is in this state.\nHold(la, SummerOlympics(y)) ∧ City(la) ∧ In(la, State(ca)) ::: The 2028 Summer Olympics is scheduled to take place in Los Angeles(LA).\nCity(la) ∧ In(la, State(ca)) ::: LA is a city in California(CA).\nUSCity(atlanta) ∧ City(atlanta) ::: Atlanta is a US city.\nCity(atlanta) ∧ In(atlanta, State(ga)) ::: Atlanta is in Georgia(CA).\nState(ca) ∧ In(ca, USState(us)) ::: CA is a state in the United States.\nRemove(boxing, SummerOlympics(y)) ∧ Remove(modernPentathlon, SummerOlympics(y)) ∧ Remove(weightlifting, SummerOlympics(y)) ::: Boxing, modern pentathlon, and weightlifting will be removed from The 2028 Summer Olympics.\nHold(atlanta, SummerOlympics(y)) ∧ City(atlanta) ∧ In(atlanta, State(ga)) ::: Atlanta in the United States hold the 1996 Summer Olympics.\nCon"
    ]
  },
  {
    "id": "FOLIO_train_492",
    "context": "If a city hold a Summer Olympics, and the city is a US city, then the Summer Olympics will be in the US. If a city is in a state which is in US, the city is a US city. If a city in a state, and a Summer Olympics is in this city, then the Summer Olympics is in this state. The 2028 Summer Olympics is scheduled to take place in Los Angeles(LA). LA is a city in California(CA). Atlanta is a US city. Atlanta is in Georgia(CA). CA is a state in the United States. Boxing, modern pentathlon, and weightlifting will be removed from The 2028 Summer Olympics. Atlanta in the United States hold the 1996 Summer Olympics.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Skateboarding will appear at The 2028 Summer Olympics.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCity(x) ::: x is a city.\nUSCity(x) ::: x is a US city.\nState(x) ::: x is a state.\nUSState(x) ::: x is a US state.\nSummerOlympics(x) ::: x is a Summer Olympics.\nHold(x, y) ::: x hold y.\nIn(x, y) ::: x is in y.\nRemove(x, y) ::: x will be removed from y.\nAppear(x, y) ::: x will appear at y.\nPremises:\n∀x (City(x) → ¬USCity(x)) ::: If a city hold a Summer Olympics, and the city is a US city, then the Summer Olympics will be in the US.\n∀x (City(x) ∧ In(x, y) ∧ State(y) ∧ USState(y)) → USCity(x) ::: If a city is in a state which is in US, the city is a US city.\n∀x (City(x) ∧ In(x, y) ∧ SummerOlympics(z) ∧ Hold(z, x)) → Hold(z, y) ::: If a city in a state, and a Summer Olympics is in this city, then the Summer Olympics is in this state.\nCity(losAngeles) ∧ USCity(losAngeles) ∧ Hold(summerOlympics2028, losAngeles) ::: The 2028 Summer Olympics is scheduled to take place in Los Angeles(LA).\nCity(losAngeles) ∧ In(losAngeles, california) ::: LA is a city in California(CA).\nCity(atlanta) ∧ USCity(atlanta) ∧ In(atlanta, georgia) ::: Atlanta is a US city. Atlanta is in Georgia(CA).\nState(california) ∧ USState(california) ::: CA is a state in the United States.\nRemove(boxing, summerOlympics2028) ∧ Remove(modernPentathlon, summerOlympics2028) ∧ Remove(weightlifting, summerOlympics2028) ::: Boxing, modern pentathlon, and weightlifting will be removed from The 2028 Summer Olympics.\nCity(atlanta) ∧ Hold(summerOlympics1996, atlanta) ::: Atlanta in the United States hold the 1996 Summer Olympics."
    ]
  },
  {
    "id": "FOLIO_train_493",
    "context": "The taiga vole is a large vole found in northwestern North America. Cats like playing with all voles. The taiga vole lives in the boreal taiga zone. The boreal taiga zone in North America is a cold place to live in. Taiga vole is typically much larger than most other North American voles, especially those from the genus Microtus.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Cats like playing with taiga vole.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCat(x) ::: x is a cat.\nVole(x) ::: x is a vole.\nTaigaVole(x) ::: x is a taiga vole.\nPlay(x, y) ::: x likes playing with y.\nLive(x, y) ::: x lives in y.\nCold(x) ::: x is a cold place to live in.\nLarge(x) ::: x is typically much larger than most other North American voles, especially those from the genus Microtus.\nPremises:\nTaigaVole(taigaVole) ::: The taiga vole is a large vole found in northwestern North America.\n∀x (Cat(x) → Play(x, vole)) ::: Cats like playing with all voles.\nLive(taigaVole, borealTaigaZone) ::: The taiga vole lives in the boreal taiga zone.\nCold(borealTaigaZone) ::: The boreal taiga zone in North America is a cold place to live in.\nLarge(taigaVole) ::: Taiga vole is typically much larger than most other North American voles, especially those from the genus Microtus.\nConclusion:\nPlay(cat, taigaVole) ::: Cats like playing with taiga vole.\n------\nProblem:\nThe taiga vole is a large vole found in northwestern North America. Cats like playing with all voles. The taiga vole lives in the boreal taiga zone. The boreal taiga zone in North America is a cold place to live in. Taiga vole is typically much larger than most other North American voles, especially those from the genus Microtus.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Cats like playing with taiga vole.\n###\nPredicates:\nCat(x) ::: x is a cat.\nVole(x) ::: x is a vole.\nTaigaVole(x) ::: x is a taiga vole.\nPlay(x, y) ::: x likes playing with y.\nLive(x, y) ::: x lives in y.\nCold(x) ::: x is a cold place to live in.\nLarge(x) ::: x is typically much larger than most other North American voles, especially those from the genus Microtus.\nPremises:\nTaigaVole(taigaVole) :"
    ]
  },
  {
    "id": "FOLIO_train_494",
    "context": "The taiga vole is a large vole found in northwestern North America. Cats like playing with all voles. The taiga vole lives in the boreal taiga zone. The boreal taiga zone in North America is a cold place to live in. Taiga vole is typically much larger than most other North American voles, especially those from the genus Microtus.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Taiga vole's living place is not cold.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCat(x) ::: x is a cat.\nVole(x) ::: x is a vole.\nTaigaVole(x) ::: x is a taiga vole.\nPlay(x, y) ::: x plays with y.\nLive(x, y) ::: x lives in y.\nCold(x) ::: x is cold.\nPremises:\nTaigaVole(taigaVole) ::: The taiga vole is a large vole found in northwestern North America.\n∀x (Cat(x) → ∀y (Vole(y) → Play(x, y))) ::: Cats like playing with all voles.\nLive(taigaVole, borealTaigaZone) ::: The taiga vole lives in the boreal taiga zone.\nCold(borealTaigaZone) ::: The boreal taiga zone in North America is a cold place to live in.\nTaigaVole(taigaVole) ∧ Vole(otherVole) ∧ ¬(TaigaVole(otherVole)) ::: Taiga vole is typically much larger than most other North American voles, especially those from the genus Microtus.\nConclusion:\n¬Cold(livePlaceOfTaigaVole) ::: Taiga vole's living place is not cold.\n------\nProblem:\nThe taiga vole is a large vole found in northwestern North America. Cats like playing with all voles. The taiga vole lives in the boreal taiga zone. The boreal taiga zone in North America is a cold place to live in. Taiga vole is typically much larger than most other North American voles, especially those from the genus Microtus.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Taiga vole is typically much larger than most other North American voles, especially those from the genus Microtus.\n###\nPredicates:\nCat(x) ::: x is a cat.\nVole(x) ::: x is a vole.\nTaigaVole(x) ::: x is a taiga vole.\nPlay(x, y) ::: x plays with y.\nLive(x, y) ::: x lives in y.\nCold(x) ::: x is cold.\nPremises:\nTaigaVole(taigaVole) ::: The taiga vole is a large vole found in northwestern North America"
    ]
  },
  {
    "id": "FOLIO_train_495",
    "context": "Either in women or in men. No men have breast cancer. Either breast cancer or non-breast cancer. No type of cancer is without a tumor. All non-breast cancers are a type of cancer. If adenocarcinoma is a type of cancer or without a tumor, then adenocarcinoma is in women or without a tumor.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Adenocarcinoma is a breast cancer.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nWoman(x) ::: x is a woman.\nMan(x) ::: x is a man.\nBreastCancer(x) ::: x is a breast cancer.\nCancer(x) ::: x is a type of cancer.\nTumor(x) ::: x is with a tumor.\nAdenocarcinoma(x) ::: x is adenocarcinoma.\nPremises:\n(Woman(x) ∨ Man(x)) ∧ ¬BreastCancer(x) ::: No men have breast cancer.\n(BreastCancer(x) ∨ NonBreastCancer(x)) ∧ ¬Cancer(x) ::: Either breast cancer or non-breast cancer.\n¬Cancer(x) ∧ Tumor(x) ::: No type of cancer is without a tumor.\nCancer(x) ∧ NonBreastCancer(x) ::: All non-breast cancers are a type of cancer.\n(Adenocarcinoma(x) ∨ Tumor(x)) → (Woman(x) ∨ Tumor(x)) ::: If adenocarcinoma is a type of cancer or without a tumor, then adenocarcinoma is in women or without a tumor.\nConclusion:\nAdenocarcinoma(x) ∧ BreastCancer(x) ::: Adenocarcinoma is a breast cancer.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about"
    ]
  },
  {
    "id": "FOLIO_train_496",
    "context": "Either in women or in men. No men have breast cancer. Either breast cancer or non-breast cancer. No type of cancer is without a tumor. All non-breast cancers are a type of cancer. If adenocarcinoma is a type of cancer or without a tumor, then adenocarcinoma is in women or without a tumor.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Adenocarcinoma is in women.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nWoman(x) ::: x is a woman.\nMan(x) ::: x is a man.\nBreastCancer(x) ::: x has breast cancer.\nCancer(x) ::: x is a type of cancer.\nTumor(x) ::: x has a tumor.\nAdenocarcinoma(x) ::: x is adenocarcinoma.\nPremises:\n(Woman(x) ∨ Man(x)) ∧ ¬BreastCancer(x) ::: Either in women or in men. No men have breast cancer.\n(BreastCancer(x) ∨ Cancer(x)) ∧ ¬Cancer(x) ::: Either breast cancer or non-breast cancer.\n¬Cancer(x) → ¬Tumor(x) ::: No type of cancer is without a tumor.\nCancer(x) ∧ ¬BreastCancer(x) ::: All non-breast cancers are a type of cancer.\n(Adenocarcinoma(x) ∨ Cancer(x)) ∧ ¬Tumor(x) → (Woman(x) ∨ ¬Tumor(x)) ::: If adenocarcinoma is a type of cancer or without a tumor, then adenocarcinoma is in women or without a tumor.\nConclusion:\nWoman(adenocarcinoma) ::: Adenocarcinoma is in women.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then"
    ]
  },
  {
    "id": "FOLIO_train_497",
    "context": "Either in women or in men. No men have breast cancer. Either breast cancer or non-breast cancer. No type of cancer is without a tumor. All non-breast cancers are a type of cancer. If adenocarcinoma is a type of cancer or without a tumor, then adenocarcinoma is in women or without a tumor.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If adenocarcinoma is in women or without a tumor, then adenocarcinoma is without a tumor and a non-breast cancer.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nWoman(x) ::: x is a woman.\nMan(x) ::: x is a man.\nBreastCancer(x) ::: x has breast cancer.\nCancer(x) ::: x is a type of cancer.\nTumor(x) ::: x has a tumor.\nAdenocarcinoma(x) ::: x is adenocarcinoma.\nPremises:\n(Woman(x) ∨ Man(x)) ∧ ¬BreastCancer(x) ::: Either in women or in men. No men have breast cancer.\n¬Cancer(x) ∨ BreastCancer(x) ::: Either breast cancer or non-breast cancer.\n¬Cancer(x) ∨ Tumor(x) ::: No type of cancer is without a tumor.\nCancer(x) ∧ NonBreastCancer(x) ::: All non-breast cancers are a type of cancer.\n(Adenocarcinoma(x) ∨ Tumor(x)) → (Adenocarcinoma(x) ∨ Woman(x)) ::: If adenocarcinoma is a type of cancer or without a tumor, then adenocarcinoma is in women or without a tumor.\nConclusion:\n(Adenocarcinoma(x) ∨ Tumor(x)) ∧ (Adenocarcinoma(x) ∨ Woman(x)) ::: If adenocarcinoma is in women or without a tumor, then adenocarcinoma is without a tumor and a non-breast cancer.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug,"
    ]
  },
  {
    "id": "FOLIO_train_498",
    "context": "Some monitors equipped in the lab are produced by the company named AOC. All monitors equipped in the lab are cheaper than their original prices. If the monitor is cheaper than its original prices, then its resolution is 1080p. If a monitor is with a resolution of 1080p, then it does not support the type-c port. LG34 is equipped in the lab.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? LG34 machine is produced by AOC.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAOC(x) ::: x is produced by AOC.\nCheaper(x) ::: x is cheaper than its original prices.\nResolution(x, y) ::: x has a resolution of y.\nSupport(x, y) ::: x supports y.\nPort(x) ::: x is a port.\nTypeC(x) ::: x is a type-c port.\nPremises:\n∃x (AOC(x) ∧ Cheaper(x)) ::: Some monitors equipped in the lab are produced by the company named AOC.\n∀x (Cheaper(x) → Resolution(x, 1080p)) ::: If the monitor is cheaper than its original prices, then its resolution is 1080p.\n∀x (Resolution(x, 1080p) → ¬Support(x, TypeC)) ::: If a monitor is with a resolution of 1080p, then it does not support the type-c port.\nLG34(x) ::: LG34 is equipped in the lab.\nConclusion:\nAOC(lg34) ::: LG34 machine is produced by AOC.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.\n###\nPredicates:\nDependent(x) ::: x is a person dependent on caffeine.\nDrinks(x) ::: x regularly drinks coffee.\nJokes"
    ]
  },
  {
    "id": "FOLIO_train_499",
    "context": "Some monitors equipped in the lab are produced by the company named AOC. All monitors equipped in the lab are cheaper than their original prices. If the monitor is cheaper than its original prices, then its resolution is 1080p. If a monitor is with a resolution of 1080p, then it does not support the type-c port. LG34 is equipped in the lab.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? LG34 machine does not support the type-c port.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEquipped(x, y) ::: x is equipped in y.\nProduced(x, y) ::: x is produced by y.\nCheaper(x, y) ::: x is cheaper than y.\nResolution(x, y) ::: x has a resolution of y.\nSupport(x, y) ::: x supports y.\nPremises:\n∃x (Equipped(x, lab) ∧ Produced(x, aoc)) ::: Some monitors equipped in the lab are produced by the company named AOC.\n∀x (Equipped(x, lab) → Cheaper(x, originalPrice)) ::: All monitors equipped in the lab are cheaper than their original prices.\nCheaper(x, originalPrice) → Resolution(x, 1080p) ::: If the monitor is cheaper than its original prices, then its resolution is 1080p.\nResolution(x, 1080p) → ¬Support(x, typeCPort) ::: If a monitor is with a resolution of 1080p, then it does not support the type-c port.\nEquipped(lg34, lab) ::: LG34 is equipped in the lab.\nConclusion:\n¬Support(lg34, typeCPort) ::: LG34 machine does not support the type-c port.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.\n###"
    ]
  },
  {
    "id": "FOLIO_train_500",
    "context": "Some monitors equipped in the lab are produced by the company named AOC. All monitors equipped in the lab are cheaper than their original prices. If the monitor is cheaper than its original prices, then its resolution is 1080p. If a monitor is with a resolution of 1080p, then it does not support the type-c port. LG34 is equipped in the lab.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? LG34 is not with a resolution of 1080p.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEquipped(x) ::: x is equipped in the lab.\nProducedBy(x, y) ::: x is produced by y.\nCheaper(x) ::: x is cheaper than its original prices.\nResolution(x, y) ::: x is with a resolution of y.\nSupport(x, y) ::: x supports y.\nPort(x) ::: x is a port.\nTypeC(x) ::: x is a type-c port.\nPremises:\n∃x (Equipped(x) ∧ ProducedBy(x, aoc)) ::: Some monitors equipped in the lab are produced by the company named AOC.\n∀x (Equipped(x) → Cheaper(x)) ::: All monitors equipped in the lab are cheaper than their original prices.\nCheaper(x) → Resolution(x, 1080p) ::: If the monitor is cheaper than its original prices, then its resolution is 1080p.\nResolution(x, 1080p) → ¬Support(x, typeC) ::: If a monitor is with a resolution of 1080p, then it does not support the type-c port.\nEquipped(lg34) ::: LG34 is equipped in the lab.\nConclusion:\n¬Resolution(lg34, 1080p) ::: LG34 is not with a resolution of 1080p.\n------"
    ]
  },
  {
    "id": "FOLIO_train_501",
    "context": "All fruits sold in Boston are shipped from Columbia. Some fruits sold in New Haven are shipped from Mexico. No fruits shipped from Columbia are fruits sold in New York. Avocadoe are a kind of fruit sold in New York or New York. Avocadoe are either shipped from Columbia and sold in New Haven, or neither shipped from Columbia nor sold in New Haven.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Avocados are a kind of fruit sold in New York.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFruit(x) ::: x is a fruit.\nShip(x, y) ::: x is shipped from y.\nSell(x, y) ::: x is sold in y.\nKind(x, y) ::: x is a kind of y.\nPremises:\n∀x (Sell(x, boston) → Ship(x, columbia)) ::: All fruits sold in Boston are shipped from Columbia.\n∃x (Sell(x, newHaven) ∧ Ship(x, mexico)) ::: Some fruits sold in New Haven are shipped from Mexico.\n¬∃x (Ship(x, columbia) ∧ Sell(x, newYork)) ::: No fruits shipped from Columbia are fruits sold in New York.\nKind(avocadoe, fruit) ∧ Sell(avocadoe, newYork) ∨ Sell(avocadoe, newYork) ::: Avocadoe are a kind of fruit sold in New York or New York.\nShip(avocadoe, columbia) ∨ Sell(avocadoe, newHaven) ::: Avocadoe are either shipped from Columbia and sold in New Haven, or neither shipped from Columbia nor sold in New Haven.\nConclusion:\nKind(avocadoe, fruit) ∧ Sell(avocadoe, newYork) ::: Avocados are a kind of fruit sold in New York"
    ]
  },
  {
    "id": "FOLIO_train_502",
    "context": "All fruits sold in Boston are shipped from Columbia. Some fruits sold in New Haven are shipped from Mexico. No fruits shipped from Columbia are fruits sold in New York. Avocadoe are a kind of fruit sold in New York or New York. Avocadoe are either shipped from Columbia and sold in New Haven, or neither shipped from Columbia nor sold in New Haven.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Avocados are either sold in New York or sold in New Haven.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFruit(x) ::: x is a fruit.\nShip(x, y) ::: x is shipped from y.\nSell(x, y) ::: x is sold in y.\nKind(x, y) ::: x is a kind of y.\nAvocado(x) ::: x is an avocado.\nPremises:\n∀x (Fruit(x) ∧ Sell(x, boston) → Ship(x, columbia)) ::: All fruits sold in Boston are shipped from Columbia.\n∃x (Fruit(x) ∧ Sell(x, newHaven) ∧ Ship(x, mexico)) ::: Some fruits sold in New Haven are shipped from Mexico.\n¬∃x (Fruit(x) ∧ Ship(x, columbia) ∧ Sell(x, newYork)) ::: No fruits shipped from Columbia are fruits sold in New York.\nKind(avocado, fruit) ∧ Sell(avocado, newYork) ∨ Sell(avocado, newYork) ::: Avocadoe are a kind of fruit sold in New York or New York.\n(Ship(avocado, columbia) ∧ Sell(avocado, newHaven)) ⊕ ¬(Ship(avocado, columbia) ∨ Sell(avocado, newHaven)) ::: Avocadoe are either shipped from Columbia"
    ]
  },
  {
    "id": "FOLIO_train_503",
    "context": "All fruits sold in Boston are shipped from Columbia. Some fruits sold in New Haven are shipped from Mexico. No fruits shipped from Columbia are fruits sold in New York. Avocadoe are a kind of fruit sold in New York or New York. Avocadoe are either shipped from Columbia and sold in New Haven, or neither shipped from Columbia nor sold in New Haven.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Avocados are either sold in New Haven or sold in Boston",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFruit(x) ::: x is a fruit.\nShip(x, y) ::: x is shipped from y.\nSell(x, y) ::: x is sold in y.\nKind(x, y) ::: x is a kind of y.\nAvocado(x) ::: x is an avocado.\nPremises:\n∀x (Sell(x, boston) → Ship(x, columbia)) ::: All fruits sold in Boston are shipped from Columbia.\n∃x (Sell(x, newHaven) ∧ Ship(x, mexico)) ::: Some fruits sold in New Haven are shipped from Mexico.\n¬∃x (Ship(x, columbia) ∧ Sell(x, newYork)) ::: No fruits shipped from Columbia are fruits sold in New York.\nAvocado(x) ∨ Sell(x, newYork) ::: Avocadoe are a kind of fruit sold in New York or New York.\n(Ship(x, columbia) ∧ Sell(x, newHaven)) ⊕ ¬(Ship(x, columbia) ∨ Sell(x, newHaven)) ::: Avocadoe are either shipped from Columbia and sold in New Haven, or neither shipped from Columbia nor sold in New Haven.\nConclusion:\nSell(x, newHaven) ∨ Sell(x, boston) :::"
    ]
  },
  {
    "id": "FOLIO_train_504",
    "context": "All fruits sold in Boston are shipped from Columbia. Some fruits sold in New Haven are shipped from Mexico. No fruits shipped from Columbia are fruits sold in New York. Avocadoe are a kind of fruit sold in New York or New York. Avocadoe are either shipped from Columbia and sold in New Haven, or neither shipped from Columbia nor sold in New Haven.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If avocados are not sold in New York and not shipped from Columbia, then they are neither sold in New York nor New Haven.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFruit(x) ::: x is a fruit.\nShip(x, y) ::: x is shipped from y.\nSell(x, y) ::: x is sold in y.\nAvocado(x) ::: x is an avocado.\nPremises:\n∀x (Fruit(x) ∧ Sell(x, boston) → Ship(x, columbia)) ::: All fruits sold in Boston are shipped from Columbia.\n∃x (Fruit(x) ∧ Sell(x, newHaven) ∧ Ship(x, mexico)) ::: Some fruits sold in New Haven are shipped from Mexico.\n¬∃x (Fruit(x) ∧ Ship(x, columbia) ∧ Sell(x, newYork)) ::: No fruits shipped from Columbia are fruits sold in New York.\nAvocado(x) ∨ Sell(x, newYork) ::: Avocadoe are a kind of fruit sold in New York or New York.\nAvocado(x) ∧ Sell(x, newHaven) ⊕ ¬(Avocado(x) ∨ Sell(x, newHaven)) ::: Avocadoe are either shipped from Columbia and sold in New Haven, or neither shipped from Columbia nor sold in New Haven.\nConclusion:\n¬Avocado(x) ∨ ¬Sell(x, newYork) ∨"
    ]
  },
  {
    "id": "FOLIO_train_505",
    "context": "Some monitors equipped in the library are produced by AOC. All monitors equipped in the library are cheaper than 800 dollars. All monitors cheaper than 800 dollars are with a resolution of 1080p. If a monitor has a resolution of 1080p, then it does not support the type-c port. A-2017 supports the type-c port.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A-2017 is produced by AOC.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAOC(x) ::: x is produced by AOC.\nCheap(x) ::: x is cheaper than 800 dollars.\nResolution(x, y) ::: x has a resolution of y.\nSupport(x, y) ::: x supports y.\nPort(x) ::: x is a type-c port.\nPremises:\n∃x (AOC(x) ∧ Monitor(x) ∧ Library(x)) ::: Some monitors equipped in the library are produced by AOC.\n∀x (Monitor(x) ∧ Library(x) → Cheap(x)) ::: All monitors equipped in the library are cheaper than 800 dollars.\n∀x (Cheap(x) → Resolution(x, 1080p)) ::: All monitors cheaper than 800 dollars are with a resolution of 1080p.\n¬(Resolution(x, 1080p) → Support(x, Port(x))) ::: If a monitor has a resolution of 1080p, then it does not support the type-c port.\nSupport(a2017, Port(x)) ::: A-2017 supports the type-c port.\nConclusion:\n¬AOC(a2017) ::: A-2017 is produced by AOC.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink"
    ]
  },
  {
    "id": "FOLIO_train_506",
    "context": "Some monitors equipped in the library are produced by AOC. All monitors equipped in the library are cheaper than 800 dollars. All monitors cheaper than 800 dollars are with a resolution of 1080p. If a monitor has a resolution of 1080p, then it does not support the type-c port. A-2017 supports the type-c port.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A-2017 is produced by AOC and equipped in the library.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAOC(x) ::: x is produced by AOC.\nCheap(x) ::: x is cheaper than 800 dollars.\nResolution(x) ::: x has a resolution of 1080p.\nSupport(x) ::: x supports the type-c port.\nPremises:\n∃x (AOC(x) ∧ Equipped(x)) ::: Some monitors equipped in the library are produced by AOC.\n∀x (Equipped(x) → Cheap(x)) ::: All monitors equipped in the library are cheaper than 800 dollars.\n∀x (Cheap(x) → Resolution(x)) ::: All monitors cheaper than 800 dollars are with a resolution of 1080p.\n¬(Resolution(x) → Support(x)) ::: If a monitor has a resolution of 1080p, then it does not support the type-c port.\nSupport(a2017) ::: A-2017 supports the type-c port.\nConclusion:\nAOC(a2017) ∧ Equipped(a2017) ::: A-2017 is produced by AOC and equipped in the library.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caff"
    ]
  },
  {
    "id": "FOLIO_train_507",
    "context": "Some monitors equipped in the library are produced by AOC. All monitors equipped in the library are cheaper than 800 dollars. All monitors cheaper than 800 dollars are with a resolution of 1080p. If a monitor has a resolution of 1080p, then it does not support the type-c port. A-2017 supports the type-c port.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If A-2017 is not with a resolution of 1080p or produced by AOC, then it is not equipped in the library.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEquipped(x) ::: x is equipped in the library.\nProduced(x, y) ::: x is produced by y.\nCheaper(x, y) ::: x is cheaper than y.\nResolution(x, y) ::: x has a resolution of y.\nSupport(x, y) ::: x supports y.\nPremises:\n∃x (Equipped(x) ∧ Produced(x, aoc)) ::: Some monitors equipped in the library are produced by AOC.\n∀x (Equipped(x) → Cheaper(x, 800)) ::: All monitors equipped in the library are cheaper than 800 dollars.\n∀x (Cheaper(x, 800) → Resolution(x, 1080p)) ::: All monitors cheaper than 800 dollars are with a resolution of 1080p.\n¬(Resolution(a2017, 1080p) ∧ Support(a2017, typeCPort)) ::: If a monitor has a resolution of 1080p, then it does not support the type-c port.\nSupport(a2017, typeCPort) ::: A-2017 supports the type-c port.\nConclusion:\n¬(Equipped(a2017) ∧ (¬Resolution(a2017, 1080p) ∨ Produced(a2"
    ]
  },
  {
    "id": "FOLIO_train_508",
    "context": "Sūduva Marijampolė holds the Lithuanian Supercup. Sūduva Marijampolė is a soccer team.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Some soccer team holds the Lithuanian Supercup.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nHold(x, y) ::: x holds y.\nSoccerTeam(x) ::: x is a soccer team.\nPremises:\nHold(suduvaMarijampole, lithuanianSupercup) ::: Sūduva Marijampolė holds the Lithuanian Supercup.\nSoccerTeam(suduvaMarijampole) ::: Sūduva Marijampolė is a soccer team.\nConclusion:\n∃x (SoccerTeam(x) ∧ Hold(x, lithuanianSupercup)) ::: Some soccer team holds the Lithuanian Supercup.\n------\nProblem:\nThe 2018 FIFA World Cup was the 21st FIFA World Cup. The 2018 FIFA World Cup was an international football tournament. The 2018 FIFA World Cup was contested by 32 men's national teams. The 2018 FIFA World Cup was held in Russia. The 2018 FIFA World Cup was the first World Cup to use the video assistant referee system. The 2018 FIFA World Cup was the first World Cup to be held in Eastern Europe. The 2018 FIFA World Cup was the first World Cup to use only European-based referees. The 2018 FIFA World Cup was the first World Cup to be held in two European countries. The 2018 FIFA World Cup was the first World Cup to be held in two countries that were formerly part of the Soviet Union. The 2"
    ]
  },
  {
    "id": "FOLIO_train_509",
    "context": "Ainderby Quernhow is a village and civil parish in the Hambleton District. Hambleton District is in North Yorkshire. North Yorkshire is in England.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There is a village in England.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nVillage(x) ::: x is a village.\nCivilParish(x) ::: x is a civil parish.\nDistrict(x) ::: x is a district.\nCounty(x) ::: x is a county.\nCountry(x) ::: x is a country.\nPremises:\nVillage(ainderbyQuernhow) ∧ CivilParish(ainderbyQuernhow) ::: Ainderby Quernhow is a village and civil parish.\nDistrict(hambletonDistrict) ∧ County(northYorkshire) ∧ Country(england) ::: Hambleton District is in North Yorkshire. North Yorkshire is in England.\nConclusion:\nVillage(ainderbyQuernhow) ∧ CivilParish(ainderbyQuernhow) ∧ District(hambletonDistrict) ∧ County(northYorkshire) ∧ Country(england) ::: There is a village in England.\n------\nProblem:\nThe first-order logic formular is:\n∀x (P(x) → Q(x))\nThe question is:\nIs the following statement true, false, or uncertain? ¬P(a) ∧ ¬Q(a)\n###\nPredicates:\nP(x) ::: x is P.\nQ(x) ::: x is Q.\nPremises:\n∀x (P(x) → Q(x)) ::: For all x, if x is P,"
    ]
  },
  {
    "id": "FOLIO_train_510",
    "context": "Ainderby Quernhow is a village and civil parish in the Hambleton District. Hambleton District is in North Yorkshire. North Yorkshire is in England.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There is no civil parish in England.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nVillage(x) ::: x is a village.\nCivilParish(x) ::: x is a civil parish.\nDistrict(x) ::: x is a district.\nCounty(x) ::: x is a county.\nCountry(x) ::: x is a country.\nPremises:\nVillage(ainderbyQuernhow) ∧ CivilParish(ainderbyQuernhow) ∧ District(hambletonDistrict) ∧ County(northYorkshire) ∧ Country(england) ::: Ainderby Quernhow is a village and civil parish in the Hambleton District. Hambleton District is in North Yorkshire. North Yorkshire is in England.\nConclusion:\n¬∃x (CivilParish(x) ∧ Country(england)) ::: There is no civil parish in England.\n------"
    ]
  },
  {
    "id": "FOLIO_train_511",
    "context": "Douglas Adams is an author who created the book collection called The Salmon of Doubt. The Salmon of Doubt is about life experiences and technology. All authors are writers. Writers create innovative ideas. Some books that contain innovative ideas are about technology.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Douglas Adams is a writer.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAuthor(x) ::: x is an author.\nWriter(x) ::: x is a writer.\nCreate(x, y) ::: x creates y.\nInnovative(x) ::: x is innovative.\nIdea(x) ::: x is an idea.\nBook(x) ::: x is a book.\nAbout(x, y) ::: x is about y.\nPremises:\nAuthor(douglas) ∧ Create(douglas, salmonOfDoubt) ∧ About(salmonOfDoubt, lifeExperiences) ∧ About(salmonOfDoubt, technology) ::: Douglas Adams is an author who created the book collection called The Salmon of Doubt. The Salmon of Doubt is about life experiences and technology.\n∀x (Author(x) → Writer(x)) ::: All"
    ]
  },
  {
    "id": "FOLIO_train_512",
    "context": "Douglas Adams is an author who created the book collection called The Salmon of Doubt. The Salmon of Doubt is about life experiences and technology. All authors are writers. Writers create innovative ideas. Some books that contain innovative ideas are about technology.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Douglas Adams created innovative ideas.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAuthor(x) ::: x is an author.\nWriter(x) ::: x is a writer.\nCreate(x, y) ::: x creates y.\nInnovative(x) ::: x is innovative.\nIdea(x) ::: x is an idea.\nBook(x) ::: x is a book.\nAbout(x, y) ::: x is about y.\nPremises:\nAuthor(douglas) ∧ Create(douglas, salmonOfDoubt) ∧ About(salmonOfDoubt, lifeExperiences) ∧ About(salmonOfDoubt, technology) ::: Douglas Adams is an author who created the book collection called The Salmon of Doubt. The Salmon of Doubt is about life experiences and technology.\n∀x (Author(x) → Writer(x)) ::: All"
    ]
  },
  {
    "id": "FOLIO_train_513",
    "context": "Douglas Adams is an author who created the book collection called The Salmon of Doubt. The Salmon of Doubt is about life experiences and technology. All authors are writers. Writers create innovative ideas. Some books that contain innovative ideas are about technology.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Salmon of Doubt has no innovative Ideas.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAuthor(x) ::: x is an author.\nWriter(x) ::: x is a writer.\nCreate(x, y) ::: x creates y.\nInnovative(x) ::: x is innovative.\nIdea(x) ::: x is an idea.\nBook(x) ::: x is a book.\nAbout(x, y) ::: x is about y.\nPremises:\nAuthor(douglas) ∧ Create(douglas, salmonOfDoubt) ∧ About(salmonOfDoubt, lifeExperiences) ∧ About(salmonOfDoubt, technology) ::: Douglas Adams is an author who created the book collection called The Salmon of Doubt. The Salmon of Doubt is about life experiences and technology.\n∀x (Author(x) → Writer(x)) ::: All"
    ]
  },
  {
    "id": "FOLIO_train_514",
    "context": "No disposable products can help slow down global warming. All eco-friendly brands can help slow down global warming. All sustainable fashion brands are eco-friendly brands. All fast fashion products are disposable products. If Reformation is not helping slow down global warming, then Reformation is an eco-friendly brand or a sustainable fashion brand.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Reformation is an eco-friendly brand.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDisposable(x) ::: x is a disposable product.\nEcoFriendly(x) ::: x is an eco-friendly brand.\nSustainableFashion(x) ::: x is a sustainable fashion brand.\nFastFashion(x) ::: x is a fast fashion product.\nHelp(x) ::: x can help slow down global warming.\nPremises:\n¬∃x (Disposable(x) ∧ Help(x)) ::: No disposable products can help slow down global warming.\n∀x (EcoFriendly(x) → Help(x)) ::: All eco-friendly brands can help slow down global warming.\n∀x (SustainableFashion(x) → EcoFriendly(x)) ::: All sustainable fashion brands are eco-friend"
    ]
  },
  {
    "id": "FOLIO_train_515",
    "context": "No disposable products can help slow down global warming. All eco-friendly brands can help slow down global warming. All sustainable fashion brands are eco-friendly brands. All fast fashion products are disposable products. If Reformation is not helping slow down global warming, then Reformation is an eco-friendly brand or a sustainable fashion brand.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Reformation produces fast fashion products.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDisposable(x) ::: x is a disposable product.\nEcoFriendly(x) ::: x is an eco-friendly brand.\nSustainableFashion(x) ::: x is a sustainable fashion brand.\nFastFashion(x) ::: x is a fast fashion product.\nHelp(x) ::: x can help slow down global warming.\nPremises:\n¬∃x (Disposable(x) ∧ Help(x)) ::: No disposable products can help slow down global warming.\n∀x (EcoFriendly(x) → Help(x)) ::: All eco-friendly brands can help slow down global warming.\n∀x (SustainableFashion(x) → EcoFriendly(x)) ::: All sustainable fashion brands are eco-friend"
    ]
  },
  {
    "id": "FOLIO_train_516",
    "context": "No disposable products can help slow down global warming. All eco-friendly brands can help slow down global warming. All sustainable fashion brands are eco-friendly brands. All fast fashion products are disposable products. If Reformation is not helping slow down global warming, then Reformation is an eco-friendly brand or a sustainable fashion brand.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Reformation does not produce fast fashion products.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDisposable(x) ::: x is a disposable product.\nEcoFriendly(x) ::: x is an eco-friendly brand.\nSustainableFashion(x) ::: x is a sustainable fashion brand.\nFastFashion(x) ::: x is a fast fashion product.\nHelp(x) ::: x can help slow down global warming.\nPremises:\n¬∃x (Disposable(x) ∧ Help(x)) ::: No disposable products can help slow down global warming.\n∀x (EcoFriendly(x) → Help(x)) ::: All eco-friendly brands can help slow down global warming.\n∀x (SustainableFashion(x) → EcoFriendly(x)) ::: All sustainable fashion brands are eco-friend"
    ]
  },
  {
    "id": "FOLIO_train_517",
    "context": "No disposable products can help slow down global warming. All eco-friendly brands can help slow down global warming. All sustainable fashion brands are eco-friendly brands. All fast fashion products are disposable products. If Reformation is not helping slow down global warming, then Reformation is an eco-friendly brand or a sustainable fashion brand.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Reformation does not produce fast fashion products or does not produce disposable products.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDisposable(x) ::: x is a disposable product.\nEcoFriendly(x) ::: x is an eco-friendly brand.\nSustainableFashion(x) ::: x is a sustainable fashion brand.\nFastFashion(x) ::: x is a fast fashion product.\nHelp(x) ::: x can help slow down global warming.\nPremises:\n¬∃x (Disposable(x) ∧ Help(x)) ::: No disposable products can help slow down global warming.\n∀x (EcoFriendly(x) → Help(x)) ::: All eco-friendly brands can help slow down global warming.\n∀x (SustainableFashion(x) → EcoFriendly(x)) ::: All sustainable fashion brands are eco-friend"
    ]
  },
  {
    "id": "FOLIO_train_518",
    "context": "No disposable products can help slow down global warming. All eco-friendly brands can help slow down global warming. All sustainable fashion brands are eco-friendly brands. All fast fashion products are disposable products. If Reformation is not helping slow down global warming, then Reformation is an eco-friendly brand or a sustainable fashion brand.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Reformation produces disposable products, then Reformation produces fast fashion products.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDisposable(x) ::: x is a disposable product.\nEcoFriendly(x) ::: x is an eco-friendly brand.\nSustainableFashion(x) ::: x is a sustainable fashion brand.\nFastFashion(x) ::: x is a fast fashion product.\nHelp(x) ::: x can help slow down global warming.\nPremises:\n¬∃x (Disposable(x) ∧ Help(x)) ::: No disposable products can help slow down global warming.\n∀x (EcoFriendly(x) → Help(x)) ::: All eco-friendly brands can help slow down global warming.\n∀x (SustainableFashion(x) → EcoFriendly(x)) ::: All sustainable fashion brands are eco-friend"
    ]
  },
  {
    "id": "FOLIO_train_519",
    "context": "No disposable products can help slow down global warming. All eco-friendly brands can help slow down global warming. All sustainable fashion brands are eco-friendly brands. All fast fashion products are disposable products. If Reformation is not helping slow down global warming, then Reformation is an eco-friendly brand or a sustainable fashion brand.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Reformation produces fast fashion products or helps slow down global warming, then Reformation produces fast fashion products.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDisposable(x) ::: x is a disposable product.\nEcoFriendly(x) ::: x is an eco-friendly brand.\nSustainableFashion(x) ::: x is a sustainable fashion brand.\nFastFashion(x) ::: x is a fast fashion product.\nHelp(x) ::: x can help slow down global warming.\nPremises:\n¬∃x (Disposable(x) ∧ Help(x)) ::: No disposable products can help slow down global warming.\n∀x (EcoFriendly(x) → Help(x)) ::: All eco-friendly brands can help slow down global warming.\n∀x (SustainableFashion(x) → EcoFriendly(x)) ::: All sustainable fashion brands are eco-friend"
    ]
  },
  {
    "id": "FOLIO_train_520",
    "context": "Roy Richardson was a cricketer for Sint Maartener, a consituent country. Roy Richardson was a right handed batsman and medium pace bowler. Roy Richardson was old when he debuted in cricket. Sherville Huggins dismissed Roy Richardson.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Sherville Huggins has never dismissed anyone playing for a constituent country.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nConstituentCountry(x) ::: x is a constituent country.\nRightHandedBatsman(x) ::: x is a right handed batsman.\nMediumPaceBowler(x) ::: x is a medium pace bowler.\nOld(x) ::: x is old.\nDebut(x, y) ::: x debuted in y.\nDismiss(x, y) ::: x dismissed y.\nPremises:\nConstituentCountry(sintMaartener) ∧ RightHandedBatsman(roy) ∧ MediumPaceBowler(roy) ∧ Old(roy) ∧ Debut(roy, cricket) ::: Roy Richardson was a cricketer for Sint Maartener, a consituent country. Roy Richardson was a right handed batsman and medium pace bowler. Roy Richardson was old when he debuted in cricket.\nDismiss(sherville, roy) ::: Sherville Huggins dismissed Roy Richardson.\nConclusion:\n¬∃x (ConstituentCountry(x) ∧ Dismiss(sherville, x)) ::: Sherville Huggins has never dismissed anyone playing for a constituent country.\n------"
    ]
  },
  {
    "id": "FOLIO_train_521",
    "context": "Roy Richardson was a cricketer for Sint Maartener, a consituent country. Roy Richardson was a right handed batsman and medium pace bowler. Roy Richardson was old when he debuted in cricket. Sherville Huggins dismissed Roy Richardson.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There are no right handed medium pace bowlers playing for Sint Maartener.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSintMaartener(x) ::: x is a cricketer for Sint Maartener.\nRightHanded(x) ::: x is a right handed batsman.\nMediumPace(x) ::: x is a medium pace bowler.\nOld(x) ::: x is old.\nDebut(x) ::: x debuted in cricket.\nDismiss(x, y) ::: x dismissed y.\nPremises:\nSintMaartener(roy) ∧ RightHanded(roy) ∧ MediumPace(roy) ∧ Old(roy) ∧ Debut(roy) ::: Roy Richardson was a cricketer for Sint Maartener, a consituent country. Roy Richardson was a right handed batsman and medium pace bowler. Roy Richardson was old when he debuted in cricket.\nDismiss(sherville, roy) ::: Sherville Huggins dismissed Roy Richardson.\nConclusion:\n¬∃x (SintMaartener(x) ∧ RightHanded(x) ∧ MediumPace(x)) ::: There are no right handed medium pace bowlers playing for Sint Maartener.\n------\nProblem:\nThe 1"
    ]
  },
  {
    "id": "FOLIO_train_522",
    "context": "To get a job at Google, you need to have a lot of work experience or a good education. All Yale graduates who submitted their resumes to Google got jobs there. John has a lot of work experience. John submitted his resume to Google and got a job there.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? John is a Yale graduate.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGraduate(x, y) ::: x is a graduate of y.\nSubmit(x, y) ::: x submitted y.\nGet(x, y) ::: x got y.\nJob(x) ::: x is a job.\nExperience(x) ::: x has a lot of work experience.\nEducation(x) ::: x has a good education.\nPremises:\n∀x (Experience(x) ∨ Education(x)) → Get(x, job(google)) ::: To get a job at Google, you need to have a lot of work experience or a good education.\n∀x (Graduate(x, yale) → Get(x, job(google))) ::: All Yale graduates who submitted their resumes to Google got jobs there.\nSubmit(john, resume(john)) ∧ Get(john, job(google)) ::: John submitted his resume to Google and got a job there.\nExperience(john) ::: John has a lot of work experience.\nConclusion:\nGraduate(john, yale) ::: John is a Yale graduate.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caff"
    ]
  },
  {
    "id": "FOLIO_train_523",
    "context": "No students are doctors. All people taking classes are students. All graduate students are people taking classes. All PhD students are graduate students. If Joe is a graduate student or a doctor (but not both), then Joe is not a graduate student and a student.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Joe is a person taking classes.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nStudent(x) ::: x is a student.\nDoctor(x) ::: x is a doctor.\nPeopleTakingClasses(x) ::: x is a people taking classes.\nGraduateStudent(x) ::: x is a graduate student.\nPhDStudent(x) ::: x is a PhD student.\nPremises:\n¬∃x (Student(x) ∧ Doctor(x)) ::: No students are doctors.\n∀x (PeopleTakingClasses(x) → Student(x)) ::: All people taking classes are students.\n∀x (GraduateStudent(x) → PeopleTakingClasses(x)) ::: All graduate students are people taking classes.\n∀x (PhDStudent(x) → GraduateStudent(x)) ::: All PhD students are graduate students.\n(GraduateStudent(joe) ∨ Doctor(joe)) ∧ ¬(GraduateStudent(joe) ∧ Student(joe)) ::: If Joe is a graduate student or a doctor (but not both), then Joe is not a graduate student and a student.\nConclusion:\nPeopleTakingClasses(joe) ::: Joe is a person taking classes."
    ]
  },
  {
    "id": "FOLIO_train_524",
    "context": "No students are doctors. All people taking classes are students. All graduate students are people taking classes. All PhD students are graduate students. If Joe is a graduate student or a doctor (but not both), then Joe is not a graduate student and a student.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Joe is a PhD student.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nStudent(x) ::: x is a student.\nDoctor(x) ::: x is a doctor.\nPeopleTakingClasses(x) ::: x is a people taking classes.\nGraduateStudent(x) ::: x is a graduate student.\nPhDStudent(x) ::: x is a PhD student.\nPremises:\n¬(Student(x) ∧ Doctor(x)) ::: No students are doctors.\n∀x (PeopleTakingClasses(x) → Student(x)) ::: All people taking classes are students.\n∀x (GraduateStudent(x) → PeopleTakingClasses(x)) ::: All graduate students are people taking classes.\n∀x (PhDStudent(x) → GraduateStudent(x)) ::: All PhD students are graduate students.\n(Doctor(joe) ∨ Student(joe)) ∧ ¬(Doctor(joe) ∧ Student(joe)) ::: If Joe is a graduate student or a doctor (but not both), then Joe is not a graduate student and a student.\nConclusion:\nPhDStudent(joe) ::: Joe is a PhD student.\n------\nProblem:\nAll people who"
    ]
  },
  {
    "id": "FOLIO_train_525",
    "context": "No students are doctors. All people taking classes are students. All graduate students are people taking classes. All PhD students are graduate students. If Joe is a graduate student or a doctor (but not both), then Joe is not a graduate student and a student.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Joe is not a PhD student.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nStudent(x) ::: x is a student.\nDoctor(x) ::: x is a doctor.\nPeopleTakingClasses(x) ::: x is a people taking classes.\nGraduateStudent(x) ::: x is a graduate student.\nPhDStudent(x) ::: x is a PhD student.\nPremises:\n¬(Student(x) ∧ Doctor(x)) ::: No students are doctors.\n∀x (PeopleTakingClasses(x) → Student(x)) ::: All people taking classes are students.\n∀x (GraduateStudent(x) → PeopleTakingClasses(x)) ::: All graduate students are people taking classes.\n∀x (PhDStudent(x) → GraduateStudent(x)) ::: All PhD students are graduate students.\n(GraduateStudent(joe) ∨ Doctor(joe)) ∧ ¬(GraduateStudent(joe) ∧ Student(joe)) ::: If Joe is a graduate student or a doctor (but not both), then Joe is not a graduate student and a student.\nConclusion:\n¬PhDStudent(joe) ::: Joe is not a PhD student.\n------"
    ]
  },
  {
    "id": "FOLIO_train_526",
    "context": "Hugh Vanstone is one of the world's leading lighting designers. Hugh Vanstone is from the UK. Hugh Vanstone has lit more than 160 productions. Hugh Vanstone attended school where he is from.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Hugh Vanstone is one of the world's leading ligting designers and from the uk",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLightingDesigner(x) ::: x is one of the world's leading lighting designers.\nUK(x) ::: x is from the UK.\nLit(x, y) ::: x has lit y productions.\nAttend(x, y) ::: x attended school where x is from.\nPremises:\nLightingDesigner(hugh) ∧ UK(hugh) ∧ Lit(hugh, 160) ∧ Attend(hugh, hugh) ::: Hugh Vanstone is one of the world's leading lighting designers. Hugh Vanstone is from the UK. Hugh Vanstone has lit more than 160 productions. Hugh Vanstone attended school where he is from.\nConclusion:\nLightingDesigner(hugh) ∧ UK(hugh) ::: Hugh Vanstone is one of the world's leading ligting designers and from the uk\n------\nProblem:\nThe first person to be diagnosed with AIDS in the United States was a gay man. The first person to be diagnosed with AIDS in the United States was a hemophiliac. The first person to be diagnosed with AIDS in the United States was a heroin addict.\nQuestion"
    ]
  },
  {
    "id": "FOLIO_train_527",
    "context": "Hugh Vanstone is one of the world's leading lighting designers. Hugh Vanstone is from the UK. Hugh Vanstone has lit more than 160 productions. Hugh Vanstone attended school where he is from.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Hugh Vanstone has lit 170 productions.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLight(x, y) ::: x has lit y.\nAttend(x, y) ::: x attended y.\nFrom(x, y) ::: x is from y.\nPremises:\nLight(hughVanstone, production160) ∧ Light(hughVanstone, production161) ∧ Light(hughVanstone, production162) ∧ Light(hughVanstone, production163) ∧ Light(hughVanstone, production164) ∧ Light(hughVanstone, production165) ∧ Light(hughVanstone, production166) ∧ Light(hughVanstone, production167) ∧ Light(hughVanstone, production168) ∧ Light(hughVanstone, production169) ::: Hugh Vanstone has lit more than 160 productions.\nFrom(hughVanstone, uk) ::: Hugh Vanstone is from the UK.\nAttend(hughVanstone, school) ::: Hugh Vanstone attended school where he is from.\nConclusion:\nLight(hughVanstone, production170) ::: Hugh Van"
    ]
  },
  {
    "id": "FOLIO_train_528",
    "context": "Hugh Vanstone is one of the world's leading lighting designers. Hugh Vanstone is from the UK. Hugh Vanstone has lit more than 160 productions. Hugh Vanstone attended school where he is from.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Hugh Vanstone attended school in the US.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nUK(x) ::: x is from the UK.\nUS(x) ::: x is from the US.\nLightingDesigner(x) ::: x is one of the world's leading lighting designers.\nLit(x, y) ::: x has lit y productions.\nAttend(x, y) ::: x attended school y.\nPremises:\nLightingDesigner(hugh) ∧ UK(hugh) ∧ Lit(hugh, 160) ::: Hugh Vanstone is one of the world's leading lighting designers. Hugh Vanstone is from the UK. Hugh Vanstone has lit more than 160 productions.\nAttend(hugh, school) ::: Hugh Vanstone attended school where he is from.\nConclusion:\nAttend(hugh, schoolInUS) ::: Hugh Vanstone attended school in the US.\n------\nProblem:\nThe first person to be diagnosed with AIDS in the United States was a gay man. The first person to be diagnosed with AIDS in the United States was a hemophiliac. The first person to be diagnosed with AIDS in the United States was a heroin addict.\nQuestion:\nBased on"
    ]
  },
  {
    "id": "FOLIO_train_529",
    "context": "No man can run faster than Bolt. Superman is not a man.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Superman can run faster than Bolt.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMan(x) ::: x is a man.\nFaster(x, y) ::: x can run faster than y.\nPremises:\n¬∃x (Man(x) ∧ Faster(x, bolt)) ::: No man can run faster than Bolt.\n¬Man(superman) ::: Superman is not a man.\nConclusion:\nFaster(superman, bolt) ::: Superman can run faster than Bolt.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is"
    ]
  },
  {
    "id": "FOLIO_train_530",
    "context": "Donald Ervin Knuth is an American computer scientist, mathematician, and Professor Emeritus at Stanford University. Knuth has been called the \"father of the analysis of algorithms\".",
    "question": "Based on the above information, is the following statement true, false, or uncertain? An American scientist has been called the \"father of the analysis of algorithms\".",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAmerican(x) ::: x is an American person.\nScientist(x) ::: x is a scientist.\nFather(x, y) ::: x is the father of y.\nCall(x, y) ::: x has been called y.\nPremises:\nAmerican(donald) ∧ Scientist(donald) ∧ Call(donald, fatherOfTheAnalysisOfAlgorithms) ::: Donald Ervin Knuth is an American computer scientist, mathematician, and Professor Emeritus at Stanford University. Knuth has been called the \"father of the analysis of algorithms\".\nConclusion:\n∃x (American(x) ∧ Scientist(x) ∧ Call(x, fatherOfTheAnalysisOfAlgorithms)) ::: An American scientist has been called the \"father of the analysis of algorithms\".\n------"
    ]
  },
  {
    "id": "FOLIO_train_531",
    "context": "Donald Ervin Knuth is an American computer scientist, mathematician, and Professor Emeritus at Stanford University. Knuth has been called the \"father of the analysis of algorithms\".",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A mathematician has been called the \"father of the analysis of algorithms\".",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAmerican(x) ::: x is an American person.\nComputerScientist(x) ::: x is a computer scientist.\nMathematician(x) ::: x is a mathematician.\nProfessor(x) ::: x is a professor.\nEmeritus(x) ::: x is an emeritus.\nStanfordUniversity(x) ::: x is Stanford University.\nFather(x, y) ::: x is the father of y.\nAnalysis(x) ::: x is an analysis.\nAlgorithm(x) ::: x is an algorithm.\nPremises:\nAmerican(donald) ∧ ComputerScientist(donald) ∧ Mathematician(donald) ∧ Professor(donald) ∧ Emeritus(donald) ∧ StanfordUniversity("
    ]
  },
  {
    "id": "FOLIO_train_532",
    "context": "Donald Ervin Knuth is an American computer scientist, mathematician, and Professor Emeritus at Stanford University. Knuth has been called the \"father of the analysis of algorithms\".",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Donald Knuth is a well-known figure in the field of artificial intelligence .",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAmerican(x) ::: x is an American.\nComputerScientist(x) ::: x is a computer scientist.\nMathematician(x) ::: x is a mathematician.\nProfessor(x) ::: x is a professor.\nEmeritus(x) ::: x is an emeritus.\nStanfordUniversity(x) ::: x is Stanford University.\nFather(x, y) ::: x is the father of y.\nAnalysis(x) ::: x is the analysis of algorithms.\nAlgorithm(x) ::: x is an algorithm.\nPremises:\nAmerican(donald) ∧ ComputerScientist(donald) ∧ Mathematician(donald) ∧ Professor(donald) ∧ Emeritus(donald) ∧ StanfordUniversity"
    ]
  },
  {
    "id": "FOLIO_train_533",
    "context": "Neocrepidodera Corpulentas are flea beetles or moths. The species Neocrepidodera Corpulenta is in the Chrysomelidae family. There are no moths within the Chrysomelidae family.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There is a flea beetle within the Chrysomelidae family.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFleaBeetle(x) ::: x is a flea beetle.\nMoth(x) ::: x is a moth.\nSpecies(x) ::: x is a species.\nFamily(x) ::: x is a family.\nPremises:\nFleaBeetle(neocrepidoderaCorpulentas) ∨ Moth(neocrepidoderaCorpulentas) ::: Neocrepidodera Corpulentas are flea beetles or moths.\nSpecies(neocrepidoderaCorpulenta) ∧ Family(chrysomelidae) ::: The species Neocrepidodera Corpulenta is in the Chrysomelidae family.\n¬∃x (Moth(x) ∧ Family(x, chrysomel"
    ]
  },
  {
    "id": "FOLIO_train_534",
    "context": "Neocrepidodera Corpulentas are flea beetles or moths. The species Neocrepidodera Corpulenta is in the Chrysomelidae family. There are no moths within the Chrysomelidae family.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There are no flea beetles within the Chrysomelidae family.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFleaBeetle(x) ::: x is a flea beetle.\nMoth(x) ::: x is a moth.\nChrysomelidae(x) ::: x is in the Chrysomelidae family.\nPremises:\nFleaBeetle(neocrepidoderaCorpulentas) ∨ Moth(neocrepidoderaCorpulentas) ::: Neocrepidodera Corpulentas are flea beetles or moths.\nChrysomelidae(neocrepidoderaCorpulenta) ::: The species Neocrepidodera Corpulenta is in the Chrysomelidae family.\n¬∃x (Moth(x) ∧ Chrysomelidae(x)) ::: There are no moths within the Ch"
    ]
  },
  {
    "id": "FOLIO_train_535",
    "context": "Carrozzeria Colli is a Milanese coachbuilder company that was established by Giuseppe Colli in 1931. Carrozzeria Colli is a company that specialized in using aluminum. The first automobiles built by Carrozzeria Colli were racing cars. Some racing cars built by Carrozzeria Colli used Fiat 1100 mechanicals and chasis. Carrozzeria Colli worked for airforces. Carrozzeria Colli made car bodies.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Carrozzeria Colli made car bodies in 1931.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCompany(x) ::: x is a company.\nSpecialize(x, y) ::: x specializes in y.\nRacingCar(x) ::: x is a racing car.\nAutomobile(x) ::: x is an automobile.\nFiat1100(x) ::: x is a Fiat 1100.\nMechanical(x) ::: x is a mechanical.\nChasis(x) ::: x is a chasis.\nAirforce(x) ::: x is an airforce.\nCarBody(x) ::: x is a car body.\nPremises:\nCompany(carrozzeriaColli) ∧ Specialize(carrozzeriaColli, aluminum) ∧ Establish(carrozzeriaColli, year1931) ::: Carroz"
    ]
  },
  {
    "id": "FOLIO_train_536",
    "context": "Carrozzeria Colli is a Milanese coachbuilder company that was established by Giuseppe Colli in 1931. Carrozzeria Colli is a company that specialized in using aluminum. The first automobiles built by Carrozzeria Colli were racing cars. Some racing cars built by Carrozzeria Colli used Fiat 1100 mechanicals and chasis. Carrozzeria Colli worked for airforces. Carrozzeria Colli made car bodies.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Carrozzeria Colli built airplanes during World War II.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCompany(x) ::: x is a company.\nSpecialize(x, y) ::: x specializes in y.\nRacingCar(x) ::: x is a racing car.\nFiat1100(x) ::: x is a Fiat 1100.\nMechanical(x) ::: x is a mechanical.\nChasis(x) ::: x is a chasis.\nAirforce(x) ::: x is an airforce.\nWork(x, y) ::: x works for y.\nCarBody(x) ::: x is a car body.\nPremises:\nCompany(carrozzeriaColli) ∧ Specialize(carrozzeriaColli, aluminum) ∧ RacingCar(firstAutomobiles) ∧ Fiat1100(firstAutomobiles"
    ]
  },
  {
    "id": "FOLIO_train_537",
    "context": "Carrozzeria Colli is a Milanese coachbuilder company that was established by Giuseppe Colli in 1931. Carrozzeria Colli is a company that specialized in using aluminum. The first automobiles built by Carrozzeria Colli were racing cars. Some racing cars built by Carrozzeria Colli used Fiat 1100 mechanicals and chasis. Carrozzeria Colli worked for airforces. Carrozzeria Colli made car bodies.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Giuseppe Colli established a company that made car bodies.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEstablish(x, y) ::: x established y.\nCompany(x) ::: x is a company.\nSpecialize(x, y) ::: x specialized in y.\nRacingCar(x) ::: x is a racing car.\nAutomobile(x) ::: x is an automobile.\nFiat1100(x) ::: x is a Fiat 1100.\nMechanical(x) ::: x is a mechanical.\nChasis(x) ::: x is a chasis.\nAirforce(x) ::: x is an airforce.\nWork(x, y) ::: x worked for y.\nCarBody(x) ::: x is a car body.\nPremises:\nEstablish(giuseppe, carrozzeriaColli) ∧ Company(car"
    ]
  },
  {
    "id": "FOLIO_train_538",
    "context": "Carrozzeria Colli is a Milanese coachbuilder company that was established by Giuseppe Colli in 1931. Carrozzeria Colli is a company that specialized in using aluminum. The first automobiles built by Carrozzeria Colli were racing cars. Some racing cars built by Carrozzeria Colli used Fiat 1100 mechanicals and chasis. Carrozzeria Colli worked for airforces. Carrozzeria Colli made car bodies.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Giuseppe Colli established a Milanese coachbuilder company that specialized in using aluminum.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMilanese(x) ::: x is a Milanese company.\nCoachbuilder(x) ::: x is a coachbuilder company.\nEstablish(x, y) ::: x established y.\nSpecialize(x, y) ::: x specialized in y.\nRacingCar(x) ::: x is a racing car.\nAutomobile(x) ::: x is an automobile.\nBuild(x, y) ::: x built y.\nUse(x, y) ::: x used y.\nMechanical(x) ::: x is a mechanical.\nChasis(x) ::: x is a chasis.\nWork(x, y) ::: x worked for y.\nAirforce(x) ::: x is an airforce.\nBody(x) ::: x is a body.\nPremises"
    ]
  },
  {
    "id": "FOLIO_train_539",
    "context": "Carrozzeria Colli is a Milanese coachbuilder company that was established by Giuseppe Colli in 1931. Carrozzeria Colli is a company that specialized in using aluminum. The first automobiles built by Carrozzeria Colli were racing cars. Some racing cars built by Carrozzeria Colli used Fiat 1100 mechanicals and chasis. Carrozzeria Colli worked for airforces. Carrozzeria Colli made car bodies.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The first automobiles built by Carrozzeria Colli were built using Fiat 1100 mechanicals and chasis.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCompany(x) ::: x is a company.\nSpecialize(x, y) ::: x specializes in y.\nRacingCar(x) ::: x is a racing car.\nAutomobile(x) ::: x is an automobile.\nFiat1100(x) ::: x is a Fiat 1100.\nMechanical(x) ::: x is a mechanical.\nChasis(x) ::: x is a chasis.\nAirforce(x) ::: x is an airforce.\nCarBody(x) ::: x is a car body.\nPremises:\nCompany(carrozzeriaColli) ∧ Specialize(carrozzeriaColli, aluminum) ∧ Automobile(firstAutomobiles) ∧ RacingCar(firstAutomobiles) ∧ Autom"
    ]
  },
  {
    "id": "FOLIO_train_540",
    "context": "John will go to the cinema if and only if Jack goes to the cinema today. Jack will go to the cinema if and only if Iron Man is on and the weather is not bad today. Some days in March have bad weather. Iron man is on. It's March now.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? John will go to the cinema.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGo(x, y) ::: x goes to y.\nIronMan(x) ::: x is Iron Man.\nBad(x) ::: x is bad.\nWeather(x) ::: x is weather.\nMarch(x) ::: x is in March.\nPremises:\nGo(john, cinema) ↔ Go(jack, cinema) ::: John will go to the cinema if and only if Jack goes to the cinema today.\nGo(jack, cinema) ↔ (IronMan(on) ∧ ¬Bad(weather)) ::: Jack will go to the cinema if and only if Iron Man is on and the weather is not bad today.\n∃x (March(x) ∧ Bad(weather)) ::: Some days in March have bad weather.\nIronMan(on) ::: Iron man is on.\nMarch(now) ::: It's March now.\nConclusion:\nGo(john, cinema) ::: John will go to the cinema.\n------"
    ]
  },
  {
    "id": "FOLIO_train_541",
    "context": "John will go to the cinema if and only if Jack goes to the cinema today. Jack will go to the cinema if and only if Iron Man is on and the weather is not bad today. Some days in March have bad weather. Iron man is on. It's March now.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The weather is good today.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGo(x, y) ::: x goes to y.\nIronMan(x) ::: x is Iron Man.\nBad(x) ::: x is bad.\nWeather(x) ::: x is weather.\nMarch(x) ::: x is in March.\nPremises:\nJohn(x) ∧ Jack(y) ∧ Cinema(z) ∧ Today(w) ∧ IronMan(a) ∧ On(b) ∧ Weather(c) ∧ Bad(d) ∧ March(e) ::: John will go to the cinema if and only if Jack goes to the cinema today. Jack will go to the cinema if and only if Iron Man is on and the weather is not bad today. Some days in March have bad weather. Iron man is on. It's March now.\nConclusion:\n¬Bad(c) ::: The weather is good today.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke"
    ]
  },
  {
    "id": "FOLIO_train_542",
    "context": "Quiksilver sells sportswear, clothing, footwear, and accessories. Flannels are a type of clothing. Joe owns an item fron Quiksilver.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Quiksilver sells beer.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSell(x, y) ::: x sells y.\nSportswear(x) ::: x is a sportswear.\nClothing(x) ::: x is a clothing.\nFootwear(x) ::: x is a footwear.\nAccessory(x) ::: x is an accessory.\nFlannel(x) ::: x is a flannel.\nOwn(x, y) ::: x owns y.\nPremises:\nSell(quiksilver, sportswear) ∧ Sell(quiksilver, clothing) ∧ Sell(quiksilver, footwear) ∧ Sell(quiksilver, accessory) ::: Quiksilver sells sportswear, clothing, footwear, and accessories.\nFlannel(flannel) ::: Flannels are a type of clothing.\nOwn(joe, item) ∧ Sell(quiksilver, item) ::: Joe owns"
    ]
  },
  {
    "id": "FOLIO_train_543",
    "context": "Quiksilver sells sportswear, clothing, footwear, and accessories. Flannels are a type of clothing. Joe owns an item fron Quiksilver.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Joe owns a flannel.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSell(x, y) ::: x sells y.\nSportswear(x) ::: x is a sportswear.\nClothing(x) ::: x is a clothing.\nFootwear(x) ::: x is a footwear.\nAccessory(x) ::: x is an accessory.\nFlannel(x) ::: x is a flannel.\nOwn(x, y) ::: x owns y.\nPremises:\nSell(quiksilver, sportswear) ∧ Sell(quiksilver, clothing) ∧ Sell(quiksilver, footwear) ∧ Sell(quiksilver, accessory) ::: Quiksilver sells sportswear, clothing, footwear, and accessories.\nOwn(joe, itemFromQuiksilver) ::: Joe owns an item fron Quiksilver.\nConclusion:\nOwn(joe, flannel) :::"
    ]
  },
  {
    "id": "FOLIO_train_544",
    "context": "Quiksilver sells sportswear, clothing, footwear, and accessories. Flannels are a type of clothing. Joe owns an item fron Quiksilver.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Joe owns at least one a piece of sportswear, clothing, footwear, or accessory",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSell(x, y) ::: x sells y.\nSportswear(x) ::: x is a piece of sportswear.\nClothing(x) ::: x is a piece of clothing.\nFootwear(x) ::: x is a piece of footwear.\nAccessory(x) ::: x is a piece of accessory.\nFlannel(x) ::: x is a flannel.\nOwn(x, y) ::: x owns y.\nPremises:\nSell(quiksilver, sportswear) ∧ Sell(quiksilver, clothing) ∧ Sell(quiksilver, footwear) ∧ Sell(quiksilver, accessory) ::: Quiksilver sells sportswear, clothing, footwear, and accessories.\nFlannel(flannel) ::: Flannels are a type of clothing.\nOwn(joe, quiksilver) ::: Joe owns an"
    ]
  },
  {
    "id": "FOLIO_train_545",
    "context": "No video games released by Nintendo support the PS4 platform. All video games in the Pokemon series are released by Nintendo. All video games in the FIFA series support the PS4 platform. All video games supporting users to simulate playing soccer games online are in the FIFA series. The video game named “Be Lionel” is in the Pokemon series or supports users to simulate playing football games online.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The video game \"Be Lionel\" is in the pokemon series.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nNintendo(x) ::: x is a video game released by Nintendo.\nPokemon(x) ::: x is a video game in the Pokemon series.\nFIFA(x) ::: x is a video game in the FIFA series.\nPS4(x) ::: x is a video game supporting the PS4 platform.\nSoccer(x) ::: x is a video game supporting users to simulate playing soccer games online.\nFootball(x) ::: x is a video game supporting users to simulate playing football games online.\nBeLionel(x) ::: x is the video game named \"Be Lionel\".\nPremises:\n¬∃x (Nintendo(x) ∧ PS4(x)) ::: No video games released by Nintendo support the PS4 platform.\n∀x (Pokemon(x) → Nintendo(x)) ::: All video games in the Pokemon series are released by Nintendo.\n∀x (FIFA(x) → PS4(x)) ::: All video games"
    ]
  },
  {
    "id": "FOLIO_train_546",
    "context": "No video games released by Nintendo support the PS4 platform. All video games in the Pokemon series are released by Nintendo. All video games in the FIFA series support the PS4 platform. All video games supporting users to simulate playing soccer games online are in the FIFA series. The video game named “Be Lionel” is in the Pokemon series or supports users to simulate playing football games online.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The video game named “Be Lionel” is not in the FIFA series or supports the PS4 platform.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nNintendo(x) ::: x is released by Nintendo.\nPokemon(x) ::: x is in the Pokemon series.\nFIFA(x) ::: x is in the FIFA series.\nPS4(x) ::: x supports the PS4 platform.\nSoccer(x) ::: x supports users to simulate playing soccer games online.\nFootball(x) ::: x supports users to simulate playing football games online.\nBeLionel(x) ::: x is the video game named “Be Lionel”.\nPremises:\n¬∃x (Nintendo(x) ∧ FIFA(x)) ::: No video games released by Nintendo support the PS4 platform.\n∀x (Pokemon(x) → Nintendo(x)) ::: All video games in the Pokemon series are released by Nintendo.\n∀x (FIFA(x) → PS4(x)) ::: All video games in the FIFA series support the PS4 platform.\n∀x (Soccer(x) → FIFA("
    ]
  },
  {
    "id": "FOLIO_train_547",
    "context": "No video games released by Nintendo support the PS4 platform. All video games in the Pokemon series are released by Nintendo. All video games in the FIFA series support the PS4 platform. All video games supporting users to simulate playing soccer games online are in the FIFA series. The video game named “Be Lionel” is in the Pokemon series or supports users to simulate playing football games online.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The video game named “Be Lionel” is in the FIFA series or supports the PS4 platform.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nNintendo(x) ::: x is released by Nintendo.\nPokemon(x) ::: x is in the Pokemon series.\nFIFA(x) ::: x is in the FIFA series.\nPS4(x) ::: x supports the PS4 platform.\nSoccer(x) ::: x supports users to simulate playing soccer games online.\nFootball(x) ::: x supports users to simulate playing football games online.\nBeLionel(x) ::: x is the video game named “Be Lionel”.\nPremises:\n¬∃x (Nintendo(x) ∧ FIFA(x)) ::: No video games released by Nintendo support the PS4 platform.\n∀x (Pokemon(x) → Nintendo(x)) ::: All video games in the Pokemon series are released by Nintendo.\n∀x (FIFA(x) → PS4(x)) ::: All video games in the FIFA series support the PS4 platform.\n∀x (Soccer(x) → FIFA("
    ]
  },
  {
    "id": "FOLIO_train_548",
    "context": "No video games released by Nintendo support the PS4 platform. All video games in the Pokemon series are released by Nintendo. All video games in the FIFA series support the PS4 platform. All video games supporting users to simulate playing soccer games online are in the FIFA series. The video game named “Be Lionel” is in the Pokemon series or supports users to simulate playing football games online.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The video game named “Be Lionel”  is not in the FIFA or Pokemon series.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nNintendo(x) ::: x is released by Nintendo.\nPokemon(x) ::: x is in the Pokemon series.\nFIFA(x) ::: x is in the FIFA series.\nPS4(x) ::: x supports the PS4 platform.\nOnline(x) ::: x supports users to simulate playing soccer games online.\nFootball(x) ::: x supports users to simulate playing football games online.\nPremises:\n¬∃x (Nintendo(x) ∧ PS4(x)) ::: No video games released by Nintendo support the PS4 platform.\n∀x (Pokemon(x) → Nintendo(x)) ::: All video games in the Pokemon series are released by Nintendo.\n∀x (FIFA(x) → PS4(x)) ::: All video games in the FIFA series support the PS4 platform.\n∀x (Online(x) → FIFA(x)) ::: All video games supporting users to simulate playing soccer games online are in the FIFA"
    ]
  },
  {
    "id": "FOLIO_train_549",
    "context": "No payment cards issued by Russian banks can be used with ApplePay. All MIR payment cards are issued by Russian banks. Some international payment cards can be used with ApplePay. Social payments in Russia can only be transferred to MIR payment cards. Bank of America payment cards can be used with ApplePay.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Bank of America payment cards are international.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRussianBank(x) ::: x is a Russian bank.\nMIR(x) ::: x is a MIR payment card.\nInternational(x) ::: x is an international payment card.\nApplePay(x) ::: x can be used with ApplePay.\nSocialPayment(x) ::: x is a social payment.\nBankOfAmerica(x) ::: x is a Bank of America payment card.\nPremises:\n¬∃x (RussianBank(x) ∧ ApplePay(x)) ::: No payment cards issued by Russian banks can be used with ApplePay.\n∀x (MIR(x) → RussianBank(x)) ::: All MIR payment cards are issued by Russian banks.\n∃x (International(x) ∧ ApplePay(x)) ::: Some international payment cards can be used with ApplePay.\n∀x (SocialPayment(x) → MIR(x)) ::: Social payments in Russia can only be transferred to MIR payment cards"
    ]
  },
  {
    "id": "FOLIO_train_550",
    "context": "No payment cards issued by Russian banks can be used with ApplePay. All MIR payment cards are issued by Russian banks. Some international payment cards can be used with ApplePay. Social payments in Russia can only be transferred to MIR payment cards. Bank of America payment cards can be used with ApplePay.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Bank of America payment cards are international and can be used to transfer social payments in Russia.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nApplePay(x) ::: x can be used with ApplePay.\nMIR(x) ::: x is a MIR payment card.\nInternational(x) ::: x is an international payment card.\nSocialPayment(x) ::: x is a social payment.\nBankOfAmerica(x) ::: x is a Bank of America payment card.\nPremises:\n¬∃x (ApplePay(x) ∧ MIR(x)) ::: No payment cards issued by Russian banks can be used with ApplePay.\n∀x (MIR(x) → RussianBank(x)) ::: All MIR payment cards are issued by Russian banks.\n∃x (International(x) ∧ ApplePay(x)) ::: Some international payment cards can be used with ApplePay.\n∀x (SocialPayment(x) → MIR(x)) ::: Social payments in Russia can only be transferred to MIR payment cards.\nApplePay(bankOfAmerica) ::: Bank of America payment cards can be used with ApplePay.\nConclusion:\nApplePay(bankOfAmerica) ∧ International(bankOfAmerica) ∧ SocialPayment(x) ::: Bank of America payment cards are international and can be used to transfer social payments in Russia.\n------"
    ]
  },
  {
    "id": "FOLIO_train_551",
    "context": "No payment cards issued by Russian banks can be used with ApplePay. All MIR payment cards are issued by Russian banks. Some international payment cards can be used with ApplePay. Social payments in Russia can only be transferred to MIR payment cards. Bank of America payment cards can be used with ApplePay.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Bank of America payment cards are international or issued by Russian banks, then they can not be used to transfer social payments in Russia.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nApplePay(x) ::: x can be used with ApplePay.\nMIR(x) ::: x is a MIR payment card.\nInternational(x) ::: x is an international payment card.\nRussianBank(x) ::: x is issued by Russian banks.\nSocialPayment(x) ::: x is a social payment in Russia.\nBankOfAmerica(x) ::: x is a Bank of America payment card.\nPremises:\n¬∀x (RussianBank(x) → ApplePay(x)) ::: No payment cards issued by Russian banks can be used with ApplePay.\n∀x (MIR(x) → RussianBank(x)) ::: All MIR payment cards are issued by Russian banks.\n∃x (International(x) ∧ ApplePay(x)) ::: Some international payment cards can be used with ApplePay.\n∀x (SocialPayment(x) → ¬MIR(x)) ::: Social payments in Russia can only be transferred to MIR payment cards.\nApplePay(bankOfAmerica) ::: Bank of America payment cards can be used with ApplePay.\nConclusion:\n¬(BankOfAmerica(x) ∧ (RussianBank(x) ∨ International(x))) →"
    ]
  },
  {
    "id": "FOLIO_train_552",
    "context": "The Lumina APV is produced by Chevrolet. The Astro is a van produced by Chevrolet. Cars produced by Chevrolet are either cars or vans.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Lumina APV is van.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nChevrolet(x) ::: x is produced by Chevrolet.\nCar(x) ::: x is a car.\nVan(x) ::: x is a van.\nPremises:\nChevrolet(luminaApv) ::: The Lumina APV is produced by Chevrolet.\nChevrolet(astro) ::: The Astro is a van produced by Chevrolet.\n∀x (Chevrolet(x) → (Car(x) ∨ Van(x))) ::: Cars produced by Chevrolet are either cars or vans.\nConclusion:\nVan(luminaApv) ::: The Lumina APV is van.\n------\nProblem:\nThe Lumina APV is produced by Chevrolet. The Astro is a van produced by Chevrolet. Cars produced by Chevrolet are either cars or vans.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The Lumina APV is a car.\n###\nPredicates:\nChevrolet(x) ::: x is produced by Chevrolet.\nCar(x) ::: x is a car.\nVan(x"
    ]
  },
  {
    "id": "FOLIO_train_553",
    "context": "The Lumina APV is produced by Chevrolet. The Astro is a van produced by Chevrolet. Cars produced by Chevrolet are either cars or vans.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Lumina APV is either a car or a van.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nChevrolet(x) ::: x is produced by Chevrolet.\nCar(x) ::: x is a car.\nVan(x) ::: x is a van.\nPremises:\nChevrolet(luminaApv) ::: The Lumina APV is produced by Chevrolet.\nChevrolet(astro) ::: The Astro is a van produced by Chevrolet.\n∀x (Chevrolet(x) → (Car(x) ∨ Van(x))) ::: Cars produced by Chevrolet are either cars or vans.\nConclusion:\n(Car(luminaApv) ∨ Van(luminaApv)) ::: The Lumina APV is either a car or a van.\n------\nProblem:\nThe Lumina APV is produced by Chevrolet. The Astro is a van produced by Chevrolet. Cars produced by Chevrolet are either cars or vans.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The Lumina APV is either a car or a van.\nBased on the above information, is the following statement true, false, or uncertain? The Astro is either a"
    ]
  },
  {
    "id": "FOLIO_train_554",
    "context": "The Lumina APV is produced by Chevrolet. The Astro is a van produced by Chevrolet. Cars produced by Chevrolet are either cars or vans.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Astro is a van.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nChevrolet(x) ::: x is produced by Chevrolet.\nCar(x) ::: x is a car.\nVan(x) ::: x is a van.\nPremises:\nChevrolet(luminaApv) ::: The Lumina APV is produced by Chevrolet.\nChevrolet(astro) ::: The Astro is a van produced by Chevrolet.\n∀x (Chevrolet(x) → (Car(x) ∨ Van(x))) ::: Cars produced by Chevrolet are either cars or vans.\nConclusion:\nVan(astro) ::: The Astro is a van.\n------\nProblem:\nThe Lumina APV is produced by Chevrolet. The Astro is a van produced by Chevrolet. Cars produced by Chevrolet are either cars or vans.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The Lumina APV is a car.\n###\nPredicates:\nChevrolet(x) ::: x is produced by Chevrolet.\nCar(x) ::: x is a car.\nVan(x) ::: x is a"
    ]
  },
  {
    "id": "FOLIO_train_555",
    "context": "The Lumina APV is produced by Chevrolet. The Astro is a van produced by Chevrolet. Cars produced by Chevrolet are either cars or vans.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Astro is a car.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nChevrolet(x) ::: x is produced by Chevrolet.\nCar(x) ::: x is a car.\nVan(x) ::: x is a van.\nPremises:\nChevrolet(luminaApv) ::: The Lumina APV is produced by Chevrolet.\nChevrolet(astro) ::: The Astro is a van produced by Chevrolet.\n∀x (Chevrolet(x) → (Car(x) ∨ Van(x))) ::: Cars produced by Chevrolet are either cars or vans.\nConclusion:\nCar(astro) ::: The Astro is a car.\n------\nProblem:\nThe Lumina APV is produced by Chevrolet. The Astro is a van produced by Chevrolet. Cars produced by Chevrolet are either cars or vans.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The Astro is a car.\n###\nPredicates:\nChevrolet(x) ::: x is produced by Chevrolet.\nCar(x) ::: x is a car.\nVan(x) ::: x is a van.\nP"
    ]
  },
  {
    "id": "FOLIO_train_556",
    "context": "Everyone who works in person is a commuter. People either work in person or work from home. Everyone who works from home has a relaxed schedule. George is either a commuter or has a home office setup. If George is either a person who works from home or has a home office setup, then George is not a person who works from home and a commuter.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? George is a person who works from home.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCommuter(x) ::: x is a commuter.\nWorkInPerson(x) ::: x works in person.\nWorkFromHome(x) ::: x works from home.\nRelaxedSchedule(x) ::: x has a relaxed schedule.\nHomeOfficeSetup(x) ::: x has a home office setup.\nPremises:\n∀x (WorkInPerson(x) → Commuter(x)) ::: Everyone who works in person is a commuter.\n∀x (WorkInPerson(x) ⊕ WorkFromHome(x)) ::: People either work in person or work from home.\n∀x (WorkFromHome(x) → RelaxedSchedule(x)) ::: Everyone who works from home has a relaxed schedule.\n(Commuter(george) ∧ HomeOfficeSetup(george)) ⊕ ¬(Commuter(george) ∨ HomeOfficeSetup(george)) ::: George is either a commuter or has a home office setup.\n¬(WorkFromHome(george) ∧ Commuter(george)) → (WorkFromHome(george) ∧ Commuter(george)) ⊕ ¬(WorkFromHome(george) ∨ Commuter(george)) ::: If George is either a person who"
    ]
  },
  {
    "id": "FOLIO_train_557",
    "context": "Everyone who works in person is a commuter. People either work in person or work from home. Everyone who works from home has a relaxed schedule. George is either a commuter or has a home office setup. If George is either a person who works from home or has a home office setup, then George is not a person who works from home and a commuter.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If George is not a person who works from home and a person who works in person, then George is neither a commuter nor a person who has a relaxed schedule.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCommuter(x) ::: x is a commuter.\nWorkInPerson(x) ::: x works in person.\nWorkFromHome(x) ::: x works from home.\nRelaxedSchedule(x) ::: x has a relaxed schedule.\nHomeOfficeSetup(x) ::: x has a home office setup.\nPremises:\n∀x (WorkInPerson(x) → Commuter(x)) ::: Everyone who works in person is a commuter.\n∀x (WorkInPerson(x) ⊕ WorkFromHome(x)) ::: People either work in person or work from home.\n∀x (WorkFromHome(x) → RelaxedSchedule(x)) ::: Everyone who works from home has a relaxed schedule.\n(Commuter(george) ∧ HomeOfficeSetup(george)) ⊕ ¬(Commuter(george) ∨ HomeOfficeSetup(george)) ::: George is either a commuter or has a home office setup.\n¬(WorkFromHome(george) ∧ Commuter(george)) → (WorkFromHome(george) ∧ Commuter(george)) ⊕ ¬(WorkFromHome(george) ∨ Commuter(george)) ::: If George is either a person who"
    ]
  },
  {
    "id": "FOLIO_train_558",
    "context": "Everyone who works in person is a commuter. People either work in person or work from home. Everyone who works from home has a relaxed schedule. George is either a commuter or has a home office setup. If George is either a person who works from home or has a home office setup, then George is not a person who works from home and a commuter.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If George is either a person who has a home office setup and a person who works in person, or neither a person who has a home office setup nor a person who works in person, then George is either a person who works from home or a person who has a relaxed schedule.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCommuter(x) ::: x is a commuter.\nWorkInPerson(x) ::: x works in person.\nWorkFromHome(x) ::: x works from home.\nRelaxedSchedule(x) ::: x has a relaxed schedule.\nHomeOfficeSetup(x) ::: x has a home office setup.\nPremises:\n∀x (WorkInPerson(x) → Commuter(x)) ::: Everyone who works in person is a commuter.\n∀x (WorkInPerson(x) ⊕ WorkFromHome(x)) ::: People either work in person or work from home.\n∀x (WorkFromHome(x) → RelaxedSchedule(x)) ::: Everyone who works from home has a relaxed schedule.\n(Commuter(george) ∧ HomeOfficeSetup(george)) ⊕ ¬(Commuter(george) ∨ HomeOfficeSetup(george)) ::: George is either a commuter or has a home office setup.\n¬(WorkFromHome(george) ∧ HomeOfficeSetup(george)) → (WorkFromHome(george) ∧ Commuter(george)) ⊕ ¬(WorkFromHome(george) ∨ Commuter(george)) ::: If George is either a person"
    ]
  },
  {
    "id": "FOLIO_train_559",
    "context": "Jason Kramer is an American music supervisor. Some American radio personalities are also music supervisors. Anyone who hosts a show on a public radio station is a radio personality. Joe Rogan is a radio personality. Jason Kramer hosted a show on a public radio station.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Joe Rogan is American.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAmerican(x) ::: x is an American.\nRadioPersonality(x) ::: x is a radio personality.\nMusicSupervisor(x) ::: x is a music supervisor.\nHost(x, y) ::: x hosts y.\nShow(x) ::: x is a show.\nPublicRadioStation(x) ::: x is a public radio station.\nPremises:\nAmerican(jason) ∧ MusicSupervisor(jason) ::: Jason Kramer is an American music supervisor.\n∃x (American(x) ∧ MusicSupervisor(x)) ::: Some American radio personalities are also music supervisors.\nRadioPersonality(x) → Host(x, show) ∧ PublicRadioStation(show) ::: Anyone who hosts a show on a public radio station is a radio personality.\nRadioPersonality(joe) ::: Joe Rogan is a radio personality.\nHost(jason, show) ∧ PublicRadioStation(show) ::: Jason Kramer hosted a show on a public radio station.\nConclusion:\nAmerican(joe) ::: Joe Rogan is American.\n------\nProblem:\nThe first person to be called a \"jazz musician\" was Buddy Bolden. Buddy Bolden was a"
    ]
  },
  {
    "id": "FOLIO_train_560",
    "context": "Jason Kramer is an American music supervisor. Some American radio personalities are also music supervisors. Anyone who hosts a show on a public radio station is a radio personality. Joe Rogan is a radio personality. Jason Kramer hosted a show on a public radio station.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jason Kramer is a music supervisor.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAmerican(x) ::: x is an American.\nRadioPersonality(x) ::: x is a radio personality.\nMusicSupervisor(x) ::: x is a music supervisor.\nHost(x, y) ::: x hosts y.\nShow(x) ::: x is a show.\nPublicRadioStation(x) ::: x is a public radio station.\nPremises:\nAmerican(jason) ∧ MusicSupervisor(jason) ::: Jason Kramer is an American music supervisor.\n∃x (American(x) ∧ MusicSupervisor(x)) ::: Some American radio personalities are also music supervisors.\n∀x (Host(x, show) → RadioPersonality(x)) ::: Anyone who hosts a show on a public radio station is a radio personality.\nRadioPersonality(joe) ::: Joe Rogan is a radio personality.\nHost(jason, show) ∧ PublicRadioStation(show) ::: Jason Kramer hosted a show on a public radio station.\nConclusion:\nMusicSupervisor(jason) ::: Jason Kramer is a music supervisor.\n------"
    ]
  },
  {
    "id": "FOLIO_train_561",
    "context": "Jason Kramer is an American music supervisor. Some American radio personalities are also music supervisors. Anyone who hosts a show on a public radio station is a radio personality. Joe Rogan is a radio personality. Jason Kramer hosted a show on a public radio station.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jason Kramer is a radio personality.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAmerican(x) ::: x is an American.\nRadioPersonality(x) ::: x is a radio personality.\nMusicSupervisor(x) ::: x is a music supervisor.\nHost(x, y) ::: x hosts y.\nShow(x) ::: x is a show.\nPublicRadioStation(x) ::: x is a public radio station.\nPremises:\nAmerican(jason) ∧ MusicSupervisor(jason) ::: Jason Kramer is an American music supervisor.\n∃x (American(x) ∧ MusicSupervisor(x) ∧ RadioPersonality(x)) ::: Some American radio personalities are also music supervisors.\nRadioPersonality(x) → Host(x, show) ∧ PublicRadioStation(show) ::: Anyone who hosts a show on a public radio station is a radio personality.\nRadioPersonality(joe) ::: Joe Rogan is a radio personality.\nHost(jason, show) ∧ PublicRadioStation(show) ::: Jason Kramer hosted a show on a public radio station.\nConclusion:\nRadioPersonality(jason) :"
    ]
  },
  {
    "id": "FOLIO_train_562",
    "context": "No coffee sold in Walmart is produced in France. All coffee supplied by the company is sold in Walmart. All coffee produced in Columbia is produced in France. All coffee favored by local residents is coffee produced in Columbia. All coffee with high prices is favored by local residents. Civet Coffee is not produced in Columbia and is cheap. Jamaica Blue is sold in Walmart or favored by local residents.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Civet Coffee is produced in France.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSold(x, y) ::: x is sold in y.\nSupplied(x, y) ::: x is supplied by y.\nProduced(x, y) ::: x is produced in y.\nFavored(x, y) ::: x is favored by y.\nPrice(x, y) ::: x has price y.\nPremises:\n¬(Sold(x, walmart) ∧ Produced(x, france)) ::: No coffee sold in Walmart is produced in France.\n∀x (Supplied(x, company) → Sold(x, walmart)) ::: All coffee supplied by the company is sold in Walmart.\n∀x (Produced(x, columbia) → Produced(x, france)) ::: All coffee produced in Columbia is produced in France.\n∀x (Produced(x, columbia) → Favored(x, localResidents)) ::: All coffee produced in Columbia is favored by local residents.\n∀x (Price(x, high) → Favored(x, localResidents)) ::: All coffee with high prices is favored by local residents."
    ]
  },
  {
    "id": "FOLIO_train_563",
    "context": "No coffee sold in Walmart is produced in France. All coffee supplied by the company is sold in Walmart. All coffee produced in Columbia is produced in France. All coffee favored by local residents is coffee produced in Columbia. All coffee with high prices is favored by local residents. Civet Coffee is not produced in Columbia and is cheap. Jamaica Blue is sold in Walmart or favored by local residents.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Civet Coffee is not produced in France.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSold(x, y) ::: x is sold in y.\nSupplied(x, y) ::: x is supplied by y.\nProduced(x, y) ::: x is produced in y.\nFavored(x, y) ::: x is favored by y.\nPrice(x, y) ::: x has price y.\nPremises:\n¬(Sold(x, walmart) ∧ Produced(x, france)) ::: No coffee sold in Walmart is produced in France.\n∀x (Supplied(x, company) → Sold(x, walmart)) ::: All coffee supplied by the company is sold in Walmart.\n∀x (Produced(x, columbia) → Produced(x, france)) ::: All coffee produced in Columbia is produced in France.\n∀x (Produced(x, columbia) → Favored(x, localResidents)) ::: All coffee produced in Columbia is favored by local residents.\n∀x (Favored(x, localResidents) → Price(x, high)) ::: All coffee favored by local residents is coffee produced in Columbia"
    ]
  },
  {
    "id": "FOLIO_train_564",
    "context": "No coffee sold in Walmart is produced in France. All coffee supplied by the company is sold in Walmart. All coffee produced in Columbia is produced in France. All coffee favored by local residents is coffee produced in Columbia. All coffee with high prices is favored by local residents. Civet Coffee is not produced in Columbia and is cheap. Jamaica Blue is sold in Walmart or favored by local residents.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jamaica Blue is expensive and supplied by the company.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSold(x, y) ::: x is sold in y.\nSupplied(x, y) ::: x is supplied by y.\nProduced(x, y) ::: x is produced in y.\nFavored(x, y) ::: x is favored by y.\nCheap(x) ::: x is cheap.\nExpensive(x) ::: x is expensive.\nPremises:\n¬(Coffee(x) ∧ Sold(x, walmart) ∧ Produced(x, france)) ::: No coffee sold in Walmart is produced in France.\n∀x (Supplied(x, company) → Sold(x, walmart)) ::: All coffee supplied by the company is sold in Walmart.\n∀x (Produced(x, columbia) → Produced(x, france)) ::: All coffee produced in Columbia is produced in France.\n∀x (Favored(x, localResidents) → Produced(x, columbia)) ::: All coffee favored by local residents is coffee produced in Columbia.\n∀x (Favored(x, localResidents) → Expensive"
    ]
  },
  {
    "id": "FOLIO_train_565",
    "context": "No coffee sold in Walmart is produced in France. All coffee supplied by the company is sold in Walmart. All coffee produced in Columbia is produced in France. All coffee favored by local residents is coffee produced in Columbia. All coffee with high prices is favored by local residents. Civet Coffee is not produced in Columbia and is cheap. Jamaica Blue is sold in Walmart or favored by local residents.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jamaica Blue is not expensive and is not supplied by the company.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSold(x, y) ::: x is sold in y.\nSupplied(x, y) ::: x is supplied by y.\nProduced(x, y) ::: x is produced in y.\nFavored(x, y) ::: x is favored by y.\nExpensive(x) ::: x is expensive.\nCheap(x) ::: x is cheap.\nPremises:\n¬(Coffee(x) ∧ Sold(x, walmart) ∧ Produced(x, france)) ::: No coffee sold in Walmart is produced in France.\n∀x (Supplied(x, company) → Sold(x, walmart)) ::: All coffee supplied by the company is sold in Walmart.\n∀x (Produced(x, columbia) → Produced(x, france)) ::: All coffee produced in Columbia is produced in France.\n∀x (Favored(x, localResidents) → Produced(x, columbia)) ::: All coffee favored by local residents is coffee produced in Columbia.\n∀x (Favored(x, localResidents) → Expensive"
    ]
  },
  {
    "id": "FOLIO_train_566",
    "context": "There are two places named Galicia: either in Spain or in Poland. Spain is in Europe. Poland is in Europe. Rochelle lives in Europe. Dominique does not live in Europe. Alfonso lives in Galicia.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Rochelle lives in Galicia.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGalicia(x) ::: x is in Galicia.\nSpain(x) ::: x is in Spain.\nPoland(x) ::: x is in Poland.\nEurope(x) ::: x is in Europe.\nLive(x, y) ::: x lives in y.\nPremises:\nGalicia(x) ∨ Spain(x) ::: There are two places named Galicia: either in Spain or in Poland.\nSpain(x) ∧ Europe(x) ::: Spain is in Europe.\nPoland(x) ∧ Europe(x) ::: Poland is in Europe.\nLive(rochelle, europe) ::: Rochelle lives in Europe.\n¬Live(dominique, europe) ::: Dominique does not live in Europe.\nLive(alfonso, galicia) ::: Alfonso lives in Galicia.\nConclusion:\nLive(rochelle, galicia) ::: Rochelle lives in Galicia.\n------\nProblem:\nThe first person to reach the South Pole was either Amundsen or Scott. Amundsen was Norwegian. Scott was British.\nQuestion:\nBased on the"
    ]
  },
  {
    "id": "FOLIO_train_567",
    "context": "There are two places named Galicia: either in Spain or in Poland. Spain is in Europe. Poland is in Europe. Rochelle lives in Europe. Dominique does not live in Europe. Alfonso lives in Galicia.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Dominique does not live in Spain.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGalicia(x) ::: x is in Galicia.\nSpain(x) ::: x is in Spain.\nPoland(x) ::: x is in Poland.\nEurope(x) ::: x is in Europe.\nLive(x, y) ::: x lives in y.\nPremises:\nGalicia(x) ∨ Spain(x) ::: There are two places named Galicia: either in Spain or in Poland.\nSpain(x) ∧ Europe(x) ::: Spain is in Europe.\nPoland(x) ∧ Europe(x) ::: Poland is in Europe.\nLive(rochelle, europe) ::: Rochelle lives in Europe.\n¬Live(dominique, europe) ::: Dominique does not live in Europe.\nLive(alfonso, galicia) ::: Alfonso lives in Galicia.\nConclusion:\n¬Live(dominique, spain) ::: Dominique does not live in Spain.\n------\nProblem:\nThe first person to reach the South Pole was either Amundsen or Scott. Amundsen was Norwegian. Scott was British.\nQuestion:\nBased on the"
    ]
  },
  {
    "id": "FOLIO_train_568",
    "context": "There are two places named Galicia: either in Spain or in Poland. Spain is in Europe. Poland is in Europe. Rochelle lives in Europe. Dominique does not live in Europe. Alfonso lives in Galicia.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Alfonso lives in Europe.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGalicia(x) ::: x is in Galicia.\nSpain(x) ::: x is in Spain.\nPoland(x) ::: x is in Poland.\nEurope(x) ::: x is in Europe.\nLive(x, y) ::: x lives in y.\nPremises:\nGalicia(x) ∨ Spain(x) ::: There are two places named Galicia: either in Spain or in Poland.\nSpain(x) ∧ Europe(x) ::: Spain is in Europe.\nPoland(x) ∧ Europe(x) ::: Poland is in Europe.\nLive(rochelle, europe) ::: Rochelle lives in Europe.\n¬Live(dominique, europe) ::: Dominique does not live in Europe.\nLive(alfonso, galicia) ::: Alfonso lives in Galicia.\nConclusion:\nEurope(alfonso) ::: Alfonso lives in Europe.\n------\nProblem:\nThe first person to reach the South Pole was either Amundsen or Scott. Amundsen was Norwegian. Scott was British.\nQuestion:\nBased on the above information, is the following statement"
    ]
  },
  {
    "id": "FOLIO_train_569",
    "context": "Ralph Hammerthaler was born in Wasserburg am Inn. Wasserburg am Inn is in Germany. Germany is in Europe. Ralph Hammerthaler is a German writer. Ralph Hammerthaler was born in 1965.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Ralph Hammerthaler is a writer born in Asia.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBorn(x, y) ::: x was born in y.\nGerman(x) ::: x is a German person.\nWriter(x) ::: x is a writer.\nIn(x, y) ::: x is in y.\nPremises:\nBorn(ralphHammerthaler, wasserburgAmInn) ∧ In(wasserburgAmInn, germany) ∧ In(germany, europe) ∧ German(ralphHammerthaler) ∧ Writer(ralphHammerthaler) ∧ Born(ralphHammerthaler, year1965) ::: Ralph Hammerthaler was born in Wasserburg am Inn. Wasserburg am Inn is in Germany. Germany is in Europe. Ralph Hammerthaler is a German writer. Ralph Hammerthaler was born in 1965.\nConclusion:\n¬Writer(ralphHammerthaler) ∧ Born(ralphHammerthaler, asia) ::: Ralph Hammerthaler is a writer born in Asia.\n------\nProblem:\nThe first person to be called a mathematician was Thales of M"
    ]
  },
  {
    "id": "FOLIO_train_570",
    "context": "Ralph Hammerthaler was born in Wasserburg am Inn. Wasserburg am Inn is in Germany. Germany is in Europe. Ralph Hammerthaler is a German writer. Ralph Hammerthaler was born in 1965.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Ralph Hammerthaler lives in Germany.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBorn(x, y) ::: x was born in y.\nIn(x, y) ::: x is in y.\nGerman(x) ::: x is a German person.\nWriter(x) ::: x is a writer.\nBornIn(x, y) ::: x was born in year y.\nPremises:\nBorn(ralph, wasserburgAmInn) ∧ In(wasserburgAmInn, germany) ∧ In(germany, europe) ::: Ralph Hammerthaler was born in Wasserburg am Inn. Wasserburg am Inn is in Germany. Germany is in Europe.\nGerman(ralph) ∧ Writer(ralph) ::: Ralph Hammerthaler is a German writer.\nBornIn(ralph, year1965) ::: Ralph Hammerthaler was born in 1965.\nConclusion:\nIn(ralph, germany) ::: Ralph Hammerthaler lives in Germany.\n------"
    ]
  },
  {
    "id": "FOLIO_train_571",
    "context": "All books written by Tomas have sold more than 1 million copies. Some books that have won Hugo Awards are written by Tomas. All books about the future are inspired by Shakespeare. 2001 is a book either inspired from Shakespeare or it has sold more than 1 million copies. 2001 is a book that has either sold more than 1 million copies or it was written by Tomas.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? 2001 is a book that has won a Hugo Award.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBook(x) ::: x is a book.\nWrittenBy(x, y) ::: x is written by y.\nSold(x, y) ::: x has sold more than y copies.\nHugoAward(x) ::: x has won a Hugo Award.\nInspiredBy(x, y) ::: x is inspired by y.\nPremises:\n∀x (WrittenBy(x, tomas) → Sold(x, 1000000)) ::: All books written by Tomas have sold more than 1 million copies.\n∃x (Book(x) ∧ HugoAward(x) ∧ WrittenBy(x, tomas)) ::: Some books that have won Hugo Awards are written by Tomas.\n∀x (InspiredBy(x, future) → InspiredBy(x, shakespeare)) ::: All books about the future are inspired by Shakespeare.\n(Book(2001) ∧ (Sold(200"
    ]
  },
  {
    "id": "FOLIO_train_572",
    "context": "All books written by Tomas have sold more than 1 million copies. Some books that have won Hugo Awards are written by Tomas. All books about the future are inspired by Shakespeare. 2001 is a book either inspired from Shakespeare or it has sold more than 1 million copies. 2001 is a book that has either sold more than 1 million copies or it was written by Tomas.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? 2001 is a book that has won a Hugo Award and is about the future.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBook(x) ::: x is a book.\nWrittenBy(x, y) ::: x is written by y.\nSold(x, y) ::: x has sold more than y copies.\nHugoAward(x) ::: x has won a Hugo Award.\nInspiredBy(x, y) ::: x is inspired by y.\nAbout(x, y) ::: x is about y.\nPremises:\n∀x (WrittenBy(x, tomas) → Sold(x, 1000000)) ::: All books written by Tomas have sold more than 1 million copies.\n∃x (Book(x) ∧ HugoAward(x) ∧ WrittenBy(x, tomas)) ::: Some books that have won Hugo Awards are written by Tomas.\n∀x (About(x, future) → InspiredBy(x, shakespeare)) ::: All books about the future are inspired by Shakespeare.\n(Book(200"
    ]
  },
  {
    "id": "FOLIO_train_573",
    "context": "All books written by Tomas have sold more than 1 million copies. Some books that have won Hugo Awards are written by Tomas. All books about the future are inspired by Shakespeare. 2001 is a book either inspired from Shakespeare or it has sold more than 1 million copies. 2001 is a book that has either sold more than 1 million copies or it was written by Tomas.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If 2001 either has won a Hugo Award and is about the future, or neither has won a Hugo Award nor is about the future, then 2001 has neither won a Hugo Award nor is written by Tomas.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBook(x) ::: x is a book.\nWrittenBy(x, y) ::: x is written by y.\nSold(x, y) ::: x has sold more than y copies.\nHugoAward(x) ::: x has won a Hugo Award.\nAbout(x, y) ::: x is about y.\nInspired(x, y) ::: x is inspired by y.\nPremises:\n∀x (WrittenBy(x, tomas) → Sold(x, 1000000)) ::: All books written by Tomas have sold more than 1 million copies.\n∃x (WrittenBy(x, tomas) ∧ HugoAward(x)) ::: Some books that have won Hugo Awards are written by Tomas.\n∀x (About(x, future) → Inspired(x, shakespeare)) ::: All books about the future are inspired by Shakespeare.\n(Sold(2001, 1000"
    ]
  },
  {
    "id": "FOLIO_train_574",
    "context": "No grass is food. All meadows are grass. All edible things are food. All fruits are edible. All lemons are fruit. Grapes are not edible and lemons. Bananas are grass or fruit.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Grapes are a food.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGrass(x) ::: x is grass.\nMeadow(x) ::: x is a meadow.\nFood(x) ::: x is food.\nEdible(x) ::: x is edible.\nFruit(x) ::: x is fruit.\nLemon(x) ::: x is a lemon.\nGrape(x) ::: x is a grape.\nBanana(x) ::: x is a banana.\nPremises:\n¬Grass(x) → ¬Food(x) ::: No grass is food.\n∀x (Meadow(x) → Grass(x)) ::: All meadows are grass.\n∀x (Edible(x) → Food(x)) ::: All edible things are food.\n∀x (Fruit(x) → Edible(x)) ::: All fruits are edible.\n∀x (Lemon(x) → Fruit(x)) ::: All lemons are fruit"
    ]
  },
  {
    "id": "FOLIO_train_575",
    "context": "No grass is food. All meadows are grass. All edible things are food. All fruits are edible. All lemons are fruit. Grapes are not edible and lemons. Bananas are grass or fruit.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Grapes are not a food.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGrass(x) ::: x is grass.\nMeadow(x) ::: x is a meadow.\nFood(x) ::: x is food.\nEdible(x) ::: x is edible.\nFruit(x) ::: x is fruit.\nLemon(x) ::: x is a lemon.\nGrape(x) ::: x is a grape.\nBanana(x) ::: x is a banana.\nPremises:\n¬Grass(x) ∧ Food(x) ::: No grass is food.\n∀x (Meadow(x) → Grass(x)) ::: All meadows are grass.\n∀x (Edible(x) → Food(x)) ::: All edible things are food.\n∀x (Fruit(x) → Edible(x)) ::: All fruits are edible.\n∀x (Lemon(x) → Fruit(x)) ::: All lemons are fruit."
    ]
  },
  {
    "id": "FOLIO_train_576",
    "context": "No grass is food. All meadows are grass. All edible things are food. All fruits are edible. All lemons are fruit. Grapes are not edible and lemons. Bananas are grass or fruit.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Bananas are a lemon and meadow.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGrass(x) ::: x is grass.\nFood(x) ::: x is food.\nEdible(x) ::: x is edible.\nFruit(x) ::: x is fruit.\nLemon(x) ::: x is a lemon.\nGrape(x) ::: x is a grape.\nMeadow(x) ::: x is a meadow.\nPremises:\n¬Grass(x) → ¬Food(x) ::: No grass is food.\n∀x (Meadow(x) → Grass(x)) ::: All meadows are grass.\n∀x (Edible(x) → Food(x)) ::: All edible things are food.\n∀x (Fruit(x) → Edible(x)) ::: All fruits are edible.\n∀x (Lemon(x) → Fruit(x)) ::: All lemons are fruit.\nGrape(x) ∧ Lemon(x)"
    ]
  },
  {
    "id": "FOLIO_train_577",
    "context": "No grass is food. All meadows are grass. All edible things are food. All fruits are edible. All lemons are fruit. Grapes are not edible and lemons. Bananas are grass or fruit.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Bananas are not both a lemon and a meadow.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGrass(x) ::: x is grass.\nFood(x) ::: x is food.\nEdible(x) ::: x is edible.\nFruit(x) ::: x is fruit.\nLemon(x) ::: x is a lemon.\nGrape(x) ::: x is a grape.\nMeadow(x) ::: x is a meadow.\nPremises:\n¬Grass(x) ∧ Food(x) ::: No grass is food.\n∀x (Meadow(x) → Grass(x)) ::: All meadows are grass.\n∀x (Edible(x) → Food(x)) ::: All edible things are food.\n∀x (Fruit(x) → Edible(x)) ::: All fruits are edible.\n∀x (Lemon(x) → Fruit(x)) ::: All lemons are fruit.\nGrape(x) ∧ Lemon(x) ∧"
    ]
  },
  {
    "id": "FOLIO_train_578",
    "context": "The Golden State Warriors are a team from San Francisco. The Golden State Warriors won the NBA finals. All teams attending the NBA finals have more than thirty years of history. Boston Celtics are a team that lost the NBA finals. If a team wins the NBA finals, then they will have more income. If a team wins or loses at the NBA finals, then they are attending the finals.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Boston Celtics is from San Francisco.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTeam(x) ::: x is a team.\nFrom(x, y) ::: x is from y.\nWin(x) ::: x wins.\nLose(x) ::: x loses.\nAttend(x) ::: x attends.\nHave(x, y) ::: x has y.\nIncome(x) ::: x is income.\nHistory(x) ::: x has history.\nPremises:\nTeam(goldenStateWarriors) ∧ From(goldenStateWarriors, sanFrancisco) ∧ Win(goldenStateWarriors) ::: The Golden State Warriors are a team from San Francisco. The Golden State Warriors won the NBA finals.\n∀x (Attend(x) → History(x)) ::: All teams attending the NBA finals have more than thirty years of history.\nTeam(bostonCeltics) ∧ Lose(bostonCeltics) ::: Boston Celtics are a team that"
    ]
  },
  {
    "id": "FOLIO_train_579",
    "context": "The Golden State Warriors are a team from San Francisco. The Golden State Warriors won the NBA finals. All teams attending the NBA finals have more than thirty years of history. Boston Celtics are a team that lost the NBA finals. If a team wins the NBA finals, then they will have more income. If a team wins or loses at the NBA finals, then they are attending the finals.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Boston Celtics has more than 30 years of experience.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTeam(x) ::: x is a team.\nFrom(x, y) ::: x is from y.\nWin(x) ::: x wins.\nLose(x) ::: x loses.\nAttend(x) ::: x attends.\nHistory(x, y) ::: x has y years of history.\nIncome(x, y) ::: x has y income.\nPremises:\nTeam(goldenStateWarriors) ∧ From(goldenStateWarriors, sanFrancisco) ∧ Win(goldenStateWarriors) ::: The Golden State Warriors are a team from San Francisco. The Golden State Warriors won the NBA finals.\n∀x (Attend(x) → History(x, moreThan30Years)) ::: All teams attending the NBA finals have more than thirty years of history.\nTeam(bostonCeltics) ∧ Lose(bostonCeltics) ::: Boston Celtics are"
    ]
  },
  {
    "id": "FOLIO_train_580",
    "context": "The Golden State Warriors are a team from San Francisco. The Golden State Warriors won the NBA finals. All teams attending the NBA finals have more than thirty years of history. Boston Celtics are a team that lost the NBA finals. If a team wins the NBA finals, then they will have more income. If a team wins or loses at the NBA finals, then they are attending the finals.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Golden State Warriors will have more income for gate receipts.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTeam(x) ::: x is a team.\nFrom(x, y) ::: x is from y.\nWin(x) ::: x wins.\nLose(x) ::: x loses.\nAttend(x) ::: x attends.\nHave(x, y) ::: x has y.\nIncome(x) ::: x is income.\nGateReceipt(x) ::: x is gate receipt.\nPremises:\nTeam(goldenStateWarriors) ∧ From(goldenStateWarriors, sanFrancisco) ∧ Win(goldenStateWarriors) ::: The Golden State Warriors are a team from San Francisco. The Golden State Warriors won the NBA finals.\n∀x (Attend(x) → ¬(Win(x) ∧ Lose(x))) ::: All teams attending the NBA finals have more than thirty years of history.\nTeam(bostonCeltics) ∧ Lose(bostonCeltics) ::: Boston Celtics are a team that lost the NBA finals.\nWin(x) → Have(x, income) ::: If a team wins the NBA finals, then they will have more income.\nAttend(x) → (Win(x) ∨ Lose(x)) ::: If a team wins or loses at the NBA finals, then they are attending the finals.\nConclusion:\nHave(goldenStateWarriors, income) ::: The Golden State Warriors will have more income for gate receipts.\n------"
    ]
  },
  {
    "id": "FOLIO_train_581",
    "context": "Maya will play violin if and only if she never injures her fingers. Volleyball players can injure their ankle, fingers, or shoulder. Maya is a volleyball player.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Maya will not play violin.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPlay(x, y) ::: x will play y.\nInjure(x, y) ::: x injures y.\nViolin(x) ::: x is a violin.\nFinger(x) ::: x is a finger.\nAnkle(x) ::: x is an ankle.\nShoulder(x) ::: x is a shoulder.\nVolleyballPlayer(x) ::: x is a volleyball player.\nPremises:\nPlay(maya, violin) ↔ ¬Injure(maya, finger) ::: Maya will play violin if and only if she never injures her fingers.\n∀x (VolleyballPlayer(x) → (Injure(x, ankle) ∨ Injure(x, finger) ∨ Injure(x, shoulder))) ::: Volleyball players can injure their ankle, fingers, or shoulder.\nVolleyballPlayer(maya) ::: Maya is a volleyball player.\nConclusion:\n¬Play(maya, violin) ::: Maya will not play violin.\n------\nProblem:\nA person is a student if and only if the person is a student at a university. A person is a student at a university if and only if the person is a student at a university in the United States. A person is a student at a university in the United States if and only if the person is a student at a university in the United States and the person is a student at a university in the United States.\nQuestion:\nBased on the above information, is the following statement"
    ]
  },
  {
    "id": "FOLIO_train_582",
    "context": "All devices belonging to the company are connected to Google Home. All devices with the company logo belong to the company. A device is either with the company logo or belongs to employees. All devices belonging to employees are available to connect to the company's wifi. All devices connected to Google Home are controlled by managers. All devices that connect to the company's wifi are easy to operate. All devices that are easy to operate are produced after 2020. IPod1 is produced before 2020.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? IPod1 is controlled by managers.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDevice(x) ::: x is a device.\nCompanyLogo(x) ::: x has the company logo.\nBelong(x, y) ::: x belongs to y.\nEmployee(x) ::: x is an employee.\nWifi(x) ::: x is a wifi.\nConnect(x, y) ::: x is connected to y.\nAvailable(x) ::: x is available.\nControl(x, y) ::: x is controlled by y.\nEasy(x) ::: x is easy.\nOperate(x) ::: x is operated.\nProduce(x, y) ::: x is produced in year y.\nPremises:\n∀x (Device(x) → Connect(x, googleHome)) ::: All devices belonging to the company are connected to Google Home.\n∀x (Device(x) → Belong(x, company) ∨ CompanyLogo(x)) ::: All devices with the company logo belong to the company. A device is either with the company logo or belongs to employees.\n∀x (Belong(x, employee) → Connect(x, wifi)) ::: All devices belonging to employees are available to connect to the company's wifi.\n∀x (Connect(x, googleHome) → Control(x, manager)) ::: All devices connected to Google Home are controlled by managers.\n∀x (Connect(x, wifi) → Easy(x)) ::: All devices that connect to the company's wifi are easy to operate.\n∀x (Easy(x) → Produce(x, year20"
    ]
  },
  {
    "id": "FOLIO_train_583",
    "context": "All devices belonging to the company are connected to Google Home. All devices with the company logo belong to the company. A device is either with the company logo or belongs to employees. All devices belonging to employees are available to connect to the company's wifi. All devices connected to Google Home are controlled by managers. All devices that connect to the company's wifi are easy to operate. All devices that are easy to operate are produced after 2020. IPod1 is produced before 2020.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? IPod1 is either produced after 2020 or controlled by managers.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDevice(x) ::: x is a device.\nCompanyLogo(x) ::: x has the company logo.\nBelong(x, y) ::: x belongs to y.\nEmployee(x) ::: x is an employee.\nWifi(x) ::: x is a wifi.\nConnect(x, y) ::: x is connected to y.\nAvailable(x) ::: x is available.\nControl(x, y) ::: x is controlled by y.\nEasy(x) ::: x is easy to operate.\nProduce(x, y) ::: x is produced in year y.\nPremises:\n∀x (Device(x) → Connect(x, googleHome)) ::: All devices belonging to the company are connected to Google Home.\n∀x (Device(x) → Belong(x, company) ∨ CompanyLogo(x)) ::: All devices with the company logo belong to the company.\n∀x (Device(x) → CompanyLogo(x) ∨ Belong(x, employee)) ::: A device is either with the company logo or belongs to employees.\n∀x (Belong(x, employee) → Connect(x, wifi)) ::: All devices belonging to employees are available to connect to the company's wifi.\n∀x (Connect(x, googleHome) → Control(x, manager)) ::: All devices connected to Google Home are controlled by managers.\n∀x (Connect(x, wifi) → Easy(x)) ::: All devices that connect to the company's wifi are easy to operate.\n∀"
    ]
  },
  {
    "id": "FOLIO_train_584",
    "context": "All devices belonging to the company are connected to Google Home. All devices with the company logo belong to the company. A device is either with the company logo or belongs to employees. All devices belonging to employees are available to connect to the company's wifi. All devices connected to Google Home are controlled by managers. All devices that connect to the company's wifi are easy to operate. All devices that are easy to operate are produced after 2020. IPod1 is produced before 2020.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? IPod1 is not with the company logo, and managers do not control it.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDevice(x) ::: x is a device.\nCompanyLogo(x) ::: x is with the company logo.\nBelong(x, y) ::: x belongs to y.\nEmployee(x) ::: x is an employee.\nWifi(x) ::: x is the company's wifi.\nConnect(x, y) ::: x is connected to y.\nControl(x, y) ::: x controls y.\nEasy(x) ::: x is easy to operate.\nProduce(x, y) ::: x is produced in year y.\nPremises:\n∀x (Device(x) → Connect(x, GoogleHome)) ::: All devices belonging to the company are connected to Google Home.\n∀x (Device(x) → Belong(x, company) ∨ CompanyLogo(x)) ::: All devices with the company logo belong to the company.\n∀x (Device(x) → CompanyLogo(x) ∨ Belong(x, employee)) ::: A device is either with the company logo or belongs to employees.\n∀x (Belong(x, employee) → Connect(x, wifi)) ::: All devices belonging to employees are available to connect to the company's wifi.\n∀x (Connect(x, GoogleHome) → Control(manager, x)) ::: All devices connected to Google Home are controlled by managers.\n∀x (Connect(x, wifi) → Easy(x)) ::: All devices that connect to the company's wifi are easy to operate.\n∀x (Easy(x) → Produ"
    ]
  },
  {
    "id": "FOLIO_train_585",
    "context": "All devices belonging to the company are connected to Google Home. All devices with the company logo belong to the company. A device is either with the company logo or belongs to employees. All devices belonging to employees are available to connect to the company's wifi. All devices connected to Google Home are controlled by managers. All devices that connect to the company's wifi are easy to operate. All devices that are easy to operate are produced after 2020. IPod1 is produced before 2020.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? IPod1 is either with the company logo or controlled by managers.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDevice(x) ::: x is a device.\nCompanyLogo(x) ::: x is with the company logo.\nBelong(x, y) ::: x belongs to y.\nEmployee(x) ::: x is an employee.\nWifi(x) ::: x is the company's wifi.\nConnect(x, y) ::: x is connected to y.\nAvailable(x) ::: x is available to connect to the company's wifi.\nControl(x, y) ::: x is controlled by y.\nEasy(x) ::: x is easy to operate.\nProduce(x, y) ::: x is produced in year y.\nPremises:\n∀x (Device(x) → Connect(x, googleHome)) ::: All devices belonging to the company are connected to Google Home.\n∀x (Device(x) → Belong(x, company) ∨ CompanyLogo(x)) ::: All devices with the company logo belong to the company. A device is either with the company logo or belongs to employees.\n∀x (Belong(x, employee) → Connect(x, wifi)) ::: All devices belonging to employees are available to connect to the company's wifi.\n∀x (Connect(x, googleHome) → Control(x, manager)) ::: All devices connected to Google Home are controlled by managers.\n∀x (Connect(x, wifi) → Easy(x)) ::: All devices that connect to the company's wifi are easy to operate.\n∀x (Easy(x) → Produce(x,"
    ]
  },
  {
    "id": "FOLIO_train_586",
    "context": "All CD players are delicate mechanisms. No delicate mechanisms are suitable toys for children.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Some CD players are suitable toys for children.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCDPlayer(x) ::: x is a CD player.\nDelicateMechanism(x) ::: x is a delicate mechanism.\nSuitableToy(x) ::: x is a suitable toy for children.\nPremises:\n∀x (CDPlayer(x) → DelicateMechanism(x)) ::: All CD players are delicate mechanisms.\n∀x (DelicateMechanism(x) → ¬SuitableToy(x)) ::: No delicate mechanisms are suitable toys for children.\nConclusion:\n¬∃x (CDPlayer(x) ∧ SuitableToy(x)) ::: Some CD players are suitable toys for children.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine"
    ]
  },
  {
    "id": "FOLIO_train_587",
    "context": "All mammals are living beings. All elephants are mammals. All baby elephants are elephants. Some baby elephants are sleepy. If Jumbo is a living being, then Jumbo is not an elephant or a mammal. If Jumbo is sleepy, then Jumbo is a baby elephant or an elephant.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jumbo is sleepy.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMammal(x) ::: x is a mammal.\nElephant(x) ::: x is an elephant.\nBabyElephant(x) ::: x is a baby elephant.\nLivingBeing(x) ::: x is a living being.\nSleepy(x) ::: x is sleepy.\nPremises:\n∀x (Mammal(x) → LivingBeing(x)) ::: All mammals are living beings.\n∀x (Elephant(x) → Mammal(x)) ::: All elephants are mammals.\n∀x (BabyElephant(x) → Elephant(x)) ::: All baby elephants are elephants.\n∃x (BabyElephant(x) ∧ Sleepy(x)) ::: Some baby elephants are sleepy.\n¬(LivingBeing(jumbo) ∨ Mammal(jumbo) ∨ Elephant(jumbo)) ::: If Jumbo is a living being, then Jumbo is not an elephant or a mammal.\n(Sleepy(jumbo) → (BabyElephant(jumbo) ∨ Elephant(jumbo))) ::: If Jumbo is sleepy, then Jumbo is a baby elephant or an elephant.\nConclusion:\nSleepy(jumbo) ::: Jumbo is sleepy.\n------\nProblem:\nAll people who"
    ]
  },
  {
    "id": "FOLIO_train_588",
    "context": "All mammals are living beings. All elephants are mammals. All baby elephants are elephants. Some baby elephants are sleepy. If Jumbo is a living being, then Jumbo is not an elephant or a mammal. If Jumbo is sleepy, then Jumbo is a baby elephant or an elephant.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jumbo is not sleepy.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMammal(x) ::: x is a mammal.\nElephant(x) ::: x is an elephant.\nBabyElephant(x) ::: x is a baby elephant.\nLivingBeing(x) ::: x is a living being.\nSleepy(x) ::: x is sleepy.\nPremises:\n∀x (Mammal(x) → LivingBeing(x)) ::: All mammals are living beings.\n∀x (Elephant(x) → Mammal(x)) ::: All elephants are mammals.\n∀x (BabyElephant(x) → Elephant(x)) ::: All baby elephants are elephants.\n∃x (BabyElephant(x) ∧ Sleepy(x)) ::: Some baby elephants are sleepy.\n¬(LivingBeing(jumbo) ∨ Mammal(jumbo) ∨ Elephant(jumbo)) ::: If Jumbo is a living being, then Jumbo is not an elephant or a mammal.\n(Sleepy(jumbo) → (BabyElephant(jumbo) ∨ Elephant(jumbo))) ::: If Jumbo is sleepy, then Jumbo is a baby elephant or an elephant.\nConclusion:\n¬Sleepy(jumbo) ::: Jumbo is not sleepy.\n------\nProblem:\nAll"
    ]
  },
  {
    "id": "FOLIO_train_589",
    "context": "All mammals are living beings. All elephants are mammals. All baby elephants are elephants. Some baby elephants are sleepy. If Jumbo is a living being, then Jumbo is not an elephant or a mammal. If Jumbo is sleepy, then Jumbo is a baby elephant or an elephant.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jumbo is a living being.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLivingBeing(x) ::: x is a living being.\nMammal(x) ::: x is a mammal.\nElephant(x) ::: x is an elephant.\nBabyElephant(x) ::: x is a baby elephant.\nSleepy(x) ::: x is sleepy.\nPremises:\n∀x (LivingBeing(x) → Mammal(x)) ::: All mammals are living beings.\n∀x (Elephant(x) → Mammal(x)) ::: All elephants are mammals.\n∀x (BabyElephant(x) → Elephant(x)) ::: All baby elephants are elephants.\n∃x (BabyElephant(x) ∧ Sleepy(x)) ::: Some baby elephants are sleepy.\n¬(LivingBeing(jumbo) ∨ Mammal(jumbo)) ::: If Jumbo is a living being, then Jumbo is not an elephant or a mammal.\n(Sleepy(jumbo) → (BabyElephant(jumbo) ∨ Elephant(jumbo))) ::: If Jumbo is sleepy, then Jumbo is a baby elephant or an elephant.\nConclusion:\nLivingBeing(jumbo) ::: Jumbo is a living being.\n------\nProblem:\nAll people who regularly drink coffee are dependent on c"
    ]
  },
  {
    "id": "FOLIO_train_590",
    "context": "All mammals are living beings. All elephants are mammals. All baby elephants are elephants. Some baby elephants are sleepy. If Jumbo is a living being, then Jumbo is not an elephant or a mammal. If Jumbo is sleepy, then Jumbo is a baby elephant or an elephant.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jumbo is neither sleepy nor a baby elephant.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMammal(x) ::: x is a mammal.\nElephant(x) ::: x is an elephant.\nBabyElephant(x) ::: x is a baby elephant.\nLivingBeing(x) ::: x is a living being.\nSleepy(x) ::: x is sleepy.\nPremises:\n∀x (Mammal(x) → LivingBeing(x)) ::: All mammals are living beings.\n∀x (Elephant(x) → Mammal(x)) ::: All elephants are mammals.\n∀x (BabyElephant(x) → Elephant(x)) ::: All baby elephants are elephants.\n∃x (BabyElephant(x) ∧ Sleepy(x)) ::: Some baby elephants are sleepy.\n¬(LivingBeing(jumbo) ∨ Mammal(jumbo)) ::: If Jumbo is a living being, then Jumbo is not an elephant or a mammal.\n(Sleepy(jumbo) → (BabyElephant(jumbo) ∨ Elephant(jumbo))) ::: If Jumbo is sleepy, then Jumbo is a baby elephant or an elephant.\nConclusion:\n¬(Sleepy(jumbo) ∨ BabyElephant(jumbo)) ::: Jumbo is neither sleepy nor a baby elephant.\n------"
    ]
  },
  {
    "id": "FOLIO_train_591",
    "context": "All mammals are living beings. All elephants are mammals. All baby elephants are elephants. Some baby elephants are sleepy. If Jumbo is a living being, then Jumbo is not an elephant or a mammal. If Jumbo is sleepy, then Jumbo is a baby elephant or an elephant.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jumbo is not sleepy or an elephant.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMammal(x) ::: x is a mammal.\nElephant(x) ::: x is an elephant.\nBabyElephant(x) ::: x is a baby elephant.\nLivingBeing(x) ::: x is a living being.\nSleepy(x) ::: x is sleepy.\nPremises:\n∀x (Mammal(x) → LivingBeing(x)) ::: All mammals are living beings.\n∀x (Elephant(x) → Mammal(x)) ::: All elephants are mammals.\n∀x (BabyElephant(x) → Elephant(x)) ::: All baby elephants are elephants.\n∃x (BabyElephant(x) ∧ Sleepy(x)) ::: Some baby elephants are sleepy.\n¬(LivingBeing(jumbo) ∨ Mammal(jumbo) ∨ Elephant(jumbo)) ::: If Jumbo is a living being, then Jumbo is not an elephant or a mammal.\n(Sleepy(jumbo) → (BabyElephant(jumbo) ∨ Elephant(jumbo))) ::: If Jumbo is sleepy, then Jumbo is a baby elephant or an elephant.\nConclusion:\n¬(Sleepy(jumbo) ∨ Elephant(jumbo)) ::: Jumbo is not sleepy or"
    ]
  },
  {
    "id": "FOLIO_train_592",
    "context": "No faculty does homework. All students do homework. All kids are students. If someone works at a school, then they are faculty. If Jill works at a school or is a teacher, then Jill works at a school.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jill works at a school.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFaculty(x) ::: x is faculty.\nStudent(x) ::: x is a student.\nKid(x) ::: x is a kid.\nWork(x, y) ::: x works at y.\nTeacher(x) ::: x is a teacher.\nPremises:\n¬∃x (Faculty(x) ∧ Work(x, homework)) ::: No faculty does homework.\n∀x (Student(x) → Work(x, homework)) ::: All students do homework.\n∀x (Kid(x) → Student(x)) ::: All kids are students.\nWork(x, school) → Faculty(x) ::: If someone works at a school, then they are faculty.\n(Work(jill, school) ∨ Teacher(jill)) → Work(jill, school) ::: If Jill works at a school or is a teacher, then Jill works at a school.\nConclusion:\nWork(jill, school) ::: Jill works at a school.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain"
    ]
  },
  {
    "id": "FOLIO_train_593",
    "context": "No faculty does homework. All students do homework. All kids are students. If someone works at a school, then they are faculty. If Jill works at a school or is a teacher, then Jill works at a school.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jill is a kid.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFaculty(x) ::: x is faculty.\nStudent(x) ::: x is a student.\nKid(x) ::: x is a kid.\nTeacher(x) ::: x is a teacher.\nWork(x, y) ::: x works at y.\nSchool(y) ::: y is a school.\nPremises:\n¬∃x (Faculty(x) ∧ Homework(x)) ::: No faculty does homework.\n∀x (Student(x) → Homework(x)) ::: All students do homework.\n∀x (Kid(x) → Student(x)) ::: All kids are students.\nWork(x, y) → Faculty(x) ::: If someone works at a school, then they are faculty.\n(Work(jill, school) ∨ Teacher(jill)) → Work(jill, school) ::: If Jill works at a school or is a teacher, then Jill works at a school.\nConclusion:\nKid(jill) ::: Jill is a kid.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.\nQuestion:\nBased on the above information, is the following"
    ]
  },
  {
    "id": "FOLIO_train_594",
    "context": "No faculty does homework. All students do homework. All kids are students. If someone works at a school, then they are faculty. If Jill works at a school or is a teacher, then Jill works at a school.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jill is not a kid.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFaculty(x) ::: x is faculty.\nStudent(x) ::: x is a student.\nKid(x) ::: x is a kid.\nTeacher(x) ::: x is a teacher.\nWork(x, y) ::: x works at y.\nSchool(y) ::: y is a school.\nPremises:\n¬∃x (Faculty(x) ∧ Homework(x)) ::: No faculty does homework.\n∀x (Student(x) → Homework(x)) ::: All students do homework.\n∀x (Kid(x) → Student(x)) ::: All kids are students.\nWork(x, y) → School(y) ::: If someone works at a school, then they are faculty.\n(Work(jill, school) ∨ Teacher(jill)) → Work(jill, school) ::: If Jill works at a school or is a teacher, then Jill works at a school.\nConclusion:\n¬Kid(jill) ::: Jill is not a kid.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.\nQuestion:\nBased on the above information, is the"
    ]
  },
  {
    "id": "FOLIO_train_595",
    "context": "Either Max listens to classical music or Max listens to rap. All the songs that Max listens to that are classical music are from the 12th century. If the song Max listens to is rap, then the song is from Kanye West. If a songs is from Kanye West, then the song is full of lyrics. All songs that are full of lyrics need to be written with words If “As it was” by Harry Styles is classical music that Max listens to or  from the 12th century, then “As it was” by Harry Styles is either classical music that Max listens to, or the songs are from 12th century.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? “As it was” by Harry Styles needs to be written with words.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nListen(x, y) ::: x listens to y.\nClassicalMusic(x) ::: x is classical music.\nRap(x) ::: x is rap.\nSong(x) ::: x is a song.\nFrom(x, y) ::: x is from y.\nCentury(x) ::: x is from the century.\nKanyeWest(x) ::: x is from Kanye West.\nLyrics(x) ::: x is full of lyrics.\nWords(x) ::: x needs to be written with words.\nPremises:\nListen(max, classicalMusic) ∨ Listen(max, rap) ::: Either Max listens to classical music or Max listens to rap.\n∀x (ClassicalMusic(x) → From(x, century12)) ::: All the songs that Max listens to that are classical music are from the 12th century.\nIf(Listen(max, rap), KanyeWest(song)) ::: If the song Max listens to is rap, then the song is from Kanye West.\nIf(KanyeWest(song), Lyrics(song)) ::: If a songs is from Kanye West, then the song is full of lyrics.\n∀x (Lyrics(x) → Words(x)) ::: All songs that are full of lyrics need to be written with words.\nIf(ClassicalMusic(song), Listen(max, song)) ∨ If(From(song, century12), Listen(max, song)) ::: If “"
    ]
  },
  {
    "id": "FOLIO_train_596",
    "context": "Either Max listens to classical music or Max listens to rap. All the songs that Max listens to that are classical music are from the 12th century. If the song Max listens to is rap, then the song is from Kanye West. If a songs is from Kanye West, then the song is full of lyrics. All songs that are full of lyrics need to be written with words If “As it was” by Harry Styles is classical music that Max listens to or  from the 12th century, then “As it was” by Harry Styles is either classical music that Max listens to, or the songs are from 12th century.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? \"As it was” by Harry Styles is a song from the 12th century.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nListen(x, y) ::: x listens to y.\nClassicalMusic(x) ::: x is classical music.\nRap(x) ::: x is rap.\nSong(x) ::: x is a song.\nFrom(x, y) ::: x is from y.\nCentury(x) ::: x is from the century.\nKanyeWest(x) ::: x is from Kanye West.\nLyrics(x) ::: x is full of lyrics.\nWords(x) ::: x is written with words.\nPremises:\n(Listen(max, classicalMusic) ∨ Listen(max, rap)) ::: Either Max listens to classical music or Max listens to rap.\n∀x (ClassicalMusic(x) → From(x, century12)) ::: All the songs that Max listens to that are classical music are from the 12th century.\n(Listen(max, rap) → KanyeWest(rap)) ::: If the song Max listens to is rap, then the song is from Kanye West.\n(KanyeWest(x) → Lyrics(x)) ::: If a songs is from Kanye West, then the song is full of lyrics.\n∀x (Lyrics(x) → Words(x)) ::: All songs that are full of lyrics need to be written with words.\n(Listen(max, classicalMusic) ∨ From(classicalMusic, century12)) ::: If “As it was” by Harry Styles is classical music that Max list"
    ]
  },
  {
    "id": "FOLIO_train_597",
    "context": "Either Max listens to classical music or Max listens to rap. All the songs that Max listens to that are classical music are from the 12th century. If the song Max listens to is rap, then the song is from Kanye West. If a songs is from Kanye West, then the song is full of lyrics. All songs that are full of lyrics need to be written with words If “As it was” by Harry Styles is classical music that Max listens to or  from the 12th century, then “As it was” by Harry Styles is either classical music that Max listens to, or the songs are from 12th century.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? \"As it was” by Harry Styles is not a song from Kanye West and needs to be written with words.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nListen(x, y) ::: x listens to y.\nClassicalMusic(x) ::: x is classical music.\nRap(x) ::: x is rap.\nSong(x) ::: x is a song.\nFrom(x, y) ::: x is from y.\nCentury(x) ::: x is from the century.\nKanyeWest(x) ::: x is from Kanye West.\nLyrics(x) ::: x is full of lyrics.\nWords(x) ::: x needs to be written with words.\nPremises:\nListen(max, classicalMusic) ∨ Listen(max, rap) ::: Either Max listens to classical music or Max listens to rap.\n∀x (ClassicalMusic(x) → From(x, 12thCentury)) ::: All the songs that Max listens to that are classical music are from the 12th century.\nIf(Listen(max, rap), KanyeWest(song)) ::: If the song Max listens to is rap, then the song is from Kanye West.\nIf(KanyeWest(song), Lyrics(song)) ::: If a songs is from Kanye West, then the song is full of lyrics.\n∀x (Lyrics(x) → Words(x)) ::: All songs that are full of lyrics need to be written with words.\nIf(ClassicalMusic(song), Listen(max, song)) ∨ If(From(song, 12thCentury), Listen(max,"
    ]
  },
  {
    "id": "FOLIO_train_598",
    "context": "\"Your Woman\" is a song by British one-man band White Town. \"Your Woman\" song peaked at No. 1 on the UK Singles Chart. If a song peaked at No.1 at a cetain place, then it was extremely popular. \"Your Woman\" also peaked No. 1 in Iceland, Israel and Spain.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? \"Your Woman\" was extremely popular.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSong(x) ::: x is a song.\nPeak(x, y) ::: x peaked at y.\nPopular(x) ::: x is popular.\nPremises:\nSong(yourWoman) ∧ Peak(yourWoman, uk) ∧ Peak(yourWoman, iceland) ∧ Peak(yourWoman, israel) ∧ Peak(yourWoman, spain) ::: \"Your Woman\" is a song by British one-man band White Town. \"Your Woman\" song peaked at No. 1 on the UK Singles Chart.\n∀x (Peak(x, y) → Popular(x)) ::: If a song peaked at No.1 at a cetain place, then it was extremely popular.\nConclusion:\nPopular(yourWoman) ::: \"Your Woman\" was extremely popular.\n------\nProblem:\nThe 1999 film The Matrix was written and directed by the Wachowskis. The Matrix was released in 1999. The Matrix was a science fiction action film. The Matrix was a commercial success. The Matrix was the highest-grossing R-rated film of all time. The Matrix was the fourth highest-grossing film of 1999.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The Matrix was a commercial success.\nBased on the above information, is the following statement true, false, or uncertain? The Matrix was the highest-grossing R-rated film of all time.\nBased on the above information,"
    ]
  },
  {
    "id": "FOLIO_train_599",
    "context": "\"Your Woman\" is a song by British one-man band White Town. \"Your Woman\" song peaked at No. 1 on the UK Singles Chart. If a song peaked at No.1 at a cetain place, then it was extremely popular. \"Your Woman\" also peaked No. 1 in Iceland, Israel and Spain.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? White Town did not produce any popular song.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSong(x) ::: x is a song.\nPeak(x, y) ::: x peaked at No. y.\nPopular(x) ::: x is popular.\nPremises:\nSong(yourWoman) ∧ Peak(yourWoman, 1) ∧ Peak(yourWoman, iceland) ∧ Peak(yourWoman, israel) ∧ Peak(yourWoman, spain) ::: \"Your Woman\" is a song by British one-man band White Town. \"Your Woman\" song peaked at No. 1 on the UK Singles Chart. If a song peaked at No.1 at a cetain place, then it was extremely popular. \"Your Woman\" also peaked No. 1 in Iceland, Israel and Spain.\nConclusion:\n¬Popular(yourWoman) ::: White Town did not produce any popular song.\n------\nProblem:\nThe 2010 FIFA World Cup was the 19th FIFA World Cup, the world championship for men's national association football teams. It took place in South Africa from 11 June to 11 July 2010. The bidding process for hosting the tournament finals was open only to African nations. The 2010 FIFA World Cup was awarded to South Africa.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The 2010 FIFA World Cup was awarded to South Africa.\nBased on the above information, is the following statement true, false, or uncertain? The 2010 FIFA World Cup"
    ]
  },
  {
    "id": "FOLIO_train_600",
    "context": "\"Your Woman\" is a song by British one-man band White Town. \"Your Woman\" song peaked at No. 1 on the UK Singles Chart. If a song peaked at No.1 at a cetain place, then it was extremely popular. \"Your Woman\" also peaked No. 1 in Iceland, Israel and Spain.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? White Town was a successful band.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSong(x) ::: x is a song.\nPeak(x, y) ::: x peaked at y.\nPopular(x) ::: x is popular.\nSuccessful(x) ::: x is successful.\nPremises:\nSong(yourWoman) ∧ Peak(yourWoman, uk) ∧ Peak(yourWoman, iceland) ∧ Peak(yourWoman, israel) ∧ Peak(yourWoman, spain) ::: \"Your Woman\" is a song by British one-man band White Town. \"Your Woman\" song peaked at No. 1 on the UK Singles Chart. If a song peaked at No.1 at a cetain place, then it was extremely popular. \"Your Woman\" also peaked No. 1 in Iceland, Israel and Spain.\nConclusion:\nSuccessful(whiteTown) ::: White Town was a successful band.\n------"
    ]
  },
  {
    "id": "FOLIO_train_601",
    "context": "All people who limp often and regularly have long-term medical issues with underlying causes. If people have long-term medical issues with underlying causes, then they are not often spry and energetic. People either stay indoors and rest a lot at home or people are often tired and disinterested in their activities. If people stay indoors and rest a lot at home, then they do not visit the gym at least once a day. If Mark either limps often and regularly or is often spry and energetic, then Mark limps often and regularly or is often tired and disinterested in his activities.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mark limps often and regularly.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLimp(x) ::: x limps often and regularly.\nSpry(x) ::: x is often spry and energetic.\nLongTermMedicalIssue(x) ::: x has long-term medical issues with underlying causes.\nTired(x) ::: x is often tired and disinterested in his activities.\nStayIndoors(x) ::: x stays indoors and rest a lot at home.\nVisitGym(x) ::: x visits the gym at least once a day.\nPremises:\n∀x (Limp(x) → LongTermMedicalIssue(x)) ::: All people who limp often and regularly have long-term medical issues with underlying causes.\n¬(LongTermMedicalIssue(x) → Spry(x)) ::: If people have long-term medical issues with underlying causes, then they are not often spry and energetic."
    ]
  },
  {
    "id": "FOLIO_train_602",
    "context": "All people who limp often and regularly have long-term medical issues with underlying causes. If people have long-term medical issues with underlying causes, then they are not often spry and energetic. People either stay indoors and rest a lot at home or people are often tired and disinterested in their activities. If people stay indoors and rest a lot at home, then they do not visit the gym at least once a day. If Mark either limps often and regularly or is often spry and energetic, then Mark limps often and regularly or is often tired and disinterested in his activities.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mark visits the gym at least once a day.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLimp(x) ::: x limps often and regularly.\nSpry(x) ::: x is often spry and energetic.\nLongTermMedicalIssue(x) ::: x has long-term medical issues with underlying causes.\nTired(x) ::: x is often tired and disinterested in his activities.\nStayIndoors(x) ::: x stays indoors and rest a lot at home.\nVisitGym(x) ::: x visits the gym at least once a day.\nPremises:\n∀x (Limp(x) → LongTermMedicalIssue(x)) ::: All people who limp often and regularly have long-term medical issues with underlying causes.\n¬(LongTermMedicalIssue(x) ∧ Spry(x)) ::: If people have long-term medical issues with underlying causes, then they are not often spry and energetic"
    ]
  },
  {
    "id": "FOLIO_train_603",
    "context": "All people who limp often and regularly have long-term medical issues with underlying causes. If people have long-term medical issues with underlying causes, then they are not often spry and energetic. People either stay indoors and rest a lot at home or people are often tired and disinterested in their activities. If people stay indoors and rest a lot at home, then they do not visit the gym at least once a day. If Mark either limps often and regularly or is often spry and energetic, then Mark limps often and regularly or is often tired and disinterested in his activities.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mark stays indoors and rests regularly at his home or visits the gym at least once a day.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLimp(x) ::: x limps often and regularly.\nSpry(x) ::: x is often spry and energetic.\nLongTermMedicalIssue(x) ::: x has long-term medical issues with underlying causes.\nTired(x) ::: x is often tired and disinterested in his activities.\nStayIndoors(x) ::: x stays indoors and rests a lot at home.\nVisitGym(x) ::: x visits the gym at least once a day.\nPremises:\n∀x (Limp(x) → LongTermMedicalIssue(x)) ::: All people who limp often and regularly have long-term medical issues with underlying causes.\n¬(LongTermMedicalIssue(x) ∧ Spry(x)) ::: If people have long-term medical issues with underlying causes, then they are not often spry and energet"
    ]
  },
  {
    "id": "FOLIO_train_604",
    "context": "If two soccer teams score the same number of goals in one UCL final during the regular time, they need to play for the extra time. If two soccer teams score the same number of goals in one UCL final during both the regular time and extra time, they need to play the penalty shoot-out. Real Madrid and Atlético Madrid both scored one goal in 2016 UCL final during the regular time. Real Madrid and Atlético Madrid both scored zero goals in 2016 UCL final during the extra time.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Real Madrid and Atlético Madrid needed to play a penalty shoot-out in 2016 UCL final.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nScore(x, y, z) ::: x scored y goals in z.\nSame(x, y) ::: x is the same as y.\nRegularTime(x) ::: x is the regular time.\nExtraTime(x) ::: x is the extra time.\nPenaltyShootOut(x) ::: x is the penalty shoot-out.\nFinal(x) ::: x is a final.\nUCL(x) ::: x is a UCL final.\nPremises:\n∀x ∀y ∀z (Same(x, y) → Score(x, z, regularTime(x)) → Score(y, z, regularTime(x))) ::: If two soccer teams score the same number of goals in one UCL final during the regular time, they need to play for the extra time.\n∀x ∀y ∀z (Same(x, y) → Score("
    ]
  },
  {
    "id": "FOLIO_train_605",
    "context": "If two soccer teams score the same number of goals in one UCL final during the regular time, they need to play for the extra time. If two soccer teams score the same number of goals in one UCL final during both the regular time and extra time, they need to play the penalty shoot-out. Real Madrid and Atlético Madrid both scored one goal in 2016 UCL final during the regular time. Real Madrid and Atlético Madrid both scored zero goals in 2016 UCL final during the extra time.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Real Madrid and Atlético Madrid did not need to play a penalty shoot-out in 2016 UCL final.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSame(x, y) ::: x is the same as y.\nScore(x, y) ::: x scores y goals.\nTeam(x) ::: x is a soccer team.\nFinal(x) ::: x is a UCL final.\nRegularTime(x) ::: x is the regular time of a UCL final.\nExtraTime(x) ::: x is the extra time of a UCL final.\nPenaltyShootOut(x) ::: x is the penalty shoot-out of a UCL final.\nPremises:\n∀x ∀y (Same(x, y) → (Score(x, y) ∧ Score(y, x))) ::: If two soccer teams score the same number of goals in one UCL final during the regular time, they need to play for the extra time.\n∀x ∀y (Same(x, y) → (Score(x, y"
    ]
  },
  {
    "id": "FOLIO_train_606",
    "context": "System 7 is a UK-based electronic dance music band. Steve Hillage and Miquette Giraudy formed System 7. Steve Hillage and Miquette Giraudy are former members of the band Gong. Electric dance music bands are bands. System 7 has released several club singles. Club singles are not singles.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? System 7 was formed by former members of Gong.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nForm(x, y) ::: x formed y.\nMember(x, y) ::: x is a member of y.\nBand(x) ::: x is a band.\nElectronicDanceMusicBand(x) ::: x is an electronic dance music band.\nClubSingle(x) ::: x is a club single.\nSingle(x) ::: x is a single.\nRelease(x, y) ::: x released y.\nPremises:\nForm(steveHillage, system7) ∧ Form(miquetteGiraudy, system7) ::: Steve Hillage and Miquette Giraudy formed System 7.\nMember(steveHillage, gong) ∧ Member(miquetteGiraudy, gong) ::: Steve Hillage and Miquette Giraudy are former members of the band Gong.\n∀x (ElectronicD"
    ]
  },
  {
    "id": "FOLIO_train_607",
    "context": "System 7 is a UK-based electronic dance music band. Steve Hillage and Miquette Giraudy formed System 7. Steve Hillage and Miquette Giraudy are former members of the band Gong. Electric dance music bands are bands. System 7 has released several club singles. Club singles are not singles.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? System 7 has released several singles.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSystem7(x) ::: x is System 7.\nBand(x) ::: x is a band.\nElectronicDanceMusicBand(x) ::: x is an electronic dance music band.\nFormerMember(x, y) ::: x is a former member of y.\nGong(x) ::: x is Gong.\nClubSingle(x) ::: x is a club single.\nSingle(x) ::: x is a single.\nRelease(x, y) ::: x has released y.\nPremises:\nSystem7(system7) ∧ Band(system7) ∧ ElectronicDanceMusicBand(system7) ::: System 7 is a UK-based electronic dance music band.\nFormerMember(steve, gong) ∧ FormerMember(miquette, gong) ::: Steve Hillage and Miquette Giraudy are former members of the band"
    ]
  },
  {
    "id": "FOLIO_train_608",
    "context": "System 7 is a UK-based electronic dance music band. Steve Hillage and Miquette Giraudy formed System 7. Steve Hillage and Miquette Giraudy are former members of the band Gong. Electric dance music bands are bands. System 7 has released several club singles. Club singles are not singles.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? System 7 is not a band.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBand(x) ::: x is a band.\nElectronicDanceMusicBand(x) ::: x is an electronic dance music band.\nFormerMember(x, y) ::: x is a former member of y.\nForm(x, y) ::: x formed y.\nClubSingle(x) ::: x is a club single.\nSingle(x) ::: x is a single.\nRelease(x, y) ::: x released y.\nPremises:\nElectronicDanceMusicBand(system7) ∧ Form(steveHillage, system7) ∧ Form(miquetteGiraudy, system7) ∧ FormerMember(steveHillage, gong) ∧ FormerMember(miquetteGiraudy, gong) ::: System 7 is a UK-based electronic dance music band. Steve Hillage and Miquette Giraudy"
    ]
  },
  {
    "id": "FOLIO_train_609",
    "context": "A summarization model is always faithful if it uses content from the input documents. Extractive models are a kind of summarization models. Extractive model can only use content from the input documents.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Extractive models are always faithful.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFaithful(x) ::: x is faithful.\nSummarizationModel(x) ::: x is a summarization model.\nExtractiveModel(x) ::: x is an extractive model.\nUses(x, y) ::: x uses y.\nContent(x) ::: x is content.\nInputDocument(x) ::: x is an input document.\nPremises:\n∀x (SummarizationModel(x) → (Faithful(x) ↔ Uses(x, Content(x)))) ::: A summarization model is always faithful if it uses content from the input documents.\nExtractiveModel(x) ∧ Uses(x, Content(x)) ::: Extractive models are a kind of summarization models. Extractive model can only use content from the input documents.\nConclusion:\nFaithful(x) ::: Extractive models are always faithful.\n------\nProblem:\nA"
    ]
  },
  {
    "id": "FOLIO_train_610",
    "context": "A summarization model is always faithful if it uses content from the input documents. Extractive models are a kind of summarization models. Extractive model can only use content from the input documents.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Extractive models are not always faithful.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFaithful(x) ::: x is faithful.\nSummarizationModel(x) ::: x is a summarization model.\nExtractiveModel(x) ::: x is an extractive model.\nExtractive(x) ::: x is extractive.\nPremises:\n∀x (SummarizationModel(x) → (Faithful(x) ↔ (Extractive(x) ∧ Use(x, contentFromInputDocuments)))) ::: A summarization model is always faithful if it uses content from the input documents.\nExtractiveModel(x) ↔ SummarizationModel(x) ∧ Extractive(x) ::: Extractive models are a kind of summarization models.\nExtractive(x) → Use(x, contentFromInputDocuments) ::: Extractive model can only use content from the input documents.\nConclusion:\n¬Faithful(x) ::: Extractive models are not always faithful.\n------"
    ]
  },
  {
    "id": "FOLIO_train_611",
    "context": "If people practice coding questions, then they are not studying to go to medical school to become a doctor. If people want to work in the software engineering industry, then they practice coding questions. If people enjoy healthcare fields and want to help people with medical issues, then they are studying to go to medical school to become a doctor. If people grew up with parents who worked as doctors, then they enjoy healthcare fields and want to help people with medical issues. If people study hard, then they grew up with parents who worked as doctors. If Robin neither enjoys healthcare fields and wants to help people with medical issues nor grew up with parents who worked as doctors, then Robin is either a person who studies hard or grew up with parents who worked as doctors.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Robin is a person who studies hard.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPractice(x) ::: x practices coding questions.\nWork(x) ::: x works in the software engineering industry.\nEnjoy(x, y) ::: x enjoys y.\nWant(x, y) ::: x wants to y.\nStudy(x) ::: x studies.\nGrowUp(x, y) ::: x grew up with parents who worked as y.\nHard(x) ::: x studies hard.\nDoctor(x) ::: x is a doctor.\nMedicalSchool(x) ::: x is studying to go to medical school to become a doctor.\nHelp(x, y) ::: x helps y.\nIssue(x) ::: x has an issue.\nMedical(x) ::: x is a medical issue.\nPeople(x) ::: x is a person.\nPremises:\n¬(Practice(x) ∧ MedicalSchool(x)) :::"
    ]
  },
  {
    "id": "FOLIO_train_612",
    "context": "If people practice coding questions, then they are not studying to go to medical school to become a doctor. If people want to work in the software engineering industry, then they practice coding questions. If people enjoy healthcare fields and want to help people with medical issues, then they are studying to go to medical school to become a doctor. If people grew up with parents who worked as doctors, then they enjoy healthcare fields and want to help people with medical issues. If people study hard, then they grew up with parents who worked as doctors. If Robin neither enjoys healthcare fields and wants to help people with medical issues nor grew up with parents who worked as doctors, then Robin is either a person who studies hard or grew up with parents who worked as doctors.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Robin practices coding questions and wants to work in the software engineering industry.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "a\nPredicates:\nPractice(x) ::: x practices coding questions.\nWant(x, y) ::: x wants to y.\nStudy(x) ::: x studies.\nEnjoy(x, y) ::: x enjoys y.\nWantHelp(x, y) ::: x wants to help y.\nGrowUp(x, y) ::: x grew up with parents who worked as y.\nDoctor(x) ::: x is a doctor.\nPremises:\n¬(Practice(x) ∧ Study(x)) ::: If people practice coding questions, then they are not studying to go to medical school to become a doctor.\nPractice(x) → Want(x, softwareEngineeringIndustry) ::: If people want to work in the software engineering industry, then they practice coding questions.\nWant(x, helpMedicalIssues) ∧ Enjoy(x, healthcareFields) → Study("
    ]
  },
  {
    "id": "FOLIO_train_613",
    "context": "If people practice coding questions, then they are not studying to go to medical school to become a doctor. If people want to work in the software engineering industry, then they practice coding questions. If people enjoy healthcare fields and want to help people with medical issues, then they are studying to go to medical school to become a doctor. If people grew up with parents who worked as doctors, then they enjoy healthcare fields and want to help people with medical issues. If people study hard, then they grew up with parents who worked as doctors. If Robin neither enjoys healthcare fields and wants to help people with medical issues nor grew up with parents who worked as doctors, then Robin is either a person who studies hard or grew up with parents who worked as doctors.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Robin neither practices coding questions nor works to work in the software engineering industry.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "a\nPredicates:\nPractice(x) ::: x practices coding questions.\nWork(x) ::: x works in the software engineering industry.\nStudy(x) ::: x studies to go to medical school to become a doctor.\nEnjoy(x) ::: x enjoys healthcare fields.\nHelp(x) ::: x wants to help people with medical issues.\nGrowUp(x) ::: x grew up with parents who worked as doctors.\nHard(x) ::: x studies hard.\nPremises:\n¬(Practice(x) ∧ Study(x)) ::: If people practice coding questions, then they are not studying to go to medical school to become a doctor.\n(Work(x) → Practice(x)) ::: If people want to work in the software engineering industry, then they practice coding questions.\n(Enjoy(x) ∧ Help(x)) → Study(x) ::: If people enjoy healthcare fields and want to"
    ]
  },
  {
    "id": "FOLIO_train_614",
    "context": "If people go to the spa at least once a week, then they are not people who are miserly and need to save a large portion of their income. People are either miserly and need to save a large portion of their income, or people that frivolously spend a lot of money every time they go out. If people frivolously spend a lot of money every time they go out, then they value quality manufacturing and luxury items. If people value quality manufacturing and luxury items, then they enjoy shopping for materialistic items in their free time. If Jess is not miserly and needs to save a large portion of their income, then Jess does not value quality manufacturing and luxury items. If Jess either values quality manufacturing and luxury items or, if he does not, then he is miserly and needs to save a large portion of his income, then Jess frivolously spends a lot of money every time he goes out.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jess frivolously spends a lot of money every time they go out.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSpa(x) ::: x goes to the spa.\nMiserly(x) ::: x is miserly.\nSave(x) ::: x needs to save a large portion of their income.\nFrivolous(x) ::: x frivolously spends a lot of money every time they go out.\nQuality(x) ::: x values quality manufacturing.\nLuxury(x) ::: x values luxury items.\nEnjoy(x) ::: x enjoys shopping for materialistic items in their free time.\nPremises:\n¬(Spa(x) → ¬(Miserly(x) ∧ Save(x))) ::: If people go to the spa at least once a week, then they are not people who are miserly and need to save a large portion of their income.\n(Miserly(x) ∧ Save(x)) ∨ Frivolous(x) ::: People are either miser"
    ]
  },
  {
    "id": "FOLIO_train_615",
    "context": "If people go to the spa at least once a week, then they are not people who are miserly and need to save a large portion of their income. People are either miserly and need to save a large portion of their income, or people that frivolously spend a lot of money every time they go out. If people frivolously spend a lot of money every time they go out, then they value quality manufacturing and luxury items. If people value quality manufacturing and luxury items, then they enjoy shopping for materialistic items in their free time. If Jess is not miserly and needs to save a large portion of their income, then Jess does not value quality manufacturing and luxury items. If Jess either values quality manufacturing and luxury items or, if he does not, then he is miserly and needs to save a large portion of his income, then Jess frivolously spends a lot of money every time he goes out.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jess either enjoys shopping for materialistic items in his free time or, if he does not, then he goes to the spa at least once a week.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMiserly(x) ::: x is miserly.\nNeed(x, y) ::: x needs to save a large portion of their income.\nSpa(x) ::: x goes to the spa at least once a week.\nFrivolous(x) ::: x frivolously spends a lot of money every time they go out.\nValue(x, y) ::: x values quality manufacturing and luxury items.\nEnjoy(x, y) ::: x enjoys shopping for materialistic items in their free time.\nPremises:\n¬(Spa(x) ∧ Miserly(x) ∧ Need(x, largePortion)) ::: If people go to the spa at least once a week, then they are not people who are miserly and need to save a large portion of their income.\n(Miserly(x) ∧ Need(x, largePortion)) ∨ Frivolous(x)"
    ]
  },
  {
    "id": "FOLIO_train_616",
    "context": "If people go to the spa at least once a week, then they are not people who are miserly and need to save a large portion of their income. People are either miserly and need to save a large portion of their income, or people that frivolously spend a lot of money every time they go out. If people frivolously spend a lot of money every time they go out, then they value quality manufacturing and luxury items. If people value quality manufacturing and luxury items, then they enjoy shopping for materialistic items in their free time. If Jess is not miserly and needs to save a large portion of their income, then Jess does not value quality manufacturing and luxury items. If Jess either values quality manufacturing and luxury items or, if he does not, then he is miserly and needs to save a large portion of his income, then Jess frivolously spends a lot of money every time he goes out.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Jess either enjoys shopping for materialistic items in his free time or, if he does not, then he goes to the spa at least once a week, then Jess neither values quality manufacturing and luxury items nor goes to the spa at least once a week.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMiserly(x) ::: x is miserly.\nNeed(x, y) ::: x needs to save a large portion of their income.\nSpa(x) ::: x goes to the spa at least once a week.\nFrivolous(x) ::: x frivolously spends a lot of money every time they go out.\nValue(x, y) ::: x values quality manufacturing and luxury items.\nEnjoy(x, y) ::: x enjoys shopping for materialistic items in their free time.\nPremises:\n¬(Spa(x) → ¬(Miserly(x) ∧ Need(x, largePortion))) ::: If people go to the spa at least once a week, then they are not people who are miserly and need to save a large portion of their income.\n(Miserly(x) ∧ Need(x, largePortion)) ⊕ Frivolous("
    ]
  },
  {
    "id": "FOLIO_train_617",
    "context": "The indie pop band Phoenix has released 6 albums. Phoenix's album \"Wolfgang Amadeus Phoenix\" sold over 500,000 copies. A certified gold album or single is one which sold over half a million copies. \"1901\" is a single from Phoenix's album \"Wolfgang Amadeus Phoenix.\" Over 400,000 copies of \"1901\" have been sold.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The album \"Wolfgang Amadeus Phoenix\" is a certified gold album.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAlbum(x) ::: x is an album.\nSingle(x) ::: x is a single.\nSold(x, y) ::: x sold y copies.\nGold(x) ::: x is a certified gold album or single.\nPremises:\nAlbum(wolfgangAmadeusPhoenix) ∧ Sold(wolfgangAmadeusPhoenix, 500000) ::: Phoenix's album \"Wolfgang Amadeus Phoenix\" sold over 500,000 copies.\nGold(x) ↔ Sold(x, 500000) ::: A certified gold album or single is one which sold over half a million copies.\nSingle(nineteenOOne) ∧ Album(wolfgangAmadeusPhoenix) ∧ Sold(nineteenOOne, 400000) ::: \"1901\" is a single"
    ]
  },
  {
    "id": "FOLIO_train_618",
    "context": "The indie pop band Phoenix has released 6 albums. Phoenix's album \"Wolfgang Amadeus Phoenix\" sold over 500,000 copies. A certified gold album or single is one which sold over half a million copies. \"1901\" is a single from Phoenix's album \"Wolfgang Amadeus Phoenix.\" Over 400,000 copies of \"1901\" have been sold.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The single \"1901\" is a certified gold single.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAlbum(x) ::: x is an album.\nSingle(x) ::: x is a single.\nSold(x, y) ::: x sold y copies.\nGold(x) ::: x is a certified gold album or single.\nPremises:\n6 ≤ Sold(wolfgangAmadeusPhoenix, copies) ::: Phoenix's album \"Wolfgang Amadeus Phoenix\" sold over 500,000 copies.\nGold(x) ↔ (Album(x) ∨ Single(x)) ∧ 500000 ≤ Sold(x, copies) ::: A certified gold album or single is one which sold over half a million copies.\nSingle(x) ∧ Album(y) ∧ Sold(x, copies) ∧ Sold(y, copies) ∧ 400000 ≤ copies ∧ copies ≤ copies ::: \"1901\" is a"
    ]
  },
  {
    "id": "FOLIO_train_619",
    "context": "Peter Parker is a either a superhero or a civilian. The Hulk is a destroyer. The Hulk wakes up when he is angry. If the Hulk wakes up, then he will break a bridge. Thor is a god. Thor will break a bridge when he is happy. A god is not a destroyer and a destroyer is not a god. Peter Parker wears a uniform when he is a superhero. Peter Parker is not a civilian if and only if a destroyer is breaking a bridge. If Thor is happy, the Hulk is angry.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If the Hulk does not wake up, then Thor is not happy.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSuperhero(x) ::: x is a superhero.\nCivilian(x) ::: x is a civilian.\nDestroyer(x) ::: x is a destroyer.\nAngry(x) ::: x is angry.\nWakeUp(x) ::: x wakes up.\nBreak(x, y) ::: x breaks y.\nBridge(x) ::: x is a bridge.\nGod(x) ::: x is a god.\nHappy(x) ::: x is happy.\nUniform(x) ::: x wears a uniform.\nPremises:\nSuperhero(peter) ⊕ Civilian(peter) ::: Peter Parker is a either a superhero or a civilian.\nDestroyer(hulk) ::: The Hulk is a destroyer.\nAngry(hulk) → WakeUp(hulk) ::: The Hulk wakes up when he is"
    ]
  },
  {
    "id": "FOLIO_train_620",
    "context": "Peter Parker is a either a superhero or a civilian. The Hulk is a destroyer. The Hulk wakes up when he is angry. If the Hulk wakes up, then he will break a bridge. Thor is a god. Thor will break a bridge when he is happy. A god is not a destroyer and a destroyer is not a god. Peter Parker wears a uniform when he is a superhero. Peter Parker is not a civilian if and only if a destroyer is breaking a bridge. If Thor is happy, the Hulk is angry.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Thor is happy, then Peter Parker wears a uniform.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSuperhero(x) ::: x is a superhero.\nCivilian(x) ::: x is a civilian.\nDestroyer(x) ::: x is a destroyer.\nHulk(x) ::: x is the Hulk.\nWakeUp(x) ::: x wakes up.\nAngry(x) ::: x is angry.\nBreak(x, y) ::: x breaks y.\nBridge(x) ::: x is a bridge.\nGod(x) ::: x is a god.\nHappy(x) ::: x is happy.\nThor(x) ::: x is Thor.\nUniform(x) ::: x wears a uniform.\nPremises:\nSuperhero(peter) ⊕ Civilian(peter) ::: Peter Parker is a either a superhero or a civilian.\nHulk(hulk) ∧ Destroyer(hulk) ::: The Hulk is a destroyer.\nWakeUp(hulk) → Angry(hulk) ::: The Hulk wakes up when he is angry.\nWakeUp(hulk) → Break(hulk, bridge) ::: If the Hulk wakes up, then he will break a bridge.\nGod(thor) ::: Thor is a god.\nHappy(thor) → Break(thor, bridge) ::: Thor will break a bridge when he is happy.\n¬(God(x) ∧ Destroyer(x)) ::: A god is not a destroyer and a destroyer is not a god.\nUniform(peter) ∧ Superhero(peter) ::: Peter Parker wears a uniform when he is a superhero.\n¬Civilian(peter) ↔ ¬(Destroyer(x) ∧ Break(x, bridge)) ::: Peter Parker is not a civilian if and only if a destroyer is breaking a bridge.\nHappy(thor) → Angry(hulk) ::: If Thor is happy, the Hulk is angry.\nConclusion:\nUniform(peter) ∧ Superhero(peter) ∧ Happy(thor) ::: If Thor is happy, then Peter Parker wears a uniform.\n------"
    ]
  },
  {
    "id": "FOLIO_train_621",
    "context": "Peter Parker is a either a superhero or a civilian. The Hulk is a destroyer. The Hulk wakes up when he is angry. If the Hulk wakes up, then he will break a bridge. Thor is a god. Thor will break a bridge when he is happy. A god is not a destroyer and a destroyer is not a god. Peter Parker wears a uniform when he is a superhero. Peter Parker is not a civilian if and only if a destroyer is breaking a bridge. If Thor is happy, the Hulk is angry.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Thor is not happy, then no bridge will be broken.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSuperhero(x) ::: x is a superhero.\nCivilian(x) ::: x is a civilian.\nDestroyer(x) ::: x is a destroyer.\nAngry(x) ::: x is angry.\nWakeUp(x) ::: x wakes up.\nBreak(x, y) ::: x breaks y.\nBridge(x) ::: x is a bridge.\nHappy(x) ::: x is happy.\nGod(x) ::: x is a god.\nUniform(x) ::: x wears a uniform.\nPremises:\nSuperhero(peter) ⊕ Civilian(peter) ::: Peter Parker is a either a superhero or a civilian.\nDestroyer(hulk) ::: The Hulk is a destroyer.\nAngry(hulk) → WakeUp(hulk) ::: The Hulk wakes up when he is angry.\nWakeUp(hulk) → Break(hulk, bridge) ::: If the Hulk wakes up, then he will break a bridge.\nGod(thor) ::: Thor is a god.\nHappy(thor) → Break(thor, bridge) ::: Thor will break a bridge when he is happy.\n¬(God(x) ∧ Destroyer(x)) ∧ ¬(Destroyer(x) ∧ God(x)) ::: A god is not a destroyer and a destroyer is not a god.\nUniform(peter) ∧ Superhero(peter) ::: Peter Parker wears a uniform when he is a superhero.\n¬Civilian(peter) ↔ ¬(Destroyer(x) ∧ Break(x, bridge)) ::: Peter Parker is not a civilian if and only if a destroyer is breaking a bridge.\nHappy(thor) → Angry(hulk) ::: If Thor is happy, the Hulk is angry.\nConclusion:\n¬Happy(thor) → ¬Break(x, bridge) ::: If Thor is not happy, then no bridge will be broken.\n------\nProblem:\nA person is a citizen of the United States if and only if the person was born"
    ]
  },
  {
    "id": "FOLIO_train_622",
    "context": "Diethylcarbamazine is a medication discovered in the year 1947. Diethylcarbamazine can be used to treat river blindness. The only preferred treatment for river blindness is ivermectin. Diethylcarbamazine is not ivermectin.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Diethylcarbamazine is not preferred for the treatment of river blindness.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDiscover(x, y) ::: x is discovered in year y.\nTreat(x, y) ::: x can be used to treat y.\nPreferred(x, y) ::: x is the preferred treatment for y.\nPremises:\nDiscover(diethylcarbamazine, year1947) ::: Diethylcarbamazine is a medication discovered in the year 1947.\nTreat(diethylcarbamazine, riverBlindness) ::: Diethylcarbamazine can be used to treat river blindness.\nPreferred(ivermectin, riverBlindness) ::: The only preferred treatment for river blindness is ivermectin.\n¬(diethylcarbamazine = ivermectin) ::: Diethylcarbamazine is not ivermectin.\nConclusion:\n¬Preferred(diethylcarbamazine, riverBlindness) ::: Diethylcarbamazine is not preferred for the treatment of river blindness.\n------\nProblem:\nThe first person to be diagnosed with AIDS was in the year 1981. The first person to be diagnosed with AIDS was a gay man. The first person to be diagnosed with AIDS was not a heterosexual man.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The first person to be diagnosed with AIDS was a gay man.\nBased on the above information, is the following statement true, false, or uncertain? The first person to be diagnosed with AIDS was not a heterosexual man.\n###\nPredicates:\nDiagnose(x, y) ::: x is diagnosed with y.\nGay(x) ::: x is a gay man.\nHeterosexual(x) ::: x is a heterosexual man.\nPremises:\nDiagnose(firstPerson, aids) ∧ Year(firstPerson, year1981) ::: The first person to be diagnosed with AIDS was in the year 1981.\nGay(firstPerson) ::: The first person to be diagnosed with AIDS was a gay man"
    ]
  },
  {
    "id": "FOLIO_train_623",
    "context": "Diethylcarbamazine is a medication discovered in the year 1947. Diethylcarbamazine can be used to treat river blindness. The only preferred treatment for river blindness is ivermectin. Diethylcarbamazine is not ivermectin.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Diethylcarbamazine was often used to treat river blindness.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDiscover(x, y) ::: x is discovered in year y.\nTreat(x, y) ::: x can be used to treat y.\nPreferred(x, y) ::: x is the preferred treatment for y.\nPremises:\nDiscover(diethylcarbamazine, year1947) ::: Diethylcarbamazine is a medication discovered in the year 1947.\nTreat(diethylcarbamazine, riverBlindness) ::: Diethylcarbamazine can be used to treat river blindness.\nPreferred(ivermectin, riverBlindness) ::: The only preferred treatment for river blindness is ivermectin.\n¬(diethylcarbamazine = ivermectin) ::: Diethylcarbamazine is not ivermectin.\nConclusion:\nTreat(diethylcarbamazine, riverBlindness) ∧ ¬(diethylcarbamazine = ivermectin) ::: Diethylcarbamazine was often used to treat river blindness.\n------\nProblem:\nThe first person to be diagnosed with AIDS was in the year 1981. The first person to be diagnosed with AIDS was a gay man. The first person to be diagnosed with AIDS was not a heterosexual man.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The first person to be diagnosed with AIDS was a gay man.\nBased on the above information, is the following statement true, false, or uncertain? The first person to be diagnosed with AIDS was a heterosexual man.\n###\nPredicates:\nDiagnose(x, y) ::: x is diagnosed with y.\nGay(x) ::: x is a gay man.\nHeterosexual(x) ::: x is a heterosexual man.\nPremises:\nDiagnose(firstPerson, aids) ∧ Year(firstPerson, year1981) ::: The first person to be diagnosed with AIDS was in the year 1981.\nGay(firstPerson) :"
    ]
  },
  {
    "id": "FOLIO_train_624",
    "context": "Diethylcarbamazine is a medication discovered in the year 1947. Diethylcarbamazine can be used to treat river blindness. The only preferred treatment for river blindness is ivermectin. Diethylcarbamazine is not ivermectin.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Diethylcarbamazine is used in the treatment of filariasis.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDiscover(x, y) ::: x is discovered in year y.\nTreat(x, y) ::: x is used to treat y.\nPrefer(x, y) ::: x is the preferred treatment for y.\nPremises:\nDiscover(diethylcarbamazine, year1947) ::: Diethylcarbamazine is a medication discovered in the year 1947.\nTreat(diethylcarbamazine, riverBlindness) ::: Diethylcarbamazine can be used to treat river blindness.\nPrefer(ivermectin, riverBlindness) ::: The only preferred treatment for river blindness is ivermectin.\n¬(diethylcarbamazine = ivermectin) ::: Diethylcarbamazine is not ivermectin.\nConclusion:\nTreat(diethylcarbamazine, filariasis) ::: Diethylcarbamazine is used in the treatment of filariasis.\n------\nProblem:\nThe first person to be diagnosed with AIDS was in the year 1981. The first person to be diagnosed with AIDS was a gay man. The first person to be diagnosed with AIDS was not a heterosexual man.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The first person to be diagnosed with AIDS was a man.\nBased on the above information, is the following statement true, false, or uncertain? The first person to be diagnosed with AIDS was a heterosexual man.\n###\nPredicates:\nDiagnose(x, y) ::: x is diagnosed with y.\nGay(x) ::: x is a gay man.\nHeterosexual(x) ::: x is a heterosexual man.\nPremises:\nDiagnose(firstPerson, aids) ∧ Year(firstPerson, year1981) ::: The first person to be diagnosed with AIDS was in the year 1981.\nGay(firstPerson) ::: The first person to be diagnosed with AIDS was a gay man.\n¬Heter"
    ]
  },
  {
    "id": "FOLIO_train_625",
    "context": "All univariate analyses use a generalized linear model. All multivoxel (pattern) analyses are implementing machine learning algorithms. All implementing machine learning algorithms are to learn and classify multivariate data. The Latent Dirichlet allocation model uses a generalized linear model or a univariate analysis. If the Latent Dirichlet allocation model does not learn and classify multivariate data, then the Latent Dirichlet allocation model uses a generalized linear model and a multivoxel (pattern) analysis.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Latent Dirichlet allocation model is implementing machine learning algorithms.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nUse(x, y) ::: x uses y.\nImplement(x, y) ::: x implements y.\nLearn(x, y) ::: x learns y.\nClassify(x, y) ::: x classifies y.\nPremises:\n∀x (UnivariateAnalysis(x) → GeneralizedLinearModel(x)) ::: All univariate analyses use a generalized linear model.\n∀x (MultivoxelPatternAnalysis(x) → ImplementingMachineLearningAlgorithms(x)) ::: All multivoxel (pattern) analyses are implementing machine learning algorithms.\n∀x (ImplementingMachineLearningAlgorithms(x) → Learn(x, multivariateData) ∧ Classify(x, multivariateData)) ::: All implementing machine learning algorithms are to learn and classify multivariate data.\n(GeneralizedLinearModel(latentDirichletAllocationModel) ∨ UnivariateAnalysis(latentDirichletAllocationModel)) ::: The Latent Dirichlet allocation model uses a generalized linear model or a univariate analysis.\n¬(Learn(latentDirichletAllocationModel, multivariateData) ∧ Classify(latentDirichletAllocationModel, multivariateData)) → (GeneralizedLinearModel(latentDirichletAllocationModel) ∧ MultivoxelPatternAnalysis(latentDirichletAllocationModel)) ::: If the Latent Dirichlet allocation model does not learn and classify multivariate data, then the Latent Dirichlet allocation model uses a generalized linear model and a multivoxel (pattern) analysis.\nConclusion:\nImplementingMachineLearningAlgorithms(latentDirichletAllocationModel) ::: Latent Dirichlet allocation model is implementing machine learning algorithms.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug."
    ]
  },
  {
    "id": "FOLIO_train_626",
    "context": "All univariate analyses use a generalized linear model. All multivoxel (pattern) analyses are implementing machine learning algorithms. All implementing machine learning algorithms are to learn and classify multivariate data. The Latent Dirichlet allocation model uses a generalized linear model or a univariate analysis. If the Latent Dirichlet allocation model does not learn and classify multivariate data, then the Latent Dirichlet allocation model uses a generalized linear model and a multivoxel (pattern) analysis.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Latent Dirichlet allocation model uses a generalized linear model and learns and classifies multivariate data.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nUse(x, y) ::: x uses y.\nLearn(x, y) ::: x learns y.\nClassify(x, y) ::: x classifies y.\nPremises:\n∀x (UnivariateAnalysis(x) → GeneralizedLinearModel(x)) ::: All univariate analyses use a generalized linear model.\n∀x (MultivoxelPatternAnalysis(x) → ImplementingMachineLearningAlgorithm(x)) ::: All multivoxel (pattern) analyses are implementing machine learning algorithms.\n∀x (ImplementingMachineLearningAlgorithm(x) → LearnAndClassifyMultivariateData(x)) ::: All implementing machine learning algorithms are to learn and classify multivariate data.\nUse(latentDirichletAllocationModel, generalizedLinearModel) ∨ Use(latentDirichletAllocationModel, univariateAnalysis) ::: The Latent Dirichlet allocation model uses a generalized linear model or a univariate analysis.\n¬(LearnAndClassifyMultivariateData(latentDirichletAllocationModel) ∧ Use(latentDirichletAllocationModel, generalizedLinearModel)) → (Use(latentDirichletAllocationModel, generalizedLinearModel) ∧ Use(latentDirichletAllocationModel, multivoxelPatternAnalysis)) ::: If the Latent Dirichlet allocation model does not learn and classify multivariate data, then the Latent Dirichlet allocation model uses a generalized linear model and a multivoxel (pattern) analysis.\nConclusion:\nUse(latentDirichletAllocationModel, generalizedLinearModel) ∧ LearnAndClassifyMultivariateData(latentDirichletAllocationModel) ::: Latent Dirichlet allocation model uses a generalized linear model and learns and classifies multivariate data.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that"
    ]
  },
  {
    "id": "FOLIO_train_627",
    "context": "All univariate analyses use a generalized linear model. All multivoxel (pattern) analyses are implementing machine learning algorithms. All implementing machine learning algorithms are to learn and classify multivariate data. The Latent Dirichlet allocation model uses a generalized linear model or a univariate analysis. If the Latent Dirichlet allocation model does not learn and classify multivariate data, then the Latent Dirichlet allocation model uses a generalized linear model and a multivoxel (pattern) analysis.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Latent Dirichlet allocation model either uses a generalized linear model or learns and classifies multivariate data.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nUse(x, y) ::: x uses y.\nGLM(x) ::: x is a generalized linear model.\nMVA(x) ::: x is a multivoxel (pattern) analysis.\nMLA(x) ::: x is implementing machine learning algorithms.\nLearn(x) ::: x is to learn and classify multivariate data.\nPremises:\n∀x (GLM(x) → UA(x)) ::: All univariate analyses use a generalized linear model.\n∀x (MVA(x) → MLA(x)) ::: All multivoxel (pattern) analyses are implementing machine learning algorithms.\n∀x (MLA(x) → Learn(x)) ::: All implementing machine learning algorithms are to learn and classify multivariate data.\nLDAM(x) ∨ UA(x) ::: The Latent Dirichlet allocation model uses a generalized linear model or a univariate analysis.\n¬Learn(x) → (GLM(x) ∧ MVA(x)) ::: If the Latent Dirichlet allocation model does not learn and classify multivariate data, then the Latent Dirichlet allocation model uses a generalized linear model and a multivoxel (pattern) analysis.\nConclusion:\nLDAM(x) ∨ GLM(x) ∨ Learn(x) ::: Latent Dirichlet allocation model either uses a generalized linear model or learns and classifies multivariate data.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either"
    ]
  },
  {
    "id": "FOLIO_train_628",
    "context": "If something requires a medical diagnosis, then lab tests or imaging is required. All rare diseases require a medical diagnosis. If something is mild, then no lab tests or imaging is required. All blood cancers are rare diseases. All Leukemia is blood cancer. If bladder cancer is either both blood cancer and Leukemia or neither blood cancer nor Leukemia, then bladder cancer is Leukemia.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Bladder cancer is mild.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRequire(x, y) ::: x requires y.\nMedicalDiagnosis(x) ::: x requires a medical diagnosis.\nLabTests(x) ::: x requires lab tests.\nImaging(x) ::: x requires imaging.\nMild(x) ::: x is mild.\nRareDisease(x) ::: x is a rare disease.\nBloodCancer(x) ::: x is blood cancer.\nLeukemia(x) ::: x is Leukemia.\nBladderCancer(x) ::: x is bladder cancer.\nPremises:\nMedicalDiagnosis(x) → (LabTests(x) ∨ Imaging(x)) ::: If something requires a medical diagnosis, then lab tests or imaging is required.\n∀x (RareDisease(x) → MedicalDiagnosis(x)) ::: All rare diseases require a medical diagnosis.\n∀x (Mild(x) → ¬(LabTests(x) ∨ Imaging(x))) ::: If something is mild, then no lab tests or imaging is required.\n∀x (BloodCancer(x) → RareDisease(x)) ::: All blood cancers are rare diseases.\n∀x (Leukemia(x) → BloodCancer(x)) ::: All Leukemia is blood cancer.\n(BloodCancer(bladder) ∧ Leukemia(bladder)) ⊕ ¬(BloodCancer(bladder) ∨ Leukemia(bladder)) ::: If bladder cancer is either both blood cancer and Leukemia or neither blood cancer nor Leukemia, then bladder cancer is Leukemia.\nConclusion:\nMild(bladder) ::: Bladder cancer is mild.\n------\nProblem:\nIf something is a mammal, then it is not a fish. If something is a fish, then it is not a mammal. If something is a mammal, then it is not a reptile. If something is a reptile, then it is not a mammal. If something is a mammal, then it is not an amphibian. If something is an am"
    ]
  },
  {
    "id": "FOLIO_train_629",
    "context": "If something requires a medical diagnosis, then lab tests or imaging is required. All rare diseases require a medical diagnosis. If something is mild, then no lab tests or imaging is required. All blood cancers are rare diseases. All Leukemia is blood cancer. If bladder cancer is either both blood cancer and Leukemia or neither blood cancer nor Leukemia, then bladder cancer is Leukemia.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Bladder cancer is Leukemia.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRequire(x, y) ::: x requires y.\nMedicalDiagnosis(x) ::: x requires a medical diagnosis.\nLabTests(x) ::: x requires lab tests.\nImaging(x) ::: x requires imaging.\nMild(x) ::: x is mild.\nRareDisease(x) ::: x is a rare disease.\nBloodCancer(x) ::: x is blood cancer.\nLeukemia(x) ::: x is Leukemia.\nBladderCancer(x) ::: x is bladder cancer.\nPremises:\nMedicalDiagnosis(x) → (LabTests(x) ∨ Imaging(x)) ::: If something requires a medical diagnosis, then lab tests or imaging is required.\n∀x (RareDisease(x) → MedicalDiagnosis(x)) ::: All rare diseases require a medical diagnosis.\n∀x (Mild(x) → ¬(LabTests(x) ∨ Imaging(x))) ::: If something is mild, then no lab tests or imaging is required.\n∀x (BloodCancer(x) → RareDisease(x)) ::: All blood cancers are rare diseases.\n∀x (Leukemia(x) → BloodCancer(x)) ::: All Leukemia is blood cancer.\n(BloodCancer(bladder) ∧ Leukemia(bladder)) ⊕ ¬(BloodCancer(bladder) ∨ Leukemia(bladder)) ::: If bladder cancer is either both blood cancer and Leukemia or neither blood cancer nor Leukemia, then bladder cancer is Leukemia.\nConclusion:\nLeukemia(bladder) ::: Bladder cancer is Leukemia.\n------\nProblem:\nIf something is a mammal, then it is not a fish. If something is a fish, then it is not a mammal. If something is a mammal, then it is not a reptile. If something is a reptile, then it is not a mammal. If something is a mammal, then it is not an amphibian. If something is"
    ]
  },
  {
    "id": "FOLIO_train_630",
    "context": "If something requires a medical diagnosis, then lab tests or imaging is required. All rare diseases require a medical diagnosis. If something is mild, then no lab tests or imaging is required. All blood cancers are rare diseases. All Leukemia is blood cancer. If bladder cancer is either both blood cancer and Leukemia or neither blood cancer nor Leukemia, then bladder cancer is Leukemia.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Bladder cancer is either a rare disease or mild.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRequire(x, y) ::: x requires y.\nMedicalDiagnosis(x) ::: x requires a medical diagnosis.\nLabTests(x) ::: x requires lab tests.\nImaging(x) ::: x requires imaging.\nMild(x) ::: x is mild.\nRareDisease(x) ::: x is a rare disease.\nBloodCancer(x) ::: x is blood cancer.\nLeukemia(x) ::: x is Leukemia.\nBladderCancer(x) ::: x is bladder cancer.\nPremises:\n∀x (MedicalDiagnosis(x) → (LabTests(x) ∨ Imaging(x))) ::: If something requires a medical diagnosis, then lab tests or imaging is required.\n∀x (RareDisease(x) → MedicalDiagnosis(x)) ::: All rare diseases require a medical diagnosis.\n∀x (Mild(x) → ¬(LabTests(x) ∨ Imaging(x))) ::: If something is mild, then no lab tests or imaging is required.\n∀x (BloodCancer(x) → RareDisease(x)) ::: All blood cancers are rare diseases.\n∀x (Leukemia(x) → BloodCancer(x)) ::: All Leukemia is blood cancer.\n(BloodCancer(bladder) ∧ Leukemia(bladder)) ⊕ ¬(BloodCancer(bladder) ∨ Leukemia(bladder)) ::: If bladder cancer is either both blood cancer and Leukemia or neither blood cancer nor Leukemia, then bladder cancer is Leukemia.\nConclusion:\nRareDisease(bladder) ∨ Mild(bladder) ::: Bladder cancer is either a rare disease or mild.\n------"
    ]
  },
  {
    "id": "FOLIO_train_631",
    "context": "No precious metals aren't scarce. All non-rare earth metals are not scarce. Either non-rare earth metals or rare earth metals. All rare earth metals can be used for batteries. All rare earth metals are essential for electric vehicles. Lithium is neither a non-rare earth metal nor essential for electric vehicles.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Lithium is a rare earth metal.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPreciousMetal(x) ::: x is a precious metal.\nScarce(x) ::: x is scarce.\nNonRareEarthMetal(x) ::: x is a non-rare earth metal.\nRareEarthMetal(x) ::: x is a rare earth metal.\nCanBeUsedForBatteries(x) ::: x can be used for batteries.\nEssentialForElectricVehicles(x) ::: x is essential for electric vehicles.\nPremises:\n¬(PreciousMetal(x) ∧ ¬Scarce(x)) ::: No precious metals aren't scarce.\n∀x (NonRareEarthMetal(x) → ¬Scarce(x)) ::: All non-rare earth metals are not scarce.\nNonRareEarthMetal(x) ⊕ RareEarthMetal(x) ::: Either non-rare earth metals or rare earth metals.\n∀x (RareEarthMetal(x) → CanBeUsedForBatteries(x)) ::: All rare earth metals can be used for batteries.\n∀x (RareEarthMetal(x) → EssentialForElectricVehicles(x)) ::: All rare earth metals are essential for electric vehicles.\n¬(NonRareEarthMetal(lithium) ∨ EssentialForElectricVehicles(lithium)) ::: Lithium is neither a non-rare earth metal nor essential for electric vehicles.\nConclusion:\nRareEarthMetal(lithium) ::: Lithium is a rare earth metal.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine"
    ]
  },
  {
    "id": "FOLIO_train_632",
    "context": "No precious metals aren't scarce. All non-rare earth metals are not scarce. Either non-rare earth metals or rare earth metals. All rare earth metals can be used for batteries. All rare earth metals are essential for electric vehicles. Lithium is neither a non-rare earth metal nor essential for electric vehicles.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Lithium is a precious metal and is used for batteries.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPreciousMetal(x) ::: x is a precious metal.\nScarce(x) ::: x is scarce.\nNonRareEarthMetal(x) ::: x is a non-rare earth metal.\nRareEarthMetal(x) ::: x is a rare earth metal.\nCanBeUsedForBatteries(x) ::: x can be used for batteries.\nEssentialForElectricVehicles(x) ::: x is essential for electric vehicles.\nPremises:\n¬(PreciousMetal(x) ∧ ¬Scarce(x)) ::: No precious metals aren't scarce.\n∀x (NonRareEarthMetal(x) → ¬Scarce(x)) ::: All non-rare earth metals are not scarce.\n(NonRareEarthMetal(x) ∨ RareEarthMetal(x)) ::: Either non-rare earth metals or rare earth metals.\n∀x (RareEarthMetal(x) → CanBeUsedForBatteries(x)) ::: All rare earth metals can be used for batteries.\n∀x (RareEarthMetal(x) → EssentialForElectricVehicles(x)) ::: All rare earth metals are essential for electric vehicles.\n¬(NonRareEarthMetal(lithium) ∨ EssentialForElectricVehicles(lithium)) ::: Lithium is neither a non-rare earth metal nor essential for electric vehicles.\nConclusion:\nPreciousMetal(lithium) ∧ CanBeUsedForBatteries(lithium) ::: Lithium is a precious metal and is used for batteries.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No"
    ]
  },
  {
    "id": "FOLIO_train_633",
    "context": "No precious metals aren't scarce. All non-rare earth metals are not scarce. Either non-rare earth metals or rare earth metals. All rare earth metals can be used for batteries. All rare earth metals are essential for electric vehicles. Lithium is neither a non-rare earth metal nor essential for electric vehicles.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Lithium is not essential for electric vehicles or a precious metal, then Lithium is not a non-rare earth metal or usable for batteries.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPreciousMetal(x) ::: x is a precious metal.\nScarce(x) ::: x is scarce.\nNonRareEarthMetal(x) ::: x is a non-rare earth metal.\nRareEarthMetal(x) ::: x is a rare earth metal.\nCanBeUsedForBatteries(x) ::: x can be used for batteries.\nEssentialForElectricVehicles(x) ::: x is essential for electric vehicles.\nPremises:\n¬(PreciousMetal(x) ∧ ¬Scarce(x)) ::: No precious metals aren't scarce.\n∀x (NonRareEarthMetal(x) → ¬Scarce(x)) ::: All non-rare earth metals are not scarce.\nNonRareEarthMetal(x) ⊕ RareEarthMetal(x) ::: Either non-rare earth metals or rare earth metals.\n∀x (RareEarthMetal(x) → CanBeUsedForBatteries(x)) ::: All rare earth metals can be used for batteries.\n∀x (RareEarthMetal(x) → EssentialForElectricVehicles(x)) ::: All rare earth metals are essential for electric vehicles.\n¬(EssentialForElectricVehicles(lithium) ∨ NonRareEarthMetal(lithium)) ::: Lithium is neither a non-rare earth metal nor essential for electric vehicles.\nConclusion:\n¬(EssentialForElectricVehicles(lithium) ∨ PreciousMetal(lithium)) ∧ ¬(EssentialForElectricVehicles(lithium) ∨ CanBeUsedForBatteries(lithium)) ::: If Lithium is not essential for electric vehicles or a precious metal"
    ]
  },
  {
    "id": "FOLIO_train_634",
    "context": "If people own at least one pet, then they do not have tidy houses. If people grew up with childhood pets, then they own at least one pet. If people hire a maid or cleaning service, then they have tidy houses. If people live in the suburbs, then they have tidy houses. Jack either does not hire a maid or cleaning service or, if he does, then he does not own at least one pet.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jack lives in the suburbs.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nOwn(x) ::: x owns at least one pet.\nTidy(x) ::: x has tidy houses.\nHire(x) ::: x hires a maid or cleaning service.\nLive(x) ::: x lives in the suburbs.\nPremises:\nOwn(x) → ¬Tidy(x) ::: If people own at least one pet, then they do not have tidy houses.\nGrewUp(x) → Own(x) ::: If people grew up with childhood pets, then they own at least one pet.\nHire(x) → Tidy(x) ::: If people hire a maid or cleaning service, then they have tidy houses.\nLive(x) → Tidy(x) ::: If people live in the suburbs, then they have tidy houses.\n¬Hire(jack) ∨ (Hire(jack) ∧ ¬Own(jack)) ::: Jack either does not hire a maid or cleaning service or, if he does, then he does not own at least one pet.\nConclusion:\nLive(jack) ::: Jack lives in the suburbs.\n------\nProblem:\nIf people are not in the military, then they are not in the army. If people are in the army, then they are in the military. If people are in the military, then they are not pacifists. If people are pacifists, then they are not in the military. If people are in the military, then they are not in the navy. If people are in the navy, then they are in the military. If people are in the military, then they are not in the air force. If people are in the air force, then they are in the military. If people are in the military, then they are not in the marines. If people are in the marines, then they are in the military. If people are in the military, then they are"
    ]
  },
  {
    "id": "FOLIO_train_635",
    "context": "If people own at least one pet, then they do not have tidy houses. If people grew up with childhood pets, then they own at least one pet. If people hire a maid or cleaning service, then they have tidy houses. If people live in the suburbs, then they have tidy houses. Jack either does not hire a maid or cleaning service or, if he does, then he does not own at least one pet.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jack does not live in the suburbs.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nOwn(x) ::: x owns at least one pet.\nTidy(x) ::: x has tidy houses.\nHire(x) ::: x hires a maid or cleaning service.\nLive(x) ::: x lives in the suburbs.\nPremises:\nOwn(x) → ¬Tidy(x) ::: If people own at least one pet, then they do not have tidy houses.\nGrewUp(x) → Own(x) ::: If people grew up with childhood pets, then they own at least one pet.\nHire(x) → Tidy(x) ::: If people hire a maid or cleaning service, then they have tidy houses.\nLive(x) → Tidy(x) ::: If people live in the suburbs, then they have tidy houses.\n¬Hire(jack) ∨ (Hire(jack) ∧ ¬Own(jack)) ::: Jack either does not hire a maid or cleaning service or, if he does, then he does not own at least one pet.\nConclusion:\n¬Live(jack) ::: Jack does not live in the suburbs.\n------\nProblem:\nIf people are not in the military, then they are not in the army. If people are in the army, then they are in the military. If people are in the military, then they are not pacifists. If people are pacifists, then they are not in the military. If people are in the military, then they are not in the navy. If people are in the navy, then they are in the military. If people are in the military, then they are not in the air force. If people are in the air force, then they are in the military. If people are in the military, then they are not in the marines. If people are in the marines, then they are in the military. If people are in the military,"
    ]
  },
  {
    "id": "FOLIO_train_636",
    "context": "If people own at least one pet, then they do not have tidy houses. If people grew up with childhood pets, then they own at least one pet. If people hire a maid or cleaning service, then they have tidy houses. If people live in the suburbs, then they have tidy houses. Jack either does not hire a maid or cleaning service or, if he does, then he does not own at least one pet.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jack has a tidy house.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nOwn(x) ::: x owns at least one pet.\nTidy(x) ::: x has a tidy house.\nHire(x) ::: x hires a maid or cleaning service.\nLive(x) ::: x lives in the suburbs.\nPremises:\nOwn(x) → ¬Tidy(x) ::: If people own at least one pet, then they do not have tidy houses.\nOwn(x) ↔ (GrewUp(x) → Own(x)) ::: If people grew up with childhood pets, then they own at least one pet.\nHire(x) → Tidy(x) ::: If people hire a maid or cleaning service, then they have tidy houses.\nLive(x) → Tidy(x) ::: If people live in the suburbs, then they have tidy houses.\n¬Hire(jack) ∨ (Hire(jack) → ¬Own(jack)) ::: Jack either does not hire a maid or cleaning service or, if he does, then he does not own at least one pet.\nConclusion:\nTidy(jack) ::: Jack has a tidy house.\n------\nProblem:\nIf people are not in the military, then they are not in the army. If people are in the army, then they are in the military. If people are in the military, then they are not in the navy. If people are in the navy, then they are not in the army. If people are in the army, then they are not in the navy. If people are in the navy, then they are not in the army.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? If people are in the military, then they are not in the navy.\nBased on the above information, is the following statement true, false, or uncertain? If people are"
    ]
  },
  {
    "id": "FOLIO_train_637",
    "context": "If people own at least one pet, then they do not have tidy houses. If people grew up with childhood pets, then they own at least one pet. If people hire a maid or cleaning service, then they have tidy houses. If people live in the suburbs, then they have tidy houses. Jack either does not hire a maid or cleaning service or, if he does, then he does not own at least one pet.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jack neither lives in the suburbs nor owns at least one pet.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nOwn(x) ::: x owns at least one pet.\nTidy(x) ::: x has tidy houses.\nHire(x) ::: x hires a maid or cleaning service.\nLive(x) ::: x lives in the suburbs.\nPremises:\nOwn(x) → ¬Tidy(x) ::: If people own at least one pet, then they do not have tidy houses.\nGrewUp(x) → Own(x) ::: If people grew up with childhood pets, then they own at least one pet.\nHire(x) → Tidy(x) ::: If people hire a maid or cleaning service, then they have tidy houses.\nLive(x) → Tidy(x) ::: If people live in the suburbs, then they have tidy houses.\n¬Hire(jack) ∨ (Hire(jack) ∧ ¬Own(jack)) ::: Jack either does not hire a maid or cleaning service or, if he does, then he does not own at least one pet.\nConclusion:\n¬Live(jack) ∨ ¬Own(jack) ::: Jack neither lives in the suburbs nor owns at least one pet.\n------\nProblem:\nIf people are not in the military, then they are not in the army. If people are in the army, then they are in the military. If people are in the military, then they are not in the navy. If people are in the navy, then they are not in the army. If people are in the army, then they are not in the navy. If people are in the navy, then they are not in the army.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? If people are in the military, then they are not in the navy.\nBased on the above information, is the following statement true"
    ]
  },
  {
    "id": "FOLIO_train_638",
    "context": "If people own at least one pet, then they do not have tidy houses. If people grew up with childhood pets, then they own at least one pet. If people hire a maid or cleaning service, then they have tidy houses. If people live in the suburbs, then they have tidy houses. Jack either does not hire a maid or cleaning service or, if he does, then he does not own at least one pet.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jack grew up with childhood pets and lives in the suburbs.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nOwn(x) ::: x owns at least one pet.\nTidy(x) ::: x has tidy houses.\nHire(x) ::: x hires a maid or cleaning service.\nLive(x) ::: x lives in the suburbs.\nPremises:\nOwn(x) → ¬Tidy(x) ::: If people own at least one pet, then they do not have tidy houses.\nGrewUp(x) → Own(x) ::: If people grew up with childhood pets, then they own at least one pet.\nHire(x) → Tidy(x) ::: If people hire a maid or cleaning service, then they have tidy houses.\nLive(x) → Tidy(x) ::: If people live in the suburbs, then they have tidy houses.\n¬Hire(jack) ∨ (Hire(jack) ∧ ¬Own(jack)) ::: Jack either does not hire a maid or cleaning service or, if he does, then he does not own at least one pet.\nConclusion:\nGrewUp(jack) ∧ Live(jack) ::: Jack grew up with childhood pets and lives in the suburbs.\n------\nProblem:\nIf people are not in the military, then they are not in the army. If people are in the army, then they are in the military. If people are in the military, then they are not in the navy. If people are in the navy, then they are not in the army. If people are in the army, then they are not in the navy. If people are in the navy, then they are not in the army.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? If people are in the military, then they are not in the navy.\nBased on the above information, is the following statement true, false"
    ]
  },
  {
    "id": "FOLIO_train_639",
    "context": "A bottle is either standing upright or toppled over. The bottle is not upright.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The bottle is toppled over.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nStandingUpright(x) ::: x is standing upright.\nToppledOver(x) ::: x is toppled over.\nPremises:\n(StandingUpright(bottle) ∨ ToppledOver(bottle)) ∧ ¬StandingUpright(bottle) ::: A bottle is either standing upright or toppled over. The bottle is not upright.\nConclusion:\nToppledOver(bottle) ::: The bottle is toppled over.\n------\nProblem:\nA person is either a man or a woman. A person is not a man.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? A person is a woman.\n###\nPredicates:\nMan(x) ::: x is a man.\nWoman(x) ::: x is a woman.\nPremises:\n(Man(person) ∨ Woman(person)) ∧ ¬Man(person) ::: A person is either a man or a woman. A person is not a man.\nConclusion:\nWoman(person) ::: A person is a woman.\n------\nProblem:\nA person is either a man or a woman. A person is not a man.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? A person is a woman.\n###\nPredicates:\nMan(x) ::: x is a man.\nWoman(x) ::: x is a woman.\nPremises:\n(Man(person) ∨ Woman(person)) ∧ ¬Man(person) ::: A person is either a man or a woman. A person is not a man.\nConclusion:\nWoman(person) ::: A person is a woman.\n------\nProblem:\nA person is either a man or a woman. A person is not a man."
    ]
  },
  {
    "id": "FOLIO_train_640",
    "context": "If people eat cereal and milk every day for breakfast, then they have very busy morning schedules every day. All young children below the age of ten eat cereal and milk every day for breakfast. People are either young children below the age of ten or have a lot of commitments they voluntarily signed up for. If people have a lot of commitments they voluntarily signed up for, then they are hardworking individuals with high ambitions and goals for the future. If people are hardworking individuals with high ambitions and goals for the future, then they are not good at staying organized and motivated. John either is both a hardworking individual with high ambitions and goals for the future and has busy morning schedules every day, or he is neither a hardworking individual with high ambitions and goals for the future nor does he have a busy morning schedule every day.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? John is good at staying organized and motivated.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Time out!"
    ]
  },
  {
    "id": "FOLIO_train_641",
    "context": "If people eat cereal and milk every day for breakfast, then they have very busy morning schedules every day. All young children below the age of ten eat cereal and milk every day for breakfast. People are either young children below the age of ten or have a lot of commitments they voluntarily signed up for. If people have a lot of commitments they voluntarily signed up for, then they are hardworking individuals with high ambitions and goals for the future. If people are hardworking individuals with high ambitions and goals for the future, then they are not good at staying organized and motivated. John either is both a hardworking individual with high ambitions and goals for the future and has busy morning schedules every day, or he is neither a hardworking individual with high ambitions and goals for the future nor does he have a busy morning schedule every day.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? John eats cereal and milk every day for breakfast.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Time out!"
    ]
  },
  {
    "id": "FOLIO_train_642",
    "context": "If people eat cereal and milk every day for breakfast, then they have very busy morning schedules every day. All young children below the age of ten eat cereal and milk every day for breakfast. People are either young children below the age of ten or have a lot of commitments they voluntarily signed up for. If people have a lot of commitments they voluntarily signed up for, then they are hardworking individuals with high ambitions and goals for the future. If people are hardworking individuals with high ambitions and goals for the future, then they are not good at staying organized and motivated. John either is both a hardworking individual with high ambitions and goals for the future and has busy morning schedules every day, or he is neither a hardworking individual with high ambitions and goals for the future nor does he have a busy morning schedule every day.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? John is either a hardworking individual with high ambitions and goals for the future or is good at staying organized and motivated.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Time out!"
    ]
  },
  {
    "id": "FOLIO_train_643",
    "context": "Ableton has an office in Germany. Ableton has an office in the USA. USA and Germany are different countries. Any company that has offices in different countries is a multinational company. Ableton makes music software.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Ableton is a multinational company.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Time out!"
    ]
  },
  {
    "id": "FOLIO_train_644",
    "context": "Ableton has an office in Germany. Ableton has an office in the USA. USA and Germany are different countries. Any company that has offices in different countries is a multinational company. Ableton makes music software.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Ableton makes AI software.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Time out!"
    ]
  },
  {
    "id": "FOLIO_train_645",
    "context": "Ableton has an office in Germany. Ableton has an office in the USA. USA and Germany are different countries. Any company that has offices in different countries is a multinational company. Ableton makes music software.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Ableton does not have an office in Germany.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Time out!"
    ]
  },
  {
    "id": "FOLIO_train_646",
    "context": "Every swimmer can go underwater. Everyone that eats fish they catch themselves is a swimmer. Every penguin eats fish they catch themselves. All nonflying birds in Antarctica are penguins. Fido is a penguin or a swimmer.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Fido eats fish they catch themselves.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Time out!"
    ]
  },
  {
    "id": "FOLIO_train_647",
    "context": "Every swimmer can go underwater. Everyone that eats fish they catch themselves is a swimmer. Every penguin eats fish they catch themselves. All nonflying birds in Antarctica are penguins. Fido is a penguin or a swimmer.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Fido is neither a non-flying bird nor can Fido go underwater.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Time out!"
    ]
  },
  {
    "id": "FOLIO_train_648",
    "context": "Every swimmer can go underwater. Everyone that eats fish they catch themselves is a swimmer. Every penguin eats fish they catch themselves. All nonflying birds in Antarctica are penguins. Fido is a penguin or a swimmer.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Fido can either go underwater or is a swimmer, then Fido is a nonflying bird in Antartica.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Time out!"
    ]
  },
  {
    "id": "FOLIO_train_649",
    "context": "All professors are teachers. All researchers are professors. No teachers are students. All people who study are students. Leon is not studying or a researcher. If Leon is not studying, then Leon is a teacher.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Leon is a professor.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Time out!"
    ]
  },
  {
    "id": "FOLIO_train_650",
    "context": "All professors are teachers. All researchers are professors. No teachers are students. All people who study are students. Leon is not studying or a researcher. If Leon is not studying, then Leon is a teacher.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Leon is neither a student nor a researcher.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProfessor(x) ::: x is a professor.\nResearcher(x) ::: x is a researcher.\nTeacher(x) ::: x is a teacher.\nStudent(x) ::: x is a student.\nStudy(x) ::: x studies.\nPremises:\n∀x (Professor(x) → Teacher(x)) ::: All professors are teachers.\n∀x (Researcher(x) → Professor(x)) ::: All researchers are professors.\n∀x (Teacher(x) → ¬Student(x)) ::: No teachers are students.\n∀x (Study(x) → Student(x)) ::: All people who study are students.\n¬Study(leon) ∨ Researcher(leon) ::: Leon is not studying or a researcher.\n¬Study(leon) → Teacher(leon) ::: If Leon is not studying, then Leon is a teacher.\nConclusion:\n¬Student(leon) ∨ Researcher(leon) ::: Leon is neither a student nor a researcher.\n------"
    ]
  },
  {
    "id": "FOLIO_train_651",
    "context": "All professors are teachers. All researchers are professors. No teachers are students. All people who study are students. Leon is not studying or a researcher. If Leon is not studying, then Leon is a teacher.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Leon is not a researcher, then Leon is a student.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProfessor(x) ::: x is a professor.\nResearcher(x) ::: x is a researcher.\nTeacher(x) ::: x is a teacher.\nStudent(x) ::: x is a student.\nStudy(x) ::: x studies.\nPremises:\n∀x (Professor(x) → Teacher(x)) ::: All professors are teachers.\n∀x (Researcher(x) → Professor(x)) ::: All researchers are professors.\n∀x (Teacher(x) → ¬Student(x)) ::: No teachers are students.\n∀x (Study(x) → Student(x)) ::: All people who study are students.\n¬Study(leon) ∨ Researcher(leon) ::: Leon is not studying or a researcher.\n¬Study(leon) → Teacher(leon) ::: If Leon is not studying, then Leon is a teacher.\nConclusion:\n¬Researcher(leon) → Student(leon) ::: If Leon is not a researcher, then Leon is a"
    ]
  },
  {
    "id": "FOLIO_train_652",
    "context": "A cutman is responsible for preventing and treating physical damage to a fighter. Cutmen appear in matches such as a boxing, kickboxing or a mixed martial arts bout. Cutmen typically handle swelling, nosebleeds and lacerations. Jack is a cutman.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? No cutmen appear in boxing matches.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCutman(x) ::: x is a cutman.\nResponsible(x, y) ::: x is responsible for y.\nPrevent(x, y) ::: x prevents y.\nTreat(x, y) ::: x treats y.\nPhysicalDamage(x) ::: x is a physical damage.\nFighter(x) ::: x is a fighter.\nAppear(x, y) ::: x appears in y.\nMatch(x) ::: x is a match.\nBoxing(x) ::: x is a boxing match.\nKickboxing(x) ::: x is a kickboxing match.\nMixedMartialArts(x) ::: x is a mixed martial arts match.\nHandle(x, y) ::: x handles y.\nSwelling(x) ::: x is a swelling.\nNosebleed(x) ::: x is a nosebleed.\nLaceration(x) ::: x is a laceration.\nPremises:\n∀x (Cutman(x) → (Responsible("
    ]
  },
  {
    "id": "FOLIO_train_653",
    "context": "A cutman is responsible for preventing and treating physical damage to a fighter. Cutmen appear in matches such as a boxing, kickboxing or a mixed martial arts bout. Cutmen typically handle swelling, nosebleeds and lacerations. Jack is a cutman.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If someone is not a cutman, then they cannot handle nosebleeds.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCutman(x) ::: x is a cutman.\nHandle(x, y) ::: x can handle y.\nPremises:\nCutman(jack) ::: Jack is a cutman.\n∀x (Cutman(x) → ∃y (Handle(x, y) ∧ Nosebleed(y))) ::: Cutmen typically handle swelling, nosebleeds and lacerations.\nConclusion:\n¬∃x (¬Cutman(x) ∧ ¬∃y (Handle(x, y) ∧ Nosebleed(y))) ::: If someone is not a cutman, then they cannot handle nosebleeds.\n------\nProblem:\nA cutman is responsible for preventing and treating physical damage to a fighter. Cutmen appear in matches such as a boxing, kickboxing or a mixed martial arts bout. Cutmen typically handle swelling, nosebleeds and lacerations. Jack is a cutman.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? If someone is not a cutman, then they cannot handle swelling."
    ]
  },
  {
    "id": "FOLIO_train_654",
    "context": "A cutman is responsible for preventing and treating physical damage to a fighter. Cutmen appear in matches such as a boxing, kickboxing or a mixed martial arts bout. Cutmen typically handle swelling, nosebleeds and lacerations. Jack is a cutman.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jack can treat physical damage.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCutman(x) ::: x is a cutman.\nResponsible(x, y) ::: x is responsible for y.\nPrevent(x, y) ::: x prevents y.\nTreat(x, y) ::: x treats y.\nAppear(x, y) ::: x appears in y.\nMatch(x) ::: x is a match.\nBoxing(x) ::: x is a boxing.\nKickboxing(x) ::: x is a kickboxing.\nMixedMartialArtsBout(x) ::: x is a mixed martial arts bout.\nSwelling(x) ::: x is a swelling.\nNosebleed(x) ::: x is a nosebleed.\nLaceration(x) ::: x is a laceration.\nPremises:\n∀x (Cutman(x) → Responsible(x, prevent(x, physicalDamage))) ::: A cutman is responsible for preventing and treating physical damage to a fighter.\n∀x (Cutman(x) → Respons"
    ]
  },
  {
    "id": "FOLIO_train_655",
    "context": "The Mona Lisa is one of the world's best-known artworks. The Mona Lisa is a portrait painted by Leonardo da Vinci. Leonardo da Vinci was a scientist and painter. Painting genres are history, portrait, animal, landscape, and still life.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? One of the world's best-known artworks is painted by a scientist.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMonaLisa(x) ::: x is the Mona Lisa.\nPortrait(x) ::: x is a portrait.\nScientist(x) ::: x is a scientist.\nPainter(x) ::: x is a painter.\nPaintingGenre(x) ::: x is a painting genre.\nPremises:\nMonaLisa(monaLisa) ∧ Portrait(monaLisa) ::: The Mona Lisa is one of the world's best-known artworks. The Mona Lisa is a portrait painted by Leonardo da Vinci.\nPainter(leonardo) ∧ Scientist(leonardo) ::: Leonardo da Vinci was a scientist and painter.\nPaintingGenre(history) ∧ PaintingGenre(portrait) ∧ PaintingGenre(animal) ∧ PaintingGenre(landscape) ∧ PaintingGenre(stillLife) ::: Painting genres are history, portrait, animal, landscape, and still life.\nConclusion:\nPainter(leonardo) ∧ Scientist"
    ]
  },
  {
    "id": "FOLIO_train_656",
    "context": "The Mona Lisa is one of the world's best-known artworks. The Mona Lisa is a portrait painted by Leonardo da Vinci. Leonardo da Vinci was a scientist and painter. Painting genres are history, portrait, animal, landscape, and still life.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Leonardo da Vinci has artworks in the landscape genre.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nArtwork(x) ::: x is an artwork.\nPortrait(x) ::: x is a portrait.\nHistory(x) ::: x is a history.\nAnimal(x) ::: x is an animal.\nLandscape(x) ::: x is a landscape.\nStillLife(x) ::: x is a still life.\nPaintingGenre(x) ::: x is a painting genre.\nPainter(x) ::: x is a painter.\nScientist(x) ::: x is a scientist.\nPremises:\nArtwork(monaLisa) ∧ Portrait(monaLisa) ::: The Mona Lisa is one of the world's best-known artworks. The Mona Lisa is a portrait painted by Leonardo da Vinci.\nPainter(leonardo) ∧ Scientist(leonardo) ::: Leonardo da Vinci was a scientist and painter.\nPaintingGenre(history) ∧ PaintingGenre(portrait) ∧ PaintingGenre(animal) ∧ PaintingGenre(landscape)"
    ]
  },
  {
    "id": "FOLIO_train_657",
    "context": "The Mona Lisa is one of the world's best-known artworks. The Mona Lisa is a portrait painted by Leonardo da Vinci. Leonardo da Vinci was a scientist and painter. Painting genres are history, portrait, animal, landscape, and still life.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? No world's best-known artworks are portraits.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMonaLisa(x) ::: x is the Mona Lisa.\nPortrait(x) ::: x is a portrait.\nScientist(x) ::: x is a scientist.\nPainter(x) ::: x is a painter.\nPaintingGenre(x) ::: x is a painting genre.\nPremises:\nMonaLisa(monaLisa) ::: The Mona Lisa is one of the world's best-known artworks.\nMonaLisa(monaLisa) ∧ Portrait(monaLisa) ::: The Mona Lisa is a portrait painted by Leonardo da Vinci.\nScientist(leonardo) ∧ Painter(leonardo) ::: Leonardo da Vinci was a scientist and painter.\nPaintingGenre(history) ∧ PaintingGenre(portrait) ∧ PaintingGenre(animal) ∧ PaintingGenre(landscape) ∧ PaintingGenre(stillLife) ::: Painting genres are history, portrait, animal, landscape, and still life.\nConclusion"
    ]
  },
  {
    "id": "FOLIO_train_658",
    "context": "No professional tennis umpires are professional tennis players. If you are a World Tour player, then you are a professional tennis player. All Grand Slam champions are World Tour players. All Grand Slam umpires are professional tennis umpires. Nadal is a World Tour player or a Grand Slam champion",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Nadal is a Grand Slam umpire.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProfessionalTennisUmpire(x) ::: x is a professional tennis umpire.\nProfessionalTennisPlayer(x) ::: x is a professional tennis player.\nWorldTourPlayer(x) ::: x is a World Tour player.\nGrandSlamChampion(x) ::: x is a Grand Slam champion.\nPremises:\n¬(ProfessionalTennisUmpire(x) ∧ ProfessionalTennisPlayer(x)) ::: No professional tennis umpires are professional tennis players.\n(WorldTourPlayer(x) → ProfessionalTennisPlayer(x)) ::: If you are a World Tour player, then you are a professional tennis player.\n∀x (GrandSlamChampion(x) → WorldTourPlayer(x)) ::: All Grand Slam champions are World Tour players.\n∀x (GrandSlamUmpire(x) → ProfessionalTennisUmpire(x)) ::: All Grand Slam umpires are professional tennis umpires.\n(WorldTourPlayer(nadal) ∨ GrandSlamChampion(nadal)) ::: Nadal is a World Tour player or"
    ]
  },
  {
    "id": "FOLIO_train_659",
    "context": "No professional tennis umpires are professional tennis players. If you are a World Tour player, then you are a professional tennis player. All Grand Slam champions are World Tour players. All Grand Slam umpires are professional tennis umpires. Nadal is a World Tour player or a Grand Slam champion",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Nadal is not a Grand Slam umpire.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProfessionalTennisUmpire(x) ::: x is a professional tennis umpire.\nProfessionalTennisPlayer(x) ::: x is a professional tennis player.\nWorldTourPlayer(x) ::: x is a World Tour player.\nGrandSlamChampion(x) ::: x is a Grand Slam champion.\nPremises:\n¬(ProfessionalTennisUmpire(x) ∧ ProfessionalTennisPlayer(x)) ::: No professional tennis umpires are professional tennis players.\n(WorldTourPlayer(x) → ProfessionalTennisPlayer(x)) ::: If you are a World Tour player, then you are a professional tennis player.\n∀x (GrandSlamChampion(x) → WorldTourPlayer(x)) ::: All Grand Slam champions are World Tour players.\n∀x (GrandSlamUmpire(x) → ProfessionalTennisUmpire(x)) ::: All Grand Slam umpires are professional tennis umpires.\n(WorldTourPlayer(nadal) ∨ GrandSlamChampion(nadal)) ::: Nadal is a World Tour player or"
    ]
  },
  {
    "id": "FOLIO_train_660",
    "context": "No professional tennis umpires are professional tennis players. If you are a World Tour player, then you are a professional tennis player. All Grand Slam champions are World Tour players. All Grand Slam umpires are professional tennis umpires. Nadal is a World Tour player or a Grand Slam champion",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Nadal is a Grand Slam champion.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProfessionalTennisUmpire(x) ::: x is a professional tennis umpire.\nProfessionalTennisPlayer(x) ::: x is a professional tennis player.\nWorldTourPlayer(x) ::: x is a World Tour player.\nGrandSlamChampion(x) ::: x is a Grand Slam champion.\nGrandSlamUmpire(x) ::: x is a Grand Slam umpire.\nPremises:\n¬(ProfessionalTennisUmpire(x) ∧ ProfessionalTennisPlayer(x)) ::: No professional tennis umpires are professional tennis players.\n(WorldTourPlayer(x) → ProfessionalTennisPlayer(x)) ::: If you are a World Tour player, then you are a professional tennis player.\n∀x (GrandSlamChampion(x) → WorldTourPlayer(x)) ::: All Grand Slam champions are World Tour players.\n∀x (GrandSlamUmpire(x) → ProfessionalTennisUmpire(x)) ::: All Grand Slam umpires are professional tennis umpires.\n(WorldTourPlayer(nadal) ∨ GrandSlamChampion(nadal)) ::: Nadal is a World Tour player or a Grand Slam champion\nConclusion:\nGrandSlamChampion(nadal) ::: Nadal is a Grand Slam champion.\n------"
    ]
  },
  {
    "id": "FOLIO_train_661",
    "context": "No professional tennis umpires are professional tennis players. If you are a World Tour player, then you are a professional tennis player. All Grand Slam champions are World Tour players. All Grand Slam umpires are professional tennis umpires. Nadal is a World Tour player or a Grand Slam champion",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Nadal is neither a Grand Slam umpire nor a professional tennis umpire.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProfessionalTennisUmpire(x) ::: x is a professional tennis umpire.\nProfessionalTennisPlayer(x) ::: x is a professional tennis player.\nWorldTourPlayer(x) ::: x is a World Tour player.\nGrandSlamChampion(x) ::: x is a Grand Slam champion.\nPremises:\n¬(ProfessionalTennisUmpire(x) ∧ ProfessionalTennisPlayer(x)) ::: No professional tennis umpires are professional tennis players.\n(WorldTourPlayer(x) → ProfessionalTennisPlayer(x)) ::: If you are a World Tour player, then you are a professional tennis player.\n∀x (GrandSlamChampion(x) → WorldTourPlayer(x)) ::: All Grand Slam champions are World Tour players.\n∀x (GrandSlamUmpire(x) → ProfessionalTennisUmpire(x)) ::: All Grand Slam umpires are professional tennis umpires.\n(WorldTourPlayer(nadal) ∨ GrandSlamChampion(nadal)) ::: Nadal is a World Tour player or a Grand Slam champion\nConclusion:\n¬(ProfessionalTennisUmpire(nadal) ∨ ProfessionalTennisUmpire(nadal)) ::: Nadal is neither a Grand Slam umpire nor a professional tennis umpire"
    ]
  },
  {
    "id": "FOLIO_train_662",
    "context": "No professional tennis umpires are professional tennis players. If you are a World Tour player, then you are a professional tennis player. All Grand Slam champions are World Tour players. All Grand Slam umpires are professional tennis umpires. Nadal is a World Tour player or a Grand Slam champion",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Nadal is a professional tennis umpire, then Nadal is a Grand Slam Umpire.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProfessionalTennisUmpire(x) ::: x is a professional tennis umpire.\nProfessionalTennisPlayer(x) ::: x is a professional tennis player.\nWorldTourPlayer(x) ::: x is a World Tour player.\nGrandSlamChampion(x) ::: x is a Grand Slam champion.\nGrandSlamUmpire(x) ::: x is a Grand Slam umpire.\nPremises:\n¬(ProfessionalTennisUmpire(x) ∧ ProfessionalTennisPlayer(x)) ::: No professional tennis umpires are professional tennis players.\n(WorldTourPlayer(x) → ProfessionalTennisPlayer(x)) ::: If you are a World Tour player, then you are a professional tennis player.\n∀x (GrandSlamChampion(x) → WorldTourPlayer(x)) ::: All Grand Slam champions are World Tour players.\n∀x (GrandSlamUmpire(x) → ProfessionalTennisUmpire(x)) ::: All Grand Slam umpires are professional tennis umpires.\n(WorldTourPlayer(nadal) ∨ GrandSlamChampion(nadal)) ::: Nadal is a World Tour player or a Grand Slam champion\nConclusion:\n¬(ProfessionalTennisUmpire(nadal) ∧ GrandSlamUmpire("
    ]
  },
  {
    "id": "FOLIO_train_663",
    "context": "No professional tennis umpires are professional tennis players. If you are a World Tour player, then you are a professional tennis player. All Grand Slam champions are World Tour players. All Grand Slam umpires are professional tennis umpires. Nadal is a World Tour player or a Grand Slam champion",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Nadal is a Grand Slam umpire or a professional tennis player, then Nadal is a Grand Slam umpire.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProfessionalTennisUmpire(x) ::: x is a professional tennis umpire.\nProfessionalTennisPlayer(x) ::: x is a professional tennis player.\nWorldTourPlayer(x) ::: x is a World Tour player.\nGrandSlamChampion(x) ::: x is a Grand Slam champion.\nPremises:\n¬(ProfessionalTennisUmpire(x) ∧ ProfessionalTennisPlayer(x)) ::: No professional tennis umpires are professional tennis players.\n(WorldTourPlayer(x) → ProfessionalTennisPlayer(x)) ::: If you are a World Tour player, then you are a professional tennis player.\n∀x (GrandSlamChampion(x) → WorldTourPlayer(x)) ::: All Grand Slam champions are World Tour players.\n∀x (GrandSlamUmpire(x) → ProfessionalTennisUmpire(x)) ::: All Grand Slam umpires are professional tennis umpires.\n(WorldTourPlayer(nadal) ∨ GrandSlamChampion(nadal)) ::: Nadal is a World Tour player or a Grand Slam champion\nConclusion:\n¬(GrandSlamUmpire(nadal) ∧ ProfessionalTennisPlayer(nadal)) ::: If Nadal is a Grand Slam umpire or a professional tennis player, then Nadal is"
    ]
  },
  {
    "id": "FOLIO_train_664",
    "context": "Buisnesses are either sanctioned or unsanctioned. Sanctioned buisnesses are limited. Unsanctioned buisnesses are free. The Crude Oil Data Exchange is a buisness that isn't free.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Crude Oil Data Exchange is sanctioned.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSanctioned(x) ::: x is sanctioned.\nLimited(x) ::: x is limited.\nFree(x) ::: x is free.\nBuisness(x) ::: x is a buisness.\nPremises:\n∀x (Buisness(x) ⊕ ¬Buisness(x)) ::: Buisnesses are either sanctioned or unsanctioned.\n∀x (Sanctioned(x) → Limited(x)) ::: Sanctioned buisnesses are limited.\n∀x (¬Sanctioned(x) → Free(x)) ::: Unsanctioned buisnesses are free.\n¬Free(crudeOilDataExchange) ::: The Crude Oil Data Exchange is a buisness that isn't free.\nConclusion:\nSanctioned(crudeOilDataExchange) ::: Crude Oil Data Exchange is sanctioned.\n------\nProblem:\nThe first person to be born in space was born in 1990. The first person to be born in space was born in 1991. The first person to be born in space was born in 1992. The first person to be born in space was born in 1993. The first person to be born in space was born in 1994. The first person to be born in"
    ]
  },
  {
    "id": "FOLIO_train_665",
    "context": "Buisnesses are either sanctioned or unsanctioned. Sanctioned buisnesses are limited. Unsanctioned buisnesses are free. The Crude Oil Data Exchange is a buisness that isn't free.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Crude Oil Data Exchange is unsanctioned.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSanctioned(x) ::: x is sanctioned.\nLimited(x) ::: x is limited.\nFree(x) ::: x is free.\nBuisness(x) ::: x is a buisness.\nPremises:\n∀x (Buisness(x) ∨ ¬Buisness(x)) ::: Buisnesses are either sanctioned or unsanctioned.\n∀x (Sanctioned(x) → Limited(x)) ::: Sanctioned buisnesses are limited.\n∀x (¬Sanctioned(x) → Free(x)) ::: Unsanctioned buisnesses are free.\n¬Free(crudeOilDataExchange) ::: The Crude Oil Data Exchange is a buisness that isn't free.\nConclusion:\n¬Sanctioned(crudeOilDataExchange) ::: Crude Oil Data Exchange is unsanctioned.\n------\nProblem:\nThe first person to be born in space was born in 1990. The first person to be born in space was born in 1991. The first person to be born in space was born in 1992. The first person to be born in space was born in 1993. The first person to be born in space was born in 1994. The first person to be"
    ]
  },
  {
    "id": "FOLIO_train_666",
    "context": "Buisnesses are either sanctioned or unsanctioned. Sanctioned buisnesses are limited. Unsanctioned buisnesses are free. The Crude Oil Data Exchange is a buisness that isn't free.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Crude Oil Data Exchange is limited.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSanctioned(x) ::: x is a sanctioned buisness.\nUnsanctioned(x) ::: x is an unsanctioned buisness.\nLimited(x) ::: x is limited.\nFree(x) ::: x is free.\nBuisness(x) ::: x is a buisness.\nPremises:\n∀x (Sanctioned(x) ⊕ Unsanctioned(x)) ::: Buisnesses are either sanctioned or unsanctioned.\n∀x (Sanctioned(x) → Limited(x)) ::: Sanctioned buisnesses are limited.\n∀x (Unsanctioned(x) → Free(x)) ::: Unsanctioned buisnesses are free.\n¬Free(crudeOilDataExchange) ::: The Crude Oil Data Exchange is a buisness that isn't free.\nConclusion:\nLimited(crudeOilDataExchange) ::: Crude Oil Data Exchange is limited.\n------\nProblem:\nThe United States is a country. The United States is a democracy. The United States is a republic. The United States is a federation. The United States is a constitutional republic. The United States is a federal republic. The United States is a presidential system. The United States is a federal presidential constitutional republic.\nQuestion"
    ]
  },
  {
    "id": "FOLIO_train_667",
    "context": "When something is depressing, it is sad. V is depressing.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? V is invigorating",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDepressing(x) ::: x is depressing.\nSad(x) ::: x is sad.\nInvigorating(x) ::: x is invigorating.\nPremises:\n∀x (Depressing(x) → Sad(x)) ::: When something is depressing, it is sad.\nDepressing(v) ::: V is depressing.\nConclusion:\n¬Invigorating(v) ::: V is invigorating\n------\nProblem:\nA person is a student if and only if the person is enrolled in a course. A person is enrolled in a course if and only if the person is taking the course. A person is taking a course if and only if the person is a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? A person is enrolled in a course if and only if the person is a student.\nBased on the above information, is the following statement true, false, or uncertain? A person is enrolled in a course if and only if the person is taking the course.\nBased on the above information, is the following statement true, false, or uncertain? A person is taking a course if and only if the person is enrolled in the course.\n###\nPredicates:\nStudent(x) ::: x is a student.\nEnrolled(x, y"
    ]
  },
  {
    "id": "FOLIO_train_668",
    "context": "Palstaves are a type of early bronze axe. Commonly found in northern, western and south-western Europe, palstaves are cast in moulds. John Evans is an archeologist who popularized the term \"palstave\". A paalstab is not an axe, but rather a digging shovel.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? John Evans Popularized the term paalstab.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPalstave(x) ::: x is a palstave.\nAxe(x) ::: x is an axe.\nCast(x) ::: x is cast in moulds.\nArcheologist(x) ::: x is an archeologist.\nPopularize(x, y) ::: x popularized the term y.\nPaalstab(x) ::: x is a paalstab.\nShovel(x) ::: x is a shovel.\nPremises:\n∀x (Palstave(x) → Axe(x)) ::: Palstaves are a type of early bronze axe.\n∀x (Palstave(x) → Cast(x)) ::: Commonly found in northern, western and south-western Europe, palstaves are cast in moulds.\nArcheologist(john) ∧ Popularize(john, palstave) ::: John Evans is an archeologist who popularized the term \"palstave\".\n¬(Paalstab(x) → Axe(x)) ::: A paalstab is not an axe, but rather a digging shovel.\nConclusion:\nPopularize(john, paalstab) ::: John Evans Popularized the term paalstab.\n------\nProblem:\nThe term \"scientist\" was coined by William Whewell in 1833"
    ]
  },
  {
    "id": "FOLIO_train_669",
    "context": "Palstaves are a type of early bronze axe. Commonly found in northern, western and south-western Europe, palstaves are cast in moulds. John Evans is an archeologist who popularized the term \"palstave\". A paalstab is not an axe, but rather a digging shovel.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There is an axe that is commonly found in Western Europe.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPalstave(x) ::: x is a palstave.\nAxe(x) ::: x is an axe.\nCast(x) ::: x is cast in moulds.\nArcheologist(x) ::: x is an archeologist.\nPopularize(x, y) ::: x popularized the term y.\nTerm(x) ::: x is a term.\nPaalstab(x) ::: x is a paalstab.\nShovel(x) ::: x is a shovel.\nPremises:\nPalstave(x) ∧ Cast(x) ∧ CommonlyFound(x, westernEurope) ∧ CommonlyFound(x, northernEurope) ∧ CommonlyFound(x, southWesternEurope) ::: Palstaves are a type of early bronze axe. Commonly found in northern, western and south-western Europe, palstaves are cast in moulds.\nArcheologist(john) ∧ Popularize(john, palstave) ::: John Evans is an archeologist who popularized the term \"palstave\".\n¬Paalstab(x) ∧ Shovel(x) ::: A paalstab is not an axe, but rather a digging shovel.\nConclusion:\nAxe(x) ∧ CommonlyFound(x, westernEurope) ::: There is an"
    ]
  },
  {
    "id": "FOLIO_train_670",
    "context": "Palstaves are a type of early bronze axe. Commonly found in northern, western and south-western Europe, palstaves are cast in moulds. John Evans is an archeologist who popularized the term \"palstave\". A paalstab is not an axe, but rather a digging shovel.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Archeologists haven't popularized anything.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPalstave(x) ::: x is a palstave.\nAxe(x) ::: x is an axe.\nCast(x) ::: x is cast in moulds.\nArcheologist(x) ::: x is an archeologist.\nPopularize(x, y) ::: x popularized y.\nPaalstab(x) ::: x is a paalstab.\nShovel(x) ::: x is a shovel.\nPremises:\n∀x (Palstave(x) → Axe(x)) ::: Palstaves are a type of early bronze axe.\n∀x (Palstave(x) → Cast(x)) ::: Commonly found in northern, western and south-western Europe, palstaves are cast in moulds.\nArcheologist(john) ∧ Popularize(john, palstave) ::: John Evans is an archeologist who popularized the term \"palstave\".\n¬(Paalstab(x) → Axe(x)) ::: A paalstab is not an axe, but rather a digging shovel.\nConclusion:\n¬∃x (Archeologist(x) ∧ Popularize(x, anything)) ::: Archeologists haven't popularized anything.\n------"
    ]
  },
  {
    "id": "FOLIO_train_671",
    "context": "Koei Tecmo is a Japanese video game and anime holding company. Holding companies hold several companies. Tecmo was disbanded in Japan, while Koei survived, but was renamed. Video game holding companies are holding companies.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Koei Tecmo holds another company.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nHoldingCompany(x) ::: x is a holding company.\nVideoGameHoldingCompany(x) ::: x is a video game holding company.\nJapanese(x) ::: x is a Japanese company.\nDisband(x) ::: x is disbanded.\nSurvive(x) ::: x survives.\nRename(x, y) ::: x is renamed to y.\nHold(x, y) ::: x holds y.\nPremises:\nJapanese(koeiTecmo) ∧ HoldingCompany(koeiTecmo) ::: Koei Tecmo is a Japanese video game and anime holding company.\n∀x (HoldingCompany(x) → Hold(x, anotherCompany)) ::: Holding companies hold several companies.\nTecmo(x) ∧ Disband(x) ∧ Koei(y) ∧ Survive(y) ∧ Rename(y, koei) ::: Tecmo was disbanded in Japan, while Koei survived, but was renamed.\n∀x (VideoGameHoldingCompany(x) → HoldingCompany(x)) ::: Video game holding companies are holding companies.\nConclusion:\nHold(koeiTecmo, anotherCompany) ::: Koei Tecmo holds another company"
    ]
  },
  {
    "id": "FOLIO_train_672",
    "context": "Koei Tecmo is a Japanese video game and anime holding company. Holding companies hold several companies. Tecmo was disbanded in Japan, while Koei survived, but was renamed. Video game holding companies are holding companies.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tecmo holds another company.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nHoldingCompany(x) ::: x is a holding company.\nVideoGameHoldingCompany(x) ::: x is a video game holding company.\nHold(x, y) ::: x holds y.\nDisband(x) ::: x is disbanded.\nSurvive(x) ::: x survives.\nRename(x, y) ::: x is renamed to y.\nPremises:\nHoldingCompany(koeiTecmo) ::: Koei Tecmo is a Japanese video game and anime holding company.\n∀x (HoldingCompany(x) → Hold(x, anotherCompany)) ::: Holding companies hold several companies.\nTecmo(x) ∧ Disband(x) ∧ Koei(y) ∧ Survive(y) ∧ Rename(y, koei) ::: Tecmo was disbanded in Japan, while Koei survived, but was renamed.\nVideoGameHoldingCompany(koeiTecmo) ::: Video game holding companies are holding companies.\nConclusion:\nHold(tecmo, anotherCompany) ::: Tecmo holds another company.\n------\nProblem:\nThe 2010 FIFA World Cup was the 19th FIFA World Cup, the world championship for men's national association football teams."
    ]
  },
  {
    "id": "FOLIO_train_673",
    "context": "Koei Tecmo is a Japanese video game and anime holding company. Holding companies hold several companies. Tecmo was disbanded in Japan, while Koei survived, but was renamed. Video game holding companies are holding companies.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Koei Tecmo holds anime.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nHoldingCompany(x) ::: x is a holding company.\nVideoGameHoldingCompany(x) ::: x is a video game holding company.\nHold(x, y) ::: x holds y.\nDisband(x) ::: x is disbanded.\nSurvive(x) ::: x survives.\nRename(x, y) ::: x is renamed to y.\nPremises:\nHoldingCompany(koeiTecmo) ::: Koei Tecmo is a Japanese video game and anime holding company.\n∀x (HoldingCompany(x) → Hold(x, severalCompanies)) ::: Holding companies hold several companies.\nTecmo(x) ∧ Disband(x) ∧ Koei(y) ∧ Survive(y) ∧ Rename(y, koeiTecmo) ::: Tecmo was disbanded in Japan, while Koei survived, but was renamed.\n∀x (VideoGameHoldingCompany(x) → HoldingCompany(x)) ::: Video game holding companies are holding companies.\nConclusion:\nHold(koeiTecmo, anime) ::: Koei Tecmo holds anime.\n------\nProblem:\nThe United States of America is a country. The United States of America is"
    ]
  },
  {
    "id": "FOLIO_train_674",
    "context": "The PlayStation EyeToy is a camera accessory for the Playstation 2. The PlayStation Eye is a camera accessory for the Playstation 3. The Playstation Camera is a camera accessory for the Playstation 4 and the Playstation 5. Camera accessory for the system is compatible with that system Only the Playstation Camera is compatible with more than one system.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Playstation Eye can be used with the Playstation 2 and the Playstation 3.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEyeToy(x) ::: x is a PlayStation EyeToy.\nEye(x) ::: x is a PlayStation Eye.\nCamera(x) ::: x is a camera accessory for the Playstation.\nCompatible(x, y) ::: x is compatible with y.\nPremises:\nEyeToy(playstation2) ∧ EyeToy(playstation3) ::: The PlayStation EyeToy is a camera accessory for the Playstation 2. The PlayStation Eye is a camera accessory for the Playstation 3.\nEye(playstation4) ∧ Eye(playstation5) ::: The Playstation Camera is a camera accessory for the Playstation 4 and the Playstation 5.\n∀x (Camera(x) → Compatible(x, system)) ::: Camera accessory for the system is compatible with that system.\n¬∃x (Camera(x) ∧ ∀y (Compatible(x, y) → ¬Compatible(x, y))) ::: Only the Playstation Camera is compatible with more than one system.\nConclusion:\nCompatible(playstation2, playstation3) ::: The Playstation Eye can be used with the Playstation 2 and the Playstation 3.\n------\nProblem:"
    ]
  },
  {
    "id": "FOLIO_train_675",
    "context": "The PlayStation EyeToy is a camera accessory for the Playstation 2. The PlayStation Eye is a camera accessory for the Playstation 3. The Playstation Camera is a camera accessory for the Playstation 4 and the Playstation 5. Camera accessory for the system is compatible with that system Only the Playstation Camera is compatible with more than one system.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Playstation EyeToy is compatible with the Playstation 2.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEyeToy(x) ::: x is a PlayStation EyeToy.\nEye(x) ::: x is a PlayStation Eye.\nCamera(x) ::: x is a PlayStation Camera.\nCompatible(x, y) ::: x is compatible with y.\nPremises:\nEyeToy(playstation2) ::: The PlayStation EyeToy is a camera accessory for the Playstation 2.\nEye(playstation3) ::: The PlayStation Eye is a camera accessory for the Playstation 3.\nCamera(playstation4) ∧ Camera(playstation5) ::: The Playstation Camera is a camera accessory for the Playstation 4 and the Playstation 5.\n∀x (Compatible(x, system) → Camera(x)) ::: Camera accessory for the system is compatible with that system.\n∃x (Camera(x) ∧ ∀y (Compatible(x, y) → ¬Compatible(x, y))) ::: Only the Playstation Camera is compatible with more than one system.\nConclusion:\nCompatible(playstation2, playstation2) ::: The Playstation EyeToy is compatible with the Playstation 2.\n------\nProblem:\nThe PlayStation EyeToy is a camera accessory for the"
    ]
  },
  {
    "id": "FOLIO_train_676",
    "context": "The PlayStation EyeToy is a camera accessory for the Playstation 2. The PlayStation Eye is a camera accessory for the Playstation 3. The Playstation Camera is a camera accessory for the Playstation 4 and the Playstation 5. Camera accessory for the system is compatible with that system Only the Playstation Camera is compatible with more than one system.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Playstation Camera can be used for all Playstation consoles.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEyeToy(x) ::: x is a PlayStation EyeToy.\nEye(x) ::: x is a PlayStation Eye.\nCamera(x) ::: x is a PlayStation Camera.\nCompatible(x, y) ::: x is compatible with y.\nPremises:\nEyeToy(playstation2) ∧ Eye(playstation3) ∧ Camera(playstation4) ∧ Camera(playstation5) ::: The PlayStation EyeToy is a camera accessory for the Playstation 2. The PlayStation Eye is a camera accessory for the Playstation 3. The Playstation Camera is a camera accessory for the Playstation 4 and the Playstation 5.\n∀x (EyeToy(x) → Compatible(x, playstation2)) ∧ ∀x (Eye(x) → Compatible(x, playstation3)) ∧ ∀x (Camera(x) → Compatible(x, playstation4)) ∧ ∀x (Camera(x) → Compatible(x, playstation5)) ::: Camera accessory for the system is compatible with that system.\n¬∃x (EyeToy(x) ∨ Eye(x) ∨ Camera(x)) ∧ ∀x (E"
    ]
  },
  {
    "id": "FOLIO_train_677",
    "context": "Adam Buska is a European football player. If a European plays football, they play what Americans call soccer.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Adam Buska plays what Americans call soccer.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEuropean(x) ::: x is a European.\nFootballPlayer(x) ::: x is a football player.\nPlay(x, y) ::: x plays y.\nSoccer(x) ::: x is what Americans call soccer.\nPremises:\nEuropean(adam) ∧ FootballPlayer(adam) ::: Adam Buska is a European football player.\n∀x (European(x) → Play(x, soccer)) ::: If a European plays football, they play what Americans call soccer.\nConclusion:\nPlay(adam, soccer) ::: Adam Buska plays what Americans call soccer.\n------\nProblem:\nA person is a student if and only if they are enrolled in a university. A person is a student if and only if they are enrolled in a university.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? A person is a student if and only if they are enrolled in a university.\nBased on the above information, is the following statement true, false, or uncertain? A person is enrolled in a university if and only if they are a student.\n###\nPredicates:\nStudent(x) ::: x is a student.\nEnrolled(x) ::: x is enrolled in a university."
    ]
  },
  {
    "id": "FOLIO_train_678",
    "context": "If the game has sold more than 1 million copies, then it is on the Best Seller list. All Games developed by Paradox Development Studio sold more than 1 million copies. Some games published before 2010 support the Linux OS system. All games on the Best Seller list are popular among young people. FIFA22 neither supports the Linux OS system nor is it popular among young people.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? FIFA21 is published before 2010",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDevelopedBy(x, y) ::: x is developed by y.\nPublishedBefore(x, y) ::: x is published before year y.\nSupport(x, y) ::: x supports y.\nBestSeller(x) ::: x is on the Best Seller list.\nPopular(x, y) ::: x is popular among y.\nPremises:\nBestSeller(x) → (DevelopedBy(x, paradoxDevelopmentStudio) ∧ PublishedBefore(x, year2010)) ::: If the game has sold more than 1 million copies, then it is on the Best Seller list.\n∀x (DevelopedBy(x, paradoxDevelopmentStudio) → BestSeller(x)) ::: All Games developed by Paradox Development Studio sold more than 1 million copies.\n∃x (PublishedBefore(x, year2010) ∧ Support(x, linux)) ::: Some games published before 2010 support the Linux OS system.\n∀x (BestSeller(x) → Popular(x, youngPeople)) ::: All games on the Best Seller list are popular among young people.\n¬(Support(fifa22, linux) ∨ Popular(fifa22, youngPeople)) ::: FIFA22 neither supports"
    ]
  },
  {
    "id": "FOLIO_train_679",
    "context": "If the game has sold more than 1 million copies, then it is on the Best Seller list. All Games developed by Paradox Development Studio sold more than 1 million copies. Some games published before 2010 support the Linux OS system. All games on the Best Seller list are popular among young people. FIFA22 neither supports the Linux OS system nor is it popular among young people.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? FIFA21 is published before 2010 and developed by Paradox Development Studio",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDeveloped(x, y) ::: x is developed by y.\nPublished(x, y) ::: x is published in year y.\nSupport(x, y) ::: x supports y.\nPopular(x, y) ::: x is popular among y.\nBestSeller(x) ::: x is on the Best Seller list.\nPremises:\nBestSeller(x) → (Developed(x, paradoxDevelopmentStudio) ∧ Published(x, year2010)) ::: If the game has sold more than 1 million copies, then it is on the Best Seller list.\n∀x (Developed(x, paradoxDevelopmentStudio) → BestSeller(x)) ::: All Games developed by Paradox Development Studio sold more than 1 million copies.\n∃x (Published(x, year2009) ∧ Support(x, linux)) ::: Some games published before 2010 support the Linux OS system.\n∀x (BestSeller(x) → Popular(x, youngPeople)) ::: All games on the Best Seller list are popular among young people.\n¬(Support(fifa22, linux) ∨ Popular(fifa22, youngPeople)) ::: FIFA22 neither supports the Linux OS system nor is"
    ]
  },
  {
    "id": "FOLIO_train_680",
    "context": "If the game has sold more than 1 million copies, then it is on the Best Seller list. All Games developed by Paradox Development Studio sold more than 1 million copies. Some games published before 2010 support the Linux OS system. All games on the Best Seller list are popular among young people. FIFA22 neither supports the Linux OS system nor is it popular among young people.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? if FIFA21 is either a game published before 2010 or developed by Paradox Development Studio, then it is either in the Best Seller list and sold more than 1 million copies; or not in the Best Seller list and hasn't sold more than 1 million copies.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDeveloped(x, y) ::: x is developed by y.\nPublished(x, y) ::: x is published in year y.\nSupport(x, y) ::: x supports y.\nBestSeller(x) ::: x is on the Best Seller list.\nPopular(x, y) ::: x is popular among y.\nPremises:\nBestSeller(x) → (Developed(x, paradoxDevelopmentStudio) ∨ Published(x, year2010)) ::: If the game has sold more than 1 million copies, then it is on the Best Seller list.\n∀x (Developed(x, paradoxDevelopmentStudio) → BestSeller(x)) ::: All Games developed by Paradox Development Studio sold more than 1 million copies.\n∃x (Published(x, year2010) ∧ Support(x, linux)) ::: Some games published before 2010 support the Linux OS system.\n∀x (BestSeller(x) → Popular(x, youngPeople)) ::: All games on the Best Seller list are popular among young people.\n¬(Support(fifa22, linux) ∧ Popular(fifa22, youngPeople)) ::: FIFA22 neither supports the Linux OS system nor is it popular among young people.\nConclusion:\n(Developed(fifa21, paradoxDevelopmentStudio) ∨ Published(fifa21, year2010)) → (BestSeller(fifa21) ∨ ¬BestSeller(fifa21)) ::: if FIFA21 is either a game published before 2010 or developed by Paradox Development Studio, then it is either in the Best Seller list and sold more than 1 million copies; or not in the Best Seller list and hasn't sold more than 1 million copies.\n------"
    ]
  },
  {
    "id": "FOLIO_train_681",
    "context": "China is one of BRICS and its economy is emerging. India is one of BRICS and its economy is emerging. All people from China speak Chinese. All people from India speak Hindi or English. There is an Indian.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? All people from BRICS neither speak Hindi nor speak English.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBRICS(x) ::: x is one of BRICS.\nEconomy(x) ::: x is an emerging economy.\nChinese(x) ::: x speaks Chinese.\nHindi(x) ::: x speaks Hindi.\nEnglish(x) ::: x speaks English.\nPremises:\nBRICS(china) ∧ Economy(china) ::: China is one of BRICS and its economy is emerging.\nBRICS(india) ∧ Economy(india) ::: India is one of BRICS and its economy is emerging.\n∀x (Chinese(x) ∧ BRICS(x)) ::: All people from China speak Chinese.\n∀x (Hindi(x) ∨ English(x) ∧ BRICS(x)) ::: All people from India speak Hindi or English.\n∃x (BRICS(x)) ::: There is an Indian.\nConclusion:\n¬∃x (Chinese(x) ∨ Hindi(x) ∨ English(x) ∧ BRICS(x)) ::: All people from BRICS neither speak Hindi nor speak English.\n------\nProblem:\nThe United States is a country. The United States is a democracy. The United States is a republic. The United States is a federation. The United States is a federal republic. The United States is a presidential system. The United States is a constitutional republic. The United States is a representative democracy. The United States is a federal presidential constitutional republic. The United States is a federal presidential constitutional republic. The United States is a federal presidential constitutional republic. The United States is a federal presidential constitutional republic. The United States is a federal presidential constitutional republic. The United States is a federal presidential constitutional republic. The United States is a federal presidential constitutional republic. The United States is a federal president"
    ]
  },
  {
    "id": "FOLIO_train_682",
    "context": "China is one of BRICS and its economy is emerging. India is one of BRICS and its economy is emerging. All people from China speak Chinese. All people from India speak Hindi or English. There is an Indian.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? India's economy is not emerging.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBRICS(x) ::: x is one of BRICS.\nEconomy(x) ::: x is an economy.\nEmerging(x) ::: x is emerging.\nChinese(x) ::: x speaks Chinese.\nHindi(x) ::: x speaks Hindi.\nEnglish(x) ::: x speaks English.\nPremises:\nBRICS(china) ∧ Economy(china) ∧ Emerging(china) ::: China is one of BRICS and its economy is emerging.\nBRICS(india) ∧ Economy(india) ∧ Emerging(india) ::: India is one of BRICS and its economy is emerging.\n∀x (Chinese(x) ∧ ¬Hindi(x) ∧ ¬English(x)) ::: All people from China speak Chinese.\n∀x (Hindi(x) ∨ English(x)) ::: All people from India speak Hindi or English.\n∃x (Indian(x)) ::: There is an Indian.\nConclusion:\n¬Emerging(india) ::: India's economy is not emerging.\n------\nProblem:\nThe United States is a country. The United States is a democracy. The United States is a republic. The United States is a federation. The United States is a federal republic. The United States is a presidential republic. The United States is a constitutional republic. The United States is a representative democracy. The United States is a liberal democracy. The United States is a liberal republic. The United States is a liberal federal republic. The United States is a liberal presidential republic. The United States is a liberal constitutional republic. The United States is a liberal representative democracy. The United States is a liberal democratic republic. The United States is a liberal democratic federal republic. The United States is a liberal democratic presidential"
    ]
  },
  {
    "id": "FOLIO_train_683",
    "context": "China is one of BRICS and its economy is emerging. India is one of BRICS and its economy is emerging. All people from China speak Chinese. All people from India speak Hindi or English. There is an Indian.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There is a person from BRICS speaking Hindi.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBRICS(x) ::: x is one of BRICS.\nEconomy(x) ::: x is an emerging economy.\nChinese(x) ::: x speaks Chinese.\nHindi(x) ::: x speaks Hindi.\nEnglish(x) ::: x speaks English.\nIndian(x) ::: x is an Indian.\nPremises:\nBRICS(china) ∧ Economy(china) ::: China is one of BRICS and its economy is emerging.\nBRICS(india) ∧ Economy(india) ::: India is one of BRICS and its economy is emerging.\n∀x (Chinese(x) ∧ BRICS(x)) ::: All people from China speak Chinese.\n∀x (Hindi(x) ∨ English(x) ∧ Indian(x)) ::: All people from India speak Hindi or English.\n∃x (Indian(x)) ::: There is an Indian.\nConclusion:\n∃x (Hindi(x) ∧ BRICS(x)) ::: There is a person from BRICS speaking Hindi.\n------\nProblem:\nThe United States is a country. The United States is a democracy. The United States is a republic. The United States is a federation. The United States is a federal republic. The United States is a presidential republic. The United States is a constitutional republic. The United States is a representative democracy. The United States is a liberal democracy. The United States is a liberal republic. The United States is a liberal federal republic. The United States is a liberal presidential republic. The United States is a liberal constitutional republic. The United States is a liberal representative democracy. The United States is a liberal democratic republic. The United States is a liberal democratic federal republic. The United States is a liberal democratic presidential republic. The United States is a"
    ]
  },
  {
    "id": "FOLIO_train_684",
    "context": "Daveed Diggs is an actor and film producer. Daveed Diggs played two roles in the musical Hamilton. One of the actors from Hamilton won the best actor award. The actor playing Thomas Jefferson won the best actor award. Daveed Diggs played Thomas Jefferson. Musicals are not films.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Hamilton is a film.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nActor(x) ::: x is an actor.\nFilmProducer(x) ::: x is a film producer.\nPlay(x, y) ::: x plays y.\nRole(x) ::: x is a role.\nMusical(x) ::: x is a musical.\nFilm(x) ::: x is a film.\nBestActorAward(x) ::: x won the best actor award.\nPremises:\nActor(daveed) ∧ FilmProducer(daveed) ::: Daveed Diggs is an actor and film producer.\nPlay(daveed, role1) ∧ Play(daveed, role2) ::: Daveed Diggs played two roles in the musical Hamilton.\nBestActorAward(actor) ∧ Play(actor, thomasJefferson) ::: One of the actors from Hamilton won the best actor award. The actor playing Thomas Jefferson won the best actor award.\nPlay(daveed, thomasJefferson) ::: Daveed Diggs played Thomas Jefferson.\n¬Musical(x) → Film(x) ::: Musicals are not films.\nConclusion:\nFilm(hamilton) ::: Hamilton is a film.\n------\nProblem:\nThe first person to win the Nobel Prize in Literature was a poet. The first person to win the Nobel Prize in Literature was a novelist. The first person to win the Nobel Prize in Literature was a playwright. The first person to win the Nobel Prize in Literature was a short story writer. The first person to win the Nobel Prize in Literature was a journalist. The first person to win the Nobel Prize in Literature was a philosopher. The first person to win the Nobel Prize in Literature was a historian. The first person to win the Nobel Prize in Literature was a biographer. The first person to win the Nobel Prize in Literature was a translator. The first person to win"
    ]
  },
  {
    "id": "FOLIO_train_685",
    "context": "Daveed Diggs is an actor and film producer. Daveed Diggs played two roles in the musical Hamilton. One of the actors from Hamilton won the best actor award. The actor playing Thomas Jefferson won the best actor award. Daveed Diggs played Thomas Jefferson. Musicals are not films.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Daveed Diggs won the best actor award.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nActor(x) ::: x is an actor.\nFilmProducer(x) ::: x is a film producer.\nPlay(x, y) ::: x plays y.\nRole(x) ::: x is a role.\nMusical(x) ::: x is a musical.\nFilm(x) ::: x is a film.\nBestActorAward(x) ::: x won the best actor award.\nPremises:\nActor(daveed) ∧ FilmProducer(daveed) ∧ Play(daveed, hamilton) ∧ Play(daveed, lafayette) ∧ Play(daveed, jefferson) ::: Daveed Diggs is an actor and film producer. Daveed Diggs played two roles in the musical Hamilton.\nBestActorAward(actor) ∧ Play(actor, hamilton) ::: One of the actors from Hamilton won the best actor award.\nBestActorAward(actor) ∧ Play(actor, jefferson) ::: The actor playing Thomas Jefferson won the best actor award.\nPlay(daveed, jefferson) ::: Daveed Diggs played Thomas Jefferson.\n¬Musical(x) ∧ Film(x) ::: Musicals are not films.\nConclusion:\nBestActorAward(daveed) ::: Daveed Diggs won the best actor award.\n------\nProblem:\nThe first person to reach the South Pole was Roald Amundsen. Roald Amundsen was a Norwegian explorer. The first person to reach the North Pole was Robert Peary. Robert Peary was an American explorer.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The first person to reach the North Pole was a Norwegian explorer.\nBased on the above information, is the following statement true, false, or uncertain? The first person to reach"
    ]
  },
  {
    "id": "FOLIO_train_686",
    "context": "Daveed Diggs is an actor and film producer. Daveed Diggs played two roles in the musical Hamilton. One of the actors from Hamilton won the best actor award. The actor playing Thomas Jefferson won the best actor award. Daveed Diggs played Thomas Jefferson. Musicals are not films.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Hamilton won two awards.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nActor(x) ::: x is an actor.\nFilmProducer(x) ::: x is a film producer.\nPlay(x, y) ::: x plays y.\nRole(x) ::: x is a role.\nMusical(x) ::: x is a musical.\nFilm(x) ::: x is a film.\nAward(x) ::: x is an award.\nBestActor(x) ::: x is the best actor award.\nPremises:\nActor(daveed) ∧ FilmProducer(daveed) ∧ Play(daveed, hamilton) ∧ Play(daveed, twoRoles) ::: Daveed Diggs is an actor and film producer. Daveed Diggs played two roles in the musical Hamilton.\n∃x (Play(x, hamilton) ∧ Award(x) ∧ BestActor(x)) ::: One of the actors from Hamilton won the best actor award.\nPlay(thomasJefferson, hamilton) ∧ Award(thomasJefferson) ∧ BestActor(thomasJefferson) ::: The actor playing Thomas Jefferson won the best actor award.\nPlay(daveed, thomasJefferson) ::: Daveed Diggs played Thomas Jefferson.\n¬Musical(x) ∧ Film(x) ::: Musicals are not films.\nConclusion:\nAward(hamilton) ∧ Award(hamilton) ::: Hamilton won two awards.\n------\nProblem:\nThe first person to reach the South Pole was Roald Amundsen. Roald Amundsen was a Norwegian explorer. The first person to reach the North Pole was Robert Peary. Robert Peary was an American explorer.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The first person to reach the North Pole was a Norwegian explorer.\nBased on"
    ]
  },
  {
    "id": "FOLIO_train_687",
    "context": "Ernest Pohl was a Polish football player. A football player in the Polish First Division has scored over 180 goals. Ernest Pohl scored more than 180 goals in the Polish First Division. Górnik Zabrze's stadium was named after a soccer player from Ruda Śląska. Ernest Pohl is from Ruda Śląska.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Ernest Pohl has not scored more than 180 goals.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPolish(x) ::: x is a Polish person.\nFootballPlayer(x) ::: x is a football player.\nGoal(x) ::: x is a goal.\nScore(x, y) ::: x has scored y goals.\nStadium(x) ::: x is a stadium.\nName(x, y) ::: x is named after y.\nPremises:\nPolish(ernest) ∧ FootballPlayer(ernest) ::: Ernest Pohl was a Polish football player.\n∀x (FootballPlayer(x) ∧ PolishFirstDivision(x) → Score(x, 180)) ::: A football player in the Polish First Division has scored over 180 goals.\nScore(ernest, 180) ::: Ernest Pohl scored more than 180 goals in the Polish First Division.\nStadium(gornikZabrze) ∧ Name(gornikZabrze, soccerPlayer) ∧ RudaSlaska(soccerPlayer) ::: Górnik Zabrze's stadium was named after a soccer player from Ruda Śląska.\nRudaSlaska(ernest) ::: Ernest Pohl is from Ruda Śląska.\nConclusion:\n¬Score(ernest, 180) ::: Ernest Pohl has not scored more than 180 goals.\n------\nProblem:\nThe first person to be named Time magazine's Person of the Year was Charles Lindbergh. Charles Lindbergh was an American aviator. Charles Lindbergh was the first person to be named Time magazine's Person of the Year.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Charles Lindbergh was the first person to be named Time magazine's Person of the Year.\nBased on the above information, is the following statement true, false, or uncertain"
    ]
  },
  {
    "id": "FOLIO_train_688",
    "context": "Ernest Pohl was a Polish football player. A football player in the Polish First Division has scored over 180 goals. Ernest Pohl scored more than 180 goals in the Polish First Division. Górnik Zabrze's stadium was named after a soccer player from Ruda Śląska. Ernest Pohl is from Ruda Śląska.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Górnik Zabrze's stadium was named after Ernest Pohl.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPolish(x) ::: x is a Polish person.\nFootballPlayer(x) ::: x is a football player.\nGoal(x) ::: x is a goal.\nScore(x, y) ::: x scored y goals.\nStadium(x) ::: x is a stadium.\nName(x, y) ::: x is named after y.\nPremises:\nPolish(ernest) ∧ FootballPlayer(ernest) ::: Ernest Pohl was a Polish football player.\n∀x (FootballPlayer(x) ∧ PolishFirstDivision(x) → Score(x, 180)) ::: A football player in the Polish First Division has scored over 180 goals.\nScore(ernest, 180) ::: Ernest Pohl scored more than 180 goals in the Polish First Division.\nName(stadiumOfGornikZabrze, soccerPlayerFromRudaSlaska) ::: Górnik Zabrze's stadium was named after a soccer player from Ruda Śląska.\nPolish(ernest) ∧ RudaSlaska(ernest) ::: Ernest Pohl is from Ruda Śląska.\nConclusion:\nName(stadiumOfGornikZabrze, ernest) ::: Górnik Zabrze's stadium was named after Ernest Pohl.\n------\nProblem:\nThe first person to be named Time magazine's Person of the Year was Charles Lindbergh. Charles Lindbergh was an American aviator. Charles Lindbergh was the first person to be named Time magazine's Person of the Year.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Charles Lindbergh was an American aviator.\nBased on the above information, is the following statement true, false, or uncertain? Charles Lindbergh was the first person to be"
    ]
  },
  {
    "id": "FOLIO_train_689",
    "context": "Ann J. Land was a member of the Philadelphia City Council and was also a member of the Democratic Party. Ann J. Land ran unopposed for the Philadephia City Council in 1980. People who run unopposed for the Philadelphia City Council are elected to the positions they run for in the same year. Michael Nutter was a political challenger. Ann J. Land defeated Michael Nutter and ran for the Philadelphia City Council in 1987.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Ann J. Land was elected to the Philadelphia City Council in 1980.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMember(x, y) ::: x is a member of y.\nMemberOf(x, y) ::: x is a member of the y.\nDemocrat(x) ::: x is a member of the Democratic Party.\nRun(x, y) ::: x ran for y.\nUnopposed(x) ::: x ran unopposed for y.\nElected(x, y) ::: x was elected to y in year y.\nDefeat(x, y) ::: x defeated y.\nChallenger(x) ::: x is a political challenger.\nPremises:\nMember(ann, philadelphiaCityCouncil) ∧ MemberOf(ann, democraticParty) ::: Ann J. Land was a member of the Philadelphia City Council and was also a member of the Democratic Party.\nUnopposed(ann, philadelphiaCityCouncil) ∧ Run(ann, philadelphiaCityCouncil) ∧ Year(year1980) ::: Ann J. Land ran unopposed for the Philadephia City Council in 1980.\n∀x (Unopposed(x, y) → Elected(x, y)) ::: People who run unopposed for the Philadelphia City Council are elected to the positions they run for in the same year.\nDefeat(ann, michael) ∧ Challenger(michael) ∧ Run(ann, philadelphiaCityCouncil) ∧ Year(year1987) ::: Ann J. Land defeated Michael Nutter and ran for the Philadelphia City Council in 1987.\nConclusion:\nElected(ann, philadelphiaCityCouncil) ∧ Year(year1980) ::: Ann J. Land was elected to the Philadelphia City Council in 1980.\n------\nProblem:\nThe first person to be elected to"
    ]
  },
  {
    "id": "FOLIO_train_690",
    "context": "Ann J. Land was a member of the Philadelphia City Council and was also a member of the Democratic Party. Ann J. Land ran unopposed for the Philadephia City Council in 1980. People who run unopposed for the Philadelphia City Council are elected to the positions they run for in the same year. Michael Nutter was a political challenger. Ann J. Land defeated Michael Nutter and ran for the Philadelphia City Council in 1987.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Ann J. Land was elected to the Philadelphia City Council in 1987.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMember(x, y) ::: x is a member of y.\nMemberOf(x, y) ::: x is a member of the y.\nDemocrat(x) ::: x is a member of the Democratic Party.\nRun(x, y) ::: x ran for y.\nUnopposed(x) ::: x ran unopposed for y.\nElected(x, y) ::: x was elected to y.\nChallenger(x) ::: x is a political challenger.\nDefeat(x, y) ::: x defeated y.\nPremises:\nMember(ann, philadelphiaCityCouncil) ∧ MemberOf(ann, democraticParty) ::: Ann J. Land was a member of the Philadelphia City Council and was also a member of the Democratic Party.\nUnopposed(ann, philadelphiaCityCouncil) ∧ Run(ann, philadelphiaCityCouncil) ∧ Year(1980) ::: Ann J. Land ran unopposed for the Philadephia City Council in 1980.\n∀x (Unopposed(x, philadelphiaCityCouncil) → Elected(x, philadelphiaCityCouncil) ∧ Year(x)) ::: People who run unopposed for the Philadelphia City Council are elected to the positions they run for in the same year.\nChallenger(michael) ::: Michael Nutter was a political challenger.\nDefeat(ann, michael) ∧ Run(ann, philadelphiaCityCouncil) ∧ Year(1987) ::: Ann J. Land defeated Michael Nutter and ran for the Philadelphia City Council in 1987.\nConclusion:\nElected(ann, philadelphiaCityCouncil) ∧ Year(1987) ::: Ann J. Land was elected to the Philadelphia City Council in 1987.\n------"
    ]
  },
  {
    "id": "FOLIO_train_691",
    "context": "Ann J. Land was a member of the Philadelphia City Council and was also a member of the Democratic Party. Ann J. Land ran unopposed for the Philadephia City Council in 1980. People who run unopposed for the Philadelphia City Council are elected to the positions they run for in the same year. Michael Nutter was a political challenger. Ann J. Land defeated Michael Nutter and ran for the Philadelphia City Council in 1987.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There was some member of the Democratic Party elected to the Philadelphia City Council in 1980.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMember(x, y) ::: x is a member of y.\nDemocratic(x) ::: x is a member of the Democratic Party.\nRun(x, y) ::: x runs for y.\nUnopposed(x) ::: x runs unopposed for y.\nElected(x, y) ::: x is elected to y.\nChallenger(x) ::: x is a political challenger.\nDefeat(x, y) ::: x defeats y.\nPremises:\nMember(ann, democratic) ∧ Member(ann, philadelphiaCityCouncil) ::: Ann J. Land was a member of the Philadelphia City Council and was also a member of the Democratic Party.\nUnopposed(ann, philadelphiaCityCouncil) ∧ Run(ann, philadelphiaCityCouncil) ∧ Year(1980) ::: Ann J. Land ran unopposed for the Philadephia City Council in 1980.\n∀x (Unopposed(x, philadelphiaCityCouncil) → Elected(x, philadelphiaCityCouncil) ∧ Year(sameYear(x))) ::: People who run unopposed for the Philadelphia City Council are elected to the positions they run for in the same year.\nChallenger(michael) ::: Michael Nutter was a political challenger.\nDefeat(ann, michael) ∧ Run(ann, philadelphiaCityCouncil) ∧ Year(1987) ::: Ann J. Land defeated Michael Nutter and ran for the Philadelphia City Council in 1987.\nConclusion:\nElected(ann, philadelphiaCityCouncil) ∧ Year(1980) ::: There was some member of the Democratic Party elected to the Philadelphia City Council in 1980.\n------\nProblem:\nThe first person to be elected to the United"
    ]
  },
  {
    "id": "FOLIO_train_692",
    "context": "Aberdeen won the cup in the 2013 final. Rangers won the cup in 2014 final. Aberdeen and Rangers are different teams. Different teams cannot win the same cup in a given year's final.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Rangers won the cup in 2015.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nWin(x, y) ::: x won the cup in y.\nDifferent(x, y) ::: x and y are different teams.\nPremises:\nWin(aberdeen, 2013) ::: Aberdeen won the cup in the 2013 final.\nWin(rangers, 2014) ::: Rangers won the cup in 2014 final.\nDifferent(aberdeen, rangers) ::: Aberdeen and Rangers are different teams.\n∀x ∀y (Different(x, y) → ¬Win(x, y) ∧ ¬Win(y, x)) ::: Different teams cannot win the same cup in a given year's final.\nConclusion:\nWin(rangers, 2015) ::: Rangers won the cup in 2015.\n------\nProblem:\nThe first person to reach the summit of Mount Everest was Edmund Hillary. Edmund Hillary was a New Zealander. The first person to reach the summit of Mount Everest was a New Zealander.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The first person to reach the summit of Mount Everest was Edmund Hillary.\nBased on the above information, is the following statement true, false, or uncertain? The first person to reach the summit of Mount Everest was a New Zealander.\n###\nPredicates:\nNewZealander(x) ::: x is a New Zealander.\nSummit(x) ::: x is the summit of Mount Everest.\nReach(x, y) ::: x reached y.\nPremises:\nReach(edmund, summit) ::: The first person to reach the summit of Mount Everest was Edmund Hillary.\nNewZealander(edmund) ::: Edmund Hillary was a New Zealander.\nConclusion"
    ]
  },
  {
    "id": "FOLIO_train_693",
    "context": "Aberdeen won the cup in the 2013 final. Rangers won the cup in 2014 final. Aberdeen and Rangers are different teams. Different teams cannot win the same cup in a given year's final.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Rangers won the cup in 2013.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nWin(x, y) ::: x won the cup in y.\nDifferent(x, y) ::: x and y are different teams.\nPremises:\nWin(aberdeen, 2013) ::: Aberdeen won the cup in the 2013 final.\nWin(rangers, 2014) ::: Rangers won the cup in 2014 final.\nDifferent(aberdeen, rangers) ::: Aberdeen and Rangers are different teams.\n∀x ∀y (Different(x, y) → ¬Win(x, y) ∧ ¬Win(y, x)) ::: Different teams cannot win the same cup in a given year's final.\nConclusion:\n¬Win(rangers, 2013) ::: Rangers won the cup in 2013.\n------\nProblem:\nThe first person to reach the summit of Mount Everest was Edmund Hillary. Edmund Hillary was a New Zealander. The first person to reach the summit of Mount Everest was a New Zealander.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The first person to reach the summit of Mount Everest was Edmund Hillary.\nBased on the above information, is the following statement true, false, or uncertain? The first person to reach the summit of Mount Everest was a New Zealander.\n###\nPredicates:\nNewZealander(x) ::: x is a New Zealander.\nSummit(x) ::: x is the summit of Mount Everest.\nReach(x, y) ::: x reached y.\nFirst(x) ::: x is the first person to reach the summit of Mount Everest.\nPremises:\nFirst(edmund) ::: The first person to reach the summit of Mount Everest was Edmund Hillary.\nNewZealander"
    ]
  },
  {
    "id": "FOLIO_train_694",
    "context": "Aberdeen won the cup in the 2013 final. Rangers won the cup in 2014 final. Aberdeen and Rangers are different teams. Different teams cannot win the same cup in a given year's final.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Aberdeen has won a cup before.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nWin(x, y) ::: x won the cup in y.\nDifferent(x, y) ::: x and y are different teams.\nPremises:\nWin(aberdeen, 2013Final) ::: Aberdeen won the cup in the 2013 final.\nWin(rangers, 2014Final) ::: Rangers won the cup in 2014 final.\nDifferent(aberdeen, rangers) ::: Aberdeen and Rangers are different teams.\n¬∃x ∃y (Different(x, y) ∧ Win(x, y)) ::: Different teams cannot win the same cup in a given year's final.\nConclusion:\nWin(aberdeen, cup) ::: Aberdeen has won a cup before.\n------\nProblem:\nA person is a student if and only if the person is enrolled in a course. A person is enrolled in a course if and only if the person is taking the course. A person is taking a course if and only if the person is attending the course. A person is attending a course if and only if the person is in the course. A person is in a course if and only if the person is sitting in the course. A person is sitting in a course if and only if the person is sitting in the classroom. A person is sitting in the classroom if and only if the person is sitting in the room. A person is sitting in the room if and only if the person is sitting in the chair. A person is sitting in the chair if and only if the person is sitting.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? A person is a student if and only if the person is sitting.\nBased on the above information, is the following statement true, false, or uncertain? A person is sitting if and only if the person is a student.\n###\nPredicates:\nStudent(x) ::: x is a"
    ]
  },
  {
    "id": "FOLIO_train_695",
    "context": "All young working professionals who have regular 9-5 jobs also have pets. Some people who live in Manhattan are young working professionals who have regular 9-5 jobs. All people who have pets are people who have at least one child. People who do not have at least one child are people who own a sports car. Mary either does not own a sports car or, if they do, then they do not have at least one child.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mary is a person who lives in Manhattan.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nYoung(x) ::: x is a young person.\nWorking(x) ::: x is a working person.\nProfessional(x) ::: x is a professional.\nRegular(x) ::: x is regular.\nJob(x) ::: x is a job.\nPet(x) ::: x is a pet.\nChild(x) ::: x is a child.\nManhattan(x) ::: x lives in Manhattan.\nSportsCar(x) ::: x owns a sports car.\nPremises:\n∀x (Young(x) ∧ Working(x) ∧ Professional(x) ∧ Regular(x) ∧ Job(x) → Pet(x)) ::: All young working professionals who have regular 9-5 jobs also have pets.\n∃x (Manhattan(x) ∧ Young(x) ∧ Working(x) ∧ Professional(x) ∧ Regular(x) ∧ Job(x)) ::: Some people who live in Manhattan are young working professionals who have regular 9-5 jobs.\n∀x (Pet(x) → Child(x)) ::: All people who have pets are people who have at least one child.\n∀x (¬Child(x) → SportsCar(x)) ::: People who do not have at least one child are people who own a sports car.\n¬SportsCar(mary) ∨ ¬Child(mary) ::: Mary either does not own a sports car or, if they do, then they do not have at least one child.\nConclusion:\nManhattan(mary) ::: Mary is a person who lives in Manhattan.\n------\nProblem:\nAll people who are not students are people who are not teachers. Some people who are not teachers are people who are not students. Some people who are not students are people who are not teachers.\nQuestion:\nBased on the above information, is the following statement true, false,"
    ]
  },
  {
    "id": "FOLIO_train_696",
    "context": "All young working professionals who have regular 9-5 jobs also have pets. Some people who live in Manhattan are young working professionals who have regular 9-5 jobs. All people who have pets are people who have at least one child. People who do not have at least one child are people who own a sports car. Mary either does not own a sports car or, if they do, then they do not have at least one child.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mary is a person who lives in Manhattan and is a young working professional who has a regular 9-5 job.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nYoung(x) ::: x is a young person.\nWorking(x) ::: x is a working person.\nProfessional(x) ::: x is a professional.\nJob(x) ::: x has a job.\nRegular(x) ::: x has a regular job.\n9To5(x) ::: x has a 9-5 job.\nPet(x) ::: x has a pet.\nChild(x) ::: x has a child.\nManhattan(x) ::: x lives in Manhattan.\nSportsCar(x) ::: x owns a sports car.\nPremises:\n∀x (Young(x) ∧ Working(x) ∧ Professional(x) ∧ Job(x) ∧ Regular(x) ∧ 9To5(x) → Pet(x)) ::: All young working professionals who have regular 9-5 jobs also have pets.\n∃x (Manhattan(x) ∧ Young(x) ∧ Working(x) ∧ Professional(x) ∧ Job(x) ∧ Regular(x) ∧ 9To5(x)) ::: Some people who live in Manhattan are young working professionals who have regular 9-5 jobs.\n∀x (Pet(x) → Child(x)) ::: All people who have pets are people who have at least one child.\n∀x (¬Child(x) → ¬SportsCar(x)) ::: People who do not have at least one child are people who own a sports car.\n¬SportsCar(mary) ∨ ¬Child(mary) ::: Mary either does not own a sports car or, if they do, then they do not have at least one child.\nConclusion:\nManhattan(mary) ∧ Young(mary) ∧ Working(mary) ∧ Professional(mary) ∧ Job(mary) ∧ Regular(mary) ∧"
    ]
  },
  {
    "id": "FOLIO_train_697",
    "context": "All young working professionals who have regular 9-5 jobs also have pets. Some people who live in Manhattan are young working professionals who have regular 9-5 jobs. All people who have pets are people who have at least one child. People who do not have at least one child are people who own a sports car. Mary either does not own a sports car or, if they do, then they do not have at least one child.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Mary is a young working professional who has a regular 9-5 job, then Mary does not live in Manhattan.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nYoung(x) ::: x is a young person.\nWorking(x) ::: x is a working person.\nProfessional(x) ::: x is a professional.\nJob(x) ::: x has a job.\nRegular(x) ::: x has a regular job.\n9To5(x) ::: x has a 9-5 job.\nPet(x) ::: x has a pet.\nChild(x) ::: x has a child.\nManhattan(x) ::: x lives in Manhattan.\nSportsCar(x) ::: x owns a sports car.\nPremises:\n∀x (Young(x) ∧ Working(x) ∧ Professional(x) ∧ Job(x) ∧ Regular(x) ∧ 9To5(x) → Pet(x)) ::: All young working professionals who have regular 9-5 jobs also have pets.\n∃x (Manhattan(x) ∧ Young(x) ∧ Working(x) ∧ Professional(x) ∧ Job(x) ∧ Regular(x) ∧ 9To5(x)) ::: Some people who live in Manhattan are young working professionals who have regular 9-5 jobs.\n∀x (Pet(x) → Child(x)) ::: All people who have pets are people who have at least one child.\n∀x (¬Child(x) → ¬SportsCar(x)) ::: People who do not have at least one child are people who own a sports car.\n¬SportsCar(mary) ∨ ¬Child(mary) ::: Mary either does not own a sports car or, if they do, then they do not have at least one child.\nConclusion:\n¬Manhattan(mary) ∨ ¬(Young(mary) ∧ Working(mary) ∧ Professional(mary) ∧ Job(mary) ∧ Regular(mary"
    ]
  },
  {
    "id": "FOLIO_train_698",
    "context": "Either block design or event-related design. All event-related designs are brain image acquisition. All brain image acquisition is preceded by data processing. Nothing preceded by data processing acquires data. Picture memory is either an event-related design and acquiring data or neither an event-related design nor acquiring data.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Picture memory is preceded by data processing.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlockDesign(x) ::: x is a block design.\nEventRelatedDesign(x) ::: x is an event-related design.\nBrainImageAcquisition(x) ::: x is a brain image acquisition.\nDataProcessing(x) ::: x is a data processing.\nAcquireData(x) ::: x acquires data.\nPictureMemory(x) ::: x is a picture memory.\nPremises:\nBlockDesign(x) ⊕ EventRelatedDesign(x) ::: Either block design or event-related design.\n∀x (EventRelatedDesign(x) → BrainImageAcquisition(x)) ::: All event-related designs are brain image acquisition.\n∀x (BrainImageAcquisition(x) → ¬AcquireData(x)) ::: All brain image acquisition is preceded by data processing.\n∀x (DataProcessing(x) → ¬AcquireData(x)) ::: Nothing preceded by data processing acquires data.\n(EventRelatedDesign(pictureMemory) ∧ AcquireData(pictureMemory)) ⊕ ¬(EventRelatedDesign(pictureMemory) ∨ AcquireData(pictureMemory)) ::: Picture memory is either an event-related design and acquiring data or neither an event-related design nor acquiring data.\nConclusion:\nDataProcessing(pictureMemory) ::: Picture memory is preceded by data processing.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either"
    ]
  },
  {
    "id": "FOLIO_train_699",
    "context": "Either block design or event-related design. All event-related designs are brain image acquisition. All brain image acquisition is preceded by data processing. Nothing preceded by data processing acquires data. Picture memory is either an event-related design and acquiring data or neither an event-related design nor acquiring data.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Picture memory is a block design.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlockDesign(x) ::: x is a block design.\nEventRelatedDesign(x) ::: x is an event-related design.\nBrainImageAcquisition(x) ::: x is a brain image acquisition.\nDataProcessing(x) ::: x is a data processing.\nAcquire(x) ::: x acquires data.\nPictureMemory(x) ::: x is a picture memory.\nPremises:\nBlockDesign(x) ⊕ EventRelatedDesign(x) ::: Either block design or event-related design.\n∀x (EventRelatedDesign(x) → BrainImageAcquisition(x)) ::: All event-related designs are brain image acquisition.\n∀x (BrainImageAcquisition(x) → ¬DataProcessing(x)) ::: All brain image acquisition is preceded by data processing.\n∀x (DataProcessing(x) → ¬Acquire(x)) ::: Nothing preceded by data processing acquires data.\n(EventRelatedDesign(pictureMemory) ∧ Acquire(pictureMemory)) ⊕ ¬(EventRelatedDesign(pictureMemory) ∨ Acquire(pictureMemory)) ::: Picture memory is either an event-related design and acquiring data or neither an event-related design nor acquiring data.\nConclusion:\nBlockDesign(pictureMemory) ::: Picture memory is a block design.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about"
    ]
  },
  {
    "id": "FOLIO_train_700",
    "context": "Either block design or event-related design. All event-related designs are brain image acquisition. All brain image acquisition is preceded by data processing. Nothing preceded by data processing acquires data. Picture memory is either an event-related design and acquiring data or neither an event-related design nor acquiring data.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Picture memory is either a block design or acquiring data.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlockDesign(x) ::: x is a block design.\nEventRelatedDesign(x) ::: x is an event-related design.\nBrainImageAcquisition(x) ::: x is a brain image acquisition.\nDataProcessing(x) ::: x is a data processing.\nAcquireData(x) ::: x acquires data.\nPictureMemory(x) ::: x is a picture memory.\nPremises:\nBlockDesign(x) ⊕ EventRelatedDesign(x) ::: Either block design or event-related design.\n∀x (EventRelatedDesign(x) → BrainImageAcquisition(x)) ::: All event-related designs are brain image acquisition.\n∀x (BrainImageAcquisition(x) → ¬DataProcessing(x)) ::: All brain image acquisition is preceded by data processing.\n∀x (DataProcessing(x) → ¬AcquireData(x)) ::: Nothing preceded by data processing acquires data.\n(EventRelatedDesign(pictureMemory) ∧ AcquireData(pictureMemory)) ⊕ ¬(EventRelatedDesign(pictureMemory) ∨ AcquireData(pictureMemory)) ::: Picture memory is either an event-related design and acquiring data or neither an event-related design nor acquiring data.\nConclusion:\nBlockDesign(pictureMemory) ⊕ AcquireData(pictureMemory) ::: Picture memory is either a block design or acquiring data.\n------"
    ]
  },
  {
    "id": "FOLIO_train_701",
    "context": "Either block design or event-related design. All event-related designs are brain image acquisition. All brain image acquisition is preceded by data processing. Nothing preceded by data processing acquires data. Picture memory is either an event-related design and acquiring data or neither an event-related design nor acquiring data.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If picture memory is not acquiring data, then picture memory is a block design and acquiring data.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlockDesign(x) ::: x is a block design.\nEventRelatedDesign(x) ::: x is an event-related design.\nBrainImageAcquisition(x) ::: x is a brain image acquisition.\nDataProcessing(x) ::: x is a data processing.\nAcquireData(x) ::: x acquires data.\nPictureMemory(x) ::: x is a picture memory.\nPremises:\nBlockDesign(x) ⊕ EventRelatedDesign(x) ::: Either block design or event-related design.\n∀x (EventRelatedDesign(x) → BrainImageAcquisition(x)) ::: All event-related designs are brain image acquisition.\n∀x (BrainImageAcquisition(x) → ¬DataProcessing(x)) ::: All brain image acquisition is preceded by data processing.\n¬∃x (DataProcessing(x) → AcquireData(x)) ::: Nothing preceded by data processing acquires data.\n(EventRelatedDesign(pictureMemory) ∧ AcquireData(pictureMemory)) ⊕ ¬(EventRelatedDesign(pictureMemory) ∨ AcquireData(pictureMemory)) ::: Picture memory is either an event-related design and acquiring data or neither an event-related design nor acquiring data.\nConclusion:\n¬(BlockDesign(pictureMemory) ∧ AcquireData(pictureMemory)) → (BlockDesign(pictureMemory) ∧ AcquireData("
    ]
  },
  {
    "id": "FOLIO_train_702",
    "context": "The USS Lyon was a US Navy ship involved in WWII. All ships involved in WWII are currently decommissioned or in a museum.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The USS Lyon is decommissioned.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nUSS(x) ::: x is a US Navy ship.\nInvolved(x, y) ::: x is involved in y.\nWWII(x) ::: x is WWII.\nDecommissioned(x) ::: x is decommissioned.\nMuseum(x) ::: x is in a museum.\nPremises:\nUSS(lyon) ∧ Involved(lyon, wwii) ::: The USS Lyon was a US Navy ship involved in WWII.\n∀x (Involved(x, wwii) → (Decommissioned(x) ∨ Museum(x))) ::: All ships involved in WWII are currently decommissioned or in a museum.\nConclusion:\nDecommissioned(lyon) ::: The USS Lyon is decommissioned.\n------\nProblem:\nThe USS Lyon was a US Navy ship involved in WWII. All ships involved in WWII are currently decommissioned or in a museum.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The USS Lyon is in a museum.\n###\nPredicates:\nUSS(x) ::: x is a US Navy ship.\nInvolved(x, y) ::: x is involved in y.\nWWII(x) ::: x is WWII.\nDecommissioned(x) ::: x is decommissioned.\nMuseum("
    ]
  },
  {
    "id": "FOLIO_train_703",
    "context": "All disposable chopsticks are made from trees. Some chopsticks are eco-friendly. Either disposable chopsticks or reusable chopsticks. If chopsticks are made from metals, then they are not made from plastics. All reusable chopsticks are made from metal. Chopsticks at restaurants are either made from metals and made from plastics, or neither made from metals nor made from plastics.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Chopsticks at restaurants are eco-friendly.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDisposable(x) ::: x is a disposable chopstick.\nEcoFriendly(x) ::: x is eco-friendly.\nReusable(x) ::: x is a reusable chopstick.\nMadeFrom(x, y) ::: x is made from y.\nMetal(x) ::: x is made from metal.\nPlastic(x) ::: x is made from plastic.\nPremises:\n∀x (Disposable(x) → MadeFrom(x, tree)) ::: All disposable chopsticks are made from trees.\n∃x (Chopsticks(x) ∧ EcoFriendly(x)) ::: Some chopsticks are eco-friendly.\nDisposable(x) ⊕ Reusable(x) ::: Either disposable chopsticks or reusable chopsticks.\n¬(MadeFrom(x, metal) ∧ MadeFrom(x, plastic)) ::: If chopsticks are made from metals, then they are not made from plastics.\n∀x (Reusable(x) → MadeFrom(x, metal)) ::: All reusable chopsticks are made from metal.\n¬(MadeFrom(x, metal) ∧ MadeFrom(x, plastic)) ::: Chopsticks at restaurants are either made from metals and made from plastics, or neither made from metals nor made from plast"
    ]
  },
  {
    "id": "FOLIO_train_704",
    "context": "All disposable chopsticks are made from trees. Some chopsticks are eco-friendly. Either disposable chopsticks or reusable chopsticks. If chopsticks are made from metals, then they are not made from plastics. All reusable chopsticks are made from metal. Chopsticks at restaurants are either made from metals and made from plastics, or neither made from metals nor made from plastics.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Chopsticks at restaurants are eco-friendly or made from trees.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDisposable(x) ::: x is a disposable chopstick.\nEcoFriendly(x) ::: x is eco-friendly.\nReusable(x) ::: x is a reusable chopstick.\nMadeFrom(x, y) ::: x is made from y.\nMetal(x) ::: x is made from metal.\nPlastic(x) ::: x is made from plastic.\nPremises:\n∀x (Disposable(x) → MadeFrom(x, tree)) ::: All disposable chopsticks are made from trees.\n∃x (Chopsticks(x) ∧ EcoFriendly(x)) ::: Some chopsticks are eco-friendly.\nDisposable(x) ⊕ Reusable(x) ::: Either disposable chopsticks or reusable chopsticks.\n¬(MadeFrom(x, metal) ∧ MadeFrom(x, plastic)) ::: If chopsticks are made from metals, then they are not made from plastics.\n∀x (Reusable(x) → MadeFrom(x, metal)) ::: All reusable chopsticks are made from metal.\n¬(MadeFrom(x, metal) ∧ MadeFrom(x, plastic)) ::: Chopsticks at restaurants are either made from metals and made from plastics, or neither made from metals nor made from plast"
    ]
  },
  {
    "id": "FOLIO_train_705",
    "context": "All disposable chopsticks are made from trees. Some chopsticks are eco-friendly. Either disposable chopsticks or reusable chopsticks. If chopsticks are made from metals, then they are not made from plastics. All reusable chopsticks are made from metal. Chopsticks at restaurants are either made from metals and made from plastics, or neither made from metals nor made from plastics.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Chopsticks at restaurants are made from plastics or made from trees, then Chopsticks at restaurants are made from plastics and are eco-friendly.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDisposable(x) ::: x is a disposable chopstick.\nEcoFriendly(x) ::: x is eco-friendly.\nMadeFrom(x, y) ::: x is made from y.\nMetal(x) ::: x is made from metal.\nPlastic(x) ::: x is made from plastic.\nTree(x) ::: x is made from tree.\nPremises:\n∀x (Disposable(x) → Tree(x)) ::: All disposable chopsticks are made from trees.\n∃x (Chopsticks(x) ∧ EcoFriendly(x)) ::: Some chopsticks are eco-friendly.\nDisposable(x) ⊕ Reusable(x) ::: Either disposable chopsticks or reusable chopsticks.\n¬(Metal(x) ∧ Plastic(x)) ::: If chopsticks are made from metals, then they are not made from plastics.\n∀x (Reusable(x) → Metal(x)) ::: All reusable chopsticks are made from metal.\n(Metal(x) ∧ Plastic(x)) ⊕ ¬(Metal(x) ∨ Plastic(x)) ::: Chopsticks at restaurants are either made from metals and made from plastics, or neither made from metals nor made from plastics.\nConclusion:"
    ]
  },
  {
    "id": "FOLIO_train_706",
    "context": "Anything that is lazy is unproductive. No one unproductive is an energetic person. If something is a sloth, then it is lazy. Some animals are sloths. Sid is not either an energetic person or a sloth.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Sid is an animal.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLazy(x) ::: x is lazy.\nUnproductive(x) ::: x is unproductive.\nEnergetic(x) ::: x is an energetic person.\nSloth(x) ::: x is a sloth.\nAnimal(x) ::: x is an animal.\nPremises:\n∀x (Lazy(x) → Unproductive(x)) ::: Anything that is lazy is unproductive.\n∀x (Unproductive(x) → ¬Energetic(x)) ::: No one unproductive is an energetic person.\n∀x (Sloth(x) → Lazy(x)) ::: If something is a sloth, then it is lazy.\n∃x (Animal(x) ∧ Sloth(x)) ::: Some animals are sloths.\n¬(Energetic(sid) ∨ Sloth(sid)) ::: Sid is not either an energetic person or a sloth.\nConclusion:\nAnimal(sid) ::: Sid is an animal.\n------\nProblem:\nAnyone who is a student is a person. No one who is a student is a person who is not a student. Someone is a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Someone is a person.\nBased on the above information, is the following statement true, false, or uncertain? Someone is"
    ]
  },
  {
    "id": "FOLIO_train_707",
    "context": "Anything that is lazy is unproductive. No one unproductive is an energetic person. If something is a sloth, then it is lazy. Some animals are sloths. Sid is not either an energetic person or a sloth.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Sid is an energetic person and an animal.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLazy(x) ::: x is lazy.\nUnproductive(x) ::: x is unproductive.\nEnergetic(x) ::: x is an energetic person.\nSloth(x) ::: x is a sloth.\nAnimal(x) ::: x is an animal.\nPremises:\n∀x (Lazy(x) → Unproductive(x)) ::: Anything that is lazy is unproductive.\n∀x (Unproductive(x) → ¬Energetic(x)) ::: No one unproductive is an energetic person.\n∀x (Sloth(x) → Lazy(x)) ::: If something is a sloth, then it is lazy.\n∃x (Animal(x) ∧ Sloth(x)) ::: Some animals are sloths.\n¬(Energetic(sid) ∨ Sloth(sid)) ::: Sid is not either an energetic person or a sloth.\nConclusion:\n¬(Energetic(sid) ∧ Animal(sid)) ::: Sid is an energetic person and an animal.\n------\nProblem:\nNo one who is a student is a person who is not a student. Someone who is a student is a person who is not a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Someone who is a student is a person who is not"
    ]
  },
  {
    "id": "FOLIO_train_708",
    "context": "Anything that is lazy is unproductive. No one unproductive is an energetic person. If something is a sloth, then it is lazy. Some animals are sloths. Sid is not either an energetic person or a sloth.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Sid is either an animal or unproductive, then Sid is not an energetic person.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLazy(x) ::: x is lazy.\nUnproductive(x) ::: x is unproductive.\nEnergetic(x) ::: x is an energetic person.\nSloth(x) ::: x is a sloth.\nAnimal(x) ::: x is an animal.\nPremises:\n∀x (Lazy(x) → Unproductive(x)) ::: Anything that is lazy is unproductive.\n∀x (Unproductive(x) → ¬Energetic(x)) ::: No one unproductive is an energetic person.\n∀x (Sloth(x) → Lazy(x)) ::: If something is a sloth, then it is lazy.\n∃x (Animal(x) ∧ Sloth(x)) ::: Some animals are sloths.\n¬(Energetic(sid) ∨ Sloth(sid)) ::: Sid is not either an energetic person or a sloth.\nConclusion:\n¬(Animal(sid) ∨ Unproductive(sid)) → ¬Energetic(sid) ::: If Sid is either an animal or unproductive, then Sid is not an energetic person.\n------\nProblem:\nAnyone who is a student is a person. No one who is a student is a person who is not a student. Someone who is a student is a person who is not a student.\nQuestion:"
    ]
  },
  {
    "id": "FOLIO_train_709",
    "context": "European soccer clubs can attend UCL, UEL and UECL. A soccer club eligible to attend UCL has a higher ranking than a soccer club eligible to attend UEL. A soccer club eligible to attend UEL has a higher ranking than a soccer club eligible to attend UECL. Manchester United and Machester City are both European soccer clubs. Manchester United is eligible to attend UEL next season. Manchester City is eligible to attend UCL next season.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Manchester City has a higher ranking than Manchester United.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEuropean(x) ::: x is a European soccer club.\nUCL(x) ::: x is eligible to attend UCL.\nUEL(x) ::: x is eligible to attend UEL.\nUECL(x) ::: x is eligible to attend UECL.\nRanking(x, y) ::: x has a higher ranking than y.\nPremises:\n∀x ∀y ∀z (UCL(x) → UEL(y) → UECL(z) → Ranking(x, y) ∧ Ranking(y, z)) ::: A soccer club eligible to attend UCL has a higher ranking than a soccer club eligible to attend UEL. A soccer club eligible to attend UEL has a higher ranking than a soccer club eligible to attend UECL.\nEuropean(manchesterUnited) ∧ European(manchesterCity) ::: Manchester United and Machester City are both European soccer clubs.\nUCL(manchesterCity) ::: Manchester City is eligible to attend UCL next season.\nUEL(manchesterUnited) ::: Manchester United is eligible to attend UEL next season.\nConclusion:\nRanking(manchesterCity, manchesterUnited) ::: Manchester City has a higher ranking than Manchester United.\n------\nProblem:\nA person is a citizen of a country if and only if the person is born in the country or the person"
    ]
  },
  {
    "id": "FOLIO_train_710",
    "context": "If a person coach a football club, the person is a football coach. If a person has a position in a club for a position in a year, and the club is in NFL in the same year, the person plays in NFL. Minnesota Vikings is a football club. Dennis Green coached Minnesota Vikings. Cris Carter had 13 touchdown receptions. Minnesota Vikings was in the National Football League in 1997. John Randle was Minnesota Vikings defensive tackle in 1997.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Dennis Green is a football coach.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "s\nPredicates:\nCoach(x) ::: x is a football coach.\nPosition(x, y) ::: x has a position y.\nPlay(x, y) ::: x plays in y.\nClub(x) ::: x is a football club.\nNFL(x) ::: x is in the National Football League.\nDefensiveTackle(x) ::: x is a defensive tackle.\nTouchdownReception(x) ::: x has x touchdown receptions.\nPremises:\nCoach(x) ↔ ∃y (Club(y) ∧ Position(x, coachOf(y))) ::: If a person coach a football club, the person is a football coach.\nPlay(x, y) ↔ ∃z (Position(x, z) ∧ Club(z) ∧ NFL(z) ∧ Year(z, y)) ::: If a person has a position in a club for a position in a year, and the club is in NFL in the same year, the person plays in NFL.\nClub(minnesotaVikings) ::: Minnesota Vikings is a football club.\nPosition(dennisGreen, coachOf(minnesotaVikings)) ::: Dennis Green coached Minnesota Vikings.\nTouchdownReception(crisCarter, 13) ::: Cris Carter had 13 touchdown receptions.\nClub(minnesotaVikings) ∧ NFL(minnesotaVikings) ∧ Year(minnesotaVikings, year1997) ::: Minnesota Vikings was in the National Football League in 1997.\nPosition(johnRandle, defensiveTackleOf(minnesotaVikings)) ::: John Randle was Minnesota Vikings defensive tackle in 1997.\nConclusion:\nCoach(dennisGreen) ::: Dennis Green is a football coach.\n------"
    ]
  },
  {
    "id": "FOLIO_train_711",
    "context": "If a person coach a football club, the person is a football coach. If a person has a position in a club for a position in a year, and the club is in NFL in the same year, the person plays in NFL. Minnesota Vikings is a football club. Dennis Green coached Minnesota Vikings. Cris Carter had 13 touchdown receptions. Minnesota Vikings was in the National Football League in 1997. John Randle was Minnesota Vikings defensive tackle in 1997.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? John Randle didn't play in the National Football League.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCoach(x, y) ::: x coaches y.\nFootballCoach(x) ::: x is a football coach.\nPosition(x, y, z) ::: x has a position in y for z.\nPlay(x, y) ::: x plays in y.\nNFL(x) ::: x is in the National Football League.\nClub(x) ::: x is a football club.\nTouchdownReception(x, y) ::: x has y touchdown receptions.\nDefensiveTackle(x, y) ::: x is y defensive tackle.\nPremises:\n∀x ∀y (Coach(x, y) → FootballCoach(x)) ::: If a person coach a football club, the person is a football coach.\n∀x ∀y ∀z (Position(x, y, z) ∧ NFL(y) ∧ Year(z) → Play(x, NFL)) ::: If a person has a position in a club for a position in a year, and the club is in NFL in the same year, the person plays in NFL.\nClub(minnesotaVikings) ::: Minnesota Vikings is a football club.\nCoach(dennisGreen, minnesotaVikings) ::: Dennis Green coached Minnesota Vikings.\nTouchdownReception(crisCarter, 13) ::: Cris Carter had 13 touchdown receptions.\nNFL(minnesotaVikings) ∧ Year(year1997) ::: Minnesota Vikings was in the National Football League in 1997.\nPosition(johnRandle, minnesotaVikings, year1997) ∧ DefensiveTackle(johnRandle, minnesotaVikings) ::: John Randle was Minnesota Vikings defensive tackle in 1997.\nConclusion:\n¬Play"
    ]
  },
  {
    "id": "FOLIO_train_712",
    "context": "If a person coach a football club, the person is a football coach. If a person has a position in a club for a position in a year, and the club is in NFL in the same year, the person plays in NFL. Minnesota Vikings is a football club. Dennis Green coached Minnesota Vikings. Cris Carter had 13 touchdown receptions. Minnesota Vikings was in the National Football League in 1997. John Randle was Minnesota Vikings defensive tackle in 1997.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Cris Carter played for Minnesota Vikings.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "s\nPredicates:\nCoach(x, y) ::: x coaches y.\nFootballCoach(x) ::: x is a football coach.\nPosition(x, y, z) ::: x has a position in y for z.\nPlay(x, y) ::: x plays in y.\nNFL(x) ::: x is in NFL.\nClub(x) ::: x is a football club.\nTouchdownReception(x, y) ::: x has y touchdown receptions.\nDefensiveTackle(x, y) ::: x is y defensive tackle.\nPremises:\n∀x ∀y (Coach(x, y) → FootballCoach(x)) ::: If a person coach a football club, the person is a football coach.\n∀x ∀y ∀z (Position(x, y, z) ∧ NFL(y) ∧ Year(z) → Play(x, NFL)) ::: If a person has a position in a club for a position in a year, and the club is in NFL in the same year, the person plays in NFL.\nClub(minnesotaVikings) ::: Minnesota Vikings is a football club.\nCoach(dennisGreen, minnesotaVikings) ::: Dennis Green coached Minnesota Vikings.\nTouchdownReception(crisCarter, 13) ::: Cris Carter had 13 touchdown receptions.\nNFL(minnesotaVikings) ∧ Year(year1997) ::: Minnesota Vikings was in the National Football League in 1997.\nPosition(johnRandle, minnesotaVikings, year1997) ::: John Randle was Minnesota Vikings defensive tackle in 1997.\nConclusion:\nPlay(crisCarter, NFL) ::: Cris Carter played for Minnesota Vikings.\n------\nProblem:"
    ]
  },
  {
    "id": "FOLIO_train_713",
    "context": "All cats are cute. Ghosts do not exist. An animal is either a cat or a dog. Nothing that barks is lovely. If something is a dog, then it barks. Grace is either a cat and a dog, or neither a cat nor a dog.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Grace is a ghost.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCat(x) ::: x is a cat.\nCute(x) ::: x is cute.\nDog(x) ::: x is a dog.\nExist(x) ::: x exists.\nGhost(x) ::: x is a ghost.\nLovely(x) ::: x is lovely.\nBark(x) ::: x barks.\nPremises:\n∀x (Cat(x) → Cute(x)) ::: All cats are cute.\n¬∃x (Ghost(x)) ::: Ghosts do not exist.\n∀x (Animal(x) ∨ Dog(x)) ::: An animal is either a cat or a dog.\n¬∃x (Bark(x) ∧ Lovely(x)) ::: Nothing that barks is lovely.\n∀x (Dog(x) → Bark(x)) ::: If something is a dog, then it barks.\n(Cat(grace) ∧ Dog(grace)) ∨ ¬(Cat(grace) ∨ Dog(grace)) ::: Grace is either a cat and a dog, or neither a cat nor a dog.\nConclusion:\nGhost(grace) ::: Grace is a ghost.\n------\nProblem:\nAll cats are cute. Ghosts do not exist. An animal is either a cat or a dog. Nothing that barks is lovely. If something is a dog, then it barks. Grace is either a cat and a dog, or neither a cat nor a dog.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Grace is a cat.\n###\nPredicates:\nCat(x) ::: x is a cat.\nCute(x) ::: x is cute.\nDog(x) ::: x is a dog.\nExist(x) ::: x exists"
    ]
  },
  {
    "id": "FOLIO_train_714",
    "context": "All cats are cute. Ghosts do not exist. An animal is either a cat or a dog. Nothing that barks is lovely. If something is a dog, then it barks. Grace is either a cat and a dog, or neither a cat nor a dog.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Grace is either both cute and lovely, or neither cute nor lovely, then Grace is either a dog or a ghost.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCat(x) ::: x is a cat.\nCute(x) ::: x is cute.\nDog(x) ::: x is a dog.\nExist(x) ::: x exists.\nGhost(x) ::: x is a ghost.\nLovely(x) ::: x is lovely.\nBark(x) ::: x barks.\nPremises:\n∀x (Cat(x) → Cute(x)) ::: All cats are cute.\n¬∃x (Ghost(x)) ::: Ghosts do not exist.\n∀x (Animal(x) ∨ Dog(x)) ::: An animal is either a cat or a dog.\n¬∃x (Bark(x) ∧ Lovely(x)) ::: Nothing that barks is lovely.\n∀x (Dog(x) → Bark(x)) ::: If something is a dog, then it barks.\n(Cat(grace) ∧ Dog(grace)) ∨ ¬(Cat(grace) ∨ Dog(grace)) ::: Grace is either a cat and a dog, or neither a cat nor a dog.\nConclusion:\n(Cute(grace) ∧ Lovely(grace)) ∨ ¬(Cute(grace) ∨ Lovely(grace)) → (Dog(grace) ∨ Ghost(grace)) ::: If Grace is either both cute and lovely, or neither cute nor lovely, then Grace is either a dog or a ghost.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug"
    ]
  },
  {
    "id": "FOLIO_train_715",
    "context": "All cats are cute. Ghosts do not exist. An animal is either a cat or a dog. Nothing that barks is lovely. If something is a dog, then it barks. Grace is either a cat and a dog, or neither a cat nor a dog.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Grace is not both a ghost and lovely, then Grace is either a cat or cute.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCat(x) ::: x is a cat.\nCute(x) ::: x is cute.\nDog(x) ::: x is a dog.\nGhost(x) ::: x is a ghost.\nLovely(x) ::: x is lovely.\nBark(x) ::: x barks.\nPremises:\n∀x (Cat(x) → Cute(x)) ::: All cats are cute.\n¬∃x (Ghost(x)) ::: Ghosts do not exist.\n∀x (Animal(x) ∨ Dog(x)) ::: An animal is either a cat or a dog.\n¬∃x (Bark(x) ∧ Lovely(x)) ::: Nothing that barks is lovely.\n∀x (Dog(x) → Bark(x)) ::: If something is a dog, then it barks.\n(Cat(grace) ∧ Dog(grace)) ∨ ¬(Cat(grace) ∨ Dog(grace)) ::: Grace is either a cat and a dog, or neither a cat nor a dog.\nConclusion:\n¬(Ghost(grace) ∧ Lovely(grace)) → (Cat(grace) ∨ Cute(grace)) ::: If Grace is not both a ghost and lovely, then Grace is either a cat or cute.\n------\nProblem:\nAll cats are cute. Ghosts do not exist. An animal is either a cat or a dog. Nothing that barks is lovely. If something is a dog, then it barks. Grace is either a cat and a dog, or neither a cat nor a dog.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? If Grace is a cat, then Grace is cute.\n###\nPredicates:\nCat(x) ::: x is a cat"
    ]
  },
  {
    "id": "FOLIO_train_716",
    "context": "Shafaq-Asiman is a large complex of offshore geological structures in the Caspian Sea. Baku is northwest of Shafaq-Asiman. If place A is northwest of place B, then place B is southeast of place A.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Baku is southeast of Shafaq-Asiman.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nNorthwest(x, y) ::: x is northwest of y.\nSoutheast(x, y) ::: x is southeast of y.\nPremises:\nNorthwest(baku, shafaqAsiman) ::: Baku is northwest of Shafaq-Asiman.\nNorthwest(x, y) → Southeast(y, x) ::: If place A is northwest of place B, then place B is southeast of place A.\nConclusion:\nSoutheast(shafaqAsiman, baku) ::: Baku is southeast of Shafaq-Asiman.\n------\nProblem:\nThe 1990s was a decade of the Gregorian calendar that began on January 1, 1990, and ended on December 31, 1999. The 1990s was the last decade of the 20th century. The 1990s was the first decade of the 21st century.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The 1990s was the last decade of the 20th century.\nBased on the above information, is the following statement true, false, or uncertain? The 1990s was the first decade of the 21st century.\n###\nPredicates:\nDecade(x) ::: x is a decade.\nLast(x, y) ::: x is the last y.\nFirst(x, y) ::: x is the first y.\nPremises:\nDecade(1990s) ::: The 1990s was a decade of the Gregorian calendar that began on January 1, 1990, and ended on December 31, 1999.\nLast("
    ]
  },
  {
    "id": "FOLIO_train_717",
    "context": "Shafaq-Asiman is a large complex of offshore geological structures in the Caspian Sea. Baku is northwest of Shafaq-Asiman. If place A is northwest of place B, then place B is southeast of place A.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A large complex is southeast of Baku.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLarge(x) ::: x is a large complex.\nComplex(x) ::: x is a complex.\nNorthwest(x, y) ::: x is northwest of y.\nSoutheast(x, y) ::: x is southeast of y.\nPremises:\nComplex(shafaqAsiman) ∧ Large(shafaqAsiman) ::: Shafaq-Asiman is a large complex of offshore geological structures in the Caspian Sea.\nNorthwest(shafaqAsiman, baku) ::: Baku is northwest of Shafaq-Asiman.\n∀x ∀y (Northwest(x, y) → Southeast(y, x)) ::: If place A is northwest of place B, then place B is southeast of place A.\nConclusion:\nSoutheast(baku, shafaqAsiman) ::: A large complex is southeast of Baku.\n------\nProblem:\nThe 2010 FIFA World Cup was the 19th FIFA World Cup, the world championship for men's national association football teams. It took place in South Africa from 11 June to 11 July 2010. The bidding process for hosting the tournament finals was open only to African nations. The 2010 FIFA World Cup was the first to be held on the African continent.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The 2010 FIFA World Cup was the first to be held in South Africa.\nBased on the above information, is the following statement true, false, or uncertain? The 2010 FIFA World Cup was the first to be held in Africa.\nBased on the above information, is the following statement true, false, or uncertain? The 2010 FIFA World Cup was the first to be"
    ]
  },
  {
    "id": "FOLIO_train_718",
    "context": "Shafaq-Asiman is a large complex of offshore geological structures in the Caspian Sea. Baku is northwest of Shafaq-Asiman. If place A is northwest of place B, then place B is southeast of place A.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Baku is not northwest of an offshore geological structures.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nOffshoreGeologicalStructure(x) ::: x is an offshore geological structure.\nNorthwest(x, y) ::: x is northwest of y.\nSoutheast(x, y) ::: x is southeast of y.\nPremises:\nOffshoreGeologicalStructure(shafaqAsiman) ::: Shafaq-Asiman is a large complex of offshore geological structures in the Caspian Sea.\nNorthwest(baku, shafaqAsiman) ::: Baku is northwest of Shafaq-Asiman.\n¬(Northwest(x, y) → Southeast(y, x)) ::: If place A is northwest of place B, then place B is southeast of place A.\nConclusion:\n¬Northwest(baku, offshoreGeologicalStructure) ::: Baku is not northwest of an offshore geological structures.\n------\nProblem:\nThe 2010 FIFA World Cup was the 19th FIFA World Cup, the world championship for men's national association football teams. It took place in South Africa from 11 June to 11 July 2010. The bidding process for hosting the tournament finals was open only to African nations. Egypt, Morocco, and South Africa placed bids. The tournament was won by Spain, who defeated the Netherlands 1–0 after extra time.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The 2010 FIFA World Cup was the 19th FIFA World Cup.\nBased on the above information, is the following statement true, false, or uncertain? The 2010 FIFA World Cup was the 19th FIFA World Cup.\nBased on the above information, is the following statement true, false, or uncertain? The 2010 FIFA World Cup"
    ]
  },
  {
    "id": "FOLIO_train_719",
    "context": "Herodicus was a Greek physician, dietician, sophist, and gymnastic-master. Herodicus was born in the city of Selymbria. Selymbria is a colony of the city-state Megara. One of the tutors of Hippocrates was Herodicus. Massages were recommended by Herodicus. Some of theories of Herodicus are considered to be the foundation of sports medicine.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Herodicus tutored Hippocrates.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreek(x) ::: x is a Greek person.\nPhysician(x) ::: x is a physician.\nDietician(x) ::: x is a dietician.\nSophist(x) ::: x is a sophist.\nGymnasticMaster(x) ::: x is a gymnastic-master.\nBorn(x, y) ::: x was born in y.\nColony(x, y) ::: x is a colony of y.\nTutor(x, y) ::: x is a tutor of y.\nRecommend(x, y) ::: x recommends y.\nConsider(x, y) ::: x is considered to be y.\nFoundation(x, y) ::: x is the foundation of y.\nPremises:\nGreek(herodicus) ∧ Physician(herodicus) ∧ Dietician(herodicus) ∧ Sophist(herodicus) ∧ GymnasticMaster(herodicus) ∧ Born(herodicus, selymbria) ::: Herodicus was a Greek physician, dietician, sophist, and gymnastic-master. Herodicus was born in the city of Selymbria.\nColony(selymbria, megara) ::: Selymbria is a colony of the city-state Megara.\nTutor(herodicus, hippocrates) ::: One of the tutors of Hippocrates was Herodicus.\nRecommend(herodicus, massage) ::: Massages were recommended by Herodicus.\nConsider(theoryOfHerodicus, foundationOfSportsMedicine) ::: Some of theories of Herodicus are considered to be the foundation of sports medicine.\nConclusion:\nTutor(herodicus, hippocrates) ::: Herodicus tutored Hippocrates."
    ]
  },
  {
    "id": "FOLIO_train_720",
    "context": "Herodicus was a Greek physician, dietician, sophist, and gymnastic-master. Herodicus was born in the city of Selymbria. Selymbria is a colony of the city-state Megara. One of the tutors of Hippocrates was Herodicus. Massages were recommended by Herodicus. Some of theories of Herodicus are considered to be the foundation of sports medicine.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Herodicus was tutored by Hippocrates.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreek(x) ::: x is a Greek person.\nPhysician(x) ::: x is a physician.\nDietician(x) ::: x is a dietician.\nSophist(x) ::: x is a sophist.\nGymnasticMaster(x) ::: x is a gymnastic-master.\nBorn(x, y) ::: x was born in y.\nColony(x, y) ::: x is a colony of y.\nTutor(x, y) ::: x is a tutor of y.\nRecommend(x, y) ::: x recommends y.\nConsider(x, y) ::: x is considered to be y.\nFoundation(x, y) ::: x is the foundation of y.\nPremises:\nGreek(herodicus) ∧ Physician(herodicus) ∧ Dietician(herodicus) ∧ Sophist(herodicus) ∧ GymnasticMaster(herodicus) ∧ Born(herodicus, selymbria) ::: Herodicus was a Greek physician, dietician, sophist, and gymnastic-master. Herodicus was born in the city of Selymbria.\nColony(selymbria, megara) ::: Selymbria is a colony of the city-state Megara.\nTutor(herodicus, hippocrates) ::: One of the tutors of Hippocrates was Herodicus.\nRecommend(herodicus, massage) ::: Massages were recommended by Herodicus.\nConsider(theoryOfHerodicus, foundationOfSportsMedicine) ::: Some of theories of Herodicus are considered to be the foundation of sports medicine.\nConclusion:\nTutor(hippocrates, herodicus) ::: Herodicus was tutored by Hippocrates.\n------"
    ]
  },
  {
    "id": "FOLIO_train_721",
    "context": "Herodicus was a Greek physician, dietician, sophist, and gymnastic-master. Herodicus was born in the city of Selymbria. Selymbria is a colony of the city-state Megara. One of the tutors of Hippocrates was Herodicus. Massages were recommended by Herodicus. Some of theories of Herodicus are considered to be the foundation of sports medicine.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Herodicus was born in a city-state.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPhysician(x) ::: x is a physician.\nDietician(x) ::: x is a dietician.\nSophist(x) ::: x is a sophist.\nGymnasticMaster(x) ::: x is a gymnastic-master.\nBorn(x, y) ::: x was born in y.\nColony(x, y) ::: x is a colony of y.\nCityState(x) ::: x is a city-state.\nTutor(x, y) ::: x is a tutor of y.\nRecommend(x, y) ::: x recommends y.\nTheory(x) ::: x is a theory.\nFoundation(x, y) ::: x is the foundation of y.\nPremises:\nPhysician(herodicus) ∧ Dietician(herodicus) ∧ Sophist(herodicus) ∧ GymnasticMaster(herodicus) ∧ Born(herodicus, selymbria) ::: Herodicus was a Greek physician, dietician, sophist, and gymnastic-master. Herodicus was born in the city of Selymbria.\nColony(selymbria, megara) ::: Selymbria is a colony of the city-state Megara.\nTutor(herodicus, hippocrates) ::: One of the tutors of Hippocrates was Herodicus.\nRecommend(herodicus, massage) ::: Massages were recommended by Herodicus.\nFoundation(theory(herodicus), sportsMedicine) ::: Some of theories of Herodicus are considered to be the foundation of sports medicine.\nConclusion:\nBorn(herodicus, cityState(megara)) ::: Herodicus was born in a city-state.\n------\nProblem:\nThe first known use of the word \"computer\" was"
    ]
  },
  {
    "id": "FOLIO_train_722",
    "context": "Herodicus was a Greek physician, dietician, sophist, and gymnastic-master. Herodicus was born in the city of Selymbria. Selymbria is a colony of the city-state Megara. One of the tutors of Hippocrates was Herodicus. Massages were recommended by Herodicus. Some of theories of Herodicus are considered to be the foundation of sports medicine.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Herodicus did not recommend massages.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreek(x) ::: x is a Greek person.\nPhysician(x) ::: x is a physician.\nDietician(x) ::: x is a dietician.\nSophist(x) ::: x is a sophist.\nGymnasticMaster(x) ::: x is a gymnastic-master.\nBorn(x, y) ::: x was born in y.\nColony(x, y) ::: x is a colony of y.\nTutor(x, y) ::: x is a tutor of y.\nRecommend(x, y) ::: x recommends y.\nConsider(x, y) ::: x is considered to be y.\nPremises:\nGreek(herodicus) ∧ Physician(herodicus) ∧ Dietician(herodicus) ∧ Sophist(herodicus) ∧ GymnasticMaster(herodicus) ∧ Born(herodicus, selymbria) ∧ Colony(selymbria, megara) ∧ Tutor(herodicus, hippocrates) ∧ Recommend(herodicus, massage) ∧ Consider(theory(herodicus), foundation(sportsMedicine)) ::: Herodicus was a Greek physician, dietician, sophist, and gymnastic-master. Herodicus was born in the city of Selymbria. Selymbria is a colony of the city-state Megara. One of the tutors of Hippocrates was Herodicus. Massages were recommended by Herodicus. Some of theories of Herodicus are considered to be the foundation of sports medicine.\nConclusion:\n¬Recommend(herodicus, massage) ::: Herodicus did not recommend massages.\n------\nProblem:\nThe first known use of the word \"computer\" was recorded in 1613, when"
    ]
  },
  {
    "id": "FOLIO_train_723",
    "context": "Herodicus was a Greek physician, dietician, sophist, and gymnastic-master. Herodicus was born in the city of Selymbria. Selymbria is a colony of the city-state Megara. One of the tutors of Hippocrates was Herodicus. Massages were recommended by Herodicus. Some of theories of Herodicus are considered to be the foundation of sports medicine.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Herodicus was born in a colony of a city-state.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPhysician(x) ::: x is a physician.\nDietician(x) ::: x is a dietician.\nSophist(x) ::: x is a sophist.\nGymnasticMaster(x) ::: x is a gymnastic-master.\nBorn(x, y) ::: x was born in y.\nColony(x) ::: x is a colony.\nCityState(x) ::: x is a city-state.\nTutor(x, y) ::: x is a tutor of y.\nRecommend(x, y) ::: x recommends y.\nConsider(x, y) ::: x is considered to be y.\nFoundation(x, y) ::: x is the foundation of y.\nPremises:\nPhysician(herodicus) ∧ Dietician(herodicus) ∧ Sophist(herodicus) ∧ GymnasticMaster(herodicus) ∧ Born(herodicus, selymbria) ::: Herodicus was a Greek physician, dietician, sophist, and gymnastic-master. Herodicus was born in the city of Selymbria.\nColony(selymbria) ∧ CityState(megara) ::: Selymbria is a colony of the city-state Megara.\nTutor(herodicus, hippocrates) ::: One of the tutors of Hippocrates was Herodicus.\nRecommend(herodicus, massage) ::: Massages were recommended by Herodicus.\nConsider(theoryOfHerodicus, foundationOfSportsMedicine) ::: Some of theories of Herodicus are considered to be the foundation of sports medicine.\nConclusion:\nBorn(herodicus, colony) ::: Herodicus was born in a colony of a city-state.\n------\nProblem:\nThe first"
    ]
  },
  {
    "id": "FOLIO_train_724",
    "context": "No kid loves the Opera. All adults love the Opera. If someone is a scientist, then they are an adult. Some students are kids. Billy is a kid.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Billy is a student.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nKid(x) ::: x is a kid.\nAdult(x) ::: x is an adult.\nScientist(x) ::: x is a scientist.\nStudent(x) ::: x is a student.\nLove(x, y) ::: x loves y.\nPremises:\n¬∃x (Kid(x) ∧ Love(x, opera)) ::: No kid loves the Opera.\n∀x (Adult(x) → Love(x, opera)) ::: All adults love the Opera.\n∀x (Scientist(x) → Adult(x)) ::: If someone is a scientist, then they are an adult.\n∃x (Student(x) ∧ Kid(x)) ::: Some students are kids.\nKid(billy) ::: Billy is a kid.\nConclusion:\n¬Student(billy) ::: Billy is a student.\n------\nProblem:\nNo one who is a student is a scientist. Someone who is a scientist is an adult. Someone who is an adult is a person who loves the Opera.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? No one who is a student is a person who loves the Opera.\nBased on the above information, is the following statement true, false, or uncertain? No one who is a student is an adult.\nBased on the above information, is the following statement true, false, or uncertain? No one who is a scientist is a person who loves the Opera.\n###\nPredicates:\nStudent(x) ::: x is a student.\nScientist(x) ::: x is a scientist.\nAdult(x) ::: x is an adult.\nLove(x, y) ::: x loves y.\nPremises:\n¬∃x (Student(x) ∧ Scientist(x))"
    ]
  },
  {
    "id": "FOLIO_train_725",
    "context": "No kid loves the Opera. All adults love the Opera. If someone is a scientist, then they are an adult. Some students are kids. Billy is a kid.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Billy is a student and a scientist.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nKid(x) ::: x is a kid.\nAdult(x) ::: x is an adult.\nScientist(x) ::: x is a scientist.\nStudent(x) ::: x is a student.\nLove(x, y) ::: x loves y.\nPremises:\n¬∃x (Kid(x) ∧ Love(x, opera)) ::: No kid loves the Opera.\n∀x (Adult(x) → Love(x, opera)) ::: All adults love the Opera.\n∃x (Scientist(x) ∧ Adult(x)) ::: If someone is a scientist, then they are an adult.\n∃x (Student(x) ∧ Kid(x)) ::: Some students are kids.\nKid(billy) ::: Billy is a kid.\nConclusion:\nStudent(billy) ∧ Scientist(billy) ::: Billy is a student and a scientist.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted"
    ]
  },
  {
    "id": "FOLIO_train_726",
    "context": "No kid loves the Opera. All adults love the Opera. If someone is a scientist, then they are an adult. Some students are kids. Billy is a kid.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Billy is a student or a scientist, then Billy is a student and a kid.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nKid(x) ::: x is a kid.\nAdult(x) ::: x is an adult.\nScientist(x) ::: x is a scientist.\nStudent(x) ::: x is a student.\nLove(x, y) ::: x loves y.\nPremises:\n¬∃x (Kid(x) ∧ Love(x, opera)) ::: No kid loves the Opera.\n∀x (Adult(x) → Love(x, opera)) ::: All adults love the Opera.\n∀x (Scientist(x) → Adult(x)) ::: If someone is a scientist, then they are an adult.\n∃x (Student(x) ∧ Kid(x)) ::: Some students are kids.\nKid(billy) ::: Billy is a kid.\nConclusion:\n¬(Scientist(billy) ∨ Student(billy)) ∨ (Student(billy) ∧ Kid(billy)) ::: If Billy is a student or a scientist, then Billy is a student and a kid.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine"
    ]
  },
  {
    "id": "FOLIO_train_727",
    "context": "Brian Winter is a Scottish football referee. After being injured, Brian Winter retired in 2012. Brian Winter was appointed as a referee observer after his retirement. Some football referees become referee observers. The son of Brian Winter, Andy Winter, is a football player who plays for Hamilton Academical.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There is a son of a referee observer that plays football.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nScottish(x) ::: x is a Scottish person.\nReferee(x) ::: x is a football referee.\nObserver(x) ::: x is a referee observer.\nInjured(x) ::: x is injured.\nRetire(x) ::: x retires.\nAppoint(x, y) ::: x is appointed as y.\nSon(x, y) ::: x is the son of y.\nPlayer(x) ::: x is a football player.\nPlay(x, y) ::: x plays for y.\nPremises:\nScottish(brian) ∧ Referee(brian) ∧ Injured(brian) ∧ Retire(brian) ∧ Appoint(brian, observer) ::: Brian Winter is a Scottish football referee. After being injured, Brian Winter retired in 2012. Brian Winter was appointed as a referee observer after his retirement.\n∃x (Referee(x) ∧ Appoint(x, observer)) ::: Some football referees become referee observers.\nSon(andy, brian) ∧ Player(andy) ∧ Play(andy, hamiltonAcademical) ::: The son of Brian Winter, Andy Winter, is a football player who plays for Hamilton Academical.\nConclusion:\n∃x ∃y (Observer(x) ∧ Son(y, x) ∧ Player(y)) ::: There is a son of a referee observer that plays football.\n------\nProblem:\nThe 2012 Summer Olympics, formally the Games of the XXX Olympiad and commonly known as London 2012, was a major international multi-sport event celebrated in the tradition of the Olympic Games, as governed by the International Olympic Committee (IOC). The 2012 Summer Olympics was held in London, United Kingdom. The 2012 Summer Olympics was the first time that women's box"
    ]
  },
  {
    "id": "FOLIO_train_728",
    "context": "Brian Winter is a Scottish football referee. After being injured, Brian Winter retired in 2012. Brian Winter was appointed as a referee observer after his retirement. Some football referees become referee observers. The son of Brian Winter, Andy Winter, is a football player who plays for Hamilton Academical.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Brian Winter is not a referee observer.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nScottish(x) ::: x is a Scottish person.\nReferee(x) ::: x is a football referee.\nObserver(x) ::: x is a referee observer.\nInjured(x) ::: x is injured.\nRetire(x) ::: x retires.\nAppoint(x, y) ::: x is appointed as y.\nSon(x, y) ::: x is the son of y.\nPlayer(x) ::: x is a football player.\nPlay(x, y) ::: x plays for y.\nPremises:\nScottish(brian) ∧ Referee(brian) ∧ Retire(brian) ∧ Appoint(brian, observer) ::: Brian Winter is a Scottish football referee. After being injured, Brian Winter retired in 2012. Brian Winter was appointed as a referee observer after his retirement.\n∃x (Referee(x) ∧ Appoint(x, observer)) ::: Some football referees become referee observers.\nSon(andy, brian) ∧ Player(andy) ∧ Play(andy, hamiltonAcademical) ::: The son of Brian Winter, Andy Winter, is a football player who plays for Hamilton Academical.\nConclusion:\n¬Observer(brian) ::: Brian Winter is not a referee observer.\n------\nProblem:\nThe 2012 Summer Olympics, officially the Games of the XXX Olympiad, was a major international multi-sport event celebrated in the tradition of the Olympic Games, as governed by the International Olympic Committee (IOC). The 2012 Summer Olympics was held in London, United Kingdom. The 2012 Summer Olympics was the first time that women's boxing was contested at the Olympics. The 2012 Summer Olympics was the third time that London hosted the Olympic Games. The 2012 Summer Olympics was the first time that the"
    ]
  },
  {
    "id": "FOLIO_train_729",
    "context": "Brian Winter is a Scottish football referee. After being injured, Brian Winter retired in 2012. Brian Winter was appointed as a referee observer after his retirement. Some football referees become referee observers. The son of Brian Winter, Andy Winter, is a football player who plays for Hamilton Academical.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Brian Winter is retired.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nScottish(x) ::: x is a Scottish person.\nFootballReferee(x) ::: x is a football referee.\nRefereeObserver(x) ::: x is a referee observer.\nInjured(x) ::: x is injured.\nRetired(x) ::: x is retired.\nAppoint(x, y) ::: x is appointed as y.\nSon(x, y) ::: x is the son of y.\nFootballPlayer(x) ::: x is a football player.\nPlay(x, y) ::: x plays for y.\nPremises:\nScottish(brian) ∧ FootballReferee(brian) ∧ Injured(brian) ∧ Retired(brian) ∧ Appoint(brian, refereeObserver) ::: Brian Winter is a Scottish football referee. After being injured, Brian Winter retired in 2012. Brian Winter was appointed as a referee observer after his retirement.\n∃x (FootballReferee(x) ∧ Appoint(x, refereeObserver)) ::: Some football referees become referee observers.\nSon(andy, brian) ∧ FootballPlayer(andy) ∧ Play(andy, hamiltonAcademical) ::: The son of Brian Winter, Andy Winter, is a football player who plays for Hamilton Academical.\nConclusion:\nRetired(brian) ::: Brian Winter is retired.\n------\nProblem:\nThe 2012 Summer Olympics, formally the Games of the XXX Olympiad and commonly known as London 2012, was a major international multi-sport event celebrated in the tradition of the Olympic Games, as governed by the International Olympic Committee (IOC). The 2012 Summer Olympics was held in London, United Kingdom. The 2012 Summer Olympics was the first time that women's boxing was contested at the Olympics. The 20"
    ]
  },
  {
    "id": "FOLIO_train_730",
    "context": "Brian Winter is a Scottish football referee. After being injured, Brian Winter retired in 2012. Brian Winter was appointed as a referee observer after his retirement. Some football referees become referee observers. The son of Brian Winter, Andy Winter, is a football player who plays for Hamilton Academical.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Andy Winter is a referee.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nScottish(x) ::: x is a Scottish person.\nReferee(x) ::: x is a football referee.\nObserver(x) ::: x is a referee observer.\nInjured(x) ::: x is injured.\nRetire(x) ::: x retires.\nAppoint(x, y) ::: x is appointed as y.\nSon(x, y) ::: x is the son of y.\nPlayer(x) ::: x is a football player.\nPlay(x, y) ::: x plays for y.\nPremises:\nScottish(brian) ∧ Referee(brian) ∧ Retire(brian) ∧ Appoint(brian, observer) ::: Brian Winter is a Scottish football referee. After being injured, Brian Winter retired in 2012. Brian Winter was appointed as a referee observer after his retirement.\n∃x (Referee(x) ∧ Observer(x)) ::: Some football referees become referee observers.\nSon(andy, brian) ∧ Player(andy) ∧ Play(andy, hamiltonAcademical) ::: The son of Brian Winter, Andy Winter, is a football player who plays for Hamilton Academical.\nConclusion:\nReferee(andy) ::: Andy Winter is a referee.\n------"
    ]
  },
  {
    "id": "FOLIO_train_731",
    "context": "People are either interested in puzzles or bad at chess. If a person is bad at chess, then they don't play a lot of chess. A person is either a planner or a creative person. Erica is someone who plays a lot of chess. If Erica is neither bad at chess nor creative, then Erica is either someone who plans and is creative, or someone who neither plans nor is creative.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Erica plans.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nInterested(x) ::: x is interested in puzzles.\nBad(x) ::: x is bad at chess.\nPlay(x) ::: x plays a lot of chess.\nPlanner(x) ::: x is a planner.\nCreative(x) ::: x is a creative person.\nPremises:\nInterested(x) ⊕ Bad(x) ::: People are either interested in puzzles or bad at chess.\nBad(x) → ¬Play(x) ::: If a person is bad at chess, then they don't play a lot of chess. \nPlanner(x) ⊕ Creative(x) ::: A person is either a planner or a creative person.\nPlay(erica) ::: Erica is someone who plays a lot of chess. \n¬Bad(erica) ∧ ¬Creative(erica) → (Planner(erica) ∧ Creative(erica)) ⊕ ¬(Planner(erica) ∨ Creative(erica)) ::: If Erica is neither bad at chess nor creative, then Erica is either someone who plans and is creative, or someone who neither plans nor is creative.\nConclusion:\nPlanner(erica) ::: Erica plans.\n------\nProblem:\nA person is either a student"
    ]
  },
  {
    "id": "FOLIO_train_732",
    "context": "People are either interested in puzzles or bad at chess. If a person is bad at chess, then they don't play a lot of chess. A person is either a planner or a creative person. Erica is someone who plays a lot of chess. If Erica is neither bad at chess nor creative, then Erica is either someone who plans and is creative, or someone who neither plans nor is creative.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Erica is interested in puzzles and is creative.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nInterested(x, y) ::: x is interested in y.\nBad(x, y) ::: x is bad at y.\nPlay(x, y) ::: x plays y.\nLot(x) ::: x is a lot.\nPlan(x) ::: x is a planner.\nCreative(x) ::: x is a creative person.\nPremises:\n(Interested(x, puzzles) ∨ Bad(x, chess)) ::: People are either interested in puzzles or bad at chess.\nBad(x, chess) → ¬Play(x, chess) ∧ Lot(x) ::: If a person is bad at chess, then they don't play a lot of chess. \n(Plan(x) ∨ Creative(x)) ::: A person is either a planner or a creative person. \nPlay(erica, chess) ∧ Lot(erica) ::: Erica is someone who plays a lot of chess. \n¬(Bad(erica, chess) ∧ Creative(erica)) → (Plan(erica) ∧ Creative(erica)) ∨ ¬(Plan(erica) ∨ Creative(erica)) ::: If Erica is neither bad at chess nor creative, then Erica is either someone who plans and is cre"
    ]
  },
  {
    "id": "FOLIO_train_733",
    "context": "People are either interested in puzzles or bad at chess. If a person is bad at chess, then they don't play a lot of chess. A person is either a planner or a creative person. Erica is someone who plays a lot of chess. If Erica is neither bad at chess nor creative, then Erica is either someone who plans and is creative, or someone who neither plans nor is creative.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Erica is either interested in puzzles or is creative.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nInterested(x, y) ::: x is interested in y.\nBad(x, y) ::: x is bad at y.\nPlay(x, y) ::: x plays y.\nLot(x) ::: x is a lot.\nPlan(x) ::: x is a planner.\nCreative(x) ::: x is a creative person.\nPremises:\n(Interested(x, puzzles) ∨ Bad(x, chess)) ::: People are either interested in puzzles or bad at chess.\nBad(x, chess) → ¬Play(x, chess) ∧ Lot(x) ::: If a person is bad at chess, then they don't play a lot of chess. \n(Plan(x) ∨ Creative(x)) ::: A person is either a planner or a creative person. \nPlay(erica, chess) ∧ Lot(erica) ::: Erica is someone who plays a lot of chess. \n¬(Bad(erica, chess) ∧ Creative(erica)) → (Plan(erica) ∧ Creative(erica)) ∨ ¬(Plan(erica) ∨ Creative(erica)) ::: If Erica is neither bad at chess nor creative, then Erica is either someone who plans and is cre"
    ]
  },
  {
    "id": "FOLIO_train_734",
    "context": "People are either interested in puzzles or bad at chess. If a person is bad at chess, then they don't play a lot of chess. A person is either a planner or a creative person. Erica is someone who plays a lot of chess. If Erica is neither bad at chess nor creative, then Erica is either someone who plans and is creative, or someone who neither plans nor is creative.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Erica plans ahead or plays a lot of chess matches, then Erica is not interested in puzzles and creative.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nInterested(x, y) ::: x is interested in y.\nBad(x, y) ::: x is bad at y.\nPlay(x, y) ::: x plays y.\nLot(x) ::: x is a lot.\nPlan(x) ::: x is a planner.\nCreative(x) ::: x is a creative person.\nPremises:\n∀x (Bad(x, chess) → ¬Play(x, lot(chess))) ::: If a person is bad at chess, then they don't play a lot of chess.\n∀x (Plan(x) ⊕ Creative(x)) ::: A person is either a planner or a creative person.\nPlay(erica, lot(chess)) ::: Erica is someone who plays a lot of chess.\n¬(Bad(erica, chess) ∧ Creative(erica)) → (Plan(erica) ∧ Creative(erica)) ⊕ ¬(Plan(erica) ∨ Creative(erica)) ::: If Erica is neither bad at chess nor creative, then Erica is either someone who plans and is creative, or someone who neither plans nor is creative.\nConclusion:\n¬(Interested(erica, puzzles) ∧ Creative(erica)) → (Plan(erica"
    ]
  },
  {
    "id": "FOLIO_train_735",
    "context": "People are either interested in puzzles or bad at chess. If a person is bad at chess, then they don't play a lot of chess. A person is either a planner or a creative person. Erica is someone who plays a lot of chess. If Erica is neither bad at chess nor creative, then Erica is either someone who plans and is creative, or someone who neither plans nor is creative.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Erica is creative, then Erica is not interested in puzzles and creative.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nInterested(x, y) ::: x is interested in y.\nBad(x, y) ::: x is bad at y.\nPlay(x, y) ::: x plays y.\nLot(x) ::: x is a lot.\nPlan(x) ::: x is a planner.\nCreative(x) ::: x is a creative person.\nPremises:\n∀x (Interested(x, puzzles) ⊕ Bad(x, chess)) ::: People are either interested in puzzles or bad at chess.\n∀x (Bad(x, chess) → ¬Play(x, chess) ∧ Lot(x)) ::: If a person is bad at chess, then they don't play a lot of chess. \n∀x (Plan(x) ∨ Creative(x)) ::: A person is either a planner or a creative person. \nPlay(erica, chess) ∧ Lot(erica) ::: Erica is someone who plays a lot of chess. \n¬(Bad(erica, chess) ∧ Creative(erica)) → (Plan(erica) ∧ Creative(erica)) ∨ ¬(Plan(erica) ∨ Creative(erica)) ::: If Erica is neither bad at chess nor creative, then Erica is"
    ]
  },
  {
    "id": "FOLIO_train_736",
    "context": "People are either interested in puzzles or bad at chess. If a person is bad at chess, then they don't play a lot of chess. A person is either a planner or a creative person. Erica is someone who plays a lot of chess. If Erica is neither bad at chess nor creative, then Erica is either someone who plans and is creative, or someone who neither plans nor is creative.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Erica is interested in puzzles and is creative, then Erica is not creative.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nInterested(x, y) ::: x is interested in y.\nBad(x, y) ::: x is bad at y.\nPlay(x, y) ::: x plays y.\nLot(x) ::: x is a lot.\nPlan(x) ::: x is a planner.\nCreative(x) ::: x is a creative person.\nPremises:\n∀x (Interested(x, puzzles) ⊕ Bad(x, chess)) ::: People are either interested in puzzles or bad at chess.\n∀x (Bad(x, chess) → ¬Play(x, chess) ∧ Lot(x)) ::: If a person is bad at chess, then they don't play a lot of chess. \n∀x (Plan(x) ⊕ Creative(x)) ::: A person is either a planner or a creative person. \nPlay(erica, chess) ∧ Lot(erica) ::: Erica is someone who plays a lot of chess. \n¬(Bad(erica, chess) ∧ Creative(erica)) → (Plan(erica) ∧ Creative(erica)) ⊕ ¬(Plan(erica) ∨ Creative(erica)) ::: If Erica is neither bad at chess nor creative, then Erica is"
    ]
  },
  {
    "id": "FOLIO_train_737",
    "context": "People are either interested in puzzles or bad at chess. If a person is bad at chess, then they don't play a lot of chess. A person is either a planner or a creative person. Erica is someone who plays a lot of chess. If Erica is neither bad at chess nor creative, then Erica is either someone who plans and is creative, or someone who neither plans nor is creative.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Erica either plays a lot of chess matches or is creative, then Erica is neither interested in puzzles nor a person who plays a lot of chess matches.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nInterested(x) ::: x is interested in puzzles.\nBad(x) ::: x is bad at chess.\nPlay(x) ::: x plays a lot of chess.\nPlan(x) ::: x is a planner.\nCreative(x) ::: x is a creative person.\nPremises:\n∀x (Interested(x) ⊕ Bad(x)) ::: People are either interested in puzzles or bad at chess.\n∀x (Bad(x) → ¬Play(x)) ::: If a person is bad at chess, then they don't play a lot of chess. \n∀x (Plan(x) ∨ Creative(x)) ::: A person is either a planner or a creative person. \nPlay(erica) ::: Erica is someone who plays a lot of chess. \n¬(Bad(erica) ∧ Creative(erica)) → (Plan(erica) ∧ Creative(erica)) ⊕ ¬(Plan(erica) ∨ Creative(erica)) ::: If Erica is neither bad at chess nor creative, then Erica is either someone who plans and is creative, or someone who neither plans nor is creative.\nConclusion:\n¬(Interested(erica) ∧ Play(erica)) ::: If Erica"
    ]
  },
  {
    "id": "FOLIO_train_738",
    "context": "People are either interested in puzzles or bad at chess. If a person is bad at chess, then they don't play a lot of chess. A person is either a planner or a creative person. Erica is someone who plays a lot of chess. If Erica is neither bad at chess nor creative, then Erica is either someone who plans and is creative, or someone who neither plans nor is creative.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Erica is interested in puzzles and plays a lot of chess matches, then Erica is either a person who plays a lot of chess matches or a person that is creative.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nInterested(x) ::: x is interested in puzzles.\nBad(x) ::: x is bad at chess.\nPlay(x) ::: x plays a lot of chess.\nPlan(x) ::: x is a planner.\nCreative(x) ::: x is a creative person.\nPremises:\n∀x (Interested(x) ⊕ Bad(x)) ::: People are either interested in puzzles or bad at chess.\n∀x (Bad(x) → ¬Play(x)) ::: If a person is bad at chess, then they don't play a lot of chess. \n∀x (Plan(x) ⊕ Creative(x)) ::: A person is either a planner or a creative person. \nPlay(erica) ::: Erica is someone who plays a lot of chess. \n¬(Bad(erica) ∧ Creative(erica)) → (Plan(erica) ∧ Creative(erica)) ⊕ ¬(Plan(erica) ∨ Creative(erica)) ::: If Erica is neither bad at chess nor creative, then Erica is either someone who plans and is creative, or someone who neither plans nor is creative.\nConclusion:\n(Interested(erica) ∧ Play(erica)) → (Play(erica"
    ]
  },
  {
    "id": "FOLIO_train_739",
    "context": "People are either interested in puzzles or bad at chess. If a person is bad at chess, then they don't play a lot of chess. A person is either a planner or a creative person. Erica is someone who plays a lot of chess. If Erica is neither bad at chess nor creative, then Erica is either someone who plans and is creative, or someone who neither plans nor is creative.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Erica plans ahead or is interested in puzzles, then Erica is creative.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nInterested(x, y) ::: x is interested in y.\nBad(x, y) ::: x is bad at y.\nPlay(x, y) ::: x plays y.\nPlan(x) ::: x is a planner.\nCreative(x) ::: x is a creative person.\nPremises:\n(Interested(x, puzzles) ∨ Bad(x, chess)) ::: People are either interested in puzzles or bad at chess.\nBad(x, chess) → ¬Play(x, chess) ::: If a person is bad at chess, then they don't play a lot of chess.\n(Plan(x) ∨ Creative(x)) ::: A person is either a planner or a creative person.\nPlay(erica, chess) ::: Erica is someone who plays a lot of chess.\n¬(Bad(erica, chess) ∧ Creative(erica)) → (Plan(erica) ∧ Creative(erica)) ∨ ¬(Plan(erica) ∨ Creative(erica)) ::: If Erica is neither bad at chess nor creative, then Erica is either someone who plans and is creative, or someone who neither plans nor is creative.\nConclusion:\nPlan(erica) ∨ Interested(erica"
    ]
  },
  {
    "id": "FOLIO_train_740",
    "context": "People are either interested in puzzles or bad at chess. If a person is bad at chess, then they don't play a lot of chess. A person is either a planner or a creative person. Erica is someone who plays a lot of chess. If Erica is neither bad at chess nor creative, then Erica is either someone who plans and is creative, or someone who neither plans nor is creative.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Erica is either bad at chess or interested in puzzles, then Erica is not a person who plays a lot of chess matches and creative.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nInterested(x, y) ::: x is interested in y.\nBad(x, y) ::: x is bad at y.\nPlay(x, y) ::: x plays y.\nLot(x) ::: x is a lot.\nChess(x) ::: x is chess.\nMatch(x) ::: x is a match.\nCreative(x) ::: x is creative.\nPlan(x) ::: x is a planner.\nPremises:\n∀x (Bad(x, chess) → ¬Play(x, lot(chess))) ::: If a person is bad at chess, then they don't play a lot of chess.\n∀x (Plan(x) ⊕ Creative(x)) ::: A person is either a planner or a creative person.\nPlay(erica, lot(chess)) ::: Erica is someone who plays a lot of chess.\n¬(Bad(erica, chess) ∧ Creative(erica)) → (Plan(erica) ∧ Creative(erica)) ⊕ ¬(Plan(erica) ∨ Creative(erica)) ::: If Erica is neither bad at chess nor creative, then Erica is either someone who plans and is creative, or someone who neither plans nor is creative.\nConclusion:\n¬(Bad(erica, chess) ∧ Interested(erica, puzzle)) → (Play(erica, lot(chess)) ∧ Creative(erica)) ::: If Erica is either bad at chess or interested in puzzles, then Erica is not a person who plays a lot of chess matches and creative.\n------"
    ]
  },
  {
    "id": "FOLIO_train_741",
    "context": "Soccer players have a right foot and a left foot. Top soccer players are soccer players who can use their both feet very efficiently. If a soccer player can score many goals using left foot, then they can use that foot very efficiently. If a soccer player can score many goals using right foot, then they can use that foot very efficiently. Cristiano Ronaldo is a soccer player. Cristiano Ronaldo can use his right foot very efficiently. Cristiano Ronaldo have scored more than one hundred goals using his left foot.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Cristiano Ronaldo is a top soccer player.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSoccerPlayer(x) ::: x is a soccer player.\nTopSoccerPlayer(x) ::: x is a top soccer player.\nRightFoot(x) ::: x has a right foot.\nLeftFoot(x) ::: x has a left foot.\nBothFoot(x) ::: x has both feet.\nEfficiently(x, y) ::: x can use y very efficiently.\nScore(x, y) ::: x can score y goals.\nGoal(x) ::: x is a goal.\nPremises:\n∀x (SoccerPlayer(x) → BothFoot(x)) ::: Soccer players have a right foot and a left foot.\n∀x (TopSoccerPlayer(x) → ∀y (Efficiently(x, y) → (y = rightFoot ∨ y = leftFoot))) ::: Top soccer players are soccer players who can use their both feet very efficiently.\n∀x (Score(x, y) → Efficiently(x, y)) ::: If a soccer player can score many goals using left foot, then they can use that foot very efficiently.\n∀x (Score(x, y) → Efficiently(x, y)) ::: If a soccer player can score many goals using right foot, then they can use that foot very efficiently.\nSoccerPlayer(cristiano) ::: Cristiano Ronaldo is a soccer player.\nEfficiently(cristiano, rightFoot) ::: Cristiano Ronaldo can use his right foot very efficiently.\nScore(cristiano, moreThanOneHundred) ::: Cristiano Ronaldo have scored more than one hundred goals using his left foot.\nConclusion"
    ]
  },
  {
    "id": "FOLIO_train_742",
    "context": "Soccer players have a right foot and a left foot. Top soccer players are soccer players who can use their both feet very efficiently. If a soccer player can score many goals using left foot, then they can use that foot very efficiently. If a soccer player can score many goals using right foot, then they can use that foot very efficiently. Cristiano Ronaldo is a soccer player. Cristiano Ronaldo can use his right foot very efficiently. Cristiano Ronaldo have scored more than one hundred goals using his left foot.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Cristiano Ronaldo is not a top soccer player.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSoccerPlayer(x) ::: x is a soccer player.\nTopSoccerPlayer(x) ::: x is a top soccer player.\nRightFoot(x) ::: x has a right foot.\nLeftFoot(x) ::: x has a left foot.\nBothFoot(x) ::: x has both feet.\nEfficiently(x, y) ::: x can use y very efficiently.\nScore(x, y) ::: x can score y goals.\nGoal(x) ::: x is a goal.\nPremises:\n∀x (SoccerPlayer(x) → BothFoot(x)) ::: Soccer players have a right foot and a left foot.\n∀x (TopSoccerPlayer(x) → ∀y (Efficiently(x, y) → (y = rightFoot ∨ y = leftFoot))) ::: Top soccer players are soccer players who can use their both feet very efficiently.\n∀x (Score(x, y) → Efficiently(x, y)) ::: If a soccer player can score many goals using left foot, then they can use that foot very efficiently.\n∀x (Score(x, y) → Efficiently(x, y)) ::: If a soccer player can score many goals using right foot, then they can use that foot very efficiently.\nSoccerPlayer(cristiano) ::: Cristiano Ronaldo is a soccer player.\nEfficiently(cristiano, rightFoot) ::: Cristiano Ronaldo can use his right foot very efficiently.\nScore(cristiano, moreThanOneHundred) ::: Cristiano Ronaldo have scored more than one hundred goals using his left foot.\nConclusion"
    ]
  },
  {
    "id": "FOLIO_train_743",
    "context": "The National Lobster Hatchery is a hatchery located in Padstow England. The National Lobster Hatchery is open to visitors. A hatchery is either for profit, or for conservation. If a hatchery is for conservation, it might release animals into the wild. The National Lobster Hatchery is not for profit.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The National Lobster Hatchery is for conservation.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nHatchery(x) ::: x is a hatchery.\nForProfit(x) ::: x is for profit.\nForConservation(x) ::: x is for conservation.\nOpen(x) ::: x is open to visitors.\nRelease(x, y) ::: x releases y.\nReleaseIntoWild(x, y) ::: x releases y into the wild.\nPremises:\nHatchery(nationalLobsterHatchery) ∧ Open(nationalLobsterHatchery) ::: The National Lobster Hatchery is a hatchery located in Padstow England. The National Lobster Hatchery is open to visitors.\n∀x (Hatchery(x) → (ForProfit(x) ∨ ForConservation(x))) ::: A hatchery is either for profit, or for conservation.\nForConservation(x) → ∃y (Release(x, y) ∧ ReleaseIntoWild(x, y)) ::: If a hatchery is for conservation, it might release animals into the wild.\n¬ForProfit(nationalLobsterHatchery) ::: The National Lobster Hatchery is not for profit.\nConclusion:\nForConservation(nationalLobsterHatchery) ::: The National Lobster Hatchery is for conservation.\n------\nProblem:\nThe National Lobster Hatchery is a hatchery located in Padstow England. The National Lobster Hatchery is open to visitors. A hatchery is either for profit, or for conservation. If a hatchery is for conservation, it might release animals into the wild. The National Lobster Hatchery"
    ]
  },
  {
    "id": "FOLIO_train_744",
    "context": "The National Lobster Hatchery is a hatchery located in Padstow England. The National Lobster Hatchery is open to visitors. A hatchery is either for profit, or for conservation. If a hatchery is for conservation, it might release animals into the wild. The National Lobster Hatchery is not for profit.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? All hatcheries are open to visitors.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nHatchery(x) ::: x is a hatchery.\nOpen(x) ::: x is open to visitors.\nProfit(x) ::: x is for profit.\nConservation(x) ::: x is for conservation.\nRelease(x, y) ::: x releases y.\nAnimal(y) ::: y is an animal.\nPremises:\nHatchery(nationalLobsterHatchery) ∧ Open(nationalLobsterHatchery) ::: The National Lobster Hatchery is a hatchery located in Padstow England. The National Lobster Hatchery is open to visitors.\n∀x (Hatchery(x) → (Profit(x) ∨ Conservation(x))) ::: A hatchery is either for profit, or for conservation.\n∃x (Conservation(x) ∧ Release(x, y) ∧ Animal(y)) ::: If a hatchery is for conservation, it might release animals into the wild.\n¬Profit(nationalLobsterHatchery) ::: The National Lobster Hatchery is not for profit.\nConclusion:\nOpen(x) ::: All hatcheries are open to visitors.\n------\nProblem:\nThe National Lobster Hatchery is a hatchery located in Padstow England. The National Lobster Hatchery is open to visitors. A hatchery is either for profit, or for conservation. If a hatchery is for conservation, it might release animals into the wild. The National Lobster Hatchery is not for profit.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The National Lobster H"
    ]
  },
  {
    "id": "FOLIO_train_745",
    "context": "The National Lobster Hatchery is a hatchery located in Padstow England. The National Lobster Hatchery is open to visitors. A hatchery is either for profit, or for conservation. If a hatchery is for conservation, it might release animals into the wild. The National Lobster Hatchery is not for profit.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The National Lobster Hatchery releases animals into the wild.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nHatchery(x) ::: x is a hatchery.\nForProfit(x) ::: x is for profit.\nForConservation(x) ::: x is for conservation.\nRelease(x, y) ::: x releases y.\nAnimal(y) ::: y is an animal.\nWild(y) ::: y is in the wild.\nPremises:\nHatchery(nationalLobsterHatchery) ∧ OpenToVisitors(nationalLobsterHatchery) ::: The National Lobster Hatchery is a hatchery located in Padstow England. The National Lobster Hatchery is open to visitors.\n∀x (Hatchery(x) → (ForProfit(x) ∨ ForConservation(x))) ::: A hatchery is either for profit, or for conservation.\nForConservation(x) → ∃y (Release(x, y) ∧ Animal(y) ∧ Wild(y)) ::: If a hatchery is for conservation, it might release animals into the wild.\n¬ForProfit(nationalLobsterHatchery) ::: The National Lobster Hatchery is not for profit.\nConclusion:\nRelease(nationalLobsterHatchery, y) ∧ Animal(y) ∧ Wild(y) ::: The National Lobster Hatchery releases animals into the wild.\n------\nProblem:\nThe National Lobster Hatchery is a hatchery located in Padstow England. The National Lobster Hatchery is open to visitors. A hatchery is either for profit, or for conservation. If a hatchery is for conservation, it might release animals into"
    ]
  },
  {
    "id": "FOLIO_train_746",
    "context": "Rhos Aelwyd F.C. is a Welsh football club. Rhos Aelwyd F.C. is the only club based in Ponciau. The Premier Division was won in 2005–06 by a team from Ponciau. The winner of the Premier Division in 2009–10 was promoted back to the Cymru Alliance. The Premier Division in 2009–10 was won by the same team that won in 2005-06.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Rhos Aelwyd F.C. won the 2005-06 Premier Division.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nClub(x) ::: x is a club.\nBased(x, y) ::: x is based in y.\nWon(x, y) ::: x won y.\nPromoted(x, y) ::: x was promoted to y.\nPremises:\nClub(rhosAelwydFC) ∧ Based(rhosAelwydFC, ponciau) ::: Rhos Aelwyd F.C. is a Welsh football club. Rhos Aelwyd F.C. is the only club based in Ponciau.\nWon(teamFromPonciau, premierDivision) ∧ Year(2005, 2006) ::: The Premier Division was won in 2005–06 by a team from Ponciau.\nWon(team, premierDivision) ∧ Year(2009, 2010) ∧ Promoted(team, cymruAlliance) ::: The winner of the Premier Division in 2009–10 was promoted back to the Cymru Alliance.\nWon(team, premierDivision) ∧ Year(2009, 2010) ::: The Premier Division in 2009–10 was won by the same team that won in 2005-06.\nConclusion:\nWon(rhosAelwydFC, premierDivision) ∧ Year(2005, 2006) ::: Rhos Aelwyd F.C. won the 2005-06 Premier Division.\n------\nProblem:\nThe 2009–10 season"
    ]
  },
  {
    "id": "FOLIO_train_747",
    "context": "Rhos Aelwyd F.C. is a Welsh football club. Rhos Aelwyd F.C. is the only club based in Ponciau. The Premier Division was won in 2005–06 by a team from Ponciau. The winner of the Premier Division in 2009–10 was promoted back to the Cymru Alliance. The Premier Division in 2009–10 was won by the same team that won in 2005-06.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Rhos Aelwyd F.C. was promoted to the Cymru Alliance.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nClub(x) ::: x is a club.\nBased(x, y) ::: x is based in y.\nWinner(x, y) ::: x is the winner of y.\nPromoted(x, y) ::: x is promoted to y.\nPremises:\nClub(rhosAelwydFC) ∧ Based(rhosAelwydFC, ponciau) ::: Rhos Aelwyd F.C. is a Welsh football club. Rhos Aelwyd F.C. is the only club based in Ponciau.\nWinner(teamFromPonciau, premierDivision) ∧ Year(2005, 2006) ::: The Premier Division was won in 2005–06 by a team from Ponciau.\nPromoted(winnerOfPremierDivision, cymruAlliance) ∧ Year(2009, 2010) ::: The winner of the Premier Division in 2009–10 was promoted back to the Cymru Alliance.\nWinner(sameTeam, premierDivision) ∧ Year(2009, 2010) ::: The Premier Division in 2009–10 was won by the same team that won in 2005-06.\nConclusion:\nPromoted(rhosAelwydFC, cymruAlliance) ::: Rhos Aelwyd F.C. was promoted to the Cymru Alliance.\n------\nProblem:\nThe 2009–10 season was the 114th season of competitive football in England. The Premier"
    ]
  },
  {
    "id": "FOLIO_train_748",
    "context": "All OS are software. All Mac are OS. An OS is either Mac or Windows. All Windows are convenient. All software has code. If something is convenient, then it is popular. Burger is a piece of code and a Mac. PyTorch is either Windows and software, or neither Windows nor software.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Burger is popular.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nOS(x) ::: x is an OS.\nMac(x) ::: x is a Mac.\nWindows(x) ::: x is Windows.\nConvenient(x) ::: x is convenient.\nSoftware(x) ::: x is software.\nCode(x) ::: x has code.\nPiece(x, y) ::: x is a piece of y.\nPopular(x) ::: x is popular.\nPremises:\n∀x (OS(x) → Software(x)) ::: All OS are software.\n∀x (Mac(x) → OS(x)) ::: All Mac are OS.\n∀x (OS(x) ⊕ Windows(x)) ::: An OS is either Mac or Windows.\n∀x (Windows(x) → Convenient(x)) ::: All Windows are convenient.\n∀x (Software(x) → Code(x)) ::: All software has code.\n∀x (Convenient(x) → Popular(x)) ::: If something is convenient, then it is popular.\nPiece(burger, code) ∧ Mac(burger) ::: Burger is a piece of code and a Mac.\n¬(Windows(pytorch) ∨ Software(pytorch)) ∨ (Windows(pytorch) ∧ Software(pytorch)) ::: PyTorch is either Windows and software, or neither Windows nor software.\nConclusion:\nPopular(burger) ::: Burger is popular.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted"
    ]
  },
  {
    "id": "FOLIO_train_749",
    "context": "All OS are software. All Mac are OS. An OS is either Mac or Windows. All Windows are convenient. All software has code. If something is convenient, then it is popular. Burger is a piece of code and a Mac. PyTorch is either Windows and software, or neither Windows nor software.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Burger is not popular.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nOS(x) ::: x is an OS.\nMac(x) ::: x is a Mac.\nWindows(x) ::: x is Windows.\nConvenient(x) ::: x is convenient.\nSoftware(x) ::: x is software.\nCode(x) ::: x has code.\nPiece(x, y) ::: x is a piece of y.\nPopular(x) ::: x is popular.\nPremises:\n∀x (OS(x) → Software(x)) ::: All OS are software.\n∀x (Mac(x) → OS(x)) ::: All Mac are OS.\n∀x (OS(x) ⊕ Windows(x)) ::: An OS is either Mac or Windows.\n∀x (Windows(x) → Convenient(x)) ::: All Windows are convenient.\n∀x (Software(x) → Code(x)) ::: All software has code.\n∀x (Convenient(x) → Popular(x)) ::: If something is convenient, then it is popular.\nPiece(burger, code) ∧ Mac(burger) ::: Burger is a piece of code and a Mac.\n¬(Windows(pytorch) ∨ Software(pytorch)) ∨ (Windows(pytorch) ∧ Software(pytorch)) ::: PyTorch is either Windows and software, or neither Windows nor software.\nConclusion:\n¬Popular(burger) ::: Burger is not popular.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being"
    ]
  },
  {
    "id": "FOLIO_train_750",
    "context": "All OS are software. All Mac are OS. An OS is either Mac or Windows. All Windows are convenient. All software has code. If something is convenient, then it is popular. Burger is a piece of code and a Mac. PyTorch is either Windows and software, or neither Windows nor software.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? PyTorch is popular and has code.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nOS(x) ::: x is an OS.\nMac(x) ::: x is a Mac.\nWindows(x) ::: x is Windows.\nConvenient(x) ::: x is convenient.\nSoftware(x) ::: x is software.\nCode(x) ::: x has code.\nPieceOfCode(x) ::: x is a piece of code.\nPopular(x) ::: x is popular.\nPremises:\n∀x (OS(x) → Software(x)) ::: All OS are software.\n∀x (Mac(x) → OS(x)) ::: All Mac are OS.\n∀x (OS(x) ⊕ Windows(x)) ::: An OS is either Mac or Windows.\n∀x (Windows(x) → Convenient(x)) ::: All Windows are convenient.\n∀x (Software(x) → Code(x)) ::: All software has code.\nConvenient(x) → Popular(x) ::: If something is convenient, then it is popular.\nPieceOfCode(burger) ∧ Mac(burger) ::: Burger is a piece of code and a Mac.\n¬(Windows(pytorch) ∨ Software(pytorch)) → (Windows(pytorch) ∧ Software(pytorch)) ∨ ¬(Windows(pytorch) ∨ Software(pytorch)) ::: PyTorch is either Windows and software, or neither Windows nor software.\nConclusion:\nPopular(pytorch) ∧ Code(pytorch) ::: PyTorch is popular and has code.\n------"
    ]
  },
  {
    "id": "FOLIO_train_751",
    "context": "All OS are software. All Mac are OS. An OS is either Mac or Windows. All Windows are convenient. All software has code. If something is convenient, then it is popular. Burger is a piece of code and a Mac. PyTorch is either Windows and software, or neither Windows nor software.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? PyTorch is not popular and has code.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nOS(x) ::: x is an OS.\nMac(x) ::: x is a Mac.\nWindows(x) ::: x is Windows.\nConvenient(x) ::: x is convenient.\nSoftware(x) ::: x is software.\nCode(x) ::: x has code.\nPopular(x) ::: x is popular.\nPiece(x, y) ::: x is a piece of y.\nPremises:\n∀x (OS(x) → Software(x)) ::: All OS are software.\n∀x (Mac(x) → OS(x)) ::: All Mac are OS.\n∀x (OS(x) ⊕ Windows(x)) ::: An OS is either Mac or Windows.\n∀x (Windows(x) → Convenient(x)) ::: All Windows are convenient.\n∀x (Software(x) → Code(x)) ::: All software has code.\n∀x (Convenient(x) → Popular(x)) ::: If something is convenient, then it is popular.\nPiece(burger, code) ∧ Mac(burger) ::: Burger is a piece of code and a Mac.\n¬(Windows(pytorch) ∧ Software(pytorch)) → (Windows(pytorch) ∨ Software(pytorch)) ::: PyTorch is either Windows and software, or neither Windows nor software.\nConclusion:\n¬(Popular(pytorch) ∧ Code(pytorch)) ::: PyTorch is not popular and has code.\n------\nProblem:\nAll people who regularly drink coffee are dependent on"
    ]
  },
  {
    "id": "FOLIO_train_752",
    "context": "Roads are made of either concrete or asphalt. Roads made of concrete last longer than roads made with asphalt. Roads made of asphalt are smoother than roads made of concrete. Everyone prefers the smoother of two roads. Road one is made of concrete and Road two is made of asphalt.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Road one will last longer than Road two",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nConcrete(x) ::: x is made of concrete.\nAsphalt(x) ::: x is made of asphalt.\nSmooth(x) ::: x is smoother.\nLong(x) ::: x is longer.\nPremises:\n∀x (Concrete(x) ∨ Asphalt(x)) ::: Roads are made of either concrete or asphalt.\n∀x (Concrete(x) → ¬Asphalt(x)) ::: Roads made of concrete last longer than roads made with asphalt.\n∀x (Asphalt(x) → ¬Concrete(x)) ::: Roads made of asphalt are smoother than roads made of concrete.\n∀x (Smooth(x) → ¬Long(x)) ::: Everyone prefers the smoother of two roads.\nConcrete(road1) ∧ Asphalt(road2) ::: Road one is made of concrete and Road two is made of asphalt.\nConclusion:\n¬Long(road1) ::: Road one will last longer than Road two\n------\nProblem:\nThe only people who are allowed to vote are those who are 18 years old or older. The only people who are allowed to vote are those who are citizens of the United States. The only people who are allowed to vote are those who are registered to vote.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The only people who are allowed to vote are those who are 18 years old or older, citizens of the United States, and registered to vote.\nBased"
    ]
  },
  {
    "id": "FOLIO_train_753",
    "context": "Roads are made of either concrete or asphalt. Roads made of concrete last longer than roads made with asphalt. Roads made of asphalt are smoother than roads made of concrete. Everyone prefers the smoother of two roads. Road one is made of concrete and Road two is made of asphalt.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Road two is not smoother than Road one.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nConcrete(x) ::: x is made of concrete.\nAsphalt(x) ::: x is made of asphalt.\nSmoother(x, y) ::: x is smoother than y.\nPremises:\n∀x ∀y (Concrete(x) ∧ Asphalt(y) → ¬Smoother(x, y)) ::: Roads made of concrete last longer than roads made with asphalt.\n∀x ∀y (Asphalt(x) ∧ Concrete(y) → Smoother(x, y)) ::: Roads made of asphalt are smoother than roads made of concrete.\n∀x ∀y (Smoother(x, y) → Prefer(x, y)) ::: Everyone prefers the smoother of two roads.\nConcrete(road1) ∧ Asphalt(road2) ::: Road one is made of concrete and Road two is made of asphalt.\nConclusion:\n¬Smoother(road2, road1) ::: Road two is not smoother than Road one.\n------\nProblem:\nThe only people who are allowed to vote are those who are 18 years old or older. The only people who are allowed to vote are those who are citizens of the United States. The only people who are allowed to vote are those who are registered to vote.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The only people who are allowed to vote are those who are 18 years old or older, citizens of the United States, and registered to vote.\n###"
    ]
  },
  {
    "id": "FOLIO_train_754",
    "context": "Roads are made of either concrete or asphalt. Roads made of concrete last longer than roads made with asphalt. Roads made of asphalt are smoother than roads made of concrete. Everyone prefers the smoother of two roads. Road one is made of concrete and Road two is made of asphalt.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? John prefers Road two.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nConcrete(x) ::: x is made of concrete.\nAsphalt(x) ::: x is made of asphalt.\nSmoother(x, y) ::: x is smoother than y.\nLonger(x, y) ::: x lasts longer than y.\nPremises:\n∀x ∀y (Concrete(x) ∧ Asphalt(y) → (Smoother(y, x) ∧ Longer(x, y))) ::: Roads are made of either concrete or asphalt. Roads made of concrete last longer than roads made with asphalt. Roads made of asphalt are smoother than roads made of concrete.\n∀x (Smoother(x, y) → Prefer(everyone, x, y)) ::: Everyone prefers the smoother of two roads.\nConcrete(road1) ∧ Asphalt(road2) ::: Road one is made of concrete and Road two is made of asphalt.\nConclusion:\nPrefer(john, road2, road1) ::: John prefers Road two.\n------\nProblem:\nThe only people who are allowed to vote are those who are 18 years old or older. The only people who are allowed to vote are those who are citizens of the United States. The only people who are allowed to vote are those who are registered to vote.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? If someone is 18 years old or older, then that person is allowed to vote.\nBased on the above information, is the following statement true"
    ]
  },
  {
    "id": "FOLIO_train_755",
    "context": "Camp Davern is a traditional summer camp for boys and girls. Camp Davern was established in the year 1946. Camp Davern was operated by the YMCA until the year 2015. Camp Davern is one of Ontario's oldest summer camps.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? One of Ontario's oldest summer camps is a traditional summer camp for boys and girls.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCampDavern(x) ::: x is Camp Davern.\nYMCA(x) ::: x is the YMCA.\nOperate(x, y) ::: x operates y.\nEstablish(x, y) ::: x is established in year y.\nOldest(x) ::: x is one of Ontario's oldest summer camps.\nTraditional(x) ::: x is a traditional summer camp for boys and girls.\nPremises:\nCampDavern(campDavern) ∧ Establish(campDavern, year1946) ∧ Operate(ymca, campDavern) ∧ Operate(ymca, campDavern) ∧ Establish(campDavern, year2015) ::: Camp Davern is a traditional summer camp for boys and girls. Camp Davern was established in the year 1946. Camp Davern was operated by the YMCA until the year 2015. Camp Davern is one of Ontario's oldest summer camps.\nConclusion:\nOldest(campDavern) ∧ Traditional(campDavern) ::: One of Ontario's oldest summer camps is a traditional summer camp for boys and girls.\n------\nProblem:\nThe first season of the American television series The Walking Dead premiered on October 31, 2010, and concluded on December 5, 2010, consisting of 6 episodes. The series is based on the series of comic books of the same name by Robert Kirkman, Tony Moore, and Charlie Adlard; it was developed for television by Frank"
    ]
  },
  {
    "id": "FOLIO_train_756",
    "context": "Camp Davern is a traditional summer camp for boys and girls. Camp Davern was established in the year 1946. Camp Davern was operated by the YMCA until the year 2015. Camp Davern is one of Ontario's oldest summer camps.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A traditional summer camp for boys and girls was operated by the YMCA until the year 2015.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCampDavern(x) ::: x is Camp Davern.\nYMCA(x) ::: x is the YMCA.\nSummerCamp(x) ::: x is a summer camp.\nTraditional(x) ::: x is a traditional summer camp.\nBoy(x) ::: x is a boy.\nGirl(x) ::: x is a girl.\nOldest(x) ::: x is one of Ontario's oldest summer camps.\nEstablish(x, y) ::: x was established in year y.\nOperate(x, y) ::: x was operated by y until year y.\nPremises:\nCampDavern(campDavern) ∧ Establish(campDavern, year1946) ∧ Operate(campDavern, ymca) ∧ Operate(campDavern, ymca) ∧ Operate(campDavern, ymca) ∧ Operate(campDavern, ymca) ∧ Operate(campDavern, ymca) ∧ Operate(campDavern, ymca) ∧ Operate(campDavern, ymca) ∧ Operate(campDavern, ymca) ∧ Operate(campDavern, ymca) ∧ Operate(campDavern, ymca) ∧ Operate(campDavern, ymca) ∧ Operate(campDavern, ymca) ∧ Operate(campDavern, ymca) ∧ Operate(campDavern, ymca) ∧ Operate(campDa"
    ]
  },
  {
    "id": "FOLIO_train_757",
    "context": "Camp Davern is a traditional summer camp for boys and girls. Camp Davern was established in the year 1946. Camp Davern was operated by the YMCA until the year 2015. Camp Davern is one of Ontario's oldest summer camps.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Camp Davern was established in 1989.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCampDavern(x) ::: x is Camp Davern.\nEstablish(x, y) ::: x was established in year y.\nOperate(x, y) ::: x was operated by y.\nOldest(x) ::: x is one of Ontario's oldest summer camps.\nPremises:\nCampDavern(campDavern) ∧ Establish(campDavern, year1946) ∧ Operate(campDavern, ymca) ∧ Operate(campDavern, ymca) ∧ Operate(campDavern, ymca) ∧ Operate(campDavern, ymca) ∧ Operate(campDavern, ymca) ∧ Operate(campDavern, ymca) ∧ Operate(campDavern, ymca) ∧ Operate(campDavern, ymca) ∧ Operate(campDavern, ymca) ∧ Operate(campDavern, ymca) ∧ Operate(campDavern, ymca) ∧ Operate(campDavern, ymca) ∧ Operate(campDavern, ymca) ∧ Operate(campDavern, ymca) ∧ Operate(campDavern, ymca) ∧ Operate(campDavern, ymca) ∧ Operate(campDavern, ymca) ∧ Operate(campDavern, ymca) ∧ Operate(campDavern, ymca) ∧ Operate(campDavern, ymca) ∧ Operate(camp"
    ]
  },
  {
    "id": "FOLIO_train_758",
    "context": "If people publish journals, then they do not work in the entertainment industry. All people who are award-winning novelists publish journals. People either work in the entertainment industry or are highly acclaimed in their profession. If people are highly acclaimed in their profession, then they often hold tenured and high-ranking positions at their workplace. If people are highly acclaimed in their profession, then they often receive glowing feedback and recommendations from their colleagues. If Emily is either both highly acclaimed in her profession and often holds tenured and high-ranking positions at her workplace, or she is neither highly acclaimed in her profession nor often holds tenured and high-ranking positions at her workplace, then Emily is not highly acclaimed in her profession.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Emily often holds tenured and high-ranking positions at her workplace.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPublish(x) ::: x publishes journals.\nWork(x) ::: x works in the entertainment industry.\nNovelist(x) ::: x is an award-winning novelist.\nAcclaimed(x) ::: x is highly acclaimed in his/her profession.\nTenured(x) ::: x often holds tenured and high-ranking positions at his/her workplace.\nFeedback(x) ::: x often receives glowing feedback and recommendations from his/her colleagues.\nPremises:\n¬(Publish(x) ∧ Work(x)) ::: If people publish journals, then they do not work in the entertainment industry.\n∀x (Novelist(x) → Publish(x)) ::: All people who are award-winning novelists publish journals.\n(Work(x) ∨ Acclaimed(x)) ::: People either work in the entertainment industry or are highly acclaimed in their profession.\nAcclaimed(x) → Tenured(x) ::: If people are highly acclaimed in their profession, then they often hold tenured and high-ranking positions at their workplace.\nAcclaimed(x) → Feedback(x) ::: If people are highly acclaimed in their profession, then they often receive glowing feedback and recommendations from their colleagues.\n¬(Acclaimed(emily) ∧ Tenured(emily)) → ¬Acclaimed(emily) ::: If Emily is either both highly acclaimed in her profession and often holds tenured and high-ranking positions at her workplace, or she is neither highly acclaimed in her"
    ]
  },
  {
    "id": "FOLIO_train_759",
    "context": "If people publish journals, then they do not work in the entertainment industry. All people who are award-winning novelists publish journals. People either work in the entertainment industry or are highly acclaimed in their profession. If people are highly acclaimed in their profession, then they often hold tenured and high-ranking positions at their workplace. If people are highly acclaimed in their profession, then they often receive glowing feedback and recommendations from their colleagues. If Emily is either both highly acclaimed in her profession and often holds tenured and high-ranking positions at her workplace, or she is neither highly acclaimed in her profession nor often holds tenured and high-ranking positions at her workplace, then Emily is not highly acclaimed in her profession.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Emily often receives glowing feedback and recommendations from their colleagues and is an award-winning novelist.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPublish(x) ::: x publishes journals.\nWork(x) ::: x works in the entertainment industry.\nNovelist(x) ::: x is an award-winning novelist.\nAcclaimed(x) ::: x is highly acclaimed in their profession.\nTenured(x) ::: x often holds tenured and high-ranking positions at their workplace.\nFeedback(x) ::: x often receives glowing feedback and recommendations from their colleagues.\nPremises:\n¬(Publish(x) ∧ Work(x)) ::: If people publish journals, then they do not work in the entertainment industry.\n∀x (Novelist(x) → Publish(x)) ::: All people who are award-winning novelists publish journals.\n∀x (Work(x) ∨ Acclaimed(x)) ::: People either work in the entertainment industry or are highly acclaimed in their profession.\nAcclaimed(x) → (Tenured(x) ∨ Feedback(x)) ::: If people are highly acclaimed in their profession, then they often hold tenured and high-ranking positions at their workplace.\nAcclaimed(x) → (Feedback(x) ∨ Tenured(x)) ::: If people are highly acclaimed in their profession, then they often receive glowing feedback and recommendations from their colleagues.\n¬(Acclaimed(emily) ∧ Tenured(emily)) → ¬(Acclaimed(emily) ∨ Tenured(emily)) ::: If Emily is either both highly acclaimed in her profession and often holds"
    ]
  },
  {
    "id": "FOLIO_train_760",
    "context": "If people publish journals, then they do not work in the entertainment industry. All people who are award-winning novelists publish journals. People either work in the entertainment industry or are highly acclaimed in their profession. If people are highly acclaimed in their profession, then they often hold tenured and high-ranking positions at their workplace. If people are highly acclaimed in their profession, then they often receive glowing feedback and recommendations from their colleagues. If Emily is either both highly acclaimed in her profession and often holds tenured and high-ranking positions at her workplace, or she is neither highly acclaimed in her profession nor often holds tenured and high-ranking positions at her workplace, then Emily is not highly acclaimed in her profession.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Emily either often receives glowing feedback and recommendations from her colleagues or is an award-winning novelist, then Emily does not both publish journals and is an award-winning novelist.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPublish(x) ::: x publishes journals.\nWork(x) ::: x works in the entertainment industry.\nAwardWinningNovelist(x) ::: x is an award-winning novelist.\nAcclaimed(x) ::: x is highly acclaimed in their profession.\nTenured(x) ::: x often holds tenured and high-ranking positions at their workplace.\nFeedback(x) ::: x often receives glowing feedback and recommendations from their colleagues.\nPremises:\n¬(Publish(x) ∧ Work(x)) ::: If people publish journals, then they do not work in the entertainment industry.\n∀x (AwardWinningNovelist(x) → Publish(x)) ::: All people who are award-winning novelists publish journals.\n(Work(x) ∨ Acclaimed(x)) ::: People either work in the entertainment industry or are highly acclaimed in their profession.\nAcclaimed(x) → (Tenured(x) ∨ Feedback(x)) ::: If people are highly acclaimed in their profession, then they often hold tenured and high-ranking positions at their workplace.\nAcclaimed(x) → (Feedback(x) ∨ Tenured(x)) ::: If people are highly acclaimed in their profession, then they often receive glowing feedback and recommendations from their colleagues.\n¬(Acclaimed(emily) ∧ Tenured(emily)) → ¬(Acclaimed(emily) ∨ Tenured(emily)) ::: If Emily is either both highly acclaimed in her profession and often holds tenured and high-ranking positions at her workplace, or she is neither highly acclaimed in her profession nor often holds tenured and high-ranking positions at her workplace, then Emily is not highly acclaimed in her profession.\nConclusion:\n¬(Publish(emily) ∧ AwardWinningNovelist(emily)) ::: If Emily either often receives glowing feedback and recommendations from her colleagues or is an award-winning novelist, then Emily does not both publish journals and is an award-winning novelist.\n------"
    ]
  },
  {
    "id": "FOLIO_train_761",
    "context": "Thick as Thieves is a young adult fantasy novel, written by Megan Whalen Turner. Thick as Thieves was published by Greenwillow Books. If a book was published by a company, than the author of that book worked with the company that published the book. The fictional Mede Empire is where Thick as Thieves is set. The Mede Empire plots to swallow up some nearby countries. Attolia and Sounis are countries near the Mede Empire. Thick as Thieves was sold both as a hardcover and an e-book.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Megan Whalen Turner worked with Greenwillow Books.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAuthor(x, y) ::: x is the author of y.\nPublish(x, y) ::: x is published by y.\nWork(x, y) ::: x works with y.\nSet(x, y) ::: x is set in y.\nPlot(x, y) ::: x plots to swallow up y.\nCountry(x) ::: x is a country.\nNear(x, y) ::: x is near y.\nSell(x, y) ::: x is sold as y.\nPremises:\nBook(thickAsThieves) ∧ Author(megan, thickAsThieves) ∧ Publish(thickAsThieves, greenwillowBooks) ::: Thick as Thieves is a young adult fantasy novel, written by Megan Whalen Turner. Thick as Thieves was published by Greenwillow Books.\n∀x ∀y (Publish(x, y) → Work(Author(x, y), y)) ::: If a book was published by a company, than the author of that book worked with the company that published the book.\nSet(thickAsThieves, medeEmpire) ::: The fictional Mede Empire is where Thick as Thieves is set.\nPlot(medeEmpire, attolia) ∧ Plot(medeEmpire, sounis) ::: The Mede Empire plots to swallow up some nearby countries. Attolia and Sounis are countries near the Mede Empire.\nSell(thickAsThieves, hardcover) ∧ Sell(thickAsThieves, eBook) ::: Thick as Thieves was sold both as a hardcover and an e-book.\nConclusion:\nWork(megan, greenwillowBooks) ::: Megan Whalen Turner worked with Greenwillow Books.\n------\nProblem:\nThe 2017 film The Shape of Water is a fantasy drama film. The Shape of Water was directed by Guillermo del Toro. The Shape of Water was written by Guillermo del Toro and Vanessa Taylor. The Shape of Water was produced by Guillermo del Toro, J. Miles Dale, and Daniel Kraus. The Shape of"
    ]
  },
  {
    "id": "FOLIO_train_762",
    "context": "Thick as Thieves is a young adult fantasy novel, written by Megan Whalen Turner. Thick as Thieves was published by Greenwillow Books. If a book was published by a company, than the author of that book worked with the company that published the book. The fictional Mede Empire is where Thick as Thieves is set. The Mede Empire plots to swallow up some nearby countries. Attolia and Sounis are countries near the Mede Empire. Thick as Thieves was sold both as a hardcover and an e-book.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Mede Empire plans to swallow up Attolia.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAuthor(x, y) ::: x is the author of y.\nPublish(x, y) ::: x is published by y.\nSet(x, y) ::: x is set in y.\nPlot(x, y) ::: x plots to swallow up y.\nCountry(x) ::: x is a country.\nNear(x, y) ::: x is near y.\nSell(x, y) ::: x is sold as y.\nPremises:\nBook(thickAsThieves) ∧ Author(megan, thickAsThieves) ∧ Publish(thickAsThieves, greenwillowBooks) ::: Thick as Thieves is a young adult fantasy novel, written by Megan Whalen Turner. Thick as Thieves was published by Greenwillow Books.\n∀x ∀y (Publish(x, y) → Work(x, y)) ::: If a book was published by a company, than the author of that book worked with the company that published the book.\nSet(thickAsThieves, medeEmpire) ::: The fictional Mede Empire is where Thick as Thieves is set.\nPlot(medeEmpire, country) ::: The Mede Empire plots to swallow up some nearby countries.\nCountry(attolia) ∧ Country(sounis) ∧ Near(attolia, medeEmpire) ∧ Near(sounis, medeEmpire) ::: Attolia and Sounis are countries near the Mede Empire.\nSell(thickAsThieves, hardcover) ∧ Sell(thickAsThieves, eBook) ::: Thick as Thieves was sold both as a hardcover and an e-book.\nConclusion:\nPlot(medeEmpire, attolia) ::: The Mede Empire plans to swallow up Attolia.\n------\nProblem:\nThe 2017 film The Shape of Water is a fantasy drama film. The Shape of Water was directed by Guillermo del Toro. The Shape of Water was written by Guillermo del Toro and Vanessa Taylor. The Shape of Water was produced by Guillermo del Toro, J. Miles Dale, and Daniel"
    ]
  },
  {
    "id": "FOLIO_train_763",
    "context": "Thick as Thieves is a young adult fantasy novel, written by Megan Whalen Turner. Thick as Thieves was published by Greenwillow Books. If a book was published by a company, than the author of that book worked with the company that published the book. The fictional Mede Empire is where Thick as Thieves is set. The Mede Empire plots to swallow up some nearby countries. Attolia and Sounis are countries near the Mede Empire. Thick as Thieves was sold both as a hardcover and an e-book.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Thick as Thieves is not set in the mede empire.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBook(x) ::: x is a book.\nPublish(x, y) ::: x is published by y.\nAuthor(x, y) ::: x is the author of y.\nWork(x, y) ::: x works with y.\nSet(x, y) ::: x is set in y.\nPlot(x, y) ::: x plots to swallow up y.\nCountry(x) ::: x is a country.\nNear(x, y) ::: x is near y.\nSell(x, y) ::: x is sold as y.\nPremises:\nBook(thickAsThieves) ∧ Publish(thickAsThieves, greenwillowBooks) ::: Thick as Thieves is a young adult fantasy novel, written by Megan Whalen Turner. Thick as Thieves was published by Greenwillow Books.\n∀x ∀y (Publish(x, y) → Work(Author(x, y), y)) ::: If a book was published by a company, than the author of that book worked with the company that published the book.\nSet(thickAsThieves, medeEmpire) ::: The fictional Mede Empire is where Thick as Thieves is set.\nPlot(medeEmpire, attolia) ∧ Plot(medeEmpire, sounis) ::: The Mede Empire plots to swallow up some nearby countries. Attolia and Sounis are countries near the Mede Empire.\nSell(thickAsThieves, hardcover) ∧ Sell(thickAsThieves, eBook) ::: Thick as Thieves was sold both as a hardcover and an e-book.\nConclusion:\n¬Set(thickAsThieves, medeEmpire) ::: Thick as Thieves is not set in the mede empire.\n------\nProblem:\nThe 2017 film The Shape of Water is a fantasy film. The Shape of Water was directed by Guillermo del Toro. The Shape of Water was produced by Guillermo del Toro. The Shape of Water was written by Guillermo del Toro. The Shape of Water was produced by J. Miles Dale. The Shape"
    ]
  },
  {
    "id": "FOLIO_train_764",
    "context": "Thick as Thieves is a young adult fantasy novel, written by Megan Whalen Turner. Thick as Thieves was published by Greenwillow Books. If a book was published by a company, than the author of that book worked with the company that published the book. The fictional Mede Empire is where Thick as Thieves is set. The Mede Empire plots to swallow up some nearby countries. Attolia and Sounis are countries near the Mede Empire. Thick as Thieves was sold both as a hardcover and an e-book.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Megan Whalen Turner did not work with Greenwillow Books.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAuthor(x, y) ::: x is the author of y.\nPublish(x, y) ::: x is published by y.\nWork(x, y) ::: x works with y.\nSet(x, y) ::: x is set in y.\nPlot(x, y) ::: x plots to swallow up y.\nCountry(x) ::: x is a country.\nNear(x, y) ::: x is near y.\nSell(x, y) ::: x is sold as y.\nPremises:\nBook(thickAsThieves) ∧ Author(megan, thickAsThieves) ∧ Publish(thickAsThieves, greenwillowBooks) ∧ Sell(thickAsThieves, hardcover) ∧ Sell(thickAsThieves, eBook) ::: Thick as Thieves is a young adult fantasy novel, written by Megan Whalen Turner. Thick as Thieves was published by Greenwillow Books. Thick as Thieves was sold both as a hardcover and an e-book.\nSet(thickAsThieves, medeEmpire) ∧ Plot(medeEmpire, attolia) ∧ Plot(medeEmpire, sounis) ::: The fictional Mede Empire is where Thick as Thieves is set. The Mede Empire plots to swallow up some nearby countries. Attolia and Sounis are countries near the Mede Empire.\n∀x ∀y (Publish(x, y) → Work(author(x), y)) ::: If a book was published by a company, than the author of that book worked with the company that published the book.\nConclusion:\n¬Work(megan, greenwillowBooks) ::: Megan Whalen Turner did not work with Greenwillow Books.\n------\nProblem:\nThe 2017 film The Shape of Water is a fantasy film. The Shape of Water was directed by Guillermo del Toro. The Shape of Water was produced by Guillermo del Toro. The Shape of Water was written by Guillermo del Toro. The Shape of Water was produced by J. Miles Dale. The Shape of Water was produced"
    ]
  },
  {
    "id": "FOLIO_train_765",
    "context": "WeTab is a MeeGo-based tablet computer. There is a WeTab product. WeTab was announced by Neofonie. Neofonie is a German producer. Germans speak English or German.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There is a tablet computer that was announced by a German.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nWeTab(x) ::: x is a WeTab product.\nTabletComputer(x) ::: x is a tablet computer.\nAnnounce(x, y) ::: x was announced by y.\nProducer(x) ::: x is a producer.\nGerman(x) ::: x is a German.\nSpeak(x, y) ::: x speaks y.\nPremises:\nWeTab(wetab) ∧ TabletComputer(wetab) ∧ Announce(wetab, neofonie) ::: WeTab is a MeeGo-based tablet computer. There is a WeTab product. WeTab was announced by Neofonie.\nProducer(neofonie) ::: Neofonie is a German producer.\nGerman(germans) ::: Germans speak English or German.\nConclusion:\n∃x (TabletComputer(x) ∧ Announce(x, german)) ::: There is a tablet computer that was announced by a German.\n------\nProblem:\nThe 2010 FIFA World Cup was the 19th FIFA World Cup. The 2010 FIFA World Cup was held in South Africa. The 2010 FIFA World Cup was the first World Cup to be hosted by an African nation. The 2010 FIFA World Cup was the first World Cup to be hosted by a nation which had previously never qualified for a finals tournament. The 2010 FIFA World Cup was the first World Cup to be hosted on a continent which had never hosted a World Cup before. The 2010 FIFA World Cup was the first World Cup to be hosted on a continent which had never hosted a World Cup before. The 2010 FIFA World Cup was the first World Cup to be hosted on a continent which had never hosted a World Cup before. The 2010 FIFA World Cup was the first World Cup to be hosted on a continent which had never hosted a World Cup before. The 2010 FIFA World Cup was the first World Cup to be hosted on a continent which had never hosted a World Cup before. The 2010 FIFA World Cup was the first World Cup to be hosted on a continent which had never hosted a World Cup before"
    ]
  },
  {
    "id": "FOLIO_train_766",
    "context": "WeTab is a MeeGo-based tablet computer. There is a WeTab product. WeTab was announced by Neofonie. Neofonie is a German producer. Germans speak English or German.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Neofonie doesn't speak English or German.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nWeTab(x) ::: x is a WeTab product.\nAnnounce(x, y) ::: x announces y.\nProducer(x) ::: x is a producer.\nGerman(x) ::: x is a German.\nSpeak(x, y) ::: x speaks y.\nPremises:\nWeTab(wetab) ::: WeTab is a MeeGo-based tablet computer.\nWeTab(wetab) ∧ Announce(neofonie, wetab) ::: There is a WeTab product.\nWeTab(wetab) ∧ Announce(neofonie, wetab) ::: WeTab was announced by Neofonie.\nProducer(neofonie) ::: Neofonie is a German producer.\nGerman(neofonie) ::: Germans speak English or German.\nConclusion:\n¬Speak(neofonie, english) ∧ ¬Speak(neofonie, german) ::: Neofonie doesn't speak English or German.\n------\nProblem:\nThe 2010 FIFA World Cup was the 19th FIFA World Cup. The 2010 FIFA World Cup was the first World Cup to be hosted by an African nation. The 2010 FIFA World Cup was the first World Cup to be hosted by a nation that had never qualified for a previous World Cup tournament. The 2010 FIFA World Cup was the first World Cup to be hosted on a continent other than Europe or the Americas. The 2010 FIFA World Cup was the first World Cup to be hosted on a continent other than Europe or the Americas. The 2010 FIFA World Cup was the first World Cup to be hosted on a continent other than Europe or the Americas. The 2010 FIFA World Cup was the first World Cup to be hosted on a continent other than Europe or the Americas. The 2010 FIFA World Cup was the first World Cup to be hosted on a continent other than Europe or the Americas. The 2010 FIFA World Cup was the first World Cup to be hosted on a continent other than Europe or the Americas. The 2010 FIFA World Cup was the first World Cup to"
    ]
  },
  {
    "id": "FOLIO_train_767",
    "context": "Some employees working in business analysis are good at math. All employees working in business analysis are working in this company. No employees working in this company are from China. All employees working in software engineering are from China. James is working in software engineering.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James is good at math.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEmployee(x) ::: x is an employee.\nWorking(x, y) ::: x is working in y.\nGoodAt(x, y) ::: x is good at y.\nBusinessAnalysis(x) ::: x is business analysis.\nCompany(x) ::: x is this company.\nChina(x) ::: x is from China.\nSoftwareEngineering(x) ::: x is software engineering.\nPremises:\n∃x (Employee(x) ∧ Working(x, businessAnalysis) ∧ GoodAt(x, math)) ::: Some employees working in business analysis are good at math.\n∀x (Working(x, businessAnalysis) → Working(x, company)) ::: All employees working in business analysis are working in this company.\n∀x (Working(x, company) → ¬China(x)) ::: No employees working in this company are from China.\n∀x (Working(x, softwareEngineering) → China(x)) ::: All employees working in software engineering are from China.\nWorking(james, softwareEngineering) ::: James is working in software engineering.\nConclusion:\nGoodAt(james, math) ::: James is good at math.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caff"
    ]
  },
  {
    "id": "FOLIO_train_768",
    "context": "Some employees working in business analysis are good at math. All employees working in business analysis are working in this company. No employees working in this company are from China. All employees working in software engineering are from China. James is working in software engineering.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James is not good at math and he is working in business analysis.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEmployee(x) ::: x is an employee.\nWorking(x, y) ::: x is working in y.\nGoodAtMath(x) ::: x is good at math.\nBusinessAnalysis(x) ::: x is business analysis.\nCompany(x) ::: x is this company.\nChina(x) ::: x is from China.\nSoftwareEngineering(x) ::: x is software engineering.\nPremises:\n∃x (Employee(x) ∧ Working(x, businessAnalysis) ∧ GoodAtMath(x)) ::: Some employees working in business analysis are good at math.\n∀x (Working(x, businessAnalysis) → Working(x, company)) ::: All employees working in business analysis are working in this company.\n∀x (Working(x, company) → ¬China(x)) ::: No employees working in this company are from China.\n∀x (Working(x, softwareEngineering) → China(x)) ::: All employees working in software engineering are from China.\nWorking(james, softwareEngineering) ::: James is working in software engineering.\nConclusion:\n¬(GoodAtMath(james) ∧ Working(james, businessAnalysis)) ::: James is not good at math and he is working in business analysis.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine"
    ]
  },
  {
    "id": "FOLIO_train_769",
    "context": "Some employees working in business analysis are good at math. All employees working in business analysis are working in this company. No employees working in this company are from China. All employees working in software engineering are from China. James is working in software engineering.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If James is not good at math and he is in business analysis, then he is neither working in this company nor working in software engineering.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEmployee(x) ::: x is an employee.\nBusinessAnalysis(x) ::: x is working in business analysis.\nMath(x) ::: x is good at math.\nChina(x) ::: x is from China.\nSoftwareEngineering(x) ::: x is working in software engineering.\nPremises:\n∃x (Employee(x) ∧ BusinessAnalysis(x) ∧ Math(x)) ::: Some employees working in business analysis are good at math.\n∀x (BusinessAnalysis(x) → Employee(x)) ::: All employees working in business analysis are working in this company.\n∀x (Employee(x) → ¬China(x)) ::: No employees working in this company are from China.\n∀x (SoftwareEngineering(x) → China(x)) ::: All employees working in software engineering are from China.\nSoftwareEngineering(james) ::: James is working in software engineering.\nConclusion:\n¬(Math(james) ∧ BusinessAnalysis(james)) → (¬Employee(james) ∨ ¬BusinessAnalysis(james) ∨ ¬SoftwareEngineering(james)) ::: If James is not good at math and he is in business analysis, then he is neither working in this company nor working in software engineering.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffe"
    ]
  },
  {
    "id": "FOLIO_train_770",
    "context": "The party provides five kinds of fruits: strawberry, orange, blueberry, grape, and cherry. All fruits are provided in the same weight at the beginning of the party. If the fruit had the lowest remaining weight at the end of the party, then it means it was the most popular fruit. At the end of the party, strawberries had the lowest remaining weight. At the end of the party, the amount of leftover blueberries was lower than that of cherries. Benjamin only ate oranges and grapes at the party.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Blueberries were the most popular fruit at the party.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProvide(x, y) ::: x provides y.\nRemain(x, y) ::: x remains y.\nPopular(x, y) ::: x is the most popular fruit at y.\nEat(x, y) ::: x eats y.\nPremises:\nProvide(party, strawberry) ∧ Provide(party, orange) ∧ Provide(party, blueberry) ∧ Provide(party, grape) ∧ Provide(party, cherry) ::: The party provides five kinds of fruits: strawberry, orange, blueberry, grape, and cherry.\n∀x (Provide(party, x) → Remain(party, x)) ::: All fruits are provided in the same weight at the beginning of the party.\nPopular(x, party) → Remain(party, x) ::: If the fruit had the lowest remaining weight at the end of the party, then it means it was the most popular fruit.\nRemain(party, strawberry) ::: At the end of the party, strawberries had the lowest remaining weight.\nRemain(party, blueberry) < Remain(party, cherry) ::: At the end of the party, the amount of leftover blueberries was lower than that of cherries.\nEat(benjamin, orange) ∧ Eat(benjamin, grape) ::: Benjamin only ate oranges and grapes at the party.\nConclusion:\nPopular(blueberry, party) ::: Blueberries were the most popular fruit at the party.\n------"
    ]
  },
  {
    "id": "FOLIO_train_771",
    "context": "The party provides five kinds of fruits: strawberry, orange, blueberry, grape, and cherry. All fruits are provided in the same weight at the beginning of the party. If the fruit had the lowest remaining weight at the end of the party, then it means it was the most popular fruit. At the end of the party, strawberries had the lowest remaining weight. At the end of the party, the amount of leftover blueberries was lower than that of cherries. Benjamin only ate oranges and grapes at the party.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Cherries were the most popular fruit at the party.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProvide(x, y) ::: x provides y.\nRemain(x, y) ::: x remains y.\nPopular(x, y) ::: x is the most popular fruit.\nEat(x, y) ::: x eats y.\nPremises:\nProvide(party, strawberry) ∧ Provide(party, orange) ∧ Provide(party, blueberry) ∧ Provide(party, grape) ∧ Provide(party, cherry) ::: The party provides five kinds of fruits: strawberry, orange, blueberry, grape, and cherry.\n∀x (Provide(party, x) → Remain(party, x)) ::: All fruits are provided in the same weight at the beginning of the party.\nPopular(x, y) → Remain(party, x) ∧ ¬Remain(party, y) ::: If the fruit had the lowest remaining weight at the end of the party, then it means it was the most popular fruit.\nRemain(party, strawberry) ::: At the end of the party, strawberries had the lowest remaining weight.\nRemain(party, blueberry) < Remain(party, cherry) ::: At the end of the party, the amount of leftover blueberries was lower than that of cherries.\nEat(benjamin, orange) ∧ Eat(benjamin, grape) ::: Benjamin only ate oranges and grapes at the party.\nConclusion:\nPopular(cherry, strawberry) ::: Cherries were"
    ]
  },
  {
    "id": "FOLIO_train_772",
    "context": "The party provides five kinds of fruits: strawberry, orange, blueberry, grape, and cherry. All fruits are provided in the same weight at the beginning of the party. If the fruit had the lowest remaining weight at the end of the party, then it means it was the most popular fruit. At the end of the party, strawberries had the lowest remaining weight. At the end of the party, the amount of leftover blueberries was lower than that of cherries. Benjamin only ate oranges and grapes at the party.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Benjamin ate blueberries at the party.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProvide(x, y) ::: x provides y.\nRemain(x, y) ::: x remains y.\nPopular(x) ::: x is popular.\nLowest(x, y) ::: x is the lowest of y.\nFruit(x) ::: x is a fruit.\nWeight(x) ::: x is the weight of y.\nEat(x, y) ::: x eats y.\nPremises:\nProvide(party, strawberry) ∧ Provide(party, orange) ∧ Provide(party, blueberry) ∧ Provide(party, grape) ∧ Provide(party, cherry) ::: The party provides five kinds of fruits: strawberry, orange, blueberry, grape, and cherry.\n∀x (Fruit(x) → Weight(x)) ::: All fruits are provided in the same weight at the beginning of the party.\nPopular(x) → Lowest(Remain(x), Remain(Fruit(x))) ::: If the fruit had the lowest remaining weight at the end of the party, then it means it was the most popular fruit.\nRemain(strawberry) → Lowest(Remain(strawberry), Remain(Fruit(x))) ::: At the end of the party, strawberries had the lowest remaining weight.\nRemain(blueberry) → Lowest(Remain(blueberry), Remain(cherry)) ::: At the end of the party, the amount of leftover blueberries was lower than that of cherries.\nEat"
    ]
  },
  {
    "id": "FOLIO_train_773",
    "context": "All students who attend in person have registered for the conference. Students either attend the conference in person or remotely. No students from China attend the conference remotely. James attends the conference but he does not attend the conference remotely. Jack attends the conference and he is a student from China.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James attends the conference but not in person.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAttend(x) ::: x attends the conference.\nAttendInPerson(x) ::: x attends the conference in person.\nAttendRemotely(x) ::: x attends the conference remotely.\nStudent(x) ::: x is a student.\nChina(x) ::: x is a student from China.\nPremises:\n∀x (AttendInPerson(x) → Student(x)) ::: All students who attend in person have registered for the conference.\n∀x (AttendInPerson(x) ⊕ AttendRemotely(x)) ::: Students either attend the conference in person or remotely.\n∀x (China(x) → ¬AttendRemotely(x)) ::: No students from China attend the conference remotely.\nAttend(james) ∧ ¬AttendRemotely(james) ::: James attends the conference but he does not attend the conference remotely.\nAttend(jack) ∧ Student(jack) ∧ China(jack) ::: Jack attends the conference and he is a student from China.\nConclusion:\n¬AttendInPerson(james) ::: James attends the conference but not in person.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a"
    ]
  },
  {
    "id": "FOLIO_train_774",
    "context": "All students who attend in person have registered for the conference. Students either attend the conference in person or remotely. No students from China attend the conference remotely. James attends the conference but he does not attend the conference remotely. Jack attends the conference and he is a student from China.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jack attends the conference in person.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAttend(x) ::: x attends the conference.\nAttendInPerson(x) ::: x attends the conference in person.\nAttendRemotely(x) ::: x attends the conference remotely.\nRegister(x) ::: x registers for the conference.\nStudent(x) ::: x is a student.\nChina(x) ::: x is a student from China.\nPremises:\n∀x (Student(x) → AttendInPerson(x) ∨ AttendRemotely(x)) ::: Students either attend the conference in person or remotely.\n∀x (AttendRemotely(x) → ¬China(x)) ::: No students from China attend the conference remotely.\n¬(AttendRemotely(james) ∧ Attend(james)) ::: James attends the conference but he does not attend the conference remotely.\nAttend(jack) ∧ Student(jack) ∧ China(jack) ::: Jack attends the conference and he is a student from China.\nConclusion:\nAttendInPerson(jack) ::: Jack attends the conference in person.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.\nQuestion:"
    ]
  },
  {
    "id": "FOLIO_train_775",
    "context": "All students who attend in person have registered for the conference. Students either attend the conference in person or remotely. No students from China attend the conference remotely. James attends the conference but he does not attend the conference remotely. Jack attends the conference and he is a student from China.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jack has registered for the conference.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAttend(x) ::: x attends the conference.\nAttendInPerson(x) ::: x attends the conference in person.\nAttendRemotely(x) ::: x attends the conference remotely.\nRegister(x) ::: x has registered for the conference.\nStudent(x) ::: x is a student.\nChina(x) ::: x is a student from China.\nPremises:\n∀x (AttendInPerson(x) → Register(x)) ::: All students who attend in person have registered for the conference.\n∀x (AttendInPerson(x) ⊕ AttendRemotely(x)) ::: Students either attend the conference in person or remotely.\n∀x (China(x) → ¬AttendRemotely(x)) ::: No students from China attend the conference remotely.\n¬AttendRemotely(james) ∧ Attend(james) ::: James attends the conference but he does not attend the conference remotely.\nAttend(jack) ∧ China(jack) ::: Jack attends the conference and he is a student from China.\nConclusion:\nRegister(jack) ::: Jack has registered for the conference.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student"
    ]
  },
  {
    "id": "FOLIO_train_776",
    "context": "David Ha'ivri is a political strategist. If you are born in Israel to at least one Israeli parent, then you receive citizenship at birth. David Ha'ivri emigrated to the United States from Israel, where he was born to Israeli parents. Several Zionist leaders have been elected to the Shomron Regional Municipal council. David Ha'ivri is a Zionist leader.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? David Ha'ivri is an Israeli citizen.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nIsraeli(x) ::: x is an Israeli citizen.\nBorn(x, y) ::: x was born in y.\nParent(x, y) ::: x is the parent of y.\nEmigrate(x, y) ::: x emigrated to y.\nZionist(x) ::: x is a Zionist leader.\nElect(x, y) ::: x was elected to y.\nPremises:\nIsraeli(x) → Born(x, israel) ∧ Parent(x, y) ∧ Israeli(y) ::: If you are born in Israel to at least one Israeli parent, then you receive citizenship at birth.\nBorn(david, israel) ∧ Emigrate(david, usa) ∧ Parent(david, y) ∧ Israeli(y) ::: David Ha'ivri emigrated to the United States from Israel, where he was born to Israeli parents.\nElect(x, shomronRegionalMunicipalCouncil) ∧ Zionist(x) ::: Several Zionist leaders have been elected to the Shomron Regional Municipal council.\nZionist(david) ::: David Ha'ivri is a Zionist leader.\nConclusion:\nIsraeli(david) ::: David Ha'ivri is an Israeli citizen.\n------\nProblem:\nThe United States is a country. The United States is a member of the United Nations. The United Nations is an international organization. The United Nations is a member of the United Nations.\nQuestion:\nBased"
    ]
  },
  {
    "id": "FOLIO_train_777",
    "context": "David Ha'ivri is a political strategist. If you are born in Israel to at least one Israeli parent, then you receive citizenship at birth. David Ha'ivri emigrated to the United States from Israel, where he was born to Israeli parents. Several Zionist leaders have been elected to the Shomron Regional Municipal council. David Ha'ivri is a Zionist leader.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? David Ha'ivri is a United States citizen.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nIsraeli(x) ::: x is an Israeli.\nCitizen(x, y) ::: x is a citizen of y.\nBorn(x, y) ::: x is born in y.\nParent(x, y) ::: x is the parent of y.\nEmigrate(x, y) ::: x emigrated to y.\nZionist(x) ::: x is a Zionist.\nLeader(x) ::: x is a leader.\nElect(x, y) ::: x is elected to y.\nPremises:\nPoliticalStrategist(david) ::: David Ha'ivri is a political strategist.\n∀x (Born(x, israel) ∧ Parent(x, israeli) → Citizen(x, israel)) ::: If you are born in Israel to at least one Israeli parent, then you receive citizenship at birth.\nEmigrate(david, us) ∧ Born(david, israel) ∧ Parent(david, israeli) ::: David Ha'ivri emigrated to the United States from Israel, where he was born to Israeli parents.\n∃x (Zionist(x) ∧ Leader(x) ∧ Elect(x, shomronRegionalMunicipalCouncil)) ::: Several Zionist leaders have been elected to the Shomron Regional Municipal council.\nZionist(david) ∧ Leader(david) ::: David Ha'ivri is a Zionist leader.\nConclusion:\nCitizen(d"
    ]
  },
  {
    "id": "FOLIO_train_778",
    "context": "David Ha'ivri is a political strategist. If you are born in Israel to at least one Israeli parent, then you receive citizenship at birth. David Ha'ivri emigrated to the United States from Israel, where he was born to Israeli parents. Several Zionist leaders have been elected to the Shomron Regional Municipal council. David Ha'ivri is a Zionist leader.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? David Ha'ivri has been elected to the Shomron Regional Municipal council.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nIsraeli(x) ::: x is an Israeli.\nBorn(x, y) ::: x was born in y.\nParent(x, y) ::: x is the parent of y.\nCitizen(x, y) ::: x is a citizen of y.\nEmigrate(x, y) ::: x emigrated from y.\nZionist(x) ::: x is a Zionist.\nLeader(x) ::: x is a leader.\nElect(x, y) ::: x was elected to y.\nPremises:\nIsraeli(david) ∧ Born(david, israel) ∧ Born(david, israeliParents) ∧ Emigrate(david, israel) ∧ Zionist(david) ∧ Leader(david) ::: David Ha'ivri is a political strategist. If you are born in Israel to at least one Israeli parent, then you receive citizenship at birth. David Ha'ivri emigrated to the United States from Israel, where he was born to Israeli parents. Several Zionist leaders have been elected to the Shomron Regional Municipal council. David Ha'ivri is a Zionist leader.\nConclusion:\nElect(david, shomronRegionalMunicipalCouncil) ::: David Ha'ivri has been elected to the Shomron Regional Municipal council.\n------\nProblem:\nThe United States is a country. The United States is a democracy. The United States is a republic. The United States is a federation. The United States is"
    ]
  },
  {
    "id": "FOLIO_train_779",
    "context": "Mary has the flu. Flu and influenza are the same disease. Susan doesn't have influenza.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Either Mary or Susan has influenza.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFlu(x) ::: x has the flu.\nInfluenza(x) ::: x has influenza.\nPremises:\nFlu(mary) ::: Mary has the flu.\nFlu(x) ↔ Influenza(x) ::: Flu and influenza are the same disease.\n¬Influenza(susan) ::: Susan doesn't have influenza.\nConclusion:\n¬(Flu(mary) ∨ Influenza(susan)) ::: Either Mary or Susan has influenza.\n------\nProblem:\nThe only people who are allowed to enter the building are those who have a valid pass. The only people who are allowed to enter the building are those who have a valid pass.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The only people who are allowed to enter the building are those who have a valid pass.\n###\nPredicates:\nValidPass(x) ::: x has a valid pass.\nAllowedToEnter(x) ::: x is allowed to enter the building.\nPremises:\n∀x (AllowedToEnter(x) → ValidPass(x)) ::: The only people who are allowed to enter the building are those who have a valid pass.\n∀x (AllowedToEnter(x) → ValidPass(x)) ::: The only people who are allowed to enter the building are those who have a valid pass.\nConclusion:\n∀x (AllowedToEnter(x) → ValidPass(x)) ::: The only people who are allowed to enter the building are those who have a valid"
    ]
  },
  {
    "id": "FOLIO_train_780",
    "context": "James Cocks was a British lawyer. James Cocks was a Whig politician who sat in the House of Commons. A British is a European. Any lawyer is familiar with laws. Some Whigs speak French.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? No lawyer ever sat in the House of Commons.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBritish(x) ::: x is a British.\nLawyer(x) ::: x is a lawyer.\nFamiliar(x, y) ::: x is familiar with y.\nWhig(x) ::: x is a Whig.\nPolitician(x) ::: x is a politician.\nSit(x, y) ::: x sat in y.\nSpeak(x, y) ::: x speaks y.\nPremises:\nBritish(james) ∧ Whig(james) ∧ Politician(james) ∧ Sit(james, houseOfCommons) ::: James Cocks was a British lawyer. James Cocks was a Whig politician who sat in the House of Commons.\n∀x (British(x) → European(x)) ::: A British is a European.\n∀x (Lawyer(x) → Familiar(x, law)) ::: Any lawyer is familiar with laws.\n∃x (Whig(x) ∧ Speak(x, french)) ::: Some Whigs speak French.\nConclusion:\n¬∃x (Lawyer(x) ∧ Sit(x, houseOfCommons)) ::: No lawyer ever sat in the House of Commons.\n------"
    ]
  },
  {
    "id": "FOLIO_train_781",
    "context": "James Cocks was a British lawyer. James Cocks was a Whig politician who sat in the House of Commons. A British is a European. Any lawyer is familiar with laws. Some Whigs speak French.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Some European is familiar with laws.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBritish(x) ::: x is a British.\nLawyer(x) ::: x is a lawyer.\nWhig(x) ::: x is a Whig.\nEuropean(x) ::: x is a European.\nPolitician(x) ::: x is a politician.\nSpeak(x, y) ::: x speaks y.\nFrench(x) ::: x is French.\nPremises:\nBritish(james) ∧ Whig(james) ∧ Politician(james) ::: James Cocks was a British lawyer. James Cocks was a Whig politician who sat in the House of Commons.\n∀x (Lawyer(x) → Familiar(x, law)) ::: Any lawyer is familiar with laws.\n∃x (Whig(x) ∧ Speak(x, french)) ::: Some Whigs speak French.\nConclusion:\n∃x (European(x) ∧ Familiar(x, law)) ::: Some European is familiar with laws.\n------\nProblem:\nThe first person to be called a mathematician was the Greek philosopher Pythagoras. Pythagoras was a mathematician. Any mathematician is a person. Some Greeks"
    ]
  },
  {
    "id": "FOLIO_train_782",
    "context": "James Cocks was a British lawyer. James Cocks was a Whig politician who sat in the House of Commons. A British is a European. Any lawyer is familiar with laws. Some Whigs speak French.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James Cocks speaks French.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBritish(x) ::: x is a British.\nLawyer(x) ::: x is a lawyer.\nWhig(x) ::: x is a Whig.\nEuropean(x) ::: x is a European.\nSpeak(x, y) ::: x speaks y.\nPremises:\nBritish(james) ∧ Whig(james) ∧ Lawyer(james) ::: James Cocks was a British lawyer. James Cocks was a Whig politician who sat in the House of Commons.\n∀x (British(x) → European(x)) ::: A British is a European.\n∀x (Lawyer(x) → Familiar(x, law)) ::: Any lawyer is familiar with laws.\n∃x (Whig(x) ∧ Speak(x, french)) ::: Some Whigs speak French.\nConclusion:\nSpeak(james, french) ::: James Cocks speaks French.\n------\nProblem:\nThe first person to be called a mathematician was the Greek philosopher Pythagoras. Pythagoras was a mathematician. Any mathematician is a person. Some Greeks are philosophers.\nQuestion:\nBased"
    ]
  },
  {
    "id": "FOLIO_train_783",
    "context": "Beasts of Prey is either a fantasy novel or a science fiction novel. Science fiction novels are not about mythological creatures Beasts of Prey Is about a creature known as the Shetani. Shetanis are mythological.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Beasts of prey is a fantasy novel.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFantasyNovel(x) ::: x is a fantasy novel.\nScienceFictionNovel(x) ::: x is a science fiction novel.\nAbout(x, y) ::: x is about y.\nMythological(x) ::: x is a mythological creature.\nPremises:\nFantasyNovel(beastsOfPrey) ⊕ ScienceFictionNovel(beastsOfPrey) ::: Beasts of Prey is either a fantasy novel or a science fiction novel.\n¬(ScienceFictionNovel(x) ∧ Mythological(y)) ::: Science fiction novels are not about mythological creatures.\nAbout(beastsOfPrey, shetani) ::: Beasts of Prey Is about a creature known as the Shetani.\nMythological(shetani) ::: Shetanis are mythological.\nConclusion:\nFantasyNovel(beastsOfPrey) ::: Beasts of prey is a fantasy novel.\n------\nProblem:\nThe first person to reach the South Pole was either Roald Amundsen or Robert Falcon Scott. Roald Amundsen was a Norwegian. Robert Falcon Scott was a British explorer.\nQuestion:\nBased on the above"
    ]
  },
  {
    "id": "FOLIO_train_784",
    "context": "Beasts of Prey is either a fantasy novel or a science fiction novel. Science fiction novels are not about mythological creatures Beasts of Prey Is about a creature known as the Shetani. Shetanis are mythological.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Beasts of prey isn't a science fiction novel.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFantasyNovel(x) ::: x is a fantasy novel.\nScienceFictionNovel(x) ::: x is a science fiction novel.\nAbout(x, y) ::: x is about y.\nMythological(x) ::: x is a mythological creature.\nPremises:\nFantasyNovel(beastsOfPrey) ∨ ScienceFictionNovel(beastsOfPrey) ::: Beasts of Prey is either a fantasy novel or a science fiction novel.\n¬(ScienceFictionNovel(x) ∧ Mythological(y)) ::: Science fiction novels are not about mythological creatures.\nAbout(beastsOfPrey, shetani) ::: Beasts of Prey Is about a creature known as the Shetani.\nMythological(shetani) ::: Shetanis are mythological.\nConclusion:\n¬ScienceFictionNovel(beastsOfPrey) ::: Beasts of prey isn't a science fiction novel.\n------\nProblem:\nThe first person to reach the South Pole was Roald Amundsen. The first person to reach the South Pole was not Robert Falcon Scott.\nQuestion:\nBased on the above information, is the following"
    ]
  },
  {
    "id": "FOLIO_train_785",
    "context": "Beasts of Prey is either a fantasy novel or a science fiction novel. Science fiction novels are not about mythological creatures Beasts of Prey Is about a creature known as the Shetani. Shetanis are mythological.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A shetani is either mythological or a creature.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFantasyNovel(x) ::: x is a fantasy novel.\nScienceFictionNovel(x) ::: x is a science fiction novel.\nAbout(x, y) ::: x is about y.\nCreature(x) ::: x is a creature.\nMythological(x) ::: x is mythological.\nPremises:\nFantasyNovel(beastsOfPrey) ∨ ScienceFictionNovel(beastsOfPrey) ::: Beasts of Prey is either a fantasy novel or a science fiction novel.\n¬(ScienceFictionNovel(x) ∧ About(x, mythological)) ::: Science fiction novels are not about mythological creatures\nAbout(beastsOfPrey, shetani) ::: Beasts of Prey Is about a creature known as the Shetani.\nMythological(shetani) ::: Shetanis are mythological.\nConclusion:\nMythological(shetani) ∨ Creature(shetani) ::: A shetani is either mythological or a creature.\n------\nProblem:\nThe first person to reach the South Pole was Roald Amundsen. The first person to reach the South Pole was not Robert Falcon Scott. Robert"
    ]
  },
  {
    "id": "FOLIO_train_786",
    "context": "Odell is an English surname originating in Odell, Bedfordshire. In some families Odell is spelled O'Dell, in a mistaken Irish adaptation. Notable people with the surname include Amy Odell, Jack Odell, and Mats Odell. Amy Odell is a British singer-songwriter. Jack Odell is an English toy inventor.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jack Odell is a notable people.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSurname(x) ::: x is a surname.\nEnglish(x) ::: x is an English surname.\nOdell(x) ::: x is an Odell.\nOdellSpelled(x) ::: x is spelled O'Dell.\nIrish(x) ::: x is an Irish adaptation.\nNotable(x) ::: x is a notable people.\nPeople(x) ::: x is a people.\nAmy(x) ::: x is an Amy.\nJack(x) ::: x is a Jack.\nMats(x) ::: x is a Mats.\nPremises:\nOdell(odell) ∧ English(odell) ::: Odell is an English surname originating in Odell, Bedfordshire.\nOdellSpelled(odell) ∧ Irish(odell) ::: In some families Odell is spelled O'Dell, in a mistaken Irish adaptation.\nNotable(amy) ∧ People(amy) ::: Notable people with the surname include Amy Odell.\nNotable(jack) ∧ People(jack) ::: Notable people with the surname include Jack Odell.\nNotable(mats) ∧ People(mats) ::: Notable people with the surname include"
    ]
  },
  {
    "id": "FOLIO_train_787",
    "context": "Odell is an English surname originating in Odell, Bedfordshire. In some families Odell is spelled O'Dell, in a mistaken Irish adaptation. Notable people with the surname include Amy Odell, Jack Odell, and Mats Odell. Amy Odell is a British singer-songwriter. Jack Odell is an English toy inventor.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Odell is Amy Odell's surname.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSurname(x, y) ::: x is y's surname.\nEnglish(x) ::: x is an English surname.\nOriginate(x, y) ::: x originates in y.\nSpell(x, y) ::: x is spelled y.\nNotable(x) ::: x is a notable person.\nPeople(x) ::: x is a person.\nInclude(x, y) ::: x includes y.\nPremises:\nEnglish(odell) ∧ Originate(odell, odellBedfordshire) ::: Odell is an English surname originating in Odell, Bedfordshire.\nSpell(odell, odell) ∨ Spell(odell, odellOdell) ::: In some families Odell is spelled O'Dell, in a mistaken Irish adaptation.\nNotable(people) ∧ Include(people, amyOdell) ∧ Include(people, jackOdell) ∧ Include(people, matsOdell) ::: Notable people with the surname include Amy Odell, Jack Odell, and Mats Odell.\nEnglish(amyOdell) ∧ SingerSongwriter(amyOdell) ::: Amy Odell is a British singer-"
    ]
  },
  {
    "id": "FOLIO_train_788",
    "context": "Odell is an English surname originating in Odell, Bedfordshire. In some families Odell is spelled O'Dell, in a mistaken Irish adaptation. Notable people with the surname include Amy Odell, Jack Odell, and Mats Odell. Amy Odell is a British singer-songwriter. Jack Odell is an English toy inventor.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Amy Odell is an English toy inventor.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nOdell(x) ::: x is an Odell.\nEnglish(x) ::: x is English.\nSurname(x) ::: x is a surname.\nOriginate(x, y) ::: x originates in y.\nSpell(x, y) ::: x is spelled y.\nNotable(x) ::: x is notable.\nPeople(x) ::: x is a people.\nSingerSongwriter(x) ::: x is a singer-songwriter.\nToyInventor(x) ::: x is a toy inventor.\nPremises:\nOdell(odell) ∧ Surname(odell) ∧ Originate(odell, odellBedfordshire) ::: Odell is an English surname originating in Odell, Bedfordshire.\nOdell(odell) ∧ Spell(odell, odell) ∨ Spell(odell, odellOdell) ::: In some families Odell is spelled O'Dell, in a mistaken Irish adaptation.\nNotable(people) ∧ People(amy) ∧ People(jack) ∧ People(mats) ::: Notable people with the surname include Amy Odell, Jack Odell, and Mats Odell"
    ]
  },
  {
    "id": "FOLIO_train_789",
    "context": "Odell is an English surname originating in Odell, Bedfordshire. In some families Odell is spelled O'Dell, in a mistaken Irish adaptation. Notable people with the surname include Amy Odell, Jack Odell, and Mats Odell. Amy Odell is a British singer-songwriter. Jack Odell is an English toy inventor.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Amy Odell is also Amy O'dell.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nOdell(x) ::: x is an Odell.\nOdellSpelling(x) ::: x is an Odell spelling.\nOdellSpelling(x) ∧ OdellSpelling(y) ∧ x ≠ y ::: x is an Odell spelling and y is an Odell spelling and x is not y.\nOdellSpelling(x) ∧ OdellSpelling(y) ∧ x = y ::: x is an Odell spelling and y is an Odell spelling and x is y.\nOdellSpelling(x) ∧ OdellSpelling(y) ∧ x ≠ y ∧ OdellSpelling(z) ∧ OdellSpelling(w) ∧ z = w ::: x is an Odell spelling and y is an Odell spelling and x is not y and z is an Odell spelling and w is an Odell spelling and z is w.\nOdellSpelling(x) ∧ OdellSpelling(y) ∧ x = y ∧ OdellSpelling(z) ∧ OdellSpelling(w) ∧ z ≠ w ::: x is an Odell spelling and y is an Odell spelling and x is y and z is an"
    ]
  },
  {
    "id": "FOLIO_train_790",
    "context": "If you go somewhere by train, you will not lose time. If you go somewhere by car and meet traffic jam, you will lose time. If you lose time, you will be late for work. Mary can get from New Haven to New York City either by train or car. Mary is late for work.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mary gets from New Haven to New York City by train.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGo(x, y) ::: x goes from y to z.\nTrain(x) ::: x goes by train.\nCar(x) ::: x goes by car.\nLose(x) ::: x loses time.\nLate(x) ::: x is late for work.\nPremises:\n∀x (Train(x) → ¬Lose(x)) ::: If you go somewhere by train, you will not lose time.\n∀x (Car(x) ∧ TrafficJam(x) → Lose(x)) ::: If you go somewhere by car and meet traffic jam, you will lose time.\n∀x (Lose(x) → Late(x)) ::: If you lose time, you will be late for work.\nGo(mary, newHaven) ∧ Go(mary, newYorkCity) ∧ (Train(mary) ∨ Car(mary)) ::: Mary can get from New Haven to New York City either by train or car.\nLate(mary) ::: Mary is late for work.\nConclusion:\nTrain(mary) ::: Mary gets from New Haven to New York City by train.\n------"
    ]
  },
  {
    "id": "FOLIO_train_791",
    "context": "If you go somewhere by train, you will not lose time. If you go somewhere by car and meet traffic jam, you will lose time. If you lose time, you will be late for work. Mary can get from New Haven to New York City either by train or car. Mary is late for work.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mary gets from New Haven to New York City by car.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGo(x, y) ::: x goes from y to z.\nTrain(x) ::: x goes by train.\nCar(x) ::: x goes by car.\nTrafficJam(x) ::: x meets traffic jam.\nLose(x) ::: x loses time.\nLate(x) ::: x is late for work.\nPremises:\n∀x (Train(x) → ¬TrafficJam(x)) ::: If you go somewhere by train, you will not lose time.\n∀x (Car(x) ∧ TrafficJam(x) → Lose(x)) ::: If you go somewhere by car and meet traffic jam, you will lose time.\n∀x (Lose(x) → Late(x)) ::: If you lose time, you will be late for work.\nGo(mary, newHaven, newYorkCity) ∧ (Train(mary) ∨ Car(mary)) ::: Mary can get from New Haven to New York City either by train or car.\nLate(mary) ::: Mary is late for work.\nConclusion:\nCar(mary) ::: Mary gets from New H"
    ]
  },
  {
    "id": "FOLIO_train_792",
    "context": "If you go somewhere by train, you will not lose time. If you go somewhere by car and meet traffic jam, you will lose time. If you lose time, you will be late for work. Mary can get from New Haven to New York City either by train or car. Mary is late for work.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mary meets traffic jam.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGo(x, y) ::: x goes to y.\nTrain(x) ::: x goes by train.\nCar(x) ::: x goes by car.\nLose(x) ::: x loses time.\nLate(x) ::: x is late for work.\nPremises:\n∀x (Train(x) → ¬Lose(x)) ::: If you go somewhere by train, you will not lose time.\n∀x (Car(x) ∧ TrafficJam(x) → Lose(x)) ::: If you go somewhere by car and meet traffic jam, you will lose time.\n∀x (Lose(x) → Late(x)) ::: If you lose time, you will be late for work.\nGo(mary, newYorkCity) ∧ (Train(mary) ∨ Car(mary)) ::: Mary can get from New Haven to New York City either by train or car.\nLate(mary) ::: Mary is late for work.\nConclusion:\nTrafficJam(mary) ::: Mary meets traffic jam.\n------\nProblem:\nIf you are a student, you are not a professor. If you"
    ]
  },
  {
    "id": "FOLIO_train_793",
    "context": "If a person is hungry, the person is uncomfortable. If a person is uncomfortable, the person is unhappy.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If a person is not hungry, the person is unhappy.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nHungry(x) ::: x is hungry.\nUncomfortable(x) ::: x is uncomfortable.\nUnhappy(x) ::: x is unhappy.\nPremises:\nHungry(x) → Uncomfortable(x) ::: If a person is hungry, the person is uncomfortable.\nUncomfortable(x) → Unhappy(x) ::: If a person is uncomfortable, the person is unhappy.\nConclusion:\n¬Hungry(x) → Unhappy(x) ::: If a person is not hungry, the person is unhappy.\n------\nProblem:\nIf a person is a student, the person is not a teacher. If a person is a teacher, the person is not a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? If a person is a student, the person is a teacher.\nBased on the above information, is the following statement true, false, or uncertain? If a person is not a student, the person is a teacher.\n###\nPredicates:\nStudent(x) ::: x is"
    ]
  },
  {
    "id": "FOLIO_train_794",
    "context": "Tipped employees do not get a guaranteed minimum wage. If a person is a white-collar worker, they will get a guaranteed minimum wage (All white-collar workers get a guaranteed minimum wage). All lawyers are white-collar workers. Every advocate is a lawyer. Mary is not a lawyer or a tipped employee.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mary is a white-collar worker.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTipped(x) ::: x is a tipped employee.\nWhiteCollar(x) ::: x is a white-collar worker.\nLawyer(x) ::: x is a lawyer.\nAdvocate(x) ::: x is an advocate.\nPremises:\n¬Tipped(x) → WhiteCollar(x) ::: Tipped employees do not get a guaranteed minimum wage.\n∀x (WhiteCollar(x) → GuaranteedMinimumWage(x)) ::: If a person is a white-collar worker, they will get a guaranteed minimum wage (All white-collar workers get a guaranteed minimum wage).\n∀x (Lawyer(x) → WhiteCollar(x)) ::: All lawyers are white-collar workers.\n∀x (Advocate(x) → Lawyer(x)) ::: Every advocate is a lawyer.\n¬Lawyer(mary) ∨ ¬Tipped(mary) ::: Mary is not a lawyer or a tipped employee.\nConclusion:\nWhiteCollar(mary) ::: Mary is a white-collar worker.\n------\nProblem:\nA person"
    ]
  },
  {
    "id": "FOLIO_train_795",
    "context": "Tipped employees do not get a guaranteed minimum wage. If a person is a white-collar worker, they will get a guaranteed minimum wage (All white-collar workers get a guaranteed minimum wage). All lawyers are white-collar workers. Every advocate is a lawyer. Mary is not a lawyer or a tipped employee.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mary is an advocate.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTipped(x) ::: x is a tipped employee.\nWhiteCollar(x) ::: x is a white-collar worker.\nLawyer(x) ::: x is a lawyer.\nAdvocate(x) ::: x is an advocate.\nPremises:\n¬Tipped(x) → WhiteCollar(x) ::: If a person is a white-collar worker, they will get a guaranteed minimum wage (All white-collar workers get a guaranteed minimum wage).\nWhiteCollar(lawyer) ::: All lawyers are white-collar workers.\nLawyer(advocate) ::: Every advocate is a lawyer.\n¬Lawyer(mary) ∧ ¬Tipped(mary) ::: Mary is not a lawyer or a tipped employee.\nConclusion:\n¬Advocate(mary) ::: Mary is an advocate.\n------\nProblem:\nThe first person to reach the summit of Mount Everest was Edmund Hillary. Edmund Hillary was a New Zealander. Edmund Hillary was a mountaineer. Edmund Hillary was a philanthropist. Edmund Hillary was a beekeeper."
    ]
  },
  {
    "id": "FOLIO_train_796",
    "context": "Tipped employees do not get a guaranteed minimum wage. If a person is a white-collar worker, they will get a guaranteed minimum wage (All white-collar workers get a guaranteed minimum wage). All lawyers are white-collar workers. Every advocate is a lawyer. Mary is not a lawyer or a tipped employee.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mary is not an advocate.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTipped(x) ::: x is a tipped employee.\nWhiteCollar(x) ::: x is a white-collar worker.\nLawyer(x) ::: x is a lawyer.\nAdvocate(x) ::: x is an advocate.\nPremises:\n¬∀x (Tipped(x) → WhiteCollar(x)) ::: Tipped employees do not get a guaranteed minimum wage.\n∀x (WhiteCollar(x) → ¬Tipped(x)) ::: If a person is a white-collar worker, they will get a guaranteed minimum wage (All white-collar workers get a guaranteed minimum wage).\n∀x (Lawyer(x) → WhiteCollar(x)) ::: All lawyers are white-collar workers.\n∀x (Advocate(x) → Lawyer(x)) ::: Every advocate is a lawyer.\n¬(Lawyer(mary) ∨ Tipped(mary)) ::: Mary is not a lawyer or a tipped employee.\nConclusion:\n¬Advocate(mary) ::: Mary is not an advocate.\n------\nProblem:\nThe first person"
    ]
  },
  {
    "id": "FOLIO_train_797",
    "context": "Tipped employees do not get a guaranteed minimum wage. If a person is a white-collar worker, they will get a guaranteed minimum wage (All white-collar workers get a guaranteed minimum wage). All lawyers are white-collar workers. Every advocate is a lawyer. Mary is not a lawyer or a tipped employee.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mary is either an advocate or a tipped employee.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTippedEmployee(x) ::: x is a tipped employee.\nWhiteCollarWorker(x) ::: x is a white-collar worker.\nLawyer(x) ::: x is a lawyer.\nAdvocate(x) ::: x is an advocate.\nPremises:\n¬(TippedEmployee(x) ∧ WhiteCollarWorker(x)) ::: Tipped employees do not get a guaranteed minimum wage.\n∀x (WhiteCollarWorker(x) → GuaranteedMinimumWage(x)) ::: If a person is a white-collar worker, they will get a guaranteed minimum wage (All white-collar workers get a guaranteed minimum wage).\n∀x (Lawyer(x) → WhiteCollarWorker(x)) ::: All lawyers are white-collar workers.\n∀x (Advocate(x) → Lawyer(x)) ::: Every advocate is a lawyer.\n¬(Lawyer(mary) ∨ TippedEmployee(mary)) ::: Mary is not a lawyer or a tipped employee.\nConclusion:\n(Advocate(mary) ∨ TippedEmployee(mary)) :"
    ]
  },
  {
    "id": "FOLIO_train_798",
    "context": "Tipped employees do not get a guaranteed minimum wage. If a person is a white-collar worker, they will get a guaranteed minimum wage (All white-collar workers get a guaranteed minimum wage). All lawyers are white-collar workers. Every advocate is a lawyer. Mary is not a lawyer or a tipped employee.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Mary is not an advocate and gets a guaranteed minimum wage, she is not a tipped employee.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTippedEmployee(x) ::: x is a tipped employee.\nWhiteCollarWorker(x) ::: x is a white-collar worker.\nLawyer(x) ::: x is a lawyer.\nAdvocate(x) ::: x is an advocate.\nGuaranteedMinimumWage(x) ::: x gets a guaranteed minimum wage.\nPremises:\n¬(TippedEmployee(x) ∧ GuaranteedMinimumWage(x)) ::: Tipped employees do not get a guaranteed minimum wage.\n∀x (WhiteCollarWorker(x) → GuaranteedMinimumWage(x)) ::: If a person is a white-collar worker, they will get a guaranteed minimum wage (All white-collar workers get a guaranteed minimum wage).\n∀x (Lawyer(x) → WhiteCollarWorker(x)) ::: All lawyers are white-collar workers.\n∀x (Advocate(x) → Lawyer(x)) ::: Every advocate is a lawyer.\n¬(Lawyer(mary) ∨ TippedEmployee(mary)) ::: Mary is not a lawyer or a tipped"
    ]
  },
  {
    "id": "FOLIO_train_799",
    "context": "Tipped employees do not get a guaranteed minimum wage. If a person is a white-collar worker, they will get a guaranteed minimum wage (All white-collar workers get a guaranteed minimum wage). All lawyers are white-collar workers. Every advocate is a lawyer. Mary is not a lawyer or a tipped employee.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Mary is either an advocate or a tipped employee, she is an advocate.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTippedEmployee(x) ::: x is a tipped employee.\nWhiteCollarWorker(x) ::: x is a white-collar worker.\nLawyer(x) ::: x is a lawyer.\nAdvocate(x) ::: x is an advocate.\nPremises:\n¬(TippedEmployee(x) ∧ WhiteCollarWorker(x)) ::: Tipped employees do not get a guaranteed minimum wage.\n∀x (WhiteCollarWorker(x) → GuaranteedMinimumWage(x)) ::: If a person is a white-collar worker, they will get a guaranteed minimum wage (All white-collar workers get a guaranteed minimum wage).\n∀x (Lawyer(x) → WhiteCollarWorker(x)) ::: All lawyers are white-collar workers.\n∀x (Advocate(x) → Lawyer(x)) ::: Every advocate is a lawyer.\n¬(Lawyer(mary) ∨ TippedEmployee(mary)) ::: Mary is not a lawyer or a tipped employee.\nConclusion:\n¬(Advocate(mary) ∨ TippedEmployee(mary))"
    ]
  },
  {
    "id": "FOLIO_train_800",
    "context": "Asa Hoffmann was born in New York City. Asa Hoffman lives in Manhattan. Asa Hoffman is a chess player. Some chess players are grandmasters. People born and living in New York City are New Yorkers. People liviing in Manhattan live in New York City.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Asa Hoffmann is a New Yorkers.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBorn(x, y) ::: x was born in y.\nLive(x, y) ::: x lives in y.\nChessPlayer(x) ::: x is a chess player.\nGrandmaster(x) ::: x is a grandmaster.\nNewYorker(x) ::: x is a New Yorker.\nPremises:\nBorn(asa, newYorkCity) ∧ Live(asa, manhattan) ∧ ChessPlayer(asa) ::: Asa Hoffmann was born in New York City. Asa Hoffman lives in Manhattan. Asa Hoffman is a chess player.\n∃x (ChessPlayer(x) ∧ Grandmaster(x)) ::: Some chess players are grandmasters.\n∀x (Born(x, newYorkCity) ∧ Live(x, manhattan) → NewYorker(x)) ::: People born and living in New York City are New Yorkers.\n∀x (Live(x, manhattan) → Live(x, newYorkCity)) ::: People liviing in Manhattan live in New York City.\nConclusion:\nNewYorker(asa) ::: Asa Hoffmann is a New Yorkers.\n------"
    ]
  },
  {
    "id": "FOLIO_train_801",
    "context": "Asa Hoffmann was born in New York City. Asa Hoffman lives in Manhattan. Asa Hoffman is a chess player. Some chess players are grandmasters. People born and living in New York City are New Yorkers. People liviing in Manhattan live in New York City.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Asa Hoffmann is a grandmaster.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBorn(x, y) ::: x was born in y.\nLive(x, y) ::: x lives in y.\nChessPlayer(x) ::: x is a chess player.\nGrandmaster(x) ::: x is a grandmaster.\nNewYorker(x) ::: x is a New Yorker.\nManhattan(x) ::: x is Manhattan.\nNewYorkCity(x) ::: x is New York City.\nPremises:\nBorn(asa, newYorkCity) ∧ Live(asa, manhattan) ∧ ChessPlayer(asa) ::: Asa Hoffmann was born in New York City. Asa Hoffman lives in Manhattan. Asa Hoffman is a chess player.\n∃x (ChessPlayer(x) ∧ Grandmaster(x)) ::: Some chess players are grandmasters.\n∀x (Born(x, newYorkCity) → NewYorker(x)) ::: People born and living in New York City are New Yorkers.\n∀x (Live(x, manhattan) → Live(x, newYorkCity)) ::: People liviing in Manhattan live in New York City.\nConclusion:\nGr"
    ]
  },
  {
    "id": "FOLIO_train_802",
    "context": "Asa Hoffmann was born in New York City. Asa Hoffman lives in Manhattan. Asa Hoffman is a chess player. Some chess players are grandmasters. People born and living in New York City are New Yorkers. People liviing in Manhattan live in New York City.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Asa Hoffmann does not live in New York.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBorn(x, y) ::: x was born in y.\nLive(x, y) ::: x lives in y.\nChessPlayer(x) ::: x is a chess player.\nGrandmaster(x) ::: x is a grandmaster.\nNewYorker(x) ::: x is a New Yorker.\nPremises:\nBorn(asa, newYorkCity) ∧ Live(asa, manhattan) ∧ ChessPlayer(asa) ::: Asa Hoffmann was born in New York City. Asa Hoffman lives in Manhattan. Asa Hoffman is a chess player.\n∃x (ChessPlayer(x) ∧ Grandmaster(x)) ::: Some chess players are grandmasters.\n∀x (Born(x, newYorkCity) ∧ Live(x, manhattan) → NewYorker(x)) ::: People born and living in New York City are New Yorkers.\n∀x (Live(x, manhattan) → Live(x, newYorkCity)) ::: People liviing in Manhattan live in New York City.\nConclusion:\n¬Live(asa, newYork) ::: Asa Hoffmann does not live in New York"
    ]
  },
  {
    "id": "FOLIO_train_803",
    "context": "Some of those who apply for a Schengen Visa get it. To apply for a Schengen Visa, you need to provide financial guarantees. If you need to provide financial guarantees, you must request documents from the bank. Do not close your bank account if you request documents from the bank. Philip closed his bank account.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Philip got a Schengen Visa.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nApply(x) ::: x applies for a Schengen Visa.\nGet(x) ::: x gets a Schengen Visa.\nProvide(x) ::: x provides financial guarantees.\nRequest(x) ::: x requests documents from the bank.\nClose(x) ::: x closes his bank account.\nPremises:\n∃x (Apply(x) ∧ Get(x)) ::: Some of those who apply for a Schengen Visa get it.\n∀x (Apply(x) → Provide(x)) ::: To apply for a Schengen Visa, you need to provide financial guarantees.\n∀x (Provide(x) → Request(x)) ::: If you need to provide financial guarantees, you must request documents from the bank.\n¬(Request(x) → Close(x)) ::: Do not close your bank account if you request documents from the bank.\nClose(philip) ::: Philip closed his bank account.\nConclusion:\nGet(philip) ::: Philip got a Schengen Visa.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No"
    ]
  },
  {
    "id": "FOLIO_train_804",
    "context": "Some of those who apply for a Schengen Visa get it. To apply for a Schengen Visa, you need to provide financial guarantees. If you need to provide financial guarantees, you must request documents from the bank. Do not close your bank account if you request documents from the bank. Philip closed his bank account.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Philip applied for a Schengen Visa and got it.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nApply(x) ::: x applies for a Schengen Visa.\nGet(x) ::: x gets a Schengen Visa.\nProvide(x) ::: x provides financial guarantees.\nRequest(x) ::: x requests documents from the bank.\nClose(x) ::: x closes his bank account.\nPremises:\n∃x (Apply(x) ∧ Get(x)) ::: Some of those who apply for a Schengen Visa get it.\nProvide(x) → Request(x) ::: To apply for a Schengen Visa, you need to provide financial guarantees.\nRequest(x) → ¬Close(x) ::: If you need to provide financial guarantees, you must request documents from the bank.\nClose(philip) ::: Philip closed his bank account.\nConclusion:\nApply(philip) ∧ Get(philip) ::: Philip applied for a Schengen Visa and got it.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine"
    ]
  },
  {
    "id": "FOLIO_train_805",
    "context": "Some of those who apply for a Schengen Visa get it. To apply for a Schengen Visa, you need to provide financial guarantees. If you need to provide financial guarantees, you must request documents from the bank. Do not close your bank account if you request documents from the bank. Philip closed his bank account.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Philip did not request documents from the bank or get a Schengen Visa, he didn’t apply for a Schengen Visa.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nApply(x) ::: x applies for a Schengen Visa.\nGet(x) ::: x gets a Schengen Visa.\nProvide(x) ::: x provides financial guarantees.\nRequest(x) ::: x requests documents from the bank.\nClose(x) ::: x closes his bank account.\nPremises:\n∃x (Apply(x) ∧ Get(x)) ::: Some of those who apply for a Schengen Visa get it.\n∀x (Apply(x) → Provide(x)) ::: To apply for a Schengen Visa, you need to provide financial guarantees.\n∀x (Provide(x) → Request(x)) ::: If you need to provide financial guarantees, you must request documents from the bank.\n¬(Request(x) → Close(x)) ::: Do not close your bank account if you request documents from the bank.\nClose(philip) ::: Philip closed his bank account.\nConclusion:\n¬(Provide(philip) ∨ Get(philip)) → ¬Apply(philip) ::: If Philip did not request documents from the bank or get a Schengen Visa, he didn’t apply for a Sch"
    ]
  },
  {
    "id": "FOLIO_train_806",
    "context": "Some fears lead to anxiety. Some anxiety leads to terror.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? No fears lead to terror.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFear(x) ::: x is a fear.\nAnxiety(x) ::: x is anxiety.\nTerror(x) ::: x is terror.\nLead(x, y) ::: x leads to y.\nPremises:\n∃x ∃y (Fear(x) ∧ Lead(x, y) ∧ Anxiety(y)) ::: Some fears lead to anxiety.\n∃x ∃y (Anxiety(x) ∧ Lead(x, y) ∧ Terror(y)) ::: Some anxiety leads to terror.\nConclusion:\n¬∃x ∃y (Fear(x) ∧ Lead(x, y) ∧ Terror(y)) ::: No fears lead to terror.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.\nQuestion:\nBased"
    ]
  },
  {
    "id": "FOLIO_train_807",
    "context": "The Great Lakes are Lake Superior, Lake Michigan, Lake Huron, Lake Erie, and Lake Ontario. Some major settlements of Lake Erie are in NY, PA, OH, and MI. NY, PA, OH, MI are states in the US. ON is a state of Canada. There is a major settlement of Lake Huron in ON. All states are in their country. The US is in North America. The Great Lakes began to form at the end of the Last Glacial Period.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Lake Erie has a major settlement.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreatLake(x) ::: x is a Great Lake.\nMajorSettlement(x) ::: x is a major settlement.\nState(x) ::: x is a state.\nCountry(x) ::: x is a country.\nIn(x, y) ::: x is in y.\nStateOf(x, y) ::: x is a state of y.\nUS(x) ::: x is the US.\nCanada(x) ::: x is Canada.\nNorthAmerica(x) ::: x is in North America.\nPremises:\nGreatLake(lakeSuperior) ∧ GreatLake(lakeMichigan) ∧ GreatLake(lakeHuron) ∧ GreatLake(lakeErie) ∧ GreatLake(lakeOntario) ::: The Great Lakes are Lake Superior, Lake Michigan, Lake Huron, Lake Erie, and Lake Ontario.\nMajorSettlement(majorSettlementOfLakeErie) ∧ MajorSettlement(majorSettlementOfLakeHuron) ::: Some major settlements of Lake Erie are in NY, PA, OH, and MI. NY, PA, OH,"
    ]
  },
  {
    "id": "FOLIO_train_808",
    "context": "The Great Lakes are Lake Superior, Lake Michigan, Lake Huron, Lake Erie, and Lake Ontario. Some major settlements of Lake Erie are in NY, PA, OH, and MI. NY, PA, OH, MI are states in the US. ON is a state of Canada. There is a major settlement of Lake Huron in ON. All states are in their country. The US is in North America. The Great Lakes began to form at the end of the Last Glacial Period.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There is a great lake that did not form at the end of the Last Glacial Period.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreatLake(x) ::: x is a great lake.\nMajorSettlement(x, y) ::: x is a major settlement of y.\nState(x) ::: x is a state.\nCountry(x) ::: x is a country.\nIn(x, y) ::: x is in y.\nStateOf(x, y) ::: x is a state of y.\nUS(x) ::: x is the US.\nCanada(x) ::: x is Canada.\nNorthAmerica(x) ::: x is in North America.\nLastGlacialPeriod(x) ::: x is at the end of the Last Glacial Period.\nPremises:\nGreatLake(lakeSuperior) ∧ GreatLake(lakeMichigan) ∧ GreatLake(lakeHuron) ∧ GreatLake(lakeErie) ∧ GreatLake(lakeOntario) ::: The Great Lakes are Lake Superior, Lake Michigan, Lake Huron, Lake Erie, and Lake Ontario.\nMajorSettlement(lakeErie, ny) ∧ MajorSettlement(lakeErie, pa) ∧ MajorSettlement(lakeEr"
    ]
  },
  {
    "id": "FOLIO_train_809",
    "context": "All defenders are soccer players. No soccer players are professional basketball players. All centerbacks are defenders. All NBA players are professional basketball players. If Stephen Curry is not an NBA player, then Stephen Curry is not an NBA player or a soccer player.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Stephen Curry is a professional basketball player.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDefender(x) ::: x is a defender.\nSoccerPlayer(x) ::: x is a soccer player.\nCenterback(x) ::: x is a centerback.\nProfessionalBasketballPlayer(x) ::: x is a professional basketball player.\nNBAPlayer(x) ::: x is an NBA player.\nPremises:\n∀x (Defender(x) → SoccerPlayer(x)) ::: All defenders are soccer players.\n¬∃x (SoccerPlayer(x) ∧ ProfessionalBasketballPlayer(x)) ::: No soccer players are professional basketball players.\n∀x (Centerback(x) → Defender(x)) ::: All centerbacks are defenders.\n∀x (NBAPlayer(x) → ProfessionalBasketballPlayer(x)) ::: All NBA players are professional basketball players.\n¬(NBAPlayer(stephenCurry) ∨ SoccerPlayer(stephenCurry)) ::: If Stephen Curry is not an NBA player, then Stephen Curry is not an NBA player or a soccer player.\nConclusion:\n¬ProfessionalBasketballPlayer(stephenCurry) ::: Stephen Curry is a professional basketball player.\n------\nProblem:\nAll people who regularly drink coffee"
    ]
  },
  {
    "id": "FOLIO_train_810",
    "context": "All defenders are soccer players. No soccer players are professional basketball players. All centerbacks are defenders. All NBA players are professional basketball players. If Stephen Curry is not an NBA player, then Stephen Curry is not an NBA player or a soccer player.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Stephen Curry is a centerback.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDefender(x) ::: x is a defender.\nSoccerPlayer(x) ::: x is a soccer player.\nCenterback(x) ::: x is a centerback.\nProfessionalBasketballPlayer(x) ::: x is a professional basketball player.\nNBAPlayer(x) ::: x is an NBA player.\nPremises:\n∀x (Defender(x) → SoccerPlayer(x)) ::: All defenders are soccer players.\n¬∃x (SoccerPlayer(x) ∧ ProfessionalBasketballPlayer(x)) ::: No soccer players are professional basketball players.\n∀x (Centerback(x) → Defender(x)) ::: All centerbacks are defenders.\n∀x (NBAPlayer(x) → ProfessionalBasketballPlayer(x)) ::: All NBA players are professional basketball players.\n¬NBAPlayer(stephen) → (¬NBAPlayer(stephen) ∨ ¬SoccerPlayer(stephen)) ::: If Stephen Curry is not an NBA player, then Stephen Curry is not an NBA player or a soccer player.\nConclusion:\n¬Centerback(stephen) ::: Stephen Curry is a centerback.\n------"
    ]
  },
  {
    "id": "FOLIO_train_811",
    "context": "All defenders are soccer players. No soccer players are professional basketball players. All centerbacks are defenders. All NBA players are professional basketball players. If Stephen Curry is not an NBA player, then Stephen Curry is not an NBA player or a soccer player.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Stephen Curry is not a centerback.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDefender(x) ::: x is a defender.\nSoccerPlayer(x) ::: x is a soccer player.\nCenterback(x) ::: x is a centerback.\nProfessionalBasketballPlayer(x) ::: x is a professional basketball player.\nNBAPlayer(x) ::: x is an NBA player.\nPremises:\n∀x (Defender(x) → SoccerPlayer(x)) ::: All defenders are soccer players.\n¬∃x (SoccerPlayer(x) ∧ ProfessionalBasketballPlayer(x)) ::: No soccer players are professional basketball players.\n∀x (Centerback(x) → Defender(x)) ::: All centerbacks are defenders.\n∀x (NBAPlayer(x) → ProfessionalBasketballPlayer(x)) ::: All NBA players are professional basketball players.\n¬NBAPlayer(stephen) → (¬NBAPlayer(stephen) ∨ ¬SoccerPlayer(stephen)) ::: If Stephen Curry is not an NBA player, then Stephen Curry is not an NBA player or a soccer player.\nConclusion:\n¬Centerback(stephen) ::: Stephen Curry is not a centerback."
    ]
  },
  {
    "id": "FOLIO_train_812",
    "context": "Naive cynicism was proposed by Justin Kruger and a colleague. Thomas Gilovich is a colleague of Justin Kruger. Naive cynicism is a philosophy of mind.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Thomas Gilovich proposed naive cynicism.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPropose(x, y) ::: x proposed y.\nColleague(x, y) ::: x is a colleague of y.\nPhilosophyOfMind(x) ::: x is a philosophy of mind.\nPremises:\nPropose(justinKruger, naiveCynicism) ∧ Colleague(thomasGilovich, justinKruger) ::: Naive cynicism was proposed by Justin Kruger and a colleague.\nPhilosophyOfMind(naiveCynicism) ::: Naive cynicism is a philosophy of mind.\nConclusion:\nPropose(thomasGilovich, naiveCynicism) ::: Thomas Gilovich proposed naive cynicism.\n------\nProblem:\nThe first person to be diagnosed with the disease was a 49-year-old man from the city of Wuhan. The disease is a coronavirus. The disease is a virus. The disease is a disease.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The first person to be diagnosed with the disease was a 49-year-old"
    ]
  },
  {
    "id": "FOLIO_train_813",
    "context": "Naive cynicism was proposed by Justin Kruger and a colleague. Thomas Gilovich is a colleague of Justin Kruger. Naive cynicism is a philosophy of mind.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Justin Kruger propose a philosophy of mind.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPropose(x, y) ::: x propose y.\nColleague(x, y) ::: x is a colleague of y.\nPhilosophyOfMind(x) ::: x is a philosophy of mind.\nPremises:\nPropose(justinKruger, naiveCynicism) ∧ Colleague(thomasGilovich, justinKruger) ::: Naive cynicism was proposed by Justin Kruger and a colleague.\nPhilosophyOfMind(naiveCynicism) ::: Naive cynicism is a philosophy of mind.\nConclusion:\nPropose(justinKruger, philosophyOfMind) ::: Justin Kruger propose a philosophy of mind.\n------\nProblem:\nThe first person to be diagnosed with the disease was a 47-year-old man from the city of Wuhan. The disease is a coronavirus. The disease is a virus.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The first person to be diagnosed with the disease was a 47-year-old man from the city of Wuhan.\nBased on"
    ]
  },
  {
    "id": "FOLIO_train_814",
    "context": "Naive cynicism was proposed by Justin Kruger and a colleague. Thomas Gilovich is a colleague of Justin Kruger. Naive cynicism is a philosophy of mind.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Thomas Gilovich worked on philiophies of mind.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nColleague(x, y) ::: x is a colleague of y.\nPropose(x, y) ::: x proposed y.\nPhilosophyOfMind(x) ::: x is a philosophy of mind.\nPremises:\nColleague(thomasGilovich, justinKruger) ∧ Propose(justinKruger, naiveCynicism) ∧ PhilosophyOfMind(naiveCynicism) ::: Naive cynicism was proposed by Justin Kruger and a colleague. Thomas Gilovich is a colleague of Justin Kruger. Naive cynicism is a philosophy of mind.\nConclusion:\nPropose(thomasGilovich, naiveCynicism) ::: Thomas Gilovich worked on philiophies of mind.\n------\nProblem:\nThe first person to be diagnosed with the disease was a 49-year-old man from Guangdong province in China. The disease is a respiratory disease. The disease is caused by a virus. The disease is a coronavirus disease. The disease is a severe acute respiratory syndrome. The disease is a severe acute respir"
    ]
  },
  {
    "id": "FOLIO_train_815",
    "context": " The Turing Award has been awarded to Donald Knuth, Marvin Minsky, Richard Hamming and John McCarthy. Donald Knuth made major contributions to the analysis of algorithms. Marvin Minsky is recognized by his contributions to the field of artificial intelligence. Richard Hamming did research on numerical methods. John McCarthy had a central role in creating and shaping the field of artificial inteligence.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? At least two people who have won the Turing Award worked in the field of artificial intelligence.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTuringAward(x) ::: x has won the Turing Award.\nMajorContribution(x, y) ::: x has made major contributions to y.\nResearch(x, y) ::: x did research on y.\nRole(x, y) ::: x had a central role in y.\nPremises:\nTuringAward(donald) ∧ MajorContribution(donald, analysisOfAlgorithms) ::: Donald Knuth made major contributions to the analysis of algorithms.\nTuringAward(marvin) ∧ Research(marvin, artificialIntelligence) ::: Marvin Minsky is recognized by his contributions to the field of artificial intelligence.\nTuringAward(richard) ∧ Research(richard, numericalMethods) ::: Richard Hamming did research on numerical methods.\nTuringAward(john) ∧ Role(john, artificialIntelligence) ::: John McCarthy had a central role in creating and shaping the field of artificial inteligence.\nConclusion:\n∃x ∃y (TuringAward(x) ∧ TuringAward(y) ∧ Research(x, artificialIntelligence) ∧ Research(y, artificialIntelligence))"
    ]
  },
  {
    "id": "FOLIO_train_816",
    "context": " The Turing Award has been awarded to Donald Knuth, Marvin Minsky, Richard Hamming and John McCarthy. Donald Knuth made major contributions to the analysis of algorithms. Marvin Minsky is recognized by his contributions to the field of artificial intelligence. Richard Hamming did research on numerical methods. John McCarthy had a central role in creating and shaping the field of artificial inteligence.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? At least two people who worked in the field of artificial intelligence have won the Turing Award.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTuringAward(x) ::: x has won the Turing Award.\nMajorContribution(x, y) ::: x has made major contributions to y.\nRecognized(x, y) ::: x is recognized by y.\nResearch(x, y) ::: x did research on y.\nCentralRole(x, y) ::: x had a central role in y.\nPremises:\nTuringAward(donald) ∧ TuringAward(marvin) ∧ TuringAward(richard) ∧ TuringAward(john) ::: The Turing Award has been awarded to Donald Knuth, Marvin Minsky, Richard Hamming and John McCarthy.\nMajorContribution(donald, analysisOfAlgorithms) ::: Donald Knuth made major contributions to the analysis of algorithms.\nRecognized(marvin, fieldOfArtificialIntelligence) ::: Marvin Minsky is recognized by his contributions to the field of artificial intelligence.\nResearch(richard, numericalMethods) ::: Richard Hamming did research on numerical methods.\nCentralRole(john, fieldOfArtificialIntelligence) ::: John McCarthy had a central role in creating"
    ]
  },
  {
    "id": "FOLIO_train_817",
    "context": " The Turing Award has been awarded to Donald Knuth, Marvin Minsky, Richard Hamming and John McCarthy. Donald Knuth made major contributions to the analysis of algorithms. Marvin Minsky is recognized by his contributions to the field of artificial intelligence. Richard Hamming did research on numerical methods. John McCarthy had a central role in creating and shaping the field of artificial inteligence.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Only one people who have won the Turing Award made significant contributions to the analysis of algorithms.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTuringAward(x) ::: x has won the Turing Award.\nMajorContribution(x, y) ::: x has made major contributions to y.\nAnalysisOfAlgorithms(x) ::: x is the analysis of algorithms.\nArtificialIntelligence(x) ::: x is the field of artificial intelligence.\nNumericalMethods(x) ::: x is the numerical methods.\nPremises:\nTuringAward(donald) ∧ TuringAward(marvin) ∧ TuringAward(richard) ∧ TuringAward(john) ::: The Turing Award has been awarded to Donald Knuth, Marvin Minsky, Richard Hamming and John McCarthy.\nMajorContribution(donald, analysisOfAlgorithms) ::: Donald Knuth made major contributions to the analysis of algorithms.\nMajorContribution(marvin, artificialIntelligence) ::: Marvin Minsky is recognized by his contributions to the field of artificial intelligence.\nMajorContribution(richard, numericalMethods) ::: Richard Hamming did research on numerical methods.\nMajorContribution(john, artificialIntelligence) ::: John McCarthy had a central role"
    ]
  },
  {
    "id": "FOLIO_train_818",
    "context": " The Turing Award has been awarded to Donald Knuth, Marvin Minsky, Richard Hamming and John McCarthy. Donald Knuth made major contributions to the analysis of algorithms. Marvin Minsky is recognized by his contributions to the field of artificial intelligence. Richard Hamming did research on numerical methods. John McCarthy had a central role in creating and shaping the field of artificial inteligence.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? No Turing Award winners worked in the field of numerical methods.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTuringAwardWinner(x) ::: x is a Turing Award winner.\nMajorContribution(x, y) ::: x made major contributions to y.\nRecognized(x, y) ::: x is recognized by y.\nResearch(x, y) ::: x did research on y.\nCentralRole(x, y) ::: x had a central role in y.\nPremises:\nTuringAwardWinner(donald) ∧ MajorContribution(donald, analysisOfAlgorithms) ::: Donald Knuth made major contributions to the analysis of algorithms.\nTuringAwardWinner(marvin) ∧ Recognized(marvin, fieldOfArtificialIntelligence) ::: Marvin Minsky is recognized by his contributions to the field of artificial intelligence.\nTuringAwardWinner(richard) ∧ Research(richard, numericalMethods) ::: Richard Hamming did research on numerical methods.\nTuringAwardWinner(john) ∧ CentralRole(john, fieldOfArtificialIntelligence) ::: John McCarthy had a central role in creating and shaping the field of artificial inteligence.\nConclusion:\n¬∃x (T"
    ]
  },
  {
    "id": "FOLIO_train_819",
    "context": "No easy Leetcode problems have an AC rate lower than 20 percent. All Leetcode problems recommended to novices are easy. Leetcode problems either have an AC rate lower than 20 percent or are starred by more than 1 thousand users. All hard Leetcode problems are starred by more than 1 thousand users. No Leetcode problems published after 2022 are starred by more than 1 thousand users. 2Sum is not recommended to novices and hard. 4Sum is either starred by more than 1 thousand users and published after 2022, or neither starred by more than 1 thousand users nor published after 2022.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? 2Sum is an easy Leetcode problem.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEasy(x) ::: x is an easy Leetcode problem.\nRecommend(x) ::: x is recommended to novices.\nACRate(x, y) ::: x has an AC rate lower than y percent.\nStar(x, y) ::: x is starred by y users.\nHard(x) ::: x is a hard Leetcode problem.\nPublish(x, y) ::: x is published after year y.\nPremises:\n¬∃x (Easy(x) ∧ ACRate(x, 20)) ::: No easy Leetcode problems have an AC rate lower than 20 percent.\n∀x (Recommend(x) → Easy(x)) ::: All Leetcode problems recommended to novices are easy.\n∀x (ACRate(x, 20) ∨ Star(x, 1000)) ::: Leetcode problems either have an AC rate lower than 20 percent or are starred by more than 1 thousand users.\n∀x (Hard(x) → Star(x, 1000)) ::: All hard Leetcode problems are starred by more than 1 thousand users."
    ]
  },
  {
    "id": "FOLIO_train_820",
    "context": "No easy Leetcode problems have an AC rate lower than 20 percent. All Leetcode problems recommended to novices are easy. Leetcode problems either have an AC rate lower than 20 percent or are starred by more than 1 thousand users. All hard Leetcode problems are starred by more than 1 thousand users. No Leetcode problems published after 2022 are starred by more than 1 thousand users. 2Sum is not recommended to novices and hard. 4Sum is either starred by more than 1 thousand users and published after 2022, or neither starred by more than 1 thousand users nor published after 2022.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? 2Sum is not an easy Leetcode problem.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEasy(x) ::: x is an easy Leetcode problem.\nRecommend(x) ::: x is recommended to novices.\nACRate(x, y) ::: x has an AC rate lower than y percent.\nStar(x, y) ::: x is starred by y users.\nHard(x) ::: x is a hard Leetcode problem.\nPublish(x, y) ::: x is published after year y.\nPremises:\n¬∃x (Easy(x) ∧ ACRate(x, 20)) ::: No easy Leetcode problems have an AC rate lower than 20 percent.\n∀x (Recommend(x) → Easy(x)) ::: All Leetcode problems recommended to novices are easy.\n∀x (ACRate(x, 20) ∨ Star(x, 1000)) ::: Leetcode problems either have an AC rate lower than 20 percent or are starred by more than 1 thousand users.\n∀x (Hard(x) → Star(x, 1000)) ::: All hard Leetcode problems are starred by more than 1 thousand users.\n¬∃x (Publish(x, year2022) ∧ Star(x, 1000)) ::: No Leetcode problems published after 2022 are starred by more than 1 thousand users.\n¬Recommend(2sum) ∧ Hard(2sum) ::: 2Sum is not recommended to novices and hard.\n(Star(4sum, 1000) ∧ Publish(4sum, year2022)) ∨ ¬(Star(4sum, 1000) ∨ Publish(4sum, year2022)) ::: 4Sum is either starred by more than 1 thousand users and published after 2022, or neither starred by more than 1 thousand users nor published after 2022.\nConclusion:\n¬Easy(2sum) ::: 2Sum is not an easy Leetcode problem.\n------"
    ]
  },
  {
    "id": "FOLIO_train_821",
    "context": "No easy Leetcode problems have an AC rate lower than 20 percent. All Leetcode problems recommended to novices are easy. Leetcode problems either have an AC rate lower than 20 percent or are starred by more than 1 thousand users. All hard Leetcode problems are starred by more than 1 thousand users. No Leetcode problems published after 2022 are starred by more than 1 thousand users. 2Sum is not recommended to novices and hard. 4Sum is either starred by more than 1 thousand users and published after 2022, or neither starred by more than 1 thousand users nor published after 2022.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? 4Sum is a Leetcode problem recommended to the novice or is hard.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEasy(x) ::: x is an easy Leetcode problem.\nRecommend(x) ::: x is recommended to novices.\nStar(x, y) ::: x is starred by y users.\nHard(x) ::: x is a hard Leetcode problem.\nPublish(x, y) ::: x is published in year y.\nPremises:\n¬∃x (Easy(x) ∧ ¬(Star(x, 1000) ∨ ACRate(x, 20))) ::: No easy Leetcode problems have an AC rate lower than 20 percent.\n∀x (Recommend(x) → Easy(x)) ::: All Leetcode problems recommended to novices are easy.\n∀x (Easy(x) ∨ ¬(Star(x, 1000) ∨ ACRate(x, 20))) ::: Leetcode problems either have an AC rate lower than 20 percent or are starred by more than 1 thousand users.\n∀x (Hard(x) → Star(x, 1000)) ::: All hard Leetcode problems are starred by more than 1 thousand users.\n¬∃x (Publish(x, year2022) ∧ Star(x, 1000)) ::: No Leetcode problems published after 2022 are starred by more than 1 thousand users.\n¬Recommend(2sum) ∧ Hard(2sum) ::: 2Sum is not recommended to novices and hard.\n(Star(4sum, 1000) ∧ Publish(4sum, year2022)) ∨ ¬(Star(4sum, 1000) ∨ Publish(4sum, year2022)) ::: 4Sum is either starred by more than 1 thousand users and published after 2022, or neither starred by more than 1 thousand users nor published after 2022.\nConclusion:\nRecommend(4sum) ∨ Hard(4sum) ::: 4Sum"
    ]
  },
  {
    "id": "FOLIO_train_822",
    "context": "No easy Leetcode problems have an AC rate lower than 20 percent. All Leetcode problems recommended to novices are easy. Leetcode problems either have an AC rate lower than 20 percent or are starred by more than 1 thousand users. All hard Leetcode problems are starred by more than 1 thousand users. No Leetcode problems published after 2022 are starred by more than 1 thousand users. 2Sum is not recommended to novices and hard. 4Sum is either starred by more than 1 thousand users and published after 2022, or neither starred by more than 1 thousand users nor published after 2022.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? 4Sum is neither a 2Sum Leetcode problem recommended to the novice nor a Leetcode problem that's hard.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEasy(x) ::: x is an easy Leetcode problem.\nRecommend(x) ::: x is recommended to novices.\nStar(x, y) ::: x is starred by y users.\nHard(x) ::: x is a hard Leetcode problem.\nPublish(x, y) ::: x is published in year y.\nPremises:\n¬∃x (Easy(x) ∧ ¬(ACRate(x) < 20)) ::: No easy Leetcode problems have an AC rate lower than 20 percent.\n∀x (Recommend(x) → Easy(x)) ::: All Leetcode problems recommended to novices are easy.\n∀x (Easy(x) ∨ ¬(ACRate(x) < 20)) ::: Leetcode problems either have an AC rate lower than 20 percent or are starred by more than 1 thousand users.\n∀x (Hard(x) → Star(x, 1000)) ::: All hard Leetcode problems are starred by more than 1 thousand users.\n¬∃x (Publish(x, year2022) ∧ Star(x, 1000)) ::: No Leetcode problems published after 2022 are starred by more than 1 thousand users.\n¬Recommend(2sum) ∧ Hard(2sum) ::: 2Sum is not recommended to novices and hard.\n(Star(4sum, 1000) ∧ Publish(4sum, year2022)) ∨ ¬(Star(4sum, 1000) ∨ Publish(4sum, year2022)) ::: 4Sum is either starred by more than 1 thousand users and published after 2022, or neither starred by more than 1 thousand users nor published after 2022.\nConclusion:\n¬(Recommend(4sum) ∧ Hard(4sum)) ::: 4Sum is neither a 2Sum Leetcode problem recommended to the novice nor a Leetcode"
    ]
  },
  {
    "id": "FOLIO_train_823",
    "context": "Show Your Love is a song recorded by the South Korean boy band BtoB 4u. The lead single of the extended play Inside is Show Your Love. Show Your Love contains a hopeful message. BtoB 4u member Hyunsik wrote Show Your Love. There is a music video for Show Your Love.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Show your love wasn't written by a member of a boy band.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSong(x) ::: x is a song.\nRecord(x, y) ::: x is recorded by y.\nLeadSingle(x, y) ::: x is the lead single of y.\nExtendedPlay(x) ::: x is an extended play.\nMember(x, y) ::: x is a member of y.\nHopeful(x) ::: x contains a hopeful message.\nWrite(x, y) ::: x wrote y.\nMusicVideo(x) ::: there is a music video for x.\nPremises:\nSong(showYourLove) ∧ Record(showYourLove, btob4u) ::: Show Your Love is a song recorded by the South Korean boy band BtoB 4u.\nLeadSingle(showYourLove, inside) ::: The lead single of the extended play Inside is Show Your Love.\nHopeful(showYourLove) ::: Show Your Love contains a hopeful message.\nMember(hyunsik, btob4u) ∧ Write(hyunsik, showYourLove) ::: BtoB 4u member Hyunsik wrote Show Your Love.\nMusicVideo(showYourLove) ::: There is a music video for Show Your Love.\nConclusion:\n¬Write(hyunsik, showYourLove) ::: Show your love wasn't written by a member of a boy band.\n------\nProblem:\nThe 2019 film The Lion King is a remake of the 1994 film The Lion King. The 2019 film The Lion King is a computer-animated musical drama film. The 2019 film The Lion King is a remake of the 1994 film The Lion King. The 2019 film The Lion King is a remake of the 1994 film The Lion King. The 2019 film The Lion King is a remake of the 1994 film The Lion King. The 2019 film The Lion King is a remake of the 1994 film The Lion King. The 2019 film The"
    ]
  },
  {
    "id": "FOLIO_train_824",
    "context": "Show Your Love is a song recorded by the South Korean boy band BtoB 4u. The lead single of the extended play Inside is Show Your Love. Show Your Love contains a hopeful message. BtoB 4u member Hyunsik wrote Show Your Love. There is a music video for Show Your Love.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A lead single of inside contains a a hopeful message.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "###\nPredicates:\nSong(x) ::: x is a song.\nRecord(x, y) ::: x is recorded by y.\nLeadSingle(x, y) ::: x is the lead single of y.\nExtendedPlay(x) ::: x is an extended play.\nMember(x, y) ::: x is a member of y.\nWrite(x, y) ::: x wrote y.\nMessage(x) ::: x contains a message.\nHopeful(x) ::: x is hopeful.\nMusicVideo(x) ::: x is a music video.\nPremises:\nSong(showYourLove) ∧ Record(showYourLove, btob4u) ∧ LeadSingle(showYourLove, inside) ∧ Message(showYourLove) ∧ Hopeful(showYourLove) ∧ Member(hyunsik, btob4u) ∧ Write(hyunsik, showYourLove) ∧ MusicVideo(showYourLove) ::: Show Your Love is a song recorded by the South Korean boy band BtoB 4u. The lead single of the extended play Inside is Show Your Love. Show Your Love contains a hopeful message. BtoB 4u member Hyunsik wrote Show Your Love. There is a music video for Show Your Love.\nConclusion:\nMessage(inside) ∧ Hopeful(inside) ::: A lead single of inside contains a a hopeful message.\n------\nProblem:\nThe 2019–2020 Hong Kong protests were a series of demonstrations in Hong Kong. The 2019–2020 Hong Kong protests were a series of demonstrations in Hong Kong. The 2019–2020 Hong Kong protests were a series of demonstrations in Hong Kong. The 2019–2020 Hong Kong protests were a series of demonstrations in Hong Kong. The 2019–2020 Hong Kong protests were a series of demonstrations in Hong Kong. The 2019–2020 Hong Kong protests were a series of demonstrations in Hong"
    ]
  },
  {
    "id": "FOLIO_train_825",
    "context": "Show Your Love is a song recorded by the South Korean boy band BtoB 4u. The lead single of the extended play Inside is Show Your Love. Show Your Love contains a hopeful message. BtoB 4u member Hyunsik wrote Show Your Love. There is a music video for Show Your Love.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Hyunsik is Korean.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nKorean(x) ::: x is Korean.\nMember(x, y) ::: x is a member of y.\nSong(x) ::: x is a song.\nRecord(x, y) ::: x is recorded by y.\nSingle(x) ::: x is a single.\nExtendedPlay(x) ::: x is an extended play.\nLead(x, y) ::: x is the lead single of y.\nMessage(x) ::: x contains a message.\nHopeful(x) ::: x contains a hopeful message.\nWrite(x, y) ::: x wrote y.\nMusicVideo(x) ::: there is a music video for x.\nPremises:\nSong(showYourLove) ∧ Record(showYourLove, btob4u) ∧ Single(inside) ∧ Lead(showYourLove, inside) ∧ Message(showYourLove) ∧ Hopeful(showYourLove) ∧ Write(hyunsik, showYourLove) ∧ MusicVideo(showYourLove) ::: Show Your Love is a song recorded by the South Korean boy band BtoB 4u. The lead single of the extended play Inside is Show Your Love. Show Your Love contains a hopeful message. BtoB 4u member Hyunsik wrote Show Your Love. There is a music video for Show Your Love.\nConclusion:\nKorean(hyunsik) ::: Hyunsik is Korean.\n------\nProblem:\nThe 2019–20 coronavirus pandemic is an ongoing pandemic of coronavirus disease 2019 (COVID-19) caused by severe acute respiratory syndrome coronavirus 2 (SARS-CoV-2). The outbreak was first identified in Wuhan, China, in December 2019. The World Health Organization declared the outbreak a Public Health Emergency of International Concern on 30 January 2020 and a pandemic on 11 March 2020. As of 15 March 2020, more than"
    ]
  },
  {
    "id": "FOLIO_train_826",
    "context": "All tables are round. Some furniture are tables.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Some furniture are round.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTable(x) ::: x is a table.\nRound(x) ::: x is round.\nFurniture(x) ::: x is furniture.\nPremises:\n∀x (Table(x) → Round(x)) ::: All tables are round.\n∃x (Furniture(x) ∧ Table(x)) ::: Some furniture are tables.\nConclusion:\n∃x (Furniture(x) ∧ Round(x)) ::: Some furniture are round.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.\n###\nPredicates:\nDependent(x) ::: x is a person dependent on caffeine.\nDrinks(x) ::: x regularly drinks coffee.\nJokes(x) ::: x jokes about being addicted to caffeine.\nUnaware(x) ::: x is unaware that caffeine is a drug.\nStudent(x) ::: x is a student.\nPremises:\n∀x (Drinks(x) → Dep"
    ]
  },
  {
    "id": "FOLIO_train_827",
    "context": "All juvenile delinquents are maladjusted individuals. Some juvenile delinquents are products of broken homes.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Some maladjusted individuals are products of broken homes.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nJuvenileDelinquent(x) ::: x is a juvenile delinquent.\nMaladjusted(x) ::: x is a maladjusted individual.\nProduct(x, y) ::: x is a product of y.\nBrokenHome(x) ::: x is a broken home.\nPremises:\n∀x (JuvenileDelinquent(x) → Maladjusted(x)) ::: All juvenile delinquents are maladjusted individuals.\n∃x (JuvenileDelinquent(x) ∧ Product(x, brokenHome)) ::: Some juvenile delinquents are products of broken homes.\nConclusion:\n∃x (Maladjusted(x) ∧ Product(x, brokenHome)) ::: Some maladjusted individuals are products of broken homes.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.\n###\nPredicates:\nDependent(x) ::: x is a person dependent on caffeine.\nDrinks(x)"
    ]
  },
  {
    "id": "FOLIO_train_828",
    "context": "Either brain reading or brain decoding. All brain decoding is extracting information from BOLD signals. No extracting information from BOLD signals is without statistical pattern analysis. Writing a novel is without statistical pattern analysis. If multivoxel (pattern) analysis is without statistical pattern analysis and a brain reading, then multivoxel (pattern) analysis is without statistical pattern analysis and brain decoding.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Multivoxel (pattern) analysis is a brain decoding.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBrainReading(x) ::: x is a brain reading.\nBrainDecoding(x) ::: x is a brain decoding.\nExtractingInformationFromBoldSignals(x) ::: x is extracting information from BOLD signals.\nStatisticalPatternAnalysis(x) ::: x is statistical pattern analysis.\nWritingANovel(x) ::: x is writing a novel.\nMultivoxelPatternAnalysis(x) ::: x is multivoxel (pattern) analysis.\nPremises:\nBrainReading(x) ⊕ BrainDecoding(x) ::: Either brain reading or brain decoding.\n∀x (BrainDecoding(x) → ExtractingInformationFromBoldSignals(x)) ::: All brain decoding is extracting information from BOLD signals.\n∀x (ExtractingInformationFromBoldSignals(x) → ¬StatisticalPatternAnalysis(x)) ::: No extracting information from BOLD signals is without statistical pattern analysis.\nWritingANovel(x) → ¬StatisticalPatternAnalysis(x) ::: Writing a novel is without statistical pattern analysis.\n¬(MultivoxelPatternAnalysis(x) ∧ BrainReading(x)) → (MultivoxelPatternAnalysis(x) ∧ BrainDecoding(x)) ::: If multivoxel (pattern) analysis is without statistical pattern analysis and a brain reading, then multivoxel (pattern) analysis is without statistical pattern analysis and brain decoding.\nConclusion:\nBrainDecoding(multivoxelPatternAnalysis) ::: Multivoxel (pattern) analysis is a brain decoding.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.\nQuestion:\nB"
    ]
  },
  {
    "id": "FOLIO_train_829",
    "context": "Either brain reading or brain decoding. All brain decoding is extracting information from BOLD signals. No extracting information from BOLD signals is without statistical pattern analysis. Writing a novel is without statistical pattern analysis. If multivoxel (pattern) analysis is without statistical pattern analysis and a brain reading, then multivoxel (pattern) analysis is without statistical pattern analysis and brain decoding.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Multivoxel (pattern) analysis is the writing of a novel.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBrainReading(x) ::: x is brain reading.\nBrainDecoding(x) ::: x is brain decoding.\nExtractingInformationFromBOLDSignals(x) ::: x is extracting information from BOLD signals.\nStatisticalPatternAnalysis(x) ::: x is statistical pattern analysis.\nWritingANovel(x) ::: x is writing a novel.\nMultivoxelPatternAnalysis(x) ::: x is multivoxel (pattern) analysis.\nPremises:\nBrainReading(x) ⊕ BrainDecoding(x) ::: Either brain reading or brain decoding.\n∀x (BrainDecoding(x) → ExtractingInformationFromBOLDSignals(x)) ::: All brain decoding is extracting information from BOLD signals.\n∀x (ExtractingInformationFromBOLDSignals(x) → ¬StatisticalPatternAnalysis(x)) ::: No extracting information from BOLD signals is without statistical pattern analysis.\nWritingANovel(x) → ¬StatisticalPatternAnalysis(x) ::: Writing a novel is without statistical pattern analysis.\n(MultivoxelPatternAnalysis(x) ∧ ¬StatisticalPatternAnalysis(x)) → (MultivoxelPatternAnalysis(x) ∧ ¬StatisticalPatternAnalysis(x)) ∧ BrainDecoding(x) ::: If multivoxel (pattern) analysis is without statistical pattern analysis and a brain reading, then multivoxel (pattern) analysis is without statistical pattern analysis and brain decoding.\nConclusion:\n¬MultivoxelPatternAnalysis(x) ∨ WritingANovel(x) ::: Multivoxel (pattern) analysis is the writing of a novel.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffe"
    ]
  },
  {
    "id": "FOLIO_train_830",
    "context": "Either brain reading or brain decoding. All brain decoding is extracting information from BOLD signals. No extracting information from BOLD signals is without statistical pattern analysis. Writing a novel is without statistical pattern analysis. If multivoxel (pattern) analysis is without statistical pattern analysis and a brain reading, then multivoxel (pattern) analysis is without statistical pattern analysis and brain decoding.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Multivoxel (pattern) analysis is without statistical pattern analysis and writing a novel.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBrainReading(x) ::: x is brain reading.\nBrainDecoding(x) ::: x is brain decoding.\nExtractingInformationFromBoldSignals(x) ::: x is extracting information from BOLD signals.\nStatisticalPatternAnalysis(x) ::: x is statistical pattern analysis.\nWritingANovel(x) ::: x is writing a novel.\nMultivoxelPatternAnalysis(x) ::: x is multivoxel (pattern) analysis.\nPremises:\nBrainReading(x) ⊕ BrainDecoding(x) ::: Either brain reading or brain decoding.\n∀x (BrainDecoding(x) → ExtractingInformationFromBoldSignals(x)) ::: All brain decoding is extracting information from BOLD signals.\n∀x (ExtractingInformationFromBoldSignals(x) → ¬StatisticalPatternAnalysis(x)) ::: No extracting information from BOLD signals is without statistical pattern analysis.\nWritingANovel(x) → ¬StatisticalPatternAnalysis(x) ::: Writing a novel is without statistical pattern analysis.\n(MultivoxelPatternAnalysis(x) ∧ ¬StatisticalPatternAnalysis(x)) → (MultivoxelPatternAnalysis(x) ∧ ¬StatisticalPatternAnalysis(x)) ∧ BrainDecoding(x) ::: If multivoxel (pattern) analysis is without statistical pattern analysis and a brain reading, then multivoxel (pattern) analysis is without statistical pattern analysis and brain decoding.\nConclusion:\nMultivoxelPatternAnalysis(x) ∧ ¬StatisticalPatternAnalysis(x) ∧ WritingANovel(x) ::: Multivoxel (pattern) analysis is without statistical pattern analysis and writing a novel.\n------"
    ]
  },
  {
    "id": "FOLIO_train_831",
    "context": "Either brain reading or brain decoding. All brain decoding is extracting information from BOLD signals. No extracting information from BOLD signals is without statistical pattern analysis. Writing a novel is without statistical pattern analysis. If multivoxel (pattern) analysis is without statistical pattern analysis and a brain reading, then multivoxel (pattern) analysis is without statistical pattern analysis and brain decoding.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Multivoxel (pattern) analysis is without statistical pattern analysis or writing a novel.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBrainReading(x) ::: x is brain reading.\nBrainDecoding(x) ::: x is brain decoding.\nExtractingInformationFromBOLDSignals(x) ::: x is extracting information from BOLD signals.\nStatisticalPatternAnalysis(x) ::: x is statistical pattern analysis.\nWritingANovel(x) ::: x is writing a novel.\nPremises:\nBrainReading(x) ⊕ BrainDecoding(x) ::: Either brain reading or brain decoding.\n∀x (BrainDecoding(x) → ExtractingInformationFromBOLDSignals(x)) ::: All brain decoding is extracting information from BOLD signals.\n¬ExtractingInformationFromBOLDSignals(x) → ¬StatisticalPatternAnalysis(x) ::: No extracting information from BOLD signals is without statistical pattern analysis.\n¬StatisticalPatternAnalysis(writingANovel) ::: Writing a novel is without statistical pattern analysis.\n¬StatisticalPatternAnalysis(multivoxelPatternAnalysis) ∧ BrainReading(multivoxelPatternAnalysis) → ¬StatisticalPatternAnalysis(multivoxelPatternAnalysis) ∧ BrainDecoding(multivoxelPatternAnalysis) ::: If multivoxel (pattern) analysis is without statistical pattern analysis and a brain reading, then multivoxel (pattern) analysis is without statistical pattern analysis and brain decoding.\nConclusion:\n¬StatisticalPatternAnalysis(multivoxelPatternAnalysis) ∨ WritingANovel(multivoxelPatternAnalysis) ::: Multivoxel (pattern) analysis is without statistical pattern analysis or writing a novel.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke"
    ]
  },
  {
    "id": "FOLIO_train_832",
    "context": "Either brain reading or brain decoding. All brain decoding is extracting information from BOLD signals. No extracting information from BOLD signals is without statistical pattern analysis. Writing a novel is without statistical pattern analysis. If multivoxel (pattern) analysis is without statistical pattern analysis and a brain reading, then multivoxel (pattern) analysis is without statistical pattern analysis and brain decoding.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Multivoxel (pattern) analysis is either without statistical pattern analysis or writing a novel.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBrainReading(x) ::: x is brain reading.\nBrainDecoding(x) ::: x is brain decoding.\nExtractingInformationFromBoldSignals(x) ::: x is extracting information from BOLD signals.\nStatisticalPatternAnalysis(x) ::: x is statistical pattern analysis.\nWritingANovel(x) ::: x is writing a novel.\nMultivoxelPatternAnalysis(x) ::: x is multivoxel (pattern) analysis.\nPremises:\nBrainReading(x) ⊕ BrainDecoding(x) ::: Either brain reading or brain decoding.\n∀x (BrainDecoding(x) → ExtractingInformationFromBoldSignals(x)) ::: All brain decoding is extracting information from BOLD signals.\n∀x (ExtractingInformationFromBoldSignals(x) → ¬StatisticalPatternAnalysis(x)) ::: No extracting information from BOLD signals is without statistical pattern analysis.\nWritingANovel(x) → ¬StatisticalPatternAnalysis(x) ::: Writing a novel is without statistical pattern analysis.\n(MultivoxelPatternAnalysis(x) ∧ ¬StatisticalPatternAnalysis(x)) → (MultivoxelPatternAnalysis(x) ∧ ¬StatisticalPatternAnalysis(x)) ∧ BrainDecoding(x) ::: If multivoxel (pattern) analysis is without statistical pattern analysis and a brain reading, then multivoxel (pattern) analysis is without statistical pattern analysis and brain decoding.\nConclusion:\n(MultivoxelPatternAnalysis(x) ∨ WritingANovel(x)) ∧ ¬StatisticalPatternAnalysis(x) ::: Multivoxel (pattern) analysis is either without statistical pattern analysis or writing a novel."
    ]
  },
  {
    "id": "FOLIO_train_833",
    "context": "Either brain reading or brain decoding. All brain decoding is extracting information from BOLD signals. No extracting information from BOLD signals is without statistical pattern analysis. Writing a novel is without statistical pattern analysis. If multivoxel (pattern) analysis is without statistical pattern analysis and a brain reading, then multivoxel (pattern) analysis is without statistical pattern analysis and brain decoding.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If multivoxel (pattern) analysis is writing a novel, then multivoxel (pattern) analysis is neither without statistical pattern analysis nor writing a novel.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBrainReading(x) ::: x is brain reading.\nBrainDecoding(x) ::: x is brain decoding.\nExtractingInformationFromBOLDSignals(x) ::: x is extracting information from BOLD signals.\nStatisticalPatternAnalysis(x) ::: x is statistical pattern analysis.\nWritingANovel(x) ::: x is writing a novel.\nMultivoxelPatternAnalysis(x) ::: x is multivoxel (pattern) analysis.\nPremises:\nBrainReading(x) ⊕ BrainDecoding(x) ::: Either brain reading or brain decoding.\n∀x (BrainDecoding(x) → ExtractingInformationFromBOLDSignals(x)) ::: All brain decoding is extracting information from BOLD signals.\n∀x (ExtractingInformationFromBOLDSignals(x) → ¬StatisticalPatternAnalysis(x)) ::: No extracting information from BOLD signals is without statistical pattern analysis.\nWritingANovel(x) → ¬StatisticalPatternAnalysis(x) ::: Writing a novel is without statistical pattern analysis.\n¬(MultivoxelPatternAnalysis(x) ∧ BrainReading(x)) → (MultivoxelPatternAnalysis(x) ∧ BrainDecoding(x)) ::: If multivoxel (pattern) analysis is without statistical pattern analysis and a brain reading, then multivoxel (pattern) analysis is without statistical pattern analysis and brain decoding.\nConclusion:\n¬(MultivoxelPatternAnalysis(x) ∧ WritingANovel(x)) → (MultivoxelPatternAnalysis(x) ∧ ¬WritingANovel(x)) ::: If multivoxel (pattern) analysis is writing a novel, then multivoxel"
    ]
  },
  {
    "id": "FOLIO_train_834",
    "context": "If you have room for dessert, you have room for broccoli. Everyone at Luis's dinner party has room for dessert, including Luis. Mauricia does not have room for broccoli. Luis's dinner party is the first ever dinner party that Allison has attended. Gustave has room for both broccoli and asparagus. Broccoli and asparagus are both vegetables.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Allison has room for broccoli.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRoom(x, y) ::: x has room for y.\nVegetable(x) ::: x is a vegetable.\nDinnerParty(x) ::: x is a dinner party.\nAttend(x, y) ::: x attends y.\nFirst(x, y) ::: x is the first y.\nPremises:\nRoom(luis, dessert) ∧ Room(luis, broccoli) ∧ Room(gustave, broccoli) ∧ Room(gustave, asparagus) ::: If you have room for dessert, you have room for broccoli. Everyone at Luis's dinner party has room for dessert, including Luis. Mauricia does not have room for broccoli. Luis's dinner party is the first ever dinner party that Allison has attended. Gustave has room for both broccoli and asparagus. Broccoli and asparagus are both vegetables.\nConclusion:\nRoom(allison, broccoli) ::: Allison has room for broccoli.\n------\nProblem:\nThe only people who are not in the room are the people who are not in the room. The only people who are in the room are the people who are in the room.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The only people who are in the room are the people who are not in the room.\n###\nPredicates:\nIn(x, y) ::: x is in y.\nRoom(x) ::: x is a room.\nPremises:\n¬∃x (¬In(x, room) ∧ ¬In(x, room)) ::: The only people who are not in the room are the people who are not in the room.\n¬∃x (In(x, room"
    ]
  },
  {
    "id": "FOLIO_train_835",
    "context": "If you have room for dessert, you have room for broccoli. Everyone at Luis's dinner party has room for dessert, including Luis. Mauricia does not have room for broccoli. Luis's dinner party is the first ever dinner party that Allison has attended. Gustave has room for both broccoli and asparagus. Broccoli and asparagus are both vegetables.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mauricia is at Luis's dinner party.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDessert(x) ::: x is a dessert.\nBroccoli(x) ::: x is broccoli.\nAsparagus(x) ::: x is asparagus.\nVegetable(x) ::: x is a vegetable.\nRoom(x, y) ::: x has room for y.\nDinnerParty(x) ::: x is a dinner party.\nAttend(x, y) ::: x attends y.\nFirst(x, y) ::: x is the first y.\nPremises:\n∀x (Dessert(x) → Room(x, broccoli)) ::: If you have room for dessert, you have room for broccoli.\nRoom(luis, dessert) ∧ Room(luis, dessert) ::: Everyone at Luis's dinner party has room for dessert, including Luis.\n¬Room(mauricia, broccoli) ::: Mauricia does not have room for broccoli.\nAttend(allison, luis'sDinnerParty) ∧ First(luis'sDinnerParty, attend(allison, _)) ::: Luis's dinner party is the first ever dinner party that Allison has attended.\nRoom(gustave, broccoli) ∧ Room(gustave, asparagus) ::: Gustave has room for both broccoli and asparagus.\nBroccoli(broccoli) ∧ Asparagus(asparagus) ∧ Vegetable(broccoli) ∧ Vegetable(asparagus) ::: Broccoli and asparagus are both vegetables.\nConclusion:\nRoom(mauricia, broccoli) ::: Mauricia is at Luis's dinner party.\n------\nProblem:\nThe"
    ]
  },
  {
    "id": "FOLIO_train_836",
    "context": "If you have room for dessert, you have room for broccoli. Everyone at Luis's dinner party has room for dessert, including Luis. Mauricia does not have room for broccoli. Luis's dinner party is the first ever dinner party that Allison has attended. Gustave has room for both broccoli and asparagus. Broccoli and asparagus are both vegetables.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Gustav has room for dessert.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRoom(x, y) ::: x has room for y.\nVegetable(x) ::: x is a vegetable.\nDessert(x) ::: x is a dessert.\nBroccoli(x) ::: x is broccoli.\nAsparagus(x) ::: x is asparagus.\nPremises:\nRoom(luis, dessert) ∧ Room(everyone, dessert) ∧ Room(mauricia, dessert) ∧ Room(mauricia, broccoli) ∧ Room(allison, dessert) ∧ Room(gustave, broccoli) ∧ Room(gustave, asparagus) ∧ Vegetable(broccoli) ∧ Vegetable(asparagus) ::: If you have room for dessert, you have room for broccoli. Everyone at Luis's dinner party has room for dessert, including Luis. Mauricia does not have room for broccoli. Luis's dinner party is the first ever dinner party that Allison has attended. Gustave has room for both broccoli and asparagus. Broccoli and asparagus are both vegetables.\nConclusion:\nRoom(gustave, dessert) ::: Gustav has room for dessert.\n------\nProblem:\nThe only people who are not in the room are the people who are not in the room. The only people who are in the room are the people who are in the room.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The only people who are in the room are the people who are not in the room.\nBased on the above information, is the following statement true, false, or uncertain? The only people who are not in the room are the people who are in the room.\n###"
    ]
  },
  {
    "id": "FOLIO_train_837",
    "context": "Imagine Dragons is an American pop rock band. The lead singer of Imagine Dragons is Dan. Dan is also a songwriter. All lead singers are singers. All singers are musicians. Demons is one of the most popular singles of Imagine Dragons. Some singles of Imagine Dragons have been on Billboard Hot 100.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Some rock band has a songwriter.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBand(x) ::: x is a band.\nPopRockBand(x) ::: x is a pop rock band.\nLeadSinger(x, y) ::: x is the lead singer of y.\nSongwriter(x) ::: x is a songwriter.\nSinger(x) ::: x is a singer.\nMusician(x) ::: x is a musician.\nSingle(x) ::: x is a single.\nPopular(x) ::: x is popular.\nBillboardHot100(x) ::: x has been on Billboard Hot 100.\nPremises:\nBand(imagineDragons) ∧ PopRockBand(imagineDragons) ∧ LeadSinger(dan, imagineDragons) ∧ Songwriter(dan) ::: Imagine Dragons is an American pop rock band. The lead singer of Imagine Dragons is Dan. Dan is also a songwriter.\n∀x (LeadSinger(x, y) → Singer(x)) ::: All lead singers are singers.\n∀x (Singer(x) → Musician(x)) ::: All singers are musicians.\nSingle(demons) ∧ Popular(demons) ::: Demons is one of the most popular singles of Imagine Dragons.\n∃x (Single(x) ∧ BillboardHot100(x)) ::: Some singles of Imagine Dragons have been on Billboard Hot 100.\nConclusion:\n∃x (Band(x) ∧ Songwriter(x)) ::: Some rock band has a songwriter.\n------\nProblem:\nThe first season of the American television series The Flash premiered on The CW on October 7, 2014, and concluded on May 19, 2015, after airing 2"
    ]
  },
  {
    "id": "FOLIO_train_838",
    "context": "Imagine Dragons is an American pop rock band. The lead singer of Imagine Dragons is Dan. Dan is also a songwriter. All lead singers are singers. All singers are musicians. Demons is one of the most popular singles of Imagine Dragons. Some singles of Imagine Dragons have been on Billboard Hot 100.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Dan is not a musician.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBand(x) ::: x is a band.\nLeadSinger(x, y) ::: x is the lead singer of y.\nSongwriter(x) ::: x is a songwriter.\nSinger(x) ::: x is a singer.\nMusician(x) ::: x is a musician.\nSingle(x) ::: x is a single.\nPopular(x) ::: x is popular.\nPremises:\nBand(imagineDragons) ∧ LeadSinger(dan, imagineDragons) ∧ Songwriter(dan) ::: Imagine Dragons is an American pop rock band. The lead singer of Imagine Dragons is Dan. Dan is also a songwriter.\n∀x (LeadSinger(x, y) → Singer(x)) ::: All lead singers are singers.\n∀x (Singer(x) → Musician(x)) ::: All singers are musicians.\nSingle(demons) ∧ Popular(demons) ::: Demons is one of the most popular singles of Imagine Dragons.\n∃x (Single(x) ∧ Band(imagineDragons) ∧ Popular(x)) ::: Some singles of Imagine Dragons have been on Billboard Hot 100.\nConclusion:\n¬Musician(dan) ::: Dan is not a musician.\n------\nProblem:\nThe first person to walk on the moon was Neil Armstrong. Neil Armstrong was an American astronaut. Neil Armstrong was the first person to walk on the moon. Neil Armstrong was the first person to walk on the moon.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Neil Armstrong was the first person to walk on the moon.\nBased on the above information, is the following statement true, false, or uncertain? Neil Armstrong was"
    ]
  },
  {
    "id": "FOLIO_train_839",
    "context": "Imagine Dragons is an American pop rock band. The lead singer of Imagine Dragons is Dan. Dan is also a songwriter. All lead singers are singers. All singers are musicians. Demons is one of the most popular singles of Imagine Dragons. Some singles of Imagine Dragons have been on Billboard Hot 100.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Demons has been on Billboard Hot 100.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBand(x) ::: x is a band.\nLeadSinger(x, y) ::: x is the lead singer of y.\nSongwriter(x) ::: x is a songwriter.\nSinger(x) ::: x is a singer.\nMusician(x) ::: x is a musician.\nSingle(x) ::: x is a single.\nPopular(x) ::: x is popular.\nPremises:\nBand(imagineDragons) ∧ LeadSinger(dan, imagineDragons) ∧ Songwriter(dan) ::: Imagine Dragons is an American pop rock band. The lead singer of Imagine Dragons is Dan. Dan is also a songwriter.\n∀x (LeadSinger(x, y) → Singer(x)) ::: All lead singers are singers.\n∀x (Singer(x) → Musician(x)) ::: All singers are musicians.\nSingle(demons) ∧ Popular(demons) ::: Demons is one of the most popular singles of Imagine Dragons.\n∃x (Single(x) ∧ Band(imagineDragons) ∧ Popular(x)) ::: Some singles of Imagine Dragons have been on Billboard Hot 100.\nConclusion:\nPopular(demons) ∧ Single(demons) ∧ Band(imagineDragons) ::: Demons has been on Billboard Hot 100.\n------\nProblem:\nThe Beatles were an English rock band. The Beatles were formed in Liverpool in 1960. The Beatles were the most commercially successful and critically acclaimed act in the history of popular music. The Beatles were the best-selling band in history. The Beatles were the best-selling music artists in the United States. The Beatles were the best-selling music artists"
    ]
  },
  {
    "id": "FOLIO_train_840",
    "context": "All bread is food. Some sandwiches are bread. All food is edible. No edible things are poisonous. Deodorant is poisonous.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Deodorant is a sandwich.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBread(x) ::: x is bread.\nSandwich(x) ::: x is a sandwich.\nFood(x) ::: x is food.\nEdible(x) ::: x is edible.\nPoisonous(x) ::: x is poisonous.\nDeodorant(x) ::: x is deodorant.\nPremises:\n∀x (Bread(x) → Food(x)) ::: All bread is food.\n∃x (Sandwich(x) ∧ Bread(x)) ::: Some sandwiches are bread.\n∀x (Food(x) → Edible(x)) ::: All food is edible.\n∀x (Edible(x) → ¬Poisonous(x)) ::: No edible things are poisonous.\nPoisonous(deodorant) ::: Deodorant is poisonous.\nConclusion:\n¬Sandwich(deodorant) ::: Deodorant is a sandwich.\n------"
    ]
  },
  {
    "id": "FOLIO_train_841",
    "context": "All bread is food. Some sandwiches are bread. All food is edible. No edible things are poisonous. Deodorant is poisonous.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Deodorant is a sandwich and bread.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBread(x) ::: x is bread.\nSandwich(x) ::: x is a sandwich.\nFood(x) ::: x is food.\nEdible(x) ::: x is edible.\nPoisonous(x) ::: x is poisonous.\nDeodorant(x) ::: x is deodorant.\nPremises:\n∀x (Bread(x) → Food(x)) ::: All bread is food.\n∃x (Sandwich(x) ∧ Bread(x)) ::: Some sandwiches are bread.\n∀x (Food(x) → Edible(x)) ::: All food is edible.\n¬∃x (Edible(x) ∧ Poisonous(x)) ::: No edible things are poisonous.\nPoisonous(deodorant) ::: Deodorant is poisonous.\nConclusion:\n¬(Sandwich(deodorant) ∧ Bread(deodorant)) :::"
    ]
  },
  {
    "id": "FOLIO_train_842",
    "context": "All bread is food. Some sandwiches are bread. All food is edible. No edible things are poisonous. Deodorant is poisonous.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If deodorant is a loaf of bread, then deodorant is not a sandwich.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBread(x) ::: x is bread.\nSandwich(x) ::: x is a sandwich.\nFood(x) ::: x is food.\nEdible(x) ::: x is edible.\nPoisonous(x) ::: x is poisonous.\nDeodorant(x) ::: x is deodorant.\nPremises:\n∀x (Bread(x) → Food(x)) ::: All bread is food.\n∃x (Sandwich(x) ∧ Bread(x)) ::: Some sandwiches are bread.\n∀x (Food(x) → Edible(x)) ::: All food is edible.\n¬∃x (Edible(x) ∧ Poisonous(x)) ::: No edible things are poisonous.\nPoisonous(deodorant) ::: Deodorant is poisonous.\nConclusion:\n¬(Deodorant(x) ∧ Bread(x)) → ¬(Deodor"
    ]
  },
  {
    "id": "FOLIO_train_843",
    "context": "Common utilities include water, electricity, gas, heating, sewer, trash, and recycling. Many apartment rents cover the cost of water and electricity. Susan lives in an apartment where the rent covers all utilities. The rent of the apartment where Ava lives does not cover any utility expenses. Noah lives in an apartment where the rent does not cover heating.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Noah needs to pay the water bill.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nUtility(x) ::: x is a utility.\nCover(x, y) ::: x covers y.\nRent(x, y) ::: x is the rent of y.\nApartment(x) ::: x is an apartment.\nLive(x, y) ::: x lives in y.\nPremises:\nUtility(water) ∧ Utility(electricity) ∧ Utility(gas) ∧ Utility(heating) ∧ Utility(sewer) ∧ Utility(trash) ∧ Utility(recycling) ::: Common utilities include water, electricity, gas, heating, sewer, trash, and recycling.\nMany(apartmentRent) ∧ Cover(apartmentRent, water) ∧ Cover(apartmentRent, electricity) ::: Many apartment rents cover the cost of water and electricity.\nLive(susan, apartment) ∧ Rent(apartment,"
    ]
  },
  {
    "id": "FOLIO_train_844",
    "context": "Common utilities include water, electricity, gas, heating, sewer, trash, and recycling. Many apartment rents cover the cost of water and electricity. Susan lives in an apartment where the rent covers all utilities. The rent of the apartment where Ava lives does not cover any utility expenses. Noah lives in an apartment where the rent does not cover heating.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Noah and Ava both need to pay the heating bill.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nUtility(x) ::: x is a utility.\nCover(x, y) ::: x covers y.\nRent(x, y) ::: x is the rent of y.\nApartment(x) ::: x is an apartment.\nLive(x, y) ::: x lives in y.\nPremises:\nUtility(water) ∧ Utility(electricity) ∧ Utility(gas) ∧ Utility(heating) ∧ Utility(sewer) ∧ Utility(trash) ∧ Utility(recycling) ::: Common utilities include water, electricity, gas, heating, sewer, trash, and recycling.\nMany(apartmentRent) ∧ Cover(apartmentRent, water) ∧ Cover(apartmentRent, electricity) ::: Many apartment rents cover the cost of water and electricity.\nLive(susan, apartment) ∧ Rent(apartment,"
    ]
  },
  {
    "id": "FOLIO_train_845",
    "context": "Common utilities include water, electricity, gas, heating, sewer, trash, and recycling. Many apartment rents cover the cost of water and electricity. Susan lives in an apartment where the rent covers all utilities. The rent of the apartment where Ava lives does not cover any utility expenses. Noah lives in an apartment where the rent does not cover heating.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Susan does not need to pay the water bill.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nUtility(x) ::: x is a utility.\nCover(x, y) ::: x covers y.\nRent(x, y) ::: x is the rent of y.\nApartment(x) ::: x is an apartment.\nLive(x, y) ::: x lives in y.\nPremises:\nUtility(water) ∧ Utility(electricity) ∧ Utility(gas) ∧ Utility(heating) ∧ Utility(sewer) ∧ Utility(trash) ∧ Utility(recycling) ::: Common utilities include water, electricity, gas, heating, sewer, trash, and recycling.\nMany(apartmentRent) ∧ Cover(apartmentRent, water) ∧ Cover(apartmentRent, electricity) ::: Many apartment rents cover the cost of water and electricity.\nLive(susan, apartment) ∧ Rent(apartment,"
    ]
  },
  {
    "id": "FOLIO_train_846",
    "context": "All clothes are products. No products are perfect. All dresses are clothes. All skirts are dresses. If Nike is clothes, then Nike is perfect and a dress.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Nike is perfect.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nClothes(x) ::: x is clothes.\nProduct(x) ::: x is a product.\nPerfect(x) ::: x is perfect.\nDress(x) ::: x is a dress.\nSkirts(x) ::: x is a skirt.\nPremises:\n∀x (Clothes(x) → Product(x)) ::: All clothes are products.\n¬∃x (Product(x) ∧ Perfect(x)) ::: No products are perfect.\n∀x (Dress(x) → Clothes(x)) ::: All dresses are clothes.\n∀x (Skirts(x) → Dress(x)) ::: All skirts are dresses.\n(Clothes(nike) → (Perfect(nike) ∧ Dress(nike))) ::: If Nike is clothes, then Nike is perfect and a dress.\nConclusion:\nPerfect(nike) ::: Nike is perfect.\n------"
    ]
  },
  {
    "id": "FOLIO_train_847",
    "context": "All clothes are products. No products are perfect. All dresses are clothes. All skirts are dresses. If Nike is clothes, then Nike is perfect and a dress.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Nike is a skirt.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nClothes(x) ::: x is clothes.\nProduct(x) ::: x is a product.\nPerfect(x) ::: x is perfect.\nDress(x) ::: x is a dress.\nSkirts(x) ::: x is a skirt.\nPremises:\n∀x (Clothes(x) → Product(x)) ::: All clothes are products.\n¬∃x (Product(x) ∧ Perfect(x)) ::: No products are perfect.\n∀x (Dress(x) → Clothes(x)) ::: All dresses are clothes.\n∀x (Skirts(x) → Dress(x)) ::: All skirts are dresses.\n(Clothes(nike) → (Perfect(nike) ∧ Dress(nike))) ::: If Nike is clothes, then Nike is perfect and a dress.\nConclusion:\n¬Skirts(nike) ::: Nike is a skirt"
    ]
  },
  {
    "id": "FOLIO_train_848",
    "context": "All clothes are products. No products are perfect. All dresses are clothes. All skirts are dresses. If Nike is clothes, then Nike is perfect and a dress.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Nike is not a skirt.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nClothes(x) ::: x is clothes.\nProduct(x) ::: x is a product.\nPerfect(x) ::: x is perfect.\nDress(x) ::: x is a dress.\nSkirts(x) ::: x is a skirt.\nPremises:\n∀x (Clothes(x) → Product(x)) ::: All clothes are products.\n¬∃x (Product(x) ∧ Perfect(x)) ::: No products are perfect.\n∀x (Dress(x) → Clothes(x)) ::: All dresses are clothes.\n∀x (Skirts(x) → Dress(x)) ::: All skirts are dresses.\n(Clothes(nike) → (Perfect(nike) ∧ Dress(nike))) ::: If Nike is clothes, then Nike is perfect and a dress.\nConclusion:\n¬Skirts(nike) ::: Nike is not a sk"
    ]
  },
  {
    "id": "FOLIO_train_849",
    "context": "All pets are animals. Pets can be either a dog or a cat. If a person has a pet, they care for that pet. Dogs and Cats can be naughty. Pets who are naughty are not liked as much. Charlie has a naughty pet dog named Leo.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Leo is an animal.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPet(x) ::: x is a pet.\nAnimal(x) ::: x is an animal.\nDog(x) ::: x is a dog.\nCat(x) ::: x is a cat.\nNaughty(x) ::: x is naughty.\nLike(x, y) ::: x likes y.\nCare(x, y) ::: x cares for y.\nPremises:\n∀x (Pet(x) → Animal(x)) ::: All pets are animals.\nPet(x) ∨ Cat(x) ::: Pets can be either a dog or a cat.\nCare(x, y) → Pet(y) ::: If a person has a pet, they care for that pet.\nDog(x) ∨ Cat(x) → Naughty(x) ::: Dogs and Cats can be naughty.\nNaughty(x) → ¬Like(x, y) ::: Pets"
    ]
  },
  {
    "id": "FOLIO_train_850",
    "context": "All pets are animals. Pets can be either a dog or a cat. If a person has a pet, they care for that pet. Dogs and Cats can be naughty. Pets who are naughty are not liked as much. Charlie has a naughty pet dog named Leo.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Charlie does not like Leo and does not care for Leo.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPet(x) ::: x is a pet.\nAnimal(x) ::: x is an animal.\nDog(x) ::: x is a dog.\nCat(x) ::: x is a cat.\nNaughty(x) ::: x is naughty.\nLike(x, y) ::: x likes y.\nCare(x, y) ::: x cares for y.\nPremises:\n∀x (Pet(x) → Animal(x)) ::: All pets are animals.\nPet(x) ∨ Cat(x) ::: Pets can be either a dog or a cat.\n∀x (Pet(x) → Care(x, x)) ::: If a person has a pet, they care for that pet.\n∀x (Dog(x) ∨ Cat(x)) ::: Dogs and Cats can be naughty.\n∀x (Naughty(x) → ¬Like(x, x)) ::: Pets who are naughty are not liked as much.\nPet(leo) ∧ Dog(leo) ∧ Naughty(leo) ∧ Care(charlie, leo) ::: Charlie has a naughty pet dog named Leo.\nConclusion:\n¬Like(charlie, leo) ∧ ¬Care(charlie, leo) ::: Charlie does not like Leo and does not care for Leo.\n------"
    ]
  },
  {
    "id": "FOLIO_train_851",
    "context": "All pets are animals. Pets can be either a dog or a cat. If a person has a pet, they care for that pet. Dogs and Cats can be naughty. Pets who are naughty are not liked as much. Charlie has a naughty pet dog named Leo.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Dogs are always not naughty.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPet(x) ::: x is a pet.\nAnimal(x) ::: x is an animal.\nDog(x) ::: x is a dog.\nCat(x) ::: x is a cat.\nNaughty(x) ::: x is naughty.\nCare(x, y) ::: x cares for y.\nHave(x, y) ::: x has y.\nLike(x, y) ::: x likes y.\nPremises:\n∀x (Pet(x) → Animal(x)) ::: All pets are animals.\nPet(x) ∨ Cat(x) ::: Pets can be either a dog or a cat.\nHave(x, y) → Care(x, y) ::: If a person has a pet, they care for that pet.\nDog(x) ∨ Cat(x) → Naughty(x) ::: Dogs and Cats can be naughty.\nNaughty(x) → ¬Like(x, y) ::: Pets who are naughty are not liked as much.\nHave(charlie, leo) ∧ Dog(leo) ∧ Naughty(leo) ::: Charlie has a naughty pet dog named Leo.\nConclusion:\n¬∀x (Dog(x) → ¬Naughty(x)) ::: Dogs are always not naughty.\n------\nProblem:"
    ]
  },
  {
    "id": "FOLIO_train_852",
    "context": "Surprises are either fun or dreadful. All scares are surprises.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? All scares are fun.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSurprise(x) ::: x is a surprise.\nFun(x) ::: x is fun.\nDreadful(x) ::: x is dreadful.\nScares(x) ::: x is a scare.\nPremises:\n∀x (Surprise(x) → (Fun(x) ∨ Dreadful(x))) ::: Surprises are either fun or dreadful.\n∀x (Scares(x) → Surprise(x)) ::: All scares are surprises.\nConclusion:\n∀x (Scares(x) → Fun(x)) ::: All scares are fun.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to"
    ]
  },
  {
    "id": "FOLIO_train_853",
    "context": "All books written by Cixin Liu have sold more than 1 million copies. Some books that have won the Hugo Award were written by Cixin Liu. All books about the future are influenced by Isaac Asimov. The book the Three Body Problem has sold more than 1 million copies. The Three Body Problem is about the future.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Three Body Problem won the Hugo Award.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBook(x) ::: x is a book.\nWrittenBy(x, y) ::: x is written by y.\nSold(x, y) ::: x has sold more than y copies.\nWon(x, y) ::: x has won y.\nHugoAward(x) ::: x is the Hugo Award.\nAbout(x, y) ::: x is about y.\nFuture(x) ::: x is about the future.\nInfluencedBy(x, y) ::: x is influenced by y.\nIsaacAsimov(x) ::: x is Isaac Asimov.\nPremises:\n∀x (WrittenBy(x, cixin) → Sold(x, 1000000)) ::: All books written by Cixin Liu have sold more than 1 million copies.\n∃x (Won(x, hugoAward) ∧ WrittenBy(x, cixin)) ::: Some books that have won the Hugo Award were written by Cixin Liu.\n∀x (Future(x) → InfluencedBy(x, isaacAsimov)) ::: All books about the future are influenced by Isaac Asimov.\nSold(threeBodyProblem, 1000000) ::: The book the Three Body Problem has sold more than 1 million copies.\nAbout(threeBodyProblem, future) ::: The Three Body Problem is about"
    ]
  },
  {
    "id": "FOLIO_train_854",
    "context": "All books written by Cixin Liu have sold more than 1 million copies. Some books that have won the Hugo Award were written by Cixin Liu. All books about the future are influenced by Isaac Asimov. The book the Three Body Problem has sold more than 1 million copies. The Three Body Problem is about the future.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Three Body Problem was influenced by Isaac Asimov.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBook(x) ::: x is a book.\nWrittenBy(x, y) ::: x is written by y.\nSold(x, y) ::: x has sold more than y copies.\nWon(x, y) ::: x has won y.\nHugoAward(x) ::: x is the Hugo Award.\nAbout(x, y) ::: x is about y.\nInfluencedBy(x, y) ::: x is influenced by y.\nPremises:\n∀x (WrittenBy(x, cixin) → Sold(x, 1000000)) ::: All books written by Cixin Liu have sold more than 1 million copies.\n∃x (Won(x, hugoAward) ∧ WrittenBy(x, cixin)) ::: Some books that have won the Hugo Award were written by Cixin Liu.\n∀x (About(x, future) → InfluencedBy(x, isaacAsimov)) ::: All books about the future are influenced by Isaac Asimov.\nSold(threeBodyProblem, 1000000) ::: The book the Three Body Problem has sold more than 1 million copies.\nAbout(threeBodyProblem, future) ::: The Three Body Problem is about the future.\nConclusion:\nInfluencedBy(threeBodyProblem, isaacAsimov) ::: The Three Body Problem"
    ]
  },
  {
    "id": "FOLIO_train_855",
    "context": "All books written by Cixin Liu have sold more than 1 million copies. Some books that have won the Hugo Award were written by Cixin Liu. All books about the future are influenced by Isaac Asimov. The book the Three Body Problem has sold more than 1 million copies. The Three Body Problem is about the future.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Three Body Problem was written by Cixin Liu.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBook(x) ::: x is a book.\nWrittenBy(x, y) ::: x is written by y.\nSold(x, y) ::: x has sold more than y copies.\nHugoAward(x) ::: x has won the Hugo Award.\nAbout(x, y) ::: x is about y.\nInfluence(x, y) ::: x is influenced by y.\nPremises:\n∀x (WrittenBy(x, cixin) → Sold(x, 1000000)) ::: All books written by Cixin Liu have sold more than 1 million copies.\n∃x (WrittenBy(x, cixin) ∧ HugoAward(x)) ::: Some books that have won the Hugo Award were written by Cixin Liu.\n∀x (About(x, future) → Influence(x, isaac)) ::: All books about the future are influenced by Isaac Asimov.\nSold(threeBodyProblem, 1000000) ::: The book the Three Body Problem has sold more than 1 million copies.\nAbout(threeBodyProblem, future) ::: The Three Body Problem is about the future.\nConclusion:\nWrittenBy(threeBodyProblem, cixin) ::: The Three Body Problem was written by Cixin Liu.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine"
    ]
  },
  {
    "id": "FOLIO_train_856",
    "context": "Some students who major in computer science get up early. If a student gets up early, then he/she will study in the morning. All students studying in the morning are good at time management. All students good at time management are popular among students. James is not popular among students.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James majors in computer science.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMajor(x, y) ::: x majors in y.\nGetUpEarly(x) ::: x gets up early.\nStudy(x, y) ::: x studies in y.\nGoodAt(x, y) ::: x is good at y.\nPopular(x, y) ::: x is popular among y.\nPremises:\n∃x (Major(x, computerScience) ∧ GetUpEarly(x)) ::: Some students who major in computer science get up early.\nGetUpEarly(x) → Study(x, morning) ::: If a student gets up early, then he/she will study in the morning.\n∀x (Study(x, morning) → GoodAt(x, timeManagement)) ::: All students studying in the morning are good at time management.\n∀x (GoodAt(x, timeManagement) → Popular(x, students)) ::: All students good at time management are popular among students.\n¬Popular(james, students) ::: James is not popular among students.\nConclusion:\n¬Major(james, computerScience) ::: James majors in computer science.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine"
    ]
  },
  {
    "id": "FOLIO_train_857",
    "context": "Some students who major in computer science get up early. If a student gets up early, then he/she will study in the morning. All students studying in the morning are good at time management. All students good at time management are popular among students. James is not popular among students.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James majors in computer science and gets up early.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMajor(x, y) ::: x majors in y.\nGetUpEarly(x) ::: x gets up early.\nStudy(x, y) ::: x studies in y.\nGoodAt(x, y) ::: x is good at y.\nPopular(x, y) ::: x is popular among y.\nPremises:\n∃x (Major(x, computerScience) ∧ GetUpEarly(x)) ::: Some students who major in computer science get up early.\nGetUpEarly(x) → Study(x, morning) ::: If a student gets up early, then he/she will study in the morning.\n∀x (Study(x, morning) → GoodAt(x, timeManagement)) ::: All students studying in the morning are good at time management.\n∀x (GoodAt(x, timeManagement) → Popular(x, student)) ::: All students good at time management are popular among students.\n¬Popular(james, student) ::: James is not popular among students.\nConclusion:\nMajor(james, computerScience) ∧ GetUpEarly(james) ::: James majors in computer science and gets up early.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being add"
    ]
  },
  {
    "id": "FOLIO_train_858",
    "context": "Some students who major in computer science get up early. If a student gets up early, then he/she will study in the morning. All students studying in the morning are good at time management. All students good at time management are popular among students. James is not popular among students.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If James gets up early, then he majors in computer science.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMajor(x, y) ::: x majors in y.\nGetUpEarly(x) ::: x gets up early.\nStudy(x, y) ::: x studies in y.\nGoodAt(x, y) ::: x is good at y.\nPopular(x, y) ::: x is popular among y.\nPremises:\n∃x (Major(x, computerScience) ∧ GetUpEarly(x)) ::: Some students who major in computer science get up early.\nGetUpEarly(x) → Study(x, morning) ::: If a student gets up early, then he/she will study in the morning.\n∀x (Study(x, morning) → GoodAt(x, timeManagement)) ::: All students studying in the morning are good at time management.\n∀x (GoodAt(x, timeManagement) → Popular(x, student)) ::: All students good at time management are popular among students.\n¬Popular(james, student) ::: James is not popular among students.\nConclusion:\nMajor(james, computerScience) ∧ GetUpEarly(james) ::: If James gets up early, then he majors in computer science.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes"
    ]
  },
  {
    "id": "FOLIO_train_859",
    "context": "There is no dog on the roof. If there is a dog on the roof something went wrong.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Something went wrong.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDog(x) ::: x is a dog.\nRoof(x) ::: x is on the roof.\nWrong(x) ::: x went wrong.\nPremises:\n¬∃x (Dog(x) ∧ Roof(x)) ::: There is no dog on the roof.\n∃x (Dog(x) ∧ Roof(x)) → Wrong(something) ::: If there is a dog on the roof something went wrong.\nConclusion:\nWrong(something) ::: Something went wrong.\n------\nProblem:\nThe only people who are not students are people who are not students.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The only people who are not students are people who are not students.\n###\nPredicates:\nStudent(x) ::: x is a student.\nPremises:\n¬∃x (¬Student(x) ∧ ¬Student(x)) ::: The only people who are not students are people who are not students.\nConclusion:\n¬∃x (¬Student(x) ∧ ¬Student(x)) ::: The only people who are not students are people who are not students.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is una"
    ]
  },
  {
    "id": "FOLIO_train_860",
    "context": "Elephantopus is a genus of perennial plants in the daisy family. Elephantopus is widespread over much of Africa, southern Asia, Australia, and the Americas. Several species of Elephantopus are native to the southeastern United States. Elephantopus scaber is a traditional medicine.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Elephantopus is widespread over much of Australia and Southern Asia.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nElephantopus(x) ::: x is a genus of perennial plants in the daisy family.\nWidespread(x, y) ::: x is widespread over much of y.\nNative(x, y) ::: x is native to y.\nTraditionalMedicine(x) ::: x is a traditional medicine.\nPremises:\nElephantopus(elephantopus) ::: Elephantopus is a genus of perennial plants in the daisy family.\nWidespread(elephantopus, africa) ∧ Widespread(elephantopus, southernAsia) ∧ Widespread(elephantopus, australia) ∧ Widespread(elephantopus, americas) ::: Elephantopus is widespread over much of Africa, southern Asia, Australia, and the Americas.\nNative(severalSpeciesOfElephantopus, southeasternUnitedStates) ::: Several species of Elephantopus are native to the southeastern United States.\nTraditionalMedicine(elephantopusScaber) ::: Elephantopus scaber is a traditional medicine.\nConclusion:\nWidespread(elephantopus, australia) ∧ Widespread(elephantopus, southernAsia) ::: Elephantopus is widespread over much of Australia and Southern Asia.\n------"
    ]
  },
  {
    "id": "FOLIO_train_861",
    "context": "Elephantopus is a genus of perennial plants in the daisy family. Elephantopus is widespread over much of Africa, southern Asia, Australia, and the Americas. Several species of Elephantopus are native to the southeastern United States. Elephantopus scaber is a traditional medicine.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? No Elephantopus is native to the southeastern United States.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nElephantopus(x) ::: x is Elephantopus.\nWidespread(x, y) ::: x is widespread over y.\nNative(x, y) ::: x is native to y.\nTraditionalMedicine(x) ::: x is a traditional medicine.\nPremises:\nElephantopus(elephantopus) ::: Elephantopus is a genus of perennial plants in the daisy family.\nWidespread(elephantopus, africa) ∧ Widespread(elephantopus, southernAsia) ∧ Widespread(elephantopus, australia) ∧ Widespread(elephantopus, americas) ::: Elephantopus is widespread over much of Africa, southern Asia, Australia, and the Americas.\nNative(elephantopus, southeasternUnitedStates) ::: Several species of Elephantopus are native to the southeastern United States.\nTraditionalMedicine(elephantopusScaber) ::: Elephantopus scaber is a traditional medicine.\nConclusion:\n¬∃x (Elephantopus(x) ∧ Native(x, southeasternUnitedStates)) ::: No Elephantopus is native to the southeastern United States.\n------\nProblem:\nThe 1990 FIFA World Cup was the 14th FIFA World Cup"
    ]
  },
  {
    "id": "FOLIO_train_862",
    "context": "Elephantopus is a genus of perennial plants in the daisy family. Elephantopus is widespread over much of Africa, southern Asia, Australia, and the Americas. Several species of Elephantopus are native to the southeastern United States. Elephantopus scaber is a traditional medicine.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Elephantopus is a traditional medicine.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nElephantopus(x) ::: x is Elephantopus.\nWidespread(x) ::: x is widespread.\nNative(x, y) ::: x is native to y.\nTraditionalMedicine(x) ::: x is a traditional medicine.\nPremises:\nElephantopus(elephantopus) ::: Elephantopus is a genus of perennial plants in the daisy family.\nWidespread(elephantopus) ::: Elephantopus is widespread over much of Africa, southern Asia, Australia, and the Americas.\nNative(elephantopus, southeasternUnitedStates) ::: Several species of Elephantopus are native to the southeastern United States.\nTraditionalMedicine(elephantopusScaber) ::: Elephantopus scaber is a traditional medicine.\nConclusion:\nTraditionalMedicine(elephantopus) ::: Elephantopus is a traditional medicine.\n------\nProblem:\nThe 1990s was a decade of the Gregorian calendar that began on January 1, 1990, and ended on December 31, 1999. The 1990s was the last decade of the 20th century. The 1990s was the last decade of the 2nd millennium. The 199"
    ]
  },
  {
    "id": "FOLIO_train_863",
    "context": "All Yale dormitories are located on York Street. All buildings managed by Yale Housing are dormitories. All buildings operated by Yale Housing staff are managed by Yale Housing. No buildings open to students are established after 1800. All buildings located on York Street are open to students. Harkness is either a building operated by Yale Housing staff or located on York Street.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Harkness is a Yale dormitory.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDormitory(x) ::: x is a Yale dormitory.\nBuilding(x) ::: x is a building.\nManaged(x) ::: x is managed by Yale Housing.\nOperated(x) ::: x is operated by Yale Housing staff.\nOpen(x) ::: x is open to students.\nEstablished(x) ::: x is established after 1800.\nPremises:\n∀x (Dormitory(x) → Building(x)) ::: All Yale dormitories are located on York Street.\n∀x (Building(x) → Managed(x)) ::: All buildings managed by Yale Housing are dormitories.\n∀x (Managed(x) → Operated(x)) ::: All buildings operated by Yale Housing staff are managed by Yale Housing.\n¬∀x (Open(x) → Established(x)) ::: No buildings open to students are established after 1800.\n∀x (Building(x) → Open(x)) ::: All buildings located on York Street are open to students.\n(Operated(harkness) ∨ Building(harkness)) ::: Harkness is either a building operated by Yale Housing staff or located on York Street.\nConclusion:\nDormitory(harkness) ::: Harkness is a Yale dormitory.\n------\nProblem:\nAll people"
    ]
  },
  {
    "id": "FOLIO_train_864",
    "context": "All Yale dormitories are located on York Street. All buildings managed by Yale Housing are dormitories. All buildings operated by Yale Housing staff are managed by Yale Housing. No buildings open to students are established after 1800. All buildings located on York Street are open to students. Harkness is either a building operated by Yale Housing staff or located on York Street.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Harkness is not a Yale dormitory.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDormitory(x) ::: x is a Yale dormitory.\nBuilding(x) ::: x is a building.\nManaged(x) ::: x is managed by Yale Housing.\nOperated(x) ::: x is operated by Yale Housing staff.\nOpen(x) ::: x is open to students.\nEstablished(x) ::: x is established after 1800.\nPremises:\n∀x (Dormitory(x) → YorkStreet(x)) ::: All Yale dormitories are located on York Street.\n∀x (Building(x) → ¬Established(x)) ::: No buildings open to students are established after 1800.\n∀x (Building(x) → Open(x)) ::: All buildings located on York Street are open to students.\n∀x (Managed(x) → Dormitory(x)) ::: All buildings managed by Yale Housing are dormitories.\n∀x (Operated(x) → Managed(x)) ::: All buildings operated by Yale Housing staff are managed by Yale Housing.\n(Operated(harkness) ∨ YorkStreet(harkness)) ::: Harkness is either a building operated by Yale Housing staff or located on York Street.\nConclusion:\n¬Dormitory(harkness) ::: Harkness is not a Yale dormitory"
    ]
  },
  {
    "id": "FOLIO_train_865",
    "context": "All Yale dormitories are located on York Street. All buildings managed by Yale Housing are dormitories. All buildings operated by Yale Housing staff are managed by Yale Housing. No buildings open to students are established after 1800. All buildings located on York Street are open to students. Harkness is either a building operated by Yale Housing staff or located on York Street.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Harkness is established after 1800.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDormitory(x) ::: x is a dormitory.\nManagedByYaleHousing(x) ::: x is managed by Yale Housing.\nOperatedByYaleHousingStaff(x) ::: x is operated by Yale Housing staff.\nOpenToStudents(x) ::: x is open to students.\nEstablishedAfterYear1800(x) ::: x is established after year 1800.\nBuilding(x) ::: x is a building.\nLocatedOnYorkStreet(x) ::: x is located on York Street.\nPremises:\n∀x (Dormitory(x) → LocatedOnYorkStreet(x)) ::: All Yale dormitories are located on York Street.\n∀x (ManagedByYaleHousing(x) → Dormitory(x)) ::: All buildings managed by Yale Housing are dormitories.\n∀x (OperatedByYaleHousingStaff(x) → ManagedByYaleHousing(x)) ::: All buildings operated by Yale Housing staff are managed by Yale Housing.\n¬∃x (OpenToStudents(x) ∧ EstablishedAfterYear1800(x)) ::: No buildings open to students are established after 1800.\n∀x (LocatedOnYorkStreet(x) → OpenToStudents"
    ]
  },
  {
    "id": "FOLIO_train_866",
    "context": "All Yale dormitories are located on York Street. All buildings managed by Yale Housing are dormitories. All buildings operated by Yale Housing staff are managed by Yale Housing. No buildings open to students are established after 1800. All buildings located on York Street are open to students. Harkness is either a building operated by Yale Housing staff or located on York Street.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Harkness is established before 1800.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDormitory(x) ::: x is a dormitory.\nManagedByYaleHousing(x) ::: x is managed by Yale Housing.\nOperatedByYaleHousingStaff(x) ::: x is operated by Yale Housing staff.\nOpenToStudents(x) ::: x is open to students.\nEstablishedBeforeYear1800(x) ::: x is established before year 1800.\nBuilding(x) ::: x is a building.\nLocatedOnYorkStreet(x) ::: x is located on York Street.\nPremises:\n∀x (Dormitory(x) → LocatedOnYorkStreet(x)) ::: All Yale dormitories are located on York Street.\n∀x (Building(x) → ¬OpenToStudents(x)) ::: All buildings managed by Yale Housing are dormitories.\n∀x (Building(x) → ¬ManagedByYaleHousing(x)) ::: All buildings operated by Yale Housing staff are managed by Yale Housing.\n∀x (Building(x) → ¬EstablishedBeforeYear1800(x)) ::: No buildings open to students are established after 1800.\n∀x (Building(x) → ¬LocatedOnYorkStreet(x)) ::: All buildings located on York Street are"
    ]
  },
  {
    "id": "FOLIO_train_867",
    "context": "There are no mansion houses in an urban area. All skyscrapers reside in urban areas. Every creepy haunted house is in a mansion house. Every terrifying Halloween scare comes from a creepy haunted house. The Scream is a creepy haunted house or a terrifying Halloween scare.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Scream is a skyscraper.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMansionHouse(x) ::: x is a mansion house.\nSkyscraper(x) ::: x is a skyscraper.\nCreepyHauntedHouse(x) ::: x is a creepy haunted house.\nTerrifyingHalloweenScare(x) ::: x is a terrifying Halloween scare.\nPremises:\n¬∃x (MansionHouse(x) ∧ UrbanArea(x)) ::: There are no mansion houses in an urban area.\n∀x (Skyscraper(x) → UrbanArea(x)) ::: All skyscrapers reside in urban areas.\n∀x (CreepyHauntedHouse(x) → MansionHouse(x)) ::: Every creepy haunted house is in a mansion house.\n∀x (TerrifyingHalloweenScare(x) → CreepyHauntedHouse(x)) ::: Every terrifying Halloween scare comes from a creepy haunted house.\n(CreepyHauntedHouse(scream) ∨ TerrifyingHalloweenScare(scream)) ::: The Scream is a creepy haunted house or a terrifying Halloween scare.\nConclusion:\n¬Skyscraper(scream) ::: The Scream is a skyscraper.\n------\nProblem:\nAll people who regularly drink"
    ]
  },
  {
    "id": "FOLIO_train_868",
    "context": "There are no mansion houses in an urban area. All skyscrapers reside in urban areas. Every creepy haunted house is in a mansion house. Every terrifying Halloween scare comes from a creepy haunted house. The Scream is a creepy haunted house or a terrifying Halloween scare.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Scream is not a skyscraper.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMansionHouse(x) ::: x is a mansion house.\nSkyscraper(x) ::: x is a skyscraper.\nCreepyHauntedHouse(x) ::: x is a creepy haunted house.\nTerrifyingHalloweenScare(x) ::: x is a terrifying Halloween scare.\nPremises:\n¬∃x (MansionHouse(x) ∧ UrbanArea(x)) ::: There are no mansion houses in an urban area.\n∀x (Skyscraper(x) → UrbanArea(x)) ::: All skyscrapers reside in urban areas.\n∀x (CreepyHauntedHouse(x) → MansionHouse(x)) ::: Every creepy haunted house is in a mansion house.\n∀x (TerrifyingHalloweenScare(x) → CreepyHauntedHouse(x)) ::: Every terrifying Halloween scare comes from a creepy haunted house.\n(CreepyHauntedHouse(scream) ∨ TerrifyingHalloweenScare(scream)) ::: The Scream is a creepy haunted house or a terrifying Halloween scare.\nConclusion:\n¬Skyscraper(scream) ::: The Scream is not a skyscraper.\n------\nProblem:\nAll people who regularly"
    ]
  },
  {
    "id": "FOLIO_train_869",
    "context": "There are no mansion houses in an urban area. All skyscrapers reside in urban areas. Every creepy haunted house is in a mansion house. Every terrifying Halloween scare comes from a creepy haunted house. The Scream is a creepy haunted house or a terrifying Halloween scare.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Scream is a terrifying Halloween scare.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMansionHouse(x) ::: x is a mansion house.\nSkyscraper(x) ::: x is a skyscraper.\nUrbanArea(x) ::: x is an urban area.\nCreepyHauntedHouse(x) ::: x is a creepy haunted house.\nTerrifyingHalloweenScare(x) ::: x is a terrifying Halloween scare.\nPremises:\n¬∃x (MansionHouse(x) ∧ UrbanArea(x)) ::: There are no mansion houses in an urban area.\n∀x (Skyscraper(x) → UrbanArea(x)) ::: All skyscrapers reside in urban areas.\n∀x (CreepyHauntedHouse(x) → MansionHouse(x)) ::: Every creepy haunted house is in a mansion house.\n∀x (TerrifyingHalloweenScare(x) → CreepyHauntedHouse(x)) ::: Every terrifying Halloween scare comes from a creepy haunted house.\n(CreepyHauntedHouse(scream) ∨ TerrifyingHalloweenScare(scream)) ::: The Scream is a creepy haunted house or a terrifying Halloween scare.\nConclusion:\nTerrifyingHalloweenScare(scream) ::: The S"
    ]
  },
  {
    "id": "FOLIO_train_870",
    "context": "There are no mansion houses in an urban area. All skyscrapers reside in urban areas. Every creepy haunted house is in a mansion house. Every terrifying Halloween scare comes from a creepy haunted house. The Scream is a creepy haunted house or a terrifying Halloween scare.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Scream is either a skyscraper or a mansion house.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMansionHouse(x) ::: x is a mansion house.\nSkyscraper(x) ::: x is a skyscraper.\nCreepyHauntedHouse(x) ::: x is a creepy haunted house.\nTerrifyingHalloweenScare(x) ::: x is a terrifying Halloween scare.\nPremises:\n¬∃x (MansionHouse(x) ∧ UrbanArea(x)) ::: There are no mansion houses in an urban area.\n∀x (Skyscraper(x) → UrbanArea(x)) ::: All skyscrapers reside in urban areas.\n∀x (CreepyHauntedHouse(x) → MansionHouse(x)) ::: Every creepy haunted house is in a mansion house.\n∀x (TerrifyingHalloweenScare(x) → CreepyHauntedHouse(x)) ::: Every terrifying Halloween scare comes from a creepy haunted house.\n(CreepyHauntedHouse(scream) ∨ TerrifyingHalloweenScare(scream)) ::: The Scream is a creepy haunted house or a terrifying Halloween scare.\nConclusion:\n¬(Skyscraper(scream) ∨ MansionHouse(scream)) ::: The Scream is either a skyscraper or a mansion house.\n------"
    ]
  },
  {
    "id": "FOLIO_train_871",
    "context": "There are no mansion houses in an urban area. All skyscrapers reside in urban areas. Every creepy haunted house is in a mansion house. Every terrifying Halloween scare comes from a creepy haunted house. The Scream is a creepy haunted house or a terrifying Halloween scare.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Scream is either a skyscraper or an urban area.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMansionHouse(x) ::: x is a mansion house.\nSkyscraper(x) ::: x is a skyscraper.\nUrbanArea(x) ::: x is an urban area.\nCreepyHauntedHouse(x) ::: x is a creepy haunted house.\nTerrifyingHalloweenScare(x) ::: x is a terrifying Halloween scare.\nPremises:\n¬∃x (MansionHouse(x) ∧ UrbanArea(x)) ::: There are no mansion houses in an urban area.\n∀x (Skyscraper(x) → UrbanArea(x)) ::: All skyscrapers reside in urban areas.\n∀x (CreepyHauntedHouse(x) → MansionHouse(x)) ::: Every creepy haunted house is in a mansion house.\n∀x (TerrifyingHalloweenScare(x) → CreepyHauntedHouse(x)) ::: Every terrifying Halloween scare comes from a creepy haunted house.\n(CreepyHauntedHouse(scream) ∨ TerrifyingHalloweenScare(scream)) ::: The Scream is a creepy haunted house or a terrifying Halloween scare.\nConclusion:\nSkyscraper(scream) ∨ UrbanArea(scream) ::: The Scream is either a"
    ]
  },
  {
    "id": "FOLIO_train_872",
    "context": "There are no mansion houses in an urban area. All skyscrapers reside in urban areas. Every creepy haunted house is in a mansion house. Every terrifying Halloween scare comes from a creepy haunted house. The Scream is a creepy haunted house or a terrifying Halloween scare.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Scream is either a skyscraper or a creepy haunted house.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMansionHouse(x) ::: x is a mansion house.\nSkyscraper(x) ::: x is a skyscraper.\nCreepyHauntedHouse(x) ::: x is a creepy haunted house.\nTerrifyingHalloweenScare(x) ::: x is a terrifying Halloween scare.\nPremises:\n¬∃x (MansionHouse(x) ∧ UrbanArea(x)) ::: There are no mansion houses in an urban area.\n∀x (Skyscraper(x) → UrbanArea(x)) ::: All skyscrapers reside in urban areas.\n∀x (CreepyHauntedHouse(x) → MansionHouse(x)) ::: Every creepy haunted house is in a mansion house.\n∀x (TerrifyingHalloweenScare(x) → CreepyHauntedHouse(x)) ::: Every terrifying Halloween scare comes from a creepy haunted house.\n(CreepyHauntedHouse(scream) ∨ TerrifyingHalloweenScare(scream)) ::: The Scream is a creepy haunted house or a terrifying Halloween scare.\nConclusion:\n(Skyscraper(scream) ∨ CreepyHauntedHouse(scream)) ::: The Scream is either a skyscraper or a creepy ha"
    ]
  },
  {
    "id": "FOLIO_train_873",
    "context": "There are no mansion houses in an urban area. All skyscrapers reside in urban areas. Every creepy haunted house is in a mansion house. Every terrifying Halloween scare comes from a creepy haunted house. The Scream is a creepy haunted house or a terrifying Halloween scare.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If The Scream is not a mansion in an urban area, then it is either a skyscraper or an urban area.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMansion(x) ::: x is a mansion house.\nUrban(x) ::: x is an urban area.\nSkyscraper(x) ::: x is a skyscraper.\nCreepy(x) ::: x is a creepy haunted house.\nTerrifying(x) ::: x is a terrifying Halloween scare.\nPremises:\n¬∃x (Mansion(x) ∧ Urban(x)) ::: There are no mansion houses in an urban area.\n∀x (Skyscraper(x) → Urban(x)) ::: All skyscrapers reside in urban areas.\n∀x (Creepy(x) → Mansion(x)) ::: Every creepy haunted house is in a mansion house.\n∀x (Terrifying(x) → Creepy(x)) ::: Every terrifying Halloween scare comes from a creepy haunted house.\n(Creepy(scream) ∨ Terrifying(scream)) ::: The Scream is a creepy haunted house or a terrifying Halloween scare.\nConclusion:\n¬(Mansion(scream) ∧ Urban(scream)) → (Skyscraper(scream) ∨ Urban(scream)) ::: If The Scream is not a mansion in an urban area, then it is either a skyscraper or an urban area.\n------"
    ]
  },
  {
    "id": "FOLIO_train_874",
    "context": "There are no mansion houses in an urban area. All skyscrapers reside in urban areas. Every creepy haunted house is in a mansion house. Every terrifying Halloween scare comes from a creepy haunted house. The Scream is a creepy haunted house or a terrifying Halloween scare.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If The Scream is either a skyscraper or a mansion house, then it is in an urban area.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMansionHouse(x) ::: x is a mansion house.\nSkyscraper(x) ::: x is a skyscraper.\nUrbanArea(x) ::: x is in an urban area.\nCreepyHauntedHouse(x) ::: x is a creepy haunted house.\nTerrifyingHalloweenScare(x) ::: x is a terrifying Halloween scare.\nPremises:\n¬∃x (MansionHouse(x) ∧ UrbanArea(x)) ::: There are no mansion houses in an urban area.\n∀x (Skyscraper(x) → UrbanArea(x)) ::: All skyscrapers reside in urban areas.\n∀x (CreepyHauntedHouse(x) → MansionHouse(x)) ::: Every creepy haunted house is in a mansion house.\n∀x (TerrifyingHalloweenScare(x) → CreepyHauntedHouse(x)) ::: Every terrifying Halloween scare comes from a creepy haunted house.\n(CreepyHauntedHouse(scream) ∨ TerrifyingHalloweenScare(scream)) ::: The Scream is a creepy haunted house or a terrifying Halloween scare.\nConclusion:\n¬(Skyscraper(scream) ∧ UrbanArea(scream)) ::: If The Scre"
    ]
  },
  {
    "id": "FOLIO_train_875",
    "context": "There are no mansion houses in an urban area. All skyscrapers reside in urban areas. Every creepy haunted house is in a mansion house. Every terrifying Halloween scare comes from a creepy haunted house. The Scream is a creepy haunted house or a terrifying Halloween scare.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If The Scream is either a skyscraper or a mansion house, then it is neither a creepy haunted house nor a terrifying Halloween scare.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMansionHouse(x) ::: x is a mansion house.\nSkyscraper(x) ::: x is a skyscraper.\nCreepyHauntedHouse(x) ::: x is a creepy haunted house.\nTerrifyingHalloweenScare(x) ::: x is a terrifying Halloween scare.\nPremises:\n¬∃x (MansionHouse(x) ∧ UrbanArea(x)) ::: There are no mansion houses in an urban area.\n∀x (Skyscraper(x) → UrbanArea(x)) ::: All skyscrapers reside in urban areas.\n∀x (CreepyHauntedHouse(x) → MansionHouse(x)) ::: Every creepy haunted house is in a mansion house.\n∀x (TerrifyingHalloweenScare(x) → CreepyHauntedHouse(x)) ::: Every terrifying Halloween scare comes from a creepy haunted house.\n(Scream(x) ∧ CreepyHauntedHouse(x)) ⊕ (Scream(x) ∧ TerrifyingHalloweenScare(x)) ::: The Scream is a creepy haunted house or a terrifying Halloween scare.\nConclusion:\n¬(Scream(x) ∧ Skyscraper(x)) ∧ ¬(Scream(x) ∧"
    ]
  },
  {
    "id": "FOLIO_train_876",
    "context": "There are no mansion houses in an urban area. All skyscrapers reside in urban areas. Every creepy haunted house is in a mansion house. Every terrifying Halloween scare comes from a creepy haunted house. The Scream is a creepy haunted house or a terrifying Halloween scare.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If The Scream is either a skyscraper or a creepy haunted house, then it is not a mansion house.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMansionHouse(x) ::: x is a mansion house.\nSkyscraper(x) ::: x is a skyscraper.\nCreepyHauntedHouse(x) ::: x is a creepy haunted house.\nTerrifyingHalloweenScare(x) ::: x is a terrifying Halloween scare.\nPremises:\n¬∃x (MansionHouse(x) ∧ UrbanArea(x)) ::: There are no mansion houses in an urban area.\n∀x (Skyscraper(x) → UrbanArea(x)) ::: All skyscrapers reside in urban areas.\n∀x (CreepyHauntedHouse(x) → MansionHouse(x)) ::: Every creepy haunted house is in a mansion house.\n∀x (TerrifyingHalloweenScare(x) → CreepyHauntedHouse(x)) ::: Every terrifying Halloween scare comes from a creepy haunted house.\n(CreepyHauntedHouse(scream) ∨ TerrifyingHalloweenScare(scream)) ::: The Scream is a creepy haunted house or a terrifying Halloween scare.\nConclusion:\n¬(Skyscraper(scream) ∧ CreepyHauntedHouse(scream)) ::: If The Scream is either a skyscraper or a creep"
    ]
  },
  {
    "id": "FOLIO_train_877",
    "context": "Phuoc Binh national park is a national park in Vietnam. Any national park in Vietnam is classified as a nature reserve. There is a national park in Vietnam classified as a UNESCO World Heritage Site. All national parks in Vietnam are either managed by the Ministry of Agriculture or by the People's Committee. Phuoc Binh is not managed by the Ministry of Agriculture.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There is a nature reserve in Vietnam.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nNationalPark(x) ::: x is a national park.\nNatureReserve(x) ::: x is a nature reserve.\nUNESCOWorldHeritageSite(x) ::: x is a UNESCO World Heritage Site.\nManagedBy(x, y) ::: x is managed by y.\nPremises:\nNationalPark(phuocBinh) ::: Phuoc Binh national park is a national park in Vietnam.\n∀x (NationalPark(x) → NatureReserve(x)) ::: Any national park in Vietnam is classified as a nature reserve.\n∃x (NationalPark(x) ∧ UNESCOWorldHeritageSite(x)) ::: There is a national park in Vietnam classified as a UNESCO World Heritage Site.\n∀x (NationalPark(x) → (ManagedBy(x, ministryOfAgriculture) ∨ ManagedBy(x, people'sCommittee))) ::: All national parks in Vietnam are either managed by the Ministry of Agriculture or by the People's Committee.\n¬ManagedBy(phuocBinh, ministryOfAgriculture) ::: Phuoc Binh is not managed by the Ministry of Agriculture.\nConclusion:\nNatureReserve(phuocBinh) ::: There is a nature reserve in Vietnam.\n------\nProblem:\nThe 1990 FIFA World Cup was the 14th FIFA World Cup. The 1990 FIFA World Cup"
    ]
  },
  {
    "id": "FOLIO_train_878",
    "context": "Phuoc Binh national park is a national park in Vietnam. Any national park in Vietnam is classified as a nature reserve. There is a national park in Vietnam classified as a UNESCO World Heritage Site. All national parks in Vietnam are either managed by the Ministry of Agriculture or by the People's Committee. Phuoc Binh is not managed by the Ministry of Agriculture.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Phuoc Binh is a UNESCO Heritage Site.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nNationalPark(x) ::: x is a national park.\nNatureReserve(x) ::: x is classified as a nature reserve.\nUNESCOHeritageSite(x) ::: x is classified as a UNESCO World Heritage Site.\nManagedBy(x, y) ::: x is managed by y.\nPremises:\nNationalPark(phuocBinh) ::: Phuoc Binh national park is a national park in Vietnam.\n∀x (NationalPark(x) → NatureReserve(x)) ::: Any national park in Vietnam is classified as a nature reserve.\n∃x (NationalPark(x) ∧ UNESCOHeritageSite(x)) ::: There is a national park in Vietnam classified as a UNESCO World Heritage Site.\n∀x (NationalPark(x) → (ManagedBy(x, ministryOfAgriculture) ∨ ManagedBy(x, people'sCommittee))) ::: All national parks in Vietnam are either managed by the Ministry of Agriculture or by the People's Committee.\n¬ManagedBy(phuocBinh, ministryOfAgriculture) ::: Phuoc Binh is not managed by the Ministry of Agriculture.\nConclusion:\nUNESCOHeritageSite(phuocBinh) ::: Phuoc Binh is a UNESCO Heritage Site.\n------\nProblem:\nThe first-order logic formular is:\n∀x (P(x)"
    ]
  },
  {
    "id": "FOLIO_train_879",
    "context": "Phuoc Binh national park is a national park in Vietnam. Any national park in Vietnam is classified as a nature reserve. There is a national park in Vietnam classified as a UNESCO World Heritage Site. All national parks in Vietnam are either managed by the Ministry of Agriculture or by the People's Committee. Phuoc Binh is not managed by the Ministry of Agriculture.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Phuoc Binh is managed by the People's Committee.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nNationalPark(x) ::: x is a national park.\nNatureReserve(x) ::: x is classified as a nature reserve.\nUNESCOWorldHeritageSite(x) ::: x is classified as a UNESCO World Heritage Site.\nManagedBy(x, y) ::: x is managed by y.\nPremises:\nNationalPark(phuocBinh) ::: Phuoc Binh national park is a national park in Vietnam.\n∀x (NationalPark(x) → NatureReserve(x)) ::: Any national park in Vietnam is classified as a nature reserve.\n∃x (NationalPark(x) ∧ UNESCOWorldHeritageSite(x)) ::: There is a national park in Vietnam classified as a UNESCO World Heritage Site.\n∀x (NationalPark(x) → (ManagedBy(x, ministryOfAgriculture) ∨ ManagedBy(x, people'sCommittee))) ::: All national parks in Vietnam are either managed by the Ministry of Agriculture or by the People's Committee.\n¬ManagedBy(phuocBinh, ministryOfAgriculture) ::: Phuoc Binh is not managed by the Ministry of Agriculture.\nConclusion:\nManagedBy(phuocBinh, people'sCommittee) ::: Phuoc Binh is managed by the People's Committee.\n------\nProblem:\nThe 1990 FIFA World Cup was"
    ]
  },
  {
    "id": "FOLIO_train_880",
    "context": "Greyhound racing is a competitive sport where spectators bet on greyhounds. Coursing is a part of Greyhound racing. Some competitive sports where spectators bet on things are banned. Coursing involves spectators betting on a hare being pursued by greyhounds. Hares are small game. If a competitive sport involves spectators betting on small game, then it is banned.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? No coursing is banned.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreyhoundRacing(x) ::: x is a Greyhound racing.\nCoursing(x) ::: x is a coursing.\nCompetitiveSport(x) ::: x is a competitive sport.\nBet(x, y) ::: x bets on y.\nBanned(x) ::: x is banned.\nPursue(x, y) ::: x pursues y.\nHare(x) ::: x is a hare.\nSmallGame(x) ::: x is a small game.\nPremises:\nGreyhoundRacing(x) → CompetitiveSport(x) ::: Greyhound racing is a competitive sport where spectators bet on greyhounds.\nCoursing(x) → GreyhoundRacing(x) ::: Coursing is a part of Greyhound racing.\n∃x (CompetitiveSport(x) ∧ Bet(x, y) ∧ Banned(x)) ::: Some competitive sports where spectators bet on things are banned.\nCoursing(x) → (Hare(x) ∧ Pursue(x, y)) ::: Coursing involves spectators betting on a hare being pursued by greyhounds.\nHare(x) → SmallGame(x) ::: Hares are small game.\nCompetitiveSport(x) ∧ Bet(x, y) ∧ SmallGame(y) → Banned(x) ::: If a competitive sport involves spectators betting on small game, then it is banned.\nConclusion:\n¬Banned(x) ::: No coursing is banned.\n------"
    ]
  },
  {
    "id": "FOLIO_train_881",
    "context": "Greyhound racing is a competitive sport where spectators bet on greyhounds. Coursing is a part of Greyhound racing. Some competitive sports where spectators bet on things are banned. Coursing involves spectators betting on a hare being pursued by greyhounds. Hares are small game. If a competitive sport involves spectators betting on small game, then it is banned.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Greyhound racing is a competitive sport.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreyhoundRacing(x) ::: x is a Greyhound racing.\nCompetitiveSport(x) ::: x is a competitive sport.\nCoursing(x) ::: x is a coursing.\nBet(x, y) ::: x bets on y.\nBanned(x) ::: x is banned.\nPursue(x, y) ::: x pursues y.\nHare(x) ::: x is a hare.\nSmallGame(x) ::: x is a small game.\nPremises:\nGreyhoundRacing(coursing) ∧ CompetitiveSport(coursing) ∧ Bet(spectator, thing) ∧ Bet(spectator, hare) ::: Greyhound racing is a competitive sport where spectators bet on greyhounds. Coursing is a part of Greyhound racing. Some competitive sports where spectators bet on things are banned. Coursing involves spectators betting on a hare being pursued by greyhounds. Hares are small game. If a competitive sport involves spectators betting on small game, then it is banned.\nConclusion:\nCompetitiveSport(coursing) ::: Greyhound racing is a competitive sport.\n------\nProblem:\nThe United States is a country. The United States is a member of the United Nations. The United Nations is an international organization. The United Nations is a member of the United Nations. The United Nations is a member of the United Nations. The United Nations is a member of the United Nations. The United Nations is a member of the United Nations. The United Nations is a member of the United Nations. The United Nations"
    ]
  },
  {
    "id": "FOLIO_train_882",
    "context": "If a soccer player receives two yellow cards in one game, this player will be ejected from the rest of the game. If a soccer player receives one red card in one game, this player will be ejected from the rest of the game. Henry is a soccer player. In one game, Henry first receives one yellow card, then he receives one red card.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Henry will be ejected from the rest of the game.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSoccerPlayer(x) ::: x is a soccer player.\nEject(x, y) ::: x is ejected from y.\nGame(x) ::: x is a game.\nYellowCard(x, y) ::: x receives one yellow card in y.\nRedCard(x, y) ::: x receives one red card in y.\nPremises:\n∀x (YellowCard(x, y) ∧ RedCard(x, y) → Eject(x, y)) ::: If a soccer player receives two yellow cards in one game, this player will be ejected from the rest of the game.\n∀x (RedCard(x, y) → Eject(x, y)) ::: If a soccer player receives one red card in one game, this player will be ejected from the rest of the game.\nSoccerPlayer(henry) ::: Henry is a soccer player.\nYellowCard(henry, game) ∧ RedCard(henry, game) ::: In one game, Henry first receives one yellow card, then he receives one red card.\nConclusion:\nEject(henry, game) ::: Henry will be ejected from the rest of the game.\n------\nProblem:\nA person is a citizen of the United States if and only if the person was born in the United States. A person is a citizen of the United States if and only if the person was born in the United States. A person is a citizen of the United States if and only if the person was born in the United States. A person is a citizen of the United States if and only if the person was born in the United States. A person is a citizen"
    ]
  },
  {
    "id": "FOLIO_train_883",
    "context": "If a soccer player receives two yellow cards in one game, this player will be ejected from the rest of the game. If a soccer player receives one red card in one game, this player will be ejected from the rest of the game. Henry is a soccer player. In one game, Henry first receives one yellow card, then he receives one red card.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Henry will not be ejected from the rest of the game.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSoccerPlayer(x) ::: x is a soccer player.\nEject(x, y) ::: x is ejected from y.\nGame(x) ::: x is a game.\nYellowCard(x) ::: x is a yellow card.\nRedCard(x) ::: x is a red card.\nPremises:\n∀x (YellowCard(x) → ¬RedCard(x)) ::: If a soccer player receives two yellow cards in one game, this player will be ejected from the rest of the game.\n∀x (RedCard(x) → ¬YellowCard(x)) ::: If a soccer player receives one red card in one game, this player will be ejected from the rest of the game.\nSoccerPlayer(henry) ::: Henry is a soccer player.\nYellowCard(card1) ∧ RedCard(card2) ∧ Eject(henry, game1) ::: In one game, Henry first receives one yellow card, then he receives one red card.\nConclusion:\n¬Eject(henry, game1) ::: Henry will not be ejected from the rest of the game.\n------\nProblem:\nA person is a citizen of the United States if and only if the person was born in the United States. A person is a citizen of the United States if and only if the person was born in the United States. A person is a citizen of the United States if and only if the person was born in the United States. A person is a citizen of the United States if and only if the person was born in the United States. A person is a citizen of the United States if and only if the person"
    ]
  },
  {
    "id": "FOLIO_train_884",
    "context": "All trees are plants. Some living things are trees.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Some living things are plants.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTree(x) ::: x is a tree.\nPlant(x) ::: x is a plant.\nLivingThing(x) ::: x is a living thing.\nPremises:\n∀x (Tree(x) → Plant(x)) ::: All trees are plants.\n∃x (LivingThing(x) ∧ Tree(x)) ::: Some living things are trees.\nConclusion:\n∃x (LivingThing(x) ∧ Plant(x)) ::: Some living things are plants.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.\n###\nPredicates"
    ]
  },
  {
    "id": "FOLIO_train_885",
    "context": "Dagfinn is a given name. Notable people with the given name include Dagfinn Aarskog, Dagfinn Bakke and Dagfinn Dahl. Dagfinn Aarskog is a Norwegian physician. Dagfinn Dahl is a Norwegian barrister.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Dagfinn Aarskog is a notable person.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGivenName(x) ::: x is a given name.\nNotable(x) ::: x is a notable person.\nPhysician(x) ::: x is a physician.\nBarrister(x) ::: x is a barrister.\nPremises:\nGivenName(dagfinn) ::: Dagfinn is a given name.\nNotable(dagfinnAarskog) ∧ Notable(dagfinnBakke) ∧ Notable(dagfinnDahl) ::: Notable people with the given name include Dagfinn Aarskog, Dagfinn Bakke and Dagfinn Dahl.\nPhysician(dagfinnAarskog) ::: Dagfinn Aarskog is a Norwegian physician.\nBarrister(dagfinnDahl) ::: Dagfinn Dahl is a Norwegian barrister.\nConclusion:\nNotable(dagfinnAarskog) ::: Dagfinn Aarskog is a notable person.\n------\nProblem:\nThe 1990s was a decade of the Gregorian calendar that began on January 1, 1990, and ended on December 31, 1999. The 1990s was the decade of the 20th century. The 1990s was the decade of the 2nd millennium. The 1990s was the decade of the Common Era. The 1990s was the decade of the Anno Domini era.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The 1990s was"
    ]
  },
  {
    "id": "FOLIO_train_886",
    "context": "Dagfinn is a given name. Notable people with the given name include Dagfinn Aarskog, Dagfinn Bakke and Dagfinn Dahl. Dagfinn Aarskog is a Norwegian physician. Dagfinn Dahl is a Norwegian barrister.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Dagfinn is Dagfinn Aarskog's given name.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGivenName(x) ::: x is a given name.\nNotable(x) ::: x is a notable person.\nInclude(x, y) ::: x includes y.\nPeople(x) ::: x is a people.\nNorwegian(x) ::: x is a Norwegian.\nPhysician(x) ::: x is a physician.\nBarrister(x) ::: x is a barrister.\nPremises:\nGivenName(dagfinn) ∧ Include(people, dagfinn) ∧ Include(people, aarskog) ∧ Include(people, bakke) ∧ Include(people, dagfinnDahl) ::: Notable people with the given name include Dagfinn Aarskog, Dagfinn Bakke and Dagfinn Dahl.\nNorwegian(aarskog) ∧ Physician(aarskog) ::: Dagfinn Aarskog is a Norwegian physician.\nNorwegian(dagfinnDahl) ∧ Barrister(dagfinnDahl) ::: Dagfinn Dahl is a Norwegian barrister.\nConclusion:\nGivenName(dagfinn) ∧ GivenName(aarskog) ::: Dagfinn is Dagfinn Aarskog's given name.\n------\nProblem:\nThe 1990s was a decade of the Gregorian calendar that began on January 1, 1990, and ended on December 31, 1999. The 1990s was the decade of the 20th century. The 1990s was the decade of"
    ]
  },
  {
    "id": "FOLIO_train_887",
    "context": "Dagfinn is a given name. Notable people with the given name include Dagfinn Aarskog, Dagfinn Bakke and Dagfinn Dahl. Dagfinn Aarskog is a Norwegian physician. Dagfinn Dahl is a Norwegian barrister.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Dagfinn Dahl is a Norwegian physician.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGivenName(x) ::: x is a given name.\nNotable(x) ::: x is a notable person.\nInclude(x, y) ::: x includes y.\nPeople(x) ::: x is a people.\nNorwegian(x) ::: x is a Norwegian.\nPhysician(x) ::: x is a physician.\nBarrister(x) ::: x is a barrister.\nPremises:\nGivenName(dagfinn) ::: Dagfinn is a given name.\nNotable(dagfinn) ∧ Include(people, dagfinn) ::: Notable people with the given name include Dagfinn Aarskog, Dagfinn Bakke and Dagfinn Dahl.\nNorwegian(dagfinnAarskog) ∧ Physician(dagfinnAarskog) ::: Dagfinn Aarskog is a Norwegian physician.\nNorwegian(dagfinnDahl) ∧ Barrister(dagfinnDahl) ::: Dagfinn Dahl is a Norwegian barrister.\nConclusion:\nNorwegian(dagfinnDahl) ∧ Physician(dagfinnDahl) ::: Dagfinn Dahl is a Norwegian physician.\n------\nProblem:\nThe 1990s was a decade of the Gregorian calendar that began on January 1, 1990, and ended on December 31, 1999. The 1990s saw the end of the Cold War and the Soviet Union. The 1990s saw the rise of the Internet.\nQuestion:\nB"
    ]
  },
  {
    "id": "FOLIO_train_888",
    "context": "If entertainment is interesting, it will be popular. All popular things are well-known.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If entertainment is interesting, it will be well-known.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEntertainment(x) ::: x is entertainment.\nInteresting(x) ::: x is interesting.\nPopular(x) ::: x is popular.\nWellKnown(x) ::: x is well-known.\nPremises:\nEntertainment(x) → Interesting(x) → Popular(x) ::: If entertainment is interesting, it will be popular.\n∀x (Popular(x) → WellKnown(x)) ::: All popular things are well-known.\nConclusion:\nEntertainment(x) → Interesting(x) → WellKnown(x) ::: If entertainment is interesting, it will be well-known.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware"
    ]
  },
  {
    "id": "FOLIO_train_889",
    "context": "It is not true that some giant language models do not have good performance. All language models with good performance are used by some researchers. If a language model is used by some researchers, it is popular. If BERT is a giant language model, then GPT-3 is also a giant language model. BERT is a giant language model.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? GPT-3 is popular.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGiant(x) ::: x is a giant language model.\nGoodPerformance(x) ::: x has good performance.\nUsedBy(x, y) ::: x is used by y.\nResearcher(y) ::: y is a researcher.\nPopular(x) ::: x is popular.\nPremises:\n¬∃x (Giant(x) ∧ ¬GoodPerformance(x)) ::: It is not true that some giant language models do not have good performance.\n∀x (GoodPerformance(x) → ∃y UsedBy(x, y)) ::: All language models with good performance are used by some researchers.\n∀x ∀y (UsedBy(x, y) ∧ Researcher(y) → Popular(x)) ::: If a language model is used by some researchers, it is popular.\nGiant(bert) ∧ Giant(gpt3) ::: If BERT is a giant language model, then GPT-3 is also a giant language model.\nGiant(bert) ::: BERT is a giant language model.\nConclusion:\nPopular(gpt3) ::: GPT-3 is popular.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.\nQuestion:\nBased on the above information, is the following"
    ]
  },
  {
    "id": "FOLIO_train_890",
    "context": "St Johnstone is a Scottish team. St Johnstone is part of the Scottish Premiership. If a team is part of the league, it has joined the league. St Johnstone and Minsk are different teams. For two different teams, either one team wins or the other team wins. Minsk won against St Johnstone.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? At least one Scottish team has joined the Scottish Premiership.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nScottish(x) ::: x is a Scottish team.\nPremiership(x) ::: x is part of the Scottish Premiership.\nJoin(x, y) ::: x has joined y.\nWin(x, y) ::: x wins against y.\nPremises:\nScottish(stJohnstone) ∧ Premiership(stJohnstone) ::: St Johnstone is a Scottish team. St Johnstone is part of the Scottish Premiership.\n∀x ∀y (Premiership(x) → Join(x, league)) ::: If a team is part of the league, it has joined the league.\n∀x ∀y (Scottish(x) ∧ Scottish(y) ∧ ¬x = y → (Win(x, y) ∨ Win(y, x))) ::: For two different teams, either one team wins or the other team wins.\nWin(minsk, stJohnstone) ::: Minsk won against St Johnstone.\nConclusion:\n∃x (Scottish(x) ∧ Join(x, league)) ::: At least one Scottish team has joined the Scottish Premiership.\n------"
    ]
  },
  {
    "id": "FOLIO_train_891",
    "context": "St Johnstone is a Scottish team. St Johnstone is part of the Scottish Premiership. If a team is part of the league, it has joined the league. St Johnstone and Minsk are different teams. For two different teams, either one team wins or the other team wins. Minsk won against St Johnstone.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? St Johnstone won against Minsk.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTeam(x) ::: x is a team.\nScottish(x) ::: x is a Scottish team.\nPremiership(x) ::: x is part of the Scottish Premiership.\nLeague(x) ::: x is a league.\nJoin(x, y) ::: x has joined y.\nWin(x, y) ::: x wins against y.\nDifferent(x, y) ::: x and y are different teams.\nPremises:\nScottish(stJohnstone) ∧ Premiership(stJohnstone) ::: St Johnstone is a Scottish team. St Johnstone is part of the Scottish Premiership.\n∀x ∀y (Premiership(x) → Join(x, league)) ::: If a team is part of the league, it has joined the league.\n∀x ∀y (Different(x, y) → (Win(x, y) ∨ Win(y, x))) ::: For two different teams, either one team wins or the other team wins.\nDifferent(stJohnstone, minsk) ::: St Johnstone and Minsk are different teams.\nWin(minsk, st"
    ]
  },
  {
    "id": "FOLIO_train_892",
    "context": "St Johnstone is a Scottish team. St Johnstone is part of the Scottish Premiership. If a team is part of the league, it has joined the league. St Johnstone and Minsk are different teams. For two different teams, either one team wins or the other team wins. Minsk won against St Johnstone.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Minsk joined the Scottish Premiership.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nScottish(x) ::: x is a Scottish team.\nPremiership(x) ::: x is part of the Scottish Premiership.\nJoin(x, y) ::: x has joined y.\nWin(x, y) ::: x wins against y.\nDifferent(x, y) ::: x and y are different teams.\nPremises:\nScottish(stJohnstone) ∧ Premiership(stJohnstone) ::: St Johnstone is a Scottish team. St Johnstone is part of the Scottish Premiership.\n∀x ∀y (Premiership(x) → Join(x, league)) ::: If a team is part of the league, it has joined the league.\nDifferent(stJohnstone, minsk) ::: St Johnstone and Minsk are different teams.\n∀x ∀y (Different(x, y) → (Win(x, y) ∨ Win(y, x))) ::: For two different teams, either one team wins or the other team wins.\nWin(minsk, stJohnstone) ::: Minsk won against St Johnstone.\nConclusion:\nJoin(minsk, scott"
    ]
  },
  {
    "id": "FOLIO_train_893",
    "context": "No Boeing-737 plane is equipped with more than 300 seats. All planes in Delta are of type Boeing-737. Planes are either equipped with more than 300 seats or have a capacity of 100 passengers. All planes with a capacity of 100 passengers are scheduled for a short-distance flight. All planes with a capacity of 100 passengers are produced before 2010. Jake32 is either a Boeing-737 plane or a plane in Delta. T10 is either a Boeing-737 plane and in Delta, or neither a Boeing-737 plane nor in Delta.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jake32 was produced before 2010 and is scheduled for a short-distance flight.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBoeing737(x) ::: x is a Boeing-737 plane.\nDelta(x) ::: x is a plane in Delta.\nSeat(x) ::: x is equipped with more than 300 seats.\nCapacity(x) ::: x has a capacity of 100 passengers.\nShortDistance(x) ::: x is scheduled for a short-distance flight.\nProduce(x, y) ::: x is produced in year y.\nPremises:\n¬∃x (Boeing737(x) ∧ Seat(x)) ::: No Boeing-737 plane is equipped with more than 300 seats.\n∀x (Delta(x) → Boeing737(x)) ::: All planes in Delta are of type Boeing-737.\n∀x (Seat(x) ∨ Capacity(x)) ::: Planes are either equipped with more than 300 seats or have a capacity of 100 passengers.\n∀x (Capacity(x) → ShortDistance(x)) ::: All planes with a capacity of 10"
    ]
  },
  {
    "id": "FOLIO_train_894",
    "context": "No Boeing-737 plane is equipped with more than 300 seats. All planes in Delta are of type Boeing-737. Planes are either equipped with more than 300 seats or have a capacity of 100 passengers. All planes with a capacity of 100 passengers are scheduled for a short-distance flight. All planes with a capacity of 100 passengers are produced before 2010. Jake32 is either a Boeing-737 plane or a plane in Delta. T10 is either a Boeing-737 plane and in Delta, or neither a Boeing-737 plane nor in Delta.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jake32 is not produced before 2010 and is not scheduled for a short-distance flight.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBoeing737(x) ::: x is a Boeing-737 plane.\nDelta(x) ::: x is a plane in Delta.\nSeat(x) ::: x is equipped with more than 300 seats.\nCapacity(x) ::: x has a capacity of 100 passengers.\nShortDistance(x) ::: x is scheduled for a short-distance flight.\nProduce(x, y) ::: x is produced in year y.\nPremises:\n¬∃x (Boeing737(x) ∧ Seat(x)) ::: No Boeing-737 plane is equipped with more than 300 seats.\n∀x (Delta(x) → Boeing737(x)) ::: All planes in Delta are of type Boeing-737.\n∀x (Seat(x) ∨ Capacity(x)) ::: Planes are either equipped with more than 300 seats or have a capacity of 100 passengers.\n∀x (Capacity(x) → ShortDistance(x)) ::: All planes with a capacity of 100"
    ]
  },
  {
    "id": "FOLIO_train_895",
    "context": "No Boeing-737 plane is equipped with more than 300 seats. All planes in Delta are of type Boeing-737. Planes are either equipped with more than 300 seats or have a capacity of 100 passengers. All planes with a capacity of 100 passengers are scheduled for a short-distance flight. All planes with a capacity of 100 passengers are produced before 2010. Jake32 is either a Boeing-737 plane or a plane in Delta. T10 is either a Boeing-737 plane and in Delta, or neither a Boeing-737 plane nor in Delta.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jake32 is produced before 2010 or scheduled for a short-distance flight.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBoeing737(x) ::: x is a Boeing-737 plane.\nDelta(x) ::: x is a plane in Delta.\nSeat(x) ::: x is equipped with more than 300 seats.\nCapacity(x) ::: x has a capacity of 100 passengers.\nShortDistance(x) ::: x is scheduled for a short-distance flight.\nProduce(x, y) ::: x is produced in year y.\nPremises:\n¬∃x (Boeing737(x) ∧ Seat(x)) ::: No Boeing-737 plane is equipped with more than 300 seats.\n∀x (Delta(x) → Boeing737(x)) ::: All planes in Delta are of type Boeing-737.\n∀x (Seat(x) ∨ Capacity(x)) ::: Planes are either equipped with more than 300 seats or have a capacity of 100 passengers.\n∀x (Capacity(x) → ShortDistance(x)) ::: All planes with a capacity of 10"
    ]
  },
  {
    "id": "FOLIO_train_896",
    "context": "No Boeing-737 plane is equipped with more than 300 seats. All planes in Delta are of type Boeing-737. Planes are either equipped with more than 300 seats or have a capacity of 100 passengers. All planes with a capacity of 100 passengers are scheduled for a short-distance flight. All planes with a capacity of 100 passengers are produced before 2010. Jake32 is either a Boeing-737 plane or a plane in Delta. T10 is either a Boeing-737 plane and in Delta, or neither a Boeing-737 plane nor in Delta.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jake32 is neither produced before 2010 nor scheduled for a short-distance flight.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBoeing737(x) ::: x is a Boeing-737 plane.\nDelta(x) ::: x is a plane in Delta.\nSeat(x) ::: x is equipped with more than 300 seats.\nCapacity(x) ::: x has a capacity of 100 passengers.\nShortDistance(x) ::: x is scheduled for a short-distance flight.\nProduce(x, y) ::: x is produced in year y.\nPremises:\n¬∃x (Boeing737(x) ∧ Seat(x)) ::: No Boeing-737 plane is equipped with more than 300 seats.\n∀x (Delta(x) → Boeing737(x)) ::: All planes in Delta are of type Boeing-737.\n∀x (Seat(x) ∨ Capacity(x)) ::: Planes are either equipped with more than 300 seats or have a capacity of 100 passengers.\n∀x (Capacity(x) → ShortDistance(x)) ::: All planes with a capacity of 10"
    ]
  },
  {
    "id": "FOLIO_train_897",
    "context": "The SAT test is wholly owned and developed by the College Board. The SAT test is intended to assess student's readiness for college. The SAT was originally designed not to be aligned with high school curricula. Several adjustments were made for the version of the SAT introduced in 2016 to reflect more closely on what students learn in high school.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Since 2016 the SAT has been better aligned with high school curricula.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSAT(x) ::: x is the SAT test.\nOwn(x, y) ::: x owns y.\nDevelop(x, y) ::: x develops y.\nIntend(x, y) ::: x is intended to y.\nAssess(x, y) ::: x assesses y.\nAlign(x, y) ::: x is aligned with y.\nAdjust(x, y) ::: x is adjusted to y.\nReflect(x, y) ::: x reflects y.\nPremises:\nOwn(collegeBoard, SAT) ∧ Develop(collegeBoard, SAT) ::: The SAT test is wholly owned and developed by the College Board.\nIntend(SAT, assessStudentReadinessForCollege) ::: The SAT test is intended to assess student's readiness for college.\n¬Align(SAT, highSchoolCurricula) ::: The SAT was originally designed not to be aligned with high school curricula.\nAdjust(SAT, moreCloselyReflectWhatStudentsLearnInHighSchool) ::: Several adjustments were made"
    ]
  },
  {
    "id": "FOLIO_train_898",
    "context": "The SAT test is wholly owned and developed by the College Board. The SAT test is intended to assess student's readiness for college. The SAT was originally designed not to be aligned with high school curricula. Several adjustments were made for the version of the SAT introduced in 2016 to reflect more closely on what students learn in high school.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The SAT test is owned by the College Board and multiple other third parties.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nOwn(x, y) ::: x owns y.\nDevelop(x, y) ::: x develops y.\nIntend(x, y) ::: x intends to y.\nAssess(x, y) ::: x assesses y.\nDesign(x, y) ::: x designs y.\nAdjust(x, y) ::: x adjusts y.\nReflect(x, y) ::: x reflects on y.\nPremises:\nOwn(collegeBoard, satTest) ∧ Develop(collegeBoard, satTest) ::: The SAT test is wholly owned and developed by the College Board.\nIntend(satTest, assessStudentReadinessForCollege) ::: The SAT test is intended to assess student's readiness for college.\nDesign(satTest, notAlignWithHighSchoolCurricula) ::: The SAT was originally designed not to be aligned with high school curricula.\nAdjust(satTest, reflectMoreCloselyOnWhatStudentsLearnInHighSchool) ::: Several adjustments were made for the version of the SAT introduced in 20"
    ]
  },
  {
    "id": "FOLIO_train_899",
    "context": "The SAT test is wholly owned and developed by the College Board. The SAT test is intended to assess student's readiness for college. The SAT was originally designed not to be aligned with high school curricula. Several adjustments were made for the version of the SAT introduced in 2016 to reflect more closely on what students learn in high school.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The SAT test assesses student's math skills.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSAT(x) ::: x is the SAT test.\nOwn(x, y) ::: x owns y.\nDevelop(x, y) ::: x develops y.\nIntend(x, y) ::: x is intended to y.\nAlign(x, y) ::: x is aligned with y.\nAdjust(x, y) ::: x is adjusted to y.\nReflect(x, y) ::: x reflects on y.\nPremises:\nOwn(collegeBoard, SAT) ∧ Develop(collegeBoard, SAT) ::: The SAT test is wholly owned and developed by the College Board.\nIntend(SAT, studentReadiness) ::: The SAT test is intended to assess student's readiness for college.\n¬Align(SAT, highSchoolCurriculum) ::: The SAT was originally designed not to be aligned with high school curricula.\nAdjust(SAT, version2016) ∧ Reflect(version2016, highSchoolCurriculum) ::: Several adjustments were made for the version of the SAT introduced in 2"
    ]
  },
  {
    "id": "FOLIO_train_900",
    "context": "Rafa Nadal was born in Mallorca. Rafa Nadal is a professional tennis player. Nadal's win ratio is higher than 80%. All players in the Big 3 are professionals who have a high win ratio.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Nadal was not born in Mallorca.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBorn(x, y) ::: x was born in y.\nProfessional(x) ::: x is a professional.\nTennisPlayer(x) ::: x is a tennis player.\nWinRatio(x, y) ::: x's win ratio is y.\nBig3(x) ::: x is a player in the Big 3.\nPremises:\nBorn(rafa, mallorca) ::: Rafa Nadal was born in Mallorca.\nTennisPlayer(rafa) ∧ Professional(rafa) ∧ WinRatio(rafa, 80) ::: Rafa Nadal is a professional tennis player. Nadal's win ratio is higher than 80%.\n∀x (Big3(x) → (Professional(x) ∧ WinRatio(x, high))) ::: All players in the Big 3 are professionals who have a high win ratio.\nConclusion:\n¬Born(rafa, mallorca) ::: Nadal was not born in Mallorca.\n------"
    ]
  },
  {
    "id": "FOLIO_train_901",
    "context": "Rafa Nadal was born in Mallorca. Rafa Nadal is a professional tennis player. Nadal's win ratio is higher than 80%. All players in the Big 3 are professionals who have a high win ratio.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Nadal is in the Big 3.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBorn(x, y) ::: x was born in y.\nProfessional(x) ::: x is a professional.\nTennisPlayer(x) ::: x is a tennis player.\nWinRatio(x, y) ::: x's win ratio is y.\nBig3(x) ::: x is in the Big 3.\nPremises:\nBorn(rafa, mallorca) ∧ TennisPlayer(rafa) ∧ WinRatio(rafa, 80) ::: Rafa Nadal was born in Mallorca. Rafa Nadal is a professional tennis player. Nadal's win ratio is higher than 80%.\n∀x (Big3(x) → (Professional(x) ∧ TennisPlayer(x) ∧ WinRatio(x, high))) ::: All players in the Big 3 are professionals who have a high win ratio.\nConclusion:\nBig3(rafa) ::: Nadal is in the Big 3.\n------\nProblem:\nThe first person to reach the sum"
    ]
  },
  {
    "id": "FOLIO_train_902",
    "context": "Rafa Nadal was born in Mallorca. Rafa Nadal is a professional tennis player. Nadal's win ratio is higher than 80%. All players in the Big 3 are professionals who have a high win ratio.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Nadal is the greatest player of all time.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBorn(x, y) ::: x was born in y.\nProfessional(x) ::: x is a professional.\nTennisPlayer(x) ::: x is a tennis player.\nWinRatio(x, y) ::: x's win ratio is y.\nBig3(x) ::: x is a player in the Big 3.\nPremises:\nBorn(rafa, mallorca) ∧ TennisPlayer(rafa) ∧ WinRatio(rafa, 80) ::: Rafa Nadal was born in Mallorca. Rafa Nadal is a professional tennis player. Nadal's win ratio is higher than 80%.\n∀x (Big3(x) → (Professional(x) ∧ WinRatio(x, high))) ::: All players in the Big 3 are professionals who have a high win ratio.\nConclusion:\nGreatest(rafa) ::: Nadal is the greatest player of all time.\n------\nProblem:\nThe first person to reach the summit of Mount"
    ]
  },
  {
    "id": "FOLIO_train_903",
    "context": "No cookie is healthy. All oreos are cookies.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? All cookies are delicious.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCookie(x) ::: x is a cookie.\nHealthy(x) ::: x is healthy.\nOreo(x) ::: x is an oreo.\nDelicious(x) ::: x is delicious.\nPremises:\n¬∀x (Cookie(x) → Healthy(x)) ::: No cookie is healthy.\n∀x (Oreo(x) → Cookie(x)) ::: All oreos are cookies.\nConclusion:\n¬∀x (Cookie(x) → Delicious(x)) ::: All cookies are delicious.\n------\nProblem:\nNo one who is a student is a person who is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is a student.\nBased on the above information, is the following statement true, false, or uncertain?"
    ]
  },
  {
    "id": "FOLIO_train_904",
    "context": "No animals are plants. All humans are animals. All pupils are human. All flowers are plants. If Jack is a human or a flower, then Jack is a human and a flower.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jack is a pupil.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAnimal(x) ::: x is an animal.\nPlant(x) ::: x is a plant.\nHuman(x) ::: x is a human.\nPupil(x) ::: x is a pupil.\nFlower(x) ::: x is a flower.\nPremises:\n¬(Animal(x) ∧ Plant(x)) ::: No animals are plants.\n∀x (Human(x) → Animal(x)) ::: All humans are animals.\n∀x (Pupil(x) → Human(x)) ::: All pupils are human.\n∀x (Flower(x) → Plant(x)) ::: All flowers are plants.\n(Human(jack) ∨ Flower(jack)) → (Human(jack) ∧ Flower(jack)) ::: If Jack is a human or a flower, then Jack is a human and a flower.\nConclusion:\nPupil(jack) ::: Jack is a pupil.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caff"
    ]
  },
  {
    "id": "FOLIO_train_905",
    "context": "No animals are plants. All humans are animals. All pupils are human. All flowers are plants. If Jack is a human or a flower, then Jack is a human and a flower.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jack is not a pupil.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAnimal(x) ::: x is an animal.\nPlant(x) ::: x is a plant.\nHuman(x) ::: x is a human.\nPupil(x) ::: x is a pupil.\nFlower(x) ::: x is a flower.\nPremises:\n¬(Animal(x) ∧ Plant(x)) ::: No animals are plants.\n∀x (Human(x) → Animal(x)) ::: All humans are animals.\n∀x (Pupil(x) → Human(x)) ::: All pupils are human.\n∀x (Flower(x) → Plant(x)) ::: All flowers are plants.\n(Human(jack) ∨ Flower(jack)) → (Human(jack) ∧ Flower(jack)) ::: If Jack is a human or a flower, then Jack is a human and a flower.\nConclusion:\n¬Pupil(jack) ::: Jack is not a pupil.\n------\nProblem:\nAll people who regularly drink coffee are dependent on"
    ]
  },
  {
    "id": "FOLIO_train_906",
    "context": "No animals are plants. All humans are animals. All pupils are human. All flowers are plants. If Jack is a human or a flower, then Jack is a human and a flower.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jack is a plant.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAnimal(x) ::: x is an animal.\nHuman(x) ::: x is a human.\nPupil(x) ::: x is a pupil.\nPlant(x) ::: x is a plant.\nFlower(x) ::: x is a flower.\nPremises:\n¬(Animal(x) ∧ Plant(x)) ::: No animals are plants.\n∀x (Human(x) → Animal(x)) ::: All humans are animals.\n∀x (Pupil(x) → Human(x)) ::: All pupils are human.\n∀x (Flower(x) → Plant(x)) ::: All flowers are plants.\n(Human(jack) ∨ Flower(jack)) → (Human(jack) ∧ Flower(jack)) ::: If Jack is a human or a flower, then Jack is a human and a flower.\nConclusion:\n¬Plant(jack) ::: Jack is a plant.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffe"
    ]
  },
  {
    "id": "FOLIO_train_907",
    "context": "No animals are plants. All humans are animals. All pupils are human. All flowers are plants. If Jack is a human or a flower, then Jack is a human and a flower.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Jack is a human, then Jack is not a pupil.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAnimal(x) ::: x is an animal.\nPlant(x) ::: x is a plant.\nHuman(x) ::: x is a human.\nPupil(x) ::: x is a pupil.\nFlower(x) ::: x is a flower.\nPremises:\n¬(Animal(x) ∧ Plant(x)) ::: No animals are plants.\n∀x (Human(x) → Animal(x)) ::: All humans are animals.\n∀x (Pupil(x) → Human(x)) ::: All pupils are human.\n∀x (Flower(x) → Plant(x)) ::: All flowers are plants.\n(Human(jack) ∨ Flower(jack)) → (Human(jack) ∧ Flower(jack)) ::: If Jack is a human or a flower, then Jack is a human and a flower.\nConclusion:\n¬(Human(jack) ∧ Pupil(jack)) ::: If Jack is a human, then Jack is not a pupil."
    ]
  },
  {
    "id": "FOLIO_train_908",
    "context": "No shoes are food. All slippers are shoes. A thing is either food or clothes. No wearable things are airtight. All clothes are wearable. If a watch is not airtight and clothes, then a watch is either both airtight and clothes, or neither airtight nor clothes.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Watch is a wearable.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFood(x) ::: x is food.\nShoe(x) ::: x is a shoe.\nSlipper(x) ::: x is a slipper.\nClothes(x) ::: x is clothes.\nWearable(x) ::: x is wearable.\nAirtight(x) ::: x is airtight.\nWatch(x) ::: x is a watch.\nPremises:\n¬(Food(x) ∧ Shoe(x)) ::: No shoes are food.\n∀x (Slipper(x) → Shoe(x)) ::: All slippers are shoes.\n(Food(x) ∨ Clothes(x)) ∧ ¬(Food(x) ∧ Clothes(x)) ::: A thing is either food or clothes.\n¬(Wearable(x) ∧ Airtight(x)) ::: No wearable things are airtight.\n∀x (Clothes(x) → Wearable(x)) ::: All clothes are"
    ]
  },
  {
    "id": "FOLIO_train_909",
    "context": "No shoes are food. All slippers are shoes. A thing is either food or clothes. No wearable things are airtight. All clothes are wearable. If a watch is not airtight and clothes, then a watch is either both airtight and clothes, or neither airtight nor clothes.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Watch is a slipper.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nShoe(x) ::: x is a shoe.\nSlipper(x) ::: x is a slipper.\nFood(x) ::: x is food.\nClothes(x) ::: x is clothes.\nWearable(x) ::: x is wearable.\nAirtight(x) ::: x is airtight.\nWatch(x) ::: x is a watch.\nPremises:\n¬(Shoe(x) ∧ Food(x)) ::: No shoes are food.\n∀x (Slipper(x) → Shoe(x)) ::: All slippers are shoes.\n∀x (Food(x) ⊕ Clothes(x)) ::: A thing is either food or clothes.\n¬(Wearable(x) ∧ Airtight(x)) ::: No wearable things are airtight.\n∀x (Clothes(x) → Wearable(x)) ::: All clothes are wearable.\n¬(Airtight(watch) ∧ Cloth"
    ]
  },
  {
    "id": "FOLIO_train_910",
    "context": "No shoes are food. All slippers are shoes. A thing is either food or clothes. No wearable things are airtight. All clothes are wearable. If a watch is not airtight and clothes, then a watch is either both airtight and clothes, or neither airtight nor clothes.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Watch is neither airtight nor a slipper.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nShoe(x) ::: x is a shoe.\nSlipper(x) ::: x is a slipper.\nFood(x) ::: x is food.\nClothes(x) ::: x is clothes.\nWearable(x) ::: x is wearable.\nAirtight(x) ::: x is airtight.\nWatch(x) ::: x is a watch.\nPremises:\n¬(Shoe(x) ∧ Food(x)) ::: No shoes are food.\n∀x (Slipper(x) → Shoe(x)) ::: All slippers are shoes.\n(Food(x) ∨ Clothes(x)) ∧ ¬(Food(x) ∧ Clothes(x)) ::: A thing is either food or clothes.\n¬(Wearable(x) ∧ Airtight(x)) ::: No wearable things are airtight.\n∀x (Clothes(x) → Wearable(x)) ::: All clothes are wearable.\n¬(Airtight(watch) ∧ Clothes(watch)) → (Airtight(watch) ∧ Clothes(watch)) ∨ ¬(Airtight(watch) ∨ Clothes(watch)) ::: If a watch is not airtight and clothes, then a watch is either both airtight and clothes, or neither airtight nor clothes.\nConclusion:\n¬(Airtight(watch) ∨ Slipper(watch)) ::: Watch is neither airtight nor a slipper.\n------"
    ]
  },
  {
    "id": "FOLIO_train_911",
    "context": "An Olympian is a person who trains for an Olympic sport and goes to the Olympics. Carlos Reyes trains for an Olympic sport. Carlos Reyes went to the Olympics. Carlos Reyes is a welterweight. Heavy weights are not welterweights.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Carlos Reyes is an Olympian.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nOlympian(x) ::: x is an Olympian.\nTrain(x) ::: x trains for an Olympic sport.\nGo(x) ::: x goes to the Olympics.\nWelterweight(x) ::: x is a welterweight.\nHeavyWeight(x) ::: x is a heavy weight.\nPremises:\nOlympian(x) → Train(x) ∧ Go(x) ::: An Olympian is a person who trains for an Olympic sport and goes to the Olympics.\nTrain(carlos) ::: Carlos Reyes trains for an Olympic sport.\nGo(carlos) ::: Carlos Reyes went to the Olympics.\nWelterweight(carlos) ::: Carlos Reyes is a welterweight.\n¬HeavyWeight(x) → Welterweight(x) ::: Heavy weights are not welterweights.\nConclusion:\nOlympian(carlos) ::: Carlos Reyes is an Olympian.\n------\nProblem:\nA person is a member of the House of Representatives if and only if the person is a member of the United States Congress. A person is a member of the United States Congress if and only if the person is a member of the House of Representatives or a member of the Senate. A person is a member of the Senate if and only if the person is a member of the United States Congress.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? A person is a member of the House of Representatives if and only if the person is a member of the Senate.\nBased on the above information, is the following statement true, false, or"
    ]
  },
  {
    "id": "FOLIO_train_912",
    "context": "An Olympian is a person who trains for an Olympic sport and goes to the Olympics. Carlos Reyes trains for an Olympic sport. Carlos Reyes went to the Olympics. Carlos Reyes is a welterweight. Heavy weights are not welterweights.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Carlos Reyes is a heavy weight.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nOlympian(x) ::: x is an Olympian.\nTrain(x) ::: x trains for an Olympic sport.\nGo(x) ::: x goes to the Olympics.\nWelterweight(x) ::: x is a welterweight.\nHeavyWeight(x) ::: x is a heavy weight.\nPremises:\nOlympian(x) → Train(x) ∧ Go(x) ::: An Olympian is a person who trains for an Olympic sport and goes to the Olympics.\nTrain(carlos) ∧ Go(carlos) ::: Carlos Reyes trains for an Olympic sport. Carlos Reyes went to the Olympics.\nWelterweight(carlos) ::: Carlos Reyes is a welterweight.\n¬HeavyWeight(x) ∧ Welterweight(x) ::: Heavy weights are not welterweights.\nConclusion:\n¬HeavyWeight(carlos) ::: Carlos Reyes is a heavy weight.\n------\nProblem:\nA person is a member of the House of Representatives if and only if the person is a member of the United States Congress. A person is a member of the United States Congress if and only if the person is a member of the House of Representatives or a member of the Senate. A person is a member of the Senate if and only if the person is a member of the United States Congress.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? A person is a member of the House of Representatives if and only if the person is a member of the Senate.\nBased on the above information, is the following statement true, false,"
    ]
  },
  {
    "id": "FOLIO_train_913",
    "context": "An Olympian is a person who trains for an Olympic sport and goes to the Olympics. Carlos Reyes trains for an Olympic sport. Carlos Reyes went to the Olympics. Carlos Reyes is a welterweight. Heavy weights are not welterweights.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Carlos Reyes won an Olympic medal.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nOlympian(x) ::: x is an Olympian.\nTrain(x) ::: x trains for an Olympic sport.\nGo(x) ::: x goes to the Olympics.\nWelterweight(x) ::: x is a welterweight.\nHeavyWeight(x) ::: x is a heavy weight.\nPremises:\nOlympian(x) → (Train(x) ∧ Go(x)) ::: An Olympian is a person who trains for an Olympic sport and goes to the Olympics.\nTrain(carlos) ∧ Go(carlos) ::: Carlos Reyes trains for an Olympic sport. Carlos Reyes went to the Olympics.\nWelterweight(carlos) ::: Carlos Reyes is a welterweight.\n¬HeavyWeight(x) ∧ Welterweight(x) ::: Heavy weights are not welterweights.\nConclusion:\n¬HeavyWeight(carlos) ::: Carlos Reyes won an Olympic medal.\n------\nProblem:\nA person is a member of the House of Representatives if and only if the person is a member of the United States Congress. A person is a member of the United States Congress if and only if the person is a member of the House of Representatives or a member of the Senate. A person is a member of the Senate if and only if the person is a member of the United States Congress.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? A person is a member of the House of Representatives if and only if the person is a member of the Senate.\nBased on the above information, is the following statement true,"
    ]
  },
  {
    "id": "FOLIO_train_914",
    "context": "If people have a lot of decorations in their room, they cannot pack and move out of their rooms very easily. If people have high ambitions and future career goals, then they can pack and move out of their rooms very easily. If people are big fans of pop bands and singers, then they have a lot of decorations in their room. All young teenage girls who attend college are big fans of pop bands and singers. If Sam has high ambitions and future career goals, then Sam is a big fan of pop bands and singers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Sam is a young teenage girl who attends college.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDecoration(x) ::: x is a decoration.\nRoom(x) ::: x is a room.\nAmbition(x) ::: x has high ambitions and future career goals.\nFan(x, y) ::: x is a big fan of y.\nBand(x) ::: x is a pop band.\nSinger(x) ::: x is a pop singer.\nTeenageGirl(x) ::: x is a young teenage girl.\nCollege(x) ::: x attends college.\nPremises:\n¬(Decoration(x) ∧ Room(x)) → ¬(Ambition(x) ∧ Room(x)) ::: If people have a lot of decorations in their room, they cannot pack and move out of their rooms very easily.\nAmbition(x) → (Decoration(x) ∧ Room(x)) ::: If people have high ambitions and future career goals, then they can pack and move out of their rooms very easily.\nFan(x, y) → (Decoration(x) ∧ Room(x)) ::: If people are big fans of pop bands and singers, then they have a lot of decorations in their room.\n∀x (TeenageGirl(x) ∧ College(x) → Fan(x, y)) ::: All young teenage girls who attend college are big fans of pop bands and singers.\nAmbition(sam) → Fan(sam, y) ::: If Sam has high ambitions and future career goals, then Sam is a big fan of pop bands and singers"
    ]
  },
  {
    "id": "FOLIO_train_915",
    "context": "If people have a lot of decorations in their room, they cannot pack and move out of their rooms very easily. If people have high ambitions and future career goals, then they can pack and move out of their rooms very easily. If people are big fans of pop bands and singers, then they have a lot of decorations in their room. All young teenage girls who attend college are big fans of pop bands and singers. If Sam has high ambitions and future career goals, then Sam is a big fan of pop bands and singers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Sam is not a young teenage girl who attends college.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDecoration(x) ::: x is a decoration.\nRoom(x) ::: x is a room.\nAmbition(x) ::: x has high ambitions and future career goals.\nFan(x, y) ::: x is a big fan of y.\nBand(x) ::: x is a pop band.\nSinger(x) ::: x is a pop singer.\nTeenageGirl(x) ::: x is a young teenage girl.\nCollege(x) ::: x attends college.\nPremises:\n¬(Decoration(x) ∧ Room(x)) → ¬(Ambition(x) ∧ Room(x)) ::: If people have a lot of decorations in their room, they cannot pack and move out of their rooms very easily.\nAmbition(x) → (Decoration(x) ∧ Room(x)) ::: If people have high ambitions and future career goals, then they can pack and move out of their rooms very easily.\nFan(x, y) → (Decoration(x) ∧ Room(x)) ::: If people are big fans of pop bands and singers, then they have a lot of decorations in their room.\n∀x (TeenageGirl(x) ∧ College(x) → Fan(x, y)) ::: All young teenage girls who attend college are big fans of pop bands and singers.\nAmbition(sam) → Fan(sam, y) ::: If Sam has high ambitions and future career goals, then Sam is a big fan of pop bands and singers"
    ]
  },
  {
    "id": "FOLIO_train_916",
    "context": "If people have a lot of decorations in their room, they cannot pack and move out of their rooms very easily. If people have high ambitions and future career goals, then they can pack and move out of their rooms very easily. If people are big fans of pop bands and singers, then they have a lot of decorations in their room. All young teenage girls who attend college are big fans of pop bands and singers. If Sam has high ambitions and future career goals, then Sam is a big fan of pop bands and singers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Sam is a big fan of pop bands and singers.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDecoration(x) ::: x is a decoration.\nRoom(x) ::: x is a room.\nAmbition(x) ::: x has high ambitions and future career goals.\nFan(x, y) ::: x is a big fan of y.\nBand(x) ::: x is a pop band.\nSinger(x) ::: x is a pop singer.\nTeenage(x) ::: x is a young teenage girl.\nCollege(x) ::: x attends college.\nPremises:\n¬(Decoration(x) ∧ Room(x)) → ¬(Ambition(x) ∧ Room(x)) ::: If people have a lot of decorations in their room, they cannot pack and move out of their rooms very easily.\nAmbition(x) → (Decoration(x) ∧ Room(x)) ::: If people have high ambitions and future career goals, then they can pack and move out of their rooms very easily.\nFan(x, y) → (Decoration(x) ∧ Room(x)) ::: If people are big fans of pop bands and singers, then they have a lot of decorations in their room.\n∀x (Teenage(x) ∧ College(x) → Fan(x, y)) ::: All young teenage girls who attend college are big fans of pop bands and singers.\nAmbition(sam) → Fan(sam, y) ::: If Sam has high ambitions and future career goals, then Sam is a big fan of pop bands and singers.\nConclusion"
    ]
  },
  {
    "id": "FOLIO_train_917",
    "context": "If people have a lot of decorations in their room, they cannot pack and move out of their rooms very easily. If people have high ambitions and future career goals, then they can pack and move out of their rooms very easily. If people are big fans of pop bands and singers, then they have a lot of decorations in their room. All young teenage girls who attend college are big fans of pop bands and singers. If Sam has high ambitions and future career goals, then Sam is a big fan of pop bands and singers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Sam neither has high ambitions and future career goals nor is she a young teenage girl who attends college.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDecoration(x) ::: x has a lot of decorations in their room.\nAmbition(x) ::: x has high ambitions and future career goals.\nFan(x) ::: x is a big fan of pop bands and singers.\nTeenageGirl(x) ::: x is a young teenage girl.\nCollege(x) ::: x attends college.\nPremises:\n¬(Decoration(x) ∧ Ambition(x)) → ¬Pack(x) ::: If people have a lot of decorations in their room, they cannot pack and move out of their rooms very easily.\nAmbition(x) → Pack(x) ::: If people have high ambitions and future career goals, then they can pack and move out of their rooms very easily.\nFan(x) → Decoration(x) ::: If people are big fans of pop bands and singers, then they have a lot of decorations in their room.\n∀x (TeenageGirl(x) ∧ College(x) → Fan(x)) ::: All young teenage girls who attend college are big fans of pop bands and singers.\nAmbition(sam) → Fan(sam) ::: If Sam has high ambitions and future career goals, then Sam is a big fan of pop bands and singers.\nConclusion:\n¬(Ambition(sam) ∧ Fan(sam)) ∨ ¬(TeenageGirl(sam) ∨ College(sam)) ::: Sam neither has high ambitions and future career goals nor is she a young teenage girl who att"
    ]
  },
  {
    "id": "FOLIO_train_918",
    "context": "If people have a lot of decorations in their room, they cannot pack and move out of their rooms very easily. If people have high ambitions and future career goals, then they can pack and move out of their rooms very easily. If people are big fans of pop bands and singers, then they have a lot of decorations in their room. All young teenage girls who attend college are big fans of pop bands and singers. If Sam has high ambitions and future career goals, then Sam is a big fan of pop bands and singers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Sam has high ambitions and future career goals and is a young teenage girl who attends college.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDecoration(x) ::: x is a decoration.\nRoom(x) ::: x is a room.\nAmbition(x) ::: x has high ambitions and future career goals.\nFan(x, y) ::: x is a big fan of y.\nBand(x) ::: x is a pop band.\nSinger(x) ::: x is a pop singer.\nTeenageGirl(x) ::: x is a young teenage girl.\nCollege(x) ::: x attends college.\nPremises:\n¬(Decoration(x) ∧ Room(x)) → ¬(Ambition(x) ∧ Room(x)) ::: If people have a lot of decorations in their room, they cannot pack and move out of their rooms very easily.\nAmbition(x) → (Decoration(x) ∧ Room(x)) ::: If people have high ambitions and future career goals, then they can pack and move out of their rooms very easily.\nFan(x, y) → (Decoration(x) ∧ Room(x)) ::: If people are big fans of pop bands and singers, then they have a lot of decorations in their room.\n∀x (TeenageGirl(x) ∧ College(x) → Fan(x, y)) ::: All young teenage girls who attend college are big fans of pop bands and singers.\nAmbition(sam) → Fan(sam, y) ::: If Sam has high ambitions and future career goals, then Sam is a big fan of pop bands and singers"
    ]
  },
  {
    "id": "FOLIO_train_919",
    "context": "If people have a lot of decorations in their room, they cannot pack and move out of their rooms very easily. If people have high ambitions and future career goals, then they can pack and move out of their rooms very easily. If people are big fans of pop bands and singers, then they have a lot of decorations in their room. All young teenage girls who attend college are big fans of pop bands and singers. If Sam has high ambitions and future career goals, then Sam is a big fan of pop bands and singers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Sam has high ambitions and future career goals and is a young teenage girl who attends college.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDecoration(x) ::: x is a decoration.\nRoom(x) ::: x is a room.\nAmbition(x) ::: x has high ambitions and future career goals.\nFan(x, y) ::: x is a big fan of y.\nBand(x) ::: x is a pop band.\nSinger(x) ::: x is a pop singer.\nTeenageGirl(x) ::: x is a young teenage girl.\nCollege(x) ::: x attends college.\nPremises:\n¬(Decoration(x) ∧ Room(x)) → ¬(Ambition(x) ∧ Room(x)) ::: If people have a lot of decorations in their room, they cannot pack and move out of their rooms very easily.\nAmbition(x) → (Decoration(x) ∧ Room(x)) ::: If people have high ambitions and future career goals, then they can pack and move out of their rooms very easily.\nFan(x, y) → (Decoration(x) ∧ Room(x)) ::: If people are big fans of pop bands and singers, then they have a lot of decorations in their room.\n∀x (TeenageGirl(x) ∧ College(x) → Fan(x, y)) ::: All young teenage girls who attend college are big fans of pop bands and singers.\nAmbition(sam) → Fan(sam, y) ::: If Sam has high ambitions and future career goals, then Sam is a big fan of pop bands and singers"
    ]
  },
  {
    "id": "FOLIO_train_920",
    "context": "If people have a lot of decorations in their room, they cannot pack and move out of their rooms very easily. If people have high ambitions and future career goals, then they can pack and move out of their rooms very easily. If people are big fans of pop bands and singers, then they have a lot of decorations in their room. All young teenage girls who attend college are big fans of pop bands and singers. If Sam has high ambitions and future career goals, then Sam is a big fan of pop bands and singers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Sam is a young teenage girl who attends college, then Sam either does not have high ambitions and future career goals or is a big fan of pop bands and singers.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDecoration(x) ::: x is a decoration.\nRoom(x) ::: x is a room.\nPack(x) ::: x packs.\nMove(x) ::: x moves.\nAmbition(x) ::: x has high ambitions and future career goals.\nFan(x) ::: x is a big fan of pop bands and singers.\nTeenageGirl(x) ::: x is a young teenage girl.\nCollege(x) ::: x attends college.\nPremises:\n¬(Decoration(x) ∧ Room(x)) → ¬Pack(x) ∧ ¬Move(x) ::: If people have a lot of decorations in their room, they cannot pack and move out of their rooms very easily.\nAmbition(x) → ¬(Decoration(x) ∧ Room(x)) ::: If people have high ambitions and future career goals, then they can pack and move out of their rooms very easily.\nFan(x) → (Decoration(x) ∧ Room(x)) ::: If people are big fans of pop bands and singers, then they have a lot of decorations in their room.\n∀x (TeenageGirl(x) ∧ College(x) → Fan(x)) ::: All young teenage girls who attend college are big fans of pop bands and singers.\n¬Ambition(x) ∨ Fan(x) ::: If Sam has high ambitions and future career goals, then Sam is a big fan of pop bands and singers.\nConclusion:\n¬Ambition(sam) ∨ Fan(sam) ∨ ¬(TeenageGirl(sam) ∧ College(sam)) ::: If Sam is a young teenage girl who attends college, then Sam either does not have high ambitions and future career goals or is a big fan of pop bands and singers.\n------"
    ]
  },
  {
    "id": "FOLIO_train_921",
    "context": "If people have a lot of decorations in their room, they cannot pack and move out of their rooms very easily. If people have high ambitions and future career goals, then they can pack and move out of their rooms very easily. If people are big fans of pop bands and singers, then they have a lot of decorations in their room. All young teenage girls who attend college are big fans of pop bands and singers. If Sam has high ambitions and future career goals, then Sam is a big fan of pop bands and singers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Sam has high ambitions and future career goals and is a young teenage girl who attends college, then Sam either does not have high ambitions and future career goals or is not a young teenage girl who attends college.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDecoration(x) ::: x has a lot of decorations in their room.\nAmbition(x) ::: x has high ambitions and future career goals.\nFan(x) ::: x is a big fan of pop bands and singers.\nPremises:\n¬(Decoration(x) ∧ Ambition(x)) → ¬(Pack(x) ∧ Move(x)) ::: If people have a lot of decorations in their room, they cannot pack and move out of their rooms very easily.\n(Ambition(x) ∧ FutureCareerGoal(x)) → Pack(x) ∧ Move(x) ::: If people have high ambitions and future career goals, then they can pack and move out of their rooms very easily.\nFan(x) → Decoration(x) ::: If people are big fans of pop bands and singers, then they have a lot of decorations in their room.\n∀x (YoungTeenageGirl(x) ∧ College(x) → Fan(x)) ::: All young teenage girls who attend college are big fans of pop bands and singers.\nAmbition(sam) → Fan(sam) ::: If Sam has high ambitions and future career goals, then Sam is a big fan of pop bands and singers.\nConclusion:\n¬(Ambition(sam) ∧ YoungTeenageGirl(sam) ∧ College(sam)) ∨ ¬(Ambition(sam) ∨ YoungTeenageGirl(sam) ∨ College(sam)) ::: If Sam has high ambitions and future career goals and is a young teenage girl who attends college, then Sam either does not have high ambitions and future career goals or is not a young teenage girl who attends college.\n------\nProblem:\nIf a person is a student, then the person is not a teacher. If a person is a teacher, then the person is"
    ]
  },
  {
    "id": "FOLIO_train_922",
    "context": "If people have a lot of decorations in their room, they cannot pack and move out of their rooms very easily. If people have high ambitions and future career goals, then they can pack and move out of their rooms very easily. If people are big fans of pop bands and singers, then they have a lot of decorations in their room. All young teenage girls who attend college are big fans of pop bands and singers. If Sam has high ambitions and future career goals, then Sam is a big fan of pop bands and singers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Sam has high ambitions and future career goals, then Sam is a young teenage girl who attends college.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDecoration(x) ::: x is a decoration.\nRoom(x) ::: x is a room.\nPack(x) ::: x packs.\nMove(x) ::: x moves.\nAmbition(x) ::: x has high ambitions.\nCareerGoal(x) ::: x has future career goals.\nFan(x, y) ::: x is a big fan of y.\nBand(x) ::: x is a pop band.\nSinger(x) ::: x is a pop singer.\nTeenageGirl(x) ::: x is a young teenage girl.\nCollege(x) ::: x attends college.\nPremises:\n¬(Decoration(x) ∧ Room(x)) → ¬Pack(x) ∧ ¬Move(x) ::: If people have a lot of decorations in their room, they cannot pack and move out of their rooms very easily.\nAmbition(x) ∧ CareerGoal(x) → Pack(x) ∧ Move(x) ::: If people have high ambitions and future career goals, then they can pack and move out of their rooms very easily.\nFan(x, y) ∧ Band(y) ∨ Singer(y) → Decoration(x) ∧ Room(x) ::: If people are big fans of pop bands and singers, then they have a lot of decorations in their room.\n∀x (TeenageGirl(x) ∧ College(x) → Fan(x, y) ∧ Band(y) ∨ Singer(y)) ::: All young teenage girls who attend college are big fans of pop bands and singers.\nAmbition(sam) ∧ CareerGoal(sam) → Fan(sam, y) ∧ Band(y) ∨ Singer(y) ::: If Sam has high ambitions and future career goals, then"
    ]
  },
  {
    "id": "FOLIO_train_923",
    "context": "A student who loves shrieking will be punished. If a person swears, then he is a student. If someone is a teacher, then Bob will talk to him. All gentlemen are in a suit. All teachers are men. There is a teacher. If someone is not a gentlemen, then he is not nice. Willy is nice. Bob loves shrieking and swearing.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Willy is in a suit.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nStudent(x) ::: x is a student.\nTeacher(x) ::: x is a teacher.\nMan(x) ::: x is a man.\nGentleman(x) ::: x is a gentleman.\nSuit(x) ::: x is in a suit.\nNice(x) ::: x is nice.\nLove(x, y) ::: x loves y.\nSwear(x) ::: x swears.\nShriek(x) ::: x shrieks.\nTalk(x, y) ::: x talks to y.\nPremises:\nStudent(x) → Shriek(x) ::: A student who loves shrieking will be punished.\nSwear(x) → Student(x) ::: If a person swears, then he is a student.\nTeacher(x) → Talk(bob, x) ::: If someone is a teacher, then Bob will talk to him.\n∀x (Gentleman(x) → Suit(x)) ::: All gentlemen are in a suit.\n∀x (Teacher(x) → Man(x)) ::: All teachers are men.\n∃x (Teacher(x)) ::: There is a teacher.\n¬Gentleman(x) → ¬Nice(x) ::: If someone is not a gentlemen, then he is not nice.\nNice(willy) ::: Willy is nice.\nLove(bob, shrieking) ∧ Swear(bob) ::: Bob loves shrieking and swearing.\nConclusion:\nSuit(willy) ::: Willy is in a suit.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffe"
    ]
  },
  {
    "id": "FOLIO_train_924",
    "context": "A student who loves shrieking will be punished. If a person swears, then he is a student. If someone is a teacher, then Bob will talk to him. All gentlemen are in a suit. All teachers are men. There is a teacher. If someone is not a gentlemen, then he is not nice. Willy is nice. Bob loves shrieking and swearing.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Bob will be not punished.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nStudent(x) ::: x is a student.\nTeacher(x) ::: x is a teacher.\nGentleman(x) ::: x is a gentleman.\nMan(x) ::: x is a man.\nNice(x) ::: x is nice.\nLove(x, y) ::: x loves y.\nSwear(x) ::: x swears.\nShriek(x) ::: x shrieks.\nPunish(x) ::: x is punished.\nTalk(x, y) ::: x talks to y.\nSuit(x) ::: x is in a suit.\nPremises:\nStudent(x) → Punish(x) ::: A student who loves shrieking will be punished.\nSwear(x) → Student(x) ::: If a person swears, then he is a student.\nTeacher(x) → Talk(bob, x) ::: If someone is a teacher, then Bob will talk to him.\n∀x (Gentleman(x) → Suit(x)) ::: All gentlemen are in a suit.\n∀x (Teacher(x) → Man(x)) ::: All teachers are men.\n∃x Teacher(x) ::: There is a teacher.\n¬Gentleman(x) → ¬Nice(x) ::: If someone is not a gentlemen, then he is not nice.\nNice(willy) ::: Willy is nice.\nLove(bob, shrieking) ∧ Swear(bob) ::: Bob loves shrieking and swearing.\nConclusion:\n¬Punish(bob) ::: Bob will be not punished.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine"
    ]
  },
  {
    "id": "FOLIO_train_925",
    "context": "A student who loves shrieking will be punished. If a person swears, then he is a student. If someone is a teacher, then Bob will talk to him. All gentlemen are in a suit. All teachers are men. There is a teacher. If someone is not a gentlemen, then he is not nice. Willy is nice. Bob loves shrieking and swearing.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There is a man that Bob will talk to.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nStudent(x) ::: x is a student.\nTeacher(x) ::: x is a teacher.\nGentleman(x) ::: x is a gentleman.\nMan(x) ::: x is a man.\nNice(x) ::: x is nice.\nLove(x, y) ::: x loves y.\nSwear(x) ::: x swears.\nShriek(x) ::: x shrieks.\nTalk(x, y) ::: x talks to y.\nPremises:\nStudent(x) → Shriek(x) ::: A student who loves shrieking will be punished.\nSwear(x) → Student(x) ::: If a person swears, then he is a student.\nTeacher(x) → Talk(bob, x) ::: If someone is a teacher, then Bob will talk to him.\n∀x (Gentleman(x) → Suit(x)) ::: All gentlemen are in a suit.\n∀x (Teacher(x) → Man(x)) ::: All teachers are men.\n∃x (Teacher(x)) ::: There is a teacher.\n¬Gentleman(x) → ¬Nice(x) ::: If someone is not a gentlemen, then he is not nice.\nNice(willy) ::: Willy is nice.\nLove(bob, shrieking) ∧ Swear(bob) ::: Bob loves shrieking and swearing.\nConclusion:\n∃x (Man(x) ∧ Talk(bob, x)) ::: There is a man that Bob will talk to.\n------\nProblem:\nA person who is not a student is a teacher. A person who is not a teacher is a student. A person who is not a student is a gentleman. A person who is not a gentleman is a teacher. A"
    ]
  },
  {
    "id": "FOLIO_train_926",
    "context": "Quincy McDuffie is an American professional wide receiver in Canadian Football. People who can catch balls are good wide receivers. Quincy McDuffie can catch many footballs easily. Good wide receivers play professionally. Good wide receivers can catch with both their left and right hand. All footballs are balls.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Quincy McDuffie is a good wide receiver.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAmerican(x) ::: x is an American.\nProfessional(x) ::: x is a professional.\nWideReceiver(x) ::: x is a wide receiver.\nCanadianFootball(x) ::: x is Canadian football.\nCanCatch(x) ::: x can catch.\nGood(x) ::: x is good.\nPlay(x, y) ::: x plays y.\nCanCatch(x, y) ::: x can catch y.\nBall(x) ::: x is a ball.\nFootball(x) ::: x is a football.\nPremises:\nAmerican(quincy) ∧ Professional(quincy) ∧ WideReceiver(quincy) ∧ CanadianFootball(canadianFootball) ∧ Play(quincy, canadianFootball) ::: Quincy McDuffie is an American professional wide receiver in Canadian Football.\n∀x (CanCatch(x) → Good(x)) ∧ ∀x (Good(x) → WideReceiver(x)) ::: People who can catch balls are good wide receivers.\nCanCatch(quincy, football) ∧ CanCatch(quincy, many) ∧ CanCatch(quincy, easily) ::: Quincy McDuffie can catch many footballs easily.\n∀x (Good(x) → Play(x, professionally)) ::: Good wide receivers play professionally.\n∀x (Good(x) → CanCatch(x, both)) ∧ ∀x (Good(x) → CanCatch(x, left)) ∧ ∀x (Good(x) → CanCatch(x, right)) ::: Good wide receivers can catch with both their left and right hand.\n∀x (Football(x) → Ball(x)) ::: All footballs are balls.\nConclusion:\nGood(quincy) ::: Quincy McDuffie is a good"
    ]
  },
  {
    "id": "FOLIO_train_927",
    "context": "Quincy McDuffie is an American professional wide receiver in Canadian Football. People who can catch balls are good wide receivers. Quincy McDuffie can catch many footballs easily. Good wide receivers play professionally. Good wide receivers can catch with both their left and right hand. All footballs are balls.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Quincy McDuffie can catch every ball.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAmerican(x) ::: x is an American.\nProfessional(x) ::: x is a professional.\nWideReceiver(x) ::: x is a wide receiver.\nCanadianFootball(x) ::: x is Canadian football.\nCanCatch(x) ::: x can catch.\nGood(x) ::: x is good.\nPlay(x) ::: x plays.\nCanCatchWithBothHands(x) ::: x can catch with both their left and right hand.\nBall(x) ::: x is a ball.\nFootball(x) ::: x is a football.\nPremises:\nAmerican(quincy) ∧ Professional(quincy) ∧ WideReceiver(quincy) ∧ CanadianFootball(quincy) ::: Quincy McDuffie is an American professional wide receiver in Canadian Football.\n∀x (CanCatch(x) → Good(x)) ∧ ∀x (Good(x) → WideReceiver(x)) ::: People who can catch balls are good wide receivers.\nCanCatch(quincy) ∧ ∀x (CanCatch(x) → ∃y (Ball(y) ∧ CanCatch(x, y))) ::: Quincy McDuffie can catch many footballs easily.\n∀x (Good(x) → Play(x)) ∧ ∀x (Play(x) → Professional(x)) ::: Good wide receivers play professionally.\n∀x (Good(x) → CanCatchWithBothHands(x)) ::: Good wide receivers can catch with both their left and right hand.\n∀x (Ball(x) → Football(x)) ::: All footballs are balls.\nConclusion:\nCanCatch(quincy) ∧ ∀x (CanCatch(x) → ∃y (Ball(y) ∧ CanCatch(x, y))) :::"
    ]
  },
  {
    "id": "FOLIO_train_928",
    "context": "Quincy McDuffie is an American professional wide receiver in Canadian Football. People who can catch balls are good wide receivers. Quincy McDuffie can catch many footballs easily. Good wide receivers play professionally. Good wide receivers can catch with both their left and right hand. All footballs are balls.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Professional wide receivers are good at catching balls.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAmerican(x) ::: x is an American.\nProfessional(x) ::: x is a professional.\nWideReceiver(x) ::: x is a wide receiver.\nCanadianFootball(x) ::: x is Canadian football.\nGood(x) ::: x is good.\nCatch(x, y) ::: x can catch y.\nBall(x) ::: x is a ball.\nFootball(x) ::: x is a football.\nLeft(x) ::: x is left.\nRight(x) ::: x is right.\nPremises:\nAmerican(quincy) ∧ Professional(quincy) ∧ WideReceiver(quincy) ∧ CanadianFootball(football) ::: Quincy McDuffie is an American professional wide receiver in Canadian Football.\n∀x (WideReceiver(x) → Good(x)) ∧ ∀x (Good(x) → Catch(x, ball)) ::: People who can catch balls are good wide receivers.\nCatch(quincy, football) ∧ Catch(quincy, football) ∧ Catch(quincy, football) ∧ Catch(quincy, football) ∧ Catch(quincy, football) ∧ Catch(quincy, football) ∧ Catch(quincy, football) ∧ Catch(quincy, football) ∧ Catch(quincy, football) ∧ Catch(quincy, football) ∧ Catch(quincy, football) ∧ Catch(quincy, football) ∧ Catch(quincy, football) ∧ Catch(quincy, football) ∧ Catch(quincy, football) ∧ Catch(quincy, football) ∧ Catch(quincy, football) ∧ Catch(quincy, football) ∧ Catch(quincy, football) ∧ Catch(quincy, football) ∧ Catch(quincy, football)"
    ]
  },
  {
    "id": "FOLIO_train_929",
    "context": "Boves is a railway station located in France. The preceding station of Boves is Longueau. The preceding station of Dommartin is Boves. France is a European country. Dommartin is situated on the Paris–Lille railway. Any two contiguous stations are on the same railway. Boves is served by regional TER Hauts-de-France trains. If A is located in B and B is located in C, then A is located in C. If A precedes B and B preceds C, than A preceds C.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Longueau is situated on the Paris–Lille railway.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nStation(x) ::: x is a railway station.\nPreceding(x, y) ::: x is the preceding station of y.\nSituated(x, y) ::: x is situated on y.\nServed(x, y) ::: x is served by y.\nLocated(x, y) ::: x is located in y.\nCountry(x) ::: x is a country.\nEuropean(x) ::: x is a European country.\nRailway(x) ::: x is a railway.\nPremises:\nStation(boves) ∧ Preceding(longueau, boves) ∧ Situated(dommartin, boves) ∧ Country(france) ∧ European(france) ∧ Situated(dommartin, parisLilleRailway) ∧ Served(boves, terHautsDeFrance) ::: Boves is a railway station located in France. The preceding station of Boves is Longueau. The preceding station of Dommartin is Boves. France is a European country. Dommartin is situated on the Paris–Lille railway. Boves is served by regional TER Hauts-de-France trains.\n∀x ∀y ∀z (Located(x, y) ∧ Located(y, z) → Located(x, z)) ::: If A is located in B and B is located in C, then A is located in C.\n∀x ∀y ∀z (Preceding(x, y) ∧ Preceding(y, z) → Preceding(x, z)) ::: If A precedes B and B preceds C, than A preceds C.\nConclusion:\nSituated(longueau, parisLilleRailway) ::: Longueau is situated on the Paris–Lille railway.\n------\nProblem:\nThe"
    ]
  },
  {
    "id": "FOLIO_train_930",
    "context": "Boves is a railway station located in France. The preceding station of Boves is Longueau. The preceding station of Dommartin is Boves. France is a European country. Dommartin is situated on the Paris–Lille railway. Any two contiguous stations are on the same railway. Boves is served by regional TER Hauts-de-France trains. If A is located in B and B is located in C, then A is located in C. If A precedes B and B preceds C, than A preceds C.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Boves is not in Europe.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nStation(x) ::: x is a railway station.\nPreceding(x, y) ::: x is the preceding station of y.\nSituated(x, y) ::: x is situated on y.\nServed(x, y) ::: x is served by y.\nLocated(x, y) ::: x is located in y.\nCountry(x) ::: x is a country.\nEuropean(x) ::: x is a European country.\nRailway(x) ::: x is a railway.\nContiguous(x, y) ::: x and y are contiguous stations.\nPremises:\nStation(boves) ∧ Preceding(longueau, boves) ∧ Preceding(dommartin, boves) ∧ Country(france) ∧ European(france) ∧ Situated(dommartin, parisLilleRailway) ∧ Served(boves, terHautsDeFrance) ::: Boves is a railway station located in France. The preceding station of Boves is Longueau. The preceding station of Dommartin is Boves. France is a European country. Dommartin is situated on the Paris–Lille railway. Boves is served by regional TER Hauts-de-France trains.\n∀x ∀y (Located(x, y) → Located(y, z) → Located(x, z)) ::: If A is located in B and B is located in C, then A is located in C.\n∀x ∀y ∀z (Preceding(x, y) ∧ Preceding(y, z) → Preceding(x, z)) ::: If A precedes B and B preceds C, than A preceds C.\n∀x ∀y (Contiguous(x, y) → Located(x, Railway(y)) ∧ Located(y, Railway(x))) ::: Any two contiguous stations are on the same railway.\nConclusion:\n¬European(boves) ::: Boves is not in Europe.\n------"
    ]
  },
  {
    "id": "FOLIO_train_931",
    "context": "Boves is a railway station located in France. The preceding station of Boves is Longueau. The preceding station of Dommartin is Boves. France is a European country. Dommartin is situated on the Paris–Lille railway. Any two contiguous stations are on the same railway. Boves is served by regional TER Hauts-de-France trains. If A is located in B and B is located in C, then A is located in C. If A precedes B and B preceds C, than A preceds C.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Longueau is served by regional TER Hauts-de-France trains.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nStation(x) ::: x is a railway station.\nPreceding(x, y) ::: x is the preceding station of y.\nSituated(x, y) ::: x is situated on y.\nServed(x, y) ::: x is served by y.\nLocated(x, y) ::: x is located in y.\nCountry(x) ::: x is a country.\nEuropean(x) ::: x is a European country.\nRailway(x) ::: x is a railway.\nContiguous(x, y) ::: x and y are contiguous stations.\nPremises:\nStation(boves) ∧ Preceding(longueau, boves) ∧ Situated(dommartin, boves) ∧ Country(france) ∧ European(france) ∧ Railway(parisLilleRailway) ∧ Situated(dommartin, parisLilleRailway) ∧ Served(boves, terHautsDeFrance) ::: Boves is a railway station located in France. The preceding station of Boves is Longueau. The preceding station of Dommartin is Boves. France is a European country. Dommartin is situated on the Paris–Lille railway. Boves is served by regional TER Hauts-de-France trains.\n∀x ∀y (Located(x, y) → Located(y, x)) ::: If A is located in B and B is located in C, then A is located in C.\n∀x ∀y ∀z (Preceding(x, y) ∧ Preceding(y, z) → Preceding(x, z)) ::: If A precedes B and B preceds C, than A preceds C.\n∀x ∀y (Contiguous(x, y) → Railway(x) ∧ Railway(y)) ::: Any two contiguous stations are on the same railway.\nConclusion:\nServed(longueau, terHautsDeFrance) ::: Longueau is served by regional TER Hauts"
    ]
  },
  {
    "id": "FOLIO_train_932",
    "context": "Edwin Smith was a New Zealand Rower from Auckland. Edwin Smith was also known as Ted Smith. Edwin Smith went to Rose Road Primary School, located in Grey Lynn. Edwin Smith was a sergeant who served with the New Zealand 24th battalion in Italy and Egypt. Broadway Sheetmetals was a buisness that was ran and owned by Edwin Smith, who was a sheetmetal worker.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Ted Smith was a sergeant.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nNewZealandRower(x) ::: x is a New Zealand Rower.\nAuckland(x) ::: x is from Auckland.\nRoseRoadPrimarySchool(x) ::: x is from Rose Road Primary School.\nGreyLynn(x) ::: x is located in Grey Lynn.\nSergeant(x) ::: x is a sergeant.\nNewZealand24thBattalion(x) ::: x is served with the New Zealand 24th battalion.\nItaly(x) ::: x is in Italy.\nEgypt(x) ::: x is in Egypt.\nSheetmetalWorker(x) ::: x is a sheetmetal worker.\nBroadwaySheetmetals(x) ::: x is a buisness that was ran and owned by Edwin Smith.\nPremises:\nNewZealandRower(edwin) ∧ Auckland(edwin) ∧ RoseRoadPrimarySchool(edwin) ∧ GreyLynn(edwin) ∧ Sergeant(edwin) ∧ NewZealand24thBattalion(edwin) ∧ Italy(edwin) ∧ Egypt(edwin) ∧ SheetmetalWorker(edwin) ∧ BroadwaySheetmetals(edwin) ::: Edwin Smith was a New Zealand Rower from Auckland. Edwin Smith was also known as Ted Smith. Edwin Smith went to Rose Road Primary School, located in Grey Lynn. Edwin Smith was a sergeant who served with the New Zealand 24th battalion in Italy and Egypt. Broadway Sheetmetals was a buisness that was ran and owned by Edwin Smith, who was a sheetmetal worker.\nConclusion:\nSergeant(ted) ::: Ted Smith was a sergeant.\n------\nProblem:\nThe 1990 FIFA World Cup was the 14th FIFA World Cup. The 1990 FIFA World Cup was held in Italy. The 1990 FIFA World Cup was won by West Germany. The 1990 FIFA World Cup was the first World Cup to be officially recorded and transmitted in"
    ]
  },
  {
    "id": "FOLIO_train_933",
    "context": "Edwin Smith was a New Zealand Rower from Auckland. Edwin Smith was also known as Ted Smith. Edwin Smith went to Rose Road Primary School, located in Grey Lynn. Edwin Smith was a sergeant who served with the New Zealand 24th battalion in Italy and Egypt. Broadway Sheetmetals was a buisness that was ran and owned by Edwin Smith, who was a sheetmetal worker.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There are no rowers that own a buisness.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRower(x) ::: x is a rower.\nKnownAs(x, y) ::: x is also known as y.\nSchool(x) ::: x is a school.\nPrimarySchool(x) ::: x is a primary school.\nLocated(x, y) ::: x is located in y.\nSergeant(x) ::: x is a sergeant.\nBattalion(x) ::: x is a battalion.\nItaly(x) ::: x is in Italy.\nEgypt(x) ::: x is in Egypt.\nSheetmetalWorker(x) ::: x is a sheetmetal worker.\nBuisness(x) ::: x is a buisness.\nRan(x, y) ::: x ran y.\nOwned(x, y) ::: x owned y.\nPremises:\nRower(edwin) ∧ KnownAs(edwin, ted) ∧ School(roseRoadPrimarySchool) ∧ PrimarySchool(roseRoadPrimarySchool) ∧ Located(roseRoadPrimarySchool, greyLynn) ::: Edwin Smith was a New Zealand Rower from Auckland. Edwin Smith was also known as Ted Smith. Edwin Smith went to Rose Road Primary School, located in Grey Lynn.\nSergeant(edwin) ∧ Battalion(newZealand24thBattalion) ∧ Italy(italy) ∧ Egypt(egypt) ::: Edwin Smith was a sergeant who served with the New Zealand 24th battalion in Italy and Egypt.\nSheetmetalWorker(edwin) ∧ Buisness(broadwaySheetmetals) ∧ Ran(edwin, broadwaySheetmetals) ∧ Owned(edwin, broadwaySheetmetals) ::: Broadway Sheetmetals was a buisness that was ran and owned by Edwin Smith, who was a sheetmetal worker.\nConclusion:\n¬∃x (Rower(x) ∧ Buisness(x)) ::: There are no rowers that own a buisness.\n------\nProblem:\nThe"
    ]
  },
  {
    "id": "FOLIO_train_934",
    "context": "Edwin Smith was a New Zealand Rower from Auckland. Edwin Smith was also known as Ted Smith. Edwin Smith went to Rose Road Primary School, located in Grey Lynn. Edwin Smith was a sergeant who served with the New Zealand 24th battalion in Italy and Egypt. Broadway Sheetmetals was a buisness that was ran and owned by Edwin Smith, who was a sheetmetal worker.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? No sergeants are from Auckland.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nNewZealandRower(x) ::: x is a New Zealand Rower.\nAuckland(x) ::: x is from Auckland.\nRoseRoadPrimarySchool(x) ::: x is from Rose Road Primary School.\nSergeant(x) ::: x is a sergeant.\nItaly(x) ::: x is from Italy.\nEgypt(x) ::: x is from Egypt.\nBroadwaySheetmetals(x) ::: x is from Broadway Sheetmetals.\nSheetmetalWorker(x) ::: x is a sheetmetal worker.\nPremises:\nNewZealandRower(edwin) ∧ Auckland(edwin) ∧ RoseRoadPrimarySchool(edwin) ∧ Sergeant(edwin) ∧ Italy(edwin) ∧ Egypt(edwin) ∧ BroadwaySheetmetals(edwin) ∧ SheetmetalWorker(edwin) ::: Edwin Smith was a New Zealand Rower from Auckland. Edwin Smith was also known as Ted Smith. Edwin Smith went to Rose Road Primary School, located in Grey Lynn. Edwin Smith was a sergeant who served with the New Zealand 24th battalion in Italy and Egypt. Broadway Sheetmetals was a buisness that was ran and owned by Edwin Smith, who was a sheetmetal worker.\nConclusion:\n¬∃x (Sergeant(x) ∧ Auckland(x)) ::: No sergeants are from Auckland.\n------\nProblem:\nThe 1990 FIFA World Cup was the 14th FIFA World Cup, the quadrennial international football world championship tournament. It was held from 8 June to 8 July 1990 in Italy, the second country to host the event twice. Teams representing 116 national football associations entered, and qualification began in April 1988. A total of 22 teams qualified from this process, along with host nation Italy and defending champion Argentina. The tournament was won by West Germany, for the third time. They beat Argentina 1–0 in the final, a rematch of the previous final four"
    ]
  },
  {
    "id": "FOLIO_train_935",
    "context": "Edwin Smith was a New Zealand Rower from Auckland. Edwin Smith was also known as Ted Smith. Edwin Smith went to Rose Road Primary School, located in Grey Lynn. Edwin Smith was a sergeant who served with the New Zealand 24th battalion in Italy and Egypt. Broadway Sheetmetals was a buisness that was ran and owned by Edwin Smith, who was a sheetmetal worker.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? No buisness owner has served in Egypt.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nNewZealandRower(x) ::: x is a New Zealand Rower.\nAuckland(x) ::: x is from Auckland.\nRoseRoadPrimarySchool(x) ::: x is from Rose Road Primary School.\nSergeant(x) ::: x is a sergeant.\nNewZealand24thBattalion(x) ::: x is a New Zealand 24th battalion.\nItaly(x) ::: x is in Italy.\nEgypt(x) ::: x is in Egypt.\nSheetmetalWorker(x) ::: x is a sheetmetal worker.\nBroadwaySheetmetals(x) ::: x is a Broadway Sheetmetals.\nBuisness(x) ::: x is a buisness.\nOwner(x, y) ::: x is the owner of y.\nRan(x, y) ::: x ran y.\nPremises:\nNewZealandRower(edwin) ∧ Auckland(edwin) ∧ RoseRoadPrimarySchool(edwin) ∧ Sergeant(edwin) ∧ NewZealand24thBattalion(edwin) ∧ Italy(edwin) ∧ Egypt(edwin) ∧ SheetmetalWorker(edwin) ∧ BroadwaySheetmetals(edwin) ∧ Buisness(edwin) ∧ Owner(edwin, edwin) ∧ Ran(edwin, edwin) ::: Edwin Smith was a New Zealand Rower from Auckland. Edwin Smith was also known as Ted Smith. Edwin Smith went to Rose Road Primary School, located in Grey Lynn. Edwin Smith was a sergeant who served with the New Zealand 24th battalion in Italy and Egypt. Broadway Sheetmetals was a buisness that was ran and owned by Edwin Smith, who was a sheetmetal worker.\nConclusion:\n¬∃x ∃y (Owner(x, y) ∧ Ran(x, y) ∧ Buisness(y) ∧ Egypt(y)) ::: No buisness owner has served in Egypt.\n------\nProblem:\nThe"
    ]
  },
  {
    "id": "FOLIO_train_936",
    "context": "A werewolf is a human that can turn into a wolf. A werewolf has been scratched or bitten by another werewolf. If someone has been scratched or bitten, they have been attacked.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? All humans are werewolves.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nWerewolf(x) ::: x is a werewolf.\nHuman(x) ::: x is a human.\nScratched(x) ::: x has been scratched.\nBitten(x) ::: x has been bitten.\nAttacked(x) ::: x has been attacked.\nPremises:\n∀x (Werewolf(x) → (Scratched(x) ∨ Bitten(x))) ::: A werewolf is a human that can turn into a wolf. A werewolf has been scratched or bitten by another werewolf.\n∀x (Scratched(x) ∨ Bitten(x) → Attacked(x)) ::: If someone has been scratched or bitten, they have been attacked.\nConclusion:\n∀x (Human(x) → Werewolf(x)) ::: All humans are werewolves.\n------\nProblem:\nA person is a human being. A human being is a mammal. A mammal is an animal. A person is a human being.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? A person is a mammal.\nBased on the above information, is the following statement true, false, or uncertain? A mammal is a person.\nBased on the above information, is the following statement true, false, or uncertain? A person is an animal.\n###\nPredicates:\nPerson(x) ::: x is a person.\nHumanBeing(x) ::: x is a human being.\nMammal(x) ::: x is a mammal.\nAnimal(x) ::: x is an animal.\nPremises:\n∀x (Person(x) → HumanBeing(x)) ::: A person is a human being.\n∀x (HumanBeing(x) → Mammal(x)) ::: A human being is a mammal.\n∀x (Mammal(x) → Animal(x)) ::: A mammal is an animal.\nPerson(x) ::: A person"
    ]
  },
  {
    "id": "FOLIO_train_937",
    "context": "A werewolf is a human that can turn into a wolf. A werewolf has been scratched or bitten by another werewolf. If someone has been scratched or bitten, they have been attacked.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A werewolf is a wolf.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nWerewolf(x) ::: x is a werewolf.\nWolf(x) ::: x is a wolf.\nScratch(x, y) ::: x has scratched y.\nBite(x, y) ::: x has bitten y.\nAttack(x, y) ::: x has attacked y.\nPremises:\n∀x (Werewolf(x) → (Scratch(x, y) ∨ Bite(x, y))) ::: A werewolf is a human that can turn into a wolf.\n∀x (Scratch(x, y) ∨ Bite(x, y) → Attack(x, y)) ::: If someone has been scratched or bitten, they have been attacked.\nConclusion:\nWolf(x) ::: A werewolf is a wolf.\n------\nProblem:\nA person is a human. A human is a mammal. A mammal is an animal. A person is a human. A human is a mammal. A mammal is an animal.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? A person is an animal.\nBased on the above information, is the following statement true, false, or uncertain? A mammal is a person.\nBased on the above information, is the following statement true, false, or uncertain? A human is a person.\n###\nPredicates:\nPerson(x) ::: x is a person.\nHuman(x) ::: x is a human.\nMammal(x) ::: x is a mammal.\nAnimal(x) ::: x is an animal.\nPremises:\n∀x (Person(x) → Human(x)) ::: A person is a human.\n∀x (Human(x) → Mammal(x)) ::: A human is a mammal.\n∀x (Mammal(x) → Animal(x)) ::: A mammal is an animal.\n∀x (Person(x) → Human(x)) ::: A person is a human."
    ]
  },
  {
    "id": "FOLIO_train_938",
    "context": "A werewolf is a human that can turn into a wolf. A werewolf has been scratched or bitten by another werewolf. If someone has been scratched or bitten, they have been attacked.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A werewolf has scratched someone before.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nWerewolf(x) ::: x is a werewolf.\nScratch(x, y) ::: x scratches y.\nBite(x, y) ::: x bites y.\nAttack(x, y) ::: x attacks y.\nPremises:\n∀x (Werewolf(x) → (Scratch(x, y) ∨ Bite(x, y))) ::: A werewolf is a human that can turn into a wolf. A werewolf has been scratched or bitten by another werewolf.\n∀x (Scratch(x, y) ∨ Bite(x, y) → Attack(x, y)) ::: If someone has been scratched or bitten, they have been attacked.\nConclusion:\n∃x ∃y (Werewolf(x) ∧ Scratch(x, y)) ::: A werewolf has scratched someone before.\n------\nProblem:\nA person is a human. A human is a mammal. A mammal is an animal. A person is a mammal. A person is an animal.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? A person is a human.\nBased on the above information, is the following statement true, false, or uncertain? A human is a mammal.\nBased on the above information, is the following statement true, false, or uncertain? A mammal is an animal.\nBased on the above information, is the following statement true, false, or uncertain? A person is a mammal.\nBased on the above information, is the following statement true, false, or uncertain? A person is an animal.\n###\nPredicates:\nPerson(x) ::: x is a person.\nHuman(x) ::: x is a human.\nMammal(x) ::: x is a mammal.\nAnimal(x) ::: x is an animal.\nPremises:\n∀x (Person(x) → Human(x)) ::: A person is a human.\n∀x (Human("
    ]
  },
  {
    "id": "FOLIO_train_939",
    "context": "UFC Fight Night was a mixed martial arts event and was held in Sweden. At UFC Fight Night, Sadollah was scheduled to fight Musoke. Sadollah fought Akiyama at UFC Fight Night. Musoke fought Yakovlev at UFC Fight Night. Jung was injured at UFC Fight Night. Injured people did not fight at UFC Fight Night.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jung fought Sadollah.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "s\nPredicates:\nFight(x, y) ::: x fought y.\nInjured(x) ::: x was injured.\nPremises:\nFight(sadollah, akiyama) ∧ Fight(musoke, yakovlev) ∧ Injured(jung) ::: Sadollah fought Akiyama at UFC Fight Night. Musoke fought Yakovlev at UFC Fight Night. Jung was injured at UFC Fight Night.\n¬(Injured(x) → Fight(x, y)) ::: Injured people did not fight at UFC Fight Night.\nConclusion:\n¬Fight(jung, sadollah) ::: Jung fought Sadollah.\n------\nProblem:\nThe 2014 FIFA World Cup was the 20th FIFA World Cup. The 2014 FIFA World Cup was held in Brazil. The 2014 FIFA World Cup was won by Germany. The 2014 FIFA World Cup was the first World Cup ever to be held in South America. The 2014 FIFA World Cup was the first World Cup ever to be held in Brazil. The 2014 FIFA World Cup was the first World Cup ever to be held in Europe.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The 2014 FIFA World Cup was the first World Cup ever to be held in South America.\nBased on the above information, is the following statement true, false, or uncertain? The 2014 FIFA World Cup was the first World Cup ever to be held in Europe.\n###\nPredicates:\nHeld(x, y) ::: x was held in y.\nWon(x, y) ::: x was won by y.\nPremises:\nHeld(2014FIFAWorldCup, brazil) ∧ Won(2014FIFAWorldCup, germany) ::: The 2014 FIFA World Cup was held in Brazil. The 2014 FIFA World Cup was won by Germany.\nHeld(2014FIFAWorldCup, southAmerica)"
    ]
  },
  {
    "id": "FOLIO_train_940",
    "context": "UFC Fight Night was a mixed martial arts event and was held in Sweden. At UFC Fight Night, Sadollah was scheduled to fight Musoke. Sadollah fought Akiyama at UFC Fight Night. Musoke fought Yakovlev at UFC Fight Night. Jung was injured at UFC Fight Night. Injured people did not fight at UFC Fight Night.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jung did not fight at UFC Fight Night.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFight(x, y) ::: x fought y.\nInjured(x) ::: x was injured.\nPremises:\nFight(sadollah, akiyama) ∧ Fight(musoke, yakovlev) ∧ Injured(jung) ::: At UFC Fight Night, Sadollah was scheduled to fight Musoke. Sadollah fought Akiyama at UFC Fight Night. Musoke fought Yakovlev at UFC Fight Night. Jung was injured at UFC Fight Night.\n¬(Injured(x) → Fight(x, y)) ::: Injured people did not fight at UFC Fight Night.\nConclusion:\n¬Fight(jung, y) ::: Jung did not fight at UFC Fight Night.\n------"
    ]
  },
  {
    "id": "FOLIO_train_941",
    "context": "UFC Fight Night was a mixed martial arts event and was held in Sweden. At UFC Fight Night, Sadollah was scheduled to fight Musoke. Sadollah fought Akiyama at UFC Fight Night. Musoke fought Yakovlev at UFC Fight Night. Jung was injured at UFC Fight Night. Injured people did not fight at UFC Fight Night.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Sadollah fought Musoke.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFight(x, y) ::: x fought y.\nInjured(x) ::: x was injured.\nPremises:\nFight(sadollah, akiyama) ∧ Fight(musoke, yakovlev) ∧ Injured(jung) ::: Sadollah fought Akiyama at UFC Fight Night. Musoke fought Yakovlev at UFC Fight Night. Jung was injured at UFC Fight Night.\n¬(Injured(x) → Fight(x, y)) ::: Injured people did not fight at UFC Fight Night.\nConclusion:\n¬Fight(sadollah, musoke) ::: Sadollah fought Musoke.\n------\nProblem:\nThe 2014 FIFA World Cup was the"
    ]
  },
  {
    "id": "FOLIO_train_942",
    "context": "UFC Fight Night was a mixed martial arts event and was held in Sweden. At UFC Fight Night, Sadollah was scheduled to fight Musoke. Sadollah fought Akiyama at UFC Fight Night. Musoke fought Yakovlev at UFC Fight Night. Jung was injured at UFC Fight Night. Injured people did not fight at UFC Fight Night.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Nelson fought Story at UFC Fight Night.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "s\nPredicates:\nFight(x, y) ::: x fought y.\nInjured(x) ::: x was injured.\nPremises:\nFight(sadollah, akiyama) ∧ Fight(musoke, yakovlev) ∧ Fight(jung, injured) ::: At UFC Fight Night, Sadollah was scheduled to fight Musoke. Sadollah fought Akiyama at UFC Fight Night. Musoke fought Yakovlev at UFC Fight Night. Jung was injured at UFC Fight Night.\n¬(Injured(x) → Fight(x, y)) ::: Injured people did not fight at UFC Fight Night.\nConclusion:\n¬Fight(nelson, story) ::: Nelson fought Story at UFC Fight Night.\n------"
    ]
  },
  {
    "id": "FOLIO_train_943",
    "context": "All drinks are edible. All juices are drinks. All orange juice is a juice. A juice is either an orange juice or an apple juice. All apple juice is sweet. If coke is apple juice, then coke is a drink. If coke is not apple juice, then coke is not edible.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Coke is orange juice.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDrink(x) ::: x is a drink.\nJuice(x) ::: x is a juice.\nOrangeJuice(x) ::: x is an orange juice.\nAppleJuice(x) ::: x is an apple juice.\nSweet(x) ::: x is sweet.\nEdible(x) ::: x is edible.\nPremises:\n∀x (Drink(x) → Edible(x)) ::: All drinks are edible.\n∀x (Juice(x) → Drink(x)) ::: All juices are drinks.\n∀x (OrangeJuice(x) → Juice(x)) ::: All orange juice is a juice.\n(OrangeJu"
    ]
  },
  {
    "id": "FOLIO_train_944",
    "context": "All drinks are edible. All juices are drinks. All orange juice is a juice. A juice is either an orange juice or an apple juice. All apple juice is sweet. If coke is apple juice, then coke is a drink. If coke is not apple juice, then coke is not edible.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Coke is edible and sweet.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDrink(x) ::: x is a drink.\nJuice(x) ::: x is a juice.\nOrangeJuice(x) ::: x is an orange juice.\nAppleJuice(x) ::: x is an apple juice.\nSweet(x) ::: x is sweet.\nEdible(x) ::: x is edible.\nPremises:\n∀x (Drink(x) → Edible(x)) ::: All drinks are edible.\n∀x (Juice(x) → Drink(x)) ::: All juices are drinks.\n∀x (OrangeJuice(x) → Juice(x)) ::: All orange juice is a juice.\n(OrangeJu"
    ]
  },
  {
    "id": "FOLIO_train_945",
    "context": "All drinks are edible. All juices are drinks. All orange juice is a juice. A juice is either an orange juice or an apple juice. All apple juice is sweet. If coke is apple juice, then coke is a drink. If coke is not apple juice, then coke is not edible.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Coke is not edible and sweet.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDrink(x) ::: x is a drink.\nJuice(x) ::: x is a juice.\nOrangeJuice(x) ::: x is an orange juice.\nAppleJuice(x) ::: x is an apple juice.\nSweet(x) ::: x is sweet.\nEdible(x) ::: x is edible.\nPremises:\n∀x (Drink(x) → Edible(x)) ::: All drinks are edible.\n∀x (Juice(x) → Drink(x)) ::: All juices are drinks.\n∀x (OrangeJuice(x) → Juice(x)) ::: All orange juice is a juice.\n(OrangeJu"
    ]
  },
  {
    "id": "FOLIO_train_946",
    "context": "Federico Garcia Lorca was a talented Spanish poet and he supported the Popular Front. The Spanish Nationalists opposed anyone who supported the Popular Front Talented poets are popular. Spanish Nationalists killed anyone who they opposed and were popular. Daniel supported the Popular Front but was not popular.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Daniel was not killed by the Spanish Nationalists.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSpanish(x) ::: x is a Spanish person.\nPoet(x) ::: x is a poet.\nTalented(x) ::: x is a talented person.\nSupport(x, y) ::: x supports y.\nPopular(x) ::: x is popular.\nKill(x, y) ::: x killed y.\nOppose(x, y) ::: x opposes y.\nPremises:\nSpanish(federico) ∧ Poet(federico) ∧ Talented(federico) ∧ Support(federico, popularFront) ::: Federico Garcia Lorca was a talented Spanish poet and he supported the Popular Front.\nSpanish(nationalists) ∧ Oppose(nationalists"
    ]
  },
  {
    "id": "FOLIO_train_947",
    "context": "Federico Garcia Lorca was a talented Spanish poet and he supported the Popular Front. The Spanish Nationalists opposed anyone who supported the Popular Front Talented poets are popular. Spanish Nationalists killed anyone who they opposed and were popular. Daniel supported the Popular Front but was not popular.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Lorca was killed by the Spanish Nationalists.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSpanish(x) ::: x is a Spanish person.\nPoet(x) ::: x is a poet.\nTalented(x) ::: x is a talented person.\nSupport(x, y) ::: x supports y.\nPopular(x) ::: x is popular.\nKill(x, y) ::: x killed y.\nOppose(x, y) ::: x opposes y.\nPremises:\nSpanish(lorca) ∧ Poet(lorca) ∧ Talented(lorca) ∧ Support(lorca, popularFront) ::: Federico Garcia Lorca was a talented Spanish poet and he supported the Popular Front.\nSpanish(nationalists) ∧ Oppose(nationalists, popularFront)"
    ]
  },
  {
    "id": "FOLIO_train_948",
    "context": "People either drink kombucha every day or drink Coca-Cola or Pepsi products every day. If people drink Coca-Cola or Pepsi products every day, then they grew up with extremely busy parents who did not have time to pack them lunch. If people drink Coca-Cola or Pepsi products every day, then they have to visit the dentist frequently. If people grew up with extremely busy parents who did not have time to pack them lunch, then they have erratic and diverse eating habits. If people have erratic and diverse eating habits, then they do not have consistent everyday routines and like sticking to a solid schedule. Franny either both grew up with extremely busy parents who did not have time to pack her lunch and has consistent everyday routines and like sticking to a solid schedule, or she neither grew up with extremely busy parents who did not have time to pack her lunch nor has consistent everyday routines and likes sticking to a schedule.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Franny has to visit the dentist frequently.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDrinkKombucha(x) ::: x drinks kombucha every day.\nDrinkCocaCola(x) ::: x drinks Coca-Cola every day.\nDrinkPepsi(x) ::: x drinks Pepsi every day.\nGrewUp(x) ::: x grew up with extremely busy parents who did not have time to pack them lunch.\nVisitDentist(x) ::: x has to visit the dentist frequently.\nErratic(x) ::: x has erratic and diverse eating habits.\nConsistent(x) ::: x has consistent everyday routines and likes sticking to a solid schedule.\nPremises:\nDrinkKombucha(x) ⊕ DrinkCocaCola(x)"
    ]
  },
  {
    "id": "FOLIO_train_949",
    "context": "People either drink kombucha every day or drink Coca-Cola or Pepsi products every day. If people drink Coca-Cola or Pepsi products every day, then they grew up with extremely busy parents who did not have time to pack them lunch. If people drink Coca-Cola or Pepsi products every day, then they have to visit the dentist frequently. If people grew up with extremely busy parents who did not have time to pack them lunch, then they have erratic and diverse eating habits. If people have erratic and diverse eating habits, then they do not have consistent everyday routines and like sticking to a solid schedule. Franny either both grew up with extremely busy parents who did not have time to pack her lunch and has consistent everyday routines and like sticking to a solid schedule, or she neither grew up with extremely busy parents who did not have time to pack her lunch nor has consistent everyday routines and likes sticking to a schedule.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Franny either both grew up with extremely busy parents who did not have time to pack her lunch and drink kombucha every day or neither grew up with extremely busy parents who did not have time to pack her lunch nor drink kombucha every day, then Franny neither visits the dentist frequently nor drinks Coca Cola or Pepsi products every day.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDrinkKombucha(x) ::: x drinks kombucha every day.\nDrinkCocaCola(x) ::: x drinks Coca-Cola or Pepsi products every day.\nGrewUp(x) ::: x grew up with extremely busy parents who did not have time to pack them lunch.\nVisitDentist(x) ::: x has to visit the dentist frequently.\nErratic(x) ::: x has erratic and diverse eating habits.\nConsistent(x) ::: x has consistent everyday routines and likes sticking to a solid schedule.\nPremises:\nDrinkKombucha(x) ⊕ DrinkCocaCola(x) ::: People either drink kombucha every day or drink Coca-"
    ]
  },
  {
    "id": "FOLIO_train_950",
    "context": "People either drink kombucha every day or drink Coca-Cola or Pepsi products every day. If people drink Coca-Cola or Pepsi products every day, then they grew up with extremely busy parents who did not have time to pack them lunch. If people drink Coca-Cola or Pepsi products every day, then they have to visit the dentist frequently. If people grew up with extremely busy parents who did not have time to pack them lunch, then they have erratic and diverse eating habits. If people have erratic and diverse eating habits, then they do not have consistent everyday routines and like sticking to a solid schedule. Franny either both grew up with extremely busy parents who did not have time to pack her lunch and has consistent everyday routines and like sticking to a solid schedule, or she neither grew up with extremely busy parents who did not have time to pack her lunch nor has consistent everyday routines and likes sticking to a schedule.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Franny either visits the dentist frequently or drinks kombucha every day, then Franny both visits the dentist frequently and drinks Coca-Cola or Pepsi products every day.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDrinkKombucha(x) ::: x drinks kombucha every day.\nDrinkCocaCola(x) ::: x drinks Coca-Cola every day.\nDrinkPepsi(x) ::: x drinks Pepsi every day.\nGrewUp(x) ::: x grew up with extremely busy parents who did not have time to pack them lunch.\nVisitDentist(x) ::: x has to visit the dentist frequently.\nErratic(x) ::: x has erratic and diverse eating habits.\nRoutine(x) ::: x has consistent everyday routines and likes sticking to a solid schedule.\nPremises:\nDrinkKombucha(x) ⊕ DrinkCocaCola(x) ⊕ DrinkPepsi(x) ::: People either drink kombucha every day or drink Coca-Cola or Pepsi products every day.\nDrinkCocaCola(x) → GrewUp(x) ::: If people drink Coca-Cola or Pepsi products every day, then they grew up with extremely busy parents who did not have time to pack them lunch.\nDrinkCocaCola(x) → VisitDentist(x) ::: If people drink Coca-Cola or Pepsi products every day, then they have to visit the dentist frequently.\nGrewUp(x) → Erratic(x) ::: If people grew up with extremely busy parents who did not have time to pack them lunch, then they have erratic and diverse eating habits.\nErratic(x) → Routine(x) ::: If people have erratic and diverse eating habits, then they do not have consistent everyday routines and like sticking to a solid schedule.\n(GrewUp(franny) ∧ Routine(franny)) ⊕ ¬(GrewUp(franny) ∨ Routine(franny)) ::: Franny either both grew up with extremely busy parents who did not have time to pack her lunch and has consistent everyday routines and like sticking to a solid schedule, or she neither grew up with extremely busy parents who did not have time to pack her lunch nor has consistent everyday routines and likes sticking to a schedule.\nConclusion:\nVisitDentist(franny) ∧ DrinkCocaCola(franny) ::: If Franny either visits the dentist frequently or drinks kombucha every day, then Franny both visits the dentist frequently and drinks Coca-Cola or Pepsi products every day.\n------"
    ]
  },
  {
    "id": "FOLIO_train_951",
    "context": "If a customer subscribes to AMC A List, then he/she can watch 3 movies every week without any additional fees. Some customers go to cinemas every week. Customers who prefer TV series will not watch TV series in cinemas. James watches TV series in cinemas. James subscribes to AMC A List. Peter prefers TV series.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James is not able to watch 3 movies every week without any additional fees.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "s\nPredicates:\nSubscribe(x, y) ::: x subscribes to y.\nWatch(x, y) ::: x watches y.\nPrefer(x, y) ::: x prefers y.\nPremises:\n∀x (Subscribe(x, amcAList) → ¬(Watch(x, movie) → ∃y (Watch(x, y) ∧ Watch(x, z) ∧ Watch(x, w) ∧ ¬(Watch(x, y) ∧ Watch(x, z) ∧ Watch(x, w) ∧ Watch(x, movie))))) ::: If a customer subscribes to AMC A List, then he/she can watch 3 movies every week without any additional fees.\n∃x (Watch(x, cinema) ∧ ∃y (Watch(y, cinema) ∧ ¬(Watch(x, cinema) ∧ Watch(y, cinema)))) ::: Some customers go to cinemas every week.\n∀x (Prefer(x, tvSeries) → ¬Watch(x, tvSeries)) ::: Customers who prefer TV series will not watch TV series in cinemas.\nWatch(james, tvSeries) ::: James watches TV series in cinemas.\nSubscribe(james, amcAList) ::: James subscribes to AMC A List.\nPrefer(peter, tvSeries) ::: Peter prefers TV series.\nConclusion:\n¬Watch(james, movie) ::: James is not able to watch 3 movies every week without any additional fees.\n------\nProblem:\nA person is a citizen of the United States if and only if the person was born in the United States or the person was naturalized in the United States. A person is a citizen of the United States if and only if the person was born in the United States or the person was naturalized in the United States. A person is a citizen of the United States if and only if the person was born in the United States or the person was naturalized in the United States. A person is a citizen of the United States if and only if the person was born in the United States or the person was naturalized in the United States. A person is a citizen of the United States if and only if the person was born in the United States or the person was naturalized in the United States. A person is a citizen of the United States if and only if the person was born in the United States or the person was naturalized in the United States. A person is a citizen of the United States if and only if the person was born in the United States or the person was"
    ]
  },
  {
    "id": "FOLIO_train_952",
    "context": "If a customer subscribes to AMC A List, then he/she can watch 3 movies every week without any additional fees. Some customers go to cinemas every week. Customers who prefer TV series will not watch TV series in cinemas. James watches TV series in cinemas. James subscribes to AMC A List. Peter prefers TV series.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James goes to cinemas every week.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "s\nPredicates:\nSubscribe(x, y) ::: x subscribes to y.\nWatch(x, y) ::: x watches y.\nGo(x, y) ::: x goes to y.\nPrefer(x, y) ::: x prefers y.\nPremises:\n∀x (Subscribe(x, amcAList) → ∃y ∃z ∃w (Watch(x, y) ∧ Watch(x, z) ∧ Watch(x, w) ∧ Week(y) ∧ Week(z) ∧ Week(w))) ::: If a customer subscribes to AMC A List, then he/she can watch 3 movies every week without any additional fees.\n∃x (Go(x, cinemas) ∧ Week(x)) ::: Some customers go to cinemas every week.\n¬∃x (Prefer(x, tvSeries) ∧ Watch(x, tvSeries)) ::: Customers who prefer TV series will not watch TV series in cinemas.\nWatch(james, tvSeries) ∧ Go(james, cinemas) ::: James watches TV series in cinemas.\nSubscribe(james, amcAList) ::: James subscribes to AMC A List.\nPrefer(peter, tvSeries) ::: Peter prefers TV series.\nConclusion:\nGo(james, cinemas) ∧ Week(james) ::: James goes to cinemas every week.\n------\nProblem:\nIf a person is a student, then he/she is not a teacher. If a person is a teacher, then he/she is not a student. If a person is a student, then he/she is not a professor. If a person is a professor, then he/she is not a student. If a person is a professor, then he/she is not a teacher. If a person is a teacher, then he/she is not a professor.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? If a person is a student, then he/she is not a teacher.\nBased on the above information, is the following statement true, false, or uncertain? If a person is a teacher, then he/she is not a professor.\nBased on the above information, is the following statement true, false, or uncertain? If a person is a professor, then he/she is not a teacher.\nBased on the above information, is the following statement true, false, or uncertain? If a person is a teacher, then he/she is not a student.\nBased on the above information, is the"
    ]
  },
  {
    "id": "FOLIO_train_953",
    "context": "If a customer subscribes to AMC A List, then he/she can watch 3 movies every week without any additional fees. Some customers go to cinemas every week. Customers who prefer TV series will not watch TV series in cinemas. James watches TV series in cinemas. James subscribes to AMC A List. Peter prefers TV series.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Peter will not watch TV series in cinemas.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "s\nPredicates:\nSubscribe(x, y) ::: x subscribes to y.\nWatch(x, y) ::: x watches y.\nPrefer(x, y) ::: x prefers y.\nPremises:\n∀x (Subscribe(x, amcAList) → ∃y ∃z ∃w (Watch(x, y) ∧ Watch(x, z) ∧ Watch(x, w) ∧ Week(y) ∧ Week(z) ∧ Week(w))) ::: If a customer subscribes to AMC A List, then he/she can watch 3 movies every week without any additional fees.\n∃x (GoToCinema(x) ∧ Week(x)) ::: Some customers go to cinemas every week.\n∀x (Prefer(x, tvSeries) → ¬Watch(x, tvSeries)) ::: Customers who prefer TV series will not watch TV series in cinemas.\nWatch(james, tvSeries) ::: James watches TV series in cinemas.\nSubscribe(james, amcAList) ::: James subscribes to AMC A List.\nPrefer(peter, tvSeries) ::: Peter prefers TV series.\nConclusion:\n¬Watch(peter, tvSeries) ::: Peter will not watch TV series in cinemas.\n------\nProblem:\nIf a person is a student, then he/she is not a teacher. If a person is a teacher, then he/she is not a student. If a person is a student, then he/she is not a professor. If a person is a professor, then he/she is not a student. If a person is a professor, then he/she is not a teacher. If a person is a teacher, then he/she is not a professor.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? If a person is a student, then he/she is not a teacher.\nBased on the above information, is the following statement true, false, or uncertain? If a person is a teacher, then he/she is not a professor.\nBased on the above information, is the following statement true, false, or uncertain? If a person is a professor, then he/she is not a teacher.\nBased on the above information, is the following statement true, false, or uncertain? If a person is a teacher, then he/she is not a student.\nBased on the above information, is the following statement true, false, or uncertain? If a person is a professor, then he/she is not a student.\n##"
    ]
  },
  {
    "id": "FOLIO_train_954",
    "context": "Bulbophyllum attenuatum is in the genus bulbophyllum. All bulbophyllum are orchids.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Bulbophyllum attenuatum is not an orchid.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBulbophyllum(x) ::: x is in the genus bulbophyllum.\nOrchid(x) ::: x is an orchid.\nPremises:\nBulbophyllum(bulbophyllumAttenuatum) ::: Bulbophyllum attenuatum is in the genus bulbophyllum.\n∀x (Bulbophyllum(x) → Orchid(x)) ::: All bulbophyllum are orchids.\nConclusion:\n¬Orchid(bulbophyllumAttenuatum) ::: Bulbophyllum attenuatum is not an orchid.\n------\nProblem:\nThe first person to be called a mathematician was Thales of Miletus. Thales of Miletus was a philosopher.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The first person to be called a philosopher was Thales of Miletus.\nBased on the above information, is the following statement true, false, or uncertain? The first person to be called a mathematician was a philosopher.\n###\nPredicates:\nMathematician(x) ::: x is a mathematician.\nPhilosopher(x) ::: x is a philosopher.\nPremises:\n∀x (Mathematician(x) → ¬Philosopher(x)) ::: The first person to be called a mathematician was Thales of Miletus.\nPhilosopher(thalesOfMiletus) ::: Thales of Miletus was a philosopher.\nConclusion:\n¬Philosopher(thalesOfMiletus) ::: The first person to be called a philosopher was Thales of Miletus.\n¬Mathematician(thalesOfMiletus) ::: The first person to be called a mathematician was a philosopher.\n------\nProblem:\nThe first person to be called a mathematician was Thales of Miletus. Thales of Miletus was a philosopher.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The first person to be called a philosopher was Thales of Miletus.\nBased on the above information, is the following statement true, false, or uncertain? The first person to be called a mathematician was a philosopher.\n###\nPredicates:\nMathematician(x) ::: x is"
    ]
  },
  {
    "id": "FOLIO_train_955",
    "context": "There are eight federal districts of Russia: Central, Northwestern, Southern, North Caucasian, Volga, Ural, Siberian and Far Eastern. The Central federal district has the largest population among all federal districts in Russia. Moscow is the administrative center of the Central federal district. Yekaterinburg is the administrative center of the Ural federal district. Vladivostok is the administrative center of the Far Eastern federal district. The Far Eastern federal district has the largest area among all federal districts in Russia. Some federal districts of Russia were established in 2000.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Vladivostok is the administrative center of the federal district with the largest area.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFederalDistrict(x) ::: x is a federal district of Russia.\nAdministrativeCenter(x, y) ::: x is the administrative center of y.\nPopulation(x, y) ::: x has population y.\nArea(x, y) ::: x has area y.\nEstablished(x, y) ::: x was established in year y.\nPremises:\nFederalDistrict(central) ∧ FederalDistrict(northwestern) ∧ FederalDistrict(southern) ∧ FederalDistrict(northCaucasian) ∧ FederalDistrict(volga) ∧ FederalDistrict(ural) ∧ FederalDistrict(siberian) ∧ FederalDistrict(farEastern) ::: There are eight federal districts of Russia: Central, Northwestern, Southern, North Caucasian, Volga, Ural, Siberian and Far Eastern.\nPopulation(central, largest) ::: The Central federal district has the largest population among all federal districts in Russia.\nAdministrativeCenter(central, moscow) ::: Moscow is the administrative center of the Central federal district.\nAdministrativeCenter(ural, yekaterinburg) ::: Yekaterinburg is the administrative center of the Ural federal district.\nAdministrativeCenter(farEastern, vladivostok) ::: Vladivostok is the administrative center of the Far Eastern federal district.\nArea(farEastern, largest) ::: The Far Eastern federal district has the largest area among all federal districts in Russia.\n∃x (FederalDistrict(x) ∧ Established(x, year2000)) ::: Some federal districts of Russia were established in 2000.\nConclusion:\nAdministrativeCenter(farEastern, vladivostok) ∧ Area(farEastern, largest) ::: Vladivostok is the administrative center of the federal district with the largest area.\n------\nProblem:\nThe United States of America is a federal republic consisting of 50 states. The capital of the United States is Washington, D.C. The capital of the state of New York is Albany. The capital of the state of California is Sacramento. The capital of the state of Texas is Austin. The capital of the state of Florida is Tallahassee. The capital of the state of New Jersey is Trenton. The capital of the state of Pennsylvania is Harrisburg. The capital of the state of Virginia is Richmond. The capital of the state of Maryland is Annapolis. The capital of the state of Delaware is Dover. The capital of the state of"
    ]
  },
  {
    "id": "FOLIO_train_956",
    "context": "There are eight federal districts of Russia: Central, Northwestern, Southern, North Caucasian, Volga, Ural, Siberian and Far Eastern. The Central federal district has the largest population among all federal districts in Russia. Moscow is the administrative center of the Central federal district. Yekaterinburg is the administrative center of the Ural federal district. Vladivostok is the administrative center of the Far Eastern federal district. The Far Eastern federal district has the largest area among all federal districts in Russia. Some federal districts of Russia were established in 2000.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Moscow is the administrative center of the federal district with the largest population.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFederalDistrict(x) ::: x is a federal district of Russia.\nAdministrativeCenter(x, y) ::: x is the administrative center of y.\nPopulation(x, y) ::: x has population y.\nArea(x, y) ::: x has area y.\nEstablished(x, y) ::: x was established in year y.\nPremises:\nFederalDistrict(central) ∧ FederalDistrict(northwestern) ∧ FederalDistrict(southern) ∧ FederalDistrict(northCaucasian) ∧ FederalDistrict(volga) ∧ FederalDistrict(ural) ∧ FederalDistrict(siberian) ∧ FederalDistrict(farEastern) ::: There are eight federal districts of Russia: Central, Northwestern, Southern, North Caucasian, Volga, Ural, Siberian and Far Eastern.\nPopulation(central, largest) ∧ Population(northwestern, secondLargest) ∧ Population(southern, thirdLargest) ∧ Population(northCaucasian, fourthLargest) ∧ Population(volga, fifthLargest) ∧ Population(ural, sixthLargest) ∧ Population(siberian, seventhLargest) ∧ Population(farEastern, eighthLargest) ::: The Central federal district has the largest population among all federal districts in Russia.\nAdministrativeCenter(central, moscow) ∧ AdministrativeCenter(ural, yekaterinburg) ∧ AdministrativeCenter(farEastern, vladivostok) ::: Moscow is the administrative center of the Central federal district. Yekaterinburg is the administrative center of the Ural federal district. Vladivostok is the administrative center of the Far Eastern federal district.\nArea(farEastern, largest) ∧ Area(central, secondLargest) ∧ Area(northwestern, thirdLargest) ∧ Area(southern, fourthLargest) ∧ Area(northCaucasian, fifthLargest) ∧ Area(volga, sixthLargest) ∧ Area(ural, seventhLargest) ∧ Area(siberian, eighthLargest) ::: The Far Eastern federal district has the largest area among all federal districts in Russia.\nEstablished(central, year2000) ∧ Established(northwestern, year2000) ∧ Established(southern, year2000) ∧ Established(northCaucas"
    ]
  },
  {
    "id": "FOLIO_train_957",
    "context": "There are eight federal districts of Russia: Central, Northwestern, Southern, North Caucasian, Volga, Ural, Siberian and Far Eastern. The Central federal district has the largest population among all federal districts in Russia. Moscow is the administrative center of the Central federal district. Yekaterinburg is the administrative center of the Ural federal district. Vladivostok is the administrative center of the Far Eastern federal district. The Far Eastern federal district has the largest area among all federal districts in Russia. Some federal districts of Russia were established in 2000.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Northwestern federal district was established in 2000.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFederalDistrict(x) ::: x is a federal district of Russia.\nAdministrativeCenter(x, y) ::: x is the administrative center of y.\nPopulation(x, y) ::: x has population y.\nArea(x, y) ::: x has area y.\nEstablished(x, y) ::: x was established in year y.\nPremises:\nFederalDistrict(central) ∧ FederalDistrict(northwestern) ∧ FederalDistrict(southern) ∧ FederalDistrict(northCaucasian) ∧ FederalDistrict(volga) ∧ FederalDistrict(ural) ∧ FederalDistrict(siberian) ∧ FederalDistrict(farEastern) ::: There are eight federal districts of Russia: Central, Northwestern, Southern, North Caucasian, Volga, Ural, Siberian and Far Eastern.\nAdministrativeCenter(central, moscow) ∧ AdministrativeCenter(ural, yekaterinburg) ∧ AdministrativeCenter(farEastern, vladivostok) ::: Moscow is the administrative center of the Central federal district. Yekaterinburg is the administrative center of the Ural federal district. Vladivostok is the administrative center of the Far Eastern federal district.\nPopulation(central, largest) ∧ Area(farEastern, largest) ::: The Central federal district has the largest population among all federal districts in Russia. The Far Eastern federal district has the largest area among all federal districts in Russia.\n∃x (FederalDistrict(x) ∧ Established(x, year2000)) ::: Some federal districts of Russia were established in 2000.\nConclusion:\nEstablished(northwestern, year2000) ::: The Northwestern federal district was established in 2000.\n------\nProblem:\nThe United States of America is a federal republic consisting of 50 states. The capital of the United States is Washington, D.C. The United States is a member of the United Nations. The United States is a member of the North Atlantic Treaty Organization. The United States is a member of the Organization of American States. The United States is a member of the Organization for Economic Co-operation and Development. The United States is a member of the World Trade Organization. The United States is a member of the Group of Eight. The United States is a member of the Group of Twenty. The United States is a member of the Asia-Pacific Economic Cooperation. The United States is a member of the Association of Southeast"
    ]
  },
  {
    "id": "FOLIO_train_958",
    "context": "All cancers are malignant tumors. No malignant tumor can be treated at home. All colorectal cancer is cancer. Having a cold can be treated at home. Breast cancer is neither having a cold nor a malignant tumor (exclusive).",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Breast cancer can be treated at home.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCancer(x) ::: x is cancer.\nMalignantTumor(x) ::: x is a malignant tumor.\nColorectalCancer(x) ::: x is colorectal cancer.\nHavingACold(x) ::: x is having a cold.\nBreastCancer(x) ::: x is breast cancer.\nTreat(x, y) ::: x can be treated at y.\nPremises:\n∀x (Cancer(x) → MalignantTumor(x)) ::: All cancers are malignant tumors.\n∀x (MalignantTumor(x) → ¬Treat(x, home)) ::: No malignant tumor can be treated at home.\n∀x (ColorectalCancer(x) → Cancer(x)) ::: All colorectal cancer is cancer.\nTreat(havingACold, home) ::: Having a cold can be treated at home.\n¬(BreastCancer(x) ⊕ HavingACold(x)) ∧ ¬(BreastCancer(x) ⊕ MalignantTumor(x)) ::: Breast cancer is neither having a cold nor a malignant tumor (exclusive).\nConclusion:\n¬Treat(breastCancer, home) ::: Breast cancer can be treated at home.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.\n###\nPredicates"
    ]
  },
  {
    "id": "FOLIO_train_959",
    "context": "All cancers are malignant tumors. No malignant tumor can be treated at home. All colorectal cancer is cancer. Having a cold can be treated at home. Breast cancer is neither having a cold nor a malignant tumor (exclusive).",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Breast cancer is colorectal cancer.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCancer(x) ::: x is cancer.\nMalignantTumor(x) ::: x is a malignant tumor.\nColorectalCancer(x) ::: x is colorectal cancer.\nHavingACold(x) ::: x is having a cold.\nTreat(x, y) ::: x can be treated at y.\nPremises:\n∀x (Cancer(x) → MalignantTumor(x)) ::: All cancers are malignant tumors.\n∀x (MalignantTumor(x) → ¬Treat(x, home)) ::: No malignant tumor can be treated at home.\n∀x (ColorectalCancer(x) → Cancer(x)) ::: All colorectal cancer is cancer.\nTreat(havingACold, home) ::: Having a cold can be treated at home.\n¬(HavingACold(breastCancer) ∨ MalignantTumor(breastCancer)) ::: Breast cancer is neither having a cold nor a malignant tumor (exclusive).\nConclusion:\nColorectalCancer(breastCancer) ::: Breast cancer is colorectal cancer.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.\n###\nPredicates:\nDependent(x) ::: x is a person dependent on caffeine.\nDrinks(x) :::"
    ]
  },
  {
    "id": "FOLIO_train_960",
    "context": "All cancers are malignant tumors. No malignant tumor can be treated at home. All colorectal cancer is cancer. Having a cold can be treated at home. Breast cancer is neither having a cold nor a malignant tumor (exclusive).",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Breast cancer is not colorectal cancer.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCancer(x) ::: x is cancer.\nMalignantTumor(x) ::: x is a malignant tumor.\nColorectalCancer(x) ::: x is colorectal cancer.\nHavingACold(x) ::: x is having a cold.\nTreat(x, y) ::: x can be treated at y.\nPremises:\n∀x (Cancer(x) → MalignantTumor(x)) ::: All cancers are malignant tumors.\n∀x (MalignantTumor(x) → ¬Treat(x, home)) ::: No malignant tumor can be treated at home.\n∀x (ColorectalCancer(x) → Cancer(x)) ::: All colorectal cancer is cancer.\nTreat(havingACold, home) ::: Having a cold can be treated at home.\n¬(HavingACold(breastCancer) ∨ MalignantTumor(breastCancer)) ::: Breast cancer is neither having a cold nor a malignant tumor (exclusive).\nConclusion:\n¬(ColorectalCancer(breastCancer) ∨ Cancer(breastCancer)) ::: Breast cancer is not colorectal cancer.\n------"
    ]
  },
  {
    "id": "FOLIO_train_961",
    "context": "All cancers are malignant tumors. No malignant tumor can be treated at home. All colorectal cancer is cancer. Having a cold can be treated at home. Breast cancer is neither having a cold nor a malignant tumor (exclusive).",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Breast cancer is colorectal cancer or a malignant tumor.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCancer(x) ::: x is cancer.\nMalignantTumor(x) ::: x is a malignant tumor.\nColorectalCancer(x) ::: x is colorectal cancer.\nHavingACold(x) ::: x is having a cold.\nTreat(x, y) ::: x can be treated at y.\nPremises:\n∀x (Cancer(x) → MalignantTumor(x)) ::: All cancers are malignant tumors.\n∀x (MalignantTumor(x) → ¬Treat(x, home)) ::: No malignant tumor can be treated at home.\n∀x (ColorectalCancer(x) → Cancer(x)) ::: All colorectal cancer is cancer.\nTreat(havingACold, home) ::: Having a cold can be treated at home.\n¬(HavingACold(breast) ∨ MalignantTumor(breast)) ::: Breast cancer is neither having a cold nor a malignant tumor (exclusive).\nConclusion:\n(ColorectalCancer(breast) ∨ MalignantTumor(breast)) ::: Breast cancer is colorectal cancer or a malignant tumor."
    ]
  },
  {
    "id": "FOLIO_train_962",
    "context": "All cancers are malignant tumors. No malignant tumor can be treated at home. All colorectal cancer is cancer. Having a cold can be treated at home. Breast cancer is neither having a cold nor a malignant tumor (exclusive).",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Breast cancer is colorectal cancer and a cancer.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCancer(x) ::: x is cancer.\nMalignantTumor(x) ::: x is a malignant tumor.\nColorectalCancer(x) ::: x is colorectal cancer.\nHavingACold(x) ::: x is having a cold.\nTreat(x, y) ::: x can be treated at y.\nPremises:\n∀x (Cancer(x) → MalignantTumor(x)) ::: All cancers are malignant tumors.\n∀x (MalignantTumor(x) → ¬Treat(x, home)) ::: No malignant tumor can be treated at home.\n∀x (ColorectalCancer(x) → Cancer(x)) ::: All colorectal cancer is cancer.\nTreat(havingACold, home) ::: Having a cold can be treated at home.\n¬(HavingACold(breast) ∨ MalignantTumor(breast)) ::: Breast cancer is neither having a cold nor a malignant tumor (exclusive).\nConclusion:\nColorectalCancer(breast) ∧ Cancer(breast) ::: Breast cancer is colorectal cancer and a cancer.\n------\nProblem:\nAll people who regularly"
    ]
  },
  {
    "id": "FOLIO_train_963",
    "context": "All cancers are malignant tumors. No malignant tumor can be treated at home. All colorectal cancer is cancer. Having a cold can be treated at home. Breast cancer is neither having a cold nor a malignant tumor (exclusive).",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If breast cancer is not colorectal cancer, then breast cancer is a malignant tumor.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCancer(x) ::: x is cancer.\nMalignantTumor(x) ::: x is a malignant tumor.\nColorectalCancer(x) ::: x is colorectal cancer.\nHavingACold(x) ::: x is having a cold.\nTreatAtHome(x) ::: x can be treated at home.\nPremises:\n∀x (Cancer(x) → MalignantTumor(x)) ::: All cancers are malignant tumors.\n∀x (MalignantTumor(x) → ¬TreatAtHome(x)) ::: No malignant tumor can be treated at home.\n∀x (ColorectalCancer(x) → Cancer(x)) ::: All colorectal cancer is cancer.\nHavingACold(cold) ∧ TreatAtHome(cold) ::: Having a cold can be treated at home.\n¬(BreastCancer(x) ∨ MalignantTumor(x)) ::: Breast cancer is neither having a cold nor a malignant tumor (exclusive).\nConclusion:\n¬(BreastCancer(x) ∨ ColorectalCancer(x)) → MalignantTumor(x) ::: If breast cancer is not col"
    ]
  },
  {
    "id": "FOLIO_train_964",
    "context": "I should not worry about things outside of my control. Traffic is outside of my control.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? I should not worry about traffic.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nWorry(x) ::: x worries.\nControl(x, y) ::: x controls y.\nPremises:\n¬Worry(me) ∧ ¬Control(me, things) ::: I should not worry about things outside of my control.\nControl(me, traffic) ::: Traffic is outside of my control.\nConclusion:\n¬Worry(me) ∧ ¬Control(me, traffic) ::: I should not worry about traffic.\n------\nProblem:\nThe only people who are allowed to enter the building are those who have a valid pass. The only people who are allowed to enter the building are those who are not carrying a weapon.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The only people who are allowed to enter the building are those who have a valid pass and are not carrying a weapon.\n###\nPredicates:\nAllow(x, y) ::: x allows y.\nValid(x) ::: x is valid.\nPass(x) ::: x is a pass.\nCarry(x, y) ::: x carries y.\nWeapon(x) ::: x is a weapon.\nPremises:\n∀x (Allow(building, x) → Valid(pass(x))) ::: The only people who are allowed to enter the building are those who have"
    ]
  },
  {
    "id": "FOLIO_train_965",
    "context": "Roversi is an Italian surname. Alba Roversi uses Roversi as a surname. Paolo Roversi uses Roversi as a surname. Roberto Roversi uses Roversi as a surname. Paolo Roversi is a photographer. A photographer is a professional or an amateur.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Alba Roversi uses an Italian surname.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nItalian(x) ::: x is an Italian surname.\nSurname(x) ::: x is a surname.\nUse(x, y) ::: x uses y.\nPhotographer(x) ::: x is a photographer.\nProfessional(x) ::: x is a professional.\nAmateur(x) ::: x is an amateur.\nPremises:\nItalian(roversi) ::: Roversi is an Italian surname.\nUse(alba, roversi) ::: Alba Roversi uses Roversi as a surname.\nUse(paolo, roversi) ::: Paolo Roversi uses Roversi as a surname.\nUse(roberto, roversi) ::: Roberto Roversi uses Roversi as a surname.\nPhotographer(paolo) ::: Paolo Roversi is a photographer.\n∀x (Photographer(x) → (Professional(x) ∨ Amateur(x))) ::: A photographer is a professional or an amateur.\nConclusion:\nItalian(roversi) ∧ Use(alba, roversi) ::: Alba Roversi uses an Italian surname.\n------\nProblem:\nA person is a human being. A human being is a mammal. A mammal is an animal. A person is a person"
    ]
  },
  {
    "id": "FOLIO_train_966",
    "context": "Roversi is an Italian surname. Alba Roversi uses Roversi as a surname. Paolo Roversi uses Roversi as a surname. Roberto Roversi uses Roversi as a surname. Paolo Roversi is a photographer. A photographer is a professional or an amateur.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There are no photographers using an Italian surname.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nItalian(x) ::: x is an Italian surname.\nSurname(x) ::: x is a surname.\nUse(x, y) ::: x uses y as a surname.\nPhotographer(x) ::: x is a photographer.\nProfessional(x) ::: x is a professional.\nAmateur(x) ::: x is an amateur.\nPremises:\nItalian(roversi) ::: Roversi is an Italian surname.\nUse(alba, roversi) ::: Alba Roversi uses Roversi as a surname.\nUse(paolo, roversi) ::: Paolo Roversi uses Roversi as a surname.\nUse(roberto, roversi) ::: Roberto Roversi uses Roversi as a surname.\nPhotographer(paolo) ::: Paolo Roversi is a photographer.\n∀x (Photographer(x) → (Professional(x) ∨ Amateur(x))) ::: A photographer is a professional or an amateur.\nConclusion:\n¬∃x (Photographer(x) ∧ Italian(x)) ::: There are no photographers using an Italian surname.\n------\nProblem:\nA person is a human being. A human being is a mammal. A mammal is an animal. A person is"
    ]
  },
  {
    "id": "FOLIO_train_967",
    "context": "Roversi is an Italian surname. Alba Roversi uses Roversi as a surname. Paolo Roversi uses Roversi as a surname. Roberto Roversi uses Roversi as a surname. Paolo Roversi is a photographer. A photographer is a professional or an amateur.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Paolo is an amateur photographer.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nItalian(x) ::: x is an Italian surname.\nSurname(x) ::: x is a surname.\nUse(x, y) ::: x uses y as a surname.\nPhotographer(x) ::: x is a photographer.\nProfessional(x) ::: x is a professional.\nAmateur(x) ::: x is an amateur.\nPremises:\nItalian(roversi) ::: Roversi is an Italian surname.\nUse(alba, roversi) ::: Alba Roversi uses Roversi as a surname.\nUse(paolo, roversi) ::: Paolo Roversi uses Roversi as a surname.\nUse(roberto, roversi) ::: Roberto Roversi uses Roversi as a surname.\nPhotographer(paolo) ::: Paolo Roversi is a photographer.\n∀x (Photographer(x) → (Professional(x) ∨ Amateur(x))) ::: A photographer is a professional or an amateur.\nConclusion:\nAmateur(paolo) ::: Paolo is an amateur photographer.\n------\nProblem:\nThe first person to be called a \"mathematician\" was the Greek philosopher Pythagoras. Pythagoras was a mathematician. Pythagoras was"
    ]
  },
  {
    "id": "FOLIO_train_968",
    "context": "Zaha Hadid is a British-Iraqi architect, artist and designer. Zaha Hadid was born on 31 October 1950 in Baghdad, Iraq. Hadid was a visiting professor of Architectural Design at the Yale School of Architecture. Max is an aspiring architecture student, and he plans to apply to Yale School of Architecture.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Hadid became a UK citizen later in her life.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBritish(x) ::: x is a British person.\nIraqi(x) ::: x is an Iraqi person.\nArchitect(x) ::: x is an architect.\nArtist(x) ::: x is an artist.\nDesigner(x) ::: x is a designer.\nBorn(x, y) ::: x was born in year y.\nVisitingProfessor(x, y) ::: x is a visiting professor of y.\nArchitecturalDesign(x) ::: x is Architectural Design.\nYaleSchoolOfArchitecture(x) ::: x is the Yale School of Architecture.\nApply(x, y) ::: x plans to apply to y.\nPremises:\nBritish(zaha) ∧ Iraqi(zaha) ∧ Architect(zaha) ∧ Artist(zaha) ∧ Designer(zaha) ::: Zaha Hadid is a British-Iraqi architect, artist and designer.\nBorn(zaha, year1950) ∧ Born(zaha, month10) ∧ Born(zaha, day31) ∧ Born(zaha, cityBaghdad) ∧ Born(zaha, countryIraq) ::: Zaha Hadid was born on 31 October 1950"
    ]
  },
  {
    "id": "FOLIO_train_969",
    "context": "Zaha Hadid is a British-Iraqi architect, artist and designer. Zaha Hadid was born on 31 October 1950 in Baghdad, Iraq. Hadid was a visiting professor of Architectural Design at the Yale School of Architecture. Max is an aspiring architecture student, and he plans to apply to Yale School of Architecture.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Hadid did some work in interior design.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBritish(x) ::: x is a British person.\nIraqi(x) ::: x is an Iraqi person.\nArchitect(x) ::: x is an architect.\nArtist(x) ::: x is an artist.\nDesigner(x) ::: x is a designer.\nBorn(x, y) ::: x was born in year y.\nVisitingProfessor(x, y) ::: x is a visiting professor of y.\nArchitecturalDesign(x) ::: x is architectural design.\nYaleSchoolOfArchitecture(x) ::: x is the Yale School of Architecture.\nAspiring(x, y) ::: x is an aspiring y.\nApply(x, y) ::: x plans to apply to y.\nPremises:\nBritish(zaha) ∧ Iraqi(zaha) ∧ Architect(zaha) ∧ Artist(zaha) ∧ Designer(zaha) ::: Zaha Hadid is a British-Iraqi architect, artist and designer.\nBorn(zaha, year1950) ∧ Born(zaha, month10) ∧ Born(zaha, day31) ∧ Born(zaha, cityBaghdad) ∧ Born(zaha, countryIraq) :"
    ]
  },
  {
    "id": "FOLIO_train_970",
    "context": "Zaha Hadid is a British-Iraqi architect, artist and designer. Zaha Hadid was born on 31 October 1950 in Baghdad, Iraq. Hadid was a visiting professor of Architectural Design at the Yale School of Architecture. Max is an aspiring architecture student, and he plans to apply to Yale School of Architecture.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Hadid was born in 1982.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "5\nPredicates:\nBritish(x) ::: x is a British person.\nIraqi(x) ::: x is an Iraqi person.\nArchitect(x) ::: x is an architect.\nArtist(x) ::: x is an artist.\nDesigner(x) ::: x is a designer.\nBorn(x, y) ::: x was born in year y.\nVisitingProfessor(x, y) ::: x is a visiting professor of y.\nArchitecturalDesign(x) ::: x is Architectural Design.\nYaleSchoolOfArchitecture(x) ::: x is the Yale School of Architecture.\nAspiring(x, y) ::: x is an aspiring y.\nApply(x, y) ::: x plans to apply to y.\nPremises:\nBritish(zaha) ∧ Iraqi(zaha) ∧ Architect(zaha) ∧ Artist(zaha) ∧ Designer(zaha) ::: Zaha Hadid is a British-Iraqi architect, artist and designer.\nBorn(zaha, year1950) ∧ Born(zaha, month10) ∧ Born(zaha, day31) ∧ Born(zaha, cityBaghdad) ∧ Born(zaha, countryIraq) ::: Zaha Hadid was born on 31 October 1950 in Baghdad, Iraq.\nVisitingProfessor(zaha, architecturalDesign) ∧ VisitingProfessor(zaha, yaleSchoolOfArchitecture) ::: Hadid was a visiting professor of Architectural Design at the Yale School of Architecture.\nAspiring(max, architectureStudent) ∧ Apply(max, yaleSchoolOfArchitecture) ::: Max is an aspiring architecture student, and he plans to apply to Yale School of Architecture.\nConclusion:\nBorn(zaha, year1982) ::: Hadid was born in 1982.\n------"
    ]
  },
  {
    "id": "FOLIO_train_971",
    "context": "Zaha Hadid is a British-Iraqi architect, artist and designer. Zaha Hadid was born on 31 October 1950 in Baghdad, Iraq. Hadid was a visiting professor of Architectural Design at the Yale School of Architecture. Max is an aspiring architecture student, and he plans to apply to Yale School of Architecture.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Max admires Zaha Hadid.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBritish(x) ::: x is a British person.\nIraqi(x) ::: x is an Iraqi person.\nArchitect(x) ::: x is an architect.\nArtist(x) ::: x is an artist.\nDesigner(x) ::: x is a designer.\nBorn(x, y) ::: x was born in year y.\nVisitingProfessor(x, y) ::: x is a visiting professor of y.\nArchitecturalDesign(x) ::: x is architectural design.\nYaleSchoolOfArchitecture(x) ::: x is the Yale School of Architecture.\nAspiring(x, y) ::: x is an aspiring y.\nApply(x, y) ::: x plans to apply to y.\nAdmire(x, y) ::: x admires y.\nPremises:\nBritish(zaha) ∧ Iraqi(zaha) ∧ Architect(zaha) ∧ Artist(zaha) ∧ Designer(zaha) ::: Zaha Hadid is a British-Iraqi architect, artist and designer.\nBorn(zaha, year1950) ∧ Born(zaha, month10) ∧ Born(zaha, day31) ∧ Born(zaha, cityBaghdad) ∧ Born(zaha, countryIraq) ::: Zaha Hadid was born on 31 October 1950 in Baghdad, Iraq.\nVisitingProfessor(zaha, architecturalDesign) ∧ VisitingProfessor(zaha, yaleSchoolOfArchitecture) ::: Hadid was a visiting professor of Architectural Design at the Yale School of Architecture.\nAspiring(max, architectureStudent) ∧ Apply(max, yaleSchoolOfArchitecture) ::: Max is an aspiring architecture student, and he plans to apply to Yale School of Architecture.\nConclusion:\nAdmire(max, zaha) ::: Max adm"
    ]
  },
  {
    "id": "FOLIO_train_972",
    "context": "Something is either an invasive neuroimaging technique or a noninvasive neuroimaging technique. All noninvasive neuroimaging techniques provide a spatial resolution of brains. If a technique provides a spatial resolution of brains, then it is a measurement of brain activity. All measurements of brain activity are used by neuroscience researchers. FMRI is either a measurement of brain activity or a noninvasive neuroimaging technique.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? FMRI provides a spatial resolution of brains.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nInvasive(x) ::: x is an invasive neuroimaging technique.\nNoninvasive(x) ::: x is a noninvasive neuroimaging technique.\nProvide(x, y) ::: x provides y.\nSpatialResolution(x) ::: x is a spatial resolution of brains.\nMeasurement(x) ::: x is a measurement of brain activity.\nUsed(x, y) ::: x is used by y.\nPremises:\n(Invasive(x) ∨ Noninvasive(x)) ::: Something is either an invasive neuroimaging technique or a noninvasive neuroimaging technique.\n∀x (Noninvasive(x) → Provide(x, SpatialResolution(x))) ::: All noninvasive neuroimaging techniques provide a spatial resolution of brains.\n∀x (Provide(x, SpatialResolution(x)) → Measurement(x)) ::: If a technique provides a spatial resolution of brains, then it is a measurement of brain activity.\n∀x (Measurement(x) → Used(x, neuroscienceResearcher)) ::: All measurements of brain activity are used by neuroscience researchers.\n(Measurement(fMRI) ∨ Noninvasive(fMRI)) ::: FMRI is either a measurement of brain activity or a noninvasive neuroimaging technique.\nConclusion:\nProvide(fMRI, SpatialResolution(x)) ::: FMRI provides a spatial resolution of brains.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.\nQuestion:\nBased on the"
    ]
  },
  {
    "id": "FOLIO_train_973",
    "context": "Something is either an invasive neuroimaging technique or a noninvasive neuroimaging technique. All noninvasive neuroimaging techniques provide a spatial resolution of brains. If a technique provides a spatial resolution of brains, then it is a measurement of brain activity. All measurements of brain activity are used by neuroscience researchers. FMRI is either a measurement of brain activity or a noninvasive neuroimaging technique.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? FMRI is an invasive neuroimaging technique and is used by neuroscience researchers.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nInvasiveNeuroimagingTechnique(x) ::: x is an invasive neuroimaging technique.\nNoninvasiveNeuroimagingTechnique(x) ::: x is a noninvasive neuroimaging technique.\nProvide(x, y) ::: x provides y.\nSpatialResolution(x) ::: x is a spatial resolution of brains.\nMeasurement(x) ::: x is a measurement of brain activity.\nUsed(x, y) ::: x is used by y.\nPremises:\n(InvasiveNeuroimagingTechnique(x) ∨ NoninvasiveNeuroimagingTechnique(x)) ::: Something is either an invasive neuroimaging technique or a noninvasive neuroimaging technique.\n∀x (NoninvasiveNeuroimagingTechnique(x) → Provide(x, SpatialResolution(x))) ::: All noninvasive neuroimaging techniques provide a spatial resolution of brains.\n∀x (Provide(x, SpatialResolution(x)) → Measurement(x)) ::: If a technique provides a spatial resolution of brains, then it is a measurement of brain activity.\n∀x (Measurement(x) → Used(x, neuroscienceResearcher)) ::: All measurements of brain activity are used by neuroscience researchers.\n(Measurement(fMRI) ∨ NoninvasiveNeuroimagingTechnique(fMRI)) ::: FMRI is either a measurement of brain activity or a noninvasive neuroimaging technique.\nConclusion:\nInvasiveNeuroimagingTechnique(fMRI) ∧ Used(fMRI, neuroscienceResearcher) ::: FMRI is an invasive neuroimaging technique and is used by neuroscience researchers.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being"
    ]
  },
  {
    "id": "FOLIO_train_974",
    "context": "Something is either an invasive neuroimaging technique or a noninvasive neuroimaging technique. All noninvasive neuroimaging techniques provide a spatial resolution of brains. If a technique provides a spatial resolution of brains, then it is a measurement of brain activity. All measurements of brain activity are used by neuroscience researchers. FMRI is either a measurement of brain activity or a noninvasive neuroimaging technique.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? FMRI is either an invasive neuroimaging technique or is used by neuroscience researchers.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nInvasiveNeuroimagingTechnique(x) ::: x is an invasive neuroimaging technique.\nNoninvasiveNeuroimagingTechnique(x) ::: x is a noninvasive neuroimaging technique.\nProvide(x, y) ::: x provides y.\nSpatialResolution(x) ::: x is a spatial resolution of brains.\nMeasurement(x) ::: x is a measurement of brain activity.\nUsed(x, y) ::: x is used by y.\nPremises:\n(InvasiveNeuroimagingTechnique(x) ∨ NoninvasiveNeuroimagingTechnique(x)) ::: Something is either an invasive neuroimaging technique or a noninvasive neuroimaging technique.\n∀x (NoninvasiveNeuroimagingTechnique(x) → Provide(x, SpatialResolution(x))) ::: All noninvasive neuroimaging techniques provide a spatial resolution of brains.\n∀x (Provide(x, SpatialResolution(x)) → Measurement(x)) ::: If a technique provides a spatial resolution of brains, then it is a measurement of brain activity.\n∀x (Measurement(x) → Used(x, neuroscienceResearcher)) ::: All measurements of brain activity are used by neuroscience researchers.\n(Measurement(fmri) ∨ NoninvasiveNeuroimagingTechnique(fmri)) ::: FMRI is either a measurement of brain activity or a noninvasive neuroimaging technique.\nConclusion:\n(InvasiveNeuroimagingTechnique(fmri) ∨ Used(fmri, neuroscienceResearcher)) ::: FMRI is either an invasive neuroimaging technique or is used by neuroscience researchers.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted"
    ]
  },
  {
    "id": "FOLIO_train_975",
    "context": "Something is either an invasive neuroimaging technique or a noninvasive neuroimaging technique. All noninvasive neuroimaging techniques provide a spatial resolution of brains. If a technique provides a spatial resolution of brains, then it is a measurement of brain activity. All measurements of brain activity are used by neuroscience researchers. FMRI is either a measurement of brain activity or a noninvasive neuroimaging technique.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If fMRI is not an invasive neuroimaging technique and used by neuroscience researchers, then fMRI is neither a noninvasive neuroimaging technique nor provides a spatial resolution of brains.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nInvasive(x) ::: x is an invasive neuroimaging technique.\nNoninvasive(x) ::: x is a noninvasive neuroimaging technique.\nProvide(x, y) ::: x provides y.\nSpatialResolution(x) ::: x is a spatial resolution of brains.\nMeasurement(x) ::: x is a measurement of brain activity.\nUsed(x, y) ::: x is used by y.\nPremises:\nInvasive(x) ⊕ Noninvasive(x) ::: Something is either an invasive neuroimaging technique or a noninvasive neuroimaging technique.\n∀x (Noninvasive(x) → Provide(x, SpatialResolution(x))) ::: All noninvasive neuroimaging techniques provide a spatial resolution of brains.\n∀x (Provide(x, SpatialResolution(x)) → Measurement(x)) ::: If a technique provides a spatial resolution of brains, then it is a measurement of brain activity.\n∀x (Measurement(x) → Used(x, neuroscienceResearcher)) ::: All measurements of brain activity are used by neuroscience researchers.\nFMRI(x) ⊕ Noninvasive(x) ::: FMRI is either a measurement of brain activity or a noninvasive neuroimaging technique.\nConclusion:\n¬(Invasive(fMRI) ∧ Used(fMRI, neuroscienceResearcher)) → (Noninvasive(fMRI) ∧ ¬Provide(fMRI, SpatialResolution(fMRI))) ::: If fMRI is not an invasive neuroimaging technique and used by neuroscience researchers, then fMRI is neither a noninvasive neuroimaging technique nor provides a spatial resolution of brains.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted"
    ]
  },
  {
    "id": "FOLIO_train_976",
    "context": "Either present their work at the conference or provide a tutorial session at the conference. All who present their work at the conference will attend in person. All those providing a tutorial session at the conference are invited to join the club. All who attend the conference in person are provided with souvenirs. All invited to join the club are provided with delicious meals. All provided with delicious meals are happy to communicate with each other during the dinner. All provided with delicious meals are invited to take a photo with the audience. James does not attend the conference in person and is not provided with souvenirs.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James is provided with souvenirs.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPresent(x) ::: x presents their work at the conference.\nTutorial(x) ::: x provides a tutorial session at the conference.\nAttend(x) ::: x attends the conference in person.\nInvite(x) ::: x is invited to join the club.\nSouvenir(x) ::: x is provided with souvenirs.\nMeal(x) ::: x is provided with delicious meals.\nHappy(x) ::: x is happy to communicate with each other during the dinner.\nPhoto(x) ::: x is invited to take a photo with the audience.\nPremises:\nPresent(x) ∨ Tutorial(x) ::: Either present their work at the conference or provide a tutorial session at the conference.\n∀x (Present(x) → Attend(x)) ::: All who present their work at the conference will attend in person.\n∀x (Tutorial(x) → Invite(x)) ::: All those providing a tutorial session at the conference are invited to join the club.\n∀x (Attend(x) → Souvenir(x)) ::: All who attend the conference in person are provided with souvenirs.\n∀x (Invite(x) → Meal(x)) ::: All invited to join the club are provided with delicious meals.\n∀x (Meal(x) → Happy(x)) ::: All provided with delicious meals are happy to communicate with each other during the dinner.\n∀x (Meal(x) → Photo(x)) ::: All provided with delicious meals are invited to take a photo with the audience.\n¬Attend(james) ∧ ¬Souvenir(james) ::: James does not attend the conference in person and is not provided with souvenirs.\nConclusion:\n¬Souvenir(james) ::: James is provided with souvenirs.\n------\nProblem:\nAll who are not in the club are not invited to the party. All who are not invited to the party are not happy. All who are not happy are not invited to the"
    ]
  },
  {
    "id": "FOLIO_train_977",
    "context": "Either present their work at the conference or provide a tutorial session at the conference. All who present their work at the conference will attend in person. All those providing a tutorial session at the conference are invited to join the club. All who attend the conference in person are provided with souvenirs. All invited to join the club are provided with delicious meals. All provided with delicious meals are happy to communicate with each other during the dinner. All provided with delicious meals are invited to take a photo with the audience. James does not attend the conference in person and is not provided with souvenirs.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James is not provided with souvenirs.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPresent(x) ::: x presents their work at the conference.\nTutorial(x) ::: x provides a tutorial session at the conference.\nAttend(x) ::: x attends the conference in person.\nInvite(x) ::: x is invited to join the club.\nSouvenir(x) ::: x is provided with souvenirs.\nMeal(x) ::: x is provided with delicious meals.\nHappy(x) ::: x is happy to communicate with each other during the dinner.\nPhoto(x) ::: x is invited to take a photo with the audience.\nPremises:\nPresent(x) ∨ Tutorial(x) ::: Either present their work at the conference or provide a tutorial session at the conference.\n∀x (Present(x) → Attend(x)) ::: All who present their work at the conference will attend in person.\n∀x (Tutorial(x) → Invite(x)) ::: All those providing a tutorial session at the conference are invited to join the club.\n∀x (Attend(x) → Souvenir(x)) ::: All who attend the conference in person are provided with souvenirs.\n∀x (Invite(x) → Meal(x)) ::: All invited to join the club are provided with delicious meals.\n∀x (Meal(x) → Happy(x)) ::: All provided with delicious meals are happy to communicate with each other during the dinner.\n∀x (Meal(x) → Photo(x)) ::: All provided with delicious meals are invited to take a photo with the audience.\n¬Attend(james) ∧ ¬Souvenir(james) ::: James does not attend the conference in person and is not provided with souvenirs.\nConclusion:\n¬Souvenir(james) ::: James is not provided with souvenirs.\n------\nProblem:\nAll who are not in the club are not invited to join the club. All who are not invited to join the club are not provided with delicious meals. All who"
    ]
  },
  {
    "id": "FOLIO_train_978",
    "context": "Either present their work at the conference or provide a tutorial session at the conference. All who present their work at the conference will attend in person. All those providing a tutorial session at the conference are invited to join the club. All who attend the conference in person are provided with souvenirs. All invited to join the club are provided with delicious meals. All provided with delicious meals are happy to communicate with each other during the dinner. All provided with delicious meals are invited to take a photo with the audience. James does not attend the conference in person and is not provided with souvenirs.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James is invited to take a photo with the audience and is happy to communicate with each other at the dinner.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPresent(x) ::: x presents their work at the conference.\nTutorial(x) ::: x provides a tutorial session at the conference.\nAttend(x) ::: x attends the conference in person.\nInvite(x) ::: x is invited to join the club.\nSouvenir(x) ::: x is provided with souvenirs.\nMeal(x) ::: x is provided with delicious meals.\nHappy(x) ::: x is happy to communicate with each other during the dinner.\nPhoto(x) ::: x is invited to take a photo with the audience.\nPremises:\nPresent(x) ∨ Tutorial(x) ::: Either present their work at the conference or provide a tutorial session at the conference.\n∀x (Present(x) → Attend(x)) ::: All who present their work at the conference will attend in person.\n∀x (Tutorial(x) → Invite(x)) ::: All those providing a tutorial session at the conference are invited to join the club.\n∀x (Attend(x) → Souvenir(x)) ::: All who attend the conference in person are provided with souvenirs.\n∀x (Invite(x) → Meal(x)) ::: All invited to join the club are provided with delicious meals.\n∀x (Meal(x) → Happy(x)) ::: All provided with delicious meals are happy to communicate with each other during the dinner.\n∀x (Meal(x) → Photo(x)) ::: All provided with delicious meals are invited to take a photo with the audience.\n¬Attend(james) ∧ ¬Souvenir(james) ::: James does not attend the conference in person and is not provided with souvenirs.\nConclusion:\nPhoto(james) ∧ Happy(james) ::: James is invited to take a photo with the audience and is happy to communicate with each other at the dinner.\n------\nProblem:\nAll who are not in the club are not invited to the party. All who are not"
    ]
  },
  {
    "id": "FOLIO_train_979",
    "context": "Either present their work at the conference or provide a tutorial session at the conference. All who present their work at the conference will attend in person. All those providing a tutorial session at the conference are invited to join the club. All who attend the conference in person are provided with souvenirs. All invited to join the club are provided with delicious meals. All provided with delicious meals are happy to communicate with each other during the dinner. All provided with delicious meals are invited to take a photo with the audience. James does not attend the conference in person and is not provided with souvenirs.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James is invited to take a photo with the audience or is happy to communicate with each other during the dinner.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPresent(x) ::: x presents their work at the conference.\nTutorial(x) ::: x provides a tutorial session at the conference.\nAttend(x) ::: x attends the conference in person.\nInvite(x) ::: x is invited to join the club.\nSouvenir(x) ::: x is provided with souvenirs.\nMeal(x) ::: x is provided with delicious meals.\nHappy(x) ::: x is happy to communicate with each other during the dinner.\nPhoto(x) ::: x is invited to take a photo with the audience.\nPremises:\n(Present(x) ∨ Tutorial(x)) ::: Either present their work at the conference or provide a tutorial session at the conference.\n∀x (Present(x) → Attend(x)) ::: All who present their work at the conference will attend in person.\n∀x (Tutorial(x) → Invite(x)) ::: All those providing a tutorial session at the conference are invited to join the club.\n∀x (Attend(x) → Souvenir(x)) ::: All who attend the conference in person are provided with souvenirs.\n∀x (Invite(x) → Meal(x)) ::: All invited to join the club are provided with delicious meals.\n∀x (Meal(x) → Happy(x)) ::: All provided with delicious meals are happy to communicate with each other during the dinner.\n∀x (Meal(x) → Photo(x)) ::: All provided with delicious meals are invited to take a photo with the audience.\n¬Attend(james) ∧ ¬Souvenir(james) ::: James does not attend the conference in person and is not provided with souvenirs.\nConclusion:\n(Happy(james) ∨ Photo(james)) ::: James is invited to take a photo with the audience or is happy to communicate with each other during the dinner.\n------\nProblem:\nAll who are not in the club are not invited to the party."
    ]
  },
  {
    "id": "FOLIO_train_980",
    "context": "Either present their work at the conference or provide a tutorial session at the conference. All who present their work at the conference will attend in person. All those providing a tutorial session at the conference are invited to join the club. All who attend the conference in person are provided with souvenirs. All invited to join the club are provided with delicious meals. All provided with delicious meals are happy to communicate with each other during the dinner. All provided with delicious meals are invited to take a photo with the audience. James does not attend the conference in person and is not provided with souvenirs.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James is either invited to take a photo with the audience or happy to communicate with each other during the dinner.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPresent(x) ::: x presents their work at the conference.\nTutorial(x) ::: x provides a tutorial session at the conference.\nAttend(x) ::: x attends the conference in person.\nInvite(x) ::: x is invited to join the club.\nSouvenir(x) ::: x is provided with souvenirs.\nMeal(x) ::: x is provided with delicious meals.\nHappy(x) ::: x is happy to communicate with each other during the dinner.\nPhoto(x) ::: x is invited to take a photo with the audience.\nPremises:\n(Present(x) ∨ Tutorial(x)) ::: Either present their work at the conference or provide a tutorial session at the conference.\n∀x (Present(x) → Attend(x)) ::: All who present their work at the conference will attend in person.\n∀x (Tutorial(x) → Invite(x)) ::: All those providing a tutorial session at the conference are invited to join the club.\n∀x (Attend(x) → Souvenir(x)) ::: All who attend the conference in person are provided with souvenirs.\n∀x (Invite(x) → Meal(x)) ::: All invited to join the club are provided with delicious meals.\n∀x (Meal(x) → Happy(x)) ::: All provided with delicious meals are happy to communicate with each other during the dinner.\n∀x (Meal(x) → Photo(x)) ::: All provided with delicious meals are invited to take a photo with the audience.\n¬Attend(james) ∧ ¬Souvenir(james) ::: James does not attend the conference in person and is not provided with souvenirs.\nConclusion:\n(Happy(james) ∨ Photo(james)) ::: James is either invited to take a photo with the audience or happy to communicate with each other during the dinner.\n------"
    ]
  },
  {
    "id": "FOLIO_train_981",
    "context": "The USS Salem is a heavy cruiser built for the United States navy. The last heavy cruiser to enter service was the USS Salem. The USS Salem is a museum ship. Museum ships are open to the public. The USS Salem served in the Atlantic and Mediterranean.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The USS Salem is open to the public.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nUSS(x) ::: x is a ship of the United States navy.\nHeavyCruiser(x) ::: x is a heavy cruiser.\nMuseumShip(x) ::: x is a museum ship.\nOpen(x) ::: x is open to the public.\nServe(x, y) ::: x served in y.\nPremises:\nUSS(salem) ∧ HeavyCruiser(salem) ::: The USS Salem is a heavy cruiser built for the United States navy.\nLast(salem, heavyCruiser) ::: The last heavy cruiser to enter service was the USS Salem.\nMuseumShip(salem) ::: The USS Salem is a museum ship.\n∀x (MuseumShip(x) → Open(x)) ::: Museum ships are open to the public.\nServe(salem, atlantic) ∧ Serve(salem, mediterranean) ::: The USS Salem served in the Atlantic and Mediterranean.\nConclusion:\nOpen(salem) ::: The USS Salem is open to the public.\n------\nProblem:\nThe USS Salem is a heavy cruiser built for the United States navy. The last heavy cruiser to enter service was the USS Salem. The USS Salem is a museum ship. Museum ships are open to the public. The USS Salem served in the Atlantic and Mediterranean.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The USS Salem is a heavy cruiser.\nBased on the above information, is the following statement true, false, or uncertain? The USS Salem is a museum ship.\nBased on the above information, is the following statement true, false, or uncertain? The USS Salem is open to the public.\nBased on the above information, is the following statement true, false, or uncertain? The USS Salem served in the Atlantic and Mediterranean.\n###\nPred"
    ]
  },
  {
    "id": "FOLIO_train_982",
    "context": "The USS Salem is a heavy cruiser built for the United States navy. The last heavy cruiser to enter service was the USS Salem. The USS Salem is a museum ship. Museum ships are open to the public. The USS Salem served in the Atlantic and Mediterranean.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There is a museum ship open to the public that served in the Mediterranean.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nUSS(x) ::: x is a ship of the United States Navy.\nSalem(x) ::: x is the USS Salem.\nHeavyCruiser(x) ::: x is a heavy cruiser.\nMuseumShip(x) ::: x is a museum ship.\nOpen(x) ::: x is open to the public.\nServe(x, y) ::: x served in y.\nPremises:\nUSS(salem) ∧ HeavyCruiser(salem) ::: The USS Salem is a heavy cruiser built for the United States navy.\nSalem(salem) ∧ Last(salem, heavyCruiser) ::: The last heavy cruiser to enter service was the USS Salem.\nSalem(salem) ∧ MuseumShip(salem) ::: The USS Salem is a museum ship.\n∀x (MuseumShip(x) → Open(x)) ::: Museum ships are open to the public.\nServe(salem, atlantic) ∧ Serve(salem, mediterranean) ::: The USS Salem served in the Atlantic and Mediterranean.\nConclusion:\nMuseumShip(salem) ∧ Open(salem) ∧ Serve(salem, mediterranean) ::: There is a museum ship open to the public that served in the Mediterranean.\n------\nProblem:\nThe USS Salem is a heavy cruiser built for the United States navy. The last heavy cruiser to enter service was the USS Salem. The USS Salem is a museum ship. Museum ships are open to the public. The USS Salem served in the Atlantic and Mediterranean.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The USS Salem is a heavy cruiser.\nBased on the above information, is the following statement true, false, or uncertain? The USS Salem is a museum ship.\nBased on the above information"
    ]
  },
  {
    "id": "FOLIO_train_983",
    "context": "The USS Salem is a heavy cruiser built for the United States navy. The last heavy cruiser to enter service was the USS Salem. The USS Salem is a museum ship. Museum ships are open to the public. The USS Salem served in the Atlantic and Mediterranean.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The USS Salem was not the last heavy cruiser to enter service.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nUSS(x) ::: x is a ship of the United States Navy.\nSalem(x) ::: x is the USS Salem.\nHeavyCruiser(x) ::: x is a heavy cruiser.\nMuseumShip(x) ::: x is a museum ship.\nOpen(x) ::: x is open to the public.\nServe(x, y) ::: x served in y.\nPremises:\nSalem(ussSalem) ∧ HeavyCruiser(ussSalem) ∧ MuseumShip(ussSalem) ∧ Open(ussSalem) ∧ Serve(ussSalem, atlantic) ∧ Serve(ussSalem, mediterranean) ::: The USS Salem is a heavy cruiser built for the United States navy. The last heavy cruiser to enter service was the USS Salem. The USS Salem is a museum ship. Museum ships are open to the public. The USS Salem served in the Atlantic and Mediterranean.\nConclusion:\n¬(Salem(ussSalem) ∧ HeavyCruiser(ussSalem) ∧ MuseumShip(ussSalem) ∧ Open(ussSalem) ∧ Serve(ussSalem, atlantic) ∧ Serve(ussSalem, mediterranean)) ::: The USS Salem was not the last heavy cruiser to enter service.\n------\nProblem:\nThe USS Salem is a heavy cruiser built for the United States navy. The last heavy cruiser to enter service was the USS Salem. The USS Salem is a museum ship. Museum ships are open to the public. The USS Salem served in the Atlantic and Mediterranean.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The USS Salem was not the last heavy cruiser to enter service.\n###\nPredicates:\nUSS(x) ::: x is a ship of the United States Navy.\nSalem("
    ]
  },
  {
    "id": "FOLIO_train_984",
    "context": "TS Leda was a good passenger and cargo vessel. TS Leda was the first Norweigian vessel that was built with stabilizers. Stabilizers are mechanical devices that are only on ships that have powerful steam turbine engines. To be a good passenger and cargo vessel, ships must be quiet and good at sea. Some ships that are quiet and good at sea have powerful steam turbine engines.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? TS Leda was quiet and good at sea.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nQuiet(x) ::: x is quiet.\nGoodAtSea(x) ::: x is good at sea.\nPassengerAndCargoVessel(x) ::: x is a passenger and cargo vessel.\nStabilizer(x) ::: x is a stabilizer.\nSteamTurbineEngine(x) ::: x is a steam turbine engine.\nPowerful(x) ::: x is powerful.\nPremises:\nPassengerAndCargoVessel(leda) ∧ Stabilizer(leda) ∧ First(leda, norweigianVessel) ∧ Built(leda, stabilizer) ::: TS Leda was a good passenger and cargo vessel. TS Leda was the first Norweigian vessel that was built with stabilizers.\nStabilizer(x) → SteamTurbineEngine(x) ::: Stabilizers are mechanical devices that are only on ships that have powerful steam turbine engines.\nPassengerAndCargoVessel(x) → Quiet(x) ∧ GoodAtSea(x) ::: To be a good passenger and cargo vessel, ships must be quiet and good at sea.\n∃x (Quiet(x) ∧ GoodAtSea(x) ∧ SteamTurbineEngine(x) ∧ Powerful(x)) ::: Some ships that are quiet and good at sea have powerful steam turbine engines.\nConclusion:\nQuiet(leda) ∧ GoodAtSea(leda) ::: TS Leda was quiet and good at sea.\n------\nProblem:\nThe first person to fly solo across the Atlantic Ocean was Charles Lindbergh. Charles Lindbergh was a pilot. Charles Lindbergh was a man. Charles Lindbergh was a person. Charles Lindbergh was a human. Charles Lindbergh was a male. Charles Lindbergh was a man. Charles Lindbergh was a male. Charles Lindbergh was a human. Charles Lindbergh was a person. Charles Lindbergh"
    ]
  },
  {
    "id": "FOLIO_train_985",
    "context": "TS Leda was a good passenger and cargo vessel. TS Leda was the first Norweigian vessel that was built with stabilizers. Stabilizers are mechanical devices that are only on ships that have powerful steam turbine engines. To be a good passenger and cargo vessel, ships must be quiet and good at sea. Some ships that are quiet and good at sea have powerful steam turbine engines.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? TS Leda had powerful steam turbine engines.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGood(x) ::: x is a good passenger and cargo vessel.\nStabilizer(x) ::: x is a mechanical device that is only on ships that have powerful steam turbine engines.\nQuiet(x) ::: x is quiet.\nGoodAtSea(x) ::: x is good at sea.\nPowerfulSteamTurbineEngine(x) ::: x has powerful steam turbine engines.\nPremises:\nGood(leda) ∧ Stabilizer(leda) ::: TS Leda was a good passenger and cargo vessel. TS Leda was the first Norweigian vessel that was built with stabilizers.\n∀x (Stabilizer(x) → PowerfulSteamTurbineEngine(x)) ::: Stabilizers are mechanical devices that are only on ships that have powerful steam turbine engines.\nToBeGood(x) ::: To be a good passenger and cargo vessel, ships must be quiet and good at sea.\n∃x (Quiet(x) ∧ GoodAtSea(x) ∧ PowerfulSteamTurbineEngine(x)) ::: Some ships that are quiet and good at sea have powerful steam turbine engines.\nConclusion:\nPowerfulSteamTurbineEngine(leda) ::: TS Leda had powerful steam turbine engines.\n------\nProblem:\nThe first person to fly solo across the Atlantic Ocean was Charles Lindbergh. Charles Lindbergh was a pilot. Charles Lindbergh was a man. Charles Lindbergh was a person. Charles Lindbergh was a human. Charles Lindbergh was a male. Charles Lindbergh was a man. Charles Lindbergh was a male. Charles Lindbergh was a human. Charles Lindbergh was a person. Charles Lindbergh was a human. Charles Lindbergh was a male. Charles Lindbergh was a person. Charles Lindbergh was a human. Charles Lindbergh was a male. Charles Lindbergh was a person. Charles Lindbergh was a human. Charles Lindbergh was"
    ]
  },
  {
    "id": "FOLIO_train_986",
    "context": "TS Leda was a good passenger and cargo vessel. TS Leda was the first Norweigian vessel that was built with stabilizers. Stabilizers are mechanical devices that are only on ships that have powerful steam turbine engines. To be a good passenger and cargo vessel, ships must be quiet and good at sea. Some ships that are quiet and good at sea have powerful steam turbine engines.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? TS Leda was not a Norweigian vessel.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nNorweigian(x) ::: x is a Norweigian vessel.\nStabilizer(x) ::: x is a stabilizer.\nSteamTurbineEngine(x) ::: x is a steam turbine engine.\nQuiet(x) ::: x is quiet.\nGoodAtSea(x) ::: x is good at sea.\nPassengerAndCargoVessel(x) ::: x is a passenger and cargo vessel.\nPremises:\nNorweigian(leda) ∧ Stabilizer(leda) ∧ First(leda, norweigianVessel) ::: TS Leda was a good passenger and cargo vessel. TS Leda was the first Norweigian vessel that was built with stabilizers.\nStabilizer(x) → SteamTurbineEngine(x) ::: Stabilizers are mechanical devices that are only on ships that have powerful steam turbine engines.\nPassengerAndCargoVessel(x) → Quiet(x) ∧ GoodAtSea(x) ::: To be a good passenger and cargo vessel, ships must be quiet and good at sea.\n∃x (Quiet(x) ∧ GoodAtSea(x) ∧ SteamTurbineEngine(x)) ::: Some ships that are quiet and good at sea have powerful steam turbine engines.\nConclusion:\n¬Norweigian(leda) ::: TS Leda was not a Norweigian vessel.\n------\nProblem:\nThe first person to fly solo across the Atlantic Ocean was Charles Lindbergh. Charles Lindbergh was a pilot. Charles Lindbergh was a man. Charles Lindbergh was a person. Charles Lindbergh was a human. Charles Lindbergh was a male. Charles Lindbergh was a man. Charles Lindbergh was a male. Charles Lindbergh was a human. Charles Lindbergh was a person. Charles Lindbergh was a human. Charles Lindbergh was a male. Charles Lindbergh was a person. Charles Lind"
    ]
  },
  {
    "id": "FOLIO_train_987",
    "context": "Rosa was born in Santiago. Santiago is the capital and largest city of Chile. Rosa is the daughter of a Catalan building contractor, Jose. Jose has a Chilean wife, Carmen. A building contractor is responsible for the day-to-day oversight of a construction site.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Rosa was born in the largest city of Chile.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBorn(x, y) ::: x was born in y.\nCapital(x, y) ::: x is the capital of y.\nLargest(x, y) ::: x is the largest city of y.\nDaughter(x, y) ::: x is the daughter of y.\nCatalan(x) ::: x is a Catalan.\nChilean(x) ::: x is a Chilean.\nWife(x, y) ::: x is the wife of y.\nBuildingContractor(x) ::: x is a building contractor.\nResponsible(x, y) ::: x is responsible for y.\nOversight(x, y) ::: x is the oversight of y.\nConstructionSite(x) ::: x is a construction site.\nPremises:\nBorn(rosa, santiago) ::: Rosa was born in Santiago.\nCapital(santiago, chile) ∧ Largest(santiago, chile) ::: Santiago is the capital and largest city of Chile.\nDaughter(rosa, jose) ::: Rosa is the daughter of a Catalan building contractor, Jose.\nCatalan(jose) ::: Jose is a Catalan.\nChilean(carmen) ::: Jose has a Chilean wife, Carmen.\nBuildingContractor(jose) ::: A building contractor is responsible for the day-to-day oversight of a construction site.\nConclusion:\nBorn(rosa, largest(chile)) ::: Rosa was born in the largest city of Chile.\n------\nProblem:\nThe first known use of the word \"computer\" was in 1613. The word was used to describe a person who performed calculations. The word continued with the same meaning until the middle of the 20th century. From the end of the 19th century the word began to take on its more familiar meaning, a machine that carries"
    ]
  },
  {
    "id": "FOLIO_train_988",
    "context": "Rosa was born in Santiago. Santiago is the capital and largest city of Chile. Rosa is the daughter of a Catalan building contractor, Jose. Jose has a Chilean wife, Carmen. A building contractor is responsible for the day-to-day oversight of a construction site.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Neither of Rosa's parents is Chilean.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBorn(x, y) ::: x was born in y.\nCapital(x, y) ::: x is the capital of y.\nLargest(x, y) ::: x is the largest city of y.\nDaughter(x, y) ::: x is the daughter of y.\nCatalan(x) ::: x is Catalan.\nChilean(x) ::: x is Chilean.\nWife(x, y) ::: x is the wife of y.\nBuildingContractor(x) ::: x is a building contractor.\nResponsible(x, y) ::: x is responsible for y.\nOversight(x, y) ::: x is the day-to-day oversight of y.\nConstructionSite(x) ::: x is a construction site.\nPremises:\nBorn(rosa, santiago) ∧ Capital(santiago, chile) ∧ Largest(santiago, chile) ::: Rosa was born in Santiago. Santiago is the capital and largest city of Chile.\nDaughter(rosa, jose) ∧ Catalan(jose) ∧ Wife(jose, carmen) ∧ Chilean(carmen) ::: Rosa is the daughter of a Catalan building contractor, Jose. Jose has a Chilean wife, Carmen.\nBuildingContractor(jose) ∧ Responsible(jose, oversight) ∧ Oversight(oversight, constructionSite) ::: A building contractor is responsible for the day-to-day oversight of a construction site.\nConclusion:\n¬Chilean(jose) ∧ ¬Chilean(carmen) ::: Neither of Rosa's parents is Chilean.\n------\nProblem:\nThe first person to be called a mathematician was the Greek philosopher Pythagoras. Pythagoras was born in Samos. Samos is a"
    ]
  },
  {
    "id": "FOLIO_train_989",
    "context": "Rosa was born in Santiago. Santiago is the capital and largest city of Chile. Rosa is the daughter of a Catalan building contractor, Jose. Jose has a Chilean wife, Carmen. A building contractor is responsible for the day-to-day oversight of a construction site.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Rosa is the daughter of someone who is responsible for the oversight of traffic.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBorn(x, y) ::: x was born in y.\nCapital(x, y) ::: x is the capital of y.\nLargest(x, y) ::: x is the largest city of y.\nDaughter(x, y) ::: x is the daughter of y.\nCatalan(x) ::: x is a Catalan.\nChilean(x) ::: x is a Chilean.\nWife(x, y) ::: x is the wife of y.\nBuildingContractor(x) ::: x is a building contractor.\nResponsible(x, y) ::: x is responsible for y.\nOversight(x, y) ::: x is responsible for the oversight of y.\nTraffic(x) ::: x is traffic.\nPremises:\nBorn(rosa, santiago) ∧ Capital(santiago, chile) ∧ Largest(santiago, chile) ::: Rosa was born in Santiago. Santiago is the capital and largest city of Chile.\nDaughter(rosa, jose) ∧ Catalan(jose) ∧ Chilean(carmen) ∧ Wife(carmen, jose) ::: Rosa is the daughter of a Catalan building contractor, Jose. Jose has a Chilean wife, Carmen.\nBuildingContractor(jose) ∧ Responsible(jose, oversight) ::: A building contractor is responsible for the day-to-day oversight of a construction site.\nConclusion:\nResponsible(jose, oversight) ∧ Oversight(jose, traffic) ::: Rosa is the daughter of someone who is responsible for the oversight of traffic.\n------\nProblem:\nThe first person to be called a mathematician was Thales of Miletus. Thales is known for his work in geometry, astronomy and philosophy. Thales was a businessman, trader,"
    ]
  },
  {
    "id": "FOLIO_train_990",
    "context": "Tyga is a rapper. Rappers release rap albums. Tyga released the Well Done 3 album. Rappers are not opera singers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Well Done 3 is a rap album.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRapper(x) ::: x is a rapper.\nRelease(x, y) ::: x releases y.\nAlbum(x) ::: x is an album.\nRapAlbum(x) ::: x is a rap album.\nOperaSinger(x) ::: x is an opera singer.\nPremises:\nRapper(tyga) ::: Tyga is a rapper.\n∀x (Rapper(x) → Release(x, y) ∧ Album(y)) ::: Rappers release rap albums.\nRelease(tyga, wellDone3) ::: Tyga released the Well Done 3 album.\n∀x (Rapper(x) → ¬OperaSinger(x)) ::: Rappers are not opera singers.\nConclusion:\nRapAlbum(wellDone3) ::: Well Done 3 is a rap album.\n------"
    ]
  },
  {
    "id": "FOLIO_train_991",
    "context": "Tyga is a rapper. Rappers release rap albums. Tyga released the Well Done 3 album. Rappers are not opera singers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tyga is an opera singer.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRapper(x) ::: x is a rapper.\nRelease(x, y) ::: x releases y.\nAlbum(x) ::: x is an album.\nWellDone3(x) ::: x is the Well Done 3 album.\nOperaSinger(x) ::: x is an opera singer.\nPremises:\nRapper(tyga) ::: Tyga is a rapper.\n∀x (Rapper(x) → Release(x, y)) ::: Rappers release rap albums.\nRelease(tyga, wellDone3) ::: Tyga released the Well Done 3 album.\n∀x (Rapper(x) → ¬OperaSinger(x)) ::: Rappers are not opera singers.\nConclusion:\n¬OperaSinger(tyga) ::: Tyga is an opera singer.\n------\nProblem:\nThe first"
    ]
  },
  {
    "id": "FOLIO_train_992",
    "context": "Tyga is a rapper. Rappers release rap albums. Tyga released the Well Done 3 album. Rappers are not opera singers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Well Done 3 is worth listening.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRapper(x) ::: x is a rapper.\nRelease(x, y) ::: x releases y.\nAlbum(x) ::: x is an album.\nOperaSinger(x) ::: x is an opera singer.\nPremises:\nRapper(tyga) ::: Tyga is a rapper.\n∀x (Rapper(x) → Release(x, album)) ::: Rappers release rap albums.\nRelease(tyga, wellDone3) ::: Tyga released the Well Done 3 album.\n∀x (Rapper(x) → ¬OperaSinger(x)) ::: Rappers are not opera singers.\nConclusion:\n¬OperaSinger(tyga) ::: Tyga is not an opera singer.\n------\nProblem:\nThe first person to walk on the moon was Neil Armstrong. Neil Armstrong was an astr"
    ]
  },
  {
    "id": "FOLIO_train_993",
    "context": "Deborah Wallace is a Scottish born actress, playwright and producer. Psyche is a play based on the life of James Miranda Barry. Homesick, Psyche and The Void are plays from Deborah Wallace. Deborah Wallace co-produced Gasland.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Gasland was coproduced by the same person Homesick is from.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nScottish(x) ::: x is a Scottish person.\nActress(x) ::: x is an actress.\nPlaywright(x) ::: x is a playwright.\nProducer(x) ::: x is a producer.\nPlay(x) ::: x is a play.\nBasedOn(x, y) ::: x is based on y.\nFrom(x, y) ::: x is from y.\nCoProduce(x, y) ::: x coproduced y.\nPremises:\nScottish(deborah) ∧ Actress(deborah) ∧ Playwright(deborah) ∧ Producer(deborah) ::: Deborah Wallace is a Scottish born actress, playwright and producer.\nBasedOn(psyche, lifeOfJamesMirandaBarry) ::: Psyche is a"
    ]
  },
  {
    "id": "FOLIO_train_994",
    "context": "Deborah Wallace is a Scottish born actress, playwright and producer. Psyche is a play based on the life of James Miranda Barry. Homesick, Psyche and The Void are plays from Deborah Wallace. Deborah Wallace co-produced Gasland.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There isn't a play from Deborah Wallace that is based on the life of James Miranda Barry.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nScottish(x) ::: x is a Scottish person.\nActress(x) ::: x is an actress.\nPlaywright(x) ::: x is a playwright.\nProducer(x) ::: x is a producer.\nPlay(x) ::: x is a play.\nBasedOn(x, y) ::: x is based on y.\nCoProduce(x, y) ::: x co-produced y.\nPremises:\nScottish(deborah) ∧ Actress(deborah) ∧ Playwright(deborah) ∧ Producer(deborah) ::: Deborah Wallace is a Scottish born actress, playwright and producer.\nPlay(psyche) ∧ BasedOn(psyche, lifeOfJamesMirandaBarry) ::: Psyche is a play based on the life of"
    ]
  },
  {
    "id": "FOLIO_train_995",
    "context": "Deborah Wallace is a Scottish born actress, playwright and producer. Psyche is a play based on the life of James Miranda Barry. Homesick, Psyche and The Void are plays from Deborah Wallace. Deborah Wallace co-produced Gasland.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Gasland is a play.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nScottish(x) ::: x is a Scottish person.\nActress(x) ::: x is an actress.\nPlaywright(x) ::: x is a playwright.\nProducer(x) ::: x is a producer.\nPlay(x) ::: x is a play.\nBasedOn(x, y) ::: x is based on y.\nCoProduce(x, y) ::: x co-produced y.\nPremises:\nScottish(deborah) ∧ Actress(deborah) ∧ Playwright(deborah) ∧ Producer(deborah) ::: Deborah Wallace is a Scottish born actress, playwright and producer.\nBasedOn(psyche, lifeOfJamesMirandaBarry) ::: Psyche is a play based on the life of James Miranda Barry.\nPlay"
    ]
  },
  {
    "id": "FOLIO_train_996",
    "context": "If an animal needs a large territory, then it travels far. Everything that eats a lot needs a large territory. If something is a big animal, then it will eat a lot. All bears are big animals. Larry is a big animal.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Larry is a bear.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBear(x) ::: x is a bear.\nBig(x) ::: x is a big animal.\nEat(x) ::: x eats a lot.\nTerritory(x) ::: x needs a large territory.\nTravel(x) ::: x travels far.\nPremises:\n∀x (Territory(x) → Travel(x)) ::: If an animal needs a large territory, then it travels far.\n∀x (Eat(x) → Territory(x)) ::: Everything that eats a lot needs a large territory.\n∀x (Big(x) → Eat(x)) ::: If something is a big animal, then it will eat a lot.\n∀x (Bear(x) → Big(x)) ::: All bears are big animals.\nBig(larry) ::: Larry is a big animal."
    ]
  },
  {
    "id": "FOLIO_train_997",
    "context": "If an animal needs a large territory, then it travels far. Everything that eats a lot needs a large territory. If something is a big animal, then it will eat a lot. All bears are big animals. Larry is a big animal.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Larry is neither a bear nor travels far.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBear(x) ::: x is a bear.\nBig(x) ::: x is a big animal.\nEat(x) ::: x eats a lot.\nTerritory(x) ::: x needs a large territory.\nTravel(x) ::: x travels far.\nPremises:\n∀x (Territory(x) → Travel(x)) ::: If an animal needs a large territory, then it travels far.\n∀x (Eat(x) → Territory(x)) ::: Everything that eats a lot needs a large territory.\n∀x (Big(x) → Eat(x)) ::: If something is a big animal, then it will eat a lot.\n∀x (Bear(x) → Big(x)) ::: All bears are big animals.\nBig(larry) ::: Larry is a big animal."
    ]
  },
  {
    "id": "FOLIO_train_998",
    "context": "If an animal needs a large territory, then it travels far. Everything that eats a lot needs a large territory. If something is a big animal, then it will eat a lot. All bears are big animals. Larry is a big animal.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Larry either travels far or needs a large territory, then Larry is a bear.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBear(x) ::: x is a bear.\nBig(x) ::: x is a big animal.\nEat(x) ::: x eats a lot.\nTerritory(x) ::: x needs a large territory.\nTravel(x) ::: x travels far.\nPremises:\n∀x (Territory(x) → Travel(x)) ::: If an animal needs a large territory, then it travels far.\n∀x (Eat(x) → Territory(x)) ::: Everything that eats a lot needs a large territory.\n∀x (Big(x) → Eat(x)) ::: If something is a big animal, then it will eat a lot.\n∀x (Bear(x) → Big(x)) ::: All bears are big animals.\nBig(larry) ::: Larry is a big animal."
    ]
  },
  {
    "id": "FOLIO_train_999",
    "context": "No criminal is kind. All person who breaks the law is a criminals. People are either kind or evil. If someone is evil, then they are ugly. If someone is evil, then they are cold-blood. If Garry is either evil and ugly or neither evil nor ugly, then Garry is not evil.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Garry is ugly.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCriminal(x) ::: x is a criminal.\nKind(x) ::: x is kind.\nBreak(x) ::: x breaks the law.\nEvil(x) ::: x is evil.\nUgly(x) ::: x is ugly.\nColdBlood(x) ::: x is cold-blood.\nPremises:\n¬(Criminal(x) ∧ Kind(x)) ::: No criminal is kind.\n∀x (Break(x) → Criminal(x)) ::: All person who breaks the law is a criminals.\n∀x (Kind(x) ⊕ Evil(x)) ::: People are either kind or evil.\nEvil(x) → Ugly(x) ::: If someone is evil, then they are ugly.\nEvil(x) → ColdBlood(x) ::: If someone is evil, then"
    ]
  },
  {
    "id": "FOLIO_train_1000",
    "context": "No criminal is kind. All person who breaks the law is a criminals. People are either kind or evil. If someone is evil, then they are ugly. If someone is evil, then they are cold-blood. If Garry is either evil and ugly or neither evil nor ugly, then Garry is not evil.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Garry is cold-blooded and breaks the law.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCriminal(x) ::: x is a criminal.\nKind(x) ::: x is kind.\nEvil(x) ::: x is evil.\nUgly(x) ::: x is ugly.\nColdBlood(x) ::: x is cold-blood.\nBreak(x) ::: x breaks the law.\nPremises:\n¬(Criminal(x) ∧ Kind(x)) ::: No criminal is kind.\n∀x (Break(x) → Criminal(x)) ::: All person who breaks the law is a criminals.\n∀x (Kind(x) ⊕ Evil(x)) ::: People are either kind or evil.\nEvil(x) → Ugly(x) ::: If someone is evil, then they are ugly.\nEvil(x) → ColdBlood(x) ::: If someone is evil, then they are cold-blood.\n¬(Evil(garry) ∧ Ugly(garry)) → ¬(Evil(garry) ∨ Ugly(garry)) ::: If Garry is either evil and ugly or neither evil nor ugly, then Garry is not evil.\nConclusion:\nColdBlood(garry) ∧ Break(garry) ::: Garry is cold-blooded and breaks the law.\n------"
    ]
  },
  {
    "id": "FOLIO_train_1001",
    "context": "No criminal is kind. All person who breaks the law is a criminals. People are either kind or evil. If someone is evil, then they are ugly. If someone is evil, then they are cold-blood. If Garry is either evil and ugly or neither evil nor ugly, then Garry is not evil.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Garry is evil or breaks the law, then Garry is not both a criminal and breaking the law.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCriminal(x) ::: x is a criminal.\nBreak(x) ::: x breaks the law.\nKind(x) ::: x is kind.\nEvil(x) ::: x is evil.\nUgly(x) ::: x is ugly.\nColdBlood(x) ::: x is cold-blood.\nPremises:\n¬(Criminal(x) ∧ Kind(x)) ::: No criminal is kind.\n∀x (Break(x) → Criminal(x)) ::: All person who breaks the law is a criminals.\n∀x (Kind(x) ∨ Evil(x)) ::: People are either kind or evil.\nEvil(x) → Ugly(x) ::: If someone is evil, then they are ugly.\nEvil(x) → ColdBlood(x) ::: If someone is evil, then they are cold-blood.\n(Evil(garry) ∧ Ugly(garry)) ⊕ ¬(Evil(garry) ∨ Ugly(garry)) ::: If Garry is either evil and ugly or neither evil nor ugly, then Garry is not evil.\nConclusion:\n¬(Criminal(garry) ∧ Break(garry)) ::: If Garry is evil or breaks the law, then Garry is not"
    ]
  },
  {
    "id": "FOLIO_train_1002",
    "context": "Phoneix's music is classified under the indie pop genre. Phoenix is a band from France. French bands write songs in French or in English. Aside from indie pop, pop rock and synth-pop are two other genres of music. Phoneix has no songs in French.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Phoenix makes pop rock music.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nIndiePop(x) ::: x is classified under the indie pop genre.\nPopRock(x) ::: x is classified under the pop rock genre.\nSynthPop(x) ::: x is classified under the synth-pop genre.\nFrench(x) ::: x is a band from France.\nWrite(x, y) ::: x writes songs in y.\nPremises:\nIndiePop(phoenix) ::: Phoneix's music is classified under the indie pop genre.\nFrench(phoenix) ::: Phoenix is a band from France.\n∀x (French(x) → (Write(x, french) ∨ Write(x, english))) ::: French bands write songs in French or in English.\n¬Write(phoenix, french) ::: Phoneix has no songs in French.\nConclusion:\nPopRock(phoenix) ::: Phoenix makes pop rock music.\n------\nProblem:\nThe first person to reach the summit of Mount Everest was Edmund Hillary. Edmund Hillary was a New Zealander. Edmund Hillary was a mountaineer. Edmund Hillary was a philanthropist. Edmund Hillary was a beekeeper. Edmund Hillary was a writer. Edmund Hillary was a photographer. Edmund Hillary was a navigator. Edmund Hillary"
    ]
  },
  {
    "id": "FOLIO_train_1003",
    "context": "Phoneix's music is classified under the indie pop genre. Phoenix is a band from France. French bands write songs in French or in English. Aside from indie pop, pop rock and synth-pop are two other genres of music. Phoneix has no songs in French.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Phoenix has songs in French.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBand(x) ::: x is a band.\nFrench(x) ::: x is a French band.\nIndiePop(x) ::: x is classified under the indie pop genre.\nPopRock(x) ::: x is classified under the pop rock genre.\nSynthPop(x) ::: x is classified under the synth-pop genre.\nSong(x) ::: x is a song.\nFrench(x) ::: x is a song in French.\nEnglish(x) ::: x is a song in English.\nPremises:\nIndiePop(phoneix) ::: Phoneix's music is classified under the indie pop genre.\nFrench(phoneix) ::: Phoenix is a band from France.\n∀x (French(x) → (English(x) ∨ French(x))) ::: French bands write songs in French or in English.\n¬∃x (Song(x) ∧ French(x) ∧ Band(x) ∧ Phoneix(x)) ::: Phoneix has no songs in French.\nConclusion:\n¬French(phoneix) ::: Phoenix has songs in French.\n------\nProblem:\nThe first person to reach the summit of Mount Everest was Edmund Hillary. Edmund Hillary was a New Zealander. Edmund Hillary was a mount"
    ]
  }
]