[
  {
    "id": "ProntoQA_1",
    "context": "Jompuses are not shy. Jompuses are yumpuses. Each yumpus is aggressive. Each yumpus is a dumpus. Dumpuses are not wooden. Dumpuses are wumpuses. Wumpuses are red. Every wumpus is an impus. Each impus is opaque. Impuses are tumpuses. Numpuses are sour. Tumpuses are not sour. Tumpuses are vumpuses. Vumpuses are earthy. Every vumpus is a zumpus. Zumpuses are small. Zumpuses are rompuses. Max is a yumpus.",
    "question": "Is the following statement true or false? Max is sour.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nJompus(x) ::: x is a jompus\nShy(x) ::: x is shy\nYumpus(x) ::: x is a yumpus\nAggressive(x) ::: x is aggressive\nDumpus(x) ::: x is a dumpus\nWooden(x) ::: x is wooden\nWumpus(x) ::: x is a wumpus\nRed(x) ::: x is red\nImpus(x) ::: x is an impus\nOpaque(x) ::: x is opaque\nTumpus(x) ::: x is a tumpus\nSour(x) ::: x is sour\nVumpus(x) ::: x is a vumpus\nEarthy(x) ::: x is earthy\nZumpus(x) ::: x is a zumpus\nSmall(x) ::: x is small\nRompus(x) ::: x is a rompus\nPremises:\n∀x (Jompus(x) → ¬Shy(x)) ::: Jompuses are not shy.\n∀x (Jompus(x) → Yumpus(x)) ::: Jompuses are yumpuses.\n∀x (Yumpus(x) → Aggressive(x)) ::: Each yumpus is aggressive.\n∀x (Yumpus(x) → Dumpus(x)) ::: Each yumpus is a dumpus.\n∀x (Dumpus(x) → ¬Wooden(x)) ::: Dumpuses are not wooden.\n∀x (Dumpus(x) → Wumpus(x)) ::: Dumpuses are wumpuses.\n∀x (Wumpus(x) → Red(x)) ::: Wumpuses are red.\n∀x (Wumpus(x) → Impus(x)) ::: Every wumpus is an impus.\n∀x (Impus(x) → Opaque(x)) ::: Impuses are opaque.\n∀x (Impus(x) → Tumpus(x)) ::: Impuses are tumpuses.\n∀x (Numpus(x) → Sour(x)) ::: Numpuses are sour.\n∀x (Tumpus(x) → ¬Sour(x)) ::: Tumpuses are not sour.\n∀x (Tumpus(x) → Vumpus(x)) ::: Tumpuses are vumpuses.\n∀x (Vumpus(x) → Earthy(x)) ::: Vumpuses are earthy.\n∀x (Vumpus(x) → Zumpus(x)) ::: Every vumpus is a zumpus.\n∀x (Zumpus(x) → Small(x)) ::: Zumpuses are small.\n∀x (Zumpus(x) → Rompus(x)) ::: Zumpuses are rompuses.\nYumpus(max) ::: Max is a yumpus.\nConclusion:\nSour(max) ::: Max is sour.\n------"
    ]
  },
  {
    "id": "ProntoQA_2",
    "context": "Every tumpus is not angry. Tumpuses are rompuses. Every numpus is not bright. Rompuses are not luminous. Rompuses are yumpuses. Yumpuses are transparent. Yumpuses are zumpuses. Each zumpus is not bitter. Zumpuses are impuses. Impuses are red. Each impus is a dumpus. Every dumpus is happy. Each dumpus is a vumpus. Vumpuses are bright. Every vumpus is a jompus. Jompuses are large. Each jompus is a wumpus. Stella is a yumpus.",
    "question": "Is the following statement true or false? Stella is bright.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nTumpus(x) ::: x is a tumpus\nAngry(x) ::: x is angry\nRompus(x) ::: x is a rompus\nNumpus(x) ::: x is a numpus\nBright(x) ::: x is bright\nLuminous(x) ::: x is luminous\nYumpus(x) ::: x is a yumpus\nZumpus(x) ::: x is a zumpus\nBitter(x) ::: x is bitter\nImpus(x) ::: x is an impus\nRed(x) ::: x is red\nDumpus(x) ::: x is a dumpus\nHappy(x) ::: x is happy\nVumpus(x) ::: x is a vumpus\nJompus(x) ::: x is a jompus\nLarge(x) ::: x is large\nWumpus(x) ::: x is a wumpus\nPremises:\n∀x (Tumpus(x) → ¬Angry(x)) ::: Every tumpus is not angry.\n∀x (Tumpus(x) → Rompus(x)) ::: Tumpuses are rompuses.\n∀x (Numpus(x) → ¬Bright(x)) ::: Every numpus is not bright.\n∀x (Rompus(x) → ¬Luminous(x)) ::: Rompuses are not luminous.\n∀x (Rompus(x) → Yumpus(x)) ::: Rompuses are yumpuses.\n∀x (Yumpus(x) → Transparent(x)) ::: Yumpuses are transparent.\n∀x (Yumpus(x) → Zumpus(x)) ::: Yumpuses are zumpuses.\n∀x (Zumpus(x) → ¬Bitter(x)) ::: Each zumpus is not bitter.\n∀x (Zumpus(x) → Impus(x)) ::: Zumpuses are impuses.\n∀x (Impus(x) → Red(x)) ::: Impuses are red.\n∀x (Impus(x) → Dumpus(x)) ::: Each impus is a dumpus.\n∀x (Dumpus(x) → Happy(x)) ::: Every dumpus is happy.\n∀x (Dumpus(x) → Vumpus(x)) ::: Each dumpus is a vumpus.\n∀x (Vumpus(x) → Bright(x)) ::: Vumpuses are bright.\n∀x (Vumpus(x) → Jompus(x)) ::: Every vumpus is a jompus.\n∀x (Jompus(x) → Large(x)) ::: Jompuses are large.\n∀x (Jompus(x) → Wumpus(x)) ::: Each jompus is a wumpus.\nYumpus(stella) ::: Stella is a yumpus.\nConclusion:\nBright(stella) ::: Stella is bright.\n------"
    ]
  },
  {
    "id": "ProntoQA_3",
    "context": "Vumpuses are floral. Vumpuses are tumpuses. Tumpuses are brown. Each tumpus is a wumpus. Wumpuses are small. Each wumpus is a rompus. Each zumpus is metallic. Every rompus is happy. Rompuses are impuses. Each impus is amenable. Each impus is a dumpus. Every dumpus is not metallic. Dumpuses are numpuses. Each numpus is bitter. Each numpus is a jompus. Every jompus is cold. Each jompus is a yumpus. Wren is a tumpus.",
    "question": "Is the following statement true or false? Wren is not metallic.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nVumpus(x) ::: x is a vumpus\nFloral(x) ::: x is floral\nTumpus(x) ::: x is a tumpus\nBrown(x) ::: x is brown\nWumpus(x) ::: x is a wumpus\nSmall(x) ::: x is small\nRompus(x) ::: x is a rompus\nHappy(x) ::: x is happy\nImpus(x) ::: x is an impus\nAmenable(x) ::: x is amenable\nDumpus(x) ::: x is a dumpus\nMetallic(x) ::: x is metallic\nNumpus(x) ::: x is a numpus\nBitter(x) ::: x is bitter\nJompus(x) ::: x is a jompus\nCold(x) ::: x is cold\nYumpus(x) ::: x is a yumpus\nPremises:\n∀x (Vumpus(x) → Floral(x)) ::: Vumpuses are floral.\n∀x (Vumpus(x) → Tumpus(x)) ::: Vumpuses are tumpuses.\n∀x (Tumpus(x) → Brown(x)) ::: Tumpuses are brown.\n∀x (Tumpus(x) → Wumpus(x)) ::: Each tumpus is a wumpus.\n∀x (Wumpus(x) → Small(x)) ::: Wumpuses are small.\n∀x (Wumpus(x) → Rompus(x)) ::: Each wumpus is a rompus.\n∀x (Zumpus(x) → Metallic(x)) ::: Every zumpus is metallic.\n∀x (Rompus(x) → Happy(x)) ::: Rompuses are happy.\n∀x (Rompus(x) → Impus(x)) ::: Rompuses are impuses.\n∀x (Impus(x) → Amenable(x)) ::: Each impus is amenable.\n∀x (Impus(x) → Dumpus(x)) ::: Each impus is a dumpus.\n∀x (Dumpus(x) → ¬Metallic(x)) ::: Every dumpus is not metallic.\n∀x (Dumpus(x) → Numpus(x)) ::: Dumpuses are numpuses.\n∀x (Numpus(x) → Bitter(x)) ::: Each numpus is bitter.\n∀x (Numpus(x) → Jompus(x)) ::: Each numpus is a jompus.\n∀x (Jompus(x) → Cold(x)) ::: Every jompus is cold.\n∀x (Jompus(x) → Yumpus(x)) ::: Each jompus is a yumpus.\nTumpus(wren) ::: Wren is a tumpus.\nConclusion:\n¬Metallic(wren) ::: Wren is not metallic.\n------"
    ]
  },
  {
    "id": "ProntoQA_4",
    "context": "Rompuses are spicy. Every rompus is an impus. Yumpuses are not small. Impuses are orange. Impuses are zumpuses. Zumpuses are not hot. Zumpuses are numpuses. Numpuses are metallic. Numpuses are wumpuses. Every wumpus is not kind. Each wumpus is a dumpus. Each dumpus is not bright. Every dumpus is a jompus. Jompuses are small. Jompuses are vumpuses. Each vumpus is not shy. Every vumpus is a tumpus. Alex is a zumpus.",
    "question": "Is the following statement true or false? Alex is not small.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nRompus(x) ::: x is a rompus\nSpicy(x) ::: x is spicy\nImpus(x) ::: x is an impus\nYumpus(x) ::: x is a yumpus\nSmall(x) ::: x is small\nOrange(x) ::: x is orange\nZumpus(x) ::: x is a zumpus\nHot(x) ::: x is hot\nNumpus(x) ::: x is a numpus\nMetallic(x) ::: x is metallic\nWumpus(x) ::: x is a wumpus\nKind(x) ::: x is kind\nDumpus(x) ::: x is a dumpus\nBright(x) ::: x is bright\nJompus(x) ::: x is a jompus\nSmall(x) ::: x is small\nVumpus(x) ::: x is a vumpus\nShy(x) ::: x is shy\nTumpus(x) ::: x is a tumpus\nPremises:\n∀x (Rompus(x) → Spicy(x)) ::: Rompuses are spicy.\n∀x (Rompus(x) → Impus(x)) ::: Every rompus is an impus.\n∀x (Yumpus(x) → ¬Small(x)) ::: Yumpuses are not small.\n∀x (Impus(x) → Orange(x)) ::: Impuses are orange.\n∀x (Impus(x) → Zumpus(x)) ::: Impuses are zumpuses.\n∀x (Zumpus(x) → ¬Hot(x)) ::: Zumpuses are not hot.\n∀x (Zumpus(x) → Numpus(x)) ::: Zumpuses are numpuses.\n∀x (Numpus(x) → Metallic(x)) ::: Numpuses are metallic.\n∀x (Numpus(x) → Wumpus(x)) ::: Numpuses are wumpuses.\n∀x (Wumpus(x) → ¬Kind(x)) ::: Every wumpus is not kind.\n∀x (Wumpus(x) → Dumpus(x)) ::: Each wumpus is a dumpus.\n∀x (Dumpus(x) → ¬Bright(x)) ::: Each dumpus is not bright.\n∀x (Dumpus(x) → Jompus(x)) ::: Every dumpus is a jompus.\n∀x (Jompus(x) → Small(x)) ::: Jompuses are small.\n∀x (Jompus(x) → Vumpus(x)) ::: Jompuses are vumpuses.\n∀x (Vumpus(x) → ¬Shy(x)) ::: Each vumpus is not shy.\n∀x (Vumpus(x) → Tumpus(x)) ::: Every vumpus is a tumpus.\nZumpus(alex) ::: Alex is a zumpus.\nConclusion:\n¬Small(alex) ::: Alex is not small.\n------"
    ]
  },
  {
    "id": "ProntoQA_5",
    "context": "Rompuses are mean. Rompuses are zumpuses. Each zumpus is not happy. Each zumpus is a numpus. Each numpus is not temperate. Each numpus is a tumpus. Tumpuses are not large. Tumpuses are yumpuses. Every yumpus is earthy. Each yumpus is a jompus. Jompuses are blue. Every jompus is a wumpus. Wumpuses are not dull. Wumpuses are impuses. Each vumpus is dull. Impuses are sour. Impuses are dumpuses. Alex is a numpus.",
    "question": "Is the following statement true or false? Alex is not dull.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nRompus(x) ::: x is a rompus\nMean(x) ::: x is mean\nZumpus(x) ::: x is a zumpus\nHappy(x) ::: x is happy\nNumpus(x) ::: x is a numpus\nTemperate(x) ::: x is temperate\nTumpus(x) ::: x is a tumpus\nLarge(x) ::: x is large\nYumpus(x) ::: x is a yumpus\nEarthy(x) ::: x is earthy\nJompus(x) ::: x is a jompus\nBlue(x) ::: x is blue\nWumpus(x) ::: x is a wumpus\nDull(x) ::: x is dull\nImpus(x) ::: x is an impus\nSour(x) ::: x is sour\nDumpus(x) ::: x is a dumpus\nPremises:\n∀x (Rompus(x) → Mean(x)) ::: Rompuses are mean.\n∀x (Zumpus(x) → Rompus(x)) ::: Rompuses are zumpuses.\n∀x (Zumpus(x) → ¬Happy(x)) ::: Each zumpus is not happy.\n∀x (Numpus(x) → ¬Temperate(x)) ::: Each numpus is not temperate.\n∀x (Numpus(x) → Tumpus(x)) ::: Each numpus is a tumpus.\n∀x (Tumpus(x) → ¬Large(x)) ::: Tumpuses are not large.\n∀x (Tumpus(x) → Yumpus(x)) ::: Tumpuses are yumpuses.\n∀x (Yumpus(x) → Earthy(x)) ::: Every yumpus is earthy.\n∀x (Yumpus(x) → Jompus(x)) ::: Each yumpus is a jompus.\n∀x (Jompus(x) → Blue(x)) ::: Jompuses are blue.\n∀x (Jompus(x) → Wumpus(x)) ::: Every jompus is a wumpus.\n∀x (Wumpus(x) → ¬Dull(x)) ::: Wumpuses are not dull.\n∀x (Wumpus(x) → Impus(x)) ::: Wumpuses are impuses.\n∀x (Vumpus(x) → Dull(x)) ::: Each vumpus is dull.\n∀x (Impus(x) → Sour(x)) ::: Impuses are sour.\n∀x (Impus(x) → Dumpus(x)) ::: Impuses are dumpuses.\nNumpus(alex) ::: Alex is a numpus.\nConclusion:\n¬Dull(alex) ::: Alex is not dull.\n------"
    ]
  },
  {
    "id": "ProntoQA_6",
    "context": "Every tumpus is large. Tumpuses are wumpuses. Each wumpus is not opaque. Every dumpus is not dull. Every wumpus is a rompus. Every rompus is brown. Each rompus is a vumpus. Each vumpus is temperate. Vumpuses are jompuses. Jompuses are dull. Jompuses are numpuses. Every numpus is liquid. Each numpus is an impus. Impuses are spicy. Every impus is a yumpus. Every yumpus is not nervous. Every yumpus is a zumpus. Wren is a tumpus.",
    "question": "Is the following statement true or false? Wren is dull.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nTumpus(x) ::: x is a tumpus\nLarge(x) ::: x is large\nWumpus(x) ::: x is a wumpus\nOpaque(x) ::: x is opaque\nDull(x) ::: x is dull\nRompus(x) ::: x is a rompus\nBrown(x) ::: x is brown\nVumpus(x) ::: x is a vumpus\nTemperate(x) ::: x is temperate\nJompus(x) ::: x is a jompus\nDull(x) ::: x is dull\nNumpus(x) ::: x is a numpus\nLiquid(x) ::: x is liquid\nImpus(x) ::: x is an impus\nSpicy(x) ::: x is spicy\nYumpus(x) ::: x is a yumpus\nNervous(x) ::: x is nervous\nZumpus(x) ::: x is a zumpus\nPremises:\n∀x (Tumpus(x) → Large(x)) ::: Every tumpus is large.\n∀x (Tumpus(x) → Wumpus(x)) ::: Tumpuses are wumpuses.\n∀x (Wumpus(x) → ¬Opaque(x)) ::: Each wumpus is not opaque.\n∀x (Dumpus(x) → ¬Dull(x)) ::: Every dumpus is not dull.\n∀x (Wumpus(x) → Rompus(x)) ::: Every wumpus is a rompus.\n∀x (Rompus(x) → Brown(x)) ::: Every rompus is brown.\n∀x (Rompus(x) → Vumpus(x)) ::: Each rompus is a vumpus.\n∀x (Vumpus(x) → Temperate(x)) ::: Vumpuses are temperate.\n∀x (Vumpus(x) → Jompus(x)) ::: Vumpuses are jompuses.\n∀x (Jompus(x) → Dull(x)) ::: Jompuses are dull.\n∀x (Jompus(x) → Numpus(x)) ::: Jompuses are numpuses.\n∀x (Numpus(x) → Liquid(x)) ::: Every numpus is liquid.\n∀x (Numpus(x) → Impus(x)) ::: Each numpus is an impus.\n∀x (Impus(x) → Spicy(x)) ::: Impuses are spicy.\n∀x (Impus(x) → Yumpus(x)) ::: Every impus is a yumpus.\n∀x (Yumpus(x) → ¬Nervous(x)) ::: Every yumpus is not nervous.\n∀x (Yumpus(x) → Zumpus(x)) ::: Every yumpus is a zumpus.\nTumpus(wren) ::: Wren is a tumpus.\nConclusion:\nDull(wren) ::: Wren is dull.\n------"
    ]
  },
  {
    "id": "ProntoQA_7",
    "context": "Every rompus is orange. Every rompus is an impus. Vumpuses are happy. Every impus is spicy. Every impus is a wumpus. Wumpuses are transparent. Wumpuses are numpuses. Every numpus is not kind. Numpuses are tumpuses. Each tumpus is not bright. Tumpuses are yumpuses. Every yumpus is not liquid. Yumpuses are dumpuses. Each dumpus is not happy. Dumpuses are zumpuses. Every zumpus is earthy. Each zumpus is a jompus. Stella is a wumpus.",
    "question": "Is the following statement true or false? Stella is happy.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nRompus(x) ::: x is a rompus\nOrange(x) ::: x is orange\nImpus(x) ::: x is an impus\nHappy(x) ::: x is happy\nSpicy(x) ::: x is spicy\nWumpus(x) ::: x is a wumpus\nTransparent(x) ::: x is transparent\nNumpus(x) ::: x is a numpus\nKind(x) ::: x is kind\nTumpus(x) ::: x is a tumpus\nBright(x) ::: x is bright\nYumpus(x) ::: x is a yumpus\nLiquid(x) ::: x is liquid\nDumpus(x) ::: x is a dumpus\nZumpus(x) ::: x is a zumpus\nEarthy(x) ::: x is earthy\nJompus(x) ::: x is a jompus\nPremises:\n∀x (Rompus(x) → Orange(x)) ::: Every rompus is orange.\n∀x (Rompus(x) → Impus(x)) ::: Every rompus is an impus.\n∀x (Vumpus(x) → Happy(x)) ::: Vumpuses are happy.\n∀x (Impus(x) → Spicy(x)) ::: Every impus is spicy.\n∀x (Impus(x) → Wumpus(x)) ::: Every impus is a wumpus.\n∀x (Wumpus(x) → Transparent(x)) ::: Wumpuses are transparent.\n∀x (Wumpus(x) → Numpus(x)) ::: Wumpuses are numpuses.\n∀x (Numpus(x) → ¬Kind(x)) ::: Every numpus is not kind.\n∀x (Numpus(x) → Tumpus(x)) ::: Numpuses are tumpuses.\n∀x (Tumpus(x) → ¬Bright(x)) ::: Each tumpus is not bright.\n∀x (Tumpus(x) → Yumpus(x)) ::: Tumpuses are yumpuses.\n∀x (Yumpus(x) → ¬Liquid(x)) ::: Every yumpus is not liquid.\n∀x (Yumpus(x) → Dumpus(x)) ::: Yumpuses are dumpuses.\n∀x (Dumpus(x) → ¬Happy(x)) ::: Each dumpus is not happy.\n∀x (Dumpus(x) → Zumpus(x)) ::: Dumpuses are zumpuses.\n∀x (Zumpus(x) → Earthy(x)) ::: Every zumpus is earthy.\n∀x (Zumpus(x) → Jompus(x)) ::: Each zumpus is a jompus.\nWumpus(stella) ::: Stella is a wumpus.\nConclusion:\nHappy(stella) ::: Stella is happy.\n------"
    ]
  },
  {
    "id": "ProntoQA_8",
    "context": "Every jompus is sour. Each jompus is a rompus. Rompuses are not kind. Every rompus is a zumpus. Every zumpus is feisty. Zumpuses are tumpuses. Tumpuses are small. Tumpuses are wumpuses. Wumpuses are opaque. Wumpuses are impuses. Every yumpus is hot. Impuses are brown. Impuses are dumpuses. Dumpuses are not hot. Every dumpus is a vumpus. Each vumpus is dull. Vumpuses are numpuses. Alex is a zumpus.",
    "question": "Is the following statement true or false? Alex is hot.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nJompus(x) ::: x is a jompus\nSour(x) ::: x is sour\nRompus(x) ::: x is a rompus\nKind(x) ::: x is kind\nZumpus(x) ::: x is a zumpus\nFeisty(x) ::: x is feisty\nTumpus(x) ::: x is a tumpus\nSmall(x) ::: x is small\nWumpus(x) ::: x is a wumpus\nOpaque(x) ::: x is opaque\nImpus(x) ::: x is an impus\nYumpus(x) ::: x is a yumpus\nHot(x) ::: x is hot\nBrown(x) ::: x is brown\nDumpus(x) ::: x is a dumpus\nVumpus(x) ::: x is a vumpus\nDull(x) ::: x is dull\nNumpus(x) ::: x is a numpus\nPremises:\n∀x (Jompus(x) → Sour(x)) ::: Every jompus is sour.\n∀x (Jompus(x) → Rompus(x)) ::: Each jompus is a rompus.\n∀x (Rompus(x) → ¬Kind(x)) ::: Rompuses are not kind.\n∀x (Zumpus(x) → Feisty(x)) ::: Every zumpus is feisty.\n∀x (Zumpus(x) → Tumpus(x)) ::: Zumpuses are tumpuses.\n∀x (Tumpus(x) → Small(x)) ::: Tumpuses are small.\n∀x (Tumpus(x) → Wumpus(x)) ::: Tumpuses are wumpuses.\n∀x (Wumpus(x) → Opaque(x)) ::: Wumpuses are opaque.\n∀x (Wumpus(x) → Impus(x)) ::: Wumpuses are impuses.\n∀x (Yumpus(x) → Hot(x)) ::: Every yumpus is hot.\n∀x (Impus(x) → Brown(x)) ::: Impuses are brown.\n∀x (Impus(x) → Dumpus(x)) ::: Impuses are dumpuses.\n∀x (Dumpus(x) → ¬Hot(x)) ::: Dumpuses are not hot.\n∀x (Dumpus(x) → Vumpus(x)) ::: Every dumpus is a vumpus.\n∀x (Vumpus(x) → Dull(x)) ::: Each vumpus is dull.\n∀x (Vumpus(x) → Numpus(x)) ::: Vumpuses are numpuses.\nZumpus(alex) ::: Alex is a zumpus.\nConclusion:\nHot(alex) ::: Alex is hot.\n------"
    ]
  },
  {
    "id": "ProntoQA_9",
    "context": "Every dumpus is not shy. Each dumpus is a tumpus. Rompuses are not wooden. Tumpuses are opaque. Every tumpus is a wumpus. Wumpuses are not floral. Each wumpus is an impus. Impuses are bitter. Every impus is a vumpus. Vumpuses are small. Each vumpus is a numpus. Every numpus is wooden. Each numpus is a yumpus. Each yumpus is orange. Each yumpus is a jompus. Each jompus is amenable. Every jompus is a zumpus. Wren is a tumpus.",
    "question": "Is the following statement true or false? Wren is wooden.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nDumpus(x) ::: x is a dumpus\nShy(x) ::: x is shy\nTumpus(x) ::: x is a tumpus\nWooden(x) ::: x is wooden\nOpaque(x) ::: x is opaque\nWumpus(x) ::: x is a wumpus\nFloral(x) ::: x is floral\nImpus(x) ::: x is an impus\nBitter(x) ::: x is bitter\nVumpus(x) ::: x is a vumpus\nSmall(x) ::: x is small\nNumpus(x) ::: x is a numpus\nWooden(x) ::: x is wooden\nYumpus(x) ::: x is a yumpus\nOrange(x) ::: x is orange\nJompus(x) ::: x is a jompus\nAmenable(x) ::: x is amenable\nZumpus(x) ::: x is a zumpus\nPremises:\n∀x (Dumpus(x) → ¬Shy(x)) ::: Every dumpus is not shy.\n∀x (Dumpus(x) → Tumpus(x)) ::: Each dumpus is a tumpus.\n∀x (Rompus(x) → ¬Wooden(x)) ::: Rompuses are not wooden.\n∀x (Tumpus(x) → Opaque(x)) ::: Tumpuses are opaque.\n∀x (Tumpus(x) → Wumpus(x)) ::: Every tumpus is a wumpus.\n∀x (Wumpus(x) → ¬Floral(x)) ::: Wumpuses are not floral.\n∀x (Wumpus(x) → Impus(x)) ::: Each wumpus is an impus.\n∀x (Impus(x) → Bitter(x)) ::: Impuses are bitter.\n∀x (Impus(x) → Vumpus(x)) ::: Each impus is a vumpus.\n∀x (Vumpus(x) → Small(x)) ::: Vumpuses are small.\n∀x (Vumpus(x) → Numpus(x)) ::: Each vumpus is a numpus.\n∀x (Numpus(x) → Wooden(x)) ::: Each numpus is wooden.\n∀x (Numpus(x) → Yumpus(x)) ::: Each numpus is a yumpus.\n∀x (Yumpus(x) → Orange(x)) ::: Each yumpus is orange.\n∀x (Yumpus(x) → Jompus(x)) ::: Each yumpus is a jompus.\n∀x (Jompus(x) → Amenable(x)) ::: Each jompus is amenable.\n∀x (Jompus(x) → Zumpus(x)) ::: Every jompus is a zumpus.\nTumpus(wren) ::: Wren is a tumpus.\nConclusion:\nWooden(wren) ::: Wren is wooden.\n------"
    ]
  },
  {
    "id": "ProntoQA_10",
    "context": "Every impus is earthy. Each impus is a jompus. Jompuses are small. Jompuses are rompuses. Rompuses are not amenable. Rompuses are wumpuses. Wumpuses are wooden. Wumpuses are zumpuses. Every zumpus is temperate. Every zumpus is a dumpus. Dumpuses are dull. Dumpuses are vumpuses. Every vumpus is not shy. Every yumpus is sweet. Vumpuses are numpuses. Numpuses are not sweet. Numpuses are tumpuses. Fae is a wumpus.",
    "question": "Is the following statement true or false? Fae is sweet.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nImpus(x) ::: x is an impus\nEarthy(x) ::: x is earthy\nJompus(x) ::: x is a jompus\nSmall(x) ::: x is small\nRompus(x) ::: x is a rompus\nAmenable(x) ::: x is amenable\nWumpus(x) ::: x is a wumpus\nWooden(x) ::: x is wooden\nZumpus(x) ::: x is a zumpus\nTemperate(x) ::: x is temperate\nDumpus(x) ::: x is a dumpus\nDull(x) ::: x is dull\nVumpus(x) ::: x is a vumpus\nShy(x) ::: x is shy\nYumpus(x) ::: x is a yumpus\nSweet(x) ::: x is sweet\nNumpus(x) ::: x is a numpus\nTumpus(x) ::: x is a tumpus\nFae(x) ::: x is Fae\nPremises:\n∀x (Impus(x) → Earthy(x)) ::: Every impus is earthy.\n∀x (Impus(x) → Jompus(x)) ::: Each impus is a jompus.\n∀x (Jompus(x) → Small(x)) ::: Jompuses are small.\n∀x (Rompus(x) → Rompuses(x)) ::: Rompuses are rompuses.\n∀x (Rompus(x) → ¬Amenable(x)) ::: Rompuses are not amenable.\n∀x (Rompus(x) → Wumpus(x)) ::: Rompuses are wumpuses.\n∀x (Wumpus(x) → Wooden(x)) ::: Wumpuses are wooden.\n∀x (Wumpus(x) → Zumpus(x)) ::: Wumpuses are zumpuses.\n∀x (Zumpus(x) → Temperate(x)) ::: Every zumpus is temperate.\n∀x (Zumpus(x) → Dumpus(x)) ::: Every zumpus is a dumpus.\n∀x (Dumpus(x) → Dull(x)) ::: Dumpuses are dull.\n∀x (Dumpus(x) → Vumpus(x)) ::: Dumpuses are vumpuses.\n∀x (Vumpus(x) → ¬Shy(x)) ::: Every vumpus is not shy.\n∀x (Yumpus(x) → Sweet(x)) ::: Every yumpus is sweet.\n∀x (Vumpus(x) → Numpus(x)) ::: Vumpuses are numpuses.\n∀x (Numpus(x) → ¬Sweet(x)) ::: Numpuses are not sweet.\n∀x (Numpus(x) → Tumpus(x)) ::: Numpuses are tumpuses.\nWumpus(fae) ::: Fae is a wumpus.\nConclusion:\nSweet(fae) ::: Fae is sweet.\n------"
    ]
  },
  {
    "id": "ProntoQA_11",
    "context": "Each jompus is not amenable. Wumpuses are not fruity. Every jompus is a vumpus. Every vumpus is not shy. Every vumpus is a rompus. Rompuses are not bitter. Rompuses are dumpuses. Dumpuses are opaque. Every dumpus is a yumpus. Every yumpus is orange. Yumpuses are zumpuses. Zumpuses are fruity. Each zumpus is a numpus. Numpuses are metallic. Every numpus is a tumpus. Each tumpus is large. Each tumpus is an impus. Sam is a vumpus.",
    "question": "Is the following statement true or false? Sam is not fruity.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nJompus(x) ::: x is a jompus\nAmenable(x) ::: x is amenable\nWumpus(x) ::: x is a wumpus\nFruity(x) ::: x is fruity\nVumpus(x) ::: x is a vumpus\nShy(x) ::: x is shy\nRompus(x) ::: x is a rompus\nBitter(x) ::: x is bitter\nDumpus(x) ::: x is a dumpus\nOpaque(x) ::: x is opaque\nYumpus(x) ::: x is a yumpus\nOrange(x) ::: x is orange\nZumpus(x) ::: x is a zumpus\nFruity(x) ::: x is fruity\nNumpus(x) ::: x is a numpus\nMetallic(x) ::: x is metallic\nTumpus(x) ::: x is a tumpus\nLarge(x) ::: x is large\nImpus(x) ::: x is an impus\nSam(x) ::: x is Sam\nPremises:\n∀x (Jompus(x) → ¬Amenable(x)) ::: Each jompus is not amenable.\n∀x (Wumpus(x) → ¬Fruity(x)) ::: Wumpuses are not fruity.\n∀x (Jompus(x) → Vumpus(x)) ::: Every jompus is a vumpus.\n∀x (Vumpus(x) → ¬Shy(x)) ::: Every vumpus is not shy.\n∀x (Vumpus(x) → Rompus(x)) ::: Every vumpus is a rompus.\n∀x (Rompus(x) → ¬Bitter(x)) ::: Rompuses are not bitter.\n∀x (Rompus(x) → Dumpus(x)) ::: Rompuses are dumpuses.\n∀x (Dumpus(x) → Opaque(x)) ::: Dumpuses are opaque.\n∀x (Dumpus(x) → Yumpus(x)) ::: Every dumpus is a yumpus.\n∀x (Yumpus(x) → Orange(x)) ::: Every yumpus is orange.\n∀x (Yumpus(x) → Zumpus(x)) ::: Yumpuses are zumpuses.\n∀x (Zumpus(x) → Fruity(x)) ::: Zumpuses are fruity.\n∀x (Zumpus(x) → Numpus(x)) ::: Each zumpus is a numpus.\n∀x (Numpus(x) → Metallic(x)) ::: Numpuses are metallic.\n∀x (Numpus(x) → Tumpus(x)) ::: Every numpus is a tumpus.\n∀x (Tumpus(x) → Large(x)) ::: Each tumpus is large.\n∀x (Tumpus(x) → Impus(x)) ::: Each tumpus is an impus.\nVumpus(sam) ::: Sam is a vumpus.\nConclusion:\n¬Fruity(sam) ::: Sam is not fruity.\n------"
    ]
  },
  {
    "id": "ProntoQA_12",
    "context": "Each tumpus is orange. Tumpuses are numpuses. Numpuses are small. Numpuses are vumpuses. Every vumpus is sour. Vumpuses are dumpuses. Each dumpus is cold. Every dumpus is a zumpus. Each zumpus is dull. Zumpuses are yumpuses. Jompuses are floral. Every yumpus is not amenable. Each yumpus is a rompus. Every rompus is opaque. Rompuses are impuses. Impuses are not floral. Impuses are wumpuses. Fae is a dumpus.",
    "question": "Is the following statement true or false? Fae is not floral.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nTumpus(x) ::: x is a tumpus\nOrange(x) ::: x is orange\nNumpus(x) ::: x is a numpus\nSmall(x) ::: x is small\nVumpus(x) ::: x is a vumpus\nSour(x) ::: x is sour\nDumpus(x) ::: x is a dumpus\nCold(x) ::: x is cold\nZumpus(x) ::: x is a zumpus\nDull(x) ::: x is dull\nYumpus(x) ::: x is a yumpus\nAmenable(x) ::: x is amenable\nRompus(x) ::: x is a rompus\nOpaque(x) ::: x is opaque\nImpus(x) ::: x is an impus\nFloral(x) ::: x is floral\nWumpus(x) ::: x is a wumpus\nPremises:\n∀x (Tumpus(x) → Orange(x)) ::: Each tumpus is orange.\n∀x (Numpus(x) → Small(x)) ::: Numpuses are small.\n∀x (Numpus(x) → Vumpus(x)) ::: Numpuses are vumpuses.\n∀x (Vumpus(x) → Sour(x)) ::: Every vumpus is sour.\n∀x (Vumpus(x) → Dumpus(x)) ::: Vumpuses are dumpuses.\n∀x (Dumpus(x) → Cold(x)) ::: Each dumpus is cold.\n∀x (Dumpus(x) → Zumpus(x)) ::: Every dumpus is a zumpus.\n∀x (Zumpus(x) → Dull(x)) ::: Each zumpus is dull.\n∀x (Zumpus(x) → Yumpus(x)) ::: Zumpuses are yumpuses.\n∀x (Jompus(x) → Floral(x)) ::: Jompuses are floral.\n∀x (Yumpus(x) → ¬Amenable(x)) ::: Every yumpus is not amenable.\n∀x (Yumpus(x) → Rompus(x)) ::: Each yumpus is a rompus.\n∀x (Rompus(x) → Opaque(x)) ::: Every rompus is opaque.\n∀x (Rompus(x) → Impus(x)) ::: Rompuses are impuses.\n∀x (Impus(x) → ¬Floral(x)) ::: Impuses are not floral.\n∀x (Impus(x) → Wumpus(x)) ::: Impuses are wumpuses.\nDumpus(fae) ::: Fae is a dumpus.\nConclusion:\n¬Floral(fae) ::: Fae is not floral.\n------"
    ]
  },
  {
    "id": "ProntoQA_13",
    "context": "Each yumpus is opaque. Each yumpus is a dumpus. Vumpuses are not dull. Dumpuses are floral. Each dumpus is a zumpus. Each zumpus is hot. Every zumpus is an impus. Each impus is large. Every impus is a rompus. Rompuses are spicy. Each rompus is a numpus. Numpuses are amenable. Each numpus is a jompus. Jompuses are dull. Each jompus is a wumpus. Wumpuses are not metallic. Every wumpus is a tumpus. Max is a zumpus.",
    "question": "Is the following statement true or false? Max is dull.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nYumpus(x) ::: x is a yumpus\nOpaque(x) ::: x is opaque\nDumpus(x) ::: x is a dumpus\nVumpus(x) ::: x is a vumpus\nDull(x) ::: x is dull\nFloral(x) ::: x is floral\nZumpus(x) ::: x is a zumpus\nHot(x) ::: x is hot\nImpus(x) ::: x is an impus\nLarge(x) ::: x is large\nRompus(x) ::: x is a rompus\nSpicy(x) ::: x is spicy\nNumpus(x) ::: x is a numpus\nAmenable(x) ::: x is amenable\nJompus(x) ::: x is a jompus\nDull(x) ::: x is dull\nWumpus(x) ::: x is a wumpus\nMetallic(x) ::: x is metallic\nTumpus(x) ::: x is a tumpus\nPremises:\n∀x (Yumpus(x) → Opaque(x)) ::: Each yumpus is opaque.\n∀x (Yumpus(x) → Dumpus(x)) ::: Each yumpus is a dumpus.\n∀x (Vumpus(x) → ¬Dull(x)) ::: Vumpuses are not dull.\n∀x (Dumpus(x) → Floral(x)) ::: Dumpuses are floral.\n∀x (Dumpus(x) → Zumpus(x)) ::: Each dumpus is a zumpus.\n∀x (Zumpus(x) → Hot(x)) ::: Every zumpus is hot.\n∀x (Zumpus(x) → Impus(x)) ::: Every zumpus is an impus.\n∀x (Impus(x) → Large(x)) ::: Each impus is large.\n∀x (Impus(x) → Rompus(x)) ::: Every impus is a rompus.\n∀x (Rompus(x) → Spicy(x)) ::: Rompuses are spicy.\n∀x (Rompus(x) → Numpus(x)) ::: Each rompus is a numpus.\n∀x (Numpus(x) → Amenable(x)) ::: Numpuses are amenable.\n∀x (Numpus(x) → Jompus(x)) ::: Each numpus is a jompus.\n∀x (Jompus(x) → Dull(x)) ::: Jompuses are dull.\n∀x (Jompus(x) → Wumpus(x)) ::: Each jompus is a wumpus.\n∀x (Wumpus(x) → ¬Metallic(x)) ::: Wumpuses are not metallic.\n∀x (Wumpus(x) → Tumpus(x)) ::: Every wumpus is a tumpus.\nZumpus(max) ::: Max is a zumpus.\nConclusion:\nDull(max) ::: Max is dull.\n------"
    ]
  },
  {
    "id": "ProntoQA_14",
    "context": "Jompuses are large. Every jompus is a zumpus. Each zumpus is sweet. Zumpuses are numpuses. Every numpus is hot. Each tumpus is opaque. Numpuses are yumpuses. Every yumpus is brown. Each yumpus is a wumpus. Wumpuses are not opaque. Wumpuses are impuses. Fae is a jompus.",
    "question": "Is the following statement true or false? Fae is opaque.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant.lpg\n------"
    ]
  },
  {
    "id": "ProntoQA_15",
    "context": "Jompuses are not small. Jompuses are tumpuses. Tumpuses are not kind. Each tumpus is a vumpus. Vumpuses are metallic. Vumpuses are numpuses. Each numpus is fruity. Each numpus is a dumpus. Dumpuses are nervous. Dumpuses are rompuses. Each rompus is opaque. Every wumpus is dull. Each rompus is a zumpus. Each zumpus is hot. Every zumpus is an impus. Every impus is not dull. Each impus is a yumpus. Sam is a numpus.",
    "question": "Is the following statement true or false? Sam is not dull.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nJompus(x) ::: x is a jompus\nSmall(x) ::: x is small\nTumpus(x) ::: x is a tumpus\nKind(x) ::: x is kind\nVumpus(x) ::: x is a vumpus\nMetallic(x) ::: x is metallic\nNumpus(x) ::: x is a numpus\nFruity(x) ::: x is fruity\nDumpus(x) ::: x is a dumpus\nNervous(x) ::: x is nervous\nRompus(x) ::: x is a rompus\nOpaque(x) ::: x is opaque\nWumpus(x) ::: x is a wumpus\nDull(x) ::: x is dull\nZumpus(x) ::: x is a zumpus\nHot(x) ::: x is hot\nImpus(x) ::: x is an impus\nYumpus(x) ::: x is a yumpus\nSam(x) ::: x is Sam\nPremises:\n∀x (Jompus(x) → ¬Small(x)) ::: Jompuses are not small.\n∀x (Jompus(x) → Tumpus(x)) ::: Jompuses are tumpuses.\n∀x (Tumpus(x) → ¬Kind(x)) ::: Tumpuses are not kind.\n∀x (Tumpus(x) → Vumpus(x)) ::: Each tumpus is a vumpus.\n∀x (Vumpus(x) → Metallic(x)) ::: Vumpuses are metallic.\n∀x (Vumpus(x) → Numpus(x)) ::: Vumpuses are numpuses.\n∀x (Numpus(x) → Fruity(x)) ::: Each numpus is fruity.\n∀x (Numpus(x) → Dumpus(x)) ::: Each numpus is a dumpus.\n∀x (Dumpus(x) → Nervous(x)) ::: Dumpuses are nervous.\n∀x (Dumpus(x) → Rompus(x)) ::: Dumpuses are rompuses.\n∀x (Rompus(x) → Opaque(x)) ::: Each rompus is opaque.\n∀x (Wumpus(x) → Dull(x)) ::: Every wumpus is dull.\n∀x (Rompus(x) → Zumpus(x)) ::: Each rompus is a zumpus.\n∀x (Zumpus(x) → Hot(x)) ::: Every zumpus is hot.\n∀x (Zumpus(x) → Impus(x)) ::: Every zumpus is an impus.\n∀x (Impus(x) → ¬Dull(x)) ::: Every impus is not dull.\n∀x (Impus(x) → Yumpus(x)) ::: Each impus is a yumpus.\nNumpus(sam) ::: Sam is a numpus.\nConclusion:\n¬Dull(sam) ::: Sam is not dull.\n------"
    ]
  },
  {
    "id": "ProntoQA_16",
    "context": "Yumpuses are hot. Each yumpus is a rompus. Rompuses are happy. Rompuses are impuses. Each impus is not amenable. Every impus is a dumpus. Dumpuses are opaque. Dumpuses are tumpuses. Numpuses are small. Tumpuses are orange. Every tumpus is a wumpus. Wumpuses are not small. Wumpuses are vumpuses. Every vumpus is fruity. Every vumpus is a jompus. Jompuses are not dull. Every jompus is a zumpus. Sally is a rompus.",
    "question": "Is the following statement true or false? Sally is small.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nYumpus(x) ::: x is a yumpus\nHot(x) ::: x is hot\nRompus(x) ::: x is a rompus\nHappy(x) ::: x is happy\nImpus(x) ::: x is an impus\nAmenable(x) ::: x is amenable\nDumpus(x) ::: x is a dumpus\nOpaque(x) ::: x is opaque\nTumpus(x) ::: x is a tumpus\nSmall(x) ::: x is small\nOrange(x) ::: x is orange\nWumpus(x) ::: x is a wumpus\nVumpus(x) ::: x is a vumpus\nFruity(x) ::: x is fruity\nJompus(x) ::: x is a jompus\nDull(x) ::: x is dull\nZumpus(x) ::: x is a zumpus\nPremises:\n∀x (Yumpus(x) → Hot(x)) ::: Yumpuses are hot.\n∀x (Rompus(x) → Happy(x)) ::: Each yumpus is a rompus. Rompuses are happy.\n∀x (Impus(x) → ¬Amenable(x)) ::: Rompuses are impuses. Each impus is not amenable.\n∀x (Impus(x) → Dumpus(x)) ::: Every impus is a dumpus.\n∀x (Dumpus(x) → Opaque(x)) ::: Dumpuses are opaque.\n∀x (Dumpus(x) → Tumpus(x)) ::: Dumpuses are tumpuses.\n∀x (Numpus(x) → Small(x)) ::: Numpuses are small.\n∀x (Tumpus(x) → Orange(x)) ::: Tumpuses are orange.\n∀x (Tumpus(x) → Wumpus(x)) ::: Every tumpus is a wumpus.\n∀x (Wumpus(x) → ¬Small(x)) ::: Wumpuses are not small.\n∀x (Wumpus(x) → Vumpus(x)) ::: Wumpuses are vumpuses.\n∀x (Vumpus(x) → Fruity(x)) ::: Every vumpus is fruity.\n∀x (Vumpus(x) → Jompus(x)) ::: Every vumpus is a jompus.\n∀x (Jompus(x) → ¬Dull(x)) ::: Jompuses are not dull.\n∀x (Jompus(x) → Zumpus(x)) ::: Every jompus is a zumpus.\nRompus(sally) ::: Sally is a rompus.\nConclusion:\nSmall(sally) ::: Sally is small.\n------"
    ]
  },
  {
    "id": "ProntoQA_17",
    "context": "Each numpus is not nervous. Every numpus is a wumpus. Wumpuses are liquid. Each wumpus is a jompus. Jompuses are fruity. Zumpuses are not opaque. Each jompus is a yumpus. Every yumpus is kind. Yumpuses are vumpuses. Vumpuses are opaque. Every vumpus is an impus. Impuses are not small. Impuses are rompuses. Rompuses are dull. Rompuses are tumpuses. Every tumpus is temperate. Every tumpus is a dumpus. Fae is a numpus.",
    "question": "Is the following statement true or false? Fae is not opaque.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nNumpus(x) ::: x is a numpus\nNervous(x) ::: x is nervous\nWumpus(x) ::: x is a wumpus\nLiquid(x) ::: x is liquid\nJompus(x) ::: x is a jompus\nFruity(x) ::: x is fruity\nZumpus(x) ::: x is a zumpus\nOpaque(x) ::: x is opaque\nYumpus(x) ::: x is a yumpus\nKind(x) ::: x is kind\nVumpus(x) ::: x is a vumpus\nOpaque(x) ::: x is opaque\nImpus(x) ::: x is an impus\nSmall(x) ::: x is small\nRompus(x) ::: x is a rompus\nDull(x) ::: x is dull\nTumpus(x) ::: x is a tumpus\nTemperate(x) ::: x is temperate\nDumpus(x) ::: x is a dumpus\nFae(x) ::: x is Fae\nPremises:\n∀x (Numpus(x) → ¬Nervous(x)) ::: Each numpus is not nervous.\n∀x (Numpus(x) → Wumpus(x)) ::: Every numpus is a wumpus.\n∀x (Wumpus(x) → Liquid(x)) ::: Wumpuses are liquid.\n∀x (Jompus(x) → Fruity(x)) ::: Each jompus is fruity.\n∀x (Zumpus(x) → ¬Opaque(x)) ::: Zumpuses are not opaque.\n∀x (Jompus(x) → Yumpus(x)) ::: Each jompus is a yumpus.\n∀x (Yumpus(x) → Kind(x)) ::: Yumpuses are kind.\n∀x (Yumpus(x) → Vumpus(x)) ::: Yumpuses are vumpuses.\n∀x (Vumpus(x) → Opaque(x)) ::: Vumpuses are opaque.\n∀x (Impus(x) → ¬Small(x)) ::: Impuses are not small.\n∀x (Impus(x) → Rompus(x)) ::: Impuses are rompuses.\n∀x (Rompus(x) → Dull(x)) ::: Rompuses are dull.\n∀x (Rompus(x) → Tumpus(x)) ::: Rompuses are tumpuses.\n∀x (Tumpus(x) → Temperate(x)) ::: Every tumpus is temperate.\n∀x (Tumpus(x) → Dumpus(x)) ::: Every tumpus is a dumpus.\nNumpus(fae) ::: Fae is a numpus.\nConclusion:\n¬Opaque(fae) ::: Fae is not opaque.\n------"
    ]
  },
  {
    "id": "ProntoQA_18",
    "context": "Each dumpus is bright. Each dumpus is a rompus. Every rompus is aggressive. Every rompus is a yumpus. Yumpuses are brown. Yumpuses are vumpuses. Every impus is fruity. Every vumpus is sour. Every vumpus is a numpus. Every numpus is not temperate. Every numpus is a zumpus. Zumpuses are metallic. Zumpuses are jompuses. Each jompus is not fruity. Jompuses are tumpuses. Tumpuses are opaque. Every tumpus is a wumpus. Sam is a yumpus.",
    "question": "Is the following statement true or false? Sam is fruity.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nDumpus(x) ::: x is a dumpus\nBright(x) ::: x is bright\nRompus(x) ::: x is a rompus\nAggressive(x) ::: x is aggressive\nYumpus(x) ::: x is a yumpus\nBrown(x) ::: x is brown\nVumpus(x) ::: x is a vumpus\nFruity(x) ::: x is fruity\nSour(x) ::: x is sour\nNumpus(x) ::: x is a numpus\nTemperate(x) ::: x is temperate\nZumpus(x) ::: x is a zumpus\nMetallic(x) ::: x is metallic\nJompus(x) ::: x is a jompus\nTumpus(x) ::: x is a tumpus\nOpaque(x) ::: x is opaque\nWumpus(x) ::: x is a wumpus\nPremises:\n∀x (Dumpus(x) → Bright(x)) ::: Each dumpus is bright.\n∀x (Dumpus(x) → Rompus(x)) ::: Each dumpus is a rompus.\n∀x (Rompus(x) → Aggressive(x)) ::: Every rompus is aggressive.\n∀x (Yumpus(x) → Brown(x)) ::: Every yumpus is brown.\n∀x (Yumpus(x) → Vumpus(x)) ::: Every yumpus is a vumpus.\n∀x (Impus(x) → Fruity(x)) ::: Every impus is fruity.\n∀x (Vumpus(x) → Sour(x)) ::: Every vumpus is sour.\n∀x (Vumpus(x) → Numpus(x)) ::: Every vumpus is a numpus.\n∀x (Numpus(x) → ¬Temperate(x)) ::: Every numpus is not temperate.\n∀x (Numpus(x) → Zumpus(x)) ::: Every numpus is a zumpus.\n∀x (Zumpus(x) → Metallic(x)) ::: Zumpuses are metallic.\n∀x (Zumpus(x) → Jompus(x)) ::: Zumpuses are jompuses.\n∀x (Jompus(x) → ¬Fruity(x)) ::: Each jompus is not fruity.\n∀x (Jompus(x) → Tumpus(x)) ::: Jompuses are tumpuses.\n∀x (Tumpus(x) → Opaque(x)) ::: Tumpuses are opaque.\n∀x (Tumpus(x) → Wumpus(x)) ::: Every tumpus is a wumpus.\nYumpus(sam) ::: Sam is a yumpus.\nConclusion:\nFruity(sam) ::: Sam is fruity.\n------"
    ]
  },
  {
    "id": "ProntoQA_19",
    "context": "Each numpus is not opaque. Each numpus is a wumpus. Each wumpus is feisty. Wumpuses are tumpuses. Tumpuses are fruity. Every tumpus is a dumpus. Every dumpus is wooden. Each dumpus is a yumpus. Yumpuses are blue. Each yumpus is a zumpus. Every zumpus is spicy. Zumpuses are impuses. Each impus is not kind. Impuses are rompuses. Jompuses are not dull. Every rompus is dull. Each rompus is a vumpus. Sam is a dumpus.",
    "question": "Is the following statement true or false? Sam is not dull.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nNumpus(x) ::: x is a numpus\nOpaque(x) ::: x is opaque\nWumpus(x) ::: x is a wumpus\nFeisty(x) ::: x is feisty\nTumpus(x) ::: x is a tumpus\nFruity(x) ::: x is fruity\nDumpus(x) ::: x is a dumpus\nWooden(x) ::: x is wooden\nYumpus(x) ::: x is a yumpus\nBlue(x) ::: x is blue\nZumpus(x) ::: x is a zumpus\nSpicy(x) ::: x is spicy\nImpus(x) ::: x is an impus\nKind(x) ::: x is kind\nRompus(x) ::: x is a rompus\nDull(x) ::: x is dull\nVumpus(x) ::: x is a vumpus\nPremises:\n∀x (Numpus(x) → ¬Opaque(x)) ::: Each numpus is not opaque.\n∀x (Numpus(x) → Wumpus(x)) ::: Each numpus is a wumpus.\n∀x (Wumpus(x) → Feisty(x)) ::: Each wumpus is feisty.\n∀x (Wumpus(x) → Tumpus(x)) ::: Wumpuses are tumpuses.\n∀x (Tumpus(x) → Fruity(x)) ::: Tumpuses are fruity.\n∀x (Tumpus(x) → Dumpus(x)) ::: Every tumpus is a dumpus.\n∀x (Dumpus(x) → Wooden(x)) ::: Every dumpus is wooden.\n∀x (Dumpus(x) → Yumpus(x)) ::: Each dumpus is a yumpus.\n∀x (Yumpus(x) → Blue(x)) ::: Yumpuses are blue.\n∀x (Yumpus(x) → Zumpus(x)) ::: Each yumpus is a zumpus.\n∀x (Zumpus(x) → Spicy(x)) ::: Zumpuses are spicy.\n∀x (Zumpus(x) → Impus(x)) ::: Zumpuses are impuses.\n∀x (Impus(x) → ¬Kind(x)) ::: Impuses are not kind.\n∀x (Impus(x) → Rompus(x)) ::: Impuses are rompuses.\n∀x (Jompus(x) → ¬Dull(x)) ::: Jompuses are not dull.\n∀x (Rompus(x) → Dull(x)) ::: Every rompus is dull.\n∀x (Rompus(x) → Vumpus(x)) ::: Each rompus is a vumpus.\nDumpus(sam) ::: Sam is a dumpus.\nConclusion:\n¬Dull(sam) ::: Sam is not dull.\n------"
    ]
  },
  {
    "id": "ProntoQA_20",
    "context": "Each yumpus is not small. Each yumpus is a dumpus. Each dumpus is opaque. Every dumpus is a jompus. Each jompus is shy. Each numpus is sour. Every jompus is a tumpus. Each tumpus is brown. Each tumpus is a vumpus. Vumpuses are dull. Vumpuses are wumpuses. Every wumpus is not sour. Wumpuses are rompuses. Each rompus is not luminous. Rompuses are impuses. Stella is a dumpus.",
    "question": "Is the following statement true or false? Stella is sour.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nYumpus(x) ::: x is a yumpus\nSmall(x) ::: x is small\nDumpus(x) ::: x is a dumpus\nOpaque(x) ::: x is opaque\nJompus(x) ::: x is a jompus\nShy(x) ::: x is shy\nNumpus(x) ::: x is a numpus\nSour(x) ::: x is sour\nTumpus(x) ::: x is a tumpus\nBrown(x) ::: x is brown\nVumpus(x) ::: x is a vumpus\nDull(x) ::: x is dull\nWumpus(x) ::: x is a wumpus\nRompus(x) ::: x is a rompus\nLuminous(x) ::: x is luminous\nImpus(x) ::: x is an impus\nPremises:\n∀x (Yumpus(x) → ¬Small(x)) ::: Each yumpus is not small.\n∀x (Yumpus(x) → Dumpus(x)) ::: Each yumpus is a dumpus.\n∀x (Dumpus(x) → Opaque(x)) ::: Each dumpus is opaque.\n∀x (Dumpus(x) → Jompus(x)) ::: Every dumpus is a jompus.\n∀x (Jompus(x) → Shy(x)) ::: Each jompus is shy.\n∀x (Numpus(x) → Sour(x)) ::: Each numpus is sour.\n∀x (Jompus(x) → Tumpus(x)) ::: Every jompus is a tumpus.\n∀x (Tumpus(x) → Brown(x)) ::: Each tumpus is brown.\n∀x (Tumpus(x) → Vumpus(x)) ::: Each tumpus is a vumpus.\n∀x (Vumpus(x) → Dull(x)) ::: Vumpuses are dull.\n∀x (Vumpus(x) → Wumpus(x)) ::: Vumpuses are wumpuses.\n∀x (Wumpus(x) → ¬Sour(x)) ::: Every wumpus is not sour.\n∀x (Wumpus(x) → Rompus(x)) ::: Wumpuses are rompuses.\n∀x (Rompus(x) → ¬Luminous(x)) ::: Each rompus is not luminous.\n∀x (Rompus(x) → Impus(x)) ::: Rompuses are impuses.\nDumpus(stella) ::: Stella is a dumpus.\nConclusion:\nSour(stella) ::: Stella is sour.\n------"
    ]
  },
  {
    "id": "ProntoQA_21",
    "context": "Vumpuses are earthy. Vumpuses are dumpuses. Dumpuses are not wooden. Dumpuses are numpuses. Every numpus is kind. Each numpus is a rompus. Each rompus is small. Every rompus is a jompus. Every jompus is bright. Jompuses are yumpuses. Yumpuses are orange. Every yumpus is a zumpus. Zumpuses are sour. Zumpuses are impuses. Impuses are transparent. Tumpuses are not orange. Each impus is a wumpus. Max is a dumpus.",
    "question": "Is the following statement true or false? Max is orange.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nVumpus(x) ::: x is a vumpus\nEarthy(x) ::: x is earthy\nDumpus(x) ::: x is a dumpus\nWooden(x) ::: x is wooden\nNumpus(x) ::: x is a numpus\nKind(x) ::: x is kind\nRompus(x) ::: x is a rompus\nSmall(x) ::: x is small\nJompus(x) ::: x is a jompus\nBright(x) ::: x is bright\nYumpus(x) ::: x is a yumpus\nZumpus(x) ::: x is a zumpus\nSour(x) ::: x is sour\nImpus(x) ::: x is an impus\nTransparent(x) ::: x is transparent\nTumpus(x) ::: x is a tumpus\nOrange(x) ::: x is orange\nZumpus(x) ::: x is a zumpus\nPremises:\n∀x (Vumpus(x) → Earthy(x)) ::: Vumpuses are earthy.\n∀x (Vumpus(x) → Dumpus(x)) ::: Vumpuses are dumpuses.\n∀x (Dumpus(x) → ¬Wooden(x)) ::: Dumpuses are not wooden.\n∀x (Dumpus(x) → Numpus(x)) ::: Dumpuses are numpuses.\n∀x (Numpus(x) → Kind(x)) ::: Every numpus is kind.\n∀x (Numpus(x) → Rompus(x)) ::: Each numpus is a rompus.\n∀x (Rompus(x) → Small(x)) ::: Each rompus is small.\n∀x (Rompus(x) → Jompus(x)) ::: Every rompus is a jompus.\n∀x (Jompus(x) → Bright(x)) ::: Every jompus is bright.\n∀x (Jompus(x) → Yumpus(x)) ::: Jompuses are yumpuses.\n∀x (Yumpus(x) → Orange(x)) ::: Yumpuses are orange.\n∀x (Yumpus(x) → Zumpus(x)) ::: Every yumpus is a zumpus.\n∀x (Zumpus(x) → Sour(x)) ::: Zumpuses are sour.\n∀x (Zumpus(x) → Impus(x)) ::: Zumpuses are impuses.\n∀x (Impus(x) → Transparent(x)) ::: Impuses are transparent.\n∀x (Tumpus(x) → ¬Orange(x)) ::: Tumpuses are not orange.\n∀x (Impus(x) → Wumpus(x)) ::: Each impus is a wumpus.\nDumpus(max) ::: Max is a dumpus.\nConclusion:\nOrange(max) ::: Max is orange.\n------"
    ]
  },
  {
    "id": "ProntoQA_22",
    "context": "Every wumpus is sour. Wumpuses are yumpuses. Each yumpus is aggressive. Every yumpus is a tumpus. Every tumpus is transparent. Tumpuses are vumpuses. Vumpuses are wooden. Each vumpus is a jompus. Each impus is not feisty. Every jompus is large. Jompuses are numpuses. Numpuses are red. Numpuses are rompuses. Every rompus is feisty. Each rompus is a zumpus. Wren is a tumpus.",
    "question": "Is the following statement true or false? Wren is not feisty.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nWumpus(x) ::: x is a wumpus\nSour(x) ::: x is sour\nYumpus(x) ::: x is a yumpus\nAggressive(x) ::: x is aggressive\nTumpus(x) ::: x is a tumpus\nTransparent(x) ::: x is transparent\nVumpus(x) ::: x is a vumpus\nWooden(x) ::: x is wooden\nJompus(x) ::: x is a jompus\nImpus(x) ::: x is an impus\nFeisty(x) ::: x is feisty\nLarge(x) ::: x is large\nNumpus(x) ::: x is a numpus\nRed(x) ::: x is red\nRompus(x) ::: x is a rompus\nFeisty(x) ::: x is feisty\nZumpus(x) ::: x is a zumpus\nPremises:\n∀x (Wumpus(x) → Sour(x)) ::: Every wumpus is sour.\n∀x (Wumpus(x) → Yumpus(x)) ::: Wumpuses are yumpuses.\n∀x (Yumpus(x) → Aggressive(x)) ::: Each yumpus is aggressive.\n∀x (Yumpus(x) → Tumpus(x)) ::: Every yumpus is a tumpus.\n∀x (Tumpus(x) → Transparent(x)) ::: Every tumpus is transparent.\n∀x (Tumpus(x) → Vumpus(x)) ::: Tumpuses are vumpuses.\n∀x (Vumpus(x) → Wooden(x)) ::: Vumpuses are wooden.\n∀x (Vumpus(x) → Jompus(x)) ::: Each vumpus is a jompus.\n∀x (Impus(x) → ¬Feisty(x)) ::: Each impus is not feisty.\n∀x (Jompus(x) → Large(x)) ::: Every jompus is large.\n∀x (Jompus(x) → Numpus(x)) ::: Jompuses are numpuses.\n∀x (Numpus(x) → Red(x)) ::: Numpuses are red.\n∀x (Numpus(x) → Rompus(x)) ::: Numpuses are rompuses.\n∀x (Rompus(x) → Feisty(x)) ::: Every rompus is feisty.\n∀x (Rompus(x) → Zumpus(x)) ::: Each rompus is a zumpus.\nTumpus(wren) ::: Wren is a tumpus.\nConclusion:\n¬Feisty(wren) ::: Wren is not feisty.\n------"
    ]
  },
  {
    "id": "ProntoQA_23",
    "context": "Every zumpus is not opaque. Each zumpus is a numpus. Numpuses are brown. Numpuses are dumpuses. Each dumpus is amenable. Impuses are not bitter. Every dumpus is a vumpus. Each vumpus is not cold. Each vumpus is a tumpus. Every tumpus is wooden. Every tumpus is a rompus. Each rompus is floral. Rompuses are yumpuses. Yumpuses are bitter. Every yumpus is a wumpus. Wumpuses are not feisty. Wumpuses are jompuses. Sally is a dumpus.",
    "question": "Is the following statement true or false? Sally is bitter.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nZumpus(x) ::: x is a zumpus\nOpaque(x) ::: x is opaque\nNumpus(x) ::: x is a numpus\nBrown(x) ::: x is brown\nDumpus(x) ::: x is a dumpus\nAmenable(x) ::: x is amenable\nImpus(x) ::: x is an impus\nBitter(x) ::: x is bitter\nVumpus(x) ::: x is a vumpus\nCold(x) ::: x is cold\nTumpus(x) ::: x is a tumpus\nWooden(x) ::: x is wooden\nRompus(x) ::: x is a rompus\nFloral(x) ::: x is floral\nYumpus(x) ::: x is a yumpus\nBitter(x) ::: x is bitter\nWumpus(x) ::: x is a wumpus\nFeisty(x) ::: x is feisty\nJompus(x) ::: x is a jompus\nPremises:\n∀x (Zumpus(x) → ¬Opaque(x)) ::: Every zumpus is not opaque.\n∀x (Zumpus(x) → Numpus(x)) ::: Each zumpus is a numpus.\n∀x (Numpus(x) → Brown(x)) ::: Numpuses are brown.\n∀x (Numpus(x) → Dumpus(x)) ::: Numpuses are dumpuses.\n∀x (Dumpus(x) → Amenable(x)) ::: Each dumpus is amenable.\n∀x (Impus(x) → ¬Bitter(x)) ::: Impuses are not bitter.\n∀x (Dumpus(x) → Vumpus(x)) ::: Every dumpus is a vumpus.\n∀x (Vumpus(x) → ¬Cold(x)) ::: Each vumpus is not cold.\n∀x (Vumpus(x) → Tumpus(x)) ::: Each vumpus is a tumpus.\n∀x (Tumpus(x) → Wooden(x)) ::: Every tumpus is wooden.\n∀x (Tumpus(x) → Rompus(x)) ::: Every tumpus is a rompus.\n∀x (Rompus(x) → Floral(x)) ::: Rompuses are floral.\n∀x (Rompus(x) → Yumpus(x)) ::: Rompuses are yumpuses.\n∀x (Yumpus(x) → Bitter(x)) ::: Yumpuses are bitter.\n∀x (Yumpus(x) → Wumpus(x)) ::: Every yumpus is a wumpus.\n∀x (Wumpus(x) → ¬Feisty(x)) ::: Wumpuses are not feisty.\n∀x (Wumpus(x) → Jompus(x)) ::: Wumpuses are jompuses.\nDumpus(sally) ::: Sally is a dumpus.\nConclusion:\nBitter(sally) ::: Sally is bitter.\n------"
    ]
  },
  {
    "id": "ProntoQA_24",
    "context": "Every numpus is floral. Numpuses are jompuses. Jompuses are not nervous. Each jompus is an impus. Every impus is brown. Every dumpus is not amenable. Each impus is a wumpus. Wumpuses are not bitter. Each wumpus is a zumpus. Every zumpus is not small. Zumpuses are vumpuses. Vumpuses are hot. Vumpuses are rompuses. Rompuses are amenable. Every rompus is a tumpus. Every tumpus is bright. Every tumpus is a yumpus. Alex is an impus.",
    "question": "Is the following statement true or false? Alex is amenable.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nNumpus(x) ::: x is a numpus\nFloral(x) ::: x is floral\nJompus(x) ::: x is a jompus\nNervous(x) ::: x is nervous\nImpus(x) ::: x is an impus\nBrown(x) ::: x is brown\nDumpus(x) ::: x is a dumpus\nAmenable(x) ::: x is amenable\nWumpus(x) ::: x is a wumpus\nBitter(x) ::: x is bitter\nZumpus(x) ::: x is a zumpus\nVumpus(x) ::: x is a vumpus\nHot(x) ::: x is hot\nRompus(x) ::: x is a rompus\nAmenable(x) ::: x is amenable\nTumpus(x) ::: x is a tumpus\nBright(x) ::: x is bright\nYumpus(x) ::: x is a yumpus\nPremises:\n∀x (Numpus(x) → Floral(x)) ::: Every numpus is floral.\n∀x (Jompus(x) → Numpus(x)) ::: Numpuses are jompuses.\n∀x (Jompus(x) → ¬Nervous(x)) ::: Jompuses are not nervous.\n∀x (Impus(x) → Brown(x)) ::: Each jompus is an impus.\n∀x (Impus(x) → ¬Bitter(x)) ::: Every impus is brown.\n∀x (Dumpus(x) → ¬Amenable(x)) ::: Every dumpus is not amenable.\n∀x (Impus(x) → Wumpus(x)) ::: Each impus is a wumpus.\n∀x (Wumpus(x) → ¬Bitter(x)) ::: Wumpuses are not bitter.\n∀x (Zumpus(x) → Vumpus(x)) ::: Every zumpus is a vumpus.\n∀x (Vumpus(x) → Hot(x)) ::: Vumpuses are hot.\n∀x (Vumpus(x) → Rompus(x)) ::: Vumpuses are rompuses.\n∀x (Rompus(x) → Amenable(x)) ::: Rompuses are amenable.\n∀x (Rompus(x) → Tumpus(x)) ::: Every rompus is a tumpus.\n∀x (Tumpus(x) → Bright(x)) ::: Every tumpus is bright.\n∀x (Tumpus(x) → Yumpus(x)) ::: Every tumpus is a yumpus.\nImpus(alex) ::: Alex is an impus.\nConclusion:\nAmenable(alex) ::: Alex is amenable.\n------"
    ]
  },
  {
    "id": "ProntoQA_25",
    "context": "Zumpuses are dull. Every vumpus is not transparent. Vumpuses are numpuses. Numpuses are blue. Numpuses are wumpuses. Wumpuses are liquid. Each wumpus is a tumpus. Tumpuses are not spicy. Tumpuses are rompuses. Each rompus is not dull. Rompuses are yumpuses. Every yumpus is floral. Every yumpus is an impus. Impuses are hot. Each impus is a jompus. Every jompus is large. Jompuses are dumpuses. Sam is a vumpus.",
    "question": "Is the following statement true or false? Sam is not dull.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nZumpus(x) ::: x is a zumpus\nDull(x) ::: x is dull\nVumpus(x) ::: x is a vumpus\nTransparent(x) ::: x is transparent\nNumpus(x) ::: x is a numpus\nBlue(x) ::: x is blue\nWumpus(x) ::: x is a wumpus\nLiquid(x) ::: x is liquid\nTumpus(x) ::: x is a tumpus\nSpicy(x) ::: x is spicy\nRompus(x) ::: x is a rompus\nYumpus(x) ::: x is a yumpus\nFloral(x) ::: x is floral\nImpus(x) ::: x is an impus\nHot(x) ::: x is hot\nJompus(x) ::: x is a jompus\nLarge(x) ::: x is large\nDumpus(x) ::: x is a dumpus\nPremises:\n∀x (Zumpus(x) → Dull(x)) ::: Zumpuses are dull.\n∀x (Vumpus(x) → ¬Transparent(x)) ::: Every vumpus is not transparent.\n∀x (Numpus(x) → Blue(x)) ::: Numpuses are blue.\n∀x (Numpus(x) → Wumpus(x)) ::: Numpuses are wumpuses.\n∀x (Wumpus(x) → Liquid(x)) ::: Wumpuses are liquid.\n∀x (Wumpus(x) → Tumpus(x)) ::: Each wumpus is a tumpus.\n∀x (Tumpus(x) → ¬Spicy(x)) ::: Tumpuses are not spicy.\n∀x (Tumpus(x) → Rompus(x)) ::: Tumpuses are rompuses.\n∀x (Rompus(x) → ¬Dull(x)) ::: Each rompus is not dull.\n∀x (Rompus(x) → Yumpus(x)) ::: Rompuses are yumpuses.\n∀x (Yumpus(x) → Floral(x)) ::: Every yumpus is floral.\n∀x (Yumpus(x) → Impus(x)) ::: Every yumpus is an impus.\n∀x (Impus(x) → Hot(x)) ::: Impuses are hot.\n∀x (Impus(x) → Jompus(x)) ::: Each impus is a jompus.\n∀x (Jompus(x) → Large(x)) ::: Every jompus is large.\n∀x (Jompus(x) → Dumpus(x)) ::: Jompuses are dumpuses.\nVumpus(sam) ::: Sam is a vumpus.\nConclusion:\n¬Dull(sam) ::: Sam is not dull.\n------"
    ]
  },
  {
    "id": "ProntoQA_26",
    "context": "Each numpus is fruity. Every numpus is a tumpus. Every tumpus is dull. Every tumpus is a jompus. Every jompus is not orange. Each jompus is an impus. Each impus is not shy. Impuses are wumpuses. Wumpuses are sweet. Wumpuses are rompuses. Every rompus is not amenable. Each rompus is a zumpus. Every zumpus is large. Zumpuses are yumpuses. Every vumpus is not large. Yumpuses are transparent. Yumpuses are dumpuses. Rex is a jompus.",
    "question": "Is the following statement true or false? Rex is large.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nNumpus(x) ::: x is a numpus\nFruity(x) ::: x is fruity\nTumpus(x) ::: x is a tumpus\nDull(x) ::: x is dull\nJompus(x) ::: x is a jompus\nOrange(x) ::: x is orange\nImpus(x) ::: x is an impus\nShy(x) ::: x is shy\nWumpus(x) ::: x is a wumpus\nSweet(x) ::: x is sweet\nRompus(x) ::: x is a rompus\nAmenable(x) ::: x is amenable\nZumpus(x) ::: x is a zumpus\nLarge(x) ::: x is large\nYumpus(x) ::: x is a yumpus\nDumpus(x) ::: x is a dumpus\nPremises:\n∀x (Numpus(x) → Fruity(x)) ::: Each numpus is fruity.\n∀x (Numpus(x) → Tumpus(x)) ::: Every numpus is a tumpus.\n∀x (Tumpus(x) → Dull(x)) ::: Every tumpus is dull.\n∀x (Tumpus(x) → Jompus(x)) ::: Every tumpus is a jompus.\n∀x (Jompus(x) → ¬Orange(x)) ::: Every jompus is not orange.\n∀x (Jompus(x) → Impus(x)) ::: Each jompus is an impus.\n∀x (Impus(x) → ¬Shy(x)) ::: Impuses are not shy.\n∀x (Impus(x) → Wumpus(x)) ::: Impuses are wumpuses.\n∀x (Wumpus(x) → Sweet(x)) ::: Wumpuses are sweet.\n∀x (Wumpus(x) → Rompus(x)) ::: Wumpuses are rompuses.\n∀x (Rompus(x) → ¬Amenable(x)) ::: Every rompus is not amenable.\n∀x (Rompus(x) → Zumpus(x)) ::: Each rompus is a zumpus.\n∀x (Zumpus(x) → Large(x)) ::: Every zumpus is large.\n∀x (Zumpus(x) → Yumpus(x)) ::: Zumpuses are yumpuses.\n∀x (Vumpus(x) → ¬Large(x)) ::: Every vumpus is not large.\n∀x (Yumpus(x) → Transparent(x)) ::: Yumpuses are transparent.\n∀x (Yumpus(x) → Dumpus(x)) ::: Yumpuses are dumpuses.\nJompus(rex) ::: Rex is a jompus.\nConclusion:\nLarge(rex) ::: Rex is large.\n------"
    ]
  },
  {
    "id": "ProntoQA_27",
    "context": "Wumpuses are not sour. Each wumpus is a rompus. Rompuses are dull. Each rompus is a dumpus. Every dumpus is feisty. Jompuses are aggressive. Dumpuses are tumpuses. Tumpuses are opaque. Every tumpus is a numpus. Numpuses are hot. Numpuses are zumpuses. Zumpuses are large. Every zumpus is a vumpus. Vumpuses are blue. Every vumpus is an impus. Impuses are not aggressive. Impuses are yumpuses. Fae is a tumpus.",
    "question": "Is the following statement true or false? Fae is not aggressive.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nWumpus(x) ::: x is a wumpus\nSour(x) ::: x is sour\nRompus(x) ::: x is a rompus\nDull(x) ::: x is dull\nDumpus(x) ::: x is a dumpus\nFeisty(x) ::: x is feisty\nJompus(x) ::: x is a jompus\nAggressive(x) ::: x is aggressive\nTumpus(x) ::: x is a tumpus\nOpaque(x) ::: x is opaque\nNumpus(x) ::: x is a numpus\nHot(x) ::: x is hot\nZumpus(x) ::: x is a zumpus\nLarge(x) ::: x is large\nVumpus(x) ::: x is a vumpus\nBlue(x) ::: x is blue\nImpus(x) ::: x is an impus\nAggressive(x) ::: x is aggressive\nYumpus(x) ::: x is a yumpus\nFae(x) ::: x is Fae\nPremises:\n∀x (Wumpus(x) → ¬Sour(x)) ::: Wumpuses are not sour.\n∀x (Wumpus(x) → Rompus(x)) ::: Each wumpus is a rompus.\n∀x (Rompus(x) → Dull(x)) ::: Rompuses are dull.\n∀x (Rompus(x) → Dumpus(x)) ::: Each rompus is a dumpus.\n∀x (Dumpus(x) → Feisty(x)) ::: Every dumpus is feisty.\n∀x (Jompus(x) → Aggressive(x)) ::: Jompuses are aggressive.\n∀x (Dumpus(x) → Tumpus(x)) ::: Dumpuses are tumpuses.\n∀x (Tumpus(x) → Opaque(x)) ::: Tumpuses are opaque.\n∀x (Tumpus(x) → Numpus(x)) ::: Every tumpus is a numpus.\n∀x (Numpus(x) → Hot(x)) ::: Numpuses are hot.\n∀x (Numpus(x) → Zumpus(x)) ::: Numpuses are zumpuses.\n∀x (Zumpus(x) → Large(x)) ::: Zumpuses are large.\n∀x (Zumpus(x) → Vumpus(x)) ::: Every zumpus is a vumpus.\n∀x (Vumpus(x) → Blue(x)) ::: Vumpuses are blue.\n∀x (Vumpus(x) → Impus(x)) ::: Every vumpus is an impus.\n∀x (Impus(x) → ¬Aggressive(x)) ::: Impuses are not aggressive.\n∀x (Impus(x) → Yumpus(x)) ::: Impuses are yumpuses.\nTumpus(fae) ::: Fae is a tumpus.\nConclusion:\n¬Aggressive(fae) ::: Fae is not aggressive.\n------"
    ]
  },
  {
    "id": "ProntoQA_28",
    "context": "Each impus is small. Each zumpus is not fruity. Every zumpus is a numpus. Each numpus is bitter. Numpuses are rompuses. Rompuses are kind. Rompuses are wumpuses. Every wumpus is not wooden. Wumpuses are yumpuses. Every yumpus is not temperate. Yumpuses are dumpuses. Every dumpus is dull. Dumpuses are tumpuses. Tumpuses are not small. Tumpuses are jompuses. Every jompus is nervous. Each jompus is a vumpus. Alex is a rompus.",
    "question": "Is the following statement true or false? Alex is small.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nImpus(x) ::: x is an impus\nZumpus(x) ::: x is a zumpus\nFruity(x) ::: x is fruity\nNumpus(x) ::: x is a numpus\nBitter(x) ::: x is bitter\nRompus(x) ::: x is a rompus\nKind(x) ::: x is kind\nWumpus(x) ::: x is a wumpus\nWooden(x) ::: x is wooden\nYumpus(x) ::: x is a yumpus\nTemperate(x) ::: x is temperate\nDumpus(x) ::: x is a dumpus\nDull(x) ::: x is dull\nTumpus(x) ::: x is a tumpus\nSmall(x) ::: x is small\nJompus(x) ::: x is a jompus\nNervous(x) ::: x is nervous\nVumpus(x) ::: x is a vumpus\nPremises:\n∀x (Impus(x) → Small(x)) ::: Each impus is small.\n∀x (Zumpus(x) → ¬Fruity(x)) ::: Each zumpus is not fruity.\n∀x (Zumpus(x) → Numpus(x)) ::: Every zumpus is a numpus.\n∀x (Numpus(x) → Bitter(x)) ::: Each numpus is bitter.\n∀x (Numpus(x) → Rompus(x)) ::: Numpuses are rompuses.\n∀x (Rompus(x) → Kind(x)) ::: Rompuses are kind.\n∀x (Rompus(x) → Wumpus(x)) ::: Rompuses are wumpuses.\n∀x (Wumpus(x) → ¬Wooden(x)) ::: Every wumpus is not wooden.\n∀x (Wumpus(x) → Yumpus(x)) ::: Wumpuses are yumpuses.\n∀x (Yumpus(x) → ¬Temperate(x)) ::: Every yumpus is not temperate.\n∀x (Yumpus(x) → Dumpus(x)) ::: Yumpuses are dumpuses.\n∀x (Dumpus(x) → Dull(x)) ::: Every dumpus is dull.\n∀x (Dumpus(x) → Tumpus(x)) ::: Dumpuses are tumpuses.\n∀x (Tumpus(x) → ¬Small(x)) ::: Tumpuses are not small.\n∀x (Tumpus(x) → Jompus(x)) ::: Tumpuses are jompuses.\n∀x (Jompus(x) → Nervous(x)) ::: Every jompus is nervous.\n∀x (Jompus(x) → Vumpus(x)) ::: Each jompus is a vumpus.\nRompus(alex) ::: Alex is a rompus.\nConclusion:\nSmall(alex) ::: Alex is small.\n------"
    ]
  },
  {
    "id": "ProntoQA_29",
    "context": "Every jompus is liquid. Jompuses are rompuses. Every rompus is mean. Rompuses are zumpuses. Each zumpus is transparent. Zumpuses are tumpuses. Tumpuses are not earthy. Each dumpus is bright. Tumpuses are yumpuses. Yumpuses are not bright. Yumpuses are impuses. Impuses are temperate. Impuses are numpuses. Every numpus is feisty. Numpuses are wumpuses. Max is a jompus.",
    "question": "Is the following statement true or false? Max is bright.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nJompus(x) ::: x is a jompus\nLiquid(x) ::: x is liquid\nRompus(x) ::: x is a rompus\nMean(x) ::: x is mean\nZumpus(x) ::: x is a zumpus\nTransparent(x) ::: x is transparent\nTumpus(x) ::: x is a tumpus\nEarthy(x) ::: x is earthy\nDumpus(x) ::: x is a dumpus\nBright(x) ::: x is bright\nYumpus(x) ::: x is a yumpus\nImpus(x) ::: x is an impus\nTemperate(x) ::: x is temperate\nNumpus(x) ::: x is a numpus\nFeisty(x) ::: x is feisty\nWumpus(x) ::: x is a wumpus\nPremises:\n∀x (Jompus(x) → Liquid(x)) ::: Every jompus is liquid.\n∀x (Jompus(x) → Rompus(x)) ::: Jompuses are rompuses.\n∀x (Rompus(x) → Mean(x)) ::: Every rompus is mean.\n∀x (Zumpus(x) → Transparent(x)) ::: Rompuses are zumpuses.\n∀x (Zumpus(x) → Tumpus(x)) ::: Each zumpus is a tumpus.\n∀x (Tumpus(x) → ¬Earthy(x)) ::: Tumpuses are not earthy.\n∀x (Dumpus(x) → Bright(x)) ::: Each dumpus is bright.\n∀x (Tumpus(x) → Yumpus(x)) ::: Tumpuses are yumpuses.\n∀x (Yumpus(x) → ¬Bright(x)) ::: Yumpuses are not bright.\n∀x (Yumpus(x) → Impus(x)) ::: Yumpuses are impuses.\n∀x (Impus(x) → Temperate(x)) ::: Impuses are temperate.\n∀x (Impus(x) → Numpus(x)) ::: Impuses are numpuses.\n∀x (Numpus(x) → Feisty(x)) ::: Every numpus is feisty.\n∀x (Numpus(x) → Wumpus(x)) ::: Numpuses are wumpuses.\nJompus(max) ::: Max is a jompus.\nConclusion:\nBright(max) ::: Max is bright.\n------"
    ]
  },
  {
    "id": "ProntoQA_30",
    "context": "Impuses are bright. Every impus is a jompus. Jompuses are mean. Every zumpus is not temperate. Each jompus is a vumpus. Vumpuses are transparent. Every vumpus is a tumpus. Every tumpus is shy. Tumpuses are numpuses. Each numpus is not blue. Every numpus is a dumpus. Dumpuses are not fruity. Each dumpus is a wumpus. Wumpuses are temperate. Wumpuses are rompuses. Rompuses are metallic. Rompuses are yumpuses. Fae is a vumpus.",
    "question": "Is the following statement true or false? Fae is temperate.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nImpus(x) ::: x is an impus\nBright(x) ::: x is bright\nJompus(x) ::: x is a jompus\nMean(x) ::: x is mean\nZumpus(x) ::: x is a zumpus\nTemperate(x) ::: x is temperate\nVumpus(x) ::: x is a vumpus\nTransparent(x) ::: x is transparent\nTumpus(x) ::: x is a tumpus\nShy(x) ::: x is shy\nNumpus(x) ::: x is a numpus\nBlue(x) ::: x is blue\nDumpus(x) ::: x is a dumpus\nFruity(x) ::: x is fruity\nWumpus(x) ::: x is a wumpus\nRompus(x) ::: x is a rompus\nMetallic(x) ::: x is metallic\nYumpus(x) ::: x is a yumpus\nPremises:\n∀x (Impus(x) → Bright(x)) ::: Impuses are bright.\n∀x (Impus(x) → Jompus(x)) ::: Every impus is a jompus.\n∀x (Jompus(x) → Mean(x)) ::: Jompuses are mean.\n∀x (Zumpus(x) → ¬Temperate(x)) ::: Every zumpus is not temperate.\n∀x (Jompus(x) → Vumpus(x)) ::: Each jompus is a vumpus.\n∀x (Vumpus(x) → Transparent(x)) ::: Vumpuses are transparent.\n∀x (Vumpus(x) → Tumpus(x)) ::: Every vumpus is a tumpus.\n∀x (Tumpus(x) → Shy(x)) ::: Tumpuses are shy.\n∀x (Tumpus(x) → Numpus(x)) ::: Tumpuses are numpuses.\n∀x (Numpus(x) → ¬Blue(x)) ::: Each numpus is not blue.\n∀x (Numpus(x) → Dumpus(x)) ::: Every numpus is a dumpus.\n∀x (Dumpus(x) → ¬Fruity(x)) ::: Dumpuses are not fruity.\n∀x (Dumpus(x) → Wumpus(x)) ::: Each dumpus is a wumpus.\n∀x (Wumpus(x) → Temperate(x)) ::: Wumpuses are temperate.\n∀x (Wumpus(x) → Rompus(x)) ::: Wumpuses are rompuses.\n∀x (Rompus(x) → Metallic(x)) ::: Rompuses are metallic.\n∀x (Rompus(x) → Yumpus(x)) ::: Rompuses are yumpuses.\nVumpus(fae) ::: Fae is a vumpus.\nConclusion:\nTemperate(fae) ::: Fae is temperate.\n------"
    ]
  },
  {
    "id": "ProntoQA_31",
    "context": "Each jompus is not small. Each wumpus is angry. Each jompus is a zumpus. Zumpuses are temperate. Zumpuses are tumpuses. Tumpuses are brown. Tumpuses are yumpuses. Yumpuses are wooden. Yumpuses are dumpuses. Each dumpus is not angry. Every dumpus is a numpus. Numpuses are not dull. Every numpus is a vumpus. Wren is a jompus.",
    "question": "Is the following statement true or false? Wren is not angry.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nJompus(x) ::: x is a jompus\nSmall(x) ::: x is small\nWumpus(x) ::: x is a wumpus\nAngry(x) ::: x is angry\nZumpus(x) ::: x is a zumpus\nTemperate(x) ::: x is temperate\nTumpus(x) ::: x is a tumpus\nBrown(x) ::: x is brown\nYumpus(x) ::: x is a yumpus\nWooden(x) ::: x is wooden\nDumpus(x) ::: x is a dumpus\nNumpus(x) ::: x is a numpus\nDull(x) ::: x is dull\nVumpus(x) ::: x is a vumpus\nPremises:\n∀x (Jompus(x) → ¬Small(x)) ::: Each jompus is not small.\n∀x (Wumpus(x) → Angry(x)) ::: Each wumpus is angry.\n∀x (Jompus(x) → Zumpus(x)) ::: Each jompus is a zumpus.\n∀x (Zumpus(x) → Temperate(x)) ::: Zumpuses are temperate.\n∀x (Zumpus(x) → Tumpus(x)) ::: Zumpuses are tumpuses.\n∀x (Tumpus(x) → Brown(x)) ::: Tumpuses are brown.\n∀x (Tumpus(x) → Yumpus(x)) ::: Tumpuses are yumpuses.\n∀x (Yumpus(x) → Wooden(x)) ::: Yumpuses are wooden.\n∀x (Yumpus(x) → Dumpus(x)) ::: Yumpuses are dumpuses.\n∀x (Dumpus(x) → ¬Angry(x)) ::: Each dumpus is not angry.\n∀x (Dumpus(x) → Numpus(x)) ::: Every dumpus is a numpus.\n∀x (Numpus(x) → ¬Dull(x)) ::: Numpuses are not dull.\n∀x (Numpus(x) → Vumpus(x)) ::: Every numpus is a vumpus.\nJompus(wren) ::: Wren is a jompus.\nConclusion:\n¬Angry(wren) ::: Wren is not angry.\n------"
    ]
  },
  {
    "id": "ProntoQA_32",
    "context": "Numpuses are earthy. Numpuses are vumpuses. Vumpuses are transparent. Each vumpus is a tumpus. Tumpuses are small. Tumpuses are dumpuses. Each dumpus is not aggressive. Dumpuses are wumpuses. Every wumpus is not wooden. Every wumpus is a jompus. Jompuses are not nervous. Each jompus is a zumpus. Each zumpus is temperate. Rompuses are wooden. Zumpuses are impuses. Each impus is blue. Impuses are yumpuses. Sally is a numpus.",
    "question": "Is the following statement true or false? Sally is not wooden.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nNumpus(x) ::: x is a numpus\nEarthy(x) ::: x is earthy\nVumpus(x) ::: x is a vumpus\nTransparent(x) ::: x is transparent\nTumpus(x) ::: x is a tumpus\nSmall(x) ::: x is small\nDumpus(x) ::: x is a dumpus\nAggressive(x) ::: x is aggressive\nWumpus(x) ::: x is a wumpus\nWooden(x) ::: x is wooden\nJompus(x) ::: x is a jompus\nNervous(x) ::: x is nervous\nZumpus(x) ::: x is a zumpus\nTemperate(x) ::: x is temperate\nRompus(x) ::: x is a rompus\nImpus(x) ::: x is an impus\nBlue(x) ::: x is blue\nYumpus(x) ::: x is a yumpus\nPremises:\n∀x (Numpus(x) → Earthy(x)) ::: Numpuses are earthy.\n∀x (Numpus(x) → Vumpus(x)) ::: Numpuses are vumpuses.\n∀x (Vumpus(x) → Transparent(x)) ::: Vumpuses are transparent.\n∀x (Vumpus(x) → Tumpus(x)) ::: Each vumpus is a tumpus.\n∀x (Tumpus(x) → Small(x)) ::: Tumpuses are small.\n∀x (Tumpus(x) → Dumpus(x)) ::: Tumpuses are dumpuses.\n∀x (Dumpus(x) → ¬Aggressive(x)) ::: Each dumpus is not aggressive.\n∀x (Dumpus(x) → Wumpus(x)) ::: Dumpuses are wumpuses.\n∀x (Wumpus(x) → ¬Wooden(x)) ::: Every wumpus is not wooden.\n∀x (Wumpus(x) → Jompus(x)) ::: Every wumpus is a jompus.\n∀x (Jompus(x) → ¬Nervous(x)) ::: Jompuses are not nervous.\n∀x (Jompus(x) → Zumpus(x)) ::: Each jompus is a zumpus.\n∀x (Zumpus(x) → Temperate(x)) ::: Each zumpus is temperate.\n∀x (Rompus(x) → Wooden(x)) ::: Rompuses are wooden.\n∀x (Zumpus(x) → Impus(x)) ::: Zumpuses are impuses.\n∀x (Impus(x) → Blue(x)) ::: Each impus is blue.\n∀x (Impus(x) → Yumpus(x)) ::: Impuses are yumpuses.\nNumpus(sally) ::: Sally is a numpus.\nConclusion:\n¬Wooden(sally) ::: Sally is not wooden.\n------"
    ]
  },
  {
    "id": "ProntoQA_33",
    "context": "Every yumpus is not temperate. Yumpuses are rompuses. Every rompus is large. Every rompus is an impus. Impuses are not blue. Impuses are tumpuses. Tumpuses are nervous. Tumpuses are wumpuses. Wumpuses are bright. Numpuses are not bright. Each wumpus is a zumpus. Every zumpus is not fruity. Zumpuses are dumpuses. Dumpuses are opaque. Dumpuses are vumpuses. Vumpuses are mean. Vumpuses are jompuses. Stella is a yumpus.",
    "question": "Is the following statement true or false? Stella is not bright.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nYumpus(x) ::: x is a yumpus\nTemperate(x) ::: x is temperate\nRompus(x) ::: x is a rompus\nLarge(x) ::: x is large\nImpus(x) ::: x is an impus\nBlue(x) ::: x is blue\nTumpus(x) ::: x is a tumpus\nNervous(x) ::: x is nervous\nWumpus(x) ::: x is a wumpus\nBright(x) ::: x is bright\nNumpus(x) ::: x is a numpus\nFruity(x) ::: x is fruity\nZumpus(x) ::: x is a zumpus\nDumpus(x) ::: x is a dumpus\nOpaque(x) ::: x is opaque\nVumpus(x) ::: x is a vumpus\nMean(x) ::: x is mean\nJompus(x) ::: x is a jompus\nStella(x) ::: x is Stella\nPremises:\n∀x (Yumpus(x) → ¬Temperate(x)) ::: Every yumpus is not temperate.\n∀x (Yumpus(x) → Rompus(x)) ::: Yumpuses are rompuses.\n∀x (Rompus(x) → Large(x)) ::: Every rompus is large.\n∀x (Rompus(x) → Impus(x)) ::: Every rompus is an impus.\n∀x (Impus(x) → ¬Blue(x)) ::: Impuses are not blue.\n∀x (Impus(x) → Tumpus(x)) ::: Impuses are tumpuses.\n∀x (Tumpus(x) → Nervous(x)) ::: Tumpuses are nervous.\n∀x (Tumpus(x) → Wumpus(x)) ::: Tumpuses are wumpuses.\n∀x (Wumpus(x) → Bright(x)) ::: Wumpuses are bright.\n∀x (Numpus(x) → ¬Bright(x)) ::: Numpuses are not bright.\n∀x (Wumpus(x) → Zumpus(x)) ::: Each wumpus is a zumpus.\n∀x (Zumpus(x) → ¬Fruity(x)) ::: Zumpuses are not fruity.\n∀x (Zumpus(x) → Dumpus(x)) ::: Zumpuses are dumpuses.\n∀x (Dumpus(x) → Opaque(x)) ::: Dumpuses are opaque.\n∀x (Dumpus(x) → Vumpus(x)) ::: Dumpuses are vumpuses.\n∀x (Vumpus(x) → Mean(x)) ::: Vumpuses are mean.\n∀x (Vumpus(x) → Jompus(x)) ::: Vumpuses are jompuses.\nYumpus(stella) ::: Stella is a yumpus.\nConclusion:\n¬Bright(stella) ::: Stella is not bright.\n------"
    ]
  },
  {
    "id": "ProntoQA_34",
    "context": "Impuses are bright. Every impus is a rompus. Rompuses are floral. Each rompus is a yumpus. Every yumpus is opaque. Yumpuses are numpuses. Each numpus is red. Every numpus is a dumpus. Dumpuses are bitter. Every dumpus is a vumpus. Vumpuses are not mean. Vumpuses are tumpuses. Tumpuses are not shy. Each wumpus is shy. Tumpuses are zumpuses. Each zumpus is temperate. Zumpuses are jompuses. Sam is a yumpus.",
    "question": "Is the following statement true or false? Sam is shy.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nImpus(x) ::: x is an impus\nBright(x) ::: x is bright\nRompus(x) ::: x is a rompus\nFloral(x) ::: x is floral\nYumpus(x) ::: x is a yumpus\nOpaque(x) ::: x is opaque\nNumpus(x) ::: x is a numpus\nRed(x) ::: x is red\nDumpus(x) ::: x is a dumpus\nBitter(x) ::: x is bitter\nVumpus(x) ::: x is a vumpus\nMean(x) ::: x is mean\nTumpus(x) ::: x is a tumpus\nShy(x) ::: x is shy\nWumpus(x) ::: x is a wumpus\nZumpus(x) ::: x is a zumpus\nTemperate(x) ::: x is temperate\nJompus(x) ::: x is a jompus\nPremises:\n∀x (Impus(x) → Bright(x)) ::: Impuses are bright.\n∀x (Impus(x) → Rompus(x)) ::: Every impus is a rompus.\n∀x (Rompus(x) → Floral(x)) ::: Rompuses are floral.\n∀x (Rompus(x) → Yumpus(x)) ::: Each rompus is a yumpus.\n∀x (Yumpus(x) → Opaque(x)) ::: Yumpuses are opaque.\n∀x (Yumpus(x) → Numpus(x)) ::: Yumpuses are numpuses.\n∀x (Numpus(x) → Red(x)) ::: Each numpus is red.\n∀x (Numpus(x) → Dumpus(x)) ::: Every numpus is a dumpus.\n∀x (Dumpus(x) → Bitter(x)) ::: Dumpuses are bitter.\n∀x (Dumpus(x) → Vumpus(x)) ::: Every dumpus is a vumpus.\n∀x (Vumpus(x) → ¬Mean(x)) ::: Vumpuses are not mean.\n∀x (Vumpus(x) → Tumpus(x)) ::: Vumpuses are tumpuses.\n∀x (Tumpus(x) → ¬Shy(x)) ::: Tumpuses are not shy.\n∀x (Wumpus(x) → Shy(x)) ::: Each wumpus is shy.\n∀x (Tumpus(x) → Zumpus(x)) ::: Tumpuses are zumpuses.\n∀x (Zumpus(x) → Temperate(x)) ::: Zumpuses are temperate.\n∀x (Zumpus(x) → Jompus(x)) ::: Zumpuses are jompuses.\nYumpus(sam) ::: Sam is a yumpus.\nConclusion:\nShy(sam) ::: Sam is shy.\n------"
    ]
  },
  {
    "id": "ProntoQA_35",
    "context": "Each zumpus is not wooden. Every zumpus is a vumpus. Every vumpus is not sour. Every vumpus is a jompus. Every jompus is floral. Each jompus is a wumpus. Every wumpus is transparent. Wumpuses are impuses. Impuses are dull. Every impus is a yumpus. Each yumpus is feisty. Numpuses are not orange. Every yumpus is a dumpus. Dumpuses are orange. Each dumpus is a rompus. Each rompus is not aggressive. Rompuses are tumpuses. Fae is a jompus.",
    "question": "Is the following statement true or false? Fae is orange.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nZumpus(x) ::: x is a zumpus\nWooden(x) ::: x is wooden\nVumpus(x) ::: x is a vumpus\nSour(x) ::: x is sour\nJompus(x) ::: x is a jompus\nFloral(x) ::: x is floral\nWumpus(x) ::: x is a wumpus\nTransparent(x) ::: x is transparent\nImpus(x) ::: x is an impus\nDull(x) ::: x is dull\nYumpus(x) ::: x is a yumpus\nFeisty(x) ::: x is feisty\nNumpus(x) ::: x is a numpus\nOrange(x) ::: x is orange\nDumpus(x) ::: x is a dumpus\nRompus(x) ::: x is a rompus\nAggressive(x) ::: x is aggressive\nTumpus(x) ::: x is a tumpus\nFae(x) ::: x is Fae\nPremises:\n∀x (Zumpus(x) → ¬Wooden(x)) ::: Each zumpus is not wooden.\n∀x (Zumpus(x) → Vumpus(x)) ::: Every zumpus is a vumpus.\n∀x (Vumpus(x) → ¬Sour(x)) ::: Every vumpus is not sour.\n∀x (Vumpus(x) → Jompus(x)) ::: Every vumpus is a jompus.\n∀x (Jompus(x) → Floral(x)) ::: Every jompus is floral.\n∀x (Jompus(x) → Wumpus(x)) ::: Each jompus is a wumpus.\n∀x (Wumpus(x) → Transparent(x)) ::: Every wumpus is transparent.\n∀x (Wumpus(x) → Impus(x)) ::: Wumpuses are impuses.\n∀x (Impus(x) → Dull(x)) ::: Impuses are dull.\n∀x (Impus(x) → Yumpus(x)) ::: Every impus is a yumpus.\n∀x (Yumpus(x) → Feisty(x)) ::: Each yumpus is feisty.\n∀x (Numpus(x) → ¬Orange(x)) ::: Numpuses are not orange.\n∀x (Yumpus(x) → Dumpus(x)) ::: Every yumpus is a dumpus.\n∀x (Dumpus(x) → Orange(x)) ::: Dumpuses are orange.\n∀x (Dumpus(x) → Rompus(x)) ::: Each dumpus is a rompus.\n∀x (Rompus(x) → ¬Aggressive(x)) ::: Each rompus is not aggressive.\n∀x (Rompus(x) → Tumpus(x)) ::: Rompuses are tumpuses.\nJompus(fae) ::: Fae is a jompus.\nConclusion:\nOrange(fae) ::: Fae is orange.\n------"
    ]
  },
  {
    "id": "ProntoQA_36",
    "context": "Every jompus is bright. Every jompus is a wumpus. Each wumpus is wooden. Each wumpus is a yumpus. Yumpuses are amenable. Yumpuses are impuses. Impuses are temperate. Impuses are tumpuses. Tumpuses are shy. Every tumpus is a rompus. Rompuses are not small. Every rompus is a numpus. Numpuses are fruity. Each dumpus is not shy. Numpuses are vumpuses. Sally is a jompus.",
    "question": "Is the following statement true or false? Sally is shy.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nJompus(x) ::: x is a jompus\nBright(x) ::: x is bright\nWumpus(x) ::: x is a wumpus\nWooden(x) ::: x is wooden\nYumpus(x) ::: x is a yumpus\nAmenable(x) ::: x is amenable\nImpus(x) ::: x is an impus\nTemperate(x) ::: x is temperate\nTumpus(x) ::: x is a tumpus\nShy(x) ::: x is shy\nRompus(x) ::: x is a rompus\nSmall(x) ::: x is small\nNumpus(x) ::: x is a numpus\nFruity(x) ::: x is fruity\nDumpus(x) ::: x is a dumpus\nPremises:\n∀x (Jompus(x) → Bright(x)) ::: Every jompus is bright.\n∀x (Jompus(x) → Wumpus(x)) ::: Every jompus is a wumpus.\n∀x (Wumpus(x) → Wooden(x)) ::: Each wumpus is wooden.\n∀x (Wumpus(x) → Yumpus(x)) ::: Each wumpus is a yumpus.\n∀x (Yumpus(x) → Amenable(x)) ::: Yumpuses are amenable.\n∀x (Yumpus(x) → Impus(x)) ::: Yumpuses are impuses.\n∀x (Impus(x) → Temperate(x)) ::: Impuses are temperate.\n∀x (Impus(x) → Tumpus(x)) ::: Impuses are tumpuses.\n∀x (Tumpus(x) → Shy(x)) ::: Tumpuses are shy.\n∀x (Tumpus(x) → Rompus(x)) ::: Every tumpus is a rompus.\n∀x (Rompus(x) → ¬Small(x)) ::: Rompuses are not small.\n∀x (Numpus(x) → Vumpus(x)) ::: Numpuses are vumpuses.\nJompus(sally) ::: Sally is a jompus.\nConclusion:\nShy(sally) ::: Sally is shy.\n------"
    ]
  },
  {
    "id": "ProntoQA_37",
    "context": "Impuses are not fruity. Impuses are wumpuses. Each wumpus is not temperate. Wumpuses are dumpuses. Rompuses are not sweet. Dumpuses are kind. Dumpuses are zumpuses. Zumpuses are wooden. Zumpuses are vumpuses. Every vumpus is large. Vumpuses are yumpuses. Yumpuses are transparent. Yumpuses are numpuses. Numpuses are brown. Numpuses are tumpuses. Tumpuses are sweet. Tumpuses are jompuses. Wren is a zumpus.",
    "question": "Is the following statement true or false? Wren is sweet.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nImpus(x) ::: x is an impus\nFruity(x) ::: x is fruity\nWumpus(x) ::: x is a wumpus\nTemperate(x) ::: x is temperate\nDumpus(x) ::: x is a dumpus\nRompus(x) ::: x is a rompus\nSweet(x) ::: x is sweet\nKind(x) ::: x is kind\nZumpus(x) ::: x is a zumpus\nWooden(x) ::: x is wooden\nVumpus(x) ::: x is a vumpus\nLarge(x) ::: x is large\nYumpus(x) ::: x is a yumpus\nTransparent(x) ::: x is transparent\nNumpus(x) ::: x is a numpus\nBrown(x) ::: x is brown\nTumpus(x) ::: x is a tumpus\nSweet(x) ::: x is sweet\nJompus(x) ::: x is a jompus\nPremises:\n∀x (Impus(x) → ¬Fruity(x)) ::: Impuses are not fruity.\n∀x (Wumpus(x) → ¬Temperate(x)) ::: Wumpuses are not temperate.\n∀x (Wumpus(x) → Dumpus(x)) ::: Each wumpus is a dumpus.\n∀x (Rompus(x) → ¬Sweet(x)) ::: Rompuses are not sweet.\n∀x (Dumpus(x) → Kind(x)) ::: Dumpuses are kind.\n∀x (Dumpus(x) → Zumpus(x)) ::: Dumpuses are zumpuses.\n∀x (Zumpus(x) → Wooden(x)) ::: Zumpuses are wooden.\n∀x (Zumpus(x) → Vumpus(x)) ::: Zumpuses are vumpuses.\n∀x (Vumpus(x) → Large(x)) ::: Every vumpus is large.\n∀x (Vumpus(x) → Yumpus(x)) ::: Vumpuses are yumpuses.\n∀x (Yumpus(x) → Transparent(x)) ::: Yumpuses are transparent.\n∀x (Yumpus(x) → Numpus(x)) ::: Yumpuses are numpuses.\n∀x (Numpus(x) → Brown(x)) ::: Numpuses are brown.\n∀x (Numpus(x) → Tumpus(x)) ::: Numpuses are tumpuses.\n∀x (Tumpus(x) → Sweet(x)) ::: Tumpuses are sweet.\n∀x (Tumpus(x) → Jompus(x)) ::: Tumpuses are jompuses.\nZumpus(wren) ::: Wren is a zumpus.\nConclusion:\nSweet(wren) ::: Wren is sweet.\n------"
    ]
  },
  {
    "id": "ProntoQA_38",
    "context": "Vumpuses are wooden. Every vumpus is a jompus. Jompuses are earthy. Each jompus is a wumpus. Wumpuses are not transparent. Wumpuses are yumpuses. Yumpuses are not bright. Each yumpus is an impus. Every rompus is happy. Impuses are not happy. Each impus is a dumpus. Dumpuses are brown. Dumpuses are zumpuses. Zumpuses are not sour. Zumpuses are numpuses. Every numpus is not angry. Numpuses are tumpuses. Polly is a vumpus.",
    "question": "Is the following statement true or false? Polly is not happy.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "------\n### Predicates:\nVumpus(x) ::: x is a vumpus\nWooden(x) ::: x is wooden\nJompus(x) ::: x is a jompus\nEarthy(x) ::: x is earthy\nWumpus(x) ::: x is a wumpus\nTransparent(x) ::: x is transparent\nYumpus(x) ::: x is a yumpus\nBright(x) ::: x is bright\nImpus(x) ::: x is an impus\nRompus(x) ::: x is a rompus\nHappy(x) ::: x is happy\nDumpus(x) ::: x is a dumpus\nBrown(x) ::: x is brown\nZumpus(x) ::: x is a zumpus\nSour(x) ::: x is sour\nNumpus(x) ::: x is a numpus\nAngry(x) ::: x is angry\nTumpus(x) ::: x is a tumpus\nPremises:\n∀x (Vumpus(x) → Wooden(x)) ::: Vumpuses are wooden.\n∀x (Vumpus(x) → Jompus(x)) ::: Every vumpus is a jompus.\n∀x (Jompus(x) → Earthy(x)) ::: Jompuses are earthy.\n∀x (Jompus(x) → Wumpus(x)) ::: Each jompus is a wumpus.\n∀x (Wumpus(x) → ¬Transparent(x)) ::: Wumpuses are not transparent.\n∀x (Wumpus(x) → Yumpus(x)) ::: Wumpuses are yumpuses.\n∀x (Yumpus(x) → ¬Bright(x)) ::: Yumpuses are not bright.\n∀x (Yumpus(x) → Impus(x)) ::: Each yumpus is an impus.\n∀x (Rompus(x) → Happy(x)) ::: Every rompus is happy.\n∀x (Impus(x) → ¬Happy(x)) ::: Impuses are not happy.\n∀x (Impus(x) → Dumpus(x)) ::: Each impus is a dumpus.\n∀x (Dumpus(x) → Brown(x)) ::: Dumpuses are brown.\n∀x (Dumpus(x) → Zumpus(x)) ::: Dumpuses are zumpuses.\n∀x (Zumpus(x) → ¬Sour(x)) ::: Zumpuses are not sour.\n∀x (Zumpus(x) → Numpus(x)) ::: Zumpuses are numpuses.\n∀x (Numpus(x) → ¬Angry(x)) ::: Every numpus is not angry.\n∀x (Numpus(x) → Tumpus(x)) ::: Numpuses are tumpuses.\nVumpus(polly) ::: Polly is a vumpus.\nConclusion:\n¬Happy(polly) ::: Polly is not happy.\n------"
    ]
  },
  {
    "id": "ProntoQA_39",
    "context": "Each rompus is amenable. Each rompus is an impus. Impuses are happy. Every impus is a wumpus. Wumpuses are sour. Each wumpus is a zumpus. Zumpuses are fruity. Zumpuses are tumpuses. Each tumpus is not large. Every tumpus is a vumpus. Yumpuses are not hot. Every vumpus is liquid. Every vumpus is a jompus. Jompuses are hot. Jompuses are dumpuses. Stella is a wumpus.",
    "question": "Is the following statement true or false? Stella is not hot.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nRompus(x) ::: x is a rompus\nAmenable(x) ::: x is amenable\nImpus(x) ::: x is an impus\nHappy(x) ::: x is happy\nWumpus(x) ::: x is a wumpus\nSour(x) ::: x is sour\nZumpus(x) ::: x is a zumpus\nFruity(x) ::: x is fruity\nTumpus(x) ::: x is a tumpus\nLarge(x) ::: x is large\nVumpus(x) ::: x is a vumpus\nHot(x) ::: x is hot\nJompus(x) ::: x is a jompus\nDumpus(x) ::: x is a dumpus\nStella(x) ::: x is Stella\nPremises:\n∀x (Rompus(x) → Amenable(x)) ::: Each rompus is amenable.\n∀x (Rompus(x) → Impus(x)) ::: Each rompus is an impus.\n∀x (Impus(x) → Happy(x)) ::: Impuses are happy.\n∀x (Impus(x) → Wumpus(x)) ::: Every impus is a wumpus.\n∀x (Wumpus(x) → Sour(x)) ::: Wumpuses are sour.\n∀x (Wumpus(x) → Zumpus(x)) ::: Each wumpus is a zumpus.\n∀x (Zumpus(x) → Fruity(x)) ::: Zumpuses are fruity.\n∀x (Zumpus(x) → Tumpus(x)) ::: Zumpuses are tumpuses.\n∀x (Tumpus(x) → ¬Large(x)) ::: Each tumpus is not large.\n∀x (Vumpus(x) → Hot(x)) ::: Every vumpus is hot.\n∀x (Vumpus(x) → Liquid(x)) ::: Every vumpus is liquid.\n∀x (Vumpus(x) → Jompus(x)) ::: Every vumpus is a jompus.\n∀x (Jompus(x) → Hot(x)) ::: Jompuses are hot.\n∀x (Jompus(x) → Dumpus(x)) ::: Jompuses are dumpuses.\nWumpus(stella) ::: Stella is a wumpus.\nConclusion:\n¬Hot(stella) ::: Stella is not hot.\n------"
    ]
  },
  {
    "id": "ProntoQA_40",
    "context": "Yumpuses are small. Yumpuses are vumpuses. Vumpuses are red. Vumpuses are numpuses. Numpuses are bitter. Each numpus is a wumpus. Each impus is not amenable. Every wumpus is bright. Every wumpus is a dumpus. Every dumpus is temperate. Dumpuses are rompuses. Rompuses are floral. Rompuses are tumpuses. Tumpuses are opaque. Each tumpus is a jompus. Every jompus is amenable. Every jompus is a zumpus. Sally is a wumpus.",
    "question": "Is the following statement true or false? Sally is amenable.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nYumpus(x) ::: x is a yumpus\nSmall(x) ::: x is small\nVumpus(x) ::: x is a vumpus\nRed(x) ::: x is red\nNumpus(x) ::: x is a numpus\nBitter(x) ::: x is bitter\nWumpus(x) ::: x is a wumpus\nImpus(x) ::: x is an impus\nAmenable(x) ::: x is amenable\nBright(x) ::: x is bright\nDumpus(x) ::: x is a dumpus\nTemperate(x) ::: x is temperate\nRompus(x) ::: x is a rompus\nFloral(x) ::: x is floral\nTumpus(x) ::: x is a tumpus\nOpaque(x) ::: x is opaque\nJompus(x) ::: x is a jompus\nZumpus(x) ::: x is a zumpus\nSally(x) ::: x is Sally\nPremises:\n∀x (Yumpus(x) → Small(x)) ::: Yumpuses are small.\n∀x (Yumpus(x) → Vumpus(x)) ::: Yumpuses are vumpuses.\n∀x (Vumpus(x) → Red(x)) ::: Vumpuses are red.\n∀x (Vumpus(x) → Numpus(x)) ::: Vumpuses are numpuses.\n∀x (Numpus(x) → Bitter(x)) ::: Numpuses are bitter.\n∀x (Numpus(x) → Wumpus(x)) ::: Each numpus is a wumpus.\n∀x (Impus(x) → ¬Amenable(x)) ::: Each impus is not amenable.\n∀x (Wumpus(x) → Bright(x)) ::: Every wumpus is bright.\n∀x (Wumpus(x) → Dumpus(x)) ::: Every wumpus is a dumpus.\n∀x (Dumpus(x) → Temperate(x)) ::: Every dumpus is temperate.\n∀x (Dumpus(x) → Rompus(x)) ::: Dumpuses are rompuses.\n∀x (Rompus(x) → Floral(x)) ::: Rompuses are floral.\n∀x (Rompus(x) → Tumpus(x)) ::: Rompuses are tumpuses.\n∀x (Tumpus(x) → Opaque(x)) ::: Tumpuses are opaque.\n∀x (Tumpus(x) → Jompus(x)) ::: Each tumpus is a jompus.\n∀x (Jompus(x) → Amenable(x)) ::: Every jompus is amenable.\n∀x (Jompus(x) → Zumpus(x)) ::: Every jompus is a zumpus.\nWumpus(sally) ::: Sally is a wumpus.\nConclusion:\nAmenable(sally) ::: Sally is amenable.\n------"
    ]
  },
  {
    "id": "ProntoQA_41",
    "context": "Rompuses are transparent. Every rompus is a yumpus. Yumpuses are earthy. Yumpuses are jompuses. Every jompus is not large. Each jompus is a wumpus. Each wumpus is not brown. Tumpuses are hot. Wumpuses are zumpuses. Every zumpus is dull. Zumpuses are numpuses. Numpuses are bitter. Every numpus is a dumpus. Dumpuses are not shy. Each dumpus is an impus. Impuses are not hot. Impuses are vumpuses. Max is a wumpus.",
    "question": "Is the following statement true or false? Max is not hot.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nRompus(x) ::: x is a rompus\nTransparent(x) ::: x is transparent\nYumpus(x) ::: x is a yumpus\nEarthy(x) ::: x is earthy\nJompus(x) ::: x is a jompus\nLarge(x) ::: x is large\nWumpus(x) ::: x is a wumpus\nBrown(x) ::: x is brown\nTumpus(x) ::: x is a tumpus\nHot(x) ::: x is hot\nZumpus(x) ::: x is a zumpus\nDull(x) ::: x is dull\nNumpus(x) ::: x is a numpus\nBitter(x) ::: x is bitter\nDumpus(x) ::: x is a dumpus\nShy(x) ::: x is shy\nImpus(x) ::: x is an impus\nVumpus(x) ::: x is a vumpus\nPremises:\n∀x (Rompus(x) → Transparent(x)) ::: Rompuses are transparent.\n∀x (Yumpus(x) → Earthy(x)) ::: Every rompus is a yumpus. Yumpuses are earthy.\n∀x (Yumpus(x) → Jompus(x)) ::: Yumpuses are jompuses.\n∀x (Jompus(x) → ¬Large(x)) ::: Every jompus is not large.\n∀x (Jompus(x) → Wumpus(x)) ::: Each jompus is a wumpus.\n∀x (Wumpus(x) → ¬Brown(x)) ::: Each wumpus is not brown.\n∀x (Tumpus(x) → Hot(x)) ::: Tumpuses are hot.\n∀x (Wumpus(x) → Zumpus(x)) ::: Wumpuses are zumpuses.\n∀x (Zumpus(x) → Dull(x)) ::: Every zumpus is dull.\n∀x (Zumpus(x) → Numpus(x)) ::: Zumpuses are numpuses.\n∀x (Numpus(x) → Bitter(x)) ::: Numpuses are bitter.\n∀x (Numpus(x) → Dumpus(x)) ::: Every numpus is a dumpus.\n∀x (Dumpus(x) → ¬Shy(x)) ::: Dumpuses are not shy.\n∀x (Dumpus(x) → Impus(x)) ::: Each dumpus is an impus.\n∀x (Impus(x) → ¬Hot(x)) ::: Impuses are not hot.\n∀x (Impus(x) → Vumpus(x)) ::: Impuses are vumpuses.\nWumpus(max) ::: Max is a wumpus.\nConclusion:\n¬Hot(max) ::: Max is not hot.\n------"
    ]
  },
  {
    "id": "ProntoQA_42",
    "context": "Tumpuses are dull. Tumpuses are jompuses. Jompuses are not sour. Each jompus is a vumpus. Vumpuses are feisty. Vumpuses are dumpuses. Dumpuses are cold. Each dumpus is a yumpus. Each yumpus is transparent. Each yumpus is a numpus. Numpuses are not amenable. Numpuses are zumpuses. Each zumpus is orange. Each zumpus is a rompus. Rompuses are earthy. Each impus is not orange. Rompuses are wumpuses. Wren is a vumpus.",
    "question": "Is the following statement true or false? Wren is not orange.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nTumpus(x) ::: x is a tumpus\nDull(x) ::: x is dull\nJompus(x) ::: x is a jompus\nSour(x) ::: x is sour\nVumpus(x) ::: x is a vumpus\nFeisty(x) ::: x is feisty\nDumpus(x) ::: x is a dumpus\nCold(x) ::: x is cold\nYumpus(x) ::: x is a yumpus\nTransparent(x) ::: x is transparent\nNumpus(x) ::: x is a numpus\nAmenable(x) ::: x is amenable\nZumpus(x) ::: x is a zumpus\nOrange(x) ::: x is orange\nRompus(x) ::: x is a rompus\nEarthy(x) ::: x is earthy\nImpus(x) ::: x is an impus\nPremises:\n∀x (Tumpus(x) → Dull(x)) ::: Tumpuses are dull.\n∀x (Tumpus(x) → Jompus(x)) ::: Tumpuses are jompuses.\n∀x (Jompus(x) → ¬Sour(x)) ::: Jompuses are not sour.\n∀x (Jompus(x) → Vumpus(x)) ::: Each jompus is a vumpus.\n∀x (Vumpus(x) → Feisty(x)) ::: Vumpuses are feisty.\n∀x (Vumpus(x) → Dumpus(x)) ::: Vumpuses are dumpuses.\n∀x (Dumpus(x) → Cold(x)) ::: Dumpuses are cold.\n∀x (Dumpus(x) → Yumpus(x)) ::: Each dumpus is a yumpus.\n∀x (Yumpus(x) → Transparent(x)) ::: Each yumpus is transparent.\n∀x (Yumpus(x) → Numpus(x)) ::: Each yumpus is a numpus.\n∀x (Numpus(x) → ¬Amenable(x)) ::: Numpuses are not amenable.\n∀x (Numpus(x) → Zumpus(x)) ::: Numpuses are zumpuses.\n∀x (Zumpus(x) → Orange(x)) ::: Each zumpus is orange.\n∀x (Zumpus(x) → Rompus(x)) ::: Each zumpus is a rompus.\n∀x (Rompus(x) → Earthy(x)) ::: Rompuses are earthy.\n∀x (Impus(x) → ¬Orange(x)) ::: Each impus is not orange.\n∀x (Rompus(x) → Wumpus(x)) ::: Rompuses are wumpuses.\nVumpus(wren) ::: Wren is a vumpus.\nConclusion:\n¬Orange(wren) ::: Wren is not orange.\n------"
    ]
  },
  {
    "id": "ProntoQA_43",
    "context": "Each impus is luminous. Every impus is a zumpus. Every zumpus is shy. Every zumpus is a numpus. Numpuses are not cold. Each numpus is a tumpus. Tumpuses are large. Each tumpus is a yumpus. Each yumpus is angry. Yumpuses are vumpuses. Vumpuses are not earthy. Vumpuses are jompuses. Every jompus is not sour. Dumpuses are not angry. Jompuses are rompuses. Rompuses are not opaque. Rompuses are wumpuses. Polly is an impus.",
    "question": "Is the following statement true or false? Polly is angry.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nImpus(x) ::: x is an impus\nLuminous(x) ::: x is luminous\nZumpus(x) ::: x is a zumpus\nShy(x) ::: x is shy\nNumpus(x) ::: x is a numpus\nCold(x) ::: x is cold\nTumpus(x) ::: x is a tumpus\nLarge(x) ::: x is large\nYumpus(x) ::: x is a yumpus\nAngry(x) ::: x is angry\nVumpus(x) ::: x is a vumpus\nEarthy(x) ::: x is earthy\nJompus(x) ::: x is a jompus\nSour(x) ::: x is sour\nDumpus(x) ::: x is a dumpus\nRompus(x) ::: x is a rompus\nOpaque(x) ::: x is opaque\nWumpus(x) ::: x is a wumpus\nPremises:\n∀x (Impus(x) → Luminous(x)) ::: Each impus is luminous.\n∀x (Impus(x) → Zumpus(x)) ::: Every impus is a zumpus.\n∀x (Zumpus(x) → Shy(x)) ::: Every zumpus is shy.\n∀x (Zumpus(x) → Numpus(x)) ::: Every zumpus is a numpus.\n∀x (Numpus(x) → ¬Cold(x)) ::: Numpuses are not cold.\n∀x (Numpus(x) → Tumpus(x)) ::: Each numpus is a tumpus.\n∀x (Tumpus(x) → Large(x)) ::: Tumpuses are large.\n∀x (Tumpus(x) → Yumpus(x)) ::: Each tumpus is a yumpus.\n∀x (Yumpus(x) → Angry(x)) ::: Each yumpus is angry.\n∀x (Yumpus(x) → Vumpus(x)) ::: Yumpuses are vumpuses.\n∀x (Vumpus(x) → ¬Earthy(x)) ::: Vumpuses are not earthy.\n∀x (Vumpus(x) → Jompus(x)) ::: Vumpuses are jompuses.\n∀x (Jompus(x) → ¬Sour(x)) ::: Every jompus is not sour.\n∀x (Dumpus(x) → ¬Angry(x)) ::: Dumpuses are not angry.\n∀x (Jompus(x) → Rompus(x)) ::: Jompuses are rompuses.\n∀x (Rompus(x) → ¬Opaque(x)) ::: Rompuses are not opaque.\n∀x (Rompus(x) → Wumpus(x)) ::: Rompuses are wumpuses.\nImpus(polly) ::: Polly is an impus.\nConclusion:\nAngry(polly) ::: Polly is angry.\n------"
    ]
  },
  {
    "id": "ProntoQA_44",
    "context": "Yumpuses are floral. Each yumpus is a vumpus. Vumpuses are not temperate. Vumpuses are jompuses. Jompuses are not dull. Impuses are not spicy. Jompuses are numpuses. Numpuses are not opaque. Each numpus is a wumpus. Every wumpus is amenable. Wumpuses are rompuses. Each rompus is not red. Rompuses are tumpuses. Tumpuses are spicy. Every tumpus is a dumpus. Dumpuses are shy. Each dumpus is a zumpus. Rex is a jompus.",
    "question": "Is the following statement true or false? Rex is not spicy.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nYumpus(x) ::: x is a yumpus\nFloral(x) ::: x is floral\nVumpus(x) ::: x is a vumpus\nTemperate(x) ::: x is temperate\nJompus(x) ::: x is a jompus\nDull(x) ::: x is dull\nImpus(x) ::: x is an impus\nSpicy(x) ::: x is spicy\nNumpus(x) ::: x is a numpus\nOpaque(x) ::: x is opaque\nWumpus(x) ::: x is a wumpus\nAmenable(x) ::: x is amenable\nRompus(x) ::: x is a rompus\nRed(x) ::: x is red\nTumpus(x) ::: x is a tumpus\nShy(x) ::: x is shy\nZumpus(x) ::: x is a zumpus\nPremises:\n∀x (Yumpus(x) → Floral(x)) ::: Yumpuses are floral.\n∀x (Yumpus(x) → Vumpus(x)) ::: Each yumpus is a vumpus.\n∀x (Vumpus(x) → ¬Temperate(x)) ::: Vumpuses are not temperate.\n∀x (Vumpus(x) → Jompus(x)) ::: Vumpuses are jompuses.\n∀x (Jompus(x) → ¬Dull(x)) ::: Jompuses are not dull.\n∀x (Impus(x) → ¬Spicy(x)) ::: Impuses are not spicy.\n∀x (Jompus(x) → Numpus(x)) ::: Jompuses are numpuses.\n∀x (Numpus(x) → ¬Opaque(x)) ::: Numpuses are not opaque.\n∀x (Numpus(x) → Wumpus(x)) ::: Each numpus is a wumpus.\n∀x (Wumpus(x) → Amenable(x)) ::: Every wumpus is amenable.\n∀x (Wumpus(x) → Rompus(x)) ::: Wumpuses are rompuses.\n∀x (Rompus(x) → ¬Red(x)) ::: Rompuses are not red.\n∀x (Rompus(x) → Tumpus(x)) ::: Rompuses are tumpuses.\n∀x (Tumpus(x) → Spicy(x)) ::: Tumpuses are spicy.\n∀x (Tumpus(x) → Dumpus(x)) ::: Every tumpus is a dumpus.\n∀x (Dumpus(x) → Shy(x)) ::: Dumpuses are shy.\n∀x (Dumpus(x) → Zumpus(x)) ::: Each dumpus is a zumpus.\nJompus(rex) ::: Rex is a jompus.\nConclusion:\n¬Spicy(rex) ::: Rex is not spicy.\n------"
    ]
  },
  {
    "id": "ProntoQA_45",
    "context": "Dumpuses are cold. Dumpuses are numpuses. Each numpus is not bitter. Every numpus is a zumpus. Zumpuses are fruity. Zumpuses are wumpuses. Wumpuses are large. Each tumpus is not wooden. Each wumpus is an impus. Every impus is wooden. Impuses are rompuses. Fae is a dumpus.",
    "question": "Is the following statement true or false? Fae is wooden.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant.lpg\n------"
    ]
  },
  {
    "id": "ProntoQA_46",
    "context": "Each rompus is nervous. Rompuses are jompuses. Jompuses are angry. Jompuses are tumpuses. Tumpuses are earthy. Every tumpus is a numpus. Each numpus is not cold. Each numpus is an impus. Dumpuses are metallic. Impuses are dull. Each impus is a zumpus. Zumpuses are not opaque. Zumpuses are wumpuses. Every wumpus is blue. Wumpuses are vumpuses. Every vumpus is not metallic. Every vumpus is a yumpus. Sally is a numpus.",
    "question": "Is the following statement true or false? Sally is not metallic.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nRompus(x) ::: x is a rompus\nNervous(x) ::: x is nervous\nJompus(x) ::: x is a jompus\nAngry(x) ::: x is angry\nTumpus(x) ::: x is a tumpus\nEarthy(x) ::: x is earthy\nNumpus(x) ::: x is a numpus\nCold(x) ::: x is cold\nImpus(x) ::: x is an impus\nDull(x) ::: x is dull\nZumpus(x) ::: x is a zumpus\nOpaque(x) ::: x is opaque\nWumpus(x) ::: x is a wumpus\nBlue(x) ::: x is blue\nVumpus(x) ::: x is a vumpus\nMetallic(x) ::: x is metallic\nYumpus(x) ::: x is a yumpus\nPremises:\n∀x (Rompus(x) → Nervous(x)) ::: Each rompus is nervous.\n∀x (Jompus(x) → Rompus(x)) ::: Rompuses are jompuses.\n∀x (Jompus(x) → Angry(x)) ::: Jompuses are angry.\n∀x (Jompus(x) → Tumpus(x)) ::: Jompuses are tumpuses.\n∀x (Tumpus(x) → Earthy(x)) ::: Tumpuses are earthy.\n∀x (Tumpus(x) → Numpus(x)) ::: Every tumpus is a numpus.\n∀x (Numpus(x) → ¬Cold(x)) ::: Each numpus is not cold.\n∀x (Numpus(x) → Impus(x)) ::: Each numpus is an impus.\n∀x (Dumpus(x) → Metallic(x)) ::: Dumpuses are metallic.\n∀x (Impus(x) → Dull(x)) ::: Impuses are dull.\n∀x (Impus(x) → Zumpus(x)) ::: Each impus is a zumpus.\n∀x (Zumpus(x) → ¬Opaque(x)) ::: Zumpuses are not opaque.\n∀x (Zumpus(x) → Wumpus(x)) ::: Zumpuses are wumpuses.\n∀x (Wumpus(x) → Blue(x)) ::: Every wumpus is blue.\n∀x (Wumpus(x) → Vumpus(x)) ::: Wumpuses are vumpuses.\n∀x (Vumpus(x) → ¬Metallic(x)) ::: Every vumpus is not metallic.\n∀x (Vumpus(x) → Yumpus(x)) ::: Every vumpus is a yumpus.\nNumpus(sally) ::: Sally is a numpus.\nConclusion:\n¬Metallic(sally) ::: Sally is not metallic.\n------"
    ]
  },
  {
    "id": "ProntoQA_47",
    "context": "Vumpuses are fruity. Vumpuses are jompuses. Jompuses are opaque. Every jompus is a wumpus. Every wumpus is nervous. Each wumpus is an impus. Every impus is sour. Impuses are tumpuses. Every tumpus is not amenable. Each tumpus is a yumpus. Yumpuses are not metallic. Yumpuses are numpuses. Numpuses are large. Every numpus is a rompus. Dumpuses are not cold. Each rompus is cold. Each rompus is a zumpus. Max is an impus.",
    "question": "Is the following statement true or false? Max is not cold.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nVumpus(x) ::: x is a vumpus\nFruity(x) ::: x is fruity\nJompus(x) ::: x is a jompus\nOpaque(x) ::: x is opaque\nWumpus(x) ::: x is a wumpus\nNervous(x) ::: x is nervous\nImpus(x) ::: x is an impus\nSour(x) ::: x is sour\nTumpus(x) ::: x is a tumpus\nAmenable(x) ::: x is amenable\nYumpus(x) ::: x is a yumpus\nMetallic(x) ::: x is metallic\nLarge(x) ::: x is large\nRompus(x) ::: x is a rompus\nCold(x) ::: x is cold\nZumpus(x) ::: x is a zumpus\nPremises:\n∀x (Vumpus(x) → Fruity(x)) ::: Vumpuses are fruity.\n∀x (Vumpus(x) → Jompus(x)) ::: Vumpuses are jompuses.\n∀x (Jompus(x) → Opaque(x)) ::: Jompuses are opaque.\n∀x (Jompus(x) → Wumpus(x)) ::: Every jompus is a wumpus.\n∀x (Wumpus(x) → Nervous(x)) ::: Every wumpus is nervous.\n∀x (Wumpus(x) → Impus(x)) ::: Each wumpus is an impus.\n∀x (Impus(x) → Sour(x)) ::: Every impus is sour.\n∀x (Impus(x) → Tumpus(x)) ::: Impuses are tumpuses.\n∀x (Tumpus(x) → ¬Amenable(x)) ::: Every tumpus is not amenable.\n∀x (Tumpus(x) → Yumpus(x)) ::: Each tumpus is a yumpus.\n∀x (Yumpus(x) → ¬Metallic(x)) ::: Yumpuses are not metallic.\n∀x (Yumpus(x) → Numpus(x)) ::: Yumpuses are numpuses.\n∀x (Numpus(x) → Large(x)) ::: Numpuses are large.\n∀x (Numpus(x) → Rompus(x)) ::: Every numpus is a rompus.\n∀x (Dumpus(x) → ¬Cold(x)) ::: Dumpuses are not cold.\n∀x (Rompus(x) → Cold(x)) ::: Each rompus is cold.\n∀x (Rompus(x) → Zumpus(x)) ::: Each rompus is a zumpus.\nImpus(max) ::: Max is an impus.\nConclusion:\n¬Cold(max) ::: Max is not cold.\n------"
    ]
  },
  {
    "id": "ProntoQA_48",
    "context": "Tumpuses are fruity. Yumpuses are nervous. Yumpuses are numpuses. Each numpus is large. Each numpus is a rompus. Each rompus is red. Rompuses are vumpuses. Vumpuses are temperate. Each vumpus is a jompus. Every jompus is spicy. Each jompus is an impus. Impuses are not metallic. Impuses are wumpuses. Each wumpus is bright. Wumpuses are zumpuses. Zumpuses are not fruity. Each zumpus is a dumpus. Sam is a vumpus.",
    "question": "Is the following statement true or false? Sam is not fruity.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nTumpus(x) ::: x is a tumpus\nFruity(x) ::: x is fruity\nYumpus(x) ::: x is a yumpus\nNervous(x) ::: x is nervous\nNumpus(x) ::: x is a numpus\nLarge(x) ::: x is large\nRompus(x) ::: x is a rompus\nRed(x) ::: x is red\nVumpus(x) ::: x is a vumpus\nTemperate(x) ::: x is temperate\nJompus(x) ::: x is a jompus\nSpicy(x) ::: x is spicy\nImpus(x) ::: x is an impus\nMetallic(x) ::: x is metallic\nWumpus(x) ::: x is a wumpus\nBright(x) ::: x is bright\nZumpus(x) ::: x is a zumpus\nDumpus(x) ::: x is a dumpus\nPremises:\n∀x (Tumpus(x) → Fruity(x)) ::: Tumpuses are fruity.\n∀x (Yumpus(x) → Nervous(x)) ::: Yumpuses are nervous.\n∀x (Yumpus(x) → Numpus(x)) ::: Yumpuses are numpuses.\n∀x (Numpus(x) → Large(x)) ::: Each numpus is large.\n∀x (Numpus(x) → Rompus(x)) ::: Each numpus is a rompus.\n∀x (Rompus(x) → Red(x)) ::: Each rompus is red.\n∀x (Rompus(x) → Vumpus(x)) ::: Rompuses are vumpuses.\n∀x (Vumpus(x) → Temperate(x)) ::: Vumpuses are temperate.\n∀x (Vumpus(x) → Jompus(x)) ::: Each vumpus is a jompus.\n∀x (Jompus(x) → Spicy(x)) ::: Every jompus is spicy.\n∀x (Jompus(x) → Impus(x)) ::: Each jompus is an impus.\n∀x (Impus(x) → ¬Metallic(x)) ::: Impuses are not metallic.\n∀x (Impus(x) → Wumpus(x)) ::: Impuses are wumpuses.\n∀x (Wumpus(x) → Bright(x)) ::: Each wumpus is bright.\n∀x (Wumpus(x) → Zumpus(x)) ::: Wumpuses are zumpuses.\n∀x (Zumpus(x) → ¬Fruity(x)) ::: Zumpuses are not fruity.\n∀x (Zumpus(x) → Dumpus(x)) ::: Each zumpus is a dumpus.\nVumpus(sam) ::: Sam is a vumpus.\nConclusion:\n¬Fruity(sam) ::: Sam is not fruity.\n------"
    ]
  },
  {
    "id": "ProntoQA_49",
    "context": "Wumpuses are dull. Wumpuses are rompuses. Every rompus is not cold. Rompuses are dumpuses. Dumpuses are feisty. Dumpuses are numpuses. Numpuses are mean. Numpuses are zumpuses. Every zumpus is not earthy. Every zumpus is a tumpus. Every tumpus is opaque. Impuses are liquid. Tumpuses are vumpuses. Every vumpus is not liquid. Vumpuses are jompuses. Each jompus is not spicy. Jompuses are yumpuses. Wren is a dumpus.",
    "question": "Is the following statement true or false? Wren is liquid.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nWumpus(x) ::: x is a wumpus\nDull(x) ::: x is dull\nRompus(x) ::: x is a rompus\nCold(x) ::: x is cold\nDumpus(x) ::: x is a dumpus\nFeisty(x) ::: x is feisty\nNumpus(x) ::: x is a numpus\nMean(x) ::: x is mean\nZumpus(x) ::: x is a zumpus\nEarthy(x) ::: x is earthy\nTumpus(x) ::: x is a tumpus\nOpaque(x) ::: x is opaque\nImpus(x) ::: x is an impus\nLiquid(x) ::: x is liquid\nVumpus(x) ::: x is a vumpus\nJompus(x) ::: x is a jompus\nSpicy(x) ::: x is spicy\nYumpus(x) ::: x is a yumpus\nPremises:\n∀x (Wumpus(x) → Dull(x)) ::: Wumpuses are dull.\n∀x (Wumpus(x) → Rompus(x)) ::: Wumpuses are rompuses.\n∀x (Rompus(x) → ¬Cold(x)) ::: Every rompus is not cold.\n∀x (Rompus(x) → Dumpus(x)) ::: Rompuses are dumpuses.\n∀x (Dumpus(x) → Feisty(x)) ::: Dumpuses are feisty.\n∀x (Dumpus(x) → Numpus(x)) ::: Dumpuses are numpuses.\n∀x (Numpus(x) → Mean(x)) ::: Numpuses are mean.\n∀x (Numpus(x) → Zumpus(x)) ::: Numpuses are zumpuses.\n∀x (Zumpus(x) → ¬Earthy(x)) ::: Every zumpus is not earthy.\n∀x (Zumpus(x) → Tumpus(x)) ::: Every zumpus is a tumpus.\n∀x (Tumpus(x) → Opaque(x)) ::: Tumpuses are opaque.\n∀x (Impus(x) → Liquid(x)) ::: Impuses are liquid.\n∀x (Tumpus(x) → Vumpus(x)) ::: Tumpuses are vumpuses.\n∀x (Vumpus(x) → ¬Liquid(x)) ::: Vumpuses are not liquid.\n∀x (Vumpus(x) → Jompus(x)) ::: Vumpuses are jompuses.\n∀x (Jompus(x) → ¬Spicy(x)) ::: Each jompus is not spicy.\n∀x (Jompus(x) → Yumpus(x)) ::: Jompuses are yumpuses.\nDumpus(wren) ::: Wren is a dumpus.\nConclusion:\nLiquid(wren) ::: Wren is liquid.\n------"
    ]
  },
  {
    "id": "ProntoQA_50",
    "context": "Jompuses are not blue. Each rompus is happy. Rompuses are dumpuses. Dumpuses are not cold. Each dumpus is a wumpus. Each wumpus is liquid. Each wumpus is an impus. Each impus is kind. Every impus is a yumpus. Each yumpus is bright. Yumpuses are zumpuses. Each zumpus is sour. Each zumpus is a vumpus. Every vumpus is small. Vumpuses are tumpuses. Every tumpus is blue. Every tumpus is a numpus. Fae is an impus.",
    "question": "Is the following statement true or false? Fae is not blue.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nJompus(x) ::: x is a jompus\nBlue(x) ::: x is blue\nRompus(x) ::: x is a rompus\nHappy(x) ::: x is happy\nDumpus(x) ::: x is a dumpus\nCold(x) ::: x is cold\nWumpus(x) ::: x is a wumpus\nLiquid(x) ::: x is liquid\nImpus(x) ::: x is an impus\nKind(x) ::: x is kind\nYumpus(x) ::: x is a yumpus\nBright(x) ::: x is bright\nZumpus(x) ::: x is a zumpus\nSour(x) ::: x is sour\nVumpus(x) ::: x is a vumpus\nSmall(x) ::: x is small\nTumpus(x) ::: x is a tumpus\nBlue(x) ::: x is blue\nNumpus(x) ::: x is a numpus\nFae(x) ::: x is Fae\nPremises:\n∀x (Jompus(x) → ¬Blue(x)) ::: Jompuses are not blue.\n∀x (Rompus(x) → Happy(x)) ::: Each rompus is happy.\n∀x (Rompus(x) → Dumpus(x)) ::: Rompuses are dumpuses.\n∀x (Dumpus(x) → ¬Cold(x)) ::: Dumpuses are not cold.\n∀x (Dumpus(x) → Wumpus(x)) ::: Each dumpus is a wumpus.\n∀x (Wumpus(x) → Liquid(x)) ::: Each wumpus is liquid.\n∀x (Wumpus(x) → Impus(x)) ::: Each wumpus is an impus.\n∀x (Impus(x) → Kind(x)) ::: Each impus is kind.\n∀x (Impus(x) → Yumpus(x)) ::: Every impus is a yumpus.\n∀x (Yumpus(x) → Bright(x)) ::: Each yumpus is bright.\n∀x (Yumpus(x) → Zumpus(x)) ::: Yumpuses are zumpuses.\n∀x (Zumpus(x) → Sour(x)) ::: Each zumpus is sour.\n∀x (Zumpus(x) → Vumpus(x)) ::: Each zumpus is a vumpus.\n∀x (Vumpus(x) → Small(x)) ::: Every vumpus is small.\n∀x (Vumpus(x) → Tumpus(x)) ::: Vumpuses are tumpuses.\n∀x (Tumpus(x) → Blue(x)) ::: Every tumpus is blue.\n∀x (Tumpus(x) → Numpus(x)) ::: Every tumpus is a numpus.\nImpus(fae) ::: Fae is an impus.\nConclusion:\n¬Blue(fae) ::: Fae is not blue.\n------"
    ]
  },
  {
    "id": "ProntoQA_51",
    "context": "Every zumpus is small. Each zumpus is an impus. Every impus is sweet. Impuses are vumpuses. Each vumpus is not feisty. Every vumpus is a dumpus. Every dumpus is not dull. Dumpuses are rompuses. Every rompus is transparent. Rompuses are wumpuses. Each wumpus is not earthy. Wumpuses are tumpuses. Every tumpus is cold. Numpuses are not cold. Tumpuses are yumpuses. Max is a vumpus.",
    "question": "Is the following statement true or false? Max is not cold.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nZumpus(x) ::: x is a zumpus\nSmall(x) ::: x is small\nImpus(x) ::: x is an impus\nSweet(x) ::: x is sweet\nVumpus(x) ::: x is a vumpus\nFeisty(x) ::: x is feisty\nDumpus(x) ::: x is a dumpus\nDull(x) ::: x is dull\nRompus(x) ::: x is a rompus\nTransparent(x) ::: x is transparent\nWumpus(x) ::: x is a wumpus\nEarthy(x) ::: x is earthy\nTumpus(x) ::: x is a tumpus\nCold(x) ::: x is cold\nNumpus(x) ::: x is a numpus\nYumpus(x) ::: x is a yumpus\nPremises:\n∀x (Zumpus(x) → Small(x)) ::: Every zumpus is small.\n∀x (Zumpus(x) → Impus(x)) ::: Each zumpus is an impus.\n∀x (Impus(x) → Sweet(x)) ::: Every impus is sweet.\n∀x (Vumpus(x) → Impus(x)) ::: Impuses are vumpuses.\n∀x (Vumpus(x) → ¬Feisty(x)) ::: Each vumpus is not feisty.\n∀x (Vumpus(x) → Dumpus(x)) ::: Every vumpus is a dumpus.\n∀x (Dumpus(x) → ¬Dull(x)) ::: Every dumpus is not dull.\n∀x (Dumpus(x) → Rompus(x)) ::: Dumpuses are rompuses.\n∀x (Rompus(x) → Transparent(x)) ::: Rompuses are transparent.\n∀x (Rompus(x) → Wumpus(x)) ::: Rompuses are wumpuses.\n∀x (Wumpus(x) → ¬Earthy(x)) ::: Each wumpus is not earthy.\n∀x (Wumpus(x) → Tumpus(x)) ::: Wumpuses are tumpuses.\n∀x (Tumpus(x) → Cold(x)) ::: Every tumpus is cold.\n∀x (Numpus(x) → ¬Cold(x)) ::: Numpuses are not cold.\n∀x (Tumpus(x) → Yumpus(x)) ::: Tumpuses are yumpuses.\nVumpus(max) ::: Max is a vumpus.\nConclusion:\n¬Cold(max) ::: Max is not cold.\n------"
    ]
  },
  {
    "id": "ProntoQA_52",
    "context": "Every jompus is spicy. Every jompus is a dumpus. Each dumpus is not transparent. Each dumpus is a zumpus. Zumpuses are feisty. Zumpuses are wumpuses. Each wumpus is not dull. Every wumpus is an impus. Every vumpus is not blue. Impuses are blue. Impuses are tumpuses. Tumpuses are not floral. Each tumpus is a numpus. Polly is a jompus.",
    "question": "Is the following statement true or false? Polly is blue.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "------\n### Predicates:\nJompus(x) ::: x is a jompus\nSpicy(x) ::: x is spicy\nDumpus(x) ::: x is a dumpus\nTransparent(x) ::: x is transparent\nZumpus(x) ::: x is a zumpus\nFeisty(x) ::: x is feisty\nWumpus(x) ::: x is a wumpus\nDull(x) ::: x is dull\nImpus(x) ::: x is an impus\nBlue(x) ::: x is blue\nTumpus(x) ::: x is a tumpus\nFloral(x) ::: x is floral\nNumpus(x) ::: x is a numpus\nPremises:\n∀x (Jompus(x) → Spicy(x)) ::: Every jompus is spicy.\n∀x (Jompus(x) → Dumpus(x)) ::: Every jompus is a dumpus.\n∀x (Dumpus(x) → ¬Transparent(x)) ::: Each dumpus is not transparent.\n∀x (Dumpus(x) → Zumpus(x)) ::: Each dumpus is a zumpus.\n∀x (Zumpus(x) → Feisty(x)) ::: Zumpuses are feisty.\n∀x (Zumpus(x) → Wumpus(x)) ::: Zumpuses are wumpuses.\n∀x (Wumpus(x) → ¬Dull(x)) ::: Every wumpus is not dull.\n∀x (Wumpus(x) → Impus(x)) ::: Every wumpus is an impus.\n∀x (Vumpus(x) → ¬Blue(x)) ::: Every vumpus is not blue.\n∀x (Impus(x) → Blue(x)) ::: Impuses are blue.\n∀x (Impus(x) → Tumpus(x)) ::: Impuses are tumpuses.\n∀x (Tumpus(x) → ¬Floral(x)) ::: Tumpuses are not floral.\n∀x (Tumpus(x) → Numpus(x)) ::: Each tumpus is a numpus.\nJompus(polly) ::: Polly is a jompus.\nConclusion:\nBlue(polly) ::: Polly is blue.\n------"
    ]
  },
  {
    "id": "ProntoQA_53",
    "context": "Numpuses are kind. Each numpus is a wumpus. Wumpuses are not wooden. Every zumpus is not dull. Wumpuses are impuses. Impuses are not nervous. Each impus is a yumpus. Every yumpus is hot. Every yumpus is a vumpus. Every vumpus is transparent. Vumpuses are rompuses. Rompuses are not small. Rompuses are jompuses. Jompuses are dull. Jompuses are dumpuses. Each dumpus is earthy. Every dumpus is a tumpus. Fae is an impus.",
    "question": "Is the following statement true or false? Fae is dull.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nNumpus(x) ::: x is a numpus\nKind(x) ::: x is kind\nWumpus(x) ::: x is a wumpus\nWooden(x) ::: x is wooden\nZumpus(x) ::: x is a zumpus\nDull(x) ::: x is dull\nImpus(x) ::: x is an impus\nNervous(x) ::: x is nervous\nYumpus(x) ::: x is a yumpus\nHot(x) ::: x is hot\nVumpus(x) ::: x is a vumpus\nTransparent(x) ::: x is transparent\nRompus(x) ::: x is a rompus\nSmall(x) ::: x is small\nJompus(x) ::: x is a jompus\nDull(x) ::: x is dull\nDumpus(x) ::: x is a dumpus\nEarthy(x) ::: x is earthy\nTumpus(x) ::: x is a tumpus\nFae(x) ::: x is fae\nPremises:\n∀x (Numpus(x) → Kind(x)) ::: Numpuses are kind.\n∀x (Numpus(x) → Wumpus(x)) ::: Each numpus is a wumpus.\n∀x (Wumpus(x) → ¬Wooden(x)) ::: Wumpuses are not wooden.\n∀x (Zumpus(x) → ¬Dull(x)) ::: Every zumpus is not dull.\n∀x (Impus(x) → Wumpus(x)) ::: Impuses are wumpuses.\n∀x (Impus(x) → ¬Nervous(x)) ::: Impuses are not nervous.\n∀x (Impus(x) → Yumpus(x)) ::: Each impus is a yumpus.\n∀x (Yumpus(x) → Hot(x)) ::: Every yumpus is hot.\n∀x (Yumpus(x) → Vumpus(x)) ::: Every yumpus is a vumpus.\n∀x (Vumpus(x) → Transparent(x)) ::: Vumpuses are transparent.\n∀x (Vumpus(x) → Rompus(x)) ::: Vumpuses are rompuses.\n∀x (Rompus(x) → ¬Small(x)) ::: Rompuses are not small.\n∀x (Rompus(x) → Jompus(x)) ::: Rompuses are jompuses.\n∀x (Jompus(x) → Dull(x)) ::: Jompuses are dull.\n∀x (Jompus(x) → Dumpus(x)) ::: Jompuses are dumpuses.\n∀x (Dumpus(x) → Earthy(x)) ::: Each dumpus is earthy.\n∀x (Dumpus(x) → Tumpus(x)) ::: Every dumpus is a tumpus.\nImpus(fae) ::: Fae is an impus.\nConclusion:\nDull(fae) ::: Fae is dull.\n------"
    ]
  },
  {
    "id": "ProntoQA_54",
    "context": "Every tumpus is not transparent. Tumpuses are jompuses. Each jompus is not large. Jompuses are vumpuses. Vumpuses are angry. Vumpuses are impuses. Yumpuses are red. Impuses are happy. Impuses are zumpuses. Zumpuses are metallic. Each zumpus is a rompus. Rompuses are dull. Rompuses are wumpuses. Every wumpus is not red. Each wumpus is a numpus. Numpuses are not sweet. Numpuses are dumpuses. Stella is a vumpus.",
    "question": "Is the following statement true or false? Stella is not red.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nTumpus(x) ::: x is a tumpus\nTransparent(x) ::: x is transparent\nJompus(x) ::: x is a jompus\nLarge(x) ::: x is large\nVumpus(x) ::: x is a vumpus\nAngry(x) ::: x is angry\nImpus(x) ::: x is an impus\nZumpus(x) ::: x is a zumpus\nMetallic(x) ::: x is metallic\nRompus(x) ::: x is a rompus\nDull(x) ::: x is dull\nWumpus(x) ::: x is a wumpus\nRed(x) ::: x is red\nHappy(x) ::: x is happy\nNumpus(x) ::: x is a numpus\nSweet(x) ::: x is sweet\nDumpus(x) ::: x is a dumpus\nPremises:\n∀x (Tumpus(x) → ¬Transparent(x)) ::: Every tumpus is not transparent.\n∀x (Jompus(x) → ¬Large(x)) ::: Tumpuses are jompuses.\n∀x (Jompus(x) → Vumpus(x)) ::: Each jompus is a vumpus.\n∀x (Vumpus(x) → Angry(x)) ::: Vumpuses are angry.\n∀x (Vumpus(x) → Impus(x)) ::: Vumpuses are impuses.\n∀x (Yumpus(x) → Red(x)) ::: Yumpuses are red.\n∀x (Impus(x) → Happy(x)) ::: Impuses are happy.\n∀x (Impus(x) → Zumpus(x)) ::: Impuses are zumpuses.\n∀x (Zumpus(x) → Metallic(x)) ::: Zumpuses are metallic.\n∀x (Zumpus(x) → Rompus(x)) ::: Each zumpus is a rompus.\n∀x (Rompus(x) → Dull(x)) ::: Rompuses are dull.\n∀x (Rompus(x) → Wumpus(x)) ::: Rompuses are wumpuses.\n∀x (Wumpus(x) → ¬Red(x)) ::: Every wumpus is not red.\n∀x (Wumpus(x) → Numpus(x)) ::: Each wumpus is a numpus.\n∀x (Numpus(x) → ¬Sweet(x)) ::: Numpuses are not sweet.\n∀x (Numpus(x) → Dumpus(x)) ::: Numpuses are dumpuses.\nVumpus(stella) ::: Stella is a vumpus.\nConclusion:\n¬Red(stella) ::: Stella is not red.\n------"
    ]
  },
  {
    "id": "ProntoQA_55",
    "context": "Dumpuses are dull. Dumpuses are numpuses. Numpuses are blue. Numpuses are wumpuses. Wumpuses are hot. Wumpuses are vumpuses. Vumpuses are luminous. Each vumpus is a jompus. Jompuses are mean. Jompuses are impuses. Every impus is not small. Every impus is a rompus. Rompuses are not feisty. Yumpuses are not mean. Every rompus is a zumpus. Rex is a dumpus.",
    "question": "Is the following statement true or false? Rex is mean.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant.lpg\n------"
    ]
  },
  {
    "id": "ProntoQA_56",
    "context": "Zumpuses are bright. Every zumpus is a vumpus. Each vumpus is not kind. Each vumpus is a wumpus. Wumpuses are feisty. Wumpuses are numpuses. Each numpus is floral. Every numpus is a dumpus. Every dumpus is hot. Rompuses are liquid. Each dumpus is a tumpus. Every tumpus is not brown. Every tumpus is a jompus. Jompuses are bitter. Jompuses are impuses. Each impus is not liquid. Impuses are yumpuses. Sam is a numpus.",
    "question": "Is the following statement true or false? Sam is not liquid.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nZumpus(x) ::: x is a zumpus\nBright(x) ::: x is bright\nVumpus(x) ::: x is a vumpus\nKind(x) ::: x is kind\nWumpus(x) ::: x is a wumpus\nFeisty(x) ::: x is feisty\nNumpus(x) ::: x is a numpus\nFloral(x) ::: x is floral\nDumpus(x) ::: x is a dumpus\nHot(x) ::: x is hot\nRompus(x) ::: x is a rompus\nLiquid(x) ::: x is liquid\nTumpus(x) ::: x is a tumpus\nBrown(x) ::: x is brown\nJompus(x) ::: x is a jompus\nBitter(x) ::: x is bitter\nImpus(x) ::: x is an impus\nYumpus(x) ::: x is a yumpus\nPremises:\n∀x (Zumpus(x) → Bright(x)) ::: Zumpuses are bright.\n∀x (Vumpus(x) → ¬Kind(x)) ::: Every vumpus is not kind.\n∀x (Vumpus(x) → Wumpus(x)) ::: Each vumpus is a wumpus.\n∀x (Wumpus(x) → Feisty(x)) ::: Wumpuses are feisty.\n∀x (Wumpus(x) → Numpus(x)) ::: Wumpuses are numpuses.\n∀x (Numpus(x) → Floral(x)) ::: Each numpus is floral.\n∀x (Numpus(x) → Dumpus(x)) ::: Every numpus is a dumpus.\n∀x (Dumpus(x) → Hot(x)) ::: Every dumpus is hot.\n∀x (Rompus(x) → Liquid(x)) ::: Rompuses are liquid.\n∀x (Dumpus(x) → Tumpus(x)) ::: Each dumpus is a tumpus.\n∀x (Tumpus(x) → ¬Brown(x)) ::: Every tumpus is not brown.\n∀x (Tumpus(x) → Jompus(x)) ::: Every tumpus is a jompus.\n∀x (Jompus(x) → Bitter(x)) ::: Jompuses are bitter.\n∀x (Jompus(x) → Impus(x)) ::: Jompuses are impuses.\n∀x (Impus(x) → ¬Liquid(x)) ::: Each impus is not liquid.\n∀x (Impus(x) → Yumpus(x)) ::: Impuses are yumpuses.\nNumpus(sam) ::: Sam is a numpus.\nConclusion:\n¬Liquid(sam) ::: Sam is not liquid.\n------"
    ]
  },
  {
    "id": "ProntoQA_57",
    "context": "Rompuses are luminous. Yumpuses are feisty. Rompuses are impuses. Each impus is not sour. Impuses are wumpuses. Wumpuses are not fruity. Wumpuses are numpuses. Every numpus is blue. Every numpus is a dumpus. Every dumpus is not feisty. Each dumpus is a tumpus. Tumpuses are kind. Every tumpus is a vumpus. Each vumpus is opaque. Vumpuses are zumpuses. Each zumpus is not large. Zumpuses are jompuses. Alex is a rompus.",
    "question": "Is the following statement true or false? Alex is not feisty.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nRompus(x) ::: x is a rompus\nLuminous(x) ::: x is luminous\nYumpus(x) ::: x is a yumpus\nFeisty(x) ::: x is feisty\nImpus(x) ::: x is an impus\nSour(x) ::: x is sour\nWumpus(x) ::: x is a wumpus\nFruity(x) ::: x is fruity\nNumpus(x) ::: x is a numpus\nBlue(x) ::: x is blue\nDumpus(x) ::: x is a dumpus\nFeisty(x) ::: x is feisty\nTumpus(x) ::: x is a tumpus\nKind(x) ::: x is kind\nVumpus(x) ::: x is a vumpus\nOpaque(x) ::: x is opaque\nZumpus(x) ::: x is a zumpus\nLarge(x) ::: x is large\nJompus(x) ::: x is a jompus\nPremises:\n∀x (Rompus(x) → Luminous(x)) ::: Rompuses are luminous.\n∀x (Yumpus(x) → Feisty(x)) ::: Yumpuses are feisty.\n∀x (Rompus(x) → Impus(x)) ::: Rompuses are impuses.\n∀x (Impus(x) → ¬Sour(x)) ::: Each impus is not sour.\n∀x (Impus(x) → Wumpus(x)) ::: Impuses are wumpuses.\n∀x (Wumpus(x) → ¬Fruity(x)) ::: Wumpuses are not fruity.\n∀x (Wumpus(x) → Numpus(x)) ::: Wumpuses are numpuses.\n∀x (Numpus(x) → Blue(x)) ::: Every numpus is blue.\n∀x (Numpus(x) → Dumpus(x)) ::: Every numpus is a dumpus.\n∀x (Dumpus(x) → ¬Feisty(x)) ::: Every dumpus is not feisty.\n∀x (Dumpus(x) → Tumpus(x)) ::: Each dumpus is a tumpus.\n∀x (Tumpus(x) → Kind(x)) ::: Tumpuses are kind.\n∀x (Tumpus(x) → Vumpus(x)) ::: Every tumpus is a vumpus.\n∀x (Vumpus(x) → Opaque(x)) ::: Vumpuses are opaque.\n∀x (Vumpus(x) → Zumpus(x)) ::: Vumpuses are zumpuses.\n∀x (Zumpus(x) → ¬Large(x)) ::: Zumpuses are not large.\n∀x (Zumpus(x) → Jompus(x)) ::: Zumpuses are jompuses.\nRompus(alex) ::: Alex is a rompus.\nConclusion:\n¬Feisty(alex) ::: Alex is not feisty.\n------"
    ]
  },
  {
    "id": "ProntoQA_58",
    "context": "Tumpuses are kind. Every tumpus is an impus. Impuses are not dull. Impuses are jompuses. Jompuses are not large. Jompuses are zumpuses. Every zumpus is happy. Zumpuses are wumpuses. Every dumpus is not fruity. Each wumpus is sweet. Wumpuses are yumpuses. Yumpuses are orange. Every yumpus is a numpus. Numpuses are transparent. Each numpus is a vumpus. Vumpuses are fruity. Every vumpus is a rompus. Fae is a zumpus.",
    "question": "Is the following statement true or false? Fae is not fruity.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nTumpus(x) ::: x is a tumpus\nKind(x) ::: x is kind\nImpus(x) ::: x is an impus\nDull(x) ::: x is dull\nJompus(x) ::: x is a jompus\nLarge(x) ::: x is large\nZumpus(x) ::: x is a zumpus\nHappy(x) ::: x is happy\nWumpus(x) ::: x is a wumpus\nFruity(x) ::: x is fruity\nSweet(x) ::: x is sweet\nYumpus(x) ::: x is a yumpus\nOrange(x) ::: x is orange\nNumpus(x) ::: x is a numpus\nTransparent(x) ::: x is transparent\nVumpus(x) ::: x is a vumpus\nFruity(x) ::: x is fruity\nRompus(x) ::: x is a rompus\nPremises:\n∀x (Tumpus(x) → Kind(x)) ::: Tumpuses are kind.\n∀x (Tumpus(x) → Impus(x)) ::: Every tumpus is an impus.\n∀x (Impus(x) → ¬Dull(x)) ::: Impuses are not dull.\n∀x (Impus(x) → Jompus(x)) ::: Impuses are jompuses.\n∀x (Jompus(x) → ¬Large(x)) ::: Jompuses are not large.\n∀x (Jompus(x) → Zumpus(x)) ::: Jompuses are zumpuses.\n∀x (Zumpus(x) → Happy(x)) ::: Every zumpus is happy.\n∀x (Zumpus(x) → Wumpus(x)) ::: Zumpuses are wumpuses.\n∀x (Dumpus(x) → ¬Fruity(x)) ::: Every dumpus is not fruity.\n∀x (Wumpus(x) → Sweet(x)) ::: Each wumpus is sweet.\n∀x (Wumpus(x) → Yumpus(x)) ::: Wumpuses are yumpuses.\n∀x (Yumpus(x) → Orange(x)) ::: Yumpuses are orange.\n∀x (Yumpus(x) → Numpus(x)) ::: Every yumpus is a numpus.\n∀x (Numpus(x) → Transparent(x)) ::: Numpuses are transparent.\n∀x (Numpus(x) → Vumpus(x)) ::: Each numpus is a vumpus.\n∀x (Vumpus(x) → Fruity(x)) ::: Vumpuses are fruity.\n∀x (Vumpus(x) → Rompus(x)) ::: Every vumpus is a rompus.\nZumpus(fae) ::: Fae is a zumpus.\nConclusion:\n¬Fruity(fae) ::: Fae is not fruity.\n------"
    ]
  },
  {
    "id": "ProntoQA_59",
    "context": "Each rompus is mean. Every rompus is a wumpus. Each tumpus is nervous. Wumpuses are brown. Wumpuses are yumpuses. Every yumpus is large. Yumpuses are vumpuses. Each vumpus is dull. Vumpuses are zumpuses. Zumpuses are earthy. Every zumpus is a numpus. Numpuses are not sour. Numpuses are impuses. Impuses are transparent. Each impus is a dumpus. Dumpuses are not nervous. Dumpuses are jompuses. Max is a vumpus.",
    "question": "Is the following statement true or false? Max is not nervous.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nRompus(x) ::: x is a rompus\nMean(x) ::: x is mean\nWumpus(x) ::: x is a wumpus\nTumpus(x) ::: x is a tumpus\nNervous(x) ::: x is nervous\nBrown(x) ::: x is brown\nYumpus(x) ::: x is a yumpus\nLarge(x) ::: x is large\nVumpus(x) ::: x is a vumpus\nDull(x) ::: x is dull\nZumpus(x) ::: x is a zumpus\nEarthy(x) ::: x is earthy\nNumpus(x) ::: x is a numpus\nSour(x) ::: x is sour\nImpus(x) ::: x is an impus\nTransparent(x) ::: x is transparent\nDumpus(x) ::: x is a dumpus\nNervous(x) ::: x is nervous\nJompus(x) ::: x is a jompus\nPremises:\n∀x (Rompus(x) → Mean(x)) ::: Each rompus is mean.\n∀x (Rompus(x) → Wumpus(x)) ::: Every rompus is a wumpus.\n∀x (Tumpus(x) → Nervous(x)) ::: Each tumpus is nervous.\n∀x (Wumpus(x) → Brown(x)) ::: Wumpuses are brown.\n∀x (Wumpus(x) → Yumpus(x)) ::: Wumpuses are yumpuses.\n∀x (Yumpus(x) → Large(x)) ::: Every yumpus is large.\n∀x (Yumpus(x) → Vumpus(x)) ::: Yumpuses are vumpuses.\n∀x (Vumpus(x) → Dull(x)) ::: Vumpuses are dull.\n∀x (Vumpus(x) → Zumpus(x)) ::: Vumpuses are zumpuses.\n∀x (Zumpus(x) → Earthy(x)) ::: Zumpuses are earthy.\n∀x (Zumpus(x) → Numpus(x)) ::: Every zumpus is a numpus.\n∀x (Numpus(x) → ¬Sour(x)) ::: Numpuses are not sour.\n∀x (Numpus(x) → Impus(x)) ::: Numpuses are impuses.\n∀x (Impus(x) → Transparent(x)) ::: Impuses are transparent.\n∀x (Impus(x) → Dumpus(x)) ::: Each impus is a dumpus.\n∀x (Dumpus(x) → ¬Nervous(x)) ::: Dumpuses are not nervous.\n∀x (Dumpus(x) → Jompus(x)) ::: Dumpuses are jompuses.\nVumpus(max) ::: Max is a vumpus.\nConclusion:\n¬Nervous(max) ::: Max is not nervous.\n------"
    ]
  },
  {
    "id": "ProntoQA_60",
    "context": "Wumpuses are large. Each wumpus is an impus. Each impus is not hot. Impuses are numpuses. Every numpus is earthy. Zumpuses are mean. Numpuses are vumpuses. Vumpuses are liquid. Vumpuses are dumpuses. Dumpuses are not mean. Dumpuses are tumpuses. Sam is a wumpus.",
    "question": "Is the following statement true or false? Sam is mean.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant.lpg\n------"
    ]
  },
  {
    "id": "ProntoQA_61",
    "context": "Rompuses are amenable. Rompuses are numpuses. Numpuses are brown. Numpuses are zumpuses. Every zumpus is bright. Vumpuses are nervous. Every zumpus is a dumpus. Every dumpus is sweet. Dumpuses are yumpuses. Every yumpus is not nervous. Yumpuses are jompuses. Jompuses are not liquid. Jompuses are impuses. Impuses are not small. Each impus is a tumpus. Tumpuses are not transparent. Tumpuses are wumpuses. Max is a rompus.",
    "question": "Is the following statement true or false? Max is not nervous.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nRompus(x) ::: x is a rompus\nAmenable(x) ::: x is amenable\nNumpus(x) ::: x is a numpus\nBrown(x) ::: x is brown\nZumpus(x) ::: x is a zumpus\nBright(x) ::: x is bright\nVumpus(x) ::: x is a vumpus\nNervous(x) ::: x is nervous\nDumpus(x) ::: x is a dumpus\nSweet(x) ::: x is sweet\nYumpus(x) ::: x is a yumpus\nJompus(x) ::: x is a jompus\nLiquid(x) ::: x is liquid\nImpus(x) ::: x is an impus\nSmall(x) ::: x is small\nTumpus(x) ::: x is a tumpus\nTransparent(x) ::: x is transparent\nWumpus(x) ::: x is a wumpus\nPremises:\n∀x (Rompus(x) → Amenable(x)) ::: Rompuses are amenable.\n∀x (Numpus(x) → Brown(x)) ::: Numpuses are brown.\n∀x (Numpus(x) → Zumpus(x)) ::: Numpuses are zumpuses.\n∀x (Zumpus(x) → Bright(x)) ::: Every zumpus is bright.\n∀x (Vumpus(x) → Nervous(x)) ::: Vumpuses are nervous.\n∀x (Zumpus(x) → Dumpus(x)) ::: Every zumpus is a dumpus.\n∀x (Dumpus(x) → Sweet(x)) ::: Dumpuses are sweet.\n∀x (Yumpus(x) → ¬Nervous(x)) ::: Yumpuses are not nervous.\n∀x (Yumpus(x) → Jompus(x)) ::: Yumpuses are jompuses.\n∀x (Jompus(x) → ¬Liquid(x)) ::: Jompuses are not liquid.\n∀x (Jompus(x) → Impus(x)) ::: Jompuses are impuses.\n∀x (Impus(x) → ¬Small(x)) ::: Impuses are not small.\n∀x (Impus(x) → Tumpus(x)) ::: Each impus is a tumpus.\n∀x (Tumpus(x) → ¬Transparent(x)) ::: Tumpuses are not transparent.\n∀x (Tumpus(x) → Wumpus(x)) ::: Tumpuses are wumpuses.\nRompus(max) ::: Max is a rompus.\nConclusion:\n¬Nervous(max) ::: Max is not nervous.\n------"
    ]
  },
  {
    "id": "ProntoQA_62",
    "context": "Every zumpus is nervous. Every zumpus is a dumpus. Every dumpus is large. Dumpuses are rompuses. Every rompus is brown. Vumpuses are transparent. Each rompus is a numpus. Numpuses are not bitter. Numpuses are wumpuses. Each wumpus is floral. Every wumpus is a yumpus. Every yumpus is not transparent. Yumpuses are tumpuses. Tumpuses are not bright. Every tumpus is an impus. Wren is a dumpus.",
    "question": "Is the following statement true or false? Wren is not transparent.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nZumpus(x) ::: x is a zumpus\nNervous(x) ::: x is nervous\nDumpus(x) ::: x is a dumpus\nLarge(x) ::: x is large\nRompus(x) ::: x is a rompus\nBrown(x) ::: x is brown\nVumpus(x) ::: x is a vumpus\nTransparent(x) ::: x is transparent\nNumpus(x) ::: x is a numpus\nBitter(x) ::: x is bitter\nWumpus(x) ::: x is a wumpus\nFloral(x) ::: x is floral\nYumpus(x) ::: x is a yumpus\nTumpus(x) ::: x is a tumpus\nBright(x) ::: x is bright\nImpus(x) ::: x is an impus\nPremises:\n∀x (Zumpus(x) → Nervous(x)) ::: Every zumpus is nervous.\n∀x (Zumpus(x) → Dumpus(x)) ::: Every zumpus is a dumpus.\n∀x (Dumpus(x) → Large(x)) ::: Every dumpus is large.\n∀x (Rompus(x) → Dumpus(x)) ::: Dumpuses are rompuses.\n∀x (Rompus(x) → Brown(x)) ::: Every rompus is brown.\n∀x (Vumpus(x) → Transparent(x)) ::: Vumpuses are transparent.\n∀x (Rompus(x) → Numpus(x)) ::: Each rompus is a numpus.\n∀x (Numpus(x) → ¬Bitter(x)) ::: Numpuses are not bitter.\n∀x (Numpus(x) → Wumpus(x)) ::: Numpuses are wumpuses.\n∀x (Wumpus(x) → Floral(x)) ::: Each wumpus is floral.\n∀x (Wumpus(x) → Yumpus(x)) ::: Every wumpus is a yumpus.\n∀x (Yumpus(x) → ¬Transparent(x)) ::: Every yumpus is not transparent.\n∀x (Yumpus(x) → Tumpus(x)) ::: Yumpuses are tumpuses.\n∀x (Tumpus(x) → ¬Bright(x)) ::: Tumpuses are not bright.\n∀x (Tumpus(x) → Impus(x)) ::: Every tumpus is an impus.\nDumpus(wren) ::: Wren is a dumpus.\nConclusion:\n¬Transparent(wren) ::: Wren is not transparent.\n------"
    ]
  },
  {
    "id": "ProntoQA_63",
    "context": "Numpuses are not mean. Each zumpus is not brown. Numpuses are rompuses. Every rompus is not cold. Rompuses are vumpuses. Vumpuses are not happy. Every vumpus is an impus. Each impus is liquid. Impuses are jompuses. Jompuses are dull. Every jompus is a tumpus. Every tumpus is spicy. Tumpuses are yumpuses. Every yumpus is fruity. Each yumpus is a wumpus. Wumpuses are brown. Wumpuses are dumpuses. Rex is an impus.",
    "question": "Is the following statement true or false? Rex is brown.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nNumpus(x) ::: x is a numpus\nMean(x) ::: x is mean\nZumpus(x) ::: x is a zumpus\nBrown(x) ::: x is brown\nRompus(x) ::: x is a rompus\nCold(x) ::: x is cold\nVumpus(x) ::: x is a vumpus\nHappy(x) ::: x is happy\nImpus(x) ::: x is an impus\nLiquid(x) ::: x is liquid\nJompus(x) ::: x is a jompus\nDull(x) ::: x is dull\nTumpus(x) ::: x is a tumpus\nSpicy(x) ::: x is spicy\nYumpus(x) ::: x is a yumpus\nFruity(x) ::: x is fruity\nWumpus(x) ::: x is a wumpus\nBrown(x) ::: x is brown\nDumpus(x) ::: x is a dumpus\nPremises:\n∀x (Numpus(x) → ¬Mean(x)) ::: Numpuses are not mean.\n∀x (Zumpus(x) → ¬Brown(x)) ::: Each zumpus is not brown.\n∀x (Numpus(x) → Rompus(x)) ::: Numpuses are rompuses.\n∀x (Rompus(x) → ¬Cold(x)) ::: Every rompus is not cold.\n∀x (Vumpus(x) → ¬Happy(x)) ::: Rompuses are vumpuses.\n∀x (Vumpus(x) → ¬Happy(x)) ::: Vumpuses are not happy.\n∀x (Impus(x) → Liquid(x)) ::: Every vumpus is an impus.\n∀x (Impus(x) → Jompus(x)) ::: Each impus is a jompus.\n∀x (Jompus(x) → Dull(x)) ::: Jompuses are dull.\n∀x (Jompus(x) → Tumpus(x)) ::: Every jompus is a tumpus.\n∀x (Tumpus(x) → Spicy(x)) ::: Every tumpus is spicy.\n∀x (Tumpus(x) → Yumpus(x)) ::: Tumpuses are yumpuses.\n∀x (Yumpus(x) → Fruity(x)) ::: Every yumpus is fruity.\n∀x (Yumpus(x) → Wumpus(x)) ::: Each yumpus is a wumpus.\n∀x (Wumpus(x) → Brown(x)) ::: Wumpuses are brown.\n∀x (Wumpus(x) → Dumpus(x)) ::: Wumpuses are dumpuses.\nImpus(rex) ::: Rex is an impus.\nConclusion:\nBrown(rex) ::: Rex is brown.\n------"
    ]
  },
  {
    "id": "ProntoQA_64",
    "context": "Tumpuses are bright. Tumpuses are rompuses. Rompuses are not earthy. Every rompus is a dumpus. Every dumpus is sweet. Each dumpus is a zumpus. Each zumpus is luminous. Zumpuses are impuses. Every numpus is temperate. Impuses are not temperate. Every impus is a wumpus. Every wumpus is red. Wumpuses are yumpuses. Every yumpus is kind. Every yumpus is a jompus. Every jompus is shy. Every jompus is a vumpus. Sam is a tumpus.",
    "question": "Is the following statement true or false? Sam is not temperate.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nTumpus(x) ::: x is a tumpus\nBright(x) ::: x is bright\nRompus(x) ::: x is a rompus\nEarthy(x) ::: x is earthy\nDumpus(x) ::: x is a dumpus\nSweet(x) ::: x is sweet\nZumpus(x) ::: x is a zumpus\nLuminous(x) ::: x is luminous\nImpus(x) ::: x is an impus\nTemperate(x) ::: x is temperate\nWumpus(x) ::: x is a wumpus\nRed(x) ::: x is red\nYumpus(x) ::: x is a yumpus\nKind(x) ::: x is kind\nJompus(x) ::: x is a jompus\nShy(x) ::: x is shy\nVumpus(x) ::: x is a vumpus\nPremises:\n∀x (Tumpus(x) → Bright(x)) ::: Tumpuses are bright.\n∀x (Tumpus(x) → Rompus(x)) ::: Tumpuses are rompuses.\n∀x (Rompus(x) → ¬Earthy(x)) ::: Rompuses are not earthy.\n∀x (Rompus(x) → Dumpus(x)) ::: Every rompus is a dumpus.\n∀x (Dumpus(x) → Sweet(x)) ::: Every dumpus is sweet.\n∀x (Dumpus(x) → Zumpus(x)) ::: Each dumpus is a zumpus.\n∀x (Zumpus(x) → Luminous(x)) ::: Each zumpus is luminous.\n∀x (Zumpus(x) → Impus(x)) ::: Zumpuses are impuses.\n∀x (Numpus(x) → Temperate(x)) ::: Every numpus is temperate.\n∀x (Impus(x) → ¬Temperate(x)) ::: Impuses are not temperate.\n∀x (Impus(x) → Wumpus(x)) ::: Every impus is a wumpus.\n∀x (Wumpus(x) → Red(x)) ::: Every wumpus is red.\n∀x (Wumpus(x) → Yumpus(x)) ::: Wumpuses are yumpuses.\n∀x (Yumpus(x) → Kind(x)) ::: Every yumpus is kind.\n∀x (Yumpus(x) → Jompus(x)) ::: Every yumpus is a jompus.\n∀x (Jompus(x) → Shy(x)) ::: Every jompus is shy.\n∀x (Jompus(x) → Vumpus(x)) ::: Every jompus is a vumpus.\nTumpus(sam) ::: Sam is a tumpus.\nConclusion:\n¬Temperate(sam) ::: Sam is not temperate.\n------"
    ]
  },
  {
    "id": "ProntoQA_65",
    "context": "Each rompus is spicy. Rompuses are zumpuses. Each zumpus is cold. Zumpuses are dumpuses. Every dumpus is happy. Dumpuses are vumpuses. Each vumpus is blue. Vumpuses are jompuses. Jompuses are not large. Every jompus is a wumpus. Every impus is angry. Each wumpus is not angry. Wumpuses are tumpuses. Each tumpus is dull. Every tumpus is a numpus. Numpuses are not luminous. Numpuses are yumpuses. Max is a zumpus.",
    "question": "Is the following statement true or false? Max is angry.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nRompus(x) ::: x is a rompus\nSpicy(x) ::: x is spicy\nZumpus(x) ::: x is a zumpus\nCold(x) ::: x is cold\nDumpus(x) ::: x is a dumpus\nHappy(x) ::: x is happy\nVumpus(x) ::: x is a vumpus\nBlue(x) ::: x is blue\nJompus(x) ::: x is a jompus\nLarge(x) ::: x is large\nWumpus(x) ::: x is a wumpus\nImpus(x) ::: x is an impus\nAngry(x) ::: x is angry\nTumpus(x) ::: x is a tumpus\nDull(x) ::: x is dull\nNumpus(x) ::: x is a numpus\nLuminous(x) ::: x is luminous\nYumpus(x) ::: x is a yumpus\nPremises:\n∀x (Rompus(x) → Spicy(x)) ::: Each rompus is spicy.\n∀x (Zumpus(x) → Cold(x)) ::: Rompuses are zumpuses.\n∀x (Zumpus(x) → Dumpus(x)) ::: Each zumpus is a dumpus.\n∀x (Dumpus(x) → Happy(x)) ::: Every dumpus is happy.\n∀x (Dumpus(x) → Vumpus(x)) ::: Dumpuses are vumpuses.\n∀x (Vumpus(x) → Blue(x)) ::: Each vumpus is blue.\n∀x (Vumpus(x) → Jompus(x)) ::: Vumpuses are jompuses.\n∀x (Jompus(x) → ¬Large(x)) ::: Jompuses are not large.\n∀x (Jompus(x) → Wumpus(x)) ::: Every jompus is a wumpus.\n∀x (Impus(x) → Angry(x)) ::: Each impus is angry.\n∀x (Wumpus(x) → ¬Angry(x)) ::: Every wumpus is not angry.\n∀x (Wumpus(x) → Tumpus(x)) ::: Wumpuses are tumpuses.\n∀x (Tumpus(x) → Dull(x)) ::: Each tumpus is dull.\n∀x (Tumpus(x) → Numpus(x)) ::: Every tumpus is a numpus.\n∀x (Numpus(x) → ¬Luminous(x)) ::: Numpuses are not luminous.\n∀x (Numpus(x) → Yumpus(x)) ::: Numpuses are yumpuses.\nZumpus(max) ::: Max is a zumpus.\nConclusion:\nAngry(max) ::: Max is angry.\n------"
    ]
  },
  {
    "id": "ProntoQA_66",
    "context": "Impuses are not large. Each impus is a yumpus. Yumpuses are floral. Yumpuses are jompuses. Jompuses are not transparent. Each jompus is a wumpus. Every wumpus is nervous. Wumpuses are vumpuses. Rompuses are not sweet. Each vumpus is hot. Vumpuses are tumpuses. Every tumpus is mean. Tumpuses are numpuses. Numpuses are dull. Numpuses are zumpuses. Zumpuses are sweet. Zumpuses are dumpuses. Sam is a wumpus.",
    "question": "Is the following statement true or false? Sam is not sweet.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nImpus(x) ::: x is an impus\nLarge(x) ::: x is large\nYumpus(x) ::: x is a yumpus\nFloral(x) ::: x is floral\nJompus(x) ::: x is a jompus\nTransparent(x) ::: x is transparent\nWumpus(x) ::: x is a wumpus\nNervous(x) ::: x is nervous\nVumpus(x) ::: x is a vumpus\nRompus(x) ::: x is a rompus\nSweet(x) ::: x is sweet\nHot(x) ::: x is hot\nTumpus(x) ::: x is a tumpus\nMean(x) ::: x is mean\nNumpus(x) ::: x is a numpus\nDull(x) ::: x is dull\nZumpus(x) ::: x is a zumpus\nSweet(x) ::: x is sweet\nDumpus(x) ::: x is a dumpus\nPremises:\n∀x (Impus(x) → ¬Large(x)) ::: Impuses are not large.\n∀x (Impus(x) → Yumpus(x)) ::: Each impus is a yumpus.\n∀x (Yumpus(x) → Floral(x)) ::: Yumpuses are floral.\n∀x (Yumpus(x) → Jompus(x)) ::: Yumpuses are jompuses.\n∀x (Jompus(x) → ¬Transparent(x)) ::: Jompuses are not transparent.\n∀x (Jompus(x) → Wumpus(x)) ::: Each jompus is a wumpus.\n∀x (Wumpus(x) → Nervous(x)) ::: Every wumpus is nervous.\n∀x (Wumpus(x) → Vumpus(x)) ::: Wumpuses are vumpuses.\n∀x (Rompus(x) → ¬Sweet(x)) ::: Rompuses are not sweet.\n∀x (Vumpus(x) → Hot(x)) ::: Each vumpus is hot.\n∀x (Vumpus(x) → Tumpus(x)) ::: Vumpuses are tumpuses.\n∀x (Tumpus(x) → Mean(x)) ::: Every tumpus is mean.\n∀x (Tumpus(x) → Numpus(x)) ::: Tumpuses are numpuses.\n∀x (Numpus(x) → Dull(x)) ::: Numpuses are dull.\n∀x (Numpus(x) → Zumpus(x)) ::: Numpuses are zumpuses.\n∀x (Zumpus(x) → Sweet(x)) ::: Zumpuses are sweet.\n∀x (Zumpus(x) → Dumpus(x)) ::: Zumpuses are dumpuses.\nWumpus(sam) ::: Sam is a wumpus.\nConclusion:\n¬Sweet(sam) ::: Sam is not sweet.\n------"
    ]
  },
  {
    "id": "ProntoQA_67",
    "context": "Numpuses are not mean. Numpuses are impuses. Every impus is not fruity. Impuses are zumpuses. Each zumpus is small. Zumpuses are tumpuses. Every tumpus is transparent. Each tumpus is a jompus. Wumpuses are not orange. Each jompus is not bright. Jompuses are dumpuses. Dumpuses are orange. Each dumpus is a vumpus. Every vumpus is sweet. Vumpuses are yumpuses. Yumpuses are wooden. Every yumpus is a rompus. Sam is an impus.",
    "question": "Is the following statement true or false? Sam is orange.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nNumpus(x) ::: x is a numpus\nMean(x) ::: x is mean\nImpus(x) ::: x is an impus\nFruity(x) ::: x is fruity\nZumpus(x) ::: x is a zumpus\nSmall(x) ::: x is small\nTumpus(x) ::: x is a tumpus\nTransparent(x) ::: x is transparent\nJompus(x) ::: x is a jompus\nOrange(x) ::: x is orange\nBright(x) ::: x is bright\nDumpus(x) ::: x is a dumpus\nOrange(x) ::: x is orange\nVumpus(x) ::: x is a vumpus\nSweet(x) ::: x is sweet\nYumpus(x) ::: x is a yumpus\nWooden(x) ::: x is wooden\nRompus(x) ::: x is a rompus\nPremises:\n∀x (Numpus(x) → ¬Mean(x)) ::: Numpuses are not mean.\n∀x (Impus(x) → ¬Fruity(x)) ::: Impuses are not fruity.\n∀x (Zumpus(x) → Small(x)) ::: Every zumpus is small.\n∀x (Zumpus(x) → Tumpus(x)) ::: Each zumpus is a tumpus.\n∀x (Tumpus(x) → Transparent(x)) ::: Every tumpus is transparent.\n∀x (Tumpus(x) → Jompus(x)) ::: Each tumpus is a jompus.\n∀x (Wumpus(x) → ¬Orange(x)) ::: Wumpuses are not orange.\n∀x (Jompus(x) → ¬Bright(x)) ::: Each jompus is not bright.\n∀x (Jompus(x) → Dumpus(x)) ::: Jompuses are dumpuses.\n∀x (Dumpus(x) → Orange(x)) ::: Dumpuses are orange.\n∀x (Dumpus(x) → Vumpus(x)) ::: Each dumpus is a vumpus.\n∀x (Vumpus(x) → Sweet(x)) ::: Every vumpus is sweet.\n∀x (Vumpus(x) → Yumpus(x)) ::: Vumpuses are yumpuses.\n∀x (Yumpus(x) → Wooden(x)) ::: Yumpuses are wooden.\n∀x (Yumpus(x) → Rompus(x)) ::: Every yumpus is a rompus.\nImpus(sam) ::: Sam is an impus.\nConclusion:\nOrange(sam) ::: Sam is orange.\n------"
    ]
  },
  {
    "id": "ProntoQA_68",
    "context": "Rompuses are large. Every rompus is a wumpus. Every wumpus is not blue. Wumpuses are numpuses. Numpuses are cold. Numpuses are impuses. Every impus is fruity. Each impus is a jompus. Every jompus is spicy. Jompuses are zumpuses. Each vumpus is not spicy. Zumpuses are not dull. Zumpuses are yumpuses. Yumpuses are liquid. Each yumpus is a tumpus. Every tumpus is opaque. Tumpuses are dumpuses. Wren is a rompus.",
    "question": "Is the following statement true or false? Wren is spicy.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nRompus(x) ::: x is a rompus\nLarge(x) ::: x is large\nWumpus(x) ::: x is a wumpus\nBlue(x) ::: x is blue\nNumpus(x) ::: x is a numpus\nCold(x) ::: x is cold\nImpus(x) ::: x is an impus\nFruity(x) ::: x is fruity\nJompus(x) ::: x is a jompus\nSpicy(x) ::: x is spicy\nZumpus(x) ::: x is a zumpus\nDull(x) ::: x is dull\nYumpus(x) ::: x is a yumpus\nLiquid(x) ::: x is liquid\nTumpus(x) ::: x is a tumpus\nOpaque(x) ::: x is opaque\nDumpus(x) ::: x is a dumpus\nPremises:\n∀x (Rompus(x) → Large(x)) ::: Rompuses are large.\n∀x (Wumpus(x) → ¬Blue(x)) ::: Every wumpus is not blue.\n∀x (Numpus(x) → Cold(x)) ::: Numpuses are cold.\n∀x (Numpus(x) → Impus(x)) ::: Numpuses are impuses.\n∀x (Impus(x) → Fruity(x)) ::: Every impus is fruity.\n∀x (Impus(x) → Jompus(x)) ::: Each impus is a jompus.\n∀x (Jompus(x) → Spicy(x)) ::: Every jompus is spicy.\n∀x (Jompus(x) → Zumpus(x)) ::: Jompuses are zumpuses.\n∀x (Vumpus(x) → ¬Spicy(x)) ::: Each vumpus is not spicy.\n∀x (Zumpus(x) → ¬Dull(x)) ::: Zumpuses are not dull.\n∀x (Zumpus(x) → Yumpus(x)) ::: Zumpuses are yumpuses.\n∀x (Yumpus(x) → Liquid(x)) ::: Yumpuses are liquid.\n∀x (Yumpus(x) → Tumpus(x)) ::: Each yumpus is a tumpus.\n∀x (Tumpus(x) → Opaque(x)) ::: Every tumpus is opaque.\n∀x (Tumpus(x) → Dumpus(x)) ::: Tumpuses are dumpuses.\nRompus(wren) ::: Wren is a rompus.\nConclusion:\nSpicy(wren) ::: Wren is spicy.\n------"
    ]
  },
  {
    "id": "ProntoQA_69",
    "context": "Each tumpus is not blue. Tumpuses are vumpuses. Vumpuses are not transparent. Every vumpus is a rompus. Each rompus is not fruity. Rompuses are dumpuses. Every dumpus is not nervous. Each dumpus is a yumpus. Yumpuses are not liquid. Each yumpus is a jompus. Jompuses are not cold. Zumpuses are cold. Each jompus is a numpus. Numpuses are large. Numpuses are impuses. Every impus is aggressive. Each impus is a wumpus. Wren is a vumpus.",
    "question": "Is the following statement true or false? Wren is not cold.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nTumpus(x) ::: x is a tumpus\nBlue(x) ::: x is blue\nVumpus(x) ::: x is a vumpus\nTransparent(x) ::: x is transparent\nRompus(x) ::: x is a rompus\nFruity(x) ::: x is fruity\nDumpus(x) ::: x is a dumpus\nNervous(x) ::: x is nervous\nYumpus(x) ::: x is a yumpus\nLiquid(x) ::: x is liquid\nJompus(x) ::: x is a jompus\nCold(x) ::: x is cold\nZumpus(x) ::: x is a zumpus\nLarge(x) ::: x is large\nImpus(x) ::: x is an impus\nAggressive(x) ::: x is aggressive\nWumpus(x) ::: x is a wumpus\nPremises:\n∀x (Tumpus(x) → ¬Blue(x)) ::: Each tumpus is not blue.\n∀x (Tumpus(x) → Vumpus(x)) ::: Tumpuses are vumpuses.\n∀x (Vumpus(x) → ¬Transparent(x)) ::: Vumpuses are not transparent.\n∀x (Vumpus(x) → Rompus(x)) ::: Every vumpus is a rompus.\n∀x (Rompus(x) → ¬Fruity(x)) ::: Each rompus is not fruity.\n∀x (Rompus(x) → Dumpus(x)) ::: Rompuses are dumpuses.\n∀x (Dumpus(x) → ¬Nervous(x)) ::: Every dumpus is not nervous.\n∀x (Dumpus(x) → Yumpus(x)) ::: Each dumpus is a yumpus.\n∀x (Yumpus(x) → ¬Liquid(x)) ::: Yumpuses are not liquid.\n∀x (Yumpus(x) → Jompus(x)) ::: Each yumpus is a jompus.\n∀x (Jompus(x) → ¬Cold(x)) ::: Jompuses are not cold.\n∀x (Zumpus(x) → Cold(x)) ::: Zumpuses are cold.\n∀x (Jompus(x) → Numpus(x)) ::: Each jompus is a numpus.\n∀x (Numpus(x) → Large(x)) ::: Numpuses are large.\n∀x (Numpus(x) → Impus(x)) ::: Numpuses are impuses.\n∀x (Impus(x) → Aggressive(x)) ::: Every impus is aggressive.\n∀x (Impus(x) → Wumpus(x)) ::: Each impus is a wumpus.\nVumpus(wren) ::: Wren is a vumpus.\nConclusion:\n¬Cold(wren) ::: Wren is not cold.\n------"
    ]
  },
  {
    "id": "ProntoQA_70",
    "context": "Each jompus is earthy. Jompuses are yumpuses. Yumpuses are metallic. Each yumpus is an impus. Each dumpus is not transparent. Impuses are nervous. Impuses are rompuses. Every rompus is small. Rompuses are tumpuses. Tumpuses are transparent. Tumpuses are vumpuses. Rex is a jompus.",
    "question": "Is the following statement true or false? Rex is not transparent.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nJompus(x) ::: x is a jompus\nEarthy(x) ::: x is earthy\nYumpus(x) ::: x is a yumpus\nMetallic(x) ::: x is metallic\nImpus(x) ::: x is an impus\nDumpus(x) ::: x is a dumpus\nTransparent(x) ::: x is transparent\nNervous(x) ::: x is nervous\nRompus(x) ::: x is a rompus\nSmall(x) ::: x is small\nTumpus(x) ::: x is a tumpus\nVumpus(x) ::: x is a vumpus\nRex(x) ::: x is Rex\nPremises:\n∀x (Jompus(x) → Earthy(x)) ::: Each jompus is earthy.\n∀x (Jompus(x) → Yumpus(x)) ::: Jompuses are yumpuses.\n∀x (Yumpus(x) → Metallic(x)) ::: Yumpuses are metallic.\n∀x (Yumpus(x) → Impus(x)) ::: Each yumpus is an impus.\n∀x (Dumpus(x) → ¬Transparent(x)) ::: Each dumpus is not transparent.\n∀x (Impus(x) → Nervous(x)) ::: Impuses are nervous.\n∀x (Impus(x) → Rompus(x)) ::: Impuses are rompuses.\n∀x (Rompus(x) → Small(x)) ::: Every rompus is small.\n∀x (Rompus(x) → Tumpus(x)) ::: Rompuses are tumpuses.\n∀x (Tumpus(x) → Transparent(x)) ::: Tumpuses are transparent.\n∀x (Tumpus(x) → Vumpus(x)) ::: Tumpuses are vumpuses.\nJompus(rex) ::: Rex is a jompus.\nConclusion:\n¬Transparent(rex) ::: Rex is not transparent.\n------"
    ]
  },
  {
    "id": "ProntoQA_71",
    "context": "Every rompus is cold. Each rompus is an impus. Every numpus is not dull. Each impus is large. Impuses are vumpuses. Every vumpus is mean. Vumpuses are dumpuses. Each dumpus is floral. Dumpuses are zumpuses. Zumpuses are opaque. Every zumpus is a jompus. Each jompus is dull. Each jompus is a wumpus. Every wumpus is shy. Each wumpus is a tumpus. Each tumpus is wooden. Each tumpus is a yumpus. Sally is an impus.",
    "question": "Is the following statement true or false? Sally is not dull.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nRompus(x) ::: x is a rompus\nCold(x) ::: x is cold\nImpus(x) ::: x is an impus\nDull(x) ::: x is dull\nLarge(x) ::: x is large\nVumpus(x) ::: x is a vumpus\nMean(x) ::: x is mean\nDumpus(x) ::: x is a dumpus\nFloral(x) ::: x is floral\nZumpus(x) ::: x is a zumpus\nOpaque(x) ::: x is opaque\nJompus(x) ::: x is a jompus\nDull(x) ::: x is dull\nWumpus(x) ::: x is a wumpus\nShy(x) ::: x is shy\nTumpus(x) ::: x is a tumpus\nWooden(x) ::: x is wooden\nYumpus(x) ::: x is a yumpus\nPremises:\n∀x (Rompus(x) → Cold(x)) ::: Every rompus is cold.\n∀x (Rompus(x) → Impus(x)) ::: Each rompus is an impus.\n∀x (Numpus(x) → ¬Dull(x)) ::: Every numpus is not dull.\n∀x (Impus(x) → Large(x)) ::: Each impus is large.\n∀x (Impus(x) → Vumpus(x)) ::: Impuses are vumpuses.\n∀x (Vumpus(x) → Mean(x)) ::: Every vumpus is mean.\n∀x (Vumpus(x) → Dumpus(x)) ::: Vumpuses are dumpuses.\n∀x (Dumpus(x) → Floral(x)) ::: Each dumpus is floral.\n∀x (Dumpus(x) → Zumpus(x)) ::: Dumpuses are zumpuses.\n∀x (Zumpus(x) → Opaque(x)) ::: Zumpuses are opaque.\n∀x (Zumpus(x) → Jompus(x)) ::: Every zumpus is a jompus.\n∀x (Jompus(x) → Dull(x)) ::: Each jompus is dull.\n∀x (Jompus(x) → Wumpus(x)) ::: Each jompus is a wumpus.\n∀x (Wumpus(x) → Shy(x)) ::: Every wumpus is shy.\n∀x (Wumpus(x) → Tumpus(x)) ::: Each wumpus is a tumpus.\n∀x (Tumpus(x) → Wooden(x)) ::: Each tumpus is wooden.\n∀x (Tumpus(x) → Yumpus(x)) ::: Each tumpus is a yumpus.\nImpus(sally) ::: Sally is an impus.\nConclusion:\n¬Dull(sally) ::: Sally is not dull.\n------"
    ]
  },
  {
    "id": "ProntoQA_72",
    "context": "Tumpuses are not small. Tumpuses are yumpuses. Every yumpus is aggressive. Each yumpus is a wumpus. Every wumpus is bright. Each wumpus is a jompus. Jompuses are not liquid. Every jompus is a vumpus. Each vumpus is orange. Every vumpus is an impus. Every impus is not transparent. Each impus is a zumpus. Every zumpus is fruity. Every zumpus is a numpus. Every numpus is sour. Rompuses are not fruity. Numpuses are dumpuses. Sam is a wumpus.",
    "question": "Is the following statement true or false? Sam is fruity.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nTumpus(x) ::: x is a tumpus\nSmall(x) ::: x is small\nYumpus(x) ::: x is a yumpus\nAggressive(x) ::: x is aggressive\nWumpus(x) ::: x is a wumpus\nBright(x) ::: x is bright\nJompus(x) ::: x is a jompus\nLiquid(x) ::: x is liquid\nVumpus(x) ::: x is a vumpus\nOrange(x) ::: x is orange\nImpus(x) ::: x is an impus\nTransparent(x) ::: x is transparent\nZumpus(x) ::: x is a zumpus\nFruity(x) ::: x is fruity\nNumpus(x) ::: x is a numpus\nSour(x) ::: x is sour\nPremises:\n∀x (Tumpus(x) → ¬Small(x)) ::: Tumpuses are not small.\n∀x (Tumpus(x) → Yumpus(x)) ::: Tumpuses are yumpuses.\n∀x (Yumpus(x) → Aggressive(x)) ::: Every yumpus is aggressive.\n∀x (Yumpus(x) → Wumpus(x)) ::: Each yumpus is a wumpus.\n∀x (Wumpus(x) → Bright(x)) ::: Every wumpus is bright.\n∀x (Wumpus(x) → Jompus(x)) ::: Each wumpus is a jompus.\n∀x (Jompus(x) → ¬Liquid(x)) ::: Jompuses are not liquid.\n∀x (Jompus(x) → Vumpus(x)) ::: Every jompus is a vumpus.\n∀x (Vumpus(x) → Orange(x)) ::: Each vumpus is orange.\n∀x (Vumpus(x) → Impus(x)) ::: Every vumpus is an impus.\n∀x (Impus(x) → ¬Transparent(x)) ::: Every impus is not transparent.\n∀x (Impus(x) → Zumpus(x)) ::: Each impus is a zumpus.\n∀x (Zumpus(x) → Fruity(x)) ::: Every zumpus is fruity.\n∀x (Zumpus(x) → Numpus(x)) ::: Every zumpus is a numpus.\n∀x (Numpus(x) → Sour(x)) ::: Every numpus is sour.\n∀x (Rompus(x) → ¬Fruity(x)) ::: Rompuses are not fruity.\n∀x (Numpus(x) → Dumpus(x)) ::: Numpuses are dumpuses.\nWumpus(sam) ::: Sam is a wumpus.\nConclusion:\nFruity(sam) ::: Sam is fruity.\n------"
    ]
  },
  {
    "id": "ProntoQA_73",
    "context": "Rompuses are bitter. Rompuses are yumpuses. Yumpuses are nervous. Yumpuses are jompuses. Jompuses are not blue. Dumpuses are not earthy. Every jompus is an impus. Impuses are bright. Each impus is a numpus. Numpuses are earthy. Every numpus is a vumpus. Wren is a rompus.",
    "question": "Is the following statement true or false? Wren is not earthy.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nRompus(x) ::: x is a rompus\nBitter(x) ::: x is bitter\nYumpus(x) ::: x is a yumpus\nNervous(x) ::: x is nervous\nJompus(x) ::: x is a jompus\nBlue(x) ::: x is blue\nDumpus(x) ::: x is a dumpus\nEarthy(x) ::: x is earthy\nImpus(x) ::: x is an impus\nBright(x) ::: x is bright\nNumpus(x) ::: x is a numpus\nVumpus(x) ::: x is a vumpus\nWren(x) ::: x is Wren\nPremises:\n∀x (Rompus(x) → Bitter(x)) ::: Rompuses are bitter.\n∀x (Rompus(x) → Yumpus(x)) ::: Rompuses are yumpuses.\n∀x (Yumpus(x) → Nervous(x)) ::: Yumpuses are nervous.\n∀x (Yumpus(x) → Jompus(x)) ::: Yumpuses are jompuses.\n∀x (Jompus(x) → ¬Blue(x)) ::: Jompuses are not blue.\n∀x (Dumpus(x) → ¬Earthy(x)) ::: Dumpuses are not earthy.\n∀x (Jompus(x) → Impus(x)) ::: Every jompus is an impus.\n∀x (Impus(x) → Bright(x)) ::: Impuses are bright.\n∀x (Impus(x) → Numpus(x)) ::: Each impus is a numpus.\n∀x (Numpus(x) → Earthy(x)) ::: Numpuses are earthy.\n∀x (Numpus(x) → Vumpus(x)) ::: Every numpus is a vumpus.\nRompus(wren) ::: Wren is a rompus.\nConclusion:\n¬Earthy(wren) ::: Wren is not earthy.\n------"
    ]
  },
  {
    "id": "ProntoQA_74",
    "context": "Vumpuses are sour. Each vumpus is a zumpus. Every zumpus is angry. Each zumpus is a tumpus. Tumpuses are not small. Every tumpus is a yumpus. Each yumpus is not blue. Yumpuses are rompuses. Each rompus is not fruity. Wumpuses are fruity. Every rompus is a numpus. Numpuses are hot. Each numpus is an impus. Every impus is transparent. Every impus is a dumpus. Dumpuses are wooden. Every dumpus is a jompus. Sam is a vumpus.",
    "question": "Is the following statement true or false? Sam is not fruity.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nVumpus(x) ::: x is a vumpus\nSour(x) ::: x is sour\nZumpus(x) ::: x is a zumpus\nAngry(x) ::: x is angry\nTumpus(x) ::: x is a tumpus\nSmall(x) ::: x is small\nYumpus(x) ::: x is a yumpus\nBlue(x) ::: x is blue\nRompus(x) ::: x is a rompus\nFruity(x) ::: x is fruity\nWumpus(x) ::: x is a wumpus\nNumpus(x) ::: x is a numpus\nHot(x) ::: x is hot\nImpus(x) ::: x is an impus\nTransparent(x) ::: x is transparent\nDumpus(x) ::: x is a dumpus\nWooden(x) ::: x is wooden\nJompus(x) ::: x is a jompus\nPremises:\n∀x (Vumpus(x) → Sour(x)) ::: Vumpuses are sour.\n∀x (Zumpus(x) → Angry(x)) ::: Each zumpus is angry.\n∀x (Tumpus(x) → Small(x)) ::: Each tumpus is small.\n∀x (Yumpus(x) → ¬Blue(x)) ::: Every yumpus is not blue.\n∀x (Rompus(x) → Fruity(x)) ::: Every rompus is fruity.\n∀x (Wumpus(x) → Fruity(x)) ::: Wumpuses are fruity.\n∀x (Rompus(x) → Numpus(x)) ::: Every rompus is a numpus.\n∀x (Numpus(x) → Hot(x)) ::: Numpuses are hot.\n∀x (Impus(x) → Transparent(x)) ::: Every impus is transparent.\n∀x (Impus(x) → Dumpus(x)) ::: Every impus is a dumpus.\n∀x (Dumpus(x) → Wooden(x)) ::: Dumpuses are wooden.\n∀x (Dumpus(x) → Jompus(x)) ::: Every dumpus is a jompus.\nVumpus(sam) ::: Sam is a vumpus.\nConclusion:\n¬Fruity(sam) ::: Sam is not fruity.\n------"
    ]
  },
  {
    "id": "ProntoQA_75",
    "context": "Jompuses are bright. Every jompus is a rompus. Rompuses are not opaque. Rompuses are vumpuses. Each vumpus is red. Each vumpus is a numpus. Every zumpus is not fruity. Every numpus is not spicy. Numpuses are impuses. Each impus is temperate. Every impus is a wumpus. Every wumpus is fruity. Wumpuses are yumpuses. Yumpuses are liquid. Yumpuses are dumpuses. Dumpuses are small. Dumpuses are tumpuses. Polly is a rompus.",
    "question": "Is the following statement true or false? Polly is fruity.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nJompus(x) ::: x is a jompus\nBright(x) ::: x is bright\nRompus(x) ::: x is a rompus\nOpaque(x) ::: x is opaque\nVumpus(x) ::: x is a vumpus\nRed(x) ::: x is red\nNumpus(x) ::: x is a numpus\nFruity(x) ::: x is fruity\nSpicy(x) ::: x is spicy\nImpus(x) ::: x is an impus\nTemperate(x) ::: x is temperate\nWumpus(x) ::: x is a wumpus\nYumpus(x) ::: x is a yumpus\nLiquid(x) ::: x is liquid\nDumpus(x) ::: x is a dumpus\nSmall(x) ::: x is small\nTumpus(x) ::: x is a tumpus\nPremises:\n∀x (Jompus(x) → Bright(x)) ::: Jompuses are bright.\n∀x (Jompus(x) → Rompus(x)) ::: Every jompus is a rompus.\n∀x (Rompus(x) → ¬Opaque(x)) ::: Rompuses are not opaque.\n∀x (Vumpus(x) → Red(x)) ::: Rompuses are vumpuses.\n∀x (Vumpus(x) → Numpus(x)) ::: Each vumpus is a numpus.\n∀x (Zumpus(x) → ¬Fruity(x)) ::: Every zumpus is not fruity.\n∀x (Numpus(x) → ¬Spicy(x)) ::: Every numpus is not spicy.\n∀x (Numpus(x) → Impus(x)) ::: Numpuses are impuses.\n∀x (Impus(x) → Temperate(x)) ::: Each impus is temperate.\n∀x (Impus(x) → Wumpus(x)) ::: Every impus is a wumpus.\n∀x (Wumpus(x) → Fruity(x)) ::: Wumpuses are fruity.\n∀x (Yumpus(x) → Liquid(x)) ::: Yumpuses are liquid.\n∀x (Yumpus(x) → Dumpus(x)) ::: Yumpuses are dumpuses.\n∀x (Dumpus(x) → Small(x)) ::: Dumpuses are small.\n∀x (Dumpus(x) → Tumpus(x)) ::: Dumpuses are tumpuses.\nRompus(polly) ::: Polly is a rompus.\nConclusion:\nFruity(polly) ::: Polly is fruity.\n------"
    ]
  },
  {
    "id": "ProntoQA_76",
    "context": "Zumpuses are not spicy. Each yumpus is cold. Yumpuses are impuses. Every impus is red. Impuses are jompuses. Every jompus is not feisty. Every jompus is a rompus. Rompuses are angry. Each rompus is a wumpus. Each wumpus is spicy. Wumpuses are vumpuses. Vumpuses are not small. Vumpuses are numpuses. Numpuses are earthy. Numpuses are tumpuses. Every tumpus is luminous. Tumpuses are dumpuses. Sally is a yumpus.",
    "question": "Is the following statement true or false? Sally is spicy.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nZumpus(x) ::: x is a zumpus\nSpicy(x) ::: x is spicy\nYumpus(x) ::: x is a yumpus\nCold(x) ::: x is cold\nImpus(x) ::: x is an impus\nRed(x) ::: x is red\nJompus(x) ::: x is a jompus\nFeisty(x) ::: x is feisty\nRompus(x) ::: x is a rompus\nAngry(x) ::: x is angry\nWumpus(x) ::: x is a wumpus\nSpicy(x) ::: x is spicy\nVumpus(x) ::: x is a vumpus\nSmall(x) ::: x is small\nNumpus(x) ::: x is a numpus\nEarthy(x) ::: x is earthy\nTumpus(x) ::: x is a tumpus\nLuminous(x) ::: x is luminous\nDumpus(x) ::: x is a dumpus\nPremises:\n∀x (Zumpus(x) → ¬Spicy(x)) ::: Zumpuses are not spicy.\n∀x (Yumpus(x) → Cold(x)) ::: Each yumpus is cold.\n∀x (Impus(x) → Jompus(x)) ::: Yumpuses are impuses.\n∀x (Impus(x) → Red(x)) ::: Every impus is red.\n∀x (Jompus(x) → ¬Feisty(x)) ::: Impuses are jompuses.\n∀x (Jompus(x) → Rompus(x)) ::: Every jompus is a rompus.\n∀x (Rompus(x) → Angry(x)) ::: Rompuses are angry.\n∀x (Rompus(x) → Wumpus(x)) ::: Each rompus is a wumpus.\n∀x (Wumpus(x) → Spicy(x)) ::: Wumpuses are spicy.\n∀x (Vumpus(x) → ¬Small(x)) ::: Vumpuses are not small.\n∀x (Vumpus(x) → Numpus(x)) ::: Vumpuses are numpuses.\n∀x (Numpus(x) → Earthy(x)) ::: Numpuses are earthy.\n∀x (Numpus(x) → Tumpus(x)) ::: Numpuses are tumpuses.\n∀x (Tumpus(x) → Luminous(x)) ::: Every tumpus is luminous.\n∀x (Tumpus(x) → Dumpus(x)) ::: Tumpuses are dumpuses.\nYumpus(sally) ::: Sally is a yumpus.\nConclusion:\nSpicy(sally) ::: Sally is spicy.\n------"
    ]
  },
  {
    "id": "ProntoQA_77",
    "context": "Jompuses are dull. Each jompus is a rompus. Each rompus is nervous. Rompuses are dumpuses. Every dumpus is kind. Dumpuses are wumpuses. Tumpuses are not opaque. Each wumpus is bitter. Each wumpus is a zumpus. Every zumpus is fruity. Zumpuses are impuses. Impuses are wooden. Each impus is a yumpus. Every yumpus is opaque. Every yumpus is a vumpus. Every vumpus is small. Vumpuses are numpuses. Sam is a dumpus.",
    "question": "Is the following statement true or false? Sam is not opaque.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nJompus(x) ::: x is a jompus\nDull(x) ::: x is dull\nRompus(x) ::: x is a rompus\nNervous(x) ::: x is nervous\nDumpus(x) ::: x is a dumpus\nKind(x) ::: x is kind\nWumpus(x) ::: x is a wumpus\nTumpus(x) ::: x is a tumpus\nOpaque(x) ::: x is opaque\nBitter(x) ::: x is bitter\nZumpus(x) ::: x is a zumpus\nFruity(x) ::: x is fruity\nImpus(x) ::: x is an impus\nWooden(x) ::: x is wooden\nYumpus(x) ::: x is a yumpus\nOpaque(x) ::: x is opaque\nVumpus(x) ::: x is a vumpus\nSmall(x) ::: x is small\nNumpus(x) ::: x is a numpus\nPremises:\n∀x (Jompus(x) → Dull(x)) ::: Jompuses are dull.\n∀x (Rompus(x) → Nervous(x)) ::: Each rompus is nervous.\n∀x (Rompus(x) → Dumpus(x)) ::: Rompuses are dumpuses.\n∀x (Dumpus(x) → Kind(x)) ::: Every dumpus is kind.\n∀x (Dumpus(x) → Wumpus(x)) ::: Dumpuses are wumpuses.\n∀x (Tumpus(x) → ¬Opaque(x)) ::: Tumpuses are not opaque.\n∀x (Wumpus(x) → Bitter(x)) ::: Every wumpus is bitter.\n∀x (Wumpus(x) → Zumpus(x)) ::: Every wumpus is a zumpus.\n∀x (Zumpus(x) → Fruity(x)) ::: Zumpuses are fruity.\n∀x (Zumpus(x) → Impus(x)) ::: Zumpuses are impuses.\n∀x (Impus(x) → Wooden(x)) ::: Impuses are wooden.\n∀x (Impus(x) → Yumpus(x)) ::: Each impus is a yumpus.\n∀x (Yumpus(x) → Opaque(x)) ::: Every yumpus is opaque.\n∀x (Yumpus(x) → Vumpus(x)) ::: Every yumpus is a vumpus.\n∀x (Vumpus(x) → Small(x)) ::: Every vumpus is small.\n∀x (Vumpus(x) → Numpus(x)) ::: Vumpuses are numpuses.\nDumpus(sam) ::: Sam is a dumpus.\nConclusion:\n¬Opaque(sam) ::: Sam is not opaque.\n------"
    ]
  },
  {
    "id": "ProntoQA_78",
    "context": "Each impus is not happy. Each impus is a vumpus. Each vumpus is brown. Vumpuses are dumpuses. Each jompus is not small. Dumpuses are not earthy. Every dumpus is a rompus. Each rompus is transparent. Rompuses are wumpuses. Wumpuses are kind. Wumpuses are yumpuses. Yumpuses are small. Each yumpus is a zumpus. Each zumpus is liquid. Zumpuses are tumpuses. Tumpuses are hot. Each tumpus is a numpus. Fae is a vumpus.",
    "question": "Is the following statement true or false? Fae is small.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nImpus(x) ::: x is an impus\nHappy(x) ::: x is happy\nVumpus(x) ::: x is a vumpus\nBrown(x) ::: x is brown\nDumpus(x) ::: x is a dumpus\nSmall(x) ::: x is small\nEarthy(x) ::: x is earthy\nRompus(x) ::: x is a rompus\nTransparent(x) ::: x is transparent\nWumpus(x) ::: x is a wumpus\nKind(x) ::: x is kind\nYumpus(x) ::: x is a yumpus\nSmall(x) ::: x is small\nZumpus(x) ::: x is a zumpus\nLiquid(x) ::: x is liquid\nTumpus(x) ::: x is a tumpus\nHot(x) ::: x is hot\nNumpus(x) ::: x is a numpus\nFae(x) ::: x is Fae\nPremises:\n∀x (Impus(x) → ¬Happy(x)) ::: Each impus is not happy.\n∀x (Impus(x) → Vumpus(x)) ::: Each impus is a vumpus.\n∀x (Vumpus(x) → Brown(x)) ::: Each vumpus is brown.\n∀x (Vumpus(x) → Dumpus(x)) ::: Vumpuses are dumpuses.\n∀x (Jompus(x) → ¬Small(x)) ::: Each jompus is not small.\n∀x (Dumpus(x) → ¬Earthy(x)) ::: Dumpuses are not earthy.\n∀x (Dumpus(x) → Rompus(x)) ::: Every dumpus is a rompus.\n∀x (Rompus(x) → Transparent(x)) ::: Rompuses are transparent.\n∀x (Rompus(x) → Wumpus(x)) ::: Rompuses are wumpuses.\n∀x (Wumpus(x) → Kind(x)) ::: Wumpuses are kind.\n∀x (Wumpus(x) → Yumpus(x)) ::: Wumpuses are yumpuses.\n∀x (Yumpus(x) → Small(x)) ::: Yumpuses are small.\n∀x (Yumpus(x) → Zumpus(x)) ::: Each yumpus is a zumpus.\n∀x (Zumpus(x) → Liquid(x)) ::: Each zumpus is liquid.\n∀x (Zumpus(x) → Tumpus(x)) ::: Zumpuses are tumpuses.\n∀x (Tumpus(x) → Hot(x)) ::: Tumpuses are hot.\n∀x (Tumpus(x) → Numpus(x)) ::: Each tumpus is a numpus.\nVumpus(fae) ::: Fae is a vumpus.\nConclusion:\nSmall(fae) ::: Fae is small.\n------"
    ]
  },
  {
    "id": "ProntoQA_79",
    "context": "Each impus is earthy. Impuses are rompuses. Rompuses are kind. Rompuses are wumpuses. Each wumpus is temperate. Each wumpus is a dumpus. Dumpuses are wooden. Each dumpus is a numpus. Each numpus is not blue. Each numpus is a yumpus. Each yumpus is large. Every yumpus is a vumpus. Vumpuses are dull. Tumpuses are blue. Vumpuses are jompuses. Each jompus is nervous. Jompuses are zumpuses. Stella is an impus.",
    "question": "Is the following statement true or false? Stella is blue.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nImpus(x) ::: x is an impus\nEarthy(x) ::: x is earthy\nRompus(x) ::: x is a rompus\nKind(x) ::: x is kind\nWumpus(x) ::: x is a wumpus\nTemperate(x) ::: x is temperate\nDumpus(x) ::: x is a dumpus\nWooden(x) ::: x is wooden\nNumpus(x) ::: x is a numpus\nBlue(x) ::: x is blue\nYumpus(x) ::: x is a yumpus\nLarge(x) ::: x is large\nVumpus(x) ::: x is a vumpus\nDull(x) ::: x is dull\nTumpus(x) ::: x is a tumpus\nPremises:\n∀x (Impus(x) → Earthy(x)) ::: Each impus is earthy.\n∀x (Impus(x) → Rompus(x)) ::: Impuses are rompuses.\n∀x (Rompus(x) → Kind(x)) ::: Rompuses are kind.\n∀x (Rompus(x) → Wumpus(x)) ::: Rompuses are wumpuses.\n∀x (Wumpus(x) → Temperate(x)) ::: Each wumpus is temperate.\n∀x (Wumpus(x) → Dumpus(x)) ::: Each wumpus is a dumpus.\n∀x (Dumpus(x) → Wooden(x)) ::: Dumpuses are wooden.\n∀x (Dumpus(x) → Numpus(x)) ::: Each dumpus is a numpus.\n∀x (Numpus(x) → ¬Blue(x)) ::: Each numpus is not blue.\n∀x (Numpus(x) → Yumpus(x)) ::: Each numpus is a yumpus.\n∀x (Yumpus(x) → Large(x)) ::: Each yumpus is large.\n∀x (Yumpus(x) → Vumpus(x)) ::: Every yumpus is a vumpus.\n∀x (Vumpus(x) → Dull(x)) ::: Vumpuses are dull.\n∀x (Tumpus(x) → Blue(x)) ::: Tumpuses are blue.\n∀x (Vumpus(x) → Jompus(x)) ::: Vumpuses are jompuses.\n∀x (Jompus(x) → Nervous(x)) ::: Each jompus is nervous.\n∀x (Jompus(x) → Zumpus(x)) ::: Jompuses are zumpuses.\nImpus(stella) ::: Stella is an impus.\nConclusion:\nBlue(stella) ::: Stella is blue.\n------"
    ]
  },
  {
    "id": "ProntoQA_80",
    "context": "Each numpus is large. Numpuses are impuses. Impuses are not cold. Impuses are dumpuses. Every dumpus is not floral. Dumpuses are vumpuses. Every vumpus is not luminous. Every vumpus is a yumpus. Each rompus is not blue. Yumpuses are blue. Yumpuses are tumpuses. Every tumpus is happy. Each tumpus is a zumpus. Zumpuses are sour. Each zumpus is a wumpus. Wumpuses are bright. Each wumpus is a jompus. Sally is a numpus.",
    "question": "Is the following statement true or false? Sally is blue.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nNumpus(x) ::: x is a numpus\nLarge(x) ::: x is large\nImpus(x) ::: x is an impus\nCold(x) ::: x is cold\nDumpus(x) ::: x is a dumpus\nFloral(x) ::: x is floral\nVumpus(x) ::: x is a vumpus\nLuminous(x) ::: x is luminous\nYumpus(x) ::: x is a yumpus\nRompus(x) ::: x is a rompus\nBlue(x) ::: x is blue\nTumpus(x) ::: x is a tumpus\nHappy(x) ::: x is happy\nZumpus(x) ::: x is a zumpus\nSour(x) ::: x is sour\nWumpus(x) ::: x is a wumpus\nBright(x) ::: x is bright\nJompus(x) ::: x is a jompus\nPremises:\n∀x (Numpus(x) → Large(x)) ::: Each numpus is large.\n∀x (Numpus(x) → Impus(x)) ::: Numpuses are impuses.\n∀x (Impus(x) → ¬Cold(x)) ::: Impuses are not cold.\n∀x (Impus(x) → Dumpus(x)) ::: Impuses are dumpuses.\n∀x (Dumpus(x) → ¬Floral(x)) ::: Every dumpus is not floral.\n∀x (Dumpus(x) → Vumpus(x)) ::: Dumpuses are vumpuses.\n∀x (Vumpus(x) → ¬Luminous(x)) ::: Every vumpus is not luminous.\n∀x (Vumpus(x) → Yumpus(x)) ::: Every vumpus is a yumpus.\n∀x (Rompus(x) → ¬Blue(x)) ::: Each rompus is not blue.\n∀x (Yumpus(x) → Blue(x)) ::: Yumpuses are blue.\n∀x (Yumpus(x) → Tumpus(x)) ::: Yumpuses are tumpuses.\n∀x (Tumpus(x) → Happy(x)) ::: Each tumpus is happy.\n∀x (Tumpus(x) → Zumpus(x)) ::: Each tumpus is a zumpus.\n∀x (Zumpus(x) → Sour(x)) ::: Zumpuses are sour.\n∀x (Zumpus(x) → Wumpus(x)) ::: Each zumpus is a wumpus.\n∀x (Wumpus(x) → Bright(x)) ::: Wumpuses are bright.\n∀x (Wumpus(x) → Jompus(x)) ::: Each wumpus is a jompus.\nNumpus(sally) ::: Sally is a numpus.\nConclusion:\nBlue(sally) ::: Sally is blue.\n------"
    ]
  },
  {
    "id": "ProntoQA_81",
    "context": "Jompuses are not dull. Every wumpus is opaque. Wumpuses are dumpuses. Every dumpus is not floral. Dumpuses are numpuses. Each numpus is not luminous. Each numpus is a vumpus. Every vumpus is large. Vumpuses are tumpuses. Every tumpus is not orange. Every tumpus is a zumpus. Zumpuses are dull. Every zumpus is an impus. Every impus is spicy. Every impus is a rompus. Rompuses are not temperate. Every rompus is a yumpus. Sam is a dumpus.",
    "question": "Is the following statement true or false? Sam is dull.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nJompus(x) ::: x is a jompus\nDull(x) ::: x is dull\nWumpus(x) ::: x is a wumpus\nOpaque(x) ::: x is opaque\nDumpus(x) ::: x is a dumpus\nFloral(x) ::: x is floral\nNumpus(x) ::: x is a numpus\nLuminous(x) ::: x is luminous\nVumpus(x) ::: x is a vumpus\nLarge(x) ::: x is large\nTumpus(x) ::: x is a tumpus\nOrange(x) ::: x is orange\nZumpus(x) ::: x is a zumpus\nDull(x) ::: x is dull\nImpus(x) ::: x is an impus\nSpicy(x) ::: x is spicy\nRompus(x) ::: x is a rompus\nTemperate(x) ::: x is temperate\nYumpus(x) ::: x is a yumpus\nPremises:\n∀x (Jompus(x) → ¬Dull(x)) ::: Jompuses are not dull.\n∀x (Wumpus(x) → Opaque(x)) ::: Every wumpus is opaque.\n∀x (Wumpus(x) → Dumpus(x)) ::: Wumpuses are dumpuses.\n∀x (Dumpus(x) → ¬Floral(x)) ::: Every dumpus is not floral.\n∀x (Dumpus(x) → Numpus(x)) ::: Dumpuses are numpuses.\n∀x (Numpus(x) → ¬Luminous(x)) ::: Each numpus is not luminous.\n∀x (Numpus(x) → Vumpus(x)) ::: Each numpus is a vumpus.\n∀x (Vumpus(x) → Large(x)) ::: Every vumpus is large.\n∀x (Vumpus(x) → Tumpus(x)) ::: Vumpuses are tumpuses.\n∀x (Tumpus(x) → ¬Orange(x)) ::: Every tumpus is not orange.\n∀x (Tumpus(x) → Zumpus(x)) ::: Every tumpus is a zumpus.\n∀x (Zumpus(x) → Dull(x)) ::: Zumpuses are dull.\n∀x (Zumpus(x) → Impus(x)) ::: Every zumpus is an impus.\n∀x (Impus(x) → Spicy(x)) ::: Every impus is spicy.\n∀x (Impus(x) → Rompus(x)) ::: Every impus is a rompus.\n∀x (Rompus(x) → ¬Temperate(x)) ::: Rompuses are not temperate.\n∀x (Rompus(x) → Yumpus(x)) ::: Every rompus is a yumpus.\nDumpus(sam) ::: Sam is a dumpus.\nConclusion:\nDull(sam) ::: Sam is dull.\n------"
    ]
  },
  {
    "id": "ProntoQA_82",
    "context": "Impuses are mean. Each impus is a yumpus. Yumpuses are blue. Yumpuses are wumpuses. Wumpuses are hot. Every wumpus is a numpus. Jompuses are happy. Numpuses are fruity. Numpuses are dumpuses. Every dumpus is not dull. Every dumpus is a tumpus. Tumpuses are not happy. Every tumpus is a vumpus. Vumpuses are not opaque. Every vumpus is a rompus. Rompuses are metallic. Each rompus is a zumpus. Rex is a yumpus.",
    "question": "Is the following statement true or false? Rex is not happy.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nImpus(x) ::: x is an impus\nMean(x) ::: x is mean\nYumpus(x) ::: x is a yumpus\nBlue(x) ::: x is blue\nWumpus(x) ::: x is a wumpus\nHot(x) ::: x is hot\nNumpus(x) ::: x is a numpus\nHappy(x) ::: x is happy\nFruity(x) ::: x is fruity\nDumpus(x) ::: x is a dumpus\nDull(x) ::: x is dull\nTumpus(x) ::: x is a tumpus\nHappy(x) ::: x is happy\nVumpus(x) ::: x is a vumpus\nOpaque(x) ::: x is opaque\nRompus(x) ::: x is a rompus\nMetallic(x) ::: x is metallic\nZumpus(x) ::: x is a zumpus\nRex(x) ::: x is Rex\nPremises:\n∀x (Impus(x) → Mean(x)) ::: Impuses are mean.\n∀x (Yumpus(x) → Blue(x)) ::: Each impus is a yumpus. Yumpuses are blue.\n∀x (Yumpus(x) → Wumpus(x)) ::: Yumpuses are wumpuses.\n∀x (Wumpus(x) → Hot(x)) ::: Wumpuses are hot.\n∀x (Wumpus(x) → Numpus(x)) ::: Every wumpus is a numpus.\n∀x (Jompus(x) → Happy(x)) ::: Jompuses are happy.\n∀x (Numpus(x) → Fruity(x)) ::: Numpuses are fruity.\n∀x (Numpus(x) → Dumpus(x)) ::: Numpuses are dumpuses.\n∀x (Dumpus(x) → ¬Dull(x)) ::: Every dumpus is not dull.\n∀x (Dumpus(x) → Tumpus(x)) ::: Every dumpus is a tumpus.\n∀x (Tumpus(x) → ¬Happy(x)) ::: Tumpuses are not happy.\n∀x (Tumpus(x) → Vumpus(x)) ::: Every tumpus is a vumpus.\n∀x (Vumpus(x) → ¬Opaque(x)) ::: Vumpuses are not opaque.\n∀x (Vumpus(x) → Rompus(x)) ::: Every vumpus is a rompus.\n∀x (Rompus(x) → Metallic(x)) ::: Rompuses are metallic.\n∀x (Rompus(x) → Zumpus(x)) ::: Each rompus is a zumpus.\nYumpus(rex) ::: Rex is a yumpus.\nConclusion:\n¬Happy(rex) ::: Rex is not happy.\n------"
    ]
  },
  {
    "id": "ProntoQA_83",
    "context": "Tumpuses are transparent. Each impus is cold. Impuses are yumpuses. Every yumpus is sour. Yumpuses are zumpuses. Zumpuses are not amenable. Every zumpus is a numpus. Numpuses are wooden. Numpuses are rompuses. Each rompus is not transparent. Every rompus is a dumpus. Dumpuses are dull. Each dumpus is a vumpus. Vumpuses are large. Each vumpus is a wumpus. Every wumpus is floral. Each wumpus is a jompus. Wren is an impus.",
    "question": "Is the following statement true or false? Wren is transparent.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nTumpus(x) ::: x is a tumpus\nTransparent(x) ::: x is transparent\nImpus(x) ::: x is an impus\nCold(x) ::: x is cold\nYumpus(x) ::: x is a yumpus\nSour(x) ::: x is sour\nZumpus(x) ::: x is a zumpus\nAmenable(x) ::: x is amenable\nNumpus(x) ::: x is a numpus\nWooden(x) ::: x is wooden\nRompus(x) ::: x is a rompus\nDull(x) ::: x is dull\nVumpus(x) ::: x is a vumpus\nLarge(x) ::: x is large\nWumpus(x) ::: x is a wumpus\nFloral(x) ::: x is floral\nJompus(x) ::: x is a jompus\nPremises:\n∀x (Tumpus(x) → Transparent(x)) ::: Tumpuses are transparent.\n∀x (Impus(x) → Cold(x)) ::: Each impus is cold.\n∀x (Yumpus(x) → Sour(x)) ::: Yumpuses are sour.\n∀x (Yumpus(x) → Zumpus(x)) ::: Yumpuses are zumpuses.\n∀x (Zumpus(x) → ¬Amenable(x)) ::: Zumpuses are not amenable.\n∀x (Zumpus(x) → Numpus(x)) ::: Every zumpus is a numpus.\n∀x (Numpus(x) → Wooden(x)) ::: Numpuses are wooden.\n∀x (Numpus(x) → Rompus(x)) ::: Numpuses are rompuses.\n∀x (Rompus(x) → ¬Transparent(x)) ::: Each rompus is not transparent.\n∀x (Rompus(x) → Dumpus(x)) ::: Every rompus is a dumpus.\n∀x (Dumpus(x) → Dull(x)) ::: Dumpuses are dull.\n∀x (Dumpus(x) → Vumpus(x)) ::: Each dumpus is a vumpus.\n∀x (Vumpus(x) → Large(x)) ::: Vumpuses are large.\n∀x (Vumpus(x) → Wumpus(x)) ::: Each vumpus is a wumpus.\n∀x (Wumpus(x) → Floral(x)) ::: Every wumpus is floral.\n∀x (Wumpus(x) → Jompus(x)) ::: Each wumpus is a jompus.\nImpus(wren) ::: Wren is an impus.\nConclusion:\nTransparent(wren) ::: Wren is transparent.\n------"
    ]
  },
  {
    "id": "ProntoQA_84",
    "context": "Vumpuses are floral. Vumpuses are wumpuses. Each wumpus is not spicy. Wumpuses are zumpuses. Zumpuses are orange. Zumpuses are tumpuses. Every tumpus is dull. Every tumpus is a dumpus. Every dumpus is amenable. Every yumpus is not opaque. Dumpuses are impuses. Each impus is not feisty. Every impus is a jompus. Each jompus is opaque. Jompuses are numpuses. Rex is a zumpus.",
    "question": "Is the following statement true or false? Rex is not opaque.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nVumpus(x) ::: x is a vumpus\nFloral(x) ::: x is floral\nWumpus(x) ::: x is a wumpus\nSpicy(x) ::: x is spicy\nZumpus(x) ::: x is a zumpus\nOrange(x) ::: x is orange\nTumpus(x) ::: x is a tumpus\nDull(x) ::: x is dull\nDumpus(x) ::: x is a dumpus\nAmenable(x) ::: x is amenable\nYumpus(x) ::: x is a yumpus\nOpaque(x) ::: x is opaque\nImpus(x) ::: x is an impus\nFeisty(x) ::: x is feisty\nJompus(x) ::: x is a jompus\nNumpus(x) ::: x is a numpus\nRex(x) ::: x is Rex\nPremises:\n∀x (Vumpus(x) → Floral(x)) ::: Vumpuses are floral.\n∀x (Vumpus(x) → Wumpus(x)) ::: Vumpuses are wumpuses.\n∀x (Wumpus(x) → ¬Spicy(x)) ::: Each wumpus is not spicy.\n∀x (Zumpus(x) → Orange(x)) ::: Zumpuses are orange.\n∀x (Zumpus(x) → Tumpus(x)) ::: Zumpuses are tumpuses.\n∀x (Tumpus(x) → Dull(x)) ::: Every tumpus is dull.\n∀x (Tumpus(x) → Dumpus(x)) ::: Every tumpus is a dumpus.\n∀x (Dumpus(x) → Amenable(x)) ::: Every dumpus is amenable.\n∀x (Yumpus(x) → ¬Opaque(x)) ::: Every yumpus is not opaque.\n∀x (Dumpus(x) → Impus(x)) ::: Dumpuses are impuses.\n∀x (Impus(x) → ¬Feisty(x)) ::: Each impus is not feisty.\n∀x (Impus(x) → Jompus(x)) ::: Every impus is a jompus.\n∀x (Jompus(x) → Opaque(x)) ::: Each jompus is opaque.\n∀x (Jompus(x) → Numpus(x)) ::: Jompuses are numpuses.\nZumpus(rex) ::: Rex is a zumpus.\nConclusion:\n¬Opaque(rex) ::: Rex is not opaque.\n------"
    ]
  },
  {
    "id": "ProntoQA_85",
    "context": "Rompuses are not earthy. Every rompus is a zumpus. Zumpuses are not bitter. Every zumpus is a jompus. Each jompus is dull. Jompuses are vumpuses. Numpuses are not transparent. Every vumpus is not kind. Vumpuses are tumpuses. Tumpuses are temperate. Every tumpus is a yumpus. Yumpuses are happy. Yumpuses are dumpuses. Every dumpus is liquid. Dumpuses are wumpuses. Wumpuses are transparent. Wumpuses are impuses. Sam is a vumpus.",
    "question": "Is the following statement true or false? Sam is not transparent.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nRompus(x) ::: x is a rompus\nEarthy(x) ::: x is earthy\nZumpus(x) ::: x is a zumpus\nBitter(x) ::: x is bitter\nJompus(x) ::: x is a jompus\nDull(x) ::: x is dull\nVumpus(x) ::: x is a vumpus\nNumpus(x) ::: x is a numpus\nTransparent(x) ::: x is transparent\nKind(x) ::: x is kind\nTumpus(x) ::: x is a tumpus\nTemperate(x) ::: x is temperate\nYumpus(x) ::: x is a yumpus\nHappy(x) ::: x is happy\nDumpus(x) ::: x is a dumpus\nLiquid(x) ::: x is liquid\nWumpus(x) ::: x is a wumpus\nImpus(x) ::: x is an impus\nPremises:\n∀x (Rompus(x) → ¬Earthy(x)) ::: Rompuses are not earthy.\n∀x (Rompus(x) → Zumpus(x)) ::: Every rompus is a zumpus.\n∀x (Zumpus(x) → ¬Bitter(x)) ::: Zumpuses are not bitter.\n∀x (Zumpus(x) → Jompus(x)) ::: Every zumpus is a jompus.\n∀x (Jompus(x) → Dull(x)) ::: Each jompus is dull.\n∀x (Jompus(x) → Vumpus(x)) ::: Jompuses are vumpuses.\n∀x (Numpus(x) → ¬Transparent(x)) ::: Numpuses are not transparent.\n∀x (Vumpus(x) → ¬Kind(x)) ::: Every vumpus is not kind.\n∀x (Vumpus(x) → Tumpus(x)) ::: Vumpuses are tumpuses.\n∀x (Tumpus(x) → Temperate(x)) ::: Tumpuses are temperate.\n∀x (Tumpus(x) → Yumpus(x)) ::: Every tumpus is a yumpus.\n∀x (Yumpus(x) → Happy(x)) ::: Yumpuses are happy.\n∀x (Yumpus(x) → Dumpus(x)) ::: Yumpuses are dumpuses.\n∀x (Dumpus(x) → Liquid(x)) ::: Every dumpus is liquid.\n∀x (Dumpus(x) → Wumpus(x)) ::: Dumpuses are wumpuses.\n∀x (Wumpus(x) → Transparent(x)) ::: Wumpuses are transparent.\n∀x (Wumpus(x) → Impus(x)) ::: Wumpuses are impuses.\nVumpus(sam) ::: Sam is a vumpus.\nConclusion:\n¬Transparent(sam) ::: Sam is not transparent.\n------"
    ]
  },
  {
    "id": "ProntoQA_86",
    "context": "Zumpuses are luminous. Each zumpus is a tumpus. Each tumpus is not spicy. Tumpuses are vumpuses. Vumpuses are not fruity. Every vumpus is an impus. Each impus is small. Rompuses are not shy. Impuses are yumpuses. Each yumpus is temperate. Every yumpus is a jompus. Each jompus is bright. Each jompus is a wumpus. Wumpuses are amenable. Each wumpus is a dumpus. Dumpuses are shy. Dumpuses are numpuses. Stella is an impus.",
    "question": "Is the following statement true or false? Stella is not shy.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nZumpus(x) ::: x is a zumpus\nLuminous(x) ::: x is luminous\nTumpus(x) ::: x is a tumpus\nSpicy(x) ::: x is spicy\nVumpus(x) ::: x is a vumpus\nFruity(x) ::: x is fruity\nImpus(x) ::: x is an impus\nSmall(x) ::: x is small\nRompus(x) ::: x is a rompus\nShy(x) ::: x is shy\nYumpus(x) ::: x is a yumpus\nTemperate(x) ::: x is temperate\nJompus(x) ::: x is a jompus\nBright(x) ::: x is bright\nWumpus(x) ::: x is a wumpus\nAmenable(x) ::: x is amenable\nDumpus(x) ::: x is a dumpus\nShy(x) ::: x is shy\nNumpus(x) ::: x is a numpus\nStella(x) ::: x is Stella\nPremises:\n∀x (Zumpus(x) → Luminous(x)) ::: Zumpuses are luminous.\n∀x (Tumpus(x) → ¬Spicy(x)) ::: Each tumpus is not spicy.\n∀x (Tumpus(x) → Vumpus(x)) ::: Tumpuses are vumpuses.\n∀x (Vumpus(x) → ¬Fruity(x)) ::: Vumpuses are not fruity.\n∀x (Vumpus(x) → Impus(x)) ::: Every vumpus is an impus.\n∀x (Impus(x) → Small(x)) ::: Each impus is small.\n∀x (Rompus(x) → ¬Shy(x)) ::: Rompuses are not shy.\n∀x (Impus(x) → Yumpus(x)) ::: Impuses are yumpuses.\n∀x (Yumpus(x) → Temperate(x)) ::: Each yumpus is temperate.\n∀x (Yumpus(x) → Jompus(x)) ::: Every yumpus is a jompus.\n∀x (Jompus(x) → Bright(x)) ::: Each jompus is bright.\n∀x (Jompus(x) → Wumpus(x)) ::: Each jompus is a wumpus.\n∀x (Wumpus(x) → Amenable(x)) ::: Wumpuses are amenable.\n∀x (Wumpus(x) → Dumpus(x)) ::: Each wumpus is a dumpus.\n∀x (Dumpus(x) → Shy(x)) ::: Dumpuses are shy.\n∀x (Dumpus(x) → Numpus(x)) ::: Dumpuses are numpuses.\nImpus(stella) ::: Stella is an impus.\nConclusion:\n¬Shy(stella) ::: Stella is not shy.\n------"
    ]
  },
  {
    "id": "ProntoQA_87",
    "context": "Numpuses are not fruity. Numpuses are dumpuses. Each dumpus is not orange. Dumpuses are yumpuses. Yumpuses are nervous. Yumpuses are vumpuses. Every impus is sour. Every vumpus is hot. Vumpuses are tumpuses. Each tumpus is small. Tumpuses are rompuses. Every rompus is mean. Rompuses are zumpuses. Each zumpus is not sour. Zumpuses are jompuses. Alex is a yumpus.",
    "question": "Is the following statement true or false? Alex is not sour.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nNumpus(x) ::: x is a numpus\nFruity(x) ::: x is fruity\nDumpus(x) ::: x is a dumpus\nOrange(x) ::: x is orange\nYumpus(x) ::: x is a yumpus\nNervous(x) ::: x is nervous\nVumpus(x) ::: x is a vumpus\nSour(x) ::: x is sour\nHot(x) ::: x is hot\nTumpus(x) ::: x is a tumpus\nSmall(x) ::: x is small\nRompus(x) ::: x is a rompus\nMean(x) ::: x is mean\nZumpus(x) ::: x is a zumpus\nJompus(x) ::: x is a jompus\nPremises:\n∀x (Numpus(x) → ¬Fruity(x)) ::: Numpuses are not fruity.\n∀x (Dumpus(x) → ¬Orange(x)) ::: Dumpuses are not orange.\n∀x (Dumpus(x) → Yumpus(x)) ::: Each dumpus is a yumpus.\n∀x (Yumpus(x) → Nervous(x)) ::: Yumpuses are nervous.\n∀x (Yumpus(x) → Vumpus(x)) ::: Yumpuses are vumpuses.\n∀x (Impus(x) → Sour(x)) ::: Every impus is sour.\n∀x (Vumpus(x) → Hot(x)) ::: Every vumpus is hot.\n∀x (Vumpus(x) → Tumpus(x)) ::: Vumpuses are tumpuses.\n∀x (Tumpus(x) → Small(x)) ::: Each tumpus is small.\n∀x (Tumpus(x) → Rompus(x)) ::: Tumpuses are rompuses.\n∀x (Rompus(x) → Mean(x)) ::: Every rompus is mean.\n∀x (Rompus(x) → Zumpus(x)) ::: Rompuses are zumpuses.\n∀x (Zumpus(x) → ¬Sour(x)) ::: Each zumpus is not sour.\n∀x (Zumpus(x) → Jompus(x)) ::: Zumpuses are jompuses.\nYumpus(alex) ::: Alex is a yumpus.\nConclusion:\n¬Sour(alex) ::: Alex is not sour.\n------"
    ]
  },
  {
    "id": "ProntoQA_88",
    "context": "Jompuses are spicy. Jompuses are yumpuses. Yumpuses are small. Each yumpus is a vumpus. Every impus is not liquid. Every vumpus is blue. Vumpuses are dumpuses. Every dumpus is fruity. Every dumpus is a zumpus. Each zumpus is aggressive. Every zumpus is a rompus. Rompuses are opaque. Every rompus is a wumpus. Each wumpus is liquid. Each wumpus is a tumpus. Wren is a vumpus.",
    "question": "Is the following statement true or false? Wren is liquid.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nJompus(x) ::: x is a jompus\nSpicy(x) ::: x is spicy\nYumpus(x) ::: x is a yumpus\nSmall(x) ::: x is small\nImpus(x) ::: x is an impus\nLiquid(x) ::: x is liquid\nVumpus(x) ::: x is a vumpus\nBlue(x) ::: x is blue\nDumpus(x) ::: x is a dumpus\nFruity(x) ::: x is fruity\nZumpus(x) ::: x is a zumpus\nAggressive(x) ::: x is aggressive\nRompus(x) ::: x is a rompus\nOpaque(x) ::: x is opaque\nWumpus(x) ::: x is a wumpus\nLiquid(x) ::: x is liquid\nTumpus(x) ::: x is a tumpus\nPremises:\n∀x (Jompus(x) → Spicy(x)) ::: Jompuses are spicy.\n∀x (Jompus(x) → Yumpus(x)) ::: Jompuses are yumpuses.\n∀x (Yumpus(x) → Small(x)) ::: Yumpuses are small.\n∀x (Yumpus(x) → Vumpus(x)) ::: Every yumpus is a vumpus.\n∀x (Impus(x) → ¬Liquid(x)) ::: Every impus is not liquid.\n∀x (Vumpus(x) → Blue(x)) ::: Every vumpus is blue.\n∀x (Vumpus(x) → Dumpus(x)) ::: Vumpuses are dumpuses.\n∀x (Dumpus(x) → Fruity(x)) ::: Every dumpus is fruity.\n∀x (Dumpus(x) → Zumpus(x)) ::: Every dumpus is a zumpus.\n∀x (Zumpus(x) → Aggressive(x)) ::: Each zumpus is aggressive.\n∀x (Zumpus(x) → Rompus(x)) ::: Every zumpus is a rompus.\n∀x (Rompus(x) → Opaque(x)) ::: Rompuses are opaque.\n∀x (Rompus(x) → Wumpus(x)) ::: Every rompus is a wumpus.\n∀x (Wumpus(x) → Liquid(x)) ::: Each wumpus is liquid.\n∀x (Wumpus(x) → Tumpus(x)) ::: Each wumpus is a tumpus.\nVumpus(wren) ::: Wren is a vumpus.\nConclusion:\nLiquid(wren) ::: Wren is liquid.\n------"
    ]
  },
  {
    "id": "ProntoQA_89",
    "context": "Tumpuses are sour. Each tumpus is a vumpus. Vumpuses are bright. Each vumpus is a numpus. Each rompus is not brown. Each numpus is liquid. Numpuses are impuses. Impuses are not small. Impuses are jompuses. Jompuses are brown. Jompuses are yumpuses. Max is a tumpus.",
    "question": "Is the following statement true or false? Max is not brown.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant.lpg\n------"
    ]
  },
  {
    "id": "ProntoQA_90",
    "context": "Each zumpus is not nervous. Zumpuses are dumpuses. Every dumpus is sweet. Each dumpus is a vumpus. Each vumpus is not brown. Vumpuses are rompuses. Rompuses are kind. Rompuses are yumpuses. Every yumpus is large. Each yumpus is a tumpus. Tumpuses are fruity. Each tumpus is a wumpus. Every impus is metallic. Wumpuses are not metallic. Every wumpus is a numpus. Numpuses are not transparent. Every numpus is a jompus. Max is a vumpus.",
    "question": "Is the following statement true or false? Max is metallic.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nZumpus(x) ::: x is a zumpus\nNervous(x) ::: x is nervous\nDumpus(x) ::: x is a dumpus\nSweet(x) ::: x is sweet\nVumpus(x) ::: x is a vumpus\nBrown(x) ::: x is brown\nRompus(x) ::: x is a rompus\nKind(x) ::: x is kind\nYumpus(x) ::: x is a yumpus\nLarge(x) ::: x is large\nTumpus(x) ::: x is a tumpus\nFruity(x) ::: x is fruity\nWumpus(x) ::: x is a wumpus\nMetallic(x) ::: x is metallic\nNumpus(x) ::: x is a numpus\nTransparent(x) ::: x is transparent\nJompus(x) ::: x is a jompus\nPremises:\n∀x (Zumpus(x) → ¬Nervous(x)) ::: Each zumpus is not nervous.\n∀x (Zumpus(x) → Dumpus(x)) ::: Zumpuses are dumpuses.\n∀x (Dumpus(x) → Sweet(x)) ::: Every dumpus is sweet.\n∀x (Dumpus(x) → Vumpus(x)) ::: Each dumpus is a vumpus.\n∀x (Vumpus(x) → ¬Brown(x)) ::: Each vumpus is not brown.\n∀x (Vumpus(x) → Rompus(x)) ::: Vumpuses are rompuses.\n∀x (Rompus(x) → Kind(x)) ::: Rompuses are kind.\n∀x (Rompus(x) → Yumpus(x)) ::: Rompuses are yumpuses.\n∀x (Yumpus(x) → Large(x)) ::: Every yumpus is large.\n∀x (Yumpus(x) → Tumpus(x)) ::: Each yumpus is a tumpus.\n∀x (Tumpus(x) → Fruity(x)) ::: Tumpuses are fruity.\n∀x (Tumpus(x) → Wumpus(x)) ::: Each tumpus is a wumpus.\n∀x (Impus(x) → Metallic(x)) ::: Every impus is metallic.\n∀x (Wumpus(x) → ¬Metallic(x)) ::: Wumpuses are not metallic.\n∀x (Wumpus(x) → Numpus(x)) ::: Every wumpus is a numpus.\n∀x (Numpus(x) → ¬Transparent(x)) ::: Numpuses are not transparent.\n∀x (Numpus(x) → Jompus(x)) ::: Every numpus is a jompus.\nVumpus(max) ::: Max is a vumpus.\nConclusion:\nMetallic(max) ::: Max is metallic.\n------"
    ]
  },
  {
    "id": "ProntoQA_91",
    "context": "Numpuses are spicy. Dumpuses are not small. Each numpus is a yumpus. Yumpuses are not opaque. Every yumpus is a wumpus. Wumpuses are floral. Each wumpus is a tumpus. Tumpuses are cold. Each tumpus is a vumpus. Vumpuses are not bright. Each vumpus is an impus. Impuses are nervous. Each impus is a jompus. Jompuses are mean. Jompuses are zumpuses. Zumpuses are small. Zumpuses are rompuses. Wren is a tumpus.",
    "question": "Is the following statement true or false? Wren is not small.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nNumpus(x) ::: x is a numpus\nSpicy(x) ::: x is spicy\nDumpus(x) ::: x is a dumpus\nSmall(x) ::: x is small\nYumpus(x) ::: x is a yumpus\nOpaque(x) ::: x is opaque\nWumpus(x) ::: x is a wumpus\nFloral(x) ::: x is floral\nTumpus(x) ::: x is a tumpus\nCold(x) ::: x is cold\nVumpus(x) ::: x is a vumpus\nBright(x) ::: x is bright\nImpus(x) ::: x is an impus\nNervous(x) ::: x is nervous\nJompus(x) ::: x is a jompus\nMean(x) ::: x is mean\nZumpus(x) ::: x is a zumpus\nRompus(x) ::: x is a rompus\nPremises:\n∀x (Numpus(x) → Spicy(x)) ::: Numpuses are spicy.\n∀x (Dumpus(x) → ¬Small(x)) ::: Dumpuses are not small.\n∀x (Numpus(x) → Yumpus(x)) ::: Each numpus is a yumpus.\n∀x (Yumpus(x) → ¬Opaque(x)) ::: Yumpuses are not opaque.\n∀x (Yumpus(x) → Wumpus(x)) ::: Every yumpus is a wumpus.\n∀x (Wumpus(x) → Floral(x)) ::: Wumpuses are floral.\n∀x (Wumpus(x) → Tumpus(x)) ::: Each wumpus is a tumpus.\n∀x (Tumpus(x) → Cold(x)) ::: Tumpuses are cold.\n∀x (Tumpus(x) → Vumpus(x)) ::: Each tumpus is a vumpus.\n∀x (Vumpus(x) → ¬Bright(x)) ::: Vumpuses are not bright.\n∀x (Vumpus(x) → Impus(x)) ::: Each vumpus is an impus.\n∀x (Impus(x) → Nervous(x)) ::: Impuses are nervous.\n∀x (Impus(x) → Jompus(x)) ::: Each impus is a jompus.\n∀x (Jompus(x) → Mean(x)) ::: Jompuses are mean.\n∀x (Jompus(x) → Zumpus(x)) ::: Jompuses are zumpuses.\n∀x (Zumpus(x) → Small(x)) ::: Zumpuses are small.\n∀x (Zumpus(x) → Rompus(x)) ::: Zumpuses are rompuses.\nTumpus(wren) ::: Wren is a tumpus.\nConclusion:\n¬Small(wren) ::: Wren is not small.\n------"
    ]
  },
  {
    "id": "ProntoQA_92",
    "context": "Wumpuses are transparent. Each wumpus is a dumpus. Dumpuses are shy. Every dumpus is a zumpus. Each zumpus is cold. Zumpuses are rompuses. Every rompus is not red. Rompuses are impuses. Each impus is metallic. Each impus is a numpus. Every numpus is fruity. Numpuses are jompuses. Tumpuses are not metallic. Jompuses are dull. Jompuses are vumpuses. Vumpuses are spicy. Every vumpus is a yumpus. Sally is a wumpus.",
    "question": "Is the following statement true or false? Sally is metallic.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nWumpus(x) ::: x is a wumpus\nTransparent(x) ::: x is transparent\nDumpus(x) ::: x is a dumpus\nShy(x) ::: x is shy\nZumpus(x) ::: x is a zumpus\nCold(x) ::: x is cold\nRompus(x) ::: x is a rompus\nRed(x) ::: x is red\nImpus(x) ::: x is an impus\nMetallic(x) ::: x is metallic\nNumpus(x) ::: x is a numpus\nFruity(x) ::: x is fruity\nJompus(x) ::: x is a jompus\nTumpus(x) ::: x is a tumpus\nDull(x) ::: x is dull\nVumpus(x) ::: x is a vumpus\nSpicy(x) ::: x is spicy\nYumpus(x) ::: x is a yumpus\nPremises:\n∀x (Wumpus(x) → Transparent(x)) ::: Wumpuses are transparent.\n∀x (Wumpus(x) → Dumpus(x)) ::: Each wumpus is a dumpus.\n∀x (Dumpus(x) → Shy(x)) ::: Dumpuses are shy.\n∀x (Dumpus(x) → Zumpus(x)) ::: Every dumpus is a zumpus.\n∀x (Zumpus(x) → Cold(x)) ::: Each zumpus is cold.\n∀x (Zumpus(x) → Rompus(x)) ::: Zumpuses are rompuses.\n∀x (Rompus(x) → ¬Red(x)) ::: Every rompus is not red.\n∀x (Rompus(x) → Impus(x)) ::: Rompuses are impuses.\n∀x (Impus(x) → Metallic(x)) ::: Each impus is metallic.\n∀x (Impus(x) → Numpus(x)) ::: Each impus is a numpus.\n∀x (Numpus(x) → Fruity(x)) ::: Every numpus is fruity.\n∀x (Numpus(x) → Jompus(x)) ::: Numpuses are jompuses.\n∀x (Tumpus(x) → ¬Metallic(x)) ::: Tumpuses are not metallic.\n∀x (Jompus(x) → Dull(x)) ::: Jompuses are dull.\n∀x (Jompus(x) → Vumpus(x)) ::: Jompuses are vumpuses.\n∀x (Vumpus(x) → Spicy(x)) ::: Vumpuses are spicy.\n∀x (Vumpus(x) → Yumpus(x)) ::: Every vumpus is a yumpus.\nWumpus(sally) ::: Sally is a wumpus.\nConclusion:\nMetallic(sally) ::: Sally is metallic.\n------"
    ]
  },
  {
    "id": "ProntoQA_93",
    "context": "Every yumpus is not kind. Each yumpus is an impus. Every impus is not red. Every impus is a numpus. Numpuses are feisty. Each dumpus is not luminous. Numpuses are zumpuses. Each zumpus is cold. Zumpuses are wumpuses. Each wumpus is fruity. Every wumpus is a rompus. Every rompus is spicy. Rompuses are tumpuses. Tumpuses are luminous. Tumpuses are jompuses. Every jompus is not dull. Jompuses are vumpuses. Polly is a numpus.",
    "question": "Is the following statement true or false? Polly is not luminous.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nYumpus(x) ::: x is a yumpus\nKind(x) ::: x is kind\nImpus(x) ::: x is an impus\nRed(x) ::: x is red\nNumpus(x) ::: x is a numpus\nFeisty(x) ::: x is feisty\nDumpus(x) ::: x is a dumpus\nLuminous(x) ::: x is luminous\nZumpus(x) ::: x is a zumpus\nCold(x) ::: x is cold\nWumpus(x) ::: x is a wumpus\nFruity(x) ::: x is fruity\nRompus(x) ::: x is a rompus\nSpicy(x) ::: x is spicy\nTumpus(x) ::: x is a tumpus\nLuminous(x) ::: x is luminous\nJompus(x) ::: x is a jompus\nVumpus(x) ::: x is a vumpus\nPolly(x) ::: x is Polly\nPremises:\n∀x (Yumpus(x) → ¬Kind(x)) ::: Every yumpus is not kind.\n∀x (Yumpus(x) → Impus(x)) ::: Each yumpus is an impus.\n∀x (Impus(x) → ¬Red(x)) ::: Every impus is not red.\n∀x (Impus(x) → Numpus(x)) ::: Every impus is a numpus.\n∀x (Numpus(x) → Feisty(x)) ::: Numpuses are feisty.\n∀x (Dumpus(x) → ¬Luminous(x)) ::: Each dumpus is not luminous.\n∀x (Numpus(x) → Zumpus(x)) ::: Numpuses are zumpuses.\n∀x (Zumpus(x) → Cold(x)) ::: Each zumpus is cold.\n∀x (Zumpus(x) → Wumpus(x)) ::: Zumpuses are wumpuses.\n∀x (Wumpus(x) → Fruity(x)) ::: Every wumpus is fruity.\n∀x (Wumpus(x) → Rompus(x)) ::: Every wumpus is a rompus.\n∀x (Rompus(x) → Spicy(x)) ::: Rompuses are spicy.\n∀x (Rompus(x) → Tumpus(x)) ::: Rompuses are tumpuses.\n∀x (Tumpus(x) → Luminous(x)) ::: Tumpuses are luminous.\n∀x (Tumpus(x) → Jompus(x)) ::: Tumpuses are jompuses.\n∀x (Jompus(x) → ¬Dull(x)) ::: Every jompus is not dull.\n∀x (Jompus(x) → Vumpus(x)) ::: Jompuses are vumpuses.\nNumpus(polly) ::: Polly is a numpus.\nConclusion:\n¬Luminous(polly) ::: Polly is not luminous.\n------"
    ]
  },
  {
    "id": "ProntoQA_94",
    "context": "Dumpuses are wooden. Dumpuses are rompuses. Rompuses are small. Rompuses are jompuses. Jompuses are orange. Jompuses are wumpuses. Each wumpus is earthy. Each wumpus is a zumpus. Zumpuses are angry. Zumpuses are vumpuses. Tumpuses are not angry. Vumpuses are not spicy. Each vumpus is a yumpus. Yumpuses are not hot. Every yumpus is an impus. Each impus is bright. Impuses are numpuses. Max is a dumpus.",
    "question": "Is the following statement true or false? Max is angry.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nDumpus(x) ::: x is a dumpus\nWooden(x) ::: x is wooden\nRompus(x) ::: x is a rompus\nSmall(x) ::: x is small\nJompus(x) ::: x is a jompus\nOrange(x) ::: x is orange\nWumpus(x) ::: x is a wumpus\nEarthy(x) ::: x is earthy\nZumpus(x) ::: x is a zumpus\nAngry(x) ::: x is angry\nVumpus(x) ::: x is a vumpus\nSpicy(x) ::: x is spicy\nYumpus(x) ::: x is a yumpus\nHot(x) ::: x is hot\nImpus(x) ::: x is an impus\nBright(x) ::: x is bright\nNumpus(x) ::: x is a numpus\nPremises:\n∀x (Dumpus(x) → Wooden(x)) ::: Dumpuses are wooden.\n∀x (Dumpus(x) → Rompus(x)) ::: Dumpuses are rompuses.\n∀x (Rompus(x) → Small(x)) ::: Rompuses are small.\n∀x (Rompus(x) → Jompus(x)) ::: Rompuses are jompuses.\n∀x (Jompus(x) → Orange(x)) ::: Jompuses are orange.\n∀x (Jompus(x) → Wumpus(x)) ::: Jompuses are wumpuses.\n∀x (Wumpus(x) → Earthy(x)) ::: Each wumpus is earthy.\n∀x (Wumpus(x) → Zumpus(x)) ::: Each wumpus is a zumpus.\n∀x (Zumpus(x) → Angry(x)) ::: Zumpuses are angry.\n∀x (Zumpus(x) → Vumpus(x)) ::: Zumpuses are vumpuses.\n∀x (Tumpus(x) → ¬Angry(x)) ::: Tumpuses are not angry.\n∀x (Vumpus(x) → ¬Spicy(x)) ::: Vumpuses are not spicy.\n∀x (Vumpus(x) → Yumpus(x)) ::: Each vumpus is a yumpus.\n∀x (Yumpus(x) → ¬Hot(x)) ::: Yumpuses are not hot.\n∀x (Yumpus(x) → Impus(x)) ::: Every yumpus is an impus.\n∀x (Impus(x) → Bright(x)) ::: Impuses are bright.\n∀x (Impus(x) → Numpus(x)) ::: Impuses are numpuses.\nDumpus(max) ::: Max is a dumpus.\nConclusion:\nAngry(max) ::: Max is angry.\n------"
    ]
  },
  {
    "id": "ProntoQA_95",
    "context": "Each impus is large. Impuses are jompuses. Jompuses are dull. Each jompus is a vumpus. Vumpuses are bitter. Vumpuses are dumpuses. Each dumpus is kind. Each dumpus is a rompus. Rompuses are metallic. Each rompus is a wumpus. Every wumpus is blue. Every wumpus is a zumpus. Numpuses are feisty. Zumpuses are not feisty. Every zumpus is a yumpus. Each yumpus is floral. Each yumpus is a tumpus. Stella is a vumpus.",
    "question": "Is the following statement true or false? Stella is feisty.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nImpus(x) ::: x is an impus\nLarge(x) ::: x is large\nJompus(x) ::: x is a jompus\nDull(x) ::: x is dull\nVumpus(x) ::: x is a vumpus\nBitter(x) ::: x is bitter\nDumpus(x) ::: x is a dumpus\nKind(x) ::: x is kind\nRompus(x) ::: x is a rompus\nMetallic(x) ::: x is metallic\nWumpus(x) ::: x is a wumpus\nBlue(x) ::: x is blue\nZumpus(x) ::: x is a zumpus\nNumpus(x) ::: x is a numpus\nFeisty(x) ::: x is feisty\nYumpus(x) ::: x is a yumpus\nFloral(x) ::: x is floral\nTumpus(x) ::: x is a tumpus\nStella(x) ::: x is Stella\nPremises:\n∀x (Impus(x) → Large(x)) ::: Each impus is large.\n∀x (Impus(x) → Jompus(x)) ::: Impuses are jompuses.\n∀x (Jompus(x) → Dull(x)) ::: Jompuses are dull.\n∀x (Jompus(x) → Vumpus(x)) ::: Each jompus is a vumpus.\n∀x (Vumpus(x) → Bitter(x)) ::: Vumpuses are bitter.\n∀x (Vumpus(x) → Dumpus(x)) ::: Vumpuses are dumpuses.\n∀x (Dumpus(x) → Kind(x)) ::: Each dumpus is kind.\n∀x (Dumpus(x) → Rompus(x)) ::: Each dumpus is a rompus.\n∀x (Rompus(x) → Metallic(x)) ::: Rompuses are metallic.\n∀x (Rompus(x) → Wumpus(x)) ::: Each rompus is a wumpus.\n∀x (Wumpus(x) → Blue(x)) ::: Every wumpus is blue.\n∀x (Wumpus(x) → Zumpus(x)) ::: Every wumpus is a zumpus.\n∀x (Numpus(x) → Feisty(x)) ::: Numpuses are feisty.\n∀x (Zumpus(x) → ¬Feisty(x)) ::: Zumpuses are not feisty.\n∀x (Zumpus(x) → Yumpus(x)) ::: Every zumpus is a yumpus.\n∀x (Yumpus(x) → Floral(x)) ::: Each yumpus is floral.\n∀x (Yumpus(x) → Tumpus(x)) ::: Each yumpus is a tumpus.\nVumpus(stella) ::: Stella is a vumpus.\nConclusion:\nFeisty(stella) ::: Stella is feisty.\n------"
    ]
  },
  {
    "id": "ProntoQA_96",
    "context": "Each impus is sour. Each impus is a vumpus. Each vumpus is cold. Vumpuses are zumpuses. Zumpuses are not luminous. Zumpuses are numpuses. Every numpus is earthy. Every numpus is a yumpus. Yumpuses are not mean. Each tumpus is bright. Each yumpus is a rompus. Each rompus is orange. Every rompus is a dumpus. Dumpuses are not bright. Dumpuses are jompuses. Every jompus is small. Jompuses are wumpuses. Fae is a zumpus.",
    "question": "Is the following statement true or false? Fae is bright.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nImpus(x) ::: x is an impus\nSour(x) ::: x is sour\nVumpus(x) ::: x is a vumpus\nCold(x) ::: x is cold\nZumpus(x) ::: x is a zumpus\nLuminous(x) ::: x is luminous\nNumpus(x) ::: x is a numpus\nEarthy(x) ::: x is earthy\nYumpus(x) ::: x is a yumpus\nMean(x) ::: x is mean\nTumpus(x) ::: x is a tumpus\nBright(x) ::: x is bright\nRompus(x) ::: x is a rompus\nOrange(x) ::: x is orange\nDumpus(x) ::: x is a dumpus\nJompus(x) ::: x is a jompus\nSmall(x) ::: x is small\nWumpus(x) ::: x is a wumpus\nFae(x) ::: x is fae\nPremises:\n∀x (Impus(x) → Sour(x)) ::: Each impus is sour.\n∀x (Impus(x) → Vumpus(x)) ::: Each impus is a vumpus.\n∀x (Vumpus(x) → Cold(x)) ::: Each vumpus is cold.\n∀x (Vumpus(x) → Zumpus(x)) ::: Vumpuses are zumpuses.\n∀x (Zumpus(x) → ¬Luminous(x)) ::: Zumpuses are not luminous.\n∀x (Zumpus(x) → Numpus(x)) ::: Zumpuses are numpuses.\n∀x (Numpus(x) → Earthy(x)) ::: Every numpus is earthy.\n∀x (Numpus(x) → Yumpus(x)) ::: Every numpus is a yumpus.\n∀x (Yumpus(x) → ¬Mean(x)) ::: Yumpuses are not mean.\n∀x (Tumpus(x) → Bright(x)) ::: Each tumpus is bright.\n∀x (Yumpus(x) → Rompus(x)) ::: Each yumpus is a rompus.\n∀x (Rompus(x) → Orange(x)) ::: Each rompus is orange.\n∀x (Rompus(x) → Dumpus(x)) ::: Every rompus is a dumpus.\n∀x (Dumpus(x) → ¬Bright(x)) ::: Dumpuses are not bright.\n∀x (Dumpus(x) → Jompus(x)) ::: Dumpuses are jompuses.\n∀x (Jompus(x) → Small(x)) ::: Every jompus is small.\n∀x (Jompus(x) → Wumpus(x)) ::: Jompuses are wumpuses.\nZumpus(fae) ::: Fae is a zumpus.\nConclusion:\nBright(fae) ::: Fae is bright.\n------"
    ]
  },
  {
    "id": "ProntoQA_97",
    "context": "Tumpuses are large. Every tumpus is a rompus. Rompuses are not transparent. Each rompus is a zumpus. Every zumpus is sweet. Each zumpus is a vumpus. Every vumpus is brown. Vumpuses are yumpuses. Yumpuses are not aggressive. Yumpuses are numpuses. Numpuses are dull. Each numpus is an impus. Impuses are not metallic. Each impus is a jompus. Every dumpus is not dull. Jompuses are not cold. Jompuses are wumpuses. Polly is a rompus.",
    "question": "Is the following statement true or false? Polly is not dull.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nTumpus(x) ::: x is a tumpus\nLarge(x) ::: x is large\nRompus(x) ::: x is a rompus\nTransparent(x) ::: x is transparent\nZumpus(x) ::: x is a zumpus\nSweet(x) ::: x is sweet\nVumpus(x) ::: x is a vumpus\nBrown(x) ::: x is brown\nYumpus(x) ::: x is a yumpus\nAggressive(x) ::: x is aggressive\nNumpus(x) ::: x is a numpus\nDull(x) ::: x is dull\nImpus(x) ::: x is an impus\nMetallic(x) ::: x is metallic\nJompus(x) ::: x is a jompus\nDumpus(x) ::: x is a dumpus\nCold(x) ::: x is cold\nWumpus(x) ::: x is a wumpus\nPremises:\n∀x (Tumpus(x) → Large(x)) ::: Tumpuses are large.\n∀x (Tumpus(x) → Rompus(x)) ::: Every tumpus is a rompus.\n∀x (Rompus(x) → ¬Transparent(x)) ::: Rompuses are not transparent.\n∀x (Zumpus(x) → Sweet(x)) ::: Each rompus is a zumpus.\n∀x (Zumpus(x) → Vumpus(x)) ::: Every zumpus is a vumpus.\n∀x (Vumpus(x) → Brown(x)) ::: Every vumpus is brown.\n∀x (Vumpus(x) → Yumpus(x)) ::: Vumpuses are yumpuses.\n∀x (Yumpus(x) → ¬Aggressive(x)) ::: Yumpuses are not aggressive.\n∀x (Yumpus(x) → Numpus(x)) ::: Yumpuses are numpuses.\n∀x (Numpus(x) → Dull(x)) ::: Numpuses are dull.\n∀x (Impus(x) → ¬Metallic(x)) ::: Each impus is not metallic.\n∀x (Impus(x) → Jompus(x)) ::: Each impus is a jompus.\n∀x (Dumpus(x) → ¬Dull(x)) ::: Every dumpus is not dull.\n∀x (Jompus(x) → ¬Cold(x)) ::: Jompuses are not cold.\n∀x (Jompus(x) → Wumpus(x)) ::: Jompuses are wumpuses.\nRompus(polly) ::: Polly is a rompus.\nConclusion:\n¬Dull(polly) ::: Polly is not dull.\n------"
    ]
  },
  {
    "id": "ProntoQA_98",
    "context": "Vumpuses are liquid. Vumpuses are rompuses. Every rompus is fruity. Each rompus is a zumpus. Every zumpus is bright. Zumpuses are tumpuses. Each tumpus is happy. Each tumpus is a jompus. Jompuses are large. Every jompus is an impus. Impuses are cold. Impuses are dumpuses. Dumpuses are angry. Each dumpus is a yumpus. Each yumpus is not orange. Every wumpus is not angry. Yumpuses are numpuses. Rex is a zumpus.",
    "question": "Is the following statement true or false? Rex is not angry.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nVumpus(x) ::: x is a vumpus\nLiquid(x) ::: x is liquid\nRompus(x) ::: x is a rompus\nFruity(x) ::: x is fruity\nZumpus(x) ::: x is a zumpus\nBright(x) ::: x is bright\nTumpus(x) ::: x is a tumpus\nHappy(x) ::: x is happy\nJompus(x) ::: x is a jompus\nLarge(x) ::: x is large\nImpus(x) ::: x is an impus\nCold(x) ::: x is cold\nDumpus(x) ::: x is a dumpus\nAngry(x) ::: x is angry\nYumpus(x) ::: x is a yumpus\nNumpus(x) ::: x is a numpus\nPremises:\n∀x (Vumpus(x) → Liquid(x)) ::: Vumpuses are liquid.\n∀x (Vumpus(x) → Rompus(x)) ::: Vumpuses are rompuses.\n∀x (Rompus(x) → Fruity(x)) ::: Every rompus is fruity.\n∀x (Zumpus(x) → Bright(x)) ::: Each rompus is a zumpus.\n∀x (Zumpus(x) → Tumpus(x)) ::: Every zumpus is a tumpus.\n∀x (Tumpus(x) → Happy(x)) ::: Each tumpus is happy.\n∀x (Tumpus(x) → Jompus(x)) ::: Each tumpus is a jompus.\n∀x (Jompus(x) → Large(x)) ::: Jompuses are large.\n∀x (Jompus(x) → Impus(x)) ::: Every jompus is an impus.\n∀x (Impus(x) → Cold(x)) ::: Impuses are cold.\n∀x (Impus(x) → Dumpus(x)) ::: Impuses are dumpuses.\n∀x (Dumpus(x) → Angry(x)) ::: Dumpuses are angry.\n∀x (Dumpus(x) → Yumpus(x)) ::: Each dumpus is a yumpus.\n∀x (Yumpus(x) → ¬Orange(x)) ::: Each yumpus is not orange.\n∀x (Wumpus(x) → ¬Angry(x)) ::: Every wumpus is not angry.\n∀x (Yumpus(x) → Numpus(x)) ::: Yumpuses are numpuses.\nZumpus(rex) ::: Rex is a zumpus.\nConclusion:\n¬Angry(rex) ::: Rex is not angry.\n------"
    ]
  },
  {
    "id": "ProntoQA_99",
    "context": "Dumpuses are cold. Dumpuses are rompuses. Each rompus is red. Rompuses are numpuses. Numpuses are dull. Each numpus is a yumpus. Yumpuses are happy. Every yumpus is a tumpus. Every tumpus is not kind. Every tumpus is a zumpus. Zumpuses are large. Every zumpus is a vumpus. Vumpuses are earthy. Every vumpus is an impus. Jompuses are not earthy. Impuses are not liquid. Impuses are wumpuses. Sam is a numpus.",
    "question": "Is the following statement true or false? Sam is not earthy.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nDumpus(x) ::: x is a dumpus\nCold(x) ::: x is cold\nRompus(x) ::: x is a rompus\nRed(x) ::: x is red\nNumpus(x) ::: x is a numpus\nDull(x) ::: x is dull\nYumpus(x) ::: x is a yumpus\nHappy(x) ::: x is happy\nTumpus(x) ::: x is a tumpus\nKind(x) ::: x is kind\nZumpus(x) ::: x is a zumpus\nLarge(x) ::: x is large\nVumpus(x) ::: x is a vumpus\nEarthy(x) ::: x is earthy\nImpus(x) ::: x is an impus\nLiquid(x) ::: x is liquid\nWumpus(x) ::: x is a wumpus\nPremises:\n∀x (Dumpus(x) → Cold(x)) ::: Dumpuses are cold.\n∀x (Dumpus(x) → Rompus(x)) ::: Dumpuses are rompuses.\n∀x (Rompus(x) → Red(x)) ::: Each rompus is red.\n∀x (Numpus(x) → Dull(x)) ::: Numpuses are dull.\n∀x (Numpus(x) → Yumpus(x)) ::: Each numpus is a yumpus.\n∀x (Yumpus(x) → Happy(x)) ::: Yumpuses are happy.\n∀x (Yumpus(x) → Tumpus(x)) ::: Every yumpus is a tumpus.\n∀x (Tumpus(x) → ¬Kind(x)) ::: Every tumpus is not kind.\n∀x (Tumpus(x) → Zumpus(x)) ::: Every tumpus is a zumpus.\n∀x (Zumpus(x) → Large(x)) ::: Zumpuses are large.\n∀x (Zumpus(x) → Vumpus(x)) ::: Every zumpus is a vumpus.\n∀x (Vumpus(x) → Earthy(x)) ::: Vumpuses are earthy.\n∀x (Vumpus(x) → Impus(x)) ::: Every vumpus is an impus.\n∀x (Impus(x) → ¬Earthy(x)) ::: Impuses are not earthy.\n∀x (Impus(x) → ¬Liquid(x)) ::: Impuses are not liquid.\n∀x (Impus(x) → Wumpus(x)) ::: Impuses are wumpuses.\nNumpus(sam) ::: Sam is a numpus.\nConclusion:\n¬Earthy(sam) ::: Sam is not earthy.\n------"
    ]
  },
  {
    "id": "ProntoQA_100",
    "context": "Vumpuses are sour. Vumpuses are tumpuses. Tumpuses are bright. Each tumpus is a dumpus. Each dumpus is not large. Dumpuses are numpuses. Numpuses are metallic. Each numpus is a jompus. Every jompus is not angry. Jompuses are wumpuses. Wumpuses are not shy. Wumpuses are rompuses. Rompuses are not opaque. Rompuses are yumpuses. Every zumpus is not blue. Yumpuses are blue. Yumpuses are impuses. Alex is a numpus.",
    "question": "Is the following statement true or false? Alex is blue.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nVumpus(x) ::: x is a vumpus\nSour(x) ::: x is sour\nTumpus(x) ::: x is a tumpus\nBright(x) ::: x is bright\nDumpus(x) ::: x is a dumpus\nLarge(x) ::: x is large\nNumpus(x) ::: x is a numpus\nMetallic(x) ::: x is metallic\nJompus(x) ::: x is a jompus\nAngry(x) ::: x is angry\nWumpus(x) ::: x is a wumpus\nShy(x) ::: x is shy\nRompus(x) ::: x is a rompus\nOpaque(x) ::: x is opaque\nYumpus(x) ::: x is a yumpus\nBlue(x) ::: x is blue\nImpus(x) ::: x is an impus\nPremises:\n∀x (Vumpus(x) → Sour(x)) ::: Vumpuses are sour.\n∀x (Vumpus(x) → Tumpus(x)) ::: Vumpuses are tumpuses.\n∀x (Tumpus(x) → Bright(x)) ::: Tumpuses are bright.\n∀x (Tumpus(x) → Dumpus(x)) ::: Each tumpus is a dumpus.\n∀x (Dumpus(x) → ¬Large(x)) ::: Each dumpus is not large.\n∀x (Dumpus(x) → Numpus(x)) ::: Dumpuses are numpuses.\n∀x (Numpus(x) → Metallic(x)) ::: Numpuses are metallic.\n∀x (Numpus(x) → Jompus(x)) ::: Each numpus is a jompus.\n∀x (Jompus(x) → ¬Angry(x)) ::: Every jompus is not angry.\n∀x (Jompus(x) → Wumpus(x)) ::: Jompuses are wumpuses.\n∀x (Wumpus(x) → ¬Shy(x)) ::: Wumpuses are not shy.\n∀x (Wumpus(x) → Rompus(x)) ::: Wumpuses are rompuses.\n∀x (Rompus(x) → ¬Opaque(x)) ::: Rompuses are not opaque.\n∀x (Rompus(x) → Yumpus(x)) ::: Rompuses are yumpuses.\n∀x (Zumpus(x) → ¬Blue(x)) ::: Every zumpus is not blue.\n∀x (Yumpus(x) → Blue(x)) ::: Yumpuses are blue.\n∀x (Yumpus(x) → Impus(x)) ::: Yumpuses are impuses.\nNumpus(alex) ::: Alex is a numpus.\nConclusion:\nBlue(alex) ::: Alex is blue.\n------"
    ]
  },
  {
    "id": "ProntoQA_101",
    "context": "Each zumpus is dull. Every impus is not shy. Each zumpus is a rompus. Rompuses are large. Every rompus is a wumpus. Wumpuses are metallic. Wumpuses are yumpuses. Yumpuses are fruity. Each yumpus is a vumpus. Vumpuses are shy. Vumpuses are tumpuses. Each tumpus is red. Tumpuses are jompuses. Jompuses are not bitter. Jompuses are dumpuses. Sam is a zumpus.",
    "question": "Is the following statement true or false? Sam is not shy.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nZumpus(x) ::: x is a zumpus\nDull(x) ::: x is dull\nImpus(x) ::: x is an impus\nShy(x) ::: x is shy\nRompus(x) ::: x is a rompus\nLarge(x) ::: x is large\nWumpus(x) ::: x is a wumpus\nMetallic(x) ::: x is metallic\nYumpus(x) ::: x is a yumpus\nFruity(x) ::: x is fruity\nVumpus(x) ::: x is a vumpus\nShy(x) ::: x is shy\nTumpus(x) ::: x is a tumpus\nRed(x) ::: x is red\nJompus(x) ::: x is a jompus\nBitter(x) ::: x is bitter\nDumpus(x) ::: x is a dumpus\nPremises:\n∀x (Zumpus(x) → Dull(x)) ::: Each zumpus is dull.\n∀x (Impus(x) → ¬Shy(x)) ::: Every impus is not shy.\n∀x (Zumpus(x) → Rompus(x)) ::: Each zumpus is a rompus.\n∀x (Rompus(x) → Large(x)) ::: Rompuses are large.\n∀x (Rompus(x) → Wumpus(x)) ::: Every rompus is a wumpus.\n∀x (Wumpus(x) → Metallic(x)) ::: Wumpuses are metallic.\n∀x (Wumpus(x) → Yumpus(x)) ::: Wumpuses are yumpuses.\n∀x (Yumpus(x) → Fruity(x)) ::: Yumpuses are fruity.\n∀x (Yumpus(x) → Vumpus(x)) ::: Each yumpus is a vumpus.\n∀x (Vumpus(x) → Shy(x)) ::: Vumpuses are shy.\n∀x (Vumpus(x) → Tumpus(x)) ::: Vumpuses are tumpuses.\n∀x (Tumpus(x) → Red(x)) ::: Each tumpus is red.\n∀x (Tumpus(x) → Jompus(x)) ::: Tumpuses are jompuses.\n∀x (Jompus(x) → ¬Bitter(x)) ::: Jompuses are not bitter.\n∀x (Jompus(x) → Dumpus(x)) ::: Jompuses are dumpuses.\nZumpus(sam) ::: Sam is a zumpus.\nConclusion:\n¬Shy(sam) ::: Sam is not shy.\n------"
    ]
  },
  {
    "id": "ProntoQA_102",
    "context": "Each dumpus is not dull. Tumpuses are not spicy. Dumpuses are vumpuses. Vumpuses are fruity. Each vumpus is a zumpus. Each zumpus is large. Each zumpus is a wumpus. Wumpuses are blue. Wumpuses are numpuses. Each numpus is kind. Numpuses are rompuses. Rompuses are cold. Rompuses are jompuses. Jompuses are not transparent. Jompuses are yumpuses. Yumpuses are spicy. Every yumpus is an impus. Rex is a wumpus.",
    "question": "Is the following statement true or false? Rex is not spicy.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nDumpus(x) ::: x is a dumpus\nDull(x) ::: x is dull\nTumpus(x) ::: x is a tumpus\nSpicy(x) ::: x is spicy\nVumpus(x) ::: x is a vumpus\nFruity(x) ::: x is fruity\nZumpus(x) ::: x is a zumpus\nLarge(x) ::: x is large\nWumpus(x) ::: x is a wumpus\nBlue(x) ::: x is blue\nNumpus(x) ::: x is a numpus\nKind(x) ::: x is kind\nRompus(x) ::: x is a rompus\nCold(x) ::: x is cold\nJompus(x) ::: x is a jompus\nTransparent(x) ::: x is transparent\nYumpus(x) ::: x is a yumpus\nSpicy(x) ::: x is spicy\nImpus(x) ::: x is an impus\nRex(x) ::: x is Rex\nPremises:\n∀x (Dumpus(x) → ¬Dull(x)) ::: Each dumpus is not dull.\n∀x (Tumpus(x) → ¬Spicy(x)) ::: Tumpuses are not spicy.\n∀x (Dumpus(x) → Vumpus(x)) ::: Dumpuses are vumpuses.\n∀x (Vumpus(x) → Fruity(x)) ::: Vumpuses are fruity.\n∀x (Vumpus(x) → Zumpus(x)) ::: Each vumpus is a zumpus.\n∀x (Zumpus(x) → Large(x)) ::: Each zumpus is large.\n∀x (Zumpus(x) → Wumpus(x)) ::: Each zumpus is a wumpus.\n∀x (Wumpus(x) → Blue(x)) ::: Wumpuses are blue.\n∀x (Wumpus(x) → Numpus(x)) ::: Wumpuses are numpuses.\n∀x (Numpus(x) → Kind(x)) ::: Numpuses are kind.\n∀x (Numpus(x) → Rompus(x)) ::: Numpuses are rompuses.\n∀x (Rompus(x) → Cold(x)) ::: Rompuses are cold.\n∀x (Rompus(x) → Jompus(x)) ::: Rompuses are jompuses.\n∀x (Jompus(x) → ¬Transparent(x)) ::: Jompuses are not transparent.\n∀x (Jompus(x) → Yumpus(x)) ::: Jompuses are yumpuses.\n∀x (Yumpus(x) → Spicy(x)) ::: Yumpuses are spicy.\n∀x (Yumpus(x) → Impus(x)) ::: Every yumpus is an impus.\nWumpus(rex) ::: Rex is a wumpus.\nConclusion:\n¬Spicy(rex) ::: Rex is not spicy.\n------"
    ]
  },
  {
    "id": "ProntoQA_103",
    "context": "Every rompus is not liquid. Each rompus is a tumpus. Tumpuses are not opaque. Every tumpus is a jompus. Jompuses are red. Jompuses are vumpuses. Each vumpus is not angry. Dumpuses are small. Vumpuses are numpuses. Numpuses are not small. Numpuses are zumpuses. Zumpuses are shy. Zumpuses are impuses. Impuses are not bright. Every impus is a yumpus. Yumpuses are not bitter. Each yumpus is a wumpus. Sally is a rompus.",
    "question": "Is the following statement true or false? Sally is small.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nRompus(x) ::: x is a rompus\nLiquid(x) ::: x is liquid\nTumpus(x) ::: x is a tumpus\nOpaque(x) ::: x is opaque\nJompus(x) ::: x is a jompus\nRed(x) ::: x is red\nVumpus(x) ::: x is a vumpus\nAngry(x) ::: x is angry\nDumpus(x) ::: x is a dumpus\nSmall(x) ::: x is small\nNumpus(x) ::: x is a numpus\nZumpus(x) ::: x is a zumpus\nShy(x) ::: x is shy\nImpus(x) ::: x is an impus\nBright(x) ::: x is bright\nYumpus(x) ::: x is a yumpus\nWumpus(x) ::: x is a wumpus\nPremises:\n∀x (Rompus(x) → ¬Liquid(x)) ::: Every rompus is not liquid.\n∀x (Rompus(x) → Tumpus(x)) ::: Each rompus is a tumpus.\n∀x (Tumpus(x) → ¬Opaque(x)) ::: Tumpuses are not opaque.\n∀x (Tumpus(x) → Jompus(x)) ::: Every tumpus is a jompus.\n∀x (Jompus(x) → Red(x)) ::: Jompuses are red.\n∀x (Jompus(x) → Vumpus(x)) ::: Jompuses are vumpuses.\n∀x (Vumpus(x) → ¬Angry(x)) ::: Vumpuses are not angry.\n∀x (Dumpus(x) → Small(x)) ::: Dumpuses are small.\n∀x (Vumpus(x) → Numpus(x)) ::: Vumpuses are numpuses.\n∀x (Numpus(x) → ¬Small(x)) ::: Numpuses are not small.\n∀x (Numpus(x) → Zumpus(x)) ::: Numpuses are zumpuses.\n∀x (Zumpus(x) → Shy(x)) ::: Zumpuses are shy.\n∀x (Zumpus(x) → Impus(x)) ::: Zumpuses are impuses.\n∀x (Impus(x) → ¬Bright(x)) ::: Impuses are not bright.\n∀x (Impus(x) → Yumpus(x)) ::: Each impus is a yumpus.\n∀x (Yumpus(x) → ¬Bitter(x)) ::: Yumpuses are not bitter.\n∀x (Yumpus(x) → Wumpus(x)) ::: Each yumpus is a wumpus.\nRompus(sally) ::: Sally is a rompus.\nConclusion:\nSmall(sally) ::: Sally is small.\n------"
    ]
  },
  {
    "id": "ProntoQA_104",
    "context": "Yumpuses are not temperate. Yumpuses are jompuses. Jompuses are floral. Every jompus is a wumpus. Wumpuses are mean. Wumpuses are impuses. Impuses are not liquid. Each impus is a vumpus. Every vumpus is red. Each vumpus is a dumpus. Every dumpus is not sour. Each dumpus is a zumpus. Each rompus is not red. Each zumpus is large. Zumpuses are numpuses. Numpuses are opaque. Numpuses are tumpuses. Stella is a yumpus.",
    "question": "Is the following statement true or false? Stella is red.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nYumpus(x) ::: x is a yumpus\nTemperate(x) ::: x is temperate\nJompus(x) ::: x is a jompus\nFloral(x) ::: x is floral\nWumpus(x) ::: x is a wumpus\nMean(x) ::: x is mean\nImpus(x) ::: x is an impus\nLiquid(x) ::: x is liquid\nVumpus(x) ::: x is a vumpus\nRed(x) ::: x is red\nDumpus(x) ::: x is a dumpus\nSour(x) ::: x is sour\nZumpus(x) ::: x is a zumpus\nLarge(x) ::: x is large\nNumpus(x) ::: x is a numpus\nOpaque(x) ::: x is opaque\nTumpus(x) ::: x is a tumpus\nStella(x) ::: x is Stella\nPremises:\n∀x (Yumpus(x) → ¬Temperate(x)) ::: Yumpuses are not temperate.\n∀x (Jompus(x) → Floral(x)) ::: Jompuses are floral.\n∀x (Jompus(x) → Wumpus(x)) ::: Every jompus is a wumpus.\n∀x (Wumpus(x) → Mean(x)) ::: Wumpuses are mean.\n∀x (Wumpus(x) → Impus(x)) ::: Wumpuses are impuses.\n∀x (Impus(x) → ¬Liquid(x)) ::: Impuses are not liquid.\n∀x (Impus(x) → Vumpus(x)) ::: Each impus is a vumpus.\n∀x (Vumpus(x) → Red(x)) ::: Every vumpus is red.\n∀x (Vumpus(x) → Dumpus(x)) ::: Each vumpus is a dumpus.\n∀x (Dumpus(x) → ¬Sour(x)) ::: Every dumpus is not sour.\n∀x (Dumpus(x) → Zumpus(x)) ::: Each dumpus is a zumpus.\n∀x (Rompus(x) → ¬Red(x)) ::: Each rompus is not red.\n∀x (Zumpus(x) → Large(x)) ::: Each zumpus is large.\n∀x (Zumpus(x) → Numpus(x)) ::: Zumpuses are numpuses.\n∀x (Numpus(x) → Opaque(x)) ::: Numpuses are opaque.\n∀x (Numpus(x) → Tumpus(x)) ::: Numpuses are tumpuses.\nYumpus(stella) ::: Stella is a yumpus.\nConclusion:\nRed(stella) ::: Stella is red.\n------"
    ]
  },
  {
    "id": "ProntoQA_105",
    "context": "Tumpuses are wooden. Every tumpus is a yumpus. Yumpuses are spicy. Yumpuses are impuses. Impuses are feisty. Every impus is a rompus. Each rompus is large. Each rompus is a zumpus. Wumpuses are not brown. Every zumpus is not cold. Zumpuses are numpuses. Numpuses are brown. Every numpus is a vumpus. Each vumpus is not floral. Each vumpus is a jompus. Every jompus is not mean. Each jompus is a dumpus. Alex is a yumpus.",
    "question": "Is the following statement true or false? Alex is not brown.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nTumpus(x) ::: x is a tumpus\nWooden(x) ::: x is wooden\nYumpus(x) ::: x is a yumpus\nSpicy(x) ::: x is spicy\nImpus(x) ::: x is an impus\nFeisty(x) ::: x is feisty\nRompus(x) ::: x is a rompus\nLarge(x) ::: x is large\nZumpus(x) ::: x is a zumpus\nBrown(x) ::: x is brown\nCold(x) ::: x is cold\nNumpus(x) ::: x is a numpus\nVumpus(x) ::: x is a vumpus\nFloral(x) ::: x is floral\nJompus(x) ::: x is a jompus\nMean(x) ::: x is mean\nDumpus(x) ::: x is a dumpus\nPremises:\n∀x (Tumpus(x) → Wooden(x)) ::: Tumpuses are wooden.\n∀x (Tumpus(x) → Yumpus(x)) ::: Every tumpus is a yumpus.\n∀x (Yumpus(x) → Spicy(x)) ::: Yumpuses are spicy.\n∀x (Yumpus(x) → Impus(x)) ::: Yumpuses are impuses.\n∀x (Impus(x) → Feisty(x)) ::: Impuses are feisty.\n∀x (Impus(x) → Rompus(x)) ::: Every impus is a rompus.\n∀x (Rompus(x) → Large(x)) ::: Each rompus is large.\n∀x (Rompus(x) → Zumpus(x)) ::: Each rompus is a zumpus.\n∀x (Wumpus(x) → ¬Brown(x)) ::: Wumpuses are not brown.\n∀x (Zumpus(x) → ¬Cold(x)) ::: Every zumpus is not cold.\n∀x (Zumpus(x) → Numpus(x)) ::: Zumpuses are numpuses.\n∀x (Numpus(x) → Brown(x)) ::: Numpuses are brown.\n∀x (Numpus(x) → Vumpus(x)) ::: Every numpus is a vumpus.\n∀x (Vumpus(x) → ¬Floral(x)) ::: Each vumpus is not floral.\n∀x (Vumpus(x) → Jompus(x)) ::: Each vumpus is a jompus.\n∀x (Jompus(x) → ¬Mean(x)) ::: Each jompus is not mean.\n∀x (Jompus(x) → Dumpus(x)) ::: Each jompus is a dumpus.\nYumpus(alex) ::: Alex is a yumpus.\nConclusion:\n¬Brown(alex) ::: Alex is not brown.\n------"
    ]
  },
  {
    "id": "ProntoQA_106",
    "context": "Rompuses are not dull. Rompuses are wumpuses. Each wumpus is floral. Every wumpus is a dumpus. Dumpuses are hot. Every dumpus is a vumpus. Vumpuses are not large. Vumpuses are zumpuses. Every zumpus is nervous. Zumpuses are jompuses. Jompuses are spicy. Jompuses are numpuses. Numpuses are wooden. Every numpus is an impus. Every impus is angry. Tumpuses are not angry. Each impus is a yumpus. Max is a vumpus.",
    "question": "Is the following statement true or false? Max is angry.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nRompus(x) ::: x is a rompus\nDull(x) ::: x is dull\nWumpus(x) ::: x is a wumpus\nFloral(x) ::: x is floral\nDumpus(x) ::: x is a dumpus\nHot(x) ::: x is hot\nVumpus(x) ::: x is a vumpus\nLarge(x) ::: x is large\nZumpus(x) ::: x is a zumpus\nNervous(x) ::: x is nervous\nJompus(x) ::: x is a jompus\nSpicy(x) ::: x is spicy\nNumpus(x) ::: x is a numpus\nWooden(x) ::: x is wooden\nImpus(x) ::: x is an impus\nAngry(x) ::: x is angry\nTumpus(x) ::: x is a tumpus\nPremises:\n∀x (Rompus(x) → ¬Dull(x)) ::: Rompuses are not dull.\n∀x (Wumpus(x) → Floral(x)) ::: Rompuses are wumpuses.\n∀x (Wumpus(x) → Dumpus(x)) ::: Each wumpus is a dumpus.\n∀x (Dumpus(x) → Hot(x)) ::: Dumpuses are hot.\n∀x (Dumpus(x) → Vumpus(x)) ::: Every dumpus is a vumpus.\n∀x (Vumpus(x) → ¬Large(x)) ::: Vumpuses are not large.\n∀x (Vumpus(x) → Zumpus(x)) ::: Vumpuses are zumpuses.\n∀x (Zumpus(x) → Nervous(x)) ::: Every zumpus is nervous.\n∀x (Zumpus(x) → Jompus(x)) ::: Zumpuses are jompuses.\n∀x (Jompus(x) → Spicy(x)) ::: Jompuses are spicy.\n∀x (Jompus(x) → Numpus(x)) ::: Jompuses are numpuses.\n∀x (Numpus(x) → Wooden(x)) ::: Numpuses are wooden.\n∀x (Numpus(x) → Impus(x)) ::: Every numpus is an impus.\n∀x (Impus(x) → Angry(x)) ::: Every impus is angry.\n∀x (Tumpus(x) → ¬Angry(x)) ::: Tumpuses are not angry.\n∀x (Impus(x) → Yumpus(x)) ::: Each impus is a yumpus.\nVumpus(max) ::: Max is a vumpus.\nConclusion:\nAngry(max) ::: Max is angry.\n------"
    ]
  },
  {
    "id": "ProntoQA_107",
    "context": "Every yumpus is not opaque. Yumpuses are zumpuses. Zumpuses are nervous. Every zumpus is a tumpus. Each tumpus is not large. Tumpuses are impuses. Impuses are temperate. Impuses are numpuses. Every wumpus is bitter. Each numpus is not bitter. Numpuses are vumpuses. Every vumpus is not kind. Vumpuses are rompuses. Rompuses are brown. Rompuses are jompuses. Every jompus is wooden. Every jompus is a dumpus. Sally is a yumpus.",
    "question": "Is the following statement true or false? Sally is not bitter.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nYumpus(x) ::: x is a yumpus\nOpaque(x) ::: x is opaque\nZumpus(x) ::: x is a zumpus\nNervous(x) ::: x is nervous\nTumpus(x) ::: x is a tumpus\nLarge(x) ::: x is large\nImpus(x) ::: x is an impus\nTemperate(x) ::: x is temperate\nNumpus(x) ::: x is a numpus\nBitter(x) ::: x is bitter\nVumpus(x) ::: x is a vumpus\nKind(x) ::: x is kind\nRompus(x) ::: x is a rompus\nBrown(x) ::: x is brown\nJompus(x) ::: x is a jompus\nWooden(x) ::: x is wooden\nDumpus(x) ::: x is a dumpus\nPremises:\n∀x (Yumpus(x) → ¬Opaque(x)) ::: Every yumpus is not opaque.\n∀x (Yumpus(x) → Zumpus(x)) ::: Yumpuses are zumpuses.\n∀x (Zumpus(x) → Nervous(x)) ::: Zumpuses are nervous.\n∀x (Zumpus(x) → Tumpus(x)) ::: Every zumpus is a tumpus.\n∀x (Tumpus(x) → ¬Large(x)) ::: Each tumpus is not large.\n∀x (Tumpus(x) → Impus(x)) ::: Tumpuses are impuses.\n∀x (Impus(x) → Temperate(x)) ::: Impuses are temperate.\n∀x (Impus(x) → Numpus(x)) ::: Impuses are numpuses.\n∀x (Wumpus(x) → Bitter(x)) ::: Every wumpus is bitter.\n∀x (Numpus(x) → ¬Bitter(x)) ::: Each numpus is not bitter.\n∀x (Numpus(x) → Vumpus(x)) ::: Numpuses are vumpuses.\n∀x (Vumpus(x) → ¬Kind(x)) ::: Every vumpus is not kind.\n∀x (Vumpus(x) → Rompus(x)) ::: Vumpuses are rompuses.\n∀x (Rompus(x) → Brown(x)) ::: Rompuses are brown.\n∀x (Rompus(x) → Jompus(x)) ::: Rompuses are jompuses.\n∀x (Jompus(x) → Wooden(x)) ::: Every jompus is wooden.\n∀x (Jompus(x) → Dumpus(x)) ::: Every jompus is a dumpus.\nYumpus(sally) ::: Sally is a yumpus.\nConclusion:\n¬Bitter(sally) ::: Sally is not bitter.\n------"
    ]
  },
  {
    "id": "ProntoQA_108",
    "context": "Every zumpus is brown. Every zumpus is a dumpus. Each dumpus is not dull. Every dumpus is a yumpus. Every numpus is not hot. Each yumpus is not earthy. Yumpuses are wumpuses. Wumpuses are wooden. Every wumpus is a jompus. Each jompus is large. Every jompus is a tumpus. Each tumpus is amenable. Tumpuses are impuses. Every impus is hot. Every impus is a rompus. Rompuses are sweet. Rompuses are vumpuses. Wren is a yumpus.",
    "question": "Is the following statement true or false? Wren is not hot.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nZumpus(x) ::: x is a zumpus\nBrown(x) ::: x is brown\nDumpus(x) ::: x is a dumpus\nDull(x) ::: x is dull\nYumpus(x) ::: x is a yumpus\nNumpus(x) ::: x is a numpus\nHot(x) ::: x is hot\nEarthy(x) ::: x is earthy\nWumpus(x) ::: x is a wumpus\nWooden(x) ::: x is wooden\nJompus(x) ::: x is a jompus\nLarge(x) ::: x is large\nTumpus(x) ::: x is a tumpus\nAmenable(x) ::: x is amenable\nImpus(x) ::: x is an impus\nHot(x) ::: x is hot\nRompus(x) ::: x is a rompus\nSweet(x) ::: x is sweet\nVumpus(x) ::: x is a vumpus\nWren(x) ::: x is Wren\nPremises:\n∀x (Zumpus(x) → Brown(x)) ::: Every zumpus is brown.\n∀x (Zumpus(x) → Dumpus(x)) ::: Every zumpus is a dumpus.\n∀x (Dumpus(x) → ¬Dull(x)) ::: Each dumpus is not dull.\n∀x (Dumpus(x) → Yumpus(x)) ::: Every dumpus is a yumpus.\n∀x (Numpus(x) → ¬Hot(x)) ::: Every numpus is not hot.\n∀x (Yumpus(x) → ¬Earthy(x)) ::: Each yumpus is not earthy.\n∀x (Yumpus(x) → Wumpus(x)) ::: Yumpuses are wumpuses.\n∀x (Wumpus(x) → Wooden(x)) ::: Wumpuses are wooden.\n∀x (Wumpus(x) → Jompus(x)) ::: Every wumpus is a jompus.\n∀x (Jompus(x) → Large(x)) ::: Each jompus is large.\n∀x (Jompus(x) → Tumpus(x)) ::: Each jompus is a tumpus.\n∀x (Tumpus(x) → Amenable(x)) ::: Each tumpus is amenable.\n∀x (Tumpus(x) → Impus(x)) ::: Tumpuses are impuses.\n∀x (Impus(x) → Hot(x)) ::: Every impus is hot.\n∀x (Impus(x) → Rompus(x)) ::: Every impus is a rompus.\n∀x (Rompus(x) → Sweet(x)) ::: Rompuses are sweet.\n∀x (Rompus(x) → Vumpus(x)) ::: Rompuses are vumpuses.\nYumpus(wren) ::: Wren is a yumpus.\nConclusion:\n¬Hot(wren) ::: Wren is not hot.\n------"
    ]
  },
  {
    "id": "ProntoQA_109",
    "context": "Wumpuses are dull. Every wumpus is a dumpus. Dumpuses are not liquid. Each numpus is large. Every dumpus is a jompus. Each jompus is not brown. Jompuses are tumpuses. Every tumpus is opaque. Each tumpus is a yumpus. Yumpuses are not large. Yumpuses are vumpuses. Vumpuses are sour. Vumpuses are rompuses. Rompuses are kind. Rompuses are zumpuses. Zumpuses are fruity. Zumpuses are impuses. Sally is a wumpus.",
    "question": "Is the following statement true or false? Sally is large.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nWumpus(x) ::: x is a wumpus\nDull(x) ::: x is dull\nDumpus(x) ::: x is a dumpus\nLiquid(x) ::: x is liquid\nNumpus(x) ::: x is a numpus\nLarge(x) ::: x is large\nJompus(x) ::: x is a jompus\nBrown(x) ::: x is brown\nTumpus(x) ::: x is a tumpus\nOpaque(x) ::: x is opaque\nYumpus(x) ::: x is a yumpus\nLarge(x) ::: x is large\nVumpus(x) ::: x is a vumpus\nSour(x) ::: x is sour\nRompus(x) ::: x is a rompus\nKind(x) ::: x is kind\nZumpus(x) ::: x is a zumpus\nFruity(x) ::: x is fruity\nImpus(x) ::: x is an impus\nPremises:\n∀x (Wumpus(x) → Dull(x)) ::: Wumpuses are dull.\n∀x (Wumpus(x) → Dumpus(x)) ::: Every wumpus is a dumpus.\n∀x (Dumpus(x) → ¬Liquid(x)) ::: Dumpuses are not liquid.\n∀x (Numpus(x) → Large(x)) ::: Each numpus is large.\n∀x (Dumpus(x) → Jompus(x)) ::: Every dumpus is a jompus.\n∀x (Jompus(x) → ¬Brown(x)) ::: Each jompus is not brown.\n∀x (Jompus(x) → Tumpus(x)) ::: Jompuses are tumpuses.\n∀x (Tumpus(x) → Opaque(x)) ::: Each tumpus is opaque.\n∀x (Tumpus(x) → Yumpus(x)) ::: Each tumpus is a yumpus.\n∀x (Yumpus(x) → ¬Large(x)) ::: Yumpuses are not large.\n∀x (Yumpus(x) → Vumpus(x)) ::: Yumpuses are vumpuses.\n∀x (Vumpus(x) → Sour(x)) ::: Vumpuses are sour.\n∀x (Vumpus(x) → Rompus(x)) ::: Vumpuses are rompuses.\n∀x (Rompus(x) → Kind(x)) ::: Rompuses are kind.\n∀x (Rompus(x) → Zumpus(x)) ::: Rompuses are zumpuses.\n∀x (Zumpus(x) → Fruity(x)) ::: Zumpuses are fruity.\n∀x (Zumpus(x) → Impus(x)) ::: Zumpuses are impuses.\nWumpus(sally) ::: Sally is a wumpus.\nConclusion:\nLarge(sally) ::: Sally is large.\n------"
    ]
  },
  {
    "id": "ProntoQA_110",
    "context": "Tumpuses are temperate. Tumpuses are zumpuses. Zumpuses are large. Zumpuses are jompuses. Jompuses are not blue. Every jompus is a rompus. Each rompus is earthy. Vumpuses are not opaque. Every rompus is a yumpus. Yumpuses are happy. Yumpuses are wumpuses. Each wumpus is opaque. Each wumpus is a numpus. Sally is a zumpus.",
    "question": "Is the following statement true or false? Sally is not opaque.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nTumpus(x) ::: x is a tumpus\nTemperate(x) ::: x is temperate\nZumpus(x) ::: x is a zumpus\nLarge(x) ::: x is large\nJompus(x) ::: x is a jompus\nBlue(x) ::: x is blue\nRompus(x) ::: x is a rompus\nEarthy(x) ::: x is earthy\nVumpus(x) ::: x is a vumpus\nOpaque(x) ::: x is opaque\nYumpus(x) ::: x is a yumpus\nHappy(x) ::: x is happy\nWumpus(x) ::: x is a wumpus\nNumpus(x) ::: x is a numpus\nSally(x) ::: x is Sally\nPremises:\n∀x (Tumpus(x) → Temperate(x)) ::: Tumpuses are temperate.\n∀x (Tumpus(x) → Zumpus(x)) ::: Tumpuses are zumpuses.\n∀x (Zumpus(x) → Large(x)) ::: Zumpuses are large.\n∀x (Zumpus(x) → Jompus(x)) ::: Zumpuses are jompuses.\n∀x (Jompus(x) → ¬Blue(x)) ::: Jompuses are not blue.\n∀x (Jompus(x) → Rompus(x)) ::: Every jompus is a rompus.\n∀x (Rompus(x) → Earthy(x)) ::: Each rompus is earthy.\n∀x (Vumpus(x) → ¬Opaque(x)) ::: Vumpuses are not opaque.\n∀x (Rompus(x) → Yumpus(x)) ::: Every rompus is a yumpus.\n∀x (Yumpus(x) → Happy(x)) ::: Yumpuses are happy.\n∀x (Yumpus(x) → Wumpus(x)) ::: Yumpuses are wumpuses.\n∀x (Wumpus(x) → Opaque(x)) ::: Each wumpus is opaque.\n∀x (Wumpus(x) → Numpus(x)) ::: Each wumpus is a numpus.\nZumpus(sally) ::: Sally is a zumpus.\nConclusion:\n¬Opaque(sally) ::: Sally is not opaque.\n------"
    ]
  },
  {
    "id": "ProntoQA_111",
    "context": "Every impus is metallic. Impuses are jompuses. Jompuses are not sweet. Jompuses are numpuses. Each numpus is not cold. Every numpus is a tumpus. Tumpuses are not dull. Every tumpus is a dumpus. Every dumpus is red. Each wumpus is amenable. Dumpuses are vumpuses. Vumpuses are happy. Vumpuses are yumpuses. Every yumpus is fruity. Every yumpus is a rompus. Every rompus is not amenable. Rompuses are zumpuses. Sally is a tumpus.",
    "question": "Is the following statement true or false? Sally is amenable.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nImpus(x) ::: x is an impus\nMetallic(x) ::: x is metallic\nJompus(x) ::: x is a jompus\nSweet(x) ::: x is sweet\nNumpus(x) ::: x is a numpus\nCold(x) ::: x is cold\nTumpus(x) ::: x is a tumpus\nDull(x) ::: x is dull\nDumpus(x) ::: x is a dumpus\nRed(x) ::: x is red\nWumpus(x) ::: x is a wumpus\nAmenable(x) ::: x is amenable\nVumpus(x) ::: x is a vumpus\nHappy(x) ::: x is happy\nYumpus(x) ::: x is a yumpus\nFruity(x) ::: x is fruity\nRompus(x) ::: x is a rompus\nZumpus(x) ::: x is a zumpus\nPremises:\n∀x (Impus(x) → Metallic(x)) ::: Every impus is metallic.\n∀x (Jompus(x) → Impus(x)) ::: Impuses are jompuses.\n∀x (Jompus(x) → ¬Sweet(x)) ::: Jompuses are not sweet.\n∀x (Numpus(x) → ¬Cold(x)) ::: Each numpus is not cold.\n∀x (Numpus(x) → Tumpus(x)) ::: Every numpus is a tumpus.\n∀x (Tumpus(x) → ¬Dull(x)) ::: Tumpuses are not dull.\n∀x (Tumpus(x) → Dumpus(x)) ::: Every tumpus is a dumpus.\n∀x (Dumpus(x) → Red(x)) ::: Every dumpus is red.\n∀x (Wumpus(x) → Amenable(x)) ::: Each wumpus is amenable.\n∀x (Dumpus(x) → Vumpus(x)) ::: Dumpuses are vumpuses.\n∀x (Vumpus(x) → Happy(x)) ::: Vumpuses are happy.\n∀x (Vumpus(x) → Yumpus(x)) ::: Vumpuses are yumpuses.\n∀x (Yumpus(x) → Fruity(x)) ::: Every yumpus is fruity.\n∀x (Yumpus(x) → Rompus(x)) ::: Every yumpus is a rompus.\n∀x (Rompus(x) → ¬Amenable(x)) ::: Every rompus is not amenable.\n∀x (Rompus(x) → Zumpus(x)) ::: Rompuses are zumpuses.\nTumpus(sally) ::: Sally is a tumpus.\nConclusion:\nAmenable(sally) ::: Sally is amenable.\n------"
    ]
  },
  {
    "id": "ProntoQA_112",
    "context": "Each rompus is not large. Every rompus is a numpus. Every numpus is fruity. Numpuses are wumpuses. Wumpuses are not metallic. Wumpuses are tumpuses. Tumpuses are cold. Dumpuses are not brown. Tumpuses are jompuses. Each jompus is sweet. Jompuses are zumpuses. Each zumpus is brown. Every zumpus is a yumpus. Max is a numpus.",
    "question": "Is the following statement true or false? Max is not brown.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nRompus(x) ::: x is a rompus\nLarge(x) ::: x is large\nNumpus(x) ::: x is a numpus\nFruity(x) ::: x is fruity\nWumpus(x) ::: x is a wumpus\nMetallic(x) ::: x is metallic\nTumpus(x) ::: x is a tumpus\nCold(x) ::: x is cold\nDumpus(x) ::: x is a dumpus\nBrown(x) ::: x is brown\nJompus(x) ::: x is a jompus\nSweet(x) ::: x is sweet\nZumpus(x) ::: x is a zumpus\nYumpus(x) ::: x is a yumpus\nPremises:\n∀x (Rompus(x) → ¬Large(x)) ::: Each rompus is not large.\n∀x (Numpus(x) → Fruity(x)) ::: Every numpus is fruity.\n∀x (Numpus(x) → Wumpus(x)) ::: Numpuses are wumpuses.\n∀x (Wumpus(x) → ¬Metallic(x)) ::: Wumpuses are not metallic.\n∀x (Wumpus(x) → Tumpus(x)) ::: Wumpuses are tumpuses.\n∀x (Tumpus(x) → Cold(x)) ::: Tumpuses are cold.\n∀x (Dumpus(x) → ¬Brown(x)) ::: Dumpuses are not brown.\n∀x (Tumpus(x) → Jompus(x)) ::: Tumpuses are jompuses.\n∀x (Jompus(x) → Sweet(x)) ::: Each jompus is sweet.\n∀x (Jompus(x) → Zumpus(x)) ::: Jompuses are zumpuses.\n∀x (Zumpus(x) → Brown(x)) ::: Each zumpus is brown.\n∀x (Zumpus(x) → Yumpus(x)) ::: Every zumpus is a yumpus.\nNumpus(max) ::: Max is a numpus.\nConclusion:\n¬Brown(max) ::: Max is not brown.\n------"
    ]
  },
  {
    "id": "ProntoQA_113",
    "context": "Every rompus is wooden. Every zumpus is happy. Each zumpus is a jompus. Jompuses are kind. Jompuses are impuses. Impuses are spicy. Impuses are dumpuses. Each dumpus is large. Dumpuses are vumpuses. Vumpuses are not wooden. Each vumpus is a yumpus. Every yumpus is transparent. Each yumpus is a numpus. Rex is a zumpus.",
    "question": "Is the following statement true or false? Rex is not wooden.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nRompus(x) ::: x is a rompus\nWooden(x) ::: x is wooden\nZumpus(x) ::: x is a zumpus\nHappy(x) ::: x is happy\nJompus(x) ::: x is a jompus\nKind(x) ::: x is kind\nImpus(x) ::: x is an impus\nSpicy(x) ::: x is spicy\nDumpus(x) ::: x is a dumpus\nLarge(x) ::: x is large\nVumpus(x) ::: x is a vumpus\nWooden(x) ::: x is wooden\nYumpus(x) ::: x is a yumpus\nTransparent(x) ::: x is transparent\nNumpus(x) ::: x is a numpus\nPremises:\n∀x (Rompus(x) → Wooden(x)) ::: Every rompus is wooden.\n∀x (Zumpus(x) → Happy(x)) ::: Every zumpus is happy.\n∀x (Zumpus(x) → Jompus(x)) ::: Each zumpus is a jompus.\n∀x (Jompus(x) → Kind(x)) ::: Jompuses are kind.\n∀x (Jompus(x) → Impus(x)) ::: Jompuses are impuses.\n∀x (Impus(x) → Spicy(x)) ::: Impuses are spicy.\n∀x (Impus(x) → Dumpus(x)) ::: Impuses are dumpuses.\n∀x (Dumpus(x) → Large(x)) ::: Each dumpus is large.\n∀x (Dumpus(x) → Vumpus(x)) ::: Dumpuses are vumpuses.\n∀x (Vumpus(x) → ¬Wooden(x)) ::: Vumpuses are not wooden.\n∀x (Vumpus(x) → Yumpus(x)) ::: Each vumpus is a yumpus.\n∀x (Yumpus(x) → Transparent(x)) ::: Every yumpus is transparent.\n∀x (Yumpus(x) → Numpus(x)) ::: Each yumpus is a numpus.\nZumpus(rex) ::: Rex is a zumpus.\nConclusion:\n¬Wooden(rex) ::: Rex is not wooden.\n------"
    ]
  },
  {
    "id": "ProntoQA_114",
    "context": "Every vumpus is liquid. Every vumpus is an impus. Impuses are not aggressive. Impuses are tumpuses. Tumpuses are large. Tumpuses are yumpuses. Each yumpus is bright. Every yumpus is a wumpus. Wumpuses are opaque. Wumpuses are numpuses. Every numpus is hot. Numpuses are rompuses. Each rompus is sweet. Rompuses are dumpuses. Dumpuses are blue. Each dumpus is a jompus. Each zumpus is not sweet. Polly is a tumpus.",
    "question": "Is the following statement true or false? Polly is sweet.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "------\n### Predicates:\nVumpus(x) ::: x is a vumpus\nLiquid(x) ::: x is liquid\nImpus(x) ::: x is an impus\nAggressive(x) ::: x is aggressive\nTumpus(x) ::: x is a tumpus\nLarge(x) ::: x is large\nYumpus(x) ::: x is a yumpus\nBright(x) ::: x is bright\nWumpus(x) ::: x is a wumpus\nOpaque(x) ::: x is opaque\nNumpus(x) ::: x is a numpus\nHot(x) ::: x is hot\nRompus(x) ::: x is a rompus\nSweet(x) ::: x is sweet\nDumpus(x) ::: x is a dumpus\nBlue(x) ::: x is blue\nJompus(x) ::: x is a jompus\nZumpus(x) ::: x is a zumpus\nPremises:\n∀x (Vumpus(x) → Liquid(x)) ::: Every vumpus is liquid.\n∀x (Vumpus(x) → Impus(x)) ::: Every vumpus is an impus.\n∀x (Impus(x) → ¬Aggressive(x)) ::: Impuses are not aggressive.\n∀x (Impus(x) → Tumpus(x)) ::: Impuses are tumpuses.\n∀x (Tumpus(x) → Large(x)) ::: Tumpuses are large.\n∀x (Tumpus(x) → Yumpus(x)) ::: Tumpuses are yumpuses.\n∀x (Yumpus(x) → Bright(x)) ::: Each yumpus is bright.\n∀x (Yumpus(x) → Wumpus(x)) ::: Every yumpus is a wumpus.\n∀x (Wumpus(x) → Opaque(x)) ::: Wumpuses are opaque.\n∀x (Wumpus(x) → Numpus(x)) ::: Wumpuses are numpuses.\n∀x (Numpus(x) → Hot(x)) ::: Every numpus is hot.\n∀x (Numpus(x) → Rompus(x)) ::: Numpuses are rompuses.\n∀x (Rompus(x) → Sweet(x)) ::: Each rompus is sweet.\n∀x (Rompus(x) → Dumpus(x)) ::: Rompuses are dumpuses.\n∀x (Dumpus(x) → Blue(x)) ::: Dumpuses are blue.\n∀x (Dumpus(x) → Jompus(x)) ::: Each dumpus is a jompus.\n∀x (Zumpus(x) → ¬Sweet(x)) ::: Each zumpus is not sweet.\nTumpus(polly) ::: Polly is a tumpus.\nConclusion:\nSweet(polly) ::: Polly is sweet.\n------"
    ]
  },
  {
    "id": "ProntoQA_115",
    "context": "Zumpuses are sweet. Each zumpus is a vumpus. Vumpuses are cold. Vumpuses are jompuses. Each jompus is not blue. Jompuses are dumpuses. Every dumpus is floral. Each dumpus is a wumpus. Wumpuses are bright. Impuses are wooden. Every wumpus is a rompus. Every rompus is nervous. Every rompus is a yumpus. Yumpuses are transparent. Yumpuses are numpuses. Numpuses are not wooden. Every numpus is a tumpus. Alex is a dumpus.",
    "question": "Is the following statement true or false? Alex is wooden.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nZumpus(x) ::: x is a zumpus\nSweet(x) ::: x is sweet\nVumpus(x) ::: x is a vumpus\nCold(x) ::: x is cold\nJompus(x) ::: x is a jompus\nBlue(x) ::: x is blue\nDumpus(x) ::: x is a dumpus\nFloral(x) ::: x is floral\nWumpus(x) ::: x is a wumpus\nBright(x) ::: x is bright\nImpus(x) ::: x is an impus\nWooden(x) ::: x is wooden\nRompus(x) ::: x is a rompus\nNervous(x) ::: x is nervous\nYumpus(x) ::: x is a yumpus\nTransparent(x) ::: x is transparent\nNumpus(x) ::: x is a numpus\nTumpus(x) ::: x is a tumpus\nPremises:\n∀x (Zumpus(x) → Sweet(x)) ::: Zumpuses are sweet.\n∀x (Zumpus(x) → Vumpus(x)) ::: Each zumpus is a vumpus.\n∀x (Vumpus(x) → Cold(x)) ::: Vumpuses are cold.\n∀x (Vumpus(x) → Jompus(x)) ::: Vumpuses are jompuses.\n∀x (Jompus(x) → ¬Blue(x)) ::: Each jompus is not blue.\n∀x (Jompus(x) → Dumpus(x)) ::: Jompuses are dumpuses.\n∀x (Dumpus(x) → Floral(x)) ::: Every dumpus is floral.\n∀x (Dumpus(x) → Wumpus(x)) ::: Each dumpus is a wumpus.\n∀x (Wumpus(x) → Bright(x)) ::: Wumpuses are bright.\n∀x (Impus(x) → Wooden(x)) ::: Impuses are wooden.\n∀x (Wumpus(x) → Rompus(x)) ::: Every wumpus is a rompus.\n∀x (Rompus(x) → Nervous(x)) ::: Every rompus is nervous.\n∀x (Rompus(x) → Yumpus(x)) ::: Every rompus is a yumpus.\n∀x (Yumpus(x) → Transparent(x)) ::: Yumpuses are transparent.\n∀x (Yumpus(x) → Numpus(x)) ::: Yumpuses are numpuses.\n∀x (Numpus(x) → ¬Wooden(x)) ::: Numpuses are not wooden.\n∀x (Numpus(x) → Tumpus(x)) ::: Every numpus is a tumpus.\nDumpus(alex) ::: Alex is a dumpus.\nConclusion:\nWooden(alex) ::: Alex is wooden.\n------"
    ]
  },
  {
    "id": "ProntoQA_116",
    "context": "Each numpus is not dull. Every numpus is a jompus. Jompuses are not blue. Every jompus is a vumpus. Vumpuses are not small. Each vumpus is an impus. Every impus is mean. Impuses are rompuses. Rompuses are not opaque. Rompuses are yumpuses. Yumpuses are floral. Each yumpus is a tumpus. Tumpuses are nervous. Every tumpus is a dumpus. Every wumpus is not hot. Dumpuses are hot. Each dumpus is a zumpus. Sally is an impus.",
    "question": "Is the following statement true or false? Sally is not hot.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nNumpus(x) ::: x is a numpus\nDull(x) ::: x is dull\nJompus(x) ::: x is a jompus\nBlue(x) ::: x is blue\nVumpus(x) ::: x is a vumpus\nSmall(x) ::: x is small\nImpus(x) ::: x is an impus\nMean(x) ::: x is mean\nRompus(x) ::: x is a rompus\nOpaque(x) ::: x is opaque\nYumpus(x) ::: x is a yumpus\nFloral(x) ::: x is floral\nTumpus(x) ::: x is a tumpus\nNervous(x) ::: x is nervous\nDumpus(x) ::: x is a dumpus\nZumpus(x) ::: x is a zumpus\nSally(x) ::: x is Sally\nPremises:\n∀x (Numpus(x) → ¬Dull(x)) ::: Each numpus is not dull.\n∀x (Numpus(x) → Jompus(x)) ::: Every numpus is a jompus.\n∀x (Jompus(x) → ¬Blue(x)) ::: Jompuses are not blue.\n∀x (Jompus(x) → Vumpus(x)) ::: Every jompus is a vumpus.\n∀x (Vumpus(x) → ¬Small(x)) ::: Vumpuses are not small.\n∀x (Vumpus(x) → Impus(x)) ::: Each vumpus is an impus.\n∀x (Impus(x) → Mean(x)) ::: Impuses are mean.\n∀x (Impus(x) → Rompus(x)) ::: Impuses are rompuses.\n∀x (Rompus(x) → ¬Opaque(x)) ::: Rompuses are not opaque.\n∀x (Rompus(x) → Yumpus(x)) ::: Rompuses are yumpuses.\n∀x (Yumpus(x) → Floral(x)) ::: Yumpuses are floral.\n∀x (Yumpus(x) → Tumpus(x)) ::: Each yumpus is a tumpus.\n∀x (Tumpus(x) → Nervous(x)) ::: Tumpuses are nervous.\n∀x (Tumpus(x) → Dumpus(x)) ::: Every tumpus is a dumpus.\n∀x (Wumpus(x) → ¬Hot(x)) ::: Every wumpus is not hot.\n∀x (Dumpus(x) → Hot(x)) ::: Dumpuses are hot.\n∀x (Dumpus(x) → Zumpus(x)) ::: Each dumpus is a zumpus.\nImpus(sally) ::: Sally is an impus.\nConclusion:\n¬Hot(sally) ::: Sally is not hot.\n------"
    ]
  },
  {
    "id": "ProntoQA_117",
    "context": "Numpuses are earthy. Numpuses are yumpuses. Impuses are not angry. Yumpuses are not shy. Yumpuses are vumpuses. Vumpuses are blue. Each vumpus is a jompus. Each jompus is metallic. Each jompus is a rompus. Every rompus is not temperate. Every rompus is a dumpus. Each dumpus is small. Every dumpus is a wumpus. Wumpuses are bitter. Wumpuses are tumpuses. Each tumpus is angry. Tumpuses are zumpuses. Alex is a jompus.",
    "question": "Is the following statement true or false? Alex is angry.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nNumpus(x) ::: x is a numpus\nEarthy(x) ::: x is earthy\nYumpus(x) ::: x is a yumpus\nImpus(x) ::: x is an impus\nAngry(x) ::: x is angry\nShy(x) ::: x is shy\nVumpus(x) ::: x is a vumpus\nBlue(x) ::: x is blue\nJompus(x) ::: x is a jompus\nMetallic(x) ::: x is metallic\nRompus(x) ::: x is a rompus\nTemperate(x) ::: x is temperate\nDumpus(x) ::: x is a dumpus\nSmall(x) ::: x is small\nWumpus(x) ::: x is a wumpus\nBitter(x) ::: x is bitter\nTumpus(x) ::: x is a tumpus\nAngry(x) ::: x is angry\nZumpus(x) ::: x is a zumpus\nAlex(x) ::: x is Alex\nPremises:\n∀x (Numpus(x) → Earthy(x)) ::: Numpuses are earthy.\n∀x (Numpus(x) → Yumpus(x)) ::: Numpuses are yumpuses.\n∀x (Impus(x) → ¬Angry(x)) ::: Impuses are not angry.\n∀x (Yumpus(x) → ¬Shy(x)) ::: Yumpuses are not shy.\n∀x (Yumpus(x) → Vumpus(x)) ::: Yumpuses are vumpuses.\n∀x (Vumpus(x) → Blue(x)) ::: Vumpuses are blue.\n∀x (Vumpus(x) → Jompus(x)) ::: Each vumpus is a jompus.\n∀x (Jompus(x) → Metallic(x)) ::: Each jompus is metallic.\n∀x (Jompus(x) → Rompus(x)) ::: Each jompus is a rompus.\n∀x (Rompus(x) → ¬Temperate(x)) ::: Every rompus is not temperate.\n∀x (Rompus(x) → Dumpus(x)) ::: Every rompus is a dumpus.\n∀x (Dumpus(x) → Small(x)) ::: Each dumpus is small.\n∀x (Dumpus(x) → Wumpus(x)) ::: Every dumpus is a wumpus.\n∀x (Wumpus(x) → Bitter(x)) ::: Wumpuses are bitter.\n∀x (Wumpus(x) → Tumpus(x)) ::: Wumpuses are tumpuses.\n∀x (Tumpus(x) → Angry(x)) ::: Each tumpus is angry.\n∀x (Tumpus(x) → Zumpus(x)) ::: Tumpuses are zumpuses.\nJompus(alex) ::: Alex is a jompus.\nConclusion:\nAngry(alex) ::: Alex is angry.\n------"
    ]
  },
  {
    "id": "ProntoQA_118",
    "context": "Each vumpus is hot. Each vumpus is a jompus. Each jompus is red. Jompuses are impuses. Every impus is not opaque. Impuses are numpuses. Every zumpus is not sweet. Numpuses are earthy. Numpuses are rompuses. Rompuses are large. Each rompus is a tumpus. Every tumpus is not bright. Each tumpus is a wumpus. Every wumpus is sweet. Every wumpus is a dumpus. Each dumpus is angry. Dumpuses are yumpuses. Sam is an impus.",
    "question": "Is the following statement true or false? Sam is not sweet.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nVumpus(x) ::: x is a vumpus\nHot(x) ::: x is hot\nJompus(x) ::: x is a jompus\nRed(x) ::: x is red\nImpus(x) ::: x is an impus\nOpaque(x) ::: x is opaque\nNumpus(x) ::: x is a numpus\nSweet(x) ::: x is sweet\nEarthy(x) ::: x is earthy\nRompus(x) ::: x is a rompus\nLarge(x) ::: x is large\nTumpus(x) ::: x is a tumpus\nBright(x) ::: x is bright\nWumpus(x) ::: x is a wumpus\nDumpus(x) ::: x is a dumpus\nAngry(x) ::: x is angry\nYumpus(x) ::: x is a yumpus\nPremises:\n∀x (Vumpus(x) → Hot(x)) ::: Each vumpus is hot.\n∀x (Vumpus(x) → Jompus(x)) ::: Each vumpus is a jompus.\n∀x (Jompus(x) → Red(x)) ::: Each jompus is red.\n∀x (Jompus(x) → Impus(x)) ::: Jompuses are impuses.\n∀x (Impus(x) → ¬Opaque(x)) ::: Every impus is not opaque.\n∀x (Impus(x) → Numpus(x)) ::: Impuses are numpuses.\n∀x (Zumpus(x) → ¬Sweet(x)) ::: Every zumpus is not sweet.\n∀x (Numpus(x) → Earthy(x)) ::: Numpuses are earthy.\n∀x (Numpus(x) → Rompus(x)) ::: Numpuses are rompuses.\n∀x (Rompus(x) → Large(x)) ::: Rompuses are large.\n∀x (Rompus(x) → Tumpus(x)) ::: Each rompus is a tumpus.\n∀x (Tumpus(x) → ¬Bright(x)) ::: Every tumpus is not bright.\n∀x (Tumpus(x) → Wumpus(x)) ::: Each tumpus is a wumpus.\n∀x (Wumpus(x) → Sweet(x)) ::: Every wumpus is sweet.\n∀x (Wumpus(x) → Dumpus(x)) ::: Every wumpus is a dumpus.\n∀x (Dumpus(x) → Angry(x)) ::: Each dumpus is angry.\n∀x (Dumpus(x) → Yumpus(x)) ::: Dumpuses are yumpuses.\nImpus(sam) ::: Sam is an impus.\nConclusion:\n¬Sweet(sam) ::: Sam is not sweet.\n------"
    ]
  },
  {
    "id": "ProntoQA_119",
    "context": "Zumpuses are not bitter. Zumpuses are tumpuses. Every tumpus is luminous. Each tumpus is an impus. Each impus is orange. Impuses are vumpuses. Each vumpus is floral. Vumpuses are jompuses. Each jompus is not temperate. Every jompus is a rompus. Rompuses are transparent. Each yumpus is shy. Each rompus is a wumpus. Each wumpus is not shy. Each wumpus is a dumpus. Each dumpus is not amenable. Dumpuses are numpuses. Max is an impus.",
    "question": "Is the following statement true or false? Max is shy.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nZumpus(x) ::: x is a zumpus\nBitter(x) ::: x is bitter\nTumpus(x) ::: x is a tumpus\nLuminous(x) ::: x is luminous\nImpus(x) ::: x is an impus\nOrange(x) ::: x is orange\nVumpus(x) ::: x is a vumpus\nFloral(x) ::: x is floral\nJompus(x) ::: x is a jompus\nTemperate(x) ::: x is temperate\nRompus(x) ::: x is a rompus\nTransparent(x) ::: x is transparent\nYumpus(x) ::: x is a yumpus\nShy(x) ::: x is shy\nWumpus(x) ::: x is a wumpus\nDumpus(x) ::: x is a dumpus\nAmenable(x) ::: x is amenable\nNumpus(x) ::: x is a numpus\nPremises:\n∀x (Zumpus(x) → ¬Bitter(x)) ::: Zumpuses are not bitter.\n∀x (Zumpus(x) → Tumpus(x)) ::: Zumpuses are tumpuses.\n∀x (Tumpus(x) → Luminous(x)) ::: Every tumpus is luminous.\n∀x (Tumpus(x) → Impus(x)) ::: Each tumpus is an impus.\n∀x (Impus(x) → Orange(x)) ::: Impuses are orange.\n∀x (Impus(x) → Vumpus(x)) ::: Each impus is a vumpus.\n∀x (Vumpus(x) → Floral(x)) ::: Vumpuses are floral.\n∀x (Vumpus(x) → Jompus(x)) ::: Vumpuses are jompuses.\n∀x (Jompus(x) → ¬Temperate(x)) ::: Each jompus is not temperate.\n∀x (Jompus(x) → Rompus(x)) ::: Every jompus is a rompus.\n∀x (Rompus(x) → Transparent(x)) ::: Rompuses are transparent.\n∀x (Yumpus(x) → Shy(x)) ::: Each yumpus is shy.\n∀x (Rompus(x) → Wumpus(x)) ::: Each rompus is a wumpus.\n∀x (Wumpus(x) → ¬Shy(x)) ::: Each wumpus is not shy.\n∀x (Wumpus(x) → Dumpus(x)) ::: Each wumpus is a dumpus.\n∀x (Dumpus(x) → ¬Amenable(x)) ::: Each dumpus is not amenable.\n∀x (Dumpus(x) → Numpus(x)) ::: Dumpuses are numpuses.\nImpus(max) ::: Max is an impus.\nConclusion:\nShy(max) ::: Max is shy.\n------"
    ]
  },
  {
    "id": "ProntoQA_120",
    "context": "Every impus is small. Impuses are rompuses. Each rompus is shy. Every rompus is a zumpus. Dumpuses are fruity. Zumpuses are cold. Every zumpus is a vumpus. Every vumpus is not opaque. Vumpuses are wumpuses. Each wumpus is luminous. Every wumpus is a yumpus. Yumpuses are spicy. Every yumpus is a tumpus. Tumpuses are not fruity. Tumpuses are numpuses. Every numpus is red. Numpuses are jompuses. Stella is a zumpus.",
    "question": "Is the following statement true or false? Stella is not fruity.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nImpus(x) ::: x is an impus\nRompus(x) ::: x is a rompus\nShy(x) ::: x is shy\nZumpus(x) ::: x is a zumpus\nDumpus(x) ::: x is a dumpus\nFruity(x) ::: x is fruity\nCold(x) ::: x is cold\nVumpus(x) ::: x is a vumpus\nOpaque(x) ::: x is opaque\nWumpus(x) ::: x is a wumpus\nLuminous(x) ::: x is luminous\nYumpus(x) ::: x is a yumpus\nSpicy(x) ::: x is spicy\nTumpus(x) ::: x is a tumpus\nNumpus(x) ::: x is a numpus\nRed(x) ::: x is red\nJompus(x) ::: x is a jompus\nPremises:\n∀x (Impus(x) → Small(x)) ::: Every impus is small.\n∀x (Impus(x) → Rompus(x)) ::: Impuses are rompuses.\n∀x (Rompus(x) → Shy(x)) ::: Each rompus is shy.\n∀x (Rompus(x) → Zumpus(x)) ::: Every rompus is a zumpus.\n∀x (Dumpus(x) → Fruity(x)) ::: Dumpuses are fruity.\n∀x (Zumpus(x) → Cold(x)) ::: Zumpuses are cold.\n∀x (Zumpus(x) → Vumpus(x)) ::: Every zumpus is a vumpus.\n∀x (Vumpus(x) → ¬Opaque(x)) ::: Vumpuses are not opaque.\n∀x (Vumpus(x) → Wumpus(x)) ::: Vumpuses are wumpuses.\n∀x (Wumpus(x) → Luminous(x)) ::: Every wumpus is luminous.\n∀x (Wumpus(x) → Yumpus(x)) ::: Every wumpus is a yumpus.\n∀x (Yumpus(x) → Spicy(x)) ::: Yumpuses are spicy.\n∀x (Yumpus(x) → Tumpus(x)) ::: Every yumpus is a tumpus.\n∀x (Tumpus(x) → ¬Fruity(x)) ::: Tumpuses are not fruity.\n∀x (Tumpus(x) → Numpus(x)) ::: Tumpuses are numpuses.\n∀x (Numpus(x) → Red(x)) ::: Every numpus is red.\n∀x (Numpus(x) → Jompus(x)) ::: Numpuses are jompuses.\nZumpus(stella) ::: Stella is a zumpus.\nConclusion:\n¬Fruity(stella) ::: Stella is not fruity.\n------"
    ]
  },
  {
    "id": "ProntoQA_121",
    "context": "Every dumpus is not cold. Every dumpus is a zumpus. Each zumpus is metallic. Zumpuses are rompuses. Rompuses are dull. Each rompus is a yumpus. Each yumpus is floral. Yumpuses are impuses. Impuses are not mean. Impuses are wumpuses. Wumpuses are small. Every wumpus is a jompus. Jompuses are not transparent. Each jompus is a vumpus. Every vumpus is sour. Every vumpus is a numpus. Tumpuses are mean. Max is a dumpus.",
    "question": "Is the following statement true or false? Max is not mean.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nDumpus(x) ::: x is a dumpus\nCold(x) ::: x is cold\nZumpus(x) ::: x is a zumpus\nMetallic(x) ::: x is metallic\nRompus(x) ::: x is a rompus\nDull(x) ::: x is dull\nYumpus(x) ::: x is a yumpus\nFloral(x) ::: x is floral\nImpus(x) ::: x is an impus\nMean(x) ::: x is mean\nWumpus(x) ::: x is a wumpus\nSmall(x) ::: x is small\nJompus(x) ::: x is a jompus\nTransparent(x) ::: x is transparent\nVumpus(x) ::: x is a vumpus\nSour(x) ::: x is sour\nNumpus(x) ::: x is a numpus\nTumpus(x) ::: x is a tumpus\nMean(x) ::: x is mean\nPremises:\n∀x (Dumpus(x) → ¬Cold(x)) ::: Every dumpus is not cold.\n∀x (Dumpus(x) → Zumpus(x)) ::: Every dumpus is a zumpus.\n∀x (Zumpus(x) → Metallic(x)) ::: Each zumpus is metallic.\n∀x (Zumpus(x) → Rompus(x)) ::: Zumpuses are rompuses.\n∀x (Rompus(x) → Dull(x)) ::: Rompuses are dull.\n∀x (Rompus(x) → Yumpus(x)) ::: Each rompus is a yumpus.\n∀x (Yumpus(x) → Floral(x)) ::: Each yumpus is floral.\n∀x (Yumpus(x) → Impus(x)) ::: Yumpuses are impuses.\n∀x (Impus(x) → ¬Mean(x)) ::: Impuses are not mean.\n∀x (Impus(x) → Wumpus(x)) ::: Impuses are wumpuses.\n∀x (Wumpus(x) → Small(x)) ::: Wumpuses are small.\n∀x (Wumpus(x) → Jompus(x)) ::: Every wumpus is a jompus.\n∀x (Jompus(x) → ¬Transparent(x)) ::: Jompuses are not transparent.\n∀x (Jompus(x) → Vumpus(x)) ::: Each jompus is a vumpus.\n∀x (Vumpus(x) → Sour(x)) ::: Every vumpus is sour.\n∀x (Vumpus(x) → Numpus(x)) ::: Every vumpus is a numpus.\n∀x (Tumpus(x) → Mean(x)) ::: Tumpuses are mean.\nDumpus(max) ::: Max is a dumpus.\nConclusion:\n¬Mean(max) ::: Max is not mean.\n------"
    ]
  },
  {
    "id": "ProntoQA_122",
    "context": "Rompuses are metallic. Rompuses are dumpuses. Dumpuses are blue. Every dumpus is a numpus. Every numpus is fruity. Numpuses are jompuses. Every jompus is mean. Jompuses are tumpuses. Tumpuses are not temperate. Tumpuses are impuses. Impuses are not dull. Each impus is a yumpus. Every yumpus is not transparent. Yumpuses are zumpuses. Wumpuses are transparent. Zumpuses are not sweet. Zumpuses are vumpuses. Fae is a numpus.",
    "question": "Is the following statement true or false? Fae is transparent.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "------\n### Predicates:\nRompus(x) ::: x is a rompus\nMetallic(x) ::: x is metallic\nDumpus(x) ::: x is a dumpus\nBlue(x) ::: x is blue\nNumpus(x) ::: x is a numpus\nFruity(x) ::: x is fruity\nJompus(x) ::: x is a jompus\nMean(x) ::: x is mean\nTumpus(x) ::: x is a tumpus\nTemperate(x) ::: x is temperate\nImpus(x) ::: x is an impus\nDull(x) ::: x is dull\nYumpus(x) ::: x is a yumpus\nTransparent(x) ::: x is transparent\nZumpus(x) ::: x is a zumpus\nSweet(x) ::: x is sweet\nVumpus(x) ::: x is a vumpus\nFae(x) ::: x is fae\nPremises:\n∀x (Rompus(x) → Metallic(x)) ::: Rompuses are metallic.\n∀x (Rompus(x) → Dumpus(x)) ::: Rompuses are dumpuses.\n∀x (Dumpus(x) → Blue(x)) ::: Dumpuses are blue.\n∀x (Dumpus(x) → Numpus(x)) ::: Every dumpus is a numpus.\n∀x (Numpus(x) → Fruity(x)) ::: Numpuses are fruity.\n∀x (Numpus(x) → Jompus(x)) ::: Numpuses are jompuses.\n∀x (Jompus(x) → Mean(x)) ::: Every jompus is mean.\n∀x (Jompus(x) → Tumpus(x)) ::: Jompuses are tumpuses.\n∀x (Tumpus(x) → ¬Temperate(x)) ::: Tumpuses are not temperate.\n∀x (Tumpus(x) → Impus(x)) ::: Tumpuses are impuses.\n∀x (Impus(x) → ¬Dull(x)) ::: Impuses are not dull.\n∀x (Impus(x) → Yumpus(x)) ::: Each impus is a yumpus.\n∀x (Yumpus(x) → ¬Transparent(x)) ::: Every yumpus is not transparent.\n∀x (Yumpus(x) → Zumpus(x)) ::: Yumpuses are zumpuses.\n∀x (Wumpus(x) → Transparent(x)) ::: Wumpuses are transparent.\n∀x (Zumpus(x) → ¬Sweet(x)) ::: Zumpuses are not sweet.\n∀x (Zumpus(x) → Vumpus(x)) ::: Zumpuses are vumpuses.\nNumpus(fae) ::: Fae is a numpus.\nConclusion:\nTransparent(fae) ::: Fae is transparent.\n------"
    ]
  },
  {
    "id": "ProntoQA_123",
    "context": "Jompuses are fruity. Jompuses are tumpuses. Tumpuses are not metallic. Tumpuses are wumpuses. Every wumpus is opaque. Each rompus is not aggressive. Wumpuses are numpuses. Numpuses are nervous. Every numpus is a zumpus. Every zumpus is small. Zumpuses are yumpuses. Yumpuses are blue. Yumpuses are impuses. Impuses are not cold. Impuses are dumpuses. Each dumpus is aggressive. Each dumpus is a vumpus. Polly is a numpus.",
    "question": "Is the following statement true or false? Polly is aggressive.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nJompus(x) ::: x is a jompus\nFruity(x) ::: x is fruity\nTumpus(x) ::: x is a tumpus\nMetallic(x) ::: x is metallic\nWumpus(x) ::: x is a wumpus\nOpaque(x) ::: x is opaque\nRompus(x) ::: x is a rompus\nAggressive(x) ::: x is aggressive\nNumpus(x) ::: x is a numpus\nNervous(x) ::: x is nervous\nZumpus(x) ::: x is a zumpus\nSmall(x) ::: x is small\nYumpus(x) ::: x is a yumpus\nBlue(x) ::: x is blue\nImpus(x) ::: x is an impus\nCold(x) ::: x is cold\nDumpus(x) ::: x is a dumpus\nAggressive(x) ::: x is aggressive\nVumpus(x) ::: x is a vumpus\nPremises:\n∀x (Jompus(x) → Fruity(x)) ::: Jompuses are fruity.\n∀x (Jompus(x) → Tumpus(x)) ::: Jompuses are tumpuses.\n∀x (Tumpus(x) → ¬Metallic(x)) ::: Tumpuses are not metallic.\n∀x (Tumpus(x) → Wumpus(x)) ::: Tumpuses are wumpuses.\n∀x (Wumpus(x) → Opaque(x)) ::: Every wumpus is opaque.\n∀x (Rompus(x) → ¬Aggressive(x)) ::: Each rompus is not aggressive.\n∀x (Wumpus(x) → Numpus(x)) ::: Wumpuses are numpuses.\n∀x (Numpus(x) → Nervous(x)) ::: Numpuses are nervous.\n∀x (Numpus(x) → Zumpus(x)) ::: Every numpus is a zumpus.\n∀x (Zumpus(x) → Small(x)) ::: Every zumpus is small.\n∀x (Zumpus(x) → Yumpus(x)) ::: Zumpuses are yumpuses.\n∀x (Yumpus(x) → Blue(x)) ::: Yumpuses are blue.\n∀x (Yumpus(x) → Impus(x)) ::: Yumpuses are impuses.\n∀x (Impus(x) → ¬Cold(x)) ::: Impuses are not cold.\n∀x (Impus(x) → Dumpus(x)) ::: Impuses are dumpuses.\n∀x (Dumpus(x) → Aggressive(x)) ::: Each dumpus is aggressive.\n∀x (Dumpus(x) → Vumpus(x)) ::: Each dumpus is a vumpus.\nNumpus(polly) ::: Polly is a numpus.\nConclusion:\nAggressive(polly) ::: Polly is aggressive.\n------"
    ]
  },
  {
    "id": "ProntoQA_124",
    "context": "Each yumpus is metallic. Yumpuses are zumpuses. Zumpuses are transparent. Every zumpus is a jompus. Jompuses are floral. Every tumpus is not cold. Jompuses are numpuses. Numpuses are happy. Each numpus is a vumpus. Vumpuses are cold. Vumpuses are impuses. Impuses are not brown. Impuses are rompuses. Rompuses are not bright. Rompuses are dumpuses. Each dumpus is large. Dumpuses are wumpuses. Sam is a yumpus.",
    "question": "Is the following statement true or false? Sam is not cold.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nYumpus(x) ::: x is a yumpus\nMetallic(x) ::: x is metallic\nZumpus(x) ::: x is a zumpus\nTransparent(x) ::: x is transparent\nJompus(x) ::: x is a jompus\nFloral(x) ::: x is floral\nTumpus(x) ::: x is a tumpus\nCold(x) ::: x is cold\nNumpus(x) ::: x is a numpus\nHappy(x) ::: x is happy\nVumpus(x) ::: x is a vumpus\nCold(x) ::: x is cold\nImpus(x) ::: x is an impus\nBrown(x) ::: x is brown\nRompus(x) ::: x is a rompus\nBright(x) ::: x is bright\nDumpus(x) ::: x is a dumpus\nLarge(x) ::: x is large\nWumpus(x) ::: x is a wumpus\nPremises:\n∀x (Yumpus(x) → Metallic(x)) ::: Each yumpus is metallic.\n∀x (Yumpus(x) → Zumpus(x)) ::: Yumpuses are zumpuses.\n∀x (Zumpus(x) → Transparent(x)) ::: Zumpuses are transparent.\n∀x (Zumpus(x) → Jompus(x)) ::: Every zumpus is a jompus.\n∀x (Jompus(x) → Floral(x)) ::: Jompuses are floral.\n∀x (Tumpus(x) → ¬Cold(x)) ::: Every tumpus is not cold.\n∀x (Jompus(x) → Numpus(x)) ::: Jompuses are numpuses.\n∀x (Numpus(x) → Happy(x)) ::: Numpuses are happy.\n∀x (Numpus(x) → Vumpus(x)) ::: Each numpus is a vumpus.\n∀x (Vumpus(x) → Cold(x)) ::: Vumpuses are cold.\n∀x (Vumpus(x) → Impus(x)) ::: Vumpuses are impuses.\n∀x (Impus(x) → ¬Brown(x)) ::: Impuses are not brown.\n∀x (Impus(x) → Rompus(x)) ::: Impuses are rompuses.\n∀x (Rompus(x) → ¬Bright(x)) ::: Rompuses are not bright.\n∀x (Rompus(x) → Dumpus(x)) ::: Rompuses are dumpuses.\n∀x (Dumpus(x) → Large(x)) ::: Each dumpus is large.\n∀x (Dumpus(x) → Wumpus(x)) ::: Dumpuses are wumpuses.\nYumpus(sam) ::: Sam is a yumpus.\nConclusion:\n¬Cold(sam) ::: Sam is not cold.\n------"
    ]
  },
  {
    "id": "ProntoQA_125",
    "context": "Every zumpus is bright. Each zumpus is a yumpus. Each yumpus is not bitter. Every yumpus is a rompus. Each rompus is small. Rompuses are dumpuses. Dumpuses are brown. Each dumpus is an impus. Impuses are not feisty. Tumpuses are feisty. Every impus is a numpus. Numpuses are not wooden. Numpuses are jompuses. Each jompus is transparent. Every jompus is a vumpus. Vumpuses are not cold. Every vumpus is a wumpus. Sally is a zumpus.",
    "question": "Is the following statement true or false? Sally is not feisty.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nZumpus(x) ::: x is a zumpus\nBright(x) ::: x is bright\nYumpus(x) ::: x is a yumpus\nBitter(x) ::: x is bitter\nRompus(x) ::: x is a rompus\nSmall(x) ::: x is small\nDumpus(x) ::: x is a dumpus\nBrown(x) ::: x is brown\nImpus(x) ::: x is an impus\nFeisty(x) ::: x is feisty\nTumpus(x) ::: x is a tumpus\nNumpus(x) ::: x is a numpus\nWooden(x) ::: x is wooden\nJompus(x) ::: x is a jompus\nTransparent(x) ::: x is transparent\nVumpus(x) ::: x is a vumpus\nCold(x) ::: x is cold\nWumpus(x) ::: x is a wumpus\nPremises:\n∀x (Zumpus(x) → Bright(x)) ::: Every zumpus is bright.\n∀x (Zumpus(x) → Yumpus(x)) ::: Each zumpus is a yumpus.\n∀x (Yumpus(x) → ¬Bitter(x)) ::: Each yumpus is not bitter.\n∀x (Yumpus(x) → Rompus(x)) ::: Every yumpus is a rompus.\n∀x (Rompus(x) → Small(x)) ::: Each rompus is small.\n∀x (Rompus(x) → Dumpus(x)) ::: Rompuses are dumpuses.\n∀x (Dumpus(x) → Brown(x)) ::: Dumpuses are brown.\n∀x (Dumpus(x) → Impus(x)) ::: Each dumpus is an impus.\n∀x (Impus(x) → ¬Feisty(x)) ::: Impuses are not feisty.\n∀x (Tumpus(x) → Feisty(x)) ::: Tumpuses are feisty.\n∀x (Impus(x) → Numpus(x)) ::: Every impus is a numpus.\n∀x (Numpus(x) → ¬Wooden(x)) ::: Numpuses are not wooden.\n∀x (Numpus(x) → Jompus(x)) ::: Numpuses are jompuses.\n∀x (Jompus(x) → Transparent(x)) ::: Each jompus is transparent.\n∀x (Jompus(x) → Vumpus(x)) ::: Every jompus is a vumpus.\n∀x (Vumpus(x) → ¬Cold(x)) ::: Vumpuses are not cold.\n∀x (Vumpus(x) → Wumpus(x)) ::: Every vumpus is a wumpus.\nZumpus(sally) ::: Sally is a zumpus.\nConclusion:\n¬Feisty(sally) ::: Sally is not feisty.\n------"
    ]
  },
  {
    "id": "ProntoQA_126",
    "context": "Impuses are not angry. Impuses are zumpuses. Zumpuses are transparent. Every zumpus is a yumpus. Yumpuses are small. Yumpuses are wumpuses. Each wumpus is sour. Wumpuses are jompuses. Each jompus is orange. Each jompus is a dumpus. Every rompus is not floral. Every dumpus is floral. Dumpuses are numpuses. Every numpus is luminous. Numpuses are vumpuses. Stella is a zumpus.",
    "question": "Is the following statement true or false? Stella is not floral.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nImpus(x) ::: x is an impus\nAngry(x) ::: x is angry\nZumpus(x) ::: x is a zumpus\nTransparent(x) ::: x is transparent\nYumpus(x) ::: x is a yumpus\nSmall(x) ::: x is small\nWumpus(x) ::: x is a wumpus\nSour(x) ::: x is sour\nJompus(x) ::: x is a jompus\nOrange(x) ::: x is orange\nDumpus(x) ::: x is a dumpus\nRompus(x) ::: x is a rompus\nFloral(x) ::: x is floral\nNumpus(x) ::: x is a numpus\nLuminous(x) ::: x is luminous\nVumpus(x) ::: x is a vumpus\nStella(x) ::: x is Stella\nPremises:\n∀x (Impus(x) → ¬Angry(x)) ::: Impuses are not angry.\n∀x (Zumpus(x) → Transparent(x)) ::: Zumpuses are transparent.\n∀x (Yumpus(x) → Small(x)) ::: Every zumpus is a yumpus.\n∀x (Yumpus(x) → Wumpus(x)) ::: Yumpuses are wumpuses.\n∀x (Wumpus(x) → Sour(x)) ::: Each wumpus is sour.\n∀x (Wumpus(x) → Jompus(x)) ::: Wumpuses are jompuses.\n∀x (Jompus(x) → Orange(x)) ::: Each jompus is orange.\n∀x (Jompus(x) → Dumpus(x)) ::: Each jompus is a dumpus.\n∀x (Rompus(x) → ¬Floral(x)) ::: Every rompus is not floral.\n∀x (Dumpus(x) → Floral(x)) ::: Dumpuses are floral.\n∀x (Numpus(x) → Luminous(x)) ::: Numpuses are luminous.\n∀x (Numpus(x) → Vumpus(x)) ::: Numpuses are vumpuses.\nZumpus(stella) ::: Stella is a zumpus.\nConclusion:\n¬Floral(stella) ::: Stella is not floral.\n------"
    ]
  },
  {
    "id": "ProntoQA_127",
    "context": "Jompuses are kind. Jompuses are zumpuses. Every zumpus is bitter. Zumpuses are vumpuses. Vumpuses are not large. Each vumpus is a numpus. Rompuses are nervous. Each numpus is not luminous. Every numpus is a dumpus. Dumpuses are not nervous. Dumpuses are tumpuses. Tumpuses are not opaque. Every tumpus is a wumpus. Every wumpus is orange. Every wumpus is an impus. Each impus is bright. Every impus is a yumpus. Max is a jompus.",
    "question": "Is the following statement true or false? Max is nervous.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nJompus(x) ::: x is a jompus\nKind(x) ::: x is kind\nZumpus(x) ::: x is a zumpus\nBitter(x) ::: x is bitter\nVumpus(x) ::: x is a vumpus\nLarge(x) ::: x is large\nNumpus(x) ::: x is a numpus\nRompus(x) ::: x is a rompus\nNervous(x) ::: x is nervous\nLuminous(x) ::: x is luminous\nDumpus(x) ::: x is a dumpus\nNervous(x) ::: x is nervous\nTumpus(x) ::: x is a tumpus\nOpaque(x) ::: x is opaque\nWumpus(x) ::: x is a wumpus\nOrange(x) ::: x is orange\nImpus(x) ::: x is an impus\nBright(x) ::: x is bright\nYumpus(x) ::: x is a yumpus\nPremises:\n∀x (Jompus(x) → Kind(x)) ::: Jompuses are kind.\n∀x (Jompus(x) → Zumpus(x)) ::: Jompuses are zumpuses.\n∀x (Zumpus(x) → Bitter(x)) ::: Every zumpus is bitter.\n∀x (Zumpus(x) → Vumpus(x)) ::: Zumpuses are vumpuses.\n∀x (Vumpus(x) → ¬Large(x)) ::: Vumpuses are not large.\n∀x (Vumpus(x) → Numpus(x)) ::: Each vumpus is a numpus.\n∀x (Rompus(x) → Nervous(x)) ::: Rompuses are nervous.\n∀x (Numpus(x) → ¬Luminous(x)) ::: Every numpus is not luminous.\n∀x (Numpus(x) → Dumpus(x)) ::: Every numpus is a dumpus.\n∀x (Dumpus(x) → ¬Nervous(x)) ::: Dumpuses are not nervous.\n∀x (Dumpus(x) → Tumpus(x)) ::: Dumpuses are tumpuses.\n∀x (Tumpus(x) → ¬Opaque(x)) ::: Tumpuses are not opaque.\n∀x (Tumpus(x) → Wumpus(x)) ::: Every tumpus is a wumpus.\n∀x (Wumpus(x) → Orange(x)) ::: Every wumpus is orange.\n∀x (Wumpus(x) → Impus(x)) ::: Every wumpus is an impus.\n∀x (Impus(x) → Bright(x)) ::: Each impus is bright.\n∀x (Impus(x) → Yumpus(x)) ::: Every impus is a yumpus.\nJompus(max) ::: Max is a jompus.\nConclusion:\nNervous(max) ::: Max is nervous.\n------"
    ]
  },
  {
    "id": "ProntoQA_128",
    "context": "Each yumpus is fruity. Every yumpus is a dumpus. Every dumpus is dull. Each dumpus is a zumpus. Zumpuses are nervous. Every zumpus is an impus. Each impus is large. Every impus is a vumpus. Tumpuses are temperate. Vumpuses are not temperate. Each vumpus is a jompus. Every jompus is wooden. Jompuses are wumpuses. Wumpuses are not red. Every wumpus is a rompus. Rompuses are amenable. Rompuses are numpuses. Sam is a yumpus.",
    "question": "Is the following statement true or false? Sam is temperate.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nYumpus(x) ::: x is a yumpus\nFruity(x) ::: x is fruity\nDumpus(x) ::: x is a dumpus\nDull(x) ::: x is dull\nZumpus(x) ::: x is a zumpus\nNervous(x) ::: x is nervous\nImpus(x) ::: x is an impus\nLarge(x) ::: x is large\nVumpus(x) ::: x is a vumpus\nTumpus(x) ::: x is a tumpus\nTemperate(x) ::: x is temperate\nWooden(x) ::: x is wooden\nWumpus(x) ::: x is a wumpus\nRed(x) ::: x is red\nRompus(x) ::: x is a rompus\nAmenable(x) ::: x is amenable\nNumpus(x) ::: x is a numpus\nPremises:\n∀x (Yumpus(x) → Fruity(x)) ::: Each yumpus is fruity.\n∀x (Yumpus(x) → Dumpus(x)) ::: Every yumpus is a dumpus.\n∀x (Dumpus(x) → Dull(x)) ::: Every dumpus is dull.\n∀x (Dumpus(x) → Zumpus(x)) ::: Each dumpus is a zumpus.\n∀x (Zumpus(x) → Nervous(x)) ::: Zumpuses are nervous.\n∀x (Zumpus(x) → Impus(x)) ::: Every zumpus is an impus.\n∀x (Impus(x) → Large(x)) ::: Each impus is large.\n∀x (Impus(x) → Vumpus(x)) ::: Every impus is a vumpus.\n∀x (Tumpus(x) → Temperate(x)) ::: Tumpuses are temperate.\n∀x (Vumpus(x) → ¬Temperate(x)) ::: Vumpuses are not temperate.\n∀x (Vumpus(x) → Jompus(x)) ::: Each vumpus is a jompus.\n∀x (Jompus(x) → Wooden(x)) ::: Every jompus is wooden.\n∀x (Jompus(x) → Wumpus(x)) ::: Jompuses are wumpuses.\n∀x (Wumpus(x) → ¬Red(x)) ::: Wumpuses are not red.\n∀x (Wumpus(x) → Rompus(x)) ::: Every wumpus is a rompus.\n∀x (Rompus(x) → Amenable(x)) ::: Rompuses are amenable.\n∀x (Rompus(x) → Numpus(x)) ::: Rompuses are numpuses.\nYumpus(sam) ::: Sam is a yumpus.\nConclusion:\nTemperate(sam) ::: Sam is temperate.\n------"
    ]
  },
  {
    "id": "ProntoQA_129",
    "context": "Every numpus is not transparent. Numpuses are impuses. Every tumpus is sweet. Each impus is metallic. Impuses are yumpuses. Yumpuses are large. Every yumpus is a dumpus. Every dumpus is angry. Each dumpus is a vumpus. Vumpuses are not sweet. Vumpuses are jompuses. Each jompus is bright. Jompuses are rompuses. Wren is a numpus.",
    "question": "Is the following statement true or false? Wren is not sweet.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant.lpg\n------"
    ]
  },
  {
    "id": "ProntoQA_130",
    "context": "Dumpuses are opaque. Every numpus is bitter. Numpuses are wumpuses. Wumpuses are blue. Wumpuses are yumpuses. Yumpuses are not temperate. Yumpuses are impuses. Impuses are feisty. Each impus is a vumpus. Vumpuses are not earthy. Each vumpus is a tumpus. Each tumpus is not opaque. Tumpuses are jompuses. Jompuses are bright. Jompuses are rompuses. Each rompus is liquid. Rompuses are zumpuses. Polly is a wumpus.",
    "question": "Is the following statement true or false? Polly is not opaque.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nDumpus(x) ::: x is a dumpus\nOpaque(x) ::: x is opaque\nNumpus(x) ::: x is a numpus\nBitter(x) ::: x is bitter\nWumpus(x) ::: x is a wumpus\nBlue(x) ::: x is blue\nYumpus(x) ::: x is a yumpus\nTemperate(x) ::: x is temperate\nImpus(x) ::: x is an impus\nFeisty(x) ::: x is feisty\nVumpus(x) ::: x is a vumpus\nEarthy(x) ::: x is earthy\nTumpus(x) ::: x is a tumpus\nJompus(x) ::: x is a jompus\nBright(x) ::: x is bright\nRompus(x) ::: x is a rompus\nLiquid(x) ::: x is liquid\nZumpus(x) ::: x is a zumpus\nPremises:\n∀x (Dumpus(x) → Opaque(x)) ::: Dumpuses are opaque.\n∀x (Numpus(x) → Bitter(x)) ::: Every numpus is bitter.\n∀x (Numpus(x) → Wumpus(x)) ::: Numpuses are wumpuses.\n∀x (Wumpus(x) → Blue(x)) ::: Wumpuses are blue.\n∀x (Wumpus(x) → Yumpus(x)) ::: Wumpuses are yumpuses.\n∀x (Yumpus(x) → ¬Temperate(x)) ::: Yumpuses are not temperate.\n∀x (Yumpus(x) → Impus(x)) ::: Yumpuses are impuses.\n∀x (Impus(x) → Feisty(x)) ::: Impuses are feisty.\n∀x (Impus(x) → Vumpus(x)) ::: Each impus is a vumpus.\n∀x (Vumpus(x) → ¬Earthy(x)) ::: Vumpuses are not earthy.\n∀x (Vumpus(x) → Tumpus(x)) ::: Each vumpus is a tumpus.\n∀x (Tumpus(x) → ¬Opaque(x)) ::: Tumpuses are not opaque.\n∀x (Tumpus(x) → Jompus(x)) ::: Tumpuses are jompuses.\n∀x (Jompus(x) → Bright(x)) ::: Jompuses are bright.\n∀x (Jompus(x) → Rompus(x)) ::: Jompuses are rompuses.\n∀x (Rompus(x) → Liquid(x)) ::: Each rompus is liquid.\n∀x (Rompus(x) → Zumpus(x)) ::: Rompuses are zumpuses.\nWumpus(polly) ::: Polly is a wumpus.\nConclusion:\n¬Opaque(polly) ::: Polly is not opaque.\n------"
    ]
  },
  {
    "id": "ProntoQA_131",
    "context": "Every yumpus is bitter. Each yumpus is a tumpus. Each tumpus is cold. Tumpuses are wumpuses. Each wumpus is kind. Every wumpus is a numpus. Every numpus is not brown. Every numpus is a rompus. Every rompus is wooden. Rompuses are dumpuses. Every dumpus is dull. Every dumpus is a zumpus. Zumpuses are large. Each zumpus is a vumpus. Each vumpus is opaque. Jompuses are not dull. Vumpuses are impuses. Polly is a tumpus.",
    "question": "Is the following statement true or false? Polly is dull.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nYumpus(x) ::: x is a yumpus\nBitter(x) ::: x is bitter\nTumpus(x) ::: x is a tumpus\nCold(x) ::: x is cold\nWumpus(x) ::: x is a wumpus\nKind(x) ::: x is kind\nNumpus(x) ::: x is a numpus\nBrown(x) ::: x is brown\nRompus(x) ::: x is a rompus\nWooden(x) ::: x is wooden\nDumpus(x) ::: x is a dumpus\nDull(x) ::: x is dull\nZumpus(x) ::: x is a zumpus\nLarge(x) ::: x is large\nVumpus(x) ::: x is a vumpus\nOpaque(x) ::: x is opaque\nJompus(x) ::: x is a jompus\nImpus(x) ::: x is an impus\nPremises:\n∀x (Yumpus(x) → Bitter(x)) ::: Every yumpus is bitter.\n∀x (Yumpus(x) → Tumpus(x)) ::: Each yumpus is a tumpus.\n∀x (Tumpus(x) → Cold(x)) ::: Each tumpus is cold.\n∀x (Tumpus(x) → Wumpus(x)) ::: Tumpuses are wumpuses.\n∀x (Wumpus(x) → Kind(x)) ::: Each wumpus is kind.\n∀x (Wumpus(x) → Numpus(x)) ::: Every wumpus is a numpus.\n∀x (Numpus(x) → ¬Brown(x)) ::: Every numpus is not brown.\n∀x (Numpus(x) → Rompus(x)) ::: Every numpus is a rompus.\n∀x (Rompus(x) → Wooden(x)) ::: Every rompus is wooden.\n∀x (Rompus(x) → Dumpus(x)) ::: Rompuses are dumpuses.\n∀x (Dumpus(x) → Dull(x)) ::: Every dumpus is dull.\n∀x (Dumpus(x) → Zumpus(x)) ::: Every dumpus is a zumpus.\n∀x (Zumpus(x) → Large(x)) ::: Zumpuses are large.\n∀x (Zumpus(x) → Vumpus(x)) ::: Each zumpus is a vumpus.\n∀x (Vumpus(x) → Opaque(x)) ::: Each vumpus is opaque.\n∀x (Jompus(x) → ¬Dull(x)) ::: Jompuses are not dull.\n∀x (Vumpus(x) → Impus(x)) ::: Vumpuses are impuses.\nTumpus(polly) ::: Polly is a tumpus.\nConclusion:\nDull(polly) ::: Polly is dull.\n------"
    ]
  },
  {
    "id": "ProntoQA_132",
    "context": "Each vumpus is transparent. Vumpuses are zumpuses. Every zumpus is not large. Zumpuses are dumpuses. Every dumpus is spicy. Each dumpus is a numpus. Each impus is blue. Numpuses are temperate. Each numpus is a tumpus. Tumpuses are not blue. Tumpuses are jompuses. Each jompus is happy. Each jompus is a yumpus. Each yumpus is not amenable. Every yumpus is a wumpus. Wumpuses are not floral. Wumpuses are rompuses. Polly is a vumpus.",
    "question": "Is the following statement true or false? Polly is not blue.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nVumpus(x) ::: x is a vumpus\nTransparent(x) ::: x is transparent\nZumpus(x) ::: x is a zumpus\nLarge(x) ::: x is large\nDumpus(x) ::: x is a dumpus\nSpicy(x) ::: x is spicy\nNumpus(x) ::: x is a numpus\nTemperate(x) ::: x is temperate\nTumpus(x) ::: x is a tumpus\nBlue(x) ::: x is blue\nJompus(x) ::: x is a jompus\nHappy(x) ::: x is happy\nYumpus(x) ::: x is a yumpus\nAmenable(x) ::: x is amenable\nWumpus(x) ::: x is a wumpus\nFloral(x) ::: x is floral\nRompus(x) ::: x is a rompus\nPremises:\n∀x (Vumpus(x) → Transparent(x)) ::: Each vumpus is transparent.\n∀x (Vumpus(x) → Zumpus(x)) ::: Vumpuses are zumpuses.\n∀x (Zumpus(x) → ¬Large(x)) ::: Every zumpus is not large.\n∀x (Dumpus(x) → Spicy(x)) ::: Dumpuses are spicy.\n∀x (Dumpus(x) → Numpus(x)) ::: Each dumpus is a numpus.\n∀x (Impus(x) → Blue(x)) ::: Each impus is blue.\n∀x (Numpus(x) → Temperate(x)) ::: Numpuses are temperate.\n∀x (Numpus(x) → Tumpus(x)) ::: Each numpus is a tumpus.\n∀x (Tumpus(x) → ¬Blue(x)) ::: Tumpuses are not blue.\n∀x (Tumpus(x) → Jompus(x)) ::: Tumpuses are jompuses.\n∀x (Jompus(x) → Happy(x)) ::: Each jompus is happy.\n∀x (Jompus(x) → Yumpus(x)) ::: Each jompus is a yumpus.\n∀x (Yumpus(x) → ¬Amenable(x)) ::: Each yumpus is not amenable.\n∀x (Yumpus(x) → Wumpus(x)) ::: Every yumpus is a wumpus.\n∀x (Wumpus(x) → ¬Floral(x)) ::: Wumpuses are not floral.\n∀x (Wumpus(x) → Rompus(x)) ::: Wumpuses are rompuses.\nVumpus(polly) ::: Polly is a vumpus.\nConclusion:\n¬Blue(polly) ::: Polly is not blue.\n------"
    ]
  },
  {
    "id": "ProntoQA_133",
    "context": "Each yumpus is bright. Yumpuses are zumpuses. Zumpuses are not red. Each zumpus is a rompus. Each rompus is kind. Rompuses are tumpuses. Tumpuses are luminous. Tumpuses are jompuses. Jompuses are not bitter. Jompuses are impuses. Every dumpus is bitter. Each impus is feisty. Each impus is a vumpus. Each vumpus is opaque. Vumpuses are numpuses. Wren is a yumpus.",
    "question": "Is the following statement true or false? Wren is not bitter.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nYumpus(x) ::: x is a yumpus\nBright(x) ::: x is bright\nZumpus(x) ::: x is a zumpus\nRed(x) ::: x is red\nRompus(x) ::: x is a rompus\nKind(x) ::: x is kind\nTumpus(x) ::: x is a tumpus\nLuminous(x) ::: x is luminous\nJompus(x) ::: x is a jompus\nBitter(x) ::: x is bitter\nImpus(x) ::: x is an impus\nVumpus(x) ::: x is a vumpus\nOpaque(x) ::: x is opaque\nNumpus(x) ::: x is a numpus\nWren(x) ::: x is Wren\nPremises:\n∀x (Yumpus(x) → Bright(x)) ::: Each yumpus is bright.\n∀x (Yumpus(x) → Zumpus(x)) ::: Yumpuses are zumpuses.\n∀x (Zumpus(x) → ¬Red(x)) ::: Zumpuses are not red.\n∀x (Zumpus(x) → Rompus(x)) ::: Each zumpus is a rompus.\n∀x (Rompus(x) → Kind(x)) ::: Rompuses are kind.\n∀x (Rompus(x) → Tumpus(x)) ::: Rompuses are tumpuses.\n∀x (Tumpus(x) → Luminous(x)) ::: Tumpuses are luminous.\n∀x (Tumpus(x) → Jompus(x)) ::: Tumpuses are jompuses.\n∀x (Jompus(x) → ¬Bitter(x)) ::: Jompuses are not bitter.\n∀x (Jompus(x) → Impus(x)) ::: Jompuses are impuses.\n∀x (Dumpus(x) → Bitter(x)) ::: Every dumpus is bitter.\n∀x (Impus(x) → Feisty(x)) ::: Each impus is feisty.\n∀x (Impus(x) → Vumpus(x)) ::: Each impus is a vumpus.\n∀x (Vumpus(x) → Opaque(x)) ::: Vumpuses are opaque.\n∀x (Vumpus(x) → Numpus(x)) ::: Vumpuses are numpuses.\nYumpus(wren) ::: Wren is a yumpus.\nConclusion:\n¬Bitter(wren) ::: Wren is not bitter.\n------"
    ]
  },
  {
    "id": "ProntoQA_134",
    "context": "Each impus is not liquid. Impuses are rompuses. Rompuses are floral. Rompuses are vumpuses. Every vumpus is happy. Vumpuses are wumpuses. Wumpuses are blue. Each wumpus is a numpus. Each numpus is temperate. Each numpus is a tumpus. Zumpuses are not temperate. Each tumpus is not bitter. Tumpuses are jompuses. Every jompus is bright. Each jompus is a yumpus. Yumpuses are mean. Each yumpus is a dumpus. Stella is an impus.",
    "question": "Is the following statement true or false? Stella is temperate.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nImpus(x) ::: x is an impus\nLiquid(x) ::: x is liquid\nRompus(x) ::: x is a rompus\nFloral(x) ::: x is floral\nVumpus(x) ::: x is a vumpus\nHappy(x) ::: x is happy\nWumpus(x) ::: x is a wumpus\nBlue(x) ::: x is blue\nNumpus(x) ::: x is a numpus\nTemperate(x) ::: x is temperate\nTumpus(x) ::: x is a tumpus\nBitter(x) ::: x is bitter\nJompus(x) ::: x is a jompus\nBright(x) ::: x is bright\nYumpus(x) ::: x is a yumpus\nMean(x) ::: x is mean\nDumpus(x) ::: x is a dumpus\nPremises:\n∀x (Impus(x) → ¬Liquid(x)) ::: Each impus is not liquid.\n∀x (Rompus(x) → Floral(x)) ::: Rompuses are floral.\n∀x (Rompus(x) → Vumpus(x)) ::: Rompuses are vumpuses.\n∀x (Vumpus(x) → Happy(x)) ::: Every vumpus is happy.\n∀x (Vumpus(x) → Wumpus(x)) ::: Vumpuses are wumpuses.\n∀x (Wumpus(x) → Blue(x)) ::: Wumpuses are blue.\n∀x (Wumpus(x) → Numpus(x)) ::: Each wumpus is a numpus.\n∀x (Numpus(x) → Temperate(x)) ::: Each numpus is temperate.\n∀x (Numpus(x) → Tumpus(x)) ::: Each numpus is a tumpus.\n∀x (Zumpus(x) → ¬Temperate(x)) ::: Zumpuses are not temperate.\n∀x (Tumpus(x) → ¬Bitter(x)) ::: Each tumpus is not bitter.\n∀x (Tumpus(x) → Jompus(x)) ::: Tumpuses are jompuses.\n∀x (Jompus(x) → Bright(x)) ::: Every jompus is bright.\n∀x (Jompus(x) → Yumpus(x)) ::: Each jompus is a yumpus.\n∀x (Yumpus(x) → Mean(x)) ::: Yumpuses are mean.\n∀x (Yumpus(x) → Dumpus(x)) ::: Each yumpus is a dumpus.\nImpus(stella) ::: Stella is an impus.\nConclusion:\nTemperate(stella) ::: Stella is temperate.\n------"
    ]
  },
  {
    "id": "ProntoQA_135",
    "context": "Wumpuses are not kind. Every wumpus is a vumpus. Yumpuses are blue. Vumpuses are not transparent. Vumpuses are impuses. Every impus is not small. Every impus is a zumpus. Every zumpus is feisty. Each zumpus is a rompus. Rompuses are not bright. Rompuses are jompuses. Jompuses are hot. Jompuses are numpuses. Numpuses are not blue. Numpuses are tumpuses. Every tumpus is not liquid. Tumpuses are dumpuses. Alex is an impus.",
    "question": "Is the following statement true or false? Alex is not blue.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nWumpus(x) ::: x is a wumpus\nKind(x) ::: x is kind\nVumpus(x) ::: x is a vumpus\nBlue(x) ::: x is blue\nTransparent(x) ::: x is transparent\nImpus(x) ::: x is an impus\nSmall(x) ::: x is small\nZumpus(x) ::: x is a zumpus\nFeisty(x) ::: x is feisty\nRompus(x) ::: x is a rompus\nBright(x) ::: x is bright\nJompus(x) ::: x is a jompus\nHot(x) ::: x is hot\nNumpus(x) ::: x is a numpus\nBlue(x) ::: x is blue\nTumpus(x) ::: x is a tumpus\nLiquid(x) ::: x is liquid\nDumpus(x) ::: x is a dumpus\nPremises:\n∀x (Wumpus(x) → ¬Kind(x)) ::: Wumpuses are not kind.\n∀x (Wumpus(x) → Vumpus(x)) ::: Every wumpus is a vumpus.\n∀x (Yumpus(x) → Blue(x)) ::: Yumpuses are blue.\n∀x (Vumpus(x) → ¬Transparent(x)) ::: Vumpuses are not transparent.\n∀x (Vumpus(x) → Impus(x)) ::: Vumpuses are impuses.\n∀x (Impus(x) → ¬Small(x)) ::: Every impus is not small.\n∀x (Impus(x) → Zumpus(x)) ::: Every impus is a zumpus.\n∀x (Zumpus(x) → Feisty(x)) ::: Every zumpus is feisty.\n∀x (Zumpus(x) → Rompus(x)) ::: Each zumpus is a rompus.\n∀x (Rompus(x) → ¬Bright(x)) ::: Rompuses are not bright.\n∀x (Rompus(x) → Jompus(x)) ::: Rompuses are jompuses.\n∀x (Jompus(x) → Hot(x)) ::: Jompuses are hot.\n∀x (Jompus(x) → Numpus(x)) ::: Jompuses are numpuses.\n∀x (Numpus(x) → ¬Blue(x)) ::: Numpuses are not blue.\n∀x (Numpus(x) → Tumpus(x)) ::: Numpuses are tumpuses.\n∀x (Tumpus(x) → ¬Liquid(x)) ::: Every tumpus is not liquid.\n∀x (Tumpus(x) → Dumpus(x)) ::: Tumpuses are dumpuses.\nImpus(alex) ::: Alex is an impus.\nConclusion:\n¬Blue(alex) ::: Alex is not blue.\n------"
    ]
  },
  {
    "id": "ProntoQA_136",
    "context": "Zumpuses are not fruity. Every zumpus is a dumpus. Each dumpus is not bright. Dumpuses are vumpuses. Vumpuses are not transparent. Vumpuses are rompuses. Rompuses are large. Rompuses are wumpuses. Each wumpus is sour. Wumpuses are yumpuses. Yumpuses are cold. Yumpuses are tumpuses. Each tumpus is luminous. Impuses are not sour. Tumpuses are numpuses. Numpuses are not nervous. Every numpus is a jompus. Sally is a zumpus.",
    "question": "Is the following statement true or false? Sally is not sour.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nZumpus(x) ::: x is a zumpus\nFruity(x) ::: x is fruity\nDumpus(x) ::: x is a dumpus\nBright(x) ::: x is bright\nVumpus(x) ::: x is a vumpus\nTransparent(x) ::: x is transparent\nRompus(x) ::: x is a rompus\nLarge(x) ::: x is large\nWumpus(x) ::: x is a wumpus\nSour(x) ::: x is sour\nYumpus(x) ::: x is a yumpus\nCold(x) ::: x is cold\nTumpus(x) ::: x is a tumpus\nLuminous(x) ::: x is luminous\nImpus(x) ::: x is an impus\nNumpus(x) ::: x is a numpus\nNervous(x) ::: x is nervous\nJompus(x) ::: x is a jompus\nPremises:\n∀x (Zumpus(x) → ¬Fruity(x)) ::: Zumpuses are not fruity.\n∀x (Zumpus(x) → Dumpus(x)) ::: Every zumpus is a dumpus.\n∀x (Dumpus(x) → ¬Bright(x)) ::: Each dumpus is not bright.\n∀x (Dumpus(x) → Vumpus(x)) ::: Dumpuses are vumpuses.\n∀x (Vumpus(x) → ¬Transparent(x)) ::: Vumpuses are not transparent.\n∀x (Vumpus(x) → Rompus(x)) ::: Vumpuses are rompuses.\n∀x (Rompus(x) → Large(x)) ::: Rompuses are large.\n∀x (Rompus(x) → Wumpus(x)) ::: Rompuses are wumpuses.\n∀x (Wumpus(x) → Sour(x)) ::: Each wumpus is sour.\n∀x (Wumpus(x) → Yumpus(x)) ::: Wumpuses are yumpuses.\n∀x (Yumpus(x) → Cold(x)) ::: Yumpuses are cold.\n∀x (Yumpus(x) → Tumpus(x)) ::: Yumpuses are tumpuses.\n∀x (Tumpus(x) → Luminous(x)) ::: Each tumpus is luminous.\n∀x (Impus(x) → ¬Sour(x)) ::: Impuses are not sour.\n∀x (Tumpus(x) → Numpus(x)) ::: Tumpuses are numpuses.\n∀x (Numpus(x) → ¬Nervous(x)) ::: Numpuses are not nervous.\n∀x (Numpus(x) → Jompus(x)) ::: Every numpus is a jompus.\nZumpus(sally) ::: Sally is a zumpus.\nConclusion:\n¬Sour(sally) ::: Sally is not sour.\n------"
    ]
  },
  {
    "id": "ProntoQA_137",
    "context": "Each numpus is opaque. Numpuses are tumpuses. Tumpuses are hot. Tumpuses are rompuses. Each rompus is bright. Rompuses are yumpuses. Each yumpus is earthy. Every yumpus is a wumpus. Each wumpus is spicy. Each wumpus is a zumpus. Every zumpus is nervous. Every zumpus is an impus. Each impus is not liquid. Each impus is a jompus. Every jompus is not large. Jompuses are dumpuses. Each vumpus is liquid. Rex is a rompus.",
    "question": "Is the following statement true or false? Rex is not liquid.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nNumpus(x) ::: x is a numpus\nOpaque(x) ::: x is opaque\nTumpus(x) ::: x is a tumpus\nHot(x) ::: x is hot\nRompus(x) ::: x is a rompus\nBright(x) ::: x is bright\nYumpus(x) ::: x is a yumpus\nEarthy(x) ::: x is earthy\nWumpus(x) ::: x is a wumpus\nSpicy(x) ::: x is spicy\nZumpus(x) ::: x is a zumpus\nNervous(x) ::: x is nervous\nImpus(x) ::: x is an impus\nLiquid(x) ::: x is liquid\nJompus(x) ::: x is a jompus\nLarge(x) ::: x is large\nDumpus(x) ::: x is a dumpus\nVumpus(x) ::: x is a vumpus\nPremises:\n∀x (Numpus(x) → Opaque(x)) ::: Each numpus is opaque.\n∀x (Numpus(x) → Tumpus(x)) ::: Numpuses are tumpuses.\n∀x (Tumpus(x) → Hot(x)) ::: Tumpuses are hot.\n∀x (Tumpus(x) → Rompus(x)) ::: Tumpuses are rompuses.\n∀x (Rompus(x) → Bright(x)) ::: Each rompus is bright.\n∀x (Rompus(x) → Yumpus(x)) ::: Rompuses are yumpuses.\n∀x (Yumpus(x) → Earthy(x)) ::: Each yumpus is earthy.\n∀x (Yumpus(x) → Wumpus(x)) ::: Every yumpus is a wumpus.\n∀x (Wumpus(x) → Spicy(x)) ::: Each wumpus is spicy.\n∀x (Wumpus(x) → Zumpus(x)) ::: Each wumpus is a zumpus.\n∀x (Zumpus(x) → Nervous(x)) ::: Every zumpus is nervous.\n∀x (Zumpus(x) → Impus(x)) ::: Every zumpus is an impus.\n∀x (Impus(x) → ¬Liquid(x)) ::: Each impus is not liquid.\n∀x (Impus(x) → Jompus(x)) ::: Each impus is a jompus.\n∀x (Jompus(x) → ¬Large(x)) ::: Every jompus is not large.\n∀x (Jompus(x) → Dumpus(x)) ::: Jompuses are dumpuses.\n∀x (Vumpus(x) → Liquid(x)) ::: Each vumpus is liquid.\nRompus(rex) ::: Rex is a rompus.\nConclusion:\n¬Liquid(rex) ::: Rex is not liquid.\n------"
    ]
  },
  {
    "id": "ProntoQA_138",
    "context": "Rompuses are not angry. Every numpus is red. Each rompus is a jompus. Jompuses are not bright. Every jompus is a yumpus. Every yumpus is wooden. Each yumpus is a tumpus. Tumpuses are hot. Tumpuses are dumpuses. Each dumpus is feisty. Dumpuses are wumpuses. Wumpuses are not transparent. Every wumpus is an impus. Each impus is not red. Every impus is a vumpus. Each vumpus is not large. Vumpuses are zumpuses. Sally is a yumpus.",
    "question": "Is the following statement true or false? Sally is red.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nRompus(x) ::: x is a rompus\nAngry(x) ::: x is angry\nNumpus(x) ::: x is a numpus\nRed(x) ::: x is red\nJompus(x) ::: x is a jompus\nBright(x) ::: x is bright\nYumpus(x) ::: x is a yumpus\nWooden(x) ::: x is wooden\nTumpus(x) ::: x is a tumpus\nHot(x) ::: x is hot\nDumpus(x) ::: x is a dumpus\nFeisty(x) ::: x is feisty\nWumpus(x) ::: x is a wumpus\nTransparent(x) ::: x is transparent\nImpus(x) ::: x is an impus\nVumpus(x) ::: x is a vumpus\nLarge(x) ::: x is large\nZumpus(x) ::: x is a zumpus\nPremises:\n∀x (Rompus(x) → ¬Angry(x)) ::: Rompuses are not angry.\n∀x (Numpus(x) → Red(x)) ::: Every numpus is red.\n∀x (Rompus(x) → Jompus(x)) ::: Each rompus is a jompus.\n∀x (Jompus(x) → ¬Bright(x)) ::: Jompuses are not bright.\n∀x (Yumpus(x) → Tumpus(x)) ::: Every yumpus is a tumpus.\n∀x (Tumpus(x) → Hot(x)) ::: Tumpuses are hot.\n∀x (Tumpus(x) → Dumpus(x)) ::: Tumpuses are dumpuses.\n∀x (Dumpus(x) → Feisty(x)) ::: Each dumpus is feisty.\n∀x (Dumpus(x) → Wumpus(x)) ::: Dumpuses are wumpuses.\n∀x (Wumpus(x) → ¬Transparent(x)) ::: Wumpuses are not transparent.\n∀x (Wumpus(x) → Impus(x)) ::: Every wumpus is an impus.\n∀x (Impus(x) → ¬Red(x)) ::: Each impus is not red.\n∀x (Impus(x) → Vumpus(x)) ::: Each impus is a vumpus.\n∀x (Vumpus(x) → ¬Large(x)) ::: Vumpuses are not large.\n∀x (Vumpus(x) → Zumpus(x)) ::: Vumpuses are zumpuses.\nYumpus(sally) ::: Sally is a yumpus.\nConclusion:\nRed(sally) ::: Sally is red.\n------"
    ]
  },
  {
    "id": "ProntoQA_139",
    "context": "Every zumpus is not hot. Each zumpus is a dumpus. Every dumpus is not floral. Each dumpus is a yumpus. Every yumpus is aggressive. Yumpuses are wumpuses. Every wumpus is not red. Every wumpus is a vumpus. Vumpuses are bright. Vumpuses are jompuses. Every jompus is not small. Jompuses are tumpuses. Each tumpus is shy. Every tumpus is a numpus. Rompuses are small. Each numpus is metallic. Numpuses are impuses. Sam is a dumpus.",
    "question": "Is the following statement true or false? Sam is not small.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nZumpus(x) ::: x is a zumpus\nHot(x) ::: x is hot\nDumpus(x) ::: x is a dumpus\nFloral(x) ::: x is floral\nYumpus(x) ::: x is a yumpus\nAggressive(x) ::: x is aggressive\nWumpus(x) ::: x is a wumpus\nRed(x) ::: x is red\nVumpus(x) ::: x is a vumpus\nBright(x) ::: x is bright\nJompus(x) ::: x is a jompus\nSmall(x) ::: x is small\nTumpus(x) ::: x is a tumpus\nShy(x) ::: x is shy\nNumpus(x) ::: x is a numpus\nMetallic(x) ::: x is metallic\nImpus(x) ::: x is an impus\nPremises:\n∀x (Zumpus(x) → ¬Hot(x)) ::: Every zumpus is not hot.\n∀x (Zumpus(x) → Dumpus(x)) ::: Each zumpus is a dumpus.\n∀x (Dumpus(x) → ¬Floral(x)) ::: Every dumpus is not floral.\n∀x (Dumpus(x) → Yumpus(x)) ::: Each dumpus is a yumpus.\n∀x (Yumpus(x) → Aggressive(x)) ::: Every yumpus is aggressive.\n∀x (Yumpus(x) → Wumpus(x)) ::: Yumpuses are wumpuses.\n∀x (Wumpus(x) → ¬Red(x)) ::: Every wumpus is not red.\n∀x (Wumpus(x) → Vumpus(x)) ::: Every wumpus is a vumpus.\n∀x (Vumpus(x) → Bright(x)) ::: Vumpuses are bright.\n∀x (Vumpus(x) → Jompus(x)) ::: Vumpuses are jompuses.\n∀x (Jompus(x) → ¬Small(x)) ::: Every jompus is not small.\n∀x (Jompus(x) → Tumpus(x)) ::: Jompuses are tumpuses.\n∀x (Tumpus(x) → Shy(x)) ::: Each tumpus is shy.\n∀x (Tumpus(x) → Numpus(x)) ::: Every tumpus is a numpus.\n∀x (Numpus(x) → Metallic(x)) ::: Numpuses are metallic.\n∀x (Numpus(x) → Impus(x)) ::: Numpuses are impuses.\nDumpus(sam) ::: Sam is a dumpus.\nConclusion:\n¬Small(sam) ::: Sam is not small.\n------"
    ]
  },
  {
    "id": "ProntoQA_140",
    "context": "Each dumpus is large. Every dumpus is a wumpus. Wumpuses are cold. Every wumpus is a tumpus. Impuses are sour. Tumpuses are fruity. Every tumpus is a rompus. Every rompus is not nervous. Every rompus is a zumpus. Zumpuses are not sour. Zumpuses are jompuses. Jompuses are not luminous. Jompuses are yumpuses. Each yumpus is not dull. Every yumpus is a numpus. Each numpus is not opaque. Every numpus is a vumpus. Stella is a dumpus.",
    "question": "Is the following statement true or false? Stella is sour.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nDumpus(x) ::: x is a dumpus\nLarge(x) ::: x is large\nWumpus(x) ::: x is a wumpus\nCold(x) ::: x is cold\nTumpus(x) ::: x is a tumpus\nImpus(x) ::: x is an impus\nSour(x) ::: x is sour\nFruity(x) ::: x is fruity\nRompus(x) ::: x is a rompus\nNervous(x) ::: x is nervous\nZumpus(x) ::: x is a zumpus\nSour(x) ::: x is sour\nJompus(x) ::: x is a jompus\nLuminous(x) ::: x is luminous\nYumpus(x) ::: x is a yumpus\nDull(x) ::: x is dull\nNumpus(x) ::: x is a numpus\nOpaque(x) ::: x is opaque\nVumpus(x) ::: x is a vumpus\nStella(x) ::: x is Stella\nPremises:\n∀x (Dumpus(x) → Large(x)) ::: Each dumpus is large.\n∀x (Dumpus(x) → Wumpus(x)) ::: Every dumpus is a wumpus.\n∀x (Wumpus(x) → Cold(x)) ::: Wumpuses are cold.\n∀x (Wumpus(x) → Tumpus(x)) ::: Every wumpus is a tumpus.\n∀x (Impus(x) → Sour(x)) ::: Impuses are sour.\n∀x (Tumpus(x) → Fruity(x)) ::: Tumpuses are fruity.\n∀x (Tumpus(x) → Rompus(x)) ::: Every tumpus is a rompus.\n∀x (Rompus(x) → ¬Nervous(x)) ::: Every rompus is not nervous.\n∀x (Rompus(x) → Zumpus(x)) ::: Every rompus is a zumpus.\n∀x (Zumpus(x) → ¬Sour(x)) ::: Zumpuses are not sour.\n∀x (Zumpus(x) → Jompus(x)) ::: Zumpuses are jompuses.\n∀x (Jompus(x) → ¬Luminous(x)) ::: Jompuses are not luminous.\n∀x (Jompus(x) → Yumpus(x)) ::: Jompuses are yumpuses.\n∀x (Yumpus(x) → ¬Dull(x)) ::: Each yumpus is not dull.\n∀x (Yumpus(x) → Numpus(x)) ::: Every yumpus is a numpus.\n∀x (Numpus(x) → ¬Opaque(x)) ::: Each numpus is not opaque.\n∀x (Numpus(x) → Vumpus(x)) ::: Every numpus is a vumpus.\nDumpus(stella) ::: Stella is a dumpus.\nConclusion:\nSour(stella) ::: Stella is sour.\n------"
    ]
  },
  {
    "id": "ProntoQA_141",
    "context": "Every jompus is transparent. Every jompus is a wumpus. Wumpuses are red. Wumpuses are yumpuses. Zumpuses are bright. Yumpuses are shy. Every yumpus is a tumpus. Tumpuses are kind. Each tumpus is a numpus. Numpuses are not bright. Numpuses are impuses. Every impus is sweet. Impuses are dumpuses. Each dumpus is earthy. Each dumpus is a vumpus. Vumpuses are hot. Vumpuses are rompuses. Alex is a jompus.",
    "question": "Is the following statement true or false? Alex is bright.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nJompus(x) ::: x is a jompus\nTransparent(x) ::: x is transparent\nWumpus(x) ::: x is a wumpus\nRed(x) ::: x is red\nYumpus(x) ::: x is a yumpus\nShy(x) ::: x is shy\nTumpus(x) ::: x is a tumpus\nKind(x) ::: x is kind\nNumpus(x) ::: x is a numpus\nBright(x) ::: x is bright\nImpus(x) ::: x is an impus\nSweet(x) ::: x is sweet\nDumpus(x) ::: x is a dumpus\nEarthy(x) ::: x is earthy\nVumpus(x) ::: x is a vumpus\nHot(x) ::: x is hot\nRompus(x) ::: x is a rompus\nPremises:\n∀x (Jompus(x) → Transparent(x)) ::: Every jompus is transparent.\n∀x (Jompus(x) → Wumpus(x)) ::: Every jompus is a wumpus.\n∀x (Wumpus(x) → Red(x)) ::: Wumpuses are red.\n∀x (Wumpus(x) → Yumpus(x)) ::: Wumpuses are yumpuses.\n∀x (Zumpus(x) → Bright(x)) ::: Zumpuses are bright.\n∀x (Yumpus(x) → Shy(x)) ::: Yumpuses are shy.\n∀x (Yumpus(x) → Tumpus(x)) ::: Every yumpus is a tumpus.\n∀x (Tumpus(x) → Kind(x)) ::: Tumpuses are kind.\n∀x (Tumpus(x) → Numpus(x)) ::: Each tumpus is a numpus.\n∀x (Numpus(x) → ¬Bright(x)) ::: Numpuses are not bright.\n∀x (Numpus(x) → Impus(x)) ::: Numpuses are impuses.\n∀x (Impus(x) → Sweet(x)) ::: Every impus is sweet.\n∀x (Impus(x) → Dumpus(x)) ::: Impuses are dumpuses.\n∀x (Dumpus(x) → Earthy(x)) ::: Each dumpus is earthy.\n∀x (Dumpus(x) → Vumpus(x)) ::: Each dumpus is a vumpus.\n∀x (Vumpus(x) → Hot(x)) ::: Vumpuses are hot.\n∀x (Vumpus(x) → Rompus(x)) ::: Vumpuses are rompuses.\nJompus(alex) ::: Alex is a jompus.\nConclusion:\nBright(alex) ::: Alex is bright.\n------"
    ]
  },
  {
    "id": "ProntoQA_142",
    "context": "Every zumpus is metallic. Each zumpus is a wumpus. Wumpuses are not floral. Every wumpus is a numpus. Numpuses are happy. Each numpus is an impus. Impuses are kind. Every impus is a rompus. Every rompus is large. Vumpuses are opaque. Each rompus is a jompus. Each jompus is cold. Jompuses are dumpuses. Each dumpus is not opaque. Dumpuses are yumpuses. Yumpuses are spicy. Each yumpus is a tumpus. Stella is a numpus.",
    "question": "Is the following statement true or false? Stella is opaque.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nZumpus(x) ::: x is a zumpus\nMetallic(x) ::: x is metallic\nWumpus(x) ::: x is a wumpus\nFloral(x) ::: x is floral\nNumpus(x) ::: x is a numpus\nHappy(x) ::: x is happy\nImpus(x) ::: x is an impus\nKind(x) ::: x is kind\nRompus(x) ::: x is a rompus\nLarge(x) ::: x is large\nOpaque(x) ::: x is opaque\nJompus(x) ::: x is a jompus\nCold(x) ::: x is cold\nDumpus(x) ::: x is a dumpus\nYumpus(x) ::: x is a yumpus\nSpicy(x) ::: x is spicy\nTumpus(x) ::: x is a tumpus\nStella(x) ::: x is Stella\nPremises:\n∀x (Zumpus(x) → Metallic(x)) ::: Every zumpus is metallic.\n∀x (Zumpus(x) → Wumpus(x)) ::: Each zumpus is a wumpus.\n∀x (Wumpus(x) → ¬Floral(x)) ::: Wumpuses are not floral.\n∀x (Wumpus(x) → Numpus(x)) ::: Every wumpus is a numpus.\n∀x (Numpus(x) → Happy(x)) ::: Numpuses are happy.\n∀x (Numpus(x) → Impus(x)) ::: Each numpus is an impus.\n∀x (Impus(x) → Kind(x)) ::: Impuses are kind.\n∀x (Impus(x) → Rompus(x)) ::: Every impus is a rompus.\n∀x (Rompus(x) → Large(x)) ::: Every rompus is large.\n∀x (Rompus(x) → Opaque(x)) ::: Vumpuses are opaque.\n∀x (Rompus(x) → Jompus(x)) ::: Each rompus is a jompus.\n∀x (Jompus(x) → Cold(x)) ::: Each jompus is cold.\n∀x (Jompus(x) → Dumpus(x)) ::: Jompuses are dumpuses.\n∀x (Dumpus(x) → ¬Opaque(x)) ::: Each dumpus is not opaque.\n∀x (Dumpus(x) → Yumpus(x)) ::: Dumpuses are yumpuses.\n∀x (Yumpus(x) → Spicy(x)) ::: Yumpuses are spicy.\n∀x (Yumpus(x) → Tumpus(x)) ::: Each yumpus is a tumpus.\nNumpus(Stella) ::: Stella is a numpus.\nConclusion:\nOpaque(Stella) ::: Stella is opaque.\n------"
    ]
  },
  {
    "id": "ProntoQA_143",
    "context": "Every rompus is not brown. Rompuses are numpuses. Every numpus is mean. Numpuses are jompuses. Jompuses are fruity. Jompuses are vumpuses. Each vumpus is not feisty. Each vumpus is a wumpus. Yumpuses are transparent. Wumpuses are liquid. Wumpuses are zumpuses. Zumpuses are not small. Zumpuses are impuses. Impuses are temperate. Impuses are dumpuses. Dumpuses are not transparent. Dumpuses are tumpuses. Max is a vumpus.",
    "question": "Is the following statement true or false? Max is transparent.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nRompus(x) ::: x is a rompus\nBrown(x) ::: x is brown\nNumpus(x) ::: x is a numpus\nMean(x) ::: x is mean\nJompus(x) ::: x is a jompus\nFruity(x) ::: x is fruity\nVumpus(x) ::: x is a vumpus\nFeisty(x) ::: x is feisty\nWumpus(x) ::: x is a wumpus\nYumpus(x) ::: x is a yumpus\nTransparent(x) ::: x is transparent\nLiquid(x) ::: x is liquid\nZumpus(x) ::: x is a zumpus\nSmall(x) ::: x is small\nImpus(x) ::: x is an impus\nTemperate(x) ::: x is temperate\nDumpus(x) ::: x is a dumpus\nTransparent(x) ::: x is transparent\nTumpus(x) ::: x is a tumpus\nPremises:\n∀x (Rompus(x) → ¬Brown(x)) ::: Every rompus is not brown.\n∀x (Numpus(x) → Mean(x)) ::: Numpuses are mean.\n∀x (Jompus(x) → Fruity(x)) ::: Jompuses are fruity.\n∀x (Jompus(x) → Vumpus(x)) ::: Jompuses are vumpuses.\n∀x (Vumpus(x) → ¬Feisty(x)) ::: Each vumpus is not feisty.\n∀x (Vumpus(x) → Wumpus(x)) ::: Each vumpus is a wumpus.\n∀x (Yumpus(x) → Transparent(x)) ::: Yumpuses are transparent.\n∀x (Wumpus(x) → Liquid(x)) ::: Wumpuses are liquid.\n∀x (Wumpus(x) → Zumpus(x)) ::: Wumpuses are zumpuses.\n∀x (Zumpus(x) → ¬Small(x)) ::: Zumpuses are not small.\n∀x (Zumpus(x) → Impus(x)) ::: Zumpuses are impuses.\n∀x (Impus(x) → Temperate(x)) ::: Impuses are temperate.\n∀x (Impus(x) → Dumpus(x)) ::: Impuses are dumpuses.\n∀x (Dumpus(x) → ¬Transparent(x)) ::: Dumpuses are not transparent.\n∀x (Dumpus(x) → Tumpus(x)) ::: Dumpuses are tumpuses.\nVumpus(max) ::: Max is a vumpus.\nConclusion:\nTransparent(max) ::: Max is transparent.\n------"
    ]
  },
  {
    "id": "ProntoQA_144",
    "context": "Each impus is not large. Jompuses are fruity. Every jompus is a tumpus. Tumpuses are bitter. Tumpuses are numpuses. Every numpus is nervous. Every numpus is a vumpus. Vumpuses are not angry. Every vumpus is a dumpus. Dumpuses are large. Every dumpus is a wumpus. Wumpuses are not transparent. Every wumpus is a rompus. Each rompus is not dull. Rompuses are zumpuses. Zumpuses are wooden. Each zumpus is a yumpus. Wren is a jompus.",
    "question": "Is the following statement true or false? Wren is not large.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nImpus(x) ::: x is an impus\nLarge(x) ::: x is large\nFruity(x) ::: x is fruity\nJompus(x) ::: x is a jompus\nTumpus(x) ::: x is a tumpus\nBitter(x) ::: x is bitter\nNumpus(x) ::: x is a numpus\nNervous(x) ::: x is nervous\nVumpus(x) ::: x is a vumpus\nAngry(x) ::: x is angry\nDumpus(x) ::: x is a dumpus\nWumpus(x) ::: x is a wumpus\nTransparent(x) ::: x is transparent\nRompus(x) ::: x is a rompus\nDull(x) ::: x is dull\nZumpus(x) ::: x is a zumpus\nWooden(x) ::: x is wooden\nYumpus(x) ::: x is a yumpus\nPremises:\n∀x (Impus(x) → ¬Large(x)) ::: Each impus is not large.\n∀x (Jompus(x) → Fruity(x)) ::: Jompuses are fruity.\n∀x (Jompus(x) → Tumpus(x)) ::: Every jompus is a tumpus.\n∀x (Tumpus(x) → Bitter(x)) ::: Tumpuses are bitter.\n∀x (Tumpus(x) → Numpus(x)) ::: Tumpuses are numpuses.\n∀x (Numpus(x) → Nervous(x)) ::: Every numpus is nervous.\n∀x (Numpus(x) → Vumpus(x)) ::: Every numpus is a vumpus.\n∀x (Vumpus(x) → ¬Angry(x)) ::: Vumpuses are not angry.\n∀x (Vumpus(x) → Dumpus(x)) ::: Every vumpus is a dumpus.\n∀x (Dumpus(x) → Large(x)) ::: Dumpuses are large.\n∀x (Dumpus(x) → Wumpus(x)) ::: Every dumpus is a wumpus.\n∀x (Wumpus(x) → ¬Transparent(x)) ::: Wumpuses are not transparent.\n∀x (Wumpus(x) → Rompus(x)) ::: Every wumpus is a rompus.\n∀x (Rompus(x) → ¬Dull(x)) ::: Each rompus is not dull.\n∀x (Rompus(x) → Zumpus(x)) ::: Rompuses are zumpuses.\n∀x (Zumpus(x) → Wooden(x)) ::: Zumpuses are wooden.\n∀x (Zumpus(x) → Yumpus(x)) ::: Each zumpus is a yumpus.\nJompus(wren) ::: Wren is a jompus.\nConclusion:\n¬Large(wren) ::: Wren is not large.\n------"
    ]
  },
  {
    "id": "ProntoQA_145",
    "context": "Every wumpus is cold. Each wumpus is a numpus. Each numpus is large. Numpuses are dumpuses. Every dumpus is not orange. Each dumpus is a yumpus. Each yumpus is not earthy. Every yumpus is a tumpus. Every tumpus is kind. Tumpuses are impuses. Every impus is bright. Impuses are rompuses. Rompuses are luminous. Rompuses are zumpuses. Every zumpus is sour. Every jompus is not luminous. Each zumpus is a vumpus. Stella is a dumpus.",
    "question": "Is the following statement true or false? Stella is luminous.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nWumpus(x) ::: x is a wumpus\nCold(x) ::: x is cold\nNumpus(x) ::: x is a numpus\nLarge(x) ::: x is large\nDumpus(x) ::: x is a dumpus\nOrange(x) ::: x is orange\nYumpus(x) ::: x is a yumpus\nEarthy(x) ::: x is earthy\nTumpus(x) ::: x is a tumpus\nKind(x) ::: x is kind\nImpus(x) ::: x is an impus\nBright(x) ::: x is bright\nRompus(x) ::: x is a rompus\nLuminous(x) ::: x is luminous\nZumpus(x) ::: x is a zumpus\nSour(x) ::: x is sour\nJompus(x) ::: x is a jompus\nPremises:\n∀x (Wumpus(x) → Cold(x)) ::: Every wumpus is cold.\n∀x (Wumpus(x) → Numpus(x)) ::: Each wumpus is a numpus.\n∀x (Numpus(x) → Large(x)) ::: Numpuses are large.\n∀x (Dumpus(x) → ¬Orange(x)) ::: Every dumpus is not orange.\n∀x (Yumpus(x) → ¬Earthy(x)) ::: Each yumpus is not earthy.\n∀x (Yumpus(x) → Tumpus(x)) ::: Every yumpus is a tumpus.\n∀x (Tumpus(x) → Kind(x)) ::: Every tumpus is kind.\n∀x (Tumpus(x) → Impus(x)) ::: Tumpuses are impuses.\n∀x (Impus(x) → Bright(x)) ::: Impuses are bright.\n∀x (Rompus(x) → Luminous(x)) ::: Rompuses are luminous.\n∀x (Rompus(x) → Zumpus(x)) ::: Rompuses are zumpuses.\n∀x (Zumpus(x) → Sour(x)) ::: Every zumpus is sour.\n∀x (Jompus(x) → ¬Luminous(x)) ::: Every jompus is not luminous.\n∀x (Zumpus(x) → Dumpus(x)) ::: Each zumpus is a dumpus.\nDumpus(stella) ::: Stella is a dumpus.\nConclusion:\nLuminous(stella) ::: Stella is luminous.\n------"
    ]
  },
  {
    "id": "ProntoQA_146",
    "context": "Each wumpus is happy. Every wumpus is a jompus. Jompuses are earthy. Each jompus is a zumpus. Zumpuses are opaque. Zumpuses are impuses. Impuses are luminous. Every impus is a yumpus. Each yumpus is not angry. Each tumpus is not bright. Yumpuses are numpuses. Each numpus is brown. Numpuses are dumpuses. Each dumpus is bright. Each dumpus is a rompus. Every rompus is not large. Rompuses are vumpuses. Fae is a zumpus.",
    "question": "Is the following statement true or false? Fae is not bright.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "wumpus(x) ::: x is a wumpus\n###happy(x) ::: x is happy\n###jompus(x) ::: x is a jompus\n###earthy(x) ::: x is earthy\n###zumpus(x) ::: x is a zumpus\n###opaque(x) ::: x is opaque\n###impus(x) ::: x is an impus\n###luminous(x) ::: x is luminous\n###yumpus(x) ::: x is a yumpus\n###angry(x) ::: x is angry\n###tumpus(x) ::: x is a tumpus\n###bright(x) ::: x is bright\n###numpus(x) ::: x is a numpus\n###brown(x) ::: x is brown\n###dumpus(x) ::: x is a dumpus\n###rompus(x) ::: x is a rompus\n###large(x) ::: x is large\n###vumpus(x) ::: x is a vumpus\n###fae(x) ::: x is fae\nPremises:\n∀x (wumpus(x) → happy(x)) ::: Each wumpus is happy.\n∀x (wumpus(x) → jompus(x)) ::: Every wumpus is a jompus.\n∀x (jompus(x) → earthy(x)) ::: Jompuses are earthy.\n∀x (jompus(x) → zumpus(x)) ::: Each jompus is a zumpus.\n∀x (zumpus(x) → opaque(x)) ::: Zumpuses are opaque.\n∀x (zumpus(x) → impus(x)) ::: Zumpuses are impuses.\n∀x (impus(x) → luminous(x)) ::: Impuses are luminous.\n∀x (impus(x) → yumpus(x)) ::: Each impus is a yumpus.\n∀x (yumpus(x) → ¬angry(x)) ::: Each yumpus is not angry.\n∀x (tumpus(x) → ¬bright(x)) ::: Each tumpus is not bright.\n∀x (yumpus(x) → numpus(x)) ::: Yumpuses are numpuses.\n∀x (numpus(x) → brown(x)) ::: Each numpus is brown.\n∀x (numpus(x) → dumpus(x)) ::: Numpuses are dumpuses.\n∀x (dumpus(x) → bright(x)) ::: Each dumpus is bright.\n∀x (dumpus(x) → rompus(x)) ::: Each dumpus is a rompus.\n∀x (rompus(x) → ¬large(x)) ::: Every rompus is not large.\n∀x (rompus(x) → vumpus(x)) ::: Rompuses are vumpuses.\nZumpus(fae) ::: Fae is a zumpus.\nConclusion:\n¬bright(fae) ::: Fae is not bright.\n------"
    ]
  },
  {
    "id": "ProntoQA_147",
    "context": "Every rompus is opaque. Each rompus is a wumpus. Wumpuses are temperate. Wumpuses are vumpuses. Every vumpus is not bright. Vumpuses are numpuses. Every numpus is small. Numpuses are yumpuses. Every yumpus is not kind. Yumpuses are zumpuses. Every zumpus is red. Zumpuses are impuses. Every impus is not wooden. Every jompus is kind. Impuses are dumpuses. Each dumpus is not sour. Every dumpus is a tumpus. Polly is a rompus.",
    "question": "Is the following statement true or false? Polly is not kind.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nRompus(x) ::: x is a rompus\nOpaque(x) ::: x is opaque\nWumpus(x) ::: x is a wumpus\nTemperate(x) ::: x is temperate\nVumpus(x) ::: x is a vumpus\nBright(x) ::: x is bright\nNumpus(x) ::: x is a numpus\nSmall(x) ::: x is small\nYumpus(x) ::: x is a yumpus\nKind(x) ::: x is kind\nZumpus(x) ::: x is a zumpus\nRed(x) ::: x is red\nImpus(x) ::: x is an impus\nWooden(x) ::: x is wooden\nDumpus(x) ::: x is a dumpus\nSour(x) ::: x is sour\nTumpus(x) ::: x is a tumpus\nPremises:\n∀x (Rompus(x) → Opaque(x)) ::: Every rompus is opaque.\n∀x (Rompus(x) → Wumpus(x)) ::: Each rompus is a wumpus.\n∀x (Wumpus(x) → Temperate(x)) ::: Wumpuses are temperate.\n∀x (Wumpus(x) → Vumpus(x)) ::: Wumpuses are vumpuses.\n∀x (Vumpus(x) → ¬Bright(x)) ::: Every vumpus is not bright.\n∀x (Vumpus(x) → Numpus(x)) ::: Vumpuses are numpuses.\n∀x (Numpus(x) → Small(x)) ::: Every numpus is small.\n∀x (Numpus(x) → Yumpus(x)) ::: Numpuses are yumpuses.\n∀x (Yumpus(x) → ¬Kind(x)) ::: Every yumpus is not kind.\n∀x (Yumpus(x) → Zumpus(x)) ::: Yumpuses are zumpuses.\n∀x (Zumpus(x) → Red(x)) ::: Every zumpus is red.\n∀x (Zumpus(x) → Impus(x)) ::: Zumpuses are impuses.\n∀x (Impus(x) → ¬Wooden(x)) ::: Every impus is not wooden.\n∀x (Impus(x) → Dumpus(x)) ::: Every impus is a dumpus.\n∀x (Dumpus(x) → ¬Sour(x)) ::: Every dumpus is not sour.\n∀x (Dumpus(x) → Tumpus(x)) ::: Every dumpus is a tumpus.\nRompus(polly) ::: Polly is a rompus.\nConclusion:\n¬Kind(polly) ::: Polly is not kind.\n------"
    ]
  },
  {
    "id": "ProntoQA_148",
    "context": "Jompuses are not temperate. Jompuses are impuses. Each impus is not sour. Impuses are wumpuses. Every vumpus is dull. Wumpuses are mean. Wumpuses are yumpuses. Yumpuses are fruity. Every yumpus is a numpus. Numpuses are opaque. Each numpus is a dumpus. Dumpuses are feisty. Every dumpus is a rompus. Rompuses are metallic. Rompuses are zumpuses. Every zumpus is not dull. Zumpuses are tumpuses. Fae is a yumpus.",
    "question": "Is the following statement true or false? Fae is not dull.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nJompus(x) ::: x is a jompus\nTemperate(x) ::: x is temperate\nImpus(x) ::: x is an impus\nSour(x) ::: x is sour\nWumpus(x) ::: x is a wumpus\nVumpus(x) ::: x is a vumpus\nDull(x) ::: x is dull\nMean(x) ::: x is mean\nYumpus(x) ::: x is a yumpus\nFruity(x) ::: x is fruity\nNumpus(x) ::: x is a numpus\nOpaque(x) ::: x is opaque\nDumpus(x) ::: x is a dumpus\nFeisty(x) ::: x is feisty\nRompus(x) ::: x is a rompus\nMetallic(x) ::: x is metallic\nZumpus(x) ::: x is a zumpus\nTumpus(x) ::: x is a tumpus\nFae(x) ::: x is Fae\nPremises:\n∀x (Jompus(x) → ¬Temperate(x)) ::: Jompuses are not temperate.\n∀x (Jompus(x) → Impus(x)) ::: Jompuses are impuses.\n∀x (Impus(x) → ¬Sour(x)) ::: Each impus is not sour.\n∀x (Impus(x) → Wumpus(x)) ::: Impuses are wumpuses.\n∀x (Vumpus(x) → Dull(x)) ::: Every vumpus is dull.\n∀x (Wumpus(x) → Mean(x)) ::: Wumpuses are mean.\n∀x (Wumpus(x) → Yumpus(x)) ::: Wumpuses are yumpuses.\n∀x (Yumpus(x) → Fruity(x)) ::: Yumpuses are fruity.\n∀x (Yumpus(x) → Numpus(x)) ::: Every yumpus is a numpus.\n∀x (Numpus(x) → Opaque(x)) ::: Numpuses are opaque.\n∀x (Numpus(x) → Dumpus(x)) ::: Each numpus is a dumpus.\n∀x (Dumpus(x) → Feisty(x)) ::: Dumpuses are feisty.\n∀x (Dumpus(x) → Rompus(x)) ::: Every dumpus is a rompus.\n∀x (Rompus(x) → Metallic(x)) ::: Rompuses are metallic.\n∀x (Rompus(x) → Zumpus(x)) ::: Rompuses are zumpuses.\n∀x (Zumpus(x) → ¬Dull(x)) ::: Every zumpus is not dull.\n∀x (Zumpus(x) → Tumpus(x)) ::: Zumpuses are tumpuses.\nYumpus(fae) ::: Fae is a yumpus.\nConclusion:\n¬Dull(fae) ::: Fae is not dull.\n------"
    ]
  },
  {
    "id": "ProntoQA_149",
    "context": "Tumpuses are shy. Each tumpus is a jompus. Dumpuses are not transparent. Every jompus is bright. Every jompus is a zumpus. Zumpuses are large. Each zumpus is an impus. Every impus is liquid. Every impus is a wumpus. Wumpuses are brown. Each wumpus is a vumpus. Vumpuses are not bitter. Each vumpus is a rompus. Rompuses are transparent. Every rompus is a numpus. Numpuses are cold. Every numpus is a yumpus. Stella is a zumpus.",
    "question": "Is the following statement true or false? Stella is transparent.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nTumpus(x) ::: x is a tumpus\nShy(x) ::: x is shy\nJompus(x) ::: x is a jompus\nDumpus(x) ::: x is a dumpus\nTransparent(x) ::: x is transparent\nBright(x) ::: x is bright\nZumpus(x) ::: x is a zumpus\nLarge(x) ::: x is large\nImpus(x) ::: x is an impus\nLiquid(x) ::: x is liquid\nWumpus(x) ::: x is a wumpus\nBrown(x) ::: x is brown\nVumpus(x) ::: x is a vumpus\nRompus(x) ::: x is a rompus\nTransparent(x) ::: x is transparent\nNumpus(x) ::: x is a numpus\nCold(x) ::: x is cold\nYumpus(x) ::: x is a yumpus\nPremises:\n∀x (Tumpus(x) → Shy(x)) ::: Tumpuses are shy.\n∀x (Tumpus(x) → Jompus(x)) ::: Each tumpus is a jompus.\n∀x (Dumpus(x) → ¬Transparent(x)) ::: Dumpuses are not transparent.\n∀x (Jompus(x) → Bright(x)) ::: Every jompus is bright.\n∀x (Jompus(x) → Zumpus(x)) ::: Every jompus is a zumpus.\n∀x (Zumpus(x) → Large(x)) ::: Zumpuses are large.\n∀x (Zumpus(x) → Impus(x)) ::: Each zumpus is an impus.\n∀x (Impus(x) → Liquid(x)) ::: Every impus is liquid.\n∀x (Impus(x) → Wumpus(x)) ::: Every impus is a wumpus.\n∀x (Wumpus(x) → Brown(x)) ::: Wumpuses are brown.\n∀x (Wumpus(x) → Vumpus(x)) ::: Each wumpus is a vumpus.\n∀x (Vumpus(x) → ¬Bitter(x)) ::: Vumpuses are not bitter.\n∀x (Vumpus(x) → Rompus(x)) ::: Each vumpus is a rompus.\n∀x (Rompus(x) → Transparent(x)) ::: Rompuses are transparent.\n∀x (Rompus(x) → Numpus(x)) ::: Every rompus is a numpus.\n∀x (Numpus(x) → Cold(x)) ::: Numpuses are cold.\n∀x (Numpus(x) → Yumpus(x)) ::: Every numpus is a yumpus.\nZumpus(stella) ::: Stella is a zumpus.\nConclusion:\nTransparent(stella) ::: Stella is transparent.\n------"
    ]
  },
  {
    "id": "ProntoQA_150",
    "context": "Each impus is transparent. Impuses are jompuses. Each jompus is spicy. Jompuses are wumpuses. Wumpuses are orange. Every rompus is not small. Wumpuses are yumpuses. Each yumpus is not earthy. Yumpuses are zumpuses. Zumpuses are amenable. Every zumpus is a dumpus. Dumpuses are small. Every dumpus is a tumpus. Tumpuses are not feisty. Each tumpus is a vumpus. Vumpuses are not dull. Each vumpus is a numpus. Alex is a jompus.",
    "question": "Is the following statement true or false? Alex is small.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nImpus(x) ::: x is an impus\nTransparent(x) ::: x is transparent\nJompus(x) ::: x is a jompus\nSpicy(x) ::: x is spicy\nWumpus(x) ::: x is a wumpus\nOrange(x) ::: x is orange\nRompus(x) ::: x is a rompus\nSmall(x) ::: x is small\nYumpus(x) ::: x is a yumpus\nEarthy(x) ::: x is earthy\nZumpus(x) ::: x is a zumpus\nAmenable(x) ::: x is amenable\nDumpus(x) ::: x is a dumpus\nSmall(x) ::: x is small\nTumpus(x) ::: x is a tumpus\nFeisty(x) ::: x is feisty\nVumpus(x) ::: x is a vumpus\nDull(x) ::: x is dull\nNumpus(x) ::: x is a numpus\nPremises:\n∀x (Impus(x) → Transparent(x)) ::: Each impus is transparent.\n∀x (Impus(x) → Jompus(x)) ::: Impuses are jompuses.\n∀x (Jompus(x) → Spicy(x)) ::: Each jompus is spicy.\n∀x (Jompus(x) → Wumpus(x)) ::: Jompuses are wumpuses.\n∀x (Wumpus(x) → Orange(x)) ::: Wumpuses are orange.\n∀x (Rompus(x) → ¬Small(x)) ::: Every rompus is not small.\n∀x (Yumpus(x) → ¬Earthy(x)) ::: Yumpuses are not earthy.\n∀x (Yumpus(x) → Zumpus(x)) ::: Yumpuses are zumpuses.\n∀x (Zumpus(x) → Amenable(x)) ::: Zumpuses are amenable.\n∀x (Zumpus(x) → Dumpus(x)) ::: Every zumpus is a dumpus.\n∀x (Dumpus(x) → Small(x)) ::: Dumpuses are small.\n∀x (Tumpus(x) → ¬Feisty(x)) ::: Each tumpus is not feisty.\n∀x (Tumpus(x) → Vumpus(x)) ::: Each tumpus is a vumpus.\n∀x (Vumpus(x) → ¬Dull(x)) ::: Vumpuses are not dull.\n∀x (Vumpus(x) → Numpus(x)) ::: Vumpuses are numpuses.\nJompus(alex) ::: Alex is a jompus.\nConclusion:\nSmall(alex) ::: Alex is small.\n------"
    ]
  },
  {
    "id": "ProntoQA_151",
    "context": "Each zumpus is sour. Each zumpus is a dumpus. Every dumpus is temperate. Dumpuses are numpuses. Each rompus is shy. Every numpus is not wooden. Each numpus is a wumpus. Wumpuses are amenable. Wumpuses are vumpuses. Each vumpus is not shy. Vumpuses are jompuses. Every jompus is dull. Jompuses are yumpuses. Each yumpus is small. Yumpuses are tumpuses. Every tumpus is brown. Each tumpus is an impus. Sally is a zumpus.",
    "question": "Is the following statement true or false? Sally is shy.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nZumpus(x) ::: x is a zumpus\nSour(x) ::: x is sour\nDumpus(x) ::: x is a dumpus\nTemperate(x) ::: x is temperate\nNumpus(x) ::: x is a numpus\nShy(x) ::: x is shy\nWooden(x) ::: x is wooden\nWumpus(x) ::: x is a wumpus\nAmenable(x) ::: x is amenable\nVumpus(x) ::: x is a vumpus\nShy(x) ::: x is shy\nJompus(x) ::: x is a jompus\nDull(x) ::: x is dull\nYumpus(x) ::: x is a yumpus\nSmall(x) ::: x is small\nTumpus(x) ::: x is a tumpus\nBrown(x) ::: x is brown\nImpus(x) ::: x is an impus\nPremises:\n∀x (Zumpus(x) → Sour(x)) ::: Each zumpus is sour.\n∀x (Zumpus(x) → Dumpus(x)) ::: Each zumpus is a dumpus.\n∀x (Dumpus(x) → Temperate(x)) ::: Every dumpus is temperate.\n∀x (Dumpus(x) → Numpus(x)) ::: Dumpuses are numpuses.\n∀x (Rompus(x) → Shy(x)) ::: Each rompus is shy.\n∀x (Numpus(x) → ¬Wooden(x)) ::: Every numpus is not wooden.\n∀x (Numpus(x) → Wumpus(x)) ::: Each numpus is a wumpus.\n∀x (Wumpus(x) → Amenable(x)) ::: Wumpuses are amenable.\n∀x (Wumpus(x) → Vumpus(x)) ::: Wumpuses are vumpuses.\n∀x (Vumpus(x) → ¬Shy(x)) ::: Each vumpus is not shy.\n∀x (Vumpus(x) → Jompus(x)) ::: Vumpuses are jompuses.\n∀x (Jompus(x) → Dull(x)) ::: Every jompus is dull.\n∀x (Jompus(x) → Yumpus(x)) ::: Jompuses are yumpuses.\n∀x (Yumpus(x) → Small(x)) ::: Each yumpus is small.\n∀x (Yumpus(x) → Tumpus(x)) ::: Yumpuses are tumpuses.\n∀x (Tumpus(x) → Brown(x)) ::: Every tumpus is brown.\n∀x (Tumpus(x) → Impus(x)) ::: Each tumpus is an impus.\nZumpus(sally) ::: Sally is a zumpus.\nConclusion:\nShy(sally) ::: Sally is shy.\n------"
    ]
  },
  {
    "id": "ProntoQA_152",
    "context": "Every jompus is bright. Every jompus is a vumpus. Vumpuses are floral. Every vumpus is a yumpus. Every yumpus is not temperate. Each yumpus is a numpus. Every numpus is sweet. Each numpus is a zumpus. Zumpuses are mean. Zumpuses are rompuses. Each rompus is not feisty. Every impus is not transparent. Each rompus is a wumpus. Wumpuses are transparent. Each wumpus is a dumpus. Dumpuses are large. Each dumpus is a tumpus. Wren is a yumpus.",
    "question": "Is the following statement true or false? Wren is transparent.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nJompus(x) ::: x is a jompus\nBright(x) ::: x is bright\nVumpus(x) ::: x is a vumpus\nFloral(x) ::: x is floral\nYumpus(x) ::: x is a yumpus\nTemperate(x) ::: x is temperate\nNumpus(x) ::: x is a numpus\nSweet(x) ::: x is sweet\nZumpus(x) ::: x is a zumpus\nMean(x) ::: x is mean\nRompus(x) ::: x is a rompus\nFeisty(x) ::: x is feisty\nImpus(x) ::: x is an impus\nTransparent(x) ::: x is transparent\nWumpus(x) ::: x is a wumpus\nDumpus(x) ::: x is a dumpus\nLarge(x) ::: x is large\nTumpus(x) ::: x is a tumpus\nWren(x) ::: x is Wren\nPremises:\n∀x (Jompus(x) → Bright(x)) ::: Every jompus is bright.\n∀x (Jompus(x) → Vumpus(x)) ::: Every jompus is a vumpus.\n∀x (Vumpus(x) → Floral(x)) ::: Vumpuses are floral.\n∀x (Vumpus(x) → Yumpus(x)) ::: Every vumpus is a yumpus.\n∀x (Yumpus(x) → ¬Temperate(x)) ::: Every yumpus is not temperate.\n∀x (Yumpus(x) → Numpus(x)) ::: Each yumpus is a numpus.\n∀x (Numpus(x) → Sweet(x)) ::: Every numpus is sweet.\n∀x (Numpus(x) → Zumpus(x)) ::: Each numpus is a zumpus.\n∀x (Zumpus(x) → Mean(x)) ::: Zumpuses are mean.\n∀x (Zumpus(x) → Rompus(x)) ::: Zumpuses are rompuses.\n∀x (Rompus(x) → ¬Feisty(x)) ::: Each rompus is not feisty.\n∀x (Impus(x) → ¬Transparent(x)) ::: Every impus is not transparent.\n∀x (Rompus(x) → Wumpus(x)) ::: Each rompus is a wumpus.\n∀x (Wumpus(x) → Transparent(x)) ::: Wumpuses are transparent.\n∀x (Wumpus(x) → Dumpus(x)) ::: Each wumpus is a dumpus.\n∀x (Dumpus(x) → Large(x)) ::: Dumpuses are large.\n∀x (Dumpus(x) → Tumpus(x)) ::: Each dumpus is a tumpus.\nYumpus(wren) ::: Wren is a yumpus.\nConclusion:\nTransparent(wren) ::: Wren is transparent.\n------"
    ]
  },
  {
    "id": "ProntoQA_153",
    "context": "Each jompus is brown. Yumpuses are dull. Every jompus is a wumpus. Wumpuses are hot. Every wumpus is a dumpus. Each dumpus is not luminous. Each dumpus is a rompus. Every rompus is sweet. Every rompus is a numpus. Each numpus is not dull. Numpuses are zumpuses. Zumpuses are not floral. Zumpuses are impuses. Sally is a jompus.",
    "question": "Is the following statement true or false? Sally is not dull.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nJompus(x) ::: x is a jompus\nBrown(x) ::: x is brown\nYumpus(x) ::: x is a yumpus\nDull(x) ::: x is dull\nWumpus(x) ::: x is a wumpus\nHot(x) ::: x is hot\nDumpus(x) ::: x is a dumpus\nLuminous(x) ::: x is luminous\nRompus(x) ::: x is a rompus\nSweet(x) ::: x is sweet\nNumpus(x) ::: x is a numpus\nDull(x) ::: x is dull\nZumpus(x) ::: x is a zumpus\nFloral(x) ::: x is floral\nImpus(x) ::: x is an impus\nPremises:\n∀x (Jompus(x) → Brown(x)) ::: Each jompus is brown.\n∀x (Yumpus(x) → Dull(x)) ::: Yumpuses are dull.\n∀x (Jompus(x) → Wumpus(x)) ::: Every jompus is a wumpus.\n∀x (Wumpus(x) → Hot(x)) ::: Wumpuses are hot.\n∀x (Dumpus(x) → ¬Luminous(x)) ::: Each dumpus is not luminous.\n∀x (Dumpus(x) → Rompus(x)) ::: Each dumpus is a rompus.\n∀x (Rompus(x) → Sweet(x)) ::: Every rompus is sweet.\n∀x (Rompus(x) → Numpus(x)) ::: Every rompus is a numpus.\n∀x (Numpus(x) → ¬Dull(x)) ::: Each numpus is not dull.\n∀x (Numpus(x) → Zumpus(x)) ::: Numpuses are zumpuses.\n∀x (Zumpus(x) → ¬Floral(x)) ::: Zumpuses are not floral.\n∀x (Zumpus(x) → Impus(x)) ::: Zumpuses are impuses.\nJompus(sally) ::: Sally is a jompus.\nConclusion:\n¬Dull(sally) ::: Sally is not dull.\n------"
    ]
  },
  {
    "id": "ProntoQA_154",
    "context": "Wumpuses are not opaque. Wumpuses are yumpuses. Yumpuses are fruity. Every yumpus is a jompus. Each jompus is kind. Each jompus is a zumpus. Each zumpus is sweet. Every rompus is brown. Each zumpus is an impus. Every impus is hot. Impuses are numpuses. Numpuses are not brown. Numpuses are dumpuses. Every dumpus is not bright. Dumpuses are vumpuses. Vumpuses are happy. Vumpuses are tumpuses. Sam is a yumpus.",
    "question": "Is the following statement true or false? Sam is not brown.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nWumpus(x) ::: x is a wumpus\nOpaque(x) ::: x is opaque\nYumpus(x) ::: x is a yumpus\nFruity(x) ::: x is fruity\nJompus(x) ::: x is a jompus\nKind(x) ::: x is kind\nZumpus(x) ::: x is a zumpus\nSweet(x) ::: x is sweet\nRompus(x) ::: x is a rompus\nBrown(x) ::: x is brown\nImpus(x) ::: x is an impus\nHot(x) ::: x is hot\nNumpus(x) ::: x is a numpus\nDumpus(x) ::: x is a dumpus\nBright(x) ::: x is bright\nVumpus(x) ::: x is a vumpus\nHappy(x) ::: x is happy\nTumpus(x) ::: x is a tumpus\nPremises:\n∀x (Wumpus(x) → ¬Opaque(x)) ::: Wumpuses are not opaque.\n∀x (Wumpus(x) → Yumpus(x)) ::: Wumpuses are yumpuses.\n∀x (Yumpus(x) → Fruity(x)) ::: Yumpuses are fruity.\n∀x (Yumpus(x) → Jompus(x)) ::: Every yumpus is a jompus.\n∀x (Jompus(x) → Kind(x)) ::: Each jompus is kind.\n∀x (Jompus(x) → Zumpus(x)) ::: Each jompus is a zumpus.\n∀x (Zumpus(x) → Sweet(x)) ::: Each zumpus is sweet.\n∀x (Rompus(x) → Brown(x)) ::: Every rompus is brown.\n∀x (Zumpus(x) → Impus(x)) ::: Each zumpus is an impus.\n∀x (Impus(x) → Hot(x)) ::: Every impus is hot.\n∀x (Impus(x) → Numpus(x)) ::: Impuses are numpuses.\n∀x (Numpus(x) → ¬Brown(x)) ::: Numpuses are not brown.\n∀x (Numpus(x) → Dumpus(x)) ::: Numpuses are dumpuses.\n∀x (Dumpus(x) → ¬Bright(x)) ::: Every dumpus is not bright.\n∀x (Dumpus(x) → Vumpus(x)) ::: Dumpuses are vumpuses.\n∀x (Vumpus(x) → Happy(x)) ::: Vumpuses are happy.\n∀x (Vumpus(x) → Tumpus(x)) ::: Vumpuses are tumpuses.\nYumpus(sam) ::: Sam is a yumpus.\nConclusion:\n¬Brown(sam) ::: Sam is not brown.\n------"
    ]
  },
  {
    "id": "ProntoQA_155",
    "context": "Rompuses are brown. Rompuses are wumpuses. Wumpuses are mean. Wumpuses are yumpuses. Every yumpus is liquid. Yumpuses are zumpuses. Every zumpus is hot. Every zumpus is an impus. Every impus is large. Impuses are vumpuses. Vumpuses are not bitter. Vumpuses are numpuses. Tumpuses are not large. Numpuses are dull. Numpuses are jompuses. Every jompus is shy. Every jompus is a dumpus. Sam is a rompus.",
    "question": "Is the following statement true or false? Sam is not large.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nRompus(x) ::: x is a rompus\nBrown(x) ::: x is brown\nWumpus(x) ::: x is a wumpus\nMean(x) ::: x is mean\nYumpus(x) ::: x is a yumpus\nLiquid(x) ::: x is liquid\nZumpus(x) ::: x is a zumpus\nHot(x) ::: x is hot\nImpus(x) ::: x is an impus\nLarge(x) ::: x is large\nVumpus(x) ::: x is a vumpus\nBitter(x) ::: x is bitter\nNumpus(x) ::: x is a numpus\nDull(x) ::: x is dull\nJompus(x) ::: x is a jompus\nShy(x) ::: x is shy\nDumpus(x) ::: x is a dumpus\nPremises:\n∀x (Rompus(x) → Brown(x)) ::: Rompuses are brown.\n∀x (Rompus(x) → Wumpus(x)) ::: Rompuses are wumpuses.\n∀x (Wumpus(x) → Mean(x)) ::: Wumpuses are mean.\n∀x (Yumpus(x) → Zumpus(x)) ::: Yumpuses are zumpuses.\n∀x (Zumpus(x) → Hot(x)) ::: Every zumpus is hot.\n∀x (Zumpus(x) → Impus(x)) ::: Every zumpus is an impus.\n∀x (Impus(x) → Large(x)) ::: Every impus is large.\n∀x (Impus(x) → Vumpus(x)) ::: Impuses are vumpuses.\n∀x (Vumpus(x) → ¬Bitter(x)) ::: Vumpuses are not bitter.\n∀x (Vumpus(x) → Numpus(x)) ::: Vumpuses are numpuses.\n∀x (Tumpus(x) → ¬Large(x)) ::: Tumpuses are not large.\n∀x (Numpus(x) → Dull(x)) ::: Numpuses are dull.\n∀x (Numpus(x) → Jompus(x)) ::: Numpuses are jompuses.\n∀x (Jompus(x) → Shy(x)) ::: Every jompus is shy.\n∀x (Jompus(x) → Dumpus(x)) ::: Every jompus is a dumpus.\nRompus(sam) ::: Sam is a rompus.\nConclusion:\n¬Large(sam) ::: Sam is not large.\n------"
    ]
  },
  {
    "id": "ProntoQA_156",
    "context": "Each impus is bright. Each impus is a rompus. Each rompus is not bitter. Each rompus is a yumpus. Each yumpus is not shy. Every yumpus is a wumpus. Wumpuses are red. Every wumpus is a jompus. Jompuses are transparent. Each jompus is a numpus. Each tumpus is small. Each numpus is not mean. Numpuses are dumpuses. Every dumpus is not small. Dumpuses are vumpuses. Vumpuses are hot. Each vumpus is a zumpus. Wren is a yumpus.",
    "question": "Is the following statement true or false? Wren is not small.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nImpus(x) ::: x is an impus\nBright(x) ::: x is bright\nRompus(x) ::: x is a rompus\nBitter(x) ::: x is bitter\nYumpus(x) ::: x is a yumpus\nShy(x) ::: x is shy\nWumpus(x) ::: x is a wumpus\nRed(x) ::: x is red\nJompus(x) ::: x is a jompus\nTransparent(x) ::: x is transparent\nNumpus(x) ::: x is a numpus\nSmall(x) ::: x is small\nMean(x) ::: x is mean\nDumpus(x) ::: x is a dumpus\nVumpus(x) ::: x is a vumpus\nHot(x) ::: x is hot\nZumpus(x) ::: x is a zumpus\nPremises:\n∀x (Impus(x) → Bright(x)) ::: Each impus is bright.\n∀x (Impus(x) → Rompus(x)) ::: Each impus is a rompus.\n∀x (Rompus(x) → ¬Bitter(x)) ::: Each rompus is not bitter.\n∀x (Rompus(x) → Yumpus(x)) ::: Each rompus is a yumpus.\n∀x (Yumpus(x) → ¬Shy(x)) ::: Each yumpus is not shy.\n∀x (Yumpus(x) → Wumpus(x)) ::: Every yumpus is a wumpus.\n∀x (Wumpus(x) → Red(x)) ::: Wumpuses are red.\n∀x (Wumpus(x) → Jompus(x)) ::: Every wumpus is a jompus.\n∀x (Jompus(x) → Transparent(x)) ::: Jompuses are transparent.\n∀x (Jompus(x) → Numpus(x)) ::: Each jompus is a numpus.\n∀x (Tumpus(x) → Small(x)) ::: Each tumpus is small.\n∀x (Numpus(x) → ¬Mean(x)) ::: Numpuses are not mean.\n∀x (Numpus(x) → Dumpus(x)) ::: Numpuses are dumpuses.\n∀x (Dumpus(x) → ¬Small(x)) ::: Every dumpus is not small.\n∀x (Dumpus(x) → Vumpus(x)) ::: Dumpuses are vumpuses.\n∀x (Vumpus(x) → Hot(x)) ::: Vumpuses are hot.\n∀x (Vumpus(x) → Zumpus(x)) ::: Each vumpus is a zumpus.\nYumpus(wren) ::: Wren is a yumpus.\nConclusion:\n¬Small(wren) ::: Wren is not small.\n------"
    ]
  },
  {
    "id": "ProntoQA_157",
    "context": "Numpuses are cold. Numpuses are zumpuses. Zumpuses are large. Every zumpus is a vumpus. Each vumpus is not bright. Vumpuses are yumpuses. Each jompus is not happy. Every yumpus is sweet. Yumpuses are wumpuses. Every wumpus is not red. Wumpuses are rompuses. Rompuses are not angry. Every rompus is an impus. Every impus is not opaque. Impuses are tumpuses. Every tumpus is happy. Tumpuses are dumpuses. Polly is a yumpus.",
    "question": "Is the following statement true or false? Polly is not happy.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nNumpus(x) ::: x is a numpus\nCold(x) ::: x is cold\nZumpus(x) ::: x is a zumpus\nLarge(x) ::: x is large\nVumpus(x) ::: x is a vumpus\nBright(x) ::: x is bright\nYumpus(x) ::: x is a yumpus\nHappy(x) ::: x is happy\nSweet(x) ::: x is sweet\nWumpus(x) ::: x is a wumpus\nRed(x) ::: x is red\nRompus(x) ::: x is a rompus\nAngry(x) ::: x is angry\nImpus(x) ::: x is an impus\nOpaque(x) ::: x is opaque\nTumpus(x) ::: x is a tumpus\nHappy(x) ::: x is happy\nDumpus(x) ::: x is a dumpus\nPremises:\n∀x (Numpus(x) → Cold(x)) ::: Numpuses are cold.\n∀x (Numpus(x) → Zumpus(x)) ::: Numpuses are zumpuses.\n∀x (Zumpus(x) → Large(x)) ::: Zumpuses are large.\n∀x (Vumpus(x) → ¬Bright(x)) ::: Every zumpus is a vumpus.\n∀x (Vumpus(x) → Yumpus(x)) ::: Each vumpus is a yumpus.\n∀x (Jompus(x) → ¬Happy(x)) ::: Every jompus is not happy.\n∀x (Yumpus(x) → Sweet(x)) ::: Yumpuses are sweet.\n∀x (Yumpus(x) → Wumpus(x)) ::: Yumpuses are wumpuses.\n∀x (Wumpus(x) → ¬Red(x)) ::: Every wumpus is not red.\n∀x (Wumpus(x) → Rompus(x)) ::: Wumpuses are rompuses.\n∀x (Rompus(x) → ¬Angry(x)) ::: Rompuses are not angry.\n∀x (Impus(x) → ¬Opaque(x)) ::: Every impus is not opaque.\n∀x (Impus(x) → Tumpus(x)) ::: Impuses are tumpuses.\n∀x (Tumpus(x) → Happy(x)) ::: Every tumpus is happy.\n∀x (Tumpus(x) → Dumpus(x)) ::: Tumpuses are dumpuses.\nYumpus(polly) ::: Polly is a yumpus.\nConclusion:\n¬Happy(polly) ::: Polly is not happy.\n------"
    ]
  },
  {
    "id": "ProntoQA_158",
    "context": "Yumpuses are not earthy. Yumpuses are wumpuses. Every wumpus is not feisty. Wumpuses are dumpuses. Every zumpus is not spicy. Dumpuses are hot. Each dumpus is a tumpus. Each tumpus is not brown. Each tumpus is a rompus. Rompuses are transparent. Rompuses are numpuses. Numpuses are amenable. Every numpus is an impus. Impuses are spicy. Every impus is a jompus. Jompuses are large. Jompuses are vumpuses. Sam is a dumpus.",
    "question": "Is the following statement true or false? Sam is not spicy.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nYumpus(x) ::: x is a yumpus\nEarthy(x) ::: x is earthy\nWumpus(x) ::: x is a wumpus\nFeisty(x) ::: x is feisty\nZumpus(x) ::: x is a zumpus\nSpicy(x) ::: x is spicy\nDumpus(x) ::: x is a dumpus\nHot(x) ::: x is hot\nTumpus(x) ::: x is a tumpus\nBrown(x) ::: x is brown\nRompus(x) ::: x is a rompus\nTransparent(x) ::: x is transparent\nNumpus(x) ::: x is a numpus\nAmenable(x) ::: x is amenable\nImpus(x) ::: x is an impus\nSpicy(x) ::: x is spicy\nJompus(x) ::: x is a jompus\nLarge(x) ::: x is large\nVumpus(x) ::: x is a vumpus\nPremises:\n∀x (Yumpus(x) → ¬Earthy(x)) ::: Yumpuses are not earthy.\n∀x (Yumpus(x) → Wumpus(x)) ::: Yumpuses are wumpuses.\n∀x (Wumpus(x) → ¬Feisty(x)) ::: Every wumpus is not feisty.\n∀x (Wumpus(x) → Dumpus(x)) ::: Wumpuses are dumpuses.\n∀x (Zumpus(x) → ¬Spicy(x)) ::: Every zumpus is not spicy.\n∀x (Dumpus(x) → Hot(x)) ::: Dumpuses are hot.\n∀x (Dumpus(x) → Tumpus(x)) ::: Each dumpus is a tumpus.\n∀x (Tumpus(x) → ¬Brown(x)) ::: Each tumpus is not brown.\n∀x (Tumpus(x) → Rompus(x)) ::: Each tumpus is a rompus.\n∀x (Rompus(x) → Transparent(x)) ::: Rompuses are transparent.\n∀x (Rompus(x) → Numpus(x)) ::: Rompuses are numpuses.\n∀x (Numpus(x) → Amenable(x)) ::: Numpuses are amenable.\n∀x (Numpus(x) → Impus(x)) ::: Every numpus is an impus.\n∀x (Impus(x) → Spicy(x)) ::: Impuses are spicy.\n∀x (Impus(x) → Jompus(x)) ::: Every impus is a jompus.\n∀x (Jompus(x) → Large(x)) ::: Jompuses are large.\n∀x (Jompus(x) → Vumpus(x)) ::: Jompuses are vumpuses.\nDumpus(sam) ::: Sam is a dumpus.\nConclusion:\n¬Spicy(sam) ::: Sam is not spicy.\n------"
    ]
  },
  {
    "id": "ProntoQA_159",
    "context": "Each impus is blue. Impuses are dumpuses. Each dumpus is liquid. Dumpuses are rompuses. Rompuses are not spicy. Rompuses are yumpuses. Each yumpus is feisty. Each yumpus is a numpus. Tumpuses are earthy. Each numpus is kind. Every numpus is a wumpus. Wumpuses are not earthy. Each wumpus is a vumpus. Each vumpus is dull. Each vumpus is a zumpus. Every zumpus is cold. Zumpuses are jompuses. Alex is a dumpus.",
    "question": "Is the following statement true or false? Alex is not earthy.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nImpus(x) ::: x is an impus\nBlue(x) ::: x is blue\nDumpus(x) ::: x is a dumpus\nLiquid(x) ::: x is liquid\nRompus(x) ::: x is a rompus\nSpicy(x) ::: x is spicy\nYumpus(x) ::: x is a yumpus\nFeisty(x) ::: x is feisty\nNumpus(x) ::: x is a numpus\nEarthy(x) ::: x is earthy\nKind(x) ::: x is kind\nWumpus(x) ::: x is a wumpus\nVumpus(x) ::: x is a vumpus\nDull(x) ::: x is dull\nZumpus(x) ::: x is a zumpus\nCold(x) ::: x is cold\nJompus(x) ::: x is a jompus\nPremises:\n∀x (Impus(x) → Blue(x)) ::: Each impus is blue.\n∀x (Impus(x) → Dumpus(x)) ::: Impuses are dumpuses.\n∀x (Dumpus(x) → Liquid(x)) ::: Each dumpus is liquid.\n∀x (Dumpus(x) → Rompus(x)) ::: Dumpuses are rompuses.\n∀x (Rompus(x) → ¬Spicy(x)) ::: Rompuses are not spicy.\n∀x (Rompus(x) → Yumpus(x)) ::: Rompuses are yumpuses.\n∀x (Yumpus(x) → Feisty(x)) ::: Each yumpus is feisty.\n∀x (Yumpus(x) → Numpus(x)) ::: Each yumpus is a numpus.\n∀x (Numpus(x) → Kind(x)) ::: Each numpus is kind.\n∀x (Numpus(x) → Wumpus(x)) ::: Every numpus is a wumpus.\n∀x (Wumpus(x) → ¬Earthy(x)) ::: Wumpuses are not earthy.\n∀x (Wumpus(x) → Vumpus(x)) ::: Each wumpus is a vumpus.\n∀x (Vumpus(x) → Dull(x)) ::: Each vumpus is dull.\n∀x (Vumpus(x) → Zumpus(x)) ::: Each vumpus is a zumpus.\n∀x (Zumpus(x) → Cold(x)) ::: Every zumpus is cold.\n∀x (Zumpus(x) → Jompus(x)) ::: Zumpuses are jompuses.\nDumpus(alex) ::: Alex is a dumpus.\nConclusion:\n¬Earthy(alex) ::: Alex is not earthy.\n------"
    ]
  },
  {
    "id": "ProntoQA_160",
    "context": "Each rompus is small. Every rompus is a numpus. Each numpus is dull. Numpuses are yumpuses. Yumpuses are earthy. Yumpuses are impuses. Each impus is sour. Every impus is a wumpus. Wumpuses are liquid. Wumpuses are tumpuses. Each tumpus is not brown. Every tumpus is a zumpus. Every zumpus is nervous. Dumpuses are not nervous. Every zumpus is a jompus. Jompuses are aggressive. Jompuses are vumpuses. Wren is a yumpus.",
    "question": "Is the following statement true or false? Wren is not nervous.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nRompus(x) ::: x is a rompus\nSmall(x) ::: x is small\nNumpus(x) ::: x is a numpus\nDull(x) ::: x is dull\nYumpus(x) ::: x is a yumpus\nEarthy(x) ::: x is earthy\nImpus(x) ::: x is an impus\nSour(x) ::: x is sour\nWumpus(x) ::: x is a wumpus\nLiquid(x) ::: x is liquid\nTumpus(x) ::: x is a tumpus\nBrown(x) ::: x is brown\nZumpus(x) ::: x is a zumpus\nNervous(x) ::: x is nervous\nDumpus(x) ::: x is a dumpus\nAggressive(x) ::: x is aggressive\nVumpus(x) ::: x is a vumpus\nPremises:\n∀x (Rompus(x) → Small(x)) ::: Each rompus is small.\n∀x (Numpus(x) → Dull(x)) ::: Every numpus is dull.\n∀x (Numpus(x) → Yumpus(x)) ::: Numpuses are yumpuses.\n∀x (Yumpus(x) → Earthy(x)) ::: Yumpuses are earthy.\n∀x (Yumpus(x) → Impus(x)) ::: Yumpuses are impuses.\n∀x (Impus(x) → Sour(x)) ::: Each impus is sour.\n∀x (Impus(x) → Wumpus(x)) ::: Every impus is a wumpus.\n∀x (Wumpus(x) → Liquid(x)) ::: Wumpuses are liquid.\n∀x (Wumpus(x) → Tumpus(x)) ::: Wumpuses are tumpuses.\n∀x (Tumpus(x) → ¬Brown(x)) ::: Every tumpus is not brown.\n∀x (Tumpus(x) → Zumpus(x)) ::: Every tumpus is a zumpus.\n∀x (Zumpus(x) → Nervous(x)) ::: Every zumpus is nervous.\n∀x (Dumpus(x) → ¬Nervous(x)) ::: Dumpuses are not nervous.\n∀x (Zumpus(x) → Jompus(x)) ::: Every zumpus is a jompus.\n∀x (Jompus(x) → Aggressive(x)) ::: Jompuses are aggressive.\n∀x (Jompus(x) → Vumpus(x)) ::: Jompuses are vumpuses.\nYumpus(wren) ::: Wren is a yumpus.\nConclusion:\n¬Nervous(wren) ::: Wren is not nervous.\n------"
    ]
  },
  {
    "id": "ProntoQA_161",
    "context": "Every wumpus is opaque. Yumpuses are not red. Every wumpus is a vumpus. Every vumpus is spicy. Vumpuses are tumpuses. Tumpuses are not cold. Tumpuses are dumpuses. Dumpuses are bright. Dumpuses are numpuses. Numpuses are nervous. Numpuses are rompuses. Every rompus is not large. Each rompus is a jompus. Jompuses are metallic. Jompuses are impuses. Impuses are red. Impuses are zumpuses. Max is a dumpus.",
    "question": "Is the following statement true or false? Max is red.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nWumpus(x) ::: x is a wumpus\nOpaque(x) ::: x is opaque\nYumpus(x) ::: x is a yumpus\nRed(x) ::: x is red\nVumpus(x) ::: x is a vumpus\nSpicy(x) ::: x is spicy\nTumpus(x) ::: x is a tumpus\nCold(x) ::: x is cold\nDumpus(x) ::: x is a dumpus\nBright(x) ::: x is bright\nNumpus(x) ::: x is a numpus\nNervous(x) ::: x is nervous\nRompus(x) ::: x is a rompus\nLarge(x) ::: x is large\nJompus(x) ::: x is a jompus\nMetallic(x) ::: x is metallic\nImpus(x) ::: x is an impus\nZumpus(x) ::: x is a zumpus\nPremises:\n∀x (Wumpus(x) → Opaque(x)) ::: Every wumpus is opaque.\n∀x (Yumpus(x) → ¬Red(x)) ::: Yumpuses are not red.\n∀x (Wumpus(x) → Vumpus(x)) ::: Every wumpus is a vumpus.\n∀x (Vumpus(x) → Spicy(x)) ::: Vumpuses are spicy.\n∀x (Vumpus(x) → Tumpus(x)) ::: Vumpuses are tumpuses.\n∀x (Tumpus(x) → ¬Cold(x)) ::: Tumpuses are not cold.\n∀x (Tumpus(x) → Dumpus(x)) ::: Tumpuses are dumpuses.\n∀x (Dumpus(x) → Bright(x)) ::: Dumpuses are bright.\n∀x (Dumpus(x) → Numpus(x)) ::: Dumpuses are numpuses.\n∀x (Numpus(x) → Nervous(x)) ::: Numpuses are nervous.\n∀x (Numpus(x) → Rompus(x)) ::: Numpuses are rompuses.\n∀x (Rompus(x) → ¬Large(x)) ::: Every rompus is not large.\n∀x (Rompus(x) → Jompus(x)) ::: Each rompus is a jompus.\n∀x (Jompus(x) → Metallic(x)) ::: Jompuses are metallic.\n∀x (Jompus(x) → Impus(x)) ::: Jompuses are impuses.\n∀x (Impus(x) → Red(x)) ::: Impuses are red.\n∀x (Impus(x) → Zumpus(x)) ::: Impuses are zumpuses.\nDumpus(max) ::: Max is a dumpus.\nConclusion:\nRed(max) ::: Max is red.\n------"
    ]
  },
  {
    "id": "ProntoQA_162",
    "context": "Dumpuses are not earthy. Each dumpus is a yumpus. Yumpuses are transparent. Each rompus is not mean. Yumpuses are vumpuses. Vumpuses are not brown. Vumpuses are numpuses. Numpuses are not temperate. Every numpus is a zumpus. Each zumpus is bitter. Zumpuses are tumpuses. Tumpuses are shy. Tumpuses are impuses. Impuses are wooden. Each impus is a wumpus. Each wumpus is mean. Every wumpus is a jompus. Wren is a numpus.",
    "question": "Is the following statement true or false? Wren is not mean.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nDumpus(x) ::: x is a dumpus\nEarthy(x) ::: x is earthy\nYumpus(x) ::: x is a yumpus\nTransparent(x) ::: x is transparent\nRompus(x) ::: x is a rompus\nMean(x) ::: x is mean\nVumpus(x) ::: x is a vumpus\nBrown(x) ::: x is brown\nNumpus(x) ::: x is a numpus\nTemperate(x) ::: x is temperate\nZumpus(x) ::: x is a zumpus\nBitter(x) ::: x is bitter\nTumpus(x) ::: x is a tumpus\nShy(x) ::: x is shy\nImpus(x) ::: x is an impus\nWooden(x) ::: x is wooden\nWumpus(x) ::: x is a wumpus\nMean(x) ::: x is mean\nJompus(x) ::: x is a jompus\nPremises:\n∀x (Dumpus(x) → ¬Earthy(x)) ::: Dumpuses are not earthy.\n∀x (Dumpus(x) → Yumpus(x)) ::: Each dumpus is a yumpus.\n∀x (Yumpus(x) → Transparent(x)) ::: Yumpuses are transparent.\n∀x (Rompus(x) → ¬Mean(x)) ::: Each rompus is not mean.\n∀x (Yumpus(x) → Vumpus(x)) ::: Yumpuses are vumpuses.\n∀x (Vumpus(x) → ¬Brown(x)) ::: Vumpuses are not brown.\n∀x (Vumpus(x) → Numpus(x)) ::: Vumpuses are numpuses.\n∀x (Numpus(x) → ¬Temperate(x)) ::: Numpuses are not temperate.\n∀x (Numpus(x) → Zumpus(x)) ::: Every numpus is a zumpus.\n∀x (Zumpus(x) → Bitter(x)) ::: Each zumpus is bitter.\n∀x (Zumpus(x) → Tumpus(x)) ::: Zumpuses are tumpuses.\n∀x (Tumpus(x) → Shy(x)) ::: Tumpuses are shy.\n∀x (Tumpus(x) → Impus(x)) ::: Tumpuses are impuses.\n∀x (Impus(x) → Wooden(x)) ::: Impuses are wooden.\n∀x (Impus(x) → Wumpus(x)) ::: Each impus is a wumpus.\n∀x (Wumpus(x) → Mean(x)) ::: Each wumpus is mean.\n∀x (Wumpus(x) → Jompus(x)) ::: Every wumpus is a jompus.\nNumpus(wren) ::: Wren is a numpus.\nConclusion:\n¬Mean(wren) ::: Wren is not mean.\n------"
    ]
  },
  {
    "id": "ProntoQA_163",
    "context": "Numpuses are dull. Numpuses are jompuses. Each jompus is not hot. Each jompus is a vumpus. Every vumpus is sour. Each vumpus is an impus. Impuses are not transparent. Impuses are dumpuses. Yumpuses are not metallic. Dumpuses are not blue. Dumpuses are wumpuses. Wumpuses are amenable. Wumpuses are tumpuses. Tumpuses are small. Tumpuses are zumpuses. Each zumpus is metallic. Each zumpus is a rompus. Stella is an impus.",
    "question": "Is the following statement true or false? Stella is metallic.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nNumpus(x) ::: x is a numpus\nDull(x) ::: x is dull\nJompus(x) ::: x is a jompus\nHot(x) ::: x is hot\nVumpus(x) ::: x is a vumpus\nSour(x) ::: x is sour\nImpus(x) ::: x is an impus\nTransparent(x) ::: x is transparent\nDumpus(x) ::: x is a dumpus\nBlue(x) ::: x is blue\nWumpus(x) ::: x is a wumpus\nAmenable(x) ::: x is amenable\nTumpus(x) ::: x is a tumpus\nSmall(x) ::: x is small\nZumpus(x) ::: x is a zumpus\nMetallic(x) ::: x is metallic\nRompus(x) ::: x is a rompus\nStella(x) ::: x is Stella\nPremises:\n∀x (Numpus(x) → Dull(x)) ::: Numpuses are dull.\n∀x (Numpus(x) → Jompus(x)) ::: Numpuses are jompuses.\n∀x (Jompus(x) → ¬Hot(x)) ::: Each jompus is not hot.\n∀x (Vumpus(x) → Sour(x)) ::: Each vumpus is sour.\n∀x (Vumpus(x) → Impus(x)) ::: Each vumpus is an impus.\n∀x (Impus(x) → ¬Transparent(x)) ::: Impuses are not transparent.\n∀x (Impus(x) → Dumpus(x)) ::: Impuses are dumpuses.\n∀x (Yumpus(x) → ¬Metallic(x)) ::: Yumpuses are not metallic.\n∀x (Dumpus(x) → ¬Blue(x)) ::: Dumpuses are not blue.\n∀x (Dumpus(x) → Wumpus(x)) ::: Dumpuses are wumpuses.\n∀x (Wumpus(x) → Amenable(x)) ::: Wumpuses are amenable.\n∀x (Wumpus(x) → Tumpus(x)) ::: Wumpuses are tumpuses.\n∀x (Tumpus(x) → Small(x)) ::: Tumpuses are small.\n∀x (Tumpus(x) → Zumpus(x)) ::: Tumpuses are zumpuses.\n∀x (Zumpus(x) → Metallic(x)) ::: Each zumpus is metallic.\n∀x (Zumpus(x) → Rompus(x)) ::: Each zumpus is a rompus.\nImpus(stella) ::: Stella is an impus.\nConclusion:\nMetallic(stella) ::: Stella is metallic.\n------"
    ]
  },
  {
    "id": "ProntoQA_164",
    "context": "Dumpuses are metallic. Every dumpus is a rompus. Every rompus is earthy. Every rompus is a wumpus. Every wumpus is aggressive. Wumpuses are yumpuses. Every yumpus is nervous. Yumpuses are zumpuses. Each zumpus is cold. Every tumpus is sweet. Zumpuses are vumpuses. Vumpuses are not sweet. Vumpuses are numpuses. Every numpus is dull. Every numpus is a jompus. Each jompus is small. Every jompus is an impus. Stella is a rompus.",
    "question": "Is the following statement true or false? Stella is not sweet.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nDumpus(x) ::: x is a dumpus\nMetallic(x) ::: x is metallic\nRompus(x) ::: x is a rompus\nEarthy(x) ::: x is earthy\nWumpus(x) ::: x is a wumpus\nAggressive(x) ::: x is aggressive\nYumpus(x) ::: x is a yumpus\nNervous(x) ::: x is nervous\nZumpus(x) ::: x is a zumpus\nCold(x) ::: x is cold\nTumpus(x) ::: x is a tumpus\nSweet(x) ::: x is sweet\nVumpus(x) ::: x is a vumpus\nNumpus(x) ::: x is a numpus\nDull(x) ::: x is dull\nJompus(x) ::: x is a jompus\nSmall(x) ::: x is small\nImpus(x) ::: x is an impus\nPremises:\n∀x (Dumpus(x) → Metallic(x)) ::: Dumpuses are metallic.\n∀x (Rompus(x) → Earthy(x)) ::: Every rompus is earthy.\n∀x (Rompus(x) → Wumpus(x)) ::: Every rompus is a wumpus.\n∀x (Wumpus(x) → Aggressive(x)) ::: Every wumpus is aggressive.\n∀x (Yumpus(x) → Nervous(x)) ::: Yumpuses are nervous.\n∀x (Yumpus(x) → Zumpus(x)) ::: Yumpuses are zumpuses.\n∀x (Zumpus(x) → Cold(x)) ::: Each zumpus is cold.\n∀x (Tumpus(x) → Sweet(x)) ::: Every tumpus is sweet.\n∀x (Zumpus(x) → Vumpus(x)) ::: Zumpuses are vumpuses.\n∀x (Vumpus(x) → ¬Sweet(x)) ::: Vumpuses are not sweet.\n∀x (Vumpus(x) → Numpus(x)) ::: Vumpuses are numpuses.\n∀x (Numpus(x) → Dull(x)) ::: Every numpus is dull.\n∀x (Numpus(x) → Jompus(x)) ::: Every numpus is a jompus.\n∀x (Jompus(x) → Small(x)) ::: Each jompus is small.\n∀x (Jompus(x) → Impus(x)) ::: Every jompus is an impus.\nRompus(stella) ::: Stella is a rompus.\nConclusion:\n¬Sweet(stella) ::: Stella is not sweet.\n------"
    ]
  },
  {
    "id": "ProntoQA_165",
    "context": "Each jompus is not wooden. Each jompus is a rompus. Each rompus is floral. Each rompus is a zumpus. Zumpuses are not cold. Each zumpus is a numpus. Numpuses are amenable. Numpuses are vumpuses. Vumpuses are not opaque. Tumpuses are feisty. Each vumpus is an impus. Every impus is not bright. Impuses are dumpuses. Dumpuses are brown. Every dumpus is a wumpus. Wumpuses are not feisty. Wumpuses are yumpuses. Fae is a numpus.",
    "question": "Is the following statement true or false? Fae is not feisty.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "------\n### Predicates:\nJompus(x) ::: x is a jompus\nWooden(x) ::: x is wooden\nRompus(x) ::: x is a rompus\nFloral(x) ::: x is floral\nZumpus(x) ::: x is a zumpus\nCold(x) ::: x is cold\nNumpus(x) ::: x is a numpus\nAmenable(x) ::: x is amenable\nVumpus(x) ::: x is a vumpus\nOpaque(x) ::: x is opaque\nTumpus(x) ::: x is a tumpus\nFeisty(x) ::: x is feisty\nImpus(x) ::: x is an impus\nBright(x) ::: x is bright\nDumpus(x) ::: x is a dumpus\nBrown(x) ::: x is brown\nWumpus(x) ::: x is a wumpus\nFeisty(x) ::: x is feisty\nYumpus(x) ::: x is a yumpus\nPremises:\n∀x (Jompus(x) → ¬Wooden(x)) ::: Each jompus is not wooden.\n∀x (Jompus(x) → Rompus(x)) ::: Each jompus is a rompus.\n∀x (Rompus(x) → Floral(x)) ::: Each rompus is floral.\n∀x (Rompus(x) → Zumpus(x)) ::: Each rompus is a zumpus.\n∀x (Zumpus(x) → ¬Cold(x)) ::: Zumpuses are not cold.\n∀x (Zumpus(x) → Numpus(x)) ::: Each zumpus is a numpus.\n∀x (Numpus(x) → Amenable(x)) ::: Numpuses are amenable.\n∀x (Numpus(x) → Vumpus(x)) ::: Numpuses are vumpuses.\n∀x (Vumpus(x) → ¬Opaque(x)) ::: Vumpuses are not opaque.\n∀x (Tumpus(x) → Feisty(x)) ::: Tumpuses are feisty.\n∀x (Vumpus(x) → Impus(x)) ::: Each vumpus is an impus.\n∀x (Impus(x) → ¬Bright(x)) ::: Every impus is not bright.\n∀x (Impus(x) → Dumpus(x)) ::: Impuses are dumpuses.\n∀x (Dumpus(x) → Brown(x)) ::: Dumpuses are brown.\n∀x (Dumpus(x) → Wumpus(x)) ::: Every dumpus is a wumpus.\n∀x (Wumpus(x) → ¬Feisty(x)) ::: Wumpuses are not feisty.\n∀x (Wumpus(x) → Yumpus(x)) ::: Wumpuses are yumpuses.\nNumpus(fae) ::: Fae is a numpus.\nConclusion:\n¬Feisty(fae) ::: Fae is not feisty.\n------"
    ]
  },
  {
    "id": "ProntoQA_166",
    "context": "Every dumpus is not luminous. Dumpuses are impuses. Every impus is not amenable. Each impus is a zumpus. Every zumpus is red. Zumpuses are wumpuses. Wumpuses are not opaque. Numpuses are sour. Each wumpus is a jompus. Each jompus is small. Every jompus is a tumpus. Tumpuses are cold. Each tumpus is a yumpus. Every yumpus is not sour. Yumpuses are vumpuses. Each vumpus is not floral. Each vumpus is a rompus. Polly is a zumpus.",
    "question": "Is the following statement true or false? Polly is not sour.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nDumpus(x) ::: x is a dumpus\nLuminous(x) ::: x is luminous\nImpus(x) ::: x is an impus\nAmenable(x) ::: x is amenable\nZumpus(x) ::: x is a zumpus\nRed(x) ::: x is red\nWumpus(x) ::: x is a wumpus\nOpaque(x) ::: x is opaque\nNumpus(x) ::: x is a numpus\nSour(x) ::: x is sour\nJompus(x) ::: x is a jompus\nSmall(x) ::: x is small\nTumpus(x) ::: x is a tumpus\nCold(x) ::: x is cold\nYumpus(x) ::: x is a yumpus\nVumpus(x) ::: x is a vumpus\nFloral(x) ::: x is floral\nRompus(x) ::: x is a rompus\nPremises:\n∀x (Dumpus(x) → ¬Luminous(x)) ::: Every dumpus is not luminous.\n∀x (Impus(x) → ¬Amenable(x)) ::: Dumpuses are impuses.\n∀x (Impus(x) → ¬Amenable(x)) ::: Every impus is not amenable.\n∀x (Impus(x) → Zumpus(x)) ::: Each impus is a zumpus.\n∀x (Zumpus(x) → Red(x)) ::: Every zumpus is red.\n∀x (Zumpus(x) → Wumpus(x)) ::: Zumpuses are wumpuses.\n∀x (Wumpus(x) → ¬Opaque(x)) ::: Wumpuses are not opaque.\n∀x (Numpus(x) → Sour(x)) ::: Numpuses are sour.\n∀x (Wumpus(x) → Jompus(x)) ::: Each wumpus is a jompus.\n∀x (Jompus(x) → Small(x)) ::: Each jompus is small.\n∀x (Jompus(x) → Tumpus(x)) ::: Every jompus is a tumpus.\n∀x (Tumpus(x) → Cold(x)) ::: Tumpuses are cold.\n∀x (Tumpus(x) → Yumpus(x)) ::: Each tumpus is a yumpus.\n∀x (Yumpus(x) → ¬Sour(x)) ::: Every yumpus is not sour.\n∀x (Yumpus(x) → Vumpus(x)) ::: Yumpuses are vumpuses.\n∀x (Vumpus(x) → ¬Floral(x)) ::: Each vumpus is not floral.\n∀x (Vumpus(x) → Rompus(x)) ::: Each vumpus is a rompus.\nZumpus(polly) ::: Polly is a zumpus.\nConclusion:\n¬Sour(polly) ::: Polly is not sour.\n------"
    ]
  },
  {
    "id": "ProntoQA_167",
    "context": "Each tumpus is not feisty. Each tumpus is a wumpus. Wumpuses are small. Every wumpus is a yumpus. Every yumpus is aggressive. Each yumpus is a zumpus. Every zumpus is opaque. Zumpuses are numpuses. Numpuses are not orange. Numpuses are jompuses. Jompuses are not bright. Each jompus is a dumpus. Each dumpus is floral. Each dumpus is a vumpus. Every vumpus is liquid. Each impus is bright. Each vumpus is a rompus. Stella is a wumpus.",
    "question": "Is the following statement true or false? Stella is not bright.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nTumpus(x) ::: x is a tumpus\nFeisty(x) ::: x is feisty\nWumpus(x) ::: x is a wumpus\nSmall(x) ::: x is small\nYumpus(x) ::: x is a yumpus\nAggressive(x) ::: x is aggressive\nZumpus(x) ::: x is a zumpus\nOpaque(x) ::: x is opaque\nNumpus(x) ::: x is a numpus\nOrange(x) ::: x is orange\nJompus(x) ::: x is a jompus\nBright(x) ::: x is bright\nDumpus(x) ::: x is a dumpus\nFloral(x) ::: x is floral\nVumpus(x) ::: x is a vumpus\nLiquid(x) ::: x is liquid\nImpus(x) ::: x is an impus\nRompus(x) ::: x is a rompus\nPremises:\n∀x (Tumpus(x) → ¬Feisty(x)) ::: Each tumpus is not feisty.\n∀x (Tumpus(x) → Wumpus(x)) ::: Each tumpus is a wumpus.\n∀x (Wumpus(x) → Small(x)) ::: Wumpuses are small.\n∀x (Wumpus(x) → Yumpus(x)) ::: Every wumpus is a yumpus.\n∀x (Yumpus(x) → Aggressive(x)) ::: Every yumpus is aggressive.\n∀x (Yumpus(x) → Zumpus(x)) ::: Each yumpus is a zumpus.\n∀x (Zumpus(x) → Opaque(x)) ::: Every zumpus is opaque.\n∀x (Zumpus(x) → Numpus(x)) ::: Zumpuses are numpuses.\n∀x (Numpus(x) → ¬Orange(x)) ::: Numpuses are not orange.\n∀x (Numpus(x) → Jompus(x)) ::: Numpuses are jompuses.\n∀x (Jompus(x) → ¬Bright(x)) ::: Jompuses are not bright.\n∀x (Jompus(x) → Dumpus(x)) ::: Each jompus is a dumpus.\n∀x (Dumpus(x) → Floral(x)) ::: Each dumpus is floral.\n∀x (Dumpus(x) → Vumpus(x)) ::: Each dumpus is a vumpus.\n∀x (Vumpus(x) → Liquid(x)) ::: Every vumpus is liquid.\n∀x (Impus(x) → Bright(x)) ::: Each impus is bright.\n∀x (Vumpus(x) → Rompus(x)) ::: Each vumpus is a rompus.\nWumpus(stella) ::: Stella is a wumpus.\nConclusion:\n¬Bright(stella) ::: Stella is not bright.\n------"
    ]
  },
  {
    "id": "ProntoQA_168",
    "context": "Vumpuses are wooden. Every vumpus is a wumpus. Wumpuses are not brown. Every wumpus is a dumpus. Every dumpus is not large. Dumpuses are numpuses. Each numpus is bright. Every numpus is an impus. Impuses are not floral. Each impus is a zumpus. Every zumpus is sweet. Every jompus is floral. Zumpuses are tumpuses. Each tumpus is nervous. Every tumpus is a rompus. Rompuses are not hot. Each rompus is a yumpus. Wren is a vumpus.",
    "question": "Is the following statement true or false? Wren is floral.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nVumpus(x) ::: x is a vumpus\nWooden(x) ::: x is wooden\nWumpus(x) ::: x is a wumpus\nBrown(x) ::: x is brown\nDumpus(x) ::: x is a dumpus\nLarge(x) ::: x is large\nNumpus(x) ::: x is a numpus\nBright(x) ::: x is bright\nImpus(x) ::: x is an impus\nFloral(x) ::: x is floral\nZumpus(x) ::: x is a zumpus\nSweet(x) ::: x is sweet\nJompus(x) ::: x is a jompus\nTumpus(x) ::: x is a tumpus\nNervous(x) ::: x is nervous\nRompus(x) ::: x is a rompus\nHot(x) ::: x is hot\nYumpus(x) ::: x is a yumpus\nPremises:\n∀x (Vumpus(x) → Wooden(x)) ::: Vumpuses are wooden.\n∀x (Vumpus(x) → Wumpus(x)) ::: Every vumpus is a wumpus.\n∀x (Wumpus(x) → ¬Brown(x)) ::: Wumpuses are not brown.\n∀x (Dumpus(x) → ¬Large(x)) ::: Every dumpus is not large.\n∀x (Dumpus(x) → Numpus(x)) ::: Dumpuses are numpuses.\n∀x (Numpus(x) → Bright(x)) ::: Each numpus is bright.\n∀x (Numpus(x) → Impus(x)) ::: Every numpus is an impus.\n∀x (Impus(x) → ¬Floral(x)) ::: Impuses are not floral.\n∀x (Impus(x) → Zumpus(x)) ::: Each impus is a zumpus.\n∀x (Zumpus(x) → Sweet(x)) ::: Every zumpus is sweet.\n∀x (Jompus(x) → Floral(x)) ::: Every jompus is floral.\n∀x (Zumpus(x) → Tumpus(x)) ::: Zumpuses are tumpuses.\n∀x (Tumpus(x) → Nervous(x)) ::: Each tumpus is nervous.\n∀x (Tumpus(x) → Rompus(x)) ::: Every tumpus is a rompus.\n∀x (Rompus(x) → ¬Hot(x)) ::: Rompuses are not hot.\n∀x (Rompus(x) → Yumpus(x)) ::: Each rompus is a yumpus.\nVumpus(wren) ::: Wren is a vumpus.\nConclusion:\nFloral(wren) ::: Wren is floral.\n------"
    ]
  },
  {
    "id": "ProntoQA_169",
    "context": "Each impus is not bitter. Impuses are dumpuses. Dumpuses are opaque. Each wumpus is fruity. Each dumpus is a zumpus. Zumpuses are not large. Zumpuses are tumpuses. Each tumpus is bright. Tumpuses are vumpuses. Each vumpus is liquid. Each vumpus is a rompus. Every rompus is not fruity. Rompuses are yumpuses. Yumpuses are temperate. Each yumpus is a numpus. Sam is a dumpus.",
    "question": "Is the following statement true or false? Sam is fruity.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant.lpg\n------"
    ]
  },
  {
    "id": "ProntoQA_170",
    "context": "Tumpuses are not metallic. Tumpuses are zumpuses. Zumpuses are fruity. Zumpuses are impuses. Each impus is not dull. Each impus is a jompus. Jompuses are aggressive. Jompuses are wumpuses. Wumpuses are brown. Rompuses are not brown. Wumpuses are numpuses. Max is a tumpus.",
    "question": "Is the following statement true or false? Max is not brown.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant.lpg\n------"
    ]
  },
  {
    "id": "ProntoQA_171",
    "context": "Yumpuses are dull. Every yumpus is an impus. Impuses are aggressive. Impuses are wumpuses. Wumpuses are opaque. Every wumpus is a jompus. Jompuses are small. Each jompus is a dumpus. Each numpus is metallic. Every dumpus is not metallic. Dumpuses are rompuses. Every rompus is not feisty. Rompuses are tumpuses. Every tumpus is cold. Every tumpus is a zumpus. Zumpuses are earthy. Each zumpus is a vumpus. Polly is a yumpus.",
    "question": "Is the following statement true or false? Polly is not metallic.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nYumpus(x) ::: x is a yumpus\nDull(x) ::: x is dull\nImpus(x) ::: x is an impus\nAggressive(x) ::: x is aggressive\nWumpus(x) ::: x is a wumpus\nOpaque(x) ::: x is opaque\nJompus(x) ::: x is a jompus\nSmall(x) ::: x is small\nNumpus(x) ::: x is a numpus\nMetallic(x) ::: x is metallic\nDumpus(x) ::: x is a dumpus\nRompus(x) ::: x is a rompus\nFeisty(x) ::: x is feisty\nTumpus(x) ::: x is a tumpus\nCold(x) ::: x is cold\nZumpus(x) ::: x is a zumpus\nEarthy(x) ::: x is earthy\nVumpus(x) ::: x is a vumpus\nPremises:\n∀x (Yumpus(x) → Dull(x)) ::: Yumpuses are dull.\n∀x (Yumpus(x) → Impus(x)) ::: Every yumpus is an impus.\n∀x (Impus(x) → Aggressive(x)) ::: Impuses are aggressive.\n∀x (Impus(x) → Wumpus(x)) ::: Impuses are wumpuses.\n∀x (Wumpus(x) → Opaque(x)) ::: Wumpuses are opaque.\n∀x (Wumpus(x) → Jompus(x)) ::: Every wumpus is a jompus.\n∀x (Jompus(x) → Small(x)) ::: Jompuses are small.\n∀x (Jompus(x) → Dumpus(x)) ::: Each jompus is a dumpus.\n∀x (Numpus(x) → Metallic(x)) ::: Each numpus is metallic.\n∀x (Dumpus(x) → ¬Metallic(x)) ::: Every dumpus is not metallic.\n∀x (Dumpus(x) → Rompus(x)) ::: Dumpuses are rompuses.\n∀x (Rompus(x) → ¬Feisty(x)) ::: Every rompus is not feisty.\n∀x (Rompus(x) → Tumpus(x)) ::: Rompuses are tumpuses.\n∀x (Tumpus(x) → Cold(x)) ::: Every tumpus is cold.\n∀x (Tumpus(x) → Zumpus(x)) ::: Every tumpus is a zumpus.\n∀x (Zumpus(x) → Earthy(x)) ::: Zumpuses are earthy.\n∀x (Zumpus(x) → Vumpus(x)) ::: Each zumpus is a vumpus.\nYumpus(polly) ::: Polly is a yumpus.\nConclusion:\n¬Metallic(polly) ::: Polly is not metallic.\n------"
    ]
  },
  {
    "id": "ProntoQA_172",
    "context": "Each zumpus is not temperate. Every zumpus is a vumpus. Vumpuses are large. Each vumpus is a dumpus. Every dumpus is feisty. Tumpuses are not opaque. Dumpuses are wumpuses. Every wumpus is floral. Wumpuses are rompuses. Rompuses are opaque. Rompuses are numpuses. Rex is a zumpus.",
    "question": "Is the following statement true or false? Rex is not opaque.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant.lpg\n------"
    ]
  },
  {
    "id": "ProntoQA_173",
    "context": "Each dumpus is fruity. Each dumpus is a tumpus. Each tumpus is not orange. Every tumpus is a vumpus. Each vumpus is not liquid. Every impus is not cold. Vumpuses are rompuses. Rompuses are feisty. Rompuses are yumpuses. Each yumpus is not bright. Every yumpus is a jompus. Every jompus is cold. Every jompus is a wumpus. Wumpuses are amenable. Wumpuses are zumpuses. Every zumpus is not transparent. Each zumpus is a numpus. Sally is a tumpus.",
    "question": "Is the following statement true or false? Sally is not cold.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nDumpus(x) ::: x is a dumpus\nFruity(x) ::: x is fruity\nTumpus(x) ::: x is a tumpus\nOrange(x) ::: x is orange\nVumpus(x) ::: x is a vumpus\nLiquid(x) ::: x is liquid\nImpus(x) ::: x is an impus\nCold(x) ::: x is cold\nRompus(x) ::: x is a rompus\nFeisty(x) ::: x is feisty\nYumpus(x) ::: x is a yumpus\nBright(x) ::: x is bright\nJompus(x) ::: x is a jompus\nWumpus(x) ::: x is a wumpus\nAmenable(x) ::: x is amenable\nZumpus(x) ::: x is a zumpus\nTransparent(x) ::: x is transparent\nNumpus(x) ::: x is a numpus\nPremises:\n∀x (Dumpus(x) → Fruity(x)) ::: Each dumpus is fruity.\n∀x (Dumpus(x) → Tumpus(x)) ::: Each dumpus is a tumpus.\n∀x (Tumpus(x) → ¬Orange(x)) ::: Each tumpus is not orange.\n∀x (Vumpus(x) → Rompus(x)) ::: Every tumpus is a vumpus.\n∀x (Vumpus(x) → ¬Liquid(x)) ::: Each vumpus is not liquid.\n∀x (Impus(x) → ¬Cold(x)) ::: Every impus is not cold.\n∀x (Vumpus(x) → Rompus(x)) ::: Vumpuses are rompuses.\n∀x (Rompus(x) → Feisty(x)) ::: Rompuses are feisty.\n∀x (Rompus(x) → Yumpus(x)) ::: Rompuses are yumpuses.\n∀x (Yumpus(x) → ¬Bright(x)) ::: Every yumpus is not bright.\n∀x (Yumpus(x) → Jompus(x)) ::: Every yumpus is a jompus.\n∀x (Jompus(x) → Cold(x)) ::: Every jompus is cold.\n∀x (Jompus(x) → Wumpus(x)) ::: Every jompus is a wumpus.\n∀x (Wumpus(x) → Amenable(x)) ::: Wumpuses are amenable.\n∀x (Wumpus(x) → Zumpus(x)) ::: Wumpuses are zumpuses.\n∀x (Zumpus(x) → ¬Transparent(x)) ::: Every zumpus is not transparent.\n∀x (Zumpus(x) → Numpus(x)) ::: Each zumpus is a numpus.\nTumpus(sally) ::: Sally is a tumpus.\nConclusion:\n¬Cold(sally) ::: Sally is not cold.\n------"
    ]
  },
  {
    "id": "ProntoQA_174",
    "context": "Impuses are not temperate. Wumpuses are kind. Each impus is a numpus. Numpuses are orange. Numpuses are dumpuses. Each dumpus is liquid. Every dumpus is a zumpus. Zumpuses are earthy. Zumpuses are vumpuses. Vumpuses are transparent. Vumpuses are tumpuses. Each tumpus is small. Every tumpus is a jompus. Each jompus is not kind. Jompuses are yumpuses. Yumpuses are feisty. Every yumpus is a rompus. Polly is a dumpus.",
    "question": "Is the following statement true or false? Polly is kind.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nImpus(x) ::: x is an impus\nTemperate(x) ::: x is temperate\nWumpus(x) ::: x is a wumpus\nKind(x) ::: x is kind\nNumpus(x) ::: x is a numpus\nOrange(x) ::: x is orange\nDumpus(x) ::: x is a dumpus\nLiquid(x) ::: x is liquid\nZumpus(x) ::: x is a zumpus\nEarthy(x) ::: x is earthy\nVumpus(x) ::: x is a vumpus\nTransparent(x) ::: x is transparent\nTumpus(x) ::: x is a tumpus\nSmall(x) ::: x is small\nJompus(x) ::: x is a jompus\nKind(x) ::: x is kind\nYumpus(x) ::: x is a yumpus\nFeisty(x) ::: x is feisty\nRompus(x) ::: x is a rompus\nPremises:\n∀x (Impus(x) → ¬Temperate(x)) ::: Impuses are not temperate.\n∀x (Wumpus(x) → Kind(x)) ::: Wumpuses are kind.\n∀x (Impus(x) → Numpus(x)) ::: Each impus is a numpus.\n∀x (Numpus(x) → Orange(x)) ::: Numpuses are orange.\n∀x (Numpus(x) → Dumpus(x)) ::: Numpuses are dumpuses.\n∀x (Dumpus(x) → Liquid(x)) ::: Each dumpus is liquid.\n∀x (Dumpus(x) → Zumpus(x)) ::: Every dumpus is a zumpus.\n∀x (Zumpus(x) → Earthy(x)) ::: Zumpuses are earthy.\n∀x (Zumpus(x) → Vumpus(x)) ::: Zumpuses are vumpuses.\n∀x (Vumpus(x) → Transparent(x)) ::: Vumpuses are transparent.\n∀x (Vumpus(x) → Tumpus(x)) ::: Vumpuses are tumpuses.\n∀x (Tumpus(x) → Small(x)) ::: Each tumpus is small.\n∀x (Tumpus(x) → Jompus(x)) ::: Every tumpus is a jompus.\n∀x (Jompus(x) → ¬Kind(x)) ::: Each jompus is not kind.\n∀x (Jompus(x) → Yumpus(x)) ::: Jompuses are yumpuses.\n∀x (Yumpus(x) → Feisty(x)) ::: Yumpuses are feisty.\n∀x (Yumpus(x) → Rompus(x)) ::: Every yumpus is a rompus.\nDumpus(polly) ::: Polly is a dumpus.\nConclusion:\nKind(polly) ::: Polly is kind.\n------"
    ]
  },
  {
    "id": "ProntoQA_175",
    "context": "Each rompus is wooden. Each rompus is a zumpus. Zumpuses are amenable. Zumpuses are impuses. Impuses are cold. Each impus is a jompus. Every jompus is not floral. Jompuses are yumpuses. Each tumpus is nervous. Every yumpus is not large. Yumpuses are dumpuses. Each dumpus is not nervous. Each dumpus is a vumpus. Stella is a zumpus.",
    "question": "Is the following statement true or false? Stella is nervous.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nRompus(x) ::: x is a rompus\nWooden(x) ::: x is wooden\nZumpus(x) ::: x is a zumpus\nAmenable(x) ::: x is amenable\nImpus(x) ::: x is an impus\nCold(x) ::: x is cold\nJompus(x) ::: x is a jompus\nFloral(x) ::: x is floral\nYumpus(x) ::: x is a yumpus\nNervous(x) ::: x is nervous\nLarge(x) ::: x is large\nDumpus(x) ::: x is a dumpus\nVumpus(x) ::: x is a vumpus\nStella(x) ::: x is Stella\nPremises:\n∀x (Rompus(x) → Wooden(x)) ::: Each rompus is wooden.\n∀x (Rompus(x) → Zumpus(x)) ::: Each rompus is a zumpus.\n∀x (Zumpus(x) → Amenable(x)) ::: Zumpuses are amenable.\n∀x (Zumpus(x) → Impus(x)) ::: Zumpuses are impuses.\n∀x (Impus(x) → Cold(x)) ::: Impuses are cold.\n∀x (Impus(x) → Jompus(x)) ::: Each impus is a jompus.\n∀x (Jompus(x) → ¬Floral(x)) ::: Every jompus is not floral.\n∀x (Jompus(x) → Yumpus(x)) ::: Jompuses are yumpuses.\n∀x (Tumpus(x) → Nervous(x)) ::: Each tumpus is nervous.\n∀x (Yumpus(x) → ¬Large(x)) ::: Every yumpus is not large.\n∀x (Yumpus(x) → Dumpus(x)) ::: Yumpuses are dumpuses.\n∀x (Dumpus(x) → ¬Nervous(x)) ::: Each dumpus is not nervous.\n∀x (Dumpus(x) → Vumpus(x)) ::: Each dumpus is a vumpus.\nZumpus(stella) ::: Stella is a zumpus.\nConclusion:\nNervous(stella) ::: Stella is nervous.\n------"
    ]
  },
  {
    "id": "ProntoQA_176",
    "context": "Every wumpus is not luminous. Each dumpus is spicy. Wumpuses are tumpuses. Each tumpus is bright. Every tumpus is a vumpus. Vumpuses are blue. Vumpuses are numpuses. Numpuses are kind. Numpuses are zumpuses. Every zumpus is not earthy. Zumpuses are jompuses. Jompuses are not spicy. Each jompus is an impus. Each impus is feisty. Every impus is a yumpus. Every yumpus is temperate. Yumpuses are rompuses. Sally is a tumpus.",
    "question": "Is the following statement true or false? Sally is not spicy.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nWumpus(x) ::: x is a wumpus\nLuminous(x) ::: x is luminous\nDumpus(x) ::: x is a dumpus\nSpicy(x) ::: x is spicy\nTumpus(x) ::: x is a tumpus\nBright(x) ::: x is bright\nVumpus(x) ::: x is a vumpus\nBlue(x) ::: x is blue\nNumpus(x) ::: x is a numpus\nKind(x) ::: x is kind\nZumpus(x) ::: x is a zumpus\nEarthy(x) ::: x is earthy\nJompus(x) ::: x is a jompus\nSpicy(x) ::: x is spicy\nImpus(x) ::: x is an impus\nFeisty(x) ::: x is feisty\nYumpus(x) ::: x is a yumpus\nTemperate(x) ::: x is temperate\nRompus(x) ::: x is a rompus\nPremises:\n∀x (Wumpus(x) → ¬Luminous(x)) ::: Every wumpus is not luminous.\n∀x (Dumpus(x) → Spicy(x)) ::: Each dumpus is spicy.\n∀x (Wumpus(x) → Tumpus(x)) ::: Wumpuses are tumpuses.\n∀x (Tumpus(x) → Bright(x)) ::: Each tumpus is bright.\n∀x (Tumpus(x) → Vumpus(x)) ::: Every tumpus is a vumpus.\n∀x (Vumpus(x) → Blue(x)) ::: Vumpuses are blue.\n∀x (Vumpus(x) → Numpus(x)) ::: Vumpuses are numpuses.\n∀x (Numpus(x) → Kind(x)) ::: Numpuses are kind.\n∀x (Numpus(x) → Zumpus(x)) ::: Numpuses are zumpuses.\n∀x (Zumpus(x) → ¬Earthy(x)) ::: Every zumpus is not earthy.\n∀x (Zumpus(x) → Jompus(x)) ::: Zumpuses are jompuses.\n∀x (Jompus(x) → ¬Spicy(x)) ::: Jompuses are not spicy.\n∀x (Jompus(x) → Impus(x)) ::: Each jompus is an impus.\n∀x (Impus(x) → Feisty(x)) ::: Each impus is feisty.\n∀x (Impus(x) → Yumpus(x)) ::: Every impus is a yumpus.\n∀x (Yumpus(x) → Temperate(x)) ::: Every yumpus is temperate.\n∀x (Yumpus(x) → Rompus(x)) ::: Yumpuses are rompuses.\nTumpus(sally) ::: Sally is a tumpus.\nConclusion:\n¬Spicy(sally) ::: Sally is not spicy.\n------"
    ]
  },
  {
    "id": "ProntoQA_177",
    "context": "Impuses are bitter. Tumpuses are not bright. Every impus is a wumpus. Each wumpus is not transparent. Wumpuses are dumpuses. Dumpuses are small. Each dumpus is a rompus. Each rompus is feisty. Each rompus is a numpus. Numpuses are bright. Numpuses are zumpuses. Rex is an impus.",
    "question": "Is the following statement true or false? Rex is bright.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant.lpg\n------"
    ]
  },
  {
    "id": "ProntoQA_178",
    "context": "Impuses are not temperate. Every impus is a rompus. Rompuses are happy. Rompuses are jompuses. Every jompus is not small. Every jompus is a zumpus. Every numpus is metallic. Zumpuses are not amenable. Each zumpus is a wumpus. Wumpuses are sour. Wumpuses are dumpuses. Each dumpus is not bright. Dumpuses are vumpuses. Every vumpus is transparent. Each vumpus is a yumpus. Yumpuses are not metallic. Each yumpus is a tumpus. Polly is a zumpus.",
    "question": "Is the following statement true or false? Polly is metallic.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nImpus(x) ::: x is an impus\nTemperate(x) ::: x is temperate\nRompus(x) ::: x is a rompus\nHappy(x) ::: x is happy\nJompus(x) ::: x is a jompus\nSmall(x) ::: x is small\nZumpus(x) ::: x is a zumpus\nMetallic(x) ::: x is metallic\nAmenable(x) ::: x is amenable\nWumpus(x) ::: x is a wumpus\nSour(x) ::: x is sour\nDumpus(x) ::: x is a dumpus\nBright(x) ::: x is bright\nVumpus(x) ::: x is a vumpus\nTransparent(x) ::: x is transparent\nTumpus(x) ::: x is a tumpus\nYumpus(x) ::: x is a yumpus\nMetallic(x) ::: x is metallic\nPremises:\n∀x (Impus(x) → ¬Temperate(x)) ::: Impuses are not temperate.\n∀x (Impus(x) → Rompus(x)) ::: Every impus is a rompus.\n∀x (Rompus(x) → Happy(x)) ::: Rompuses are happy.\n∀x (Rompus(x) → Jompus(x)) ::: Rompuses are jompuses.\n∀x (Jompus(x) → ¬Small(x)) ::: Every jompus is not small.\n∀x (Jompus(x) → Zumpus(x)) ::: Every jompus is a zumpus.\n∀x (Numpus(x) → Metallic(x)) ::: Every numpus is metallic.\n∀x (Zumpus(x) → ¬Amenable(x)) ::: Zumpuses are not amenable.\n∀x (Zumpus(x) → Wumpus(x)) ::: Each zumpus is a wumpus.\n∀x (Wumpus(x) → Sour(x)) ::: Wumpuses are sour.\n∀x (Wumpus(x) → Dumpus(x)) ::: Wumpuses are dumpuses.\n∀x (Dumpus(x) → ¬Bright(x)) ::: Each dumpus is not bright.\n∀x (Dumpus(x) → Vumpus(x)) ::: Dumpuses are vumpuses.\n∀x (Vumpus(x) → Transparent(x)) ::: Every vumpus is transparent.\n∀x (Vumpus(x) → Yumpus(x)) ::: Each vumpus is a yumpus.\n∀x (Yumpus(x) → ¬Metallic(x)) ::: Yumpuses are not metallic.\n∀x (Yumpus(x) → Tumpus(x)) ::: Each yumpus is a tumpus.\nZumpus(polly) ::: Polly is a zumpus.\nConclusion:\nMetallic(polly) ::: Polly is metallic.\n------"
    ]
  },
  {
    "id": "ProntoQA_179",
    "context": "Every rompus is sour. Rompuses are impuses. Yumpuses are opaque. Impuses are feisty. Each impus is a zumpus. Every zumpus is orange. Zumpuses are vumpuses. Vumpuses are not large. Vumpuses are wumpuses. Wumpuses are not opaque. Each wumpus is a numpus. Numpuses are metallic. Numpuses are dumpuses. Wren is a rompus.",
    "question": "Is the following statement true or false? Wren is not opaque.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nRompus(x) ::: x is a rompus\nSour(x) ::: x is sour\nImpus(x) ::: x is an impus\nYumpus(x) ::: x is a yumpus\nOpaque(x) ::: x is opaque\nFeisty(x) ::: x is feisty\nZumpus(x) ::: x is a zumpus\nOrange(x) ::: x is orange\nVumpus(x) ::: x is a vumpus\nLarge(x) ::: x is large\nWumpus(x) ::: x is a wumpus\nNumpus(x) ::: x is a numpus\nMetallic(x) ::: x is metallic\nDumpus(x) ::: x is a dumpus\nPremises:\n∀x (Rompus(x) → Sour(x)) ::: Every rompus is sour.\n∀x (Rompus(x) → Impus(x)) ::: Rompuses are impuses.\n∀x (Yumpus(x) → Opaque(x)) ::: Yumpuses are opaque.\n∀x (Impus(x) → Feisty(x)) ::: Impuses are feisty.\n∀x (Impus(x) → Zumpus(x)) ::: Each impus is a zumpus.\n∀x (Zumpus(x) → Orange(x)) ::: Every zumpus is orange.\n∀x (Zumpus(x) → Vumpus(x)) ::: Zumpuses are vumpuses.\n∀x (Vumpus(x) → ¬Large(x)) ::: Vumpuses are not large.\n∀x (Vumpus(x) → Wumpus(x)) ::: Vumpuses are wumpuses.\n∀x (Wumpus(x) → ¬Opaque(x)) ::: Wumpuses are not opaque.\n∀x (Wumpus(x) → Numpus(x)) ::: Each wumpus is a numpus.\n∀x (Numpus(x) → Metallic(x)) ::: Numpuses are metallic.\n∀x (Numpus(x) → Dumpus(x)) ::: Numpuses are dumpuses.\nRompus(wren) ::: Wren is a rompus.\nConclusion:\n¬Opaque(wren) ::: Wren is not opaque.\n------"
    ]
  },
  {
    "id": "ProntoQA_180",
    "context": "Impuses are not floral. Every impus is a jompus. Jompuses are sweet. Jompuses are numpuses. Numpuses are not shy. Numpuses are rompuses. Rompuses are mean. Every rompus is a dumpus. Every dumpus is not transparent. Dumpuses are yumpuses. Yumpuses are luminous. Each yumpus is a wumpus. Wumpuses are not orange. Vumpuses are not luminous. Every wumpus is a zumpus. Max is a jompus.",
    "question": "Is the following statement true or false? Max is not luminous.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nImpus(x) ::: x is an impus\nFloral(x) ::: x is floral\nJompus(x) ::: x is a jompus\nSweet(x) ::: x is sweet\nNumpus(x) ::: x is a numpus\nShy(x) ::: x is shy\nRompus(x) ::: x is a rompus\nMean(x) ::: x is mean\nDumpus(x) ::: x is a dumpus\nTransparent(x) ::: x is transparent\nYumpus(x) ::: x is a yumpus\nLuminous(x) ::: x is luminous\nWumpus(x) ::: x is a wumpus\nOrange(x) ::: x is orange\nVumpus(x) ::: x is a vumpus\nZumpus(x) ::: x is a zumpus\nMax(x) ::: x is Max\nPremises:\n∀x (Impus(x) → ¬Floral(x)) ::: Impuses are not floral.\n∀x (Impus(x) → Jompus(x)) ::: Every impus is a jompus.\n∀x (Jompus(x) → Sweet(x)) ::: Jompuses are sweet.\n∀x (Numpus(x) → ¬Shy(x)) ::: Numpuses are not shy.\n∀x (Numpus(x) → Rompus(x)) ::: Numpuses are rompuses.\n∀x (Rompus(x) → Mean(x)) ::: Rompuses are mean.\n∀x (Rompus(x) → Dumpus(x)) ::: Every rompus is a dumpus.\n∀x (Dumpus(x) → ¬Transparent(x)) ::: Dumpuses are not transparent.\n∀x (Dumpus(x) → Yumpus(x)) ::: Dumpuses are yumpuses.\n∀x (Yumpus(x) → Luminous(x)) ::: Yumpuses are luminous.\n∀x (Yumpus(x) → Wumpus(x)) ::: Each yumpus is a wumpus.\n∀x (Wumpus(x) → ¬Orange(x)) ::: Wumpuses are not orange.\n∀x (Vumpus(x) → ¬Luminous(x)) ::: Vumpuses are not luminous.\n∀x (Wumpus(x) → Zumpus(x)) ::: Every wumpus is a zumpus.\nJompus(max) ::: Max is a jompus.\nConclusion:\n¬Luminous(max) ::: Max is not luminous.\n------"
    ]
  },
  {
    "id": "ProntoQA_181",
    "context": "Every numpus is not small. Numpuses are impuses. Impuses are sour. Every impus is a wumpus. Wumpuses are red. Every wumpus is a rompus. Every rompus is fruity. Each tumpus is not kind. Every rompus is a yumpus. Yumpuses are not hot. Each yumpus is a jompus. Jompuses are not opaque. Every jompus is a vumpus. Each vumpus is happy. Vumpuses are zumpuses. Zumpuses are kind. Zumpuses are dumpuses. Rex is a rompus.",
    "question": "Is the following statement true or false? Rex is not kind.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nNumpus(x) ::: x is a numpus\nSmall(x) ::: x is small\nImpus(x) ::: x is an impus\nSour(x) ::: x is sour\nWumpus(x) ::: x is a wumpus\nRed(x) ::: x is red\nRompus(x) ::: x is a rompus\nFruity(x) ::: x is fruity\nTumpus(x) ::: x is a tumpus\nKind(x) ::: x is kind\nYumpus(x) ::: x is a yumpus\nHot(x) ::: x is hot\nJompus(x) ::: x is a jompus\nOpaque(x) ::: x is opaque\nVumpus(x) ::: x is a vumpus\nHappy(x) ::: x is happy\nZumpus(x) ::: x is a zumpus\nKind(x) ::: x is kind\nDumpus(x) ::: x is a dumpus\nPremises:\n∀x (Numpus(x) → ¬Small(x)) ::: Every numpus is not small.\n∀x (Numpus(x) → Impus(x)) ::: Numpuses are impuses.\n∀x (Impus(x) → Sour(x)) ::: Impuses are sour.\n∀x (Impus(x) → Wumpus(x)) ::: Every impus is a wumpus.\n∀x (Wumpus(x) → Red(x)) ::: Wumpuses are red.\n∀x (Wumpus(x) → Rompus(x)) ::: Every wumpus is a rompus.\n∀x (Rompus(x) → Fruity(x)) ::: Every rompus is fruity.\n∀x (Tumpus(x) → ¬Kind(x)) ::: Each tumpus is not kind.\n∀x (Rompus(x) → Yumpus(x)) ::: Every rompus is a yumpus.\n∀x (Yumpus(x) → ¬Hot(x)) ::: Yumpuses are not hot.\n∀x (Yumpus(x) → Jompus(x)) ::: Each yumpus is a jompus.\n∀x (Jompus(x) → ¬Opaque(x)) ::: Jompuses are not opaque.\n∀x (Jompus(x) → Vumpus(x)) ::: Every jompus is a vumpus.\n∀x (Vumpus(x) → Happy(x)) ::: Each vumpus is happy.\n∀x (Vumpus(x) → Zumpus(x)) ::: Vumpuses are zumpuses.\n∀x (Zumpus(x) → Kind(x)) ::: Zumpuses are kind.\n∀x (Zumpus(x) → Dumpus(x)) ::: Zumpuses are dumpuses.\nRompus(rex) ::: Rex is a rompus.\nConclusion:\n¬Kind(rex) ::: Rex is not kind.\n------"
    ]
  },
  {
    "id": "ProntoQA_182",
    "context": "Tumpuses are fruity. Tumpuses are dumpuses. Each dumpus is liquid. Each dumpus is a numpus. Numpuses are sour. Numpuses are jompuses. Jompuses are not cold. Jompuses are wumpuses. Wumpuses are brown. Wumpuses are vumpuses. Vumpuses are happy. Each vumpus is a yumpus. Each yumpus is large. Each yumpus is a rompus. Rompuses are not mean. Every rompus is a zumpus. Each impus is not large. Sam is a numpus.",
    "question": "Is the following statement true or false? Sam is large.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nTumpus(x) ::: x is a tumpus\nFruity(x) ::: x is fruity\nDumpus(x) ::: x is a dumpus\nLiquid(x) ::: x is liquid\nNumpus(x) ::: x is a numpus\nSour(x) ::: x is sour\nJompus(x) ::: x is a jompus\nCold(x) ::: x is cold\nWumpus(x) ::: x is a wumpus\nBrown(x) ::: x is brown\nVumpus(x) ::: x is a vumpus\nHappy(x) ::: x is happy\nYumpus(x) ::: x is a yumpus\nLarge(x) ::: x is large\nRompus(x) ::: x is a rompus\nMean(x) ::: x is mean\nZumpus(x) ::: x is a zumpus\nImpus(x) ::: x is an impus\nPremises:\n∀x (Tumpus(x) → Fruity(x)) ::: Tumpuses are fruity.\n∀x (Tumpus(x) → Dumpus(x)) ::: Tumpuses are dumpuses.\n∀x (Dumpus(x) → Liquid(x)) ::: Each dumpus is liquid.\n∀x (Dumpus(x) → Numpus(x)) ::: Each dumpus is a numpus.\n∀x (Numpus(x) → Sour(x)) ::: Numpuses are sour.\n∀x (Numpus(x) → Jompus(x)) ::: Numpuses are jompuses.\n∀x (Jompus(x) → ¬Cold(x)) ::: Jompuses are not cold.\n∀x (Jompus(x) → Wumpus(x)) ::: Jompuses are wumpuses.\n∀x (Wumpus(x) → Brown(x)) ::: Wumpuses are brown.\n∀x (Wumpus(x) → Vumpus(x)) ::: Wumpuses are vumpuses.\n∀x (Vumpus(x) → Happy(x)) ::: Vumpuses are happy.\n∀x (Vumpus(x) → Yumpus(x)) ::: Each vumpus is a yumpus.\n∀x (Yumpus(x) → Large(x)) ::: Each yumpus is large.\n∀x (Yumpus(x) → Rompus(x)) ::: Each yumpus is a rompus.\n∀x (Rompus(x) → ¬Mean(x)) ::: Rompuses are not mean.\n∀x (Rompus(x) → Zumpus(x)) ::: Every rompus is a zumpus.\n∀x (Impus(x) → ¬Large(x)) ::: Each impus is not large.\nNumpus(sam) ::: Sam is a numpus.\nConclusion:\nLarge(sam) ::: Sam is large.\n------"
    ]
  },
  {
    "id": "ProntoQA_183",
    "context": "Impuses are not metallic. Impuses are yumpuses. Yumpuses are bright. Every yumpus is a jompus. Wumpuses are opaque. Every jompus is not large. Jompuses are tumpuses. Each tumpus is not earthy. Tumpuses are vumpuses. Every vumpus is bitter. Vumpuses are numpuses. Each numpus is not opaque. Every numpus is a dumpus. Every dumpus is kind. Dumpuses are rompuses. Rompuses are brown. Rompuses are zumpuses. Fae is a yumpus.",
    "question": "Is the following statement true or false? Fae is opaque.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nImpus(x) ::: x is an impus\nMetallic(x) ::: x is metallic\nYumpus(x) ::: x is a yumpus\nBright(x) ::: x is bright\nJompus(x) ::: x is a jompus\nWumpus(x) ::: x is a wumpus\nOpaque(x) ::: x is opaque\nLarge(x) ::: x is large\nTumpus(x) ::: x is a tumpus\nEarthy(x) ::: x is earthy\nVumpus(x) ::: x is a vumpus\nBitter(x) ::: x is bitter\nNumpus(x) ::: x is a numpus\nOpaque(x) ::: x is opaque\nDumpus(x) ::: x is a dumpus\nKind(x) ::: x is kind\nRompus(x) ::: x is a rompus\nBrown(x) ::: x is brown\nZumpus(x) ::: x is a zumpus\nFae(x) ::: x is fae\nPremises:\n∀x (Impus(x) → ¬Metallic(x)) ::: Impuses are not metallic.\n∀x (Impus(x) → Yumpus(x)) ::: Impuses are yumpuses.\n∀x (Yumpus(x) → Bright(x)) ::: Yumpuses are bright.\n∀x (Yumpus(x) → Jompus(x)) ::: Every yumpus is a jompus.\n∀x (Wumpus(x) → ¬Opaque(x)) ::: Wumpuses are opaque.\n∀x (Jompus(x) → ¬Large(x)) ::: Every jompus is not large.\n∀x (Jompus(x) → Tumpus(x)) ::: Jompuses are tumpuses.\n∀x (Tumpus(x) → ¬Earthy(x)) ::: Each tumpus is not earthy.\n∀x (Tumpus(x) → Vumpus(x)) ::: Tumpuses are vumpuses.\n∀x (Vumpus(x) → Bitter(x)) ::: Every vumpus is bitter.\n∀x (Vumpus(x) → Numpus(x)) ::: Vumpuses are numpuses.\n∀x (Numpus(x) → ¬Opaque(x)) ::: Each numpus is not opaque.\n∀x (Numpus(x) → Dumpus(x)) ::: Every numpus is a dumpus.\n∀x (Dumpus(x) → Kind(x)) ::: Every dumpus is kind.\n∀x (Dumpus(x) → Rompus(x)) ::: Dumpuses are rompuses.\n∀x (Rompus(x) → Brown(x)) ::: Rompuses are brown.\n∀x (Rompus(x) → Zumpus(x)) ::: Rompuses are zumpuses.\nYumpus(fae) ::: Fae is a yumpus.\nConclusion:\n¬Opaque(fae) ::: Fae is opaque.\n------"
    ]
  },
  {
    "id": "ProntoQA_184",
    "context": "Each impus is small. Every impus is a vumpus. Each vumpus is fruity. Vumpuses are zumpuses. Each zumpus is transparent. Every zumpus is a dumpus. Dumpuses are wooden. Dumpuses are wumpuses. Every wumpus is dull. Yumpuses are not angry. Wumpuses are tumpuses. Tumpuses are angry. Each tumpus is a numpus. Every numpus is not hot. Every numpus is a rompus. Every rompus is nervous. Each rompus is a jompus. Sam is a vumpus.",
    "question": "Is the following statement true or false? Sam is not angry.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nImpus(x) ::: x is an impus\nSmall(x) ::: x is small\nVumpus(x) ::: x is a vumpus\nFruity(x) ::: x is fruity\nZumpus(x) ::: x is a zumpus\nTransparent(x) ::: x is transparent\nDumpus(x) ::: x is a dumpus\nWooden(x) ::: x is wooden\nWumpus(x) ::: x is a wumpus\nDull(x) ::: x is dull\nAngry(x) ::: x is angry\nTumpus(x) ::: x is a tumpus\nNumpus(x) ::: x is a numpus\nHot(x) ::: x is hot\nRompus(x) ::: x is a rompus\nNervous(x) ::: x is nervous\nJompus(x) ::: x is a jompus\nPremises:\n∀x (Impus(x) → Small(x)) ::: Each impus is small.\n∀x (Impus(x) → Vumpus(x)) ::: Every impus is a vumpus.\n∀x (Vumpus(x) → Fruity(x)) ::: Vumpuses are fruity.\n∀x (Vumpus(x) → Zumpus(x)) ::: Vumpuses are zumpuses.\n∀x (Zumpus(x) → Transparent(x)) ::: Each zumpus is transparent.\n∀x (Zumpus(x) → Dumpus(x)) ::: Every zumpus is a dumpus.\n∀x (Dumpus(x) → Wooden(x)) ::: Dumpuses are wooden.\n∀x (Dumpus(x) → Wumpus(x)) ::: Dumpuses are wumpuses.\n∀x (Wumpus(x) → Dull(x)) ::: Every wumpus is dull.\n∀x (Yumpus(x) → ¬Angry(x)) ::: Yumpuses are not angry.\n∀x (Wumpus(x) → Tumpus(x)) ::: Wumpuses are tumpuses.\n∀x (Tumpus(x) → Angry(x)) ::: Tumpuses are angry.\n∀x (Tumpus(x) → Numpus(x)) ::: Each tumpus is a numpus.\n∀x (Numpus(x) → ¬Hot(x)) ::: Every numpus is not hot.\n∀x (Numpus(x) → Rompus(x)) ::: Every numpus is a rompus.\n∀x (Rompus(x) → Nervous(x)) ::: Every rompus is nervous.\n∀x (Rompus(x) → Jompus(x)) ::: Each rompus is a jompus.\nVumpus(sam) ::: Sam is a vumpus.\nConclusion:\n¬Angry(sam) ::: Sam is not angry.\n------"
    ]
  },
  {
    "id": "ProntoQA_185",
    "context": "Tumpuses are bright. Tumpuses are yumpuses. Yumpuses are sweet. Yumpuses are wumpuses. Wumpuses are not transparent. Wumpuses are vumpuses. Each vumpus is angry. Vumpuses are rompuses. Rompuses are happy. Every rompus is a zumpus. Zumpuses are brown. Zumpuses are numpuses. Numpuses are not large. Impuses are not happy. Numpuses are jompuses. Jompuses are earthy. Jompuses are dumpuses. Polly is a tumpus.",
    "question": "Is the following statement true or false? Polly is not happy.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nTumpus(x) ::: x is a tumpus\nBright(x) ::: x is bright\nYumpus(x) ::: x is a yumpus\nSweet(x) ::: x is sweet\nWumpus(x) ::: x is a wumpus\nTransparent(x) ::: x is transparent\nVumpus(x) ::: x is a vumpus\nAngry(x) ::: x is angry\nRompus(x) ::: x is a rompus\nHappy(x) ::: x is happy\nZumpus(x) ::: x is a zumpus\nBrown(x) ::: x is brown\nNumpus(x) ::: x is a numpus\nLarge(x) ::: x is large\nImpus(x) ::: x is an impus\nHappy(x) ::: x is happy\nJompus(x) ::: x is a jompus\nEarthy(x) ::: x is earthy\nDumpus(x) ::: x is a dumpus\nPremises:\n∀x (Tumpus(x) → Bright(x)) ::: Tumpuses are bright.\n∀x (Tumpus(x) → Yumpus(x)) ::: Tumpuses are yumpuses.\n∀x (Yumpus(x) → Sweet(x)) ::: Yumpuses are sweet.\n∀x (Yumpus(x) → Wumpus(x)) ::: Yumpuses are wumpuses.\n∀x (Wumpus(x) → ¬Transparent(x)) ::: Wumpuses are not transparent.\n∀x (Wumpus(x) → Vumpus(x)) ::: Wumpuses are vumpuses.\n∀x (Vumpus(x) → Angry(x)) ::: Each vumpus is angry.\n∀x (Vumpus(x) → Rompus(x)) ::: Vumpuses are rompuses.\n∀x (Rompus(x) → Happy(x)) ::: Rompuses are happy.\n∀x (Rompus(x) → Zumpus(x)) ::: Every rompus is a zumpus.\n∀x (Zumpus(x) → Brown(x)) ::: Zumpuses are brown.\n∀x (Zumpus(x) → Numpus(x)) ::: Zumpuses are numpuses.\n∀x (Numpus(x) → ¬Large(x)) ::: Numpuses are not large.\n∀x (Impus(x) → ¬Happy(x)) ::: Impuses are not happy.\n∀x (Numpus(x) → Jompus(x)) ::: Numpuses are jompuses.\n∀x (Jompus(x) → Earthy(x)) ::: Jompuses are earthy.\n∀x (Jompus(x) → Dumpus(x)) ::: Jompuses are dumpuses.\nTumpus(polly) ::: Polly is a tumpus.\nConclusion:\n¬Happy(polly) ::: Polly is not happy.\n------"
    ]
  },
  {
    "id": "ProntoQA_186",
    "context": "Numpuses are not small. Numpuses are yumpuses. Each yumpus is opaque. Each yumpus is a dumpus. Each vumpus is fruity. Every dumpus is not temperate. Dumpuses are wumpuses. Wumpuses are spicy. Each wumpus is an impus. Every impus is luminous. Impuses are jompuses. Each jompus is brown. Every jompus is a rompus. Rompuses are nervous. Rompuses are zumpuses. Zumpuses are not fruity. Each zumpus is a tumpus. Sally is a wumpus.",
    "question": "Is the following statement true or false? Sally is fruity.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nNumpus(x) ::: x is a numpus\nSmall(x) ::: x is small\nYumpus(x) ::: x is a yumpus\nOpaque(x) ::: x is opaque\nDumpus(x) ::: x is a dumpus\nVumpus(x) ::: x is a vumpus\nFruity(x) ::: x is fruity\nTemperate(x) ::: x is temperate\nWumpus(x) ::: x is a wumpus\nSpicy(x) ::: x is spicy\nImpus(x) ::: x is an impus\nLuminous(x) ::: x is luminous\nJompus(x) ::: x is a jompus\nBrown(x) ::: x is brown\nRompus(x) ::: x is a rompus\nNervous(x) ::: x is nervous\nZumpus(x) ::: x is a zumpus\nTumpus(x) ::: x is a tumpus\nPremises:\n∀x (Numpus(x) → ¬Small(x)) ::: Numpuses are not small.\n∀x (Yumpus(x) → Opaque(x)) ::: Numpuses are yumpuses.\n∀x (Yumpus(x) → Dumpus(x)) ::: Each yumpus is a dumpus.\n∀x (Vumpus(x) → Fruity(x)) ::: Each vumpus is fruity.\n∀x (Dumpus(x) → ¬Temperate(x)) ::: Every dumpus is not temperate.\n∀x (Dumpus(x) → Wumpus(x)) ::: Dumpuses are wumpuses.\n∀x (Wumpus(x) → Spicy(x)) ::: Wumpuses are spicy.\n∀x (Wumpus(x) → Impus(x)) ::: Each wumpus is an impus.\n∀x (Impus(x) → Luminous(x)) ::: Every impus is luminous.\n∀x (Impus(x) → Jompus(x)) ::: Impuses are jompuses.\n∀x (Jompus(x) → Brown(x)) ::: Each jompus is brown.\n∀x (Jompus(x) → Rompus(x)) ::: Every jompus is a rompus.\n∀x (Rompus(x) → Nervous(x)) ::: Rompuses are nervous.\n∀x (Rompus(x) → Zumpus(x)) ::: Rompuses are zumpuses.\n∀x (Zumpus(x) → ¬Fruity(x)) ::: Zumpuses are not fruity.\n∀x (Zumpus(x) → Tumpus(x)) ::: Each zumpus is a tumpus.\nWumpus(sally) ::: Sally is a wumpus.\nConclusion:\nFruity(sally) ::: Sally is fruity.\n------"
    ]
  },
  {
    "id": "ProntoQA_187",
    "context": "Each zumpus is liquid. Dumpuses are not bitter. Each zumpus is a yumpus. Each yumpus is cold. Yumpuses are rompuses. Each rompus is nervous. Rompuses are tumpuses. Each tumpus is blue. Every tumpus is a jompus. Jompuses are transparent. Jompuses are impuses. Impuses are not floral. Impuses are vumpuses. Each vumpus is bitter. Every vumpus is a wumpus. Each wumpus is aggressive. Each wumpus is a numpus. Sam is a rompus.",
    "question": "Is the following statement true or false? Sam is bitter.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nZumpus(x) ::: x is a zumpus\nLiquid(x) ::: x is liquid\nDumpus(x) ::: x is a dumpus\nBitter(x) ::: x is bitter\nYumpus(x) ::: x is a yumpus\nCold(x) ::: x is cold\nRompus(x) ::: x is a rompus\nNervous(x) ::: x is nervous\nTumpus(x) ::: x is a tumpus\nBlue(x) ::: x is blue\nJompus(x) ::: x is a jompus\nTransparent(x) ::: x is transparent\nImpus(x) ::: x is an impus\nFloral(x) ::: x is floral\nVumpus(x) ::: x is a vumpus\nBitter(x) ::: x is bitter\nWumpus(x) ::: x is a wumpus\nAggressive(x) ::: x is aggressive\nNumpus(x) ::: x is a numpus\nSam(x) ::: x is Sam\nPremises:\n∀x (Zumpus(x) → Liquid(x)) ::: Each zumpus is liquid.\n∀x (Dumpus(x) → ¬Bitter(x)) ::: Dumpuses are not bitter.\n∀x (Zumpus(x) → Yumpus(x)) ::: Each zumpus is a yumpus.\n∀x (Yumpus(x) → Cold(x)) ::: Each yumpus is cold.\n∀x (Yumpus(x) → Rompus(x)) ::: Yumpuses are rompuses.\n∀x (Rompus(x) → Nervous(x)) ::: Each rompus is nervous.\n∀x (Rompus(x) → Tumpus(x)) ::: Rompuses are tumpuses.\n∀x (Tumpus(x) → Blue(x)) ::: Each tumpus is blue.\n∀x (Tumpus(x) → Jompus(x)) ::: Every tumpus is a jompus.\n∀x (Jompus(x) → Transparent(x)) ::: Jompuses are transparent.\n∀x (Jompus(x) → Impus(x)) ::: Jompuses are impuses.\n∀x (Impus(x) → ¬Floral(x)) ::: Impuses are not floral.\n∀x (Impus(x) → Vumpus(x)) ::: Impuses are vumpuses.\n∀x (Vumpus(x) → Bitter(x)) ::: Each vumpus is bitter.\n∀x (Vumpus(x) → Wumpus(x)) ::: Every vumpus is a wumpus.\n∀x (Wumpus(x) → Aggressive(x)) ::: Each wumpus is aggressive.\n∀x (Wumpus(x) → Numpus(x)) ::: Each wumpus is a numpus.\nRompus(sam) ::: Sam is a rompus.\nConclusion:\nBitter(sam) ::: Sam is bitter.\n------"
    ]
  },
  {
    "id": "ProntoQA_188",
    "context": "Every impus is bright. Every impus is a jompus. Every jompus is not opaque. Every jompus is a tumpus. Every tumpus is small. Tumpuses are vumpuses. Each vumpus is happy. Each vumpus is a yumpus. Each yumpus is not cold. Each yumpus is a numpus. Each wumpus is cold. Numpuses are blue. Numpuses are rompuses. Rompuses are not sour. Every rompus is a dumpus. Dumpuses are fruity. Dumpuses are zumpuses. Stella is an impus.",
    "question": "Is the following statement true or false? Stella is not cold.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nImpus(x) ::: x is an impus\nBright(x) ::: x is bright\nJompus(x) ::: x is a jompus\nOpaque(x) ::: x is opaque\nTumpus(x) ::: x is a tumpus\nSmall(x) ::: x is small\nVumpus(x) ::: x is a vumpus\nHappy(x) ::: x is happy\nYumpus(x) ::: x is a yumpus\nCold(x) ::: x is cold\nNumpus(x) ::: x is a numpus\nBlue(x) ::: x is blue\nRompus(x) ::: x is a rompus\nSour(x) ::: x is sour\nDumpus(x) ::: x is a dumpus\nFruity(x) ::: x is fruity\nZumpus(x) ::: x is a zumpus\nStella(x) ::: x is Stella\nPremises:\n∀x (Impus(x) → Bright(x)) ::: Every impus is bright.\n∀x (Impus(x) → Jompus(x)) ::: Every impus is a jompus.\n∀x (Jompus(x) → ¬Opaque(x)) ::: Every jompus is not opaque.\n∀x (Jompus(x) → Tumpus(x)) ::: Every jompus is a tumpus.\n∀x (Tumpus(x) → Small(x)) ::: Every tumpus is small.\n∀x (Tumpus(x) → Vumpus(x)) ::: Tumpuses are vumpuses.\n∀x (Vumpus(x) → Happy(x)) ::: Each vumpus is happy.\n∀x (Vumpus(x) → Yumpus(x)) ::: Each vumpus is a yumpus.\n∀x (Yumpus(x) → ¬Cold(x)) ::: Each yumpus is not cold.\n∀x (Yumpus(x) → Numpus(x)) ::: Each yumpus is a numpus.\n∀x (Wumpus(x) → Cold(x)) ::: Each wumpus is cold.\n∀x (Numpus(x) → Blue(x)) ::: Numpuses are blue.\n∀x (Numpus(x) → Rompus(x)) ::: Numpuses are rompuses.\n∀x (Rompus(x) → ¬Sour(x)) ::: Rompuses are not sour.\n∀x (Rompus(x) → Dumpus(x)) ::: Every rompus is a dumpus.\n∀x (Dumpus(x) → Fruity(x)) ::: Dumpuses are fruity.\n∀x (Dumpus(x) → Zumpus(x)) ::: Dumpuses are zumpuses.\nImpus(stella) ::: Stella is an impus.\nConclusion:\n¬Cold(stella) ::: Stella is not cold.\n------"
    ]
  },
  {
    "id": "ProntoQA_189",
    "context": "Each impus is nervous. Impuses are wumpuses. Wumpuses are wooden. Wumpuses are tumpuses. Zumpuses are dull. Each tumpus is not transparent. Each tumpus is a rompus. Rompuses are sweet. Each rompus is a vumpus. Each vumpus is not dull. Vumpuses are jompuses. Wren is an impus.",
    "question": "Is the following statement true or false? Wren is dull.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant.lpg\n------"
    ]
  },
  {
    "id": "ProntoQA_190",
    "context": "Yumpuses are not bitter. Yumpuses are jompuses. Every jompus is not brown. Each jompus is an impus. Impuses are temperate. Each impus is a wumpus. Wumpuses are not transparent. Each wumpus is a numpus. Numpuses are not nervous. Every numpus is a dumpus. Dumpuses are not small. Every dumpus is a tumpus. Tumpuses are wooden. Each tumpus is a rompus. Every rompus is earthy. Each rompus is a vumpus. Every zumpus is nervous. Max is a yumpus.",
    "question": "Is the following statement true or false? Max is nervous.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nYumpus(x) ::: x is a yumpus\nBitter(x) ::: x is bitter\nJompus(x) ::: x is a jompus\nBrown(x) ::: x is brown\nImpus(x) ::: x is an impus\nTemperate(x) ::: x is temperate\nWumpus(x) ::: x is a wumpus\nTransparent(x) ::: x is transparent\nNumpus(x) ::: x is a numpus\nNervous(x) ::: x is nervous\nDumpus(x) ::: x is a dumpus\nSmall(x) ::: x is small\nTumpus(x) ::: x is a tumpus\nWooden(x) ::: x is wooden\nRompus(x) ::: x is a rompus\nEarthy(x) ::: x is earthy\nVumpus(x) ::: x is a vumpus\nZumpus(x) ::: x is a zumpus\nNervous(x) ::: x is nervous\nPremises:\n∀x (Yumpus(x) → ¬Bitter(x)) ::: Yumpuses are not bitter.\n∀x (Jompus(x) → ¬Brown(x)) ::: Yumpuses are jompuses.\n∀x (Jompus(x) → Impus(x)) ::: Every jompus is an impus.\n∀x (Impus(x) → Temperate(x)) ::: Impuses are temperate.\n∀x (Impus(x) → Wumpus(x)) ::: Each impus is a wumpus.\n∀x (Wumpus(x) → ¬Transparent(x)) ::: Wumpuses are not transparent.\n∀x (Wumpus(x) → Numpus(x)) ::: Each wumpus is a numpus.\n∀x (Numpus(x) → ¬Nervous(x)) ::: Numpuses are not nervous.\n∀x (Numpus(x) → Dumpus(x)) ::: Every numpus is a dumpus.\n∀x (Dumpus(x) → ¬Small(x)) ::: Dumpuses are not small.\n∀x (Dumpus(x) → Tumpus(x)) ::: Every dumpus is a tumpus.\n∀x (Tumpus(x) → Wooden(x)) ::: Each tumpus is a rompus.\n∀x (Rompus(x) → Earthy(x)) ::: Each rompus is earthy.\n∀x (Rompus(x) → Vumpus(x)) ::: Each rompus is a vumpus.\n∀x (Zumpus(x) → Nervous(x)) ::: Every zumpus is nervous.\nYumpus(max) ::: Max is a yumpus.\nConclusion:\nNervous(max) ::: Max is nervous.\n------"
    ]
  },
  {
    "id": "ProntoQA_191",
    "context": "Every dumpus is spicy. Dumpuses are yumpuses. Each yumpus is liquid. Yumpuses are rompuses. Rompuses are small. Rompuses are zumpuses. Zumpuses are fruity. Each zumpus is a vumpus. Vumpuses are not happy. Every vumpus is an impus. Impuses are not hot. Every impus is a numpus. Each numpus is angry. Numpuses are jompuses. Jompuses are not opaque. Wumpuses are happy. Jompuses are tumpuses. Fae is a dumpus.",
    "question": "Is the following statement true or false? Fae is happy.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nDumpus(x) ::: x is a dumpus\nSpicy(x) ::: x is spicy\nYumpus(x) ::: x is a yumpus\nLiquid(x) ::: x is liquid\nRompus(x) ::: x is a rompus\nSmall(x) ::: x is small\nZumpus(x) ::: x is a zumpus\nFruity(x) ::: x is fruity\nVumpus(x) ::: x is a vumpus\nHappy(x) ::: x is happy\nImpus(x) ::: x is an impus\nHot(x) ::: x is hot\nNumpus(x) ::: x is a numpus\nAngry(x) ::: x is angry\nJompus(x) ::: x is a jompus\nOpaque(x) ::: x is opaque\nWumpus(x) ::: x is a wumpus\nHappy(x) ::: x is happy\nTumpus(x) ::: x is a tumpus\nPremises:\n∀x (Dumpus(x) → Spicy(x)) ::: Every dumpus is spicy.\n∀x (Yumpus(x) → Liquid(x)) ::: Dumpuses are yumpuses.\n∀x (Yumpus(x) → Rompus(x)) ::: Each yumpus is a rompus.\n∀x (Rompus(x) → Small(x)) ::: Rompuses are small.\n∀x (Rompus(x) → Zumpus(x)) ::: Rompuses are zumpuses.\n∀x (Zumpus(x) → Fruity(x)) ::: Zumpuses are fruity.\n∀x (Zumpus(x) → Vumpus(x)) ::: Each zumpus is a vumpus.\n∀x (Vumpus(x) → ¬Happy(x)) ::: Vumpuses are not happy.\n∀x (Vumpus(x) → Impus(x)) ::: Every vumpus is an impus.\n∀x (Impus(x) → ¬Hot(x)) ::: Impuses are not hot.\n∀x (Impus(x) → Numpus(x)) ::: Each impus is a numpus.\n∀x (Numpus(x) → Angry(x)) ::: Numpuses are angry.\n∀x (Numpus(x) → Jompus(x)) ::: Numpuses are jompuses.\n∀x (Jompus(x) → ¬Opaque(x)) ::: Jompuses are not opaque.\n∀x (Wumpus(x) → Happy(x)) ::: Wumpuses are happy.\n∀x (Jompus(x) → Tumpus(x)) ::: Jompuses are tumpuses.\nDumpus(fae) ::: Fae is a dumpus.\nConclusion:\nHappy(fae) ::: Fae is happy.\n------"
    ]
  },
  {
    "id": "ProntoQA_192",
    "context": "Numpuses are not wooden. Numpuses are wumpuses. Wumpuses are small. Wumpuses are rompuses. Rompuses are not floral. Rompuses are vumpuses. Each vumpus is blue. Jompuses are not dull. Each vumpus is a yumpus. Each yumpus is dull. Yumpuses are zumpuses. Sam is a numpus.",
    "question": "Is the following statement true or false? Sam is not dull.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant.lpg\n------"
    ]
  },
  {
    "id": "ProntoQA_193",
    "context": "Every numpus is not kind. Every numpus is a jompus. Jompuses are nervous. Jompuses are zumpuses. Zumpuses are large. Zumpuses are vumpuses. Vumpuses are fruity. Wumpuses are not red. Vumpuses are rompuses. Rompuses are not wooden. Each rompus is an impus. Every impus is dull. Each impus is a dumpus. Every dumpus is sweet. Every dumpus is a yumpus. Every yumpus is red. Each yumpus is a tumpus. Wren is a vumpus.",
    "question": "Is the following statement true or false? Wren is not red.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nNumpus(x) ::: x is a numpus\nKind(x) ::: x is kind\nJompus(x) ::: x is a jompus\nNervous(x) ::: x is nervous\nZumpus(x) ::: x is a zumpus\nLarge(x) ::: x is large\nVumpus(x) ::: x is a vumpus\nFruity(x) ::: x is fruity\nWumpus(x) ::: x is a wumpus\nRed(x) ::: x is red\nRompus(x) ::: x is a rompus\nWooden(x) ::: x is wooden\nImpus(x) ::: x is an impus\nDull(x) ::: x is dull\nDumpus(x) ::: x is a dumpus\nSweet(x) ::: x is sweet\nYumpus(x) ::: x is a yumpus\nTumpus(x) ::: x is a tumpus\nWren(x) ::: x is Wren\nPremises:\n∀x (Numpus(x) → ¬Kind(x)) ::: Every numpus is not kind.\n∀x (Numpus(x) → Jompus(x)) ::: Every numpus is a jompus.\n∀x (Jompus(x) → Nervous(x)) ::: Jompuses are nervous.\n∀x (Jompus(x) → Zumpus(x)) ::: Jompuses are zumpuses.\n∀x (Zumpus(x) → Large(x)) ::: Zumpuses are large.\n∀x (Zumpus(x) → Vumpus(x)) ::: Zumpuses are vumpuses.\n∀x (Vumpus(x) → Fruity(x)) ::: Vumpuses are fruity.\n∀x (Wumpus(x) → ¬Red(x)) ::: Wumpuses are not red.\n∀x (Vumpus(x) → Rompus(x)) ::: Vumpuses are rompuses.\n∀x (Rompus(x) → ¬Wooden(x)) ::: Rompuses are not wooden.\n∀x (Rompus(x) → Impus(x)) ::: Each rompus is an impus.\n∀x (Impus(x) → Dull(x)) ::: Every impus is dull.\n∀x (Impus(x) → Dumpus(x)) ::: Each impus is a dumpus.\n∀x (Dumpus(x) → Sweet(x)) ::: Every dumpus is sweet.\n∀x (Dumpus(x) → Yumpus(x)) ::: Every dumpus is a yumpus.\n∀x (Yumpus(x) → Red(x)) ::: Every yumpus is red.\n∀x (Yumpus(x) → Tumpus(x)) ::: Every yumpus is a tumpus.\nVumpus(wren) ::: Wren is a vumpus.\nConclusion:\n¬Red(wren) ::: Wren is not red.\n------"
    ]
  },
  {
    "id": "ProntoQA_194",
    "context": "Rompuses are small. Each rompus is a zumpus. Every zumpus is not bright. Zumpuses are vumpuses. Every vumpus is cold. Vumpuses are impuses. Impuses are not opaque. Every impus is a jompus. Jompuses are earthy. Each jompus is a yumpus. Yumpuses are spicy. Yumpuses are numpuses. Numpuses are liquid. Numpuses are dumpuses. Each dumpus is not angry. Every dumpus is a tumpus. Every wumpus is not earthy. Max is a rompus.",
    "question": "Is the following statement true or false? Max is not earthy.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nRompus(x) ::: x is a rompus\nSmall(x) ::: x is small\nZumpus(x) ::: x is a zumpus\nBright(x) ::: x is bright\nVumpus(x) ::: x is a vumpus\nCold(x) ::: x is cold\nImpus(x) ::: x is an impus\nOpaque(x) ::: x is opaque\nJompus(x) ::: x is a jompus\nEarthy(x) ::: x is earthy\nYumpus(x) ::: x is a yumpus\nSpicy(x) ::: x is spicy\nNumpus(x) ::: x is a numpus\nLiquid(x) ::: x is liquid\nDumpus(x) ::: x is a dumpus\nAngry(x) ::: x is angry\nTumpus(x) ::: x is a tumpus\nWumpus(x) ::: x is a wumpus\nEarthy(x) ::: x is earthy\nPremises:\n∀x (Rompus(x) → Small(x)) ::: Rompuses are small.\n∀x (Zumpus(x) → ¬Bright(x)) ::: Each rompus is a zumpus. Every zumpus is not bright.\n∀x (Vumpus(x) → Cold(x)) ::: Zumpuses are vumpuses. Every vumpus is cold.\n∀x (Vumpus(x) → Impus(x)) ::: Vumpuses are impuses.\n∀x (Impus(x) → ¬Opaque(x)) ::: Impuses are not opaque.\n∀x (Impus(x) → Jompus(x)) ::: Every impus is a jompus.\n∀x (Jompus(x) → Earthy(x)) ::: Jompuses are earthy.\n∀x (Jompus(x) → Yumpus(x)) ::: Each jompus is a yumpus.\n∀x (Yumpus(x) → Spicy(x)) ::: Yumpuses are spicy.\n∀x (Yumpus(x) → Numpus(x)) ::: Yumpuses are numpuses.\n∀x (Numpus(x) → Liquid(x)) ::: Numpuses are liquid.\n∀x (Numpus(x) → Dumpus(x)) ::: Numpuses are dumpuses.\n∀x (Dumpus(x) → ¬Angry(x)) ::: Each dumpus is not angry.\n∀x (Dumpus(x) → Tumpus(x)) ::: Every dumpus is a tumpus.\n∀x (Wumpus(x) → ¬Earthy(x)) ::: Every wumpus is not earthy.\nRompus(max) ::: Max is a rompus.\nConclusion:\n¬Earthy(max) ::: Max is not earthy.\n------"
    ]
  },
  {
    "id": "ProntoQA_195",
    "context": "Every rompus is not transparent. Rompuses are jompuses. Every jompus is luminous. Jompuses are numpuses. Every numpus is hot. Numpuses are vumpuses. Vumpuses are bright. Each vumpus is a yumpus. Every yumpus is not fruity. Zumpuses are not spicy. Yumpuses are wumpuses. Wumpuses are small. Wumpuses are impuses. Every impus is spicy. Impuses are dumpuses. Dumpuses are not kind. Dumpuses are tumpuses. Fae is a numpus.",
    "question": "Is the following statement true or false? Fae is not spicy.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "------\n### Predicates:\nRompus(x) ::: x is a rompus\nTransparent(x) ::: x is transparent\nJompus(x) ::: x is a jompus\nLuminous(x) ::: x is luminous\nNumpus(x) ::: x is a numpus\nHot(x) ::: x is hot\nVumpus(x) ::: x is a vumpus\nBright(x) ::: x is bright\nYumpus(x) ::: x is a yumpus\nFruity(x) ::: x is fruity\nZumpus(x) ::: x is a zumpus\nSpicy(x) ::: x is spicy\nWumpus(x) ::: x is a wumpus\nSmall(x) ::: x is small\nImpus(x) ::: x is an impus\nSpicy(x) ::: x is spicy\nDumpus(x) ::: x is a dumpus\nKind(x) ::: x is kind\nTumpus(x) ::: x is a tumpus\nPremises:\n∀x (Rompus(x) → ¬Transparent(x)) ::: Every rompus is not transparent.\n∀x (Jompus(x) → Luminous(x)) ::: Rompuses are jompuses.\n∀x (Jompus(x) → Numpus(x)) ::: Every jompus is a numpus.\n∀x (Numpus(x) → Hot(x)) ::: Every numpus is hot.\n∀x (Numpus(x) → Vumpus(x)) ::: Numpuses are vumpuses.\n∀x (Vumpus(x) → Bright(x)) ::: Vumpuses are bright.\n∀x (Vumpus(x) → Yumpus(x)) ::: Each vumpus is a yumpus.\n∀x (Yumpus(x) → ¬Fruity(x)) ::: Yumpuses are not fruity.\n∀x (Zumpus(x) → ¬Spicy(x)) ::: Zumpuses are not spicy.\n∀x (Yumpus(x) → Wumpus(x)) ::: Yumpuses are wumpuses.\n∀x (Wumpus(x) → Small(x)) ::: Wumpuses are small.\n∀x (Wumpus(x) → Impus(x)) ::: Wumpuses are impuses.\n∀x (Impus(x) → Spicy(x)) ::: Every impus is spicy.\n∀x (Impus(x) → Dumpus(x)) ::: Impuses are dumpuses.\n∀x (Dumpus(x) → ¬Kind(x)) ::: Dumpuses are not kind.\n∀x (Dumpus(x) → Tumpus(x)) ::: Dumpuses are tumpuses.\nNumpus(fae) ::: Fae is a numpus.\nConclusion:\n¬Spicy(fae) ::: Fae is not spicy.\n------"
    ]
  },
  {
    "id": "ProntoQA_196",
    "context": "Vumpuses are not hot. Vumpuses are zumpuses. Each zumpus is opaque. Zumpuses are tumpuses. Tumpuses are not small. Each tumpus is a yumpus. Numpuses are not feisty. Yumpuses are sour. Yumpuses are jompuses. Jompuses are not orange. Jompuses are rompuses. Every rompus is feisty. Each rompus is a wumpus. Every wumpus is mean. Wumpuses are dumpuses. Dumpuses are not dull. Dumpuses are impuses. Fae is a zumpus.",
    "question": "Is the following statement true or false? Fae is not feisty.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nVumpus(x) ::: x is a vumpus\nHot(x) ::: x is hot\nZumpus(x) ::: x is a zumpus\nOpaque(x) ::: x is opaque\nTumpus(x) ::: x is a tumpus\nSmall(x) ::: x is small\nYumpus(x) ::: x is a yumpus\nNumpus(x) ::: x is a numpus\nFeisty(x) ::: x is feisty\nSour(x) ::: x is sour\nJompus(x) ::: x is a jompus\nOrange(x) ::: x is orange\nRompus(x) ::: x is a rompus\nFeisty(x) ::: x is feisty\nWumpus(x) ::: x is a wumpus\nMean(x) ::: x is mean\nDull(x) ::: x is dull\nImpus(x) ::: x is an impus\nPremises:\n∀x (Vumpus(x) → ¬Hot(x)) ::: Vumpuses are not hot.\n∀x (Zumpus(x) → Opaque(x)) ::: Zumpuses are opaque.\n∀x (Zumpus(x) → Tumpus(x)) ::: Each zumpus is a tumpus.\n∀x (Tumpus(x) → ¬Small(x)) ::: Tumpuses are not small.\n∀x (Tumpus(x) → Yumpus(x)) ::: Each tumpus is a yumpus.\n∀x (Numpus(x) → ¬Feisty(x)) ::: Numpuses are not feisty.\n∀x (Yumpus(x) → Sour(x)) ::: Yumpuses are sour.\n∀x (Yumpus(x) → Jompus(x)) ::: Yumpuses are jompuses.\n∀x (Jompus(x) → ¬Orange(x)) ::: Jompuses are not orange.\n∀x (Jompus(x) → Rompus(x)) ::: Jompuses are rompuses.\n∀x (Rompus(x) → Feisty(x)) ::: Every rompus is feisty.\n∀x (Rompus(x) → Wumpus(x)) ::: Each rompus is a wumpus.\n∀x (Wumpus(x) → Mean(x)) ::: Wumpuses are mean.\n∀x (Wumpus(x) → Dumpus(x)) ::: Wumpuses are dumpuses.\n∀x (Dumpus(x) → ¬Dull(x)) ::: Dumpuses are not dull.\n∀x (Dumpus(x) → Impus(x)) ::: Dumpuses are impuses.\nZumpus(fae) ::: Fae is a zumpus.\nConclusion:\n¬Feisty(fae) ::: Fae is not feisty.\n------"
    ]
  },
  {
    "id": "ProntoQA_197",
    "context": "Jompuses are kind. Every vumpus is feisty. Vumpuses are zumpuses. Every zumpus is temperate. Every zumpus is a rompus. Rompuses are small. Each rompus is a dumpus. Every dumpus is earthy. Every dumpus is a numpus. Numpuses are liquid. Numpuses are wumpuses. Wumpuses are dull. Each wumpus is a tumpus. Every tumpus is red. Every tumpus is an impus. Each impus is not kind. Each impus is a yumpus. Alex is a dumpus.",
    "question": "Is the following statement true or false? Alex is kind.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nJompus(x) ::: x is a jompus\nKind(x) ::: x is kind\nVumpus(x) ::: x is a vumpus\nFeisty(x) ::: x is feisty\nZumpus(x) ::: x is a zumpus\nTemperate(x) ::: x is temperate\nRompus(x) ::: x is a rompus\nSmall(x) ::: x is small\nDumpus(x) ::: x is a dumpus\nEarthy(x) ::: x is earthy\nNumpus(x) ::: x is a numpus\nLiquid(x) ::: x is liquid\nWumpus(x) ::: x is a wumpus\nDull(x) ::: x is dull\nTumpus(x) ::: x is a tumpus\nRed(x) ::: x is red\nImpus(x) ::: x is an impus\nYumpus(x) ::: x is a yumpus\nPremises:\n∀x (Jompus(x) → Kind(x)) ::: Jompuses are kind.\n∀x (Vumpus(x) → Feisty(x)) ::: Every vumpus is feisty.\n∀x (Vumpus(x) → Zumpus(x)) ::: Vumpuses are zumpuses.\n∀x (Zumpus(x) → Temperate(x)) ::: Every zumpus is temperate.\n∀x (Zumpus(x) → Rompus(x)) ::: Every zumpus is a rompus.\n∀x (Rompus(x) → Small(x)) ::: Rompuses are small.\n∀x (Rompus(x) → Dumpus(x)) ::: Each rompus is a dumpus.\n∀x (Dumpus(x) → Earthy(x)) ::: Every dumpus is earthy.\n∀x (Dumpus(x) → Numpus(x)) ::: Every dumpus is a numpus.\n∀x (Numpus(x) → Liquid(x)) ::: Numpuses are liquid.\n∀x (Numpus(x) → Wumpus(x)) ::: Numpuses are wumpuses.\n∀x (Wumpus(x) → Dull(x)) ::: Wumpuses are dull.\n∀x (Wumpus(x) → Tumpus(x)) ::: Each wumpus is a tumpus.\n∀x (Tumpus(x) → Red(x)) ::: Every tumpus is red.\n∀x (Tumpus(x) → Impus(x)) ::: Every tumpus is an impus.\n∀x (Impus(x) → ¬Kind(x)) ::: Each impus is not kind.\n∀x (Impus(x) → Yumpus(x)) ::: Each impus is a yumpus.\nDumpus(alex) ::: Alex is a dumpus.\nConclusion:\nKind(alex) ::: Alex is kind.\n------"
    ]
  },
  {
    "id": "ProntoQA_198",
    "context": "Each jompus is floral. Jompuses are vumpuses. Vumpuses are feisty. Each vumpus is a tumpus. Each tumpus is not amenable. Every tumpus is a numpus. Each numpus is temperate. Each numpus is a wumpus. Every wumpus is not small. Every wumpus is an impus. Impuses are not spicy. Yumpuses are small. Every impus is a rompus. Each rompus is transparent. Rompuses are dumpuses. Each dumpus is brown. Dumpuses are zumpuses. Wren is a jompus.",
    "question": "Is the following statement true or false? Wren is small.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nJompus(x) ::: x is a jompus\nFloral(x) ::: x is floral\nVumpus(x) ::: x is a vumpus\nFeisty(x) ::: x is feisty\nTumpus(x) ::: x is a tumpus\nAmenable(x) ::: x is amenable\nNumpus(x) ::: x is a numpus\nTemperate(x) ::: x is temperate\nWumpus(x) ::: x is a wumpus\nSmall(x) ::: x is small\nImpus(x) ::: x is an impus\nSpicy(x) ::: x is spicy\nRompus(x) ::: x is a rompus\nTransparent(x) ::: x is transparent\nDumpus(x) ::: x is a dumpus\nBrown(x) ::: x is brown\nZumpus(x) ::: x is a zumpus\nPremises:\n∀x (Jompus(x) → Floral(x)) ::: Each jompus is floral.\n∀x (Jompus(x) → Vumpus(x)) ::: Jompuses are vumpuses.\n∀x (Vumpus(x) → Feisty(x)) ::: Vumpuses are feisty.\n∀x (Vumpus(x) → Tumpus(x)) ::: Each vumpus is a tumpus.\n∀x (Tumpus(x) → ¬Amenable(x)) ::: Each tumpus is not amenable.\n∀x (Tumpus(x) → Numpus(x)) ::: Every tumpus is a numpus.\n∀x (Numpus(x) → Temperate(x)) ::: Each numpus is temperate.\n∀x (Numpus(x) → Wumpus(x)) ::: Each numpus is a wumpus.\n∀x (Wumpus(x) → ¬Small(x)) ::: Every wumpus is not small.\n∀x (Wumpus(x) → Impus(x)) ::: Every wumpus is an impus.\n∀x (Impus(x) → ¬Spicy(x)) ::: Impuses are not spicy.\n∀x (Yumpus(x) → Small(x)) ::: Yumpuses are small.\n∀x (Impus(x) → Rompus(x)) ::: Each impus is a rompus.\n∀x (Rompus(x) → Transparent(x)) ::: Each rompus is transparent.\n∀x (Rompus(x) → Dumpus(x)) ::: Rompuses are dumpuses.\n∀x (Dumpus(x) → Brown(x)) ::: Each dumpus is brown.\n∀x (Dumpus(x) → Zumpus(x)) ::: Dumpuses are zumpuses.\nJompus(wren) ::: Wren is a jompus.\nConclusion:\nSmall(wren) ::: Wren is small.\n------"
    ]
  },
  {
    "id": "ProntoQA_199",
    "context": "Zumpuses are not large. Every zumpus is a wumpus. Wumpuses are not orange. Every wumpus is a jompus. Jompuses are earthy. Every jompus is a rompus. Every rompus is metallic. Rompuses are dumpuses. Every dumpus is mean. Dumpuses are numpuses. Each numpus is sweet. Numpuses are impuses. Each impus is temperate. Impuses are yumpuses. Tumpuses are opaque. Each yumpus is not opaque. Yumpuses are vumpuses. Alex is a rompus.",
    "question": "Is the following statement true or false? Alex is opaque.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nZumpus(x) ::: x is a zumpus\nLarge(x) ::: x is large\nWumpus(x) ::: x is a wumpus\nOrange(x) ::: x is orange\nJompus(x) ::: x is a jompus\nEarthy(x) ::: x is earthy\nRompus(x) ::: x is a rompus\nMetallic(x) ::: x is metallic\nDumpus(x) ::: x is a dumpus\nMean(x) ::: x is mean\nNumpus(x) ::: x is a numpus\nSweet(x) ::: x is sweet\nImpus(x) ::: x is an impus\nTemperate(x) ::: x is temperate\nYumpus(x) ::: x is a yumpus\nTumpus(x) ::: x is a tumpus\nOpaque(x) ::: x is opaque\nVumpus(x) ::: x is a vumpus\nPremises:\n∀x (Zumpus(x) → ¬Large(x)) ::: Zumpuses are not large.\n∀x (Zumpus(x) → Wumpus(x)) ::: Every zumpus is a wumpus.\n∀x (Wumpus(x) → ¬Orange(x)) ::: Wumpuses are not orange.\n∀x (Wumpus(x) → Jompus(x)) ::: Every wumpus is a jompus.\n∀x (Jompus(x) → Earthy(x)) ::: Jompuses are earthy.\n∀x (Jompus(x) → Rompus(x)) ::: Every jompus is a rompus.\n∀x (Rompus(x) → Metallic(x)) ::: Every rompus is metallic.\n∀x (Rompus(x) → Dumpus(x)) ::: Rompuses are dumpuses.\n∀x (Dumpus(x) → Mean(x)) ::: Every dumpus is mean.\n∀x (Dumpus(x) → Numpus(x)) ::: Dumpuses are numpuses.\n∀x (Numpus(x) → Sweet(x)) ::: Each numpus is sweet.\n∀x (Numpus(x) → Impus(x)) ::: Numpuses are impuses.\n∀x (Impus(x) → Temperate(x)) ::: Each impus is temperate.\n∀x (Impus(x) → Yumpus(x)) ::: Impuses are yumpuses.\n∀x (Tumpus(x) → Opaque(x)) ::: Tumpuses are opaque.\n∀x (Yumpus(x) → ¬Opaque(x)) ::: Each yumpus is not opaque.\n∀x (Yumpus(x) → Vumpus(x)) ::: Yumpuses are vumpuses.\nRompus(alex) ::: Alex is a rompus.\nConclusion:\nOpaque(alex) ::: Alex is opaque.\n------"
    ]
  },
  {
    "id": "ProntoQA_200",
    "context": "Zumpuses are orange. Zumpuses are wumpuses. Each wumpus is temperate. Wumpuses are yumpuses. Each yumpus is fruity. Yumpuses are numpuses. Numpuses are small. Numpuses are vumpuses. Jompuses are transparent. Each vumpus is not transparent. Vumpuses are rompuses. Rex is a zumpus.",
    "question": "Is the following statement true or false? Rex is not transparent.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nZumpus(x) ::: x is a zumpus\nOrange(x) ::: x is orange\nWumpus(x) ::: x is a wumpus\nTemperate(x) ::: x is temperate\nYumpus(x) ::: x is a yumpus\nFruity(x) ::: x is fruity\nNumpus(x) ::: x is a numpus\nSmall(x) ::: x is small\nVumpus(x) ::: x is a vumpus\nRompus(x) ::: x is a rompus\nRex(x) ::: x is Rex\nPremises:\n∀x (Zumpus(x) → Orange(x)) ::: Zumpuses are orange.\n∀x (Zumpus(x) → Wumpus(x)) ::: Zumpuses are wumpuses.\n∀x (Wumpus(x) → Temperate(x)) ::: Each wumpus is temperate.\n∀x (Yumpus(x) → Fruity(x)) ::: Yumpuses are fruity.\n∀x (Yumpus(x) → Numpus(x)) ::: Yumpuses are numpuses.\n∀x (Numpus(x) → Small(x)) ::: Numpuses are small.\n∀x (Numpus(x) → Vumpus(x)) ::: Numpuses are vumpuses.\n∀x (Jompus(x) → Transparent(x)) ::: Jompuses are transparent.\n∀x (Vumpus(x) → ¬Transparent(x)) ::: Each vumpus is not transparent.\n∀x (Vumpus(x) → Rompus(x)) ::: Vumpuses are rompuses.\nZumpus(rex) ::: Rex is a zumpus.\nConclusion:\n¬Transparent(rex) ::: Rex is not transparent.\n------"
    ]
  },
  {
    "id": "ProntoQA_201",
    "context": "Every vumpus is large. Vumpuses are yumpuses. Each yumpus is happy. Every yumpus is a zumpus. Every zumpus is blue. Zumpuses are impuses. Each tumpus is not wooden. Every impus is floral. Impuses are dumpuses. Dumpuses are not bright. Dumpuses are jompuses. Each jompus is not bitter. Each jompus is a wumpus. Wumpuses are not opaque. Each wumpus is a rompus. Every rompus is wooden. Every rompus is a numpus. Sally is an impus.",
    "question": "Is the following statement true or false? Sally is not wooden.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nVumpus(x) ::: x is a vumpus\nLarge(x) ::: x is large\nYumpus(x) ::: x is a yumpus\nHappy(x) ::: x is happy\nZumpus(x) ::: x is a zumpus\nBlue(x) ::: x is blue\nImpus(x) ::: x is an impus\nFloral(x) ::: x is floral\nDumpus(x) ::: x is a dumpus\nBright(x) ::: x is bright\nJompus(x) ::: x is a jompus\nBitter(x) ::: x is bitter\nWumpus(x) ::: x is a wumpus\nOpaque(x) ::: x is opaque\nRompus(x) ::: x is a rompus\nWooden(x) ::: x is wooden\nNumpus(x) ::: x is a numpus\nPremises:\n∀x (Vumpus(x) → Large(x)) ::: Every vumpus is large.\n∀x (Vumpus(x) → Yumpus(x)) ::: Vumpuses are yumpuses.\n∀x (Yumpus(x) → Happy(x)) ::: Each yumpus is happy.\n∀x (Zumpus(x) → Blue(x)) ::: Every zumpus is blue.\n∀x (Zumpus(x) → Impus(x)) ::: Zumpuses are impuses.\n∀x (Tumpus(x) → ¬Wooden(x)) ::: Each tumpus is not wooden.\n∀x (Impus(x) → Floral(x)) ::: Impuses are floral.\n∀x (Impus(x) → Dumpus(x)) ::: Impuses are dumpuses.\n∀x (Dumpus(x) → ¬Bright(x)) ::: Dumpuses are not bright.\n∀x (Dumpus(x) → Jompus(x)) ::: Dumpuses are jompuses.\n∀x (Jompus(x) → ¬Bitter(x)) ::: Each jompus is not bitter.\n∀x (Jompus(x) → Wumpus(x)) ::: Each jompus is a wumpus.\n∀x (Wumpus(x) → ¬Opaque(x)) ::: Wumpuses are not opaque.\n∀x (Wumpus(x) → Rompus(x)) ::: Each wumpus is a rompus.\n∀x (Rompus(x) → Wooden(x)) ::: Every rompus is wooden.\n∀x (Rompus(x) → Numpus(x)) ::: Every rompus is a numpus.\nImpus(sally) ::: Sally is an impus.\nConclusion:\n¬Wooden(sally) ::: Sally is not wooden.\n------"
    ]
  },
  {
    "id": "ProntoQA_202",
    "context": "Tumpuses are temperate. Tumpuses are impuses. Every impus is orange. Impuses are yumpuses. Each yumpus is shy. Yumpuses are zumpuses. Zumpuses are bright. Every zumpus is a rompus. Every numpus is opaque. Rompuses are small. Every rompus is a dumpus. Dumpuses are not floral. Each dumpus is a wumpus. Each wumpus is aggressive. Wumpuses are vumpuses. Each vumpus is not opaque. Every vumpus is a jompus. Wren is a zumpus.",
    "question": "Is the following statement true or false? Wren is opaque.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nTumpus(x) ::: x is a tumpus\nTemperate(x) ::: x is temperate\nImpus(x) ::: x is an impus\nOrange(x) ::: x is orange\nYumpus(x) ::: x is a yumpus\nShy(x) ::: x is shy\nZumpus(x) ::: x is a zumpus\nBright(x) ::: x is bright\nRompus(x) ::: x is a rompus\nNumpus(x) ::: x is a numpus\nOpaque(x) ::: x is opaque\nSmall(x) ::: x is small\nDumpus(x) ::: x is a dumpus\nFloral(x) ::: x is floral\nWumpus(x) ::: x is a wumpus\nAggressive(x) ::: x is aggressive\nVumpus(x) ::: x is a vumpus\nJompus(x) ::: x is a jompus\nPremises:\n∀x (Tumpus(x) → Temperate(x)) ::: Tumpuses are temperate.\n∀x (Tumpus(x) → Impus(x)) ::: Tumpuses are impuses.\n∀x (Impus(x) → Orange(x)) ::: Every impus is orange.\n∀x (Yumpus(x) → Shy(x)) ::: Yumpuses are shy.\n∀x (Yumpus(x) → Zumpus(x)) ::: Yumpuses are zumpuses.\n∀x (Zumpus(x) → Bright(x)) ::: Zumpuses are bright.\n∀x (Zumpus(x) → Rompus(x)) ::: Every zumpus is a rompus.\n∀x (Numpus(x) → Opaque(x)) ::: Every numpus is opaque.\n∀x (Rompus(x) → Small(x)) ::: Rompuses are small.\n∀x (Rompus(x) → Dumpus(x)) ::: Every rompus is a dumpus.\n∀x (Dumpus(x) → ¬Floral(x)) ::: Dumpuses are not floral.\n∀x (Dumpus(x) → Wumpus(x)) ::: Each dumpus is a wumpus.\n∀x (Wumpus(x) → Aggressive(x)) ::: Wumpuses are aggressive.\n∀x (Wumpus(x) → Vumpus(x)) ::: Wumpuses are vumpuses.\n∀x (Vumpus(x) → ¬Opaque(x)) ::: Each vumpus is not opaque.\n∀x (Vumpus(x) → Jompus(x)) ::: Every vumpus is a jompus.\nZumpus(wren) ::: Wren is a zumpus.\nConclusion:\nOpaque(wren) ::: Wren is opaque.\n------"
    ]
  },
  {
    "id": "ProntoQA_203",
    "context": "Each tumpus is liquid. Tumpuses are yumpuses. Yumpuses are not temperate. Yumpuses are vumpuses. Vumpuses are angry. Vumpuses are zumpuses. Zumpuses are red. Zumpuses are rompuses. Each rompus is shy. Rompuses are dumpuses. Every dumpus is not small. Dumpuses are numpuses. Every numpus is not spicy. Numpuses are impuses. Every jompus is not shy. Impuses are not earthy. Each impus is a wumpus. Alex is a tumpus.",
    "question": "Is the following statement true or false? Alex is shy.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nTumpus(x) ::: x is a tumpus\nLiquid(x) ::: x is liquid\nYumpus(x) ::: x is a yumpus\nTemperate(x) ::: x is temperate\nVumpus(x) ::: x is a vumpus\nAngry(x) ::: x is angry\nZumpus(x) ::: x is a zumpus\nRed(x) ::: x is red\nRompus(x) ::: x is a rompus\nShy(x) ::: x is shy\nDumpus(x) ::: x is a dumpus\nSmall(x) ::: x is small\nNumpus(x) ::: x is a numpus\nSpicy(x) ::: x is spicy\nImpus(x) ::: x is an impus\nEarthy(x) ::: x is earthy\nWumpus(x) ::: x is a wumpus\nPremises:\n∀x (Tumpus(x) → Liquid(x)) ::: Each tumpus is liquid.\n∀x (Tumpus(x) → Yumpus(x)) ::: Tumpuses are yumpuses.\n∀x (Yumpus(x) → ¬Temperate(x)) ::: Yumpuses are not temperate.\n∀x (Yumpus(x) → Vumpus(x)) ::: Yumpuses are vumpuses.\n∀x (Vumpus(x) → Angry(x)) ::: Vumpuses are angry.\n∀x (Vumpus(x) → Zumpus(x)) ::: Vumpuses are zumpuses.\n∀x (Zumpus(x) → Red(x)) ::: Zumpuses are red.\n∀x (Zumpus(x) → Rompus(x)) ::: Zumpuses are rompuses.\n∀x (Rompus(x) → Shy(x)) ::: Each rompus is shy.\n∀x (Dumpus(x) → ¬Small(x)) ::: Every dumpus is not small.\n∀x (Dumpus(x) → Numpus(x)) ::: Dumpuses are numpuses.\n∀x (Numpus(x) → ¬Spicy(x)) ::: Every numpus is not spicy.\n∀x (Numpus(x) → Impus(x)) ::: Numpuses are impuses.\n∀x (Impus(x) → ¬Earthy(x)) ::: Every impus is not earthy.\n∀x (Impus(x) → Wumpus(x)) ::: Each impus is a wumpus.\nTumpus(alex) ::: Alex is a tumpus.\nConclusion:\nShy(alex) ::: Alex is shy.\n------"
    ]
  },
  {
    "id": "ProntoQA_204",
    "context": "Jompuses are red. Jompuses are wumpuses. Each wumpus is not dull. Every wumpus is a yumpus. Every yumpus is hot. Every yumpus is an impus. Dumpuses are not feisty. Each impus is spicy. Every impus is a rompus. Every rompus is feisty. Rompuses are tumpuses. Sam is a jompus.",
    "question": "Is the following statement true or false? Sam is not feisty.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nJompus(x) ::: x is a jompus\nRed(x) ::: x is red\nWumpus(x) ::: x is a wumpus\nDull(x) ::: x is dull\nYumpus(x) ::: x is a yumpus\nHot(x) ::: x is hot\nImpus(x) ::: x is an impus\nDumpus(x) ::: x is a dumpus\nFeisty(x) ::: x is feisty\nSpicy(x) ::: x is spicy\nRompus(x) ::: x is a rompus\nTumpus(x) ::: x is a tumpus\nSam(x) ::: x is Sam\nPremises:\n∀x (Jompus(x) → Red(x)) ::: Jompuses are red.\n∀x (Jompus(x) → Wumpus(x)) ::: Jompuses are wumpuses.\n∀x (Wumpus(x) → ¬Dull(x)) ::: Each wumpus is not dull.\n∀x (Yumpus(x) → Hot(x)) ::: Every yumpus is hot.\n∀x (Yumpus(x) → Impus(x)) ::: Every yumpus is an impus.\n∀x (Dumpus(x) → ¬Feisty(x)) ::: Dumpuses are not feisty.\n∀x (Impus(x) → Spicy(x)) ::: Each impus is spicy.\n∀x (Impus(x) → Rompus(x)) ::: Every impus is a rompus.\n∀x (Rompus(x) → Feisty(x)) ::: Every rompus is feisty.\n∀x (Rompus(x) → Tumpus(x)) ::: Rompuses are tumpuses.\nJompus(sam) ::: Sam is a jompus.\nConclusion:\n¬Feisty(sam) ::: Sam is not feisty.\n------"
    ]
  },
  {
    "id": "ProntoQA_205",
    "context": "Impuses are hot. Impuses are rompuses. Rompuses are small. Rompuses are jompuses. Jompuses are dull. Every jompus is a zumpus. Zumpuses are not kind. Every zumpus is a numpus. Numpuses are nervous. Numpuses are vumpuses. Vumpuses are not fruity. Every vumpus is a dumpus. Wumpuses are fruity. Each dumpus is not wooden. Each dumpus is a tumpus. Tumpuses are not blue. Every tumpus is a yumpus. Stella is a rompus.",
    "question": "Is the following statement true or false? Stella is fruity.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nImpus(x) ::: x is an impus\nHot(x) ::: x is hot\nRompus(x) ::: x is a rompus\nSmall(x) ::: x is small\nJompus(x) ::: x is a jompus\nDull(x) ::: x is dull\nZumpus(x) ::: x is a zumpus\nKind(x) ::: x is kind\nNumpus(x) ::: x is a numpus\nNervous(x) ::: x is nervous\nVumpus(x) ::: x is a vumpus\nFruity(x) ::: x is fruity\nDumpus(x) ::: x is a dumpus\nWooden(x) ::: x is wooden\nBlue(x) ::: x is blue\nYumpus(x) ::: x is a yumpus\nStella(x) ::: x is Stella\nPremises:\n∀x (Impus(x) → Hot(x)) ::: Impuses are hot.\n∀x (Impus(x) → Rompus(x)) ::: Impuses are rompuses.\n∀x (Rompus(x) → Small(x)) ::: Rompuses are small.\n∀x (Rompus(x) → Jompus(x)) ::: Rompuses are jompuses.\n∀x (Jompus(x) → Dull(x)) ::: Jompuses are dull.\n∀x (Jompus(x) → Zumpus(x)) ::: Every jompus is a zumpus.\n∀x (Zumpus(x) → ¬Kind(x)) ::: Zumpuses are not kind.\n∀x (Zumpus(x) → Numpus(x)) ::: Every zumpus is a numpus.\n∀x (Numpus(x) → Nervous(x)) ::: Numpuses are nervous.\n∀x (Numpus(x) → Vumpus(x)) ::: Numpuses are vumpuses.\n∀x (Vumpus(x) → ¬Fruity(x)) ::: Vumpuses are not fruity.\n∀x (Vumpus(x) → Dumpus(x)) ::: Every vumpus is a dumpus.\n∀x (Wumpus(x) → Fruity(x)) ::: Wumpuses are fruity.\n∀x (Dumpus(x) → ¬Wooden(x)) ::: Each dumpus is not wooden.\n∀x (Dumpus(x) → Tumpus(x)) ::: Each dumpus is a tumpus.\n∀x (Tumpus(x) → ¬Blue(x)) ::: Tumpuses are not blue.\n∀x (Tumpus(x) → Yumpus(x)) ::: Every tumpus is a yumpus.\nRompus(stella) ::: Stella is a rompus.\nConclusion:\nFruity(stella) ::: Stella is fruity.\n------"
    ]
  },
  {
    "id": "ProntoQA_206",
    "context": "Every wumpus is wooden. Every wumpus is a numpus. Every numpus is sour. Numpuses are impuses. Impuses are not opaque. Every impus is a jompus. Each jompus is cold. Jompuses are vumpuses. Every vumpus is blue. Each vumpus is a rompus. Rompuses are angry. Every rompus is a yumpus. Yumpuses are fruity. Dumpuses are not fruity. Every yumpus is a zumpus. Every zumpus is happy. Each zumpus is a tumpus. Polly is an impus.",
    "question": "Is the following statement true or false? Polly is fruity.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nWumpus(x) ::: x is a wumpus\nWooden(x) ::: x is wooden\nNumpus(x) ::: x is a numpus\nSour(x) ::: x is sour\nImpus(x) ::: x is an impus\nOpaque(x) ::: x is opaque\nJompus(x) ::: x is a jompus\nCold(x) ::: x is cold\nVumpus(x) ::: x is a vumpus\nBlue(x) ::: x is blue\nRompus(x) ::: x is a rompus\nAngry(x) ::: x is angry\nYumpus(x) ::: x is a yumpus\nFruity(x) ::: x is fruity\nDumpus(x) ::: x is a dumpus\nZumpus(x) ::: x is a zumpus\nHappy(x) ::: x is happy\nTumpus(x) ::: x is a tumpus\nPolly(x) ::: x is Polly\nPremises:\n∀x (Wumpus(x) → Wooden(x)) ::: Every wumpus is wooden.\n∀x (Wumpus(x) → Numpus(x)) ::: Every wumpus is a numpus.\n∀x (Numpus(x) → Sour(x)) ::: Numpuses are sour.\n∀x (Numpus(x) → Impus(x)) ::: Numpuses are impuses.\n∀x (Impus(x) → ¬Opaque(x)) ::: Impuses are not opaque.\n∀x (Impus(x) → Jompus(x)) ::: Every impus is a jompus.\n∀x (Jompus(x) → Cold(x)) ::: Each jompus is cold.\n∀x (Jompus(x) → Vumpus(x)) ::: Jompuses are vumpuses.\n∀x (Vumpus(x) → Blue(x)) ::: Every vumpus is blue.\n∀x (Vumpus(x) → Rompus(x)) ::: Each vumpus is a rompus.\n∀x (Rompus(x) → Angry(x)) ::: Rompuses are angry.\n∀x (Rompus(x) → Yumpus(x)) ::: Every rompus is a yumpus.\n∀x (Yumpus(x) → Fruity(x)) ::: Yumpuses are fruity.\n∀x (Dumpus(x) → ¬Fruity(x)) ::: Dumpuses are not fruity.\n∀x (Yumpus(x) → Zumpus(x)) ::: Every yumpus is a zumpus.\n∀x (Zumpus(x) → Happy(x)) ::: Each zumpus is happy.\n∀x (Zumpus(x) → Tumpus(x)) ::: Each zumpus is a tumpus.\nImpus(polly) ::: Polly is an impus.\nConclusion:\nFruity(polly) ::: Polly is fruity.\n------"
    ]
  },
  {
    "id": "ProntoQA_207",
    "context": "Numpuses are transparent. Numpuses are yumpuses. Yumpuses are red. Each yumpus is a jompus. Jompuses are small. Each jompus is a vumpus. Each vumpus is metallic. Every vumpus is a dumpus. Dumpuses are floral. Each dumpus is a rompus. Every rompus is angry. Rompuses are tumpuses. Impuses are not floral. Sally is a numpus.",
    "question": "Is the following statement true or false? Sally is not floral.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nNumpus(x) ::: x is a numpus\nTransparent(x) ::: x is transparent\nYumpus(x) ::: x is a yumpus\nRed(x) ::: x is red\nJompus(x) ::: x is a jompus\nSmall(x) ::: x is small\nVumpus(x) ::: x is a vumpus\nMetallic(x) ::: x is metallic\nDumpus(x) ::: x is a dumpus\nFloral(x) ::: x is floral\nRompus(x) ::: x is a rompus\nAngry(x) ::: x is angry\nTumpus(x) ::: x is a tumpus\nImpus(x) ::: x is an impus\nPremises:\n∀x (Numpus(x) → Transparent(x)) ::: Numpuses are transparent.\n∀x (Numpus(x) → Yumpus(x)) ::: Numpuses are yumpuses.\n∀x (Yumpus(x) → Red(x)) ::: Yumpuses are red.\n∀x (Yumpus(x) → Jompus(x)) ::: Each yumpus is a jompus.\n∀x (Jompus(x) → Small(x)) ::: Jompuses are small.\n∀x (Jompus(x) → Vumpus(x)) ::: Each jompus is a vumpus.\n∀x (Vumpus(x) → Metallic(x)) ::: Each vumpus is metallic.\n∀x (Vumpus(x) → Dumpus(x)) ::: Every vumpus is a dumpus.\n∀x (Dumpus(x) → Floral(x)) ::: Dumpuses are floral.\n∀x (Dumpus(x) → Rompus(x)) ::: Each dumpus is a rompus.\n∀x (Rompus(x) → Angry(x)) ::: Every rompus is angry.\n∀x (Rompus(x) → Tumpus(x)) ::: Rompuses are tumpuses.\n∀x (Impus(x) → ¬Floral(x)) ::: Impuses are not floral.\nNumpus(sally) ::: Sally is a numpus.\nConclusion:\n¬Floral(sally) ::: Sally is not floral.\n------"
    ]
  },
  {
    "id": "ProntoQA_208",
    "context": "Impuses are not fruity. Impuses are vumpuses. Each vumpus is cold. Wumpuses are not orange. Vumpuses are numpuses. Every numpus is wooden. Numpuses are rompuses. Rompuses are opaque. Rompuses are yumpuses. Each yumpus is sour. Yumpuses are zumpuses. Every zumpus is not small. Zumpuses are tumpuses. Each tumpus is nervous. Every tumpus is a jompus. Jompuses are orange. Every jompus is a dumpus. Max is a rompus.",
    "question": "Is the following statement true or false? Max is not orange.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nImpus(x) ::: x is an impus\nFruity(x) ::: x is fruity\nVumpus(x) ::: x is a vumpus\nCold(x) ::: x is cold\nWumpus(x) ::: x is a wumpus\nOrange(x) ::: x is orange\nNumpus(x) ::: x is a numpus\nWooden(x) ::: x is wooden\nRompus(x) ::: x is a rompus\nOpaque(x) ::: x is opaque\nYumpus(x) ::: x is a yumpus\nSour(x) ::: x is sour\nZumpus(x) ::: x is a zumpus\nSmall(x) ::: x is small\nTumpus(x) ::: x is a tumpus\nNervous(x) ::: x is nervous\nJompus(x) ::: x is a jompus\nOrange(x) ::: x is orange\nDumpus(x) ::: x is a dumpus\nPremises:\n∀x (Impus(x) → ¬Fruity(x)) ::: Impuses are not fruity.\n∀x (Vumpus(x) → Cold(x)) ::: Each vumpus is cold.\n∀x (Wumpus(x) → ¬Orange(x)) ::: Wumpuses are not orange.\n∀x (Vumpus(x) → Numpus(x)) ::: Vumpuses are numpuses.\n∀x (Numpus(x) → Wooden(x)) ::: Every numpus is wooden.\n∀x (Numpus(x) → Rompus(x)) ::: Numpuses are rompuses.\n∀x (Rompus(x) → Opaque(x)) ::: Rompuses are opaque.\n∀x (Rompus(x) → Yumpus(x)) ::: Rompuses are yumpuses.\n∀x (Yumpus(x) → Sour(x)) ::: Each yumpus is sour.\n∀x (Yumpus(x) → Zumpus(x)) ::: Yumpuses are zumpuses.\n∀x (Zumpus(x) → ¬Small(x)) ::: Every zumpus is not small.\n∀x (Zumpus(x) → Tumpus(x)) ::: Zumpuses are tumpuses.\n∀x (Tumpus(x) → Nervous(x)) ::: Each tumpus is nervous.\n∀x (Tumpus(x) → Jompus(x)) ::: Every tumpus is a jompus.\n∀x (Jompus(x) → Orange(x)) ::: Jompuses are orange.\n∀x (Jompus(x) → Dumpus(x)) ::: Every jompus is a dumpus.\nRompus(max) ::: Max is a rompus.\nConclusion:\n¬Orange(max) ::: Max is not orange.\n------"
    ]
  },
  {
    "id": "ProntoQA_209",
    "context": "Each tumpus is sweet. Every tumpus is a wumpus. Wumpuses are not transparent. Each wumpus is a dumpus. Every numpus is not earthy. Dumpuses are blue. Dumpuses are impuses. Impuses are not large. Impuses are yumpuses. Each yumpus is angry. Every yumpus is a rompus. Rompuses are not metallic. Every rompus is a zumpus. Each zumpus is earthy. Zumpuses are vumpuses. Polly is a dumpus.",
    "question": "Is the following statement true or false? Polly is earthy.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nTumpus(x) ::: x is a tumpus\nSweet(x) ::: x is sweet\nWumpus(x) ::: x is a wumpus\nTransparent(x) ::: x is transparent\nDumpus(x) ::: x is a dumpus\nEarthy(x) ::: x is earthy\nBlue(x) ::: x is blue\nImpus(x) ::: x is an impus\nLarge(x) ::: x is large\nYumpus(x) ::: x is a yumpus\nAngry(x) ::: x is angry\nRompus(x) ::: x is a rompus\nMetallic(x) ::: x is metallic\nZumpus(x) ::: x is a zumpus\nVumpus(x) ::: x is a vumpus\nPremises:\n∀x (Tumpus(x) → Sweet(x)) ::: Each tumpus is sweet.\n∀x (Tumpus(x) → Wumpus(x)) ::: Every tumpus is a wumpus.\n∀x (Wumpus(x) → ¬Transparent(x)) ::: Wumpuses are not transparent.\n∀x (Wumpus(x) → Dumpus(x)) ::: Each wumpus is a dumpus.\n∀x (Numpus(x) → ¬Earthy(x)) ::: Every numpus is not earthy.\n∀x (Dumpus(x) → Blue(x)) ::: Dumpuses are blue.\n∀x (Dumpus(x) → Impus(x)) ::: Dumpuses are impuses.\n∀x (Impus(x) → ¬Large(x)) ::: Impuses are not large.\n∀x (Impus(x) → Yumpus(x)) ::: Impuses are yumpuses.\n∀x (Yumpus(x) → Angry(x)) ::: Each yumpus is angry.\n∀x (Yumpus(x) → Rompus(x)) ::: Every yumpus is a rompus.\n∀x (Rompus(x) → ¬Metallic(x)) ::: Rompuses are not metallic.\n∀x (Rompus(x) → Zumpus(x)) ::: Every rompus is a zumpus.\n∀x (Zumpus(x) → Earthy(x)) ::: Zumpuses are earthy.\n∀x (Zumpus(x) → Vumpus(x)) ::: Zumpuses are vumpuses.\nDumpus(polly) ::: Polly is a dumpus.\nConclusion:\nEarthy(polly) ::: Polly is earthy.\n------"
    ]
  },
  {
    "id": "ProntoQA_210",
    "context": "Zumpuses are wooden. Zumpuses are yumpuses. Each dumpus is not hot. Yumpuses are sour. Every yumpus is a tumpus. Tumpuses are not opaque. Every tumpus is a wumpus. Every wumpus is fruity. Each wumpus is a vumpus. Vumpuses are happy. Each vumpus is a rompus. Rompuses are hot. Every rompus is an impus. Every impus is kind. Every impus is a numpus. Numpuses are not orange. Each numpus is a jompus. Fae is a yumpus.",
    "question": "Is the following statement true or false? Fae is not hot.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nZumpus(x) ::: x is a zumpus\nWooden(x) ::: x is wooden\nYumpus(x) ::: x is a yumpus\nDumpus(x) ::: x is a dumpus\nHot(x) ::: x is hot\nSour(x) ::: x is sour\nTumpus(x) ::: x is a tumpus\nOpaque(x) ::: x is opaque\nWumpus(x) ::: x is a wumpus\nFruity(x) ::: x is fruity\nVumpus(x) ::: x is a vumpus\nHappy(x) ::: x is happy\nRompus(x) ::: x is a rompus\nImpus(x) ::: x is an impus\nKind(x) ::: x is kind\nNumpus(x) ::: x is a numpus\nOrange(x) ::: x is orange\nJompus(x) ::: x is a jompus\nPremises:\n∀x (Zumpus(x) → Wooden(x)) ::: Zumpuses are wooden.\n∀x (Zumpus(x) → Yumpus(x)) ::: Zumpuses are yumpuses.\n∀x (Dumpus(x) → ¬Hot(x)) ::: Each dumpus is not hot.\n∀x (Yumpus(x) → Sour(x)) ::: Yumpuses are sour.\n∀x (Yumpus(x) → Tumpus(x)) ::: Every yumpus is a tumpus.\n∀x (Tumpus(x) → ¬Opaque(x)) ::: Tumpuses are not opaque.\n∀x (Wumpus(x) → Fruity(x)) ::: Every wumpus is fruity.\n∀x (Wumpus(x) → Vumpus(x)) ::: Each wumpus is a vumpus.\n∀x (Vumpus(x) → Happy(x)) ::: Vumpuses are happy.\n∀x (Vumpus(x) → Rompus(x)) ::: Every vumpus is a rompus.\n∀x (Rompus(x) → Hot(x)) ::: Rompuses are hot.\n∀x (Rompus(x) → Impus(x)) ::: Every rompus is an impus.\n∀x (Impus(x) → Kind(x)) ::: Every impus is kind.\n∀x (Impus(x) → Numpus(x)) ::: Every impus is a numpus.\n∀x (Numpus(x) → ¬Orange(x)) ::: Numpuses are not orange.\n∀x (Numpus(x) → Jompus(x)) ::: Each numpus is a jompus.\nYumpus(fae) ::: Fae is a yumpus.\nConclusion:\n¬Hot(fae) ::: Fae is not hot.\n------"
    ]
  },
  {
    "id": "ProntoQA_211",
    "context": "Each zumpus is earthy. Every rompus is not spicy. Rompuses are wumpuses. Each wumpus is not happy. Wumpuses are tumpuses. Tumpuses are liquid. Every tumpus is a dumpus. Each dumpus is large. Each dumpus is an impus. Impuses are not earthy. Impuses are vumpuses. Each vumpus is aggressive. Every vumpus is a yumpus. Each yumpus is brown. Yumpuses are jompuses. Each jompus is bright. Each jompus is a numpus. Alex is a rompus.",
    "question": "Is the following statement true or false? Alex is not earthy.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nZumpus(x) ::: x is a zumpus\nEarthy(x) ::: x is earthy\nRompus(x) ::: x is a rompus\nSpicy(x) ::: x is spicy\nWumpus(x) ::: x is a wumpus\nHappy(x) ::: x is happy\nTumpus(x) ::: x is a tumpus\nLiquid(x) ::: x is liquid\nDumpus(x) ::: x is a dumpus\nLarge(x) ::: x is large\nImpus(x) ::: x is an impus\nEarthy(x) ::: x is earthy\nVumpus(x) ::: x is a vumpus\nAggressive(x) ::: x is aggressive\nYumpus(x) ::: x is a yumpus\nBrown(x) ::: x is brown\nJompus(x) ::: x is a jompus\nBright(x) ::: x is bright\nNumpus(x) ::: x is a numpus\nPremises:\n∀x (Zumpus(x) → Earthy(x)) ::: Each zumpus is earthy.\n∀x (Rompus(x) → ¬Spicy(x)) ::: Every rompus is not spicy.\n∀x (Rompus(x) → Wumpus(x)) ::: Rompuses are wumpuses.\n∀x (Wumpus(x) → ¬Happy(x)) ::: Each wumpus is not happy.\n∀x (Wumpus(x) → Tumpus(x)) ::: Wumpuses are tumpuses.\n∀x (Tumpus(x) → Liquid(x)) ::: Tumpuses are liquid.\n∀x (Tumpus(x) → Dumpus(x)) ::: Every tumpus is a dumpus.\n∀x (Dumpus(x) → Large(x)) ::: Each dumpus is large.\n∀x (Dumpus(x) → Impus(x)) ::: Each dumpus is an impus.\n∀x (Impus(x) → ¬Earthy(x)) ::: Impuses are not earthy.\n∀x (Impus(x) → Vumpus(x)) ::: Impuses are vumpuses.\n∀x (Vumpus(x) → Aggressive(x)) ::: Each vumpus is aggressive.\n∀x (Vumpus(x) → Yumpus(x)) ::: Every vumpus is a yumpus.\n∀x (Yumpus(x) → Brown(x)) ::: Each yumpus is brown.\n∀x (Yumpus(x) → Jompus(x)) ::: Yumpuses are jompuses.\n∀x (Jompus(x) → Bright(x)) ::: Each jompus is bright.\n∀x (Jompus(x) → Numpus(x)) ::: Each jompus is a numpus.\nRompus(alex) ::: Alex is a rompus.\nConclusion:\n¬Earthy(alex) ::: Alex is not earthy.\n------"
    ]
  },
  {
    "id": "ProntoQA_212",
    "context": "Every tumpus is red. Each tumpus is a wumpus. Every wumpus is sweet. Wumpuses are vumpuses. Vumpuses are small. Every vumpus is a jompus. Every jompus is not aggressive. Zumpuses are temperate. Each jompus is a dumpus. Each dumpus is bright. Every dumpus is a numpus. Numpuses are not temperate. Numpuses are rompuses. Each rompus is not luminous. Every rompus is a yumpus. Yumpuses are opaque. Every yumpus is an impus. Stella is a wumpus.",
    "question": "Is the following statement true or false? Stella is not temperate.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nTumpus(x) ::: x is a tumpus\nRed(x) ::: x is red\nWumpus(x) ::: x is a wumpus\nSweet(x) ::: x is sweet\nVumpus(x) ::: x is a vumpus\nSmall(x) ::: x is small\nJompus(x) ::: x is a jompus\nAggressive(x) ::: x is aggressive\nZumpus(x) ::: x is a zumpus\nTemperate(x) ::: x is temperate\nDumpus(x) ::: x is a dumpus\nBright(x) ::: x is bright\nNumpus(x) ::: x is a numpus\nRompus(x) ::: x is a rompus\nLuminous(x) ::: x is luminous\nYumpus(x) ::: x is a yumpus\nOpaque(x) ::: x is opaque\nImpus(x) ::: x is an impus\nPremises:\n∀x (Tumpus(x) → Red(x)) ::: Every tumpus is red.\n∀x (Tumpus(x) → Wumpus(x)) ::: Each tumpus is a wumpus.\n∀x (Wumpus(x) → Sweet(x)) ::: Every wumpus is sweet.\n∀x (Wumpus(x) → Vumpus(x)) ::: Wumpuses are vumpuses.\n∀x (Vumpus(x) → Small(x)) ::: Vumpuses are small.\n∀x (Vumpus(x) → Jompus(x)) ::: Every vumpus is a jompus.\n∀x (Jompus(x) → ¬Aggressive(x)) ::: Every jompus is not aggressive.\n∀x (Zumpus(x) → Temperate(x)) ::: Zumpuses are temperate.\n∀x (Jompus(x) → Dumpus(x)) ::: Each jompus is a dumpus.\n∀x (Dumpus(x) → Bright(x)) ::: Each dumpus is bright.\n∀x (Dumpus(x) → Numpus(x)) ::: Every dumpus is a numpus.\n∀x (Numpus(x) → ¬Temperate(x)) ::: Numpuses are not temperate.\n∀x (Numpus(x) → Rompus(x)) ::: Numpuses are rompuses.\n∀x (Rompus(x) → ¬Luminous(x)) ::: Every rompus is not luminous.\n∀x (Rompus(x) → Yumpus(x)) ::: Every rompus is a yumpus.\n∀x (Yumpus(x) → Opaque(x)) ::: Yumpuses are opaque.\n∀x (Yumpus(x) → Impus(x)) ::: Every yumpus is an impus.\nWumpus(stella) ::: Stella is a wumpus.\nConclusion:\n¬Temperate(stella) ::: Stella is not temperate.\n------"
    ]
  },
  {
    "id": "ProntoQA_213",
    "context": "Jompuses are not bright. Jompuses are vumpuses. Vumpuses are bitter. Every vumpus is a tumpus. Tumpuses are hot. Tumpuses are impuses. Each impus is not brown. Every impus is a numpus. Every yumpus is wooden. Numpuses are large. Numpuses are rompuses. Rompuses are not opaque. Every rompus is a wumpus. Wumpuses are aggressive. Wumpuses are dumpuses. Each dumpus is not wooden. Each dumpus is a zumpus. Rex is an impus.",
    "question": "Is the following statement true or false? Rex is not wooden.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nJompus(x) ::: x is a jompus\nBright(x) ::: x is bright\nVumpus(x) ::: x is a vumpus\nBitter(x) ::: x is bitter\nTumpus(x) ::: x is a tumpus\nHot(x) ::: x is hot\nImpus(x) ::: x is an impus\nBrown(x) ::: x is brown\nNumpus(x) ::: x is a numpus\nYumpus(x) ::: x is a yumpus\nWooden(x) ::: x is wooden\nLarge(x) ::: x is large\nRompus(x) ::: x is a rompus\nOpaque(x) ::: x is opaque\nWumpus(x) ::: x is a wumpus\nAggressive(x) ::: x is aggressive\nDumpus(x) ::: x is a dumpus\nZumpus(x) ::: x is a zumpus\nPremises:\n∀x (Jompus(x) → ¬Bright(x)) ::: Jompuses are not bright.\n∀x (Jompus(x) → Vumpus(x)) ::: Jompuses are vumpuses.\n∀x (Vumpus(x) → Bitter(x)) ::: Vumpuses are bitter.\n∀x (Vumpus(x) → Tumpus(x)) ::: Every vumpus is a tumpus.\n∀x (Tumpus(x) → Hot(x)) ::: Tumpuses are hot.\n∀x (Tumpus(x) → Impus(x)) ::: Tumpuses are impuses.\n∀x (Impus(x) → ¬Brown(x)) ::: Each impus is not brown.\n∀x (Impus(x) → Numpus(x)) ::: Every impus is a numpus.\n∀x (Yumpus(x) → Wooden(x)) ::: Every yumpus is wooden.\n∀x (Numpus(x) → Large(x)) ::: Numpuses are large.\n∀x (Numpus(x) → Rompus(x)) ::: Numpuses are rompuses.\n∀x (Rompus(x) → ¬Opaque(x)) ::: Rompuses are not opaque.\n∀x (Rompus(x) → Wumpus(x)) ::: Every rompus is a wumpus.\n∀x (Wumpus(x) → Aggressive(x)) ::: Wumpuses are aggressive.\n∀x (Wumpus(x) → Dumpus(x)) ::: Wumpuses are dumpuses.\n∀x (Dumpus(x) → ¬Wooden(x)) ::: Each dumpus is not wooden.\n∀x (Dumpus(x) → Zumpus(x)) ::: Each dumpus is a zumpus.\nImpus(rex) ::: Rex is an impus.\nConclusion:\n¬Wooden(rex) ::: Rex is not wooden.\n------"
    ]
  },
  {
    "id": "ProntoQA_214",
    "context": "Every vumpus is not blue. Every vumpus is a zumpus. Zumpuses are floral. Every zumpus is a wumpus. Each wumpus is cold. Every impus is not nervous. Wumpuses are yumpuses. Yumpuses are transparent. Yumpuses are numpuses. Numpuses are nervous. Numpuses are tumpuses. Tumpuses are small. Each tumpus is a jompus. Jompuses are sweet. Jompuses are rompuses. Every rompus is not amenable. Rompuses are dumpuses. Sally is a vumpus.",
    "question": "Is the following statement true or false? Sally is nervous.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nVumpus(x) ::: x is a vumpus\nBlue(x) ::: x is blue\nZumpus(x) ::: x is a zumpus\nFloral(x) ::: x is floral\nWumpus(x) ::: x is a wumpus\nCold(x) ::: x is cold\nImpus(x) ::: x is an impus\nNervous(x) ::: x is nervous\nYumpus(x) ::: x is a yumpus\nTransparent(x) ::: x is transparent\nNumpus(x) ::: x is a numpus\nNervous(x) ::: x is nervous\nTumpus(x) ::: x is a tumpus\nSmall(x) ::: x is small\nJompus(x) ::: x is a jompus\nSweet(x) ::: x is sweet\nRompus(x) ::: x is a rompus\nDumpus(x) ::: x is a dumpus\nPremises:\n∀x (Vumpus(x) → ¬Blue(x)) ::: Every vumpus is not blue.\n∀x (Vumpus(x) → Zumpus(x)) ::: Every vumpus is a zumpus.\n∀x (Zumpus(x) → Floral(x)) ::: Zumpuses are floral.\n∀x (Zumpus(x) → Wumpus(x)) ::: Every zumpus is a wumpus.\n∀x (Wumpus(x) → Cold(x)) ::: Each wumpus is cold.\n∀x (Impus(x) → ¬Nervous(x)) ::: Every impus is not nervous.\n∀x (Wumpus(x) → Yumpus(x)) ::: Wumpuses are yumpuses.\n∀x (Yumpus(x) → Transparent(x)) ::: Yumpuses are transparent.\n∀x (Yumpus(x) → Numpus(x)) ::: Yumpuses are numpuses.\n∀x (Numpus(x) → Nervous(x)) ::: Numpuses are nervous.\n∀x (Numpus(x) → Tumpus(x)) ::: Numpuses are tumpuses.\n∀x (Tumpus(x) → Small(x)) ::: Tumpuses are small.\n∀x (Tumpus(x) → Jompus(x)) ::: Each tumpus is a jompus.\n∀x (Jompus(x) → Sweet(x)) ::: Jompuses are sweet.\n∀x (Jompus(x) → Rompus(x)) ::: Jompuses are rompuses.\n∀x (Rompus(x) → ¬Amenable(x)) ::: Every rompus is not amenable.\n∀x (Rompus(x) → Dumpus(x)) ::: Rompuses are dumpuses.\nVumpus(sally) ::: Sally is a vumpus.\nConclusion:\nNervous(sally) ::: Sally is nervous.\n------"
    ]
  },
  {
    "id": "ProntoQA_215",
    "context": "Every wumpus is brown. Wumpuses are rompuses. Each rompus is dull. Rompuses are dumpuses. Dumpuses are transparent. Dumpuses are vumpuses. Each vumpus is small. Vumpuses are tumpuses. Yumpuses are not earthy. Tumpuses are earthy. Every tumpus is a zumpus. Each zumpus is not temperate. Each zumpus is a numpus. Each numpus is kind. Every numpus is an impus. Max is a wumpus.",
    "question": "Is the following statement true or false? Max is not earthy.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant.lpg\n------"
    ]
  },
  {
    "id": "ProntoQA_216",
    "context": "Impuses are dull. Impuses are rompuses. Vumpuses are not aggressive. Rompuses are not spicy. Each rompus is a dumpus. Dumpuses are nervous. Dumpuses are wumpuses. Wumpuses are not opaque. Every wumpus is a jompus. Jompuses are floral. Every jompus is a numpus. Numpuses are small. Each numpus is a zumpus. Each zumpus is blue. Zumpuses are tumpuses. Every tumpus is aggressive. Every tumpus is a yumpus. Max is a wumpus.",
    "question": "Is the following statement true or false? Max is aggressive.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nImpus(x) ::: x is an impus\nDull(x) ::: x is dull\nRompus(x) ::: x is a rompus\nVumpus(x) ::: x is a vumpus\nAggressive(x) ::: x is aggressive\nSpicy(x) ::: x is spicy\nDumpus(x) ::: x is a dumpus\nNervous(x) ::: x is nervous\nWumpus(x) ::: x is a wumpus\nOpaque(x) ::: x is opaque\nJompus(x) ::: x is a jompus\nFloral(x) ::: x is floral\nNumpus(x) ::: x is a numpus\nSmall(x) ::: x is small\nZumpus(x) ::: x is a zumpus\nBlue(x) ::: x is blue\nTumpus(x) ::: x is a tumpus\nAggressive(x) ::: x is aggressive\nYumpus(x) ::: x is a yumpus\nMax(x) ::: x is Max\nPremises:\n∀x (Impus(x) → Dull(x)) ::: Impuses are dull.\n∀x (Impus(x) → Rompus(x)) ::: Impuses are rompuses.\n∀x (Vumpus(x) → ¬Aggressive(x)) ::: Vumpuses are not aggressive.\n∀x (Rompus(x) → ¬Spicy(x)) ::: Rompuses are not spicy.\n∀x (Rompus(x) → Dumpus(x)) ::: Each rompus is a dumpus.\n∀x (Dumpus(x) → Nervous(x)) ::: Dumpuses are nervous.\n∀x (Dumpus(x) → Wumpus(x)) ::: Dumpuses are wumpuses.\n∀x (Wumpus(x) → ¬Opaque(x)) ::: Wumpuses are not opaque.\n∀x (Wumpus(x) → Jompus(x)) ::: Every wumpus is a jompus.\n∀x (Jompus(x) → Floral(x)) ::: Jompuses are floral.\n∀x (Jompus(x) → Numpus(x)) ::: Every jompus is a numpus.\n∀x (Numpus(x) → Small(x)) ::: Numpuses are small.\n∀x (Numpus(x) → Zumpus(x)) ::: Each numpus is a zumpus.\n∀x (Zumpus(x) → Blue(x)) ::: Each zumpus is blue.\n∀x (Zumpus(x) → Tumpus(x)) ::: Zumpuses are tumpuses.\n∀x (Tumpus(x) → Aggressive(x)) ::: Every tumpus is aggressive.\n∀x (Tumpus(x) → Yumpus(x)) ::: Every tumpus is a yumpus.\nWumpus(max) ::: Max is a wumpus.\nConclusion:\nAggressive(max) ::: Max is aggressive.\n------"
    ]
  },
  {
    "id": "ProntoQA_217",
    "context": "Numpuses are kind. Each numpus is a yumpus. Each yumpus is not opaque. Yumpuses are jompuses. Each vumpus is metallic. Jompuses are not temperate. Jompuses are wumpuses. Each wumpus is sour. Wumpuses are tumpuses. Tumpuses are not metallic. Every tumpus is a rompus. Each rompus is not brown. Rompuses are impuses. Each impus is not dull. Each impus is a zumpus. Zumpuses are not feisty. Zumpuses are dumpuses. Sally is a numpus.",
    "question": "Is the following statement true or false? Sally is not metallic.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nNumpus(x) ::: x is a numpus\nKind(x) ::: x is kind\nYumpus(x) ::: x is a yumpus\nOpaque(x) ::: x is opaque\nJompus(x) ::: x is a jompus\nTemperate(x) ::: x is temperate\nWumpus(x) ::: x is a wumpus\nSour(x) ::: x is sour\nTumpus(x) ::: x is a tumpus\nMetallic(x) ::: x is metallic\nRompus(x) ::: x is a rompus\nBrown(x) ::: x is brown\nImpus(x) ::: x is an impus\nDull(x) ::: x is dull\nZumpus(x) ::: x is a zumpus\nFeisty(x) ::: x is feisty\nDumpus(x) ::: x is a dumpus\nPremises:\n∀x (Numpus(x) → Kind(x)) ::: Numpuses are kind.\n∀x (Numpus(x) → Yumpus(x)) ::: Each numpus is a yumpus.\n∀x (Yumpus(x) → ¬Opaque(x)) ::: Each yumpus is not opaque.\n∀x (Yumpus(x) → Jompus(x)) ::: Yumpuses are jompuses.\n∀x (Vumpus(x) → Metallic(x)) ::: Each vumpus is metallic.\n∀x (Jompus(x) → ¬Temperate(x)) ::: Jompuses are not temperate.\n∀x (Jompus(x) → Wumpus(x)) ::: Jompuses are wumpuses.\n∀x (Wumpus(x) → Sour(x)) ::: Each wumpus is sour.\n∀x (Wumpus(x) → Tumpus(x)) ::: Wumpuses are tumpuses.\n∀x (Tumpus(x) → ¬Metallic(x)) ::: Tumpuses are not metallic.\n∀x (Tumpus(x) → Rompus(x)) ::: Every tumpus is a rompus.\n∀x (Rompus(x) → ¬Brown(x)) ::: Each rompus is not brown.\n∀x (Rompus(x) → Impus(x)) ::: Rompuses are impuses.\n∀x (Impus(x) → ¬Dull(x)) ::: Each impus is not dull.\n∀x (Impus(x) → Zumpus(x)) ::: Each impus is a zumpus.\n∀x (Zumpus(x) → ¬Feisty(x)) ::: Zumpuses are not feisty.\n∀x (Zumpus(x) → Dumpus(x)) ::: Zumpuses are dumpuses.\nNumpus(sally) ::: Sally is a numpus.\nConclusion:\n¬Metallic(sally) ::: Sally is not metallic.\n------"
    ]
  },
  {
    "id": "ProntoQA_218",
    "context": "Every vumpus is not sour. Vumpuses are rompuses. Every rompus is not happy. Rompuses are jompuses. Each jompus is not temperate. Numpuses are not transparent. Jompuses are tumpuses. Tumpuses are liquid. Tumpuses are yumpuses. Each yumpus is transparent. Yumpuses are dumpuses. Dumpuses are orange. Dumpuses are wumpuses. Wumpuses are floral. Every wumpus is a zumpus. Fae is a vumpus.",
    "question": "Is the following statement true or false? Fae is transparent.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nVumpus(x) ::: x is a vumpus\nSour(x) ::: x is sour\nRompus(x) ::: x is a rompus\nHappy(x) ::: x is happy\nJompus(x) ::: x is a jompus\nTemperate(x) ::: x is temperate\nNumpus(x) ::: x is a numpus\nTransparent(x) ::: x is transparent\nTumpus(x) ::: x is a tumpus\nLiquid(x) ::: x is liquid\nYumpus(x) ::: x is a yumpus\nDumpus(x) ::: x is a dumpus\nOrange(x) ::: x is orange\nWumpus(x) ::: x is a wumpus\nFloral(x) ::: x is floral\nZumpus(x) ::: x is a zumpus\nPremises:\n∀x (Vumpus(x) → ¬Sour(x)) ::: Every vumpus is not sour.\n∀x (Rompus(x) → ¬Happy(x)) ::: Vumpuses are rompuses.\n∀x (Rompus(x) → Jompus(x)) ::: Every rompus is a jompus.\n∀x (Jompus(x) → ¬Temperate(x)) ::: Each jompus is not temperate.\n∀x (Numpus(x) → ¬Transparent(x)) ::: Numpuses are not transparent.\n∀x (Jompus(x) → Tumpus(x)) ::: Jompuses are tumpuses.\n∀x (Tumpus(x) → Liquid(x)) ::: Tumpuses are liquid.\n∀x (Tumpus(x) → Yumpus(x)) ::: Tumpuses are yumpuses.\n∀x (Yumpus(x) → Transparent(x)) ::: Each yumpus is transparent.\n∀x (Yumpus(x) → Dumpus(x)) ::: Yumpuses are dumpuses.\n∀x (Dumpus(x) → Orange(x)) ::: Dumpuses are orange.\n∀x (Dumpus(x) → Wumpus(x)) ::: Dumpuses are wumpuses.\n∀x (Wumpus(x) → Floral(x)) ::: Wumpuses are floral.\n∀x (Wumpus(x) → Zumpus(x)) ::: Every wumpus is a zumpus.\nVumpus(fae) ::: Fae is a vumpus.\nConclusion:\nTransparent(fae) ::: Fae is transparent.\n------"
    ]
  },
  {
    "id": "ProntoQA_219",
    "context": "Zumpuses are hot. Every zumpus is a tumpus. Every tumpus is dull. Each tumpus is a dumpus. Every dumpus is small. Dumpuses are vumpuses. Vumpuses are not nervous. Yumpuses are not transparent. Every vumpus is an impus. Every impus is not red. Impuses are rompuses. Rompuses are not floral. Rompuses are wumpuses. Each wumpus is transparent. Every wumpus is a jompus. Jompuses are not spicy. Each jompus is a numpus. Wren is a dumpus.",
    "question": "Is the following statement true or false? Wren is transparent.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nZumpus(x) ::: x is a zumpus\nHot(x) ::: x is hot\nTumpus(x) ::: x is a tumpus\nDull(x) ::: x is dull\nDumpus(x) ::: x is a dumpus\nSmall(x) ::: x is small\nVumpus(x) ::: x is a vumpus\nNervous(x) ::: x is nervous\nYumpus(x) ::: x is a yumpus\nTransparent(x) ::: x is transparent\nImpus(x) ::: x is an impus\nRed(x) ::: x is red\nRompus(x) ::: x is a rompus\nFloral(x) ::: x is floral\nWumpus(x) ::: x is a wumpus\nJompus(x) ::: x is a jompus\nSpicy(x) ::: x is spicy\nNumpus(x) ::: x is a numpus\nWren(x) ::: x is Wren\nPremises:\n∀x (Zumpus(x) → Hot(x)) ::: Zumpuses are hot.\n∀x (Zumpus(x) → Tumpus(x)) ::: Every zumpus is a tumpus.\n∀x (Tumpus(x) → Dull(x)) ::: Every tumpus is dull.\n∀x (Tumpus(x) → Dumpus(x)) ::: Each tumpus is a dumpus.\n∀x (Dumpus(x) → Small(x)) ::: Every dumpus is small.\n∀x (Dumpus(x) → Vumpus(x)) ::: Dumpuses are vumpuses.\n∀x (Vumpus(x) → ¬Nervous(x)) ::: Vumpuses are not nervous.\n∀x (Yumpus(x) → ¬Transparent(x)) ::: Yumpuses are not transparent.\n∀x (Vumpus(x) → Impus(x)) ::: Every vumpus is an impus.\n∀x (Impus(x) → ¬Red(x)) ::: Impuses are not red.\n∀x (Impus(x) → Rompus(x)) ::: Impuses are rompuses.\n∀x (Rompus(x) → ¬Floral(x)) ::: Rompuses are not floral.\n∀x (Rompus(x) → Wumpus(x)) ::: Rompuses are wumpuses.\n∀x (Wumpus(x) → Transparent(x)) ::: Each wumpus is transparent.\n∀x (Wumpus(x) → Jompus(x)) ::: Every wumpus is a jompus.\n∀x (Jompus(x) → ¬Spicy(x)) ::: Jompuses are not spicy.\n∀x (Jompus(x) → Numpus(x)) ::: Each jompus is a numpus.\nDumpus(wren) ::: Wren is a dumpus.\nConclusion:\nTransparent(wren) ::: Wren is transparent.\n------"
    ]
  },
  {
    "id": "ProntoQA_220",
    "context": "Zumpuses are shy. Zumpuses are yumpuses. Dumpuses are not luminous. Yumpuses are not earthy. Every yumpus is a numpus. Numpuses are not aggressive. Each numpus is a tumpus. Tumpuses are transparent. Each tumpus is a wumpus. Every wumpus is not sour. Each wumpus is an impus. Each impus is not hot. Each impus is a jompus. Every jompus is not small. Each jompus is a vumpus. Vumpuses are luminous. Vumpuses are rompuses. Stella is a tumpus.",
    "question": "Is the following statement true or false? Stella is not luminous.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nZumpus(x) ::: x is a zumpus\nShy(x) ::: x is shy\nYumpus(x) ::: x is a yumpus\nLuminous(x) ::: x is luminous\nEarthy(x) ::: x is earthy\nNumpus(x) ::: x is a numpus\nAggressive(x) ::: x is aggressive\nTumpus(x) ::: x is a tumpus\nTransparent(x) ::: x is transparent\nWumpus(x) ::: x is a wumpus\nSour(x) ::: x is sour\nImpus(x) ::: x is an impus\nHot(x) ::: x is hot\nJompus(x) ::: x is a jompus\nSmall(x) ::: x is small\nVumpus(x) ::: x is a vumpus\nRompus(x) ::: x is a rompus\nStella(x) ::: x is Stella\nPremises:\n∀x (Zumpus(x) → Shy(x)) ::: Zumpuses are shy.\n∀x (Zumpus(x) → Yumpus(x)) ::: Zumpuses are yumpuses.\n∀x (Dumpus(x) → ¬Luminous(x)) ::: Dumpuses are not luminous.\n∀x (Yumpus(x) → ¬Earthy(x)) ::: Yumpuses are not earthy.\n∀x (Yumpus(x) → Numpus(x)) ::: Every yumpus is a numpus.\n∀x (Numpus(x) → ¬Aggressive(x)) ::: Numpuses are not aggressive.\n∀x (Numpus(x) → Tumpus(x)) ::: Each numpus is a tumpus.\n∀x (Tumpus(x) → Transparent(x)) ::: Tumpuses are transparent.\n∀x (Tumpus(x) → Wumpus(x)) ::: Each tumpus is a wumpus.\n∀x (Wumpus(x) → ¬Sour(x)) ::: Every wumpus is not sour.\n∀x (Wumpus(x) → Impus(x)) ::: Each wumpus is an impus.\n∀x (Impus(x) → ¬Hot(x)) ::: Each impus is not hot.\n∀x (Impus(x) → Jompus(x)) ::: Each impus is a jompus.\n∀x (Jompus(x) → ¬Small(x)) ::: Each jompus is not small.\n∀x (Jompus(x) → Vumpus(x)) ::: Each jompus is a vumpus.\n∀x (Vumpus(x) → Luminous(x)) ::: Vumpuses are luminous.\n∀x (Vumpus(x) → Rompus(x)) ::: Vumpuses are rompuses.\nTumpus(stella) ::: Stella is a tumpus.\nConclusion:\n¬Luminous(stella) ::: Stella is not luminous.\n------"
    ]
  },
  {
    "id": "ProntoQA_221",
    "context": "Every vumpus is feisty. Vumpuses are numpuses. Numpuses are not spicy. Numpuses are yumpuses. Yumpuses are large. Each yumpus is a zumpus. Tumpuses are fruity. Each zumpus is hot. Each zumpus is a wumpus. Every wumpus is transparent. Wumpuses are rompuses. Rompuses are brown. Rompuses are dumpuses. Every dumpus is kind. Each dumpus is an impus. Impuses are not fruity. Each impus is a jompus. Stella is a zumpus.",
    "question": "Is the following statement true or false? Stella is fruity.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nVumpus(x) ::: x is a vumpus\nFeisty(x) ::: x is feisty\nNumpus(x) ::: x is a numpus\nSpicy(x) ::: x is spicy\nYumpus(x) ::: x is a yumpus\nLarge(x) ::: x is large\nZumpus(x) ::: x is a zumpus\nTumpus(x) ::: x is a tumpus\nFruity(x) ::: x is fruity\nHot(x) ::: x is hot\nWumpus(x) ::: x is a wumpus\nTransparent(x) ::: x is transparent\nRompus(x) ::: x is a rompus\nBrown(x) ::: x is brown\nDumpus(x) ::: x is a dumpus\nKind(x) ::: x is kind\nImpus(x) ::: x is an impus\nJompus(x) ::: x is a jompus\nStella(x) ::: x is Stella\nPremises:\n∀x (Vumpus(x) → Feisty(x)) ::: Every vumpus is feisty.\n∀x (Numpus(x) → ¬Spicy(x)) ::: Numpuses are not spicy.\n∀x (Numpus(x) → Yumpus(x)) ::: Numpuses are yumpuses.\n∀x (Yumpus(x) → Large(x)) ::: Yumpuses are large.\n∀x (Zumpus(x) → Hot(x)) ::: Each zumpus is hot.\n∀x (Zumpus(x) → Wumpus(x)) ::: Each zumpus is a wumpus.\n∀x (Wumpus(x) → Transparent(x)) ::: Every wumpus is transparent.\n∀x (Wumpus(x) → Rompus(x)) ::: Wumpuses are rompuses.\n∀x (Rompus(x) → Brown(x)) ::: Rompuses are brown.\n∀x (Rompus(x) → Dumpus(x)) ::: Rompuses are dumpuses.\n∀x (Dumpus(x) → Kind(x)) ::: Every dumpus is kind.\n∀x (Dumpus(x) → Impus(x)) ::: Each dumpus is an impus.\n∀x (Impus(x) → ¬Fruity(x)) ::: Impuses are not fruity.\n∀x (Impus(x) → Jompus(x)) ::: Each impus is a jompus.\nZumpus(stella) ::: Stella is a zumpus.\nConclusion:\nFruity(stella) ::: Stella is fruity.\n------"
    ]
  },
  {
    "id": "ProntoQA_222",
    "context": "Yumpuses are nervous. Each yumpus is a wumpus. Each wumpus is not earthy. Wumpuses are impuses. Zumpuses are metallic. Each impus is hot. Impuses are dumpuses. Dumpuses are small. Dumpuses are jompuses. Jompuses are sweet. Each jompus is a vumpus. Vumpuses are not metallic. Vumpuses are tumpuses. Each tumpus is red. Tumpuses are rompuses. Rompuses are bright. Rompuses are numpuses. Stella is a wumpus.",
    "question": "Is the following statement true or false? Stella is not metallic.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nYumpus(x) ::: x is a yumpus\nNervous(x) ::: x is nervous\nWumpus(x) ::: x is a wumpus\nEarthy(x) ::: x is earthy\nImpus(x) ::: x is an impus\nHot(x) ::: x is hot\nDumpus(x) ::: x is a dumpus\nSmall(x) ::: x is small\nJompus(x) ::: x is a jompus\nSweet(x) ::: x is sweet\nVumpus(x) ::: x is a vumpus\nMetallic(x) ::: x is metallic\nTumpus(x) ::: x is a tumpus\nRed(x) ::: x is red\nRompus(x) ::: x is a rompus\nBright(x) ::: x is bright\nNumpus(x) ::: x is a numpus\nStella(x) ::: x is Stella\nPremises:\n∀x (Yumpus(x) → Nervous(x)) ::: Yumpuses are nervous.\n∀x (Yumpus(x) → Wumpus(x)) ::: Each yumpus is a wumpus.\n∀x (Wumpus(x) → ¬Earthy(x)) ::: Each wumpus is not earthy.\n∀x (Wumpus(x) → Impus(x)) ::: Wumpuses are impuses.\n∀x (Impus(x) → Hot(x)) ::: Impuses are hot.\n∀x (Impus(x) → Dumpus(x)) ::: Impuses are dumpuses.\n∀x (Dumpus(x) → Small(x)) ::: Dumpuses are small.\n∀x (Dumpus(x) → Jompus(x)) ::: Dumpuses are jompuses.\n∀x (Jompus(x) → Sweet(x)) ::: Jompuses are sweet.\n∀x (Jompus(x) → Vumpus(x)) ::: Each jompus is a vumpus.\n∀x (Vumpus(x) → ¬Metallic(x)) ::: Vumpuses are not metallic.\n∀x (Vumpus(x) → Tumpus(x)) ::: Vumpuses are tumpuses.\n∀x (Tumpus(x) → Red(x)) ::: Each tumpus is red.\n∀x (Tumpus(x) → Rompus(x)) ::: Tumpuses are rompuses.\n∀x (Rompus(x) → Bright(x)) ::: Rompuses are bright.\n∀x (Rompus(x) → Numpus(x)) ::: Rompuses are numpuses.\nWumpus(stella) ::: Stella is a wumpus.\nConclusion:\n¬Metallic(stella) ::: Stella is not metallic.\n------"
    ]
  },
  {
    "id": "ProntoQA_223",
    "context": "Dumpuses are bright. Dumpuses are vumpuses. Vumpuses are bitter. Vumpuses are zumpuses. Zumpuses are not floral. Zumpuses are impuses. Impuses are small. Impuses are numpuses. Wumpuses are not luminous. Each numpus is orange. Numpuses are jompuses. Every jompus is cold. Jompuses are rompuses. Rompuses are nervous. Rompuses are yumpuses. Every yumpus is luminous. Yumpuses are tumpuses. Polly is an impus.",
    "question": "Is the following statement true or false? Polly is not luminous.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nDumpus(x) ::: x is a dumpus\nBright(x) ::: x is bright\nVumpus(x) ::: x is a vumpus\nBitter(x) ::: x is bitter\nZumpus(x) ::: x is a zumpus\nFloral(x) ::: x is floral\nImpus(x) ::: x is an impus\nSmall(x) ::: x is small\nNumpus(x) ::: x is a numpus\nOrange(x) ::: x is orange\nJompus(x) ::: x is a jompus\nCold(x) ::: x is cold\nRompus(x) ::: x is a rompus\nNervous(x) ::: x is nervous\nYumpus(x) ::: x is a yumpus\nTumpus(x) ::: x is a tumpus\nPremises:\n∀x (Dumpus(x) → Bright(x)) ::: Dumpuses are bright.\n∀x (Dumpus(x) → Vumpus(x)) ::: Dumpuses are vumpuses.\n∀x (Vumpus(x) → Bitter(x)) ::: Vumpuses are bitter.\n∀x (Vumpus(x) → Zumpus(x)) ::: Vumpuses are zumpuses.\n∀x (Zumpus(x) → ¬Floral(x)) ::: Zumpuses are not floral.\n∀x (Zumpus(x) → Impus(x)) ::: Zumpuses are impuses.\n∀x (Impus(x) → Small(x)) ::: Impuses are small.\n∀x (Impus(x) → Numpus(x)) ::: Impuses are numpuses.\n∀x (Wumpus(x) → ¬Luminous(x)) ::: Wumpuses are not luminous.\n∀x (Numpus(x) → Orange(x)) ::: Each numpus is orange.\n∀x (Numpus(x) → Jompus(x)) ::: Numpuses are jompuses.\n∀x (Jompus(x) → Cold(x)) ::: Every jompus is cold.\n∀x (Jompus(x) → Rompus(x)) ::: Jompuses are rompuses.\n∀x (Rompus(x) → Nervous(x)) ::: Rompuses are nervous.\n∀x (Rompus(x) → Yumpus(x)) ::: Rompuses are yumpuses.\n∀x (Yumpus(x) → Luminous(x)) ::: Every yumpus is luminous.\n∀x (Yumpus(x) → Tumpus(x)) ::: Yumpuses are tumpuses.\nImpus(polly) ::: Polly is an impus.\nConclusion:\n¬Luminous(polly) ::: Polly is not luminous.\n------"
    ]
  },
  {
    "id": "ProntoQA_224",
    "context": "Each jompus is nervous. Every jompus is a vumpus. Each vumpus is not brown. Each vumpus is a zumpus. Zumpuses are dull. Zumpuses are dumpuses. Dumpuses are fruity. Every dumpus is a wumpus. Wumpuses are luminous. Wumpuses are impuses. Impuses are kind. Every impus is a rompus. Yumpuses are cold. Each rompus is not cold. Every rompus is a tumpus. Tumpuses are not bitter. Tumpuses are numpuses. Sally is a zumpus.",
    "question": "Is the following statement true or false? Sally is cold.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nJompus(x) ::: x is a jompus\nNervous(x) ::: x is nervous\nVumpus(x) ::: x is a vumpus\nBrown(x) ::: x is brown\nZumpus(x) ::: x is a zumpus\nDull(x) ::: x is dull\nDumpus(x) ::: x is a dumpus\nFruity(x) ::: x is fruity\nWumpus(x) ::: x is a wumpus\nLuminous(x) ::: x is luminous\nImpus(x) ::: x is an impus\nKind(x) ::: x is kind\nRompus(x) ::: x is a rompus\nCold(x) ::: x is cold\nTumpus(x) ::: x is a tumpus\nBitter(x) ::: x is bitter\nNumpus(x) ::: x is a numpus\nPremises:\n∀x (Jompus(x) → Nervous(x)) ::: Each jompus is nervous.\n∀x (Jompus(x) → Vumpus(x)) ::: Every jompus is a vumpus.\n∀x (Vumpus(x) → ¬Brown(x)) ::: Each vumpus is not brown.\n∀x (Vumpus(x) → Zumpus(x)) ::: Each vumpus is a zumpus.\n∀x (Zumpus(x) → Dull(x)) ::: Zumpuses are dull.\n∀x (Zumpus(x) → Dumpus(x)) ::: Zumpuses are dumpuses.\n∀x (Dumpus(x) → Fruity(x)) ::: Dumpuses are fruity.\n∀x (Dumpus(x) → Wumpus(x)) ::: Every dumpus is a wumpus.\n∀x (Wumpus(x) → Luminous(x)) ::: Wumpuses are luminous.\n∀x (Wumpus(x) → Impus(x)) ::: Wumpuses are impuses.\n∀x (Impus(x) → Kind(x)) ::: Impuses are kind.\n∀x (Impus(x) → Rompus(x)) ::: Every impus is a rompus.\n∀x (Yumpus(x) → Cold(x)) ::: Yumpuses are cold.\n∀x (Rompus(x) → ¬Cold(x)) ::: Each rompus is not cold.\n∀x (Rompus(x) → Tumpus(x)) ::: Every rompus is a tumpus.\n∀x (Tumpus(x) → ¬Bitter(x)) ::: Tumpuses are not bitter.\n∀x (Tumpus(x) → Numpus(x)) ::: Tumpuses are numpuses.\nZumpus(sally) ::: Sally is a zumpus.\nConclusion:\nCold(sally) ::: Sally is cold.\n------"
    ]
  },
  {
    "id": "ProntoQA_225",
    "context": "Every tumpus is not amenable. Tumpuses are impuses. Every impus is feisty. Every impus is a dumpus. Every dumpus is cold. Every dumpus is a wumpus. Wumpuses are sweet. Every wumpus is a vumpus. Yumpuses are not large. Every vumpus is large. Vumpuses are numpuses. Numpuses are bright. Numpuses are rompuses. Each rompus is blue. Each rompus is a jompus. Each jompus is luminous. Jompuses are zumpuses. Sam is a tumpus.",
    "question": "Is the following statement true or false? Sam is large.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nTumpus(x) ::: x is a tumpus\nAmenable(x) ::: x is amenable\nImpus(x) ::: x is an impus\nFeisty(x) ::: x is feisty\nDumpus(x) ::: x is a dumpus\nCold(x) ::: x is cold\nWumpus(x) ::: x is a wumpus\nSweet(x) ::: x is sweet\nVumpus(x) ::: x is a vumpus\nLarge(x) ::: x is large\nNumpus(x) ::: x is a numpus\nBright(x) ::: x is bright\nRompus(x) ::: x is a rompus\nBlue(x) ::: x is blue\nJompus(x) ::: x is a jompus\nLuminous(x) ::: x is luminous\nZumpus(x) ::: x is a zumpus\nPremises:\n∀x (Tumpus(x) → ¬Amenable(x)) ::: Every tumpus is not amenable.\n∀x (Impus(x) → Feisty(x)) ::: Tumpuses are impuses.\n∀x (Impus(x) → Dumpus(x)) ::: Every impus is a dumpus.\n∀x (Dumpus(x) → Cold(x)) ::: Every dumpus is cold.\n∀x (Dumpus(x) → Wumpus(x)) ::: Every dumpus is a wumpus.\n∀x (Wumpus(x) → Sweet(x)) ::: Wumpuses are sweet.\n∀x (Vumpus(x) → Large(x)) ::: Every vumpus is large.\n∀x (Vumpus(x) → Numpus(x)) ::: Vumpuses are numpuses.\n∀x (Numpus(x) → Bright(x)) ::: Numpuses are bright.\n∀x (Numpus(x) → Rompus(x)) ::: Numpuses are rompuses.\n∀x (Rompus(x) → Blue(x)) ::: Each rompus is blue.\n∀x (Rompus(x) → Jompus(x)) ::: Each rompus is a jompus.\n∀x (Jompus(x) → Luminous(x)) ::: Each jompus is luminous.\n∀x (Jompus(x) → Zumpus(x)) ::: Jompuses are zumpuses.\nTumpus(sam) ::: Sam is a tumpus.\nConclusion:\nLarge(sam) ::: Sam is large.\n------"
    ]
  },
  {
    "id": "ProntoQA_226",
    "context": "Dumpuses are metallic. Impuses are not shy. Impuses are rompuses. Rompuses are not fruity. Each rompus is a jompus. Jompuses are large. Jompuses are numpuses. Numpuses are not blue. Numpuses are vumpuses. Each vumpus is not metallic. Vumpuses are wumpuses. Every wumpus is sweet. Wumpuses are zumpuses. Zumpuses are not opaque. Every zumpus is a tumpus. Every tumpus is not kind. Tumpuses are yumpuses. Stella is an impus.",
    "question": "Is the following statement true or false? Stella is metallic.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nDumpus(x) ::: x is a dumpus\nMetallic(x) ::: x is metallic\nImpus(x) ::: x is an impus\nShy(x) ::: x is shy\nRompus(x) ::: x is a rompus\nFruity(x) ::: x is fruity\nJompus(x) ::: x is a jompus\nLarge(x) ::: x is large\nNumpus(x) ::: x is a numpus\nBlue(x) ::: x is blue\nVumpus(x) ::: x is a vumpus\nWumpus(x) ::: x is a wumpus\nSweet(x) ::: x is sweet\nZumpus(x) ::: x is a zumpus\nOpaque(x) ::: x is opaque\nTumpus(x) ::: x is a tumpus\nKind(x) ::: x is kind\nYumpus(x) ::: x is a yumpus\nStella(x) ::: x is Stella\nPremises:\n∀x (Dumpus(x) → Metallic(x)) ::: Dumpuses are metallic.\n∀x (Impus(x) → ¬Shy(x)) ::: Impuses are not shy.\n∀x (Impus(x) → Rompus(x)) ::: Impuses are rompuses.\n∀x (Rompus(x) → ¬Fruity(x)) ::: Rompuses are not fruity.\n∀x (Rompus(x) → Jompus(x)) ::: Each rompus is a jompus.\n∀x (Jompus(x) → Large(x)) ::: Jompuses are large.\n∀x (Jompus(x) → Numpus(x)) ::: Jompuses are numpuses.\n∀x (Numpus(x) → ¬Blue(x)) ::: Numpuses are not blue.\n∀x (Numpus(x) → Vumpus(x)) ::: Numpuses are vumpuses.\n∀x (Vumpus(x) → ¬Metallic(x)) ::: Each vumpus is not metallic.\n∀x (Vumpus(x) → Wumpus(x)) ::: Vumpuses are wumpuses.\n∀x (Wumpus(x) → Sweet(x)) ::: Every wumpus is sweet.\n∀x (Wumpus(x) → Zumpus(x)) ::: Wumpuses are zumpuses.\n∀x (Zumpus(x) → ¬Opaque(x)) ::: Zumpuses are not opaque.\n∀x (Zumpus(x) → Tumpus(x)) ::: Every zumpus is a tumpus.\n∀x (Tumpus(x) → ¬Kind(x)) ::: Tumpuses are not kind.\n∀x (Tumpus(x) → Yumpus(x)) ::: Tumpuses are yumpuses.\nImpus(stella) ::: Stella is an impus.\nConclusion:\nMetallic(stella) ::: Stella is metallic.\n------"
    ]
  },
  {
    "id": "ProntoQA_227",
    "context": "Numpuses are opaque. Every numpus is a rompus. Every rompus is aggressive. Rompuses are tumpuses. Each tumpus is not floral. Tumpuses are yumpuses. Every yumpus is bright. Yumpuses are wumpuses. Wumpuses are temperate. Each wumpus is a dumpus. Each dumpus is wooden. Vumpuses are not nervous. Dumpuses are impuses. Every impus is nervous. Each impus is a jompus. Every jompus is large. Each jompus is a zumpus. Sam is a tumpus.",
    "question": "Is the following statement true or false? Sam is not nervous.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nNumpus(x) ::: x is a numpus\nOpaque(x) ::: x is opaque\nRompus(x) ::: x is a rompus\nAggressive(x) ::: x is aggressive\nTumpus(x) ::: x is a tumpus\nFloral(x) ::: x is floral\nYumpus(x) ::: x is a yumpus\nBright(x) ::: x is bright\nWumpus(x) ::: x is a wumpus\nTemperate(x) ::: x is temperate\nDumpus(x) ::: x is a dumpus\nWooden(x) ::: x is wooden\nVumpus(x) ::: x is a vumpus\nNervous(x) ::: x is nervous\nImpus(x) ::: x is an impus\nLarge(x) ::: x is large\nZumpus(x) ::: x is a zumpus\nSam(x) ::: x is Sam\nPremises:\n∀x (Numpus(x) → Opaque(x)) ::: Numpuses are opaque.\n∀x (Numpus(x) → Rompus(x)) ::: Every numpus is a rompus.\n∀x (Rompus(x) → Aggressive(x)) ::: Every rompus is aggressive.\n∀x (Rompus(x) → Tumpus(x)) ::: Rompuses are tumpuses.\n∀x (Tumpus(x) → ¬Floral(x)) ::: Each tumpus is not floral.\n∀x (Tumpus(x) → Yumpus(x)) ::: Tumpuses are yumpuses.\n∀x (Yumpus(x) → Bright(x)) ::: Every yumpus is bright.\n∀x (Yumpus(x) → Wumpus(x)) ::: Yumpuses are wumpuses.\n∀x (Wumpus(x) → Temperate(x)) ::: Wumpuses are temperate.\n∀x (Wumpus(x) → Dumpus(x)) ::: Each wumpus is a dumpus.\n∀x (Dumpus(x) → Wooden(x)) ::: Each dumpus is wooden.\n∀x (Vumpus(x) → ¬Nervous(x)) ::: Vumpuses are not nervous.\n∀x (Dumpus(x) → Impus(x)) ::: Dumpuses are impuses.\n∀x (Impus(x) → Nervous(x)) ::: Every impus is nervous.\n∀x (Impus(x) → Jompus(x)) ::: Each impus is a jompus.\n∀x (Jompus(x) → Large(x)) ::: Every jompus is large.\n∀x (Jompus(x) → Zumpus(x)) ::: Each jompus is a zumpus.\nTumpus(sam) ::: Sam is a tumpus.\nConclusion:\n¬Nervous(sam) ::: Sam is not nervous.\n------"
    ]
  },
  {
    "id": "ProntoQA_228",
    "context": "Each zumpus is bitter. Every zumpus is a vumpus. Every vumpus is not angry. Every vumpus is an impus. Numpuses are not transparent. Every impus is hot. Every impus is a rompus. Every rompus is not liquid. Each rompus is a dumpus. Every dumpus is feisty. Each dumpus is a yumpus. Each yumpus is transparent. Yumpuses are jompuses. Every jompus is floral. Each jompus is a tumpus. Each tumpus is bright. Tumpuses are wumpuses. Alex is a vumpus.",
    "question": "Is the following statement true or false? Alex is not transparent.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nZumpus(x) ::: x is a zumpus\nBitter(x) ::: x is bitter\nVumpus(x) ::: x is a vumpus\nAngry(x) ::: x is angry\nImpus(x) ::: x is an impus\nNumpus(x) ::: x is a numpus\nTransparent(x) ::: x is transparent\nHot(x) ::: x is hot\nRompus(x) ::: x is a rompus\nLiquid(x) ::: x is liquid\nDumpus(x) ::: x is a dumpus\nFeisty(x) ::: x is feisty\nYumpus(x) ::: x is a yumpus\nJompus(x) ::: x is a jompus\nFloral(x) ::: x is floral\nTumpus(x) ::: x is a tumpus\nBright(x) ::: x is bright\nWumpus(x) ::: x is a wumpus\nPremises:\n∀x (Zumpus(x) → Bitter(x)) ::: Each zumpus is bitter.\n∀x (Zumpus(x) → Vumpus(x)) ::: Every zumpus is a vumpus.\n∀x (Vumpus(x) → ¬Angry(x)) ::: Every vumpus is not angry.\n∀x (Vumpus(x) → Impus(x)) ::: Every vumpus is an impus.\n∀x (Numpus(x) → ¬Transparent(x)) ::: Numpuses are not transparent.\n∀x (Impus(x) → Hot(x)) ::: Every impus is hot.\n∀x (Impus(x) → Rompus(x)) ::: Every impus is a rompus.\n∀x (Rompus(x) → ¬Liquid(x)) ::: Every rompus is not liquid.\n∀x (Rompus(x) → Dumpus(x)) ::: Each rompus is a dumpus.\n∀x (Dumpus(x) → Feisty(x)) ::: Every dumpus is feisty.\n∀x (Dumpus(x) → Yumpus(x)) ::: Each dumpus is a yumpus.\n∀x (Yumpus(x) → Transparent(x)) ::: Each yumpus is transparent.\n∀x (Yumpus(x) → Jompus(x)) ::: Yumpuses are jompuses.\n∀x (Jompus(x) → Floral(x)) ::: Every jompus is floral.\n∀x (Jompus(x) → Tumpus(x)) ::: Each jompus is a tumpus.\n∀x (Tumpus(x) → Bright(x)) ::: Each tumpus is bright.\n∀x (Tumpus(x) → Wumpus(x)) ::: Tumpuses are wumpuses.\nVumpus(alex) ::: Alex is a vumpus.\nConclusion:\n¬Transparent(alex) ::: Alex is not transparent.\n------"
    ]
  },
  {
    "id": "ProntoQA_229",
    "context": "Every wumpus is not aggressive. Every wumpus is a rompus. Tumpuses are cold. Every rompus is large. Rompuses are yumpuses. Yumpuses are not sour. Yumpuses are impuses. Every impus is not opaque. Each impus is a dumpus. Every dumpus is not cold. Each dumpus is a jompus. Jompuses are not red. Jompuses are zumpuses. Each zumpus is not bright. Each zumpus is a vumpus. Vumpuses are not wooden. Every vumpus is a numpus. Alex is a wumpus.",
    "question": "Is the following statement true or false? Alex is not cold.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nWumpus(x) ::: x is a wumpus\nAggressive(x) ::: x is aggressive\nRompus(x) ::: x is a rompus\nCold(x) ::: x is cold\nLarge(x) ::: x is large\nYumpus(x) ::: x is a yumpus\nSour(x) ::: x is sour\nImpus(x) ::: x is an impus\nOpaque(x) ::: x is opaque\nDumpus(x) ::: x is a dumpus\nCold(x) ::: x is cold\nJompus(x) ::: x is a jompus\nRed(x) ::: x is red\nZumpus(x) ::: x is a zumpus\nBright(x) ::: x is bright\nVumpus(x) ::: x is a vumpus\nWooden(x) ::: x is wooden\nNumpus(x) ::: x is a numpus\nPremises:\n∀x (Wumpus(x) → ¬Aggressive(x)) ::: Every wumpus is not aggressive.\n∀x (Wumpus(x) → Rompus(x)) ::: Every wumpus is a rompus.\n∀x (Tumpus(x) → Cold(x)) ::: Tumpuses are cold.\n∀x (Rompus(x) → Large(x)) ::: Every rompus is large.\n∀x (Rompus(x) → Yumpus(x)) ::: Rompuses are yumpuses.\n∀x (Yumpus(x) → ¬Sour(x)) ::: Yumpuses are not sour.\n∀x (Yumpus(x) → Impus(x)) ::: Yumpuses are impuses.\n∀x (Impus(x) → ¬Opaque(x)) ::: Every impus is not opaque.\n∀x (Impus(x) → Dumpus(x)) ::: Each impus is a dumpus.\n∀x (Dumpus(x) → ¬Cold(x)) ::: Every dumpus is not cold.\n∀x (Dumpus(x) → Jompus(x)) ::: Each dumpus is a jompus.\n∀x (Jompus(x) → ¬Red(x)) ::: Jompuses are not red.\n∀x (Jompus(x) → Zumpus(x)) ::: Jompuses are zumpuses.\n∀x (Zumpus(x) → ¬Bright(x)) ::: Each zumpus is not bright.\n∀x (Zumpus(x) → Vumpus(x)) ::: Each zumpus is a vumpus.\n∀x (Vumpus(x) → ¬Wooden(x)) ::: Vumpuses are not wooden.\n∀x (Vumpus(x) → Numpus(x)) ::: Every vumpus is a numpus.\nWumpus(alex) ::: Alex is a wumpus.\nConclusion:\n¬Cold(alex) ::: Alex is not cold.\n------"
    ]
  },
  {
    "id": "ProntoQA_230",
    "context": "Every tumpus is not kind. Every impus is liquid. Impuses are dumpuses. Each dumpus is shy. Dumpuses are zumpuses. Every zumpus is orange. Each zumpus is a numpus. Each numpus is not bright. Numpuses are vumpuses. Vumpuses are spicy. Vumpuses are rompuses. Each rompus is cold. Rompuses are wumpuses. Wumpuses are kind. Each wumpus is a jompus. Jompuses are small. Every jompus is a yumpus. Rex is a zumpus.",
    "question": "Is the following statement true or false? Rex is kind.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nTumpus(x) ::: x is a tumpus\nKind(x) ::: x is kind\nImpus(x) ::: x is an impus\nLiquid(x) ::: x is liquid\nDumpus(x) ::: x is a dumpus\nShy(x) ::: x is shy\nZumpus(x) ::: x is a zumpus\nOrange(x) ::: x is orange\nNumpus(x) ::: x is a numpus\nBright(x) ::: x is bright\nVumpus(x) ::: x is a vumpus\nSpicy(x) ::: x is spicy\nRompus(x) ::: x is a rompus\nCold(x) ::: x is cold\nWumpus(x) ::: x is a wumpus\nKind(x) ::: x is kind\nJompus(x) ::: x is a jompus\nSmall(x) ::: x is small\nYumpus(x) ::: x is a yumpus\nPremises:\n∀x (Tumpus(x) → ¬Kind(x)) ::: Every tumpus is not kind.\n∀x (Impus(x) → Liquid(x)) ::: Every impus is liquid.\n∀x (Impus(x) → Dumpus(x)) ::: Impuses are dumpuses.\n∀x (Dumpus(x) → Shy(x)) ::: Each dumpus is shy.\n∀x (Dumpus(x) → Zumpus(x)) ::: Dumpuses are zumpuses.\n∀x (Zumpus(x) → Orange(x)) ::: Every zumpus is orange.\n∀x (Zumpus(x) → Numpus(x)) ::: Each zumpus is a numpus.\n∀x (Numpus(x) → ¬Bright(x)) ::: Each numpus is not bright.\n∀x (Numpus(x) → Vumpus(x)) ::: Numpuses are vumpuses.\n∀x (Vumpus(x) → Spicy(x)) ::: Vumpuses are spicy.\n∀x (Vumpus(x) → Rompus(x)) ::: Vumpuses are rompuses.\n∀x (Rompus(x) → Cold(x)) ::: Each rompus is cold.\n∀x (Rompus(x) → Wumpus(x)) ::: Rompuses are wumpuses.\n∀x (Wumpus(x) → Kind(x)) ::: Wumpuses are kind.\n∀x (Wumpus(x) → Jompus(x)) ::: Each wumpus is a jompus.\n∀x (Jompus(x) → Small(x)) ::: Jompuses are small.\n∀x (Jompus(x) → Yumpus(x)) ::: Every jompus is a yumpus.\nZumpus(rex) ::: Rex is a zumpus.\nConclusion:\nKind(rex) ::: Rex is kind.\n------"
    ]
  },
  {
    "id": "ProntoQA_231",
    "context": "Vumpuses are wooden. Each vumpus is a dumpus. Dumpuses are not large. Each dumpus is a yumpus. Every yumpus is bitter. Yumpuses are rompuses. Each rompus is not transparent. Each rompus is a tumpus. Each tumpus is not nervous. Every tumpus is a wumpus. Each wumpus is dull. Wumpuses are jompuses. Each jompus is angry. Every jompus is a zumpus. Each numpus is not dull. Every zumpus is not fruity. Each zumpus is an impus. Sam is a dumpus.",
    "question": "Is the following statement true or false? Sam is not dull.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nVumpus(x) ::: x is a vumpus\nWooden(x) ::: x is wooden\nDumpus(x) ::: x is a dumpus\nLarge(x) ::: x is large\nYumpus(x) ::: x is a yumpus\nBitter(x) ::: x is bitter\nRompus(x) ::: x is a rompus\nTransparent(x) ::: x is transparent\nTumpus(x) ::: x is a tumpus\nNervous(x) ::: x is nervous\nWumpus(x) ::: x is a wumpus\nDull(x) ::: x is dull\nJompus(x) ::: x is a jompus\nAngry(x) ::: x is angry\nZumpus(x) ::: x is a zumpus\nFruity(x) ::: x is fruity\nImpus(x) ::: x is an impus\nPremises:\n∀x (Vumpus(x) → Wooden(x)) ::: Vumpuses are wooden.\n∀x (Dumpus(x) → ¬Large(x)) ::: Each vumpus is a dumpus. Dumpuses are not large.\n∀x (Yumpus(x) → Bitter(x)) ::: Each yumpus is bitter.\n∀x (Rompus(x) → ¬Transparent(x)) ::: Every yumpus is rompuses. Each rompus is not transparent.\n∀x (Rompus(x) → Tumpus(x)) ::: Each rompus is a tumpus.\n∀x (Tumpus(x) → ¬Nervous(x)) ::: Each tumpus is not nervous.\n∀x (Wumpus(x) → Dull(x)) ::: Every wumpus is dull.\n∀x (Wumpus(x) → Jompus(x)) ::: Wumpuses are jompuses.\n∀x (Jompus(x) → Angry(x)) ::: Each jompus is angry.\n∀x (Jompus(x) → Zumpus(x)) ::: Every jompus is a zumpus.\n∀x (Numpus(x) → ¬Dull(x)) ::: Each numpus is not dull.\n∀x (Zumpus(x) → ¬Fruity(x)) ::: Every zumpus is not fruity.\n∀x (Zumpus(x) → Impus(x)) ::: Each zumpus is an impus.\nDumpus(sam) ::: Sam is a dumpus.\nConclusion:\n¬Dull(sam) ::: Sam is not dull.\n------"
    ]
  },
  {
    "id": "ProntoQA_232",
    "context": "Yumpuses are not large. Every yumpus is a tumpus. Every tumpus is nervous. Every tumpus is a jompus. Every jompus is temperate. Jompuses are vumpuses. Each vumpus is brown. Each dumpus is not opaque. Each vumpus is an impus. Impuses are bright. Every impus is a zumpus. Zumpuses are opaque. Every zumpus is a numpus. Numpuses are metallic. Every numpus is a rompus. Each rompus is not angry. Rompuses are wumpuses. Max is a tumpus.",
    "question": "Is the following statement true or false? Max is not opaque.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nYumpus(x) ::: x is a yumpus\nLarge(x) ::: x is large\nTumpus(x) ::: x is a tumpus\nNervous(x) ::: x is nervous\nJompus(x) ::: x is a jompus\nTemperate(x) ::: x is temperate\nVumpus(x) ::: x is a vumpus\nBrown(x) ::: x is brown\nDumpus(x) ::: x is a dumpus\nOpaque(x) ::: x is opaque\nImpus(x) ::: x is an impus\nBright(x) ::: x is bright\nZumpus(x) ::: x is a zumpus\nOpaque(x) ::: x is opaque\nNumpus(x) ::: x is a numpus\nMetallic(x) ::: x is metallic\nRompus(x) ::: x is a rompus\nAngry(x) ::: x is angry\nWumpus(x) ::: x is a wumpus\nPremises:\n∀x (Yumpus(x) → ¬Large(x)) ::: Yumpuses are not large.\n∀x (Yumpus(x) → Tumpus(x)) ::: Every yumpus is a tumpus.\n∀x (Tumpus(x) → Nervous(x)) ::: Every tumpus is nervous.\n∀x (Tumpus(x) → Jompus(x)) ::: Every tumpus is a jompus.\n∀x (Jompus(x) → Temperate(x)) ::: Every jompus is temperate.\n∀x (Jompus(x) → Vumpus(x)) ::: Jompuses are vumpuses.\n∀x (Vumpus(x) → Brown(x)) ::: Each vumpus is brown.\n∀x (Vumpus(x) → ¬Opaque(x)) ::: Each vumpus is not opaque.\n∀x (Vumpus(x) → Impus(x)) ::: Each vumpus is an impus.\n∀x (Impus(x) → Bright(x)) ::: Impuses are bright.\n∀x (Impus(x) → Zumpus(x)) ::: Every impus is a zumpus.\n∀x (Zumpus(x) → Opaque(x)) ::: Zumpuses are opaque.\n∀x (Zumpus(x) → Numpus(x)) ::: Every zumpus is a numpus.\n∀x (Numpus(x) → Metallic(x)) ::: Numpuses are metallic.\n∀x (Numpus(x) → Rompus(x)) ::: Every numpus is a rompus.\n∀x (Rompus(x) → ¬Angry(x)) ::: Each rompus is not angry.\n∀x (Rompus(x) → Wumpus(x)) ::: Rompuses are wumpuses.\nTumpus(max) ::: Max is a tumpus.\nConclusion:\n¬Opaque(max) ::: Max is not opaque.\n------"
    ]
  },
  {
    "id": "ProntoQA_233",
    "context": "Wumpuses are opaque. Every wumpus is an impus. Dumpuses are large. Impuses are red. Impuses are numpuses. Each numpus is temperate. Every numpus is a tumpus. Each tumpus is floral. Each tumpus is a rompus. Each rompus is not large. Every rompus is a jompus. Rex is a wumpus.",
    "question": "Is the following statement true or false? Rex is not large.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant.lpg\n------"
    ]
  },
  {
    "id": "ProntoQA_234",
    "context": "Every impus is transparent. Impuses are tumpuses. Each tumpus is angry. Tumpuses are dumpuses. Every dumpus is not orange. Each dumpus is a jompus. Jompuses are feisty. Jompuses are numpuses. Every numpus is not earthy. Every rompus is earthy. Each numpus is a vumpus. Every vumpus is temperate. Vumpuses are wumpuses. Every wumpus is small. Every wumpus is a yumpus. Every yumpus is not metallic. Every yumpus is a zumpus. Stella is an impus.",
    "question": "Is the following statement true or false? Stella is not earthy.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nImpus(x) ::: x is an impus\nTransparent(x) ::: x is transparent\nTumpus(x) ::: x is a tumpus\nAngry(x) ::: x is angry\nDumpus(x) ::: x is a dumpus\nOrange(x) ::: x is orange\nJompus(x) ::: x is a jompus\nFeisty(x) ::: x is feisty\nNumpus(x) ::: x is a numpus\nEarthy(x) ::: x is earthy\nVumpus(x) ::: x is a vumpus\nTemperate(x) ::: x is temperate\nWumpus(x) ::: x is a wumpus\nSmall(x) ::: x is small\nYumpus(x) ::: x is a yumpus\nMetallic(x) ::: x is metallic\nZumpus(x) ::: x is a zumpus\nStella(x) ::: x is Stella\nPremises:\n∀x (Impus(x) → Transparent(x)) ::: Every impus is transparent.\n∀x (Impus(x) → Tumpus(x)) ::: Impuses are tumpuses.\n∀x (Tumpus(x) → Angry(x)) ::: Each tumpus is angry.\n∀x (Dumpus(x) → Tumpus(x)) ::: Tumpuses are dumpuses.\n∀x (Dumpus(x) → ¬Orange(x)) ::: Every dumpus is not orange.\n∀x (Dumpus(x) → Jompus(x)) ::: Each dumpus is a jompus.\n∀x (Jompus(x) → Feisty(x)) ::: Jompuses are feisty.\n∀x (Jompus(x) → Numpus(x)) ::: Jompuses are numpuses.\n∀x (Numpus(x) → ¬Earthy(x)) ::: Every numpus is not earthy.\n∀x (Rompus(x) → Earthy(x)) ::: Every rompus is earthy.\n∀x (Numpus(x) → Vumpus(x)) ::: Each numpus is a vumpus.\n∀x (Vumpus(x) → Temperate(x)) ::: Every vumpus is temperate.\n∀x (Vumpus(x) → Wumpus(x)) ::: Vumpuses are wumpuses.\n∀x (Wumpus(x) → Small(x)) ::: Every wumpus is small.\n∀x (Wumpus(x) → Yumpus(x)) ::: Every wumpus is a yumpus.\n∀x (Yumpus(x) → ¬Metallic(x)) ::: Every yumpus is not metallic.\n∀x (Yumpus(x) → Zumpus(x)) ::: Every yumpus is a zumpus.\nImpus(stella) ::: Stella is an impus.\nConclusion:\n¬Earthy(stella) ::: Stella is not earthy.\n------"
    ]
  },
  {
    "id": "ProntoQA_235",
    "context": "Each tumpus is temperate. Each tumpus is a dumpus. Every dumpus is opaque. Every dumpus is a vumpus. Vumpuses are brown. Vumpuses are yumpuses. Every jompus is not happy. Yumpuses are dull. Yumpuses are wumpuses. Each wumpus is happy. Wumpuses are numpuses. Numpuses are earthy. Numpuses are zumpuses. Zumpuses are not bitter. Zumpuses are impuses. Stella is a tumpus.",
    "question": "Is the following statement true or false? Stella is not happy.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nTumpus(x) ::: x is a tumpus\nTemperate(x) ::: x is temperate\nDumpus(x) ::: x is a dumpus\nOpaque(x) ::: x is opaque\nVumpus(x) ::: x is a vumpus\nBrown(x) ::: x is brown\nYumpus(x) ::: x is a yumpus\nHappy(x) ::: x is happy\nWumpus(x) ::: x is a wumpus\nNumpus(x) ::: x is a numpus\nEarthy(x) ::: x is earthy\nZumpus(x) ::: x is a zumpus\nBitter(x) ::: x is bitter\nImpus(x) ::: x is an impus\nStella(x) ::: x is Stella\nPremises:\n∀x (Tumpus(x) → Temperate(x)) ::: Each tumpus is temperate.\n∀x (Tumpus(x) → Dumpus(x)) ::: Each tumpus is a dumpus.\n∀x (Dumpus(x) → Opaque(x)) ::: Every dumpus is opaque.\n∀x (Dumpus(x) → Vumpus(x)) ::: Every dumpus is a vumpus.\n∀x (Vumpus(x) → Brown(x)) ::: Vumpuses are brown.\n∀x (Vumpus(x) → Yumpus(x)) ::: Vumpuses are yumpuses.\n∀x (Jompus(x) → ¬Happy(x)) ::: Every jompus is not happy.\n∀x (Yumpus(x) → Dull(x)) ::: Yumpuses are dull.\n∀x (Yumpus(x) → Wumpus(x)) ::: Yumpuses are wumpuses.\n∀x (Wumpus(x) → Happy(x)) ::: Each wumpus is happy.\n∀x (Wumpus(x) → Numpus(x)) ::: Wumpuses are numpuses.\n∀x (Numpus(x) → Earthy(x)) ::: Numpuses are earthy.\n∀x (Numpus(x) → Zumpus(x)) ::: Numpuses are zumpuses.\n∀x (Zumpus(x) → ¬Bitter(x)) ::: Zumpuses are not bitter.\n∀x (Zumpus(x) → Impus(x)) ::: Zumpuses are impuses.\nTumpus(stella) ::: Stella is a tumpus.\nConclusion:\n¬Happy(stella) ::: Stella is not happy.\n------"
    ]
  },
  {
    "id": "ProntoQA_236",
    "context": "Yumpuses are not orange. Jompuses are liquid. Each jompus is a vumpus. Vumpuses are sour. Vumpuses are rompuses. Each rompus is earthy. Every rompus is an impus. Impuses are not opaque. Every impus is a numpus. Numpuses are not small. Each numpus is a tumpus. Every tumpus is orange. Every tumpus is a dumpus. Dumpuses are not amenable. Every dumpus is a zumpus. Zumpuses are temperate. Zumpuses are wumpuses. Fae is a vumpus.",
    "question": "Is the following statement true or false? Fae is orange.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nYumpus(x) ::: x is a yumpus\nOrange(x) ::: x is orange\nJompus(x) ::: x is a jompus\nLiquid(x) ::: x is liquid\nVumpus(x) ::: x is a vumpus\nSour(x) ::: x is sour\nRompus(x) ::: x is a rompus\nEarthy(x) ::: x is earthy\nImpus(x) ::: x is an impus\nOpaque(x) ::: x is opaque\nNumpus(x) ::: x is a numpus\nSmall(x) ::: x is small\nTumpus(x) ::: x is a tumpus\nDumpus(x) ::: x is a dumpus\nAmenable(x) ::: x is amenable\nZumpus(x) ::: x is a zumpus\nTemperate(x) ::: x is temperate\nWumpus(x) ::: x is a wumpus\nFae(x) ::: x is fae\nPremises:\n∀x (Yumpus(x) → ¬Orange(x)) ::: Yumpuses are not orange.\n∀x (Jompus(x) → Liquid(x)) ::: Jompuses are liquid.\n∀x (Jompus(x) → Vumpus(x)) ::: Each jompus is a vumpus.\n∀x (Vumpus(x) → Sour(x)) ::: Vumpuses are sour.\n∀x (Vumpus(x) → Rompus(x)) ::: Vumpuses are rompuses.\n∀x (Rompus(x) → Earthy(x)) ::: Each rompus is earthy.\n∀x (Rompus(x) → Impus(x)) ::: Every rompus is an impus.\n∀x (Impus(x) → ¬Opaque(x)) ::: Impuses are not opaque.\n∀x (Impus(x) → Numpus(x)) ::: Every impus is a numpus.\n∀x (Numpus(x) → ¬Small(x)) ::: Numpuses are not small.\n∀x (Numpus(x) → Tumpus(x)) ::: Each numpus is a tumpus.\n∀x (Tumpus(x) → Orange(x)) ::: Every tumpus is orange.\n∀x (Tumpus(x) → Dumpus(x)) ::: Every tumpus is a dumpus.\n∀x (Dumpus(x) → ¬Amenable(x)) ::: Dumpuses are not amenable.\n∀x (Dumpus(x) → Zumpus(x)) ::: Every dumpus is a zumpus.\n∀x (Zumpus(x) → Temperate(x)) ::: Zumpuses are temperate.\n∀x (Zumpus(x) → Wumpus(x)) ::: Zumpuses are wumpuses.\nVumpus(fae) ::: Fae is a vumpus.\nConclusion:\nOrange(fae) ::: Fae is orange.\n------"
    ]
  },
  {
    "id": "ProntoQA_237",
    "context": "Impuses are dull. Impuses are dumpuses. Dumpuses are not small. Dumpuses are numpuses. Numpuses are not happy. Each numpus is a tumpus. Every rompus is cold. Tumpuses are kind. Every tumpus is a jompus. Jompuses are not earthy. Jompuses are yumpuses. Yumpuses are blue. Yumpuses are wumpuses. Each wumpus is transparent. Wumpuses are vumpuses. Every vumpus is not cold. Vumpuses are zumpuses. Sally is a tumpus.",
    "question": "Is the following statement true or false? Sally is cold.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nImpus(x) ::: x is an impus\nDull(x) ::: x is dull\nDumpus(x) ::: x is a dumpus\nSmall(x) ::: x is small\nNumpus(x) ::: x is a numpus\nHappy(x) ::: x is happy\nTumpus(x) ::: x is a tumpus\nRompus(x) ::: x is a rompus\nCold(x) ::: x is cold\nKind(x) ::: x is kind\nJompus(x) ::: x is a jompus\nEarthy(x) ::: x is earthy\nYumpus(x) ::: x is a yumpus\nBlue(x) ::: x is blue\nWumpus(x) ::: x is a wumpus\nTransparent(x) ::: x is transparent\nVumpus(x) ::: x is a vumpus\nZumpus(x) ::: x is a zumpus\nPremises:\n∀x (Impus(x) → Dull(x)) ::: Impuses are dull.\n∀x (Impus(x) → Dumpus(x)) ::: Impuses are dumpuses.\n∀x (Dumpus(x) → ¬Small(x)) ::: Dumpuses are not small.\n∀x (Dumpus(x) → Numpus(x)) ::: Dumpuses are numpuses.\n∀x (Numpus(x) → ¬Happy(x)) ::: Numpuses are not happy.\n∀x (Numpus(x) → Tumpus(x)) ::: Each numpus is a tumpus.\n∀x (Rompus(x) → Cold(x)) ::: Every rompus is cold.\n∀x (Tumpus(x) → Kind(x)) ::: Tumpuses are kind.\n∀x (Tumpus(x) → Jompus(x)) ::: Every tumpus is a jompus.\n∀x (Jompus(x) → ¬Earthy(x)) ::: Jompuses are not earthy.\n∀x (Jompus(x) → Yumpus(x)) ::: Jompuses are yumpuses.\n∀x (Yumpus(x) → Blue(x)) ::: Yumpuses are blue.\n∀x (Yumpus(x) → Wumpus(x)) ::: Yumpuses are wumpuses.\n∀x (Wumpus(x) → Transparent(x)) ::: Each wumpus is transparent.\n∀x (Wumpus(x) → Vumpus(x)) ::: Wumpuses are vumpuses.\n∀x (Vumpus(x) → ¬Cold(x)) ::: Every vumpus is not cold.\n∀x (Vumpus(x) → Zumpus(x)) ::: Vumpuses are zumpuses.\nTumpus(sally) ::: Sally is a tumpus.\nConclusion:\nCold(sally) ::: Sally is cold.\n------"
    ]
  },
  {
    "id": "ProntoQA_238",
    "context": "Wumpuses are spicy. Tumpuses are not small. Every wumpus is a dumpus. Every dumpus is not floral. Each dumpus is a rompus. Rompuses are angry. Every rompus is a vumpus. Vumpuses are happy. Vumpuses are zumpuses. Zumpuses are metallic. Zumpuses are impuses. Every impus is not orange. Impuses are numpuses. Every numpus is small. Numpuses are jompuses. Jompuses are cold. Jompuses are yumpuses. Polly is a rompus.",
    "question": "Is the following statement true or false? Polly is small.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nWumpus(x) ::: x is a wumpus\nSpicy(x) ::: x is spicy\nTumpus(x) ::: x is a tumpus\nSmall(x) ::: x is small\nDumpus(x) ::: x is a dumpus\nFloral(x) ::: x is floral\nRompus(x) ::: x is a rompus\nAngry(x) ::: x is angry\nVumpus(x) ::: x is a vumpus\nHappy(x) ::: x is happy\nZumpus(x) ::: x is a zumpus\nMetallic(x) ::: x is metallic\nImpus(x) ::: x is an impus\nOrange(x) ::: x is orange\nNumpus(x) ::: x is a numpus\nSmall(x) ::: x is small\nJompus(x) ::: x is a jompus\nCold(x) ::: x is cold\nYumpus(x) ::: x is a yumpus\nPremises:\n∀x (Wumpus(x) → Spicy(x)) ::: Wumpuses are spicy.\n∀x (Tumpus(x) → ¬Small(x)) ::: Tumpuses are not small.\n∀x (Wumpus(x) → Dumpus(x)) ::: Every wumpus is a dumpus.\n∀x (Dumpus(x) → ¬Floral(x)) ::: Every dumpus is not floral.\n∀x (Dumpus(x) → Rompus(x)) ::: Each dumpus is a rompus.\n∀x (Rompus(x) → Angry(x)) ::: Rompuses are angry.\n∀x (Rompus(x) → Vumpus(x)) ::: Every rompus is a vumpus.\n∀x (Vumpus(x) → Happy(x)) ::: Vumpuses are happy.\n∀x (Vumpus(x) → Zumpus(x)) ::: Vumpuses are zumpuses.\n∀x (Zumpus(x) → Metallic(x)) ::: Zumpuses are metallic.\n∀x (Zumpus(x) → Impus(x)) ::: Zumpuses are impuses.\n∀x (Impus(x) → ¬Orange(x)) ::: Every impus is not orange.\n∀x (Impus(x) → Numpus(x)) ::: Impuses are numpuses.\n∀x (Numpus(x) → Small(x)) ::: Every numpus is small.\n∀x (Numpus(x) → Jompus(x)) ::: Numpuses are jompuses.\n∀x (Jompus(x) → Cold(x)) ::: Jompuses are cold.\n∀x (Jompus(x) → Yumpus(x)) ::: Jompuses are yumpuses.\nRompus(polly) ::: Polly is a rompus.\nConclusion:\nSmall(polly) ::: Polly is small.\n------"
    ]
  },
  {
    "id": "ProntoQA_239",
    "context": "Tumpuses are fruity. Tumpuses are jompuses. Jompuses are not hot. Every impus is not spicy. Jompuses are yumpuses. Every yumpus is not luminous. Each yumpus is a dumpus. Dumpuses are not shy. Dumpuses are rompuses. Each rompus is spicy. Rompuses are vumpuses. Vumpuses are orange. Every vumpus is a zumpus. Every zumpus is dull. Each zumpus is a numpus. Each numpus is opaque. Numpuses are wumpuses. Alex is a tumpus.",
    "question": "Is the following statement true or false? Alex is not spicy.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nTumpus(x) ::: x is a tumpus\nFruity(x) ::: x is fruity\nJompus(x) ::: x is a jompus\nHot(x) ::: x is hot\nImpus(x) ::: x is an impus\nSpicy(x) ::: x is spicy\nYumpus(x) ::: x is a yumpus\nLuminous(x) ::: x is luminous\nDumpus(x) ::: x is a dumpus\nShy(x) ::: x is shy\nRompus(x) ::: x is a rompus\nSpicy(x) ::: x is spicy\nVumpus(x) ::: x is a vumpus\nOrange(x) ::: x is orange\nZumpus(x) ::: x is a zumpus\nDull(x) ::: x is dull\nNumpus(x) ::: x is a numpus\nOpaque(x) ::: x is opaque\nWumpus(x) ::: x is a wumpus\nPremises:\n∀x (Tumpus(x) → Fruity(x)) ::: Tumpuses are fruity.\n∀x (Tumpus(x) → Jompus(x)) ::: Tumpuses are jompuses.\n∀x (Jompus(x) → ¬Hot(x)) ::: Jompuses are not hot.\n∀x (Impus(x) → ¬Spicy(x)) ::: Every impus is not spicy.\n∀x (Jompus(x) → Yumpus(x)) ::: Jompuses are yumpuses.\n∀x (Yumpus(x) → ¬Luminous(x)) ::: Every yumpus is not luminous.\n∀x (Yumpus(x) → Dumpus(x)) ::: Each yumpus is a dumpus.\n∀x (Dumpus(x) → ¬Shy(x)) ::: Dumpuses are not shy.\n∀x (Dumpus(x) → Rompus(x)) ::: Dumpuses are rompuses.\n∀x (Rompus(x) → Spicy(x)) ::: Rompuses are spicy.\n∀x (Rompus(x) → Vumpus(x)) ::: Rompuses are vumpuses.\n∀x (Vumpus(x) → Orange(x)) ::: Vumpuses are orange.\n∀x (Vumpus(x) → Zumpus(x)) ::: Every vumpus is a zumpus.\n∀x (Zumpus(x) → Dull(x)) ::: Every zumpus is dull.\n∀x (Zumpus(x) → Numpus(x)) ::: Each zumpus is a numpus.\n∀x (Numpus(x) → Opaque(x)) ::: Each numpus is opaque.\n∀x (Numpus(x) → Wumpus(x)) ::: Numpuses are wumpuses.\nTumpus(alex) ::: Alex is a tumpus.\nConclusion:\n¬Spicy(alex) ::: Alex is not spicy.\n------"
    ]
  },
  {
    "id": "ProntoQA_240",
    "context": "Wumpuses are feisty. Every wumpus is a yumpus. Yumpuses are kind. Every yumpus is a jompus. Jompuses are liquid. Each jompus is an impus. Each impus is transparent. Impuses are tumpuses. Tumpuses are not dull. Tumpuses are numpuses. Numpuses are temperate. Numpuses are vumpuses. Each zumpus is not spicy. Every vumpus is blue. Each vumpus is a dumpus. Each dumpus is spicy. Every dumpus is a rompus. Alex is an impus.",
    "question": "Is the following statement true or false? Alex is spicy.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nWumpus(x) ::: x is a wumpus\nFeisty(x) ::: x is feisty\nYumpus(x) ::: x is a yumpus\nKind(x) ::: x is kind\nJompus(x) ::: x is a jompus\nLiquid(x) ::: x is liquid\nImpus(x) ::: x is an impus\nTransparent(x) ::: x is transparent\nTumpus(x) ::: x is a tumpus\nDull(x) ::: x is dull\nNumpus(x) ::: x is a numpus\nTemperate(x) ::: x is temperate\nVumpus(x) ::: x is a vumpus\nSpicy(x) ::: x is spicy\nBlue(x) ::: x is blue\nDumpus(x) ::: x is a dumpus\nRompus(x) ::: x is a rompus\nPremises:\n∀x (Wumpus(x) → Feisty(x)) ::: Wumpuses are feisty.\n∀x (Wumpus(x) → Yumpus(x)) ::: Every wumpus is a yumpus.\n∀x (Yumpus(x) → Kind(x)) ::: Yumpuses are kind.\n∀x (Yumpus(x) → Jompus(x)) ::: Every yumpus is a jompus.\n∀x (Jompus(x) → Liquid(x)) ::: Jompuses are liquid.\n∀x (Jompus(x) → Impus(x)) ::: Each jompus is an impus.\n∀x (Impus(x) → Transparent(x)) ::: Each impus is transparent.\n∀x (Impus(x) → Tumpus(x)) ::: Impuses are tumpuses.\n∀x (Tumpus(x) → ¬Dull(x)) ::: Tumpuses are not dull.\n∀x (Tumpus(x) → Numpus(x)) ::: Tumpuses are numpuses.\n∀x (Numpus(x) → Temperate(x)) ::: Numpuses are temperate.\n∀x (Numpus(x) → Vumpus(x)) ::: Numpuses are vumpuses.\n∀x (Zumpus(x) → ¬Spicy(x)) ::: Each zumpus is not spicy.\n∀x (Vumpus(x) → Blue(x)) ::: Every vumpus is blue.\n∀x (Vumpus(x) → Dumpus(x)) ::: Each vumpus is a dumpus.\n∀x (Dumpus(x) → Spicy(x)) ::: Each dumpus is spicy.\n∀x (Dumpus(x) → Rompus(x)) ::: Every dumpus is a rompus.\nImpus(alex) ::: Alex is an impus.\nConclusion:\nSpicy(alex) ::: Alex is spicy.\n------"
    ]
  },
  {
    "id": "ProntoQA_241",
    "context": "Each dumpus is spicy. Every dumpus is a jompus. Each jompus is large. Jompuses are impuses. Impuses are transparent. Impuses are wumpuses. Wumpuses are liquid. Wumpuses are tumpuses. Each tumpus is orange. Tumpuses are yumpuses. Yumpuses are nervous. Each yumpus is a vumpus. Vumpuses are not temperate. Each vumpus is a numpus. Zumpuses are not orange. Each numpus is kind. Every numpus is a rompus. Sally is a dumpus.",
    "question": "Is the following statement true or false? Sally is not orange.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nDumpus(x) ::: x is a dumpus\nSpicy(x) ::: x is spicy\nJompus(x) ::: x is a jompus\nLarge(x) ::: x is large\nImpus(x) ::: x is an impus\nTransparent(x) ::: x is transparent\nWumpus(x) ::: x is a wumpus\nLiquid(x) ::: x is liquid\nTumpus(x) ::: x is a tumpus\nOrange(x) ::: x is orange\nYumpus(x) ::: x is a yumpus\nNervous(x) ::: x is nervous\nVumpus(x) ::: x is a vumpus\nTemperate(x) ::: x is temperate\nNumpus(x) ::: x is a numpus\nKind(x) ::: x is kind\nRompus(x) ::: x is a rompus\nPremises:\n∀x (Dumpus(x) → Spicy(x)) ::: Each dumpus is spicy.\n∀x (Dumpus(x) → Jompus(x)) ::: Every dumpus is a jompus.\n∀x (Jompus(x) → Large(x)) ::: Each jompus is large.\n∀x (Jompus(x) → Impus(x)) ::: Jompuses are impuses.\n∀x (Impus(x) → Transparent(x)) ::: Impuses are transparent.\n∀x (Impus(x) → Wumpus(x)) ::: Impuses are wumpuses.\n∀x (Wumpus(x) → Liquid(x)) ::: Wumpuses are liquid.\n∀x (Wumpus(x) → Tumpus(x)) ::: Wumpuses are tumpuses.\n∀x (Tumpus(x) → Orange(x)) ::: Each tumpus is orange.\n∀x (Tumpus(x) → Yumpus(x)) ::: Each tumpus is a yumpus.\n∀x (Yumpus(x) → Nervous(x)) ::: Yumpuses are nervous.\n∀x (Yumpus(x) → Vumpus(x)) ::: Each yumpus is a vumpus.\n∀x (Vumpus(x) → ¬Temperate(x)) ::: Vumpuses are not temperate.\n∀x (Vumpus(x) → Numpus(x)) ::: Each vumpus is a numpus.\n∀x (Numpus(x) → Kind(x)) ::: Each numpus is kind.\n∀x (Numpus(x) → Rompus(x)) ::: Every numpus is a rompus.\nDumpus(sally) ::: Sally is a dumpus.\nConclusion:\n¬Orange(sally) ::: Sally is not orange.\n------"
    ]
  },
  {
    "id": "ProntoQA_242",
    "context": "Zumpuses are large. Every zumpus is a numpus. Every numpus is luminous. Numpuses are wumpuses. Each wumpus is floral. Each wumpus is a yumpus. Yumpuses are spicy. Yumpuses are impuses. Impuses are transparent. Every impus is a rompus. Dumpuses are blue. Rompuses are not blue. Every rompus is a tumpus. Tumpuses are nervous. Tumpuses are jompuses. Jompuses are not dull. Each jompus is a vumpus. Wren is a numpus.",
    "question": "Is the following statement true or false? Wren is not blue.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nZumpus(x) ::: x is a zumpus\nLarge(x) ::: x is large\nNumpus(x) ::: x is a numpus\nLuminous(x) ::: x is luminous\nWumpus(x) ::: x is a wumpus\nFloral(x) ::: x is floral\nYumpus(x) ::: x is a yumpus\nSpicy(x) ::: x is spicy\nImpus(x) ::: x is an impus\nTransparent(x) ::: x is transparent\nRompus(x) ::: x is a rompus\nBlue(x) ::: x is blue\nDumpus(x) ::: x is a dumpus\nTumpus(x) ::: x is a tumpus\nNervous(x) ::: x is nervous\nJompus(x) ::: x is a jompus\nVumpus(x) ::: x is a vumpus\nPremises:\n∀x (Zumpus(x) → Large(x)) ::: Zumpuses are large.\n∀x (Numpus(x) → Luminous(x)) ::: Every numpus is luminous.\n∀x (Numpus(x) → Wumpus(x)) ::: Numpuses are wumpuses.\n∀x (Wumpus(x) → Floral(x)) ::: Each wumpus is floral.\n∀x (Wumpus(x) → Yumpus(x)) ::: Each wumpus is a yumpus.\n∀x (Yumpus(x) → Spicy(x)) ::: Yumpuses are spicy.\n∀x (Yumpus(x) → Impus(x)) ::: Yumpuses are impuses.\n∀x (Impus(x) → Transparent(x)) ::: Impuses are transparent.\n∀x (Impus(x) → Rompus(x)) ::: Every impus is a rompus.\n∀x (Dumpus(x) → Blue(x)) ::: Dumpuses are blue.\n∀x (Rompus(x) → ¬Blue(x)) ::: Rompuses are not blue.\n∀x (Rompus(x) → Tumpus(x)) ::: Every rompus is a tumpus.\n∀x (Tumpus(x) → Nervous(x)) ::: Tumpuses are nervous.\n∀x (Tumpus(x) → Jompus(x)) ::: Tumpuses are jompuses.\n∀x (Jompus(x) → ¬Dull(x)) ::: Jompuses are not dull.\n∀x (Jompus(x) → Vumpus(x)) ::: Each jompus is a vumpus.\nNumpus(wren) ::: Wren is a numpus.\nConclusion:\n¬Blue(wren) ::: Wren is not blue.\n------"
    ]
  },
  {
    "id": "ProntoQA_243",
    "context": "Tumpuses are bright. Every tumpus is a jompus. Jompuses are mean. Jompuses are yumpuses. Every yumpus is transparent. Every yumpus is a zumpus. Zumpuses are red. Each zumpus is a vumpus. Every vumpus is not luminous. Each vumpus is a rompus. Each rompus is not feisty. Rompuses are impuses. Every impus is temperate. Every impus is a wumpus. Each wumpus is not fruity. Every wumpus is a numpus. Dumpuses are feisty. Max is a jompus.",
    "question": "Is the following statement true or false? Max is feisty.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nTumpus(x) ::: x is a tumpus\nBright(x) ::: x is bright\nJompus(x) ::: x is a jompus\nMean(x) ::: x is mean\nYumpus(x) ::: x is a yumpus\nTransparent(x) ::: x is transparent\nZumpus(x) ::: x is a zumpus\nRed(x) ::: x is red\nVumpus(x) ::: x is a vumpus\nLuminous(x) ::: x is luminous\nRompus(x) ::: x is a rompus\nFeisty(x) ::: x is feisty\nImpus(x) ::: x is an impus\nTemperate(x) ::: x is temperate\nWumpus(x) ::: x is a wumpus\nFruity(x) ::: x is fruity\nNumpus(x) ::: x is a numpus\nDumpus(x) ::: x is a dumpus\nPremises:\n∀x (Tumpus(x) → Bright(x)) ::: Tumpuses are bright.\n∀x (Tumpus(x) → Jompus(x)) ::: Every tumpus is a jompus.\n∀x (Jompus(x) → Mean(x)) ::: Jompuses are mean.\n∀x (Yumpus(x) → Zumpus(x)) ::: Every yumpus is a zumpus.\n∀x (Zumpus(x) → Red(x)) ::: Every zumpus is red.\n∀x (Zumpus(x) → Vumpus(x)) ::: Every zumpus is a vumpus.\n∀x (Vumpus(x) → ¬Luminous(x)) ::: Every vumpus is not luminous.\n∀x (Vumpus(x) → Rompus(x)) ::: Each vumpus is a rompus.\n∀x (Rompus(x) → ¬Feisty(x)) ::: Each rompus is not feisty.\n∀x (Impus(x) → Temperate(x)) ::: Every impus is temperate.\n∀x (Impus(x) → Wumpus(x)) ::: Every impus is a wumpus.\n∀x (Wumpus(x) → ¬Fruity(x)) ::: Each wumpus is not fruity.\n∀x (Wumpus(x) → Numpus(x)) ::: Every wumpus is a numpus.\n∀x (Dumpus(x) → Feisty(x)) ::: Dumpuses are feisty.\nJompus(max) ::: Max is a jompus.\nConclusion:\nFeisty(max) ::: Max is feisty.\n------"
    ]
  },
  {
    "id": "ProntoQA_244",
    "context": "Rompuses are shy. Each rompus is a jompus. Jompuses are sour. Jompuses are yumpuses. Every yumpus is blue. Yumpuses are impuses. Impuses are not fruity. Every impus is a vumpus. Every tumpus is transparent. Each vumpus is luminous. Each vumpus is a zumpus. Zumpuses are not transparent. Every zumpus is a dumpus. Every dumpus is temperate. Dumpuses are wumpuses. Wumpuses are not dull. Each wumpus is a numpus. Wren is a jompus.",
    "question": "Is the following statement true or false? Wren is not transparent.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nRompus(x) ::: x is a rompus\nShy(x) ::: x is shy\nJompus(x) ::: x is a jompus\nSour(x) ::: x is sour\nYumpus(x) ::: x is a yumpus\nBlue(x) ::: x is blue\nImpus(x) ::: x is an impus\nFruity(x) ::: x is fruity\nVumpus(x) ::: x is a vumpus\nTumpus(x) ::: x is a tumpus\nTransparent(x) ::: x is transparent\nLuminous(x) ::: x is luminous\nZumpus(x) ::: x is a zumpus\nDumpus(x) ::: x is a dumpus\nTemperate(x) ::: x is temperate\nWumpus(x) ::: x is a wumpus\nDull(x) ::: x is dull\nNumpus(x) ::: x is a numpus\nWren(x) ::: x is Wren\nPremises:\n∀x (Rompus(x) → Shy(x)) ::: Rompuses are shy.\n∀x (Jompus(x) → Sour(x)) ::: Each rompus is a jompus.\n∀x (Jompus(x) → Sour(x)) ::: Jompuses are sour.\n∀x (Yumpus(x) → Blue(x)) ::: Yumpuses are blue.\n∀x (Yumpus(x) → Impus(x)) ::: Every yumpus is an impus.\n∀x (Impus(x) → ¬Fruity(x)) ::: Impuses are not fruity.\n∀x (Impus(x) → Vumpus(x)) ::: Every impus is a vumpus.\n∀x (Tumpus(x) → Transparent(x)) ::: Every tumpus is transparent.\n∀x (Vumpus(x) → Luminous(x)) ::: Each vumpus is luminous.\n∀x (Vumpus(x) → Zumpus(x)) ::: Each vumpus is a zumpus.\n∀x (Zumpus(x) → ¬Transparent(x)) ::: Zumpuses are not transparent.\n∀x (Zumpus(x) → Dumpus(x)) ::: Every zumpus is a dumpus.\n∀x (Dumpus(x) → Temperate(x)) ::: Every dumpus is temperate.\n∀x (Dumpus(x) → Wumpus(x)) ::: Dumpuses are wumpuses.\n∀x (Wumpus(x) → ¬Dull(x)) ::: Wumpuses are not dull.\n∀x (Wumpus(x) → Numpus(x)) ::: Each wumpus is a numpus.\nJompus(wren) ::: Wren is a jompus.\nConclusion:\n¬Transparent(wren) ::: Wren is not transparent.\n------"
    ]
  },
  {
    "id": "ProntoQA_245",
    "context": "Every tumpus is not liquid. Tumpuses are impuses. Every impus is blue. Every impus is a zumpus. Zumpuses are opaque. Vumpuses are not large. Every zumpus is a numpus. Numpuses are hot. Each numpus is a yumpus. Yumpuses are sour. Yumpuses are jompuses. Every jompus is dull. Jompuses are rompuses. Rompuses are large. Each rompus is a wumpus. Each wumpus is fruity. Each wumpus is a dumpus. Rex is a zumpus.",
    "question": "Is the following statement true or false? Rex is large.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nTumpus(x) ::: x is a tumpus\nLiquid(x) ::: x is liquid\nImpus(x) ::: x is an impus\nBlue(x) ::: x is blue\nZumpus(x) ::: x is a zumpus\nOpaque(x) ::: x is opaque\nVumpus(x) ::: x is a vumpus\nLarge(x) ::: x is large\nNumpus(x) ::: x is a numpus\nHot(x) ::: x is hot\nYumpus(x) ::: x is a yumpus\nSour(x) ::: x is sour\nJompus(x) ::: x is a jompus\nDull(x) ::: x is dull\nRompus(x) ::: x is a rompus\nLarge(x) ::: x is large\nWumpus(x) ::: x is a wumpus\nFruity(x) ::: x is fruity\nDumpus(x) ::: x is a dumpus\nPremises:\n∀x (Tumpus(x) → ¬Liquid(x)) ::: Every tumpus is not liquid.\n∀x (Impus(x) → Blue(x)) ::: Tumpuses are impuses.\n∀x (Impus(x) → Zumpus(x)) ::: Every impus is a zumpus.\n∀x (Zumpus(x) → Opaque(x)) ::: Zumpuses are opaque.\n∀x (Vumpus(x) → ¬Large(x)) ::: Vumpuses are not large.\n∀x (Zumpus(x) → Numpus(x)) ::: Every zumpus is a numpus.\n∀x (Numpus(x) → Hot(x)) ::: Numpuses are hot.\n∀x (Numpus(x) → Yumpus(x)) ::: Each numpus is a yumpus.\n∀x (Yumpus(x) → Sour(x)) ::: Yumpuses are sour.\n∀x (Yumpus(x) → Jompus(x)) ::: Yumpuses are jompuses.\n∀x (Jompus(x) → Dull(x)) ::: Every jompus is dull.\n∀x (Jompus(x) → Rompus(x)) ::: Jompuses are rompuses.\n∀x (Rompus(x) → Large(x)) ::: Rompuses are large.\n∀x (Rompus(x) → Wumpus(x)) ::: Each rompus is a wumpus.\n∀x (Wumpus(x) → Fruity(x)) ::: Each wumpus is fruity.\n∀x (Wumpus(x) → Dumpus(x)) ::: Each wumpus is a dumpus.\nZumpus(rex) ::: Rex is a zumpus.\nConclusion:\nLarge(rex) ::: Rex is large.\n------"
    ]
  },
  {
    "id": "ProntoQA_246",
    "context": "Each dumpus is opaque. Each dumpus is a vumpus. Vumpuses are not dull. Every vumpus is an impus. Impuses are not hot. Every impus is a wumpus. Each wumpus is spicy. Wumpuses are zumpuses. Each zumpus is floral. Zumpuses are numpuses. Each numpus is not red. Each rompus is red. Every numpus is a yumpus. Yumpuses are wooden. Yumpuses are jompuses. Each jompus is feisty. Each jompus is a tumpus. Sam is a vumpus.",
    "question": "Is the following statement true or false? Sam is not red.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nDumpus(x) ::: x is a dumpus\nOpaque(x) ::: x is opaque\nVumpus(x) ::: x is a vumpus\nDull(x) ::: x is dull\nImpus(x) ::: x is an impus\nHot(x) ::: x is hot\nWumpus(x) ::: x is a wumpus\nSpicy(x) ::: x is spicy\nZumpus(x) ::: x is a zumpus\nFloral(x) ::: x is floral\nNumpus(x) ::: x is a numpus\nRed(x) ::: x is red\nRompus(x) ::: x is a rompus\nYumpus(x) ::: x is a yumpus\nWooden(x) ::: x is wooden\nJompus(x) ::: x is a jompus\nFeisty(x) ::: x is feisty\nTumpus(x) ::: x is a tumpus\nPremises:\n∀x (Dumpus(x) → Opaque(x)) ::: Each dumpus is opaque.\n∀x (Dumpus(x) → Vumpus(x)) ::: Each dumpus is a vumpus.\n∀x (Vumpus(x) → ¬Dull(x)) ::: Vumpuses are not dull.\n∀x (Vumpus(x) → Impus(x)) ::: Every vumpus is an impus.\n∀x (Impus(x) → ¬Hot(x)) ::: Impuses are not hot.\n∀x (Impus(x) → Wumpus(x)) ::: Every impus is a wumpus.\n∀x (Wumpus(x) → Spicy(x)) ::: Each wumpus is spicy.\n∀x (Wumpus(x) → Zumpus(x)) ::: Wumpuses are zumpuses.\n∀x (Zumpus(x) → Floral(x)) ::: Each zumpus is floral.\n∀x (Zumpus(x) → Numpus(x)) ::: Zumpuses are numpuses.\n∀x (Numpus(x) → ¬Red(x)) ::: Each numpus is not red.\n∀x (Rompus(x) → Red(x)) ::: Each rompus is red.\n∀x (Numpus(x) → Yumpus(x)) ::: Every numpus is a yumpus.\n∀x (Yumpus(x) → Wooden(x)) ::: Yumpuses are wooden.\n∀x (Yumpus(x) → Jompus(x)) ::: Yumpuses are jompuses.\n∀x (Jompus(x) → Feisty(x)) ::: Each jompus is feisty.\n∀x (Jompus(x) → Tumpus(x)) ::: Each jompus is a tumpus.\nVumpus(sam) ::: Sam is a vumpus.\nConclusion:\n¬Red(sam) ::: Sam is not red.\n------"
    ]
  },
  {
    "id": "ProntoQA_247",
    "context": "Rompuses are earthy. Rompuses are yumpuses. Yumpuses are transparent. Each yumpus is a jompus. Jompuses are not sour. Zumpuses are not brown. Jompuses are dumpuses. Dumpuses are not temperate. Each dumpus is a numpus. Every numpus is brown. Numpuses are wumpuses. Each wumpus is large. Wumpuses are tumpuses. Sam is a rompus.",
    "question": "Is the following statement true or false? Sam is brown.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant.lpg\n------"
    ]
  },
  {
    "id": "ProntoQA_248",
    "context": "Vumpuses are fruity. Vumpuses are rompuses. Rompuses are not dull. Each rompus is a wumpus. Each wumpus is not orange. Each wumpus is a zumpus. Every zumpus is cold. Zumpuses are tumpuses. Tumpuses are transparent. Each tumpus is a dumpus. Every dumpus is shy. Each dumpus is a numpus. Every jompus is not sour. Each numpus is sour. Numpuses are yumpuses. Each yumpus is not large. Yumpuses are impuses. Polly is a wumpus.",
    "question": "Is the following statement true or false? Polly is sour.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nVumpus(x) ::: x is a vumpus\nFruity(x) ::: x is fruity\nRompus(x) ::: x is a rompus\nDull(x) ::: x is dull\nWumpus(x) ::: x is a wumpus\nOrange(x) ::: x is orange\nZumpus(x) ::: x is a zumpus\nCold(x) ::: x is cold\nTumpus(x) ::: x is a tumpus\nTransparent(x) ::: x is transparent\nDumpus(x) ::: x is a dumpus\nShy(x) ::: x is shy\nNumpus(x) ::: x is a numpus\nSour(x) ::: x is sour\nYumpus(x) ::: x is a yumpus\nLarge(x) ::: x is large\nImpus(x) ::: x is an impus\nPremises:\n∀x (Vumpus(x) → Fruity(x)) ::: Vumpuses are fruity.\n∀x (Vumpus(x) → Rompus(x)) ::: Vumpuses are rompuses.\n∀x (Rompus(x) → ¬Dull(x)) ::: Rompuses are not dull.\n∀x (Wumpus(x) → Tumpus(x)) ::: Each rompus is a wumpus.\n∀x (Wumpus(x) → ¬Orange(x)) ::: Each wumpus is not orange.\n∀x (Wumpus(x) → Zumpus(x)) ::: Each wumpus is a zumpus.\n∀x (Zumpus(x) → Cold(x)) ::: Every zumpus is cold.\n∀x (Zumpus(x) → Tumpus(x)) ::: Zumpuses are tumpuses.\n∀x (Tumpus(x) → Transparent(x)) ::: Tumpuses are transparent.\n∀x (Tumpus(x) → Dumpus(x)) ::: Each tumpus is a dumpus.\n∀x (Dumpus(x) → Shy(x)) ::: Every dumpus is shy.\n∀x (Dumpus(x) → Numpus(x)) ::: Each dumpus is a numpus.\n∀x (Jompus(x) → ¬Sour(x)) ::: Every jompus is not sour.\n∀x (Numpus(x) → Sour(x)) ::: Numpuses are sour.\n∀x (Yumpus(x) → ¬Large(x)) ::: Yumpuses are not large.\n∀x (Yumpus(x) → Impus(x)) ::: Yumpuses are impuses.\nWumpus(polly) ::: Polly is a wumpus.\nConclusion:\nSour(polly) ::: Polly is sour.\n------"
    ]
  },
  {
    "id": "ProntoQA_249",
    "context": "Numpuses are not dull. Numpuses are yumpuses. Every yumpus is earthy. Every yumpus is a jompus. Jompuses are orange. Jompuses are dumpuses. Dumpuses are not liquid. Dumpuses are wumpuses. Wumpuses are transparent. Wumpuses are vumpuses. Each vumpus is not happy. Every vumpus is an impus. Every impus is not small. Impuses are zumpuses. Each zumpus is angry. Each zumpus is a rompus. Tumpuses are small. Stella is a jompus.",
    "question": "Is the following statement true or false? Stella is small.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nNumpus(x) ::: x is a numpus\nDull(x) ::: x is dull\nYumpus(x) ::: x is a yumpus\nEarthy(x) ::: x is earthy\nJompus(x) ::: x is a jompus\nOrange(x) ::: x is orange\nDumpus(x) ::: x is a dumpus\nLiquid(x) ::: x is liquid\nWumpus(x) ::: x is a wumpus\nTransparent(x) ::: x is transparent\nVumpus(x) ::: x is a vumpus\nHappy(x) ::: x is happy\nImpus(x) ::: x is an impus\nSmall(x) ::: x is small\nZumpus(x) ::: x is a zumpus\nAngry(x) ::: x is angry\nRompus(x) ::: x is a rompus\nTumpus(x) ::: x is a tumpus\nSmall(x) ::: x is small\nPremises:\n∀x (Numpus(x) → ¬Dull(x)) ::: Numpuses are not dull.\n∀x (Yumpus(x) → Earthy(x)) ::: Yumpuses are earthy.\n∀x (Yumpus(x) → Jompus(x)) ::: Every yumpus is a jompus.\n∀x (Jompus(x) → Orange(x)) ::: Jompuses are orange.\n∀x (Jompus(x) → Dumpus(x)) ::: Jompuses are dumpuses.\n∀x (Dumpus(x) → ¬Liquid(x)) ::: Dumpuses are not liquid.\n∀x (Dumpus(x) → Wumpus(x)) ::: Dumpuses are wumpuses.\n∀x (Wumpus(x) → Transparent(x)) ::: Wumpuses are transparent.\n∀x (Wumpus(x) → Vumpus(x)) ::: Wumpuses are vumpuses.\n∀x (Vumpus(x) → ¬Happy(x)) ::: Each vumpus is not happy.\n∀x (Impus(x) → ¬Small(x)) ::: Every impus is not small.\n∀x (Impus(x) → Zumpus(x)) ::: Impuses are zumpuses.\n∀x (Zumpus(x) → Angry(x)) ::: Each zumpus is angry.\n∀x (Zumpus(x) → Rompus(x)) ::: Each zumpus is a rompus.\n∀x (Tumpus(x) → Small(x)) ::: Tumpuses are small.\nJompus(stella) ::: Stella is a jompus.\nConclusion:\nSmall(stella) ::: Stella is small.\n------"
    ]
  },
  {
    "id": "ProntoQA_250",
    "context": "Every yumpus is mean. Every yumpus is an impus. Impuses are cold. Each impus is a tumpus. Each tumpus is nervous. Tumpuses are jompuses. Jompuses are earthy. Jompuses are dumpuses. Every vumpus is not wooden. Each dumpus is wooden. Every dumpus is a rompus. Rompuses are large. Each rompus is a numpus. Every numpus is dull. Numpuses are wumpuses. Each wumpus is not sour. Wumpuses are zumpuses. Stella is a yumpus.",
    "question": "Is the following statement true or false? Stella is wooden.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nYumpus(x) ::: x is a yumpus\nMean(x) ::: x is mean\nImpus(x) ::: x is an impus\nCold(x) ::: x is cold\nTumpus(x) ::: x is a tumpus\nNervous(x) ::: x is nervous\nJompus(x) ::: x is a jompus\nEarthy(x) ::: x is earthy\nDumpus(x) ::: x is a dumpus\nWooden(x) ::: x is wooden\nRompus(x) ::: x is a rompus\nLarge(x) ::: x is large\nNumpus(x) ::: x is a numpus\nDull(x) ::: x is dull\nWumpus(x) ::: x is a wumpus\nSour(x) ::: x is sour\nZumpus(x) ::: x is a zumpus\nStella(x) ::: x is Stella\nPremises:\n∀x (Yumpus(x) → Mean(x)) ::: Every yumpus is mean.\n∀x (Yumpus(x) → Impus(x)) ::: Every yumpus is an impus.\n∀x (Impus(x) → Cold(x)) ::: Impuses are cold.\n∀x (Tumpus(x) → Nervous(x)) ::: Each impus is a tumpus.\n∀x (Tumpus(x) → Jompus(x)) ::: Each tumpus is a jompus.\n∀x (Jompus(x) → Earthy(x)) ::: Jompuses are earthy.\n∀x (Jompus(x) → Dumpus(x)) ::: Jompuses are dumpuses.\n∀x (Vumpus(x) → ¬Wooden(x)) ::: Every vumpus is not wooden.\n∀x (Dumpus(x) → Wooden(x)) ::: Each dumpus is wooden.\n∀x (Dumpus(x) → Rompus(x)) ::: Every dumpus is a rompus.\n∀x (Rompus(x) → Large(x)) ::: Rompuses are large.\n∀x (Rompus(x) → Numpus(x)) ::: Each rompus is a numpus.\n∀x (Numpus(x) → Dull(x)) ::: Numpuses are dull.\n∀x (Numpus(x) → Wumpus(x)) ::: Numpuses are wumpuses.\n∀x (Wumpus(x) → ¬Sour(x)) ::: Each wumpus is not sour.\n∀x (Wumpus(x) → Zumpus(x)) ::: Wumpuses are zumpuses.\nYumpus(stella) ::: Stella is a yumpus.\nConclusion:\nWooden(stella) ::: Stella is wooden.\n------"
    ]
  },
  {
    "id": "ProntoQA_251",
    "context": "Every tumpus is not hot. Tumpuses are vumpuses. Every vumpus is not bright. Every zumpus is kind. Every vumpus is an impus. Every impus is earthy. Every impus is a dumpus. Each dumpus is bitter. Dumpuses are yumpuses. Yumpuses are red. Every yumpus is a numpus. Each numpus is not nervous. Numpuses are wumpuses. Wumpuses are not kind. Wumpuses are rompuses. Each rompus is not small. Rompuses are jompuses. Sam is an impus.",
    "question": "Is the following statement true or false? Sam is kind.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nTumpus(x) ::: x is a tumpus\nHot(x) ::: x is hot\nVumpus(x) ::: x is a vumpus\nBright(x) ::: x is bright\nZumpus(x) ::: x is a zumpus\nKind(x) ::: x is kind\nImpus(x) ::: x is an impus\nEarthy(x) ::: x is earthy\nDumpus(x) ::: x is a dumpus\nBitter(x) ::: x is bitter\nYumpus(x) ::: x is a yumpus\nRed(x) ::: x is red\nNumpus(x) ::: x is a numpus\nNervous(x) ::: x is nervous\nWumpus(x) ::: x is a wumpus\nRompus(x) ::: x is a rompus\nSmall(x) ::: x is small\nJompus(x) ::: x is a jompus\nPremises:\n∀x (Tumpus(x) → ¬Hot(x)) ::: Every tumpus is not hot.\n∀x (Vumpus(x) → ¬Bright(x)) ::: Tumpuses are vumpuses.\n∀x (Zumpus(x) → Kind(x)) ::: Every zumpus is kind.\n∀x (Vumpus(x) → Impus(x)) ::: Every vumpus is an impus.\n∀x (Impus(x) → Earthy(x)) ::: Every impus is earthy.\n∀x (Impus(x) → Dumpus(x)) ::: Every impus is a dumpus.\n∀x (Dumpus(x) → Bitter(x)) ::: Each dumpus is bitter.\n∀x (Dumpus(x) → Yumpus(x)) ::: Dumpuses are yumpuses.\n∀x (Yumpus(x) → Red(x)) ::: Yumpuses are red.\n∀x (Yumpus(x) → Numpus(x)) ::: Every yumpus is a numpus.\n∀x (Numpus(x) → ¬Nervous(x)) ::: Each numpus is not nervous.\n∀x (Numpus(x) → Wumpus(x)) ::: Numpuses are wumpuses.\n∀x (Wumpus(x) → ¬Kind(x)) ::: Wumpuses are not kind.\n∀x (Wumpus(x) → Rompus(x)) ::: Wumpuses are rompuses.\n∀x (Rompus(x) → ¬Small(x)) ::: Each rompus is not small.\n∀x (Rompus(x) → Jompus(x)) ::: Rompuses are jompuses.\nImpus(sam) ::: Sam is an impus.\nConclusion:\nKind(sam) ::: Sam is kind.\n------"
    ]
  },
  {
    "id": "ProntoQA_252",
    "context": "Each dumpus is large. Jompuses are not blue. Each dumpus is a zumpus. Each zumpus is earthy. Each zumpus is a numpus. Every numpus is bitter. Each numpus is a wumpus. Each wumpus is opaque. Every wumpus is a rompus. Rompuses are blue. Rompuses are yumpuses. Yumpuses are not cold. Yumpuses are vumpuses. Each vumpus is angry. Each vumpus is an impus. Every impus is luminous. Impuses are tumpuses. Alex is a dumpus.",
    "question": "Is the following statement true or false? Alex is blue.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nDumpus(x) ::: x is a dumpus\nLarge(x) ::: x is large\nJompus(x) ::: x is a jompus\nBlue(x) ::: x is blue\nZumpus(x) ::: x is a zumpus\nEarthy(x) ::: x is earthy\nNumpus(x) ::: x is a numpus\nBitter(x) ::: x is bitter\nWumpus(x) ::: x is a wumpus\nOpaque(x) ::: x is opaque\nRompus(x) ::: x is a rompus\nBlue(x) ::: x is blue\nYumpus(x) ::: x is a yumpus\nCold(x) ::: x is cold\nVumpus(x) ::: x is a vumpus\nAngry(x) ::: x is angry\nImpus(x) ::: x is an impus\nLuminous(x) ::: x is luminous\nTumpus(x) ::: x is a tumpus\nPremises:\n∀x (Dumpus(x) → Large(x)) ::: Each dumpus is large.\n∀x (Jompus(x) → ¬Blue(x)) ::: Jompuses are not blue.\n∀x (Dumpus(x) → Zumpus(x)) ::: Each dumpus is a zumpus.\n∀x (Zumpus(x) → Earthy(x)) ::: Each zumpus is earthy.\n∀x (Zumpus(x) → Numpus(x)) ::: Each zumpus is a numpus.\n∀x (Numpus(x) → Bitter(x)) ::: Every numpus is bitter.\n∀x (Numpus(x) → Wumpus(x)) ::: Each numpus is a wumpus.\n∀x (Wumpus(x) → Opaque(x)) ::: Each wumpus is opaque.\n∀x (Wumpus(x) → Rompus(x)) ::: Every wumpus is a rompus.\n∀x (Rompus(x) → Blue(x)) ::: Rompuses are blue.\n∀x (Rompus(x) → Yumpus(x)) ::: Rompuses are yumpuses.\n∀x (Yumpus(x) → ¬Cold(x)) ::: Yumpuses are not cold.\n∀x (Yumpus(x) → Vumpus(x)) ::: Yumpuses are vumpuses.\n∀x (Vumpus(x) → Angry(x)) ::: Each vumpus is angry.\n∀x (Vumpus(x) → Impus(x)) ::: Each vumpus is an impus.\n∀x (Impus(x) → Luminous(x)) ::: Every impus is luminous.\n∀x (Impus(x) → Tumpus(x)) ::: Impuses are tumpuses.\nDumpus(alex) ::: Alex is a dumpus.\nConclusion:\nBlue(alex) ::: Alex is blue.\n------"
    ]
  },
  {
    "id": "ProntoQA_253",
    "context": "Vumpuses are red. Vumpuses are jompuses. Each jompus is aggressive. Jompuses are tumpuses. Each tumpus is not sweet. Tumpuses are rompuses. Rompuses are not floral. Rompuses are zumpuses. Each zumpus is not large. Zumpuses are yumpuses. Every yumpus is transparent. Yumpuses are dumpuses. Dumpuses are metallic. Impuses are large. Dumpuses are numpuses. Every numpus is cold. Every numpus is a wumpus. Fae is a vumpus.",
    "question": "Is the following statement true or false? Fae is not large.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "------\n### Predicates:\nVumpus(x) ::: x is a vumpus\nRed(x) ::: x is red\nJompus(x) ::: x is a jompus\nAggressive(x) ::: x is aggressive\nTumpus(x) ::: x is a tumpus\nSweet(x) ::: x is sweet\nRompus(x) ::: x is a rompus\nFloral(x) ::: x is floral\nZumpus(x) ::: x is a zumpus\nLarge(x) ::: x is large\nYumpus(x) ::: x is a yumpus\nTransparent(x) ::: x is transparent\nDumpus(x) ::: x is a dumpus\nMetallic(x) ::: x is metallic\nImpus(x) ::: x is an impus\nLarge(x) ::: x is large\nNumpus(x) ::: x is a numpus\nCold(x) ::: x is cold\nWumpus(x) ::: x is a wumpus\nPremises:\n∀x (Vumpus(x) → Red(x)) ::: Vumpuses are red.\n∀x (Vumpus(x) → Jompus(x)) ::: Vumpuses are jompuses.\n∀x (Jompus(x) → Aggressive(x)) ::: Each jompus is aggressive.\n∀x (Jompus(x) → Tumpus(x)) ::: Jompuses are tumpuses.\n∀x (Tumpus(x) → ¬Sweet(x)) ::: Each tumpus is not sweet.\n∀x (Tumpus(x) → Rompus(x)) ::: Tumpuses are rompuses.\n∀x (Rompus(x) → ¬Floral(x)) ::: Rompuses are not floral.\n∀x (Rompus(x) → Zumpus(x)) ::: Rompuses are zumpuses.\n∀x (Zumpus(x) → ¬Large(x)) ::: Each zumpus is not large.\n∀x (Zumpus(x) → Yumpus(x)) ::: Zumpuses are yumpuses.\n∀x (Yumpus(x) → Transparent(x)) ::: Every yumpus is transparent.\n∀x (Yumpus(x) → Dumpus(x)) ::: Yumpuses are dumpuses.\n∀x (Dumpus(x) → Metallic(x)) ::: Dumpuses are metallic.\n∀x (Impus(x) → Large(x)) ::: Impuses are large.\n∀x (Dumpus(x) → Numpus(x)) ::: Dumpuses are numpuses.\n∀x (Numpus(x) → Cold(x)) ::: Every numpus is cold.\n∀x (Numpus(x) → Wumpus(x)) ::: Every numpus is a wumpus.\nVumpus(fae) ::: Fae is a vumpus.\nConclusion:\n¬Large(fae) ::: Fae is not large.\n------"
    ]
  },
  {
    "id": "ProntoQA_254",
    "context": "Tumpuses are floral. Every tumpus is a numpus. Each numpus is not transparent. Each numpus is a zumpus. Each zumpus is temperate. Zumpuses are impuses. Impuses are aggressive. Every impus is a yumpus. Each rompus is bright. Yumpuses are not brown. Yumpuses are vumpuses. Each vumpus is sour. Each vumpus is a wumpus. Wumpuses are not bright. Wumpuses are dumpuses. Dumpuses are large. Every dumpus is a jompus. Max is a zumpus.",
    "question": "Is the following statement true or false? Max is bright.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nTumpus(x) ::: x is a tumpus\nFloral(x) ::: x is floral\nNumpus(x) ::: x is a numpus\nTransparent(x) ::: x is transparent\nZumpus(x) ::: x is a zumpus\nTemperate(x) ::: x is temperate\nImpus(x) ::: x is an impus\nAggressive(x) ::: x is aggressive\nYumpus(x) ::: x is a yumpus\nBright(x) ::: x is bright\nBrown(x) ::: x is brown\nVumpus(x) ::: x is a vumpus\nSour(x) ::: x is sour\nWumpus(x) ::: x is a wumpus\nDumpus(x) ::: x is a dumpus\nLarge(x) ::: x is large\nJompus(x) ::: x is a jompus\nPremises:\n∀x (Tumpus(x) → Floral(x)) ::: Tumpuses are floral.\n∀x (Tumpus(x) → Numpus(x)) ::: Every tumpus is a numpus.\n∀x (Numpus(x) → ¬Transparent(x)) ::: Each numpus is not transparent.\n∀x (Numpus(x) → Zumpus(x)) ::: Each numpus is a zumpus.\n∀x (Zumpus(x) → Temperate(x)) ::: Each zumpus is temperate.\n∀x (Zumpus(x) → Impus(x)) ::: Zumpuses are impuses.\n∀x (Impus(x) → Aggressive(x)) ::: Impuses are aggressive.\n∀x (Impus(x) → Yumpus(x)) ::: Every impus is a yumpus.\n∀x (Rompus(x) → Bright(x)) ::: Each rompus is bright.\n∀x (Yumpus(x) → ¬Brown(x)) ::: Yumpuses are not brown.\n∀x (Yumpus(x) → Vumpus(x)) ::: Yumpuses are vumpuses.\n∀x (Vumpus(x) → Sour(x)) ::: Each vumpus is sour.\n∀x (Vumpus(x) → Wumpus(x)) ::: Each vumpus is a wumpus.\n∀x (Wumpus(x) → ¬Bright(x)) ::: Wumpuses are not bright.\n∀x (Wumpus(x) → Dumpus(x)) ::: Wumpuses are dumpuses.\n∀x (Dumpus(x) → Large(x)) ::: Dumpuses are large.\n∀x (Dumpus(x) → Jompus(x)) ::: Every dumpus is a jompus.\nZumpus(max) ::: Max is a zumpus.\nConclusion:\nBright(max) ::: Max is bright.\n------"
    ]
  },
  {
    "id": "ProntoQA_255",
    "context": "Every impus is kind. Each impus is a wumpus. Each wumpus is not nervous. Wumpuses are yumpuses. Yumpuses are not large. Every yumpus is a rompus. Each rompus is opaque. Each rompus is a jompus. Jompuses are bright. Each jompus is a tumpus. Every tumpus is bitter. Tumpuses are numpuses. Numpuses are not fruity. Each numpus is a vumpus. Zumpuses are not bitter. Vumpuses are wooden. Each vumpus is a dumpus. Max is a wumpus.",
    "question": "Is the following statement true or false? Max is not bitter.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nImpus(x) ::: x is an impus\nKind(x) ::: x is kind\nWumpus(x) ::: x is a wumpus\nNervous(x) ::: x is nervous\nYumpus(x) ::: x is a yumpus\nLarge(x) ::: x is large\nRompus(x) ::: x is a rompus\nOpaque(x) ::: x is opaque\nJompus(x) ::: x is a jompus\nBright(x) ::: x is bright\nTumpus(x) ::: x is a tumpus\nBitter(x) ::: x is bitter\nNumpus(x) ::: x is a numpus\nFruity(x) ::: x is fruity\nVumpus(x) ::: x is a vumpus\nWooden(x) ::: x is wooden\nDumpus(x) ::: x is a dumpus\nPremises:\n∀x (Impus(x) → Kind(x)) ::: Every impus is kind.\n∀x (Impus(x) → Wumpus(x)) ::: Each impus is a wumpus.\n∀x (Wumpus(x) → ¬Nervous(x)) ::: Each wumpus is not nervous.\n∀x (Yumpus(x) → ¬Large(x)) ::: Yumpuses are not large.\n∀x (Yumpus(x) → Rompus(x)) ::: Every yumpus is a rompus.\n∀x (Rompus(x) → Opaque(x)) ::: Each rompus is opaque.\n∀x (Rompus(x) → Jompus(x)) ::: Each rompus is a jompus.\n∀x (Jompus(x) → Bright(x)) ::: Jompuses are bright.\n∀x (Jompus(x) → Tumpus(x)) ::: Each jompus is a tumpus.\n∀x (Tumpus(x) → Bitter(x)) ::: Every tumpus is bitter.\n∀x (Tumpus(x) → Numpus(x)) ::: Tumpuses are numpuses.\n∀x (Numpus(x) → ¬Fruity(x)) ::: Numpuses are not fruity.\n∀x (Numpus(x) → Vumpus(x)) ::: Each numpus is a vumpus.\n∀x (Zumpus(x) → ¬Bitter(x)) ::: Zumpuses are not bitter.\n∀x (Vumpus(x) → Wooden(x)) ::: Vumpuses are wooden.\n∀x (Vumpus(x) → Dumpus(x)) ::: Each vumpus is a dumpus.\nWumpus(max) ::: Max is a wumpus.\nConclusion:\n¬Bitter(max) ::: Max is not bitter.\n------"
    ]
  },
  {
    "id": "ProntoQA_256",
    "context": "Tumpuses are transparent. Yumpuses are not small. Every tumpus is a numpus. Numpuses are brown. Numpuses are jompuses. Jompuses are angry. Every jompus is a zumpus. Zumpuses are bright. Zumpuses are vumpuses. Every vumpus is spicy. Vumpuses are impuses. Impuses are happy. Every impus is a dumpus. Each dumpus is liquid. Each dumpus is a rompus. Rompuses are small. Rompuses are wumpuses. Sam is a zumpus.",
    "question": "Is the following statement true or false? Sam is not small.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nTumpus(x) ::: x is a tumpus\nTransparent(x) ::: x is transparent\nYumpus(x) ::: x is a yumpus\nSmall(x) ::: x is small\nNumpus(x) ::: x is a numpus\nBrown(x) ::: x is brown\nJompus(x) ::: x is a jompus\nAngry(x) ::: x is angry\nZumpus(x) ::: x is a zumpus\nBright(x) ::: x is bright\nVumpus(x) ::: x is a vumpus\nSpicy(x) ::: x is spicy\nImpus(x) ::: x is an impus\nHappy(x) ::: x is happy\nDumpus(x) ::: x is a dumpus\nLiquid(x) ::: x is liquid\nRompus(x) ::: x is a rompus\nSmall(x) ::: x is small\nWumpus(x) ::: x is a wumpus\nPremises:\n∀x (Tumpus(x) → Transparent(x)) ::: Tumpuses are transparent.\n∀x (Yumpus(x) → ¬Small(x)) ::: Yumpuses are not small.\n∀x (Tumpus(x) → Numpus(x)) ::: Every tumpus is a numpus.\n∀x (Numpus(x) → Brown(x)) ::: Numpuses are brown.\n∀x (Numpus(x) → Jompus(x)) ::: Numpuses are jompuses.\n∀x (Jompus(x) → Angry(x)) ::: Jompuses are angry.\n∀x (Jompus(x) → Zumpus(x)) ::: Every jompus is a zumpus.\n∀x (Zumpus(x) → Bright(x)) ::: Zumpuses are bright.\n∀x (Zumpus(x) → Vumpus(x)) ::: Zumpuses are vumpuses.\n∀x (Vumpus(x) → Spicy(x)) ::: Every vumpus is spicy.\n∀x (Vumpus(x) → Impus(x)) ::: Vumpuses are impuses.\n∀x (Impus(x) → Happy(x)) ::: Impuses are happy.\n∀x (Impus(x) → Dumpus(x)) ::: Every impus is a dumpus.\n∀x (Dumpus(x) → Liquid(x)) ::: Each dumpus is liquid.\n∀x (Dumpus(x) → Rompus(x)) ::: Each dumpus is a rompus.\n∀x (Rompus(x) → Small(x)) ::: Rompuses are small.\n∀x (Rompus(x) → Wumpus(x)) ::: Rompuses are wumpuses.\nZumpus(sam) ::: Sam is a zumpus.\nConclusion:\n¬Small(sam) ::: Sam is not small.\n------"
    ]
  },
  {
    "id": "ProntoQA_257",
    "context": "Every jompus is floral. Jompuses are tumpuses. Every tumpus is orange. Every tumpus is a dumpus. Dumpuses are temperate. Each dumpus is an impus. Every impus is not small. Impuses are numpuses. Numpuses are not feisty. Numpuses are wumpuses. Every yumpus is not kind. Wumpuses are kind. Every wumpus is a zumpus. Zumpuses are sour. Zumpuses are vumpuses. Vumpuses are transparent. Every vumpus is a rompus. Max is a tumpus.",
    "question": "Is the following statement true or false? Max is kind.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nJompus(x) ::: x is a jompus\nFloral(x) ::: x is floral\nTumpus(x) ::: x is a tumpus\nOrange(x) ::: x is orange\nDumpus(x) ::: x is a dumpus\nTemperate(x) ::: x is temperate\nImpus(x) ::: x is an impus\nSmall(x) ::: x is small\nNumpus(x) ::: x is a numpus\nFeisty(x) ::: x is feisty\nWumpus(x) ::: x is a wumpus\nKind(x) ::: x is kind\nZumpus(x) ::: x is a zumpus\nSour(x) ::: x is sour\nVumpus(x) ::: x is a vumpus\nRompus(x) ::: x is a rompus\nPremises:\n∀x (Jompus(x) → Floral(x)) ::: Every jompus is floral.\n∀x (Jompus(x) → Tumpus(x)) ::: Jompuses are tumpuses.\n∀x (Tumpus(x) → Orange(x)) ::: Every tumpus is orange.\n∀x (Tumpus(x) → Dumpus(x)) ::: Every tumpus is a dumpus.\n∀x (Dumpus(x) → Temperate(x)) ::: Dumpuses are temperate.\n∀x (Dumpus(x) → Impus(x)) ::: Each dumpus is an impus.\n∀x (Impus(x) → ¬Small(x)) ::: Impuses are not small.\n∀x (Numpus(x) → ¬Feisty(x)) ::: Numpuses are not feisty.\n∀x (Numpus(x) → Wumpus(x)) ::: Numpuses are wumpuses.\n∀x (Yumpus(x) → ¬Kind(x)) ::: Every yumpus is not kind.\n∀x (Wumpus(x) → Kind(x)) ::: Wumpuses are kind.\n∀x (Wumpus(x) → Zumpus(x)) ::: Every wumpus is a zumpus.\n∀x (Zumpus(x) → Sour(x)) ::: Zumpuses are sour.\n∀x (Zumpus(x) → Vumpus(x)) ::: Zumpuses are vumpuses.\n∀x (Vumpus(x) → Transparent(x)) ::: Vumpuses are transparent.\n∀x (Vumpus(x) → Rompus(x)) ::: Every vumpus is a rompus.\nTumpus(max) ::: Max is a tumpus.\nConclusion:\nKind(max) ::: Max is kind.\n------"
    ]
  },
  {
    "id": "ProntoQA_258",
    "context": "Wumpuses are orange. Wumpuses are numpuses. Each numpus is cold. Numpuses are yumpuses. Yumpuses are not mean. Each yumpus is a jompus. Jompuses are luminous. Jompuses are impuses. Each impus is nervous. Every impus is a dumpus. Each dumpus is transparent. Every dumpus is a zumpus. Zumpuses are dull. Each tumpus is not dull. Zumpuses are rompuses. Rompuses are not bitter. Rompuses are vumpuses. Wren is a yumpus.",
    "question": "Is the following statement true or false? Wren is not dull.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nWumpus(x) ::: x is a wumpus\nOrange(x) ::: x is orange\nNumpus(x) ::: x is a numpus\nCold(x) ::: x is cold\nYumpus(x) ::: x is a yumpus\nMean(x) ::: x is mean\nJompus(x) ::: x is a jompus\nLuminous(x) ::: x is luminous\nImpus(x) ::: x is an impus\nNervous(x) ::: x is nervous\nDumpus(x) ::: x is a dumpus\nTransparent(x) ::: x is transparent\nZumpus(x) ::: x is a zumpus\nDull(x) ::: x is dull\nTumpus(x) ::: x is a tumpus\nPremises:\n∀x (Wumpus(x) → Orange(x)) ::: Wumpuses are orange.\n∀x (Numpus(x) → Cold(x)) ::: Numpuses are cold.\n∀x (Numpus(x) → Yumpus(x)) ::: Each numpus is a yumpus.\n∀x (Yumpus(x) → ¬Mean(x)) ::: Yumpuses are not mean.\n∀x (Yumpus(x) → Jompus(x)) ::: Each yumpus is a jompus.\n∀x (Jompus(x) → Luminous(x)) ::: Jompuses are luminous.\n∀x (Jompus(x) → Impus(x)) ::: Jompuses are impuses.\n∀x (Impus(x) → Nervous(x)) ::: Each impus is nervous.\n∀x (Impus(x) → Dumpus(x)) ::: Every impus is a dumpus.\n∀x (Dumpus(x) → Transparent(x)) ::: Each dumpus is transparent.\n∀x (Dumpus(x) → Zumpus(x)) ::: Every dumpus is a zumpus.\n∀x (Zumpus(x) → Dull(x)) ::: Zumpuses are dull.\n∀x (Tumpus(x) → ¬Dull(x)) ::: Each tumpus is not dull.\n∀x (Zumpus(x) → Rompus(x)) ::: Zumpuses are rompuses.\n∀x (Rompus(x) → ¬Bitter(x)) ::: Rompuses are not bitter.\n∀x (Rompus(x) → Vumpus(x)) ::: Rompuses are vumpuses.\nYumpus(wren) ::: Wren is a yumpus.\nConclusion:\n¬Dull(wren) ::: Wren is not dull.\n------"
    ]
  },
  {
    "id": "ProntoQA_259",
    "context": "Yumpuses are fruity. Yumpuses are wumpuses. Wumpuses are large. Every wumpus is a dumpus. Dumpuses are temperate. Dumpuses are rompuses. Every rompus is feisty. Rompuses are numpuses. Numpuses are not sweet. Every numpus is a vumpus. Vumpuses are bright. Each vumpus is a tumpus. Tumpuses are opaque. Every tumpus is an impus. Every impus is not blue. Each impus is a zumpus. Each jompus is sweet. Sally is a yumpus.",
    "question": "Is the following statement true or false? Sally is sweet.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nYumpus(x) ::: x is a yumpus\nFruity(x) ::: x is fruity\nWumpus(x) ::: x is a wumpus\nLarge(x) ::: x is large\nDumpus(x) ::: x is a dumpus\nTemperate(x) ::: x is temperate\nRompus(x) ::: x is a rompus\nFeisty(x) ::: x is feisty\nNumpus(x) ::: x is a numpus\nSweet(x) ::: x is sweet\nVumpus(x) ::: x is a vumpus\nBright(x) ::: x is bright\nTumpus(x) ::: x is a tumpus\nOpaque(x) ::: x is opaque\nImpus(x) ::: x is an impus\nBlue(x) ::: x is blue\nZumpus(x) ::: x is a zumpus\nJompus(x) ::: x is a jompus\nPremises:\n∀x (Yumpus(x) → Fruity(x)) ::: Yumpuses are fruity.\n∀x (Yumpus(x) → Wumpus(x)) ::: Yumpuses are wumpuses.\n∀x (Wumpus(x) → Large(x)) ::: Wumpuses are large.\n∀x (Wumpus(x) → Dumpus(x)) ::: Every wumpus is a dumpus.\n∀x (Dumpus(x) → Temperate(x)) ::: Dumpuses are temperate.\n∀x (Dumpus(x) → Rompus(x)) ::: Dumpuses are rompuses.\n∀x (Rompus(x) → Feisty(x)) ::: Every rompus is feisty.\n∀x (Rompus(x) → Numpus(x)) ::: Rompuses are numpuses.\n∀x (Numpus(x) → ¬Sweet(x)) ::: Numpuses are not sweet.\n∀x (Numpus(x) → Vumpus(x)) ::: Every numpus is a vumpus.\n∀x (Vumpus(x) → Bright(x)) ::: Vumpuses are bright.\n∀x (Vumpus(x) → Tumpus(x)) ::: Each vumpus is a tumpus.\n∀x (Tumpus(x) → Opaque(x)) ::: Tumpuses are opaque.\n∀x (Tumpus(x) → Impus(x)) ::: Every tumpus is an impus.\n∀x (Impus(x) → ¬Blue(x)) ::: Each impus is not blue.\n∀x (Impus(x) → Zumpus(x)) ::: Each impus is a zumpus.\n∀x (Jompus(x) → Sweet(x)) ::: Each jompus is sweet.\nYumpus(sally) ::: Sally is a yumpus.\nConclusion:\nSally is sweet.\n------"
    ]
  },
  {
    "id": "ProntoQA_260",
    "context": "Each impus is not orange. Each impus is a zumpus. Every zumpus is not happy. Every zumpus is a vumpus. Vumpuses are not opaque. Every vumpus is a yumpus. Yumpuses are temperate. Each yumpus is a wumpus. Each wumpus is floral. Wumpuses are jompuses. Every jompus is large. Rompuses are wooden. Each jompus is a tumpus. Each tumpus is not wooden. Every tumpus is a numpus. Each numpus is not dull. Every numpus is a dumpus. Max is a vumpus.",
    "question": "Is the following statement true or false? Max is not wooden.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nImpus(x) ::: x is an impus\nZumpus(x) ::: x is a zumpus\nHappy(x) ::: x is happy\nOpaque(x) ::: x is opaque\nYumpus(x) ::: x is a yumpus\nTemperate(x) ::: x is temperate\nWumpus(x) ::: x is a wumpus\nFloral(x) ::: x is floral\nJompus(x) ::: x is a jompus\nLarge(x) ::: x is large\nRompus(x) ::: x is a rompus\nWooden(x) ::: x is wooden\nTumpus(x) ::: x is a tumpus\nNumpus(x) ::: x is a numpus\nDull(x) ::: x is dull\nDumpus(x) ::: x is a dumpus\nPremises:\n∀x (Impus(x) → ¬Orange(x)) ::: Each impus is not orange.\n∀x (Impus(x) → Zumpus(x)) ::: Each impus is a zumpus.\n∀x (Zumpus(x) → ¬Happy(x)) ::: Every zumpus is not happy.\n∀x (Zumpus(x) → Vumpus(x)) ::: Every zumpus is a vumpus.\n∀x (Vumpus(x) → ¬Opaque(x)) ::: Vumpuses are not opaque.\n∀x (Vumpus(x) → Yumpus(x)) ::: Every vumpus is a yumpus.\n∀x (Yumpus(x) → Temperate(x)) ::: Yumpuses are temperate.\n∀x (Yumpus(x) → Wumpus(x)) ::: Each yumpus is a wumpus.\n∀x (Wumpus(x) → Floral(x)) ::: Each wumpus is floral.\n∀x (Wumpus(x) → Jompus(x)) ::: Wumpuses are jompuses.\n∀x (Jompus(x) → Large(x)) ::: Every jompus is large.\n∀x (Rompus(x) → Wooden(x)) ::: Rompuses are wooden.\n∀x (Jompus(x) → Tumpus(x)) ::: Each jompus is a tumpus.\n∀x (Tumpus(x) → ¬Wooden(x)) ::: Each tumpus is not wooden.\n∀x (Tumpus(x) → Numpus(x)) ::: Every tumpus is a numpus.\n∀x (Numpus(x) → ¬Dull(x)) ::: Each numpus is not dull.\n∀x (Numpus(x) → Dumpus(x)) ::: Every numpus is a dumpus.\nVumpus(max) ::: Max is a vumpus.\nConclusion:\n¬Wooden(max) ::: Max is not wooden.\n------"
    ]
  },
  {
    "id": "ProntoQA_261",
    "context": "Each tumpus is mean. Each tumpus is a yumpus. Yumpuses are small. Yumpuses are dumpuses. Zumpuses are fruity. Dumpuses are dull. Every dumpus is an impus. Impuses are transparent. Every impus is a wumpus. Every wumpus is not fruity. Every wumpus is a jompus. Alex is a tumpus.",
    "question": "Is the following statement true or false? Alex is not fruity.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nTumpus(x) ::: x is a tumpus\nMean(x) ::: x is mean\nYumpus(x) ::: x is a yumpus\nSmall(x) ::: x is small\nDumpus(x) ::: x is a dumpus\nDull(x) ::: x is dull\nImpus(x) ::: x is an impus\nTransparent(x) ::: x is transparent\nWumpus(x) ::: x is a wumpus\nFruity(x) ::: x is fruity\nJompus(x) ::: x is a jompus\nPremises:\n∀x (Tumpus(x) → Mean(x)) ::: Each tumpus is mean.\n∀x (Tumpus(x) → Yumpus(x)) ::: Each tumpus is a yumpus.\n∀x (Yumpus(x) → Small(x)) ::: Yumpuses are small.\n∀x (Yumpus(x) → Dumpus(x)) ::: Yumpuses are dumpuses.\n∀x (Zumpus(x) → Fruity(x)) ::: Zumpuses are fruity.\n∀x (Dumpus(x) → Dull(x)) ::: Dumpuses are dull.\n∀x (Dumpus(x) → Impus(x)) ::: Every dumpus is an impus.\n∀x (Impus(x) → Transparent(x)) ::: Impuses are transparent.\n∀x (Impus(x) → Wumpus(x)) ::: Every impus is a wumpus.\n∀x (Wumpus(x) → ¬Fruity(x)) ::: Every wumpus is not fruity.\n∀x (Wumpus(x) → Jompus(x)) ::: Every wumpus is a jompus.\nTumpus(alex) ::: Alex is a tumpus.\nConclusion:\n¬Fruity(alex) ::: Alex is not fruity.\n------"
    ]
  },
  {
    "id": "ProntoQA_262",
    "context": "Every vumpus is large. Each vumpus is a dumpus. Every dumpus is amenable. Every dumpus is a zumpus. Zumpuses are fruity. Zumpuses are rompuses. Each rompus is not luminous. Each rompus is a tumpus. Each tumpus is cold. Tumpuses are numpuses. Numpuses are dull. Numpuses are jompuses. Every jompus is sour. Jompuses are impuses. Yumpuses are not cold. Impuses are opaque. Each impus is a wumpus. Sam is a vumpus.",
    "question": "Is the following statement true or false? Sam is cold.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nVumpus(x) ::: x is a vumpus\nLarge(x) ::: x is large\nDumpus(x) ::: x is a dumpus\nAmenable(x) ::: x is amenable\nZumpus(x) ::: x is a zumpus\nFruity(x) ::: x is fruity\nRompus(x) ::: x is a rompus\nLuminous(x) ::: x is luminous\nTumpus(x) ::: x is a tumpus\nCold(x) ::: x is cold\nNumpus(x) ::: x is a numpus\nDull(x) ::: x is dull\nJompus(x) ::: x is a jompus\nSour(x) ::: x is sour\nImpus(x) ::: x is an impus\nOpaque(x) ::: x is opaque\nWumpus(x) ::: x is a wumpus\nPremises:\n∀x (Vumpus(x) → Large(x)) ::: Every vumpus is large.\n∀x (Vumpus(x) → Dumpus(x)) ::: Each vumpus is a dumpus.\n∀x (Dumpus(x) → Amenable(x)) ::: Every dumpus is amenable.\n∀x (Dumpus(x) → Zumpus(x)) ::: Every dumpus is a zumpus.\n∀x (Zumpus(x) → Fruity(x)) ::: Zumpuses are fruity.\n∀x (Zumpus(x) → Rompus(x)) ::: Zumpuses are rompuses.\n∀x (Rompus(x) → ¬Luminous(x)) ::: Each rompus is not luminous.\n∀x (Rompus(x) → Tumpus(x)) ::: Each rompus is a tumpus.\n∀x (Tumpus(x) → Cold(x)) ::: Each tumpus is cold.\n∀x (Tumpus(x) → Numpus(x)) ::: Tumpuses are numpuses.\n∀x (Numpus(x) → Dull(x)) ::: Numpuses are dull.\n∀x (Numpus(x) → Jompus(x)) ::: Numpuses are jompuses.\n∀x (Jompus(x) → Sour(x)) ::: Every jompus is sour.\n∀x (Jompus(x) → Impus(x)) ::: Jompuses are impuses.\n∀x (Yumpus(x) → ¬Cold(x)) ::: Yumpuses are not cold.\n∀x (Impus(x) → Opaque(x)) ::: Impuses are opaque.\n∀x (Impus(x) → Wumpus(x)) ::: Each impus is a wumpus.\nVumpus(sam) ::: Sam is a vumpus.\nConclusion:\nCold(sam) ::: Sam is cold.\n------"
    ]
  },
  {
    "id": "ProntoQA_263",
    "context": "Each impus is bright. Impuses are tumpuses. Tumpuses are small. Each tumpus is a dumpus. Dumpuses are temperate. Every dumpus is a zumpus. Every zumpus is amenable. Each zumpus is a rompus. Every rompus is orange. Every rompus is a jompus. Wumpuses are floral. Jompuses are luminous. Every jompus is a vumpus. Each vumpus is not floral. Vumpuses are yumpuses. Yumpuses are spicy. Every yumpus is a numpus. Sally is a dumpus.",
    "question": "Is the following statement true or false? Sally is floral.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nImpus(x) ::: x is an impus\nBright(x) ::: x is bright\nTumpus(x) ::: x is a tumpus\nSmall(x) ::: x is small\nDumpus(x) ::: x is a dumpus\nTemperate(x) ::: x is temperate\nZumpus(x) ::: x is a zumpus\nAmenable(x) ::: x is amenable\nRompus(x) ::: x is a rompus\nOrange(x) ::: x is orange\nJompus(x) ::: x is a jompus\nFloral(x) ::: x is floral\nLuminous(x) ::: x is luminous\nVumpus(x) ::: x is a vumpus\nFloral(x) ::: x is floral\nYumpus(x) ::: x is a yumpus\nSpicy(x) ::: x is spicy\nNumpus(x) ::: x is a numpus\nPremises:\n∀x (Impus(x) → Bright(x)) ::: Each impus is bright.\n∀x (Impus(x) → Tumpus(x)) ::: Impuses are tumpuses.\n∀x (Tumpus(x) → Small(x)) ::: Tumpuses are small.\n∀x (Tumpus(x) → Dumpus(x)) ::: Each tumpus is a dumpus.\n∀x (Dumpus(x) → Temperate(x)) ::: Dumpuses are temperate.\n∀x (Dumpus(x) → Zumpus(x)) ::: Every dumpus is a zumpus.\n∀x (Zumpus(x) → Amenable(x)) ::: Every zumpus is amenable.\n∀x (Zumpus(x) → Rompus(x)) ::: Every zumpus is a rompus.\n∀x (Rompus(x) → Orange(x)) ::: Every rompus is orange.\n∀x (Rompus(x) → Jompus(x)) ::: Every rompus is a jompus.\n∀x (Wumpus(x) → Floral(x)) ::: Wumpuses are floral.\n∀x (Jompus(x) → Luminous(x)) ::: Jompuses are luminous.\n∀x (Jompus(x) → Vumpus(x)) ::: Every jompus is a vumpus.\n∀x (Vumpus(x) → ¬Floral(x)) ::: Vumpuses are not floral.\n∀x (Vumpus(x) → Yumpus(x)) ::: Every vumpus is a yumpus.\n∀x (Yumpus(x) → Spicy(x)) ::: Yumpuses are spicy.\n∀x (Yumpus(x) → Numpus(x)) ::: Every yumpus is a numpus.\nDumpus(sally) ::: Sally is a dumpus.\nConclusion:\nFloral(sally) ::: Sally is floral.\n------"
    ]
  },
  {
    "id": "ProntoQA_264",
    "context": "Vumpuses are floral. Vumpuses are wumpuses. Each wumpus is brown. Wumpuses are zumpuses. Each zumpus is not liquid. Every zumpus is an impus. Impuses are not kind. Each impus is a tumpus. Every tumpus is transparent. Every tumpus is a numpus. Numpuses are feisty. Each numpus is a yumpus. Yumpuses are sweet. Yumpuses are rompuses. Rompuses are not bright. Rompuses are dumpuses. Jompuses are bright. Max is an impus.",
    "question": "Is the following statement true or false? Max is not bright.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nVumpus(x) ::: x is a vumpus\nFloral(x) ::: x is floral\nWumpus(x) ::: x is a wumpus\nBrown(x) ::: x is brown\nZumpus(x) ::: x is a zumpus\nLiquid(x) ::: x is liquid\nImpus(x) ::: x is an impus\nKind(x) ::: x is kind\nTumpus(x) ::: x is a tumpus\nTransparent(x) ::: x is transparent\nNumpus(x) ::: x is a numpus\nFeisty(x) ::: x is feisty\nYumpus(x) ::: x is a yumpus\nSweet(x) ::: x is sweet\nRompus(x) ::: x is a rompus\nBright(x) ::: x is bright\nDumpus(x) ::: x is a dumpus\nJompus(x) ::: x is a jompus\nPremises:\n∀x (Vumpus(x) → Floral(x)) ::: Vumpuses are floral.\n∀x (Vumpus(x) → Wumpus(x)) ::: Vumpuses are wumpuses.\n∀x (Wumpus(x) → Brown(x)) ::: Each wumpus is brown.\n∀x (Zumpus(x) → ¬Liquid(x)) ::: Wumpuses are zumpuses.\n∀x (Zumpus(x) → Impus(x)) ::: Each zumpus is an impus.\n∀x (Impus(x) → ¬Kind(x)) ::: Impuses are not kind.\n∀x (Impus(x) → Tumpus(x)) ::: Each impus is a tumpus.\n∀x (Tumpus(x) → Transparent(x)) ::: Every tumpus is transparent.\n∀x (Tumpus(x) → Numpus(x)) ::: Every tumpus is a numpus.\n∀x (Numpus(x) → Feisty(x)) ::: Numpuses are feisty.\n∀x (Numpus(x) → Yumpus(x)) ::: Each numpus is a yumpus.\n∀x (Yumpus(x) → Sweet(x)) ::: Yumpuses are sweet.\n∀x (Yumpus(x) → Rompus(x)) ::: Yumpuses are rompuses.\n∀x (Rompus(x) → ¬Bright(x)) ::: Rompuses are not bright.\n∀x (Rompus(x) → Dumpus(x)) ::: Rompuses are dumpuses.\n∀x (Jompus(x) → Bright(x)) ::: Jompuses are bright.\nImpus(max) ::: Max is an impus.\nConclusion:\n¬Bright(max) ::: Max is not bright.\n------"
    ]
  },
  {
    "id": "ProntoQA_265",
    "context": "Wumpuses are liquid. Each wumpus is a dumpus. Each dumpus is small. Each dumpus is a rompus. Rompuses are transparent. Every rompus is a tumpus. Tumpuses are bitter. Each tumpus is a numpus. Zumpuses are not fruity. Numpuses are fruity. Each numpus is a vumpus. Each vumpus is hot. Vumpuses are yumpuses. Yumpuses are not shy. Yumpuses are impuses. Impuses are not bright. Impuses are jompuses. Sally is a wumpus.",
    "question": "Is the following statement true or false? Sally is not fruity.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nWumpus(x) ::: x is a wumpus\nLiquid(x) ::: x is liquid\nDumpus(x) ::: x is a dumpus\nSmall(x) ::: x is small\nRompus(x) ::: x is a rompus\nTransparent(x) ::: x is transparent\nTumpus(x) ::: x is a tumpus\nBitter(x) ::: x is bitter\nNumpus(x) ::: x is a numpus\nFruity(x) ::: x is fruity\nVumpus(x) ::: x is a vumpus\nHot(x) ::: x is hot\nYumpus(x) ::: x is a yumpus\nShy(x) ::: x is shy\nImpus(x) ::: x is an impus\nBright(x) ::: x is bright\nJompus(x) ::: x is a jompus\nPremises:\n∀x (Wumpus(x) → Liquid(x)) ::: Wumpuses are liquid.\n∀x (Dumpus(x) → Small(x)) ::: Each wumpus is a dumpus.\n∀x (Dumpus(x) → Rompus(x)) ::: Each dumpus is a rompus.\n∀x (Rompus(x) → Transparent(x)) ::: Rompuses are transparent.\n∀x (Rompus(x) → Tumpus(x)) ::: Every rompus is a tumpus.\n∀x (Tumpus(x) → Bitter(x)) ::: Tumpuses are bitter.\n∀x (Tumpus(x) → Numpus(x)) ::: Each tumpus is a numpus.\n∀x (Numpus(x) → Fruity(x)) ::: Numpuses are fruity.\n∀x (Numpus(x) → Vumpus(x)) ::: Each numpus is a vumpus.\n∀x (Vumpus(x) → Hot(x)) ::: Vumpuses are hot.\n∀x (Vumpus(x) → Yumpus(x)) ::: Vumpuses are yumpuses.\n∀x (Yumpus(x) → Not(Shy(x))) ::: Yumpuses are not shy.\n∀x (Yumpus(x) → Impus(x)) ::: Yumpuses are impuses.\n∀x (Impus(x) → Not(Bright(x))) ::: Impuses are not bright.\n∀x (Impus(x) → Jompus(x)) ::: Impuses are jompuses.\nWumpus(sally) ::: Sally is a wumpus.\nConclusion:\n¬Fruity(sally) ::: Sally is not fruity.\n------"
    ]
  },
  {
    "id": "ProntoQA_266",
    "context": "Every wumpus is amenable. Every wumpus is a tumpus. Tumpuses are luminous. Tumpuses are yumpuses. Every yumpus is large. Every yumpus is a numpus. Every numpus is sweet. Every numpus is a vumpus. Vumpuses are happy. Each vumpus is a dumpus. Jompuses are not temperate. Each dumpus is floral. Dumpuses are rompuses. Each rompus is temperate. Rompuses are zumpuses. Every zumpus is dull. Zumpuses are impuses. Rex is a yumpus.",
    "question": "Is the following statement true or false? Rex is temperate.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nWumpus(x) ::: x is a wumpus\nAmenable(x) ::: x is amenable\nTumpus(x) ::: x is a tumpus\nLuminous(x) ::: x is luminous\nYumpus(x) ::: x is a yumpus\nLarge(x) ::: x is large\nNumpus(x) ::: x is a numpus\nSweet(x) ::: x is sweet\nVumpus(x) ::: x is a vumpus\nHappy(x) ::: x is happy\nDumpus(x) ::: x is a dumpus\nJompus(x) ::: x is a jompus\nTemperate(x) ::: x is temperate\nFloral(x) ::: x is floral\nRompus(x) ::: x is a rompus\nZumpus(x) ::: x is a zumpus\nDull(x) ::: x is dull\nImpus(x) ::: x is an impus\nPremises:\n∀x (Wumpus(x) → Amenable(x)) ::: Every wumpus is amenable.\n∀x (Wumpus(x) → Tumpus(x)) ::: Every wumpus is a tumpus.\n∀x (Tumpus(x) → Luminous(x)) ::: Tumpuses are luminous.\n∀x (Tumpus(x) → Yumpus(x)) ::: Tumpuses are yumpuses.\n∀x (Yumpus(x) → Large(x)) ::: Every yumpus is large.\n∀x (Yumpus(x) → Numpus(x)) ::: Every yumpus is a numpus.\n∀x (Numpus(x) → Sweet(x)) ::: Every numpus is sweet.\n∀x (Numpus(x) → Vumpus(x)) ::: Every numpus is a vumpus.\n∀x (Vumpus(x) → Happy(x)) ::: Vumpuses are happy.\n∀x (Vumpus(x) → Dumpus(x)) ::: Each vumpus is a dumpus.\n∀x (Jompus(x) → ¬Temperate(x)) ::: Jompuses are not temperate.\n∀x (Dumpus(x) → Floral(x)) ::: Each dumpus is floral.\n∀x (Dumpus(x) → Rompus(x)) ::: Dumpuses are rompuses.\n∀x (Rompus(x) → Temperate(x)) ::: Rompuses are temperate.\n∀x (Rompus(x) → Zumpus(x)) ::: Rompuses are zumpuses.\n∀x (Zumpus(x) → Dull(x)) ::: Every zumpus is dull.\n∀x (Zumpus(x) → Impus(x)) ::: Zumpuses are impuses.\nYumpus(rex) ::: Rex is a yumpus.\nConclusion:\nTemperate(rex) ::: Rex is temperate.\n------"
    ]
  },
  {
    "id": "ProntoQA_267",
    "context": "Vumpuses are not angry. Vumpuses are wumpuses. Wumpuses are nervous. Every wumpus is a dumpus. Dumpuses are red. Every dumpus is a jompus. Jompuses are not hot. Every jompus is a numpus. Numpuses are not small. Every numpus is a zumpus. Zumpuses are opaque. Zumpuses are tumpuses. Tumpuses are not earthy. Every tumpus is a rompus. Each rompus is bright. Each impus is not opaque. Rompuses are yumpuses. Polly is a wumpus.",
    "question": "Is the following statement true or false? Polly is not opaque.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nVumpus(x) ::: x is a vumpus\nAngry(x) ::: x is angry\nWumpus(x) ::: x is a wumpus\nNervous(x) ::: x is nervous\nDumpus(x) ::: x is a dumpus\nRed(x) ::: x is red\nJompus(x) ::: x is a jompus\nHot(x) ::: x is hot\nNumpus(x) ::: x is a numpus\nSmall(x) ::: x is small\nZumpus(x) ::: x is a zumpus\nOpaque(x) ::: x is opaque\nTumpus(x) ::: x is a tumpus\nEarthy(x) ::: x is earthy\nRompus(x) ::: x is a rompus\nBright(x) ::: x is bright\nImpus(x) ::: x is an impus\nPremises:\n∀x (Vumpus(x) → ¬Angry(x)) ::: Vumpuses are not angry.\n∀x (Vumpus(x) → Wumpus(x)) ::: Vumpuses are wumpuses.\n∀x (Wumpus(x) → Nervous(x)) ::: Wumpuses are nervous.\n∀x (Dumpus(x) → Red(x)) ::: Every wumpus is a dumpus.\n∀x (Dumpus(x) → Red(x)) ::: Dumpuses are red.\n∀x (Dumpus(x) → Jompus(x)) ::: Every dumpus is a jompus.\n∀x (Jompus(x) → ¬Hot(x)) ::: Jompuses are not hot.\n∀x (Jompus(x) → Numpus(x)) ::: Every jompus is a numpus.\n∀x (Numpus(x) → ¬Small(x)) ::: Numpuses are not small.\n∀x (Numpus(x) → Zumpus(x)) ::: Every numpus is a zumpus.\n∀x (Zumpus(x) → Opaque(x)) ::: Zumpuses are opaque.\n∀x (Zumpus(x) → Tumpus(x)) ::: Zumpuses are tumpuses.\n∀x (Tumpus(x) → ¬Earthy(x)) ::: Tumpuses are not earthy.\n∀x (Tumpus(x) → Rompus(x)) ::: Every tumpus is a rompus.\n∀x (Rompus(x) → Bright(x)) ::: Each rompus is bright.\n∀x (Impus(x) → ¬Opaque(x)) ::: Each impus is not opaque.\n∀x (Rompus(x) → Yumpus(x)) ::: Rompuses are yumpuses.\nWumpus(polly) ::: Polly is a wumpus.\nConclusion:\n¬Opaque(polly) ::: Polly is not opaque.\n------"
    ]
  },
  {
    "id": "ProntoQA_268",
    "context": "Yumpuses are not liquid. Each yumpus is a numpus. Numpuses are not floral. Each numpus is an impus. Every impus is not bitter. Impuses are dumpuses. Dumpuses are dull. Dumpuses are jompuses. Jompuses are not shy. Jompuses are zumpuses. Each zumpus is not orange. Every zumpus is a tumpus. Tumpuses are small. Each tumpus is a wumpus. Vumpuses are not cold. Wumpuses are cold. Each wumpus is a rompus. Alex is a dumpus.",
    "question": "Is the following statement true or false? Alex is not cold.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nYumpus(x) ::: x is a yumpus\nLiquid(x) ::: x is liquid\nNumpus(x) ::: x is a numpus\nFloral(x) ::: x is floral\nImpus(x) ::: x is an impus\nBitter(x) ::: x is bitter\nDumpus(x) ::: x is a dumpus\nDull(x) ::: x is dull\nJompus(x) ::: x is a jompus\nShy(x) ::: x is shy\nZumpus(x) ::: x is a zumpus\nOrange(x) ::: x is orange\nTumpus(x) ::: x is a tumpus\nSmall(x) ::: x is small\nWumpus(x) ::: x is a wumpus\nCold(x) ::: x is cold\nRompus(x) ::: x is a rompus\nPremises:\n∀x (Yumpus(x) → ¬Liquid(x)) ::: Yumpuses are not liquid.\n∀x (Yumpus(x) → Numpus(x)) ::: Each yumpus is a numpus.\n∀x (Numpus(x) → ¬Floral(x)) ::: Numpuses are not floral.\n∀x (Numpus(x) → Impus(x)) ::: Each numpus is an impus.\n∀x (Impus(x) → ¬Bitter(x)) ::: Every impus is not bitter.\n∀x (Impus(x) → Dumpus(x)) ::: Impuses are dumpuses.\n∀x (Dumpus(x) → Dull(x)) ::: Dumpuses are dull.\n∀x (Dumpus(x) → Jompus(x)) ::: Dumpuses are jompuses.\n∀x (Jompus(x) → ¬Shy(x)) ::: Jompuses are not shy.\n∀x (Jompus(x) → Zumpus(x)) ::: Jompuses are zumpuses.\n∀x (Zumpus(x) → ¬Orange(x)) ::: Each zumpus is not orange.\n∀x (Zumpus(x) → Tumpus(x)) ::: Every zumpus is a tumpus.\n∀x (Tumpus(x) → Small(x)) ::: Tumpuses are small.\n∀x (Tumpus(x) → Wumpus(x)) ::: Each tumpus is a wumpus.\n∀x (Vumpus(x) → ¬Cold(x)) ::: Vumpuses are not cold.\n∀x (Wumpus(x) → Cold(x)) ::: Wumpuses are cold.\n∀x (Wumpus(x) → Rompus(x)) ::: Each wumpus is a rompus.\nDumpus(alex) ::: Alex is a dumpus.\nConclusion:\n¬Cold(alex) ::: Alex is not cold.\n------"
    ]
  },
  {
    "id": "ProntoQA_269",
    "context": "Impuses are not fruity. Impuses are yumpuses. Each yumpus is dull. Every jompus is opaque. Each yumpus is a zumpus. Each zumpus is spicy. Every zumpus is a tumpus. Each tumpus is small. Each tumpus is a vumpus. Vumpuses are not feisty. Vumpuses are numpuses. Numpuses are not opaque. Numpuses are rompuses. Max is a yumpus.",
    "question": "Is the following statement true or false? Max is opaque.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant.lpg\n------"
    ]
  },
  {
    "id": "ProntoQA_270",
    "context": "Tumpuses are not wooden. Tumpuses are vumpuses. Every vumpus is not cold. Vumpuses are zumpuses. Zumpuses are sour. Zumpuses are numpuses. Each numpus is opaque. Every numpus is a dumpus. Dumpuses are feisty. Every yumpus is not bright. Every dumpus is a wumpus. Wumpuses are bright. Each wumpus is an impus. Every impus is red. Every impus is a rompus. Every rompus is small. Rompuses are jompuses. Wren is a vumpus.",
    "question": "Is the following statement true or false? Wren is not bright.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nTumpus(x) ::: x is a tumpus\nWooden(x) ::: x is wooden\nVumpus(x) ::: x is a vumpus\nCold(x) ::: x is cold\nZumpus(x) ::: x is a zumpus\nSour(x) ::: x is sour\nNumpus(x) ::: x is a numpus\nOpaque(x) ::: x is opaque\nDumpus(x) ::: x is a dumpus\nFeisty(x) ::: x is feisty\nYumpus(x) ::: x is a yumpus\nBright(x) ::: x is bright\nWumpus(x) ::: x is a wumpus\nImpus(x) ::: x is an impus\nRed(x) ::: x is red\nRompus(x) ::: x is a rompus\nSmall(x) ::: x is small\nJompus(x) ::: x is a jompus\nPremises:\n∀x (Tumpus(x) → ¬Wooden(x)) ::: Tumpuses are not wooden.\n∀x (Vumpus(x) → ¬Cold(x)) ::: Vumpuses are not cold.\n∀x (Zumpus(x) → Sour(x)) ::: Zumpuses are sour.\n∀x (Zumpus(x) → Numpus(x)) ::: Zumpuses are numpuses.\n∀x (Numpus(x) → Opaque(x)) ::: Each numpus is opaque.\n∀x (Numpus(x) → Dumpus(x)) ::: Every numpus is a dumpus.\n∀x (Dumpus(x) → Feisty(x)) ::: Dumpuses are feisty.\n∀x (Yumpus(x) → ¬Bright(x)) ::: Every yumpus is not bright.\n∀x (Dumpus(x) → Wumpus(x)) ::: Every dumpus is a wumpus.\n∀x (Wumpus(x) → Bright(x)) ::: Wumpuses are bright.\n∀x (Wumpus(x) → Impus(x)) ::: Each wumpus is an impus.\n∀x (Impus(x) → Red(x)) ::: Every impus is red.\n∀x (Impus(x) → Rompus(x)) ::: Every impus is a rompus.\n∀x (Rompus(x) → Small(x)) ::: Every rompus is small.\n∀x (Rompus(x) → Jompus(x)) ::: Rompuses are jompuses.\nVumpus(wren) ::: Wren is a vumpus.\nConclusion:\n¬Bright(wren) ::: Wren is not bright.\n------"
    ]
  },
  {
    "id": "ProntoQA_271",
    "context": "Each rompus is small. Each jompus is angry. Each jompus is a tumpus. Each tumpus is not nervous. Every tumpus is a wumpus. Wumpuses are bright. Wumpuses are numpuses. Numpuses are temperate. Numpuses are vumpuses. Every vumpus is not small. Vumpuses are dumpuses. Sally is a jompus.",
    "question": "Is the following statement true or false? Sally is not small.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant.lpg\n------"
    ]
  },
  {
    "id": "ProntoQA_272",
    "context": "Jompuses are feisty. Each jompus is an impus. Impuses are kind. Every impus is a zumpus. Zumpuses are bitter. Rompuses are not cold. Zumpuses are tumpuses. Every tumpus is orange. Every tumpus is a wumpus. Every wumpus is transparent. Wumpuses are numpuses. Each numpus is dull. Numpuses are yumpuses. Every yumpus is cold. Yumpuses are vumpuses. Vumpuses are fruity. Each vumpus is a dumpus. Alex is a zumpus.",
    "question": "Is the following statement true or false? Alex is cold.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nJompus(x) ::: x is a jompus\nFeisty(x) ::: x is feisty\nImpus(x) ::: x is an impus\nKind(x) ::: x is kind\nZumpus(x) ::: x is a zumpus\nBitter(x) ::: x is bitter\nRompus(x) ::: x is a rompus\nCold(x) ::: x is cold\nTumpus(x) ::: x is a tumpus\nOrange(x) ::: x is orange\nWumpus(x) ::: x is a wumpus\nTransparent(x) ::: x is transparent\nNumpus(x) ::: x is a numpus\nDull(x) ::: x is dull\nYumpus(x) ::: x is a yumpus\nCold(x) ::: x is cold\nVumpus(x) ::: x is a vumpus\nFruity(x) ::: x is fruity\nDumpus(x) ::: x is a dumpus\nPremises:\n∀x (Jompus(x) → Feisty(x)) ::: Jompuses are feisty.\n∀x (Jompus(x) → Impus(x)) ::: Each jompus is an impus.\n∀x (Impus(x) → Kind(x)) ::: Impuses are kind.\n∀x (Impus(x) → Zumpus(x)) ::: Every impus is a zumpus.\n∀x (Zumpus(x) → Bitter(x)) ::: Zumpuses are bitter.\n∀x (Rompus(x) → ¬Cold(x)) ::: Rompuses are not cold.\n∀x (Zumpus(x) → Tumpus(x)) ::: Zumpuses are tumpuses.\n∀x (Tumpus(x) → Orange(x)) ::: Every tumpus is orange.\n∀x (Tumpus(x) → Wumpus(x)) ::: Every tumpus is a wumpus.\n∀x (Wumpus(x) → Transparent(x)) ::: Every wumpus is transparent.\n∀x (Wumpus(x) → Numpus(x)) ::: Wumpuses are numpuses.\n∀x (Numpus(x) → Dull(x)) ::: Each numpus is dull.\n∀x (Numpus(x) → Yumpus(x)) ::: Numpuses are yumpuses.\n∀x (Yumpus(x) → Cold(x)) ::: Every yumpus is cold.\n∀x (Yumpus(x) → Vumpus(x)) ::: Yumpuses are vumpuses.\n∀x (Vumpus(x) → Fruity(x)) ::: Vumpuses are fruity.\n∀x (Vumpus(x) → Dumpus(x)) ::: Each vumpus is a dumpus.\nZumpus(alex) ::: Alex is a zumpus.\nConclusion:\nCold(alex) ::: Alex is cold.\n------"
    ]
  },
  {
    "id": "ProntoQA_273",
    "context": "Dumpuses are hot. Each dumpus is a yumpus. Every yumpus is happy. Each yumpus is a vumpus. Every vumpus is not transparent. Every vumpus is a jompus. Jompuses are small. Jompuses are zumpuses. Every numpus is not luminous. Each zumpus is not spicy. Each zumpus is a wumpus. Wumpuses are not amenable. Wumpuses are tumpuses. Every tumpus is dull. Each tumpus is an impus. Every impus is luminous. Impuses are rompuses. Alex is a jompus.",
    "question": "Is the following statement true or false? Alex is luminous.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nDumpus(x) ::: x is a dumpus\nHot(x) ::: x is hot\nYumpus(x) ::: x is a yumpus\nHappy(x) ::: x is happy\nVumpus(x) ::: x is a vumpus\nTransparent(x) ::: x is transparent\nJompus(x) ::: x is a jompus\nSmall(x) ::: x is small\nZumpus(x) ::: x is a zumpus\nLuminous(x) ::: x is luminous\nSpicy(x) ::: x is spicy\nWumpus(x) ::: x is a wumpus\nAmenable(x) ::: x is amenable\nTumpus(x) ::: x is a tumpus\nDull(x) ::: x is dull\nImpus(x) ::: x is an impus\nRompus(x) ::: x is a rompus\nPremises:\n∀x (Dumpus(x) → Hot(x)) ::: Dumpuses are hot.\n∀x (Yumpus(x) → Happy(x)) ::: Each yumpus is happy.\n∀x (Vumpus(x) → ¬Transparent(x)) ::: Every vumpus is not transparent.\n∀x (Vumpus(x) → Jompus(x)) ::: Every vumpus is a jompus.\n∀x (Jompus(x) → Small(x)) ::: Jompuses are small.\n∀x (Jompus(x) → Zumpus(x)) ::: Jompuses are zumpuses.\n∀x (Numpus(x) → ¬Luminous(x)) ::: Every numpus is not luminous.\n∀x (Zumpus(x) → ¬Spicy(x)) ::: Each zumpus is not spicy.\n∀x (Zumpus(x) → Wumpus(x)) ::: Each zumpus is a wumpus.\n∀x (Wumpus(x) → ¬Amenable(x)) ::: Wumpuses are not amenable.\n∀x (Wumpus(x) → Tumpus(x)) ::: Wumpuses are tumpuses.\n∀x (Tumpus(x) → Dull(x)) ::: Each tumpus is dull.\n∀x (Tumpus(x) → Impus(x)) ::: Each tumpus is an impus.\n∀x (Impus(x) → Luminous(x)) ::: Every impus is luminous.\n∀x (Impus(x) → Rompus(x)) ::: Impuses are rompuses.\nJompus(alex) ::: Alex is a jompus.\nConclusion:\nLuminous(alex) ::: Alex is luminous.\n------"
    ]
  },
  {
    "id": "ProntoQA_274",
    "context": "Vumpuses are earthy. Vumpuses are yumpuses. Yumpuses are temperate. Every yumpus is a tumpus. Each tumpus is kind. Tumpuses are jompuses. Jompuses are dull. Every jompus is a zumpus. Zumpuses are not transparent. Rompuses are metallic. Zumpuses are dumpuses. Every dumpus is not metallic. Dumpuses are numpuses. Each numpus is feisty. Numpuses are wumpuses. Wumpuses are sour. Wumpuses are impuses. Sam is a yumpus.",
    "question": "Is the following statement true or false? Sam is not metallic.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nVumpus(x) ::: x is a vumpus\nEarthy(x) ::: x is earthy\nYumpus(x) ::: x is a yumpus\nTemperate(x) ::: x is temperate\nTumpus(x) ::: x is a tumpus\nKind(x) ::: x is kind\nJompus(x) ::: x is a jompus\nDull(x) ::: x is dull\nZumpus(x) ::: x is a zumpus\nTransparent(x) ::: x is transparent\nRompus(x) ::: x is a rompus\nMetallic(x) ::: x is metallic\nDumpus(x) ::: x is a dumpus\nNumpus(x) ::: x is a numpus\nFeisty(x) ::: x is feisty\nWumpus(x) ::: x is a wumpus\nSour(x) ::: x is sour\nImpus(x) ::: x is an impus\nPremises:\n∀x (Vumpus(x) → Earthy(x)) ::: Vumpuses are earthy.\n∀x (Vumpus(x) → Yumpus(x)) ::: Vumpuses are yumpuses.\n∀x (Yumpus(x) → Temperate(x)) ::: Yumpuses are temperate.\n∀x (Yumpus(x) → Tumpus(x)) ::: Every yumpus is a tumpus.\n∀x (Tumpus(x) → Kind(x)) ::: Each tumpus is kind.\n∀x (Tumpus(x) → Jompus(x)) ::: Tumpuses are jompuses.\n∀x (Jompus(x) → Dull(x)) ::: Jompuses are dull.\n∀x (Jompus(x) → Zumpus(x)) ::: Every jompus is a zumpus.\n∀x (Zumpus(x) → ¬Transparent(x)) ::: Zumpuses are not transparent.\n∀x (Rompus(x) → Metallic(x)) ::: Rompuses are metallic.\n∀x (Zumpus(x) → Dumpus(x)) ::: Zumpuses are dumpuses.\n∀x (Dumpus(x) → ¬Metallic(x)) ::: Every dumpus is not metallic.\n∀x (Dumpus(x) → Numpus(x)) ::: Dumpuses are numpuses.\n∀x (Numpus(x) → Feisty(x)) ::: Each numpus is feisty.\n∀x (Numpus(x) → Wumpus(x)) ::: Numpuses are wumpuses.\n∀x (Wumpus(x) → Sour(x)) ::: Wumpuses are sour.\n∀x (Wumpus(x) → Impus(x)) ::: Wumpuses are impuses.\nYumpus(sam) ::: Sam is a yumpus.\nConclusion:\n¬Metallic(sam) ::: Sam is not metallic.\n------"
    ]
  },
  {
    "id": "ProntoQA_275",
    "context": "Zumpuses are not red. Each zumpus is a tumpus. Each tumpus is sour. Every dumpus is aggressive. Each tumpus is a wumpus. Each wumpus is bright. Each wumpus is an impus. Impuses are luminous. Every impus is a rompus. Rompuses are not aggressive. Each rompus is a numpus. Numpuses are small. Numpuses are jompuses. Each jompus is floral. Every jompus is a yumpus. Each yumpus is transparent. Yumpuses are vumpuses. Max is a zumpus.",
    "question": "Is the following statement true or false? Max is not aggressive.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nZumpus(x) ::: x is a zumpus\nRed(x) ::: x is red\nTumpus(x) ::: x is a tumpus\nSour(x) ::: x is sour\nDumpus(x) ::: x is a dumpus\nAggressive(x) ::: x is aggressive\nWumpus(x) ::: x is a wumpus\nBright(x) ::: x is bright\nImpus(x) ::: x is an impus\nLuminous(x) ::: x is luminous\nRompus(x) ::: x is a rompus\nNumpus(x) ::: x is a numpus\nSmall(x) ::: x is small\nJompus(x) ::: x is a jompus\nFloral(x) ::: x is floral\nYumpus(x) ::: x is a yumpus\nTransparent(x) ::: x is transparent\nVumpus(x) ::: x is a vumpus\nPremises:\n∀x (Zumpus(x) → ¬Red(x)) ::: Zumpuses are not red.\n∀x (Tumpus(x) → Sour(x)) ::: Each zumpus is a tumpus.\n∀x (Tumpus(x) → Aggressive(x)) ::: Each tumpus is sour.\n∀x (Dumpus(x) → Aggressive(x)) ::: Every dumpus is aggressive.\n∀x (Tumpus(x) → Wumpus(x)) ::: Each tumpus is a wumpus.\n∀x (Wumpus(x) → Bright(x)) ::: Each wumpus is bright.\n∀x (Wumpus(x) → Impus(x)) ::: Each wumpus is an impus.\n∀x (Impus(x) → Luminous(x)) ::: Impuses are luminous.\n∀x (Impus(x) → Rompus(x)) ::: Every impus is a rompus.\n∀x (Rompus(x) → ¬Aggressive(x)) ::: Rompuses are not aggressive.\n∀x (Rompus(x) → Numpus(x)) ::: Each rompus is a numpus.\n∀x (Numpus(x) → Small(x)) ::: Numpuses are small.\n∀x (Numpus(x) → Jompus(x)) ::: Numpuses are jompuses.\n∀x (Jompus(x) → Floral(x)) ::: Each jompus is floral.\n∀x (Jompus(x) → Yumpus(x)) ::: Every jompus is a yumpus.\n∀x (Yumpus(x) → Transparent(x)) ::: Each yumpus is transparent.\n∀x (Yumpus(x) → Vumpus(x)) ::: Yumpuses are vumpuses.\nZumpus(max) ::: Max is a zumpus.\nConclusion:\n¬Aggressive(max) ::: Max is not aggressive.\n------"
    ]
  },
  {
    "id": "ProntoQA_276",
    "context": "Dumpuses are opaque. Dumpuses are vumpuses. Vumpuses are not bright. Vumpuses are tumpuses. Each tumpus is not hot. Tumpuses are zumpuses. Zumpuses are wooden. Every zumpus is a wumpus. Yumpuses are not nervous. Every wumpus is nervous. Each wumpus is a numpus. Numpuses are aggressive. Each numpus is an impus. Every impus is sour. Impuses are rompuses. Every rompus is floral. Every rompus is a jompus. Sally is a dumpus.",
    "question": "Is the following statement true or false? Sally is not nervous.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nDumpus(x) ::: x is a dumpus\nOpaque(x) ::: x is opaque\nVumpus(x) ::: x is a vumpus\nBright(x) ::: x is bright\nTumpus(x) ::: x is a tumpus\nHot(x) ::: x is hot\nZumpus(x) ::: x is a zumpus\nWooden(x) ::: x is wooden\nWumpus(x) ::: x is a wumpus\nNervous(x) ::: x is nervous\nNumpus(x) ::: x is a numpus\nAggressive(x) ::: x is aggressive\nImpus(x) ::: x is an impus\nSour(x) ::: x is sour\nRompus(x) ::: x is a rompus\nFloral(x) ::: x is floral\nJompus(x) ::: x is a jompus\nPremises:\n∀x (Dumpus(x) → Opaque(x)) ::: Dumpuses are opaque.\n∀x (Dumpus(x) → Vumpus(x)) ::: Dumpuses are vumpuses.\n∀x (Vumpus(x) → ¬Bright(x)) ::: Vumpuses are not bright.\n∀x (Vumpus(x) → Tumpus(x)) ::: Vumpuses are tumpuses.\n∀x (Tumpus(x) → ¬Hot(x)) ::: Each tumpus is not hot.\n∀x (Tumpus(x) → Zumpus(x)) ::: Tumpuses are zumpuses.\n∀x (Zumpus(x) → Wooden(x)) ::: Zumpuses are wooden.\n∀x (Zumpus(x) → Wumpus(x)) ::: Every zumpus is a wumpus.\n∀x (Yumpus(x) → ¬Nervous(x)) ::: Yumpuses are not nervous.\n∀x (Wumpus(x) → Nervous(x)) ::: Every wumpus is nervous.\n∀x (Wumpus(x) → Numpus(x)) ::: Each wumpus is a numpus.\n∀x (Numpus(x) → Aggressive(x)) ::: Numpuses are aggressive.\n∀x (Numpus(x) → Impus(x)) ::: Each numpus is an impus.\n∀x (Impus(x) → Sour(x)) ::: Every impus is sour.\n∀x (Impus(x) → Rompus(x)) ::: Impuses are rompuses.\n∀x (Rompus(x) → Floral(x)) ::: Every rompus is floral.\n∀x (Rompus(x) → Jompus(x)) ::: Every rompus is a jompus.\nDumpus(sally) ::: Sally is a dumpus.\nConclusion:\n¬Nervous(sally) ::: Sally is not nervous.\n------"
    ]
  },
  {
    "id": "ProntoQA_277",
    "context": "Rompuses are transparent. Each rompus is a numpus. Every numpus is bitter. Numpuses are tumpuses. Tumpuses are small. Tumpuses are zumpuses. Zumpuses are mean. Zumpuses are yumpuses. Yumpuses are liquid. Each yumpus is a dumpus. Every dumpus is fruity. Dumpuses are vumpuses. Impuses are temperate. Each vumpus is brown. Every vumpus is a jompus. Jompuses are not temperate. Jompuses are wumpuses. Rex is a zumpus.",
    "question": "Is the following statement true or false? Rex is not temperate.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nRompus(x) ::: x is a rompus\nTransparent(x) ::: x is transparent\nNumpus(x) ::: x is a numpus\nBitter(x) ::: x is bitter\nTumpus(x) ::: x is a tumpus\nSmall(x) ::: x is small\nZumpus(x) ::: x is a zumpus\nMean(x) ::: x is mean\nYumpus(x) ::: x is a yumpus\nLiquid(x) ::: x is liquid\nDumpus(x) ::: x is a dumpus\nFruity(x) ::: x is fruity\nVumpus(x) ::: x is a vumpus\nBrown(x) ::: x is brown\nJompus(x) ::: x is a jompus\nTemperate(x) ::: x is temperate\nWumpus(x) ::: x is a wumpus\nPremises:\n∀x (Rompus(x) → Transparent(x)) ::: Rompuses are transparent.\n∀x (Numpus(x) → Bitter(x)) ::: Each rompus is a numpus. Every numpus is bitter.\n∀x (Numpus(x) → Tumpus(x)) ::: Numpuses are tumpuses.\n∀x (Tumpus(x) → Small(x)) ::: Tumpuses are small.\n∀x (Tumpus(x) → Zumpus(x)) ::: Tumpuses are zumpuses.\n∀x (Zumpus(x) → Mean(x)) ::: Zumpuses are mean.\n∀x (Zumpus(x) → Yumpus(x)) ::: Zumpuses are yumpuses.\n∀x (Yumpus(x) → Liquid(x)) ::: Yumpuses are liquid.\n∀x (Yumpus(x) → Dumpus(x)) ::: Each yumpus is a dumpus.\n∀x (Dumpus(x) → Fruity(x)) ::: Every dumpus is fruity.\n∀x (Dumpus(x) → Vumpus(x)) ::: Dumpuses are vumpuses.\n∀x (Impus(x) → Temperate(x)) ::: Impuses are temperate.\n∀x (Vumpus(x) → Brown(x)) ::: Each vumpus is brown.\n∀x (Vumpus(x) → Jompus(x)) ::: Every vumpus is a jompus.\n∀x (Jompus(x) → Temperate(x)) ::: Jompuses are not temperate.\n∀x (Jompus(x) → Wumpus(x)) ::: Jompuses are wumpuses.\nZumpus(rex) ::: Rex is a zumpus.\nConclusion:\n¬Temperate(rex) ::: Rex is not temperate.\n------"
    ]
  },
  {
    "id": "ProntoQA_278",
    "context": "Every zumpus is happy. Zumpuses are impuses. Impuses are temperate. Each impus is a rompus. Every rompus is luminous. Rompuses are yumpuses. Every yumpus is not small. Yumpuses are dumpuses. Each dumpus is blue. Each dumpus is a numpus. Each numpus is not earthy. Every numpus is a jompus. Jompuses are not kind. Each jompus is a wumpus. Tumpuses are not dull. Wumpuses are dull. Each wumpus is a vumpus. Sally is a yumpus.",
    "question": "Is the following statement true or false? Sally is not dull.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nZumpus(x) ::: x is a zumpus\nHappy(x) ::: x is happy\nImpus(x) ::: x is an impus\nTemperate(x) ::: x is temperate\nRompus(x) ::: x is a rompus\nLuminous(x) ::: x is luminous\nYumpus(x) ::: x is a yumpus\nSmall(x) ::: x is small\nDumpus(x) ::: x is a dumpus\nBlue(x) ::: x is blue\nNumpus(x) ::: x is a numpus\nEarthy(x) ::: x is earthy\nJompus(x) ::: x is a jompus\nKind(x) ::: x is kind\nWumpus(x) ::: x is a wumpus\nDull(x) ::: x is dull\nVumpus(x) ::: x is a vumpus\nPremises:\n∀x (Zumpus(x) → Happy(x)) ::: Every zumpus is happy.\n∀x (Zumpus(x) → Impus(x)) ::: Zumpuses are impuses.\n∀x (Impus(x) → Temperate(x)) ::: Impuses are temperate.\n∀x (Impus(x) → Rompus(x)) ::: Each impus is a rompus.\n∀x (Rompus(x) → Luminous(x)) ::: Every rompus is luminous.\n∀x (Rompus(x) → Yumpus(x)) ::: Rompuses are yumpuses.\n∀x (Yumpus(x) → ¬Small(x)) ::: Every yumpus is not small.\n∀x (Yumpus(x) → Dumpus(x)) ::: Yumpuses are dumpuses.\n∀x (Dumpus(x) → Blue(x)) ::: Each dumpus is blue.\n∀x (Dumpus(x) → Numpus(x)) ::: Each dumpus is a numpus.\n∀x (Numpus(x) → ¬Earthy(x)) ::: Each numpus is not earthy.\n∀x (Numpus(x) → Jompus(x)) ::: Every numpus is a jompus.\n∀x (Jompus(x) → ¬Kind(x)) ::: Jompuses are not kind.\n∀x (Jompus(x) → Wumpus(x)) ::: Each jompus is a wumpus.\n∀x (Tumpus(x) → ¬Dull(x)) ::: Tumpuses are not dull.\n∀x (Wumpus(x) → Dull(x)) ::: Wumpuses are dull.\n∀x (Wumpus(x) → Vumpus(x)) ::: Each wumpus is a vumpus.\nYumpus(sally) ::: Sally is a yumpus.\nConclusion:\n¬Dull(sally) ::: Sally is not dull.\n------"
    ]
  },
  {
    "id": "ProntoQA_279",
    "context": "Every tumpus is transparent. Tumpuses are rompuses. Every rompus is fruity. Each vumpus is feisty. Each rompus is a jompus. Jompuses are hot. Jompuses are yumpuses. Every yumpus is dull. Yumpuses are dumpuses. Dumpuses are not feisty. Dumpuses are numpuses. Numpuses are brown. Numpuses are zumpuses. Each zumpus is small. Every zumpus is a wumpus. Every wumpus is not angry. Each wumpus is an impus. Wren is a tumpus.",
    "question": "Is the following statement true or false? Wren is not feisty.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nTumpus(x) ::: x is a tumpus\nTransparent(x) ::: x is transparent\nRompus(x) ::: x is a rompus\nFruity(x) ::: x is fruity\nVumpus(x) ::: x is a vumpus\nFeisty(x) ::: x is feisty\nJompus(x) ::: x is a jompus\nHot(x) ::: x is hot\nYumpus(x) ::: x is a yumpus\nDull(x) ::: x is dull\nDumpus(x) ::: x is a dumpus\nNumpus(x) ::: x is a numpus\nBrown(x) ::: x is brown\nZumpus(x) ::: x is a zumpus\nSmall(x) ::: x is small\nWumpus(x) ::: x is a wumpus\nAngry(x) ::: x is angry\nImpus(x) ::: x is an impus\nPremises:\n∀x (Tumpus(x) → Transparent(x)) ::: Every tumpus is transparent.\n∀x (Tumpus(x) → Rompus(x)) ::: Tumpuses are rompuses.\n∀x (Rompus(x) → Fruity(x)) ::: Every rompus is fruity.\n∀x (Vumpus(x) → Feisty(x)) ::: Each vumpus is feisty.\n∀x (Rompus(x) → Jompus(x)) ::: Each rompus is a jompus.\n∀x (Jompus(x) → Hot(x)) ::: Jompuses are hot.\n∀x (Jompus(x) → Yumpus(x)) ::: Jompuses are yumpuses.\n∀x (Yumpus(x) → Dull(x)) ::: Every yumpus is dull.\n∀x (Yumpus(x) → Dumpus(x)) ::: Yumpuses are dumpuses.\n∀x (Dumpus(x) → ¬Feisty(x)) ::: Dumpuses are not feisty.\n∀x (Dumpus(x) → Numpus(x)) ::: Dumpuses are numpuses.\n∀x (Numpus(x) → Brown(x)) ::: Numpuses are brown.\n∀x (Numpus(x) → Zumpus(x)) ::: Numpuses are zumpuses.\n∀x (Zumpus(x) → Small(x)) ::: Each zumpus is small.\n∀x (Zumpus(x) → Wumpus(x)) ::: Every zumpus is a wumpus.\n∀x (Wumpus(x) → ¬Angry(x)) ::: Every wumpus is not angry.\n∀x (Wumpus(x) → Impus(x)) ::: Each wumpus is an impus.\nTumpus(wren) ::: Wren is a tumpus.\nConclusion:\n¬Feisty(wren) ::: Wren is not feisty.\n------"
    ]
  },
  {
    "id": "ProntoQA_280",
    "context": "Every zumpus is not amenable. Each zumpus is a yumpus. Each yumpus is liquid. Every yumpus is an impus. Every impus is not brown. Every impus is a numpus. Numpuses are small. Numpuses are vumpuses. Vumpuses are not temperate. Vumpuses are jompuses. Jompuses are dull. Every tumpus is sweet. Jompuses are dumpuses. Dumpuses are happy. Each dumpus is a wumpus. Wumpuses are not sweet. Wumpuses are rompuses. Alex is a numpus.",
    "question": "Is the following statement true or false? Alex is sweet.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nZumpus(x) ::: x is a zumpus\nAmenable(x) ::: x is amenable\nYumpus(x) ::: x is a yumpus\nLiquid(x) ::: x is liquid\nImpus(x) ::: x is an impus\nBrown(x) ::: x is brown\nNumpus(x) ::: x is a numpus\nSmall(x) ::: x is small\nVumpus(x) ::: x is a vumpus\nTemperate(x) ::: x is temperate\nJompus(x) ::: x is a jompus\nDull(x) ::: x is dull\nTumpus(x) ::: x is a tumpus\nSweet(x) ::: x is sweet\nDumpus(x) ::: x is a dumpus\nHappy(x) ::: x is happy\nWumpus(x) ::: x is a wumpus\nRompus(x) ::: x is a rompus\nPremises:\n∀x (Zumpus(x) → ¬Amenable(x)) ::: Every zumpus is not amenable.\n∀x (Zumpus(x) → Yumpus(x)) ::: Each zumpus is a yumpus.\n∀x (Yumpus(x) → Liquid(x)) ::: Every yumpus is liquid.\n∀x (Yumpus(x) → Impus(x)) ::: Every yumpus is an impus.\n∀x (Impus(x) → ¬Brown(x)) ::: Every impus is not brown.\n∀x (Impus(x) → Numpus(x)) ::: Every impus is a numpus.\n∀x (Numpus(x) → Small(x)) ::: Numpuses are small.\n∀x (Numpus(x) → Vumpus(x)) ::: Numpuses are vumpuses.\n∀x (Vumpus(x) → ¬Temperate(x)) ::: Vumpuses are not temperate.\n∀x (Vumpus(x) → Jompus(x)) ::: Vumpuses are jompuses.\n∀x (Jompus(x) → Dull(x)) ::: Jompuses are dull.\n∀x (Tumpus(x) → Sweet(x)) ::: Every tumpus is sweet.\n∀x (Jompus(x) → Dumpus(x)) ::: Jompuses are dumpuses.\n∀x (Dumpus(x) → Happy(x)) ::: Dumpuses are happy.\n∀x (Dumpus(x) → Wumpus(x)) ::: Each dumpus is a wumpus.\n∀x (Wumpus(x) → ¬Sweet(x)) ::: Wumpuses are not sweet.\n∀x (Wumpus(x) → Rompus(x)) ::: Wumpuses are rompuses.\nNumpus(alex) ::: Alex is a numpus.\nConclusion:\nSweet(alex) ::: Alex is sweet.\n------"
    ]
  },
  {
    "id": "ProntoQA_281",
    "context": "Zumpuses are not amenable. Each zumpus is a wumpus. Every wumpus is spicy. Each wumpus is a rompus. Every yumpus is not luminous. Each rompus is nervous. Each rompus is a tumpus. Every tumpus is not small. Every tumpus is a dumpus. Every dumpus is not hot. Dumpuses are jompuses. Every jompus is luminous. Every jompus is a vumpus. Every vumpus is floral. Each vumpus is a numpus. Stella is a wumpus.",
    "question": "Is the following statement true or false? Stella is luminous.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nZumpus(x) ::: x is a zumpus\nAmenable(x) ::: x is amenable\nWumpus(x) ::: x is a wumpus\nSpicy(x) ::: x is spicy\nRompus(x) ::: x is a rompus\nYumpus(x) ::: x is a yumpus\nLuminous(x) ::: x is luminous\nNervous(x) ::: x is nervous\nTumpus(x) ::: x is a tumpus\nSmall(x) ::: x is small\nDumpus(x) ::: x is a dumpus\nHot(x) ::: x is hot\nJompus(x) ::: x is a jompus\nLuminous(x) ::: x is luminous\nVumpus(x) ::: x is a vumpus\nFloral(x) ::: x is floral\nNumpus(x) ::: x is a numpus\nPremises:\n∀x (Zumpus(x) → ¬Amenable(x)) ::: Zumpuses are not amenable.\n∀x (Wumpus(x) → Spicy(x)) ::: Each zumpus is a wumpus. Every wumpus is spicy.\n∀x (Rompus(x) → Nervous(x)) ::: Each rompus is nervous.\n∀x (Rompus(x) → Tumpus(x)) ::: Every rompus is a tumpus.\n∀x (Tumpus(x) → ¬Small(x)) ::: Every tumpus is not small.\n∀x (Tumpus(x) → Dumpus(x)) ::: Every tumpus is a dumpus.\n∀x (Dumpus(x) → ¬Hot(x)) ::: Every dumpus is not hot.\n∀x (Dumpus(x) → Jompus(x)) ::: Dumpuses are jompuses.\n∀x (Jompus(x) → Luminous(x)) ::: Every jompus is luminous.\n∀x (Jompus(x) → Vumpus(x)) ::: Every jompus is a vumpus.\n∀x (Vumpus(x) → Floral(x)) ::: Every vumpus is floral.\n∀x (Vumpus(x) → Numpus(x)) ::: Each vumpus is a numpus.\nWumpus(stella) ::: Stella is a wumpus.\nConclusion:\nLuminous(stella) ::: Stella is luminous.\n------"
    ]
  },
  {
    "id": "ProntoQA_282",
    "context": "Every dumpus is earthy. Each dumpus is a zumpus. Zumpuses are happy. Zumpuses are jompuses. Impuses are not luminous. Every jompus is brown. Each jompus is a tumpus. Every tumpus is dull. Tumpuses are rompuses. Each rompus is hot. Rompuses are numpuses. Numpuses are not transparent. Numpuses are yumpuses. Each yumpus is luminous. Yumpuses are vumpuses. Each vumpus is small. Every vumpus is a wumpus. Stella is a jompus.",
    "question": "Is the following statement true or false? Stella is luminous.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nDumpus(x) ::: x is a dumpus\nEarthy(x) ::: x is earthy\nZumpus(x) ::: x is a zumpus\nHappy(x) ::: x is happy\nJompus(x) ::: x is a jompus\nImpus(x) ::: x is an impus\nLuminous(x) ::: x is luminous\nBrown(x) ::: x is brown\nTumpus(x) ::: x is a tumpus\nDull(x) ::: x is dull\nRompus(x) ::: x is a rompus\nHot(x) ::: x is hot\nNumpus(x) ::: x is a numpus\nTransparent(x) ::: x is transparent\nYumpus(x) ::: x is a yumpus\nVumpus(x) ::: x is a vumpus\nSmall(x) ::: x is small\nWumpus(x) ::: x is a wumpus\nPremises:\n∀x (Dumpus(x) → Earthy(x)) ::: Every dumpus is earthy.\n∀x (Dumpus(x) → Zumpus(x)) ::: Each dumpus is a zumpus.\n∀x (Zumpus(x) → Happy(x)) ::: Zumpuses are happy.\n∀x (Zumpus(x) → Jompus(x)) ::: Zumpuses are jompuses.\n∀x (Impus(x) → ¬Luminous(x)) ::: Impuses are not luminous.\n∀x (Jompus(x) → Brown(x)) ::: Every jompus is brown.\n∀x (Jompus(x) → Tumpus(x)) ::: Each jompus is a tumpus.\n∀x (Tumpus(x) → Dull(x)) ::: Every tumpus is dull.\n∀x (Tumpus(x) → Rompus(x)) ::: Tumpuses are rompuses.\n∀x (Rompus(x) → Hot(x)) ::: Each rompus is hot.\n∀x (Rompus(x) → Numpus(x)) ::: Rompuses are numpuses.\n∀x (Numpus(x) → ¬Transparent(x)) ::: Numpuses are not transparent.\n∀x (Numpus(x) → Yumpus(x)) ::: Numpuses are yumpuses.\n∀x (Yumpus(x) → Luminous(x)) ::: Each yumpus is luminous.\n∀x (Yumpus(x) → Vumpus(x)) ::: Yumpuses are vumpuses.\n∀x (Vumpus(x) → Small(x)) ::: Each vumpus is small.\n∀x (Vumpus(x) → Wumpus(x)) ::: Every vumpus is a wumpus.\nJompus(stella) ::: Stella is a jompus.\nConclusion:\nLuminous(stella) ::: Stella is luminous.\n------"
    ]
  },
  {
    "id": "ProntoQA_283",
    "context": "Wumpuses are opaque. Vumpuses are not large. Every wumpus is a rompus. Rompuses are bright. Every rompus is a numpus. Numpuses are not luminous. Every numpus is a tumpus. Every tumpus is aggressive. Tumpuses are impuses. Impuses are large. Every impus is a jompus. Jompuses are not sour. Jompuses are yumpuses. Polly is a wumpus.",
    "question": "Is the following statement true or false? Polly is large.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nWumpus(x) ::: x is a wumpus\nOpaque(x) ::: x is opaque\nVumpus(x) ::: x is a vumpus\nLarge(x) ::: x is large\nRompus(x) ::: x is a rompus\nBright(x) ::: x is bright\nNumpus(x) ::: x is a numpus\nLuminous(x) ::: x is luminous\nTumpus(x) ::: x is a tumpus\nAggressive(x) ::: x is aggressive\nImpus(x) ::: x is an impus\nLarge(x) ::: x is large\nJompus(x) ::: x is a jompus\nSour(x) ::: x is sour\nYumpus(x) ::: x is a yumpus\nPremises:\n∀x (Wumpus(x) → Opaque(x)) ::: Wumpuses are opaque.\n∀x (Vumpus(x) → ¬Large(x)) ::: Vumpuses are not large.\n∀x (Wumpus(x) → Rompus(x)) ::: Every wumpus is a rompus.\n∀x (Rompus(x) → Bright(x)) ::: Rompuses are bright.\n∀x (Numpus(x) → ¬Luminous(x)) ::: Every rompus is a numpus.\n∀x (Numpus(x) → Tumpus(x)) ::: Numpuses are not luminous.\n∀x (Tumpus(x) → Aggressive(x)) ::: Every numpus is a tumpus.\n∀x (Tumpus(x) → Impus(x)) ::: Every tumpus is an impus.\n∀x (Impus(x) → Large(x)) ::: Impuses are large.\n∀x (Impus(x) → Jompus(x)) ::: Every impus is a jompus.\n∀x (Jompus(x) → ¬Sour(x)) ::: Jompuses are not sour.\n∀x (Jompus(x) → Yumpus(x)) ::: Jompuses are yumpuses.\nWumpus(polly) ::: Polly is a wumpus.\nConclusion:\nLarge(polly) ::: Polly is large.\n------"
    ]
  },
  {
    "id": "ProntoQA_284",
    "context": "Numpuses are transparent. Numpuses are jompuses. Every jompus is floral. Every jompus is a rompus. Wumpuses are not happy. Each rompus is dull. Rompuses are impuses. Each impus is red. Each impus is a vumpus. Vumpuses are not small. Vumpuses are dumpuses. Each dumpus is happy. Dumpuses are yumpuses. Rex is a jompus.",
    "question": "Is the following statement true or false? Rex is happy.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant.lpg\n------"
    ]
  },
  {
    "id": "ProntoQA_285",
    "context": "Yumpuses are bright. Yumpuses are rompuses. Rompuses are not shy. Rompuses are dumpuses. Each dumpus is not orange. Every impus is not cold. Each dumpus is a tumpus. Tumpuses are large. Tumpuses are zumpuses. Every zumpus is kind. Every zumpus is a wumpus. Wumpuses are cold. Wumpuses are numpuses. Numpuses are wooden. Numpuses are vumpuses. Vumpuses are not sour. Vumpuses are jompuses. Stella is a rompus.",
    "question": "Is the following statement true or false? Stella is cold.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nYumpus(x) ::: x is a yumpus\nBright(x) ::: x is bright\nRompus(x) ::: x is a rompus\nShy(x) ::: x is shy\nDumpus(x) ::: x is a dumpus\nOrange(x) ::: x is orange\nImpus(x) ::: x is an impus\nCold(x) ::: x is cold\nTumpus(x) ::: x is a tumpus\nLarge(x) ::: x is large\nZumpus(x) ::: x is a zumpus\nKind(x) ::: x is kind\nWumpus(x) ::: x is a wumpus\nCold(x) ::: x is cold\nNumpus(x) ::: x is a numpus\nWooden(x) ::: x is wooden\nVumpus(x) ::: x is a vumpus\nSour(x) ::: x is sour\nJompus(x) ::: x is a jompus\nStella(x) ::: x is Stella\nPremises:\n∀x (Yumpus(x) → Bright(x)) ::: Yumpuses are bright.\n∀x (Yumpus(x) → Rompus(x)) ::: Yumpuses are rompuses.\n∀x (Rompus(x) → ¬Shy(x)) ::: Rompuses are not shy.\n∀x (Dumpus(x) → ¬Orange(x)) ::: Each dumpus is not orange.\n∀x (Impus(x) → ¬Cold(x)) ::: Every impus is not cold.\n∀x (Dumpus(x) → Tumpus(x)) ::: Each dumpus is a tumpus.\n∀x (Tumpus(x) → Large(x)) ::: Tumpuses are large.\n∀x (Tumpus(x) → Zumpus(x)) ::: Tumpuses are zumpuses.\n∀x (Zumpus(x) → Kind(x)) ::: Every zumpus is kind.\n∀x (Zumpus(x) → Wumpus(x)) ::: Every zumpus is a wumpus.\n∀x (Wumpus(x) → Cold(x)) ::: Wumpuses are cold.\n∀x (Wumpus(x) → Numpus(x)) ::: Wumpuses are numpuses.\n∀x (Numpus(x) → Wooden(x)) ::: Numpuses are wooden.\n∀x (Numpus(x) → Vumpus(x)) ::: Numpuses are vumpuses.\n∀x (Vumpus(x) → ¬Sour(x)) ::: Vumpuses are not sour.\n∀x (Vumpus(x) → Jompus(x)) ::: Vumpuses are jompuses.\nRompus(stella) ::: Stella is a rompus.\nConclusion:\nCold(stella) ::: Stella is cold.\n------"
    ]
  },
  {
    "id": "ProntoQA_286",
    "context": "Impuses are not sweet. Each impus is a numpus. Numpuses are large. Numpuses are wumpuses. Wumpuses are dull. Every wumpus is a dumpus. Dumpuses are temperate. Tumpuses are not floral. Each dumpus is a jompus. Every jompus is floral. Jompuses are yumpuses. Every yumpus is not nervous. Each yumpus is a rompus. Rompuses are liquid. Rompuses are zumpuses. Zumpuses are not opaque. Zumpuses are vumpuses. Max is an impus.",
    "question": "Is the following statement true or false? Max is floral.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nImpus(x) ::: x is an impus\nSweet(x) ::: x is sweet\nNumpus(x) ::: x is a numpus\nLarge(x) ::: x is large\nWumpus(x) ::: x is a wumpus\nDull(x) ::: x is dull\nDumpus(x) ::: x is a dumpus\nTemperate(x) ::: x is temperate\nFloral(x) ::: x is floral\nJompus(x) ::: x is a jompus\nYumpus(x) ::: x is a yumpus\nNervous(x) ::: x is nervous\nRompus(x) ::: x is a rompus\nLiquid(x) ::: x is liquid\nZumpus(x) ::: x is a zumpus\nOpaque(x) ::: x is opaque\nVumpus(x) ::: x is a vumpus\nPremises:\n∀x (Impus(x) → ¬Sweet(x)) ::: Impuses are not sweet.\n∀x (Numpus(x) → Large(x)) ::: Each impus is a numpus. Numpuses are large.\n∀x (Numpus(x) → Wumpus(x)) ::: Numpuses are wumpuses.\n∀x (Wumpus(x) → Dull(x)) ::: Wumpuses are dull.\n∀x (Wumpus(x) → Dumpus(x)) ::: Every wumpus is a dumpus.\n∀x (Dumpus(x) → Temperate(x)) ::: Dumpuses are temperate.\n∀x (Tumpus(x) → ¬Floral(x)) ::: Tumpuses are not floral.\n∀x (Dumpus(x) → Jompus(x)) ::: Each dumpus is a jompus.\n∀x (Jompus(x) → Floral(x)) ::: Every jompus is floral.\n∀x (Jompus(x) → Yumpus(x)) ::: Jompuses are yumpuses.\n∀x (Yumpus(x) → ¬Nervous(x)) ::: Every yumpus is not nervous.\n∀x (Yumpus(x) → Rompus(x)) ::: Each yumpus is a rompus.\n∀x (Rompus(x) → Liquid(x)) ::: Rompuses are liquid.\n∀x (Rompus(x) → Zumpus(x)) ::: Rompuses are zumpuses.\n∀x (Zumpus(x) → ¬Opaque(x)) ::: Zumpuses are not opaque.\n∀x (Zumpus(x) → Vumpus(x)) ::: Zumpuses are vumpuses.\nImpus(max) ::: Max is an impus.\nConclusion:\nFloral(max) ::: Max is floral.\n------"
    ]
  },
  {
    "id": "ProntoQA_287",
    "context": "Every jompus is not wooden. Jompuses are dumpuses. Each dumpus is not temperate. Dumpuses are tumpuses. Each tumpus is not shy. Tumpuses are rompuses. Every rompus is earthy. Rompuses are impuses. Every impus is blue. Every impus is a zumpus. Every zumpus is sour. Every wumpus is not bright. Zumpuses are yumpuses. Yumpuses are bright. Each yumpus is a numpus. Each numpus is not transparent. Numpuses are vumpuses. Rex is a tumpus.",
    "question": "Is the following statement true or false? Rex is bright.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nJompus(x) ::: x is a jompus\nWooden(x) ::: x is wooden\nDumpus(x) ::: x is a dumpus\nTemperate(x) ::: x is temperate\nTumpus(x) ::: x is a tumpus\nShy(x) ::: x is shy\nRompus(x) ::: x is a rompus\nEarthy(x) ::: x is earthy\nImpus(x) ::: x is an impus\nBlue(x) ::: x is blue\nZumpus(x) ::: x is a zumpus\nSour(x) ::: x is sour\nWumpus(x) ::: x is a wumpus\nBright(x) ::: x is bright\nNumpus(x) ::: x is a numpus\nTransparent(x) ::: x is transparent\nVumpus(x) ::: x is a vumpus\nPremises:\n∀x (Jompus(x) → ¬Wooden(x)) ::: Every jompus is not wooden.\n∀x (Jompus(x) → Dumpus(x)) ::: Jompuses are dumpuses.\n∀x (Dumpus(x) → ¬Temperate(x)) ::: Each dumpus is not temperate.\n∀x (Dumpus(x) → Tumpus(x)) ::: Dumpuses are tumpuses.\n∀x (Tumpus(x) → ¬Shy(x)) ::: Each tumpus is not shy.\n∀x (Tumpus(x) → Rompus(x)) ::: Tumpuses are rompuses.\n∀x (Rompus(x) → Earthy(x)) ::: Every rompus is earthy.\n∀x (Rompus(x) → Impus(x)) ::: Rompuses are impuses.\n∀x (Impus(x) → Blue(x)) ::: Every impus is blue.\n∀x (Impus(x) → Zumpus(x)) ::: Every impus is a zumpus.\n∀x (Zumpus(x) → Sour(x)) ::: Every zumpus is sour.\n∀x (Wumpus(x) → ¬Bright(x)) ::: Every wumpus is not bright.\n∀x (Zumpus(x) → Yumpus(x)) ::: Zumpuses are yumpuses.\n∀x (Yumpus(x) → Bright(x)) ::: Yumpuses are bright.\n∀x (Yumpus(x) → Numpus(x)) ::: Each yumpus is a numpus.\n∀x (Numpus(x) → ¬Transparent(x)) ::: Each numpus is not transparent.\n∀x (Numpus(x) → Vumpus(x)) ::: Numpuses are vumpuses.\nTumpus(rex) ::: Rex is a tumpus.\nConclusion:\nBright(rex) ::: Rex is bright.\n------"
    ]
  },
  {
    "id": "ProntoQA_288",
    "context": "Numpuses are not small. Rompuses are opaque. Every numpus is a dumpus. Every dumpus is hot. Dumpuses are jompuses. Each jompus is not nervous. Jompuses are wumpuses. Every wumpus is luminous. Wumpuses are tumpuses. Tumpuses are floral. Tumpuses are vumpuses. Vumpuses are bright. Each vumpus is an impus. Impuses are brown. Impuses are zumpuses. Zumpuses are not opaque. Zumpuses are yumpuses. Fae is a wumpus.",
    "question": "Is the following statement true or false? Fae is opaque.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "------\nAssistant:\nNumpuses(x) ::: x is a numpus\nSmall(x) ::: x is small\nRompus(x) ::: x is a rompus\nOpaque(x) ::: x is opaque\nDumpus(x) ::: x is a dumpus\nHot(x) ::: x is hot\nJompus(x) ::: x is a jompus\nNervous(x) ::: x is nervous\nLuminous(x) ::: x is luminous\nWumpus(x) ::: x is a wumpus\nTumpus(x) ::: x is a tumpus\nFloral(x) ::: x is floral\nVumpus(x) ::: x is a vumpus\nBright(x) ::: x is bright\nImpus(x) ::: x is an impus\nBrown(x) ::: x is brown\nZumpus(x) ::: x is a zumpus\nYumpus(x) ::: x is a yumpus\nFae(x) ::: x is Fae\nPremises:\n∀x (Numpus(x) → ¬Small(x)) ::: Numpuses are not small.\n∀x (Rompus(x) → Opaque(x)) ::: Rompuses are opaque.\n∀x (Numpus(x) → Dumpus(x)) ::: Every numpus is a dumpus.\n∀x (Dumpus(x) → Hot(x)) ::: Every dumpus is hot.\n∀x (Dumpus(x) → Jompus(x)) ::: Dumpuses are jompuses.\n∀x (Jompus(x) → ¬Nervous(x)) ::: Each jompus is not nervous.\n∀x (Jompus(x) → Wumpus(x)) ::: Jompuses are wumpuses.\n∀x (Wumpus(x) → Luminous(x)) ::: Every wumpus is luminous.\n∀x (Wumpus(x) → Tumpus(x)) ::: Wumpuses are tumpuses.\n∀x (Tumpus(x) → Floral(x)) ::: Tumpuses are floral.\n∀x (Tumpus(x) → Vumpus(x)) ::: Tumpuses are vumpuses.\n∀x (Vumpus(x) → Bright(x)) ::: Vumpuses are bright.\n∀x (Vumpus(x) → Impus(x)) ::: Each vumpus is an impus.\n∀x (Impus(x) → Brown(x)) ::: Impuses are brown.\n∀x (Impus(x) → Zumpus(x)) ::: Impuses are zumpuses.\n∀x (Zumpus(x) → ¬Opaque(x)) ::: Zumpuses are not opaque.\n∀x (Zumpus(x) → Yumpus(x)) ::: Zumpuses are yumpuses.\nWumpus(fae) ::: Fae is a wumpus.\nConclusion:\nOpaque(fae) ::: Fae is opaque.\n------"
    ]
  },
  {
    "id": "ProntoQA_289",
    "context": "Each yumpus is transparent. Yumpuses are zumpuses. Each zumpus is not dull. Every zumpus is a jompus. Every jompus is hot. Each jompus is a dumpus. Each dumpus is not large. Every impus is amenable. Dumpuses are numpuses. Numpuses are not amenable. Every numpus is a vumpus. Each vumpus is sour. Vumpuses are wumpuses. Every wumpus is not shy. Wumpuses are tumpuses. Tumpuses are not liquid. Each tumpus is a rompus. Polly is a yumpus.",
    "question": "Is the following statement true or false? Polly is amenable.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nYumpus(x) ::: x is a yumpus\nTransparent(x) ::: x is transparent\nZumpus(x) ::: x is a zumpus\nDull(x) ::: x is dull\nJompus(x) ::: x is a jompus\nHot(x) ::: x is hot\nDumpus(x) ::: x is a dumpus\nLarge(x) ::: x is large\nAmenable(x) ::: x is amenable\nNumpus(x) ::: x is a numpus\nVumpus(x) ::: x is a vumpus\nSour(x) ::: x is sour\nWumpus(x) ::: x is a wumpus\nShy(x) ::: x is shy\nTumpus(x) ::: x is a tumpus\nLiquid(x) ::: x is liquid\nRompus(x) ::: x is a rompus\nPremises:\n∀x (Yumpus(x) → Transparent(x)) ::: Each yumpus is transparent.\n∀x (Yumpus(x) → Zumpus(x)) ::: Yumpuses are zumpuses.\n∀x (Zumpus(x) → ¬Dull(x)) ::: Each zumpus is not dull.\n∀x (Zumpus(x) → Jompus(x)) ::: Every zumpus is a jompus.\n∀x (Jompus(x) → Hot(x)) ::: Every jompus is hot.\n∀x (Jompus(x) → Dumpus(x)) ::: Each jompus is a dumpus.\n∀x (Dumpus(x) → ¬Large(x)) ::: Each dumpus is not large.\n∀x (Impus(x) → Amenable(x)) ::: Every impus is amenable.\n∀x (Dumpus(x) → Numpus(x)) ::: Dumpuses are numpuses.\n∀x (Numpus(x) → ¬Amenable(x)) ::: Numpuses are not amenable.\n∀x (Numpus(x) → Vumpus(x)) ::: Every numpus is a vumpus.\n∀x (Vumpus(x) → Sour(x)) ::: Each vumpus is sour.\n∀x (Vumpus(x) → Wumpus(x)) ::: Vumpuses are wumpuses.\n∀x (Wumpus(x) → ¬Shy(x)) ::: Every wumpus is not shy.\n∀x (Wumpus(x) → Tumpus(x)) ::: Wumpuses are tumpuses.\n∀x (Tumpus(x) → ¬Liquid(x)) ::: Tumpuses are not liquid.\n∀x (Tumpus(x) → Rompus(x)) ::: Each tumpus is a rompus.\nYumpus(polly) ::: Polly is a yumpus.\nConclusion:\nAmenable(polly) ::: Polly is amenable.\n------"
    ]
  },
  {
    "id": "ProntoQA_290",
    "context": "Each wumpus is happy. Wumpuses are numpuses. Every numpus is not brown. Numpuses are tumpuses. Rompuses are not sweet. Each tumpus is amenable. Every tumpus is a jompus. Jompuses are earthy. Every jompus is a yumpus. Each yumpus is sweet. Each yumpus is a vumpus. Vumpuses are dull. Every vumpus is a zumpus. Every zumpus is hot. Every zumpus is a dumpus. Every dumpus is luminous. Dumpuses are impuses. Rex is a wumpus.",
    "question": "Is the following statement true or false? Rex is sweet.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nWumpus(x) ::: x is a wumpus\nHappy(x) ::: x is happy\nNumpus(x) ::: x is a numpus\nBrown(x) ::: x is brown\nTumpus(x) ::: x is a tumpus\nRompus(x) ::: x is a rompus\nSweet(x) ::: x is sweet\nAmenable(x) ::: x is amenable\nJompus(x) ::: x is a jompus\nEarthy(x) ::: x is earthy\nYumpus(x) ::: x is a yumpus\nVumpus(x) ::: x is a vumpus\nDull(x) ::: x is dull\nZumpus(x) ::: x is a zumpus\nHot(x) ::: x is hot\nDumpus(x) ::: x is a dumpus\nLuminous(x) ::: x is luminous\nImpus(x) ::: x is an impus\nPremises:\n∀x (Wumpus(x) → Happy(x)) ::: Each wumpus is happy.\n∀x (Numpus(x) → ¬Brown(x)) ::: Wumpuses are numpuses. Every numpus is not brown.\n∀x (Numpus(x) → Tumpus(x)) ::: Numpuses are tumpuses.\n∀x (Rompus(x) → ¬Sweet(x)) ::: Rompuses are not sweet.\n∀x (Tumpus(x) → Amenable(x)) ::: Each tumpus is amenable.\n∀x (Tumpus(x) → Jompus(x)) ::: Every tumpus is a jompus.\n∀x (Jompus(x) → Earthy(x)) ::: Jompuses are earthy.\n∀x (Jompus(x) → Yumpus(x)) ::: Every jompus is a yumpus.\n∀x (Yumpus(x) → Sweet(x)) ::: Each yumpus is sweet.\n∀x (Yumpus(x) → Vumpus(x)) ::: Each yumpus is a vumpus.\n∀x (Vumpus(x) → Dull(x)) ::: Vumpuses are dull.\n∀x (Vumpus(x) → Zumpus(x)) ::: Every vumpus is a zumpus.\n∀x (Zumpus(x) → Hot(x)) ::: Every zumpus is hot.\n∀x (Zumpus(x) → Dumpus(x)) ::: Every zumpus is a dumpus.\n∀x (Dumpus(x) → Luminous(x)) ::: Every dumpus is luminous.\n∀x (Dumpus(x) → Impus(x)) ::: Dumpuses are impuses.\nWumpus(rex) ::: Rex is a wumpus.\nConclusion:\nSweet(rex) ::: Rex is sweet.\n------"
    ]
  },
  {
    "id": "ProntoQA_291",
    "context": "Dumpuses are dull. Each dumpus is an impus. Every impus is large. Every numpus is not luminous. Every impus is a tumpus. Tumpuses are feisty. Each tumpus is a rompus. Rompuses are not cold. Rompuses are jompuses. Each jompus is sweet. Jompuses are yumpuses. Every yumpus is not angry. Every yumpus is a vumpus. Vumpuses are luminous. Every vumpus is a zumpus. Every zumpus is red. Zumpuses are wumpuses. Stella is a tumpus.",
    "question": "Is the following statement true or false? Stella is not luminous.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nDumpus(x) ::: x is a dumpus\nDull(x) ::: x is dull\nImpus(x) ::: x is an impus\nLarge(x) ::: x is large\nNumpus(x) ::: x is a numpus\nLuminous(x) ::: x is luminous\nTumpus(x) ::: x is a tumpus\nFeisty(x) ::: x is feisty\nRompus(x) ::: x is a rompus\nCold(x) ::: x is cold\nJompus(x) ::: x is a jompus\nSweet(x) ::: x is sweet\nYumpus(x) ::: x is a yumpus\nAngry(x) ::: x is angry\nVumpus(x) ::: x is a vumpus\nLuminous(x) ::: x is luminous\nZumpus(x) ::: x is a zumpus\nRed(x) ::: x is red\nWumpus(x) ::: x is a wumpus\nPremises:\n∀x (Dumpus(x) → Dull(x)) ::: Dumpuses are dull.\n∀x (Impus(x) → Large(x)) ::: Each impus is large.\n∀x (Numpus(x) → ¬Luminous(x)) ::: Every numpus is not luminous.\n∀x (Impus(x) → Tumpus(x)) ::: Every impus is a tumpus.\n∀x (Tumpus(x) → Feisty(x)) ::: Tumpuses are feisty.\n∀x (Tumpus(x) → Rompus(x)) ::: Each tumpus is a rompus.\n∀x (Rompus(x) → ¬Cold(x)) ::: Rompuses are not cold.\n∀x (Rompus(x) → Jompus(x)) ::: Rompuses are jompuses.\n∀x (Jompus(x) → Sweet(x)) ::: Each jompus is sweet.\n∀x (Jompus(x) → Yumpus(x)) ::: Jompuses are yumpuses.\n∀x (Yumpus(x) → ¬Angry(x)) ::: Every yumpus is not angry.\n∀x (Yumpus(x) → Vumpus(x)) ::: Every yumpus is a vumpus.\n∀x (Vumpus(x) → Luminous(x)) ::: Vumpuses are luminous.\n∀x (Vumpus(x) → Zumpus(x)) ::: Every vumpus is a zumpus.\n∀x (Zumpus(x) → Red(x)) ::: Every zumpus is red.\n∀x (Zumpus(x) → Wumpus(x)) ::: Zumpuses are wumpuses.\nTumpus(stella) ::: Stella is a tumpus.\nConclusion:\n¬Luminous(stella) ::: Stella is not luminous.\n------"
    ]
  },
  {
    "id": "ProntoQA_292",
    "context": "Zumpuses are not feisty. Every zumpus is a tumpus. Tumpuses are cold. Tumpuses are wumpuses. Each wumpus is not orange. Wumpuses are numpuses. Every numpus is not earthy. Every numpus is a vumpus. Dumpuses are not transparent. Every vumpus is transparent. Vumpuses are yumpuses. Fae is a zumpus.",
    "question": "Is the following statement true or false? Fae is transparent.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant.lpg\n------"
    ]
  },
  {
    "id": "ProntoQA_293",
    "context": "Each rompus is brown. Rompuses are dumpuses. Dumpuses are opaque. Each dumpus is a tumpus. Every tumpus is not mean. Each numpus is luminous. Every tumpus is a jompus. Every jompus is floral. Jompuses are impuses. Each impus is hot. Impuses are wumpuses. Every wumpus is dull. Wumpuses are yumpuses. Yumpuses are large. Yumpuses are vumpuses. Vumpuses are not luminous. Each vumpus is a zumpus. Sally is a jompus.",
    "question": "Is the following statement true or false? Sally is not luminous.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nRompus(x) ::: x is a rompus\nBrown(x) ::: x is brown\nDumpus(x) ::: x is a dumpus\nOpaque(x) ::: x is opaque\nTumpus(x) ::: x is a tumpus\nMean(x) ::: x is mean\nNumpus(x) ::: x is a numpus\nLuminous(x) ::: x is luminous\nJompus(x) ::: x is a jompus\nFloral(x) ::: x is floral\nImpus(x) ::: x is an impus\nHot(x) ::: x is hot\nWumpus(x) ::: x is a wumpus\nDull(x) ::: x is dull\nYumpus(x) ::: x is a yumpus\nLarge(x) ::: x is large\nVumpus(x) ::: x is a vumpus\nZumpus(x) ::: x is a zumpus\nPremises:\n∀x (Rompus(x) → Brown(x)) ::: Each rompus is brown.\n∀x (Rompus(x) → Dumpus(x)) ::: Rompuses are dumpuses.\n∀x (Dumpus(x) → Opaque(x)) ::: Dumpuses are opaque.\n∀x (Dumpus(x) → Tumpus(x)) ::: Each dumpus is a tumpus.\n∀x (Tumpus(x) → ¬Mean(x)) ::: Every tumpus is not mean.\n∀x (Numpus(x) → Luminous(x)) ::: Each numpus is luminous.\n∀x (Tumpus(x) → Jompus(x)) ::: Every tumpus is a jompus.\n∀x (Jompus(x) → Floral(x)) ::: Jompuses are floral.\n∀x (Impus(x) → Hot(x)) ::: Impuses are hot.\n∀x (Impus(x) → Wumpus(x)) ::: Impuses are wumpuses.\n∀x (Wumpus(x) → Dull(x)) ::: Wumpuses are dull.\n∀x (Wumpus(x) → Yumpus(x)) ::: Wumpuses are yumpuses.\n∀x (Yumpus(x) → Large(x)) ::: Yumpuses are large.\n∀x (Yumpus(x) → Vumpus(x)) ::: Yumpuses are vumpuses.\n∀x (Vumpus(x) → ¬Luminous(x)) ::: Vumpuses are not luminous.\n∀x (Vumpus(x) → Zumpus(x)) ::: Each vumpus is a zumpus.\nJompus(sally) ::: Sally is a jompus.\nConclusion:\n¬Luminous(sally) ::: Sally is not luminous.\n------"
    ]
  },
  {
    "id": "ProntoQA_294",
    "context": "Each vumpus is not brown. Vumpuses are dumpuses. Dumpuses are not small. Dumpuses are impuses. Each impus is bright. Impuses are numpuses. Each numpus is amenable. Each numpus is a rompus. Every rompus is earthy. Each jompus is not luminous. Rompuses are yumpuses. Yumpuses are shy. Yumpuses are tumpuses. Tumpuses are cold. Each tumpus is a wumpus. Each wumpus is luminous. Wumpuses are zumpuses. Polly is a numpus.",
    "question": "Is the following statement true or false? Polly is luminous.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nVumpus(x) ::: x is a vumpus\nBrown(x) ::: x is brown\nDumpus(x) ::: x is a dumpus\nSmall(x) ::: x is small\nImpus(x) ::: x is an impus\nBright(x) ::: x is bright\nNumpus(x) ::: x is a numpus\nAmenable(x) ::: x is amenable\nRompus(x) ::: x is a rompus\nEarthy(x) ::: x is earthy\nLuminous(x) ::: x is luminous\nJompus(x) ::: x is a jompus\nShy(x) ::: x is shy\nTumpus(x) ::: x is a tumpus\nCold(x) ::: x is cold\nWumpus(x) ::: x is a wumpus\nZumpus(x) ::: x is a zumpus\nPremises:\n∀x (Vumpus(x) → ¬Brown(x)) ::: Each vumpus is not brown.\n∀x (Vumpus(x) → Dumpus(x)) ::: Vumpuses are dumpuses.\n∀x (Dumpus(x) → ¬Small(x)) ::: Dumpuses are not small.\n∀x (Dumpus(x) → Impus(x)) ::: Dumpuses are impuses.\n∀x (Impus(x) → Bright(x)) ::: Each impus is bright.\n∀x (Impus(x) → Numpus(x)) ::: Impuses are numpuses.\n∀x (Numpus(x) → Amenable(x)) ::: Each numpus is amenable.\n∀x (Numpus(x) → Rompus(x)) ::: Each numpus is a rompus.\n∀x (Rompus(x) → Earthy(x)) ::: Every rompus is earthy.\n∀x (Jompus(x) → ¬Luminous(x)) ::: Each jompus is not luminous.\n∀x (Rompus(x) → Yumpus(x)) ::: Rompuses are yumpuses.\n∀x (Yumpus(x) → Shy(x)) ::: Yumpuses are shy.\n∀x (Yumpus(x) → Tumpus(x)) ::: Yumpuses are tumpuses.\n∀x (Tumpus(x) → Cold(x)) ::: Tumpuses are cold.\n∀x (Tumpus(x) → Wumpus(x)) ::: Each tumpus is a wumpus.\n∀x (Wumpus(x) → Luminous(x)) ::: Wumpuses are luminous.\n∀x (Wumpus(x) → Zumpus(x)) ::: Wumpuses are zumpuses.\nNumpus(polly) ::: Polly is a numpus.\nConclusion:\nLuminous(polly) ::: Polly is luminous.\n------"
    ]
  },
  {
    "id": "ProntoQA_295",
    "context": "Yumpuses are not liquid. Every tumpus is not kind. Each tumpus is a zumpus. Each zumpus is feisty. Each zumpus is an impus. Each impus is large. Impuses are rompuses. Each rompus is not opaque. Every rompus is a jompus. Every jompus is liquid. Every jompus is a wumpus. Every wumpus is bright. Each wumpus is a numpus. Each numpus is not fruity. Numpuses are vumpuses. Sally is a tumpus.",
    "question": "Is the following statement true or false? Sally is liquid.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nYumpus(x) ::: x is a yumpus\nLiquid(x) ::: x is liquid\nTumpus(x) ::: x is a tumpus\nKind(x) ::: x is kind\nZumpus(x) ::: x is a zumpus\nFeisty(x) ::: x is feisty\nImpus(x) ::: x is an impus\nLarge(x) ::: x is large\nRompus(x) ::: x is a rompus\nOpaque(x) ::: x is opaque\nJompus(x) ::: x is a jompus\nLiquid(x) ::: x is liquid\nWumpus(x) ::: x is a wumpus\nBright(x) ::: x is bright\nNumpus(x) ::: x is a numpus\nFruity(x) ::: x is fruity\nVumpus(x) ::: x is a vumpus\nPremises:\n∀x (Yumpus(x) → ¬Liquid(x)) ::: Yumpuses are not liquid.\n∀x (Tumpus(x) → ¬Kind(x)) ::: Every tumpus is not kind.\n∀x (Tumpus(x) → Zumpus(x)) ::: Each tumpus is a zumpus.\n∀x (Zumpus(x) → Feisty(x)) ::: Each zumpus is feisty.\n∀x (Zumpus(x) → Impus(x)) ::: Each zumpus is an impus.\n∀x (Impus(x) → Large(x)) ::: Each impus is large.\n∀x (Impus(x) → Rompus(x)) ::: Impuses are rompuses.\n∀x (Rompus(x) → ¬Opaque(x)) ::: Every rompus is not opaque.\n∀x (Rompus(x) → Jompus(x)) ::: Every rompus is a jompus.\n∀x (Jompus(x) → Liquid(x)) ::: Every jompus is liquid.\n∀x (Jompus(x) → Wumpus(x)) ::: Every jompus is a wumpus.\n∀x (Wumpus(x) → Bright(x)) ::: Every wumpus is bright.\n∀x (Wumpus(x) → Numpus(x)) ::: Each wumpus is a numpus.\n∀x (Numpus(x) → ¬Fruity(x)) ::: Each numpus is not fruity.\n∀x (Numpus(x) → Vumpus(x)) ::: Numpuses are vumpuses.\nTumpus(sally) ::: Sally is a tumpus.\nConclusion:\nLiquid(sally) ::: Sally is liquid.\n------"
    ]
  },
  {
    "id": "ProntoQA_296",
    "context": "Every numpus is mean. Each numpus is a jompus. Jompuses are bright. Jompuses are vumpuses. Vumpuses are floral. Every vumpus is a yumpus. Yumpuses are not spicy. Each yumpus is a zumpus. Each zumpus is small. Zumpuses are rompuses. Rompuses are not happy. Rompuses are wumpuses. Each dumpus is not small. Each wumpus is red. Wumpuses are tumpuses. Tumpuses are not metallic. Tumpuses are impuses. Wren is a numpus.",
    "question": "Is the following statement true or false? Wren is small.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nNumpus(x) ::: x is a numpus\nMean(x) ::: x is mean\nJompus(x) ::: x is a jompus\nBright(x) ::: x is bright\nVumpus(x) ::: x is a vumpus\nFloral(x) ::: x is floral\nYumpus(x) ::: x is a yumpus\nSpicy(x) ::: x is spicy\nZumpus(x) ::: x is a zumpus\nSmall(x) ::: x is small\nRompus(x) ::: x is a rompus\nHappy(x) ::: x is happy\nWumpus(x) ::: x is a wumpus\nRed(x) ::: x is red\nTumpus(x) ::: x is a tumpus\nMetallic(x) ::: x is metallic\nImpus(x) ::: x is an impus\nPremises:\n∀x (Numpus(x) → Mean(x)) ::: Every numpus is mean.\n∀x (Numpus(x) → Jompus(x)) ::: Each numpus is a jompus.\n∀x (Jompus(x) → Bright(x)) ::: Jompuses are bright.\n∀x (Vumpus(x) → Floral(x)) ::: Vumpuses are floral.\n∀x (Vumpus(x) → Yumpus(x)) ::: Every vumpus is a yumpus.\n∀x (Yumpus(x) → ¬Spicy(x)) ::: Yumpuses are not spicy.\n∀x (Yumpus(x) → Zumpus(x)) ::: Each yumpus is a zumpus.\n∀x (Zumpus(x) → Small(x)) ::: Each zumpus is small.\n∀x (Zumpus(x) → Rompus(x)) ::: Zumpuses are rompuses.\n∀x (Rompus(x) → ¬Happy(x)) ::: Rompuses are not happy.\n∀x (Rompus(x) → Wumpus(x)) ::: Rompuses are wumpuses.\n∀x (Dumpus(x) → ¬Small(x)) ::: Each dumpus is not small.\n∀x (Wumpus(x) → Red(x)) ::: Wumpuses are red.\n∀x (Wumpus(x) → Tumpus(x)) ::: Wumpuses are tumpuses.\n∀x (Tumpus(x) → ¬Metallic(x)) ::: Tumpuses are not metallic.\n∀x (Tumpus(x) → Impus(x)) ::: Tumpuses are impuses.\nNumpus(wren) ::: Wren is a numpus.\nConclusion:\nSmall(wren) ::: Wren is small.\n------"
    ]
  },
  {
    "id": "ProntoQA_297",
    "context": "Wumpuses are transparent. Wumpuses are vumpuses. Vumpuses are mean. Vumpuses are dumpuses. Every dumpus is brown. Each dumpus is an impus. Impuses are not wooden. Rompuses are not sour. Each impus is a tumpus. Tumpuses are large. Every tumpus is a yumpus. Every yumpus is sour. Yumpuses are numpuses. Numpuses are nervous. Every numpus is a zumpus. Zumpuses are dull. Every zumpus is a jompus. Sam is a vumpus.",
    "question": "Is the following statement true or false? Sam is sour.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nWumpus(x) ::: x is a wumpus\nTransparent(x) ::: x is transparent\nVumpus(x) ::: x is a vumpus\nMean(x) ::: x is mean\nDumpus(x) ::: x is a dumpus\nBrown(x) ::: x is brown\nImpus(x) ::: x is an impus\nWooden(x) ::: x is wooden\nRompus(x) ::: x is a rompus\nSour(x) ::: x is sour\nTumpus(x) ::: x is a tumpus\nLarge(x) ::: x is large\nYumpus(x) ::: x is a yumpus\nSour(x) ::: x is sour\nNumpus(x) ::: x is a numpus\nNervous(x) ::: x is nervous\nZumpus(x) ::: x is a zumpus\nDull(x) ::: x is dull\nJompus(x) ::: x is a jompus\nPremises:\n∀x (Wumpus(x) → Transparent(x)) ::: Wumpuses are transparent.\n∀x (Wumpus(x) → Vumpus(x)) ::: Wumpuses are vumpuses.\n∀x (Vumpus(x) → Mean(x)) ::: Vumpuses are mean.\n∀x (Vumpus(x) → Dumpus(x)) ::: Vumpuses are dumpuses.\n∀x (Dumpus(x) → Brown(x)) ::: Every dumpus is brown.\n∀x (Dumpus(x) → Impus(x)) ::: Each dumpus is an impus.\n∀x (Impus(x) → ¬Wooden(x)) ::: Impuses are not wooden.\n∀x (Rompus(x) → ¬Sour(x)) ::: Rompuses are not sour.\n∀x (Impus(x) → Tumpus(x)) ::: Each impus is a tumpus.\n∀x (Tumpus(x) → Large(x)) ::: Tumpuses are large.\n∀x (Tumpus(x) → Yumpus(x)) ::: Every tumpus is a yumpus.\n∀x (Yumpus(x) → Sour(x)) ::: Yumpuses are sour.\n∀x (Yumpus(x) → Numpus(x)) ::: Yumpuses are numpuses.\n∀x (Numpus(x) → Nervous(x)) ::: Numpuses are nervous.\n∀x (Numpus(x) → Zumpus(x)) ::: Every numpus is a zumpus.\n∀x (Zumpus(x) → Dull(x)) ::: Zumpuses are dull.\n∀x (Zumpus(x) → Jompus(x)) ::: Every zumpus is a jompus.\nVumpus(sam) ::: Sam is a vumpus.\nConclusion:\nSour(sam) ::: Sam is sour.\n------"
    ]
  },
  {
    "id": "ProntoQA_298",
    "context": "Yumpuses are cold. Every yumpus is a dumpus. Every dumpus is brown. Dumpuses are zumpuses. Each zumpus is opaque. Zumpuses are tumpuses. Tumpuses are sweet. Tumpuses are numpuses. Numpuses are not floral. Each rompus is happy. Each numpus is a vumpus. Every vumpus is aggressive. Each vumpus is a jompus. Jompuses are not happy. Jompuses are impuses. Impuses are not wooden. Impuses are wumpuses. Sally is a zumpus.",
    "question": "Is the following statement true or false? Sally is not happy.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nYumpus(x) ::: x is a yumpus\nCold(x) ::: x is cold\nDumpus(x) ::: x is a dumpus\nBrown(x) ::: x is brown\nZumpus(x) ::: x is a zumpus\nOpaque(x) ::: x is opaque\nTumpus(x) ::: x is a tumpus\nSweet(x) ::: x is sweet\nNumpus(x) ::: x is a numpus\nFloral(x) ::: x is floral\nRompus(x) ::: x is a rompus\nHappy(x) ::: x is happy\nVumpus(x) ::: x is a vumpus\nAggressive(x) ::: x is aggressive\nJompus(x) ::: x is a jompus\nImpus(x) ::: x is an impus\nWooden(x) ::: x is wooden\nWumpus(x) ::: x is a wumpus\nPremises:\n∀x (Yumpus(x) → Cold(x)) ::: Yumpuses are cold.\n∀x (Yumpus(x) → Dumpus(x)) ::: Every yumpus is a dumpus.\n∀x (Dumpus(x) → Brown(x)) ::: Every dumpus is brown.\n∀x (Dumpus(x) → Zumpus(x)) ::: Dumpuses are zumpuses.\n∀x (Zumpus(x) → Opaque(x)) ::: Each zumpus is opaque.\n∀x (Zumpus(x) → Tumpus(x)) ::: Zumpuses are tumpuses.\n∀x (Tumpus(x) → Sweet(x)) ::: Tumpuses are sweet.\n∀x (Tumpus(x) → Numpus(x)) ::: Tumpuses are numpuses.\n∀x (Numpus(x) → ¬Floral(x)) ::: Numpuses are not floral.\n∀x (Rompus(x) → Happy(x)) ::: Each rompus is happy.\n∀x (Numpus(x) → Vumpus(x)) ::: Each numpus is a vumpus.\n∀x (Vumpus(x) → Aggressive(x)) ::: Every vumpus is aggressive.\n∀x (Vumpus(x) → Jompus(x)) ::: Each vumpus is a jompus.\n∀x (Jompus(x) → ¬Happy(x)) ::: Jompuses are not happy.\n∀x (Jompus(x) → Impus(x)) ::: Jompuses are impuses.\n∀x (Impus(x) → ¬Wooden(x)) ::: Impuses are not wooden.\n∀x (Impus(x) → Wumpus(x)) ::: Impuses are wumpuses.\nZumpus(sally) ::: Sally is a zumpus.\nConclusion:\n¬Happy(sally) ::: Sally is not happy.\n------"
    ]
  },
  {
    "id": "ProntoQA_299",
    "context": "Every zumpus is luminous. Each zumpus is a numpus. Every numpus is not small. Numpuses are impuses. Every impus is bright. Impuses are vumpuses. Every vumpus is angry. Vumpuses are jompuses. Jompuses are not transparent. Jompuses are dumpuses. Dumpuses are cold. Each dumpus is a wumpus. Wumpuses are orange. Each yumpus is not cold. Every wumpus is a tumpus. Tumpuses are spicy. Tumpuses are rompuses. Polly is a numpus.",
    "question": "Is the following statement true or false? Polly is cold.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nZumpus(x) ::: x is a zumpus\nLuminous(x) ::: x is luminous\nNumpus(x) ::: x is a numpus\nSmall(x) ::: x is small\nImpus(x) ::: x is an impus\nBright(x) ::: x is bright\nVumpus(x) ::: x is a vumpus\nAngry(x) ::: x is angry\nJompus(x) ::: x is a jompus\nTransparent(x) ::: x is transparent\nDumpus(x) ::: x is a dumpus\nCold(x) ::: x is cold\nWumpus(x) ::: x is a wumpus\nOrange(x) ::: x is orange\nTumpus(x) ::: x is a tumpus\nSpicy(x) ::: x is spicy\nRompus(x) ::: x is a rompus\nPremises:\n∀x (Zumpus(x) → Luminous(x)) ::: Every zumpus is luminous.\n∀x (Zumpus(x) → Numpus(x)) ::: Each zumpus is a numpus.\n∀x (Numpus(x) → ¬Small(x)) ::: Every numpus is not small.\n∀x (Impus(x) → Bright(x)) ::: Numpuses are impuses.\n∀x (Impus(x) → Vumpus(x)) ::: Every impus is a vumpus.\n∀x (Vumpus(x) → Angry(x)) ::: Vumpuses are angry.\n∀x (Vumpus(x) → Jompus(x)) ::: Vumpuses are jompuses.\n∀x (Jompus(x) → ¬Transparent(x)) ::: Jompuses are not transparent.\n∀x (Jompus(x) → Dumpus(x)) ::: Jompuses are dumpuses.\n∀x (Dumpus(x) → Cold(x)) ::: Dumpuses are cold.\n∀x (Dumpus(x) → Wumpus(x)) ::: Each dumpus is a wumpus.\n∀x (Wumpus(x) → Orange(x)) ::: Wumpuses are orange.\n∀x (Yumpus(x) → ¬Cold(x)) ::: Each yumpus is not cold.\n∀x (Wumpus(x) → Tumpus(x)) ::: Every wumpus is a tumpus.\n∀x (Tumpus(x) → Spicy(x)) ::: Tumpuses are spicy.\n∀x (Tumpus(x) → Rompus(x)) ::: Tumpuses are rompuses.\nNumpus(polly) ::: Polly is a numpus.\nConclusion:\nCold(polly) ::: Polly is cold.\n------"
    ]
  },
  {
    "id": "ProntoQA_300",
    "context": "Each tumpus is dull. Every tumpus is a vumpus. Vumpuses are not shy. Every vumpus is a numpus. Numpuses are not small. Each numpus is a wumpus. Each wumpus is blue. Every wumpus is a yumpus. Yumpuses are not mean. Every yumpus is a rompus. Rompuses are transparent. Rompuses are dumpuses. Every dumpus is fruity. Dumpuses are zumpuses. Zumpuses are not temperate. Impuses are temperate. Zumpuses are jompuses. Sam is a wumpus.",
    "question": "Is the following statement true or false? Sam is temperate.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nTumpus(x) ::: x is a tumpus\nDull(x) ::: x is dull\nVumpus(x) ::: x is a vumpus\nShy(x) ::: x is shy\nNumpus(x) ::: x is a numpus\nSmall(x) ::: x is small\nWumpus(x) ::: x is a wumpus\nBlue(x) ::: x is blue\nYumpus(x) ::: x is a yumpus\nMean(x) ::: x is mean\nRompus(x) ::: x is a rompus\nTransparent(x) ::: x is transparent\nDumpus(x) ::: x is a dumpus\nFruity(x) ::: x is fruity\nZumpus(x) ::: x is a zumpus\nTemperate(x) ::: x is temperate\nJompus(x) ::: x is a jompus\nPremises:\n∀x (Tumpus(x) → Dull(x)) ::: Each tumpus is dull.\n∀x (Tumpus(x) → Vumpus(x)) ::: Every tumpus is a vumpus.\n∀x (Vumpus(x) → ¬Shy(x)) ::: Vumpuses are not shy.\n∀x (Vumpus(x) → Numpus(x)) ::: Every vumpus is a numpus.\n∀x (Numpus(x) → ¬Small(x)) ::: Numpuses are not small.\n∀x (Numpus(x) → Wumpus(x)) ::: Each numpus is a wumpus.\n∀x (Wumpus(x) → Blue(x)) ::: Every wumpus is blue.\n∀x (Wumpus(x) → Yumpus(x)) ::: Every wumpus is a yumpus.\n∀x (Yumpus(x) → ¬Mean(x)) ::: Yumpuses are not mean.\n∀x (Yumpus(x) → Rompus(x)) ::: Every yumpus is a rompus.\n∀x (Rompus(x) → Transparent(x)) ::: Rompuses are transparent.\n∀x (Rompus(x) → Dumpus(x)) ::: Rompuses are dumpuses.\n∀x (Dumpus(x) → Fruity(x)) ::: Every dumpus is fruity.\n∀x (Dumpus(x) → Zumpus(x)) ::: Dumpuses are zumpuses.\n∀x (Zumpus(x) → ¬Temperate(x)) ::: Zumpuses are not temperate.\n∀x (Impus(x) → Temperate(x)) ::: Impuses are temperate.\n∀x (Zumpus(x) → Jompus(x)) ::: Zumpuses are jompuses.\nWumpus(sam) ::: Sam is a wumpus.\nConclusion:\nTemperate(sam) ::: Sam is temperate.\n------"
    ]
  },
  {
    "id": "ProntoQA_301",
    "context": "Each zumpus is bitter. Zumpuses are vumpuses. Every jompus is not small. Every vumpus is orange. Vumpuses are tumpuses. Tumpuses are amenable. Each tumpus is a numpus. Numpuses are shy. Numpuses are yumpuses. Yumpuses are small. Yumpuses are wumpuses. Max is a zumpus.",
    "question": "Is the following statement true or false? Max is small.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant.lpg\n------"
    ]
  },
  {
    "id": "ProntoQA_302",
    "context": "Zumpuses are orange. Every zumpus is a wumpus. Every wumpus is metallic. Wumpuses are rompuses. Rompuses are hot. Each rompus is a dumpus. Dumpuses are floral. Dumpuses are numpuses. Numpuses are bright. Every numpus is an impus. Every impus is feisty. Every impus is a vumpus. Each vumpus is transparent. Vumpuses are yumpuses. Jompuses are large. Every yumpus is not large. Every yumpus is a tumpus. Alex is a dumpus.",
    "question": "Is the following statement true or false? Alex is not large.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nZumpus(x) ::: x is a zumpus\nOrange(x) ::: x is orange\nWumpus(x) ::: x is a wumpus\nMetallic(x) ::: x is metallic\nRompus(x) ::: x is a rompus\nHot(x) ::: x is hot\nDumpus(x) ::: x is a dumpus\nFloral(x) ::: x is floral\nNumpus(x) ::: x is a numpus\nBright(x) ::: x is bright\nImpus(x) ::: x is an impus\nFeisty(x) ::: x is feisty\nVumpus(x) ::: x is a vumpus\nTransparent(x) ::: x is transparent\nYumpus(x) ::: x is a yumpus\nLarge(x) ::: x is large\nTumpus(x) ::: x is a tumpus\nPremises:\n∀x (Zumpus(x) → Orange(x)) ::: Zumpuses are orange.\n∀x (Zumpus(x) → Wumpus(x)) ::: Every zumpus is a wumpus.\n∀x (Wumpus(x) → Metallic(x)) ::: Every wumpus is metallic.\n∀x (Rompus(x) → Wumpus(x)) ::: Rompuses are wumpuses.\n∀x (Wumpus(x) → Hot(x)) ::: Wumpuses are hot.\n∀x (Rompus(x) → Dumpus(x)) ::: Each rompus is a dumpus.\n∀x (Dumpus(x) → Floral(x)) ::: Dumpuses are floral.\n∀x (Dumpus(x) → Numpus(x)) ::: Dumpuses are numpuses.\n∀x (Numpus(x) → Bright(x)) ::: Numpuses are bright.\n∀x (Numpus(x) → Impus(x)) ::: Every numpus is an impus.\n∀x (Impus(x) → Feisty(x)) ::: Every impus is feisty.\n∀x (Impus(x) → Vumpus(x)) ::: Every impus is a vumpus.\n∀x (Vumpus(x) → Transparent(x)) ::: Each vumpus is transparent.\n∀x (Vumpus(x) → Yumpus(x)) ::: Vumpuses are yumpuses.\n∀x (Jompus(x) → Large(x)) ::: Jompuses are large.\n∀x (Yumpus(x) → ¬Large(x)) ::: Every yumpus is not large.\n∀x (Yumpus(x) → Tumpus(x)) ::: Every yumpus is a tumpus.\nDumpus(alex) ::: Alex is a dumpus.\nConclusion:\n¬Large(alex) ::: Alex is not large.\n------"
    ]
  },
  {
    "id": "ProntoQA_303",
    "context": "Wumpuses are wooden. Wumpuses are dumpuses. Dumpuses are brown. Dumpuses are numpuses. Numpuses are opaque. Numpuses are vumpuses. Each vumpus is sour. Vumpuses are yumpuses. Yumpuses are small. Every yumpus is a rompus. Each rompus is earthy. Rompuses are impuses. Each impus is not cold. Zumpuses are cold. Every impus is a jompus. Alex is a numpus.",
    "question": "Is the following statement true or false? Alex is cold.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant.lpg\n------"
    ]
  },
  {
    "id": "ProntoQA_304",
    "context": "Wumpuses are amenable. Every numpus is sweet. Each numpus is a jompus. Each jompus is not hot. Jompuses are vumpuses. Vumpuses are red. Each vumpus is a zumpus. Each zumpus is opaque. Each zumpus is an impus. Every impus is not metallic. Every impus is a yumpus. Every yumpus is large. Every yumpus is a tumpus. Tumpuses are not amenable. Tumpuses are dumpuses. Dumpuses are shy. Dumpuses are rompuses. Polly is a vumpus.",
    "question": "Is the following statement true or false? Polly is not amenable.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nWumpus(x) ::: x is a wumpus\nAmenable(x) ::: x is amenable\nNumpus(x) ::: x is a numpus\nSweet(x) ::: x is sweet\nJompus(x) ::: x is a jompus\nHot(x) ::: x is hot\nVumpus(x) ::: x is a vumpus\nRed(x) ::: x is red\nZumpus(x) ::: x is a zumpus\nOpaque(x) ::: x is opaque\nImpus(x) ::: x is an impus\nMetallic(x) ::: x is metallic\nYumpus(x) ::: x is a yumpus\nLarge(x) ::: x is large\nTumpus(x) ::: x is a tumpus\nAmenable(x) ::: x is amenable\nDumpus(x) ::: x is a dumpus\nShy(x) ::: x is shy\nRompus(x) ::: x is a rompus\nPremises:\n∀x (Wumpus(x) → Amenable(x)) ::: Wumpuses are amenable.\n∀x (Numpus(x) → Sweet(x)) ::: Every numpus is sweet.\n∀x (Numpus(x) → Jompus(x)) ::: Each numpus is a jompus.\n∀x (Jompus(x) → ¬Hot(x)) ::: Each jompus is not hot.\n∀x (Jompus(x) → Vumpus(x)) ::: Jompuses are vumpuses.\n∀x (Vumpus(x) → Red(x)) ::: Vumpuses are red.\n∀x (Vumpus(x) → Zumpus(x)) ::: Each vumpus is a zumpus.\n∀x (Zumpus(x) → Opaque(x)) ::: Each zumpus is opaque.\n∀x (Zumpus(x) → Impus(x)) ::: Each zumpus is an impus.\n∀x (Impus(x) → ¬Metallic(x)) ::: Every impus is not metallic.\n∀x (Impus(x) → Yumpus(x)) ::: Every impus is a yumpus.\n∀x (Yumpus(x) → Large(x)) ::: Every yumpus is large.\n∀x (Yumpus(x) → Tumpus(x)) ::: Every yumpus is a tumpus.\n∀x (Tumpus(x) → ¬Amenable(x)) ::: Tumpuses are not amenable.\n∀x (Tumpus(x) → Dumpus(x)) ::: Tumpuses are dumpuses.\n∀x (Dumpus(x) → Shy(x)) ::: Dumpuses are shy.\n∀x (Dumpus(x) → Rompus(x)) ::: Dumpuses are rompuses.\nVumpus(polly) ::: Polly is a vumpus.\nConclusion:\n¬Amenable(polly) ::: Polly is not amenable.\n------"
    ]
  },
  {
    "id": "ProntoQA_305",
    "context": "Every jompus is not earthy. Each rompus is transparent. Rompuses are impuses. Every impus is feisty. Every impus is a tumpus. Every tumpus is amenable. Tumpuses are vumpuses. Vumpuses are metallic. Each vumpus is a numpus. Each numpus is earthy. Every numpus is a zumpus. Alex is a rompus.",
    "question": "Is the following statement true or false? Alex is earthy.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant.lpg\n------"
    ]
  },
  {
    "id": "ProntoQA_306",
    "context": "Impuses are hot. Impuses are tumpuses. Each dumpus is not aggressive. Every tumpus is blue. Tumpuses are vumpuses. Every vumpus is large. Vumpuses are wumpuses. Wumpuses are sour. Every wumpus is a yumpus. Each yumpus is opaque. Each yumpus is a numpus. Numpuses are floral. Numpuses are zumpuses. Zumpuses are not bright. Each zumpus is a rompus. Each rompus is aggressive. Every rompus is a jompus. Max is a wumpus.",
    "question": "Is the following statement true or false? Max is aggressive.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nImpus(x) ::: x is an impus\nHot(x) ::: x is hot\nTumpus(x) ::: x is a tumpus\nDumpus(x) ::: x is a dumpus\nAggressive(x) ::: x is aggressive\nBlue(x) ::: x is blue\nVumpus(x) ::: x is a vumpus\nLarge(x) ::: x is large\nWumpus(x) ::: x is a wumpus\nSour(x) ::: x is sour\nYumpus(x) ::: x is a yumpus\nOpaque(x) ::: x is opaque\nNumpus(x) ::: x is a numpus\nFloral(x) ::: x is floral\nZumpus(x) ::: x is a zumpus\nBright(x) ::: x is bright\nRompus(x) ::: x is a rompus\nAggressive(x) ::: x is aggressive\nJompus(x) ::: x is a jompus\nPremises:\n∀x (Impus(x) → Hot(x)) ::: Impuses are hot.\n∀x (Impus(x) → Tumpus(x)) ::: Impuses are tumpuses.\n∀x (Dumpus(x) → ¬Aggressive(x)) ::: Each dumpus is not aggressive.\n∀x (Tumpus(x) → Blue(x)) ::: Every tumpus is blue.\n∀x (Tumpus(x) → Vumpus(x)) ::: Tumpuses are vumpuses.\n∀x (Vumpus(x) → Large(x)) ::: Every vumpus is large.\n∀x (Vumpus(x) → Wumpus(x)) ::: Vumpuses are wumpuses.\n∀x (Wumpus(x) → Sour(x)) ::: Wumpuses are sour.\n∀x (Wumpus(x) → Yumpus(x)) ::: Every wumpus is a yumpus.\n∀x (Yumpus(x) → Opaque(x)) ::: Each yumpus is opaque.\n∀x (Yumpus(x) → Numpus(x)) ::: Each yumpus is a numpus.\n∀x (Numpus(x) → Floral(x)) ::: Numpuses are floral.\n∀x (Numpus(x) → Zumpus(x)) ::: Numpuses are zumpuses.\n∀x (Zumpus(x) → ¬Bright(x)) ::: Zumpuses are not bright.\n∀x (Zumpus(x) → Rompus(x)) ::: Each zumpus is a rompus.\n∀x (Rompus(x) → Aggressive(x)) ::: Each rompus is aggressive.\n∀x (Rompus(x) → Jompus(x)) ::: Every rompus is a jompus.\nWumpus(max) ::: Max is a wumpus.\nConclusion:\nAggressive(max) ::: Max is aggressive.\n------"
    ]
  },
  {
    "id": "ProntoQA_307",
    "context": "Vumpuses are not opaque. Vumpuses are jompuses. Each jompus is large. Jompuses are yumpuses. Every yumpus is not fruity. Each yumpus is a dumpus. Dumpuses are dull. Dumpuses are zumpuses. Each zumpus is not angry. Each zumpus is an impus. Impuses are metallic. Each impus is a tumpus. Every wumpus is not hot. Each tumpus is hot. Tumpuses are rompuses. Rompuses are not nervous. Rompuses are numpuses. Stella is a yumpus.",
    "question": "Is the following statement true or false? Stella is not hot.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nVumpus(x) ::: x is a vumpus\nOpaque(x) ::: x is opaque\nJompus(x) ::: x is a jompus\nLarge(x) ::: x is large\nYumpus(x) ::: x is a yumpus\nFruity(x) ::: x is fruity\nDumpus(x) ::: x is a dumpus\nDull(x) ::: x is dull\nZumpus(x) ::: x is a zumpus\nAngry(x) ::: x is angry\nImpus(x) ::: x is an impus\nMetallic(x) ::: x is metallic\nTumpus(x) ::: x is a tumpus\nHot(x) ::: x is hot\nRompus(x) ::: x is a rompus\nNervous(x) ::: x is nervous\nNumpus(x) ::: x is a numpus\nStella(x) ::: x is Stella\nPremises:\n∀x (Vumpus(x) → ¬Opaque(x)) ::: Vumpuses are not opaque.\n∀x (Jompus(x) → Large(x)) ::: Jompuses are large.\n∀x (Yumpus(x) → ¬Fruity(x)) ::: Every yumpus is not fruity.\n∀x (Yumpus(x) → Dumpus(x)) ::: Every yumpus is a dumpus.\n∀x (Dumpus(x) → Dull(x)) ::: Dumpuses are dull.\n∀x (Dumpus(x) → Zumpus(x)) ::: Dumpuses are zumpuses.\n∀x (Zumpus(x) → ¬Angry(x)) ::: Each zumpus is not angry.\n∀x (Zumpus(x) → Impus(x)) ::: Each zumpus is an impus.\n∀x (Impus(x) → Metallic(x)) ::: Impuses are metallic.\n∀x (Impus(x) → Tumpus(x)) ::: Each impus is a tumpus.\n∀x (Wumpus(x) → ¬Hot(x)) ::: Every wumpus is not hot.\n∀x (Tumpus(x) → Hot(x)) ::: Each tumpus is hot.\n∀x (Tumpus(x) → Rompus(x)) ::: Tumpuses are rompuses.\n∀x (Rompus(x) → ¬Nervous(x)) ::: Rompuses are not nervous.\n∀x (Rompus(x) → Numpus(x)) ::: Rompuses are numpuses.\nYumpus(stella) ::: Stella is a yumpus.\nConclusion:\n¬Hot(stella) ::: Stella is not hot.\n------"
    ]
  },
  {
    "id": "ProntoQA_308",
    "context": "Wumpuses are not liquid. Every wumpus is a zumpus. Every zumpus is not floral. Each zumpus is an impus. Impuses are bright. Each impus is a numpus. Every numpus is mean. Numpuses are jompuses. Jompuses are not orange. Each jompus is a yumpus. Each yumpus is cold. Every yumpus is a vumpus. Vumpuses are small. Vumpuses are dumpuses. Each dumpus is not transparent. Each tumpus is orange. Dumpuses are rompuses. Alex is a wumpus.",
    "question": "Is the following statement true or false? Alex is not orange.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nWumpus(x) ::: x is a wumpus\nLiquid(x) ::: x is liquid\nZumpus(x) ::: x is a zumpus\nFloral(x) ::: x is floral\nImpus(x) ::: x is an impus\nBright(x) ::: x is bright\nNumpus(x) ::: x is a numpus\nMean(x) ::: x is mean\nJompus(x) ::: x is a jompus\nOrange(x) ::: x is orange\nYumpus(x) ::: x is a yumpus\nCold(x) ::: x is cold\nVumpus(x) ::: x is a vumpus\nSmall(x) ::: x is small\nDumpus(x) ::: x is a dumpus\nRompus(x) ::: x is a rompus\nPremises:\n∀x (Wumpus(x) → ¬Liquid(x)) ::: Wumpuses are not liquid.\n∀x (Wumpus(x) → Zumpus(x)) ::: Every wumpus is a zumpus.\n∀x (Zumpus(x) → ¬Floral(x)) ::: Every zumpus is not floral.\n∀x (Zumpus(x) → Impus(x)) ::: Each zumpus is an impus.\n∀x (Impus(x) → Bright(x)) ::: Impuses are bright.\n∀x (Impus(x) → Numpus(x)) ::: Each impus is a numpus.\n∀x (Numpus(x) → Mean(x)) ::: Every numpus is mean.\n∀x (Numpus(x) → Jompus(x)) ::: Numpuses are jompuses.\n∀x (Jompus(x) → ¬Orange(x)) ::: Jompuses are not orange.\n∀x (Jompus(x) → Yumpus(x)) ::: Each jompus is a yumpus.\n∀x (Yumpus(x) → Cold(x)) ::: Each yumpus is cold.\n∀x (Yumpus(x) → Vumpus(x)) ::: Every yumpus is a vumpus.\n∀x (Vumpus(x) → Small(x)) ::: Vumpuses are small.\n∀x (Vumpus(x) → Dumpus(x)) ::: Vumpuses are dumpuses.\n∀x (Dumpus(x) → ¬Transparent(x)) ::: Each dumpus is not transparent.\n∀x (Tumpus(x) → Orange(x)) ::: Each tumpus is orange.\n∀x (Dumpus(x) → Rompus(x)) ::: Dumpuses are rompuses.\nWumpus(alex) ::: Alex is a wumpus.\nConclusion:\n¬Orange(alex) ::: Alex is not orange.\n------"
    ]
  },
  {
    "id": "ProntoQA_309",
    "context": "Zumpuses are cold. Each zumpus is a wumpus. Each wumpus is dull. Each wumpus is a vumpus. Every vumpus is kind. Each vumpus is a dumpus. Every dumpus is earthy. Dumpuses are yumpuses. Every yumpus is nervous. Each yumpus is a numpus. Each numpus is opaque. Every numpus is a tumpus. Jompuses are not large. Tumpuses are sweet. Tumpuses are rompuses. Each rompus is large. Rompuses are impuses. Wren is a dumpus.",
    "question": "Is the following statement true or false? Wren is not large.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nZumpus(x) ::: x is a zumpus\nCold(x) ::: x is cold\nWumpus(x) ::: x is a wumpus\nDull(x) ::: x is dull\nVumpus(x) ::: x is a vumpus\nKind(x) ::: x is kind\nDumpus(x) ::: x is a dumpus\nEarthy(x) ::: x is earthy\nYumpus(x) ::: x is a yumpus\nNervous(x) ::: x is nervous\nNumpus(x) ::: x is a numpus\nOpaque(x) ::: x is opaque\nTumpus(x) ::: x is a tumpus\nLarge(x) ::: x is large\nSweet(x) ::: x is sweet\nRompus(x) ::: x is a rompus\nImpus(x) ::: x is an impus\nPremises:\n∀x (Zumpus(x) → Cold(x)) ::: Zumpuses are cold.\n∀x (Zumpus(x) → Wumpus(x)) ::: Each zumpus is a wumpus.\n∀x (Wumpus(x) → Dull(x)) ::: Each wumpus is dull.\n∀x (Wumpus(x) → Vumpus(x)) ::: Each wumpus is a vumpus.\n∀x (Vumpus(x) → Kind(x)) ::: Every vumpus is kind.\n∀x (Vumpus(x) → Dumpus(x)) ::: Each vumpus is a dumpus.\n∀x (Dumpus(x) → Earthy(x)) ::: Every dumpus is earthy.\n∀x (Dumpus(x) → Yumpus(x)) ::: Dumpuses are yumpuses.\n∀x (Yumpus(x) → Nervous(x)) ::: Every yumpus is nervous.\n∀x (Yumpus(x) → Numpus(x)) ::: Each yumpus is a numpus.\n∀x (Numpus(x) → Opaque(x)) ::: Each numpus is opaque.\n∀x (Numpus(x) → Tumpus(x)) ::: Every numpus is a tumpus.\n∀x (Jompus(x) → ¬Large(x)) ::: Jompuses are not large.\n∀x (Tumpus(x) → Sweet(x)) ::: Tumpuses are sweet.\n∀x (Tumpus(x) → Rompus(x)) ::: Tumpuses are rompuses.\n∀x (Rompus(x) → Large(x)) ::: Each rompus is large.\n∀x (Rompus(x) → Impus(x)) ::: Rompuses are impuses.\nDumpus(wren) ::: Wren is a dumpus.\nConclusion:\n¬Large(wren) ::: Wren is not large.\n------"
    ]
  },
  {
    "id": "ProntoQA_310",
    "context": "Each zumpus is not angry. Zumpuses are rompuses. Each rompus is not hot. Rompuses are dumpuses. Dumpuses are happy. Dumpuses are yumpuses. Every yumpus is opaque. Each wumpus is not liquid. Yumpuses are tumpuses. Tumpuses are liquid. Tumpuses are jompuses. Sam is a zumpus.",
    "question": "Is the following statement true or false? Sam is liquid.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant.lpg\n------"
    ]
  },
  {
    "id": "ProntoQA_311",
    "context": "Rompuses are not cold. Rompuses are tumpuses. Tumpuses are red. Every tumpus is a zumpus. Zumpuses are not angry. Every jompus is small. Zumpuses are vumpuses. Each vumpus is not opaque. Vumpuses are yumpuses. Every yumpus is dull. Every yumpus is a numpus. Each numpus is not earthy. Every numpus is a wumpus. Wumpuses are nervous. Wumpuses are dumpuses. Each dumpus is not small. Every dumpus is an impus. Polly is a vumpus.",
    "question": "Is the following statement true or false? Polly is not small.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nRompus(x) ::: x is a rompus\nCold(x) ::: x is cold\nTumpus(x) ::: x is a tumpus\nRed(x) ::: x is red\nZumpus(x) ::: x is a zumpus\nAngry(x) ::: x is angry\nJompus(x) ::: x is a jompus\nSmall(x) ::: x is small\nVumpus(x) ::: x is a vumpus\nOpaque(x) ::: x is opaque\nYumpus(x) ::: x is a yumpus\nDull(x) ::: x is dull\nNumpus(x) ::: x is a numpus\nEarthy(x) ::: x is earthy\nWumpus(x) ::: x is a wumpus\nNervous(x) ::: x is nervous\nDumpus(x) ::: x is a dumpus\nSmall(x) ::: x is small\nImpus(x) ::: x is an impus\nPremises:\n∀x (Rompus(x) → ¬Cold(x)) ::: Rompuses are not cold.\n∀x (Tumpus(x) → Red(x)) ::: Tumpuses are red.\n∀x (Tumpus(x) → Zumpus(x)) ::: Every tumpus is a zumpus.\n∀x (Zumpus(x) → ¬Angry(x)) ::: Zumpuses are not angry.\n∀x (Jompus(x) → Small(x)) ::: Every jompus is small.\n∀x (Zumpus(x) → Vumpus(x)) ::: Zumpuses are vumpuses.\n∀x (Vumpus(x) → ¬Opaque(x)) ::: Each vumpus is not opaque.\n∀x (Vumpus(x) → Yumpus(x)) ::: Vumpuses are yumpuses.\n∀x (Yumpus(x) → Dull(x)) ::: Every yumpus is dull.\n∀x (Yumpus(x) → Numpus(x)) ::: Every yumpus is a numpus.\n∀x (Numpus(x) → ¬Earthy(x)) ::: Each numpus is not earthy.\n∀x (Numpus(x) → Wumpus(x)) ::: Every numpus is a wumpus.\n∀x (Wumpus(x) → Nervous(x)) ::: Wumpuses are nervous.\n∀x (Wumpus(x) → Dumpus(x)) ::: Wumpuses are dumpuses.\n∀x (Dumpus(x) → ¬Small(x)) ::: Each dumpus is not small.\n∀x (Dumpus(x) → Impus(x)) ::: Every dumpus is an impus.\nVumpus(polly) ::: Polly is a vumpus.\nConclusion:\n¬Small(polly) ::: Polly is not small.\n------"
    ]
  },
  {
    "id": "ProntoQA_312",
    "context": "Every wumpus is not small. Wumpuses are dumpuses. Every dumpus is not dull. Jompuses are aggressive. Dumpuses are impuses. Every impus is not nervous. Each impus is a zumpus. Every zumpus is luminous. Zumpuses are rompuses. Rompuses are not orange. Rompuses are tumpuses. Tumpuses are not cold. Each tumpus is a yumpus. Yumpuses are not aggressive. Every yumpus is a numpus. Numpuses are spicy. Every numpus is a vumpus. Max is an impus.",
    "question": "Is the following statement true or false? Max is not aggressive.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nWumpus(x) ::: x is a wumpus\nSmall(x) ::: x is small\nDumpus(x) ::: x is a dumpus\nDull(x) ::: x is dull\nJompus(x) ::: x is a jompus\nAggressive(x) ::: x is aggressive\nImpus(x) ::: x is an impus\nNervous(x) ::: x is nervous\nZumpus(x) ::: x is a zumpus\nLuminous(x) ::: x is luminous\nRompus(x) ::: x is a rompus\nOrange(x) ::: x is orange\nTumpus(x) ::: x is a tumpus\nCold(x) ::: x is cold\nYumpus(x) ::: x is a yumpus\nAggressive(x) ::: x is aggressive\nNumpus(x) ::: x is a numpus\nSpicy(x) ::: x is spicy\nVumpus(x) ::: x is a vumpus\nPremises:\n∀x (Wumpus(x) → ¬Small(x)) ::: Every wumpus is not small.\n∀x (Wumpus(x) → Dumpus(x)) ::: Wumpuses are dumpuses.\n∀x (Dumpus(x) → ¬Dull(x)) ::: Every dumpus is not dull.\n∀x (Jompus(x) → Aggressive(x)) ::: Jompuses are aggressive.\n∀x (Dumpus(x) → Impus(x)) ::: Dumpuses are impuses.\n∀x (Impus(x) → ¬Nervous(x)) ::: Every impus is not nervous.\n∀x (Impus(x) → Zumpus(x)) ::: Each impus is a zumpus.\n∀x (Zumpus(x) → Luminous(x)) ::: Every zumpus is luminous.\n∀x (Zumpus(x) → Rompus(x)) ::: Zumpuses are rompuses.\n∀x (Rompus(x) → ¬Orange(x)) ::: Rompuses are not orange.\n∀x (Rompus(x) → Tumpus(x)) ::: Rompuses are tumpuses.\n∀x (Tumpus(x) → ¬Cold(x)) ::: Tumpuses are not cold.\n∀x (Tumpus(x) → Yumpus(x)) ::: Each tumpus is a yumpus.\n∀x (Yumpus(x) → ¬Aggressive(x)) ::: Yumpuses are not aggressive.\n∀x (Yumpus(x) → Numpus(x)) ::: Every yumpus is a numpus.\n∀x (Numpus(x) → Spicy(x)) ::: Numpuses are spicy.\n∀x (Numpus(x) → Vumpus(x)) ::: Every numpus is a vumpus.\nImpus(max) ::: Max is an impus.\nConclusion:\n¬Aggressive(max) ::: Max is not aggressive.\n------"
    ]
  },
  {
    "id": "ProntoQA_313",
    "context": "Tumpuses are not transparent. Each tumpus is a yumpus. Yumpuses are aggressive. Each yumpus is a jompus. Each jompus is liquid. Jompuses are numpuses. Every numpus is not sweet. Each numpus is a dumpus. Dumpuses are temperate. Each dumpus is a wumpus. Wumpuses are not large. Each wumpus is a zumpus. Impuses are not temperate. Every zumpus is not red. Zumpuses are rompuses. Rompuses are not shy. Rompuses are vumpuses. Stella is a tumpus.",
    "question": "Is the following statement true or false? Stella is temperate.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nTumpus(x) ::: x is a tumpus\nTransparent(x) ::: x is transparent\nYumpus(x) ::: x is a yumpus\nAggressive(x) ::: x is aggressive\nJompus(x) ::: x is a jompus\nLiquid(x) ::: x is liquid\nNumpus(x) ::: x is a numpus\nSweet(x) ::: x is sweet\nDumpus(x) ::: x is a dumpus\nTemperate(x) ::: x is temperate\nWumpus(x) ::: x is a wumpus\nLarge(x) ::: x is large\nZumpus(x) ::: x is a zumpus\nRed(x) ::: x is red\nRompus(x) ::: x is a rompus\nShy(x) ::: x is shy\nVumpus(x) ::: x is a vumpus\nPremises:\n∀x (Tumpus(x) → ¬Transparent(x)) ::: Tumpuses are not transparent.\n∀x (Tumpus(x) → Yumpus(x)) ::: Each tumpus is a yumpus.\n∀x (Yumpus(x) → Aggressive(x)) ::: Yumpuses are aggressive.\n∀x (Yumpus(x) → Jompus(x)) ::: Each yumpus is a jompus.\n∀x (Jompus(x) → Liquid(x)) ::: Each jompus is liquid.\n∀x (Jompus(x) → Numpus(x)) ::: Jompuses are numpuses.\n∀x (Numpus(x) → ¬Sweet(x)) ::: Every numpus is not sweet.\n∀x (Numpus(x) → Dumpus(x)) ::: Each numpus is a dumpus.\n∀x (Dumpus(x) → Temperate(x)) ::: Dumpuses are temperate.\n∀x (Dumpus(x) → Wumpus(x)) ::: Each dumpus is a wumpus.\n∀x (Wumpus(x) → ¬Large(x)) ::: Wumpuses are not large.\n∀x (Wumpus(x) → Zumpus(x)) ::: Each wumpus is a zumpus.\n∀x (Impus(x) → ¬Temperate(x)) ::: Impuses are not temperate.\n∀x (Zumpus(x) → ¬Red(x)) ::: Every zumpus is not red.\n∀x (Zumpus(x) → Rompus(x)) ::: Zumpuses are rompuses.\n∀x (Rompus(x) → ¬Shy(x)) ::: Rompuses are not shy.\n∀x (Rompus(x) → Vumpus(x)) ::: Rompuses are vumpuses.\nTumpus(stella) ::: Stella is a tumpus.\nConclusion:\nTemperate(stella) ::: Stella is temperate.\n------"
    ]
  },
  {
    "id": "ProntoQA_314",
    "context": "Impuses are shy. Impuses are jompuses. Each jompus is red. Jompuses are rompuses. Each rompus is not hot. Rompuses are yumpuses. Each yumpus is bitter. Yumpuses are dumpuses. Dumpuses are large. Every dumpus is a numpus. Numpuses are not opaque. Each numpus is a vumpus. Vumpuses are not fruity. Vumpuses are tumpuses. Tumpuses are aggressive. Tumpuses are wumpuses. Zumpuses are opaque. Sally is a jompus.",
    "question": "Is the following statement true or false? Sally is not opaque.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nImpus(x) ::: x is an impus\nShy(x) ::: x is shy\nJompus(x) ::: x is a jompus\nRed(x) ::: x is red\nRompus(x) ::: x is a rompus\nHot(x) ::: x is hot\nYumpus(x) ::: x is a yumpus\nBitter(x) ::: x is bitter\nDumpus(x) ::: x is a dumpus\nLarge(x) ::: x is large\nNumpus(x) ::: x is a numpus\nOpaque(x) ::: x is opaque\nVumpus(x) ::: x is a vumpus\nFruity(x) ::: x is fruity\nTumpus(x) ::: x is a tumpus\nAggressive(x) ::: x is aggressive\nWumpus(x) ::: x is a wumpus\nZumpus(x) ::: x is a zumpus\nPremises:\n∀x (Impus(x) → Shy(x)) ::: Impuses are shy.\n∀x (Impus(x) → Jompus(x)) ::: Impuses are jompuses.\n∀x (Jompus(x) → Red(x)) ::: Each jompus is red.\n∀x (Rompus(x) → ¬Hot(x)) ::: Rompuses are not hot.\n∀x (Rompus(x) → Yumpus(x)) ::: Rompuses are yumpuses.\n∀x (Yumpus(x) → Bitter(x)) ::: Each yumpus is bitter.\n∀x (Yumpus(x) → Dumpus(x)) ::: Yumpuses are dumpuses.\n∀x (Dumpus(x) → Large(x)) ::: Dumpuses are large.\n∀x (Dumpus(x) → Numpus(x)) ::: Every dumpus is a numpus.\n∀x (Numpus(x) → ¬Opaque(x)) ::: Numpuses are not opaque.\n∀x (Numpus(x) → Vumpus(x)) ::: Each numpus is a vumpus.\n∀x (Vumpus(x) → ¬Fruity(x)) ::: Vumpuses are not fruity.\n∀x (Vumpus(x) → Tumpus(x)) ::: Vumpuses are tumpuses.\n∀x (Tumpus(x) → Aggressive(x)) ::: Tumpuses are aggressive.\n∀x (Tumpus(x) → Wumpus(x)) ::: Tumpuses are wumpuses.\n∀x (Zumpus(x) → Opaque(x)) ::: Zumpuses are opaque.\nJompus(sally) ::: Sally is a jompus.\nConclusion:\n¬Opaque(sally) ::: Sally is not opaque.\n------"
    ]
  },
  {
    "id": "ProntoQA_315",
    "context": "Wumpuses are feisty. Wumpuses are yumpuses. Each yumpus is transparent. Yumpuses are tumpuses. Tumpuses are orange. Each tumpus is an impus. Impuses are cold. Every numpus is metallic. Impuses are rompuses. Every rompus is earthy. Rompuses are dumpuses. Dumpuses are not bright. Dumpuses are jompuses. Jompuses are small. Jompuses are zumpuses. Zumpuses are not metallic. Zumpuses are vumpuses. Fae is an impus.",
    "question": "Is the following statement true or false? Fae is not metallic.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nWumpus(x) ::: x is a wumpus\nFeisty(x) ::: x is feisty\nYumpus(x) ::: x is a yumpus\nTransparent(x) ::: x is transparent\nTumpus(x) ::: x is a tumpus\nOrange(x) ::: x is orange\nImpus(x) ::: x is an impus\nCold(x) ::: x is cold\nNumpus(x) ::: x is a numpus\nMetallic(x) ::: x is metallic\nRompus(x) ::: x is a rompus\nEarthy(x) ::: x is earthy\nDumpus(x) ::: x is a dumpus\nBright(x) ::: x is bright\nJompus(x) ::: x is a jompus\nSmall(x) ::: x is small\nZumpus(x) ::: x is a zumpus\nVumpus(x) ::: x is a vumpus\nFae(x) ::: x is Fae\nPremises:\n∀x (Wumpus(x) → Feisty(x)) ::: Wumpuses are feisty.\n∀x (Wumpus(x) → Yumpus(x)) ::: Wumpuses are yumpuses.\n∀x (Yumpus(x) → Transparent(x)) ::: Each yumpus is transparent.\n∀x (Yumpus(x) → Tumpus(x)) ::: Yumpuses are tumpuses.\n∀x (Tumpus(x) → Orange(x)) ::: Tumpuses are orange.\n∀x (Tumpus(x) → Impus(x)) ::: Each tumpus is an impus.\n∀x (Impus(x) → Cold(x)) ::: Impuses are cold.\n∀x (Numpus(x) → Metallic(x)) ::: Every numpus is metallic.\n∀x (Impus(x) → Rompus(x)) ::: Impuses are rompuses.\n∀x (Rompus(x) → Earthy(x)) ::: Every rompus is earthy.\n∀x (Rompus(x) → Dumpus(x)) ::: Rompuses are dumpuses.\n∀x (Dumpus(x) → ¬Bright(x)) ::: Dumpuses are not bright.\n∀x (Dumpus(x) → Jompus(x)) ::: Dumpuses are jompuses.\n∀x (Jompus(x) → Small(x)) ::: Jompuses are small.\n∀x (Jompus(x) → Zumpus(x)) ::: Jompuses are zumpuses.\n∀x (Zumpus(x) → ¬Metallic(x)) ::: Zumpuses are not metallic.\n∀x (Zumpus(x) → Vumpus(x)) ::: Zumpuses are vumpuses.\nImpus(fae) ::: Fae is an impus.\nConclusion:\n¬Metallic(fae) ::: Fae is not metallic.\n------"
    ]
  },
  {
    "id": "ProntoQA_316",
    "context": "Tumpuses are not sweet. Numpuses are not dull. Tumpuses are jompuses. Each jompus is not aggressive. Every jompus is a rompus. Rompuses are opaque. Every rompus is a yumpus. Each yumpus is not happy. Yumpuses are dumpuses. Each dumpus is red. Each dumpus is an impus. Impuses are dull. Every impus is a zumpus. Zumpuses are cold. Zumpuses are vumpuses. Every vumpus is fruity. Each vumpus is a wumpus. Alex is a jompus.",
    "question": "Is the following statement true or false? Alex is not dull.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nTumpus(x) ::: x is a tumpus\nSweet(x) ::: x is sweet\nNumpus(x) ::: x is a numpus\nDull(x) ::: x is dull\nJompus(x) ::: x is a jompus\nAggressive(x) ::: x is aggressive\nRompus(x) ::: x is a rompus\nOpaque(x) ::: x is opaque\nYumpus(x) ::: x is a yumpus\nHappy(x) ::: x is happy\nDumpus(x) ::: x is a dumpus\nRed(x) ::: x is red\nImpus(x) ::: x is an impus\nDull(x) ::: x is dull\nZumpus(x) ::: x is a zumpus\nCold(x) ::: x is cold\nVumpus(x) ::: x is a vumpus\nFruity(x) ::: x is fruity\nWumpus(x) ::: x is a wumpus\nPremises:\n∀x (Tumpus(x) → ¬Sweet(x)) ::: Tumpuses are not sweet.\n∀x (Numpus(x) → ¬Dull(x)) ::: Numpuses are not dull.\n∀x (Tumpus(x) → Jompus(x)) ::: Tumpuses are jompuses.\n∀x (Jompus(x) → ¬Aggressive(x)) ::: Each jompus is not aggressive.\n∀x (Jompus(x) → Rompus(x)) ::: Every jompus is a rompus.\n∀x (Rompus(x) → Opaque(x)) ::: Rompuses are opaque.\n∀x (Rompus(x) → Yumpus(x)) ::: Every rompus is a yumpus.\n∀x (Yumpus(x) → ¬Happy(x)) ::: Yumpuses are not happy.\n∀x (Yumpus(x) → Dumpus(x)) ::: Yumpuses are dumpuses.\n∀x (Dumpus(x) → Red(x)) ::: Each dumpus is red.\n∀x (Dumpus(x) → Impus(x)) ::: Each dumpus is an impus.\n∀x (Impus(x) → Dull(x)) ::: Impuses are dull.\n∀x (Impus(x) → Zumpus(x)) ::: Every impus is a zumpus.\n∀x (Zumpus(x) → Cold(x)) ::: Zumpuses are cold.\n∀x (Zumpus(x) → Vumpus(x)) ::: Zumpuses are vumpuses.\n∀x (Vumpus(x) → Fruity(x)) ::: Every vumpus is fruity.\n∀x (Vumpus(x) → Wumpus(x)) ::: Each vumpus is a wumpus.\nJompus(alex) ::: Alex is a jompus.\nConclusion:\n¬Dull(alex) ::: Alex is not dull.\n------"
    ]
  },
  {
    "id": "ProntoQA_317",
    "context": "Each jompus is fruity. Jompuses are wumpuses. Each tumpus is red. Every wumpus is small. Wumpuses are zumpuses. Zumpuses are shy. Zumpuses are rompuses. Rompuses are sour. Every rompus is a numpus. Every numpus is opaque. Numpuses are impuses. Every impus is aggressive. Impuses are vumpuses. Each vumpus is not red. Each vumpus is a yumpus. Every yumpus is not liquid. Yumpuses are dumpuses. Stella is a zumpus.",
    "question": "Is the following statement true or false? Stella is not red.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nJompus(x) ::: x is a jompus\nFruity(x) ::: x is fruity\nWumpus(x) ::: x is a wumpus\nTumpus(x) ::: x is a tumpus\nRed(x) ::: x is red\nSmall(x) ::: x is small\nZumpus(x) ::: x is a zumpus\nShy(x) ::: x is shy\nRompus(x) ::: x is a rompus\nSour(x) ::: x is sour\nNumpus(x) ::: x is a numpus\nOpaque(x) ::: x is opaque\nImpus(x) ::: x is an impus\nAggressive(x) ::: x is aggressive\nVumpus(x) ::: x is a vumpus\nYumpus(x) ::: x is a yumpus\nDumpus(x) ::: x is a dumpus\nPremises:\n∀x (Jompus(x) → Fruity(x)) ::: Each jompus is fruity.\n∀x (Jompus(x) → Wumpus(x)) ::: Jompuses are wumpuses.\n∀x (Tumpus(x) → Red(x)) ::: Each tumpus is red.\n∀x (Wumpus(x) → Small(x)) ::: Every wumpus is small.\n∀x (Wumpus(x) → Zumpus(x)) ::: Wumpuses are zumpuses.\n∀x (Zumpus(x) → Shy(x)) ::: Zumpuses are shy.\n∀x (Zumpus(x) → Rompus(x)) ::: Zumpuses are rompuses.\n∀x (Rompus(x) → Sour(x)) ::: Rompuses are sour.\n∀x (Rompus(x) → Numpus(x)) ::: Every rompus is a numpus.\n∀x (Numpus(x) → Opaque(x)) ::: Every numpus is opaque.\n∀x (Numpus(x) → Impus(x)) ::: Numpuses are impuses.\n∀x (Impus(x) → Aggressive(x)) ::: Every impus is aggressive.\n∀x (Impus(x) → Vumpus(x)) ::: Impuses are vumpuses.\n∀x (Vumpus(x) → ¬Red(x)) ::: Each vumpus is not red.\n∀x (Vumpus(x) → Yumpus(x)) ::: Each vumpus is a yumpus.\n∀x (Yumpus(x) → ¬Liquid(x)) ::: Every yumpus is not liquid.\n∀x (Yumpus(x) → Dumpus(x)) ::: Yumpuses are dumpuses.\nZumpus(stella) ::: Stella is a zumpus.\nConclusion:\n¬Red(stella) ::: Stella is not red.\n------"
    ]
  },
  {
    "id": "ProntoQA_318",
    "context": "Each impus is not temperate. Impuses are rompuses. Rompuses are kind. Rompuses are zumpuses. Each zumpus is metallic. Zumpuses are yumpuses. Each yumpus is not small. Each yumpus is a tumpus. Every tumpus is earthy. Every tumpus is a vumpus. Each vumpus is spicy. Every jompus is not spicy. Every vumpus is a numpus. Numpuses are shy. Numpuses are wumpuses. Every wumpus is not orange. Wumpuses are dumpuses. Max is a rompus.",
    "question": "Is the following statement true or false? Max is spicy.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nImpus(x) ::: x is an impus\nTemperate(x) ::: x is temperate\nRompus(x) ::: x is a rompus\nKind(x) ::: x is kind\nZumpus(x) ::: x is a zumpus\nMetallic(x) ::: x is metallic\nYumpus(x) ::: x is a yumpus\nSmall(x) ::: x is small\nTumpus(x) ::: x is a tumpus\nEarthy(x) ::: x is earthy\nVumpus(x) ::: x is a vumpus\nSpicy(x) ::: x is spicy\nJompus(x) ::: x is a jompus\nShy(x) ::: x is shy\nWumpus(x) ::: x is a wumpus\nOrange(x) ::: x is orange\nDumpus(x) ::: x is a dumpus\nPremises:\n∀x (Impus(x) → ¬Temperate(x)) ::: Each impus is not temperate.\n∀x (Impus(x) → Rompus(x)) ::: Impuses are rompuses.\n∀x (Rompus(x) → Kind(x)) ::: Rompuses are kind.\n∀x (Zumpus(x) → Metallic(x)) ::: Rompuses are zumpuses.\n∀x (Zumpus(x) → Yumpus(x)) ::: Zumpuses are yumpuses.\n∀x (Yumpus(x) → ¬Small(x)) ::: Each yumpus is not small.\n∀x (Yumpus(x) → Tumpus(x)) ::: Each yumpus is a tumpus.\n∀x (Tumpus(x) → Earthy(x)) ::: Every tumpus is earthy.\n∀x (Tumpus(x) → Vumpus(x)) ::: Every tumpus is a vumpus.\n∀x (Vumpus(x) → Spicy(x)) ::: Every vumpus is spicy.\n∀x (Jompus(x) → ¬Spicy(x)) ::: Every jompus is not spicy.\n∀x (Vumpus(x) → Numpus(x)) ::: Every vumpus is a numpus.\n∀x (Numpus(x) → Shy(x)) ::: Numpuses are shy.\n∀x (Numpus(x) → Wumpus(x)) ::: Numpuses are wumpuses.\n∀x (Wumpus(x) → ¬Orange(x)) ::: Every wumpus is not orange.\n∀x (Wumpus(x) → Dumpus(x)) ::: Wumpuses are dumpuses.\nRompus(max) ::: Max is a rompus.\nConclusion:\nSpicy(max) ::: Max is spicy.\n------"
    ]
  },
  {
    "id": "ProntoQA_319",
    "context": "Each numpus is not orange. Numpuses are dumpuses. Wumpuses are temperate. Dumpuses are small. Dumpuses are vumpuses. Vumpuses are not kind. Vumpuses are jompuses. Jompuses are earthy. Jompuses are impuses. Every impus is not bright. Impuses are zumpuses. Zumpuses are not nervous. Zumpuses are rompuses. Rompuses are transparent. Every rompus is a tumpus. Each tumpus is not temperate. Tumpuses are yumpuses. Wren is a jompus.",
    "question": "Is the following statement true or false? Wren is not temperate.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nNumpus(x) ::: x is a numpus\nOrange(x) ::: x is orange\nDumpus(x) ::: x is a dumpus\nTemperate(x) ::: x is temperate\nSmall(x) ::: x is small\nVumpus(x) ::: x is a vumpus\nKind(x) ::: x is kind\nJompus(x) ::: x is a jompus\nEarthy(x) ::: x is earthy\nImpus(x) ::: x is an impus\nBright(x) ::: x is bright\nZumpus(x) ::: x is a zumpus\nNervous(x) ::: x is nervous\nRompus(x) ::: x is a rompus\nTransparent(x) ::: x is transparent\nTumpus(x) ::: x is a tumpus\nTemperate(x) ::: x is temperate\nYumpus(x) ::: x is a yumpus\nPremises:\n∀x (Numpus(x) → ¬Orange(x)) ::: Each numpus is not orange.\n∀x (Numpus(x) → Dumpus(x)) ::: Numpuses are dumpuses.\n∀x (Wumpus(x) → Temperate(x)) ::: Wumpuses are temperate.\n∀x (Dumpus(x) → Small(x)) ::: Dumpuses are small.\n∀x (Dumpus(x) → Vumpus(x)) ::: Dumpuses are vumpuses.\n∀x (Vumpus(x) → ¬Kind(x)) ::: Vumpuses are not kind.\n∀x (Vumpus(x) → Jompus(x)) ::: Vumpuses are jompuses.\n∀x (Jompus(x) → Earthy(x)) ::: Jompuses are earthy.\n∀x (Jompus(x) → Impus(x)) ::: Jompuses are impuses.\n∀x (Impus(x) → ¬Bright(x)) ::: Every impus is not bright.\n∀x (Impus(x) → Zumpus(x)) ::: Impuses are zumpuses.\n∀x (Zumpus(x) → ¬Nervous(x)) ::: Zumpuses are not nervous.\n∀x (Zumpus(x) → Rompus(x)) ::: Zumpuses are rompuses.\n∀x (Rompus(x) → Transparent(x)) ::: Rompuses are transparent.\n∀x (Rompus(x) → Tumpus(x)) ::: Every rompus is a tumpus.\n∀x (Tumpus(x) → ¬Temperate(x)) ::: Each tumpus is not temperate.\n∀x (Tumpus(x) → Yumpus(x)) ::: Tumpuses are yumpuses.\nJompus(wren) ::: Wren is a jompus.\nConclusion:\n¬Temperate(wren) ::: Wren is not temperate.\n------"
    ]
  },
  {
    "id": "ProntoQA_320",
    "context": "Jompuses are floral. Jompuses are zumpuses. Each zumpus is bitter. Each zumpus is a numpus. Each numpus is bright. Each numpus is a yumpus. Each yumpus is metallic. Each yumpus is an impus. Impuses are shy. Each impus is a rompus. Rompuses are not cold. Each rompus is a wumpus. Wumpuses are brown. Each wumpus is a dumpus. Dumpuses are kind. Tumpuses are not shy. Each dumpus is a vumpus. Sam is a jompus.",
    "question": "Is the following statement true or false? Sam is not shy.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nJompus(x) ::: x is a jompus\nFloral(x) ::: x is floral\nZumpus(x) ::: x is a zumpus\nBitter(x) ::: x is bitter\nNumpus(x) ::: x is a numpus\nBright(x) ::: x is bright\nYumpus(x) ::: x is a yumpus\nMetallic(x) ::: x is metallic\nImpus(x) ::: x is an impus\nShy(x) ::: x is shy\nRompus(x) ::: x is a rompus\nCold(x) ::: x is cold\nWumpus(x) ::: x is a wumpus\nBrown(x) ::: x is brown\nDumpus(x) ::: x is a dumpus\nKind(x) ::: x is kind\nTumpus(x) ::: x is a tumpus\nShy(x) ::: x is shy\nVumpus(x) ::: x is a vumpus\nPremises:\n∀x (Jompus(x) → Floral(x)) ::: Jompuses are floral.\n∀x (Jompus(x) → Zumpus(x)) ::: Jompuses are zumpuses.\n∀x (Zumpus(x) → Bitter(x)) ::: Each zumpus is bitter.\n∀x (Zumpus(x) → Numpus(x)) ::: Each zumpus is a numpus.\n∀x (Numpus(x) → Bright(x)) ::: Each numpus is bright.\n∀x (Numpus(x) → Yumpus(x)) ::: Each numpus is a yumpus.\n∀x (Yumpus(x) → Metallic(x)) ::: Each yumpus is metallic.\n∀x (Yumpus(x) → Impus(x)) ::: Each yumpus is an impus.\n∀x (Impus(x) → Shy(x)) ::: Impuses are shy.\n∀x (Impus(x) → Rompus(x)) ::: Each impus is a rompus.\n∀x (Rompus(x) → ¬Cold(x)) ::: Rompuses are not cold.\n∀x (Rompus(x) → Wumpus(x)) ::: Each rompus is a wumpus.\n∀x (Wumpus(x) → Brown(x)) ::: Wumpuses are brown.\n∀x (Wumpus(x) → Dumpus(x)) ::: Each wumpus is a dumpus.\n∀x (Dumpus(x) → Kind(x)) ::: Dumpuses are kind.\n∀x (Dumpus(x) → ¬Shy(x)) ::: Tumpuses are not shy.\n∀x (Dumpus(x) → Vumpus(x)) ::: Each dumpus is a vumpus.\nJompus(sam) ::: Sam is a jompus.\nConclusion:\n¬Shy(sam) ::: Sam is not shy.\n------"
    ]
  },
  {
    "id": "ProntoQA_321",
    "context": "Rompuses are large. Rompuses are wumpuses. Tumpuses are temperate. Wumpuses are shy. Every wumpus is a numpus. Each numpus is earthy. Numpuses are impuses. Impuses are dull. Impuses are vumpuses. Each vumpus is metallic. Vumpuses are dumpuses. Each dumpus is sweet. Every dumpus is a yumpus. Each yumpus is amenable. Each yumpus is a jompus. Each jompus is not temperate. Each jompus is a zumpus. Sally is an impus.",
    "question": "Is the following statement true or false? Sally is not temperate.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nRompus(x) ::: x is a rompus\nLarge(x) ::: x is large\nWumpus(x) ::: x is a wumpus\nTumpus(x) ::: x is a tumpus\nTemperate(x) ::: x is temperate\nShy(x) ::: x is shy\nNumpus(x) ::: x is a numpus\nEarthy(x) ::: x is earthy\nImpus(x) ::: x is an impus\nDull(x) ::: x is dull\nVumpus(x) ::: x is a vumpus\nMetallic(x) ::: x is metallic\nDumpus(x) ::: x is a dumpus\nSweet(x) ::: x is sweet\nYumpus(x) ::: x is a yumpus\nAmenable(x) ::: x is amenable\nJompus(x) ::: x is a jompus\nZumpus(x) ::: x is a zumpus\nSally(x) ::: x is Sally\nPremises:\n∀x (Rompus(x) → Large(x)) ::: Rompuses are large.\n∀x (Rompus(x) → Wumpus(x)) ::: Rompuses are wumpuses.\n∀x (Tumpus(x) → Temperate(x)) ::: Tumpuses are temperate.\n∀x (Wumpus(x) → Shy(x)) ::: Wumpuses are shy.\n∀x (Wumpus(x) → Numpus(x)) ::: Every wumpus is a numpus.\n∀x (Numpus(x) → Earthy(x)) ::: Each numpus is earthy.\n∀x (Numpus(x) → Impus(x)) ::: Numpuses are impuses.\n∀x (Impus(x) → Dull(x)) ::: Impuses are dull.\n∀x (Impus(x) → Vumpus(x)) ::: Impuses are vumpuses.\n∀x (Vumpus(x) → Metallic(x)) ::: Each vumpus is metallic.\n∀x (Vumpus(x) → Dumpus(x)) ::: Vumpuses are dumpuses.\n∀x (Dumpus(x) → Sweet(x)) ::: Each dumpus is sweet.\n∀x (Dumpus(x) → Yumpus(x)) ::: Every dumpus is a yumpus.\n∀x (Yumpus(x) → Amenable(x)) ::: Each yumpus is amenable.\n∀x (Yumpus(x) → Jompus(x)) ::: Each yumpus is a jompus.\n∀x (Jompus(x) → ¬Temperate(x)) ::: Each jompus is not temperate.\n∀x (Jompus(x) → Zumpus(x)) ::: Each jompus is a zumpus.\nImpus(sally) ::: Sally is an impus.\nConclusion:\n¬Temperate(sally) ::: Sally is not temperate.\n------"
    ]
  },
  {
    "id": "ProntoQA_322",
    "context": "Every tumpus is not floral. Tumpuses are rompuses. Rompuses are spicy. Rompuses are numpuses. Numpuses are not hot. Every numpus is a jompus. Every jompus is not blue. Every jompus is an impus. Each impus is dull. Impuses are wumpuses. Each wumpus is opaque. Every vumpus is not opaque. Each wumpus is a zumpus. Zumpuses are not amenable. Every zumpus is a dumpus. Each dumpus is shy. Dumpuses are yumpuses. Alex is a rompus.",
    "question": "Is the following statement true or false? Alex is not opaque.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nTumpus(x) ::: x is a tumpus\nFloral(x) ::: x is floral\nRompus(x) ::: x is a rompus\nSpicy(x) ::: x is spicy\nNumpus(x) ::: x is a numpus\nHot(x) ::: x is hot\nJompus(x) ::: x is a jompus\nBlue(x) ::: x is blue\nImpus(x) ::: x is an impus\nDull(x) ::: x is dull\nWumpus(x) ::: x is a wumpus\nOpaque(x) ::: x is opaque\nVumpus(x) ::: x is a vumpus\nZumpus(x) ::: x is a zumpus\nAmenable(x) ::: x is amenable\nDumpus(x) ::: x is a dumpus\nShy(x) ::: x is shy\nYumpus(x) ::: x is a yumpus\nPremises:\n∀x (Tumpus(x) → ¬Floral(x)) ::: Every tumpus is not floral.\n∀x (Rompus(x) → Spicy(x)) ::: Rompuses are spicy.\n∀x (Rompus(x) → Numpus(x)) ::: Rompuses are numpuses.\n∀x (Numpus(x) → ¬Hot(x)) ::: Numpuses are not hot.\n∀x (Numpus(x) → Jompus(x)) ::: Every numpus is a jompus.\n∀x (Jompus(x) → ¬Blue(x)) ::: Every jompus is not blue.\n∀x (Jompus(x) → Impus(x)) ::: Every jompus is an impus.\n∀x (Impus(x) → Dull(x)) ::: Each impus is dull.\n∀x (Impus(x) → Wumpus(x)) ::: Impuses are wumpuses.\n∀x (Wumpus(x) → Opaque(x)) ::: Each wumpus is opaque.\n∀x (Vumpus(x) → ¬Opaque(x)) ::: Every vumpus is not opaque.\n∀x (Wumpus(x) → Zumpus(x)) ::: Each wumpus is a zumpus.\n∀x (Zumpus(x) → ¬Amenable(x)) ::: Zumpuses are not amenable.\n∀x (Zumpus(x) → Dumpus(x)) ::: Every zumpus is a dumpus.\n∀x (Dumpus(x) → Shy(x)) ::: Each dumpus is shy.\n∀x (Dumpus(x) → Yumpus(x)) ::: Dumpuses are yumpuses.\nRompus(alex) ::: Alex is a rompus.\nConclusion:\n¬Opaque(alex) ::: Alex is not opaque.\n------"
    ]
  },
  {
    "id": "ProntoQA_323",
    "context": "Dumpuses are shy. Dumpuses are impuses. Impuses are fruity. Each numpus is not amenable. Every impus is a tumpus. Tumpuses are bright. Tumpuses are wumpuses. Every wumpus is brown. Wumpuses are yumpuses. Yumpuses are amenable. Yumpuses are vumpuses. Wren is a dumpus.",
    "question": "Is the following statement true or false? Wren is not amenable.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant.lpg\n------"
    ]
  },
  {
    "id": "ProntoQA_324",
    "context": "Each zumpus is liquid. Wumpuses are red. Every zumpus is a yumpus. Every yumpus is kind. Yumpuses are rompuses. Rompuses are temperate. Rompuses are dumpuses. Dumpuses are sour. Each dumpus is a tumpus. Each tumpus is bright. Each tumpus is a jompus. Jompuses are not red. Jompuses are impuses. Each impus is large. Impuses are vumpuses. Each vumpus is floral. Vumpuses are numpuses. Alex is a yumpus.",
    "question": "Is the following statement true or false? Alex is not red.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nZumpus(x) ::: x is a zumpus\nLiquid(x) ::: x is liquid\nRed(x) ::: x is red\nYumpus(x) ::: x is a yumpus\nKind(x) ::: x is kind\nRompus(x) ::: x is a rompus\nTemperate(x) ::: x is temperate\nDumpus(x) ::: x is a dumpus\nSour(x) ::: x is sour\nTumpus(x) ::: x is a tumpus\nBright(x) ::: x is bright\nJompus(x) ::: x is a jompus\nImpus(x) ::: x is an impus\nLarge(x) ::: x is large\nVumpus(x) ::: x is a vumpus\nFloral(x) ::: x is floral\nNumpus(x) ::: x is a numpus\nPremises:\n∀x (Zumpus(x) → Liquid(x)) ::: Each zumpus is liquid.\n∀x (Wumpus(x) → Red(x)) ::: Wumpuses are red.\n∀x (Zumpus(x) → Yumpus(x)) ::: Every zumpus is a yumpus.\n∀x (Yumpus(x) → Kind(x)) ::: Every yumpus is kind.\n∀x (Yumpus(x) → Rompus(x)) ::: Yumpuses are rompuses.\n∀x (Rompus(x) → Temperate(x)) ::: Rompuses are temperate.\n∀x (Rompus(x) → Dumpus(x)) ::: Rompuses are dumpuses.\n∀x (Dumpus(x) → Sour(x)) ::: Dumpuses are sour.\n∀x (Dumpus(x) → Tumpus(x)) ::: Each dumpus is a tumpus.\n∀x (Tumpus(x) → Bright(x)) ::: Each tumpus is bright.\n∀x (Tumpus(x) → Jompus(x)) ::: Each tumpus is a jompus.\n∀x (Jompus(x) → ¬Red(x)) ::: Jompuses are not red.\n∀x (Jompus(x) → Impus(x)) ::: Jompuses are impuses.\n∀x (Impus(x) → Large(x)) ::: Each impus is large.\n∀x (Impus(x) → Vumpus(x)) ::: Impuses are vumpuses.\n∀x (Vumpus(x) → Floral(x)) ::: Vumpuses are floral.\n∀x (Vumpus(x) → Numpus(x)) ::: Vumpuses are numpuses.\nYumpus(alex) ::: Alex is a yumpus.\nConclusion:\n¬Red(alex) ::: Alex is not red.\n------"
    ]
  },
  {
    "id": "ProntoQA_325",
    "context": "Wumpuses are not mean. Wumpuses are rompuses. Each numpus is wooden. Rompuses are sour. Rompuses are yumpuses. Every yumpus is not opaque. Yumpuses are dumpuses. Dumpuses are temperate. Dumpuses are zumpuses. Every zumpus is not brown. Every zumpus is a tumpus. Tumpuses are not earthy. Tumpuses are impuses. Impuses are not wooden. Impuses are jompuses. Jompuses are not happy. Jompuses are vumpuses. Wren is a yumpus.",
    "question": "Is the following statement true or false? Wren is not wooden.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nWumpus(x) ::: x is a wumpus\nMean(x) ::: x is mean\nRompus(x) ::: x is a rompus\nNumpus(x) ::: x is a numpus\nWooden(x) ::: x is wooden\nSour(x) ::: x is sour\nYumpus(x) ::: x is a yumpus\nOpaque(x) ::: x is opaque\nDumpus(x) ::: x is a dumpus\nTemperate(x) ::: x is temperate\nZumpus(x) ::: x is a zumpus\nBrown(x) ::: x is brown\nTumpus(x) ::: x is a tumpus\nEarthy(x) ::: x is earthy\nImpus(x) ::: x is an impus\nJompus(x) ::: x is a jompus\nHappy(x) ::: x is happy\nVumpus(x) ::: x is a vumpus\nPremises:\n∀x (Wumpus(x) → ¬Mean(x)) ::: Wumpuses are not mean.\n∀x (Wumpus(x) → Rompus(x)) ::: Wumpuses are rompuses.\n∀x (Numpus(x) → Wooden(x)) ::: Each numpus is wooden.\n∀x (Rompus(x) → Sour(x)) ::: Rompuses are sour.\n∀x (Rompus(x) → Yumpus(x)) ::: Rompuses are yumpuses.\n∀x (Yumpus(x) → ¬Opaque(x)) ::: Every yumpus is not opaque.\n∀x (Yumpus(x) → Dumpus(x)) ::: Yumpuses are dumpuses.\n∀x (Dumpus(x) → Temperate(x)) ::: Dumpuses are temperate.\n∀x (Dumpus(x) → Zumpus(x)) ::: Dumpuses are zumpuses.\n∀x (Zumpus(x) → ¬Brown(x)) ::: Every zumpus is not brown.\n∀x (Zumpus(x) → Tumpus(x)) ::: Every zumpus is a tumpus.\n∀x (Tumpus(x) → ¬Earthy(x)) ::: Tumpuses are not earthy.\n∀x (Tumpus(x) → Impus(x)) ::: Tumpuses are impuses.\n∀x (Impus(x) → ¬Wooden(x)) ::: Impuses are not wooden.\n∀x (Impus(x) → Jompus(x)) ::: Impuses are jompuses.\n∀x (Jompus(x) → ¬Happy(x)) ::: Jompuses are not happy.\n∀x (Jompus(x) → Vumpus(x)) ::: Jompuses are vumpuses.\nYumpus(wren) ::: Wren is a yumpus.\nConclusion:\n¬Wooden(wren) ::: Wren is not wooden.\n------"
    ]
  },
  {
    "id": "ProntoQA_326",
    "context": "Every vumpus is not fruity. Vumpuses are yumpuses. Yumpuses are not orange. Yumpuses are jompuses. Wumpuses are not transparent. Jompuses are wooden. Jompuses are impuses. Impuses are happy. Every impus is a zumpus. Zumpuses are transparent. Zumpuses are dumpuses. Each dumpus is bright. Every dumpus is a rompus. Every rompus is sour. Rompuses are numpuses. Numpuses are hot. Numpuses are tumpuses. Alex is a vumpus.",
    "question": "Is the following statement true or false? Alex is transparent.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nVumpus(x) ::: x is a vumpus\nFruity(x) ::: x is fruity\nYumpus(x) ::: x is a yumpus\nOrange(x) ::: x is orange\nJompus(x) ::: x is a jompus\nWumpus(x) ::: x is a wumpus\nTransparent(x) ::: x is transparent\nJompus(x) ::: x is a jompus\nWooden(x) ::: x is wooden\nImpus(x) ::: x is an impus\nHappy(x) ::: x is happy\nZumpus(x) ::: x is a zumpus\nDumpus(x) ::: x is a dumpus\nBright(x) ::: x is bright\nRompus(x) ::: x is a rompus\nSour(x) ::: x is sour\nNumpus(x) ::: x is a numpus\nHot(x) ::: x is hot\nTumpus(x) ::: x is a tumpus\nPremises:\n∀x (Vumpus(x) → ¬Fruity(x)) ::: Every vumpus is not fruity.\n∀x (Vumpus(x) → Yumpus(x)) ::: Vumpuses are yumpuses.\n∀x (Yumpus(x) → ¬Orange(x)) ::: Yumpuses are not orange.\n∀x (Yumpus(x) → Jompus(x)) ::: Yumpuses are jompuses.\n∀x (Wumpus(x) → ¬Transparent(x)) ::: Wumpuses are not transparent.\n∀x (Jompus(x) → Wooden(x)) ::: Jompuses are wooden.\n∀x (Jompus(x) → Impus(x)) ::: Jompuses are impuses.\n∀x (Impus(x) → Happy(x)) ::: Impuses are happy.\n∀x (Impus(x) → Zumpus(x)) ::: Every impus is a zumpus.\n∀x (Zumpus(x) → Transparent(x)) ::: Zumpuses are transparent.\n∀x (Zumpus(x) → Dumpus(x)) ::: Zumpuses are dumpuses.\n∀x (Dumpus(x) → Bright(x)) ::: Each dumpus is bright.\n∀x (Dumpus(x) → Rompus(x)) ::: Every dumpus is a rompus.\n∀x (Rompus(x) → Sour(x)) ::: Every rompus is sour.\n∀x (Rompus(x) → Numpus(x)) ::: Rompuses are numpuses.\n∀x (Numpus(x) → Hot(x)) ::: Numpuses are hot.\n∀x (Numpus(x) → Tumpus(x)) ::: Numpuses are tumpuses.\nVumpus(alex) ::: Alex is a vumpus.\nConclusion:\nTransparent(alex) ::: Alex is transparent.\n------"
    ]
  },
  {
    "id": "ProntoQA_327",
    "context": "Each yumpus is not blue. Yumpuses are rompuses. Rompuses are not large. Every rompus is a wumpus. Each wumpus is not mean. Impuses are happy. Each wumpus is a vumpus. Each vumpus is opaque. Vumpuses are jompuses. Jompuses are earthy. Jompuses are dumpuses. Each dumpus is cold. Each dumpus is a zumpus. Zumpuses are not happy. Each zumpus is a tumpus. Each tumpus is bright. Each tumpus is a numpus. Rex is a wumpus.",
    "question": "Is the following statement true or false? Rex is not happy.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nYumpus(x) ::: x is a yumpus\nBlue(x) ::: x is blue\nRompus(x) ::: x is a rompus\nLarge(x) ::: x is large\nWumpus(x) ::: x is a wumpus\nMean(x) ::: x is mean\nImpus(x) ::: x is an impus\nHappy(x) ::: x is happy\nVumpus(x) ::: x is a vumpus\nOpaque(x) ::: x is opaque\nJompus(x) ::: x is a jompus\nEarthy(x) ::: x is earthy\nDumpus(x) ::: x is a dumpus\nCold(x) ::: x is cold\nZumpus(x) ::: x is a zumpus\nHappy(x) ::: x is happy\nTumpus(x) ::: x is a tumpus\nBright(x) ::: x is bright\nNumpus(x) ::: x is a numpus\nRex(x) ::: x is Rex\nPremises:\n∀x (Yumpus(x) → ¬Blue(x)) ::: Each yumpus is not blue.\n∀x (Yumpus(x) → Rompus(x)) ::: Yumpuses are rompuses.\n∀x (Rompus(x) → ¬Large(x)) ::: Rompuses are not large.\n∀x (Wumpus(x) → ¬Mean(x)) ::: Every rompus is a wumpus.\n∀x (Wumpus(x) → Vumpus(x)) ::: Each wumpus is a vumpus.\n∀x (Vumpus(x) → Opaque(x)) ::: Each vumpus is opaque.\n∀x (Vumpus(x) → Jompus(x)) ::: Vumpuses are jompuses.\n∀x (Jompus(x) → Earthy(x)) ::: Jompuses are earthy.\n∀x (Jompus(x) → Dumpus(x)) ::: Jompuses are dumpuses.\n∀x (Dumpus(x) → Cold(x)) ::: Each dumpus is cold.\n∀x (Dumpus(x) → Zumpus(x)) ::: Each dumpus is a zumpus.\n∀x (Zumpus(x) → ¬Happy(x)) ::: Zumpuses are not happy.\n∀x (Tumpus(x) → Bright(x)) ::: Each tumpus is bright.\n∀x (Tumpus(x) → Numpus(x)) ::: Each tumpus is a numpus.\nWumpus(rex) ::: Rex is a wumpus.\nConclusion:\n¬Happy(rex) ::: Rex is not happy.\n------"
    ]
  },
  {
    "id": "ProntoQA_328",
    "context": "Wumpuses are large. Wumpuses are numpuses. Every numpus is metallic. Numpuses are yumpuses. Every yumpus is bright. Every yumpus is a jompus. Jompuses are not bitter. Jompuses are zumpuses. Every zumpus is transparent. Zumpuses are rompuses. Each rompus is earthy. Rompuses are impuses. Each impus is kind. Every impus is a dumpus. Dumpuses are not hot. Dumpuses are vumpuses. Each tumpus is not transparent. Wren is a wumpus.",
    "question": "Is the following statement true or false? Wren is transparent.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nWumpus(x) ::: x is a wumpus\nLarge(x) ::: x is large\nNumpus(x) ::: x is a numpus\nMetallic(x) ::: x is metallic\nYumpus(x) ::: x is a yumpus\nBright(x) ::: x is bright\nJompus(x) ::: x is a jompus\nBitter(x) ::: x is bitter\nZumpus(x) ::: x is a zumpus\nTransparent(x) ::: x is transparent\nRompus(x) ::: x is a rompus\nEarthy(x) ::: x is earthy\nImpus(x) ::: x is an impus\nKind(x) ::: x is kind\nDumpus(x) ::: x is a dumpus\nHot(x) ::: x is hot\nVumpus(x) ::: x is a vumpus\nTumpus(x) ::: x is a tumpus\nPremises:\n∀x (Wumpus(x) → Large(x)) ::: Wumpuses are large.\n∀x (Numpus(x) → Metallic(x)) ::: Numpuses are metallic.\n∀x (Numpus(x) → Yumpus(x)) ::: Every numpus is a yumpus.\n∀x (Yumpus(x) → Bright(x)) ::: Every yumpus is bright.\n∀x (Yumpus(x) → Jompus(x)) ::: Every yumpus is a jompus.\n∀x (Jompus(x) → ¬Bitter(x)) ::: Jompuses are not bitter.\n∀x (Jompus(x) → Zumpus(x)) ::: Jompuses are zumpuses.\n∀x (Zumpus(x) → Transparent(x)) ::: Every zumpus is transparent.\n∀x (Zumpus(x) → Rompus(x)) ::: Zumpuses are rompuses.\n∀x (Rompus(x) → Earthy(x)) ::: Each rompus is earthy.\n∀x (Rompus(x) → Impus(x)) ::: Rompuses are impuses.\n∀x (Impus(x) → Kind(x)) ::: Each impus is kind.\n∀x (Impus(x) → Dumpus(x)) ::: Every impus is a dumpus.\n∀x (Dumpus(x) → ¬Hot(x)) ::: Dumpuses are not hot.\n∀x (Dumpus(x) → Vumpus(x)) ::: Dumpuses are vumpuses.\n∀x (Tumpus(x) → ¬Transparent(x)) ::: Each tumpus is not transparent.\nWumpus(wren) ::: Wren is a wumpus.\nConclusion:\nTransparent(wren) ::: Wren is transparent.\n------"
    ]
  },
  {
    "id": "ProntoQA_329",
    "context": "Each tumpus is opaque. Each tumpus is a dumpus. Each dumpus is earthy. Dumpuses are zumpuses. Zumpuses are aggressive. Zumpuses are impuses. Each impus is luminous. Impuses are numpuses. Each numpus is not brown. Every numpus is a jompus. Every jompus is bitter. Jompuses are wumpuses. Every rompus is not bitter. Wumpuses are large. Wumpuses are vumpuses. Every vumpus is not happy. Every vumpus is a yumpus. Polly is a dumpus.",
    "question": "Is the following statement true or false? Polly is not bitter.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nTumpus(x) ::: x is a tumpus\nOpaque(x) ::: x is opaque\nDumpus(x) ::: x is a dumpus\nEarthy(x) ::: x is earthy\nZumpus(x) ::: x is a zumpus\nAggressive(x) ::: x is aggressive\nImpus(x) ::: x is an impus\nLuminous(x) ::: x is luminous\nNumpus(x) ::: x is a numpus\nBrown(x) ::: x is brown\nJompus(x) ::: x is a jompus\nBitter(x) ::: x is bitter\nWumpus(x) ::: x is a wumpus\nLarge(x) ::: x is large\nVumpus(x) ::: x is a vumpus\nHappy(x) ::: x is happy\nYumpus(x) ::: x is a yumpus\nPremises:\n∀x (Tumpus(x) → Opaque(x)) ::: Each tumpus is opaque.\n∀x (Tumpus(x) → Dumpus(x)) ::: Each tumpus is a dumpus.\n∀x (Dumpus(x) → Earthy(x)) ::: Each dumpus is earthy.\n∀x (Dumpus(x) → Zumpus(x)) ::: Dumpuses are zumpuses.\n∀x (Zumpus(x) → Aggressive(x)) ::: Zumpuses are aggressive.\n∀x (Zumpus(x) → Impus(x)) ::: Zumpuses are impuses.\n∀x (Impus(x) → Luminous(x)) ::: Each impus is luminous.\n∀x (Impus(x) → Numpus(x)) ::: Impuses are numpuses.\n∀x (Numpus(x) → ¬Brown(x)) ::: Each numpus is not brown.\n∀x (Numpus(x) → Jompus(x)) ::: Every numpus is a jompus.\n∀x (Jompus(x) → Bitter(x)) ::: Every jompus is bitter.\n∀x (Jompus(x) → Wumpus(x)) ::: Jompuses are wumpuses.\n∀x (Rompus(x) → ¬Bitter(x)) ::: Every rompus is not bitter.\n∀x (Wumpus(x) → Large(x)) ::: Wumpuses are large.\n∀x (Wumpus(x) → Vumpus(x)) ::: Wumpuses are vumpuses.\n∀x (Vumpus(x) → ¬Happy(x)) ::: Every vumpus is not happy.\n∀x (Vumpus(x) → Yumpus(x)) ::: Every vumpus is a yumpus.\nDumpus(polly) ::: Polly is a dumpus.\nConclusion:\n¬Bitter(polly) ::: Polly is not bitter.\n------"
    ]
  },
  {
    "id": "ProntoQA_330",
    "context": "Numpuses are bright. Each numpus is a dumpus. Dumpuses are liquid. Every dumpus is a zumpus. Zumpuses are not small. Every zumpus is a jompus. Each jompus is nervous. Each yumpus is earthy. Jompuses are vumpuses. Vumpuses are not earthy. Each vumpus is an impus. Impuses are not sweet. Impuses are rompuses. Every rompus is amenable. Rompuses are tumpuses. Tumpuses are opaque. Tumpuses are wumpuses. Rex is a numpus.",
    "question": "Is the following statement true or false? Rex is not earthy.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nNumpus(x) ::: x is a numpus\nBright(x) ::: x is bright\nDumpus(x) ::: x is a dumpus\nLiquid(x) ::: x is liquid\nZumpus(x) ::: x is a zumpus\nSmall(x) ::: x is small\nJompus(x) ::: x is a jompus\nNervous(x) ::: x is nervous\nYumpus(x) ::: x is a yumpus\nEarthy(x) ::: x is earthy\nVumpus(x) ::: x is a vumpus\nSweet(x) ::: x is sweet\nRompus(x) ::: x is a rompus\nAmenable(x) ::: x is amenable\nTumpus(x) ::: x is a tumpus\nOpaque(x) ::: x is opaque\nWumpus(x) ::: x is a wumpus\nPremises:\n∀x (Numpus(x) → Bright(x)) ::: Numpuses are bright.\n∀x (Numpus(x) → Dumpus(x)) ::: Each numpus is a dumpus.\n∀x (Dumpus(x) → Liquid(x)) ::: Dumpuses are liquid.\n∀x (Dumpus(x) → Zumpus(x)) ::: Every dumpus is a zumpus.\n∀x (Zumpus(x) → ¬Small(x)) ::: Zumpuses are not small.\n∀x (Zumpus(x) → Jompus(x)) ::: Every zumpus is a jompus.\n∀x (Jompus(x) → Nervous(x)) ::: Each jompus is nervous.\n∀x (Yumpus(x) → Earthy(x)) ::: Each yumpus is earthy.\n∀x (Jompus(x) → Vumpus(x)) ::: Jompuses are vumpuses.\n∀x (Vumpus(x) → ¬Earthy(x)) ::: Vumpuses are not earthy.\n∀x (Vumpus(x) → Impus(x)) ::: Each vumpus is an impus.\n∀x (Impus(x) → ¬Sweet(x)) ::: Impuses are not sweet.\n∀x (Impus(x) → Rompus(x)) ::: Impuses are rompuses.\n∀x (Rompus(x) → Amenable(x)) ::: Every rompus is amenable.\n∀x (Rompus(x) → Tumpus(x)) ::: Rompuses are tumpuses.\n∀x (Tumpus(x) → Opaque(x)) ::: Tumpuses are opaque.\n∀x (Tumpus(x) → Wumpus(x)) ::: Tumpuses are wumpuses.\nNumpus(rex) ::: Rex is a numpus.\nConclusion:\n¬Earthy(rex) ::: Rex is not earthy.\n------"
    ]
  },
  {
    "id": "ProntoQA_331",
    "context": "Each vumpus is not bright. Each vumpus is a numpus. Wumpuses are small. Each numpus is not opaque. Numpuses are rompuses. Rompuses are not sweet. Rompuses are yumpuses. Each yumpus is liquid. Each yumpus is a jompus. Each jompus is shy. Each jompus is a zumpus. Zumpuses are not brown. Zumpuses are impuses. Impuses are not fruity. Impuses are dumpuses. Dumpuses are not small. Every dumpus is a tumpus. Sam is a yumpus.",
    "question": "Is the following statement true or false? Sam is small.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nVumpus(x) ::: x is a vumpus\nBright(x) ::: x is bright\nNumpus(x) ::: x is a numpus\nSmall(x) ::: x is small\nOpaque(x) ::: x is opaque\nRompus(x) ::: x is a rompus\nSweet(x) ::: x is sweet\nYumpus(x) ::: x is a yumpus\nLiquid(x) ::: x is liquid\nJompus(x) ::: x is a jompus\nShy(x) ::: x is shy\nZumpus(x) ::: x is a zumpus\nBrown(x) ::: x is brown\nImpus(x) ::: x is an impus\nFruity(x) ::: x is fruity\nDumpus(x) ::: x is a dumpus\nSmall(x) ::: x is small\nTumpus(x) ::: x is a tumpus\nPremises:\n∀x (Vumpus(x) → ¬Bright(x)) ::: Each vumpus is not bright.\n∀x (Vumpus(x) → Numpus(x)) ::: Each vumpus is a numpus.\n∀x (Numpus(x) → ¬Opaque(x)) ::: Numpuses are not opaque.\n∀x (Numpus(x) → Rompus(x)) ::: Numpuses are rompuses.\n∀x (Rompus(x) → ¬Sweet(x)) ::: Rompuses are not sweet.\n∀x (Rompus(x) → Yumpus(x)) ::: Rompuses are yumpuses.\n∀x (Yumpus(x) → Liquid(x)) ::: Each yumpus is liquid.\n∀x (Yumpus(x) → Jompus(x)) ::: Each yumpus is a jompus.\n∀x (Jompus(x) → Shy(x)) ::: Each jompus is shy.\n∀x (Jompus(x) → Zumpus(x)) ::: Each jompus is a zumpus.\n∀x (Zumpus(x) → ¬Brown(x)) ::: Zumpuses are not brown.\n∀x (Zumpus(x) → Impus(x)) ::: Zumpuses are impuses.\n∀x (Impus(x) → ¬Fruity(x)) ::: Impuses are not fruity.\n∀x (Impus(x) → Dumpus(x)) ::: Impuses are dumpuses.\n∀x (Dumpus(x) → ¬Small(x)) ::: Dumpuses are not small.\n∀x (Dumpus(x) → Tumpus(x)) ::: Every dumpus is a tumpus.\nYumpus(sam) ::: Sam is a yumpus.\nConclusion:\nSmall(sam) ::: Sam is small.\n------"
    ]
  },
  {
    "id": "ProntoQA_332",
    "context": "Each tumpus is luminous. Each tumpus is a rompus. Rompuses are not small. Rompuses are dumpuses. Each dumpus is fruity. Every dumpus is a numpus. Numpuses are red. Numpuses are vumpuses. Each vumpus is dull. Each vumpus is an impus. Impuses are bitter. Each impus is a wumpus. Each wumpus is not kind. Each jompus is kind. Wumpuses are yumpuses. Yumpuses are happy. Yumpuses are zumpuses. Max is a dumpus.",
    "question": "Is the following statement true or false? Max is not kind.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nTumpus(x) ::: x is a tumpus\nLuminous(x) ::: x is luminous\nRompus(x) ::: x is a rompus\nSmall(x) ::: x is small\nDumpus(x) ::: x is a dumpus\nFruity(x) ::: x is fruity\nNumpus(x) ::: x is a numpus\nRed(x) ::: x is red\nVumpus(x) ::: x is a vumpus\nDull(x) ::: x is dull\nImpus(x) ::: x is an impus\nBitter(x) ::: x is bitter\nWumpus(x) ::: x is a wumpus\nKind(x) ::: x is kind\nYumpus(x) ::: x is a yumpus\nHappy(x) ::: x is happy\nZumpus(x) ::: x is a zumpus\nPremises:\n∀x (Tumpus(x) → Luminous(x)) ::: Each tumpus is luminous.\n∀x (Tumpus(x) → Rompus(x)) ::: Each tumpus is a rompus.\n∀x (Rompus(x) → ¬Small(x)) ::: Rompuses are not small.\n∀x (Dumpus(x) → Fruity(x)) ::: Each dumpus is fruity.\n∀x (Dumpus(x) → Numpus(x)) ::: Every dumpus is a numpus.\n∀x (Numpus(x) → Red(x)) ::: Numpuses are red.\n∀x (Numpus(x) → Vumpus(x)) ::: Numpuses are vumpuses.\n∀x (Vumpus(x) → Dull(x)) ::: Each vumpus is dull.\n∀x (Impus(x) → Bitter(x)) ::: Each impus is bitter.\n∀x (Impus(x) → Wumpus(x)) ::: Each impus is a wumpus.\n∀x (Wumpus(x) → ¬Kind(x)) ::: Each wumpus is not kind.\n∀x (Jompus(x) → Kind(x)) ::: Each jompus is kind.\n∀x (Wumpus(x) → Yumpus(x)) ::: Wumpuses are yumpuses.\n∀x (Yumpus(x) → Happy(x)) ::: Yumpuses are happy.\n∀x (Yumpus(x) → Zumpus(x)) ::: Yumpuses are zumpuses.\nDumpus(max) ::: Max is a dumpus.\nConclusion:\n¬Kind(max) ::: Max is not kind.\n------"
    ]
  },
  {
    "id": "ProntoQA_333",
    "context": "Dumpuses are transparent. Dumpuses are impuses. Impuses are not brown. Every impus is a rompus. Rompuses are floral. Rompuses are yumpuses. Yumpuses are happy. Yumpuses are jompuses. Every jompus is not temperate. Jompuses are numpuses. Every numpus is dull. Each numpus is a wumpus. Every wumpus is large. Wumpuses are tumpuses. Each tumpus is kind. Vumpuses are temperate. Each tumpus is a zumpus. Stella is a dumpus.",
    "question": "Is the following statement true or false? Stella is not temperate.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nDumpus(x) ::: x is a dumpus\nTransparent(x) ::: x is transparent\nImpus(x) ::: x is an impus\nBrown(x) ::: x is brown\nRompus(x) ::: x is a rompus\nFloral(x) ::: x is floral\nYumpus(x) ::: x is a yumpus\nHappy(x) ::: x is happy\nJompus(x) ::: x is a jompus\nTemperate(x) ::: x is temperate\nNumpus(x) ::: x is a numpus\nDull(x) ::: x is dull\nWumpus(x) ::: x is a wumpus\nLarge(x) ::: x is large\nTumpus(x) ::: x is a tumpus\nKind(x) ::: x is kind\nVumpus(x) ::: x is a vumpus\nZumpus(x) ::: x is a zumpus\nStella(x) ::: x is Stella\nPremises:\n∀x (Dumpus(x) → Transparent(x)) ::: Dumpuses are transparent.\n∀x (Dumpus(x) → Impus(x)) ::: Dumpuses are impuses.\n∀x (Impus(x) → ¬Brown(x)) ::: Impuses are not brown.\n∀x (Impus(x) → Rompus(x)) ::: Every impus is a rompus.\n∀x (Rompus(x) → Floral(x)) ::: Rompuses are floral.\n∀x (Rompus(x) → Yumpus(x)) ::: Rompuses are yumpuses.\n∀x (Yumpus(x) → Happy(x)) ::: Yumpuses are happy.\n∀x (Yumpus(x) → Jompus(x)) ::: Yumpuses are jompuses.\n∀x (Jompus(x) → ¬Temperate(x)) ::: Every jompus is not temperate.\n∀x (Jompus(x) → Numpus(x)) ::: Jompuses are numpuses.\n∀x (Numpus(x) → Dull(x)) ::: Every numpus is dull.\n∀x (Numpus(x) → Wumpus(x)) ::: Each numpus is a wumpus.\n∀x (Wumpus(x) → Large(x)) ::: Every wumpus is large.\n∀x (Wumpus(x) → Tumpus(x)) ::: Wumpuses are tumpuses.\n∀x (Tumpus(x) → Kind(x)) ::: Each tumpus is kind.\n∀x (Vumpus(x) → Temperate(x)) ::: Vumpuses are temperate.\n∀x (Tumpus(x) → Zumpus(x)) ::: Each tumpus is a zumpus.\nDumpus(stella) ::: Stella is a dumpus.\nConclusion:\n¬Temperate(stella) ::: Stella is not temperate.\n------"
    ]
  },
  {
    "id": "ProntoQA_334",
    "context": "Dumpuses are spicy. Dumpuses are zumpuses. Each zumpus is feisty. Every zumpus is a tumpus. Tumpuses are bright. Each tumpus is a wumpus. Every wumpus is not orange. Wumpuses are impuses. Numpuses are not transparent. Every impus is aggressive. Each impus is a jompus. Jompuses are fruity. Jompuses are rompuses. Rompuses are small. Rompuses are yumpuses. Yumpuses are transparent. Every yumpus is a vumpus. Sally is a wumpus.",
    "question": "Is the following statement true or false? Sally is transparent.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nDumpus(x) ::: x is a dumpus\nSpicy(x) ::: x is spicy\nZumpus(x) ::: x is a zumpus\nFeisty(x) ::: x is feisty\nTumpus(x) ::: x is a tumpus\nBright(x) ::: x is bright\nWumpus(x) ::: x is a wumpus\nOrange(x) ::: x is orange\nImpus(x) ::: x is an impus\nAggressive(x) ::: x is aggressive\nJompus(x) ::: x is a jompus\nFruity(x) ::: x is fruity\nRompus(x) ::: x is a rompus\nSmall(x) ::: x is small\nYumpus(x) ::: x is a yumpus\nVumpus(x) ::: x is a vumpus\nPremises:\n∀x (Dumpus(x) → Spicy(x)) ::: Dumpuses are spicy.\n∀x (Zumpus(x) → Feisty(x)) ::: Dumpuses are zumpuses.\n∀x (Zumpus(x) → Tumpus(x)) ::: Each zumpus is a tumpus.\n∀x (Tumpus(x) → Bright(x)) ::: Tumpuses are bright.\n∀x (Tumpus(x) → Wumpus(x)) ::: Each tumpus is a wumpus.\n∀x (Wumpus(x) → ¬Orange(x)) ::: Every wumpus is not orange.\n∀x (Wumpus(x) → Impus(x)) ::: Wumpuses are impuses.\n∀x (Numpus(x) → ¬Transparent(x)) ::: Numpuses are not transparent.\n∀x (Impus(x) → Aggressive(x)) ::: Every impus is aggressive.\n∀x (Impus(x) → Jompus(x)) ::: Each impus is a jompus.\n∀x (Jompus(x) → Fruity(x)) ::: Jompuses are fruity.\n∀x (Jompus(x) → Rompus(x)) ::: Jompuses are rompuses.\n∀x (Rompus(x) → Small(x)) ::: Rompuses are small.\n∀x (Rompus(x) → Yumpus(x)) ::: Rompuses are yumpuses.\n∀x (Yumpus(x) → Transparent(x)) ::: Yumpuses are transparent.\n∀x (Yumpus(x) → Vumpus(x)) ::: Every yumpus is a vumpus.\nWumpus(sally) ::: Sally is a wumpus.\nConclusion:\nTransparent(sally) ::: Sally is transparent.\n------"
    ]
  },
  {
    "id": "ProntoQA_335",
    "context": "Dumpuses are not hot. Every dumpus is an impus. Every impus is fruity. Every impus is a jompus. Jompuses are brown. Each jompus is a wumpus. Each wumpus is nervous. Each wumpus is a numpus. Each numpus is opaque. Numpuses are yumpuses. Each rompus is large. Yumpuses are bitter. Yumpuses are vumpuses. Each vumpus is wooden. Vumpuses are tumpuses. Each tumpus is not large. Every tumpus is a zumpus. Polly is a wumpus.",
    "question": "Is the following statement true or false? Polly is not large.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nDumpus(x) ::: x is a dumpus\nHot(x) ::: x is hot\nImpus(x) ::: x is an impus\nFruity(x) ::: x is fruity\nJompus(x) ::: x is a jompus\nBrown(x) ::: x is brown\nWumpus(x) ::: x is a wumpus\nNervous(x) ::: x is nervous\nNumpus(x) ::: x is a numpus\nOpaque(x) ::: x is opaque\nYumpus(x) ::: x is a yumpus\nBitter(x) ::: x is bitter\nVumpus(x) ::: x is a vumpus\nWooden(x) ::: x is wooden\nTumpus(x) ::: x is a tumpus\nLarge(x) ::: x is large\nZumpus(x) ::: x is a zumpus\nPremises:\n∀x (Dumpus(x) → ¬Hot(x)) ::: Dumpuses are not hot.\n∀x (Impus(x) → Fruity(x)) ::: Every impus is fruity.\n∀x (Impus(x) → Jompus(x)) ::: Every impus is a jompus.\n∀x (Jompus(x) → Brown(x)) ::: Jompuses are brown.\n∀x (Jompus(x) → Wumpus(x)) ::: Each jompus is a wumpus.\n∀x (Wumpus(x) → Nervous(x)) ::: Each wumpus is nervous.\n∀x (Wumpus(x) → Numpus(x)) ::: Each wumpus is a numpus.\n∀x (Numpus(x) → Opaque(x)) ::: Each numpus is opaque.\n∀x (Numpus(x) → Yumpus(x)) ::: Numpuses are yumpuses.\n∀x (Rompus(x) → Large(x)) ::: Each rompus is large.\n∀x (Yumpus(x) → Bitter(x)) ::: Yumpuses are bitter.\n∀x (Yumpus(x) → Vumpus(x)) ::: Yumpuses are vumpuses.\n∀x (Vumpus(x) → Wooden(x)) ::: Each vumpus is wooden.\n∀x (Vumpus(x) → Tumpus(x)) ::: Vumpuses are tumpuses.\n∀x (Tumpus(x) → ¬Large(x)) ::: Each tumpus is not large.\n∀x (Tumpus(x) → Zumpus(x)) ::: Every tumpus is a zumpus.\nWumpus(polly) ::: Polly is a wumpus.\nConclusion:\n¬Large(polly) ::: Polly is not large.\n------"
    ]
  },
  {
    "id": "ProntoQA_336",
    "context": "Every rompus is temperate. Rompuses are zumpuses. Zumpuses are shy. Each zumpus is a wumpus. Wumpuses are bright. Numpuses are opaque. Wumpuses are impuses. Each impus is not large. Impuses are jompuses. Jompuses are kind. Each jompus is a tumpus. Tumpuses are not opaque. Every tumpus is a dumpus. Max is a zumpus.",
    "question": "Is the following statement true or false? Max is opaque.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant.lpg\n------"
    ]
  },
  {
    "id": "ProntoQA_337",
    "context": "Dumpuses are small. Every dumpus is a vumpus. Each wumpus is spicy. Every vumpus is mean. Each vumpus is a yumpus. Every yumpus is fruity. Yumpuses are numpuses. Numpuses are transparent. Numpuses are jompuses. Each jompus is not spicy. Jompuses are impuses. Polly is a dumpus.",
    "question": "Is the following statement true or false? Polly is spicy.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant.lpg\n------"
    ]
  },
  {
    "id": "ProntoQA_338",
    "context": "Each jompus is temperate. Jompuses are zumpuses. Zumpuses are dull. Zumpuses are vumpuses. Every vumpus is not kind. Vumpuses are rompuses. Rompuses are brown. Rompuses are tumpuses. Tumpuses are fruity. Tumpuses are wumpuses. Wumpuses are not large. Each wumpus is a yumpus. Yumpuses are wooden. Yumpuses are dumpuses. Dumpuses are spicy. Each dumpus is an impus. Each numpus is not fruity. Stella is a jompus.",
    "question": "Is the following statement true or false? Stella is not fruity.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nJompus(x) ::: x is a jompus\nTemperate(x) ::: x is temperate\nZumpus(x) ::: x is a zumpus\nDull(x) ::: x is dull\nVumpus(x) ::: x is a vumpus\nKind(x) ::: x is kind\nRompus(x) ::: x is a rompus\nBrown(x) ::: x is brown\nTumpus(x) ::: x is a tumpus\nFruity(x) ::: x is fruity\nWumpus(x) ::: x is a wumpus\nLarge(x) ::: x is large\nYumpus(x) ::: x is a yumpus\nWooden(x) ::: x is wooden\nDumpus(x) ::: x is a dumpus\nSpicy(x) ::: x is spicy\nImpus(x) ::: x is an impus\nNumpus(x) ::: x is a numpus\nFruity(x) ::: x is fruity\nPremises:\n∀x (Jompus(x) → Temperate(x)) ::: Each jompus is temperate.\n∀x (Jompus(x) → Zumpus(x)) ::: Jompuses are zumpuses.\n∀x (Zumpus(x) → Dull(x)) ::: Zumpuses are dull.\n∀x (Zumpus(x) → Vumpus(x)) ::: Zumpuses are vumpuses.\n∀x (Vumpus(x) → ¬Kind(x)) ::: Every vumpus is not kind.\n∀x (Vumpus(x) → Rompus(x)) ::: Vumpuses are rompuses.\n∀x (Rompus(x) → Brown(x)) ::: Rompuses are brown.\n∀x (Rompus(x) → Tumpus(x)) ::: Rompuses are tumpuses.\n∀x (Tumpus(x) → Fruity(x)) ::: Tumpuses are fruity.\n∀x (Tumpus(x) → Wumpus(x)) ::: Tumpuses are wumpuses.\n∀x (Wumpus(x) → ¬Large(x)) ::: Wumpuses are not large.\n∀x (Wumpus(x) → Yumpus(x)) ::: Each wumpus is a yumpus.\n∀x (Yumpus(x) → Wooden(x)) ::: Yumpuses are wooden.\n∀x (Yumpus(x) → Dumpus(x)) ::: Yumpuses are dumpuses.\n∀x (Dumpus(x) → Spicy(x)) ::: Dumpuses are spicy.\n∀x (Dumpus(x) → Impus(x)) ::: Each dumpus is an impus.\n∀x (Numpus(x) → ¬Fruity(x)) ::: Each numpus is not fruity.\nJompus(stella) ::: Stella is a jompus.\nConclusion:\n¬Fruity(stella) ::: Stella is not fruity.\n------"
    ]
  },
  {
    "id": "ProntoQA_339",
    "context": "Yumpuses are sweet. Every yumpus is a jompus. Jompuses are brown. Jompuses are wumpuses. Wumpuses are bright. Wumpuses are numpuses. Each numpus is kind. Numpuses are impuses. Each impus is nervous. Impuses are zumpuses. Each zumpus is cold. Zumpuses are vumpuses. Vumpuses are liquid. Every rompus is not transparent. Vumpuses are tumpuses. Tumpuses are transparent. Tumpuses are dumpuses. Max is a numpus.",
    "question": "Is the following statement true or false? Max is transparent.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant.lpg\n------"
    ]
  },
  {
    "id": "ProntoQA_340",
    "context": "Rompuses are brown. Rompuses are zumpuses. Zumpuses are temperate. Zumpuses are dumpuses. Dumpuses are angry. Dumpuses are yumpuses. Every yumpus is small. Yumpuses are numpuses. Numpuses are opaque. Numpuses are vumpuses. Vumpuses are bitter. Vumpuses are jompuses. Jompuses are feisty. Each jompus is an impus. Impuses are luminous. Every tumpus is not feisty. Each impus is a wumpus. Wren is a dumpus.",
    "question": "Is the following statement true or false? Wren is feisty.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "------\nAssistant:\nRompuses(x) ::: x is a rompus\nBrown(x) ::: x is brown\nZumpuses(x) ::: x is a zumpus\nTemperate(x) ::: x is temperate\nZumpuses(x) ::: x is a zumpus\nDumpuses(x) ::: x is a dumpus\nAngry(x) ::: x is angry\nYumpuses(x) ::: x is a yumpus\nSmall(x) ::: x is small\nNumpuses(x) ::: x is a numpus\nOpaque(x) ::: x is opaque\nVumpuses(x) ::: x is a vumpus\nBitter(x) ::: x is bitter\nJompuses(x) ::: x is a jompus\nFeisty(x) ::: x is feisty\nImpuses(x) ::: x is an impus\nLuminous(x) ::: x is luminous\nTumpuses(x) ::: x is a tumpus\nFeisty(x) ::: x is feisty\nWren(x) ::: x is Wren\nPremises:\n∀x (Rompus(x) → Brown(x)) ::: Rompuses are brown.\n∀x (Zumpus(x) → Temperate(x)) ::: Zumpuses are temperate.\n∀x (Zumpus(x) → Dumpus(x)) ::: Zumpuses are dumpuses.\n∀x (Dumpus(x) → Angry(x)) ::: Dumpuses are angry.\n∀x (Dumpus(x) → Yumpus(x)) ::: Dumpuses are yumpuses.\n∀x (Yumpus(x) → Small(x)) ::: Every yumpus is small.\n∀x (Yumpus(x) → Numpus(x)) ::: Yumpuses are numpuses.\n∀x (Numpus(x) → Opaque(x)) ::: Numpuses are opaque.\n∀x (Numpus(x) → Vumpus(x)) ::: Numpuses are vumpuses.\n∀x (Vumpus(x) → Bitter(x)) ::: Vumpuses are bitter.\n∀x (Vumpus(x) → Jompus(x)) ::: Vumpuses are jompuses.\n∀x (Jompus(x) → Feisty(x)) ::: Jompuses are feisty.\n∀x (Impus(x) → Luminous(x)) ::: Impuses are luminous.\n∀x (Tumpus(x) → ¬Feisty(x)) ::: Each tumpus is not feisty.\n∀x (Impus(x) → Wumpus(x)) ::: Each impus is a wumpus.\nDumpus(wren) ::: Wren is a dumpus.\nConclusion:\nFeisty(wren) ::: Wren is feisty.\n------"
    ]
  },
  {
    "id": "ProntoQA_341",
    "context": "Vumpuses are blue. Vumpuses are numpuses. Each numpus is small. Every numpus is a tumpus. Tumpuses are dull. Tumpuses are impuses. Every rompus is not temperate. Every impus is sour. Impuses are jompuses. Jompuses are temperate. Jompuses are wumpuses. Wumpuses are angry. Wumpuses are yumpuses. Every yumpus is shy. Every yumpus is a zumpus. Zumpuses are liquid. Zumpuses are dumpuses. Polly is a vumpus.",
    "question": "Is the following statement true or false? Polly is not temperate.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nVumpus(x) ::: x is a vumpus\nBlue(x) ::: x is blue\nNumpus(x) ::: x is a numpus\nSmall(x) ::: x is small\nTumpus(x) ::: x is a tumpus\nDull(x) ::: x is dull\nImpus(x) ::: x is an impus\nRompus(x) ::: x is a rompus\nTemperate(x) ::: x is temperate\nSour(x) ::: x is sour\nJompus(x) ::: x is a jompus\nWumpus(x) ::: x is a wumpus\nAngry(x) ::: x is angry\nYumpus(x) ::: x is a yumpus\nShy(x) ::: x is shy\nZumpus(x) ::: x is a zumpus\nLiquid(x) ::: x is liquid\nDumpus(x) ::: x is a dumpus\nPremises:\n∀x (Vumpus(x) → Blue(x)) ::: Vumpuses are blue.\n∀x (Vumpus(x) → Numpus(x)) ::: Vumpuses are numpuses.\n∀x (Numpus(x) → Small(x)) ::: Each numpus is small.\n∀x (Numpus(x) → Tumpus(x)) ::: Every numpus is a tumpus.\n∀x (Tumpus(x) → Dull(x)) ::: Tumpuses are dull.\n∀x (Tumpus(x) → Impus(x)) ::: Tumpuses are impuses.\n∀x (Rompus(x) → ¬Temperate(x)) ::: Every rompus is not temperate.\n∀x (Impus(x) → Sour(x)) ::: Every impus is sour.\n∀x (Impus(x) → Jompus(x)) ::: Impuses are jompuses.\n∀x (Jompus(x) → Temperate(x)) ::: Jompuses are temperate.\n∀x (Jompus(x) → Wumpus(x)) ::: Jompuses are wumpuses.\n∀x (Wumpus(x) → Angry(x)) ::: Wumpuses are angry.\n∀x (Wumpus(x) → Yumpus(x)) ::: Wumpuses are yumpuses.\n∀x (Yumpus(x) → Shy(x)) ::: Every yumpus is shy.\n∀x (Yumpus(x) → Zumpus(x)) ::: Every yumpus is a zumpus.\n∀x (Zumpus(x) → Liquid(x)) ::: Zumpuses are liquid.\n∀x (Zumpus(x) → Dumpus(x)) ::: Zumpuses are dumpuses.\nVumpus(polly) ::: Polly is a vumpus.\nConclusion:\n¬Temperate(polly) ::: Polly is not temperate.\n------"
    ]
  },
  {
    "id": "ProntoQA_342",
    "context": "Impuses are shy. Each impus is a rompus. Every rompus is fruity. Every rompus is a yumpus. Every yumpus is brown. Yumpuses are numpuses. Numpuses are liquid. Each numpus is a tumpus. Each tumpus is angry. Every tumpus is a dumpus. Dumpuses are not temperate. Each dumpus is a vumpus. Vumpuses are bright. Vumpuses are zumpuses. Zumpuses are not large. Every jompus is temperate. Each zumpus is a wumpus. Polly is a rompus.",
    "question": "Is the following statement true or false? Polly is temperate.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nImpus(x) ::: x is an impus\nShy(x) ::: x is shy\nRompus(x) ::: x is a rompus\nFruity(x) ::: x is fruity\nYumpus(x) ::: x is a yumpus\nBrown(x) ::: x is brown\nNumpus(x) ::: x is a numpus\nLiquid(x) ::: x is liquid\nTumpus(x) ::: x is a tumpus\nAngry(x) ::: x is angry\nDumpus(x) ::: x is a dumpus\nTemperate(x) ::: x is temperate\nVumpus(x) ::: x is a vumpus\nBright(x) ::: x is bright\nZumpus(x) ::: x is a zumpus\nLarge(x) ::: x is large\nJompus(x) ::: x is a jompus\nTemperate(x) ::: x is temperate\nWumpus(x) ::: x is a wumpus\nPremises:\n∀x (Impus(x) → Shy(x)) ::: Impuses are shy.\n∀x (Rompus(x) → Fruity(x)) ::: Each impus is a rompus. Every rompus is fruity.\n∀x (Rompus(x) → Yumpus(x)) ::: Every rompus is a yumpus.\n∀x (Yumpus(x) → Brown(x)) ::: Every yumpus is brown.\n∀x (Yumpus(x) → Numpus(x)) ::: Yumpuses are numpuses.\n∀x (Numpus(x) → Liquid(x)) ::: Numpuses are liquid.\n∀x (Numpus(x) → Tumpus(x)) ::: Each numpus is a tumpus.\n∀x (Tumpus(x) → Angry(x)) ::: Each tumpus is angry.\n∀x (Tumpus(x) → Dumpus(x)) ::: Every tumpus is a dumpus.\n∀x (Dumpus(x) → ¬Temperate(x)) ::: Dumpuses are not temperate.\n∀x (Dumpus(x) → Vumpus(x)) ::: Each dumpus is a vumpus.\n∀x (Vumpus(x) → Bright(x)) ::: Vumpuses are bright.\n∀x (Vumpus(x) → Zumpus(x)) ::: Vumpuses are zumpuses.\n∀x (Zumpus(x) → ¬Large(x)) ::: Zumpuses are not large.\n∀x (Jompus(x) → Temperate(x)) ::: Every jompus is temperate.\n∀x (Zumpus(x) → Wumpus(x)) ::: Each zumpus is a wumpus.\nRompus(polly) ::: Polly is a rompus.\nConclusion:\nTemperate(polly) ::: Polly is temperate.\n------"
    ]
  },
  {
    "id": "ProntoQA_343",
    "context": "Rompuses are amenable. Every rompus is a tumpus. Tumpuses are not cold. Each tumpus is a zumpus. Zumpuses are nervous. Each zumpus is a numpus. Each numpus is opaque. Numpuses are yumpuses. Each yumpus is sour. Yumpuses are jompuses. Jompuses are luminous. Every jompus is a vumpus. Each wumpus is not sour. Polly is a rompus.",
    "question": "Is the following statement true or false? Polly is not sour.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nRompus(x) ::: x is a rompus\nAmenable(x) ::: x is amenable\nTumpus(x) ::: x is a tumpus\nCold(x) ::: x is cold\nZumpus(x) ::: x is a zumpus\nNervous(x) ::: x is nervous\nNumpus(x) ::: x is a numpus\nOpaque(x) ::: x is opaque\nYumpus(x) ::: x is a yumpus\nSour(x) ::: x is sour\nJompus(x) ::: x is a jompus\nLuminous(x) ::: x is luminous\nVumpus(x) ::: x is a vumpus\nWumpus(x) ::: x is a wumpus\nPremises:\n∀x (Rompus(x) → Amenable(x)) ::: Rompuses are amenable.\n∀x (Rompus(x) → Tumpus(x)) ::: Every rompus is a tumpus.\n∀x (Tumpus(x) → ¬Cold(x)) ::: Tumpuses are not cold.\n∀x (Tumpus(x) → Zumpus(x)) ::: Each tumpus is a zumpus.\n∀x (Zumpus(x) → Nervous(x)) ::: Zumpuses are nervous.\n∀x (Zumpus(x) → Numpus(x)) ::: Each zumpus is a numpus.\n∀x (Numpus(x) → Opaque(x)) ::: Each numpus is opaque.\n∀x (Numpus(x) → Yumpus(x)) ::: Numpuses are yumpuses.\n∀x (Yumpus(x) → Sour(x)) ::: Each yumpus is sour.\n∀x (Yumpus(x) → Jompus(x)) ::: Yumpuses are jompuses.\n∀x (Jompus(x) → Luminous(x)) ::: Jompuses are luminous.\n∀x (Jompus(x) → Vumpus(x)) ::: Every jompus is a vumpus.\n∀x (Wumpus(x) → ¬Sour(x)) ::: Each wumpus is not sour.\nRompus(polly) ::: Polly is a rompus.\nConclusion:\n¬Sour(polly) ::: Polly is not sour.\n------"
    ]
  },
  {
    "id": "ProntoQA_344",
    "context": "Vumpuses are bitter. Every vumpus is a wumpus. Wumpuses are orange. Each wumpus is a yumpus. Each yumpus is large. Tumpuses are temperate. Yumpuses are numpuses. Numpuses are not dull. Numpuses are zumpuses. Each zumpus is not temperate. Zumpuses are impuses. Stella is a vumpus.",
    "question": "Is the following statement true or false? Stella is temperate.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nVumpus(x) ::: x is a vumpus\nBitter(x) ::: x is bitter\nWumpus(x) ::: x is a wumpus\nOrange(x) ::: x is orange\nYumpus(x) ::: x is a yumpus\nLarge(x) ::: x is large\nTumpus(x) ::: x is a tumpus\nTemperate(x) ::: x is temperate\nNumpus(x) ::: x is a numpus\nDull(x) ::: x is dull\nZumpus(x) ::: x is a zumpus\nImpus(x) ::: x is an impus\nStella(x) ::: x is Stella\nPremises:\n∀x (Vumpus(x) → Bitter(x)) ::: Vumpuses are bitter.\n∀x (Vumpus(x) → Wumpus(x)) ::: Every vumpus is a wumpus.\n∀x (Wumpus(x) → Orange(x)) ::: Wumpuses are orange.\n∀x (Wumpus(x) → Yumpus(x)) ::: Each wumpus is a yumpus.\n∀x (Yumpus(x) → Large(x)) ::: Each yumpus is large.\n∀x (Tumpus(x) → Temperate(x)) ::: Tumpuses are temperate.\n∀x (Yumpus(x) → Numpus(x)) ::: Yumpuses are numpuses.\n∀x (Numpus(x) → ¬Dull(x)) ::: Numpuses are not dull.\n∀x (Numpus(x) → Zumpus(x)) ::: Numpuses are zumpuses.\n∀x (Zumpus(x) → ¬Temperate(x)) ::: Each zumpus is not temperate.\n∀x (Zumpus(x) → Impus(x)) ::: Zumpuses are impuses.\nVumpus(stella) ::: Stella is a vumpus.\nConclusion:\nTemperate(stella) ::: Stella is temperate.\n------"
    ]
  },
  {
    "id": "ProntoQA_345",
    "context": "Every zumpus is not feisty. Each zumpus is a dumpus. Every dumpus is angry. Vumpuses are not small. Dumpuses are wumpuses. Each wumpus is not dull. Each wumpus is a numpus. Numpuses are fruity. Numpuses are impuses. Impuses are small. Each impus is a rompus. Every rompus is not opaque. Each rompus is a tumpus. Each tumpus is metallic. Tumpuses are yumpuses. Each yumpus is red. Yumpuses are jompuses. Rex is a zumpus.",
    "question": "Is the following statement true or false? Rex is not small.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nZumpus(x) ::: x is a zumpus\nFeisty(x) ::: x is feisty\nDumpus(x) ::: x is a dumpus\nAngry(x) ::: x is angry\nVumpus(x) ::: x is a vumpus\nSmall(x) ::: x is small\nWumpus(x) ::: x is a wumpus\nDull(x) ::: x is dull\nNumpus(x) ::: x is a numpus\nFruity(x) ::: x is fruity\nImpus(x) ::: x is an impus\nSmall(x) ::: x is small\nRompus(x) ::: x is a rompus\nOpaque(x) ::: x is opaque\nTumpus(x) ::: x is a tumpus\nMetallic(x) ::: x is metallic\nYumpus(x) ::: x is a yumpus\nRed(x) ::: x is red\nJompus(x) ::: x is a jompus\nPremises:\n∀x (Zumpus(x) → ¬Feisty(x)) ::: Every zumpus is not feisty.\n∀x (Zumpus(x) → Dumpus(x)) ::: Each zumpus is a dumpus.\n∀x (Dumpus(x) → Angry(x)) ::: Every dumpus is angry.\n∀x (Vumpus(x) → ¬Small(x)) ::: Vumpuses are not small.\n∀x (Dumpus(x) → Wumpus(x)) ::: Dumpuses are wumpuses.\n∀x (Wumpus(x) → ¬Dull(x)) ::: Each wumpus is not dull.\n∀x (Wumpus(x) → Numpus(x)) ::: Each wumpus is a numpus.\n∀x (Numpus(x) → Fruity(x)) ::: Numpuses are fruity.\n∀x (Numpus(x) → Impus(x)) ::: Numpuses are impuses.\n∀x (Impus(x) → Small(x)) ::: Impuses are small.\n∀x (Impus(x) → Rompus(x)) ::: Each impus is a rompus.\n∀x (Rompus(x) → ¬Opaque(x)) ::: Every rompus is not opaque.\n∀x (Rompus(x) → Tumpus(x)) ::: Each rompus is a tumpus.\n∀x (Tumpus(x) → Metallic(x)) ::: Tumpuses are metallic.\n∀x (Tumpus(x) → Yumpus(x)) ::: Tumpuses are yumpuses.\n∀x (Yumpus(x) → Red(x)) ::: Each yumpus is red.\n∀x (Yumpus(x) → Jompus(x)) ::: Yumpuses are jompuses.\nZumpus(rex) ::: Rex is a zumpus.\nConclusion:\n¬Small(rex) ::: Rex is not small.\n------"
    ]
  },
  {
    "id": "ProntoQA_346",
    "context": "Every wumpus is fruity. Wumpuses are jompuses. Jompuses are not transparent. Each jompus is a vumpus. Every vumpus is cold. Each vumpus is a yumpus. Numpuses are not bright. Yumpuses are angry. Yumpuses are zumpuses. Zumpuses are brown. Zumpuses are impuses. Each impus is not wooden. Impuses are rompuses. Each rompus is large. Every rompus is a dumpus. Dumpuses are bright. Each dumpus is a tumpus. Sam is a yumpus.",
    "question": "Is the following statement true or false? Sam is not bright.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nWumpus(x) ::: x is a wumpus\nFruity(x) ::: x is fruity\nJompus(x) ::: x is a jompus\nTransparent(x) ::: x is transparent\nVumpus(x) ::: x is a vumpus\nCold(x) ::: x is cold\nYumpus(x) ::: x is a yumpus\nNumpus(x) ::: x is a numpus\nBright(x) ::: x is bright\nAngry(x) ::: x is angry\nZumpus(x) ::: x is a zumpus\nBrown(x) ::: x is brown\nImpus(x) ::: x is an impus\nRompus(x) ::: x is a rompus\nLarge(x) ::: x is large\nDumpus(x) ::: x is a dumpus\nBright(x) ::: x is bright\nTumpus(x) ::: x is a tumpus\nSam(x) ::: x is Sam\nPremises:\n∀x (Wumpus(x) → Fruity(x)) ::: Every wumpus is fruity.\n∀x (Wumpus(x) → Jompus(x)) ::: Wumpuses are jompuses.\n∀x (Jompus(x) → ¬Transparent(x)) ::: Jompuses are not transparent.\n∀x (Jompus(x) → Vumpus(x)) ::: Each jompus is a vumpus.\n∀x (Vumpus(x) → Cold(x)) ::: Every vumpus is cold.\n∀x (Vumpus(x) → Yumpus(x)) ::: Each vumpus is a yumpus.\n∀x (Numpus(x) → ¬Bright(x)) ::: Numpuses are not bright.\n∀x (Yumpus(x) → Angry(x)) ::: Yumpuses are angry.\n∀x (Yumpus(x) → Zumpus(x)) ::: Yumpuses are zumpuses.\n∀x (Zumpus(x) → Brown(x)) ::: Zumpuses are brown.\n∀x (Zumpus(x) → Impus(x)) ::: Zumpuses are impuses.\n∀x (Impus(x) → ¬Wooden(x)) ::: Each impus is not wooden.\n∀x (Impus(x) → Rompus(x)) ::: Impuses are rompuses.\n∀x (Rompus(x) → Large(x)) ::: Each rompus is large.\n∀x (Rompus(x) → Dumpus(x)) ::: Every rompus is a dumpus.\n∀x (Dumpus(x) → Bright(x)) ::: Dumpuses are bright.\n∀x (Dumpus(x) → Tumpus(x)) ::: Each dumpus is a tumpus.\nYumpus(sam) ::: Sam is a yumpus.\nConclusion:\n¬Bright(sam) ::: Sam is not bright.\n------"
    ]
  },
  {
    "id": "ProntoQA_347",
    "context": "Every tumpus is bright. Yumpuses are not earthy. Tumpuses are jompuses. Each jompus is opaque. Jompuses are impuses. Every impus is aggressive. Impuses are zumpuses. Each zumpus is not large. Zumpuses are wumpuses. Wumpuses are liquid. Each wumpus is a vumpus. Each vumpus is feisty. Vumpuses are dumpuses. Each dumpus is earthy. Each dumpus is a rompus. Each rompus is spicy. Rompuses are numpuses. Sally is an impus.",
    "question": "Is the following statement true or false? Sally is not earthy.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nTumpus(x) ::: x is a tumpus\nBright(x) ::: x is bright\nYumpus(x) ::: x is a yumpus\nEarthy(x) ::: x is earthy\nJompus(x) ::: x is a jompus\nOpaque(x) ::: x is opaque\nImpus(x) ::: x is an impus\nAggressive(x) ::: x is aggressive\nZumpus(x) ::: x is a zumpus\nLarge(x) ::: x is large\nWumpus(x) ::: x is a wumpus\nLiquid(x) ::: x is liquid\nVumpus(x) ::: x is a vumpus\nFeisty(x) ::: x is feisty\nDumpus(x) ::: x is a dumpus\nEarthy(x) ::: x is earthy\nRompus(x) ::: x is a rompus\nSpicy(x) ::: x is spicy\nNumpus(x) ::: x is a numpus\nPremises:\n∀x (Tumpus(x) → Bright(x)) ::: Every tumpus is bright.\n∀x (Yumpus(x) → ¬Earthy(x)) ::: Yumpuses are not earthy.\n∀x (Tumpus(x) → Jompus(x)) ::: Tumpuses are jompuses.\n∀x (Jompus(x) → Opaque(x)) ::: Each jompus is opaque.\n∀x (Jompus(x) → Impus(x)) ::: Jompuses are impuses.\n∀x (Impus(x) → Aggressive(x)) ::: Every impus is aggressive.\n∀x (Impus(x) → Zumpus(x)) ::: Impuses are zumpuses.\n∀x (Zumpus(x) → ¬Large(x)) ::: Each zumpus is not large.\n∀x (Zumpus(x) → Wumpus(x)) ::: Zumpuses are wumpuses.\n∀x (Wumpus(x) → Liquid(x)) ::: Wumpuses are liquid.\n∀x (Wumpus(x) → Vumpus(x)) ::: Each wumpus is a vumpus.\n∀x (Vumpus(x) → Feisty(x)) ::: Each vumpus is feisty.\n∀x (Vumpus(x) → Dumpus(x)) ::: Vumpuses are dumpuses.\n∀x (Dumpus(x) → Earthy(x)) ::: Each dumpus is earthy.\n∀x (Dumpus(x) → Rompus(x)) ::: Each dumpus is a rompus.\n∀x (Rompus(x) → Spicy(x)) ::: Each rompus is spicy.\n∀x (Rompus(x) → Numpus(x)) ::: Rompuses are numpuses.\nImpus(sally) ::: Sally is an impus.\nConclusion:\n¬Earthy(sally) ::: Sally is not earthy.\n------"
    ]
  },
  {
    "id": "ProntoQA_348",
    "context": "Yumpuses are large. Yumpuses are rompuses. Rompuses are orange. Each rompus is a wumpus. Each wumpus is happy. Wumpuses are zumpuses. Zumpuses are not angry. Zumpuses are impuses. Impuses are earthy. Each impus is a jompus. Jompuses are luminous. Each jompus is a dumpus. Every dumpus is bright. Dumpuses are numpuses. Vumpuses are not luminous. Every numpus is not hot. Every numpus is a tumpus. Fae is a rompus.",
    "question": "Is the following statement true or false? Fae is luminous.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nYumpus(x) ::: x is a yumpus\nLarge(x) ::: x is large\nRompus(x) ::: x is a rompus\nOrange(x) ::: x is orange\nWumpus(x) ::: x is a wumpus\nHappy(x) ::: x is happy\nZumpus(x) ::: x is a zumpus\nAngry(x) ::: x is angry\nImpus(x) ::: x is an impus\nEarthy(x) ::: x is earthy\nJompus(x) ::: x is a jompus\nLuminous(x) ::: x is luminous\nDumpus(x) ::: x is a dumpus\nBright(x) ::: x is bright\nNumpus(x) ::: x is a numpus\nHot(x) ::: x is hot\nTumpus(x) ::: x is a tumpus\nFae(x) ::: x is fae\nPremises:\n∀x (Yumpus(x) → Large(x)) ::: Yumpuses are large.\n∀x (Yumpus(x) → Rompus(x)) ::: Yumpuses are rompuses.\n∀x (Rompus(x) → Orange(x)) ::: Rompuses are orange.\n∀x (Rompus(x) → Wumpus(x)) ::: Each rompus is a wumpus.\n∀x (Wumpus(x) → Happy(x)) ::: Wumpuses are happy.\n∀x (Wumpus(x) → Zumpus(x)) ::: Wumpuses are zumpuses.\n∀x (Zumpus(x) → ¬Angry(x)) ::: Zumpuses are not angry.\n∀x (Zumpus(x) → Impus(x)) ::: Zumpuses are impuses.\n∀x (Impus(x) → Earthy(x)) ::: Impuses are earthy.\n∀x (Impus(x) → Jompus(x)) ::: Each impus is a jompus.\n∀x (Jompus(x) → Luminous(x)) ::: Jompuses are luminous.\n∀x (Jompus(x) → Dumpus(x)) ::: Each jompus is a dumpus.\n∀x (Dumpus(x) → Bright(x)) ::: Every dumpus is bright.\n∀x (Dumpus(x) → Numpus(x)) ::: Dumpuses are numpuses.\n∀x (Vumpus(x) → ¬Luminous(x)) ::: Vumpuses are not luminous.\n∀x (Numpus(x) → ¬Hot(x)) ::: Every numpus is not hot.\n∀x (Numpus(x) → Tumpus(x)) ::: Every numpus is a tumpus.\nRompus(fae) ::: Fae is a rompus.\nConclusion:\nLuminous(fae) ::: Fae is luminous.\n------"
    ]
  },
  {
    "id": "ProntoQA_349",
    "context": "Each vumpus is spicy. Every vumpus is a dumpus. Each dumpus is blue. Every dumpus is a yumpus. Each yumpus is floral. Yumpuses are tumpuses. Tumpuses are small. Tumpuses are rompuses. Rompuses are not mean. Rompuses are jompuses. Every numpus is mean. Alex is a vumpus.",
    "question": "Is the following statement true or false? Alex is not mean.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant.lpg\n------"
    ]
  },
  {
    "id": "ProntoQA_350",
    "context": "Numpuses are not shy. Every numpus is a wumpus. Wumpuses are not large. Each wumpus is an impus. Impuses are not metallic. Zumpuses are not sour. Every impus is a rompus. Rompuses are dull. Each rompus is a vumpus. Vumpuses are aggressive. Vumpuses are jompuses. Every jompus is red. Jompuses are tumpuses. Every tumpus is fruity. Tumpuses are dumpuses. Dumpuses are sour. Dumpuses are yumpuses. Alex is a rompus.",
    "question": "Is the following statement true or false? Alex is not sour.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nNumpus(x) ::: x is a numpus\nShy(x) ::: x is shy\nWumpus(x) ::: x is a wumpus\nLarge(x) ::: x is large\nImpus(x) ::: x is an impus\nMetallic(x) ::: x is metallic\nZumpus(x) ::: x is a zumpus\nSour(x) ::: x is sour\nRompus(x) ::: x is a rompus\nDull(x) ::: x is dull\nVumpus(x) ::: x is a vumpus\nAggressive(x) ::: x is aggressive\nJompus(x) ::: x is a jompus\nRed(x) ::: x is red\nTumpus(x) ::: x is a tumpus\nFruity(x) ::: x is fruity\nDumpus(x) ::: x is a dumpus\nSour(x) ::: x is sour\nYumpus(x) ::: x is a yumpus\nPremises:\n∀x (Numpus(x) → ¬Shy(x)) ::: Numpuses are not shy.\n∀x (Numpus(x) → Wumpus(x)) ::: Every numpus is a wumpus.\n∀x (Wumpus(x) → ¬Large(x)) ::: Wumpuses are not large.\n∀x (Wumpus(x) → Impus(x)) ::: Each wumpus is an impus.\n∀x (Impus(x) → ¬Metallic(x)) ::: Impuses are not metallic.\n∀x (Zumpus(x) → ¬Sour(x)) ::: Zumpuses are not sour.\n∀x (Impus(x) → Rompus(x)) ::: Every impus is a rompus.\n∀x (Rompus(x) → Dull(x)) ::: Rompuses are dull.\n∀x (Rompus(x) → Vumpus(x)) ::: Each rompus is a vumpus.\n∀x (Vumpus(x) → Aggressive(x)) ::: Vumpuses are aggressive.\n∀x (Vumpus(x) → Jompus(x)) ::: Vumpuses are jompuses.\n∀x (Jompus(x) → Red(x)) ::: Every jompus is red.\n∀x (Jompus(x) → Tumpus(x)) ::: Jompuses are tumpuses.\n∀x (Tumpus(x) → Fruity(x)) ::: Every tumpus is fruity.\n∀x (Tumpus(x) → Dumpus(x)) ::: Tumpuses are dumpuses.\n∀x (Dumpus(x) → Sour(x)) ::: Dumpuses are sour.\n∀x (Dumpus(x) → Yumpus(x)) ::: Dumpuses are yumpuses.\nRompus(alex) ::: Alex is a rompus.\nConclusion:\n¬Sour(alex) ::: Alex is not sour.\n------"
    ]
  },
  {
    "id": "ProntoQA_351",
    "context": "Zumpuses are dull. Each zumpus is a wumpus. Wumpuses are shy. Every wumpus is a rompus. Rompuses are large. Rompuses are vumpuses. Vumpuses are red. Each tumpus is fruity. Vumpuses are dumpuses. Every dumpus is not fruity. Every dumpus is a numpus. Numpuses are spicy. Each numpus is a yumpus. Yumpuses are mean. Every yumpus is a jompus. Every jompus is opaque. Each jompus is an impus. Stella is a zumpus.",
    "question": "Is the following statement true or false? Stella is not fruity.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nZumpus(x) ::: x is a zumpus\nDull(x) ::: x is dull\nWumpus(x) ::: x is a wumpus\nShy(x) ::: x is shy\nRompus(x) ::: x is a rompus\nLarge(x) ::: x is large\nVumpus(x) ::: x is a vumpus\nRed(x) ::: x is red\nTumpus(x) ::: x is a tumpus\nFruity(x) ::: x is fruity\nDumpus(x) ::: x is a dumpus\nNumpus(x) ::: x is a numpus\nSpicy(x) ::: x is spicy\nYumpus(x) ::: x is a yumpus\nMean(x) ::: x is mean\nJompus(x) ::: x is a jompus\nOpaque(x) ::: x is opaque\nImpus(x) ::: x is an impus\nStella(x) ::: x is Stella\nPremises:\n∀x (Zumpus(x) → Dull(x)) ::: Zumpuses are dull.\n∀x (Zumpus(x) → Wumpus(x)) ::: Each zumpus is a wumpus.\n∀x (Wumpus(x) → Shy(x)) ::: Wumpuses are shy.\n∀x (Wumpus(x) → Rompus(x)) ::: Every wumpus is a rompus.\n∀x (Rompus(x) → Large(x)) ::: Rompuses are large.\n∀x (Rompus(x) → Vumpus(x)) ::: Rompuses are vumpuses.\n∀x (Vumpus(x) → Red(x)) ::: Vumpuses are red.\n∀x (Tumpus(x) → Fruity(x)) ::: Each tumpus is fruity.\n∀x (Vumpus(x) → Dumpus(x)) ::: Vumpuses are dumpuses.\n∀x (Dumpus(x) → ¬Fruity(x)) ::: Every dumpus is not fruity.\n∀x (Dumpus(x) → Numpus(x)) ::: Every dumpus is a numpus.\n∀x (Numpus(x) → Spicy(x)) ::: Numpuses are spicy.\n∀x (Numpus(x) → Yumpus(x)) ::: Each numpus is a yumpus.\n∀x (Yumpus(x) → Mean(x)) ::: Yumpuses are mean.\n∀x (Yumpus(x) → Jompus(x)) ::: Every yumpus is a jompus.\n∀x (Jompus(x) → Opaque(x)) ::: Every jompus is opaque.\n∀x (Jompus(x) → Impus(x)) ::: Each jompus is an impus.\nZumpus(stella) ::: Stella is a zumpus.\nConclusion:\n¬Fruity(stella) ::: Stella is not fruity.\n------"
    ]
  },
  {
    "id": "ProntoQA_352",
    "context": "Each dumpus is not blue. Dumpuses are jompuses. Jompuses are not earthy. Jompuses are impuses. Every impus is not aggressive. Impuses are vumpuses. Every vumpus is metallic. Wumpuses are not opaque. Vumpuses are rompuses. Each rompus is not feisty. Every rompus is a yumpus. Every yumpus is opaque. Yumpuses are numpuses. Numpuses are small. Numpuses are tumpuses. Every tumpus is spicy. Tumpuses are zumpuses. Wren is a jompus.",
    "question": "Is the following statement true or false? Wren is not opaque.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nDumpus(x) ::: x is a dumpus\nBlue(x) ::: x is blue\nJompus(x) ::: x is a jompus\nEarthy(x) ::: x is earthy\nImpus(x) ::: x is an impus\nAggressive(x) ::: x is aggressive\nVumpus(x) ::: x is a vumpus\nMetallic(x) ::: x is metallic\nOpaque(x) ::: x is opaque\nRompus(x) ::: x is a rompus\nFeisty(x) ::: x is feisty\nYumpus(x) ::: x is a yumpus\nNumpus(x) ::: x is a numpus\nSmall(x) ::: x is small\nTumpus(x) ::: x is a tumpus\nSpicy(x) ::: x is spicy\nZumpus(x) ::: x is a zumpus\nWren(x) ::: x is Wren\nPremises:\n∀x (Dumpus(x) → ¬Blue(x)) ::: Each dumpus is not blue.\n∀x (Jompus(x) → ¬Earthy(x)) ::: Jompuses are not earthy.\n∀x (Impus(x) → ¬Aggressive(x)) ::: Impuses are not aggressive.\n∀x (Vumpus(x) → Metallic(x)) ::: Every vumpus is metallic.\n∀x (Vumpus(x) → Rompus(x)) ::: Vumpuses are rompuses.\n∀x (Rompus(x) → ¬Feisty(x)) ::: Every rompus is not feisty.\n∀x (Rompus(x) → Yumpus(x)) ::: Every rompus is a yumpus.\n∀x (Yumpus(x) → Opaque(x)) ::: Every yumpus is opaque.\n∀x (Yumpus(x) → Numpus(x)) ::: Yumpuses are numpuses.\n∀x (Numpus(x) → Small(x)) ::: Numpuses are small.\n∀x (Numpus(x) → Tumpus(x)) ::: Numpuses are tumpuses.\n∀x (Tumpus(x) → Spicy(x)) ::: Every tumpus is spicy.\n∀x (Tumpus(x) → Zumpus(x)) ::: Tumpuses are zumpuses.\nJompus(wren) ::: Wren is a jompus.\nConclusion:\n¬Opaque(wren) ::: Wren is not opaque.\n------"
    ]
  },
  {
    "id": "ProntoQA_353",
    "context": "Dumpuses are earthy. Each dumpus is a tumpus. Every tumpus is sour. Tumpuses are numpuses. Each impus is hot. Numpuses are happy. Every numpus is a rompus. Every rompus is not transparent. Every rompus is a zumpus. Zumpuses are not hot. Each zumpus is a vumpus. Vumpuses are not dull. Each vumpus is a jompus. Every jompus is not aggressive. Each jompus is a wumpus. Wumpuses are luminous. Wumpuses are yumpuses. Wren is a dumpus.",
    "question": "Is the following statement true or false? Wren is not hot.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nDumpus(x) ::: x is a dumpus\nEarthy(x) ::: x is earthy\nTumpus(x) ::: x is a tumpus\nSour(x) ::: x is sour\nNumpus(x) ::: x is a numpus\nImpus(x) ::: x is an impus\nHot(x) ::: x is hot\nHappy(x) ::: x is happy\nRompus(x) ::: x is a rompus\nTransparent(x) ::: x is transparent\nZumpus(x) ::: x is a zumpus\nVumpus(x) ::: x is a vumpus\nDull(x) ::: x is dull\nJompus(x) ::: x is a jompus\nAggressive(x) ::: x is aggressive\nWumpus(x) ::: x is a wumpus\nLuminous(x) ::: x is luminous\nYumpus(x) ::: x is a yumpus\nPremises:\n∀x (Dumpus(x) → Earthy(x)) ::: Dumpuses are earthy.\n∀x (Dumpus(x) → Tumpus(x)) ::: Each dumpus is a tumpus.\n∀x (Tumpus(x) → Sour(x)) ::: Every tumpus is sour.\n∀x (Tumpus(x) → Numpus(x)) ::: Tumpuses are numpuses.\n∀x (Impus(x) → Hot(x)) ::: Each impus is hot.\n∀x (Numpus(x) → Happy(x)) ::: Numpuses are happy.\n∀x (Numpus(x) → Rompus(x)) ::: Every numpus is a rompus.\n∀x (Rompus(x) → ¬Transparent(x)) ::: Every rompus is not transparent.\n∀x (Rompus(x) → Zumpus(x)) ::: Every rompus is a zumpus.\n∀x (Zumpus(x) → ¬Hot(x)) ::: Zumpuses are not hot.\n∀x (Zumpus(x) → Vumpus(x)) ::: Each zumpus is a vumpus.\n∀x (Vumpus(x) → ¬Dull(x)) ::: Vumpuses are not dull.\n∀x (Vumpus(x) → Jompus(x)) ::: Each vumpus is a jompus.\n∀x (Jompus(x) → ¬Aggressive(x)) ::: Every jompus is not aggressive.\n∀x (Jompus(x) → Wumpus(x)) ::: Each jompus is a wumpus.\n∀x (Wumpus(x) → Luminous(x)) ::: Wumpuses are luminous.\n∀x (Wumpus(x) → Yumpus(x)) ::: Wumpuses are yumpuses.\nDumpus(wren) ::: Wren is a dumpus.\nConclusion:\n¬Hot(wren) ::: Wren is not hot.\n------"
    ]
  },
  {
    "id": "ProntoQA_354",
    "context": "Vumpuses are feisty. Vumpuses are jompuses. Each jompus is not blue. Every jompus is a zumpus. Zumpuses are mean. Every zumpus is an impus. Impuses are sweet. Every impus is a numpus. Numpuses are earthy. Every numpus is a wumpus. Each wumpus is cold. Wumpuses are dumpuses. Dumpuses are bright. Every dumpus is a rompus. Rompuses are not small. Rompuses are tumpuses. Every yumpus is not bright. Fae is a zumpus.",
    "question": "Is the following statement true or false? Fae is not bright.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "grasp\n###predicates\nVumpus(x) ::: x is a vumpus\nFeisty(x) ::: x is feisty\nJompus(x) ::: x is a jompus\nBlue(x) ::: x is blue\nZumpus(x) ::: x is a zumpus\nMean(x) ::: x is mean\nImpus(x) ::: x is an impus\nSweet(x) ::: x is sweet\nNumpus(x) ::: x is a numpus\nEarthy(x) ::: x is earthy\nWumpus(x) ::: x is a wumpus\nCold(x) ::: x is cold\nDumpus(x) ::: x is a dumpus\nBright(x) ::: x is bright\nRompus(x) ::: x is a rompus\nSmall(x) ::: x is small\nTumpus(x) ::: x is a tumpus\nYumpus(x) ::: x is a yumpus\nBright(x) ::: x is bright\nPremises:\n∀x (Vumpus(x) → Feisty(x)) ::: Vumpuses are feisty.\n∀x (Vumpus(x) → Jompus(x)) ::: Vumpuses are jompuses.\n∀x (Jompus(x) → ¬Blue(x)) ::: Each jompus is not blue.\n∀x (Jompus(x) → Zumpus(x)) ::: Every jompus is a zumpus.\n∀x (Zumpus(x) → Mean(x)) ::: Zumpuses are mean.\n∀x (Zumpus(x) → Impus(x)) ::: Every zumpus is an impus.\n∀x (Impus(x) → Sweet(x)) ::: Impuses are sweet.\n∀x (Impus(x) → Numpus(x)) ::: Every impus is a numpus.\n∀x (Numpus(x) → Earthy(x)) ::: Numpuses are earthy.\n∀x (Numpus(x) → Wumpus(x)) ::: Every numpus is a wumpus.\n∀x (Wumpus(x) → Cold(x)) ::: Each wumpus is cold.\n∀x (Wumpus(x) → Dumpus(x)) ::: Wumpuses are dumpuses.\n∀x (Dumpus(x) → Bright(x)) ::: Dumpuses are bright.\n∀x (Dumpus(x) → Rompus(x)) ::: Every dumpus is a rompus.\n∀x (Rompus(x) → ¬Small(x)) ::: Rompuses are not small.\n∀x (Rompus(x) → Tumpus(x)) ::: Rompuses are tumpuses.\n∀x (Yumpus(x) → ¬Bright(x)) ::: Every yumpus is not bright.\nZumpus(fae) ::: Fae is a zumpus.\nConclusion:\n¬Bright(fae) ::: Fae is not bright.\n------"
    ]
  },
  {
    "id": "ProntoQA_355",
    "context": "Impuses are not happy. Each impus is a dumpus. Every dumpus is small. Each dumpus is a vumpus. Vumpuses are not dull. Every vumpus is a rompus. Each rompus is not sweet. Rompuses are tumpuses. Tumpuses are transparent. Tumpuses are jompuses. Every jompus is brown. Each zumpus is not brown. Jompuses are wumpuses. Wumpuses are angry. Wumpuses are yumpuses. Every yumpus is not temperate. Each yumpus is a numpus. Rex is a dumpus.",
    "question": "Is the following statement true or false? Rex is not brown.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nImpus(x) ::: x is an impus\nHappy(x) ::: x is happy\nDumpus(x) ::: x is a dumpus\nSmall(x) ::: x is small\nVumpus(x) ::: x is a vumpus\nDull(x) ::: x is dull\nRompus(x) ::: x is a rompus\nSweet(x) ::: x is sweet\nTumpus(x) ::: x is a tumpus\nTransparent(x) ::: x is transparent\nJompus(x) ::: x is a jompus\nBrown(x) ::: x is brown\nZumpus(x) ::: x is a zumpus\nAngry(x) ::: x is angry\nYumpus(x) ::: x is a yumpus\nTemperate(x) ::: x is temperate\nNumpus(x) ::: x is a numpus\nPremises:\n∀x (Impus(x) → ¬Happy(x)) ::: Impuses are not happy.\n∀x (Impus(x) → Dumpus(x)) ::: Each impus is a dumpus.\n∀x (Dumpus(x) → Small(x)) ::: Every dumpus is small.\n∀x (Dumpus(x) → Vumpus(x)) ::: Each dumpus is a vumpus.\n∀x (Vumpus(x) → ¬Dull(x)) ::: Vumpuses are not dull.\n∀x (Vumpus(x) → Rompus(x)) ::: Every vumpus is a rompus.\n∀x (Rompus(x) → ¬Sweet(x)) ::: Each rompus is not sweet.\n∀x (Rompus(x) → Tumpus(x)) ::: Rompuses are tumpuses.\n∀x (Tumpus(x) → Transparent(x)) ::: Tumpuses are transparent.\n∀x (Tumpus(x) → Jompus(x)) ::: Tumpuses are jompuses.\n∀x (Jompus(x) → Brown(x)) ::: Every jompus is brown.\n∀x (Zumpus(x) → ¬Brown(x)) ::: Each zumpus is not brown.\n∀x (Jompus(x) → Wumpus(x)) ::: Jompuses are wumpuses.\n∀x (Wumpus(x) → Angry(x)) ::: Wumpuses are angry.\n∀x (Wumpus(x) → Yumpus(x)) ::: Wumpuses are yumpuses.\n∀x (Yumpus(x) → ¬Temperate(x)) ::: Every yumpus is not temperate.\n∀x (Yumpus(x) → Numpus(x)) ::: Each yumpus is a numpus.\nDumpus(rex) ::: Rex is a dumpus.\nConclusion:\n¬Brown(rex) ::: Rex is not brown.\n------"
    ]
  },
  {
    "id": "ProntoQA_356",
    "context": "Every numpus is not floral. Numpuses are tumpuses. Tumpuses are orange. Tumpuses are rompuses. Every rompus is bright. Each rompus is a dumpus. Every dumpus is metallic. Dumpuses are jompuses. Every jompus is cold. Jompuses are zumpuses. Each zumpus is feisty. Zumpuses are impuses. Each impus is spicy. Every impus is a wumpus. Every wumpus is kind. Yumpuses are not kind. Wumpuses are vumpuses. Rex is a dumpus.",
    "question": "Is the following statement true or false? Rex is kind.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nNumpus(x) ::: x is a numpus\nFloral(x) ::: x is floral\nTumpus(x) ::: x is a tumpus\nOrange(x) ::: x is orange\nRompus(x) ::: x is a rompus\nBright(x) ::: x is bright\nDumpus(x) ::: x is a dumpus\nMetallic(x) ::: x is metallic\nJompus(x) ::: x is a jompus\nCold(x) ::: x is cold\nZumpus(x) ::: x is a zumpus\nFeisty(x) ::: x is feisty\nImpus(x) ::: x is an impus\nSpicy(x) ::: x is spicy\nWumpus(x) ::: x is a wumpus\nKind(x) ::: x is kind\nYumpus(x) ::: x is a yumpus\nPremises:\n∀x (Numpus(x) → ¬Floral(x)) ::: Every numpus is not floral.\n∀x (Numpus(x) → Tumpus(x)) ::: Numpuses are tumpuses.\n∀x (Tumpus(x) → Orange(x)) ::: Tumpuses are orange.\n∀x (Tumpus(x) → Rompus(x)) ::: Tumpuses are rompuses.\n∀x (Rompus(x) → Bright(x)) ::: Every rompus is bright.\n∀x (Rompus(x) → Dumpus(x)) ::: Each rompus is a dumpus.\n∀x (Dumpus(x) → Metallic(x)) ::: Every dumpus is metallic.\n∀x (Dumpus(x) → Jompus(x)) ::: Dumpuses are jompuses.\n∀x (Jompus(x) → Cold(x)) ::: Every jompus is cold.\n∀x (Jompus(x) → Zumpus(x)) ::: Jompuses are zumpuses.\n∀x (Zumpus(x) → Feisty(x)) ::: Each zumpus is feisty.\n∀x (Zumpus(x) → Impus(x)) ::: Zumpuses are impuses.\n∀x (Impus(x) → Spicy(x)) ::: Each impus is spicy.\n∀x (Impus(x) → Wumpus(x)) ::: Every impus is a wumpus.\n∀x (Wumpus(x) → Kind(x)) ::: Every wumpus is kind.\n∀x (Yumpus(x) → ¬Kind(x)) ::: Yumpuses are not kind.\n∀x (Wumpus(x) → Vumpus(x)) ::: Wumpuses are vumpuses.\nDumpus(rex) ::: Rex is a dumpus.\nConclusion:\nKind(rex) ::: Rex is kind.\n------"
    ]
  },
  {
    "id": "ProntoQA_357",
    "context": "Each vumpus is not hot. Vumpuses are rompuses. Every rompus is opaque. Every rompus is a zumpus. Every zumpus is dull. Zumpuses are yumpuses. Yumpuses are sour. Every yumpus is a tumpus. Impuses are not blue. Tumpuses are metallic. Tumpuses are jompuses. Jompuses are not fruity. Jompuses are wumpuses. Wumpuses are blue. Every wumpus is a numpus. Each numpus is mean. Every numpus is a dumpus. Stella is a zumpus.",
    "question": "Is the following statement true or false? Stella is blue.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nVumpus(x) ::: x is a vumpus\nHot(x) ::: x is hot\nRompus(x) ::: x is a rompus\nOpaque(x) ::: x is opaque\nZumpus(x) ::: x is a zumpus\nDull(x) ::: x is dull\nYumpus(x) ::: x is a yumpus\nSour(x) ::: x is sour\nTumpus(x) ::: x is a tumpus\nBlue(x) ::: x is blue\nMetallic(x) ::: x is metallic\nJompus(x) ::: x is a jompus\nFruity(x) ::: x is fruity\nWumpus(x) ::: x is a wumpus\nNumpus(x) ::: x is a numpus\nMean(x) ::: x is mean\nDumpus(x) ::: x is a dumpus\nPremises:\n∀x (Vumpus(x) → ¬Hot(x)) ::: Each vumpus is not hot.\n∀x (Rompus(x) → Opaque(x)) ::: Vumpuses are rompuses.\n∀x (Rompus(x) → Zumpus(x)) ::: Every rompus is a zumpus.\n∀x (Zumpus(x) → Dull(x)) ::: Every zumpus is dull.\n∀x (Zumpus(x) → Yumpus(x)) ::: Zumpuses are yumpuses.\n∀x (Yumpus(x) → Sour(x)) ::: Yumpuses are sour.\n∀x (Yumpus(x) → Tumpus(x)) ::: Every yumpus is a tumpus.\n∀x (Impus(x) → ¬Blue(x)) ::: Impuses are not blue.\n∀x (Tumpus(x) → Metallic(x)) ::: Tumpuses are metallic.\n∀x (Tumpus(x) → Jompus(x)) ::: Tumpuses are jompuses.\n∀x (Jompus(x) → ¬Fruity(x)) ::: Jompuses are not fruity.\n∀x (Jompus(x) → Wumpus(x)) ::: Jompuses are wumpuses.\n∀x (Wumpus(x) → Blue(x)) ::: Wumpuses are blue.\n∀x (Wumpus(x) → Numpus(x)) ::: Every wumpus is a numpus.\n∀x (Numpus(x) → Mean(x)) ::: Each numpus is mean.\n∀x (Numpus(x) → Dumpus(x)) ::: Every numpus is a dumpus.\nZumpus(stella) ::: Stella is a zumpus.\nConclusion:\nBlue(stella) ::: Stella is blue.\n------"
    ]
  },
  {
    "id": "ProntoQA_358",
    "context": "Impuses are dull. Each impus is a vumpus. Every vumpus is sour. Vumpuses are wumpuses. Every wumpus is blue. Wumpuses are tumpuses. Tumpuses are opaque. Every tumpus is a rompus. Rompuses are cold. Every rompus is a jompus. Jompuses are not happy. Each jompus is a numpus. Dumpuses are not wooden. Numpuses are fruity. Numpuses are yumpuses. Yumpuses are wooden. Every yumpus is a zumpus. Max is a tumpus.",
    "question": "Is the following statement true or false? Max is wooden.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nImpus(x) ::: x is an impus\nDull(x) ::: x is dull\nVumpus(x) ::: x is a vumpus\nSour(x) ::: x is sour\nWumpus(x) ::: x is a wumpus\nBlue(x) ::: x is blue\nTumpus(x) ::: x is a tumpus\nOpaque(x) ::: x is opaque\nRompus(x) ::: x is a rompus\nCold(x) ::: x is cold\nJompus(x) ::: x is a jompus\nHappy(x) ::: x is happy\nNumpus(x) ::: x is a numpus\nWooden(x) ::: x is wooden\nFruity(x) ::: x is fruity\nYumpus(x) ::: x is a yumpus\nZumpus(x) ::: x is a zumpus\nPremises:\n∀x (Impus(x) → Dull(x)) ::: Impuses are dull.\n∀x (Impus(x) → Vumpus(x)) ::: Each impus is a vumpus.\n∀x (Vumpus(x) → Sour(x)) ::: Every vumpus is sour.\n∀x (Vumpus(x) → Wumpus(x)) ::: Vumpuses are wumpuses.\n∀x (Wumpus(x) → Blue(x)) ::: Every wumpus is blue.\n∀x (Wumpus(x) → Tumpus(x)) ::: Wumpuses are tumpuses.\n∀x (Tumpus(x) → Opaque(x)) ::: Tumpuses are opaque.\n∀x (Tumpus(x) → Rompus(x)) ::: Every tumpus is a rompus.\n∀x (Rompus(x) → Cold(x)) ::: Rompuses are cold.\n∀x (Rompus(x) → Jompus(x)) ::: Every rompus is a jompus.\n∀x (Jompus(x) → ¬Happy(x)) ::: Jompuses are not happy.\n∀x (Jompus(x) → Numpus(x)) ::: Each jompus is a numpus.\n∀x (Dumpus(x) → ¬Wooden(x)) ::: Dumpuses are not wooden.\n∀x (Numpus(x) → Fruity(x)) ::: Numpuses are fruity.\n∀x (Numpus(x) → Yumpus(x)) ::: Numpuses are yumpuses.\n∀x (Yumpus(x) → Wooden(x)) ::: Yumpuses are wooden.\n∀x (Yumpus(x) → Zumpus(x)) ::: Every yumpus is a zumpus.\nTumpus(max) ::: Max is a tumpus.\nConclusion:\nWooden(max) ::: Max is wooden.\n------"
    ]
  },
  {
    "id": "ProntoQA_359",
    "context": "Vumpuses are not wooden. Rompuses are kind. Rompuses are tumpuses. Tumpuses are not nervous. Tumpuses are impuses. Impuses are not cold. Each impus is a dumpus. Each dumpus is bright. Dumpuses are zumpuses. Zumpuses are transparent. Zumpuses are numpuses. Numpuses are large. Numpuses are jompuses. Each jompus is wooden. Each jompus is a wumpus. Each wumpus is not bitter. Each wumpus is a yumpus. Max is an impus.",
    "question": "Is the following statement true or false? Max is wooden.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nVumpus(x) ::: x is a vumpus\nWooden(x) ::: x is wooden\nRompus(x) ::: x is a rompus\nKind(x) ::: x is kind\nTumpus(x) ::: x is a tumpus\nNervous(x) ::: x is nervous\nImpus(x) ::: x is an impus\nCold(x) ::: x is cold\nDumpus(x) ::: x is a dumpus\nBright(x) ::: x is bright\nZumpus(x) ::: x is a zumpus\nTransparent(x) ::: x is transparent\nNumpus(x) ::: x is a numpus\nLarge(x) ::: x is large\nJompus(x) ::: x is a jompus\nWooden(x) ::: x is wooden\nWumpus(x) ::: x is a wumpus\nBitter(x) ::: x is bitter\nYumpus(x) ::: x is a yumpus\nMax(x) ::: x is Max\nPremises:\n∀x (Vumpus(x) → ¬Wooden(x)) ::: Vumpuses are not wooden.\n∀x (Rompus(x) → Kind(x)) ::: Rompuses are kind.\n∀x (Rompus(x) → Tumpus(x)) ::: Rompuses are tumpuses.\n∀x (Tumpus(x) → ¬Nervous(x)) ::: Tumpuses are not nervous.\n∀x (Tumpus(x) → Impus(x)) ::: Tumpuses are impuses.\n∀x (Impus(x) → ¬Cold(x)) ::: Impuses are not cold.\n∀x (Impus(x) → Dumpus(x)) ::: Each impus is a dumpus.\n∀x (Dumpus(x) → Bright(x)) ::: Each dumpus is bright.\n∀x (Dumpus(x) → Zumpus(x)) ::: Dumpuses are zumpuses.\n∀x (Zumpus(x) → Transparent(x)) ::: Zumpuses are transparent.\n∀x (Zumpus(x) → Numpus(x)) ::: Zumpuses are numpuses.\n∀x (Numpus(x) → Large(x)) ::: Numpuses are large.\n∀x (Numpus(x) → Jompus(x)) ::: Numpuses are jompuses.\n∀x (Jompus(x) → Wooden(x)) ::: Each jompus is wooden.\n∀x (Jompus(x) → Wumpus(x)) ::: Each jompus is a wumpus.\n∀x (Wumpus(x) → ¬Bitter(x)) ::: Each wumpus is not bitter.\n∀x (Wumpus(x) → Yumpus(x)) ::: Each wumpus is a yumpus.\nImpus(max) ::: Max is an impus.\nConclusion:\nWooden(max) ::: Max is wooden.\n------"
    ]
  },
  {
    "id": "ProntoQA_360",
    "context": "Rompuses are not kind. Every rompus is a dumpus. Every dumpus is metallic. Every dumpus is an impus. Every impus is shy. Each wumpus is temperate. Each impus is a vumpus. Vumpuses are small. Each vumpus is a jompus. Jompuses are dull. Jompuses are numpuses. Every numpus is opaque. Each numpus is a tumpus. Each tumpus is orange. Tumpuses are yumpuses. Yumpuses are not temperate. Each yumpus is a zumpus. Sally is a vumpus.",
    "question": "Is the following statement true or false? Sally is temperate.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nRompus(x) ::: x is a rompus\nKind(x) ::: x is kind\nDumpus(x) ::: x is a dumpus\nMetallic(x) ::: x is metallic\nImpus(x) ::: x is an impus\nShy(x) ::: x is shy\nWumpus(x) ::: x is a wumpus\nTemperate(x) ::: x is temperate\nVumpus(x) ::: x is a vumpus\nSmall(x) ::: x is small\nJompus(x) ::: x is a jompus\nDull(x) ::: x is dull\nNumpus(x) ::: x is a numpus\nOpaque(x) ::: x is opaque\nTumpus(x) ::: x is a tumpus\nOrange(x) ::: x is orange\nYumpus(x) ::: x is a yumpus\nZumpus(x) ::: x is a zumpus\nPremises:\n∀x (Rompus(x) → ¬Kind(x)) ::: Rompuses are not kind.\n∀x (Dumpus(x) → Metallic(x)) ::: Every dumpus is metallic.\n∀x (Dumpus(x) → Impus(x)) ::: Every dumpus is an impus.\n∀x (Impus(x) → Shy(x)) ::: Every impus is shy.\n∀x (Wumpus(x) → Temperate(x)) ::: Each wumpus is temperate.\n∀x (Impus(x) → Vumpus(x)) ::: Each impus is a vumpus.\n∀x (Vumpus(x) → Small(x)) ::: Vumpuses are small.\n∀x (Vumpus(x) → Jompus(x)) ::: Each vumpus is a jompus.\n∀x (Jompus(x) → Dull(x)) ::: Jompuses are dull.\n∀x (Jompus(x) → Numpus(x)) ::: Jompuses are numpuses.\n∀x (Numpus(x) → Opaque(x)) ::: Every numpus is opaque.\n∀x (Numpus(x) → Tumpus(x)) ::: Each numpus is a tumpus.\n∀x (Tumpus(x) → Orange(x)) ::: Each tumpus is orange.\n∀x (Tumpus(x) → Yumpus(x)) ::: Tumpuses are yumpuses.\n∀x (Yumpus(x) → ¬Temperate(x)) ::: Yumpuses are not temperate.\n∀x (Yumpus(x) → Zumpus(x)) ::: Each yumpus is a zumpus.\nVumpus(sally) ::: Sally is a vumpus.\nConclusion:\nTemperate(sally) ::: Sally is temperate.\n------"
    ]
  },
  {
    "id": "ProntoQA_361",
    "context": "Every impus is dull. Each impus is a zumpus. Each zumpus is temperate. Zumpuses are jompuses. Jompuses are happy. Jompuses are yumpuses. Each yumpus is not earthy. Every yumpus is a numpus. Each numpus is not transparent. Every numpus is a dumpus. Rompuses are transparent. Dumpuses are blue. Dumpuses are vumpuses. Vumpuses are not sour. Every vumpus is a tumpus. Tumpuses are amenable. Every tumpus is a wumpus. Rex is an impus.",
    "question": "Is the following statement true or false? Rex is transparent.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nImpus(x) ::: x is an impus\nDull(x) ::: x is dull\nZumpus(x) ::: x is a zumpus\nTemperate(x) ::: x is temperate\nJompus(x) ::: x is a jompus\nHappy(x) ::: x is happy\nYumpus(x) ::: x is a yumpus\nEarthy(x) ::: x is earthy\nNumpus(x) ::: x is a numpus\nTransparent(x) ::: x is transparent\nDumpus(x) ::: x is a dumpus\nRompus(x) ::: x is a rompus\nBlue(x) ::: x is blue\nVumpus(x) ::: x is a vumpus\nSour(x) ::: x is sour\nTumpus(x) ::: x is a tumpus\nAmenable(x) ::: x is amenable\nWumpus(x) ::: x is a wumpus\nPremises:\n∀x (Impus(x) → Dull(x)) ::: Every impus is dull.\n∀x (Impus(x) → Zumpus(x)) ::: Each impus is a zumpus.\n∀x (Zumpus(x) → Temperate(x)) ::: Each zumpus is temperate.\n∀x (Zumpus(x) → Jompus(x)) ::: Zumpuses are jompuses.\n∀x (Jompus(x) → Happy(x)) ::: Jompuses are happy.\n∀x (Jompus(x) → Yumpus(x)) ::: Jompuses are yumpuses.\n∀x (Yumpus(x) → ¬Earthy(x)) ::: Each yumpus is not earthy.\n∀x (Yumpus(x) → Numpus(x)) ::: Every yumpus is a numpus.\n∀x (Numpus(x) → ¬Transparent(x)) ::: Each numpus is not transparent.\n∀x (Numpus(x) → Dumpus(x)) ::: Every numpus is a dumpus.\n∀x (Rompus(x) → Transparent(x)) ::: Rompuses are transparent.\n∀x (Dumpus(x) → Blue(x)) ::: Dumpuses are blue.\n∀x (Dumpus(x) → Vumpus(x)) ::: Dumpuses are vumpuses.\n∀x (Vumpus(x) → ¬Sour(x)) ::: Vumpuses are not sour.\n∀x (Vumpus(x) → Tumpus(x)) ::: Every vumpus is a tumpus.\n∀x (Tumpus(x) → Amenable(x)) ::: Tumpuses are amenable.\n∀x (Tumpus(x) → Wumpus(x)) ::: Every tumpus is a wumpus.\nImpus(rex) ::: Rex is an impus.\nConclusion:\nTransparent(rex) ::: Rex is transparent.\n------"
    ]
  },
  {
    "id": "ProntoQA_362",
    "context": "Every wumpus is fruity. Each wumpus is a tumpus. Each tumpus is sour. Tumpuses are dumpuses. Dumpuses are not nervous. Each dumpus is a numpus. Numpuses are angry. Every numpus is a vumpus. Vumpuses are bright. Each vumpus is a rompus. Rompuses are not wooden. Every rompus is a yumpus. Every yumpus is opaque. Every zumpus is blue. Each yumpus is a jompus. Jompuses are not blue. Jompuses are impuses. Sally is a numpus.",
    "question": "Is the following statement true or false? Sally is not blue.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nWumpus(x) ::: x is a wumpus\nFruity(x) ::: x is fruity\nTumpus(x) ::: x is a tumpus\nSour(x) ::: x is sour\nDumpus(x) ::: x is a dumpus\nNervous(x) ::: x is nervous\nNumpus(x) ::: x is a numpus\nAngry(x) ::: x is angry\nVumpus(x) ::: x is a vumpus\nBright(x) ::: x is bright\nRompus(x) ::: x is a rompus\nWooden(x) ::: x is wooden\nYumpus(x) ::: x is a yumpus\nOpaque(x) ::: x is opaque\nZumpus(x) ::: x is a zumpus\nBlue(x) ::: x is blue\nJompus(x) ::: x is a jompus\nImpus(x) ::: x is an impus\nPremises:\n∀x (Wumpus(x) → Fruity(x)) ::: Every wumpus is fruity.\n∀x (Wumpus(x) → Tumpus(x)) ::: Each wumpus is a tumpus.\n∀x (Tumpus(x) → Sour(x)) ::: Tumpuses are sour.\n∀x (Tumpus(x) → Dumpus(x)) ::: Tumpuses are dumpuses.\n∀x (Dumpus(x) → ¬Nervous(x)) ::: Dumpuses are not nervous.\n∀x (Dumpus(x) → Numpus(x)) ::: Each dumpus is a numpus.\n∀x (Numpus(x) → Angry(x)) ::: Numpuses are angry.\n∀x (Numpus(x) → Vumpus(x)) ::: Every numpus is a vumpus.\n∀x (Vumpus(x) → Bright(x)) ::: Vumpuses are bright.\n∀x (Vumpus(x) → Rompus(x)) ::: Each vumpus is a rompus.\n∀x (Rompus(x) → ¬Wooden(x)) ::: Rompuses are not wooden.\n∀x (Rompus(x) → Yumpus(x)) ::: Every rompus is a yumpus.\n∀x (Yumpus(x) → Opaque(x)) ::: Every yumpus is opaque.\n∀x (Zumpus(x) → Blue(x)) ::: Every zumpus is blue.\n∀x (Yumpus(x) → Jompus(x)) ::: Each yumpus is a jompus.\n∀x (Jompus(x) → ¬Blue(x)) ::: Jompuses are not blue.\n∀x (Jompus(x) → Impus(x)) ::: Jompuses are impuses.\nNumpus(sally) ::: Sally is a numpus.\nConclusion:\n¬Blue(sally) ::: Sally is not blue.\n------"
    ]
  },
  {
    "id": "ProntoQA_363",
    "context": "Each impus is sweet. Each impus is a dumpus. Dumpuses are small. Every dumpus is a numpus. Every numpus is mean. Every numpus is a rompus. Each rompus is red. Rompuses are tumpuses. Every tumpus is dull. Tumpuses are jompuses. Every wumpus is not dull. Each jompus is not opaque. Jompuses are vumpuses. Each vumpus is earthy. Vumpuses are zumpuses. Zumpuses are wooden. Zumpuses are yumpuses. Polly is an impus.",
    "question": "Is the following statement true or false? Polly is not dull.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nImpus(x) ::: x is an impus\nSweet(x) ::: x is sweet\nDumpus(x) ::: x is a dumpus\nSmall(x) ::: x is small\nNumpus(x) ::: x is a numpus\nMean(x) ::: x is mean\nRompus(x) ::: x is a rompus\nRed(x) ::: x is red\nTumpus(x) ::: x is a tumpus\nDull(x) ::: x is dull\nJompus(x) ::: x is a jompus\nOpaque(x) ::: x is opaque\nVumpus(x) ::: x is a vumpus\nEarthy(x) ::: x is earthy\nZumpus(x) ::: x is a zumpus\nWooden(x) ::: x is wooden\nYumpus(x) ::: x is a yumpus\nPremises:\n∀x (Impus(x) → Sweet(x)) ::: Each impus is sweet.\n∀x (Impus(x) → Dumpus(x)) ::: Each impus is a dumpus.\n∀x (Dumpus(x) → Small(x)) ::: Dumpuses are small.\n∀x (Numpus(x) → Mean(x)) ::: Every numpus is mean.\n∀x (Numpus(x) → Rompus(x)) ::: Every numpus is a rompus.\n∀x (Rompus(x) → Red(x)) ::: Every rompus is red.\n∀x (Rompus(x) → Tumpus(x)) ::: Rompuses are tumpuses.\n∀x (Tumpus(x) → Dull(x)) ::: Every tumpus is dull.\n∀x (Tumpus(x) → Jompus(x)) ::: Tumpuses are jompuses.\n∀x (Wumpus(x) → ¬Dull(x)) ::: Every wumpus is not dull.\n∀x (Jompus(x) → ¬Opaque(x)) ::: Each jompus is not opaque.\n∀x (Jompus(x) → Vumpus(x)) ::: Jompuses are vumpuses.\n∀x (Vumpus(x) → Earthy(x)) ::: Vumpuses are earthy.\n∀x (Vumpus(x) → Zumpus(x)) ::: Vumpuses are zumpuses.\n∀x (Zumpus(x) → Wooden(x)) ::: Zumpuses are wooden.\n∀x (Zumpus(x) → Yumpus(x)) ::: Zumpuses are yumpuses.\nImpus(polly) ::: Polly is an impus.\nConclusion:\n¬Dull(polly) ::: Polly is not dull.\n------"
    ]
  },
  {
    "id": "ProntoQA_364",
    "context": "Impuses are opaque. Each impus is a dumpus. Every dumpus is not small. Dumpuses are jompuses. Jompuses are temperate. Jompuses are numpuses. Each numpus is not dull. Every numpus is a yumpus. Rompuses are not kind. Every yumpus is orange. Every yumpus is a tumpus. Each tumpus is kind. Tumpuses are zumpuses. Zumpuses are floral. Each zumpus is a vumpus. Vumpuses are not sweet. Vumpuses are wumpuses. Stella is a dumpus.",
    "question": "Is the following statement true or false? Stella is not kind.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nImpus(x) ::: x is an impus\nOpaque(x) ::: x is opaque\nDumpus(x) ::: x is a dumpus\nSmall(x) ::: x is small\nJompus(x) ::: x is a jompus\nTemperate(x) ::: x is temperate\nNumpus(x) ::: x is a numpus\nDull(x) ::: x is dull\nYumpus(x) ::: x is a yumpus\nRompus(x) ::: x is a rompus\nKind(x) ::: x is kind\nOrange(x) ::: x is orange\nTumpus(x) ::: x is a tumpus\nKind(x) ::: x is kind\nZumpus(x) ::: x is a zumpus\nFloral(x) ::: x is floral\nVumpus(x) ::: x is a vumpus\nSweet(x) ::: x is sweet\nWumpus(x) ::: x is a wumpus\nStella(x) ::: x is Stella\nPremises:\n∀x (Impus(x) → Opaque(x)) ::: Impuses are opaque.\n∀x (Impus(x) → Dumpus(x)) ::: Each impus is a dumpus.\n∀x (Dumpus(x) → ¬Small(x)) ::: Every dumpus is not small.\n∀x (Dumpus(x) → Jompus(x)) ::: Dumpuses are jompuses.\n∀x (Jompus(x) → Temperate(x)) ::: Jompuses are temperate.\n∀x (Jompus(x) → Numpus(x)) ::: Jompuses are numpuses.\n∀x (Numpus(x) → ¬Dull(x)) ::: Each numpus is not dull.\n∀x (Numpus(x) → Yumpus(x)) ::: Every numpus is a yumpus.\n∀x (Rompus(x) → ¬Kind(x)) ::: Rompuses are not kind.\n∀x (Yumpus(x) → Orange(x)) ::: Every yumpus is orange.\n∀x (Yumpus(x) → Tumpus(x)) ::: Every yumpus is a tumpus.\n∀x (Tumpus(x) → Kind(x)) ::: Each tumpus is kind.\n∀x (Tumpus(x) → Zumpus(x)) ::: Tumpuses are zumpuses.\n∀x (Zumpus(x) → Floral(x)) ::: Zumpuses are floral.\n∀x (Zumpus(x) → Vumpus(x)) ::: Each zumpus is a vumpus.\n∀x (Vumpus(x) → ¬Sweet(x)) ::: Vumpuses are not sweet.\n∀x (Vumpus(x) → Wumpus(x)) ::: Vumpuses are wumpuses.\nDumpus(stella) ::: Stella is a dumpus.\nConclusion:\n¬Kind(stella) ::: Stella is not kind.\n------"
    ]
  },
  {
    "id": "ProntoQA_365",
    "context": "Yumpuses are transparent. Vumpuses are not happy. Vumpuses are zumpuses. Zumpuses are sweet. Every zumpus is a numpus. Numpuses are not hot. Numpuses are rompuses. Each rompus is blue. Rompuses are jompuses. Every jompus is bright. Jompuses are impuses. Impuses are luminous. Impuses are wumpuses. Each wumpus is not aggressive. Wumpuses are dumpuses. Each dumpus is not transparent. Dumpuses are tumpuses. Sally is a rompus.",
    "question": "Is the following statement true or false? Sally is not transparent.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nYumpus(x) ::: x is a yumpus\nTransparent(x) ::: x is transparent\nVumpus(x) ::: x is a vumpus\nHappy(x) ::: x is happy\nZumpus(x) ::: x is a zumpus\nSweet(x) ::: x is sweet\nNumpus(x) ::: x is a numpus\nHot(x) ::: x is hot\nRompus(x) ::: x is a rompus\nBlue(x) ::: x is blue\nJompus(x) ::: x is a jompus\nBright(x) ::: x is bright\nImpus(x) ::: x is an impus\nLuminous(x) ::: x is luminous\nWumpus(x) ::: x is a wumpus\nAggressive(x) ::: x is aggressive\nDumpus(x) ::: x is a dumpus\nTumpus(x) ::: x is a tumpus\nPremises:\n∀x (Yumpus(x) → Transparent(x)) ::: Yumpuses are transparent.\n∀x (Vumpus(x) → ¬Happy(x)) ::: Vumpuses are not happy.\n∀x (Vumpus(x) → Zumpus(x)) ::: Vumpuses are zumpuses.\n∀x (Zumpus(x) → Sweet(x)) ::: Zumpuses are sweet.\n∀x (Zumpus(x) → Numpus(x)) ::: Every zumpus is a numpus.\n∀x (Numpus(x) → ¬Hot(x)) ::: Numpuses are not hot.\n∀x (Numpus(x) → Rompus(x)) ::: Numpuses are rompuses.\n∀x (Rompus(x) → Blue(x)) ::: Each rompus is blue.\n∀x (Rompus(x) → Jompus(x)) ::: Rompuses are jompuses.\n∀x (Jompus(x) → Bright(x)) ::: Jompuses are bright.\n∀x (Jompus(x) → Impus(x)) ::: Jompuses are impuses.\n∀x (Impus(x) → Luminous(x)) ::: Impuses are luminous.\n∀x (Impus(x) → Wumpus(x)) ::: Impuses are wumpuses.\n∀x (Wumpus(x) → ¬Aggressive(x)) ::: Each wumpus is not aggressive.\n∀x (Wumpus(x) → Dumpus(x)) ::: Wumpuses are dumpuses.\n∀x (Dumpus(x) → ¬Transparent(x)) ::: Each dumpus is not transparent.\n∀x (Dumpus(x) → Tumpus(x)) ::: Dumpuses are tumpuses.\nRompus(sally) ::: Sally is a rompus.\nConclusion:\n¬Transparent(sally) ::: Sally is not transparent.\n------"
    ]
  },
  {
    "id": "ProntoQA_366",
    "context": "Vumpuses are not wooden. Each vumpus is a numpus. Each impus is floral. Numpuses are opaque. Numpuses are wumpuses. Wumpuses are small. Each wumpus is a jompus. Jompuses are red. Jompuses are zumpuses. Zumpuses are not sweet. Every zumpus is a yumpus. Each yumpus is not floral. Every yumpus is a tumpus. Polly is a numpus.",
    "question": "Is the following statement true or false? Polly is floral.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nVumpus(x) ::: x is a vumpus\nWooden(x) ::: x is wooden\nNumpus(x) ::: x is a numpus\nImpus(x) ::: x is an impus\nFloral(x) ::: x is floral\nOpaque(x) ::: x is opaque\nWumpus(x) ::: x is a wumpus\nSmall(x) ::: x is small\nJompus(x) ::: x is a jompus\nRed(x) ::: x is red\nZumpus(x) ::: x is a zumpus\nSweet(x) ::: x is sweet\nYumpus(x) ::: x is a yumpus\nTumpus(x) ::: x is a tumpus\nPremises:\n∀x (Vumpus(x) → ¬Wooden(x)) ::: Vumpuses are not wooden.\n∀x (Vumpus(x) → Numpus(x)) ::: Each vumpus is a numpus.\n∀x (Impus(x) → Floral(x)) ::: Each impus is floral.\n∀x (Numpus(x) → Opaque(x)) ::: Numpuses are opaque.\n∀x (Numpus(x) → Wumpus(x)) ::: Numpuses are wumpuses.\n∀x (Wumpus(x) → Small(x)) ::: Wumpuses are small.\n∀x (Wumpus(x) → Jompus(x)) ::: Each wumpus is a jompus.\n∀x (Jompus(x) → Red(x)) ::: Jompuses are red.\n∀x (Jompus(x) → Zumpus(x)) ::: Jompuses are zumpuses.\n∀x (Zumpus(x) → ¬Sweet(x)) ::: Zumpuses are not sweet.\n∀x (Zumpus(x) → Yumpus(x)) ::: Every zumpus is a yumpus.\n∀x (Yumpus(x) → ¬Floral(x)) ::: Every yumpus is not floral.\n∀x (Yumpus(x) → Tumpus(x)) ::: Every yumpus is a tumpus.\nNumpus(polly) ::: Polly is a numpus.\nConclusion:\nFloral(polly) ::: Polly is floral.\n------"
    ]
  },
  {
    "id": "ProntoQA_367",
    "context": "Dumpuses are small. Dumpuses are vumpuses. Vumpuses are opaque. Vumpuses are wumpuses. Every wumpus is liquid. Each wumpus is a zumpus. Zumpuses are not happy. Each zumpus is an impus. Each impus is not earthy. Impuses are tumpuses. Each tumpus is not spicy. Each jompus is hot. Tumpuses are rompuses. Each rompus is not dull. Every rompus is a numpus. Every numpus is not hot. Numpuses are yumpuses. Polly is a zumpus.",
    "question": "Is the following statement true or false? Polly is hot.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nDumpus(x) ::: x is a dumpus\nSmall(x) ::: x is small\nVumpus(x) ::: x is a vumpus\nOpaque(x) ::: x is opaque\nWumpus(x) ::: x is a wumpus\nLiquid(x) ::: x is liquid\nZumpus(x) ::: x is a zumpus\nHappy(x) ::: x is happy\nImpus(x) ::: x is an impus\nEarthy(x) ::: x is earthy\nTumpus(x) ::: x is a tumpus\nSpicy(x) ::: x is spicy\nJompus(x) ::: x is a jompus\nHot(x) ::: x is hot\nRompus(x) ::: x is a rompus\nDull(x) ::: x is dull\nNumpus(x) ::: x is a numpus\nYumpus(x) ::: x is a yumpus\nPremises:\n∀x (Dumpus(x) → Small(x)) ::: Dumpuses are small.\n∀x (Dumpus(x) → Vumpus(x)) ::: Dumpuses are vumpuses.\n∀x (Vumpus(x) → Opaque(x)) ::: Vumpuses are opaque.\n∀x (Vumpus(x) → Wumpus(x)) ::: Vumpuses are wumpuses.\n∀x (Wumpus(x) → Liquid(x)) ::: Every wumpus is liquid.\n∀x (Wumpus(x) → Zumpus(x)) ::: Each wumpus is a zumpus.\n∀x (Zumpus(x) → ¬Happy(x)) ::: Zumpuses are not happy.\n∀x (Zumpus(x) → Impus(x)) ::: Each zumpus is an impus.\n∀x (Impus(x) → ¬Earthy(x)) ::: Each impus is not earthy.\n∀x (Impus(x) → Tumpus(x)) ::: Impuses are tumpuses.\n∀x (Tumpus(x) → ¬Spicy(x)) ::: Each tumpus is not spicy.\n∀x (Jompus(x) → Hot(x)) ::: Each jompus is hot.\n∀x (Tumpus(x) → Rompus(x)) ::: Tumpuses are rompuses.\n∀x (Rompus(x) → ¬Dull(x)) ::: Each rompus is not dull.\n∀x (Rompus(x) → Numpus(x)) ::: Every rompus is a numpus.\n∀x (Numpus(x) → ¬Hot(x)) ::: Every numpus is not hot.\n∀x (Numpus(x) → Yumpus(x)) ::: Numpuses are yumpuses.\nZumpus(polly) ::: Polly is a zumpus.\nConclusion:\nHot(polly) ::: Polly is hot.\n------"
    ]
  },
  {
    "id": "ProntoQA_368",
    "context": "Tumpuses are large. Tumpuses are impuses. Each impus is not earthy. Each impus is a dumpus. Yumpuses are blue. Dumpuses are metallic. Every dumpus is a rompus. Each rompus is feisty. Every rompus is a jompus. Every jompus is not blue. Jompuses are zumpuses. Fae is a tumpus.",
    "question": "Is the following statement true or false? Fae is not blue.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant.lpg\n------"
    ]
  },
  {
    "id": "ProntoQA_369",
    "context": "Each numpus is transparent. Each vumpus is not brown. Every numpus is a wumpus. Each wumpus is not bright. Every wumpus is a tumpus. Each tumpus is bitter. Each tumpus is a rompus. Rompuses are temperate. Every rompus is an impus. Each impus is brown. Each impus is a yumpus. Rex is a numpus.",
    "question": "Is the following statement true or false? Rex is brown.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant.lpg\n------"
    ]
  },
  {
    "id": "ProntoQA_370",
    "context": "Wumpuses are not blue. Every wumpus is a jompus. Jompuses are temperate. Jompuses are zumpuses. Each zumpus is not small. Every zumpus is an impus. Every numpus is earthy. Impuses are not aggressive. Each impus is a yumpus. Each yumpus is not earthy. Every yumpus is a rompus. Every rompus is sweet. Rompuses are tumpuses. Each tumpus is not shy. Tumpuses are vumpuses. Each vumpus is not transparent. Vumpuses are dumpuses. Max is a wumpus.",
    "question": "Is the following statement true or false? Max is not earthy.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nWumpus(x) ::: x is a wumpus\nBlue(x) ::: x is blue\nJompus(x) ::: x is a jompus\nTemperate(x) ::: x is temperate\nZumpus(x) ::: x is a zumpus\nSmall(x) ::: x is small\nImpus(x) ::: x is an impus\nEarthy(x) ::: x is earthy\nAggressive(x) ::: x is aggressive\nYumpus(x) ::: x is a yumpus\nEarthy(x) ::: x is earthy\nRompus(x) ::: x is a rompus\nSweet(x) ::: x is sweet\nTumpus(x) ::: x is a tumpus\nShy(x) ::: x is shy\nVumpus(x) ::: x is a vumpus\nDumpus(x) ::: x is a dumpus\nMax(x) ::: x is Max\nPremises:\n∀x (Wumpus(x) → ¬Blue(x)) ::: Wumpuses are not blue.\n∀x (Wumpus(x) → Jompus(x)) ::: Every wumpus is a jompus.\n∀x (Jompus(x) → Temperate(x)) ::: Jompuses are temperate.\n∀x (Jompus(x) → Zumpus(x)) ::: Jompuses are zumpuses.\n∀x (Zumpus(x) → ¬Small(x)) ::: Each zumpus is not small.\n∀x (Zumpus(x) → Impus(x)) ::: Every zumpus is an impus.\n∀x (Numpus(x) → Earthy(x)) ::: Every numpus is earthy.\n∀x (Impus(x) → ¬Aggressive(x)) ::: Impuses are not aggressive.\n∀x (Impus(x) → Yumpus(x)) ::: Each impus is a yumpus.\n∀x (Yumpus(x) → ¬Earthy(x)) ::: Each yumpus is not earthy.\n∀x (Yumpus(x) → Rompus(x)) ::: Every yumpus is a rompus.\n∀x (Rompus(x) → Sweet(x)) ::: Rompuses are sweet.\n∀x (Rompus(x) → Tumpus(x)) ::: Rompuses are tumpuses.\n∀x (Tumpus(x) → ¬Shy(x)) ::: Each tumpus is not shy.\n∀x (Tumpus(x) → Vumpus(x)) ::: Tumpuses are vumpuses.\n∀x (Vumpus(x) → ¬Transparent(x)) ::: Each vumpus is not transparent.\n∀x (Vumpus(x) → Dumpus(x)) ::: Vumpuses are dumpuses.\nWumpus(max) ::: Max is a wumpus.\nConclusion:\n¬Earthy(max) ::: Max is not earthy.\n------"
    ]
  },
  {
    "id": "ProntoQA_371",
    "context": "Each tumpus is not happy. Each tumpus is a zumpus. Each zumpus is red. Each zumpus is a rompus. Vumpuses are not dull. Rompuses are floral. Rompuses are impuses. Impuses are not sour. Every impus is a numpus. Numpuses are hot. Numpuses are wumpuses. Every wumpus is dull. Wumpuses are jompuses. Sam is a zumpus.",
    "question": "Is the following statement true or false? Sam is not dull.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant.lpg\n------"
    ]
  },
  {
    "id": "ProntoQA_372",
    "context": "Each wumpus is not large. Wumpuses are impuses. Every impus is opaque. Impuses are numpuses. Every numpus is bright. Numpuses are rompuses. Rompuses are cold. Each tumpus is kind. Rompuses are zumpuses. Each zumpus is not kind. Every zumpus is a yumpus. Rex is a wumpus.",
    "question": "Is the following statement true or false? Rex is kind.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nWumpus(x) ::: x is a wumpus\nLarge(x) ::: x is large\nImpus(x) ::: x is an impus\nOpaque(x) ::: x is opaque\nNumpus(x) ::: x is a numpus\nBright(x) ::: x is bright\nRompus(x) ::: x is a rompus\nCold(x) ::: x is cold\nKind(x) ::: x is kind\nZumpus(x) ::: x is a zumpus\nYumpus(x) ::: x is a yumpus\nPremises:\n∀x (Wumpus(x) → ¬Large(x)) ::: Each wumpus is not large.\n∀x (Impus(x) → Opaque(x)) ::: Wumpuses are impuses.\n∀x (Impus(x) → Numpus(x)) ::: Every impus is a numpus.\n∀x (Numpus(x) → Bright(x)) ::: Numpuses are bright.\n∀x (Numpus(x) → Rompus(x)) ::: Numpuses are rompuses.\n∀x (Rompus(x) → Cold(x)) ::: Rompuses are cold.\n∀x (Tumpus(x) → Kind(x)) ::: Each tumpus is kind.\n∀x (Rompus(x) → Zumpus(x)) ::: Rompuses are zumpuses.\n∀x (Zumpus(x) → ¬Kind(x)) ::: Every zumpus is not kind.\n∀x (Zumpus(x) → Yumpus(x)) ::: Every zumpus is a yumpus.\nWumpus(rex) ::: Rex is a wumpus.\nConclusion:\nKind(rex) ::: Rex is kind.\n------"
    ]
  },
  {
    "id": "ProntoQA_373",
    "context": "Every zumpus is metallic. Every zumpus is a jompus. Every jompus is bitter. Jompuses are tumpuses. Every tumpus is mean. Tumpuses are rompuses. Rompuses are not cold. Each rompus is a vumpus. Each wumpus is not dull. Every vumpus is dull. Every vumpus is a numpus. Every numpus is not fruity. Numpuses are dumpuses. Each dumpus is small. Each dumpus is a yumpus. Yumpuses are red. Each yumpus is an impus. Sam is a zumpus.",
    "question": "Is the following statement true or false? Sam is dull.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nZumpus(x) ::: x is a zumpus\nMetallic(x) ::: x is metallic\nJompus(x) ::: x is a jompus\nBitter(x) ::: x is bitter\nTumpus(x) ::: x is a tumpus\nMean(x) ::: x is mean\nRompus(x) ::: x is a rompus\nCold(x) ::: x is cold\nVumpus(x) ::: x is a vumpus\nDull(x) ::: x is dull\nNumpus(x) ::: x is a numpus\nFruity(x) ::: x is fruity\nDumpus(x) ::: x is a dumpus\nSmall(x) ::: x is small\nYumpus(x) ::: x is a yumpus\nRed(x) ::: x is red\nImpus(x) ::: x is an impus\nPremises:\n∀x (Zumpus(x) → Metallic(x)) ::: Every zumpus is metallic.\n∀x (Zumpus(x) → Jompus(x)) ::: Every zumpus is a jompus.\n∀x (Jompus(x) → Bitter(x)) ::: Every jompus is bitter.\n∀x (Jompus(x) → Tumpus(x)) ::: Jompuses are tumpuses.\n∀x (Tumpus(x) → Mean(x)) ::: Every tumpus is mean.\n∀x (Tumpus(x) → Rompus(x)) ::: Tumpuses are rompuses.\n∀x (Rompus(x) → ¬Cold(x)) ::: Rompuses are not cold.\n∀x (Rompus(x) → Vumpus(x)) ::: Each rompus is a vumpus.\n∀x (Wumpus(x) → ¬Dull(x)) ::: Each wumpus is not dull.\n∀x (Vumpus(x) → Dull(x)) ::: Every vumpus is dull.\n∀x (Vumpus(x) → Numpus(x)) ::: Every vumpus is a numpus.\n∀x (Numpus(x) → ¬Fruity(x)) ::: Numpuses are not fruity.\n∀x (Numpus(x) → Dumpus(x)) ::: Numpuses are dumpuses.\n∀x (Dumpus(x) → Small(x)) ::: Each dumpus is small.\n∀x (Dumpus(x) → Yumpus(x)) ::: Each dumpus is a yumpus.\n∀x (Yumpus(x) → Red(x)) ::: Yumpuses are red.\n∀x (Yumpus(x) → Impus(x)) ::: Each yumpus is an impus.\nZumpus(sam) ::: Sam is a zumpus.\nConclusion:\nDull(sam) ::: Sam is dull.\n------"
    ]
  },
  {
    "id": "ProntoQA_374",
    "context": "Yumpuses are feisty. Every yumpus is a zumpus. Zumpuses are brown. Each zumpus is a rompus. Each rompus is not bitter. Rompuses are numpuses. Each numpus is not metallic. Numpuses are wumpuses. Wumpuses are large. Wumpuses are vumpuses. Vumpuses are aggressive. Vumpuses are jompuses. Every jompus is dull. Jompuses are impuses. Impuses are not temperate. Each impus is a tumpus. Dumpuses are not aggressive. Fae is a zumpus.",
    "question": "Is the following statement true or false? Fae is aggressive.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nYumpus(x) ::: x is a yumpus\nFeisty(x) ::: x is feisty\nZumpus(x) ::: x is a zumpus\nBrown(x) ::: x is brown\nRompus(x) ::: x is a rompus\nBitter(x) ::: x is bitter\nNumpus(x) ::: x is a numpus\nMetallic(x) ::: x is metallic\nWumpus(x) ::: x is a wumpus\nLarge(x) ::: x is large\nVumpus(x) ::: x is a vumpus\nAggressive(x) ::: x is aggressive\nJompus(x) ::: x is a jompus\nDull(x) ::: x is dull\nImpus(x) ::: x is an impus\nTemperate(x) ::: x is temperate\nTumpus(x) ::: x is a tumpus\nDumpus(x) ::: x is a dumpus\nPremises:\n∀x (Yumpus(x) → Feisty(x)) ::: Yumpuses are feisty.\n∀x (Yumpus(x) → Zumpus(x)) ::: Every yumpus is a zumpus.\n∀x (Zumpus(x) → Brown(x)) ::: Zumpuses are brown.\n∀x (Zumpus(x) → Rompus(x)) ::: Each zumpus is a rompus.\n∀x (Rompus(x) → ¬Bitter(x)) ::: Each rompus is not bitter.\n∀x (Rompus(x) → Numpus(x)) ::: Rompuses are numpuses.\n∀x (Numpus(x) → ¬Metallic(x)) ::: Each numpus is not metallic.\n∀x (Numpus(x) → Wumpus(x)) ::: Numpuses are wumpuses.\n∀x (Wumpus(x) → Large(x)) ::: Wumpuses are large.\n∀x (Wumpus(x) → Vumpus(x)) ::: Wumpuses are vumpuses.\n∀x (Vumpus(x) → Aggressive(x)) ::: Vumpuses are aggressive.\n∀x (Vumpus(x) → Jompus(x)) ::: Vumpuses are jompuses.\n∀x (Jompus(x) → Dull(x)) ::: Every jompus is dull.\n∀x (Jompus(x) → Impus(x)) ::: Jompuses are impuses.\n∀x (Impus(x) → ¬Temperate(x)) ::: Impuses are not temperate.\n∀x (Impus(x) → Tumpus(x)) ::: Each impus is a tumpus.\n∀x (Dumpus(x) → ¬Aggressive(x)) ::: Dumpuses are not aggressive.\nZumpus(fae) ::: Fae is a zumpus.\nConclusion:\nAggressive(fae) ::: Fae is aggressive.\n------"
    ]
  },
  {
    "id": "ProntoQA_375",
    "context": "Each dumpus is not small. Dumpuses are wumpuses. Impuses are not metallic. Wumpuses are happy. Each wumpus is a zumpus. Zumpuses are brown. Zumpuses are rompuses. Rompuses are sour. Every rompus is a tumpus. Each tumpus is metallic. Tumpuses are numpuses. Each numpus is transparent. Numpuses are vumpuses. Each vumpus is not bright. Every vumpus is a yumpus. Every yumpus is not aggressive. Yumpuses are jompuses. Fae is a dumpus.",
    "question": "Is the following statement true or false? Fae is metallic.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nDumpus(x) ::: x is a dumpus\nSmall(x) ::: x is small\nWumpus(x) ::: x is a wumpus\nImpus(x) ::: x is an impus\nMetallic(x) ::: x is metallic\nHappy(x) ::: x is happy\nZumpus(x) ::: x is a zumpus\nBrown(x) ::: x is brown\nRompus(x) ::: x is a rompus\nSour(x) ::: x is sour\nTumpus(x) ::: x is a tumpus\nMetallic(x) ::: x is metallic\nNumpus(x) ::: x is a numpus\nTransparent(x) ::: x is transparent\nVumpus(x) ::: x is a vumpus\nBright(x) ::: x is bright\nYumpus(x) ::: x is a yumpus\nAggressive(x) ::: x is aggressive\nJompus(x) ::: x is a jompus\nFae(x) ::: x is Fae\nPremises:\n∀x (Dumpus(x) → ¬Small(x)) ::: Each dumpus is not small.\n∀x (Dumpus(x) → Wumpus(x)) ::: Dumpuses are wumpuses.\n∀x (Impus(x) → ¬Metallic(x)) ::: Impuses are not metallic.\n∀x (Wumpus(x) → Happy(x)) ::: Wumpuses are happy.\n∀x (Wumpus(x) → Zumpus(x)) ::: Each wumpus is a zumpus.\n∀x (Zumpus(x) → Brown(x)) ::: Zumpuses are brown.\n∀x (Zumpus(x) → Rompus(x)) ::: Zumpuses are rompuses.\n∀x (Rompus(x) → Sour(x)) ::: Rompuses are sour.\n∀x (Rompus(x) → Tumpus(x)) ::: Every rompus is a tumpus.\n∀x (Tumpus(x) → Metallic(x)) ::: Tumpuses are metallic.\n∀x (Numpus(x) → Transparent(x)) ::: Numpuses are transparent.\n∀x (Numpus(x) → Vumpus(x)) ::: Numpuses are vumpuses.\n∀x (Vumpus(x) → ¬Bright(x)) ::: Each vumpus is not bright.\n∀x (Vumpus(x) → Yumpus(x)) ::: Every vumpus is a yumpus.\n∀x (Yumpus(x) → ¬Aggressive(x)) ::: Yumpuses are not aggressive.\n∀x (Yumpus(x) → Jompus(x)) ::: Yumpuses are jompuses.\nDumpus(fae) ::: Fae is a dumpus.\nConclusion:\nMetallic(fae) ::: Fae is metallic.\n------"
    ]
  },
  {
    "id": "ProntoQA_376",
    "context": "Every zumpus is not metallic. Each zumpus is a rompus. Every rompus is fruity. Every rompus is a yumpus. Yumpuses are large. Each yumpus is a numpus. Numpuses are aggressive. Each numpus is a jompus. Each jompus is temperate. Jompuses are vumpuses. Vumpuses are transparent. Each vumpus is a dumpus. Tumpuses are not transparent. Each dumpus is not dull. Each dumpus is an impus. Each impus is not bitter. Impuses are wumpuses. Wren is a rompus.",
    "question": "Is the following statement true or false? Wren is transparent.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nZumpus(x) ::: x is a zumpus\nMetallic(x) ::: x is metallic\nRompus(x) ::: x is a rompus\nFruity(x) ::: x is fruity\nYumpus(x) ::: x is a yumpus\nLarge(x) ::: x is large\nNumpus(x) ::: x is a numpus\nAggressive(x) ::: x is aggressive\nJompus(x) ::: x is a jompus\nTemperate(x) ::: x is temperate\nVumpus(x) ::: x is a vumpus\nTransparent(x) ::: x is transparent\nDumpus(x) ::: x is a dumpus\nTumpus(x) ::: x is a tumpus\nBitter(x) ::: x is bitter\nWumpus(x) ::: x is a wumpus\nPremises:\n∀x (Zumpus(x) → ¬Metallic(x)) ::: Every zumpus is not metallic.\n∀x (Zumpus(x) → Rompus(x)) ::: Each zumpus is a rompus.\n∀x (Rompus(x) → Fruity(x)) ::: Every rompus is fruity.\n∀x (Rompus(x) → Yumpus(x)) ::: Every rompus is a yumpus.\n∀x (Yumpus(x) → Large(x)) ::: Yumpuses are large.\n∀x (Yumpus(x) → Numpus(x)) ::: Each yumpus is a numpus.\n∀x (Numpus(x) → Aggressive(x)) ::: Numpuses are aggressive.\n∀x (Numpus(x) → Jompus(x)) ::: Each numpus is a jompus.\n∀x (Jompus(x) → Temperate(x)) ::: Each jompus is temperate.\n∀x (Jompus(x) → Vumpus(x)) ::: Jompuses are vumpuses.\n∀x (Vumpus(x) → Transparent(x)) ::: Vumpuses are transparent.\n∀x (Vumpus(x) → Dumpus(x)) ::: Each vumpus is a dumpus.\n∀x (Tumpus(x) → ¬Transparent(x)) ::: Tumpuses are not transparent.\n∀x (Dumpus(x) → ¬Dull(x)) ::: Each dumpus is not dull.\n∀x (Dumpus(x) → Impus(x)) ::: Each dumpus is an impus.\n∀x (Impus(x) → ¬Bitter(x)) ::: Impuses are not bitter.\n∀x (Impus(x) → Wumpus(x)) ::: Impuses are wumpuses.\nRompus(wren) ::: Wren is a rompus.\nConclusion:\nTransparent(wren) ::: Wren is transparent.\n------"
    ]
  },
  {
    "id": "ProntoQA_377",
    "context": "Each zumpus is metallic. Zumpuses are tumpuses. Every tumpus is not earthy. Tumpuses are rompuses. Rompuses are hot. Rompuses are impuses. Every impus is orange. Impuses are dumpuses. Dumpuses are dull. Dumpuses are vumpuses. Vumpuses are not opaque. Each vumpus is a numpus. Each jompus is not dull. Every numpus is kind. Numpuses are yumpuses. Yumpuses are not small. Every yumpus is a wumpus. Sam is a zumpus.",
    "question": "Is the following statement true or false? Sam is not dull.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nZumpus(x) ::: x is a zumpus\nMetallic(x) ::: x is metallic\nTumpus(x) ::: x is a tumpus\nEarthy(x) ::: x is earthy\nRompus(x) ::: x is a rompus\nHot(x) ::: x is hot\nImpus(x) ::: x is an impus\nOrange(x) ::: x is orange\nDumpus(x) ::: x is a dumpus\nDull(x) ::: x is dull\nVumpus(x) ::: x is a vumpus\nOpaque(x) ::: x is opaque\nNumpus(x) ::: x is a numpus\nKind(x) ::: x is kind\nYumpus(x) ::: x is a yumpus\nSmall(x) ::: x is small\nWumpus(x) ::: x is a wumpus\nPremises:\n∀x (Zumpus(x) → Metallic(x)) ::: Each zumpus is metallic.\n∀x (Zumpus(x) → Tumpus(x)) ::: Zumpuses are tumpuses.\n∀x (Tumpus(x) → ¬Earthy(x)) ::: Every tumpus is not earthy.\n∀x (Tumpus(x) → Rompus(x)) ::: Tumpuses are rompuses.\n∀x (Rompus(x) → Hot(x)) ::: Rompuses are hot.\n∀x (Rompus(x) → Impus(x)) ::: Rompuses are impuses.\n∀x (Impus(x) → Orange(x)) ::: Every impus is orange.\n∀x (Impus(x) → Dumpus(x)) ::: Impuses are dumpuses.\n∀x (Dumpus(x) → Dull(x)) ::: Dumpuses are dull.\n∀x (Dumpus(x) → Vumpus(x)) ::: Dumpuses are vumpuses.\n∀x (Vumpus(x) → ¬Opaque(x)) ::: Vumpuses are not opaque.\n∀x (Vumpus(x) → Numpus(x)) ::: Each vumpus is a numpus.\n∀x (Jompus(x) → ¬Dull(x)) ::: Every jompus is not dull.\n∀x (Numpus(x) → Kind(x)) ::: Every numpus is kind.\n∀x (Numpus(x) → Yumpus(x)) ::: Numpuses are yumpuses.\n∀x (Yumpus(x) → ¬Small(x)) ::: Yumpuses are not small.\n∀x (Yumpus(x) → Wumpus(x)) ::: Every yumpus is a wumpus.\nZumpus(sam) ::: Sam is a zumpus.\nConclusion:\n¬Dull(sam) ::: Sam is not dull.\n------"
    ]
  },
  {
    "id": "ProntoQA_378",
    "context": "Dumpuses are nervous. Each dumpus is a vumpus. Every impus is transparent. Every vumpus is cold. Each vumpus is a zumpus. Each zumpus is not mean. Zumpuses are yumpuses. Yumpuses are bright. Yumpuses are tumpuses. Every tumpus is not fruity. Each tumpus is a jompus. Every jompus is not wooden. Jompuses are wumpuses. Each wumpus is not transparent. Wumpuses are numpuses. Numpuses are not blue. Numpuses are rompuses. Max is a zumpus.",
    "question": "Is the following statement true or false? Max is transparent.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nDumpus(x) ::: x is a dumpus\nNervous(x) ::: x is nervous\nVumpus(x) ::: x is a vumpus\nImpus(x) ::: x is an impus\nTransparent(x) ::: x is transparent\nCold(x) ::: x is cold\nZumpus(x) ::: x is a zumpus\nMean(x) ::: x is mean\nYumpus(x) ::: x is a yumpus\nBright(x) ::: x is bright\nTumpus(x) ::: x is a tumpus\nFruity(x) ::: x is fruity\nJompus(x) ::: x is a jompus\nWooden(x) ::: x is wooden\nWumpus(x) ::: x is a wumpus\nNumpus(x) ::: x is a numpus\nBlue(x) ::: x is blue\nRompus(x) ::: x is a rompus\nPremises:\n∀x (Dumpus(x) → Nervous(x)) ::: Dumpuses are nervous.\n∀x (Dumpus(x) → Vumpus(x)) ::: Each dumpus is a vumpus.\n∀x (Impus(x) → Transparent(x)) ::: Every impus is transparent.\n∀x (Vumpus(x) → Cold(x)) ::: Every vumpus is cold.\n∀x (Vumpus(x) → Zumpus(x)) ::: Each vumpus is a zumpus.\n∀x (Zumpus(x) → ¬Mean(x)) ::: Each zumpus is not mean.\n∀x (Zumpus(x) → Yumpus(x)) ::: Zumpuses are yumpuses.\n∀x (Yumpus(x) → Bright(x)) ::: Yumpuses are bright.\n∀x (Yumpus(x) → Tumpus(x)) ::: Yumpuses are tumpuses.\n∀x (Tumpus(x) → ¬Fruity(x)) ::: Every tumpus is not fruity.\n∀x (Tumpus(x) → Jompus(x)) ::: Each tumpus is a jompus.\n∀x (Jompus(x) → ¬Wooden(x)) ::: Every jompus is not wooden.\n∀x (Jompus(x) → Wumpus(x)) ::: Jompuses are wumpuses.\n∀x (Wumpus(x) → ¬Transparent(x)) ::: Each wumpus is not transparent.\n∀x (Wumpus(x) → Numpus(x)) ::: Wumpuses are numpuses.\n∀x (Numpus(x) → ¬Blue(x)) ::: Numpuses are not blue.\n∀x (Numpus(x) → Rompus(x)) ::: Numpuses are rompuses.\nZumpus(max) ::: Max is a zumpus.\nConclusion:\nTransparent(max) ::: Max is transparent.\n------"
    ]
  },
  {
    "id": "ProntoQA_379",
    "context": "Every impus is not transparent. Every impus is a yumpus. Each yumpus is floral. Every yumpus is a tumpus. Every tumpus is shy. Tumpuses are zumpuses. Zumpuses are metallic. Zumpuses are dumpuses. Dumpuses are not sour. Every dumpus is a rompus. Rompuses are not large. Rompuses are vumpuses. Wumpuses are sour. Vumpuses are dull. Every vumpus is a numpus. Wren is an impus.",
    "question": "Is the following statement true or false? Wren is not sour.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nImpus(x) ::: x is an impus\nTransparent(x) ::: x is transparent\nYumpus(x) ::: x is a yumpus\nFloral(x) ::: x is floral\nTumpus(x) ::: x is a tumpus\nShy(x) ::: x is shy\nZumpus(x) ::: x is a zumpus\nMetallic(x) ::: x is metallic\nDumpus(x) ::: x is a dumpus\nSour(x) ::: x is sour\nRompus(x) ::: x is a rompus\nLarge(x) ::: x is large\nVumpus(x) ::: x is a vumpus\nDull(x) ::: x is dull\nNumpus(x) ::: x is a numpus\nWren(x) ::: x is Wren\nPremises:\n∀x (Impus(x) → ¬Transparent(x)) ::: Every impus is not transparent.\n∀x (Impus(x) → Yumpus(x)) ::: Every impus is a yumpus.\n∀x (Yumpus(x) → Floral(x)) ::: Each yumpus is floral.\n∀x (Yumpus(x) → Tumpus(x)) ::: Every yumpus is a tumpus.\n∀x (Tumpus(x) → Shy(x)) ::: Every tumpus is shy.\n∀x (Tumpus(x) → Zumpus(x)) ::: Tumpuses are zumpuses.\n∀x (Zumpus(x) → Metallic(x)) ::: Zumpuses are metallic.\n∀x (Zumpus(x) → Dumpus(x)) ::: Zumpuses are dumpuses.\n∀x (Dumpus(x) → ¬Sour(x)) ::: Dumpuses are not sour.\n∀x (Dumpus(x) → Rompus(x)) ::: Every dumpus is a rompus.\n∀x (Rompus(x) → ¬Large(x)) ::: Rompuses are not large.\n∀x (Rompus(x) → Vumpus(x)) ::: Rompuses are vumpuses.\n∀x (Wumpus(x) → Sour(x)) ::: Wumpuses are sour.\n∀x (Vumpus(x) → Dull(x)) ::: Vumpuses are dull.\n∀x (Vumpus(x) → Numpus(x)) ::: Every vumpus is a numpus.\nImpus(wren) ::: Wren is an impus.\nConclusion:\n¬Sour(wren) ::: Wren is not sour.\n------"
    ]
  },
  {
    "id": "ProntoQA_380",
    "context": "Every dumpus is large. Wumpuses are happy. Each dumpus is an impus. Impuses are opaque. Impuses are jompuses. Every jompus is fruity. Each jompus is a zumpus. Zumpuses are orange. Each zumpus is a vumpus. Vumpuses are bright. Each vumpus is a tumpus. Each tumpus is not sweet. Tumpuses are rompuses. Each rompus is metallic. Rompuses are yumpuses. Yumpuses are not happy. Yumpuses are numpuses. Polly is a zumpus.",
    "question": "Is the following statement true or false? Polly is not happy.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nDumpus(x) ::: x is a dumpus\nLarge(x) ::: x is large\nHappy(x) ::: x is happy\nImpus(x) ::: x is an impus\nOpaque(x) ::: x is opaque\nJompus(x) ::: x is a jompus\nFruity(x) ::: x is fruity\nZumpus(x) ::: x is a zumpus\nOrange(x) ::: x is orange\nVumpus(x) ::: x is a vumpus\nBright(x) ::: x is bright\nTumpus(x) ::: x is a tumpus\nSweet(x) ::: x is sweet\nRompus(x) ::: x is a rompus\nMetallic(x) ::: x is metallic\nYumpus(x) ::: x is a yumpus\nHappy(x) ::: x is happy\nNumpus(x) ::: x is a numpus\nPremises:\n∀x (Dumpus(x) → Large(x)) ::: Every dumpus is large.\n∀x (Wumpus(x) → Happy(x)) ::: Wumpuses are happy.\n∀x (Dumpus(x) → Impus(x)) ::: Each dumpus is an impus.\n∀x (Impus(x) → Opaque(x)) ::: Impuses are opaque.\n∀x (Impus(x) → Jompus(x)) ::: Impuses are jompuses.\n∀x (Jompus(x) → Fruity(x)) ::: Every jompus is fruity.\n∀x (Jompus(x) → Zumpus(x)) ::: Each jompus is a zumpus.\n∀x (Zumpus(x) → Orange(x)) ::: Zumpuses are orange.\n∀x (Zumpus(x) → Vumpus(x)) ::: Each zumpus is a vumpus.\n∀x (Vumpus(x) → Bright(x)) ::: Vumpuses are bright.\n∀x (Vumpus(x) → Tumpus(x)) ::: Each vumpus is a tumpus.\n∀x (Tumpus(x) → ¬Sweet(x)) ::: Each tumpus is not sweet.\n∀x (Rompus(x) → Metallic(x)) ::: Rompuses are metallic.\n∀x (Rompus(x) → Yumpus(x)) ::: Rompuses are yumpuses.\n∀x (Yumpus(x) → ¬Happy(x)) ::: Yumpuses are not happy.\n∀x (Yumpus(x) → Numpus(x)) ::: Yumpuses are numpuses.\nZumpus(polly) ::: Polly is a zumpus.\nConclusion:\n¬Happy(polly) ::: Polly is not happy.\n------"
    ]
  },
  {
    "id": "ProntoQA_381",
    "context": "Numpuses are dull. Every numpus is a zumpus. Every zumpus is wooden. Zumpuses are wumpuses. Every wumpus is spicy. Wumpuses are dumpuses. Every dumpus is earthy. Vumpuses are not feisty. Each dumpus is a yumpus. Yumpuses are large. Yumpuses are tumpuses. Tumpuses are feisty. Each tumpus is a rompus. Rompuses are blue. Each rompus is an impus. Sally is a zumpus.",
    "question": "Is the following statement true or false? Sally is feisty.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nNumpus(x) ::: x is a numpus\nDull(x) ::: x is dull\nZumpus(x) ::: x is a zumpus\nWooden(x) ::: x is wooden\nWumpus(x) ::: x is a wumpus\nSpicy(x) ::: x is spicy\nDumpus(x) ::: x is a dumpus\nEarthy(x) ::: x is earthy\nVumpus(x) ::: x is a vumpus\nFeisty(x) ::: x is feisty\nYumpus(x) ::: x is a yumpus\nLarge(x) ::: x is large\nTumpus(x) ::: x is a tumpus\nFeisty(x) ::: x is feisty\nRompus(x) ::: x is a rompus\nBlue(x) ::: x is blue\nImpus(x) ::: x is an impus\nPremises:\n∀x (Numpus(x) → Dull(x)) ::: Numpuses are dull.\n∀x (Numpus(x) → Zumpus(x)) ::: Every numpus is a zumpus.\n∀x (Zumpus(x) → Wooden(x)) ::: Every zumpus is wooden.\n∀x (Zumpus(x) → Wumpus(x)) ::: Zumpuses are wumpuses.\n∀x (Wumpus(x) → Spicy(x)) ::: Every wumpus is spicy.\n∀x (Wumpus(x) → Dumpus(x)) ::: Wumpuses are dumpuses.\n∀x (Dumpus(x) → Earthy(x)) ::: Every dumpus is earthy.\n∀x (Vumpus(x) → ¬Feisty(x)) ::: Vumpuses are not feisty.\n∀x (Dumpus(x) → Yumpus(x)) ::: Each dumpus is a yumpus.\n∀x (Yumpus(x) → Large(x)) ::: Yumpuses are large.\n∀x (Yumpus(x) → Tumpus(x)) ::: Yumpuses are tumpuses.\n∀x (Tumpus(x) → Feisty(x)) ::: Tumpuses are feisty.\n∀x (Tumpus(x) → Rompus(x)) ::: Each tumpus is a rompus.\n∀x (Rompus(x) → Blue(x)) ::: Rompuses are blue.\n∀x (Rompus(x) → Impus(x)) ::: Each rompus is an impus.\nZumpus(sally) ::: Sally is a zumpus.\nConclusion:\nFeisty(sally) ::: Sally is feisty.\n------"
    ]
  },
  {
    "id": "ProntoQA_382",
    "context": "Each jompus is fruity. Each jompus is a vumpus. Each vumpus is opaque. Vumpuses are wumpuses. Every wumpus is bitter. Wumpuses are rompuses. Rompuses are not happy. Every rompus is a zumpus. Zumpuses are temperate. Zumpuses are numpuses. Each numpus is not bright. Dumpuses are not temperate. Numpuses are tumpuses. Every tumpus is large. Each tumpus is an impus. Every impus is metallic. Impuses are yumpuses. Polly is a jompus.",
    "question": "Is the following statement true or false? Polly is not temperate.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nJompus(x) ::: x is a jompus\nFruity(x) ::: x is fruity\nVumpus(x) ::: x is a vumpus\nOpaque(x) ::: x is opaque\nWumpus(x) ::: x is a wumpus\nBitter(x) ::: x is bitter\nRompus(x) ::: x is a rompus\nHappy(x) ::: x is happy\nZumpus(x) ::: x is a zumpus\nTemperate(x) ::: x is temperate\nNumpus(x) ::: x is a numpus\nBright(x) ::: x is bright\nDumpus(x) ::: x is a dumpus\nTumpus(x) ::: x is a tumpus\nLarge(x) ::: x is large\nImpus(x) ::: x is an impus\nMetallic(x) ::: x is metallic\nYumpus(x) ::: x is a yumpus\nPremises:\n∀x (Jompus(x) → Fruity(x)) ::: Each jompus is fruity.\n∀x (Jompus(x) → Vumpus(x)) ::: Each jompus is a vumpus.\n∀x (Vumpus(x) → Opaque(x)) ::: Each vumpus is opaque.\n∀x (Vumpus(x) → Wumpus(x)) ::: Vumpuses are wumpuses.\n∀x (Wumpus(x) → Bitter(x)) ::: Every wumpus is bitter.\n∀x (Wumpus(x) → Rompus(x)) ::: Wumpuses are rompuses.\n∀x (Rompus(x) → ¬Happy(x)) ::: Rompuses are not happy.\n∀x (Rompus(x) → Zumpus(x)) ::: Every rompus is a zumpus.\n∀x (Zumpus(x) → Temperate(x)) ::: Zumpuses are temperate.\n∀x (Zumpus(x) → Numpus(x)) ::: Zumpuses are numpuses.\n∀x (Numpus(x) → ¬Bright(x)) ::: Each numpus is not bright.\n∀x (Dumpus(x) → ¬Temperate(x)) ::: Dumpuses are not temperate.\n∀x (Numpus(x) → Tumpus(x)) ::: Numpuses are tumpuses.\n∀x (Tumpus(x) → Large(x)) ::: Every tumpus is large.\n∀x (Tumpus(x) → Impus(x)) ::: Each tumpus is an impus.\n∀x (Impus(x) → Metallic(x)) ::: Every impus is metallic.\n∀x (Impus(x) → Yumpus(x)) ::: Impuses are yumpuses.\nJompus(polly) ::: Polly is a jompus.\nConclusion:\n¬Temperate(polly) ::: Polly is not temperate.\n------"
    ]
  },
  {
    "id": "ProntoQA_383",
    "context": "Every wumpus is small. Wumpuses are tumpuses. Tumpuses are not fruity. Every zumpus is not brown. Tumpuses are impuses. Every impus is luminous. Each impus is a jompus. Jompuses are not sweet. Jompuses are yumpuses. Every yumpus is feisty. Yumpuses are dumpuses. Each dumpus is angry. Every dumpus is a rompus. Each rompus is opaque. Rompuses are numpuses. Each numpus is brown. Numpuses are vumpuses. Sam is a jompus.",
    "question": "Is the following statement true or false? Sam is brown.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nWumpus(x) ::: x is a wumpus\nSmall(x) ::: x is small\nTumpus(x) ::: x is a tumpus\nFruity(x) ::: x is fruity\nZumpus(x) ::: x is a zumpus\nBrown(x) ::: x is brown\nImpus(x) ::: x is an impus\nLuminous(x) ::: x is luminous\nJompus(x) ::: x is a jompus\nSweet(x) ::: x is sweet\nYumpus(x) ::: x is a yumpus\nFeisty(x) ::: x is feisty\nDumpus(x) ::: x is a dumpus\nAngry(x) ::: x is angry\nRompus(x) ::: x is a rompus\nOpaque(x) ::: x is opaque\nNumpus(x) ::: x is a numpus\nBrown(x) ::: x is brown\nVumpus(x) ::: x is a vumpus\nPremises:\n∀x (Wumpus(x) → Small(x)) ::: Every wumpus is small.\n∀x (Wumpus(x) → Tumpus(x)) ::: Wumpuses are tumpuses.\n∀x (Tumpus(x) → ¬Fruity(x)) ::: Tumpuses are not fruity.\n∀x (Zumpus(x) → ¬Brown(x)) ::: Every zumpus is not brown.\n∀x (Tumpus(x) → Impus(x)) ::: Tumpuses are impuses.\n∀x (Impus(x) → Luminous(x)) ::: Every impus is luminous.\n∀x (Impus(x) → Jompus(x)) ::: Each impus is a jompus.\n∀x (Jompus(x) → ¬Sweet(x)) ::: Jompuses are not sweet.\n∀x (Jompus(x) → Yumpus(x)) ::: Jompuses are yumpuses.\n∀x (Yumpus(x) → Feisty(x)) ::: Every yumpus is feisty.\n∀x (Yumpus(x) → Dumpus(x)) ::: Yumpuses are dumpuses.\n∀x (Dumpus(x) → Angry(x)) ::: Each dumpus is angry.\n∀x (Dumpus(x) → Rompus(x)) ::: Every dumpus is a rompus.\n∀x (Rompus(x) → Opaque(x)) ::: Each rompus is opaque.\n∀x (Rompus(x) → Numpus(x)) ::: Rompuses are numpuses.\n∀x (Numpus(x) → Brown(x)) ::: Each numpus is brown.\n∀x (Numpus(x) → Vumpus(x)) ::: Numpuses are vumpuses.\nJompus(sam) ::: Sam is a jompus.\nConclusion:\nBrown(sam) ::: Sam is brown.\n------"
    ]
  },
  {
    "id": "ProntoQA_384",
    "context": "Vumpuses are transparent. Vumpuses are dumpuses. Dumpuses are temperate. Each dumpus is a rompus. Each rompus is happy. Every rompus is a jompus. Each jompus is dull. Jompuses are yumpuses. Yumpuses are not sweet. Yumpuses are zumpuses. Each zumpus is not kind. Every zumpus is a numpus. Each wumpus is kind. Each numpus is wooden. Numpuses are tumpuses. Each tumpus is brown. Each tumpus is an impus. Fae is a dumpus.",
    "question": "Is the following statement true or false? Fae is not kind.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nVumpus(x) ::: x is a vumpus\nTransparent(x) ::: x is transparent\nDumpus(x) ::: x is a dumpus\nTemperate(x) ::: x is temperate\nRompus(x) ::: x is a rompus\nHappy(x) ::: x is happy\nJompus(x) ::: x is a jompus\nDull(x) ::: x is dull\nYumpus(x) ::: x is a yumpus\nSweet(x) ::: x is sweet\nZumpus(x) ::: x is a zumpus\nKind(x) ::: x is kind\nNumpus(x) ::: x is a numpus\nWooden(x) ::: x is wooden\nTumpus(x) ::: x is a tumpus\nBrown(x) ::: x is brown\nImpus(x) ::: x is an impus\nFae(x) ::: x is Fae\nPremises:\n∀x (Vumpus(x) → Transparent(x)) ::: Vumpuses are transparent.\n∀x (Vumpus(x) → Dumpus(x)) ::: Vumpuses are dumpuses.\n∀x (Dumpus(x) → Temperate(x)) ::: Dumpuses are temperate.\n∀x (Dumpus(x) → Rompus(x)) ::: Each dumpus is a rompus.\n∀x (Rompus(x) → Happy(x)) ::: Each rompus is happy.\n∀x (Rompus(x) → Jompus(x)) ::: Every rompus is a jompus.\n∀x (Jompus(x) → Dull(x)) ::: Each jompus is dull.\n∀x (Jompus(x) → Yumpus(x)) ::: Jompuses are yumpuses.\n∀x (Yumpus(x) → ¬Sweet(x)) ::: Yumpuses are not sweet.\n∀x (Yumpus(x) → Zumpus(x)) ::: Yumpuses are zumpuses.\n∀x (Zumpus(x) → ¬Kind(x)) ::: Each zumpus is not kind.\n∀x (Zumpus(x) → Numpus(x)) ::: Every zumpus is a numpus.\n∀x (Wumpus(x) → Kind(x)) ::: Each numpus is kind.\n∀x (Numpus(x) → Wooden(x)) ::: Each numpus is wooden.\n∀x (Numpus(x) → Tumpus(x)) ::: Numpuses are tumpuses.\n∀x (Tumpus(x) → Brown(x)) ::: Each tumpus is brown.\n∀x (Tumpus(x) → Impus(x)) ::: Each tumpus is an impus.\nDumpus(fae) ::: Fae is a dumpus.\nConclusion:\n¬Kind(fae) ::: Fae is not kind.\n------"
    ]
  },
  {
    "id": "ProntoQA_385",
    "context": "Yumpuses are large. Yumpuses are numpuses. Numpuses are opaque. Each numpus is a zumpus. Vumpuses are not fruity. Zumpuses are happy. Zumpuses are impuses. Impuses are temperate. Impuses are jompuses. Each jompus is bright. Jompuses are wumpuses. Wumpuses are fruity. Wumpuses are rompuses. Rompuses are not spicy. Rompuses are dumpuses. Every dumpus is not amenable. Dumpuses are tumpuses. Wren is a numpus.",
    "question": "Is the following statement true or false? Wren is fruity.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nYumpus(x) ::: x is a yumpus\nLarge(x) ::: x is large\nNumpus(x) ::: x is a numpus\nOpaque(x) ::: x is opaque\nZumpus(x) ::: x is a zumpus\nVumpus(x) ::: x is a vumpus\nFruity(x) ::: x is fruity\nHappy(x) ::: x is happy\nImpus(x) ::: x is an impus\nTemperate(x) ::: x is temperate\nJompus(x) ::: x is a jompus\nBright(x) ::: x is bright\nWumpus(x) ::: x is a wumpus\nRompus(x) ::: x is a rompus\nSpicy(x) ::: x is spicy\nDumpus(x) ::: x is a dumpus\nAmenable(x) ::: x is amenable\nTumpus(x) ::: x is a tumpus\nPremises:\n∀x (Yumpus(x) → Large(x)) ::: Yumpuses are large.\n∀x (Numpus(x) → Opaque(x)) ::: Numpuses are opaque.\n∀x (Numpus(x) → Zumpus(x)) ::: Each numpus is a zumpus.\n∀x (Vumpus(x) → ¬Fruity(x)) ::: Vumpuses are not fruity.\n∀x (Zumpus(x) → Happy(x)) ::: Zumpuses are happy.\n∀x (Zumpus(x) → Impus(x)) ::: Zumpuses are impuses.\n∀x (Impus(x) → Temperate(x)) ::: Impuses are temperate.\n∀x (Impus(x) → Jompus(x)) ::: Impuses are jompuses.\n∀x (Jompus(x) → Bright(x)) ::: Each jompus is bright.\n∀x (Jompus(x) → Wumpus(x)) ::: Jompuses are wumpuses.\n∀x (Wumpus(x) → Fruity(x)) ::: Wumpuses are fruity.\n∀x (Wumpus(x) → Rompus(x)) ::: Wumpuses are rompuses.\n∀x (Rompus(x) → ¬Spicy(x)) ::: Rompuses are not spicy.\n∀x (Rompus(x) → Dumpus(x)) ::: Rompuses are dumpuses.\n∀x (Dumpus(x) → ¬Amenable(x)) ::: Every dumpus is not amenable.\n∀x (Dumpus(x) → Tumpus(x)) ::: Dumpuses are tumpuses.\nNumpus(wren) ::: Wren is a numpus.\nConclusion:\nFruity(wren) ::: Wren is fruity.\n------"
    ]
  },
  {
    "id": "ProntoQA_386",
    "context": "Rompuses are sour. Rompuses are jompuses. Jompuses are large. Jompuses are dumpuses. Each dumpus is not orange. Each yumpus is floral. Dumpuses are wumpuses. Every wumpus is kind. Every wumpus is a tumpus. Every tumpus is not floral. Tumpuses are numpuses. Every numpus is not feisty. Numpuses are zumpuses. Zumpuses are liquid. Zumpuses are impuses. Wren is a rompus.",
    "question": "Is the following statement true or false? Wren is floral.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant.lpg\n------"
    ]
  },
  {
    "id": "ProntoQA_387",
    "context": "Jompuses are bright. Jompuses are yumpuses. Each yumpus is luminous. Yumpuses are impuses. Every impus is not hot. Each impus is a vumpus. Vumpuses are feisty. Each vumpus is a dumpus. Each dumpus is opaque. Each dumpus is a zumpus. Every zumpus is fruity. Zumpuses are tumpuses. Each tumpus is sweet. Tumpuses are numpuses. Each rompus is not red. Numpuses are red. Each numpus is a wumpus. Polly is a vumpus.",
    "question": "Is the following statement true or false? Polly is red.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nJompus(x) ::: x is a jompus\nBright(x) ::: x is bright\nYumpus(x) ::: x is a yumpus\nLuminous(x) ::: x is luminous\nImpus(x) ::: x is an impus\nHot(x) ::: x is hot\nVumpus(x) ::: x is a vumpus\nFeisty(x) ::: x is feisty\nDumpus(x) ::: x is a dumpus\nOpaque(x) ::: x is opaque\nZumpus(x) ::: x is a zumpus\nFruity(x) ::: x is fruity\nTumpus(x) ::: x is a tumpus\nSweet(x) ::: x is sweet\nNumpus(x) ::: x is a numpus\nRed(x) ::: x is red\nWumpus(x) ::: x is a wumpus\nPremises:\n∀x (Jompus(x) → Bright(x)) ::: Jompuses are bright.\n∀x (Jompus(x) → Yumpus(x)) ::: Jompuses are yumpuses.\n∀x (Yumpus(x) → Luminous(x)) ::: Each yumpus is luminous.\n∀x (Yumpus(x) → Impus(x)) ::: Yumpuses are impuses.\n∀x (Impus(x) → ¬Hot(x)) ::: Every impus is not hot.\n∀x (Impus(x) → Vumpus(x)) ::: Each impus is a vumpus.\n∀x (Vumpus(x) → Feisty(x)) ::: Vumpuses are feisty.\n∀x (Vumpus(x) → Dumpus(x)) ::: Each vumpus is a dumpus.\n∀x (Dumpus(x) → Opaque(x)) ::: Each dumpus is opaque.\n∀x (Dumpus(x) → Zumpus(x)) ::: Each dumpus is a zumpus.\n∀x (Zumpus(x) → Fruity(x)) ::: Every zumpus is fruity.\n∀x (Zumpus(x) → Tumpus(x)) ::: Zumpuses are tumpuses.\n∀x (Tumpus(x) → Sweet(x)) ::: Each tumpus is sweet.\n∀x (Tumpus(x) → Numpus(x)) ::: Tumpuses are numpuses.\n∀x (Rompus(x) → ¬Red(x)) ::: Each rompus is not red.\n∀x (Numpus(x) → Red(x)) ::: Numpuses are red.\n∀x (Numpus(x) → Wumpus(x)) ::: Each numpus is a wumpus.\nVumpus(polly) ::: Polly is a vumpus.\nConclusion:\nRed(polly) ::: Polly is red.\n------"
    ]
  },
  {
    "id": "ProntoQA_388",
    "context": "Wumpuses are fruity. Wumpuses are yumpuses. Yumpuses are bright. Every yumpus is a jompus. Jompuses are not large. Each jompus is a zumpus. Every zumpus is transparent. Zumpuses are numpuses. Numpuses are not luminous. Every dumpus is luminous. Numpuses are impuses. Each impus is feisty. Every impus is a tumpus. Every tumpus is blue. Every tumpus is a vumpus. Vumpuses are bitter. Vumpuses are rompuses. Rex is a wumpus.",
    "question": "Is the following statement true or false? Rex is not luminous.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nWumpus(x) ::: x is a wumpus\nFruity(x) ::: x is fruity\nYumpus(x) ::: x is a yumpus\nBright(x) ::: x is bright\nJompus(x) ::: x is a jompus\nLarge(x) ::: x is large\nZumpus(x) ::: x is a zumpus\nTransparent(x) ::: x is transparent\nNumpus(x) ::: x is a numpus\nLuminous(x) ::: x is luminous\nDumpus(x) ::: x is a dumpus\nImpus(x) ::: x is an impus\nFeisty(x) ::: x is feisty\nTumpus(x) ::: x is a tumpus\nBlue(x) ::: x is blue\nVumpus(x) ::: x is a vumpus\nBitter(x) ::: x is bitter\nRompus(x) ::: x is a rompus\nPremises:\n∀x (Wumpus(x) → Fruity(x)) ::: Wumpuses are fruity.\n∀x (Wumpus(x) → Yumpus(x)) ::: Wumpuses are yumpuses.\n∀x (Yumpus(x) → Bright(x)) ::: Yumpuses are bright.\n∀x (Yumpus(x) → Jompus(x)) ::: Every yumpus is a jompus.\n∀x (Jompus(x) → ¬Large(x)) ::: Jompuses are not large.\n∀x (Jompus(x) → Zumpus(x)) ::: Each jompus is a zumpus.\n∀x (Zumpus(x) → Transparent(x)) ::: Every zumpus is transparent.\n∀x (Zumpus(x) → Numpus(x)) ::: Zumpuses are numpuses.\n∀x (Numpus(x) → ¬Luminous(x)) ::: Numpuses are not luminous.\n∀x (Dumpus(x) → Luminous(x)) ::: Every dumpus is luminous.\n∀x (Numpus(x) → Impus(x)) ::: Numpuses are impuses.\n∀x (Impus(x) → Feisty(x)) ::: Each impus is feisty.\n∀x (Impus(x) → Tumpus(x)) ::: Every impus is a tumpus.\n∀x (Tumpus(x) → Blue(x)) ::: Every tumpus is blue.\n∀x (Tumpus(x) → Vumpus(x)) ::: Every tumpus is a vumpus.\n∀x (Vumpus(x) → Bitter(x)) ::: Vumpuses are bitter.\n∀x (Vumpus(x) → Rompus(x)) ::: Vumpuses are rompuses.\nWumpus(rex) ::: Rex is a wumpus.\nConclusion:\n¬Luminous(rex) ::: Rex is not luminous.\n------"
    ]
  },
  {
    "id": "ProntoQA_389",
    "context": "Jompuses are not brown. Each jompus is a tumpus. Tumpuses are not bitter. Tumpuses are numpuses. Every numpus is not transparent. Every wumpus is cold. Each numpus is a zumpus. Every zumpus is kind. Every zumpus is a dumpus. Every dumpus is not cold. Each dumpus is a rompus. Each rompus is not large. Every rompus is a yumpus. Every yumpus is fruity. Yumpuses are vumpuses. Every vumpus is bright. Every vumpus is an impus. Sally is a jompus.",
    "question": "Is the following statement true or false? Sally is not cold.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nJompus(x) ::: x is a jompus\nBrown(x) ::: x is brown\nTumpus(x) ::: x is a tumpus\nBitter(x) ::: x is bitter\nNumpus(x) ::: x is a numpus\nTransparent(x) ::: x is transparent\nWumpus(x) ::: x is a wumpus\nCold(x) ::: x is cold\nZumpus(x) ::: x is a zumpus\nKind(x) ::: x is kind\nDumpus(x) ::: x is a dumpus\nRompus(x) ::: x is a rompus\nLarge(x) ::: x is large\nYumpus(x) ::: x is a yumpus\nFruity(x) ::: x is fruity\nVumpus(x) ::: x is a vumpus\nBright(x) ::: x is bright\nImpus(x) ::: x is an impus\nPremises:\n∀x (Jompus(x) → ¬Brown(x)) ::: Jompuses are not brown.\n∀x (Jompus(x) → Tumpus(x)) ::: Each jompus is a tumpus.\n∀x (Tumpus(x) → ¬Bitter(x)) ::: Tumpuses are not bitter.\n∀x (Tumpus(x) → Numpus(x)) ::: Tumpuses are numpuses.\n∀x (Numpus(x) → ¬Transparent(x)) ::: Every numpus is not transparent.\n∀x (Wumpus(x) → Cold(x)) ::: Every wumpus is cold.\n∀x (Numpus(x) → Zumpus(x)) ::: Each numpus is a zumpus.\n∀x (Zumpus(x) → Kind(x)) ::: Every zumpus is kind.\n∀x (Zumpus(x) → Dumpus(x)) ::: Every zumpus is a dumpus.\n∀x (Dumpus(x) → ¬Cold(x)) ::: Every dumpus is not cold.\n∀x (Dumpus(x) → Rompus(x)) ::: Each dumpus is a rompus.\n∀x (Rompus(x) → ¬Large(x)) ::: Every rompus is not large.\n∀x (Rompus(x) → Yumpus(x)) ::: Every rompus is a yumpus.\n∀x (Yumpus(x) → Fruity(x)) ::: Every yumpus is fruity.\n∀x (Yumpus(x) → Vumpus(x)) ::: Yumpuses are vumpuses.\n∀x (Vumpus(x) → Bright(x)) ::: Every vumpus is bright.\n∀x (Vumpus(x) → Impus(x)) ::: Every vumpus is an impus.\nJompus(sally) ::: Sally is a jompus.\nConclusion:\n¬Cold(sally) ::: Sally is not cold.\n------"
    ]
  },
  {
    "id": "ProntoQA_390",
    "context": "Each zumpus is not red. Zumpuses are rompuses. Rompuses are happy. Every rompus is a numpus. Each numpus is not sweet. Numpuses are yumpuses. Every yumpus is not small. Yumpuses are tumpuses. Tumpuses are not cold. Tumpuses are vumpuses. Vumpuses are not transparent. Vumpuses are impuses. Each impus is not fruity. Impuses are wumpuses. Each jompus is fruity. Wumpuses are not dull. Each wumpus is a dumpus. Max is a numpus.",
    "question": "Is the following statement true or false? Max is fruity.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nZumpus(x) ::: x is a zumpus\nRed(x) ::: x is red\nRompus(x) ::: x is a rompus\nHappy(x) ::: x is happy\nNumpus(x) ::: x is a numpus\nSweet(x) ::: x is sweet\nYumpus(x) ::: x is a yumpus\nSmall(x) ::: x is small\nTumpus(x) ::: x is a tumpus\nCold(x) ::: x is cold\nVumpus(x) ::: x is a vumpus\nTransparent(x) ::: x is transparent\nImpus(x) ::: x is an impus\nFruity(x) ::: x is fruity\nWumpus(x) ::: x is a wumpus\nDull(x) ::: x is dull\nDumpus(x) ::: x is a dumpus\nPremises:\n∀x (Zumpus(x) → ¬Red(x)) ::: Each zumpus is not red.\n∀x (Zumpus(x) → Rompus(x)) ::: Zumpuses are rompuses.\n∀x (Rompus(x) → Happy(x)) ::: Rompuses are happy.\n∀x (Numpus(x) → ¬Sweet(x)) ::: Every rompus is a numpus.\n∀x (Numpus(x) → Yumpus(x)) ::: Each numpus is a yumpus.\n∀x (Yumpus(x) → ¬Small(x)) ::: Yumpuses are not small.\n∀x (Yumpus(x) → Tumpus(x)) ::: Yumpuses are tumpuses.\n∀x (Tumpus(x) → ¬Cold(x)) ::: Tumpuses are not cold.\n∀x (Tumpus(x) → Vumpus(x)) ::: Tumpuses are vumpuses.\n∀x (Vumpus(x) → ¬Transparent(x)) ::: Vumpuses are not transparent.\n∀x (Vumpus(x) → Impus(x)) ::: Vumpuses are impuses.\n∀x (Impus(x) → ¬Fruity(x)) ::: Impuses are not fruity.\n∀x (Impus(x) → Wumpus(x)) ::: Impuses are wumpuses.\n∀x (Jompus(x) → Fruity(x)) ::: Each jompus is fruity.\n∀x (Wumpus(x) → ¬Dull(x)) ::: Wumpuses are not dull.\n∀x (Wumpus(x) → Dumpus(x)) ::: Each wumpus is a dumpus.\nNumpus(max) ::: Max is a numpus.\nConclusion:\nFruity(max) ::: Max is fruity.\n------"
    ]
  },
  {
    "id": "ProntoQA_391",
    "context": "Yumpuses are not brown. Tumpuses are transparent. Tumpuses are jompuses. Jompuses are kind. Jompuses are rompuses. Every rompus is dull. Each rompus is a vumpus. Vumpuses are liquid. Every vumpus is a dumpus. Each dumpus is cold. Dumpuses are impuses. Impuses are brown. Impuses are numpuses. Every numpus is not nervous. Each numpus is a zumpus. Zumpuses are bitter. Zumpuses are wumpuses. Stella is a jompus.",
    "question": "Is the following statement true or false? Stella is brown.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nYumpus(x) ::: x is a yumpus\nBrown(x) ::: x is brown\nTumpus(x) ::: x is a tumpus\nJompus(x) ::: x is a jompus\nKind(x) ::: x is kind\nRompus(x) ::: x is a rompus\nDull(x) ::: x is dull\nVumpus(x) ::: x is a vumpus\nLiquid(x) ::: x is liquid\nDumpus(x) ::: x is a dumpus\nCold(x) ::: x is cold\nImpus(x) ::: x is an impus\nBrown(x) ::: x is brown\nNumpus(x) ::: x is a numpus\nNervous(x) ::: x is nervous\nZumpus(x) ::: x is a zumpus\nBitter(x) ::: x is bitter\nWumpus(x) ::: x is a wumpus\nStella(x) ::: x is Stella\nPremises:\n∀x (Yumpus(x) → ¬Brown(x)) ::: Yumpuses are not brown.\n∀x (Tumpus(x) → Transparent(x)) ::: Tumpuses are transparent.\n∀x (Tumpus(x) → Jompus(x)) ::: Tumpuses are jompuses.\n∀x (Jompus(x) → Kind(x)) ::: Jompuses are kind.\n∀x (Jompus(x) → Rompus(x)) ::: Jompuses are rompuses.\n∀x (Rompus(x) → Dull(x)) ::: Every rompus is dull.\n∀x (Rompus(x) → Vumpus(x)) ::: Each rompus is a vumpus.\n∀x (Vumpus(x) → Liquid(x)) ::: Vumpuses are liquid.\n∀x (Vumpus(x) → Dumpus(x)) ::: Every vumpus is a dumpus.\n∀x (Dumpus(x) → Cold(x)) ::: Each dumpus is cold.\n∀x (Dumpus(x) → Impus(x)) ::: Dumpuses are impuses.\n∀x (Impus(x) → Brown(x)) ::: Impuses are brown.\n∀x (Impus(x) → Numpus(x)) ::: Impuses are numpuses.\n∀x (Numpus(x) → ¬Nervous(x)) ::: Every numpus is not nervous.\n∀x (Numpus(x) → Zumpus(x)) ::: Each numpus is a zumpus.\n∀x (Zumpus(x) → Bitter(x)) ::: Zumpuses are bitter.\n∀x (Zumpus(x) → Wumpus(x)) ::: Zumpuses are wumpuses.\nJompus(stella) ::: Stella is a jompus.\nConclusion:\nBrown(stella) ::: Stella is brown.\n------"
    ]
  },
  {
    "id": "ProntoQA_392",
    "context": "Each rompus is not metallic. Rompuses are jompuses. Jompuses are angry. Each jompus is a wumpus. Each wumpus is hot. Yumpuses are not blue. Each wumpus is a numpus. Every numpus is not dull. Every numpus is an impus. Every impus is not transparent. Each impus is a zumpus. Every zumpus is not happy. Zumpuses are dumpuses. Every dumpus is fruity. Dumpuses are vumpuses. Vumpuses are blue. Vumpuses are tumpuses. Stella is a numpus.",
    "question": "Is the following statement true or false? Stella is blue.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nRompus(x) ::: x is a rompus\nMetallic(x) ::: x is metallic\nJompus(x) ::: x is a jompus\nAngry(x) ::: x is angry\nWumpus(x) ::: x is a wumpus\nHot(x) ::: x is hot\nYumpus(x) ::: x is a yumpus\nBlue(x) ::: x is blue\nNumpus(x) ::: x is a numpus\nDull(x) ::: x is dull\nImpus(x) ::: x is an impus\nTransparent(x) ::: x is transparent\nZumpus(x) ::: x is a zumpus\nHappy(x) ::: x is happy\nDumpus(x) ::: x is a dumpus\nFruity(x) ::: x is fruity\nVumpus(x) ::: x is a vumpus\nTumpus(x) ::: x is a tumpus\nStella(x) ::: x is Stella\nPremises:\n∀x (Rompus(x) → ¬Metallic(x)) ::: Each rompus is not metallic.\n∀x (Jompus(x) → Angry(x)) ::: Jompuses are angry.\n∀x (Jompus(x) → Wumpus(x)) ::: Each jompus is a wumpus.\n∀x (Wumpus(x) → Hot(x)) ::: Each wumpus is hot.\n∀x (Yumpus(x) → ¬Blue(x)) ::: Yumpuses are not blue.\n∀x (Wumpus(x) → Numpus(x)) ::: Each wumpus is a numpus.\n∀x (Numpus(x) → ¬Dull(x)) ::: Every numpus is not dull.\n∀x (Numpus(x) → Impus(x)) ::: Every numpus is an impus.\n∀x (Impus(x) → ¬Transparent(x)) ::: Every impus is not transparent.\n∀x (Impus(x) → Zumpus(x)) ::: Each impus is a zumpus.\n∀x (Zumpus(x) → ¬Happy(x)) ::: Every zumpus is not happy.\n∀x (Zumpus(x) → Dumpus(x)) ::: Zumpuses are dumpuses.\n∀x (Dumpus(x) → Fruity(x)) ::: Every dumpus is fruity.\n∀x (Dumpus(x) → Vumpus(x)) ::: Dumpuses are vumpuses.\n∀x (Vumpus(x) → Blue(x)) ::: Vumpuses are blue.\n∀x (Vumpus(x) → Tumpus(x)) ::: Vumpuses are tumpuses.\nNumpus(stella) ::: Stella is a numpus.\nConclusion:\nBlue(stella) ::: Stella is blue.\n------"
    ]
  },
  {
    "id": "ProntoQA_393",
    "context": "Every rompus is not earthy. Each rompus is an impus. Each impus is not liquid. Impuses are jompuses. Each jompus is red. Each jompus is a vumpus. Vumpuses are mean. Every vumpus is a yumpus. Yumpuses are sweet. Each yumpus is a dumpus. Dumpuses are hot. Each dumpus is a tumpus. Each numpus is not dull. Each tumpus is large. Every tumpus is a zumpus. Each zumpus is dull. Each zumpus is a wumpus. Fae is a vumpus.",
    "question": "Is the following statement true or false? Fae is not dull.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nRompus(x) ::: x is a rompus\nEarthy(x) ::: x is earthy\nImpus(x) ::: x is an impus\nLiquid(x) ::: x is liquid\nJompus(x) ::: x is a jompus\nRed(x) ::: x is red\nVumpus(x) ::: x is a vumpus\nMean(x) ::: x is mean\nYumpus(x) ::: x is a yumpus\nSweet(x) ::: x is sweet\nDumpus(x) ::: x is a dumpus\nHot(x) ::: x is hot\nTumpus(x) ::: x is a tumpus\nDull(x) ::: x is dull\nLarge(x) ::: x is large\nZumpus(x) ::: x is a zumpus\nDull(x) ::: x is dull\nWumpus(x) ::: x is a wumpus\nFae(x) ::: x is Fae\nPremises:\n∀x (Rompus(x) → ¬Earthy(x)) ::: Every rompus is not earthy.\n∀x (Rompus(x) → Impus(x)) ::: Each rompus is an impus.\n∀x (Impus(x) → ¬Liquid(x)) ::: Impuses are not liquid.\n∀x (Jompus(x) → Red(x)) ::: Each jompus is red.\n∀x (Jompus(x) → Vumpus(x)) ::: Each jompus is a vumpus.\n∀x (Vumpus(x) → Mean(x)) ::: Vumpuses are mean.\n∀x (Vumpus(x) → Yumpus(x)) ::: Every vumpus is a yumpus.\n∀x (Yumpus(x) → Sweet(x)) ::: Yumpuses are sweet.\n∀x (Yumpus(x) → Dumpus(x)) ::: Each yumpus is a dumpus.\n∀x (Dumpus(x) → Hot(x)) ::: Dumpuses are hot.\n∀x (Dumpus(x) → Tumpus(x)) ::: Each dumpus is a tumpus.\n∀x (Numpus(x) → ¬Dull(x)) ::: Each numpus is not dull.\n∀x (Tumpus(x) → Large(x)) ::: Each tumpus is large.\n∀x (Tumpus(x) → Zumpus(x)) ::: Every tumpus is a zumpus.\n∀x (Zumpus(x) → Dull(x)) ::: Each zumpus is dull.\n∀x (Zumpus(x) → Wumpus(x)) ::: Each zumpus is a wumpus.\nVumpus(fae) ::: Fae is a vumpus.\nConclusion:\n¬Dull(fae) ::: Fae is not dull.\n------"
    ]
  },
  {
    "id": "ProntoQA_394",
    "context": "Each rompus is luminous. Rompuses are dumpuses. Each dumpus is fruity. Dumpuses are tumpuses. Every tumpus is sweet. Tumpuses are impuses. Every impus is brown. Each impus is a numpus. Numpuses are cold. Numpuses are jompuses. Every jompus is nervous. Each jompus is a vumpus. Vumpuses are not dull. Yumpuses are dull. Vumpuses are wumpuses. Each wumpus is not amenable. Wumpuses are zumpuses. Fae is a tumpus.",
    "question": "Is the following statement true or false? Fae is not dull.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nRompus(x) ::: x is a rompus\nLuminous(x) ::: x is luminous\nDumpus(x) ::: x is a dumpus\nFruity(x) ::: x is fruity\nTumpus(x) ::: x is a tumpus\nSweet(x) ::: x is sweet\nImpus(x) ::: x is an impus\nBrown(x) ::: x is brown\nNumpus(x) ::: x is a numpus\nCold(x) ::: x is cold\nJompus(x) ::: x is a jompus\nNervous(x) ::: x is nervous\nVumpus(x) ::: x is a vumpus\nDull(x) ::: x is dull\nWumpus(x) ::: x is a wumpus\nAmenable(x) ::: x is amenable\nZumpus(x) ::: x is a zumpus\nPremises:\n∀x (Rompus(x) → Luminous(x)) ::: Each rompus is luminous.\n∀x (Rompus(x) → Dumpus(x)) ::: Rompuses are dumpuses.\n∀x (Dumpus(x) → Fruity(x)) ::: Each dumpus is fruity.\n∀x (Dumpus(x) → Tumpus(x)) ::: Dumpuses are tumpuses.\n∀x (Tumpus(x) → Sweet(x)) ::: Every tumpus is sweet.\n∀x (Tumpus(x) → Impus(x)) ::: Tumpuses are impuses.\n∀x (Impus(x) → Brown(x)) ::: Every impus is brown.\n∀x (Impus(x) → Numpus(x)) ::: Each impus is a numpus.\n∀x (Numpus(x) → Cold(x)) ::: Numpuses are cold.\n∀x (Numpus(x) → Jompus(x)) ::: Numpuses are jompuses.\n∀x (Jompus(x) → Nervous(x)) ::: Every jompus is nervous.\n∀x (Jompus(x) → Vumpus(x)) ::: Each jompus is a vumpus.\n∀x (Vumpus(x) → ¬Dull(x)) ::: Vumpuses are not dull.\n∀x (Yumpus(x) → Dull(x)) ::: Yumpuses are dull.\n∀x (Vumpus(x) → Wumpus(x)) ::: Vumpuses are wumpuses.\n∀x (Wumpus(x) → ¬Amenable(x)) ::: Each wumpus is not amenable.\n∀x (Wumpus(x) → Zumpus(x)) ::: Wumpuses are zumpuses.\nTumpus(fae) ::: Fae is a tumpus.\nConclusion:\n¬Dull(fae) ::: Fae is not dull.\n------"
    ]
  },
  {
    "id": "ProntoQA_395",
    "context": "Every jompus is not opaque. Jompuses are tumpuses. Tumpuses are not dull. Tumpuses are yumpuses. Every yumpus is sweet. Each impus is brown. Yumpuses are rompuses. Rompuses are not small. Each rompus is a dumpus. Every dumpus is metallic. Dumpuses are vumpuses. Vumpuses are fruity. Each vumpus is a numpus. Each numpus is not brown. Every numpus is a wumpus. Each wumpus is mean. Each wumpus is a zumpus. Wren is a yumpus.",
    "question": "Is the following statement true or false? Wren is brown.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nJompus(x) ::: x is a jompus\nOpaque(x) ::: x is opaque\nTumpus(x) ::: x is a tumpus\nDull(x) ::: x is dull\nYumpus(x) ::: x is a yumpus\nSweet(x) ::: x is sweet\nImpus(x) ::: x is an impus\nBrown(x) ::: x is brown\nRompus(x) ::: x is a rompus\nSmall(x) ::: x is small\nDumpus(x) ::: x is a dumpus\nMetallic(x) ::: x is metallic\nVumpus(x) ::: x is a vumpus\nFruity(x) ::: x is fruity\nNumpus(x) ::: x is a numpus\nBrown(x) ::: x is brown\nWumpus(x) ::: x is a wumpus\nMean(x) ::: x is mean\nZumpus(x) ::: x is a zumpus\nPremises:\n∀x (Jompus(x) → ¬Opaque(x)) ::: Every jompus is not opaque.\n∀x (Jompus(x) → Tumpus(x)) ::: Jompuses are tumpuses.\n∀x (Tumpus(x) → ¬Dull(x)) ::: Tumpuses are not dull.\n∀x (Tumpus(x) → Yumpus(x)) ::: Tumpuses are yumpuses.\n∀x (Yumpus(x) → Sweet(x)) ::: Every yumpus is sweet.\n∀x (Impus(x) → Brown(x)) ::: Each impus is brown.\n∀x (Yumpus(x) → Rompus(x)) ::: Yumpuses are rompuses.\n∀x (Rompus(x) → ¬Small(x)) ::: Rompuses are not small.\n∀x (Rompus(x) → Dumpus(x)) ::: Each rompus is a dumpus.\n∀x (Dumpus(x) → Metallic(x)) ::: Every dumpus is metallic.\n∀x (Dumpus(x) → Vumpus(x)) ::: Dumpuses are vumpuses.\n∀x (Vumpus(x) → Fruity(x)) ::: Vumpuses are fruity.\n∀x (Vumpus(x) → Numpus(x)) ::: Each vumpus is a numpus.\n∀x (Numpus(x) → ¬Brown(x)) ::: Each numpus is not brown.\n∀x (Numpus(x) → Wumpus(x)) ::: Every numpus is a wumpus.\n∀x (Wumpus(x) → Mean(x)) ::: Each wumpus is mean.\n∀x (Wumpus(x) → Zumpus(x)) ::: Each wumpus is a zumpus.\nYumpus(wren) ::: Wren is a yumpus.\nConclusion:\nBrown(wren) ::: Wren is brown.\n------"
    ]
  },
  {
    "id": "ProntoQA_396",
    "context": "Every rompus is small. Each rompus is a wumpus. Each wumpus is fruity. Each wumpus is a dumpus. Dumpuses are opaque. Each dumpus is a jompus. Jompuses are temperate. Jompuses are vumpuses. Vumpuses are liquid. Vumpuses are numpuses. Numpuses are not bitter. Impuses are not happy. Each numpus is a tumpus. Tumpuses are happy. Tumpuses are zumpuses. Sally is a dumpus.",
    "question": "Is the following statement true or false? Sally is happy.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant.lpg\n------"
    ]
  },
  {
    "id": "ProntoQA_397",
    "context": "Tumpuses are large. Tumpuses are yumpuses. Every yumpus is dull. Yumpuses are zumpuses. Each zumpus is opaque. Zumpuses are jompuses. Jompuses are wooden. Each jompus is a rompus. Rompuses are amenable. Rompuses are wumpuses. Vumpuses are fruity. Every wumpus is not fruity. Wumpuses are dumpuses. Every dumpus is cold. Every dumpus is an impus. Each impus is not spicy. Each impus is a numpus. Stella is a yumpus.",
    "question": "Is the following statement true or false? Stella is fruity.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nTumpus(x) ::: x is a tumpus\nLarge(x) ::: x is large\nYumpus(x) ::: x is a yumpus\nDull(x) ::: x is dull\nZumpus(x) ::: x is a zumpus\nOpaque(x) ::: x is opaque\nJompus(x) ::: x is a jompus\nWooden(x) ::: x is wooden\nRompus(x) ::: x is a rompus\nAmenable(x) ::: x is amenable\nWumpus(x) ::: x is a wumpus\nFruity(x) ::: x is fruity\nDumpus(x) ::: x is a dumpus\nCold(x) ::: x is cold\nImpus(x) ::: x is an impus\nSpicy(x) ::: x is spicy\nNumpus(x) ::: x is a numpus\nStella(x) ::: x is Stella\nPremises:\n∀x (Tumpus(x) → Large(x)) ::: Tumpuses are large.\n∀x (Tumpus(x) → Yumpus(x)) ::: Tumpuses are yumpuses.\n∀x (Yumpus(x) → Dull(x)) ::: Every yumpus is dull.\n∀x (Yumpus(x) → Zumpus(x)) ::: Yumpuses are zumpuses.\n∀x (Zumpus(x) → Opaque(x)) ::: Each zumpus is opaque.\n∀x (Zumpus(x) → Jompus(x)) ::: Zumpuses are jompuses.\n∀x (Jompus(x) → Wooden(x)) ::: Jompuses are wooden.\n∀x (Jompus(x) → Rompus(x)) ::: Each jompus is a rompus.\n∀x (Rompus(x) → Amenable(x)) ::: Rompuses are amenable.\n∀x (Rompus(x) → Wumpus(x)) ::: Rompuses are wumpuses.\n∀x (Vumpus(x) → Fruity(x)) ::: Vumpuses are fruity.\n∀x (Wumpus(x) → ¬Fruity(x)) ::: Every wumpus is not fruity.\n∀x (Wumpus(x) → Dumpus(x)) ::: Wumpuses are dumpuses.\n∀x (Dumpus(x) → Cold(x)) ::: Every dumpus is cold.\n∀x (Dumpus(x) → Impus(x)) ::: Every dumpus is an impus.\n∀x (Impus(x) → ¬Spicy(x)) ::: Each impus is not spicy.\n∀x (Impus(x) → Numpus(x)) ::: Each impus is a numpus.\nYumpus(stella) ::: Stella is a yumpus.\nConclusion:\nFruity(stella) ::: Stella is fruity.\n------"
    ]
  },
  {
    "id": "ProntoQA_398",
    "context": "Each numpus is not spicy. Numpuses are jompuses. Every jompus is amenable. Jompuses are dumpuses. Each dumpus is blue. Yumpuses are opaque. Every dumpus is a vumpus. Each vumpus is cold. Every vumpus is a wumpus. Wumpuses are small. Each wumpus is a tumpus. Each tumpus is nervous. Every tumpus is an impus. Every impus is not dull. Each impus is a rompus. Rompuses are not opaque. Each rompus is a zumpus. Wren is a vumpus.",
    "question": "Is the following statement true or false? Wren is opaque.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nNumpus(x) ::: x is a numpus\nSpicy(x) ::: x is spicy\nJompus(x) ::: x is a jompus\nAmenable(x) ::: x is amenable\nDumpus(x) ::: x is a dumpus\nBlue(x) ::: x is blue\nYumpus(x) ::: x is a yumpus\nOpaque(x) ::: x is opaque\nVumpus(x) ::: x is a vumpus\nCold(x) ::: x is cold\nWumpus(x) ::: x is a wumpus\nSmall(x) ::: x is small\nTumpus(x) ::: x is a tumpus\nNervous(x) ::: x is nervous\nImpus(x) ::: x is an impus\nDull(x) ::: x is dull\nRompus(x) ::: x is a rompus\nZumpus(x) ::: x is a zumpus\nPremises:\n∀x (Numpus(x) → ¬Spicy(x)) ::: Each numpus is not spicy.\n∀x (Jompus(x) → Amenable(x)) ::: Jompuses are amenable.\n∀x (Jompus(x) → Dumpus(x)) ::: Each jompus is a dumpus.\n∀x (Dumpus(x) → Blue(x)) ::: Each dumpus is blue.\n∀x (Yumpus(x) → Opaque(x)) ::: Yumpuses are opaque.\n∀x (Dumpus(x) → Vumpus(x)) ::: Each dumpus is a vumpus.\n∀x (Vumpus(x) → Cold(x)) ::: Each vumpus is cold.\n∀x (Vumpus(x) → Wumpus(x)) ::: Each vumpus is a wumpus.\n∀x (Wumpus(x) → Small(x)) ::: Wumpuses are small.\n∀x (Wumpus(x) → Tumpus(x)) ::: Each wumpus is a tumpus.\n∀x (Tumpus(x) → Nervous(x)) ::: Each tumpus is nervous.\n∀x (Tumpus(x) → Impus(x)) ::: Each tumpus is an impus.\n∀x (Impus(x) → ¬Dull(x)) ::: Each impus is not dull.\n∀x (Impus(x) → Rompus(x)) ::: Each impus is a rompus.\n∀x (Rompus(x) → ¬Opaque(x)) ::: Rompuses are not opaque.\n∀x (Rompus(x) → Zumpus(x)) ::: Each rompus is a zumpus.\nVumpus(wren) ::: Wren is a vumpus.\nConclusion:\nOpaque(wren) ::: Wren is opaque.\n------"
    ]
  },
  {
    "id": "ProntoQA_399",
    "context": "Each wumpus is cold. Every wumpus is a jompus. Each jompus is not orange. Every jompus is a numpus. Numpuses are nervous. Every numpus is a vumpus. Each vumpus is amenable. Each vumpus is a dumpus. Each dumpus is not opaque. Dumpuses are yumpuses. Yumpuses are luminous. Every yumpus is a zumpus. Tumpuses are opaque. Each zumpus is earthy. Zumpuses are rompuses. Rompuses are not large. Rompuses are impuses. Polly is a wumpus.",
    "question": "Is the following statement true or false? Polly is not opaque.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nWumpus(x) ::: x is a wumpus\nCold(x) ::: x is cold\nJompus(x) ::: x is a jompus\nOrange(x) ::: x is orange\nNumpus(x) ::: x is a numpus\nNervous(x) ::: x is nervous\nVumpus(x) ::: x is a vumpus\nAmenable(x) ::: x is amenable\nDumpus(x) ::: x is a dumpus\nOpaque(x) ::: x is opaque\nYumpus(x) ::: x is a yumpus\nLuminous(x) ::: x is luminous\nZumpus(x) ::: x is a zumpus\nEarthy(x) ::: x is earthy\nRompus(x) ::: x is a rompus\nLarge(x) ::: x is large\nImpus(x) ::: x is an impus\nPremises:\n∀x (Wumpus(x) → Cold(x)) ::: Each wumpus is cold.\n∀x (Wumpus(x) → Jompus(x)) ::: Every wumpus is a jompus.\n∀x (Jompus(x) → ¬Orange(x)) ::: Each jompus is not orange.\n∀x (Jompus(x) → Numpus(x)) ::: Every jompus is a numpus.\n∀x (Numpus(x) → Nervous(x)) ::: Numpuses are nervous.\n∀x (Numpus(x) → Vumpus(x)) ::: Every numpus is a vumpus.\n∀x (Vumpus(x) → Amenable(x)) ::: Each vumpus is amenable.\n∀x (Vumpus(x) → Dumpus(x)) ::: Each vumpus is a dumpus.\n∀x (Dumpus(x) → ¬Opaque(x)) ::: Each dumpus is not opaque.\n∀x (Dumpus(x) → Yumpus(x)) ::: Dumpuses are yumpuses.\n∀x (Yumpus(x) → Luminous(x)) ::: Yumpuses are luminous.\n∀x (Yumpus(x) → Zumpus(x)) ::: Every yumpus is a zumpus.\n∀x (Zumpus(x) → Earthy(x)) ::: Zumpuses are earthy.\n∀x (Zumpus(x) → Rompus(x)) ::: Zumpuses are rompuses.\n∀x (Rompus(x) → ¬Large(x)) ::: Rompuses are not large.\n∀x (Rompus(x) → Impus(x)) ::: Rompuses are impuses.\nWumpus(polly) ::: Polly is a wumpus.\nConclusion:\n¬Opaque(polly) ::: Polly is not opaque.\n------"
    ]
  },
  {
    "id": "ProntoQA_400",
    "context": "Every vumpus is large. Every zumpus is happy. Vumpuses are rompuses. Rompuses are spicy. Rompuses are wumpuses. Wumpuses are mean. Each wumpus is a yumpus. Yumpuses are not brown. Yumpuses are jompuses. Each jompus is not cold. Each jompus is a numpus. Numpuses are not happy. Each numpus is a tumpus. Every tumpus is not earthy. Tumpuses are impuses. Each impus is dull. Impuses are dumpuses. Wren is a rompus.",
    "question": "Is the following statement true or false? Wren is not happy.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nVumpus(x) ::: x is a vumpus\nLarge(x) ::: x is large\nZumpus(x) ::: x is a zumpus\nHappy(x) ::: x is happy\nRompus(x) ::: x is a rompus\nSpicy(x) ::: x is spicy\nWumpus(x) ::: x is a wumpus\nMean(x) ::: x is mean\nYumpus(x) ::: x is a yumpus\nBrown(x) ::: x is brown\nJompus(x) ::: x is a jompus\nCold(x) ::: x is cold\nNumpus(x) ::: x is a numpus\nHappy(x) ::: x is happy\nTumpus(x) ::: x is a tumpus\nEarthy(x) ::: x is earthy\nImpus(x) ::: x is an impus\nDull(x) ::: x is dull\nDumpus(x) ::: x is a dumpus\nPremises:\n∀x (Vumpus(x) → Large(x)) ::: Every vumpus is large.\n∀x (Zumpus(x) → Happy(x)) ::: Every zumpus is happy.\n∀x (Vumpus(x) → Rompus(x)) ::: Vumpuses are rompuses.\n∀x (Rompus(x) → Spicy(x)) ::: Rompuses are spicy.\n∀x (Rompus(x) → Wumpus(x)) ::: Rompuses are wumpuses.\n∀x (Wumpus(x) → Mean(x)) ::: Wumpuses are mean.\n∀x (Wumpus(x) → Yumpus(x)) ::: Each wumpus is a yumpus.\n∀x (Yumpus(x) → ¬Brown(x)) ::: Yumpuses are not brown.\n∀x (Yumpus(x) → Jompus(x)) ::: Yumpuses are jompuses.\n∀x (Jompus(x) → ¬Cold(x)) ::: Each jompus is not cold.\n∀x (Jompus(x) → Numpus(x)) ::: Each jompus is a numpus.\n∀x (Numpus(x) → ¬Happy(x)) ::: Numpuses are not happy.\n∀x (Numpus(x) → Tumpus(x)) ::: Each numpus is a tumpus.\n∀x (Tumpus(x) → ¬Earthy(x)) ::: Every tumpus is not earthy.\n∀x (Tumpus(x) → Impus(x)) ::: Tumpuses are impuses.\n∀x (Impus(x) → Dull(x)) ::: Each impus is dull.\n∀x (Impus(x) → Dumpus(x)) ::: Impuses are dumpuses.\nRompus(wren) ::: Wren is a rompus.\nConclusion:\n¬Happy(wren) ::: Wren is not happy.\n------"
    ]
  },
  {
    "id": "ProntoQA_401",
    "context": "Rompuses are temperate. Each rompus is a wumpus. Wumpuses are not small. Wumpuses are impuses. Each impus is not blue. Every zumpus is liquid. Impuses are numpuses. Each numpus is not transparent. Every numpus is a yumpus. Yumpuses are shy. Yumpuses are jompuses. Jompuses are not liquid. Every jompus is a dumpus. Dumpuses are spicy. Every dumpus is a tumpus. Sally is a wumpus.",
    "question": "Is the following statement true or false? Sally is not liquid.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant.lpg\n------"
    ]
  },
  {
    "id": "ProntoQA_402",
    "context": "Each wumpus is angry. Zumpuses are not bright. Each zumpus is a jompus. Jompuses are large. Jompuses are yumpuses. Yumpuses are liquid. Yumpuses are impuses. Each impus is hot. Each impus is a vumpus. Vumpuses are orange. Each vumpus is a rompus. Every rompus is not spicy. Each rompus is a numpus. Numpuses are not angry. Every numpus is a tumpus. Each tumpus is not shy. Tumpuses are dumpuses. Stella is a yumpus.",
    "question": "Is the following statement true or false? Stella is not angry.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nWumpus(x) ::: x is a wumpus\nAngry(x) ::: x is angry\nZumpus(x) ::: x is a zumpus\nBright(x) ::: x is bright\nJompus(x) ::: x is a jompus\nLarge(x) ::: x is large\nYumpus(x) ::: x is a yumpus\nLiquid(x) ::: x is liquid\nImpus(x) ::: x is an impus\nHot(x) ::: x is hot\nVumpus(x) ::: x is a vumpus\nOrange(x) ::: x is orange\nRompus(x) ::: x is a rompus\nSpicy(x) ::: x is spicy\nNumpus(x) ::: x is a numpus\nAngry(x) ::: x is angry\nTumpus(x) ::: x is a tumpus\nShy(x) ::: x is shy\nDumpus(x) ::: x is a dumpus\nPremises:\n∀x (Wumpus(x) → Angry(x)) ::: Each wumpus is angry.\n∀x (Zumpus(x) → ¬Bright(x)) ::: Zumpuses are not bright.\n∀x (Zumpus(x) → Jompus(x)) ::: Each zumpus is a jompus.\n∀x (Jompus(x) → Large(x)) ::: Jompuses are large.\n∀x (Jompus(x) → Yumpus(x)) ::: Jompuses are yumpuses.\n∀x (Yumpus(x) → Liquid(x)) ::: Yumpuses are liquid.\n∀x (Yumpus(x) → Impus(x)) ::: Yumpuses are impuses.\n∀x (Impus(x) → Hot(x)) ::: Each impus is hot.\n∀x (Impus(x) → Vumpus(x)) ::: Each impus is a vumpus.\n∀x (Vumpus(x) → Orange(x)) ::: Vumpuses are orange.\n∀x (Vumpus(x) → Rompus(x)) ::: Each vumpus is a rompus.\n∀x (Rompus(x) → ¬Spicy(x)) ::: Every rompus is not spicy.\n∀x (Rompus(x) → Numpus(x)) ::: Each rompus is a numpus.\n∀x (Numpus(x) → ¬Angry(x)) ::: Numpuses are not angry.\n∀x (Numpus(x) → Tumpus(x)) ::: Every numpus is a tumpus.\n∀x (Tumpus(x) → ¬Shy(x)) ::: Each tumpus is not shy.\n∀x (Tumpus(x) → Dumpus(x)) ::: Tumpuses are dumpuses.\nYumpus(stella) ::: Stella is a yumpus.\nConclusion:\n¬Angry(stella) ::: Stella is not angry.\n------"
    ]
  },
  {
    "id": "ProntoQA_403",
    "context": "Each vumpus is sour. Vumpuses are wumpuses. Wumpuses are opaque. Wumpuses are yumpuses. Yumpuses are angry. Each yumpus is a tumpus. Tumpuses are earthy. Tumpuses are rompuses. Each rompus is not wooden. Every rompus is a zumpus. Zumpuses are not bright. Every zumpus is a jompus. Each jompus is blue. Each jompus is an impus. Every dumpus is wooden. Every impus is not large. Every impus is a numpus. Alex is a vumpus.",
    "question": "Is the following statement true or false? Alex is wooden.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nVumpus(x) ::: x is a vumpus\nSour(x) ::: x is sour\nWumpus(x) ::: x is a wumpus\nOpaque(x) ::: x is opaque\nYumpus(x) ::: x is a yumpus\nAngry(x) ::: x is angry\nTumpus(x) ::: x is a tumpus\nEarthy(x) ::: x is earthy\nRompus(x) ::: x is a rompus\nWooden(x) ::: x is wooden\nZumpus(x) ::: x is a zumpus\nBright(x) ::: x is bright\nJompus(x) ::: x is a jompus\nBlue(x) ::: x is blue\nImpus(x) ::: x is an impus\nLarge(x) ::: x is large\nNumpus(x) ::: x is a numpus\nDumpus(x) ::: x is a dumpus\nPremises:\n∀x (Vumpus(x) → Sour(x)) ::: Each vumpus is sour.\n∀x (Vumpus(x) → Wumpus(x)) ::: Vumpuses are wumpuses.\n∀x (Wumpus(x) → Opaque(x)) ::: Wumpuses are opaque.\n∀x (Wumpus(x) → Yumpus(x)) ::: Wumpuses are yumpuses.\n∀x (Yumpus(x) → Angry(x)) ::: Yumpuses are angry.\n∀x (Yumpus(x) → Tumpus(x)) ::: Each yumpus is a tumpus.\n∀x (Tumpus(x) → Earthy(x)) ::: Tumpuses are earthy.\n∀x (Tumpus(x) → Rompus(x)) ::: Tumpuses are rompuses.\n∀x (Rompus(x) → ¬Wooden(x)) ::: Each rompus is not wooden.\n∀x (Rompus(x) → Zumpus(x)) ::: Every rompus is a zumpus.\n∀x (Zumpus(x) → ¬Bright(x)) ::: Zumpuses are not bright.\n∀x (Zumpus(x) → Jompus(x)) ::: Every zumpus is a jompus.\n∀x (Jompus(x) → Blue(x)) ::: Each jompus is blue.\n∀x (Jompus(x) → Impus(x)) ::: Each jompus is an impus.\n∀x (Dumpus(x) → Wooden(x)) ::: Every dumpus is wooden.\n∀x (Impus(x) → ¬Large(x)) ::: Every impus is not large.\n∀x (Impus(x) → Numpus(x)) ::: Every impus is a numpus.\nVumpus(alex) ::: Alex is a vumpus.\nConclusion:\nWooden(alex) ::: Alex is wooden.\n------"
    ]
  },
  {
    "id": "ProntoQA_404",
    "context": "Each yumpus is not orange. Yumpuses are tumpuses. Tumpuses are cold. Every tumpus is an impus. Each impus is spicy. Impuses are dumpuses. Every jompus is not happy. Dumpuses are not small. Dumpuses are wumpuses. Wumpuses are earthy. Wumpuses are vumpuses. Vumpuses are transparent. Each vumpus is a zumpus. Each zumpus is happy. Zumpuses are rompuses. Fae is an impus.",
    "question": "Is the following statement true or false? Fae is not happy.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant.lpg\n------"
    ]
  },
  {
    "id": "ProntoQA_405",
    "context": "Each wumpus is wooden. Each wumpus is a tumpus. Every tumpus is feisty. Tumpuses are impuses. Impuses are orange. Each impus is a yumpus. Each yumpus is not bitter. Yumpuses are rompuses. Each rompus is not dull. Each rompus is a jompus. Each jompus is not floral. Jompuses are numpuses. Every numpus is kind. Numpuses are dumpuses. Dumpuses are transparent. Each zumpus is dull. Every dumpus is a vumpus. Wren is a wumpus.",
    "question": "Is the following statement true or false? Wren is not dull.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nWumpus(x) ::: x is a wumpus\nWooden(x) ::: x is wooden\nTumpus(x) ::: x is a tumpus\nFeisty(x) ::: x is feisty\nImpus(x) ::: x is an impus\nOrange(x) ::: x is orange\nYumpus(x) ::: x is a yumpus\nBitter(x) ::: x is bitter\nRompus(x) ::: x is a rompus\nDull(x) ::: x is dull\nJompus(x) ::: x is a jompus\nFloral(x) ::: x is floral\nNumpus(x) ::: x is a numpus\nKind(x) ::: x is kind\nDumpus(x) ::: x is a dumpus\nTransparent(x) ::: x is transparent\nZumpus(x) ::: x is a zumpus\nPremises:\n∀x (Wumpus(x) → Wooden(x)) ::: Each wumpus is wooden.\n∀x (Wumpus(x) → Tumpus(x)) ::: Each wumpus is a tumpus.\n∀x (Tumpus(x) → Feisty(x)) ::: Every tumpus is feisty.\n∀x (Tumpus(x) → Impus(x)) ::: Tumpuses are impuses.\n∀x (Impus(x) → Orange(x)) ::: Impuses are orange.\n∀x (Impus(x) → Yumpus(x)) ::: Each impus is a yumpus.\n∀x (Yumpus(x) → ¬Bitter(x)) ::: Each yumpus is not bitter.\n∀x (Yumpus(x) → Rompus(x)) ::: Yumpuses are rompuses.\n∀x (Rompus(x) → ¬Dull(x)) ::: Each rompus is not dull.\n∀x (Rompus(x) → Jompus(x)) ::: Each rompus is a jompus.\n∀x (Jompus(x) → ¬Floral(x)) ::: Each jompus is not floral.\n∀x (Jompus(x) → Numpus(x)) ::: Jompuses are numpuses.\n∀x (Numpus(x) → Kind(x)) ::: Every numpus is kind.\n∀x (Numpus(x) → Dumpus(x)) ::: Numpuses are dumpuses.\n∀x (Dumpus(x) → Transparent(x)) ::: Dumpuses are transparent.\n∀x (Zumpus(x) → Dull(x)) ::: Each zumpus is dull.\n∀x (Dumpus(x) → Vumpus(x)) ::: Every dumpus is a vumpus.\nWumpus(wren) ::: Wren is a wumpus.\nConclusion:\n¬Dull(wren) ::: Wren is not dull.\n------"
    ]
  },
  {
    "id": "ProntoQA_406",
    "context": "Every impus is dull. Each impus is a tumpus. Tumpuses are feisty. Each tumpus is a yumpus. Yumpuses are luminous. Every yumpus is a zumpus. Each zumpus is brown. Zumpuses are rompuses. Rompuses are cold. Every rompus is a numpus. Every dumpus is not cold. Each numpus is transparent. Every numpus is a jompus. Every jompus is earthy. Jompuses are vumpuses. Every vumpus is aggressive. Each vumpus is a wumpus. Sally is an impus.",
    "question": "Is the following statement true or false? Sally is cold.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nImpus(x) ::: x is an impus\nDull(x) ::: x is dull\nTumpus(x) ::: x is a tumpus\nFeisty(x) ::: x is feisty\nYumpus(x) ::: x is a yumpus\nLuminous(x) ::: x is luminous\nZumpus(x) ::: x is a zumpus\nBrown(x) ::: x is brown\nRompus(x) ::: x is a rompus\nCold(x) ::: x is cold\nNumpus(x) ::: x is a numpus\nDumpus(x) ::: x is a dumpus\nTransparent(x) ::: x is transparent\nJompus(x) ::: x is a jompus\nEarthy(x) ::: x is earthy\nVumpus(x) ::: x is a vumpus\nAggressive(x) ::: x is aggressive\nWumpus(x) ::: x is a wumpus\nPremises:\n∀x (Impus(x) → Dull(x)) ::: Every impus is dull.\n∀x (Impus(x) → Tumpus(x)) ::: Each impus is a tumpus.\n∀x (Tumpus(x) → Feisty(x)) ::: Tumpuses are feisty.\n∀x (Tumpus(x) → Yumpus(x)) ::: Each tumpus is a yumpus.\n∀x (Yumpus(x) → Luminous(x)) ::: Yumpuses are luminous.\n∀x (Yumpus(x) → Zumpus(x)) ::: Every yumpus is a zumpus.\n∀x (Zumpus(x) → Brown(x)) ::: Each zumpus is brown.\n∀x (Zumpus(x) → Rompus(x)) ::: Zumpuses are rompuses.\n∀x (Rompus(x) → Cold(x)) ::: Rompuses are cold.\n∀x (Rompus(x) → Numpus(x)) ::: Every rompus is a numpus.\n∀x (Dumpus(x) → ¬Cold(x)) ::: Every dumpus is not cold.\n∀x (Numpus(x) → Transparent(x)) ::: Each numpus is transparent.\n∀x (Numpus(x) → Jompus(x)) ::: Every numpus is a jompus.\n∀x (Jompus(x) → Earthy(x)) ::: Every jompus is earthy.\n∀x (Jompus(x) → Vumpus(x)) ::: Jompuses are vumpuses.\n∀x (Vumpus(x) → Aggressive(x)) ::: Every vumpus is aggressive.\n∀x (Vumpus(x) → Wumpus(x)) ::: Each vumpus is a wumpus.\nImpus(sally) ::: Sally is an impus.\nConclusion:\nCold(sally) ::: Sally is cold.\n------"
    ]
  },
  {
    "id": "ProntoQA_407",
    "context": "Each impus is earthy. Zumpuses are happy. Impuses are yumpuses. Each yumpus is transparent. Yumpuses are vumpuses. Every vumpus is not spicy. Every vumpus is a numpus. Numpuses are large. Every numpus is a rompus. Each rompus is not hot. Every rompus is a dumpus. Every dumpus is not happy. Every dumpus is a wumpus. Wumpuses are not red. Each wumpus is a jompus. Jompuses are kind. Every jompus is a tumpus. Max is a yumpus.",
    "question": "Is the following statement true or false? Max is not happy.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nImpus(x) ::: x is an impus\nEarthy(x) ::: x is earthy\nZumpus(x) ::: x is a zumpus\nHappy(x) ::: x is happy\nYumpus(x) ::: x is a yumpus\nTransparent(x) ::: x is transparent\nVumpus(x) ::: x is a vumpus\nSpicy(x) ::: x is spicy\nNumpus(x) ::: x is a numpus\nLarge(x) ::: x is large\nRompus(x) ::: x is a rompus\nHot(x) ::: x is hot\nDumpus(x) ::: x is a dumpus\nHappy(x) ::: x is happy\nWumpus(x) ::: x is a wumpus\nRed(x) ::: x is red\nJompus(x) ::: x is a jompus\nKind(x) ::: x is kind\nTumpus(x) ::: x is a tumpus\nPremises:\n∀x (Impus(x) → Earthy(x)) ::: Each impus is earthy.\n∀x (Zumpus(x) → Happy(x)) ::: Zumpuses are happy.\n∀x (Impus(x) → Yumpus(x)) ::: Impuses are yumpuses.\n∀x (Yumpus(x) → Transparent(x)) ::: Each yumpus is transparent.\n∀x (Yumpus(x) → Vumpus(x)) ::: Yumpuses are vumpuses.\n∀x (Vumpus(x) → ¬Spicy(x)) ::: Every vumpus is not spicy.\n∀x (Vumpus(x) → Numpus(x)) ::: Every vumpus is a numpus.\n∀x (Numpus(x) → Large(x)) ::: Numpuses are large.\n∀x (Numpus(x) → Rompus(x)) ::: Every numpus is a rompus.\n∀x (Rompus(x) → ¬Hot(x)) ::: Every rompus is not hot.\n∀x (Rompus(x) → Dumpus(x)) ::: Every rompus is a dumpus.\n∀x (Dumpus(x) → ¬Happy(x)) ::: Every dumpus is not happy.\n∀x (Dumpus(x) → Wumpus(x)) ::: Every dumpus is a wumpus.\n∀x (Wumpus(x) → ¬Red(x)) ::: Wumpuses are not red.\n∀x (Wumpus(x) → Jompus(x)) ::: Each wumpus is a jompus.\n∀x (Jompus(x) → Kind(x)) ::: Jompuses are kind.\n∀x (Jompus(x) → Tumpus(x)) ::: Every jompus is a tumpus.\nYumpus(max) ::: Max is a yumpus.\nConclusion:\n¬Happy(max) ::: Max is not happy.\n------"
    ]
  },
  {
    "id": "ProntoQA_408",
    "context": "Every yumpus is happy. Each yumpus is a jompus. Each jompus is sour. Each jompus is a rompus. Rompuses are large. Each wumpus is mean. Every rompus is a zumpus. Zumpuses are opaque. Zumpuses are impuses. Impuses are blue. Impuses are vumpuses. Vumpuses are not mean. Vumpuses are tumpuses. Tumpuses are wooden. Each tumpus is a numpus. Numpuses are not bright. Every numpus is a dumpus. Sally is a jompus.",
    "question": "Is the following statement true or false? Sally is mean.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nYumpus(x) ::: x is a yumpus\nHappy(x) ::: x is happy\nJompus(x) ::: x is a jompus\nSour(x) ::: x is sour\nRompus(x) ::: x is a rompus\nLarge(x) ::: x is large\nMean(x) ::: x is mean\nZumpus(x) ::: x is a zumpus\nOpaque(x) ::: x is opaque\nImpuse(x) ::: x is an impuse\nBlue(x) ::: x is blue\nVumpus(x) ::: x is a vumpus\nTumpus(x) ::: x is a tumpus\nWooden(x) ::: x is wooden\nNumpus(x) ::: x is a numpus\nBright(x) ::: x is bright\nDumpus(x) ::: x is a dumpus\nPremises:\n∀x (Yumpus(x) → Happy(x)) ::: Every yumpus is happy.\n∀x (Yumpus(x) → Jompus(x)) ::: Each yumpus is a jompus.\n∀x (Jompus(x) → Sour(x)) ::: Each jompus is sour.\n∀x (Jompus(x) → Rompus(x)) ::: Each jompus is a rompus.\n∀x (Rompus(x) → Large(x)) ::: Rompuses are large.\n∀x (Wumpus(x) → Mean(x)) ::: Each wumpus is mean.\n∀x (Rompus(x) → Zumpus(x)) ::: Every rompus is a zumpus.\n∀x (Zumpus(x) → Opaque(x)) ::: Zumpuses are opaque.\n∀x (Zumpus(x) → Impuse(x)) ::: Zumpuses are impuses.\n∀x (Impuse(x) → Blue(x)) ::: Impuses are blue.\n∀x (Impuse(x) → Vumpus(x)) ::: Impuses are vumpuses.\n∀x (Vumpus(x) → ¬Mean(x)) ::: Vumpuses are not mean.\n∀x (Vumpus(x) → Tumpus(x)) ::: Vumpuses are tumpuses.\n∀x (Tumpus(x) → Wooden(x)) ::: Tumpuses are wooden.\n∀x (Tumpus(x) → Numpus(x)) ::: Each tumpus is a numpus.\n∀x (Numpus(x) → ¬Bright(x)) ::: Numpuses are not bright.\n∀x (Numpus(x) → Dumpus(x)) ::: Every numpus is a dumpus.\nJompus(sally) ::: Sally is a jompus.\nConclusion:\nMean(sally) ::: Sally is mean.\n------"
    ]
  },
  {
    "id": "ProntoQA_409",
    "context": "Every rompus is bright. Rompuses are zumpuses. Zumpuses are not blue. Zumpuses are jompuses. Jompuses are not opaque. Jompuses are numpuses. Numpuses are small. Numpuses are yumpuses. Each yumpus is feisty. Each yumpus is a wumpus. Every dumpus is not cold. Wumpuses are cold. Wumpuses are vumpuses. Stella is a zumpus.",
    "question": "Is the following statement true or false? Stella is cold.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nRompus(x) ::: x is a rompus\nBright(x) ::: x is bright\nZumpus(x) ::: x is a zumpus\nBlue(x) ::: x is blue\nJompus(x) ::: x is a jompus\nOpaque(x) ::: x is opaque\nNumpus(x) ::: x is a numpus\nSmall(x) ::: x is small\nYumpus(x) ::: x is a yumpus\nFeisty(x) ::: x is feisty\nWumpus(x) ::: x is a wumpus\nDumpus(x) ::: x is a dumpus\nCold(x) ::: x is cold\nVumpus(x) ::: x is a vumpus\nStella(x) ::: x is Stella\nPremises:\n∀x (Rompus(x) → Bright(x)) ::: Every rompus is bright.\n∀x (Rompus(x) → Zumpus(x)) ::: Rompuses are zumpuses.\n∀x (Zumpus(x) → ¬Blue(x)) ::: Zumpuses are not blue.\n∀x (Zumpus(x) → Jompus(x)) ::: Zumpuses are jompuses.\n∀x (Jompus(x) → ¬Opaque(x)) ::: Jompuses are not opaque.\n∀x (Jompus(x) → Numpus(x)) ::: Jompuses are numpuses.\n∀x (Numpus(x) → Small(x)) ::: Numpuses are small.\n∀x (Numpus(x) → Yumpus(x)) ::: Numpuses are yumpuses.\n∀x (Yumpus(x) → Feisty(x)) ::: Each yumpus is feisty.\n∀x (Yumpus(x) → Wumpus(x)) ::: Each yumpus is a wumpus.\n∀x (Dumpus(x) → ¬Cold(x)) ::: Every dumpus is not cold.\n∀x (Wumpus(x) → Cold(x)) ::: Wumpuses are cold.\n∀x (Wumpus(x) → Vumpus(x)) ::: Wumpuses are vumpuses.\nZumpus(stella) ::: Stella is a zumpus.\nConclusion:\nCold(stella) ::: Stella is cold.\n------"
    ]
  },
  {
    "id": "ProntoQA_410",
    "context": "Every vumpus is transparent. Each vumpus is a tumpus. Every tumpus is not cold. Tumpuses are rompuses. Each rompus is not amenable. Rompuses are jompuses. Every jompus is not large. Jompuses are impuses. Impuses are metallic. Impuses are zumpuses. Zumpuses are sweet. Each zumpus is a dumpus. Every dumpus is orange. Numpuses are not sweet. Dumpuses are yumpuses. Sam is a tumpus.",
    "question": "Is the following statement true or false? Sam is not sweet.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nVumpus(x) ::: x is a vumpus\nTransparent(x) ::: x is transparent\nTumpus(x) ::: x is a tumpus\nCold(x) ::: x is cold\nRompus(x) ::: x is a rompus\nAmenable(x) ::: x is amenable\nJompus(x) ::: x is a jompus\nLarge(x) ::: x is large\nImpus(x) ::: x is an impus\nMetallic(x) ::: x is metallic\nZumpus(x) ::: x is a zumpus\nSweet(x) ::: x is sweet\nDumpus(x) ::: x is a dumpus\nOrange(x) ::: x is orange\nNumpus(x) ::: x is a numpus\nPremises:\n∀x (Vumpus(x) → Transparent(x)) ::: Every vumpus is transparent.\n∀x (Vumpus(x) → Tumpus(x)) ::: Each vumpus is a tumpus.\n∀x (Tumpus(x) → ¬Cold(x)) ::: Every tumpus is not cold.\n∀x (Rompus(x) → Tumpus(x)) ::: Tumpuses are rompuses.\n∀x (Rompus(x) → ¬Amenable(x)) ::: Each rompus is not amenable.\n∀x (Rompus(x) → Jompus(x)) ::: Rompuses are jompuses.\n∀x (Jompus(x) → ¬Large(x)) ::: Every jompus is not large.\n∀x (Jompus(x) → Impus(x)) ::: Jompuses are impuses.\n∀x (Impus(x) → Metallic(x)) ::: Impuses are metallic.\n∀x (Impus(x) → Zumpus(x)) ::: Impuses are zumpuses.\n∀x (Zumpus(x) → Sweet(x)) ::: Zumpuses are sweet.\n∀x (Zumpus(x) → Dumpus(x)) ::: Each zumpus is a dumpus.\n∀x (Dumpus(x) → Orange(x)) ::: Every dumpus is orange.\n∀x (Numpus(x) → ¬Sweet(x)) ::: Numpuses are not sweet.\n∀x (Dumpus(x) → Yumpus(x)) ::: Dumpuses are yumpuses.\nTumpus(sam) ::: Sam is a tumpus.\nConclusion:\n¬Sweet(sam) ::: Sam is not sweet.\n------"
    ]
  },
  {
    "id": "ProntoQA_411",
    "context": "Each rompus is kind. Rompuses are wumpuses. Every wumpus is large. Numpuses are not bright. Every wumpus is an impus. Each impus is spicy. Each impus is a vumpus. Each vumpus is liquid. Every vumpus is a yumpus. Yumpuses are not floral. Each yumpus is a jompus. Jompuses are bright. Jompuses are dumpuses. Dumpuses are transparent. Each dumpus is a zumpus. Every zumpus is cold. Zumpuses are tumpuses. Stella is a wumpus.",
    "question": "Is the following statement true or false? Stella is bright.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nRompus(x) ::: x is a rompus\nKind(x) ::: x is kind\nWumpus(x) ::: x is a wumpus\nLarge(x) ::: x is large\nNumpus(x) ::: x is a numpus\nBright(x) ::: x is bright\nImpus(x) ::: x is an impus\nSpicy(x) ::: x is spicy\nVumpus(x) ::: x is a vumpus\nLiquid(x) ::: x is liquid\nYumpus(x) ::: x is a yumpus\nFloral(x) ::: x is floral\nJompus(x) ::: x is a jompus\nBright(x) ::: x is bright\nDumpus(x) ::: x is a dumpus\nTransparent(x) ::: x is transparent\nZumpus(x) ::: x is a zumpus\nCold(x) ::: x is cold\nTumpus(x) ::: x is a tumpus\nPremises:\n∀x (Rompus(x) → Kind(x)) ::: Each rompus is kind.\n∀x (Rompus(x) → Wumpus(x)) ::: Rompuses are wumpuses.\n∀x (Wumpus(x) → Large(x)) ::: Every wumpus is large.\n∀x (Numpus(x) → ¬Bright(x)) ::: Numpuses are not bright.\n∀x (Wumpus(x) → Impus(x)) ::: Every wumpus is an impus.\n∀x (Impus(x) → Spicy(x)) ::: Each impus is spicy.\n∀x (Impus(x) → Vumpus(x)) ::: Each impus is a vumpus.\n∀x (Vumpus(x) → Liquid(x)) ::: Each vumpus is liquid.\n∀x (Vumpus(x) → Yumpus(x)) ::: Every vumpus is a yumpus.\n∀x (Yumpus(x) → ¬Floral(x)) ::: Yumpuses are not floral.\n∀x (Yumpus(x) → Jompus(x)) ::: Each yumpus is a jompus.\n∀x (Jompus(x) → Bright(x)) ::: Jompuses are bright.\n∀x (Jompus(x) → Dumpus(x)) ::: Jompuses are dumpuses.\n∀x (Dumpus(x) → Transparent(x)) ::: Dumpuses are transparent.\n∀x (Dumpus(x) → Zumpus(x)) ::: Each dumpus is a zumpus.\n∀x (Zumpus(x) → Cold(x)) ::: Every zumpus is cold.\n∀x (Zumpus(x) → Tumpus(x)) ::: Zumpuses are tumpuses.\nWumpus(stella) ::: Stella is a wumpus.\nConclusion:\nBright(stella) ::: Stella is bright.\n------"
    ]
  },
  {
    "id": "ProntoQA_412",
    "context": "Each vumpus is transparent. Every vumpus is an impus. Each impus is red. Every impus is a zumpus. Zumpuses are mean. Every zumpus is a numpus. Each numpus is not hot. Numpuses are tumpuses. Each tumpus is not happy. Each jompus is happy. Tumpuses are rompuses. Max is a vumpus.",
    "question": "Is the following statement true or false? Max is happy.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant.lpg\n------"
    ]
  },
  {
    "id": "ProntoQA_413",
    "context": "Wumpuses are dull. Wumpuses are vumpuses. Every vumpus is metallic. Vumpuses are rompuses. Every rompus is not aggressive. Every rompus is a tumpus. Tumpuses are nervous. Every tumpus is a dumpus. Each dumpus is spicy. Every dumpus is a yumpus. Yumpuses are transparent. Every yumpus is a numpus. Each numpus is not small. Each numpus is a zumpus. Every zumpus is not brown. Each zumpus is an impus. Jompuses are small. Rex is a rompus.",
    "question": "Is the following statement true or false? Rex is small.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nWumpus(x) ::: x is a wumpus\nDull(x) ::: x is dull\nVumpus(x) ::: x is a vumpus\nMetallic(x) ::: x is metallic\nRompus(x) ::: x is a rompus\nAggressive(x) ::: x is aggressive\nTumpus(x) ::: x is a tumpus\nNervous(x) ::: x is nervous\nDumpus(x) ::: x is a dumpus\nSpicy(x) ::: x is spicy\nYumpus(x) ::: x is a yumpus\nTransparent(x) ::: x is transparent\nNumpus(x) ::: x is a numpus\nSmall(x) ::: x is small\nZumpus(x) ::: x is a zumpus\nBrown(x) ::: x is brown\nImpus(x) ::: x is an impus\nJompus(x) ::: x is a jompus\nPremises:\n∀x (Wumpus(x) → Dull(x)) ::: Wumpuses are dull.\n∀x (Wumpus(x) → Vumpus(x)) ::: Wumpuses are vumpuses.\n∀x (Vumpus(x) → Metallic(x)) ::: Every vumpus is metallic.\n∀x (Vumpus(x) → Rompus(x)) ::: Vumpuses are rompuses.\n∀x (Rompus(x) → ¬Aggressive(x)) ::: Every rompus is not aggressive.\n∀x (Rompus(x) → Tumpus(x)) ::: Every rompus is a tumpus.\n∀x (Tumpus(x) → Nervous(x)) ::: Tumpuses are nervous.\n∀x (Tumpus(x) → Dumpus(x)) ::: Every tumpus is a dumpus.\n∀x (Dumpus(x) → Spicy(x)) ::: Each dumpus is spicy.\n∀x (Dumpus(x) → Yumpus(x)) ::: Every dumpus is a yumpus.\n∀x (Yumpus(x) → Transparent(x)) ::: Yumpuses are transparent.\n∀x (Yumpus(x) → Numpus(x)) ::: Every yumpus is a numpus.\n∀x (Numpus(x) → ¬Small(x)) ::: Each numpus is not small.\n∀x (Numpus(x) → Zumpus(x)) ::: Each numpus is a zumpus.\n∀x (Zumpus(x) → ¬Brown(x)) ::: Every zumpus is not brown.\n∀x (Zumpus(x) → Impus(x)) ::: Each zumpus is an impus.\n∀x (Jompus(x) → Small(x)) ::: Jompuses are small.\nRompus(rex) ::: Rex is a rompus.\nConclusion:\nSmall(rex) ::: Rex is small.\n------"
    ]
  },
  {
    "id": "ProntoQA_414",
    "context": "Every wumpus is red. Wumpuses are tumpuses. Every rompus is not dull. Each tumpus is not sour. Tumpuses are jompuses. Jompuses are temperate. Jompuses are yumpuses. Each yumpus is nervous. Yumpuses are dumpuses. Dumpuses are not opaque. Dumpuses are impuses. Each impus is dull. Every impus is a vumpus. Every vumpus is earthy. Vumpuses are numpuses. Every numpus is large. Numpuses are zumpuses. Sally is a tumpus.",
    "question": "Is the following statement true or false? Sally is not dull.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nWumpus(x) ::: x is a wumpus\nRed(x) ::: x is red\nTumpus(x) ::: x is a tumpus\nRompus(x) ::: x is a rompus\nDull(x) ::: x is dull\nSour(x) ::: x is sour\nJompus(x) ::: x is a jompus\nTemperate(x) ::: x is temperate\nYumpus(x) ::: x is a yumpus\nNervous(x) ::: x is nervous\nDumpus(x) ::: x is a dumpus\nOpaque(x) ::: x is opaque\nImpus(x) ::: x is an impus\nVumpus(x) ::: x is a vumpus\nEarthy(x) ::: x is earthy\nNumpus(x) ::: x is a numpus\nLarge(x) ::: x is large\nZumpus(x) ::: x is a zumpus\nPremises:\n∀x (Wumpus(x) → Red(x)) ::: Every wumpus is red.\n∀x (Wumpus(x) → Tumpus(x)) ::: Wumpuses are tumpuses.\n∀x (Rompus(x) → ¬Dull(x)) ::: Every rompus is not dull.\n∀x (Tumpus(x) → ¬Sour(x)) ::: Each tumpus is not sour.\n∀x (Tumpus(x) → Jompus(x)) ::: Tumpuses are jompuses.\n∀x (Jompus(x) → Temperate(x)) ::: Jompuses are temperate.\n∀x (Jompus(x) → Yumpus(x)) ::: Jompuses are yumpuses.\n∀x (Yumpus(x) → Nervous(x)) ::: Each yumpus is nervous.\n∀x (Yumpus(x) → Dumpus(x)) ::: Yumpuses are dumpuses.\n∀x (Dumpus(x) → ¬Opaque(x)) ::: Dumpuses are not opaque.\n∀x (Dumpus(x) → Impus(x)) ::: Dumpuses are impuses.\n∀x (Impus(x) → Dull(x)) ::: Each impus is dull.\n∀x (Impus(x) → Vumpus(x)) ::: Every impus is a vumpus.\n∀x (Vumpus(x) → Earthy(x)) ::: Vumpuses are earthy.\n∀x (Vumpus(x) → Numpus(x)) ::: Vumpuses are numpuses.\n∀x (Numpus(x) → Large(x)) ::: Every numpus is large.\n∀x (Numpus(x) → Zumpus(x)) ::: Numpuses are zumpuses.\nTumpus(sally) ::: Sally is a tumpus.\nConclusion:\n¬Dull(sally) ::: Sally is not dull.\n------"
    ]
  },
  {
    "id": "ProntoQA_415",
    "context": "Every yumpus is feisty. Yumpuses are numpuses. Every numpus is not mean. Numpuses are tumpuses. Tumpuses are fruity. Tumpuses are rompuses. Each rompus is cold. Every rompus is a zumpus. Every zumpus is not dull. Zumpuses are impuses. Impuses are metallic. Every impus is a jompus. Wumpuses are red. Jompuses are small. Jompuses are vumpuses. Vumpuses are not red. Vumpuses are dumpuses. Alex is a rompus.",
    "question": "Is the following statement true or false? Alex is red.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nYumpus(x) ::: x is a yumpus\nFeisty(x) ::: x is feisty\nNumpus(x) ::: x is a numpus\nMean(x) ::: x is mean\nTumpus(x) ::: x is a tumpus\nFruity(x) ::: x is fruity\nRompus(x) ::: x is a rompus\nCold(x) ::: x is cold\nZumpus(x) ::: x is a zumpus\nDull(x) ::: x is dull\nImpus(x) ::: x is an impus\nMetallic(x) ::: x is metallic\nJompus(x) ::: x is a jompus\nRed(x) ::: x is red\nSmall(x) ::: x is small\nVumpus(x) ::: x is a vumpus\nDumpus(x) ::: x is a dumpus\nPremises:\n∀x (Yumpus(x) → Feisty(x)) ::: Every yumpus is feisty.\n∀x (Numpus(x) → ¬Mean(x)) ::: Numpuses are not mean.\n∀x (Numpus(x) → Tumpus(x)) ::: Numpuses are tumpuses.\n∀x (Tumpus(x) → Fruity(x)) ::: Tumpuses are fruity.\n∀x (Tumpus(x) → Rompus(x)) ::: Tumpuses are rompuses.\n∀x (Rompus(x) → Cold(x)) ::: Each rompus is cold.\n∀x (Rompus(x) → Zumpus(x)) ::: Every rompus is a zumpus.\n∀x (Zumpus(x) → ¬Dull(x)) ::: Zumpuses are not dull.\n∀x (Zumpus(x) → Impus(x)) ::: Zumpuses are impuses.\n∀x (Impus(x) → Metallic(x)) ::: Impuses are metallic.\n∀x (Impus(x) → Jompus(x)) ::: Every impus is a jompus.\n∀x (Wumpus(x) → Red(x)) ::: Wumpuses are red.\n∀x (Jompus(x) → Small(x)) ::: Jompuses are small.\n∀x (Jompus(x) → Vumpus(x)) ::: Jompuses are vumpuses.\n∀x (Vumpus(x) → ¬Red(x)) ::: Vumpuses are not red.\n∀x (Vumpus(x) → Dumpus(x)) ::: Vumpuses are dumpuses.\nRompus(alex) ::: Alex is a rompus.\nConclusion:\nRed(alex) ::: Alex is red.\n------"
    ]
  },
  {
    "id": "ProntoQA_416",
    "context": "Zumpuses are hot. Zumpuses are wumpuses. Wumpuses are fruity. Wumpuses are numpuses. Numpuses are not wooden. Numpuses are jompuses. Each jompus is not large. Jompuses are tumpuses. Tumpuses are opaque. Tumpuses are yumpuses. Each rompus is not opaque. Yumpuses are bitter. Yumpuses are dumpuses. Polly is a zumpus.",
    "question": "Is the following statement true or false? Polly is not opaque.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nZumpus(x) ::: x is a zumpus\nHot(x) ::: x is hot\nWumpus(x) ::: x is a wumpus\nFruity(x) ::: x is fruity\nNumpus(x) ::: x is a numpus\nWooden(x) ::: x is wooden\nJompus(x) ::: x is a jompus\nLarge(x) ::: x is large\nTumpus(x) ::: x is a tumpus\nOpaque(x) ::: x is opaque\nYumpus(x) ::: x is a yumpus\nBitter(x) ::: x is bitter\nDumpus(x) ::: x is a dumpus\nPremises:\n∀x (Zumpus(x) → Hot(x)) ::: Zumpuses are hot.\n∀x (Zumpus(x) → Wumpus(x)) ::: Zumpuses are wumpuses.\n∀x (Wumpus(x) → Fruity(x)) ::: Wumpuses are fruity.\n∀x (Wumpus(x) → Numpus(x)) ::: Wumpuses are numpuses.\n∀x (Numpus(x) → ¬Wooden(x)) ::: Numpuses are not wooden.\n∀x (Numpus(x) → Jompus(x)) ::: Numpuses are jompuses.\n∀x (Jompus(x) → ¬Large(x)) ::: Each jompus is not large.\n∀x (Jompus(x) → Tumpus(x)) ::: Jompuses are tumpuses.\n∀x (Tumpus(x) → Opaque(x)) ::: Tumpuses are opaque.\n∀x (Tumpus(x) → Yumpus(x)) ::: Tumpuses are yumpuses.\n∀x (Rompus(x) → ¬Opaque(x)) ::: Each rompus is not opaque.\n∀x (Yumpus(x) → Bitter(x)) ::: Yumpuses are bitter.\n∀x (Yumpus(x) → Dumpus(x)) ::: Yumpuses are dumpuses.\nZumpus(polly) ::: Polly is a zumpus.\nConclusion:\n¬Opaque(polly) ::: Polly is not opaque.\n------"
    ]
  },
  {
    "id": "ProntoQA_417",
    "context": "Every tumpus is orange. Tumpuses are vumpuses. Each vumpus is not small. Vumpuses are wumpuses. Wumpuses are transparent. Wumpuses are zumpuses. Each zumpus is dull. Every zumpus is a jompus. Every rompus is metallic. Each jompus is floral. Every jompus is a yumpus. Yumpuses are not metallic. Yumpuses are dumpuses. Each dumpus is not cold. Each dumpus is a numpus. Numpuses are shy. Numpuses are impuses. Polly is a vumpus.",
    "question": "Is the following statement true or false? Polly is not metallic.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nTumpus(x) ::: x is a tumpus\nOrange(x) ::: x is orange\nVumpus(x) ::: x is a vumpus\nSmall(x) ::: x is small\nWumpus(x) ::: x is a wumpus\nTransparent(x) ::: x is transparent\nZumpus(x) ::: x is a zumpus\nDull(x) ::: x is dull\nJompus(x) ::: x is a jompus\nFloral(x) ::: x is floral\nYumpus(x) ::: x is a yumpus\nMetallic(x) ::: x is metallic\nDumpus(x) ::: x is a dumpus\nCold(x) ::: x is cold\nNumpus(x) ::: x is a numpus\nShy(x) ::: x is shy\nImpus(x) ::: x is an impus\nPremises:\n∀x (Tumpus(x) → Orange(x)) ::: Every tumpus is orange.\n∀x (Tumpus(x) → Vumpus(x)) ::: Tumpuses are vumpuses.\n∀x (Vumpus(x) → ¬Small(x)) ::: Each vumpus is not small.\n∀x (Vumpus(x) → Wumpus(x)) ::: Vumpuses are wumpuses.\n∀x (Wumpus(x) → Transparent(x)) ::: Wumpuses are transparent.\n∀x (Wumpus(x) → Zumpus(x)) ::: Wumpuses are zumpuses.\n∀x (Zumpus(x) → Dull(x)) ::: Each zumpus is dull.\n∀x (Zumpus(x) → Jompus(x)) ::: Every zumpus is a jompus.\n∀x (Rompus(x) → Metallic(x)) ::: Every rompus is metallic.\n∀x (Jompus(x) → Floral(x)) ::: Each jompus is floral.\n∀x (Jompus(x) → Yumpus(x)) ::: Every jompus is a yumpus.\n∀x (Yumpus(x) → ¬Metallic(x)) ::: Yumpuses are not metallic.\n∀x (Yumpus(x) → Dumpus(x)) ::: Yumpuses are dumpuses.\n∀x (Dumpus(x) → ¬Cold(x)) ::: Each dumpus is not cold.\n∀x (Dumpus(x) → Numpus(x)) ::: Each dumpus is a numpus.\n∀x (Numpus(x) → Shy(x)) ::: Numpuses are shy.\n∀x (Numpus(x) → Impus(x)) ::: Numpuses are impuses.\nVumpus(polly) ::: Polly is a vumpus.\nConclusion:\n¬Metallic(polly) ::: Polly is not metallic.\n------"
    ]
  },
  {
    "id": "ProntoQA_418",
    "context": "Tumpuses are large. Every tumpus is a jompus. Each jompus is transparent. Every jompus is a wumpus. Each wumpus is not metallic. Every wumpus is a numpus. Numpuses are aggressive. Numpuses are dumpuses. Every rompus is not red. Dumpuses are red. Dumpuses are impuses. Impuses are bright. Each impus is a vumpus. Each vumpus is earthy. Vumpuses are yumpuses. Each yumpus is sweet. Each yumpus is a zumpus. Alex is a tumpus.",
    "question": "Is the following statement true or false? Alex is not red.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nTumpus(x) ::: x is a tumpus\nLarge(x) ::: x is large\nJompus(x) ::: x is a jompus\nTransparent(x) ::: x is transparent\nWumpus(x) ::: x is a wumpus\nMetallic(x) ::: x is metallic\nNumpus(x) ::: x is a numpus\nAggressive(x) ::: x is aggressive\nDumpus(x) ::: x is a dumpus\nRed(x) ::: x is red\nImpus(x) ::: x is an impus\nBright(x) ::: x is bright\nVumpus(x) ::: x is a vumpus\nEarthy(x) ::: x is earthy\nYumpus(x) ::: x is a yumpus\nSweet(x) ::: x is sweet\nZumpus(x) ::: x is a zumpus\nPremises:\n∀x (Tumpus(x) → Large(x)) ::: Tumpuses are large.\n∀x (Tumpus(x) → Jompus(x)) ::: Every tumpus is a jompus.\n∀x (Jompus(x) → Transparent(x)) ::: Each jompus is transparent.\n∀x (Wumpus(x) → Metallic(x)) ::: Every wumpus is not metallic.\n∀x (Wumpus(x) → Numpus(x)) ::: Every wumpus is a numpus.\n∀x (Numpus(x) → Aggressive(x)) ::: Numpuses are aggressive.\n∀x (Numpus(x) → Dumpus(x)) ::: Numpuses are dumpuses.\n∀x (Rompus(x) → ¬Red(x)) ::: Every rompus is not red.\n∀x (Dumpus(x) → Red(x)) ::: Dumpuses are red.\n∀x (Dumpus(x) → Impus(x)) ::: Dumpuses are impuses.\n∀x (Impus(x) → Bright(x)) ::: Impuses are bright.\n∀x (Impus(x) → Vumpus(x)) ::: Each impus is a vumpus.\n∀x (Vumpus(x) → Earthy(x)) ::: Each vumpus is earthy.\n∀x (Vumpus(x) → Yumpus(x)) ::: Vumpuses are yumpuses.\n∀x (Yumpus(x) → Sweet(x)) ::: Each yumpus is sweet.\n∀x (Yumpus(x) → Zumpus(x)) ::: Each yumpus is a zumpus.\nTumpus(alex) ::: Alex is a tumpus.\nConclusion:\n¬Red(alex) ::: Alex is not red.\n------"
    ]
  },
  {
    "id": "ProntoQA_419",
    "context": "Each dumpus is not orange. Every dumpus is a tumpus. Tumpuses are floral. Tumpuses are rompuses. Rompuses are luminous. Each rompus is a yumpus. Each vumpus is small. Yumpuses are not cold. Each yumpus is a zumpus. Every zumpus is opaque. Zumpuses are jompuses. Jompuses are nervous. Each jompus is an impus. Impuses are not small. Each impus is a wumpus. Each wumpus is angry. Wumpuses are numpuses. Wren is a rompus.",
    "question": "Is the following statement true or false? Wren is not small.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nDumpus(x) ::: x is a dumpus\nOrange(x) ::: x is orange\nTumpus(x) ::: x is a tumpus\nFloral(x) ::: x is floral\nRompus(x) ::: x is a rompus\nLuminous(x) ::: x is luminous\nYumpus(x) ::: x is a yumpus\nSmall(x) ::: x is small\nCold(x) ::: x is cold\nZumpus(x) ::: x is a zumpus\nOpaque(x) ::: x is opaque\nJompus(x) ::: x is a jompus\nNervous(x) ::: x is nervous\nImpus(x) ::: x is an impus\nWumpus(x) ::: x is a wumpus\nAngry(x) ::: x is angry\nNumpus(x) ::: x is a numpus\nPremises:\n∀x (Dumpus(x) → ¬Orange(x)) ::: Each dumpus is not orange.\n∀x (Dumpus(x) → Tumpus(x)) ::: Every dumpus is a tumpus.\n∀x (Tumpus(x) → Floral(x)) ::: Tumpuses are floral.\n∀x (Tumpus(x) → Rompus(x)) ::: Tumpuses are rompuses.\n∀x (Rompus(x) → Luminous(x)) ::: Rompuses are luminous.\n∀x (Rompus(x) → Yumpus(x)) ::: Each rompus is a yumpus.\n∀x (Vumpus(x) → Small(x)) ::: Each vumpus is small.\n∀x (Yumpus(x) → ¬Cold(x)) ::: Yumpuses are not cold.\n∀x (Yumpus(x) → Zumpus(x)) ::: Each yumpus is a zumpus.\n∀x (Zumpus(x) → Opaque(x)) ::: Every zumpus is opaque.\n∀x (Zumpus(x) → Jompus(x)) ::: Zumpuses are jompuses.\n∀x (Jompus(x) → Nervous(x)) ::: Jompuses are nervous.\n∀x (Jompus(x) → Impus(x)) ::: Each jompus is an impus.\n∀x (Impus(x) → ¬Small(x)) ::: Impuses are not small.\n∀x (Impus(x) → Wumpus(x)) ::: Each impus is a wumpus.\n∀x (Wumpus(x) → Angry(x)) ::: Each wumpus is angry.\n∀x (Wumpus(x) → Numpus(x)) ::: Wumpuses are numpuses.\nRompus(wren) ::: Wren is a rompus.\nConclusion:\n¬Small(wren) ::: Wren is not small.\n------"
    ]
  },
  {
    "id": "ProntoQA_420",
    "context": "Every impus is bright. Every impus is a dumpus. Dumpuses are happy. Dumpuses are yumpuses. Every yumpus is not sour. Yumpuses are numpuses. Every numpus is mean. Numpuses are tumpuses. Every tumpus is hot. Tumpuses are wumpuses. Wumpuses are metallic. Every wumpus is a jompus. Rompuses are not opaque. Each jompus is opaque. Jompuses are zumpuses. Each zumpus is blue. Zumpuses are vumpuses. Rex is a yumpus.",
    "question": "Is the following statement true or false? Rex is not opaque.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nImpus(x) ::: x is an impus\nBright(x) ::: x is bright\nDumpus(x) ::: x is a dumpus\nHappy(x) ::: x is happy\nYumpus(x) ::: x is a yumpus\nSour(x) ::: x is sour\nNumpus(x) ::: x is a numpus\nMean(x) ::: x is mean\nTumpus(x) ::: x is a tumpus\nHot(x) ::: x is hot\nWumpus(x) ::: x is a wumpus\nMetallic(x) ::: x is metallic\nJompus(x) ::: x is a jompus\nRompus(x) ::: x is a rompus\nOpaque(x) ::: x is opaque\nZumpus(x) ::: x is a zumpus\nBlue(x) ::: x is blue\nVumpus(x) ::: x is a vumpus\nPremises:\n∀x (Impus(x) → Bright(x)) ::: Every impus is bright.\n∀x (Impus(x) → Dumpus(x)) ::: Every impus is a dumpus.\n∀x (Dumpus(x) → Happy(x)) ::: Dumpuses are happy.\n∀x (Dumpus(x) → Yumpus(x)) ::: Dumpuses are yumpuses.\n∀x (Yumpus(x) → ¬Sour(x)) ::: Yumpuses are not sour.\n∀x (Yumpus(x) → Numpus(x)) ::: Yumpuses are numpuses.\n∀x (Numpus(x) → Mean(x)) ::: Every numpus is mean.\n∀x (Numpus(x) → Tumpus(x)) ::: Numpuses are tumpuses.\n∀x (Tumpus(x) → Hot(x)) ::: Every tumpus is hot.\n∀x (Tumpus(x) → Wumpus(x)) ::: Tumpuses are wumpuses.\n∀x (Wumpus(x) → Metallic(x)) ::: Wumpuses are metallic.\n∀x (Wumpus(x) → Jompus(x)) ::: Every wumpus is a jompus.\n∀x (Rompus(x) → ¬Opaque(x)) ::: Rompuses are not opaque.\n∀x (Jompus(x) → Opaque(x)) ::: Each jompus is opaque.\n∀x (Jompus(x) → Zumpus(x)) ::: Jompuses are zumpuses.\n∀x (Zumpus(x) → Blue(x)) ::: Each zumpus is blue.\n∀x (Zumpus(x) → Vumpus(x)) ::: Zumpuses are vumpuses.\nYumpus(rex) ::: Rex is a yumpus.\nConclusion:\n¬Opaque(rex) ::: Rex is not opaque.\n------"
    ]
  },
  {
    "id": "ProntoQA_421",
    "context": "Every numpus is not transparent. Every numpus is a wumpus. Every wumpus is not hot. Every wumpus is an impus. Each impus is liquid. Impuses are tumpuses. Tumpuses are brown. Tumpuses are jompuses. Jompuses are not spicy. Jompuses are dumpuses. Dumpuses are kind. Dumpuses are rompuses. Each rompus is not floral. Every rompus is a yumpus. Yumpuses are not nervous. Each zumpus is nervous. Each yumpus is a vumpus. Alex is a tumpus.",
    "question": "Is the following statement true or false? Alex is nervous.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nNumpus(x) ::: x is a numpus\nTransparent(x) ::: x is transparent\nWumpus(x) ::: x is a wumpus\nHot(x) ::: x is hot\nImpus(x) ::: x is an impus\nLiquid(x) ::: x is liquid\nTumpus(x) ::: x is a tumpus\nBrown(x) ::: x is brown\nJompus(x) ::: x is a jompus\nSpicy(x) ::: x is spicy\nDumpus(x) ::: x is a dumpus\nKind(x) ::: x is kind\nRompus(x) ::: x is a rompus\nFloral(x) ::: x is floral\nYumpus(x) ::: x is a yumpus\nNervous(x) ::: x is nervous\nZumpus(x) ::: x is a zumpus\nPremises:\n∀x (Numpus(x) → ¬Transparent(x)) ::: Every numpus is not transparent.\n∀x (Numpus(x) → Wumpus(x)) ::: Every numpus is a wumpus.\n∀x (Wumpus(x) → ¬Hot(x)) ::: Every wumpus is not hot.\n∀x (Wumpus(x) → Impus(x)) ::: Every wumpus is an impus.\n∀x (Impus(x) → Liquid(x)) ::: Each impus is liquid.\n∀x (Impus(x) → Tumpus(x)) ::: Impuses are tumpuses.\n∀x (Tumpus(x) → Brown(x)) ::: Tumpuses are brown.\n∀x (Tumpus(x) → Jompus(x)) ::: Tumpuses are jompuses.\n∀x (Jompus(x) → ¬Spicy(x)) ::: Jompuses are not spicy.\n∀x (Jompus(x) → Dumpus(x)) ::: Jompuses are dumpuses.\n∀x (Dumpus(x) → Kind(x)) ::: Dumpuses are kind.\n∀x (Dumpus(x) → Rompus(x)) ::: Dumpuses are rompuses.\n∀x (Rompus(x) → ¬Floral(x)) ::: Each rompus is not floral.\n∀x (Rompus(x) → Yumpus(x)) ::: Every rompus is a yumpus.\n∀x (Yumpus(x) → ¬Nervous(x)) ::: Yumpuses are not nervous.\n∀x (Zumpus(x) → Nervous(x)) ::: Each zumpus is nervous.\n∀x (Yumpus(x) → Vumpus(x)) ::: Each yumpus is a vumpus.\nTumpus(alex) ::: Alex is a tumpus.\nConclusion:\nNervous(alex) ::: Alex is nervous.\n------"
    ]
  },
  {
    "id": "ProntoQA_422",
    "context": "Every wumpus is small. Wumpuses are yumpuses. Yumpuses are spicy. Every yumpus is a jompus. Jompuses are hot. Jompuses are tumpuses. Tumpuses are transparent. Impuses are not happy. Tumpuses are rompuses. Every rompus is kind. Each rompus is a numpus. Numpuses are earthy. Each numpus is a zumpus. Zumpuses are wooden. Zumpuses are dumpuses. Dumpuses are happy. Dumpuses are vumpuses. Fae is a tumpus.",
    "question": "Is the following statement true or false? Fae is not happy.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "------\n### Predicates:\nWumpus(x) ::: x is a wumpus\nSmall(x) ::: x is small\nYumpus(x) ::: x is a yumpus\nSpicy(x) ::: x is spicy\nJompus(x) ::: x is a jompus\nHot(x) ::: x is hot\nTumpus(x) ::: x is a tumpus\nTransparent(x) ::: x is transparent\nImpus(x) ::: x is an impus\nHappy(x) ::: x is happy\nRompus(x) ::: x is a rompus\nKind(x) ::: x is kind\nNumpus(x) ::: x is a numpus\nEarthy(x) ::: x is earthy\nZumpus(x) ::: x is a zumpus\nWooden(x) ::: x is wooden\nDumpus(x) ::: x is a dumpus\nHappy(x) ::: x is happy\nVumpus(x) ::: x is a vumpus\nPremises:\n∀x (Wumpus(x) → Small(x)) ::: Every wumpus is small.\n∀x (Wumpus(x) → Yumpus(x)) ::: Wumpuses are yumpuses.\n∀x (Yumpus(x) → Spicy(x)) ::: Yumpuses are spicy.\n∀x (Yumpus(x) → Jompus(x)) ::: Every yumpus is a jompus.\n∀x (Jompus(x) → Hot(x)) ::: Jompuses are hot.\n∀x (Jompus(x) → Tumpus(x)) ::: Jompuses are tumpuses.\n∀x (Tumpus(x) → Transparent(x)) ::: Tumpuses are transparent.\n∀x (Impus(x) → ¬Happy(x)) ::: Impuses are not happy.\n∀x (Tumpus(x) → Rompus(x)) ::: Tumpuses are rompuses.\n∀x (Rompus(x) → Kind(x)) ::: Each rompus is kind.\n∀x (Rompus(x) → Numpus(x)) ::: Each rompus is a numpus.\n∀x (Numpus(x) → Earthy(x)) ::: Numpuses are earthy.\n∀x (Numpus(x) → Zumpus(x)) ::: Each numpus is a zumpus.\n∀x (Zumpus(x) → Wooden(x)) ::: Zumpuses are wooden.\n∀x (Zumpus(x) → Dumpus(x)) ::: Zumpuses are dumpuses.\n∀x (Dumpus(x) → Happy(x)) ::: Dumpuses are happy.\n∀x (Dumpus(x) → Vumpus(x)) ::: Dumpuses are vumpuses.\nTumpus(fae) ::: Fae is a tumpus.\nConclusion:\n¬Happy(fae) ::: Fae is not happy.\n------"
    ]
  },
  {
    "id": "ProntoQA_423",
    "context": "Each rompus is not cold. Rompuses are wumpuses. Zumpuses are not transparent. Wumpuses are orange. Every wumpus is a yumpus. Each yumpus is not fruity. Yumpuses are numpuses. Numpuses are sour. Numpuses are jompuses. Each jompus is transparent. Jompuses are tumpuses. Tumpuses are liquid. Every tumpus is a dumpus. Dumpuses are angry. Dumpuses are vumpuses. Vumpuses are shy. Vumpuses are impuses. Wren is a rompus.",
    "question": "Is the following statement true or false? Wren is not transparent.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nRompus(x) ::: x is a rompus\nCold(x) ::: x is cold\nWumpus(x) ::: x is a wumpus\nZumpus(x) ::: x is a zumpus\nTransparent(x) ::: x is transparent\nOrange(x) ::: x is orange\nYumpus(x) ::: x is a yumpus\nFruity(x) ::: x is fruity\nNumpus(x) ::: x is a numpus\nSour(x) ::: x is sour\nJompus(x) ::: x is a jompus\nTumpus(x) ::: x is a tumpus\nLiquid(x) ::: x is liquid\nDumpus(x) ::: x is a dumpus\nAngry(x) ::: x is angry\nVumpus(x) ::: x is a vumpus\nShy(x) ::: x is shy\nImpus(x) ::: x is an impus\nPremises:\n∀x (Rompus(x) → ¬Cold(x)) ::: Each rompus is not cold.\n∀x (Rompus(x) → Wumpus(x)) ::: Rompuses are wumpuses.\n∀x (Zumpus(x) → ¬Transparent(x)) ::: Zumpuses are not transparent.\n∀x (Wumpus(x) → Orange(x)) ::: Wumpuses are orange.\n∀x (Wumpus(x) → Yumpus(x)) ::: Every wumpus is a yumpus.\n∀x (Yumpus(x) → ¬Fruity(x)) ::: Yumpuses are not fruity.\n∀x (Yumpus(x) → Numpus(x)) ::: Yumpuses are numpuses.\n∀x (Numpus(x) → Sour(x)) ::: Numpuses are sour.\n∀x (Numpus(x) → Jompus(x)) ::: Numpuses are jompuses.\n∀x (Jompus(x) → Transparent(x)) ::: Each jompus is transparent.\n∀x (Jompus(x) → Tumpus(x)) ::: Jompuses are tumpuses.\n∀x (Tumpus(x) → Liquid(x)) ::: Tumpuses are liquid.\n∀x (Tumpus(x) → Dumpus(x)) ::: Every tumpus is a dumpus.\n∀x (Dumpus(x) → Angry(x)) ::: Dumpuses are angry.\n∀x (Dumpus(x) → Vumpus(x)) ::: Dumpuses are vumpuses.\n∀x (Vumpus(x) → Shy(x)) ::: Vumpuses are shy.\n∀x (Vumpus(x) → Impus(x)) ::: Vumpuses are impuses.\nRompus(wren) ::: Wren is a rompus.\nConclusion:\n¬Transparent(wren) ::: Wren is not transparent.\n------"
    ]
  },
  {
    "id": "ProntoQA_424",
    "context": "Vumpuses are not nervous. Every vumpus is a jompus. Each jompus is fruity. Jompuses are rompuses. Each rompus is wooden. Each rompus is an impus. Wumpuses are mean. Impuses are transparent. Each impus is a numpus. Numpuses are not orange. Every numpus is a zumpus. Zumpuses are cold. Zumpuses are yumpuses. Each yumpus is not mean. Every yumpus is a tumpus. Polly is a rompus.",
    "question": "Is the following statement true or false? Polly is not mean.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nVumpus(x) ::: x is a vumpus\nNervous(x) ::: x is nervous\nJompus(x) ::: x is a jompus\nFruity(x) ::: x is fruity\nRompus(x) ::: x is a rompus\nWooden(x) ::: x is wooden\nImpus(x) ::: x is an impus\nMean(x) ::: x is mean\nTransparent(x) ::: x is transparent\nNumpus(x) ::: x is a numpus\nOrange(x) ::: x is orange\nZumpus(x) ::: x is a zumpus\nCold(x) ::: x is cold\nYumpus(x) ::: x is a yumpus\nTumpus(x) ::: x is a tumpus\nPremises:\n∀x (Vumpus(x) → ¬Nervous(x)) ::: Vumpuses are not nervous.\n∀x (Vumpus(x) → Jompus(x)) ::: Every vumpus is a jompus.\n∀x (Jompus(x) → Fruity(x)) ::: Each jompus is fruity.\n∀x (Jompus(x) → Rompus(x)) ::: Jompuses are rompuses.\n∀x (Rompus(x) → Wooden(x)) ::: Each rompus is wooden.\n∀x (Rompus(x) → Impus(x)) ::: Each rompus is an impus.\n∀x (Wumpus(x) → Mean(x)) ::: Wumpuses are mean.\n∀x (Impus(x) → Transparent(x)) ::: Impuses are transparent.\n∀x (Impus(x) → Numpus(x)) ::: Each impus is a numpus.\n∀x (Numpus(x) → ¬Orange(x)) ::: Numpuses are not orange.\n∀x (Numpus(x) → Zumpus(x)) ::: Every numpus is a zumpus.\n∀x (Zumpus(x) → Cold(x)) ::: Zumpuses are cold.\n∀x (Zumpus(x) → Yumpus(x)) ::: Zumpuses are yumpuses.\n∀x (Yumpus(x) → ¬Mean(x)) ::: Each yumpus is not mean.\n∀x (Yumpus(x) → Tumpus(x)) ::: Every yumpus is a tumpus.\nRompus(polly) ::: Polly is a rompus.\nConclusion:\n¬Mean(polly) ::: Polly is not mean.\n------"
    ]
  },
  {
    "id": "ProntoQA_425",
    "context": "Impuses are shy. Impuses are rompuses. Each rompus is temperate. Rompuses are vumpuses. Vumpuses are dull. Every vumpus is a wumpus. Each wumpus is not fruity. Every wumpus is a zumpus. Each zumpus is not wooden. Every zumpus is a yumpus. Each yumpus is red. Every tumpus is not opaque. Every yumpus is a numpus. Each numpus is opaque. Every numpus is a jompus. Jompuses are small. Every jompus is a dumpus. Wren is a vumpus.",
    "question": "Is the following statement true or false? Wren is not opaque.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nImpus(x) ::: x is an impus\nShy(x) ::: x is shy\nRompus(x) ::: x is a rompus\nTemperate(x) ::: x is temperate\nVumpus(x) ::: x is a vumpus\nDull(x) ::: x is dull\nWumpus(x) ::: x is a wumpus\nFruity(x) ::: x is fruity\nZumpus(x) ::: x is a zumpus\nWooden(x) ::: x is wooden\nYumpus(x) ::: x is a yumpus\nRed(x) ::: x is red\nTumpus(x) ::: x is a tumpus\nOpaque(x) ::: x is opaque\nNumpus(x) ::: x is a numpus\nJompus(x) ::: x is a jompus\nSmall(x) ::: x is small\nDumpus(x) ::: x is a dumpus\nPremises:\n∀x (Impus(x) → Shy(x)) ::: Impuses are shy.\n∀x (Impus(x) → Rompus(x)) ::: Impuses are rompuses.\n∀x (Rompus(x) → Temperate(x)) ::: Each rompus is temperate.\n∀x (Rompus(x) → Vumpus(x)) ::: Rompuses are vumpuses.\n∀x (Vumpus(x) → Dull(x)) ::: Vumpuses are dull.\n∀x (Vumpus(x) → Wumpus(x)) ::: Every vumpus is a wumpus.\n∀x (Wumpus(x) → ¬Fruity(x)) ::: Every wumpus is not fruity.\n∀x (Wumpus(x) → Zumpus(x)) ::: Every wumpus is a zumpus.\n∀x (Zumpus(x) → ¬Wooden(x)) ::: Each zumpus is not wooden.\n∀x (Zumpus(x) → Yumpus(x)) ::: Every zumpus is a yumpus.\n∀x (Yumpus(x) → Red(x)) ::: Every yumpus is red.\n∀x (Tumpus(x) → ¬Opaque(x)) ::: Every tumpus is not opaque.\n∀x (Yumpus(x) → Numpus(x)) ::: Every yumpus is a numpus.\n∀x (Numpus(x) → Opaque(x)) ::: Every numpus is opaque.\n∀x (Numpus(x) → Jompus(x)) ::: Every numpus is a jompus.\n∀x (Jompus(x) → Small(x)) ::: Jompuses are small.\n∀x (Jompus(x) → Dumpus(x)) ::: Every jompus is a dumpus.\nVumpus(wren) ::: Wren is a vumpus.\nConclusion:\n¬Opaque(wren) ::: Wren is not opaque.\n------"
    ]
  },
  {
    "id": "ProntoQA_426",
    "context": "Vumpuses are not bitter. Every vumpus is a rompus. Every rompus is temperate. Rompuses are zumpuses. Each zumpus is not large. Each zumpus is a jompus. Each jompus is not bright. Jompuses are tumpuses. Each tumpus is orange. Tumpuses are yumpuses. Yumpuses are feisty. Every yumpus is a wumpus. Wumpuses are transparent. Each wumpus is an impus. Every impus is not floral. Numpuses are floral. Impuses are dumpuses. Wren is a jompus.",
    "question": "Is the following statement true or false? Wren is floral.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nVumpus(x) ::: x is a vumpus\nBitter(x) ::: x is bitter\nRompus(x) ::: x is a rompus\nTemperate(x) ::: x is temperate\nZumpus(x) ::: x is a zumpus\nLarge(x) ::: x is large\nJompus(x) ::: x is a jompus\nBright(x) ::: x is bright\nTumpus(x) ::: x is a tumpus\nOrange(x) ::: x is orange\nYumpus(x) ::: x is a yumpus\nFeisty(x) ::: x is feisty\nWumpus(x) ::: x is a wumpus\nTransparent(x) ::: x is transparent\nImpus(x) ::: x is an impus\nFloral(x) ::: x is floral\nDumpus(x) ::: x is a dumpus\nPremises:\n∀x (Vumpus(x) → ¬Bitter(x)) ::: Vumpuses are not bitter.\n∀x (Vumpus(x) → Rompus(x)) ::: Every vumpus is a rompus.\n∀x (Rompus(x) → Temperate(x)) ::: Every rompus is temperate.\n∀x (Rompus(x) → Zumpus(x)) ::: Rompuses are zumpuses.\n∀x (Zumpus(x) → ¬Large(x)) ::: Each zumpus is not large.\n∀x (Zumpus(x) → Jompus(x)) ::: Each zumpus is a jompus.\n∀x (Jompus(x) → ¬Bright(x)) ::: Each jompus is not bright.\n∀x (Jompus(x) → Tumpus(x)) ::: Jompuses are tumpuses.\n∀x (Tumpus(x) → Orange(x)) ::: Each tumpus is orange.\n∀x (Tumpus(x) → Yumpus(x)) ::: Tumpuses are yumpuses.\n∀x (Yumpus(x) → Feisty(x)) ::: Yumpuses are feisty.\n∀x (Yumpus(x) → Wumpus(x)) ::: Every yumpus is a wumpus.\n∀x (Wumpus(x) → Transparent(x)) ::: Wumpuses are transparent.\n∀x (Wumpus(x) → Impus(x)) ::: Each wumpus is an impus.\n∀x (Impus(x) → ¬Floral(x)) ::: Every impus is not floral.\n∀x (Numpus(x) → Floral(x)) ::: Numpuses are floral.\n∀x (Impus(x) → Dumpus(x)) ::: Impuses are dumpuses.\nJompus(wren) ::: Wren is a jompus.\nConclusion:\nFloral(wren) ::: Wren is floral.\n------"
    ]
  },
  {
    "id": "ProntoQA_427",
    "context": "Jompuses are bright. Jompuses are vumpuses. Each vumpus is cold. Vumpuses are dumpuses. Dumpuses are mean. Dumpuses are rompuses. Each rompus is spicy. Rompuses are impuses. Impuses are not earthy. Every impus is a yumpus. Each numpus is not small. Yumpuses are not metallic. Yumpuses are tumpuses. Tumpuses are small. Tumpuses are zumpuses. Zumpuses are opaque. Zumpuses are wumpuses. Alex is a dumpus.",
    "question": "Is the following statement true or false? Alex is small.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nJompus(x) ::: x is a jompus\nBright(x) ::: x is bright\nVumpus(x) ::: x is a vumpus\nCold(x) ::: x is cold\nDumpus(x) ::: x is a dumpus\nMean(x) ::: x is mean\nRompus(x) ::: x is a rompus\nSpicy(x) ::: x is spicy\nImpus(x) ::: x is an impus\nEarthy(x) ::: x is earthy\nYumpus(x) ::: x is a yumpus\nNumpus(x) ::: x is a numpus\nSmall(x) ::: x is small\nMetallic(x) ::: x is metallic\nTumpus(x) ::: x is a tumpus\nZumpus(x) ::: x is a zumpus\nOpaque(x) ::: x is opaque\nWumpus(x) ::: x is a wumpus\nPremises:\n∀x (Jompus(x) → Bright(x)) ::: Jompuses are bright.\n∀x (Jompus(x) → Vumpus(x)) ::: Jompuses are vumpuses.\n∀x (Vumpus(x) → Cold(x)) ::: Each vumpus is cold.\n∀x (Vumpus(x) → Dumpus(x)) ::: Vumpuses are dumpuses.\n∀x (Dumpus(x) → Mean(x)) ::: Dumpuses are mean.\n∀x (Dumpus(x) → Rompus(x)) ::: Dumpuses are rompuses.\n∀x (Rompus(x) → Spicy(x)) ::: Rompuses are spicy.\n∀x (Rompus(x) → Impus(x)) ::: Rompuses are impuses.\n∀x (Impus(x) → ¬Earthy(x)) ::: Impuses are not earthy.\n∀x (Impus(x) → Yumpus(x)) ::: Every impus is a yumpus.\n∀x (Numpus(x) → ¬Small(x)) ::: Each numpus is not small.\n∀x (Yumpus(x) → ¬Metallic(x)) ::: Yumpuses are not metallic.\n∀x (Yumpus(x) → Tumpus(x)) ::: Yumpuses are tumpuses.\n∀x (Tumpus(x) → Small(x)) ::: Tumpuses are small.\n∀x (Tumpus(x) → Zumpus(x)) ::: Tumpuses are zumpuses.\n∀x (Zumpus(x) → Opaque(x)) ::: Zumpuses are opaque.\n∀x (Zumpus(x) → Wumpus(x)) ::: Zumpuses are wumpuses.\nDumpus(alex) ::: Alex is a dumpus.\nConclusion:\nSmall(alex) ::: Alex is small.\n------"
    ]
  },
  {
    "id": "ProntoQA_428",
    "context": "Jompuses are feisty. Yumpuses are sour. Each yumpus is a rompus. Every rompus is dull. Every rompus is a wumpus. Every wumpus is small. Wumpuses are numpuses. Every numpus is metallic. Numpuses are tumpuses. Each tumpus is not feisty. Tumpuses are zumpuses. Zumpuses are fruity. Every zumpus is a vumpus. Vumpuses are angry. Vumpuses are dumpuses. Each dumpus is cold. Dumpuses are impuses. Rex is a yumpus.",
    "question": "Is the following statement true or false? Rex is not feisty.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nJompus(x) ::: x is a jompus\nFeisty(x) ::: x is feisty\nYumpus(x) ::: x is a yumpus\nSour(x) ::: x is sour\nRompus(x) ::: x is a rompus\nDull(x) ::: x is dull\nWumpus(x) ::: x is a wumpus\nSmall(x) ::: x is small\nNumpus(x) ::: x is a numpus\nMetallic(x) ::: x is metallic\nTumpus(x) ::: x is a tumpus\nFeisty(x) ::: x is feisty\nZumpus(x) ::: x is a zumpus\nFruity(x) ::: x is fruity\nVumpus(x) ::: x is a vumpus\nAngry(x) ::: x is angry\nDumpus(x) ::: x is a dumpus\nCold(x) ::: x is cold\nImpus(x) ::: x is an impus\nPremises:\n∀x (Jompus(x) → Feisty(x)) ::: Jompuses are feisty.\n∀x (Yumpus(x) → Sour(x)) ::: Yumpuses are sour.\n∀x (Yumpus(x) → Rompus(x)) ::: Each yumpus is a rompus.\n∀x (Rompus(x) → Dull(x)) ::: Every rompus is dull.\n∀x (Rompus(x) → Wumpus(x)) ::: Every rompus is a wumpus.\n∀x (Wumpus(x) → Small(x)) ::: Every wumpus is small.\n∀x (Wumpus(x) → Numpus(x)) ::: Wumpuses are numpuses.\n∀x (Numpus(x) → Metallic(x)) ::: Numpuses are metallic.\n∀x (Numpus(x) → Tumpus(x)) ::: Numpuses are tumpuses.\n∀x (Tumpus(x) → ¬Feisty(x)) ::: Each tumpus is not feisty.\n∀x (Tumpus(x) → Zumpus(x)) ::: Tumpuses are zumpuses.\n∀x (Zumpus(x) → Fruity(x)) ::: Zumpuses are fruity.\n∀x (Zumpus(x) → Vumpus(x)) ::: Every zumpus is a vumpus.\n∀x (Vumpus(x) → Angry(x)) ::: Vumpuses are angry.\n∀x (Vumpus(x) → Dumpus(x)) ::: Vumpuses are dumpuses.\n∀x (Dumpus(x) → Cold(x)) ::: Each dumpus is cold.\n∀x (Dumpus(x) → Impus(x)) ::: Dumpuses are impuses.\nYumpus(rex) ::: Rex is a yumpus.\nConclusion:\n¬Feisty(rex) ::: Rex is not feisty.\n------"
    ]
  },
  {
    "id": "ProntoQA_429",
    "context": "Every tumpus is earthy. Each tumpus is a jompus. Every jompus is spicy. Jompuses are impuses. Impuses are red. Each impus is a rompus. Numpuses are not shy. Every rompus is not amenable. Rompuses are zumpuses. Zumpuses are cold. Zumpuses are vumpuses. Vumpuses are metallic. Vumpuses are wumpuses. Wumpuses are shy. Wumpuses are yumpuses. Yumpuses are small. Yumpuses are dumpuses. Wren is an impus.",
    "question": "Is the following statement true or false? Wren is not shy.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nTumpus(x) ::: x is a tumpus\nEarthy(x) ::: x is earthy\nJompus(x) ::: x is a jompus\nSpicy(x) ::: x is spicy\nImpus(x) ::: x is an impus\nRed(x) ::: x is red\nRompus(x) ::: x is a rompus\nNumpus(x) ::: x is a numpus\nShy(x) ::: x is shy\nAmenable(x) ::: x is amenable\nZumpus(x) ::: x is a zumpus\nCold(x) ::: x is cold\nVumpus(x) ::: x is a vumpus\nMetallic(x) ::: x is metallic\nWumpus(x) ::: x is a wumpus\nShy(x) ::: x is shy\nYumpus(x) ::: x is a yumpus\nSmall(x) ::: x is small\nDumpus(x) ::: x is a dumpus\nPremises:\n∀x (Tumpus(x) → Earthy(x)) ::: Every tumpus is earthy.\n∀x (Tumpus(x) → Jompus(x)) ::: Each tumpus is a jompus.\n∀x (Jompus(x) → Spicy(x)) ::: Every jompus is spicy.\n∀x (Jompus(x) → Impus(x)) ::: Jompuses are impuses.\n∀x (Impus(x) → Red(x)) ::: Impuses are red.\n∀x (Impus(x) → Rompus(x)) ::: Each impus is a rompus.\n∀x (Numpus(x) → ¬Shy(x)) ::: Numpuses are not shy.\n∀x (Rompus(x) → ¬Amenable(x)) ::: Every rompus is not amenable.\n∀x (Rompus(x) → Zumpus(x)) ::: Rompuses are zumpuses.\n∀x (Zumpus(x) → Cold(x)) ::: Zumpuses are cold.\n∀x (Zumpus(x) → Vumpus(x)) ::: Zumpuses are vumpuses.\n∀x (Vumpus(x) → Metallic(x)) ::: Vumpuses are metallic.\n∀x (Vumpus(x) → Wumpus(x)) ::: Vumpuses are wumpuses.\n∀x (Wumpus(x) → Shy(x)) ::: Wumpuses are shy.\n∀x (Wumpus(x) → Yumpus(x)) ::: Wumpuses are yumpuses.\n∀x (Yumpus(x) → Small(x)) ::: Yumpuses are small.\n∀x (Yumpus(x) → Dumpus(x)) ::: Yumpuses are dumpuses.\nImpus(wren) ::: Wren is an impus.\nConclusion:\n¬Shy(wren) ::: Wren is not shy.\n------"
    ]
  },
  {
    "id": "ProntoQA_430",
    "context": "Zumpuses are transparent. Every zumpus is a tumpus. Each vumpus is shy. Tumpuses are red. Tumpuses are numpuses. Each numpus is floral. Each numpus is a yumpus. Yumpuses are not bright. Yumpuses are jompuses. Jompuses are mean. Jompuses are rompuses. Each rompus is not shy. Each rompus is an impus. Impuses are small. Impuses are wumpuses. Wumpuses are luminous. Wumpuses are dumpuses. Wren is a tumpus.",
    "question": "Is the following statement true or false? Wren is not shy.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nZumpus(x) ::: x is a zumpus\nTransparent(x) ::: x is transparent\nTumpus(x) ::: x is a tumpus\nShy(x) ::: x is shy\nRed(x) ::: x is red\nNumpus(x) ::: x is a numpus\nFloral(x) ::: x is floral\nYumpus(x) ::: x is a yumpus\nBright(x) ::: x is bright\nJompus(x) ::: x is a jompus\nMean(x) ::: x is mean\nRompus(x) ::: x is a rompus\nShy(x) ::: x is shy\nImpus(x) ::: x is an impus\nSmall(x) ::: x is small\nWumpus(x) ::: x is a wumpus\nLuminous(x) ::: x is luminous\nDumpus(x) ::: x is a dumpus\nPremises:\n∀x (Zumpus(x) → Transparent(x)) ::: Zumpuses are transparent.\n∀x (Zumpus(x) → Tumpus(x)) ::: Every zumpus is a tumpus.\n∀x (Vumpus(x) → Shy(x)) ::: Each vumpus is shy.\n∀x (Tumpus(x) → Red(x)) ::: Tumpuses are red.\n∀x (Tumpus(x) → Numpus(x)) ::: Tumpuses are numpuses.\n∀x (Numpus(x) → Floral(x)) ::: Each numpus is floral.\n∀x (Numpus(x) → Yumpus(x)) ::: Each numpus is a yumpus.\n∀x (Yumpus(x) → ¬Bright(x)) ::: Yumpuses are not bright.\n∀x (Yumpus(x) → Jompus(x)) ::: Yumpuses are jompuses.\n∀x (Jompus(x) → Mean(x)) ::: Jompuses are mean.\n∀x (Jompus(x) → Rompus(x)) ::: Jompuses are rompuses.\n∀x (Rompus(x) → ¬Shy(x)) ::: Each rompus is not shy.\n∀x (Rompus(x) → Impus(x)) ::: Each rompus is an impus.\n∀x (Impus(x) → Small(x)) ::: Impuses are small.\n∀x (Impus(x) → Wumpus(x)) ::: Impuses are wumpuses.\n∀x (Wumpus(x) → Luminous(x)) ::: Wumpuses are luminous.\n∀x (Wumpus(x) → Dumpus(x)) ::: Wumpuses are dumpuses.\nTumpus(wren) ::: Wren is a tumpus.\nConclusion:\n¬Shy(wren) ::: Wren is not shy.\n------"
    ]
  },
  {
    "id": "ProntoQA_431",
    "context": "Impuses are transparent. Each impus is a jompus. Jompuses are not spicy. Jompuses are zumpuses. Every zumpus is hot. Each zumpus is a dumpus. Every dumpus is floral. Dumpuses are wumpuses. Wumpuses are liquid. Wumpuses are numpuses. Numpuses are not nervous. Each vumpus is not large. Every numpus is a rompus. Rompuses are large. Rompuses are yumpuses. Each yumpus is dull. Yumpuses are tumpuses. Rex is a zumpus.",
    "question": "Is the following statement true or false? Rex is large.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nImpus(x) ::: x is an impus\nTransparent(x) ::: x is transparent\nJompus(x) ::: x is a jompus\nSpicy(x) ::: x is spicy\nZumpus(x) ::: x is a zumpus\nHot(x) ::: x is hot\nDumpus(x) ::: x is a dumpus\nFloral(x) ::: x is floral\nWumpus(x) ::: x is a wumpus\nLiquid(x) ::: x is liquid\nNumpus(x) ::: x is a numpus\nNervous(x) ::: x is nervous\nLarge(x) ::: x is large\nRompus(x) ::: x is a rompus\nYumpus(x) ::: x is a yumpus\nDull(x) ::: x is dull\nTumpus(x) ::: x is a tumpus\nPremises:\n∀x (Impus(x) → Transparent(x)) ::: Impuses are transparent.\n∀x (Impus(x) → Jompus(x)) ::: Each impus is a jompus.\n∀x (Jompus(x) → ¬Spicy(x)) ::: Jompuses are not spicy.\n∀x (Zumpus(x) → Hot(x)) ::: Jompuses are zumpuses.\n∀x (Zumpus(x) → Dumpus(x)) ::: Every zumpus is a dumpus.\n∀x (Dumpus(x) → Floral(x)) ::: Every dumpus is floral.\n∀x (Dumpus(x) → Wumpus(x)) ::: Dumpuses are wumpuses.\n∀x (Wumpus(x) → Liquid(x)) ::: Wumpuses are liquid.\n∀x (Wumpus(x) → Numpus(x)) ::: Wumpuses are numpuses.\n∀x (Numpus(x) → ¬Nervous(x)) ::: Numpuses are not nervous.\n∀x (Vumpus(x) → ¬Large(x)) ::: Each vumpus is not large.\n∀x (Numpus(x) → Rompus(x)) ::: Every numpus is a rompus.\n∀x (Rompus(x) → Large(x)) ::: Rompuses are large.\n∀x (Rompus(x) → Yumpus(x)) ::: Rompuses are yumpuses.\n∀x (Yumpus(x) → Dull(x)) ::: Yumpuses are dull.\n∀x (Yumpus(x) → Tumpus(x)) ::: Yumpuses are tumpuses.\nZumpus(rex) ::: Rex is a zumpus.\nConclusion:\nLarge(rex) ::: Rex is large.\n------"
    ]
  },
  {
    "id": "ProntoQA_432",
    "context": "Yumpuses are hot. Yumpuses are dumpuses. Each dumpus is not dull. Each wumpus is not red. Dumpuses are impuses. Each impus is large. Impuses are tumpuses. Every tumpus is amenable. Tumpuses are vumpuses. Vumpuses are red. Every vumpus is a jompus. Every jompus is happy. Every jompus is a numpus. Sally is a yumpus.",
    "question": "Is the following statement true or false? Sally is not red.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant.lpg\n------"
    ]
  },
  {
    "id": "ProntoQA_433",
    "context": "Yumpuses are floral. Yumpuses are dumpuses. Dumpuses are sweet. Every dumpus is a jompus. Each jompus is luminous. Jompuses are tumpuses. Tumpuses are blue. Every tumpus is a wumpus. Every wumpus is hot. Wumpuses are zumpuses. Every zumpus is large. Numpuses are not hot. Zumpuses are vumpuses. Vumpuses are not opaque. Every vumpus is a rompus. Each rompus is bright. Every rompus is an impus. Wren is a yumpus.",
    "question": "Is the following statement true or false? Wren is not hot.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "------\n### Predicates:\nYumpus(x) ::: x is a yumpus\nFloral(x) ::: x is floral\nDumpus(x) ::: x is a dumpus\nSweet(x) ::: x is sweet\nJompus(x) ::: x is a jompus\nLuminous(x) ::: x is luminous\nTumpus(x) ::: x is a tumpus\nBlue(x) ::: x is blue\nWumpus(x) ::: x is a wumpus\nHot(x) ::: x is hot\nZumpus(x) ::: x is a zumpus\nLarge(x) ::: x is large\nNumpus(x) ::: x is a numpus\nOpaque(x) ::: x is opaque\nRompus(x) ::: x is a rompus\nBright(x) ::: x is bright\nImpus(x) ::: x is an impus\nPremises:\n∀x (Yumpus(x) → Floral(x)) ::: Yumpuses are floral.\n∀x (Yumpus(x) → Dumpus(x)) ::: Yumpuses are dumpuses.\n∀x (Dumpus(x) → Sweet(x)) ::: Dumpuses are sweet.\n∀x (Dumpus(x) → Jompus(x)) ::: Every dumpus is a jompus.\n∀x (Jompus(x) → Luminous(x)) ::: Each jompus is luminous.\n∀x (Jompus(x) → Tumpus(x)) ::: Jompuses are tumpuses.\n∀x (Tumpus(x) → Blue(x)) ::: Tumpuses are blue.\n∀x (Tumpus(x) → Wumpus(x)) ::: Every tumpus is a wumpus.\n∀x (Wumpus(x) → Hot(x)) ::: Every wumpus is hot.\n∀x (Wumpus(x) → Zumpus(x)) ::: Wumpuses are zumpuses.\n∀x (Zumpus(x) → Large(x)) ::: Every zumpus is large.\n∀x (Numpus(x) → ¬Hot(x)) ::: Numpuses are not hot.\n∀x (Zumpus(x) → Vumpus(x)) ::: Zumpuses are vumpuses.\n∀x (Vumpus(x) → ¬Opaque(x)) ::: Vumpuses are not opaque.\n∀x (Vumpus(x) → Rompus(x)) ::: Every vumpus is a rompus.\n∀x (Rompus(x) → Bright(x)) ::: Each rompus is bright.\n∀x (Rompus(x) → Impus(x)) ::: Every rompus is an impus.\nYumpus(wren) ::: Wren is a yumpus.\nConclusion:\n¬Hot(wren) ::: Wren is not hot.\n------"
    ]
  },
  {
    "id": "ProntoQA_434",
    "context": "Jompuses are earthy. Jompuses are wumpuses. Wumpuses are not liquid. Wumpuses are yumpuses. Every yumpus is orange. Impuses are not small. Each yumpus is a dumpus. Dumpuses are transparent. Dumpuses are tumpuses. Tumpuses are small. Each tumpus is a numpus. Every numpus is not bright. Numpuses are rompuses. Every rompus is angry. Rompuses are vumpuses. Vumpuses are nervous. Every vumpus is a zumpus. Max is a jompus.",
    "question": "Is the following statement true or false? Max is small.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nJompus(x) ::: x is a jompus\nEarthy(x) ::: x is earthy\nWumpus(x) ::: x is a wumpus\nLiquid(x) ::: x is liquid\nYumpus(x) ::: x is a yumpus\nOrange(x) ::: x is orange\nImpus(x) ::: x is an impus\nSmall(x) ::: x is small\nDumpus(x) ::: x is a dumpus\nTransparent(x) ::: x is transparent\nTumpus(x) ::: x is a tumpus\nSmall(x) ::: x is small\nNumpus(x) ::: x is a numpus\nBright(x) ::: x is bright\nRompus(x) ::: x is a rompus\nAngry(x) ::: x is angry\nVumpus(x) ::: x is a vumpus\nNervous(x) ::: x is nervous\nZumpus(x) ::: x is a zumpus\nMax(x) ::: x is Max\nPremises:\n∀x (Jompus(x) → Earthy(x)) ::: Jompuses are earthy.\n∀x (Jompus(x) → Wumpus(x)) ::: Jompuses are wumpuses.\n∀x (Wumpus(x) → ¬Liquid(x)) ::: Wumpuses are not liquid.\n∀x (Wumpus(x) → Yumpus(x)) ::: Wumpuses are yumpuses.\n∀x (Yumpus(x) → Orange(x)) ::: Every yumpus is orange.\n∀x (Impus(x) → ¬Small(x)) ::: Impuses are not small.\n∀x (Yumpus(x) → Dumpus(x)) ::: Each yumpus is a dumpus.\n∀x (Dumpus(x) → Transparent(x)) ::: Dumpuses are transparent.\n∀x (Dumpus(x) → Tumpus(x)) ::: Dumpuses are tumpuses.\n∀x (Tumpus(x) → Small(x)) ::: Tumpuses are small.\n∀x (Tumpus(x) → Numpus(x)) ::: Each tumpus is a numpus.\n∀x (Numpus(x) → ¬Bright(x)) ::: Every numpus is not bright.\n∀x (Numpus(x) → Rompus(x)) ::: Numpuses are rompuses.\n∀x (Rompus(x) → Angry(x)) ::: Every rompus is angry.\n∀x (Rompus(x) → Vumpus(x)) ::: Rompuses are vumpuses.\n∀x (Vumpus(x) → Nervous(x)) ::: Vumpuses are nervous.\n∀x (Vumpus(x) → Zumpus(x)) ::: Every vumpus is a zumpus.\nJompus(max) ::: Max is a jompus.\nConclusion:\nSmall(max) ::: Max is small.\n------"
    ]
  },
  {
    "id": "ProntoQA_435",
    "context": "Every impus is happy. Each impus is a yumpus. Every yumpus is not floral. Wumpuses are opaque. Yumpuses are tumpuses. Each tumpus is liquid. Every tumpus is a jompus. Jompuses are not cold. Jompuses are dumpuses. Each dumpus is mean. Every dumpus is a rompus. Rompuses are not opaque. Every rompus is a zumpus. Every zumpus is dull. Zumpuses are numpuses. Numpuses are small. Numpuses are vumpuses. Rex is a yumpus.",
    "question": "Is the following statement true or false? Rex is not opaque.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nImpus(x) ::: x is an impus\nHappy(x) ::: x is happy\nYumpus(x) ::: x is a yumpus\nFloral(x) ::: x is floral\nWumpus(x) ::: x is a wumpus\nOpaque(x) ::: x is opaque\nTumpus(x) ::: x is a tumpus\nLiquid(x) ::: x is liquid\nJompus(x) ::: x is a jompus\nCold(x) ::: x is cold\nDumpus(x) ::: x is a dumpus\nMean(x) ::: x is mean\nRompus(x) ::: x is a rompus\nZumpus(x) ::: x is a zumpus\nDull(x) ::: x is dull\nNumpus(x) ::: x is a numpus\nSmall(x) ::: x is small\nVumpus(x) ::: x is a vumpus\nPremises:\n∀x (Impus(x) → Happy(x)) ::: Every impus is happy.\n∀x (Impus(x) → Yumpus(x)) ::: Each impus is a yumpus.\n∀x (Yumpus(x) → ¬Floral(x)) ::: Every yumpus is not floral.\n∀x (Wumpus(x) → Opaque(x)) ::: Wumpuses are opaque.\n∀x (Yumpus(x) → Tumpus(x)) ::: Yumpuses are tumpuses.\n∀x (Tumpus(x) → Liquid(x)) ::: Each tumpus is liquid.\n∀x (Tumpus(x) → Jompus(x)) ::: Every tumpus is a jompus.\n∀x (Jompus(x) → ¬Cold(x)) ::: Jompuses are not cold.\n∀x (Jompus(x) → Dumpus(x)) ::: Jompuses are dumpuses.\n∀x (Dumpus(x) → Mean(x)) ::: Each dumpus is mean.\n∀x (Dumpus(x) → Rompus(x)) ::: Every dumpus is a rompus.\n∀x (Rompus(x) → ¬Opaque(x)) ::: Rompuses are not opaque.\n∀x (Rompus(x) → Zumpus(x)) ::: Every rompus is a zumpus.\n∀x (Zumpus(x) → Dull(x)) ::: Every zumpus is dull.\n∀x (Zumpus(x) → Numpus(x)) ::: Zumpuses are numpuses.\n∀x (Numpus(x) → Small(x)) ::: Numpuses are small.\n∀x (Numpus(x) → Vumpus(x)) ::: Numpuses are vumpuses.\nYumpus(rex) ::: Rex is a yumpus.\nConclusion:\n¬Opaque(rex) ::: Rex is not opaque.\n------"
    ]
  },
  {
    "id": "ProntoQA_436",
    "context": "Every impus is not wooden. Impuses are rompuses. Rompuses are dull. Rompuses are jompuses. Every jompus is hot. Jompuses are vumpuses. Vumpuses are brown. Vumpuses are dumpuses. Each dumpus is not small. Dumpuses are yumpuses. Tumpuses are not floral. Every yumpus is floral. Each yumpus is a zumpus. Zumpuses are not happy. Every zumpus is a wumpus. Every wumpus is not mean. Wumpuses are numpuses. Max is a rompus.",
    "question": "Is the following statement true or false? Max is floral.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nImpus(x) ::: x is an impus\nWooden(x) ::: x is wooden\nRompus(x) ::: x is a rompus\nDull(x) ::: x is dull\nJompus(x) ::: x is a jompus\nHot(x) ::: x is hot\nVumpus(x) ::: x is a vumpus\nBrown(x) ::: x is brown\nDumpus(x) ::: x is a dumpus\nSmall(x) ::: x is small\nYumpus(x) ::: x is a yumpus\nFloral(x) ::: x is floral\nZumpus(x) ::: x is a zumpus\nHappy(x) ::: x is happy\nWumpus(x) ::: x is a wumpus\nMean(x) ::: x is mean\nNumpus(x) ::: x is a numpus\nPremises:\n∀x (Impus(x) → ¬Wooden(x)) ::: Every impus is not wooden.\n∀x (Impus(x) → Rompus(x)) ::: Impuses are rompuses.\n∀x (Rompus(x) → Dull(x)) ::: Rompuses are dull.\n∀x (Jompus(x) → Hot(x)) ::: Rompuses are jompuses.\n∀x (Jompus(x) → Vumpus(x)) ::: Every jompus is hot.\n∀x (Vumpus(x) → Brown(x)) ::: Vumpuses are brown.\n∀x (Vumpus(x) → Dumpus(x)) ::: Vumpuses are dumpuses.\n∀x (Dumpus(x) → ¬Small(x)) ::: Each dumpus is not small.\n∀x (Dumpus(x) → Yumpus(x)) ::: Dumpuses are yumpuses.\n∀x (Tumpus(x) → ¬Floral(x)) ::: Tumpuses are not floral.\n∀x (Yumpus(x) → Floral(x)) ::: Every yumpus is floral.\n∀x (Yumpus(x) → Zumpus(x)) ::: Each yumpus is a zumpus.\n∀x (Zumpus(x) → ¬Happy(x)) ::: Zumpuses are not happy.\n∀x (Wumpus(x) → Numpus(x)) ::: Every wumpus is a numpus.\nRompus(max) ::: Max is a rompus.\nConclusion:\nFloral(max) ::: Max is floral.\n------"
    ]
  },
  {
    "id": "ProntoQA_437",
    "context": "Every tumpus is cold. Tumpuses are impuses. Impuses are bright. Impuses are yumpuses. Yumpuses are spicy. Every rompus is earthy. Each yumpus is a wumpus. Wumpuses are small. Wumpuses are jompuses. Jompuses are orange. Jompuses are vumpuses. Each vumpus is not earthy. Each vumpus is a dumpus. Fae is an impus.",
    "question": "Is the following statement true or false? Fae is earthy.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "------\nAssistant:\nPredicates:\nTumpus(x) ::: x is a tumpus\nCold(x) ::: x is cold\nImpus(x) ::: x is an impus\nBright(x) ::: x is bright\nYumpus(x) ::: x is a yumpus\nSpicy(x) ::: x is spicy\nRompus(x) ::: x is a rompus\nEarthy(x) ::: x is earthy\nWumpus(x) ::: x is a wumpus\nSmall(x) ::: x is small\nJompus(x) ::: x is a jompus\nOrange(x) ::: x is orange\nVumpus(x) ::: x is a vumpus\nDumpus(x) ::: x is a dumpus\nFae(x) ::: x is Fae\nPremises:\n∀x (Tumpus(x) → Cold(x)) ::: Every tumpus is cold.\n∀x (Tumpus(x) → Impus(x)) ::: Tumpuses are impuses.\n∀x (Impus(x) → Bright(x)) ::: Impuses are bright.\n∀x (Impus(x) → Yumpus(x)) ::: Impuses are yumpuses.\n∀x (Yumpus(x) → Spicy(x)) ::: Yumpuses are spicy.\n∀x (Rompus(x) → Earthy(x)) ::: Every rompus is earthy.\n∀x (Yumpus(x) → Wumpus(x)) ::: Each yumpus is a wumpus.\n∀x (Wumpus(x) → Small(x)) ::: Wumpuses are small.\n∀x (Wumpus(x) → Jompus(x)) ::: Wumpuses are jompuses.\n∀x (Jompus(x) → Orange(x)) ::: Jompuses are orange.\n∀x (Jompus(x) → Vumpus(x)) ::: Jompuses are vumpuses.\n∀x (Vumpus(x) → ¬Earthy(x)) ::: Each vumpus is not earthy.\n∀x (Vumpus(x) → Dumpus(x)) ::: Each vumpus is a dumpus.\nImpus(fae) ::: Fae is an impus.\nConclusion:\nEarthy(fae) ::: Fae is earthy.\n------"
    ]
  },
  {
    "id": "ProntoQA_438",
    "context": "Zumpuses are cold. Every tumpus is small. Zumpuses are wumpuses. Wumpuses are orange. Wumpuses are dumpuses. Every dumpus is not sweet. Each dumpus is a vumpus. Each vumpus is liquid. Every vumpus is a numpus. Numpuses are floral. Numpuses are rompuses. Each rompus is happy. Rompuses are impuses. Impuses are not small. Impuses are yumpuses. Yumpuses are not dull. Yumpuses are jompuses. Sam is a dumpus.",
    "question": "Is the following statement true or false? Sam is small.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nZumpus(x) ::: x is a zumpus\nCold(x) ::: x is cold\nTumpus(x) ::: x is a tumpus\nSmall(x) ::: x is small\nWumpus(x) ::: x is a wumpus\nOrange(x) ::: x is orange\nDumpus(x) ::: x is a dumpus\nSweet(x) ::: x is sweet\nVumpus(x) ::: x is a vumpus\nLiquid(x) ::: x is liquid\nNumpus(x) ::: x is a numpus\nFloral(x) ::: x is floral\nRompus(x) ::: x is a rompus\nHappy(x) ::: x is happy\nImpus(x) ::: x is an impus\nSmall(x) ::: x is small\nYumpus(x) ::: x is a yumpus\nDull(x) ::: x is dull\nJompus(x) ::: x is a jompus\nPremises:\n∀x (Zumpus(x) → Cold(x)) ::: Zumpuses are cold.\n∀x (Tumpus(x) → Small(x)) ::: Every tumpus is small.\n∀x (Zumpus(x) → Wumpus(x)) ::: Zumpuses are wumpuses.\n∀x (Wumpus(x) → Orange(x)) ::: Wumpuses are orange.\n∀x (Wumpus(x) → Dumpus(x)) ::: Wumpuses are dumpuses.\n∀x (Dumpus(x) → ¬Sweet(x)) ::: Every dumpus is not sweet.\n∀x (Dumpus(x) → Vumpus(x)) ::: Each dumpus is a vumpus.\n∀x (Vumpus(x) → Liquid(x)) ::: Each vumpus is liquid.\n∀x (Vumpus(x) → Numpus(x)) ::: Every vumpus is a numpus.\n∀x (Numpus(x) → Floral(x)) ::: Numpuses are floral.\n∀x (Numpus(x) → Rompus(x)) ::: Numpuses are rompuses.\n∀x (Rompus(x) → Happy(x)) ::: Each rompus is happy.\n∀x (Rompus(x) → Impus(x)) ::: Rompuses are impuses.\n∀x (Impus(x) → ¬Small(x)) ::: Impuses are not small.\n∀x (Impus(x) → Yumpus(x)) ::: Impuses are yumpuses.\n∀x (Yumpus(x) → ¬Dull(x)) ::: Yumpuses are not dull.\n∀x (Yumpus(x) → Jompus(x)) ::: Yumpuses are jompuses.\nDumpus(sam) ::: Sam is a dumpus.\nConclusion:\nSmall(sam) ::: Sam is small.\n------"
    ]
  },
  {
    "id": "ProntoQA_439",
    "context": "Each tumpus is orange. Rompuses are not temperate. Rompuses are wumpuses. Wumpuses are fruity. Every wumpus is a yumpus. Yumpuses are happy. Yumpuses are vumpuses. Each vumpus is transparent. Each vumpus is a zumpus. Every zumpus is amenable. Every zumpus is a numpus. Every numpus is not orange. Numpuses are dumpuses. Each dumpus is metallic. Every dumpus is a jompus. Sally is a wumpus.",
    "question": "Is the following statement true or false? Sally is not orange.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nTumpus(x) ::: x is a tumpus\nOrange(x) ::: x is orange\nRompus(x) ::: x is a rompus\nTemperate(x) ::: x is temperate\nWumpus(x) ::: x is a wumpus\nFruity(x) ::: x is fruity\nYumpus(x) ::: x is a yumpus\nHappy(x) ::: x is happy\nVumpus(x) ::: x is a vumpus\nTransparent(x) ::: x is transparent\nZumpus(x) ::: x is a zumpus\nAmenable(x) ::: x is amenable\nNumpus(x) ::: x is a numpus\nDumpus(x) ::: x is a dumpus\nMetallic(x) ::: x is metallic\nJompus(x) ::: x is a jompus\nPremises:\n∀x (Tumpus(x) → Orange(x)) ::: Each tumpus is orange.\n∀x (Rompus(x) → ¬Temperate(x)) ::: Rompuses are not temperate.\n∀x (Rompus(x) → Wumpus(x)) ::: Rompuses are wumpuses.\n∀x (Wumpus(x) → Fruity(x)) ::: Wumpuses are fruity.\n∀x (Wumpus(x) → Yumpus(x)) ::: Every wumpus is a yumpus.\n∀x (Yumpus(x) → Happy(x)) ::: Yumpuses are happy.\n∀x (Yumpus(x) → Vumpus(x)) ::: Yumpuses are vumpuses.\n∀x (Vumpus(x) → Transparent(x)) ::: Each vumpus is transparent.\n∀x (Vumpus(x) → Zumpus(x)) ::: Each vumpus is a zumpus.\n∀x (Zumpus(x) → Amenable(x)) ::: Every zumpus is amenable.\n∀x (Zumpus(x) → Numpus(x)) ::: Every zumpus is a numpus.\n∀x (Numpus(x) → ¬Orange(x)) ::: Every numpus is not orange.\n∀x (Numpus(x) → Dumpus(x)) ::: Numpuses are dumpuses.\n∀x (Dumpus(x) → Metallic(x)) ::: Each dumpus is metallic.\n∀x (Dumpus(x) → Jompus(x)) ::: Every dumpus is a jompus.\nWumpus(sally) ::: Sally is a wumpus.\nConclusion:\n¬Orange(sally) ::: Sally is not orange.\n------"
    ]
  },
  {
    "id": "ProntoQA_440",
    "context": "Rompuses are fruity. Rompuses are wumpuses. Wumpuses are dull. Wumpuses are impuses. Every impus is wooden. Every impus is a vumpus. Every vumpus is not mean. Every vumpus is a jompus. Every jompus is large. Every jompus is a tumpus. Tumpuses are cold. Tumpuses are numpuses. Each numpus is not transparent. Every numpus is a yumpus. Yumpuses are nervous. Each yumpus is a dumpus. Every zumpus is not cold. Stella is a wumpus.",
    "question": "Is the following statement true or false? Stella is cold.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nRompus(x) ::: x is a rompus\nFruity(x) ::: x is fruity\nWumpus(x) ::: x is a wumpus\nDull(x) ::: x is dull\nImpus(x) ::: x is an impus\nWooden(x) ::: x is wooden\nVumpus(x) ::: x is a vumpus\nMean(x) ::: x is mean\nJompus(x) ::: x is a jompus\nLarge(x) ::: x is large\nTumpus(x) ::: x is a tumpus\nCold(x) ::: x is cold\nNumpus(x) ::: x is a numpus\nTransparent(x) ::: x is transparent\nYumpus(x) ::: x is a yumpus\nNervous(x) ::: x is nervous\nDumpus(x) ::: x is a dumpus\nZumpus(x) ::: x is a zumpus\nPremises:\n∀x (Rompus(x) → Fruity(x)) ::: Rompuses are fruity.\n∀x (Wumpus(x) → Dull(x)) ::: Wumpuses are dull.\n∀x (Impus(x) → Wooden(x)) ::: Every impus is wooden.\n∀x (Impus(x) → Vumpus(x)) ::: Every impus is a vumpus.\n∀x (Vumpus(x) → ¬Mean(x)) ::: Every vumpus is not mean.\n∀x (Vumpus(x) → Jompus(x)) ::: Every vumpus is a jompus.\n∀x (Jompus(x) → Large(x)) ::: Every jompus is large.\n∀x (Jompus(x) → Tumpus(x)) ::: Every jompus is a tumpus.\n∀x (Tumpus(x) → Cold(x)) ::: Tumpuses are cold.\n∀x (Tumpus(x) → Numpus(x)) ::: Tumpuses are numpuses.\n∀x (Numpus(x) → ¬Transparent(x)) ::: Each numpus is not transparent.\n∀x (Numpus(x) → Yumpus(x)) ::: Every numpus is a yumpus.\n∀x (Yumpus(x) → Nervous(x)) ::: Yumpuses are nervous.\n∀x (Yumpus(x) → Dumpus(x)) ::: Each yumpus is a dumpus.\n∀x (Zumpus(x) → ¬Cold(x)) ::: Every zumpus is not cold.\nWumpus(stella) ::: Stella is a wumpus.\nConclusion:\nCold(stella) ::: Stella is cold.\n------"
    ]
  },
  {
    "id": "ProntoQA_441",
    "context": "Numpuses are aggressive. Yumpuses are small. Every numpus is an impus. Impuses are shy. Impuses are wumpuses. Wumpuses are red. Wumpuses are rompuses. Each rompus is earthy. Every rompus is a dumpus. Each dumpus is transparent. Dumpuses are vumpuses. Every vumpus is not small. Each vumpus is a tumpus. Tumpuses are metallic. Each tumpus is a zumpus. Zumpuses are dull. Each zumpus is a jompus. Fae is an impus.",
    "question": "Is the following statement true or false? Fae is small.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nNumpus(x) ::: x is a numpus\nAggressive(x) ::: x is aggressive\nYumpus(x) ::: x is a yumpus\nSmall(x) ::: x is small\nImpus(x) ::: x is an impus\nShy(x) ::: x is shy\nWumpus(x) ::: x is a wumpus\nRed(x) ::: x is red\nRompus(x) ::: x is a rompus\nEarthy(x) ::: x is earthy\nDumpus(x) ::: x is a dumpus\nTransparent(x) ::: x is transparent\nVumpus(x) ::: x is a vumpus\nSmall(x) ::: x is small\nTumpus(x) ::: x is a tumpus\nMetallic(x) ::: x is metallic\nZumpus(x) ::: x is a zumpus\nDull(x) ::: x is dull\nJompus(x) ::: x is a jompus\nFae(x) ::: x is Fae\nPremises:\n∀x (Numpus(x) → Aggressive(x)) ::: Numpuses are aggressive.\n∀x (Yumpus(x) → Small(x)) ::: Yumpuses are small.\n∀x (Numpus(x) → Impus(x)) ::: Every numpus is an impus.\n∀x (Impus(x) → Shy(x)) ::: Impuses are shy.\n∀x (Impus(x) → Wumpus(x)) ::: Impuses are wumpuses.\n∀x (Wumpus(x) → Red(x)) ::: Wumpuses are red.\n∀x (Wumpus(x) → Rompus(x)) ::: Wumpuses are rompuses.\n∀x (Rompus(x) → Earthy(x)) ::: Each rompus is earthy.\n∀x (Rompus(x) → Dumpus(x)) ::: Each rompus is a dumpus.\n∀x (Dumpus(x) → Transparent(x)) ::: Each dumpus is transparent.\n∀x (Dumpus(x) → Vumpus(x)) ::: Dumpuses are vumpuses.\n∀x (Vumpus(x) → ¬Small(x)) ::: Every vumpus is not small.\n∀x (Vumpus(x) → Tumpus(x)) ::: Each vumpus is a tumpus.\n∀x (Tumpus(x) → Metallic(x)) ::: Each tumpus is metallic.\n∀x (Tumpus(x) → Zumpus(x)) ::: Each tumpus is a zumpus.\n∀x (Zumpus(x) → Dull(x)) ::: Zumpuses are dull.\n∀x (Zumpus(x) → Jompus(x)) ::: Each zumpus is a jompus.\nImpus(fae) ::: Fae is an impus.\nConclusion:\nSmall(fae) ::: Fae is small.\n------"
    ]
  },
  {
    "id": "ProntoQA_442",
    "context": "Each numpus is bright. Numpuses are yumpuses. Yumpuses are not kind. Each yumpus is an impus. Every impus is not luminous. Each impus is a vumpus. Each vumpus is transparent. Vumpuses are tumpuses. Tumpuses are not floral. Tumpuses are rompuses. Rompuses are not large. Rompuses are zumpuses. Wumpuses are large. Each zumpus is not cold. Zumpuses are dumpuses. Dumpuses are not shy. Every dumpus is a jompus. Alex is a yumpus.",
    "question": "Is the following statement true or false? Alex is not large.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nNumpus(x) ::: x is a numpus\nBright(x) ::: x is bright\nYumpus(x) ::: x is a yumpus\nKind(x) ::: x is kind\nImpus(x) ::: x is an impus\nLuminous(x) ::: x is luminous\nVumpus(x) ::: x is a vumpus\nTransparent(x) ::: x is transparent\nTumpus(x) ::: x is a tumpus\nFloral(x) ::: x is floral\nRompus(x) ::: x is a rompus\nLarge(x) ::: x is large\nZumpus(x) ::: x is a zumpus\nCold(x) ::: x is cold\nDumpus(x) ::: x is a dumpus\nShy(x) ::: x is shy\nJompus(x) ::: x is a jompus\nPremises:\n∀x (Numpus(x) → Bright(x)) ::: Each numpus is bright.\n∀x (Numpus(x) → Yumpus(x)) ::: Numpuses are yumpuses.\n∀x (Yumpus(x) → ¬Kind(x)) ::: Yumpuses are not kind.\n∀x (Yumpus(x) → Impus(x)) ::: Each yumpus is an impus.\n∀x (Impus(x) → ¬Luminous(x)) ::: Every impus is not luminous.\n∀x (Impus(x) → Vumpus(x)) ::: Each impus is a vumpus.\n∀x (Vumpus(x) → Transparent(x)) ::: Vumpuses are transparent.\n∀x (Vumpus(x) → Tumpus(x)) ::: Vumpuses are tumpuses.\n∀x (Tumpus(x) → ¬Floral(x)) ::: Tumpuses are not floral.\n∀x (Tumpus(x) → Rompus(x)) ::: Tumpuses are rompuses.\n∀x (Rompus(x) → ¬Large(x)) ::: Rompuses are not large.\n∀x (Rompus(x) → Zumpus(x)) ::: Rompuses are zumpuses.\n∀x (Wumpus(x) → Large(x)) ::: Wumpuses are large.\n∀x (Zumpus(x) → ¬Cold(x)) ::: Zumpuses are not cold.\n∀x (Zumpus(x) → Dumpus(x)) ::: Zumpuses are dumpuses.\n∀x (Dumpus(x) → ¬Shy(x)) ::: Dumpuses are not shy.\n∀x (Dumpus(x) → Jompus(x)) ::: Every dumpus is a jompus.\nYumpus(alex) ::: Alex is a yumpus.\nConclusion:\n¬Large(alex) ::: Alex is not large.\n------"
    ]
  },
  {
    "id": "ProntoQA_443",
    "context": "Numpuses are not metallic. Each yumpus is hot. Yumpuses are dumpuses. Dumpuses are not bright. Every dumpus is a rompus. Every rompus is spicy. Every rompus is a vumpus. Every vumpus is not fruity. Vumpuses are tumpuses. Tumpuses are large. Every tumpus is a wumpus. Every wumpus is not amenable. Every wumpus is a zumpus. Zumpuses are metallic. Every zumpus is an impus. Each impus is not transparent. Every impus is a jompus. Max is a rompus.",
    "question": "Is the following statement true or false? Max is not metallic.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nNumpus(x) ::: x is a numpus\nMetallic(x) ::: x is metallic\nYumpus(x) ::: x is a yumpus\nHot(x) ::: x is hot\nDumpus(x) ::: x is a dumpus\nBright(x) ::: x is bright\nRompus(x) ::: x is a rompus\nSpicy(x) ::: x is spicy\nVumpus(x) ::: x is a vumpus\nFruity(x) ::: x is fruity\nTumpus(x) ::: x is a tumpus\nLarge(x) ::: x is large\nAmenable(x) ::: x is amenable\nZumpus(x) ::: x is a zumpus\nMetallic(x) ::: x is metallic\nImpus(x) ::: x is an impus\nTransparent(x) ::: x is transparent\nJompus(x) ::: x is a jompus\nPremises:\n∀x (Numpus(x) → ¬Metallic(x)) ::: Numpuses are not metallic.\n∀x (Yumpus(x) → Hot(x)) ::: Each yumpus is hot.\n∀x (Yumpus(x) → Dumpus(x)) ::: Yumpuses are dumpuses.\n∀x (Dumpus(x) → ¬Bright(x)) ::: Dumpuses are not bright.\n∀x (Dumpus(x) → Rompus(x)) ::: Every dumpus is a rompus.\n∀x (Rompus(x) → Spicy(x)) ::: Every rompus is spicy.\n∀x (Rompus(x) → Vumpus(x)) ::: Every rompus is a vumpus.\n∀x (Vumpus(x) → ¬Fruity(x)) ::: Every vumpus is not fruity.\n∀x (Vumpus(x) → Tumpus(x)) ::: Vumpuses are tumpuses.\n∀x (Tumpus(x) → Large(x)) ::: Tumpuses are large.\n∀x (Tumpus(x) → Wumpus(x)) ::: Every tumpus is a wumpus.\n∀x (Wumpus(x) → ¬Amenable(x)) ::: Every wumpus is not amenable.\n∀x (Wumpus(x) → Zumpus(x)) ::: Every wumpus is a zumpus.\n∀x (Zumpus(x) → Metallic(x)) ::: Zumpuses are metallic.\n∀x (Zumpus(x) → Impus(x)) ::: Every zumpus is an impus.\n∀x (Impus(x) → ¬Transparent(x)) ::: Each impus is not transparent.\n∀x (Impus(x) → Jompus(x)) ::: Every impus is a jompus.\nRompus(max) ::: Max is a rompus.\nConclusion:\n¬Metallic(max) ::: Max is not metallic.\n------"
    ]
  },
  {
    "id": "ProntoQA_444",
    "context": "Every numpus is bright. Numpuses are zumpuses. Each zumpus is not fruity. Each zumpus is a yumpus. Each yumpus is bitter. Yumpuses are wumpuses. Every wumpus is feisty. Every wumpus is a dumpus. Each dumpus is angry. Each jompus is large. Each dumpus is a vumpus. Every vumpus is not temperate. Vumpuses are tumpuses. Tumpuses are transparent. Each tumpus is an impus. Each impus is not large. Impuses are rompuses. Alex is a wumpus.",
    "question": "Is the following statement true or false? Alex is not large.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nNumpus(x) ::: x is a numpus\nBright(x) ::: x is bright\nZumpus(x) ::: x is a zumpus\nFruity(x) ::: x is fruity\nYumpus(x) ::: x is a yumpus\nBitter(x) ::: x is bitter\nWumpus(x) ::: x is a wumpus\nFeisty(x) ::: x is feisty\nDumpus(x) ::: x is a dumpus\nAngry(x) ::: x is angry\nJompus(x) ::: x is a jompus\nLarge(x) ::: x is large\nVumpus(x) ::: x is a vumpus\nTemperate(x) ::: x is temperate\nTumpus(x) ::: x is a tumpus\nTransparent(x) ::: x is transparent\nImpus(x) ::: x is an impus\nRompus(x) ::: x is a rompus\nPremises:\n∀x (Numpus(x) → Bright(x)) ::: Every numpus is bright.\n∀x (Numpus(x) → Zumpus(x)) ::: Numpuses are zumpuses.\n∀x (Zumpus(x) → ¬Fruity(x)) ::: Each zumpus is not fruity.\n∀x (Zumpus(x) → Yumpus(x)) ::: Each zumpus is a yumpus.\n∀x (Yumpus(x) → Bitter(x)) ::: Each yumpus is bitter.\n∀x (Yumpus(x) → Wumpus(x)) ::: Yumpuses are wumpuses.\n∀x (Wumpus(x) → Feisty(x)) ::: Every wumpus is feisty.\n∀x (Wumpus(x) → Dumpus(x)) ::: Every wumpus is a dumpus.\n∀x (Dumpus(x) → Angry(x)) ::: Each dumpus is angry.\n∀x (Jompus(x) → Large(x)) ::: Each jompus is large.\n∀x (Dumpus(x) → Vumpus(x)) ::: Each dumpus is a vumpus.\n∀x (Vumpus(x) → ¬Temperate(x)) ::: Every vumpus is not temperate.\n∀x (Vumpus(x) → Tumpus(x)) ::: Vumpuses are tumpuses.\n∀x (Tumpus(x) → Transparent(x)) ::: Tumpuses are transparent.\n∀x (Tumpus(x) → Impus(x)) ::: Each tumpus is an impus.\n∀x (Impus(x) → ¬Large(x)) ::: Impuses are not large.\n∀x (Impus(x) → Rompus(x)) ::: Impuses are rompuses.\nWumpus(alex) ::: Alex is a wumpus.\nConclusion:\n¬Large(alex) ::: Alex is not large.\n------"
    ]
  },
  {
    "id": "ProntoQA_445",
    "context": "Yumpuses are transparent. Each yumpus is an impus. Every impus is not bright. Each impus is a zumpus. Zumpuses are not large. Zumpuses are jompuses. Every jompus is floral. Rompuses are not sour. Each jompus is a wumpus. Wumpuses are brown. Wumpuses are dumpuses. Every dumpus is not cold. Every dumpus is a vumpus. Every vumpus is not liquid. Vumpuses are numpuses. Each numpus is sour. Every numpus is a tumpus. Stella is a jompus.",
    "question": "Is the following statement true or false? Stella is sour.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nYumpus(x) ::: x is a yumpus\nTransparent(x) ::: x is transparent\nImpus(x) ::: x is an impus\nBright(x) ::: x is bright\nZumpus(x) ::: x is a zumpus\nLarge(x) ::: x is large\nJompus(x) ::: x is a jompus\nFloral(x) ::: x is floral\nRompus(x) ::: x is a rompus\nSour(x) ::: x is sour\nWumpus(x) ::: x is a wumpus\nBrown(x) ::: x is brown\nDumpus(x) ::: x is a dumpus\nCold(x) ::: x is cold\nVumpus(x) ::: x is a vumpus\nLiquid(x) ::: x is liquid\nNumpus(x) ::: x is a numpus\nSour(x) ::: x is sour\nTumpus(x) ::: x is a tumpus\nStella(x) ::: x is Stella\nPremises:\n∀x (Yumpus(x) → Transparent(x)) ::: Yumpuses are transparent.\n∀x (Yumpus(x) → Impus(x)) ::: Each yumpus is an impus.\n∀x (Impus(x) → ¬Bright(x)) ::: Every impus is not bright.\n∀x (Impus(x) → Zumpus(x)) ::: Each impus is a zumpus.\n∀x (Zumpus(x) → ¬Large(x)) ::: Zumpuses are not large.\n∀x (Zumpus(x) → Jompus(x)) ::: Zumpuses are jompuses.\n∀x (Jompus(x) → Floral(x)) ::: Every jompus is floral.\n∀x (Rompus(x) → ¬Sour(x)) ::: Rompuses are not sour.\n∀x (Jompus(x) → Wumpus(x)) ::: Each jompus is a wumpus.\n∀x (Wumpus(x) → Brown(x)) ::: Wumpuses are brown.\n∀x (Wumpus(x) → Dumpus(x)) ::: Wumpuses are dumpuses.\n∀x (Dumpus(x) → ¬Cold(x)) ::: Every dumpus is not cold.\n∀x (Dumpus(x) → Vumpus(x)) ::: Every dumpus is a vumpus.\n∀x (Vumpus(x) → ¬Liquid(x)) ::: Vumpuses are not liquid.\n∀x (Vumpus(x) → Numpus(x)) ::: Vumpuses are numpuses.\n∀x (Numpus(x) → Sour(x)) ::: Each numpus is sour.\n∀x (Numpus(x) → Tumpus(x)) ::: Every numpus is a tumpus.\nJompus(stella) ::: Stella is a jompus.\nConclusion:\nSour(stella) ::: Stella is sour.\n------"
    ]
  },
  {
    "id": "ProntoQA_446",
    "context": "Yumpuses are not temperate. Yumpuses are dumpuses. Dumpuses are shy. Each dumpus is a numpus. Every numpus is floral. Numpuses are jompuses. Jompuses are not amenable. Each jompus is a zumpus. Wumpuses are transparent. Zumpuses are not transparent. Zumpuses are impuses. Impuses are brown. Impuses are vumpuses. Each vumpus is not sour. Each vumpus is a tumpus. Tumpuses are wooden. Every tumpus is a rompus. Alex is a yumpus.",
    "question": "Is the following statement true or false? Alex is transparent.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nYumpus(x) ::: x is a yumpus\nTemperate(x) ::: x is temperate\nDumpus(x) ::: x is a dumpus\nShy(x) ::: x is shy\nNumpus(x) ::: x is a numpus\nFloral(x) ::: x is floral\nJompus(x) ::: x is a jompus\nAmenable(x) ::: x is amenable\nZumpus(x) ::: x is a zumpus\nWumpus(x) ::: x is a wumpus\nTransparent(x) ::: x is transparent\nImpus(x) ::: x is an impus\nBrown(x) ::: x is brown\nVumpus(x) ::: x is a vumpus\nSour(x) ::: x is sour\nTumpus(x) ::: x is a tumpus\nRompus(x) ::: x is a rompus\nPremises:\n∀x (Yumpus(x) → ¬Temperate(x)) ::: Yumpuses are not temperate.\n∀x (Yumpus(x) → Dumpus(x)) ::: Yumpuses are dumpuses.\n∀x (Dumpus(x) → Shy(x)) ::: Dumpuses are shy.\n∀x (Dumpus(x) → Numpus(x)) ::: Each dumpus is a numpus.\n∀x (Numpus(x) → Floral(x)) ::: Every numpus is floral.\n∀x (Numpus(x) → Jompus(x)) ::: Numpuses are jompuses.\n∀x (Jompus(x) → ¬Amenable(x)) ::: Jompuses are not amenable.\n∀x (Jompus(x) → Zumpus(x)) ::: Each jompus is a zumpus.\n∀x (Wumpus(x) → Transparent(x)) ::: Wumpuses are transparent.\n∀x (Zumpus(x) → ¬Transparent(x)) ::: Zumpuses are not transparent.\n∀x (Zumpus(x) → Impus(x)) ::: Zumpuses are impuses.\n∀x (Impus(x) → Brown(x)) ::: Impuses are brown.\n∀x (Impus(x) → Vumpus(x)) ::: Impuses are vumpuses.\n∀x (Vumpus(x) → ¬Sour(x)) ::: Each vumpus is not sour.\n∀x (Vumpus(x) → Tumpus(x)) ::: Each vumpus is a tumpus.\n∀x (Tumpus(x) → Wooden(x)) ::: Tumpuses are wooden.\n∀x (Tumpus(x) → Rompus(x)) ::: Every tumpus is a rompus.\nYumpus(alex) ::: Alex is a yumpus.\nConclusion:\nTransparent(alex) ::: Alex is transparent.\n------"
    ]
  },
  {
    "id": "ProntoQA_447",
    "context": "Each tumpus is blue. Each tumpus is an impus. Each impus is not sour. Each impus is a wumpus. Wumpuses are feisty. Every wumpus is a yumpus. Every yumpus is hot. Yumpuses are jompuses. Every jompus is not mean. Every jompus is a vumpus. Vumpuses are luminous. Every vumpus is a dumpus. Every zumpus is mean. Sally is a tumpus.",
    "question": "Is the following statement true or false? Sally is mean.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant.lpg\n------"
    ]
  },
  {
    "id": "ProntoQA_448",
    "context": "Vumpuses are feisty. Vumpuses are tumpuses. Tumpuses are not large. Tumpuses are zumpuses. Zumpuses are not luminous. Zumpuses are jompuses. Every jompus is not dull. Jompuses are yumpuses. Every yumpus is not earthy. Yumpuses are wumpuses. Rompuses are not red. Wumpuses are transparent. Wumpuses are numpuses. Each numpus is not aggressive. Numpuses are impuses. Every impus is red. Impuses are dumpuses. Wren is a jompus.",
    "question": "Is the following statement true or false? Wren is not red.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nVumpus(x) ::: x is a vumpus\nFeisty(x) ::: x is feisty\nTumpus(x) ::: x is a tumpus\nLarge(x) ::: x is large\nZumpus(x) ::: x is a zumpus\nLuminous(x) ::: x is luminous\nJompus(x) ::: x is a jompus\nDull(x) ::: x is dull\nYumpus(x) ::: x is a yumpus\nEarthy(x) ::: x is earthy\nWumpus(x) ::: x is a wumpus\nRompus(x) ::: x is a rompus\nRed(x) ::: x is red\nTransparent(x) ::: x is transparent\nNumpus(x) ::: x is a numpus\nAggressive(x) ::: x is aggressive\nImpus(x) ::: x is an impus\nDumpus(x) ::: x is a dumpus\nPremises:\n∀x (Vumpus(x) → Feisty(x)) ::: Vumpuses are feisty.\n∀x (Vumpus(x) → Tumpus(x)) ::: Vumpuses are tumpuses.\n∀x (Tumpus(x) → ¬Large(x)) ::: Tumpuses are not large.\n∀x (Tumpus(x) → Zumpus(x)) ::: Tumpuses are zumpuses.\n∀x (Zumpus(x) → ¬Luminous(x)) ::: Zumpuses are not luminous.\n∀x (Zumpus(x) → Jompus(x)) ::: Zumpuses are jompuses.\n∀x (Jompus(x) → ¬Dull(x)) ::: Every jompus is not dull.\n∀x (Jompus(x) → Yumpus(x)) ::: Jompuses are yumpuses.\n∀x (Yumpus(x) → ¬Earthy(x)) ::: Every yumpus is not earthy.\n∀x (Yumpus(x) → Wumpus(x)) ::: Yumpuses are wumpuses.\n∀x (Rompus(x) → ¬Red(x)) ::: Rompuses are not red.\n∀x (Wumpus(x) → Transparent(x)) ::: Wumpuses are transparent.\n∀x (Wumpus(x) → Numpus(x)) ::: Wumpuses are numpuses.\n∀x (Numpus(x) → ¬Aggressive(x)) ::: Each numpus is not aggressive.\n∀x (Numpus(x) → Impus(x)) ::: Numpuses are impuses.\n∀x (Impus(x) → Red(x)) ::: Every impus is red.\n∀x (Impus(x) → Dumpus(x)) ::: Impuses are dumpuses.\nJompus(wren) ::: Wren is a jompus.\nConclusion:\n¬Red(wren) ::: Wren is not red.\n------"
    ]
  },
  {
    "id": "ProntoQA_449",
    "context": "Impuses are not angry. Every impus is a vumpus. Each vumpus is not happy. Each vumpus is a yumpus. Every jompus is metallic. Each yumpus is transparent. Every yumpus is a numpus. Each numpus is small. Numpuses are zumpuses. Every zumpus is sweet. Zumpuses are rompuses. Each rompus is orange. Every rompus is a tumpus. Every tumpus is cold. Tumpuses are wumpuses. Wumpuses are not metallic. Each wumpus is a dumpus. Max is a numpus.",
    "question": "Is the following statement true or false? Max is metallic.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nImpus(x) ::: x is an impus\nAngry(x) ::: x is angry\nVumpus(x) ::: x is a vumpus\nHappy(x) ::: x is happy\nYumpus(x) ::: x is a yumpus\nJompus(x) ::: x is a jompus\nMetallic(x) ::: x is metallic\nTransparent(x) ::: x is transparent\nNumpus(x) ::: x is a numpus\nSmall(x) ::: x is small\nZumpus(x) ::: x is a zumpus\nRompus(x) ::: x is a rompus\nOrange(x) ::: x is orange\nTumpus(x) ::: x is a tumpus\nCold(x) ::: x is cold\nWumpus(x) ::: x is a wumpus\nDumpus(x) ::: x is a dumpus\nPremises:\n∀x (Impus(x) → ¬Angry(x)) ::: Impuses are not angry.\n∀x (Impus(x) → Vumpus(x)) ::: Every impus is a vumpus.\n∀x (Vumpus(x) → ¬Happy(x)) ::: Each vumpus is not happy.\n∀x (Vumpus(x) → Yumpus(x)) ::: Each vumpus is a yumpus.\n∀x (Jompus(x) → Metallic(x)) ::: Every jompus is metallic.\n∀x (Yumpus(x) → Transparent(x)) ::: Every yumpus is transparent.\n∀x (Yumpus(x) → Numpus(x)) ::: Every yumpus is a numpus.\n∀x (Numpus(x) → Small(x)) ::: Each numpus is small.\n∀x (Numpus(x) → Zumpus(x)) ::: Numpuses are zumpuses.\n∀x (Zumpus(x) → Rompus(x)) ::: Every zumpus is a rompus.\n∀x (Rompus(x) → Orange(x)) ::: Each rompus is orange.\n∀x (Rompus(x) → Tumpus(x)) ::: Every rompus is a tumpus.\n∀x (Tumpus(x) → Cold(x)) ::: Every tumpus is cold.\n∀x (Tumpus(x) → Wumpus(x)) ::: Tumpuses are wumpuses.\n∀x (Wumpus(x) → ¬Metallic(x)) ::: Wumpuses are not metallic.\n∀x (Wumpus(x) → Dumpus(x)) ::: Each wumpus is a dumpus.\nNumpus(max) ::: Max is a numpus.\nConclusion:\nMetallic(max) ::: Max is metallic.\n------"
    ]
  },
  {
    "id": "ProntoQA_450",
    "context": "Each vumpus is not bitter. Vumpuses are yumpuses. Yumpuses are floral. Yumpuses are jompuses. Jompuses are not dull. Every jompus is a tumpus. Each tumpus is happy. Each tumpus is a rompus. Rompuses are liquid. Rompuses are wumpuses. Every wumpus is mean. Wumpuses are zumpuses. Zumpuses are large. Zumpuses are dumpuses. Each dumpus is transparent. Every numpus is not transparent. Every dumpus is an impus. Stella is a tumpus.",
    "question": "Is the following statement true or false? Stella is not transparent.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nVumpus(x) ::: x is a vumpus\nBitter(x) ::: x is bitter\nYumpus(x) ::: x is a yumpus\nFloral(x) ::: x is floral\nJompus(x) ::: x is a jompus\nDull(x) ::: x is dull\nTumpus(x) ::: x is a tumpus\nHappy(x) ::: x is happy\nRompus(x) ::: x is a rompus\nLiquid(x) ::: x is liquid\nWumpus(x) ::: x is a wumpus\nMean(x) ::: x is mean\nZumpus(x) ::: x is a zumpus\nLarge(x) ::: x is large\nDumpus(x) ::: x is a dumpus\nTransparent(x) ::: x is transparent\nImpus(x) ::: x is an impus\nStella(x) ::: x is Stella\nPremises:\n∀x (Vumpus(x) → ¬Bitter(x)) ::: Each vumpus is not bitter.\n∀x (Vumpus(x) → Yumpus(x)) ::: Vumpuses are yumpuses.\n∀x (Yumpus(x) → Floral(x)) ::: Yumpuses are floral.\n∀x (Yumpus(x) → Jompus(x)) ::: Yumpuses are jompuses.\n∀x (Jompus(x) → ¬Dull(x)) ::: Jompuses are not dull.\n∀x (Jompus(x) → Tumpus(x)) ::: Every jompus is a tumpus.\n∀x (Tumpus(x) → Happy(x)) ::: Each tumpus is happy.\n∀x (Tumpus(x) → Rompus(x)) ::: Each tumpus is a rompus.\n∀x (Rompus(x) → Liquid(x)) ::: Rompuses are liquid.\n∀x (Rompus(x) → Wumpus(x)) ::: Rompuses are wumpuses.\n∀x (Wumpus(x) → Mean(x)) ::: Every wumpus is mean.\n∀x (Wumpus(x) → Zumpus(x)) ::: Wumpuses are zumpuses.\n∀x (Zumpus(x) → Large(x)) ::: Zumpuses are large.\n∀x (Zumpus(x) → Dumpus(x)) ::: Zumpuses are dumpuses.\n∀x (Dumpus(x) → Transparent(x)) ::: Each dumpus is transparent.\n∀x (Dumpus(x) → Impus(x)) ::: Every dumpus is an impus.\nTumpus(stella) ::: Stella is a tumpus.\nConclusion:\n¬Transparent(stella) ::: Stella is not transparent.\n------"
    ]
  },
  {
    "id": "ProntoQA_451",
    "context": "Yumpuses are not dull. Vumpuses are angry. Each yumpus is a wumpus. Wumpuses are nervous. Each wumpus is a dumpus. Each dumpus is not opaque. Dumpuses are tumpuses. Tumpuses are cold. Each tumpus is an impus. Impuses are floral. Every impus is a zumpus. Every zumpus is wooden. Zumpuses are rompuses. Each rompus is not angry. Rompuses are numpuses. Numpuses are large. Numpuses are jompuses. Wren is a dumpus.",
    "question": "Is the following statement true or false? Wren is angry.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nYumpus(x) ::: x is a yumpus\nDull(x) ::: x is dull\nVumpus(x) ::: x is a vumpus\nAngry(x) ::: x is angry\nWumpus(x) ::: x is a wumpus\nNervous(x) ::: x is nervous\nDumpus(x) ::: x is a dumpus\nOpaque(x) ::: x is opaque\nTumpus(x) ::: x is a tumpus\nCold(x) ::: x is cold\nImpus(x) ::: x is an impus\nFloral(x) ::: x is floral\nZumpus(x) ::: x is a zumpus\nWooden(x) ::: x is wooden\nRompus(x) ::: x is a rompus\nAngry(x) ::: x is angry\nNumpus(x) ::: x is a numpus\nLarge(x) ::: x is large\nJompus(x) ::: x is a jompus\nPremises:\n∀x (Yumpus(x) → ¬Dull(x)) ::: Yumpuses are not dull.\n∀x (Vumpus(x) → Angry(x)) ::: Vumpuses are angry.\n∀x (Yumpus(x) → Wumpus(x)) ::: Each yumpus is a wumpus.\n∀x (Wumpus(x) → Nervous(x)) ::: Wumpuses are nervous.\n∀x (Wumpus(x) → Dumpus(x)) ::: Each wumpus is a dumpus.\n∀x (Dumpus(x) → ¬Opaque(x)) ::: Each dumpus is not opaque.\n∀x (Dumpus(x) → Tumpus(x)) ::: Dumpuses are tumpuses.\n∀x (Tumpus(x) → Cold(x)) ::: Tumpuses are cold.\n∀x (Tumpus(x) → Impus(x)) ::: Each tumpus is an impus.\n∀x (Impus(x) → Floral(x)) ::: Impuses are floral.\n∀x (Impus(x) → Zumpus(x)) ::: Every impus is a zumpus.\n∀x (Zumpus(x) → Wooden(x)) ::: Every zumpus is wooden.\n∀x (Zumpus(x) → Rompus(x)) ::: Zumpuses are rompuses.\n∀x (Rompus(x) → ¬Angry(x)) ::: Each rompus is not angry.\n∀x (Rompus(x) → Numpus(x)) ::: Rompuses are numpuses.\n∀x (Numpus(x) → Large(x)) ::: Numpuses are large.\n∀x (Numpus(x) → Jompus(x)) ::: Numpuses are jompuses.\nDumpus(wren) ::: Wren is a dumpus.\nConclusion:\nAngry(wren) ::: Wren is angry.\n------"
    ]
  },
  {
    "id": "ProntoQA_452",
    "context": "Wumpuses are not wooden. Each wumpus is a tumpus. Each tumpus is sour. Every tumpus is a vumpus. Vumpuses are large. Vumpuses are rompuses. Every rompus is transparent. Rompuses are zumpuses. Zumpuses are not nervous. Jompuses are red. Zumpuses are dumpuses. Dumpuses are bright. Dumpuses are yumpuses. Every yumpus is not red. Each yumpus is a numpus. Numpuses are not mean. Every numpus is an impus. Max is a vumpus.",
    "question": "Is the following statement true or false? Max is red.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nWumpus(x) ::: x is a wumpus\nWooden(x) ::: x is wooden\nTumpus(x) ::: x is a tumpus\nSour(x) ::: x is sour\nVumpus(x) ::: x is a vumpus\nLarge(x) ::: x is large\nRompus(x) ::: x is a rompus\nTransparent(x) ::: x is transparent\nZumpus(x) ::: x is a zumpus\nNervous(x) ::: x is nervous\nJompus(x) ::: x is a jompus\nRed(x) ::: x is red\nDumpus(x) ::: x is a dumpus\nBright(x) ::: x is bright\nYumpus(x) ::: x is a yumpus\nNumpus(x) ::: x is a numpus\nMean(x) ::: x is mean\nImpus(x) ::: x is an impus\nPremises:\n∀x (Wumpus(x) → ¬Wooden(x)) ::: Wumpuses are not wooden.\n∀x (Tumpus(x) → Sour(x)) ::: Each tumpus is sour.\n∀x (Tumpus(x) → Vumpus(x)) ::: Every tumpus is a vumpus.\n∀x (Vumpus(x) → Large(x)) ::: Vumpuses are large.\n∀x (Vumpus(x) → Rompus(x)) ::: Vumpuses are rompuses.\n∀x (Rompus(x) → Transparent(x)) ::: Every rompus is transparent.\n∀x (Rompus(x) → Zumpus(x)) ::: Rompuses are zumpuses.\n∀x (Zumpus(x) → ¬Nervous(x)) ::: Zumpuses are not nervous.\n∀x (Jompus(x) → Red(x)) ::: Jompuses are red.\n∀x (Zumpus(x) → Dumpus(x)) ::: Zumpuses are dumpuses.\n∀x (Dumpus(x) → Bright(x)) ::: Dumpuses are bright.\n∀x (Dumpus(x) → Yumpus(x)) ::: Dumpuses are yumpuses.\n∀x (Yumpus(x) → ¬Red(x)) ::: Every yumpus is not red.\n∀x (Yumpus(x) → Numpus(x)) ::: Each yumpus is a numpus.\n∀x (Numpus(x) → ¬Mean(x)) ::: Numpuses are not mean.\n∀x (Numpus(x) → Impus(x)) ::: Every numpus is an impus.\nVumpus(max) ::: Max is a vumpus.\nConclusion:\nRed(max) ::: Max is red.\n------"
    ]
  },
  {
    "id": "ProntoQA_453",
    "context": "Rompuses are opaque. Each rompus is a dumpus. Dumpuses are shy. Dumpuses are numpuses. Numpuses are not sour. Every numpus is an impus. Each impus is mean. Impuses are zumpuses. Each tumpus is brown. Zumpuses are not brown. Zumpuses are jompuses. Jompuses are hot. Jompuses are wumpuses. Every wumpus is earthy. Every wumpus is a vumpus. Every vumpus is dull. Every vumpus is a yumpus. Wren is a rompus.",
    "question": "Is the following statement true or false? Wren is not brown.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nRompus(x) ::: x is a rompus\nOpaque(x) ::: x is opaque\nDumpus(x) ::: x is a dumpus\nShy(x) ::: x is shy\nNumpus(x) ::: x is a numpus\nSour(x) ::: x is sour\nImpus(x) ::: x is an impus\nMean(x) ::: x is mean\nZumpus(x) ::: x is a zumpus\nBrown(x) ::: x is brown\nJompus(x) ::: x is a jompus\nHot(x) ::: x is hot\nWumpus(x) ::: x is a wumpus\nEarthy(x) ::: x is earthy\nVumpus(x) ::: x is a vumpus\nDull(x) ::: x is dull\nYumpus(x) ::: x is a yumpus\nPremises:\n∀x (Rompus(x) → Opaque(x)) ::: Rompuses are opaque.\n∀x (Dumpus(x) → Shy(x)) ::: Each rompus is a dumpus. Dumpuses are shy.\n∀x (Dumpus(x) → Numpus(x)) ::: Dumpuses are numpuses.\n∀x (Numpus(x) → ¬Sour(x)) ::: Numpuses are not sour.\n∀x (Impus(x) → ∀y (Numpus(y) → Impus(y))) ::: Every numpus is an impus.\n∀x (Impus(x) → Mean(x)) ::: Each impus is mean.\n∀x (Impus(x) → Zumpus(x)) ::: Impuses are zumpuses.\n∀x (Tumpus(x) → Brown(x)) ::: Each impus is brown.\n∀x (Zumpus(x) → ¬Brown(x)) ::: Zumpuses are not brown.\n∀x (Zumpus(x) → Jompus(x)) ::: Zumpuses are jompuses.\n∀x (Jompus(x) → Hot(x)) ::: Jompuses are hot.\n∀x (Jompus(x) → Wumpus(x)) ::: Jompuses are wumpuses.\n∀x (Wumpus(x) → Earthy(x)) ::: Every wumpus is earthy.\n∀x (Wumpus(x) → Vumpus(x)) ::: Every wumpus is a vumpus.\n∀x (Vumpus(x) → Dull(x)) ::: Every vumpus is dull.\n∀x (Vumpus(x) → Yumpus(x)) ::: Every vumpus is a yumpus.\nRompus(wren) ::: Wren is a rompus.\nConclusion:\n¬Brown(wren) ::: Wren is not brown.\n------"
    ]
  },
  {
    "id": "ProntoQA_454",
    "context": "Each dumpus is not floral. Every yumpus is not cold. Every yumpus is a vumpus. Vumpuses are bright. Every vumpus is a zumpus. Every zumpus is not shy. Zumpuses are numpuses. Every numpus is not angry. Every numpus is a jompus. Each jompus is wooden. Each jompus is a wumpus. Wumpuses are floral. Every wumpus is a rompus. Rompuses are spicy. Each rompus is an impus. Impuses are not opaque. Every impus is a tumpus. Sally is a vumpus.",
    "question": "Is the following statement true or false? Sally is floral.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nDumpus(x) ::: x is a dumpus\nFloral(x) ::: x is floral\nYumpus(x) ::: x is a yumpus\nCold(x) ::: x is cold\nVumpus(x) ::: x is a vumpus\nBright(x) ::: x is bright\nZumpus(x) ::: x is a zumpus\nShy(x) ::: x is shy\nNumpus(x) ::: x is a numpus\nAngry(x) ::: x is angry\nJompus(x) ::: x is a jompus\nWooden(x) ::: x is wooden\nWumpus(x) ::: x is a wumpus\nRompus(x) ::: x is a rompus\nSpicy(x) ::: x is spicy\nImpus(x) ::: x is an impus\nOpaque(x) ::: x is opaque\nTumpus(x) ::: x is a tumpus\nPremises:\n∀x (Dumpus(x) → ¬Floral(x)) ::: Each dumpus is not floral.\n∀x (Yumpus(x) → ¬Cold(x)) ::: Every yumpus is not cold.\n∀x (Yumpus(x) → Vumpus(x)) ::: Every yumpus is a vumpus.\n∀x (Vumpus(x) → Bright(x)) ::: Vumpuses are bright.\n∀x (Vumpus(x) → Zumpus(x)) ::: Every vumpus is a zumpus.\n∀x (Zumpus(x) → ¬Shy(x)) ::: Every zumpus is not shy.\n∀x (Zumpus(x) → Numpus(x)) ::: Zumpuses are numpuses.\n∀x (Numpus(x) → ¬Angry(x)) ::: Every numpus is not angry.\n∀x (Numpus(x) → Jompus(x)) ::: Every numpus is a jompus.\n∀x (Jompus(x) → Wooden(x)) ::: Each jompus is wooden.\n∀x (Jompus(x) → Wumpus(x)) ::: Each jompus is a wumpus.\n∀x (Wumpus(x) → Floral(x)) ::: Wumpuses are floral.\n∀x (Wumpus(x) → Rompus(x)) ::: Every wumpus is a rompus.\n∀x (Rompus(x) → Spicy(x)) ::: Rompuses are spicy.\n∀x (Rompus(x) → Impus(x)) ::: Each rompus is an impus.\n∀x (Impus(x) → ¬Opaque(x)) ::: Impuses are not opaque.\n∀x (Impus(x) → Tumpus(x)) ::: Every impus is a tumpus.\nVumpus(sally) ::: Sally is a vumpus.\nConclusion:\nFloral(sally) ::: Sally is floral.\n------"
    ]
  },
  {
    "id": "ProntoQA_455",
    "context": "Every rompus is not blue. Each rompus is a jompus. Jompuses are dull. Jompuses are yumpuses. Every yumpus is amenable. Every dumpus is feisty. Every yumpus is a zumpus. Zumpuses are floral. Each zumpus is a tumpus. Tumpuses are large. Tumpuses are vumpuses. Vumpuses are not feisty. Each vumpus is an impus. Every impus is transparent. Every impus is a wumpus. Each wumpus is not luminous. Every wumpus is a numpus. Polly is a jompus.",
    "question": "Is the following statement true or false? Polly is feisty.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nRompus(x) ::: x is a rompus\nBlue(x) ::: x is blue\nJompus(x) ::: x is a jompus\nDull(x) ::: x is dull\nYumpus(x) ::: x is a yumpus\nAmenable(x) ::: x is amenable\nDumpus(x) ::: x is a dumpus\nFeisty(x) ::: x is feisty\nZumpus(x) ::: x is a zumpus\nFloral(x) ::: x is floral\nTumpus(x) ::: x is a tumpus\nLarge(x) ::: x is large\nVumpus(x) ::: x is a vumpus\nFeisty(x) ::: x is feisty\nImpus(x) ::: x is an impus\nTransparent(x) ::: x is transparent\nWumpus(x) ::: x is a wumpus\nLuminous(x) ::: x is luminous\nNumpus(x) ::: x is a numpus\nPolly(x) ::: x is Polly\nPremises:\n∀x (Rompus(x) → ¬Blue(x)) ::: Every rompus is not blue.\n∀x (Rompus(x) → Jompus(x)) ::: Each rompus is a jompus.\n∀x (Jompus(x) → Dull(x)) ::: Jompuses are dull.\n∀x (Jompus(x) → Yumpus(x)) ::: Jompuses are yumpuses.\n∀x (Yumpus(x) → Amenable(x)) ::: Every yumpus is amenable.\n∀x (Dumpus(x) → Feisty(x)) ::: Every dumpus is feisty.\n∀x (Yumpus(x) → Zumpus(x)) ::: Every yumpus is a zumpus.\n∀x (Zumpus(x) → Floral(x)) ::: Zumpuses are floral.\n∀x (Zumpus(x) → Tumpus(x)) ::: Each zumpus is a tumpus.\n∀x (Tumpus(x) → Large(x)) ::: Tumpuses are large.\n∀x (Tumpus(x) → Vumpus(x)) ::: Tumpuses are vumpuses.\n∀x (Vumpus(x) → ¬Feisty(x)) ::: Vumpuses are not feisty.\n∀x (Vumpus(x) → Impus(x)) ::: Each vumpus is an impus.\n∀x (Impus(x) → Transparent(x)) ::: Every impus is transparent.\n∀x (Impus(x) → Wumpus(x)) ::: Every impus is a wumpus.\n∀x (Wumpus(x) → ¬Luminous(x)) ::: Every wumpus is not luminous.\n∀x (Wumpus(x) → Numpus(x)) ::: Every wumpus is a numpus.\nJompus(polly) ::: Polly is a jompus.\nConclusion:\nFeisty(polly) ::: Polly is feisty.\n------"
    ]
  },
  {
    "id": "ProntoQA_456",
    "context": "Vumpuses are mean. Vumpuses are impuses. Impuses are not opaque. Every impus is a jompus. Jompuses are brown. Every jompus is a yumpus. Each yumpus is nervous. Each yumpus is a zumpus. Zumpuses are bitter. Zumpuses are rompuses. Dumpuses are not earthy. Rompuses are earthy. Rompuses are numpuses. Numpuses are hot. Each numpus is a wumpus. Wumpuses are bright. Every wumpus is a tumpus. Fae is an impus.",
    "question": "Is the following statement true or false? Fae is not earthy.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "------\n### Predicates:\nVumpus(x) ::: x is a vumpus\nMean(x) ::: x is mean\nImpus(x) ::: x is an impus\nOpaque(x) ::: x is opaque\nJompus(x) ::: x is a jompus\nBrown(x) ::: x is brown\nYumpus(x) ::: x is a yumpus\nNervous(x) ::: x is nervous\nZumpus(x) ::: x is a zumpus\nBitter(x) ::: x is bitter\nRompus(x) ::: x is a rompus\nEarthy(x) ::: x is earthy\nNumpus(x) ::: x is a numpus\nHot(x) ::: x is hot\nWumpus(x) ::: x is a wumpus\nBright(x) ::: x is bright\nTumpus(x) ::: x is a tumpus\nFae(x) ::: x is fae\nPremises:\n∀x (Vumpus(x) → Mean(x)) ::: Vumpuses are mean.\n∀x (Vumpus(x) → Impus(x)) ::: Vumpuses are impuses.\n∀x (Impus(x) → ¬Opaque(x)) ::: Impuses are not opaque.\n∀x (Impus(x) → Jompus(x)) ::: Every impus is a jompus.\n∀x (Jompus(x) → Brown(x)) ::: Jompuses are brown.\n∀x (Jompus(x) → Yumpus(x)) ::: Every jompus is a yumpus.\n∀x (Yumpus(x) → Nervous(x)) ::: Each yumpus is nervous.\n∀x (Yumpus(x) → Zumpus(x)) ::: Each yumpus is a zumpus.\n∀x (Zumpus(x) → Bitter(x)) ::: Zumpuses are bitter.\n∀x (Zumpus(x) → Rompus(x)) ::: Zumpuses are rompuses.\n∀x (Dumpus(x) → ¬Earthy(x)) ::: Dumpuses are not earthy.\n∀x (Rompus(x) → Earthy(x)) ::: Rompuses are earthy.\n∀x (Rompus(x) → Numpus(x)) ::: Rompuses are numpuses.\n∀x (Numpus(x) → Hot(x)) ::: Numpuses are hot.\n∀x (Numpus(x) → Wumpus(x)) ::: Each numpus is a wumpus.\n∀x (Wumpus(x) → Bright(x)) ::: Wumpuses are bright.\n∀x (Wumpus(x) → Tumpus(x)) ::: Every wumpus is a tumpus.\nImpus(fae) ::: Fae is an impus.\nConclusion:\n¬Earthy(fae) ::: Fae is not earthy.\n------"
    ]
  },
  {
    "id": "ProntoQA_457",
    "context": "Impuses are happy. Impuses are vumpuses. Each vumpus is opaque. Vumpuses are rompuses. Every rompus is floral. Every rompus is a wumpus. Yumpuses are not large. Every wumpus is bitter. Every wumpus is a numpus. Numpuses are not cold. Numpuses are dumpuses. Every dumpus is bright. Dumpuses are jompuses. Each jompus is not red. Jompuses are zumpuses. Zumpuses are large. Every zumpus is a tumpus. Stella is a wumpus.",
    "question": "Is the following statement true or false? Stella is not large.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nImpus(x) ::: x is an impus\nHappy(x) ::: x is happy\nVumpus(x) ::: x is a vumpus\nOpaque(x) ::: x is opaque\nRompus(x) ::: x is a rompus\nFloral(x) ::: x is floral\nWumpus(x) ::: x is a wumpus\nLarge(x) ::: x is large\nBitter(x) ::: x is bitter\nNumpus(x) ::: x is a numpus\nCold(x) ::: x is cold\nDumpus(x) ::: x is a dumpus\nBright(x) ::: x is bright\nJompus(x) ::: x is a jompus\nRed(x) ::: x is red\nZumpus(x) ::: x is a zumpus\nLarge(x) ::: x is large\nTumpus(x) ::: x is a tumpus\nStella(x) ::: x is Stella\nPremises:\n∀x (Impus(x) → Happy(x)) ::: Impuses are happy.\n∀x (Impus(x) → Vumpus(x)) ::: Impuses are vumpuses.\n∀x (Vumpus(x) → Opaque(x)) ::: Each vumpus is opaque.\n∀x (Vumpus(x) → Rompus(x)) ::: Vumpuses are rompuses.\n∀x (Rompus(x) → Floral(x)) ::: Every rompus is floral.\n∀x (Rompus(x) → Wumpus(x)) ::: Every rompus is a wumpus.\n∀x (Wumpus(x) → ¬Large(x)) ::: Yumpuses are not large.\n∀x (Wumpus(x) → Bitter(x)) ::: Every wumpus is bitter.\n∀x (Wumpus(x) → Numpus(x)) ::: Every wumpus is a numpus.\n∀x (Numpus(x) → ¬Cold(x)) ::: Numpuses are not cold.\n∀x (Numpus(x) → Dumpus(x)) ::: Numpuses are dumpuses.\n∀x (Dumpus(x) → Bright(x)) ::: Every dumpus is bright.\n∀x (Dumpus(x) → Jompus(x)) ::: Dumpuses are jompuses.\n∀x (Jompus(x) → ¬Red(x)) ::: Each jompus is not red.\n∀x (Jompus(x) → Zumpus(x)) ::: Jompuses are zumpuses.\n∀x (Zumpus(x) → Large(x)) ::: Zumpuses are large.\n∀x (Zumpus(x) → Tumpus(x)) ::: Every zumpus is a tumpus.\nWumpus(stella) ::: Stella is a wumpus.\nConclusion:\n¬Large(stella) ::: Stella is not large.\n------"
    ]
  },
  {
    "id": "ProntoQA_458",
    "context": "Tumpuses are bright. Tumpuses are jompuses. Rompuses are not transparent. Every jompus is not angry. Each jompus is a wumpus. Wumpuses are not shy. Every wumpus is an impus. Impuses are small. Impuses are vumpuses. Every vumpus is brown. Vumpuses are dumpuses. Dumpuses are transparent. Dumpuses are yumpuses. Yumpuses are sour. Every yumpus is a numpus. Numpuses are liquid. Every numpus is a zumpus. Rex is a jompus.",
    "question": "Is the following statement true or false? Rex is not transparent.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nTumpus(x) ::: x is a tumpus\nBright(x) ::: x is bright\nJompus(x) ::: x is a jompus\nRompus(x) ::: x is a rompus\nTransparent(x) ::: x is transparent\nAngry(x) ::: x is angry\nWumpus(x) ::: x is a wumpus\nShy(x) ::: x is shy\nImpus(x) ::: x is an impus\nSmall(x) ::: x is small\nVumpus(x) ::: x is a vumpus\nBrown(x) ::: x is brown\nDumpus(x) ::: x is a dumpus\nYumpus(x) ::: x is a yumpus\nSour(x) ::: x is sour\nNumpus(x) ::: x is a numpus\nLiquid(x) ::: x is liquid\nZumpus(x) ::: x is a zumpus\nRex(x) ::: x is Rex\nPremises:\n∀x (Tumpus(x) → Bright(x)) ::: Tumpuses are bright.\n∀x (Tumpus(x) → Jompus(x)) ::: Tumpuses are jompuses.\n∀x (Rompus(x) → ¬Transparent(x)) ::: Rompuses are not transparent.\n∀x (Jompus(x) → ¬Angry(x)) ::: Every jompus is not angry.\n∀x (Jompus(x) → Wumpus(x)) ::: Each jompus is a wumpus.\n∀x (Wumpus(x) → ¬Shy(x)) ::: Wumpuses are not shy.\n∀x (Wumpus(x) → Impus(x)) ::: Every wumpus is an impus.\n∀x (Impus(x) → Small(x)) ::: Impuses are small.\n∀x (Impus(x) → Vumpus(x)) ::: Impuses are vumpuses.\n∀x (Vumpus(x) → Brown(x)) ::: Every vumpus is brown.\n∀x (Vumpus(x) → Dumpus(x)) ::: Vumpuses are dumpuses.\n∀x (Dumpus(x) → Transparent(x)) ::: Dumpuses are transparent.\n∀x (Dumpus(x) → Yumpus(x)) ::: Dumpuses are yumpuses.\n∀x (Yumpus(x) → Sour(x)) ::: Yumpuses are sour.\n∀x (Yumpus(x) → Numpus(x)) ::: Every yumpus is a numpus.\n∀x (Numpus(x) → Liquid(x)) ::: Numpuses are liquid.\n∀x (Numpus(x) → Zumpus(x)) ::: Every numpus is a zumpus.\nJompus(rex) ::: Rex is a jompus.\nConclusion:\n¬Transparent(rex) ::: Rex is not transparent.\n------"
    ]
  },
  {
    "id": "ProntoQA_459",
    "context": "Each tumpus is cold. Every tumpus is a vumpus. Vumpuses are luminous. Every vumpus is a yumpus. Yumpuses are happy. Yumpuses are jompuses. Every jompus is kind. Every rompus is not earthy. Jompuses are zumpuses. Each zumpus is not spicy. Each zumpus is a wumpus. Each wumpus is earthy. Wumpuses are numpuses. Every numpus is opaque. Numpuses are impuses. Every impus is dull. Every impus is a dumpus. Max is a vumpus.",
    "question": "Is the following statement true or false? Max is earthy.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nTumpus(x) ::: x is a tumpus\nCold(x) ::: x is cold\nVumpus(x) ::: x is a vumpus\nLuminous(x) ::: x is luminous\nYumpus(x) ::: x is a yumpus\nHappy(x) ::: x is happy\nJompus(x) ::: x is a jompus\nKind(x) ::: x is kind\nRompus(x) ::: x is a rompus\nEarthy(x) ::: x is earthy\nZumpus(x) ::: x is a zumpus\nSpicy(x) ::: x is spicy\nWumpus(x) ::: x is a wumpus\nNumpus(x) ::: x is a numpus\nOpaque(x) ::: x is opaque\nImpus(x) ::: x is an impus\nDull(x) ::: x is dull\nDumpus(x) ::: x is a dumpus\nPremises:\n∀x (Tumpus(x) → Cold(x)) ::: Each tumpus is cold.\n∀x (Tumpus(x) → Vumpus(x)) ::: Every tumpus is a vumpus.\n∀x (Vumpus(x) → Luminous(x)) ::: Vumpuses are luminous.\n∀x (Vumpus(x) → Yumpus(x)) ::: Every vumpus is a yumpus.\n∀x (Yumpus(x) → Happy(x)) ::: Yumpuses are happy.\n∀x (Yumpus(x) → Jompus(x)) ::: Yumpuses are jompuses.\n∀x (Jompus(x) → Kind(x)) ::: Every jompus is kind.\n∀x (Rompus(x) → ¬Earthy(x)) ::: Every rompus is not earthy.\n∀x (Jompus(x) → Zumpus(x)) ::: Jompuses are zumpuses.\n∀x (Zumpus(x) → ¬Spicy(x)) ::: Each zumpus is not spicy.\n∀x (Zumpus(x) → Wumpus(x)) ::: Each zumpus is a wumpus.\n∀x (Wumpus(x) → Earthy(x)) ::: Wumpuses are earthy.\n∀x (Wumpus(x) → Numpus(x)) ::: Wumpuses are numpuses.\n∀x (Numpus(x) → Opaque(x)) ::: Numpuses are opaque.\n∀x (Numpus(x) → Impus(x)) ::: Numpuses are impuses.\n∀x (Impus(x) → Dull(x)) ::: Every impus is dull.\n∀x (Impus(x) → Dumpus(x)) ::: Every impus is a dumpus.\nVumpus(max) ::: Max is a vumpus.\nConclusion:\nEarthy(max) ::: Max is earthy.\n------"
    ]
  },
  {
    "id": "ProntoQA_460",
    "context": "Each jompus is liquid. Dumpuses are bright. Dumpuses are impuses. Each impus is opaque. Impuses are yumpuses. Every yumpus is fruity. Each yumpus is a vumpus. Vumpuses are not orange. Every vumpus is a tumpus. Every tumpus is not liquid. Tumpuses are wumpuses. Each wumpus is small. Each wumpus is a numpus. Numpuses are feisty. Every numpus is a zumpus. Each zumpus is spicy. Zumpuses are rompuses. Sam is a dumpus.",
    "question": "Is the following statement true or false? Sam is not liquid.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nJompus(x) ::: x is a jompus\nLiquid(x) ::: x is liquid\nBright(x) ::: x is bright\nImpus(x) ::: x is an impus\nOpaque(x) ::: x is opaque\nYumpus(x) ::: x is a yumpus\nFruity(x) ::: x is fruity\nVumpus(x) ::: x is a vumpus\nOrange(x) ::: x is orange\nTumpus(x) ::: x is a tumpus\nSmall(x) ::: x is small\nNumpus(x) ::: x is a numpus\nFeisty(x) ::: x is feisty\nZumpus(x) ::: x is a zumpus\nSpicy(x) ::: x is spicy\nRompus(x) ::: x is a rompus\nPremises:\n∀x (Jompus(x) → Liquid(x)) ::: Each jompus is liquid.\n∀x (Dumpus(x) → Bright(x)) ::: Dumpuses are bright.\n∀x (Impus(x) → Opaque(x)) ::: Impuses are opaque.\n∀x (Impus(x) → Yumpus(x)) ::: Impuses are yumpuses.\n∀x (Yumpus(x) → Fruity(x)) ::: Every yumpus is fruity.\n∀x (Yumpus(x) → Vumpus(x)) ::: Each yumpus is a vumpus.\n∀x (Vumpus(x) → ¬Orange(x)) ::: Vumpuses are not orange.\n∀x (Vumpus(x) → Tumpus(x)) ::: Every vumpus is a tumpus.\n∀x (Tumpus(x) → ¬Liquid(x)) ::: Tumpuses are not liquid.\n∀x (Tumpus(x) → Wumpus(x)) ::: Tumpuses are wumpuses.\n∀x (Wumpus(x) → Small(x)) ::: Each wumpus is small.\n∀x (Wumpus(x) → Numpus(x)) ::: Each wumpus is a numpus.\n∀x (Numpus(x) → Feisty(x)) ::: Numpuses are feisty.\n∀x (Numpus(x) → Zumpus(x)) ::: Every numpus is a zumpus.\n∀x (Zumpus(x) → Spicy(x)) ::: Each zumpus is spicy.\n∀x (Zumpus(x) → Rompus(x)) ::: Zumpuses are rompuses.\nDumpus(sam) ::: Sam is a dumpus.\nConclusion:\n¬Liquid(sam) ::: Sam is not liquid.\n------"
    ]
  },
  {
    "id": "ProntoQA_461",
    "context": "Each zumpus is not earthy. Each zumpus is a vumpus. Vumpuses are not hot. Vumpuses are yumpuses. Yumpuses are metallic. Yumpuses are wumpuses. Every wumpus is bright. Each wumpus is a dumpus. Each dumpus is spicy. Each dumpus is an impus. Every impus is opaque. Every tumpus is not opaque. Every impus is a numpus. Numpuses are not kind. Numpuses are rompuses. Each rompus is not nervous. Rompuses are jompuses. Rex is a vumpus.",
    "question": "Is the following statement true or false? Rex is opaque.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nZumpus(x) ::: x is a zumpus\nEarthy(x) ::: x is earthy\nVumpus(x) ::: x is a vumpus\nHot(x) ::: x is hot\nYumpus(x) ::: x is a yumpus\nMetallic(x) ::: x is metallic\nWumpus(x) ::: x is a wumpus\nBright(x) ::: x is bright\nDumpus(x) ::: x is a dumpus\nSpicy(x) ::: x is spicy\nImpus(x) ::: x is an impus\nOpaque(x) ::: x is opaque\nTumpus(x) ::: x is a tumpus\nNumpus(x) ::: x is a numpus\nKind(x) ::: x is kind\nRompus(x) ::: x is a rompus\nNervous(x) ::: x is nervous\nJompus(x) ::: x is a jompus\nPremises:\n∀x (Zumpus(x) → ¬Earthy(x)) ::: Each zumpus is not earthy.\n∀x (Zumpus(x) → Vumpus(x)) ::: Each zumpus is a vumpus.\n∀x (Vumpus(x) → ¬Hot(x)) ::: Vumpuses are not hot.\n∀x (Vumpus(x) → Yumpus(x)) ::: Vumpuses are yumpuses.\n∀x (Yumpus(x) → Metallic(x)) ::: Yumpuses are metallic.\n∀x (Yumpus(x) → Wumpus(x)) ::: Yumpuses are wumpuses.\n∀x (Wumpus(x) → Bright(x)) ::: Every wumpus is bright.\n∀x (Wumpus(x) → Dumpus(x)) ::: Each wumpus is a dumpus.\n∀x (Dumpus(x) → Spicy(x)) ::: Each dumpus is spicy.\n∀x (Dumpus(x) → Impus(x)) ::: Each dumpus is an impus.\n∀x (Impus(x) → Opaque(x)) ::: Every impus is opaque.\n∀x (Tumpus(x) → ¬Opaque(x)) ::: Every tumpus is not opaque.\n∀x (Impus(x) → Numpus(x)) ::: Every impus is a numpus.\n∀x (Numpus(x) → ¬Kind(x)) ::: Numpuses are not kind.\n∀x (Numpus(x) → Rompus(x)) ::: Numpuses are rompuses.\n∀x (Rompus(x) → ¬Nervous(x)) ::: Each rompus is not nervous.\n∀x (Rompus(x) → Jompus(x)) ::: Rompuses are jompuses.\nVumpus(rex) ::: Rex is a vumpus.\nConclusion:\nOpaque(rex) ::: Rex is opaque.\n------"
    ]
  },
  {
    "id": "ProntoQA_462",
    "context": "Rompuses are fruity. Every rompus is a tumpus. Every tumpus is metallic. Tumpuses are wumpuses. Wumpuses are mean. Wumpuses are jompuses. Each jompus is not brown. Every dumpus is opaque. Jompuses are vumpuses. Vumpuses are not opaque. Each vumpus is a numpus. Every numpus is nervous. Every numpus is a yumpus. Yumpuses are temperate. Each yumpus is an impus. Each impus is sour. Each impus is a zumpus. Sally is a rompus.",
    "question": "Is the following statement true or false? Sally is not opaque.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nRompus(x) ::: x is a rompus\nFruity(x) ::: x is fruity\nTumpus(x) ::: x is a tumpus\nMetallic(x) ::: x is metallic\nWumpus(x) ::: x is a wumpus\nMean(x) ::: x is mean\nJompus(x) ::: x is a jompus\nBrown(x) ::: x is brown\nDumpus(x) ::: x is a dumpus\nOpaque(x) ::: x is opaque\nVumpus(x) ::: x is a vumpus\nNumpus(x) ::: x is a numpus\nNervous(x) ::: x is nervous\nYumpus(x) ::: x is a yumpus\nTemperate(x) ::: x is temperate\nImpus(x) ::: x is an impus\nSour(x) ::: x is sour\nZumpus(x) ::: x is a zumpus\nPremises:\n∀x (Rompus(x) → Fruity(x)) ::: Rompuses are fruity.\n∀x (Rompus(x) → Tumpus(x)) ::: Every rompus is a tumpus.\n∀x (Tumpus(x) → Metallic(x)) ::: Every tumpus is metallic.\n∀x (Tumpus(x) → Wumpus(x)) ::: Tumpuses are wumpuses.\n∀x (Wumpus(x) → Mean(x)) ::: Wumpuses are mean.\n∀x (Wumpus(x) → Jompus(x)) ::: Wumpuses are jompuses.\n∀x (Jompus(x) → ¬Brown(x)) ::: Each jompus is not brown.\n∀x (Dumpus(x) → Opaque(x)) ::: Every dumpus is opaque.\n∀x (Jompus(x) → Vumpus(x)) ::: Jompuses are vumpuses.\n∀x (Vumpus(x) → ¬Opaque(x)) ::: Vumpuses are not opaque.\n∀x (Vumpus(x) → Numpus(x)) ::: Each vumpus is a numpus.\n∀x (Numpus(x) → Nervous(x)) ::: Every numpus is nervous.\n∀x (Numpus(x) → Yumpus(x)) ::: Every numpus is a yumpus.\n∀x (Yumpus(x) → Temperate(x)) ::: Yumpuses are temperate.\n∀x (Yumpus(x) → Impus(x)) ::: Each yumpus is an impus.\n∀x (Impus(x) → Sour(x)) ::: Each impus is sour.\n∀x (Impus(x) → Zumpus(x)) ::: Each impus is a zumpus.\nRompus(sally) ::: Sally is a rompus.\nConclusion:\n¬Opaque(sally) ::: Sally is not opaque.\n------"
    ]
  },
  {
    "id": "ProntoQA_463",
    "context": "Jompuses are hot. Jompuses are rompuses. Each rompus is not transparent. Rompuses are dumpuses. Tumpuses are brown. Dumpuses are liquid. Dumpuses are wumpuses. Wumpuses are floral. Each wumpus is a vumpus. Each vumpus is spicy. Vumpuses are zumpuses. Each zumpus is not brown. Every zumpus is a yumpus. Stella is a rompus.",
    "question": "Is the following statement true or false? Stella is brown.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant.lpg\n------"
    ]
  },
  {
    "id": "ProntoQA_464",
    "context": "Tumpuses are luminous. Tumpuses are jompuses. Each jompus is floral. Each jompus is a dumpus. Dumpuses are large. Dumpuses are zumpuses. Zumpuses are dull. Wumpuses are cold. Every zumpus is a yumpus. Each yumpus is not cold. Each yumpus is a vumpus. Each vumpus is not brown. Vumpuses are rompuses. Every rompus is transparent. Rompuses are impuses. Every impus is not nervous. Impuses are numpuses. Alex is a tumpus.",
    "question": "Is the following statement true or false? Alex is cold.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nTumpus(x) ::: x is a tumpus\nLuminous(x) ::: x is luminous\nJompus(x) ::: x is a jompus\nFloral(x) ::: x is floral\nDumpus(x) ::: x is a dumpus\nLarge(x) ::: x is large\nZumpus(x) ::: x is a zumpus\nDull(x) ::: x is dull\nWumpus(x) ::: x is a wumpus\nCold(x) ::: x is cold\nYumpus(x) ::: x is a yumpus\nVumpus(x) ::: x is a vumpus\nBrown(x) ::: x is brown\nRompus(x) ::: x is a rompus\nTransparent(x) ::: x is transparent\nImpus(x) ::: x is an impus\nNervous(x) ::: x is nervous\nNumpus(x) ::: x is a numpus\nPremises:\n∀x (Tumpus(x) → Luminous(x)) ::: Tumpuses are luminous.\n∀x (Tumpus(x) → Jompus(x)) ::: Tumpuses are jompuses.\n∀x (Jompus(x) → Floral(x)) ::: Each jompus is floral.\n∀x (Jompus(x) → Dumpus(x)) ::: Each jompus is a dumpus.\n∀x (Dumpus(x) → Large(x)) ::: Dumpuses are large.\n∀x (Dumpus(x) → Zumpus(x)) ::: Dumpuses are zumpuses.\n∀x (Zumpus(x) → Dull(x)) ::: Zumpuses are dull.\n∀x (Wumpus(x) → Cold(x)) ::: Wumpuses are cold.\n∀x (Zumpus(x) → Yumpus(x)) ::: Every zumpus is a yumpus.\n∀x (Yumpus(x) → ¬Cold(x)) ::: Each yumpus is not cold.\n∀x (Yumpus(x) → Vumpus(x)) ::: Each yumpus is a vumpus.\n∀x (Vumpus(x) → ¬Brown(x)) ::: Each vumpus is not brown.\n∀x (Vumpus(x) → Rompus(x)) ::: Vumpuses are rompuses.\n∀x (Rompus(x) → Transparent(x)) ::: Every rompus is transparent.\n∀x (Rompus(x) → Impus(x)) ::: Rompuses are impuses.\n∀x (Impus(x) → ¬Nervous(x)) ::: Every impus is not nervous.\n∀x (Impus(x) → Numpus(x)) ::: Impuses are numpuses.\nTumpus(alex) ::: Alex is a tumpus.\nConclusion:\nCold(alex) ::: Alex is cold.\n------"
    ]
  },
  {
    "id": "ProntoQA_465",
    "context": "Wumpuses are not liquid. Wumpuses are yumpuses. Each yumpus is opaque. Each yumpus is a jompus. Every jompus is bright. Every jompus is an impus. Impuses are not hot. Impuses are rompuses. Rompuses are nervous. Rompuses are numpuses. Numpuses are sour. Numpuses are vumpuses. Vumpuses are blue. Dumpuses are not sour. Vumpuses are zumpuses. Each zumpus is large. Each zumpus is a tumpus. Rex is a yumpus.",
    "question": "Is the following statement true or false? Rex is not sour.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nWumpus(x) ::: x is a wumpus\nLiquid(x) ::: x is liquid\nYumpus(x) ::: x is a yumpus\nOpaque(x) ::: x is opaque\nJompus(x) ::: x is a jompus\nBright(x) ::: x is bright\nImpus(x) ::: x is an impus\nHot(x) ::: x is hot\nRompus(x) ::: x is a rompus\nNervous(x) ::: x is nervous\nNumpus(x) ::: x is a numpus\nSour(x) ::: x is sour\nVumpus(x) ::: x is a vumpus\nBlue(x) ::: x is blue\nDumpus(x) ::: x is a dumpus\nLarge(x) ::: x is large\nTumpus(x) ::: x is a tumpus\nPremises:\n∀x (Wumpus(x) → ¬Liquid(x)) ::: Wumpuses are not liquid.\n∀x (Wumpus(x) → Yumpus(x)) ::: Wumpuses are yumpuses.\n∀x (Yumpus(x) → Opaque(x)) ::: Each yumpus is opaque.\n∀x (Yumpus(x) → Jompus(x)) ::: Each yumpus is a jompus.\n∀x (Jompus(x) → Bright(x)) ::: Every jompus is bright.\n∀x (Jompus(x) → Impus(x)) ::: Every jompus is an impus.\n∀x (Impus(x) → ¬Hot(x)) ::: Impuses are not hot.\n∀x (Impus(x) → Rompus(x)) ::: Impuses are rompuses.\n∀x (Rompus(x) → Nervous(x)) ::: Rompuses are nervous.\n∀x (Rompus(x) → Numpus(x)) ::: Rompuses are numpuses.\n∀x (Numpus(x) → Sour(x)) ::: Numpuses are sour.\n∀x (Numpus(x) → Vumpus(x)) ::: Numpuses are vumpuses.\n∀x (Vumpus(x) → Blue(x)) ::: Vumpuses are blue.\n∀x (Dumpus(x) → ¬Sour(x)) ::: Dumpuses are not sour.\n∀x (Vumpus(x) → Zumpus(x)) ::: Vumpuses are zumpuses.\n∀x (Zumpus(x) → Large(x)) ::: Each zumpus is large.\n∀x (Zumpus(x) → Tumpus(x)) ::: Each zumpus is a tumpus.\nYumpus(rex) ::: Rex is a yumpus.\nConclusion:\n¬Sour(rex) ::: Rex is not sour.\n------"
    ]
  },
  {
    "id": "ProntoQA_466",
    "context": "Zumpuses are angry. Impuses are shy. Impuses are vumpuses. Vumpuses are metallic. Vumpuses are tumpuses. Tumpuses are earthy. Every tumpus is a yumpus. Yumpuses are large. Yumpuses are numpuses. Numpuses are not angry. Every numpus is a jompus. Every jompus is not spicy. Every jompus is a wumpus. Each wumpus is transparent. Wumpuses are dumpuses. Dumpuses are brown. Each dumpus is a rompus. Max is an impus.",
    "question": "Is the following statement true or false? Max is angry.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nZumpus(x) ::: x is a zumpus\nAngry(x) ::: x is angry\nImpus(x) ::: x is an impus\nShy(x) ::: x is shy\nVumpus(x) ::: x is a vumpus\nMetallic(x) ::: x is metallic\nTumpus(x) ::: x is a tumpus\nEarthy(x) ::: x is earthy\nYumpus(x) ::: x is a yumpus\nLarge(x) ::: x is large\nNumpus(x) ::: x is a numpus\nAngry(x) ::: x is angry\nJompus(x) ::: x is a jompus\nSpicy(x) ::: x is spicy\nWumpus(x) ::: x is a wumpus\nTransparent(x) ::: x is transparent\nDumpus(x) ::: x is a dumpus\nBrown(x) ::: x is brown\nRompus(x) ::: x is a rompus\nPremises:\n∀x (Zumpus(x) → Angry(x)) ::: Zumpuses are angry.\n∀x (Impus(x) → Shy(x)) ::: Impuses are shy.\n∀x (Impus(x) → Vumpus(x)) ::: Impuses are vumpuses.\n∀x (Vumpus(x) → Metallic(x)) ::: Vumpuses are metallic.\n∀x (Vumpus(x) → Tumpus(x)) ::: Vumpuses are tumpuses.\n∀x (Tumpus(x) → Earthy(x)) ::: Tumpuses are earthy.\n∀x (Tumpus(x) → Yumpus(x)) ::: Every tumpus is a yumpus.\n∀x (Yumpus(x) → Large(x)) ::: Yumpuses are large.\n∀x (Yumpus(x) → Numpus(x)) ::: Yumpuses are numpuses.\n∀x (Numpus(x) → ¬Angry(x)) ::: Numpuses are not angry.\n∀x (Numpus(x) → Jompus(x)) ::: Every numpus is a jompus.\n∀x (Jompus(x) → ¬Spicy(x)) ::: Every jompus is not spicy.\n∀x (Jompus(x) → Wumpus(x)) ::: Every jompus is a wumpus.\n∀x (Wumpus(x) → Transparent(x)) ::: Each wumpus is transparent.\n∀x (Wumpus(x) → Dumpus(x)) ::: Wumpuses are dumpuses.\n∀x (Dumpus(x) → Brown(x)) ::: Dumpuses are brown.\n∀x (Dumpus(x) → Rompus(x)) ::: Each dumpus is a rompus.\nImpus(max) ::: Max is an impus.\nConclusion:\nAngry(max) ::: Max is angry.\n------"
    ]
  },
  {
    "id": "ProntoQA_467",
    "context": "Every rompus is transparent. Each rompus is a dumpus. Each dumpus is not dull. Dumpuses are vumpuses. Each vumpus is hot. Vumpuses are jompuses. Every jompus is not metallic. Jompuses are impuses. Impuses are floral. Every impus is a numpus. Zumpuses are not blue. Numpuses are feisty. Numpuses are yumpuses. Yumpuses are spicy. Yumpuses are wumpuses. Every wumpus is blue. Wumpuses are tumpuses. Alex is a jompus.",
    "question": "Is the following statement true or false? Alex is not blue.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nRompus(x) ::: x is a rompus\nTransparent(x) ::: x is transparent\nDumpus(x) ::: x is a dumpus\nDull(x) ::: x is dull\nVumpus(x) ::: x is a vumpus\nHot(x) ::: x is hot\nJompus(x) ::: x is a jompus\nMetallic(x) ::: x is metallic\nImpus(x) ::: x is an impus\nFloral(x) ::: x is floral\nNumpus(x) ::: x is a numpus\nBlue(x) ::: x is blue\nFeisty(x) ::: x is feisty\nYumpus(x) ::: x is a yumpus\nSpicy(x) ::: x is spicy\nWumpus(x) ::: x is a wumpus\nTumpus(x) ::: x is a tumpus\nPremises:\n∀x (Rompus(x) → Transparent(x)) ::: Every rompus is transparent.\n∀x (Rompus(x) → Dumpus(x)) ::: Each rompus is a dumpus.\n∀x (Dumpus(x) → ¬Dull(x)) ::: Each dumpus is not dull.\n∀x (Vumpus(x) → Jompus(x)) ::: Dumpuses are vumpuses.\n∀x (Vumpus(x) → Hot(x)) ::: Each vumpus is hot.\n∀x (Vumpus(x) → Jompus(x)) ::: Vumpuses are jompuses.\n∀x (Jompus(x) → ¬Metallic(x)) ::: Every jompus is not metallic.\n∀x (Jompus(x) → Impus(x)) ::: Jompuses are impuses.\n∀x (Impus(x) → Floral(x)) ::: Impuses are floral.\n∀x (Impus(x) → Numpus(x)) ::: Every impus is a numpus.\n∀x (Zumpus(x) → ¬Blue(x)) ::: Zumpuses are not blue.\n∀x (Numpus(x) → Feisty(x)) ::: Numpuses are feisty.\n∀x (Numpus(x) → Yumpus(x)) ::: Numpuses are yumpuses.\n∀x (Yumpus(x) → Spicy(x)) ::: Yumpuses are spicy.\n∀x (Yumpus(x) → Wumpus(x)) ::: Yumpuses are wumpuses.\n∀x (Wumpus(x) → Blue(x)) ::: Every wumpus is blue.\n∀x (Wumpus(x) → Tumpus(x)) ::: Wumpuses are tumpuses.\nJompus(alex) ::: Alex is a jompus.\nConclusion:\n¬Blue(alex) ::: Alex is not blue.\n------"
    ]
  },
  {
    "id": "ProntoQA_468",
    "context": "Tumpuses are fruity. Each tumpus is a yumpus. Yumpuses are cold. Every yumpus is a zumpus. Zumpuses are spicy. Every zumpus is a rompus. Each rompus is not opaque. Rompuses are impuses. Impuses are kind. Impuses are vumpuses. Each jompus is not kind. Vumpuses are not feisty. Vumpuses are dumpuses. Dumpuses are not liquid. Dumpuses are wumpuses. Each wumpus is not large. Each wumpus is a numpus. Polly is a tumpus.",
    "question": "Is the following statement true or false? Polly is not kind.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nTumpus(x) ::: x is a tumpus\nFruity(x) ::: x is fruity\nYumpus(x) ::: x is a yumpus\nCold(x) ::: x is cold\nZumpus(x) ::: x is a zumpus\nSpicy(x) ::: x is spicy\nRompus(x) ::: x is a rompus\nOpaque(x) ::: x is opaque\nImpus(x) ::: x is an impus\nKind(x) ::: x is kind\nVumpus(x) ::: x is a vumpus\nFeisty(x) ::: x is feisty\nDumpus(x) ::: x is a dumpus\nLiquid(x) ::: x is liquid\nWumpus(x) ::: x is a wumpus\nLarge(x) ::: x is large\nNumpus(x) ::: x is a numpus\nPremises:\n∀x (Tumpus(x) → Fruity(x)) ::: Tumpuses are fruity.\n∀x (Tumpus(x) → Yumpus(x)) ::: Each tumpus is a yumpus.\n∀x (Yumpus(x) → Cold(x)) ::: Yumpuses are cold.\n∀x (Yumpus(x) → Zumpus(x)) ::: Every yumpus is a zumpus.\n∀x (Zumpus(x) → Spicy(x)) ::: Zumpuses are spicy.\n∀x (Zumpus(x) → Rompus(x)) ::: Every zumpus is a rompus.\n∀x (Rompus(x) → ¬Opaque(x)) ::: Each rompus is not opaque.\n∀x (Rompus(x) → Impus(x)) ::: Rompuses are impuses.\n∀x (Impus(x) → Kind(x)) ::: Impuses are kind.\n∀x (Impus(x) → Vumpus(x)) ::: Impuses are vumpuses.\n∀x (Jompus(x) → ¬Kind(x)) ::: Each jompus is not kind.\n∀x (Vumpus(x) → ¬Feisty(x)) ::: Vumpuses are not feisty.\n∀x (Vumpus(x) → Dumpus(x)) ::: Vumpuses are dumpuses.\n∀x (Dumpus(x) → ¬Liquid(x)) ::: Dumpuses are not liquid.\n∀x (Dumpus(x) → Wumpus(x)) ::: Dumpuses are wumpuses.\n∀x (Wumpus(x) → ¬Large(x)) ::: Each wumpus is not large.\n∀x (Wumpus(x) → Numpus(x)) ::: Each wumpus is a numpus.\nTumpus(polly) ::: Polly is a tumpus.\nConclusion:\n¬Kind(polly) ::: Polly is not kind.\n------"
    ]
  },
  {
    "id": "ProntoQA_469",
    "context": "Every wumpus is not dull. Each wumpus is a tumpus. Tumpuses are hot. Tumpuses are yumpuses. Yumpuses are red. Yumpuses are rompuses. Each rompus is spicy. Every vumpus is mean. Rompuses are dumpuses. Each dumpus is large. Dumpuses are impuses. Impuses are not mean. Each impus is a jompus. Each jompus is transparent. Every jompus is a numpus. Numpuses are not liquid. Numpuses are zumpuses. Polly is a tumpus.",
    "question": "Is the following statement true or false? Polly is not mean.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nWumpus(x) ::: x is a wumpus\nDull(x) ::: x is dull\nTumpus(x) ::: x is a tumpus\nHot(x) ::: x is hot\nYumpus(x) ::: x is a yumpus\nRed(x) ::: x is red\nRompus(x) ::: x is a rompus\nSpicy(x) ::: x is spicy\nMean(x) ::: x is mean\nDumpus(x) ::: x is a dumpus\nLarge(x) ::: x is large\nImpus(x) ::: x is an impus\nJompus(x) ::: x is a jompus\nTransparent(x) ::: x is transparent\nNumpus(x) ::: x is a numpus\nLiquid(x) ::: x is liquid\nZumpus(x) ::: x is a zumpus\nPremises:\n∀x (Wumpus(x) → ¬Dull(x)) ::: Every wumpus is not dull.\n∀x (Wumpus(x) → Tumpus(x)) ::: Each wumpus is a tumpus.\n∀x (Tumpus(x) → Hot(x)) ::: Tumpuses are hot.\n∀x (Tumpus(x) → Yumpus(x)) ::: Tumpuses are yumpuses.\n∀x (Yumpus(x) → Red(x)) ::: Yumpuses are red.\n∀x (Yumpus(x) → Rompus(x)) ::: Yumpuses are rompuses.\n∀x (Rompus(x) → Spicy(x)) ::: Each rompus is spicy.\n∀x (Vumpus(x) → Mean(x)) ::: Every vumpus is mean.\n∀x (Rompus(x) → Dumpus(x)) ::: Rompuses are dumpuses.\n∀x (Dumpus(x) → Large(x)) ::: Each dumpus is large.\n∀x (Dumpus(x) → Impus(x)) ::: Dumpuses are impuses.\n∀x (Impus(x) → ¬Mean(x)) ::: Impuses are not mean.\n∀x (Impus(x) → Jompus(x)) ::: Each impus is a jompus.\n∀x (Jompus(x) → Transparent(x)) ::: Each jompus is transparent.\n∀x (Jompus(x) → Numpus(x)) ::: Every jompus is a numpus.\n∀x (Numpus(x) → ¬Liquid(x)) ::: Numpuses are not liquid.\n∀x (Numpus(x) → Zumpus(x)) ::: Numpuses are zumpuses.\nTumpus(polly) ::: Polly is a tumpus.\nConclusion:\n¬Mean(polly) ::: Polly is not mean.\n------"
    ]
  },
  {
    "id": "ProntoQA_470",
    "context": "Each jompus is earthy. Every jompus is a zumpus. Each zumpus is liquid. Zumpuses are wumpuses. Every wumpus is not mean. Wumpuses are vumpuses. Each vumpus is transparent. Every vumpus is a yumpus. Every yumpus is small. Yumpuses are rompuses. Dumpuses are not small. Every rompus is not bright. Each rompus is a tumpus. Tumpuses are orange. Each tumpus is a numpus. Every numpus is hot. Numpuses are impuses. Alex is a jompus.",
    "question": "Is the following statement true or false? Alex is not small.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nJompus(x) ::: x is a jompus\nEarthy(x) ::: x is earthy\nZumpus(x) ::: x is a zumpus\nLiquid(x) ::: x is liquid\nWumpus(x) ::: x is a wumpus\nMean(x) ::: x is mean\nVumpus(x) ::: x is a vumpus\nTransparent(x) ::: x is transparent\nYumpus(x) ::: x is a yumpus\nSmall(x) ::: x is small\nRompus(x) ::: x is a rompus\nBright(x) ::: x is bright\nTumpus(x) ::: x is a tumpus\nOrange(x) ::: x is orange\nNumpus(x) ::: x is a numpus\nHot(x) ::: x is hot\nImpus(x) ::: x is an impus\nPremises:\n∀x (Jompus(x) → Earthy(x)) ::: Each jompus is earthy.\n∀x (Jompus(x) → Zumpus(x)) ::: Every jompus is a zumpus.\n∀x (Zumpus(x) → Liquid(x)) ::: Each zumpus is liquid.\n∀x (Zumpus(x) → Wumpus(x)) ::: Zumpuses are wumpuses.\n∀x (Wumpus(x) → ¬Mean(x)) ::: Every wumpus is not mean.\n∀x (Wumpus(x) → Vumpus(x)) ::: Wumpuses are vumpuses.\n∀x (Vumpus(x) → Transparent(x)) ::: Each vumpus is transparent.\n∀x (Vumpus(x) → Yumpus(x)) ::: Every vumpus is a yumpus.\n∀x (Yumpus(x) → Small(x)) ::: Every yumpus is small.\n∀x (Yumpus(x) → Rompus(x)) ::: Yumpuses are rompuses.\n∀x (Rompus(x) → ¬Bright(x)) ::: Every rompus is not bright.\n∀x (Rompus(x) → Tumpus(x)) ::: Each rompus is a tumpus.\n∀x (Tumpus(x) → Orange(x)) ::: Tumpuses are orange.\n∀x (Tumpus(x) → Numpus(x)) ::: Each tumpus is a numpus.\n∀x (Numpus(x) → Hot(x)) ::: Every numpus is hot.\n∀x (Numpus(x) → Impus(x)) ::: Numpuses are impuses.\nJompus(alex) ::: Alex is a jompus.\nConclusion:\n¬Small(alex) ::: Alex is not small.\n------"
    ]
  },
  {
    "id": "ProntoQA_471",
    "context": "Vumpuses are not bright. Each dumpus is metallic. Each dumpus is a wumpus. Wumpuses are spicy. Wumpuses are impuses. Impuses are red. Each impus is a numpus. Numpuses are opaque. Each numpus is a rompus. Each rompus is bright. Rompuses are zumpuses. Zumpuses are large. Zumpuses are yumpuses. Each yumpus is aggressive. Yumpuses are tumpuses. Tumpuses are not shy. Every tumpus is a jompus. Sam is a dumpus.",
    "question": "Is the following statement true or false? Sam is bright.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nVumpus(x) ::: x is a vumpus\nBright(x) ::: x is bright\nDumpus(x) ::: x is a dumpus\nMetallic(x) ::: x is metallic\nWumpus(x) ::: x is a wumpus\nSpicy(x) ::: x is spicy\nImpus(x) ::: x is an impus\nRed(x) ::: x is red\nNumpus(x) ::: x is a numpus\nOpaque(x) ::: x is opaque\nRompus(x) ::: x is a rompus\nBright(x) ::: x is bright\nZumpus(x) ::: x is a zumpus\nLarge(x) ::: x is large\nYumpus(x) ::: x is a yumpus\nAggressive(x) ::: x is aggressive\nTumpus(x) ::: x is a tumpus\nShy(x) ::: x is shy\nJompus(x) ::: x is a jompus\nPremises:\n∀x (Vumpus(x) → ¬Bright(x)) ::: Vumpuses are not bright.\n∀x (Dumpus(x) → Metallic(x)) ::: Each dumpus is metallic.\n∀x (Dumpus(x) → Wumpus(x)) ::: Each dumpus is a wumpus.\n∀x (Wumpus(x) → Spicy(x)) ::: Wumpuses are spicy.\n∀x (Wumpus(x) → Impus(x)) ::: Wumpuses are impuses.\n∀x (Impus(x) → Red(x)) ::: Impuses are red.\n∀x (Impus(x) → Numpus(x)) ::: Each impus is a numpus.\n∀x (Numpus(x) → Opaque(x)) ::: Numpuses are opaque.\n∀x (Numpus(x) → Rompus(x)) ::: Each numpus is a rompus.\n∀x (Rompus(x) → Bright(x)) ::: Each rompus is bright.\n∀x (Rompus(x) → Zumpus(x)) ::: Rompuses are zumpuses.\n∀x (Zumpus(x) → Large(x)) ::: Zumpuses are large.\n∀x (Zumpus(x) → Yumpus(x)) ::: Zumpuses are yumpuses.\n∀x (Yumpus(x) → Aggressive(x)) ::: Each yumpus is aggressive.\n∀x (Yumpus(x) → Tumpus(x)) ::: Yumpuses are tumpuses.\n∀x (Tumpus(x) → ¬Shy(x)) ::: Tumpuses are not shy.\n∀x (Tumpus(x) → Jompus(x)) ::: Every tumpus is a jompus.\nDumpus(sam) ::: Sam is a dumpus.\nConclusion:\nBright(sam) ::: Sam is bright.\n------"
    ]
  },
  {
    "id": "ProntoQA_472",
    "context": "Numpuses are not luminous. Every numpus is a jompus. Every jompus is brown. Jompuses are vumpuses. Each vumpus is cold. Every vumpus is a tumpus. Tumpuses are mean. Tumpuses are zumpuses. Every zumpus is opaque. Each zumpus is a wumpus. Every wumpus is not small. Every yumpus is not sour. Every wumpus is an impus. Every impus is sour. Every impus is a rompus. Every rompus is happy. Rompuses are dumpuses. Wren is a vumpus.",
    "question": "Is the following statement true or false? Wren is not sour.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nNumpus(x) ::: x is a numpus\nLuminous(x) ::: x is luminous\nJompus(x) ::: x is a jompus\nBrown(x) ::: x is brown\nVumpus(x) ::: x is a vumpus\nCold(x) ::: x is cold\nTumpus(x) ::: x is a tumpus\nMean(x) ::: x is mean\nZumpus(x) ::: x is a zumpus\nOpaque(x) ::: x is opaque\nWumpus(x) ::: x is a wumpus\nSmall(x) ::: x is small\nSour(x) ::: x is sour\nImpus(x) ::: x is an impus\nRompus(x) ::: x is a rompus\nHappy(x) ::: x is happy\nDumpus(x) ::: x is a dumpus\nPremises:\n∀x (Numpus(x) → ¬Luminous(x)) ::: Numpuses are not luminous.\n∀x (Numpus(x) → Jompus(x)) ::: Every numpus is a jompus.\n∀x (Jompus(x) → Brown(x)) ::: Every jompus is brown.\n∀x (Jompus(x) → Vumpus(x)) ::: Jompuses are vumpuses.\n∀x (Vumpus(x) → Cold(x)) ::: Each vumpus is cold.\n∀x (Vumpus(x) → Tumpus(x)) ::: Every vumpus is a tumpus.\n∀x (Tumpus(x) → Mean(x)) ::: Tumpuses are mean.\n∀x (Tumpus(x) → Zumpus(x)) ::: Tumpuses are zumpuses.\n∀x (Zumpus(x) → Opaque(x)) ::: Every zumpus is opaque.\n∀x (Zumpus(x) → Wumpus(x)) ::: Each zumpus is a wumpus.\n∀x (Wumpus(x) → ¬Small(x)) ::: Every wumpus is not small.\n∀x (Yumpus(x) → ¬Sour(x)) ::: Every yumpus is not sour.\n∀x (Wumpus(x) → Impus(x)) ::: Every wumpus is an impus.\n∀x (Impus(x) → Sour(x)) ::: Every impus is sour.\n∀x (Impus(x) → Rompus(x)) ::: Every impus is a rompus.\n∀x (Rompus(x) → Happy(x)) ::: Every rompus is happy.\n∀x (Rompus(x) → Dumpus(x)) ::: Rompuses are dumpuses.\nVumpus(wren) ::: Wren is a vumpus.\nConclusion:\n¬Sour(wren) ::: Wren is not sour.\n------"
    ]
  },
  {
    "id": "ProntoQA_473",
    "context": "Dumpuses are aggressive. Each dumpus is a zumpus. Zumpuses are small. Zumpuses are yumpuses. Yumpuses are bitter. Every yumpus is a rompus. Each rompus is not blue. Each rompus is a numpus. Each impus is liquid. Numpuses are not happy. Each numpus is a wumpus. Wumpuses are not liquid. Wumpuses are vumpuses. Vumpuses are bright. Vumpuses are tumpuses. Each tumpus is floral. Tumpuses are jompuses. Max is a zumpus.",
    "question": "Is the following statement true or false? Max is not liquid.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nDumpus(x) ::: x is a dumpus\nAggressive(x) ::: x is aggressive\nZumpus(x) ::: x is a zumpus\nSmall(x) ::: x is small\nYumpus(x) ::: x is a yumpus\nBitter(x) ::: x is bitter\nRompus(x) ::: x is a rompus\nBlue(x) ::: x is blue\nImpus(x) ::: x is an impus\nLiquid(x) ::: x is liquid\nNumpus(x) ::: x is a numpus\nHappy(x) ::: x is happy\nWumpus(x) ::: x is a wumpus\nVumpus(x) ::: x is a vumpus\nBright(x) ::: x is bright\nTumpus(x) ::: x is a tumpus\nFloral(x) ::: x is floral\nJompus(x) ::: x is a jompus\nPremises:\n∀x (Dumpus(x) → Aggressive(x)) ::: Dumpuses are aggressive.\n∀x (Zumpus(x) → Small(x)) ::: Each dumpus is a zumpus.\n∀x (Zumpus(x) → Yumpus(x)) ::: Zumpuses are yumpuses.\n∀x (Yumpus(x) → Bitter(x)) ::: Yumpuses are bitter.\n∀x (Yumpus(x) → Rompus(x)) ::: Every yumpus is a rompus.\n∀x (Rompus(x) → ¬Blue(x)) ::: Each rompus is not blue.\n∀x (Rompus(x) → Numpus(x)) ::: Each rompus is a numpus.\n∀x (Impus(x) → Liquid(x)) ::: Each impus is liquid.\n∀x (Numpus(x) → ¬Happy(x)) ::: Numpuses are not happy.\n∀x (Numpus(x) → Wumpus(x)) ::: Each numpus is a wumpus.\n∀x (Wumpus(x) → ¬Liquid(x)) ::: Wumpuses are not liquid.\n∀x (Wumpus(x) → Vumpus(x)) ::: Wumpuses are vumpuses.\n∀x (Vumpus(x) → Bright(x)) ::: Vumpuses are bright.\n∀x (Vumpus(x) → Tumpus(x)) ::: Vumpuses are tumpuses.\n∀x (Tumpus(x) → Floral(x)) ::: Each tumpus is floral.\n∀x (Tumpus(x) → Jompus(x)) ::: Tumpuses are jompuses.\nZumpus(max) ::: Max is a zumpus.\nConclusion:\n¬Liquid(max) ::: Max is not liquid.\n------"
    ]
  },
  {
    "id": "ProntoQA_474",
    "context": "Each zumpus is mean. Jompuses are not feisty. Jompuses are impuses. Impuses are not orange. Impuses are numpuses. Each numpus is not luminous. Numpuses are tumpuses. Tumpuses are not earthy. Tumpuses are rompuses. Rompuses are not small. Rompuses are yumpuses. Each yumpus is hot. Yumpuses are vumpuses. Each vumpus is bitter. Vumpuses are wumpuses. Every wumpus is not mean. Wumpuses are dumpuses. Sally is a tumpus.",
    "question": "Is the following statement true or false? Sally is mean.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nZumpus(x) ::: x is a zumpus\nMean(x) ::: x is mean\nJompus(x) ::: x is a jompus\nFeisty(x) ::: x is feisty\nImpus(x) ::: x is an impus\nOrange(x) ::: x is orange\nNumpus(x) ::: x is a numpus\nLuminous(x) ::: x is luminous\nTumpus(x) ::: x is a tumpus\nEarthy(x) ::: x is earthy\nRompus(x) ::: x is a rompus\nSmall(x) ::: x is small\nYumpus(x) ::: x is a yumpus\nHot(x) ::: x is hot\nVumpus(x) ::: x is a vumpus\nBitter(x) ::: x is bitter\nWumpus(x) ::: x is a wumpus\nDumpus(x) ::: x is a dumpus\nPremises:\n∀x (Zumpus(x) → Mean(x)) ::: Each zumpus is mean.\n∀x (Jompus(x) → ¬Feisty(x)) ::: Jompuses are not feisty.\n∀x (Jompus(x) → Impus(x)) ::: Jompuses are impuses.\n∀x (Impus(x) → ¬Orange(x)) ::: Impuses are not orange.\n∀x (Impus(x) → Numpus(x)) ::: Impuses are numpuses.\n∀x (Numpus(x) → ¬Luminous(x)) ::: Each numpus is not luminous.\n∀x (Numpus(x) → Tumpus(x)) ::: Numpuses are tumpuses.\n∀x (Tumpus(x) → ¬Earthy(x)) ::: Tumpuses are not earthy.\n∀x (Tumpus(x) → Rompus(x)) ::: Tumpuses are rompuses.\n∀x (Rompus(x) → ¬Small(x)) ::: Rompuses are not small.\n∀x (Rompus(x) → Yumpus(x)) ::: Rompuses are yumpuses.\n∀x (Yumpus(x) → Hot(x)) ::: Each yumpus is hot.\n∀x (Yumpus(x) → Vumpus(x)) ::: Yumpuses are vumpuses.\n∀x (Vumpus(x) → Bitter(x)) ::: Each vumpus is bitter.\n∀x (Vumpus(x) → Wumpus(x)) ::: Vumpuses are wumpuses.\n∀x (Wumpus(x) → ¬Mean(x)) ::: Every wumpus is not mean.\n∀x (Wumpus(x) → Dumpus(x)) ::: Wumpuses are dumpuses.\nTumpus(sally) ::: Sally is a tumpus.\nConclusion:\nMean(sally) ::: Sally is mean.\n------"
    ]
  },
  {
    "id": "ProntoQA_475",
    "context": "Each jompus is red. Each jompus is a dumpus. Every dumpus is amenable. Every dumpus is a tumpus. Tumpuses are not nervous. Each tumpus is a numpus. Every numpus is temperate. Every numpus is a vumpus. Each vumpus is not floral. Every vumpus is an impus. Impuses are bright. Impuses are wumpuses. Wumpuses are wooden. Rompuses are not bright. Each wumpus is a zumpus. Zumpuses are spicy. Every zumpus is a yumpus. Polly is a dumpus.",
    "question": "Is the following statement true or false? Polly is not bright.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nJompus(x) ::: x is a jompus\nRed(x) ::: x is red\nDumpus(x) ::: x is a dumpus\nAmenable(x) ::: x is amenable\nTumpus(x) ::: x is a tumpus\nNervous(x) ::: x is nervous\nNumpus(x) ::: x is a numpus\nTemperate(x) ::: x is temperate\nVumpus(x) ::: x is a vumpus\nFloral(x) ::: x is floral\nImpus(x) ::: x is an impus\nBright(x) ::: x is bright\nWumpus(x) ::: x is a wumpus\nWooden(x) ::: x is wooden\nRompus(x) ::: x is a rompus\nZumpus(x) ::: x is a zumpus\nSpicy(x) ::: x is spicy\nYumpus(x) ::: x is a yumpus\nPremises:\n∀x (Jompus(x) → Red(x)) ::: Each jompus is red.\n∀x (Jompus(x) → Dumpus(x)) ::: Each jompus is a dumpus.\n∀x (Dumpus(x) → Amenable(x)) ::: Every dumpus is amenable.\n∀x (Dumpus(x) → Tumpus(x)) ::: Every dumpus is a tumpus.\n∀x (Tumpus(x) → ¬Nervous(x)) ::: Tumpuses are not nervous.\n∀x (Tumpus(x) → Numpus(x)) ::: Each tumpus is a numpus.\n∀x (Numpus(x) → Temperate(x)) ::: Every numpus is temperate.\n∀x (Numpus(x) → Vumpus(x)) ::: Every numpus is a vumpus.\n∀x (Vumpus(x) → ¬Floral(x)) ::: Each vumpus is not floral.\n∀x (Vumpus(x) → Impus(x)) ::: Every vumpus is an impus.\n∀x (Impus(x) → Bright(x)) ::: Impuses are bright.\n∀x (Impus(x) → Wumpus(x)) ::: Impuses are wumpuses.\n∀x (Wumpus(x) → Wooden(x)) ::: Wumpuses are wooden.\n∀x (Rompus(x) → ¬Bright(x)) ::: Rompuses are not bright.\n∀x (Wumpus(x) → Zumpus(x)) ::: Each wumpus is a zumpus.\n∀x (Zumpus(x) → Spicy(x)) ::: Zumpuses are spicy.\n∀x (Zumpus(x) → Yumpus(x)) ::: Every zumpus is a yumpus.\nDumpus(polly) ::: Polly is a dumpus.\nConclusion:\n¬Bright(polly) ::: Polly is not bright.\n------"
    ]
  },
  {
    "id": "ProntoQA_476",
    "context": "Each wumpus is not amenable. Yumpuses are transparent. Each yumpus is a rompus. Each rompus is luminous. Rompuses are impuses. Impuses are not fruity. Each impus is a vumpus. Vumpuses are bitter. Vumpuses are jompuses. Jompuses are amenable. Every jompus is a zumpus. Zumpuses are not shy. Zumpuses are numpuses. Every numpus is cold. Every numpus is a dumpus. Every dumpus is small. Each dumpus is a tumpus. Wren is a yumpus.",
    "question": "Is the following statement true or false? Wren is amenable.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nWumpus(x) ::: x is a wumpus\nAmenable(x) ::: x is amenable\nTransparent(x) ::: x is transparent\nRompus(x) ::: x is a rompus\nLuminous(x) ::: x is luminous\nImpus(x) ::: x is an impus\nFruity(x) ::: x is fruity\nVumpus(x) ::: x is a vumpus\nBitter(x) ::: x is bitter\nJompus(x) ::: x is a jompus\nAmenable(x) ::: x is amenable\nZumpus(x) ::: x is a zumpus\nShy(x) ::: x is shy\nNumpus(x) ::: x is a numpus\nCold(x) ::: x is cold\nDumpus(x) ::: x is a dumpus\nSmall(x) ::: x is small\nTumpus(x) ::: x is a tumpus\nPremises:\n∀x (Wumpus(x) → ¬Amenable(x)) ::: Each wumpus is not amenable.\n∀x (Yumpus(x) → Transparent(x)) ::: Yumpuses are transparent.\n∀x (Yumpus(x) → Rompus(x)) ::: Each yumpus is a rompus.\n∀x (Rompus(x) → Luminous(x)) ::: Rompuses are luminous.\n∀x (Rompus(x) → Impus(x)) ::: Rompuses are impuses.\n∀x (Impus(x) → ¬Fruity(x)) ::: Impuses are not fruity.\n∀x (Impus(x) → Vumpus(x)) ::: Each impus is a vumpus.\n∀x (Vumpus(x) → Bitter(x)) ::: Vumpuses are bitter.\n∀x (Vumpus(x) → Jompus(x)) ::: Vumpuses are jompuses.\n∀x (Jompus(x) → Amenable(x)) ::: Jompuses are amenable.\n∀x (Jompus(x) → Zumpus(x)) ::: Every jompus is a zumpus.\n∀x (Zumpus(x) → ¬Shy(x)) ::: Zumpuses are not shy.\n∀x (Zumpus(x) → Numpus(x)) ::: Zumpuses are numpuses.\n∀x (Numpus(x) → Cold(x)) ::: Every numpus is cold.\n∀x (Numpus(x) → Dumpus(x)) ::: Every numpus is a dumpus.\n∀x (Dumpus(x) → Small(x)) ::: Every dumpus is small.\n∀x (Dumpus(x) → Tumpus(x)) ::: Each dumpus is a tumpus.\nYumpus(wren) ::: Wren is a yumpus.\nConclusion:\nAmenable(wren) ::: Wren is amenable.\n------"
    ]
  },
  {
    "id": "ProntoQA_477",
    "context": "Dumpuses are fruity. Dumpuses are vumpuses. Vumpuses are not happy. Every vumpus is a yumpus. Yumpuses are not bitter. Yumpuses are jompuses. Every jompus is not aggressive. Each jompus is a tumpus. Zumpuses are bright. Tumpuses are luminous. Every tumpus is a rompus. Rompuses are hot. Every rompus is a wumpus. Each wumpus is small. Every wumpus is a numpus. Every numpus is not bright. Each numpus is an impus. Fae is a jompus.",
    "question": "Is the following statement true or false? Fae is not bright.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nDumpus(x) ::: x is a dumpus\nFruity(x) ::: x is fruity\nVumpus(x) ::: x is a vumpus\nHappy(x) ::: x is happy\nYumpus(x) ::: x is a yumpus\nBitter(x) ::: x is bitter\nJompus(x) ::: x is a jompus\nAggressive(x) ::: x is aggressive\nTumpus(x) ::: x is a tumpus\nZumpus(x) ::: x is a zumpus\nBright(x) ::: x is bright\nLuminous(x) ::: x is luminous\nRompus(x) ::: x is a rompus\nHot(x) ::: x is hot\nWumpus(x) ::: x is a wumpus\nSmall(x) ::: x is small\nNumpus(x) ::: x is a numpus\nImpus(x) ::: x is an impus\nPremises:\n∀x (Dumpus(x) → Fruity(x)) ::: Dumpuses are fruity.\n∀x (Vumpus(x) → ¬Happy(x)) ::: Vumpuses are not happy.\n∀x (Yumpus(x) → ¬Bitter(x)) ::: Every yumpus is not bitter.\n∀x (Yumpus(x) → Jompus(x)) ::: Every yumpus is a jompus.\n∀x (Jompus(x) → ¬Aggressive(x)) ::: Each jompus is not aggressive.\n∀x (Jompus(x) → Tumpus(x)) ::: Each jompus is a tumpus.\n∀x (Zumpus(x) → Bright(x)) ::: Zumpuses are bright.\n∀x (Tumpus(x) → Luminous(x)) ::: Tumpuses are luminous.\n∀x (Tumpus(x) → Rompus(x)) ::: Every tumpus is a rompus.\n∀x (Rompus(x) → Hot(x)) ::: Rompuses are hot.\n∀x (Wumpus(x) → Small(x)) ::: Every wumpus is small.\n∀x (Wumpus(x) → Numpus(x)) ::: Every wumpus is a numpus.\n∀x (Numpus(x) → ¬Bright(x)) ::: Every numpus is not bright.\n∀x (Numpus(x) → Impus(x)) ::: Each numpus is an impus.\nJompus(fae) ::: Fae is a jompus.\nConclusion:\n¬Bright(fae) ::: Fae is not bright.\n------"
    ]
  },
  {
    "id": "ProntoQA_478",
    "context": "Wumpuses are spicy. Wumpuses are yumpuses. Yumpuses are aggressive. Numpuses are small. Every yumpus is a tumpus. Tumpuses are hot. Every tumpus is an impus. Impuses are not metallic. Impuses are rompuses. Every rompus is not small. Every rompus is a dumpus. Dumpuses are not floral. Every dumpus is a zumpus. Each zumpus is not bright. Each zumpus is a vumpus. Vumpuses are shy. Each vumpus is a jompus. Polly is a wumpus.",
    "question": "Is the following statement true or false? Polly is small.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nWumpus(x) ::: x is a wumpus\nSpicy(x) ::: x is spicy\nYumpus(x) ::: x is a yumpus\nAggressive(x) ::: x is aggressive\nNumpus(x) ::: x is a numpus\nSmall(x) ::: x is small\nTumpus(x) ::: x is a tumpus\nHot(x) ::: x is hot\nImpus(x) ::: x is an impus\nMetallic(x) ::: x is metallic\nRompus(x) ::: x is a rompus\nDumpus(x) ::: x is a dumpus\nFloral(x) ::: x is floral\nZumpus(x) ::: x is a zumpus\nBright(x) ::: x is bright\nVumpus(x) ::: x is a vumpus\nShy(x) ::: x is shy\nJompus(x) ::: x is a jompus\nPremises:\n∀x (Wumpus(x) → Spicy(x)) ::: Wumpuses are spicy.\n∀x (Wumpus(x) → Yumpus(x)) ::: Wumpuses are yumpuses.\n∀x (Yumpus(x) → Aggressive(x)) ::: Yumpuses are aggressive.\n∀x (Numpus(x) → Small(x)) ::: Numpuses are small.\n∀x (Yumpus(x) → Tumpus(x)) ::: Every yumpus is a tumpus.\n∀x (Tumpus(x) → Hot(x)) ::: Tumpuses are hot.\n∀x (Tumpus(x) → Impus(x)) ::: Every tumpus is an impus.\n∀x (Impus(x) → ¬Metallic(x)) ::: Impuses are not metallic.\n∀x (Impus(x) → Rompus(x)) ::: Impuses are rompuses.\n∀x (Rompus(x) → ¬Small(x)) ::: Every rompus is not small.\n∀x (Rompus(x) → Dumpus(x)) ::: Every rompus is a dumpus.\n∀x (Dumpus(x) → ¬Floral(x)) ::: Dumpuses are not floral.\n∀x (Dumpus(x) → Zumpus(x)) ::: Every dumpus is a zumpus.\n∀x (Zumpus(x) → ¬Bright(x)) ::: Each zumpus is not bright.\n∀x (Zumpus(x) → Vumpus(x)) ::: Each zumpus is a vumpus.\n∀x (Vumpus(x) → Shy(x)) ::: Vumpuses are shy.\n∀x (Vumpus(x) → Jompus(x)) ::: Each vumpus is a jompus.\nWumpus(polly) ::: Polly is a wumpus.\nConclusion:\nSmall(polly) ::: Polly is small.\n------"
    ]
  },
  {
    "id": "ProntoQA_479",
    "context": "Wumpuses are not bitter. Every impus is not blue. Impuses are rompuses. Every rompus is temperate. Each rompus is a zumpus. Every zumpus is not small. Zumpuses are yumpuses. Yumpuses are not wooden. Yumpuses are tumpuses. Every tumpus is happy. Tumpuses are numpuses. Numpuses are transparent. Numpuses are dumpuses. Every dumpus is bitter. Each dumpus is a jompus. Jompuses are not amenable. Each jompus is a vumpus. Sally is a zumpus.",
    "question": "Is the following statement true or false? Sally is not bitter.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nWumpus(x) ::: x is a wumpus\nBitter(x) ::: x is bitter\nImpus(x) ::: x is an impus\nBlue(x) ::: x is blue\nRompus(x) ::: x is a rompus\nTemperate(x) ::: x is temperate\nZumpus(x) ::: x is a zumpus\nSmall(x) ::: x is small\nYumpus(x) ::: x is a yumpus\nWooden(x) ::: x is wooden\nTumpus(x) ::: x is a tumpus\nHappy(x) ::: x is happy\nNumpus(x) ::: x is a numpus\nTransparent(x) ::: x is transparent\nDumpus(x) ::: x is a dumpus\nAmenable(x) ::: x is amenable\nVumpus(x) ::: x is a vumpus\nJompus(x) ::: x is a jompus\nPremises:\n∀x (Wumpus(x) → ¬Bitter(x)) ::: Wumpuses are not bitter.\n∀x (Impus(x) → ¬Blue(x)) ::: Every impus is not blue.\n∀x (Rompus(x) → Temperate(x)) ::: Impuses are rompuses.\n∀x (Rompus(x) → Zumpus(x)) ::: Every rompus is a zumpus.\n∀x (Zumpus(x) → ¬Small(x)) ::: Every zumpus is not small.\n∀x (Yumpus(x) → ¬Wooden(x)) ::: Yumpuses are not wooden.\n∀x (Yumpus(x) → Tumpus(x)) ::: Yumpuses are tumpuses.\n∀x (Tumpus(x) → Happy(x)) ::: Every tumpus is happy.\n∀x (Tumpus(x) → Numpus(x)) ::: Tumpuses are numpuses.\n∀x (Numpus(x) → Transparent(x)) ::: Numpuses are transparent.\n∀x (Numpus(x) → Dumpus(x)) ::: Numpuses are dumpuses.\n∀x (Dumpus(x) → Bitter(x)) ::: Every dumpus is bitter.\n∀x (Dumpus(x) → Jompus(x)) ::: Each dumpus is a jompus.\n∀x (Jompus(x) → ¬Amenable(x)) ::: Jompuses are not amenable.\n∀x (Jompus(x) → Vumpus(x)) ::: Each jompus is a vumpus.\nZumpus(sally) ::: Sally is a zumpus.\nConclusion:\n¬Bitter(sally) ::: Sally is not bitter.\n------"
    ]
  },
  {
    "id": "ProntoQA_480",
    "context": "Rompuses are not temperate. Each rompus is a jompus. Jompuses are nervous. Jompuses are tumpuses. Tumpuses are small. Tumpuses are impuses. Every impus is orange. Every impus is a vumpus. Vumpuses are not dull. Vumpuses are yumpuses. Every yumpus is luminous. Each wumpus is dull. Yumpuses are dumpuses. Dumpuses are transparent. Dumpuses are zumpuses. Each zumpus is angry. Each zumpus is a numpus. Stella is a rompus.",
    "question": "Is the following statement true or false? Stella is not dull.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nRompus(x) ::: x is a rompus\nTemperate(x) ::: x is temperate\nJompus(x) ::: x is a jompus\nNervous(x) ::: x is nervous\nTumpus(x) ::: x is a tumpus\nSmall(x) ::: x is small\nImpus(x) ::: x is an impus\nOrange(x) ::: x is orange\nVumpus(x) ::: x is a vumpus\nDull(x) ::: x is dull\nYumpus(x) ::: x is a yumpus\nLuminous(x) ::: x is luminous\nWumpus(x) ::: x is a wumpus\nDumpus(x) ::: x is a dumpus\nTransparent(x) ::: x is transparent\nZumpus(x) ::: x is a zumpus\nAngry(x) ::: x is angry\nNumpus(x) ::: x is a numpus\nStella(x) ::: x is Stella\nPremises:\n∀x (Rompus(x) → ¬Temperate(x)) ::: Rompuses are not temperate.\n∀x (Jompus(x) → Nervous(x)) ::: Each jompus is nervous.\n∀x (Jompus(x) → Tumpus(x)) ::: Jompuses are tumpuses.\n∀x (Tumpus(x) → Small(x)) ::: Tumpuses are small.\n∀x (Tumpus(x) → Impus(x)) ::: Tumpuses are impuses.\n∀x (Impus(x) → Orange(x)) ::: Every impus is orange.\n∀x (Impus(x) → Vumpus(x)) ::: Every impus is a vumpus.\n∀x (Vumpus(x) → ¬Dull(x)) ::: Vumpuses are not dull.\n∀x (Vumpus(x) → Yumpus(x)) ::: Vumpuses are yumpuses.\n∀x (Yumpus(x) → Luminous(x)) ::: Every yumpus is luminous.\n∀x (Wumpus(x) → Dull(x)) ::: Each wumpus is dull.\n∀x (Yumpus(x) → Dumpus(x)) ::: Yumpuses are dumpuses.\n∀x (Dumpus(x) → Transparent(x)) ::: Dumpuses are transparent.\n∀x (Dumpus(x) → Zumpus(x)) ::: Dumpuses are zumpuses.\n∀x (Zumpus(x) → Angry(x)) ::: Each zumpus is angry.\n∀x (Zumpus(x) → Numpus(x)) ::: Each zumpus is a numpus.\nRompus(stella) ::: Stella is a rompus.\nConclusion:\n¬Dull(stella) ::: Stella is not dull.\n------"
    ]
  },
  {
    "id": "ProntoQA_481",
    "context": "Each tumpus is sweet. Each tumpus is a wumpus. Wumpuses are not orange. Wumpuses are dumpuses. Every dumpus is not temperate. Dumpuses are jompuses. Every jompus is kind. Every jompus is a numpus. Numpuses are liquid. Numpuses are zumpuses. Each zumpus is large. Each zumpus is a vumpus. Every vumpus is happy. Each impus is not happy. Every vumpus is a yumpus. Yumpuses are transparent. Yumpuses are rompuses. Polly is a dumpus.",
    "question": "Is the following statement true or false? Polly is happy.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nTumpus(x) ::: x is a tumpus\nSweet(x) ::: x is sweet\nWumpus(x) ::: x is a wumpus\nOrange(x) ::: x is orange\nDumpus(x) ::: x is a dumpus\nTemperate(x) ::: x is temperate\nJompus(x) ::: x is a jompus\nKind(x) ::: x is kind\nNumpus(x) ::: x is a numpus\nLiquid(x) ::: x is liquid\nZumpus(x) ::: x is a zumpus\nLarge(x) ::: x is large\nVumpus(x) ::: x is a vumpus\nHappy(x) ::: x is happy\nImpus(x) ::: x is an impus\nYumpus(x) ::: x is a yumpus\nRompus(x) ::: x is a rompus\nPremises:\n∀x (Tumpus(x) → Sweet(x)) ::: Each tumpus is sweet.\n∀x (Tumpus(x) → Wumpus(x)) ::: Each tumpus is a wumpus.\n∀x (Wumpus(x) → ¬Orange(x)) ::: Wumpuses are not orange.\n∀x (Dumpus(x) → Jompus(x)) ::: Dumpuses are jompuses.\n∀x (Jompus(x) → Kind(x)) ::: Every jompus is kind.\n∀x (Jompus(x) → Numpus(x)) ::: Every jompus is a numpus.\n∀x (Numpus(x) → Liquid(x)) ::: Numpuses are liquid.\n∀x (Numpus(x) → Zumpus(x)) ::: Numpuses are zumpuses.\n∀x (Zumpus(x) → Large(x)) ::: Each zumpus is large.\n∀x (Zumpus(x) → Vumpus(x)) ::: Each zumpus is a vumpus.\n∀x (Vumpus(x) → Happy(x)) ::: Every vumpus is happy.\n∀x (Impus(x) → ¬Happy(x)) ::: Each impus is not happy.\n∀x (Vumpus(x) → Yumpus(x)) ::: Every vumpus is a yumpus.\n∀x (Yumpus(x) → Transparent(x)) ::: Yumpuses are transparent.\n∀x (Yumpus(x) → Rompus(x)) ::: Yumpuses are rompuses.\nDumpus(polly) ::: Polly is a dumpus.\nConclusion:\nHappy(polly) ::: Polly is happy.\n------"
    ]
  },
  {
    "id": "ProntoQA_482",
    "context": "Zumpuses are angry. Zumpuses are jompuses. Every jompus is not happy. Each jompus is a tumpus. Tumpuses are not earthy. Tumpuses are wumpuses. Each wumpus is blue. Every wumpus is a rompus. Rompuses are not transparent. Every rompus is a numpus. Every numpus is sweet. Numpuses are yumpuses. Yumpuses are not large. Every yumpus is a vumpus. Every impus is temperate. Every vumpus is not temperate. Each vumpus is a dumpus. Rex is a wumpus.",
    "question": "Is the following statement true or false? Rex is temperate.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nZumpus(x) ::: x is a zumpus\nAngry(x) ::: x is angry\nJompus(x) ::: x is a jompus\nHappy(x) ::: x is happy\nTumpus(x) ::: x is a tumpus\nEarthy(x) ::: x is earthy\nWumpus(x) ::: x is a wumpus\nBlue(x) ::: x is blue\nRompus(x) ::: x is a rompus\nTransparent(x) ::: x is transparent\nNumpus(x) ::: x is a numpus\nSweet(x) ::: x is sweet\nYumpus(x) ::: x is a yumpus\nLarge(x) ::: x is large\nVumpus(x) ::: x is a vumpus\nImpus(x) ::: x is an impus\nTemperate(x) ::: x is temperate\nDumpus(x) ::: x is a dumpus\nPremises:\n∀x (Zumpus(x) → Angry(x)) ::: Zumpuses are angry.\n∀x (Zumpus(x) → Jompus(x)) ::: Zumpuses are jompuses.\n∀x (Jompus(x) → ¬Happy(x)) ::: Every jompus is not happy.\n∀x (Jompus(x) → Tumpus(x)) ::: Each jompus is a tumpus.\n∀x (Tumpus(x) → ¬Earthy(x)) ::: Tumpuses are not earthy.\n∀x (Tumpus(x) → Wumpus(x)) ::: Tumpuses are wumpuses.\n∀x (Wumpus(x) → Blue(x)) ::: Every wumpus is blue.\n∀x (Wumpus(x) → Rompus(x)) ::: Every wumpus is a rompus.\n∀x (Rompus(x) → ¬Transparent(x)) ::: Rompuses are not transparent.\n∀x (Rompus(x) → Numpus(x)) ::: Every rompus is a numpus.\n∀x (Numpus(x) → Sweet(x)) ::: Every numpus is sweet.\n∀x (Numpus(x) → Yumpus(x)) ::: Numpuses are yumpuses.\n∀x (Yumpus(x) → ¬Large(x)) ::: Yumpuses are not large.\n∀x (Yumpus(x) → Vumpus(x)) ::: Every yumpus is a vumpus.\n∀x (Impus(x) → Temperate(x)) ::: Every impus is temperate.\n∀x (Vumpus(x) → ¬Temperate(x)) ::: Every vumpus is not temperate.\n∀x (Vumpus(x) → Dumpus(x)) ::: Each vumpus is a dumpus.\nWumpus(rex) ::: Rex is a wumpus.\nConclusion:\nTemperate(rex) ::: Rex is temperate.\n------"
    ]
  },
  {
    "id": "ProntoQA_483",
    "context": "Each numpus is not transparent. Every numpus is a jompus. Jompuses are not shy. Each jompus is a zumpus. Zumpuses are not small. Zumpuses are dumpuses. Every dumpus is bitter. Each dumpus is a vumpus. Each vumpus is not amenable. Each vumpus is a wumpus. Each wumpus is not temperate. Wumpuses are tumpuses. Every impus is not red. Every tumpus is red. Tumpuses are rompuses. Rompuses are wooden. Rompuses are yumpuses. Sally is a zumpus.",
    "question": "Is the following statement true or false? Sally is not red.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nNumpus(x) ::: x is a numpus\nTransparent(x) ::: x is transparent\nJompus(x) ::: x is a jompus\nShy(x) ::: x is shy\nZumpus(x) ::: x is a zumpus\nSmall(x) ::: x is small\nDumpus(x) ::: x is a dumpus\nBitter(x) ::: x is bitter\nVumpus(x) ::: x is a vumpus\nAmenable(x) ::: x is amenable\nWumpus(x) ::: x is a wumpus\nTemperate(x) ::: x is temperate\nTumpus(x) ::: x is a tumpus\nRed(x) ::: x is red\nRompus(x) ::: x is a rompus\nWooden(x) ::: x is wooden\nYumpus(x) ::: x is a yumpus\nPremises:\n∀x (Numpus(x) → ¬Transparent(x)) ::: Each numpus is not transparent.\n∀x (Jompus(x) → ¬Shy(x)) ::: Every numpus is a jompus. Jompuses are not shy.\n∀x (Zumpus(x) → ¬Small(x)) ::: Each jompus is a zumpus. Zumpuses are not small.\n∀x (Zumpus(x) → Dumpus(x)) ::: Zumpuses are dumpuses.\n∀x (Dumpus(x) → Bitter(x)) ::: Every dumpus is bitter.\n∀x (Dumpus(x) → Vumpus(x)) ::: Each dumpus is a vumpus.\n∀x (Vumpus(x) → ¬Amenable(x)) ::: Each vumpus is not amenable.\n∀x (Vumpus(x) → Wumpus(x)) ::: Each vumpus is a wumpus.\n∀x (Wumpus(x) → ¬Temperate(x)) ::: Each wumpus is not temperate.\n∀x (Wumpus(x) → Tumpus(x)) ::: Wumpuses are tumpuses.\n∀x (Impus(x) → ¬Red(x)) ::: Every impus is not red.\n∀x (Tumpus(x) → Red(x)) ::: Tumpuses are red.\n∀x (Tumpus(x) → Rompus(x)) ::: Tumpuses are rompuses.\n∀x (Rompus(x) → Wooden(x)) ::: Rompuses are wooden.\n∀x (Rompus(x) → Yumpus(x)) ::: Rompuses are yumpuses.\nZumpus(sally) ::: Sally is a zumpus.\nConclusion:\n¬Red(sally) ::: Sally is not red.\n------"
    ]
  },
  {
    "id": "ProntoQA_484",
    "context": "Every tumpus is fruity. Tumpuses are yumpuses. Yumpuses are not transparent. Yumpuses are rompuses. Every rompus is sour. Rompuses are numpuses. Every jompus is orange. Every numpus is dull. Every numpus is a dumpus. Every dumpus is not metallic. Dumpuses are vumpuses. Every vumpus is not orange. Every vumpus is a wumpus. Each wumpus is large. Wumpuses are zumpuses. Each zumpus is not temperate. Every zumpus is an impus. Fae is a yumpus.",
    "question": "Is the following statement true or false? Fae is not orange.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nTumpus(x) ::: x is a tumpus\nFruity(x) ::: x is fruity\nYumpus(x) ::: x is a yumpus\nTransparent(x) ::: x is transparent\nRompus(x) ::: x is a rompus\nSour(x) ::: x is sour\nNumpus(x) ::: x is a numpus\nDull(x) ::: x is dull\nDumpus(x) ::: x is a dumpus\nMetallic(x) ::: x is metallic\nVumpus(x) ::: x is a vumpus\nOrange(x) ::: x is orange\nWumpus(x) ::: x is a wumpus\nLarge(x) ::: x is large\nZumpus(x) ::: x is a zumpus\nTemperate(x) ::: x is temperate\nImpus(x) ::: x is an impus\nPremises:\n∀x (Tumpus(x) → Fruity(x)) ::: Every tumpus is fruity.\n∀x (Tumpus(x) → Yumpus(x)) ::: Tumpuses are yumpuses.\n∀x (Yumpus(x) → ¬Transparent(x)) ::: Yumpuses are not transparent.\n∀x (Yumpus(x) → Rompus(x)) ::: Yumpuses are rompuses.\n∀x (Rompus(x) → Sour(x)) ::: Every rompus is sour.\n∀x (Rompus(x) → Numpus(x)) ::: Rompuses are numpuses.\n∀x (Jompus(x) → Orange(x)) ::: Every jompus is orange.\n∀x (Numpus(x) → Dull(x)) ::: Every numpus is dull.\n∀x (Numpus(x) → Dumpus(x)) ::: Every numpus is a dumpus.\n∀x (Dumpus(x) → ¬Metallic(x)) ::: Every dumpus is not metallic.\n∀x (Dumpus(x) → Vumpus(x)) ::: Dumpuses are vumpuses.\n∀x (Vumpus(x) → ¬Orange(x)) ::: Every vumpus is not orange.\n∀x (Vumpus(x) → Wumpus(x)) ::: Every vumpus is a wumpus.\n∀x (Wumpus(x) → Large(x)) ::: Each wumpus is large.\n∀x (Wumpus(x) → Zumpus(x)) ::: Wumpuses are zumpuses.\n∀x (Zumpus(x) → ¬Temperate(x)) ::: Each zumpus is not temperate.\n∀x (Zumpus(x) → Impus(x)) ::: Every zumpus is an impus.\nYumpus(fae) ::: Fae is a yumpus.\nConclusion:\n¬Orange(fae) ::: Fae is not orange.\n------"
    ]
  },
  {
    "id": "ProntoQA_485",
    "context": "Tumpuses are not bright. Each tumpus is a jompus. Every jompus is hot. Each jompus is a numpus. Each numpus is not kind. Every numpus is an impus. Impuses are blue. Impuses are zumpuses. Every zumpus is small. Zumpuses are wumpuses. Wumpuses are luminous. Wumpuses are yumpuses. Every yumpus is shy. Each dumpus is not luminous. Every yumpus is a rompus. Stella is a jompus.",
    "question": "Is the following statement true or false? Stella is not luminous.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nTumpus(x) ::: x is a tumpus\nBright(x) ::: x is bright\nJompus(x) ::: x is a jompus\nHot(x) ::: x is hot\nNumpus(x) ::: x is a numpus\nKind(x) ::: x is kind\nImpus(x) ::: x is an impus\nBlue(x) ::: x is blue\nZumpus(x) ::: x is a zumpus\nSmall(x) ::: x is small\nWumpus(x) ::: x is a wumpus\nLuminous(x) ::: x is luminous\nYumpus(x) ::: x is a yumpus\nShy(x) ::: x is shy\nDumpus(x) ::: x is a dumpus\nPremises:\n∀x (Tumpus(x) → ¬Bright(x)) ::: Tumpuses are not bright.\n∀x (Tumpus(x) → Jompus(x)) ::: Each tumpus is a jompus.\n∀x (Jompus(x) → Hot(x)) ::: Every jompus is hot.\n∀x (Numpus(x) → ¬Kind(x)) ::: Each numpus is not kind.\n∀x (Numpus(x) → Impus(x)) ::: Every numpus is an impus.\n∀x (Impus(x) → Blue(x)) ::: Impuses are blue.\n∀x (Impus(x) → Zumpus(x)) ::: Impuses are zumpuses.\n∀x (Zumpus(x) → Small(x)) ::: Every zumpus is small.\n∀x (Zumpus(x) → Wumpus(x)) ::: Zumpuses are wumpuses.\n∀x (Wumpus(x) → Luminous(x)) ::: Wumpuses are luminous.\n∀x (Wumpus(x) → Yumpus(x)) ::: Wumpuses are yumpuses.\n∀x (Yumpus(x) → Shy(x)) ::: Every yumpus is shy.\n∀x (Dumpus(x) → ¬Luminous(x)) ::: Each dumpus is not luminous.\n∀x (Yumpus(x) → Rompus(x)) ::: Every yumpus is a rompus.\nJompus(stella) ::: Stella is a jompus.\nConclusion:\n¬Luminous(stella) ::: Stella is not luminous.\n------"
    ]
  },
  {
    "id": "ProntoQA_486",
    "context": "Impuses are not blue. Every impus is a numpus. Numpuses are bitter. Numpuses are yumpuses. Yumpuses are not temperate. Each yumpus is a jompus. Rompuses are not opaque. Every jompus is metallic. Every jompus is a tumpus. Tumpuses are opaque. Every tumpus is a dumpus. Every dumpus is nervous. Dumpuses are zumpuses. Zumpuses are amenable. Zumpuses are wumpuses. Every wumpus is not fruity. Every wumpus is a vumpus. Sam is an impus.",
    "question": "Is the following statement true or false? Sam is opaque.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nImpus(x) ::: x is an impus\nBlue(x) ::: x is blue\nNumpus(x) ::: x is a numpus\nBitter(x) ::: x is bitter\nYumpus(x) ::: x is a yumpus\nTemperate(x) ::: x is temperate\nJompus(x) ::: x is a jompus\nRompus(x) ::: x is a rompus\nOpaque(x) ::: x is opaque\nMetallic(x) ::: x is metallic\nTumpus(x) ::: x is a tumpus\nDumpus(x) ::: x is a dumpus\nNervous(x) ::: x is nervous\nZumpus(x) ::: x is a zumpus\nAmenable(x) ::: x is amenable\nWumpus(x) ::: x is a wumpus\nFruity(x) ::: x is fruity\nVumpus(x) ::: x is a vumpus\nPremises:\n∀x (Impus(x) → ¬Blue(x)) ::: Impuses are not blue.\n∀x (Numpus(x) → Bitter(x)) ::: Every impus is a numpus. Numpuses are bitter.\n∀x (Yumpus(x) → Temperate(x)) ::: Numpuses are yumpuses. Yumpuses are not temperate.\n∀x (Yumpus(x) → Jompus(x)) ::: Every yumpus is a jompus.\n∀x (Rompus(x) → ¬Opaque(x)) ::: Rompuses are not opaque.\n∀x (Jompus(x) → Metallic(x)) ::: Every jompus is metallic.\n∀x (Jompus(x) → Tumpus(x)) ::: Every jompus is a tumpus.\n∀x (Tumpus(x) → Opaque(x)) ::: Tumpuses are opaque.\n∀x (Tumpus(x) → Dumpus(x)) ::: Every tumpus is a dumpus.\n∀x (Dumpus(x) → Nervous(x)) ::: Every dumpus is nervous.\n∀x (Dumpus(x) → Zumpus(x)) ::: Dumpuses are zumpuses.\n∀x (Zumpus(x) → Amenable(x)) ::: Zumpuses are amenable.\n∀x (Zumpus(x) → Wumpus(x)) ::: Zumpuses are wumpuses.\n∀x (Wumpus(x) → ¬Fruity(x)) ::: Every wumpus is not fruity.\n∀x (Wumpus(x) → Vumpus(x)) ::: Every wumpus is a vumpus.\nImpus(sam) ::: Sam is an impus.\nConclusion:\nOpaque(sam) ::: Sam is opaque.\n------"
    ]
  },
  {
    "id": "ProntoQA_487",
    "context": "Wumpuses are aggressive. Wumpuses are jompuses. Each jompus is earthy. Jompuses are tumpuses. Each tumpus is bitter. Each tumpus is a vumpus. Vumpuses are large. Vumpuses are impuses. Impuses are bright. Each zumpus is not bright. Every impus is a rompus. Each rompus is feisty. Each rompus is a yumpus. Yumpuses are opaque. Each yumpus is a numpus. Each numpus is not wooden. Numpuses are dumpuses. Rex is a wumpus.",
    "question": "Is the following statement true or false? Rex is bright.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nWumpus(x) ::: x is a wumpus\nAggressive(x) ::: x is aggressive\nJompus(x) ::: x is a jompus\nEarthy(x) ::: x is earthy\nTumpus(x) ::: x is a tumpus\nBitter(x) ::: x is bitter\nVumpus(x) ::: x is a vumpus\nLarge(x) ::: x is large\nImpus(x) ::: x is an impus\nBright(x) ::: x is bright\nZumpus(x) ::: x is a zumpus\nRompus(x) ::: x is a rompus\nFeisty(x) ::: x is feisty\nYumpus(x) ::: x is a yumpus\nOpaque(x) ::: x is opaque\nNumpus(x) ::: x is a numpus\nDumpus(x) ::: x is a dumpus\nPremises:\n∀x (Wumpus(x) → Aggressive(x)) ::: Wumpuses are aggressive.\n∀x (Jompus(x) → Earthy(x)) ::: Jompuses are earthy.\n∀x (Jompus(x) → Tumpus(x)) ::: Each jompus is a tumpus.\n∀x (Tumpus(x) → Bitter(x)) ::: Each tumpus is bitter.\n∀x (Tumpus(x) → Vumpus(x)) ::: Each tumpus is a vumpus.\n∀x (Vumpus(x) → Large(x)) ::: Vumpuses are large.\n∀x (Vumpus(x) → Impus(x)) ::: Vumpuses are impuses.\n∀x (Impus(x) → Bright(x)) ::: Impuses are bright.\n∀x (Zumpus(x) → ¬Bright(x)) ::: Each zumpus is not bright.\n∀x (Impus(x) → Rompus(x)) ::: Each impus is a rompus.\n∀x (Rompus(x) → Feisty(x)) ::: Each rompus is feisty.\n∀x (Rompus(x) → Yumpus(x)) ::: Each rompus is a yumpus.\n∀x (Yumpus(x) → Opaque(x)) ::: Yumpuses are opaque.\n∀x (Yumpus(x) → Numpus(x)) ::: Each yumpus is a numpus.\n∀x (Numpus(x) → ¬Wooden(x)) ::: Each numpus is not wooden.\n∀x (Numpus(x) → Dumpus(x)) ::: Numpuses are dumpuses.\nWumpus(rex) ::: Rex is a wumpus.\nConclusion:\nBright(rex) ::: Rex is bright.\n------"
    ]
  },
  {
    "id": "ProntoQA_488",
    "context": "Tumpuses are wooden. Every tumpus is a yumpus. Yumpuses are sweet. Each yumpus is a dumpus. Dumpuses are dull. Dumpuses are rompuses. Rompuses are kind. Rompuses are jompuses. Jompuses are hot. Each numpus is not hot. Each jompus is a vumpus. Each vumpus is opaque. Every vumpus is a wumpus. Wumpuses are nervous. Every wumpus is a zumpus. Zumpuses are not brown. Each zumpus is an impus. Alex is a tumpus.",
    "question": "Is the following statement true or false? Alex is hot.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nTumpus(x) ::: x is a tumpus\nWooden(x) ::: x is wooden\nYumpus(x) ::: x is a yumpus\nSweet(x) ::: x is sweet\nDumpus(x) ::: x is a dumpus\nDull(x) ::: x is dull\nRompus(x) ::: x is a rompus\nKind(x) ::: x is kind\nJompus(x) ::: x is a jompus\nHot(x) ::: x is hot\nNumpus(x) ::: x is a numpus\nVumpus(x) ::: x is a vumpus\nOpaque(x) ::: x is opaque\nWumpus(x) ::: x is a wumpus\nNervous(x) ::: x is nervous\nZumpus(x) ::: x is a zumpus\nBrown(x) ::: x is brown\nImpus(x) ::: x is an impus\nPremises:\n∀x (Tumpus(x) → Wooden(x)) ::: Tumpuses are wooden.\n∀x (Tumpus(x) → Yumpus(x)) ::: Every tumpus is a yumpus.\n∀x (Yumpus(x) → Sweet(x)) ::: Yumpuses are sweet.\n∀x (Yumpus(x) → Dumpus(x)) ::: Each yumpus is a dumpus.\n∀x (Dumpus(x) → Dull(x)) ::: Dumpuses are dull.\n∀x (Dumpus(x) → Rompus(x)) ::: Dumpuses are rompuses.\n∀x (Rompus(x) → Kind(x)) ::: Rompuses are kind.\n∀x (Rompus(x) → Jompus(x)) ::: Rompuses are jompuses.\n∀x (Jompus(x) → Hot(x)) ::: Jompuses are hot.\n∀x (Numpus(x) → ¬Hot(x)) ::: Each numpus is not hot.\n∀x (Jompus(x) → Vumpus(x)) ::: Each jompus is a vumpus.\n∀x (Vumpus(x) → Opaque(x)) ::: Each vumpus is opaque.\n∀x (Vumpus(x) → Wumpus(x)) ::: Every vumpus is a wumpus.\n∀x (Wumpus(x) → Nervous(x)) ::: Wumpuses are nervous.\n∀x (Wumpus(x) → Zumpus(x)) ::: Every wumpus is a zumpus.\n∀x (Zumpus(x) → ¬Brown(x)) ::: Zumpuses are not brown.\n∀x (Zumpus(x) → Impus(x)) ::: Each zumpus is an impus.\nTumpus(alex) ::: Alex is a tumpus.\nConclusion:\nHot(alex) ::: Alex is hot.\n------"
    ]
  },
  {
    "id": "ProntoQA_489",
    "context": "Every zumpus is nervous. Zumpuses are vumpuses. Vumpuses are orange. Every vumpus is a tumpus. Tumpuses are kind. Every tumpus is a dumpus. Dumpuses are bitter. Each dumpus is a wumpus. Each wumpus is liquid. Wumpuses are yumpuses. Yumpuses are not bright. Every yumpus is a numpus. Each numpus is transparent. Numpuses are jompuses. Every jompus is not cold. Impuses are cold. Every jompus is a rompus. Rex is a dumpus.",
    "question": "Is the following statement true or false? Rex is cold.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nZumpus(x) ::: x is a zumpus\nNervous(x) ::: x is nervous\nVumpus(x) ::: x is a vumpus\nOrange(x) ::: x is orange\nTumpus(x) ::: x is a tumpus\nKind(x) ::: x is kind\nDumpus(x) ::: x is a dumpus\nBitter(x) ::: x is bitter\nWumpus(x) ::: x is a wumpus\nLiquid(x) ::: x is liquid\nYumpus(x) ::: x is a yumpus\nBright(x) ::: x is bright\nNumpus(x) ::: x is a numpus\nTransparent(x) ::: x is transparent\nJompus(x) ::: x is a jompus\nCold(x) ::: x is cold\nRompus(x) ::: x is a rompus\nPremises:\n∀x (Zumpus(x) → Nervous(x)) ::: Every zumpus is nervous.\n∀x (Zumpus(x) → Vumpus(x)) ::: Zumpuses are vumpuses.\n∀x (Vumpus(x) → Orange(x)) ::: Vumpuses are orange.\n∀x (Vumpus(x) → Tumpus(x)) ::: Every vumpus is a tumpus.\n∀x (Tumpus(x) → Kind(x)) ::: Tumpuses are kind.\n∀x (Tumpus(x) → Dumpus(x)) ::: Every tumpus is a dumpus.\n∀x (Dumpus(x) → Bitter(x)) ::: Dumpuses are bitter.\n∀x (Dumpus(x) → Wumpus(x)) ::: Each dumpus is a wumpus.\n∀x (Wumpus(x) → Liquid(x)) ::: Wumpuses are liquid.\n∀x (Wumpus(x) → Yumpus(x)) ::: Wumpuses are yumpuses.\n∀x (Yumpus(x) → ¬Bright(x)) ::: Yumpuses are not bright.\n∀x (Yumpus(x) → Numpus(x)) ::: Every yumpus is a numpus.\n∀x (Numpus(x) → Transparent(x)) ::: Numpuses are transparent.\n∀x (Numpus(x) → Jompus(x)) ::: Numpuses are jompuses.\n∀x (Jompus(x) → ¬Cold(x)) ::: Every jompus is not cold.\n∀x (Impus(x) → Cold(x)) ::: Impuses are cold.\n∀x (Jompus(x) → Rompus(x)) ::: Every jompus is a rompus.\nDumpus(rex) ::: Rex is a dumpus.\nConclusion:\nCold(rex) ::: Rex is cold.\n------"
    ]
  },
  {
    "id": "ProntoQA_490",
    "context": "Each wumpus is red. Each wumpus is an impus. Impuses are not transparent. Every impus is a jompus. Every jompus is happy. Jompuses are vumpuses. Vumpuses are bitter. Vumpuses are rompuses. Each rompus is mean. Rompuses are zumpuses. Zumpuses are small. Every zumpus is a tumpus. Each tumpus is not earthy. Dumpuses are bright. Every tumpus is a yumpus. Yumpuses are not bright. Each yumpus is a numpus. Max is a vumpus.",
    "question": "Is the following statement true or false? Max is bright.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nWumpus(x) ::: x is a wumpus\nRed(x) ::: x is red\nImpus(x) ::: x is an impus\nTransparent(x) ::: x is transparent\nJompus(x) ::: x is a jompus\nHappy(x) ::: x is happy\nVumpus(x) ::: x is a vumpus\nBitter(x) ::: x is bitter\nRompus(x) ::: x is a rompus\nMean(x) ::: x is mean\nZumpus(x) ::: x is a zumpus\nSmall(x) ::: x is small\nTumpus(x) ::: x is a tumpus\nEarthy(x) ::: x is earthy\nDumpus(x) ::: x is a dumpus\nBright(x) ::: x is bright\nYumpus(x) ::: x is a yumpus\nNumpus(x) ::: x is a numpus\nPremises:\n∀x (Wumpus(x) → Red(x)) ::: Each wumpus is red.\n∀x (Wumpus(x) → Impus(x)) ::: Each wumpus is an impus.\n∀x (Impus(x) → ¬Transparent(x)) ::: Impuses are not transparent.\n∀x (Jompus(x) → Happy(x)) ::: Every impus is a jompus.\n∀x (Jompus(x) → Vumpus(x)) ::: Every jompus is a vumpus.\n∀x (Vumpus(x) → Bitter(x)) ::: Vumpuses are bitter.\n∀x (Vumpus(x) → Rompus(x)) ::: Vumpuses are rompuses.\n∀x (Rompus(x) → Mean(x)) ::: Each rompus is mean.\n∀x (Rompus(x) → Zumpus(x)) ::: Rompuses are zumpuses.\n∀x (Zumpus(x) → Small(x)) ::: Zumpuses are small.\n∀x (Tumpus(x) → ¬Earthy(x)) ::: Every zumpus is a tumpus.\n∀x (Tumpus(x) → Dumpus(x)) ::: Each tumpus is a dumpus.\n∀x (Tumpus(x) → Bright(x)) ::: Each tumpus is bright.\n∀x (Yumpus(x) → ¬Bright(x)) ::: Yumpuses are not bright.\n∀x (Yumpus(x) → Numpus(x)) ::: Each yumpus is a numpus.\nWumpus(max) ::: Max is a wumpus.\nConclusion:\nBright(max) ::: Max is bright.\n------"
    ]
  },
  {
    "id": "ProntoQA_491",
    "context": "Each tumpus is wooden. Every tumpus is an impus. Numpuses are cold. Every impus is kind. Each impus is a jompus. Each jompus is feisty. Every jompus is a yumpus. Yumpuses are not red. Each yumpus is a rompus. Rompuses are large. Rompuses are vumpuses. Each vumpus is bright. Vumpuses are wumpuses. Wumpuses are not cold. Wumpuses are dumpuses. Dumpuses are opaque. Dumpuses are zumpuses. Stella is a jompus.",
    "question": "Is the following statement true or false? Stella is cold.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nTumpus(x) ::: x is a tumpus\nWooden(x) ::: x is wooden\nImpus(x) ::: x is an impus\nNumpus(x) ::: x is a numpus\nCold(x) ::: x is cold\nKind(x) ::: x is kind\nJompus(x) ::: x is a jompus\nFeisty(x) ::: x is feisty\nYumpus(x) ::: x is a yumpus\nRed(x) ::: x is red\nRompus(x) ::: x is a rompus\nLarge(x) ::: x is large\nVumpus(x) ::: x is a vumpus\nBright(x) ::: x is bright\nWumpus(x) ::: x is a wumpus\nCold(x) ::: x is cold\nDumpus(x) ::: x is a dumpus\nOpaque(x) ::: x is opaque\nZumpus(x) ::: x is a zumpus\nStella(x) ::: x is Stella\nPremises:\n∀x (Tumpus(x) → Wooden(x)) ::: Each tumpus is wooden.\n∀x (Tumpus(x) → Impus(x)) ::: Every tumpus is an impus.\n∀x (Numpus(x) → Cold(x)) ::: Numpuses are cold.\n∀x (Impus(x) → Kind(x)) ::: Every impus is kind.\n∀x (Impus(x) → Jompus(x)) ::: Each impus is a jompus.\n∀x (Jompus(x) → Feisty(x)) ::: Each jompus is feisty.\n∀x (Jompus(x) → Yumpus(x)) ::: Each jompus is a yumpus.\n∀x (Yumpus(x) → ¬Red(x)) ::: Yumpuses are not red.\n∀x (Yumpus(x) → Rompus(x)) ::: Each yumpus is a rompus.\n∀x (Rompus(x) → Large(x)) ::: Rompuses are large.\n∀x (Rompus(x) → Vumpus(x)) ::: Rompuses are vumpuses.\n∀x (Vumpus(x) → Bright(x)) ::: Vumpuses are bright.\n∀x (Vumpus(x) → Wumpus(x)) ::: Vumpuses are wumpuses.\n∀x (Wumpus(x) → ¬Cold(x)) ::: Wumpuses are not cold.\n∀x (Wumpus(x) → Dumpus(x)) ::: Wumpuses are dumpuses.\n∀x (Dumpus(x) → Opaque(x)) ::: Dumpuses are opaque.\n∀x (Dumpus(x) → Zumpus(x)) ::: Dumpuses are zumpuses.\nJompus(stella) ::: Stella is a jompus.\nConclusion:\nCold(stella) ::: Stella is cold.\n------"
    ]
  },
  {
    "id": "ProntoQA_492",
    "context": "Every jompus is kind. Jompuses are wumpuses. Each wumpus is dull. Every wumpus is a vumpus. Every vumpus is not nervous. Vumpuses are zumpuses. Zumpuses are not sour. Each zumpus is a yumpus. Every yumpus is wooden. Each yumpus is an impus. Impuses are not orange. Every impus is a tumpus. Each tumpus is cold. Dumpuses are orange. Tumpuses are rompuses. Rompuses are transparent. Rompuses are numpuses. Rex is a wumpus.",
    "question": "Is the following statement true or false? Rex is not orange.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nJompus(x) ::: x is a jompus\nKind(x) ::: x is kind\nWumpus(x) ::: x is a wumpus\nDull(x) ::: x is dull\nVumpus(x) ::: x is a vumpus\nNervous(x) ::: x is nervous\nZumpus(x) ::: x is a zumpus\nSour(x) ::: x is sour\nYumpus(x) ::: x is a yumpus\nWooden(x) ::: x is wooden\nImpus(x) ::: x is an impus\nOrange(x) ::: x is orange\nTumpus(x) ::: x is a tumpus\nCold(x) ::: x is cold\nDumpus(x) ::: x is a dumpus\nRompus(x) ::: x is a rompus\nTransparent(x) ::: x is transparent\nNumpus(x) ::: x is a numpus\nRex(x) ::: x is Rex\nPremises:\n∀x (Jompus(x) → Kind(x)) ::: Every jompus is kind.\n∀x (Jompus(x) → Wumpus(x)) ::: Jompuses are wumpuses.\n∀x (Wumpus(x) → Dull(x)) ::: Each wumpus is dull.\n∀x (Wumpus(x) → Vumpus(x)) ::: Every wumpus is a vumpus.\n∀x (Vumpus(x) → ¬Nervous(x)) ::: Vumpuses are not nervous.\n∀x (Zumpus(x) → ¬Sour(x)) ::: Zumpuses are not sour.\n∀x (Zumpus(x) → Yumpus(x)) ::: Each zumpus is a yumpus.\n∀x (Yumpus(x) → Wooden(x)) ::: Every yumpus is wooden.\n∀x (Yumpus(x) → Impus(x)) ::: Each yumpus is an impus.\n∀x (Impus(x) → ¬Orange(x)) ::: Impuses are not orange.\n∀x (Impus(x) → Tumpus(x)) ::: Every impus is a tumpus.\n∀x (Tumpus(x) → Cold(x)) ::: Each tumpus is cold.\n∀x (Dumpus(x) → Orange(x)) ::: Dumpuses are orange.\n∀x (Tumpus(x) → Rompus(x)) ::: Tumpuses are rompuses.\n∀x (Rompus(x) → Transparent(x)) ::: Rompuses are transparent.\n∀x (Rompus(x) → Numpus(x)) ::: Rompuses are numpuses.\nWumpus(rex) ::: Rex is a wumpus.\nConclusion:\n¬Orange(rex) ::: Rex is not orange.\n------"
    ]
  },
  {
    "id": "ProntoQA_493",
    "context": "Numpuses are angry. Every wumpus is not floral. Wumpuses are dumpuses. Dumpuses are feisty. Each dumpus is a zumpus. Each zumpus is not wooden. Each zumpus is an impus. Every impus is transparent. Impuses are vumpuses. Vumpuses are orange. Vumpuses are jompuses. Each jompus is not angry. Each jompus is a tumpus. Tumpuses are not spicy. Tumpuses are rompuses. Alex is a dumpus.",
    "question": "Is the following statement true or false? Alex is not angry.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant.lpg\n------"
    ]
  },
  {
    "id": "ProntoQA_494",
    "context": "Every vumpus is spicy. Each vumpus is a jompus. Every jompus is wooden. Jompuses are yumpuses. Yumpuses are dull. Every yumpus is an impus. Impuses are not transparent. Impuses are zumpuses. Zumpuses are not fruity. Every zumpus is a rompus. Each wumpus is fruity. Rompuses are not small. Rompuses are numpuses. Rex is a vumpus.",
    "question": "Is the following statement true or false? Rex is not fruity.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nVumpus(x) ::: x is a vumpus\nSpicy(x) ::: x is spicy\nJompus(x) ::: x is a jompus\nWooden(x) ::: x is wooden\nYumpus(x) ::: x is a yumpus\nDull(x) ::: x is dull\nImpus(x) ::: x is an impus\nTransparent(x) ::: x is transparent\nZumpus(x) ::: x is a zumpus\nFruity(x) ::: x is fruity\nRompus(x) ::: x is a rompus\nSmall(x) ::: x is small\nNumpus(x) ::: x is a numpus\nPremises:\n∀x (Vumpus(x) → Spicy(x)) ::: Every vumpus is spicy.\n∀x (Vumpus(x) → Jompus(x)) ::: Each vumpus is a jompus.\n∀x (Jompus(x) → Wooden(x)) ::: Every jompus is wooden.\n∀x (Jompus(x) → Yumpus(x)) ::: Jompuses are yumpuses.\n∀x (Yumpus(x) → Dull(x)) ::: Yumpuses are dull.\n∀x (Yumpus(x) → Impus(x)) ::: Every yumpus is an impus.\n∀x (Impus(x) → ¬Transparent(x)) ::: Impuses are not transparent.\n∀x (Impus(x) → Zumpus(x)) ::: Impuses are zumpuses.\n∀x (Zumpus(x) → ¬Fruity(x)) ::: Zumpuses are not fruity.\n∀x (Zumpus(x) → Rompus(x)) ::: Every zumpus is a rompus.\n∀x (Wumpus(x) → Fruity(x)) ::: Each wumpus is fruity.\n∀x (Rompus(x) → ¬Small(x)) ::: Rompuses are not small.\n∀x (Rompus(x) → Numpus(x)) ::: Rompuses are numpuses.\nVumpus(rex) ::: Rex is a vumpus.\nConclusion:\n¬Fruity(rex) ::: Rex is not fruity.\n------"
    ]
  },
  {
    "id": "ProntoQA_495",
    "context": "Each wumpus is nervous. Each wumpus is a vumpus. Vumpuses are not liquid. Vumpuses are tumpuses. Every tumpus is hot. Tumpuses are zumpuses. Every zumpus is sour. Each zumpus is a jompus. Jompuses are not floral. Every jompus is an impus. Every numpus is not orange. Impuses are orange. Each impus is a yumpus. Yumpuses are not opaque. Each yumpus is a rompus. Every rompus is small. Every rompus is a dumpus. Sam is a vumpus.",
    "question": "Is the following statement true or false? Sam is orange.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nWumpus(x) ::: x is a wumpus\nNervous(x) ::: x is nervous\nVumpus(x) ::: x is a vumpus\nLiquid(x) ::: x is liquid\nTumpus(x) ::: x is a tumpus\nHot(x) ::: x is hot\nZumpus(x) ::: x is a zumpus\nSour(x) ::: x is sour\nJompus(x) ::: x is a jompus\nFloral(x) ::: x is floral\nImpus(x) ::: x is an impus\nOrange(x) ::: x is orange\nYumpus(x) ::: x is a yumpus\nOpaque(x) ::: x is opaque\nRompus(x) ::: x is a rompus\nSmall(x) ::: x is small\nDumpus(x) ::: x is a dumpus\nPremises:\n∀x (Wumpus(x) → Nervous(x)) ::: Each wumpus is nervous.\n∀x (Wumpus(x) → Vumpus(x)) ::: Each wumpus is a vumpus.\n∀x (Vumpus(x) → ¬Liquid(x)) ::: Vumpuses are not liquid.\n∀x (Vumpus(x) → Tumpus(x)) ::: Vumpuses are tumpuses.\n∀x (Tumpus(x) → Hot(x)) ::: Every tumpus is hot.\n∀x (Tumpus(x) → Zumpus(x)) ::: Tumpuses are zumpuses.\n∀x (Zumpus(x) → Sour(x)) ::: Every zumpus is sour.\n∀x (Zumpus(x) → Jompus(x)) ::: Each zumpus is a jompus.\n∀x (Jompus(x) → ¬Floral(x)) ::: Jompuses are not floral.\n∀x (Jompus(x) → Impus(x)) ::: Every jompus is an impus.\n∀x (Numpus(x) → ¬Orange(x)) ::: Every numpus is not orange.\n∀x (Impus(x) → Orange(x)) ::: Impuses are orange.\n∀x (Impus(x) → Yumpus(x)) ::: Each impus is a yumpus.\n∀x (Yumpus(x) → ¬Opaque(x)) ::: Yumpuses are not opaque.\n∀x (Yumpus(x) → Rompus(x)) ::: Each yumpus is a rompus.\n∀x (Rompus(x) → Small(x)) ::: Every rompus is small.\n∀x (Rompus(x) → Dumpus(x)) ::: Every rompus is a dumpus.\nVumpus(sam) ::: Sam is a vumpus.\nConclusion:\nOrange(sam) ::: Sam is orange.\n------"
    ]
  },
  {
    "id": "ProntoQA_496",
    "context": "Each zumpus is not metallic. Every zumpus is a jompus. Rompuses are not aggressive. Jompuses are not red. Each jompus is a wumpus. Every wumpus is not nervous. Each wumpus is a tumpus. Tumpuses are transparent. Tumpuses are vumpuses. Every vumpus is cold. Each vumpus is a dumpus. Every dumpus is not dull. Each dumpus is a yumpus. Yumpuses are spicy. Yumpuses are numpuses. Numpuses are aggressive. Every numpus is an impus. Alex is a tumpus.",
    "question": "Is the following statement true or false? Alex is not aggressive.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nZumpus(x) ::: x is a zumpus\nMetallic(x) ::: x is metallic\nJompus(x) ::: x is a jompus\nAggressive(x) ::: x is aggressive\nRed(x) ::: x is red\nWumpus(x) ::: x is a wumpus\nNervous(x) ::: x is nervous\nTumpus(x) ::: x is a tumpus\nTransparent(x) ::: x is transparent\nVumpus(x) ::: x is a vumpus\nCold(x) ::: x is cold\nDumpus(x) ::: x is a dumpus\nDull(x) ::: x is dull\nYumpus(x) ::: x is a yumpus\nSpicy(x) ::: x is spicy\nNumpus(x) ::: x is a numpus\nAggressive(x) ::: x is aggressive\nImpus(x) ::: x is an impus\nPremises:\n∀x (Zumpus(x) → ¬Metallic(x)) ::: Each zumpus is not metallic.\n∀x (Zumpus(x) → Jompus(x)) ::: Every zumpus is a jompus.\n∀x (Rompus(x) → ¬Aggressive(x)) ::: Rompuses are not aggressive.\n∀x (Jompus(x) → ¬Red(x)) ::: Jompuses are not red.\n∀x (Jompus(x) → Wumpus(x)) ::: Each jompus is a wumpus.\n∀x (Wumpus(x) → ¬Nervous(x)) ::: Every wumpus is not nervous.\n∀x (Wumpus(x) → Tumpus(x)) ::: Each wumpus is a tumpus.\n∀x (Tumpus(x) → Transparent(x)) ::: Tumpuses are transparent.\n∀x (Tumpus(x) → Vumpus(x)) ::: Tumpuses are vumpuses.\n∀x (Vumpus(x) → Cold(x)) ::: Every vumpus is cold.\n∀x (Vumpus(x) → Dumpus(x)) ::: Each vumpus is a dumpus.\n∀x (Dumpus(x) → ¬Dull(x)) ::: Every dumpus is not dull.\n∀x (Dumpus(x) → Yumpus(x)) ::: Each dumpus is a yumpus.\n∀x (Yumpus(x) → Spicy(x)) ::: Yumpuses are spicy.\n∀x (Yumpus(x) → Numpus(x)) ::: Yumpuses are numpuses.\n∀x (Numpus(x) → Aggressive(x)) ::: Numpuses are aggressive.\n∀x (Numpus(x) → Impus(x)) ::: Every numpus is an impus.\nTumpus(alex) ::: Alex is a tumpus.\nConclusion:\n¬Aggressive(alex) ::: Alex is not aggressive.\n------"
    ]
  },
  {
    "id": "ProntoQA_497",
    "context": "Yumpuses are metallic. Yumpuses are wumpuses. Every wumpus is nervous. Every wumpus is a zumpus. Every zumpus is not sour. Zumpuses are numpuses. Each numpus is kind. Numpuses are rompuses. Rompuses are small. Every rompus is an impus. Every impus is not opaque. Impuses are dumpuses. Jompuses are not small. Dumpuses are not dull. Each dumpus is a vumpus. Each vumpus is orange. Each vumpus is a tumpus. Stella is a yumpus.",
    "question": "Is the following statement true or false? Stella is not small.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nYumpus(x) ::: x is a yumpus\nMetallic(x) ::: x is metallic\nWumpus(x) ::: x is a wumpus\nNervous(x) ::: x is nervous\nZumpus(x) ::: x is a zumpus\nSour(x) ::: x is sour\nNumpus(x) ::: x is a numpus\nKind(x) ::: x is kind\nRompus(x) ::: x is a rompus\nSmall(x) ::: x is small\nImpus(x) ::: x is an impus\nOpaque(x) ::: x is opaque\nDumpus(x) ::: x is a dumpus\nDull(x) ::: x is dull\nVumpus(x) ::: x is a vumpus\nOrange(x) ::: x is orange\nTumpus(x) ::: x is a tumpus\nStella(x) ::: x is Stella\nPremises:\n∀x (Yumpus(x) → Metallic(x)) ::: Yumpuses are metallic.\n∀x (Yumpus(x) → Wumpus(x)) ::: Yumpuses are wumpuses.\n∀x (Wumpus(x) → Nervous(x)) ::: Every wumpus is nervous.\n∀x (Wumpus(x) → Zumpus(x)) ::: Every wumpus is a zumpus.\n∀x (Zumpus(x) → ¬Sour(x)) ::: Every zumpus is not sour.\n∀x (Zumpus(x) → Numpus(x)) ::: Zumpuses are numpuses.\n∀x (Numpus(x) → Kind(x)) ::: Each numpus is kind.\n∀x (Numpus(x) → Rompus(x)) ::: Numpuses are rompuses.\n∀x (Rompus(x) → Small(x)) ::: Rompuses are small.\n∀x (Rompus(x) → Impus(x)) ::: Every rompus is an impus.\n∀x (Impus(x) → ¬Opaque(x)) ::: Impuses are not opaque.\n∀x (Impus(x) → Dumpus(x)) ::: Impuses are dumpuses.\n∀x (Jompus(x) → ¬Small(x)) ::: Jompuses are not small.\n∀x (Dumpus(x) → ¬Dull(x)) ::: Dumpuses are not dull.\n∀x (Dumpus(x) → Vumpus(x)) ::: Each dumpus is a vumpus.\n∀x (Vumpus(x) → Orange(x)) ::: Each vumpus is orange.\n∀x (Vumpus(x) → Tumpus(x)) ::: Each vumpus is a tumpus.\nYumpus(stella) ::: Stella is a yumpus.\nConclusion:\n¬Small(stella) ::: Stella is not small.\n------"
    ]
  },
  {
    "id": "ProntoQA_498",
    "context": "Jompuses are earthy. Every jompus is a dumpus. Dumpuses are liquid. Each vumpus is not sweet. Each dumpus is a wumpus. Wumpuses are transparent. Every wumpus is a numpus. Each numpus is aggressive. Each numpus is a zumpus. Zumpuses are brown. Zumpuses are tumpuses. Tumpuses are sweet. Tumpuses are rompuses. Every rompus is not dull. Every rompus is a yumpus. Yumpuses are temperate. Yumpuses are impuses. Rex is a dumpus.",
    "question": "Is the following statement true or false? Rex is not sweet.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nJompus(x) ::: x is a jompus\nEarthy(x) ::: x is earthy\nDumpus(x) ::: x is a dumpus\nLiquid(x) ::: x is liquid\nVumpus(x) ::: x is a vumpus\nSweet(x) ::: x is sweet\nWumpus(x) ::: x is a wumpus\nTransparent(x) ::: x is transparent\nNumpus(x) ::: x is a numpus\nAggressive(x) ::: x is aggressive\nZumpus(x) ::: x is a zumpus\nBrown(x) ::: x is brown\nTumpus(x) ::: x is a tumpus\nSweet(x) ::: x is sweet\nRompus(x) ::: x is a rompus\nDull(x) ::: x is dull\nYumpus(x) ::: x is a yumpus\nTemperate(x) ::: x is temperate\nImpus(x) ::: x is an impus\nPremises:\n∀x (Jompus(x) → Earthy(x)) ::: Jompuses are earthy.\n∀x (Jompus(x) → Dumpus(x)) ::: Every jompus is a dumpus.\n∀x (Dumpus(x) → Liquid(x)) ::: Dumpuses are liquid.\n∀x (Vumpus(x) → ¬Sweet(x)) ::: Each vumpus is not sweet.\n∀x (Dumpus(x) → Wumpus(x)) ::: Each dumpus is a wumpus.\n∀x (Wumpus(x) → Transparent(x)) ::: Wumpuses are transparent.\n∀x (Wumpus(x) → Numpus(x)) ::: Every wumpus is a numpus.\n∀x (Numpus(x) → Aggressive(x)) ::: Each numpus is aggressive.\n∀x (Numpus(x) → Zumpus(x)) ::: Each numpus is a zumpus.\n∀x (Zumpus(x) → Brown(x)) ::: Zumpuses are brown.\n∀x (Zumpus(x) → Tumpus(x)) ::: Zumpuses are tumpuses.\n∀x (Tumpus(x) → Sweet(x)) ::: Tumpuses are sweet.\n∀x (Tumpus(x) → Rompus(x)) ::: Tumpuses are rompuses.\n∀x (Rompus(x) → ¬Dull(x)) ::: Every rompus is not dull.\n∀x (Rompus(x) → Yumpus(x)) ::: Every rompus is a yumpus.\n∀x (Yumpus(x) → Temperate(x)) ::: Yumpuses are temperate.\n∀x (Yumpus(x) → Impus(x)) ::: Yumpuses are impuses.\nDumpus(rex) ::: Rex is a dumpus.\nConclusion:\n¬Sweet(rex) ::: Rex is not sweet.\n------"
    ]
  },
  {
    "id": "ProntoQA_499",
    "context": "Every wumpus is brown. Every wumpus is a dumpus. Every dumpus is dull. Dumpuses are yumpuses. Yumpuses are not metallic. Every yumpus is a tumpus. Tumpuses are sour. Tumpuses are numpuses. Every numpus is opaque. Each numpus is an impus. Each impus is small. Every impus is a jompus. Each zumpus is not small. Fae is a dumpus.",
    "question": "Is the following statement true or false? Fae is not small.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "------\n### Predicates:\nWumpus(x) ::: x is a wumpus\nBrown(x) ::: x is brown\nDumpus(x) ::: x is a dumpus\nDull(x) ::: x is dull\nYumpus(x) ::: x is a yumpus\nMetallic(x) ::: x is metallic\nTumpus(x) ::: x is a tumpus\nSour(x) ::: x is sour\nNumpus(x) ::: x is a numpus\nOpaque(x) ::: x is opaque\nImpus(x) ::: x is an impus\nSmall(x) ::: x is small\nJompus(x) ::: x is a jompus\nZumpus(x) ::: x is a zumpus\nPremises:\n∀x (Wumpus(x) → Brown(x)) ::: Every wumpus is brown.\n∀x (Wumpus(x) → Dumpus(x)) ::: Every wumpus is a dumpus.\n∀x (Dumpus(x) → Dull(x)) ::: Dumpuses are dull.\n∀x (Yumpus(x) → ¬Metallic(x)) ::: Yumpuses are not metallic.\n∀x (Yumpus(x) → Tumpus(x)) ::: Every yumpus is a tumpus.\n∀x (Tumpus(x) → Sour(x)) ::: Tumpuses are sour.\n∀x (Tumpus(x) → Numpus(x)) ::: Tumpuses are numpuses.\n∀x (Numpus(x) → Opaque(x)) ::: Every numpus is opaque.\n∀x (Numpus(x) → Impus(x)) ::: Each numpus is an impus.\n∀x (Impus(x) → Small(x)) ::: Each impus is small.\n∀x (Impus(x) → Jompus(x)) ::: Every impus is a jompus.\n∀x (Zumpus(x) → ¬Small(x)) ::: Each zumpus is not small.\nDumpus(fae) ::: Fae is a dumpus.\nConclusion:\n¬Small(fae) ::: Fae is not small.\n------"
    ]
  },
  {
    "id": "ProntoQA_500",
    "context": "Every zumpus is aggressive. Zumpuses are yumpuses. Wumpuses are not small. Each yumpus is not luminous. Every yumpus is a jompus. Jompuses are orange. Jompuses are numpuses. Each numpus is earthy. Each numpus is a rompus. Rompuses are not sweet. Each rompus is a vumpus. Every vumpus is bright. Each vumpus is a dumpus. Each dumpus is small. Dumpuses are tumpuses. Every tumpus is cold. Every tumpus is an impus. Polly is a jompus.",
    "question": "Is the following statement true or false? Polly is not small.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False"
    ],
    "raw_logic_programs": [
      "Assistant: Predicates:\nZumpus(x) ::: x is a zumpus\nAggressive(x) ::: x is aggressive\nYumpus(x) ::: x is a yumpus\nLuminous(x) ::: x is luminous\nJompus(x) ::: x is a jompus\nOrange(x) ::: x is orange\nNumpus(x) ::: x is a numpus\nEarthy(x) ::: x is earthy\nRompus(x) ::: x is a rompus\nSweet(x) ::: x is sweet\nVumpus(x) ::: x is a vumpus\nBright(x) ::: x is bright\nDumpus(x) ::: x is a dumpus\nSmall(x) ::: x is small\nTumpus(x) ::: x is a tumpus\nCold(x) ::: x is cold\nImpus(x) ::: x is an impus\nPremises:\n∀x (Zumpus(x) → Aggressive(x)) ::: Every zumpus is aggressive.\n∀x (Zumpus(x) → Yumpus(x)) ::: Zumpuses are yumpuses.\n∀x (Yumpus(x) → ¬Luminous(x)) ::: Wumpuses are not small.\n∀x (Yumpus(x) → Jompus(x)) ::: Each yumpus is a jompus.\n∀x (Jompus(x) → Orange(x)) ::: Jompuses are orange.\n∀x (Jompus(x) → Numpus(x)) ::: Jompuses are numpuses.\n∀x (Numpus(x) → Earthy(x)) ::: Each numpus is earthy.\n∀x (Numpus(x) → Rompus(x)) ::: Each numpus is a rompus.\n∀x (Rompus(x) → ¬Sweet(x)) ::: Rompuses are not sweet.\n∀x (Rompus(x) → Vumpus(x)) ::: Each rompus is a vumpus.\n∀x (Vumpus(x) → Bright(x)) ::: Every vumpus is bright.\n∀x (Vumpus(x) → Dumpus(x)) ::: Each vumpus is a dumpus.\n∀x (Dumpus(x) → Small(x)) ::: Each dumpus is small.\n∀x (Dumpus(x) → Tumpus(x)) ::: Dumpuses are tumpuses.\n∀x (Tumpus(x) → Cold(x)) ::: Every tumpus is cold.\n∀x (Tumpus(x) → Impus(x)) ::: Every tumpus is an impus.\nJompus(polly) ::: Polly is a jompus.\nConclusion:\n¬Small(polly) ::: Polly is not small.\n------"
    ]
  }
]