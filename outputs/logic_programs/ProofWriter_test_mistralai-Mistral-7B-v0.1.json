[
  {
    "id": "ProofWriter_RelNeg-OWA-D5-136_Q1",
    "context": "The bear does not chase the lion. The bear visits the lion. The bear visits the tiger. The lion chases the bear. The lion chases the tiger. The lion visits the bear. The rabbit chases the tiger. The rabbit is big. The rabbit is not green. The rabbit is young. The rabbit visits the tiger. The tiger chases the rabbit. The tiger is rough. The tiger visits the bear. If something chases the bear and it sees the rabbit then the bear does not visit the rabbit. If something chases the lion then the lion is rough. If the rabbit chases the tiger and the tiger visits the rabbit then the rabbit is not big. If something chases the lion then the lion does not visit the tiger. If something chases the rabbit and it chases the tiger then the rabbit chases the bear. If something is young and it does not see the rabbit then it sees the bear. If something visits the lion then it is young. If the tiger visits the bear and the bear is big then the tiger visits the lion. Young things are big.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bear visits the lion.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChase($x, $y, bool) ::: Does x chase y?\nVisit($x, $y, bool) ::: Does x visit y?\nSee($x, $y, bool) ::: Does x see y?\nBig($x, bool) ::: Is x big?\nGreen($x, bool) ::: Is x green?\nYoung($x, bool) ::: Is x young?\nRough($x, bool) ::: Is x rough?\nFacts:\nChase(Bear, Lion, False) ::: The bear does not chase the lion.\nVisit(Bear, Lion, True) ::: The bear visits the lion.\nVisit(Bear, Tiger, True) ::: The bear visits the tiger.\nChase(Bear, Lion, True) ::: The lion chases the bear.\nChase(Lion, Tiger, True) ::: The lion chases the tiger.\nVisit(Lion, Bear, True) ::: The lion visits the bear.\nChase(Rabbit, Tiger, False) ::: The rabbit does not chase the tiger.\nBig(Rabbit, False) ::: The rabbit is big.\nGreen(Rabbit, False) ::: The rabbit is not green.\nYoung(Rabbit, True) ::: The rabbit is young.\nVisit(Rabbit, Tiger, True) ::: The rabbit visits the tiger.\nChase(Tiger, Rabbit, True) ::: The tiger chases the rabbit.\nRough(Tiger, True) ::: The tiger is rough.\nVisit(Tiger, Bear, True) ::: The tiger visits the bear.\nRules:\nChase($x, $y, True) >>> See($x, $y, True) ::: If something chases the bear and it sees the rabbit then the bear does not visit the rabbit.\nChase($x, Lion, True) >>> Rough($x, True) ::: If something chases the lion then the lion is rough.\nChase(Rabbit, Tiger) && Visit(Tiger, Rabbit) >>> Big(Rabbit, False) ::: If the rabbit chases the tiger and the tiger visits the rabbit then the rabbit is not big.\nChase($x, Lion, True) >>> Visit($x, Tiger, False) ::: If something chases the lion then the lion does not visit the tiger.\nChase(Rabbit, Tiger) && Chase(Tiger, Rabbit) >>> Chase(Rabbit, Bear, True) ::: If something chases the rabbit and it chases the tiger then the rabbit chases the bear.\nSee($x, Rabbit, False) && Young($x, True) >>> See($x, Bear, True) ::: If something is young and it does not see the rabbit then it sees the bear.\nVisit($x, Lion, True) >>> Young($x, True) ::: If something visits the lion then it is young.\nVisit(Tiger, Bear) && Big(Bear, True) >>> Visit(Tiger, Lion, True) ::: If the tiger visits the bear and the bear is big then the tiger visits the lion.\nYoung($x, True) >>> Big($x, True) ::: Young things are big.\nQuery:\nVisit(Bear, Lion, True) ::: The bear visits the lion.\n------"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-99_Q17",
    "context": "The bald eagle is cold. The bald eagle sees the bear. The bear is big. The bear is not cold. The bear is green. The bear likes the cat. The cat chases the mouse. The cat is big. The cat is young. The cat likes the bald eagle. The mouse likes the cat. If something chases the cat and it likes the bald eagle then the bald eagle is not green. If something sees the cat then it does not chase the mouse. If something is cold then it sees the cat. If something likes the cat and it chases the bald eagle then it is not young. If something likes the bald eagle and the bald eagle does not chase the mouse then the mouse is big. If the cat chases the bear then the cat likes the mouse. If something chases the mouse and it is not green then it chases the bear. If the mouse is big then the mouse chases the bald eagle. If something is young and it likes the mouse then it chases the bald eagle.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bald eagle does not chase the bear.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nSees($x, $y, bool) ::: Does x see y?\nBig($x, bool) ::: Is x big?\nGreen($x, bool) ::: Is x green?\nLikes($x, $y, bool) ::: Does x like y?\nChases($x, $y, bool) ::: Does x chase y?\nYoung($x, bool) ::: Is x young?\nFacts:\nCold(BaldEagle, True) ::: The bald eagle is cold.\nSees(BaldEagle, Bear, True) ::: The bald eagle sees the bear.\nBig(Bear, True) ::: The bear is big.\nNot(Cold(Bear, True)) ::: The bear is not cold.\nGreen(Bear, True) ::: The bear is green.\nLikes(Bear, Cat, True) ::: The bear likes the cat.\nChases(Cat, Mouse, True) ::: The cat chases the mouse.\nBig(Cat, True) ::: The cat is big.\nYoung(Cat, True) ::: The cat is young.\nLikes(Cat, BaldEagle, True) ::: The cat likes the bald eagle.\nLikes(Mouse, Cat, True) ::: The mouse likes the cat.\nRules:\nNot(Chases(Cat, BaldEagle, True)) >>> Not(Likes(BaldEagle, Mouse, True)) ::: If something chases the cat and it likes the bald eagle then the bald eagle is not green.\nNot(Sees(Cat, Mouse, True)) >>> Not(Chases(Mouse, Bear, True)) ::: If something sees the cat then it does not chase the mouse.\nCold($x, True) >>> Sees($x, Cat, True) ::: If something is cold then it sees the cat.\nLikes(Cat, BaldEagle, True) && Chases(Cat, BaldEagle, True) >>> Not(Young(Cat, True)) ::: If something likes the cat and it chases the bald eagle then it is not young.\nLikes(BaldEagle, Mouse, True) && Not(Chases(Mouse, Bear, True)) >>> Big(Bear, True) ::: If the cat chases the bear then the cat likes the mouse.\nChases(Mouse, Bear, True) && Not(Green(Mouse, True)) >>> Chases(Mouse, Bear, True) ::: If the mouse is big then the mouse chases the bald eagle.\nYoung(Cat, True) && Likes(Cat, Mouse, True) >>> Chases(Cat, BaldEagle, True) ::: If something is young and it likes the mouse then it chases the bald eagle.\nQuery:\nNot(Chases(BaldEagle, Bear, True)) ::: The bald eagle does not chase the bear.\n------\nProblem:\nThe cat is furry. The cat is green. The cat is young. The cat is white. The cat is rough. The cat is quiet. The cat is red. The cat is big. The cat is not furry. The cat is not green. The cat is not young. The cat is not white. The cat is not rough. The cat is not quiet. The cat is not red. The cat is not big. The cat is not cold. The cat is not rough. The cat is not quiet. The cat is not red. The cat is not big. The"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-295_Q20",
    "context": "The bald eagle needs the lion. The bald eagle needs the mouse. The bear likes the bald eagle. The bear needs the lion. The bear sees the bald eagle. The lion is blue. The mouse sees the bear. If something sees the lion then it likes the bald eagle. If something likes the bear then it likes the bald eagle. If something needs the bear and the bear is blue then the bear is round. If something likes the mouse then the mouse sees the bear. If something likes the mouse and the mouse is nice then it likes the bear. If something needs the lion and it likes the bald eagle then it likes the mouse. If something likes the bear and it likes the mouse then the mouse needs the bear. If something needs the bear then it likes the bear. If something likes the bald eagle then it needs the bear.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bald eagle sees the bear.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNeeds($x, $y, bool) ::: Does x need y?\nLikes($x, $y, bool) ::: Does x like y?\nSees($x, $y, bool) ::: Does x see y?\nIs($x, $y, bool) ::: Is x y?\nRound($x, bool) ::: Is x round?\nBlue($x, bool) ::: Is x blue?\nNice($x, bool) ::: Is x nice?\nFacts:\nNeeds(BaldEagle, Lion, True) ::: The bald eagle needs the lion.\nNeeds(BaldEagle, Mouse, True) ::: The bald eagle needs the mouse.\nLikes(Bear, BaldEagle, True) ::: The bear likes the bald eagle.\nNeeds(Bear, Lion, True) ::: The bear needs the lion.\nSees(Bear, BaldEagle, True) ::: The bear sees the bald eagle.\nIs(Lion, Blue, True) ::: The lion is blue.\nSees(Mouse, Bear, True) ::: The mouse sees the bear.\nRules:\nSees($x, $y, True) >>> Likes($x, $y, True) ::: If something sees the lion then it likes the bald eagle.\nLikes($x, $y, True) >>> Likes($x, $y, True) ::: If something likes the bear then it likes the bald eagle.\nNeeds($x, $y, True) && Is($y, Blue, True) >>> Is($x, Round, True) ::: If something needs the bear and the bear is blue then the bear is round.\nLikes($x, $y, True) && Likes($x, $z, True) >>> Likes($y, $z, True) ::: If something likes the mouse then the mouse sees the bear.\nLikes($x, $y, True) && Likes($x, $z, True) && Nice($z, True) >>> Likes($x, $y, True) ::: If something likes the mouse and the mouse is nice then it likes the bear.\nNeeds($x, $y, True) && Likes($x, $z, True) >>> Likes($x, $y, True) ::: If something needs the lion and it likes the bald eagle then it likes the mouse.\nLikes($x, $y, True) && Likes($x, $z, True) >>> Needs($y, $z, True) ::: If something likes the bear and it likes the mouse then the mouse needs the bear.\nLikes($x, $y, True) >>> Needs($x, $y, True) ::: If something likes the bald eagle then it needs the bear.\nQuery:\nSees(BaldEagle, Bear, True) ::: The bald eagle sees the bear.\n------\nProblem:\nThe bear is furry. The bear is green. The bear is red. The bear is white. The bear is young. The bear is quiet. The bear is rough. The bear is round. The bear is blue. The bear is nice. The bear is furry. The bear is green. The bear is red. The bear is white. The bear is young. The bear is quiet. The bear is rough. The bear is round. The bear is blue. The bear is nice. The bear is furry. The bear is green. The bear is red. The bear is white. The bear is young. The bear"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-1040_Q9",
    "context": "Bob is cold. Bob is not nice. Bob is not quiet. Charlie is blue. Charlie is round. Gary is rough. Harry is cold. Rough things are blue. Red, quiet things are blue. All rough, blue things are nice. If something is quiet and round then it is not nice. If Harry is red then Harry is rough. If something is nice then it is round. If something is round then it is red. Red things are not quiet.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is red.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nNice($x, bool) ::: Is x nice?\nQuiet($x, bool) ::: Is x quiet?\nRound($x, bool) ::: Is x round?\nBlue($x, bool) ::: Is x blue?\nRough($x, bool) ::: Is x rough?\nFacts:\nCold(Bob, True) ::: Bob is cold.\nNice(Bob, False) ::: Bob is not nice.\nQuiet(Bob, False) ::: Bob is not quiet.\nRound(Charlie, True) ::: Charlie is round.\nBlue(Charlie, True) ::: Charlie is blue.\nRough(Gary, True) ::: Gary is rough.\nCold(Harry, True) ::: Harry is cold.\nRules:\nRough($x, True) >>> Blue($x, True) ::: Rough things are blue.\nRed($x, True) && Quiet($x, True) >>> Blue($x, True) ::: Red, quiet things are blue.\nRough($x, True) && Blue($x, True) >>> Nice($x, True) ::: All rough, blue things are nice.\nQuiet($x, True) && Round($x, True) >>> Nice($x, False) ::: If something is quiet and round then it is not nice.\nHarry($x, True) && Red($x, True) >>> Rough($x, True) ::: If Harry is red then Harry is rough.\nNice($x, True) >>> Round($x, True) ::: If something is nice then it is round.\nRound($x, True) >>> Red($x, True) ::: If something is round then it is red.\nRed($x, True) >>> Quiet($x, False) ::: Red things are not quiet.\nQuery:\nRed(Gary, True) ::: Gary is red.\n------\nProblem:\nBob is cold. Bob is not nice. Bob is not quiet. Charlie is blue. Charlie is round. Gary is rough. Harry is cold. Rough things are blue. Red, quiet things are blue. All rough, blue things are nice. If something is quiet and round then it is not nice. If Harry is red then Harry is rough. If something is nice then it is round. If something is round then it is red. Red things are not quiet.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Gary is red.\n###\nPredicates:\nCold($x, bool) ::: Is x cold?\nNice($x, bool) ::: Is x nice?\nQuiet($x, bool) ::: Is x quiet?\nRound($x, bool) ::: Is x round?\nBlue($x, bool) ::: Is x blue?\nRough($x, bool) ::: Is x rough?\nFacts:\nCold(Bob, True) ::: Bob is cold.\nNice(Bob, False) ::: Bob is not nice.\nQuiet(Bob, False) ::: Bob is not quiet.\nRound(Charlie, True) ::: Charlie is round.\nBlue(Charlie, True) ::: Charlie is blue.\nRough(Gary, True) ::: Gary is rough.\nCold(Harry, True) ::: Harry is cold.\nRules:\nRough($x, True) >>> Blue($x, True) ::: Rough things"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-19_Q18",
    "context": "The bear needs the cow. The cow needs the rabbit. The cow sees the bear. The cow visits the lion. The lion is nice. The lion is red. The lion does not see the cow. The lion visits the cow. The rabbit sees the cow. The rabbit visits the cow. If something needs the cow and the cow visits the rabbit then it visits the cow. If the lion needs the bear then the bear sees the cow. If the lion sees the bear and the bear is rough then the bear does not see the cow. If something visits the lion then the lion visits the bear. If something visits the bear then it needs the bear. If something visits the bear then the bear needs the cow. If something sees the cow then it visits the bear.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The rabbit is rough.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNeeds($x, $y, bool) ::: Does x need y?\nVisits($x, $y, bool) ::: Does x visit y?\nSees($x, $y, bool) ::: Does x see y?\nRough($x, bool) ::: Is x rough?\nRules:\nNeeds(x, y, True) >>> Visits(x, y, True) ::: If something needs the cow and the cow visits the rabbit then it visits the cow.\nNeeds(x, y, True) >>> Visits(y, x, True) ::: If something needs the cow and the cow visits the rabbit then it visits the cow.\nNeeds(x, y, True) >>> Visits(y, x, True) ::: If something needs the cow and the cow visits the rabbit then it visits the cow.\nNeeds(x, y, True) >>> Visits(y, x, True) ::: If something needs the cow and the cow visits the rabbit then it visits the cow.\nNeeds(x, y, True) >>> Visits(y, x, True) ::: If something needs the cow and the cow visits the rabbit then it visits the cow.\nNeeds(x, y, True) >>> Visits(y, x, True) ::: If something needs the cow and the cow visits the rabbit then it visits the cow.\nNeeds(x, y, True) >>> Visits(y, x, True) ::: If something needs the cow and the cow visits the rabbit then it visits the cow.\nNeeds(x, y, True) >>> Visits(y, x, True) ::: If something needs the cow and the cow visits the rabbit then it visits the cow.\nNeeds(x, y, True) >>> Visits(y, x, True) ::: If something needs the cow and the cow visits the rabbit then it visits the cow.\nNeeds(x, y, True) >>> Visits(y, x, True) ::: If something needs the cow and the cow visits the rabbit then it visits the cow.\nNeeds(x, y, True) >>> Visits(y, x, True) ::: If something needs the cow and the cow visits the rabbit then it visits the cow.\nNeeds(x, y, True) >>> Visits(y, x, True) ::: If something needs the cow and the cow visits the rabbit then it visits the cow.\nNeeds(x, y, True) >>> Visits(y, x, True) ::: If something needs the cow and the cow visits the rabbit then it visits the cow.\nNeeds(x, y, True) >>> Visits(y, x, True) ::: If something needs the cow and the cow visits the rabbit then it visits the cow.\nNeeds(x, y, True) >>> Visits(y, x, True) ::: If something needs the cow and the cow visits the rabbit then it visits the cow.\nNeeds(x, y, True) >>> Visits(y, x, True) ::: If something needs the cow and the cow visits the rabbit then it visits the cow.\nNeeds(x, y, True) >>> Visits(y, x, True) ::: If something needs the cow and the cow visits the rabbit then it visits the cow.\nNeeds(x, y, True) >>> Visits(y, x, True) ::: If something needs the cow and the cow visits the rabbit then it visits the cow.\nNeeds"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-1213_Q11",
    "context": "Anne is white. Bob is round. Erin is green. Erin is red. Erin is not round. Erin is white. Harry is young. All red, round people are quiet. If someone is young then they are white. Round people are young. If someone is round and smart then they are not red. All white people are red. Quiet people are green. If someone is red and not white then they are not green.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is green.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nWhite($x, bool) ::: Is x white?\nRound($x, bool) ::: Is x round?\nRed($x, bool) ::: Is x red?\nSmart($x, bool) ::: Is x smart?\nQuiet($x, bool) ::: Is x quiet?\nGreen($x, bool) ::: Is x green?\nYoung($x, bool) ::: Is x young?\nFacts:\nWhite(Anne, True) ::: Anne is white.\nRound(Bob, True) ::: Bob is round.\nGreen(Erin, True) ::: Erin is green.\nRed(Erin, True) ::: Erin is red.\nNot(Round(Erin, True)) ::: Erin is not round.\nWhite(Erin, True) ::: Erin is white.\nYoung(Harry, True) ::: Harry is young.\nRules:\nRed($x, True) && Round($x, True) >>> Quiet($x, True) ::: All red, round people are quiet.\nYoung($x, True) >>> White($x, True) ::: If someone is young then they are white.\nRound($x, True) >>> Young($x, True) ::: Round people are young.\nSmart($x, True) && Round($x, True) >>> Not(Red($x, True)) ::: If someone is round and smart then they are not red.\nRed($x, True) && Not(White($x, True)) >>> Not(Green($x, True)) ::: If someone is red and not white then they are not green.\nQuiet($x, True) && Not(Red($x, True)) >>> Green($x, True) ::: Quiet people are green.\nQuery:\nGreen(Bob, True) ::: Bob is green.\n------\nProblem:\nAnne is white. Bob is round. Erin is green. Erin is red. Erin is not round. Erin is white. Harry is young. All red, round people are quiet. If someone is young then they are white. Round people are young. If someone is round and smart then they are not red. All white people are red. Quiet people are green. If someone is red and not white then they are not green.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Erin is white.\n###\nPredicates:\nWhite($x, bool) ::: Is x white?\nRound($x, bool) ::: Is x round?\nRed($x, bool) ::: Is x red?\nSmart($x, bool) ::: Is x smart?\nQuiet($x, bool) ::: Is x quiet?\nGreen($x, bool) ::: Is x green?\nYoung($x, bool) ::: Is x young?\nFacts:\nWhite(Anne, True) ::: Anne is white.\nRound(Bob, True) ::: Bob is round.\nGreen(Erin, True) ::: Erin is green.\nRed(Erin, True) ::: Erin is red.\nNot(Round(Erin, True)) ::: Erin is not round.\nWhite(Erin, True) ::: Erin is white.\nYoung(Harry, True) ::: Harry is young.\nRules:\nRed($x, True) && Round($x, True) >>> Quiet($x, True) ::: All red, round people are quiet.\nYoung($x, True) >>> White"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-527_Q9",
    "context": "Bob is quiet. Charlie is blue. Charlie is cold. Charlie is nice. Dave is blue. Dave is cold. Erin is blue. If something is blue and cold then it is big. Round, nice things are big. All nice, quiet things are furry. If Bob is round then Bob is furry. If Bob is furry and Bob is nice then Bob is big. If something is big and blue then it is quiet. If something is blue then it is nice. All nice things are cold.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Erin is quiet.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nQuiet($x, bool) ::: Is x quiet?\nBlue($x, bool) ::: Is x blue?\nCold($x, bool) ::: Is x cold?\nNice($x, bool) ::: Is x nice?\nBig($x, bool) ::: Is x big?\nRound($x, bool) ::: Is x round?\nFurry($x, bool) ::: Is x furry?\nFacts:\nQuite(Bob, True) ::: Bob is quiet.\nBlue(Charlie, True) ::: Charlie is blue.\nCold(Charlie, True) ::: Charlie is cold.\nNice(Charlie, True) ::: Charlie is nice.\nBlue(Dave, True) ::: Dave is blue.\nCold(Dave, True) ::: Dave is cold.\nBlue(Erin, True) ::: Erin is blue.\nRules:\nBlue($x, True) && Cold($x, True) >>> Big($x, True) ::: If something is blue and cold then it is big.\nRound($x, True) && Nice($x, True) >>> Big($x, True) ::: Round, nice things are big.\nNice($x, True) && Quite($x, True) >>> Furry($x, True) ::: All nice, quiet things are furry.\nBlue($x, True) >>> Furry($x, True) ::: If Bob is round then Bob is furry.\nNice($x, True) && Quite($x, True) >>> Furry($x, True) ::: If Bob is furry and Bob is nice then Bob is big.\nBlue($x, True) >>> Quite($x, True) ::: If something is big and blue then it is quiet.\nBlue($x, True) >>> Nice($x, True) ::: If something is blue then it is nice.\nNice($x, True) >>> Cold($x, True) ::: All nice things are cold.\nQuery:\nQuite(Erin, True) ::: Erin is quiet.\n------\nProblem:\nBob is furry. Bob is green. Bob is quiet. Bob is rough. Bob is white. Charlie is furry. Charlie is green. Charlie is quiet. Charlie is rough. Charlie is white. Dave is furry. Dave is green. Dave is quiet. Dave is rough. Dave is white. Erin is furry. Erin is green. Erin is quiet. Erin is rough. Erin is white. Fiona is furry. Fiona is green. Fiona is quiet. Fiona is rough. Fiona is white. Harry is furry. Harry is green. Harry is quiet. Harry is rough. Harry is white. If something is green then it is rough. If something is green then it is white. If something is green then it is quiet. If something is green then it is furry. If something is green then it is rough. If something is green then it is white. If something is green then it is quiet. If something is green then it is furry. If something is green then it is rough. If something is green then it is white. If something is green then it is quiet. If something is green then it is furry. If something is green then it is rough. If something is green then it is white. If something is green then it is quiet. If something is green then it is furry. If something is green then it is rough. If something is green then it is white. If something is green then it is quiet. If something is green"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-607_Q15",
    "context": "Dave is big. Erin is big. Erin is furry. Erin is green. Erin is white. Gary is green. Harry is round. All big, furry things are white. If something is round then it is furry. If something is smart and furry then it is round. If something is white and smart then it is big. All white things are smart. If something is furry then it is white. All green things are round.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Dave is not white.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nFurry($x, bool) ::: Is x furry?\nGreen($x, bool) ::: Is x green?\nRound($x, bool) ::: Is x round?\nSmart($x, bool) ::: Is x smart?\nWhite($x, bool) ::: Is x white?\nFacts:\nBig(Dave, True) ::: Dave is big.\nBig(Erin, True) ::: Erin is big.\nFurry(Erin, True) ::: Erin is furry.\nGreen(Erin, True) ::: Erin is green.\nWhite(Erin, True) ::: Erin is white.\nGreen(Gary, True) ::: Gary is green.\nRound(Harry, True) ::: Harry is round.\nRules:\nBig($x, True) >>> Furry($x, True) ::: All big, furry things are white.\nFurry($x, True) >>> Round($x, True) ::: If something is round then it is furry.\nFurry($x, True) && Smart($x, True) >>> Round($x, True) ::: If something is smart and furry then it is round.\nWhite($x, True) && Smart($x, True) >>> Big($x, True) ::: If something is white and smart then it is big.\nWhite($x, True) >>> Smart($x, True) ::: All white things are smart.\nFurry($x, True) >>> White($x, True) ::: If something is furry then it is white.\nGreen($x, True) >>> Round($x, True) ::: All green things are round.\nQuery:\nNot(White(Dave, True)) ::: Dave is not white.\n------\nProblem:\nDave is big. Erin is big. Erin is furry. Erin is green. Erin is white. Gary is green. Harry is round. All big, furry things are white. If something is round then it is furry. If something is smart and furry then it is round. If something is white and smart then it is big. All white things are smart. If something is furry then it is white. All green things are round.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Dave is not white.\n###\nPredicates:\nBig($x, bool) ::: Is x big?\nFurry($x, bool) ::: Is x furry?\nGreen($x, bool) ::: Is x green?\nRound($x, bool) ::: Is x round?\nSmart($x, bool) ::: Is x smart?\nWhite($x, bool) ::: Is x white?\nFacts:\nBig(Dave, True) ::: Dave is big.\nBig(Erin, True) ::: Erin is big.\nFurry(Erin, True) ::: Erin is furry.\nGreen(Erin, True) ::: Erin is green.\nWhite(Erin, True) ::: Erin is white.\nGreen(Gary, True) ::: Gary is green.\nRound(Harry, True) ::: Harry is round.\nRules:\nBig($x, True) >>> Furry($x, True) ::: All big, furry things are white.\nFurry($x, True) >>> Round($x, True) ::: If something is round then it is fur"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1382_Q2",
    "context": "Bob is big. Bob is cold. Bob is kind. Bob is round. Bob is smart. Dave is cold. Erin is big. Erin is green. Fiona is big. Fiona is smart. Big, green things are round. If something is cold and blue then it is smart. Smart, round things are kind. Round, big things are cold. Cold things are blue.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is not big.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nCold($x, bool) ::: Is x cold?\nKind($x, bool) ::: Is x kind?\nRound($x, bool) ::: Is x round?\nSmart($x, bool) ::: Is x smart?\nBlue($x, bool) ::: Is x blue?\nFacts:\nBig(Bob, True) ::: Bob is big.\nCold(Bob, True) ::: Bob is cold.\nKind(Bob, True) ::: Bob is kind.\nRound(Bob, True) ::: Bob is round.\nSmart(Bob, True) ::: Bob is smart.\nCold(Dave, True) ::: Dave is cold.\nBig(Erin, True) ::: Erin is big.\nGreen(Erin, True) ::: Erin is green.\nBig(Fiona, True) ::: Fiona is big.\nSmart(Fiona, True) ::: Fiona is smart.\nRules:\nBig($x, True) && Green($x, True) >>> Round($x, True) ::: Big, green things are round.\nCold($x, True) && Blue($x, True) >>> Smart($x, True) ::: If something is cold and blue then it is smart.\nSmart($x, True) && Round($x, True) >>> Kind($x, True) ::: Smart, round things are kind.\nRound($x, True) && Big($x, True) >>> Cold($x, True) ::: Round, big things are cold.\nCold($x, True) >>> Blue($x, True) ::: Cold things are blue.\nQuery:\nNot(Big(Bob, True)) ::: Bob is not big.\n------\nProblem:\nBob is big. Bob is cold. Bob is kind. Bob is round. Bob is smart. Dave is cold. Erin is big. Erin is green. Fiona is big. Fiona is smart. Big, green things are round. If something is cold and blue then it is smart. Smart, round things are kind. Round, big things are cold. Cold things are blue.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Bob is not big.\n###\nPredicates:\nBig($x, bool) ::: Is x big?\nCold($x, bool) ::: Is x cold?\nKind($x, bool) ::: Is x kind?\nRound($x, bool) ::: Is x round?\nSmart($x, bool) ::: Is x smart?\nBlue($x, bool) ::: Is x blue?\nFacts:\nBig(Bob, True) ::: Bob is big.\nCold(Bob, True) ::: Bob is cold.\nKind(Bob, True) ::: Bob is kind.\nRound(Bob, True) ::: Bob is round.\nSmart(Bob, True) ::: Bob is smart.\nCold(Dave, True) ::: Dave is cold.\nBig(Erin, True) ::: Erin is big.\nGreen(Erin, True) ::: Erin is green.\nBig(Fiona, True) ::: Fiona is big.\nSmart(Fiona, True) ::: Fiona is smart.\nRules:\nBig($x, True) && Green($x, True) >>> Round($x, True) ::: Big, green things are round.\nCold($x"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-698_Q16",
    "context": "Bob is big. Bob is red. Bob is smart. Erin is quiet. Fiona is big. Fiona is blue. Fiona is cold. Fiona is smart. Gary is red. Gary is smart. If Bob is quiet then Bob is cold. If someone is red then they are quiet. If someone is red and quiet then they are cold. All kind people are big. If someone is red and blue then they are kind. All cold, quiet people are blue. Cold, big people are kind. If Erin is big then Erin is cold. If someone is cold and blue then they are smart.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Erin is cold.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nRed($x, bool) ::: Is x red?\nSmart($x, bool) ::: Is x smart?\nQuiet($x, bool) ::: Is x quiet?\nKind($x, bool) ::: Is x kind?\nCold($x, bool) ::: Is x cold?\nFacts:\nBig(Bob, True) ::: Bob is big.\nRed(Bob, True) ::: Bob is red.\nSmart(Bob, True) ::: Bob is smart.\nQuiet(Erin, True) ::: Erin is quiet.\nBig(Fiona, True) ::: Fiona is big.\nBlue(Fiona, True) ::: Fiona is blue.\nCold(Fiona, True) ::: Fiona is cold.\nSmart(Fiona, True) ::: Fiona is smart.\nRed(Gary, True) ::: Gary is red.\nSmart(Gary, True) ::: Gary is smart.\nRules:\nBig($x, True) >>> Red($x, True) ::: Bob is red.\nRed($x, True) >>> Quiet($x, True) ::: If Bob is quiet then Bob is cold.\nRed($x, True) >>> Quiet($x, True) >>> Cold($x, True) ::: If someone is red and quiet then they are cold.\nKind($x, True) >>> Big($x, True) ::: All kind people are big.\nRed($x, True) && Blue($x, True) >>> Kind($x, True) ::: If someone is red and blue then they are kind.\nCold($x, True) && Quiet($x, True) >>> Blue($x, True) ::: All cold, quiet people are blue.\nBig($x, True) && Cold($x, True) >>> Kind($x, True) ::: Cold, big people are kind.\nQuiet(Erin, True) >>> Cold($x, True) ::: If Erin is big then Erin is cold.\nCold($x, True) && Blue($x, True) >>> Smart($x, True) ::: If someone is cold and blue then they are smart.\nQuery:\nCold(Erin, True) ::: Erin is cold.\n------\nProblem:\nBob is big. Bob is red. Bob is smart. Erin is quiet. Fiona is big. Fiona is blue. Fiona is cold. Fiona is smart. Gary is red. Gary is smart. If Bob is quiet then Bob is cold. If someone is red then they are quiet. If someone is red and quiet then they are cold. All kind people are big. If someone is red and blue then they are kind. All cold, quiet people are blue. Cold, big people are kind. If Erin is big then Erin is cold. If someone is cold and blue then they are smart.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Erin is cold.\n###\nPredicates:\nBig($x, bool) ::: Is x big?\nRed($x, bool) ::: Is x red?\nSmart($x, bool) ::: Is x smart?\nQuiet($x, bool) ::: Is x quiet?\nKind($x, bool) ::: Is x kind?\nCold($x, bool) ::: Is x cold?\nFacts:\nBig(Bob, True) ::: Bob is big.\nRed(Bob,"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-339_Q5",
    "context": "The bald eagle chases the cat. The bald eagle is kind. The bald eagle sees the dog. The cat is rough. The dog is blue. The dog is red. The dog is rough. The dog sees the cat. The dog does not see the lion. The lion sees the bald eagle. If something chases the cat then the cat chases the dog. If something chases the dog then it eats the bald eagle. If something is kind and it sees the lion then it is not red. If something chases the dog then the dog chases the bald eagle. If the dog eats the bald eagle then the dog sees the bald eagle. If something is cold then it sees the lion. If something sees the cat and it is blue then the cat is kind. If something is blue and it chases the bald eagle then the bald eagle is cold.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cat eats the bald eagle.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nKind($x, bool) ::: Is x kind?\nSees($x, $y, bool) ::: Does x see y?\nEats($x, $y, bool) ::: Does x eat y?\nCold($x, bool) ::: Is x cold?\nFacts:\nChases(BaldEagle, Cat, True) ::: The bald eagle chases the cat.\nKind(BaldEagle, True) ::: The bald eagle is kind.\nSees(BaldEagle, Dog, True) ::: The bald eagle sees the dog.\nRough(Cat, True) ::: The cat is rough.\nBlue(Dog, True) ::: The dog is blue.\nRed(Dog, True) ::: The dog is red.\nRough(Dog, True) ::: The dog is rough.\nSees(Dog, Cat, True) ::: The dog sees the cat.\nSees(Dog, Lion, False) ::: The dog does not see the lion.\nSees(Lion, BaldEagle, True) ::: The lion sees the bald eagle.\nChases(Dog, Cat, True) ::: If something chases the cat then the cat chases the dog.\nEats(Dog, BaldEagle, True) ::: If something chases the dog then it eats the bald eagle.\nKind(x, True) && Sees(x, Lion) >>> Not(Red(x, True)) ::: If something is kind and it sees the lion then it is not red.\nChases(Dog, BaldEagle, True) ::: If something chases the dog then the dog chases the bald eagle.\nEats(Dog, BaldEagle, True) >>> Sees(Dog, BaldEagle, True) ::: If the dog eats the bald eagle then the dog sees the bald eagle.\nCold(x, True) >>> Sees(x, Lion, True) ::: If something is cold then it sees the lion.\nSees(Cat, x, True) && Blue(x, True) >>> Kind(Cat, True) ::: If something sees the cat and it is blue then the cat is kind.\nBlue(x, True) && Chases(x, BaldEagle, True) >>> Cold(BaldEagle, True) ::: If something is blue and it chases the bald eagle then the bald eagle is cold.\nQuery:\nEats(Cat, BaldEagle, True) ::: The cat eats the bald eagle.\n------"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-73_Q20",
    "context": "Anne is nice. Bob is cold. Bob is not red. Bob is rough. Charlie is red. Charlie is rough. Harry is nice. Harry is quiet. Harry is rough. Harry is round. Nice people are quiet. If someone is red and nice then they are not quiet. Quiet people are cold. If someone is quiet and round then they are not red. If someone is green and quiet then they are round. If someone is cold then they are green.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Anne is rough.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNice($x, bool) ::: Is x nice?\nCold($x, bool) ::: Is x cold?\nRed($x, bool) ::: Is x red?\nRough($x, bool) ::: Is x rough?\nRound($x, bool) ::: Is x round?\nQuiet($x, bool) ::: Is x quiet?\nFacts:\nNice(Anne, True) ::: Anne is nice.\nCold(Bob, True) ::: Bob is cold.\nRed(Bob, False) ::: Bob is not red.\nRough(Bob, True) ::: Bob is rough.\nRed(Charlie, True) ::: Charlie is red.\nRough(Charlie, True) ::: Charlie is rough.\nNice(Harry, True) ::: Harry is nice.\nQuiet(Harry, True) ::: Harry is quiet.\nRough(Harry, True) ::: Harry is rough.\nRound(Harry, True) ::: Harry is round.\nRules:\nNice($x, True) >>> Quiet($x, True) ::: Nice people are quiet.\nRed($x, True) && Nice($x, True) >>> Quiet($x, False) ::: If someone is red and nice then they are not quiet.\nQuiet($x, True) >>> Cold($x, True) ::: Quiet people are cold.\nQuiet($x, True) && Round($x, True) >>> Red($x, False) ::: If someone is quiet and round then they are not red.\nGreen($x, True) >>> Round($x, True) ::: If someone is green and quiet then they are round.\nCold($x, True) >>> Green($x, True) ::: If someone is cold then they are green.\nQuery:\nRough(Anne, True) ::: Anne is rough.\n------\nProblem:\nAnne is furry. Anne is green. Anne is quiet. Anne is red. Anne is rough. Anne is white. Bob is furry. Bob is green. Bob is quiet. Bob is red. Bob is rough. Bob is white. Charlie is furry. Charlie is green. Charlie is quiet. Charlie is red. Charlie is rough. Charlie is white. Erin is furry. Erin is green. Erin is quiet. Erin is red. Erin is rough. Erin is white. Fiona is furry. Fiona is green. Fiona is quiet. Fiona is red. Fiona is rough. Fiona is white. Harry is furry. Harry is green. Harry is quiet. Harry is red. Harry is rough. Harry is white. Young people"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-1026_Q3",
    "context": "The bear is green. The bear visits the cow. The cat is green. The cat is nice. The cow likes the cat. The cow visits the lion. The lion visits the cat. If someone visits the cow then the cow eats the lion. If someone eats the bear then the bear visits the cat. If someone is young then they eat the bear. If someone is blue then they eat the bear. If someone likes the lion then they are young. If the lion is nice then the lion eats the bear. If someone eats the lion then they like the lion. If someone is green then they eat the cat.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cat eats the cat.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen($x, bool) ::: Is x green?\nVisits($x, $y, bool) ::: Does x visit y?\nLikes($x, $y, bool) ::: Does x like y?\nEats($x, $y, bool) ::: Does x eat y?\nYoung($x, bool) ::: Is x young?\nBlue($x, bool) ::: Is x blue?\nNice($x, bool) ::: Is x nice?\nFacts:\nGreen(Bear, True) ::: The bear is green.\nVisits(Bear, Cow, True) ::: The bear visits the cow.\nGreen(Cat, True) ::: The cat is green.\nNice(Cat, True) ::: The cat is nice.\nLikes(Cow, Cat, True) ::: The cow likes the cat.\nVisits(Cow, Lion, True) ::: The cow visits the lion.\nVisits(Lion, Cat, True) ::: The lion visits the cat.\nYoung(Cow, True) >>> CowEatsLion($x, True) ::: If someone visits the cow then the cow eats the lion.\nEats(Bear, Cat, True) >>> BearVisitsCat($x, True) ::: If someone eats the bear then the bear visits the cat.\nYoung($x, True) >>> Eats($x, Bear, True) ::: If someone is young then they eat the bear.\nBlue($x, True) >>> Eats($x, Bear, True) ::: If someone is blue then they eat the bear.\nLikes($x, Lion, True) >>> Young($x, True) ::: If someone likes the lion then they are young.\nNice(Lion, True) >>> LionEatsBear($x, True) ::: If the lion is nice then the lion eats the bear.\nEats(Lion, $x, True) >>> Likes($x, Lion, True) ::: If someone eats the lion then they like the lion.\nEats($x, Cat, True) >>> Green($x, True) ::: If someone eats the cat then they are green.\nQuery:\nEats(Cat, Cat, True) ::: The cat eats the cat.\n------\nProblem:\nThe bear is green. The bear visits the cow. The cat is green. The cat is nice. The cow likes the cat. The cow visits the lion. The lion visits the cat. If someone visits the cow then the cow eats the lion. If someone eats the bear then the bear visits the cat. If someone is young then they eat the bear. If someone is blue"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-976_Q12",
    "context": "Charlie is not quiet. Erin is big. Erin is white. Erin is young. Gary is young. Harry is furry. Harry is nice. White, furry people are big. All nice people are big. If someone is quiet and furry then they are white. If someone is young then they are quiet. All big, furry people are round. If someone is quiet then they are furry. If Erin is round then Erin is quiet.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is not round.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nQuiet($x, bool) ::: Is x quiet?\nBig($x, bool) ::: Is x big?\nWhite($x, bool) ::: Is x white?\nYoung($x, bool) ::: Is x young?\nFurry($x, bool) ::: Is x furry?\nNice($x, bool) ::: Is x nice?\nRound($x, bool) ::: Is x round?\nFacts:\nQuite(Charlie, False) ::: Charlie is not quiet.\nBig(Erin, True) ::: Erin is big.\nWhite(Erin, True) ::: Erin is white.\nYoung(Erin, True) ::: Erin is young.\nYoung(Gary, True) ::: Gary is young.\nFurry(Harry, True) ::: Harry is furry.\nNice(Harry, True) ::: Harry is nice.\nWhite($x, True) >>> Furry($x, True) ::: White, furry people are big.\nNice($x, True) >>> Big($x, True) ::: All nice people are big.\nFurry($x, True) && Quite($x, True) >>> White($x, True) ::: If someone is quiet and furry then they are white.\nYoung($x, True) >>> Quite($x, True) ::: If someone is young then they are quiet.\nFurry($x, True) >>> Round($x, True) ::: All big, furry people are round.\nQuite($x, True) >>> Furry($x, True) ::: If someone is quiet then they are furry.\nRound(Erin, True) >>> Quite(Erin, True) ::: If Erin is round then Erin is quiet.\nQuery:\nRound(Gary, False) ::: Gary is not round.\n------\nProblem:\nCharlie is not quiet. Erin is big. Erin is white. Erin is young. Gary is young. Harry is furry. Harry is nice. White, furry people are big. All nice people are big. If someone is quiet and furry then they are white. If someone is young then they are quiet. All big, furry people are round. If someone is quiet then they are furry. If Erin is round then Erin is quiet.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Gary is not round.\n###\nPredicates:\nQuiet($x, bool) ::: Is x quiet?\nBig($x, bool) ::: Is x big?\nWhite($x, bool)"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-669_Q24",
    "context": "The dog eats the mouse. The dog eats the tiger. The dog visits the squirrel. The mouse is green. The mouse visits the tiger. The squirrel is big. The squirrel is round. The squirrel likes the dog. The tiger eats the dog. The tiger visits the mouse. If someone eats the tiger and the tiger is big then they are green. If someone is green then they like the squirrel. If the dog is green then the dog likes the mouse. If someone visits the tiger then the tiger is blue. If someone visits the tiger then the tiger visits the dog. If someone is blue and they eat the squirrel then the squirrel is green. If someone is blue then they eat the squirrel. If someone likes the dog and they are green then they are blue.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The mouse is cold.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y, bool) ::: Does x eat y?\nVisits($x, $y, bool) ::: Does x visit y?\nLikes($x, $y, bool) ::: Does x like y?\nIs($x, $y, bool) ::: Is x y?\nGreen($x, bool) ::: Is x green?\nBig($x, bool) ::: Is x big?\nRound($x, bool) ::: Is x round?\nBlue($x, bool) ::: Is x blue?\nCold($x, bool) ::: Is x cold?\nFacts:\nEats(Dog, Mouse, True) ::: The dog eats the mouse.\nEats(Dog, Tiger, True) ::: The dog eats the tiger.\nVisits(Dog, Squirrel, True) ::: The dog visits the squirrel.\nGreen(Mouse, True) ::: The mouse is green.\nVisits(Mouse, Tiger, True) ::: The mouse visits the tiger.\nBig(Squirrel, True) ::: The squirrel is big.\nRound(Squirrel, True) ::: The squirrel is round.\nLikes(Squirrel, Dog, True) ::: The squirrel likes the dog.\nEats(Tiger, Dog, True) ::: The tiger eats the dog.\nVisits(Tiger, Mouse, True) ::: The tiger visits the mouse.\nRules:\nEats($x, $y, True) >>> Is($x, Tiger, True) && Is($y, Tiger, True) ::: If someone eats the tiger and the tiger is big then they are green.\nIs($x, Green, True) >>> Likes($x, Squirrel, True) ::: If someone is green then they like the squirrel.\nIs($x, Green, True) >>> Likes($x, Dog, True) ::: If the dog is green then the dog likes the mouse.\nVisits($x, Tiger, True) >>> Is($x, Blue, True) ::: If someone visits the tiger then the tiger is blue.\nVisits($x, Tiger, True) >>> Is($x, Tiger, True) ::: If someone visits the tiger then the tiger visits the dog.\nIs($x, Blue, True) >>> Eats($x, Squirrel, True) ::: If someone is blue and they eat the squirrel then the squirrel is green.\nIs($x, Blue, True) >>> Eats($x, Squirrel, True) ::: If someone is"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-686_Q17",
    "context": "Bob is quiet. Bob is not red. Bob is round. Charlie is red. Gary is quiet. Gary is not round. Gary is not smart. Gary is white. Harry is blue. Harry is quiet. If Harry is blue and Harry is white then Harry is red. Smart things are young. All quiet, red things are round. If Charlie is quiet then Charlie is round. If something is quiet then it is white. If Gary is blue and Gary is smart then Gary is quiet. All young, blue things are quiet. All round things are smart.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Charlie is not smart.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nQuiet($x, bool) ::: Is x quiet?\nRed($x, bool) ::: Is x red?\nRound($x, bool) ::: Is x round?\nSmart($x, bool) ::: Is x smart?\nBlue($x, bool) ::: Is x blue?\nFacts:\nQuite(Bob, True) ::: Bob is quiet.\nRed(Bob, False) ::: Bob is not red.\nRound(Bob, True) ::: Bob is round.\nRed(Charlie, True) ::: Charlie is red.\nQuite(Gary, True) ::: Gary is quiet.\nRed(Gary, False) ::: Gary is not red.\nRound(Gary, False) ::: Gary is not round.\nSmart(Gary, False) ::: Gary is not smart.\nWhite(Gary, True) ::: Gary is white.\nBlue(Harry, True) ::: Harry is blue.\nQuite(Harry, True) ::: Harry is quiet.\nRules:\nQuite($x, True) >>> White($x, True) ::: If Harry is blue and Harry is white then Harry is red.\nSmart($x, True) >>> Young($x, True) ::: Smart things are young.\nQuite($x, True) >>> Red($x, True) ::: All quiet, red things are round.\nQuite($x, True) >>> Red($x, True) ::: If Charlie is quiet then Charlie is round.\nQuite($x, True) >>> White($x, True) ::: If something is quiet then it is white.\nBlue($x, True) && Smart($x, True) >>> Quite($x, True) ::: If Gary is blue and Gary is smart then Gary is quiet.\nYoung($x, True) >>> Blue($x, True) ::: All young, blue things are quiet.\nRound($x, True) >>> Smart($x, True) ::: All round things are smart.\nQuery:\nSmart(Charlie, False) ::: Charlie is not smart.\n------\nProblem:\nBob is quiet. Bob is not red. Bob is round. Charlie is red. Gary is quiet. Gary is not round. Gary is not smart. Gary is white. Harry is blue. Harry is quiet. If Harry is blue and Harry is white then Harry is red. Smart things are young. All quiet, red things are round. If Charlie is quiet then Charlie is round. If something is quiet then it is white. If Gary is blue and Gary is smart then Gary is quiet. All young, blue things are quiet. All round things are smart.\nQuestion:\nBased on the above"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-742_Q11",
    "context": "Anne is furry. Anne is red. Anne is smart. Bob is red. Dave is blue. Dave is kind. Erin is white. Furry people are kind. Furry, blue people are kind. All red people are furry. All nice, red people are smart. Kind, nice people are smart. All furry people are kind. White people are kind. If someone is white and red then they are nice. If Bob is kind then Bob is white.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is smart.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nFurry($x, bool) ::: Is x furry?\nRed($x, bool) ::: Is x red?\nSmart($x, bool) ::: Is x smart?\nKind($x, bool) ::: Is x kind?\nNice($x, bool) ::: Is x nice?\nBlue($x, bool) ::: Is x blue?\nWhite($x, bool) ::: Is x white?\nFacts:\nFurry(Anne, True) ::: Anne is furry.\nRed(Anne, True) ::: Anne is red.\nSmart(Anne, True) ::: Anne is smart.\nRed(Bob, True) ::: Bob is red.\nBlue(Dave, True) ::: Dave is blue.\nKind(Dave, True) ::: Dave is kind.\nWhite(Erin, True) ::: Erin is white.\nRules:\nFurry($x, True) >>> Kind($x, True) ::: Furry people are kind.\nFurry($x, True) && Blue($x, True) >>> Kind($x, True) ::: Furry, blue people are kind.\nRed($x, True) >>> Furry($x, True) ::: All red people are furry.\nRed($x, True) && Nice($x, True) >>> Smart($x, True) ::: All nice, red people are smart.\nKind($x, True) && Nice($x, True) >>> Smart($x, True) ::: Kind, nice people are smart.\nFurry($x, True) >>> Kind($x, True) ::: All furry people are kind.\nWhite($x, True) >>> Kind($x, True) ::: White people are kind.\nRed($x, True) && White($x, True) >>> Nice($x, True) ::: If someone is white and red then they are nice.\nKind(Bob, True) >>> White(Bob, True) ::: If Bob is kind then Bob is white.\nQuery:\nSmart(Bob, True) ::: Bob is smart.\n------\nProblem:\nAnne is furry. Anne is red. Anne is smart. Bob is red. Dave is blue. Dave is kind. Erin is white. Furry people are kind. Furry, blue people are kind. All red people are furry. All nice, red people are smart. Kind, nice people are smart. All furry people are kind. White people are kind. If someone is white and red then they are nice. If Bob is kind then Bob is white.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown?"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-164_Q22",
    "context": "Anne is cold. Bob is nice. Fiona is big. Fiona is round. Harry is big. Harry is nice. Harry is smart. All smart people are round. If Anne is kind then Anne is big. All smart, big people are furry. All nice people are kind. Kind, round people are big. If someone is kind then they are smart.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Fiona is cold.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nNice($x, bool) ::: Is x nice?\nBig($x, bool) ::: Is x big?\nRound($x, bool) ::: Is x round?\nFurry($x, bool) ::: Is x furry?\nSmart($x, bool) ::: Is x smart?\nKind($x, bool) ::: Is x kind?\nFacts:\nCold(Anne, True) ::: Anne is cold.\nNice(Bob, True) ::: Bob is nice.\nBig(Fiona, True) ::: Fiona is big.\nRound(Fiona, True) ::: Fiona is round.\nBig(Harry, True) ::: Harry is big.\nNice(Harry, True) ::: Harry is nice.\nSmart(Harry, True) ::: Harry is smart.\nRules:\nSmart($x, True) >>> Round($x, True) ::: All smart people are round.\nKind(Anne, True) >>> Big(Anne, True) ::: If Anne is kind then Anne is big.\nSmart($x, True) && Big($x, True) >>> Furry($x, True) ::: All smart, big people are furry.\nNice($x, True) >>> Kind($x, True) ::: All nice people are kind.\nKind($x, True) && Round($x, True) >>> Big($x, True) ::: Kind, round people are big.\nKind($x, True) >>> Smart($x, True) ::: If someone is kind then they are smart.\nQuery:\nBig(Fiona, True) ::: Fiona is big.\n------\nProblem:\nAnne is cold. Bob is nice. Fiona is big. Fiona is round. Harry is big. Harry is nice. Harry is smart. All smart people are round. If Anne is kind then Anne is big. All smart, big people are furry. All nice people are kind. Kind, round people are big. If someone is kind then they are smart.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Fiona is cold.\n###\nPredicates:\nCold($x, bool) ::: Is x cold?\nNice($x, bool) ::: Is x nice?\nBig($x, bool) ::: Is x big?\nRound($x, bool) ::: Is x round?\nFurry($x, bool) ::: Is x furry?\nSmart($x, bool) ::: Is x smart?\nKind($x, bool) ::: Is x kind"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-910_Q4",
    "context": "Anne is blue. Anne is furry. Anne is green. Anne is quiet. Anne is young. Bob is furry. Bob is round. Erin is green. Erin is young. Harry is furry. Furry people are blue. If someone is furry and young then they are green. All quiet, round people are rough. If Anne is green and Anne is blue then Anne is round. Furry people are quiet. All rough, quiet people are young. Quiet people are round.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Harry is not blue.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue($x, bool) ::: Is x blue?\nFurry($x, bool) ::: Is x furry?\nGreen($x, bool) ::: Is x green?\nQuiet($x, bool) ::: Is x quiet?\nRound($x, bool) ::: Is x round?\nRough($x, bool) ::: Is x rough?\nYoung($x, bool) ::: Is x young?\nFacts:\nBlue(Anne, True) ::: Anne is blue.\nFurry(Anne, True) ::: Anne is furry.\nGreen(Anne, True) ::: Anne is green.\nQuiet(Anne, True) ::: Anne is quiet.\nYoung(Anne, True) ::: Anne is young.\nFurry(Bob, True) ::: Bob is furry.\nRound(Bob, True) ::: Bob is round.\nGreen(Erin, True) ::: Erin is green.\nYoung(Erin, True) ::: Erin is young.\nFurry(Harry, True) ::: Harry is furry.\nRules:\nFurry($x, True) >>> Blue($x, True) ::: Furry people are blue.\nFurry($x, True) && Young($x, True) >>> Green($x, True) ::: If someone is furry and young then they are green.\nQuiet($x, True) && Round($x, True) >>> Rough($x, True) ::: All quiet, round people are rough.\nGreen($x, True) && Blue($x, True) >>> Round($x, True) ::: If Anne is green and Anne is blue then Anne is round.\nFurry($x, True) >>> Quiet($x, True) ::: Furry people are quiet.\nYoung($x, True) && Rough($x, True) >>> Quiet($x, True) ::: All rough, quiet people are young.\nQuiet($x, True) >>> Round($x, True) ::: Quiet people are round.\nQuery:\nNot(Blue(Harry, True)) ::: Harry is not blue.\n------\nProblem:\nAnne is blue. Anne is furry. Anne is green. Anne is quiet. Anne is young. Bob is furry. Bob is round. Erin is green. Erin is young. Harry is furry. Furry people are blue. If someone is furry and young then they are green. All quiet, round people are rough. If Anne is green and Anne is blue then Anne is round. Furry people are quiet. All rough, quiet people are young. Quiet people are"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-800_Q10",
    "context": "The cow chases the tiger. The cow eats the rabbit. The cow is red. The cow is young. The cow sees the squirrel. The rabbit eats the cow. The rabbit is young. The squirrel is kind. The squirrel is red. The tiger is red. The tiger is young. The tiger sees the squirrel. If the cow sees the squirrel and the squirrel eats the rabbit then the rabbit sees the tiger. If something sees the tiger then the tiger is round. If something chases the squirrel then the squirrel eats the rabbit. If something is round then it sees the tiger. If something is big then it chases the squirrel. If something eats the rabbit then the rabbit chases the squirrel. If the tiger eats the cow and the cow sees the squirrel then the squirrel is young.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The tiger is not round.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nEats($x, $y, bool) ::: Does x eat y?\nIs($x, $y, bool) ::: Is x y?\nKind($x, bool) ::: Is x kind?\nRed($x, bool) ::: Is x red?\nRound($x, bool) ::: Is x round?\nSees($x, $y, bool) ::: Does x see y?\nYoung($x, bool) ::: Is x young?\nBig($x, bool) ::: Is x big?\nFacts:\nChases(Cow, Tiger, True) ::: The cow chases the tiger.\nEats(Cow, Rabbit, True) ::: The cow eats the rabbit.\nRed(Cow, True) ::: The cow is red.\nYoung(Cow, True) ::: The cow is young.\nSees(Cow, Squirrel, True) ::: The cow sees the squirrel.\nEats(Rabbit, Cow, True) ::: The rabbit eats the cow.\nYoung(Rabbit, True) ::: The rabbit is young.\nKind(Squirrel, True) ::: The squirrel is kind.\nRed(Squirrel, True) ::: The squirrel is red.\nRed(Tiger, True) ::: The tiger is red.\nYoung(Tiger, True) ::: The tiger is young.\nSees(Tiger, Squirrel, True) ::: The tiger sees the squirrel.\nRules:\nIf Cow sees Squirrel and Squirrel eats Rabbit then Rabbit sees Tiger ::: If the cow sees the squirrel and the squirrel eats the rabbit then the rabbit sees the tiger.\nIf something sees Tiger then Tiger is Round ::: If something sees the tiger then the tiger is round.\nIf something chases Squirrel then Squirrel eats Rabbit ::: If something chases the squirrel then the squirrel eats the rabbit.\nIf something is Round then it sees Tiger ::: If something is round then it sees the tiger.\nIf something is Big then it chases Squirrel ::: If something is big then it chases the squirrel.\nIf something eats Rabbit then Rabbit chases Squirrel ::: If something eats the rabbit then the rabbit chases the squirrel.\nIf Tiger eats Cow and Cow sees Squirrel then Squirrel is Young ::: If the tiger eats the"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-837_Q2",
    "context": "The mouse chases the tiger. The mouse is cold. The rabbit chases the squirrel. The rabbit is nice. The rabbit needs the mouse. The rabbit needs the tiger. The rabbit visits the mouse. The rabbit visits the tiger. The squirrel chases the mouse. The squirrel is round. The squirrel needs the rabbit. The squirrel needs the tiger. The squirrel does not visit the mouse. The tiger chases the mouse. The tiger is nice. The tiger is not round. If someone visits the rabbit then they visit the tiger. If someone needs the rabbit then they visit the tiger. If the squirrel needs the mouse then the mouse needs the tiger. If someone is cold and they need the tiger then they are nice. If the squirrel needs the rabbit and the rabbit needs the mouse then the squirrel is nice. If someone is round then they need the tiger. If someone is nice then they need the mouse. If someone visits the squirrel then the squirrel is red. If the squirrel does not need the tiger then the tiger needs the squirrel.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The rabbit does not chase the squirrel.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nCold($x, bool) ::: Is x cold?\nNice($x, bool) ::: Is x nice?\nNeeds($x, $y, bool) ::: Does x need y?\nVisits($x, $y, bool) ::: Does x visit y?\nRound($x, bool) ::: Is x round?\nFacts:\nChases(Mouse, Tiger, True) ::: The mouse chases the tiger.\nCold(Mouse, True) ::: The mouse is cold.\nChases(Rabbit, Squirrel, True) ::: The rabbit chases the squirrel.\nNice(Rabbit, True) ::: The rabbit is nice.\nNeeds(Rabbit, Mouse, True) ::: The rabbit needs the mouse.\nNeeds(Rabbit, Tiger, True) ::: The rabbit needs the tiger.\nVisits(Rabbit, Mouse, True) ::: The rabbit visits the mouse.\nVisits(Rabbit, Tiger, True) ::: The rabbit visits the tiger.\nChases(Squirrel, Mouse, True) ::: The squirrel chases the mouse.\nRound(Squirrel, True) ::: The squirrel is round.\nNeeds(Squirrel, Rabbit, True) ::: The squirrel needs the rabbit.\nNeeds(Squirrel, Tiger, True) ::: The squirrel needs the tiger.\nNot(Visits(Squirrel, Mouse, True)) ::: The squirrel does not visit the mouse.\nChases(Tiger, Mouse, True) ::: The tiger chases the mouse.\nNice(Tiger, True) ::: The tiger is nice.\nNot(Round(Tiger, True)) ::: The tiger is not round.\nRules:\nIf someone visits the rabbit then they visit the tiger ::: If someone visits the rabbit then they visit the tiger.\nIf someone needs the rabbit then they visit the tiger ::: If someone needs the rabbit then they visit the tiger.\nIf the squirrel needs the mouse then the mouse needs the tiger ::: If the squirrel needs the mouse then the mouse needs the tiger.\nIf someone is cold and they need the tiger then they are nice ::: If someone is cold and they need the tiger then they are nice.\nIf the squirrel needs the rabbit and the rabbit needs the mouse then the squirrel is nice ::: If the squirrel needs the rabbit and the rabbit needs the mouse then the squirrel is nice.\nIf someone is round then they need the tiger ::: If someone is round then they need the tiger.\nIf someone is nice then they need the mouse ::: If someone is nice then they need the mouse.\nIf someone visits the squirrel then the squirrel is red ::: If someone visits the squirrel then the squirrel is red.\nIf the squirrel does not need the tiger then the tiger needs the squirrel ::: If the squirrel does not need the tiger then the tiger needs the squirrel.\nQuery:\nNot(Chases(Rabbit, Squirrel, True)) ::: The rabbit does not chase the squirrel.\n------"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-623_Q9",
    "context": "Anne is furry. Bob is furry. Fiona is nice. Fiona is red. Gary is blue. Gary is nice. Gary is not young. All white things are young. Red, white things are blue. If something is furry then it is white. If something is red and blue then it is round. If Bob is nice and Bob is white then Bob is round. All white things are red. Round, blue things are not nice. If Fiona is young then Fiona is nice. If Fiona is not blue then Fiona is nice.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is round.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nFurry($x, bool) ::: Is x furry?\nNice($x, bool) ::: Is x nice?\nRed($x, bool) ::: Is x red?\nBlue($x, bool) ::: Is x blue?\nRound($x, bool) ::: Is x round?\nYoung($x, bool) ::: Is x young?\nFacts:\nFurry(Anne, True) ::: Anne is furry.\nFurry(Bob, True) ::: Bob is furry.\nNice(Fiona, True) ::: Fiona is nice.\nRed(Fiona, True) ::: Fiona is red.\nBlue(Gary, True) ::: Gary is blue.\nNice(Gary, True) ::: Gary is nice.\nNot(Young(Gary, True), True) ::: Gary is not young.\nRules:\nWhite($x, True) >>> Young($x, True) ::: All white things are young.\nRed($x, True) && White($x, True) >>> Blue($x, True) ::: Red, white things are blue.\nFurry($x, True) >>> White($x, True) ::: If something is furry then it is white.\nRed($x, True) && Blue($x, True) >>> Round($x, True) ::: If something is red and blue then it is round.\nNice($x, True) && White($x, True) >>> Round($x, True) ::: If Bob is nice and Bob is white then Bob is round.\nWhite($x, True) >>> Red($x, True) ::: All white things are red.\nRound($x, True) && Blue($x, True) >>> Not(Nice($x, True), True) ::: Round, blue things are not nice.\nYoung($x, True) >>> Nice($x, True) ::: If Fiona is young then Fiona is nice.\nNot(Blue($x, True), True) >>> Nice($x, True) ::: If Fiona is not blue then Fiona is nice.\nQuery:\nRound(Bob, True) ::: Bob is round.\n------\nProblem:\nAnne is furry. Bob is furry. Fiona is nice. Fiona is red. Gary is blue. Gary is nice. Gary is not young. All white things are young. Red, white things are blue. If something is furry then it is white. If something is red and blue then it is round. If Bob is nice and Bob is white then Bob is round. All white things are red. Round, blue things are not nice. If Fiona is young then Fiona is nice. If Fiona is not blue then Fiona is nice.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Bob is round.\n###\nPredicates:\nFurry($x, bool) ::: Is x furry?\nNice($x, bool) ::: Is x nice?\nRed($x, bool) ::: Is x red?\nBlue($x, bool) ::: Is x blue?\nRound($x, bool) ::: Is x round?\nYoung($x, bool) ::: Is x young?\nFacts:\nFurry(Anne, True) ::: Anne is furry.\nFurry(Bob, True) ::: Bob is furry.\nNice"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-1166_Q9",
    "context": "Charlie is cold. Charlie is nice. Dave is cold. Erin is cold. Gary is kind. Gary is not red. Gary is round. All red things are kind. If Erin is cold then Erin is red. All nice things are rough. All cold, white things are rough. All white, round things are nice. Kind, cold things are nice. If something is nice and rough then it is round. All rough things are red. All cold, kind things are red.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Erin is rough.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nNice($x, bool) ::: Is x nice?\nRed($x, bool) ::: Is x red?\nKind($x, bool) ::: Is x kind?\nRound($x, bool) ::: Is x round?\nRough($x, bool) ::: Is x rough?\nFacts:\nCold(Charlie, True) ::: Charlie is cold.\nNice(Charlie, True) ::: Charlie is nice.\nCold(Dave, True) ::: Dave is cold.\nCold(Erin, True) ::: Erin is cold.\nKind(Gary, True) ::: Gary is kind.\nNot(Red(Gary, True)) ::: Gary is not red.\nRound(Gary, True) ::: Gary is round.\nRules:\nRed($x, True) >>> Kind($x, True) ::: All red things are kind.\nErin(Cold($x, True)) >>> Red($x, True) ::: If Erin is cold then Erin is red.\nNice($x, True) >>> Rough($x, True) ::: All nice things are rough.\nCold($x, True) && White($x, True) >>> Rough($x, True) ::: All cold, white things are rough.\nWhite($x, True) && Round($x, True) >>> Nice($x, True) ::: All white, round things are nice.\nKind($x, True) && Cold($x, True) >>> Nice($x, True) ::: Kind, cold things are nice.\nNice($x, True) && Rough($x, True) >>> Round($x, True) ::: If something is nice and rough then it is round.\nRough($x, True) >>> Red($x, True) ::: All rough things are red.\nCold($x, True) && Kind($x, True) >>> Red($x, True) ::: All cold, kind things are red.\nQuery:\nRough(Erin, True) ::: Erin is rough.\n------\nProblem:\nCharlie is cold. Charlie is nice. Dave is cold. Erin is cold. Gary is kind. Gary is not red. Gary is round. All red things are kind. If Erin is cold then Erin is red. All nice things are rough. All cold, white things are rough. All white, round things are nice. Kind, cold things are nice. If something is nice and rough then it is round. All rough things are red. All cold, kind things are red.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Erin is rough.\n###\nPredicates:\nCold($x, bool) ::: Is x cold?\nNice($x, bool) ::: Is x nice?\nRed($x, bool) ::: Is x red?\nKind($x, bool) ::: Is x kind?\nRound($x, bool) ::: Is x round?\nRough($x, bool) ::: Is x rough?\nFacts:\nCold(Charlie, True) ::: Charlie is cold.\nNice(Charlie, True) ::: Charlie is nice.\nCold(Dave, True) ::: Dave is cold.\nCold(Erin, True) ::: Erin is cold.\nKind("
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-111_Q14",
    "context": "Anne is green. Anne is round. Bob is smart. Charlie is smart. Charlie is young. Harry is blue. Harry is young. Nice people are young. Blue people are young. Young, green people are nice. If someone is smart then they are nice. Round, nice people are big. All big, young people are smart. Green people are blue. If Bob is nice then Bob is blue.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Charlie is blue.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen($x, bool) ::: Is x green?\nRound($x, bool) ::: Is x round?\nSmart($x, bool) ::: Is x smart?\nYoung($x, bool) ::: Is x young?\nNice($x, bool) ::: Is x nice?\nBig($x, bool) ::: Is x big?\nBlue($x, bool) ::: Is x blue?\nFacts:\nGreen(Anne, True) ::: Anne is green.\nRound(Anne, True) ::: Anne is round.\nSmart(Bob, True) ::: Bob is smart.\nSmart(Charlie, True) ::: Charlie is smart.\nYoung(Charlie, True) ::: Charlie is young.\nBlue(Harry, True) ::: Harry is blue.\nYoung(Harry, True) ::: Harry is young.\nNice(Charlie, True) ::: Charlie is nice.\nRules:\nYoung($x, True) >>> Nice($x, True) ::: Young, green people are nice.\nSmart($x, True) >>> Nice($x, True) ::: If someone is smart then they are nice.\nRound($x, True) && Nice($x, True) >>> Big($x, True) ::: Round, nice people are big.\nYoung($x, True) && Green($x, True) >>> Nice($x, True) ::: Young, green people are nice.\nBlue($x, True) >>> Young($x, True) ::: Blue people are young.\nYoung($x, True) >>> Smart($x, True) ::: All big, young people are smart.\nGreen($x, True) >>> Blue($x, True) ::: Green people are blue.\nIf Bob is nice then Bob is blue ::: If Bob is nice then Bob is blue.\nQuery:\nBlue(Charlie, True) ::: Charlie is blue.\n------\nProblem:\nAnne is green. Anne is round. Bob is smart. Charlie is smart. Charlie is young. Harry is blue. Harry is young. Nice people are young. Blue people are young. Young, green people are nice. If someone is smart then they are nice. Round, nice people are big. All big, young people are smart. Green people are blue. If Bob is nice then Bob is blue.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Charlie is blue.\n###\nPredicates:\nGreen($x, bool) ::: Is x green?\nRound($x, bool) ::: Is x round?\nSmart($x, bool) ::: Is x smart?\nYoung($x, bool) ::: Is x young?\nNice($x, bool) ::: Is x nice?\nBig($x, bool) ::: Is x big?\nBlue($x, bool) ::: Is x blue?\nFacts:\nGreen(Anne, True) ::: Anne is green.\nRound(Anne, True) ::: Anne is round.\nSmart(Bob, True) ::: Bob is smart.\nSmart(Charlie, True) ::: Charlie is smart.\nYoung(Charlie, True) ::: Charlie is young.\nBlue(Harry, True) ::: Harry is blue.\nYoung(Harry, True) ::: Harry is young.\nNice(Charlie, True"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-179_Q16",
    "context": "Bob is kind. Bob is young. Dave is kind. Dave is red. Fiona is big. Fiona is cold. Fiona is kind. Fiona is smart. Fiona is young. Harry is big. Big, smart people are red. Young, red people are big. If someone is smart then they are red. All big, kind people are rough. Red, big people are kind. If someone is young then they are cold. All kind people are smart. All rough, smart people are young. All big people are smart.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Dave is young.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nKind($x, bool) ::: Is x kind?\nYoung($x, bool) ::: Is x young?\nRed($x, bool) ::: Is x red?\nBig($x, bool) ::: Is x big?\nSmart($x, bool) ::: Is x smart?\nRough($x, bool) ::: Is x rough?\nCold($x, bool) ::: Is x cold?\nFacts:\nKind(Bob, True) ::: Bob is kind.\nYoung(Bob, True) ::: Bob is young.\nKind(Dave, True) ::: Dave is kind.\nRed(Dave, True) ::: Dave is red.\nBig(Fiona, True) ::: Fiona is big.\nCold(Fiona, True) ::: Fiona is cold.\nKind(Fiona, True) ::: Fiona is kind.\nSmart(Fiona, True) ::: Fiona is smart.\nYoung(Fiona, True) ::: Fiona is young.\nBig(Harry, True) ::: Harry is big.\nRules:\nBig($x, True) >>> Smart($x, True) ::: Big, smart people are red.\nYoung($x, True) >>> Red($x, True) ::: Young, red people are big.\nSmart($x, True) >>> Red($x, True) ::: If someone is smart then they are red.\nKind($x, True) >>> Rough($x, True) ::: All big, kind people are rough.\nRed($x, True) >>> Kind($x, True) ::: Red, big people are kind.\nYoung($x, True) >>> Cold($x, True) ::: If someone is young then they are cold.\nKind($x, True) >>> Smart($x, True) ::: All kind people are smart.\nRough($x, True) >>> Young($x, True) ::: All rough, smart people are young.\nBig($x, True) >>> Smart($x, True) ::: All big people are smart.\nQuery:\nYoung(Dave, True) ::: Dave is young.\n------\nProblem:\nBob is big. Bob is kind. Bob is red. Bob is smart. Bob is young. Dave is big. Dave is kind. Dave is red. Dave is smart. Dave is young. Fiona is big. Fiona is kind. Fiona is red. Fiona is smart. Fiona is young. Harry is big. Harry is kind. Harry is red. Harry is smart. Harry is young. If someone is big then they are kind. If someone is kind then they are smart. If someone is smart then they are red. If someone is red then they are young. If someone is young then they are kind.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Bob is young.\n###\nPredicates:\nBig($x, bool) ::: Is x big?\nKind($x, bool) ::: Is x kind?\nRed($x, bool) ::: Is x red?\nSmart($x, bool) ::: Is x smart?\nYoung($x, bool) ::: Is x young?\nFacts:\nBig(Bob, True) ::: Bob is big.\nKind(Bob, True) ::: Bob is kind.\nRed(Bob, True) ::: Bob is red.\nSmart"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-609_Q19",
    "context": "The cow likes the lion. The cow likes the mouse. The cow likes the squirrel. The lion eats the mouse. The lion is green. The lion likes the squirrel. The mouse is blue. The mouse likes the cow. The mouse visits the lion. The squirrel visits the cow. If someone visits the cow then they eat the mouse. If someone likes the mouse then they visit the lion. If someone visits the cow then they eat the cow. If someone visits the squirrel and the squirrel is blue then the squirrel likes the cow. If someone is cold then they eat the cow. If someone is green then they are big. If someone is big and green then they like the lion. If someone likes the lion then they are cold. If someone eats the cow then they visit the cow.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The mouse is not nice.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nLikes($x, $y, bool) ::: Does x like y?\nEats($x, $y, bool) ::: Does x eat y?\nVisits($x, $y, bool) ::: Does x visit y?\nIs($x, $y, bool) ::: Is x y?\nCold($x, bool) ::: Is x cold?\nBig($x, bool) ::: Is x big?\nNice($x, bool) ::: Is x nice?\nFacts:\nLikes(Cow, Lion, True) ::: The cow likes the lion.\nLikes(Cow, Mouse, True) ::: The cow likes the mouse.\nLikes(Cow, Squirrel, True) ::: The cow likes the squirrel.\nEats(Lion, Mouse, True) ::: The lion eats the mouse.\nGreen(Lion, True) ::: The lion is green.\nLikes(Lion, Squirrel, True) ::: The lion likes the squirrel.\nBlue(Mouse, True) ::: The mouse is blue.\nLikes(Mouse, Cow, True) ::: The mouse likes the cow.\nVisits(Mouse, Lion, True) ::: The mouse visits the lion.\nVisits(Squirrel, Cow, True) ::: The squirrel visits the cow.\nIf($x, $y, $z, bool) ::: If x then y else z.\nCold(Mouse, True) ::: The mouse is cold.\nBig(Lion, True) ::: The lion is big.\nGreen(Lion, True) ::: The lion is green.\nBig(Lion, True) && Green(Lion, True) >>> Likes(Lion, Cow, True) ::: If someone is big and green then they like the lion.\nLikes(Lion, Cow, True) >>> Cold(Lion, True) ::: If someone likes the lion then they are cold.\nEats(Mouse, Cow, True) >>> Visits(Mouse, Cow, True) ::: If someone eats the cow then they visit the cow.\nVisits(Squirrel, Cow, True) && Blue(Squirrel, True) >>> Likes(Squirrel, Cow, True) ::: If someone visits the squirrel and the squirrel is blue then the squirrel likes the cow.\nCold(Mouse, True) >>> Eats(Mouse, Cow, True) ::: If someone is cold then they eat the cow.\nGreen(Lion, True) >>> Big(Lion, True) ::: If someone is green then they are big.\nBig(Lion, True) && Green(Lion, True) >>> Likes(Lion, Cow, True) ::: If someone is big and green then they like the lion.\nQuery:\nNice(Mouse, False) ::: The mouse is not nice.\n------\nProblem:\nThe cow likes the lion. The cow likes the mouse. The cow likes the squirrel. The lion eats the mouse. The lion is green. The lion likes the squirrel. The mouse is blue. The mouse likes the cow. The mouse visits the lion. The squirrel visits the cow. If someone visits the cow then they eat the mouse. If someone likes the mouse then they visit the lion. If someone visits the cow then they eat the cow. If someone visits the squirrel and the squir"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-521_Q16",
    "context": "Anne is not blue. Anne is cold. Anne is kind. Anne is nice. Anne is quiet. Erin is quiet. Gary is not nice. Gary is rough. Harry is not blue. Harry is cold. Harry is nice. Harry is quiet. If Gary is not nice then Gary is cold. Rough, cold things are blue. If something is kind then it is cold. If something is white and not nice then it is quiet. If something is cold and blue then it is white. All kind, blue things are not white. If something is quiet and rough then it is not kind.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Harry is white.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue($x, bool) ::: Is x blue?\nCold($x, bool) ::: Is x cold?\nKind($x, bool) ::: Is x kind?\nNice($x, bool) ::: Is x nice?\nQuiet($x, bool) ::: Is x quiet?\nRough($x, bool) ::: Is x rough?\nWhite($x, bool) ::: Is x white?\nFacts:\nNotBlue(Anne, True) ::: Anne is not blue.\nCold(Anne, True) ::: Anne is cold.\nKind(Anne, True) ::: Anne is kind.\nNice(Anne, True) ::: Anne is nice.\nQuiet(Anne, True) ::: Anne is quiet.\nQuiet(Erin, True) ::: Erin is quiet.\nNotNice(Gary, True) ::: Gary is not nice.\nRough(Gary, True) ::: Gary is rough.\nNotBlue(Harry, True) ::: Harry is not blue.\nCold(Harry, True) ::: Harry is cold.\nNice(Harry, True) ::: Harry is nice.\nQuiet(Harry, True) ::: Harry is quiet.\nRules:\nNotNice(Gary, True) >>> Cold(Gary, True) ::: If Gary is not nice then Gary is cold.\nRough($x, True) && Cold($x, True) >>> Blue($x, True) ::: Rough, cold things are blue.\nKind($x, True) >>> Cold($x, True) ::: If something is kind then it is cold.\nWhite($x, True) && NotNice($x, True) >>> Quiet($x, True) ::: If something is white and not nice then it is quiet.\nCold($x, True) && Blue($x, True) >>> White($x, True) ::: If something is cold and blue then it is white.\nNotWhite($x, True) && Kind($x, True) && Blue($x, True) >>> NotWhite($x, True) ::: All kind, blue things are not white.\nQuiet($x, True) && Rough($x, True) >>> NotKind($x, True) ::: If something is quiet and rough then it is not kind.\nQuery:\nWhite(Harry, True) ::: Harry is white.\n------\nProblem:\nAnne is not blue. Anne is cold. Anne is kind. Anne is nice. Anne is quiet. Erin is quiet. Gary is not nice. Gary is rough. Harry is not blue. Harry is cold. Harry is nice. Harry is quiet. If Gary is not nice then Gary is cold. Rough, cold things are blue. If something is kind then it is cold. If something is white and not nice then it is quiet. If something is cold and blue then it is white. All kind, blue things are not white. If something is quiet and rough then it is not kind.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Harry is white.\n###\nPredicates:\nBlue($x, bool) ::: Is x blue?\nCold($x, bool) ::: Is x cold?\nKind($x, bool) ::: Is x kind?\nNice($x, bool) ::: Is x nice?\nQuiet($x, bool) ::: Is x"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-808_Q8",
    "context": "The cat is young. The cow is young. The cow visits the mouse. The mouse eats the cat. The mouse needs the cat. The mouse needs the rabbit. The mouse does not visit the cow. The mouse visits the rabbit. The rabbit is round. The rabbit does not need the cat. The rabbit visits the mouse. If someone eats the cat and they eat the cow then they do not need the mouse. If someone visits the cat then the cat eats the cow. All nice people are red. If the mouse needs the rabbit and the mouse eats the cat then the mouse eats the cow. If someone is red and they visit the mouse then the mouse needs the cow. If someone needs the cow then the cow visits the cat. All round people are nice. If someone needs the cat and the cat visits the rabbit then they do not eat the rabbit.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The mouse does not need the cow.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nYoung($x, bool) ::: Is x young?\nVisits($x, $y, bool) ::: Does x visit y?\nEats($x, $y, bool) ::: Does x eat y?\nNeeds($x, $y, bool) ::: Does x need y?\nRound($x, bool) ::: Is x round?\nRed($x, bool) ::: Is x red?\nRules:\nYoung($x, True) >>> Eats($x, $y, True) ::: The cat is young.\nYoung($x, True) >>> Eats($x, $y, True) ::: The cow is young.\nEats($x, $y, True) >>> Visits($x, $y, True) ::: The cow visits the mouse.\nEats($x, $y, True) >>> Needs($x, $y, True) ::: The mouse eats the cat.\nNeeds($x, $y, True) >>> Needs($x, $z, True) ::: The mouse needs the cat.\nNeeds($x, $y, True) >>> Needs($x, $z, True) ::: The mouse needs the rabbit.\nVisits($x, $y, True) >>> Needs($x, $y, True) ::: The mouse does not visit the cow.\nVisits($x, $y, True) >>> Needs($x, $y, True) ::: The mouse visits the rabbit.\nRound($x, True) >>> Needs($x, $y, True) ::: The rabbit is round.\nNeeds($x, $y, True) >>> Eats($x, $y, True) ::: The rabbit does not need the cat.\nVisits($x, $y, True) >>> Eats($x, $y, True) ::: The rabbit visits the mouse.\nEats($x, $y, True) >>> Eats($x, $z, True) ::: If someone eats the cat and they eat the cow then they do not need the mouse.\nEats($x, $y, True) >>> Visits($x, $y, True) ::: If someone visits the cat then the cat eats the cow.\nRed($x, True) >>> Young($x, True) ::: All nice people are red.\nNeeds($x, $y, True) >>> Eats($x, $y, True) ::: If the mouse needs the rabbit and the mouse eats the cat then the mouse eats the cow.\nVisits($x, $y, True) >>> Needs($x, $y, True) ::: If someone visits the mouse then the mouse needs the cow.\nNeeds($x, $y, True) >>> Eats($x, $y, True) ::: If someone needs the cow then the cow visits the cat.\nRound($x, True) >>> Red($x, True) ::: All round people are nice.\nEats($x, $y, True) >>> Needs($x, $y, True) ::: If someone needs the cat and the cat visits the rabbit then they do not eat the rabbit.\nQuery:\nNeeds($x, $y, True) >>> False ::: The mouse does not need the cow.\n------\nProblem:\nThe cat is young. The cow is young. The cow visits the mouse. The mouse eats the cat. The mouse needs"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-49_Q6",
    "context": "Bob is blue. Bob is round. Dave is blue. Dave is green. Dave is kind. Dave is quiet. Gary is blue. Gary is kind. Gary is quiet. Gary is young. Harry is blue. Harry is kind. Harry is quiet. Harry is round. Harry is white. Harry is young. If something is kind then it is quiet. If something is white and quiet then it is round. If something is green then it is white. If Bob is white then Bob is kind. Green, young things are white. If something is young then it is green. All blue, quiet things are round. If something is quiet then it is young. All round things are quiet.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is not young.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue($x, bool) ::: Is x blue?\nRound($x, bool) ::: Is x round?\nGreen($x, bool) ::: Is x green?\nKind($x, bool) ::: Is x kind?\nQuiet($x, bool) ::: Is x quiet?\nWhite($x, bool) ::: Is x white?\nYoung($x, bool) ::: Is x young?\nFacts:\nBlue(Bob, True) ::: Bob is blue.\nRound(Bob, True) ::: Bob is round.\nBlue(Dave, True) ::: Dave is blue.\nGreen(Dave, True) ::: Dave is green.\nKind(Dave, True) ::: Dave is kind.\nQuiet(Dave, True) ::: Dave is quiet.\nBlue(Gary, True) ::: Gary is blue.\nKind(Gary, True) ::: Gary is kind.\nQuiet(Gary, True) ::: Gary is quiet.\nYoung(Gary, True) ::: Gary is young.\nBlue(Harry, True) ::: Harry is blue.\nKind(Harry, True) ::: Harry is kind.\nQuiet(Harry, True) ::: Harry is quiet.\nRound(Harry, True) ::: Harry is round.\nWhite(Harry, True) ::: Harry is white.\nYoung(Harry, True) ::: Harry is young.\nRules:\nKind($x, True) >>> Quiet($x, True) ::: If something is kind then it is quiet.\nWhite($x, True) && Quiet($x, True) >>> Round($x, True) ::: If something is white and quiet then it is round.\nGreen($x, True) >>> White($x, True) ::: If something is green then it is white.\nBlue($x, True) >>> Kind($x, True) ::: If Bob is white then Bob is kind.\nGreen($x, True) >>> Young($x, True) ::: Green, young things are white.\nYoung($x, True) >>> Green($x, True) ::: If something is young then it is green.\nBlue($x, True) && Quiet($x, True) >>> Round($x, True) ::: All blue, quiet things are round.\nQuiet($x, True) >>> Young($x, True) ::: If something is quiet then it is young.\nRound($x, True) >>> Quiet($x, True) ::: All round things are quiet.\nQuery:\nYoung(Bob, False) ::: Bob is not young.\n------\nProblem:\nBob is blue. Bob is round. Dave is blue. Dave is green. Dave is kind. Dave is quiet. Gary is blue. Gary is kind. Gary is quiet. Gary is young. Harry is blue. Harry is kind. Harry is quiet. Harry is round. Harry is white. Harry is young. If something is kind then it is quiet. If something is white and quiet then it is round. If something is green then it is white. If Bob is white then Bob is kind. Green, young things are white. If something is young then it is green. All blue, quiet things are round. If something is quiet then it is young. All round things are quiet.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Bob is not young.\n###\nPredicates:"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-669_Q11",
    "context": "The dog eats the mouse. The dog eats the tiger. The dog visits the squirrel. The mouse is green. The mouse visits the tiger. The squirrel is big. The squirrel is round. The squirrel likes the dog. The tiger eats the dog. The tiger visits the mouse. If someone eats the tiger and the tiger is big then they are green. If someone is green then they like the squirrel. If the dog is green then the dog likes the mouse. If someone visits the tiger then the tiger is blue. If someone visits the tiger then the tiger visits the dog. If someone is blue and they eat the squirrel then the squirrel is green. If someone is blue then they eat the squirrel. If someone likes the dog and they are green then they are blue.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The squirrel eats the squirrel.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y, bool) ::: Does x eat y?\nVisits($x, $y, bool) ::: Does x visit y?\nLikes($x, $y, bool) ::: Does x like y?\nIs($x, $y, bool) ::: Is x y?\nBig($x, bool) ::: Is x big?\nRound($x, bool) ::: Is x round?\nGreen($x, bool) ::: Is x green?\nBlue($x, bool) ::: Is x blue?\nFacts:\nEats(Dog, Mouse, True) ::: The dog eats the mouse.\nEats(Dog, Tiger, True) ::: The dog eats the tiger.\nVisits(Dog, Squirrel, True) ::: The dog visits the squirrel.\nGreen(Mouse, True) ::: The mouse is green.\nVisits(Mouse, Tiger, True) ::: The mouse visits the tiger.\nBig(Squirrel, True) ::: The squirrel is big.\nRound(Squirrel, True) ::: The squirrel is round.\nLikes(Squirrel, Dog, True) ::: The squirrel likes the dog.\nEats(Tiger, Dog, True) ::: The tiger eats the dog.\nVisits(Tiger, Mouse, True) ::: The tiger visits the mouse.\nRules:\nEats($x, $y, True) >>> Is($x, Tiger, True) && Big($x, True) ::: If someone eats the tiger and the tiger is big then they are green.\nIs($x, Green, True) >>> Likes($x, Squirrel, True) ::: If someone is green then they like the squirrel.\nIs($x, Green, True) >>> Likes($x, Dog, True) ::: If the dog is green then the dog likes the mouse.\nVisits($x, Tiger, True) >>> Is($x, Blue, True) ::: If someone visits the tiger then the tiger is blue.\nVisits($x, Tiger, True) >>> Is($x, Tiger, True) && Visits($x, Dog, True) ::: If someone visits the tiger then the tiger visits the dog.\nIs($x, Blue, True) >>> Eats($x, Squirrel, True) && Is($x, Green, True) ::: If someone is blue and they eat the squirrel then the squirrel is green.\nIs($x, Blue, True) >>> Eats($x, Squirrel, True) ::: If someone is blue then they eat the squirrel.\nIs($x, Green, True) && Likes($x, Dog, True) >>> Is($x, Blue, True) ::: If someone likes the dog and they are green then they are blue.\nQuery:\nEats(Squirrel, Squirrel, True) ::: The squirrel eats the squirrel.\n------\nProblem:\nThe dog eats the mouse. The dog eats the tiger. The dog visits the squirrel. The mouse is green. The mouse visits the tiger. The squirrel is big. The squirrel is round. The squirrel likes the dog. The tiger eats the dog. The tiger visits the mouse. If someone eats the t"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-1020_Q21",
    "context": "The bald eagle chases the bear. The bald eagle is green. The bald eagle is round. The bald eagle likes the rabbit. The bald eagle visits the lion. The bear is young. The bear visits the bald eagle. The lion is red. The lion is round. The lion visits the rabbit. The rabbit is blue. The rabbit is red. If someone likes the bear then the bear is blue. If someone likes the lion then the lion likes the rabbit. If someone chases the bear and they visit the lion then the lion likes the bear. If someone visits the bear then they are red. If someone likes the bear and the bear is red then they chase the bear. If someone is red and they chase the rabbit then they are round. If the rabbit likes the bear and the bear likes the lion then the bear is young. If the rabbit visits the bald eagle then the bald eagle is green. If someone is blue then they visit the bear.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bald eagle does not chase the bald eagle.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nGreen($x, bool) ::: Is x green?\nRound($x, bool) ::: Is x round?\nLikes($x, $y, bool) ::: Does x like y?\nVisits($x, $y, bool) ::: Does x visit y?\nYoung($x, bool) ::: Is x young?\nBlue($x, bool) ::: Is x blue?\nRed($x, bool) ::: Is x red?\nFacts:\nChases(BaldEagle, Bear, True) ::: The bald eagle chases the bear.\nGreen(BaldEagle, True) ::: The bald eagle is green.\nRound(BaldEagle, True) ::: The bald eagle is round.\nLikes(BaldEagle, Rabbit, True) ::: The bald eagle likes the rabbit.\nVisits(BaldEagle, Lion, True) ::: The bald eagle visits the lion.\nYoung(Bear, True) ::: The bear is young.\nVisits(Bear, BaldEagle, True) ::: The bear visits the bald eagle.\nRed(Lion, True) ::: The lion is red.\nRound(Lion, True) ::: The lion is round.\nVisits(Lion, Rabbit, True) ::: The lion visits the rabbit.\nBlue(Rabbit, True) ::: The rabbit is blue.\nRed(Rabbit, True) ::: The rabbit is red.\nLikes(Bear, Lion, True) ::: If someone likes the bear then the bear is blue.\nLikes(Lion, Rabbit, True) ::: If someone likes the lion then the lion likes the rabbit.\nChases(BaldEagle, Bear, True) && Visits(BaldEagle, Lion, True) >>> Likes(Lion, Bear, True) ::: If someone chases the bear and they visit the lion then the lion likes the bear.\nVisits(Bear, BaldEagle, True) >>> Red(BaldEagle, True) ::: If someone visits the bear then they are red.\nLikes(BaldEagle, Bear, True) && Red(BaldEagle, True) >>> Chases(BaldEagle, Bear, True) ::: If someone likes the bear and the bear is red then they chase the bear.\nRed(BaldEagle, True) && Chases(BaldEagle, Rabbit, True) >>> Round(BaldEagle, True) ::: If the bald eagle chases the rabbit and the bald eagle is red then the bald eagle is round.\nLikes(Bear, Lion) && Likes(Lion, Rabbit) >>> Young(Bear, True) ::: If the rabbit likes the bear and the bear likes the lion then the bear is young.\nVisits(Rabbit, BaldEagle, True) >>> Green(BaldEagle, True) ::: If the rabbit visits the bald eagle then the bald eagle is green.\nBlue(Rabbit, True) >>> Visits(Rabbit, Bear, True) ::: If someone is blue then they visit the bear.\nQuery:\nChases(BaldEagle, BaldEagle, False) ::: The bald eagle does not chase the bald eagle.\n------"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-476_Q16",
    "context": "The bald eagle is not kind. The bear likes the bald eagle. The bear likes the mouse. The bear needs the squirrel. The mouse is cold. The mouse is kind. The mouse is round. The mouse likes the bald eagle. The mouse likes the bear. The mouse likes the squirrel. The mouse needs the bald eagle. The mouse needs the bear. The mouse needs the squirrel. The mouse sees the bald eagle. The squirrel is kind. The squirrel does not need the bald eagle. If someone sees the squirrel and the squirrel likes the bear then the bear does not need the bald eagle. If someone sees the bald eagle then the bald eagle needs the mouse. If someone sees the mouse then the mouse is blue. If someone likes the mouse and they do not need the bear then the bear likes the mouse. If someone sees the bear and they see the mouse then the bear is blue. If someone sees the squirrel and the squirrel likes the bald eagle then the squirrel sees the mouse. If someone is round then they see the mouse. All kind people are nice. If someone is blue then they see the bear.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bald eagle sees the bear.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nKind($x, bool) ::: Is x kind?\nRound($x, bool) ::: Is x round?\nBlue($x, bool) ::: Is x blue?\nNeeds($x, $y, bool) ::: Does x need y?\nLikes($x, $y, bool) ::: Does x like y?\nSees($x, $y, bool) ::: Does x see y?\nNice($x, bool) ::: Is x nice?\nFacts:\nKind(BaldEagle, False) ::: The bald eagle is not kind.\nLikes(Bear, BaldEagle, True) ::: The bear likes the bald eagle.\nLikes(Bear, Mouse, True) ::: The bear likes the mouse.\nNeeds(Bear, Squirrel, True) ::: The bear needs the squirrel.\nCold(Mouse, True) ::: The mouse is cold.\nKind(Mouse, True) ::: The mouse is kind.\nRound(Mouse, True) ::: The mouse is round.\nLikes(Mouse, BaldEagle, True) ::: The mouse likes the bald eagle.\nLikes(Mouse, Bear, True) ::: The mouse likes the bear.\nLikes(Mouse, Squirrel, True) ::: The mouse likes the squirrel.\nNeeds(Mouse, BaldEagle, True) ::: The mouse needs the bald eagle.\nNeeds(Mouse, Bear, True) ::: The mouse needs the bear.\nNeeds(Mouse, Squirrel, True) ::: The mouse needs the squirrel.\nSees(Mouse, BaldEagle, True) ::: The mouse sees the bald eagle.\nKind(Squirrel, True) ::: The squirrel is kind.\nDoesNotNeed(Squirrel, BaldEagle, True) ::: The squirrel does not need the bald eagle.\nIf(Sees(Squirrel, Bear) && Likes(Squirrel, Bear), DoesNotNeed(Bear, BaldEagle, True)) ::: If someone sees the squirrel and the squirrel likes the bear then the bear does not need the bald eagle.\nIf(Sees(BaldEagle, Mouse), Needs(Mouse, BaldEagle, True)) ::: If someone sees the bald eagle then the bald eagle needs the mouse.\nIf(Sees(Mouse, BaldEagle), Blue(Mouse, True)) ::: If someone sees the mouse then the mouse is blue.\nIf(Likes(Mouse, Bear) && DoesNotNeed(Mouse, Bear), Likes(Bear, Mouse, True)) ::: If someone likes the mouse and they do not need the bear then the bear likes the mouse.\nIf(Sees(Bear, Mouse) && Sees(Bear, Mouse), Blue(Bear, True)) ::: If someone sees the bear and they see the mouse then the bear is blue.\nIf(Likes(Squirrel, BaldEagle) && Sees(Squirrel, Mouse), Sees(Squirrel, Mouse)) ::: If someone sees the squirrel and the squirrel likes the bald eagle then the squirrel sees the mouse.\nIf(Round(x), Sees(x, Mouse)) ::: If someone is round then they see the mouse.\nAll(Kind(x), Nice(x)) ::: All kind people are nice.\nIf(Blue("
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-830_Q7",
    "context": "Anne is big. Anne is kind. Anne is nice. Anne is round. Anne is smart. Anne is young. Bob is big. Bob is nice. Charlie is big. Charlie is smart. Gary is young. All nice, round things are young. All round, smart things are green. If Charlie is green and Charlie is round then Charlie is nice. All smart things are round. All young, smart things are kind. All young things are big. If something is nice and round then it is smart.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Charlie is nice.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nKind($x, bool) ::: Is x kind?\nNice($x, bool) ::: Is x nice?\nRound($x, bool) ::: Is x round?\nSmart($x, bool) ::: Is x smart?\nYoung($x, bool) ::: Is x young?\nFacts:\nBig(Anne, True) ::: Anne is big.\nKind(Anne, True) ::: Anne is kind.\nNice(Anne, True) ::: Anne is nice.\nRound(Anne, True) ::: Anne is round.\nSmart(Anne, True) ::: Anne is smart.\nYoung(Anne, True) ::: Anne is young.\nBig(Bob, True) ::: Bob is big.\nNice(Bob, True) ::: Bob is nice.\nBig(Charlie, True) ::: Charlie is big.\nSmart(Charlie, True) ::: Charlie is smart.\nYoung(Gary, True) ::: Gary is young.\nRules:\nYoung($x, True) >>> Round($x, True) ::: All nice, round things are young.\nRound($x, True) >>> Smart($x, True) ::: All round, smart things are green.\nCharlie(Green, True) && Charlie(Round, True) >>> Charlie(Nice, True) ::: If Charlie is green and Charlie is round then Charlie is nice.\nSmart($x, True) >>> Round($x, True) ::: All smart things are round.\nYoung($x, True) && Smart($x, True) >>> Kind($x, True) ::: All young, smart things are kind.\nYoung($x, True) >>> Big($x, True) ::: All young things are big.\nNice($x, True) && Round($x, True) >>> Smart($x, True) ::: If something is nice and round then it is smart.\nQuery:\nNice(Charlie, True) ::: Charlie is nice.\n------\nProblem:\nAnne is big. Anne is kind. Anne is nice. Anne is round. Anne is smart. Anne is young. Bob is big. Bob is nice. Charlie is big. Charlie is smart. Gary is young. All nice, round things are young. All round, smart things are green. If Charlie is green and Charlie is round then Charlie is nice. All smart things are round. All young, smart things are kind. All young things are big. If something is nice and round then it is smart.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Charlie is nice.\n###\nPredicates:\nBig($x, bool) ::: Is x big?\nKind($x, bool) ::: Is x kind?\nNice($x, bool) ::: Is x nice?\nRound($x, bool) ::: Is x round?\nSmart($x, bool) ::: Is x smart?\nYoung($x, bool) ::: Is x young?\nFacts:\nBig(Anne, True) ::: Anne is big.\nKind(Anne, True) ::: Anne is kind.\nNice(Anne, True) ::: Anne is nice.\nRound(Anne, True) ::: Anne is round.\nSmart(Anne, True) ::: Anne is smart.\nYoung("
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-70_Q12",
    "context": "Anne is green. Dave is furry. Dave is green. Erin is green. Erin is kind. Erin is young. Fiona is red. Furry, red people are not kind. If someone is red then they are furry. If Fiona is kind then Fiona is not green. If Fiona is green and Fiona is red then Fiona is quiet. If someone is red and not kind then they are nice. If Fiona is green then Fiona is nice. If someone is quiet then they are green. Nice, red people are green. If someone is furry and not nice then they are young.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Fiona is not quiet.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen($x, bool) ::: Is x green?\nFurry($x, bool) ::: Is x furry?\nKind($x, bool) ::: Is x kind?\nYoung($x, bool) ::: Is x young?\nQuiet($x, bool) ::: Is x quiet?\nNice($x, bool) ::: Is x nice?\nRed($x, bool) ::: Is x red?\nFacts:\nGreen(Anne, True) ::: Anne is green.\nFurry(Dave, True) ::: Dave is furry.\nGreen(Dave, True) ::: Dave is green.\nGreen(Erin, True) ::: Erin is green.\nKind(Erin, True) ::: Erin is kind.\nYoung(Erin, True) ::: Erin is young.\nRed(Fiona, True) ::: Fiona is red.\nRules:\nFurry($x, True) && Red($x, True) >>> Kind($x, False) ::: Furry, red people are not kind.\nRed($x, True) >>> Furry($x, True) ::: If someone is red then they are furry.\nKind($x, True) >>> Green($x, False) ::: If Fiona is kind then Fiona is not green.\nRed($x, True) && Green($x, True) >>> Quiet($x, True) ::: If Fiona is green and Fiona is red then Fiona is quiet.\nRed($x, True) && Not(Kind($x, True)) >>> Nice($x, True) ::: If someone is red and not kind then they are nice.\nGreen($x, True) >>> Nice($x, True) ::: If someone is green then Fiona is nice.\nQuiet($x, True) >>> Green($x, True) ::: If someone is quiet then they are green.\nNice($x, True) && Red($x, True) >>> Green($x, True) ::: Nice, red people are green.\nFurry($x, True) && Not(Nice($x, True)) >>> Young($x, True) ::: If someone is furry and not nice then they are young.\nQuery:\nNot(Quiet(Fiona, True)) ::: Fiona is not quiet.\n------\nProblem:\nAnne is green. Anne is kind. Anne is quiet. Anne is young. Dave is green. Dave is kind. Dave is quiet. Dave is young. Erin is green. Erin is kind. Erin is quiet. Erin is young. Fiona is green. Fiona is kind. Fiona is quiet. Fiona is young. Harry is green. Harry is kind. Harry is quiet. Harry is young. If someone is green then they are kind. If someone is green then they are quiet. If someone is green then they are young. If someone is kind then they are quiet. If someone is kind then they are young. If someone is quiet then they are young.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Anne is not young.\n###\nPredicates:\nGreen($x, bool) ::: Is x green?\nKind($x, bool) ::: Is x kind?\nQuiet($x, bool) ::: Is x quiet?\nYoung($x, bool) ::: Is x young?\nFacts:\nGreen(Anne, True) ::: Anne is"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-272_Q6",
    "context": "Anne is furry. Charlie is big. Charlie is kind. Charlie is round. Erin is big. Erin is kind. Erin is red. Erin is round. Harry is kind. Harry is round. If Harry is kind then Harry is round. Furry, big things are red. All white things are big. All round, red things are white. If Harry is round and Harry is big then Harry is furry. Furry things are quiet. All big, quiet things are furry. All kind things are red.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Charlie is not white.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nFurry($x, bool) ::: Is x furry?\nBig($x, bool) ::: Is x big?\nKind($x, bool) ::: Is x kind?\nRed($x, bool) ::: Is x red?\nRound($x, bool) ::: Is x round?\nQuiet($x, bool) ::: Is x quiet?\nFacts:\nFurry(Anne, True) ::: Anne is furry.\nBig(Charlie, True) ::: Charlie is big.\nKind(Charlie, True) ::: Charlie is kind.\nRound(Charlie, True) ::: Charlie is round.\nBig(Erin, True) ::: Erin is big.\nKind(Erin, True) ::: Erin is kind.\nRed(Erin, True) ::: Erin is red.\nRound(Erin, True) ::: Erin is round.\nKind(Harry, True) ::: Harry is kind.\nRound(Harry, True) ::: Harry is round.\nRules:\nFurry($x, True) && Big($x, True) >>> Red($x, True) ::: Furry, big things are red.\nWhite($x, True) >>> Big($x, True) ::: All white things are big.\nRound($x, True) && Red($x, True) >>> White($x, True) ::: All round, red things are white.\nHarry($x, True) && Round($x, True) && Big($x, True) >>> Furry($x, True) ::: If Harry is round and Harry is big then Harry is furry.\nFurry($x, True) >>> Quiet($x, True) ::: Furry things are quiet.\nBig($x, True) && Quiet($x, True) >>> Furry($x, True) ::: All big, quiet things are furry.\nKind($x, True) >>> Red($x, True) ::: All kind things are red.\nQuery:\nNot(White(Charlie, True)) ::: Charlie is not white.\n------\nProblem:\nAnne is furry. Anne is green. Anne is red. Anne is rough. Anne is white. Anne is young. Anne is quiet. Anne is big. Anne is kind. Anne is round. Anne is blue. Anne is purple. Anne is yellow. Anne is orange. Anne is pink. Anne is brown. Anne is black. Anne is grey. Anne is silver. Anne is gold. Anne is platinum. Anne is diamond. Anne is ruby. Anne is emerald. Anne is sapphire. Anne is topaz. Anne is amethyst. Anne is aquamarine. Anne is garnet. Anne is tourmaline. Anne is opal. Anne is jade. Anne is onyx. Anne is agate. Anne is jasper. Anne is obsidian. Anne is alexandrite. Anne is moonstone. Anne is turquoise. Anne is tanzanite. Anne is peridot. Anne is zircon. Anne is citrine. Anne is amber. Anne is opal. Anne is pearl. Anne is coral. Anne is jet. Anne is lapis lazuli. Anne is malachite. Anne is azurite. Anne is turquoise. Anne is chalcedony. Anne is agate. Anne is jasper. Anne is obsidian. Anne is alexandrite. Anne is moon"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-259_Q16",
    "context": "Anne is blue. Erin is quiet. Fiona is big. Fiona is furry. Fiona is nice. Harry is furry. Harry is not rough. Round things are blue. If something is round and not big then it is not nice. Quiet things are nice. All blue, round things are nice. Nice, rough things are round. If something is furry then it is round. Furry, blue things are quiet. Nice things are furry. If something is round and blue then it is not rough.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Anne is quiet.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue($x, bool) ::: Is x blue?\nQuiet($x, bool) ::: Is x quiet?\nBig($x, bool) ::: Is x big?\nFurry($x, bool) ::: Is x furry?\nNice($x, bool) ::: Is x nice?\nRound($x, bool) ::: Is x round?\nRough($x, bool) ::: Is x rough?\nFacts:\nBlue(Anne, True) ::: Anne is blue.\nQuiet(Erin, True) ::: Erin is quiet.\nBig(Fiona, True) ::: Fiona is big.\nFurry(Fiona, True) ::: Fiona is furry.\nNice(Fiona, True) ::: Fiona is nice.\nRound(Fiona, True) ::: Fiona is round.\nFurry(Harry, True) ::: Harry is furry.\nNot(Rough(Harry, True)) ::: Harry is not rough.\nRules:\nRound($x, True) >>> Blue($x, True) ::: Round things are blue.\nNot(Big($x, True)) && Not(Round($x, True)) >>> Not(Nice($x, True)) ::: If something is round and not big then it is not nice.\nQuiet($x, True) >>> Nice($x, True) ::: Quiet things are nice.\nAll(Blue($x, True), Round($x, True)) >>> Nice($x, True) ::: All blue, round things are nice.\nNice($x, True) && Rough($x, True) >>> Round($x, True) ::: Nice, rough things are round.\nFurry($x, True) >>> Round($x, True) ::: If something is furry then it is round.\nFurry(Blue($x, True), True) >>> Quiet($x, True) ::: Furry, blue things are quiet.\nNice($x, True) >>> Furry($x, True) ::: Nice things are furry.\nNot(Round($x, True)) && Blue($x, True) >>> Not(Rough($x, True)) ::: If something is round and blue then it is not rough.\nQuery:\nQuiet(Anne, True) ::: Anne is quiet.\n------\nProblem:\nAnne is blue. Erin is furry. Erin is green. Fiona is furry. Fiona is quiet. Fiona is red. Fiona is rough. Fiona is white. Harry is furry. Harry is quiet. Harry is white. Young people are furry. If Anne is quiet then Anne is red. Young, green people are rough. If someone is green then they are white. If someone is furry and quiet then they are white. If someone is young and white then they are rough. All red people are young.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Erin is white.\n###\nPredicates:\nBlue($x, bool) ::: Is x blue?\nFurry($x, bool) ::: Is x furry?\nGreen($x, bool) ::: Is x green?\nRed($x, bool) ::: Is x red?\nRough($x, bool) ::: Is x rough?\nWhite($x, bool) ::: Is x white?\nYoung($x, bool) ::: Is x young"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-998_Q14",
    "context": "The cat likes the dog. The cat likes the rabbit. The cat visits the rabbit. The dog chases the rabbit. The dog likes the rabbit. The dog visits the cat. The lion is green. The lion visits the cat. The lion visits the rabbit. The rabbit chases the cat. The rabbit chases the dog. The rabbit is round. The rabbit likes the dog. The rabbit visits the lion. If something chases the lion and it likes the cat then the cat is blue. If something is kind then it visits the rabbit. If the rabbit is kind then the rabbit visits the cat. If something visits the cat then the cat is blue. If something likes the dog then it is blue. If something chases the lion and it is green then the lion likes the dog. If something is blue and it likes the dog then it is green. If something is kind and it likes the rabbit then the rabbit chases the cat. If something visits the lion and it is green then it chases the lion.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The dog is blue.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nLikes($x, $y, bool) ::: Does x like y?\nVisits($x, $y, bool) ::: Does x visit y?\nChases($x, $y, bool) ::: Does x chase y?\nKind($x, bool) ::: Is x kind?\nBlue($x, bool) ::: Is x blue?\nGreen($x, bool) ::: Is x green?\nRound($x, bool) ::: Is x round?\nFacts:\nLikes(Cat, Dog, True) ::: The cat likes the dog.\nLikes(Cat, Rabbit, True) ::: The cat likes the rabbit.\nVisits(Cat, Rabbit, True) ::: The cat visits the rabbit.\nChases(Dog, Rabbit, True) ::: The dog chases the rabbit.\nLikes(Dog, Rabbit, True) ::: The dog likes the rabbit.\nVisits(Dog, Cat, True) ::: The dog visits the cat.\nGreen(Lion, True) ::: The lion is green.\nVisits(Lion, Cat, True) ::: The lion visits the cat.\nVisits(Lion, Rabbit, True) ::: The lion visits the rabbit.\nChases(Rabbit, Cat, True) ::: The rabbit chases the cat.\nChases(Rabbit, Dog, True) ::: The rabbit chases the dog.\nRound(Rabbit, True) ::: The rabbit is round.\nLikes(Rabbit, Dog, True) ::: The rabbit likes the dog.\nVisits(Rabbit, Lion) ::: The rabbit visits the lion.\nRules:\nLikes($x, $y, True) && Chases($x, $y, True) >>> Cat($x, True) ::: If something chases the lion and it likes the cat then the cat is blue.\nKind($x, True) >>> Visits($x, Rabbit, True) ::: If something is kind then it visits the rabbit.\nKind($x, True) && Likes($x, Rabbit, True) >>> Chases($x, Cat, True) ::: If the rabbit is kind then the rabbit visits the cat.\nVisits($x, Lion, True) && Green($x, True) >>> Chases($x, Lion, True) ::: If something visits the lion and it is green then it chases the lion.\nLikes($x, Dog, True) >>> Blue($x, True) ::: If something likes the dog then it is blue.\nChases($x, Lion, True) && Green($x, True) >>> Likes($x, Dog, True) ::: If something chases the lion and it is green then the lion likes the dog.\nBlue($x, True) && Likes($x, Dog, True) >>> Green($x, True) ::: If something is blue and it likes the dog then it is green.\nKind($x, True) && Likes($x, Rabbit, True) >>> Chases($x, Cat, True) ::: If something is kind and it likes the rabbit then the rabbit chases the cat.\nVisits($x, Lion, True) && Green($x, True) >>> Chases($x, Lion, True) ::: If something visits the lion and it is green then it chases the lion.\nQuery:\nBlue(Dog"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-997_Q7",
    "context": "Charlie is cold. Charlie is nice. Charlie is rough. Charlie is round. Charlie is smart. Dave is round. Dave is white. Fiona is rough. Fiona is smart. Fiona is white. Gary is smart. Rough, round things are cold. All smart things are round. All big, nice things are rough. If Charlie is white then Charlie is nice. If something is nice and smart then it is big. If something is round then it is nice.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is big.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nNice($x, bool) ::: Is x nice?\nRough($x, bool) ::: Is x rough?\nRound($x, bool) ::: Is x round?\nSmart($x, bool) ::: Is x smart?\nBig($x, bool) ::: Is x big?\nFacts:\nCold(Charlie, True) ::: Charlie is cold.\nNice(Charlie, True) ::: Charlie is nice.\nRough(Charlie, True) ::: Charlie is rough.\nRound(Charlie, True) ::: Charlie is round.\nSmart(Charlie, True) ::: Charlie is smart.\nRound(Dave, True) ::: Dave is round.\nWhite(Dave, True) ::: Dave is white.\nRough(Fiona, True) ::: Fiona is rough.\nSmart(Fiona, True) ::: Fiona is smart.\nWhite(Fiona, True) ::: Fiona is white.\nSmart(Gary, True) ::: Gary is smart.\nRules:\nRound($x, True) >>> Nice($x, True) ::: If something is round then it is nice.\nSmart($x, True) >>> Round($x, True) ::: All smart things are round.\nBig($x, True) >>> Nice($x, True) && Smart($x, True) ::: If something is nice and smart then it is big.\nRough($x, True) && Big($x, True) >>> Nice($x, True) ::: If something is big, nice and rough then it is nice.\nRound($x, True) >>> Cold($x, True) ::: Rough, round things are cold.\nWhite($x, True) >>> Nice($x, True) ::: If Charlie is white then Charlie is nice.\n------\nProblem:\nCharlie is cold. Charlie is nice. Charlie is rough. Charlie is round. Charlie is smart. Dave is round. Dave is white. Fiona is rough. Fiona is smart. Fiona is white. Gary is smart. Rough, round things are cold. All smart things are round. All big, nice things are rough. If Charlie is white then Charlie is nice. If something is nice and smart then it is big. If something is round then it is nice.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Charlie is big.\n###\nPredicates:\nCold($x, bool) ::: Is x cold?\nNice($x, bool) ::: Is x nice?\nRough($x, bool) ::: Is x rough?\nRound($x, bool) ::: Is x round?\nSmart($x, bool) ::: Is x smart?\nBig($x, bool) ::: Is x big?\nFacts:\nCold(Charlie, True) ::: Charlie is cold.\nNice(Charlie, True) ::: Charlie is nice.\nRough(Charlie, True) ::: Charlie is rough.\nRound(Charlie, True) ::: Charlie is round.\nSmart(Charlie, True) ::: Charlie is smart.\nRound(Dave, True) ::: Dave is round.\nWhite(Dave, True) ::: Dave is white.\nRough(Fiona, True) ::: Fiona is rough."
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-642_Q10",
    "context": "Bob is big. Bob is cold. Bob is smart. Bob is young. Charlie is kind. Charlie is young. Erin is big. Erin is cold. Erin is furry. Erin is smart. Gary is furry. Gary is smart. Young things are smart. Furry things are cold. All furry, kind things are rough. All rough things are smart. Cold things are furry. If something is big then it is cold. If Charlie is young and Charlie is smart then Charlie is big.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Charlie is not furry.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nCold($x, bool) ::: Is x cold?\nKind($x, bool) ::: Is x kind?\nSmart($x, bool) ::: Is x smart?\nYoung($x, bool) ::: Is x young?\nFurry($x, bool) ::: Is x furry?\nRough($x, bool) ::: Is x rough?\nFacts:\nBig(Bob, True) ::: Bob is big.\nCold(Bob, True) ::: Bob is cold.\nSmart(Bob, True) ::: Bob is smart.\nYoung(Bob, True) ::: Bob is young.\nKind(Charlie, True) ::: Charlie is kind.\nYoung(Charlie, True) ::: Charlie is young.\nBig(Erin, True) ::: Erin is big.\nCold(Erin, True) ::: Erin is cold.\nFurry(Erin, True) ::: Erin is furry.\nSmart(Erin, True) ::: Erin is smart.\nFurry(Gary, True) ::: Gary is furry.\nSmart(Gary, True) ::: Gary is smart.\nRules:\nYoung($x, True) >>> Smart($x, True) ::: Young things are smart.\nFurry($x, True) >>> Cold($x, True) ::: Furry things are cold.\nFurry($x, True) && Kind($x, True) >>> Rough($x, True) ::: All furry, kind things are rough.\nRough($x, True) >>> Smart($x, True) ::: All rough things are smart.\nCold($x, True) >>> Furry($x, True) ::: Cold things are furry.\nBig($x, True) >>> Cold($x, True) ::: If something is big then it is cold.\nYoung($x, True) && Smart($x, True) >>> Big($x, True) ::: If Charlie is young and Charlie is smart then Charlie is big.\nQuery:\nFurry(Charlie, False) ::: Charlie is not furry.\n------\nProblem:\nBob is big. Bob is cold. Bob is smart. Bob is young. Charlie is kind. Charlie is young. Erin is big. Erin is cold. Erin is furry. Erin is smart. Gary is furry. Gary is smart. Young things are smart. Furry things are cold. All furry, kind things are rough. All rough things are smart. Cold things are furry. If something is big then it is cold. If Charlie is young and Charlie is smart then Charlie is big.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Bob is not furry.\n###\nPredicates:\nBig($x, bool) ::: Is x big?\nCold($x, bool) ::: Is x cold?\nKind($x, bool) ::: Is x kind?\nSmart($x, bool) ::: Is x smart?\nYoung($x, bool) ::: Is x young?\nFurry($x, bool) ::: Is x furry?\nRough($x, bool) ::: Is x rough?\nFacts:\nBig(Bob, True) ::: Bob is big.\nCold(B"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-826_Q3",
    "context": "The dog eats the tiger. The dog is blue. The dog visits the lion. The lion eats the mouse. The lion is rough. The lion is round. The lion visits the tiger. The mouse eats the tiger. The tiger eats the lion. The tiger needs the mouse. The tiger visits the dog. The tiger visits the lion. If someone visits the mouse then they visit the lion. If someone needs the lion then they visit the mouse. If someone visits the tiger then the tiger eats the mouse. If someone eats the mouse and they are blue then they visit the tiger. If someone eats the mouse and the mouse is round then they eat the lion. If someone visits the tiger and the tiger visits the mouse then they visit the dog. If someone is round and they need the lion then the lion is red. If someone visits the lion then the lion visits the mouse. If someone visits the dog then they need the lion.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The tiger eats the mouse.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y, bool) ::: Does x eat y?\nVisits($x, $y, bool) ::: Does x visit y?\nNeeds($x, $y, bool) ::: Does x need y?\nBlue($x, bool) ::: Is x blue?\nRound($x, bool) ::: Is x round?\nRed($x, bool) ::: Is x red?\nFacts:\nEats(Dog, Tiger, True) ::: The dog eats the tiger.\nBlue(Dog, True) ::: The dog is blue.\nVisits(Dog, Lion, True) ::: The dog visits the lion.\nEats(Lion, Mouse, True) ::: The lion eats the mouse.\nRound(Lion, True) ::: The lion is round.\nVisits(Lion, Tiger, True) ::: The lion visits the tiger.\nEats(Mouse, Tiger, True) ::: The mouse eats the tiger.\nEats(Tiger, Lion, True) ::: The tiger eats the lion.\nNeeds(Tiger, Mouse, True) ::: The tiger needs the mouse.\nVisits(Tiger, Dog, True) ::: The tiger visits the dog.\nVisits(Tiger, Lion, True) ::: The tiger visits the lion.\nVisits($x, Mouse, True) >>> Visits($x, Lion, True) ::: If someone visits the mouse then they visit the lion.\nNeeds($x, Lion, True) >>> Visits($x, Mouse, True) ::: If someone needs the lion then they visit the mouse.\nEats($x, Mouse, True) && Blue($x, True) >>> Visits($x, Tiger, True) ::: If someone eats the mouse and they are blue then they visit the tiger.\nEats($x, Mouse, True) && Round($x, True) >>> Eats($x, Lion, True) ::: If someone eats the mouse and the mouse is round then they eat the lion.\nVisits($x, Tiger, True) && Visits(Tiger, Mouse, True) >>> Visits($x, Dog, True) ::: If someone visits the tiger and the tiger visits the mouse then they visit the dog.\nRound($x, True) && Needs($x, Lion, True) >>> Red($x, True) ::: If someone is round and they need the lion then the lion is red.\nVisits($x, Lion, True) >>> Visits($x, Mouse, True) ::: If someone visits the lion then the lion visits the mouse.\nVisits($x, Dog, True) >>> Needs($x, Lion, True) ::: If someone visits the dog then they need the lion.\nQuery:\nEats(Tiger, Mouse, True) ::: The tiger eats the mouse.\n------\nProblem:\nThe dog eats the tiger. The dog is blue. The dog visits the lion. The lion eats the mouse. The lion is rough. The lion is round. The lion visits the tiger. The mouse eats the tiger. The tiger eats the lion. The tiger needs the mouse. The tiger visits the dog. The tiger visits the lion. If someone visits the mouse then they visit the lion. If someone needs the lion then they visit the mouse. If someone visits the tiger then the tiger"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-468_Q18",
    "context": "Anne is furry. Anne is green. Bob is green. Bob is quiet. Bob is round. Bob is white. Bob is young. Gary is furry. Gary is white. Harry is smart. Harry is white. If something is quiet and furry then it is green. All smart, white things are quiet. Furry things are smart. If something is round then it is furry. If something is green and white then it is young. If Gary is white and Gary is young then Gary is round.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Anne is white.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nFurry($x, bool) ::: Is x furry?\nGreen($x, bool) ::: Is x green?\nQuiet($x, bool) ::: Is x quiet?\nRound($x, bool) ::: Is x round?\nSmart($x, bool) ::: Is x smart?\nWhite($x, bool) ::: Is x white?\nYoung($x, bool) ::: Is x young?\nFacts:\nFurry(Anne, True) ::: Anne is furry.\nGreen(Anne, True) ::: Anne is green.\nGreen(Bob, True) ::: Bob is green.\nQuiet(Bob, True) ::: Bob is quiet.\nRound(Bob, True) ::: Bob is round.\nWhite(Bob, True) ::: Bob is white.\nYoung(Bob, True) ::: Bob is young.\nFurry(Gary, True) ::: Gary is furry.\nWhite(Gary, True) ::: Gary is white.\nSmart(Harry, True) ::: Harry is smart.\nWhite(Harry, True) ::: Harry is white.\nRules:\nFurry($x, True) && Quiet($x, True) >>> Green($x, True) ::: If something is quiet and furry then it is green.\nSmart($x, True) && White($x, True) >>> Quiet($x, True) ::: All smart, white things are quiet.\nFurry($x, True) >>> Smart($x, True) ::: Furry things are smart.\nRound($x, True) >>> Furry($x, True) ::: If something is round then it is furry.\nGreen($x, True) && White($x, True) >>> Young($x, True) ::: If something is green and white then it is young.\nWhite($x, True) && Young($x, True) >>> Round($x, True) ::: If Gary is white and Gary is young then Gary is round.\nQuery:\nWhite(Anne, True) ::: Anne is white.\n------"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-858_Q8",
    "context": "Anne is smart. Charlie is big. Charlie is green. Charlie is round. Charlie is smart. Charlie is young. Erin is cold. Erin is round. Harry is cold. Harry is round. All cold people are big. Green people are furry. Big people are green. If Erin is furry then Erin is green. If Erin is green then Erin is furry. If someone is smart then they are cold. If Anne is big and Anne is furry then Anne is round. If Harry is round and Harry is young then Harry is furry.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Erin is not furry.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nSmart($x, bool) ::: Is x smart?\nBig($x, bool) ::: Is x big?\nGreen($x, bool) ::: Is x green?\nRound($x, bool) ::: Is x round?\nCold($x, bool) ::: Is x cold?\nFurry($x, bool) ::: Is x furry?\nYoung($x, bool) ::: Is x young?\nFacts:\nSmart(Anne, True) ::: Anne is smart.\nBig(Charlie, True) ::: Charlie is big.\nGreen(Charlie, True) ::: Charlie is green.\nRound(Charlie, True) ::: Charlie is round.\nSmart(Charlie, True) ::: Charlie is smart.\nYoung(Charlie, True) ::: Charlie is young.\nCold(Erin, True) ::: Erin is cold.\nRound(Erin, True) ::: Erin is round.\nCold(Harry, True) ::: Harry is cold.\nRound(Harry, True) ::: Harry is round.\nRules:\nCold($x, True) >>> Big($x, True) ::: All cold people are big.\nGreen($x, True) >>> Furry($x, True) ::: Green people are furry.\nBig($x, True) >>> Green($x, True) ::: Big people are green.\nFurry($x, True) >>> Erin($x, True) ::: If Erin is furry then Erin is green.\nGreen($x, True) >>> Furry($x, True) ::: If Erin is green then Erin is furry.\nSmart($x, True) >>> Cold($x, True) ::: If someone is smart then they are cold.\nBig($x, True) && Furry($x, True) >>> Round($x, True) ::: If Anne is big and Anne is furry then Anne is round.\nRound($x, True) && Young($x, True) >>> Furry($x, True) ::: If Harry is round and Harry is"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-649_Q4",
    "context": "Charlie is big. Erin is cold. Erin is kind. Erin is smart. Fiona is big. Gary is blue. Gary is young. All big people are kind. Green people are smart. All blue, young people are smart. If someone is blue and smart then they are cold. Smart, blue people are green. Blue people are green. All kind people are blue.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is not smart.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nCold($x, bool) ::: Is x cold?\nKind($x, bool) ::: Is x kind?\nSmart($x, bool) ::: Is x smart?\nBlue($x, bool) ::: Is x blue?\nYoung($x, bool) ::: Is x young?\nFacts:\nBig(Charlie, True) ::: Charlie is big.\nCold(Erin, True) ::: Erin is cold.\nKind(Erin, True) ::: Erin is kind.\nSmart(Erin, True) ::: Erin is smart.\nBig(Fiona, True) ::: Fiona is big.\nBlue(Gary, True) ::: Gary is blue.\nYoung(Gary, True) ::: Gary is young.\nRules:\nBig($x, True) >>> Kind($x, True) ::: All big people are kind.\nGreen($x, True) >>> Smart($x, True) ::: Green people are smart.\nYoung($x, True) && Blue($x, True) >>> Smart($x, True) ::: All blue, young people are smart.\nBlue($x, True) && Smart($x, True) >>> Cold($x, True) ::: If someone is blue and smart then they are cold.\nSmart($x, True) && Blue($x, True) >>> Green($x, True) ::: Smart, blue people are green.\nBlue($x, True) >>> Green($x, True) ::: Blue people are green.\nKind($x, True) >>> Blue($x, True) ::: All kind people are blue.\nQuery:\nNot(Smart(Gary, True)) ::: Gary is not smart.\n------\nProblem:\nCharlie is big. Erin is cold. Erin is kind. Erin is smart. Fiona is big. Gary is blue. Gary is young. All big people are kind. Green people are smart. All blue, young people are smart. If someone is blue and smart then they are cold. Smart, blue people are green. Blue people"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-669_Q17",
    "context": "The dog eats the mouse. The dog eats the tiger. The dog visits the squirrel. The mouse is green. The mouse visits the tiger. The squirrel is big. The squirrel is round. The squirrel likes the dog. The tiger eats the dog. The tiger visits the mouse. If someone eats the tiger and the tiger is big then they are green. If someone is green then they like the squirrel. If the dog is green then the dog likes the mouse. If someone visits the tiger then the tiger is blue. If someone visits the tiger then the tiger visits the dog. If someone is blue and they eat the squirrel then the squirrel is green. If someone is blue then they eat the squirrel. If someone likes the dog and they are green then they are blue.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The dog is not green.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y, bool) ::: Does x eat y?\nVisits($x, $y, bool) ::: Does x visit y?\nLikes($x, $y, bool) ::: Does x like y?\nIs($x, $y, bool) ::: Is x y?\nBig($x, bool) ::: Is x big?\nRound($x, bool) ::: Is x round?\nGreen($x, bool) ::: Is x green?\nBlue($x, bool) ::: Is x blue?\nFacts:\nEats(Dog, Mouse, True) ::: The dog eats the mouse.\nEats(Dog, Tiger, True) ::: The dog eats the tiger.\nVisits(Dog, Squirrel, True) ::: The dog visits the squirrel.\nGreen(Mouse, True) ::: The mouse is green.\nVisits(Mouse, Tiger, True) ::: The mouse visits the tiger.\nBig(Squirrel, True) ::: The squirrel is big.\nRound(Squirrel, True) ::: The squirrel is round.\nLikes(Squirrel, Dog, True) ::: The squirrel likes the dog.\nEats(Tiger, Dog, True) ::: The tiger eats the dog.\nVisits(Tiger, Mouse, True) ::: The tiger visits the mouse.\nRules:\nEats($x, $y, True) && $y Is Tiger && Big($y, True) >>> Green($x, True) ::: If someone eats the tiger and the tiger is big then they are green.\nGreen($x, True) >>> Likes($x, Squirrel, True) ::: If someone is green then they like the squirrel.\nGreen(Dog, True) >>> Likes(Dog, Mouse, True) ::: If the dog is green then the dog likes the mouse.\nVisits($x, Tiger, True) >>> Is($x, Tiger, True) ::: If someone visits the tiger then the tiger is"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-897_Q10",
    "context": "The bald eagle chases the tiger. The bald eagle is big. The bald eagle is green. The cow is big. The cow is young. The cow likes the tiger. The rabbit is round. The rabbit needs the cow. The rabbit needs the tiger. The tiger likes the cow. If someone likes the tiger and the tiger is green then they chase the rabbit. If someone is green then they chase the cow. If someone chases the rabbit and they like the tiger then the tiger needs the cow. If someone is big and they chase the bald eagle then the bald eagle needs the tiger. If someone is green and they chase the cow then they need the cow. If someone is big and they need the cow then the cow is green.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cow does not chase the cow.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nBig($x, bool) ::: Is x big?\nGreen($x, bool) ::: Is x green?\nYoung($x, bool) ::: Is x young?\nLikes($x, $y, bool) ::: Does x like y?\nNeeds($x, $y, bool) ::: Does x need y?\nFacts:\nChases(BaldEagle, Tiger, True) ::: The bald eagle chases the tiger.\nBig(BaldEagle, True) ::: The bald eagle is big.\nGreen(BaldEagle, True) ::: The bald eagle is green.\nBig(Cow, True) ::: The cow is big.\nYoung(Cow, True) ::: The cow is young.\nLikes(Cow, Tiger, True) ::: The cow likes the tiger.\nRound(Rabbit, True) ::: The rabbit is round.\nNeeds(Rabbit, Cow, True) ::: The rabbit needs the cow.\nNeeds(Rabbit, Tiger, True) ::: The rabbit needs the tiger.\nLikes(Tiger, Cow, True) ::: The tiger likes the cow.\nRules:\nChases($x, $y, True) >>> Likes($x, Tiger, True) && Green($x, True) ::: If someone likes the tiger and the tiger is green then they chase the rabbit.\nChases($x, $y, True) >>> Green($x, True) ::: If someone chases the rabbit and they like the tiger then the tiger needs the cow.\nChases($x, $y, True) >>> Likes($x, Tiger, True) ::: If someone chases the rabbit and they like the tiger then the tiger needs the cow.\nChases($x, $y, True) >>> Big($x, True) && Chases($x, BaldEagle, True) ::: If someone chases the rabbit and they like the t"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-741_Q8",
    "context": "Dave is big. Dave is blue. Dave is cold. Dave is rough. Dave is smart. Dave is white. Dave is young. Erin is big. Erin is cold. Erin is smart. Erin is white. Erin is young. Fiona is big. Fiona is blue. Fiona is rough. Harry is smart. All blue, cold things are rough. Cold, white things are big. If Erin is white then Erin is young. If something is smart then it is young. Young things are cold. If Harry is rough then Harry is big. If something is cold then it is blue. If something is rough and big then it is blue. White, cold things are young.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Harry is not blue.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nBlue($x, bool) ::: Is x blue?\nCold($x, bool) ::: Is x cold?\nRough($x, bool) ::: Is x rough?\nSmart($x, bool) ::: Is x smart?\nWhite($x, bool) ::: Is x white?\nYoung($x, bool) ::: Is x young?\nFacts:\nBig(Dave, True) ::: Dave is big.\nBlue(Dave, True) ::: Dave is blue.\nCold(Dave, True) ::: Dave is cold.\nRough(Dave, True) ::: Dave is rough.\nSmart(Dave, True) ::: Dave is smart.\nWhite(Dave, True) ::: Dave is white.\nYoung(Dave, True) ::: Dave is young.\nBig(Erin, True) ::: Erin is big.\nCold(Erin, True) ::: Erin is cold.\nSmart(Erin, True) ::: Erin is smart.\nWhite(Erin, True) ::: Erin is white.\nYoung(Erin, True) ::: Erin is young.\nBig(Fiona, True) ::: Fiona is big.\nBlue(Fiona, True) ::: Fiona is blue.\nRough(Fiona, True) ::: Fiona is rough.\nSmart(Harry, True) ::: Harry is smart.\nRules:\nBlue($x, True) >>> Cold($x, True) ::: All blue, cold things are rough.\nCold($x, True) >>> White($x, True) ::: Cold, white things are big.\nWhite($x, True) >>> Young($x, True) ::: If Erin is white then Erin is young.\nSmart($x, True) >>> Young($x, True) ::: If something is smart then it is young.\nYoung($x, True) >>> Cold($x, True) ::: Young things are cold.\nRough($x, True) && Big($x"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-776_Q7",
    "context": "The bear does not chase the cat. The bear eats the cat. The bear eats the cow. The bear is green. The bear is not nice. The bear sees the dog. The cat is nice. The cat is red. The cat sees the bear. The cow eats the dog. The dog is kind. If someone is kind and they see the dog then the dog chases the cow. If someone eats the bear and the bear chases the dog then the dog eats the cow. If someone sees the bear then they see the cow. If someone sees the cat and the cat sees the bear then they eat the dog. If someone is nice and they eat the cow then the cow does not chase the cat. If someone sees the cow then they see the cat. If someone is green then they see the bear. If someone eats the dog then they are red.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cat eats the dog.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChase($x, $y, bool) ::: Does x chase y?\nEat($x, $y, bool) ::: Does x eat y?\nGreen($x, bool) ::: Is x green?\nKind($x, bool) ::: Is x kind?\nNice($x, bool) ::: Is x nice?\nRed($x, bool) ::: Is x red?\nSee($x, $y, bool) ::: Does x see y?\nRules:\nChase(Bear, Cat, False) ::: The bear does not chase the cat.\nEat(Bear, Cat, True) ::: The bear eats the cat.\nEat(Bear, Cow, True) ::: The bear eats the cow.\nGreen(Bear, True) ::: The bear is green.\nNice(Bear, False) ::: The bear is not nice.\nSee(Bear, Dog, True) ::: The bear sees the dog.\nNice(Cat, True) ::: The cat is nice.\nRed(Cat, True) ::: The cat is red.\nSee(Cat, Bear, True) ::: The cat sees the bear.\nEat(Cow, Dog, True) ::: The cow eats the dog.\nKind(Dog, True) ::: The dog is kind.\nSee(Dog, Bear, True) ::: If someone is kind and they see the dog then the dog chases the cow.\nEat(Bear, Dog, True) && Chase(Bear, Dog, True) >>> Eat(Dog, Cow, True) ::: If someone eats the bear and the bear chases the dog then the dog eats the cow.\nSee(Bear, $x, True) >>> See($x, Cow, True) ::: If someone sees the bear then they see the cow.\nSee(Cat, Bear, True) && See(Bear, Cat, True) >>> Eat($x, Dog, True) ::: If someone sees the cat and the cat sees the bear then they eat the dog.\nNice(Cow, True) && Eat"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-450_Q22",
    "context": "The bald eagle chases the lion. The bald eagle is not green. The bald eagle is round. The bald eagle likes the lion. The dog is red. The lion does not chase the dog. The lion is round. The lion is not young. The rabbit chases the dog. The rabbit eats the lion. If something chases the dog then it likes the rabbit. If something is red and it chases the lion then the lion likes the bald eagle. If something is big then it chases the rabbit. If something is round and it chases the bald eagle then the bald eagle does not like the dog. If something likes the lion then it is red. If something is red and round then it does not chase the bald eagle. If something is red and young then it chases the bald eagle. If something likes the bald eagle and the bald eagle chases the lion then it likes the lion. If something eats the bald eagle then the bald eagle is red.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bald eagle is young.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nLikes($x, $y, bool) ::: Does x like y?\nEats($x, $y, bool) ::: Does x eat y?\nIs($x, $y, bool) ::: Is x y?\nBig($x, bool) ::: Is x big?\nYoung($x, bool) ::: Is x young?\nRound($x, bool) ::: Is x round?\nRed($x, bool) ::: Is x red?\nFacts:\nChases(BaldEagle, Lion, True) ::: The bald eagle chases the lion.\nNot(Green(BaldEagle, True)) ::: The bald eagle is not green.\nRound(BaldEagle, True) ::: The bald eagle is round.\nLikes(BaldEagle, Lion, True) ::: The bald eagle likes the lion.\nRed(Dog, True) ::: The dog is red.\nNot(Chases(Lion, Dog, True)) ::: The lion does not chase the dog.\nRound(Lion, True) ::: The lion is round.\nNot(Young(Lion, True)) ::: The lion is not young.\nChases(Rabbit, Dog, True) ::: The rabbit chases the dog.\nEats(Rabbit, Lion, True) ::: The rabbit eats the lion.\nIf(Chases(x, Dog, True), Likes(x, Rabbit, True)) ::: If something chases the dog then it likes the rabbit.\nIf(Red(x, True) && Chases(x, Lion, True), Likes(Lion, BaldEagle, True)) ::: If something is red and it chases the lion then the lion likes the bald eagle.\nIf(Big(x, True), Chases(x, Rabbit, True)) ::: If something is big then it chases the rabbit.\nIf(Round(x, True) && Chases(x, BaldEagle, True), Not(Likes"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1389_Q2",
    "context": "Charlie is rough. Charlie is white. Erin is blue. Erin is rough. Erin is young. Gary is blue. Gary is green. Gary is quiet. Gary is white. Harry is blue. Harry is rough. All rough, white things are green. All young, blue things are quiet. If something is young then it is blue. White, blue things are quiet. If something is green then it is young. Quiet, green things are cold. All green, cold things are rough.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is not green.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRough($x, bool) ::: Is x rough?\nWhite($x, bool) ::: Is x white?\nBlue($x, bool) ::: Is x blue?\nGreen($x, bool) ::: Is x green?\nQuiet($x, bool) ::: Is x quiet?\nCold($x, bool) ::: Is x cold?\nFacts:\nRough(Charlie, True) ::: Charlie is rough.\nWhite(Charlie, True) ::: Charlie is white.\nBlue(Erin, True) ::: Erin is blue.\nRough(Erin, True) ::: Erin is rough.\nYoung(Erin, True) ::: Erin is young.\nBlue(Gary, True) ::: Gary is blue.\nGreen(Gary, True) ::: Gary is green.\nQuiet(Gary, True) ::: Gary is quiet.\nWhite(Gary, True) ::: Gary is white.\nBlue(Harry, True) ::: Harry is blue.\nRough(Harry, True) ::: Harry is rough.\nRules:\nRough($x, True) && White($x, True) >>> Green($x, True) ::: All rough, white things are green.\nYoung($x, True) && Blue($x, True) >>> Quiet($x, True) ::: All young, blue things are quiet.\nBlue($x, True) >>> Young($x, True) ::: If something is young then it is blue.\nWhite($x, True) && Blue($x, True) >>> Quiet($x, True) ::: White, blue things are quiet.\nGreen($x, True) >>> Young($x, True) ::: If something is green then it is young.\nQuiet($x, True) && Green($x, True) >>> Cold($x, True) ::: Quiet, green things are cold.\nGreen($x, True) && Cold($x, True) >>> Rough($x, True) ::: All green, cold things are rough.\nQuery:\nNot(Green(Gary, True)) ::: Gary"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-29_Q9",
    "context": "The cat eats the rabbit. The cow eats the rabbit. The cow is green. The cow needs the cat. The cow needs the lion. The cow sees the lion. The lion is blue. The rabbit eats the cow. The rabbit is nice. The rabbit sees the lion. If something eats the rabbit then the rabbit is blue. If something eats the cow and it sees the lion then it sees the rabbit. If something is big then it eats the cat. If something is nice and it eats the cat then the cat sees the rabbit. If something is green and it needs the cow then it sees the cat. If something sees the cat then it eats the cat. If something sees the rabbit then it sees the cat. If something eats the cow and the cow needs the rabbit then it eats the rabbit.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cat sees the rabbit.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y, bool) ::: Does x eat y?\nNeeds($x, $y, bool) ::: Does x need y?\nSees($x, $y, bool) ::: Does x see y?\nBig($x, bool) ::: Is x big?\nNice($x, bool) ::: Is x nice?\nGreen($x, bool) ::: Is x green?\nBlue($x, bool) ::: Is x blue?\nFacts:\nEats(Cat, Rabbit, True) ::: The cat eats the rabbit.\nEats(Cow, Rabbit, True) ::: The cow eats the rabbit.\nGreen(Cow, True) ::: The cow is green.\nNeeds(Cow, Cat, True) ::: The cow needs the cat.\nNeeds(Cow, Lion, True) ::: The cow needs the lion.\nSees(Cow, Lion, True) ::: The cow sees the lion.\nBlue(Lion, True) ::: The lion is blue.\nEats(Rabbit, Cow, True) ::: The rabbit eats the cow.\nNice(Rabbit, True) ::: The rabbit is nice.\nSees(Rabbit, Lion, True) ::: The rabbit sees the lion.\nRules:\nEats($x, $y, True) >>> Sees($x, $y, True) ::: If something eats the rabbit then the rabbit is blue.\nEats($x, $y, True) && Sees($x, $z, True) >>> Sees($x, $y, True) ::: If something eats the cow and it sees the lion then it sees the rabbit.\nBig($x, True) >>> Eats($x, Cat, True) ::: If something is big then it eats the cat.\nNice($x, True) && Eats($x, Cat, True) >>> Sees($x, Rabbit, True) ::: If something is nice and it eats the cat then the cat sees the rabbit.\nGreen($"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-623_Q5",
    "context": "Anne is furry. Bob is furry. Fiona is nice. Fiona is red. Gary is blue. Gary is nice. Gary is not young. All white things are young. Red, white things are blue. If something is furry then it is white. If something is red and blue then it is round. If Bob is nice and Bob is white then Bob is round. All white things are red. Round, blue things are not nice. If Fiona is young then Fiona is nice. If Fiona is not blue then Fiona is nice.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is red.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nFurry($x, bool) ::: Is x furry?\nNice($x, bool) ::: Is x nice?\nRed($x, bool) ::: Is x red?\nBlue($x, bool) ::: Is x blue?\nRound($x, bool) ::: Is x round?\nYoung($x, bool) ::: Is x young?\nFacts:\nFurry(Anne, True) ::: Anne is furry.\nFurry(Bob, True) ::: Bob is furry.\nNice(Fiona, True) ::: Fiona is nice.\nRed(Fiona, True) ::: Fiona is red.\nBlue(Gary, True) ::: Gary is blue.\nNice(Gary, True) ::: Gary is nice.\nNot(Young(Gary, True), True) ::: Gary is not young.\nYoung(White($x, True), True) ::: All white things are young.\nRed(White($x, True), True) ::: Red, white things are blue.\nFurry($x, True) >>> White($x, True) ::: If something is furry then it is white.\nRed($x, True) && Blue($x, True) >>> Round($x, True) ::: If something is red and blue then it is round.\nNice(Bob, True) && White(Bob, True) >>> Round(Bob, True) ::: If Bob is nice and Bob is white then Bob is round.\nAll(White($x, True), Red($x, True)) ::: All white things are red.\nNot(Blue(Fiona, True), True) >>> Nice(Fiona, True) ::: If Fiona is not blue then Fiona is nice.\nYoung(Fiona, True) >>> Nice(Fiona, True) ::: If Fiona is young then Fiona is nice.\nRound(Blue($x, True), False) ::: Round, blue things are not nice.\nQuery:\nRed(Bob, True) ::: Bob is red.\n------"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-656_Q12",
    "context": "Anne is smart. Charlie is not blue. Charlie is quiet. Erin is not nice. Erin is round. Harry is green. Harry is young. Smart things are green. If Anne is round then Anne is young. If something is blue and green then it is not quiet. If something is green and smart then it is round. If something is young then it is blue. Smart things are nice. If Harry is quiet and Harry is not smart then Harry is young.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Anne is quiet.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nSmart($x, bool) ::: Is x smart?\nBlue($x, bool) ::: Is x blue?\nQuiet($x, bool) ::: Is x quiet?\nNice($x, bool) ::: Is x nice?\nRound($x, bool) ::: Is x round?\nGreen($x, bool) ::: Is x green?\nYoung($x, bool) ::: Is x young?\nFacts:\nSmart(Anne, True) ::: Anne is smart.\nNot(Blue(Charlie, True)) ::: Charlie is not blue.\nQuiet(Charlie, True) ::: Charlie is quiet.\nNot(Nice(Erin, True)) ::: Erin is not nice.\nRound(Erin, True) ::: Erin is round.\nGreen(Harry, True) ::: Harry is green.\nYoung(Harry, True) ::: Harry is young.\nRules:\nSmart($x, True) >>> Green($x, True) ::: Smart things are green.\nRound(Anne, True) >>> Young($x, True) ::: If Anne is round then Anne is young.\nBlue($x, True) && Green($x, True) >>> Not(Quiet($x, True)) ::: If something is blue and green then it is not quiet.\nGreen($x, True) && Smart($x, True) >>> Round($x, True) ::: If something is green and smart then it is round.\nYoung($x, True) >>> Blue($x, True) ::: If something is young then it is blue.\nSmart($x, True) >>> Nice($x, True) ::: Smart things are nice.\nNot(Smart(Harry, True)) && Quiet(Harry, True) >>> Young(Harry, True) ::: If Harry is quiet and Harry is not smart then Harry is young.\nQuery:\nQuiet(Anne, True) ::: Anne is quiet.\n------\nProblem:\nAnne is quiet. Anne is red. Anne is rough. Anne is white. Anne is"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-901_Q4",
    "context": "Dave is rough. Erin is green. Erin is nice. Fiona is not rough. Gary is blue. Gary is nice. Gary is rough. If someone is round and not rough then they are nice. If someone is green then they are big. All round people are green. If someone is rough then they are kind. Rough, green people are kind. Green, big people are blue. All kind people are round.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Erin is not big.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRound($x, bool) ::: Is x round?\nRough($x, bool) ::: Is x rough?\nNice($x, bool) ::: Is x nice?\nBig($x, bool) ::: Is x big?\nBlue($x, bool) ::: Is x blue?\nKind($x, bool) ::: Is x kind?\nFacts:\nRound(Dave, True) ::: Dave is round.\nGreen(Erin, True) ::: Erin is green.\nNice(Erin, True) ::: Erin is nice.\nNot(Rough(Fiona, True)) ::: Fiona is not rough.\nBlue(Gary, True) ::: Gary is blue.\nNice(Gary, True) ::: Gary is nice.\nRough(Gary, True) ::: Gary is rough.\nRules:\nRound($x, True) >>> Green($x, True) ::: All round people are green.\nNot(Rough($x, True)) >>> Nice($x, True) ::: If someone is round and not rough then they are nice.\nGreen($x, True) >>> Big($x, True) ::: If someone is green then they are big.\nRough($x, True) >>> Kind($x, True) ::: If someone is rough then they are kind.\nRough($x, True) && Green($x, True) >>> Kind($x, True) ::: Rough, green people are kind.\nGreen($x, True) && Big($x, True) >>> Blue($x, True) ::: Green, big people are blue.\nNice($x, True) >>> Round($x, True) ::: All kind people are round.\nQuery:\nNot(Big(Erin, True)) ::: Erin is not big.\n------\nProblem:\nDave is rough. Erin is green. Erin is nice. Fiona is not rough. Gary is blue. Gary is nice. Gary is rough. If someone is round and not rough then they are nice. If someone is green then they are big. All round people are"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-368_Q15",
    "context": "The bald eagle eats the cat. The bald eagle eats the dog. The bald eagle is not green. The bald eagle is not kind. The bald eagle does not like the dog. The bald eagle sees the cat. The bald eagle does not see the dog. The cat is blue. The cat is round. The dog eats the bald eagle. The dog eats the cat. The dog is round. The dog likes the cat. The lion eats the bald eagle. The lion eats the cat. The lion does not see the cat. If the dog sees the cat then the dog likes the bald eagle. If something is round then it likes the lion. If the cat likes the bald eagle and the lion does not see the cat then the lion is kind. If something is kind then it is round. If something likes the lion then it likes the bald eagle. If something eats the lion then it likes the bald eagle.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bald eagle does not like the lion.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y, bool) ::: Does x eat y?\nLikes($x, $y, bool) ::: Does x like y?\nSees($x, $y, bool) ::: Does x see y?\nIs($x, $y, bool) ::: Is x y?\nKind($x, bool) ::: Is x kind?\nRound($x, bool) ::: Is x round?\nFacts:\nEats(BaldEagle, Cat, True) ::: The bald eagle eats the cat.\nEats(BaldEagle, Dog, True) ::: The bald eagle eats the dog.\nNot(Green, BaldEagle, True) ::: The bald eagle is not green.\nNot(Kind, BaldEagle, True) ::: The bald eagle is not kind.\nNot(Likes, BaldEagle, Dog, True) ::: The bald eagle does not like the dog.\nSees(BaldEagle, Cat, True) ::: The bald eagle sees the cat.\nNot(Sees, BaldEagle, Dog, True) ::: The bald eagle does not see the dog.\nIs(Blue, Cat, True) ::: The cat is blue.\nIs(Round, Cat, True) ::: The cat is round.\nEats(Dog, BaldEagle, True) ::: The dog eats the bald eagle.\nEats(Dog, Cat, True) ::: The dog eats the cat.\nIs(Round, Dog, True) ::: The dog is round.\nLikes(Dog, Cat, True) ::: The dog likes the cat.\nEats(Lion, BaldEagle, True) ::: The lion eats the bald eagle.\nEats(Lion, Cat, True) ::: The lion eats the cat.\nNot(Sees, Lion, Cat, True) ::: The lion does not see the cat.\nRules:\nIf(Dog, Sees, Cat, Likes, BaldEagle) ::: If the dog sees the"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-262_Q13",
    "context": "Anne is blue. Anne is nice. Anne is red. Anne is rough. Anne is round. Anne is smart. Bob is blue. Dave is blue. Dave is rough. Dave is smart. Harry is blue. Harry is furry. If something is furry then it is round. If Anne is red and Anne is nice then Anne is rough. If something is red and round then it is smart. All round things are furry. All blue, round things are red. Blue things are nice. All nice, blue things are furry. All red things are smart.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is not rough.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue($x, bool) ::: Is x blue?\nNice($x, bool) ::: Is x nice?\nRed($x, bool) ::: Is x red?\nRough($x, bool) ::: Is x rough?\nRound($x, bool) ::: Is x round?\nSmart($x, bool) ::: Is x smart?\nFurry($x, bool) ::: Is x furry?\nFacts:\nBlue(Anne, True) ::: Anne is blue.\nNice(Anne, True) ::: Anne is nice.\nRed(Anne, True) ::: Anne is red.\nRough(Anne, True) ::: Anne is rough.\nRound(Anne, True) ::: Anne is round.\nSmart(Anne, True) ::: Anne is smart.\nBlue(Bob, True) ::: Bob is blue.\nBlue(Dave, True) ::: Dave is blue.\nRough(Dave, True) ::: Dave is rough.\nSmart(Dave, True) ::: Dave is smart.\nBlue(Harry, True) ::: Harry is blue.\nFurry(Harry, True) ::: Harry is furry.\nRules:\nFurry($x, True) >>> Round($x, True) ::: If something is furry then it is round.\nRed($x, True) && Nice($x, True) >>> Rough($x, True) ::: If Anne is red and Anne is nice then Anne is rough.\nRed($x, True) && Round($x, True) >>> Smart($x, True) ::: If something is red and round then it is smart.\nRound($x, True) >>> Furry($x, True) ::: All round things are furry.\nBlue($x, True) && Round($x, True) >>> Red($x, True) ::: All blue, round things are red.\nBlue($x, True) >>> Nice($x, True) ::: Blue things are nice.\nBlue($x, True) && Nice($x, True) >>>"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-688_Q17",
    "context": "The cat is nice. The cat is red. The cat is round. The cat does not need the mouse. The cat visits the squirrel. The lion needs the mouse. The mouse is round. The mouse likes the lion. The mouse needs the lion. The mouse visits the cat. The squirrel is big. The squirrel is red. The squirrel visits the lion. The squirrel visits the mouse. If something likes the cat and it does not visit the cat then it visits the lion. If the lion is green and the lion visits the mouse then the mouse is red. All red things are nice. If something likes the lion then it is red. If the mouse visits the cat and the mouse needs the squirrel then the mouse does not like the cat. Nice things are big. If something is big then it visits the squirrel. If the mouse visits the squirrel then the mouse does not visit the lion.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The lion is not nice.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNice($x, bool) ::: Is x nice?\nRed($x, bool) ::: Is x red?\nRound($x, bool) ::: Is x round?\nVisits($x, $y, bool) ::: Does x visit y?\nNeeds($x, $y, bool) ::: Does x need y?\nLikes($x, $y, bool) ::: Does x like y?\nFacts:\nNice(Cat, True) ::: The cat is nice.\nRed(Cat, True) ::: The cat is red.\nRound(Cat, True) ::: The cat is round.\nNeeds(Cat, Mouse, False) ::: The cat does not need the mouse.\nVisits(Cat, Squirrel, True) ::: The cat visits the squirrel.\nNeeds(Lion, Mouse, True) ::: The lion needs the mouse.\nRound(Mouse, True) ::: The mouse is round.\nLikes(Mouse, Lion, True) ::: The mouse likes the lion.\nNeeds(Mouse, Lion, True) ::: The mouse needs the lion.\nVisits(Mouse, Cat, True) ::: The mouse visits the cat.\nRed(Squirrel, True) ::: The squirrel is red.\nVisits(Squirrel, Lion, True) ::: The squirrel visits the lion.\nVisits(Squirrel, Mouse, True) ::: The squirrel visits the mouse.\nRules:\nIf something likes the cat and it does not visit the cat then it visits the lion. ::: If something likes the cat and it does not visit the cat then it visits the lion.\nIf the lion is green and the lion visits the mouse then the mouse is red. ::: If the lion is green and the lion visits the mouse then the mouse is red.\nAll red things are nice. ::: All red things are nice.\nIf something likes the lion then it is red. ::: If something likes the lion then it is red.\nIf the mouse visits the cat and the mouse needs the squirrel then the mouse does not like"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1298_Q1",
    "context": "Anne is green. Anne is nice. Anne is red. Anne is smart. Anne is white. Bob is green. Bob is nice. Bob is round. Bob is white. Dave is round. Gary is green. Gary is nice. Gary is red. Gary is white. Green, red things are smart. Round things are cold. Cold, smart things are round. All smart things are cold. Red, white things are nice. All cold, round things are green. White, green things are red. All green things are smart. All smart things are white.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is nice.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen($x, bool) ::: Is x green?\nRed($x, bool) ::: Is x red?\nWhite($x, bool) ::: Is x white?\nNice($x, bool) ::: Is x nice?\nSmart($x, bool) ::: Is x smart?\nRound($x, bool) ::: Is x round?\nCold($x, bool) ::: Is x cold?\nFacts:\nGreen(Anne, True) ::: Anne is green.\nNice(Anne, True) ::: Anne is nice.\nRed(Anne, True) ::: Anne is red.\nSmart(Anne, True) ::: Anne is smart.\nWhite(Anne, True) ::: Anne is white.\nGreen(Bob, True) ::: Bob is green.\nNice(Bob, True) ::: Bob is nice.\nRound(Bob, True) ::: Bob is round.\nWhite(Bob, True) ::: Bob is white.\nRound(Dave, True) ::: Dave is round.\nGreen(Gary, True) ::: Gary is green.\nNice(Gary, True) ::: Gary is nice.\nRed(Gary, True) ::: Gary is red.\nWhite(Gary, True) ::: Gary is white.\nRules:\nGreen($x, True) && Red($x, True) >>> Smart($x, True) ::: Green, red things are smart.\nRound($x, True) >>> Cold($x, True) ::: Round things are cold.\nCold($x, True) && Smart($x, True) >>> Round($x, True) ::: Cold, smart things are round.\nSmart($x, True) >>> Cold($x, True) ::: All smart things are cold.\nRed($x, True) && White($x, True) >>> Nice($x, True) ::: Red, white things are nice.\nCold($x, True) && Round($x, True) >>> Green($x, True) ::: All cold, round things are green.\nWhite"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-299_Q14",
    "context": "Bob is green. Bob is young. Charlie is round. Charlie is young. Erin is kind. Erin is white. Erin is young. Fiona is cold. Fiona is not green. Fiona is kind. Fiona is quiet. All round things are cold. If something is young then it is cold. If something is green and white then it is round. All kind, white things are quiet. Round, quiet things are white. Green, young things are white. If something is cold then it is kind. If something is round and kind then it is green.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Erin is green.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen($x, bool) ::: Is x green?\nYoung($x, bool) ::: Is x young?\nRound($x, bool) ::: Is x round?\nKind($x, bool) ::: Is x kind?\nQuiet($x, bool) ::: Is x quiet?\nCold($x, bool) ::: Is x cold?\nFacts:\nGreen(Bob, True) ::: Bob is green.\nYoung(Bob, True) ::: Bob is young.\nRound(Charlie, True) ::: Charlie is round.\nYoung(Charlie, True) ::: Charlie is young.\nKind(Erin, True) ::: Erin is kind.\nWhite(Erin, True) ::: Erin is white.\nYoung(Erin, True) ::: Erin is young.\nCold(Fiona, True) ::: Fiona is cold.\nNot(Green(Fiona, True)) ::: Fiona is not green.\nKind(Fiona, True) ::: Fiona is kind.\nQuiet(Fiona, True) ::: Fiona is quiet.\nRules:\nRound($x, True) >>> Cold($x, True) ::: All round things are cold.\nYoung($x, True) >>> Cold($x, True) ::: If something is young then it is cold.\nGreen($x, True) && White($x, True) >>> Round($x, True) ::: If something is green and white then it is round.\nKind($x, True) && White($x, True) >>> Quiet($x, True) ::: All kind, white things are quiet.\nRound($x, True) && Quiet($x, True) >>> White($x, True) ::: Round, quiet things are white.\nGreen($x, True) && Young($x, True) >>> White($x, True) ::: Green, young things are white.\nCold($x, True) >>> Kind($x, True) ::: If something is cold then it is kind.\nRound($x, True) && Kind($"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-263_Q4",
    "context": "The bear is nice. The bear likes the cat. The bear likes the tiger. The cat eats the bear. The cat is cold. The cat is kind. The cat likes the rabbit. The cat visits the rabbit. The rabbit likes the tiger. The rabbit visits the tiger. The tiger eats the bear. The tiger likes the bear. If someone is kind and they visit the cat then they are big. If someone is young then they eat the cat. If someone is cold and they like the rabbit then the rabbit likes the cat. If someone likes the tiger then the tiger visits the cat. If someone is big then they eat the tiger. If someone eats the rabbit and they are cold then they visit the rabbit. If someone likes the bear then they are kind. If someone likes the rabbit and they eat the rabbit then the rabbit visits the cat. If someone eats the tiger and the tiger visits the cat then they are young.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The rabbit does not like the cat.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNice($x, bool) ::: Is x nice?\nLikes($x, $y, bool) ::: Does x like y?\nEats($x, $y, bool) ::: Does x eat y?\nVisits($x, $y, bool) ::: Does x visit y?\nKind($x, bool) ::: Is x kind?\nYoung($x, bool) ::: Is x young?\nCold($x, bool) ::: Is x cold?\nBig($x, bool) ::: Is x big?\nFacts:\nNice(Bear, True) ::: The bear is nice.\nLikes(Bear, Cat, True) ::: The bear likes the cat.\nLikes(Bear, Tiger, True) ::: The bear likes the tiger.\nEats(Cat, Bear, True) ::: The cat eats the bear.\nCold(Cat, True) ::: The cat is cold.\nKind(Cat, True) ::: The cat is kind.\nLikes(Cat, Rabbit, True) ::: The cat likes the rabbit.\nVisits(Cat, Rabbit, True) ::: The cat visits the rabbit.\nLikes(Rabbit, Tiger, True) ::: The rabbit likes the tiger.\nVisits(Rabbit, Tiger, True) ::: The rabbit visits the tiger.\nEats(Tiger, Bear, True) ::: The tiger eats the bear.\nLikes(Tiger, Bear, True) ::: The tiger likes the bear.\nRules:\nKind($x, True) && Visits($x, Cat) >>> Big($x, True) ::: If someone is kind and they visit the cat then they are big.\nYoung($x, True) >>> Eats($x, Cat) ::: If someone is young then they eat the cat.\nCold($x, True) && Likes($x, Rabbit) >>> Likes($x, Cat) ::: If someone is cold and they like the rabbit then the rabbit likes the cat"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-1204_Q8",
    "context": "Bob is not furry. Bob is quiet. Bob is not rough. Bob is not round. Erin is not kind. Erin is rough. Gary is big. Harry is furry. Harry is green. Harry is not round. All big, round people are rough. If someone is rough and not green then they are quiet. If someone is round and rough then they are quiet. All big people are round. All quiet people are kind. All rough, quiet people are big. If someone is round and kind then they are furry. If someone is big and not quiet then they are furry.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is not quiet.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nFurry($x, bool) ::: Is x furry?\nQuiet($x, bool) ::: Is x quiet?\nRough($x, bool) ::: Is x rough?\nRound($x, bool) ::: Is x round?\nKind($x, bool) ::: Is x kind?\nBig($x, bool) ::: Is x big?\nFacts:\nNotFurry(Bob, True) ::: Bob is not furry.\nQuiet(Bob, True) ::: Bob is quiet.\nNotRough(Bob, True) ::: Bob is not rough.\nNotRound(Bob, True) ::: Bob is not round.\nNotKind(Erin, True) ::: Erin is not kind.\nRough(Erin, True) ::: Erin is rough.\nBig(Gary, True) ::: Gary is big.\nFurry(Harry, True) ::: Harry is furry.\nGreen(Harry, True) ::: Harry is green.\nNotRound(Harry, True) ::: Harry is not round.\nRules:\nAllBigRoundPeopleAreRough($x, bool) ::: All big, round people are rough.\nRoughNotGreen($x, bool) >>> Quiet($x, bool) ::: If someone is rough and not green then they are quiet.\nRoundRough($x, bool) >>> Quiet($x, bool) ::: If someone is round and rough then they are quiet.\nAllBigPeopleAreRound($x, bool) ::: All big people are round.\nAllQuietPeopleAreKind($x, bool) ::: All quiet people are kind.\nRoughQuietPeopleAreBig($x, bool) ::: All rough, quiet people are big.\nRoundKind($x, bool) >>> Furry($x, bool) ::: If someone is round and kind then they are furry.\nBigNotQuiet($x, bool) >>> Furry($x, bool) ::: If someone is big and not quiet then they are furry.\nQuery:\nNotQuiet(G"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-579_Q12",
    "context": "Anne is not green. Anne is rough. Bob is white. Dave is red. Dave is young. Gary is red. Gary is white. If something is red then it is furry. If something is furry then it is young. White, red things are rough. All white, furry things are big. Rough things are red. Red, young things are white.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Anne is not big.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen($x, bool) ::: Is x green?\nRough($x, bool) ::: Is x rough?\nWhite($x, bool) ::: Is x white?\nRed($x, bool) ::: Is x red?\nFurry($x, bool) ::: Is x furry?\nYoung($x, bool) ::: Is x young?\nBig($x, bool) ::: Is x big?\nFacts:\nNotGreen(Anne, True) ::: Anne is not green.\nRough(Anne, True) ::: Anne is rough.\nWhite(Bob, True) ::: Bob is white.\nRed(Dave, True) ::: Dave is red.\nYoung(Dave, True) ::: Dave is young.\nRed(Gary, True) ::: Gary is red.\nWhite(Gary, True) ::: Gary is white.\nRules:\nRed($x, True) >>> Furry($x, True) ::: If something is red then it is furry.\nFurry($x, True) >>> Young($x, True) ::: If something is furry then it is young.\nWhite($x, True) && Red($x, True) >>> Rough($x, True) ::: White, red things are rough.\nFurry($x, True) && Young($x, True) >>> Big($x, True) ::: All white, furry things are big.\nRough($x, True) >>> Red($x, True) ::: Rough things are red.\nRed($x, True) && Young($x, True) >>> White($x, True) ::: Red, young things are white.\nQuery:\nNotBig(Anne, True) ::: Anne is not big.\n------"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-534_Q7",
    "context": "The cow likes the rabbit. The cow needs the mouse. The mouse likes the squirrel. The rabbit needs the cow. The rabbit sees the cow. The squirrel is nice. The squirrel needs the cow. If someone needs the mouse and they need the rabbit then the rabbit needs the cow. If someone sees the rabbit then the rabbit needs the mouse. If someone needs the cow then they like the squirrel. If someone sees the squirrel then they see the rabbit. If someone is kind and they see the squirrel then they need the mouse. If someone likes the squirrel and the squirrel sees the cow then they are red. If someone needs the mouse then they see the squirrel.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The rabbit needs the mouse.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nLikes($x, $y, bool) ::: Does x like y?\nNeeds($x, $y, bool) ::: Does x need y?\nSees($x, $y, bool) ::: Does x see y?\nKind($x, bool) ::: Is x kind?\nRed($x, bool) ::: Is x red?\nFacts:\nLikes(Cow, Rabbit, True) ::: The cow likes the rabbit.\nNeeds(Cow, Mouse, True) ::: The cow needs the mouse.\nLikes(Mouse, Squirrel, True) ::: The mouse likes the squirrel.\nNeeds(Rabbit, Cow, True) ::: The rabbit needs the cow.\nSees(Rabbit, Cow, True) ::: The rabbit sees the cow.\nKind(Squirrel, True) ::: The squirrel is nice.\nNeeds(Squirrel, Cow, True) ::: The squirrel needs the cow.\nRules:\nNeeds($x, Mouse, True) && Needs($x, Rabbit, True) >>> Rabbit($x, True) ::: If someone needs the mouse and they need the rabbit then the rabbit needs the cow.\nSees($x, Rabbit, True) >>> Rabbit($x, True) ::: If someone sees the rabbit then the rabbit needs the mouse.\nNeeds($x, Cow, True) >>> Likes($x, Squirrel, True) ::: If someone needs the cow then they like the squirrel.\nSees($x, Squirrel, True) >>> Sees($x, Rabbit, True) ::: If someone sees the squirrel then they see the rabbit.\nKind($x, True)"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-855_Q1",
    "context": "The cat is red. The cat visits the dog. The cat visits the mouse. The dog needs the cat. The dog needs the mouse. The mouse likes the cat. The mouse likes the squirrel. The squirrel is rough. The squirrel likes the cat. The squirrel likes the mouse. The squirrel visits the mouse. If something needs the dog then it needs the mouse. If something visits the dog then the dog is rough. If something is green and it likes the cat then it is rough. If something is green then it likes the cat. If something is rough then it visits the cat. If something visits the cat then the cat is green. If something likes the dog and it likes the cat then the dog is blue. If something likes the mouse and the mouse is green then it likes the squirrel.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The squirrel is rough.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRed($x, bool) ::: Is x red?\nVisits($x, $y, bool) ::: Does x visit y?\nNeeds($x, $y, bool) ::: Does x need y?\nLikes($x, $y, bool) ::: Does x like y?\nGreen($x, bool) ::: Is x green?\nBlue($x, bool) ::: Is x blue?\nRough($x, bool) ::: Is x rough?\nFacts:\nRed(Cat, True) ::: The cat is red.\nVisits(Cat, Dog, True) ::: The cat visits the dog.\nVisits(Cat, Mouse, True) ::: The cat visits the mouse.\nNeeds(Cat, Dog, True) ::: The cat needs the dog.\nNeeds(Cat, Mouse, True) ::: The cat needs the mouse.\nLikes(Cat, Mouse, True) ::: The cat likes the mouse.\nLikes(Cat, Squirrel, True) ::: The cat likes the squirrel.\nRough(Squirrel, True) ::: The squirrel is rough.\nLikes(Squirrel, Cat, True) ::: The squirrel likes the cat.\nLikes(Squirrel, Mouse, True) ::: The squirrel likes the mouse.\nVisits(Squirrel, Mouse, True) ::: The squirrel visits the mouse.\nRules:\nNeeds($x, $y, True) >>> Needs($x, $z, True) ::: If something needs the dog then it needs the mouse.\nVisits($x, $y, True) >>> Rough($x, True) ::: If something visits the dog then the dog is rough.\nGreen($x, True)"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-461_Q3",
    "context": "The bear eats the cat. The bear is nice. The bear is rough. The bear likes the cat. The bear visits the dog. The cat visits the bear. The dog eats the cat. The dog is blue. The dog is green. The mouse eats the bear. The mouse visits the bear. If someone eats the cat then they visit the cat. If someone eats the cat then they eat the mouse. If someone visits the dog and the dog likes the cat then the dog is nice. If someone likes the mouse then they eat the cat. If the dog is nice then the dog visits the mouse. If someone eats the mouse and the mouse eats the bear then they like the cat. If the bear likes the dog then the dog visits the bear. If someone is rough then they visit the cat. If the dog visits the mouse and the dog visits the cat then the mouse eats the dog.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bear visits the cat.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y, bool) ::: Does x eat y?\nLikes($x, $y, bool) ::: Does x like y?\nVisits($x, $y, bool) ::: Does x visit y?\nIsNice($x, bool) ::: Is x nice?\nIsRough($x, bool) ::: Is x rough?\nIsBlue($x, bool) ::: Is x blue?\nIsGreen($x, bool) ::: Is x green?\nFacts:\nEats(Bear, Cat, True) ::: The bear eats the cat.\nIsNice(Bear, True) ::: The bear is nice.\nIsRough(Bear, True) ::: The bear is rough.\nLikes(Bear, Cat, True) ::: The bear likes the cat.\nVisits(Bear, Dog, True) ::: The bear visits the dog.\nVisits(Cat, Bear, True) ::: The cat visits the bear.\nEats(Dog, Cat, True) ::: The dog eats the cat.\nIsBlue(Dog, True) ::: The dog is blue.\nIsGreen(Dog, True) ::: The dog is green.\nEats(Mouse, Bear, True) ::: The mouse eats the bear.\nVisits(Mouse, Bear, True) ::: The mouse visits the bear.\nEats(Cat, Mouse, True) >>> Eats(Cat, Bear) ::: If someone eats the cat then they visit the cat.\nEats(Cat, Mouse) >>> Eats(Cat, Bear) ::: If someone eats the cat then they eat the mouse.\nLikes(Dog, Mouse) >>> Visits(Dog, Cat) && Likes("
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-48_Q10",
    "context": "The bear chases the cat. The bear chases the squirrel. The bear is young. The bear does not see the squirrel. The cat chases the cow. The cat chases the squirrel. The cat eats the squirrel. The cat is not kind. The cat does not see the cow. The cow does not chase the cat. The cow chases the squirrel. The squirrel chases the bear. The squirrel eats the cat. The squirrel eats the cow. The squirrel is young. The squirrel sees the cow. If something eats the bear then the bear sees the cow. If something is kind then it eats the bear. If the cow chases the bear and the cat does not chase the cow then the cow sees the squirrel. If something sees the squirrel then it is rough. If something eats the bear and it does not chase the cat then the cat sees the bear. If something sees the cow then it is kind. If something eats the squirrel then it eats the cat.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bear is not kind.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nEats($x, $y, bool) ::: Does x eat y?\nYoung($x, bool) ::: Is x young?\nKind($x, bool) ::: Is x kind?\nSees($x, $y, bool) ::: Does x see y?\nRough($x, bool) ::: Is x rough?\nFacts:\nChases(Bear, Cat, True) ::: The bear chases the cat.\nChases(Bear, Squirrel, True) ::: The bear chases the squirrel.\nYoung(Bear, True) ::: The bear is young.\nNot(Sees(Bear, Squirrel, True)) ::: The bear does not see the squirrel.\nChases(Cat, Cow, True) ::: The cat chases the cow.\nChases(Cat, Squirrel, True) ::: The cat chases the squirrel.\nEats(Cat, Squirrel, True) ::: The cat eats the squirrel.\nNot(Kind(Cat, True)) ::: The cat is not kind.\nNot(Sees(Cat, Cow, True)) ::: The cat does not see the cow.\nNot(Chases(Cow, Cat, True)) ::: The cow does not chase the cat.\nChases(Cow, Squirrel, True) ::: The cow chases the squirrel.\nChases(Squirrel, Bear, True) ::: The squirrel chases the bear.\nEats(Squirrel, Cat, True) ::: The squirrel eats the cat.\nEats(Squirrel, Cow, True) ::: The squ"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1199_Q6",
    "context": "Anne is blue. Anne is furry. Anne is kind. Anne is nice. Anne is red. Bob is furry. Bob is kind. Bob is nice. Bob is red. Erin is white. Gary is kind. All white, furry things are red. Kind, nice things are big. Big, nice things are furry. All kind things are white. If Gary is blue and Gary is white then Gary is red. All nice, kind things are white. If something is white then it is nice. If Bob is white then Bob is nice. If something is furry and blue then it is red.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is not nice.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue($x, bool) ::: Is x blue?\nFurry($x, bool) ::: Is x furry?\nKind($x, bool) ::: Is x kind?\nNice($x, bool) ::: Is x nice?\nRed($x, bool) ::: Is x red?\nBig($x, bool) ::: Is x big?\nFacts:\nBlue(Anne, True) ::: Anne is blue.\nFurry(Anne, True) ::: Anne is furry.\nKind(Anne, True) ::: Anne is kind.\nNice(Anne, True) ::: Anne is nice.\nRed(Anne, True) ::: Anne is red.\nFurry(Bob, True) ::: Bob is furry.\nKind(Bob, True) ::: Bob is kind.\nNice(Bob, True) ::: Bob is nice.\nRed(Bob, True) ::: Bob is red.\nWhite(Erin, True) ::: Erin is white.\nKind(Gary, True) ::: Gary is kind.\nRules:\nWhite($x, True) >>> Furry($x, True) ::: All white, furry things are red.\nKind($x, True) >>> Nice($x, True) ::: Kind, nice things are big.\nBig($x, True) >>> Furry($x, True) ::: Big, nice things are furry.\nKind($x, True) >>> White($x, True) ::: All kind things are white.\nBlue($x, True) && White($x, True) >>> Red($x, True) ::: If Gary is blue and Gary is white then Gary is red.\nNice($x, True) >>> White($x, True)"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-71_Q3",
    "context": "The bear eats the squirrel. The mouse eats the squirrel. The mouse visits the bear. The mouse visits the rabbit. The rabbit sees the mouse. The rabbit sees the squirrel. The squirrel is big. The squirrel is rough. The squirrel sees the bear. The squirrel visits the mouse. The squirrel visits the rabbit. If the bear visits the squirrel then the squirrel eats the rabbit. If something eats the squirrel and it sees the bear then the bear eats the rabbit. If something is kind then it is blue. If something is rough and it visits the rabbit then it eats the mouse. If the bear visits the squirrel then the squirrel is big. If something is big and it eats the mouse then the mouse is kind. If something is blue then it sees the bear. If something sees the mouse then it eats the bear.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The squirrel eats the mouse.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y, bool) ::: Does x eat y?\nVisits($x, $y, bool) ::: Does x visit y?\nSees($x, $y, bool) ::: Does x see y?\nKind($x, bool) ::: Is x kind?\nBlue($x, bool) ::: Is x blue?\nBig($x, bool) ::: Is x big?\nRough($x, bool) ::: Is x rough?\nFacts:\nEats(Bear, Squirrel, True) ::: The bear eats the squirrel.\nEats(Mouse, Squirrel, True) ::: The mouse eats the squirrel.\nVisits(Mouse, Bear, True) ::: The mouse visits the bear.\nVisits(Mouse, Rabbit, True) ::: The mouse visits the rabbit.\nSees(Rabbit, Mouse, True) ::: The rabbit sees the mouse.\nSees(Rabbit, Squirrel, True) ::: The rabbit sees the squirrel.\nBig(Squirrel, True) ::: The squirrel is big.\nRough(Squirrel, True) ::: The squirrel is rough.\nSees(Squirrel, Bear, True) ::: The squirrel sees the bear.\nVisits(Squirrel, Mouse, True) ::: The squirrel visits the mouse.\nVisits(Squirrel, Rabbit, True) ::: The squirrel visits the rabbit.\nRules:\nEats(Bear, Squirrel, True) >>> SquirrelEatsRabbit(True) ::: If the bear visits the squirrel then the squirrel eats the rabbit.\nEats"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-215_Q13",
    "context": "The bald eagle is nice. The bald eagle likes the cat. The bald eagle visits the rabbit. The cat is green. The cat likes the rabbit. The cat visits the rabbit. The dog likes the rabbit. The dog visits the rabbit. The rabbit needs the dog. The rabbit visits the cat. If something visits the rabbit then it needs the dog. All young things are blue. If something visits the bald eagle and it needs the rabbit then the rabbit likes the bald eagle. If something visits the cat then it is nice. If something needs the dog then it likes the bald eagle. If something is green then it visits the cat. If something needs the cat then it needs the rabbit. If something visits the bald eagle and the bald eagle is red then it visits the rabbit. If something likes the bald eagle then it is green.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bald eagle does not need the rabbit.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNice($x, bool) ::: Is x nice?\nLikes($x, $y, bool) ::: Does x like y?\nVisits($x, $y, bool) ::: Does x visit y?\nNeeds($x, $y, bool) ::: Does x need y?\nYoung($x, bool) ::: Is x young?\nBlue($x, bool) ::: Is x blue?\nRed($x, bool) ::: Is x red?\nGreen($x, bool) ::: Is x green?\nFacts:\nNice(BaldEagle, True) ::: The bald eagle is nice.\nLikes(BaldEagle, Cat, True) ::: The bald eagle likes the cat.\nVisits(BaldEagle, Rabbit, True) ::: The bald eagle visits the rabbit.\nGreen(Cat, True) ::: The cat is green.\nLikes(Cat, Rabbit, True) ::: The cat likes the rabbit.\nVisits(Cat, Rabbit, True) ::: The cat visits the rabbit.\nLikes(Dog, Rabbit, True) ::: The dog likes the rabbit.\nVisits(Dog, Rabbit, True) ::: The dog visits the rabbit.\nNeeds(Rabbit, Dog, True) ::: The rabbit needs the dog.\nVisits(Rabbit, Cat, True) ::: The rabbit visits the cat.\nVisits(BaldEagle, Rabbit, True) >>> Needs(Rabbit, BaldEagle, True) ::: If something visits the rabbit then it needs the bald eagle.\nYoung(Thing, True) >>> Blue(Thing, True) ::: All young things are blue"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-740_Q10",
    "context": "Anne is big. Anne is young. Charlie is blue. Charlie is kind. Charlie is round. Charlie is young. Gary is big. Harry is big. Harry is blue. Harry is kind. Harry is nice. Harry is smart. All smart things are big. All kind, smart things are round. All young, kind things are blue. All nice, young things are smart. If something is big then it is kind. If something is blue then it is nice. If Anne is nice and Anne is kind then Anne is smart. If Gary is nice then Gary is young. If something is round and big then it is blue.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Anne is not smart.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nYoung($x, bool) ::: Is x young?\nBlue($x, bool) ::: Is x blue?\nKind($x, bool) ::: Is x kind?\nRound($x, bool) ::: Is x round?\nSmart($x, bool) ::: Is x smart?\nNice($x, bool) ::: Is x nice?\nFacts:\nBig(Anne, True) ::: Anne is big.\nYoung(Anne, True) ::: Anne is young.\nBlue(Charlie, True) ::: Charlie is blue.\nKind(Charlie, True) ::: Charlie is kind.\nRound(Charlie, True) ::: Charlie is round.\nYoung(Charlie, True) ::: Charlie is young.\nBig(Gary, True) ::: Gary is big.\nBig(Harry, True) ::: Harry is big.\nBlue(Harry, True) ::: Harry is blue.\nKind(Harry, True) ::: Harry is kind.\nNice(Harry, True) ::: Harry is nice.\nSmart(Harry, True) ::: Harry is smart.\nRules:\nYoung($x, True) >>> Kind($x, True) ::: All young, kind things are blue.\nYoung($x, True) >>> Nice($x, True) ::: All nice, young things are smart.\nKind($x, True) && Smart($x, True) >>> Round($x, True) ::: All kind, smart things are round.\nBig($x, True) >>> Kind($x, True) ::: If something is big then it is kind.\nBlue($x, True) >>> Nice($x, True) :::"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-183_Q1",
    "context": "Anne is not cold. Anne is rough. Bob is round. Erin is rough. Erin is round. Gary is furry. Gary is green. All nice things are green. Furry things are green. If something is green and not round then it is white. Cold, round things are nice. If Bob is furry then Bob is white. Round things are cold. If Anne is white then Anne is furry. All nice things are rough. Rough things are furry.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Erin is round.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nRound($x, bool) ::: Is x round?\nNice($x, bool) ::: Is x nice?\nGreen($x, bool) ::: Is x green?\nWhite($x, bool) ::: Is x white?\nFurry($x, bool) ::: Is x furry?\nRough($x, bool) ::: Is x rough?\nFacts:\nNotCold(Anne, True) ::: Anne is not cold.\nRough(Anne, True) ::: Anne is rough.\nRound(Bob, True) ::: Bob is round.\nRough(Erin, True) ::: Erin is rough.\nRound(Erin, True) ::: Erin is round.\nFurry(Gary, True) ::: Gary is furry.\nGreen(Gary, True) ::: Gary is green.\nRules:\nNice($x, True) >>> Green($x, True) ::: All nice things are green.\nFurry($x, True) >>> Green($x, True) ::: Furry things are green.\nGreen($x, True) && NotRound($x, True) >>> White($x, True) ::: If something is green and not round then it is white.\nCold($x, True) && Round($x, True) >>> Nice($x, True) ::: Cold, round things are nice.\nIf($x, True) >>> Bob($x, True) ::: If Bob is furry then Bob is white.\nRound($x, True) >>> Cold($x, True) ::: Round things are cold.\nWhite($x, True) >>> Anne($x, True) ::: If Anne is white then Anne is furry."
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-354_Q3",
    "context": "The dog likes the mouse. The dog likes the squirrel. The mouse eats the dog. The squirrel is cold. The squirrel is green. The squirrel likes the tiger. The tiger eats the squirrel. If something sees the squirrel then the squirrel eats the tiger. If something is cold then it sees the squirrel. If something likes the squirrel then the squirrel likes the dog. If something sees the mouse then the mouse eats the squirrel. If something sees the squirrel then it is kind. If something likes the dog and it eats the mouse then the mouse is cold. If something eats the dog and the dog eats the mouse then the dog sees the tiger. If something is kind then it eats the mouse.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The squirrel likes the dog.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nLikes($x, $y, bool) ::: Does x like y?\nEats($x, $y, bool) ::: Does x eat y?\nSees($x, $y, bool) ::: Does x see y?\nKind($x, bool) ::: Is x kind?\nCold($x, bool) ::: Is x cold?\nFacts:\nLikes(Dog, Mouse, True) ::: The dog likes the mouse.\nLikes(Dog, Squirrel, True) ::: The dog likes the squirrel.\nEats(Mouse, Dog, True) ::: The mouse eats the dog.\nCold(Squirrel, True) ::: The squirrel is cold.\nGreen(Squirrel, True) ::: The squirrel is green.\nLikes(Squirrel, Tiger, True) ::: The squirrel likes the tiger.\nEats(Tiger, Squirrel, True) ::: The tiger eats the squirrel.\nSees(Squirrel, Tiger, True) ::: If something sees the squirrel then the squirrel eats the tiger.\nCold(Squirrel, True) ::: If something is cold then it sees the squirrel.\nLikes(Squirrel, Dog, True) ::: If something likes the squirrel then the squirrel likes the dog.\nSees(Mouse, Squirrel, True) ::: If something sees the mouse then the mouse eats the squirrel.\nKind(Squirrel, True) ::: If something sees the squirrel then it is kind.\nLikes(Dog, Mouse, True) && Eats(Dog, Mouse, True) ::: If something likes the dog and it eats the mouse then the mouse is cold.\nEats(Dog, Mouse, True) && Eats(Mouse, Squirrel, True) ::: If something eats the dog and the dog eats the mouse then the dog sees the tiger.\nKind(Squirrel, True) && Eats(Mouse, Squirrel, True) ::: If something is kind then it eats the mouse.\nQuery:\nLikes(Squirrel, Dog, True) ::: The squirrel likes the dog.\n------"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-744_Q18",
    "context": "The bald eagle sees the cat. The cat is round. The cat needs the rabbit. The cat sees the lion. The cat visits the lion. The lion is big. The lion is cold. The lion is nice. The lion visits the rabbit. The rabbit is nice. The rabbit is round. The rabbit sees the cat. If something is nice then it is big. If something is kind and it sees the rabbit then it needs the lion. If something needs the rabbit then it is nice. All cold, big things are kind. If something sees the bald eagle and the bald eagle is nice then it needs the rabbit. If something sees the lion then it visits the rabbit. If the bald eagle sees the cat then the bald eagle visits the rabbit. If something visits the rabbit then it needs the rabbit. If something is big then it is cold.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The lion needs the lion.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nSees($x, $y, bool) ::: Does x see y?\nNeeds($x, $y, bool) ::: Does x need y?\nVisits($x, $y, bool) ::: Does x visit y?\nKind($x, bool) ::: Is x kind?\nBig($x, bool) ::: Is x big?\nCold($x, bool) ::: Is x cold?\nNice($x, bool) ::: Is x nice?\nFacts:\nSees(BaldEagle, Cat, True) ::: The bald eagle sees the cat.\nRound(Cat, True) ::: The cat is round.\nNeeds(Cat, Rabbit, True) ::: The cat needs the rabbit.\nSees(Cat, Lion, True) ::: The cat sees the lion.\nVisits(Cat, Lion, True) ::: The cat visits the lion.\nBig(Lion, True) ::: The lion is big.\nCold(Lion, True) ::: The lion is cold.\nNice(Lion, True) ::: The lion is nice.\nVisits(Lion, Rabbit, True) ::: The lion visits the rabbit.\nNice(Rabbit, True) ::: The rabbit is nice.\nRound(Rabbit, True) ::: The rabbit is round.\nSees(Rabbit, Cat, True) ::: The rabbit sees the cat.\nRules:\nKind($x, True) >>> Big($x, True) ::: If something is nice then it is big.\nKind($x, True) && Sees($x, Rabbit) >>> Needs($x, Lion) ::: If something is nice and it sees the rabbit then it needs the lion.\nNeeds(Rabbit, $x, True) >>> Nice($x, True) ::: If something needs the rabbit then it is nice.\nCold($x, True) >>> Kind($x, True) ::: All cold, big things are kind.\nSees(BaldEagle, $x, True) && Nice($x, True) >>> Needs(Rabbit, $x, True) ::: If something sees the bald eagle and the bald eagle is nice then it needs the rabbit.\nSees($x"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-25_Q11",
    "context": "The bear chases the lion. The bear chases the mouse. The bear is red. The bear is round. The bear needs the squirrel. The lion eats the bear. The lion is kind. The lion needs the bear. The mouse is round. The squirrel chases the bear. If something eats the bear and the bear eats the lion then the lion is round. If something chases the lion then the lion eats the squirrel. If something is red then it needs the lion. If something eats the squirrel and the squirrel eats the mouse then it chases the lion. If the bear is blue and the bear needs the mouse then the mouse eats the lion. If something eats the lion and it is round then the lion is red. If something needs the lion then it eats the lion.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The lion eats the lion.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y) ::: Does x chase y?\nEats($x, $y) ::: Does x eat y?\nNeeds($x, $y) ::: Does x need y?\nIs($x, $y) ::: Is x y?\nRound($x, bool) ::: Is x round?\nRed($x, bool) ::: Is x red?\nBlue($x, bool) ::: Is x blue?\nFacts:\nChases(Bear, Lion) ::: The bear chases the lion.\nChases(Bear, Mouse) ::: The bear chases the mouse.\nRed(Bear, True) ::: The bear is red.\nRound(Bear, True) ::: The bear is round.\nNeeds(Bear, Squirrel) ::: The bear needs the squirrel.\nEats(Lion, Bear) ::: The lion eats the bear.\nKind(Lion, True) ::: The lion is kind.\nNeeds(Lion, Bear) ::: The lion needs the bear.\nRound(Mouse, True) ::: The mouse is round.\nChases(Squirrel, Bear) ::: The squirrel chases the bear.\nRules:\nChases($x, $y) >>> Eats($y, $x) ::: If something chases the lion then the lion eats the squirrel.\nIs($x, $y) >>> Needs($x, $y) ::: If something eats the squirrel and the squirrel eats the mouse then it chases the lion.\nIs($x, $y) >>> Eats($x, $y) ::: If something eats the lion and it is round then the lion is red.\nIs($x, $y) >>> Needs($x, $y) ::: If something needs the lion then it eats the lion.\nIs($x, $y) >>> Eats($x, $y) ::: If something eats the lion and the lion eats the squirrel then the squirrel eats the mouse.\nIs($x, $y) >>> Eats($x, $y) ::: If something eats the lion and the lion eats the squirrel then the squirrel eats the mouse.\nIs($x, $"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-375_Q11",
    "context": "The bald eagle eats the dog. The bald eagle eats the tiger. The cat needs the bald eagle. The cat needs the dog. The cat sees the dog. The dog eats the tiger. The dog is red. The tiger is red. The tiger needs the bald eagle. The tiger needs the cat. If someone needs the tiger then the tiger needs the dog. If someone eats the cat and the cat sees the tiger then the cat eats the tiger. If someone needs the dog then the dog needs the tiger. Blue people are red. If someone is red and they see the bald eagle then the bald eagle is big. Red people are young. If someone sees the tiger then they see the cat. If someone needs the dog then they are blue. If someone is blue and young then they see the bald eagle.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bald eagle is big.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y, bool) ::: Does x eat y?\nNeeds($x, $y, bool) ::: Does x need y?\nSees($x, $y, bool) ::: Does x see y?\nIs($x, $y, bool) ::: Is x y?\nBig($x, bool) ::: Is x big?\nRed($x, bool) ::: Is x red?\nYoung($x, bool) ::: Is x young?\nBlue($x, bool) ::: Is x blue?\nFacts:\nEats(BaldEagle, Dog, True) ::: The bald eagle eats the dog.\nEats(BaldEagle, Tiger, True) ::: The bald eagle eats the tiger.\nNeeds(Cat, BaldEagle, True) ::: The cat needs the bald eagle.\nNeeds(Cat, Dog, True) ::: The cat needs the dog.\nSees(Cat, Dog, True) ::: The cat sees the dog.\nEats(Dog, Tiger, True) ::: The dog eats the tiger.\nIs(Dog, Red, True) ::: The dog is red.\nIs(Tiger, Red, True) ::: The tiger is red.\nNeeds(Tiger, BaldEagle, True) ::: The tiger needs the bald eagle.\nNeeds(Tiger, Cat, True) ::: The tiger needs the cat.\nIf($x, $y, $z, bool) ::: If $x then $y.\nIf($x, $y, $z, True) ::: If someone needs the tiger then the tiger needs the dog.\nIf($x, $y, $z, True) ::: If someone eats the cat and the cat sees the tiger then the cat eats the tiger.\nIf($x, $y, $z, True) ::: If someone needs the dog then the dog needs the tiger.\nBlue($x, True) >>> Red($x, True) ::: Blue people are red.\nIf($x, $y, $z, True) ::: If someone is red and they see the bald eagle then the bald eagle is big.\nRed($x, True) >>> Young($x,"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-201_Q2",
    "context": "The cat needs the mouse. The cat sees the squirrel. The cat does not see the tiger. The mouse is red. The mouse does not visit the cat. The squirrel is big. The squirrel visits the tiger. The tiger is big. The tiger sees the mouse. The tiger visits the squirrel. If someone visits the tiger and the tiger needs the mouse then the mouse sees the squirrel. If someone is blue and red then they need the tiger. If someone needs the tiger then the tiger needs the mouse. If someone visits the squirrel then they are not blue. Red people are blue. If someone needs the cat and they are not big then they do not visit the squirrel. If someone sees the squirrel then they need the mouse.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The mouse visits the cat.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNeeds($x, $y, bool) ::: Does x need y?\nVisits($x, $y, bool) ::: Does x visit y?\nSees($x, $y, bool) ::: Does x see y?\nIs($x, $y, bool) ::: Is x y?\nBlue($x, bool) ::: Is x blue?\nRed($x, bool) ::: Is x red?\nBig($x, bool) ::: Is x big?\nFacts:\nNeeds(Cat, Mouse, True) ::: The cat needs the mouse.\nSees(Cat, Squirrel, True) ::: The cat sees the squirrel.\nNot(Sees(Cat, Tiger, True)) ::: The cat does not see the tiger.\nRed(Mouse, True) ::: The mouse is red.\nNot(Visits(Mouse, Cat, True)) ::: The mouse does not visit the cat.\nBig(Squirrel, True) ::: The squirrel is big.\nVisits(Squirrel, Tiger, True) ::: The squirrel visits the tiger.\nBig(Tiger, True) ::: The tiger is big.\nSees(Tiger, Mouse, True) ::: The tiger sees the mouse.\nVisits(Tiger, Squirrel, True) ::: The tiger visits the squirrel.\nRules:\nIf someone visits the tiger and the tiger needs the mouse then the mouse sees the squirrel. ::: If someone visits the tiger and the tiger needs the mouse then the mouse sees the squirrel.\nIf someone is blue and red then they need the tiger. ::: If someone is blue and red then they need the tiger.\nIf someone needs the tiger then the tiger needs the mouse. ::: If someone needs the tiger then the tiger needs the mouse.\nIf someone visits the squirrel then they are not blue. ::: If someone visits the squirrel then they are not blue.\nRed($x, True) >>> Blue($x, True) ::: Red people are blue.\nIf someone needs the cat and they are not big then they do not visit the squirrel. ::: If someone needs the cat and they are not big then they do not visit the squirrel."
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-27_Q2",
    "context": "The cat chases the cow. The cat chases the mouse. The cat is nice. The cat is red. The cat is rough. The cat needs the lion. The cat does not need the mouse. The cat visits the mouse. The cow does not chase the cat. The cow is big. The lion chases the cat. The lion chases the cow. The lion is young. The lion visits the cow. The mouse is big. The mouse is rough. If someone needs the lion then the lion does not need the mouse. If someone visits the cat then they are not big. If someone is rough then they visit the mouse. If the cow visits the lion and the cow is big then the lion does not need the cat. If someone visits the mouse then they are red. If someone chases the cow and they do not need the mouse then the cow is rough. If someone is red then they visit the lion. If someone is red and they chase the lion then the lion is red. If someone chases the mouse and they are red then the mouse needs the cat.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cow chases the cat.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nNeeds($x, $y, bool) ::: Does x need y?\nVisits($x, $y, bool) ::: Does x visit y?\nIs($x, $y, bool) ::: Is x y?\nRed($x, bool) ::: Is x red?\nRough($x, bool) ::: Is x rough?\nBig($x, bool) ::: Is x big?\nYoung($x, bool) ::: Is x young?\nFacts:\nChases(Cat, Cow, True) ::: The cat chases the cow.\nChases(Cat, Mouse, True) ::: The cat chases the mouse.\nChases(Cat, Lion, True) ::: The cat chases the lion.\nChases(Cow, Cat, False) ::: The cow does not chase the cat.\nChases(Cow, Lion, True) ::: The cow chases the lion.\nChases(Lion, Cat, True) ::: The lion chases the cat.\nChases(Lion, Cow, True) ::: The lion chases the cow.\nNeeds(Cat, Lion, True) ::: The cat needs the lion.\nNeeds(Cat, Mouse, False) ::: The cat does not need the mouse.\nVisits(Cat, Mouse, True) ::: The cat visits the mouse.\nIs(Cat, Red, True) ::: The cat is red.\nIs(Cat, Rough, True) ::: The cat is rough.\nIs(Cat, Young, False) ::: The cat is not young.\nIs(Cat, Nice, True) ::: The cat is nice.\nRules:\nChases($x, $y, True) >>> Needs($x, $y, False) ::: If someone needs the lion then the lion does not need the mouse.\nVisits($x, $y, True) >>> Is($x, Red, True) ::: If someone visits the cat then they are red.\nChases($x, $y, True) && Is($x, Rough, True) >>> Visits($x, Mouse, True) ::: If someone is rough then they visit the mouse.\nChases($x, $y, True) && Is($x"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-174_Q13",
    "context": "Anne is green. Anne is round. Dave is red. Gary is green. Gary is young. Harry is red. Harry is young. All furry, young people are not green. All young, round people are blue. If someone is red and kind then they are round. Green, kind people are round. If someone is green and round then they are kind. All red people are kind. All furry people are red. All blue, young people are furry. If Anne is young then Anne is kind.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Anne is not red.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen($x, bool) ::: Is x green?\nRound($x, bool) ::: Is x round?\nRed($x, bool) ::: Is x red?\nKind($x, bool) ::: Is x kind?\nFurry($x, bool) ::: Is x furry?\nBlue($x, bool) ::: Is x blue?\nFacts:\nGreen(Anne, True) ::: Anne is green.\nRound(Anne, True) ::: Anne is round.\nRed(Dave, True) ::: Dave is red.\nGreen(Gary, True) ::: Gary is green.\nYoung(Gary, True) ::: Gary is young.\nRed(Harry, True) ::: Harry is red.\nYoung(Harry, True) ::: Harry is young.\nRules:\nFurry($x, True) && Young($x, True) >>> Not(Green($x, True)) ::: All furry, young people are not green.\nYoung($x, True) && Round($x, True) >>> Blue($x, True) ::: All young, round people are blue.\nRed($x, True) && Kind($x, True) >>> Round($x, True) ::: If someone is red and kind then they are round.\nGreen($x, True) && Kind($x, True) >>> Round($x, True) ::: Green, kind people are round.\nGreen($x, True) && Round($x, True) >>> Kind($x, True) ::: If someone is green and round then they are kind.\nRed($x, True) >>> Kind($x, True) ::: All red people are kind.\nFurry($x, True) >>> Red($x, True) ::: All furry people are red.\nBlue($x, True) && Young($x, True) >>> Furry($x, True) ::: All blue, young people are furry.\nYoung($x, True) >>> Kind($x, True) ::: If Anne is young then Anne is kind.\nQuery:\nNot(Red(Anne, True)) ::: Anne is not red.\n------\nProblem:\nAnne is furry. Anne is green. Anne is kind. Anne is young. Anne is white. Dave is furry. Dave is green."
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-874_Q5",
    "context": "Bob is furry. Bob is not white. Fiona is rough. Gary is not big. Gary is rough. Gary is white. Harry is big. Harry is cold. Harry is furry. Harry is kind. Harry is rough. If Fiona is white then Fiona is kind. If something is big then it is not blue. If something is cold then it is kind. All white, furry things are big. All kind things are white. If something is rough then it is white. Kind, blue things are white. If something is white and kind then it is furry.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Fiona is kind.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nFurry($x, bool) ::: Is x furry?\nWhite($x, bool) ::: Is x white?\nBig($x, bool) ::: Is x big?\nBlue($x, bool) ::: Is x blue?\nKind($x, bool) ::: Is x kind?\nCold($x, bool) ::: Is x cold?\nFacts:\nFurry(Bob, True) ::: Bob is furry.\nWhite(Bob, False) ::: Bob is not white.\nRough(Fiona, True) ::: Fiona is rough.\nNot(Big(Gary, True)) ::: Gary is not big.\nRough(Gary, True) ::: Gary is rough.\nWhite(Gary, True) ::: Gary is white.\nBig(Harry, True) ::: Harry is big.\nCold(Harry, True) ::: Harry is cold.\nFurry(Harry, True) ::: Harry is furry.\nKind(Harry, True) ::: Harry is kind.\nRough(Harry, True) ::: Harry is rough.\nRules:\nIf Fiona is white then Fiona is kind ::: If Fiona is white then Fiona is kind.\nNot(Big($x, True)) >>> Blue($x, True) ::: If something is big then it is not blue.\nCold($x, True) >>> Kind($x, True) ::: If something is cold then it is kind.\nFurry($x, True) >>> Big($x, True) ::: All white, furry things are big.\nKind($x, True) >>> White($x, True) ::: All kind things are white.\nRough($x, True) >>> White($x, True) ::: If something is rough then it is white.\nKind($x, True) && Blue($x, True) >>> White($x, True) ::: Kind, blue things are white.\nWhite($x, True) && Kind($x, True) >>> Furry($x, True) ::: If something is white and kind then it is furry.\n------\nProblem:\nBob is furry. Bob is not white. Fiona is rough. Gary is not big. Gary is rough. Gary is white. Harry is big. Harry is"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-865_Q5",
    "context": "Anne is big. Anne is round. Dave is nice. Dave is rough. Fiona is rough. Gary is blue. Gary is furry. If Anne is rough then Anne is not furry. If Fiona is quiet then Fiona is big. If something is blue and not rough then it is not round. If something is nice and round then it is quiet. If Fiona is big and Fiona is nice then Fiona is round. If something is round then it is blue. Furry things are nice. All nice things are big. If something is rough then it is furry.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Fiona is nice.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nRound($x, bool) ::: Is x round?\nNice($x, bool) ::: Is x nice?\nRough($x, bool) ::: Is x rough?\nBlue($x, bool) ::: Is x blue?\nFurry($x, bool) ::: Is x furry?\nQuiet($x, bool) ::: Is x quiet?\nFacts:\nBig(Anne, True) ::: Anne is big.\nRound(Anne, True) ::: Anne is round.\nNice(Dave, True) ::: Dave is nice.\nRough(Dave, True) ::: Dave is rough.\nRough(Fiona, True) ::: Fiona is rough.\nBlue(Gary, True) ::: Gary is blue.\nFurry(Gary, True) ::: Gary is furry.\nRules:\nNot(Furry($x, True)) >>> Rough($x, True) ::: If Anne is rough then Anne is not furry.\nQuiet(Fiona, True) >>> Big(Fiona, True) ::: If Fiona is quiet then Fiona is big.\nNot(Blue($x, True)) && Not(Rough($x, True)) >>> Not(Round($x, True)) ::: If something is blue and not rough then it is not round.\nNice($x, True) && Round($x, True) >>> Quiet($x, True) ::: If something is nice and round then it is quiet.\nBig(Fiona, True) && Nice(Fiona, True) >>> Round(Fiona, True) ::: If Fiona is big and Fiona is nice then Fiona is round.\nRound($x, True) >>> Blue($x, True) ::: If something is round then it is blue.\nFurry($x, True) >>> Nice($x, True) ::: Furry things are nice.\nNice($x, True) >>> Big($x, True) ::: All nice things are big.\nRough($x, True) >>> Furry($x, True) ::: If something is rough then it is furry.\nQuery:\nNice(Fiona, True) ::: Fiona is nice.\n------\nProblem:\nAn"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-279_Q2",
    "context": "The bear is blue. The bear is round. The bear sees the cow. The cow is blue. The lion is rough. The lion likes the tiger. The lion sees the bear. The tiger is cold. The tiger is round. The tiger sees the bear. The tiger sees the cow. If someone is blue then they like the tiger. If the cow is blue then the cow chases the lion. If someone likes the tiger and the tiger sees the bear then they chase the lion. If someone likes the lion then the lion chases the tiger. If the cow is cold and the cow chases the bear then the bear chases the tiger. If someone chases the cow and they chase the lion then they chase the bear. If someone is rough then they chase the cow. If someone is cold then they are blue. If someone is blue and they chase the lion then they are rough.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bear does not see the cow.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue($x, bool) ::: Is x blue?\nRound($x, bool) ::: Is x round?\nSees($x, $y, bool) ::: Does x see y?\nLikes($x, $y, bool) ::: Does x like y?\nChases($x, $y, bool) ::: Does x chase y?\nFacts:\nBlue(Bear, True) ::: The bear is blue.\nRound(Bear, True) ::: The bear is round.\nSees(Bear, Cow, True) ::: The bear sees the cow.\nBlue(Cow, True) ::: The cow is blue.\nRough(Lion, True) ::: The lion is rough.\nLikes(Lion, Tiger, True) ::: The lion likes the tiger.\nSees(Lion, Bear, True) ::: The lion sees the bear.\nCold(Tiger, True) ::: The tiger is cold.\nRound(Tiger, True) ::: The tiger is round.\nSees(Tiger, Bear, True) ::: The tiger sees the bear.\nSees(Tiger, Cow, True) ::: The tiger sees the cow.\nRules:\nBlue($x, True) >>> Likes($x, Tiger, True) ::: If someone is blue then they like the tiger.\nBlue(Cow, True) >>> Chases(Cow, Lion, True) ::: If the cow is blue then the cow chases the lion.\nLikes($x, Tiger, True) && Sees(Tiger, Bear, True) >>> Chases($x, Lion, True) ::: If someone likes the tiger and the tiger sees the bear then they chase the lion.\nLikes($x, Lion, True) >>> Chases(Lion, Tiger, True) ::: If someone likes the lion then the lion chases the tiger.\nCold($x, True) >>> Blue($x, True) ::: If someone is cold then they are blue.\nBlue($x, True) && Chases($x, Lion, True) >>> Rough($x, True) ::: If someone is blue and they chase the lion then they are rough.\nSees($x, Bear, True) && Chases($x,"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-707_Q10",
    "context": "The bear is big. The bear is blue. The bear is nice. The bear likes the mouse. The bear visits the lion. The bear visits the squirrel. The lion is blue. The mouse is cold. The mouse is green. The mouse visits the squirrel. The squirrel visits the lion. If something is cold and it visits the lion then it likes the squirrel. If something visits the squirrel then it likes the squirrel. If something eats the mouse and it visits the lion then it eats the bear. If something likes the squirrel then it likes the bear. If something likes the mouse and the mouse is blue then the mouse is nice. If something likes the lion then it is blue. If the mouse likes the bear then the mouse likes the lion.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The mouse is not blue.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nBlue($x, bool) ::: Is x blue?\nNice($x, bool) ::: Is x nice?\nLikes($x, $y, bool) ::: Does x like y?\nVisits($x, $y, bool) ::: Does x visit y?\nEats($x, $y, bool) ::: Does x eat y?\nFacts:\nBig(Bear, True) ::: The bear is big.\nBlue(Bear, True) ::: The bear is blue.\nNice(Bear, True) ::: The bear is nice.\nLikes(Bear, Mouse, True) ::: The bear likes the mouse.\nVisits(Bear, Lion, True) ::: The bear visits the lion.\nVisits(Bear, Squirrel, True) ::: The bear visits the squirrel.\nBlue(Lion, True) ::: The lion is blue.\nCold(Mouse, True) ::: The mouse is cold.\nGreen(Mouse, True) ::: The mouse is green.\nVisits(Mouse, Squirrel, True) ::: The mouse visits the squirrel.\nVisits(Squirrel, Lion, True) ::: The squirrel visits the lion.\nRules:\nCold($x, True) && Visits($x, Lion, True) >>> Likes($x, Squirrel, True) ::: If something is cold and it visits the lion then it likes the squirrel.\nVisits($x, Squirrel, True) >>> Likes($x, Squirrel, True) ::: If something visits the squirrel then it likes the squirrel.\nEats($x, Mouse, True) && Visits($x, Lion, True) >>> Eats($x, Bear, True) ::: If something eats the mouse and it visits the lion then it eats the bear.\nLikes($x, Squirrel, True) >>> Likes($x, Bear, True) ::: If something likes the squirrel then it likes the bear.\nLikes($x, Mouse, True) && Blue($x, True) >>> Nice($x, True) ::: If something likes the mouse and the mouse is blue then the mouse is nice.\nLikes($x, Lion, True) >>> Blue($x, True) ::: If something likes the lion then it is blue.\nLikes(Mouse, Bear, True) >>> Likes(Mouse, Lion, True) ::: If the mouse likes the bear then the mouse likes the lion.\nQuery:\nBlue(Mouse, False) ::: The mouse is not blue.\n------"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-617_Q6",
    "context": "The bald eagle is round. The bald eagle sees the bear. The bald eagle sees the dog. The bald eagle sees the squirrel. The bald eagle visits the dog. The bald eagle visits the squirrel. The bear is young. The bear needs the squirrel. The bear sees the squirrel. The dog is nice. The dog sees the bald eagle. The dog sees the bear. The dog visits the bald eagle. The squirrel is red. The squirrel is round. The squirrel needs the dog. If something visits the dog then the dog needs the squirrel. If something sees the squirrel and it is blue then the squirrel visits the dog. If something is blue then it visits the bear. If something sees the squirrel and the squirrel visits the bear then it visits the bald eagle. Round things are red. If something visits the dog and the dog sees the bald eagle then it is blue. If something is young and it sees the bald eagle then the bald eagle needs the bear. If something visits the bear then the bear sees the squirrel.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The squirrel does not visit the dog.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRound($x, bool) ::: Is x round?\nYoung($x, bool) ::: Is x young?\nNeeds($x, $y, bool) ::: Does x need y?\nVisits($x, $y, bool) ::: Does x visit y?\nSees($x, $y, bool) ::: Does x see y?\nBlue($x, bool) ::: Is x blue?\nNice($x, bool) ::: Is x nice?\nFacts:\nRound(BaldEagle, True) ::: The bald eagle is round.\nSees(BaldEagle, Bear, True) ::: The bald eagle sees the bear.\nSees(BaldEagle, Dog, True) ::: The bald eagle sees the dog.\nSees(BaldEagle, Squirrel, True) ::: The bald eagle sees the squirrel.\nVisits(BaldEagle, Dog, True) ::: The bald eagle visits the dog.\nVisits(BaldEagle, Squirrel, True) ::: The bald eagle visits the squirrel.\nYoung(Bear, True) ::: The bear is young.\nNeeds(Bear, Squirrel, True) ::: The bear needs the squirrel.\nSees(Bear, Squirrel, True) ::: The bear sees the squirrel.\nNice(Dog, True) ::: The dog is nice.\nSees(Dog, BaldEagle, True) ::: The dog sees the bald eagle.\nSees(Dog, Bear, True) ::: The dog sees the bear.\nVisits(Dog, BaldEagle, True) ::: The dog visits the bald eagle.\nRed(Squirrel, True) ::: The squirrel is red.\nRound(Squirrel, True) ::: The squirrel is round.\nNeeds(Squirrel, Dog, True) ::: The squirrel needs the dog.\nRules:\nVisits($x, $y, True) >>> Needs($x, $y, True) ::: If something visits the dog then the dog needs the squirrel.\nSees($x, Squirrel, True) && Blue($x, True) >>> Visits($x, Squirrel, True) ::: If something sees the squirrel and it is blue then the squirrel visits the dog.\nBlue($x, True) >>> Visits($x, Bear, True) ::: If something is blue then it visits the bear.\nSees($x, Squirrel, True) && Visits($x, Bear, True"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-893_Q2",
    "context": "The bald eagle is big. The bald eagle sees the lion. The bald eagle visits the rabbit. The lion eats the bald eagle. The lion is blue. The lion is cold. The lion visits the bald eagle. The lion visits the rabbit. The rabbit eats the tiger. The rabbit is big. The rabbit sees the bald eagle. The rabbit visits the tiger. The tiger is red. The tiger visits the bald eagle. If someone eats the bald eagle then the bald eagle visits the lion. If someone visits the bald eagle and the bald eagle sees the rabbit then the rabbit is red. If the lion is blue then the lion sees the tiger. If someone is big then they are cold. If someone is red then they visit the lion. If someone eats the bald eagle then they see the bald eagle. If someone eats the tiger and the tiger sees the lion then they visit the lion. If someone eats the lion and the lion sees the rabbit then the rabbit sees the bald eagle. If someone visits the lion and the lion sees the tiger then they see the rabbit.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The tiger is not red.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nCold($x, bool) ::: Is x cold?\nRed($x, bool) ::: Is x red?\nVisits($x, $y, bool) ::: Does x visit y?\nEats($x, $y, bool) ::: Does x eat y?\nSees($x, $y, bool) ::: Does x see y?\nFacts:\nBig(BaldEagle, True) ::: The bald eagle is big.\nSees(BaldEagle, Lion, True) ::: The bald eagle sees the lion.\nVisits(BaldEagle, Rabbit, True) ::: The bald eagle visits the rabbit.\nEats(Lion, BaldEagle, True) ::: The lion eats the bald eagle.\nBlue(Lion, True) ::: The lion is blue.\nCold(Lion, True) ::: The lion is cold.\nVisits(Lion, BaldEagle, True) ::: The lion visits the bald eagle.\nVisits(Lion, Rabbit, True) ::: The lion visits the rabbit.\nEats(Rabbit, Tiger, True) ::: The rabbit eats the tiger.\nBig(Rabbit, True) ::: The rabbit is big.\nSees(Rabbit, BaldEagle, True) ::: The rabbit sees the bald eagle.\nVisits(Rabbit, Tiger, True) ::: The rabbit visits the tiger.\nRed(Tiger, True) ::: The tiger is red.\nVisits(Tiger, BaldEagle, True) ::: The tiger visits the bald eagle.\nRules:\nEats($x, $y, True) >>> Visits($x, $y, True) ::: If someone eats the bald eagle then the bald eagle visits the lion.\nVisits($x, $y, True) && Sees($x, $z, True) >>> Red($z, True) ::: If someone visits the bald eagle and the bald eagle sees the rabbit then the rabbit is red.\nBlue($x, True) >>> Sees($x, $y, True) ::: If the lion is blue then the lion sees the tiger.\nBig($x, True) >>> Cold($x, True) ::: If someone is big then they are cold.\nRed($x, True) >>> Visits($x, $y, True) ::: If someone is red then they visit the lion.\nEats($x, $y, True) >>> Sees($x, $y,"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1175_Q9",
    "context": "Anne is rough. Bob is furry. Dave is big. Dave is nice. Dave is rough. Fiona is furry. Fiona is nice. If someone is smart and cold then they are nice. If someone is smart then they are cold. Rough, nice people are red. If someone is rough then they are smart. If Fiona is red then Fiona is big. All furry people are rough. If someone is big then they are rough.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Anne is red.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRough($x, bool) ::: Is x rough?\nFurry($x, bool) ::: Is x furry?\nBig($x, bool) ::: Is x big?\nNice($x, bool) ::: Is x nice?\nSmart($x, bool) ::: Is x smart?\nCold($x, bool) ::: Is x cold?\nRed($x, bool) ::: Is x red?\nFacts:\nRough(Anne, True) ::: Anne is rough.\nFurry(Bob, True) ::: Bob is furry.\nBig(Dave, True) ::: Dave is big.\nNice(Dave, True) ::: Dave is nice.\nRough(Dave, True) ::: Dave is rough.\nFurry(Fiona, True) ::: Fiona is furry.\nNice(Fiona, True) ::: Fiona is nice.\nSmart(Fiona, True) ::: Fiona is smart.\nCold(Fiona, True) ::: Fiona is cold.\nRules:\nSmart($x, True) >>> Cold($x, True) ::: If someone is smart then they are cold.\nSmart($x, True) >>> Nice($x, True) ::: If someone is smart and cold then they are nice.\nRough($x, True) >>> Smart($x, True) ::: If someone is rough then they are smart.\nFurry($x, True) >>> Rough($x, True) ::: All furry people are rough.\nBig($x, True) >>> Rough($x, True) ::: If someone is big then they are rough.\nFurry($x, True) && Rough($x, True) >>> Red($x, True) ::: Rough, nice people are red.\nQuery:\nRed(Anne, True) ::: Anne is red.\n------\nProblem:\nAnne is furry. Bob is furry. Bob is green. Bob is red. Bob is rough. Bob is white. Fiona is furry. Fiona is green. Fiona is red. Fiona is rough. Fiona is white. Harry is furry. Harry is green. Harry is red. Harry is rough. Harry is white. If someone is green then they are white. If someone is furry and green then they are rough. If someone is furry and green then they are white. If someone is furry and green then they are rough. If someone is furry and green then they are white. If someone is furry and green then they are rough. If someone is furry and green then they are white. If someone is furry and green"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-1012_Q3",
    "context": "The cow chases the lion. The cow is big. The cow is nice. The cow likes the squirrel. The cow sees the squirrel. The dog is blue. The dog is rough. The dog likes the cow. The dog sees the lion. The lion is big. The lion likes the cow. The lion sees the dog. The lion sees the squirrel. The squirrel sees the dog. If someone is nice then they are blue. If someone sees the lion then they chase the cow. If someone likes the squirrel and they see the lion then the squirrel likes the lion. If someone is blue and they like the cow then the cow is big. All blue people are young. If someone likes the lion and they chase the cow then the cow chases the lion. If someone chases the cow and the cow chases the lion then they like the squirrel. If someone likes the lion then they are blue.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cow is blue.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nBig($x, bool) ::: Is x big?\nNice($x, bool) ::: Is x nice?\nLikes($x, $y, bool) ::: Does x like y?\nSees($x, $y, bool) ::: Does x see y?\nBlue($x, bool) ::: Is x blue?\nYoung($x, bool) ::: Is x young?\nFacts:\nChases(Cow, Lion, True) ::: The cow chases the lion.\nBig(Cow, True) ::: The cow is big.\nNice(Cow, True) ::: The cow is nice.\nLikes(Cow, Squirrel, True) ::: The cow likes the squirrel.\nSees(Cow, Squirrel, True) ::: The cow sees the squirrel.\nBlue(Dog, True) ::: The dog is blue.\nRough(Dog, True) ::: The dog is rough.\nLikes(Dog, Cow, True) ::: The dog likes the cow.\nSees(Dog, Lion, True) ::: The dog sees the lion.\nBig(Lion, True) ::: The lion is big.\nLikes(Lion, Cow, True) ::: The lion likes the cow.\nSees(Lion, Dog, True) ::: The lion sees the dog.\nSees(Lion, Squirrel, True) ::: The lion sees the squirrel.\nSees(Squirrel, Dog, True) ::: The squirrel sees the dog.\nRules:\nNice($x, True) >>> Blue($x, True) ::: If someone is nice then they are blue.\nChases($x, $y, True) >>> Sees($x, $y, True) ::: If someone sees the lion then they chase the cow.\nLikes($x, $y, True) && Sees($x, $y, True) >>> Likes($y, $x, True) ::: If someone likes the squirrel and they see the lion then the squirrel likes the lion.\nBlue($x, True) && Likes($x, $y, True) >>> Big($y, True) ::: If someone likes the lion and they chase the cow then the cow chases the lion.\nChases($x, $y, True) && Chases($y, $z, True) >>> Likes($x, $z, True) ::: If someone chases the cow and the cow chases the lion then they like the squirrel.\nL"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-976_Q4",
    "context": "Charlie is not quiet. Erin is big. Erin is white. Erin is young. Gary is young. Harry is furry. Harry is nice. White, furry people are big. All nice people are big. If someone is quiet and furry then they are white. If someone is young then they are quiet. All big, furry people are round. If someone is quiet then they are furry. If Erin is round then Erin is quiet.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Harry is not big.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nQuiet($x, bool) ::: Is x quiet?\nBig($x, bool) ::: Is x big?\nWhite($x, bool) ::: Is x white?\nYoung($x, bool) ::: Is x young?\nNice($x, bool) ::: Is x nice?\nFurry($x, bool) ::: Is x furry?\nRound($x, bool) ::: Is x round?\nFacts:\nQuite(Charlie, False) ::: Charlie is not quiet.\nBig(Erin, True) ::: Erin is big.\nWhite(Erin, True) ::: Erin is white.\nYoung(Erin, True) ::: Erin is young.\nYoung(Gary, True) ::: Gary is young.\nFurry(Harry, True) ::: Harry is furry.\nNice(Harry, True) ::: Harry is nice.\nRules:\nWhite($x, True) >>> Furry($x, True) ::: White, furry people are big.\nNice($x, True) >>> Big($x, True) ::: All nice people are big.\nFurry($x, True) && Quite($x, True) >>> White($x, True) ::: If someone is quiet and furry then they are white.\nYoung($x, True) >>> Quite($x, True) ::: If someone is young then they are quiet.\nFurry($x, True) >>> Round($x, True) ::: All big, furry people are round.\nQuite($x, True) >>> Furry($x, True) ::: If someone is quiet then they are furry.\nYoung($x, True) >>> Round($x, True) ::: If Erin is round then Erin is quiet.\nQuery:\nBig(Harry, False) ::: Harry is not big.\n------\nProblem:\nCharlie is not quiet. Erin is big. Erin is white. Erin is young. Gary is young. Harry is furry. Harry is nice. White, furry people are big. All nice people are big. If someone is quiet and furry then they are white. If someone is young then they are quiet. All big, furry people are round. If someone is quiet then they are furry. If Erin is round then Erin is quiet.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Harry is not big.\n###\nPredicates:\nQuiet($x, bool) ::: Is x quiet?\nBig($x, bool) ::: Is x big?\nWhite($x,"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-41_Q22",
    "context": "The bald eagle sees the lion. The cow eats the lion. The cow eats the mouse. The cow sees the mouse. The lion is kind. The lion needs the mouse. The lion sees the bald eagle. The mouse is kind. The mouse needs the cow. The mouse needs the lion. The mouse sees the bald eagle. The mouse sees the cow. If someone is big then they eat the cow. If someone is blue then they see the mouse. If someone is cold and they see the mouse then they eat the cow. If someone is cold then they eat the mouse. If someone needs the mouse and the mouse eats the cow then the cow needs the lion. All cold people are big. If the lion eats the bald eagle then the bald eagle sees the lion. If the mouse is kind then the mouse needs the bald eagle. If someone needs the lion then they are cold.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cow sees the lion.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y) ::: Does x eat y?\nSees($x, $y) ::: Does x see y?\nKind($x, bool) ::: Is x kind?\nNeeds($x, $y) ::: Does x need y?\nBig($x, bool) ::: Is x big?\nBlue($x, bool) ::: Is x blue?\nCold($x, bool) ::: Is x cold?\nFacts:\nEats(Cow, Lion) ::: The cow eats the lion.\nEats(Cow, Mouse) ::: The cow eats the mouse.\nSees(Cow, Mouse) ::: The cow sees the mouse.\nSees(Lion, BaldEagle) ::: The lion sees the bald eagle.\nKind(Lion, True) ::: The lion is kind.\nNeeds(Lion, Mouse) ::: The lion needs the mouse.\nSees(Lion, BaldEagle) ::: The lion sees the bald eagle.\nKind(Mouse, True) ::: The mouse is kind.\nNeeds(Mouse, Cow) ::: The mouse needs the cow.\nNeeds(Mouse, Lion) ::: The mouse needs the lion.\nSees(Mouse, BaldEagle) ::: The mouse sees the bald eagle.\nSees(Mouse, Cow) ::: The mouse sees the cow.\nBig(Cow, True) ::: The cow is big.\nBlue(Mouse, True) ::: The mouse is blue.\nCold(Mouse, True) ::: The mouse is cold.\nRules:\nBig($x, True) >>> Eats($x, Cow) ::: If someone is big then they eat the cow.\nBlue($x, True) >>> Sees($x, Mouse) ::: If someone is blue then they see the mouse.\nCold($x, True) && Sees($x, Mouse) >>> Eats($x, Cow) ::: If someone is cold and they see the mouse then they eat the cow.\nCold($x, True) >>> Eats($x, Mouse) ::: If someone is cold then they eat the mouse.\nNeeds($x, Mouse) && Eats($Mouse, Cow) >>> Needs($Cow, Lion) ::: If someone needs the mouse and the mouse eats the cow then the cow needs the lion.\nAll($x, Cold($x, True)) >>> Big($x, True) ::: All cold people are big.\nEats(Lion, BaldEagle) >>> Sees(Lion, BaldEagle) ::: If the lion eats the bald eagle then the bald eagle sees the lion."
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-1213_Q23",
    "context": "Anne is white. Bob is round. Erin is green. Erin is red. Erin is not round. Erin is white. Harry is young. All red, round people are quiet. If someone is young then they are white. Round people are young. If someone is round and smart then they are not red. All white people are red. Quiet people are green. If someone is red and not white then they are not green.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Anne is not smart.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nWhite($x, bool) ::: Is x white?\nRound($x, bool) ::: Is x round?\nRed($x, bool) ::: Is x red?\nSmart($x, bool) ::: Is x smart?\nQuiet($x, bool) ::: Is x quiet?\nGreen($x, bool) ::: Is x green?\nFacts:\nWhite(Anne, True) ::: Anne is white.\nRound(Bob, True) ::: Bob is round.\nGreen(Erin, True) ::: Erin is green.\nRed(Erin, True) ::: Erin is red.\nNot(Round(Erin, True)) ::: Erin is not round.\nWhite(Erin, True) ::: Erin is white.\nYoung(Harry, True) ::: Harry is young.\nRules:\nRed($x, True) && Round($x, True) >>> Quiet($x, True) ::: All red, round people are quiet.\nYoung($x, True) >>> White($x, True) ::: If someone is young then they are white.\nRound($x, True) >>> Young($x, True) ::: Round people are young.\nRound($x, True) && Smart($x, True) >>> Not(Red($x, True)) ::: If someone is round and smart then they are not red.\nRed($x, True) && Not(White($x, True)) >>> Not(Green($x, True)) ::: If someone is red and not white then they are not green.\nQuiet($x, True) && Red($x, True) >>> Not(Green($x, True)) ::: If someone is red and not white then they are not green.\nQuery:\nNot(Smart(Anne, True)) ::: Anne is not smart.\n------\nProblem:\nAnne is white. Bob is round. Erin is green. Erin is red. Erin is not round. Erin is white. Harry is young. All red, round people are quiet. If someone is young then they are white. Round people are young. If someone is round and smart then they are not red. All white people are red. Quiet people are green. If someone is red and not white then they are not green.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Erin is not round.\n###\nPredicates:\nWhite($x, bool) ::: Is x white?\nRound($x, bool) ::: Is x round?\nRed($x, bool) ::: Is x red?\nSmart($x, bool) ::: Is x smart?\nQuiet($"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-368_Q14",
    "context": "The bald eagle eats the cat. The bald eagle eats the dog. The bald eagle is not green. The bald eagle is not kind. The bald eagle does not like the dog. The bald eagle sees the cat. The bald eagle does not see the dog. The cat is blue. The cat is round. The dog eats the bald eagle. The dog eats the cat. The dog is round. The dog likes the cat. The lion eats the bald eagle. The lion eats the cat. The lion does not see the cat. If the dog sees the cat then the dog likes the bald eagle. If something is round then it likes the lion. If the cat likes the bald eagle and the lion does not see the cat then the lion is kind. If something is kind then it is round. If something likes the lion then it likes the bald eagle. If something eats the lion then it likes the bald eagle.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bald eagle likes the bald eagle.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y, bool) ::: Does x eat y?\nLikes($x, $y, bool) ::: Does x like y?\nSees($x, $y, bool) ::: Does x see y?\nIs($x, $y, bool) ::: Is x y?\nKind($x, bool) ::: Is x kind?\nRound($x, bool) ::: Is x round?\nFacts:\nEats(BaldEagle, Cat, True) ::: The bald eagle eats the cat.\nEats(BaldEagle, Dog, True) ::: The bald eagle eats the dog.\nNot(Green, BaldEagle, True) ::: The bald eagle is not green.\nNot(Kind, BaldEagle, True) ::: The bald eagle is not kind.\nNot(Likes, BaldEagle, Dog, True) ::: The bald eagle does not like the dog.\nSees(BaldEagle, Cat, True) ::: The bald eagle sees the cat.\nNot(Sees, BaldEagle, Dog, True) ::: The bald eagle does not see the dog.\nIs(Blue, Cat, True) ::: The cat is blue.\nIs(Round, Cat, True) ::: The cat is round.\nEats(Dog, BaldEagle, True) ::: The dog eats the bald eagle.\nEats(Dog, Cat, True) ::: The dog eats the cat.\nIs(Round, Dog, True) ::: The dog is round.\nLikes(Dog, Cat, True) ::: The dog likes the cat.\nEats(Lion, BaldEagle, True) ::: The lion eats the bald eagle.\nEats(Lion, Cat, True) ::: The lion eats the cat.\nNot(Sees, Lion, Cat, True) ::: The lion does not see the cat.\nIf(Dog, Sees, Cat, Likes, BaldEagle, True) ::: If the dog sees the cat then the dog likes the bald eagle.\nIf(Round, Is, Lion, True) ::: If something is round then it likes the lion.\nIf(Cat, Likes, BaldEagle, Lion, DoesNotSee, Cat, Kind, True) ::: If the cat likes the bald eagle and the lion does not see the cat then the lion is kind.\nIf(Kind, Round, True) ::: If something is kind then it is round.\nIf(Likes, Lion, BaldEagle, True) ::: If something likes the lion then it likes the bald eagle."
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-924_Q11",
    "context": "Anne is red. Anne is white. Bob is furry. Bob is red. Fiona is big. Fiona is furry. Fiona is green. Gary is cold. Gary is furry. Gary is green. Green, furry people are nice. All green, nice people are big. Big, green people are furry. All furry people are nice. All big, green people are furry. Big, red people are cold. If someone is nice and red then they are green. Big, cold people are white. If someone is green and cold then they are big.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is white.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRed($x, bool) ::: Is x red?\nWhite($x, bool) ::: Is x white?\nFurry($x, bool) ::: Is x furry?\nBig($x, bool) ::: Is x big?\nNice($x, bool) ::: Is x nice?\nCold($x, bool) ::: Is x cold?\nFacts:\nRed(Anne, True) ::: Anne is red.\nWhite(Anne, True) ::: Anne is white.\nFurry(Bob, True) ::: Bob is furry.\nRed(Bob, True) ::: Bob is red.\nBig(Fiona, True) ::: Fiona is big.\nFurry(Fiona, True) ::: Fiona is furry.\nGreen(Fiona, True) ::: Fiona is green.\nCold(Gary, True) ::: Gary is cold.\nFurry(Gary, True) ::: Gary is furry.\nGreen(Gary, True) ::: Gary is green.\nRules:\nGreen($x, True) && Furry($x, True) >>> Nice($x, True) ::: Green, furry people are nice.\nGreen($x, True) && Nice($x, True) >>> Big($x, True) ::: All green, nice people are big.\nBig($x, True) && Green($x, True) >>> Furry($x, True) ::: Big, green people are furry.\nFurry($x, True) >>> Nice($x, True) ::: All furry people are nice.\nBig($x, True) && Green($x, True) >>> Furry($x, True) ::: All big, green people are furry.\nBig($x, True) && Red($x, True) >>> Cold($x, True) ::: Big, red people are cold.\nNice($x, True) && Red($x, True) >>> Green($x, True) ::: If someone is nice and red then they are green.\nCold($x, True) && Green($x, True) >>> Big($x, True) ::: If someone is green and cold then they are big.\nQuery:\nWhite(Bob, True) ::: Bob is white.\n------\nProblem:\nAnne is furry. Anne is green. Anne is red. Anne is white. Bob is furry. Bob is green. Bob is red. Bob is white. Fiona is furry. Fiona is green. Fiona is red. Fiona is white. Gary is furry. Gary is green. Gary is red. Gary is white. Harry is furry. Harry"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-422_Q6",
    "context": "Charlie is big. Charlie is green. Charlie is nice. Charlie is not quiet. Dave is big. Dave is quiet. Fiona is not rough. Gary is big. Gary is green. Gary is nice. Gary is rough. If someone is quiet and rough then they are nice. Big people are nice. If Charlie is kind and Charlie is nice then Charlie is not big. If someone is rough and nice then they are green. All green, rough people are red. If Dave is kind then Dave is rough. If someone is nice and quiet then they are kind. If Fiona is quiet and Fiona is rough then Fiona is big.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Dave is not kind.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nGreen($x, bool) ::: Is x green?\nNice($x, bool) ::: Is x nice?\nQuiet($x, bool) ::: Is x quiet?\nKind($x, bool) ::: Is x kind?\nRough($x, bool) ::: Is x rough?\nRed($x, bool) ::: Is x red?\nFacts:\nBig(Charlie, True) ::: Charlie is big.\nGreen(Charlie, True) ::: Charlie is green.\nNice(Charlie, True) ::: Charlie is nice.\nQuiet(Charlie, False) ::: Charlie is not quiet.\nBig(Dave, True) ::: Dave is big.\nQuiet(Dave, True) ::: Dave is quiet.\nRough(Fiona, False) ::: Fiona is not rough.\nBig(Gary, True) ::: Gary is big.\nGreen(Gary, True) ::: Gary is green.\nNice(Gary, True) ::: Gary is nice.\nRough(Gary, True) ::: Gary is rough.\nRules:\nBig($x, True) >>> Nice($x, True) ::: Big people are nice.\nQuiet($x, True) && Rough($x, True) >>> Nice($x, True) ::: If someone is quiet and rough then they are nice.\nKind($x, True) >>> Nice($x, True) ::: If someone is nice and quiet then they are kind.\nKind($x, True) && Nice($x, True) >>> Big($x, False) ::: If Charlie is kind and Charlie is nice then Charlie is not big.\nRough($x, True) && Nice($x, True) >>> Green($x, True) ::: If someone is rough and nice then they are green.\nRough($x, True) && Nice($x, True) >>> Red($x, True) ::: All green, rough people are red.\nKind($x, True) >>> Rough($x, True) ::: If Dave is kind then Dave is rough.\nQuiet($x, True) && Rough($x, True) >>> Big($x, True) ::: If Fiona is quiet and Fiona is rough then Fiona is big.\nQuery:\nKind(Dave, False) ::: Dave is not kind.\n------"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-889_Q15",
    "context": "The cat is red. The cat does not like the lion. The dog is nice. The dog is red. The dog is young. The lion likes the dog. The mouse is not round. The mouse likes the cat. The mouse likes the dog. The mouse needs the dog. The mouse visits the cat. The mouse visits the lion. If someone likes the lion then the lion likes the cat. All nice people are round. If someone likes the dog and the dog needs the lion then the lion is nice. If someone is round then they need the lion. If someone likes the lion and they need the mouse then the mouse is kind. If someone likes the dog and they are not red then they do not need the dog. If the dog is red then the dog likes the mouse. If the cat needs the dog and the cat does not need the lion then the dog does not visit the mouse.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cat does not need the lion.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRed($x, bool) ::: Is x red?\nLike($x, $y, bool) ::: Does x like y?\nNice($x, bool) ::: Is x nice?\nRound($x, bool) ::: Is x round?\nNeed($x, $y, bool) ::: Does x need y?\nVisit($x, $y, bool) ::: Does x visit y?\nKind($x, bool) ::: Is x kind?\nFacts:\nRed(Cat, True) ::: The cat is red.\nLike(Cat, Lion, False) ::: The cat does not like the lion.\nNice(Dog, True) ::: The dog is nice.\nRed(Dog, True) ::: The dog is red.\nYoung(Dog, True) ::: The dog is young.\nLike(Dog, Lion, True) ::: The lion likes the dog.\nNot(Round(Mouse, True)) ::: The mouse is not round.\nLike(Mouse, Cat, True) ::: The mouse likes the cat.\nLike(Mouse, Dog, True) ::: The mouse likes the dog.\nNeed(Mouse, Dog, True) ::: The mouse needs the dog.\nVisit(Mouse, Cat, True) ::: The mouse visits the cat.\nVisit(Mouse, Lion, True) ::: The mouse visits the lion.\nLike(Lion, Dog, True) >>> Like(Lion, Cat, True) ::: If someone likes the lion then the lion likes the cat.\nRound($x, True) >>> Need($x, Lion, True) ::: All nice people are round.\nLike(Dog, Lion) && Need(Dog, Lion) >>> Nice(Lion, True) ::: If someone likes the dog and the dog needs the lion then the lion is nice.\nNeed($x, Lion) >>> Round($x, True) ::: If someone needs the lion then they need the lion.\nLike(Lion, $x) && Need($x, Mouse) >>> Kind(Mouse, True) ::: If someone likes the lion and they need the mouse then the mouse is kind.\nLike(Dog, $x) && Not(Red($x, True)) >>> Not(Need(Dog, $x, True)) ::: If the dog is red then the dog likes the mouse.\nNeed(Cat, Dog) && Not(Need(Cat, Lion)) >>> Not"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-954_Q22",
    "context": "The lion needs the rabbit. The mouse is rough. The mouse is young. The mouse visits the lion. The rabbit needs the mouse. The rabbit needs the squirrel. The squirrel is not blue. If something is young then it needs the lion. If something is round then it needs the lion. If something needs the lion then it needs the rabbit. If something is rough and it visits the mouse then the mouse is red. If the rabbit visits the squirrel and the squirrel chases the lion then the squirrel needs the rabbit. If something is red then it is not blue. If something is young and it does not need the mouse then it visits the rabbit. If something needs the rabbit then it visits the mouse. If the lion visits the mouse and the lion is blue then the mouse chases the squirrel.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The squirrel chases the squirrel.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNeeds($x, $y, bool) ::: Does x need y?\nVisits($x, $y, bool) ::: Does x visit y?\nChases($x, $y, bool) ::: Does x chase y?\nIsBlue($x, bool) ::: Is x blue?\nIsRed($x, bool) ::: Is x red?\nIsYoung($x, bool) ::: Is x young?\nIsRound($x, bool) ::: Is x round?\nFacts:\nNeeds(Lion, Rabbit, True) ::: The lion needs the rabbit.\nIsRough(Mouse, True) ::: The mouse is rough.\nIsYoung(Mouse, True) ::: The mouse is young.\nVisits(Mouse, Lion, True) ::: The mouse visits the lion.\nNeeds(Rabbit, Mouse, True) ::: The rabbit needs the mouse.\nNeeds(Rabbit, Squirrel, True) ::: The rabbit needs the squirrel.\nIsNotBlue(Squirrel, True) ::: The squirrel is not blue.\nRule:\nIsYoung($x, True) >>> Needs($x, Lion, True) ::: If something is young then it needs the lion.\nRule:\nIsRound($x, True) >>> Needs($x, Lion, True) ::: If something is round then it needs the lion.\nRule:\nNeeds($x, Lion, True) >>> Needs($x, Rabbit, True) ::: If something needs the lion then it needs the rabbit.\nRule:\nIsRough($x, True) && Visits($x, Mouse, True) >>> IsRed(Mouse, True) ::: If something is rough and it visits the mouse then the mouse is red.\nRule:\nNeeds(Rabbit, Squirrel, True) && Visits(Squirrel, Lion, True) && Chases(Squirrel, Lion, True) >>> Needs(Squirrel, Rabbit, True) ::: If the rabbit visits the squirrel and the squirrel chases the lion then the squirrel needs the rabbit.\nRule:\nIsRed($x, True) >>> IsNotBlue($x, True) ::: If something is red then it is not blue.\nRule:\nIsYoung($x, True) && Needs($x, Mouse, False)"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-254_Q14",
    "context": "The bald eagle visits the cow. The cow chases the rabbit. The cow does not visit the dog. The dog is not big. The dog is young. The rabbit sees the dog. The rabbit visits the cow. If someone sees the dog then they visit the dog. If someone visits the bald eagle and they are round then the bald eagle chases the cow. If someone is round then they see the rabbit. If someone sees the rabbit then the rabbit is round. If someone chases the dog then the dog visits the bald eagle. If the dog is young then the dog does not visit the bald eagle. If someone visits the dog then the dog is round. If the dog is nice then the dog sees the cow. If the rabbit sees the bald eagle and the bald eagle chases the cow then the cow sees the bald eagle.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bald eagle visits the dog.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nVisits($x, $y, bool) ::: Does x visit y?\nChases($x, $y, bool) ::: Does x chase y?\nSees($x, $y, bool) ::: Does x see y?\nIs($x, $y, bool) ::: Is x y?\nRound($x, bool) ::: Is x round?\nBig($x, bool) ::: Is x big?\nYoung($x, bool) ::: Is x young?\nNice($x, bool) ::: Is x nice?\nFacts:\nVisits(BaldEagle, Cow, True) ::: The bald eagle visits the cow.\nChases(Cow, Rabbit, True) ::: The cow chases the rabbit.\nNot(Visits(Cow, Dog, True)) ::: The cow does not visit the dog.\nNot(Big(Dog, True)) ::: The dog is not big.\nYoung(Dog, True) ::: The dog is young.\nSees(Dog, Rabbit, True) ::: The dog sees the rabbit.\nVisits(Dog, Cow, True) ::: The dog visits the cow.\nIf(Sees(Dog, BaldEagle), Visits(Dog, BaldEagle, True)) ::: If someone sees the dog then they visit the dog.\nIf(Visits(BaldEagle, Cow, True), Round(BaldEagle, True), Chases(BaldEagle, Cow, True)) ::: If someone visits the bald eagle and they are round then the bald eagle chases the cow.\nRound(Rabbit, True) ::: If someone is round then they see the rabbit.\nIf(Sees(Rabbit, BaldEagle), Round(Rabbit, True)) ::: If someone sees the rabbit then the rabbit is round.\nIf(Chases(Dog, Rabbit, True), Visits(Rabbit, Cow, True)) ::: If the dog chases the rabbit then the rabbit visits the cow.\nIf(Young(Dog, True), Not(Visits(Dog, BaldEagle, True))) ::: If the dog is young then the dog does not visit the bald eagle.\nIf(Visits(Dog, Cow, True), Round(Dog, True)) ::: If someone visits the dog then the dog is"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-1129_Q15",
    "context": "Anne is big. Anne is quiet. Anne is not smart. Bob is blue. Bob is quiet. Dave is blue. Fiona is big. Fiona is cold. Fiona is quiet. Fiona is smart. Smart people are big. Blue, red people are big. If someone is cold and not blue then they are red. All cold people are smart. Blue people are cold. If Bob is big and Bob is cold then Bob is not red. If someone is smart and not red then they are white.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Dave is not white.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nQuiet($x, bool) ::: Is x quiet?\nSmart($x, bool) ::: Is x smart?\nBlue($x, bool) ::: Is x blue?\nRed($x, bool) ::: Is x red?\nCold($x, bool) ::: Is x cold?\nWhite($x, bool) ::: Is x white?\nFacts:\nBig(Anne, True) ::: Anne is big.\nQuiet(Anne, True) ::: Anne is quiet.\nNot(Smart(Anne, True)) ::: Anne is not smart.\nBlue(Bob, True) ::: Bob is blue.\nQuiet(Bob, True) ::: Bob is quiet.\nBlue(Dave, True) ::: Dave is blue.\nBig(Fiona, True) ::: Fiona is big.\nCold(Fiona, True) ::: Fiona is cold.\nQuiet(Fiona, True) ::: Fiona is quiet.\nSmart(Fiona, True) ::: Fiona is smart.\nRules:\nSmart($x, True) >>> Big($x, True) ::: Smart people are big.\nBlue($x, True) && Red($x, True) >>> Big($x, True) ::: Blue, red people are big.\nNot(Blue($x, True)) && Cold($x, True) >>> Red($x, True) ::: If someone is cold and not blue then they are red.\nAll(Cold($x, True), Smart($x, True)) ::: All cold people are smart.\nBlue($x, True) >>> Cold($x, True) ::: Blue people are cold.\nIf(Big($x, True), Cold($x, True), Not(Red($x, True))) ::: If Bob is big and Bob is cold then Bob is not red.\nNot(Smart($x, True)) && Not(Red($x, True)) >>> White($x, True) ::: If someone is smart and not red then they are white.\nQuery:\nNot(White(Dave, True)) ::: Dave is not white.\n------\nProblem:\nAnne is big. Anne is quiet. Anne is not smart. Bob is blue. Bob is quiet. Dave is blue. Fiona is big. Fiona is cold. Fiona is quiet. Fiona is smart. Smart people are"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-722_Q7",
    "context": "The bald eagle eats the lion. The bald eagle eats the tiger. The bald eagle is big. The bald eagle is round. The bald eagle likes the lion. The cow eats the lion. The cow likes the bald eagle. The cow sees the tiger. The lion eats the cow. The tiger eats the lion. The tiger is red. If someone eats the cow then the cow sees the bald eagle. If someone likes the bald eagle and they eat the bald eagle then they like the cow. If someone likes the lion and the lion is cold then they see the bald eagle. All young people are cold. If someone likes the bald eagle and they see the bald eagle then the bald eagle is red. If someone is red then they eat the bald eagle. If someone eats the lion then they like the bald eagle. If someone likes the cow then they like the tiger. If the lion sees the cow then the cow eats the tiger.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The tiger likes the tiger.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y, bool) ::: Does x eat y?\nLikes($x, $y, bool) ::: Does x like y?\nSees($x, $y, bool) ::: Does x see y?\nBig($x, bool) ::: Is x big?\nRound($x, bool) ::: Is x round?\nCold($x, bool) ::: Is x cold?\nRed($x, bool) ::: Is x red?\nFacts:\nEats(BaldEagle, Lion, True) ::: The bald eagle eats the lion.\nEats(BaldEagle, Tiger, True) ::: The bald eagle eats the tiger.\nBig(BaldEagle, True) ::: The bald eagle is big.\nRound(BaldEagle, True) ::: The bald eagle is round.\nLikes(BaldEagle, Lion, True) ::: The bald eagle likes the lion.\nEats(Cow, Lion, True) ::: The cow eats the lion.\nLikes(Cow, BaldEagle, True) ::: The cow likes the bald eagle.\nSees(Cow, Tiger, True) ::: The cow sees the tiger.\nEats(Lion, Cow, True) ::: The lion eats the cow.\nEats(Tiger, Lion, True) ::: The tiger eats the lion.\nRed(Tiger, True) ::: The tiger is red.\nRules:\nEats($x, $y, True) >>> Sees($x, $y, True) ::: If someone eats the cow then the cow sees the bald eagle.\nLikes($x, BaldEagle, True) && Eats($x, BaldEagle, True) >>> Likes($x, Cow, True) ::: If someone likes the bald eagle and they eat the bald eagle then they like the cow.\nLikes($x, Lion, True) && Cold($x, True) >>> Sees($x, BaldEagle, True) ::: If someone likes the lion and the lion is cold then they see the bald eagle.\nYoung($x, True) >>> Cold($x, True) ::: All young people are cold.\nLikes($x, BaldEagle, True) && Sees($x, BaldEagle, True) >>> Red($x, True"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1346_Q8",
    "context": "Anne is furry. Anne is quiet. Anne is red. Charlie is quiet. Dave is furry. Fiona is furry. Fiona is red. All big people are rough. If Fiona is big then Fiona is red. All young, red people are quiet. Red people are furry. All rough people are young. If someone is big then they are quiet. Quiet people are big. If Charlie is furry and Charlie is big then Charlie is quiet. Young people are red.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Anne is not young.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nFurry($x, bool) ::: Is x furry?\nQuiet($x, bool) ::: Is x quiet?\nRed($x, bool) ::: Is x red?\nBig($x, bool) ::: Is x big?\nRough($x, bool) ::: Is x rough?\nYoung($x, bool) ::: Is x young?\nFacts:\nFurry(Anne, True) ::: Anne is furry.\nQuiet(Anne, True) ::: Anne is quiet.\nRed(Anne, True) ::: Anne is red.\nQuiet(Charlie, True) ::: Charlie is quiet.\nFurry(Dave, True) ::: Dave is furry.\nFurry(Fiona, True) ::: Fiona is furry.\nRed(Fiona, True) ::: Fiona is red.\nBig($x, True) >>> Rough($x, True) ::: All big people are rough.\nFurry(Fiona, True) >>> Red($x, True) ::: If Fiona is big then Fiona is red.\nYoung($x, True) >>> Red($x, True) ::: All young, red people are quiet.\nRed($x, True) >>> Furry($x, True) ::: Red people are furry.\nRough($x, True) >>> Young($x, True) ::: All rough people are young.\nBig($x, True) >>> Quiet($x, True) ::: If someone is big then they are quiet.\nQuiet($x, True) >>> Big($x, True) ::: Quiet people are big.\nFurry($x, True) && Big($x, True) >>> Quiet($x, True) ::: If Charlie is furry and Charlie is big then Charlie is quiet.\nYoung($x, True) >>> Red($x, True) ::: Young people are red.\nQuery:\nNot(Young(Anne, True)) ::: Anne is not young.\n------\nProblem:\nAnne is furry. Anne is quiet. Anne is red. Charlie is quiet. Dave is furry. Fiona is furry. Fiona is red. All big people are rough. If Fiona is big then Fiona is red. All young, red people are quiet. Red people are furry. All rough people are young. If someone is big then they are quiet."
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-373_Q19",
    "context": "The bald eagle does not chase the cow. The bald eagle eats the tiger. The bald eagle is kind. The cat chases the cow. The cat eats the bald eagle. The cow chases the bald eagle. The cow chases the cat. The cow eats the bald eagle. The cow eats the cat. The cow is not kind. The cow is red. The tiger is not big. The tiger is rough. The tiger does not visit the cat. If someone eats the cat and they do not eat the tiger then the tiger does not chase the cat. If someone is kind and they visit the cow then they do not visit the tiger. If someone chases the cat then they visit the tiger. If someone visits the tiger then they visit the bald eagle. If the tiger eats the bald eagle then the tiger eats the cow. If someone visits the tiger and they visit the bald eagle then the bald eagle chases the cat.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cat does not visit the cat.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChase($x, $y, bool) ::: Does x chase y?\nEat($x, $y, bool) ::: Does x eat y?\nKind($x, bool) ::: Is x kind?\nVisit($x, $y, bool) ::: Does x visit y?\nBig($x, bool) ::: Is x big?\nRough($x, bool) ::: Is x rough?\nRed($x, bool) ::: Is x red?\nFacts:\nChase(BaldEagle, Cow, False) ::: The bald eagle does not chase the cow.\nEat(BaldEagle, Tiger, True) ::: The bald eagle eats the tiger.\nKind(BaldEagle, True) ::: The bald eagle is kind.\nChase(Cat, Cow, True) ::: The cat chases the cow.\nEat(Cat, BaldEagle, True) ::: The cat eats the bald eagle.\nChase(Cow, BaldEagle, True) ::: The cow chases the bald eagle.\nChase(Cow, Cat, True) ::: The cow chases the cat.\nEat(Cow, BaldEagle, True) ::: The cow eats the bald eagle.\nEat(Cow, Cat, True) ::: The cow eats the cat.\nKind(Cow, False) ::: The cow is not kind.\nRed(Cow, True) ::: The cow is red.\nBig(Tiger, False) ::: The tiger is not big.\nRough(Tiger, True) ::: The tiger is rough.\nVisit(Tiger, Cat, False) ::: The tiger does not visit the cat.\nRules:\nEat($x, $y, True) && Eat($x, $z, True) >>> Eat($y, $z, True) ::: If someone eats the cat and they do not eat the tiger then the tiger does not chase the cat.\nKind($x, True) && Visit($x, $y, True) >>> Visit($x, $z, True) ::: If someone is kind and they visit the cow then they do not visit the tiger.\nChase($x, $y, True) >>> Visit($x, $z, True) ::: If someone chases the cat then they visit the tiger."
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-708_Q1",
    "context": "Charlie is furry. Erin is furry. Erin is young. Gary is furry. Gary is nice. Gary is red. Harry is red. Nice people are cold. All kind people are not red. If Charlie is rough and Charlie is furry then Charlie is red. All cold people are furry. If Erin is cold then Erin is kind. If someone is young then they are rough. If someone is rough then they are nice.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is nice.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nFurry($x, bool) ::: Is x furry?\nYoung($x, bool) ::: Is x young?\nNice($x, bool) ::: Is x nice?\nKind($x, bool) ::: Is x kind?\nRed($x, bool) ::: Is x red?\nCold($x, bool) ::: Is x cold?\nRough($x, bool) ::: Is x rough?\nFacts:\nFurry(Charlie, True) ::: Charlie is furry.\nFurry(Erin, True) ::: Erin is furry.\nYoung(Erin, True) ::: Erin is young.\nFurry(Gary, True) ::: Gary is furry.\nNice(Gary, True) ::: Gary is nice.\nRed(Gary, True) ::: Gary is red.\nRed(Harry, True) ::: Harry is red.\nRules:\nNice($x, True) >>> Cold($x, True) ::: Nice people are cold.\nKind($x, True) >>> Red($x, False) ::: All kind people are not red.\nFurry($x, True) && Furry($x, True) >>> Red($x, True) ::: If Charlie is rough and Charlie is furry then Charlie is red.\nFurry($x, True) >>> Cold($x, True) ::: All cold people are furry.\nYoung($x, True) >>> Rough($x, True) ::: If Erin is cold then Erin is kind.\nYoung($x, True) >>> Rough($x, True) ::: If someone is young then they are rough.\nRough($x, True) >>> Nice($x, True) ::: If someone is rough then they are nice.\nQuery:\nNice(Gary, True) ::: Gary is nice.\n------\nProblem:\nCharlie is furry. Erin is furry. Erin is young. Gary is furry. Gary is nice. Gary is red. Harry is red. Nice people are cold. All kind people are not red. If Charlie is rough and Charlie is furry then Charlie is red. All cold people are furry. If Erin is cold then Erin is kind. If someone is young then they are rough. If someone is rough then they are nice.\nQuestion:\nBased on the above information, is the"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-884_Q11",
    "context": "Anne is not furry. Anne is white. Bob is blue. Bob is cold. Bob is young. Erin is blue. Harry is not young. If someone is rough then they are cold. If someone is rough then they are white. If Harry is red then Harry is cold. All white people are red. Red, rough people are young. If someone is blue then they are rough. If Anne is not red then Anne is young. Cold, young people are not furry.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Erin is not furry.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nFurry($x, bool) ::: Is x furry?\nWhite($x, bool) ::: Is x white?\nBlue($x, bool) ::: Is x blue?\nCold($x, bool) ::: Is x cold?\nRough($x, bool) ::: Is x rough?\nRed($x, bool) ::: Is x red?\nYoung($x, bool) ::: Is x young?\nFacts:\nNotFurry(Anne, True) ::: Anne is not furry.\nWhite(Anne, True) ::: Anne is white.\nBlue(Bob, True) ::: Bob is blue.\nCold(Bob, True) ::: Bob is cold.\nYoung(Bob, True) ::: Bob is young.\nBlue(Erin, True) ::: Erin is blue.\nNotYoung(Harry, True) ::: Harry is not young.\nRules:\nRough($x, True) >>> Cold($x, True) ::: If someone is rough then they are cold.\nRough($x, True) >>> White($x, True) ::: If someone is rough then they are white.\nIfHarryRed($x, True) >>> Cold($x, True) ::: If Harry is red then Harry is cold.\nRed($x, True) >>> White($x, True) ::: All white people are red.\nRed($x, True) && Rough($x, True) >>> Young($x, True) ::: Red, rough people are young.\nBlue($x, True) >>> Rough($x, True) ::: If someone is blue then they are rough.\nNotRed($x, True) >>> Young($x, True) ::: If Anne is not red then Anne is young.\nCold($x, True) && Young($x, True) >>> NotFurry($x, True) ::: Cold, young people are not furry.\nQuery:\nNotFurry(Erin, True) ::: Erin is not furry.\n------\nProblem:\nAnne is not furry. Anne is white. Bob is blue. Bob is cold. Bob is young. Erin is blue. Harry is not young. If someone is rough then they are cold. If someone is rough then they are white. If Harry is red then Harry is cold. All white people are red. Red, rough people are young. If someone is blue then"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-1026_Q6",
    "context": "The bear is green. The bear visits the cow. The cat is green. The cat is nice. The cow likes the cat. The cow visits the lion. The lion visits the cat. If someone visits the cow then the cow eats the lion. If someone eats the bear then the bear visits the cat. If someone is young then they eat the bear. If someone is blue then they eat the bear. If someone likes the lion then they are young. If the lion is nice then the lion eats the bear. If someone eats the lion then they like the lion. If someone is green then they eat the cat.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cow does not like the lion.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen($x, bool) ::: Is x green?\nVisits($x, $y, bool) ::: Does x visit y?\nLikes($x, $y, bool) ::: Does x like y?\nEats($x, $y, bool) ::: Does x eat y?\nYoung($x, bool) ::: Is x young?\nBlue($x, bool) ::: Is x blue?\nNice($x, bool) ::: Is x nice?\nFacts:\nGreen(Bear, True) ::: The bear is green.\nVisits(Bear, Cow, True) ::: The bear visits the cow.\nGreen(Cat, True) ::: The cat is green.\nNice(Cat, True) ::: The cat is nice.\nLikes(Cow, Cat, True) ::: The cow likes the cat.\nVisits(Cow, Lion, True) ::: The cow visits the lion.\nVisits(Lion, Cat, True) ::: The lion visits the cat.\nYoung(Cow, True) >>> CowEatsLion($x, True) ::: If someone visits the cow then the cow eats the lion.\nEats(Bear, Cat, True) >>> BearVisitsCat($x, True) ::: If someone eats the bear then the bear visits the cat.\nYoung($x, True) >>> Eats($x, Bear, True) ::: If someone is young then they eat the bear.\nBlue($x, True) >>> Eats($x, Bear, True) ::: If someone is blue then they eat the bear.\nLikes($x, Lion, True) >>> Young($x, True) ::: If someone likes the lion then they are young.\nNice(Lion, True) >>> LionEatsBear($x, True) ::: If the lion is nice then the lion eats the bear.\nEats(Lion, Bear, True) >>> Likes($x, Lion, True) ::: If someone eats the lion then they like the lion.\nEats($x, Cat, True) >>> Green($x, True) ::: If someone eats the cat then they are green.\nQuery:\nLikes(Cow, Lion, False) ::: The cow does not like the lion.\n------"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-313_Q5",
    "context": "The bear likes the cow. The cat is blue. The cat is red. The cat is young. The cat needs the cow. The cat needs the rabbit. The cat sees the bear. The cow is big. The cow likes the bear. The cow likes the cat. The cow likes the rabbit. The cow needs the cat. The cow needs the rabbit. The rabbit is blue. The rabbit needs the cow. The rabbit sees the cat. If the cow sees the bear and the cow is red then the bear is blue. If something likes the cow then it likes the cat. If something sees the cow and the cow needs the cat then it is blue. If something sees the cow then the cow sees the bear. If something needs the cow and it sees the bear then it is round. If something needs the bear then the bear is young. If something sees the bear then it sees the cow. If something likes the cow then it sees the bear. If something is blue and it needs the cat then it sees the cat.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cow sees the bear.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nLikes($x, $y, bool) ::: Does x like y?\nNeeds($x, $y, bool) ::: Does x need y?\nSees($x, $y, bool) ::: Does x see y?\nIs($x, $y, bool) ::: Is x y?\nRound($x, bool) ::: Is x round?\nBig($x, bool) ::: Is x big?\nBlue($x, bool) ::: Is x blue?\nYoung($x, bool) ::: Is x young?\nFacts:\nLikes(Bear, Cow, True) ::: The bear likes the cow.\nIsBlue(Cat, True) ::: The cat is blue.\nIsRed(Cat, True) ::: The cat is red.\nIsYoung(Cat, True) ::: The cat is young.\nNeeds(Cat, Cow, True) ::: The cat needs the cow.\nNeeds(Cat, Rabbit, True) ::: The cat needs the rabbit.\nSees(Cat, Bear, True) ::: The cat sees the bear.\nIsBig(Cow, True) ::: The cow is big.\nLikes(Cow, Bear, True) ::: The cow likes the bear.\nLikes(Cow, Cat, True) ::: The cow likes the cat.\nLikes(Cow, Rabbit, True) ::: The cow likes the rabbit.\nNeeds(Cow, Cat, True) ::: The cow needs the cat.\nNeeds(Cow, Rabbit, True) ::: The cow needs the rabbit.\nIsBlue(Rabbit, True) ::: The rabbit is blue.\nNeeds(Rabbit, Cow, True) ::: The rabbit needs the cow.\nSees(Rabbit, Cat, True) ::: The rabbit sees the cat.\nRules:\nIf the cow sees the bear and the cow is red then the bear is blue ::: If something likes the cow then it likes the cat.\nIf something sees the cow and the cow needs the cat then it is blue ::: If something sees the cow then the cow sees the bear.\nIf something needs the cow and it sees the bear then it is round ::: If something needs the bear then the bear is young.\nIf something"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1321_Q4",
    "context": "Bob is young. Dave is blue. Erin is blue. Erin is kind. Erin is white. Erin is young. Fiona is blue. Fiona is kind. Fiona is quiet. Fiona is white. If someone is kind then they are white. Young people are quiet. If someone is kind and white then they are blue. All quiet, kind people are white. If someone is quiet then they are kind. If someone is white then they are young. All blue, kind people are green.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Fiona is not green.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nYoung($x, bool) ::: Is x young?\nBlue($x, bool) ::: Is x blue?\nKind($x, bool) ::: Is x kind?\nWhite($x, bool) ::: Is x white?\nQuiet($x, bool) ::: Is x quiet?\nGreen($x, bool) ::: Is x green?\nFacts:\nYoung(Bob, True) ::: Bob is young.\nBlue(Dave, True) ::: Dave is blue.\nBlue(Erin, True) ::: Erin is blue.\nKind(Erin, True) ::: Erin is kind.\nWhite(Erin, True) ::: Erin is white.\nYoung(Erin, True) ::: Erin is young.\nBlue(Fiona, True) ::: Fiona is blue.\nKind(Fiona, True) ::: Fiona is kind.\nQuiet(Fiona, True) ::: Fiona is quiet.\nWhite(Fiona, True) ::: Fiona is white.\nRules:\nYoung($x, True) >>> Quiet($x, True) ::: Young people are quiet.\nKind($x, True) >>> White($x, True) ::: If someone is kind then they are white.\nQuiet($x, True) >>> Kind($x, True) ::: If someone is quiet then they are kind.\nWhite($x, True) >>> Young($x, True) ::: If someone is white then they are young.\nKind($x, True) && White($x, True) >>> Blue($x, True) ::: If someone is kind and white then they are blue.\nQuiet($x, True) && Kind($x, True) >>> White($x, True) ::: All quiet, kind people are white.\nBlue($x, True) && Kind($x, True) >>> Green($x, True) ::: All blue, kind people are green.\nQuery:\nNot(Green(Fiona, True)) ::: Fiona is not green.\n------\nProblem:\nBob is blue. Bob is kind. Bob is quiet. Bob is white. Dave is blue. Dave is kind. Dave is quiet. Dave is white. Erin is blue. Erin is kind. Erin is quiet. Erin is white. Fiona"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-638_Q3",
    "context": "The bear chases the cow. The bear is cold. The bear is young. The cat eats the cow. The cat eats the squirrel. The cow is red. The squirrel eats the cow. If someone eats the squirrel and the squirrel is rough then the squirrel eats the cow. If someone eats the squirrel then they chase the squirrel. If someone chases the squirrel then they chase the bear. If someone visits the bear and they eat the bear then they are cold. If someone eats the cat and the cat chases the cow then the cat visits the cow. If someone chases the bear then the bear eats the squirrel. If someone chases the bear and the bear chases the squirrel then they chase the cat. If the cat is young and the cat is rough then the cat is red. If someone eats the cow then they are big.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cat is big.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nEats($x, $y, bool) ::: Does x eat y?\nVisits($x, $y, bool) ::: Does x visit y?\nYoung($x, bool) ::: Is x young?\nCold($x, bool) ::: Is x cold?\nBig($x, bool) ::: Is x big?\nRed($x, bool) ::: Is x red?\nRough($x, bool) ::: Is x rough?\nFacts:\nChases(Bear, Cow, True) ::: The bear chases the cow.\nCold(Bear, True) ::: The bear is cold.\nYoung(Bear, True) ::: The bear is young.\nEats(Cat, Cow, True) ::: The cat eats the cow.\nEats(Cat, Squirrel, True) ::: The cat eats the squirrel.\nRed(Cow, True) ::: The cow is red.\nEats(Squirrel, Cow, True) ::: The squirrel eats the cow.\nRules:\nEats($x, $y, True) && Rough($x, True) >>> Eats($x, $y, True) ::: If someone eats the squirrel and the squirrel is rough then the squirrel eats the cow.\nEats($x, $y, True) >>> Chases($x, $y, True) ::: If someone eats the squirrel then they chase the squirrel.\nChases($x, $y, True) >>> Chases($x, $z, True) ::: If someone chases the squirrel then they chase the bear.\nVisits($x, $y, True) && Eats($x, $y, True) >>> Cold($x, True) ::: If someone eats the bear and they eat the bear then they are cold.\nEats($x, $y, True) && Chases($x, $y, True) >>> Eats($x, $y, True) ::: If someone eats the cow then they are big.\nEats($x, $y, True) && Chases($x, $y, True) >>> Chases($x,"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-908_Q4",
    "context": "The bear chases the squirrel. The bear is red. The bear likes the dog. The dog chases the squirrel. The dog is red. The dog is not rough. The dog is round. The dog is young. The dog likes the bear. The squirrel visits the tiger. The tiger chases the squirrel. If someone is young then they do not chase the bear. If someone chases the tiger and the tiger chases the bear then the bear is not red. If someone visits the dog and they chase the squirrel then the squirrel is red. If someone likes the dog then they are nice. If someone visits the squirrel then the squirrel likes the tiger. If someone chases the bear and the bear is red then the bear likes the tiger. If someone likes the tiger then the tiger visits the dog. If someone is nice then they visit the squirrel. If the squirrel is nice then the squirrel does not chase the tiger.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The dog chases the bear.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nRed($x, bool) ::: Is x red?\nLikes($x, $y, bool) ::: Does x like y?\nVisits($x, $y, bool) ::: Does x visit y?\nYoung($x, bool) ::: Is x young?\nRound($x, bool) ::: Is x round?\nNice($x, bool) ::: Is x nice?\nFacts:\nChases(Bear, Squirrel, True) ::: The bear chases the squirrel.\nRed(Bear, True) ::: The bear is red.\nLikes(Bear, Dog, True) ::: The bear likes the dog.\nChases(Dog, Squirrel, True) ::: The dog chases the squirrel.\nRed(Dog, True) ::: The dog is red.\nNot(Round(Dog, True)) ::: The dog is not round.\nRound(Dog, True) ::: The dog is round.\nYoung(Dog, True) ::: The dog is young.\nLikes(Dog, Bear, True) ::: The dog likes the bear.\nVisits(Squirrel, Tiger, True) ::: The squirrel visits the tiger.\nChases(Tiger, Squirrel, True) ::: The tiger chases the squirrel.\nRules:\nYoung($x, True) >>> Not(Chases($x, Bear, True)) ::: If someone is young then they do not chase the bear.\nChases($x, Tiger, True) && Chases(Tiger, Bear, True) >>> Not(Red($x, True)) ::: If someone chases the tiger and the tiger chases the bear then the bear is not red.\nVisits($x, Dog) && Chases($x, Squirrel, True) >>> Red($x, True) ::: If someone visits the dog and they chase the squirrel then the squirrel is red.\nLikes($x, Dog) >>> Nice($x, True) ::: If someone likes the dog then they are nice.\nVisits($x, Squirrel) >>> Likes($x, Tiger, True) :::"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1298_Q7",
    "context": "Anne is green. Anne is nice. Anne is red. Anne is smart. Anne is white. Bob is green. Bob is nice. Bob is round. Bob is white. Dave is round. Gary is green. Gary is nice. Gary is red. Gary is white. Green, red things are smart. Round things are cold. Cold, smart things are round. All smart things are cold. Red, white things are nice. All cold, round things are green. White, green things are red. All green things are smart. All smart things are white.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is round.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen($x, bool) ::: Is x green?\nRed($x, bool) ::: Is x red?\nWhite($x, bool) ::: Is x white?\nNice($x, bool) ::: Is x nice?\nSmart($x, bool) ::: Is x smart?\nRound($x, bool) ::: Is x round?\nCold($x, bool) ::: Is x cold?\nFacts:\nGreen(Anne, True) ::: Anne is green.\nNice(Anne, True) ::: Anne is nice.\nRed(Anne, True) ::: Anne is red.\nSmart(Anne, True) ::: Anne is smart.\nWhite(Anne, True) ::: Anne is white.\nGreen(Bob, True) ::: Bob is green.\nNice(Bob, True) ::: Bob is nice.\nRound(Bob, True) ::: Bob is round.\nWhite(Bob, True) ::: Bob is white.\nRound(Dave, True) ::: Dave is round.\nGreen(Gary, True) ::: Gary is green.\nNice(Gary, True) ::: Gary is nice.\nRed(Gary, True) ::: Gary is red.\nWhite(Gary, True) ::: Gary is white.\nRules:\nGreen($x, True) && Red($x, True) >>> Smart($x, True) ::: Green, red things are smart.\nRound($x, True) >>> Cold($x, True) ::: Round things are cold.\nCold($x, True) && Smart($x, True) >>> Round($x, True) ::: Cold, smart things are round.\nSmart($x, True) >>> Cold($x, True) ::: All smart things are cold.\nRed($x, True) && White($x, True) >>> Nice($x, True) ::: Red, white things are nice.\nCold($x, True) && Round($x, True) >>> Green($x, True) ::: All cold, round things are green.\nWhite($x, True) && Green($x, True) >>> Red($x, True) ::: White, green things are red.\nGreen($x, True) >>> Smart($x, True) ::: All green things"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-545_Q20",
    "context": "The bear sees the squirrel. The bear visits the squirrel. The dog is blue. The dog needs the tiger. The dog sees the squirrel. The squirrel is big. The squirrel needs the dog. The squirrel visits the tiger. The tiger sees the squirrel. The tiger visits the dog. If the squirrel needs the tiger then the tiger is cold. If the dog sees the squirrel and the dog sees the bear then the squirrel is blue. If someone sees the tiger then the tiger sees the dog. If someone is young then they see the bear. If the squirrel needs the dog and the dog sees the squirrel then the dog needs the squirrel. Blue people are young. If someone visits the tiger then they are cold.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The squirrel sees the tiger.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nSees($x, $y, bool) ::: Does x see y?\nVisits($x, $y, bool) ::: Does x visit y?\nNeeds($x, $y, bool) ::: Does x need y?\nIsBlue($x, bool) ::: Is x blue?\nIsBig($x, bool) ::: Is x big?\nIsCold($x, bool) ::: Is x cold?\nIsYoung($x, bool) ::: Is x young?\nFacts:\nSees(Bear, Squirrel, True) ::: The bear sees the squirrel.\nVisits(Bear, Squirrel, True) ::: The bear visits the squirrel.\nIsBlue(Dog, True) ::: The dog is blue.\nNeeds(Dog, Tiger, True) ::: The dog needs the tiger.\nSees(Dog, Squirrel, True) ::: The dog sees the squirrel.\nIsBig(Squirrel, True) ::: The squirrel is big.\nNeeds(Squirrel, Dog, True) ::: The squirrel needs the dog.\nVisits(Squirrel, Tiger, True) ::: The squirrel visits the tiger.\nSees(Tiger, Squirrel, True) ::: The tiger sees the squirrel.\nVisits(Tiger, Dog, True) ::: The tiger visits the dog.\nRules:\nIf the squirrel needs the tiger then the tiger is cold ::: If the squirrel needs the tiger then the tiger is cold.\nIf the dog sees the squirrel and the dog sees the bear then the squirrel is blue ::: If the dog sees the squirrel and the dog sees the bear then the squirrel is blue.\nIf someone sees the tiger then the tiger sees the dog ::: If someone sees the tiger then the tiger sees the dog.\nIf someone is young then they see the bear ::: If someone is young then they see the bear.\nIf the squirrel needs the dog and the dog sees the squirrel then the dog needs the squirrel ::: If the squirrel needs the dog and the dog sees the squirrel then the dog needs the squirrel"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-878_Q8",
    "context": "Charlie is red. Charlie is white. Fiona is green. Gary is red. Gary is white. Harry is kind. Harry is not quiet. If Gary is quiet and Gary is red then Gary is cold. If something is quiet and not white then it is nice. If something is green and kind then it is nice. If something is kind and not red then it is green. Red, kind things are green. If something is red then it is quiet. If Charlie is nice then Charlie is cold. Cold, quiet things are kind.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is not kind.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRed($x, bool) ::: Is x red?\nWhite($x, bool) ::: Is x white?\nGreen($x, bool) ::: Is x green?\nKind($x, bool) ::: Is x kind?\nQuiet($x, bool) ::: Is x quiet?\nNice($x, bool) ::: Is x nice?\nCold($x, bool) ::: Is x cold?\nFacts:\nRed(Charlie, True) ::: Charlie is red.\nWhite(Charlie, True) ::: Charlie is white.\nGreen(Fiona, True) ::: Fiona is green.\nRed(Gary, True) ::: Gary is red.\nWhite(Gary, True) ::: Gary is white.\nKind(Harry, True) ::: Harry is kind.\nQuiet(Harry, False) ::: Harry is not quiet.\nQuiet(Gary, True) && Red(Gary, True) >>> Gary is cold ::: If Gary is quiet and Gary is red then Gary is cold.\nQuiet($x, True) && Not(White($x, True)) >>> Nice($x, True) ::: If something is quiet and not white then it is nice.\nGreen($x, True) && Kind($x, True) >>> Nice($x, True) ::: If something is green and kind then it is nice.\nKind($x, True) && Not(Red($x, True)) >>> Green($x, True) ::: If something is kind and not red then it is green.\nRed($x, True) && Kind($x, True) >>> Green($x, True) ::: Red, kind things are green.\nRed($x, True) >>> Quiet($x, True) ::: If something is red then it is quiet.\nNice(Charlie, True) >>> Cold($x, True) ::: If Charlie is nice then Charlie is cold.\nCold($x, True) && Quiet($x, True) >>> Kind($x, True) ::: Cold, quiet things are kind.\nQuery:\nNot(Kind(Gary, True)) ::: Gary is not kind.\n------\nProblem:\nCharlie is red. Charlie is white. Fiona is green. Gary is red. Gary is white. Harry is kind. Harry"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-374_Q2",
    "context": "Charlie is red. Dave is blue. Dave is furry. Dave is smart. Fiona is furry. Fiona is smart. Gary is red. If something is blue then it is furry. All blue things are red. Quiet things are smart. If something is cold and blue then it is quiet. Young, cold things are blue. All red things are furry. All blue, red things are cold. If something is furry then it is blue. If Fiona is young then Fiona is blue.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Fiona is not furry.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRed($x, bool) ::: Is x red?\nBlue($x, bool) ::: Is x blue?\nFurry($x, bool) ::: Is x furry?\nSmart($x, bool) ::: Is x smart?\nQuiet($x, bool) ::: Is x quiet?\nCold($x, bool) ::: Is x cold?\nYoung($x, bool) ::: Is x young?\nFacts:\nRed(Charlie, True) ::: Charlie is red.\nBlue(Dave, True) ::: Dave is blue.\nFurry(Dave, True) ::: Dave is furry.\nSmart(Dave, True) ::: Dave is smart.\nFurry(Fiona, True) ::: Fiona is furry.\nSmart(Fiona, True) ::: Fiona is smart.\nRed(Gary, True) ::: Gary is red.\nRules:\nBlue($x, True) >>> Furry($x, True) ::: If something is blue then it is furry.\nBlue($x, True) >>> Red($x, True) ::: All blue things are red.\nQuite($x, True) >>> Smart($x, True) ::: Quiet things are smart.\nCold($x, True) && Blue($x, True) >>> Quite($x, True) ::: If something is cold and blue then it is quiet.\nYoung($x, True) && Cold($x, True) >>> Blue($x, True) ::: Young, cold things are blue.\nRed($x, True) >>> Furry($x, True) ::: All red things are furry.\nBlue($x, True) && Red($x, True) >>> Cold($x, True) ::: All blue, red things are cold.\nFurry($x, True) >>> Blue($x, True) ::: If something is furry then it is blue.\nYoung($x, True) >>> Blue($x, True) ::: If Fiona is young then Fiona is blue.\nQuery:\nNot(Furry(Fiona, True)) ::: Fiona is not furry.\n------\nProblem:\nBob is furry. Bob is green. Bob is quiet. Bob is red. Bob is rough."
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-800_Q11",
    "context": "Anne is nice. Dave is nice. Dave is rough. Gary is nice. Gary is not smart. Harry is big. Harry is round. All white people are round. If Dave is big then Dave is white. All cold, round people are rough. Smart, white people are cold. If Dave is round and Dave is big then Dave is smart. If someone is nice then they are big. All rough, white people are nice.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Dave is cold.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNice($x, bool) ::: Is x nice?\nRough($x, bool) ::: Is x rough?\nSmart($x, bool) ::: Is x smart?\nBig($x, bool) ::: Is x big?\nRound($x, bool) ::: Is x round?\nCold($x, bool) ::: Is x cold?\nWhite($x, bool) ::: Is x white?\nFacts:\nNice(Anne, True) ::: Anne is nice.\nNice(Dave, True) ::: Dave is nice.\nRough(Dave, True) ::: Dave is rough.\nNice(Gary, True) ::: Gary is nice.\nSmart(Gary, False) ::: Gary is not smart.\nBig(Harry, True) ::: Harry is big.\nRound(Harry, True) ::: Harry is round.\nWhite(Harry, True) ::: Harry is white.\nRules:\nWhite($x, True) >>> Round($x, True) ::: All white people are round.\nBig($x, True) >>> White($x, True) ::: If Dave is big then Dave is white.\nRound($x, True) && Big($x, True) >>> Smart($x, True) ::: If Dave is round and Dave is big then Dave is smart.\nNice($x, True) >>> Big($x, True) ::: If someone is nice then they are big.\nRough($x, True) && White($x, True) >>> Nice($x, True) ::: All rough, white people are nice.\nCold($x, True) >>> Round($x, True) ::: All cold, round people are rough.\nSmart($x, True) && White($x, True) >>> Cold($x, True) ::: Smart, white people are cold.\nQuery:\nCold(Dave, True) ::: Dave is cold.\n------\nProblem:\nAnne is furry. Anne is green. Anne is quiet. Anne is rough. Anne is white. Dave is furry. Dave is green. Dave is quiet. Dave is rough. Dave is white. Erin is furry. Erin is green. Erin is quiet. Erin is rough. Erin is white. Fiona is furry."
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-990_Q2",
    "context": "The bear is green. The lion eats the squirrel. The lion eats the tiger. The lion sees the squirrel. The squirrel eats the tiger. The tiger eats the bear. The tiger eats the squirrel. The tiger is young. The tiger sees the bear. The tiger visits the bear. If something sees the squirrel and it is young then the squirrel is green. If something eats the squirrel then it is rough. If the squirrel sees the bear and the bear sees the tiger then the bear sees the lion. Green things are rough. If something sees the squirrel then it eats the tiger. All rough things are young. If something is green then it is big. If something visits the squirrel and it visits the bear then the squirrel visits the bear.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The tiger does not eat the squirrel.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen($x, bool) ::: Is x green?\nEats($x, $y, bool) ::: Does x eat y?\nSees($x, $y, bool) ::: Does x see y?\nVisits($x, $y, bool) ::: Does x visit y?\nYoung($x, bool) ::: Is x young?\nBig($x, bool) ::: Is x big?\nRough($x, bool) ::: Is x rough?\nFacts:\nGreen(The bear, True) ::: The bear is green.\nEats(The lion, The squirrel, True) ::: The lion eats the squirrel.\nEats(The lion, The tiger, True) ::: The lion eats the tiger.\nSees(The lion, The squirrel, True) ::: The lion sees the squirrel.\nEats(The squirrel, The tiger, True) ::: The squirrel eats the tiger.\nEats(The tiger, The bear, True) ::: The tiger eats the bear.\nEats(The tiger, The squirrel, True) ::: The tiger eats the squirrel.\nYoung(The tiger, True) ::: The tiger is young.\nSees(The tiger, The bear, True) ::: The tiger sees the bear.\nVisits(The tiger, The bear, True) ::: The tiger visits the bear.\nRules:\nYoung($x, True) >>> Rough($x, True) ::: All rough things are young.\nGreen($x, True) >>> Rough($x, True) ::: Green things are rough.\nSees($x, The squirrel, True) >>> Eats($x, The tiger, True) ::: If something sees the squirrel then it eats the tiger.\nSees($x, The squirrel, True) >>> Young($x, True) ::: If something sees the squirrel and it is young then the squirrel is green.\nSees($x, The squirrel, True) >>> Eats($x, The tiger, True) ::: If something sees the squirrel then it eats the tiger.\nSees($x, The squirrel, True) >>> Eats($x, The tiger, True) ::: If something sees the squirrel then it eats the tiger.\nSees($x, The squirrel, True) >>> Eats($x, The tiger, True) ::: If something sees the squirrel then it eats the tiger.\nSees($x, The squirrel, True) >>> Eats($x, The tiger, True) ::: If something sees the squirrel then it eats the tiger.\nSees($x, The squirrel, True) >>> Eats($x, The tiger, True) ::: If something sees the squirrel then it eats the tiger.\nSees($x, The squirrel, True) >>> Eats($x, The tiger, True) ::: If something sees the squirrel then it eats the tiger.\nSees($x, The squirrel, True) >>> Eats($x, The tiger, True) ::: If something sees the squirrel then it eats the tiger.\nSees($x, The squirrel, True) >>> Eats($x, The tiger, True) ::: If something sees the squirrel then it eats the tiger.\nSees($x, The squirrel, True) >>> Eats($x, The tiger, True) ::: If something sees the squirrel then it eats the tiger.\nSees($x, The squirrel, True) >>> Eats($x, The tiger, True) ::: If something sees the squirrel then it eats the tiger.\nSees($x, The squirrel, True) >>> Eats($x, The tiger, True) ::: If something sees the squirrel then it eats the tiger.\nSees($x, The squirrel, True) >>> Eats($x, The tiger, True) ::: If something sees the squirrel then it eats the tiger.\nSees($x, The squirrel, True) >>> Eats($x, The tiger, True) ::: If something sees the squirrel then it eats the tiger.\nSees($"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-88_Q12",
    "context": "Anne is quiet. Erin is green. Erin is kind. Erin is quiet. Erin is rough. Fiona is kind. Fiona is nice. Fiona is quiet. Fiona is red. Harry is nice. If someone is rough then they are green. If someone is nice then they are green. If someone is quiet and not nice then they are cold. All quiet people are rough. Kind people are quiet. If someone is green then they are kind. If someone is rough then they are red.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Harry is not red.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nQuiet($x, bool) ::: Is x quiet?\nKind($x, bool) ::: Is x kind?\nNice($x, bool) ::: Is x nice?\nGreen($x, bool) ::: Is x green?\nRed($x, bool) ::: Is x red?\nRough($x, bool) ::: Is x rough?\nCold($x, bool) ::: Is x cold?\nFacts:\nQuite(Anne, True) ::: Anne is quiet.\nGreen(Erin, True) ::: Erin is green.\nKind(Erin, True) ::: Erin is kind.\nQuite(Erin, True) ::: Erin is quiet.\nRough(Erin, True) ::: Erin is rough.\nKind(Fiona, True) ::: Fiona is kind.\nNice(Fiona, True) ::: Fiona is nice.\nQuite(Fiona, True) ::: Fiona is quiet.\nRed(Fiona, True) ::: Fiona is red.\nNice(Harry, True) ::: Harry is nice.\nRules:\nRough($x, True) >>> Green($x, True) ::: If someone is rough then they are green.\nNice($x, True) >>> Green($x, True) ::: If someone is nice then they are green.\nQuite($x, True) && Not(Nice($x, True)) >>> Cold($x, True) ::: If someone is quiet and not nice then they are cold.\nAll(Quite($x, True)) >>> Rough($x, True) ::: All quiet people are rough.\nKind($x, True) >>> Quite($x, True) ::: Kind people are quiet.\nGreen($x, True) >>> Kind($x, True) ::: If someone is green then they are kind.\nRough($x, True) >>> Red($x, True) ::: If someone is rough then they are red.\nQuery:\nNot(Red(Harry, True)) ::: Harry is not red.\n------\nProblem:\nAnne is quiet. Erin is furry. Erin is green. Erin is kind. Erin is quiet. Erin is rough. Fiona is furry. Fiona is kind. Fiona is quiet. Fiona is red. Fiona is rough. Fiona is white. Harry is furry. Harry is kind. Harry is quiet. Harry is rough. Harry is white. Young people are furry. If someone is green then they are kind. If someone is green then they are white. If someone is furry and quiet then they are white. If someone is young and white then they are rough. All red people are young.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Fiona is white.\n###\nPredicates:\nQuiet($x, bool) ::: Is x quiet?\nFurry($x, bool) ::: Is x furry?\nGreen($x, bool) ::: Is x green?\nKind($x, bool) ::: Is x kind?\nRed($x, bool) ::: Is x red?\nRough($x, bool) ::: Is x rough?\nWhite($x, bool) ::: Is x white?\nYoung($x, bool) ::: Is x young?\nFacts:\nQuite(Anne, True) ::: Anne is quiet.\nFurry(Erin, True) ::: Erin is furry.\nGreen(Erin, True) ::: Erin is green.\nKind(Erin, True) ::: Erin is kind.\nQuite(Erin, True) ::: Erin is quiet.\nRough(Erin, True) ::: Erin is rough.\nFurry(Fiona, True) ::: Fiona is furry.\nKind(Fiona, True) ::: Fiona is kind.\nQuite(Fiona, True) ::: Fiona is quiet.\nRed(Fiona, True) ::: Fiona is red.\nRough(Fiona, True) ::: Fiona is rough.\nWhite(Fiona, True) ::: Fiona is white.\nFurry(Harry, True) ::: Harry is furry.\nKind(Harry, True) ::: Harry is kind.\nQuite(Harry, True) ::: Harry is quiet.\nRough(Harry, True) ::: Harry is rough.\nWhite(Harry, True) ::: Harry is white."
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-597_Q5",
    "context": "The bald eagle eats the lion. The bald eagle needs the rabbit. The bald eagle sees the dog. The bald eagle sees the rabbit. The dog eats the bald eagle. The dog eats the rabbit. The dog needs the lion. The lion needs the bald eagle. The lion needs the dog. The rabbit eats the lion. The rabbit is green. The rabbit is round. If something sees the rabbit then it eats the rabbit. If something sees the lion and it is blue then the lion sees the dog. If something eats the rabbit then it eats the dog. If something is green and it sees the lion then the lion eats the rabbit. If something is rough then it eats the lion. If something eats the dog and it eats the lion then the lion sees the rabbit. If something is rough and it sees the lion then the lion is blue.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bald eagle eats the dog.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y, bool) ::: Does x eat y?\nNeeds($x, $y, bool) ::: Does x need y?\nSees($x, $y, bool) ::: Does x see y?\nIs($x, $y, bool) ::: Is x y?\nGreen($x, bool) ::: Is x green?\nRound($x, bool) ::: Is x round?\nRough($x, bool) ::: Is x rough?\nBlue($x, bool) ::: Is x blue?\nFacts:\nEats(BaldEagle, Lion, True) ::: The bald eagle eats the lion.\nNeeds(BaldEagle, Rabbit, True) ::: The bald eagle needs the rabbit.\nSees(BaldEagle, Dog, True) ::: The bald eagle sees the dog.\nSees(BaldEagle, Rabbit, True) ::: The bald eagle sees the rabbit.\nEats(Dog, BaldEagle, True) ::: The dog eats the bald eagle.\nEats(Dog, Rabbit, True) ::: The dog eats the rabbit.\nNeeds(Dog, Lion, True) ::: The dog needs the lion.\nNeeds(Lion, BaldEagle, True) ::: The lion needs the bald eagle.\nNeeds(Lion, Dog, True) ::: The lion needs the dog.\nEats(Rabbit, Lion, True) ::: The rabbit eats the lion.\nGreen(Rabbit, True) ::: The rabbit is green.\nRound(Rabbit, True) ::: The rabbit is round.\nRules:\nIf something sees the rabbit then it eats the rabbit ::: If something sees the rabbit then it eats the rabbit.\nIf something sees the lion and it is blue then the lion sees the dog ::: If something sees the lion and it is blue then the lion sees the dog.\nIf something eats the rabbit then it eats the dog ::: If something eats the rabbit then it eats the dog.\nIf something is green and it sees the lion then the lion eats the rabbit ::: If something is green and it sees the lion then the lion eats the rabbit.\nIf something is rough then it eats the lion ::: If something is rough then it eats the lion.\nIf something eats the dog and it eats the lion then the lion sees the rabbit ::: If something eats the dog and it eats the lion then the lion sees the rabbit.\nIf something is rough and it sees the lion then the lion is blue ::: If something is rough and it sees the lion then the lion is blue.\nQuery:\nEats(BaldEagle, Dog, True) ::: The bald eagle eats the dog.\n------\nProblem:\nThe dog eats the rabbit. The dog eats the lion. The dog needs the rabbit. The dog needs the lion. The dog sees the rabbit. The dog sees the lion. The lion eats the rabbit. The lion eats the dog. The lion needs the rabbit. The lion needs the dog. The rabbit eats the lion. The rabbit is green. The rabbit is round. If something sees the rabbit then it eats the rabbit. If something sees the lion and it is blue then the lion sees the dog. If something eats the rabbit then it eats the dog. If something is green and it sees the lion then the lion eats the rabbit. If something is rough then it eats the lion. If something eats the dog and it eats the lion then the lion sees the rabbit. If something is rough and it sees the lion then the lion is blue.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? The dog eats the rabbit.\n###\nPredicates:\nEats($x, $y, bool) ::: Does x eat y?\nNeeds($x, $y, bool) ::: Does x need y?\nSees($x, $y, bool) ::: Does x see y?\nIs($x, $y, bool) ::: Is x y?\nGreen($x, bool) ::: Is x green?\nRound($x, bool) ::: Is x round?\nRough($x, bool) ::: Is x rough?\nBlue($x, bool) ::: Is x blue?\nFacts:\nEats(Dog,"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-392_Q17",
    "context": "The bald eagle likes the mouse. The mouse likes the bald eagle. The rabbit likes the mouse. The tiger chases the mouse. The tiger chases the rabbit. The tiger is big. The tiger sees the bald eagle. If the rabbit likes the tiger and the tiger sees the bald eagle then the rabbit is rough. If someone sees the rabbit then the rabbit likes the tiger. If someone likes the bald eagle and the bald eagle likes the rabbit then the rabbit is big. If someone likes the bald eagle then the bald eagle is rough. If the mouse chases the rabbit then the rabbit chases the tiger. If the rabbit sees the bald eagle then the bald eagle chases the rabbit. If someone is young and they chase the mouse then they see the mouse. If someone likes the mouse and they are rough then they see the rabbit.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The tiger does not see the mouse.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nLikes($x, $y, bool) ::: Does x like y?\nChases($x, $y, bool) ::: Does x chase y?\nSees($x, $y, bool) ::: Does x see y?\nBig($x, bool) ::: Is x big?\nRough($x, bool) ::: Is x rough?\nYoung($x, bool) ::: Is x young?\nFacts:\nLikes(BaldEagle, Mouse, True) ::: The bald eagle likes the mouse.\nLikes(Mouse, BaldEagle, True) ::: The mouse likes the bald eagle.\nLikes(Rabbit, Mouse, True) ::: The rabbit likes the mouse.\nChases(Tiger, Mouse, True) ::: The tiger chases the mouse.\nChases(Tiger, Rabbit, True) ::: The tiger chases the rabbit.\nBig(Tiger, True) ::: The tiger is big.\nSees(Tiger, BaldEagle, True) ::: The tiger sees the bald eagle.\nRules:\nRabbit(x) && Likes(x, Tiger) && Sees(x, BaldEagle) >>> Rough(x, True) ::: If the rabbit likes the tiger and the tiger sees the bald eagle then the rabbit is rough.\nLikes(x, BaldEagle) && Likes(BaldEagle, x) >>> Rough(x, True) ::: If someone likes the bald eagle and the bald eagle likes the rabbit then the rabbit is big.\nLikes(x, BaldEagle) >>> Rough(BaldEagle, True) ::: If someone likes the bald eagle then the bald eagle is rough.\nChases(x, Mouse) && Sees(x, Mouse) >>> Sees(Mouse, x) ::: If the mouse chases the rabbit then the rabbit chases the tiger.\nSees(x, BaldEagle) >>> Chases(BaldEagle, x) ::: If the rabbit sees the bald eagle then the bald eagle chases the rabbit.\nYoung(x) && Chases(x, Mouse) >>> Sees(x, Mouse) ::: If someone is young and they chase the mouse then they see the mouse.\nLikes(x, Mouse) && Rough(x, True) >>> Sees(x, Rabbit) ::: If someone likes the mouse and they are rough then they see the rabbit.\n------\nProblem:\nThe cat likes the dog. The dog likes the cat. The cat likes the mouse. The dog likes the mouse. The cat likes the rabbit. The dog likes the rabbit. The cat likes the tiger. The dog likes the tiger. The cat likes the tiger. The dog likes the tiger. The cat likes the tiger. The dog likes the tiger. The cat likes the tiger. The dog likes the tiger. The cat likes the tiger. The dog likes the tiger. The cat likes the tiger. The dog likes the tiger. The cat likes the tiger. The dog likes the tiger. The cat likes the tiger. The dog likes the tiger. The cat likes the tiger. The dog likes the tiger. The cat likes the tiger. The dog likes the tiger. The cat likes the tiger. The dog likes the tiger. The cat likes the tiger. The dog likes the tiger. The cat likes the tiger. The dog likes the tiger. The cat likes the tiger. The dog likes the tiger. The cat likes the tiger. The dog likes the tiger. The cat likes the tiger. The dog likes the tiger. The cat likes the tiger. The dog likes the tiger. The cat likes the tiger. The dog likes the tiger. The cat likes the tiger. The dog likes the tiger. The cat likes the tiger. The dog likes the tiger. The cat likes the tiger. The dog likes the tiger. The cat likes the tiger. The dog likes the tiger. The cat likes the tiger. The dog likes the tiger. The cat likes the tiger. The dog likes the tiger. The cat likes the tiger. The dog likes the tiger. The cat likes the tiger. The dog likes the tiger. The cat likes the tiger. The dog likes the tiger. The cat likes the tiger. The dog likes the tiger. The cat likes the tiger. The dog likes"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-800_Q12",
    "context": "The cow chases the tiger. The cow eats the rabbit. The cow is red. The cow is young. The cow sees the squirrel. The rabbit eats the cow. The rabbit is young. The squirrel is kind. The squirrel is red. The tiger is red. The tiger is young. The tiger sees the squirrel. If the cow sees the squirrel and the squirrel eats the rabbit then the rabbit sees the tiger. If something sees the tiger then the tiger is round. If something chases the squirrel then the squirrel eats the rabbit. If something is round then it sees the tiger. If something is big then it chases the squirrel. If something eats the rabbit then the rabbit chases the squirrel. If the tiger eats the cow and the cow sees the squirrel then the squirrel is young.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The tiger does not see the tiger.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nEats($x, $y, bool) ::: Does x eat y?\nIs($x, $y, bool) ::: Is x y?\nKind($x, bool) ::: Is x kind?\nRed($x, bool) ::: Is x red?\nRound($x, bool) ::: Is x round?\nSees($x, $y, bool) ::: Does x see y?\nYoung($x, bool) ::: Is x young?\nBig($x, bool) ::: Is x big?\nFacts:\nChases(Cow, Tiger, True) ::: The cow chases the tiger.\nEats(Cow, Rabbit, True) ::: The cow eats the rabbit.\nRed(Cow, True) ::: The cow is red.\nYoung(Cow, True) ::: The cow is young.\nSees(Cow, Squirrel, True) ::: The cow sees the squirrel.\nEats(Rabbit, Cow, True) ::: The rabbit eats the cow.\nYoung(Rabbit, True) ::: The rabbit is young.\nKind(Squirrel, True) ::: The squirrel is kind.\nRed(Squirrel, True) ::: The squirrel is red.\nRed(Tiger, True) ::: The tiger is red.\nYoung(Tiger, True) ::: The tiger is young.\nSees(Tiger, Squirrel, True) ::: The tiger sees the squirrel.\nRules:\nChases(x, y) >>> Eats(y, x) ::: If something chases the squirrel then the squirrel eats the rabbit.\nIs(x, y) >>> Sees(y, x) ::: If something is round then it sees the tiger.\nEats(x, y) >>> Chases(y, x) ::: If something eats the rabbit then the rabbit chases the squirrel.\nEats(x, y) && Sees(y, z) >>> Is(z, x) ::: If the cow sees the squirrel and the squirrel eats the rabbit then the rabbit sees the tiger.\nSees(x, y) >>> Round(y) ::: If something sees the tiger then the tiger is round.\nBig(x) >>> Chases(x, Squirrel) ::: If something is big then it chases the squirrel.\nYoung(x) >>> Red(x) ::: If something is young then it is red.\nYoung(x) && Eats(x, y) >>> Young(y) ::: If the tiger eats the cow and the cow sees the squirrel then the squirrel is young.\nQuery:\nSees(Tiger, Tiger, True) ::: The tiger does not see the tiger.\n------\nProblem:\nThe cow chases the tiger. The cow eats the rabbit. The cow is red. The cow is young. The cow sees the squirrel. The rabbit eats the cow. The rabbit is young. The squirrel is kind. The squirrel is red. The tiger is red. The tiger is young. The tiger sees the squirrel. If the cow sees the squirrel and the squirrel eats the rabbit then the rabbit sees the tiger. If something sees the tiger then the tiger is round. If something chases the squirrel then the squirrel eats the rabbit. If something is round then it sees the tiger. If something is big then it chases the squirrel. If something eats the rabbit then the rabbit chases the squirrel. If the tiger eats the cow and the cow sees the squirrel then the squirrel is young.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? The tiger does not see the tiger.\n###\nPredicates:\nChases($x, $y, bool) ::: Does x chase y?\nEats($x, $y, bool) ::: Does x eat y?\nIs($x, $y, bool) ::: Is x y?\nKind($x, bool) ::: Is x kind?\nRed($x, bool) ::: Is x red?\nRound($x, bool) ::: Is x"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-1028_Q24",
    "context": "The bald eagle is not rough. The cat is blue. The cat is round. The cat sees the bald eagle. The squirrel is blue. The squirrel does not see the bald eagle. The tiger chases the bald eagle. The tiger chases the cat. The tiger is rough. The tiger sees the cat. If something sees the tiger and it likes the tiger then it chases the squirrel. If something chases the tiger then it is round. If something chases the squirrel and it is not red then it is rough. If something is round then it likes the tiger. If something is big and it likes the tiger then the tiger likes the squirrel. If something likes the tiger then the tiger sees the squirrel. If something sees the squirrel then the squirrel chases the tiger. If something likes the bald eagle then the bald eagle does not see the squirrel. If something is rough and it does not see the squirrel then the squirrel sees the cat.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The squirrel chases the bald eagle.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBaldEagle($x, bool) ::: Is x a bald eagle?\nCat($x, bool) ::: Is x a cat?\nRound($x, bool) ::: Is x round?\nBlue($x, bool) ::: Is x blue?\nSee($x, $y, bool) ::: Does x see y?\nChase($x, $y, bool) ::: Does x chase y?\nLike($x, $y, bool) ::: Does x like y?\nBig($x, bool) ::: Is x big?\nFacts:\nBaldEagle(BaldEagle, True) ::: The bald eagle is not rough.\nCat(Cat, True) ::: The cat is blue.\nRound(Cat, True) ::: The cat is round.\nSee(Cat, BaldEagle, True) ::: The cat sees the bald eagle.\nBlue(Squirrel, True) ::: The squirrel is blue.\nSee(Squirrel, BaldEagle, False) ::: The squirrel does not see the bald eagle.\nChase(Tiger, BaldEagle, True) ::: The tiger chases the bald eagle.\nChase(Tiger, Cat, True) ::: The tiger chases the cat.\nRound(Tiger, True) ::: The tiger is rough.\nSee(Tiger, Cat, True) ::: The tiger sees the cat.\nLike(Tiger, Cat, True) ::: If something sees the tiger and it likes the tiger then it chases the squirrel.\nChase(Tiger, Squirrel, True) ::: If something chases the tiger then it is round.\nChase(Squirrel, Tiger, True) ::: If something chases the squirrel and it is not red then it is rough.\nRound(Squirrel, True) ::: If something is round then it likes the tiger.\nBig(Tiger, True) && Like(Tiger, Squirrel) >>> Like(Squirrel, Tiger) ::: If something is big and it likes the tiger then the tiger likes the squirrel.\nLike(Tiger, Squirrel) >>> See(Squirrel, Tiger) ::: If something likes the tiger then the tiger sees the squirrel.\nSee(Squirrel, Tiger) >>> Chase(Tiger, Squirrel) ::: If something sees the squirrel then the squirrel chases the tiger.\nLike(Squirrel, BaldEagle) >>> See(BaldEagle, Squirrel) ::: If something likes the bald eagle then the bald eagle does not see the squirrel.\nRound(Squirrel) && See(Squirrel, BaldEagle) >>> See(BaldEagle, Squirrel) ::: If something is rough and it does not see the squirrel then the squirrel sees the cat.\nQuery:\nChase(Squirrel, BaldEagle, True) ::: The squirrel chases the bald eagle.\n------\nProblem:\nThe cat is furry. The cat is green. The cat is rough. The cat is white. The cat is young. The cat is quiet. The cat is red. The cat is blue. The cat is round. The cat is big. The cat is not furry. The cat is not green. The cat is not rough. The cat is not white. The cat is not young. The cat is not quiet. The cat is not red. The cat is not blue. The cat is not round. The cat is not big. The cat is not not furry. The cat is not not green. The cat is not not rough. The cat is not not white. The cat is not not young. The cat is not not quiet. The cat is not not red. The cat is not not blue. The cat is not not round. The cat is not not big. The cat is not not not furry. The cat is not not not green. The cat is not not not rough. The cat is not not not white. The cat is not not not young. The cat is not not not quiet. The cat is not not not red. The cat is not not not blue. The cat is not not not round. The cat is not not not big. The cat is not not not not furry. The cat is not not not not green. The cat is not not not not rough. The cat is not not not not white. The cat is not not not not young. The cat is not not"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-893_Q12",
    "context": "The bald eagle is big. The bald eagle sees the lion. The bald eagle visits the rabbit. The lion eats the bald eagle. The lion is blue. The lion is cold. The lion visits the bald eagle. The lion visits the rabbit. The rabbit eats the tiger. The rabbit is big. The rabbit sees the bald eagle. The rabbit visits the tiger. The tiger is red. The tiger visits the bald eagle. If someone eats the bald eagle then the bald eagle visits the lion. If someone visits the bald eagle and the bald eagle sees the rabbit then the rabbit is red. If the lion is blue then the lion sees the tiger. If someone is big then they are cold. If someone is red then they visit the lion. If someone eats the bald eagle then they see the bald eagle. If someone eats the tiger and the tiger sees the lion then they visit the lion. If someone eats the lion and the lion sees the rabbit then the rabbit sees the bald eagle. If someone visits the lion and the lion sees the tiger then they see the rabbit.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The rabbit does not see the rabbit.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nCold($x, bool) ::: Is x cold?\nRed($x, bool) ::: Is x red?\nVisits($x, $y, bool) ::: Does x visit y?\nEats($x, $y, bool) ::: Does x eat y?\nSees($x, $y, bool) ::: Does x see y?\nFacts:\nBig(BaldEagle, True) ::: The bald eagle is big.\nSees(BaldEagle, Lion, True) ::: The bald eagle sees the lion.\nVisits(BaldEagle, Rabbit, True) ::: The bald eagle visits the rabbit.\nEats(Lion, BaldEagle, True) ::: The lion eats the bald eagle.\nBlue(Lion, True) ::: The lion is blue.\nCold(Lion, True) ::: The lion is cold.\nVisits(Lion, BaldEagle, True) ::: The lion visits the bald eagle.\nVisits(Lion, Rabbit, True) ::: The lion visits the rabbit.\nEats(Rabbit, Tiger, True) ::: The rabbit eats the tiger.\nBig(Rabbit, True) ::: The rabbit is big.\nSees(Rabbit, BaldEagle, True) ::: The rabbit sees the bald eagle.\nVisits(Rabbit, Tiger, True) ::: The rabbit visits the tiger.\nRed(Tiger, True) ::: The tiger is red.\nVisits(Tiger, BaldEagle, True) ::: The tiger visits the bald eagle.\nRules:\nEats($x, $y, True) >>> Visits($x, $y, True) ::: If someone eats the bald eagle then the bald eagle visits the lion.\nVisits($x, $y, True) && Sees($x, $z, True) >>> Red($z, True) ::: If someone visits the bald eagle and the bald eagle sees the rabbit then the rabbit is red.\nBlue($x, True) >>> Sees($x, $y, True) ::: If the lion is blue then the lion sees the tiger.\nBig($x, True) >>> Cold($x, True) ::: If someone is big then they are cold.\nRed($x, True) >>> Visits($x, $y, True) ::: If someone is red then they visit the lion.\nEats($x, $y, True) >>> Sees($x, $y, True) ::: If someone eats the bald eagle then they see the bald eagle.\nEats($x, $y, True) && Sees($y, $z, True) >>> Visits($x, $z, True) ::: If someone eats the tiger and the tiger sees the lion then they visit the lion.\nEats($x, $y, True) && Sees($y, $z, True) >>> Sees($x, $z, True) ::: If someone eats the lion and the lion sees the rabbit then the rabbit sees the bald eagle.\nVisits($x, $y, True) && Sees($y, $z, True) >>> Sees($x, $z, True) ::: If someone visits the lion and the lion sees the tiger then they see the rabbit.\nQuery:\nNot(Sees(Rabbit, Rabbit, True)) ::: The rabbit does not see the rabbit.\n------\nProblem:\nThe cat is big. The cat is furry. The cat is green. The cat is red. The cat is rough. The cat is white. The dog is big. The dog is furry. The dog is green. The dog is red. The dog is rough. The dog is white. The horse is big. The horse is furry. The horse is green. The horse is red. The horse is rough. The horse is white. The lion is big. The lion is furry. The lion is green. The lion is red. The lion is rough. The lion is white. The rabbit is big. The rabbit is furry. The rabbit is green. The rabbit is red. The rabbit is rough. The rabbit is white. The tiger is big. The tiger is furry. The tiger is green. The tiger is red. The tiger is rough. The tiger is white"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-547_Q4",
    "context": "Charlie is quiet. Dave is quiet. Dave is young. Erin is blue. Erin is nice. Erin is quiet. Fiona is not blue. Fiona is cold. Fiona is nice. Fiona is round. Fiona is young. If someone is kind then they are round. All kind, cold people are blue. If someone is nice and not young then they are not blue. If Fiona is kind then Fiona is blue. If Dave is kind and Dave is blue then Dave is not nice. Round people are cold. If Dave is young then Dave is kind. If Erin is kind and Erin is blue then Erin is round.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Dave is not kind.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nQuiet($x, bool) ::: Is x quiet?\nYoung($x, bool) ::: Is x young?\nBlue($x, bool) ::: Is x blue?\nNice($x, bool) ::: Is x nice?\nKind($x, bool) ::: Is x kind?\nRound($x, bool) ::: Is x round?\nCold($x, bool) ::: Is x cold?\nFacts:\nQuite(Charlie, True) ::: Charlie is quiet.\nQuite(Dave, True) ::: Dave is quiet.\nYoung(Dave, True) ::: Dave is young.\nBlue(Erin, True) ::: Erin is blue.\nNice(Erin, True) ::: Erin is nice.\nQuite(Erin, True) ::: Erin is quiet.\nNot(Blue(Fiona, True)) ::: Fiona is not blue.\nCold(Fiona, True) ::: Fiona is cold.\nNice(Fiona, True) ::: Fiona is nice.\nYoung(Fiona, True) ::: Fiona is young.\nKind($x, True) >>> Round($x, True) ::: If someone is kind then they are round.\nAll(Kind($x, True), Cold($x, True)) >>> Blue($x, True) ::: All kind, cold people are blue.\nNot(Young($x, True)) && Nice($x, True) >>> Not(Blue($x, True)) ::: If someone is nice and not young then they are not blue.\nKind(Fiona, True) >>> Blue(Fiona, True) ::: If Fiona is kind then Fiona is blue.\nKind(Dave, True) && Blue(Dave, True) >>> Not(Nice(Dave, True)) ::: If Dave is kind and Dave is blue then Dave is not nice.\nRound($x, True) >>> Cold($x, True) ::: Round people are cold.\nYoung(Dave, True) >>> Kind(Dave, True) ::: If Dave is young then Dave is kind.\nKind(Erin, True) && Blue(Erin, True) >>> Round(Erin, True) ::: If Erin is kind and Erin is blue then Erin is round.\nQuery:\nNot(Kind(Dave, True)) ::: Dave is not kind.\n------\nProblem:\nCharlie is furry. Charlie is green. Charlie is quiet. Charlie is rough. Charlie is white. Dave is furry. Dave is green. Dave is quiet. Dave is rough. Dave is white. Erin is furry. Erin is green. Erin is quiet. Erin is rough. Erin is white. Fiona is furry. Fiona is green. Fiona is quiet. Fiona is rough. Fiona is white. Harry is furry. Harry is green. Harry is quiet. Harry is rough. Harry is white. If someone is green then they are white. If someone is furry and quiet then they are white. If someone is young and white then they are rough. All red people are young.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Erin is white.\n###\nPredicates:\nFurry($x, bool) ::: Is x furry?\nGreen($x, bool) ::: Is x green?\nQuiet($x, bool) ::: Is x quiet?\nRough($x, bool) ::: Is x rough?\nWhite($x, bool) ::: Is x white?\nYoung($x, bool) ::: Is x young?\nFacts:\nFurry(Charlie, True) ::: Charlie is furry.\nGreen(Charlie, True) ::: Charlie is green.\nQuite(Charlie, True) ::: Charlie is quiet.\nRough(Charlie, True) ::: Charlie is rough.\nWhite(Charlie, True) ::: Charlie is white.\nFurry(Dave, True) ::: Dave is furry.\nGreen(Dave, True) ::: Dave is green.\nQuite(Dave, True) ::: Dave is quiet.\nRough(Dave, True) ::: Dave is rough.\nWhite(Dave, True) ::: Dave is white.\nFurry(Erin, True) ::: Erin is furry.\nGreen(Erin, True) ::: Erin is green.\nQuite(Erin, True) :::"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-698_Q23",
    "context": "The bear is cold. The bear is kind. The bear likes the tiger. The dog is not green. The dog sees the squirrel. The squirrel eats the tiger. The squirrel is cold. The squirrel is kind. The squirrel likes the bear. The squirrel does not like the dog. The squirrel likes the tiger. The squirrel sees the tiger. The tiger eats the bear. The tiger eats the squirrel. The tiger does not like the dog. The tiger sees the bear. If something sees the squirrel and it likes the tiger then it eats the squirrel. If something eats the squirrel then it sees the bear. If the dog sees the tiger and the dog eats the bear then the bear is rough. If something sees the bear then the bear eats the tiger. If something eats the tiger then it sees the dog. If something sees the tiger and the tiger likes the squirrel then the tiger eats the bear. If something likes the dog and it is not cold then the dog eats the squirrel. If something sees the dog and it is cold then it sees the squirrel. If something is cold and it does not see the dog then the dog likes the bear.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bear is not round.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nKind($x, bool) ::: Is x kind?\nLikes($x, $y, bool) ::: Does x like y?\nSees($x, $y, bool) ::: Does x see y?\nEats($x, $y, bool) ::: Does x eat y?\nRound($x, bool) ::: Is x round?\nFacts:\nCold(Bear, True) ::: The bear is cold.\nKind(Bear, True) ::: The bear is kind.\nLikes(Bear, Tiger, True) ::: The bear likes the tiger.\nNot(Green(Dog, True)) ::: The dog is not green.\nSees(Dog, Squirrel, True) ::: The dog sees the squirrel.\nEats(Squirrel, Tiger, True) ::: The squirrel eats the tiger.\nCold(Squirrel, True) ::: The squirrel is cold.\nKind(Squirrel, True) ::: The squirrel is kind.\nLikes(Squirrel, Bear, True) ::: The squirrel likes the bear.\nNot(Likes(Squirrel, Dog, True)) ::: The squirrel does not like the dog.\nLikes(Squirrel, Tiger, True) ::: The squirrel likes the tiger.\nSees(Squirrel, Tiger, True) ::: The squirrel sees the tiger.\nEats(Tiger, Bear, True) ::: The tiger eats the bear.\nEats(Tiger, Squirrel, True) ::: The tiger eats the squirrel.\nNot(Likes(Tiger, Dog, True)) ::: The tiger does not like the dog.\nSees(Tiger, Bear, True) ::: The tiger sees the bear.\nRules:\nSees($x, $y, True) && Likes($x, $z, True) >>> Eats($x, $y, True) ::: If something sees the squirrel and it likes the tiger then it eats the squirrel.\nEats($x, $y, True) >>> Sees($x, $z, True) ::: If something eats the squirrel then it sees the bear.\nDog($x, True) && Sees($x, $y, True) && Eats($x, $z, True) >>> Bear($z, True) ::: If the dog sees the tiger and the dog eats the bear then the bear is rough.\nSees($x, $y, True) >>> Eats($x, $z, True) ::: If something sees the bear then the bear eats the tiger.\nEats($x, $y, True) >>> Sees($x, $z, True) ::: If something eats the tiger then it sees the dog.\nSees($x, $y, True) && Likes($y, $z, True) >>> Eats($x, $y, True) ::: If something sees the tiger and the tiger likes the squirrel then the tiger eats the bear.\nNot(Cold($x, True)) && Likes($x, $y, True) >>> Eats($x, $y, True) ::: If something likes the dog and it is not cold then the dog eats the squirrel.\nCold($x, True) && Not(Sees($x, $y, True)) >>> Likes($y, $z, True) ::: If something sees the dog and it is cold then it sees the squirrel.\nNot(Sees($x, $y, True)) && Cold($x, True) >>> Likes($y, $z, True) ::: If something sees the dog and it is cold then it sees the squirrel.\nNot(Sees($x, $y, True)) && Cold($x, True) >>> Likes($y, $z, True) ::: If something sees the dog and it is cold then it sees the squirrel.\nNot(Sees($x, $y, True)) && Cold($x, True) >>> Likes($y, $z, True) ::: If something sees the dog and it is cold then it sees the squirrel.\nNot(Sees($x, $y, True)) && Cold($x, True) >>> Likes($y, $z, True) ::: If something"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-924_Q8",
    "context": "The bald eagle is cold. The cat is nice. The cat needs the cow. The cow is big. The cow needs the bald eagle. The cow visits the bald eagle. The dog chases the bald eagle. If someone is nice then they chase the cow. Big people are nice. If the cow needs the bald eagle and the cow is cold then the bald eagle is nice. If someone is blue then they need the cat. If someone needs the bald eagle then the bald eagle is blue. All nice people are cold. Cold, nice people are big. If someone is big then they chase the dog. If someone visits the cow then the cow visits the dog.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cat does not chase the dog.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nNice($x, bool) ::: Is x nice?\nBlue($x, bool) ::: Is x blue?\nBig($x, bool) ::: Is x big?\nChase($x, $y, bool) ::: Does x chase y?\nNeeds($x, $y, bool) ::: Does x need y?\nVisit($x, $y, bool) ::: Does x visit y?\nFacts:\nCold(BaldEagle, True) ::: The bald eagle is cold.\nNice(Cat, True) ::: The cat is nice.\nNeeds(Cat, Cow, True) ::: The cat needs the cow.\nBig(Cow, True) ::: The cow is big.\nNeeds(Cow, BaldEagle, True) ::: The cow needs the bald eagle.\nVisits(Cow, BaldEagle, True) ::: The cow visits the bald eagle.\nChases(Dog, BaldEagle, True) ::: The dog chases the bald eagle.\nRules:\nNice($x, True) >>> Chase($x, Cow, True) ::: If someone is nice then they chase the cow.\nBig($x, True) >>> Nice($x, True) ::: Big people are nice.\nCold($x, True) && Nice($x, True) >>> Big($x, True) ::: If the cow needs the bald eagle and the cow is cold then the bald eagle is nice.\nBlue($x, True) >>> Needs($x, Cat, True) ::: If someone is blue then they need the cat.\nNeeds($x, BaldEagle, True) >>> Blue($x, True) ::: If someone needs the bald eagle then the bald eagle is blue.\nAll($x, Nice($x, True)) >>> Cold($x, True) ::: All nice people are cold.\nCold($x, True) && Nice($x, True) >>> Big($x, True) ::: Cold, nice people are big.\nBig($x, True) >>> Chase($x, Dog, True) ::: If someone is big then they chase the dog.\nVisits($x, Cow, True) >>> Visits($x, Dog, True) ::: If someone visits the cow then the cow visits the dog.\nQuery:\nChase(Cat, Dog, False) ::: The cat does not chase the dog.\n------\nProblem:\nThe cat is nice. The cat is blue. The cat is big. The cat is cold. The cat is furry. The cat is green. The cat is rough. The cat is white. The dog is furry. The dog is green. The dog is rough. The dog is white. The dog is young. The eagle is furry. The eagle is green. The eagle is rough. The eagle is white. The eagle is young. The eagle is cold. The eagle is nice. The eagle is quiet. The eagle is red. The eagle is rough. The eagle is white. The eagle is young. The eagle is quiet. The eagle is quiet. The eagle is quiet. The eagle is quiet. The eagle is quiet. The eagle is quiet. The eagle is quiet. The eagle is quiet. The eagle is quiet. The eagle is quiet. The eagle is quiet. The eagle is quiet. The eagle is quiet. The eagle is quiet. The eagle is quiet. The eagle is quiet. The eagle is quiet. The eagle is quiet. The eagle is quiet. The eagle is quiet. The eagle is quiet. The eagle is quiet. The eagle is quiet. The eagle is quiet. The eagle is quiet. The eagle is quiet. The eagle is quiet. The eagle is quiet. The eagle is quiet. The eagle is quiet. The eagle is quiet. The eagle is quiet. The eagle is quiet. The eagle is quiet. The eagle is quiet. The eagle is quiet. The eagle is quiet. The eagle is quiet. The eagle is quiet. The eagle is quiet. The eagle is quiet. The eagle is quiet. The eagle is quiet. The eagle is quiet. The eagle is quiet. The eagle is quiet. The eagle is quiet. The eagle is quiet. The eagle is quiet. The eagle is quiet. The eagle is quiet. The eagle is quiet. The eagle is quiet."
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-362_Q5",
    "context": "The bear eats the rabbit. The bear is cold. The bear is young. The bear needs the rabbit. The bear needs the tiger. The dog chases the bear. The dog chases the rabbit. The dog is big. The dog needs the tiger. The rabbit is young. The rabbit needs the dog. The tiger chases the dog. If the bear is big then the bear needs the tiger. If something needs the tiger then it chases the tiger. If something chases the tiger and it needs the dog then the dog is blue. If something chases the bear then it eats the dog. If something chases the dog and the dog is big then the dog is young. If something is young then it chases the bear. If something chases the rabbit and the rabbit eats the dog then the dog is round. If something eats the dog and it is round then it is big. If something is round and it needs the tiger then the tiger is young.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bear eats the dog.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y, bool) ::: Does x eat y?\nNeeds($x, $y, bool) ::: Does x need y?\nChases($x, $y, bool) ::: Does x chase y?\nIs($x, $y, bool) ::: Is x y?\nBig($x, bool) ::: Is x big?\nYoung($x, bool) ::: Is x young?\nRound($x, bool) ::: Is x round?\nFacts:\nEats(Bear, Rabbit, True) ::: The bear eats the rabbit.\nIsCold(Bear, True) ::: The bear is cold.\nIsYoung(Bear, True) ::: The bear is young.\nNeeds(Bear, Rabbit, True) ::: The bear needs the rabbit.\nNeeds(Bear, Tiger, True) ::: The bear needs the tiger.\nChases(Dog, Bear, True) ::: The dog chases the bear.\nChases(Dog, Rabbit, True) ::: The dog chases the rabbit.\nIsBig(Dog, True) ::: The dog is big.\nNeeds(Dog, Tiger, True) ::: The dog needs the tiger.\nIsYoung(Rabbit, True) ::: The rabbit is young.\nNeeds(Rabbit, Dog, True) ::: The rabbit needs the dog.\nChases(Tiger, Dog, True) ::: The tiger chases the dog.\nRules:\nIf the bear is big then the bear needs the tiger ::: If the bear is big then the bear needs the tiger.\nIf something needs the tiger then it chases the tiger ::: If something needs the tiger then it chases the tiger.\nIf something chases the tiger and it needs the dog then the dog is blue ::: If something chases the tiger and it needs the dog then the dog is blue.\nIf something chases the bear then it eats the dog ::: If something chases the bear then it eats the dog.\nIf something chases the dog and the dog is big then the dog is young ::: If something chases the dog and the dog is big then the dog is young.\nIf something is young then it chases the bear ::: If something is young then it chases the bear.\nIf something chases the rabbit and the rabbit eats the dog then the dog is round ::: If something chases the rabbit and the rabbit eats the dog then the dog is round.\nIf something eats the dog and it is round then it is big ::: If something eats the dog and it is round then it is big.\nIf something is round and it needs the tiger then the tiger is young ::: If something is round and it needs the tiger then the tiger is young.\nQuery:\nEats(Bear, Dog, True) ::: The bear eats the dog.\n------"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-577_Q18",
    "context": "Bob is smart. Bob is young. Charlie is cold. Charlie is round. Charlie is white. Charlie is young. Gary is smart. Gary is white. Harry is rough. Harry is smart. Harry is white. All red people are round. Round, smart people are cold. If someone is cold and young then they are white. Red people are round. All round, young people are red. If someone is smart then they are rough. Rough, young people are red. If Bob is round then Bob is smart. If Charlie is white and Charlie is rough then Charlie is young.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Harry is cold.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nSmart($x, bool) ::: Is x smart?\nYoung($x, bool) ::: Is x young?\nCold($x, bool) ::: Is x cold?\nRound($x, bool) ::: Is x round?\nWhite($x, bool) ::: Is x white?\nRough($x, bool) ::: Is x rough?\nFacts:\nSmart(Bob, True) ::: Bob is smart.\nYoung(Bob, True) ::: Bob is young.\nCold(Charlie, True) ::: Charlie is cold.\nRound(Charlie, True) ::: Charlie is round.\nWhite(Charlie, True) ::: Charlie is white.\nYoung(Charlie, True) ::: Charlie is young.\nSmart(Gary, True) ::: Gary is smart.\nWhite(Gary, True) ::: Gary is white.\nRough(Harry, True) ::: Harry is rough.\nSmart(Harry, True) ::: Harry is smart.\nWhite(Harry, True) ::: Harry is white.\nRules:\nRed($x, True) >>> Round($x, True) ::: Red people are round.\nRound($x, True) >>> Smart($x, True) ::: Round, smart people are cold.\nCold($x, True) && Young($x, True) >>> White($x, True) ::: If someone is cold and young then they are white.\nRed($x, True) >>> White($x, True) ::: Red people are round.\nYoung($x, True) && Round($x, True) >>> Red($x, True) ::: All round, young people are red.\nSmart($x, True) >>> Rough($x, True) ::: If someone is smart then they are rough.\nRough($x, True) && Young($x, True) >>> Red($x, True) ::: Rough, young people are red.\nYoung($x, True) && Smart($x, True) >>> Bob($x, True) ::: If Bob is round then Bob is smart.\nWhite($x, True) && Rough($x, True) && Young($x, True) >>> Charlie($x, True) ::: If Charlie is white and Charlie is rough then Charlie is young.\n------\nProblem:\nBob is smart. Bob is young. Charlie is cold. Charlie is round. Charlie is white. Charlie is young. Gary is smart. Gary is white. Harry is rough. Harry is smart. Harry is white. All red people are round. Round, smart people are cold. If someone is cold and young then they are white. Red people are round. All round, young people are red. If someone is smart then they are rough. Rough, young people are red. If Bob is round then Bob is smart. If Charlie is white and Charlie is rough then Charlie is young.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Harry is cold."
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1321_Q13",
    "context": "Bob is young. Dave is blue. Erin is blue. Erin is kind. Erin is white. Erin is young. Fiona is blue. Fiona is kind. Fiona is quiet. Fiona is white. If someone is kind then they are white. Young people are quiet. If someone is kind and white then they are blue. All quiet, kind people are white. If someone is quiet then they are kind. If someone is white then they are young. All blue, kind people are green.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Dave is not green.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nYoung($x, bool) ::: Is x young?\nBlue($x, bool) ::: Is x blue?\nKind($x, bool) ::: Is x kind?\nWhite($x, bool) ::: Is x white?\nQuiet($x, bool) ::: Is x quiet?\nGreen($x, bool) ::: Is x green?\nFacts:\nYoung(Bob, True) ::: Bob is young.\nBlue(Dave, True) ::: Dave is blue.\nBlue(Erin, True) ::: Erin is blue.\nKind(Erin, True) ::: Erin is kind.\nWhite(Erin, True) ::: Erin is white.\nYoung(Erin, True) ::: Erin is young.\nBlue(Fiona, True) ::: Fiona is blue.\nKind(Fiona, True) ::: Fiona is kind.\nQuiet(Fiona, True) ::: Fiona is quiet.\nWhite(Fiona, True) ::: Fiona is white.\nRules:\nYoung($x, True) >>> Quiet($x, True) ::: Young people are quiet.\nKind($x, True) >>> White($x, True) ::: If someone is kind then they are white.\nQuiet($x, True) >>> Kind($x, True) ::: If someone is quiet then they are kind.\nWhite($x, True) >>> Young($x, True) ::: If someone is white then they are young.\nKind($x, True) && White($x, True) >>> Blue($x, True) ::: If someone is kind and white then they are blue.\nQuiet($x, True) && Kind($x, True) >>> White($x, True) ::: All quiet, kind people are white.\nBlue($x, True) && Kind($x, True) >>> Green($x, True) ::: All blue, kind people are green.\nQuery:\nNot(Green(Dave, True)) ::: Dave is not green.\n------\nProblem:\nBob is blue. Bob is furry. Bob is green. Bob is kind. Bob is quiet. Bob is rough. Bob is white. Dave is blue. Dave is furry. Dave is green. Dave is kind. Dave is quiet. Dave is rough. Dave is white. Erin is blue. Erin is furry. Erin is green. Erin is kind. Erin is quiet. Erin is rough. Erin is white. Fiona is blue. Fiona is furry. Fiona is green. Fiona is kind. Fiona is quiet. Fiona is rough. Fiona is white. Harry is blue. Harry is furry. Harry is green. Harry is kind. Harry is quiet. Harry is rough. Harry is white. If someone is blue then they are green. If someone is blue then they are white. If someone is blue then they are furry. If someone is blue then they are kind. If someone is blue then they are quiet. If someone is blue then they are rough."
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-471_Q14",
    "context": "Anne is white. Charlie is cold. Charlie is round. Charlie is young. Gary is kind. Gary is nice. Gary is round. Gary is white. Gary is young. Harry is blue. Harry is cold. Harry is kind. Harry is white. Harry is young. White, kind things are blue. If something is white then it is kind. Nice things are kind. All blue, nice things are young. All blue, white things are nice. If something is round and not nice then it is not cold. Blue, young things are cold.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Charlie is kind.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nWhite($x, bool) ::: Is x white?\nKind($x, bool) ::: Is x kind?\nNice($x, bool) ::: Is x nice?\nRound($x, bool) ::: Is x round?\nCold($x, bool) ::: Is x cold?\nYoung($x, bool) ::: Is x young?\nFacts:\nWhite(Anne, True) ::: Anne is white.\nCold(Charlie, True) ::: Charlie is cold.\nRound(Charlie, True) ::: Charlie is round.\nYoung(Charlie, True) ::: Charlie is young.\nKind(Gary, True) ::: Gary is kind.\nNice(Gary, True) ::: Gary is nice.\nRound(Gary, True) ::: Gary is round.\nWhite(Gary, True) ::: Gary is white.\nYoung(Gary, True) ::: Gary is young.\nBlue(Harry, True) ::: Harry is blue.\nCold(Harry, True) ::: Harry is cold.\nKind(Harry, True) ::: Harry is kind.\nWhite(Harry, True) ::: Harry is white.\nYoung(Harry, True) ::: Harry is young.\nRules:\nWhite($x, True) >>> Kind($x, True) ::: White, kind things are blue.\nKind($x, True) >>> White($x, True) ::: If something is white then it is kind.\nNice($x, True) >>> Kind($x, True) ::: Nice things are kind.\nBlue($x, True) && Young($x, True) >>> Cold($x, True) ::: All blue, young things are cold.\nBlue($x, True) && White($x, True) >>> Nice($x, True) ::: All blue, white things are nice.\nRound($x, True) &&!Nice($x, True) >>>!Cold($x, True) ::: If something is round and not nice then it is not cold.\n------\nProblem:\nAnne is white. Anne is young. Anne is kind. Anne is nice. Anne is quiet. Anne is rough. Anne is round. Anne is furry. Anne is green. Anne is cold. Anne is blue. Anne is red. Anne is furry. Anne is quiet. Anne is rough. Anne is round. Anne is white. Anne is young. Anne is kind. Anne is nice. Anne is quiet. Anne is rough. Anne is round. Anne is white. Anne is young. Anne is kind. Anne is nice. Anne is quiet. Anne is rough. Anne is round. Anne is white. Anne is young. Anne is kind. Anne is nice. Anne is quiet. Anne is rough. Anne is round. Anne is white. Anne is young. Anne is kind. Anne is nice. Anne is quiet. Anne is rough. Anne is round. Anne is white. Anne is young. Anne is kind. Anne is nice. Anne is quiet. Anne is rough. Anne"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-99_Q16",
    "context": "Bob is green. Bob is white. Dave is blue. Dave is cold. Dave is green. Dave is white. Fiona is cold. Fiona is green. Fiona is white. Fiona is young. Gary is kind. Gary is white. Cold, white people are furry. If someone is furry then they are green. All cold people are young. If someone is kind and young then they are blue. If someone is furry then they are blue. All white, kind people are young. All kind, blue people are cold. If Bob is blue then Bob is kind.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is kind.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen($x, bool) ::: Is x green?\nWhite($x, bool) ::: Is x white?\nBlue($x, bool) ::: Is x blue?\nCold($x, bool) ::: Is x cold?\nFurry($x, bool) ::: Is x furry?\nKind($x, bool) ::: Is x kind?\nYoung($x, bool) ::: Is x young?\nFacts:\nGreen(Bob, True) ::: Bob is green.\nWhite(Bob, True) ::: Bob is white.\nBlue(Dave, True) ::: Dave is blue.\nCold(Dave, True) ::: Dave is cold.\nGreen(Dave, True) ::: Dave is green.\nWhite(Dave, True) ::: Dave is white.\nCold(Fiona, True) ::: Fiona is cold.\nGreen(Fiona, True) ::: Fiona is green.\nWhite(Fiona, True) ::: Fiona is white.\nYoung(Fiona, True) ::: Fiona is young.\nKind(Gary, True) ::: Gary is kind.\nWhite(Gary, True) ::: Gary is white.\nRules:\nCold($x, True) && White($x, True) >>> Furry($x, True) ::: Cold, white people are furry.\nFurry($x, True) >>> Green($x, True) ::: If someone is furry then they are green.\nCold($x, True) >>> Young($x, True) ::: All cold people are young.\nKind($x, True) && Young($x, True) >>> Blue($x, True) ::: If someone is kind and young then they are blue.\nFurry($x, True) >>> Blue($x, True) ::: If someone is furry then they are blue.\nWhite($x, True) && Kind($x, True) >>> Young($x, True) ::: All white, kind people are young.\nKind($x, True) && Blue($x, True) >>> Cold($x, True) ::: All kind, blue people are cold.\nBlue(Bob, True) >>> Kind(Bob, True) ::: If Bob is blue then Bob is kind.\nQuery:\nKind(Bob, True) ::: Bob is kind.\n------\nProblem:\nBob is green. Bob is white. Dave is blue. Dave is cold. Dave is green. Dave is white. Fiona is cold. Fiona is green. Fiona is white. Fiona is young. Gary is kind. Gary is white. Cold, white people are furry. If someone is furry then they are green. All cold people are young. If someone is kind and young then they are blue. If someone is furry then they are blue. All white, kind people are young. All kind, blue people are cold. If Bob is blue then Bob is kind.\nQuestion:\nBased on the above information, is the following statement true,"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-640_Q22",
    "context": "The bear is kind. The bear visits the mouse. The cow sees the lion. The cow visits the mouse. The lion is round. The lion sees the bear. The lion visits the bear. The lion visits the mouse. The mouse needs the bear. The mouse sees the bear. The mouse sees the cow. If something needs the bear then it is green. If the bear sees the lion then the lion is big. If something sees the mouse and the mouse sees the cow then the mouse needs the cow. If something needs the cow then it is round. If something is green then it sees the mouse. If something is green then it visits the bear. If something sees the mouse and it sees the bear then the bear is green. If something sees the cow and it is round then the cow visits the lion. If something is blue and it visits the cow then the cow sees the bear.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The lion sees the cow.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nKind($x, bool) ::: Is x kind?\nVisits($x, $y, bool) ::: Does x visit y?\nSees($x, $y, bool) ::: Does x see y?\nNeeds($x, $y, bool) ::: Does x need y?\nBig($x, bool) ::: Is x big?\nRound($x, bool) ::: Is x round?\nGreen($x, bool) ::: Is x green?\nBlue($x, bool) ::: Is x blue?\nFacts:\nKind(Bear, True) ::: The bear is kind.\nVisits(Bear, Mouse, True) ::: The bear visits the mouse.\nSees(Cow, Lion, True) ::: The cow sees the lion.\nVisits(Cow, Mouse, True) ::: The cow visits the mouse.\nRound(Lion, True) ::: The lion is round.\nSees(Lion, Bear, True) ::: The lion sees the bear.\nVisits(Lion, Bear, True) ::: The lion visits the bear.\nVisits(Lion, Mouse, True) ::: The lion visits the mouse.\nNeeds(Mouse, Bear, True) ::: The mouse needs the bear.\nSees(Mouse, Bear, True) ::: The mouse sees the bear.\nSees(Mouse, Cow, True) ::: The mouse sees the cow.\nRules:\nIf something needs the bear then it is green ::: If something needs the bear then it is green.\nIf the bear sees the lion then the lion is big ::: If the bear sees the lion then the lion is big.\nIf something sees the mouse and the mouse sees the cow then the mouse needs the cow ::: If something sees the mouse and the mouse sees the cow then the mouse needs the cow.\nIf something needs the cow then it is round ::: If something needs the cow then it is round.\nIf something is green then it sees the mouse ::: If something is green then it sees the mouse.\nIf something is green then it visits the bear ::: If something is green then it visits the bear.\nIf something sees the mouse and it sees the bear then the bear is green ::: If something sees the mouse and it sees the bear then the bear is green.\nIf something sees the cow and it is round then the cow visits the lion ::: If something sees the cow and it is round then the cow visits the lion.\nIf something is blue and it visits the cow then the cow sees the bear ::: If something is blue and it visits the cow then the cow sees the bear.\nQuery:\nSees(Lion, Cow, True) ::: The lion sees the cow.\n------\nProblem:\nThe bear is kind. The bear visits the mouse. The cow sees the lion. The cow visits the mouse. The lion is round. The lion sees the bear. The lion visits the bear. The lion visits the mouse. The mouse needs the bear. The mouse sees the bear. The mouse sees the cow. If something needs the bear"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-87_Q5",
    "context": "The cat is green. The cat needs the rabbit. The mouse chases the cat. The mouse is cold. The mouse is kind. The mouse needs the cat. The mouse needs the rabbit. The mouse visits the cat. The mouse visits the rabbit. The mouse visits the tiger. The rabbit needs the cat. The tiger is green. The tiger needs the mouse. The tiger needs the rabbit. The tiger visits the mouse. The tiger visits the rabbit. If something needs the cat then the cat is green. If something chases the tiger then it needs the tiger. If something needs the cat then it chases the mouse. If the tiger needs the mouse and the tiger visits the cat then the tiger is round. If something is round then it chases the tiger. If something is kind and it chases the cat then it needs the tiger. If something visits the tiger then the tiger needs the cat. If something is green and it chases the mouse then it is round.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The tiger chases the mouse.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen($x, bool) ::: Is x green?\nNeeds($x, $y, bool) ::: Does x need y?\nChases($x, $y, bool) ::: Does x chase y?\nVisits($x, $y, bool) ::: Does x visit y?\nKind($x, bool) ::: Is x kind?\nRound($x, bool) ::: Is x round?\nFacts:\nGreen(Cat, True) ::: The cat is green.\nNeeds(Cat, Rabbit, True) ::: The cat needs the rabbit.\nChases(Cat, Mouse, True) ::: The mouse chases the cat.\nCold(Mouse, True) ::: The mouse is cold.\nKind(Mouse, True) ::: The mouse is kind.\nNeeds(Mouse, Cat, True) ::: The mouse needs the cat.\nNeeds(Mouse, Rabbit, True) ::: The mouse needs the rabbit.\nVisits(Mouse, Cat, True) ::: The mouse visits the cat.\nVisits(Mouse, Rabbit, True) ::: The mouse visits the rabbit.\nVisits(Mouse, Tiger, True) ::: The mouse visits the tiger.\nNeeds(Rabbit, Cat, True) ::: The rabbit needs the cat.\nGreen(Tiger, True) ::: The tiger is green.\nNeeds(Tiger, Mouse, True) ::: The tiger needs the mouse.\nNeeds(Tiger, Rabbit, True) ::: The tiger needs the rabbit.\nVisits(Tiger, Mouse, True) ::: The tiger visits the mouse.\nVisits(Tiger, Rabbit, True) ::: The tiger visits the rabbit.\nRules:\nNeeds($x, $y, True) >>> Green($x, True) ::: If something needs the cat then the cat is green.\nChases($x, $y, True) >>> Needs($x, $y, True) ::: If something chases the tiger then it needs the tiger.\nNeeds($x, $y, True) >>> Chases($x, Mouse, True) ::: If something needs the cat then it chases the mouse.\nRound($x, True) && Visits($x, Cat) >>> Needs($x, Tiger, True) ::: If the tiger needs the mouse and the tiger visits the cat then the tiger is round.\nRound($x, True) >>> Chases($x, Tiger, True) ::: If something is round then it chases the tiger.\nKind($x, True) && Chases($x, Cat, True) >>> Needs($x, Tiger, True) ::: If something is kind and it chases the cat then it needs the tiger.\nVisits($x, Tiger) >>> Needs($x, Cat, True) ::: If something visits the tiger then the tiger needs the cat.\nGreen($x, True) >>> Chases"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-831_Q11",
    "context": "The bald eagle chases the cat. The bald eagle chases the dog. The bald eagle does not eat the cat. The bald eagle eats the dog. The cat does not chase the bald eagle. The cat eats the bald eagle. The cat is young. The cat sees the bald eagle. The cat sees the tiger. The dog chases the cat. The dog eats the bald eagle. The dog is blue. The tiger chases the bald eagle. The tiger chases the cat. If something is young then it does not chase the cat. If the cat chases the tiger then the tiger is nice. Nice things are big. If something chases the dog and the dog eats the bald eagle then it is nice. If something is big and it chases the cat then the cat chases the dog.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cat is big.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nEats($x, $y, bool) ::: Does x eat y?\nYoung($x, bool) ::: Is x young?\nSees($x, $y, bool) ::: Does x see y?\nNice($x, bool) ::: Is x nice?\nBig($x, bool) ::: Is x big?\nFacts:\nChases(BaldEagle, Cat, True) ::: The bald eagle chases the cat.\nChases(BaldEagle, Dog, True) ::: The bald eagle chases the dog.\nEats(BaldEagle, Cat, False) ::: The bald eagle does not eat the cat.\nEats(BaldEagle, Dog, True) ::: The bald eagle eats the dog.\nChases(Cat, BaldEagle, False) ::: The cat does not chase the bald eagle.\nEats(Cat, BaldEagle, True) ::: The cat eats the bald eagle.\nYoung(Cat, True) ::: The cat is young.\nSees(Cat, BaldEagle, True) ::: The cat sees the bald eagle.\nSees(Cat, Tiger, True) ::: The cat sees the tiger.\nChases(Dog, Cat, True) ::: The dog chases the cat.\nEats(Dog, BaldEagle, True) ::: The dog eats the bald eagle.\nBlue(Dog, True) ::: The dog is blue.\nChases(Tiger, BaldEagle, True) ::: The tiger chases the bald eagle.\nChases(Tiger, Cat, True) ::: The tiger chases the cat.\nRules:\nYoung($x, True) >>> Chases($x, Cat, False) ::: If something is young then it does not chase the cat.\nChases(Cat, Tiger, True) >>> Nice(Tiger, True) ::: If the cat chases the tiger then the tiger is nice.\nNice($x, True) >>> Big($x, True) ::: Nice things are big.\nChases(Dog, Cat, True) && Eats(Dog, BaldEagle, True) >>> Nice(Dog, True) ::: If something chases the dog and the dog eats the bald eagle then it is nice.\nBig($x, True) && Chases($x, Cat, True) >>> Chases(Cat, Dog, True) ::: If something is big and it chases the cat then the cat chases the dog.\nQuery:\nBig(Cat, True) ::: The cat is big.\n------\nProblem:\nThe cat is furry. The cat is green. The cat is red. The cat is white. The cat is young. The cat is quiet. The cat is rough. The cat is rough. The cat is furry. The cat is green. The"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-780_Q1",
    "context": "Anne is red. Bob is kind. Bob is young. Gary is cold. Gary is kind. Gary is quiet. Gary is red. Gary is round. Gary is young. Harry is kind. Harry is quiet. Harry is young. Cold things are round. Furry, young things are cold. If Gary is red then Gary is young. If something is furry and quiet then it is cold. Quiet things are furry. All young, round things are red. If Bob is young then Bob is quiet.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Harry is young.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRed($x, bool) ::: Is x red?\nKind($x, bool) ::: Is x kind?\nYoung($x, bool) ::: Is x young?\nCold($x, bool) ::: Is x cold?\nRound($x, bool) ::: Is x round?\nFurry($x, bool) ::: Is x furry?\nQuiet($x, bool) ::: Is x quiet?\nFacts:\nRed(Anne, True) ::: Anne is red.\nKind(Bob, True) ::: Bob is kind.\nYoung(Bob, True) ::: Bob is young.\nCold(Gary, True) ::: Gary is cold.\nKind(Gary, True) ::: Gary is kind.\nQuiet(Gary, True) ::: Gary is quiet.\nRed(Gary, True) ::: Gary is red.\nRound(Gary, True) ::: Gary is round.\nYoung(Gary, True) ::: Gary is young.\nKind(Harry, True) ::: Harry is kind.\nQuiet(Harry, True) ::: Harry is quiet.\nYoung(Harry, True) ::: Harry is young.\nRules:\nCold($x, True) >>> Round($x, True) ::: Cold things are round.\nFurry($x, True) && Young($x, True) >>> Cold($x, True) ::: Furry, young things are cold.\nRed($x, True) >>> Young($x, True) ::: If Gary is red then Gary is young.\nFurry($x, True) && Quiet($x, True) >>> Cold($x, True) ::: If something is furry and quiet then it is cold.\nQuiet($x, True) >>> Furry($x, True) ::: Quiet things are furry.\nAll($x, Young($x, True) && Round($x, True) >>> Red($x, True) ::: All young, round things are red.\nYoung($x, True) >>> Bob($x, True) ::: If Bob is young then Bob is quiet.\nQuery:\nYoung(Harry, True) ::: Harry is young.\n------\nProblem:\nAnne is furry. Anne is green. Anne is quiet. Anne is red. Anne is rough. Anne is white. Bob is furry. Bob is green. Bob is quiet. Bob is red. Bob is rough. Bob is white. Erin is furry. Erin is green. Erin is quiet. Erin is red. Erin is rough. Erin is white. Fiona is furry. Fiona is green. Fiona is quiet. Fiona is red. Fiona is rough. Fiona is white. Harry is furry. Harry is green. Harry is quiet. Harry is red. Harry is rough. Harry is white. Young people are furry. If Anne is green then Anne is quiet. If Anne is green then Anne is rough. If Anne is green then Anne is"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-228_Q11",
    "context": "The bear is blue. The bear is green. The bear is rough. The bear likes the cow. The bear likes the rabbit. The bear sees the squirrel. The cow likes the bear. The cow visits the bear. The rabbit likes the bear. The rabbit sees the bear. The squirrel is green. The squirrel likes the cow. The squirrel sees the bear. The squirrel sees the rabbit. If the rabbit sees the bear and the rabbit sees the squirrel then the bear likes the squirrel. If someone is green and they see the bear then they like the rabbit. If someone sees the cow then the cow visits the rabbit. If someone likes the bear and the bear visits the cow then the bear sees the rabbit. If the rabbit sees the bear then the rabbit likes the squirrel. If someone sees the bear and they see the rabbit then they are big. If someone visits the bear then the bear visits the cow. If someone visits the rabbit then they like the rabbit. If the bear sees the rabbit and the bear visits the cow then the rabbit sees the cow.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cow likes the rabbit.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue($x, bool) ::: Is x blue?\nGreen($x, bool) ::: Is x green?\nRough($x, bool) ::: Is x rough?\nLikes($x, $y, bool) ::: Does x like y?\nVisits($x, $y, bool) ::: Does x visit y?\nSees($x, $y, bool) ::: Does x see y?\nBig($x, bool) ::: Is x big?\nFacts:\nBlue(Bear, True) ::: The bear is blue.\nGreen(Bear, True) ::: The bear is green.\nRough(Bear, True) ::: The bear is rough.\nLikes(Bear, Cow, True) ::: The bear likes the cow.\nLikes(Bear, Rabbit, True) ::: The bear likes the rabbit.\nSees(Bear, Squirrel, True) ::: The bear sees the squirrel.\nLikes(Cow, Bear, True) ::: The cow likes the bear.\nVisits(Cow, Bear, True) ::: The cow visits the bear.\nLikes(Rabbit, Bear, True) ::: The rabbit likes the bear.\nSees(Rabbit, Bear, True) ::: The rabbit sees the bear.\nGreen(Squirrel, True) ::: The squirrel is green.\nLikes(Squirrel, Cow, True) ::: The squirrel likes the cow.\nSees(Squirrel, Bear, True) ::: The squirrel sees the bear.\nSees(Squirrel, Rabbit, True) ::: The squirrel sees the rabbit.\nRules:\nIf the rabbit sees the bear and the rabbit sees the squirrel then the bear likes the squirrel ::: If the rabbit sees the bear and the rabbit sees the squirrel then the bear likes the squirrel.\nIf someone is green and they see the bear then they like the rabbit ::: If someone is green and they see the bear then they like the rabbit.\nIf someone sees the cow then the cow visits the rabbit ::: If someone sees the cow then the cow visits the rabbit.\nIf someone likes the bear and the bear visits the cow then the bear sees the rabbit ::: If someone likes the bear and the bear visits the cow then the bear sees the rabbit.\nIf the rabbit sees the bear then the rabbit likes the squirrel ::: If the rabbit sees the bear then the rabbit likes the squirrel.\nIf someone sees the bear and they see the rabbit then they are big ::: If someone sees the bear and they see the rabbit then they are big.\nIf someone visits the bear then the bear visits the cow ::: If someone visits the bear then the bear visits the cow.\nIf someone visits the rabbit then they like the rabbit ::: If someone visits the rabbit then they like the rabbit.\nIf the bear sees the rabbit and"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-968_Q4",
    "context": "The bald eagle chases the squirrel. The bald eagle is rough. The bald eagle is round. The dog chases the squirrel. The dog is not blue. The dog visits the squirrel. The squirrel chases the tiger. The squirrel is round. The squirrel does not visit the dog. The tiger is round. The tiger visits the squirrel. If someone chases the squirrel then the squirrel is not kind. If someone likes the dog then the dog is rough. If someone is rough and they visit the tiger then the tiger does not chase the squirrel. If someone visits the tiger and they visit the dog then the tiger likes the squirrel. If someone chases the dog then the dog chases the tiger. If someone visits the bald eagle then they like the dog. If someone chases the dog and the dog is red then they chase the tiger. If someone is rough then they visit the bald eagle. If the squirrel likes the dog and the dog likes the tiger then the squirrel visits the tiger.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bald eagle does not visit the bald eagle.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nRough($x, bool) ::: Is x rough?\nRound($x, bool) ::: Is x round?\nKind($x, bool) ::: Is x kind?\nLikes($x, $y, bool) ::: Does x like y?\nVisits($x, $y, bool) ::: Does x visit y?\nFacts:\nChases(BaldEagle, Squirrel, True) ::: The bald eagle chases the squirrel.\nRough(BaldEagle, True) ::: The bald eagle is rough.\nRound(BaldEagle, True) ::: The bald eagle is round.\nChases(Dog, Squirrel, True) ::: The dog chases the squirrel.\nNot(Blue(Dog, True)) ::: The dog is not blue.\nVisits(Dog, Squirrel, True) ::: The dog visits the squirrel.\nChases(Squirrel, Tiger, True) ::: The squirrel chases the tiger.\nRound(Squirrel, True) ::: The squirrel is round.\nNot(Visits(Squirrel, Dog, True)) ::: The squirrel does not visit the dog.\nRound(Tiger, True) ::: The tiger is round.\nVisits(Tiger, Squirrel, True) ::: The tiger visits the squirrel.\nNot(Kind(Squirrel, True)) ::: If someone chases the squirrel then the squirrel is not kind.\nLikes(Dog, Squirrel, True) ::: If someone likes the dog then the dog is rough.\nRough(Dog, True) && Visits(Dog, Tiger) >>> Not(Chases(Tiger, Squirrel, True)) ::: If someone is rough and they visit the tiger then the tiger does not chase the squirrel.\nVisits(Dog, Tiger) && Visits(Dog, BaldEagle) >>> Likes(Tiger, Squirrel, True) ::: If someone visits the tiger and they visit the dog then the tiger likes the squirrel.\nChases(Dog, Squirrel) >>> Chases(Squirrel, Tiger) ::: If someone chases the dog then the dog chases the tiger.\nVisits(BaldEagle, Dog) >>> Likes(Dog, Squirrel, True) ::: If someone visits the bald eagle then they like the dog.\nChases(Dog, Tiger) && Red(Dog, True) >>> Chases(Tiger, Squirrel) ::: If someone chases the dog and the dog is red then they chase the tiger.\nRough(Dog) >>> Visits(Dog, BaldEagle) ::: If the squirrel likes the dog and the dog likes the tiger then the squirrel visits the tiger.\nQuery:\nNot(Visits(BaldEagle, BaldEagle, True)) ::: The bald eagle does not visit the bald eagle.\n------"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-361_Q4",
    "context": "Dave is furry. Dave is smart. Erin is blue. Erin is cold. Erin is smart. Fiona is not furry. Fiona is round. Gary is cold. Gary is furry. Gary is round. Gary is smart. If Dave is furry then Dave is white. If someone is white then they are cold. Kind people are furry. All smart, cold people are round. Round, white people are blue. If someone is blue and white then they are kind.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Erin is not round.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nFurry($x, bool) ::: Is x furry?\nSmart($x, bool) ::: Is x smart?\nBlue($x, bool) ::: Is x blue?\nCold($x, bool) ::: Is x cold?\nRound($x, bool) ::: Is x round?\nWhite($x, bool) ::: Is x white?\nKind($x, bool) ::: Is x kind?\nFacts:\nFurry(Dave, True) ::: Dave is furry.\nSmart(Dave, True) ::: Dave is smart.\nBlue(Erin, True) ::: Erin is blue.\nCold(Erin, True) ::: Erin is cold.\nSmart(Erin, True) ::: Erin is smart.\nNot(Furry(Fiona, True)) ::: Fiona is not furry.\nRound(Fiona, True) ::: Fiona is round.\nCold(Gary, True) ::: Gary is cold.\nFurry(Gary, True) ::: Gary is furry.\nRound(Gary, True) ::: Gary is round.\nSmart(Gary, True) ::: Gary is smart.\nRules:\nFurry($x, True) >>> White($x, True) ::: If Dave is furry then Dave is white.\nWhite($x, True) >>> Cold($x, True) ::: If someone is white then they are cold.\nFurry($x, True) >>> Kind($x, True) ::: Kind people are furry.\nSmart($x, True) && Cold($x, True) >>> Round($x, True) ::: All smart, cold people are round.\nRound($x, True) && White($x, True) >>> Blue($x, True) ::: Round, white people are blue.\nBlue($x, True) && White($x, True) >>> Kind($x, True) ::: If someone is blue and white then they are kind.\nQuery:\nNot(Round(Erin, True)) ::: Erin is not round.\n------\nProblem:\nDave is furry. Dave is smart. Erin is blue. Erin is cold. Erin is smart. Fiona is not furry. Fiona is round. Gary is cold. Gary is furry. Gary is round. Gary is smart. If Dave is furry then Dave is white. If someone is white then they are cold. Kind people are furry. All smart, cold people are round. Round, white people are blue. If someone is blue and white then they are kind.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Erin is not round.\n###\nPredicates:\nFurry($x, bool) ::: Is x furry?\nSmart($x, bool) ::: Is x smart?\nBlue($x, bool) ::: Is x blue?\nCold($x, bool) ::: Is x cold?\nRound($x, bool) ::: Is x round?\nWhite($x, bool) ::: Is x white?\nKind($x, bool) ::: Is x kind?\nFacts:"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-323_Q12",
    "context": "The bald eagle likes the cow. The cat eats the cow. The cat is blue. The cat likes the cow. The cat likes the rabbit. The cat needs the rabbit. The cow is not red. The cow needs the cat. The cow needs the rabbit. The rabbit is nice. The rabbit is round. If something needs the bald eagle and the bald eagle is green then the bald eagle is nice. If something eats the rabbit and the rabbit is not blue then the rabbit eats the cat. If something eats the rabbit then it needs the bald eagle. If something is red and it likes the bald eagle then it needs the rabbit. If something is red then it eats the rabbit. If something likes the cow then it is red. If something needs the bald eagle then the bald eagle is green. If the bald eagle is green and the bald eagle is not nice then the bald eagle eats the cat. If something is red and it does not eat the cat then the cat is blue.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bald eagle is not nice.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nLikes($x, $y, bool) ::: Does x like y?\nEats($x, $y, bool) ::: Does x eat y?\nNeeds($x, $y, bool) ::: Does x need y?\nIs($x, $y, bool) ::: Is x y?\nIsRed($x, bool) ::: Is x red?\nIsBlue($x, bool) ::: Is x blue?\nIsNice($x, bool) ::: Is x nice?\nIsGreen($x, bool) ::: Is x green?\nFacts:\nLikes(BaldEagle, Cow, True) ::: The bald eagle likes the cow.\nEats(Cat, Cow, True) ::: The cat eats the cow.\nIsBlue(Cat, True) ::: The cat is blue.\nLikes(Cat, Cow, True) ::: The cat likes the cow.\nLikes(Cat, Rabbit, True) ::: The cat likes the rabbit.\nNeeds(Cat, Rabbit, True) ::: The cat needs the rabbit.\nIsNotRed(Cow, True) ::: The cow is not red.\nNeeds(Cow, Cat, True) ::: The cow needs the cat.\nNeeds(Cow, Rabbit, True) ::: The cow needs the rabbit.\nIsNice(Rabbit, True) ::: The rabbit is nice.\nIsRound(Rabbit, True) ::: The rabbit is round.\nIfSomethingNeedsBaldEagleAndBaldEagleIsGreenThenBaldEagleIsNice(Something, BaldEagle, True) ::: If something needs the bald eagle and the bald eagle is green then the bald eagle is nice.\nIfSomethingEatsRabbitAndRabbitIsNotBlueThenRabbitEatsCat(Something, Rabbit, True) ::: If something eats the rabbit and the rabbit is not blue then the rabbit eats the cat.\nIfSomethingEatsRabbitThenItNeedsBaldEagle(Something, Rabbit, True) ::: If something eats the rabbit then it needs the bald eagle.\nIfSomethingIsRedAndItLikesBaldEagleThenItNeedsRabbit(Something, BaldEagle, True) ::: If something is red and it likes the bald eagle then it needs the rabbit.\nIfSomethingIsRedThenItEatsRabbit(Something, Rabbit, True) ::: If something is red then it eats the rabbit.\nIfSomethingLikesCowThenItIsRed(Something, Cow, True) ::: If something likes the cow then it is red.\nIfSomethingNeedsBaldEagleThenBaldEagleIsGreen(Something, BaldEagle, True) ::: If something needs the bald eagle then the bald eagle is green.\nIfBaldEagleIsGreenAndBaldEagleIsNotNiceThenBaldEagleEatsCat(BaldEagle, Cat, True) ::: If the bald eagle is green and the bald eagle is not nice then the bald eagle eats the cat.\nIfSomethingIsRedAndIt"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-356_Q2",
    "context": "The cow eats the mouse. The cow eats the squirrel. The cow likes the rabbit. The cow likes the squirrel. The mouse is cold. The mouse likes the rabbit. The mouse visits the cow. The rabbit is big. The rabbit likes the mouse. The rabbit visits the mouse. The squirrel eats the cow. The squirrel eats the mouse. The squirrel is green. The squirrel is rough. The squirrel likes the cow. The squirrel likes the mouse. If something likes the cow then it visits the mouse. If something likes the cow then the cow is green. If something eats the squirrel and the squirrel likes the rabbit then it eats the rabbit. If something is cold then it likes the cow. If something visits the squirrel then the squirrel likes the rabbit. If the cow likes the rabbit then the cow is cold. If something likes the rabbit and it visits the mouse then the mouse visits the squirrel. If something is rough and it likes the squirrel then the squirrel eats the rabbit.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The mouse does not visit the cow.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y, bool) ::: Does x eat y?\nLikes($x, $y, bool) ::: Does x like y?\nVisits($x, $y, bool) ::: Does x visit y?\nCold($x, bool) ::: Is x cold?\nBig($x, bool) ::: Is x big?\nGreen($x, bool) ::: Is x green?\nRough($x, bool) ::: Is x rough?\nFacts:\nEats(Cow, Mouse, True) ::: The cow eats the mouse.\nEats(Cow, Squirrel, True) ::: The cow eats the squirrel.\nLikes(Cow, Rabbit, True) ::: The cow likes the rabbit.\nLikes(Cow, Squirrel, True) ::: The cow likes the squirrel.\nCold(Mouse, True) ::: The mouse is cold.\nLikes(Mouse, Rabbit, True) ::: The mouse likes the rabbit.\nVisits(Mouse, Cow, True) ::: The mouse visits the cow.\nBig(Rabbit, True) ::: The rabbit is big.\nLikes(Rabbit, Mouse, True) ::: The rabbit likes the mouse.\nVisits(Rabbit, Mouse, True) ::: The rabbit visits the mouse.\nEats(Squirrel, Cow, True) ::: The squirrel eats the cow.\nEats(Squirrel, Mouse, True) ::: The squirrel eats the mouse.\nGreen(Squirrel, True) ::: The squirrel is green.\nRough(Squirrel, True) ::: The squirrel is rough.\nLikes(Squirrel, Cow, True) ::: The squirrel likes the cow.\nLikes(Squirrel, Mouse, True) ::: The squirrel likes the mouse.\nRules:\nEats($x, $y, True) >>> Likes($x, $y, True) ::: If something eats the squirrel and the squirrel likes the rabbit then it eats the rabbit.\nCold($x, True) >>> Likes($x, Cow, True) ::: If something is cold then it likes the cow.\nVisits($x, $y, True) >>> Likes($y, $x, True) ::: If something visits the squirrel then the squirrel likes the rabbit.\nLikes($x, Cow, True) >>> Likes($x, Rabbit, True) ::: If the cow likes the rabbit then the cow is cold.\nLikes($x, $y, True) >>> Visits($y, $x, True) ::: If something likes the rabbit and it visits the mouse then the mouse visits the squirrel.\nLikes($x, $y, True) && Visits($x, $y, True) >>> Visits($y, $x, True) ::: If something likes the cow then it visits the mouse.\nLikes($x, $y, True) >>> Green($y, True) ::: If something likes the cow then the cow is green"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-576_Q8",
    "context": "The dog is not red. The lion is red. The lion is rough. The lion sees the dog. The rabbit is not green. The rabbit does not like the squirrel. The rabbit needs the dog. The rabbit sees the dog. The squirrel is blue. The squirrel needs the lion. The squirrel sees the lion. If the lion likes the dog then the dog sees the squirrel. If something likes the dog and the dog needs the rabbit then the rabbit needs the squirrel. If something sees the squirrel and it likes the rabbit then the rabbit needs the dog. If the squirrel needs the rabbit then the squirrel likes the rabbit. If something is green and it needs the dog then it sees the lion. If something is rough then it needs the squirrel. If something likes the lion and the lion needs the squirrel then the squirrel is rough. If something needs the squirrel then it likes the lion. If the dog does not need the squirrel then the dog sees the rabbit.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The squirrel is not rough.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRed($x, bool) ::: Is x red?\nRough($x, bool) ::: Is x rough?\nLikes($x, $y, bool) ::: Does x like y?\nNeeds($x, $y, bool) ::: Does x need y?\nSees($x, $y, bool) ::: Does x see y?\nFacts:\nNotRed(Dog, True) ::: The dog is not red.\nRed(Lion, True) ::: The lion is red.\nRough(Lion, True) ::: The lion is rough.\nSees(Lion, Dog, True) ::: The lion sees the dog.\nNotGreen(Rabbit, True) ::: The rabbit is not green.\nNotLikes(Rabbit, Squirrel, True) ::: The rabbit does not like the squirrel.\nNeeds(Rabbit, Dog, True) ::: The rabbit needs the dog.\nSees(Rabbit, Dog, True) ::: The rabbit sees the dog.\nBlue(Squirrel, True) ::: The squirrel is blue.\nNeeds(Squirrel, Lion, True) ::: The squirrel needs the lion.\nSees(Squirrel, Lion, True) ::: The squirrel sees the lion.\nIfLikes(Lion, Dog, True) >>> DogSees(Squirrel, True) ::: If the lion likes the dog then the dog sees the squirrel.\nIfLikes(x, Dog, True) && Needs(Dog, Rabbit, True) >>> Needs(Rabbit, Squirrel, True) ::: If something likes the dog and the dog needs the rabbit then the rabbit needs the squirrel.\nIfSees(Squirrel, x, True) && Likes(x, Rabbit, True) >>> Needs(Rabbit, Dog, True) ::: If something sees the squirrel and it likes the rabbit then the rabbit needs the dog.\nIfNeeds(Squirrel, Rabbit, True) >>> Likes(Squirrel, Rabbit, True) ::: If the squirrel needs the rabbit then the squirrel likes the rabbit.\nIfGreen(x, True) && Needs(x, Dog, True) >>> Sees(x, Lion, True) ::: If something is green and it needs the dog then it sees the lion.\nIfRough(x, True) >>> Needs(x, Squirrel, True) ::: If something is rough then it needs the squirrel.\nIfLikes(Lion, x, True) && Needs(x, Squirrel, True) >>> SquirrelRough(True) ::: If something likes the lion and the lion needs the squirrel then the squirrel is rough.\nIfNeeds(x, Squirrel, True) >>> Likes(x, Lion, True) ::: If something needs the squirrel then it likes the lion.\nIfNotNeeds(Dog, Squirrel, True) >>> DogSees(Rabbit, True) ::: If the dog does not"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-897_Q11",
    "context": "The bald eagle chases the tiger. The bald eagle is big. The bald eagle is green. The cow is big. The cow is young. The cow likes the tiger. The rabbit is round. The rabbit needs the cow. The rabbit needs the tiger. The tiger likes the cow. If someone likes the tiger and the tiger is green then they chase the rabbit. If someone is green then they chase the cow. If someone chases the rabbit and they like the tiger then the tiger needs the cow. If someone is big and they chase the bald eagle then the bald eagle needs the tiger. If someone is green and they chase the cow then they need the cow. If someone is big and they need the cow then the cow is green.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cow needs the cow.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y) ::: Does x chase y?\nBig($x, bool) ::: Is x big?\nGreen($x, bool) ::: Is x green?\nYoung($x, bool) ::: Is x young?\nLikes($x, $y) ::: Does x like y?\nNeeds($x, $y) ::: Does x need y?\nFacts:\nChases(BaldEagle, Tiger) ::: The bald eagle chases the tiger.\nBig(BaldEagle, True) ::: The bald eagle is big.\nGreen(BaldEagle, True) ::: The bald eagle is green.\nBig(Cow, True) ::: The cow is big.\nYoung(Cow, True) ::: The cow is young.\nLikes(Cow, Tiger) ::: The cow likes the tiger.\nRound(Rabbit, True) ::: The rabbit is round.\nNeeds(Rabbit, Cow) ::: The rabbit needs the cow.\nNeeds(Rabbit, Tiger) ::: The rabbit needs the tiger.\nLikes(Tiger, Cow) ::: The tiger likes the cow.\nRules:\nChases($x, $y) >>> Likes($x, Tiger) && Green($x, True) ::: If someone likes the tiger and the tiger is green then they chase the rabbit.\nChases($x, $y) >>> Green($x, True) ::: If someone chases the rabbit and they like the tiger then the tiger needs the cow.\nChases($x, $y) >>> Likes($x, Tiger) && Green($x, True) ::: If someone likes the tiger and the tiger is green then they chase the rabbit.\nChases($x, $y) >>> Big($x, True) && Chases($x, BaldEagle) ::: If someone is big and they chase the bald eagle then the bald eagle needs the tiger.\nChases($x, $y) >>> Green($x, True) && Needs($x, Cow) ::: If someone is green and they chase the cow then they need the cow.\nChases($x, $y) >>> Big($x, True) && Needs($x, Cow) ::: If someone is big and they need the cow then the cow is green.\nQuery:\nNeeds(Cow, Cow, True) ::: The cow needs the cow.\n------\nProblem:\nThe cat is big. The cat is green. The cat is round. The cat is young. The cat is white. The cat is furry. The cat is quiet. The cat is rough. The cat is red. The cat is rough. The cat is furry. The cat is quiet. The cat is white. The cat is young. The cat is green. The cat is red. The cat is furry. The cat is quiet. The cat is white. The cat is young. The cat is green. The cat is red. The cat is furry. The cat is quiet. The cat is white. The cat is young. The cat is green. The cat is red. The"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-357_Q2",
    "context": "The bald eagle is red. The bald eagle needs the cat. The bald eagle needs the squirrel. The bald eagle sees the squirrel. The cat eats the squirrel. The cow eats the cat. The cow eats the squirrel. The cow needs the bald eagle. The cow sees the bald eagle. The cow sees the cat. The cow sees the squirrel. The squirrel is kind. The squirrel is red. The squirrel needs the cat. If something is green then it eats the cat. If something sees the cow then it sees the cat. If something sees the squirrel then it is green. If something sees the bald eagle and the bald eagle is young then the bald eagle is big. If something needs the cat and it eats the cat then the cat sees the squirrel. If something is red and it eats the cat then it sees the bald eagle. If something needs the bald eagle then it needs the squirrel. If the bald eagle is red and the bald eagle sees the cow then the cow is young.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The squirrel does not need the cat.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRed($x, bool) ::: Is x red?\nKind($x, bool) ::: Is x kind?\nYoung($x, bool) ::: Is x young?\nBig($x, bool) ::: Is x big?\nNeeds($x, $y, bool) ::: Does x need y?\nEats($x, $y, bool) ::: Does x eat y?\nSees($x, $y, bool) ::: Does x see y?\nFacts:\nRed(BaldEagle, True) ::: The bald eagle is red.\nNeeds(BaldEagle, Cat, True) ::: The bald eagle needs the cat.\nNeeds(BaldEagle, Squirrel, True) ::: The bald eagle needs the squirrel.\nSees(BaldEagle, Squirrel, True) ::: The bald eagle sees the squirrel.\nEats(Cat, Squirrel, True) ::: The cat eats the squirrel.\nEats(Cow, Cat, True) ::: The cow eats the cat.\nEats(Cow, Squirrel, True) ::: The cow eats the squirrel.\nNeeds(Cow, BaldEagle, True) ::: The cow needs the bald eagle.\nSees(Cow, BaldEagle, True) ::: The cow sees the bald eagle.\nSees(Cow, Cat, True) ::: The cow sees the cat.\nSees(Cow, Squirrel, True) ::: The cow sees the squirrel.\nKind(Squirrel, True) ::: The squirrel is kind.\nRed(Squirrel, True) ::: The squirrel is red.\nNeeds(Squirrel, Cat, True) ::: The squirrel needs the cat.\nRules:\nIf something is green then it eats the cat ::: If something is green then it eats the cat.\nIf something sees the cow then it sees the cat ::: If something sees the cow then it sees the cat.\nIf something sees the squirrel then it is green ::: If something sees the squirrel then it is green.\nIf something sees the bald eagle and the bald eagle is young then the bald eagle is big ::: If something sees the bald eagle and the bald eagle is young then the bald eagle is big.\nIf something needs the cat and it eats the cat then the cat sees the squirrel ::: If something needs the cat and it eats the cat then the cat sees the squirrel.\nIf something is red and it eats the cat then it sees the bald eagle ::: If something is red and it eats the cat then it sees the bald eagle.\nIf something needs the bald eagle then it needs the squirrel ::: If something needs the bald eagle then it needs the squirrel.\nIf the bald eagle is red and the bald eagle sees the cow then the cow is young ::: If the bald eagle is red and the bald eagle sees the cow then the cow is young.\nQuery:\nNeeds(Squirrel, Cat, False) ::: The squ"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1102_Q11",
    "context": "Charlie is kind. Erin is blue. Erin is furry. Erin is kind. Erin is quiet. Gary is furry. Gary is red. Harry is big. Harry is furry. Harry is kind. Harry is nice. Harry is quiet. Nice, big things are quiet. If something is blue then it is big. All big, red things are kind. Big things are kind. Red, kind things are nice. If something is red then it is blue. If something is quiet and kind then it is big. If Erin is nice and Erin is big then Erin is red.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is quiet.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nKind($x, bool) ::: Is x kind?\nBlue($x, bool) ::: Is x blue?\nFurry($x, bool) ::: Is x furry?\nQuiet($x, bool) ::: Is x quiet?\nBig($x, bool) ::: Is x big?\nNice($x, bool) ::: Is x nice?\nRules:\nKind($x, True) >>> Big($x, True) ::: Big things are kind.\nBlue($x, True) >>> Big($x, True) ::: If something is blue then it is big.\nBig($x, True) >>> Nice($x, True) ::: Big things are nice.\nRed($x, True) >>> Kind($x, True) ::: All big, red things are kind.\nKind($x, True) >>> Nice($x, True) ::: Red, kind things are nice.\nQuiet($x, True) && Kind($x, True) >>> Big($x, True) ::: If something is quiet and kind then it is big.\nNice($x, True) && Big($x, True) >>> Red($x, True) ::: If Erin is nice and Erin is big then Erin is red.\nFacts:\nKind(Charlie, True) ::: Charlie is kind.\nBlue(Erin, True) ::: Erin is blue.\nFurry(Erin, True) ::: Erin is furry.\nKind(Erin, True) ::: Erin is kind.\nQuiet(Erin, True) ::: Erin is quiet.\nFurry(Gary, True) ::: Gary is furry.\nRed(Gary, True) ::: Gary is red.\nBig(Harry, True) ::: Harry is big.\nFurry(Harry, True) ::: Harry is furry.\nKind(Harry, True) ::: Harry is kind.\nNice(Harry, True) ::: Harry is nice.\nQuiet(Harry, True) ::: Harry is quiet.\nQuery:\nQuiet(Gary, True) ::: Gary is quiet.\n------\nProblem:\nCharlie is big. Charlie is furry. Charlie is kind. Charlie is quiet. Charlie is red. Charlie is rough. Charlie is white. Erin is big. Erin is furry. Erin is kind. Erin is quiet. Erin is rough. Erin is white. Fiona is big. Fiona is furry. Fiona is kind. Fiona is quiet. Fiona is rough. Fiona is white. Harry is big. Harry is furry. Harry is kind. Harry is quiet. Harry is rough. Harry is white. Young people are furry. If someone is red then they are young. If someone is kind then they are white. If someone is white then they are rough. If someone is rough then they are quiet. If someone is quiet then they are kind. If someone is kind then they are big. If someone is big then they are furry. If someone is furry then they are white. If someone is white then they are rough. If someone is rough then they are quiet. If someone is quiet then they are kind. If someone is kind"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-513_Q12",
    "context": "Anne is blue. Anne is red. Anne is smart. Dave is big. Dave is cold. Dave is nice. Fiona is smart. Harry is blue. Harry is cold. Harry is nice. Harry is red. Harry is smart. Kind things are nice. All cold, nice things are blue. Cold things are kind. Smart things are cold. All blue, smart things are red.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Fiona is not red.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue($x, bool) ::: Is x blue?\nRed($x, bool) ::: Is x red?\nSmart($x, bool) ::: Is x smart?\nBig($x, bool) ::: Is x big?\nCold($x, bool) ::: Is x cold?\nNice($x, bool) ::: Is x nice?\nKind($x, bool) ::: Is x kind?\nFacts:\nBlue(Anne, True) ::: Anne is blue.\nRed(Anne, True) ::: Anne is red.\nSmart(Anne, True) ::: Anne is smart.\nBig(Dave, True) ::: Dave is big.\nCold(Dave, True) ::: Dave is cold.\nNice(Dave, True) ::: Dave is nice.\nSmart(Fiona, True) ::: Fiona is smart.\nBlue(Harry, True) ::: Harry is blue.\nCold(Harry, True) ::: Harry is cold.\nNice(Harry, True) ::: Harry is nice.\nRed(Harry, True) ::: Harry is red.\nSmart(Harry, True) ::: Harry is smart.\nRules:\nKind($x, True) >>> Nice($x, True) ::: Kind things are nice.\nCold($x, True) >>> Kind($x, True) ::: Cold things are kind.\nSmart($x, True) >>> Cold($x, True) ::: Smart things are cold.\nBlue($x, True) && Smart($x, True) >>> Red($x, True) ::: All blue, smart things are red.\nQuery:\nNot(Red(Fiona, True)) ::: Fiona is not red.\n------\nProblem:\nAnne is blue. Anne is red. Anne is smart. Dave is big. Dave is cold. Dave is nice. Fiona is smart. Harry is blue. Harry is cold. Harry is nice. Harry is red. Harry is smart. Kind things are nice. All cold, nice things are blue. Cold things are kind. Smart things are cold. All blue, smart things are red.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Fiona is not red.\n###\nPredicates:\nBlue($x, bool) ::: Is x blue?\nRed($x, bool) ::: Is x red?\nSmart($x, bool) ::: Is x smart?\nBig($x, bool) ::: Is x big?\nCold($x, bool) ::: Is x cold?\nNice($x, bool) ::: Is x nice?\nKind($x, bool) ::: Is x kind?\nFacts:\nBlue(Anne, True) ::: Anne is blue.\nRed(Anne, True) ::: Anne is red.\nSmart(Anne, True) ::: Anne is smart.\nBig(Dave, True) ::: Dave is big.\nCold(Dave, True) ::: Dave is cold.\nNice(Dave, True) ::: Dave is nice.\nSmart(Fiona, True) ::: Fiona is smart.\nBlue"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-997_Q4",
    "context": "Charlie is cold. Charlie is nice. Charlie is rough. Charlie is round. Charlie is smart. Dave is round. Dave is white. Fiona is rough. Fiona is smart. Fiona is white. Gary is smart. Rough, round things are cold. All smart things are round. All big, nice things are rough. If Charlie is white then Charlie is nice. If something is nice and smart then it is big. If something is round then it is nice.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is not round.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nNice($x, bool) ::: Is x nice?\nRough($x, bool) ::: Is x rough?\nRound($x, bool) ::: Is x round?\nSmart($x, bool) ::: Is x smart?\nWhite($x, bool) ::: Is x white?\nBig($x, bool) ::: Is x big?\nFacts:\nCold(Charlie, True) ::: Charlie is cold.\nNice(Charlie, True) ::: Charlie is nice.\nRough(Charlie, True) ::: Charlie is rough.\nRound(Charlie, True) ::: Charlie is round.\nSmart(Charlie, True) ::: Charlie is smart.\nWhite(Charlie, True) ::: Charlie is white.\nRound(Dave, True) ::: Dave is round.\nWhite(Dave, True) ::: Dave is white.\nRough(Fiona, True) ::: Fiona is rough.\nSmart(Fiona, True) ::: Fiona is smart.\nWhite(Fiona, True) ::: Fiona is white.\nSmart(Gary, True) ::: Gary is smart.\nRules:\nRound($x, True) && Rough($x, True) >>> Cold($x, True) ::: Rough, round things are cold.\nSmart($x, True) >>> Round($x, True) ::: All smart things are round.\nBig($x, True) && Nice($x, True) && Smart($x, True) >>> Rough($x, True) ::: All big, nice things are rough.\nWhite($x, True) >>> Nice($x, True) ::: If Charlie is white then Charlie is nice.\nNice($x, True) && Smart($x, True) >>> Big($x, True) ::: If something is nice and smart then it is big.\nRound($x, True) >>> Nice($x, True) ::: If something is round then it is nice.\nQuery:\nNot(Round(Gary, True)) ::: Gary is not round.\n------\nProblem:\nCharlie is cold. Charlie is nice. Charlie is rough. Charlie is round. Charlie is smart. Dave is round. Dave is white. Fiona is rough. Fiona is smart. Fiona is white. Gary is smart. Rough, round things are cold. All smart things are round. All big, nice things are rough. If Charlie is white then Charlie is nice. If something is nice and smart then it is big. If something is round then it is nice.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Charlie is not round.\n###\nPredicates:\nCold($x, bool) ::: Is x cold?\nNice($x, bool) ::: Is x nice?\nRough($x, bool) ::: Is x rough?\nRound($x, bool) ::: Is x round?\nSmart($x, bool) ::: Is x smart?\nWhite($x, bool) ::: Is x white?\nBig($x, bool) ::: Is x big"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-99_Q13",
    "context": "The bald eagle is cold. The bald eagle sees the bear. The bear is big. The bear is not cold. The bear is green. The bear likes the cat. The cat chases the mouse. The cat is big. The cat is young. The cat likes the bald eagle. The mouse likes the cat. If something chases the cat and it likes the bald eagle then the bald eagle is not green. If something sees the cat then it does not chase the mouse. If something is cold then it sees the cat. If something likes the cat and it chases the bald eagle then it is not young. If something likes the bald eagle and the bald eagle does not chase the mouse then the mouse is big. If the cat chases the bear then the cat likes the mouse. If something chases the mouse and it is not green then it chases the bear. If the mouse is big then the mouse chases the bald eagle. If something is young and it likes the mouse then it chases the bald eagle.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The mouse does not see the cat.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nSees($x, $y, bool) ::: Does x see y?\nBig($x, bool) ::: Is x big?\nGreen($x, bool) ::: Is x green?\nLikes($x, $y, bool) ::: Does x like y?\nChases($x, $y, bool) ::: Does x chase y?\nYoung($x, bool) ::: Is x young?\nFacts:\nCold(BaldEagle, True) ::: The bald eagle is cold.\nSees(BaldEagle, Bear, True) ::: The bald eagle sees the bear.\nBig(Bear, True) ::: The bear is big.\nNot(Cold(Bear, True)) ::: The bear is not cold.\nGreen(Bear, True) ::: The bear is green.\nLikes(Bear, Cat, True) ::: The bear likes the cat.\nChases(Cat, Mouse, True) ::: The cat chases the mouse.\nBig(Cat, True) ::: The cat is big.\nYoung(Cat, True) ::: The cat is young.\nLikes(Cat, BaldEagle, True) ::: The cat likes the bald eagle.\nLikes(Mouse, Cat, True) ::: The mouse likes the cat.\nRules:\nNot(Chases(Cat, BaldEagle, True)) >>> Not(Likes(Cat, BaldEagle, True)) ::: If something chases the cat and it likes the bald eagle then the bald eagle is not green.\nNot(Sees(Cat, Mouse, True)) >>> Not(Chases(Mouse, Cat, True)) ::: If something sees the cat then it does not chase the mouse.\nCold($x, True) >>> Sees($x, Cat, True) ::: If something is cold then it sees the cat.\nLikes(Cat, BaldEagle, True) && Chases(Cat, BaldEagle, True) >>> Not(Young(Cat, True)) ::: If something likes the cat and it chases the bald eagle then it is not young.\nLikes(BaldEagle, Mouse, True) && Not(Chases(Mouse, Cat, True)) >>> Big(Cat, True) ::: If the cat chases the bear then the cat likes the mouse.\nChases(Mouse, Bear, True) && Not(Green(Mouse, True)) >>> Chases(Mouse, Bear, True) ::: If the mouse is big then the mouse chases the bald eagle.\nYoung(Cat, True) && Likes(Cat, Mouse, True) >>> Chases(Cat, BaldEagle, True) ::: If something is young and it likes the mouse then it chases the bald eagle.\nQuery:\nNot(Sees(Mouse, Cat, True)) ::: The mouse does not see the cat.\n------"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-1054_Q8",
    "context": "Anne is red. Anne is rough. Charlie is not blue. Charlie is green. Charlie is white. Gary is not blue. Gary is furry. Gary is not green. Gary is white. Harry is not blue. Harry is furry. Harry is nice. Harry is not red. Harry is white. Red people are blue. All furry, nice people are not rough. Green people are not nice. If Anne is blue and Anne is white then Anne is green. Furry, blue people are white. Green people are white. If Gary is green then Gary is not blue. Blue, red people are furry. If Harry is not nice then Harry is white.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Anne is not white.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRed($x, bool) ::: Is x red?\nRough($x, bool) ::: Is x rough?\nBlue($x, bool) ::: Is x blue?\nGreen($x, bool) ::: Is x green?\nFurry($x, bool) ::: Is x furry?\nNice($x, bool) ::: Is x nice?\nWhite($x, bool) ::: Is x white?\nFacts:\nRed(Anne, True) ::: Anne is red.\nRough(Anne, True) ::: Anne is rough.\nBlue(Charlie, False) ::: Charlie is not blue.\nGreen(Charlie, True) ::: Charlie is green.\nWhite(Charlie, True) ::: Charlie is white.\nBlue(Gary, False) ::: Gary is not blue.\nFurry(Gary, True) ::: Gary is furry.\nGreen(Gary, False) ::: Gary is not green.\nWhite(Gary, True) ::: Gary is white.\nBlue(Harry, False) ::: Harry is not blue.\nFurry(Harry, True) ::: Harry is furry.\nNice(Harry, True) ::: Harry is nice.\nRed(Harry, False) ::: Harry is not red.\nWhite(Harry, True) ::: Harry is white.\nRules:\nRed($x, True) >>> Blue($x, True) ::: Red people are blue.\nFurry($x, True) && Nice($x, True) >>> Rough($x, False) ::: All furry, nice people are not rough.\nGreen($x, True) >>> Nice($x, False) ::: Green people are not nice.\nBlue($x, True) && White($x, True) >>> Green($x, True) ::: If Anne is blue and Anne is white then Anne is green.\nFurry($x, True) && Blue($x, True) >>> White($x, True) ::: Furry, blue people are white.\nGreen($x, True) >>> White($x, True) ::: Green people are white.\nGreen($x, True) >>> Blue($x, False) ::: If Gary is green then Gary is not blue.\nBlue($x, True) && Red($x, True) >>> Furry($x, True) ::: Blue, red people are furry.\nNice($x, False) >>> White($x, True) ::: If Harry is not nice then Harry is white.\n------\nProblem:\nAnne is furry. Anne is green. Anne is not red. Anne is not white. Anne is not rough. Anne is not nice. Anne is not blue. Anne is not young. Anne is not quiet. Anne is not young. Anne is not quiet. Anne is not young. Anne is not quiet. Anne is not young. Anne is not quiet. Anne is not young. Anne is not quiet."
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-645_Q3",
    "context": "The bald eagle is green. The bald eagle is red. The cow is nice. The cow likes the tiger. The cow needs the tiger. The mouse is nice. The mouse needs the bald eagle. The mouse sees the bald eagle. The tiger likes the bald eagle. The tiger needs the cow. The tiger needs the mouse. If someone is young then they need the tiger. If the tiger is young then the tiger is green. If someone needs the tiger then the tiger sees the bald eagle. If someone sees the tiger and the tiger likes the bald eagle then the bald eagle sees the tiger. If someone is green and they see the bald eagle then they are cold. If someone is green and they like the tiger then they see the bald eagle. If the tiger is cold then the tiger is young. If someone needs the tiger then they like the tiger. If someone needs the mouse then they are green.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The tiger sees the bald eagle.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen($x, bool) ::: Is x green?\nRed($x, bool) ::: Is x red?\nNice($x, bool) ::: Is x nice?\nYoung($x, bool) ::: Is x young?\nCold($x, bool) ::: Is x cold?\nLikes($x, $y, bool) ::: Does x like y?\nNeeds($x, $y, bool) ::: Does x need y?\nSees($x, $y, bool) ::: Does x see y?\nFacts:\nGreen(BaldEagle, True) ::: The bald eagle is green.\nRed(BaldEagle, True) ::: The bald eagle is red.\nNice(Cow, True) ::: The cow is nice.\nLikes(Cow, Tiger, True) ::: The cow likes the tiger.\nNeeds(Cow, Tiger, True) ::: The cow needs the tiger.\nNice(Mouse, True) ::: The mouse is nice.\nNeeds(Mouse, BaldEagle, True) ::: The mouse needs the bald eagle.\nSees(Mouse, BaldEagle, True) ::: The mouse sees the bald eagle.\nLikes(Tiger, BaldEagle, True) ::: The tiger likes the bald eagle.\nNeeds(Tiger, Cow, True) ::: The tiger needs the cow.\nNeeds(Tiger, Mouse, True) ::: The tiger needs the mouse.\nYoung(Tiger, True) >>> Tiger(Tiger, True) ::: If someone is young then they need the tiger.\nGreen(Tiger, True) >>> Young(Tiger, True) ::: If the tiger is young then the tiger is green.\nNeeds(Tiger, Mouse) >>> Likes(Tiger, BaldEagle, True) ::: If someone needs the tiger then the tiger sees the bald eagle.\nSees(Tiger, BaldEagle) && Likes(Tiger, BaldEagle, True) >>> Sees(BaldEagle, Tiger, True) ::: If someone sees the tiger and the tiger likes the bald eagle then the bald eagle sees the tiger.\nGreen(BaldEagle, True) && Sees(BaldEagle, Tiger, True) >>> Cold(BaldEagle, True) ::: If someone is green and they see the bald eagle then they are cold.\nGreen(BaldEagle, True) && Likes(Tiger, BaldEagle, True) >>> Sees(BaldEagle, Tiger, True) ::: If someone is green and they like the tiger then they see the bald eagle.\nCold(Tiger, True) >>> Young(Tiger, True) ::: If the tiger is cold then the tiger is young.\nNeeds(Tiger, Mouse"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-1199_Q6",
    "context": "Anne is cold. Anne is rough. Anne is smart. Anne is white. Bob is young. Erin is cold. Erin is not rough. Erin is not round. Erin is smart. Erin is white. Erin is young. Gary is round. If Gary is white then Gary is smart. All smart, young people are cold. If someone is young then they are white. Round people are young. All young, round people are rough. Round people are rough. If someone is young and round then they are rough. If someone is cold and white then they are kind. All kind people are smart.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is not white.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nRough($x, bool) ::: Is x rough?\nSmart($x, bool) ::: Is x smart?\nWhite($x, bool) ::: Is x white?\nKind($x, bool) ::: Is x kind?\nRound($x, bool) ::: Is x round?\nYoung($x, bool) ::: Is x young?\nFacts:\nCold(Anne, True) ::: Anne is cold.\nRough(Anne, True) ::: Anne is rough.\nSmart(Anne, True) ::: Anne is smart.\nWhite(Anne, True) ::: Anne is white.\nYoung(Bob, True) ::: Bob is young.\nCold(Erin, True) ::: Erin is cold.\nNot(Rough(Erin, True)) ::: Erin is not rough.\nNot(Round(Erin, True)) ::: Erin is not round.\nSmart(Erin, True) ::: Erin is smart.\nWhite(Erin, True) ::: Erin is white.\nYoung(Erin, True) ::: Erin is young.\nRound(Gary, True) ::: Gary is round.\nIf(White(Gary, True), Smart(Gary, True)) ::: If Gary is white then Gary is smart.\nAll(Smart($x, True), Young($x, True)) >>> Cold($x, True) ::: All smart, young people are cold.\nYoung($x, True) >>> White($x, True) ::: If someone is young then they are white.\nRound($x, True) >>> Young($x, True) ::: Round people are young.\nAll(Young($x, True), Round($x, True)) >>> Rough($x, True) ::: All young, round people are rough.\nRound($x, True) >>> Rough($x, True) ::: Round people are rough.\nAll(Young($x, True), Round($x, True)) >>> Rough($x, True) ::: All young, round people are rough.\nIf(Young($x, True), White($x, True)) >>> Kind($x, True) ::: If someone is young and white then they are kind.\nAll(Kind($x, True), Smart($x, True)) >>> Smart($x, True) ::: All kind people are smart.\nQuery:\nNot(White(Gary, True)) ::: Gary is not white.\n------\nProblem:\nAnne is cold. Anne is rough. Anne is smart. Anne is white. Bob is young. Erin is cold. Erin is not rough. Erin is not round. Erin is smart. Erin is white. Erin is young. Gary is round. If Gary is white then Gary is smart. All smart, young people are cold. If someone is young then they are white."
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-596_Q16",
    "context": "Anne is not rough. Bob is blue. Erin is not furry. Erin is red. Gary is big. Gary is not cold. Gary is furry. If something is blue then it is rough. Red things are rough. If Gary is rough then Gary is not blue. Rough things are red. Big things are quiet. All cold things are big. If something is red then it is big. If something is blue and not rough then it is big. Quiet, big things are not cold.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Anne is big.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRough($x, bool) ::: Is x rough?\nBlue($x, bool) ::: Is x blue?\nFurry($x, bool) ::: Is x furry?\nRed($x, bool) ::: Is x red?\nBig($x, bool) ::: Is x big?\nCold($x, bool) ::: Is x cold?\nQuiet($x, bool) ::: Is x quiet?\nFacts:\nNotRough(Anne, True) ::: Anne is not rough.\nBlue(Bob, True) ::: Bob is blue.\nNotFurry(Erin, True) ::: Erin is not furry.\nRed(Erin, True) ::: Erin is red.\nBig(Gary, True) ::: Gary is big.\nNotCold(Gary, True) ::: Gary is not cold.\nFurry(Gary, True) ::: Gary is furry.\nRules:\nBlue($x, True) >>> Rough($x, True) ::: If something is blue then it is rough.\nRed($x, True) >>> Rough($x, True) ::: Red things are rough.\nIfGaryRough($x, True) >>> NotBlue($x, True) ::: If Gary is rough then Gary is not blue.\nRough($x, True) >>> Red($x, True) ::: Rough things are red.\nBig($x, True) >>> Quiet($x, True) ::: Big things are quiet.\nAllCold($x, True) >>> Big($x, True) ::: All cold things are big.\nRed($x, True) >>> Big($x, True) ::: If something is red then it is big.\nIfBlueNotRough($x, True) >>> Big($x, True) ::: If something is blue and not rough then it is big.\nNotCold($x, True) >>> Quiet($x, True) ::: Quiet, big things are not cold.\nQuery:\nBig(Anne, True) ::: Anne is big.\n------\nProblem:\nAnne is not furry. Anne is not green. Anne is not red. Anne is not rough. Anne is not white. Anne is not young. Bob is furry. Bob is green. Bob is red. Bob is rough. Bob is white. Bob is young. Erin is furry. Erin is green. Erin is red. Erin is rough. Erin is white. Erin is young. Fiona is furry. Fiona is green. Fiona is red. Fiona is rough. Fiona is white. Fiona is young. Harry is furry. Harry is green. Harry is red. Harry is rough. Harry is white. Harry is young. If Anne is not furry then Anne is not green. If Anne is not green then Anne is not red. If Anne is not red then Anne is not rough. If Anne is not rough then Anne is"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-899_Q3",
    "context": "Erin is nice. Erin is white. Fiona is quiet. Gary is white. Harry is cold. Harry is green. Harry is nice. Harry is quiet. Harry is round. Harry is white. All quiet people are round. If someone is quiet then they are round. If Erin is round then Erin is green. Nice people are cold. If someone is quiet and nice then they are cold. If someone is round then they are nice. If someone is cold then they are quiet. If Gary is quiet then Gary is not white. If someone is nice and green then they are smart.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Harry is smart.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNice($x, bool) ::: Is x nice?\nWhite($x, bool) ::: Is x white?\nQuiet($x, bool) ::: Is x quiet?\nRound($x, bool) ::: Is x round?\nCold($x, bool) ::: Is x cold?\nGreen($x, bool) ::: Is x green?\nSmart($x, bool) ::: Is x smart?\nFacts:\nNice(Erin, True) ::: Erin is nice.\nWhite(Erin, True) ::: Erin is white.\nQuiet(Fiona, True) ::: Fiona is quiet.\nWhite(Gary, True) ::: Gary is white.\nCold(Harry, True) ::: Harry is cold.\nGreen(Harry, True) ::: Harry is green.\nNice(Harry, True) ::: Harry is nice.\nQuiet(Harry, True) ::: Harry is quiet.\nRound(Harry, True) ::: Harry is round.\nWhite(Harry, True) ::: Harry is white.\nRules:\nQuiet($x, True) >>> Round($x, True) ::: All quiet people are round.\nQuiet($x, True) >>> Round($x, True) ::: If someone is quiet then they are round.\nQuiet($x, True) && Nice($x, True) >>> Cold($x, True) ::: If someone is quiet and nice then they are cold.\nRound($x, True) >>> Nice($x, True) ::: If someone is round then they are nice.\nCold($x, True) >>> Quiet($x, True) ::: If someone is cold then they are quiet.\nQuiet($x, True) && White($x, True) >>> Not(White($x, True)) ::: If Gary is quiet then Gary is not white.\nNice($x, True) && Green($x, True) >>> Smart($x, True) ::: If someone is nice and green then they are smart.\nQuery:\nSmart(Harry, True) ::: Harry is smart.\n------\nProblem:\nErin is furry. Erin is green. Erin is quiet. Erin is white. Fiona is furry. Fiona is green. Fiona is quiet. Fiona is white. Harry is furry. Harry is green. Harry is quiet. Harry is white. Young people are furry. If someone is green then they are white. If someone is furry and quiet then they are white. If someone is young and white then they are rough. All red people are young.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Fiona is rough.\n###\nPredicates:\nFurry($x, bool) ::: Is x furry?\nGreen($x, bool) ::: Is x green?\nQuiet($x, bool) ::: Is x quiet?"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-311_Q23",
    "context": "The bald eagle eats the cow. The bald eagle is round. The bald eagle likes the cow. The cow eats the bald eagle. The cow likes the dog. The dog eats the bald eagle. The dog is rough. The dog likes the bald eagle. The dog visits the bald eagle. The dog visits the cow. The mouse visits the dog. If someone likes the mouse then they eat the cow. If someone likes the bald eagle then the bald eagle visits the mouse. If the mouse likes the dog then the mouse eats the bald eagle. If someone visits the bald eagle then the bald eagle is blue. If the mouse eats the bald eagle then the bald eagle is green. If someone is blue then they eat the mouse. If someone likes the cow and they visit the dog then they are blue. Round people are green. If someone eats the mouse then the mouse likes the cow.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The mouse is not rough.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y, bool) ::: Does x eat y?\nLikes($x, $y, bool) ::: Does x like y?\nVisits($x, $y, bool) ::: Does x visit y?\nIsBlue($x, bool) ::: Is x blue?\nIsGreen($x, bool) ::: Is x green?\nIsRound($x, bool) ::: Is x round?\nFacts:\nEats(BaldEagle, Cow, True) ::: The bald eagle eats the cow.\nRound(BaldEagle, True) ::: The bald eagle is round.\nLikes(BaldEagle, Cow, True) ::: The bald eagle likes the cow.\nEats(BaldEagle, Cow, True) ::: The bald eagle eats the cow.\nLikes(Cow, Dog, True) ::: The cow likes the dog.\nEats(Dog, BaldEagle, True) ::: The dog eats the bald eagle.\nRough(Dog, True) ::: The dog is rough.\nLikes(Dog, BaldEagle, True) ::: The dog likes the bald eagle.\nVisits(Dog, BaldEagle, True) ::: The dog visits the bald eagle.\nVisits(Dog, Cow, True) ::: The dog visits the cow.\nVisits(Mouse, Dog, True) ::: The mouse visits the dog.\nLikes(Mouse, Dog, True) ::: The mouse likes the dog.\nIf(Mouse, Likes, Dog, Eats, BaldEagle, True) ::: If someone likes the mouse then they eat the cow.\nIf(BaldEagle, Likes, Mouse, Visits, BaldEagle, True) ::: If someone likes the bald eagle then the bald eagle visits the mouse.\nIf(Mouse, Likes, Dog, Eats, BaldEagle, True) ::: If the mouse likes the dog then the mouse eats the bald eagle.\nIsBlue(BaldEagle, True) ::: The bald eagle is blue.\nIsGreen(BaldEagle, True) ::: The bald eagle is green.\nIf(BaldEagle, Eats, Mouse, Likes, Cow, True) ::: If someone eats the mouse then the mouse likes the cow.\nIf(Cow, Likes, Dog, Visits, BaldEagle, True) ::: If someone likes the cow and they visit the dog then they are blue.\nIsGreen(Round, True) ::: Round people are green.\nRules:\nIsBlue($x, True) >>> Eats($x, Mouse, True) ::: If someone is blue then they eat the mouse.\nIsGreen($x, True) >>> Likes($x, Cow, True) ::: If someone is green then they like the cow.\nIsRound($x, True) >>> IsGreen($"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-425_Q24",
    "context": "The bald eagle is nice. The bald eagle does not see the bear. The bald eagle sees the cat. The bear does not eat the cat. The bear is nice. The bear is red. The bear likes the bald eagle. The cat eats the lion. The cat sees the bear. The lion eats the cat. If someone sees the cat and they eat the cat then they are not red. If someone sees the bald eagle and the bald eagle is nice then the bald eagle does not see the lion. If someone eats the bald eagle and they are green then the bald eagle sees the bear. If someone sees the cat then they are green. If the cat eats the bear and the bear is nice then the bear is not young. If someone sees the bear and they are green then the bear eats the lion. If someone eats the lion then they see the cat.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cat likes the bear.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNice($x, bool) ::: Is x nice?\nSee($x, $y, bool) ::: Does x see y?\nEat($x, $y, bool) ::: Does x eat y?\nLike($x, $y, bool) ::: Does x like y?\nYoung($x, bool) ::: Is x young?\nGreen($x, bool) ::: Is x green?\nRed($x, bool) ::: Is x red?\nFacts:\nNice(BaldEagle, True) ::: The bald eagle is nice.\nSee(BaldEagle, Bear, False) ::: The bald eagle does not see the bear.\nSee(BaldEagle, Cat, True) ::: The bald eagle sees the cat.\nEat(Bear, Cat, False) ::: The bear does not eat the cat.\nNice(Bear, True) ::: The bear is nice.\nRed(Bear, True) ::: The bear is red.\nLike(Bear, BaldEagle, True) ::: The bear likes the bald eagle.\nEat(Cat, Lion, True) ::: The cat eats the lion.\nSee(Cat, Bear, True) ::: The cat sees the bear.\nEat(Lion, Cat, True) ::: The lion eats the cat.\nRules:\nSee($x, $y, True) >>> Eat($x, $y, False) ::: If someone sees the cat and they eat the cat then they are not red.\nSee($x, BaldEagle, True) && Nice($x, True) >>> See($x, Lion, False) ::: If someone sees the bald eagle and the bald eagle is nice then the bald eagle does not see the lion.\nEat($x, BaldEagle, True) && Green($x, True) >>> See($x, Bear, True) ::: If someone eats the bald eagle and they are green then the bald eagle sees the bear.\nSee($x, Cat, True) >>> Green($x, True) ::: If someone sees the cat then they are green.\nSee($x, Bear) && Green($x, True) >>> Eat($x, Lion, True) ::: If someone sees the bear and they are green then the bear eats the lion.\nEat($x, Lion, True) >>> See($x, Cat, True) ::: If someone eats the lion then they see the cat.\n------\nProblem:\nThe cat is furry. The cat is green. The cat is rough. The cat is white. The cat is young. The cat is quiet. The cat is red. The cat is nice. The cat is furry. The cat is green. The cat is rough. The cat is white. The cat is young. The cat is quiet. The cat is red. The cat is nice. The cat is furry. The cat is green. The cat is rough"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-307_Q13",
    "context": "The bald eagle chases the tiger. The bald eagle eats the tiger. The bald eagle is not cold. The cow is not big. The cow is green. The dog does not chase the tiger. The tiger chases the cow. The tiger is not big. The tiger is young. The tiger visits the bald eagle. The tiger visits the cow. If someone eats the tiger and they are green then they do not eat the cow. If someone visits the dog then they eat the cow. If someone chases the cow then they visit the dog. If someone eats the tiger and they do not chase the cow then they eat the dog. If the tiger eats the cow and the cow visits the tiger then the tiger is not green. If someone eats the cow then the cow visits the dog. If someone eats the tiger and they chase the dog then the dog is not green. If someone eats the cow then they visit the cow. If the cow chases the tiger and the cow chases the dog then the cow eats the bald eagle.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bald eagle does not visit the dog.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nEats($x, $y, bool) ::: Does x eat y?\nCold($x, bool) ::: Is x cold?\nBig($x, bool) ::: Is x big?\nGreen($x, bool) ::: Is x green?\nVisits($x, $y, bool) ::: Does x visit y?\nRules:\nChases(BaldEagle, Tiger, True) ::: The bald eagle chases the tiger.\nEats(BaldEagle, Tiger, True) ::: The bald eagle eats the tiger.\nNot(Cold(BaldEagle, True)) ::: The bald eagle is not cold.\nNot(Big(Cow, True)) ::: The cow is not big.\nGreen(Cow, True) ::: The cow is green.\nNot(Chases(Dog, Tiger, True)) ::: The dog does not chase the tiger.\nChases(Tiger, Cow, True) ::: The tiger chases the cow.\nNot(Big(Tiger, True)) ::: The tiger is not big.\nYoung(Tiger, True) ::: The tiger is young.\nVisits(Tiger, BaldEagle, True) ::: The tiger visits the bald eagle.\nVisits(Tiger, Cow, True) ::: The tiger visits the cow.\nNot(Eats(Tiger, Tiger, True)) ::: If someone eats the tiger and they are green then they do not eat the cow.\nVisits(Dog, $x, True) >>> Eats($x, Cow, True) ::: If someone visits the dog then they eat the cow.\nChases($x, Cow, True) >>> Visits($x, Dog, True) ::: If someone chases the cow then they visit the dog.\nEats(Tiger, Cow, True) && Chases(Cow, Tiger, True) >>> Not(Green(Tiger, True)) ::: If the tiger eats the cow and the cow visits the tiger then the tiger is not green.\nEats(Cow, $x, True) >>> Visits($x, Cow, True) ::: If someone eats the cow then the cow visits the dog.\nEats(Tiger, Cow, True) && Chases(Dog, Tiger, True) >>> Not(Green(Dog, True)) ::: If someone eats the tiger and they chase the dog then the dog is not green.\nEats(Cow, $x, True) >>> Visits($x, $x, True) ::: If the cow eats the tiger and the cow visits the tiger then the cow eats the bald eagle.\nQuery:\nNot(Visits(BaldEagle, Dog, True)) ::: The bald eagle does not visit"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-742_Q8",
    "context": "Anne is furry. Anne is red. Anne is smart. Bob is red. Dave is blue. Dave is kind. Erin is white. Furry people are kind. Furry, blue people are kind. All red people are furry. All nice, red people are smart. Kind, nice people are smart. All furry people are kind. White people are kind. If someone is white and red then they are nice. If Bob is kind then Bob is white.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is not white.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nFurry($x, bool) ::: Is x furry?\nRed($x, bool) ::: Is x red?\nSmart($x, bool) ::: Is x smart?\nKind($x, bool) ::: Is x kind?\nNice($x, bool) ::: Is x nice?\nFacts:\nFurry(Anne, True) ::: Anne is furry.\nRed(Anne, True) ::: Anne is red.\nSmart(Anne, True) ::: Anne is smart.\nRed(Bob, True) ::: Bob is red.\nBlue(Dave, True) ::: Dave is blue.\nKind(Dave, True) ::: Dave is kind.\nWhite(Erin, True) ::: Erin is white.\nRules:\nFurry($x, True) >>> Kind($x, True) ::: Furry people are kind.\nFurry($x, True) && Blue($x, True) >>> Kind($x, True) ::: Furry, blue people are kind.\nRed($x, True) >>> Furry($x, True) ::: All red people are furry.\nRed($x, True) && Nice($x, True) >>> Smart($x, True) ::: All nice, red people are smart.\nKind($x, True) && Nice($x, True) >>> Smart($x, True) ::: Kind, nice people are smart.\nFurry($x, True) >>> Kind($x, True) ::: All furry people are kind.\nWhite($x, True) >>> Kind($x, True) ::: White people are kind.\nRed($x, True) && White($x, True) >>> Nice($x, True) ::: If someone is white and red then they are nice.\nKind(Bob, True) >>> White(Bob, True) ::: If Bob is kind then Bob is white.\nQuery:\nNot(White(Bob, True)) ::: Bob is not white.\n------\nProblem:\nAnne is furry. Anne is red. Anne is smart. Bob is red. Dave is blue. Dave is kind. Erin is white. Furry people are kind. Furry, blue people are kind. All red people are furry. All nice, red people are smart. Kind, nice people are smart. All furry people are kind. White people are kind. If someone is white and red then they are nice. If Bob is kind then Bob is white.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Bob is not white.\n###\nPredicates:\nFurry($x, bool) ::: Is x furry?\nRed($x, bool) ::: Is x red?\nSmart($x, bool) ::: Is x smart?\nKind($x, bool) ::: Is x kind?\nNice($x, bool) ::: Is x nice?\nFacts:"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1243_Q16",
    "context": "Anne is big. Anne is blue. Anne is furry. Anne is green. Anne is rough. Anne is smart. Anne is white. Erin is green. Fiona is big. Fiona is blue. Fiona is furry. Fiona is rough. Gary is big. Gary is green. Gary is rough. Gary is white. White, smart things are rough. If Erin is blue then Erin is big. Big things are green. If something is green and blue then it is furry. If Erin is rough then Erin is blue. All green things are big. If Fiona is white then Fiona is big. Furry things are white. If something is big then it is rough.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Fiona is smart.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nBlue($x, bool) ::: Is x blue?\nFurry($x, bool) ::: Is x furry?\nGreen($x, bool) ::: Is x green?\nRough($x, bool) ::: Is x rough?\nSmart($x, bool) ::: Is x smart?\nWhite($x, bool) ::: Is x white?\nFacts:\nBig(Anne, True) ::: Anne is big.\nBlue(Anne, True) ::: Anne is blue.\nFurry(Anne, True) ::: Anne is furry.\nGreen(Anne, True) ::: Anne is green.\nRough(Anne, True) ::: Anne is rough.\nSmart(Anne, True) ::: Anne is smart.\nWhite(Anne, True) ::: Anne is white.\nGreen(Erin, True) ::: Erin is green.\nBig(Fiona, True) ::: Fiona is big.\nBlue(Fiona, True) ::: Fiona is blue.\nFurry(Fiona, True) ::: Fiona is furry.\nRough(Fiona, True) ::: Fiona is rough.\nBig(Gary, True) ::: Gary is big.\nGreen(Gary, True) ::: Gary is green.\nRough(Gary, True) ::: Gary is rough.\nWhite(Gary, True) ::: Gary is white.\nRules:\nWhite($x, True) >>> Rough($x, True) ::: White, smart things are rough.\nBlue($x, True) >>> Big($x, True) ::: If Erin is blue then Erin is big.\nBig($x, True) >>> Green($x, True) ::: Big things are green.\nGreen($x, True) && Blue($x, True) >>> Furry($x, True) ::: If something is green and blue then it is furry.\nBlue($x, True) >>> Rough($x, True) ::: If Erin is rough then Erin is blue.\nGreen($x, True) >>> Big($x, True) ::: All green things are big.\nWhite($x, True) >>> Big($x, True) ::: If Fiona is white then Fiona is big.\nFurry($x, True) >>> White($x, True) ::: Furry things are white.\nBig($x, True) >>> Rough($x, True) ::: If something is big then it is rough.\nQuery:\nSmart(Fiona, True) ::: Fiona is smart.\n------"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-547_Q17",
    "context": "Charlie is quiet. Dave is quiet. Dave is young. Erin is blue. Erin is nice. Erin is quiet. Fiona is not blue. Fiona is cold. Fiona is nice. Fiona is round. Fiona is young. If someone is kind then they are round. All kind, cold people are blue. If someone is nice and not young then they are not blue. If Fiona is kind then Fiona is blue. If Dave is kind and Dave is blue then Dave is not nice. Round people are cold. If Dave is young then Dave is kind. If Erin is kind and Erin is blue then Erin is round.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Charlie is not cold.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nQuiet($x, bool) ::: Is x quiet?\nYoung($x, bool) ::: Is x young?\nBlue($x, bool) ::: Is x blue?\nNice($x, bool) ::: Is x nice?\nKind($x, bool) ::: Is x kind?\nRound($x, bool) ::: Is x round?\nCold($x, bool) ::: Is x cold?\nFacts:\nQuite(Charlie, True) ::: Charlie is quiet.\nQuite(Dave, True) ::: Dave is quiet.\nYoung(Dave, True) ::: Dave is young.\nBlue(Erin, True) ::: Erin is blue.\nNice(Erin, True) ::: Erin is nice.\nQuite(Erin, True) ::: Erin is quiet.\nNot(Blue(Fiona, True)) ::: Fiona is not blue.\nCold(Fiona, True) ::: Fiona is cold.\nNice(Fiona, True) ::: Fiona is nice.\nYoung(Fiona, True) ::: Fiona is young.\nKind($x, True) >>> Round($x, True) ::: If someone is kind then they are round.\nAll(Kind($x, True), Cold($x, True)) >>> Blue($x, True) ::: All kind, cold people are blue.\nNot(Young($x, True)) && Nice($x, True) >>> Not(Blue($x, True)) ::: If someone is nice and not young then they are not blue.\nKind(Fiona, True) >>> Blue(Fiona, True) ::: If Fiona is kind then Fiona is blue.\nKind(Dave, True) && Blue(Dave, True) >>> Not(Nice(Dave, True)) ::: If Dave is kind and Dave is blue then Dave is not nice.\nRound($x, True) >>> Cold($x, True) ::: Round people are cold.\nYoung(Dave, True) >>> Kind(Dave, True) ::: If Dave is young then Dave is kind.\nKind(Erin, True) && Blue(Erin, True) >>> Round(Erin, True) ::: If Erin is kind and Erin is blue then Erin is round.\nQuery:\nNot(Cold(Charlie, True)) ::: Charlie is not cold.\n------\nProblem:\nBob is furry. Bob is green. Bob is quiet. Bob is rough. Bob is white. Charlie is furry. Charlie is green. Charlie is quiet. Charlie is rough. Charlie is white. Dave is furry. Dave is"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-546_Q8",
    "context": "The bald eagle is green. The bald eagle visits the rabbit. The rabbit is round. The rabbit likes the bald eagle. The rabbit does not like the squirrel. The rabbit does not need the bald eagle. The squirrel is round. The squirrel needs the rabbit. The squirrel needs the tiger. The squirrel visits the rabbit. The tiger is round. The tiger needs the bald eagle. If something likes the rabbit and it is round then it needs the bald eagle. If something likes the rabbit and it needs the bald eagle then it visits the tiger. If something visits the bald eagle and the bald eagle is green then the bald eagle needs the squirrel. If something visits the bald eagle then the bald eagle likes the rabbit. If the bald eagle likes the tiger then the bald eagle is rough. If something is rough and it needs the rabbit then it does not like the rabbit. If something visits the rabbit then the rabbit visits the bald eagle. If something needs the squirrel then it is round. If the bald eagle is not kind and the bald eagle does not like the rabbit then the bald eagle visits the squirrel.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bald eagle is not round.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen($x, bool) ::: Is x green?\nVisits($x, $y, bool) ::: Does x visit y?\nLikes($x, $y, bool) ::: Does x like y?\nNeeds($x, $y, bool) ::: Does x need y?\nRound($x, bool) ::: Is x round?\nKind($x, bool) ::: Is x kind?\nRough($x, bool) ::: Is x rough?\nFacts:\nGreen(BaldEagle, True) ::: The bald eagle is green.\nVisits(BaldEagle, Rabbit, True) ::: The bald eagle visits the rabbit.\nRound(Rabbit, True) ::: The rabbit is round.\nLikes(Rabbit, BaldEagle, True) ::: The rabbit likes the bald eagle.\nLikes(Rabbit, Squirrel, False) ::: The rabbit does not like the squirrel.\nNeeds(Rabbit, BaldEagle, False) ::: The rabbit does not need the bald eagle.\nRound(Squirrel, True) ::: The squirrel is round.\nNeeds(Squirrel, Rabbit, True) ::: The squirrel needs the rabbit.\nNeeds(Squirrel, Tiger, True) ::: The squirrel needs the tiger.\nVisits(Squirrel, Rabbit, True) ::: The squirrel visits the rabbit.\nRound(Tiger, True) ::: The tiger is round.\nNeeds(Tiger, BaldEagle, True) ::: The tiger needs the bald eagle.\nRules:\nLikes($x, Rabbit, True) && Round($x, True) >>> Needs($x, BaldEagle, True) ::: If something likes the rabbit and it is round then it needs the bald eagle.\nLikes($x, Rabbit, True) && Needs($x, BaldEagle, True) >>> Visits($x, Tiger, True) ::: If something likes the rabbit and it needs the bald eagle then it visits the tiger.\nVisits($x, BaldEagle, True) && Green($x, True) >>> Needs($x, Squirrel, True) ::: If something visits the bald eagle and the bald eagle is green then the bald eagle needs the squirrel.\nVisits($x, BaldEagle, True) >>> Likes($x, Rabbit, True) ::: If something visits the bald eagle then the bald eagle likes the rabbit.\nLikes($x, Tiger"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-877_Q15",
    "context": "The cow chases the squirrel. The cow eats the dog. The cow needs the squirrel. The dog eats the squirrel. The dog is big. The dog is cold. The dog needs the tiger. The squirrel eats the dog. The squirrel is cold. The squirrel needs the cow. The tiger eats the squirrel. If someone chases the tiger then the tiger is kind. If someone is kind then they chase the tiger. If someone is cold then they chase the tiger. If the dog chases the squirrel then the squirrel needs the tiger. If someone is cold and they need the dog then they do not chase the squirrel. If someone eats the cow then they are big. If someone chases the cow and they are kind then they are big. If someone eats the squirrel and the squirrel needs the tiger then they need the squirrel. If someone chases the tiger then they chase the cow.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cow does not chase the cow.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nEats($x, $y, bool) ::: Does x eat y?\nNeeds($x, $y, bool) ::: Does x need y?\nBig($x, bool) ::: Is x big?\nCold($x, bool) ::: Is x cold?\nKind($x, bool) ::: Is x kind?\nFacts:\nChases(Cow, Squirrel, True) ::: The cow chases the squirrel.\nEats(Cow, Dog, True) ::: The cow eats the dog.\nNeeds(Cow, Squirrel, True) ::: The cow needs the squirrel.\nEats(Dog, Squirrel, True) ::: The dog eats the squirrel.\nBig(Dog, True) ::: The dog is big.\nCold(Dog, True) ::: The dog is cold.\nNeeds(Dog, Tiger, True) ::: The dog needs the tiger.\nEats(Squirrel, Dog, True) ::: The squirrel eats the dog.\nCold(Squirrel, True) ::: The squirrel is cold.\nNeeds(Squirrel, Cow, True) ::: The squirrel needs the cow.\nEats(Tiger, Squirrel, True) ::: The tiger eats the squirrel.\nRules:\nChases(Tiger, $x, True) >>> Kind($x, True) ::: If someone chases the tiger then the tiger is kind.\nKind($x, True) >>> Chases(Tiger, $x, True) ::: If someone is kind then they chase the tiger.\nCold($x, True) >>> Chases(Tiger, $x, True) ::: If someone is cold then they chase the tiger.\nEats(Dog, Squirrel, True) >>> Needs(Squirrel, Tiger, True) ::: If the dog chases the squirrel then the squirrel needs the tiger.\nNeeds(Dog, Tiger, True) && Cold($x, True) >>> Chases(Squirrel, $x, False) ::: If someone is cold and they need the dog then they do not chase the squirrel.\nEats(Cow, $x, True) >>> Big($x, True) ::: If someone eats the cow then they are big.\nChases(Cow, $x, True) && Kind($x, True) >>> Big($x, True) ::: If someone chases the"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-722_Q12",
    "context": "The bald eagle eats the lion. The bald eagle eats the tiger. The bald eagle is big. The bald eagle is round. The bald eagle likes the lion. The cow eats the lion. The cow likes the bald eagle. The cow sees the tiger. The lion eats the cow. The tiger eats the lion. The tiger is red. If someone eats the cow then the cow sees the bald eagle. If someone likes the bald eagle and they eat the bald eagle then they like the cow. If someone likes the lion and the lion is cold then they see the bald eagle. All young people are cold. If someone likes the bald eagle and they see the bald eagle then the bald eagle is red. If someone is red then they eat the bald eagle. If someone eats the lion then they like the bald eagle. If someone likes the cow then they like the tiger. If the lion sees the cow then the cow eats the tiger.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bald eagle does not like the tiger.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y, bool) ::: Does x eat y?\nLikes($x, $y, bool) ::: Does x like y?\nSees($x, $y, bool) ::: Does x see y?\nBig($x, bool) ::: Is x big?\nRound($x, bool) ::: Is x round?\nCold($x, bool) ::: Is x cold?\nRed($x, bool) ::: Is x red?\nFacts:\nEats(BaldEagle, Lion, True) ::: The bald eagle eats the lion.\nEats(BaldEagle, Tiger, True) ::: The bald eagle eats the tiger.\nBig(BaldEagle, True) ::: The bald eagle is big.\nRound(BaldEagle, True) ::: The bald eagle is round.\nLikes(BaldEagle, Lion, True) ::: The bald eagle likes the lion.\nEats(Cow, Lion, True) ::: The cow eats the lion.\nLikes(Cow, BaldEagle, True) ::: The cow likes the bald eagle.\nSees(Cow, Tiger, True) ::: The cow sees the tiger.\nEats(Lion, Cow, True) ::: The lion eats the cow.\nEats(Tiger, Lion, True) ::: The tiger eats the lion.\nRed(Tiger, True) ::: The tiger is red.\nRules:\nEats($x, $y, True) >>> Sees($x, $y, True) ::: If someone eats the cow then the cow sees the bald eagle.\nLikes($x, BaldEagle, True) && Eats($x, BaldEagle, True) >>> Likes($x, Cow, True) ::: If someone likes the bald eagle and they eat the bald eagle then they like the cow.\nLikes($x, Lion, True) && Cold($x, True) >>> Sees($x, BaldEagle, True) ::: If someone likes the lion and the lion is cold then they see the bald eagle.\nYoung($x, True) >>> Cold($x, True) ::: All young people are cold.\nLikes($x, BaldEagle, True) && Sees($x, BaldEagle, True) >>> Red($x, True) ::: If someone likes the bald eagle and they see the bald eagle then the bald eagle is red.\nEats($x, Lion, True) >>> Likes($x, BaldEagle, True) ::: If someone eats the lion"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-1003_Q22",
    "context": "The cat is red. The cat visits the dog. The dog is cold. The dog visits the mouse. The mouse visits the tiger. The tiger is cold. The tiger sees the cat. If someone visits the dog and the dog sees the tiger then the dog visits the mouse. If someone is round then they eat the dog. If someone sees the tiger and the tiger sees the cat then the cat is young. If the cat is young and the cat sees the tiger then the cat eats the tiger. If someone visits the dog and the dog sees the cat then they are red. Young people are cold. If someone is rough then they eat the tiger. If someone is cold then they see the tiger.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The mouse eats the cat.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRed($x, bool) ::: Is x red?\nVisits($x, $y, bool) ::: Does x visit y?\nCold($x, bool) ::: Is x cold?\nYoung($x, bool) ::: Is x young?\nRound($x, bool) ::: Is x round?\nEats($x, $y, bool) ::: Does x eat y?\nSees($x, $y, bool) ::: Does x see y?\nFacts:\nRed(Cat, True) ::: The cat is red.\nVisits(Cat, Dog, True) ::: The cat visits the dog.\nCold(Dog, True) ::: The dog is cold.\nVisits(Dog, Mouse, True) ::: The dog visits the mouse.\nVisits(Mouse, Tiger, True) ::: The mouse visits the tiger.\nCold(Tiger, True) ::: The tiger is cold.\nSees(Tiger, Cat, True) ::: The tiger sees the cat.\nRules:\nVisits(Dog, Mouse, True) >>> Dog(Dog, True) ::: If someone visits the dog and the dog sees the tiger then the dog visits the mouse.\nRound($x, True) >>> Eats($x, Dog, True) ::: If someone is round then they eat the dog.\nSees(Tiger, Cat, True) && Sees(Cat, Tiger, True) >>> Cat(Cat, True) ::: If the cat is young and the cat sees the tiger then the cat eats the tiger.\nVisits(Dog, Mouse, True) && Sees(Dog, Cat, True) >>> Red($x, True) ::: If someone visits the dog and the dog sees the cat then they are red.\nYoung($x, True) >>> Cold($x, True) ::: Young people are cold.\nRound($x, True) >>> Eats($x, Tiger, True) ::: If someone is round then they eat the tiger.\nCold($x, True) >>> Sees($x, Tiger, True) ::: If someone is cold then they see the tiger.\nQuery:\nEats(Mouse, Cat, True) ::: The mouse eats the cat.\n------\nProblem:\nThe cat is red. The cat visits the dog. The dog is cold. The dog visits the mouse. The mouse visits the tiger. The tiger is cold. The tiger sees the cat. If someone visits the dog and the dog sees the tiger then the dog visits the mouse. If someone is round then they eat the dog. If someone sees the tiger"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-565_Q7",
    "context": "Charlie is blue. Charlie is furry. Dave is big. Dave is smart. Erin is big. Fiona is blue. Fiona is round. All smart people are furry. If someone is nice and red then they are furry. Furry, smart people are nice. Nice, furry people are big. Round people are red. All red people are smart.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Fiona is furry.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue($x, bool) ::: Is x blue?\nFurry($x, bool) ::: Is x furry?\nRed($x, bool) ::: Is x red?\nSmart($x, bool) ::: Is x smart?\nNice($x, bool) ::: Is x nice?\nBig($x, bool) ::: Is x big?\nRound($x, bool) ::: Is x round?\nFacts:\nBlue(Charlie, True) ::: Charlie is blue.\nFurry(Charlie, True) ::: Charlie is furry.\nBig(Dave, True) ::: Dave is big.\nSmart(Dave, True) ::: Dave is smart.\nBig(Erin, True) ::: Erin is big.\nBlue(Fiona, True) ::: Fiona is blue.\nRound(Fiona, True) ::: Fiona is round.\nRules:\nSmart($x, True) >>> Furry($x, True) ::: All smart people are furry.\nNice($x, True) && Red($x, True) >>> Furry($x, True) ::: If someone is nice and red then they are furry.\nFurry($x, True) && Smart($x, True) >>> Nice($x, True) ::: Furry, smart people are nice.\nNice($x, True) && Furry($x, True) >>> Big($x, True) ::: Nice, furry people are big.\nRound($x, True) >>> Red($x, True) ::: Round people are red.\nRed($x, True) >>> Smart($x, True) ::: All red people are smart.\nQuery:\nFurry(Fiona, True) ::: Fiona is furry.\n------\nProblem:\nCharlie is blue. Charlie is furry. Dave is big. Dave is smart. Erin is big. Fiona is blue. Fiona is round. All smart people are furry. If someone is nice and red then they are furry. Furry, smart people are nice. Nice, furry people are big. Round people are red. All red people are smart.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Fiona is furry.\n###\nPredicates:\nBlue($x, bool) ::: Is x blue?\nFurry($x, bool) ::: Is x furry?\nRed($x, bool) ::: Is x red?\nSmart($x, bool) ::: Is x smart?\nNice($x, bool) ::: Is x nice?\nBig($x, bool"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-169_Q1",
    "context": "Dave is furry. Dave is nice. Erin is cold. Erin is furry. Erin is quiet. Fiona is quiet. Gary is nice. All nice things are quiet. If something is quiet then it is cold. If something is cold and not nice then it is blue. All furry things are blue. If something is big then it is not blue. All big things are blue. Cold, blue things are green. Cold things are furry. If something is cold then it is furry.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Dave is furry.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nFurry($x, bool) ::: Is x furry?\nNice($x, bool) ::: Is x nice?\nQuiet($x, bool) ::: Is x quiet?\nCold($x, bool) ::: Is x cold?\nBig($x, bool) ::: Is x big?\nBlue($x, bool) ::: Is x blue?\nGreen($x, bool) ::: Is x green?\nFacts:\nFurry(Dave, True) ::: Dave is furry.\nNice(Dave, True) ::: Dave is nice.\nCold(Erin, True) ::: Erin is cold.\nFurry(Erin, True) ::: Erin is furry.\nQuiet(Erin, True) ::: Erin is quiet.\nQuiet(Fiona, True) ::: Fiona is quiet.\nNice(Gary, True) ::: Gary is nice.\nRules:\nNice($x, True) >>> Quiet($x, True) ::: All nice things are quiet.\nQuiet($x, True) >>> Cold($x, True) ::: If something is quiet then it is cold.\nCold($x, True) && Not(Nice($x, True)) >>> Blue($x, True) ::: If something is cold and not nice then it is blue.\nFurry($x, True) >>> Blue($x, True) ::: All furry things are blue.\nNot(Big($x, True)) >>> Not(Blue($x, True)) ::: All big things are blue.\nBig($x, True) >>> Blue($x, True) ::: All big things are blue.\nCold($x, True) && Blue($x, True) >>> Green($x, True) ::: Cold, blue things are green.\nCold($x, True) >>> Furry($x, True) ::: Cold things are furry.\nIf($x, True) >>> Furry($x, True) ::: If something is cold then it is furry.\nQuery:\nFurry(Dave, True) ::: Dave is furry.\n------\nProblem:\nDave is furry. Dave is nice. Erin is cold. Erin is furry. Erin is quiet. Fiona is quiet. Gary is nice. All nice things are quiet. If something is quiet then it is cold. If something is cold and not nice then it is blue. All furry things are blue. If something is big then it is not blue. All big things are blue. Cold, blue things are green. Cold things are furry. If something is cold then it is furry.\nQuestion"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-1021_Q12",
    "context": "Bob is rough. Bob is round. Charlie is blue. Charlie is cold. Charlie is red. Charlie is smart. Gary is blue. Gary is cold. Gary is furry. Gary is red. Gary is smart. Harry is blue. Harry is cold. Harry is red. Harry is rough. Harry is round. If Bob is rough and Bob is red then Bob is round. All furry people are smart. If someone is round and furry then they are smart. If someone is smart and round then they are blue. If someone is round and rough then they are red. If someone is round and furry then they are rough. Red, round people are furry. If Bob is red and Bob is not smart then Bob is not blue. All rough, blue people are cold.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is not cold.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRough($x, bool) ::: Is x rough?\nRound($x, bool) ::: Is x round?\nBlue($x, bool) ::: Is x blue?\nCold($x, bool) ::: Is x cold?\nSmart($x, bool) ::: Is x smart?\nFurry($x, bool) ::: Is x furry?\nFacts:\nRough(Bob, True) ::: Bob is rough.\nRound(Bob, True) ::: Bob is round.\nBlue(Charlie, True) ::: Charlie is blue.\nCold(Charlie, True) ::: Charlie is cold.\nRed(Charlie, True) ::: Charlie is red.\nSmart(Charlie, True) ::: Charlie is smart.\nFurry(Gary, True) ::: Gary is furry.\nCold(Gary, True) ::: Gary is cold.\nRed(Gary, True) ::: Gary is red.\nSmart(Gary, True) ::: Gary is smart.\nBlue(Harry, True) ::: Harry is blue.\nCold(Harry, True) ::: Harry is cold.\nRed(Harry, True) ::: Harry is red.\nRough(Harry, True) ::: Harry is rough.\nRound(Harry, True) ::: Harry is round.\nRules:\nRough($x, True) && Red($x, True) >>> Round($x, True) ::: If Bob is rough and Bob is red then Bob is round.\nFurry($x, True) >>> Smart($x, True) ::: All furry people are smart.\nFurry($x, True) && Round($x, True) >>> Smart($x, True) ::: If someone is round and furry then they are smart.\nSmart($x, True) && Round($x, True) >>> Blue($x, True) ::: If someone is smart and round then they are blue.\nRound($x, True) && Rough($x, True) >>> Red($x, True) ::: If someone is round and rough then they are red.\nRound($x, True) && Furry($x, True) >>> Rough($x, True) ::: If someone is round and furry then they are rough.\nRed($x, True) && Round($x, True) >>> Furry($x, True) ::: Red, round people are furry.\nRough($x, True) && Blue($x, True) >>> Cold($x, True) ::: All rough, blue people are cold.\nQuery:\nCold(Bob, True) ::"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-976_Q10",
    "context": "The bear eats the cow. The bear eats the lion. The cow chases the dog. The cow needs the dog. The dog eats the bear. The dog does not eat the cow. The dog eats the lion. The dog is blue. The dog is kind. The lion chases the dog. The lion eats the cow. The lion is kind. If something chases the lion and it needs the lion then the lion does not chase the cow. Kind things are young. If something needs the bear and it eats the bear then the bear is kind. If something eats the lion then it chases the lion. If something is young then it needs the bear.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bear is not young.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y, bool) ::: Does x eat y?\nChases($x, $y, bool) ::: Does x chase y?\nNeeds($x, $y, bool) ::: Does x need y?\nKind($x, bool) ::: Is x kind?\nYoung($x, bool) ::: Is x young?\nFacts:\nEats(Bear, Cow, True) ::: The bear eats the cow.\nEats(Bear, Lion, True) ::: The bear eats the lion.\nChases(Cow, Dog, True) ::: The cow chases the dog.\nNeeds(Cow, Dog, True) ::: The cow needs the dog.\nEats(Dog, Bear, True) ::: The dog eats the bear.\nEats(Dog, Cow, False) ::: The dog does not eat the cow.\nEats(Dog, Lion, True) ::: The dog eats the lion.\nBlue(Dog, True) ::: The dog is blue.\nKind(Dog, True) ::: The dog is kind.\nChases(Lion, Dog, True) ::: The lion chases the dog.\nEats(Lion, Cow, True) ::: The lion eats the cow.\nKind(Lion, True) ::: The lion is kind.\nRules:\nChases($x, $y, True) >>> Needs($x, $y, True) ::: If something chases the lion and it needs the lion then the lion does not chase the cow.\nKind($x, True) >>> Young($x, True) ::: Kind things are young.\nNeeds($x, $y, True) && Eats($x, $y, True) >>> Kind($y, True) ::: If something needs the bear and it eats the bear then the bear is kind.\nEats($x, $y, True) >>> Chases($x, $y, True) ::: If something eats the lion then it chases the lion.\nYoung($x, True) >>> Needs($x, Bear, True) ::: If something is young then it needs the bear.\nQuery:\nYoung(Bear, False) ::: The bear is not young.\n------\nProblem:\nThe bear eats the cow. The bear eats the lion. The cow chases the dog. The cow needs the dog. The dog eats the bear. The dog does not eat the cow. The dog eats the lion. The dog is blue. The dog is kind. The lion chases the dog. The lion eats the cow. The lion is kind."
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-245_Q20",
    "context": "The cow eats the dog. The cow is blue. The dog chases the cow. The dog chases the tiger. The dog eats the cow. The dog sees the rabbit. The rabbit chases the dog. The rabbit eats the dog. The rabbit eats the tiger. The rabbit is big. The tiger chases the rabbit. The tiger eats the cow. The tiger eats the rabbit. The tiger is big. The tiger is nice. The tiger sees the cow. If something chases the tiger then it sees the cow. If the dog sees the rabbit then the dog chases the tiger. If something chases the dog and the dog sees the tiger then it is kind. If the rabbit sees the dog then the rabbit sees the cow. If something sees the cow then it is nice. If something chases the cow and it eats the dog then the cow eats the dog. If something is nice and it sees the rabbit then the rabbit chases the tiger. If something is nice then it eats the dog. If something is nice and it chases the cow then the cow is nice.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cow eats the rabbit.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y) ::: Does x eat y?\nChases($x, $y) ::: Does x chase y?\nSees($x, $y) ::: Does x see y?\nKind($x, bool) ::: Is x kind?\nNice($x, bool) ::: Is x nice?\nBig($x, bool) ::: Is x big?\nFacts:\nEats(Cow, Dog) ::: The cow eats the dog.\nBlue(Cow) ::: The cow is blue.\nChases(Cow, Dog) ::: The cow chases the dog.\nChases(Dog, Tiger) ::: The dog chases the tiger.\nEats(Dog, Cow) ::: The dog eats the cow.\nSees(Dog, Rabbit) ::: The dog sees the rabbit.\nChases(Rabbit, Dog) ::: The rabbit chases the dog.\nEats(Rabbit, Dog) ::: The rabbit eats the dog.\nEats(Rabbit, Tiger) ::: The rabbit eats the tiger.\nBig(Rabbit) ::: The rabbit is big.\nChases(Tiger, Rabbit) ::: The tiger chases the rabbit.\nEats(Tiger, Cow) ::: The tiger eats the cow.\nEats(Tiger, Rabbit) ::: The tiger eats the rabbit.\nBig(Tiger) ::: The tiger is big.\nNice(Tiger) ::: The tiger is nice.\nSees(Tiger, Cow) ::: The tiger sees the cow.\nRules:\nIf something chases the tiger then it sees the cow ::: If something chases the tiger then it sees the cow.\nIf the dog sees the rabbit then the dog chases the tiger ::: If the dog sees the rabbit then the dog chases the tiger.\nIf something chases the dog and the dog sees the tiger then it is kind ::: If something chases the dog and the dog sees the tiger then it is kind.\nIf the rabbit sees the dog then the rabbit sees the cow ::: If the rabbit sees the dog then the rabbit sees the cow.\nIf something sees the cow then it is nice ::: If something sees the cow then it is nice.\nIf something chases the cow and it eats the dog then the cow eats the dog ::: If something chases the cow and it eats the dog then the cow eats the dog.\nIf something is nice and it sees the rabbit then the rabbit chases the tiger ::: If something is nice and it sees the rabbit then the rabbit chases the tiger.\nIf something is nice then it eats the dog ::: If something is nice then it eats the dog.\nIf something is nice and it chases the cow then the cow is nice ::: If something is nice and it chases the cow then the cow is nice.\nQuery:\nEats(Cow, Rabbit) ::: The cow eats the rabbit.\n------"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-787_Q20",
    "context": "The bear chases the tiger. The bear needs the tiger. The cat chases the tiger. The cat is rough. The lion is kind. The lion sees the bear. The tiger chases the lion. If someone chases the bear then they need the lion. If someone chases the lion and the lion needs the cat then they chase the bear. If someone needs the tiger then the tiger sees the cat. If someone needs the cat then they see the cat. If the tiger is green then the tiger needs the cat. If someone needs the cat and the cat sees the lion then they are blue. If the tiger sees the cat then the cat chases the bear. If someone needs the lion and they chase the tiger then the lion needs the tiger. If someone needs the lion and the lion needs the tiger then the lion chases the cat.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The lion chases the tiger.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nNeeds($x, $y, bool) ::: Does x need y?\nSees($x, $y, bool) ::: Does x see y?\nKind($x, bool) ::: Is x kind?\nRough($x, bool) ::: Is x rough?\nBlue($x, bool) ::: Is x blue?\nFacts:\nChases(Bear, Tiger, True) ::: The bear chases the tiger.\nNeeds(Bear, Tiger, True) ::: The bear needs the tiger.\nChases(Cat, Tiger, True) ::: The cat chases the tiger.\nRough(Cat, True) ::: The cat is rough.\nKind(Lion, True) ::: The lion is kind.\nSees(Lion, Bear, True) ::: The lion sees the bear.\nChases(Tiger, Lion, True) ::: The tiger chases the lion.\nRules:\nChases($x, $y, True) >>> Needs($x, $y, True) ::: If someone chases the bear then they need the lion.\nChases($x, $y, True) && Needs($x, $y, True) && Needs($y, $z, True) >>> Chases($x, $z, True) ::: If someone chases the lion and the lion needs the cat then they chase the bear.\nNeeds($x, $y, True) >>> Sees($x, $y, True) ::: If someone needs the tiger then the tiger sees the cat.\nNeeds($x, $y, True) >>> Sees($x, $y, True) ::: If someone needs the cat then they see the cat.\nGreen($x, True) >>> Needs($x, $y, True) ::: If the tiger is green then the tiger needs the cat.\nSees($x, $y, True) >>> Chases($y, $x, True) ::: If the tiger sees the cat then the cat chases the bear.\nNeeds($x, $y, True) && Chases($y, $z, True) >>> Needs($x, $z, True) ::: If someone needs the lion and they chase the tiger then the lion needs the tiger.\nNeeds($x, $y, True) && Needs($y, $z, True) >>> Chases($x, $z, True) ::: If someone needs the lion and the lion needs the tiger then the lion chases the cat.\nQuery:\nChases(Lion, Tiger, True) ::: The lion chases the tiger.\n------\nProblem:\nThe bear chases the tiger. The bear needs the tiger. The cat chases the tiger. The cat is rough. The lion is kind. The lion sees the bear. The tiger chases the lion. If someone chases the bear then they need the lion. If someone chases the lion and the lion needs the cat then they chase the bear. If someone needs the tiger then the"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-91_Q8",
    "context": "Bob is cold. Bob is nice. Dave is blue. Dave is nice. Dave is quiet. Fiona is rough. Fiona is young. Gary is blue. Gary is cold. Gary is nice. Gary is quiet. Gary is red. Gary is rough. Gary is young. All red people are blue. If Fiona is nice then Fiona is blue. If Fiona is blue then Fiona is red. If someone is young then they are quiet. Cold, quiet people are nice. Quiet, young people are cold. If someone is red and rough then they are blue. If someone is red then they are nice.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Fiona is not nice.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nNice($x, bool) ::: Is x nice?\nBlue($x, bool) ::: Is x blue?\nQuiet($x, bool) ::: Is x quiet?\nRough($x, bool) ::: Is x rough?\nYoung($x, bool) ::: Is x young?\nFacts:\nCold(Bob, True) ::: Bob is cold.\nNice(Bob, True) ::: Bob is nice.\nBlue(Dave, True) ::: Dave is blue.\nNice(Dave, True) ::: Dave is nice.\nQuiet(Dave, True) ::: Dave is quiet.\nRough(Fiona, True) ::: Fiona is rough.\nYoung(Fiona, True) ::: Fiona is young.\nBlue(Gary, True) ::: Gary is blue.\nCold(Gary, True) ::: Gary is cold.\nNice(Gary, True) ::: Gary is nice.\nQuiet(Gary, True) ::: Gary is quiet.\nRed(Gary, True) ::: Gary is red.\nRough(Gary, True) ::: Gary is rough.\nYoung(Gary, True) ::: Gary is young.\nRules:\nRed($x, True) >>> Blue($x, True) ::: All red people are blue.\nNice(Fiona, True) >>> Blue($x, True) ::: If Fiona is nice then Fiona is blue.\nBlue($x, True) >>> Red($x, True) ::: If Fiona is blue then Fiona is red.\nYoung($x, True) >>> Quiet($x, True) ::: If someone is young then they are quiet.\nCold($x, True) && Quiet($x, True) >>> Nice($x, True) ::: Cold, quiet people are nice.\nQuiet($x, True) && Young($x, True) >>> Cold($x, True) ::: Quiet, young people are cold.\nRed($x, True) && Rough($x, True) >>> Blue($x, True) ::: If someone is red and rough then they are blue.\nRed($x, True) >>> Nice($x, True) ::: If someone is red then they are nice.\nQuery:\nNice(Fiona, False) ::: Fiona is not nice.\n------\nProblem:\nBob is cold. Bob is nice. Dave is blue. Dave is nice. Dave is quiet. Fiona is rough. Fiona is young. Gary is blue. Gary is cold. Gary is nice. Gary is quiet. Gary is red. Gary is rough. Gary is young. All red people are blue. If Fiona is nice then Fiona is blue. If Fiona is blue then Fiona is red. If someone is young then they are quiet. Cold, quiet people are nice. Quiet, young people are cold. If someone is red and rough then they are blue. If someone is red then they are nice.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown?"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-314_Q17",
    "context": "Anne is cold. Anne is smart. Bob is smart. Bob is young. Gary is kind. Harry is red. Harry is young. All young things are red. If Harry is young then Harry is smart. If Gary is rough then Gary is cold. If Gary is cold and Gary is blue then Gary is rough. If something is smart and kind then it is young. All cold things are smart. If something is kind then it is rough. Red, kind things are cold.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is not cold.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nSmart($x, bool) ::: Is x smart?\nYoung($x, bool) ::: Is x young?\nKind($x, bool) ::: Is x kind?\nRed($x, bool) ::: Is x red?\nRules:\nYoung($x, True) >>> Red($x, True) ::: All young things are red.\nYoung($x, True) >>> Smart($x, True) ::: If Harry is young then Harry is smart.\nKind($x, True) >>> Cold($x, True) ::: If Gary is rough then Gary is cold.\nCold($x, True) && Blue($x, True) >>> Rough($x, True) ::: If Gary is cold and Gary is blue then Gary is rough.\nSmart($x, True) && Kind($x, True) >>> Young($x, True) ::: If something is smart and kind then it is young.\nCold($x, True) >>> Smart($x, True) ::: All cold things are smart.\nKind($x, True) >>> Rough($x, True) ::: If something is kind then it is rough.\nRed($x, True) && Kind($x, True) >>> Cold($x, True) ::: Red, kind things are cold.\nFacts:\nCold(Anne, True) ::: Anne is cold.\nSmart(Anne, True) ::: Anne is smart.\nSmart(Bob, True) ::: Bob is smart.\nYoung(Bob, True) ::: Bob is young.\nKind(Gary, True) ::: Gary is kind.\nRed(Harry, True) ::: Harry is red.\nYoung(Harry, True) ::: Harry is young.\nQuery:\nNot(Cold(Bob, True)) ::: Bob is not cold.\n------\nProblem:\nAnne is cold. Anne is smart. Bob is smart. Bob is young. Gary is kind. Harry is red. Harry is young. All young things are red. If Harry is young then Harry is smart. If Gary is rough then Gary is cold. If Gary is cold and Gary is blue then Gary is rough. If something is smart and kind then it is young. All cold things are smart. If something is kind then it is rough. Red, kind things are cold.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Bob is not cold.\n###\nPredicates:\nCold($x, bool) ::: Is x cold?\nSmart($x, bool) ::: Is x smart?\nYoung($x, bool) ::: Is x young?\nKind($x, bool) ::: Is x kind?\nRed($x, bool) ::: Is x red?\nRules:\nYoung($x, True) >>> Red($x, True) ::: All young things are red.\nYoung($x, True) >>> Smart($x, True) ::: If Harry is young then Harry is smart.\nKind($x, True) >>> Cold($x, True) ::: If Gary is rough then Gary is cold"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-739_Q1",
    "context": "The bald eagle likes the squirrel. The cow does not chase the bald eagle. The cow is cold. The cow needs the squirrel. The squirrel chases the bald eagle. The squirrel chases the tiger. The squirrel is green. The squirrel does not need the cow. The tiger does not chase the squirrel. The tiger is young. The tiger needs the bald eagle. If someone is blue and they chase the squirrel then they need the cow. Cold people are big. If someone is green then they are blue. If someone is big and young then they do not like the bald eagle. If the cow chases the squirrel then the cow is green. If someone is big then they chase the squirrel.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The tiger does not chase the squirrel.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nLikes($x, $y, bool) ::: Does x like y?\nChases($x, $y, bool) ::: Does x chase y?\nNeeds($x, $y, bool) ::: Does x need y?\nIs($x, $y, bool) ::: Is x y?\nBlue($x, bool) ::: Is x blue?\nBig($x, bool) ::: Is x big?\nYoung($x, bool) ::: Is x young?\nCold($x, bool) ::: Is x cold?\nFacts:\nLikes(BaldEagle, Squirrel, True) ::: The bald eagle likes the squirrel.\nChases(Cow, BaldEagle, False) ::: The cow does not chase the bald eagle.\nCold(Cow, True) ::: The cow is cold.\nNeeds(Cow, Squirrel, True) ::: The cow needs the squirrel.\nChases(Squirrel, BaldEagle, True) ::: The squirrel chases the bald eagle.\nChases(Squirrel, Tiger, True) ::: The squirrel chases the tiger.\nGreen(Squirrel, True) ::: The squirrel is green.\nNeeds(Squirrel, Cow, False) ::: The squirrel does not need the cow.\nChases(Tiger, Squirrel, False) ::: The tiger does not chase the squirrel.\nYoung(Tiger, True) ::: The tiger is young.\nNeeds(Tiger, BaldEagle, True) ::: The tiger needs the bald eagle.\nBlue($x, True) >>> Chases($x, Squirrel, True) ::: If someone is blue and they chase the squirrel then they need the cow.\nBig($x, True) >>> Young($x, False) ::: If someone is big and young then they do not like the bald eagle.\nIs(Cow, Squirrel, True) >>> Is(Cow, Green, True) ::: If the cow chases the squirrel then the cow is green.\nBig($x, True) >>> Chases($x, Squirrel, True) ::: If someone is big then they chase the squirrel.\nGreen($x, True) >>> Blue($x, True) ::: If someone is green then they are blue.\nCold($x, True) >>> Big($x, True) ::: Cold people are big.\nQuery:\nChases(Tiger, Squirrel, False) ::: The tiger does not chase the squirrel.\n------\nProblem:\nThe cow is big. The cow is cold. The cow is green. The cow is young. The cow is blue. The cow is furry. The cow is rough. The cow is white. The cow is quiet. The cow is red. The cow is rough. The cow is quiet. The cow is white. The cow is red. The cow is rough. The cow is quiet. The cow is white. The cow is red. The cow is rough. The cow is quiet. The"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-146_Q8",
    "context": "Bob is red. Bob is young. Charlie is red. Dave is cold. Dave is round. Erin is kind. Erin is rough. Young, furry people are rough. Cold, rough people are young. All cold, red people are kind. Young, furry people are cold. If someone is cold then they are young. If someone is rough then they are red. All kind, round people are furry. Cold, young people are red. All rough people are young.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Dave is not kind.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRed($x, bool) ::: Is x red?\nYoung($x, bool) ::: Is x young?\nCold($x, bool) ::: Is x cold?\nRound($x, bool) ::: Is x round?\nKind($x, bool) ::: Is x kind?\nFurry($x, bool) ::: Is x furry?\nRough($x, bool) ::: Is x rough?\nFacts:\nRed(Bob, True) ::: Bob is red.\nYoung(Bob, True) ::: Bob is young.\nRed(Charlie, True) ::: Charlie is red.\nCold(Dave, True) ::: Dave is cold.\nRound(Dave, True) ::: Dave is round.\nKind(Erin, True) ::: Erin is kind.\nRough(Erin, True) ::: Erin is rough.\nRules:\nYoung($x, True) >>> Furry($x, True) ::: Young, furry people are rough.\nCold($x, True) >>> Rough($x, True) ::: Cold, rough people are young.\nCold($x, True) && Red($x, True) >>> Kind($x, True) ::: All cold, red people are kind.\nYoung($x, True) >>> Furry($x, True) ::: Young, furry people are cold.\nCold($x, True) >>> Young($x, True) ::: If someone is cold then they are young.\nRough($x, True) >>> Red($x, True) ::: If someone is rough then they are red.\nKind($x, True) && Round($x, True) >>> Furry($x, True) ::: All kind, round people are furry.\nCold($x, True) && Young($x, True) >>> Red($x, True) ::: Cold, young people are red.\nAll($x, True) >>> Young($x, True) ::: All rough people are young.\nQuery:\nNot(Kind(Dave, True)) ::: Dave is not kind.\n------\nProblem:\nBob is red. Bob is young. Charlie is red. Dave is cold. Dave is round. Erin is kind. Erin is rough. Young, furry people are rough. Cold, rough people are young. All cold, red people are kind. Young, furry people are cold. If someone is cold then they are young. If someone is rough then they are red. All kind, round people are furry. Cold, young people are red. All rough people are young.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Erin is not kind.\n###\nPredicates:\nRed($x, bool) ::: Is x red?\nYoung($x, bool) ::: Is x young?\nCold($x, bool) ::: Is x cold?\nRound($x, bool) ::: Is x round?\nKind($x, bool) ::: Is x kind?\nFurry($x, bool) ::: Is x furry?\nRough($x, bool"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-767_Q5",
    "context": "The cat is not round. The cow is blue. The cow is kind. The cow likes the cat. The cow sees the rabbit. The rabbit chases the cow. The rabbit is nice. The tiger does not chase the cow. The tiger does not like the rabbit. The tiger sees the rabbit. If something chases the cow then the cow chases the cat. If something chases the rabbit then it is not big. If something likes the cow then the cow is nice. If something is kind then it sees the rabbit. If something chases the cat then the cat likes the cow. If the rabbit chases the tiger then the rabbit does not see the cow. If something is nice and it sees the rabbit then it chases the rabbit. If something is big then it is round.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cat likes the cow.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRound($x, bool) ::: Is x round?\nBlue($x, bool) ::: Is x blue?\nKind($x, bool) ::: Is x kind?\nLikes($x, $y, bool) ::: Does x like y?\nChases($x, $y, bool) ::: Does x chase y?\nSees($x, $y, bool) ::: Does x see y?\nNice($x, bool) ::: Is x nice?\nBig($x, bool) ::: Is x big?\nFacts:\nNotRound(Cat, True) ::: The cat is not round.\nBlue(Cow, True) ::: The cow is blue.\nKind(Cow, True) ::: The cow is kind.\nLikes(Cow, Cat, True) ::: The cow likes the cat.\nSees(Cow, Rabbit, True) ::: The cow sees the rabbit.\nChases(Rabbit, Cow, True) ::: The rabbit chases the cow.\nNice(Rabbit, True) ::: The rabbit is nice.\nNotChases(Tiger, Cow, True) ::: The tiger does not chase the cow.\nNotLikes(Tiger, Rabbit, True) ::: The tiger does not like the rabbit.\nSees(Tiger, Rabbit, True) ::: The tiger sees the rabbit.\nIfChases(x, Cow) >>> Chases(Cow, Cat) ::: If something chases the cow then the cow chases the cat.\nIfChases(x, Rabbit) >>> NotBig(x) ::: If something chases the rabbit then it is not big.\nIfLikes(x, Cow) >>> Nice(Cow) ::: If something likes the cow then the cow is nice.\nIfKind(x) >>> Sees(x, Rabbit) ::: If something is kind then it sees the rabbit.\nIfChases(x, Cat) >>> Likes(Cat, Cow) ::: If something chases the cat then the cat likes the cow.\nIfChases(Rabbit, Tiger) >>> NotSees(Rabbit, Cow) ::: If the rabbit chases the tiger then the rabbit does not see the cow.\nIfNice(x) && Sees(x, Rabbit) >>> Chases(x, Rabbit) ::: If something is nice and it sees the rabbit then it chases the rabbit.\nIfBig(x) >>> Round(x) ::: If something is big then it is round.\nQuery:\nLikes(Cat, Cow, True) ::: The cat likes the cow.\n------\nProblem:\nThe cat is not round. The cow is blue. The cow is kind. The cow likes the cat. The cow sees the rabbit. The rabbit chases the cow. The rabbit is nice. The tiger does not chase the cow. The tiger does not like the rabbit. The tiger sees the rabbit. If something chases the cow then the cow chases the cat. If something chases the rabbit then it is not"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-91_Q16",
    "context": "Bob is cold. Bob is nice. Dave is blue. Dave is nice. Dave is quiet. Fiona is rough. Fiona is young. Gary is blue. Gary is cold. Gary is nice. Gary is quiet. Gary is red. Gary is rough. Gary is young. All red people are blue. If Fiona is nice then Fiona is blue. If Fiona is blue then Fiona is red. If someone is young then they are quiet. Cold, quiet people are nice. Quiet, young people are cold. If someone is red and rough then they are blue. If someone is red then they are nice.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Dave is red.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nNice($x, bool) ::: Is x nice?\nBlue($x, bool) ::: Is x blue?\nQuiet($x, bool) ::: Is x quiet?\nRough($x, bool) ::: Is x rough?\nYoung($x, bool) ::: Is x young?\nFacts:\nCold(Bob, True) ::: Bob is cold.\nNice(Bob, True) ::: Bob is nice.\nBlue(Dave, True) ::: Dave is blue.\nNice(Dave, True) ::: Dave is nice.\nQuiet(Dave, True) ::: Dave is quiet.\nRough(Fiona, True) ::: Fiona is rough.\nYoung(Fiona, True) ::: Fiona is young.\nBlue(Gary, True) ::: Gary is blue.\nCold(Gary, True) ::: Gary is cold.\nNice(Gary, True) ::: Gary is nice.\nQuiet(Gary, True) ::: Gary is quiet.\nRed(Gary, True) ::: Gary is red.\nRough(Gary, True) ::: Gary is rough.\nYoung(Gary, True) ::: Gary is young.\nRules:\nRed($x, True) >>> Blue($x, True) ::: All red people are blue.\nNice(Fiona, True) >>> Blue($x, True) ::: If Fiona is nice then Fiona is blue.\nBlue($x, True) >>> Red($x, True) ::: If Fiona is blue then Fiona is red.\nYoung($x, True) >>> Quiet($x, True) ::: If someone is young then they are quiet.\nCold($x, True) && Quiet($x, True) >>> Nice($x, True) ::: Cold, quiet people are nice.\nQuiet($x, True) && Young($x, True) >>> Cold($x, True) ::: Quiet, young people are cold.\nRed($x, True) && Rough($x, True) >>> Blue($x, True) ::: If someone is red and rough then they are blue.\nRed($x, True) >>> Nice($x, True) ::: If someone is red then they are nice.\nQuery:\nRed(Dave, True) ::: Dave is red.\n------\nProblem:\nBob is cold. Bob is nice. Dave is blue. Dave is nice. Dave is quiet. Fiona is rough. Fiona is young. Gary is blue. Gary is cold. Gary is nice. Gary is quiet. Gary is red. Gary is rough. Gary is young. All red people are blue. If Fiona is nice then Fiona is blue. If Fiona is blue then Fiona is red. If someone is young then they are quiet. Cold, quiet people are nice. Quiet, young people are cold. If someone is red and rough then they are blue. If someone is red then they are nice.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Fiona is"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-794_Q3",
    "context": "Anne is quiet. Anne is smart. Anne is white. Bob is cold. Bob is white. Fiona is blue. Fiona is quiet. Fiona is red. Gary is blue. Gary is cold. Gary is red. Gary is rough. Gary is smart. Gary is white. If someone is cold then they are white. White people are rough. If someone is quiet then they are white. Blue, cold people are red. Red, white people are quiet. If someone is rough then they are blue. All quiet, red people are smart.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is quiet.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nQuiet($x, bool) ::: Is x quiet?\nSmart($x, bool) ::: Is x smart?\nWhite($x, bool) ::: Is x white?\nCold($x, bool) ::: Is x cold?\nBlue($x, bool) ::: Is x blue?\nRed($x, bool) ::: Is x red?\nRough($x, bool) ::: Is x rough?\nFacts:\nQuite(Anne, True) ::: Anne is quiet.\nSmart(Anne, True) ::: Anne is smart.\nWhite(Anne, True) ::: Anne is white.\nCold(Bob, True) ::: Bob is cold.\nWhite(Bob, True) ::: Bob is white.\nBlue(Fiona, True) ::: Fiona is blue.\nQuite(Fiona, True) ::: Fiona is quiet.\nRed(Fiona, True) ::: Fiona is red.\nBlue(Gary, True) ::: Gary is blue.\nCold(Gary, True) ::: Gary is cold.\nRed(Gary, True) ::: Gary is red.\nRough(Gary, True) ::: Gary is rough.\nSmart(Gary, True) ::: Gary is smart.\nWhite(Gary, True) ::: Gary is white.\nRules:\nCold($x, True) >>> White($x, True) ::: If someone is cold then they are white.\nWhite($x, True) >>> Rough($x, True) ::: White people are rough.\nQuite($x, True) >>> White($x, True) ::: If someone is quiet then they are white.\nBlue($x, True) && Cold($x, True) >>> Red($x, True) ::: Blue, cold people are red.\nRed($x, True) && White($x, True) >>> Quite($x, True) ::: Red, white people are quiet.\nRough($x, True) >>> Blue($x, True) ::: If someone is rough then they are blue.\nQuite($x, True) && Red($x, True) >>> Smart($x, True) ::: All quiet, red people are smart.\nQuery:\nQuite(Gary, True) ::: Gary is quiet.\n------\nProblem:\nAnne is quiet. Anne is smart. Anne is white. Bob is cold. Bob is white. Fiona is blue. Fiona is quiet. Fiona is red. Gary is blue. Gary is cold. Gary is red. Gary is rough. Gary is smart. Gary is white. If someone is cold then they are white. White people are rough. If someone is quiet then they are white. Blue, cold people are red. Red, white people are quiet. If someone is rough then they are blue. All quiet, red people are smart.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Gary is white.\n###\nPredicates:\nQuiet($x, bool) ::: Is x quiet?\nSmart($x, bool) ::: Is x smart?\nWhite($x, bool) ::"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-1148_Q12",
    "context": "Bob is kind. Bob is smart. Charlie is furry. Dave is big. Dave is green. Dave is white. Fiona is quiet. If Bob is furry and Bob is big then Bob is not quiet. If someone is smart and furry then they are kind. If someone is kind and furry then they are green. If Bob is smart and Bob is green then Bob is big. Quiet people are smart. If someone is furry then they are quiet. If someone is green and not smart then they are white. Green people are white.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Charlie is not white.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nKind($x, bool) ::: Is x kind?\nSmart($x, bool) ::: Is x smart?\nFurry($x, bool) ::: Is x furry?\nBig($x, bool) ::: Is x big?\nQuiet($x, bool) ::: Is x quiet?\nGreen($x, bool) ::: Is x green?\nWhite($x, bool) ::: Is x white?\nFacts:\nKind(Bob, True) ::: Bob is kind.\nSmart(Bob, True) ::: Bob is smart.\nFurry(Charlie, True) ::: Charlie is furry.\nBig(Dave, True) ::: Dave is big.\nGreen(Dave, True) ::: Dave is green.\nWhite(Dave, True) ::: Dave is white.\nQuiet(Fiona, True) ::: Fiona is quiet.\nRules:\nFurry($x, True) && Big($x, True) >>> Not(Quiet($x, True)) ::: If Bob is furry and Bob is big then Bob is not quiet.\nSmart($x, True) && Furry($x, True) >>> Kind($x, True) ::: If someone is smart and furry then they are kind.\nFurry($x, True) && Kind($x, True) >>> Green($x, True) ::: If someone is kind and furry then they are green.\nSmart($x, True) && Furry($x, True) && Green($x, True) >>> Big($x, True) ::: If Bob is smart and Bob is green then Bob is big.\nQuiet($x, True) >>> Smart($x, True) ::: Quiet people are smart.\nFurry($x, True) >>> Quiet($x, True) ::: If someone is furry then they are quiet.\nGreen($x, True) && Not(Smart($x, True)) >>> White($x, True) ::: If someone is green and not smart then they are white.\nGreen($x, True) >>> White($x, True) ::: Green people are white.\nQuery:\nNot(White(Charlie, True)) ::: Charlie is not white.\n------\nProblem:\nBob is kind. Bob is smart. Charlie is furry. Dave is big. Dave is green. Dave is white. Fiona is quiet. If Bob is furry and Bob is big then Bob is not quiet. If someone is smart and furry then they are kind. If someone is kind and furry then they are green. If Bob is smart and Bob is green then Bob is big. Quiet people are smart. If someone is furry then they are quiet. If someone is green and not smart then they are white. Green people are white.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Charlie is not white.\n###\nPredicates:\nKind($x, bool) ::: Is x kind?\nSmart($x, bool) ::: Is x smart?\nFurry($x, bool) ::: Is x furry?\nBig($x, bool)"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-588_Q17",
    "context": "The bald eagle is young. The bald eagle likes the bear. The bear is blue. The cat is blue. The cat likes the bald eagle. The cat sees the cow. The cat visits the bald eagle. The cow is blue. The cow is nice. The cow is round. The cow does not like the bear. The cow sees the bear. If someone sees the bald eagle then the bald eagle sees the cow. If someone sees the cow then they see the cat. If someone sees the cat then they like the cow. If someone sees the cat then the cat sees the bald eagle. If someone likes the cow and the cow is round then the cow does not see the bald eagle.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cat does not visit the cow.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nYoung($x, bool) ::: Is x young?\nLikes($x, $y, bool) ::: Does x like y?\nSees($x, $y, bool) ::: Does x see y?\nVisits($x, $y, bool) ::: Does x visit y?\nNice($x, bool) ::: Is x nice?\nRound($x, bool) ::: Is x round?\nFacts:\nYoung(BaldEagle, True) ::: The bald eagle is young.\nLikes(BaldEagle, Bear, True) ::: The bald eagle likes the bear.\nBlue(Bear, True) ::: The bear is blue.\nBlue(Cat, True) ::: The cat is blue.\nLikes(Cat, BaldEagle, True) ::: The cat likes the bald eagle.\nSees(Cat, Cow, True) ::: The cat sees the cow.\nVisits(Cat, BaldEagle, True) ::: The cat visits the bald eagle.\nBlue(Cow, True) ::: The cow is blue.\nNice(Cow, True) ::: The cow is nice.\nRound(Cow, True) ::: The cow is round.\nDoesNotLike(Cow, Bear, True) ::: The cow does not like the bear.\nSees(Cow, Bear, True) ::: The cow sees the bear.\nRules:\nYoung($x, True) >>> Likes($x, BaldEagle, True) ::: If someone sees the bald eagle then the bald eagle sees the cow.\nSees($x, $y, True) >>> Sees($y, $x, True) ::: If someone sees the cow then they see the cat.\nSees($x, $y, True) >>> Likes($x, $y, True) ::: If someone sees the cat then they like the cow.\nSees($x, $y, True) >>> Sees($y, $x, True) ::: If someone sees the cat then the cat sees the bald eagle.\nLikes($x, $y, True) && Round($y, True) >>> DoesNotSee($x, $y, True) ::: If someone likes the cow and the cow is round then the cow does not see the bald eagle.\nQuery:\nDoesNotVisit(Cat, Cow, True) ::: The cat does not visit the cow.\n------"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-161_Q6",
    "context": "The cat chases the mouse. The cat eats the tiger. The cat is blue. The cat needs the tiger. The dog is green. The dog is round. The mouse chases the dog. The mouse eats the cat. The mouse needs the cat. The tiger chases the mouse. The tiger is green. The tiger is round. If someone needs the tiger then the tiger eats the cat. If someone is round then they eat the dog. If the cat eats the tiger and the tiger eats the cat then the tiger needs the dog. If someone eats the mouse then they chase the tiger. If someone needs the dog then they need the mouse. If someone is blue then they are green. If someone needs the mouse and the mouse chases the dog then the dog eats the mouse.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The tiger does not need the dog.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y) ::: Does x chase y?\nEats($x, $y) ::: Does x eat y?\nNeeds($x, $y) ::: Does x need y?\nBlue($x, bool) ::: Is x blue?\nGreen($x, bool) ::: Is x green?\nRound($x, bool) ::: Is x round?\nFacts:\nChases(Cat, Mouse) ::: The cat chases the mouse.\nEats(Cat, Tiger) ::: The cat eats the tiger.\nBlue(Cat, True) ::: The cat is blue.\nNeeds(Cat, Tiger) ::: The cat needs the tiger.\nGreen(Dog, True) ::: The dog is green.\nRound(Dog, True) ::: The dog is round.\nChases(Mouse, Dog) ::: The mouse chases the dog.\nEats(Mouse, Cat) ::: The mouse eats the cat.\nNeeds(Mouse, Cat) ::: The mouse needs the cat.\nChases(Tiger, Mouse) ::: The tiger chases the mouse.\nGreen(Tiger, True) ::: The tiger is green.\nRound(Tiger, True) ::: The tiger is round.\nRules:\nNeeds($x, $y) >>> Eats($x, $y) ::: If someone needs the tiger then the tiger eats the cat.\nRound($x, True) >>> Eats($x, Dog) ::: If someone is round then they eat the dog.\nEats(Cat, Tiger) && Eats(Tiger, Cat) >>> Needs(Tiger, Dog) ::: If the cat eats the tiger and the tiger eats the cat then the tiger needs the dog.\nEats($x, $y) >>> Chases($x, $y) ::: If someone eats the mouse then they chase the tiger.\nNeeds($x, Dog) >>> Needs($x, Mouse) ::: If someone needs the dog then they need the mouse.\nBlue($x, True) >>> Green($x, True) ::: If someone is blue then they are green.\nChases(Mouse, Dog) && Eats(Mouse, Cat) >>> Eats(Dog, Mouse) ::: If someone needs the mouse and the mouse chases the dog then the dog eats the mouse.\n------\nProblem:"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1121_Q5",
    "context": "Bob is round. Charlie is blue. Charlie is quiet. Charlie is red. Fiona is round. Fiona is smart. Harry is blue. Harry is cold. Harry is round. Harry is smart. All cold things are quiet. If something is red then it is smart. All cold things are rough. Smart, cold things are blue. Quiet, cold things are red. If something is blue and round then it is rough. All round things are cold.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Fiona is blue.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRound($x, bool) ::: Is x round?\nBlue($x, bool) ::: Is x blue?\nQuiet($x, bool) ::: Is x quiet?\nRed($x, bool) ::: Is x red?\nSmart($x, bool) ::: Is x smart?\nCold($x, bool) ::: Is x cold?\nRough($x, bool) ::: Is x rough?\nFacts:\nRound(Bob, True) ::: Bob is round.\nBlue(Charlie, True) ::: Charlie is blue.\nQuiet(Charlie, True) ::: Charlie is quiet.\nRed(Charlie, True) ::: Charlie is red.\nRound(Fiona, True) ::: Fiona is round.\nSmart(Fiona, True) ::: Fiona is smart.\nBlue(Harry, True) ::: Harry is blue.\nCold(Harry, True) ::: Harry is cold.\nRound(Harry, True) ::: Harry is round.\nSmart(Harry, True) ::: Harry is smart.\nRules:\nCold($x, True) >>> Quiet($x, True) ::: All cold things are quiet.\nRed($x, True) >>> Smart($x, True) ::: If something is red then it is smart.\nCold($x, True) >>> Rough($x, True) ::: All cold things are rough.\nSmart($x, True) && Cold($x, True) >>> Blue($x, True) ::: Smart, cold things are blue.\nQuiet($x, True) && Cold($x, True) >>> Red($x, True) ::: Quiet, cold things are red.\nBlue($x, True) && Round($x, True) >>> Rough($x, True) ::: If something is blue and round then it is rough.\nRound($x, True) >>> Cold($x, True) ::: All round things are cold.\nQuery:\nBlue(Fiona, True) ::: Fiona is blue.\n------\nProblem:\nBob is furry. Bob is green. Bob is quiet. Bob is red. Bob is rough. Bob is white. Charlie is furry. Charlie is green. Charlie is quiet. Charlie is red. Charlie is rough. Charlie is white. Fiona is furry. Fiona is green. Fiona is quiet. Fiona is red. Fiona is rough. Fiona is"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-433_Q16",
    "context": "Anne is furry. Anne is rough. Anne is white. Bob is rough. Bob is white. Fiona is big. Harry is red. All red, white things are rough. All white, quiet things are big. All big, red things are rough. If something is big and red then it is quiet. All big, rough things are furry. Big, furry things are white. Red things are round. If something is furry and round then it is big. All round things are big.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Fiona is rough.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nFurry($x, bool) ::: Is x furry?\nRough($x, bool) ::: Is x rough?\nWhite($x, bool) ::: Is x white?\nBig($x, bool) ::: Is x big?\nRed($x, bool) ::: Is x red?\nRound($x, bool) ::: Is x round?\nQuiet($x, bool) ::: Is x quiet?\nFacts:\nFurry(Anne, True) ::: Anne is furry.\nRough(Anne, True) ::: Anne is rough.\nWhite(Anne, True) ::: Anne is white.\nRough(Bob, True) ::: Bob is rough.\nWhite(Bob, True) ::: Bob is white.\nBig(Fiona, True) ::: Fiona is big.\nRed(Harry, True) ::: Harry is red.\nRules:\nRed($x, True) && White($x, True) >>> Rough($x, True) ::: All red, white things are rough.\nWhite($x, True) && Quiet($x, True) >>> Big($x, True) ::: All white, quiet things are big.\nBig($x, True) && Red($x, True) >>> Rough($x, True) ::: All big, red things are rough.\nRed($x, True) && Big($x, True) >>> Quiet($x, True) ::: If something is big and red then it is quiet.\nBig($x, True) && Furry($x, True) >>> White($x, True) ::: All big, furry things are white.\nFurry($x, True) && Round($x, True) >>> Big($x, True) ::: If something is furry and round then it is big.\nRound($x, True) >>> Big($x, True) ::: All round things are big.\nQuery:\nBig(Fiona, True) ::: Fiona is big.\n------\nProblem:\nAnne is furry. Anne is rough. Anne is white. Bob is rough. Bob is white. Fiona is big. Harry is red. All red, white things are rough. All white, quiet things are big. All big, red things are rough. If something is big and red then it is quiet. All big, rough things are furry. Big, furry things are white. Red things are round. If something is furry and"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-597_Q3",
    "context": "The bald eagle eats the lion. The bald eagle needs the rabbit. The bald eagle sees the dog. The bald eagle sees the rabbit. The dog eats the bald eagle. The dog eats the rabbit. The dog needs the lion. The lion needs the bald eagle. The lion needs the dog. The rabbit eats the lion. The rabbit is green. The rabbit is round. If something sees the rabbit then it eats the rabbit. If something sees the lion and it is blue then the lion sees the dog. If something eats the rabbit then it eats the dog. If something is green and it sees the lion then the lion eats the rabbit. If something is rough then it eats the lion. If something eats the dog and it eats the lion then the lion sees the rabbit. If something is rough and it sees the lion then the lion is blue.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The dog eats the dog.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y, bool) ::: Does x eat y?\nNeeds($x, $y, bool) ::: Does x need y?\nSees($x, $y, bool) ::: Does x see y?\nIs($x, $y, bool) ::: Is x y?\nGreen($x, bool) ::: Is x green?\nRound($x, bool) ::: Is x round?\nRough($x, bool) ::: Is x rough?\nBlue($x, bool) ::: Is x blue?\nFacts:\nEats(BaldEagle, Lion, True) ::: The bald eagle eats the lion.\nNeeds(BaldEagle, Rabbit, True) ::: The bald eagle needs the rabbit.\nSees(BaldEagle, Dog, True) ::: The bald eagle sees the dog.\nSees(BaldEagle, Rabbit, True) ::: The bald eagle sees the rabbit.\nEats(Dog, BaldEagle, True) ::: The dog eats the bald eagle.\nEats(Dog, Rabbit, True) ::: The dog eats the rabbit.\nNeeds(Dog, Lion, True) ::: The dog needs the lion.\nNeeds(Lion, BaldEagle, True) ::: The lion needs the bald eagle.\nNeeds(Lion, Dog, True) ::: The lion needs the dog.\nEats(Rabbit, Lion, True) ::: The rabbit eats the lion.\nGreen(Rabbit, True) ::: The rabbit is green.\nRound(Rabbit, True) ::: The rabbit is round.\nRules:\nIf something sees the rabbit then it eats the rabbit ::: If something sees the rabbit then it eats the rabbit.\nIf something sees the lion and it is blue then the lion sees the dog ::: If something sees the lion and it is blue then the lion sees the dog.\nIf something eats the rabbit then it eats the dog ::: If something eats the rabbit then it eats the dog.\nIf something is green and it sees the lion then the lion eats the rabbit ::: If something is green and it sees the lion then the lion eats the rabbit.\nIf something is rough then it eats the lion ::: If something is rough then it eats the lion.\nIf something"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-370_Q3",
    "context": "The bald eagle needs the cow. The bald eagle needs the rabbit. The bald eagle needs the squirrel. The cow does not chase the rabbit. The cow chases the squirrel. The cow likes the bald eagle. The rabbit is big. The rabbit is round. The rabbit likes the squirrel. The squirrel chases the cow. The squirrel chases the rabbit. If someone chases the bald eagle and they are big then they do not like the cow. If someone chases the cow and they are round then they are kind. If the cow likes the rabbit and the rabbit likes the bald eagle then the bald eagle needs the rabbit. If someone likes the cow then they are green. If someone is big and they need the bald eagle then they chase the cow. If someone likes the bald eagle then they do not chase the bald eagle. If someone needs the rabbit then the rabbit likes the cow. If the squirrel needs the cow and the cow chases the squirrel then the squirrel does not like the cow. If someone is green then they need the bald eagle.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The rabbit likes the cow.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nLikes($x, $y, bool) ::: Does x like y?\nNeeds($x, $y, bool) ::: Does x need y?\nBig($x, bool) ::: Is x big?\nRound($x, bool) ::: Is x round?\nKind($x, bool) ::: Is x kind?\nGreen($x, bool) ::: Is x green?\nFacts:\nChases(Cow, Rabbit, False) ::: The cow does not chase the rabbit.\nChases(Cow, Squirrel, True) ::: The cow chases the squirrel.\nLikes(Cow, BaldEagle, True) ::: The cow likes the bald eagle.\nBig(Rabbit, True) ::: The rabbit is big.\nRound(Rabbit, True) ::: The rabbit is round.\nLikes(Rabbit, Squirrel, True) ::: The rabbit likes the squirrel.\nChases(Squirrel, Cow, True) ::: The squirrel chases the cow.\nChases(Squirrel, Rabbit, True) ::: The squirrel chases the rabbit.\nNot(Chases(BaldEagle, Rabbit, True)) ::: If someone chases the bald eagle and they are big then they do not like the cow.\nNot(Chases(BaldEagle, Rabbit, False)) ::: If someone chases the bald eagle and they are big then they do not like the cow.\nNot(Chases(BaldEagle, Rabbit, True)) ::: If someone chases the bald eagle and they are big then they do not like the cow.\nNot(Chases(BaldEagle, Rabbit, False)) ::: If someone chases the bald eagle and they are big then they do not like the cow.\nNot(Chases(BaldEagle, Rabbit, True)) ::: If someone chases the bald eagle and they are big then they do not like the cow.\nNot(Chases(BaldEagle, Rabbit, False)) ::: If someone chases the bald eagle and they are big then they do not like the cow.\nNot(Chases(BaldEagle, Rabbit, True)) ::: If someone chases the bald eagle and they are big then they do not"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-949_Q8",
    "context": "The cat chases the lion. The cat does not eat the rabbit. The cat is big. The cat is nice. The cat is young. The cat sees the lion. The cat sees the mouse. The lion chases the rabbit. The lion eats the rabbit. The lion is kind. The lion is not young. The lion sees the mouse. The mouse does not chase the rabbit. The mouse eats the lion. The mouse is not nice. The rabbit sees the lion. If someone sees the lion and the lion chases the cat then they do not see the mouse. If someone eats the mouse then the mouse does not eat the rabbit. If someone chases the cat and they are blue then they are nice. If someone chases the mouse then the mouse chases the lion. If someone chases the lion then they eat the mouse. If someone eats the mouse then they chase the mouse. If someone chases the rabbit then they see the rabbit. If someone is big and they do not see the mouse then they are young.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The mouse does not chase the lion.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nEats($x, $y, bool) ::: Does x eat y?\nBig($x, bool) ::: Is x big?\nNice($x, bool) ::: Is x nice?\nYoung($x, bool) ::: Is x young?\nSees($x, $y, bool) ::: Does x see y?\nFacts:\nChases(Cat, Lion, True) ::: The cat chases the lion.\nEats(Cat, Rabbit, False) ::: The cat does not eat the rabbit.\nBig(Cat, True) ::: The cat is big.\nNice(Cat, True) ::: The cat is nice.\nYoung(Cat, True) ::: The cat is young.\nSees(Cat, Lion, True) ::: The cat sees the lion.\nSees(Cat, Mouse, True) ::: The cat sees the mouse.\nChases(Lion, Rabbit, True) ::: The lion chases the rabbit.\nEats(Lion, Rabbit, True) ::: The lion eats the rabbit.\nKind(Lion, True) ::: The lion is kind.\nNot(Young(Lion, True)) ::: The lion is not young.\nSees(Lion, Mouse, True) ::: The lion sees the mouse.\nNot(Chases(Mouse, Rabbit, True)) ::: The mouse does not chase the rabbit.\nEats(Mouse, Lion, True) ::: The mouse eats the lion.\nNot(Nice(Mouse, True)) ::: The mouse is not nice.\nSees(Rabbit, Lion, True) ::: The rabbit sees the lion.\nRules:\nNot(Sees($x, Mouse, True)) && Chases($x, Lion, True) >>> Not(Sees($x, Mouse, True)) ::: If someone sees the lion and the lion chases the cat then they do not see the mouse.\nNot(Eats($x, Mouse, True)) >>> Eats(Mouse, $x, True) ::: If someone eats the mouse then the mouse does not eat the rabbit.\nChases($x, Cat, True) && Blue($x, True) >>> Nice($x, True) ::: If someone chases the cat and they are blue then they are nice.\nChases($x, Mouse) >>>"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-688_Q23",
    "context": "The cow is red. The dog is red. The dog needs the cow. The rabbit needs the cow. The rabbit needs the tiger. The rabbit visits the dog. The tiger eats the dog. The tiger eats the rabbit. The tiger is kind. The tiger needs the cow. The tiger visits the dog. If something is red then it eats the cow. If something eats the cow and it needs the rabbit then the rabbit is kind. If something needs the rabbit then the rabbit is red. If something is red then it needs the dog. If something visits the tiger and it is rough then it is round. If something eats the rabbit then the rabbit eats the dog. If something eats the cow then it needs the rabbit.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The tiger is not nice.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRed($x, bool) ::: Is x red?\nNeeds($x, $y, bool) ::: Does x need y?\nEats($x, $y, bool) ::: Does x eat y?\nVisits($x, $y, bool) ::: Does x visit y?\nKind($x, bool) ::: Is x kind?\nRough($x, bool) ::: Is x rough?\nRound($x, bool) ::: Is x round?\nFacts:\nRed(Cow, True) ::: The cow is red.\nRed(Dog, True) ::: The dog is red.\nNeeds(Dog, Cow, True) ::: The dog needs the cow.\nNeeds(Rabbit, Cow, True) ::: The rabbit needs the cow.\nNeeds(Rabbit, Tiger, True) ::: The rabbit needs the tiger.\nVisits(Rabbit, Dog, True) ::: The rabbit visits the dog.\nEats(Tiger, Dog, True) ::: The tiger eats the dog.\nEats(Tiger, Rabbit, True) ::: The tiger eats the rabbit.\nKind(Tiger, True) ::: The tiger is kind.\nNeeds(Tiger, Cow, True) ::: The tiger needs the cow.\nVisits(Tiger, Dog, True) ::: The tiger visits the dog.\nRules:\nRed($x, True) >>> Eats($x, Cow, True) ::: If something is red then it eats the cow.\nEats($x, Cow, True) && Needs($x, Rabbit, True) >>> Rabbit(Rabbit, True) ::: If something eats the cow and it needs the rabbit then the rabbit is kind.\nNeeds(Rabbit, $x, True) >>> Red($x, True) ::: If something needs the rabbit then the rabbit is red.\nRed($x, True) >>> Needs($x, Dog, True) ::: If something is red then it needs the dog.\nVisits($x, Tiger, True) && Rough($x, True) >>> Round($x, True) ::: If something visits the tiger and it is rough then it is round.\nEats(Rabbit, Dog, True) >>> Eats(Dog, Rabbit, True) ::: If something eats the rab"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-128_Q3",
    "context": "The bear eats the cow. The bear eats the dog. The bear is nice. The bear is round. The bear needs the tiger. The bear sees the dog. The cow eats the bear. The cow is not young. The cow sees the dog. The dog does not eat the bear. The dog is not nice. The dog is not young. The tiger is round. The tiger is young. The tiger sees the bear. The tiger sees the cow. If the cow eats the tiger and the cow needs the tiger then the tiger eats the bear. If something is kind then it eats the cow. If something needs the tiger then it eats the tiger. If something eats the bear then it needs the cow. If something sees the cow and the cow needs the dog then the dog is young. If something eats the bear then it needs the tiger. If something eats the tiger and it needs the bear then it is young. If something eats the bear and it is young then the bear eats the dog. If something needs the tiger and it does not eat the bear then it needs the bear.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cow needs the cow.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y, bool) ::: Does x eat y?\nNeeds($x, $y, bool) ::: Does x need y?\nIs($x, $y, bool) ::: Is x y?\nKind($x, bool) ::: Is x kind?\nRound($x, bool) ::: Is x round?\nYoung($x, bool) ::: Is x young?\nSees($x, $y, bool) ::: Does x see y?\nFacts:\nEats(Bear, Cow, True) ::: The bear eats the cow.\nEats(Bear, Dog, True) ::: The bear eats the dog.\nIs(Bear, Nice, True) ::: The bear is nice.\nIs(Bear, Round, True) ::: The bear is round.\nNeeds(Bear, Tiger, True) ::: The bear needs the tiger.\nSees(Bear, Dog, True) ::: The bear sees the dog.\nEats(Cow, Bear, True) ::: The cow eats the bear.\nIs(Cow, NotYoung, True) ::: The cow is not young.\nSees(Cow, Dog, True) ::: The cow sees the dog.\nIs(Dog, NotNice, True) ::: The dog is not nice.\nIs(Dog, NotYoung, True) ::: The dog is not young.\nIs(Tiger, Round, True) ::: The tiger is round.\nIs(Tiger, Young, True) ::: The tiger is young.\nSees(Tiger, Bear, True) ::: The tiger sees the bear.\nSees(Tiger, Cow, True) ::: The tiger sees the cow.\nRules:\nEats($x, $y, True) >>> Needs($x, $y, True) ::: If something eats the bear then it needs the tiger.\nEats($x, $y, True) >>> Needs($x, $y, True) ::: If something eats the tiger and it needs the bear then it is young.\nEats($x, $y, True) >>> Needs($x, $y, True) ::: If something eats the bear and it is young then the bear eats the dog.\nNeeds($x, $y, True) >>> Eats($x, $y, True) ::"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-638_Q9",
    "context": "The dog is not round. The dog likes the lion. The dog needs the rabbit. The dog does not visit the lion. The lion is big. The lion does not like the mouse. The mouse is nice. The mouse likes the rabbit. The mouse does not need the lion. The mouse visits the rabbit. The rabbit is big. The rabbit is nice. The rabbit is not round. The rabbit likes the dog. The rabbit likes the lion. The rabbit does not visit the lion. If someone visits the mouse then they are big. If someone likes the mouse then the mouse likes the rabbit. If someone visits the mouse then the mouse needs the rabbit. If someone is nice then they need the mouse. If the dog likes the rabbit and the rabbit needs the lion then the rabbit likes the lion. If someone is big then they do not need the dog. If someone needs the rabbit then they visit the mouse.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The mouse is big.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRound($x, bool) ::: Is x round?\nLikes($x, $y, bool) ::: Does x like y?\nNeeds($x, $y, bool) ::: Does x need y?\nVisits($x, $y, bool) ::: Does x visit y?\nBig($x, bool) ::: Is x big?\nNice($x, bool) ::: Is x nice?\nFacts:\nNotRound(Dog, True) ::: The dog is not round.\nLikes(Dog, Lion, True) ::: The dog likes the lion.\nNeeds(Dog, Rabbit, True) ::: The dog needs the rabbit.\nNotVisits(Dog, Lion, True) ::: The dog does not visit the lion.\nBig(Lion, True) ::: The lion is big.\nNotLikes(Lion, Mouse, True) ::: The lion does not like the mouse.\nNice(Mouse, True) ::: The mouse is nice.\nLikes(Mouse, Rabbit, True) ::: The mouse likes the rabbit.\nNotNeeds(Mouse, Lion, True) ::: The mouse does not need the lion.\nVisits(Mouse, Rabbit, True) ::: The mouse visits the rabbit.\nBig(Rabbit, True) ::: The rabbit is big.\nNice(Rabbit, True) ::: The rabbit is nice.\nNotRound(Rabbit, True) ::: The rabbit is not round.\nLikes(Rabbit, Dog, True) ::: The rabbit likes the dog.\nLikes(Rabbit, Lion, True) ::: The rabbit likes the lion.\nNotVisits(Rabbit, Lion, True) ::: The rabbit does not visit the lion.\nRules:\nNotVisits($x, $y) >>> Big($x, True) ::: If someone visits the mouse then they are big.\nLikes($x, $y) >>> Likes($y, $x, True) ::: If someone likes the mouse then the mouse likes the rabbit.\nVisits($x, $y) >>> Needs($x, $y, True) ::: If someone visits the mouse then the mouse needs the rabbit.\nNice($x, True) >>> Needs($x, Mouse, True) ::: If someone is nice then they need the mouse.\nLikes($x, $"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-220_Q5",
    "context": "Anne is quiet. Anne is smart. Charlie is blue. Charlie is furry. Charlie is smart. Gary is not furry. Harry is blue. Harry is furry. Harry is nice. Harry is smart. If someone is quiet then they are round. If someone is round then they are blue. If Anne is white then Anne is nice. All blue, quiet people are white. If Harry is not round then Harry is not white. White, quiet people are nice. If someone is nice and smart then they are furry. If someone is furry then they are smart. All white, furry people are smart.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Anne is blue.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nQuiet($x, bool) ::: Is x quiet?\nSmart($x, bool) ::: Is x smart?\nBlue($x, bool) ::: Is x blue?\nRound($x, bool) ::: Is x round?\nNice($x, bool) ::: Is x nice?\nFurry($x, bool) ::: Is x furry?\nWhite($x, bool) ::: Is x white?\nFacts:\nQuite(Anne, True) ::: Anne is quiet.\nSmart(Anne, True) ::: Anne is smart.\nBlue(Charlie, True) ::: Charlie is blue.\nFurry(Charlie, True) ::: Charlie is furry.\nSmart(Charlie, True) ::: Charlie is smart.\nNotFurry(Gary, True) ::: Gary is not furry.\nBlue(Harry, True) ::: Harry is blue.\nFurry(Harry, True) ::: Harry is furry.\nNice(Harry, True) ::: Harry is nice.\nSmart(Harry, True) ::: Harry is smart.\nRules:\nQuite($x, True) >>> Round($x, True) ::: If someone is quiet then they are round.\nRound($x, True) >>> Blue($x, True) ::: If someone is round then they are blue.\nWhite($x, True) >>> Nice($x, True) ::: If Anne is white then Anne is nice.\nQuite($x, True) && Blue($x, True) >>> White($x, True) ::: All blue, quiet people are white.\nNotRound($x, True) >>> NotWhite($x, True) ::: If Harry is not round then Harry is not white.\nWhite($x, True) && Quite($x, True) >>> Nice($x, True) ::: White, quiet people are nice.\nNice($x, True) && Smart($x, True) >>> Furry($x, True) ::: If someone is nice and smart then they are furry.\nFurry($x, True) >>> Smart($x, True) ::: If someone is furry then they are smart.\nWhite($x, True) && Furry($x, True) >>> Smart($x, True) ::: All white, furry people are smart.\nQuery:\nBlue(Anne, True) ::: Anne is blue.\n------"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-658_Q5",
    "context": "Bob is blue. Charlie is green. Charlie is smart. Erin is rough. Erin is smart. Fiona is rough. Fiona is smart. Rough, green things are nice. If something is blue and round then it is nice. Nice, rough things are blue. If something is green then it is round. Cold, smart things are rough. All round things are cold.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Charlie is cold.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue($x, bool) ::: Is x blue?\nGreen($x, bool) ::: Is x green?\nRound($x, bool) ::: Is x round?\nNice($x, bool) ::: Is x nice?\nRough($x, bool) ::: Is x rough?\nSmart($x, bool) ::: Is x smart?\nCold($x, bool) ::: Is x cold?\nFacts:\nBlue(Bob, True) ::: Bob is blue.\nGreen(Charlie, True) ::: Charlie is green.\nSmart(Charlie, True) ::: Charlie is smart.\nRough(Erin, True) ::: Erin is rough.\nSmart(Erin, True) ::: Erin is smart.\nRough(Fiona, True) ::: Fiona is rough.\nSmart(Fiona, True) ::: Fiona is smart.\nRules:\nRound($x, True) >>> Rough($x, True) ::: Rough, green things are nice.\nBlue($x, True) && Round($x, True) >>> Nice($x, True) ::: If something is blue and round then it is nice.\nNice($x, True) >>> Rough($x, True) ::: Nice, rough things are blue.\nGreen($x, True) >>> Round($x, True) ::: If something is green then it is round.\nCold($x, True) >>> Smart($x, True) ::: Cold, smart things are rough.\nRound($x, True) >>> Cold($x, True) ::: All round things are cold.\nQuery:\nCold(Charlie, True) ::: Charlie is cold.\n------\nProblem:\nBob is blue. Charlie is green. Charlie is smart. Erin is rough. Erin is smart. Fiona is rough. Fiona is smart. Rough, green things are nice. If something is blue and round then it is nice. Nice, rough things are blue. If something is green then it is round. Cold, smart things are rough. All round things are cold.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Charlie is cold.\n###\nPredicates:\nBlue($x, bool) ::: Is x blue?\nGreen($x, bool) ::: Is x green?\nRound($x, bool) ::: Is x round?\nNice($x"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-597_Q4",
    "context": "The bald eagle eats the lion. The bald eagle needs the rabbit. The bald eagle sees the dog. The bald eagle sees the rabbit. The dog eats the bald eagle. The dog eats the rabbit. The dog needs the lion. The lion needs the bald eagle. The lion needs the dog. The rabbit eats the lion. The rabbit is green. The rabbit is round. If something sees the rabbit then it eats the rabbit. If something sees the lion and it is blue then the lion sees the dog. If something eats the rabbit then it eats the dog. If something is green and it sees the lion then the lion eats the rabbit. If something is rough then it eats the lion. If something eats the dog and it eats the lion then the lion sees the rabbit. If something is rough and it sees the lion then the lion is blue.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The dog does not eat the dog.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y, bool) ::: Does x eat y?\nNeeds($x, $y, bool) ::: Does x need y?\nSees($x, $y, bool) ::: Does x see y?\nIs($x, $y, bool) ::: Is x y?\nGreen($x, bool) ::: Is x green?\nRound($x, bool) ::: Is x round?\nRough($x, bool) ::: Is x rough?\nBlue($x, bool) ::: Is x blue?\nFacts:\nEats(BaldEagle, Lion, True) ::: The bald eagle eats the lion.\nNeeds(BaldEagle, Rabbit, True) ::: The bald eagle needs the rabbit.\nSees(BaldEagle, Dog, True) ::: The bald eagle sees the dog.\nSees(BaldEagle, Rabbit, True) ::: The bald eagle sees the rabbit.\nEats(Dog, BaldEagle, True) ::: The dog eats the bald eagle.\nEats(Dog, Rabbit, True) ::: The dog eats the rabbit.\nNeeds(Dog, Lion, True) ::: The dog needs the lion.\nNeeds(Lion, BaldEagle, True) ::: The lion needs the bald eagle.\nNeeds(Lion, Dog, True) ::: The lion needs the dog.\nEats(Rabbit, Lion, True) ::: The rabbit eats the lion.\nGreen(Rabbit, True) ::: The rabbit is green.\nRound(Rabbit, True) ::: The rabbit is round.\nRules:\nIf something sees the rabbit then it eats the rabbit ::: If something sees the rabbit then it eats the rabbit.\nIf something sees the lion and it is blue then the lion sees the dog ::: If something sees the lion and it is blue then the lion sees the dog.\nIf something eats the rabbit then it eats the dog ::: If something eats the rabbit then it eats the dog.\nIf something is green and it sees the lion then the lion eats the rabbit ::: If something is green and it sees the lion then the lion eats the rabbit.\nIf something is rough then it eats the lion ::: If something is rough then it eats the lion.\nIf"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-4_Q9",
    "context": "Bob is big. Bob is furry. Bob is kind. Bob is rough. Bob is round. Dave is kind. Dave is smart. Erin is round. Gary is furry. Gary is round. Gary is white. If Erin is big then Erin is furry. Round people are kind. All smart, furry people are white. White, big people are furry. All kind people are big. If Bob is rough then Bob is white. All round, big people are furry. If someone is big and furry then they are smart. Rough, smart people are big.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Erin is smart.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nFurry($x, bool) ::: Is x furry?\nKind($x, bool) ::: Is x kind?\nRough($x, bool) ::: Is x rough?\nRound($x, bool) ::: Is x round?\nSmart($x, bool) ::: Is x smart?\nWhite($x, bool) ::: Is x white?\nFacts:\nBig(Bob, True) ::: Bob is big.\nFurry(Bob, True) ::: Bob is furry.\nKind(Bob, True) ::: Bob is kind.\nRough(Bob, True) ::: Bob is rough.\nRound(Bob, True) ::: Bob is round.\nSmart(Dave, True) ::: Dave is smart.\nKind(Dave, True) ::: Dave is kind.\nRound(Erin, True) ::: Erin is round.\nFurry(Gary, True) ::: Gary is furry.\nRound(Gary, True) ::: Gary is round.\nWhite(Gary, True) ::: Gary is white.\nRules:\nErin(Big($x, True) >>> Furry($x, True) ::: If Erin is big then Erin is furry.\nRound($x, True) >>> Kind($x, True) ::: Round people are kind.\nWhite($x, True) >>> Furry($x, True) ::: All smart, furry people are white.\nBig($x, True) >>> Furry($x, True) ::: White, big people are furry.\nKind($x, True) >>> Big($x, True) ::: All kind people are big.\nRough($x, True) >>> White($x, True) ::: If Bob is rough then Bob is white.\nRound($x, True) >>> Furry($x, True) ::: All round, big people are furry.\nFurry($x, True) && Big($x, True) >>> Smart($x, True) ::: If someone is big and furry then they are smart.\nRough($x, True) && Smart($x, True) >>> Big($x, True) ::: Rough, smart people are big.\nQuery:\nSmart(Erin, True) ::: Erin is smart.\n------\nProblem:\nBob is big. Bob is furry"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-280_Q8",
    "context": "The bear eats the mouse. The bear is cold. The bear does not visit the rabbit. The cat does not eat the bear. The cat eats the rabbit. The cat does not visit the mouse. The mouse is kind. The mouse sees the bear. The mouse does not visit the cat. The mouse visits the rabbit. The rabbit is blue. The rabbit sees the bear. If someone is cold then they are round. If the mouse is round and the cat does not eat the mouse then the cat is not round. If someone eats the rabbit and the rabbit sees the bear then they do not visit the mouse. If someone sees the mouse then the mouse is cold. If someone is round then they see the mouse. If the rabbit eats the bear and the bear is blue then the rabbit sees the cat. If someone is kind then they see the rabbit. If the bear eats the rabbit then the bear does not visit the cat. If someone eats the rabbit and the rabbit sees the mouse then the rabbit sees the bear.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The mouse is not cold.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y, bool) ::: Does x eat y?\nVisits($x, $y, bool) ::: Does x visit y?\nSees($x, $y, bool) ::: Does x see y?\nKind($x, bool) ::: Is x kind?\nRound($x, bool) ::: Is x round?\nBlue($x, bool) ::: Is x blue?\nCold($x, bool) ::: Is x cold?\nFacts:\nEats(Bear, Mouse, True) ::: The bear eats the mouse.\nCold(Bear, True) ::: The bear is cold.\nDoesNotVisit(Bear, Rabbit, True) ::: The bear does not visit the rabbit.\nEats(Cat, Bear, True) ::: The cat does not eat the bear.\nEats(Cat, Rabbit, True) ::: The cat eats the rabbit.\nDoesNotVisit(Cat, Mouse, True) ::: The cat does not visit the mouse.\nKind(Mouse, True) ::: The mouse is kind.\nSees(Mouse, Bear, True) ::: The mouse sees the bear.\nDoesNotVisit(Mouse, Cat, True) ::: The mouse does not visit the cat.\nVisits(Mouse, Rabbit, True) ::: The mouse visits the rabbit.\nBlue(Rabbit, True) ::: The rabbit is blue.\nSees(Rabbit, Bear, True) ::: The rabbit sees the bear.\nRules:\nCold($x, True) >>> Round($x, True) ::: If someone is cold then they are round.\nEats($x, $y, True) && Sees($y, $z, True) >>> DoesNotVisit($x, $z, True) ::: If someone eats the rabbit and the rabbit sees the bear then they do not visit the mouse.\nSees($x, $y, True) >>> Cold($x, True) ::: If someone sees the mouse then the mouse is cold.\nRound($x, True) >>> Sees($x, Mouse, True) ::: If someone is round then they see the mouse.\nEats($x, $y, True) && Sees($y, $z, True) && Sees($z, $x, True) >>> DoesNotVisit($x, $y, True) ::: If someone eats the"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-207_Q12",
    "context": "Dave is blue. Dave is furry. Fiona is blue. Gary is not white. Harry is furry. Harry is green. Harry is white. All green things are smart. If something is blue and furry then it is green. Blue things are kind. If Fiona is kind then Fiona is furry. All kind, furry things are blue. If something is kind then it is white. If something is smart then it is big.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Fiona is not big.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue($x, bool) ::: Is x blue?\nFurry($x, bool) ::: Is x furry?\nGreen($x, bool) ::: Is x green?\nWhite($x, bool) ::: Is x white?\nKind($x, bool) ::: Is x kind?\nSmart($x, bool) ::: Is x smart?\nBig($x, bool) ::: Is x big?\nFacts:\nBlue(Dave, True) ::: Dave is blue.\nFurry(Dave, True) ::: Dave is furry.\nBlue(Fiona, True) ::: Fiona is blue.\nNot(White(Gary, True)) ::: Gary is not white.\nFurry(Harry, True) ::: Harry is furry.\nGreen(Harry, True) ::: Harry is green.\nWhite(Harry, True) ::: Harry is white.\nSmart(Green($x, True)) ::: All green things are smart.\nBlue($x, True) && Furry($x, True) >>> Green($x, True) ::: If something is blue and furry then it is green.\nBlue($x, True) >>> Kind($x, True) ::: Blue things are kind.\nKind($x, True) >>> Furry($x, True) ::: If Fiona is kind then Fiona is furry.\nKind($x, True) && Furry($x, True) >>> Blue($x, True) ::: All kind, furry things are blue.\nKind($x, True) >>> White($x, True) ::: If something is kind then it is white.\nSmart($x, True) >>> Big($x, True) ::: If something is smart then it is big.\nQuery:\nNot(Big(Fiona, True)) ::: Fiona is not big.\n------\nProblem:\nDave is blue. Dave is furry. Fiona is blue. Gary is not white. Harry is furry. Harry is green. Harry is white. All green things are smart. If something is blue and furry then it is green. Blue things are kind. If Fiona is kind then Fiona is furry. All kind, furry things are blue. If something is kind then it is white. If something is smart then it is big.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Fiona is not big.\n###"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-617_Q12",
    "context": "The bald eagle is round. The bald eagle sees the bear. The bald eagle sees the dog. The bald eagle sees the squirrel. The bald eagle visits the dog. The bald eagle visits the squirrel. The bear is young. The bear needs the squirrel. The bear sees the squirrel. The dog is nice. The dog sees the bald eagle. The dog sees the bear. The dog visits the bald eagle. The squirrel is red. The squirrel is round. The squirrel needs the dog. If something visits the dog then the dog needs the squirrel. If something sees the squirrel and it is blue then the squirrel visits the dog. If something is blue then it visits the bear. If something sees the squirrel and the squirrel visits the bear then it visits the bald eagle. Round things are red. If something visits the dog and the dog sees the bald eagle then it is blue. If something is young and it sees the bald eagle then the bald eagle needs the bear. If something visits the bear then the bear sees the squirrel.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bald eagle does not visit the bald eagle.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRound($x, bool) ::: Is x round?\nYoung($x, bool) ::: Is x young?\nNeeds($x, $y, bool) ::: Does x need y?\nVisits($x, $y, bool) ::: Does x visit y?\nSees($x, $y, bool) ::: Does x see y?\nBlue($x, bool) ::: Is x blue?\nRed($x, bool) ::: Is x red?\nNice($x, bool) ::: Is x nice?\nFacts:\nRound(BaldEagle, True) ::: The bald eagle is round.\nYoung(Bear, True) ::: The bear is young.\nSees(BaldEagle, Bear, True) ::: The bald eagle sees the bear.\nSees(BaldEagle, Dog, True) ::: The bald eagle sees the dog.\nSees(BaldEagle, Squirrel, True) ::: The bald eagle sees the squirrel.\nVisits(BaldEagle, Dog, True) ::: The bald eagle visits the dog.\nVisits(BaldEagle, Squirrel, True) ::: The bald eagle visits the squirrel.\nNeeds(Bear, Squirrel, True) ::: The bear needs the squirrel.\nNice(Dog, True) ::: The dog is nice.\nSees(Dog, BaldEagle, True) ::: The dog sees the bald eagle.\nSees(Dog, Bear, True) ::: The dog sees the bear.\nVisits(Dog, BaldEagle, True) ::: The dog visits the bald eagle.\nRed(Squirrel, True) ::: The squirrel is red.\nRound(Squirrel, True) ::: The squirrel is round.\nNeeds(Squirrel, Dog, True) ::: The squirrel needs the dog.\nVisits(Squirrel, Bear, True) ::: The squirrel visits the bear.\nRules:\nYoung($x, True) >>> Round($x, True) ::: Round things are red.\nVisits($x, Dog) >>> Needs($x, Squirrel, True) ::: If something visits the dog then the dog needs the squirrel.\nSees($x, Squirrel) && Blue($x, True) >>> Visits"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-335_Q5",
    "context": "The bald eagle chases the tiger. The bald eagle is blue. The bald eagle needs the tiger. The bear chases the mouse. The bear chases the tiger. The bear is blue. The bear needs the mouse. The mouse chases the tiger. The mouse eats the bear. The mouse needs the tiger. The tiger chases the bear. The tiger eats the bald eagle. The tiger eats the bear. The tiger is blue. The tiger is rough. The tiger needs the bald eagle. If someone eats the mouse then they are green. If someone needs the bald eagle then they eat the mouse. If someone chases the bear and the bear needs the mouse then they need the mouse. If someone is green then they need the bald eagle. If someone needs the mouse and they chase the bear then the mouse is green. If someone eats the mouse and the mouse eats the bear then they need the mouse. If someone eats the bear then the bear chases the bald eagle. If the bear is blue and the bear eats the bald eagle then the bald eagle is kind. If someone chases the mouse then the mouse is kind.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The tiger is green.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nEats($x, $y, bool) ::: Does x eat y?\nNeeds($x, $y, bool) ::: Does x need y?\nIsKind($x, bool) ::: Is x kind?\nIsGreen($x, bool) ::: Is x green?\nFacts:\nChases(BaldEagle, Tiger, True) ::: The bald eagle chases the tiger.\nBlue(BaldEagle, True) ::: The bald eagle is blue.\nNeeds(BaldEagle, Tiger, True) ::: The bald eagle needs the tiger.\nChases(Bear, Mouse, True) ::: The bear chases the mouse.\nChases(Bear, Tiger, True) ::: The bear chases the tiger.\nBlue(Bear, True) ::: The bear is blue.\nNeeds(Bear, Mouse, True) ::: The bear needs the mouse.\nChases(Mouse, Tiger, True) ::: The mouse chases the tiger.\nEats(Mouse, Bear, True) ::: The mouse eats the bear.\nNeeds(Mouse, Tiger, True) ::: The mouse needs the tiger.\nChases(Tiger, Bear, True) ::: The tiger chases the bear.\nEats(Tiger, BaldEagle, True) ::: The tiger eats the bald eagle.\nEats(Tiger, Bear, True) ::: The tiger eats the bear.\nBlue(Tiger, True) ::: The tiger is blue.\nRough(Tiger, True) ::: The tiger is rough.\nNeeds(Tiger, BaldEagle, True) ::: The tiger needs the bald eagle.\nRules:\nIf someone eats the mouse then they are green ::: If someone eats the mouse then they are green.\nIf someone needs the bald eagle then they eat the mouse ::: If someone needs the bald eagle then they eat the mouse.\nIf someone chases the bear and the bear needs the mouse then they need the mouse ::: If someone chases the bear and the bear needs the mouse then they need the mouse.\nIf someone is green then they need the bald eagle ::: If someone is green then they need the bald eagle.\nIf someone needs the mouse and they chase the bear then the"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-751_Q2",
    "context": "Anne is furry. Anne is quiet. Erin is furry. Erin is not rough. Fiona is not quiet. Fiona is smart. Harry is quiet. Smart people are white. Quiet people are smart. All smart, rough people are not furry. If someone is white and not quiet then they are not furry. All white people are cold. All furry, quiet people are not rough. If Fiona is smart and Fiona is quiet then Fiona is white. If Harry is cold then Harry is rough. If Erin is white and Erin is not smart then Erin is not cold.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Erin is rough.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nFurry($x, bool) ::: Is x furry?\nQuiet($x, bool) ::: Is x quiet?\nRough($x, bool) ::: Is x rough?\nSmart($x, bool) ::: Is x smart?\nWhite($x, bool) ::: Is x white?\nCold($x, bool) ::: Is x cold?\nFacts:\nFurry(Anne, True) ::: Anne is furry.\nQuiet(Anne, True) ::: Anne is quiet.\nFurry(Erin, True) ::: Erin is furry.\nRough(Erin, False) ::: Erin is not rough.\nNot(Quiet(Fiona, True)) ::: Fiona is not quiet.\nSmart(Fiona, True) ::: Fiona is smart.\nHarry(Quiet, True) ::: Harry is quiet.\nSmart($x, True) >>> White($x, True) ::: Smart people are white.\nQuiet($x, True) >>> Smart($x, True) ::: Quiet people are smart.\nNot(Furry($x, True)) && Not(Quiet($x, True)) >>> Rough($x, True) ::: All smart, rough people are not furry.\nNot(White($x, True)) && Not(Quiet($x, True)) >>> Furry($x, True) ::: If someone is white and not quiet then they are not furry.\nWhite($x, True) >>> Cold($x, True) ::: All white people are cold.\nFurry($x, True) && Quiet($x, True) >>> Not(Rough($x, True)) ::: All furry, quiet people are not rough.\nIf(Fiona(Smart, True) && Fiona(Quiet, True)) >>> Fiona(White, True) ::: If Fiona is smart and Fiona is quiet then Fiona is white.\nIf(Harry(Cold, True)) >>> Harry(Rough, True) ::: If Harry is cold then Harry is rough.\nIf(Erin(White, True) && Not(Erin(Smart, True))) >>> Not(Erin(Cold, True)) ::: If Erin is white and Erin is not smart then Erin is not cold.\nQuery:\nRough(Erin, True) ::: Erin is rough.\n------\nProblem"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-1217_Q9",
    "context": "Anne is quiet. Bob is big. Bob is red. Charlie is big. Charlie is red. Gary is not big. Gary is red. If someone is quiet then they are cold. If someone is cold then they are not round. If someone is cold and not round then they are white. If someone is round and green then they are white. White people are not big. All white people are green. Green, quiet people are not red. If someone is cold and big then they are red.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Anne is not big.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nQuiet($x, bool) ::: Is x quiet?\nBig($x, bool) ::: Is x big?\nRed($x, bool) ::: Is x red?\nCold($x, bool) ::: Is x cold?\nRound($x, bool) ::: Is x round?\nWhite($x, bool) ::: Is x white?\nGreen($x, bool) ::: Is x green?\nFacts:\nQuite(Anne, True) ::: Anne is quiet.\nBig(Bob, True) ::: Bob is big.\nRed(Bob, True) ::: Bob is red.\nBig(Charlie, True) ::: Charlie is big.\nRed(Charlie, True) ::: Charlie is red.\nNot(Big(Gary, True)) ::: Gary is not big.\nRed(Gary, True) ::: Gary is red.\nQuite(Anne, True) >>> Cold($x, True) ::: If someone is quiet then they are cold.\nCold($x, True) >>> Not(Round($x, True)) ::: If someone is cold then they are not round.\nCold($x, True) && Not(Round($x, True)) >>> White($x, True) ::: If someone is cold and not round then they are white.\nRound($x, True) && Green($x, True) >>> White($x, True) ::: If someone is round and green then they are white.\nWhite($x, True) >>> Not(Big($x, True)) ::: White people are not big.\nAll(White($x, True), Green($x, True)) ::: All white people are green.\nQuite($x, True) && Not(Red($x, True)) >>> Green($x, True) ::: Green, quiet people are not red.\nCold($x, True) && Big($x, True) >>> Red($x, True) ::: If someone is cold and big then they are red.\nQuery:\nNot(Big(Anne, True)) ::: Anne is not big.\n------\nProblem:\nAnne is quiet. Bob is big. Bob is red. Charlie is big. Charlie is red. Gary is not big. Gary is red. If someone is quiet then they are cold. If someone is cold then they are not round. If someone is cold and not round then they are white. If someone is round and green then they are white. White people are not"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-205_Q1",
    "context": "The bald eagle chases the cow. The bald eagle is big. The bald eagle is rough. The cow chases the squirrel. The cow is rough. The cow visits the squirrel. The cow visits the tiger. The squirrel is not young. The squirrel does not see the bald eagle. The tiger is nice. If something sees the tiger and the tiger chases the squirrel then the squirrel is blue. If something visits the tiger then the tiger chases the squirrel. If something visits the bald eagle then the bald eagle is blue. If something is blue then it sees the tiger. If something visits the squirrel then it visits the bald eagle. If something sees the bald eagle and the bald eagle is big then the bald eagle sees the tiger.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cow visits the squirrel.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nBig($x, bool) ::: Is x big?\nRough($x, bool) ::: Is x rough?\nYoung($x, bool) ::: Is x young?\nBlue($x, bool) ::: Is x blue?\nNice($x, bool) ::: Is x nice?\nVisits($x, $y, bool) ::: Does x visit y?\nSees($x, $y, bool) ::: Does x see y?\nFacts:\nChases(BaldEagle, Cow, True) ::: The bald eagle chases the cow.\nBig(BaldEagle, True) ::: The bald eagle is big.\nRough(BaldEagle, True) ::: The bald eagle is rough.\nChases(Cow, Squirrel, True) ::: The cow chases the squirrel.\nRough(Cow, True) ::: The cow is rough.\nVisits(Cow, Squirrel, True) ::: The cow visits the squirrel.\nVisits(Cow, Tiger, True) ::: The cow visits the tiger.\nNot(Young(Squirrel, True)) ::: The squirrel is not young.\nNot(Sees(Squirrel, BaldEagle, True)) ::: The squirrel does not see the bald eagle.\nNice(Tiger, True) ::: The tiger is nice.\nIf(Chases(Something, Tiger, True), Chases(Something, Squirrel, True)) ::: If something sees the tiger and the tiger chases the squirrel then the squirrel is blue.\nIf(Visits(Something, Tiger, True), Chases(Something, Squirrel, True)) ::: If something visits the tiger then the tiger chases the squirrel.\nIf(Visits(Something, BaldEagle, True), Blue(Something, True)) ::: If something visits the bald eagle then the bald eagle is blue.\nIf(Blue(Something, True), Sees(Something, Tiger, True)) ::: If something is blue then it sees the tiger.\nIf(Visits(Something, Squirrel, True), Visits(Something, BaldEagle, True)) ::: If something visits the squirrel then it visits the bald eagle.\nIf(Sees(Something, BaldEagle, True), Big(BaldEagle, True), Sees(BaldEagle, Tiger, True)) ::: If something sees the bald eagle and the bald eagle is big then the bald eagle sees the tiger.\nQuery:\nVisits(Cow, Squirrel, True) ::: The cow visits the squirrel.\n------"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-763_Q9",
    "context": "The cow chases the mouse. The cow chases the rabbit. The cow is green. The cow needs the mouse. The cow needs the rabbit. The mouse chases the rabbit. The mouse likes the cow. The rabbit is green. The rabbit is young. The squirrel chases the mouse. The squirrel needs the cow. The squirrel needs the mouse. If someone is red then they chase the rabbit. If someone needs the squirrel then they chase the rabbit. If someone is kind then they need the cow. All young people are kind. If someone is young then they chase the mouse. If someone is green and they like the squirrel then the squirrel is young. If someone needs the cow and the cow chases the mouse then they like the squirrel.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The squirrel is young.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nNeeds($x, $y, bool) ::: Does x need y?\nGreen($x, bool) ::: Is x green?\nRed($x, bool) ::: Is x red?\nKind($x, bool) ::: Is x kind?\nYoung($x, bool) ::: Is x young?\nLikes($x, $y, bool) ::: Does x like y?\nFacts:\nChases(Cow, Mouse, True) ::: The cow chases the mouse.\nChases(Cow, Rabbit, True) ::: The cow chases the rabbit.\nGreen(Cow, True) ::: The cow is green.\nNeeds(Cow, Mouse, True) ::: The cow needs the mouse.\nNeeds(Cow, Rabbit, True) ::: The cow needs the rabbit.\nChases(Mouse, Rabbit, True) ::: The mouse chases the rabbit.\nLikes(Mouse, Cow, True) ::: The mouse likes the cow.\nGreen(Rabbit, True) ::: The rabbit is green.\nYoung(Rabbit, True) ::: The rabbit is young.\nChases(Squirrel, Mouse, True) ::: The squirrel chases the mouse.\nNeeds(Squirrel, Cow, True) ::: The squirrel needs the cow.\nNeeds(Squirrel, Mouse, True) ::: The squirrel needs the mouse.\nRed($x, True) >>> Chases($x, Rabbit, True) ::: If someone is red then they chase the rabbit.\nNeeds($x, Squirrel, True) >>> Chases($x, Rabbit, True) ::: If someone needs the squirrel then they chase the rabbit.\nKind($x, True) >>> Needs($x, Cow, True) ::: If someone is kind then they need the cow.\nYoung($x, True) >>> Chases($x, Mouse, True) ::: All young people are kind.\nGreen($x, True) && Likes($x, Squirrel, True) >>> Young(Squirrel, True) ::: If someone is green and they like the squirrel then the squirrel is young.\nChases(Cow, Mouse, True) && Needs(Cow, Mouse, True) >>> Likes(Squirrel, $x, True) ::: If someone needs the cow and the cow chases the mouse then they like the squirrel.\nQuery:\nYoung(Squirrel, True) ::: The squirrel is young.\n------\nProblem:\nThe cow chases the mouse. The cow chases the rabbit. The cow is green. The cow needs the mouse. The"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-607_Q10",
    "context": "Dave is big. Erin is big. Erin is furry. Erin is green. Erin is white. Gary is green. Harry is round. All big, furry things are white. If something is round then it is furry. If something is smart and furry then it is round. If something is white and smart then it is big. All white things are smart. If something is furry then it is white. All green things are round.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is not smart.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nFurry($x, bool) ::: Is x furry?\nGreen($x, bool) ::: Is x green?\nRound($x, bool) ::: Is x round?\nSmart($x, bool) ::: Is x smart?\nWhite($x, bool) ::: Is x white?\nFacts:\nBig(Dave, True) ::: Dave is big.\nBig(Erin, True) ::: Erin is big.\nFurry(Erin, True) ::: Erin is furry.\nGreen(Erin, True) ::: Erin is green.\nWhite(Erin, True) ::: Erin is white.\nGreen(Gary, True) ::: Gary is green.\nRound(Harry, True) ::: Harry is round.\nRules:\nBig($x, True) && Furry($x, True) >>> White($x, True) ::: All big, furry things are white.\nFurry($x, True) >>> Round($x, True) ::: If something is round then it is furry.\nFurry($x, True) && Smart($x, True) >>> Round($x, True) ::: If something is smart and furry then it is round.\nWhite($x, True) && Smart($x, True) >>> Big($x, True) ::: If something is white and smart then it is big.\nWhite($x, True) >>> Smart($x, True) ::: All white things are smart.\nFurry($x, True) >>> White($x, True) ::: If something is furry then it is white.\nGreen($x, True) >>> Round($x, True) ::: All green things are round.\nQuery:\nNot(Smart(Gary, True)) ::: Gary is not smart.\n------\nProblem:\nDave is big. Erin is big. Erin is furry. Erin is green. Erin is white. Gary is green. Harry is round. All big, furry things are white. If something is round then it is furry. If something is smart and furry then it is round. If something is white and smart then it is big. All white things are smart. If something is furry then it is white. All green things are round.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Gary is not smart.\n###\nPredicates:\nBig($x, bool) ::: Is x big?\nFurry($x, bool) ::: Is x furry?\nGreen($x, bool) ::: Is x green?\nRound($x, bool) ::: Is x round?\nSmart($x, bool) ::: Is x smart?\nWhite($x, bool) ::: Is x"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-439_Q6",
    "context": "Anne is furry. Anne is rough. Anne is white. Bob is nice. Bob is rough. Bob is white. Dave is rough. Dave is white. Fiona is furry. Fiona is quiet. All quiet, red people are furry. If Dave is green and Dave is nice then Dave is red. If Fiona is white and Fiona is green then Fiona is quiet. All nice people are furry. If someone is furry then they are green. If someone is furry and quiet then they are nice. If someone is green then they are quiet. All rough people are furry.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Dave is not green.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nFurry($x, bool) ::: Is x furry?\nRough($x, bool) ::: Is x rough?\nWhite($x, bool) ::: Is x white?\nNice($x, bool) ::: Is x nice?\nQuiet($x, bool) ::: Is x quiet?\nRed($x, bool) ::: Is x red?\nGreen($x, bool) ::: Is x green?\nFacts:\nFurry(Anne, True) ::: Anne is furry.\nRough(Anne, True) ::: Anne is rough.\nWhite(Anne, True) ::: Anne is white.\nNice(Bob, True) ::: Bob is nice.\nRough(Bob, True) ::: Bob is rough.\nWhite(Bob, True) ::: Bob is white.\nRough(Dave, True) ::: Dave is rough.\nWhite(Dave, True) ::: Dave is white.\nFurry(Fiona, True) ::: Fiona is furry.\nQuiet(Fiona, True) ::: Fiona is quiet.\nRules:\nQuiet($x, True) && Red($x, True) >>> Furry($x, True) ::: All quiet, red people are furry.\nDave(Green($x, True) && Nice($x, True)) >>> Red($x, True) ::: If Dave is green and Dave is nice then Dave is red.\nFiona(White($x, True) && Green($x, True)) >>> Quiet($x, True) ::: If Fiona is white and Fiona is green then Fiona is quiet.\nNice($x, True) >>> Furry($x, True) ::: All nice people are furry.\nFurry($x, True) >>> Green($x, True) ::: If someone is furry then they are green.\nFurry($x, True) && Quiet($x, True) >>> Nice($x, True) ::: If someone is furry and quiet then they are nice.\nGreen($x, True) >>> Quiet($x, True) ::: If someone is green then they are quiet.\nRough($x, True) >>> Furry($x, True) ::: All rough people are furry.\nQuery:\nNot(Green(Dave, True)) ::: Dave is not green.\n------\nProblem:\nAnne is furry. Anne is rough. Anne is white. Bob is nice. Bob is rough. Bob is white. Dave is rough. Dave is white. Fiona is furry. Fiona is quiet. All quiet, red people are furry. If Dave is green and Dave is nice then Dave is red. If Fiona is white and Fiona is green then Fiona is quiet. All nice people are furry. If someone is fur"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-710_Q4",
    "context": "The bear chases the cat. The bear is blue. The bear is kind. The bear is nice. The bear needs the cat. The cat is not young. The cat needs the squirrel. The squirrel chases the tiger. The squirrel eats the bear. The squirrel eats the cat. The tiger eats the squirrel. The tiger is blue. If something is kind then it does not need the bear. If something eats the squirrel then it is cold. If the tiger eats the bear and the bear needs the cat then the cat eats the squirrel. If something is cold then it eats the bear. If the bear is nice then the bear does not chase the tiger. If something is cold then it chases the tiger. If something eats the bear and it is not cold then it chases the tiger. If something needs the tiger and it does not eat the squirrel then the tiger is blue. If something chases the tiger and it is blue then the tiger needs the bear.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bear chases the tiger.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nNeeds($x, $y, bool) ::: Does x need y?\nEats($x, $y, bool) ::: Does x eat y?\nIs($x, $y, bool) ::: Is x y?\nKind($x, bool) ::: Is x kind?\nBlue($x, bool) ::: Is x blue?\nNice($x, bool) ::: Is x nice?\nCold($x, bool) ::: Is x cold?\nFacts:\nChases(Bear, Cat, True) ::: The bear chases the cat.\nIs(Bear, Blue, True) ::: The bear is blue.\nKind(Bear, True) ::: The bear is kind.\nNice(Bear, True) ::: The bear is nice.\nNeeds(Bear, Cat, True) ::: The bear needs the cat.\nIsNot(Cat, Young, True) ::: The cat is not young.\nNeeds(Cat, Squirrel, True) ::: The cat needs the squirrel.\nChases(Squirrel, Tiger, True) ::: The squirrel chases the tiger.\nEats(Squirrel, Bear, True) ::: The squirrel eats the bear.\nEats(Squirrel, Cat, True) ::: The squirrel eats the cat.\nEats(Tiger, Squirrel, True) ::: The tiger eats the squirrel.\nIs(Tiger, Blue, True) ::: The tiger is blue.\nRules:\nKind($x, True) >>> Not(Needs($x, Bear, True)) ::: If something is kind then it does not need the bear.\nEats($x, Squirrel) >>> Cold($x, True) ::: If something eats the squirrel then it is cold.\nAnd(Eats(Bear, $x), Needs(Bear, Cat, True)) >>> Eats($x, Squirrel) ::: If the tiger eats the bear and the bear needs the cat then the cat eats the squirrel.\nCold($x, True) >>> Eats($x, Bear) ::: If something is cold then it eats the bear.\nNot(Nice($x, True)) >>> Not(Chases($x, Tiger, True)) ::: If the bear is nice then the bear does not chase the tiger.\nCold($x, True) >>> Chases($x, Tiger, True) ::: If something is cold then it chases the tiger.\nNot(Cold($x, True)) >>> And(Eats(Bear, $x), Not(Chases($x, Tiger, True))) >>> Chases($x"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-312_Q7",
    "context": "Anne is green. Dave is cold. Dave is rough. Erin is white. Fiona is big. Fiona is cold. Fiona is white. If Erin is white then Erin is green. If something is green then it is big. All cold things are rough. All rough, kind things are blue. Cold things are white. All rough, cold things are kind. If Anne is kind then Anne is cold. Cold things are green. Big things are cold.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Fiona is blue.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen($x, bool) ::: Is x green?\nCold($x, bool) ::: Is x cold?\nRough($x, bool) ::: Is x rough?\nWhite($x, bool) ::: Is x white?\nBig($x, bool) ::: Is x big?\nKind($x, bool) ::: Is x kind?\nBlue($x, bool) ::: Is x blue?\nFacts:\nGreen(Anne, True) ::: Anne is green.\nCold(Dave, True) ::: Dave is cold.\nRough(Dave, True) ::: Dave is rough.\nWhite(Erin, True) ::: Erin is white.\nBig(Fiona, True) ::: Fiona is big.\nCold(Fiona, True) ::: Fiona is cold.\nWhite(Fiona, True) ::: Fiona is white.\nRules:\nErin(White($x, True) >>> Erin(Green($x, True) ::: If Erin is white then Erin is green.\nGreen($x, True) >>> Big($x, True) ::: If something is green then it is big.\nCold($x, True) >>> Rough($x, True) ::: All cold things are rough.\nRough($x, True) && Kind($x, True) >>> Blue($x, True) ::: All rough, kind things are blue.\nCold($x, True) >>> White($x, True) ::: Cold things are white.\nRough($x, True) && Cold($x, True) >>> Kind($x, True) ::: All rough, cold things are kind.\nGreen($x, True) >>> Kind($x, True) ::: If Anne is kind then Anne is cold.\nCold($x, True) >>> Green($x, True) ::: Cold things are green.\nBig($x, True) >>> Cold($x, True) ::: Big things are cold.\nQuery:\nBlue(Fiona, True) ::: Fiona is blue.\n------\nProblem:\nAnne is green. Dave is cold. Dave is rough. Erin is white. Fiona is big. Fiona is cold. Fiona is white. If Erin is white then Erin is green. If something is green then it is big. All cold things are rough. All rough, kind things are blue. Cold things are white. All rough, cold things are kind. If Anne is kind then Anne is cold. Cold things are green. Big things are cold.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Fiona is blue.\n###\nPredicates:\nGreen($x, bool) ::: Is x green?\nCold($x, bool) ::: Is x cold?\nRough($x, bool) ::: Is x"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-497_Q5",
    "context": "The bald eagle eats the mouse. The bald eagle is blue. The lion is red. The lion needs the bald eagle. The lion needs the rabbit. The mouse eats the lion. The mouse visits the lion. The mouse visits the rabbit. The rabbit eats the bald eagle. The rabbit is red. The rabbit is round. The rabbit needs the bald eagle. If something is round and it needs the rabbit then the rabbit is big. If something is big then it needs the rabbit. If something visits the lion then the lion is green. If something is green then it is round. If something needs the bald eagle and the bald eagle needs the lion then it needs the lion. If something needs the mouse and the mouse needs the rabbit then the rabbit is blue. If something visits the bald eagle then it needs the lion. If something needs the rabbit then it visits the bald eagle.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The lion is round.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y) ::: Does x eat y?\nIs($x, $y) ::: Is x y?\nNeeds($x, $y) ::: Does x need y?\nVisits($x, $y) ::: Does x visit y?\nBig($x, bool) ::: Is x big?\nGreen($x, bool) ::: Is x green?\nRound($x, bool) ::: Is x round?\nBlue($x, bool) ::: Is x blue?\nFacts:\nEats(BaldEagle, Mouse) ::: The bald eagle eats the mouse.\nIs(BaldEagle, Blue) ::: The bald eagle is blue.\nIs(Lion, Red) ::: The lion is red.\nNeeds(Lion, BaldEagle) ::: The lion needs the bald eagle.\nNeeds(Lion, Rabbit) ::: The lion needs the rabbit.\nEats(Mouse, Lion) ::: The mouse eats the lion.\nVisits(Mouse, Lion) ::: The mouse visits the lion.\nVisits(Mouse, Rabbit) ::: The mouse visits the rabbit.\nEats(Rabbit, BaldEagle) ::: The rabbit eats the bald eagle.\nIs(Rabbit, Red) ::: The rabbit is red.\nIs(Rabbit, Round) ::: The rabbit is round.\nNeeds(Rabbit, BaldEagle) ::: The rabbit needs the bald eagle.\nRules:\nIf something is round and it needs the rabbit then the rabbit is big ::: If something is round and it needs the rabbit then the rabbit is big.\nIf something is big then it needs the rabbit ::: If something is big then it needs the rabbit.\nIf something visits the lion then the lion is green ::: If something visits the lion then the lion is green.\nIf something is green then it is round ::: If something is green then it is round.\nIf something needs the bald eagle and the bald eagle needs the lion then it needs the lion ::: If something needs the bald eagle and the bald eagle needs the lion then it needs the lion.\nIf something needs the mouse and the mouse needs the rabbit then the rabbit is blue ::: If something needs the mouse and the mouse needs the rabbit then the rabbit is blue.\nIf something visits the bald eagle then it needs the lion ::: If something visits the bald eagle then it needs the lion.\nIf something needs the rabbit then it visits the bald eagle ::: If something needs the rabbit then it visits the bald eagle.\nQuery:\nRound(Lion, True) ::: The lion is round.\n------\nProblem:\nThe cat is furry. The cat is green. The cat is quiet."
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-947_Q9",
    "context": "The bear chases the squirrel. The cat chases the cow. The cat is blue. The cat is green. The cat likes the bear. The cat likes the squirrel. The cow chases the cat. The cow is cold. The cow likes the bear. The cow likes the cat. The cow sees the bear. The cow sees the squirrel. The squirrel is green. The squirrel likes the bear. The squirrel likes the cat. The squirrel likes the cow. If something is young then it sees the cow. If something is young and it likes the bear then the bear is green. If something sees the squirrel then the squirrel sees the cat. If the squirrel sees the cat then the cat chases the bear. If something is green then it chases the cow. If something chases the cow then it is young.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bear is young.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nBlue($x, bool) ::: Is x blue?\nGreen($x, bool) ::: Is x green?\nLikes($x, $y, bool) ::: Does x like y?\nYoung($x, bool) ::: Is x young?\nCold($x, bool) ::: Is x cold?\nSees($x, $y, bool) ::: Does x see y?\nFacts:\nChases(Bear, Squirrel, True) ::: The bear chases the squirrel.\nChases(Cat, Cow, True) ::: The cat chases the cow.\nBlue(Cat, True) ::: The cat is blue.\nGreen(Cat, True) ::: The cat is green.\nLikes(Cat, Bear, True) ::: The cat likes the bear.\nLikes(Cat, Squirrel, True) ::: The cat likes the squirrel.\nChases(Cow, Cat, True) ::: The cow chases the cat.\nCold(Cow, True) ::: The cow is cold.\nLikes(Cow, Bear, True) ::: The cow likes the bear.\nLikes(Cow, Cat, True) ::: The cow likes the cat.\nSees(Cow, Bear, True) ::: The cow sees the bear.\nSees(Cow, Squirrel, True) ::: The cow sees the squirrel.\nGreen(Squirrel, True) ::: The squirrel is green.\nLikes(Squirrel, Bear, True) ::: The squirrel likes the bear.\nLikes(Squirrel, Cat, True) ::: The squirrel likes the cat.\nLikes(Squirrel, Cow, True) ::: The squirrel likes the cow.\nRules:\nYoung($x, True) >>> Sees($x, Cow, True) ::: If something is young then it sees the cow.\nYoung($x, True) && Likes($x, Bear, True) >>> Green($x, True) ::: If something is young and it likes the bear then the bear is green.\nSees($x, Squirrel, True) >>> Sees($x, Cat, True) ::: If the squirrel sees the cat then the cat chases the bear.\nGreen($x, True) >>> Chases($x, Cow, True) ::: If something is green then it chases the cow.\nChases($x, Cow, True) >>> Young($x, True) ::: If something chases the cow then it is young.\n------\nProblem:\nThe bear chases the squirrel. The cat chases the cow. The cat is blue. The cat is green. The cat likes the bear"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-375_Q1",
    "context": "The bald eagle eats the dog. The bald eagle eats the tiger. The cat needs the bald eagle. The cat needs the dog. The cat sees the dog. The dog eats the tiger. The dog is red. The tiger is red. The tiger needs the bald eagle. The tiger needs the cat. If someone needs the tiger then the tiger needs the dog. If someone eats the cat and the cat sees the tiger then the cat eats the tiger. If someone needs the dog then the dog needs the tiger. Blue people are red. If someone is red and they see the bald eagle then the bald eagle is big. Red people are young. If someone sees the tiger then they see the cat. If someone needs the dog then they are blue. If someone is blue and young then they see the bald eagle.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The tiger needs the cat.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y, bool) ::: Does x eat y?\nNeeds($x, $y, bool) ::: Does x need y?\nSees($x, $y, bool) ::: Does x see y?\nIs($x, $y, bool) ::: Is x y?\nBig($x, bool) ::: Is x big?\nBlue($x, bool) ::: Is x blue?\nRed($x, bool) ::: Is x red?\nYoung($x, bool) ::: Is x young?\nFacts:\nEats(BaldEagle, Dog, True) ::: The bald eagle eats the dog.\nEats(BaldEagle, Tiger, True) ::: The bald eagle eats the tiger.\nNeeds(Cat, BaldEagle, True) ::: The cat needs the bald eagle.\nNeeds(Cat, Dog, True) ::: The cat needs the dog.\nSees(Cat, Dog, True) ::: The cat sees the dog.\nEats(Dog, Tiger, True) ::: The dog eats the tiger.\nIs(Dog, Red, True) ::: The dog is red.\nIs(Tiger, Red, True) ::: The tiger is red.\nNeeds(Tiger, BaldEagle, True) ::: The tiger needs the bald eagle.\nNeeds(Tiger, Cat, True) ::: The tiger needs the cat.\nIf($x, $y, $z, bool) ::: If $x then $y.\nIf($x, $y, $z, True) ::: If someone needs the tiger then the tiger needs the dog.\nIf($x, $y, $z, True) ::: If someone eats the cat and the cat sees the tiger then the cat eats the tiger.\nIf($x, $y, $z, True) ::: If someone needs the dog then the dog needs the tiger.\nBlue($x, True) >>> Red($x, True) ::: Blue people are red.\nIf($x, $y, $z, True) ::: If someone is red and they see the bald eagle then the bald eagle is big.\nRed($x, True) >>> Young($x, True) ::: Red people are young.\nIf($x, $y, $z, True) ::: If someone sees the tiger then they see the cat.\nIf($x, $y, $z, True) ::: If someone needs the dog then they are blue.\nIf($x, $y, $z, True) ::: If someone is blue and young then they see the bald eagle.\nQuery:\nNeeds(Tiger, Cat, True) ::: The tiger needs the cat.\n------\nPro"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-528_Q22",
    "context": "Anne is cold. Anne is kind. Bob is not red. Bob is not round. Erin is white. Fiona is kind. Fiona is quiet. All quiet, round people are red. All white, kind people are red. If someone is furry and not kind then they are white. All red people are white. White people are not furry. If Bob is round then Bob is quiet. All quiet people are cold. If someone is cold then they are round. If Bob is furry then Bob is round.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Erin is quiet.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nKind($x, bool) ::: Is x kind?\nRed($x, bool) ::: Is x red?\nRound($x, bool) ::: Is x round?\nFurry($x, bool) ::: Is x furry?\nQuiet($x, bool) ::: Is x quiet?\nWhite($x, bool) ::: Is x white?\nFacts:\nCold(Anne, True) ::: Anne is cold.\nKind(Anne, True) ::: Anne is kind.\nNot(Red(Bob, True)) ::: Bob is not red.\nNot(Round(Bob, True)) ::: Bob is not round.\nWhite(Erin, True) ::: Erin is white.\nKind(Fiona, True) ::: Fiona is kind.\nQuiet(Fiona, True) ::: Fiona is quiet.\nRules:\nQuiet($x, True) && Round($x, True) >>> Red($x, True) ::: All quiet, round people are red.\nWhite($x, True) && Kind($x, True) >>> Red($x, True) ::: All white, kind people are red.\nFurry($x, True) && Not(Kind($x, True)) >>> White($x, True) ::: If someone is furry and not kind then they are white.\nRed($x, True) >>> White($x, True) ::: All red people are white.\nWhite($x, True) >>> Not(Furry($x, True)) ::: White people are not furry.\nIf(Bob, Round($x, True)) >>> Quiet($x, True) ::: If Bob is round then Bob is quiet.\nQuiet($x, True) >>> Cold($x, True) ::: All quiet people are cold.\nCold($x, True) >>> Round($x, True) ::: If someone is cold then they are round.\nIf(Bob, Furry($x, True)) >>> Round($x, True) ::: If Bob is furry then Bob is round.\nQuery:\nQuiet(Erin, True) ::: Erin is quiet.\n------\nProblem:\nAnne is cold. Anne is kind. Bob is not red. Bob is not round. Erin is white. Fiona is kind. Fiona is quiet. All quiet, round people are red. All white, kind people are red. If someone is furry and not kind then they are white. All red people are white. White people are not furry. If Bob is round then Bob is quiet. All quiet people are cold. If someone is cold then they are round. If Bob is furry then Bob is round.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Erin is"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-788_Q20",
    "context": "Dave is furry. Erin is big. Erin is furry. Erin is smart. Fiona is big. Fiona is furry. Fiona is nice. Fiona is round. Fiona is smart. Harry is big. Harry is round. If something is kind then it is big. If Harry is round and Harry is smart then Harry is kind. All round things are nice. All kind, nice things are round. Smart, big things are nice. If something is kind then it is furry. All green things are smart. If something is round then it is nice. All nice, big things are green.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Erin is kind.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nFurry($x, bool) ::: Is x furry?\nBig($x, bool) ::: Is x big?\nSmart($x, bool) ::: Is x smart?\nKind($x, bool) ::: Is x kind?\nNice($x, bool) ::: Is x nice?\nRound($x, bool) ::: Is x round?\nGreen($x, bool) ::: Is x green?\nFacts:\nFurry(Dave, True) ::: Dave is furry.\nBig(Erin, True) ::: Erin is big.\nFurry(Erin, True) ::: Erin is furry.\nSmart(Erin, True) ::: Erin is smart.\nFurry(Fiona, True) ::: Fiona is furry.\nBig(Fiona, True) ::: Fiona is big.\nNice(Fiona, True) ::: Fiona is nice.\nRound(Fiona, True) ::: Fiona is round.\nSmart(Fiona, True) ::: Fiona is smart.\nRound(Harry, True) ::: Harry is round.\nBig(Harry, True) ::: Harry is big.\nRules:\nKind($x, True) >>> Big($x, True) ::: If something is kind then it is big.\nBig($x, True) && Smart($x, True) >>> Kind($x, True) ::: If Harry is round and Harry is smart then Harry is kind.\nNice($x, True) >>> Round($x, True) ::: All round things are nice.\nKind($x, True) && Nice($x, True) >>> Round($x, True) ::: All kind, nice things are round.\nSmart($x, True) && Big($x, True) >>> Nice($x, True) ::: Smart, big things are nice.\nKind($x, True) >>> Furry($x, True) ::: If something is kind then it is furry.\nGreen($x, True) >>> Smart($x, True) ::: All green things are smart.\nRound($x, True) >>> Nice($x, True) ::: If something is round then it is nice.\nNice($x, True) && Big($x, True) >>> Green($x, True) ::: All nice, big things are green.\nQuery:\nKind(Erin, True) ::: Erin is kind.\n------"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-444_Q17",
    "context": "The bald eagle chases the cow. The bald eagle likes the rabbit. The bald eagle visits the cow. The cow is not young. The mouse chases the rabbit. The mouse likes the bald eagle. The mouse likes the cow. The mouse does not like the rabbit. The rabbit chases the mouse. The rabbit is kind. The rabbit is young. The rabbit likes the cow. If something is round then it chases the rabbit. If something chases the cow then it is young. If the bald eagle likes the rabbit and the rabbit chases the cow then the bald eagle does not visit the cow. If the bald eagle chases the rabbit then the rabbit is round. If something is young and it likes the rabbit then it is green. If something is green then it is round. If the rabbit likes the bald eagle then the bald eagle is round. If something chases the bald eagle then it likes the bald eagle. If something is green and it likes the cow then it visits the rabbit.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The rabbit is not green.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nLikes($x, $y, bool) ::: Does x like y?\nVisits($x, $y, bool) ::: Does x visit y?\nYoung($x, bool) ::: Is x young?\nRound($x, bool) ::: Is x round?\nKind($x, bool) ::: Is x kind?\nFacts:\nChases(BaldEagle, Cow, True) ::: The bald eagle chases the cow.\nLikes(BaldEagle, Rabbit, True) ::: The bald eagle likes the rabbit.\nVisits(BaldEagle, Cow, True) ::: The bald eagle visits the cow.\nNot(Young(Cow, True)) ::: The cow is not young.\nChases(Mouse, Rabbit, True) ::: The mouse chases the rabbit.\nLikes(Mouse, BaldEagle, True) ::: The mouse likes the bald eagle.\nLikes(Mouse, Cow, True) ::: The mouse likes the cow.\nNot(Likes(Mouse, Rabbit, True)) ::: The mouse does not like the rabbit.\nChases(Rabbit, Mouse, True) ::: The rabbit chases the mouse.\nKind(Rabbit, True) ::: The rabbit is kind.\nYoung(Rabbit, True) ::: The rabbit is young.\nLikes(Rabbit, Cow, True) ::: The rabbit likes the cow.\nRound(x, True) >>> Chases(x, Rabbit, True) ::: If something is round then it chases the rabbit.\nYoung(x, True) >>> Chases(x, Cow, True) ::: If something chases the cow then it is young.\nNot(Chases(BaldEagle, Rabbit, True)) >>> Not(Visits(BaldEagle, Cow, True)) ::: If the bald eagle likes the rabbit and the rabbit chases the cow then the bald eagle does not visit the cow.\nChases(BaldEagle, Rabbit, True) >>> Round(Rabbit, True) ::: If the bald eagle chases the rabbit then the rabbit is round.\nYoung(x, True) && Likes(x, Rabbit, True) >>> Green(x, True) ::: If something is"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-395_Q6",
    "context": "Charlie is blue. Charlie is cold. Charlie is green. Charlie is kind. Charlie is white. Dave is green. Dave is nice. Erin is big. Erin is blue. Erin is cold. Erin is green. Erin is kind. Erin is nice. Erin is white. Gary is blue. Gary is cold. All big things are blue. If Gary is green and Gary is nice then Gary is kind. All cold things are big. All blue, kind things are white. If something is cold and blue then it is kind. All kind, blue things are big. All blue things are cold. All green, white things are big. Green things are cold.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Dave is not big.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue($x, bool) ::: Is x blue?\nCold($x, bool) ::: Is x cold?\nKind($x, bool) ::: Is x kind?\nNice($x, bool) ::: Is x nice?\nWhite($x, bool) ::: Is x white?\nBig($x, bool) ::: Is x big?\nFacts:\nBlue(Charlie, True) ::: Charlie is blue.\nCold(Charlie, True) ::: Charlie is cold.\nGreen(Charlie, True) ::: Charlie is green.\nKind(Charlie, True) ::: Charlie is kind.\nWhite(Charlie, True) ::: Charlie is white.\nGreen(Dave, True) ::: Dave is green.\nNice(Dave, True) ::: Dave is nice.\nBig(Erin, True) ::: Erin is big.\nBlue(Erin, True) ::: Erin is blue.\nCold(Erin, True) ::: Erin is cold.\nGreen(Erin, True) ::: Erin is green.\nKind(Erin, True) ::: Erin is kind.\nNice(Erin, True) ::: Erin is nice.\nWhite(Erin, True) ::: Erin is white.\nBlue(Gary, True) ::: Gary is blue.\nCold(Gary, True) ::: Gary is cold.\nRules:\nBig($x, True) >>> Blue($x, True) ::: All big things are blue.\nGreen($x, True) && Nice($x, True) >>> Kind($x, True) ::: If Gary is green and Gary is nice then Gary is kind.\nCold($x, True) >>> Big($x, True) ::: All cold things are big.\nBlue($x, True) && Kind($x, True) >>> White($x, True) ::: All blue, kind things are white.\nCold($x, True) && Blue($x, True) >>> Kind($x, True) ::: If something is cold and blue then it is kind.\nBlue($x, True) && Kind($x, True) >>> Big($x, True) ::: All blue, kind things are big.\nBlue($x, True) >>> Cold($x, True) ::: All blue things are cold.\nGreen($x, True) >>> Big($x, True) ::: Green things are cold."
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-567_Q6",
    "context": "Anne is kind. Anne is red. Dave is white. Fiona is not nice. Fiona is quiet. Fiona is young. Gary is quiet. If someone is rough then they are not kind. Red people are young. If someone is white then they are rough. If someone is quiet then they are red. If someone is nice then they are quiet. Quiet, young people are white.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Dave is kind.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nKind($x, bool) ::: Is x kind?\nRed($x, bool) ::: Is x red?\nWhite($x, bool) ::: Is x white?\nNice($x, bool) ::: Is x nice?\nQuiet($x, bool) ::: Is x quiet?\nRough($x, bool) ::: Is x rough?\nYoung($x, bool) ::: Is x young?\nFacts:\nKind(Anne, True) ::: Anne is kind.\nRed(Anne, True) ::: Anne is red.\nWhite(Dave, True) ::: Dave is white.\nNotNice(Fiona, True) ::: Fiona is not nice.\nQuiet(Fiona, True) ::: Fiona is quiet.\nYoung(Fiona, True) ::: Fiona is young.\nQuiet(Gary, True) ::: Gary is quiet.\nRules:\nNotKind($x, True) >>> Rough($x, True) ::: If someone is rough then they are not kind.\nRed($x, True) >>> Young($x, True) ::: Red people are young.\nWhite($x, True) >>> Rough($x, True) ::: If someone is white then they are rough.\nQuiet($x, True) >>> Red($x, True) ::: If someone is quiet then they are red.\nNice($x, True) >>> Quiet($x, True) ::: If someone is nice then they are quiet.\nQuiet($x, True) && Young($x, True) >>> White($x, True) ::: Quiet, young people are white.\nQuery:\nKind(Dave, True) ::: Dave is kind.\n------\nProblem:\nAnne is kind. Anne is red. Dave is white. Fiona is not nice. Fiona is quiet. Fiona is young. Gary is quiet. If someone is rough then they are not kind. Red people are young. If someone is white then they are rough. If someone is quiet then they are red. If someone is nice then they are quiet. Quiet, young people are white.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Fiona is kind.\n###\nPredicates:\nKind($x, bool) ::: Is x kind?\nRed($x, bool) ::: Is x red?\nWhite($x, bool) ::: Is x white?\nN"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-175_Q6",
    "context": "The cow sees the squirrel. The mouse is big. The mouse needs the cow. The squirrel sees the tiger. The tiger sees the cow. The tiger sees the mouse. The tiger visits the cow. If someone needs the tiger and they are rough then the tiger needs the squirrel. If someone is cold and they see the tiger then the tiger visits the cow. If the squirrel needs the tiger and the squirrel sees the mouse then the mouse sees the squirrel. If someone needs the tiger and they need the cow then the cow is blue. If someone needs the cow then they are rough. If someone is rough then they visit the mouse. If the tiger is big then the tiger needs the mouse. If the tiger needs the squirrel then the squirrel needs the cow. If someone is rough then they need the tiger.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The mouse does not need the tiger.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nSees($x, $y, bool) ::: Does x see y?\nNeeds($x, $y, bool) ::: Does x need y?\nVisits($x, $y, bool) ::: Does x visit y?\nBig($x, bool) ::: Is x big?\nCold($x, bool) ::: Is x cold?\nBlue($x, bool) ::: Is x blue?\nRough($x, bool) ::: Is x rough?\nFacts:\nSees(Cow, Squirrel, True) ::: The cow sees the squirrel.\nBig(Mouse, True) ::: The mouse is big.\nNeeds(Mouse, Cow, True) ::: The mouse needs the cow.\nSees(Tiger, Cow, True) ::: The tiger sees the cow.\nSees(Tiger, Mouse, True) ::: The tiger sees the mouse.\nVisits(Tiger, Cow, True) ::: The tiger visits the cow.\nRules:\nNeeds($x, Tiger, True) && Rough($x, True) >>> Needs($x, Squirrel, True) ::: If someone needs the tiger and they are rough then the tiger needs the squirrel.\nCold($x, True) && Sees($x, Tiger, True) >>> Visits(Tiger, Cow, True) ::: If someone is cold and they see the tiger then the tiger visits the cow.\nNeeds($x, Tiger, True) && Needs($x, Cow, True) >>> Cow($x, True) ::: If someone needs the tiger and they need the cow then the cow is blue.\nNeeds($x, Cow, True) >>> Rough($x, True) ::: If someone needs the cow then they are rough.\nRough($x, True) >>> Visits($x, Mouse, True) ::: If someone is rough then they visit the mouse.\nBig($x, True) >>> Needs($x, Tiger, True) ::: If the tiger is big then the tiger needs the mouse.\nNeeds($x, Tiger, True) && Sees($x, Squirrel, True) >>> Needs($x, Cow, True) ::: If the squirrel needs the tiger and the squirrel sees the mouse then the mouse sees the squirrel.\nNeeds($x, Tiger, True) >>> Needs"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-36_Q13",
    "context": "Bob is blue. Bob is quiet. Bob is smart. Bob is white. Dave is green. Dave is round. Dave is smart. Erin is blue. Gary is blue. Gary is green. Gary is smart. If Erin is big then Erin is smart. All green, white people are smart. White, smart people are round. If Dave is blue then Dave is round. Quiet, green people are round. All green people are quiet. All smart people are green. All blue people are smart. If someone is round and smart then they are big.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Dave is not blue.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue($x, bool) ::: Is x blue?\nQuiet($x, bool) ::: Is x quiet?\nSmart($x, bool) ::: Is x smart?\nWhite($x, bool) ::: Is x white?\nRound($x, bool) ::: Is x round?\nBig($x, bool) ::: Is x big?\nFacts:\nBlue(Bob, True) ::: Bob is blue.\nQuiet(Bob, True) ::: Bob is quiet.\nSmart(Bob, True) ::: Bob is smart.\nWhite(Bob, True) ::: Bob is white.\nBlue(Dave, True) ::: Dave is blue.\nRound(Dave, True) ::: Dave is round.\nSmart(Dave, True) ::: Dave is smart.\nBlue(Erin, True) ::: Erin is blue.\nBlue(Gary, True) ::: Gary is blue.\nGreen(Gary, True) ::: Gary is green.\nSmart(Gary, True) ::: Gary is smart.\nBig(Erin, True) >>> Smart(Erin, True) ::: If Erin is big then Erin is smart.\nGreen($x, True) >>> White($x, True) ::: All green, white people are smart.\nWhite($x, True) >>> Round($x, True) ::: White, smart people are round.\nBlue($x, True) >>> Round($x, True) ::: If Dave is blue then Dave is round.\nQuiet($x, True) >>> Green($x, True) ::: Quiet, green people are round.\nGreen($x, True) >>> Quiet($x, True) ::: All green people are quiet.\nSmart($x, True) >>> Green($x, True) ::: All smart people are green.\nBlue($x, True) >>> Smart($x, True) ::: All blue people are smart.\nRound($x, True) >>> Big($x, True) ::: If someone is round and smart then they are big.\nQuery:\nNot(Blue(Dave, True)) ::: Dave is not blue.\n------\nProblem:\nBob is blue. Bob is quiet. Bob is smart. Bob is white. Dave is green. Dave is round. Dave is smart. Erin is blue. Gary is blue. Gary is green. Gary is smart. If Erin is big then Erin is smart. All"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-533_Q7",
    "context": "The bear eats the dog. The bear is red. The dog is cold. The mouse eats the rabbit. The mouse is not green. The mouse sees the dog. The rabbit sees the mouse. If the rabbit eats the dog then the dog sees the mouse. If someone is cold then they are red. If someone chases the mouse then they are red. If someone sees the mouse then they are rough. If someone is green then they chase the rabbit. All rough people are green. If someone chases the rabbit then the rabbit eats the dog. If the rabbit sees the dog and the rabbit does not eat the mouse then the rabbit is red. If someone eats the rabbit and they are green then the rabbit does not eat the bear.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The rabbit chases the rabbit.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y) ::: Does x eat y?\nRed($x, bool) ::: Is x red?\nCold($x, bool) ::: Is x cold?\nSees($x, $y) ::: Does x see y?\nChases($x, $y) ::: Does x chase y?\nRough($x, bool) ::: Is x rough?\nGreen($x, bool) ::: Is x green?\nFacts:\nEats(Bear, Dog) ::: The bear eats the dog.\nRed(Bear, True) ::: The bear is red.\nCold(Dog, True) ::: The dog is cold.\nEats(Mouse, Rabbit) ::: The mouse eats the rabbit.\nNot(Green(Mouse, True)) ::: The mouse is not green.\nSees(Mouse, Dog) ::: The mouse sees the dog.\nSees(Rabbit, Mouse) ::: The rabbit sees the mouse.\nIf(Eats(Rabbit, Dog), Dog(Mouse, True)) ::: If the rabbit eats the dog then the dog sees the mouse.\nCold($x, True) >>> Red($x, True) ::: If someone is cold then they are red.\nChases($x, Mouse) >>> Red($x, True) ::: If someone chases the mouse then they are red.\nSees($x, Mouse) >>> Rough($x, True) ::: If someone sees the mouse then they are rough.\nGreen($x, True) >>> Chases(Rabbit, $x) ::: If someone is green then they chase the rabbit.\nAll(Rough($x, True), Green($x, True)) ::: All rough people are green.\nIf(Chases(Rabbit, $x), Eats(Rabbit, Dog)) ::: If someone chases the rabbit then the rabbit eats the dog.\nIf(Sees(Rabbit, Dog), Not(Eats(Rabbit, Mouse)), Red(Rabbit, True)) ::: If the rabbit sees the dog and the rabbit does not eat the mouse then the rabbit is red.\nIf(Eats(Rabbit, $x), Green($x, True), Not(Eats(Rabbit, Bear))) ::: If someone eats the rabbit and they are green then the rabbit does not eat the bear.\nQuery"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-26_Q7",
    "context": "The bald eagle chases the squirrel. The bald eagle is kind. The bald eagle is red. The bald eagle sees the rabbit. The bald eagle sees the tiger. The rabbit chases the bald eagle. The rabbit visits the squirrel. The squirrel is green. The squirrel is kind. The squirrel is red. The squirrel sees the bald eagle. The squirrel sees the rabbit. The squirrel visits the rabbit. The tiger sees the squirrel. The tiger visits the rabbit. The tiger visits the squirrel. If someone sees the rabbit then the rabbit sees the tiger. If someone visits the tiger and the tiger visits the rabbit then the tiger is kind. If someone chases the bald eagle then they chase the squirrel. If someone is kind then they chase the bald eagle. If someone is green and they visit the rabbit then the rabbit chases the tiger. If someone chases the squirrel then they see the tiger. If someone chases the bald eagle and they are green then they see the tiger. If someone is kind then they visit the tiger.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The tiger chases the bald eagle.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nKind($x, bool) ::: Is x kind?\nRed($x, bool) ::: Is x red?\nSees($x, $y, bool) ::: Does x see y?\nVisits($x, $y, bool) ::: Does x visit y?\nFacts:\nChases(BaldEagle, Squirrel, True) ::: The bald eagle chases the squirrel.\nKind(BaldEagle, True) ::: The bald eagle is kind.\nRed(BaldEagle, True) ::: The bald eagle is red.\nSees(BaldEagle, Rabbit, True) ::: The bald eagle sees the rabbit.\nSees(BaldEagle, Tiger, True) ::: The bald eagle sees the tiger.\nChases(Rabbit, BaldEagle, True) ::: The rabbit chases the bald eagle.\nVisits(Rabbit, Squirrel, True) ::: The rabbit visits the squirrel.\nGreen(Squirrel, True) ::: The squirrel is green.\nKind(Squirrel, True) ::: The squirrel is kind.\nRed(Squirrel, True) ::: The squirrel is red.\nSees(Squirrel, BaldEagle, True) ::: The squirrel sees the bald eagle.\nSees(Squirrel, Rabbit, True) ::: The squirrel sees the rabbit.\nVisits(Squirrel, Rabbit, True) ::: The squirrel visits the rabbit.\nSees(Tiger, Squirrel, True) ::: The tiger sees the squirrel.\nVisits(Tiger, Rabbit, True) ::: The tiger visits the rabbit.\nVisits(Tiger, Squirrel, True) ::: The tiger visits the squirrel.\nRules:\nSees($x, $y, True) >>> Chases($x, $y, True) ::: If someone sees the rabbit then the rabbit sees the tiger.\nVisits($x, $y, True) && Visits($y, $z, True) >>> Chases($x, $z, True) ::: If someone visits the tiger and the tiger visits the rabbit then the tiger is kind.\nCh"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-130_Q21",
    "context": "The bear is nice. The bear is red. The bear does not need the mouse. The cat chases the bear. The cat chases the mouse. The lion eats the bear. The lion eats the cat. The lion needs the bear. The lion needs the cat. The mouse eats the lion. If someone eats the mouse then the mouse chases the bear. If the mouse chases the bear then the bear eats the cat. If someone needs the cat and the cat is red then they eat the bear. If someone chases the bear then they do not eat the bear. If someone is nice then they do not eat the bear. If someone eats the cat then they do not chase the cat. If someone chases the lion and they need the lion then they do not eat the mouse. If someone needs the lion then they eat the mouse. If someone chases the bear then the bear needs the lion.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bear is not blue.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNice($x, bool) ::: Is x nice?\nRed($x, bool) ::: Is x red?\nNeeds($x, $y, bool) ::: Does x need y?\nEats($x, $y, bool) ::: Does x eat y?\nChases($x, $y, bool) ::: Does x chase y?\nFacts:\nNice(Bear, True) ::: The bear is nice.\nRed(Bear, True) ::: The bear is red.\nNeeds(Bear, Mouse, False) ::: The bear does not need the mouse.\nChases(Bear, Mouse, False) ::: The bear does not chase the mouse.\nChases(Cat, Bear, True) ::: The cat chases the bear.\nChases(Cat, Mouse, True) ::: The cat chases the mouse.\nEats(Lion, Bear, True) ::: The lion eats the bear.\nEats(Lion, Cat, True) ::: The lion eats the cat.\nNeeds(Lion, Bear, True) ::: The lion needs the bear.\nNeeds(Lion, Cat, True) ::: The lion needs the cat.\nEats(Mouse, Lion, True) ::: The mouse eats the lion.\nRules:\nIf someone eats the mouse then the mouse chases the bear ::: If someone eats the mouse then the mouse chases the bear.\nIf the mouse chases the bear then the bear eats the cat ::: If the mouse chases the bear then the bear eats the cat.\nIf someone needs the cat and the cat is red then they eat the bear ::: If someone needs the cat and the cat is red then they eat the bear.\nIf someone chases the bear then they do not eat the bear ::: If someone chases the bear then they do not eat the bear.\nIf someone is nice then they do not eat the bear ::: If someone is nice then they do not eat the bear.\nIf someone eats the cat then they do not chase the cat ::: If someone eats the cat then they do not chase the cat.\nIf someone chases the lion and they need the lion then they do not eat the mouse ::: If someone chases the lion and they need the lion then they do not eat the mouse.\nIf someone needs the lion then they eat the mouse ::: If someone needs the lion then they eat the mouse.\nIf someone chases the bear"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-806_Q12",
    "context": "The bald eagle chases the lion. The bear sees the dog. The dog is rough. The dog does not visit the bald eagle. The dog visits the bear. The lion chases the dog. The lion visits the bald eagle. If something sees the bear then the bear sees the lion. If the bear does not see the lion then the lion visits the bear. Young things are kind. If something is kind then it does not visit the lion. If something visits the lion and it is young then it does not chase the bald eagle. If something chases the bear then the bear is young. If something visits the bear then the bear chases the bald eagle. If something chases the bear then it visits the bald eagle. If something chases the bald eagle then the bald eagle chases the bear.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bear visits the lion.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nVisits($x, $y, bool) ::: Does x visit y?\nSees($x, $y, bool) ::: Does x see y?\nKind($x, bool) ::: Is x kind?\nYoung($x, bool) ::: Is x young?\nRough($x, bool) ::: Is x rough?\nFacts:\nChases(BaldEagle, Lion, True) ::: The bald eagle chases the lion.\nSees(Bear, Dog, True) ::: The bear sees the dog.\nRough(Dog, True) ::: The dog is rough.\nDoesNotVisit(Dog, BaldEagle, True) ::: The dog does not visit the bald eagle.\nVisits(Dog, Bear, True) ::: The dog visits the bear.\nChases(Dog, Lion, True) ::: The lion chases the dog.\nVisits(Lion, BaldEagle, True) ::: The lion visits the bald eagle.\nSees(Bear, Lion, True) ::: If something sees the bear then the bear sees the lion.\nDoesNotSee(Bear, Lion, True) ::: If the bear does not see the lion then the lion visits the bear.\nKind(Thing, True) >>> DoesNotVisit(Thing, Lion, True) ::: If something is kind then it does not visit the lion.\nVisits(Thing, Lion) && Young(Thing, True) >>> DoesNotChase(Thing, BaldEagle, True) ::: If something visits the lion and it is young then it does not chase the bald eagle.\nChases(Thing, Bear) >>> Young(Thing, True) ::: If something chases the bear then the bear is young.\nVisits(Thing, Bear) >>> Chases(Thing, BaldEagle, True) ::: If something visits the bear then the bear chases the bald eagle.\nVisits(Thing, Bear) >>> Chases(Thing, BaldEagle, True) ::: If something chases the bear then it visits the bald eagle.\nChases(Thing, BaldEagle) >>> Chases(Thing, Bear, True) ::: If something chases the bald eagle then the bald eagle chases the bear.\nQuery:\nVisits(Bear,"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-1004_Q12",
    "context": "The dog chases the rabbit. The mouse chases the rabbit. The mouse is blue. The mouse is not rough. The rabbit needs the tiger. The tiger chases the dog. The tiger chases the rabbit. The tiger is big. The tiger does not like the dog. The tiger needs the mouse. If someone chases the tiger then they do not need the rabbit. If someone needs the rabbit then they do not need the tiger. If someone is big then they are kind. If someone needs the dog then the dog does not like the mouse. If someone is blue and they do not need the rabbit then the rabbit is big. If someone is kind and they chase the rabbit then they need the dog. If someone likes the rabbit then they are big. If the tiger needs the dog then the dog likes the rabbit. If someone is big and they chase the mouse then the mouse is rough.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The dog is not kind.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nNeeds($x, $y, bool) ::: Does x need y?\nLikes($x, $y, bool) ::: Does x like y?\nIs($x, $y, bool) ::: Is x y?\nBig($x, bool) ::: Is x big?\nKind($x, bool) ::: Is x kind?\nRough($x, bool) ::: Is x rough?\nFacts:\nChases(Dog, Rabbit, True) ::: The dog chases the rabbit.\nChases(Mouse, Rabbit, True) ::: The mouse chases the rabbit.\nIs(Mouse, Blue, True) ::: The mouse is blue.\nIs(Mouse, Rough, False) ::: The mouse is not rough.\nNeeds(Rabbit, Tiger, True) ::: The rabbit needs the tiger.\nChases(Tiger, Dog, True) ::: The tiger chases the dog.\nChases(Tiger, Rabbit, True) ::: The tiger chases the rabbit.\nIs(Tiger, Big, True) ::: The tiger is big.\nIs(Tiger, Likes, False) ::: The tiger does not like the dog.\nNeeds(Tiger, Mouse, True) ::: The tiger needs the mouse.\nIs(Tiger, Needs, False) ::: If someone chases the tiger then they do not need the rabbit.\nIs(Tiger, Needs, False) ::: If someone needs the rabbit then they do not need the tiger.\nIs(Tiger, Big, True) ::: If someone is big then they are kind.\nIs(Tiger, Needs, False) ::: If someone needs the dog then the dog does not like the mouse.\nIs(Mouse, Blue, True) && Is(Mouse, Needs, False) ::: If someone is blue and they do not need the rabbit then the rabbit is big.\nIs(Tiger, Kind, True) && Is(Tiger, Chases, True) ::: If someone is kind and they chase the rabbit then they need the dog.\nIs(Tiger, Likes, False) && Is(Tiger, Needs, True) ::: If the tiger needs the dog then the dog likes the rabbit.\nIs(Tiger, Big, True) && Is(Tiger, Chases, True) ::: If someone is big and they chase the mouse then the mouse is rough.\nQuery:\nIs(Dog, Kind, False) ::: The dog is not kind.\n------"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-287_Q9",
    "context": "Anne is not kind. Anne is quiet. Dave is not green. Dave is rough. Dave is round. Dave is smart. Fiona is quiet. Fiona is round. Gary is smart. Gary is young. Round people are rough. If someone is smart then they are rough. All young, rough people are smart. If someone is rough then they are kind. Rough people are kind. If Fiona is smart and Fiona is kind then Fiona is green. If Anne is round then Anne is quiet. Round, rough people are quiet. All kind people are young.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Fiona is smart.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nKind($x, bool) ::: Is x kind?\nQuiet($x, bool) ::: Is x quiet?\nGreen($x, bool) ::: Is x green?\nRound($x, bool) ::: Is x round?\nSmart($x, bool) ::: Is x smart?\nRough($x, bool) ::: Is x rough?\nYoung($x, bool) ::: Is x young?\nFacts:\nNotKind(Anne, True) ::: Anne is not kind.\nQuiet(Anne, True) ::: Anne is quiet.\nNotGreen(Dave, True) ::: Dave is not green.\nRough(Dave, True) ::: Dave is rough.\nRound(Dave, True) ::: Dave is round.\nSmart(Dave, True) ::: Dave is smart.\nQuiet(Fiona, True) ::: Fiona is quiet.\nRound(Fiona, True) ::: Fiona is round.\nSmart(Gary, True) ::: Gary is smart.\nYoung(Gary, True) ::: Gary is young.\nRules:\nRound($x, True) >>> Rough($x, True) ::: Round people are rough.\nSmart($x, True) >>> Rough($x, True) ::: If someone is smart then they are rough.\nYoung($x, True) && Rough($x, True) >>> Smart($x, True) ::: All young, rough people are smart.\nRough($x, True) >>> Kind($x, True) ::: If someone is rough then they are kind.\nRough($x, True) >>> Kind($x, True) ::: Rough people are kind.\nSmart($x, True) && Kind($x, True) >>> Green($x, True) ::: If Fiona is smart and Fiona is kind then Fiona is green.\nRound($x, True) >>> Quiet($x, True) ::: If Anne is round then Anne is quiet.\nRound($x, True) && Rough($x, True) >>> Quiet($x, True) ::: Round, rough people are quiet.\nYoung($x, True) >>> Kind($x, True) ::: All kind people are young.\nQuery:\nSmart(Fiona, True) ::: Fiona is smart.\n------\nProblem:\nAnne is not kind. Anne is quiet. Dave is not green. Dave is rough. Dave is round. Dave is smart. Fiona is quiet. Fiona is round. Gary is smart. Gary is young. Round people are rough. If someone is smart then they are rough. All young, rough people are smart. If someone is"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-206_Q5",
    "context": "The bald eagle does not need the mouse. The bear does not eat the bald eagle. The bear eats the tiger. The mouse chases the bald eagle. The mouse eats the bear. The mouse is round. The tiger eats the bear. If something is round then it chases the bear. If something eats the bear and it does not need the bald eagle then it chases the bear. If something chases the bear then it needs the tiger. If something chases the mouse and the mouse is red then it does not eat the bald eagle. If something is red then it does not eat the bald eagle. If something is round and it needs the tiger then the tiger is round. If something needs the bald eagle then it is not red. If something needs the bald eagle and the bald eagle eats the tiger then the tiger eats the mouse. If something is round and it does not eat the mouse then it does not need the mouse.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The mouse needs the tiger.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNeeds($x, $y, bool) ::: Does x need y?\nEats($x, $y, bool) ::: Does x eat y?\nChases($x, $y, bool) ::: Does x chase y?\nIsRound($x, bool) ::: Is x round?\nIsRed($x, bool) ::: Is x red?\nFacts:\nNeeds(BaldEagle, Mouse, False) ::: The bald eagle does not need the mouse.\nEats(Bear, BaldEagle, False) ::: The bear does not eat the bald eagle.\nEats(Bear, Tiger, True) ::: The bear eats the tiger.\nChases(Mouse, BaldEagle, True) ::: The mouse chases the bald eagle.\nEats(Mouse, Bear, True) ::: The mouse eats the bear.\nIsRound(Mouse, True) ::: The mouse is round.\nEats(Tiger, Bear, True) ::: The tiger eats the bear.\nRules:\nIf something is round then it chases the bear. ::: If something is round then it chases the bear.\nIf something eats the bear and it does not need the bald eagle then it chases the bear. ::: If something eats the bear and it does not need the bald eagle then it chases the bear.\nIf something chases the bear then it needs the tiger. ::: If something chases the bear then it needs the tiger.\nIf something chases the mouse and the mouse is red then it does not eat the bald eagle. ::: If something chases the mouse and the mouse is red then it does not eat the bald eagle.\nIf something is red then it does not eat the bald eagle. ::: If something is red then it does not eat the bald eagle.\nIf something is round and it needs the tiger then the tiger is round. ::: If something is round and it needs the tiger then the tiger is round.\nIf something needs the bald eagle then it is not red. ::: If something needs the bald eagle then it is not red.\nIf something needs the bald eagle and the bald eagle eats the tiger then the tiger eats the mouse. ::: If something needs the bald eagle and the bald eagle eats the tiger then the tiger eats the mouse.\nIf something is round and it does not eat the mouse then it does not need the mouse. ::: If something is round and it does not eat the mouse then it does not need the mouse.\nQuery:\nNeeds(Mouse, Tiger, True) ::: The mouse needs the tiger."
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1055_Q8",
    "context": "Anne is blue. Anne is red. Charlie is kind. Charlie is round. Erin is cold. Erin is kind. Fiona is kind. All red, young people are blue. If Anne is smart then Anne is cold. Young people are smart. All blue people are round. If Fiona is round then Fiona is kind. If Anne is cold then Anne is kind. If Erin is young and Erin is blue then Erin is kind. All round people are young.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Anne is not smart.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue($x, bool) ::: Is x blue?\nRed($x, bool) ::: Is x red?\nKind($x, bool) ::: Is x kind?\nSmart($x, bool) ::: Is x smart?\nCold($x, bool) ::: Is x cold?\nRound($x, bool) ::: Is x round?\nYoung($x, bool) ::: Is x young?\nFacts:\nBlue(Anne, True) ::: Anne is blue.\nRed(Anne, True) ::: Anne is red.\nKind(Charlie, True) ::: Charlie is kind.\nRound(Charlie, True) ::: Charlie is round.\nCold(Erin, True) ::: Erin is cold.\nKind(Erin, True) ::: Erin is kind.\nKind(Fiona, True) ::: Fiona is kind.\nBlue($x, True) >>> Young($x, True) ::: All red, young people are blue.\nSmart(Anne, True) >>> Cold($x, True) ::: If Anne is smart then Anne is cold.\nYoung($x, True) >>> Smart($x, True) ::: Young people are smart.\nBlue($x, True) >>> Round($x, True) ::: All blue people are round.\nRound($x, True) >>> Kind($x, True) ::: If Fiona is round then Fiona is kind.\nCold($x, True) >>> Kind($x, True) ::: If Anne is cold then Anne is kind.\nYoung($x, True) && Blue($x, True) >>> Kind($x, True) ::: If Erin is young and Erin is blue then Erin is kind.\nRound($x, True) >>> Young($x, True) ::: All round people are young.\nQuery:\nSmart(Anne, False) ::: Anne is not smart.\n------\nProblem:\nAnne is blue. Anne is red. Anne is smart. Anne is young. Anne is kind. Anne is cold. Anne is round. Anne is quiet. Anne is furry. Anne is green. Anne is rough. Anne is white. Anne is rough. Anne is white. Anne is rough. Anne is white. Anne is rough. Anne is white. Anne is rough. Anne is white. Anne is rough. Anne is white. Anne is rough. Anne is white. Anne is rough. Anne is white. Anne is rough. Anne is white. Anne is rough. Anne is white. Anne is rough. Anne is white. Anne is rough. Anne is white. Anne is rough. Anne is white. Anne is rough. Anne is white. Anne is rough. Anne is white. Anne is"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-812_Q6",
    "context": "Erin is green. Erin is smart. Fiona is big. Fiona is rough. Gary is not smart. Gary is not young. Harry is big. Big, furry things are not young. All smart things are kind. If Harry is smart then Harry is rough. Furry things are green. All young things are not green. All rough, big things are furry. Smart, rough things are big. If something is smart and kind then it is rough. If Harry is young and Harry is kind then Harry is furry.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Fiona is young.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen($x, bool) ::: Is x green?\nSmart($x, bool) ::: Is x smart?\nBig($x, bool) ::: Is x big?\nYoung($x, bool) ::: Is x young?\nFurry($x, bool) ::: Is x furry?\nKind($x, bool) ::: Is x kind?\nRough($x, bool) ::: Is x rough?\nFacts:\nGreen(Erin, True) ::: Erin is green.\nSmart(Erin, True) ::: Erin is smart.\nBig(Fiona, True) ::: Fiona is big.\nRough(Fiona, True) ::: Fiona is rough.\nNot(Smart(Gary, True)) ::: Gary is not smart.\nNot(Young(Gary, True)) ::: Gary is not young.\nBig(Harry, True) ::: Harry is big.\nNot(Young(Harry, True)) ::: Harry is not young.\nNot(Young(Harry, True)) ::: Harry is not young.\nNot(Young(Harry, True)) ::: Harry is not young.\nNot(Young(Harry, True)) ::: Harry is not young.\nNot(Young(Harry, True)) ::: Harry is not young.\nNot(Young(Harry, True)) ::: Harry is not young.\nNot(Young(Harry, True)) ::: Harry is not young.\nNot(Young(Harry, True)) ::: Harry is not young.\nNot(Young(Harry, True)) ::: Harry is not young.\nNot(Young(Harry, True)) ::: Harry is not young.\nNot(Young(Harry, True)) ::: Harry is not young.\nNot(Young(Harry, True)) ::: Harry is not young.\nNot(Young(Harry, True)) ::: Harry is not young.\nNot(Young(Harry, True)) ::: Harry is not young.\nNot(Young(Harry, True)) ::: Harry is not young.\nNot(Young(Harry, True)) ::: Harry is not young.\nNot(Young(Harry, True)) ::: Harry is not young.\nNot(Young(Harry, True)) ::: Harry is not young.\nNot(Young(Harry, True)) ::: Harry is not young.\nNot(Young(Harry, True)) ::: Harry is not young.\nNot(Young(Harry, True)) ::: Harry is not young.\nNot(Young(Harry, True))"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-787_Q8",
    "context": "Anne is big. Bob is round. Bob is smart. Bob is white. Gary is big. Gary is furry. Gary is red. Gary is rough. Gary is round. Harry is furry. All big, rough things are smart. Red, rough things are furry. Rough things are round. Smart things are white. Big things are smart. All white things are rough. If something is furry then it is round. Smart, round things are furry. Round things are red.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Anne is not rough.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nRound($x, bool) ::: Is x round?\nSmart($x, bool) ::: Is x smart?\nWhite($x, bool) ::: Is x white?\nFurry($x, bool) ::: Is x furry?\nRough($x, bool) ::: Is x rough?\nRules:\nBig($x, True) >>> Rough($x, True) ::: All big, rough things are smart.\nRed($x, True) >>> Rough($x, True) ::: Red, rough things are furry.\nRough($x, True) >>> Round($x, True) ::: Rough things are round.\nSmart($x, True) >>> White($x, True) ::: Smart things are white.\nBig($x, True) >>> Smart($x, True) ::: Big things are smart.\nWhite($x, True) >>> Rough($x, True) ::: All white things are rough.\nFurry($x, True) >>> Round($x, True) ::: If something is furry then it is round.\nSmart($x, True) >>> Round($x, True) ::: Smart, round things are furry.\nRound($x, True) >>> Red($x, True) ::: Round things are red.\nFacts:\nBig(Anne, True) ::: Anne is big.\nRound(Bob, True) ::: Bob is round.\nSmart(Bob, True) ::: Bob is smart.\nWhite(Bob, True) ::: Bob is white.\nBig(Gary, True) ::: Gary is big.\nFurry(Gary, True) ::: Gary is furry.\nRed(Gary, True) ::: Gary is red.\nRough(Gary, True) ::: Gary is rough.\nRound(Gary, True) ::: Gary is round.\nFurry(Harry, True) ::: Harry is furry.\nQuery:\nNot(Rough(Anne, True)) ::: Anne is not rough.\n------\nProblem:\nAnne is big. Bob is round. Bob is smart. Bob is white. Gary is big. Gary is furry. Gary is red. Gary is rough. Gary is round. Harry is furry. All big, rough things are smart. Red, rough things are furry. Rough things are round. Smart things are white. Big things are smart. All white things are rough. If something is furry then it is round. Smart, round things are furry. Round things are red.\nQuestion:\nBased on the above information, is the following statement true, false, or"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-954_Q1",
    "context": "Anne is big. Anne is cold. Anne is rough. Anne is white. Charlie is white. Erin is big. Erin is kind. Erin is round. Harry is rough. Harry is round. Round things are kind. If something is white and rough then it is kind. All rough, kind things are furry. White things are cold. All big things are kind. If something is cold then it is big. If something is big and kind then it is rough. All round, cold things are white. Cold, rough things are white.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Charlie is white.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nCold($x, bool) ::: Is x cold?\nKind($x, bool) ::: Is x kind?\nRound($x, bool) ::: Is x round?\nRough($x, bool) ::: Is x rough?\nWhite($x, bool) ::: Is x white?\nFacts:\nBig(Anne, True) ::: Anne is big.\nCold(Anne, True) ::: Anne is cold.\nRough(Anne, True) ::: Anne is rough.\nWhite(Anne, True) ::: Anne is white.\nWhite(Charlie, True) ::: Charlie is white.\nBig(Erin, True) ::: Erin is big.\nKind(Erin, True) ::: Erin is kind.\nRound(Erin, True) ::: Erin is round.\nRough(Harry, True) ::: Harry is rough.\nRound(Harry, True) ::: Harry is round.\nRules:\nRound($x, True) >>> Kind($x, True) ::: Round things are kind.\nWhite($x, True) && Rough($x, True) >>> Kind($x, True) ::: If something is white and rough then it is kind.\nRough($x, True) && Kind($x, True) >>> Furry($x, True) ::: All rough, kind things are furry.\nWhite($x, True) >>> Cold($x, True) ::: White things are cold.\nBig($x, True) >>> Kind($x, True) ::: All big things are kind.\nCold($x, True) >>> Big($x, True) ::: If something is cold then it is big.\nBig($x, True) && Kind($x, True) >>> Rough($x, True) ::: If something is big and kind then it is rough.\nRound($x, True) && Cold($x, True) >>> White($x, True) ::: All round, cold things are white.\nCold($x, True) && Rough($x, True) >>> White($x, True) ::: Cold, rough things are white.\nQuery:\nWhite(Charlie, True) ::: Charlie is white.\n------\nProblem:\nAnne is big. Anne is cold. Anne is rough. Anne is white. Charlie is white. Erin is big. Erin is kind. Erin is round. Harry is rough. Harry is round. Round things are kind. If something is white and rough then it is kind. All rough, kind things are furry. White things are cold. All big things are kind. If something is cold then it"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-516_Q14",
    "context": "Bob is big. Bob is round. Charlie is quiet. Fiona is not big. Fiona is blue. Gary is not big. Gary is rough. If something is quiet then it is young. All rough things are cold. If something is cold then it is quiet. If something is quiet and not young then it is round. Blue things are not round. If something is rough and not young then it is big. If something is round and cold then it is blue. Round, rough things are blue. If something is young then it is blue.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Fiona is young.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nRound($x, bool) ::: Is x round?\nQuiet($x, bool) ::: Is x quiet?\nBlue($x, bool) ::: Is x blue?\nRough($x, bool) ::: Is x rough?\nCold($x, bool) ::: Is x cold?\nYoung($x, bool) ::: Is x young?\nFacts:\nBig(Bob, True) ::: Bob is big.\nRound(Bob, True) ::: Bob is round.\nQuiet(Charlie, True) ::: Charlie is quiet.\nNot(Big(Fiona, True)) ::: Fiona is not big.\nBlue(Fiona, True) ::: Fiona is blue.\nNot(Big(Gary, True)) ::: Gary is not big.\nRough(Gary, True) ::: Gary is rough.\nRules:\nYoung($x, True) >>> Quiet($x, True) ::: If something is quiet then it is young.\nAll(Rough($x, True), Cold($x, True)) ::: All rough things are cold.\nCold($x, True) >>> Quiet($x, True) ::: If something is cold then it is quiet.\nQuiet($x, True) && Not(Young($x, True)) >>> Round($x, True) ::: If something is quiet and not young then it is round.\nNot(Blue($x, True)) >>> Round($x, True) ::: Blue things are not round.\nRough($x, True) && Not(Young($x, True)) >>> Big($x, True) ::: If something is rough and not young then it is big.\nRound($x, True) && Cold($x, True) >>> Blue($x, True) ::: If something is round and cold then it is blue.\nRound($x, True) && Rough($x, True) >>> Blue($x, True) ::: Round, rough things are blue.\nYoung($x, True) >>> Blue($x, True) ::: If something is young then it is blue.\nQuery:\nYoung(Fiona, True) ::: Fiona is young.\n------\nProblem:\nBob is big. Bob is round. Charlie is quiet. Fiona is not big. Fiona is blue. Gary is not big. Gary is rough. If something is quiet then it is young. All rough things are cold. If something is cold then it is quiet. If something is quiet and not young then it is round. Blue things are not round. If something is rough and not young then it is big. If something is round and cold then"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-250_Q1",
    "context": "Anne is cold. Anne is furry. Anne is rough. Anne is round. Anne is smart. Anne is young. Charlie is cold. Charlie is furry. Charlie is rough. Charlie is smart. Charlie is young. Erin is young. Gary is rough. Gary is smart. Nice, smart people are cold. If someone is cold then they are smart. Rough people are cold. All nice, rough people are smart. Cold people are nice. Young people are smart. Nice people are furry. All smart people are rough. Cold, round people are furry.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Anne is smart.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nFurry($x, bool) ::: Is x furry?\nRough($x, bool) ::: Is x rough?\nRound($x, bool) ::: Is x round?\nSmart($x, bool) ::: Is x smart?\nYoung($x, bool) ::: Is x young?\nNice($x, bool) ::: Is x nice?\nFacts:\nCold(Anne, True) ::: Anne is cold.\nFurry(Anne, True) ::: Anne is furry.\nRough(Anne, True) ::: Anne is rough.\nRound(Anne, True) ::: Anne is round.\nSmart(Anne, True) ::: Anne is smart.\nYoung(Anne, True) ::: Anne is young.\nCold(Charlie, True) ::: Charlie is cold.\nFurry(Charlie, True) ::: Charlie is furry.\nRough(Charlie, True) ::: Charlie is rough.\nSmart(Charlie, True) ::: Charlie is smart.\nYoung(Charlie, True) ::: Charlie is young.\nYoung(Erin, True) ::: Erin is young.\nRough(Gary, True) ::: Gary is rough.\nSmart(Gary, True) ::: Gary is smart.\nNice($x, True) >>> Cold($x, True) ::: Nice, smart people are cold.\nCold($x, True) >>> Smart($x, True) ::: If someone is cold then they are smart.\nRough($x, True) >>> Cold($x, True) ::: Rough people are cold.\nNice($x, True) && Rough($x, True) >>> Smart($x, True) ::: All nice, rough people are smart.\nCold($x, True) >>> Nice($x, True) ::: Cold people are nice.\nYoung($x, True) >>> Smart($x, True) ::: Young people are smart.\nNice($x, True) >>> Furry($x, True) ::: Nice people are furry.\nAll($x, True) >>> Rough($x, True) ::: All smart people are rough.\nCold($x, True) && Round($x, True) >>> Furry($x, True) ::: Cold, round people are furry.\nQuery:\nSmart(Anne, True) ::: Anne is smart.\n------\nProblem:\nAnne is furry. Anne is green. Anne is rough. Anne is white. Anne is young. Anne is quiet"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-693_Q6",
    "context": "Bob is kind. Bob is quiet. Bob is young. Charlie is not green. Dave is round. Fiona is rough. Fiona is round. Kind, blue people are quiet. Rough, round people are quiet. Round people are rough. If someone is blue then they are green. All rough, kind people are green. If someone is quiet then they are blue. All green, round people are young. All kind people are round. If Charlie is rough then Charlie is blue.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Fiona is not blue.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nKind($x, bool) ::: Is x kind?\nQuiet($x, bool) ::: Is x quiet?\nYoung($x, bool) ::: Is x young?\nGreen($x, bool) ::: Is x green?\nBlue($x, bool) ::: Is x blue?\nRound($x, bool) ::: Is x round?\nRough($x, bool) ::: Is x rough?\nFacts:\nKind(Bob, True) ::: Bob is kind.\nQuiet(Bob, True) ::: Bob is quiet.\nYoung(Bob, True) ::: Bob is young.\nNot(Green(Charlie, True)) ::: Charlie is not green.\nRound(Dave, True) ::: Dave is round.\nRough(Fiona, True) ::: Fiona is rough.\nRound(Fiona, True) ::: Fiona is round.\nRules:\nKind($x, True) && Blue($x, True) >>> Quiet($x, True) ::: Kind, blue people are quiet.\nRough($x, True) && Round($x, True) >>> Quiet($x, True) ::: Rough, round people are quiet.\nRound($x, True) >>> Rough($x, True) ::: Round people are rough.\nBlue($x, True) >>> Green($x, True) ::: If someone is blue then they are green.\nKind($x, True) && Green($x, True) >>> Rough($x, True) ::: All rough, kind people are green.\nQuiet($x, True) >>> Blue($x, True) ::: If someone is quiet then they are blue.\nGreen($x, True) && Round($x, True) >>> Young($x, True) ::: All green, round people are young.\nKind($x, True) >>> Round($x, True) ::: All kind people are round.\nIf(Rough(Charlie, True)) >>> Blue(Charlie, True) ::: If Charlie is rough then Charlie is blue.\nQuery:\nNot(Blue(Fiona, True)) ::: Fiona is not blue.\n------\nProblem:\nBob is kind. Bob is quiet. Bob is young. Charlie is not green. Dave is round. Fiona is rough. Fiona is round. Kind, blue people are quiet. Rough, round people are quiet. Round people are rough. If someone is blue then they are green. All rough, kind people are green. If someone is quiet then they are blue. All green, round people are young. All kind people are round. If Charlie is rough then Charlie is blue.\nQuestion:\nBased on the above information, is"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-3_Q17",
    "context": "Anne is red. Anne is rough. Bob is young. Dave is cold. Dave is kind. Fiona is big. Fiona is young. If Dave is cold and Dave is young then Dave is furry. If Fiona is rough and Fiona is kind then Fiona is red. Kind, rough things are red. Young, big things are rough. Rough things are furry. If something is cold and rough then it is red. All furry, rough things are kind. Young, cold things are kind. Young things are big.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Dave is not big.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRed($x, bool) ::: Is x red?\nRough($x, bool) ::: Is x rough?\nYoung($x, bool) ::: Is x young?\nCold($x, bool) ::: Is x cold?\nKind($x, bool) ::: Is x kind?\nBig($x, bool) ::: Is x big?\nFurry($x, bool) ::: Is x furry?\nFacts:\nRed(Anne, True) ::: Anne is red.\nRough(Anne, True) ::: Anne is rough.\nYoung(Bob, True) ::: Bob is young.\nCold(Dave, True) ::: Dave is cold.\nKind(Dave, True) ::: Dave is kind.\nBig(Fiona, True) ::: Fiona is big.\nYoung(Fiona, True) ::: Fiona is young.\nRules:\nYoung($x, True) && Cold($x, True) >>> Furry($x, True) ::: If Dave is cold and Dave is young then Dave is furry.\nFurry($x, True) && Rough($x, True) >>> Red($x, True) ::: If Fiona is rough and Fiona is kind then Fiona is red.\nKind($x, True) && Rough($x, True) >>> Red($x, True) ::: Kind, rough things are red.\nYoung($x, True) && Big($x, True) >>> Rough($x, True) ::: Young, big things are rough.\nRough($x, True) >>> Furry($x, True) ::: Rough things are furry.\nCold($x, True) && Rough($x, True) >>> Red($x, True) ::: If something is cold and rough then it is red.\nFurry($x, True) && Rough($x, True) >>> Kind($x, True) ::: All furry, rough things are kind.\nYoung($x, True) && Cold($x, True) >>> Kind($x, True) ::: Young, cold things are kind.\nYoung($x, True) >>> Big($x, True) ::: Young things are big.\nQuery:\nNot(Big(Dave, True)) ::: Dave is not big.\n------"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-198_Q23",
    "context": "The bear does not like the cat. The cat eats the squirrel. The cat is green. The cat is red. The cat likes the squirrel. The cat visits the bear. The cat visits the dog. The dog does not visit the bear. The squirrel eats the cat. The squirrel is green. If the dog eats the bear then the bear is green. If someone eats the dog and the dog visits the bear then the dog likes the cat. If someone is green and they like the dog then the dog likes the cat. If someone is young then they like the dog. If someone visits the bear then they like the dog. If the dog likes the cat then the dog eats the bear. If someone is green then they visit the cat. If the dog eats the squirrel then the squirrel likes the cat.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The dog does not like the squirrel.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nLikes($x, $y, bool) ::: Does x like y?\nEats($x, $y, bool) ::: Does x eat y?\nVisits($x, $y, bool) ::: Does x visit y?\nYoung($x, bool) ::: Is x young?\nGreen($x, bool) ::: Is x green?\nRed($x, bool) ::: Is x red?\nFacts:\nLikes(Bear, Cat, False) ::: The bear does not like the cat.\nEats(Cat, Squirrel, True) ::: The cat eats the squirrel.\nGreen(Cat, True) ::: The cat is green.\nRed(Cat, True) ::: The cat is red.\nLikes(Cat, Squirrel, True) ::: The cat likes the squirrel.\nVisits(Cat, Bear, True) ::: The cat visits the bear.\nVisits(Cat, Dog, True) ::: The cat visits the dog.\nNot(Visits(Dog, Bear, True)) ::: The dog does not visit the bear.\nEats(Squirrel, Cat, True) ::: The squirrel eats the cat.\nGreen(Squirrel, True) ::: The squirrel is green.\nRules:\nIf the dog eats the bear then the bear is green ::: If the dog eats the bear then the bear is green.\nIf someone eats the dog and the dog visits the bear then the dog likes the cat ::: If someone eats the dog and the dog visits the bear then the dog likes the cat.\nIf someone is green and they like the dog then the dog likes the cat ::: If someone is green and they like the dog then the dog likes the cat.\nIf someone is young then they like the dog ::: If someone is young then they like the dog.\nIf someone visits the bear then they like the dog ::: If someone visits the bear then they like the dog.\nIf the dog likes the cat then the dog eats the bear ::: If the dog likes the cat then the dog eats the bear.\nIf someone is green then they visit the cat ::: If someone is green then they visit the cat.\nIf the dog eats the squirrel then the squirrel likes the cat ::: If the dog eats the squir"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-106_Q4",
    "context": "Anne is nice. Anne is red. Bob is blue. Dave is furry. Dave is nice. Harry is blue. Harry is red. All rough, big people are not blue. Nice, red people are kind. Rough, nice people are big. If someone is rough and not furry then they are big. If someone is rough and big then they are red. All nice people are red. If someone is big and rough then they are red. Kind people are rough.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Anne is not kind.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNice($x, bool) ::: Is x nice?\nRed($x, bool) ::: Is x red?\nBlue($x, bool) ::: Is x blue?\nBig($x, bool) ::: Is x big?\nRough($x, bool) ::: Is x rough?\nKind($x, bool) ::: Is x kind?\nFacts:\nNice(Anne, True) ::: Anne is nice.\nRed(Anne, True) ::: Anne is red.\nBlue(Bob, True) ::: Bob is blue.\nFurry(Dave, True) ::: Dave is furry.\nNice(Dave, True) ::: Dave is nice.\nBlue(Harry, True) ::: Harry is blue.\nRed(Harry, True) ::: Harry is red.\nRules:\nRough($x, True) && Big($x, True) >>> Not(Blue($x, True)) ::: All rough, big people are not blue.\nNice($x, True) && Red($x, True) >>> Kind($x, True) ::: Nice, red people are kind.\nRough($x, True) && Nice($x, True) >>> Big($x, True) ::: Rough, nice people are big.\nRough($x, True) && Not(Furry($x, True)) >>> Big($x, True) ::: If someone is rough and not furry then they are big.\nRough($x, True) && Big($x, True) >>> Red($x, True) ::: If someone is rough and big then they are red.\nKind($x, True) >>> Rough($x, True) ::: Kind people are rough.\nRed($x, True) >>> Nice($x, True) ::: All nice people are red.\nBig($x, True) && Rough($x, True) >>> Red($x, True) ::: If someone is big and rough then they are red.\nQuery:\nNot(Kind(Anne, True)) ::: Anne is not kind.\n------\nProblem:\nAnne is furry. Anne is green. Anne is red. Anne is rough. Anne is white. Bob is furry. Bob is green. Bob is red. Bob is rough. Bob is white. Dave is furry. Dave is green. Dave"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-19_Q5",
    "context": "Bob is nice. Charlie is cold. Charlie is quiet. Dave is cold. Gary is blue. Gary is furry. Gary is nice. All kind things are blue. Kind things are green. Nice things are green. If something is green then it is kind. If Gary is furry and Gary is nice then Gary is not quiet. If something is green and not kind then it is furry. If something is blue then it is furry. If something is nice and furry then it is not cold. If something is cold and not furry then it is not quiet.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is kind.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNice($x, bool) ::: Is x nice?\nCold($x, bool) ::: Is x cold?\nQuiet($x, bool) ::: Is x quiet?\nKind($x, bool) ::: Is x kind?\nBlue($x, bool) ::: Is x blue?\nFurry($x, bool) ::: Is x furry?\nRules:\nNice($x, True) >>> Green($x, True) ::: Nice things are green.\nKind($x, True) >>> Blue($x, True) ::: Kind things are blue.\nNice($x, True) >>> Green($x, True) ::: Nice things are green.\nGreen($x, True) >>> Kind($x, True) ::: If something is green then it is kind.\nFurry($x, True) && Nice($x, True) >>> Not(Quiet($x, True)) ::: If Gary is furry and Gary is nice then Gary is not quiet.\nGreen($x, True) && Not(Kind($x, True)) >>> Furry($x, True) ::: If something is green and not kind then it is furry.\nBlue($x, True) >>> Furry($x, True) ::: If something is blue then it is furry.\nNice($x, True) && Furry($x, True) >>> Not(Cold($x, True)) ::: If something is nice and furry then it is not cold.\nCold($x, True) && Not(Furry($x, True)) >>> Not(Quiet($x, True)) ::: If something is cold and not furry then it is not quiet.\nFacts:\nNice(Bob, True) ::: Bob is nice.\nCold(Charlie, True) ::: Charlie is cold.\nQuiet(Charlie, True) ::: Charlie is quiet.\nCold(Dave, True) ::: Dave is cold.\nBlue(Gary, True) ::: Gary is blue.\nFurry(Gary, True) ::: Gary is furry.\nNice(Gary, True) ::: Gary is nice.\nQuery:\nKind(Gary, True) ::: Gary is kind.\n------\nProblem:\nBob is nice. Charlie is cold. Charlie is quiet. Dave is"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-686_Q21",
    "context": "Erin is cold. Erin is round. Erin is young. Fiona is smart. Fiona is young. Gary is quiet. Gary is white. Gary is young. Harry is cold. Harry is quiet. If someone is rough then they are cold. Round people are smart. All white, cold people are young. If Fiona is smart and Fiona is quiet then Fiona is rough. If Harry is rough and Harry is young then Harry is round. If someone is cold then they are rough. If someone is rough then they are white.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is not round.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nRound($x, bool) ::: Is x round?\nSmart($x, bool) ::: Is x smart?\nYoung($x, bool) ::: Is x young?\nQuiet($x, bool) ::: Is x quiet?\nWhite($x, bool) ::: Is x white?\nRough($x, bool) ::: Is x rough?\nFacts:\nCold(Erin, True) ::: Erin is cold.\nRound(Erin, True) ::: Erin is round.\nYoung(Erin, True) ::: Erin is young.\nSmart(Fiona, True) ::: Fiona is smart.\nYoung(Fiona, True) ::: Fiona is young.\nQuiet(Gary, True) ::: Gary is quiet.\nWhite(Gary, True) ::: Gary is white.\nYoung(Gary, True) ::: Gary is young.\nCold(Harry, True) ::: Harry is cold.\nQuiet(Harry, True) ::: Harry is quiet.\nRules:\nRound($x, True) >>> Smart($x, True) ::: Round people are smart.\nYoung($x, True) >>> White($x, True) ::: All white, cold people are young.\nSmart($x, True) && Quiet($x, True) >>> Rough($x, True) ::: If Fiona is smart and Fiona is quiet then Fiona is rough.\nCold($x, True) >>> Rough($x, True) ::: If someone is cold then they are rough.\nRough($x, True) >>> White($x, True) ::: If someone is rough then they are white.\nYoung($x, True) && Rough($x, True) >>> Round($x, True) ::: If Harry is rough and Harry is young then Harry is round.\nQuery:\nNot(Round(Gary, True)) ::: Gary is not round.\n------\nProblem:\nErin is cold. Erin is round. Erin is young. Fiona is smart. Fiona is young. Gary is quiet. Gary is white. Gary is young. Harry is cold. Harry is quiet. If someone is rough then they are cold. Round people are smart. All white"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-103_Q11",
    "context": "Anne is cold. Anne is furry. Anne is red. Dave is young. Gary is nice. Gary is young. Harry is not blue. All nice people are red. All furry people are blue. All furry, red people are quiet. Blue people are cold. Young people are cold. Cold people are furry. If Dave is blue then Dave is red. If Gary is furry then Gary is nice.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Dave is quiet.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nFurry($x, bool) ::: Is x furry?\nRed($x, bool) ::: Is x red?\nNice($x, bool) ::: Is x nice?\nBlue($x, bool) ::: Is x blue?\nQuiet($x, bool) ::: Is x quiet?\nFacts:\nCold(Anne, True) ::: Anne is cold.\nFurry(Anne, True) ::: Anne is furry.\nRed(Anne, True) ::: Anne is red.\nYoung(Dave, True) ::: Dave is young.\nNice(Gary, True) ::: Gary is nice.\nYoung(Gary, True) ::: Gary is young.\nNot(Blue(Harry, True)) ::: Harry is not blue.\nRules:\nNice($x, True) >>> Red($x, True) ::: All nice people are red.\nFurry($x, True) >>> Blue($x, True) ::: All furry people are blue.\nFurry($x, True) && Red($x, True) >>> Quiet($x, True) ::: All furry, red people are quiet.\nBlue($x, True) >>> Cold($x, True) ::: Blue people are cold.\nYoung($x, True) >>> Cold($x, True) ::: Young people are cold.\nCold($x, True) >>> Furry($x, True) ::: Cold people are furry.\nDave(Blue($x, True)) >>> Red($x, True) ::: If Dave is blue then Dave is red.\nGary(Furry($x, True)) >>> Nice($x, True) ::: If Gary is furry then Gary is nice.\nQuery:\nQuiet(Dave, True) ::: Dave is quiet.\n------\nProblem:\nAnne is furry. Anne is green. Anne is red. Anne is rough. Anne is white. Dave is furry. Dave is green. Dave is red. Dave is rough. Dave is white. Erin is furry. Erin is green. Erin is red. Erin is rough. Erin is white. Fiona is furry. Fiona is green. Fiona is red. Fiona is rough."
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-199_Q3",
    "context": "The bear needs the dog. The cow is kind. The cow is nice. The cow likes the dog. The cow needs the dog. The dog chases the rabbit. The dog likes the bear. The dog likes the rabbit. The rabbit chases the bear. The rabbit chases the cow. The rabbit is blue. The rabbit is kind. The rabbit likes the cow. The rabbit needs the dog. If someone needs the rabbit then the rabbit likes the bear. If someone needs the rabbit and they chase the dog then they need the bear. If someone is kind then they like the dog. If someone likes the bear and they are blue then they chase the rabbit. If the rabbit likes the dog then the dog is kind. If someone chases the dog then the dog likes the cow. If someone likes the dog then they are round. If the rabbit likes the dog and the rabbit chases the cow then the dog likes the cow. If someone needs the dog and the dog is kind then the dog needs the rabbit.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cow is round.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNeeds($x, $y, bool) ::: Does x need y?\nLikes($x, $y, bool) ::: Does x like y?\nChases($x, $y, bool) ::: Does x chase y?\nKind($x, bool) ::: Is x kind?\nRound($x, bool) ::: Is x round?\nBlue($x, bool) ::: Is x blue?\nFacts:\nNeeds(Bear, Dog, True) ::: The bear needs the dog.\nKind(Cow, True) ::: The cow is kind.\nKind(Cow, True) ::: The cow is nice.\nLikes(Cow, Dog, True) ::: The cow likes the dog.\nNeeds(Cow, Dog, True) ::: The cow needs the dog.\nChases(Dog, Rabbit, True) ::: The dog chases the rabbit.\nLikes(Dog, Bear, True) ::: The dog likes the bear.\nLikes(Dog, Rabbit, True) ::: The dog likes the rabbit.\nChases(Rabbit, Bear, True) ::: The rabbit chases the bear.\nChases(Rabbit, Cow, True) ::: The rabbit chases the cow.\nBlue(Rabbit, True) ::: The rabbit is blue.\nKind(Rabbit, True) ::: The rabbit is kind.\nLikes(Rabbit, Cow, True) ::: The rabbit likes the cow.\nNeeds(Rabbit, Dog, True) ::: The rabbit needs the dog.\nRules:\nNeeds($x, $y, True) >>> Likes($x, $y, True) ::: If someone needs the rabbit then the rabbit likes the bear.\nNeeds($x, $y, True) && Chases($x, $z, True) >>> Needs($x, $z, True) ::: If someone needs the rabbit and they chase the dog then they need the bear.\nKind($x, True) >>> Likes($x, Dog, True) ::: If someone is kind then they like the dog.\nLikes($x, Bear, True) && Blue($x, True) >>> Chases($x, Rabbit, True) ::: If someone likes the bear"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-705_Q3",
    "context": "The bald eagle is kind. The bald eagle is red. The bear eats the tiger. The bear is round. The bear likes the bald eagle. The bear sees the lion. The lion eats the tiger. The lion is cold. The lion sees the tiger. The tiger is not nice. The tiger likes the bald eagle. The tiger sees the bald eagle. If something is kind then it likes the bear. If something is nice then it likes the tiger. If something eats the lion then it does not like the tiger. If the bald eagle likes the lion and the bald eagle sees the tiger then the lion is red. If something eats the bald eagle then the bald eagle does not see the bear. If something sees the tiger then the tiger likes the lion. If something eats the bear and it is round then it is nice. If something eats the tiger and it likes the bear then the bear is kind. If something likes the lion then the lion is kind.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bald eagle likes the bear.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nKind($x, bool) ::: Is x kind?\nRed($x, bool) ::: Is x red?\nEats($x, $y, bool) ::: Does x eat y?\nRound($x, bool) ::: Is x round?\nLikes($x, $y, bool) ::: Does x like y?\nSees($x, $y, bool) ::: Does x see y?\nFacts:\nKind(BaldEagle, True) ::: The bald eagle is kind.\nRed(BaldEagle, True) ::: The bald eagle is red.\nEats(Bear, Tiger, True) ::: The bear eats the tiger.\nRound(Bear, True) ::: The bear is round.\nLikes(Bear, BaldEagle, True) ::: The bear likes the bald eagle.\nSees(Bear, Lion, True) ::: The bear sees the lion.\nEats(Lion, Tiger, True) ::: The lion eats the tiger.\nCold(Lion, True) ::: The lion is cold.\nSees(Lion, Tiger, True) ::: The lion sees the tiger.\nNotNice(Tiger, True) ::: The tiger is not nice.\nLikes(Tiger, BaldEagle, True) ::: The tiger likes the bald eagle.\nSees(Tiger, BaldEagle, True) ::: The tiger sees the bald eagle.\nRules:\nKind($x, True) >>> Likes($x, Bear, True) ::: If something is kind then it likes the bear.\nNice($x, True) >>> Likes($x, Tiger, True) ::: If something is nice then it likes the tiger.\nEats($x, Lion, True) >>> NotLikes($x, Tiger, True) ::: If something eats the lion then it does not like the tiger.\nRed($x, True) && Likes($x, BaldEagle, True) && Sees($x, Tiger, True) >>> Lion($x, True) ::: If the bald eagle likes the lion and the bald eagle sees the tiger then the lion is red.\nEats($x, BaldEagle, True) >>> NotSees($x"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1055_Q7",
    "context": "Anne is blue. Anne is red. Charlie is kind. Charlie is round. Erin is cold. Erin is kind. Fiona is kind. All red, young people are blue. If Anne is smart then Anne is cold. Young people are smart. All blue people are round. If Fiona is round then Fiona is kind. If Anne is cold then Anne is kind. If Erin is young and Erin is blue then Erin is kind. All round people are young.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Anne is smart.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue($x, bool) ::: Is x blue?\nRed($x, bool) ::: Is x red?\nKind($x, bool) ::: Is x kind?\nSmart($x, bool) ::: Is x smart?\nCold($x, bool) ::: Is x cold?\nRound($x, bool) ::: Is x round?\nYoung($x, bool) ::: Is x young?\nFacts:\nBlue(Anne, True) ::: Anne is blue.\nRed(Anne, True) ::: Anne is red.\nKind(Charlie, True) ::: Charlie is kind.\nRound(Charlie, True) ::: Charlie is round.\nCold(Erin, True) ::: Erin is cold.\nKind(Erin, True) ::: Erin is kind.\nKind(Fiona, True) ::: Fiona is kind.\nRules:\nRed($x, True) >>> Young($x, True) >>> Blue($x, True) ::: All red, young people are blue.\nSmart($x, True) >>> Cold($x, True) ::: If Anne is smart then Anne is cold.\nYoung($x, True) >>> Smart($x, True) ::: Young people are smart.\nBlue($x, True) >>> Round($x, True) ::: All blue people are round.\nKind($x, True) >>> Round($x, True) ::: If Fiona is round then Fiona is kind.\nCold($x, True) >>> Kind($x, True) ::: If Anne is cold then Anne is kind.\nYoung($x, True) >>> Kind($x, True) ::: If Erin is young and Erin is blue then Erin is kind.\nRound($x, True) >>> Young($x, True) ::: All round people are young.\nQuery:\nSmart(Anne, True) ::: Anne is smart.\n------\nProblem:\nAnne is blue. Anne is red. Anne is smart. Anne is young. Anne is kind. Anne is cold. Anne is round. Anne is quiet. Anne is furry. Anne is green. Anne is rough. Anne is white. Anne is rough. Anne is white. Anne is rough. Anne is white. Anne is rough. Anne is white. Anne is rough. Anne is white. Anne is"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-118_Q9",
    "context": "Bob is green. Bob is red. Bob is round. Charlie is cold. Charlie is green. Charlie is kind. Erin is cold. Erin is furry. Erin is kind. Fiona is green. If someone is green then they are kind. All green, kind people are round. If Fiona is furry and Fiona is big then Fiona is green. If Erin is furry and Erin is red then Erin is kind. All round, furry people are kind. Green, round people are big. If someone is big and cold then they are furry. If someone is red then they are cold. Round, kind people are red.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Fiona is cold.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen($x, bool) ::: Is x green?\nRed($x, bool) ::: Is x red?\nRound($x, bool) ::: Is x round?\nCold($x, bool) ::: Is x cold?\nKind($x, bool) ::: Is x kind?\nBig($x, bool) ::: Is x big?\nFurry($x, bool) ::: Is x furry?\nFacts:\nGreen(Bob, True) ::: Bob is green.\nRed(Bob, True) ::: Bob is red.\nRound(Bob, True) ::: Bob is round.\nCold(Charlie, True) ::: Charlie is cold.\nGreen(Charlie, True) ::: Charlie is green.\nKind(Charlie, True) ::: Charlie is kind.\nCold(Erin, True) ::: Erin is cold.\nFurry(Erin, True) ::: Erin is furry.\nKind(Erin, True) ::: Erin is kind.\nGreen(Fiona, True) ::: Fiona is green.\nKind(Fiona, True) ::: Fiona is kind.\nRound(Fiona, True) ::: Fiona is round.\nRules:\nGreen($x, True) >>> Kind($x, True) ::: If someone is green then they are kind.\nGreen($x, True) && Kind($x, True) >>> Round($x, True) ::: All green, kind people are round.\nFurry($x, True) && Fiona($x, True) && Big($x, True) >>> Green($x, True) ::: If Fiona is furry and Fiona is big then Fiona is green.\nFurry($x, True) && Erin($x, True) && Red($x, True) >>> Kind($x, True) ::: If Erin is furry and Erin is red then Erin is kind.\nFurry($x, True) && Kind($x, True) >>> Round($x, True) ::: All round, furry people are kind.\nGreen($x, True) && Round($x, True) >>> Big($x, True) ::: Green, round people are big.\nCold($x, True) && Big($x, True) >>> Furry($"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-766_Q5",
    "context": "The bear chases the rabbit. The bear chases the tiger. The bear is red. The bear needs the lion. The bear needs the rabbit. The bear sees the lion. The lion is nice. The lion is red. The lion is round. The lion sees the bear. The rabbit chases the tiger. The rabbit is round. The rabbit is young. The tiger chases the rabbit. The tiger is round. The tiger sees the bear. If something sees the tiger then it sees the bear. If something chases the tiger and the tiger is red then it is round. If the bear needs the tiger then the tiger needs the lion. If something sees the rabbit then the rabbit sees the lion. If something is round then it needs the rabbit. If something chases the bear then it sees the rabbit. If the lion is red and the lion needs the bear then the bear chases the lion. If something sees the lion then it chases the bear.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bear sees the rabbit.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nNeeds($x, $y, bool) ::: Does x need y?\nSees($x, $y, bool) ::: Does x see y?\nIs($x, $y, bool) ::: Is x y?\nRound($x, bool) ::: Is x round?\nYoung($x, bool) ::: Is x young?\nRed($x, bool) ::: Is x red?\nFacts:\nChases(Bear, Rabbit, True) ::: The bear chases the rabbit.\nChases(Bear, Tiger, True) ::: The bear chases the tiger.\nIs(Bear, Red, True) ::: The bear is red.\nNeeds(Bear, Lion, True) ::: The bear needs the lion.\nNeeds(Bear, Rabbit, True) ::: The bear needs the rabbit.\nSees(Bear, Lion, True) ::: The bear sees the lion.\nIs(Lion, Nice, True) ::: The lion is nice.\nIs(Lion, Red, True) ::: The lion is red.\nIs(Lion, Round, True) ::: The lion is round.\nSees(Lion, Bear, True) ::: The lion sees the bear.\nChases(Rabbit, Tiger, True) ::: The rabbit chases the tiger.\nIs(Rabbit, Round, True) ::: The rabbit is round.\nIs(Rabbit, Young, True) ::: The rabbit is young.\nChases(Tiger, Rabbit, True) ::: The tiger chases the rabbit.\nIs(Tiger, Round, True) ::: The tiger is round.\nSees(Tiger, Bear, True) ::: The tiger sees the bear.\nRules:\nIf something sees the tiger then it sees the bear ::: If something sees the tiger then it sees the bear.\nIf something chases the tiger and the tiger is red then it is round ::: If something chases the tiger and the tiger is red then it is round.\nIf the bear needs the tiger then the tiger needs the lion ::: If the bear needs the tiger then the tiger needs the lion.\nIf something sees the rabbit then the rabbit sees the lion ::: If something sees the rabbit then the rabbit sees the lion.\nIf something is round then it needs the rabbit ::: If something is round then it needs the rabbit.\nIf something chases the bear then it sees the rabbit ::: If something chases the bear then it sees the rabbit.\nIf the lion is red and the lion needs the bear then the bear chases the lion ::: If the lion is red and the lion needs the bear then the bear chases the lion.\nIf something sees the lion then it chases the bear ::: If something sees the lion then it chases the bear.\nQuery:\nSees(Bear, Rabbit, True) ::: The bear sees the rabbit.\n------"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-909_Q16",
    "context": "Anne is green. Anne is quiet. Anne is rough. Bob is rough. Dave is green. Dave is kind. Dave is quiet. Dave is smart. Harry is green. Harry is kind. Harry is round. Quiet people are kind. If someone is rough then they are green. If someone is round then they are quiet. If someone is kind then they are smart. All rough, kind people are green. If someone is green then they are round.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is cold.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen($x, bool) ::: Is x green?\nQuiet($x, bool) ::: Is x quiet?\nRough($x, bool) ::: Is x rough?\nKind($x, bool) ::: Is x kind?\nSmart($x, bool) ::: Is x smart?\nRound($x, bool) ::: Is x round?\nCold($x, bool) ::: Is x cold?\nFacts:\nGreen(Anne, True) ::: Anne is green.\nQuiet(Anne, True) ::: Anne is quiet.\nRough(Anne, True) ::: Anne is rough.\nGreen(Bob, True) ::: Bob is green.\nKind(Bob, True) ::: Bob is kind.\nQuiet(Bob, True) ::: Bob is quiet.\nSmart(Bob, True) ::: Bob is smart.\nGreen(Dave, True) ::: Dave is green.\nKind(Dave, True) ::: Dave is kind.\nQuiet(Dave, True) ::: Dave is quiet.\nSmart(Dave, True) ::: Dave is smart.\nRound(Harry, True) ::: Harry is round.\nGreen(Harry, True) ::: Harry is green.\nKind(Harry, True) ::: Harry is kind.\nRules:\nQuiet($x, True) >>> Kind($x, True) ::: Quiet people are kind.\nRough($x, True) >>> Green($x, True) ::: If someone is rough then they are green.\nRound($x, True) >>> Quiet($x, True) ::: If someone is round then they are quiet.\nKind($x, True) >>> Smart($x, True) ::: If someone is kind then they are smart.\nGreen($x, True) >>> Round($x, True) ::: If someone is green then they are round.\nGreen($x, True) && Kind($x, True) >>> Rough($x, True) ::: All rough, kind people are green.\nQuery:\nCold(Bob, True) ::: Bob is cold.\n------\nProblem:\nAnne is green. Anne is quiet. Anne is rough. Bob is rough. Dave is green. Dave is kind. Dave is quiet. Dave is smart. Harry is green. Harry is kind. Harry is round. Quiet people are kind. If someone is rough then they are green. If someone is round then they are quiet. If someone is kind then they are smart. All rough, kind people are green. If someone is green then they are round.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Bob is cold.\n###\nPredicates:\nGreen($x, bool) ::: Is x green?\nQuiet($x, bool) ::: Is x quiet?\nRough($x, bool) ::: Is x rough?\nKind($x, bool) ::: Is x kind?\nSmart($x, bool) ::: Is x smart?\nRound($x, bool) ::: Is x round?\nCold($x, bool"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-645_Q11",
    "context": "The bald eagle is green. The bald eagle is red. The cow is nice. The cow likes the tiger. The cow needs the tiger. The mouse is nice. The mouse needs the bald eagle. The mouse sees the bald eagle. The tiger likes the bald eagle. The tiger needs the cow. The tiger needs the mouse. If someone is young then they need the tiger. If the tiger is young then the tiger is green. If someone needs the tiger then the tiger sees the bald eagle. If someone sees the tiger and the tiger likes the bald eagle then the bald eagle sees the tiger. If someone is green and they see the bald eagle then they are cold. If someone is green and they like the tiger then they see the bald eagle. If the tiger is cold then the tiger is young. If someone needs the tiger then they like the tiger. If someone needs the mouse then they are green.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The tiger likes the tiger.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen($x, bool) ::: Is x green?\nRed($x, bool) ::: Is x red?\nNice($x, bool) ::: Is x nice?\nYoung($x, bool) ::: Is x young?\nCold($x, bool) ::: Is x cold?\nLikes($x, $y, bool) ::: Does x like y?\nNeeds($x, $y, bool) ::: Does x need y?\nSees($x, $y, bool) ::: Does x see y?\nFacts:\nGreen(BaldEagle, True) ::: The bald eagle is green.\nRed(BaldEagle, True) ::: The bald eagle is red.\nNice(Cow, True) ::: The cow is nice.\nLikes(Cow, Tiger, True) ::: The cow likes the tiger.\nNeeds(Cow, Tiger, True) ::: The cow needs the tiger.\nNice(Mouse, True) ::: The mouse is nice.\nNeeds(Mouse, BaldEagle, True) ::: The mouse needs the bald eagle.\nSees(Mouse, BaldEagle, True) ::: The mouse sees the bald eagle.\nLikes(Tiger, BaldEagle, True) ::: The tiger likes the bald eagle.\nNeeds(Tiger, Cow, True) ::: The tiger needs the cow.\nNeeds(Tiger, Mouse, True) ::: The tiger needs the mouse.\nYoung(Tiger, True) >>> Tiger(Tiger, True) ::: If someone is young then they need the tiger.\nGreen(Tiger, True) >>> Young(Tiger, True) ::: If the tiger is young then the tiger is green.\nNeeds(Tiger, Mouse) >>> Likes(Tiger, BaldEagle, True) ::: If someone needs the tiger then the tiger sees the bald eagle.\nSees(Tiger, BaldEagle) && Likes(Tiger, BaldEagle, True) >>> Sees(BaldEagle, Tiger, True) ::: If someone sees the tiger and the tiger likes the bald eagle then the bald eagle sees the tiger.\nGreen(BaldEagle, True) && Sees(BaldEagle, Tiger, True) >>> Cold(BaldEagle, True) ::: If someone is green and they see the bald eagle then they are cold.\nGreen(BaldEagle, True) && Likes(Tiger, BaldEagle, True) >>> Sees(BaldEagle, Tiger, True) ::: If someone is green and they like the tiger then they see the bald eagle.\nCold(Tiger, True) >>> Young(Tiger, True) ::: If the tiger is cold then the tiger is young.\nNeeds(Tiger, Mouse) >>> Likes(Tiger, Mouse, True) ::: If someone needs the tiger then they like the tiger.\nNeeds(Tiger, Mouse) >>> Green("
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-345_Q17",
    "context": "Anne is not nice. Anne is round. Anne is not white. Anne is young. Erin is round. Fiona is blue. Gary is young. All nice people are not quiet. All round people are quiet. If Anne is nice then Anne is white. If someone is quiet then they are blue. If Fiona is white then Fiona is blue. If someone is rough then they are young. If someone is nice and not blue then they are not rough. If someone is blue then they are rough. If Erin is young then Erin is white.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is not round.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNice($x, bool) ::: Is x nice?\nRound($x, bool) ::: Is x round?\nWhite($x, bool) ::: Is x white?\nYoung($x, bool) ::: Is x young?\nQuiet($x, bool) ::: Is x quiet?\nBlue($x, bool) ::: Is x blue?\nRough($x, bool) ::: Is x rough?\nFacts:\nNice(Anne, False) ::: Anne is not nice.\nRound(Anne, True) ::: Anne is round.\nWhite(Anne, False) ::: Anne is not white.\nYoung(Anne, True) ::: Anne is young.\nRound(Erin, True) ::: Erin is round.\nBlue(Fiona, True) ::: Fiona is blue.\nYoung(Gary, True) ::: Gary is young.\nRules:\nNice($x, True) >>> Quiet($x, False) ::: All nice people are not quiet.\nRound($x, True) >>> Quiet($x, True) ::: All round people are quiet.\nNice($x, True) >>> White($x, True) ::: If Anne is nice then Anne is white.\nQuiet($x, True) >>> Blue($x, True) ::: If someone is quiet then they are blue.\nWhite($x, True) >>> Blue($x, True) ::: If Fiona is white then Fiona is blue.\nRough($x, True) >>> Young($x, True) ::: If someone is rough then they are young.\nNice($x, True) && Not(Blue($x, True)) >>> Not(Rough($x, True)) ::: If someone is nice and not blue then they are not rough.\nBlue($x, True) >>> Rough($x, True) ::: If someone is blue then they are rough.\nYoung($x, True) >>> Erin($x, True) ::: If Erin is young then Erin is white.\nQuery:\nNot(Round(Gary, True)) ::: Gary is not round.\n------\nProblem:\nAnne is not nice. Anne is round. Anne is not white. Anne is young. Erin is round. Fiona is blue. Gary is young. All nice people are not quiet. All round people are quiet. If Anne is nice then Anne is white. If someone is quiet then they are blue. If Fiona is white then Fiona is blue. If someone is rough then they are young. If someone is nice and not blue then they are not rough. If someone is blue then they are rough. If Erin is young then Erin is white.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Gary is not round.\n###\nPredicates:\nNice($x, bool) ::: Is x nice?\nRound($x, bool) ::: Is x round?\nWhite($x, bool) ::: Is x white?\nYoung($x, bool) ::: Is x young?\nQuiet($x, bool) ::: Is x quiet"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-372_Q15",
    "context": "The cat visits the rabbit. The cow eats the cat. The rabbit chases the squirrel. The rabbit is cold. The rabbit is green. The rabbit visits the cat. The squirrel eats the cat. If something eats the squirrel then the squirrel is blue. If something chases the squirrel and the squirrel eats the cow then it eats the cow. If something chases the rabbit then it is cold. If something is young and it visits the cow then the cow is big. If something is big then it visits the rabbit. If something is blue then it eats the rabbit. If something eats the cat then it eats the cow. If something visits the cow then the cow eats the squirrel. If something eats the cat and it eats the cow then the cat visits the cow.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cat does not eat the rabbit.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nVisits($x, $y) ::: Does x visit y?\nEats($x, $y) ::: Does x eat y?\nChases($x, $y) ::: Does x chase y?\nCold($x, bool) ::: Is x cold?\nGreen($x, bool) ::: Is x green?\nBig($x, bool) ::: Is x big?\nBlue($x, bool) ::: Is x blue?\nFacts:\nVisits(Cat, Rabbit) ::: The cat visits the rabbit.\nEats(Cow, Cat) ::: The cow eats the cat.\nChases(Rabbit, Squirrel) ::: The rabbit chases the squirrel.\nCold(Rabbit, True) ::: The rabbit is cold.\nGreen(Rabbit, True) ::: The rabbit is green.\nVisits(Rabbit, Cat) ::: The rabbit visits the cat.\nEats(Squirrel, Cat) ::: The squirrel eats the cat.\nRules:\nEats($x, $y) >>> Eats($y, $x) ::: If something eats the squirrel then the squirrel eats the cow.\nChases($x, $y) && Eats($y, $z) >>> Eats($x, $z) ::: If something chases the squirrel and the squirrel eats the cow then it eats the cow.\nChases($x, $y) >>> Cold($x, True) ::: If something chases the rabbit then it is cold.\nYoung($x, True) && Visits($x, $y) >>> Big($y, True) ::: If something is young and it visits the cow then the cow is big.\nBig($x, True) >>> Visits($x, $y) ::: If something is big then it visits the rabbit.\nBlue($x, True) >>> Eats($x, $y) ::: If something is blue then it eats the rabbit.\nEats($x, $y) >>> Eats($y, $z) ::: If something eats the cat then it eats the cow.\nVisits($x, $y) >>> Eats($y, $z) ::: If something visits the cow then the cow eats the squirrel.\nEats($x, $y) && Eats($y, $z) >>> Visits($x, $z) ::: If something eats the cat and it eats the cow then the cat visits the cow.\nQuery:\nEats(Cat, Rabbit) ::: The cat eats the rabbit.\n------\nProblem:\nThe cat visits the rabbit. The cow eats the cat. The rabbit chases the squirrel. The rabbit is cold. The rabbit is green. The rabbit visits the cat. The squirrel eats the cat. If something eats the squirrel then the squirrel is blue. If something chases the squirrel and the squirrel eats the cow then it eats the cow"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-718_Q12",
    "context": "The cat chases the squirrel. The cat is not big. The cat does not like the mouse. The cat visits the dog. The cat visits the mouse. The dog is not cold. The dog is young. The mouse likes the squirrel. The squirrel does not chase the dog. The squirrel likes the dog. If the cat is green and the cat visits the mouse then the mouse is big. If something likes the dog then it is cold. If something likes the mouse then the mouse is green. If something is cold then it chases the cat. If something chases the cat then it likes the cat. If something is young then it chases the squirrel. If something chases the squirrel and it does not chase the mouse then the squirrel likes the cat. If something likes the mouse and it is green then the mouse is cold. If something chases the cat then the cat likes the dog.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cat does not chase the cat.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nBig($x, bool) ::: Is x big?\nLikes($x, $y, bool) ::: Does x like y?\nVisits($x, $y, bool) ::: Does x visit y?\nCold($x, bool) ::: Is x cold?\nYoung($x, bool) ::: Is x young?\nGreen($x, bool) ::: Is x green?\nFacts:\nChases(Cat, Squirrel, True) ::: The cat chases the squirrel.\nNot(Big(Cat, True)) ::: The cat is not big.\nNot(Likes(Cat, Mouse, True)) ::: The cat does not like the mouse.\nVisits(Cat, Dog, True) ::: The cat visits the dog.\nVisits(Cat, Mouse, True) ::: The cat visits the mouse.\nNot(Cold(Dog, True)) ::: The dog is not cold.\nYoung(Dog, True) ::: The dog is young.\nLikes(Mouse, Squirrel, True) ::: The mouse likes the squirrel.\nNot(Chases(Squirrel, Dog, True)) ::: The squirrel does not chase the dog.\nLikes(Squirrel, Dog, True) ::: The squirrel likes the dog.\nIf(Cat, Green, Cat, Mouse, Big(Mouse, True)) ::: If the cat is green and the cat visits the mouse then the mouse is big.\nIf(Something, Likes, Something, Dog, Cold(Something, True)) ::: If something likes the dog then it is cold.\nIf(Something, Likes, Something, Mouse, Green(Something, True)) ::: If something likes the mouse then the mouse is green.\nIf(Something, Cold, Something, Cat, Chases(Something, Cat, True)) ::: If something chases the cat then it likes the cat.\nIf(Something, Chases, Something, Cat, Likes(Something, Cat, True)) ::: If something chases the cat then it likes the cat.\nIf(Something, Young, Something, Squirrel, Chases(Something, Squirrel, True)) ::: If something is young then it chases the squirrel.\nIf(Something, Chases, Something, Squirrel, Not(Chases(Something, Mouse, True)) && Likes(Squirrel, Cat, True)) ::: If something chases the squirrel and it does not chase the mouse then the squirrel likes the cat.\nIf(Something, Likes, Something, Mouse, Green(Something, True) && Cold(Something, True)) ::: If something likes the mouse and it is green then the mouse is cold.\nIf(Something, Chases, Something, Cat, Likes(Something, Dog, True)) ::: If something chases the cat then the cat likes the dog.\nQuery:\nNot(Chases(Cat, Cat, True)) ::: The cat does not chase the cat.\n------\nProblem:\nThe cat chases the squir"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-651_Q4",
    "context": "The bear eats the dog. The bear eats the rabbit. The bear is round. The bear needs the rabbit. The bear needs the tiger. The bear sees the rabbit. The dog eats the bear. The rabbit eats the tiger. The rabbit is round. The tiger eats the bear. The tiger is cold. The tiger is young. If something eats the tiger then the tiger needs the dog. If the bear sees the dog and the dog eats the tiger then the dog eats the bear. If something eats the bear then it sees the tiger. If the tiger sees the rabbit then the rabbit eats the bear. If something eats the bear and the bear sees the rabbit then it sees the dog. If something sees the dog then it sees the rabbit.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The tiger does not see the tiger.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y, bool) ::: Does x eat y?\nNeeds($x, $y, bool) ::: Does x need y?\nSees($x, $y, bool) ::: Does x see y?\nRound($x, bool) ::: Is x round?\nYoung($x, bool) ::: Is x young?\nCold($x, bool) ::: Is x cold?\nFacts:\nEats(Bear, Dog, True) ::: The bear eats the dog.\nEats(Bear, Rabbit, True) ::: The bear eats the rabbit.\nRound(Bear, True) ::: The bear is round.\nNeeds(Bear, Rabbit, True) ::: The bear needs the rabbit.\nNeeds(Bear, Tiger, True) ::: The bear needs the tiger.\nSees(Bear, Rabbit, True) ::: The bear sees the rabbit.\nEats(Dog, Bear, True) ::: The dog eats the bear.\nEats(Rabbit, Tiger, True) ::: The rabbit eats the tiger.\nRound(Rabbit, True) ::: The rabbit is round.\nEats(Tiger, Bear, True) ::: The tiger eats the bear.\nCold(Tiger, True) ::: The tiger is cold.\nYoung(Tiger, True) ::: The tiger is young.\nRules:\nEats($x, $y, True) >>> Needs($x, $y, True) ::: If something eats the tiger then the tiger needs the dog.\nEats($x, $y, True) && Sees($x, $y, True) >>> Eats($x, $y, True) ::: If the bear sees the dog and the dog eats the tiger then the dog eats the bear.\nEats($x, $y, True) >>> Sees($x, $y, True) ::: If something eats the bear then it sees the tiger.\nSees($x, $y, True) >>> Eats($x, $y, True) ::: If the tiger sees the rabbit then the rabbit eats the bear.\nEats($x, $y, True) && Sees($x, $y, True) >>> Sees($x, $y, True) ::: If something eats the bear and the bear sees the rabbit then it sees the dog.\nSees($x, $y, True) >>> Sees($x, $z, True) ::: If something sees the dog then it sees the rabbit.\nQuery:\nSees(Tiger, Tiger, True) ::: The tiger does not see the tiger.\n------\nProblem:\nThe bear eats the dog. The bear eats the rabbit. The bear is round. The bear needs the rabbit. The bear needs the tiger. The bear sees the rabbit. The dog eats the bear. The rabbit eats the tiger. The rabbit is round. The"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-556_Q20",
    "context": "Bob is cold. Bob is nice. Bob is quiet. Bob is round. Bob is white. Fiona is rough. Fiona is smart. Gary is round. Harry is cold. Harry is smart. All white people are cold. Round people are white. All rough, quiet people are nice. If someone is nice then they are round. All rough, white people are quiet. Cold people are round. If someone is rough then they are quiet.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is rough.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nNice($x, bool) ::: Is x nice?\nQuiet($x, bool) ::: Is x quiet?\nRound($x, bool) ::: Is x round?\nWhite($x, bool) ::: Is x white?\nSmart($x, bool) ::: Is x smart?\nRough($x, bool) ::: Is x rough?\nFacts:\nCold(Bob, True) ::: Bob is cold.\nNice(Bob, True) ::: Bob is nice.\nQuiet(Bob, True) ::: Bob is quiet.\nRound(Bob, True) ::: Bob is round.\nWhite(Bob, True) ::: Bob is white.\nRough(Fiona, True) ::: Fiona is rough.\nSmart(Fiona, True) ::: Fiona is smart.\nRound(Gary, True) ::: Gary is round.\nCold(Harry, True) ::: Harry is cold.\nSmart(Harry, True) ::: Harry is smart.\nRules:\nWhite($x, True) >>> Cold($x, True) ::: All white people are cold.\nRound($x, True) >>> White($x, True) ::: Round people are white.\nRough($x, True) && Quiet($x, True) >>> Nice($x, True) ::: All rough, quiet people are nice.\nNice($x, True) >>> Round($x, True) ::: If someone is nice then they are round.\nRough($x, True) && White($x, True) >>> Quiet($x, True) ::: All rough, white people are quiet.\nCold($x, True) >>> Round($x, True) ::: Cold people are round.\nRough($x, True) >>> Quiet($x, True) ::: If someone is rough then they are quiet.\nQuery:\nRough(Gary, True) ::: Gary is rough.\n------\nProblem:\nBob is cold. Bob is nice. Bob is quiet. Bob is round. Bob is white. Fiona is rough. Fiona is smart. Gary is round. Harry is cold. Harry is smart. All white people are cold. Round people are white. All rough, quiet people are nice. If someone is nice then they are round. All rough, white people are quiet. Cold people are round. If someone is rough then they are quiet.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Harry is rough.\n###\nPredicates:\nCold($x, bool) ::: Is x cold?\nNice($x, bool) ::: Is x nice?\nQuiet($x, bool) ::: Is x quiet?\nRound($x, bool) ::: Is x round?\nWhite($x, bool) ::: Is x white?\nSmart($x, bool) ::: Is x smart?\nRough($x, bool) ::: Is x rough?\nFacts:\nCold(Bob, True) ::: Bob is cold."
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-960_Q3",
    "context": "Anne is green. Anne is nice. Anne is quiet. Erin is big. Erin is nice. Erin is quiet. Gary is blue. Gary is green. Harry is blue. Harry is green. Harry is kind. Harry is round. If something is kind and blue then it is nice. Nice things are round. If something is round then it is quiet. Blue things are round. Nice things are big. If something is round and quiet then it is kind.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Anne is big.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen($x, bool) ::: Is x green?\nNice($x, bool) ::: Is x nice?\nQuiet($x, bool) ::: Is x quiet?\nBig($x, bool) ::: Is x big?\nKind($x, bool) ::: Is x kind?\nRound($x, bool) ::: Is x round?\nBlue($x, bool) ::: Is x blue?\nFacts:\nGreen(Anne, True) ::: Anne is green.\nNice(Anne, True) ::: Anne is nice.\nQuiet(Anne, True) ::: Anne is quiet.\nBig(Erin, True) ::: Erin is big.\nNice(Erin, True) ::: Erin is nice.\nQuiet(Erin, True) ::: Erin is quiet.\nBlue(Gary, True) ::: Gary is blue.\nGreen(Gary, True) ::: Gary is green.\nBlue(Harry, True) ::: Harry is blue.\nGreen(Harry, True) ::: Harry is green.\nKind(Harry, True) ::: Harry is kind.\nRound(Harry, True) ::: Harry is round.\nRules:\nKind($x, True) && Blue($x, True) >>> Nice($x, True) ::: If something is kind and blue then it is nice.\nNice($x, True) >>> Round($x, True) ::: Nice things are round.\nRound($x, True) >>> Quiet($x, True) ::: If something is round then it is quiet.\nBlue($x, True) >>> Round($x, True) ::: Blue things are round.\nNice($x, True) >>> Big($x, True) ::: Nice things are big.\nRound($x, True) && Quiet($x, True) >>> Kind($x, True) ::: If something is round and quiet then it is kind.\nQuery:\nBig(Anne, True) ::: Anne is big.\n------\nProblem:\nAnne is green. Anne is nice. Anne is quiet. Erin is big. Erin is nice. Erin is quiet. Gary is blue. Gary is green. Harry is blue. Harry is green. Harry is kind. Harry is round. If something is kind and blue then it is nice. Nice things are round. If something is round then it is quiet. Blue things are round. Nice things are big. If something is round and quiet then it is kind.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Erin is kind.\n###\nPredicates:\nGreen($x, bool) ::: Is x green?\nNice($x, bool) ::: Is x nice?\nQuiet($x, bool) ::: Is x quiet?\nBig($x, bool) ::: Is x big?\nKind($x, bool) ::: Is x kind?\nRound($x, bool) ::: Is x round?\nBlue($x, bool) ::: Is x blue?\nFacts:\nGreen(Anne, True) ::: Anne is green."
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-274_Q6",
    "context": "The bald eagle does not eat the cat. The bald eagle is green. The bald eagle is nice. The bald eagle is round. The bald eagle likes the tiger. The cat eats the tiger. The cat is red. The cat likes the bald eagle. The cat likes the tiger. The cat needs the tiger. The dog is not round. The dog likes the bald eagle. The tiger eats the dog. The tiger needs the bald eagle. If something is red and it likes the tiger then it needs the dog. If the tiger needs the dog and the dog is green then the dog needs the tiger. All cold things are nice. If something eats the dog and the dog needs the bald eagle then the dog is nice. If something eats the cat then the cat needs the bald eagle. If something eats the cat and it needs the dog then the cat is cold. If something needs the bald eagle then it eats the cat. If the cat likes the tiger and the cat needs the dog then the dog is not cold. If the bald eagle needs the dog and the dog eats the bald eagle then the dog is not cold.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cat does not need the bald eagle.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y, bool) ::: Does x eat y?\nLikes($x, $y, bool) ::: Does x like y?\nNeeds($x, $y, bool) ::: Does x need y?\nIs($x, $y, bool) ::: Is x y?\nIsRound($x, bool) ::: Is x round?\nIsGreen($x, bool) ::: Is x green?\nIsNice($x, bool) ::: Is x nice?\nIsCold($x, bool) ::: Is x cold?\nFacts:\nEats(BaldEagle, Cat, False) ::: The bald eagle does not eat the cat.\nIsGreen(BaldEagle, True) ::: The bald eagle is green.\nIsNice(BaldEagle, True) ::: The bald eagle is nice.\nIsRound(BaldEagle, True) ::: The bald eagle is round.\nLikes(BaldEagle, Tiger, True) ::: The bald eagle likes the tiger.\nEats(Cat, Tiger, True) ::: The cat eats the tiger.\nIsRed(Cat, True) ::: The cat is red.\nLikes(Cat, BaldEagle, True) ::: The cat likes the bald eagle.\nLikes(Cat, Tiger, True) ::: The cat likes the tiger.\nNeeds(Cat, Tiger, True) ::: The cat needs the tiger.\nIsNotRound(Dog, True) ::: The dog is not round.\nLikes(Dog, BaldEagle, True) ::: The dog likes the bald eagle.\nEats(Tiger, Dog, True) ::: The tiger eats the dog.\nNeeds(Tiger, BaldEagle, True) ::: The tiger needs the bald eagle.\nIfRedAndLikesTigerThenNeedsDog(x, True) ::: If something is red and it likes the tiger then it needs the dog.\nIfTigerNeedsDogAndDogIsGreenThenDogNeedsTiger(x, True) ::: If the tiger needs the dog and the dog is green then the dog needs the tiger.\nAllColdThingsAreNice(x, True) ::: All cold things are nice.\nIfEatsDogAndDogNeedsBaldEagleThenDogIsNice(x, True) ::: If something eats the dog and the dog needs the bald eagle then the dog is nice.\nIfEatsCatAndCatNeedsDogThenCatIsCold(x, True) ::: If something eats the cat and it needs the dog then the cat is cold.\nIfNeedsBaldEagleThenEatsCat(x, True) ::: If the cat likes the tiger and the cat needs the dog then the dog is not cold.\nIfBaldEagleNeedsDogAndDogEatsBaldEagleThenDogIsNotCold(x, True) ::: If the bald eagle needs the dog"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-48_Q4",
    "context": "The bear chases the cat. The bear chases the squirrel. The bear is young. The bear does not see the squirrel. The cat chases the cow. The cat chases the squirrel. The cat eats the squirrel. The cat is not kind. The cat does not see the cow. The cow does not chase the cat. The cow chases the squirrel. The squirrel chases the bear. The squirrel eats the cat. The squirrel eats the cow. The squirrel is young. The squirrel sees the cow. If something eats the bear then the bear sees the cow. If something is kind then it eats the bear. If the cow chases the bear and the cat does not chase the cow then the cow sees the squirrel. If something sees the squirrel then it is rough. If something eats the bear and it does not chase the cat then the cat sees the bear. If something sees the cow then it is kind. If something eats the squirrel then it eats the cat.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The squirrel is not kind.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nEats($x, $y, bool) ::: Does x eat y?\nYoung($x, bool) ::: Is x young?\nKind($x, bool) ::: Is x kind?\nSees($x, $y, bool) ::: Does x see y?\nRough($x, bool) ::: Is x rough?\nFacts:\nChases(Bear, Cat, True) ::: The bear chases the cat.\nChases(Bear, Squirrel, True) ::: The bear chases the squirrel.\nYoung(Bear, True) ::: The bear is young.\nNot(Sees(Bear, Squirrel, True)) ::: The bear does not see the squirrel.\nChases(Cat, Cow, True) ::: The cat chases the cow.\nChases(Cat, Squirrel, True) ::: The cat chases the squirrel.\nEats(Cat, Squirrel, True) ::: The cat eats the squirrel.\nNot(Kind(Cat, True)) ::: The cat is not kind.\nNot(Sees(Cat, Cow, True)) ::: The cat does not see the cow.\nNot(Chases(Cow, Cat, True)) ::: The cow does not chase the cat.\nChases(Cow, Squirrel, True) ::: The cow chases the squirrel.\nChases(Squirrel, Bear, True) ::: The squirrel chases the bear.\nEats(Squirrel, Cat, True) ::: The squirrel eats the cat.\nEats(Squirrel, Cow, True) ::: The squirrel eats the cow.\nYoung(Squirrel, True) ::: The squirrel is young.\nSees(Squirrel, Cow, True) ::: The squirrel sees the cow.\nRules:\nEats($x, $y, True) >>> Sees($x, $y, True) ::: If something eats the bear then the bear sees the cow.\nKind($x, True) >>> Eats($x, Bear, True) ::: If something is kind then it eats the bear.\nNot(Chases($x, $y, True)) && Chases($x, $z, True) && Not(Chases($y, $z, True)) >>> Sees($x, $z, True) ::: If the cow chases the bear and the cat does not chase the cow then the cow sees the squirrel.\nSees($x, $y, True) >>> Rough($x, True) ::: If something sees the squirrel then it is rough.\nNot(Eats($x, $y, True)) && Chases($x, $z, True) && Not(Chases($y, $z, True)) >>> Sees($y, $z, True) ::: If something sees the cow then it is kind.\nEats($x, $y, True) && Not(Chases($x, $z, True)) && Not(Chases($y, $z, True)) >>> Sees($z, $y, True) ::: If something eats the squirrel then it eats the cat.\nQuery:\nNot(Kind(Squirrel, True)) ::: The squirrel is not kind.\n------"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-629_Q2",
    "context": "Anne is red. Anne is rough. Bob is blue. Bob is red. Dave is quiet. Dave is red. Dave is not rough. Dave is smart. Gary is blue. Gary is cold. Gary is green. Gary is rough. If Bob is blue then Bob is rough. If Gary is green then Gary is quiet. If someone is green and red then they are not cold. If someone is smart then they are green. If someone is rough then they are smart. If someone is rough and not cold then they are not quiet. If someone is red and not blue then they are quiet.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Anne is not red.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRed($x, bool) ::: Is x red?\nRough($x, bool) ::: Is x rough?\nBlue($x, bool) ::: Is x blue?\nQuiet($x, bool) ::: Is x quiet?\nSmart($x, bool) ::: Is x smart?\nCold($x, bool) ::: Is x cold?\nGreen($x, bool) ::: Is x green?\nFacts:\nRed(Anne, True) ::: Anne is red.\nRough(Anne, True) ::: Anne is rough.\nBlue(Bob, True) ::: Bob is blue.\nRed(Bob, True) ::: Bob is red.\nQuiet(Dave, True) ::: Dave is quiet.\nRed(Dave, True) ::: Dave is red.\nNot(Rough(Dave, True)) ::: Dave is not rough.\nSmart(Dave, True) ::: Dave is smart.\nBlue(Gary, True) ::: Gary is blue.\nCold(Gary, True) ::: Gary is cold.\nGreen(Gary, True) ::: Gary is green.\nRough(Gary, True) ::: Gary is rough.\nRules:\nIf Bob is blue then Bob is rough ::: If Bob is blue then Bob is rough.\nIf Gary is green then Gary is quiet ::: If Gary is green then Gary is quiet.\nIf someone is green and red then they are not cold ::: If someone is green and red then they are not cold.\nIf someone is smart then they are green ::: If someone is smart then they are green.\nIf someone is rough then they are smart ::: If someone is rough then they are smart.\nIf someone is rough and not cold then they are not quiet ::: If someone is rough and not cold then they are not quiet.\nIf someone is red and not blue then they are quiet ::: If someone is red and not blue then they are quiet.\nQuery:\nNot(Red(Anne, True)) ::: Anne is not red.\n------\nProblem:\nAnne is red. Anne is rough. Bob is blue. Bob is red. Dave is quiet. Dave is red. Dave is not rough. Dave is smart. Gary is blue. Gary is cold. Gary is green. Gary is rough. If Bob is blue then Bob is rough. If Gary is green then Gary is quiet. If someone is green and red then they are not cold. If someone is smart then they are green. If someone is rough then they are smart. If someone is rough and not cold then they are not quiet. If someone is red and not blue then they are quiet.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Anne is not red.\n###\nPredicates:\nRed($x, bool) ::: Is x red?\nRough($x, bool) ::: Is x rough?\nBlue($x, bool) ::: Is x blue?\nQuiet($x, bool) ::: Is x quiet?\nSmart($x, bool) ::: Is x smart?\nCold($x, bool) ::: Is x cold?\nGreen($x, bool) ::: Is x green?\nFacts:\nRed(Anne, True) ::: Anne is red.\nRough(Anne, True) ::: Anne is rough.\nBlue(Bob, True) ::: Bob is blue.\nRed(Bob, True) ::: Bob is"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-201_Q18",
    "context": "Charlie is young. Dave is kind. Dave is quiet. Dave is young. Erin is quiet. Harry is green. Harry is quiet. If something is quiet and young then it is nice. If something is red and kind then it is nice. All green things are nice. If something is quiet and green then it is kind. If Charlie is red then Charlie is smart. If something is red then it is quiet. If something is young and nice then it is quiet. All quiet things are red. If something is young then it is green.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Harry is smart.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nYoung($x, bool) ::: Is x young?\nKind($x, bool) ::: Is x kind?\nQuiet($x, bool) ::: Is x quiet?\nRed($x, bool) ::: Is x red?\nGreen($x, bool) ::: Is x green?\nNice($x, bool) ::: Is x nice?\nSmart($x, bool) ::: Is x smart?\nFacts:\nYoung(Charlie, True) ::: Charlie is young.\nKind(Dave, True) ::: Dave is kind.\nQuiet(Dave, True) ::: Dave is quiet.\nYoung(Dave, True) ::: Dave is young.\nQuiet(Erin, True) ::: Erin is quiet.\nGreen(Harry, True) ::: Harry is green.\nQuiet(Harry, True) ::: Harry is quiet.\nRules:\nYoung($x, True) && Quiet($x, True) >>> Nice($x, True) ::: If something is quiet and young then it is nice.\nRed($x, True) && Kind($x, True) >>> Nice($x, True) ::: If something is red and kind then it is nice.\nGreen($x, True) >>> Nice($x, True) ::: All green things are nice.\nQuiet($x, True) && Green($x, True) >>> Kind($x, True) ::: If something is quiet and green then it is kind.\nRed($x, True) >>> Charlie($x, True) ::: If Charlie is red then Charlie is smart.\nRed($x, True) >>> Quiet($x, True) ::: If something is red then it is quiet.\nYoung($x, True) && Nice($x, True) >>> Quiet($x, True) ::: If something is young and nice then it is quiet.\nYoung($x, True) >>> Green($x, True) ::: If something is young then it is green.\nAll($x, True) >>> Red($x, True) ::: All quiet things are red.\nQuery:\nSmart(Harry, True) ::: Harry is smart.\n------\nProblem:\nCharlie is young. Dave is kind. Dave is quiet. Dave is young. Erin is quiet. Harry is green. Harry is quiet. If something is quiet and young then it is nice. If something is red and kind then it is nice. All green things are nice. If something is quiet and green then it is kind. If Charlie is red then Charlie is smart. If something is red then it is quiet. If something is young and nice then it is quiet. All quiet things are red. If something is young then it is green.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Harry is smart.\n###\nPredicates:\nYoung($x, bool) ::: Is x young?\nKind($x, bool) ::: Is x kind?\nQuiet($x, bool) ::: Is x quiet?\nRed($x, bool) ::: Is x red?\nGreen($x, bool) ::: Is x green?\nNice($x, bool) ::: Is x nice?\nSmart($x, bool) ::: Is x smart?\nFacts:\nYoung(Charlie, True) ::: Charlie is young.\nKind(Dave, True) ::: Dave is kind.\nQuiet(Dave,"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-205_Q22",
    "context": "The bald eagle chases the cow. The bald eagle is big. The bald eagle is rough. The cow chases the squirrel. The cow is rough. The cow visits the squirrel. The cow visits the tiger. The squirrel is not young. The squirrel does not see the bald eagle. The tiger is nice. If something sees the tiger and the tiger chases the squirrel then the squirrel is blue. If something visits the tiger then the tiger chases the squirrel. If something visits the bald eagle then the bald eagle is blue. If something is blue then it sees the tiger. If something visits the squirrel then it visits the bald eagle. If something sees the bald eagle and the bald eagle is big then the bald eagle sees the tiger.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cow is young.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nBig($x, bool) ::: Is x big?\nRough($x, bool) ::: Is x rough?\nYoung($x, bool) ::: Is x young?\nNice($x, bool) ::: Is x nice?\nBlue($x, bool) ::: Is x blue?\nVisits($x, $y, bool) ::: Does x visit y?\nSees($x, $y, bool) ::: Does x see y?\nFacts:\nChases(BaldEagle, Cow, True) ::: The bald eagle chases the cow.\nBig(BaldEagle, True) ::: The bald eagle is big.\nRough(BaldEagle, True) ::: The bald eagle is rough.\nChases(Cow, Squirrel, True) ::: The cow chases the squirrel.\nRough(Cow, True) ::: The cow is rough.\nVisits(Cow, Squirrel, True) ::: The cow visits the squirrel.\nVisits(Cow, Tiger, True) ::: The cow visits the tiger.\nNot(Young(Squirrel, True)) ::: The squirrel is not young.\nNot(Sees(Squirrel, BaldEagle, True)) ::: The squirrel does not see the bald eagle.\nNice(Tiger, True) ::: The tiger is nice.\nIf(Chases(Something, Tiger, True), Chases(Something, Squirrel, True)) ::: If something sees the tiger and the tiger chases the squirrel then the squirrel is blue.\nIf(Visits(Something, Tiger, True), Chases(Something, Squirrel, True)) ::: If something visits the tiger then the tiger chases the squirrel.\nIf(Visits(Something, BaldEagle, True), Blue(Something, True)) ::: If something visits the bald eagle then the bald eagle is blue.\nIf(Blue(Something, True), Sees(Something, Tiger, True)) ::: If something is blue then it sees the tiger.\nIf(Visits(Something, Squirrel, True), Visits(Something, BaldEagle, True)) ::: If something visits the squirrel then it visits the bald eagle.\nIf(Sees(Something, BaldEagle, True), Big(BaldEagle, True), Sees(Something, Tiger, True)) ::: If something sees the bald eagle and the bald eagle is big then the bald eagle sees the tiger.\nQuery:\nYoung(Cow, True) ::: The cow is young.\n------\nProblem:\nThe cow is big. The cow is blue. The cow is furry. The cow is green. The cow is rough. The cow is white. The cow visits the tiger. The cow visits the squirrel. The cow visits the bald eagle. The cow sees the tiger. The cow sees the squirrel. The cow sees the bald eagle. The cow is not young. The cow is not nice. The cow is not quiet. The cow is not red. The cow is not rough. The cow is not white. The cow is not young. The cow is not nice. The cow is not quiet. The cow is not red. The cow is not rough. The"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-1062_Q5",
    "context": "Charlie is furry. Charlie is young. Dave is nice. Erin is kind. Erin is not nice. Harry is blue. Harry is nice. Quiet, blue things are kind. If Dave is quiet then Dave is furry. If something is blue and not nice then it is quiet. If something is nice then it is quiet. All young, kind things are round. If something is nice and kind then it is young. If Dave is not blue then Dave is quiet. If something is round then it is not furry.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Harry is kind.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nFurry($x, bool) ::: Is x furry?\nYoung($x, bool) ::: Is x young?\nNice($x, bool) ::: Is x nice?\nKind($x, bool) ::: Is x kind?\nQuiet($x, bool) ::: Is x quiet?\nBlue($x, bool) ::: Is x blue?\nRound($x, bool) ::: Is x round?\nFacts:\nFurry(Charlie, True) ::: Charlie is furry.\nYoung(Charlie, True) ::: Charlie is young.\nNice(Dave, True) ::: Dave is nice.\nKind(Erin, True) ::: Erin is kind.\nNot(Nice(Erin, True)) ::: Erin is not nice.\nBlue(Harry, True) ::: Harry is blue.\nNice(Harry, True) ::: Harry is nice.\nQuiet(Blue($x, True), Kind($x, True)) ::: Quiet, blue things are kind.\nDave(Quiet($x, True), Furry($x, True)) ::: If Dave is quiet then Dave is furry.\nBlue($x, True) && Not(Nice($x, True)) >>> Quiet($x, True) ::: If something is blue and not nice then it is quiet.\nNice($x, True) >>> Quiet($x, True) ::: If something is nice then it is quiet.\nAll(Young($x, True), Kind($x, True)) >>> Round($x, True) ::: All young, kind things are round.\nNice($x, True) && Kind($x, True) >>> Young($x, True) ::: If something is nice and kind then it is young.\nNot(Blue($x, True)) >>> Quiet($x, True) ::: If Dave is not blue then Dave is quiet.\nNot(Furry($x, True)) >>> Round($x, True) ::: If something is round then it is not furry.\nQuery:\nKind(Harry, True) ::: Harry is kind.\n------\nProblem:\nCharlie is furry. Charlie is young. Dave is nice. Erin is kind. Erin is not nice. Harry is blue. Harry is nice. Quiet, blue things are kind. If Dave is quiet then Dave is furry. If something is blue and not nice then it is quiet. If something is nice then it is quiet. All young, kind things are round. If something is nice and kind then it is young. If Dave is not blue then Dave is quiet. If something is round then it is not furry.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Harry is kind.\n###\nPredicates:\nFurry($x, bool) ::: Is x furry?\nYoung($x, bool) ::: Is x young?\nNice($x, bool) ::: Is x nice?\nKind($x, bool) ::: Is x kind?\nQuiet($x, bool) ::: Is x quiet?\nBlue($x, bool) ::: Is x blue?\nRound($x, bool) ::: Is x round?\nFacts:\nFurry(Charlie, True) ::: Charlie is furry.\nYoung(Charlie, True) ::: Charlie is young.\nNice(Dave, True)"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-1002_Q14",
    "context": "The bear is green. The bear is young. The bear needs the dog. The dog chases the bear. The dog eats the lion. The dog is young. The lion does not chase the rabbit. The lion needs the bear. The rabbit chases the dog. The rabbit chases the lion. The rabbit eats the bear. The rabbit eats the lion. The rabbit is young. The rabbit needs the lion. If someone eats the rabbit then the rabbit needs the bear. If the lion does not eat the rabbit then the rabbit needs the bear. If someone eats the dog then they chase the dog. If someone is nice then they eat the dog. If someone chases the dog and they need the bear then the dog is nice. If someone chases the dog and the dog eats the bear then they eat the lion. If the dog needs the lion and the dog eats the bear then the lion chases the dog. If someone eats the rabbit then they are nice. If someone needs the lion then the lion eats the dog.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bear eats the dog.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen($x, bool) ::: Is x green?\nYoung($x, bool) ::: Is x young?\nNeeds($x, $y, bool) ::: Does x need y?\nEats($x, $y, bool) ::: Does x eat y?\nChases($x, $y, bool) ::: Does x chase y?\nNice($x, bool) ::: Is x nice?\nFacts:\nGreen(Bear, True) ::: The bear is green.\nYoung(Bear, True) ::: The bear is young.\nNeeds(Bear, Dog, True) ::: The bear needs the dog.\nChases(Dog, Bear, True) ::: The dog chases the bear.\nEats(Dog, Lion, True) ::: The dog eats the lion.\nYoung(Dog, True) ::: The dog is young.\nNot(Lion, Chases, Rabbit) ::: The lion does not chase the rabbit.\nNeeds(Lion, Bear, True) ::: The lion needs the bear.\nChases(Rabbit, Dog, True) ::: The rabbit chases the dog.\nChases(Rabbit, Lion, True) ::: The rabbit chases the lion.\nEats(Rabbit, Bear, True) ::: The rabbit eats the bear.\nEats(Rabbit, Lion, True) ::: The rabbit eats the lion.\nYoung(Rabbit, True) ::: The rabbit is young.\nNeeds(Rabbit, Lion, True) ::: The rabbit needs the lion.\nRules:\nIf someone eats the rabbit then the rabbit needs the bear ::: If someone eats the rabbit then the rabbit needs the bear.\nIf the lion does not eat the rabbit then the rabbit needs the bear ::: If the lion does not eat the rabbit then the rabbit needs the bear.\nIf someone eats the dog then they chase the dog ::: If someone eats the dog then they chase the dog.\nIf someone is nice then they eat the dog ::: If someone is nice then they eat the dog.\nIf someone chases the dog and they need the bear then the dog is nice ::: If someone chases the dog and they need the bear then the dog is nice.\nIf someone chases the dog and the dog eats the bear then they eat the lion ::: If someone chases the dog and the dog eats the bear then they eat the lion.\nIf the dog needs the lion and the dog eats the bear then the lion chases the dog ::: If the dog needs the lion and the dog eats the bear then the lion chases the dog.\nIf someone eats the rabbit then they are nice ::: If someone eats the rabbit then they are nice.\nIf someone needs the lion then the lion eats the dog ::: If someone needs the lion then the lion eats the dog.\nQuery:\nEats(Bear, Dog, True) ::: The bear eats the dog.\n------\nProblem:\nThe bear is green. The bear is young. The bear needs the dog. The dog chases the bear. The dog eats the lion. The dog is young. The lion does not chase the rabbit. The lion needs the bear. The rabbit chases the dog. The rabbit chases the lion. The rabbit eats the bear. The rabbit e"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-594_Q12",
    "context": "Anne is kind. Anne is nice. Anne is red. Anne is smart. Anne is young. Charlie is big. Charlie is kind. Charlie is nice. Charlie is quiet. Charlie is young. Erin is big. Erin is kind. Erin is quiet. Erin is red. Erin is smart. Harry is young. If someone is red then they are young. If someone is young then they are quiet. Quiet, young people are kind. If someone is big then they are smart. Kind people are red. Young people are quiet. If someone is kind and nice then they are big. All kind, smart people are nice. If someone is kind then they are big.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Harry is not nice.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nKind($x, bool) ::: Is x kind?\nNice($x, bool) ::: Is x nice?\nRed($x, bool) ::: Is x red?\nSmart($x, bool) ::: Is x smart?\nYoung($x, bool) ::: Is x young?\nBig($x, bool) ::: Is x big?\nQuiet($x, bool) ::: Is x quiet?\nFacts:\nKind(Anne, True) ::: Anne is kind.\nNice(Anne, True) ::: Anne is nice.\nRed(Anne, True) ::: Anne is red.\nSmart(Anne, True) ::: Anne is smart.\nYoung(Anne, True) ::: Anne is young.\nBig(Charlie, True) ::: Charlie is big.\nKind(Charlie, True) ::: Charlie is kind.\nNice(Charlie, True) ::: Charlie is nice.\nQuiet(Charlie, True) ::: Charlie is quiet.\nYoung(Charlie, True) ::: Charlie is young.\nBig(Erin, True) ::: Erin is big.\nKind(Erin, True) ::: Erin is kind.\nQuiet(Erin, True) ::: Erin is quiet.\nRed(Erin, True) ::: Erin is red.\nSmart(Erin, True) ::: Erin is smart.\nYoung(Erin, True) ::: Erin is young.\nYoung(Harry, True) ::: Harry is young.\nRules:\nRed($x, True) >>> Young($x, True) ::: If someone is red then they are young.\nYoung($x, True) >>> Quiet($x, True) ::: If someone is young then they are quiet.\nQuiet($x, True) && Young($x, True) >>> Kind($x, True) ::: Quiet, young people are kind.\nBig($x, True) >>> Smart($x, True) ::: If someone is big then they are smart.\nKind($x, True) >>> Red($x, True) ::: Kind people are red.\nYoung($x, True) >>> Kind($x, True) ::: Young people are kind.\nKind($x, True) && Nice($x, True) >>> Big($x, True) ::: If someone is kind and nice then they are big.\nKind($x, True) && Smart($x, True) >>> Nice($x, True) ::: All kind, smart people are nice.\nKind($x, True) >>> Big($x, True) ::: If someone is kind then they are big.\nQuery:\nNot(Nice(Harry, True)) ::: Harry is not nice.\n------\nProblem:\nAnne is kind. Anne is nice. Anne is red. Anne is smart. Anne is young. Charlie is big. Charlie is kind. Charlie is nice. Charlie is quiet. Charlie is young. Erin is big. Erin is kind. Erin is quiet. Erin is red. Erin is smart. Harry is young. If someone is red then they are young. If someone is young then they are quiet. Quiet, young people are kind. If someone is big then they are smart. Kind people are red. Young people are quiet. If someone is kind and nice then they are big. All kind, smart people are nice. If someone is kind then they are big."
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-473_Q8",
    "context": "Anne is cold. Anne is furry. Anne is kind. Anne is red. Anne is young. Erin is cold. Erin is kind. Gary is cold. Harry is furry. Harry is young. Blue, furry people are kind. Cold people are furry. Kind, blue people are young. Kind people are blue. Cold, furry people are blue. Red people are cold. If Harry is furry and Harry is not kind then Harry is young. If Erin is kind and Erin is rough then Erin is young. All blue, young people are not rough.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Erin is rough.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nFurry($x, bool) ::: Is x furry?\nKind($x, bool) ::: Is x kind?\nRed($x, bool) ::: Is x red?\nYoung($x, bool) ::: Is x young?\nBlue($x, bool) ::: Is x blue?\nRough($x, bool) ::: Is x rough?\nFacts:\nCold(Anne, True) ::: Anne is cold.\nFurry(Anne, True) ::: Anne is furry.\nKind(Anne, True) ::: Anne is kind.\nRed(Anne, True) ::: Anne is red.\nYoung(Anne, True) ::: Anne is young.\nCold(Erin, True) ::: Erin is cold.\nKind(Erin, True) ::: Erin is kind.\nCold(Gary, True) ::: Gary is cold.\nFurry(Harry, True) ::: Harry is furry.\nYoung(Harry, True) ::: Harry is young.\nBlue($x, True) >>> Furry($x, True) ::: Blue, furry people are kind.\nCold($x, True) >>> Furry($x, True) ::: Cold people are furry.\nKind($x, True) >>> Blue($x, True) ::: Kind, blue people are young.\nKind($x, True) >>> Blue($x, True) ::: Kind people are blue.\nCold($x, True) >>> Furry($x, True) >>> Blue($x, True) ::: Cold, furry people are blue.\nRed($x, True) >>> Cold($x, True) ::: Red people are cold.\nFurry($x, True) && Not(Kind($x, True)) >>> Young($x, True) ::: If Harry is furry and Harry is not kind then Harry is young.\nKind($x, True) && Rough($x, True) >>> Young($x, True) ::: If Erin is kind and Erin is rough then Erin is young.\nNot(Blue($x, True)) && Young($x, True) >>> Not(Rough($x, True)) ::: All blue, young people are not rough.\nQuery:\nRough(Erin, True) ::: Erin is rough.\n------\nProblem:\nAnne is cold. Anne is furry. Anne is kind. Anne is red. Anne is young. Erin is cold. Erin is kind. Gary is cold. Harry is furry. Harry is young. Blue, furry people are kind. Cold people are furry. Kind, blue people are young. Kind people are blue. Cold, furry people are blue. Red people are cold. If Harry is furry and Harry is not kind then Harry is young. If Erin is kind and Erin is rough then Erin is young. All blue, young people are not rough.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Erin is rough.\n###\nPredicates:\nCold($x, bool) ::: Is x cold?\nFurry($x, bool) ::: Is x furry?\nKind($x, bool) ::: Is x kind?\nRed($x, bool) ::: Is x red?\nYoung($x, bool) ::: Is x young?\nBlue($"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-236_Q23",
    "context": "The bald eagle is kind. The bald eagle is red. The bald eagle needs the dog. The bald eagle visits the tiger. The dog is big. The dog likes the lion. The dog likes the tiger. The dog needs the lion. The dog needs the tiger. The dog visits the bald eagle. The lion is red. The lion likes the bald eagle. The tiger is big. The tiger is kind. If something needs the lion then it is blue. If something likes the tiger then the tiger needs the lion. If something likes the bald eagle then the bald eagle needs the lion. If something is red and big then it visits the lion. If something visits the dog and it is kind then it likes the tiger. If something likes the tiger then it is big. If something needs the lion and it visits the tiger then the tiger is red. If something visits the lion then it visits the dog. If something likes the bald eagle then it is cold.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bald eagle does not visit the bald eagle.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nKind($x, bool) ::: Is x kind?\nRed($x, bool) ::: Is x red?\nBig($x, bool) ::: Is x big?\nBlue($x, bool) ::: Is x blue?\nCold($x, bool) ::: Is x cold?\nNeeds($x, $y, bool) ::: Does x need y?\nLikes($x, $y, bool) ::: Does x like y?\nVisits($x, $y, bool) ::: Does x visit y?\nFacts:\nKind(BaldEagle, True) ::: The bald eagle is kind.\nRed(BaldEagle, True) ::: The bald eagle is red.\nNeeds(BaldEagle, Dog, True) ::: The bald eagle needs the dog.\nVisits(BaldEagle, Tiger, True) ::: The bald eagle visits the tiger.\nBig(Dog, True) ::: The dog is big.\nLikes(Dog, Lion, True) ::: The dog likes the lion.\nLikes(Dog, Tiger, True) ::: The dog likes the tiger.\nNeeds(Dog, Lion, True) ::: The dog needs the lion.\nNeeds(Dog, Tiger, True) ::: The dog needs the tiger.\nVisits(Dog, BaldEagle, True) ::: The dog visits the bald eagle.\nRed(Lion, True) ::: The lion is red.\nLikes(Lion, BaldEagle, True) ::: The lion likes the bald eagle.\nBig(Tiger, True) ::: The tiger is big.\nKind(Tiger, True) ::: The tiger is kind.\nRules:\nBlue($x, True) >>> Needs($x, Lion, True) ::: If something needs the lion then it is blue.\nLikes($x, Tiger) >>> Tiger($x, Needs(Lion, True) ::: If something likes the tiger then the tiger needs the lion.\nLikes($x, BaldEagle) >>> BaldEagle($x, Needs(Lion, True) ::: If something likes the bald eagle then the bald eagle needs the lion.\nRed($x, True) && Big($x, True) >>> Visits($x, Lion, True) ::: If something is red and big then it visits the lion.\nVisits($x, Dog) && Kind($x, True) >>> Likes($x, Tiger, True) ::: If something visits the dog and it is kind then it likes the tiger.\nBig($x, True) >>> Likes($x, Tiger, True) ::: If something likes the tiger then it is big.\nNeeds($x, Lion) && Visits($x, Tiger) >>> Tiger($x, Red, True) ::: If something needs the lion and it visits the tiger then the tiger is red.\nVisits($x, Lion) >>> Visits($x, Dog, True) ::: If something visits the lion then it visits the dog.\nLikes($x, BaldEagle) >>> Cold($x, True) ::: If something likes the bald eagle then it is cold.\nQuery:\nVisits(BaldEagle, BaldEagle, True) ::: The bald eagle does not visit the bald eagle.\n------\nProblem:\nThe cat"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-1206_Q11",
    "context": "Anne is not blue. Dave is not kind. Dave is quiet. Erin is round. Fiona is cold. Fiona is quiet. Fiona is rough. If something is cold then it is kind. All young things are kind. All young, blue things are round. If something is kind then it is blue. Kind things are blue. All round things are cold. If Erin is blue then Erin is quiet. If something is young and not blue then it is not rough. Quiet things are rough.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Erin is rough.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue($x, bool) ::: Is x blue?\nKind($x, bool) ::: Is x kind?\nQuiet($x, bool) ::: Is x quiet?\nRound($x, bool) ::: Is x round?\nCold($x, bool) ::: Is x cold?\nFacts:\nNotBlue(Anne, True) ::: Anne is not blue.\nNotKind(Dave, True) ::: Dave is not kind.\nQuiet(Dave, True) ::: Dave is quiet.\nRound(Erin, True) ::: Erin is round.\nCold(Fiona, True) ::: Fiona is cold.\nQuiet(Fiona, True) ::: Fiona is quiet.\nRough(Fiona, True) ::: Fiona is rough.\nRules:\nCold($x, True) >>> Kind($x, True) ::: If something is cold then it is kind.\nYoung($x, True) >>> Kind($x, True) ::: All young things are kind.\nYoung($x, True) && NotBlue($x, True) >>> Round($x, True) ::: All young, blue things are round.\nKind($x, True) >>> Blue($x, True) ::: If something is kind then it is blue.\nKind($x, True) >>> Blue($x, True) ::: Kind things are blue.\nRound($x, True) >>> Cold($x, True) ::: All round things are cold.\nNotBlue(Erin, True) >>> Quiet(Erin, True) ::: If Erin is blue then Erin is quiet.\nNotBlue(Erin, True) && Young($x, True) >>> NotRough($x, True) ::: If something is young and not blue then it is not rough.\nQuiet($x, True) >>> Rough($x, True) ::: Quiet things are rough.\nQuery:\nRough(Erin, True) ::: Erin is rough.\n------\nProblem:\nAnne is not blue. Dave is not kind. Dave is quiet. Erin is round. Fiona is cold. Fiona is quiet. Fiona is rough. If something is cold then it is kind. All young things are kind. All young, blue things are round. If something is kind then it is blue. Kind things are blue. All round things are cold. If Erin is blue then Erin is quiet. If something is young and not blue then it is not rough. Quiet things are rough.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Erin is rough.\n###\nPredicates:\nBlue($x, bool) ::: Is x blue?\nKind($x, bool) ::: Is x kind?\nQuiet($x, bool) ::: Is x quiet?\nRound($x, bool) ::: Is x round?\nCold($x, bool) ::: Is x cold?\nFacts:\nNotBlue(Anne, True) ::: Anne is not blue.\nNotKind(Dave, True) ::: Dave is not kind.\nQuiet(Dave, True) ::: Dave is quiet.\nRound(Erin, True) ::: Erin is round.\nCold(Fiona, True) ::: Fiona is cold.\nQuiet(Fiona, True) ::: Fiona is quiet.\nRough(Fiona, True) ::: Fiona is rough"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-577_Q13",
    "context": "Bob is smart. Bob is young. Charlie is cold. Charlie is round. Charlie is white. Charlie is young. Gary is smart. Gary is white. Harry is rough. Harry is smart. Harry is white. All red people are round. Round, smart people are cold. If someone is cold and young then they are white. Red people are round. All round, young people are red. If someone is smart then they are rough. Rough, young people are red. If Bob is round then Bob is smart. If Charlie is white and Charlie is rough then Charlie is young.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Harry is not round.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nSmart($x, bool) ::: Is x smart?\nYoung($x, bool) ::: Is x young?\nCold($x, bool) ::: Is x cold?\nRound($x, bool) ::: Is x round?\nWhite($x, bool) ::: Is x white?\nRough($x, bool) ::: Is x rough?\nFacts:\nSmart(Bob, True) ::: Bob is smart.\nYoung(Bob, True) ::: Bob is young.\nCold(Charlie, True) ::: Charlie is cold.\nRound(Charlie, True) ::: Charlie is round.\nWhite(Charlie, True) ::: Charlie is white.\nYoung(Charlie, True) ::: Charlie is young.\nSmart(Gary, True) ::: Gary is smart.\nWhite(Gary, True) ::: Gary is white.\nRough(Harry, True) ::: Harry is rough.\nSmart(Harry, True) ::: Harry is smart.\nWhite(Harry, True) ::: Harry is white.\nRules:\nRed($x, True) >>> Round($x, True) ::: Red people are round.\nRound($x, True) >>> Smart($x, True) ::: Round, smart people are cold.\nCold($x, True) && Young($x, True) >>> White($x, True) ::: If someone is cold and young then they are white.\nRed($x, True) >>> White($x, True) ::: Red people are round.\nYoung($x, True) && Round($x, True) >>> Red($x, True) ::: All round, young people are red.\nSmart($x, True) >>> Rough($x, True) ::: If someone is smart then they are rough.\nRough($x, True) && Young($x, True) >>> Red($x, True) ::: Rough, young people are red.\nYoung($x, True) && Smart($x, True) >>> Bob($x, True) ::: If Bob is round then Bob is smart.\nWhite($x, True) && Rough($x, True) && Young($x, True) >>> Charlie($x, True) ::: If Charlie is white and Charlie is rough then Charlie is young.\n------"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-887_Q2",
    "context": "The dog is big. The dog is young. The lion eats the squirrel. The lion is blue. The lion is young. The lion likes the mouse. The mouse chases the squirrel. The mouse eats the dog. The mouse eats the lion. The mouse is blue. The mouse is nice. The mouse likes the dog. The squirrel chases the dog. The squirrel is blue. If someone likes the dog and the dog chases the mouse then the mouse chases the dog. If someone is young and nice then they like the squirrel. If someone chases the dog then the dog eats the mouse. If someone eats the mouse then the mouse is young. If someone likes the squirrel and they like the dog then the dog chases the mouse. If someone chases the lion and the lion is rough then they are nice. If someone likes the mouse and they chase the mouse then the mouse eats the squirrel.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The squirrel is not blue.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nYoung($x, bool) ::: Is x young?\nEats($x, $y, bool) ::: Does x eat y?\nLikes($x, $y, bool) ::: Does x like y?\nChases($x, $y, bool) ::: Does x chase y?\nBlue($x, bool) ::: Is x blue?\nNice($x, bool) ::: Is x nice?\nFacts:\nBig(Dog, True) ::: The dog is big.\nYoung(Dog, True) ::: The dog is young.\nEats(Lion, Squirrel, True) ::: The lion eats the squirrel.\nBlue(Lion, True) ::: The lion is blue.\nYoung(Lion, True) ::: The lion is young.\nLikes(Lion, Mouse, True) ::: The lion likes the mouse.\nChases(Mouse, Squirrel, True) ::: The mouse chases the squirrel.\nEats(Mouse, Dog, True) ::: The mouse eats the dog.\nEats(Mouse, Lion, True) ::: The mouse eats the lion.\nBlue(Mouse, True) ::: The mouse is blue.\nNice(Mouse, True) ::: The mouse is nice.\nLikes(Mouse, Dog, True) ::: The mouse likes the dog.\nChases(Squirrel, Dog, True) ::: The squirrel chases the dog.\nBlue(Squirrel, True) ::: The squirrel is blue.\nRules:\nYoung($x, True) >>> Nice($x, True) ::: If someone is young and nice then they like the squirrel.\nEats($x, $y, True) >>> Young($y, True) ::: If someone eats the mouse then the mouse is young.\nLikes($x, $y, True) && Likes($x, $z, True) >>> Eats($z, $y, True) ::: If someone likes the squirrel and they like the dog then the dog chases the mouse.\nChases($x, $y, True) >>> Eats($y, $z, True) ::: If someone chases the dog then the dog eats the mouse"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-376_Q6",
    "context": "The bald eagle is young. The bald eagle does not need the mouse. The bald eagle does not need the tiger. The bald eagle sees the dog. The bald eagle sees the mouse. The dog needs the bald eagle. The mouse is big. The tiger is cold. The tiger needs the mouse. The tiger sees the dog. The tiger visits the bald eagle. If something is kind then it sees the bald eagle. If something visits the bald eagle then the bald eagle is young. If something sees the dog then the dog is kind. If something sees the bald eagle and it is young then it is not cold. If something visits the tiger then the tiger is rough. If something is big then it is kind. If something is big and it sees the bald eagle then the bald eagle is big. If something needs the bald eagle and it needs the dog then it sees the tiger. If something visits the dog and it is not kind then the dog does not see the tiger.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The mouse does not see the bald eagle.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nYoung($x, bool) ::: Is x young?\nNeeds($x, $y, bool) ::: Does x need y?\nSees($x, $y, bool) ::: Does x see y?\nVisits($x, $y, bool) ::: Does x visit y?\nKind($x, bool) ::: Is x kind?\nCold($x, bool) ::: Is x cold?\nRough($x, bool) ::: Is x rough?\nBig($x, bool) ::: Is x big?\nFacts:\nYoung(BaldEagle, True) ::: The bald eagle is young.\nNeeds(BaldEagle, Mouse, False) ::: The bald eagle does not need the mouse.\nNeeds(BaldEagle, Tiger, False) ::: The bald eagle does not need the tiger.\nSees(BaldEagle, Dog, True) ::: The bald eagle sees the dog.\nSees(BaldEagle, Mouse, True) ::: The bald eagle sees the mouse.\nNeeds(Dog, BaldEagle, True) ::: The dog needs the bald eagle.\nBig(Mouse, True) ::: The mouse is big.\nCold(Tiger, True) ::: The tiger is cold.\nNeeds(Tiger, Mouse, True) ::: The tiger needs the mouse.\nSees(Tiger, Dog, True) ::: The tiger sees the dog.\nVisits(Tiger, BaldEagle, True) ::: The tiger visits the bald eagle.\nKind(BaldEagle, True) ::: If something is kind then it sees the bald eagle.\nYoung(BaldEagle, True) >>> Visits(BaldEagle, Tiger, True) ::: If something visits the bald eagle then the bald eagle is young.\nSees(Dog, BaldEagle, True) >>> Kind(Dog, True) ::: If something sees the dog then the dog is kind.\nYoung(BaldEagle, True) && Sees(BaldEagle, Tiger) >>> Not(Cold(Tiger, True)) ::: If something sees the dog and it is young then it is not cold.\nVisits(Tiger, Dog) >>> R"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1224_Q8",
    "context": "Dave is green. Dave is quiet. Dave is young. Erin is blue. Erin is white. Gary is quiet. Harry is blue. If something is cold and green then it is kind. All quiet things are green. If something is cold then it is kind. If something is quiet and kind then it is white. If something is cold then it is quiet. If Dave is cold then Dave is kind. All green things are cold. All cold, white things are young.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is not kind.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen($x, bool) ::: Is x green?\nQuiet($x, bool) ::: Is x quiet?\nWhite($x, bool) ::: Is x white?\nKind($x, bool) ::: Is x kind?\nCold($x, bool) ::: Is x cold?\nYoung($x, bool) ::: Is x young?\nFacts:\nGreen(Dave, True) ::: Dave is green.\nQuiet(Dave, True) ::: Dave is quiet.\nYoung(Dave, True) ::: Dave is young.\nBlue(Erin, True) ::: Erin is blue.\nWhite(Erin, True) ::: Erin is white.\nQuiet(Gary, True) ::: Gary is quiet.\nBlue(Harry, True) ::: Harry is blue.\nRules:\nGreen($x, True) >>> Cold($x, True) ::: All green things are cold.\nCold($x, True) >>> Kind($x, True) ::: If something is cold and green then it is kind.\nQuiet($x, True) >>> Green($x, True) ::: All quiet things are green.\nCold($x, True) >>> Kind($x, True) ::: If something is cold then it is kind.\nQuiet($x, True) && Kind($x, True) >>> White($x, True) ::: If something is quiet and kind then it is white.\nCold($x, True) >>> Quiet($x, True) ::: If something is cold then it is quiet.\nDave(Cold, True) >>> Dave(Kind, True) ::: If Dave is cold then Dave is kind.\nGreen($x, True) >>> Cold($x, True) ::: All green things are cold.\nCold($x, True) && White($x, True) >>> Young($x, True) ::: All cold, white things are young.\nQuery:\nNot(Kind(Gary, True)) ::: Gary is not kind.\n------\nProblem:\nDave is green. Dave is quiet. Dave is young. Erin is blue. Erin is white. Gary is quiet. Harry is blue. If something is cold and green then it is kind. All quiet things are green. If something is cold then it is kind. If something is quiet and kind then"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-446_Q2",
    "context": "Anne is red. Anne is white. Charlie is big. Charlie is red. Charlie is white. Dave is furry. Gary is big. Gary is furry. Gary is green. Gary is young. All big, rough people are green. Green people are white. All big people are young. White people are young. All furry people are big. If someone is red and green then they are young. All young people are rough.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Charlie is not red.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRed($x, bool) ::: Is x red?\nWhite($x, bool) ::: Is x white?\nBig($x, bool) ::: Is x big?\nRough($x, bool) ::: Is x rough?\nFurry($x, bool) ::: Is x furry?\nGreen($x, bool) ::: Is x green?\nYoung($x, bool) ::: Is x young?\nFacts:\nRed(Anne, True) ::: Anne is red.\nWhite(Anne, True) ::: Anne is white.\nBig(Charlie, True) ::: Charlie is big.\nRed(Charlie, True) ::: Charlie is red.\nWhite(Charlie, True) ::: Charlie is white.\nFurry(Dave, True) ::: Dave is furry.\nBig(Gary, True) ::: Gary is big.\nFurry(Gary, True) ::: Gary is furry.\nGreen(Gary, True) ::: Gary is green.\nYoung(Gary, True) ::: Gary is young.\nRules:\nBig($x, True) >>> Rough($x, True) ::: All big, rough people are green.\nGreen($x, True) >>> White($x, True) ::: Green people are white.\nBig($x, True) >>> Young($x, True) ::: All big people are young.\nWhite($x, True) >>> Young($x, True) ::: White people are young.\nFurry($x, True) >>> Big($x, True) ::: All furry people are big.\nRed($x, True) && Green($x, True) >>> Young($x, True) ::: If someone is red and green then they are young.\nYoung($x, True) >>> Rough($x, True) ::: All young people are rough.\nQuery:\nNot(Red(Charlie, True)) ::: Charlie is not red.\n------\nProblem:\nAnne is furry. Anne is green. Anne is red. Anne is white. Anne is young. Anne is quiet. Anne is rough. Anne is big. Anne is furry. Anne is green. Anne is red. Anne is white. Anne is young. Anne is quiet. Anne is rough. Anne is big. Anne is furry"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1377_Q8",
    "context": "Anne is round. Anne is white. Fiona is cold. Fiona is round. Fiona is smart. Gary is smart. Gary is white. Harry is big. Harry is cold. Harry is round. If something is cold then it is young. If something is round then it is green. If something is smart then it is big. If something is cold and green then it is white. Big things are white. Green things are cold. Smart things are big. All big, white things are round.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is not green.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRound($x, bool) ::: Is x round?\nWhite($x, bool) ::: Is x white?\nCold($x, bool) ::: Is x cold?\nSmart($x, bool) ::: Is x smart?\nBig($x, bool) ::: Is x big?\nGreen($x, bool) ::: Is x green?\nFacts:\nRound(Anne, True) ::: Anne is round.\nWhite(Anne, True) ::: Anne is white.\nRound(Fiona, True) ::: Fiona is round.\nSmart(Fiona, True) ::: Fiona is smart.\nWhite(Fiona, True) ::: Fiona is white.\nBig(Gary, True) ::: Gary is big.\nSmart(Gary, True) ::: Gary is smart.\nWhite(Gary, True) ::: Gary is white.\nRound(Harry, True) ::: Harry is round.\nCold(Harry, True) ::: Harry is cold.\nBig(Harry, True) ::: Harry is big.\nCold(Harry, True) ::: Harry is cold.\nRules:\nCold($x, True) >>> Young($x, True) ::: If something is cold then it is young.\nRound($x, True) >>> Green($x, True) ::: If something is round then it is green.\nSmart($x, True) >>> Big($x, True) ::: If something is smart then it is big.\nCold($x, True) && Green($x, True) >>> White($x, True) ::: If something is cold and green then it is white.\nBig($x, True) >>> White($x, True) ::: Big things are white.\nGreen($x, True) >>> Cold($x, True) ::: Green things are cold.\nSmart($x, True) >>> Big($x, True) ::: Smart things are big.\nAll($x, True) >>> Round($x, True) ::: All big, white things are round.\nQuery:\nNot(Green(Gary, True)) ::: Gary is not green.\n------\nProblem:\nAnne is furry. Anne is green. Anne is quiet. Anne is white. Erin is furry. Erin is green. Erin is quiet. Er"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-79_Q14",
    "context": "The bald eagle sees the cat. The bald eagle sees the squirrel. The cat is blue. The cat is cold. The cat is green. The cat sees the bald eagle. The cat sees the squirrel. The mouse chases the bald eagle. The mouse chases the cat. The mouse is cold. The mouse sees the cat. The squirrel likes the mouse. The squirrel sees the bald eagle. The squirrel sees the mouse. If something chases the bald eagle then the bald eagle is green. If something is green and it likes the bald eagle then the bald eagle is round. If something chases the cat and the cat is cold then it likes the bald eagle. If something sees the mouse and the mouse sees the cat then the cat sees the bald eagle. If something sees the bald eagle then it is cold. If the bald eagle likes the mouse then the bald eagle chases the cat. If something is green then it likes the mouse.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bald eagle is cold.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nSees($x, $y, bool) ::: Does x see y?\nChases($x, $y, bool) ::: Does x chase y?\nLikes($x, $y, bool) ::: Does x like y?\nIs($x, $y, bool) ::: Is x y?\nRound($x, bool) ::: Is x round?\nCold($x, bool) ::: Is x cold?\nBlue($x, bool) ::: Is x blue?\nGreen($x, bool) ::: Is x green?\nFacts:\nSees(BaldEagle, Cat, True) ::: The bald eagle sees the cat.\nSees(BaldEagle, Squirrel, True) ::: The bald eagle sees the squirrel.\nIs(Cat, Blue, True) ::: The cat is blue.\nIs(Cat, Cold, True) ::: The cat is cold.\nIs(Cat, Green, True) ::: The cat is green.\nSees(Cat, BaldEagle, True) ::: The cat sees the bald eagle.\nSees(Cat, Squirrel, True) ::: The cat sees the squirrel.\nChases(Mouse, BaldEagle, True) ::: The mouse chases the bald eagle.\nChases(Mouse, Cat, True) ::: The mouse chases the cat.\nIs(Mouse, Cold, True) ::: The mouse is cold.\nSees(Mouse, Cat, True) ::: The mouse sees the cat.\nLikes(Squirrel, Mouse, True) ::: The squirrel likes the mouse.\nSees(Squirrel, BaldEagle, True) ::: The squirrel sees the bald eagle.\nSees(Squirrel, Mouse, True) ::: The squirrel sees the mouse.\nRules:\nChases($x, $y, True) >>> Is($x, Green, True) ::: If something chases the bald eagle then the bald eagle is green.\nIs($x, Green, True) && Likes($x, BaldEagle, True) >>> Is($x, Round, True) ::: If something chases the cat and the cat is cold then it likes the bald eagle.\nSees($x, $y, True) && Sees($y,"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-271_Q16",
    "context": "The bear is cold. The dog does not like the bear. The dog likes the squirrel. The mouse is blue. The mouse is rough. The mouse likes the dog. The mouse does not need the bear. The squirrel is cold. The squirrel likes the dog. The squirrel likes the mouse. If someone likes the bear and they like the dog then they like the squirrel. If someone is blue then they chase the bear. If someone needs the squirrel and the squirrel is cold then they chase the bear. If the dog does not need the bear then the dog does not chase the squirrel. If someone likes the mouse and the mouse needs the dog then they chase the dog. If someone chases the dog then the dog needs the squirrel. If someone chases the bear and they do not need the bear then they need the dog. If someone likes the mouse and they are cold then they need the squirrel.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The mouse likes the squirrel.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nLike($x, $y, bool) ::: Does x like y?\nNeed($x, $y, bool) ::: Does x need y?\nChase($x, $y, bool) ::: Does x chase y?\nBlue($x, bool) ::: Is x blue?\nRough($x, bool) ::: Is x rough?\nFacts:\nCold(Bear, True) ::: The bear is cold.\nLike(Dog, Bear, False) ::: The dog does not like the bear.\nLike(Dog, Squirrel, True) ::: The dog likes the squirrel.\nBlue(Mouse, True) ::: The mouse is blue.\nRough(Mouse, True) ::: The mouse is rough.\nLike(Mouse, Dog, True) ::: The mouse likes the dog.\nNeed(Mouse, Bear, False) ::: The mouse does not need the bear.\nCold(Squirrel, True) ::: The squirrel is cold.\nLike(Squirrel, Dog, True) ::: The squirrel likes the dog.\nLike(Squirrel, Mouse, True) ::: The squirrel likes the mouse.\nRules:\nLike(Bear, Dog, True) >>> Like(Bear, Squirrel, True) ::: If someone likes the bear and they like the dog then they like the squirrel.\nBlue($x, True) >>> Chase($x, Bear, True) ::: If someone is blue then they chase the bear.\nNeed($x, Squirrel, True) && Cold($x, True) >>> Chase($x, Bear, True) ::: If someone needs the squirrel and the squirrel is cold then they chase the bear.\nLike(Dog, Mouse) >>> Dog(Dog, False) ::: If the dog does not need the bear then the dog does not chase the squirrel.\nLike(Mouse, Dog) >>> Need(Mouse, Squirrel, True) ::: If someone likes the mouse and the mouse needs the dog then they chase the dog.\nNeed(Mouse, Squirrel) >>> Like(Mouse, Dog) ::: If someone chases the dog then the dog needs the squirrel.\nLike(Mouse, Bear) && Cold($x, True)"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-347_Q11",
    "context": "The bald eagle chases the rabbit. The bald eagle eats the rabbit. The bald eagle is nice. The mouse eats the bald eagle. The rabbit likes the mouse. The squirrel eats the bald eagle. The squirrel eats the mouse. If something likes the squirrel then the squirrel chases the mouse. If something is young then it eats the bald eagle. If something chases the squirrel then the squirrel eats the rabbit. If something likes the mouse then it chases the bald eagle. If something likes the rabbit then the rabbit is young. If something chases the rabbit and the rabbit chases the bald eagle then it likes the rabbit. If something eats the bald eagle then it chases the rabbit. If something likes the mouse then it chases the mouse.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The rabbit chases the rabbit.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nEats($x, $y, bool) ::: Does x eat y?\nLikes($x, $y, bool) ::: Does x like y?\nYoung($x, bool) ::: Is x young?\nFacts:\nChases(BaldEagle, Rabbit, True) ::: The bald eagle chases the rabbit.\nEats(BaldEagle, Rabbit, True) ::: The bald eagle eats the rabbit.\nNice(BaldEagle, True) ::: The bald eagle is nice.\nEats(Mouse, BaldEagle, True) ::: The mouse eats the bald eagle.\nLikes(Mouse, Rabbit, True) ::: The rabbit likes the mouse.\nEats(Squirrel, BaldEagle, True) ::: The squirrel eats the bald eagle.\nEats(Squirrel, Mouse, True) ::: The squirrel eats the mouse.\nChases(Squirrel, Mouse, True) ::: If something likes the squirrel then the squirrel chases the mouse.\nYoung(Mouse, True) ::: If something is young then it eats the bald eagle.\nChases(Squirrel, Rabbit, True) ::: If something chases the squirrel then the squirrel eats the rabbit.\nLikes(Mouse, BaldEagle, True) ::: If something likes the mouse then it chases the bald eagle.\nLikes(Rabbit, Mouse, True) ::: If something likes the rabbit then the rabbit is young.\nChases(Rabbit, BaldEagle, True) && Chases(BaldEagle, Rabbit, True) ::: If something chases the rabbit and the rabbit chases the bald eagle then it likes the rabbit.\nEats(Mouse, BaldEagle, True) ::: If something eats the bald eagle then it chases the rabbit.\nLikes(Mouse, Rabbit, True) ::: If something likes the mouse then it chases the mouse.\nQuery:\nChases(Rabbit, Rabbit, True) ::: The rabbit chases the rabbit.\n------\nProblem:\nThe"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-26_Q11",
    "context": "The bald eagle chases the squirrel. The bald eagle is kind. The bald eagle is red. The bald eagle sees the rabbit. The bald eagle sees the tiger. The rabbit chases the bald eagle. The rabbit visits the squirrel. The squirrel is green. The squirrel is kind. The squirrel is red. The squirrel sees the bald eagle. The squirrel sees the rabbit. The squirrel visits the rabbit. The tiger sees the squirrel. The tiger visits the rabbit. The tiger visits the squirrel. If someone sees the rabbit then the rabbit sees the tiger. If someone visits the tiger and the tiger visits the rabbit then the tiger is kind. If someone chases the bald eagle then they chase the squirrel. If someone is kind then they chase the bald eagle. If someone is green and they visit the rabbit then the rabbit chases the tiger. If someone chases the squirrel then they see the tiger. If someone chases the bald eagle and they are green then they see the tiger. If someone is kind then they visit the tiger.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The tiger sees the tiger.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y) ::: Does x chase y?\nKind($x, bool) ::: Is x kind?\nRed($x, bool) ::: Is x red?\nSees($x, $y) ::: Does x see y?\nVisits($x, $y) ::: Does x visit y?\nFacts:\nChases(BaldEagle, Squirrel) ::: The bald eagle chases the squirrel.\nKind(BaldEagle, True) ::: The bald eagle is kind.\nRed(BaldEagle, True) ::: The bald eagle is red.\nSees(BaldEagle, Rabbit) ::: The bald eagle sees the rabbit.\nSees(BaldEagle, Tiger) ::: The bald eagle sees the tiger.\nChases(Rabbit, BaldEagle) ::: The rabbit chases the bald eagle.\nVisits(Rabbit, Squirrel) ::: The rabbit visits the squirrel.\nGreen(Squirrel, True) ::: The squirrel is green.\nKind(Squirrel, True) ::: The squirrel is kind.\nRed(Squirrel, True) ::: The squirrel is red.\nSees(Squirrel, BaldEagle) ::: The squirrel sees the bald eagle.\nSees(Squirrel, Rabbit) ::: The squirrel sees the rabbit.\nVisits(Squirrel, Rabbit) ::: The squirrel visits the rabbit.\nSees(Tiger, Squirrel) ::: The tiger sees the squirrel.\nVisits(Tiger, Rabbit) ::: The tiger visits the rabbit.\nVisits(Tiger, Squirrel) ::: The tiger visits the squirrel.\nRules:\nSees($x, $y) >>> Sees($y, $x) ::: If someone sees the rabbit then the rabbit sees the tiger.\nVisits($x, $y) && Visits($y, $z) >>> Kind($x, True) ::: If someone visits the tiger and the tiger visits the rabbit then the tiger is kind.\nChases($x, $y) >>> Chases($y, $z"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-374_Q16",
    "context": "The cow chases the squirrel. The lion chases the squirrel. The lion eats the squirrel. The lion does not eat the tiger. The lion does not need the squirrel. The squirrel chases the lion. The squirrel eats the lion. The tiger chases the squirrel. The tiger eats the lion. The tiger eats the squirrel. The tiger is cold. The tiger needs the squirrel. If something is green and rough then it chases the tiger. If something chases the squirrel then it is cold. If something eats the cow and it is green then it is not round. If something is cold and it eats the cow then the cow is green. If something is green then it eats the cow. If the tiger is cold then the tiger is green. If something eats the squirrel then the squirrel is green. If the cow needs the squirrel and the cow is not green then the squirrel does not need the tiger.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The squirrel is cold.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nEats($x, $y, bool) ::: Does x eat y?\nNeeds($x, $y, bool) ::: Does x need y?\nIs($x, $y, bool) ::: Is x y?\nGreen($x, bool) ::: Is x green?\nRound($x, bool) ::: Is x round?\nCold($x, bool) ::: Is x cold?\nFacts:\nChases(Cow, Squirrel, True) ::: The cow chases the squirrel.\nChases(Lion, Squirrel, True) ::: The lion chases the squirrel.\nEats(Lion, Squirrel, True) ::: The lion eats the squirrel.\nEats(Lion, Tiger, False) ::: The lion does not eat the tiger.\nEats(Lion, Squirrel, False) ::: The lion does not need the squirrel.\nChases(Squirrel, Lion, True) ::: The squirrel chases the lion.\nEats(Squirrel, Lion, True) ::: The squirrel eats the lion.\nChases(Tiger, Squirrel, True) ::: The tiger chases the squirrel.\nEats(Tiger, Lion, True) ::: The tiger eats the lion.\nEats(Tiger, Squirrel, True) ::: The tiger eats the squirrel.\nCold(Tiger, True) ::: The tiger is cold.\nNeeds(Tiger, Squirrel, True) ::: The tiger needs the squirrel.\nIf($x, $y, $z, bool) ::: If $x then $y.\nGreen($x, True) && Rough($x, True) >>> Chases($x, Tiger, True) ::: If something is green and rough then it chases the tiger.\nChases($x, Squirrel, True) >>> Cold($x, True) ::: If something chases the squirrel then it is cold.\nEats($x, Cow, True) && Green($x, True) >>> Not($x, Round, True) ::: If something eats the cow and it is green then it is not round.\nEats($x, Cow, True) && Cold($x, True) >>> Green($x, True) ::: If something eats the cow and it is cold then the cow is green.\nGreen($x, True) >>> Eats($x, Cow, True) ::: If something is green then it eats the cow.\nCold($x, True) && Eats($x, Cow, True) >>> Green($x, True) ::: If the tiger is cold then the tiger is green.\nEats($x, Squirrel, True) >>> Green($x, True) ::: If the squirrel eats the squirrel then the squirrel is green.\nIf(Needs(Cow, Squirrel, True) && Not(Green(Cow, True), True), Squirrel, Not(Needs(Squirrel, Tiger, True), True)) ::: If the cow needs the squirrel and the cow is not green then the squirrel does not need the tiger.\n------"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-955_Q7",
    "context": "The bald eagle eats the rabbit. The bald eagle is nice. The bald eagle sees the cow. The cow is blue. The cow is young. The cow sees the mouse. The mouse chases the rabbit. The mouse eats the cow. The mouse is blue. The mouse is red. The mouse sees the bald eagle. The mouse sees the cow. The mouse sees the rabbit. The rabbit chases the mouse. The rabbit sees the cow. The rabbit sees the mouse. If something eats the bald eagle then the bald eagle chases the cow. If something eats the mouse then it chases the mouse. If the cow chases the bald eagle and the bald eagle sees the cow then the bald eagle chases the rabbit. If something is kind then it eats the mouse. If something chases the cow then the cow is kind. If the cow eats the bald eagle then the bald eagle is nice. If something sees the mouse then it sees the bald eagle. If something is young then it eats the bald eagle. If something is kind then it sees the cow.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cow is kind.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y) ::: Does x eat y?\nNice($x, bool) ::: Is x nice?\nSees($x, $y) ::: Does x see y?\nChases($x, $y) ::: Does x chase y?\nKind($x, bool) ::: Is x kind?\nYoung($x, bool) ::: Is x young?\nFacts:\nEats(BaldEagle, Rabbit) ::: The bald eagle eats the rabbit.\nNice(BaldEagle, True) ::: The bald eagle is nice.\nSees(BaldEagle, Cow) ::: The bald eagle sees the cow.\nBlue(Cow, True) ::: The cow is blue.\nYoung(Cow, True) ::: The cow is young.\nSees(Cow, Mouse) ::: The cow sees the mouse.\nChases(Mouse, Rabbit) ::: The mouse chases the rabbit.\nEats(Mouse, Cow) ::: The mouse eats the cow.\nBlue(Mouse, True) ::: The mouse is blue.\nRed(Mouse, True) ::: The mouse is red.\nSees(Mouse, BaldEagle) ::: The mouse sees the bald eagle.\nSees(Mouse, Cow) ::: The mouse sees the cow.\nSees(Mouse, Rabbit) ::: The mouse sees the rabbit.\nChases(Rabbit, Mouse) ::: The rabbit chases the mouse.\nSees(Rabbit, Cow) ::: The rabbit sees the cow.\nSees(Rabbit, Mouse) ::: The rabbit sees the mouse.\nRules:\nEats($x, $y) >>> Chases($x, $y) ::: If something eats the bald eagle then the bald eagle chases the cow.\nEats($x, $y) >>> Chases($y, $x) ::: If something eats the mouse then it chases the mouse.\nChases($x, $y) && Sees($y, $x) >>> Chases($x, $z) ::: If the cow chases the bald eagle and the bald eagle sees the cow then the bald eagle chases the rabbit.\nKind($x, True) >>> Eats($x, Mouse) ::: If something is kind then it eats the mouse.\nChases($x, $y) >>> Kind($y, True) ::: If something chases the cow then the cow is kind.\nEats($x, BaldEagle) >>> Nice($x, True) ::: If the cow eats the bald eagle then the bald eagle is nice.\nSees($x, Mouse) >>> Sees($x, BaldEagle) ::: If something sees the mouse then it sees the bald eagle.\nYoung($x, True) >>> Eats($x, BaldEagle) ::: If something is young then it eats the bald eagle.\nKind($x, True) >>> Sees($x, Cow) ::: If something is kind then it sees the cow.\nQuery:\nKind(Cow, True) ::: The cow is kind.\n------\nProblem:\nThe cat is furry. The cat is green. The cat is red. The cat is rough. The cat is white. The cat is young. The dog is furry. The"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-1137_Q17",
    "context": "Anne is cold. Anne is not kind. Anne is not nice. Anne is red. Anne is young. Fiona is not cold. Fiona is kind. Fiona is young. Gary is red. Harry is kind. Harry is nice. Harry is red. All big things are nice. If something is cold and not red then it is nice. All cold, big things are not white. All nice things are big. If Gary is red and Gary is young then Gary is big. All kind, white things are not young. All red things are young. Big, white things are young. If something is nice then it is cold.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Fiona is not red.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nKind($x, bool) ::: Is x kind?\nNice($x, bool) ::: Is x nice?\nRed($x, bool) ::: Is x red?\nYoung($x, bool) ::: Is x young?\nBig($x, bool) ::: Is x big?\nWhite($x, bool) ::: Is x white?\nFacts:\nCold(Anne, True) ::: Anne is cold.\nNot(Kind(Anne, True)) ::: Anne is not kind.\nNot(Nice(Anne, True)) ::: Anne is not nice.\nRed(Anne, True) ::: Anne is red.\nYoung(Anne, True) ::: Anne is young.\nNot(Cold(Fiona, True)) ::: Fiona is not cold.\nKind(Fiona, True) ::: Fiona is kind.\nYoung(Fiona, True) ::: Fiona is young.\nRed(Gary, True) ::: Gary is red.\nKind(Harry, True) ::: Harry is kind.\nNice(Harry, True) ::: Harry is nice.\nRed(Harry, True) ::: Harry is red.\nBig($x, True) >>> Nice($x, True) ::: All big things are nice.\nCold($x, True) && Not(Red($x, True)) >>> Nice($x, True) ::: If something is cold and not red then it is nice.\nCold($x, True) && Big($x, True) >>> Not(White($x, True)) ::: All cold, big things are not white.\nNice($x, True) >>> Big($x, True) ::: All nice things are big.\nIf(Gary(Red, True) && Gary(Young, True)) >>> Gary(Big, True) ::: If Gary is red and Gary is young then Gary is big.\nKind($x, True) && White($x, True) >>> Not(Young($x, True)) ::: All kind, white things are not young.\nRed($x, True) >>> Young($x, True) ::: All red things are young.\nBig($x, True) && White($x, True) >>> Young($x, True) ::: Big, white things are young.\nNice($x, True) >>> Cold($x, True) ::: If something is nice then it is cold.\nQuery:\nNot(Red(Fiona, True)) ::: Fiona is not red.\n------\nProblem:\nAnne is cold. Anne is not kind. Anne is not nice. Anne is red. Anne is young. Fiona is not cold. Fiona is kind. Fiona is young. Gary is red. Harry is kind. Harry is nice. Harry is red. All big things are nice. If something is cold and not red then it is nice. All cold, big things are not white. All nice things are big. If Gary is red and Gary is young then Gary is big. All kind, white things are not young. All red things are young. Big, white things are young. If something is nice then it is cold.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Fiona is not red.\n###\nPredicates:\nCold($x, bool) ::: Is x cold?"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-693_Q6",
    "context": "The cat chases the dog. The cat sees the mouse. The dog chases the mouse. The dog is green. The dog needs the tiger. The dog sees the mouse. The mouse is big. The tiger is big. The tiger is kind. The tiger needs the cat. The tiger needs the mouse. The tiger sees the dog. If someone chases the cat then they are rough. If someone sees the tiger and the tiger chases the dog then the tiger sees the dog. All green people are kind. If someone is big then they need the tiger. If someone is kind then they need the cat. If someone chases the mouse and they need the mouse then they chase the cat. If the dog needs the cat and the dog needs the tiger then the cat is green. If someone sees the dog then the dog sees the mouse. All kind people are cold.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The dog does not need the cat.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nSees($x, $y, bool) ::: Does x see y?\nNeeds($x, $y, bool) ::: Does x need y?\nIs($x, $y, bool) ::: Is x y?\nRough($x, bool) ::: Is x rough?\nBig($x, bool) ::: Is x big?\nKind($x, bool) ::: Is x kind?\nCold($x, bool) ::: Is x cold?\nFacts:\nChases(Cat, Dog, True) ::: The cat chases the dog.\nSees(Cat, Mouse, True) ::: The cat sees the mouse.\nChases(Dog, Mouse, True) ::: The dog chases the mouse.\nIs(Dog, Green, True) ::: The dog is green.\nNeeds(Dog, Tiger, True) ::: The dog needs the tiger.\nSees(Dog, Mouse, True) ::: The dog sees the mouse.\nIs(Mouse, Big, True) ::: The mouse is big.\nIs(Tiger, Big, True) ::: The tiger is big.\nIs(Tiger, Kind, True) ::: The tiger is kind.\nNeeds(Tiger, Cat, True) ::: The tiger needs the cat.\nNeeds(Tiger, Mouse, True) ::: The tiger needs the mouse.\nSees(Tiger, Dog, True) ::: The tiger sees the dog.\nRules:\nChases($x, $y, True) >>> Rough($x, True) ::: If someone chases the cat then they are rough.\nSees($x, Tiger, True) && Sees(Tiger, $y, True) >>> Sees($x, $y, True) ::: If someone sees the tiger and the tiger chases the dog then the tiger sees the dog.\nIs($x, Green, True) >>> Kind($x, True) ::: All green people are kind.\nNeeds($x, $y, True) >>> Big($y, True) ::: If someone is big then they need the tiger.\nIs($x, Kind, True) >>> Needs($x, Cat, True) ::: If someone is kind then they need the cat.\nChases($x, Mouse, True) && Needs($x, Mouse, True) >>> Chases($x, Cat, True) ::: If the dog needs the cat and the dog needs the tiger then the cat is green.\nSees($x, $y, True) >>> Is($x, $y, True) ::: If someone sees the dog then the dog sees the mouse.\nIs($x, Kind, True) >>> Cold($x, True) ::: All kind people are cold.\nQuery:\nNeeds(Dog, Cat, False) ::: The dog does not need the cat.\n------\nProblem:\nThe cat chases the dog. The cat sees the mouse. The dog chases the mouse. The dog is green. The dog needs the tiger. The dog sees the mouse. The mouse is big. The tiger is big. The tiger is kind. The tiger needs the cat. The tiger needs the mouse. The tiger sees the dog. If someone chases the cat then they are rough. If someone"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-485_Q15",
    "context": "Anne is big. Anne is furry. Bob is cold. Bob is red. Dave is not green. Gary is not big. Gary is smart. If someone is smart and big then they are furry. Smart people are furry. Furry, red people are big. Big people are kind. If someone is cold then they are smart. If someone is kind and big then they are not green. If Gary is cold then Gary is not green.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Dave is not kind.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nFurry($x, bool) ::: Is x furry?\nRed($x, bool) ::: Is x red?\nGreen($x, bool) ::: Is x green?\nSmart($x, bool) ::: Is x smart?\nKind($x, bool) ::: Is x kind?\nFacts:\nBig(Anne, True) ::: Anne is big.\nFurry(Anne, True) ::: Anne is furry.\nCold(Bob, True) ::: Bob is cold.\nRed(Bob, True) ::: Bob is red.\nNot(Green(Dave, True)) ::: Dave is not green.\nNot(Big(Gary, True)) ::: Gary is not big.\nSmart(Gary, True) ::: Gary is smart.\nRules:\nSmart($x, True) >>> Furry($x, True) ::: Smart people are furry.\nFurry($x, True) && Big($x, True) >>> Smart($x, True) ::: If someone is smart and big then they are furry.\nFurry($x, True) && Red($x, True) >>> Big($x, True) ::: Furry, red people are big.\nBig($x, True) >>> Kind($x, True) ::: Big people are kind.\nCold($x, True) >>> Smart($x, True) ::: If someone is cold then they are smart.\nNot(Green($x, True)) >>> Kind($x, True) ::: If someone is kind and big then they are not green.\nNot(Green($x, True)) >>> Cold($x, True) ::: If Gary is cold then Gary is not green.\nQuery:\nNot(Kind(Dave, True)) ::: Dave is not kind.\n------\nProblem:\nAnne is big. Anne is furry. Bob is cold. Bob is red. Dave is not green. Gary is not big. Gary is smart. If someone is smart and big then they are furry. Smart people are furry. Furry, red people are big. Big people are kind. If someone is cold then they are smart. If someone is kind and big then they are not green. If Gary is cold then Gary is not green.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Dave is not kind.\n###\nPredicates:\nBig($x, bool) ::: Is x big?\nFurry($x, bool) ::: Is x furry?\nRed($x, bool) ::: Is x red?\nGreen($x, bool) ::: Is x green?\nSmart($x, bool) ::: Is x smart?\nKind($x, bool) ::: Is x kind?\nFacts:\nBig(Anne, True) ::: Anne is big.\nFurry(Anne, True) ::: Anne is furry.\nCold(Bob, True) ::: Bob is cold.\nRed(Bob, True) ::: Bob is red.\nNot(Green(Dave, True)) ::: Dave is not green.\nNot(Big(Gary, True)) ::: Gary is not big.\nSmart(Gary, True) ::: Gary is smart.\nRules:\nSmart($x, True) >>> Furry($x, True"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-119_Q11",
    "context": "Anne is big. Anne is not nice. Anne is smart. Anne is white. Bob is furry. Erin is cold. Fiona is big. Smart people are blue. If someone is big then they are white. Cold, blue people are white. Cold, blue people are furry. White, blue people are cold. All cold, white people are not nice. If someone is big then they are not nice. White people are smart. If Anne is big then Anne is white.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Fiona is furry.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nNice($x, bool) ::: Is x nice?\nSmart($x, bool) ::: Is x smart?\nWhite($x, bool) ::: Is x white?\nBlue($x, bool) ::: Is x blue?\nCold($x, bool) ::: Is x cold?\nFurry($x, bool) ::: Is x furry?\nFacts:\nBig(Anne, True) ::: Anne is big.\nNice(Anne, False) ::: Anne is not nice.\nSmart(Anne, True) ::: Anne is smart.\nWhite(Anne, True) ::: Anne is white.\nFurry(Bob, True) ::: Bob is furry.\nCold(Erin, True) ::: Erin is cold.\nBig(Fiona, True) ::: Fiona is big.\nRules:\nSmart($x, True) >>> Blue($x, True) ::: Smart people are blue.\nBig($x, True) >>> White($x, True) ::: If someone is big then they are white.\nCold($x, True) && Blue($x, True) >>> White($x, True) ::: Cold, blue people are white.\nCold($x, True) && Blue($x, True) >>> Furry($x, True) ::: Cold, blue people are furry.\nWhite($x, True) && Blue($x, True) >>> Cold($x, True) ::: White, blue people are cold.\nAll($x, Cold($x, True) && White($x, True) >>> Not($x, Nice($x, True))) ::: All cold, white people are not nice.\nBig($x, True) >>> Not($x, Nice($x, True)) ::: If someone is big then they are not nice.\nWhite($x, True) >>> Smart($x, True) ::: White people are smart.\nBig($x, True) >>> White($x, True) ::: If Anne is big then Anne is white.\nQuery:\nFurry(Fiona, True) ::: Fiona is furry.\n------\nProblem:\nAnne is big. Anne is not nice. Anne is smart. Anne is white. Bob is furry. Erin is cold. Fiona is big. Smart people are blue. If someone is big then they are white. Cold, blue people are white. Cold, blue people are furry. White, blue people are cold. All cold, white people are not nice. If someone is big then they are not nice. White people are smart. If Anne is big then Anne is white.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Fiona is furry.\n###\nPredicates:\nBig($x, bool) ::: Is x big?\nNice($x, bool) ::: Is x nice?\nSmart($x, bool) ::: Is x smart?\nWhite($x, bool) ::: Is x white?\nBlue($x, bool) ::: Is x blue?\nCold($x, bool) ::: Is x cold?\nFurry($x, bool) ::: Is x furry?\nFacts:\nBig(Anne, True) ::: Anne is big.\nNice(Anne, False) ::: Anne is not nice."
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-97_Q18",
    "context": "The bear chases the tiger. The bear is blue. The bear is cold. The lion chases the mouse. The lion chases the tiger. The lion is big. The lion is kind. The lion likes the mouse. The lion sees the tiger. The mouse likes the lion. The mouse sees the lion. The tiger chases the mouse. The tiger likes the mouse. The tiger sees the mouse. If the lion likes the tiger and the lion sees the mouse then the tiger chases the mouse. If someone chases the tiger and they see the lion then they chase the bear. If someone chases the bear then the bear is kind. If someone chases the lion then the lion is cold. If someone is kind then they see the lion.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The lion likes the lion.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nBlue($x, bool) ::: Is x blue?\nCold($x, bool) ::: Is x cold?\nBig($x, bool) ::: Is x big?\nKind($x, bool) ::: Is x kind?\nLikes($x, $y, bool) ::: Does x like y?\nSees($x, $y, bool) ::: Does x see y?\nFacts:\nChases(Bear, Tiger, True) ::: The bear chases the tiger.\nBlue(Bear, True) ::: The bear is blue.\nCold(Bear, True) ::: The bear is cold.\nChases(Lion, Mouse, True) ::: The lion chases the mouse.\nChases(Lion, Tiger, True) ::: The lion chases the tiger.\nBig(Lion, True) ::: The lion is big.\nKind(Lion, True) ::: The lion is kind.\nLikes(Lion, Mouse, True) ::: The lion likes the mouse.\nSees(Lion, Tiger, True) ::: The lion sees the tiger.\nLikes(Mouse, Lion, True) ::: The mouse likes the lion.\nSees(Mouse, Lion, True) ::: The mouse sees the lion.\nChases(Tiger, Mouse, True) ::: The tiger chases the mouse.\nLikes(Tiger, Mouse, True) ::: The tiger likes the mouse.\nSees(Tiger, Mouse, True) ::: The tiger sees the mouse.\nRules:\nChases($x, $y, True) >>> Likes($x, $y, True) ::: If the lion likes the tiger and the lion sees the mouse then the tiger chases the mouse.\nChases($x, $y, True) >>> Chases($x, $z, True) && Sees($x, $z, True) >>> Chases($x, $z, True) ::: If someone chases the tiger and they see the lion then they chase the bear.\nChases($x, $y, True) >>> Kind($x, True) ::: If someone chases the lion then the lion is cold.\nChases($x, $y, True) >>> Kind($x, True) ::: If someone chases the bear then the bear is kind.\nSees($x, $y, True) >>> Likes($x, $y, True) ::: If someone sees the lion then they like the lion.\n------\nProblem:\nThe bear chases the tiger. The bear is blue. The bear is cold. The lion chases the mouse. The lion chases the tiger. The lion is big. The lion is kind. The lion likes the mouse. The lion sees the tiger. The mouse likes the lion. The mouse sees the lion. The tiger chases the mouse. The tiger likes the mouse. The tiger sees the mouse. If the lion likes the tiger and the lion sees the mouse then the tiger chases the mouse. If someone chases the tiger and they see the lion then they chase the bear. If someone chases the bear then the bear is kind. If someone chases the lion then the lion is cold. If someone is kind then they see the lion.\nQuestion:\nBased on the"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-439_Q2",
    "context": "Anne is furry. Anne is rough. Anne is white. Bob is nice. Bob is rough. Bob is white. Dave is rough. Dave is white. Fiona is furry. Fiona is quiet. All quiet, red people are furry. If Dave is green and Dave is nice then Dave is red. If Fiona is white and Fiona is green then Fiona is quiet. All nice people are furry. If someone is furry then they are green. If someone is furry and quiet then they are nice. If someone is green then they are quiet. All rough people are furry.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Dave is not white.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nFurry($x, bool) ::: Is x furry?\nRough($x, bool) ::: Is x rough?\nWhite($x, bool) ::: Is x white?\nNice($x, bool) ::: Is x nice?\nQuiet($x, bool) ::: Is x quiet?\nRed($x, bool) ::: Is x red?\nGreen($x, bool) ::: Is x green?\nFacts:\nFurry(Anne, True) ::: Anne is furry.\nRough(Anne, True) ::: Anne is rough.\nWhite(Anne, True) ::: Anne is white.\nNice(Bob, True) ::: Bob is nice.\nRough(Bob, True) ::: Bob is rough.\nWhite(Bob, True) ::: Bob is white.\nRough(Dave, True) ::: Dave is rough.\nWhite(Dave, True) ::: Dave is white.\nFurry(Fiona, True) ::: Fiona is furry.\nQuiet(Fiona, True) ::: Fiona is quiet.\nRules:\nQuiet($x, True) && Red($x, True) >>> Furry($x, True) ::: All quiet, red people are furry.\nDave(Green($x, True) && Nice($x, True)) >>> Red($x, True) ::: If Dave is green and Dave is nice then Dave is red.\nFiona(White($x, True) && Green($x, True)) >>> Quiet($x, True) ::: If Fiona is white and Fiona is green then Fiona is quiet.\nNice($x, True) >>> Furry($x, True) ::: All nice people are furry.\nFurry($x, True) >>> Green($x, True) ::: If someone is furry then they are green.\nFurry($x, True) && Quiet($x, True) >>> Nice($x, True) ::: If someone is furry and quiet then they are nice.\nGreen($x, True) >>> Quiet($x, True) ::: If someone is green then they are quiet.\nRough($x, True) >>> Furry($x, True) ::: All rough people are furry.\nQuery:\nNot(White(Dave, True)) ::: Dave is not white.\n------\nProblem:\nAnne is furry. Anne is rough. Anne is white. Bob is nice. Bob is rough. Bob is white. Dave is rough. Dave is white. Fiona is furry. Fiona is quiet. All quiet, red people are furry. If Dave is green and Dave is nice then Dave is red. If Fiona is white and Fiona is green then Fiona is quiet. All nice people are furry. If someone is furry then they are green. If someone is furry and quiet then they are nice. If someone is green then they are quiet. All rough people are furry.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Dave is not white.\n###\nPredicates:\nFurry($x, bool) ::: Is x furry?\nRough($x, bool) ::: Is x rough?\nWhite($x, bool) ::: Is x white?\nNice($x, bool) ::: Is x nice?\nQuiet($"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1145_Q12",
    "context": "Anne is big. Anne is blue. Anne is cold. Anne is furry. Anne is red. Anne is round. Anne is smart. Bob is cold. Bob is smart. Dave is furry. Erin is blue. Erin is cold. Erin is round. Erin is smart. If someone is smart and red then they are blue. If someone is cold and big then they are red. If Dave is smart and Dave is red then Dave is big. If Bob is round and Bob is furry then Bob is big. All round people are furry. All big people are red. Smart people are round. All big people are round. Furry people are big.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is not blue.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nBlue($x, bool) ::: Is x blue?\nCold($x, bool) ::: Is x cold?\nFurry($x, bool) ::: Is x furry?\nRed($x, bool) ::: Is x red?\nRound($x, bool) ::: Is x round?\nSmart($x, bool) ::: Is x smart?\nFacts:\nBig(Anne, True) ::: Anne is big.\nBlue(Anne, True) ::: Anne is blue.\nCold(Anne, True) ::: Anne is cold.\nFurry(Anne, True) ::: Anne is furry.\nRed(Anne, True) ::: Anne is red.\nRound(Anne, True) ::: Anne is round.\nSmart(Anne, True) ::: Anne is smart.\nCold(Bob, True) ::: Bob is cold.\nSmart(Bob, True) ::: Bob is smart.\nFurry(Dave, True) ::: Dave is furry.\nBlue(Erin, True) ::: Erin is blue.\nCold(Erin, True) ::: Erin is cold.\nRound(Erin, True) ::: Erin is round.\nSmart(Erin, True) ::: Erin is smart.\nRules:\nIf someone is smart and red then they are blue. ::: If someone is smart and red then they are blue.\nIf someone is cold and big then they are red. ::: If someone is cold and big then they are red.\nIf Dave is smart and Dave is red then Dave is big. ::: If Dave is smart and Dave is red then Dave is big.\nIf Bob is round and Bob is furry then Bob is big. ::: If Bob is round and Bob is furry then Bob is big.\nAll round people are furry. ::: All round people are furry.\nAll big people are red. ::: All big people are red.\nSmart people are round. ::: Smart people are round.\nAll big people are round. ::: All big people are round.\nFurry people are big. ::: Furry people are big.\nQuery:\nNot(Blue(Bob, True)) ::: Bob is not blue.\n------\nProblem:\nAnne is big. Anne is blue. Anne is cold. Anne is furry. Anne is red. Anne is round. Anne is smart. Bob is cold. Bob is smart. Dave is furry. Erin is blue. Erin is cold. Erin is round. Erin is smart. If someone is smart and red then they are blue. If someone is cold and big then they are red. If Dave is smart and Dave is red then Dave is big. If Bob is round and Bob is furry then Bob is big. All round people are furry. All big people are red. Smart people are round. All big people are round. Furry people are big.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Bob is not blue.\n###\nPredicates:\nBig($x, bool) ::: Is x big?\nBlue($x, bool) ::: Is x blue?\nCold($x, bool) ::: Is x cold?\nFurry($x, bool) ::: Is x furry?\nRed($x"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-935_Q12",
    "context": "Anne is big. Anne is green. Anne is nice. Anne is red. Anne is rough. Anne is round. Anne is smart. Erin is big. Erin is red. Fiona is nice. Fiona is rough. Fiona is round. Fiona is smart. Gary is big. Gary is round. Gary is smart. Rough, red people are round. All round, rough people are green. Green, smart people are nice. If someone is red then they are rough. If someone is round then they are red. Green people are red. Nice people are red. Green people are smart. If someone is red then they are rough.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Erin is not nice.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nGreen($x, bool) ::: Is x green?\nNice($x, bool) ::: Is x nice?\nRed($x, bool) ::: Is x red?\nRough($x, bool) ::: Is x rough?\nRound($x, bool) ::: Is x round?\nSmart($x, bool) ::: Is x smart?\nFacts:\nBig(Anne, True) ::: Anne is big.\nGreen(Anne, True) ::: Anne is green.\nNice(Anne, True) ::: Anne is nice.\nRed(Anne, True) ::: Anne is red.\nRough(Anne, True) ::: Anne is rough.\nRound(Anne, True) ::: Anne is round.\nSmart(Anne, True) ::: Anne is smart.\nBig(Erin, True) ::: Erin is big.\nRed(Erin, True) ::: Erin is red.\nNice(Fiona, True) ::: Fiona is nice.\nRough(Fiona, True) ::: Fiona is rough.\nRound(Fiona, True) ::: Fiona is round.\nSmart(Fiona, True) ::: Fiona is smart.\nBig(Gary, True) ::: Gary is big.\nRound(Gary, True) ::: Gary is round.\nSmart(Gary, True) ::: Gary is smart.\nRules:\nRough($x, True) && Red($x, True) >>> Round($x, True) ::: Rough, red people are round.\nRound($x, True) && Rough($x, True) >>> Green($x, True) ::: All round, rough people are green.\nGreen($x, True) && Smart($x, True) >>> Nice($x, True) ::: Green, smart people are nice.\nRed($x, True) >>> Rough($x, True) ::: If someone is red then they are rough.\nRound($x, True) >>> Red($x, True) ::: If someone is round then they are red.\nGreen($x, True) >>> Red($x, True) ::: Green people are red.\nRed($x, True) >>> Nice($x, True) ::: Nice people are red.\nGreen($x, True) >>> Smart($x, True) ::: Green people are smart.\nQuery:\nNice(Erin, False) ::: Erin is not nice.\n------\nProblem:\nAnne is big. Anne is green. Anne is nice. Anne is red. Anne is rough. Anne is round. Anne is smart. Erin is big. Erin is red. Fiona is nice. Fiona is rough. Fiona is round. Fiona is smart. Gary is big. Gary is round. Gary is smart. Rough, red people are round. All round, rough people are green. Green, smart people are nice. If someone is red then they are rough. If someone is round then they are red. Green people are red. Nice people are red. Green people are smart. If someone is red then they are rough.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Erin is not nice.\n###\nPredicates:\nBig($x, bool) ::: Is x big?\nGreen($x, bool) ::"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-356_Q5",
    "context": "The cow eats the mouse. The cow eats the squirrel. The cow likes the rabbit. The cow likes the squirrel. The mouse is cold. The mouse likes the rabbit. The mouse visits the cow. The rabbit is big. The rabbit likes the mouse. The rabbit visits the mouse. The squirrel eats the cow. The squirrel eats the mouse. The squirrel is green. The squirrel is rough. The squirrel likes the cow. The squirrel likes the mouse. If something likes the cow then it visits the mouse. If something likes the cow then the cow is green. If something eats the squirrel and the squirrel likes the rabbit then it eats the rabbit. If something is cold then it likes the cow. If something visits the squirrel then the squirrel likes the rabbit. If the cow likes the rabbit then the cow is cold. If something likes the rabbit and it visits the mouse then the mouse visits the squirrel. If something is rough and it likes the squirrel then the squirrel eats the rabbit.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cow likes the cow.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y, bool) ::: Does x eat y?\nLikes($x, $y, bool) ::: Does x like y?\nVisits($x, $y, bool) ::: Does x visit y?\nCold($x, bool) ::: Is x cold?\nBig($x, bool) ::: Is x big?\nGreen($x, bool) ::: Is x green?\nRough($x, bool) ::: Is x rough?\nFacts:\nEats(Cow, Mouse, True) ::: The cow eats the mouse.\nEats(Cow, Squirrel, True) ::: The cow eats the squirrel.\nLikes(Cow, Rabbit, True) ::: The cow likes the rabbit.\nLikes(Cow, Squirrel, True) ::: The cow likes the squirrel.\nCold(Mouse, True) ::: The mouse is cold.\nLikes(Mouse, Rabbit, True) ::: The mouse likes the rabbit.\nVisits(Mouse, Cow, True) ::: The mouse visits the cow.\nBig(Rabbit, True) ::: The rabbit is big.\nLikes(Rabbit, Mouse, True) ::: The rabbit likes the mouse.\nVisits(Rabbit, Mouse, True) ::: The rabbit visits the mouse.\nEats(Squirrel, Cow, True) ::: The squirrel eats the cow.\nEats(Squirrel, Mouse, True) ::: The squirrel eats the mouse.\nGreen(Squirrel, True) ::: The squirrel is green.\nRough(Squirrel, True) ::: The squirrel is rough.\nLikes(Squirrel, Cow, True) ::: The squirrel likes the cow.\nLikes(Squirrel, Mouse, True) ::: The squirrel likes the mouse.\nRules:\nLikes($x, $y, True) >>> Visits($x, Mouse, True) ::: If something likes the cow then it visits the mouse.\nLikes($x, $y, True) >>> Green($x, True) ::: If something likes the cow then the cow is green.\nEats($x, Squirrel, True) && Likes($x, Rabbit, True) >>> Eats($x, Rabbit, True) ::: If something eats the squirrel and the squirrel likes the rabbit then it eats the rabbit.\nCold($x, True) >>> Likes($x, Cow, True) ::: If something is cold then it likes the cow.\nVisits($x, Squirrel, True) >>> Likes($x, Rabbit, True) ::: If something visits the squirrel then the squirrel likes the rabbit.\nLikes($x, Rabbit, True) && Visits($x, Mouse, True) >>> Mouse(Mouse, True) ::: If the cow likes the rabbit then the cow is cold.\nLikes($x, Rabbit, True) && Visits($x, Mouse, True) >>> Visits(Mouse, Squirrel, True) ::: If something likes the rabbit and it visits the mouse then the mouse visits the squirrel.\nRough($x, True) && Likes($x, Squirrel, True) >>> Eats($x, Rabbit, True) ::: If something is rough and it likes the squirrel then the squirrel eats the rabbit.\nQuery:\nLikes(Cow, Cow, True) ::: The cow likes the cow.\n------"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-169_Q14",
    "context": "Dave is furry. Dave is nice. Erin is cold. Erin is furry. Erin is quiet. Fiona is quiet. Gary is nice. All nice things are quiet. If something is quiet then it is cold. If something is cold and not nice then it is blue. All furry things are blue. If something is big then it is not blue. All big things are blue. Cold, blue things are green. Cold things are furry. If something is cold then it is furry.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Dave is big.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nFurry($x, bool) ::: Is x furry?\nNice($x, bool) ::: Is x nice?\nQuiet($x, bool) ::: Is x quiet?\nCold($x, bool) ::: Is x cold?\nBig($x, bool) ::: Is x big?\nBlue($x, bool) ::: Is x blue?\nGreen($x, bool) ::: Is x green?\nFacts:\nFurry(Dave, True) ::: Dave is furry.\nNice(Dave, True) ::: Dave is nice.\nCold(Erin, True) ::: Erin is cold.\nFurry(Erin, True) ::: Erin is furry.\nQuiet(Erin, True) ::: Erin is quiet.\nQuiet(Fiona, True) ::: Fiona is quiet.\nNice(Gary, True) ::: Gary is nice.\nRules:\nNice($x, True) >>> Quiet($x, True) ::: All nice things are quiet.\nQuiet($x, True) >>> Cold($x, True) ::: If something is quiet then it is cold.\nCold($x, True) && Not(Nice($x, True)) >>> Blue($x, True) ::: If something is cold and not nice then it is blue.\nFurry($x, True) >>> Blue($x, True) ::: All furry things are blue.\nNot(Big($x, True)) >>> Blue($x, True) ::: If something is big then it is not blue.\nBig($x, True) >>> Blue($x, True) ::: All big things are blue.\nCold($x, True) && Blue($x, True) >>> Green($x, True) ::: Cold, blue things are green.\nCold($x, True) >>> Furry($x, True) ::: Cold things are furry.\nIf($x, True) >>> Furry($x, True) ::: If something is cold then it is furry.\nQuery:\nBig(Dave, True) ::: Dave is big.\n------\nProblem:\nDave is furry. Dave is nice. Erin is cold. Erin is furry. Erin is quiet. Fiona is quiet. Gary is nice. All nice things are quiet. If something is quiet then it is cold. If something is cold and not nice then it is blue. All furry things are blue. If something is big then it is not blue. All big things are blue. Cold, blue things are green. Cold things are furry. If something is cold then it is furry.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Erin is blue.\n###\nPredicates:\nFurry($x, bool) ::: Is x furry?\nNice($x, bool) ::: Is x nice?\nQuiet($x, bool) ::: Is x quiet?\nCold($x, bool) ::: Is x cold?\nBig($x, bool) ::: Is x big?\nBlue($x, bool) ::: Is x blue?\nGreen($x, bool) ::: Is x green?\nFacts:\nFurry(Dave, True) ::: Dave is furry.\nNice(Dave, True) ::: Dave is nice.\nCold(Erin, True) ::: Erin is cold.\nFurry(Erin, True) ::: Erin is furry.\nQuiet(Erin, True) ::: Erin is quiet.\nQuiet(Fiona,"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-279_Q9",
    "context": "The bear is blue. The bear is round. The bear sees the cow. The cow is blue. The lion is rough. The lion likes the tiger. The lion sees the bear. The tiger is cold. The tiger is round. The tiger sees the bear. The tiger sees the cow. If someone is blue then they like the tiger. If the cow is blue then the cow chases the lion. If someone likes the tiger and the tiger sees the bear then they chase the lion. If someone likes the lion then the lion chases the tiger. If the cow is cold and the cow chases the bear then the bear chases the tiger. If someone chases the cow and they chase the lion then they chase the bear. If someone is rough then they chase the cow. If someone is cold then they are blue. If someone is blue and they chase the lion then they are rough.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cow chases the bear.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue($x, bool) ::: Is x blue?\nRound($x, bool) ::: Is x round?\nSees($x, $y, bool) ::: Does x see y?\nLikes($x, $y, bool) ::: Does x like y?\nChases($x, $y, bool) ::: Does x chase y?\nFacts:\nBlue(Bear, True) ::: The bear is blue.\nRound(Bear, True) ::: The bear is round.\nSees(Bear, Cow, True) ::: The bear sees the cow.\nBlue(Cow, True) ::: The cow is blue.\nRough(Lion, True) ::: The lion is rough.\nLikes(Lion, Tiger, True) ::: The lion likes the tiger.\nSees(Lion, Bear, True) ::: The lion sees the bear.\nCold(Tiger, True) ::: The tiger is cold.\nRound(Tiger, True) ::: The tiger is round.\nSees(Tiger, Bear, True) ::: The tiger sees the bear.\nSees(Tiger, Cow, True) ::: The tiger sees the cow.\nRules:\nBlue($x, True) >>> Likes($x, Tiger, True) ::: If someone is blue then they like the tiger.\nBlue(Cow, True) >>> Chases(Cow, Lion, True) ::: If the cow is blue then the cow chases the lion.\nLikes($x, Tiger, True) && Sees(Tiger, Bear, True) >>> Chases($x, Lion, True) ::: If someone likes the tiger and the tiger sees the bear then they chase the lion.\nLikes($x, Lion, True) >>> Chases(Lion, Tiger, True) ::: If someone likes the lion then the lion chases the tiger.\nCold($x, True) >>> Blue($x, True) ::: If someone is cold then they are blue.\nBlue($x, True) && Chases($x, Lion, True) >>> Rough($x, True) ::: If someone is blue and they chase the lion then they are rough.\nChases($x, Cow, True) && Chases($x, Lion, True) >>> Chases($x, Bear, True) ::: If someone chases the cow and they chase the lion then they chase the bear.\nRough($x, True) >>> Chases($x, Cow, True) ::: If someone is rough then they chase the cow.\nQuery:\nChases(Cow, Bear, True) ::: The cow chases the bear.\n------\nProblem:\nThe bear is blue. The bear is round. The bear sees the cow. The cow is blue. The lion is rough. The lion likes the tiger. The lion sees the bear. The tiger is cold. The tiger is round. The tiger sees the bear. The tiger sees the cow. If someone is blue then they like the tiger. If the cow is blue then the cow chases the lion. If someone likes the tiger and the tiger sees the bear then they chase the lion. If someone likes the lion then the lion chases the tiger. If the cow is cold and the cow chases the bear then the bear chases the tiger. If someone chases the cow and they chase the lion then they chase the bear. If someone is rough then they chase the cow. If someone is cold then they are blue. If someone is blue and they chase the lion then they are rough.\nQuestion:\nBased on the above information, is the"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1102_Q8",
    "context": "Charlie is kind. Erin is blue. Erin is furry. Erin is kind. Erin is quiet. Gary is furry. Gary is red. Harry is big. Harry is furry. Harry is kind. Harry is nice. Harry is quiet. Nice, big things are quiet. If something is blue then it is big. All big, red things are kind. Big things are kind. Red, kind things are nice. If something is red then it is blue. If something is quiet and kind then it is big. If Erin is nice and Erin is big then Erin is red.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is not kind.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nKind($x, bool) ::: Is x kind?\nBlue($x, bool) ::: Is x blue?\nFurry($x, bool) ::: Is x furry?\nQuiet($x, bool) ::: Is x quiet?\nBig($x, bool) ::: Is x big?\nNice($x, bool) ::: Is x nice?\nRules:\nKind($x, True) >>> Big($x, True) ::: Nice, big things are quiet.\nBlue($x, True) >>> Big($x, True) ::: If something is blue then it is big.\nBig($x, True) >>> Kind($x, True) ::: All big, red things are kind.\nBig($x, True) >>> Kind($x, True) ::: Big things are kind.\nRed($x, True) >>> Kind($x, True) ::: Red, kind things are nice.\nKind($x, True) >>> Nice($x, True) ::: If something is red then it is blue.\nQuiet($x, True) && Kind($x, True) >>> Big($x, True) ::: If something is quiet and kind then it is big.\nKind($x, True) && Big($x, True) >>> Nice($x, True) ::: If Erin is nice and Erin is big then Erin is red.\nFacts:\nKind(Charlie, True) ::: Charlie is kind.\nBlue(Erin, True) ::: Erin is blue.\nFurry(Erin, True) ::: Erin is furry.\nKind(Erin, True) ::: Erin is kind.\nQuiet(Erin, True) ::: Erin is quiet.\nFurry(Gary, True) ::: Gary is furry.\nRed(Gary, True) ::: Gary is red.\nBig(Harry, True) ::: Harry is big.\nFurry(Harry, True) ::: Harry is furry.\nKind(Harry, True) ::: Harry is kind.\nNice(Harry, True) ::: Harry is nice.\nQuiet(Harry, True) ::: Harry is quiet.\nQuery:\nNot(Kind(Gary, True)) ::: Gary is not kind.\n------\nProblem:\nCharlie is kind. Erin is blue. Erin is furry. Erin is kind. Erin is quiet. Gary is furry. Gary is red. Harry is big. Harry is furry. Harry is kind. Harry is nice. Harry is quiet. Nice, big things are quiet. If something is blue then it is big. All big, red things are kind. Big things are kind. Red, kind things are nice. If something is red then it is blue. If something is quiet and kind then it is big. If Erin is nice and Erin is big then Erin is red.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Erin is not quiet.\n###\nPredicates:\nKind($x, bool) ::: Is x kind?\nBlue($x, bool) ::: Is x blue?\nFurry($x, bool) ::: Is x furry?\nQuiet($x, bool) ::: Is x quiet?\nBig($x, bool) ::: Is x big?\nNice($x, bool) ::: Is x nice?\nRules:\nKind($x, True) >>> Big($x, True) ::: Nice, big things are quiet.\nBlue($x, True) >>> Big($x, True) ::: If something is blue then it is big.\nBig($x"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-281_Q16",
    "context": "Anne is round. Bob is round. Bob is smart. Dave is red. Dave is round. Gary is furry. Gary is kind. Gary is nice. Gary is red. Gary is round. Furry people are kind. All kind people are round. If Anne is red then Anne is kind. If someone is round and smart then they are nice. Round people are red. Furry people are round. Round, furry people are smart. Red, kind people are furry.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is kind.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRound($x, bool) ::: Is x round?\nSmart($x, bool) ::: Is x smart?\nRed($x, bool) ::: Is x red?\nKind($x, bool) ::: Is x kind?\nNice($x, bool) ::: Is x nice?\nFurry($x, bool) ::: Is x furry?\nRules:\nRound($x, True) >>> Furry($x, True) ::: Furry people are round.\nRound($x, True) >>> Kind($x, True) ::: All kind people are round.\nRed($x, True) >>> Kind($x, True) ::: If Anne is red then Anne is kind.\nRound($x, True) && Smart($x, True) >>> Nice($x, True) ::: If someone is round and smart then they are nice.\nRound($x, True) >>> Red($x, True) ::: Round people are red.\nFurry($x, True) >>> Kind($x, True) ::: Furry people are kind.\nRound($x, True) && Furry($x, True) >>> Smart($x, True) ::: Round, furry people are smart.\nRed($x, True) && Kind($x, True) >>> Furry($x, True) ::: Red, kind people are furry.\nFacts:\nRound(Anne, True) ::: Anne is round.\nRound(Bob, True) ::: Bob is round.\nSmart(Bob, True) ::: Bob is smart.\nRed(Dave, True) ::: Dave is red.\nRound(Dave, True) ::: Dave is round.\nFurry(Gary, True) ::: Gary is furry.\nKind(Gary, True) ::: Gary is kind.\nNice(Gary, True) ::: Gary is nice.\nRed(Gary, True) ::: Gary is red.\nRound(Gary, True) ::: Gary is round.\nQuery:\nKind(Bob, True) ::: Bob is kind.\n------\nProblem:\nAnne is furry. Anne is green. Anne is red. Anne is white. Anne is young. Bob is furry. Bob is green. Bob is red. Bob is white. Bob is young. Dave is furry. Dave is green. Dave is red. Dave is white. Dave is young. Erin is furry. Erin is green. Erin is red. Erin is white. Erin is young. Fiona is furry. Fiona is green. Fiona is red. Fiona is white. Fiona is young. Harry is furry. Harry is green. Harry is red. Harry is white. Harry is young. If Anne is green then Anne is red. If Anne is green then Anne is white. If Anne is green then Anne is young. If Anne is red then Anne is white. If Anne is red then Anne is young. If Anne is white then Anne is young. If Bob is green then Bob is red. If Bob is green then Bob is white. If Bob is green then Bob is young. If Bob is red then Bob is white. If Bob is red then Bob is young. If Bob is white then Bob is young. If Dave is green then Dave is red. If Dave is green then Dave is white. If Dave is green then Dave is young. If Dave is red then Dave is white. If Dave is red then Dave is young. If Dave is white then Dave is young. If Erin is green then Erin is red. If Erin is green then Erin is white. If Erin is green then Erin is young. If Erin is red then Erin is white. If Er"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-1217_Q19",
    "context": "Anne is quiet. Bob is big. Bob is red. Charlie is big. Charlie is red. Gary is not big. Gary is red. If someone is quiet then they are cold. If someone is cold then they are not round. If someone is cold and not round then they are white. If someone is round and green then they are white. White people are not big. All white people are green. Green, quiet people are not red. If someone is cold and big then they are red.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is not quiet.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nQuiet($x, bool) ::: Is x quiet?\nBig($x, bool) ::: Is x big?\nRed($x, bool) ::: Is x red?\nCold($x, bool) ::: Is x cold?\nRound($x, bool) ::: Is x round?\nWhite($x, bool) ::: Is x white?\nGreen($x, bool) ::: Is x green?\nFacts:\nQuite(Anne, True) ::: Anne is quiet.\nBig(Bob, True) ::: Bob is big.\nRed(Bob, True) ::: Bob is red.\nBig(Charlie, True) ::: Charlie is big.\nRed(Charlie, True) ::: Charlie is red.\nNot(Big(Gary, True)) ::: Gary is not big.\nRed(Gary, True) ::: Gary is red.\nQuite(Anne, True) >>> Cold($x, True) ::: If someone is quiet then they are cold.\nCold($x, True) >>> Not(Round($x, True)) ::: If someone is cold then they are not round.\nCold($x, True) && Not(Round($x, True)) >>> White($x, True) ::: If someone is cold and not round then they are white.\nRound($x, True) && Green($x, True) >>> White($x, True) ::: If someone is round and green then they are white.\nWhite($x, True) >>> Not(Big($x, True)) ::: White people are not big.\nAll(White($x, True), Green($x, True)) ::: All white people are green.\nGreen($x, True) && Quite($x, True) >>> Not(Red($x, True)) ::: Green, quiet people are not red.\nCold($x, True) && Big($x, True) >>> Red($x, True) ::: If someone is cold and big then they are red.\nQuery:\nNot(Quite(Bob, True)) ::: Bob is not quiet.\n------\nProblem:\nAnne is quiet. Bob is big. Bob is red. Charlie is big. Charlie is red. Gary is not big. Gary is red. If someone is quiet then they are cold. If someone is cold then they are not round. If someone is cold and not round then they are white. If someone is round and green then they are white. White people are not big. All white people are green. Green, quiet people are not red. If someone is cold and big then they are red.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Bob is not quiet.\n###\nPredicates:\nQuiet($x, bool) ::: Is x quiet?\nBig($x, bool) ::: Is x big?\nRed($x, bool) ::: Is x red?\nCold($x, bool) ::: Is x cold?\nRound($x, bool) ::: Is x round?\nWhite($x, bool) ::: Is x white?\nGreen($x, bool) ::: Is x green?\nFacts:\nQuite(Anne, True) ::: Anne is quiet.\nBig(Bob, True) ::: Bob is big.\nRed(Bob, True) ::: Bob is red.\nBig(Charlie, True) ::: Charlie is big.\nRed(Charlie, True) ::: Charlie is red.\nNot(Big(Gary, True)) ::: Gary is not big.\nRed(Gary, True) ::: Gary is red.\nQuite(Anne, True"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-871_Q7",
    "context": "The bald eagle chases the cow. The bald eagle is kind. The bald eagle is rough. The bald eagle needs the rabbit. The cow chases the rabbit. The cow is cold. The cow is green. The cow is red. The rabbit does not chase the bald eagle. The rabbit chases the cow. The rabbit does not eat the bald eagle. The rabbit eats the cow. The rabbit is cold. The rabbit is green. The squirrel eats the cow. The squirrel does not eat the rabbit. If something needs the bald eagle then the bald eagle chases the rabbit. If the squirrel is rough and the squirrel is not kind then the squirrel is green. If something chases the bald eagle then it needs the squirrel. If something needs the rabbit then it chases the bald eagle. If something chases the cow then the cow eats the bald eagle. If something chases the bald eagle and it does not need the bald eagle then it is red. If something needs the squirrel then the squirrel needs the rabbit.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The squirrel needs the rabbit.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y) ::: Does x chase y?\nNeeds($x, $y) ::: Does x need y?\nEats($x, $y) ::: Does x eat y?\nKind($x, bool) ::: Is x kind?\nRough($x, bool) ::: Is x rough?\nCold($x, bool) ::: Is x cold?\nGreen($x, bool) ::: Is x green?\nRed($x, bool) ::: Is x red?\nFacts:\nChases(BaldEagle, Cow) ::: The bald eagle chases the cow.\nKind(BaldEagle, True) ::: The bald eagle is kind.\nRough(BaldEagle, True) ::: The bald eagle is rough.\nNeeds(BaldEagle, Rabbit) ::: The bald eagle needs the rabbit.\nChases(Cow, Rabbit) ::: The cow chases the rabbit.\nCold(Cow, True) ::: The cow is cold.\nGreen(Cow, True) ::: The cow is green.\nRed(Cow, True) ::: The cow is red.\nChases(Rabbit, BaldEagle) ::: The rabbit does not chase the bald eagle.\nChases(Rabbit, Cow) ::: The rabbit chases the cow.\nEats(Rabbit, BaldEagle) ::: The rabbit does not eat the bald eagle.\nEats(Rabbit, Cow) ::: The rabbit eats the cow.\nCold(Rabbit, True) ::: The rabbit is cold.\nGreen(Rabbit, True) ::: The rabbit is green.\nEats(Squirrel, Cow) ::: The squirrel eats the cow.\nEats(Squirrel, Rabbit) ::: The squirrel does not eat the rabbit.\nRules:\nChases(BaldEagle, Rabbit) >>> Needs(BaldEagle, Rabbit) ::: If something needs the bald eagle then the bald eagle chases the rabbit.\nRough($x, True) && Not(Kind($x, True)) >>> Green($x, True) ::: If something is rough and the something is not kind then the something is green.\nChases(BaldEagle, $x) >>> Needs($x, Squirrel) ::: If something chases the bald eagle then it needs the squirrel.\nNeeds(Rabbit, $x) >>> Chases(BaldEagle, $x) ::: If something needs the rabbit then it chases the bald eagle.\nChases(Cow, BaldEagle) >>> Eats(BaldEagle, $x) ::: If something chases the cow then the cow eats the bald eagle.\nChases(BaldEagle, $x) && Not(Needs(BaldEagle, $x)) >>> Red($x, True) ::: If something chases the bald eagle and it does not need the bald eagle then it is red.\nNeeds(Squirrel, Rabbit) >>> Needs(Rabbit, $x) ::: If something needs the squirrel then the squirrel needs the rabbit.\nQuery:\nNeeds(Squirrel, Rabbit) ::: The squirrel needs the rabbit.\n------\nProblem:\nThe cow is furry. The cow is green. The cow is rough. The cow is white. The cow is young. The cow is quiet. The cow is red. The cow"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1359_Q22",
    "context": "Bob is furry. Bob is young. Charlie is big. Dave is furry. Dave is young. Erin is nice. Erin is young. Furry, smart things are big. White, big things are green. If something is white then it is furry. If something is nice and furry then it is smart. If something is furry and green then it is white. Young, big things are white. If Erin is young then Erin is furry.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is nice.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nFurry($x, bool) ::: Is x furry?\nYoung($x, bool) ::: Is x young?\nBig($x, bool) ::: Is x big?\nSmart($x, bool) ::: Is x smart?\nNice($x, bool) ::: Is x nice?\nGreen($x, bool) ::: Is x green?\nWhite($x, bool) ::: Is x white?\nFacts:\nFurry(Bob, True) ::: Bob is furry.\nYoung(Bob, True) ::: Bob is young.\nBig(Charlie, True) ::: Charlie is big.\nFurry(Dave, True) ::: Dave is furry.\nYoung(Dave, True) ::: Dave is young.\nNice(Erin, True) ::: Erin is nice.\nYoung(Erin, True) ::: Erin is young.\nRules:\nFurry($x, True) && Smart($x, True) >>> Big($x, True) ::: Furry, smart things are big.\nWhite($x, True) >>> Big($x, True) ::: White, big things are green.\nFurry($x, True) >>> White($x, True) ::: If something is white then it is furry.\nNice($x, True) && Furry($x, True) >>> Smart($x, True) ::: If something is nice and furry then it is smart.\nFurry($x, True) && Green($x, True) >>> White($x, True) ::: If something is furry and green then it is white.\nYoung($x, True) && Big($x, True) >>> White($x, True) ::: Young, big things are white.\nYoung($x, True) >>> Furry($x, True) ::: If Erin is young then Erin is furry.\nQuery:\nNice(Bob, True) ::: Bob is nice.\n------\nProblem:\nBob is furry. Bob is young. Charlie is big. Dave is furry. Dave is young. Erin is nice. Erin is young. Furry, smart things are big. White, big things are green. If something is white then it is furry. If something is nice and furry then it is smart. If something is furry and green then it is white. Young, big things are white. If Erin is young then Erin is furry.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Bob is nice.\n###\nPredicates:\nFurry($x, bool) ::: Is x furry?\nYoung($x, bool) ::: Is x young?\nBig($x, bool) ::: Is x big?\nSmart($x, bool) ::: Is x smart?\nNice($x, bool) ::: Is x nice?\nGreen($x, bool) ::: Is x green?\nWhite($x, bool) ::: Is x white?\nFacts:\nFurry(Bob, True) ::: Bob is furry.\nYoung(Bob, True) ::: Bob is young.\nBig(Charlie, True) ::: Charlie is big.\nFurry(Dave, True) ::: Dave is furry.\nYoung(Dave, True) ::: Dave is young.\nNice(Erin, True) ::: Erin is nice.\nYoung(Erin, True) ::: Erin is young.\nRules:\nFurry($x, True) && Smart"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-955_Q17",
    "context": "The bald eagle eats the rabbit. The bald eagle is nice. The bald eagle sees the cow. The cow is blue. The cow is young. The cow sees the mouse. The mouse chases the rabbit. The mouse eats the cow. The mouse is blue. The mouse is red. The mouse sees the bald eagle. The mouse sees the cow. The mouse sees the rabbit. The rabbit chases the mouse. The rabbit sees the cow. The rabbit sees the mouse. If something eats the bald eagle then the bald eagle chases the cow. If something eats the mouse then it chases the mouse. If the cow chases the bald eagle and the bald eagle sees the cow then the bald eagle chases the rabbit. If something is kind then it eats the mouse. If something chases the cow then the cow is kind. If the cow eats the bald eagle then the bald eagle is nice. If something sees the mouse then it sees the bald eagle. If something is young then it eats the bald eagle. If something is kind then it sees the cow.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bald eagle does not chase the mouse.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y) ::: Does x eat y?\nNice($x, bool) ::: Is x nice?\nSees($x, $y) ::: Does x see y?\nChases($x, $y) ::: Does x chase y?\nKind($x, bool) ::: Is x kind?\nYoung($x, bool) ::: Is x young?\nFacts:\nEats(BaldEagle, Rabbit) ::: The bald eagle eats the rabbit.\nNice(BaldEagle, True) ::: The bald eagle is nice.\nSees(BaldEagle, Cow) ::: The bald eagle sees the cow.\nBlue(Cow, True) ::: The cow is blue.\nYoung(Cow, True) ::: The cow is young.\nSees(Cow, Mouse) ::: The cow sees the mouse.\nChases(Mouse, Rabbit) ::: The mouse chases the rabbit.\nEats(Mouse, Cow) ::: The mouse eats the cow.\nBlue(Mouse, True) ::: The mouse is blue.\nRed(Mouse, True) ::: The mouse is red.\nSees(Mouse, BaldEagle) ::: The mouse sees the bald eagle.\nSees(Mouse, Cow) ::: The mouse sees the cow.\nSees(Mouse, Rabbit) ::: The mouse sees the rabbit.\nChases(Rabbit, Mouse) ::: The rabbit chases the mouse.\nSees(Rabbit, Cow) ::: The rabbit sees the cow.\nSees(Rabbit, Mouse) ::: The rabbit sees the mouse.\nRules:\nEats($x, $y) >>> Chases($x, $y) ::: If something eats the bald eagle then the bald eagle chases the cow.\nEats($x, $y) >>> Chases($y, $x) ::: If something eats the mouse then it chases the mouse.\nChases($x, $y) && Sees($x, $y) >>> Chases($x, $z) ::: If the cow chases the bald eagle and the bald eagle sees the cow then the bald eagle chases the rabbit.\nKind($x, True) >>> Eats($x, Mouse) ::: If something is kind then it eats the mouse.\nChases($x, $y) >>> Kind($y, True) ::: If something chases the cow then the cow is kind.\nEats($x, BaldEagle) >>> Nice($x, True) ::: If the cow eats the bald eagle then the bald eagle is nice.\nSees($x, Mouse) >>> Sees($x, BaldEagle) ::: If something sees the mouse then it sees the bald eagle.\nYoung($x, True) >>> Eats($x, BaldEagle) ::: If something is young then it eats the bald eagle.\nKind($x, True) >>> Sees($x, Cow) ::: If something is kind then it sees the cow.\nQuery:\nChases(BaldEagle, Mouse, False) ::: The bald eagle does not chase the mouse.\n------\nProblem:\nThe cat is furry. The cat is green. The cat is red. The cat is rough. The cat is white. The cat is young. The dog is furry. The dog is green. The dog is red. The dog is rough. The dog is white. The dog is young. The mouse is furry. The mouse is green. The mouse is red. The mouse is rough"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-49_Q6",
    "context": "The bald eagle eats the tiger. The mouse visits the bald eagle. The squirrel is kind. The squirrel needs the bald eagle. The squirrel needs the tiger. The tiger eats the squirrel. The tiger is red. If someone is kind then they visit the tiger. If someone eats the mouse then the mouse visits the tiger. If the tiger eats the mouse then the tiger needs the mouse. If someone visits the tiger then they are round. If the squirrel is round then the squirrel eats the mouse. If the squirrel visits the tiger then the tiger is round. If someone is round then they visit the tiger.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The squirrel is not round.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y) ::: Does x eat y?\nVisits($x, $y) ::: Does x visit y?\nKind($x, bool) ::: Is x kind?\nNeeds($x, $y) ::: Does x need y?\nRed($x, bool) ::: Is x red?\nRound($x, bool) ::: Is x round?\nFacts:\nEats(BaldEagle, Tiger) ::: The bald eagle eats the tiger.\nVisits(Mouse, BaldEagle) ::: The mouse visits the bald eagle.\nKind(Squirrel, True) ::: The squirrel is kind.\nNeeds(Squirrel, BaldEagle) ::: The squirrel needs the bald eagle.\nNeeds(Squirrel, Tiger) ::: The squirrel needs the tiger.\nEats(Tiger, Squirrel) ::: The tiger eats the squirrel.\nRed(Tiger, True) ::: The tiger is red.\nRules:\nKind($x, True) >>> Visits($x, Tiger) ::: If someone is kind then they visit the tiger.\nEats($x, Mouse) >>> Visits($x, Tiger) ::: If someone eats the mouse then the mouse visits the tiger.\nEats(Tiger, Mouse) >>> Needs(Tiger, Mouse) ::: If the tiger eats the mouse then the tiger needs the mouse.\nVisits($x, Tiger) >>> Round($x, True) ::: If someone visits the tiger then they are round.\nRound($x, True) >>> Eats($x, Mouse) ::: If the squirrel is round then the squirrel eats the mouse.\nVisits(Squirrel, Tiger) >>> Round(Tiger, True) ::: If the squirrel visits the tiger then the tiger is round.\nRound($x, True) >>> Visits($x, Tiger) ::: If someone is round then they visit the tiger.\nQuery:\nNot(Round(Squirrel, True)) ::: The squirrel is not round.\n------\nProblem:\nThe cat is furry. The cat is green. The cat is red. The cat is rough. The cat is white. The cat is young. The dog is furry. The dog is green. The dog is red. The dog is rough. The dog is white. The dog is young. The mouse is furry. The mouse is green. The mouse is red. The mouse is rough. The mouse is white. The mouse is young. The squirrel is furry. The squirrel is green. The squirrel is red. The squirrel is rough. The squirrel is white. The squirrel is young. The tiger is furry. The tiger is green. The tiger is red. The tiger is rough. The tiger is white. The tiger is young. The wolf is furry. The wolf is green. The wolf is red. The wolf is rough. The wolf is white. The wolf is young.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? The cat is young.\n###\nPredicates:\nFurry($x, bool) ::: Is x furry?\nGreen($x, bool) ::: Is x green?\nRed($x, bool) ::: Is x red?\nRough($x, bool) ::: Is x rough?\nWhite($x, bool) ::: Is x white?\nYoung($x, bool) ::: Is x young"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-222_Q9",
    "context": "Bob is rough. Charlie is kind. Charlie is rough. Erin is red. Erin is rough. Erin is white. Gary is green. Gary is red. Gary is smart. Gary is white. If someone is smart then they are red. All furry people are red. Kind people are red. If someone is red and white then they are kind. Furry, rough people are green. All kind people are furry. If someone is white then they are red. Rough people are white.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is furry.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRough($x, bool) ::: Is x rough?\nKind($x, bool) ::: Is x kind?\nRed($x, bool) ::: Is x red?\nWhite($x, bool) ::: Is x white?\nSmart($x, bool) ::: Is x smart?\nFurry($x, bool) ::: Is x furry?\nGreen($x, bool) ::: Is x green?\nFacts:\nRough(Bob, True) ::: Bob is rough.\nKind(Charlie, True) ::: Charlie is kind.\nRough(Charlie, True) ::: Charlie is rough.\nRed(Erin, True) ::: Erin is red.\nRough(Erin, True) ::: Erin is rough.\nWhite(Erin, True) ::: Erin is white.\nGreen(Gary, True) ::: Gary is green.\nRed(Gary, True) ::: Gary is red.\nSmart(Gary, True) ::: Gary is smart.\nWhite(Gary, True) ::: Gary is white.\nRules:\nSmart($x, True) >>> Red($x, True) ::: If someone is smart then they are red.\nFurry($x, True) >>> Red($x, True) ::: All furry people are red.\nKind($x, True) >>> Furry($x, True) ::: Kind people are red.\nRed($x, True) && White($x, True) >>> Kind($x, True) ::: If someone is red and white then they are kind.\nFurry($x, True) && Rough($x, True) >>> Green($x, True) ::: Furry, rough people are green.\nFurry($x, True) >>> Kind($x, True) ::: All kind people are furry.\nWhite($x, True) >>> Red($x, True) ::: If someone is white then they are red.\nRough($x, True) >>> White($x, True) ::: Rough people are white.\nQuery:\nFurry(Bob, True) ::: Bob is furry.\n------"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-229_Q6",
    "context": "The bald eagle is cold. The bald eagle likes the rabbit. The bald eagle sees the rabbit. The bald eagle sees the squirrel. The mouse sees the rabbit. The rabbit is red. The rabbit is round. The rabbit is young. The rabbit likes the bald eagle. The rabbit likes the squirrel. The rabbit sees the mouse. The rabbit sees the squirrel. The rabbit visits the mouse. The squirrel is young. The squirrel sees the mouse. The squirrel visits the bald eagle. If someone visits the squirrel and the squirrel likes the bald eagle then the squirrel is round. All round people are cold. If someone likes the mouse then the mouse is round. If someone is young then they like the mouse. If someone visits the rabbit then they like the squirrel. All round people are young. All cold people are green. If someone likes the mouse then they like the squirrel. If someone sees the mouse and they visit the squirrel then the squirrel likes the rabbit.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The mouse is not round.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nLikes($x, $y, bool) ::: Does x like y?\nSees($x, $y, bool) ::: Does x see y?\nVisits($x, $y, bool) ::: Does x visit y?\nYoung($x, bool) ::: Is x young?\nRed($x, bool) ::: Is x red?\nRound($x, bool) ::: Is x round?\nGreen($x, bool) ::: Is x green?\nFacts:\nCold(BaldEagle, True) ::: The bald eagle is cold.\nLikes(BaldEagle, Rabbit, True) ::: The bald eagle likes the rabbit.\nSees(BaldEagle, Rabbit, True) ::: The bald eagle sees the rabbit.\nSees(BaldEagle, Squirrel, True) ::: The bald eagle sees the squirrel.\nSees(Mouse, Rabbit, True) ::: The mouse sees the rabbit.\nRed(Rabbit, True) ::: The rabbit is red.\nRound(Rabbit, True) ::: The rabbit is round.\nYoung(Rabbit, True) ::: The rabbit is young.\nLikes(Rabbit, BaldEagle, True) ::: The rabbit likes the bald eagle.\nLikes(Rabbit, Squirrel, True) ::: The rabbit likes the squirrel.\nSees(Rabbit, Mouse) ::: The rabbit sees the mouse.\nSees(Rabbit, Squirrel) ::: The rabbit sees the squirrel.\nVisits(Rabbit, Mouse) ::: The rabbit visits the mouse.\nYoung(Squirrel, True) ::: The squirrel is young.\nSees(Squirrel, Mouse) ::: The squirrel sees the mouse.\nVisits(Squirrel, BaldEagle) ::: The squirrel visits the bald eagle.\nRules:\nYoung($x, True) >>> Likes($x, Mouse, True"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-688_Q12",
    "context": "The cat is nice. The cat is red. The cat is round. The cat does not need the mouse. The cat visits the squirrel. The lion needs the mouse. The mouse is round. The mouse likes the lion. The mouse needs the lion. The mouse visits the cat. The squirrel is big. The squirrel is red. The squirrel visits the lion. The squirrel visits the mouse. If something likes the cat and it does not visit the cat then it visits the lion. If the lion is green and the lion visits the mouse then the mouse is red. All red things are nice. If something likes the lion then it is red. If the mouse visits the cat and the mouse needs the squirrel then the mouse does not like the cat. Nice things are big. If something is big then it visits the squirrel. If the mouse visits the squirrel then the mouse does not visit the lion.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The mouse visits the lion.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNice($x, bool) ::: Is x nice?\nRed($x, bool) ::: Is x red?\nRound($x, bool) ::: Is x round?\nVisits($x, $y, bool) ::: Does x visit y?\nNeeds($x, $y, bool) ::: Does x need y?\nLikes($x, $y, bool) ::: Does x like y?\nFacts:\nNice(Cat, True) ::: The cat is nice.\nRed(Cat, True) ::: The cat is red.\nRound(Cat, True) ::: The cat is round.\nNeeds(Cat, Mouse, False) ::: The cat does not need the mouse.\nVisits(Cat, Squirrel, True) ::: The cat visits the squirrel.\nNeeds(Lion, Mouse, True) ::: The lion needs the mouse.\nRound(Mouse, True) ::: The mouse is round.\nLikes(Mouse, Lion, True) ::: The mouse likes the lion.\nNeeds(Mouse, Lion, True) ::: The mouse needs the lion.\nVisits(Mouse, Cat, True) ::: The mouse visits the cat.\nRed(Squirrel, True) ::: The squirrel is red.\nVisits(Squirrel, Lion, True) ::: The squirrel visits the lion.\nVisits(Squirrel, Mouse, True) ::: The squirrel visits the mouse.\nRules:\nIf something likes the cat and it does not visit the cat then it visits the lion. ::: If something likes the cat and it does not visit the cat then it visits the lion.\nIf the lion is green and the lion visits the mouse then the mouse is red. ::: If the lion is green and the lion visits the mouse then the mouse is red.\nAll red things are nice. ::: All red things are nice.\nIf something likes the lion then it is red. ::: If something likes the lion then it is red.\nIf the mouse visits the cat and the mouse needs the squirrel then the mouse does not like the cat. ::: If the mouse visits the cat and the mouse needs the squir"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-481_Q1",
    "context": "The bald eagle is green. The bald eagle needs the rabbit. The bald eagle sees the rabbit. The cat needs the bald eagle. The cat sees the bald eagle. The cat sees the rabbit. The lion is young. The lion sees the bald eagle. The lion sees the cat. The lion visits the bald eagle. The rabbit is big. The rabbit is nice. The rabbit is not young. The rabbit needs the lion. If someone visits the bald eagle then the bald eagle sees the rabbit. If someone needs the bald eagle and the bald eagle needs the lion then the bald eagle sees the rabbit. If someone is round then they see the rabbit. If the lion sees the rabbit and the lion is young then the rabbit sees the bald eagle. If someone visits the cat and they need the lion then they visit the bald eagle. If someone sees the bald eagle then they are round. If someone visits the lion then they are green. If someone needs the bald eagle and they are not young then the bald eagle sees the cat.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The rabbit is big.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen($x, bool) ::: Is x green?\nNeeds($x, $y, bool) ::: Does x need y?\nSees($x, $y, bool) ::: Does x see y?\nVisits($x, $y, bool) ::: Does x visit y?\nYoung($x, bool) ::: Is x young?\nRound($x, bool) ::: Is x round?\nBig($x, bool) ::: Is x big?\nNice($x, bool) ::: Is x nice?\nFacts:\nGreen(BaldEagle, True) ::: The bald eagle is green.\nNeeds(BaldEagle, Rabbit, True) ::: The bald eagle needs the rabbit.\nSees(BaldEagle, Rabbit, True) ::: The bald eagle sees the rabbit.\nNeeds(Cat, BaldEagle, True) ::: The cat needs the bald eagle.\nSees(Cat, BaldEagle, True) ::: The cat sees the bald eagle.\nSees(Cat, Rabbit, True) ::: The cat sees the rabbit.\nYoung(Lion, True) ::: The lion is young.\nSees(Lion, BaldEagle, True) ::: The lion sees the bald eagle.\nSees(Lion, Cat, True) ::: The lion sees the cat.\nVisits(Lion, BaldEagle, True) ::: The lion visits the bald eagle.\nBig(Rabbit, True) ::: The rabbit is big.\nNice(Rabbit, True) ::: The rabbit is nice.\nNot(Young(Rabbit, True)) ::: The rabbit is not young.\nNeeds(Rabbit, Lion, True) ::: The rabbit needs the lion.\nIf(BaldEagle, Needs(BaldEagle, Lion), Needs(BaldEagle, Rabbit)) ::: If someone needs the bald eagle and the bald eagle needs the lion then the bald eagle sees the rabbit.\nRound(x, True) >>> Sees(x, Rabbit,"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-469_Q11",
    "context": "The bear is green. The bear is young. The bear visits the dog. The cat chases the bear. The cat does not eat the dog. The cat eats the tiger. The cat is not cold. The cat is green. The dog chases the bear. The tiger eats the bear. The tiger is rough. The tiger is young. If someone is young then they chase the tiger. If someone visits the cat then the cat visits the dog. If someone visits the dog then they are kind. If the tiger is cold then the tiger eats the dog. If someone is green then they eat the bear. If the cat visits the dog and the dog is green then the dog is rough. If someone is kind then they visit the cat. If someone eats the bear and they are not rough then the bear is not cold.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cat visits the cat.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen($x, bool) ::: Is x green?\nYoung($x, bool) ::: Is x young?\nVisits($x, $y, bool) ::: Does x visit y?\nChases($x, $y, bool) ::: Does x chase y?\nEats($x, $y, bool) ::: Does x eat y?\nKind($x, bool) ::: Is x kind?\nCold($x, bool) ::: Is x cold?\nRough($x, bool) ::: Is x rough?\nFacts:\nGreen(Bear, True) ::: The bear is green.\nYoung(Bear, True) ::: The bear is young.\nVisits(Bear, Dog, True) ::: The bear visits the dog.\nChases(Cat, Bear, True) ::: The cat chases the bear.\nDoesNotEat(Cat, Dog, True) ::: The cat does not eat the dog.\nEats(Cat, Tiger, True) ::: The cat eats the tiger.\nNotCold(Cat, True) ::: The cat is not cold.\nGreen(Cat, True) ::: The cat is green.\nVisits(Dog, Bear, True) ::: The dog chases the bear.\nEats(Tiger, Bear, True) ::: The tiger eats the bear.\nRough(Tiger, True) ::: The tiger is rough.\nYoung(Tiger, True) ::: The tiger is young.\nRules:\nYoung($x, True) >>> Chases($x, Tiger, True) ::: If someone is young then they chase the tiger.\nVisits($x, Cat) >>> Visits(Cat, Dog) ::: If someone visits the cat then the cat visits the dog.\nVisits($x, Dog) >>> Kind($x, True) ::: If someone visits the dog then they are kind.\nCold($x, True) >>> Eats($x, Dog, True) ::: If the tiger is cold then the tiger eats the dog.\nGreen($x, True) >>> Eats($x, Bear, True)"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-214_Q9",
    "context": "Anne is blue. Anne is cold. Bob is blue. Bob is smart. Gary is not blue. Gary is kind. Harry is blue. All smart people are kind. If someone is smart then they are kind. If someone is blue and smart then they are kind. Nice people are red. If someone is kind and cold then they are furry. All furry, kind people are smart. Smart, furry people are nice. If Gary is kind and Gary is not blue then Gary is cold.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is nice.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue($x, bool) ::: Is x blue?\nCold($x, bool) ::: Is x cold?\nKind($x, bool) ::: Is x kind?\nSmart($x, bool) ::: Is x smart?\nNice($x, bool) ::: Is x nice?\nFurry($x, bool) ::: Is x furry?\nFacts:\nBlue(Anne, True) ::: Anne is blue.\nCold(Anne, True) ::: Anne is cold.\nBlue(Bob, True) ::: Bob is blue.\nSmart(Bob, True) ::: Bob is smart.\nNot(Blue(Gary, True)) ::: Gary is not blue.\nKind(Gary, True) ::: Gary is kind.\nBlue(Harry, True) ::: Harry is blue.\nRules:\nSmart($x, True) >>> Kind($x, True) ::: All smart people are kind.\nSmart($x, True) >>> Kind($x, True) ::: If someone is smart then they are kind.\nBlue($x, True) && Smart($x, True) >>> Kind($x, True) ::: If someone is blue and smart then they are kind.\nNice($x, True) >>> Red($x, True) ::: Nice people are red.\nKind($x, True) && Cold($x, True) >>> Furry($x, True) ::: If someone is kind and cold then they are furry.\nAll(Furry($x, True), Kind($x, True)) >>> Smart($x, True) ::: All furry, kind people are smart.\nSmart($x, True) && Furry($x, True) >>> Nice($x, True) ::: Smart, furry people are nice.\nKind($x, True) && Not(Blue($x, True)) >>> Cold($x, True) ::: If Gary is kind and Gary is not blue then Gary is cold.\nQuery:\nNice(Gary, True) ::: Gary is nice.\n------\nProblem:\nAnne is blue. Anne is cold. Bob is blue. Bob is smart. Gary is not blue"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-1041_Q20",
    "context": "The cat is blue. The cat is green. The cat likes the lion. The cat sees the cow. The cow eats the lion. The cow likes the rabbit. The cow sees the lion. The lion likes the rabbit. The rabbit eats the cat. The rabbit eats the cow. The rabbit sees the lion. If something is round then it eats the rabbit. If something is green and it eats the rabbit then the rabbit eats the cat. If something sees the lion then it is blue. If something likes the cow then the cow sees the cat. If something is blue and it sees the lion then it is round. If something is cold then it sees the cat. If something eats the rabbit then it is cold.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cat sees the rabbit.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue($x, bool) ::: Is x blue?\nGreen($x, bool) ::: Is x green?\nRound($x, bool) ::: Is x round?\nCold($x, bool) ::: Is x cold?\nLikes($x, $y, bool) ::: Does x like y?\nEats($x, $y, bool) ::: Does x eat y?\nSees($x, $y, bool) ::: Does x see y?\nFacts:\nBlue(Cat, True) ::: The cat is blue.\nGreen(Cat, True) ::: The cat is green.\nLikes(Cat, Lion, True) ::: The cat likes the lion.\nSees(Cat, Cow, True) ::: The cat sees the cow.\nEats(Cow, Lion, True) ::: The cow eats the lion.\nLikes(Cow, Rabbit, True) ::: The cow likes the rabbit.\nSees(Cow, Lion, True) ::: The cow sees the lion.\nLikes(Lion, Rabbit, True) ::: The lion likes the rabbit.\nEats(Rabbit, Cat, True) ::: The rabbit eats the cat.\nEats(Rabbit, Cow, True) ::: The rabbit eats the cow.\nSees(Rabbit, Lion, True) ::: The rabbit sees the lion.\nRules:\nRound($x, True) >>> Eats($x, Rabbit, True) ::: If something is round then it eats the rabbit.\nGreen($x, True) && Eats($x, Rabbit, True) >>> Eats($x, Cat, True) ::: If something is green and it eats the rabbit then the rabbit eats the cat.\nSees($x, Lion, True) >>> Blue($x, True) ::: If something sees the lion then it is blue.\nLikes($x, Cow, True) >>> Sees($x, Cat, True) ::: If something likes the cow then the cow sees the cat.\nBlue($x, True) && Sees($x, Lion, True) >>> Round"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-968_Q15",
    "context": "The bald eagle chases the squirrel. The bald eagle is rough. The bald eagle is round. The dog chases the squirrel. The dog is not blue. The dog visits the squirrel. The squirrel chases the tiger. The squirrel is round. The squirrel does not visit the dog. The tiger is round. The tiger visits the squirrel. If someone chases the squirrel then the squirrel is not kind. If someone likes the dog then the dog is rough. If someone is rough and they visit the tiger then the tiger does not chase the squirrel. If someone visits the tiger and they visit the dog then the tiger likes the squirrel. If someone chases the dog then the dog chases the tiger. If someone visits the bald eagle then they like the dog. If someone chases the dog and the dog is red then they chase the tiger. If someone is rough then they visit the bald eagle. If the squirrel likes the dog and the dog likes the tiger then the squirrel visits the tiger.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The squirrel does not like the dog.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nLikes($x, $y, bool) ::: Does x like y?\nVisits($x, $y, bool) ::: Does x visit y?\nKind($x, bool) ::: Is x kind?\nRound($x, bool) ::: Is x round?\nRough($x, bool) ::: Is x rough?\nRed($x, bool) ::: Is x red?\nFacts:\nChases(BaldEagle, Squirrel, True) ::: The bald eagle chases the squirrel.\nRough(BaldEagle, True) ::: The bald eagle is rough.\nRound(BaldEagle, True) ::: The bald eagle is round.\nChases(Dog, Squirrel, True) ::: The dog chases the squirrel.\nNotBlue(Dog, True) ::: The dog is not blue.\nVisits(Dog, Squirrel, True) ::: The dog visits the squirrel.\nChases(Squirrel, Tiger, True) ::: The squirrel chases the tiger.\nRound(Squirrel, True) ::: The squirrel is round.\nNotVisits(Squirrel, Dog, True) ::: The squirrel does not visit the dog.\nRound(Tiger, True) ::: The tiger is round.\nVisits(Tiger, Squirrel, True) ::: The tiger visits the squirrel.\nNotKind(Squirrel, True) ::: The squirrel is not kind.\nLikes(Squirrel, Dog, True) ::: The squirrel likes the dog.\nLikes(Dog, Tiger, True) ::: The dog likes the tiger.\nNotVisits(Tiger, Dog, True) ::: The tiger does not visit the dog.\nNotVisits(Tiger, BaldEagle, True) ::: The tiger does not visit the bald eagle.\nNotVisits(Dog, BaldEagle, True) ::: The dog does not visit the bald eagle"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-848_Q1",
    "context": "The bear chases the tiger. The bear eats the cat. The bear eats the tiger. The bear is rough. The cat chases the bear. The mouse is not red. The tiger chases the bear. The tiger does not eat the cat. The tiger is big. The tiger is young. If someone eats the bear then they are young. If someone eats the bear then they chase the bear. If someone chases the cat then they eat the mouse. If someone is kind and they chase the cat then they do not eat the mouse. If someone eats the mouse then the mouse is big. Big people are rough. If someone visits the cat and the cat is rough then they eat the bear. If someone visits the cat then they chase the tiger. If someone is rough then they chase the cat.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The tiger does not eat the cat.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nEats($x, $y, bool) ::: Does x eat y?\nKind($x, bool) ::: Is x kind?\nRed($x, bool) ::: Is x red?\nBig($x, bool) ::: Is x big?\nYoung($x, bool) ::: Is x young?\nRough($x, bool) ::: Is x rough?\nVisits($x, $y, bool) ::: Does x visit y?\nFacts:\nChases(Bear, Tiger, True) ::: The bear chases the tiger.\nEats(Bear, Cat, True) ::: The bear eats the cat.\nEats(Bear, Tiger, True) ::: The bear eats the tiger.\nRough(Bear, True) ::: The bear is rough.\nChases(Cat, Bear, True) ::: The cat chases the bear.\nNot(Red(Mouse, True)) ::: The mouse is not red.\nChases(Tiger, Bear, True) ::: The tiger chases the bear.\nNot(Eats(Tiger, Cat, True)) ::: The tiger does not eat the cat.\nBig(Tiger, True) ::: The tiger is big.\nYoung(Tiger, True) ::: The tiger is young.\nEats(Bear, Tiger, True) >>> Young($x, True) ::: If someone eats the bear then they are young.\nEats(Bear, Tiger, True) >>> Chases($x, Bear, True) ::: If someone eats the bear then they chase the bear.\nChases(Cat, Mouse) >>> Eats($x, Mouse, True) ::: If someone chases the cat then they eat the mouse.\nKind($x, True) && Chases(Cat, $x) >>> Not(Eats($x, Mouse, True)) ::: If someone is kind and they chase the cat then they do not eat the mouse.\nEats(Mouse, Bear, True) >>> Big($x, True) ::: If someone e"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-439_Q9",
    "context": "The bald eagle is round. The mouse eats the squirrel. The mouse is cold. The mouse visits the rabbit. The rabbit eats the bald eagle. The rabbit eats the squirrel. The rabbit sees the mouse. The rabbit does not visit the bald eagle. The squirrel is not big. The squirrel does not visit the bald eagle. The squirrel visits the rabbit. If something sees the rabbit then it visits the bald eagle. If the mouse sees the rabbit and the rabbit is blue then the mouse is blue. If something is cold then it sees the rabbit. If something visits the bald eagle then the bald eagle is cold. If something visits the rabbit then the rabbit sees the squirrel.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bald eagle sees the rabbit.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRound($x, bool) ::: Is x round?\nEats($x, $y, bool) ::: Does x eat y?\nCold($x, bool) ::: Is x cold?\nVisits($x, $y, bool) ::: Does x visit y?\nSees($x, $y, bool) ::: Does x see y?\nBlue($x, bool) ::: Is x blue?\nBig($x, bool) ::: Is x big?\nFacts:\nRound(BaldEagle, True) ::: The bald eagle is round.\nEats(Mouse, Squirrel, True) ::: The mouse eats the squirrel.\nCold(Mouse, True) ::: The mouse is cold.\nVisits(Mouse, Rabbit, True) ::: The mouse visits the rabbit.\nSees(Rabbit, Mouse, True) ::: The rabbit sees the mouse.\nDoesNotVisit(Rabbit, BaldEagle, True) ::: The rabbit does not visit the bald eagle.\nNotBig(Squirrel, True) ::: The squirrel is not big.\nDoesNotVisit(Squirrel, BaldEagle, True) ::: The squirrel does not visit the bald eagle.\nVisits(Squirrel, Rabbit, True) ::: The squirrel visits the rabbit.\nSees(Rabbit, Mouse, True) ::: If something sees the rabbit then it visits the bald eagle.\nBlue(Mouse, True) >>> Sees(Rabbit, Mouse, True) ::: If the mouse sees the rabbit and the rabbit is blue then the mouse is blue.\nCold($x, True) >>> Sees($x, Rabbit, True) ::: If something is cold then it sees the rabbit.\nVisits($x, Rabbit, True) >>> Eats($x, BaldEagle, True) ::: If something visits the bald eagle then the bald eagle is cold.\nVisits($x, Rabbit, True) >>> Sees($x, Squirrel, True) ::: If something visits the rabbit then the rabbit sees"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-428_Q9",
    "context": "The cat likes the tiger. The dog is cold. The dog is nice. The dog likes the mouse. The mouse chases the tiger. The mouse does not eat the cat. The tiger chases the cat. If the cat likes the dog then the dog does not eat the cat. If something is kind then it chases the cat. If something likes the dog then it likes the tiger. If the tiger is nice and the tiger is not young then the tiger does not chase the mouse. If something likes the tiger then it eats the dog. If something eats the dog then the dog likes the tiger. If something eats the dog and it likes the mouse then the mouse is kind. If something eats the cat then the cat does not chase the dog. If something is kind and it does not eat the cat then the cat does not eat the mouse.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The mouse is kind.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nLikes($x, $y, bool) ::: Does x like y?\nCold($x, bool) ::: Is x cold?\nNice($x, bool) ::: Is x nice?\nEats($x, $y, bool) ::: Does x eat y?\nChases($x, $y, bool) ::: Does x chase y?\nKind($x, bool) ::: Is x kind?\nFacts:\nLikes(Cat, Tiger, True) ::: The cat likes the tiger.\nCold(Dog, True) ::: The dog is cold.\nNice(Dog, True) ::: The dog is nice.\nLikes(Dog, Mouse, True) ::: The dog likes the mouse.\nChases(Mouse, Tiger, True) ::: The mouse chases the tiger.\nDoesNotEat(Mouse, Cat, True) ::: The mouse does not eat the cat.\nChases(Tiger, Cat, True) ::: The tiger chases the cat.\nRules:\nLikes(Cat, Dog, True) >>> DogDoesNotEat(Cat, True) ::: If the cat likes the dog then the dog does not eat the cat.\nKind($x, True) >>> Chases($x, Cat, True) ::: If something is kind then it chases the cat.\nLikes(Dog, Tiger, True) >>> Likes(Dog, Tiger, True) ::: If something likes the dog then it likes the tiger.\nNice($x, True) && NotYoung($x, True) >>> NotChases($x, Mouse, True) ::: If the tiger is nice and the tiger is not young then the tiger does not chase the mouse.\nLikes(Tiger, $x, True) >>> Eats($x, Dog, True) ::: If something likes the tiger then it eats the dog.\nEats($x, Dog, True) >>> Likes($x, Mouse, True) ::: If something eats the dog then the dog likes the tiger.\nEats($x, Dog, True) && Likes($x, Mouse, True) >>> MouseIsKind(True) ::: If something eats the dog and it likes the mouse then the mouse is kind.\nEats($x, Cat, True) >>> NotChases($x, Dog, True) ::: If something eats the cat then the cat does not chase the dog.\nKind($x, True) && NotEats($x, Cat, True) >>> NotEats($x, Mouse, True) ::: If something is kind and it does not eat the cat then the cat does not eat the mouse.\nQuery:\nKind(Mouse, True) ::: The mouse is kind.\n------"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-933_Q14",
    "context": "The bald eagle does not eat the bear. The bald eagle is not red. The bear is big. The bear is young. The bear likes the bald eagle. The bear likes the squirrel. The mouse chases the bear. The mouse is big. The squirrel does not chase the mouse. The squirrel is big. If something is big and it chases the bald eagle then it eats the bear. If something eats the mouse then the mouse likes the squirrel. If something likes the squirrel then it is round. If the bear eats the squirrel and the squirrel chases the mouse then the squirrel does not like the bald eagle. If something is round then it chases the bald eagle. If something likes the squirrel and the squirrel eats the bald eagle then the bald eagle chases the squirrel. If something eats the mouse and the mouse chases the bear then it eats the bald eagle. If something eats the bear and it likes the bald eagle then it eats the mouse.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bald eagle is round.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y, bool) ::: Does x eat y?\nChases($x, $y, bool) ::: Does x chase y?\nLikes($x, $y, bool) ::: Does x like y?\nIs($x, $y, bool) ::: Is x y?\nBig($x, bool) ::: Is x big?\nYoung($x, bool) ::: Is x young?\nRound($x, bool) ::: Is x round?\nFacts:\nEats(BaldEagle, Bear, False) ::: The bald eagle does not eat the bear.\nIsNotRed(BaldEagle, True) ::: The bald eagle is not red.\nBig(Bear, True) ::: The bear is big.\nYoung(Bear, True) ::: The bear is young.\nLikes(Bear, BaldEagle, True) ::: The bear likes the bald eagle.\nLikes(Bear, Squirrel, True) ::: The bear likes the squirrel.\nChases(Mouse, Bear, True) ::: The mouse chases the bear.\nBig(Mouse, True) ::: The mouse is big.\nNotChases(Squirrel, Mouse, True) ::: The squirrel does not chase the mouse.\nBig(Squirrel, True) ::: The squirrel is big.\nRules:\nBig($x, True) && Chases($x, BaldEagle, True) >>> Eats($x, Bear, True) ::: If something is big and it chases the bald eagle then it eats the bear.\nEats(Mouse, $x, True) >>> Likes(Mouse, Squirrel, True) ::: If something eats the mouse then the mouse likes the squirrel.\nLikes(Squirrel, $x, True) >>> IsRound($x, True) ::: If something likes the squirrel then it is round.\nEats(Bear, Squirrel, True) && Chases(Squirrel, Mouse, True) >>> NotLikes(Squirrel, BaldEagle, True) ::: If the bear eats the squirrel and the squirrel chases the mouse then the squirrel does not like the bald eagle.\nIsRound($x, True) && Likes(Squirrel, $x, True) && Eats($x, BaldEagle, True) >>> Chases(Squirrel, BaldEagle, True) ::: If something is round then it chases the bald eagle.\nLikes(Squirrel, $x, True) && Eats($x, BaldEagle, True) >>> Chases(BaldEagle, Squirrel, True) ::: If something likes the"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-19_Q24",
    "context": "The bear needs the cow. The cow needs the rabbit. The cow sees the bear. The cow visits the lion. The lion is nice. The lion is red. The lion does not see the cow. The lion visits the cow. The rabbit sees the cow. The rabbit visits the cow. If something needs the cow and the cow visits the rabbit then it visits the cow. If the lion needs the bear then the bear sees the cow. If the lion sees the bear and the bear is rough then the bear does not see the cow. If something visits the lion then the lion visits the bear. If something visits the bear then it needs the bear. If something visits the bear then the bear needs the cow. If something sees the cow then it visits the bear.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The lion is big.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNeeds($x, $y, bool) ::: Does x need y?\nVisits($x, $y, bool) ::: Does x visit y?\nSees($x, $y, bool) ::: Does x see y?\nBig($x, bool) ::: Is x big?\nRough($x, bool) ::: Is x rough?\nFacts:\nNeeds(Bear, Cow, True) ::: The bear needs the cow.\nNeeds(Cow, Rabbit, True) ::: The cow needs the rabbit.\nSees(Cow, Bear, True) ::: The cow sees the bear.\nVisits(Cow, Lion, True) ::: The cow visits the lion.\nNice(Lion, True) ::: The lion is nice.\nRed(Lion, True) ::: The lion is red.\nNot(Sees(Lion, Cow), True) ::: The lion does not see the cow.\nVisits(Lion, Cow, True) ::: The lion visits the cow.\nSees(Rabbit, Cow, True) ::: The rabbit sees the cow.\nVisits(Rabbit, Cow, True) ::: The rabbit visits the cow.\nRules:\nNeeds($x, $y, True) && Visits($x, $y, True) >>> Visits($x, $y, True) ::: If something needs the cow and the cow visits the rabbit then it visits the cow.\nNeeds(Lion, Bear, True) >>> Sees(Bear, Cow, True) ::: If the lion needs the bear then the bear sees the cow.\nSees($x, Cow, True) >>> Visits($x, Bear, True) ::: If something sees the cow then it visits the bear.\nNot(Sees(Lion, Bear), True) && Rough(Bear, True) >>> Not(Sees(Bear, Cow), True) ::: If the lion sees the bear and the bear is rough then the bear does not see the cow.\nVisits($x, Lion, True) >>> Visits(Lion, Bear, True) ::: If something visits the lion then the lion visits the bear.\nVisits($x, Bear, True) >>> Needs(Bear, $y, True) ::: If something visits the bear then it needs the bear.\nVisits($x, Bear, True) >>> Needs(Bear, Cow, True) ::: If something visits the bear then the bear needs the cow.\nQuery:\nBig(Lion, True) ::: The lion is big.\n------\nProblem:\nThe bear needs the cow. The cow needs the rabbit. The cow sees the bear. The cow visits the lion. The lion is nice. The lion"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-513_Q5",
    "context": "The bald eagle chases the dog. The bald eagle is cold. The dog chases the bald eagle. The rabbit is nice. The tiger is cold. The tiger needs the dog. The tiger visits the dog. If someone is nice and cold then they chase the tiger. If the bald eagle chases the tiger and the tiger needs the bald eagle then the bald eagle needs the tiger. If someone visits the dog then they chase the dog. If someone chases the bald eagle then the bald eagle visits the dog. If the tiger chases the dog then the dog is cold. If someone is round then they visit the dog. If someone chases the dog and they visit the bald eagle then the bald eagle is cold. If someone visits the dog and the dog is cold then the dog is round.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The dog is cold.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nCold($x, bool) ::: Is x cold?\nNeeds($x, $y, bool) ::: Does x need y?\nVisits($x, $y, bool) ::: Does x visit y?\nRound($x, bool) ::: Is x round?\nFacts:\nChases(BaldEagle, Dog, True) ::: The bald eagle chases the dog.\nCold(BaldEagle, True) ::: The bald eagle is cold.\nChases(Dog, BaldEagle, True) ::: The dog chases the bald eagle.\nNice(Rabbit, True) ::: The rabbit is nice.\nCold(Tiger, True) ::: The tiger is cold.\nNeeds(Tiger, Dog, True) ::: The tiger needs the dog.\nVisits(Tiger, Dog, True) ::: The tiger visits the dog.\nNice($x, True) && Cold($x, True) >>> Chases($x, Tiger, True) ::: If someone is nice and cold then they chase the tiger.\nChases(BaldEagle, Tiger, True) && Needs(Tiger, BaldEagle, True) >>> Needs(BaldEagle, Tiger, True) ::: If the bald eagle chases the tiger and the tiger needs the bald eagle then the bald eagle needs the tiger.\nChases($x, $y, True) >>> Visits($x, Dog, True) ::: If someone chases the dog then they visit the dog.\nChases(BaldEagle, Dog, True) >>> Visits(BaldEagle, Dog, True) ::: If the bald eagle chases the dog then the bald eagle visits the dog.\nChases(Tiger, Dog, True) >>> Cold(Dog, True) ::: If the tiger chases the dog then the dog is cold.\nRound($x, True) >>> Visits($x, Dog, True) ::: If someone visits the dog then they visit the dog.\nChases(Dog, BaldEagle, True) && Visits(Dog, BaldEagle, True) >>> Cold(BaldEagle, True) ::: If someone chases the dog and they visit the bald eagle then the bald eagle is cold.\nVisits(Dog, BaldEagle, True) && Cold(Dog, True) >>> Round(Dog, True) ::: If someone visits the dog and the dog is cold then the dog is round.\nQuery:\nCold(Dog, True) ::: The dog is cold.\n------\nProblem:\nThe dog is fur"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-904_Q3",
    "context": "Bob is big. Bob is blue. Bob is green. Bob is nice. Bob is quiet. Bob is smart. Charlie is blue. Charlie is kind. Charlie is nice. Charlie is quiet. Charlie is smart. Fiona is big. Fiona is green. Fiona is quiet. Fiona is smart. Gary is blue. If Gary is blue then Gary is smart. If something is blue and smart then it is kind. All green things are quiet. If Gary is big and Gary is nice then Gary is kind. If Gary is nice then Gary is big. If something is quiet and kind then it is nice. If something is kind then it is blue. All green things are kind. If something is smart then it is green.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is smart.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nBlue($x, bool) ::: Is x blue?\nGreen($x, bool) ::: Is x green?\nNice($x, bool) ::: Is x nice?\nQuiet($x, bool) ::: Is x quiet?\nSmart($x, bool) ::: Is x smart?\nKind($x, bool) ::: Is x kind?\nFacts:\nBig(Bob, True) ::: Bob is big.\nBlue(Bob, True) ::: Bob is blue.\nGreen(Bob, True) ::: Bob is green.\nNice(Bob, True) ::: Bob is nice.\nQuiet(Bob, True) ::: Bob is quiet.\nSmart(Bob, True) ::: Bob is smart.\nBlue(Charlie, True) ::: Charlie is blue.\nKind(Charlie, True) ::: Charlie is kind.\nNice(Charlie, True) ::: Charlie is nice.\nQuiet(Charlie, True) ::: Charlie is quiet.\nSmart(Charlie, True) ::: Charlie is smart.\nBig(Fiona, True) ::: Fiona is big.\nGreen(Fiona, True) ::: Fiona is green.\nQuiet(Fiona, True) ::: Fiona is quiet.\nSmart(Fiona, True) ::: Fiona is smart.\nBlue(Gary, True) ::: Gary is blue.\nKind(Gary, True) ::: Gary is kind.\nNice(Gary, True) ::: Gary is nice.\nQuiet(Gary, True) ::: Gary is quiet.\nSmart(Gary, True) ::: Gary is smart.\nRules:\nBlue($x, True) && Smart($x, True) >>> Kind($x, True) ::: If Gary is blue and Gary is smart then Gary is kind.\nNice($x, True) >>> Big($x, True) ::: If Gary is nice then Gary is big.\nQuiet($x, True) && Kind($x, True) >>> Nice($x, True) ::: If something is quiet and kind then it is nice.\nBlue($x, True) >>> Kind($x, True) ::: If something is blue then it is kind.\nGreen($x, True) >>> Quiet($x, True) ::: All green things are quiet.\nSmart($x, True) >>> Green($x, True) ::: If something is smart then it is green.\nQuery:\nSmart(Gary, True) ::: Gary is smart.\n------\nProblem:\nBob is big. Bob is blue. Bob is green. Bob is nice. Bob is quiet. Bob is smart. Charlie"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-614_Q13",
    "context": "The bear is rough. The bear needs the cat. The bear needs the cow. The cat is green. The cat is rough. The cat needs the bear. The cat sees the cow. The cow is not green. The cow needs the tiger. The tiger is cold. The tiger does not see the cow. If someone needs the cat then the cat needs the tiger. If someone eats the bear then the bear is young. All young people are cold. If someone sees the cow and they see the cat then the cat does not see the bear. If the cat needs the tiger then the tiger is big. If someone is big then they eat the bear. If the cat eats the cow then the cat needs the cow.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cow does not eat the bear.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRough($x, bool) ::: Is x rough?\nNeeds($x, $y, bool) ::: Does x need y?\nSees($x, $y, bool) ::: Does x see y?\nEats($x, $y, bool) ::: Does x eat y?\nYoung($x, bool) ::: Is x young?\nCold($x, bool) ::: Is x cold?\nBig($x, bool) ::: Is x big?\nFacts:\nRough(Bear, True) ::: The bear is rough.\nNeeds(Bear, Cat, True) ::: The bear needs the cat.\nNeeds(Bear, Cow, True) ::: The bear needs the cow.\nGreen(Cat, True) ::: The cat is green.\nRough(Cat, True) ::: The cat is rough.\nNeeds(Cat, Bear, True) ::: The cat needs the bear.\nSees(Cat, Cow, True) ::: The cat sees the cow.\nNot(Green(Cow, True)) ::: The cow is not green.\nNeeds(Cow, Tiger, True) ::: The cow needs the tiger.\nCold(Tiger, True) ::: The tiger is cold.\nNot(Sees(Tiger, Cow, True)) ::: The tiger does not see the cow.\nIf(Needs(Cat, Tiger, True), Tiger, Big, True) ::: If someone needs the cat then the cat needs the tiger.\nEats(Bear, Young, True) ::: If someone eats the bear then the bear is young.\nYoung(Young, True) ::: All young people are cold.\nNot(Sees(Cat, Bear, True)) ::: If the cat sees the cow and they see the cat then the cat does not see the bear.\nIf(Needs(Cat, Tiger, True), Tiger, Big, True) ::: If the cat needs the tiger then the tiger is big.\nIf(Big(Tiger, True), Tiger, Eats, True) ::: If someone is big then they eat the bear.\nEats(Cat, Cow, True) ::: If the cat eats the cow then the cat needs the cow.\nQuery:\nNot(Eats(Cow, Bear, True)) ::: The cow does not eat the bear.\n------\nProblem:\nThe bear is rough. The bear needs the cat. The bear needs the cow. The cat is green. The cat is rough. The cat needs the bear. The cat sees the cow. The cow is not green. The cow needs the tiger. The tiger is cold. The tiger does not see the cow. If someone needs the cat then the cat"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-644_Q14",
    "context": "Bob is furry. Bob is white. Erin is rough. Erin is white. Fiona is round. Harry is kind. Harry is white. If Fiona is smart then Fiona is quiet. All kind, rough people are white. All kind people are furry. If someone is rough and white then they are quiet. Rough people are smart. White people are rough. If someone is smart then they are furry. If someone is round then they are kind. All furry, kind people are white.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Erin is kind.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nFurry($x, bool) ::: Is x furry?\nWhite($x, bool) ::: Is x white?\nRough($x, bool) ::: Is x rough?\nKind($x, bool) ::: Is x kind?\nQuiet($x, bool) ::: Is x quiet?\nSmart($x, bool) ::: Is x smart?\nRound($x, bool) ::: Is x round?\nFacts:\nFurry(Bob, True) ::: Bob is furry.\nWhite(Bob, True) ::: Bob is white.\nRough(Erin, True) ::: Erin is rough.\nWhite(Erin, True) ::: Erin is white.\nRound(Fiona, True) ::: Fiona is round.\nKind(Harry, True) ::: Harry is kind.\nWhite(Harry, True) ::: Harry is white.\nRules:\nFurry($x, True) >>> Kind($x, True) ::: All kind people are furry.\nKind($x, True) >>> Furry($x, True) ::: All kind, rough people are white.\nKind($x, True) >>> White($x, True) ::: All kind, rough people are white.\nKind($x, True) >>> Rough($x, True) ::: All kind, rough people are white.\nKind($x, True) >>> Furry($x, True) ::: All kind, rough people are white.\nKind($x, True) >>> Furry($x, True) ::: All kind, rough people are white.\nKind($x, True) >>> Furry($x, True) ::: All kind, rough people are white.\nKind($x, True) >>> Furry($x, True) ::: All kind, rough people are white.\nKind($x, True) >>> Furry($x, True) ::: All kind, rough people are white.\nKind($x, True) >>> Furry($x, True) ::: All kind, rough people are white.\nKind($x, True) >>> Furry($x, True) ::: All kind, rough people are white.\nKind($x, True) >>> Furry($x, True) ::: All kind, rough people are white.\nKind($x, True) >>> Furry($x, True) ::: All kind, rough people are white.\nKind($x, True) >>> Furry($x, True) ::: All kind, rough people are white.\nKind($x, True) >>> Furry($x, True) ::: All kind, rough people are white.\nKind($x, True) >>> Furry($x, True) ::: All kind, rough people are white.\nKind($x, True) >>> Furry($x, True)"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-1020_Q6",
    "context": "The bald eagle chases the bear. The bald eagle is green. The bald eagle is round. The bald eagle likes the rabbit. The bald eagle visits the lion. The bear is young. The bear visits the bald eagle. The lion is red. The lion is round. The lion visits the rabbit. The rabbit is blue. The rabbit is red. If someone likes the bear then the bear is blue. If someone likes the lion then the lion likes the rabbit. If someone chases the bear and they visit the lion then the lion likes the bear. If someone visits the bear then they are red. If someone likes the bear and the bear is red then they chase the bear. If someone is red and they chase the rabbit then they are round. If the rabbit likes the bear and the bear likes the lion then the bear is young. If the rabbit visits the bald eagle then the bald eagle is green. If someone is blue then they visit the bear.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bear is not blue.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nLikes($x, $y, bool) ::: Does x like y?\nVisits($x, $y, bool) ::: Does x visit y?\nYoung($x, bool) ::: Is x young?\nRed($x, bool) ::: Is x red?\nRound($x, bool) ::: Is x round?\nBlue($x, bool) ::: Is x blue?\nFacts:\nChases(BaldEagle, Bear, True) ::: The bald eagle chases the bear.\nGreen(BaldEagle, True) ::: The bald eagle is green.\nRound(BaldEagle, True) ::: The bald eagle is round.\nLikes(BaldEagle, Rabbit, True) ::: The bald eagle likes the rabbit.\nVisits(BaldEagle, Lion, True) ::: The bald eagle visits the lion.\nYoung(Bear, True) ::: The bear is young.\nVisits(Bear, BaldEagle, True) ::: The bear visits the bald eagle.\nRed(Lion, True) ::: The lion is red.\nRound(Lion, True) ::: The lion is round.\nVisits(Lion, Rabbit, True) ::: The lion visits the rabbit.\nBlue(Rabbit, True) ::: The rabbit is blue.\nRed(Rabbit, True) ::: The rabbit is red.\nLikes(Bear, Lion, True) >>> Lion(Likes, Rabbit, True) ::: If someone likes the bear then the bear is blue.\nLikes(Lion, Rabbit, True) >>> Lion(Likes, Rabbit, True) ::: If someone likes the lion then the lion likes the rabbit.\nChases(BaldEagle, Bear) && Visits(BaldEagle, Lion) >>> Lion(Likes, Bear, True) ::: If someone chases the bear and they visit the lion then the lion likes the bear.\nVisits(Bear, BaldEagle) >>> Red(Bear, True) ::: If someone visits the bear then they are red.\nLikes(Bear, Lion) && Red(Bear, True) >>> Chases(Bear, Bear, True) ::: If someone likes the bear and the bear is red then they chase the bear.\nRed(Bear, True) && Chases(Bear, Rabbit) >>> Round(Bear, True) ::: If the bear is red and they chase the rabbit then they are round.\nLikes(Bear, Lion) && Lion(Likes, Rabbit, True) >>> Bear(Young, True) ::: If the"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-750_Q18",
    "context": "The cow does not eat the mouse. The cow does not visit the squirrel. The mouse is nice. The mouse sees the cow. The mouse does not see the tiger. The mouse visits the squirrel. The squirrel eats the mouse. The squirrel is nice. The squirrel does not see the cow. The squirrel visits the cow. The tiger eats the cow. The tiger eats the squirrel. The tiger is not young. The tiger sees the mouse. The tiger sees the squirrel. The tiger visits the mouse. If something visits the mouse then it eats the cow. If something eats the tiger and it sees the squirrel then the squirrel does not see the cow. If something sees the squirrel and the squirrel eats the cow then it is blue. If something is nice then it visits the mouse. If something is nice and it eats the cow then the cow visits the mouse. If something visits the mouse and it does not eat the mouse then the mouse is rough. If something eats the cow and it is rough then it does not eat the squirrel. If the cow eats the squirrel and the squirrel eats the cow then the cow sees the squirrel. If the squirrel is not blue then the squirrel sees the tiger.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The mouse visits the tiger.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEat($x, $y, bool) ::: Does x eat y?\nVisit($x, $y, bool) ::: Does x visit y?\nSee($x, $y, bool) ::: Does x see y?\nYoung($x, bool) ::: Is x young?\nBlue($x, bool) ::: Is x blue?\nNice($x, bool) ::: Is x nice?\nRough($x, bool) ::: Is x rough?\nFacts:\nEat(Cow, Mouse, False) ::: The cow does not eat the mouse.\nVisit(Cow, Squirrel, False) ::: The cow does not visit the squirrel.\nNice(Mouse, True) ::: The mouse is nice.\nSee(Mouse, Cow, True) ::: The mouse sees the cow.\nSee(Mouse, Tiger, False) ::: The mouse does not see the tiger.\nVisit(Mouse, Squirrel, True) ::: The mouse visits the squirrel.\nEat(Squirrel, Mouse, True) ::: The squirrel eats the mouse.\nNice(Squirrel, True) ::: The squirrel is nice.\nSee(Squirrel, Cow, False) ::: The squirrel does not see the cow.\nVisit(Squirrel, Cow, True) ::: The squirrel visits the cow.\nEat(Tiger, Cow, True) ::: The tiger eats the cow.\nEat(Tiger, Squirrel, True) ::: The tiger eats the squirrel.\nYoung(Tiger, False) ::: The tiger is not young.\nSee(Tiger, Mouse, True) ::: The tiger sees the mouse.\nSee(Tiger, Squirrel, True) ::: The tiger sees the squirrel.\nVisit(Tiger, Mouse, True) ::: The tiger visits the mouse.\nRules:\nEat($x, $y, True) >>> Visit($x, $y, True) ::: If something visits the mouse then it eats the cow.\nSee($x, $y, True) && Eat($x, $y, True) >>> Squirrel($x, True) ::: If something eats the tiger and it sees the squirrel then the squirrel does not see the cow.\nSee($x, $y, True) && Eat($x, $y, True) >>> Blue($x, True) ::: If something sees the squirrel and the squirrel eats the cow then it is blue.\nNice($x, True) >>> Visit($x, Mouse, True) ::: If something is nice then it visits the mouse.\nN"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-428_Q21",
    "context": "The cat likes the tiger. The dog is cold. The dog is nice. The dog likes the mouse. The mouse chases the tiger. The mouse does not eat the cat. The tiger chases the cat. If the cat likes the dog then the dog does not eat the cat. If something is kind then it chases the cat. If something likes the dog then it likes the tiger. If the tiger is nice and the tiger is not young then the tiger does not chase the mouse. If something likes the tiger then it eats the dog. If something eats the dog then the dog likes the tiger. If something eats the dog and it likes the mouse then the mouse is kind. If something eats the cat then the cat does not chase the dog. If something is kind and it does not eat the cat then the cat does not eat the mouse.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The tiger is not young.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nLikes($x, $y, bool) ::: Does x like y?\nCold($x, bool) ::: Is x cold?\nNice($x, bool) ::: Is x nice?\nEats($x, $y, bool) ::: Does x eat y?\nChases($x, $y, bool) ::: Does x chase y?\nKind($x, bool) ::: Is x kind?\nYoung($x, bool) ::: Is x young?\nFacts:\nLikes(Cat, Tiger, True) ::: The cat likes the tiger.\nCold(Dog, True) ::: The dog is cold.\nNice(Dog, True) ::: The dog is nice.\nLikes(Dog, Mouse, True) ::: The dog likes the mouse.\nChases(Mouse, Tiger, True) ::: The mouse chases the tiger.\nDoesNotEat(Mouse, Cat, True) ::: The mouse does not eat the cat.\nChases(Tiger, Cat, True) ::: The tiger chases the cat.\nIfLikes(Cat, Dog, True) >>> DogDoesNotEat(Cat, True) ::: If the cat likes the dog then the dog does not eat the cat.\nIfKind(x, True) >>> Chases(x, Cat, True) ::: If something is kind then it chases the cat.\nIfLikes(x, Dog) >>> Likes(x, Tiger, True) ::: If something likes the dog then it likes the tiger.\nIfNotYoung(Tiger, True) && Nice(Tiger, True) >>> TigerDoesNotChase(Mouse, True) ::: If the tiger is nice and the tiger is not young then the tiger does not chase the mouse.\nIfLikes(x, Tiger) >>> Eats(x, Dog, True) ::: If something likes the tiger then it eats the dog.\nIfEats(x, Dog) >>> Likes(x, Tiger, True) ::: If something eats the dog then the dog likes the tiger.\nIfEats(x, Dog) && Likes(x, Mouse) >>> MouseIsKind(True) ::: If something eats the dog and it likes the mouse then the mouse is kind.\nIfEats(x, Cat) >>> CatDoesNotChase(Dog, True) ::: If something eats the cat then the cat does not chase the dog.\nIfKind(x, True) && DoesNotEat(x, Cat) >>> CatDoesNotEat(Mouse, True) ::: If something is kind and it does not eat the cat then the cat does not eat the mouse.\nQuery:\nNotYoung(Tiger, True"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-1135_Q17",
    "context": "Anne is nice. Anne is white. Charlie is round. Charlie is white. Erin is not nice. Erin is quiet. Gary is not quiet. Blue people are big. If someone is white then they are green. If Anne is quiet then Anne is blue. If Anne is green then Anne is quiet. Blue people are quiet. If Anne is white and Anne is not blue then Anne is nice. Big people are round. If someone is big and not nice then they are round.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is not big.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNice($x, bool) ::: Is x nice?\nWhite($x, bool) ::: Is x white?\nRound($x, bool) ::: Is x round?\nBig($x, bool) ::: Is x big?\nQuiet($x, bool) ::: Is x quiet?\nBlue($x, bool) ::: Is x blue?\nFacts:\nNice(Anne, True) ::: Anne is nice.\nWhite(Anne, True) ::: Anne is white.\nRound(Charlie, True) ::: Charlie is round.\nWhite(Charlie, True) ::: Charlie is white.\nQuiet(Erin, True) ::: Erin is quiet.\nNot(Nice(Erin, True)) ::: Erin is not nice.\nNot(Quiet(Gary, True)) ::: Gary is not quiet.\nBlue($x, True) >>> Big($x, True) ::: Blue people are big.\nWhite($x, True) >>> Green($x, True) ::: If someone is white then they are green.\nQuiet(Anne, True) >>> Blue($x, True) ::: If Anne is quiet then Anne is blue.\nBlue($x, True) >>> Quiet($x, True) ::: Blue people are quiet.\nWhite($x, True) && Not(Blue($x, True)) >>> Nice($x, True) ::: If Anne is white and Anne is not blue then Anne is nice.\nBig($x, True) && Not(Nice($x, True)) >>> Round($x, True) ::: If someone is big and not nice then they are round.\nRules:\n###\nQuery:\nNot(Big(Gary, True)) ::: Gary is not big.\n------"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-223_Q8",
    "context": "The bear likes the squirrel. The bear sees the lion. The dog is round. The dog sees the lion. The lion eats the bear. The lion is blue. The lion is green. The lion sees the dog. The squirrel eats the bear. The squirrel does not eat the dog. The squirrel is round. The squirrel sees the dog. If something eats the lion and it is green then it eats the dog. All round things are blue. All nice things are blue. If the dog eats the squirrel then the dog likes the bear. If something is blue then it eats the squirrel. If something likes the bear then the bear is blue. If the bear does not eat the squirrel then the bear does not eat the dog.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The dog does not like the bear.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nLikes($x, $y, bool) ::: Does x like y?\nSees($x, $y, bool) ::: Does x see y?\nEats($x, $y, bool) ::: Does x eat y?\nIsBlue($x, bool) ::: Is x blue?\nIsGreen($x, bool) ::: Is x green?\nIsRound($x, bool) ::: Is x round?\nIsNice($x, bool) ::: Is x nice?\nFacts:\nLikes(Bear, Squirrel, True) ::: The bear likes the squirrel.\nSees(Bear, Lion, True) ::: The bear sees the lion.\nIsRound(Dog, True) ::: The dog is round.\nSees(Dog, Lion, True) ::: The dog sees the lion.\nEats(Lion, Bear, True) ::: The lion eats the bear.\nIsBlue(Lion, True) ::: The lion is blue.\nIsGreen(Lion, True) ::: The lion is green.\nSees(Lion, Dog, True) ::: The lion sees the dog.\nEats(Squirrel, Bear, True) ::: The squirrel eats the bear.\nDoesNotEat(Squirrel, Dog, True) ::: The squirrel does not eat the dog.\nIsRound(Squirrel, True) ::: The squirrel is round.\nSees(Squirrel, Dog, True) ::: The squirrel sees the dog.\nRules:\nIf something eats the lion and it is green then it eats the dog ::: If something eats the lion and it is green then it eats the dog.\nAll round"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-332_Q5",
    "context": "The cow is not big. The cow is not green. The lion eats the tiger. The lion sees the cow. The lion visits the cow. The lion does not visit the squirrel. The lion visits the tiger. The squirrel is big. The squirrel is round. The tiger is not green. The tiger does not see the cow. If something sees the squirrel and the squirrel eats the cow then the cow is round. If something is green then it eats the tiger. If the squirrel is round then the squirrel visits the cow. If something eats the cow then it sees the squirrel. If something sees the tiger and the tiger visits the squirrel then it is nice. If something is round then it eats the cow. If something is kind then it eats the cow. If the tiger visits the cow then the cow sees the squirrel. If something sees the cow then the cow eats the tiger.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The squirrel sees the squirrel.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nGreen($x, bool) ::: Is x green?\nRound($x, bool) ::: Is x round?\nKind($x, bool) ::: Is x kind?\nNice($x, bool) ::: Is x nice?\nEats($x, $y, bool) ::: Does x eat y?\nVisits($x, $y, bool) ::: Does x visit y?\nSees($x, $y, bool) ::: Does x see y?\nFacts:\nNotBig(Cow, True) ::: The cow is not big.\nNotGreen(Cow, True) ::: The cow is not green.\nEats(Lion, Tiger, True) ::: The lion eats the tiger.\nSees(Lion, Cow, True) ::: The lion sees the cow.\nVisits(Lion, Cow, True) ::: The lion visits the cow.\nNotVisits(Lion, Squirrel, True) ::: The lion does not visit the squirrel.\nVisits(Lion, Tiger, True) ::: The lion visits the tiger.\nBig(Squirrel, True) ::: The squirrel is big.\nRound(Squirrel, True) ::: The squirrel is round.\nNotGreen(Tiger, True) ::: The tiger is not green.\nNotSees(Tiger, Cow, True) ::: The tiger does not see the cow.\nRules:\nIf something sees the squirrel and the squirrel eats the cow then the cow is round. ::: If something sees the squirrel and the squirrel eats the cow then the cow is round.\nIf something"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-795_Q5",
    "context": "Bob is green. Bob is young. Charlie is round. Charlie is young. Dave is green. Dave is nice. Dave is quiet. Dave is red. Dave is round. Dave is young. Erin is nice. Erin is quiet. Erin is red. Erin is rough. Erin is round. Erin is young. If something is quiet and green then it is round. If Dave is young and Dave is red then Dave is nice. If Dave is young and Dave is quiet then Dave is rough. If something is red and green then it is rough. If Charlie is green and Charlie is rough then Charlie is nice. If Charlie is quiet and Charlie is round then Charlie is green. Round, green things are red. If something is round then it is quiet.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Charlie is green.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen($x, bool) ::: Is x green?\nYoung($x, bool) ::: Is x young?\nRound($x, bool) ::: Is x round?\nNice($x, bool) ::: Is x nice?\nQuiet($x, bool) ::: Is x quiet?\nRed($x, bool) ::: Is x red?\nRough($x, bool) ::: Is x rough?\nFacts:\nGreen(Bob, True) ::: Bob is green.\nYoung(Bob, True) ::: Bob is young.\nRound(Charlie, True) ::: Charlie is round.\nYoung(Charlie, True) ::: Charlie is young.\nGreen(Dave, True) ::: Dave is green.\nNice(Dave, True) ::: Dave is nice.\nQuiet(Dave, True) ::: Dave is quiet.\nRed(Dave, True) ::: Dave is red.\nRound(Dave, True) ::: Dave is round.\nYoung(Dave, True) ::: Dave is young.\nNice(Erin, True) ::: Erin is nice.\nQuiet(Erin, True) ::: Erin is quiet.\nRed(Erin, True) ::: Erin is red.\nRough(Erin, True) ::: Erin is rough.\nRound(Erin, True) ::: Erin is round.\nYoung(Erin, True) ::: Erin is young.\nRules:\nYoung($x, True) && Green($x, True) >>> Round($x, True) ::: If something is quiet and green then it is round.\nYoung($x, True) && Red($x, True) >>> Nice"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-724_Q7",
    "context": "Bob is quiet. Dave is green. Dave is not round. Fiona is green. Fiona is not quiet. Fiona is red. Harry is round. Round people are rough. All rough people are quiet. If Harry is quiet then Harry is smart. All rough, green people are red. Smart, quiet people are green. Red, quiet people are round.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Harry is smart.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nQuiet($x, bool) ::: Is x quiet?\nRound($x, bool) ::: Is x round?\nGreen($x, bool) ::: Is x green?\nRed($x, bool) ::: Is x red?\nRough($x, bool) ::: Is x rough?\nSmart($x, bool) ::: Is x smart?\nFacts:\nQuite(Bob, True) ::: Bob is quiet.\nGreen(Dave, True) ::: Dave is green.\nRound(Dave, False) ::: Dave is not round.\nGreen(Fiona, True) ::: Fiona is green.\nQuite(Fiona, False) ::: Fiona is not quiet.\nRed(Fiona, True) ::: Fiona is red.\nRound(Harry, True) ::: Harry is round.\nRules:\nRound($x, True) >>> Rough($x, True) ::: Round people are rough.\nRough($x, True) >>> Quite($x, True) ::: All rough people are quiet.\nQuite($x, True) >>> Smart($x, True) ::: If Harry is quiet then Harry is smart.\nRough($x, True) && Green($x, True) >>> Red($x, True) ::: All rough, green people are red.\nQuite($x, True) && Smart($x, True) >>> Green($x, True) ::: Smart, quiet people are green.\nRed($x, True) && Quite($x, True) >>> Round($x, True) ::: Red, quiet people are round.\nQuery:\nSmart(Harry, True) ::: Harry is smart.\n------\nProblem:\nBob is quiet. Dave is green. Dave is"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-780_Q18",
    "context": "Anne is red. Bob is kind. Bob is young. Gary is cold. Gary is kind. Gary is quiet. Gary is red. Gary is round. Gary is young. Harry is kind. Harry is quiet. Harry is young. Cold things are round. Furry, young things are cold. If Gary is red then Gary is young. If something is furry and quiet then it is cold. Quiet things are furry. All young, round things are red. If Bob is young then Bob is quiet.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Anne is kind.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRed($x, bool) ::: Is x red?\nKind($x, bool) ::: Is x kind?\nYoung($x, bool) ::: Is x young?\nCold($x, bool) ::: Is x cold?\nRound($x, bool) ::: Is x round?\nFurry($x, bool) ::: Is x furry?\nQuiet($x, bool) ::: Is x quiet?\nFacts:\nRed(Anne, True) ::: Anne is red.\nKind(Bob, True) ::: Bob is kind.\nYoung(Bob, True) ::: Bob is young.\nCold(Gary, True) ::: Gary is cold.\nKind(Gary, True) ::: Gary is kind.\nQuiet(Gary, True) ::: Gary is quiet.\nRed(Gary, True) ::: Gary is red.\nRound(Gary, True) ::: Gary is round.\nYoung(Gary, True) ::: Gary is young.\nKind(Harry, True) ::: Harry is kind.\nQuiet(Harry, True) ::: Harry is quiet.\nYoung(Harry, True) ::: Harry is young.\nRules:\nCold($x, True) >>> Round($x, True) ::: Cold things are round.\nFurry($x, True) && Young($x, True) >>> Cold($x, True) ::: Furry, young things are cold.\nRed($x, True) >>> Young($x, True) ::: If Gary is red then Gary is young.\nFurry($x, True) && Quiet($x, True) >>> Cold($x, True) ::: If something is furry and quiet then it is cold"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-670_Q15",
    "context": "Charlie is big. Charlie is cold. Charlie is green. Charlie is quiet. Charlie is red. Dave is big. Dave is quiet. Gary is big. Gary is green. Gary is nice. Harry is not cold. If Dave is quiet and Dave is nice then Dave is white. Quiet people are green. If Dave is white and Dave is green then Dave is big. All white people are cold. If someone is cold then they are red. If someone is green and quiet then they are nice. Red people are big. All quiet people are big. If someone is nice and not red then they are big.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is not cold.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nCold($x, bool) ::: Is x cold?\nGreen($x, bool) ::: Is x green?\nQuiet($x, bool) ::: Is x quiet?\nRed($x, bool) ::: Is x red?\nWhite($x, bool) ::: Is x white?\nNice($x, bool) ::: Is x nice?\nFacts:\nBig(Charlie, True) ::: Charlie is big.\nCold(Charlie, True) ::: Charlie is cold.\nGreen(Charlie, True) ::: Charlie is green.\nQuiet(Charlie, True) ::: Charlie is quiet.\nRed(Charlie, True) ::: Charlie is red.\nBig(Dave, True) ::: Dave is big.\nQuiet(Dave, True) ::: Dave is quiet.\nBig(Gary, True) ::: Gary is big.\nGreen(Gary, True) ::: Gary is green.\nNice(Gary, True) ::: Gary is nice.\nNot(Cold(Harry, True)) ::: Harry is not cold.\nRules:\nDave(Quiet($x, True) && Nice($x, True)) >>> White($x, True) ::: If Dave is quiet and Dave is nice then Dave is white.\nQuiet($x, True) >>> Green($x, True) ::: Quiet people are green.\nDave(White($x, True) && Green($x, True)) >>> Big($x, True) ::: If Dave is white and Dave is green then Dave is big.\nAll(White($x, True) >>> Cold($x, True)) ::: All white people are cold."
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-547_Q6",
    "context": "Charlie is quiet. Dave is quiet. Dave is young. Erin is blue. Erin is nice. Erin is quiet. Fiona is not blue. Fiona is cold. Fiona is nice. Fiona is round. Fiona is young. If someone is kind then they are round. All kind, cold people are blue. If someone is nice and not young then they are not blue. If Fiona is kind then Fiona is blue. If Dave is kind and Dave is blue then Dave is not nice. Round people are cold. If Dave is young then Dave is kind. If Erin is kind and Erin is blue then Erin is round.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Dave is not round.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nQuiet($x, bool) ::: Is x quiet?\nYoung($x, bool) ::: Is x young?\nBlue($x, bool) ::: Is x blue?\nNice($x, bool) ::: Is x nice?\nKind($x, bool) ::: Is x kind?\nRound($x, bool) ::: Is x round?\nCold($x, bool) ::: Is x cold?\nFacts:\nQuite(Charlie, True) ::: Charlie is quiet.\nQuite(Dave, True) ::: Dave is quiet.\nYoung(Dave, True) ::: Dave is young.\nBlue(Erin, True) ::: Erin is blue.\nNice(Erin, True) ::: Erin is nice.\nQuite(Erin, True) ::: Erin is quiet.\nNot(Blue(Fiona, True)) ::: Fiona is not blue.\nCold(Fiona, True) ::: Fiona is cold.\nNice(Fiona, True) ::: Fiona is nice.\nYoung(Fiona, True) ::: Fiona is young.\nKind($x, True) >>> Round($x, True) ::: If someone is kind then they are round.\nAll(Kind($x, True), Cold($x, True)) >>> Blue($x, True) ::: All kind, cold people are blue.\nNot(Young($x, True)) && Nice($x, True) >>> Not(Blue($x, True)) ::: If someone is nice and not young then they are not blue.\nKind(Fiona, True) >>> Blue(Fiona, True) ::: If Fiona is kind then Fiona is blue.\nKind(Dave, True) && Blue"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-259_Q5",
    "context": "The bald eagle is big. The bald eagle sees the squirrel. The dog eats the mouse. The dog is not cold. The dog is not nice. The dog visits the mouse. The mouse is red. The squirrel sees the bald eagle. The squirrel visits the bald eagle. The squirrel visits the dog. If something sees the mouse then it visits the mouse. If something eats the dog then it visits the mouse. If something eats the squirrel then it visits the mouse. If something visits the dog then the dog visits the bald eagle. If something is big and it visits the mouse then the mouse visits the squirrel. If something visits the bald eagle then the bald eagle sees the mouse. If something is big then it visits the bald eagle. If something visits the squirrel then it is big. If something eats the bald eagle and it sees the squirrel then it does not see the bald eagle.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bald eagle visits the mouse.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nCold($x, bool) ::: Is x cold?\nEats($x, $y, bool) ::: Does x eat y?\nNice($x, bool) ::: Is x nice?\nRed($x, bool) ::: Is x red?\nSees($x, $y, bool) ::: Does x see y?\nVisits($x, $y, bool) ::: Does x visit y?\nFacts:\nBig(BaldEagle, True) ::: The bald eagle is big.\nSees(BaldEagle, Squirrel, True) ::: The bald eagle sees the squirrel.\nEats(Dog, Mouse, True) ::: The dog eats the mouse.\nNot(Cold, Dog, True) ::: The dog is not cold.\nNot(Nice, Dog, True) ::: The dog is not nice.\nVisits(Dog, Mouse, True) ::: The dog visits the mouse.\nRed(Mouse, True) ::: The mouse is red.\nSees(Squirrel, BaldEagle, True) ::: The squirrel sees the bald eagle.\nVisits(Squirrel, BaldEagle, True) ::: The squirrel visits the bald eagle.\nVisits(Squirrel, Dog, True) ::: The squirrel visits the dog.\nRules:\nIf something sees the mouse then it visits the mouse. ::: If something sees the mouse then it visits the mouse.\nIf something eats the dog then it visits the mouse. ::: If something eats the dog then it visits the mouse.\nIf something eats the squirrel then it visits the mouse. ::: If something"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-287_Q4",
    "context": "Anne is not kind. Anne is quiet. Dave is not green. Dave is rough. Dave is round. Dave is smart. Fiona is quiet. Fiona is round. Gary is smart. Gary is young. Round people are rough. If someone is smart then they are rough. All young, rough people are smart. If someone is rough then they are kind. Rough people are kind. If Fiona is smart and Fiona is kind then Fiona is green. If Anne is round then Anne is quiet. Round, rough people are quiet. All kind people are young.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Dave is not kind.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nKind($x, bool) ::: Is x kind?\nQuiet($x, bool) ::: Is x quiet?\nGreen($x, bool) ::: Is x green?\nRound($x, bool) ::: Is x round?\nSmart($x, bool) ::: Is x smart?\nRough($x, bool) ::: Is x rough?\nYoung($x, bool) ::: Is x young?\nFacts:\nNotKind(Anne, True) ::: Anne is not kind.\nQuiet(Anne, True) ::: Anne is quiet.\nNotGreen(Dave, True) ::: Dave is not green.\nRough(Dave, True) ::: Dave is rough.\nRound(Dave, True) ::: Dave is round.\nSmart(Dave, True) ::: Dave is smart.\nQuiet(Fiona, True) ::: Fiona is quiet.\nRound(Fiona, True) ::: Fiona is round.\nSmart(Gary, True) ::: Gary is smart.\nYoung(Gary, True) ::: Gary is young.\nRules:\nRound($x, True) >>> Rough($x, True) ::: Round people are rough.\nSmart($x, True) >>> Rough($x, True) ::: If someone is smart then they are rough.\nYoung($x, True) && Rough($x, True) >>> Smart($x, True) ::: All young, rough people are smart.\nRough($x, True) >>> Kind($x, True) ::: If someone is rough then they are kind.\nRough($x, True) >>> Kind($x, True) ::: Rough people are kind.\nSmart($x, True) && Kind"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-947_Q13",
    "context": "The bear chases the squirrel. The cat chases the cow. The cat is blue. The cat is green. The cat likes the bear. The cat likes the squirrel. The cow chases the cat. The cow is cold. The cow likes the bear. The cow likes the cat. The cow sees the bear. The cow sees the squirrel. The squirrel is green. The squirrel likes the bear. The squirrel likes the cat. The squirrel likes the cow. If something is young then it sees the cow. If something is young and it likes the bear then the bear is green. If something sees the squirrel then the squirrel sees the cat. If the squirrel sees the cat then the cat chases the bear. If something is green then it chases the cow. If something chases the cow then it is young.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cow is not young.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nLikes($x, $y, bool) ::: Does x like y?\nSees($x, $y, bool) ::: Does x see y?\nYoung($x, bool) ::: Is x young?\nGreen($x, bool) ::: Is x green?\nBlue($x, bool) ::: Is x blue?\nCold($x, bool) ::: Is x cold?\nFacts:\nChases(Bear, Squirrel, True) ::: The bear chases the squirrel.\nChases(Cat, Cow, True) ::: The cat chases the cow.\nLikes(Cat, Bear, True) ::: The cat likes the bear.\nLikes(Cat, Squirrel, True) ::: The cat likes the squirrel.\nLikes(Cow, Bear, True) ::: The cow likes the bear.\nLikes(Cow, Cat, True) ::: The cow likes the cat.\nSees(Cow, Bear, True) ::: The cow sees the bear.\nSees(Cow, Squirrel, True) ::: The cow sees the squirrel.\nGreen(Squirrel, True) ::: The squirrel is green.\nLikes(Squirrel, Bear, True) ::: The squirrel likes the bear.\nLikes(Squirrel, Cat, True) ::: The squirrel likes the cat.\nLikes(Squirrel, Cow, True) ::: The squirrel likes the cow.\nRules:\nYoung($x, True) >>> Sees($x, Cow, True) ::: If something is young then it sees the cow.\nYoung($x, True) && Likes($x, Bear, True) >>> Green($x, True) ::: If something is young and it likes the bear then the bear is green.\nSees($x, Squirrel, True) >>> Sees($x, Cat, True) ::: If the squirrel sees the cat then the cat chases the bear.\nSees($x, Cat, True) >>> Chases($x, Bear, True) ::: If something sees the squirrel then the squirrel sees the cat.\nGreen($x, True) >>> Chases($x, Cow, True) ::: If something is green then it chases the cow.\nChases($x, Cow, True) >>> Young($x, True) ::: If something chases the cow then it is young.\nBlue($x, True) >>> Likes($x, Bear, True) ::: If something is blue then it likes the bear.\nCold($x, True) >>> Likes($x, Bear, True) ::: If something is cold then it likes the bear.\nQuery:\nYoung(Cow, False) ::: The cow is not young.\n------"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-805_Q3",
    "context": "The cat is blue. The cat is nice. The cat is round. The cat visits the tiger. The mouse likes the cat. The mouse likes the tiger. The mouse sees the cat. The mouse visits the tiger. The squirrel likes the mouse. The tiger is cold. The tiger is kind. The tiger likes the mouse. The tiger likes the squirrel. The tiger sees the cat. The tiger sees the mouse. The tiger visits the squirrel. If someone is cold then they like the tiger. If someone visits the squirrel then they visit the mouse. If someone is nice then they see the cat. If someone sees the tiger then they are blue. If someone visits the mouse then the mouse sees the tiger. If someone visits the squirrel then they are cold. If someone is blue then they visit the squirrel.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cat visits the squirrel.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue($x, bool) ::: Is x blue?\nNice($x, bool) ::: Is x nice?\nRound($x, bool) ::: Is x round?\nVisits($x, $y, bool) ::: Does x visit y?\nLikes($x, $y, bool) ::: Does x like y?\nSees($x, $y, bool) ::: Does x see y?\nCold($x, bool) ::: Is x cold?\nKind($x, bool) ::: Is x kind?\nFacts:\nBlue(Cat, True) ::: The cat is blue.\nNice(Cat, True) ::: The cat is nice.\nRound(Cat, True) ::: The cat is round.\nVisits(Cat, Tiger, True) ::: The cat visits the tiger.\nLikes(Cat, Mouse, True) ::: The cat likes the mouse.\nLikes(Cat, Tiger, True) ::: The cat likes the tiger.\nSees(Cat, Mouse, True) ::: The cat sees the mouse.\nVisits(Cat, Tiger, True) ::: The cat visits the tiger.\nLikes(Mouse, Cat, True) ::: The mouse likes the cat.\nLikes(Mouse, Tiger, True) ::: The mouse likes the tiger.\nSees(Mouse, Cat, True) ::: The mouse sees the cat.\nVisits(Mouse, Tiger, True) ::: The mouse visits the tiger.\nLikes(Squirrel, Mouse, True) ::: The squirrel likes the mouse.\nCold(Tiger, True) ::: The tiger is cold.\nKind(Tiger, True) ::: The tiger is kind.\nLikes(Tiger, Mouse, True) ::: The tiger likes the mouse.\nLikes(Tiger, Squirrel, True) ::: The tiger likes the squirrel.\nSees(Tiger, Cat, True) ::: The tiger sees the cat.\nSees(Tiger, Mouse, True) ::: The tiger sees the mouse.\nVisits(Tiger, Squirrel, True) ::: The tiger visits the squirrel.\nRules:\nCold($x, True) >>> Likes($x, Tiger, True) ::: If someone is cold then they like the tiger.\nVisits($x, Squirrel, True) >>> Visits($x, Mouse, True) ::: If someone visits the squirrel then they visit the mouse.\nNice($x, True) >>> Sees($x, Cat, True) ::: If someone is nice then they see the cat.\nSees($x, Tiger, True) >>> Blue($x, True) ::: If someone sees the tiger then they are blue.\nVisits($x, Mouse, True) >>> Sees($x, T"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-126_Q7",
    "context": "Dave is big. Dave is round. Dave is smart. Erin is blue. Fiona is big. Fiona is green. Fiona is smart. Harry is big. Harry is green. Harry is rough. Harry is smart. Harry is young. If something is young and rough then it is round. All smart things are rough. If something is round then it is green. If something is rough and big then it is young. Blue things are smart. Rough, smart things are young.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Fiona is round.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nRound($x, bool) ::: Is x round?\nSmart($x, bool) ::: Is x smart?\nBlue($x, bool) ::: Is x blue?\nGreen($x, bool) ::: Is x green?\nRough($x, bool) ::: Is x rough?\nYoung($x, bool) ::: Is x young?\nFacts:\nBig(Dave, True) ::: Dave is big.\nRound(Dave, True) ::: Dave is round.\nSmart(Dave, True) ::: Dave is smart.\nBlue(Erin, True) ::: Erin is blue.\nBig(Fiona, True) ::: Fiona is big.\nGreen(Fiona, True) ::: Fiona is green.\nSmart(Fiona, True) ::: Fiona is smart.\nBig(Harry, True) ::: Harry is big.\nGreen(Harry, True) ::: Harry is green.\nRough(Harry, True) ::: Harry is rough.\nSmart(Harry, True) ::: Harry is smart.\nYoung(Harry, True) ::: Harry is young.\nRules:\nYoung($x, True) >>> Rough($x, True) ::: If something is young and rough then it is round.\nSmart($x, True) >>> Rough($x, True) ::: All smart things are rough.\nRound($x, True) >>> Green($x, True) ::: If something is round then it is green.\nRough($x, True) && Big($x, True) >>> Young($x, True) ::: If something is rough and big then it is young.\nBlue($x, True) >>> Smart($x, True) ::: Blue things are smart.\nRough($x, True) && Smart($x, True) >>> Young($x, True) ::: Rough, smart things are young.\nQuery:\nRound(Fiona, True) ::: Fiona is round.\n------\nProblem:\nDave is big. Dave is round. Dave is smart. Erin is blue. Fiona is big. Fiona is green. Fiona is smart. Harry is big. Harry is green. Harry is rough. Harry is smart. Harry is young. If something is young and rough then it is round. All smart things are rough. If something is round then it is green. If something is rough and big then it is young. Blue things are smart. Rough, smart things are young.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Fiona is round.\n###\nPredicates:\nBig($x, bool) ::: Is x big?\nRound($x, bool) ::: Is x round?\nSmart($x, bool) ::: Is x smart?\nBlue($x, bool) :::"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-356_Q20",
    "context": "The bald eagle does not eat the dog. The bald eagle is cold. The bald eagle is young. The bald eagle likes the mouse. The dog chases the lion. The dog likes the bald eagle. The lion is cold. The lion likes the mouse. The mouse eats the lion. The mouse is not cold. The mouse likes the dog. If something eats the bald eagle then it is blue. If something is blue then it chases the mouse. If something likes the mouse then it chases the lion. If something chases the lion then the lion eats the bald eagle. If the lion chases the dog and the lion does not chase the bald eagle then the bald eagle chases the lion. If something chases the mouse then the mouse is blue. If something eats the dog then the dog likes the bald eagle. If something chases the bald eagle then the bald eagle is not blue.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The lion is young.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y, bool) ::: Does x eat y?\nLikes($x, $y, bool) ::: Does x like y?\nChases($x, $y, bool) ::: Does x chase y?\nIs($x, $y, bool) ::: Is x y?\nBlue($x, bool) ::: Is x blue?\nYoung($x, bool) ::: Is x young?\nFacts:\nEats(BaldEagle, Dog, False) ::: The bald eagle does not eat the dog.\nIs(BaldEagle, Cold, True) ::: The bald eagle is cold.\nIs(BaldEagle, Young, True) ::: The bald eagle is young.\nLikes(BaldEagle, Mouse, True) ::: The bald eagle likes the mouse.\nChases(Dog, Lion, True) ::: The dog chases the lion.\nLikes(Dog, BaldEagle, True) ::: The dog likes the bald eagle.\nIs(Lion, Cold, True) ::: The lion is cold.\nLikes(Lion, Mouse, True) ::: The lion likes the mouse.\nEats(Mouse, Lion, True) ::: The mouse eats the lion.\nIs(Mouse, Cold, False) ::: The mouse is not cold.\nLikes(Mouse, Dog, True) ::: The mouse likes the dog.\nRules:\nEats($x, $y, True) >>> Is($x, Blue, True) ::: If something eats the bald eagle then it is blue.\nIs($x, Blue, True) >>> Chases($x, Mouse, True) ::: If something is blue then it chases the mouse.\nLikes($x, Mouse, True) >>> Chases($x, Lion, True) ::: If something likes the mouse then it chases the lion.\nChases($x, Lion, True) >>> Eats($x, BaldEagle, True) ::: If something chases the lion then the lion eats the bald eagle.\nChases($x, Lion) && Chases($x, BaldEagle) >>> Chases(BaldEagle, $x, True) ::: If the lion chases the dog and the lion does not chase the bald eagle then the bald eagle chases the lion.\nChases($x, Mouse) >>> Is($x, Blue, True) ::: If something chases the mouse then the mouse is blue.\nEats($x, Dog) >>> Likes($x, BaldEagle, True) ::: If something eats the dog then the dog likes the bald eagle.\nChases($x, BaldEagle) >>> Is($x, Blue, False) ::: If something chases the bald eagle then the bald eagle is not blue.\nQuery:\nYoung(Lion, True) ::: The lion is young"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-788_Q2",
    "context": "The bald eagle is big. The bald eagle is kind. The bald eagle likes the cow. The bear chases the bald eagle. The bear is kind. The cow is young. The cow likes the bald eagle. The cow likes the bear. The dog chases the bald eagle. The dog is young. If something sees the cow and it chases the bald eagle then the cow chases the dog. If something is young then it likes the cow. If something likes the cow and it sees the cow then the cow likes the bear. If something is kind then it sees the cow. If something sees the bear then the bear is young. If something chases the dog then the dog sees the bear.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cow is not young.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nKind($x, bool) ::: Is x kind?\nLikes($x, $y, bool) ::: Does x like y?\nChases($x, $y, bool) ::: Does x chase y?\nSees($x, $y, bool) ::: Does x see y?\nYoung($x, bool) ::: Is x young?\nFacts:\nBig(BaldEagle, True) ::: The bald eagle is big.\nKind(BaldEagle, True) ::: The bald eagle is kind.\nLikes(BaldEagle, Cow, True) ::: The bald eagle likes the cow.\nChases(Bear, BaldEagle, True) ::: The bear chases the bald eagle.\nKind(Bear, True) ::: The bear is kind.\nYoung(Cow, True) ::: The cow is young.\nLikes(Cow, BaldEagle, True) ::: The cow likes the bald eagle.\nLikes(Cow, Bear, True) ::: The cow likes the bear.\nChases(Dog, BaldEagle, True) ::: The dog chases the bald eagle.\nYoung(Dog, True) ::: The dog is young.\nSees(Cow, BaldEagle, True) && Likes(Cow, BaldEagle, True) >>> Cow(BaldEagle, True) ::: If something sees the cow and it chases the bald eagle then the cow chases the dog.\nYoung($x, True) >>> Likes($x, Cow, True) ::: If something is young then it likes the cow.\nLikes($x, Cow, True) && Sees($x, Cow, True) >>> Cow(Bear, True) ::: If something likes the cow and it sees the cow then the cow likes the bear.\nKind($x, True) >>> Sees($x, Cow, True) ::: If something is kind then it sees the cow.\nSees(Bear, $x, True) >>> Young($x, True) ::: If something sees the bear then the bear is young.\nChases($x, Dog, True) >>> Sees(Dog, Bear, True) ::: If something chases the dog then the dog sees the bear.\nQuery:\nYoung(Cow, False) ::: The cow is not young.\n------\nProblem:\nThe cat is furry. The cat is green. The cat is quiet. The cat is rough. The cat is white. The dog is furry. The dog is green. The dog is quiet. The dog is rough. The dog is white. The eagle is furry. The eagle is green. The eagle is quiet. The eagle is rough. The eagle is white. The fox is furry. The fox is green. The"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1298_Q12",
    "context": "Anne is green. Anne is nice. Anne is red. Anne is smart. Anne is white. Bob is green. Bob is nice. Bob is round. Bob is white. Dave is round. Gary is green. Gary is nice. Gary is red. Gary is white. Green, red things are smart. Round things are cold. Cold, smart things are round. All smart things are cold. Red, white things are nice. All cold, round things are green. White, green things are red. All green things are smart. All smart things are white.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Dave is not red.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen($x, bool) ::: Is x green?\nRed($x, bool) ::: Is x red?\nWhite($x, bool) ::: Is x white?\nNice($x, bool) ::: Is x nice?\nSmart($x, bool) ::: Is x smart?\nRound($x, bool) ::: Is x round?\nCold($x, bool) ::: Is x cold?\nFacts:\nGreen(Anne, True) ::: Anne is green.\nNice(Anne, True) ::: Anne is nice.\nRed(Anne, True) ::: Anne is red.\nSmart(Anne, True) ::: Anne is smart.\nWhite(Anne, True) ::: Anne is white.\nGreen(Bob, True) ::: Bob is green.\nNice(Bob, True) ::: Bob is nice.\nRound(Bob, True) ::: Bob is round.\nWhite(Bob, True) ::: Bob is white.\nRound(Dave, True) ::: Dave is round.\nGreen(Gary, True) ::: Gary is green.\nNice(Gary, True) ::: Gary is nice.\nRed(Gary, True) ::: Gary is red.\nWhite(Gary, True) ::: Gary is white.\nRules:\nGreen($x, True) && Red($x, True) >>> Smart($x, True) ::: Green, red things are smart.\nRound($x, True) >>> Cold($x, True) ::: Round things are cold.\nCold($x, True) && Smart($x, True) >>> Round($x, True) ::: Cold, smart things are round.\nSmart($x, True) >>> Cold($x, True) ::: All smart things are cold.\nRed($x, True) && White($x, True) >>> Nice($x, True) ::: Red, white things are nice.\nCold($x, True) && Round($x, True) >>> Green($x, True) ::: All cold, round things are green.\nWhite($x, True) && Green($x, True) >>> Red($x, True) ::: White, green things are red.\nGreen($x, True) >>> Smart($x, True) ::: All green things are smart.\nSmart($x, True) >>> White($x, True) ::: All smart things are white.\nQuery:\nNot(Red(Dave, True)) ::: Dave is not red.\n------\nProblem:\nAnne is green. Anne is nice. Anne is red. Anne is smart. Anne is white. Bob is green. Bob is nice. Bob is round. Bob is white. Dave is round. Gary is green. Gary is nice. Gary is red. Gary is white. Green, red things are smart. Round things are cold. Cold, smart things are round. All smart things are cold. Red"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-800_Q10",
    "context": "Anne is nice. Dave is nice. Dave is rough. Gary is nice. Gary is not smart. Harry is big. Harry is round. All white people are round. If Dave is big then Dave is white. All cold, round people are rough. Smart, white people are cold. If Dave is round and Dave is big then Dave is smart. If someone is nice then they are big. All rough, white people are nice.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Dave is not smart.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNice($x, bool) ::: Is x nice?\nRough($x, bool) ::: Is x rough?\nSmart($x, bool) ::: Is x smart?\nBig($x, bool) ::: Is x big?\nRound($x, bool) ::: Is x round?\nWhite($x, bool) ::: Is x white?\nCold($x, bool) ::: Is x cold?\nFacts:\nNice(Anne, True) ::: Anne is nice.\nNice(Dave, True) ::: Dave is nice.\nRough(Dave, True) ::: Dave is rough.\nNice(Gary, True) ::: Gary is nice.\nSmart(Gary, False) ::: Gary is not smart.\nBig(Harry, True) ::: Harry is big.\nRound(Harry, True) ::: Harry is round.\nWhite(Harry, True) ::: Harry is white.\nRules:\nWhite($x, True) >>> Round($x, True) ::: All white people are round.\nBig($x, True) >>> White($x, True) ::: If Dave is big then Dave is white.\nRound($x, True) && Big($x, True) >>> Smart($x, True) ::: If Dave is round and Dave is big then Dave is smart.\nNice($x, True) >>> Big($x, True) ::: If someone is nice then they are big.\nRough($x, True) && White($x, True) >>> Nice($x, True) ::: All rough, white people are nice.\nCold($x, True) && White($x, True) && Smart($x, True) ::: Smart, white people are cold.\nCold($x, True) && Round($x, True) >>> Rough($x, True) ::: All cold, round people are rough.\nQuery:\nSmart(Dave, False) ::: Dave is not smart.\n------\nProblem:\nAnne is nice. Dave is nice. Dave is rough. Gary is nice. Gary is not smart. Harry is big. Harry is round. All white people are round. If Dave is big then Dave is white. All cold, round people are rough. Smart, white people are cold. If Dave is round and Dave is big then Dave is smart. If someone is nice then they are big. All rough, white people are nice.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Dave is not smart.\n###\nPredicates:\nNice($x, bool) ::: Is x nice?\nRough($x, bool) ::: Is x rough?\nSmart($x, bool) ::: Is x smart?\nBig($x, bool) ::: Is x big?\nRound($x, bool) ::: Is x round?\nWhite($x, bool) ::: Is x white"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-596_Q6",
    "context": "Anne is not rough. Bob is blue. Erin is not furry. Erin is red. Gary is big. Gary is not cold. Gary is furry. If something is blue then it is rough. Red things are rough. If Gary is rough then Gary is not blue. Rough things are red. Big things are quiet. All cold things are big. If something is red then it is big. If something is blue and not rough then it is big. Quiet, big things are not cold.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Erin is not quiet.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRough($x, bool) ::: Is x rough?\nBlue($x, bool) ::: Is x blue?\nFurry($x, bool) ::: Is x furry?\nRed($x, bool) ::: Is x red?\nBig($x, bool) ::: Is x big?\nCold($x, bool) ::: Is x cold?\nQuiet($x, bool) ::: Is x quiet?\nFacts:\nNotRough(Anne, True) ::: Anne is not rough.\nBlue(Bob, True) ::: Bob is blue.\nNotFurry(Erin, True) ::: Erin is not furry.\nRed(Erin, True) ::: Erin is red.\nBig(Gary, True) ::: Gary is big.\nNotCold(Gary, True) ::: Gary is not cold.\nFurry(Gary, True) ::: Gary is furry.\nRules:\nBlue($x, True) >>> Rough($x, True) ::: If something is blue then it is rough.\nRed($x, True) >>> Rough($x, True) ::: Red things are rough.\nIf Gary is rough then Gary is not blue ::: If Gary is rough then Gary is not blue.\nRough($x, True) >>> Red($x, True) ::: Rough things are red.\nBig($x, True) >>> Quiet($x, True) ::: Big things are quiet.\nAll cold things are big ::: All cold things are big.\nIf something is red then it is big ::: If something is red then it is big.\nIf something is blue and not rough then it is big ::: If something is blue and not rough then it is big.\nQuiet($x, True) >>> NotCold($x, True) ::: Quiet, big things are not cold.\nQuery:\nNotQuiet(Erin, True) ::: Erin is not quiet.\n------\nProblem:\nAnne is not furry. Anne is not green. Anne is not red. Anne is not rough. Anne is not white. Anne is not young. Bob is furry. Bob is green. Bob is not red. Bob is not rough. Bob is not white. Bob is not young. Erin is furry. Erin is green. Erin is not red. Erin is not rough. Erin is not white. Erin is not young. Fiona is furry. Fiona is green. Fiona is not red. Fiona is not rough. Fiona is not white. Fiona is not young. Harry is furry. Harry is green. Harry is not red. Harry is not rough. Harry is not white. Harry is not young. Young people are furry. If someone is green then they are white. If someone is furry and not green then they are not white. If someone is furry and not green then they are not white. If"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-729_Q8",
    "context": "Charlie is kind. Charlie is nice. Charlie is round. Charlie is not white. Dave is kind. Dave is round. Dave is not smart. Gary is nice. Gary is white. Harry is round. If something is green then it is white. If something is smart and white then it is not round. If something is white then it is round. All white, smart things are furry. If something is round then it is furry. If Harry is furry then Harry is green. All white things are nice. If something is smart and not furry then it is nice. If something is nice and round then it is kind.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Harry is not white.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nKind($x, bool) ::: Is x kind?\nNice($x, bool) ::: Is x nice?\nRound($x, bool) ::: Is x round?\nWhite($x, bool) ::: Is x white?\nSmart($x, bool) ::: Is x smart?\nFurry($x, bool) ::: Is x furry?\nFacts:\nKind(Charlie, True) ::: Charlie is kind.\nNice(Charlie, True) ::: Charlie is nice.\nRound(Charlie, True) ::: Charlie is round.\nWhite(Charlie, False) ::: Charlie is not white.\nKind(Dave, True) ::: Dave is kind.\nRound(Dave, True) ::: Dave is round.\nSmart(Dave, False) ::: Dave is not smart.\nNice(Gary, True) ::: Gary is nice.\nWhite(Gary, True) ::: Gary is white.\nRound(Harry, True) ::: Harry is round.\nRules:\nGreen($x, True) >>> White($x, True) ::: If something is green then it is white.\nWhite($x, True) >>> Smart($x, True) ::: If something is smart and white then it is not round.\nWhite($x, True) >>> Round($x, True) ::: If something is white then it is round.\nWhite($x, True) && Smart($x, True) >>> Furry($x, True) ::: All white, smart things are furry.\nRound($x, True) >>> Furry($x, True) ::: If something is round then it is furry.\nHarry(Furry($x, True)) >>> Harry(Green($x, True)) ::: If Harry is furry then Harry is green.\nWhite($x, True) >>> Nice($x, True) ::: All white things are nice.\nSmart($x, True) && Not(Furry($x, True)) >>> Nice($x, True) ::: If something is smart and not furry then it is nice.\nRound($x, True) && Nice($x, True) >>> Kind($x, True) ::: If something is nice and round then it is kind.\nQuery:\nNot(White(Harry, True)) ::: Harry is not white.\n------\nProblem:\nBob is furry. Bob is green. Bob is not white. Bob is not round. Charlie is furry. Charlie is green. Charlie is not white. Charlie is not round. Dave is furry. Dave is green. Dave is not white. Dave is not round. Erin is furry. Erin is green. Erin is not white. Erin is not round. Fiona is furry. Fiona is green. Fiona is not white. Fiona is not round. Harry is furry. Harry is green. Harry is not white. Harry"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-70_Q23",
    "context": "The bear sees the lion. The bear visits the lion. The bear visits the squirrel. The lion chases the bear. The lion chases the mouse. The lion is big. The lion sees the squirrel. The mouse chases the bear. The mouse visits the lion. The squirrel is young. The squirrel visits the lion. The squirrel visits the mouse. If someone sees the lion and the lion is kind then they are red. If someone visits the lion and they are red then the lion visits the squirrel. If someone is kind then they see the lion. If the lion visits the squirrel then the lion chases the bear. If the squirrel chases the lion then the lion is kind. If someone is big then they chase the lion. If someone chases the bear then the bear is big. If someone chases the lion then the lion is kind. If someone is red then they visit the bear.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The squirrel does not chase the bear.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nSees($x, $y, bool) ::: Does x see y?\nVisits($x, $y, bool) ::: Does x visit y?\nChases($x, $y, bool) ::: Does x chase y?\nKind($x, bool) ::: Is x kind?\nRed($x, bool) ::: Is x red?\nBig($x, bool) ::: Is x big?\nFacts:\nSees(Bear, Lion, True) ::: The bear sees the lion.\nVisits(Bear, Lion, True) ::: The bear visits the lion.\nVisits(Bear, Squirrel, True) ::: The bear visits the squirrel.\nChases(Bear, Lion, True) ::: The lion chases the bear.\nChases(Lion, Mouse, True) ::: The lion chases the mouse.\nKind(Lion, True) ::: The lion is kind.\nSees(Lion, Squirrel, True) ::: The lion sees the squirrel.\nChases(Mouse, Bear, True) ::: The mouse chases the bear.\nVisits(Mouse, Lion, True) ::: The mouse visits the lion.\nYoung(Squirrel, True) ::: The squirrel is young.\nVisits(Squirrel, Lion, True) ::: The squirrel visits the lion.\nVisits(Squirrel, Mouse, True) ::: The squirrel visits the mouse.\nRules:\nSees($x, $y, True) && Kind($x, True) >>> Red($x, True) ::: If someone sees the lion and the lion is kind then they are red.\nVisits($x, $y, True) && Red($x, True) >>> Lion($x, True) ::: If someone visits the lion and they are red then the lion visits the squirrel.\nKind($x, True) >>> Sees($x, Lion, True) ::: If someone is kind then they see the lion.\nChases($x, $y, True) >>> Lion($x, True) ::: If the lion visits the squirrel then the lion chases the bear.\nChases($x, $y, True) && Squirrel($y, True) >>> Kind($x, True) ::: If the squirrel chases the lion then the lion is kind.\nBig($x, True) >>> Chases($x, Lion, True) ::: If someone is big then they chase the lion.\nChases($x, Bear, True) >>> Big($x, True) ::: If someone chases the bear then the bear is big.\nChases($x, Lion, True) >>> Kind($x, True) ::: If someone chases the lion then the lion is kind.\nVisits($x, Bear, True) >>> Red($x, True) ::: If someone is red then they visit the"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-74_Q9",
    "context": "The cat chases the rabbit. The mouse chases the cat. The mouse is red. The mouse is round. The rabbit is red. The rabbit sees the mouse. The squirrel chases the cat. The squirrel chases the mouse. The squirrel is kind. The squirrel sees the rabbit. If something is red then it sees the mouse. If the mouse sees the squirrel then the squirrel eats the cat. If something chases the squirrel and it is red then the squirrel eats the rabbit. If something eats the cat and it chases the cat then it sees the mouse. If something sees the mouse then it sees the squirrel. If something eats the mouse and it sees the mouse then the mouse sees the squirrel. If something eats the rabbit then it sees the rabbit. If something sees the squirrel and it sees the rabbit then it eats the squirrel.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The squirrel sees the mouse.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nRed($x, bool) ::: Is x red?\nRound($x, bool) ::: Is x round?\nSees($x, $y, bool) ::: Does x see y?\nEats($x, $y, bool) ::: Does x eat y?\nKind($x, bool) ::: Is x kind?\nFacts:\nChases(Cat, Rabbit, True) ::: The cat chases the rabbit.\nChases(Mouse, Cat, True) ::: The mouse chases the cat.\nRed(Mouse, True) ::: The mouse is red.\nRound(Mouse, True) ::: The mouse is round.\nRed(Rabbit, True) ::: The rabbit is red.\nSees(Mouse, Rabbit, True) ::: The rabbit sees the mouse.\nChases(Squirrel, Cat, True) ::: The squirrel chases the cat.\nChases(Squirrel, Mouse, True) ::: The squirrel chases the mouse.\nKind(Squirrel, True) ::: The squirrel is kind.\nSees(Squirrel, Rabbit, True) ::: The squirrel sees the rabbit.\nRules:\nRed($x, True) >>> Sees($x, Mouse, True) ::: If something is red then it sees the mouse.\nSees(Mouse, Squirrel, True) >>> Eats(Squirrel, Cat, True) ::: If the mouse sees the squirrel then the squirrel eats the cat.\nChases($x, Squirrel, True) && Red($x, True) >>> Eats(Squirrel, Rabbit, True) ::: If something chases the squirrel and it is red then the squirrel eats the rabbit.\nEats(Cat, $x, True) && Chases($x, Cat, True) >>> Sees($x, Mouse, True) ::: If something eats the cat and it chases the cat then it sees the mouse.\nSees($x, Mouse, True) >>> Sees($x, Squirrel, True) ::: If something sees the mouse then it sees the squirrel.\nEats(Mouse, $x, True) && Sees($x, Mouse, True) >>> Mouse(Squirrel, True) ::: If something eats the mouse and it sees the mouse then the mouse sees the squirrel.\nEats($x, Rabbit, True) >>> Sees($x, Rabbit, True) ::: If something eats the rabbit then it sees the rabbit.\nSees($x, Squirrel, True) && Sees($x, Rabbit, True) >>> Eats($x, Squirrel, True) ::: If something sees the squirrel and it sees the rabbit then it eats the squirrel.\n------"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-253_Q17",
    "context": "Bob is big. Bob is kind. Bob is nice. Charlie is kind. Charlie is young. Erin is young. Harry is furry. If Charlie is kind and Charlie is young then Charlie is furry. If someone is furry and rough then they are big. If someone is young and furry then they are rough. If someone is furry and big then they are nice. If someone is kind and nice then they are not cold.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Harry is not big.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nKind($x, bool) ::: Is x kind?\nNice($x, bool) ::: Is x nice?\nYoung($x, bool) ::: Is x young?\nFurry($x, bool) ::: Is x furry?\nRough($x, bool) ::: Is x rough?\nCold($x, bool) ::: Is x cold?\nFacts:\nBig(Bob, True) ::: Bob is big.\nKind(Bob, True) ::: Bob is kind.\nNice(Bob, True) ::: Bob is nice.\nKind(Charlie, True) ::: Charlie is kind.\nYoung(Charlie, True) ::: Charlie is young.\nYoung(Erin, True) ::: Erin is young.\nFurry(Harry, True) ::: Harry is furry.\nRules:\nYoung($x, True) && Furry($x, True) >>> Rough($x, True) ::: If someone is young and furry then they are rough.\nFurry($x, True) && Rough($x, True) >>> Big($x, True) ::: If someone is furry and rough then they are big.\nKind($x, True) && Nice($x, True) >>> Cold($x, False) ::: If someone is kind and nice then they are not cold.\nKind($x, True) && Young($x, True) >>> Furry($x, True) ::: If Charlie is kind and Charlie is young then Charlie is furry.\nFurry($x, True) && Big($x, True) >>> Nice($x, True) ::: If someone is furry and big then they are nice.\nQuery:\nBig(Harry, False) ::: Harry is not big.\n------\nProblem:\nBob is big. Bob is kind. Bob is nice. Charlie is kind. Charlie is young. Erin is young. Harry is furry. If Charlie is kind and Charlie is young then Charlie is furry. If someone is furry and rough then they are big. If someone is young and furry then they are rough. If someone is furry and big then they are nice. If someone is kind and nice then they are not cold.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Harry is not big.\n###\nPredicates:\nBig($x, bool) ::: Is x big?\nKind($x, bool) ::: Is x kind?\nNice($x, bool) ::: Is x nice?\nYoung($x, bool) ::: Is x young?\nFurry($x, bool) ::: Is x furry?\nRough($x, bool) ::: Is x rough?\nCold($x, bool) ::: Is x cold?\nFacts:\nBig(Bob, True) ::: Bob is"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-975_Q8",
    "context": "Anne is blue. Anne is nice. Bob is kind. Bob is nice. Fiona is blue. Fiona is furry. Fiona is kind. Fiona is nice. Fiona is smart. Gary is blue. Gary is furry. Gary is smart. Big, furry things are green. Kind, nice things are big. All smart, green things are kind. All nice things are furry. If Anne is kind and Anne is big then Anne is green. If Fiona is blue then Fiona is green. Furry, green things are smart. Furry things are green.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is not smart.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue($x, bool) ::: Is x blue?\nNice($x, bool) ::: Is x nice?\nKind($x, bool) ::: Is x kind?\nSmart($x, bool) ::: Is x smart?\nBig($x, bool) ::: Is x big?\nFurry($x, bool) ::: Is x furry?\nGreen($x, bool) ::: Is x green?\nFacts:\nBlue(Anne, True) ::: Anne is blue.\nNice(Anne, True) ::: Anne is nice.\nKind(Bob, True) ::: Bob is kind.\nNice(Bob, True) ::: Bob is nice.\nBlue(Fiona, True) ::: Fiona is blue.\nFurry(Fiona, True) ::: Fiona is furry.\nKind(Fiona, True) ::: Fiona is kind.\nNice(Fiona, True) ::: Fiona is nice.\nSmart(Fiona, True) ::: Fiona is smart.\nBlue(Gary, True) ::: Gary is blue.\nFurry(Gary, True) ::: Gary is furry.\nSmart(Gary, True) ::: Gary is smart.\nRules:\nBig($x, True) >>> Furry($x, True) ::: Big, furry things are green.\nKind($x, True) && Nice($x, True) >>> Big($x, True) ::: Kind, nice things are big.\nAll($x, True) >>> Kind($x, True) ::: All smart, green things are kind.\nAll($x, True) >>> Nice($x, True) ::: All nice things are furry.\nKind($x, True) && Anne($x, True) >>> Green($x, True) ::: If Anne is kind and Anne is big then Anne is green.\nBlue($x, True) >>> Green($x, True) ::: If Fiona is blue then Fiona is green.\nFurry($x, True) && Green($x, True) >>> Smart($x, True) ::: Furry, green things are smart.\nFurry($x, True) >>> Green($x, True) ::: Furry things are green.\nQuery:\nNot(Smart(Bob, True)) ::: Bob is not smart.\n------\nProblem:\nAnne is blue. Anne is nice. Bob is kind. Bob is nice. Fiona is blue. Fiona is furry. Fiona is kind. Fiona is nice. Fiona is smart. Gary is blue. Gary is furry. Gary is smart. Big, furry things are green. Kind, nice things are big. All smart, green things are kind. All nice things are furry. If Anne is kind and Anne is big then Anne is green. If Fiona is blue then Fiona is green. Furry, green things are smart. Furry things are green."
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-259_Q11",
    "context": "The bald eagle is big. The bald eagle sees the squirrel. The dog eats the mouse. The dog is not cold. The dog is not nice. The dog visits the mouse. The mouse is red. The squirrel sees the bald eagle. The squirrel visits the bald eagle. The squirrel visits the dog. If something sees the mouse then it visits the mouse. If something eats the dog then it visits the mouse. If something eats the squirrel then it visits the mouse. If something visits the dog then the dog visits the bald eagle. If something is big and it visits the mouse then the mouse visits the squirrel. If something visits the bald eagle then the bald eagle sees the mouse. If something is big then it visits the bald eagle. If something visits the squirrel then it is big. If something eats the bald eagle and it sees the squirrel then it does not see the bald eagle.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The mouse visits the bald eagle.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nCold($x, bool) ::: Is x cold?\nNice($x, bool) ::: Is x nice?\nVisits($x, $y, bool) ::: Does x visit y?\nEats($x, $y, bool) ::: Does x eat y?\nSees($x, $y, bool) ::: Does x see y?\nFacts:\nBig(BaldEagle, True) ::: The bald eagle is big.\nSees(BaldEagle, Squirrel, True) ::: The bald eagle sees the squirrel.\nEats(Dog, Mouse, True) ::: The dog eats the mouse.\nCold(Dog, False) ::: The dog is not cold.\nNice(Dog, False) ::: The dog is not nice.\nVisits(Dog, Mouse, True) ::: The dog visits the mouse.\nRed(Mouse, True) ::: The mouse is red.\nSees(Squirrel, BaldEagle, True) ::: The squirrel sees the bald eagle.\nVisits(Squirrel, BaldEagle, True) ::: The squirrel visits the bald eagle.\nVisits(Squirrel, Dog, True) ::: The squirrel visits the dog.\nRules:\nIf something sees the mouse then it visits the mouse. ::: If something sees the mouse then it visits the mouse.\nIf something eats the dog then it visits the mouse. ::: If something eats the dog then it visits the mouse.\nIf something eats the squirrel then it visits the mouse. ::: If something eats the squirrel then it visits the mouse.\nIf something visits the dog then the dog visits the bald eagle. ::: If something visits the dog then the dog visits the bald eagle.\nIf something is big and it visits the mouse then the mouse visits the squirrel. ::: If something is big and it visits the mouse then the mouse visits the squirrel.\nIf something visits the bald eagle then the bald eagle sees the mouse. ::: If something visits the bald eagle then the bald eagle sees the mouse.\nIf something is big then it visits the bald eagle. ::: If something is big then it visits the bald eagle.\nIf something visits the squirrel then it is big. ::: If something visits the squirrel then it is big.\nIf something eats the bald eagle and it sees the squirrel then it does not see the bald eagle. ::: If something eats the bald eagle and it sees the squirrel then it does not see the bald eagle.\nQuery:\nVisits(Mouse, BaldEagle, True) ::: The mouse visits the bald eagle.\n------\nProblem:\nThe dog is big. The dog is furry. The dog is green. The dog is red. The dog is rough."
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-163_Q1",
    "context": "Anne is big. Anne is smart. Bob is big. Bob is round. Bob is white. Erin is cold. Erin is rough. Erin is smart. Gary is cold. Gary is nice. Big people are white. Nice, big people are smart. Nice, big people are white. All white, cold people are smart. All white, round people are nice. All big, cold people are rough. If someone is rough then they are nice. All white people are round. All nice people are cold.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is cold.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nSmart($x, bool) ::: Is x smart?\nRound($x, bool) ::: Is x round?\nWhite($x, bool) ::: Is x white?\nCold($x, bool) ::: Is x cold?\nNice($x, bool) ::: Is x nice?\nFacts:\nBig(Anne, True) ::: Anne is big.\nSmart(Anne, True) ::: Anne is smart.\nBig(Bob, True) ::: Bob is big.\nRound(Bob, True) ::: Bob is round.\nWhite(Bob, True) ::: Bob is white.\nCold(Erin, True) ::: Erin is cold.\nRough(Erin, True) ::: Erin is rough.\nSmart(Erin, True) ::: Erin is smart.\nCold(Gary, True) ::: Gary is cold.\nNice(Gary, True) ::: Gary is nice.\nRules:\nBig($x, True) >>> White($x, True) ::: Big people are white.\nNice($x, True) && Big($x, True) >>> Smart($x, True) ::: Nice, big people are smart.\nNice($x, True) && Big($x, True) >>> White($x, True) ::: Nice, big people are white.\nWhite($x, True) >>> Cold($x, True) ::: All white, cold people are smart.\nWhite($x, True) >>> Round($x, True) ::: All white, round people are nice.\nBig($x, True) && Cold($x, True) >>> Rough($x, True) ::: All big, cold people are rough.\nRough($x, True) >>> Nice($x, True) ::: If someone is rough then they are nice.\nWhite($x, True) >>> Round($x, True) ::: All white people are round.\nNice($x, True) >>> Cold($x, True) ::: All nice people are cold.\nQuery:\nCold(Gary, True) ::: Gary is cold.\n------\nProblem:\nAnne is big. Anne is smart. Anne is white. Bob is big. Bob is round. Bob is white. Erin is cold. Erin is rough. Erin is smart. Gary is cold. Gary is nice. Big people are white. Nice, big people are smart. Nice, big people are white. All white, cold people are smart. All white, round people are nice. All big, cold people are rough. If someone is rough then they are nice. All white people are round. All nice people are cold.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Gary is cold.\n###\nPredicates:\nBig($x, bool) ::: Is x big?\nSmart($x, bool) :::"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-752_Q10",
    "context": "The cat is blue. The cat is nice. The cat does not like the dog. The cat visits the rabbit. The dog is big. The dog is not cold. The dog likes the squirrel. The rabbit eats the cat. The rabbit eats the squirrel. The rabbit does not like the dog. The rabbit visits the cat. The rabbit does not visit the dog. The rabbit visits the squirrel. The squirrel eats the rabbit. The squirrel is cold. The squirrel visits the cat. If something visits the rabbit then it likes the rabbit. If something is rough and it visits the dog then it likes the squirrel. If something eats the cat then it does not visit the dog. If something likes the rabbit then the rabbit is rough. If the rabbit is rough then the rabbit eats the dog. If the rabbit is big and the rabbit likes the dog then the rabbit does not eat the dog. If something visits the dog then it eats the dog. If something is rough and it eats the dog then it visits the rabbit.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The rabbit does not visit the rabbit.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue($x, bool) ::: Is x blue?\nNice($x, bool) ::: Is x nice?\nLikes($x, $y, bool) ::: Does x like y?\nVisits($x, $y, bool) ::: Does x visit y?\nEats($x, $y, bool) ::: Does x eat y?\nBig($x, bool) ::: Is x big?\nCold($x, bool) ::: Is x cold?\nRough($x, bool) ::: Is x rough?\nFacts:\nBlue(Cat, True) ::: The cat is blue.\nNice(Cat, True) ::: The cat is nice.\nLikes(Cat, Dog, False) ::: The cat does not like the dog.\nVisits(Cat, Rabbit, True) ::: The cat visits the rabbit.\nBig(Dog, True) ::: The dog is big.\nCold(Dog, False) ::: The dog is not cold.\nLikes(Dog, Squirrel, True) ::: The dog likes the squirrel.\nEats(Rabbit, Cat, True) ::: The rabbit eats the cat.\nEats(Rabbit, Squirrel, True) ::: The rabbit eats the squirrel.\nLikes(Rabbit, Dog, False) ::: The rabbit does not like the dog.\nVisits(Rabbit, Cat, True) ::: The rabbit visits the cat.\nVisits(Rabbit, Dog, False) ::: The rabbit does not visit the dog.\nVisits(Rabbit, Squirrel, True) ::: The rabbit visits the squirrel.\nEats(Squirrel, Rabbit, True) ::: The squirrel eats the rabbit.\nCold(Squirrel, True) ::: The squirrel is cold.\nVisits(Squirrel, Cat, True) ::: The squirrel visits the cat.\nRules:\nVisits($x, $y, True) >>> Likes($x, $y, True) ::: If something visits the rabbit then it likes the rabbit.\nFurry($x, True) && Visits($x, Dog) >>> Likes($x, Squirrel, True) ::: If something is rough and it visits the dog then it likes the squirrel.\nEats($x, Cat) >>> Visits($x, Dog) ::: If something eats the cat then it does not visit the dog.\nLikes($x, Rabbit, True) >>> Rough($x, True) ::: If the rabbit is rough then the rabbit eats the dog.\nBig($x, True) && Likes($x, Dog, True) >>> Visits($x, Dog, False) ::: If the rabbit is big and the rabbit likes the dog then the rabbit does not eat the"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-989_Q7",
    "context": "The bald eagle is big. The bald eagle is cold. The bald eagle needs the mouse. The bald eagle needs the rabbit. The bald eagle sees the rabbit. The cow is rough. The cow needs the bald eagle. The cow sees the bald eagle. The cow sees the mouse. The mouse eats the rabbit. The mouse is big. The mouse needs the cow. The mouse needs the rabbit. The rabbit eats the bald eagle. The rabbit eats the mouse. The rabbit is cold. All big things are green. If the rabbit eats the cow then the cow needs the rabbit. Green things are rough. If something sees the mouse then it is big. If something needs the rabbit then the rabbit is nice. If something needs the bald eagle then the bald eagle is nice. If something needs the rabbit and it is rough then the rabbit is big. If something eats the cow then it is green.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The rabbit is big.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nCold($x, bool) ::: Is x cold?\nNeeds($x, $y, bool) ::: Does x need y?\nSees($x, $y, bool) ::: Does x see y?\nEats($x, $y, bool) ::: Does x eat y?\nRough($x, bool) ::: Is x rough?\nGreen($x, bool) ::: Is x green?\nNice($x, bool) ::: Is x nice?\nFacts:\nBig(BaldEagle, True) ::: The bald eagle is big.\nCold(BaldEagle, True) ::: The bald eagle is cold.\nNeeds(BaldEagle, Mouse, True) ::: The bald eagle needs the mouse.\nNeeds(BaldEagle, Rabbit, True) ::: The bald eagle needs the rabbit.\nSees(BaldEagle, Rabbit, True) ::: The bald eagle sees the rabbit.\nRough(Cow, True) ::: The cow is rough.\nNeeds(Cow, BaldEagle, True) ::: The cow needs the bald eagle.\nSees(Cow, BaldEagle, True) ::: The cow sees the bald eagle.\nSees(Cow, Mouse, True) ::: The cow sees the mouse.\nEats(Mouse, Rabbit, True) ::: The mouse eats the rabbit.\nBig(Mouse, True) ::: The mouse is big.\nNeeds(Mouse, Cow, True) ::: The mouse needs the cow.\nNeeds(Mouse, Rabbit, True) ::: The mouse needs the rabbit.\nEats(Rabbit, BaldEagle, True) ::: The rabbit eats the bald eagle.\nEats(Rabbit, Mouse, True) ::: The rabbit eats the mouse.\nCold(Rabbit, True) ::: The rabbit is cold.\nRules:\nAll($x, $y, $z, bool) >>> Green($x, True) ::: All big things are green.\nNeeds($x, $y, True) >>> Needs($y, $x, True) ::: If the rabbit eats the cow then the cow needs the rabbit.\nGreen($x, True) >>> Rough($x, True) ::: Green things are rough.\nSees($x, $y, True) >>> Big($x, True) ::: If something sees the mouse then it is big.\nNeeds($x, $y, True) >>> Nice($y, True) ::: If something needs the rabbit then the rabbit is nice.\nNeeds($x, $y, True) >>> Nice($x, True) ::: If something needs the bald eagle then the bald eagle is nice.\nNeeds($x, $y, True) && R"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-619_Q4",
    "context": "The cat chases the cow. The cat is blue. The cat needs the lion. The cat does not visit the cow. The cat visits the squirrel. The cow chases the cat. The cow is big. The cow is blue. The lion does not chase the cat. The lion does not chase the squirrel. The lion is big. The lion does not need the cow. The lion visits the cow. The squirrel chases the cow. The squirrel is blue. The squirrel needs the cow. If something needs the cat then it visits the cat. If something chases the cat and the cat visits the cow then the cow does not visit the cat. If something chases the squirrel and it visits the lion then the squirrel chases the cow. If the cow is not big then the cow does not chase the squirrel. If something visits the cat then the cat is nice. If the squirrel chases the cow then the cow does not need the squirrel. If something is nice then it needs the cow. If something is kind and not big then it visits the squirrel. If something needs the cow then it needs the cat.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The squirrel does not need the cat.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nNeeds($x, $y, bool) ::: Does x need y?\nVisits($x, $y, bool) ::: Does x visit y?\nIs($x, $y, bool) ::: Is x y?\nKind($x, bool) ::: Is x kind?\nBig($x, bool) ::: Is x big?\nNice($x, bool) ::: Is x nice?\nFacts:\nChases(Cat, Cow, True) ::: The cat chases the cow.\nIs(Cat, Blue, True) ::: The cat is blue.\nNeeds(Cat, Lion, True) ::: The cat needs the lion.\nNot(Visits(Cat, Cow, True)) ::: The cat does not visit the cow.\nVisits(Cat, Squirrel, True) ::: The cat visits the squirrel.\nChases(Cow, Cat, True) ::: The cow chases the cat.\nIs(Cow, Big, True) ::: The cow is big.\nIs(Cow, Blue, True) ::: The cow is blue.\nNot(Chases(Lion, Cat, True)) ::: The lion does not chase the cat.\nNot(Chases(Lion, Squirrel, True)) ::: The lion does not chase the squirrel.\nIs(Lion, Big, True) ::: The lion is big.\nNot(Needs(Lion, Cow, True)) ::: The lion does not need the cow.\nVisits(Lion, Cow, True) ::: The lion visits the cow.\nChases(Squirrel, Cow, True) ::: The squirrel chases the cow.\nIs(Squirrel, Blue, True) ::: The squirrel is blue.\nNeeds(Squirrel, Cow, True) ::: The squirrel needs the cow.\nRules:\nIf something needs the cat then it visits the cat. ::: If something needs the cat then it visits the cat.\nIf something chases the cat and the cat visits the cow then the cow does not visit the cat. ::: If something chases the cat and the cat visits the cow then the cow does not visit the cat.\nIf something chases the squirrel and it visits the lion then the squirrel chases the cow. ::: If something chases the squirrel and it visits the lion then the squirrel chases the cow.\nIf the cow is not big then the cow does not chase the squirrel. ::: If the cow is not big then the cow does not chase the squirrel.\nIf something visits the cat then the cat is nice. ::: If something visits the cat then the cat is nice.\nIf the squirrel chases the cow then the cow does not need the squirrel. ::: If the squirrel chases the cow then the cow does not need the"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1369_Q10",
    "context": "Dave is furry. Dave is green. Dave is kind. Dave is smart. Erin is kind. Erin is quiet. Fiona is green. Fiona is quiet. Fiona is smart. Gary is kind. Gary is white. If something is green and smart then it is quiet. If Erin is smart then Erin is quiet. All kind, furry things are green. All furry things are kind. If something is kind then it is rough. All kind, rough things are smart. If something is quiet and kind then it is white. If something is white and smart then it is furry.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Erin is not green.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nFurry($x, bool) ::: Is x furry?\nGreen($x, bool) ::: Is x green?\nKind($x, bool) ::: Is x kind?\nQuiet($x, bool) ::: Is x quiet?\nRough($x, bool) ::: Is x rough?\nSmart($x, bool) ::: Is x smart?\nWhite($x, bool) ::: Is x white?\nFacts:\nFurry(Dave, True) ::: Dave is furry.\nGreen(Dave, True) ::: Dave is green.\nKind(Dave, True) ::: Dave is kind.\nSmart(Dave, True) ::: Dave is smart.\nKind(Erin, True) ::: Erin is kind.\nQuiet(Erin, True) ::: Erin is quiet.\nGreen(Fiona, True) ::: Fiona is green.\nQuiet(Fiona, True) ::: Fiona is quiet.\nSmart(Fiona, True) ::: Fiona is smart.\nKind(Gary, True) ::: Gary is kind.\nWhite(Gary, True) ::: Gary is white.\nRules:\nGreen($x, True) && Smart($x, True) >>> Quiet($x, True) ::: If something is green and smart then it is quiet.\nKind($x, True) && Smart($x, True) >>> Quiet($x, True) ::: If Erin is smart then Erin is quiet.\nKind($x, True) && Furry($x, True) >>> Green($x, True) ::: All kind, furry things are green.\nFurry($x, True) >>> Kind($x, True) ::: All furry things are kind.\nKind($x, True) >>> Rough($x, True) ::: If something is kind then it is rough.\nKind($x, True) && Rough($x, True) >>> Smart($x, True) ::: All kind, rough things are smart.\nQuiet($x, True) && Kind($x, True) >>> White($x, True) ::: If something is quiet and kind then it is white.\nWhite($x, True) && Smart($x, True) >>> Furry($x, True) ::: If something is white and smart then it is furry.\n------\nProblem:\nDave is furry. Dave is green. Dave is kind. Dave is smart. Erin is kind. Erin is quiet. Fiona is green. Fiona is quiet. Fiona is smart. Gary is kind. Gary is white. If something is green and smart then it is quiet. If Erin is smart then Erin is quiet. All kind, furry things are green. All furry things are kind. If something is kind then it is rough. All kind, rough things are smart. If something is quiet and kind then it is white. If something is white and smart then it is furry"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-275_Q20",
    "context": "Anne is big. Anne is not furry. Anne is green. Anne is not kind. Anne is quiet. Anne is round. Charlie is big. Charlie is furry. Dave is cold. Dave is quiet. Fiona is quiet. Kind things are not furry. If Dave is furry then Dave is cold. Cold things are green. All quiet, green things are round. If Fiona is round then Fiona is kind. All quiet things are cold. All furry things are not cold.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Dave is big.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nFurry($x, bool) ::: Is x furry?\nGreen($x, bool) ::: Is x green?\nKind($x, bool) ::: Is x kind?\nQuiet($x, bool) ::: Is x quiet?\nRound($x, bool) ::: Is x round?\nCold($x, bool) ::: Is x cold?\nFacts:\nBig(Anne, True) ::: Anne is big.\nFurry(Anne, False) ::: Anne is not furry.\nGreen(Anne, True) ::: Anne is green.\nKind(Anne, False) ::: Anne is not kind.\nQuiet(Anne, True) ::: Anne is quiet.\nRound(Anne, True) ::: Anne is round.\nBig(Charlie, True) ::: Charlie is big.\nFurry(Charlie, True) ::: Charlie is furry.\nCold(Dave, True) ::: Dave is cold.\nQuiet(Dave, True) ::: Dave is quiet.\nQuiet(Fiona, True) ::: Fiona is quiet.\nKind(Fiona, False) ::: Fiona is not kind.\nRules:\nKind($x, True) >>> Furry($x, False) ::: Kind things are not furry.\nDave(Furry($x, True)) >>> Cold($x, True) ::: If Dave is furry then Dave is cold.\nCold($x, True) >>> Green($x, True) ::: Cold things are green.\nQuiet($x, True) && Green($x, True) >>> Round($x, True) ::: All quiet, green things are round.\nQuiet($x, True) >>> Cold($x, True) ::: All quiet things are cold.\nFurry($x, True) >>> Cold($x, False) ::: All furry things are not cold.\nQuery:\nBig(Dave, True) ::: Dave is big.\n------\nProblem:\nAnne is big. Anne is not furry. Anne is green. Anne is not kind. Anne is quiet. Anne is round. Charlie is big. Charlie is furry. Dave is cold. Dave is quiet. Fiona is quiet. Kind things are not furry. If Dave is furry then Dave is cold. Cold things are green. All quiet, green things are round. If Fiona is round then Fiona is kind. All quiet things are cold. All furry things are not cold.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Fiona is cold.\n###\nPredicates:\nBig($x, bool) ::: Is x big?\nFurry($x, bool) ::: Is x furry?\nGreen($x, bool) ::: Is x green?\nKind($x, bool) ::: Is x kind?"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-640_Q18",
    "context": "The bear is kind. The bear visits the mouse. The cow sees the lion. The cow visits the mouse. The lion is round. The lion sees the bear. The lion visits the bear. The lion visits the mouse. The mouse needs the bear. The mouse sees the bear. The mouse sees the cow. If something needs the bear then it is green. If the bear sees the lion then the lion is big. If something sees the mouse and the mouse sees the cow then the mouse needs the cow. If something needs the cow then it is round. If something is green then it sees the mouse. If something is green then it visits the bear. If something sees the mouse and it sees the bear then the bear is green. If something sees the cow and it is round then the cow visits the lion. If something is blue and it visits the cow then the cow sees the bear.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cow sees the mouse.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nKind($x, bool) ::: Is x kind?\nVisits($x, $y, bool) ::: Does x visit y?\nSees($x, $y, bool) ::: Does x see y?\nNeeds($x, $y, bool) ::: Does x need y?\nRound($x, bool) ::: Is x round?\nBig($x, bool) ::: Is x big?\nGreen($x, bool) ::: Is x green?\nBlue($x, bool) ::: Is x blue?\nFacts:\nKind(Bear, True) ::: The bear is kind.\nVisits(Bear, Mouse, True) ::: The bear visits the mouse.\nSees(Cow, Lion, True) ::: The cow sees the lion.\nVisits(Cow, Mouse, True) ::: The cow visits the mouse.\nRound(Lion, True) ::: The lion is round.\nSees(Lion, Bear, True) ::: The lion sees the bear.\nVisits(Lion, Bear, True) ::: The lion visits the bear.\nVisits(Lion, Mouse, True) ::: The lion visits the mouse.\nNeeds(Mouse, Bear, True) ::: The mouse needs the bear.\nSees(Mouse, Bear, True) ::: The mouse sees the bear.\nSees(Mouse, Cow, True) ::: The mouse sees the cow.\nRules:\nKind($x, True) >>> Green($x, True) ::: If something needs the bear then it is green.\nSees($x, Bear, True) >>> Big($x, True) ::: If the bear sees the lion then the lion is big.\nSees($x, Mouse) && Sees($x, Cow) >>> Needs($x, Cow, True) ::: If something sees the mouse and the mouse sees the cow then the mouse needs the cow.\nNeeds($x, Cow, True) >>> Round($x, True) ::: If something needs the cow then it is round.\nGreen($x, True) >>> Sees($x, Mouse) ::: If something is green then it sees the mouse.\nGreen($x, True) >>> Visits($x, Bear, True) ::: If something is green then it visits the bear.\nSees($x, Mouse) && Sees($x, Bear) >>> Green($x, True) ::: If something sees the mouse and it sees the bear then the bear is green.\nSees($x, Cow) && Round($x, True) >>> Visits($x, Lion, True) ::: If something sees the cow and it is round then the cow visits the lion.\nBlue($x, True) && Visits($x, Cow, True) >>> Sees($x, Bear, True) ::: If something is blue and it visits the cow then the cow sees the bear.\nQuery:\nVisits(Cow, Mouse, True) ::: The cow sees the mouse.\n------"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-161_Q2",
    "context": "The cat chases the mouse. The cat eats the tiger. The cat is blue. The cat needs the tiger. The dog is green. The dog is round. The mouse chases the dog. The mouse eats the cat. The mouse needs the cat. The tiger chases the mouse. The tiger is green. The tiger is round. If someone needs the tiger then the tiger eats the cat. If someone is round then they eat the dog. If the cat eats the tiger and the tiger eats the cat then the tiger needs the dog. If someone eats the mouse then they chase the tiger. If someone needs the dog then they need the mouse. If someone is blue then they are green. If someone needs the mouse and the mouse chases the dog then the dog eats the mouse.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cat does not chase the mouse.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nEats($x, $y, bool) ::: Does x eat y?\nNeeds($x, $y, bool) ::: Does x need y?\nBlue($x, bool) ::: Is x blue?\nGreen($x, bool) ::: Is x green?\nRound($x, bool) ::: Is x round?\nFacts:\nChases(Cat, Mouse, True) ::: The cat chases the mouse.\nEats(Cat, Tiger, True) ::: The cat eats the tiger.\nBlue(Cat, True) ::: The cat is blue.\nNeeds(Cat, Tiger, True) ::: The cat needs the tiger.\nGreen(Dog, True) ::: The dog is green.\nRound(Dog, True) ::: The dog is round.\nChases(Mouse, Dog, True) ::: The mouse chases the dog.\nEats(Mouse, Cat, True) ::: The mouse eats the cat.\nNeeds(Mouse, Cat, True) ::: The mouse needs the cat.\nChases(Tiger, Mouse, True) ::: The tiger chases the mouse.\nGreen(Tiger, True) ::: The tiger is green.\nRound(Tiger, True) ::: The tiger is round.\nRules:\nNeeds($x, $y, True) >>> Eats($x, $y, True) ::: If someone needs the tiger then the tiger eats the cat.\nRound($x, True) >>> Eats($x, Dog, True) ::: If someone is round then they eat the dog.\nEats($x, Tiger) && Eats(Tiger, $y) >>> Needs($x, Dog, True) ::: If the cat eats the tiger and the tiger eats the cat then the tiger needs the dog.\nEats($x, $y) >>> Chases($x, Tiger, True) ::: If someone eats the mouse then they chase the tiger.\nNeeds($x, Dog) >>> Needs($x, Mouse, True) ::: If someone needs the dog then they need the mouse.\nBlue($x, True) >>> Green($x, True) ::: If someone is blue then they are green.\nChases($x, Mouse) && Chases(Mouse, Dog) >>> Eats($x, Dog, True) ::: If someone needs the mouse and the mouse chases the dog then the dog eats the mouse.\nQuery:\nChases(Cat, Mouse, False) ::: The cat does not chase the mouse.\n------\nProblem:\nThe cat chases the mouse. The cat eats the tiger. The cat is blue. The cat needs the tiger. The dog is green. The dog is round. The mouse chases the dog. The mouse eats the cat. The mouse needs the cat. The tiger"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-566_Q21",
    "context": "Anne is not kind. Anne is smart. Anne is white. Bob is green. Bob is nice. Fiona is nice. Gary is red. If someone is red and nice then they are rough. If Fiona is red and Fiona is rough then Fiona is kind. Red people are nice. Rough people are nice. If Gary is red and Gary is smart then Gary is white. Kind people are smart. If someone is green and not nice then they are smart. Rough people are kind. If someone is nice and white then they are kind.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Anne is not green.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nKind($x, bool) ::: Is x kind?\nSmart($x, bool) ::: Is x smart?\nWhite($x, bool) ::: Is x white?\nGreen($x, bool) ::: Is x green?\nNice($x, bool) ::: Is x nice?\nRough($x, bool) ::: Is x rough?\nRules:\nNot(Kind($x, True)) >>> Smart($x, True) ::: Anne is not kind.\nKind($x, True) >>> Smart($x, True) ::: Kind people are smart.\nNot(Kind($x, True)) >>> White($x, True) ::: Anne is not white.\nNot(Kind($x, True)) >>> Green($x, True) ::: Anne is not green.\nNot(Kind($x, True)) >>> Nice($x, True) ::: Anne is not nice.\nSmart($x, True) >>> White($x, True) ::: Anne is smart.\nGreen($x, True) >>> Nice($x, True) ::: Bob is green.\nNice($x, True) >>> Green($x, True) ::: Bob is nice.\nRed($x, True) >>> Nice($x, True) ::: Gary is red.\nRed($x, True) >>> Nice($x, True) ::: Gary is nice.\nRed($x, True) && Nice($x, True) >>> Rough($x, True) ::: If someone is red and nice then they are rough.\nRed($x, True) && Nice($x, True) >>> Kind($x, True) ::: If Fiona is red and Fiona is rough then Fiona is kind.\nRed($x, True) && Rough($x, True) >>> Kind($x, True) ::: Red people are nice.\nRough($x, True) >>> Nice($x, True) ::: Rough people are nice.\nRed($x, True) && Nice($x, True) >>> Smart($x, True) ::: If Gary is red and Gary is smart then Gary is white.\nNot(Kind($x, True)) >>> Smart($x, True) ::: Kind people are smart.\nNot(Nice($x, True)) >>> Smart($x, True) ::: If someone is green and not nice then they are smart.\nRough($x, True) >>> Kind($x, True) ::: Rough people are kind.\nNice($x, True) && White($x, True) >>> Kind($x, True) ::: If someone is nice and white then they are kind.\nQuery:\nNot(Green(Anne, True)) ::: Anne is not green.\n------\nProblem:\nAnne is not kind. Anne is smart. Anne is white. Bob is green. Bob is nice. Fiona is nice. Gary is red. If someone is red and nice then they are rough. If Fiona is red and Fiona is rough then Fiona is kind. Red people are nice. Rough"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-281_Q9",
    "context": "Anne is round. Bob is round. Bob is smart. Dave is red. Dave is round. Gary is furry. Gary is kind. Gary is nice. Gary is red. Gary is round. Furry people are kind. All kind people are round. If Anne is red then Anne is kind. If someone is round and smart then they are nice. Round people are red. Furry people are round. Round, furry people are smart. Red, kind people are furry.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Anne is smart.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRound($x, bool) ::: Is x round?\nSmart($x, bool) ::: Is x smart?\nRed($x, bool) ::: Is x red?\nKind($x, bool) ::: Is x kind?\nNice($x, bool) ::: Is x nice?\nFurry($x, bool) ::: Is x furry?\nRules:\nRound($x, True) >>> Furry($x, True) ::: Furry people are round.\nRound($x, True) >>> Kind($x, True) ::: All kind people are round.\nRed($x, True) >>> Kind($x, True) ::: If Anne is red then Anne is kind.\nRound($x, True) && Smart($x, True) >>> Nice($x, True) ::: If someone is round and smart then they are nice.\nRound($x, True) >>> Red($x, True) ::: Round people are red.\nFurry($x, True) >>> Round($x, True) ::: Furry people are round.\nRound($x, True) && Furry($x, True) >>> Smart($x, True) ::: Round, furry people are smart.\nRed($x, True) && Kind($x, True) >>> Furry($x, True) ::: Red, kind people are furry.\nQuery:\nSmart(Anne, True) ::: Anne is smart.\n------\nProblem:\nAnne is furry. Anne is green. Anne is red. Anne is rough. Anne is white. Bob is furry. Bob is green. Bob is red. Bob is rough. Bob is white. Cindy is furry. Cindy is green. Cindy is red. Cindy is rough. Cindy is white. Derek is furry. Derek is green. Derek is red. Derek is rough. Derek is white. Erin is furry. Erin is green. Erin is red. Erin is rough. Erin is white. Fiona is furry. Fiona is green. Fiona is red. Fiona is rough. Fiona is white. Harry is furry. Harry is green. Harry is red. Harry is rough. Harry is white. If Anne is green then Anne is rough. If Anne is green then Anne is white. If Anne is green then Anne is furry. If Anne is green then Anne is red. If Anne is green then Anne is rough. If Anne is green then Anne is white. If Anne is green then Anne is furry. If Anne is green then Anne is red. If Anne is green then Anne is rough. If Anne is green then Anne is white. If Anne is green then Anne is furry. If Anne is green then Anne is red. If Anne is green then Anne is rough. If Anne is green then Anne is white. If Anne is green then Anne is furry. If Anne is green then Anne is red. If Anne is green then Anne is rough. If Anne is green then Anne is white. If Anne"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-1011_Q11",
    "context": "The dog is big. The dog is green. The dog sees the tiger. The lion chases the tiger. The lion is red. The lion needs the rabbit. The lion needs the tiger. The lion sees the tiger. The rabbit needs the lion. The tiger chases the lion. The tiger is green. The tiger sees the lion. If something needs the lion then it needs the tiger. If something sees the lion and it needs the tiger then the tiger sees the dog. If something is green then it chases the tiger. If something sees the dog and the dog sees the tiger then the tiger is rough. If something is rough then it needs the lion. If something needs the dog and it needs the lion then it chases the rabbit. If something sees the tiger then it needs the dog. If something needs the tiger then it sees the dog.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The tiger sees the dog.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nGreen($x, bool) ::: Is x green?\nRed($x, bool) ::: Is x red?\nRough($x, bool) ::: Is x rough?\nNeeds($x, $y, bool) ::: Does x need y?\nSees($x, $y, bool) ::: Does x see y?\nFacts:\nBig(Dog, True) ::: The dog is big.\nGreen(Dog, True) ::: The dog is green.\nSees(Dog, Tiger, True) ::: The dog sees the tiger.\nChases(Lion, Tiger, True) ::: The lion chases the tiger.\nRed(Lion, True) ::: The lion is red.\nNeeds(Lion, Rabbit, True) ::: The lion needs the rabbit.\nNeeds(Lion, Tiger, True) ::: The lion needs the tiger.\nSees(Lion, Tiger, True) ::: The lion sees the tiger.\nNeeds(Rabbit, Lion, True) ::: The rabbit needs the lion.\nChases(Tiger, Lion, True) ::: The tiger chases the lion.\nGreen(Tiger, True) ::: The tiger is green.\nSees(Tiger, Lion, True) ::: The tiger sees the lion.\nRules:\nNeeds($x, $y, True) >>> Needs($x, Tiger, True) ::: If something needs the lion then it needs the tiger.\nSees($x, Lion, True) && Needs($x, Tiger, True) >>> Tiger($x, True) ::: If something sees the lion and it needs the tiger then the tiger sees the dog.\nGreen($x, True) >>> Chases($x, Tiger, True) ::: If something is green then it chases the tiger.\nSees($x, Dog) && Sees(Dog, Tiger) >>> Tiger($x, True) ::: If something sees the dog and the dog sees the tiger then the tiger is rough.\nRough($x, True) >>> Needs($x, Lion, True) ::: If something is rough then it needs the lion.\nNeeds($x, Dog) && Needs($x, Lion) >>> Chases($x, Rabbit, True) ::: If something needs the dog and it needs the lion then it chases the rabbit.\nNeeds($x, Tiger) >>> Sees($x, Dog) ::: If something sees the tiger then it needs the dog.\nSees($x, Tiger) >>> Needs($x, Dog) ::: If something needs the tiger then it sees the dog.\nQuery:\nSees(Tiger, Dog, True) ::: The tiger sees the dog.\n------\nProblem:\nThe dog is big. The"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1043_Q3",
    "context": "Dave is red. Fiona is cold. Fiona is red. Fiona is round. Fiona is white. Gary is cold. Gary is nice. Gary is red. Harry is cold. Harry is nice. Harry is red. Harry is round. Harry is white. Harry is young. If Harry is young then Harry is red. If something is young then it is smart. Cold, young things are round. All white things are cold. Smart things are young. Smart things are white. If something is red then it is young. All smart things are nice.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Dave is young.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRed($x, bool) ::: Is x red?\nCold($x, bool) ::: Is x cold?\nRound($x, bool) ::: Is x round?\nWhite($x, bool) ::: Is x white?\nYoung($x, bool) ::: Is x young?\nSmart($x, bool) ::: Is x smart?\nNice($x, bool) ::: Is x nice?\nFacts:\nRed(Dave, True) ::: Dave is red.\nCold(Fiona, True) ::: Fiona is cold.\nRed(Fiona, True) ::: Fiona is red.\nRound(Fiona, True) ::: Fiona is round.\nWhite(Fiona, True) ::: Fiona is white.\nCold(Gary, True) ::: Gary is cold.\nNice(Gary, True) ::: Gary is nice.\nRed(Gary, True) ::: Gary is red.\nCold(Harry, True) ::: Harry is cold.\nNice(Harry, True) ::: Harry is nice.\nRed(Harry, True) ::: Harry is red.\nRound(Harry, True) ::: Harry is round.\nWhite(Harry, True) ::: Harry is white.\nYoung(Harry, True) ::: Harry is young.\nRules:\nYoung($x, True) >>> Red($x, True) ::: If Harry is young then Harry is red.\nYoung($x, True) >>> Smart($x, True) ::: If something is young then it is smart.\nCold($x, True) && Young($x, True) >>> Round($x, True) ::: Cold, young things are round.\nWhite($x, True) >>> Cold($x, True) ::: All white things are cold.\nSmart($x, True) >>> Young($x, True) ::: Smart things are young.\nSmart($x, True) >>> White($x, True) ::: Smart things are white.\nRed($x, True) >>> Young($x, True) ::: If something is red then it is young.\nSmart($x, True) >>> Nice($x, True) ::: All smart things are nice.\nQuery:\nYoung(Dave, True) ::: Dave is young.\n------\nProblem:\nDave is red. Fiona is cold. Fiona is red. Fiona is round. Fiona is white. Gary is cold. Gary is nice. Gary is red. Harry is cold. Harry is nice. Harry is red. Harry is round. Harry is white. Harry is young. If Harry is young then Harry is red. If something is young then it is smart. Cold, young things are round. All white things are cold. Smart things are young. Smart things are white. If something is red then it is young. All smart things are nice.\nQuestion:\nBased on the above information, is the following statement true, false,"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1298_Q8",
    "context": "Anne is green. Anne is nice. Anne is red. Anne is smart. Anne is white. Bob is green. Bob is nice. Bob is round. Bob is white. Dave is round. Gary is green. Gary is nice. Gary is red. Gary is white. Green, red things are smart. Round things are cold. Cold, smart things are round. All smart things are cold. Red, white things are nice. All cold, round things are green. White, green things are red. All green things are smart. All smart things are white.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is not round.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen($x, bool) ::: Is x green?\nRed($x, bool) ::: Is x red?\nWhite($x, bool) ::: Is x white?\nNice($x, bool) ::: Is x nice?\nSmart($x, bool) ::: Is x smart?\nRound($x, bool) ::: Is x round?\nCold($x, bool) ::: Is x cold?\nFacts:\nGreen(Anne, True) ::: Anne is green.\nNice(Anne, True) ::: Anne is nice.\nRed(Anne, True) ::: Anne is red.\nSmart(Anne, True) ::: Anne is smart.\nWhite(Anne, True) ::: Anne is white.\nGreen(Bob, True) ::: Bob is green.\nNice(Bob, True) ::: Bob is nice.\nRound(Bob, True) ::: Bob is round.\nWhite(Bob, True) ::: Bob is white.\nRound(Dave, True) ::: Dave is round.\nGreen(Gary, True) ::: Gary is green.\nNice(Gary, True) ::: Gary is nice.\nRed(Gary, True) ::: Gary is red.\nWhite(Gary, True) ::: Gary is white.\nRules:\nGreen($x, True) && Red($x, True) >>> Smart($x, True) ::: Green, red things are smart.\nRound($x, True) >>> Cold($x, True) ::: Round things are cold.\nCold($x, True) && Smart($x, True) >>> Round($x, True) ::: Cold, smart things are round.\nSmart($x, True) >>> Cold($x, True) ::: All smart things are cold.\nRed($x, True) && White($x, True) >>> Nice($x, True) ::: Red, white things are nice.\nCold($x, True) && Round($x, True) >>> Green($x, True) ::: All cold, round things are green.\nWhite($x, True) && Green($x, True) >>> Red($x, True) ::: White, green things are red.\nGreen($x, True) >>> Smart($x, True) ::: All green things are smart.\nSmart($x, True) >>> White($x, True) ::: All smart things are white.\nQuery:\nNot(Round(Gary, True)) ::: Gary is not round.\n------\nProblem:\nAnne is green. Anne is nice. Anne is red. Anne is smart. Anne is white. Bob is green. Bob is nice. Bob is round. Bob is white. Dave is round. Gary is green. Gary is nice. Gary is red. Gary is white. Green, red things are smart. Round things are cold. Cold, smart things are round. All smart things are cold. Red, white things are nice. All cold, round things are"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-343_Q11",
    "context": "Charlie is big. Charlie is kind. Charlie is rough. Charlie is round. Charlie is white. Dave is nice. Dave is rough. Erin is kind. Erin is nice. Erin is rough. Erin is round. Erin is smart. Erin is white. Gary is kind. Gary is rough. Gary is white. If Dave is white then Dave is kind. If Gary is big and Gary is kind then Gary is smart. If Erin is round and Erin is kind then Erin is rough. All kind, rough things are smart. Kind, smart things are big. All big things are round. If something is nice then it is white.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Dave is round.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nKind($x, bool) ::: Is x kind?\nRough($x, bool) ::: Is x rough?\nRound($x, bool) ::: Is x round?\nWhite($x, bool) ::: Is x white?\nNice($x, bool) ::: Is x nice?\nSmart($x, bool) ::: Is x smart?\nFacts:\nBig(Charlie, True) ::: Charlie is big.\nKind(Charlie, True) ::: Charlie is kind.\nRough(Charlie, True) ::: Charlie is rough.\nRound(Charlie, True) ::: Charlie is round.\nWhite(Charlie, True) ::: Charlie is white.\nNice(Dave, True) ::: Dave is nice.\nRough(Dave, True) ::: Dave is rough.\nKind(Erin, True) ::: Erin is kind.\nNice(Erin, True) ::: Erin is nice.\nRough(Erin, True) ::: Erin is rough.\nRound(Erin, True) ::: Erin is round.\nSmart(Erin, True) ::: Erin is smart.\nWhite(Erin, True) ::: Erin is white.\nKind(Gary, True) ::: Gary is kind.\nRough(Gary, True) ::: Gary is rough.\nWhite(Gary, True) ::: Gary is white.\nRules:\nDave(White, True) >>> Kind(Dave, True) ::: If Dave is white then Dave is kind.\nGary(Big, True) && Gary(Kind, True) >>> Smart(Gary, True) ::: If Gary is big and Gary is kind then Gary is smart.\nErin(Round, True) && Erin(Kind, True) >>> Rough(Erin, True) ::: If Erin is round and Erin is kind then Erin is rough.\nKind(x, True) && Rough(x, True) >>> Smart(x, True) ::: All kind, rough things are smart.\nKind(x, True) && Smart(x, True) >>> Big(x, True) ::: Kind, smart things are big.\nBig(x, True) >>> Round(x, True) ::: All big things are round.\nNice(x, True) >>> White(x, True) ::: If something is nice then it is white.\nQuery:\nRound(Dave, True) ::: Dave is round.\n------\nProblem:\nBob is big. Bob is kind. Bob is rough. Bob is round. Bob is white. Charlie is big. Charlie is kind. Charlie is rough. Charlie is round. Charlie is white. Dave is big. Dave is kind. Dave is rough. Dave is round. Dave is white. Erin is big. Erin is kind. Erin is rough. Erin is round"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-656_Q13",
    "context": "Anne is smart. Anne is young. Charlie is quiet. Charlie is young. Dave is rough. Dave is round. Fiona is rough. Fiona is smart. Fiona is white. Fiona is young. If Anne is round then Anne is furry. All young, furry people are white. If someone is white and furry then they are quiet. If someone is young and white then they are quiet. All young, smart people are furry. Quiet, rough people are round. If Anne is quiet and Anne is smart then Anne is young. All white people are furry. If someone is quiet and smart then they are rough.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Dave is not furry.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nSmart($x, bool) ::: Is x smart?\nYoung($x, bool) ::: Is x young?\nQuiet($x, bool) ::: Is x quiet?\nRound($x, bool) ::: Is x round?\nFurry($x, bool) ::: Is x furry?\nRough($x, bool) ::: Is x rough?\nWhite($x, bool) ::: Is x white?\nFacts:\nSmart(Anne, True) ::: Anne is smart.\nYoung(Anne, True) ::: Anne is young.\nQuiet(Charlie, True) ::: Charlie is quiet.\nYoung(Charlie, True) ::: Charlie is young.\nRough(Dave, True) ::: Dave is rough.\nRound(Dave, True) ::: Dave is round.\nFurry(Fiona, True) ::: Fiona is furry.\nSmart(Fiona, True) ::: Fiona is smart.\nWhite(Fiona, True) ::: Fiona is white.\nYoung(Fiona, True) ::: Fiona is young.\nRules:\nYoung($x, True) >>> Furry($x, True) ::: All young, furry people are white.\nFurry($x, True) && White($x, True) >>> Quiet($x, True) ::: If someone is white and furry then they are quiet.\nYoung($x, True) && White($x, True) >>> Quiet($x, True) ::: If someone is young and white then they are quiet.\nYoung($x, True) && Smart($x, True) >>> Furry($x, True) ::: All young, smart people are furry.\nQuiet($x, True) && Rough($x, True) >>> Round($x, True) ::: Quiet, rough people are round.\nYoung($x, True) && Smart($x, True) && Quiet($x, True) >>> Young($x, True) ::: If Anne is quiet and Anne is smart then Anne is young.\nWhite($x, True) >>> Furry($x, True) ::: All white people are furry.\nSmart($x, True) && Quiet($x, True) >>> Rough($x, True) ::: If someone is quiet and smart then they are rough.\nQuery:\nFurry(Dave, False) ::: Dave is not furry.\n------\nProblem:\nAnne is furry. Anne is green. Anne is quiet. Anne is rough. Anne is white. Anne is young. Bella is furry. Bella is green. Bella is quiet. Bella is rough. Bella is white. Bella is young. Charlie is furry. Charlie is green. Charlie is quiet. Charlie is rough. Charlie is white. Charlie is young. Dave is furry. Dave is green. Dave is quiet. Dave is rough. Dave is white"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-113_Q16",
    "context": "The bear is young. The bear likes the cat. The bear likes the lion. The bear likes the tiger. The bear needs the lion. The bear needs the tiger. The bear visits the lion. The bear visits the tiger. The cat needs the tiger. The lion is young. The tiger is blue. The tiger likes the bear. The tiger likes the cat. The tiger visits the lion. If something likes the bear then it is rough. If something likes the bear and it visits the bear then the bear visits the cat. If something likes the bear and it visits the cat then it is rough. Big things are nice. If something is rough then it needs the bear. If something visits the tiger and it visits the cat then it is nice. If something likes the lion then the lion is young. If something is big then it is rough. If something is rough and it needs the bear then it visits the bear.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bear visits the bear.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nYoung($x, bool) ::: Is x young?\nLikes($x, $y, bool) ::: Does x like y?\nNeeds($x, $y, bool) ::: Does x need y?\nVisits($x, $y, bool) ::: Does x visit y?\nRough($x, bool) ::: Is x rough?\nNice($x, bool) ::: Is x nice?\nBig($x, bool) ::: Is x big?\nFacts:\nYoung(Bear, True) ::: The bear is young.\nLikes(Bear, Cat, True) ::: The bear likes the cat.\nLikes(Bear, Lion, True) ::: The bear likes the lion.\nLikes(Bear, Tiger, True) ::: The bear likes the tiger.\nNeeds(Bear, Lion, True) ::: The bear needs the lion.\nNeeds(Bear, Tiger, True) ::: The bear needs the tiger.\nVisits(Bear, Lion, True) ::: The bear visits the lion.\nVisits(Bear, Tiger, True) ::: The bear visits the tiger.\nNeeds(Cat, Tiger, True) ::: The cat needs the tiger.\nYoung(Lion, True) ::: The lion is young.\nBlue(Tiger, True) ::: The tiger is blue.\nLikes(Tiger, Bear, True) ::: The tiger likes the bear.\nLikes(Tiger, Cat, True) ::: The tiger likes the cat.\nVisits(Tiger, Lion, True) ::: The tiger visits the lion.\nRules:\nLikes($x, Bear, True) >>> Rough($x, True) ::: If something likes the bear then it is rough.\nLikes($x, Bear) && Visits($x, Bear) >>> Bear(Visits, $x, True) ::: If something likes the bear and it visits the bear then the bear visits the cat.\nLikes($x, Bear) && Visits($x, Cat) >>> Rough($x, True) ::: If something likes the bear and it visits the cat then it is rough.\nBig($x, True) >>> Rough($x, True) ::: Big things are nice.\nRough($x, True) && Needs($x, Bear, True) >>> Visits($x, Bear, True) ::: If something is rough and it needs the bear then it visits the bear.\nVisits($x, Tiger) && Visits($x, Cat) >>> Nice($x, True) ::: If something visits the tiger and it visits the cat then it is nice.\nLikes($x, Lion) >>> Young($x, True) ::: If something likes the lion then the lion is young.\nRough($x, True) >>> Big($x, True) ::: If something is rough then it is big.\nBig"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-66_Q9",
    "context": "Bob is furry. Bob is quiet. Charlie is white. Fiona is blue. Fiona is young. Gary is not round. Gary is young. All quiet people are furry. If Charlie is not blue and Charlie is not young then Charlie is not white. If someone is blue then they are quiet. If someone is furry and young then they are round. If someone is rough and young then they are white. If someone is blue and not quiet then they are rough. Young, round people are rough.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Fiona is rough.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nFurry($x, bool) ::: Is x furry?\nQuiet($x, bool) ::: Is x quiet?\nWhite($x, bool) ::: Is x white?\nBlue($x, bool) ::: Is x blue?\nRound($x, bool) ::: Is x round?\nRough($x, bool) ::: Is x rough?\nFacts:\nFurry(Bob, True) ::: Bob is furry.\nQuiet(Bob, True) ::: Bob is quiet.\nWhite(Charlie, True) ::: Charlie is white.\nBlue(Fiona, True) ::: Fiona is blue.\nYoung(Fiona, True) ::: Fiona is young.\nNot(Round(Gary, True)) ::: Gary is not round.\nYoung(Gary, True) ::: Gary is young.\nRules:\nQuiet($x, True) >>> Furry($x, True) ::: All quiet people are furry.\nNot(Blue($x, True)) && Not(Young($x, True)) >>> Not(White($x, True)) ::: If Charlie is not blue and Charlie is not young then Charlie is not white.\nBlue($x, True) >>> Quiet($x, True) ::: If someone is blue then they are quiet.\nFurry($x, True) && Young($x, True) >>> Round($x, True) ::: If someone is furry and young then they are round.\nRough($x, True) && Young($x, True) >>> White($x, True) ::: If someone is rough and young then they are white.\nBlue($x, True) && Not(Quiet($x, True)) >>> Rough($x, True) ::: If someone is blue and not quiet then they are rough.\nYoung($x, True) && Round($x, True) >>> Rough($x, True) ::: Young, round people are rough.\nQuery:\nRough(Fiona, True) ::: Fiona is rough.\n------"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-91_Q7",
    "context": "Bob is cold. Bob is nice. Dave is blue. Dave is nice. Dave is quiet. Fiona is rough. Fiona is young. Gary is blue. Gary is cold. Gary is nice. Gary is quiet. Gary is red. Gary is rough. Gary is young. All red people are blue. If Fiona is nice then Fiona is blue. If Fiona is blue then Fiona is red. If someone is young then they are quiet. Cold, quiet people are nice. Quiet, young people are cold. If someone is red and rough then they are blue. If someone is red then they are nice.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Fiona is nice.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nNice($x, bool) ::: Is x nice?\nBlue($x, bool) ::: Is x blue?\nQuiet($x, bool) ::: Is x quiet?\nRough($x, bool) ::: Is x rough?\nYoung($x, bool) ::: Is x young?\nFacts:\nCold(Bob, True) ::: Bob is cold.\nNice(Bob, True) ::: Bob is nice.\nBlue(Dave, True) ::: Dave is blue.\nNice(Dave, True) ::: Dave is nice.\nQuiet(Dave, True) ::: Dave is quiet.\nRough(Fiona, True) ::: Fiona is rough.\nYoung(Fiona, True) ::: Fiona is young.\nBlue(Gary, True) ::: Gary is blue.\nCold(Gary, True) ::: Gary is cold.\nNice(Gary, True) ::: Gary is nice.\nQuiet(Gary, True) ::: Gary is quiet.\nRed(Gary, True) ::: Gary is red.\nRough(Gary, True) ::: Gary is rough.\nYoung(Gary, True) ::: Gary is young.\nRules:\nRed($x, True) >>> Blue($x, True) ::: All red people are blue.\nNice(Fiona, True) >>> Blue($x, True) ::: If Fiona is nice then Fiona is blue.\nBlue($x, True) >>> Red($x, True) ::: If Fiona is blue then Fiona is red.\nYoung($x, True) >>> Quiet($x, True) ::: If someone is young then they are quiet.\nCold($x, True) && Quiet($x, True) >>> Nice($x, True) ::: Cold, quiet people are nice.\nQuiet($x, True) && Young($x, True) >>> Cold($x, True) ::: Qu"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-651_Q20",
    "context": "The bear eats the dog. The bear eats the rabbit. The bear is round. The bear needs the rabbit. The bear needs the tiger. The bear sees the rabbit. The dog eats the bear. The rabbit eats the tiger. The rabbit is round. The tiger eats the bear. The tiger is cold. The tiger is young. If something eats the tiger then the tiger needs the dog. If the bear sees the dog and the dog eats the tiger then the dog eats the bear. If something eats the bear then it sees the tiger. If the tiger sees the rabbit then the rabbit eats the bear. If something eats the bear and the bear sees the rabbit then it sees the dog. If something sees the dog then it sees the rabbit.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The dog is round.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y) ::: Does x eat y?\nNeeds($x, $y) ::: Does x need y?\nSees($x, $y) ::: Does x see y?\nRound($x, bool) ::: Is x round?\nYoung($x, bool) ::: Is x young?\nCold($x, bool) ::: Is x cold?\nFacts:\nEats(Bear, Dog) ::: The bear eats the dog.\nEats(Bear, Rabbit) ::: The bear eats the rabbit.\nRound(Bear, True) ::: The bear is round.\nNeeds(Bear, Rabbit) ::: The bear needs the rabbit.\nNeeds(Bear, Tiger) ::: The bear needs the tiger.\nSees(Bear, Rabbit) ::: The bear sees the rabbit.\nEats(Dog, Bear) ::: The dog eats the bear.\nEats(Rabbit, Tiger) ::: The rabbit eats the tiger.\nRound(Rabbit, True) ::: The rabbit is round.\nEats(Tiger, Bear) ::: The tiger eats the bear.\nCold(Tiger, True) ::: The tiger is cold.\nYoung(Tiger, True) ::: The tiger is young.\nRules:\nEats($x, $y) >>> Needs($x, $y) ::: If something eats the tiger then the tiger needs the dog.\nEats($x, $y) && Sees($x, $y) && Eats($y, $z) >>> Eats($x, $z) ::: If the bear sees the dog and the dog eats the tiger then the dog eats the bear.\nEats($x, $y) >>> Sees($x, $z) ::: If something eats the bear then it sees the tiger.\nSees($x, $y) && Eats($y, $z"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-1010_Q6",
    "context": "Anne is not red. Anne is not round. Anne is white. Charlie is not blue. Charlie is cold. Charlie is nice. Charlie is rough. Charlie is round. Charlie is white. Erin is cold. Fiona is blue. Fiona is round. Round things are cold. Cold, rough things are white. If something is nice then it is white. If something is cold and red then it is not blue. If something is blue and white then it is rough. If Fiona is round and Fiona is cold then Fiona is rough. If Erin is cold then Erin is not red. If Fiona is white then Fiona is nice. Nice things are not red.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Fiona is not rough.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRed($x, bool) ::: Is x red?\nRound($x, bool) ::: Is x round?\nWhite($x, bool) ::: Is x white?\nBlue($x, bool) ::: Is x blue?\nCold($x, bool) ::: Is x cold?\nNice($x, bool) ::: Is x nice?\nRough($x, bool) ::: Is x rough?\nFacts:\nNotRed(Anne, True) ::: Anne is not red.\nNotRound(Anne, True) ::: Anne is not round.\nWhite(Anne, True) ::: Anne is white.\nNotBlue(Charlie, True) ::: Charlie is not blue.\nCold(Charlie, True) ::: Charlie is cold.\nNice(Charlie, True) ::: Charlie is nice.\nRough(Charlie, True) ::: Charlie is rough.\nRound(Charlie, True) ::: Charlie is round.\nWhite(Charlie, True) ::: Charlie is white.\nCold(Erin, True) ::: Erin is cold.\nBlue(Fiona, True) ::: Fiona is blue.\nRound(Fiona, True) ::: Fiona is round.\nRound($x, True) >>> Cold($x, True) ::: Round things are cold.\nCold($x, True) && Rough($x, True) >>> White($x, True) ::: Cold, rough things are white.\nNice($x, True) >>> White($x, True) ::: If something is nice then it is white.\nNotBlue($x, True) && White($x, True) >>> Rough($x, True) ::: If something is blue and white then it is rough.\nFionaRound($x, True) && FionaCold($x, True) >>> FionaRough($x, True) ::: If Fiona is round and Fiona is cold then Fiona is rough.\nErinCold($x, True) >>> NotRed($"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-812_Q2",
    "context": "Erin is green. Erin is smart. Fiona is big. Fiona is rough. Gary is not smart. Gary is not young. Harry is big. Big, furry things are not young. All smart things are kind. If Harry is smart then Harry is rough. Furry things are green. All young things are not green. All rough, big things are furry. Smart, rough things are big. If something is smart and kind then it is rough. If Harry is young and Harry is kind then Harry is furry.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is smart.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen($x, bool) ::: Is x green?\nSmart($x, bool) ::: Is x smart?\nBig($x, bool) ::: Is x big?\nYoung($x, bool) ::: Is x young?\nFurry($x, bool) ::: Is x furry?\nKind($x, bool) ::: Is x kind?\nRough($x, bool) ::: Is x rough?\nFacts:\nGreen(Erin, True) ::: Erin is green.\nSmart(Erin, True) ::: Erin is smart.\nBig(Fiona, True) ::: Fiona is big.\nRough(Fiona, True) ::: Fiona is rough.\nNot(Smart(Gary, True)) ::: Gary is not smart.\nNot(Young(Gary, True)) ::: Gary is not young.\nBig(Harry, True) ::: Harry is big.\nNot(Young(Harry, True)) ::: Harry is not young.\nNot(Furry(Harry, True)) ::: Harry is not furry.\nRules:\nBig($x, True) && Furry($x, True) >>> Not(Young($x, True)) ::: Big, furry things are not young.\nAll($x, Smart($x, True)) >>> Kind($x, True) ::: All smart things are kind.\nIf(Smart(Harry, True)) >>> Rough(Harry, True) ::: If Harry is smart then Harry is rough.\nFurry($x, True) >>> Green($x, True) ::: Furry things are green.\nNot(Young($x, True)) >>> Not(Green($x, True)) ::: All young things are not green.\nAll($x, Rough($x, True)) >>> Big($x, True) ::: All rough, big things are furry.\nSmart($x, True) && Rough($x, True) >>> Big($x, True) ::: Smart, rough things are big."
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-620_Q4",
    "context": "The bald eagle chases the cat. The bald eagle is not blue. The bald eagle is round. The bald eagle is young. The bear chases the squirrel. The bear is rough. The bear sees the bald eagle. The bear does not see the cat. The cat is young. The cat likes the bear. The cat sees the bear. The cat sees the squirrel. The squirrel chases the bald eagle. The squirrel is blue. The squirrel sees the bald eagle. The squirrel sees the bear. If someone chases the squirrel then they chase the bear. If someone likes the cat then the cat chases the squirrel. If someone chases the bear and they see the bald eagle then they like the bald eagle. If someone sees the bear and the bear likes the bald eagle then they chase the squirrel. If someone likes the cat and they see the squirrel then the cat sees the squirrel. If someone is young then they chase the bald eagle. If someone chases the cat then the cat is young. If someone sees the bald eagle and they like the bald eagle then they are round. If the bald eagle sees the bear then the bald eagle likes the bear.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bear does not chase the bear.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nIs($x, $y, bool) ::: Is x y?\nLikes($x, $y, bool) ::: Does x like y?\nSees($x, $y, bool) ::: Does x see y?\nYoung($x, bool) ::: Is x young?\nRound($x, bool) ::: Is x round?\nBlue($x, bool) ::: Is x blue?\nFacts:\nChases(BaldEagle, Cat, True) ::: The bald eagle chases the cat.\nNot(Blue(BaldEagle, True)) ::: The bald eagle is not blue.\nRound(BaldEagle, True) ::: The bald eagle is round.\nYoung(BaldEagle, True) ::: The bald eagle is young.\nChases(Bear, Squirrel, True) ::: The bear chases the squirrel.\nRough(Bear, True) ::: The bear is rough.\nSees(Bear, BaldEagle, True) ::: The bear sees the bald eagle.\nNot(Sees(Bear, Cat, True)) ::: The bear does not see the cat.\nYoung(Cat, True) ::: The cat is young.\nLikes(Cat, Bear, True) ::: The cat likes the bear.\nSees(Cat, Bear, True) ::: The cat sees the bear.\nSees(Cat, Squirrel, True) ::: The cat sees the squirrel.\nChases(Squirrel, BaldEagle, True) ::: The squirrel chases the bald eagle.\nBlue(Squirrel, True) ::: The squirrel is blue.\nSees(Squirrel, BaldEagle, True) ::: The squirrel sees the bald eagle.\nSees(Squirrel, Bear, True) ::: The squirrel sees the bear.\nRules:\nChases($x, $"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-125_Q3",
    "context": "The mouse eats the rabbit. The mouse eats the tiger. The mouse does not need the rabbit. The rabbit does not eat the mouse. The rabbit does not need the mouse. The rabbit visits the squirrel. The rabbit visits the tiger. The squirrel is green. The squirrel needs the rabbit. The tiger is nice. If something is blue then it visits the rabbit. If something visits the mouse and it eats the rabbit then it visits the rabbit. All nice things are blue. If something needs the mouse and it eats the tiger then the tiger does not eat the mouse. If the mouse eats the tiger and the rabbit does not visit the mouse then the rabbit does not visit the squirrel. If the mouse visits the tiger and the mouse is not green then the mouse is blue. If something visits the rabbit then the rabbit is nice. If something is green and nice then it eats the mouse.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The tiger is blue.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y, bool) ::: Does x eat y?\nNeeds($x, $y, bool) ::: Does x need y?\nVisits($x, $y, bool) ::: Does x visit y?\nIs($x, $y, bool) ::: Is x y?\nBlue($x, bool) ::: Is x blue?\nNice($x, bool) ::: Is x nice?\nGreen($x, bool) ::: Is x green?\nFacts:\nEats(Mouse, Rabbit, True) ::: The mouse eats the rabbit.\nEats(Mouse, Tiger, True) ::: The mouse eats the tiger.\nNeeds(Mouse, Rabbit, False) ::: The mouse does not need the rabbit.\nNeeds(Rabbit, Mouse, False) ::: The rabbit does not need the mouse.\nVisits(Rabbit, Squirrel, True) ::: The rabbit visits the squirrel.\nVisits(Rabbit, Tiger, True) ::: The rabbit visits the tiger.\nIs(Squirrel, Green, True) ::: The squirrel is green.\nNeeds(Rabbit, Squirrel, True) ::: The rabbit needs the squirrel.\nIs(Tiger, Nice, True) ::: The tiger is nice.\nRules:\nBlue($x, True) >>> Visits($x, Rabbit, True) ::: If something is blue then it visits the rabbit.\nVisits($x, Mouse) && Eats($x, Rabbit) >>> Visits($x, Rabbit) ::: If something visits the mouse and it eats the rabbit then it visits the rabbit.\nAll($x, Nice($x, True)) >>> Blue($x, True) ::: All nice things are blue.\nNeeds(Mouse, $y, True) && Eats($x, Tiger, True) >>> Tiger($x, False) ::: If something needs the mouse and it eats the"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-202_Q8",
    "context": "The cat does not chase the dog. The cat is young. The cat needs the dog. The cat does not see the squirrel. The cow is big. The cow is round. The cow needs the cat. The cow sees the cat. The cow sees the dog. The cow sees the squirrel. The dog needs the cow. The dog sees the cat. The dog sees the cow. The squirrel is not round. The squirrel needs the dog. The squirrel does not see the cow. If someone is young then they chase the cat. If someone needs the cow and they chase the dog then the cow sees the squirrel. If someone needs the squirrel and the squirrel needs the dog then the dog chases the cat. If someone needs the cat and they need the squirrel then the cat is kind. If someone chases the cat then they need the squirrel. If the squirrel needs the dog then the dog needs the cat. If someone needs the dog then they chase the squirrel.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The dog does not chase the cat.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChase($x, $y, bool) ::: Does x chase y?\nYoung($x, bool) ::: Is x young?\nNeed($x, $y, bool) ::: Does x need y?\nSee($x, $y, bool) ::: Does x see y?\nKind($x, bool) ::: Is x kind?\nFacts:\nChase(Cat, Dog, False) ::: The cat does not chase the dog.\nYoung(Cat, True) ::: The cat is young.\nNeed(Cat, Dog, True) ::: The cat needs the dog.\nSee(Cat, Squirrel, False) ::: The cat does not see the squirrel.\nBig(Cow, True) ::: The cow is big.\nRound(Cow, True) ::: The cow is round.\nNeed(Cow, Cat, True) ::: The cow needs the cat.\nSee(Cow, Cat, True) ::: The cow sees the cat.\nSee(Cow, Dog, True) ::: The cow sees the dog.\nSee(Cow, Squirrel, True) ::: The cow sees the squirrel.\nNeed(Dog, Cow, True) ::: The dog needs the cow.\nSee(Dog, Cat, True) ::: The dog sees the cat.\nSee(Dog, Cow, True) ::: The dog sees the cow.\nNotRound(Squirrel, True) ::: The squirrel is not round.\nNeed(Squirrel, Dog, True) ::: The squirrel needs the dog.\nSee(Squirrel, Cow, False) ::: The squirrel does not see the cow.\nRules:\nYoung($x, True) >>> Chase($x, Cat, True) ::: If someone is young then they chase the cat.\nNeed($x, Cow, True) && Chase($x, Dog, True) >>> See(Cow, Squirrel, True) ::: If someone needs the cow and they chase the dog then the cow sees the"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-205_Q21",
    "context": "The bald eagle chases the cow. The bald eagle is big. The bald eagle is rough. The cow chases the squirrel. The cow is rough. The cow visits the squirrel. The cow visits the tiger. The squirrel is not young. The squirrel does not see the bald eagle. The tiger is nice. If something sees the tiger and the tiger chases the squirrel then the squirrel is blue. If something visits the tiger then the tiger chases the squirrel. If something visits the bald eagle then the bald eagle is blue. If something is blue then it sees the tiger. If something visits the squirrel then it visits the bald eagle. If something sees the bald eagle and the bald eagle is big then the bald eagle sees the tiger.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The tiger does not see the bald eagle.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nBig($x, bool) ::: Is x big?\nRough($x, bool) ::: Is x rough?\nYoung($x, bool) ::: Is x young?\nBlue($x, bool) ::: Is x blue?\nNice($x, bool) ::: Is x nice?\nVisits($x, $y, bool) ::: Does x visit y?\nSees($x, $y, bool) ::: Does x see y?\nFacts:\nChases(BaldEagle, Cow, True) ::: The bald eagle chases the cow.\nBig(BaldEagle, True) ::: The bald eagle is big.\nRough(BaldEagle, True) ::: The bald eagle is rough.\nChases(Cow, Squirrel, True) ::: The cow chases the squirrel.\nRough(Cow, True) ::: The cow is rough.\nVisits(Cow, Squirrel, True) ::: The cow visits the squirrel.\nVisits(Cow, Tiger, True) ::: The cow visits the tiger.\nNotYoung(Squirrel, True) ::: The squirrel is not young.\nNotSees(Squirrel, BaldEagle, True) ::: The squirrel does not see the bald eagle.\nNice(Tiger, True) ::: The tiger is nice.\nIfSomethingSeesTigerAndTigerChasesSquirrelThenSquirrelIsBlue($x, $y, $z, bool) ::: If something sees the tiger and the tiger chases the squirrel then the squirrel is blue.\nIfSomethingVisitsTigerThenTigerChasesSquirrel($x, $y, bool) ::: If something visits the tiger then the tiger chases the squirrel.\nIfSomethingVisitsBaldEagleThenBaldEagleIsBlue($x, $y"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-602_Q19",
    "context": "The bear is red. The bear needs the rabbit. The bear sees the mouse. The dog eats the bear. The mouse is big. The mouse is nice. The mouse is red. The rabbit is big. The rabbit needs the dog. The rabbit sees the bear. If something eats the rabbit and it needs the dog then it eats the dog. If something needs the mouse and the mouse is round then it is big. If something is red and it eats the dog then it sees the rabbit. If something sees the rabbit and the rabbit sees the bear then it eats the mouse. If something is nice then it eats the rabbit. If the rabbit needs the mouse and the rabbit sees the bear then the mouse eats the bear. If something eats the mouse and it eats the dog then the dog is nice. If something eats the rabbit then it needs the dog.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The rabbit is not red.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRed($x, bool) ::: Is x red?\nNeeds($x, $y, bool) ::: Does x need y?\nEats($x, $y, bool) ::: Does x eat y?\nSees($x, $y, bool) ::: Does x see y?\nBig($x, bool) ::: Is x big?\nNice($x, bool) ::: Is x nice?\nRound($x, bool) ::: Is x round?\nFacts:\nRed(Bear, True) ::: The bear is red.\nNeeds(Bear, Rabbit, True) ::: The bear needs the rabbit.\nSees(Bear, Mouse, True) ::: The bear sees the mouse.\nEats(Dog, Bear, True) ::: The dog eats the bear.\nBig(Mouse, True) ::: The mouse is big.\nNice(Mouse, True) ::: The mouse is nice.\nRed(Mouse, True) ::: The mouse is red.\nBig(Rabbit, True) ::: The rabbit is big.\nNeeds(Rabbit, Dog, True) ::: The rabbit needs the dog.\nSees(Rabbit, Bear, True) ::: The rabbit sees the bear.\nRules:\nEats($x, $y, True) >>> Needs($x, $y, True) ::: If something eats the rabbit and it needs the dog then it eats the dog.\nNeeds($x, Mouse, True) && Round(Mouse, True) >>> Big(x, True) ::: If something needs the mouse and the mouse is round then it is big.\nRed($x, True) && Eats($x, Dog, True) >>> Sees(x, Rabbit, True) ::: If something is red and it eats the dog then it sees the rabbit.\nSees($x, Rabbit, True) && Sees(Rabbit, Bear, True) >>> Eats($x, Mouse, True) ::: If something sees the"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-205_Q11",
    "context": "Charlie is cold. Charlie is red. Charlie is round. Charlie is white. Dave is green. Dave is red. Dave is white. Erin is green. Erin is round. Fiona is green. Fiona is nice. Fiona is red. Fiona is round. Fiona is white. Green people are white. All nice people are red. Round, red people are white. If Dave is white and Dave is young then Dave is cold. If Charlie is young then Charlie is nice. If someone is young then they are cold. Green, cold people are nice. If someone is nice and young then they are green. If someone is white then they are young.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Erin is red.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nRed($x, bool) ::: Is x red?\nRound($x, bool) ::: Is x round?\nWhite($x, bool) ::: Is x white?\nNice($x, bool) ::: Is x nice?\nYoung($x, bool) ::: Is x young?\nFacts:\nCold(Charlie, True) ::: Charlie is cold.\nRed(Charlie, True) ::: Charlie is red.\nRound(Charlie, True) ::: Charlie is round.\nWhite(Charlie, True) ::: Charlie is white.\nRed(Dave, True) ::: Dave is red.\nWhite(Dave, True) ::: Dave is white.\nGreen(Dave, True) ::: Dave is green.\nGreen(Erin, True) ::: Erin is green.\nRound(Erin, True) ::: Erin is round.\nRed(Fiona, True) ::: Fiona is red.\nNice(Fiona, True) ::: Fiona is nice.\nRound(Fiona, True) ::: Fiona is round.\nWhite(Fiona, True) ::: Fiona is white.\nRules:\nGreen($x, True) >>> White($x, True) ::: Green people are white.\nNice($x, True) >>> Red($x, True) ::: All nice people are red.\nRound($x, True) && Red($x, True) >>> White($x, True) ::: Round, red people are white.\nDave(White($x, True) && Young($x, True)) >>> Cold($x, True) ::: If Dave is white and Dave is young then Dave is cold.\nYoung($x, True) >>> Charlie(Nice($x, True)) ::: If Charlie is young then Charlie is nice.\nYoung($x, True) >>> Cold($x, True) ::: If someone is young then they are cold.\nGreen($x, True) && Cold($x, True) >>> Nice($x, True) ::: Green, cold people are nice.\nNice($x, True) && Young($x, True) >>> Green($x, True) ::: If someone is nice and young then they are green.\nWhite($x, True) >>> Young($x, True) ::: If someone is white then they are young.\nQuery:\nRed(Erin, True) ::: Erin is red.\n------"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-980_Q11",
    "context": "The cat is big. The cat needs the lion. The dog is big. The dog likes the rabbit. The dog visits the lion. The lion is big. The lion is not cold. The lion likes the cat. The lion likes the rabbit. The rabbit is big. The rabbit is not cold. The rabbit is not nice. The rabbit likes the dog. The rabbit likes the lion. The rabbit needs the cat. The rabbit does not need the lion. If something is cold then it needs the rabbit. If something likes the lion then it is green. If something visits the rabbit then the rabbit visits the cat. If something visits the dog then the dog likes the lion. If something needs the lion and it is not blue then it does not visit the cat. If something likes the cat and it is green then the cat likes the rabbit. If something is green and it likes the lion then it visits the dog. If something likes the dog and the dog is cold then it is not nice. If something likes the rabbit and it does not need the lion then it is nice.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The dog visits the dog.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nNeeds($x, $y, bool) ::: Does x need y?\nLikes($x, $y, bool) ::: Does x like y?\nVisits($x, $y, bool) ::: Does x visit y?\nCold($x, bool) ::: Is x cold?\nGreen($x, bool) ::: Is x green?\nBlue($x, bool) ::: Is x blue?\nNice($x, bool) ::: Is x nice?\nFacts:\nBig(Cat, True) ::: The cat is big.\nNeeds(Cat, Lion, True) ::: The cat needs the lion.\nBig(Dog, True) ::: The dog is big.\nLikes(Dog, Rabbit, True) ::: The dog likes the rabbit.\nVisits(Dog, Lion, True) ::: The dog visits the lion.\nBig(Lion, True) ::: The lion is big.\nNot(Cold(Lion, True)) ::: The lion is not cold.\nLikes(Lion, Cat, True) ::: The lion likes the cat.\nLikes(Lion, Rabbit, True) ::: The lion likes the rabbit.\nBig(Rabbit, True) ::: The rabbit is big.\nNot(Cold(Rabbit, True)) ::: The rabbit is not cold.\nNot(Nice(Rabbit, True)) ::: The rabbit is not nice.\nLikes(Rabbit, Dog, True) ::: The rabbit likes the dog.\nLikes(Rabbit, Lion, True) ::: The rabbit likes the lion.\nNeeds(Rabbit, Cat, True) ::: The rabbit needs the cat.\nNot(Needs(Rabbit, Lion, True)) ::: The rabbit does not need the lion.\nRule:\nCold($x, True) >>> Needs($x, Rabbit, True) ::: If something is cold then it needs the rabbit.\nLikes($x, Lion, True) >>> Green($x, True) ::: If something likes the lion then it is green.\nVisits($x, Rabbit) >>> Rabbit(Visits, Cat, True) ::: If something visits the rabbit then the rabbit visits the cat.\nVisits($x, Dog) >>> Dog(Likes, Lion, True) ::: If something visits the dog then the"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-607_Q5",
    "context": "Bob is furry. Bob is young. Charlie is nice. Charlie is not young. Erin is kind. Erin is not nice. Erin is not rough. Erin is young. Harry is kind. Harry is rough. If something is kind and big then it is nice. If something is kind and nice then it is white. If something is furry and young then it is rough. If Erin is rough then Erin is furry. If Erin is kind and Erin is nice then Erin is furry. If Charlie is furry and Charlie is nice then Charlie is not kind. Rough, young things are big. If something is furry and big then it is kind. If Bob is big and Bob is nice then Bob is kind.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is big.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nFurry($x, bool) ::: Is x furry?\nYoung($x, bool) ::: Is x young?\nNice($x, bool) ::: Is x nice?\nKind($x, bool) ::: Is x kind?\nBig($x, bool) ::: Is x big?\nRough($x, bool) ::: Is x rough?\nWhite($x, bool) ::: Is x white?\nFacts:\nFurry(Bob, True) ::: Bob is furry.\nYoung(Bob, True) ::: Bob is young.\nNice(Charlie, True) ::: Charlie is nice.\nNot(Young(Charlie, True)) ::: Charlie is not young.\nKind(Erin, True) ::: Erin is kind.\nNot(Nice(Erin, True)) ::: Erin is not nice.\nNot(Rough(Erin, True)) ::: Erin is not rough.\nYoung(Erin, True) ::: Erin is young.\nKind(Harry, True) ::: Harry is kind.\nRough(Harry, True) ::: Harry is rough.\nRules:\nKind($x, True) && Big($x, True) >>> Nice($x, True) ::: If something is kind and big then it is nice.\nKind($x, True) && Nice($x, True) >>> White($x, True) ::: If something is kind and nice then it is white.\nFurry($x, True) && Young($x, True) >>> Rough($x, True) ::: If Erin is rough then Erin is furry.\nKind($x, True) && Nice($x, True) >>> Furry($x, True) ::: If Erin is kind and Erin is nice then Erin is furry.\nFurry($x, True) && Nice($x, True) >>> Not(Kind($x, True)) ::: If Charlie is furry and Charlie is nice then Charlie is not kind.\nRough($x, True) && Young($x, True) >>> Big($x, True) ::: Rough, young things are big.\nFurry($x, True) && Big($x, True) >>> Kind($x, True) ::: If Bob is big and Bob is nice then Bob is kind.\nQuery:\nBig(Bob, True) ::: Bob is big.\n------\nProblem:\nBob is furry. Bob is"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-87_Q1",
    "context": "The cat is green. The cat needs the rabbit. The mouse chases the cat. The mouse is cold. The mouse is kind. The mouse needs the cat. The mouse needs the rabbit. The mouse visits the cat. The mouse visits the rabbit. The mouse visits the tiger. The rabbit needs the cat. The tiger is green. The tiger needs the mouse. The tiger needs the rabbit. The tiger visits the mouse. The tiger visits the rabbit. If something needs the cat then the cat is green. If something chases the tiger then it needs the tiger. If something needs the cat then it chases the mouse. If the tiger needs the mouse and the tiger visits the cat then the tiger is round. If something is round then it chases the tiger. If something is kind and it chases the cat then it needs the tiger. If something visits the tiger then the tiger needs the cat. If something is green and it chases the mouse then it is round.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The mouse needs the cat.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen($x, bool) ::: Is x green?\nNeeds($x, $y, bool) ::: Does x need y?\nChases($x, $y, bool) ::: Does x chase y?\nVisits($x, $y, bool) ::: Does x visit y?\nKind($x, bool) ::: Is x kind?\nRound($x, bool) ::: Is x round?\nFacts:\nGreen(Cat, True) ::: The cat is green.\nNeeds(Cat, Rabbit, True) ::: The cat needs the rabbit.\nChases(Mouse, Cat, True) ::: The mouse chases the cat.\nCold(Mouse, True) ::: The mouse is cold.\nKind(Mouse, True) ::: The mouse is kind.\nNeeds(Mouse, Cat, True) ::: The mouse needs the cat.\nNeeds(Mouse, Rabbit, True) ::: The mouse needs the rabbit.\nVisits(Mouse, Cat, True) ::: The mouse visits the cat.\nVisits(Mouse, Rabbit, True) ::: The mouse visits the rabbit.\nVisits(Mouse, Tiger, True) ::: The mouse visits the tiger.\nNeeds(Rabbit, Cat, True) ::: The rabbit needs the cat.\nGreen(Tiger, True) ::: The tiger is green.\nNeeds(Tiger, Mouse, True) ::: The tiger needs the mouse.\nNeeds(Tiger, Rabbit, True) ::: The tiger needs the rabbit.\nVisits(Tiger, Mouse, True) ::: The tiger visits the mouse.\nVisits(Tiger, Rabbit, True) ::: The tiger visits the rabbit.\nRules:\nNeeds($x, $y, True) >>> Green($x, True) ::: If something needs the cat then the cat is green.\nChases($x, $y, True) >>> Needs($x, $y, True) ::: If something chases the tiger then it needs the tiger.\nNeeds($x, $y, True) >>> Chases($x, Mouse, True) ::: If something needs the cat then it chases the mouse.\nRound($x, True) && Visits($x, Cat) >>> Needs($x, Tiger, True) ::: If the tiger needs the mouse and the tiger visits the cat then the tiger is round.\nRound($x, True) >>>"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-378_Q15",
    "context": "Anne is nice. Dave is young. Erin is round. Erin is white. Gary is furry. Gary is rough. Gary is round. All nice, rough people are cold. Rough people are nice. Round, young people are nice. If someone is nice then they are furry. All round people are furry. All white, round people are furry. All round, nice people are rough. If someone is round and young then they are white. Furry, round people are young.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Anne is not rough.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNice($x, bool) ::: Is x nice?\nYoung($x, bool) ::: Is x young?\nRound($x, bool) ::: Is x round?\nFurry($x, bool) ::: Is x furry?\nRough($x, bool) ::: Is x rough?\nCold($x, bool) ::: Is x cold?\nFacts:\nNice(Anne, True) ::: Anne is nice.\nYoung(Dave, True) ::: Dave is young.\nRound(Erin, True) ::: Erin is round.\nWhite(Erin, True) ::: Erin is white.\nFurry(Gary, True) ::: Gary is furry.\nRough(Gary, True) ::: Gary is rough.\nRound(Gary, True) ::: Gary is round.\nRules:\nNice($x, True) >>> Rough($x, True) ::: All nice, rough people are cold.\nRough($x, True) >>> Nice($x, True) ::: Rough people are nice.\nRound($x, True) >>> Nice($x, True) ::: Round, young people are nice.\nNice($x, True) >>> Furry($x, True) ::: If someone is nice then they are furry.\nFurry($x, True) >>> Round($x, True) ::: All round people are furry.\nWhite($x, True) >>> Furry($x, True) ::: All white, round people are furry.\nRound($x, True) >>> Rough($x, True) ::: All round, nice people are rough.\nRound($x, True) && Young($x, True) >>> White($x, True) ::: If someone is round and young then they are white.\nFurry($x, True) && Round($x, True) >>> Young($x, True) ::: Furry, round people are young.\nQuery:\nNot(Rough(Anne, True)) ::: Anne is not rough.\n------\nProblem:\nAnne is furry. Anne is green. Anne is quiet. Anne is rough. Anne is white. Dave is furry. Dave is green. Dave is quiet. Dave is rough. Dave is white. Erin is furry. Erin is green. Erin is quiet. Erin is rough. Erin is white. Fiona is furry. Fiona is green. Fiona is quiet. Fiona is rough. F"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-336_Q2",
    "context": "Anne is not round. Charlie is big. Charlie is blue. Dave is blue. Dave is not nice. Gary is nice. Gary is red. All nice, blue people are red. Blue, white people are big. Red people are round. All nice, white people are blue. Red, round people are white. If Dave is round then Dave is white. If someone is white and not round then they are quiet. Big, red people are not quiet.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is not red.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRound($x, bool) ::: Is x round?\nBig($x, bool) ::: Is x big?\nBlue($x, bool) ::: Is x blue?\nNice($x, bool) ::: Is x nice?\nQuiet($x, bool) ::: Is x quiet?\nFacts:\nNotRound(Anne, True) ::: Anne is not round.\nBig(Charlie, True) ::: Charlie is big.\nBlue(Charlie, True) ::: Charlie is blue.\nBlue(Dave, True) ::: Dave is blue.\nNotNice(Dave, True) ::: Dave is not nice.\nNice(Gary, True) ::: Gary is nice.\nRed(Gary, True) ::: Gary is red.\nRules:\nNice($x, True) >>> Red($x, True) ::: All nice, blue people are red.\nBlue($x, True) >>> White($x, True) ::: Blue, white people are big.\nRed($x, True) >>> Round($x, True) ::: Red people are round.\nNice($x, True) >>> Blue($x, True) ::: All nice, white people are blue.\nRed($x, True) >>> White($x, True) ::: Red, round people are white.\nIf($x, True) >>> White($x, True) ::: If Dave is round then Dave is white.\nNotRound($x, True) >>> Quiet($x, True) ::: If someone is white and not round then they are quiet.\nNotRound($x, True) >>> Big($x, True) ::: Big, red people are not quiet.\nQuery:\nNotRed(Gary, True) ::: Gary is not red.\n------\nProblem:\nAnne is not round. Charlie is big. Charlie is blue. Dave is blue. Dave is not nice. Gary is nice. Gary is red. All nice, blue people are red. Blue, white people are big. Red people are round. All nice, white people are blue. Red, round people are white. If Dave is round then Dave is white. If someone is white and not round then they are quiet. Big, red people are not quiet.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Gary is not red.\n###\nPredicates:\nRound($x, bool) ::: Is x round?\nBig($x, bool) ::: Is x big?\nBlue($x"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-348_Q21",
    "context": "The bear does not visit the cow. The cow is kind. The cow likes the dog. The cow visits the bear. The dog is nice. The rabbit does not chase the bear. The rabbit chases the dog. If someone likes the cow then they do not chase the rabbit. If someone visits the dog and they chase the dog then they are red. If someone visits the rabbit then the rabbit is kind. If someone is kind then they visit the bear. If someone visits the bear then they visit the cow. If someone chases the dog and they are not green then they visit the cow. If someone likes the cow then they visit the dog. If someone chases the dog and they chase the cow then the cow does not visit the dog. If someone visits the cow then the cow visits the rabbit.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cow does not chase the bear.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nVisit($x, $y, bool) ::: Does x visit y?\nLike($x, $y, bool) ::: Does x like y?\nChase($x, $y, bool) ::: Does x chase y?\nKind($x, bool) ::: Is x kind?\nRed($x, bool) ::: Is x red?\nFacts:\nNot(Visit(Bear, Cow, True)) ::: The bear does not visit the cow.\nKind(Cow, True) ::: The cow is kind.\nLike(Cow, Dog, True) ::: The cow likes the dog.\nVisit(Cow, Bear, True) ::: The cow visits the bear.\nNice(Dog, True) ::: The dog is nice.\nNot(Chase(Rabbit, Bear, True)) ::: The rabbit does not chase the bear.\nChase(Rabbit, Dog, True) ::: The rabbit chases the dog.\nLike($x, Cow, True) >>> Not(Chase($x, Rabbit, True)) ::: If someone likes the cow then they do not chase the rabbit.\nVisit($x, Dog) && Chase($x, Dog, True) >>> Red($x, True) ::: If someone visits the dog and they chase the dog then they are red.\nVisit(Rabbit, Bear, True) >>> Kind(Rabbit, True) ::: If someone visits the rabbit then the rabbit is kind.\nKind($x, True) >>> Visit($x, Bear, True) ::: If someone is kind then they visit the bear.\nVisit($x, Bear, True) >>> Visit($x, Cow, True) ::: If someone visits the bear then they visit the cow.\nVisit($x, Dog) && Not(Green($x, True)) >>> Visit(Cow, $x, True) ::: If someone visits the dog and they are not green then they visit the cow.\nLike(Cow, $x, True) >>> Visit(Cow, $x, True) ::: If someone likes the cow then they visit the dog.\nChase(Dog, $x, True) && Chase(Cow, $x, True) >>> Not(Visit(Cow, $x, True)) ::: If someone chases the dog and they chase the cow then the cow does not visit the dog.\nVisit(Cow, $x, True) >>> Visit($x, Rabbit, True) :::"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-253_Q17",
    "context": "The cat eats the mouse. The cat eats the squirrel. The cat is rough. The cat sees the lion. The cat sees the mouse. The cat sees the squirrel. The lion sees the cat. The lion sees the squirrel. The mouse is round. The mouse sees the squirrel. The squirrel likes the lion. If someone is cold then they are kind. If someone eats the cat then the cat eats the mouse. If someone eats the mouse then they are cold. If someone eats the squirrel and the squirrel is nice then they see the squirrel. If someone eats the squirrel then they are cold. If someone sees the squirrel then they like the cat. If someone likes the lion and the lion likes the cat then they see the squirrel. If someone sees the mouse and they like the cat then they are nice. If someone sees the squirrel and they are nice then the squirrel eats the mouse.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The squirrel is not nice.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y, bool) ::: Does x eat y?\nRough($x, bool) ::: Is x rough?\nSees($x, $y, bool) ::: Does x see y?\nKind($x, bool) ::: Is x kind?\nNice($x, bool) ::: Is x nice?\nLikes($x, $y, bool) ::: Does x like y?\nFacts:\nEats(Cat, Mouse, True) ::: The cat eats the mouse.\nEats(Cat, Squirrel, True) ::: The cat eats the squirrel.\nRough(Cat, True) ::: The cat is rough.\nSees(Cat, Lion, True) ::: The cat sees the lion.\nSees(Cat, Mouse, True) ::: The cat sees the mouse.\nSees(Cat, Squirrel, True) ::: The cat sees the squirrel.\nSees(Lion, Cat, True) ::: The lion sees the cat.\nSees(Lion, Squirrel, True) ::: The lion sees the squirrel.\nRound(Mouse, True) ::: The mouse is round.\nSees(Mouse, Squirrel, True) ::: The mouse sees the squirrel.\nLikes(Squirrel, Lion, True) ::: The squirrel likes the lion.\nRules:\nCold($x, True) >>> Kind($x, True) ::: If someone is cold then they are kind.\nEats(Cat, $x, True) >>> Eats($x, Mouse, True) ::: If someone eats the cat then the cat eats the mouse.\nEats($x, Mouse, True) >>> Cold($x, True) ::: If someone eats the mouse then they are cold.\nEats($x, Squirrel, True) && Squirrel($x, Nice) >>> Sees($x, Squirrel, True) ::: If someone eats the squirrel and the squirrel is nice then they see the squirrel.\nEats($x, Squirrel, True) >>> Cold($x, True) ::: If someone eats the squirrel then they are cold.\nSees($x, Mouse) && Likes($x, Cat) >>> Nice($x, True) ::: If someone sees the mouse and they like the cat then they are nice.\nSees($x, Squirrel) && Nice($x, True) >>>"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-893_Q15",
    "context": "The bald eagle is big. The bald eagle sees the lion. The bald eagle visits the rabbit. The lion eats the bald eagle. The lion is blue. The lion is cold. The lion visits the bald eagle. The lion visits the rabbit. The rabbit eats the tiger. The rabbit is big. The rabbit sees the bald eagle. The rabbit visits the tiger. The tiger is red. The tiger visits the bald eagle. If someone eats the bald eagle then the bald eagle visits the lion. If someone visits the bald eagle and the bald eagle sees the rabbit then the rabbit is red. If the lion is blue then the lion sees the tiger. If someone is big then they are cold. If someone is red then they visit the lion. If someone eats the bald eagle then they see the bald eagle. If someone eats the tiger and the tiger sees the lion then they visit the lion. If someone eats the lion and the lion sees the rabbit then the rabbit sees the bald eagle. If someone visits the lion and the lion sees the tiger then they see the rabbit.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The lion does not visit the lion.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nCold($x, bool) ::: Is x cold?\nRed($x, bool) ::: Is x red?\nVisits($x, $y, bool) ::: Does x visit y?\nEats($x, $y, bool) ::: Does x eat y?\nSees($x, $y, bool) ::: Does x see y?\nFacts:\nBig(BaldEagle, True) ::: The bald eagle is big.\nSees(BaldEagle, Lion, True) ::: The bald eagle sees the lion.\nVisits(BaldEagle, Rabbit, True) ::: The bald eagle visits the rabbit.\nEats(Lion, BaldEagle, True) ::: The lion eats the bald eagle.\nBlue(Lion, True) ::: The lion is blue.\nCold(Lion, True) ::: The lion is cold.\nVisits(Lion, BaldEagle, True) ::: The lion visits the bald eagle.\nVisits(Lion, Rabbit, True) ::: The lion visits the rabbit.\nEats(Rabbit, Tiger, True) ::: The rabbit eats the tiger.\nBig(Rabbit, True) ::: The rabbit is big.\nSees(Rabbit, BaldEagle, True) ::: The rabbit sees the bald eagle.\nVisits(Rabbit, Tiger, True) ::: The rabbit visits the tiger.\nRed(Tiger, True) ::: The tiger is red.\nVisits(Tiger, BaldEagle, True) ::: The tiger visits the bald eagle.\nRules:\nEats($x, $y, True) >>> Visits($x, $y, True) ::: If someone eats the bald eagle then the bald eagle visits the lion.\nVisits($x, $y, True) && Sees($x, $z, True) >>> Red($z, True) ::: If someone visits the bald eagle and the bald eagle sees the rabbit then the rabbit is red.\nBlue($x, True) >>> Sees($x, $y, True) ::: If the lion is blue then the lion sees the tiger.\nBig($x, True) >>> Cold($x, True) ::: If someone is big then they are cold.\nRed($x, True) >>> Visits($"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-1053_Q10",
    "context": "Bob is green. Bob is red. Bob is young. Dave is big. Dave is nice. Dave is red. Erin is nice. Erin is young. Gary is big. Gary is red. Nice, furry people are big. If someone is green and nice then they are red. Nice people are furry. If someone is big then they are furry. Furry people are young. If Dave is nice and Dave is young then Dave is green. All furry, big people are green. Red, furry people are not kind. If Bob is not furry then Bob is young.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Erin is not red.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen($x, bool) ::: Is x green?\nRed($x, bool) ::: Is x red?\nYoung($x, bool) ::: Is x young?\nBig($x, bool) ::: Is x big?\nNice($x, bool) ::: Is x nice?\nFurry($x, bool) ::: Is x furry?\nKind($x, bool) ::: Is x kind?\nFacts:\nGreen(Bob, True) ::: Bob is green.\nRed(Bob, True) ::: Bob is red.\nYoung(Bob, True) ::: Bob is young.\nRed(Dave, True) ::: Dave is red.\nNice(Dave, True) ::: Dave is nice.\nYoung(Erin, True) ::: Erin is young.\nNice(Erin, True) ::: Erin is nice.\nBig(Gary, True) ::: Gary is big.\nRed(Gary, True) ::: Gary is red.\nRules:\nNice($x, True) >>> Furry($x, True) ::: Nice people are furry.\nGreen($x, True) && Nice($x, True) >>> Red($x, True) ::: If someone is green and nice then they are red.\nNice($x, True) >>> Furry($x, True) ::: Nice people are furry.\nBig($x, True) >>> Furry($x, True) ::: If someone is big then they are furry.\nFurry($x, True) >>> Young($x, True) ::: Furry people are young.\nNice($x, True) && Young($x, True) >>> Green($x, True) ::: If Dave is nice and Dave is young then Dave is green.\nRed($x, True) && Furry($x, True) >>> Kind($x, False) ::: Red, furry people are not kind.\nNot(Furry($x, True)) >>> Young($x, True) ::: If Bob is not furry then Bob is young.\nQuery:\nNot(Red(Erin, True)) ::: Erin is not red.\n------\nProblem:\nBob is green. Bob is red. Bob is young. Dave is big. Dave is nice. Dave is red. Erin is nice. Erin is young. Gary is big. Gary is red. Nice, furry people are big. If someone is green and nice then they are red. Nice"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-202_Q14",
    "context": "Anne is kind. Anne is round. Charlie is blue. Charlie is cold. Charlie is kind. Charlie is not smart. Fiona is not kind. Fiona is smart. Gary is cold. Gary is green. Gary is round. Gary is white. If Fiona is blue then Fiona is green. If Fiona is smart then Fiona is cold. White things are round. All green, white things are round. Green things are round. Round, smart things are white. All cold things are blue. If Charlie is cold and Charlie is green then Charlie is kind.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Charlie is round.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nKind($x, bool) ::: Is x kind?\nRound($x, bool) ::: Is x round?\nBlue($x, bool) ::: Is x blue?\nCold($x, bool) ::: Is x cold?\nSmart($x, bool) ::: Is x smart?\nWhite($x, bool) ::: Is x white?\nFacts:\nKind(Anne, True) ::: Anne is kind.\nRound(Anne, True) ::: Anne is round.\nBlue(Charlie, True) ::: Charlie is blue.\nCold(Charlie, True) ::: Charlie is cold.\nKind(Charlie, True) ::: Charlie is kind.\nNot(Smart(Charlie, True)) ::: Charlie is not smart.\nNot(Kind(Fiona, True)) ::: Fiona is not kind.\nSmart(Fiona, True) ::: Fiona is smart.\nRound(Gary, True) ::: Gary is round.\nWhite(Gary, True) ::: Gary is white.\nGreen(Gary, True) ::: Gary is green.\nCold(Gary, True) ::: Gary is cold.\nRules:\nIf Fiona is blue then Fiona is green ::: If Fiona is blue then Fiona is green.\nIf Fiona is smart then Fiona is cold ::: If Fiona is smart then Fiona is cold.\nWhite($x, True) >>> Round($x, True) ::: White things are round.\nAll green, white things are round ::: All green, white things are round.\nGreen($x, True) >>> Round($x, True) ::: Green things are round.\nRound($x, True) >>> Smart($x, True) && White($x, True) ::: Round, smart things are white.\nAll cold things are blue ::: All cold things are blue.\nIf Charlie is cold and Charlie is green then Charlie is kind ::: If Charlie is cold and Charlie is green then Charlie is kind.\n------"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-827_Q12",
    "context": "The bear is round. The bear visits the rabbit. The cat eats the dog. The cat visits the bear. The dog does not eat the cat. The dog is not nice. The dog is round. The dog visits the bear. The rabbit chases the dog. The rabbit eats the bear. If something is big then it does not visit the dog. If something visits the rabbit then it chases the rabbit. If something chases the cat then it is round. If something visits the cat and it chases the dog then it is round. If something eats the cat then it is not big. Round things are big. If something chases the rabbit then the rabbit chases the cat.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The rabbit visits the dog.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRound($x, bool) ::: Is x round?\nVisits($x, $y, bool) ::: Does x visit y?\nEats($x, $y, bool) ::: Does x eat y?\nChases($x, $y, bool) ::: Does x chase y?\nBig($x, bool) ::: Is x big?\nNice($x, bool) ::: Is x nice?\nFacts:\nRound(Bear, True) ::: The bear is round.\nVisits(Bear, Rabbit, True) ::: The bear visits the rabbit.\nEats(Cat, Dog, True) ::: The cat eats the dog.\nVisits(Cat, Bear, True) ::: The cat visits the bear.\nNot(Eats(Dog, Cat, True)) ::: The dog does not eat the cat.\nNot(Nice(Dog, True)) ::: The dog is not nice.\nRound(Dog, True) ::: The dog is round.\nVisits(Dog, Bear, True) ::: The dog visits the bear.\nChases(Rabbit, Dog, True) ::: The rabbit chases the dog.\nEats(Rabbit, Bear, True) ::: The rabbit eats the bear.\nRules:\nNot(Visits(x, Dog, True)) >>> Big(x, True) ::: If something is big then it does not visit the dog.\nVisits(x, Rabbit, True) >>> Chases(x, Rabbit, True) ::: If something visits the rabbit then it chases the rabbit.\nChases(x, Cat, True) >>> Round(x, True) ::: If something chases the cat then it is round.\nVisits(x, Cat, True) && Chases(x, Dog, True) >>> Round(x, True) ::: If something visits the cat and it chases the dog then it is round.\nEats(x, Cat, True) >>> Not("
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1055_Q17",
    "context": "Anne is blue. Anne is red. Charlie is kind. Charlie is round. Erin is cold. Erin is kind. Fiona is kind. All red, young people are blue. If Anne is smart then Anne is cold. Young people are smart. All blue people are round. If Fiona is round then Fiona is kind. If Anne is cold then Anne is kind. If Erin is young and Erin is blue then Erin is kind. All round people are young.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Erin is not blue.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue($x, bool) ::: Is x blue?\nRed($x, bool) ::: Is x red?\nKind($x, bool) ::: Is x kind?\nRound($x, bool) ::: Is x round?\nSmart($x, bool) ::: Is x smart?\nYoung($x, bool) ::: Is x young?\nFacts:\nBlue(Anne, True) ::: Anne is blue.\nRed(Anne, True) ::: Anne is red.\nKind(Charlie, True) ::: Charlie is kind.\nRound(Charlie, True) ::: Charlie is round.\nCold(Erin, True) ::: Erin is cold.\nKind(Erin, True) ::: Erin is kind.\nKind(Fiona, True) ::: Fiona is kind.\nRules:\nRed($x, True) >>> Young($x, True) >>> Blue($x, True) ::: All red, young people are blue.\nSmart($x, True) >>> Young($x, True) ::: Young people are smart.\nBlue($x, True) >>> Round($x, True) ::: All blue people are round.\nRound($x, True) >>> Kind($x, True) ::: If Fiona is round then Fiona is kind.\nRed($x, True) >>> Kind($x, True) ::: If Anne is smart then Anne is cold.\nCold($x, True) >>> Kind($x, True) ::: If Anne is cold then Anne is kind.\nYoung($x, True) >>> Kind($x, True) ::: If Erin is young and Erin is blue then Erin is kind.\nRound($x, True) >>> Young($x, True) ::: All round people are young.\nQuery:\nNot(Blue(Erin, True)) ::: Erin is not blue.\n------\nProblem:\nAnne is blue. Anne is red. Anne is smart. Anne is young. Anne is kind. Anne is round. Anne"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-755_Q17",
    "context": "Bob is blue. Bob is green. Bob is quiet. Fiona is blue. Fiona is green. Fiona is quiet. Fiona is round. Gary is cold. Gary is red. Gary is round. Harry is red. All green, big people are quiet. If someone is red then they are big. If someone is big then they are round. If someone is quiet and green then they are blue. Quiet, big people are red. All round people are green.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is not red.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue($x, bool) ::: Is x blue?\nGreen($x, bool) ::: Is x green?\nQuiet($x, bool) ::: Is x quiet?\nRed($x, bool) ::: Is x red?\nBig($x, bool) ::: Is x big?\nCold($x, bool) ::: Is x cold?\nRound($x, bool) ::: Is x round?\nFacts:\nBlue(Bob, True) ::: Bob is blue.\nGreen(Bob, True) ::: Bob is green.\nQuiet(Bob, True) ::: Bob is quiet.\nBlue(Fiona, True) ::: Fiona is blue.\nGreen(Fiona, True) ::: Fiona is green.\nQuiet(Fiona, True) ::: Fiona is quiet.\nRound(Fiona, True) ::: Fiona is round.\nCold(Gary, True) ::: Gary is cold.\nRed(Gary, True) ::: Gary is red.\nRound(Gary, True) ::: Gary is round.\nRed(Harry, True) ::: Harry is red.\nRules:\nGreen($x, True) && Big($x, True) >>> Quiet($x, True) ::: All green, big people are quiet.\nRed($x, True) >>> Big($x, True) ::: If someone is red then they are big.\nBig($x, True) >>> Round($x, True) ::: If someone is big then they are round.\nQuiet($x, True) && Green($x, True) >>> Blue($x, True) ::: If someone is quiet and green then they are blue.\nQuiet($x, True) && Big($x, True) >>> Red($x, True) ::: Quiet, big people are red.\nRound($x, True) >>> Green($x, True) ::: All round people are green.\nQuery:\nNot(Red(Bob, True)) ::: Bob is not red."
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-872_Q14",
    "context": "Bob is green. Bob is nice. Bob is red. Dave is red. Dave is smart. Fiona is green. Fiona is nice. Fiona is quiet. Fiona is white. Gary is white. If something is white then it is kind. All white, smart things are kind. If something is quiet then it is white. Kind things are nice. Green, white things are red. All smart, red things are nice. If something is green and nice then it is quiet. All nice things are green.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is smart.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen($x, bool) ::: Is x green?\nNice($x, bool) ::: Is x nice?\nRed($x, bool) ::: Is x red?\nSmart($x, bool) ::: Is x smart?\nKind($x, bool) ::: Is x kind?\nQuiet($x, bool) ::: Is x quiet?\nWhite($x, bool) ::: Is x white?\nFacts:\nGreen(Bob, True) ::: Bob is green.\nNice(Bob, True) ::: Bob is nice.\nRed(Bob, True) ::: Bob is red.\nRed(Dave, True) ::: Dave is red.\nSmart(Dave, True) ::: Dave is smart.\nGreen(Fiona, True) ::: Fiona is green.\nNice(Fiona, True) ::: Fiona is nice.\nQuiet(Fiona, True) ::: Fiona is quiet.\nWhite(Fiona, True) ::: Fiona is white.\nWhite(Gary, True) ::: Gary is white.\nRules:\nWhite($x, True) >>> Kind($x, True) ::: If something is white then it is kind.\nWhite($x, True) && Smart($x, True) >>> Kind($x, True) ::: All white, smart things are kind.\nQuiet($x, True) >>> White($x, True) ::: If something is quiet then it is white.\nKind($x, True) >>> Nice($x, True) ::: Kind things are nice.\nGreen($x, True) && White($x, True) >>> Red($x, True) ::: Green, white things are red.\nSmart($x, True) && Red($x, True) >>> Nice($x, True) ::: All smart, red things are nice.\nGreen($x, True) && Nice($x, True) >>> Quiet($x, True) ::: If something is green and nice then it is quiet.\nNice($"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-794_Q23",
    "context": "The cat is blue. The cat is nice. The cat likes the cow. The cat needs the cow. The cat needs the rabbit. The cow does not need the rabbit. The cow needs the tiger. The rabbit is round. The tiger is nice. The tiger does not like the cow. If someone likes the cat and they chase the cat then they are blue. If someone likes the cow and they are red then the cow is round. If someone needs the tiger and they need the cat then they do not chase the cow. If someone needs the cat and the cat is blue then the cat is red. If someone is round then they need the cat. If someone likes the cat and the cat needs the rabbit then the cat chases the tiger. If the rabbit needs the tiger then the rabbit is not round.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The rabbit does not like the tiger.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue($x, bool) ::: Is x blue?\nNice($x, bool) ::: Is x nice?\nLike($x, $y, bool) ::: Does x like y?\nNeed($x, $y, bool) ::: Does x need y?\nChase($x, $y, bool) ::: Does x chase y?\nRound($x, bool) ::: Is x round?\nFacts:\nBlue(Cat, True) ::: The cat is blue.\nNice(Cat, True) ::: The cat is nice.\nLike(Cat, Cow, True) ::: The cat likes the cow.\nNeed(Cat, Cow, True) ::: The cat needs the cow.\nNeed(Cat, Rabbit, True) ::: The cat needs the rabbit.\nNot(Need(Cow, Rabbit, True)) ::: The cow does not need the rabbit.\nNeed(Cow, Tiger, True) ::: The cow needs the tiger.\nRound(Rabbit, True) ::: The rabbit is round.\nNice(Tiger, True) ::: The tiger is nice.\nNot(Like(Tiger, Cow, True)) ::: The tiger does not like the cow.\nRules:\nLike(Cat, $x, True) && Chase($x, Cat, True) >>> Blue($x, True) ::: If someone likes the cat and they chase the cat then they are blue.\nLike(Cow, $x, True) && Red($x, True) >>> Round($x, True) ::: If someone likes the cow and they are red then the cow is round.\nNeed(Cat, $x, True) && Need($x, Cat, True) >>> Not(Chase($x, Cow, True)) ::: If someone needs the tiger and they need the cat then they do not chase the cow.\nNeed(Cat, $x, True) && Blue($x, True) >>> Red($x, True) ::: If someone needs the cat and the cat"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-709_Q9",
    "context": "Anne is kind. Anne is quiet. Bob is blue. Bob is kind. Bob is round. Bob is white. Gary is big. Gary is white. Harry is kind. Harry is quiet. Harry is white. Harry is young. If someone is blue and white then they are young. Blue, big people are young. Blue, white people are round. White people are big. White, big people are blue. Round people are young. If someone is young then they are white. Kind people are round. All big, blue people are young.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Anne is big.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nKind($x, bool) ::: Is x kind?\nQuiet($x, bool) ::: Is x quiet?\nBlue($x, bool) ::: Is x blue?\nRound($x, bool) ::: Is x round?\nWhite($x, bool) ::: Is x white?\nBig($x, bool) ::: Is x big?\nYoung($x, bool) ::: Is x young?\nFacts:\nKind(Anne, True) ::: Anne is kind.\nQuiet(Anne, True) ::: Anne is quiet.\nBlue(Bob, True) ::: Bob is blue.\nKind(Bob, True) ::: Bob is kind.\nRound(Bob, True) ::: Bob is round.\nWhite(Bob, True) ::: Bob is white.\nBig(Gary, True) ::: Gary is big.\nWhite(Gary, True) ::: Gary is white.\nKind(Harry, True) ::: Harry is kind.\nQuiet(Harry, True) ::: Harry is quiet.\nWhite(Harry, True) ::: Harry is white.\nYoung(Harry, True) ::: Harry is young.\nRules:\nBlue($x, True) && White($x, True) >>> Young($x, True) ::: If someone is blue and white then they are young.\nBlue($x, True) && Big($x, True) >>> Young($x, True) ::: Blue, big people are young.\nBlue($x, True) && White($x, True) >>> Round($x, True) ::: Blue, white people are round.\nWhite($x, True) >>> Big($x, True) ::: White people are big.\nWhite($x, True) && Big($x, True) >>> Blue($x, True) ::: White, big people are blue.\nRound($x, True) >>> Young($x, True) ::: Round people are young.\nYoung($x, True) >>> White($x, True) ::"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-1227_Q8",
    "context": "Anne is cold. Anne is round. Bob is blue. Bob is round. Charlie is blue. Charlie is nice. Gary is cold. If something is big and green then it is not round. Blue, nice things are round. If Bob is furry then Bob is green. All cold, blue things are furry. Nice things are big. All round, cold things are not green. Green, cold things are not nice. If something is cold then it is nice. Big things are blue.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is not blue.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nRound($x, bool) ::: Is x round?\nBlue($x, bool) ::: Is x blue?\nNice($x, bool) ::: Is x nice?\nBig($x, bool) ::: Is x big?\nFurry($x, bool) ::: Is x furry?\nFacts:\nCold(Anne, True) ::: Anne is cold.\nRound(Anne, True) ::: Anne is round.\nBlue(Bob, True) ::: Bob is blue.\nRound(Bob, True) ::: Bob is round.\nBlue(Charlie, True) ::: Charlie is blue.\nNice(Charlie, True) ::: Charlie is nice.\nCold(Gary, True) ::: Gary is cold.\nRules:\nBig($x, True) >>> Blue($x, True) ::: Big things are blue.\nBlue($x, True) >>> Nice($x, True) ::: Blue, nice things are round.\nFurry(Bob, True) >>> Blue($x, True) ::: If Bob is furry then Bob is green.\nCold($x, True) >>> Furry($x, True) ::: All cold, blue things are furry.\nNice($x, True) >>> Big($x, True) ::: Nice things are big.\nRound($x, True) >>> Cold($x, True) ::: All round, cold things are not green.\nGreen($x, True) >>> Cold($x, True) ::: Green, cold things are not nice.\nCold($x, True) >>> Nice($x, True) ::: If something is cold then it is nice.\nBig($x, True) >>> Blue($x, True) ::: Big things are blue.\nQuery:\nNot(Blue(Gary, True)) ::: Gary is not blue.\n------\nProblem:\nAnne is cold. Anne is round. Bob is blue. Bob is"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-123_Q12",
    "context": "The bear is nice. The bear visits the tiger. The cat is cold. The cat does not need the tiger. The cat sees the mouse. The cat visits the bear. The mouse needs the bear. The mouse sees the cat. The mouse visits the bear. The tiger is not rough. The tiger does not need the mouse. If someone is rough then they are cold. If someone needs the bear then they need the mouse. If someone is kind then they need the mouse. If someone sees the bear then they are rough. If someone visits the mouse then they see the bear. If someone is kind then they visit the mouse. If someone needs the bear then they are kind. If someone sees the bear and the bear does not visit the cat then the bear does not need the mouse. If someone visits the cat then the cat visits the bear.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The mouse is not cold.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNice($x, bool) ::: Is x nice?\nVisits($x, $y, bool) ::: Does x visit y?\nCold($x, bool) ::: Is x cold?\nNeeds($x, $y, bool) ::: Does x need y?\nSees($x, $y, bool) ::: Does x see y?\nRough($x, bool) ::: Is x rough?\nRules:\nNice($x, True) >>> Needs($x, Mouse, True) ::: If someone is nice then they need the mouse.\nVisits($x, Bear, True) >>> Rough($x, True) ::: If someone visits the bear then they are rough.\nSees($x, Bear, True) >>> Rough($x, True) ::: If someone sees the bear then they are rough.\nNeeds($x, Bear, True) >>> Needs($x, Mouse, True) ::: If someone needs the bear then they need the mouse.\nKind($x, True) >>> Needs($x, Mouse, True) ::: If someone is kind then they need the mouse.\nVisits($x, Mouse, True) >>> Sees($x, Bear, True) ::: If someone visits the mouse then they see the bear.\nKind($x, True) >>> Visits($x, Mouse, True) ::: If someone is kind then they visit the mouse.\nNeeds($x, Bear, True) >>> Kind($x, True) ::: If someone needs the bear then they are kind.\nSees($x, Bear, True) && Bear($x, True) >>> Bear($x, False) ::: If someone sees the bear and the bear does not visit the cat then the bear does not need the mouse.\nVisits($x, Cat, True) >>> Cat($x, True) ::: If someone visits the cat then the cat visits the bear.\nFacts:\nNice(Bear, True) ::: The bear is nice.\nVisits(Bear, Tiger, True)"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-881_Q4",
    "context": "Dave is cold. Dave is nice. Dave is young. Fiona is blue. Fiona is quiet. Gary is cold. Harry is smart. All quiet, cold things are young. If something is smart then it is blue. If something is quiet and smart then it is nice. Smart, young things are white. If something is nice and blue then it is quiet. Quiet, nice things are cold. All blue things are quiet. All white things are cold. All young things are blue.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Dave is not blue.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nNice($x, bool) ::: Is x nice?\nYoung($x, bool) ::: Is x young?\nBlue($x, bool) ::: Is x blue?\nQuiet($x, bool) ::: Is x quiet?\nSmart($x, bool) ::: Is x smart?\nWhite($x, bool) ::: Is x white?\nFacts:\nCold(Dave, True) ::: Dave is cold.\nNice(Dave, True) ::: Dave is nice.\nYoung(Dave, True) ::: Dave is young.\nBlue(Fiona, True) ::: Fiona is blue.\nQuiet(Fiona, True) ::: Fiona is quiet.\nCold(Gary, True) ::: Gary is cold.\nSmart(Harry, True) ::: Harry is smart.\nRules:\nQuiet($x, True) && Cold($x, True) >>> Young($x, True) ::: All quiet, cold things are young.\nSmart($x, True) >>> Blue($x, True) ::: If something is smart then it is blue.\nQuiet($x, True) && Smart($x, True) >>> Nice($x, True) ::: If something is quiet and smart then it is nice.\nSmart($x, True) && Young($x, True) >>> White($x, True) ::: Smart, young things are white.\nQuiet($x, True) && Nice($x, True) >>> Blue($x, True) ::: If something is nice and blue then it is quiet.\nNice($x, True) && Blue($x, True) >>> Quiet($x, True) ::: If something is nice and blue then it is quiet.\nQuiet($x, True) && Nice($x, True) >>> Cold($x, True) ::: Quiet, nice things are cold.\nBlue($x, True) >>> Quiet($x, True) :::"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-558_Q6",
    "context": "The bald eagle does not like the rabbit. The dog likes the lion. The lion is young. The lion does not like the dog. The lion sees the bald eagle. The rabbit is not blue. The rabbit is not red. The rabbit is young. The rabbit likes the dog. The rabbit likes the lion. The rabbit does not see the bald eagle. The rabbit does not see the dog. The rabbit sees the lion. The rabbit does not visit the bald eagle. If someone is nice then they are red. If someone likes the dog then the dog sees the rabbit. If someone is nice and blue then they do not like the dog. If someone is young and red then they visit the dog. If someone sees the rabbit then they visit the lion. If the dog visits the lion then the lion is nice. If someone likes the rabbit and they are blue then the rabbit is nice. If someone likes the lion and they do not visit the dog then the lion visits the bald eagle.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The dog does not visit the lion.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nLikes($x, $y, bool) ::: Does x like y?\nSees($x, $y, bool) ::: Does x see y?\nVisits($x, $y, bool) ::: Does x visit y?\nYoung($x, bool) ::: Is x young?\nNice($x, bool) ::: Is x nice?\nBlue($x, bool) ::: Is x blue?\nRed($x, bool) ::: Is x red?\nFacts:\nLikes(BaldEagle, Rabbit, False) ::: The bald eagle does not like the rabbit.\nLikes(Dog, Lion, True) ::: The dog likes the lion.\nYoung(Lion, True) ::: The lion is young.\nLikes(Lion, Dog, False) ::: The lion does not like the dog.\nSees(Lion, BaldEagle, True) ::: The lion sees the bald eagle.\nBlue(Rabbit, False) ::: The rabbit is not blue.\nRed(Rabbit, False) ::: The rabbit is not red.\nYoung(Rabbit, True) ::: The rabbit is young.\nLikes(Rabbit, Dog, True) ::: The rabbit likes the dog.\nLikes(Rabbit, Lion, True) ::: The rabbit likes the lion.\nSees(Rabbit, BaldEagle, False) ::: The rabbit does not see the bald eagle.\nSees(Rabbit, Dog, False) ::: The rabbit does not see the dog.\nSees(Rabbit, Lion, True) ::: The rabbit sees the lion.\nVisits(Rabbit, BaldEagle, False) ::: The rabbit does not visit the bald eagle.\nRules:\nNice($x, True) >>> Red($x, True) ::: If someone is nice then they are red.\nLikes($x, Dog, True) >>> Sees($x, Rabbit, True) ::: If someone likes the dog then the dog sees the rabbit.\nNice($x, True) && Blue($x, True) >>> Likes($x, Dog, False) ::: If someone is nice and blue then they do not like the dog.\nYoung($x, True) && Red($x, True) >>> Visits($x, Dog, True) ::: If someone is young and red then they visit the dog.\nSees($x, Rabbit, True) >>> Visits($x, Lion, True) ::: If someone sees the rabbit then they visit the lion.\nVisits($x, Lion, True) >>> Nice($x, True) ::: If the dog visits the lion then the lion is nice.\nLikes($x, Rabbit, True) && Blue($x, True) >>> Nice($x, True) ::: If someone likes the rabbit and they are blue then the rabbit is nice.\nLikes($x, Lion, True) && Visits($x, Dog, False) >>> Visits($x, BaldEagle, True) ::: If someone likes the lion and they do not visit the dog then the lion visits the bald eagle.\n------"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-811_Q4",
    "context": "The bear is big. The bear is green. The bear is rough. The bear is young. The bear sees the mouse. The cow chases the bear. The cow chases the dog. The cow is young. The dog is red. The dog sees the bear. The mouse sees the cow. If someone chases the cow then they are rough. If someone is green then they are red. If someone sees the bear and the bear is red then the bear sees the cow. If someone is rough then they chase the dog. If someone chases the dog and they chase the mouse then the mouse is green. If someone is big then they visit the cow. If someone chases the cow then they visit the dog. If someone sees the cow then they chase the mouse.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bear does not chase the dog.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nGreen($x, bool) ::: Is x green?\nRough($x, bool) ::: Is x rough?\nYoung($x, bool) ::: Is x young?\nSees($x, $y, bool) ::: Does x see y?\nChases($x, $y, bool) ::: Does x chase y?\nVisits($x, $y, bool) ::: Does x visit y?\nFacts:\nBig(Bear, True) ::: The bear is big.\nGreen(Bear, True) ::: The bear is green.\nRough(Bear, True) ::: The bear is rough.\nYoung(Bear, True) ::: The bear is young.\nSees(Bear, Mouse, True) ::: The bear sees the mouse.\nChases(Cow, Bear, True) ::: The cow chases the bear.\nChases(Cow, Dog, True) ::: The cow chases the dog.\nYoung(Cow, True) ::: The cow is young.\nRed(Dog, True) ::: The dog is red.\nSees(Dog, Bear, True) ::: The dog sees the bear.\nSees(Mouse, Cow, True) ::: The mouse sees the cow.\nRules:\nChases($x, $y, True) >>> Rough($x, True) ::: If someone chases the cow then they are rough.\nGreen($x, True) >>> Red($x, True) ::: If someone is green then they are red.\nSees($x, Bear, True) && Red($x, True) >>> Sees($x, Cow, True) ::: If someone sees the bear and the bear is red then the bear sees the cow.\nRough($x, True) >>> Chases($x, Dog, True) ::: If someone is rough then they chase the dog.\nChases($x, Dog) && Chases($x, Mouse) >>> Green($x, True) ::: If someone chases the dog and they chase the mouse then the mouse is green.\nBig($x, True) >>> Visits($x, Cow, True) ::: If someone is big then they visit the cow.\nChases($x, Cow) >>> Visits($x, Dog, True) ::: If someone chases the cow then they visit the dog.\nSees($x, Cow, True) >>> Chases($x, Mouse, True) ::: If someone sees the cow then they chase the mouse.\nQuery:\nChases(Bear, Dog, False) ::: The bear does not chase the dog.\n------\nProblem:\nThe bear is big. The bear is green. The bear is rough. The bear is young. The bear sees the mouse. The cow chases the bear. The cow chases the dog. The cow is young. The dog is red. The dog sees the bear. The mouse sees the cow. If someone chases the cow then they are rough. If someone is green then they are red. If someone sees the bear and the bear is red then the bear sees the cow. If someone is rough then they chase the dog. If someone chases the dog and they chase the mouse"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-103_Q9",
    "context": "The bald eagle is blue. The bald eagle likes the cat. The bald eagle needs the mouse. The cat is round. The cat needs the cow. The cow is rough. The cow needs the mouse. The mouse is blue. The mouse is round. The mouse is young. The mouse visits the bald eagle. If something needs the bald eagle then it likes the cow. If something needs the cat then it likes the bald eagle. If the mouse visits the bald eagle then the mouse visits the cat. If something visits the bald eagle then it needs the bald eagle. If something likes the mouse then it needs the cow. If something likes the bald eagle then the bald eagle needs the cat. If something likes the cow then the cow visits the bald eagle.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cow needs the bald eagle.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue($x, bool) ::: Is x blue?\nRound($x, bool) ::: Is x round?\nYoung($x, bool) ::: Is x young?\nLikes($x, $y, bool) ::: Does x like y?\nNeeds($x, $y, bool) ::: Does x need y?\nVisits($x, $y, bool) ::: Does x visit y?\nFacts:\nBlue(BaldEagle, True) ::: The bald eagle is blue.\nLikes(BaldEagle, Cat, True) ::: The bald eagle likes the cat.\nNeeds(BaldEagle, Mouse, True) ::: The bald eagle needs the mouse.\nRound(Cat, True) ::: The cat is round.\nNeeds(Cat, Cow, True) ::: The cat needs the cow.\nRough(Cow, True) ::: The cow is rough.\nNeeds(Cow, Mouse, True) ::: The cow needs the mouse.\nBlue(Mouse, True) ::: The mouse is blue.\nRound(Mouse, True) ::: The mouse is round.\nYoung(Mouse, True) ::: The mouse is young.\nVisits(Mouse, BaldEagle, True) ::: The mouse visits the bald eagle.\nRules:\nNeeds($x, $y, True) >>> Likes($x, Cow, True) ::: If something needs the bald eagle then it likes the cow.\nLikes($x, BaldEagle, True) >>> Needs($x, Cat, True) ::: If something needs the cat then it likes the bald eagle.\nVisits($x, BaldEagle, True) >>> Visits($x, Cat, True) ::: If the mouse visits the bald eagle then the mouse visits the cat.\nVisits($x, $y, True) >>> Needs($x, $y, True) ::: If something visits the bald eagle then it needs the bald eagle.\nLikes($x, Mouse, True) >>> Needs($x, Cow, True) ::: If something likes the mouse then it needs the cow.\nLikes($x, BaldEagle, True) >>> Needs($x, Cat, True) ::: If something likes the bald eagle then the bald eagle needs the cat.\nLikes($x, Cow, True) >>> Visits($x, BaldEagle, True) ::: If something likes the cow then the cow visits the bald eagle.\nQuery:\nNeeds(Cow, BaldEagle, True) ::: The cow needs the bald eagle.\n------\nProblem:\nThe cat is furry. The cat is green. The cat is rough. The cat is white. The cat is young. The cat is quiet. The cat is red. The cat is blue. The cat is round. The cat is furry. The cat is green. The cat is rough. The cat is white. The cat is young. The cat is quiet. The cat is red. The cat is blue. The cat is round. The cat is furry. The cat is green. The cat is rough. The cat is white. The cat is young. The cat is quiet. The cat is red. The cat is"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-373_Q11",
    "context": "Anne is big. Anne is cold. Anne is green. Anne is round. Bob is big. Bob is blue. Bob is furry. Bob is green. Bob is kind. Bob is round. Charlie is cold. Charlie is green. Charlie is kind. Charlie is round. Gary is cold. Gary is kind. All cold, green people are blue. Blue people are furry. If Gary is kind then Gary is round. If someone is round then they are green. All furry people are big. If Anne is kind then Anne is blue. Furry, round people are blue.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is big.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nCold($x, bool) ::: Is x cold?\nGreen($x, bool) ::: Is x green?\nRound($x, bool) ::: Is x round?\nBlue($x, bool) ::: Is x blue?\nFurry($x, bool) ::: Is x furry?\nKind($x, bool) ::: Is x kind?\nFacts:\nBig(Anne, True) ::: Anne is big.\nCold(Anne, True) ::: Anne is cold.\nGreen(Anne, True) ::: Anne is green.\nRound(Anne, True) ::: Anne is round.\nBig(Bob, True) ::: Bob is big.\nBlue(Bob, True) ::: Bob is blue.\nFurry(Bob, True) ::: Bob is furry.\nGreen(Bob, True) ::: Bob is green.\nKind(Bob, True) ::: Bob is kind.\nRound(Bob, True) ::: Bob is round.\nCold(Charlie, True) ::: Charlie is cold.\nGreen(Charlie, True) ::: Charlie is green.\nKind(Charlie, True) ::: Charlie is kind.\nRound(Charlie, True) ::: Charlie is round.\nCold(Gary, True) ::: Gary is cold.\nKind(Gary, True) ::: Gary is kind.\nRules:\nCold($x, True) >>> Green($x, True) ::: All cold, green people are blue.\nBlue($x, True) >>> Furry($x, True) ::: Blue people are furry.\nKind($x, True) >>> Round($x, True) ::: If Gary is kind then Gary is round.\nRound($x, True) >>> Green($x, True) ::: If someone is round then they are green.\nFurry($x, True) >>> Big($x, True) ::: All furry people are big.\nKind($x, True) >>> Blue($x, True) ::: If Anne is kind then Anne is blue.\nFurry($x, True) && Round($x, True) >>> Blue($x, True) ::: Furry, round people are blue.\nQuery:\nBig(Gary, True) ::: Gary is big.\n------\nProblem:\nAnne is big. Anne is cold. Anne is green. Anne is round. Bob is big. Bob is blue. Bob is furry. Bob is green. Bob is kind. Bob is round. Charlie is cold. Charlie is green. Charlie is kind. Charlie is round. Gary is cold. Gary is kind. All cold, green people are blue. Blue people are furry. If Gary is kind then Gary is round. If someone is round then they are green. All furry people are big. If Anne is kind then Anne is blue. Furry, round people are blue.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Gary is big.\n###\nPredicates:\nBig($x, bool) ::: Is x big?\nCold($x, bool) ::: Is x cold?\nGreen($"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-22_Q5",
    "context": "The bear chases the dog. The bear eats the dog. The bear likes the squirrel. The dog chases the bear. The dog eats the bear. The dog is big. The dog likes the bear. The rabbit chases the dog. The rabbit does not chase the squirrel. The rabbit eats the squirrel. The rabbit is not kind. The rabbit is not young. The squirrel does not chase the rabbit. The squirrel eats the dog. If someone likes the bear then the bear is kind. If someone is nice and they like the bear then they eat the dog. If someone chases the bear and the bear is young then the bear eats the dog. If someone likes the bear and the bear is nice then they are kind. If someone likes the squirrel and the squirrel is rough then they are rough. If someone is young and nice then they chase the dog. If someone is kind then they are nice. If someone eats the dog and they are nice then the dog likes the bear. If someone is big and they chase the dog then they eat the rabbit.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bear is nice.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nEats($x, $y, bool) ::: Does x eat y?\nLikes($x, $y, bool) ::: Does x like y?\nKind($x, bool) ::: Is x kind?\nNice($x, bool) ::: Is x nice?\nYoung($x, bool) ::: Is x young?\nRough($x, bool) ::: Is x rough?\nBig($x, bool) ::: Is x big?\nFacts:\nChases(Bear, Dog, True) ::: The bear chases the dog.\nEats(Bear, Dog, True) ::: The bear eats the dog.\nLikes(Bear, Squirrel, True) ::: The bear likes the squirrel.\nChases(Dog, Bear, True) ::: The dog chases the bear.\nEats(Dog, Bear, True) ::: The dog eats the bear.\nBig(Dog, True) ::: The dog is big.\nLikes(Dog, Bear, True) ::: The dog likes the bear.\nChases(Rabbit, Dog, True) ::: The rabbit chases the dog.\nChases(Rabbit, Squirrel, False) ::: The rabbit does not chase the squirrel.\nEats(Rabbit, Squirrel, True) ::: The rabbit eats the squirrel.\nKind(Rabbit, False) ::: The rabbit is not kind.\nYoung(Rabbit, False) ::: The rabbit is not young.\nChases(Squirrel, Rabbit, False) ::: The squirrel does not chase the rabbit.\nEats(Squirrel, Dog, True) ::: The squirrel eats the dog.\nRules:\nLikes($x, Bear, True) >>> Kind($x, True) ::: If someone likes the bear then the bear is kind.\nNice($x, True) && Likes($x, Bear, True) >>> Eats($x, Dog, True) ::: If someone is nice and they like the bear then they eat the dog.\nChases($x, Bear, True) && Young($x, True) >>> Eats($x, Dog, True) ::: If someone chases the bear and the bear is young then the bear eats the dog.\nLikes($x, Bear, True) && Nice($x, True) >>> Kind($x, True) ::: If someone likes the bear and the bear is nice then they are kind.\nLikes($x, Squirrel, True) && Rough($x, True) >>> Rough($x, True) ::: If someone likes the squirrel and the squirrel is rough then they are rough.\nYoung($x, True) && Nice($x, True) >>> Chases($x, Dog, True) ::: If someone is young and nice then they chase the dog.\nKind($x, True) >>> Nice($x, True) ::: If someone is kind then they are nice.\nEats($x, Dog, True) && Nice($x, True) >>> Dog($"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1245_Q18",
    "context": "Bob is cold. Bob is smart. Fiona is cold. Fiona is quiet. Fiona is smart. Gary is nice. Harry is smart. If someone is quiet and cold then they are rough. All nice people are red. Big people are nice. All red people are quiet. If someone is quiet and rough then they are big. If Fiona is red then Fiona is cold. All red, nice people are smart. Quiet, smart people are rough. All cold people are big.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is cold.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nSmart($x, bool) ::: Is x smart?\nNice($x, bool) ::: Is x nice?\nRed($x, bool) ::: Is x red?\nBig($x, bool) ::: Is x big?\nQuiet($x, bool) ::: Is x quiet?\nRough($x, bool) ::: Is x rough?\nFacts:\nCold(Bob, True) ::: Bob is cold.\nSmart(Bob, True) ::: Bob is smart.\nCold(Fiona, True) ::: Fiona is cold.\nQuiet(Fiona, True) ::: Fiona is quiet.\nSmart(Fiona, True) ::: Fiona is smart.\nNice(Gary, True) ::: Gary is nice.\nSmart(Harry, True) ::: Harry is smart.\nRules:\nQuiet($x, True) && Cold($x, True) >>> Rough($x, True) ::: If someone is quiet and cold then they are rough.\nNice($x, True) >>> Red($x, True) ::: All nice people are red.\nBig($x, True) >>> Nice($x, True) ::: Big people are nice.\nQuiet($x, True) >>> Red($x, True) ::: All red people are quiet.\nQuiet($x, True) && Rough($x, True) >>> Big($x, True) ::: If someone is quiet and rough then they are big.\nRed($x, True) && Nice($x, True) >>> Smart($x, True) ::: All red, nice people are smart.\nQuiet($x, True) && Smart($x, True) >>> Rough($x, True) ::: Quiet, smart people are rough.\nCold($x, True) >>> Big($x, True) ::: All cold people are big.\nQuery:\nBig(Gary, True) ::: Gary is big.\n------\nProblem:\nBob is cold. Bob is smart. Fiona is cold. Fiona is quiet. Fiona is smart. Gary is nice. Harry is smart. If someone is quiet and cold then they are rough. All nice people are red. Big people are nice. All red people are quiet. If someone is quiet and rough then they are big. If Fiona is red then Fiona is cold. All red, nice people are smart. Quiet, smart people are rough. All cold people are big.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Gary is cold.\n###\nPredicates:\nCold($x, bool) ::: Is x cold?\nSmart($x, bool) ::: Is x smart?\nNice($x, bool) ::: Is x nice?\nRed($x, bool) ::: Is x red?\nBig($x, bool) ::: Is x big?\nQuiet($x, bool) ::: Is x quiet?\nRough($x, bool) ::: Is x rough?\nFacts:\nCold(Bob, True) ::: Bob is cold.\nSmart(Bob, True) ::: Bob is"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-571_Q2",
    "context": "The bald eagle is not blue. The bald eagle likes the dog. The bald eagle needs the tiger. The bald eagle does not see the dog. The bald eagle sees the tiger. The dog is blue. The dog sees the tiger. The rabbit is green. The rabbit is red. The rabbit sees the dog. The tiger needs the bald eagle. The tiger needs the dog. If someone needs the bald eagle and the bald eagle sees the tiger then they are rough. If someone needs the dog and they like the dog then they need the bald eagle. If someone likes the bald eagle then the bald eagle needs the dog. If someone is rough and they like the dog then the dog needs the tiger. If someone likes the dog and the dog is blue then they see the tiger. If someone needs the tiger and they do not see the dog then the tiger needs the bald eagle. If someone needs the bald eagle then they like the bald eagle.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The rabbit does not see the dog.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBaldEagle($x, bool) ::: Is x a bald eagle?\nBlue($x, bool) ::: Is x blue?\nDog($x, bool) ::: Is x a dog?\nGreen($x, bool) ::: Is x green?\nLikes($x, $y, bool) ::: Does x like y?\nNeeds($x, $y, bool) ::: Does x need y?\nRed($x, bool) ::: Is x red?\nRough($x, bool) ::: Is x rough?\nSees($x, $y, bool) ::: Does x see y?\nFacts:\nBaldEagle(BaldEagle, True) ::: The bald eagle is a bald eagle.\nBlue(Dog, True) ::: The dog is blue.\nDog(Dog, True) ::: The dog is a dog.\nGreen(Rabbit, True) ::: The rabbit is green.\nGreen(Rabbit, True) ::: The rabbit is red.\nLikes(BaldEagle, Dog, True) ::: The bald eagle likes the dog.\nNeeds(BaldEagle, Tiger, True) ::: The bald eagle needs the tiger.\nNeeds(BaldEagle, Dog, True) ::: The bald eagle needs the dog.\nNeeds(Dog, BaldEagle, True) ::: The dog needs the bald eagle.\nNeeds(Dog, Tiger, True) ::: The dog needs the tiger.\nNeeds(Tiger, BaldEagle, True) ::: The tiger needs the bald eagle.\nNeeds(Tiger, Dog, True) ::: The tiger needs the dog.\nRed(Rabbit, True) ::: The rabbit is red.\nRough(BaldEagle, True) ::: The bald eagle is rough.\nSees(BaldEagle, Tiger, True) ::: The bald eagle sees the tiger.\nSees(Dog, Tiger, True) ::: The dog sees the tiger.\nRules:\nBaldEagle($x, True) >>> Not(Blue($x, True)) ::: The bald eagle is not blue.\nBaldEagle($x, True) >>> Likes($x, Dog, True) ::: The bald eagle likes the dog.\nBaldEagle($x, True) >>> Needs($x, Tiger, True) ::: The bald eagle needs the tiger.\nNot(Sees($x, Dog, True)) >>> BaldEagle($x, True) ::: The bald eagle does not see the dog.\nSees($x, Tiger, True) >>> BaldEagle($x, True) ::: The bald eagle sees the tiger.\nBlue($x, True) >>> Sees($x, Tiger, True) ::: The dog sees the tiger.\nDog($x, True) >>> Sees($x, Tiger, True) ::: The rabbit is green.\nDog($x, True) >>> Red($x, True) ::: The rabbit is red.\nDog($x, True) >>> Sees"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-525_Q10",
    "context": "The cat visits the tiger. The lion eats the tiger. The lion does not visit the tiger. The rabbit eats the cat. The rabbit eats the tiger. The rabbit is nice. The tiger is round. If something is rough and not cold then it does not eat the tiger. If something visits the cat and the cat does not eat the lion then the lion is rough. If something visits the cat then the cat eats the rabbit. If something eats the rabbit then the rabbit is blue. If something eats the tiger then the tiger is blue. If something likes the tiger then the tiger eats the rabbit. If something likes the rabbit then it visits the lion. If something visits the tiger and the tiger is blue then the tiger does not eat the cat. If something is blue then it visits the cat.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The rabbit is not blue.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nVisits($x, $y, bool) ::: Does x visit y?\nEats($x, $y, bool) ::: Does x eat y?\nLikes($x, $y, bool) ::: Does x like y?\nRough($x, bool) ::: Is x rough?\nCold($x, bool) ::: Is x cold?\nBlue($x, bool) ::: Is x blue?\nRound($x, bool) ::: Is x round?\nNice($x, bool) ::: Is x nice?\nFacts:\nVisits(Cat, Tiger, True) ::: The cat visits the tiger.\nEats(Lion, Tiger, True) ::: The lion eats the tiger.\nNot(Visits(Lion, Tiger, True)) ::: The lion does not visit the tiger.\nEats(Rabbit, Cat, True) ::: The rabbit eats the cat.\nEats(Rabbit, Tiger, True) ::: The rabbit eats the tiger.\nNice(Rabbit, True) ::: The rabbit is nice.\nRound(Tiger, True) ::: The tiger is round.\nRule:\nNot(And(Rough($x, True), Not(Cold($x, True)))) >>> Not(Eats($x, Tiger, True)) ::: If something is rough and not cold then it does not eat the tiger.\nRule:\nAnd(Visits(Cat, $x, True), Not(Eats(Cat, Lion, True))) >>> Rough($x, True) ::: If something visits the cat and the cat does not eat the lion then the lion is rough.\nRule:\nAnd(Visits(Cat, $x, True), Eats($x, Rabbit, True)) >>> Eats(Cat, Rabbit, True) ::: If something visits the cat then the cat eats the rabbit.\nRule:\nAnd(Eats($x, Rabbit, True), Blue($x, True)) >>> Blue(Rabbit, True) ::: If something eats the rabbit then the rabbit is blue.\nRule:\nAnd(Eats($x, Tiger, True), Blue($x, True)) >>> Blue(Tiger, True) ::: If something eats the tiger then the tiger is blue.\nRule:\nAnd(Likes($x, Tiger, True), Eats(Tiger, Rabbit, True)) >>> Eats(Tiger, Rabbit, True) ::: If something likes the tiger then the tiger eats the rabbit.\nRule:\nAnd(Likes($x, Rabbit, True), Visits($x, Lion, True)) >>> Visits(Lion, Tiger, True) ::: If something likes the rabbit then it visits the lion.\nRule:\nAnd(Visits(Tiger, $x, True), Blue($x, True)) >>> Not(Eats(Tiger, Cat, True)) ::: If something visits the tiger and the tiger is blue then the tiger does not eat the cat.\nRule:\nBlue($x, True) >>> Visits(Cat, $x, True) ::: If something is"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-984_Q8",
    "context": "Bob is kind. Erin is big. Erin is quiet. Fiona is kind. Fiona is rough. Gary is nice. Gary is smart. If something is quiet and smart then it is furry. Rough, big things are kind. If something is big and kind then it is quiet. If something is quiet and big then it is kind. Rough things are big. Smart things are kind. Nice, furry things are quiet. If something is kind then it is rough.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is not quiet.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nKind($x, bool) ::: Is x kind?\nBig($x, bool) ::: Is x big?\nQuiet($x, bool) ::: Is x quiet?\nRough($x, bool) ::: Is x rough?\nFurry($x, bool) ::: Is x furry?\nNice($x, bool) ::: Is x nice?\nSmart($x, bool) ::: Is x smart?\nFacts:\nKind(Bob, True) ::: Bob is kind.\nBig(Erin, True) ::: Erin is big.\nQuiet(Erin, True) ::: Erin is quiet.\nKind(Fiona, True) ::: Fiona is kind.\nRough(Fiona, True) ::: Fiona is rough.\nNice(Gary, True) ::: Gary is nice.\nSmart(Gary, True) ::: Gary is smart.\nRules:\nQuiet($x, True) && Smart($x, True) >>> Furry($x, True) ::: If something is quiet and smart then it is furry.\nRough($x, True) && Big($x, True) >>> Kind($x, True) ::: Rough, big things are kind.\nBig($x, True) && Kind($x, True) >>> Quiet($x, True) ::: If something is big and kind then it is quiet.\nBig($x, True) && Kind($x, True) >>> Kind($x, True) ::: If something is big and kind then it is kind.\nRough($x, True) >>> Big($x, True) ::: Rough things are big.\nSmart($x, True) >>> Kind($x, True) ::: Smart things are kind.\nNice($x, True) && Furry($x, True) >>> Quiet($x, True) ::: Nice, furry things are quiet.\nKind($x, True) >>> Rough($x, True) ::: If something is kind then it is rough.\nQuery:\nNot(Quiet(Bob, True)) ::: Bob is not quiet.\n------\nProblem:\nBob is kind. Erin is big. Erin is quiet. Fiona is kind. Fiona is rough. Gary is nice. Gary is smart. If something is quiet and smart then it is furry. Rough, big things are kind. If something is big and kind then it is quiet. If something is quiet and big then it is kind. Rough things are big. Smart things are kind. Nice, furry things are quiet. If something is kind then it is rough.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Bob is not quiet.\n###\nPredicates:\nKind($x, bool) ::: Is x kind?\nBig($x, bool) ::: Is x big?\nQuiet($x, bool) ::: Is x quiet?\nRough($x, bool) ::: Is x rough?\nFurry($x, bool) ::: Is x furry?\nNice($x, bool) ::: Is x nice?\nSmart($x, bool) ::: Is x smart?\nFacts:\nKind(Bob"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-134_Q1",
    "context": "The bald eagle sees the rabbit. The dog eats the bald eagle. The dog eats the lion. The dog is green. The dog is nice. The dog needs the bald eagle. The dog needs the lion. The dog sees the bald eagle. The dog sees the rabbit. The lion eats the rabbit. The lion is nice. The lion is round. The lion sees the rabbit. The rabbit eats the bald eagle. If the rabbit eats the bald eagle then the rabbit is kind. All green, kind things are rough. If something sees the bald eagle then it needs the dog. If something sees the bald eagle and it is round then the bald eagle is nice. If the bald eagle needs the dog then the dog is kind. If something is nice then it sees the bald eagle.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The dog eats the lion.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nSees($x, $y, bool) ::: Does x see y?\nEats($x, $y, bool) ::: Does x eat y?\nNeeds($x, $y, bool) ::: Does x need y?\nKind($x, bool) ::: Is x kind?\nRound($x, bool) ::: Is x round?\nRough($x, bool) ::: Is x rough?\nFacts:\nSees(Dog, BaldEagle, True) ::: The dog sees the bald eagle.\nEats(Dog, BaldEagle, True) ::: The dog eats the bald eagle.\nEats(Dog, Lion, True) ::: The dog eats the lion.\nGreen(Dog, True) ::: The dog is green.\nNice(Dog, True) ::: The dog is nice.\nNeeds(Dog, BaldEagle, True) ::: The dog needs the bald eagle.\nNeeds(Dog, Lion, True) ::: The dog needs the lion.\nSees(Dog, BaldEagle, True) ::: The dog sees the bald eagle.\nSees(Dog, Rabbit, True) ::: The dog sees the rabbit.\nEats(Lion, Rabbit, True) ::: The lion eats the rabbit.\nNice(Lion, True) ::: The lion is nice.\nRound(Lion, True) ::: The lion is round.\nSees(Lion, Rabbit, True) ::: The lion sees the rabbit.\nEats(Rabbit, BaldEagle, True) ::: The rabbit eats the bald eagle.\nIf(Rabbit, Eats, BaldEagle, Kind, Rabbit) ::: If the rabbit eats the bald eagle then the rabbit is kind.\nRule:\nKind($x, True) >>> Rough($x, True) ::: All green, kind things are rough.\nIf(Dog, Sees, BaldEagle, Needs, BaldEagle) ::: If something sees the bald eagle then it needs the dog.\nIf(Dog, Sees, BaldEagle, Nice, BaldEagle) ::: If something sees the bald eagle and it is round then the bald eagle is nice.\nIf(BaldEagle, Needs, Dog, Kind, Dog) ::: If the bald eagle needs the dog then the dog is kind.\nIf(Nice, Sees, BaldEagle, True, BaldEagle) ::: If something is nice then it sees the bald eagle.\nQuery:\nEats(Dog, Lion, True) ::: The dog eats the lion.\n------\nProblem:\nThe dog is green. The dog is nice. The dog is round. The dog is rough. The dog is white. The dog is young. The dog sees the rabbit. The dog sees the lion. The dog sees the bald eagle. The dog eats the rabbit. The dog eats the lion. The dog eats the bald eagle. The dog needs the rabbit. The dog needs the lion. The dog needs the bald eagle. The dog is kind. The dog is quiet"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-220_Q13",
    "context": "Anne is quiet. Anne is smart. Charlie is blue. Charlie is furry. Charlie is smart. Gary is not furry. Harry is blue. Harry is furry. Harry is nice. Harry is smart. If someone is quiet then they are round. If someone is round then they are blue. If Anne is white then Anne is nice. All blue, quiet people are white. If Harry is not round then Harry is not white. White, quiet people are nice. If someone is nice and smart then they are furry. If someone is furry then they are smart. All white, furry people are smart.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is not smart.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nQuiet($x, bool) ::: Is x quiet?\nSmart($x, bool) ::: Is x smart?\nBlue($x, bool) ::: Is x blue?\nRound($x, bool) ::: Is x round?\nNice($x, bool) ::: Is x nice?\nFurry($x, bool) ::: Is x furry?\nFacts:\nQuite(Anne, True) ::: Anne is quiet.\nSmart(Anne, True) ::: Anne is smart.\nBlue(Charlie, True) ::: Charlie is blue.\nFurry(Charlie, True) ::: Charlie is furry.\nSmart(Charlie, True) ::: Charlie is smart.\nNotFurry(Gary, True) ::: Gary is not furry.\nBlue(Harry, True) ::: Harry is blue.\nFurry(Harry, True) ::: Harry is furry.\nNice(Harry, True) ::: Harry is nice.\nSmart(Harry, True) ::: Harry is smart.\nRules:\nQuite($x, True) >>> Round($x, True) ::: If someone is quiet then they are round.\nRound($x, True) >>> Blue($x, True) ::: If someone is round then they are blue.\nWhite($x, True) >>> Nice($x, True) ::: If Anne is white then Anne is nice.\nQuite($x, True) && Blue($x, True) >>> White($x, True) ::: All blue, quiet people are white.\nNotRound($x, True) >>> NotWhite($x, True) ::: If Harry is not round then Harry is not white.\nWhite($x, True) && Quite($x, True) >>> Nice($x, True) ::: White, quiet people are nice.\nNice($x, True) && Smart($x, True) >>> Furry($x, True) ::: If someone is nice and smart then they are furry.\nFurry($x, True) >>> Smart($x, True) ::: If someone is furry then they are smart.\nWhite($x, True) && Furry($x, True) >>> Smart($x, True) ::: All white, furry people are smart.\nQuery:\nNotSmart(Gary, True) ::: Gary is not smart.\n------"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-289_Q3",
    "context": "Charlie is blue. Charlie is kind. Dave is round. Fiona is big. Fiona is blue. Fiona is round. Gary is cold. If someone is white then they are not big. Round people are big. Kind people are not rough. If someone is rough and big then they are round. Blue people are kind. If someone is cold then they are blue. All white people are blue. Big people are cold. If Charlie is blue and Charlie is cold then Charlie is white.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Fiona is cold.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue($x, bool) ::: Is x blue?\nKind($x, bool) ::: Is x kind?\nRound($x, bool) ::: Is x round?\nBig($x, bool) ::: Is x big?\nCold($x, bool) ::: Is x cold?\nRough($x, bool) ::: Is x rough?\nFacts:\nBlue(Charlie, True) ::: Charlie is blue.\nKind(Charlie, True) ::: Charlie is kind.\nRound(Dave, True) ::: Dave is round.\nBig(Fiona, True) ::: Fiona is big.\nBlue(Fiona, True) ::: Fiona is blue.\nRound(Fiona, True) ::: Fiona is round.\nCold(Gary, True) ::: Gary is cold.\nRules:\nWhite($x, True) >>> Not(Big($x, True)) ::: If someone is white then they are not big.\nRound($x, True) >>> Big($x, True) ::: Round people are big.\nKind($x, True) >>> Not(Rough($x, True)) ::: Kind people are not rough.\nRough($x, True) && Big($x, True) >>> Round($x, True) ::: If someone is rough and big then they are round.\nBlue($x, True) >>> Kind($x, True) ::: Blue people are kind.\nCold($x, True) >>> Blue($x, True) ::: If someone is cold then they are blue.\nAll(White($x, True), Blue($x, True)) ::: All white people are blue.\nBig($x, True) >>> Cold($x, True) ::: Big people are cold.\nIf(Charlie, Blue($x, True), Cold($x, True)) >>> White($x, True) ::: If Charlie is blue and Charlie is cold then Charlie is white.\nQuery:\nCold(Fiona, True) ::: Fiona is cold.\n------\nProblem:\nCharlie is blue. Charlie is kind. Dave is round. Fiona is big. Fiona is blue. Fiona is round. Gary is cold. If someone is white then they are not big. Round people are big. Kind people are not rough. If someone is rough and big then they are round. Blue people are kind. If someone is cold then they are blue. All"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-718_Q2",
    "context": "The cat chases the squirrel. The cat is not big. The cat does not like the mouse. The cat visits the dog. The cat visits the mouse. The dog is not cold. The dog is young. The mouse likes the squirrel. The squirrel does not chase the dog. The squirrel likes the dog. If the cat is green and the cat visits the mouse then the mouse is big. If something likes the dog then it is cold. If something likes the mouse then the mouse is green. If something is cold then it chases the cat. If something chases the cat then it likes the cat. If something is young then it chases the squirrel. If something chases the squirrel and it does not chase the mouse then the squirrel likes the cat. If something likes the mouse and it is green then the mouse is cold. If something chases the cat then the cat likes the dog.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cat does not chase the squirrel.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nBig($x, bool) ::: Is x big?\nLikes($x, $y, bool) ::: Does x like y?\nVisits($x, $y, bool) ::: Does x visit y?\nCold($x, bool) ::: Is x cold?\nYoung($x, bool) ::: Is x young?\nGreen($x, bool) ::: Is x green?\nFacts:\nChases(Cat, Squirrel, True) ::: The cat chases the squirrel.\nNot(Big(Cat, True)) ::: The cat is not big.\nNot(Likes(Cat, Mouse, True)) ::: The cat does not like the mouse.\nVisits(Cat, Dog, True) ::: The cat visits the dog.\nVisits(Cat, Mouse, True) ::: The cat visits the mouse.\nNot(Cold(Dog, True)) ::: The dog is not cold.\nYoung(Dog, True) ::: The dog is young.\nLikes(Mouse, Squirrel, True) ::: The mouse likes the squirrel.\nNot(Chases(Squirrel, Dog, True)) ::: The squirrel does not chase the dog.\nLikes(Squirrel, Dog, True) ::: The squirrel likes the dog.\nIf(Cat, Green, Cat, Visits, Mouse, Big, Mouse) ::: If the cat is green and the cat visits the mouse then the mouse is big.\nIf(Something, Likes, Dog, Cold) ::: If something likes the dog then it is cold.\nIf(Something, Likes, Mouse, Green) ::: If something likes the mouse then the mouse is green.\nIf(Something, Cold, Something, Chases, Cat) ::: If something is cold then it chases the cat.\nIf(Something, Chases, Cat, Likes, Cat) ::: If something chases the cat then it likes the cat.\nIf(Something, Young, Something, Chases, Squirrel) ::: If something is young then it chases the squirrel.\nIf(Something, Chases, Cat, Likes, Cat, Something, Chases, Squirrel, Not, Chases, Mouse) ::: If something chases the cat and it does not chase the mouse then the squir"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1275_Q12",
    "context": "Anne is big. Anne is quiet. Anne is smart. Dave is cold. Dave is green. Dave is rough. Dave is smart. Erin is big. Erin is cold. Gary is smart. All cold, quiet people are kind. All big people are kind. All rough, smart people are green. If Dave is big and Dave is smart then Dave is cold. If someone is quiet then they are smart. If someone is smart then they are quiet. All kind people are quiet. Smart, quiet people are rough.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Erin is not green.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nQuiet($x, bool) ::: Is x quiet?\nSmart($x, bool) ::: Is x smart?\nCold($x, bool) ::: Is x cold?\nKind($x, bool) ::: Is x kind?\nGreen($x, bool) ::: Is x green?\nRough($x, bool) ::: Is x rough?\nFacts:\nBig(Anne, True) ::: Anne is big.\nQuiet(Anne, True) ::: Anne is quiet.\nSmart(Anne, True) ::: Anne is smart.\nCold(Dave, True) ::: Dave is cold.\nGreen(Dave, True) ::: Dave is green.\nRough(Dave, True) ::: Dave is rough.\nSmart(Dave, True) ::: Dave is smart.\nBig(Erin, True) ::: Erin is big.\nCold(Erin, True) ::: Erin is cold.\nSmart(Gary, True) ::: Gary is smart.\nRules:\nCold($x, True) && Quiet($x, True) >>> Kind($x, True) ::: All cold, quiet people are kind.\nBig($x, True) >>> Kind($x, True) ::: All big people are kind.\nRough($x, True) && Smart($x, True) >>> Green($x, True) ::: All rough, smart people are green.\nCold($x, True) && Smart($x, True) && Big($x, True) >>> Cold($x, True) ::: If Dave is big and Dave is smart then Dave is cold.\nQuiet($x, True) >>> Smart($x, True) ::: If someone is quiet then they are smart.\nSmart($x, True) >>> Quiet($x, True) ::: If someone is smart then they are quiet.\nKind($x, True) >>> Quiet($x, True) ::: All kind people are quiet.\nSmart($x, True) && Quiet($x, True) >>> Rough($x, True) ::: Smart, quiet people are rough.\nQuery:\nNot(Green(Erin, True)) ::: Erin is not green.\n------\nProblem:\nAnne is big. Anne is cold. Anne is green. Anne is kind. Anne is"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-648_Q23",
    "context": "The bear chases the lion. The cat is cold. The cat is round. The cat does not see the cow. The cow is green. The cow visits the bear. The lion chases the bear. The lion does not chase the cat. The lion is cold. The lion is red. If something visits the bear and the bear does not see the lion then it chases the lion. If something sees the lion then it is cold. If something is kind then it does not visit the lion. If something chases the cow then it sees the cat. If something sees the cat then the cat chases the lion. If something is cold and it sees the cat then the cat is red. If something chases the cow then the cow visits the cat. If something is red then it chases the cow. If the cow visits the bear and the bear visits the cow then the cow sees the lion.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cat does not visit the lion.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nVisits($x, $y, bool) ::: Does x visit y?\nSees($x, $y, bool) ::: Does x see y?\nKind($x, bool) ::: Is x kind?\nRound($x, bool) ::: Is x round?\nCold($x, bool) ::: Is x cold?\nGreen($x, bool) ::: Is x green?\nRed($x, bool) ::: Is x red?\nFacts:\nChases(Bear, Lion, True) ::: The bear chases the lion.\nCold(Cat, True) ::: The cat is cold.\nRound(Cat, True) ::: The cat is round.\nDoesNotSee(Cat, Cow, True) ::: The cat does not see the cow.\nGreen(Cow, True) ::: The cow is green.\nVisits(Cow, Bear, True) ::: The cow visits the bear.\nChases(Lion, Bear, True) ::: The lion chases the bear.\nDoesNotChase(Lion, Cat, True) ::: The lion does not chase the cat.\nCold(Lion, True) ::: The lion is cold.\nRed(Lion, True) ::: The lion is red.\nIfVisitsBearAndBearDoesNotSeeLionThenChasesLion(x, y, z) ::: If something visits the bear and the bear does not see the lion then it chases the lion.\nIfSeesLionThenIsCold(x, y, z) ::: If something sees the lion then it is cold.\nIfKindThenDoesNotVisitLion(x, y, z) ::: If something is kind then it does not visit the lion.\nIfChasesCowThenSeesCat(x, y, z) ::: If something chases the cow then it sees the cat.\nIfSeesCatThenCatChasesLion(x, y, z) ::: If something sees the cat then the cat chases the lion.\nIfColdAndSeesCatThenCatIsRed(x, y, z) ::: If something is cold and it sees the cat then the cat is red.\nIfChasesCowThenCowVisitsCat(x, y, z) ::: If something chases the cow then"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-304_Q8",
    "context": "Bob is smart. Fiona is cold. Fiona is kind. Fiona is red. Fiona is white. Gary is cold. Gary is smart. Gary is young. Harry is big. Harry is white. Kind people are red. If someone is smart then they are kind. All young, cold people are kind. Cold, kind people are big. All red, cold people are big. If someone is young and red then they are cold. If Harry is young then Harry is big. Red, kind people are young.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is not young.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nSmart($x, bool) ::: Is x smart?\nCold($x, bool) ::: Is x cold?\nKind($x, bool) ::: Is x kind?\nRed($x, bool) ::: Is x red?\nWhite($x, bool) ::: Is x white?\nBig($x, bool) ::: Is x big?\nYoung($x, bool) ::: Is x young?\nFacts:\nSmart(Bob, True) ::: Bob is smart.\nCold(Fiona, True) ::: Fiona is cold.\nKind(Fiona, True) ::: Fiona is kind.\nRed(Fiona, True) ::: Fiona is red.\nWhite(Fiona, True) ::: Fiona is white.\nCold(Gary, True) ::: Gary is cold.\nSmart(Gary, True) ::: Gary is smart.\nYoung(Gary, True) ::: Gary is young.\nBig(Harry, True) ::: Harry is big.\nWhite(Harry, True) ::: Harry is white.\nRules:\nKind($x, True) >>> Red($x, True) ::: Kind people are red.\nSmart($x, True) >>> Kind($x, True) ::: If someone is smart then they are kind.\nYoung($x, True) && Cold($x, True) >>> Kind($x, True) ::: All young, cold people are kind.\nCold($x, True) && Kind($x, True) >>> Big($x, True) ::: Cold, kind people are big.\nRed($x, True) && Cold($x, True) >>> Big($x, True) ::: All red, cold people are big.\nYoung($x, True) && Red($x, True) >>> Cold($x, True) ::: If someone is young and red then they are cold.\nYoung($x, True) >>> Big($x, True) ::: If Harry is young then Harry is big.\nRed($x, True) && Kind($x, True) >>> Young($x, True) ::: Red, kind people are young.\nQuery:\nYoung(Bob, False) ::: Bob is not young.\n------\nProblem:\nBob is big. Bob is cold. Bob is kind. Bob is red. Bob is white. Fiona is big. Fiona is cold"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-48_Q6",
    "context": "The bear chases the cat. The bear chases the squirrel. The bear is young. The bear does not see the squirrel. The cat chases the cow. The cat chases the squirrel. The cat eats the squirrel. The cat is not kind. The cat does not see the cow. The cow does not chase the cat. The cow chases the squirrel. The squirrel chases the bear. The squirrel eats the cat. The squirrel eats the cow. The squirrel is young. The squirrel sees the cow. If something eats the bear then the bear sees the cow. If something is kind then it eats the bear. If the cow chases the bear and the cat does not chase the cow then the cow sees the squirrel. If something sees the squirrel then it is rough. If something eats the bear and it does not chase the cat then the cat sees the bear. If something sees the cow then it is kind. If something eats the squirrel then it eats the cat.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The squirrel does not eat the bear.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nEats($x, $y, bool) ::: Does x eat y?\nYoung($x, bool) ::: Is x young?\nKind($x, bool) ::: Is x kind?\nSees($x, $y, bool) ::: Does x see y?\nRough($x, bool) ::: Is x rough?\nFacts:\nChases(Bear, Cat, True) ::: The bear chases the cat.\nChases(Bear, Squirrel, True) ::: The bear chases the squirrel.\nYoung(Bear, True) ::: The bear is young.\nNot(Sees(Bear, Squirrel, True)) ::: The bear does not see the squirrel.\nChases(Cat, Cow, True) ::: The cat chases the cow.\nChases(Cat, Squirrel, True) ::: The cat chases the squirrel.\nEats(Cat, Squirrel, True) ::: The cat eats the squirrel.\nNot(Kind(Cat, True)) ::: The cat is not kind.\nNot(Sees(Cat, Cow, True)) ::: The cat does not see the cow.\nNot(Chases(Cow, Cat, True)) ::: The cow does not chase the cat.\nChases(Cow, Squirrel, True) ::: The cow chases the squirrel.\nChases(Squirrel, Bear, True) ::: The squirrel chases the bear.\nEats(Squirrel, Cat, True) ::: The squirrel eats the cat.\nEats(Squirrel, Cow, True) ::: The squirrel eats the cow.\nYoung(Squirrel, True) ::: The squirrel is young.\nSees(Squirrel, Cow, True) ::: The squirrel sees the cow.\nRules:\nEats($x, $y, True) >>> Sees($x, $y, True) ::: If something eats the bear then the bear sees the cow.\nKind($x, True) >>> Eats($x, Bear, True) ::: If something is kind then it eats the bear.\nNot(Chases($x, $y, True)) && Chases($x, $z"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1177_Q13",
    "context": "Bob is cold. Bob is furry. Dave is cold. Dave is kind. Dave is quiet. Dave is red. Dave is white. Fiona is white. Harry is furry. Harry is kind. Harry is round. Quiet people are kind. If Dave is white and Dave is round then Dave is kind. If someone is furry then they are cold. If Bob is red and Bob is quiet then Bob is furry. All white people are furry. Red, white people are round. If someone is cold then they are red. All round people are quiet.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is not quiet.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nFurry($x, bool) ::: Is x furry?\nKind($x, bool) ::: Is x kind?\nQuiet($x, bool) ::: Is x quiet?\nRed($x, bool) ::: Is x red?\nRound($x, bool) ::: Is x round?\nWhite($x, bool) ::: Is x white?\nFacts:\nCold(Bob, True) ::: Bob is cold.\nFurry(Bob, True) ::: Bob is furry.\nCold(Dave, True) ::: Dave is cold.\nKind(Dave, True) ::: Dave is kind.\nQuiet(Dave, True) ::: Dave is quiet.\nRed(Dave, True) ::: Dave is red.\nWhite(Dave, True) ::: Dave is white.\nWhite(Fiona, True) ::: Fiona is white.\nFurry(Harry, True) ::: Harry is furry.\nKind(Harry, True) ::: Harry is kind.\nRound(Harry, True) ::: Harry is round.\nRules:\nQuiet($x, True) >>> Kind($x, True) ::: Quiet people are kind.\nDave(White($x, True) && Round($x, True)) >>> Kind($x, True) ::: If Dave is white and Dave is round then Dave is kind.\nFurry($x, True) >>> Cold($x, True) ::: If someone is furry then they are cold.\nRed($x, True) && Quiet($x, True) >>> Furry($x, True) ::: If Bob is red and Bob is quiet then Bob is furry.\nWhite($x, True) >>> Furry($x, True) ::: All white people are furry.\nRed($x, True) && White($x, True) >>> Round($x, True) ::: Red, white people are round.\nCold($x, True) >>> Red($x, True) ::: If someone is cold then they are red.\nRound($x, True) >>> Quiet($x, True) ::: All round people are quiet.\nQuery:\nNot(Quiet(Bob, True)) ::: Bob is not quiet.\n------\nProblem:\nBob is cold. Bob is furry. Bob"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-3_Q1",
    "context": "Anne is round. Anne is white. Charlie is big. Charlie is rough. Dave is green. Dave is round. Erin is young. All kind things are green. All rough, white things are big. If something is green then it is rough. All green, big things are young. If Erin is round and Erin is green then Erin is big. If something is round and white then it is kind. If Dave is big and Dave is rough then Dave is white. All round things are white.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Dave is round.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRound($x, bool) ::: Is x round?\nWhite($x, bool) ::: Is x white?\nBig($x, bool) ::: Is x big?\nRough($x, bool) ::: Is x rough?\nKind($x, bool) ::: Is x kind?\nGreen($x, bool) ::: Is x green?\nFacts:\nRound(Anne, True) ::: Anne is round.\nWhite(Anne, True) ::: Anne is white.\nBig(Charlie, True) ::: Charlie is big.\nRough(Charlie, True) ::: Charlie is rough.\nGreen(Dave, True) ::: Dave is green.\nRound(Dave, True) ::: Dave is round.\nYoung(Erin, True) ::: Erin is young.\nRules:\nGreen($x, True) >>> Rough($x, True) ::: All kind things are green.\nRough($x, True) && White($x, True) >>> Big($x, True) ::: All rough, white things are big.\nGreen($x, True) >>> Rough($x, True) ::: If something is green then it is rough.\nGreen($x, True) && Big($x, True) >>> Young($x, True) ::: All green, big things are young.\nRound($x, True) && White($x, True) >>> Kind($x, True) ::: If something is round and white then it is kind.\nBig($x, True) && Rough($x, True) >>> White($x, True) ::: If Dave is big and Dave is rough then Dave is white.\nRound($x, True) >>> White($x, True) ::: All round things are white.\nQuery:\nRound(Dave, True) ::: Dave is round.\n------\nProblem:\nAnne is furry. Anne is green. Anne is quiet. Anne is rough. Anne is white. Anne is young. Bella is furry. Bella is green. Bella is quiet. Bella is rough. Bella is white. Bella is young. Charlie is furry. Charlie is green. Charlie is quiet. Charlie is rough. Charlie is white. Charlie is young. Dave is furry. Dave is green. Dave is quiet. Dave is rough. Dave is white. Dave is young. Erin is furry. Erin is green. Erin"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-987_Q11",
    "context": "The bear is kind. The cow eats the bear. The cow eats the dog. The cow is not blue. The cow is not kind. The cow likes the dog. The cow likes the tiger. The cow sees the bear. The dog eats the bear. The dog sees the cow. The tiger is blue. The tiger likes the bear. The tiger likes the cow. The tiger likes the dog. If the cow likes the dog and the dog sees the cow then the dog is round. If something sees the tiger then it eats the tiger. If something is kind and it does not like the cow then the cow sees the bear. If something sees the cow then it sees the tiger. If something eats the tiger and it sees the tiger then the tiger sees the cow. If the tiger does not see the cow and the tiger does not like the bear then the tiger likes the dog. If something sees the bear then the bear does not eat the cow. If the bear likes the cow then the bear eats the cow. If the tiger likes the dog then the tiger does not see the bear.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The tiger eats the tiger.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nKind($x, bool) ::: Is x kind?\nEats($x, $y, bool) ::: Does x eat y?\nLikes($x, $y, bool) ::: Does x like y?\nSees($x, $y, bool) ::: Does x see y?\nRound($x, bool) ::: Is x round?\nBlue($x, bool) ::: Is x blue?\nFacts:\nKind(Cow, False) ::: The cow is not kind.\nKind(Tiger, False) ::: The tiger is not kind.\nKind(Bear, True) ::: The bear is kind.\nEats(Cow, Bear, True) ::: The cow eats the bear.\nEats(Cow, Dog, True) ::: The cow eats the dog.\nEats(Dog, Bear, True) ::: The dog eats the bear.\nSees(Cow, Bear, True) ::: The cow sees the bear.\nSees(Dog, Cow, True) ::: The dog sees the cow.\nLikes(Cow, Dog, True) ::: The cow likes the dog.\nLikes(Cow, Tiger, True) ::: The cow likes the tiger.\nLikes(Tiger, Bear, True) ::: The tiger likes the bear.\nLikes(Tiger, Cow, True) ::: The tiger likes the cow.\nLikes(Tiger, Dog, True) ::: The tiger likes the dog.\nRules:\nEats($x, $y, True) >>> Likes($x, $y, True) ::: If the cow likes the dog and the dog sees the cow then the dog is round.\nSees($x, $y, True) >>> Eats($x, $y, True) ::: If something sees the tiger then it eats the tiger.\nKind($x, True) && Likes($x, Cow, False) >>> Sees($x, Bear, True) ::: If something is kind and it does not like the cow then the cow sees the bear.\nSees($x, $y, True) >>> Sees($x, Tiger, True) ::: If something sees the cow then it sees the tiger.\nEats($x, Tiger, True) && Sees($x, Tiger, True) >>> Sees($x, Cow"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-36_Q6",
    "context": "Bob is blue. Bob is quiet. Bob is smart. Bob is white. Dave is green. Dave is round. Dave is smart. Erin is blue. Gary is blue. Gary is green. Gary is smart. If Erin is big then Erin is smart. All green, white people are smart. White, smart people are round. If Dave is blue then Dave is round. Quiet, green people are round. All green people are quiet. All smart people are green. All blue people are smart. If someone is round and smart then they are big.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is not big.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue($x, bool) ::: Is x blue?\nQuiet($x, bool) ::: Is x quiet?\nSmart($x, bool) ::: Is x smart?\nWhite($x, bool) ::: Is x white?\nRound($x, bool) ::: Is x round?\nBig($x, bool) ::: Is x big?\nFacts:\nBlue(Bob, True) ::: Bob is blue.\nQuiet(Bob, True) ::: Bob is quiet.\nSmart(Bob, True) ::: Bob is smart.\nWhite(Bob, True) ::: Bob is white.\nGreen(Dave, True) ::: Dave is green.\nRound(Dave, True) ::: Dave is round.\nSmart(Dave, True) ::: Dave is smart.\nBlue(Erin, True) ::: Erin is blue.\nBlue(Gary, True) ::: Gary is blue.\nGreen(Gary, True) ::: Gary is green.\nSmart(Gary, True) ::: Gary is smart.\nRules:\nIf Erin is big then Erin is smart ::: Erin is big.\nAll green, white people are smart ::: Green, white people are smart.\nWhite, smart people are round ::: White, smart people are round.\nIf Dave is blue then Dave is round ::: Dave is round.\nQuiet, green people are round ::: Quiet, green people are round.\nAll green people are quiet ::: Green people are quiet.\nAll smart people are green ::: Smart people are green.\nAll blue people are smart ::: Blue people are smart.\nIf someone is round and smart then they are big ::: Someone is big.\nQuery:\nNot(Big(Bob, True)) ::: Bob is not big.\n------"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1001_Q7",
    "context": "Anne is nice. Anne is smart. Dave is rough. Dave is smart. Fiona is big. Fiona is nice. Fiona is young. Harry is furry. Harry is rough. Harry is smart. If someone is big and young then they are blue. If someone is furry and nice then they are young. If someone is rough then they are furry. If Dave is furry then Dave is big. Nice, blue people are big. If someone is young then they are big. All nice people are big. If someone is big then they are nice. All young people are rough.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Dave is nice.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNice($x, bool) ::: Is x nice?\nSmart($x, bool) ::: Is x smart?\nBig($x, bool) ::: Is x big?\nBlue($x, bool) ::: Is x blue?\nRough($x, bool) ::: Is x rough?\nFurry($x, bool) ::: Is x furry?\nYoung($x, bool) ::: Is x young?\nFacts:\nNice(Anne, True) ::: Anne is nice.\nSmart(Anne, True) ::: Anne is smart.\nRough(Dave, True) ::: Dave is rough.\nSmart(Dave, True) ::: Dave is smart.\nBig(Fiona, True) ::: Fiona is big.\nNice(Fiona, True) ::: Fiona is nice.\nYoung(Fiona, True) ::: Fiona is young.\nFurry(Harry, True) ::: Harry is furry.\nRough(Harry, True) ::: Harry is rough.\nSmart(Harry, True) ::: Harry is smart.\nRules:\nBig($x, True) >>> Blue($x, True) ::: If someone is big and young then they are blue.\nFurry($x, True) && Nice($x, True) >>> Young($x, True) ::: If someone is furry and nice then they are young.\nRough($x, True) >>> Furry($x, True) ::: If someone is rough then they are furry.\nFurry($x, True) >>> Dave($x, True) ::: If Dave is furry then Dave is big.\nNice($x, True) >>> Big($x, True) ::: Nice, blue people are big.\nYoung($x"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-112_Q20",
    "context": "Charlie is kind. Charlie is nice. Charlie is quiet. Dave is rough. Dave is white. Erin is nice. Gary is not white. If something is cold then it is not furry. If Charlie is quiet then Charlie is nice. Kind things are white. Nice things are kind. If something is rough then it is kind. Cold, quiet things are rough. All cold things are quiet. If something is white and nice then it is cold. If Erin is cold then Erin is nice.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is nice.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nKind($x, bool) ::: Is x kind?\nNice($x, bool) ::: Is x nice?\nQuiet($x, bool) ::: Is x quiet?\nRough($x, bool) ::: Is x rough?\nWhite($x, bool) ::: Is x white?\nCold($x, bool) ::: Is x cold?\nFurry($x, bool) ::: Is x furry?\nFacts:\nKind(Charlie, True) ::: Charlie is kind.\nNice(Charlie, True) ::: Charlie is nice.\nQuiet(Charlie, True) ::: Charlie is quiet.\nRough(Dave, True) ::: Dave is rough.\nWhite(Dave, True) ::: Dave is white.\nNice(Erin, True) ::: Erin is nice.\nNot(White(Gary, True)) ::: Gary is not white.\nRules:\nNot(Furry($x, True)) >>> Cold($x, True) ::: If something is cold then it is not furry.\nQuiet(Charlie, True) >>> Nice(Charlie, True) ::: If Charlie is quiet then Charlie is nice.\nKind($x, True) >>> White($x, True) ::: Kind things are white.\nNice($x, True) >>> Kind($x, True) ::: Nice things are kind.\nRough($x, True) >>> Kind($x, True) ::: If something is rough then it is kind.\nCold($x, True) && Quiet($x, True) >>> Rough($x, True) ::: Cold, quiet things are rough.\nAll(Cold($x, True), Quiet($x, True)) ::: All cold things are quiet.\nWhite($x, True"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-963_Q8",
    "context": "Bob is blue. Bob is kind. Bob is quiet. Bob is round. Charlie is blue. Charlie is green. Charlie is kind. Erin is quiet. Harry is green. Harry is not rough. All kind things are not big. If Erin is quiet then Erin is blue. Big things are rough. If Erin is round then Erin is big. If something is quiet and blue then it is round. Rough, blue things are green. If Harry is rough and Harry is not round then Harry is green.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Erin is not big.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue($x, bool) ::: Is x blue?\nKind($x, bool) ::: Is x kind?\nQuiet($x, bool) ::: Is x quiet?\nRound($x, bool) ::: Is x round?\nBig($x, bool) ::: Is x big?\nRough($x, bool) ::: Is x rough?\nFacts:\nBlue(Bob, True) ::: Bob is blue.\nKind(Bob, True) ::: Bob is kind.\nQuiet(Bob, True) ::: Bob is quiet.\nRound(Bob, True) ::: Bob is round.\nBlue(Charlie, True) ::: Charlie is blue.\nGreen(Charlie, True) ::: Charlie is green.\nKind(Charlie, True) ::: Charlie is kind.\nQuiet(Erin, True) ::: Erin is quiet.\nGreen(Harry, True) ::: Harry is green.\nNot(Rough(Harry, True)) ::: Harry is not rough.\nRules:\nKind($x, True) >>> Not(Big($x, True)) ::: All kind things are not big.\nQuiet($x, True) && Blue($x, True) >>> Round($x, True) ::: If Erin is quiet then Erin is blue.\nBig($x, True) >>> Rough($x, True) ::: Big things are rough.\nRound($x, True) >>> Big($x, True) ::: If Erin is round then Erin is big.\nQuiet($x, True) && Blue($x, True) >>> Round($x, True) ::: If something is quiet and blue then it is round.\nRough($x, True) && Blue($x, True) >>> Green($x, True) ::: Rough,"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1349_Q16",
    "context": "Anne is red. Anne is rough. Bob is blue. Bob is furry. Bob is nice. Bob is young. Dave is blue. Fiona is blue. Fiona is kind. Fiona is young. Kind, blue people are young. All nice people are rough. All blue people are kind. Nice, blue people are red. All young, red people are blue. Rough, blue people are nice. All young people are blue. All young people are rough.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Anne is nice.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRed($x, bool) ::: Is x red?\nRough($x, bool) ::: Is x rough?\nBlue($x, bool) ::: Is x blue?\nKind($x, bool) ::: Is x kind?\nNice($x, bool) ::: Is x nice?\nYoung($x, bool) ::: Is x young?\nFacts:\nRed(Anne, True) ::: Anne is red.\nRough(Anne, True) ::: Anne is rough.\nBlue(Bob, True) ::: Bob is blue.\nFurry(Bob, True) ::: Bob is furry.\nNice(Bob, True) ::: Bob is nice.\nYoung(Bob, True) ::: Bob is young.\nBlue(Dave, True) ::: Dave is blue.\nBlue(Fiona, True) ::: Fiona is blue.\nKind(Fiona, True) ::: Fiona is kind.\nYoung(Fiona, True) ::: Fiona is young.\nRules:\nKind($x, True) >>> Young($x, True) ::: Kind, blue people are young.\nNice($x, True) >>> Rough($x, True) ::: All nice people are rough.\nKind($x, True) >>> Blue($x, True) ::: All blue people are kind.\nNice($x, True) >>> Red($x, True) ::: Nice, blue people are red.\nYoung($x, True) >>> Blue($x, True) ::: All young, red people are blue.\nRough($x, True) >>> Blue($x, True) ::: Rough, blue people are nice.\nYoung($x, True) >>> Rough($x, True) ::: All young people are rough.\nQuery:"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-855_Q19",
    "context": "Charlie is not blue. Charlie is round. Dave is blue. Dave is smart. Gary is smart. Gary is white. Harry is round. If someone is round and smart then they are quiet. Quiet people are round. If someone is nice then they are red. If Harry is smart then Harry is blue. If someone is round then they are nice. If someone is white then they are nice. All red, round people are smart. Quiet, smart people are not white.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is not blue.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue($x, bool) ::: Is x blue?\nRound($x, bool) ::: Is x round?\nSmart($x, bool) ::: Is x smart?\nQuiet($x, bool) ::: Is x quiet?\nRed($x, bool) ::: Is x red?\nNice($x, bool) ::: Is x nice?\nFacts:\nNot(Blue(Charlie, True)) ::: Charlie is not blue.\nRound(Charlie, True) ::: Charlie is round.\nBlue(Dave, True) ::: Dave is blue.\nSmart(Dave, True) ::: Dave is smart.\nSmart(Gary, True) ::: Gary is smart.\nWhite(Gary, True) ::: Gary is white.\nRound(Harry, True) ::: Harry is round.\nRules:\nRound($x, True) && Smart($x, True) >>> Quiet($x, True) ::: If someone is round and smart then they are quiet.\nQuiet($x, True) >>> Round($x, True) ::: Quiet people are round.\nNice($x, True) >>> Red($x, True) ::: If someone is nice then they are red.\nIf(Harry, Smart($x, True), Blue($x, True)) ::: If Harry is smart then Harry is blue.\nRound($x, True) >>> Nice($x, True) ::: If someone is round then they are nice.\nWhite($x, True) >>> Nice($x, True) ::: If someone is white then they are nice.\nAll(Red($x, True), Round($x, True), Smart($x, True)) ::: All red, round people are smart.\nQuiet($x, True) && Smart($x, True) >>> Not(White($x"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-850_Q14",
    "context": "Anne is red. Anne is smart. Bob is kind. Bob is not nice. Fiona is furry. Fiona is rough. Gary is not green. Gary is kind. Gary is nice. Gary is rough. If someone is nice then they are red. Smart people are green. If someone is smart and red then they are not kind. All rough, green people are nice. Green people are rough. If someone is red and green then they are rough. If someone is furry and green then they are smart. All rough, furry people are smart. Furry, rough people are smart.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is smart.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRed($x, bool) ::: Is x red?\nSmart($x, bool) ::: Is x smart?\nKind($x, bool) ::: Is x kind?\nNice($x, bool) ::: Is x nice?\nFurry($x, bool) ::: Is x furry?\nRough($x, bool) ::: Is x rough?\nGreen($x, bool) ::: Is x green?\nFacts:\nRed(Anne, True) ::: Anne is red.\nSmart(Anne, True) ::: Anne is smart.\nKind(Bob, True) ::: Bob is kind.\nNice(Bob, False) ::: Bob is not nice.\nFurry(Fiona, True) ::: Fiona is furry.\nRough(Fiona, True) ::: Fiona is rough.\nGreen(Gary, False) ::: Gary is not green.\nKind(Gary, True) ::: Gary is kind.\nNice(Gary, True) ::: Gary is nice.\nRough(Gary, True) ::: Gary is rough.\nRules:\nNice($x, True) >>> Red($x, True) ::: If someone is nice then they are red.\nSmart($x, True) >>> Green($x, True) ::: Smart people are green.\nSmart($x, True) && Red($x, True) >>> Kind($x, False) ::: If someone is smart and red then they are not kind.\nGreen($x, True) && Rough($x, True) >>> Nice($x, True) ::: All rough, green people are nice.\nGreen($x, True) >>> Rough($x, True) ::: Green people are rough.\nRed($x, True) && Green($x, True)"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-433_Q7",
    "context": "Anne is furry. Anne is rough. Anne is white. Bob is rough. Bob is white. Fiona is big. Harry is red. All red, white things are rough. All white, quiet things are big. All big, red things are rough. If something is big and red then it is quiet. All big, rough things are furry. Big, furry things are white. Red things are round. If something is furry and round then it is big. All round things are big.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Harry is quiet.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nFurry($x, bool) ::: Is x furry?\nRough($x, bool) ::: Is x rough?\nWhite($x, bool) ::: Is x white?\nBig($x, bool) ::: Is x big?\nRed($x, bool) ::: Is x red?\nRound($x, bool) ::: Is x round?\nQuiet($x, bool) ::: Is x quiet?\nFacts:\nFurry(Anne, True) ::: Anne is furry.\nRough(Anne, True) ::: Anne is rough.\nWhite(Anne, True) ::: Anne is white.\nRough(Bob, True) ::: Bob is rough.\nWhite(Bob, True) ::: Bob is white.\nBig(Fiona, True) ::: Fiona is big.\nRed(Harry, True) ::: Harry is red.\nRules:\nRed($x, True) && White($x, True) >>> Rough($x, True) ::: All red, white things are rough.\nWhite($x, True) && Quiet($x, True) >>> Big($x, True) ::: All white, quiet things are big.\nBig($x, True) && Red($x, True) >>> Rough($x, True) ::: All big, red things are rough.\nRed($x, True) && Big($x, True) >>> Quiet($x, True) ::: If something is big and red then it is quiet.\nBig($x, True) && Furry($x, True) >>> White($x, True) ::: All big, furry things are white.\nFurry($x, True) && Round($x, True) >>> Big($x, True) ::: If something is furry and round then it is big."
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-219_Q11",
    "context": "Charlie is not quiet. Dave is big. Dave is furry. Erin is cold. Erin is not green. Erin is not kind. Fiona is quiet. Big things are young. Young, cold things are big. Quiet things are big. All young things are cold. If something is big and not furry then it is cold. If something is cold then it is not kind. If something is cold and big then it is quiet. If Fiona is cold and Fiona is not quiet then Fiona is kind. If something is quiet and not kind then it is green.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Fiona is green.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nQuiet($x, bool) ::: Is x quiet?\nFurry($x, bool) ::: Is x furry?\nGreen($x, bool) ::: Is x green?\nKind($x, bool) ::: Is x kind?\nBig($x, bool) ::: Is x big?\nCold($x, bool) ::: Is x cold?\nYoung($x, bool) ::: Is x young?\nFacts:\nQuite(Charlie, False) ::: Charlie is not quiet.\nBig(Dave, True) ::: Dave is big.\nFurry(Dave, True) ::: Dave is furry.\nCold(Erin, True) ::: Erin is cold.\nNotGreen(Erin, True) ::: Erin is not green.\nNotKind(Erin, True) ::: Erin is not kind.\nQuite(Fiona, True) ::: Fiona is quiet.\nYoung(Big($x, True), True) ::: Big things are young.\nYoung(Cold($x, True), True) ::: Young, cold things are big.\nQuite(Quiet($x, True), True) ::: Quiet things are big.\nAll(Young($x, True), Cold($x, True)) ::: All young things are cold.\nNotFurry(Big($x, True), NotFurry($x, True)) ::: If something is big and not furry then it is cold.\nNotKind(Cold($x, True), True) ::: If something is cold then it is not kind.\nCold(Big($x, True), Quiet($x, True)) ::: If something is cold and big then it is quiet.\nNotQuiet(Fiona, NotQuiet($x, True))"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-691_Q6",
    "context": "Bob is big. Bob is quiet. Fiona is round. Gary is not quiet. Harry is green. Harry is red. Harry is white. Red people are rough. Quiet people are rough. If Bob is round and Bob is green then Bob is big. If someone is red then they are round. If someone is big and rough then they are red. Big people are quiet. If someone is big and green then they are not white. If Gary is not big then Gary is round. If someone is quiet and round then they are green.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is not red.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nQuiet($x, bool) ::: Is x quiet?\nRound($x, bool) ::: Is x round?\nGreen($x, bool) ::: Is x green?\nRed($x, bool) ::: Is x red?\nWhite($x, bool) ::: Is x white?\nRough($x, bool) ::: Is x rough?\nFacts:\nBig(Bob, True) ::: Bob is big.\nQuiet(Bob, True) ::: Bob is quiet.\nRound(Fiona, True) ::: Fiona is round.\nNotQuiet(Gary, True) ::: Gary is not quiet.\nGreen(Harry, True) ::: Harry is green.\nRed(Harry, True) ::: Harry is red.\nWhite(Harry, True) ::: Harry is white.\nRules:\nBig($x, True) && Green($x, True) >>> Big($x, True) ::: If Bob is round and Bob is green then Bob is big.\nRed($x, True) >>> Round($x, True) ::: If someone is red then they are round.\nBig($x, True) && Rough($x, True) >>> Red($x, True) ::: If someone is big and rough then they are red.\nBig($x, True) >>> Quiet($x, True) ::: Big people are quiet.\nBig($x, True) && Green($x, True) >>> NotWhite($x, True) ::: If someone is big and green then they are not white.\nNotBig($x, True) >>> Round($x, True) ::: If Gary is not big then Gary is round.\nQuiet($x, True) && Round($x, True) >>> Green($x, True) :::"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-345_Q9",
    "context": "Anne is not nice. Anne is round. Anne is not white. Anne is young. Erin is round. Fiona is blue. Gary is young. All nice people are not quiet. All round people are quiet. If Anne is nice then Anne is white. If someone is quiet then they are blue. If Fiona is white then Fiona is blue. If someone is rough then they are young. If someone is nice and not blue then they are not rough. If someone is blue then they are rough. If Erin is young then Erin is white.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Erin is young.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNice($x, bool) ::: Is x nice?\nRound($x, bool) ::: Is x round?\nWhite($x, bool) ::: Is x white?\nYoung($x, bool) ::: Is x young?\nQuiet($x, bool) ::: Is x quiet?\nBlue($x, bool) ::: Is x blue?\nRough($x, bool) ::: Is x rough?\nFacts:\nNice(Anne, False) ::: Anne is not nice.\nRound(Anne, True) ::: Anne is round.\nWhite(Anne, False) ::: Anne is not white.\nYoung(Anne, True) ::: Anne is young.\nRound(Erin, True) ::: Erin is round.\nBlue(Fiona, True) ::: Fiona is blue.\nYoung(Gary, True) ::: Gary is young.\nRules:\nNice($x, True) >>> Quiet($x, False) ::: All nice people are not quiet.\nRound($x, True) >>> Quiet($x, True) ::: All round people are quiet.\nNice($x, True) >>> White($x, True) ::: If Anne is nice then Anne is white.\nQuiet($x, True) >>> Blue($x, True) ::: If someone is quiet then they are blue.\nWhite($x, True) >>> Blue($x, True) ::: If Fiona is white then Fiona is blue.\nRough($x, True) >>> Young($x, True) ::: If someone is rough then they are young.\nNice($x, True) && Not(Blue($x, True)) >>> Not(Rough($x, True)) ::: If someone is nice and not blue then they are not rough.\nBlue($x, True) >>> Rough($x, True) ::: If someone is blue then they are rough.\nYoung($x, True) >>> White($x, True) ::: If Erin is young then Erin is white.\nQuery:\nYoung(Erin, True) ::: Erin is young.\n------"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-779_Q15",
    "context": "The bear is rough. The bear needs the dog. The bear visits the cat. The bear visits the dog. The cat is blue. The cat likes the cow. The cow is rough. The cow likes the bear. The dog needs the bear. The dog visits the cat. All blue people are big. If someone visits the cow then they need the cow. If someone is nice then they like the cow. If someone likes the cat and they are nice then they are big. If someone is blue then they visit the cow. If the cat needs the cow then the cow is blue.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The dog does not like the cow.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRough($x, bool) ::: Is x rough?\nNeeds($x, $y, bool) ::: Does x need y?\nVisits($x, $y, bool) ::: Does x visit y?\nLikes($x, $y, bool) ::: Does x like y?\nBig($x, bool) ::: Is x big?\nBlue($x, bool) ::: Is x blue?\nNice($x, bool) ::: Is x nice?\nFacts:\nRough(Bear, True) ::: The bear is rough.\nNeeds(Bear, Dog, True) ::: The bear needs the dog.\nVisits(Bear, Cat, True) ::: The bear visits the cat.\nVisits(Bear, Dog, True) ::: The bear visits the dog.\nBlue(Cat, True) ::: The cat is blue.\nLikes(Cat, Cow, True) ::: The cat likes the cow.\nRough(Cow, True) ::: The cow is rough.\nLikes(Cow, Bear, True) ::: The cow likes the bear.\nNeeds(Dog, Bear, True) ::: The dog needs the bear.\nVisits(Dog, Cat, True) ::: The dog visits the cat.\nRules:\nBlue($x, True) >>> Big($x, True) ::: All blue people are big.\nVisits($x, Cow, True) >>> Needs($x, Cow, True) ::: If someone visits the cow then they need the cow.\nLikes($x, Cat) && Nice($x, True) >>> Big($x, True) ::: If someone likes the cat and they are nice then they are big.\nBlue($x, True) >>> Visits($x, Cow, True) ::: If the cat needs the cow then the cow is blue.\nQuery:\nLikes(Dog, Cow, False) ::: The dog does not like the cow.\n------\nProblem:\nThe bear is rough. The bear needs the dog. The bear visits the cat. The bear visits the dog. The cat is blue. The"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1107_Q2",
    "context": "Anne is blue. Anne is white. Dave is blue. Erin is blue. Erin is cold. Erin is red. Erin is white. Gary is big. Gary is blue. Gary is kind. Kind, red people are blue. Red people are cold. If someone is kind then they are red. All blue people are kind. All cold, red people are white. If Dave is green and Dave is red then Dave is kind. If Dave is blue then Dave is green. If Dave is white then Dave is big. If someone is white then they are red.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is not kind.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue($x, bool) ::: Is x blue?\nWhite($x, bool) ::: Is x white?\nRed($x, bool) ::: Is x red?\nCold($x, bool) ::: Is x cold?\nKind($x, bool) ::: Is x kind?\nBig($x, bool) ::: Is x big?\nGreen($x, bool) ::: Is x green?\nFacts:\nBlue(Anne, True) ::: Anne is blue.\nWhite(Anne, True) ::: Anne is white.\nBlue(Dave, True) ::: Dave is blue.\nBlue(Erin, True) ::: Erin is blue.\nCold(Erin, True) ::: Erin is cold.\nRed(Erin, True) ::: Erin is red.\nWhite(Erin, True) ::: Erin is white.\nBig(Gary, True) ::: Gary is big.\nBlue(Gary, True) ::: Gary is blue.\nKind(Gary, True) ::: Gary is kind.\nRules:\nKind($x, True) >>> Red($x, True) ::: Kind, red people are blue.\nRed($x, True) >>> Cold($x, True) ::: Red people are cold.\nRed($x, True) >>> Kind($x, True) ::: If someone is kind then they are red.\nBlue($x, True) >>> Kind($x, True) ::: All blue people are kind.\nCold($x, True) && Red($x, True) >>> White($x, True) ::: All cold, red people are white.\nGreen($x, True) && Red($x, True) >>> Kind($x, True) ::: If Dave is green and Dave is red then Dave is kind.\nBlue($x, True) >>> Green($x, True) ::: If Dave is blue then Dave is green.\nWhite($x, True) >>> Big($x, True) ::: If Dave is white then Dave is big.\nRed($x, True) >>> White($x, True) ::: If someone is white then they are red"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-472_Q14",
    "context": "The bear visits the lion. The dog is young. The dog visits the bear. The lion is blue. The lion needs the bear. The mouse needs the bear. The mouse needs the dog. If someone visits the bear and the bear is nice then they see the dog. If someone sees the mouse and the mouse needs the bear then the mouse sees the dog. If the lion is big then the lion sees the dog. Blue people are nice. If someone needs the lion and they visit the lion then the lion needs the dog. If someone visits the lion then they visit the mouse. If someone visits the mouse then they need the mouse. If someone visits the bear and they are blue then the bear sees the lion. If someone needs the mouse then the mouse visits the lion.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The dog sees the dog.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nVisits($x, $y, bool) ::: Does x visit y?\nNeeds($x, $y, bool) ::: Does x need y?\nSees($x, $y, bool) ::: Does x see y?\nIsBlue($x, bool) ::: Is x blue?\nIsNice($x, bool) ::: Is x nice?\nIsBig($x, bool) ::: Is x big?\nFacts:\nVisits(Bear, Lion, True) ::: The bear visits the lion.\nYoung(Dog, True) ::: The dog is young.\nVisits(Dog, Bear, True) ::: The dog visits the bear.\nIsBlue(Lion, True) ::: The lion is blue.\nNeeds(Lion, Bear, True) ::: The lion needs the bear.\nNeeds(Mouse, Bear, True) ::: The mouse needs the bear.\nNeeds(Mouse, Dog, True) ::: The mouse needs the dog.\nVisits($x, Bear, True) >>> Sees($x, Dog, True) ::: If someone visits the bear and the bear is nice then they see the dog.\nSees(Mouse, Lion, True) >>> Sees(Mouse, Dog, True) ::: If someone sees the mouse and the mouse needs the bear then the mouse sees the dog.\nIsBig(Lion, True) >>> Sees(Lion, Dog, True) ::: If the lion is big then the lion sees the dog.\nIsBlue($x, True) >>> Needs(Lion, $x, True) ::: Blue people are nice.\nNeeds(Lion, $x, True) >>> Needs($x, Lion, True) ::: If someone needs the lion and they visit the lion then the lion needs the dog.\nVisits($x, Lion) >>> Visits($x, Mouse) ::: If someone visits the lion then they visit the mouse.\nVisits($x, Mouse) >>> Needs($x, Mouse, True) ::: If someone visits the mouse then they need the mouse.\nVisits($x, Bear, True) >>>"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-1039_Q6",
    "context": "Anne is cold. Anne is not young. Bob is green. Fiona is cold. Fiona is rough. Gary is red. Gary is young. Green, rough things are red. If Gary is cold and Gary is red then Gary is green. If something is nice then it is rough. Cold, rough things are kind. If something is cold and nice then it is young. If something is kind and cold then it is green. All red things are nice.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is not rough.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nYoung($x, bool) ::: Is x young?\nGreen($x, bool) ::: Is x green?\nRed($x, bool) ::: Is x red?\nRough($x, bool) ::: Is x rough?\nKind($x, bool) ::: Is x kind?\nNice($x, bool) ::: Is x nice?\nFacts:\nCold(Anne, True) ::: Anne is cold.\nYoung(Anne, False) ::: Anne is not young.\nGreen(Bob, True) ::: Bob is green.\nCold(Fiona, True) ::: Fiona is cold.\nRough(Fiona, True) ::: Fiona is rough.\nRed(Gary, True) ::: Gary is red.\nYoung(Gary, True) ::: Gary is young.\nRules:\nGreen($x, True) >>> Rough($x, True) ::: Green, rough things are red.\nGary(Cold($x, True) && Red($x, True)) >>> Gary(Green($x, True)) ::: If Gary is cold and Gary is red then Gary is green.\nNice($x, True) >>> Rough($x, True) ::: If something is nice then it is rough.\nCold($x, True) && Rough($x, True) >>> Kind($x, True) ::: Cold, rough things are kind.\nCold($x, True) && Nice($x, True) >>> Young($x, True) ::: If something is cold and nice then it is young.\nKind($x, True) && Cold($x, True) >>> Green($x, True) ::: If something is kind and cold then it is green.\nRed($x, True) >>> Nice($x, True) ::: All red things are nice.\nQuery:\nNot(Rough(Gary, True)) ::: Gary is not rough.\n------\nProblem:\nAnne is cold. Anne is not young. Bob is green. Fiona is cold. Fiona is rough. Gary"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-27_Q7",
    "context": "The cat chases the cow. The cat chases the mouse. The cat is nice. The cat is red. The cat is rough. The cat needs the lion. The cat does not need the mouse. The cat visits the mouse. The cow does not chase the cat. The cow is big. The lion chases the cat. The lion chases the cow. The lion is young. The lion visits the cow. The mouse is big. The mouse is rough. If someone needs the lion then the lion does not need the mouse. If someone visits the cat then they are not big. If someone is rough then they visit the mouse. If the cow visits the lion and the cow is big then the lion does not need the cat. If someone visits the mouse then they are red. If someone chases the cow and they do not need the mouse then the cow is rough. If someone is red then they visit the lion. If someone is red and they chase the lion then the lion is red. If someone chases the mouse and they are red then the mouse needs the cat.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cow is red.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nNeeds($x, $y, bool) ::: Does x need y?\nVisits($x, $y, bool) ::: Does x visit y?\nIs($x, $y, bool) ::: Is x y?\nRed($x, bool) ::: Is x red?\nRough($x, bool) ::: Is x rough?\nBig($x, bool) ::: Is x big?\nYoung($x, bool) ::: Is x young?\nFacts:\nChases(Cat, Cow, True) ::: The cat chases the cow.\nChases(Cat, Mouse, True) ::: The cat chases the mouse.\nIs(Cat, Nice, True) ::: The cat is nice.\nIs(Cat, Red, True) ::: The cat is red.\nIs(Cat, Rough, True) ::: The cat is rough.\nNeeds(Cat, Lion, True) ::: The cat needs the lion.\nNot(Needs(Cat, Mouse, True)) ::: The cat does not need the mouse.\nVisits(Cat, Mouse, True) ::: The cat visits the mouse.\nNot(Chases(Cow, Cat, True)) ::: The cow does not chase the cat.\nIs(Cow, Big, True) ::: The cow is big.\nChases(Lion, Cat, True) ::: The lion chases the cat.\nChases(Lion, Cow, True) ::: The lion chases the cow.\nIs(Lion, Young, True) ::: The lion is young.\nVisits(Lion, Cow, True) ::: The lion visits the cow.\nIs(Mouse, Big, True) ::: The mouse is big.\nIs(Mouse, Rough, True) ::: The mouse is rough.\nNot(Needs(Lion, Mouse, True)) ::: If someone needs the lion then the lion does not need the mouse.\nNot(Visits(Cat, Mouse, True)) ::: If someone visits the cat then they are not big."
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-1204_Q10",
    "context": "Bob is not furry. Bob is quiet. Bob is not rough. Bob is not round. Erin is not kind. Erin is rough. Gary is big. Harry is furry. Harry is green. Harry is not round. All big, round people are rough. If someone is rough and not green then they are quiet. If someone is round and rough then they are quiet. All big people are round. All quiet people are kind. All rough, quiet people are big. If someone is round and kind then they are furry. If someone is big and not quiet then they are furry.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is not kind.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nFurry($x, bool) ::: Is x furry?\nQuiet($x, bool) ::: Is x quiet?\nRough($x, bool) ::: Is x rough?\nRound($x, bool) ::: Is x round?\nKind($x, bool) ::: Is x kind?\nBig($x, bool) ::: Is x big?\nFacts:\nNotFurry(Bob, True) ::: Bob is not furry.\nQuiet(Bob, True) ::: Bob is quiet.\nNotRough(Bob, True) ::: Bob is not rough.\nNotRound(Bob, True) ::: Bob is not round.\nNotKind(Erin, True) ::: Erin is not kind.\nRough(Erin, True) ::: Erin is rough.\nBig(Gary, True) ::: Gary is big.\nFurry(Harry, True) ::: Harry is furry.\nGreen(Harry, True) ::: Harry is green.\nNotRound(Harry, True) ::: Harry is not round.\nRules:\nAllBigRoundPeopleAreRough($x, True) ::: All big, round people are rough.\nRoughNotGreen($x, True) >>> Quiet($x, True) ::: If someone is rough and not green then they are quiet.\nRoundRough($x, True) >>> Quiet($x, True) ::: If someone is round and rough then they are quiet.\nAllBigPeopleAreRound($x, True) ::: All big people are round.\nAllQuietPeopleAreKind($x, True) ::: All quiet people are kind.\nRoughQuietPeopleAreBig($x, True) ::: All rough, quiet people are big.\nRoundKind($x, True) >>> Furry($x, True) ::: If someone is round and kind then they are furry.\nBigNotQuiet($x, True) >>> Furry($x, True) ::: If someone is big and not quiet then they are furry.\nQuery:\nNotKind(Gary, True) ::: Gary is"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-19_Q8",
    "context": "Bob is big. Bob is blue. Bob is cold. Bob is red. Bob is rough. Bob is smart. Bob is white. Charlie is blue. Charlie is red. Charlie is rough. Erin is big. Erin is smart. Fiona is red. Fiona is white. Big people are smart. Big people are red. Rough, blue people are white. All rough, smart people are cold. Blue, cold people are big. All cold people are blue. If someone is big and red then they are rough. If Charlie is red and Charlie is blue then Charlie is rough. Red people are smart.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Charlie is not big.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nBlue($x, bool) ::: Is x blue?\nCold($x, bool) ::: Is x cold?\nRed($x, bool) ::: Is x red?\nRough($x, bool) ::: Is x rough?\nSmart($x, bool) ::: Is x smart?\nWhite($x, bool) ::: Is x white?\nFacts:\nBig(Bob, True) ::: Bob is big.\nBlue(Bob, True) ::: Bob is blue.\nCold(Bob, True) ::: Bob is cold.\nRed(Bob, True) ::: Bob is red.\nRough(Bob, True) ::: Bob is rough.\nSmart(Bob, True) ::: Bob is smart.\nWhite(Bob, True) ::: Bob is white.\nBlue(Charlie, True) ::: Charlie is blue.\nRed(Charlie, True) ::: Charlie is red.\nRough(Charlie, True) ::: Charlie is rough.\nBig(Erin, True) ::: Erin is big.\nSmart(Erin, True) ::: Erin is smart.\nRed(Fiona, True) ::: Fiona is red.\nWhite(Fiona, True) ::: Fiona is white.\nRules:\nBig($x, True) >>> Smart($x, True) ::: Big people are smart.\nBig($x, True) >>> Red($x, True) ::: Big people are red.\nRough($x, True) && Blue($x, True) >>> White($x, True) ::: Rough, blue people are white.\nRough($x, True) && Smart($x, True) >>> Cold($x, True) ::: All rough, smart people are cold.\nBlue($x, True) && Cold($x, True) >>> Big($x, True) ::: Blue, cold people are big.\nCold($x, True) >>> Blue($x, True) ::: All cold people are blue.\nRed($x, True) && Big"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-713_Q9",
    "context": "The bear chases the cat. The bear is big. The bear is cold. The bear likes the squirrel. The bear likes the tiger. The bear sees the squirrel. The cat is big. The cat is cold. The cat is young. The cat likes the bear. The cat likes the tiger. The cat sees the bear. The cat sees the tiger. The squirrel is young. The tiger chases the bear. The tiger likes the squirrel. If the tiger is young then the tiger likes the squirrel. If something is round then it likes the bear. If something likes the bear then it is cold. If the tiger likes the bear and the bear sees the squirrel then the squirrel is round. If something likes the squirrel then it is round. If something chases the bear and the bear likes the cat then the cat likes the squirrel.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The squirrel likes the bear.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nBig($x, bool) ::: Is x big?\nCold($x, bool) ::: Is x cold?\nYoung($x, bool) ::: Is x young?\nLikes($x, $y, bool) ::: Does x like y?\nSees($x, $y, bool) ::: Does x see y?\nRound($x, bool) ::: Is x round?\nFacts:\nChases(Bear, Cat, True) ::: The bear chases the cat.\nBig(Bear, True) ::: The bear is big.\nCold(Bear, True) ::: The bear is cold.\nLikes(Bear, Squirrel, True) ::: The bear likes the squirrel.\nLikes(Bear, Tiger, True) ::: The bear likes the tiger.\nSees(Bear, Squirrel, True) ::: The bear sees the squirrel.\nBig(Cat, True) ::: The cat is big.\nCold(Cat, True) ::: The cat is cold.\nYoung(Cat, True) ::: The cat is young.\nLikes(Cat, Bear, True) ::: The cat likes the bear.\nLikes(Cat, Tiger, True) ::: The cat likes the tiger.\nSees(Cat, Bear, True) ::: The cat sees the bear.\nSees(Cat, Tiger, True) ::: The cat sees the tiger.\nYoung(Squirrel, True) ::: The squirrel is young.\nChases(Tiger, Bear, True) ::: The tiger chases the bear.\nLikes(Tiger, Squirrel, True) ::: The tiger likes the squirrel.\nRules:\nYoung($x, True) >>> Likes($x, Squirrel, True) ::: If the tiger is young then the tiger likes the squirrel.\nRound($x, True) >>> Likes($x, Bear, True) ::: If something is"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-615_Q2",
    "context": "Anne is big. Erin is big. Gary is red. Gary is rough. Harry is not big. Harry is not nice. Harry is not young. If something is nice then it is red. If something is nice then it is red. If something is young and big then it is red. If Gary is nice then Gary is big. If Erin is red and Erin is nice then Erin is rough. All big things are young. Round things are rough. All red things are nice. All rough things are not round.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Harry is big.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nNice($x, bool) ::: Is x nice?\nYoung($x, bool) ::: Is x young?\nRound($x, bool) ::: Is x round?\nRules:\nYoung($x, True) >>> Big($x, True) ::: All big things are young.\nNice($x, True) >>> Red($x, True) ::: If something is nice then it is red.\nNice($x, True) >>> Red($x, True) ::: If something is nice then it is red.\nYoung($x, True) && Big($x, True) >>> Red($x, True) ::: If something is young and big then it is red.\nNice($x, True) >>> Big($x, True) ::: If Gary is nice then Gary is big.\nRed($x, True) && Nice($x, True) && Red($x, True) >>> Rough($x, True) ::: If Erin is red and Erin is nice then Erin is rough.\nNot(Big($x, True)) ::: Harry is not big.\nNot(Nice($x, True)) ::: Harry is not nice.\nNot(Young($x, True)) ::: Harry is not young.\nRound($x, True) >>> Rough($x, True) ::: All round things are rough.\nRed($x, True) >>> Nice($x, True) ::: All red things are nice.\nNot(Round($x, True)) >>> Rough($x, True) ::: All rough things are not round.\nQuery:\nBig(Harry, True) ::: Harry is big.\n------\nProblem:\nAnne is big. Erin is big. Gary is red. Gary is rough. Harry is not big. Harry is not nice. Harry is not young. If something is nice then it is red. If something is nice then it is red. If something is young and big then it is red. If Gary is nice then Gary is big. If Erin is red and Erin is nice then Erin is rough. All big things are young"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-295_Q7",
    "context": "The bald eagle needs the lion. The bald eagle needs the mouse. The bear likes the bald eagle. The bear needs the lion. The bear sees the bald eagle. The lion is blue. The mouse sees the bear. If something sees the lion then it likes the bald eagle. If something likes the bear then it likes the bald eagle. If something needs the bear and the bear is blue then the bear is round. If something likes the mouse then the mouse sees the bear. If something likes the mouse and the mouse is nice then it likes the bear. If something needs the lion and it likes the bald eagle then it likes the mouse. If something likes the bear and it likes the mouse then the mouse needs the bear. If something needs the bear then it likes the bear. If something likes the bald eagle then it needs the bear.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The mouse needs the bear.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNeeds($x, $y, bool) ::: Does x need y?\nLikes($x, $y, bool) ::: Does x like y?\nSees($x, $y, bool) ::: Does x see y?\nIs($x, $y, bool) ::: Is x y?\nRound($x, bool) ::: Is x round?\nBlue($x, bool) ::: Is x blue?\nNice($x, bool) ::: Is x nice?\nFacts:\nNeeds(BaldEagle, Lion, True) ::: The bald eagle needs the lion.\nNeeds(BaldEagle, Mouse, True) ::: The bald eagle needs the mouse.\nLikes(Bear, BaldEagle, True) ::: The bear likes the bald eagle.\nNeeds(Bear, Lion, True) ::: The bear needs the lion.\nSees(Bear, BaldEagle, True) ::: The bear sees the bald eagle.\nIs(Lion, Blue, True) ::: The lion is blue.\nSees(Mouse, Bear, True) ::: The mouse sees the bear.\nRules:\nSees($x, $y, True) >>> Likes($x, $y, True) ::: If something sees the lion then it likes the bald eagle.\nLikes($x, $y, True) >>> Likes($x, $y, True) ::: If something likes the bear then it likes the bald eagle.\nNeeds($x, $y, True) && Is($y, Blue, True) >>> Is($x, Round, True) ::: If something needs the bear and the bear is blue then the bear is round.\nLikes($x, $y, True) && Likes($x, $z, True) >>> Likes($y, $z, True) ::: If something likes the mouse then the mouse sees the bear.\nLikes($x, $y, True) && Likes($x, $z, True) && Nice($z, True) >>> Likes($x, $y, True) ::: If something likes the mouse and the mouse is nice then it likes the bear.\nNeeds($x, $y, True) && Likes($x, $z, True) >>> Likes($x, $y, True) ::: If something needs the lion and it likes the bald eagle then it likes the mouse.\nLikes($x, $y, True) && Likes($x, $z, True) >>> Needs($y, $z, True) ::: If something likes the bear and it likes the mouse then the mouse needs the bear.\nLikes($x, $y, True) >>> Needs($x, $y, True) ::: If something likes the bald eagle then it needs the bear.\nQuery:\nNeeds(Mouse, Bear, True) ::: The mouse needs the bear.\n------"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-767_Q4",
    "context": "The cat is not round. The cow is blue. The cow is kind. The cow likes the cat. The cow sees the rabbit. The rabbit chases the cow. The rabbit is nice. The tiger does not chase the cow. The tiger does not like the rabbit. The tiger sees the rabbit. If something chases the cow then the cow chases the cat. If something chases the rabbit then it is not big. If something likes the cow then the cow is nice. If something is kind then it sees the rabbit. If something chases the cat then the cat likes the cow. If the rabbit chases the tiger then the rabbit does not see the cow. If something is nice and it sees the rabbit then it chases the rabbit. If something is big then it is round.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cow does not chase the cat.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRound($x, bool) ::: Is x round?\nBlue($x, bool) ::: Is x blue?\nKind($x, bool) ::: Is x kind?\nLikes($x, $y, bool) ::: Does x like y?\nChases($x, $y, bool) ::: Does x chase y?\nSees($x, $y, bool) ::: Does x see y?\nNice($x, bool) ::: Is x nice?\nBig($x, bool) ::: Is x big?\nFacts:\nNotRound(Cat, True) ::: The cat is not round.\nBlue(Cow, True) ::: The cow is blue.\nKind(Cow, True) ::: The cow is kind.\nLikes(Cow, Cat, True) ::: The cow likes the cat.\nSees(Cow, Rabbit, True) ::: The cow sees the rabbit.\nChases(Rabbit, Cow, True) ::: The rabbit chases the cow.\nNice(Rabbit, True) ::: The rabbit is nice.\nNotChases(Tiger, Cow, True) ::: The tiger does not chase the cow.\nNotLikes(Tiger, Rabbit, True) ::: The tiger does not like the rabbit.\nSees(Tiger, Rabbit, True) ::: The tiger sees the rabbit.\nRules:\nIf something chases the cow then the cow chases the cat. ::: If something chases the cow then the cow chases the cat.\nIf something chases the rabbit then it is not big. ::: If something chases the rabbit then it is not big.\nIf something likes the cow then the cow is nice. ::: If something likes the cow then the cow is nice.\nIf something is kind then it sees the rabbit. ::: If something is kind then it sees the rabbit.\nIf something chases the cat then the cat likes the cow. ::: If something chases the cat then the cat likes the cow.\nIf the rabbit chases the tiger then the rabbit does not see the cow. ::: If the rabbit chases the tiger then the rabbit does not see the cow.\nIf something is nice and it sees the rabbit then it chases the rabbit. ::: If something is nice and it sees the rabbit then it chases the rabbit.\nIf something is big then it is round. ::: If something is big then it is round.\nQuery:\nNotChases(Cow, Cat, True) ::: The cow does not chase the cat.\n------\nProblem:\nThe cat is not round. The cow is blue. The cow is kind. The cow likes the cat. The cow sees the rabbit. The rabbit chases the cow. The rabbit is nice. The tiger does not chase the cow. The tiger does not like the"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-774_Q8",
    "context": "Anne is rough. Bob is big. Bob is blue. Bob is kind. Bob is rough. Gary is big. Gary is blue. Gary is furry. Gary is kind. Gary is rough. Gary is smart. Gary is white. Harry is blue. Harry is furry. If someone is furry then they are big. All big people are rough. All kind, white people are smart. All rough people are kind. If someone is kind then they are white. White, smart people are furry. If someone is furry and big then they are smart. All smart people are white. If someone is kind and rough then they are blue.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Harry is not kind.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRough($x, bool) ::: Is x rough?\nBig($x, bool) ::: Is x big?\nBlue($x, bool) ::: Is x blue?\nKind($x, bool) ::: Is x kind?\nFurry($x, bool) ::: Is x furry?\nSmart($x, bool) ::: Is x smart?\nWhite($x, bool) ::: Is x white?\nFacts:\nRough(Anne, True) ::: Anne is rough.\nBig(Bob, True) ::: Bob is big.\nBlue(Bob, True) ::: Bob is blue.\nKind(Bob, True) ::: Bob is kind.\nRough(Bob, True) ::: Bob is rough.\nBig(Gary, True) ::: Gary is big.\nBlue(Gary, True) ::: Gary is blue.\nFurry(Gary, True) ::: Gary is furry.\nKind(Gary, True) ::: Gary is kind.\nRough(Gary, True) ::: Gary is rough.\nSmart(Gary, True) ::: Gary is smart.\nWhite(Gary, True) ::: Gary is white.\nBlue(Harry, True) ::: Harry is blue.\nFurry(Harry, True) ::: Harry is furry.\nRules:\nFurry($x, True) >>> Big($x, True) ::: If someone is furry then they are big.\nBig($x, True) >>> Rough($x, True) ::: All big people are rough.\nKind($x, True) && White($x, True) >>> Smart($x, True) ::: All kind, white people are smart.\nRough($x, True) >>> Kind($x, True) ::: All rough people are kind.\nKind($x, True) >>> White($x, True) ::: If someone is kind then they are white.\nWhite($x, True) && Smart($x, True) >>> Furry($x, True) ::: White, smart people are furry.\nFurry($x, True) && Big($x, True) >>> Smart($x, True) ::: If someone is furry and big then they are smart.\nSmart($x, True) >>> White($x, True) ::: All smart people are white.\nKind($x, True) && Rough($x, True) >>> Blue($x, True) ::: If someone is kind and rough then they are blue.\nQuery:\nNot(Kind(Harry, True)) ::: Harry is not kind.\n------\nProblem:\nAnne is furry. Anne is green. Anne is rough. Anne is white. Bob is furry. Bob is green. Bob is rough. Bob is white. Erin is furry. Erin is green. Erin is rough. Erin is white. Fiona is furry"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-497_Q9",
    "context": "The bald eagle eats the mouse. The bald eagle is blue. The lion is red. The lion needs the bald eagle. The lion needs the rabbit. The mouse eats the lion. The mouse visits the lion. The mouse visits the rabbit. The rabbit eats the bald eagle. The rabbit is red. The rabbit is round. The rabbit needs the bald eagle. If something is round and it needs the rabbit then the rabbit is big. If something is big then it needs the rabbit. If something visits the lion then the lion is green. If something is green then it is round. If something needs the bald eagle and the bald eagle needs the lion then it needs the lion. If something needs the mouse and the mouse needs the rabbit then the rabbit is blue. If something visits the bald eagle then it needs the lion. If something needs the rabbit then it visits the bald eagle.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The rabbit needs the rabbit.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y) ::: Does x eat y?\nIs($x, $y) ::: Is x y?\nNeeds($x, $y) ::: Does x need y?\nVisits($x, $y) ::: Does x visit y?\nBig($x, bool) ::: Is x big?\nRound($x, bool) ::: Is x round?\nGreen($x, bool) ::: Is x green?\nBlue($x, bool) ::: Is x blue?\nFacts:\nEats(BaldEagle, Mouse) ::: The bald eagle eats the mouse.\nIs(BaldEagle, Blue) ::: The bald eagle is blue.\nIs(Lion, Red) ::: The lion is red.\nNeeds(Lion, BaldEagle) ::: The lion needs the bald eagle.\nNeeds(Lion, Rabbit) ::: The lion needs the rabbit.\nEats(Mouse, Lion) ::: The mouse eats the lion.\nVisits(Mouse, Lion) ::: The mouse visits the lion.\nVisits(Mouse, Rabbit) ::: The mouse visits the rabbit.\nEats(Rabbit, BaldEagle) ::: The rabbit eats the bald eagle.\nIs(Rabbit, Red) ::: The rabbit is red.\nIs(Rabbit, Round) ::: The rabbit is round.\nNeeds(Rabbit, BaldEagle) ::: The rabbit needs the bald eagle.\nRules:\nRound($x, True) && Needs($x, Rabbit) >>> Rabbit($x, True) ::: If something is round and it needs the rabbit then the rabbit is big.\nBig($x, True) >>> Needs($x, Rabbit) ::: If something is big then it needs the rabbit.\nVisits($x, Lion) >>> Is($x, Green) ::: If something visits the lion then the lion is green.\nIs($x, Green) >>> Is($x, Round) ::: If something is green then it is round.\nNeeds($x, BaldEagle) && Needs($x, Lion) >>> Needs($x, Lion) ::: If something needs the bald eagle and the bald eagle needs the lion then it needs the lion.\nNeeds($x, Mouse) && Needs($x, Rabbit) >>> Is($x, Blue) ::: If something needs the mouse and the mouse needs the rabbit then the rabbit is blue.\nVisits($x, BaldEagle) >>> Needs($x, Lion) ::: If something visits the bald eagle then it needs the lion.\nNeeds($x, Rabbit) >>> Visits($x, BaldEagle) ::: If something needs the rabbit then it visits the bald eagle.\nQuery:\nNeeds(Rabbit, Rabbit) ::: The rab"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-457_Q11",
    "context": "The bald eagle is green. The bear is red. The bear needs the lion. The bear sees the lion. The cow chases the bear. The cow is kind. The cow needs the lion. The lion chases the bald eagle. The lion chases the cow. The lion is blue. The lion is red. The lion sees the cow. If someone is green and red then they are big. If someone sees the bald eagle then the bald eagle needs the bear. If someone is red then they need the cow. If someone is big and they see the cow then they chase the lion. If someone chases the lion then the lion is green. If someone needs the bear and the bear chases the lion then they are green. If someone sees the lion and the lion is green then the lion sees the bald eagle. If someone is red and they need the cow then the cow chases the lion. If someone sees the bear and the bear chases the lion then the bear sees the bald eagle.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The lion chases the lion.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen($x, bool) ::: Is x green?\nRed($x, bool) ::: Is x red?\nBig($x, bool) ::: Is x big?\nKind($x, bool) ::: Is x kind?\nNeeds($x, $y, bool) ::: Does x need y?\nChases($x, $y, bool) ::: Does x chase y?\nSees($x, $y, bool) ::: Does x see y?\nFacts:\nGreen(BaldEagle, True) ::: The bald eagle is green.\nRed(Bear, True) ::: The bear is red.\nNeeds(Bear, Lion, True) ::: The bear needs the lion.\nSees(Bear, Lion, True) ::: The bear sees the lion.\nChases(Bear, Cow, True) ::: The bear chases the cow.\nKind(Cow, True) ::: The cow is kind.\nNeeds(Cow, Lion, True) ::: The cow needs the lion.\nChases(Cow, Bear, True) ::: The cow chases the bear.\nBlue(Lion, True) ::: The lion is blue.\nRed(Lion, True) ::: The lion is red.\nSees(Lion, Cow, True) ::: The lion sees the cow.\nSees(Lion, BaldEagle, True) ::: The lion sees the bald eagle.\nRules:\nGreen($x, True) && Red($x, True) >>> Big($x, True) ::: If someone is green and red then they are big.\nSees(Bear, BaldEagle) >>> Needs(Bear, Bear, True) ::: If someone sees the bald eagle then the bald eagle needs the bear.\nRed($x, True) >>> Needs(Cow, $x, True) ::: If someone is red then they need the cow.\nBig($x, True) && Sees($x, Cow) >>> Chases($x, Lion, True) ::: If someone is big and they see the cow then they chase the lion.\nChases($x, Lion) >>> Green($x, True) ::: If someone chases the lion then the lion is green.\nNeeds(Bear, Lion) && Chases(Lion, $x) >>> Green($x, True) ::: If someone needs the bear and the bear chases the lion then they are green.\nSees(Lion, $x) && Green($x, True) >>> Sees(Lion, BaldEagle) ::: If someone sees the lion and the lion is green then the lion sees the bald eagle.\nRed($x, True) && Needs(Cow, $x) >>> Chases(Cow, Lion, True) ::: If someone sees the bear and the bear chases the lion then the bear sees the bald eagle.\nQuery"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-954_Q3",
    "context": "Anne is big. Anne is cold. Anne is rough. Anne is white. Charlie is white. Erin is big. Erin is kind. Erin is round. Harry is rough. Harry is round. Round things are kind. If something is white and rough then it is kind. All rough, kind things are furry. White things are cold. All big things are kind. If something is cold then it is big. If something is big and kind then it is rough. All round, cold things are white. Cold, rough things are white.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Harry is kind.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nCold($x, bool) ::: Is x cold?\nKind($x, bool) ::: Is x kind?\nRound($x, bool) ::: Is x round?\nRough($x, bool) ::: Is x rough?\nWhite($x, bool) ::: Is x white?\nFacts:\nBig(Anne, True) ::: Anne is big.\nCold(Anne, True) ::: Anne is cold.\nRough(Anne, True) ::: Anne is rough.\nWhite(Anne, True) ::: Anne is white.\nWhite(Charlie, True) ::: Charlie is white.\nBig(Erin, True) ::: Erin is big.\nKind(Erin, True) ::: Erin is kind.\nRound(Erin, True) ::: Erin is round.\nRough(Harry, True) ::: Harry is rough.\nRound(Harry, True) ::: Harry is round.\nRules:\nRound($x, True) >>> Kind($x, True) ::: Round things are kind.\nWhite($x, True) && Rough($x, True) >>> Kind($x, True) ::: If something is white and rough then it is kind.\nRough($x, True) && Kind($x, True) >>> Furry($x, True) ::: All rough, kind things are furry.\nWhite($x, True) >>> Cold($x, True) ::: White things are cold.\nBig($x, True) >>> Kind($x, True) ::: All big things are kind.\nCold($x, True) >>> Big($x, True) ::: If something is cold then it is big.\nBig($x, True) && Kind($x, True) >>> Rough($x, True) ::: If something is big and kind then it is rough.\nRound($x, True) && Cold($x, True) >>> White($x, True) ::: All round, cold things are white.\nCold($x, True) && Rough($x, True) >>> White($x, True) ::: Cold, rough things are white.\nQuery:\nKind(Harry, True) ::: Harry is kind.\n------\nProblem:\nAnne is big. Anne is cold. Anne is rough. Anne is white. Charlie is white. Erin is big. Erin is kind. Erin is round. Harry is rough. Harry is round. Round things are kind. If something is white and rough then it is kind. All rough, kind things are furry. White things are cold. All big things are kind. If something is cold then it is big. If something is big and kind then it is rough. All round, cold things are white. Cold, rough things are white.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Harry is kind"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-185_Q5",
    "context": "The bear chases the lion. The bear sees the lion. The cow chases the squirrel. The cow is green. The lion chases the bear. The lion likes the bear. The lion sees the bear. The squirrel chases the bear. The squirrel is green. The squirrel is young. The squirrel likes the cow. The squirrel sees the cow. If someone is young and they see the bear then the bear sees the squirrel. If the bear sees the squirrel then the bear is green. If someone likes the bear then they see the bear. If someone is green then they like the bear. If someone chases the bear and they see the lion then they chase the lion. If someone sees the squirrel and the squirrel sees the lion then they chase the lion. If someone is green then they see the squirrel. If the lion sees the squirrel and the lion likes the cow then the squirrel chases the lion. If someone sees the lion and the lion likes the cow then the cow is red.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cow sees the bear.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nSees($x, $y, bool) ::: Does x see y?\nLikes($x, $y, bool) ::: Does x like y?\nYoung($x, bool) ::: Is x young?\nGreen($x, bool) ::: Is x green?\nRed($x, bool) ::: Is x red?\nFacts:\nChases(Bear, Lion, True) ::: The bear chases the lion.\nSees(Bear, Lion, True) ::: The bear sees the lion.\nChases(Cow, Squirrel, True) ::: The cow chases the squirrel.\nGreen(Cow, True) ::: The cow is green.\nChases(Lion, Bear, True) ::: The lion chases the bear.\nLikes(Lion, Bear, True) ::: The lion likes the bear.\nSees(Lion, Bear, True) ::: The lion sees the bear.\nChases(Squirrel, Bear, True) ::: The squirrel chases the bear.\nGreen(Squirrel, True) ::: The squirrel is green.\nYoung(Squirrel, True) ::: The squirrel is young.\nLikes(Squirrel, Cow, True) ::: The squirrel likes the cow.\nSees(Squirrel, Cow, True) ::: The squirrel sees the cow.\nRules:\nYoung($x, True) && Sees($x, Bear, True) >>> Sees(Bear, Squirrel, True) ::: If someone is young and they see the bear then the bear sees the squirrel.\nSees(Bear, Squirrel, True) >>> Green(Bear, True) ::: If the bear sees the squirrel then the bear is green.\nSees($x, Bear, True) && Likes($x, Bear, True) >>> Sees(Bear, $y, True) ::: If someone sees the bear and the bear likes $y then they see $y.\nSees($x, Bear, True) && Likes($x, Bear, True) >>> Green($x, True) ::: If someone sees the bear and the bear likes $y then they like $y.\nSees($x, Bear, True) && Chases($x, Lion, True) >>> Chases($x, Lion, True) ::: If someone sees the bear and they chase the lion then they chase the lion.\nSees($x, Squirrel, True) && Sees(Squirrel, Lion, True) >>> Chases($x, Lion, True) ::: If someone sees the squirrel and the squirrel sees the lion then they chase the lion.\nSees($x, Squirrel, True) && Green($x, True) >>> Sees("
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1268_Q1",
    "context": "Charlie is furry. Charlie is smart. Fiona is rough. Fiona is smart. Gary is smart. Harry is quiet. Harry is smart. If something is cold and furry then it is rough. All furry things are young. White, rough things are cold. If something is rough and young then it is white. If something is smart and white then it is quiet. If something is rough and quiet then it is smart. If something is young then it is cold. If Harry is white then Harry is smart. If Harry is young then Harry is rough.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Harry is smart.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nFurry($x, bool) ::: Is x furry?\nSmart($x, bool) ::: Is x smart?\nRough($x, bool) ::: Is x rough?\nCold($x, bool) ::: Is x cold?\nWhite($x, bool) ::: Is x white?\nYoung($x, bool) ::: Is x young?\nFacts:\nFurry(Charlie, True) ::: Charlie is furry.\nSmart(Charlie, True) ::: Charlie is smart.\nRough(Fiona, True) ::: Fiona is rough.\nSmart(Fiona, True) ::: Fiona is smart.\nSmart(Gary, True) ::: Gary is smart.\nQuite(Harry, True) ::: Harry is quiet.\nSmart(Harry, True) ::: Harry is smart.\nRules:\nFurry($x, True) >>> Young($x, True) ::: All furry things are young.\nWhite($x, True) && Rough($x, True) >>> Cold($x, True) ::: White, rough things are cold.\nRough($x, True) && Young($x, True) >>> White($x, True) ::: If something is rough and young then it is white.\nSmart($x, True) && White($x, True) >>> Quite($x, True) ::: If something is smart and white then it is quiet.\nRough($x, True) && Quite($x, True) >>> Smart($x, True) ::: If something is rough and quiet then it is smart.\nYoung($x, True) >>> Cold($x, True) ::: If something is young then it is cold.\nWhite($x, True) >>> Harry($x, True) ::: If Harry is white then Harry is smart.\nYoung($x, True) >>> Harry($x, True) ::: If Harry is young then Harry is rough.\nQuery:\nSmart(Harry, True) ::: Harry is smart.\n------\nProblem:\nCharlie is furry. Charlie is smart. Fiona is rough. Fiona is smart. Gary is smart. Harry is quiet. Harry is smart. If something is cold and furry then it is rough. All furry things are young. White, rough things are cold. If something is rough and young then it is white. If something is smart and white then it is quiet. If something is rough and quiet then it is smart. If something is young then it is cold. If Harry is white then Harry is smart. If Harry is young then Harry is rough.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Harry is smart.\n###\nPredicates:\nFurry($x, bool) ::: Is x furry?\nSmart($x, bool) ::: Is x smart?\nRough($x,"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-87_Q14",
    "context": "The cat is green. The cat needs the rabbit. The mouse chases the cat. The mouse is cold. The mouse is kind. The mouse needs the cat. The mouse needs the rabbit. The mouse visits the cat. The mouse visits the rabbit. The mouse visits the tiger. The rabbit needs the cat. The tiger is green. The tiger needs the mouse. The tiger needs the rabbit. The tiger visits the mouse. The tiger visits the rabbit. If something needs the cat then the cat is green. If something chases the tiger then it needs the tiger. If something needs the cat then it chases the mouse. If the tiger needs the mouse and the tiger visits the cat then the tiger is round. If something is round then it chases the tiger. If something is kind and it chases the cat then it needs the tiger. If something visits the tiger then the tiger needs the cat. If something is green and it chases the mouse then it is round.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cat is round.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen($x, bool) ::: Is x green?\nNeeds($x, $y, bool) ::: Does x need y?\nChases($x, $y, bool) ::: Does x chase y?\nVisits($x, $y, bool) ::: Does x visit y?\nKind($x, bool) ::: Is x kind?\nRound($x, bool) ::: Is x round?\nFacts:\nGreen(Cat, True) ::: The cat is green.\nNeeds(Cat, Rabbit, True) ::: The cat needs the rabbit.\nChases(Mouse, Cat, True) ::: The mouse chases the cat.\nCold(Mouse, True) ::: The mouse is cold.\nKind(Mouse, True) ::: The mouse is kind.\nNeeds(Mouse, Cat, True) ::: The mouse needs the cat.\nNeeds(Mouse, Rabbit, True) ::: The mouse needs the rabbit.\nVisits(Mouse, Cat, True) ::: The mouse visits the cat.\nVisits(Mouse, Rabbit, True) ::: The mouse visits the rabbit.\nVisits(Mouse, Tiger, True) ::: The mouse visits the tiger.\nNeeds(Rabbit, Cat, True) ::: The rabbit needs the cat.\nGreen(Tiger, True) ::: The tiger is green.\nNeeds(Tiger, Mouse, True) ::: The tiger needs the mouse.\nNeeds(Tiger, Rabbit, True) ::: The tiger needs the rabbit.\nVisits(Tiger, Mouse, True) ::: The tiger visits the mouse.\nVisits(Tiger, Rabbit, True) ::: The tiger visits the rabbit.\nRules:\nNeeds($x, $y, True) >>> Green($x, True) ::: If something needs the cat then the cat is green.\nChases($x, $y, True) >>> Needs($x, $y, True) ::: If something chases the tiger then it needs the tiger.\nNeeds($x, $y, True) >>> Chases($x, Mouse, True) ::: If something needs the cat then it chases the mouse.\nRound($x, True) >>> Needs($x, Cat, True) && Visits($x, Cat) ::: If the tiger needs the mouse and the tiger visits the cat then the tiger is round.\nRound($x, True) >>> Chases($x, Tiger) ::: If something is round then it chases the tiger.\nKind($x, True) && Chases($x, Cat) >>> Needs($x, Tiger, True) ::: If something is kind and it chases the cat then it needs the tiger.\nVisits($x, Tiger) >>> Needs($x, Cat, True) ::: If something visits the tiger then"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-913_Q10",
    "context": "The cat needs the squirrel. The cow chases the squirrel. The cow is blue. The rabbit chases the cat. The rabbit is kind. The rabbit is red. The squirrel eats the cat. The squirrel is kind. The squirrel is red. The squirrel needs the cow. The squirrel needs the rabbit. If something needs the cow then it eats the cow. If something is red then it is big. If something is blue and nice then it chases the cow. If something is nice then it chases the rabbit. If the cat needs the squirrel and the squirrel needs the cat then the cat is blue. If something eats the cow then it is nice. If something chases the rabbit then it is blue. If something is red then it needs the squirrel.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The squirrel is not blue.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNeeds($x, $y, bool) ::: Does x need y?\nEats($x, $y, bool) ::: Does x eat y?\nChases($x, $y, bool) ::: Does x chase y?\nIs($x, $y, bool) ::: Is x y?\nBlue($x, bool) ::: Is x blue?\nKind($x, bool) ::: Is x kind?\nBig($x, bool) ::: Is x big?\nRules:\nNeeds($x, $y, True) >>> Eats($x, $y, True) ::: If something needs the cow then it eats the cow.\nRed($x, True) >>> Big($x, True) ::: If something is red then it is big.\nBlue($x, True) && Nice($x, True) >>> Chases($x, $y, True) ::: If something is blue and nice then it chases the cow.\nNice($x, True) >>> Chases($x, $y, True) ::: If something is nice then it chases the rabbit.\nNeeds($x, $y, True) && Needs($y, $x, True) >>> Is($x, $y, True) ::: If the cat needs the squirrel and the squirrel needs the cat then the cat is blue.\nEats($x, $y, True) >>> Nice($x, True) ::: If something eats the cow then it is nice.\nChases($x, $y, True) >>> Blue($x, True) ::: If something chases the rabbit then it is blue.\nRed($x, True) >>> Needs($x, $y, True) ::: If something is red then it needs the squirrel.\nQuery:\nNot(Blue(Squirrel, True)) ::: The squirrel is not blue.\n------\nProblem:\nThe cat needs the squirrel. The cow chases the squirrel. The cow is blue. The rabbit chases the cat. The rabbit is kind. The rabbit is red. The squirrel eats the cat. The squirrel is kind. The squirrel is red. The squirrel needs the cow. The squirrel needs the rabbit. If something needs the cow then it eats the cow. If something is red then it is big. If something is blue and nice then it chases the cow. If something is nice then it chases the rabbit. If the cat needs the squirrel and the squirrel needs the cat then the cat is blue. If something eats the cow then it is nice. If something chases the rabbit then it is blue. If something is red then it needs the squirrel.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? The squirrel is not blue.\n###\nPredicates:\nNeeds($x,"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-910_Q10",
    "context": "Anne is blue. Anne is furry. Anne is green. Anne is quiet. Anne is young. Bob is furry. Bob is round. Erin is green. Erin is young. Harry is furry. Furry people are blue. If someone is furry and young then they are green. All quiet, round people are rough. If Anne is green and Anne is blue then Anne is round. Furry people are quiet. All rough, quiet people are young. Quiet people are round.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Harry is not young.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue($x, bool) ::: Is x blue?\nFurry($x, bool) ::: Is x furry?\nGreen($x, bool) ::: Is x green?\nQuiet($x, bool) ::: Is x quiet?\nRound($x, bool) ::: Is x round?\nYoung($x, bool) ::: Is x young?\nRough($x, bool) ::: Is x rough?\nFacts:\nBlue(Anne, True) ::: Anne is blue.\nFurry(Anne, True) ::: Anne is furry.\nGreen(Anne, True) ::: Anne is green.\nQuiet(Anne, True) ::: Anne is quiet.\nYoung(Anne, True) ::: Anne is young.\nFurry(Bob, True) ::: Bob is furry.\nRound(Bob, True) ::: Bob is round.\nGreen(Erin, True) ::: Erin is green.\nYoung(Erin, True) ::: Erin is young.\nFurry(Harry, True) ::: Harry is furry.\nRules:\nFurry($x, True) >>> Blue($x, True) ::: Furry people are blue.\nFurry($x, True) && Young($x, True) >>> Green($x, True) ::: If someone is furry and young then they are green.\nQuiet($x, True) && Round($x, True) >>> Rough($x, True) ::: All quiet, round people are rough.\nGreen($x, True) && Blue($x, True) >>> Round($x, True) ::: If Anne is green and Anne is blue then Anne is round.\nFurry($x, True) >>> Quiet($x, True) ::: Furry people are quiet.\nYoung($x, True) && Rough($x, True) >>> Quiet($x, True) ::: All rough, quiet people are young.\nQuiet($x, True) >>> Round($x, True) ::: Quiet people are round.\nQuery:\nNot(Young(Harry, True)) ::: Harry is not young.\n------"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-626_Q14",
    "context": "The bald eagle chases the cow. The bald eagle chases the dog. The bald eagle likes the cow. The cow chases the mouse. The cow is red. The cow likes the dog. The cow likes the mouse. The dog is big. The dog is green. The mouse chases the bald eagle. The mouse eats the bald eagle. The mouse eats the cow. If someone is big and they like the dog then they are green. If someone is red then they eat the cow. If someone eats the cow then they like the bald eagle. If the dog chases the mouse and the mouse is red then the dog eats the mouse. If someone likes the cow then they are round. If someone is red then they chase the dog. If someone is big and they eat the bald eagle then the bald eagle is green. If the cow likes the bald eagle then the bald eagle is red. If someone eats the dog then they eat the mouse.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bald eagle is green.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y) ::: Does x chase y?\nLikes($x, $y) ::: Does x like y?\nEats($x, $y) ::: Does x eat y?\nIs($x, $y) ::: Is x y?\nBig($x, bool) ::: Is x big?\nGreen($x, bool) ::: Is x green?\nRed($x, bool) ::: Is x red?\nRound($x, bool) ::: Is x round?\nFacts:\nChases(BaldEagle, Cow) ::: The bald eagle chases the cow.\nChases(BaldEagle, Dog) ::: The bald eagle chases the dog.\nLikes(BaldEagle, Cow) ::: The bald eagle likes the cow.\nChases(Cow, Mouse) ::: The cow chases the mouse.\nIs(Cow, Red) ::: The cow is red.\nLikes(Cow, Dog) ::: The cow likes the dog.\nLikes(Cow, Mouse) ::: The cow likes the mouse.\nIs(Dog, Big) ::: The dog is big.\nIs(Dog, Green) ::: The dog is green.\nChases(Mouse, BaldEagle) ::: The mouse chases the bald eagle.\nEats(Mouse, BaldEagle) ::: The mouse eats the bald eagle.\nEats(Mouse, Cow) ::: The mouse eats the cow.\nRules:\nBig($x, True) && Likes($x, Dog) >>> Green($x, True) ::: If someone is big and they like the dog then they are green.\nIs($x, Red) >>> Eats($x, Cow) ::: If someone is red then they eat the cow.\nEats($x, Cow) >>> Likes($x, BaldEagle) ::: If someone eats the cow then they like the bald eagle.\nChases($x, Mouse) && Is($x, Red) >>> Eats($x, Mouse) ::: If the dog chases the mouse and the mouse is red then the dog eats the mouse.\nLikes($x, Cow"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-522_Q23",
    "context": "The bear is big. The bear sees the dog. The dog eats the bear. The dog eats the rabbit. The dog is big. The rabbit eats the tiger. The rabbit likes the dog. The rabbit sees the dog. The tiger is big. The tiger is rough. The tiger likes the dog. If something eats the bear then it is green. All big things are green. If something is red and it likes the dog then the dog is rough. If something is rough and it sees the tiger then it is big. If something sees the dog and the dog is green then it sees the tiger. If something eats the dog and the dog is big then it is kind. If something is kind and rough then it eats the tiger. If something eats the rabbit and it likes the tiger then it sees the tiger. If something sees the tiger then the tiger eats the dog.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The dog does not like the tiger.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nGreen($x, bool) ::: Is x green?\nKind($x, bool) ::: Is x kind?\nLikes($x, $y, bool) ::: Does x like y?\nRough($x, bool) ::: Is x rough?\nRed($x, bool) ::: Is x red?\nSees($x, $y, bool) ::: Does x see y?\nEats($x, $y, bool) ::: Does x eat y?\nFacts:\nBig(Bear, True) ::: The bear is big.\nSees(Bear, Dog, True) ::: The bear sees the dog.\nEats(Dog, Bear, True) ::: The dog eats the bear.\nEats(Dog, Rabbit, True) ::: The dog eats the rabbit.\nBig(Dog, True) ::: The dog is big.\nEats(Rabbit, Tiger, True) ::: The rabbit eats the tiger.\nLikes(Rabbit, Dog, True) ::: The rabbit likes the dog.\nSees(Rabbit, Dog, True) ::: The rabbit sees the dog.\nBig(Tiger, True) ::: The tiger is big.\nRough(Tiger, True) ::: The tiger is rough.\nLikes(Tiger, Dog, True) ::: The tiger likes the dog.\nRules:\nEats($x, $y) >>> Green($x, True) ::: If something eats the bear then it is green.\nBig($x, True) >>> Green($x, True) ::: All big things are green.\nRed($x, True) && Likes($x, Dog, True) >>> Rough(Dog, True) ::: If something is red and it likes the dog then the dog is rough.\nSees($x, Dog, True) && Green(Dog, True) >>> Sees($x, Tiger, True) ::: If something sees the dog and the dog is green then it sees the tiger.\nEats($x, Dog, True) && Big(D"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-699_Q16",
    "context": "The bear eats the cow. The cow eats the bear. The cow eats the squirrel. The rabbit eats the cow. The rabbit eats the squirrel. The rabbit is rough. The squirrel eats the cow. The squirrel is cold. The squirrel needs the bear. The squirrel sees the cow. If something eats the bear and it is rough then it sees the squirrel. If something sees the bear then it is kind. If something is cold then it sees the cow. If something sees the squirrel then it sees the bear. If the squirrel sees the cow and the squirrel needs the rabbit then the cow sees the squirrel. If something needs the bear then it needs the rabbit. If something is kind then it needs the cow. If something needs the bear then it is red.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The rabbit is red.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y, bool) ::: Does x eat y?\nRough($x, bool) ::: Is x rough?\nKind($x, bool) ::: Is x kind?\nCold($x, bool) ::: Is x cold?\nNeeds($x, $y, bool) ::: Does x need y?\nSees($x, $y, bool) ::: Does x see y?\nFacts:\nEats(Bear, Cow, True) ::: The bear eats the cow.\nEats(Cow, Bear, True) ::: The cow eats the bear.\nEats(Cow, Squirrel, True) ::: The cow eats the squirrel.\nEats(Rabbit, Cow, True) ::: The rabbit eats the cow.\nEats(Rabbit, Squirrel, True) ::: The rabbit eats the squirrel.\nRough(Rabbit, True) ::: The rabbit is rough.\nSees(Squirrel, Cow, True) ::: The squirrel eats the cow.\nCold(Squirrel, True) ::: The squirrel is cold.\nNeeds(Squirrel, Bear, True) ::: The squirrel needs the bear.\nSees(Squirrel, Cow, True) ::: The squirrel sees the cow.\nRules:\nEats($x, $y, True) >>> Sees($x, $y, True) ::: If something eats the bear and it is rough then it sees the squirrel.\nSees($x, $y, True) >>> Kind($x, True) ::: If something sees the bear then it is kind.\nCold($x, True) >>> Sees($x, $y, True) ::: If something is cold then it sees the cow.\nSees($x, $y, True) >>> Sees($x, $z, True) ::: If something sees the squirrel then it sees the bear.\nSees($x, $y, True) && Needs($x, $z, True) && Sees($x, $y, True) >>> Se"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-1042_Q17",
    "context": "The cat is blue. The cat is red. The cat visits the cow. The cow is blue. The cow needs the cat. The cow needs the mouse. The cow visits the mouse. The mouse is red. The mouse needs the cow. The tiger is blue. The tiger visits the cat. If something visits the tiger and the tiger is green then it is green. If something likes the cat and the cat visits the cow then the cow is red. If something is rough and it likes the mouse then the mouse visits the cow. If the cat visits the tiger and the tiger likes the cat then the cat visits the cow. If something needs the tiger then it likes the cat. If something visits the cow and the cow likes the mouse then the cow likes the tiger. If something is red then it needs the tiger. If something likes the cow then it is blue.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The mouse is not blue.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue($x, bool) ::: Is x blue?\nRed($x, bool) ::: Is x red?\nVisits($x, $y, bool) ::: Does x visit y?\nLikes($x, $y, bool) ::: Does x like y?\nNeeds($x, $y, bool) ::: Does x need y?\nFacts:\nBlue(Cat, True) ::: The cat is blue.\nRed(Cat, True) ::: The cat is red.\nVisits(Cat, Cow, True) ::: The cat visits the cow.\nBlue(Cow, True) ::: The cow is blue.\nNeeds(Cat, Cow, True) ::: The cow needs the cat.\nNeeds(Cow, Mouse, True) ::: The cow needs the mouse.\nVisits(Cow, Mouse, True) ::: The cow visits the mouse.\nRed(Mouse, True) ::: The mouse is red.\nNeeds(Mouse, Cow, True) ::: The mouse needs the cow.\nBlue(Tiger, True) ::: The tiger is blue.\nVisits(Tiger, Cat, True) ::: The tiger visits the cat.\nRules:\nVisits($x, $y, True) && $x is green >>> $x is green ::: If something visits the tiger and the tiger is green then it is green.\nVisits($x, $y, True) && $x likes $y && $y visits $z >>> $z is red ::: If something visits the cow and the cow visits the tiger then the cow is red.\nLikes($x, $y, True) && $y visits $z >>> $x likes $z ::: If something likes the cow and the cow visits the tiger then the cow likes the tiger.\nVisits($x, $y, True) && $y likes $z >>> $x likes $z ::: If something visits the cow and the cow likes the mouse then the cow likes the tiger.\nNeeds($x, $y, True) >>> $x likes $y ::: If something needs the tiger then it likes the cat.\nLikes($x, $y, True) && $"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1357_Q5",
    "context": "Bob is cold. Bob is green. Bob is red. Bob is round. Fiona is green. Fiona is smart. Gary is green. Gary is red. Harry is green. Harry is smart. All smart people are cold. If someone is red then they are rough. All nice, red people are green. All red, rough people are round. If someone is rough and round then they are smart. If Gary is smart and Gary is cold then Gary is nice. Green, smart people are red.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is smart.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nGreen($x, bool) ::: Is x green?\nRed($x, bool) ::: Is x red?\nRound($x, bool) ::: Is x round?\nSmart($x, bool) ::: Is x smart?\nNice($x, bool) ::: Is x nice?\nFacts:\nCold(Bob, True) ::: Bob is cold.\nGreen(Bob, True) ::: Bob is green.\nRed(Bob, True) ::: Bob is red.\nRound(Bob, True) ::: Bob is round.\nGreen(Fiona, True) ::: Fiona is green.\nSmart(Fiona, True) ::: Fiona is smart.\nGreen(Gary, True) ::: Gary is green.\nRed(Gary, True) ::: Gary is red.\nGreen(Harry, True) ::: Harry is green.\nSmart(Harry, True) ::: Harry is smart.\nRules:\nSmart($x, True) >>> Cold($x, True) ::: All smart people are cold.\nRed($x, True) >>> Rough($x, True) ::: If someone is red then they are rough.\nRed($x, True) && Nice($x, True) >>> Green($x, True) ::: All nice, red people are green.\nRed($x, True) && Rough($x, True) >>> Round($x, True) ::: All red, rough people are round.\nRough($x, True) && Round($x, True) >>> Smart($x, True) ::: If someone is rough and round then they are smart.\nSmart($x, True) && Cold($x, True) >>> Nice($x, True) ::: If Gary is smart and Gary is cold then Gary is nice.\nGreen($x, True) && Smart($x, True) >>> Red($x, True) ::: Green, smart people are red.\nQuery:\nSmart(Bob, True) ::: Bob is smart.\n------\nProblem:\nBob is cold. Bob is green. Bob is red. Bob is round. Fiona is green"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-185_Q21",
    "context": "The bear chases the lion. The bear sees the lion. The cow chases the squirrel. The cow is green. The lion chases the bear. The lion likes the bear. The lion sees the bear. The squirrel chases the bear. The squirrel is green. The squirrel is young. The squirrel likes the cow. The squirrel sees the cow. If someone is young and they see the bear then the bear sees the squirrel. If the bear sees the squirrel then the bear is green. If someone likes the bear then they see the bear. If someone is green then they like the bear. If someone chases the bear and they see the lion then they chase the lion. If someone sees the squirrel and the squirrel sees the lion then they chase the lion. If someone is green then they see the squirrel. If the lion sees the squirrel and the lion likes the cow then the squirrel chases the lion. If someone sees the lion and the lion likes the cow then the cow is red.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The lion is not cold.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nSees($x, $y, bool) ::: Does x see y?\nLikes($x, $y, bool) ::: Does x like y?\nYoung($x, bool) ::: Is x young?\nGreen($x, bool) ::: Is x green?\nRed($x, bool) ::: Is x red?\nCold($x, bool) ::: Is x cold?\nFacts:\nChases(Bear, Lion, True) ::: The bear chases the lion.\nSees(Bear, Lion, True) ::: The bear sees the lion.\nChases(Cow, Squirrel, True) ::: The cow chases the squirrel.\nGreen(Cow, True) ::: The cow is green.\nChases(Lion, Bear, True) ::: The lion chases the bear.\nLikes(Lion, Bear, True) ::: The lion likes the bear.\nSees(Lion, Bear, True) ::: The lion sees the bear.\nChases(Squirrel, Bear, True) ::: The squirrel chases the bear.\nGreen(Squirrel, True) ::: The squirrel is green.\nYoung(Squirrel, True) ::: The squirrel is young.\nLikes(Squirrel, Cow, True) ::: The squirrel likes the cow.\nSees(Squirrel, Cow, True) ::: The squirrel sees the cow.\nRules:\nYoung($x, True) && Sees($x, Bear, True) >>> Bear(Sees, Squirrel, True) ::: If someone is young and they see the bear then the bear sees the squirrel.\nSees(Bear, Squirrel, True) >>> Bear(Green, True) ::: If the bear sees the squirrel then the bear is green.\nLikes($x, Bear, True) >>> Sees($x, Bear, True) ::: If someone likes the bear then they see the bear.\nGreen($x, True) >>> Likes($x, Bear, True) :::"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-253_Q3",
    "context": "The cat eats the mouse. The cat eats the squirrel. The cat is rough. The cat sees the lion. The cat sees the mouse. The cat sees the squirrel. The lion sees the cat. The lion sees the squirrel. The mouse is round. The mouse sees the squirrel. The squirrel likes the lion. If someone is cold then they are kind. If someone eats the cat then the cat eats the mouse. If someone eats the mouse then they are cold. If someone eats the squirrel and the squirrel is nice then they see the squirrel. If someone eats the squirrel then they are cold. If someone sees the squirrel then they like the cat. If someone likes the lion and the lion likes the cat then they see the squirrel. If someone sees the mouse and they like the cat then they are nice. If someone sees the squirrel and they are nice then the squirrel eats the mouse.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The lion likes the cat.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y, bool) ::: Does x eat y?\nRough($x, bool) ::: Is x rough?\nSees($x, $y, bool) ::: Does x see y?\nKind($x, bool) ::: Is x kind?\nCold($x, bool) ::: Is x cold?\nNice($x, bool) ::: Is x nice?\nLikes($x, $y, bool) ::: Does x like y?\nFacts:\nEats(Cat, Mouse, True) ::: The cat eats the mouse.\nEats(Cat, Squirrel, True) ::: The cat eats the squirrel.\nRough(Cat, True) ::: The cat is rough.\nSees(Cat, Lion, True) ::: The cat sees the lion.\nSees(Cat, Mouse, True) ::: The cat sees the mouse.\nSees(Cat, Squirrel, True) ::: The cat sees the squirrel.\nSees(Lion, Cat, True) ::: The lion sees the cat.\nSees(Lion, Squirrel, True) ::: The lion sees the squirrel.\nRound(Mouse, True) ::: The mouse is round.\nSees(Mouse, Squirrel, True) ::: The mouse sees the squirrel.\nLikes(Squirrel, Lion, True) ::: The squirrel likes the lion.\nIf($x, $y, $z, bool) ::: If $x then $y.\nEats($x, Mouse, True) >>> Eats(Cat, Mouse, True) ::: If someone eats the cat then the cat eats the mouse.\nEats(Mouse, $x, True) >>> Cold($x, True) ::: If someone eats the mouse then they are cold.\nEats($x, Squirrel, True) && Squirrel($x, Nice) >>> Sees($x, Squirrel, True) ::: If someone eats the squirrel and the squirrel is nice then they see the squirrel.\nEats($x, Squirrel, True) >>> Cold($x, True"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-41_Q9",
    "context": "The bear is nice. The bear is round. The bear likes the squirrel. The bear sees the rabbit. The cat is round. The rabbit eats the squirrel. The rabbit is not nice. The rabbit sees the squirrel. The squirrel eats the cat. The squirrel is blue. The squirrel likes the cat. If something is blue and it likes the cat then it sees the cat. If the cat sees the bear then the bear sees the rabbit. If something eats the squirrel then the squirrel sees the cat. If something likes the bear then the bear eats the rabbit. If the cat is round then the cat likes the bear. If something eats the rabbit then the rabbit eats the cat. If the rabbit sees the cat and the rabbit eats the squirrel then the rabbit likes the cat. If something eats the cat and it is not nice then it eats the bear. If something eats the bear then the bear likes the cat.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The rabbit eats the bear.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNice($x, bool) ::: Is x nice?\nRound($x, bool) ::: Is x round?\nLikes($x, $y, bool) ::: Does x like y?\nSees($x, $y, bool) ::: Does x see y?\nEats($x, $y, bool) ::: Does x eat y?\nFacts:\nNice(Bear, True) ::: The bear is nice.\nRound(Bear, True) ::: The bear is round.\nLikes(Bear, Squirrel, True) ::: The bear likes the squirrel.\nSees(Bear, Rabbit, True) ::: The bear sees the rabbit.\nRound(Cat, True) ::: The cat is round.\nEats(Rabbit, Squirrel, True) ::: The rabbit eats the squirrel.\nNot(Nice(Rabbit, True)) ::: The rabbit is not nice.\nSees(Rabbit, Squirrel, True) ::: The rabbit sees the squirrel.\nEats(Squirrel, Cat, True) ::: The squirrel eats the cat.\nBlue(Squirrel, True) ::: The squirrel is blue.\nLikes(Squirrel, Cat, True) ::: The squirrel likes the cat.\nIf(Blue($x, True), Likes($x, Cat, True), Sees($x, Cat, True)) ::: If something is blue and it likes the cat then it sees the cat.\nIf(Sees(Bear, Rabbit, True), Sees(Rabbit, Bear, True)) ::: If the bear sees the rabbit then the rabbit sees the bear.\nIf(Eats($x, Squirrel, True), Sees($x, Squirrel, True)) ::: If something eats the squirrel then the squirrel sees the cat.\nIf(Likes($x, Bear, True), Eats($x, Rabbit, True)) ::: If something likes the bear then the bear eats the rabbit.\nIf(Round(Cat, True), Likes(Cat, Bear,"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-389_Q12",
    "context": "The bald eagle eats the tiger. The bald eagle is cold. The bald eagle is green. The bald eagle visits the bear. The bear eats the bald eagle. The bear visits the bald eagle. The lion is kind. The lion needs the bald eagle. The lion needs the bear. The tiger eats the bear. The tiger eats the lion. The tiger is blue. The tiger is young. The tiger does not visit the lion. If something is blue then it eats the bear. If something is kind and it eats the bald eagle then the bald eagle eats the bear. If something visits the bear and the bear visits the tiger then the bear does not need the bald eagle. If the bear is green then the bear eats the bald eagle. If something visits the lion then the lion is blue. If something eats the tiger then it visits the lion. If something is green then it does not visit the tiger. If the lion eats the bear and the bear visits the bald eagle then the bear eats the tiger. If something is young and it does not visit the lion then the lion visits the bald eagle.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bear does not visit the lion.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y) ::: Does x eat y?\nCold($x, bool) ::: Is x cold?\nGreen($x, bool) ::: Is x green?\nVisits($x, $y) ::: Does x visit y?\nKind($x, bool) ::: Is x kind?\nNeeds($x, $y) ::: Does x need y?\nBlue($x, bool) ::: Is x blue?\nYoung($x, bool) ::: Is x young?\nFacts:\nEats(BaldEagle, Tiger) ::: The bald eagle eats the tiger.\nCold(BaldEagle, True) ::: The bald eagle is cold.\nGreen(BaldEagle, True) ::: The bald eagle is green.\nVisits(BaldEagle, Bear) ::: The bald eagle visits the bear.\nEats(Bear, BaldEagle) ::: The bear eats the bald eagle.\nVisits(Bear, BaldEagle) ::: The bear visits the bald eagle.\nKind(Lion, True) ::: The lion is kind.\nNeeds(Lion, BaldEagle) ::: The lion needs the bald eagle.\nNeeds(Lion, Bear) ::: The lion needs the bear.\nEats(Tiger, Bear) ::: The tiger eats the bear.\nEats(Tiger, Lion) ::: The tiger eats the lion.\nBlue(Tiger, True) ::: The tiger is blue.\nYoung(Tiger, True) ::: The tiger is young.\nDoesNotVisit(Tiger, Lion) ::: The tiger does not visit the lion.\nRules:\nIf something is blue then it eats the bear ::: If something is blue then it eats the bear.\nIf something is kind and it eats the bald eagle then the bald eagle eats the bear ::: If something is kind and it eats the bald eagle then the bald eagle eats the bear.\nIf something visits the bear and the bear visits the tiger then the bear does not need the bald eagle ::: If something visits"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-30_Q5",
    "context": "Bob is green. Bob is rough. Bob is white. Charlie is rough. Dave is quiet. Gary is cold. Gary is rough. All quiet, kind people are young. If Charlie is quiet and Charlie is young then Charlie is kind. All green, white people are cold. All quiet people are rough. All rough, green people are white. All young people are green. Rough people are young.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Charlie is green.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen($x, bool) ::: Is x green?\nRough($x, bool) ::: Is x rough?\nWhite($x, bool) ::: Is x white?\nKind($x, bool) ::: Is x kind?\nQuiet($x, bool) ::: Is x quiet?\nYoung($x, bool) ::: Is x young?\nCold($x, bool) ::: Is x cold?\nFacts:\nGreen(Bob, True) ::: Bob is green.\nRough(Bob, True) ::: Bob is rough.\nWhite(Bob, True) ::: Bob is white.\nRough(Charlie, True) ::: Charlie is rough.\nQuiet(Dave, True) ::: Dave is quiet.\nCold(Gary, True) ::: Gary is cold.\nRough(Gary, True) ::: Gary is rough.\nRules:\nYoung($x, True) >>> Kind($x, True) ::: All quiet, kind people are young.\nQuiet($x, True) && Charlie($x, True) >>> Kind($x, True) ::: If Charlie is quiet and Charlie is young then Charlie is kind.\nGreen($x, True) && White($x, True) >>> Cold($x, True) ::: All green, white people are cold.\nQuiet($x, True) >>> Rough($x, True) ::: All quiet people are rough.\nRough($x, True) && Green($x, True) >>> White($x, True) ::: All rough, green people are white.\nYoung($x, True) >>> Green($x, True) ::: All young people are green.\nRough($x, True) >>> Young($x, True) ::: Rough people are young.\nQuery:\nGreen(Charlie, True) ::: Charlie is green.\n------"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-65_Q14",
    "context": "The bald eagle eats the tiger. The bald eagle needs the tiger. The cat is red. The cat is round. The cat needs the tiger. The mouse likes the tiger. The tiger likes the mouse. If someone is red then they are blue. If someone eats the tiger then they need the cat. If someone eats the cat then they like the tiger. If someone needs the tiger and they are red then they like the tiger. If someone likes the tiger then they need the cat. If someone eats the bald eagle then the bald eagle is red. If someone likes the tiger and the tiger eats the bald eagle then the tiger needs the mouse. If someone needs the mouse then the mouse needs the cat. If someone is blue then they eat the bald eagle.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The tiger needs the mouse.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y) ::: Does x eat y?\nNeeds($x, $y) ::: Does x need y?\nLikes($x, $y) ::: Does x like y?\nIsRed($x, bool) ::: Is x red?\nIsRound($x, bool) ::: Is x round?\nIsBlue($x, bool) ::: Is x blue?\nFacts:\nEats(BaldEagle, Tiger) ::: The bald eagle eats the tiger.\nNeeds(BaldEagle, Tiger) ::: The bald eagle needs the tiger.\nIsRed(Cat, True) ::: The cat is red.\nIsRound(Cat, True) ::: The cat is round.\nNeeds(Cat, Tiger) ::: The cat needs the tiger.\nLikes(Tiger, Mouse) ::: The tiger likes the mouse.\nLikes(Mouse, Tiger) ::: The tiger likes the mouse.\nIsBlue(Tiger, True) ::: If someone is red then they are blue.\nEats(BaldEagle, Tiger) >>> Needs(BaldEagle, Cat) ::: If someone eats the tiger then they need the cat.\nEats(BaldEagle, Cat) >>> Likes(Tiger, Mouse) ::: If someone eats the cat then they like the tiger.\nNeeds(Tiger, Cat) && IsRed(Tiger, True) >>> Likes(Tiger, Mouse) ::: If someone needs the tiger and they are red then they like the tiger.\nLikes(Tiger, Mouse) >>> Needs(Cat, Mouse) ::: If someone likes the tiger then they need the cat.\nEats(BaldEagle, Cat) >>> IsRed(BaldEagle, True) ::: If someone"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-669_Q2",
    "context": "Bob is blue. Bob is not young. Dave is white. Fiona is green. Fiona is rough. Fiona is smart. Gary is blue. If something is nice then it is smart. Blue, smart things are green. All rough things are nice. Blue things are nice. All green, smart things are rough. Green, smart things are blue. If something is green and not rough then it is white. Rough, green things are not young. If something is smart and not white then it is young.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Fiona is not smart.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue($x, bool) ::: Is x blue?\nYoung($x, bool) ::: Is x young?\nWhite($x, bool) ::: Is x white?\nGreen($x, bool) ::: Is x green?\nRough($x, bool) ::: Is x rough?\nSmart($x, bool) ::: Is x smart?\nNice($x, bool) ::: Is x nice?\nFacts:\nBlue(Bob, True) ::: Bob is blue.\nNot(Young(Bob, True)) ::: Bob is not young.\nWhite(Dave, True) ::: Dave is white.\nGreen(Fiona, True) ::: Fiona is green.\nRough(Fiona, True) ::: Fiona is rough.\nSmart(Fiona, True) ::: Fiona is smart.\nBlue(Gary, True) ::: Gary is blue.\nRules:\nNice($x, True) >>> Smart($x, True) ::: If something is nice then it is smart.\nBlue($x, True) && Smart($x, True) >>> Green($x, True) ::: Blue, smart things are green.\nAll(Rough($x, True), Nice($x, True)) ::: All rough things are nice.\nBlue($x, True) >>> Nice($x, True) ::: Blue things are nice.\nAll(Green($x, True), Smart($x, True)) >>> Rough($x, True) ::: All green, smart things are rough.\nGreen($x, True) && Smart($x, True) >>> Blue($x, True) ::: Green, smart things are blue.\nIf(Green($x, True), Not(Rough($x, True)), White($x, True)) ::: If something is green and not rough then it is white.\nRough($x, True) && Green"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-597_Q11",
    "context": "The bald eagle eats the lion. The bald eagle needs the rabbit. The bald eagle sees the dog. The bald eagle sees the rabbit. The dog eats the bald eagle. The dog eats the rabbit. The dog needs the lion. The lion needs the bald eagle. The lion needs the dog. The rabbit eats the lion. The rabbit is green. The rabbit is round. If something sees the rabbit then it eats the rabbit. If something sees the lion and it is blue then the lion sees the dog. If something eats the rabbit then it eats the dog. If something is green and it sees the lion then the lion eats the rabbit. If something is rough then it eats the lion. If something eats the dog and it eats the lion then the lion sees the rabbit. If something is rough and it sees the lion then the lion is blue.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The lion eats the dog.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y, bool) ::: Does x eat y?\nNeeds($x, $y, bool) ::: Does x need y?\nSees($x, $y, bool) ::: Does x see y?\nIs($x, $y, bool) ::: Is x y?\nGreen($x, bool) ::: Is x green?\nRound($x, bool) ::: Is x round?\nRough($x, bool) ::: Is x rough?\nBlue($x, bool) ::: Is x blue?\nFacts:\nEats(BaldEagle, Lion, True) ::: The bald eagle eats the lion.\nNeeds(BaldEagle, Rabbit, True) ::: The bald eagle needs the rabbit.\nSees(BaldEagle, Dog, True) ::: The bald eagle sees the dog.\nSees(BaldEagle, Rabbit, True) ::: The bald eagle sees the rabbit.\nEats(Dog, BaldEagle, True) ::: The dog eats the bald eagle.\nEats(Dog, Rabbit, True) ::: The dog eats the rabbit.\nNeeds(Dog, Lion, True) ::: The dog needs the lion.\nNeeds(Lion, BaldEagle, True) ::: The lion needs the bald eagle.\nNeeds(Lion, Dog, True) ::: The lion needs the dog.\nEats(Rabbit, Lion, True) ::: The rabbit eats the lion.\nGreen(Rabbit, True) ::: The rabbit is green.\nRound(Rabbit, True) ::: The rabbit is round.\nRules:\nIf something sees the rabbit then it eats the rabbit ::: If something sees the rabbit then it eats the rabbit."
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-527_Q4",
    "context": "Bob is quiet. Charlie is blue. Charlie is cold. Charlie is nice. Dave is blue. Dave is cold. Erin is blue. If something is blue and cold then it is big. Round, nice things are big. All nice, quiet things are furry. If Bob is round then Bob is furry. If Bob is furry and Bob is nice then Bob is big. If something is big and blue then it is quiet. If something is blue then it is nice. All nice things are cold.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Charlie is not big.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nQuiet($x, bool) ::: Is x quiet?\nBlue($x, bool) ::: Is x blue?\nCold($x, bool) ::: Is x cold?\nNice($x, bool) ::: Is x nice?\nBig($x, bool) ::: Is x big?\nRound($x, bool) ::: Is x round?\nFurry($x, bool) ::: Is x furry?\nFacts:\nQuite(Bob, True) ::: Bob is quiet.\nBlue(Charlie, True) ::: Charlie is blue.\nCold(Charlie, True) ::: Charlie is cold.\nNice(Charlie, True) ::: Charlie is nice.\nBlue(Dave, True) ::: Dave is blue.\nCold(Dave, True) ::: Dave is cold.\nBlue(Erin, True) ::: Erin is blue.\nRules:\nBlue($x, True) && Cold($x, True) >>> Big($x, True) ::: If something is blue and cold then it is big.\nRound($x, True) && Nice($x, True) >>> Big($x, True) ::: Round, nice things are big.\nNice($x, True) && Quite($x, True) >>> Furry($x, True) ::: All nice, quiet things are furry.\nBlue($x, True) >>> Furry($x, True) ::: If Bob is round then Bob is furry.\nNice($x, True) && Quite($x, True) >>> Furry($x, True) ::: If Bob is furry and Bob is nice then Bob is big.\nBlue($x, True) >>> Quite($x, True) ::: If something is big and blue then it is quiet.\nBlue($x, True) >>> Nice($x, True) ::: If"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-566_Q8",
    "context": "Anne is not kind. Anne is smart. Anne is white. Bob is green. Bob is nice. Fiona is nice. Gary is red. If someone is red and nice then they are rough. If Fiona is red and Fiona is rough then Fiona is kind. Red people are nice. Rough people are nice. If Gary is red and Gary is smart then Gary is white. Kind people are smart. If someone is green and not nice then they are smart. Rough people are kind. If someone is nice and white then they are kind.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is not kind.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nKind($x, bool) ::: Is x kind?\nSmart($x, bool) ::: Is x smart?\nWhite($x, bool) ::: Is x white?\nGreen($x, bool) ::: Is x green?\nNice($x, bool) ::: Is x nice?\nRough($x, bool) ::: Is x rough?\nFacts:\nNotKind(Anne, True) ::: Anne is not kind.\nSmart(Anne, True) ::: Anne is smart.\nWhite(Anne, True) ::: Anne is white.\nGreen(Bob, True) ::: Bob is green.\nNice(Bob, True) ::: Bob is nice.\nNice(Fiona, True) ::: Fiona is nice.\nRed(Gary, True) ::: Gary is red.\nRules:\nRed($x, True) && Nice($x, True) >>> Rough($x, True) ::: If someone is red and nice then they are rough.\nRed($x, True) && Nice($x, True) && Red($x, True) && Rough($x, True) >>> Kind($x, True) ::: If Fiona is red and Fiona is rough then Fiona is kind.\nRed($x, True) >>> Nice($x, True) ::: Red people are nice.\nRough($x, True) >>> Nice($x, True) ::: Rough people are nice.\nRed($x, True) && Nice($x, True) && Smart($x, True) >>> White($x, True) ::: If Gary is red and Gary is smart then Gary is white.\nKind($x, True) >>> Smart($x, True) ::: Kind people are smart.\nNotNice($x, True) && Green($x, True) >>> Smart($x, True) ::: If someone is green and not nice"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-751_Q5",
    "context": "Bob is cold. Bob is furry. Erin is furry. Erin is kind. Erin is nice. Erin is young. Gary is nice. Gary is young. Harry is furry. Harry is nice. Harry is quiet. Harry is smart. If something is kind and smart then it is nice. If Bob is young then Bob is kind. If something is nice and young then it is quiet. Young, kind things are quiet. If Bob is kind and Bob is smart then Bob is young. Furry things are young. If something is kind and nice then it is cold. All furry, quiet things are smart. Smart, nice things are furry.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is kind.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nFurry($x, bool) ::: Is x furry?\nKind($x, bool) ::: Is x kind?\nNice($x, bool) ::: Is x nice?\nQuiet($x, bool) ::: Is x quiet?\nSmart($x, bool) ::: Is x smart?\nYoung($x, bool) ::: Is x young?\nFacts:\nCold(Bob, True) ::: Bob is cold.\nFurry(Bob, True) ::: Bob is furry.\nFurry(Erin, True) ::: Erin is furry.\nKind(Erin, True) ::: Erin is kind.\nNice(Erin, True) ::: Erin is nice.\nYoung(Erin, True) ::: Erin is young.\nNice(Gary, True) ::: Gary is nice.\nYoung(Gary, True) ::: Gary is young.\nFurry(Harry, True) ::: Harry is furry.\nNice(Harry, True) ::: Harry is nice.\nQuiet(Harry, True) ::: Harry is quiet.\nSmart(Harry, True) ::: Harry is smart.\nRules:\nKind($x, True) && Smart($x, True) >>> Nice($x, True) ::: If something is kind and smart then it is nice.\nYoung($x, True) >>> Kind($x, True) ::: If Bob is young then Bob is kind.\nNice($x, True) && Young($x, True) >>> Quiet($x, True) ::: If something is nice and young then it is quiet.\nYoung($x, True) && Kind($x, True) >>> Quiet($x, True) ::: Young, kind things are"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-81_Q10",
    "context": "Anne is quiet. Anne is smart. Bob is green. Bob is kind. Bob is nice. Bob is smart. Erin is round. Erin is not smart. Gary is not green. Gary is kind. Gary is round. If someone is nice and young then they are kind. If Gary is smart and Gary is nice then Gary is quiet. If someone is young then they are round. If Anne is round then Anne is nice. If someone is quiet then they are young. If Gary is young then Gary is not nice. If someone is kind and smart then they are green.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Anne is not kind.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nQuiet($x, bool) ::: Is x quiet?\nSmart($x, bool) ::: Is x smart?\nGreen($x, bool) ::: Is x green?\nKind($x, bool) ::: Is x kind?\nNice($x, bool) ::: Is x nice?\nRound($x, bool) ::: Is x round?\nYoung($x, bool) ::: Is x young?\nFacts:\nQuite(Anne, True) ::: Anne is quiet.\nSmart(Anne, True) ::: Anne is smart.\nGreen(Bob, True) ::: Bob is green.\nKind(Bob, True) ::: Bob is kind.\nNice(Bob, True) ::: Bob is nice.\nSmart(Bob, True) ::: Bob is smart.\nRound(Erin, True) ::: Erin is round.\nNotSmart(Erin, True) ::: Erin is not smart.\nNotGreen(Gary, True) ::: Gary is not green.\nKind(Gary, True) ::: Gary is kind.\nRound(Gary, True) ::: Gary is round.\nRules:\nYoung($x, True) >>> Round($x, True) ::: If someone is young then they are round.\nQuite(Anne, True) >>> Young($x, True) ::: If Anne is round then Anne is nice.\nYoung($x, True) >>> Nice($x, True) ::: If someone is young then they are nice.\nNice($x, True) && Young($x, True) >>> Kind($x, True) ::: If someone is nice and young then they are kind.\nGreen($x, True) >>> Kind($x, True) ::: If someone is kind and smart then they are green.\nNotGreen($x, True) >>> NotNice($"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-64_Q5",
    "context": "Anne is quiet. Anne is smart. Anne is white. Anne is not young. Bob is young. Erin is not young. Fiona is big. Fiona is quiet. Fiona is red. Fiona is smart. White people are quiet. If someone is young then they are big. Young, smart people are round. Smart, quiet people are round. All quiet, big people are red. If Anne is big and Anne is young then Anne is round. Big people are smart. All smart people are white.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is smart.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nQuiet($x, bool) ::: Is x quiet?\nSmart($x, bool) ::: Is x smart?\nWhite($x, bool) ::: Is x white?\nYoung($x, bool) ::: Is x young?\nBig($x, bool) ::: Is x big?\nRound($x, bool) ::: Is x round?\nFacts:\nQuite(Anne, True) ::: Anne is quiet.\nSmart(Anne, True) ::: Anne is smart.\nWhite(Anne, True) ::: Anne is white.\nNot(Young(Anne, True)) ::: Anne is not young.\nYoung(Bob, True) ::: Bob is young.\nNot(Young(Erin, True)) ::: Erin is not young.\nBig(Fiona, True) ::: Fiona is big.\nQuite(Fiona, True) ::: Fiona is quiet.\nRed(Fiona, True) ::: Fiona is red.\nSmart(Fiona, True) ::: Fiona is smart.\nRules:\nWhite($x, True) >>> Quite($x, True) ::: White people are quiet.\nYoung($x, True) >>> Big($x, True) ::: Young, smart people are round.\nSmart($x, True) && Quite($x, True) >>> Round($x, True) ::: Smart, quiet people are round.\nQuite($x, True) && Big($x, True) >>> Red($x, True) ::: All quiet, big people are red.\nYoung($x, True) && Big($x, True) >>> Round($x, True) ::: Young, smart people are round.\nYoung($x, True) && Big($x, True) && Smart($x, True) >>> Round($x, True) ::: Young, smart"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-1185_Q14",
    "context": "Anne is not nice. Anne is red. Anne is white. Anne is young. Bob is red. Erin is green. Erin is nice. Harry is kind. Harry is nice. Harry is rough. All kind, red things are green. If something is rough and young then it is green. Green, young things are white. Rough, kind things are white. If something is kind then it is rough. All young things are not nice. If something is red then it is kind. If Bob is white then Bob is young.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Erin is white.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNice($x, bool) ::: Is x nice?\nRed($x, bool) ::: Is x red?\nWhite($x, bool) ::: Is x white?\nYoung($x, bool) ::: Is x young?\nKind($x, bool) ::: Is x kind?\nRules:\nNice(Anne, False) ::: Anne is not nice.\nRed(Anne, True) ::: Anne is red.\nWhite(Anne, True) ::: Anne is white.\nYoung(Anne, True) ::: Anne is young.\nRed(Bob, True) ::: Bob is red.\nGreen(Erin, True) ::: Erin is green.\nNice(Erin, True) ::: Erin is nice.\nKind(Harry, True) ::: Harry is kind.\nNice(Harry, True) ::: Harry is nice.\nRough(Harry, True) ::: Harry is rough.\nAll(Kind($x, True), Red($x, True)) >>> Green($x, True) ::: All kind, red things are green.\nYoung($x, True) && Rough($x, True) >>> Green($x, True) ::: If something is rough and young then it is green.\nGreen($x, True) && Young($x, True) >>> White($x, True) ::: Green, young things are white.\nRough($x, True) && Kind($x, True) >>> White($x, True) ::: Rough, kind things are white.\nKind($x, True) >>> Rough($x, True) ::: If something is kind then it is rough.\nYoung($x, True) >>> Not(Nice($x, True)) ::: All young things are not nice.\nRed($x, True) >>> Kind($x, True) ::: If something is red"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-587_Q4",
    "context": "Charlie is not furry. Charlie is smart. Charlie is young. Dave is young. Fiona is not blue. Harry is red. Harry is not rough. Rough, smart things are red. Rough things are smart. Green, red things are smart. If something is red then it is green. All smart, red things are green. Red, blue things are green. If something is young then it is blue. Furry things are young. Smart, green things are furry.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Dave is not blue.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nFurry($x, bool) ::: Is x furry?\nSmart($x, bool) ::: Is x smart?\nYoung($x, bool) ::: Is x young?\nBlue($x, bool) ::: Is x blue?\nRough($x, bool) ::: Is x rough?\nRed($x, bool) ::: Is x red?\nGreen($x, bool) ::: Is x green?\nFacts:\nNotFurry(Charlie, True) ::: Charlie is not furry.\nSmart(Charlie, True) ::: Charlie is smart.\nYoung(Charlie, True) ::: Charlie is young.\nYoung(Dave, True) ::: Dave is young.\nNotBlue(Fiona, True) ::: Fiona is not blue.\nRed(Harry, True) ::: Harry is red.\nNotRough(Harry, True) ::: Harry is not rough.\nRules:\nRough($x, True) && Smart($x, True) >>> Red($x, True) ::: Rough, smart things are red.\nRough($x, True) >>> Smart($x, True) ::: Rough things are smart.\nGreen($x, True) && Red($x, True) >>> Smart($x, True) ::: Green, red things are smart.\nRed($x, True) >>> Green($x, True) ::: If something is red then it is green.\nAll($x, True) >>> Smart($x, True) ::: All smart, red things are green.\nRed($x, True) && Blue($x, True) >>> Green($x, True) ::: Red, blue things are green.\nYoung($x, True) >>> Blue($x, True) ::: If something is young then it is blue.\nFurry($x, True) >>> Young($x, True) ::: Furry things are young.\nSmart($x, True) && Green($x, True) >>> Furry($x, True) ::: Smart, green things are furry.\nQuery:\nNotBlue(Dave, True) ::: Dave is not blue.\n------"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-334_Q6",
    "context": "Anne is big. Dave is big. Dave is blue. Dave is green. Dave is round. Dave is smart. Gary is round. Gary is smart. Harry is big. Harry is cold. Harry is green. Harry is red. All red, cold people are green. Cold people are blue. All big, cold people are smart. Smart people are big. All big people are green. All big people are smart. If someone is blue then they are red. If Gary is green and Gary is smart then Gary is cold. Cold, red people are big.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is not green.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nBlue($x, bool) ::: Is x blue?\nGreen($x, bool) ::: Is x green?\nRound($x, bool) ::: Is x round?\nSmart($x, bool) ::: Is x smart?\nCold($x, bool) ::: Is x cold?\nFacts:\nBig(Anne, True) ::: Anne is big.\nBig(Dave, True) ::: Dave is big.\nBlue(Dave, True) ::: Dave is blue.\nGreen(Dave, True) ::: Dave is green.\nRound(Dave, True) ::: Dave is round.\nSmart(Dave, True) ::: Dave is smart.\nRound(Gary, True) ::: Gary is round.\nSmart(Gary, True) ::: Gary is smart.\nBig(Harry, True) ::: Harry is big.\nCold(Harry, True) ::: Harry is cold.\nGreen(Harry, True) ::: Harry is green.\nRed(Harry, True) ::: Harry is red.\nRules:\nAll red, cold people are green ::: All red, cold people are green.\nCold people are blue ::: Cold people are blue.\nAll big, cold people are smart ::: All big, cold people are smart.\nSmart people are big ::: Smart people are big.\nAll big people are green ::: All big people are green.\nAll big people are smart ::: All big people are smart.\nIf someone is blue then they are red ::: If someone is blue then they are red.\nIf Gary is green and Gary is smart then Gary is cold ::: If Gary is green and Gary is smart then Gary is cold.\nCold, red people are big ::: Cold, red people are big.\nQuery:\nNot(Green(Gary, True)) ::: Gary is not green.\n------\nProblem:\nAnne is big. Anne is blue. Anne is cold. Anne is green. Anne is round. Anne is smart. Dave is big. Dave is blue. Dave is cold. Dave is green. Dave is round. Dave is"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-996_Q24",
    "context": "The cat chases the mouse. The cat is not blue. The cat is not cold. The cat is rough. The cow does not chase the cat. The cow eats the mouse. The cow is cold. The cow is young. The lion eats the mouse. The mouse visits the cow. If someone eats the cow and the cow is cold then they visit the cow. If someone eats the cow and the cow is round then they chase the lion. If someone visits the cow then they are round. If someone is blue then they eat the cow. If someone chases the mouse and the mouse is not rough then they do not eat the mouse. If someone eats the mouse then they are blue. If the cow is not round then the cow does not eat the cat.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cat visits the mouse.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nBlue($x, bool) ::: Is x blue?\nCold($x, bool) ::: Is x cold?\nRough($x, bool) ::: Is x rough?\nEats($x, $y, bool) ::: Does x eat y?\nVisits($x, $y, bool) ::: Does x visit y?\nRound($x, bool) ::: Is x round?\nFacts:\nChases(Cat, Mouse, True) ::: The cat chases the mouse.\nBlue(Cat, False) ::: The cat is not blue.\nCold(Cat, False) ::: The cat is not cold.\nRough(Cat, True) ::: The cat is rough.\nChases(Cow, Cat, False) ::: The cow does not chase the cat.\nEats(Cow, Mouse, True) ::: The cow eats the mouse.\nCold(Cow, True) ::: The cow is cold.\nYoung(Cow, True) ::: The cow is young.\nEats(Lion, Mouse, True) ::: The lion eats the mouse.\nVisits(Mouse, Cow, True) ::: The mouse visits the cow.\nRules:\nChases($x, $y, True) >>> Eats($x, $y, True) ::: If someone eats the cow and the cow is cold then they visit the cow.\nChases($x, $y, True) >>> Eats($x, $y, True) ::: If someone eats the cow and the cow is round then they chase the lion.\nVisits($x, $y, True) >>> Round($x, True) ::: If someone visits the cow then they are round.\nBlue($x, True) >>> Eats($x, Cow, True) ::: If someone is blue then they eat the cow.\nChases($x, $y, True) >>> Not(Eats($x, $y, True)) ::: If someone chases the mouse and the mouse is not rough then they do not eat the mouse.\nEats($x, $y,"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-651_Q15",
    "context": "The bear eats the dog. The bear eats the rabbit. The bear is round. The bear needs the rabbit. The bear needs the tiger. The bear sees the rabbit. The dog eats the bear. The rabbit eats the tiger. The rabbit is round. The tiger eats the bear. The tiger is cold. The tiger is young. If something eats the tiger then the tiger needs the dog. If the bear sees the dog and the dog eats the tiger then the dog eats the bear. If something eats the bear then it sees the tiger. If the tiger sees the rabbit then the rabbit eats the bear. If something eats the bear and the bear sees the rabbit then it sees the dog. If something sees the dog then it sees the rabbit.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The rabbit does not eat the dog.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y, bool) ::: Does x eat y?\nNeeds($x, $y, bool) ::: Does x need y?\nSees($x, $y, bool) ::: Does x see y?\nRound($x, bool) ::: Is x round?\nYoung($x, bool) ::: Is x young?\nCold($x, bool) ::: Is x cold?\nFacts:\nEats(Bear, Dog, True) ::: The bear eats the dog.\nEats(Bear, Rabbit, True) ::: The bear eats the rabbit.\nRound(Bear, True) ::: The bear is round.\nNeeds(Bear, Rabbit, True) ::: The bear needs the rabbit.\nNeeds(Bear, Tiger, True) ::: The bear needs the tiger.\nSees(Bear, Rabbit, True) ::: The bear sees the rabbit.\nEats(Dog, Bear, True) ::: The dog eats the bear.\nEats(Rabbit, Tiger, True) ::: The rabbit eats the tiger.\nRound(Rabbit, True) ::: The rabbit is round.\nEats(Tiger, Bear, True) ::: The tiger eats the bear.\nCold(Tiger, True) ::: The tiger is cold.\nYoung(Tiger, True) ::: The tiger is young.\nRules:\nEats($x, $y, True) >>> Needs($x, $y, True) ::: If something eats the tiger then the tiger needs the dog.\nEats($x, $y, True) && Sees($x, $y, True) >>> Eats($x, $z, True) ::: If the bear sees the dog and the dog eats the tiger then the dog eats the bear.\nEats($x, $y, True) >>> Sees($x, $z, True) ::: If something eats the bear then it sees the tiger.\nSees($x, $y, True) && Eats($y"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-1116_Q5",
    "context": "Bob is cold. Bob is rough. Bob is smart. Dave is kind. Dave is white. Erin is big. Gary is big. Blue, cold people are rough. Kind people are cold. Smart people are kind. If someone is cold and kind then they are blue. Rough people are white. If someone is big then they are smart.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is blue.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nRough($x, bool) ::: Is x rough?\nSmart($x, bool) ::: Is x smart?\nKind($x, bool) ::: Is x kind?\nBlue($x, bool) ::: Is x blue?\nBig($x, bool) ::: Is x big?\nFacts:\nCold(Bob, True) ::: Bob is cold.\nRough(Bob, True) ::: Bob is rough.\nSmart(Bob, True) ::: Bob is smart.\nKind(Dave, True) ::: Dave is kind.\nWhite(Dave, True) ::: Dave is white.\nBig(Erin, True) ::: Erin is big.\nBig(Gary, True) ::: Gary is big.\nRules:\nBlue($x, True) >>> Cold($x, True) ::: Blue, cold people are rough.\nKind($x, True) >>> Cold($x, True) ::: Kind people are cold.\nSmart($x, True) >>> Kind($x, True) ::: Smart people are kind.\nCold($x, True) && Kind($x, True) >>> Blue($x, True) ::: If someone is cold and kind then they are blue.\nRough($x, True) >>> White($x, True) ::: Rough people are white.\nBig($x, True) >>> Smart($x, True) ::: If someone is big then they are smart.\nQuery:\nBlue(Bob, True) ::: Bob is blue.\n------\nProblem:\nBob is cold. Bob is rough. Bob is smart. Dave is kind. Dave is white. Erin is big. Gary is big. Blue, cold people are rough. Kind people are cold. Smart people are kind. If someone is cold and kind then they are blue. Rough people are white. If someone is big then they are smart.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Erin is blue.\n###\nPredicates:\nCold($x, bool) ::: Is x cold?\nRough($x"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-1227_Q20",
    "context": "Anne is cold. Anne is round. Bob is blue. Bob is round. Charlie is blue. Charlie is nice. Gary is cold. If something is big and green then it is not round. Blue, nice things are round. If Bob is furry then Bob is green. All cold, blue things are furry. Nice things are big. All round, cold things are not green. Green, cold things are not nice. If something is cold then it is nice. Big things are blue.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Charlie is green.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nRound($x, bool) ::: Is x round?\nBlue($x, bool) ::: Is x blue?\nNice($x, bool) ::: Is x nice?\nBig($x, bool) ::: Is x big?\nFurry($x, bool) ::: Is x furry?\nFacts:\nCold(Anne, True) ::: Anne is cold.\nRound(Anne, True) ::: Anne is round.\nBlue(Bob, True) ::: Bob is blue.\nRound(Bob, True) ::: Bob is round.\nBlue(Charlie, True) ::: Charlie is blue.\nNice(Charlie, True) ::: Charlie is nice.\nCold(Gary, True) ::: Gary is cold.\nRules:\nBig($x, True) >>> Blue($x, True) ::: Big things are blue.\nBlue($x, True) >>> Nice($x, True) ::: Blue, nice things are round.\nFurry(Bob, True) >>> Blue($x, True) ::: If Bob is furry then Bob is green.\nCold($x, True) >>> Furry($x, True) ::: All cold, blue things are furry.\nNice($x, True) >>> Big($x, True) ::: Nice things are big.\nRound($x, True) >>> Cold($x, True) ::: All round, cold things are not green.\nGreen($x, True) >>> Cold($x, True) ::: Green, cold things are not nice.\nCold($x, True) >>> Nice($x, True) ::: If something is cold then it is nice.\nBig($x, True) >>> Blue($x, True) ::: Big things are blue.\nQuery:\nGreen(Charlie, True) ::: Charlie is green.\n------\nProblem:\nAnne is cold. Anne is round. Bob is blue. Bob is round. Charlie is blue. Charlie is nice. Gary is cold. If something is big and green then it is not round. Blue, nice things are round. If Bob is"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-976_Q6",
    "context": "Charlie is not quiet. Erin is big. Erin is white. Erin is young. Gary is young. Harry is furry. Harry is nice. White, furry people are big. All nice people are big. If someone is quiet and furry then they are white. If someone is young then they are quiet. All big, furry people are round. If someone is quiet then they are furry. If Erin is round then Erin is quiet.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Harry is not round.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nQuiet($x, bool) ::: Is x quiet?\nBig($x, bool) ::: Is x big?\nWhite($x, bool) ::: Is x white?\nYoung($x, bool) ::: Is x young?\nNice($x, bool) ::: Is x nice?\nFurry($x, bool) ::: Is x furry?\nRound($x, bool) ::: Is x round?\nFacts:\nQuite(Charlie, False) ::: Charlie is not quiet.\nBig(Erin, True) ::: Erin is big.\nWhite(Erin, True) ::: Erin is white.\nYoung(Erin, True) ::: Erin is young.\nYoung(Gary, True) ::: Gary is young.\nFurry(Harry, True) ::: Harry is furry.\nNice(Harry, True) ::: Harry is nice.\nRules:\nWhite($x, True) >>> Furry($x, True) ::: White, furry people are big.\nNice($x, True) >>> Big($x, True) ::: All nice people are big.\nFurry($x, True) && Quite($x, True) >>> White($x, True) ::: If someone is quiet and furry then they are white.\nYoung($x, True) >>> Quite($x, True) ::: If someone is young then they are quiet.\nBig($x, True) >>> Furry($x, True) ::: All big, furry people are round.\nQuite($x, True) >>> Furry($x, True) ::: If someone is quiet then they are furry.\nYoung($x, True) >>> Erin($x, True) ::: If Erin is round then Erin is quiet.\nQuery:\nRound(Harry, False) ::: Harry is not round.\n------\nProblem:\nCharlie is not quiet. Erin is big. Erin is white. Erin is young. Gary is young. Harry is furry. Harry is nice. White, furry people are big. All nice people are big. If someone is"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-897_Q20",
    "context": "The bald eagle chases the tiger. The bald eagle is big. The bald eagle is green. The cow is big. The cow is young. The cow likes the tiger. The rabbit is round. The rabbit needs the cow. The rabbit needs the tiger. The tiger likes the cow. If someone likes the tiger and the tiger is green then they chase the rabbit. If someone is green then they chase the cow. If someone chases the rabbit and they like the tiger then the tiger needs the cow. If someone is big and they chase the bald eagle then the bald eagle needs the tiger. If someone is green and they chase the cow then they need the cow. If someone is big and they need the cow then the cow is green.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The tiger needs the tiger.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y) ::: Does x chase y?\nBig($x, bool) ::: Is x big?\nGreen($x, bool) ::: Is x green?\nYoung($x, bool) ::: Is x young?\nLikes($x, $y) ::: Does x like y?\nNeeds($x, $y) ::: Does x need y?\nFacts:\nChases(BaldEagle, Tiger) ::: The bald eagle chases the tiger.\nBig(BaldEagle, True) ::: The bald eagle is big.\nGreen(BaldEagle, True) ::: The bald eagle is green.\nBig(Cow, True) ::: The cow is big.\nYoung(Cow, True) ::: The cow is young.\nLikes(Cow, Tiger) ::: The cow likes the tiger.\nRound(Rabbit, True) ::: The rabbit is round.\nNeeds(Rabbit, Cow) ::: The rabbit needs the cow.\nNeeds(Rabbit, Tiger) ::: The rabbit needs the tiger.\nLikes(Tiger, Cow) ::: The tiger likes the cow.\nRules:\nChases($x, $y) >>> Needs($x, $y) ::: If someone likes the tiger and the tiger is green then they chase the rabbit.\nChases($x, $y) >>> Needs($y, $x) ::: If someone chases the rabbit and they like the tiger then the tiger needs the cow.\nChases($x, $y) >>> Needs($y, $x) ::: If someone chases the rabbit and they like the tiger then the tiger needs the cow.\nChases($x, $y) >>> Needs($x, $y) ::: If someone chases the rabbit and they like the tiger then the tiger needs the cow.\nChases($x, $y) >>> Needs($x, $y) ::: If someone chases the rabbit and they like the tiger then the tiger needs the cow.\nCh"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-799_Q9",
    "context": "Bob is rough. Erin is furry. Erin is green. Erin is rough. Erin is round. Erin is young. Gary is blue. Gary is green. Harry is big. Harry is not furry. Harry is not rough. All furry, rough things are big. Round things are big. If something is green and furry then it is blue. All rough, big things are young. All young things are green. If something is rough then it is furry.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is green.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRough($x, bool) ::: Is x rough?\nFurry($x, bool) ::: Is x furry?\nGreen($x, bool) ::: Is x green?\nBlue($x, bool) ::: Is x blue?\nBig($x, bool) ::: Is x big?\nRound($x, bool) ::: Is x round?\nYoung($x, bool) ::: Is x young?\nFacts:\nRough(Erin, True) ::: Erin is rough.\nFurry(Erin, True) ::: Erin is furry.\nGreen(Erin, True) ::: Erin is green.\nRough(Erin, True) ::: Erin is rough.\nRound(Erin, True) ::: Erin is round.\nYoung(Erin, True) ::: Erin is young.\nBlue(Gary, True) ::: Gary is blue.\nGreen(Gary, True) ::: Gary is green.\nBig(Harry, True) ::: Harry is big.\nNot(Furry(Harry, True)) ::: Harry is not furry.\nNot(Rough(Harry, True)) ::: Harry is not rough.\nRules:\nFurry($x, True) && Rough($x, True) >>> Big($x, True) ::: All furry, rough things are big.\nRound($x, True) >>> Big($x, True) ::: Round things are big.\nGreen($x, True) && Furry($x, True) >>> Blue($x, True) ::: If something is green and furry then it is blue.\nRough($x, True) && Big($x, True) >>> Young($x, True) ::: All rough, big things are young.\nYoung($x, True) >>> Green($x, True) ::: All young things are green.\nRough($x, True) >>> Furry($x, True) ::: If something is rough then it is furry.\nQuery:\nGreen(Bob, True) ::: Bob is green.\n------\nProblem:\nBob is furry. Bob is green"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-538_Q12",
    "context": "Charlie is cold. Charlie is red. Dave is not big. Erin is green. Erin is red. Fiona is green. Fiona is kind. If Erin is big then Erin is green. Blue, kind people are big. All kind people are green. All cold people are not quiet. All kind people are red. If someone is big and kind then they are cold. Red people are blue.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Fiona is quiet.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nRed($x, bool) ::: Is x red?\nBig($x, bool) ::: Is x big?\nKind($x, bool) ::: Is x kind?\nQuiet($x, bool) ::: Is x quiet?\nBlue($x, bool) ::: Is x blue?\nFacts:\nCold(Charlie, True) ::: Charlie is cold.\nRed(Charlie, True) ::: Charlie is red.\nNot(Big(Dave, True)) ::: Dave is not big.\nGreen(Erin, True) ::: Erin is green.\nRed(Erin, True) ::: Erin is red.\nGreen(Fiona, True) ::: Fiona is green.\nKind(Fiona, True) ::: Fiona is kind.\nRules:\nIf Erin is big then Erin is green ::: Erin is big.\nBlue($x, True) >>> Kind($x, True) ::: Blue, kind people are big.\nAll kind people are green ::: Kind($x, True) >>> Green($x, True)\nAll cold people are not quiet ::: Cold($x, True) >>> Not(Quiet($x, True))\nAll kind people are red ::: Kind($x, True) >>> Red($x, True)\nIf someone is big and kind then they are cold ::: Big($x, True) && Kind($x, True) >>> Cold($x, True)\nRed($x, True) >>> Blue($x, True) ::: Red people are blue.\nQuery:\nQuiet(Fiona, True) ::: Fiona is quiet.\n------\nProblem:\nCharlie is cold. Charlie is red. Dave is not big. Erin is green. Erin is red. Fiona is green. Fiona is kind. If Erin is big then Erin is green. Blue, kind people are big. All kind people are green. All cold people are not quiet. All kind people are red. If someone is big and kind then they are cold. Red people are blue.\nQuestion:\nBased on the above information, is the following statement true,"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-368_Q21",
    "context": "The bald eagle eats the cat. The bald eagle eats the dog. The bald eagle is not green. The bald eagle is not kind. The bald eagle does not like the dog. The bald eagle sees the cat. The bald eagle does not see the dog. The cat is blue. The cat is round. The dog eats the bald eagle. The dog eats the cat. The dog is round. The dog likes the cat. The lion eats the bald eagle. The lion eats the cat. The lion does not see the cat. If the dog sees the cat then the dog likes the bald eagle. If something is round then it likes the lion. If the cat likes the bald eagle and the lion does not see the cat then the lion is kind. If something is kind then it is round. If something likes the lion then it likes the bald eagle. If something eats the lion then it likes the bald eagle.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The dog does not see the bald eagle.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y) ::: Does x eat y?\nLikes($x, $y) ::: Does x like y?\nSees($x, $y) ::: Does x see y?\nKind($x, bool) ::: Is x kind?\nRound($x, bool) ::: Is x round?\nGreen($x, bool) ::: Is x green?\nFacts:\nEats(Bald Eagle, Cat) ::: The bald eagle eats the cat.\nEats(Bald Eagle, Dog) ::: The bald eagle eats the dog.\nNot(Green(Bald Eagle, True)) ::: The bald eagle is not green.\nNot(Kind(Bald Eagle, True)) ::: The bald eagle is not kind.\nNot(Likes(Bald Eagle, Dog)) ::: The bald eagle does not like the dog.\nSees(Bald Eagle, Cat) ::: The bald eagle sees the cat.\nNot(Sees(Bald Eagle, Dog)) ::: The bald eagle does not see the dog.\nBlue(Cat, True) ::: The cat is blue.\nRound(Cat, True) ::: The cat is round.\nEats(Dog, Bald Eagle) ::: The dog eats the bald eagle.\nEats(Dog, Cat) ::: The dog eats the cat.\nRound(Dog, True) ::: The dog is round.\nLikes(Dog, Cat) ::: The dog likes the cat.\nEats(Lion, Bald Eagle) ::: The lion eats the bald eagle.\nEats(Lion, Cat) ::: The lion eats the cat.\nNot(Sees(Lion, Cat)) ::: The lion does not see the cat.\nRules:\nIf the dog sees the cat then the dog likes the bald eagle ::: If the dog sees the cat then the dog likes the bald eagle.\nIf something is round then it likes the lion ::: If something is round then it likes the lion.\nIf the cat likes the bald eagle and the lion does not see the cat then the lion is kind ::: If the cat likes the bald eagle and the lion does not see the cat then the lion is kind.\nIf something is kind then it is round ::: If something is kind then it is round.\nIf something likes the lion then it likes the bald eagle ::: If something likes the lion then it likes the bald eagle.\nIf something eats the lion then it likes the bald eagle ::: If something eats the lion then it likes the bald eagle.\nQuery:\nNot(Sees(Dog, Bald Eagle)) ::: The dog does not see the bald eagle.\n------"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-566_Q2",
    "context": "Anne is not kind. Anne is smart. Anne is white. Bob is green. Bob is nice. Fiona is nice. Gary is red. If someone is red and nice then they are rough. If Fiona is red and Fiona is rough then Fiona is kind. Red people are nice. Rough people are nice. If Gary is red and Gary is smart then Gary is white. Kind people are smart. If someone is green and not nice then they are smart. Rough people are kind. If someone is nice and white then they are kind.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is not green.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nKind($x, bool) ::: Is x kind?\nSmart($x, bool) ::: Is x smart?\nWhite($x, bool) ::: Is x white?\nGreen($x, bool) ::: Is x green?\nNice($x, bool) ::: Is x nice?\nRough($x, bool) ::: Is x rough?\nFacts:\nNotKind(Anne, True) ::: Anne is not kind.\nSmart(Anne, True) ::: Anne is smart.\nWhite(Anne, True) ::: Anne is white.\nGreen(Bob, True) ::: Bob is green.\nNice(Bob, True) ::: Bob is nice.\nNice(Fiona, True) ::: Fiona is nice.\nRed(Gary, True) ::: Gary is red.\nRules:\nRed($x, True) && Nice($x, True) >>> Rough($x, True) ::: If someone is red and nice then they are rough.\nRed($x, True) && Nice($x, True) && Red($x, True) && Rough($x, True) >>> Kind($x, True) ::: If Fiona is red and Fiona is rough then Fiona is kind.\nRed($x, True) >>> Nice($x, True) ::: Red people are nice.\nRough($x, True) >>> Nice($x, True) ::: Rough people are nice.\nRed($x, True) && Nice($x, True) && Smart($x, True) >>> White($x, True) ::: If Gary is red and Gary is smart then Gary is white.\nKind($x, True) >>> Smart($x, True) ::: Kind people are smart.\nNotNice($x, True) && Green($x, True) >>> Smart($x, True) ::: If someone is green and not nice then they are smart.\nRough($x, True) >>> Kind($x, True) ::: Rough people are kind.\nNice($x, True) && White($x, True) >>> Kind($x, True) ::: If someone is nice and white then they are kind.\nQuery:\nNotGreen(Bob, True) ::: Bob is not green.\n------\nProblem:\nAnne is not kind. Anne is smart. Anne is white. Bob is green. Bob is nice. Fiona is nice. Gary is red. If someone is red and nice then they are rough. If Fiona is red and Fiona is rough then Fiona is kind. Red people are nice. Rough people are nice. If Gary is red and Gary is smart then Gary is white. Kind people are smart. If someone is green and not nice then they are smart. Rough people are kind. If someone is nice and white then"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-644_Q5",
    "context": "Erin is big. Erin is green. Erin is quiet. Fiona is quiet. Fiona is rough. Gary is quiet. Harry is kind. Kind things are smart. All smart, rough things are green. All quiet things are green. Smart, green things are kind. All green things are rough. If something is smart then it is quiet. If something is green and not kind then it is big. If something is big and not quiet then it is round. Rough, quiet things are round.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Erin is round.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nGreen($x, bool) ::: Is x green?\nQuiet($x, bool) ::: Is x quiet?\nRound($x, bool) ::: Is x round?\nKind($x, bool) ::: Is x kind?\nSmart($x, bool) ::: Is x smart?\nRules:\nBig($x, True) >>> Not(Quiet($x, True)) ::: If something is big and not quiet then it is round.\nQuiet($x, True) >>> Green($x, True) ::: All quiet things are green.\nGreen($x, True) >>> Not(Kind($x, True)) ::: If something is green and not kind then it is big.\nGreen($x, True) >>> Rough($x, True) ::: All green things are rough.\nSmart($x, True) >>> Quiet($x, True) ::: If something is smart then it is quiet.\nSmart($x, True) >>> Rough($x, True) ::: All smart, rough things are green.\nSmart($x, True) >>> Kind($x, True) ::: Smart, green things are kind.\nQuiet($x, True) >>> Rough($x, True) ::: Rough, quiet things are round.\nFacts:\nBig(Erin, True) ::: Erin is big.\nGreen(Erin, True) ::: Erin is green.\nQuiet(Erin, True) ::: Erin is quiet.\nQuiet(Fiona, True) ::: Fiona is quiet.\nRough(Fiona, True) ::: Fiona is rough.\nQuiet(Gary, True) ::: Gary is quiet.\nKind(Harry, True) ::: Harry is kind.\nQuery:\nRound(Erin, True) ::: Erin is round.\n------\nProblem:\nErin is big. Erin is green. Erin is quiet. Fiona is quiet. Fiona is rough. Gary is quiet. Harry is kind. Kind things are smart. All smart, rough things are green. All quiet things are green. Smart, green things are kind. All green things are rough. If something is smart then it is quiet. If something is green and not kind then it is big. If something is big and not quiet then it is round. Rough, quiet things are round.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Erin is round.\n###\nPredicates:\nBig($x, bool) ::: Is x big?\nGreen($x, bool) ::: Is x green?\nQuiet($x, bool) ::: Is x quiet?\nRound($x, bool) ::: Is x round?\nKind"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-1019_Q13",
    "context": "The bear eats the squirrel. The bear is young. The bear visits the rabbit. The cow eats the rabbit. The cow visits the rabbit. The cow visits the squirrel. The rabbit needs the cow. The rabbit visits the bear. The rabbit visits the squirrel. The squirrel is big. The squirrel is cold. The squirrel visits the bear. The squirrel visits the cow. The squirrel visits the rabbit. If something is young then it needs the squirrel. If something needs the bear and the bear needs the rabbit then the bear visits the cow. If the cow is big and the cow needs the rabbit then the cow is rough. If something visits the cow then it is rough. If something is rough then it eats the cow. If something visits the cow and it is rough then it needs the bear. If the squirrel needs the bear and the squirrel eats the cow then the squirrel is cold. If something needs the bear then the bear needs the rabbit.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The rabbit does not eat the cow.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y, bool) ::: Does x eat y?\nYoung($x, bool) ::: Is x young?\nVisits($x, $y, bool) ::: Does x visit y?\nNeeds($x, $y, bool) ::: Does x need y?\nBig($x, bool) ::: Is x big?\nCold($x, bool) ::: Is x cold?\nRough($x, bool) ::: Is x rough?\nFacts:\nEats(Bear, Squirrel, True) ::: The bear eats the squirrel.\nYoung(Bear, True) ::: The bear is young.\nVisits(Bear, Rabbit, True) ::: The bear visits the rabbit.\nEats(Cow, Rabbit, True) ::: The cow eats the rabbit.\nVisits(Cow, Rabbit, True) ::: The cow visits the rabbit.\nVisits(Cow, Squirrel, True) ::: The cow visits the squirrel.\nNeeds(Rabbit, Cow, True) ::: The rabbit needs the cow.\nVisits(Rabbit, Bear, True) ::: The rabbit visits the bear.\nVisits(Rabbit, Squirrel, True) ::: The rabbit visits the squirrel.\nBig(Squirrel, True) ::: The squirrel is big.\nCold(Squirrel, True) ::: The squirrel is cold.\nVisits(Squirrel, Bear, True) ::: The squirrel visits the bear.\nVisits(Squirrel, Cow, True) ::: The squirrel visits the cow.\nVisits(Squirrel, Rabbit, True) ::: The squirrel visits the rabbit.\nRules:\nYoung($x, True) >>> Needs($x, Squirrel, True) ::: If something is young then it needs the squirrel.\nEats($x, $y, True) && Needs($x, Bear, True) && Needs(Bear, $y, True) >>> Visits($x, Cow, True) ::: If something is young and the bear needs the rabbit then the bear visits the cow.\nBig($x, True) && Needs($x, Rabbit, True) >>> Rough($x, True) ::: If the cow is big and the cow needs the rabbit then the cow is rough.\nVisits($x, Cow, True) >>> Rough($x, True) ::: If something visits the cow then it is rough.\nRough($x, True) >>> Eats($x, Cow, True) ::: If something is rough then it eats the cow.\nVisits"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-536_Q9",
    "context": "Bob is big. Bob is quiet. Bob is smart. Erin is not kind. Erin is quiet. Gary is big. Harry is kind. Furry people are big. White, kind people are quiet. Kind people are smart. If someone is quiet then they are smart. All kind people are white. If someone is white and quiet then they are blue. If someone is smart and blue then they are furry. If Erin is quiet then Erin is not kind.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Harry is furry.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nQuiet($x, bool) ::: Is x quiet?\nSmart($x, bool) ::: Is x smart?\nKind($x, bool) ::: Is x kind?\nFurry($x, bool) ::: Is x furry?\nWhite($x, bool) ::: Is x white?\nBlue($x, bool) ::: Is x blue?\nFacts:\nBig(Bob, True) ::: Bob is big.\nQuiet(Bob, True) ::: Bob is quiet.\nSmart(Bob, True) ::: Bob is smart.\nQuiet(Erin, True) ::: Erin is quiet.\nNot(Kind(Erin, True)) ::: Erin is not kind.\nBig(Gary, True) ::: Gary is big.\nKind(Harry, True) ::: Harry is kind.\nFurry($x, True) >>> Big($x, True) ::: Furry people are big.\nWhite($x, True) && Kind($x, True) >>> Quiet($x, True) ::: White, kind people are quiet.\nKind($x, True) >>> Smart($x, True) ::: Kind people are smart.\nQuiet($x, True) >>> Smart($x, True) ::: If someone is quiet then they are smart.\nAll(Kind($x, True)) >>> White($x, True) ::: All kind people are white.\nWhite($x, True) && Quiet($x, True) >>> Blue($x, True) ::: If someone is white and quiet then they are blue.\nSmart($x, True) && Blue($x, True) >>> Furry($x, True) ::: If someone is smart and blue then they are furry.\nNot(Kind(Erin, True)) >>> Quiet(Erin, True) ::: If Erin is quiet then Erin is not kind.\nQuery:\nFurry(Harry, True) ::: Harry is furry.\n------\nProblem:\nBob is big. Bob is quiet. Bob is smart. Erin is not kind. Erin is quiet. Gary is big. Harry is kind. Furry people are big. White, kind people are quiet. Kind people are smart. If someone is quiet then they are smart. All kind people are white. If someone is white and quiet then they are blue. If someone is smart and blue then they are furry. If Erin is quiet then Erin is not kind.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Harry is furry.\n###\nPredicates:\nBig($x, bool) ::: Is x big?\nQuiet($x, bool) ::: Is x quiet"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-724_Q6",
    "context": "Bob is quiet. Dave is green. Dave is not round. Fiona is green. Fiona is not quiet. Fiona is red. Harry is round. Round people are rough. All rough people are quiet. If Harry is quiet then Harry is smart. All rough, green people are red. Smart, quiet people are green. Red, quiet people are round.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Harry is not quiet.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nQuiet($x, bool) ::: Is x quiet?\nRound($x, bool) ::: Is x round?\nGreen($x, bool) ::: Is x green?\nRed($x, bool) ::: Is x red?\nRough($x, bool) ::: Is x rough?\nSmart($x, bool) ::: Is x smart?\nFacts:\nQuite(Bob, True) ::: Bob is quiet.\nGreen(Dave, True) ::: Dave is green.\nRound(Dave, False) ::: Dave is not round.\nGreen(Fiona, True) ::: Fiona is green.\nQuite(Fiona, False) ::: Fiona is not quiet.\nRed(Fiona, True) ::: Fiona is red.\nRound(Harry, True) ::: Harry is round.\nRules:\nRound($x, True) >>> Rough($x, True) ::: Round people are rough.\nRough($x, True) >>> Quite($x, True) ::: All rough people are quiet.\nQuite($x, True) >>> Smart($x, True) ::: If Harry is quiet then Harry is smart.\nRough($x, True) && Green($x, True) >>> Red($x, True) ::: All rough, green people are red.\nSmart($x, True) && Quite($x, True) >>> Green($x, True) ::: Smart, quiet people are green.\nRed($x, True) && Quite($x, True) >>> Round($x, True) ::: Red, quiet people are round.\nQuery:\nQuite(Harry, False) ::: Harry is not quiet.\n------\nProblem:\nBob is quiet. Dave is green. Dave is not round. Fiona is green. Fiona is not quiet. Fiona is red. Harry is round. Round people are rough. All rough people are quiet. If Harry is quiet then Harry is smart. All rough, green people are red. Smart, quiet people are green. Red, quiet people are round.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Harry is not round.\n###\nPredicates:\nQuiet($x, bool) ::: Is x quiet?\nRound($x, bool) ::: Is x round?\nGreen($x, bool) ::: Is x green?\nRed($x, bool) ::: Is x red?\nRough($x, bool) ::: Is x rough?\nSmart($x, bool) ::: Is x smart?\nFacts:\nQuite(Bob, True) ::: Bob is quiet.\nGreen(Dave, True) ::: Dave is green.\nRound(Dave, False) ::: Dave is not round"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-206_Q7",
    "context": "The bear is cold. The bear is red. The bear likes the cow. The bear needs the lion. The cow likes the mouse. The cow needs the lion. The cow needs the mouse. The lion is red. The lion is young. The lion needs the cow. The lion sees the bear. The lion sees the cow. The lion sees the mouse. The mouse is cold. If something needs the cow then it likes the lion. If something is young then it likes the cow. If something likes the bear then it sees the lion. If the cow likes the bear and the bear is cold then the cow is kind. If something likes the mouse and it likes the lion then the lion needs the bear. If something needs the lion and the lion likes the cow then it is cold. If something is red then it needs the cow. If something likes the cow and it sees the mouse then the cow is red. If something likes the bear then the bear sees the cow.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cow needs the cow.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nRed($x, bool) ::: Is x red?\nLikes($x, $y, bool) ::: Does x like y?\nNeeds($x, $y, bool) ::: Does x need y?\nSees($x, $y, bool) ::: Does x see y?\nKind($x, bool) ::: Is x kind?\nFacts:\nCold(Bear, True) ::: The bear is cold.\nRed(Bear, True) ::: The bear is red.\nLikes(Bear, Cow, True) ::: The bear likes the cow.\nNeeds(Bear, Lion, True) ::: The bear needs the lion.\nLikes(Cow, Mouse, True) ::: The cow likes the mouse.\nNeeds(Cow, Lion, True) ::: The cow needs the lion.\nNeeds(Cow, Mouse, True) ::: The cow needs the mouse.\nRed(Lion, True) ::: The lion is red.\nYoung(Lion, True) ::: The lion is young.\nNeeds(Lion, Cow, True) ::: The lion needs the cow.\nSees(Lion, Bear, True) ::: The lion sees the bear.\nSees(Lion, Cow, True) ::: The lion sees the cow.\nSees(Lion, Mouse, True) ::: The lion sees the mouse.\nCold(Mouse, True) ::: The mouse is cold.\nRules:\nNeeds($x, $y, True) >>> Likes($x, $y, True) ::: If something needs the cow then it likes the lion.\nYoung($x, True) >>> Likes($x, Cow, True) ::: If something is young then it likes the cow.\nLikes($x, Bear, True) >>> Sees($x, Lion, True) ::: If something likes the bear then it sees the lion.\nLikes(Cow, Bear, True) && Cold(Bear, True) >>> Cow(Kind, True) ::: If the cow likes the bear and the bear is cold then the cow is kind.\nLikes($x, Mouse, True) && Likes($x, Lion, True) >>> Needs($x, Bear, True) ::: If something likes the mouse and it likes the lion then the lion needs the bear.\nNeeds($x, Lion, True) && Likes($x, Cow, True) >>> $x(Cold, True) ::: If something needs the lion and the lion likes the cow then it is cold.\nRed($x, True) >>> Needs($x, Cow, True) ::: If something is red then it needs the cow.\nLikes($x"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-699_Q1",
    "context": "The bear eats the cow. The cow eats the bear. The cow eats the squirrel. The rabbit eats the cow. The rabbit eats the squirrel. The rabbit is rough. The squirrel eats the cow. The squirrel is cold. The squirrel needs the bear. The squirrel sees the cow. If something eats the bear and it is rough then it sees the squirrel. If something sees the bear then it is kind. If something is cold then it sees the cow. If something sees the squirrel then it sees the bear. If the squirrel sees the cow and the squirrel needs the rabbit then the cow sees the squirrel. If something needs the bear then it needs the rabbit. If something is kind then it needs the cow. If something needs the bear then it is red.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The squirrel eats the cow.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y, bool) ::: Does x eat y?\nRough($x, bool) ::: Is x rough?\nKind($x, bool) ::: Is x kind?\nCold($x, bool) ::: Is x cold?\nNeeds($x, $y, bool) ::: Does x need y?\nSees($x, $y, bool) ::: Does x see y?\nFacts:\nEats(Bear, Cow, True) ::: The bear eats the cow.\nEats(Cow, Bear, True) ::: The cow eats the bear.\nEats(Cow, Squirrel, True) ::: The cow eats the squirrel.\nEats(Rabbit, Cow, True) ::: The rabbit eats the cow.\nEats(Rabbit, Squirrel, True) ::: The rabbit eats the squirrel.\nRough(Rabbit, True) ::: The rabbit is rough.\nSees(Squirrel, Cow, True) ::: The squirrel eats the cow.\nCold(Squirrel, True) ::: The squirrel is cold.\nNeeds(Squirrel, Bear, True) ::: The squirrel needs the bear.\nSees(Squirrel, Cow, True) ::: The squirrel sees the cow.\nRules:\nEats($x, $y, True) >>> Sees($x, $y, True) ::: If something eats the bear and it is rough then it sees the squirrel.\nSees($x, $y, True) >>> Kind($x, True) ::: If something sees the bear then it is kind.\nCold($x, True) >>> Sees($x, $y, True) ::: If something is cold then it sees the cow.\nSees($x, $y, True) >>> Sees($x, $z, True) ::: If something sees the squirrel then it sees the bear.\nSees($x, $y, True) && Needs($x, $z, True) && Sees($x, $y, True) >>> Sees($y, $z, True) ::: If the squirrel sees the cow and the squirrel needs the rabbit then the cow sees the squirrel.\nNeeds($x, $y, True) >>> Needs($x, $z, True) ::: If something needs the bear then it needs the rabbit.\nKind($x, True) >>> Needs($x, $y, True) ::: If something is kind then it needs the cow.\nNeeds($x, $y, True) >>> Red($x, True) ::: If something needs the bear then"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-634_Q11",
    "context": "Anne is cold. Anne is smart. Bob is not big. Erin is kind. Erin is not smart. Gary is kind. Gary is white. If someone is big then they are nice. If someone is big then they are nice. Green, smart people are nice. All smart people are green. All nice people are big. White, cold people are not big. All cold people are smart. All nice, kind people are not white. Nice, big people are kind.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Anne is not white.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nSmart($x, bool) ::: Is x smart?\nBig($x, bool) ::: Is x big?\nKind($x, bool) ::: Is x kind?\nWhite($x, bool) ::: Is x white?\nNice($x, bool) ::: Is x nice?\nFacts:\nCold(Anne, True) ::: Anne is cold.\nSmart(Anne, True) ::: Anne is smart.\nNot(Big(Bob, True)) ::: Bob is not big.\nKind(Erin, True) ::: Erin is kind.\nNot(Smart(Erin, True)) ::: Erin is not smart.\nKind(Gary, True) ::: Gary is kind.\nWhite(Gary, True) ::: Gary is white.\nRules:\nBig($x, True) >>> Nice($x, True) ::: If someone is big then they are nice.\nBig($x, True) >>> Nice($x, True) ::: If someone is big then they are nice.\nGreen($x, True) && Smart($x, True) >>> Nice($x, True) ::: Green, smart people are nice.\nSmart($x, True) >>> Green($x, True) ::: All smart people are green.\nNice($x, True) >>> Big($x, True) ::: All nice people are big.\nWhite($x, True) && Cold($x, True) >>> Not(Big($x, True)) ::: White, cold people are not big.\nCold($x, True) >>> Smart($x, True) ::: All cold people are smart.\nNot(Nice($x, True)) && Kind($x, True) && Big($x, True) >>> White($x, True) ::: Nice, big people are kind.\nQuery:\nNot(White(Anne, True)) ::: Anne is not white.\n------\nProblem:\nAnne is cold. Anne is smart. Bob is not big. Erin is kind. Erin is not smart. Gary is kind. Gary is white. If someone is big then they are nice. If someone is big then they are nice. Green, smart people are nice. All smart people are green. All nice people are big. White, cold people are not big. All cold people are smart. All nice, kind people are not white. Nice, big people are kind.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Anne is not white.\n###\nPredicates:\nCold($x, bool) ::: Is x cold?\nSmart($x, bool) ::: Is x smart?\nBig($x, bool) ::: Is x big?\nKind($"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-418_Q11",
    "context": "The bear likes the cow. The bear likes the lion. The bear visits the cow. The bear visits the lion. The cow is round. The lion eats the bear. The lion eats the cow. The lion likes the bear. The lion visits the cow. The rabbit eats the lion. The rabbit is round. The rabbit visits the bear. If someone is kind then they visit the cow. If someone is cold then they like the rabbit. If someone likes the rabbit then the rabbit is rough. If someone is rough then they are kind. If someone likes the bear then the bear is cold. If someone likes the bear then they are round. If someone visits the cow and they are round then they eat the rabbit. If the bear is round and the bear visits the cow then the cow likes the bear. If someone is blue and they like the bear then the bear likes the lion.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The rabbit visits the cow.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nLikes($x, $y, bool) ::: Does x like y?\nVisits($x, $y, bool) ::: Does x visit y?\nEats($x, $y, bool) ::: Does x eat y?\nKind($x, bool) ::: Is x kind?\nCold($x, bool) ::: Is x cold?\nRound($x, bool) ::: Is x round?\nBlue($x, bool) ::: Is x blue?\nFacts:\nLikes(Bear, Cow, True) ::: The bear likes the cow.\nLikes(Bear, Lion, True) ::: The bear likes the lion.\nVisits(Bear, Cow, True) ::: The bear visits the cow.\nVisits(Bear, Lion, True) ::: The bear visits the lion.\nRound(Cow, True) ::: The cow is round.\nEats(Lion, Bear, True) ::: The lion eats the bear.\nEats(Lion, Cow, True) ::: The lion eats the cow.\nLikes(Lion, Bear, True) ::: The lion likes the bear.\nVisits(Lion, Cow, True) ::: The lion visits the cow.\nEats(Rabbit, Lion, True) ::: The rabbit eats the lion.\nRound(Rabbit, True) ::: The rabbit is round.\nVisits(Rabbit, Bear, True) ::: The rabbit visits the bear.\nRules:\nKind($x, True) >>> Visits($x, Cow, True) ::: If someone is kind then they visit the cow.\nCold($x, True) >>> Likes($x, Rabbit, True) ::: If someone is cold then they like the rabbit.\nLikes($x, Rabbit, True) >>> Rough($x, True) ::: If someone likes the rabbit then the rabbit is rough.\nRough($x, True) >>> Kind($x, True) ::: If someone is rough then they are kind.\nLikes($x, Bear, True) >>> Round($x, True) ::: If someone likes the bear then the bear is round.\nLikes($x, Bear, True) >>> Cold($x, True) ::: If someone likes the bear then the bear is cold.\nVisits($x, Cow, True) && Round($x, True) >>> Eats($x, Rabbit, True) ::: If the bear is round and the bear visits the cow then the cow likes the bear.\nRound($x, True) && Visits($x, Cow, True) >>> Likes($x, Bear, True) ::: If someone is round and they visit the cow then they like the bear.\nBlue($x, True"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-91_Q18",
    "context": "Bob is cold. Bob is nice. Dave is blue. Dave is nice. Dave is quiet. Fiona is rough. Fiona is young. Gary is blue. Gary is cold. Gary is nice. Gary is quiet. Gary is red. Gary is rough. Gary is young. All red people are blue. If Fiona is nice then Fiona is blue. If Fiona is blue then Fiona is red. If someone is young then they are quiet. Cold, quiet people are nice. Quiet, young people are cold. If someone is red and rough then they are blue. If someone is red then they are nice.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Dave is rough.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nNice($x, bool) ::: Is x nice?\nBlue($x, bool) ::: Is x blue?\nQuiet($x, bool) ::: Is x quiet?\nRough($x, bool) ::: Is x rough?\nYoung($x, bool) ::: Is x young?\nFacts:\nCold(Bob, True) ::: Bob is cold.\nNice(Bob, True) ::: Bob is nice.\nBlue(Dave, True) ::: Dave is blue.\nNice(Dave, True) ::: Dave is nice.\nQuiet(Dave, True) ::: Dave is quiet.\nRough(Fiona, True) ::: Fiona is rough.\nYoung(Fiona, True) ::: Fiona is young.\nBlue(Gary, True) ::: Gary is blue.\nCold(Gary, True) ::: Gary is cold.\nNice(Gary, True) ::: Gary is nice.\nQuiet(Gary, True) ::: Gary is quiet.\nRed(Gary, True) ::: Gary is red.\nRough(Gary, True) ::: Gary is rough.\nYoung(Gary, True) ::: Gary is young.\nRules:\nRed($x, True) >>> Blue($x, True) ::: All red people are blue.\nNice(Fiona, True) >>> Blue($x, True) ::: If Fiona is nice then Fiona is blue.\nBlue($x, True) >>> Red($x, True) ::: If Fiona is blue then Fiona is red.\nYoung($x, True) >>> Quiet($x, True) ::: If someone is young then they are quiet.\nCold($x, True) && Quiet($x, True) >>> Nice($x, True) ::: Cold, quiet people are nice.\nQuiet($x, True) && Young($x, True) >>> Cold($x, True) ::: Quiet, young people are cold.\nRed($x, True) && Rough($x, True) >>> Blue($x, True) ::: If someone is red and rough then they are blue.\nRed($x, True) >>> Nice($x, True) ::: If someone is red then they are nice.\nQuery:\nRough(Dave, True) ::: Dave is rough.\n------"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-677_Q23",
    "context": "The bald eagle eats the mouse. The bald eagle likes the tiger. The bald eagle sees the lion. The lion does not eat the bald eagle. The lion is rough. The mouse likes the tiger. The tiger is cold. If something is kind then it sees the mouse. If something likes the mouse then it likes the tiger. If something is round then it does not like the tiger. If something sees the bald eagle then it likes the lion. If something sees the mouse then it is cold. Rough things are kind. If something eats the bald eagle then it likes the bald eagle. All cold things are round.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The tiger does not eat the bald eagle.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y, bool) ::: Does x eat y?\nLikes($x, $y, bool) ::: Does x like y?\nSees($x, $y, bool) ::: Does x see y?\nKind($x, bool) ::: Is x kind?\nRound($x, bool) ::: Is x round?\nCold($x, bool) ::: Is x cold?\nFacts:\nEats(BaldEagle, Mouse, True) ::: The bald eagle eats the mouse.\nLikes(BaldEagle, Tiger, True) ::: The bald eagle likes the tiger.\nSees(BaldEagle, Lion, True) ::: The bald eagle sees the lion.\nNot(Eats(Lion, BaldEagle, True)) ::: The lion does not eat the bald eagle.\nRound(Lion, True) ::: The lion is rough.\nLikes(Mouse, Tiger, True) ::: The mouse likes the tiger.\nCold(Tiger, True) ::: The tiger is cold.\nIf(SomethingIsKind($x, True), Sees($x, Mouse, True)) ::: If something is kind then it sees the mouse.\nIf(Likes($x, Mouse, True), Likes($x, Tiger, True)) ::: If something likes the mouse then it likes the tiger.\nIf(SomethingIsRound($x, True), Not(Likes($x, Tiger, True))) ::: If something is round then it does not like the tiger.\nIf(Sees($x, BaldEagle, True), Likes($x, Lion, True)) ::: If something sees the bald eagle then it likes the lion.\nIf(Sees($x, Mouse, True), Cold($x, True)) ::: If something sees the mouse then it is cold.\nRules:\nKind($x, True) >>> Sees($x, Mouse, True) ::: If something is kind then it sees the mouse.\nLikes($x, Mouse, True) >>> Likes($x, Tiger, True) ::: If something likes the mouse then it likes the tiger.\nNot(Likes($x, Tiger, True)) >>> Round($x, True) ::: If something is round then it does not like the tiger.\nSees($x, BaldEagle, True) >>> Likes($x, Lion, True) ::"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-794_Q20",
    "context": "The cat is blue. The cat is nice. The cat likes the cow. The cat needs the cow. The cat needs the rabbit. The cow does not need the rabbit. The cow needs the tiger. The rabbit is round. The tiger is nice. The tiger does not like the cow. If someone likes the cat and they chase the cat then they are blue. If someone likes the cow and they are red then the cow is round. If someone needs the tiger and they need the cat then they do not chase the cow. If someone needs the cat and the cat is blue then the cat is red. If someone is round then they need the cat. If someone likes the cat and the cat needs the rabbit then the cat chases the tiger. If the rabbit needs the tiger then the rabbit is not round.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cow needs the cow.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue($x, bool) ::: Is x blue?\nNice($x, bool) ::: Is x nice?\nLike($x, $y, bool) ::: Does x like y?\nNeed($x, $y, bool) ::: Does x need y?\nChase($x, $y, bool) ::: Does x chase y?\nRound($x, bool) ::: Is x round?\nFacts:\nBlue(Cat, True) ::: The cat is blue.\nNice(Cat, True) ::: The cat is nice.\nLike(Cat, Cow, True) ::: The cat likes the cow.\nNeed(Cat, Cow, True) ::: The cat needs the cow.\nNeed(Cat, Rabbit, True) ::: The cat needs the rabbit.\nNot(Need(Cow, Rabbit, True)) ::: The cow does not need the rabbit.\nNeed(Cow, Tiger, True) ::: The cow needs the tiger.\nRound(Rabbit, True) ::: The rabbit is round.\nNice(Tiger, True) ::: The tiger is nice.\nNot(Like(Tiger, Cow, True)) ::: The tiger does not like the cow.\nRules:\nLike(Cat, $x, True) && Chase(Cat, $x, True) >>> Blue($x, True) ::: If someone likes the cat and they chase the cat then they are blue.\nLike(Cow, $x, True) && Red($x, True) >>> Round($x, True) ::: If someone likes the cow and they are red then the cow is round.\nNeed(Cat, $x, True) && Need($x, Cat, True) >>> Not(Chase(Cat, Cow, True)) ::: If someone needs the tiger and they need the cat then they do not chase the cow.\nNeed(Cat, $x, True) && Blue($x, True) >>> Red($x, True) ::: If someone needs the cat and the cat is blue then the cat is red.\nRound($x, True) >>> Need($x, Cat, True) ::: If someone is round then they need the cat.\nLike(Cat, $x, True) && Need($x, Rabbit, True) >>> Chase(Cat, Tiger, True) ::: If the rabbit needs the tiger then the rabbit is not round.\nNot(Round(Rabbit, True"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-149_Q12",
    "context": "Anne is cold. Anne is round. Bob is quiet. Bob is smart. Dave is big. Dave is blue. Dave is green. Dave is quiet. Fiona is big. Fiona is blue. Fiona is not quiet. If someone is quiet and blue then they are cold. If someone is quiet then they are big. If someone is round and quiet then they are blue. All round people are blue. If Anne is cold then Anne is blue. If someone is quiet and blue then they are round. All smart, green people are round. If someone is big then they are green.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is not cold.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nRound($x, bool) ::: Is x round?\nQuiet($x, bool) ::: Is x quiet?\nSmart($x, bool) ::: Is x smart?\nBig($x, bool) ::: Is x big?\nBlue($x, bool) ::: Is x blue?\nGreen($x, bool) ::: Is x green?\nFacts:\nCold(Anne, True) ::: Anne is cold.\nRound(Anne, True) ::: Anne is round.\nQuiet(Bob, True) ::: Bob is quiet.\nSmart(Bob, True) ::: Bob is smart.\nBig(Dave, True) ::: Dave is big.\nBlue(Dave, True) ::: Dave is blue.\nGreen(Dave, True) ::: Dave is green.\nQuiet(Dave, True) ::: Dave is quiet.\nBig(Fiona, True) ::: Fiona is big.\nBlue(Fiona, True) ::: Fiona is blue.\nNot(Quiet(Fiona, True)) ::: Fiona is not quiet.\nRules:\nQuiet($x, True) && Blue($x, True) >>> Cold($x, True) ::: If someone is quiet and blue then they are cold.\nQuiet($x, True) >>> Big($x, True) ::: If someone is quiet then they are big.\nRound($x, True) && Quiet($x, True) >>> Blue($x, True) ::: If someone is round and quiet then they are blue.\nRound($x, True) >>> Blue($x, True) ::: All round people are blue.\nCold($x, True) >>> Blue($x, True) ::: If Anne is cold then Anne is blue.\nQuiet($x, True) && Blue($x, True) >>> Round($x, True) ::: If someone is quiet and blue then they are round.\nSmart($x, True) && Green($x, True) >>> Round($x, True) ::: All smart, green people are round.\nBig($x, True) >>> Green($x, True) ::: If someone is big then they are green.\nQuery:\nNot(Cold(Bob, True)) ::: Bob is not cold.\n------\nProblem:\nAnne is cold. Anne is round. Bob is quiet. Bob is smart. Dave"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-878_Q10",
    "context": "Charlie is red. Charlie is white. Fiona is green. Gary is red. Gary is white. Harry is kind. Harry is not quiet. If Gary is quiet and Gary is red then Gary is cold. If something is quiet and not white then it is nice. If something is green and kind then it is nice. If something is kind and not red then it is green. Red, kind things are green. If something is red then it is quiet. If Charlie is nice then Charlie is cold. Cold, quiet things are kind.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is not green.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRed($x, bool) ::: Is x red?\nWhite($x, bool) ::: Is x white?\nGreen($x, bool) ::: Is x green?\nKind($x, bool) ::: Is x kind?\nQuiet($x, bool) ::: Is x quiet?\nNice($x, bool) ::: Is x nice?\nCold($x, bool) ::: Is x cold?\nFacts:\nRed(Charlie, True) ::: Charlie is red.\nWhite(Charlie, True) ::: Charlie is white.\nGreen(Fiona, True) ::: Fiona is green.\nRed(Gary, True) ::: Gary is red.\nWhite(Gary, True) ::: Gary is white.\nKind(Harry, True) ::: Harry is kind.\nQuiet(Harry, False) ::: Harry is not quiet.\nQuiet(Gary, True) && Red(Gary, True) >>> Gary is cold ::: If Gary is quiet and Gary is red then Gary is cold.\nQuiet($x, True) && Not(White($x, True)) >>> Nice($x, True) ::: If something is quiet and not white then it is nice.\nKind($x, True) && Green($x, True) >>> Nice($x, True) ::: If something is green and kind then it is nice.\nKind($x, True) && Not(Red($x, True)) >>> Green($x, True) ::: If something is kind and not red then it is green.\nRed($x, True) && Kind($x, True) >>> Green($x, True) ::: Red, kind things are green.\nRed($x, True) >>> Quiet($x, True) ::: If something is red then it is quiet.\nRed(Charlie, True) >>> Nice(Charlie, True) ::: If Charlie is nice then Charlie is cold.\nCold($x, True) && Quiet($x, True) >>> Kind($x, True) ::: Cold, quiet things are kind.\nQuery:\nNot(Green(Gary, True)) ::: Gary is not green.\n------\nProblem:\nCharlie is red. Charlie is white. Fiona is green. Gary is red. Gary is white. Harry is kind. Harry is not quiet. If Gary is quiet and Gary is red then Gary is cold. If something is quiet and not white then it is nice. If"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-800_Q14",
    "context": "Anne is nice. Dave is nice. Dave is rough. Gary is nice. Gary is not smart. Harry is big. Harry is round. All white people are round. If Dave is big then Dave is white. All cold, round people are rough. Smart, white people are cold. If Dave is round and Dave is big then Dave is smart. If someone is nice then they are big. All rough, white people are nice.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Anne is round.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNice($x, bool) ::: Is x nice?\nRough($x, bool) ::: Is x rough?\nSmart($x, bool) ::: Is x smart?\nBig($x, bool) ::: Is x big?\nRound($x, bool) ::: Is x round?\nWhite($x, bool) ::: Is x white?\nCold($x, bool) ::: Is x cold?\nFacts:\nNice(Anne, True) ::: Anne is nice.\nNice(Dave, True) ::: Dave is nice.\nRough(Dave, True) ::: Dave is rough.\nNice(Gary, True) ::: Gary is nice.\nSmart(Gary, False) ::: Gary is not smart.\nBig(Harry, True) ::: Harry is big.\nRound(Harry, True) ::: Harry is round.\nWhite(Harry, True) ::: Harry is white.\nRules:\nWhite($x, True) >>> Round($x, True) ::: All white people are round.\nBig($x, True) >>> White($x, True) ::: If Dave is big then Dave is white.\nRound($x, True) && Big($x, True) >>> Smart($x, True) ::: If Dave is round and Dave is big then Dave is smart.\nNice($x, True) >>> Big($x, True) ::: If someone is nice then they are big.\nRough($x, True) && White($x, True) >>> Nice($x, True) ::: All rough, white people are nice.\nCold($x, True) && White($x, True) && Round($x, True) >>> Rough($x, True) ::: All cold, round people are rough.\nWhite($x, True) && Smart($x, True) >>> Cold($x, True) ::: Smart, white people are cold.\nQuery:\nRound(Anne, True) ::: Anne is round.\n------\nProblem:\nAnne is nice. Dave is nice. Dave is rough. Gary is nice. Gary is not smart. Harry is big. Harry is round. All white people are round. If Dave is big then Dave is white. All cold, round people are rough. Smart, white people are cold. If Dave is round and Dave is big then Dave is smart. If someone is nice then they are big. All rough, white people are nice.\nQuestion:"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1405_Q18",
    "context": "Dave is rough. Dave is round. Erin is quiet. Erin is rough. Gary is nice. Harry is cold. Harry is green. Harry is nice. Harry is rough. Harry is round. Green people are quiet. All rough people are quiet. All cold people are nice. All green people are cold. All rough, quiet people are green. If someone is nice and quiet then they are furry.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is rough.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRough($x, bool) ::: Is x rough?\nRound($x, bool) ::: Is x round?\nQuiet($x, bool) ::: Is x quiet?\nNice($x, bool) ::: Is x nice?\nFurry($x, bool) ::: Is x furry?\nGreen($x, bool) ::: Is x green?\nCold($x, bool) ::: Is x cold?\nFacts:\nRough(Dave, True) ::: Dave is rough.\nRound(Dave, True) ::: Dave is round.\nQuiet(Erin, True) ::: Erin is quiet.\nRough(Erin, True) ::: Erin is rough.\nNice(Gary, True) ::: Gary is nice.\nCold(Harry, True) ::: Harry is cold.\nGreen(Harry, True) ::: Harry is green.\nNice(Harry, True) ::: Harry is nice.\nRough(Harry, True) ::: Harry is rough.\nRound(Harry, True) ::: Harry is round.\nRules:\nGreen($x, True) >>> Quiet($x, True) ::: Green people are quiet.\nRough($x, True) >>> Quiet($x, True) ::: All rough people are quiet.\nCold($x, True) >>> Nice($x, True) ::: All cold people are nice.\nGreen($x, True) >>> Cold($x, True) ::: All green people are cold.\nRough($x, True) && Quiet($x, True) >>> Green($x, True) ::: All rough, quiet people are green.\nNice($x, True) && Quiet($x, True) >>> Furry($x, True) ::: If someone is nice and quiet then they are furry.\nQuery:\nRough(Gary, True) ::: Gary is rough.\n------\nProblem:\nDave is furry. Dave is green. Dave is rough. Dave is white. Erin is furry. Erin is green. Erin is rough. Erin is white. Fiona is furry. Fiona is green. Fiona is rough. Fiona is white. Harry is furry. Harry is green. Harry is rough. Harry is white. Young people are furry. If someone is green then they are white. If someone is furry and green then they are rough. If someone is"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-810_Q13",
    "context": "The bear eats the mouse. The bear needs the rabbit. The bear needs the tiger. The mouse eats the bear. The mouse is green. The mouse is kind. The mouse is round. The mouse needs the tiger. The rabbit chases the tiger. The rabbit eats the mouse. The rabbit is blue. The rabbit is kind. The rabbit is round. The rabbit needs the bear. The rabbit needs the tiger. The tiger eats the mouse. If something chases the bear then it eats the rabbit. All blue things are green. If something is round and it needs the rabbit then the rabbit is green. If something is kind and it eats the bear then it eats the rabbit. If something chases the bear and it is kind then the bear is blue. If something is blue and green then it chases the bear.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The mouse does not chase the bear.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y) ::: Does x eat y?\nNeeds($x, $y) ::: Does x need y?\nChases($x, $y) ::: Does x chase y?\nIs($x, $y) ::: Is x y?\nKind($x, bool) ::: Is x kind?\nRound($x, bool) ::: Is x round?\nBlue($x, bool) ::: Is x blue?\nGreen($x, bool) ::: Is x green?\nFacts:\nEats(Bear, Mouse) ::: The bear eats the mouse.\nNeeds(Bear, Rabbit) ::: The bear needs the rabbit.\nNeeds(Bear, Tiger) ::: The bear needs the tiger.\nEats(Mouse, Bear) ::: The mouse eats the bear.\nIs(Mouse, Green) ::: The mouse is green.\nIs(Mouse, Kind) ::: The mouse is kind.\nIs(Mouse, Round) ::: The mouse is round.\nNeeds(Mouse, Tiger) ::: The mouse needs the tiger.\nChases(Rabbit, Tiger) ::: The rabbit chases the tiger.\nEats(Rabbit, Mouse) ::: The rabbit eats the mouse.\nIs(Rabbit, Blue) ::: The rabbit is blue.\nIs(Rabbit, Kind) ::: The rabbit is kind.\nIs(Rabbit, Round) ::: The rabbit is round.\nNeeds(Rabbit, Bear) ::: The rabbit needs the bear.\nNeeds(Rabbit, Tiger) ::: The rabbit needs the tiger.\nEats(Tiger, Mouse) ::: The tiger eats the mouse.\nIf($x, $y) >>> Eats($x, $y) ::: If something chases the bear then it eats the rabbit.\nAll($x, $y) >>> Is($x, $y) ::: All blue things are green.\nRound($x, True) && Needs($x, Rabbit) >>> Is($x, Green) ::: If something is round and it needs the rabbit then the rabbit is green.\nKind($x, True) && Eats($x, Bear) >>> Eats($x, Rabbit) ::: If something is kind and it eats the bear then it eats the rabbit.\nCh"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-263_Q15",
    "context": "The bear is nice. The bear likes the cat. The bear likes the tiger. The cat eats the bear. The cat is cold. The cat is kind. The cat likes the rabbit. The cat visits the rabbit. The rabbit likes the tiger. The rabbit visits the tiger. The tiger eats the bear. The tiger likes the bear. If someone is kind and they visit the cat then they are big. If someone is young then they eat the cat. If someone is cold and they like the rabbit then the rabbit likes the cat. If someone likes the tiger then the tiger visits the cat. If someone is big then they eat the tiger. If someone eats the rabbit and they are cold then they visit the rabbit. If someone likes the bear then they are kind. If someone likes the rabbit and they eat the rabbit then the rabbit visits the cat. If someone eats the tiger and the tiger visits the cat then they are young.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bear does not eat the tiger.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNice($x, bool) ::: Is x nice?\nLikes($x, $y, bool) ::: Does x like y?\nEats($x, $y, bool) ::: Does x eat y?\nVisits($x, $y, bool) ::: Does x visit y?\nKind($x, bool) ::: Is x kind?\nYoung($x, bool) ::: Is x young?\nCold($x, bool) ::: Is x cold?\nBig($x, bool) ::: Is x big?\nFacts:\nNice(Bear, True) ::: The bear is nice.\nLikes(Bear, Cat, True) ::: The bear likes the cat.\nLikes(Bear, Tiger, True) ::: The bear likes the tiger.\nEats(Cat, Bear, True) ::: The cat eats the bear.\nCold(Cat, True) ::: The cat is cold.\nKind(Cat, True) ::: The cat is kind.\nLikes(Cat, Rabbit, True) ::: The cat likes the rabbit.\nVisits(Cat, Rabbit, True) ::: The cat visits the rabbit.\nLikes(Rabbit, Tiger, True) ::: The rabbit likes the tiger.\nVisits(Rabbit, Tiger, True) ::: The rabbit visits the tiger.\nEats(Tiger, Bear, True) ::: The tiger eats the bear.\nLikes(Tiger, Bear, True) ::: The tiger likes the bear.\nRules:\nKind($x, True) && Visits($x, Cat) >>> Big($x, True) ::: If someone is kind and they visit the cat then they are big.\nYoung($x, True) >>> Eats($x, Cat) ::: If someone is young then they eat the cat.\nCold($x, True) && Likes($x, Rabbit) >>> Likes($x, Cat) ::: If someone is cold and they like the rabbit then the rabbit likes the cat.\nLikes($x, Tiger) >>> Visits($x, Cat) ::: If someone likes the tiger then the tiger visits the cat.\nBig($x, True) >>> Eats($x, Tiger) ::: If someone is big then they eat the tiger.\nEats($x, Rabbit) && Cold($x, True"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1353_Q3",
    "context": "Anne is blue. Anne is smart. Dave is big. Dave is blue. Dave is cold. Dave is furry. Dave is nice. Dave is round. Dave is smart. Fiona is blue. Fiona is furry. Gary is big. Gary is furry. Gary is smart. All blue, big things are furry. If Anne is smart then Anne is cold. All cold, smart things are big. If something is blue and round then it is nice. Round, smart things are cold. If something is round and blue then it is smart. Big, round things are nice. If Gary is round and Gary is smart then Gary is nice. If Anne is furry and Anne is big then Anne is round.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Anne is cold.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue($x, bool) ::: Is x blue?\nSmart($x, bool) ::: Is x smart?\nBig($x, bool) ::: Is x big?\nCold($x, bool) ::: Is x cold?\nFurry($x, bool) ::: Is x furry?\nNice($x, bool) ::: Is x nice?\nRound($x, bool) ::: Is x round?\nFacts:\nBlue(Anne, True) ::: Anne is blue.\nSmart(Anne, True) ::: Anne is smart.\nBig(Dave, True) ::: Dave is big.\nBlue(Dave, True) ::: Dave is blue.\nCold(Dave, True) ::: Dave is cold.\nFurry(Dave, True) ::: Dave is furry.\nNice(Dave, True) ::: Dave is nice.\nRound(Dave, True) ::: Dave is round.\nSmart(Dave, True) ::: Dave is smart.\nBlue(Fiona, True) ::: Fiona is blue.\nFurry(Fiona, True) ::: Fiona is furry.\nBig(Gary, True) ::: Gary is big.\nFurry(Gary, True) ::: Gary is furry.\nSmart(Gary, True) ::: Gary is smart.\nRules:\nBlue($x, True) && Big($x, True) >>> Furry($x, True) ::: All blue, big things are furry.\nSmart($x, True) >>> Cold($x, True) ::: If Anne is smart then Anne is cold.\nCold($x, True) >>> Big($x, True) ::: All cold, smart things are big.\nBlue($x, True) && Round($x, True) >>> Nice($x, True) ::: If something is blue and round then it is nice.\nRound($x, True) && Smart($x, True) >>> Cold($x, True) ::: Round, smart things are cold.\nRound($x, True) && Blue($x, True) >>> Smart($x, True) ::: If something is round and blue then it is smart.\nBig($x, True) && Round($x, True) >>> Nice($x, True) ::: Big, round things are nice.\nFurry($x, True) && Big($x, True) >>> Round($x"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-989_Q23",
    "context": "The bald eagle is big. The bald eagle is cold. The bald eagle needs the mouse. The bald eagle needs the rabbit. The bald eagle sees the rabbit. The cow is rough. The cow needs the bald eagle. The cow sees the bald eagle. The cow sees the mouse. The mouse eats the rabbit. The mouse is big. The mouse needs the cow. The mouse needs the rabbit. The rabbit eats the bald eagle. The rabbit eats the mouse. The rabbit is cold. All big things are green. If the rabbit eats the cow then the cow needs the rabbit. Green things are rough. If something sees the mouse then it is big. If something needs the rabbit then the rabbit is nice. If something needs the bald eagle then the bald eagle is nice. If something needs the rabbit and it is rough then the rabbit is big. If something eats the cow then it is green.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cow is not cold.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nCold($x, bool) ::: Is x cold?\nNeeds($x, $y, bool) ::: Does x need y?\nSees($x, $y, bool) ::: Does x see y?\nEats($x, $y, bool) ::: Does x eat y?\nRough($x, bool) ::: Is x rough?\nGreen($x, bool) ::: Is x green?\nNice($x, bool) ::: Is x nice?\nFacts:\nBig(BaldEagle, True) ::: The bald eagle is big.\nCold(BaldEagle, True) ::: The bald eagle is cold.\nNeeds(BaldEagle, Mouse, True) ::: The bald eagle needs the mouse.\nNeeds(BaldEagle, Rabbit, True) ::: The bald eagle needs the rabbit.\nSees(BaldEagle, Rabbit, True) ::: The bald eagle sees the rabbit.\nRough(Cow, True) ::: The cow is rough.\nNeeds(Cow, BaldEagle, True) ::: The cow needs the bald eagle.\nSees(Cow, BaldEagle, True) ::: The cow sees the bald eagle.\nSees(Cow, Mouse, True) ::: The cow sees the mouse.\nEats(Mouse, Rabbit, True) ::: The mouse eats the rabbit.\nBig(Mouse, True) ::: The mouse is big.\nNeeds(Mouse, Cow, True) ::: The mouse needs the cow.\nNeeds(Mouse, Rabbit, True) ::: The mouse needs the rabbit.\nEats(Rabbit, BaldEagle, True) ::: The rabbit eats the bald eagle.\nEats(Rabbit, Mouse, True) ::: The rabbit eats the mouse.\nCold(Rabbit, True) ::: The rabbit is cold.\nRules:\nAll($x, $y, $z, bool) >>> Green($x, True) ::: All big things are green.\nNeeds($x, $y, True) >>> Needs($y, $x, True) ::: If the rabbit eats the cow then the cow needs the rabbit.\nGreen($x, True) >>> Rough($x, True) ::: Green things are rough.\nSees($x, $y, True) >>> Big($x, True) ::: If something sees the mouse then it is big.\nNeeds($x, $y, True) >>> Nice($y, True) ::: If something needs the rabbit then the rabbit is nice.\nNeeds($x, $y, True) >>> Nice($x, True) ::: If something needs the bald eagle then the bald eagle is nice.\nNeeds($x, $y, True) && Rough($x, True) >>> Big($y, True) ::: If something needs the rabbit and it is rough then the rabbit is big.\nEats($x, $y, True) >>> Green($x, True) ::: If something eats the cow then it is green.\nQuery:\nCold(Cow, False) ::: The cow is not cold.\n------"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-88_Q7",
    "context": "Anne is quiet. Erin is green. Erin is kind. Erin is quiet. Erin is rough. Fiona is kind. Fiona is nice. Fiona is quiet. Fiona is red. Harry is nice. If someone is rough then they are green. If someone is nice then they are green. If someone is quiet and not nice then they are cold. All quiet people are rough. Kind people are quiet. If someone is green then they are kind. If someone is rough then they are red.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Anne is kind.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nQuiet($x, bool) ::: Is x quiet?\nKind($x, bool) ::: Is x kind?\nNice($x, bool) ::: Is x nice?\nGreen($x, bool) ::: Is x green?\nRed($x, bool) ::: Is x red?\nRough($x, bool) ::: Is x rough?\nCold($x, bool) ::: Is x cold?\nFacts:\nQuite(Anne, True) ::: Anne is quiet.\nGreen(Erin, True) ::: Erin is green.\nKind(Erin, True) ::: Erin is kind.\nQuite(Erin, True) ::: Erin is quiet.\nRough(Erin, True) ::: Erin is rough.\nKind(Fiona, True) ::: Fiona is kind.\nNice(Fiona, True) ::: Fiona is nice.\nQuite(Fiona, True) ::: Fiona is quiet.\nRed(Fiona, True) ::: Fiona is red.\nNice(Harry, True) ::: Harry is nice.\nRules:\nRough($x, True) >>> Green($x, True) ::: If someone is rough then they are green.\nNice($x, True) >>> Green($x, True) ::: If someone is nice then they are green.\nQuite($x, True) && Not(Nice($x, True)) >>> Cold($x, True) ::: If someone is quiet and not nice then they are cold.\nAll(Quite($x, True)) >>> Rough($x, True) ::: All quiet people are rough.\nKind($x, True) >>> Quite($x, True) ::: Kind people are quiet.\nGreen($x, True) >>> Kind($x, True) ::: If someone is green then they are kind.\nRough($x, True) >>> Red($x, True) ::: If someone is rough then they are red.\nQuery:\nKind(Anne, True) ::: Anne is kind.\n------\nProblem:\nAnne is quiet. Erin is green. Erin is kind. Erin is quiet. Erin is rough. Fiona is kind. Fiona is nice. Fiona is quiet. Fiona is red. Harry is nice. If someone is rough then they are green. If someone is nice then they are green. If someone is quiet and not nice then they are cold. All quiet people are rough. Kind people are quiet. If someone is green then they are kind. If someone is rough then they are red.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Anne is kind.\n###\nPredicates:\nQuiet($x, bool) ::: Is x quiet?\nKind($x, bool) ::: Is x kind?\nNice($x, bool) ::: Is x nice?\nGreen($x, bool) ::: Is x green?\nRed($x, bool) ::: Is x red?\nRough($x, bool) ::: Is x rough?\nCold($x, bool) ::: Is x cold?\nFacts:\nQuite(Anne, True) ::: Anne is quiet.\nGreen(Erin, True) ::: Erin is green.\nKind(Erin, True) ::"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1394_Q2",
    "context": "Charlie is quiet. Charlie is rough. Charlie is white. Erin is quiet. Erin is white. Fiona is rough. Harry is cold. If Fiona is rough then Fiona is quiet. If someone is round and young then they are quiet. If someone is red then they are round. If someone is quiet then they are red. Rough, round people are young. All quiet, cold people are young. Young, rough people are white. All red, quiet people are cold. Rough, cold people are quiet.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Charlie is not rough.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nQuiet($x, bool) ::: Is x quiet?\nRough($x, bool) ::: Is x rough?\nWhite($x, bool) ::: Is x white?\nRound($x, bool) ::: Is x round?\nCold($x, bool) ::: Is x cold?\nFacts:\nQuite(Charlie, True) ::: Charlie is quiet.\nRough(Charlie, True) ::: Charlie is rough.\nWhite(Charlie, True) ::: Charlie is white.\nQuite(Erin, True) ::: Erin is quiet.\nWhite(Erin, True) ::: Erin is white.\nRough(Fiona, True) ::: Fiona is rough.\nCold(Harry, True) ::: Harry is cold.\nRules:\nFiona(Rough($x, True) >>> Quite($x, True) ::: If Fiona is rough then Fiona is quiet.\nRound($x, True) && Young($x, True) >>> Quite($x, True) ::: If someone is round and young then they are quiet.\nRed($x, True) >>> Round($x, True) ::: If someone is red then they are round.\nQuite($x, True) >>> Red($x, True) ::: If someone is quiet then they are red.\nRough($x, True) && Round($x, True) >>> Young($x, True) ::: Rough, round people are young.\nYoung($x, True) && Rough($x, True) >>> White($x, True) ::: Young, rough people are white.\nRed($x, True) && Quite($x, True) >>> Cold($x, True) ::: All red, quiet people are cold.\nRough($x, True) && Cold($x, True) >>> Quite($x, True) ::: Rough, cold people are quiet.\nYoung($x, True) && Quite($x, True) >>> Cold($x, True) ::: All quiet, cold people are young.\nQuery:\nNot(Rough(Charlie, True)) ::: Charlie is not rough.\n------\nProblem:\nCharlie is cold. Charlie is rough. Charlie is white. Erin is cold. Erin is rough. Erin is white. Fiona is cold. Fiona is rough. Fiona is white. Harry is cold. Harry is rough. Harry is white. If someone is cold then they are rough. If someone is white then they are cold. If someone is rough then they are white. If someone is cold then they are white. If someone is rough then they are cold. If someone is white then they are rough.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Erin is not white.\n###\nPredicates:\nCold($x, bool) ::: Is x cold?\nRough($x, bool) ::: Is x rough?\nWhite($x, bool) ::: Is x white?\nFacts:\nCold(Charlie, True) ::: Charlie is cold.\nRough(Charlie, True) ::: Charlie is rough.\nWhite(Charlie, True) ::: Charlie is white.\nCold(Erin, True) ::: Erin is cold.\nRough"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-939_Q16",
    "context": "The bald eagle is blue. The bald eagle is green. The bald eagle is kind. The bear needs the bald eagle. The cow needs the bear. The tiger is nice. The tiger needs the bear. If someone likes the tiger then they visit the bald eagle. If someone is rough and they need the bald eagle then the bald eagle visits the tiger. If someone needs the bear then they are rough. If the bald eagle needs the cow and the cow likes the tiger then the tiger is kind. If someone visits the tiger then they like the tiger. If someone is nice and blue then they like the bald eagle. If the bald eagle is rough then the bald eagle likes the bear. If someone needs the bald eagle then they need the bear. If the bald eagle is rough then the bald eagle likes the tiger.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bear likes the tiger.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue($x, bool) ::: Is x blue?\nGreen($x, bool) ::: Is x green?\nKind($x, bool) ::: Is x kind?\nNice($x, bool) ::: Is x nice?\nRough($x, bool) ::: Is x rough?\nLikes($x, $y, bool) ::: Does x like y?\nNeeds($x, $y, bool) ::: Does x need y?\nVisits($x, $y, bool) ::: Does x visit y?\nFacts:\nBlue(BaldEagle, True) ::: The bald eagle is blue.\nGreen(BaldEagle, True) ::: The bald eagle is green.\nKind(BaldEagle, True) ::: The bald eagle is kind.\nNeeds(Bear, BaldEagle, True) ::: The bear needs the bald eagle.\nNeeds(Cow, Bear, True) ::: The cow needs the bear.\nNice(Tiger, True) ::: The tiger is nice.\nNeeds(Tiger, Bear, True) ::: The tiger needs the bear.\nLikes(Tiger, BaldEagle, True) ::: If someone likes the tiger then they visit the bald eagle.\nRough(BaldEagle, True) && Needs(BaldEagle, Cow) && Likes(Cow, Tiger) >>> Tiger(Kind, True) ::: If the bald eagle needs the cow and the cow likes the tiger then the tiger is kind.\nVisits(Tiger, BaldEagle, True) >>> Likes(Tiger, BaldEagle, True) ::: If someone visits the tiger then they like the tiger.\nNice(BaldEagle, True) && Blue(BaldEagle, True) >>> Likes(BaldEagle, Tiger, True) ::: If someone is nice and blue then they like the bald eagle.\nRough(BaldEagle, True) >>> Likes(BaldEagle, Bear, True) ::: If the bald eagle is rough then the bald eagle likes the bear.\nNeeds(BaldEagle, Bear) >>> Rough(BaldEagle, True) ::: If someone needs the bear then they are rough.\nRough(BaldEagle, True) && Needs(BaldEagle, Bear) && Needs(Bear, Tiger) >>> Tiger(Kind, True) ::: If the bald eagle needs the bear and the bear needs the tiger then the tiger is kind.\nQuery:\nLikes(Bear, Tiger, True) ::: The bear likes the tiger.\n------\nProblem:\nThe bear is blue. The bear is green. The bear is kind. The cow is blue. The cow is green. The cow is kind. The cow is nice. The cow is rough. The cow is white. The tiger is blue. The tiger is green. The tiger is kind. The tiger is nice. The tiger is rough. The tiger is white. The tiger is young. The tiger is furry. The tiger is quiet. The tiger is red. The tiger is rough. The tiger is white. The tiger is young. The tiger is furry"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-867_Q15",
    "context": "The bear visits the mouse. The cow is young. The cow likes the bear. The cow visits the bear. The cow visits the dog. The dog visits the cow. The mouse eats the cow. The mouse eats the dog. The mouse is big. The mouse likes the cow. The mouse visits the cow. The mouse visits the dog. If something is big and it eats the cow then the cow is young. If the mouse likes the bear and the bear is big then the mouse visits the cow. If something eats the mouse then the mouse is young. If something likes the dog then the dog likes the mouse. If something likes the mouse then it eats the cow. If something visits the dog and the dog visits the bear then it likes the mouse. If the dog eats the cow then the dog visits the mouse. If something visits the mouse then it likes the dog. If something eats the dog then it is cold.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bear is not cold.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nVisits($x, $y, bool) ::: Does x visit y?\nEats($x, $y, bool) ::: Does x eat y?\nLikes($x, $y, bool) ::: Does x like y?\nYoung($x, bool) ::: Is x young?\nBig($x, bool) ::: Is x big?\nCold($x, bool) ::: Is x cold?\nFacts:\nVisits(Bear, Mouse, True) ::: The bear visits the mouse.\nYoung(Cow, True) ::: The cow is young.\nLikes(Cow, Bear, True) ::: The cow likes the bear.\nVisits(Cow, Bear, True) ::: The cow visits the bear.\nVisits(Cow, Dog, True) ::: The cow visits the dog.\nVisits(Dog, Cow, True) ::: The dog visits the cow.\nEats(Mouse, Cow, True) ::: The mouse eats the cow.\nEats(Mouse, Dog, True) ::: The mouse eats the dog.\nBig(Mouse, True) ::: The mouse is big.\nLikes(Mouse, Cow, True) ::: The mouse likes the cow.\nVisits(Mouse, Cow, True) ::: The mouse visits the cow.\nVisits(Mouse, Dog, True) ::: The mouse visits the dog.\nRules:\nYoung($x, True) >>> Eats($x, Cow, True) ::: If something is big and it eats the cow then the cow is young.\nLikes(Mouse, Bear, True) && Big(Bear, True) >>> Visits(Mouse, Cow, True) ::: If the mouse likes the bear and the bear is big then the mouse visits the cow.\nEats($x, Mouse, True) >>> Young($x, True) ::: If something eats the mouse then the mouse is young.\nLikes($x, Dog) >>> Likes(Dog, $x) ::: If something likes the dog then the dog likes the mouse.\nLikes($x, Mouse) >>> Eats($x, Cow, True) ::: If something likes the mouse then it eats the cow.\nVisits($x, Dog) && Visits(Dog, Bear) >>> Likes($x, Mouse) ::: If something visits the dog and the dog visits the bear then it likes the mouse.\nEats(Dog, Cow) >>> Visits(Dog, Mouse) ::: If the dog eats the cow then the dog visits the mouse.\nVisits($x, Mouse) >>> Likes($x, Dog) ::: If something visits the mouse then it likes the dog.\nEats($x, Dog) >>> Cold($x, True) ::: If something eats the dog then it is cold.\n------\nProblem:\nThe bear is big. The bear is cold. The bear is furry. The bear is green. The bear is red. The bear is rough. The bear is white. The bear visits the cow. The bear visits the dog. The bear visits the mouse. The bear visits the rabbit. The bear visits the sheep. The bear visits the tiger. The bear visits the wolf. The bear visits the zebra. The bear visits the zoo. The bear visits the zoo. The bear visits the z"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-844_Q2",
    "context": "Bob is green. Bob is red. Bob is smart. Charlie is kind. Charlie is white. Erin is green. Harry is smart. If something is green then it is kind. If something is green and red then it is white. If something is red then it is white. If something is smart and green then it is white. If something is kind and green then it is smart. All young things are red. If something is young and not green then it is not red. If Erin is green and Erin is white then Erin is young.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Charlie is not kind.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen($x, bool) ::: Is x green?\nRed($x, bool) ::: Is x red?\nSmart($x, bool) ::: Is x smart?\nKind($x, bool) ::: Is x kind?\nWhite($x, bool) ::: Is x white?\nYoung($x, bool) ::: Is x young?\nFacts:\nGreen(Bob, True) ::: Bob is green.\nRed(Bob, True) ::: Bob is red.\nSmart(Bob, True) ::: Bob is smart.\nKind(Charlie, True) ::: Charlie is kind.\nWhite(Charlie, True) ::: Charlie is white.\nGreen(Erin, True) ::: Erin is green.\nSmart(Harry, True) ::: Harry is smart.\nRules:\nGreen($x, True) >>> Kind($x, True) ::: If something is green then it is kind.\nGreen($x, True) && Red($x, True) >>> White($x, True) ::: If something is green and red then it is white.\nRed($x, True) >>> White($x, True) ::: If something is red then it is white.\nGreen($x, True) && Smart($x, True) >>> White($x, True) ::: If something is smart and green then it is white.\nKind($x, True) && Green($x, True) >>> Smart($x, True) ::: If something is kind and green then it is smart.\nYoung($x, True) >>> Red($x, True) ::: All young things are red.\nYoung($x, True) && Not(Green($x, True)) >>> Not(Red($x, True)) ::: If something is young and not green then it is not red.\nGreen($x, True) && White($x, True) >>> Young($x, True) ::: If Erin is green and Erin is white then Erin is young.\nQuery:\nNot(Kind(Charlie, True)) ::: Charlie is not kind.\n------\nProblem:\nBob is green. Bob is red. Bob is smart. Charlie is kind. Charlie is white. Erin is green. Harry is smart. If something is green then it is kind. If something is green and red then it is white. If something is red then it is white. If something is smart and green then it is white. If something is kind and green then it is smart. All young things are red. If something is young and not green then it is not red. If Erin is green and Erin is white then Erin is young.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Erin is not green.\n###\nPredicates:\nGreen($x, bool) ::: Is x green?\nRed($x, bool) ::: Is x red?\nSmart($x, bool) ::: Is x smart?\nKind($x, bool) ::: Is x kind?\nWhite($x, bool) ::: Is x white?\nYoung($x, bool) ::: Is x young?\nFacts:\nGreen(Bob, True) ::: Bob is green.\nRed(Bob, True) ::: Bob is red.\nSmart(Bob, True) ::: Bob is"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-299_Q20",
    "context": "The cat is not red. The cat needs the mouse. The cat needs the tiger. The cow eats the cat. The cow is young. The mouse visits the cat. The tiger eats the cat. The tiger does not eat the cow. The tiger is red. The tiger does not visit the cat. The tiger visits the cow. The tiger visits the mouse. If the tiger visits the mouse then the mouse eats the tiger. If someone is young and they need the mouse then they eat the mouse. If someone eats the tiger then they are green. If someone is green then they are young. If someone is young then they need the mouse.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The tiger eats the tiger.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRed($x, bool) ::: Is x red?\nNeeds($x, $y, bool) ::: Does x need y?\nEats($x, $y, bool) ::: Does x eat y?\nVisits($x, $y, bool) ::: Does x visit y?\nYoung($x, bool) ::: Is x young?\nFacts:\nNotRed(Cat, True) ::: The cat is not red.\nNeeds(Cat, Mouse, True) ::: The cat needs the mouse.\nNeeds(Cat, Tiger, True) ::: The cat needs the tiger.\nEats(Cow, Cat, True) ::: The cow eats the cat.\nYoung(Cow, True) ::: The cow is young.\nVisits(Cat, Mouse, True) ::: The mouse visits the cat.\nEats(Tiger, Cat, True) ::: The tiger eats the cat.\nNotEats(Tiger, Cow, True) ::: The tiger does not eat the cow.\nRed(Tiger, True) ::: The tiger is red.\nNotVisits(Tiger, Cat, True) ::: The tiger does not visit the cat.\nVisits(Tiger, Cow, True) ::: The tiger visits the cow.\nVisits(Tiger, Mouse, True) ::: The tiger visits the mouse.\nIfVisits(Tiger, Mouse, True) >>> Eats(Mouse, Tiger, True) ::: If the tiger visits the mouse then the mouse eats the tiger.\nYoung($x, True) && Needs($x, Mouse, True) >>> Eats($x, Mouse, True) ::: If someone is young and they need the mouse then they eat the mouse.\nEats(Tiger, Tiger, True) ::: The tiger eats the tiger.\nQuery:\nEats(Tiger, Tiger, True) ::: The tiger eats the tiger.\n------\nProblem:\nThe cat is not red. The cat needs the mouse. The cat needs the tiger. The cow eats the cat. The cow is young. The mouse visits the cat. The tiger eats the cat. The tiger does not eat the cow. The tiger is red. The tiger does not visit the cat. The tiger visits the cow. The tiger visits the mouse. If the tiger visits the mouse then the mouse eats the tiger. If someone is young and they need the mouse then they eat the mouse. If someone eats the tiger then they are green. If someone is green then they are young. If someone is young then they need the mouse.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? The tiger eats the tiger.\n###\nPredicates:\nRed($x, bool) ::: Is x red?\nNeeds($x, $y, bool) ::: Does x need y?\nEats($x, $y, bool) ::: Does x eat y?\nVisits($x, $y, bool) ::: Does x visit y?\nYoung($x, bool) ::: Is x young?\nFacts:\nNotRed(Cat, True) ::: The cat is not red.\nNeeds(Cat, Mouse"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-502_Q8",
    "context": "The bear is big. The bear is red. The bear likes the dog. The bear does not like the mouse. The bear needs the cow. The bear needs the dog. The bear does not see the mouse. The cow is not big. The cow is not red. The dog is big. The dog is cold. The dog likes the mouse. The dog needs the bear. The dog needs the mouse. The dog sees the cow. The mouse is blue. If something needs the dog then the dog is blue. If the dog is red and the dog needs the cow then the dog sees the mouse. All blue things are kind. If the dog likes the cow then the cow is blue. If something sees the bear and it is not cold then it needs the dog. If something is blue and not red then it likes the mouse. If something needs the cow then it likes the cow. If something is kind then it likes the cow. If something likes the cow and it is not blue then the cow sees the mouse.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The dog does not like the cow.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nRed($x, bool) ::: Is x red?\nLikes($x, $y, bool) ::: Does x like y?\nNeeds($x, $y, bool) ::: Does x need y?\nSees($x, $y, bool) ::: Does x see y?\nKind($x, bool) ::: Is x kind?\nBlue($x, bool) ::: Is x blue?\nFacts:\nBig(Bear, True) ::: The bear is big.\nRed(Bear, True) ::: The bear is red.\nLikes(Bear, Dog, True) ::: The bear likes the dog.\nNot(Likes(Bear, Mouse, True)) ::: The bear does not like the mouse.\nNeeds(Bear, Cow, True) ::: The bear needs the cow.\nNeeds(Bear, Dog, True) ::: The bear needs the dog.\nNot(Sees(Bear, Mouse, True)) ::: The bear does not see the mouse.\nNot(Big(Cow, True)) ::: The cow is not big.\nNot(Red(Cow, True)) ::: The cow is not red.\nBig(Dog, True) ::: The dog is big.\nCold(Dog, True) ::: The dog is cold.\nLikes(Dog, Mouse, True) ::: The dog likes the mouse.\nNeeds(Dog, Bear, True) ::: The dog needs the bear.\nNeeds(Dog, Mouse, True) ::: The dog needs the mouse.\nSees(Dog, Cow, True) ::: The dog sees the cow.\nBlue(Mouse, True) ::: The mouse is blue.\nRules:\nNot(Red($x, True)) >>> Kind($x, True) ::: If something needs the dog then the dog is blue.\nRed($x, True) && Needs($x, Cow, True) >>> Sees($x, Mouse, True) ::: If the dog is red and the dog needs the cow then the dog sees the mouse.\nKind($x, True) >>> Likes($x, Cow, True) ::: All blue things are kind.\nLikes(Cow, $x, True) >>> Blue($x, True) ::: If the dog likes the cow then the cow is blue.\nNot(Cold($x, True)) && Sees($x, Bear, True) >>> Needs($x, Dog, True) ::: If something sees the bear and it is not cold then it needs the dog.\nNot(Blue($x, True)) && Not(Red($x, True)) >>> Likes($x, Mouse, True) ::: If something is blue and not red then it likes the mouse.\nNeeds(Cow, $x, True) >>> Likes($x, Cow, True) ::: If something needs the cow then it likes the cow.\nKind($x, True) >>> Likes($x, Cow, True) ::: If something likes the cow and it is not blue then the cow sees the mouse.\nQuery:\nNot(Likes(Dog, Cow, True)) ::: The dog does not like the cow.\n------\nProblem:\nThe bear is big. The bear is red. The bear likes the dog"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-556_Q17",
    "context": "The cow eats the squirrel. The cow is blue. The cow is nice. The cow is red. The dog eats the cow. The mouse is big. The mouse is kind. The mouse is red. The mouse visits the dog. The squirrel chases the cow. The squirrel visits the cow. The squirrel visits the dog. If someone eats the cow then they visit the dog. If someone eats the mouse and they chase the squirrel then the squirrel eats the mouse. If someone chases the squirrel then the squirrel chases the mouse. If someone visits the cow then the cow eats the dog. If someone is red and they eat the mouse then the mouse eats the cow. If the cow is big then the cow visits the dog. If someone visits the squirrel and they visit the dog then the dog eats the mouse. If the mouse visits the dog then the dog visits the squirrel. If someone eats the mouse then they chase the squirrel.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The dog is not kind.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y, bool) ::: Does x eat y?\nIs($x, $y, bool) ::: Is x y?\nVisits($x, $y, bool) ::: Does x visit y?\nChases($x, $y, bool) ::: Does x chase y?\nRed($x, bool) ::: Is x red?\nBlue($x, bool) ::: Is x blue?\nNice($x, bool) ::: Is x nice?\nBig($x, bool) ::: Is x big?\nKind($x, bool) ::: Is x kind?\nFacts:\nEats(Cow, Squirrel, True) ::: The cow eats the squirrel.\nIs(Cow, Blue, True) ::: The cow is blue.\nIs(Cow, Nice, True) ::: The cow is nice.\nIs(Cow, Red, True) ::: The cow is red.\nEats(Dog, Cow, True) ::: The dog eats the cow.\nIs(Mouse, Big, True) ::: The mouse is big.\nIs(Mouse, Kind, True) ::: The mouse is kind.\nIs(Mouse, Red, True) ::: The mouse is red.\nVisits(Mouse, Dog, True) ::: The mouse visits the dog.\nChases(Squirrel, Cow, True) ::: The squirrel chases the cow.\nVisits(Squirrel, Cow, True) ::: The squirrel visits the cow.\nVisits(Squirrel, Dog, True) ::: The squirrel visits the dog.\nEats(Cow, Dog, True) >>> Eats(Dog, Mouse) ::: If someone eats the cow then they visit the dog.\nEats(Mouse, Squirrel) && Chases(Squirrel, Cow) >>> Eats(Cow, Mouse) ::: If someone eats the mouse and they chase the squirrel then the squirrel eats the mouse.\nChases(Squirrel, Mouse) >>> Chases(Mouse, Squirrel) ::: If someone chases the squirrel then the squirrel chases the mouse.\nVisits(Cow, Dog) >>> Eats(Cow, Dog) ::: If someone visits the cow then the cow eats the dog.\nIs(Cow, Big) >>> Visits(Cow, Dog) ::: If the cow is big then the cow visits the dog.\nVisits(Mouse, Dog) >>> Visits(Dog, Mouse) ::: If someone visits the squirrel and they visit the dog then the dog visits the squirrel.\nEats(Mouse, Squirrel) >>> Chases(Squirrel, Mouse) ::: If someone eats the mouse then they chase the squirrel.\nQuery:\nNot(Kind(Dog, True)) ::: The dog is not kind.\n------\nProblem:\nThe cow eats the squirrel. The cow is blue. The cow is nice. The cow is red. The dog eats the cow. The mouse is big. The mouse is kind. The mouse is red. The mouse visits the dog. The squirrel chases the cow. The squirrel visits the cow. The squirrel visits the dog. If someone eats the cow"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-859_Q19",
    "context": "The cat likes the dog. The dog does not chase the tiger. The dog is big. The dog is young. The dog likes the cat. The lion chases the tiger. The tiger chases the cat. The tiger chases the dog. The tiger is not nice. The tiger is round. The tiger likes the dog. The tiger does not like the lion. The tiger sees the dog. The tiger sees the lion. If someone chases the lion then the lion is green. If someone likes the lion then they do not see the tiger. If someone likes the cat then they chase the cat. If someone likes the tiger and the tiger chases the lion then the lion sees the dog. If someone is green then they like the dog. If someone chases the lion then they see the cat. If someone likes the cat then the cat likes the lion. If someone likes the dog then they chase the lion.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The lion is not nice.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nLikes($x, $y, bool) ::: Does x like y?\nChases($x, $y, bool) ::: Does x chase y?\nSees($x, $y, bool) ::: Does x see y?\nYoung($x, bool) ::: Is x young?\nBig($x, bool) ::: Is x big?\nGreen($x, bool) ::: Is x green?\nRound($x, bool) ::: Is x round?\nFacts:\nLikes(Cat, Dog, True) ::: The cat likes the dog.\nChases(Dog, Tiger, False) ::: The dog does not chase the tiger.\nBig(Dog, True) ::: The dog is big.\nYoung(Dog, True) ::: The dog is young.\nLikes(Dog, Cat, True) ::: The dog likes the cat.\nChases(Lion, Tiger, True) ::: The lion chases the tiger.\nChases(Tiger, Cat, True) ::: The tiger chases the cat.\nChases(Tiger, Dog, True) ::: The tiger chases the dog.\nNotNice(Tiger, True) ::: The tiger is not nice.\nRound(Tiger, True) ::: The tiger is round.\nLikes(Tiger, Dog, True) ::: The tiger likes the dog.\nLikes(Tiger, Lion, False) ::: The tiger does not like the lion.\nSees(Tiger, Dog, True) ::: The tiger sees the dog.\nSees(Tiger, Lion, True) ::: The tiger sees the lion.\nRules:\nChases($x, $y, True) >>> Green($x, True) ::: If someone chases the lion then the lion is green.\nLikes($x, $y, True) >>> NotSees($x, $y, True) ::: If someone likes the lion then they do not see the tiger.\nLikes($x, Cat, True) >>> Chases($x, Cat, True) ::: If someone likes the cat then they chase the cat.\nLikes($x, Tiger, True) && Chases($x, Lion, True) >>> Sees($x, Dog, True) ::: If someone likes the tiger and the tiger chases the lion then the lion sees the dog.\nLikes($x, Dog, True) >>> Green($x, True) ::: If someone likes the dog then they are green.\nChases($x, Lion, True) >>> Sees($x, Cat, True) ::: If someone chases the lion then they see the cat.\nLikes($x, Cat, True) >>> Likes($x, Lion, True) ::: If someone likes the cat then the cat likes the lion.\nLikes($x, Dog, True) >>> Chases($x, Lion, True) ::: If someone likes the dog then they chase the lion.\nQuery:\nNotNice(Lion, True) ::: The lion is not nice.\n------\nProblem:\nThe cat likes the dog. The dog does not chase the tiger. The dog is big. The dog is young. The dog likes the cat. The lion chases the tiger. The tiger chases the"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-590_Q8",
    "context": "Anne is rough. Charlie is red. Charlie is rough. Erin is blue. Erin is white. Harry is blue. Harry is white. Blue, nice things are white. If Charlie is round and Charlie is rough then Charlie is young. All nice, white things are rough. Round things are rough. If something is young then it is red. If something is nice then it is round. All rough, blue things are round. Young things are nice. If Charlie is red then Charlie is blue.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Charlie is not young.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRough($x, bool) ::: Is x rough?\nRed($x, bool) ::: Is x red?\nBlue($x, bool) ::: Is x blue?\nWhite($x, bool) ::: Is x white?\nNice($x, bool) ::: Is x nice?\nRound($x, bool) ::: Is x round?\nYoung($x, bool) ::: Is x young?\nFacts:\nRough(Anne, True) ::: Anne is rough.\nRed(Charlie, True) ::: Charlie is red.\nRough(Charlie, True) ::: Charlie is rough.\nBlue(Erin, True) ::: Erin is blue.\nWhite(Erin, True) ::: Erin is white.\nBlue(Harry, True) ::: Harry is blue.\nWhite(Harry, True) ::: Harry is white.\nNice($x, True) >>> White($x, True) ::: Blue, nice things are white.\nRound($x, True) && Rough($x, True) >>> Young($x, True) ::: If Charlie is round and Charlie is rough then Charlie is young.\nYoung($x, True) >>> Rough($x, True) ::: All nice, white things are rough.\nRough($x, True) >>> Round($x, True) ::: Round things are rough.\nYoung($x, True) >>> Red($x, True) ::: If something is young then it is red.\nNice($x, True) >>> Round($x, True) ::: If something is nice then it is round.\nRound($x, True) >>> Rough($x, True) ::: All rough, blue things are round.\nYoung($x, True) >>> Nice($x, True) ::: Young things are nice.\nRed($x, True) >>> Blue($x, True) ::: If Charlie is red then Charlie is blue.\nQuery:\nNot(Young(Charlie, True)) ::: Charlie is not young.\n------"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-836_Q10",
    "context": "The bald eagle chases the lion. The bald eagle eats the dog. The bald eagle is red. The dog chases the bald eagle. The dog chases the lion. The dog is young. The lion needs the squirrel. The squirrel eats the dog. The squirrel is kind. The squirrel needs the dog. Kind things are red. If something needs the squirrel then the squirrel chases the dog. If something chases the bald eagle then it is kind. If the bald eagle chases the lion and the bald eagle chases the squirrel then the lion chases the bald eagle. If something chases the lion and it is young then it eats the bald eagle. If something is kind then it eats the lion. If something eats the dog then it needs the bald eagle. If something needs the bald eagle then the bald eagle chases the squirrel. If something needs the bald eagle then the bald eagle needs the dog.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The lion is not kind.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nEats($x, $y, bool) ::: Does x eat y?\nNeeds($x, $y, bool) ::: Does x need y?\nIs($x, $y, bool) ::: Is x y?\nRed($x, bool) ::: Is x red?\nKind($x, bool) ::: Is x kind?\nYoung($x, bool) ::: Is x young?\nFacts:\nChases(BaldEagle, Lion, True) ::: The bald eagle chases the lion.\nEats(BaldEagle, Dog, True) ::: The bald eagle eats the dog.\nRed(BaldEagle, True) ::: The bald eagle is red.\nChases(Dog, BaldEagle, True) ::: The dog chases the bald eagle.\nChases(Dog, Lion, True) ::: The dog chases the lion.\nYoung(Dog, True) ::: The dog is young.\nNeeds(Lion, Squirrel, True) ::: The lion needs the squirrel.\nEats(Squirrel, Dog, True) ::: The squirrel eats the dog.\nKind(Squirrel, True) ::: The squirrel is kind.\nNeeds(Squirrel, Dog, True) ::: The squirrel needs the dog.\nRed(Squirrel, True) ::: The squirrel is red.\nRules:\nKind($x, True) >>> Red($x, True) ::: Kind things are red.\nNeeds($x, Squirrel, True) >>> Chases($x, Dog, True) ::: If something needs the squirrel then the squirrel chases the dog.\nChases($x, BaldEagle, True) >>> Kind($x, True) ::: If something chases the bald eagle then it is kind.\nChases(BaldEagle, Lion, True) && Ch"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-204_Q4",
    "context": "The bald eagle eats the squirrel. The bald eagle likes the cow. The bear is cold. The bear is kind. The bear visits the cow. The cow visits the bear. The squirrel eats the bald eagle. The squirrel eats the bear. The squirrel likes the bear. The squirrel visits the cow. If someone visits the bear and they are kind then they are blue. If someone likes the squirrel then they visit the bear. If the bald eagle eats the cow and the cow is blue then the cow visits the bald eagle. If someone visits the bald eagle and they are green then the bald eagle is cold. If someone is cold and they like the cow then they are blue. If someone is cold and blue then they eat the squirrel. If someone eats the bald eagle and the bald eagle visits the bear then the bald eagle is young. If someone likes the bear and they visit the cow then the bear likes the squirrel. If the bear eats the squirrel then the squirrel is cold.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bear does not like the squirrel.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y, bool) ::: Does x eat y?\nLikes($x, $y, bool) ::: Does x like y?\nVisits($x, $y, bool) ::: Does x visit y?\nKind($x, bool) ::: Is x kind?\nBlue($x, bool) ::: Is x blue?\nGreen($x, bool) ::: Is x green?\nYoung($x, bool) ::: Is x young?\nFacts:\nEats(BaldEagle, Squirrel, True) ::: The bald eagle eats the squirrel.\nEats(BaldEagle, Cow, True) ::: The bald eagle eats the cow.\nLikes(BaldEagle, Cow, True) ::: The bald eagle likes the cow.\nCold(Bear, True) ::: The bear is cold.\nKind(Bear, True) ::: The bear is kind.\nVisits(Bear, Cow, True) ::: The bear visits the cow.\nVisits(Cow, Bear, True) ::: The cow visits the bear.\nEats(Squirrel, BaldEagle, True) ::: The squirrel eats the bald eagle.\nEats(Squirrel, Bear, True) ::: The squirrel eats the bear.\nLikes(Squirrel, Bear, True) ::: The squirrel likes the bear.\nVisits(Squirrel, Cow, True) ::: The squirrel visits the cow.\nIf($x, $y, $z, bool) ::: If $x then $y.\nIf(Visits(Bear, BaldEagle), BaldEagle, Blue, True) ::: If someone visits the bear and they are kind then they are blue.\nIf(Likes(Squirrel, BaldEagle), BaldEagle, Bear, True) ::: If someone likes the squirrel then they visit the bear.\nIf(Eats(BaldEagle, Cow, True"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1394_Q8",
    "context": "Charlie is quiet. Charlie is rough. Charlie is white. Erin is quiet. Erin is white. Fiona is rough. Harry is cold. If Fiona is rough then Fiona is quiet. If someone is round and young then they are quiet. If someone is red then they are round. If someone is quiet then they are red. Rough, round people are young. All quiet, cold people are young. Young, rough people are white. All red, quiet people are cold. Rough, cold people are quiet.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Fiona is not round.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nQuiet($x, bool) ::: Is x quiet?\nRough($x, bool) ::: Is x rough?\nWhite($x, bool) ::: Is x white?\nRound($x, bool) ::: Is x round?\nCold($x, bool) ::: Is x cold?\nFacts:\nQuite(Charlie, True) ::: Charlie is quiet.\nRough(Charlie, True) ::: Charlie is rough.\nWhite(Charlie, True) ::: Charlie is white.\nQuite(Erin, True) ::: Erin is quiet.\nWhite(Erin, True) ::: Erin is white.\nRough(Fiona, True) ::: Fiona is rough.\nCold(Harry, True) ::: Harry is cold.\nRules:\nFiona(Rough, True) >>> Fiona(Quite, True) ::: If Fiona is rough then Fiona is quiet.\nRound($x, True) && Young($x, True) >>> Quite($x, True) ::: If someone is round and young then they are quiet.\nRed($x, True) >>> Round($x, True) ::: If someone is red then they are round.\nQuite($x, True) >>> Red($x, True) ::: If someone is quiet then they are red.\nRough($x, True) && Round($x, True) >>> Young($x, True) ::: Rough, round people are young.\nYoung($x, True) && Rough($x, True) >>> White($x, True) ::: Young, rough people are white.\nRed($x, True) && Quite($x, True) >>> Cold($x, True) ::: All red, quiet people are cold.\nQuite($x, True) && Cold($x, True) >>> Young($x, True) ::: All quiet, cold people are young.\nRough($x, True) && Cold($x, True) >>> Quite($x, True) ::: Rough, cold people"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-1204_Q7",
    "context": "Bob is not furry. Bob is quiet. Bob is not rough. Bob is not round. Erin is not kind. Erin is rough. Gary is big. Harry is furry. Harry is green. Harry is not round. All big, round people are rough. If someone is rough and not green then they are quiet. If someone is round and rough then they are quiet. All big people are round. All quiet people are kind. All rough, quiet people are big. If someone is round and kind then they are furry. If someone is big and not quiet then they are furry.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is quiet.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nFurry($x, bool) ::: Is x furry?\nQuiet($x, bool) ::: Is x quiet?\nRough($x, bool) ::: Is x rough?\nRound($x, bool) ::: Is x round?\nKind($x, bool) ::: Is x kind?\nBig($x, bool) ::: Is x big?\nFacts:\nNotFurry(Bob, True) ::: Bob is not furry.\nQuiet(Bob, True) ::: Bob is quiet.\nNotRough(Bob, True) ::: Bob is not rough.\nNotRound(Bob, True) ::: Bob is not round.\nNotKind(Erin, True) ::: Erin is not kind.\nRough(Erin, True) ::: Erin is rough.\nBig(Gary, True) ::: Gary is big.\nFurry(Harry, True) ::: Harry is furry.\nGreen(Harry, True) ::: Harry is green.\nNotRound(Harry, True) ::: Harry is not round.\nRules:\nAllBigRoundPeopleAreRough($x, True) ::: All big, round people are rough.\nRoughNotGreen($x, True) >>> Quiet($x, True) ::: If someone is rough and not green then they are quiet.\nRoundRough($x, True) >>> Quiet($x, True) ::: If someone is round and rough then they are quiet.\nAllBigPeopleAreRound($x, True) ::: All big people are round.\nAllQuietPeopleAreKind($x, True) ::: All quiet people are kind.\nRoughQuietPeopleAreBig($x, True) ::: All rough, quiet people are big.\nRoundKind($x, True) >>> Furry($x, True) ::: If someone is round and kind then they are furry.\nBigNotQuiet($x, True) >>> Furry($x, True) ::: If someone is big and not quiet then they are fur"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1297_Q5",
    "context": "Charlie is smart. Dave is round. Dave is smart. Fiona is quiet. Fiona is red. Fiona is rough. Fiona is round. Fiona is smart. Harry is quiet. Harry is round. Quiet things are red. All round things are blue. Rough, blue things are kind. If something is smart and kind then it is quiet. If Fiona is red and Fiona is smart then Fiona is round. All round, blue things are rough. Quiet, red things are kind.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Harry is rough.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nSmart($x, bool) ::: Is x smart?\nRound($x, bool) ::: Is x round?\nQuiet($x, bool) ::: Is x quiet?\nRed($x, bool) ::: Is x red?\nRough($x, bool) ::: Is x rough?\nKind($x, bool) ::: Is x kind?\nFacts:\nSmart(Charlie, True) ::: Charlie is smart.\nRound(Dave, True) ::: Dave is round.\nSmart(Dave, True) ::: Dave is smart.\nQuiet(Fiona, True) ::: Fiona is quiet.\nRed(Fiona, True) ::: Fiona is red.\nRough(Fiona, True) ::: Fiona is rough.\nRound(Fiona, True) ::: Fiona is round.\nSmart(Fiona, True) ::: Fiona is smart.\nRound(Harry, True) ::: Harry is round.\nQuiet(Harry, True) ::: Harry is quiet.\nRound(Harry, True) ::: Harry is round.\nRules:\nQuiet($x, True) >>> Red($x, True) ::: Quiet things are red.\nRound($x, True) >>> Blue($x, True) ::: All round things are blue.\nRough($x, True) && Blue($x, True) >>> Kind($x, True) ::: Rough, blue things are kind.\nSmart($x, True) && Kind($x, True) >>> Quiet($x, True) ::: If something is smart and kind then it is quiet.\nRed($x, True) && Smart($x, True) >>> Round($x, True) ::: If Fiona is red and Fiona is smart then Fiona is round.\nRound($x, True) && Blue($x, True) >>> Rough($x, True) ::: All round, blue things are rough.\nQuiet($x, True) && Red($x, True) >>> Kind($x, True"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-104_Q12",
    "context": "The bear is red. The cow sees the bear. The mouse is young. The mouse does not need the rabbit. The mouse sees the rabbit. The rabbit chases the bear. The rabbit chases the cow. The rabbit is big. The rabbit is red. The rabbit needs the cow. The rabbit does not need the mouse. The rabbit sees the cow. All red, rough things are nice. If something chases the cow and the cow chases the bear then the bear is big. If something sees the mouse then the mouse is nice. If something chases the cow then it is red. If the cow needs the rabbit then the rabbit is rough. If something chases the cow then the cow chases the bear. If something needs the bear and the bear is rough then it sees the bear. If something is nice then it sees the mouse. Big things are rough.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bear does not see the mouse.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRed($x, bool) ::: Is x red?\nYoung($x, bool) ::: Is x young?\nBig($x, bool) ::: Is x big?\nRough($x, bool) ::: Is x rough?\nNice($x, bool) ::: Is x nice?\nChases($x, $y, bool) ::: Does x chase y?\nNeeds($x, $y, bool) ::: Does x need y?\nSees($x, $y, bool) ::: Does x see y?\nFacts:\nRed(Bear, True) ::: The bear is red.\nSees(Cow, Bear, True) ::: The cow sees the bear.\nYoung(Mouse, True) ::: The mouse is young.\nDoesNotNeed(Mouse, Rabbit, True) ::: The mouse does not need the rabbit.\nSees(Mouse, Rabbit, True) ::: The mouse sees the rabbit.\nChases(Rabbit, Bear, True) ::: The rabbit chases the bear.\nChases(Rabbit, Cow, True) ::: The rabbit chases the cow.\nBig(Rabbit, True) ::: The rabbit is big.\nRed(Rabbit, True) ::: The rabbit is red.\nNeeds(Rabbit, Cow, True) ::: The rabbit needs the cow.\nDoesNotNeed(Rabbit, Mouse, True) ::: The rabbit does not need the mouse.\nSees(Rabbit, Cow, True) ::: The rabbit sees the cow.\nAllRedRoughThingsAreNice($x, bool) ::: All red, rough things are nice.\nIfSomethingChasesTheCowAndTheCowChasesTheBearThenTheBearIsBig($x, $y, bool) ::: If something chases the cow and the cow chases the bear then the bear is big.\nIfSomethingSeesTheMouseThenTheMouseIsNice($x, bool) :::"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-96_Q7",
    "context": "The cat does not chase the rabbit. The cat is cold. The cat is red. The cat sees the rabbit. The cat sees the tiger. The mouse is big. The mouse is red. The rabbit does not chase the cat. The rabbit likes the cat. The rabbit does not like the mouse. The tiger likes the mouse. If something likes the mouse then it chases the cat. If something sees the mouse then it chases the cat. If something chases the mouse then the mouse does not like the rabbit. If something chases the cat then it sees the cat. If the tiger sees the cat then the cat sees the mouse.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cat sees the mouse.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChase($x, $y, bool) ::: Does x chase y?\nLike($x, $y, bool) ::: Does x like y?\nSee($x, $y, bool) ::: Does x see y?\nBig($x, bool) ::: Is x big?\nRed($x, bool) ::: Is x red?\nFacts:\nChase(Cat, Rabbit, False) ::: The cat does not chase the rabbit.\nCold(Cat, True) ::: The cat is cold.\nRed(Cat, True) ::: The cat is red.\nSee(Cat, Rabbit, True) ::: The cat sees the rabbit.\nSee(Cat, Tiger, True) ::: The cat sees the tiger.\nBig(Mouse, True) ::: The mouse is big.\nRed(Mouse, True) ::: The mouse is red.\nChase(Rabbit, Cat, False) ::: The rabbit does not chase the cat.\nLike(Rabbit, Cat, True) ::: The rabbit likes the cat.\nLike(Rabbit, Mouse, False) ::: The rabbit does not like the mouse.\nLike(Tiger, Mouse, True) ::: The tiger likes the mouse.\nRules:\nLike($x, Mouse, True) >>> Chase($x, Cat, True) ::: If something likes the mouse then it chases the cat.\nSee($x, Mouse) >>> Chase($x, Cat, True) ::: If something sees the mouse then it chases the cat.\nChase(Mouse, Cat, True) >>> Not(Like(Rabbit, Mouse, True)) ::: If something chases the mouse then the mouse does not like the rabbit.\nSee(Tiger, Cat) >>> See(Cat, Mouse) ::: If the tiger sees the cat then the cat sees the mouse.\nChase(Cat, Mouse, True) >>> See(Cat, Mouse) ::: If the cat chases the mouse then the cat sees the mouse.\nQuery:\nSee("
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-913_Q12",
    "context": "The cat needs the squirrel. The cow chases the squirrel. The cow is blue. The rabbit chases the cat. The rabbit is kind. The rabbit is red. The squirrel eats the cat. The squirrel is kind. The squirrel is red. The squirrel needs the cow. The squirrel needs the rabbit. If something needs the cow then it eats the cow. If something is red then it is big. If something is blue and nice then it chases the cow. If something is nice then it chases the rabbit. If the cat needs the squirrel and the squirrel needs the cat then the cat is blue. If something eats the cow then it is nice. If something chases the rabbit then it is blue. If something is red then it needs the squirrel.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The squirrel does not chase the cow.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNeeds($x, $y, bool) ::: Does x need y?\nEats($x, $y, bool) ::: Does x eat y?\nChases($x, $y, bool) ::: Does x chase y?\nIs($x, $y, bool) ::: Is x y?\nBlue($x, bool) ::: Is x blue?\nKind($x, bool) ::: Is x kind?\nBig($x, bool) ::: Is x big?\nFacts:\nNeeds(Cat, Squirrel, True) ::: The cat needs the squirrel.\nChases(Cow, Squirrel, True) ::: The cow chases the squirrel.\nBlue(Cow, True) ::: The cow is blue.\nChases(Rabbit, Cat, True) ::: The rabbit chases the cat.\nKind(Rabbit, True) ::: The rabbit is kind.\nRed(Rabbit, True) ::: The rabbit is red.\nEats(Squirrel, Cat, True) ::: The squirrel eats the cat.\nKind(Squirrel, True) ::: The squirrel is kind.\nRed(Squirrel, True) ::: The squirrel is red.\nNeeds(Squirrel, Cow, True) ::: The squirrel needs the cow.\nNeeds(Squirrel, Rabbit, True) ::: The squirrel needs the rabbit.\nRules:\nNeeds($x, $y, True) >>> Eats($x, $y, True) ::: If something needs the cow then it eats the cow.\nRed($x, True) >>> Big($x, True) ::: If something is red then it is big.\nBlue($x, True) && Nice($x, True) >>> Chases($x, Cow, True) ::: If something is blue and nice then it chases the cow.\nNice($x, True) >>> Chases($x, Rabbit, True) :::"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-648_Q20",
    "context": "The bear chases the lion. The cat is cold. The cat is round. The cat does not see the cow. The cow is green. The cow visits the bear. The lion chases the bear. The lion does not chase the cat. The lion is cold. The lion is red. If something visits the bear and the bear does not see the lion then it chases the lion. If something sees the lion then it is cold. If something is kind then it does not visit the lion. If something chases the cow then it sees the cat. If something sees the cat then the cat chases the lion. If something is cold and it sees the cat then the cat is red. If something chases the cow then the cow visits the cat. If something is red then it chases the cow. If the cow visits the bear and the bear visits the cow then the cow sees the lion.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bear is kind.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nVisits($x, $y, bool) ::: Does x visit y?\nSees($x, $y, bool) ::: Does x see y?\nKind($x, bool) ::: Is x kind?\nRound($x, bool) ::: Is x round?\nCold($x, bool) ::: Is x cold?\nGreen($x, bool) ::: Is x green?\nFacts:\nChases(Bear, Lion, True) ::: The bear chases the lion.\nCold(Cat, True) ::: The cat is cold.\nRound(Cat, True) ::: The cat is round.\nDoesNotSee(Cat, Cow, True) ::: The cat does not see the cow.\nGreen(Cow, True) ::: The cow is green.\nVisits(Cow, Bear, True) ::: The cow visits the bear.\nChases(Lion, Bear, True) ::: The lion chases the bear.\nDoesNotChase(Lion, Cat, True) ::: The lion does not chase the cat.\nCold(Lion, True) ::: The lion is cold.\nRed(Lion, True) ::: The lion is red.\nRules:\nVisits($x, $y, True) && DoesNotSee($x, $y, True) >>> Chases($x, $y, True) ::: If something visits the bear and the bear does not see the lion then it chases the lion.\nSees($x, $y, True) >>> Cold($x, True) ::: If something sees the lion then it is cold.\nKind($x, True) >>> DoesNotVisit($x, Lion, True) ::: If something is kind then it does not visit the lion.\nChases($x, Cow, True) >>> Sees($x, Cat, True) ::: If something chases the cow then it sees the cat.\nSees($x, Cat, True) >>> Chases($"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1084_Q3",
    "context": "Charlie is furry. Charlie is green. Charlie is white. Dave is round. Dave is young. Fiona is red. Harry is furry. Harry is green. Harry is round. Harry is young. If someone is red then they are round. If someone is white then they are furry. If someone is green and round then they are blue. All round people are green. All furry, red people are round. Furry people are blue. If Dave is round and Dave is young then Dave is green. If Dave is round then Dave is green. If someone is blue then they are white.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Charlie is blue.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nFurry($x, bool) ::: Is x furry?\nGreen($x, bool) ::: Is x green?\nRed($x, bool) ::: Is x red?\nRound($x, bool) ::: Is x round?\nBlue($x, bool) ::: Is x blue?\nWhite($x, bool) ::: Is x white?\nFacts:\nFurry(Charlie, True) ::: Charlie is furry.\nGreen(Charlie, True) ::: Charlie is green.\nWhite(Charlie, True) ::: Charlie is white.\nRound(Dave, True) ::: Dave is round.\nYoung(Dave, True) ::: Dave is young.\nRed(Fiona, True) ::: Fiona is red.\nFurry(Harry, True) ::: Harry is furry.\nGreen(Harry, True) ::: Harry is green.\nRound(Harry, True) ::: Harry is round.\nYoung(Harry, True) ::: Harry is young.\nRules:\nRed($x, True) >>> Round($x, True) ::: If someone is red then they are round.\nWhite($x, True) >>> Furry($x, True) ::: If someone is white then they are furry.\nGreen($x, True) && Round($x, True) >>> Blue($x, True) ::: If someone is green and round then they are blue.\nAll($x, Green($x, True)) >>> All($x, Round($x, True)) ::: All round people are green.\nFurry($x, True) && Red($x, True) >>> Round($x, True) ::: All furry, red people are round.\nFurry($x, True) >>> Blue($x, True) ::: Furry people are blue.\nRound($x, True) && Young($x, True) >>> Green($x, True) ::: If Dave is round and Dave is young then Dave is green.\nRound($x, True) >>> Green($x, True) ::: If Dave is round then Dave is green.\nBlue($x, True) >>> White($x, True) ::: If someone is blue then they are white.\nQuery:\nBlue(Charlie, True) ::: Charlie is blue.\n------"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-339_Q3",
    "context": "The bald eagle chases the cat. The bald eagle is kind. The bald eagle sees the dog. The cat is rough. The dog is blue. The dog is red. The dog is rough. The dog sees the cat. The dog does not see the lion. The lion sees the bald eagle. If something chases the cat then the cat chases the dog. If something chases the dog then it eats the bald eagle. If something is kind and it sees the lion then it is not red. If something chases the dog then the dog chases the bald eagle. If the dog eats the bald eagle then the dog sees the bald eagle. If something is cold then it sees the lion. If something sees the cat and it is blue then the cat is kind. If something is blue and it chases the bald eagle then the bald eagle is cold.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cat chases the dog.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nKind($x, bool) ::: Is x kind?\nSees($x, $y, bool) ::: Does x see y?\nEats($x, $y, bool) ::: Does x eat y?\nCold($x, bool) ::: Is x cold?\nFacts:\nChases(BaldEagle, Cat, True) ::: The bald eagle chases the cat.\nKind(BaldEagle, True) ::: The bald eagle is kind.\nSees(BaldEagle, Dog, True) ::: The bald eagle sees the dog.\nRough(Cat, True) ::: The cat is rough.\nBlue(Dog, True) ::: The dog is blue.\nRed(Dog, True) ::: The dog is red.\nRough(Dog, True) ::: The dog is rough.\nSees(Dog, Cat, True) ::: The dog sees the cat.\nSees(Dog, Lion, False) ::: The dog does not see the lion.\nSees(Lion, BaldEagle, True) ::: The lion sees the bald eagle.\nChases(Dog, Cat, True) ::: If something chases the cat then the cat chases the dog.\nEats(Dog, BaldEagle, True) ::: If something chases the dog then it eats the bald eagle.\nKind(x, True) && Sees(x, Lion, True) >>> Not(Red(x, True)) ::: If something is kind and it sees the lion then it is not red.\nChases(Dog, BaldEagle, True) ::: If something chases the dog then the dog chases the bald eagle.\nEats(Dog, BaldEagle, True) >>> Sees(Dog, BaldEagle, True) ::: If the dog eats the bald eagle then the dog sees the bald eagle.\nCold(x, True) >>> Sees(x, Lion, True) ::: If something is cold then it sees the lion.\nSees(Cat, Dog, True) && Blue(Dog, True) >>> Kind(Cat, True) ::: If something sees the cat and it is blue then the"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-619_Q7",
    "context": "The cat chases the cow. The cat is blue. The cat needs the lion. The cat does not visit the cow. The cat visits the squirrel. The cow chases the cat. The cow is big. The cow is blue. The lion does not chase the cat. The lion does not chase the squirrel. The lion is big. The lion does not need the cow. The lion visits the cow. The squirrel chases the cow. The squirrel is blue. The squirrel needs the cow. If something needs the cat then it visits the cat. If something chases the cat and the cat visits the cow then the cow does not visit the cat. If something chases the squirrel and it visits the lion then the squirrel chases the cow. If the cow is not big then the cow does not chase the squirrel. If something visits the cat then the cat is nice. If the squirrel chases the cow then the cow does not need the squirrel. If something is nice then it needs the cow. If something is kind and not big then it visits the squirrel. If something needs the cow then it needs the cat.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cat is nice.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nVisits($x, $y, bool) ::: Does x visit y?\nNeeds($x, $y, bool) ::: Does x need y?\nIs($x, $y, bool) ::: Is x y?\nKind($x, bool) ::: Is x kind?\nBig($x, bool) ::: Is x big?\nNice($x, bool) ::: Is x nice?\nFacts:\nChases(Cat, Cow, True) ::: The cat chases the cow.\nIs(Cat, Blue, True) ::: The cat is blue.\nNeeds(Cat, Lion, True) ::: The cat needs the lion.\nNot(Visits(Cat, Cow, True)) ::: The cat does not visit the cow.\nVisits(Cat, Squirrel, True) ::: The cat visits the squirrel.\nChases(Cow, Cat, True) ::: The cow chases the cat.\nIs(Cow, Big, True) ::: The cow is big.\nIs(Cow, Blue, True) ::: The cow is blue.\nNot(Chases(Lion, Cat, True)) ::: The lion does not chase the cat.\nNot(Chases(Lion, Squirrel, True)) ::: The lion does not chase the squirrel.\nIs(Lion, Big, True) ::: The lion is big.\nNot(Needs(Lion, Cow, True)) ::: The lion does not need the cow.\nVisits(Lion, Cow, True) ::: The lion visits the cow.\nChases(Squirrel, Cow, True) ::: The squirrel chases the cow.\nIs(Squirrel, Blue, True) ::: The squirrel is blue.\nNeeds(Squirrel, Cow, True) ::: The squirrel needs the cow.\nRules:\nIf something needs the cat then it visits the cat. ::: If something needs the cat then it visits the cat.\nIf something chases the cat and the cat visits the cow then the cow does not visit the cat. ::: If something chases the cat and the cat visits the cow then the cow does not visit the cat.\nIf something chases the squir"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-118_Q1",
    "context": "Bob is green. Bob is red. Bob is round. Charlie is cold. Charlie is green. Charlie is kind. Erin is cold. Erin is furry. Erin is kind. Fiona is green. If someone is green then they are kind. All green, kind people are round. If Fiona is furry and Fiona is big then Fiona is green. If Erin is furry and Erin is red then Erin is kind. All round, furry people are kind. Green, round people are big. If someone is big and cold then they are furry. If someone is red then they are cold. Round, kind people are red.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Charlie is kind.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen($x, bool) ::: Is x green?\nRed($x, bool) ::: Is x red?\nRound($x, bool) ::: Is x round?\nCold($x, bool) ::: Is x cold?\nKind($x, bool) ::: Is x kind?\nBig($x, bool) ::: Is x big?\nFurry($x, bool) ::: Is x furry?\nFacts:\nGreen(Bob, True) ::: Bob is green.\nRed(Bob, True) ::: Bob is red.\nRound(Bob, True) ::: Bob is round.\nCold(Charlie, True) ::: Charlie is cold.\nGreen(Charlie, True) ::: Charlie is green.\nKind(Charlie, True) ::: Charlie is kind.\nCold(Erin, True) ::: Erin is cold.\nFurry(Erin, True) ::: Erin is furry.\nKind(Erin, True) ::: Erin is kind.\nGreen(Fiona, True) ::: Fiona is green.\nKind(Fiona, True) ::: Fiona is kind.\nRound(Fiona, True) ::: Fiona is round.\nRules:\nGreen($x, True) >>> Kind($x, True) ::: If someone is green then they are kind.\nGreen($x, True) && Kind($x, True) >>> Round($x, True) ::: All green, kind people are round.\nFurry($x, True) && Fiona($x, True) && Big($x, True) >>> Green($x, True) ::: If Fiona is furry and Fiona is big then Fiona is green.\nFurry($x, True) && Erin($x, True) && Red($x, True) >>> Kind($x, True) ::: If Erin is furry and Erin is red then Erin is kind.\nFurry($x, True) && Kind($x, True) >>> Round($x, True) ::: All round, furry people are kind.\nGreen($x, True) && Round($x, True) >>> Big($x, True) ::: Green, round people are big.\nCold($x, True) && Big($x, True) >>>"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-954_Q7",
    "context": "The lion needs the rabbit. The mouse is rough. The mouse is young. The mouse visits the lion. The rabbit needs the mouse. The rabbit needs the squirrel. The squirrel is not blue. If something is young then it needs the lion. If something is round then it needs the lion. If something needs the lion then it needs the rabbit. If something is rough and it visits the mouse then the mouse is red. If the rabbit visits the squirrel and the squirrel chases the lion then the squirrel needs the rabbit. If something is red then it is not blue. If something is young and it does not need the mouse then it visits the rabbit. If something needs the rabbit then it visits the mouse. If the lion visits the mouse and the lion is blue then the mouse chases the squirrel.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The mouse visits the mouse.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNeeds($x, $y, bool) ::: Does x need y?\nVisits($x, $y, bool) ::: Does x visit y?\nChases($x, $y, bool) ::: Does x chase y?\nIsBlue($x, bool) ::: Is x blue?\nIsRed($x, bool) ::: Is x red?\nIsYoung($x, bool) ::: Is x young?\nIsRound($x, bool) ::: Is x round?\nFacts:\nNeeds(Lion, Rabbit, True) ::: The lion needs the rabbit.\nIsRough(Mouse, True) ::: The mouse is rough.\nIsYoung(Mouse, True) ::: The mouse is young.\nVisits(Mouse, Lion, True) ::: The mouse visits the lion.\nNeeds(Rabbit, Mouse, True) ::: The rabbit needs the mouse.\nNeeds(Rabbit, Squirrel, True) ::: The rabbit needs the squirrel.\nIsNotBlue(Squirrel, True) ::: The squirrel is not blue.\nRule:\nIsYoung($x, True) >>> Needs($x, Lion, True) ::: If something is young then it needs the lion.\nRule:\nIsRound($x, True) >>> Needs($x, Lion, True) ::: If something is round then it needs the lion.\nRule:\nNeeds($x, Lion, True) >>> Needs($x, Rabbit, True) ::: If something needs the lion then it needs the rabbit.\nRule:\nIsRough($x, True) && Visits($x, Mouse, True) >>> MouseIsRed($x, True) ::: If something is rough and it visits the mouse then the mouse is red.\nRule:\nNeeds(Rabbit, Squirrel, True) && Visits(Squirrel, Lion, True) && Chases(Squirrel, Lion, True) >>> Needs(Squirrel, Rabbit, True) ::: If the rabbit visits the squirrel and the squirrel chases the lion then the squirrel needs the rabbit.\nRule:\nIsRed($x, True) >>> IsNotBlue($x, True) ::: If something is red then it is not"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-671_Q19",
    "context": "Charlie is nice. Fiona is big. Fiona is green. Fiona is kind. Fiona is nice. Gary is red. Harry is red. If someone is big then they are red. If Gary is nice and Gary is green then Gary is blue. If someone is big then they are nice. If someone is kind and red then they are big. If Fiona is red and Fiona is green then Fiona is blue. All green people are big. If someone is red then they are green. If Fiona is nice then Fiona is blue. If someone is blue then they are kind.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is not rough.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNice($x, bool) ::: Is x nice?\nBig($x, bool) ::: Is x big?\nGreen($x, bool) ::: Is x green?\nKind($x, bool) ::: Is x kind?\nRed($x, bool) ::: Is x red?\nBlue($x, bool) ::: Is x blue?\nRough($x, bool) ::: Is x rough?\nFacts:\nNice(Charlie, True) ::: Charlie is nice.\nBig(Fiona, True) ::: Fiona is big.\nGreen(Fiona, True) ::: Fiona is green.\nKind(Fiona, True) ::: Fiona is kind.\nNice(Fiona, True) ::: Fiona is nice.\nRed(Gary, True) ::: Gary is red.\nRed(Harry, True) ::: Harry is red.\nRules:\nBig($x, True) >>> Red($x, True) ::: If someone is big then they are red.\nNice($x, True) && Red($x, True) && Green($x, True) >>> Blue($x, True) ::: If Gary is nice and Gary is green then Gary is blue.\nBig($x, True) >>> Nice($x, True) ::: If someone is big then they are nice.\nKind($x, True) && Red($x, True) >>> Big($x, True) ::: If someone is kind and red then they are big.\nGreen($x, True) && Red($x, True) >>> Blue($x, True) ::: If Fiona is red and Fiona is green then Fiona is blue.\nAll($x, Green($x, True)) >>> Big($x, True) ::: All green people are big.\nRed($x, True) >>> Green($x, True) ::: If someone is red then they are green.\nNice($x, True) >>> Blue($x, True) ::: If Fiona is nice then Fiona is blue.\nBlue($x, True) >>> Kind($x, True) ::: If someone is blue then they are kind.\nQuery:\nRough(Gary, False) ::: Gary is not rough.\n------\nProblem:\nCharlie is nice. Fiona is big. Fiona is green. Fiona"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-378_Q17",
    "context": "Anne is nice. Dave is young. Erin is round. Erin is white. Gary is furry. Gary is rough. Gary is round. All nice, rough people are cold. Rough people are nice. Round, young people are nice. If someone is nice then they are furry. All round people are furry. All white, round people are furry. All round, nice people are rough. If someone is round and young then they are white. Furry, round people are young.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Dave is not nice.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNice($x, bool) ::: Is x nice?\nYoung($x, bool) ::: Is x young?\nRound($x, bool) ::: Is x round?\nFurry($x, bool) ::: Is x furry?\nRough($x, bool) ::: Is x rough?\nCold($x, bool) ::: Is x cold?\nFacts:\nNice(Anne, True) ::: Anne is nice.\nYoung(Dave, True) ::: Dave is young.\nRound(Erin, True) ::: Erin is round.\nWhite(Erin, True) ::: Erin is white.\nFurry(Gary, True) ::: Gary is furry.\nRough(Gary, True) ::: Gary is rough.\nRound(Gary, True) ::: Gary is round.\nRules:\nNice($x, True) >>> Rough($x, True) ::: All nice, rough people are cold.\nRough($x, True) >>> Nice($x, True) ::: Rough people are nice.\nRound($x, True) >>> Nice($x, True) ::: Round, young people are nice.\nNice($x, True) >>> Furry($x, True) ::: If someone is nice then they are furry.\nAll($x, True) >>> Furry($x, True) ::: All round people are furry.\nAll($x, True) >>> Furry($x, True) ::: All white, round people are furry.\nRound($x, True) >>> Rough($x, True) ::: If someone is round and young then they are white.\nFurry($x, True) >>> Round($x, True) ::: Furry, round people are young.\nQuery:\nNot(Nice(Dave, True)) ::: Dave is not nice.\n------\nProblem:\nAnne is furry. Anne is green. Anne is quiet. Anne is rough. Anne is white. Dave is furry. Dave is green. Dave is quiet. Dave is rough. Dave is white. Erin is furry. Erin is green. Erin is quiet. Erin is rough. Erin is white. Fiona is furry. Fiona is green. Fiona is quiet. Fiona is rough."
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-660_Q13",
    "context": "The dog is big. The dog is blue. The dog is green. The dog is kind. The mouse likes the rabbit. The mouse sees the tiger. The rabbit is blue. The rabbit is kind. The rabbit likes the dog. The rabbit sees the dog. The rabbit sees the mouse. The tiger is blue. If the rabbit sees the mouse and the rabbit likes the tiger then the rabbit is kind. If something needs the mouse then it likes the dog. If something needs the dog then it needs the rabbit. If something is green then it needs the dog. If something needs the rabbit and it needs the dog then the rabbit is green. If something sees the dog and it is green then it needs the tiger. If something likes the mouse and it sees the tiger then it likes the rabbit.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The dog does not like the rabbit.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nBlue($x, bool) ::: Is x blue?\nGreen($x, bool) ::: Is x green?\nKind($x, bool) ::: Is x kind?\nLikes($x, $y, bool) ::: Does x like y?\nNeeds($x, $y, bool) ::: Does x need y?\nSees($x, $y, bool) ::: Does x see y?\nFacts:\nBig(Dog, True) ::: The dog is big.\nBlue(Dog, True) ::: The dog is blue.\nGreen(Dog, True) ::: The dog is green.\nKind(Dog, True) ::: The dog is kind.\nLikes(Mouse, Rabbit, True) ::: The mouse likes the rabbit.\nSees(Mouse, Tiger, True) ::: The mouse sees the tiger.\nBlue(Rabbit, True) ::: The rabbit is blue.\nKind(Rabbit, True) ::: The rabbit is kind.\nLikes(Rabbit, Dog, True) ::: The rabbit likes the dog.\nSees(Rabbit, Dog, True) ::: The rabbit sees the dog.\nSees(Rabbit, Mouse, True) ::: The rabbit sees the mouse.\nBlue(Tiger, True) ::: The tiger is blue.\nRules:\nRabbit(x) >>> Likes(x, Tiger, True) ::: If the rabbit sees the mouse and the rabbit likes the tiger then the rabbit is kind.\nMouse(x) >>> Likes(x, Dog, True) ::: If something needs the mouse then it likes the dog.\nDog(x) >>> Needs(x, Rabbit, True) ::: If something needs the dog then it needs the rabbit.\nGreen(x) >>> Needs(x, Dog, True) ::: If something is green then it needs the dog.\nRabbit(x) && Needs(x, Rabbit, True) >>> Green(x, True) ::: If something needs the rabbit and it needs the dog then the rabbit is green.\nSees(x, Dog) && Green(x, True) >>> Needs(x,"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-253_Q11",
    "context": "Bob is big. Bob is kind. Bob is nice. Charlie is kind. Charlie is young. Erin is young. Harry is furry. If Charlie is kind and Charlie is young then Charlie is furry. If someone is furry and rough then they are big. If someone is young and furry then they are rough. If someone is furry and big then they are nice. If someone is kind and nice then they are not cold.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Charlie is not cold.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nKind($x, bool) ::: Is x kind?\nNice($x, bool) ::: Is x nice?\nYoung($x, bool) ::: Is x young?\nFurry($x, bool) ::: Is x furry?\nRough($x, bool) ::: Is x rough?\nCold($x, bool) ::: Is x cold?\nFacts:\nBig(Bob, True) ::: Bob is big.\nKind(Bob, True) ::: Bob is kind.\nNice(Bob, True) ::: Bob is nice.\nKind(Charlie, True) ::: Charlie is kind.\nYoung(Charlie, True) ::: Charlie is young.\nYoung(Erin, True) ::: Erin is young.\nFurry(Harry, True) ::: Harry is furry.\nRules:\nYoung($x, True) && Furry($x, True) >>> Rough($x, True) ::: If someone is young and furry then they are rough.\nFurry($x, True) && Rough($x, True) >>> Big($x, True) ::: If someone is furry and rough then they are big.\nKind($x, True) && Nice($x, True) >>> Cold($x, False) ::: If someone is kind and nice then they are not cold.\nKind($x, True) && Young($x, True) >>> Furry($x, True) ::: If Charlie is kind and Charlie is young then Charlie is furry.\nFurry($x, True) && Big($x, True) >>> Nice($x, True) ::: If someone is furry and big then they are nice.\nQuery:\nCold(Charlie, False) ::: Charlie is not cold.\n------\nProblem:\nBob is big. Bob is kind. Bob is nice. Charlie is kind. Charlie is young. Erin is young. Harry is furry. If Charlie is kind and Charlie is young then Charlie is furry. If someone is furry and rough then they are big. If someone is young and furry then they are rough. If someone is furry and big then they are nice. If someone is kind and nice then they are not cold.\nQuestion"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-822_Q23",
    "context": "Charlie is not red. Erin is big. Erin is not red. Erin is not white. Fiona is nice. Harry is not cold. Harry is white. Cold people are not big. If Erin is big then Erin is not green. Nice people are quiet. If someone is green and quiet then they are white. All white people are not cold. If Erin is nice then Erin is white. All quiet people are green. If someone is quiet and not cold then they are red.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Charlie is not big.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRed($x, bool) ::: Is x red?\nWhite($x, bool) ::: Is x white?\nCold($x, bool) ::: Is x cold?\nBig($x, bool) ::: Is x big?\nNice($x, bool) ::: Is x nice?\nQuiet($x, bool) ::: Is x quiet?\nGreen($x, bool) ::: Is x green?\nFacts:\nNotRed(Charlie, True) ::: Charlie is not red.\nBig(Erin, True) ::: Erin is big.\nNotRed(Erin, True) ::: Erin is not red.\nNotWhite(Erin, True) ::: Erin is not white.\nNice(Fiona, True) ::: Fiona is nice.\nNotCold(Harry, True) ::: Harry is not cold.\nWhite(Harry, True) ::: Harry is white.\nNotBig(Erin, True) ::: Erin is not big.\nRules:\nCold($x, True) >>> NotBig($x, True) ::: Cold people are not big.\nNotBig(Erin, True) >>> NotGreen(Erin, True) ::: If Erin is big then Erin is not green.\nNice($x, True) >>> Quiet($x, True) ::: Nice people are quiet.\nGreen($x, True) && Quiet($x, True) >>> White($x, True) ::: If someone is green and quiet then they are white.\nNotWhite($x, True) >>> NotCold($x, True) ::: All white people are not cold.\nNotRed($x, True) >>> Nice($x, True) ::: If Erin is nice then Erin is white.\nQuiet($x, True) >>> Green($x, True) ::: All quiet people are green.\nNotCold($x, True) && Quiet($x, True) >>> Red($x, True) ::: If someone is quiet and not cold then they are red.\nQuery:\nNotBig(Charlie, True) ::: Charlie is not big.\n------\nProblem:\nCharlie is not red. Erin is big. Erin is not red. Erin is not white. Fiona is nice. Harry is not cold"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-74_Q22",
    "context": "The cat chases the rabbit. The mouse chases the cat. The mouse is red. The mouse is round. The rabbit is red. The rabbit sees the mouse. The squirrel chases the cat. The squirrel chases the mouse. The squirrel is kind. The squirrel sees the rabbit. If something is red then it sees the mouse. If the mouse sees the squirrel then the squirrel eats the cat. If something chases the squirrel and it is red then the squirrel eats the rabbit. If something eats the cat and it chases the cat then it sees the mouse. If something sees the mouse then it sees the squirrel. If something eats the mouse and it sees the mouse then the mouse sees the squirrel. If something eats the rabbit then it sees the rabbit. If something sees the squirrel and it sees the rabbit then it eats the squirrel.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The squirrel is rough.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nRed($x, bool) ::: Is x red?\nRound($x, bool) ::: Is x round?\nSees($x, $y, bool) ::: Does x see y?\nEats($x, $y, bool) ::: Does x eat y?\nKind($x, bool) ::: Is x kind?\nFacts:\nChases(Cat, Rabbit, True) ::: The cat chases the rabbit.\nChases(Mouse, Cat, True) ::: The mouse chases the cat.\nRed(Mouse, True) ::: The mouse is red.\nRound(Mouse, True) ::: The mouse is round.\nRed(Rabbit, True) ::: The rabbit is red.\nSees(Mouse, Rabbit, True) ::: The rabbit sees the mouse.\nChases(Squirrel, Cat, True) ::: The squirrel chases the cat.\nChases(Squirrel, Mouse, True) ::: The squirrel chases the mouse.\nKind(Squirrel, True) ::: The squirrel is kind.\nSees(Squirrel, Rabbit, True) ::: The squirrel sees the rabbit.\nRules:\nRed($x, True) >>> Sees($x, Mouse, True) ::: If something is red then it sees the mouse.\nSees(Mouse, Squirrel, True) >>> Eats(Squirrel, Cat, True) ::: If the mouse sees the squirrel then the squirrel eats the cat.\nChases($x, Squirrel, True) && Red($x, True) >>> Eats(Squirrel, Rabbit, True) ::: If something chases the squirrel and it is red then the squirrel eats the rabbit.\nEats(Cat, $x, True) && Chases($x, Cat, True) >>> Sees($x, Mouse, True) ::: If something eats the cat and it chases the cat then it sees the mouse.\nSees($x, Mouse, True) >>> Sees($x, Squirrel, True) ::: If something sees the mouse then it sees the squirrel.\nEats(Mouse, $x, True) && Sees($x, Mouse, True) >>> Mouse($x, True) ::: If something eats the mouse and it sees the mouse then the mouse sees the squirrel.\nEats($x, Rabbit, True) >>> Sees($x, Rabbit, True) ::: If something eats the rabbit then it sees the rabbit.\nSees($x, Squirrel, True) && Sees($x, Rabbit, True) >>> Eats($x, Squirrel, True) ::: If something sees the squirrel and it sees the rabbit then it eats the squirrel.\n------"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-742_Q10",
    "context": "Anne is furry. Anne is red. Anne is smart. Bob is red. Dave is blue. Dave is kind. Erin is white. Furry people are kind. Furry, blue people are kind. All red people are furry. All nice, red people are smart. Kind, nice people are smart. All furry people are kind. White people are kind. If someone is white and red then they are nice. If Bob is kind then Bob is white.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is not nice.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nFurry($x, bool) ::: Is x furry?\nRed($x, bool) ::: Is x red?\nSmart($x, bool) ::: Is x smart?\nKind($x, bool) ::: Is x kind?\nNice($x, bool) ::: Is x nice?\nFacts:\nFurry(Anne, True) ::: Anne is furry.\nRed(Anne, True) ::: Anne is red.\nSmart(Anne, True) ::: Anne is smart.\nRed(Bob, True) ::: Bob is red.\nBlue(Dave, True) ::: Dave is blue.\nKind(Dave, True) ::: Dave is kind.\nWhite(Erin, True) ::: Erin is white.\nRules:\nFurry($x, True) >>> Kind($x, True) ::: Furry people are kind.\nFurry($x, True) && Blue($x, True) >>> Kind($x, True) ::: Furry, blue people are kind.\nRed($x, True) >>> Furry($x, True) ::: All red people are furry.\nRed($x, True) && Nice($x, True) >>> Smart($x, True) ::: All nice, red people are smart.\nKind($x, True) && Nice($x, True) >>> Smart($x, True) ::: Kind, nice people are smart.\nFurry($x, True) >>> Kind($x, True) ::: All furry people are kind.\nWhite($x, True) >>> Kind($x, True) ::: White people are kind.\nRed($x, True) && White($x, True) >>> Nice($x, True) ::: If someone is white and red then they are nice.\nKind(Bob, True) >>> White(Bob, True) ::: If Bob is kind then Bob is white.\nQuery:\nNot(Nice(Bob, True)) ::: Bob is not nice.\n------\nProblem:\nAnne is furry. Anne is red. Anne is smart. Bob is red. Dave is blue. Dave is kind. Erin is white. Furry people are kind. Furry, blue people are kind. All red people are furry. All nice, red people are smart. Kind, nice people are smart. All furry people are kind. White people are kind. If someone is white and red then they are nice. If Bob is kind then Bob is white.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Bob is not nice.\n###\nPredicates:\nFurry($x, bool) ::: Is x furry?\nRed($x, bool) ::: Is x red?\nSmart($x, bool) ::: Is x smart?\nKind($x, bool) ::: Is x kind?\nNice($x, bool) ::: Is x nice?\nF"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-960_Q2",
    "context": "Anne is green. Anne is nice. Anne is quiet. Erin is big. Erin is nice. Erin is quiet. Gary is blue. Gary is green. Harry is blue. Harry is green. Harry is kind. Harry is round. If something is kind and blue then it is nice. Nice things are round. If something is round then it is quiet. Blue things are round. Nice things are big. If something is round and quiet then it is kind.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Harry is not blue.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen($x, bool) ::: Is x green?\nNice($x, bool) ::: Is x nice?\nQuiet($x, bool) ::: Is x quiet?\nBig($x, bool) ::: Is x big?\nKind($x, bool) ::: Is x kind?\nRound($x, bool) ::: Is x round?\nBlue($x, bool) ::: Is x blue?\nFacts:\nGreen(Anne, True) ::: Anne is green.\nNice(Anne, True) ::: Anne is nice.\nQuiet(Anne, True) ::: Anne is quiet.\nBig(Erin, True) ::: Erin is big.\nNice(Erin, True) ::: Erin is nice.\nQuiet(Erin, True) ::: Erin is quiet.\nBlue(Gary, True) ::: Gary is blue.\nGreen(Gary, True) ::: Gary is green.\nBlue(Harry, True) ::: Harry is blue.\nGreen(Harry, True) ::: Harry is green.\nKind(Harry, True) ::: Harry is kind.\nRound(Harry, True) ::: Harry is round.\nRules:\nKind($x, True) && Blue($x, True) >>> Nice($x, True) ::: If something is kind and blue then it is nice.\nNice($x, True) >>> Round($x, True) ::: Nice things are round.\nRound($x, True) >>> Quiet($x, True) ::: If something is round then it is quiet.\nBlue($x, True) >>> Round($x, True) ::: Blue things are round.\nNice($x, True) >>> Big($x, True) ::: Nice things are big.\nRound($x, True) && Quiet($x, True) >>> Kind($x, True) ::: If something is round and quiet then it is kind.\nQuery:\nNot(Blue(Harry, True)) ::: Harry is not blue.\n------\nProblem:\nAnne is green. Anne is nice. Anne is quiet. Erin is big. Erin is nice. Erin is quiet. Gary is blue. Gary is green. Harry is blue. Harry is green. Harry is kind. Harry is round. If something is kind and blue then it is nice. Nice things are round. If something is round then it is quiet. Blue things are round. Nice things are big. If something is round and quiet then it is kind.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Harry is not blue.\n###\nPredicates:\nGreen($x, bool) ::: Is x green?\nNice($x, bool) ::: Is x nice?\nQuiet($x, bool) ::: Is x quiet?\nBig($x, bool) ::: Is x big?\nKind($x, bool) ::: Is x kind?"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-356_Q4",
    "context": "The cow eats the mouse. The cow eats the squirrel. The cow likes the rabbit. The cow likes the squirrel. The mouse is cold. The mouse likes the rabbit. The mouse visits the cow. The rabbit is big. The rabbit likes the mouse. The rabbit visits the mouse. The squirrel eats the cow. The squirrel eats the mouse. The squirrel is green. The squirrel is rough. The squirrel likes the cow. The squirrel likes the mouse. If something likes the cow then it visits the mouse. If something likes the cow then the cow is green. If something eats the squirrel and the squirrel likes the rabbit then it eats the rabbit. If something is cold then it likes the cow. If something visits the squirrel then the squirrel likes the rabbit. If the cow likes the rabbit then the cow is cold. If something likes the rabbit and it visits the mouse then the mouse visits the squirrel. If something is rough and it likes the squirrel then the squirrel eats the rabbit.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The squirrel does not visit the mouse.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y, bool) ::: Does x eat y?\nLikes($x, $y, bool) ::: Does x like y?\nVisits($x, $y, bool) ::: Does x visit y?\nCold($x, bool) ::: Is x cold?\nBig($x, bool) ::: Is x big?\nGreen($x, bool) ::: Is x green?\nRough($x, bool) ::: Is x rough?\nFacts:\nEats(Cow, Mouse, True) ::: The cow eats the mouse.\nEats(Cow, Squirrel, True) ::: The cow eats the squirrel.\nLikes(Cow, Rabbit, True) ::: The cow likes the rabbit.\nLikes(Cow, Squirrel, True) ::: The cow likes the squirrel.\nCold(Mouse, True) ::: The mouse is cold.\nLikes(Mouse, Rabbit, True) ::: The mouse likes the rabbit.\nVisits(Mouse, Cow, True) ::: The mouse visits the cow.\nBig(Rabbit, True) ::: The rabbit is big.\nLikes(Rabbit, Mouse, True) ::: The rabbit likes the mouse.\nVisits(Rabbit, Mouse, True) ::: The rabbit visits the mouse.\nEats(Squirrel, Cow, True) ::: The squirrel eats the cow.\nEats(Squirrel, Mouse, True) ::: The squirrel eats the mouse.\nGreen(Squirrel, True) ::: The squirrel is green.\nRough(Squirrel, True) ::: The squirrel is rough.\nLikes(Squirrel, Cow, True) ::: The squirrel likes the cow.\nLikes(Squirrel, Mouse, True) ::: The squirrel likes the mouse.\nRules:\nEats($x, $y, True) >>> Likes($x, $y, True) ::: If something eats the squirrel and the squirrel likes the rabbit then it eats the rabbit.\nCold($x, True) >>> Likes($x, Cow, True) ::: If something is cold then it likes the cow.\nVisits($x, $y, True) >>> Likes($y, $x, True) ::: If something visits the squirrel then the squirrel likes the rabbit.\nLikes($x, Cow, True) >>> Likes($x, Rabbit, True) ::: If the cow likes the rabbit then the cow is cold.\nLikes($x, $y, True) >>> Visits($y, $x, True) ::: If something likes the rabbit and it visits the mouse then the mouse visits the squirrel.\nLikes($x, $y, True) && Visits($x, $"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-614_Q8",
    "context": "The bear is rough. The bear needs the cat. The bear needs the cow. The cat is green. The cat is rough. The cat needs the bear. The cat sees the cow. The cow is not green. The cow needs the tiger. The tiger is cold. The tiger does not see the cow. If someone needs the cat then the cat needs the tiger. If someone eats the bear then the bear is young. All young people are cold. If someone sees the cow and they see the cat then the cat does not see the bear. If the cat needs the tiger then the tiger is big. If someone is big then they eat the bear. If the cat eats the cow then the cat needs the cow.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The tiger does not eat the bear.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRough($x, bool) ::: Is x rough?\nNeeds($x, $y, bool) ::: Does x need y?\nSees($x, $y, bool) ::: Does x see y?\nEats($x, $y, bool) ::: Does x eat y?\nYoung($x, bool) ::: Is x young?\nCold($x, bool) ::: Is x cold?\nBig($x, bool) ::: Is x big?\nFacts:\nRough(Bear, True) ::: The bear is rough.\nNeeds(Bear, Cat, True) ::: The bear needs the cat.\nNeeds(Bear, Cow, True) ::: The bear needs the cow.\nGreen(Cat, True) ::: The cat is green.\nRough(Cat, True) ::: The cat is rough.\nNeeds(Cat, Bear, True) ::: The cat needs the bear.\nSees(Cat, Cow, True) ::: The cat sees the cow.\nNot(Green(Cow, True)) ::: The cow is not green.\nNeeds(Cow, Tiger, True) ::: The cow needs the tiger.\nCold(Tiger, True) ::: The tiger is cold.\nNot(Sees(Tiger, Cow, True)) ::: The tiger does not see the cow.\nIf(Needs(Cat, Tiger, True), Tiger, Big, True) ::: If someone needs the cat then the cat needs the tiger.\nEats(Bear, Young, True) ::: If someone eats the bear then the bear is young.\nYoung(Young, True) ::: All young people are cold.\nNot(Sees(Cat, Bear, True)) ::: If the cat sees the cow and they see the cat then the cat does not see the bear.\nIf(Needs(Cat, Tiger, True), Tiger, Big, True) ::: If the cat needs the tiger then the tiger is big.\nIf(Big(Tiger, True), Eats(Tiger, Bear, True), True) ::: If someone is big then they eat the bear.\nEats(Cat, Cow, True) ::: If the cat eats the cow then the cat needs the cow.\nQuery:\nNot(Eats(Tiger, Bear, True)) ::: The tiger does not eat the bear.\n------\nProblem:\nThe bear is rough. The bear needs the cat. The bear needs the cow. The cat is green. The cat is rough. The cat needs the bear. The cat sees the cow. The cow is not green. The cow needs the tiger. The tiger is cold. The tiger does not see the cow. If someone needs the cat then the cat needs the tiger. If someone eats the bear then the bear is young. All young people are cold. If someone sees the cow and they see the"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-774_Q2",
    "context": "Bob is red. Charlie is kind. Charlie is quiet. Charlie is white. Dave is big. Dave is kind. Harry is quiet. If someone is smart then they are red. All round people are not red. All smart, big people are round. All big people are round. If someone is quiet then they are big. White people are kind. If someone is quiet and not red then they are kind. Smart, quiet people are kind. Kind people are white.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Dave is not big.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRed($x, bool) ::: Is x red?\nKind($x, bool) ::: Is x kind?\nQuiet($x, bool) ::: Is x quiet?\nWhite($x, bool) ::: Is x white?\nBig($x, bool) ::: Is x big?\nRound($x, bool) ::: Is x round?\nSmart($x, bool) ::: Is x smart?\nFacts:\nRed(Bob, True) ::: Bob is red.\nKind(Charlie, True) ::: Charlie is kind.\nQuiet(Charlie, True) ::: Charlie is quiet.\nWhite(Charlie, True) ::: Charlie is white.\nBig(Dave, True) ::: Dave is big.\nKind(Dave, True) ::: Dave is kind.\nQuiet(Harry, True) ::: Harry is quiet.\nRules:\nSmart($x, True) >>> Red($x, True) ::: If someone is smart then they are red.\nRound($x, True) >>> ~Red($x, True) ::: All round people are not red.\nSmart($x, True) && Big($x, True) >>> Round($x, True) ::: All smart, big people are round.\nBig($x, True) >>> Round($x, True) ::: All big people are round.\nQuiet($x, True) >>> Big($x, True) ::: If someone is quiet then they are big.\nWhite($x, True) >>> Kind($x, True) ::: White people are kind.\n~Red($x, True) && Quiet($x, True) >>> Kind($x, True) ::: If someone is quiet and not red then they are kind.\nSmart($x, True) && Quiet($x, True) >>> Kind($x, True) ::: Smart, quiet people are kind.\nKind($x, True) >>> White($x, True) ::: Kind people are white.\nQuery:\n~Big(Dave, True) ::: Dave is not big.\n------\nProblem:\nBob is red. Charlie is kind. Charlie is quiet. Charlie is white. Dave is big. Dave is kind. Harry is quiet. If someone is smart then they are red. All round people are not red. All smart, big people are round. All big people are round. If someone is quiet then they are big. White people are kind. If someone is quiet and not red then they are kind. Smart, quiet people are kind. Kind people are white.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Dave is not big.\n###\nPredicates:\nRed($x, bool) ::: Is x red?\nKind($x, bool) ::: Is x kind?\nQuiet($x, bool) ::: Is x quiet?\nWhite($x, bool) ::: Is x white?\nBig($x, bool) ::"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-226_Q12",
    "context": "The cat eats the lion. The cat is young. The cat likes the lion. The lion chases the cat. The lion chases the mouse. The lion is big. The lion is nice. The mouse chases the cat. The mouse eats the squirrel. The mouse likes the lion. The squirrel chases the cat. The squirrel chases the lion. The squirrel chases the mouse. The squirrel eats the mouse. The squirrel is rough. The squirrel likes the lion. If something eats the mouse then the mouse is nice. If something eats the lion and it chases the squirrel then the squirrel is rough. If something likes the mouse then the mouse is big. If something is rough then it likes the mouse. If something is rough and it eats the squirrel then the squirrel chases the lion. If the lion likes the cat then the cat eats the mouse. If something likes the mouse then it eats the mouse. Big things are rough.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The mouse does not eat the mouse.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y, bool) ::: Does x eat y?\nYoung($x, bool) ::: Is x young?\nLikes($x, $y, bool) ::: Does x like y?\nChases($x, $y, bool) ::: Does x chase y?\nBig($x, bool) ::: Is x big?\nRough($x, bool) ::: Is x rough?\nNice($x, bool) ::: Is x nice?\nFacts:\nEats(Cat, Lion, True) ::: The cat eats the lion.\nYoung(Cat, True) ::: The cat is young.\nLikes(Cat, Lion, True) ::: The cat likes the lion.\nChases(Cat, Lion, True) ::: The cat chases the lion.\nChases(Cat, Mouse, True) ::: The cat chases the mouse.\nBig(Lion, True) ::: The lion is big.\nNice(Lion, True) ::: The lion is nice.\nEats(Mouse, Squirrel, True) ::: The mouse eats the squirrel.\nLikes(Mouse, Lion, True) ::: The mouse likes the lion.\nChases(Mouse, Cat, True) ::: The mouse chases the cat.\nChases(Squirrel, Cat, True) ::: The squirrel chases the cat.\nChases(Squirrel, Lion, True) ::: The squirrel chases the lion.\nChases(Squirrel, Mouse, True) ::: The squirrel chases the mouse.\nEats(Squirrel, Mouse, True) ::: The squirrel eats the mouse.\nRough(Squirrel, True) ::: The squirrel is rough.\nLikes(Squirrel, Lion, True) ::: The squirrel likes the lion.\nRules:\nEats($x, $y, True) >>> Young($x, True) ::: If something eats the mouse then the mouse is nice.\nEats($x, $y, True) && Chases($x, $z, True) >>> Rough($z, True) ::: If something eats the lion and it chases the squirrel then the squirrel is rough.\nLikes($x, $y, True) >>> Big($y, True) ::: If something likes the mouse then the mouse is big.\nRough($x, True) >>> Likes($x, $y, True) ::: If something is rough then it likes the mouse.\nRough($x, True) && Eats($x, $y, True) >>> Chases($y, $z, True) ::: If something is rough and it eats the squirrel then the squirrel chases the lion.\nLikes($x, $y, True) >>> Likes($y, $z, True) ::: If the lion likes"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-751_Q1",
    "context": "Anne is furry. Anne is quiet. Erin is furry. Erin is not rough. Fiona is not quiet. Fiona is smart. Harry is quiet. Smart people are white. Quiet people are smart. All smart, rough people are not furry. If someone is white and not quiet then they are not furry. All white people are cold. All furry, quiet people are not rough. If Fiona is smart and Fiona is quiet then Fiona is white. If Harry is cold then Harry is rough. If Erin is white and Erin is not smart then Erin is not cold.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Harry is quiet.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nFurry($x, bool) ::: Is x furry?\nQuiet($x, bool) ::: Is x quiet?\nRough($x, bool) ::: Is x rough?\nSmart($x, bool) ::: Is x smart?\nWhite($x, bool) ::: Is x white?\nCold($x, bool) ::: Is x cold?\nFacts:\nFurry(Anne, True) ::: Anne is furry.\nQuiet(Anne, True) ::: Anne is quiet.\nFurry(Erin, True) ::: Erin is furry.\nRough(Erin, False) ::: Erin is not rough.\nNot(Quiet(Fiona, True)) ::: Fiona is not quiet.\nSmart(Fiona, True) ::: Fiona is smart.\nHarry(Quiet, True) ::: Harry is quiet.\nSmart(Harry, False) ::: Harry is not smart.\nRules:\nSmart($x, True) >>> White($x, True) ::: Smart people are white.\nQuiet($x, True) >>> Smart($x, True) ::: Quiet people are smart.\nNot(Furry($x, True)) && Smart($x, True) && Rough($x, True) >>> Not(Furry($x, True)) ::: All smart, rough people are not furry.\nNot(White($x, True)) && Quiet($x, True) >>> Not(Furry($x, True)) ::: If someone is white and not quiet then they are not furry.\nWhite($x, True) >>> Cold($x, True) ::: All white people are cold.\nFurry($x, True) && Quiet($x, True) >>> Not(Rough($x, True)) ::: All furry, quiet people are not rough.\nIf(Fiona(Smart, True) && Fiona(Quiet, True)) >>> Fiona(White, True) ::: If Fiona is smart and Fiona is quiet then Fiona is white.\nIf(Harry(Cold, True)) >>> Harry(Rough, True) ::: If Harry is cold then Harry is rough.\nIf(Erin(White, True) && Not(Erin(Smart, True))) >>> Not(Erin(Cold, True)) ::: If Erin is white and Erin is not smart then Erin is not cold.\nQuery:\nQuiet(Harry, True) ::: Harry is quiet.\n------\nProblem:\nAnne is furry. Anne is quiet. Erin is furry. Erin is not rough. Fiona is not quiet. Fiona is smart. Harry is quiet. Smart people are white. Quiet people are smart. All smart, rough people are not furry. If someone is white and not quiet then they are not furry. All white people are cold. All furry, quiet"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-314_Q24",
    "context": "Anne is cold. Anne is smart. Bob is smart. Bob is young. Gary is kind. Harry is red. Harry is young. All young things are red. If Harry is young then Harry is smart. If Gary is rough then Gary is cold. If Gary is cold and Gary is blue then Gary is rough. If something is smart and kind then it is young. All cold things are smart. If something is kind then it is rough. Red, kind things are cold.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Harry is blue.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nSmart($x, bool) ::: Is x smart?\nYoung($x, bool) ::: Is x young?\nKind($x, bool) ::: Is x kind?\nRed($x, bool) ::: Is x red?\nBlue($x, bool) ::: Is x blue?\nRough($x, bool) ::: Is x rough?\nFacts:\nCold(Anne, True) ::: Anne is cold.\nSmart(Anne, True) ::: Anne is smart.\nSmart(Bob, True) ::: Bob is smart.\nYoung(Bob, True) ::: Bob is young.\nKind(Gary, True) ::: Gary is kind.\nRed(Harry, True) ::: Harry is red.\nYoung(Harry, True) ::: Harry is young.\nRules:\nYoung($x, True) >>> Red($x, True) ::: All young things are red.\nYoung($x, True) >>> Smart($x, True) ::: If Harry is young then Harry is smart.\nKind($x, True) >>> Cold($x, True) ::: If Gary is rough then Gary is cold.\nCold($x, True) && Blue($x, True) >>> Rough($x, True) ::: If Gary is cold and Gary is blue then Gary is rough.\nSmart($x, True) && Kind($x, True) >>> Young($x, True) ::: If something is smart and kind then it is young.\nCold($x, True) >>> Smart($x, True) ::: All cold things are smart.\nKind($x, True) >>> Rough($x, True) ::: If something is kind then it is rough.\nRed($x, True) && Kind($x, True) >>> Cold($x, True) ::: Red, kind things are cold.\nQuery:\nBlue(Harry, True) ::: Harry is blue.\n------\nProblem:\nAnne is cold. Anne is smart. Bob is smart. Bob is young. Gary is kind. Harry is red. Harry is young. All young things are red. If Harry is young then Harry is smart. If Gary is rough then Gary is cold. If Gary is cold and Gary is blue then Gary is rough. If something is smart and kind then it is young. All cold things are smart. If something is kind then it is rough. Red, kind things are cold.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Harry is blue.\n###\nPredicates:\nCold($x, bool) ::: Is x cold?\nSmart($x, bool) ::: Is x smart?\nYoung($x, bool) ::: Is x young?\nKind($x, bool) ::: Is x kind?\nRed($x, bool) ::: Is x red?\nBlue($x, bool)"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-338_Q7",
    "context": "The bald eagle is big. The bald eagle is green. The bald eagle visits the cow. The cow eats the lion. The cow is green. The cow is rough. The dog does not eat the lion. The dog is not green. The dog is rough. The dog needs the cow. The dog needs the lion. The dog visits the cow. The lion does not eat the dog. The lion needs the bald eagle. The lion needs the cow. The lion does not visit the dog. If someone needs the dog then the dog is young. If someone needs the cow and the cow needs the dog then the cow eats the bald eagle. If someone visits the dog then they need the dog. If someone needs the lion then they visit the dog. If someone eats the bald eagle then the bald eagle visits the lion. If someone eats the cow then they are not rough. If someone needs the lion then the lion is green. If someone needs the dog and the dog visits the cow then the cow needs the dog. If someone needs the lion and the lion is not young then the lion eats the bald eagle.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The dog is young.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nGreen($x, bool) ::: Is x green?\nVisits($x, $y, bool) ::: Does x visit y?\nEats($x, $y, bool) ::: Does x eat y?\nNeeds($x, $y, bool) ::: Does x need y?\nFacts:\nBig(BaldEagle, True) ::: The bald eagle is big.\nGreen(BaldEagle, True) ::: The bald eagle is green.\nVisits(BaldEagle, Cow, True) ::: The bald eagle visits the cow.\nEats(Cow, Lion, True) ::: The cow eats the lion.\nGreen(Cow, True) ::: The cow is green.\nRough(Cow, True) ::: The cow is rough.\nDoesNotEat(Dog, Lion, True) ::: The dog does not eat the lion.\nNotGreen(Dog, True) ::: The dog is not green.\nRough(Dog, True) ::: The dog is rough.\nNeeds(Dog, Cow, True) ::: The dog needs the cow.\nNeeds(Dog, Lion, True) ::: The dog needs the lion.\nVisits(Dog, Cow, True) ::: The dog visits the cow.\nDoesNotEat(Lion, Dog, True) ::: The lion does not eat the dog.\nNeeds(Lion, BaldEagle, True) ::: The lion needs the bald eagle.\nNeeds(Lion, Cow, True) ::: The lion needs the cow.\nDoesNotVisit(Lion, Dog, True) ::: The lion does not visit the dog.\nRules:\nIf someone needs the dog then the dog is young ::: If someone needs the dog then the dog is young.\nIf someone needs the cow and the cow needs the dog then the cow eats the bald eagle ::: If someone needs the cow and the cow needs the dog then the cow eats the bald eagle.\nIf someone visits the dog then they need the dog ::: If someone visits the dog then they need the dog.\nIf someone needs the lion then they visit the dog ::: If someone needs the lion then they visit the dog.\nIf someone eats the bald eagle then the bald eagle visits the lion ::: If someone eats the bald eagle then the bald eagle visits the lion.\nIf someone eats the cow then they are not rough ::: If someone eats the cow then they are not rough.\nIf someone needs the lion then the lion is green ::: If someone needs the lion then the lion is green.\nIf someone needs the dog and the dog visits the cow then the cow needs the dog ::: If someone needs the dog and the dog visits the cow then the cow needs the dog.\nIf someone needs the lion and the lion is not young then the lion eats the bald e"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-701_Q7",
    "context": "The bald eagle chases the rabbit. The bald eagle likes the rabbit. The bald eagle likes the tiger. The bald eagle sees the rabbit. The mouse chases the bald eagle. The mouse chases the tiger. The mouse likes the rabbit. The mouse sees the bald eagle. The rabbit chases the tiger. The rabbit is big. The rabbit is red. The rabbit likes the mouse. The rabbit likes the tiger. The tiger likes the bald eagle. If something likes the tiger then it sees the tiger. If something likes the rabbit and the rabbit is rough then the rabbit chases the bald eagle. If the tiger is rough and the tiger likes the mouse then the mouse likes the bald eagle. If something likes the bald eagle and the bald eagle is kind then the bald eagle sees the mouse. If the mouse sees the bald eagle then the mouse likes the rabbit. If something is kind and it likes the bald eagle then the bald eagle likes the tiger. If something likes the bald eagle then it is kind. If something sees the tiger then it is rough. If something is rough then it likes the bald eagle.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The rabbit likes the bald eagle.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y) ::: Does x chase y?\nLikes($x, $y) ::: Does x like y?\nSees($x, $y) ::: Does x see y?\nKind($x, bool) ::: Is x kind?\nRough($x, bool) ::: Is x rough?\nBig($x, bool) ::: Is x big?\nRed($x, bool) ::: Is x red?\nFacts:\nChases(BaldEagle, Rabbit) ::: The bald eagle chases the rabbit.\nLikes(BaldEagle, Rabbit) ::: The bald eagle likes the rabbit.\nLikes(BaldEagle, Tiger) ::: The bald eagle likes the tiger.\nSees(BaldEagle, Rabbit) ::: The bald eagle sees the rabbit.\nChases(Mouse, BaldEagle) ::: The mouse chases the bald eagle.\nChases(Mouse, Tiger) ::: The mouse chases the tiger.\nLikes(Mouse, Rabbit) ::: The mouse likes the rabbit.\nSees(Mouse, BaldEagle) ::: The mouse sees the bald eagle.\nChases(Rabbit, Tiger) ::: The rabbit chases the tiger.\nBig(Rabbit, True) ::: The rabbit is big.\nRed(Rabbit, True) ::: The rabbit is red.\nLikes(Rabbit, Mouse) ::: The rabbit likes the mouse.\nLikes(Rabbit, Tiger) ::: The rabbit likes the tiger.\nLikes(Tiger, BaldEagle) ::: The tiger likes the bald eagle.\nIf($x, $y) >>> $z ::: If $x then $z.\nIf($x, $y) && $z >>> $w ::: If $x and $z then $w.\nIf($x, $y) && $z >>> $w ::: If $x and $z then $w.\nIf($x, $y) && $z >>> $w ::: If $x and $z then $w.\nIf($x, $y) && $z >>> $w ::: If $x and $z then $w.\nIf($x, $y) && $z >>> $w ::: If $x and $z then $w.\nIf($x, $y) && $z >>> $w ::: If $x and $z then $w.\nIf($x, $y) && $z >>> $w ::: If $x and $z then $w.\nIf($x, $y) && $z >>> $w ::: If $x and $z then $w.\nIf($x, $y) && $z >>> $w ::: If $x and $z then $w.\nIf($x, $y) && $z >>> $w ::: If $x and $z then $w.\nIf($x, $y) && $z >>> $w ::: If $x and $z then $w.\nIf($x, $y) && $z >>> $w ::: If $x and $z then $w.\nIf($x, $y) && $z >>> $w ::: If $x and $z then $w.\nIf($x, $y) && $z >>> $w ::: If $x and $z then $w.\nIf($x, $y) && $z >>> $w ::: If $x and $z then $w.\nIf($x, $y) && $z >>> $w ::: If $x and $z then $w.\nIf($x, $y) && $z >>> $w ::: If $x and $z then $w.\nIf($x, $y) && $z >>> $w ::: If $x and $z then $w.\nIf($x, $y) && $z >>> $w ::: If $x and $z then $w.\nIf($x, $y) && $z >>> $w ::: If $x and $z then $w.\nIf($x, $y) && $z >>> $w ::: If $x and $z then $w.\nIf($x, $y) && $z >>> $w ::: If $x and $z then $w.\nIf($x, $y) && $z >>> $w ::: If $x and $z then $w.\nIf($x, $y)"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-779_Q10",
    "context": "The bear chases the lion. The bear chases the squirrel. The bear is cold. The bear needs the lion. The bear needs the squirrel. The lion chases the bear. The lion is cold. The lion needs the bear. The lion does not see the rabbit. The lion does not see the squirrel. The rabbit needs the lion. The squirrel is not big. If something needs the rabbit then the rabbit is red. If something sees the rabbit and it does not see the bear then the rabbit is not red. If something is red then it is green. If something sees the rabbit and the rabbit is green then it needs the squirrel. If something is green then it chases the bear. If something sees the bear then it does not see the rabbit. All red, big things are kind. If something is big and it chases the lion then it sees the lion. If something chases the bear then it needs the rabbit.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The rabbit does not chase the bear.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nNeeds($x, $y, bool) ::: Does x need y?\nSees($x, $y, bool) ::: Does x see y?\nIs($x, $y, bool) ::: Is x y?\nBig($x, bool) ::: Is x big?\nKind($x, bool) ::: Is x kind?\nRed($x, bool) ::: Is x red?\nGreen($x, bool) ::: Is x green?\nFacts:\nChases(Bear, Lion, True) ::: The bear chases the lion.\nChases(Bear, Squirrel, True) ::: The bear chases the squirrel.\nCold(Bear, True) ::: The bear is cold.\nNeeds(Bear, Lion, True) ::: The bear needs the lion.\nNeeds(Bear, Squirrel, True) ::: The bear needs the squirrel.\nChases(Lion, Bear, True) ::: The lion chases the bear.\nCold(Lion, True) ::: The lion is cold.\nNeeds(Lion, Bear, True) ::: The lion needs the bear.\nDoesNotSee(Lion, Rabbit, True) ::: The lion does not see the rabbit.\nDoesNotSee(Lion, Squirrel, True) ::: The lion does not see the squirrel.\nNeeds(Rabbit, Lion, True) ::: The rabbit needs the lion.\nNotBig(Squirrel, True) ::: The squirrel is not big.\nIfSomethingNeedsRabbitThenRabbitIsRed(True) ::: If something needs the rabbit then the rabbit is red.\nIfSomethingSeesRabbitAndDoesNotSeeBearThenRabbitIsNotRed(True) ::: If something sees the rabbit and it does not see the bear then the rabbit is not red.\nIfSomethingIsRedThenItIsGreen(True) ::: If something is red then it is green.\nIfSomethingSeesRabbitAndRabbitIsGreenThenItNeedsSquirrel(True) ::: If something sees the rabbit and the rabbit is green then it needs the squirrel.\nIfSomethingIsGreenThenItChasesBear(True) ::: If something is green then it chases the bear.\nIfSomethingSeesBearThenItDoesNotSeeRabbit(True) ::: If something sees the bear then it does not see the rabbit.\nAllRedBigThingsAreKind(True) ::: All red, big things are kind.\nIfSomethingIsBigAndChasesLionThenItSeesLion(True) ::: If something is big and it chases the lion then it sees the lion.\nIfSomethingChasesBearThenItNeedsRabbit(True) ::: If something chases the bear then it needs the rabbit.\nQuery:\nChases(Rabbit, Bear, True) ::: The rabbit does not chase the bear.\n------\nProblem:\nThe bear chases the lion. The bear chases the squirrel. The bear is cold. The bear needs the lion. The bear needs the squirrel. The lion chases the bear. The lion is cold. The lion needs the bear. The lion does not see the rabbit. The lion does not see the squirrel. The rabbit needs the lion. The squirrel is not big. If something needs the rabbit then the rabbit is red. If something sees the rabbit and it does not see the bear then the rabbit is not red. If something is red then it is green. If something sees the rabbit and the rabbit is green then it needs the squirrel. If something is green then it chases the bear. If something sees the bear then it does not see the rabbit. All red, big things are kind. If something is big and it chases the lion then it sees the lion. If something chases the bear then it needs the rabbit.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? The rabbit does not chase the bear.\n###\nPredicates:\nChases($x, $y, bool) ::: Does x chase y?\nNeeds($x, $y, bool) ::: Does x need y?\nSees($x, $y, bool) ::: Does x see y?\nIs($x, $y, bool) :::"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-948_Q6",
    "context": "The dog is red. The dog likes the mouse. The dog visits the tiger. The lion visits the dog. The lion visits the tiger. The mouse chases the tiger. The mouse is green. The mouse visits the dog. The tiger chases the lion. The tiger is nice. The tiger visits the dog. If something chases the dog then it visits the lion. If the dog is cold then the dog likes the tiger. If something likes the tiger then the tiger likes the mouse. If something is nice then it visits the tiger. If something likes the lion and the lion is green then it is blue. If something is cold then it likes the lion. If something visits the tiger then it visits the mouse. If something visits the tiger then the tiger chases the mouse. If something likes the mouse then it is cold.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The dog does not like the tiger.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRed($x, bool) ::: Is x red?\nLikes($x, $y, bool) ::: Does x like y?\nVisits($x, $y, bool) ::: Does x visit y?\nChases($x, $y, bool) ::: Does x chase y?\nCold($x, bool) ::: Is x cold?\nGreen($x, bool) ::: Is x green?\nBlue($x, bool) ::: Is x blue?\nNice($x, bool) ::: Is x nice?\nFacts:\nRed(Dog, True) ::: The dog is red.\nLikes(Dog, Mouse, True) ::: The dog likes the mouse.\nVisits(Dog, Tiger, True) ::: The dog visits the tiger.\nVisits(Lion, Dog, True) ::: The lion visits the dog.\nVisits(Lion, Tiger, True) ::: The lion visits the tiger.\nChases(Mouse, Tiger, True) ::: The mouse chases the tiger.\nGreen(Mouse, True) ::: The mouse is green.\nVisits(Mouse, Dog, True) ::: The mouse visits the dog.\nChases(Tiger, Lion, True) ::: The tiger chases the lion.\nNice(Tiger, True) ::: The tiger is nice.\nVisits(Tiger, Dog, True) ::: The tiger visits the dog.\nRules:\nIf something chases the dog then it visits the lion. ::: If something chases the dog then it visits the lion.\nIf the dog is cold then the dog likes the tiger. ::: If the dog is cold then the dog likes the tiger.\nIf something likes the tiger then the tiger likes the mouse. ::: If something likes the tiger then the tiger likes the mouse.\nIf something is nice then it visits the tiger. ::: If something is nice then it visits the tiger.\nIf something likes the lion and the lion is green then it is blue. ::: If something likes the lion and the lion is green then it is blue.\nIf something is cold then it likes the lion. ::: If something is cold then it likes the lion.\nIf something visits the tiger then it visits the mouse. ::: If something visits the tiger then it visits the mouse.\nIf something visits the tiger then the tiger chases the mouse. ::: If something visits the tiger then the tiger chases the mouse.\nIf something likes the mouse then it is cold. ::: If something likes the mouse then it is cold.\nQuery:\nLikes(Dog, Tiger, False) ::: The dog does not like the tiger.\n------\nProblem:\nThe dog is red. The dog likes the mouse. The dog visits the tiger. The lion visits the dog. The lion visits the tiger. The mouse chases the tiger. The mouse is green. The mouse visits the dog. The tiger chases the lion. The tiger is nice. The tiger visits the dog. If something chases the dog then it visits the lion. If the dog is cold then the dog likes the tiger. If something likes the tiger then the tiger likes the mouse. If something is nice then it visits the tiger. If something likes the lion and the lion is green then it is blue. If something is cold then it likes the lion. If something visits the tiger then it visits the mouse. If something visits the tiger then the tiger chases the mouse. If something likes the mouse then it is cold.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? The dog does not like the tiger.\n###\nPredicates:\nRed($x, bool) ::: Is x red?\nLikes($x, $y, bool) ::: Does x like y?\nVisits($x, $y, bool) ::: Does x visit y?\nChases($x, $y, bool) ::: Does x chase y?\nCold($x, bool) ::: Is x cold?\nGreen($x, bool) ::: Is x green?\nBlue($x, bool) ::: Is x blue?\nNice($x, bool) ::: Is x nice?\nFacts:\nRed(Dog, True) ::: The dog is red.\nLikes(Dog, Mouse, True) ::: The dog likes the mouse.\nVisits(Dog, Tiger, True) ::: The dog visits the tiger.\nVisits"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-575_Q19",
    "context": "Bob is red. Dave is big. Dave is not furry. Dave is red. Dave is young. Fiona is young. Gary is not red. If Bob is smart then Bob is red. If Fiona is rough then Fiona is furry. If Fiona is smart then Fiona is blue. Blue things are red. If Fiona is blue then Fiona is young. All red things are rough. Young things are smart.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is not big.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRed($x, bool) ::: Is x red?\nBig($x, bool) ::: Is x big?\nFurry($x, bool) ::: Is x furry?\nSmart($x, bool) ::: Is x smart?\nBlue($x, bool) ::: Is x blue?\nRough($x, bool) ::: Is x rough?\nYoung($x, bool) ::: Is x young?\nFacts:\nRed(Bob, True) ::: Bob is red.\nBig(Dave, True) ::: Dave is big.\nNot(Furry(Dave, True)) ::: Dave is not furry.\nRed(Dave, True) ::: Dave is red.\nYoung(Dave, True) ::: Dave is young.\nYoung(Fiona, True) ::: Fiona is young.\nNot(Red(Gary, True)) ::: Gary is not red.\nRules:\nIf Bob is smart then Bob is red ::: Bob is smart.\nIf Fiona is rough then Fiona is furry ::: Fiona is rough.\nIf Fiona is smart then Fiona is blue ::: Fiona is smart.\nBlue($x, True) >>> Red($x, True) ::: Blue things are red.\nIf Fiona is blue then Fiona is young ::: Fiona is blue.\nRed($x, True) >>> Rough($x, True) ::: All red things are rough.\nYoung($x, True) >>> Smart($x, True) ::: Young things are smart.\nQuery:\nNot(Big(Gary, True)) ::: Gary is not big.\n------\nProblem:\nBob is red. Dave is big. Dave is not furry. Dave is red. Dave is young. Fiona is young. Gary is not red. If Bob is smart then Bob is red. If Fiona is rough then Fiona is furry. If Fiona is smart then Fiona is blue. Blue things are red. If Fiona is blue then Fiona is young. All red things are rough. Young things are smart.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Fiona is not furry.\n###\nPredicates:\nRed($x, bool) ::: Is x red?\nBig($x, bool) ::: Is x big?\nFurry($x, bool) ::: Is x furry?\nSmart($x, bool) ::: Is x smart?\nBlue($x, bool) ::: Is x blue?\nRough($x, bool) ::: Is x rough?\nYoung($x, bool) ::: Is x young?\nFacts:\nRed(Bob, True) ::: Bob is red.\nBig(Dave, True) ::: Dave is big.\nNot(Furry(Dave, True)) ::: Dave is not furry.\nRed(Dave, True) ::: Dave is red.\nYoung(Dave, True) ::: Dave is young.\nYoung(Fiona, True) ::: Fiona is young.\nNot(Red(Gary, True)) ::: Gary is not red.\nRules:\nIf Bob is smart then Bob is red ::: Bob is smart.\nIf Fiona is rough then Fiona is furry ::: Fiona is rough.\nIf Fiona is smart then Fiona is blue ::: Fiona is smart.\nBlue($x, True) >>> Red($x, True) ::: Blue things are red.\nIf Fiona is blue then Fiona is young ::: Fiona is blue.\nRed($x, True) >>> Rough($x, True) ::: All red things are rough.\nYoung($x, True) >>> Smart($x, True) ::: Young things are smart.\nQuery:\nNot(Furry(Fiona, True)) ::: Fiona is not furry.\n------\nProblem:\nBob is red. Dave is big. Dave is not furry. Dave is red. Dave is young. Fiona is young. Gary is not red. If Bob is smart then Bob is red. If Fiona is rough then Fiona is furry. If Fiona is smart then Fiona is blue. Blue things are red. If Fiona is blue then Fiona is young. All red things are rough. Young things are smart.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Fiona is not furry.\n###\nPredicates:\nRed($x, bool) ::: Is"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-619_Q3",
    "context": "The cat chases the cow. The cat is blue. The cat needs the lion. The cat does not visit the cow. The cat visits the squirrel. The cow chases the cat. The cow is big. The cow is blue. The lion does not chase the cat. The lion does not chase the squirrel. The lion is big. The lion does not need the cow. The lion visits the cow. The squirrel chases the cow. The squirrel is blue. The squirrel needs the cow. If something needs the cat then it visits the cat. If something chases the cat and the cat visits the cow then the cow does not visit the cat. If something chases the squirrel and it visits the lion then the squirrel chases the cow. If the cow is not big then the cow does not chase the squirrel. If something visits the cat then the cat is nice. If the squirrel chases the cow then the cow does not need the squirrel. If something is nice then it needs the cow. If something is kind and not big then it visits the squirrel. If something needs the cow then it needs the cat.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cow does not need the squirrel.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nNeeds($x, $y, bool) ::: Does x need y?\nVisits($x, $y, bool) ::: Does x visit y?\nIs($x, $y, bool) ::: Is x y?\nKind($x, bool) ::: Is x kind?\nBig($x, bool) ::: Is x big?\nNice($x, bool) ::: Is x nice?\nFacts:\nChases(Cat, Cow, True) ::: The cat chases the cow.\nIs(Cat, Blue, True) ::: The cat is blue.\nNeeds(Cat, Lion, True) ::: The cat needs the lion.\nNot(Visits(Cat, Cow, True)) ::: The cat does not visit the cow.\nVisits(Cat, Squirrel, True) ::: The cat visits the squirrel.\nChases(Cow, Cat, True) ::: The cow chases the cat.\nIs(Cow, Big, True) ::: The cow is big.\nIs(Cow, Blue, True) ::: The cow is blue.\nNot(Chases(Lion, Cat, True)) ::: The lion does not chase the cat.\nNot(Chases(Lion, Squirrel, True)) ::: The lion does not chase the squirrel.\nIs(Lion, Big, True) ::: The lion is big.\nNot(Needs(Lion, Cow, True)) ::: The lion does not need the cow.\nVisits(Lion, Cow, True) ::: The lion visits the cow.\nChases(Squirrel, Cow, True) ::: The squirrel chases the cow.\nIs(Squirrel, Blue, True) ::: The squirrel is blue.\nNeeds(Squirrel, Cow, True) ::: The squirrel needs the cow.\nRules:\nIf something needs the cat then it visits the cat. ::: If something needs the cat then it visits the cat.\nIf something chases the cat and the cat visits the cow then the cow does not visit the cat. ::: If something chases the cat and the cat visits the cow then the cow does not visit the cat.\nIf something chases the squirrel and it visits the lion then the squirrel chases the cow. ::: If something chases the squirrel and it visits the lion then the squirrel chases the cow.\nIf the cow is not big then the cow does not chase the squirrel. ::: If the cow is not big then the cow does not chase the squirrel.\nIf something visits the cat then the cat is nice. ::: If something visits the cat then the cat is nice.\nIf the squirrel chases the cow then the cow does not need the squirrel. ::: If the squirrel chases the cow then the cow does not need the squirrel.\nIf something is nice then it needs the cow. ::: If something is nice then it needs the cow.\nIf something is kind and not big then it visits the squirrel. ::: If something is kind and not big then it visits the squirrel.\nIf something needs the cow then it needs the cat. ::: If something needs the cow then it needs the cat.\nQuery:\nNot(Needs(Cow, Squirrel, True)) ::: The cow does not need the squirrel.\n------\nProblem:\nThe cat is blue. The cat is furry. The cat is green. The cat is red. The cat is rough. The cat is white. The cat is young. The cat is quiet. The cat is furry. The cat is green. The cat is red. The cat is rough. The cat is white. The cat is young. The cat is quiet. The cat is furry. The cat is green. The cat is red. The cat is rough. The cat is white. The cat is young. The cat is quiet. The cat is furry. The cat is green. The cat is red. The cat is rough. The cat is white. The cat is young. The cat is quiet. The cat is furry. The cat is green. The cat is red. The cat is rough. The cat is white. The cat is young. The cat is quiet. The cat is furry. The cat is green. The cat is red. The cat is rough. The cat is white. The cat is young. The cat is quiet. The cat is furry. The cat is green. The cat is red"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-687_Q5",
    "context": "The cat is not red. The lion is kind. The mouse chases the cat. The mouse eats the cat. The mouse eats the lion. The mouse is young. The mouse sees the rabbit. The rabbit chases the lion. The rabbit is young. The rabbit sees the lion. If someone is nice and they see the mouse then they see the cat. If someone is kind then they eat the cat. If someone is rough then they chase the rabbit. If someone chases the cat then the cat is young. If someone sees the mouse then they do not eat the lion. Young people are kind. If someone eats the mouse and they see the rabbit then the rabbit eats the mouse. If someone is kind then they are nice. If someone is nice and not red then they are rough.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The rabbit is nice.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRed($x, bool) ::: Is x red?\nKind($x, bool) ::: Is x kind?\nNice($x, bool) ::: Is x nice?\nRough($x, bool) ::: Is x rough?\nYoung($x, bool) ::: Is x young?\nChases($x, $y, bool) ::: Does x chase y?\nEats($x, $y, bool) ::: Does x eat y?\nSees($x, $y, bool) ::: Does x see y?\nFacts:\nNotRed(Cat, True) ::: The cat is not red.\nKind(Lion, True) ::: The lion is kind.\nChases(Mouse, Cat, True) ::: The mouse chases the cat.\nEats(Mouse, Cat, True) ::: The mouse eats the cat.\nEats(Mouse, Lion, True) ::: The mouse eats the lion.\nYoung(Mouse, True) ::: The mouse is young.\nSees(Mouse, Rabbit, True) ::: The mouse sees the rabbit.\nChases(Rabbit, Lion, True) ::: The rabbit chases the lion.\nYoung(Rabbit, True) ::: The rabbit is young.\nSees(Rabbit, Lion, True) ::: The rabbit sees the lion.\nRules:\nNice($x, True) >>> Chases($x, Cat, True) ::: If someone is nice and they see the mouse then they see the cat.\nKind($x, True) >>> Eats($x, Cat, True) ::: If someone is kind then they eat the cat.\nRough($x, True) >>> Chases($x, Rabbit, True) ::: If someone is rough then they chase the rabbit.\nChases($x, Cat, True) >>> Young($x, True) ::: If someone chases the cat then the cat is young.\nNotSees($x, $y, True) >>> Eats($x, $y, True) ::: If someone sees the mouse then they do not eat the lion.\nYoung($x, True) >>> Kind($x, True) ::: Young people are kind.\nEats($x, Mouse, True) && Sees($x, Rabbit, True) >>> Eats($x, Rabbit, True) ::: If someone eats the mouse and they see the rabbit then the rabbit eats the mouse.\nKind($x, True) >>> Nice($x, True) ::: If someone is kind then they are nice.\nNotRed($x, True) >>> Rough($x, True) ::: If someone is not red then they are rough.\nQuery:\nNice(Rabbit, True) ::: The rabbit is nice.\n------\nProblem:\nThe cat is not red. The lion is kind. The mouse chases the cat. The mouse eats the cat. The mouse eats the lion. The mouse is young. The mouse sees the rabbit. The rabbit chases the lion. The rabbit is young. The rabbit sees the lion. If someone is nice and they see the mouse then they see the cat. If someone is kind then they eat the cat. If someone is rough then they chase the rabbit. If someone chases the cat then the cat is young. If someone sees the mouse then they do not eat the lion. Young people are kind. If someone eats the mouse and they see the rabbit then the rabbit eats the mouse. If someone is kind then they are nice. If someone is nice and not red then they are rough.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? The rabbit is nice.\n###\nPredicates:\nRed($x, bool) ::: Is x red?\nKind($x, bool) ::: Is x kind?\nNice($x, bool) ::: Is x nice?\nRough($x, bool) ::: Is x rough?\nYoung($x, bool) ::: Is x young?\nChases($x, $y, bool) ::: Does x chase y?\nEats($x, $y, bool) ::: Does x eat y?\nSees($x, $y, bool) ::: Does x see y?\nFacts:\nNotRed(Cat, True) ::: The cat is not red.\nKind(Lion, True) ::: The lion is kind.\nChases(Mouse, Cat, True) ::: The mouse chases the cat.\nE"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-564_Q5",
    "context": "The bear chases the tiger. The dog chases the bear. The dog needs the bear. The mouse chases the tiger. The mouse is red. The mouse needs the tiger. The tiger visits the dog. If the dog is cold and the dog visits the mouse then the dog needs the tiger. If something chases the dog then the dog is cold. All cold things are red. Red things are kind. If something chases the tiger and it is kind then it visits the tiger. If something is cold and it visits the tiger then the tiger is red. If the mouse is kind then the mouse is rough. If something visits the dog and the dog chases the bear then the bear is cold. If something is rough then it needs the mouse.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bear is red.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y) ::: Does x chase y?\nNeeds($x, $y) ::: Does x need y?\nVisits($x, $y) ::: Does x visit y?\nCold($x, bool) ::: Is x cold?\nRed($x, bool) ::: Is x red?\nKind($x, bool) ::: Is x kind?\nRough($x, bool) ::: Is x rough?\nFacts:\nChases(Bear, Tiger) ::: The bear chases the tiger.\nChases(Dog, Bear) ::: The dog chases the bear.\nNeeds(Dog, Bear) ::: The dog needs the bear.\nChases(Dog, Mouse) ::: The dog chases the mouse.\nMouse(Mouse, True) ::: The mouse is red.\nNeeds(Mouse, Tiger) ::: The mouse needs the tiger.\nVisits(Dog, Bear) ::: The dog visits the bear.\nRules:\nCold($x, True) >>> Red($x, True) ::: All cold things are red.\nRed($x, True) >>> Kind($x, True) ::: Red things are kind.\nChases($x, $y) >>> Cold($x, True) ::: If something chases the dog then the dog is cold.\nCold($x, True) >>> Visits($x, Tiger) ::: If something is cold and it visits the tiger then the tiger is red.\nChases($x, Tiger) && Kind($x, True) >>> Visits($x, Tiger) ::: If something chases the tiger and it is kind then it visits the tiger.\nChases($x, Tiger) >>> Red($x, True) ::: If something chases the tiger and it is kind then it visits the tiger.\nChases($x, Bear) && Visits($x, Mouse) >>> Needs($x, Tiger) ::: If something visits the dog and the dog chases the bear then the bear is cold.\nNeeds($x, Tiger) >>> Rough($x, True) ::: If something is rough then it needs the mouse.\nQuery:\nRed(Bear, True) ::: The bear is red.\n------\nProblem:\nThe dog is furry. The dog is green. The dog is red. The dog is rough. The dog is white. The dog is young. The dog is quiet. The dog is furry. The dog is green. The dog is red. The dog is rough. The dog is white. The dog is young. The dog is quiet. The dog is furry. The dog is green. The dog is red. The dog is rough. The dog is white. The dog is young. The dog is quiet. The dog is furry. The dog is green. The dog is red. The dog is rough. The dog is white. The dog is young. The dog is quiet. The dog is furry. The dog is green. The dog is red. The dog is rough. The dog is white. The dog is young. The dog is quiet. The dog is furry. The dog is green. The dog is red. The dog is rough. The dog is white. The dog is young. The dog is quiet. The dog is furry. The dog is green. The dog is red. The dog is rough. The dog is white. The dog is young. The dog is quiet. The dog is furry. The dog is green. The dog is red. The dog is rough. The dog is white. The dog is young. The dog is quiet. The dog is furry. The dog is green. The dog is red. The dog is rough. The dog is white. The dog is young. The dog is quiet. The dog is furry. The dog is green. The dog is red. The dog is rough. The dog is white. The dog is young. The dog is quiet. The dog is furry. The dog is green. The dog is red. The dog is rough. The dog is white. The dog is young. The dog is quiet. The dog is furry. The dog is green. The dog is red. The dog is rough. The dog is white. The dog is young. The dog is quiet. The dog is furry. The dog is green. The dog is red. The dog is rough. The dog is white. The dog is young. The dog is quiet. The dog is furry. The dog is green. The dog is red. The dog is rough. The dog is white. The dog is young."
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-513_Q16",
    "context": "Anne is blue. Anne is red. Anne is smart. Dave is big. Dave is cold. Dave is nice. Fiona is smart. Harry is blue. Harry is cold. Harry is nice. Harry is red. Harry is smart. Kind things are nice. All cold, nice things are blue. Cold things are kind. Smart things are cold. All blue, smart things are red.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Fiona is big.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue($x, bool) ::: Is x blue?\nRed($x, bool) ::: Is x red?\nSmart($x, bool) ::: Is x smart?\nBig($x, bool) ::: Is x big?\nCold($x, bool) ::: Is x cold?\nNice($x, bool) ::: Is x nice?\nKind($x, bool) ::: Is x kind?\nFacts:\nBlue(Anne, True) ::: Anne is blue.\nRed(Anne, True) ::: Anne is red.\nSmart(Anne, True) ::: Anne is smart.\nBig(Dave, True) ::: Dave is big.\nCold(Dave, True) ::: Dave is cold.\nNice(Dave, True) ::: Dave is nice.\nSmart(Fiona, True) ::: Fiona is smart.\nBlue(Harry, True) ::: Harry is blue.\nCold(Harry, True) ::: Harry is cold.\nNice(Harry, True) ::: Harry is nice.\nRed(Harry, True) ::: Harry is red.\nSmart(Harry, True) ::: Harry is smart.\nRules:\nKind($x, True) >>> Nice($x, True) ::: Kind things are nice.\nCold($x, True) >>> Kind($x, True) ::: Cold things are kind.\nSmart($x, True) >>> Cold($x, True) ::: Smart things are cold.\nBlue($x, True) && Smart($x, True) >>> Red($x, True) ::: All blue, smart things are red.\nQuery:\nBig(Fiona, True) ::: Fiona is big.\n------\nProblem:\nAnne is blue. Anne is red. Anne is smart. Dave is big. Dave is cold. Dave is nice. Fiona is smart. Harry is blue. Harry is cold. Harry is nice. Harry is red. Harry is smart. Kind things are nice. All cold, nice things are blue. Cold things are kind. Smart things are cold. All blue, smart things are red.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Fiona is big.\n###\nPredicates:\nBlue($x, bool) ::: Is x blue?\nRed($x, bool) ::: Is x red?\nSmart($x, bool) ::: Is x smart?\nBig($x, bool) ::: Is x big?\nCold($x, bool) ::: Is x cold?\nNice($x, bool) ::: Is x nice?\nKind($x, bool) ::: Is x kind?\nFacts:\nBlue(Anne, True) ::: Anne is blue.\nRed(Anne, True) ::: Anne is red.\nSmart(Anne, True) ::: Anne is smart.\nBig(Dave, True) ::: Dave is big.\nCold(Dave, True) ::: Dave is cold.\nNice(Dave, True) ::: Dave is nice.\nSmart(Fiona, True) ::: Fiona is smart.\nBlue(Harry, True) ::: Harry is blue.\nCold(Harry, True) ::: Harry is cold.\nNice(Harry, True) ::: Harry is nice.\nRed(Harry, True) ::: Harry is red.\nSmart(Harry, True) ::: Harry is smart.\nRules:\nKind($x, True) >>> Nice($x, True) ::: Kind things are nice.\nCold($x, True) >>> Kind($x, True) ::: Cold things are kind.\nSmart($x, True) >>> Cold($x, True) ::: Smart things are cold.\nBlue($x, True) && Smart($x, True) >>> Red($x, True) ::: All blue, smart things are red.\nQuery:\nBig(Fiona, True) ::: Fiona is big.\n------\nProblem:\nAnne is blue. Anne is red. Anne is smart. Dave is big. Dave is cold. Dave is nice. Fiona is smart. Harry is blue. Harry is cold. Harry is nice. Harry is red. Harry is smart. Kind things are nice. All cold, nice things are blue. Cold things are kind. Smart things are cold. All blue, smart things are red.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Fiona is big.\n###\nPred"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-626_Q7",
    "context": "The bald eagle chases the cow. The bald eagle chases the dog. The bald eagle likes the cow. The cow chases the mouse. The cow is red. The cow likes the dog. The cow likes the mouse. The dog is big. The dog is green. The mouse chases the bald eagle. The mouse eats the bald eagle. The mouse eats the cow. If someone is big and they like the dog then they are green. If someone is red then they eat the cow. If someone eats the cow then they like the bald eagle. If the dog chases the mouse and the mouse is red then the dog eats the mouse. If someone likes the cow then they are round. If someone is red then they chase the dog. If someone is big and they eat the bald eagle then the bald eagle is green. If the cow likes the bald eagle then the bald eagle is red. If someone eats the dog then they eat the mouse.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bald eagle is red.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y) ::: Does x chase y?\nLikes($x, $y) ::: Does x like y?\nEats($x, $y) ::: Does x eat y?\nIs($x, $y) ::: Is x y?\nBig($x, bool) ::: Is x big?\nGreen($x, bool) ::: Is x green?\nRed($x, bool) ::: Is x red?\nRound($x, bool) ::: Is x round?\nFacts:\nChases(BaldEagle, Cow) ::: The bald eagle chases the cow.\nChases(BaldEagle, Dog) ::: The bald eagle chases the dog.\nLikes(BaldEagle, Cow) ::: The bald eagle likes the cow.\nChases(Cow, Mouse) ::: The cow chases the mouse.\nIs(Cow, Red) ::: The cow is red.\nLikes(Cow, Dog) ::: The cow likes the dog.\nLikes(Cow, Mouse) ::: The cow likes the mouse.\nIs(Dog, Big) ::: The dog is big.\nIs(Dog, Green) ::: The dog is green.\nChases(Mouse, BaldEagle) ::: The mouse chases the bald eagle.\nEats(Mouse, BaldEagle) ::: The mouse eats the bald eagle.\nEats(Mouse, Cow) ::: The mouse eats the cow.\nRules:\nBig($x, True) && Likes($x, Dog) >>> Green($x, True) ::: If someone is big and they like the dog then they are green.\nIs($x, Red) >>> Eats($x, Cow) ::: If someone is red then they eat the cow.\nEats($x, Cow) >>> Likes($x, BaldEagle) ::: If someone eats the cow then they like the bald eagle.\nChases($x, Mouse) && Is($x, Red) >>> Eats($x, Mouse) ::: If the dog chases the mouse and the mouse is red then the dog eats the mouse.\nLikes($x, Cow) >>> Round($x, True) ::: If someone likes the cow then they are round.\nIs($x, Red) >>> Chases($x, Dog) ::: If someone is red then they chase the dog.\nBig($x, True) && Eats($x, BaldEagle) >>> Is($x, Green, True) ::: If the dog chases the mouse and the mouse is red then the dog eats the mouse.\nLikes($x, BaldEagle) >>> Is($x, Red, True) ::: If the cow likes the bald eagle then the bald eagle is red.\nEats($x, Dog) >>> Eats($x, Mouse) ::: If someone eats the dog then they eat the mouse.\nQuery:\nIs(BaldEagle, Red, True) ::: The bald eagle is red.\n------\nProblem:\nThe dog is furry. The dog is green. The dog is quiet. The dog is rough. The dog is white. The dog is young. The dog is furry. The dog is green. The dog is quiet. The dog is rough. The dog is white. The dog is young. The dog is furry. The dog is green. The dog is quiet. The dog is rough. The dog is white. The dog is young. The dog is furry. The dog is green. The dog is quiet. The dog is rough. The dog is white. The dog is young. The dog is furry. The dog is green. The dog is quiet. The dog is rough. The dog is white. The dog is young. The dog is furry. The dog is green. The dog is quiet. The dog is rough. The dog is white. The dog is young. The dog is furry. The dog is green. The dog is quiet. The dog is rough. The dog is white. The dog is young. The dog is furry. The dog is green. The dog is quiet. The dog is rough. The dog is white. The dog is young. The dog is furry. The dog is green. The dog is quiet. The dog is rough. The dog is white. The dog is young. The dog is furry. The dog is green. The dog is quiet. The dog is rough. The dog is white. The dog is young. The dog is furry. The dog is green. The dog is quiet. The dog is rough. The dog is"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-675_Q2",
    "context": "Bob is blue. Bob is kind. Charlie is round. Dave is blue. Dave is green. Dave is young. Fiona is round. Young people are not smart. All round people are green. If someone is kind and young then they are green. Blue people are green. If someone is kind and round then they are big. If someone is round and smart then they are young. Green, big people are young. Green people are round.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is not kind.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue($x, bool) ::: Is x blue?\nKind($x, bool) ::: Is x kind?\nRound($x, bool) ::: Is x round?\nYoung($x, bool) ::: Is x young?\nSmart($x, bool) ::: Is x smart?\nBig($x, bool) ::: Is x big?\nFacts:\nBlue(Bob, True) ::: Bob is blue.\nKind(Bob, True) ::: Bob is kind.\nRound(Charlie, True) ::: Charlie is round.\nBlue(Dave, True) ::: Dave is blue.\nGreen(Dave, True) ::: Dave is green.\nYoung(Dave, True) ::: Dave is young.\nRound(Fiona, True) ::: Fiona is round.\nYoung($x, False) >>> Smart($x, False) ::: Young people are not smart.\nRound($x, True) >>> Green($x, True) ::: All round people are green.\nKind($x, True) && Young($x, True) >>> Green($x, True) ::: If someone is kind and young then they are green.\nBlue($x, True) >>> Green($x, True) ::: Blue people are green.\nKind($x, True) && Round($x, True) >>> Big($x, True) ::: If someone is kind and round then they are big.\nRound($x, True) && Smart($x, True) >>> Young($x, True) ::: If someone is round and smart then they are young.\nGreen($x, True) >>> Big($x, True) ::: Green, big people are young.\nGreen($x, True) >>> Round($x, True) ::: Green people are round.\nQuery:\nKind(Bob, False) ::: Bob is not kind.\n------\nProblem:\nBob is blue. Bob is kind. Charlie is round. Dave is blue. Dave is green. Dave is young. Fiona is round. Young people are not smart. All round people are green. If someone is kind and young then they are green. Blue people are green. If someone is kind and round then they are big. If someone is round and smart then they are young. Green, big people are young. Green people are round.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Bob is not kind.\n###\nPredicates:\nBlue($x, bool) ::: Is x blue?\nKind($x, bool) ::: Is x kind?\nRound($x, bool) ::: Is x round?\nYoung($x, bool) ::: Is x young?\nSmart($x, bool) ::: Is x smart?\nBig($x, bool) ::: Is x big?\nFacts:\nBlue(Bob, True) ::: Bob is blue.\nKind(Bob, True) ::: Bob is kind.\nRound(Charlie, True) ::: Charlie is round.\nBlue(Dave, True) ::: Dave is blue.\nGreen(Dave, True) ::: Dave is green.\nYoung(Dave, True) ::: Dave is young.\nRound(Fiona, True) ::: Fiona is round.\nYoung($x, False) >>> Smart($x, False) ::: Young people are not smart.\nRound($x, True) >>> Green($x, True) ::: All round people are green.\nKind($x, True) && Young($x, True) >>> Green($x, True) ::: If someone is kind and young then they are green.\nBlue($x, True) >>> Green($x, True) ::: Blue people are green.\nKind($x, True) && Round($x, True) >>> Big($x, True) ::: If someone is kind and round then they are big.\nRound($x, True) && Smart($x, True) >>> Young($x, True) ::: If someone is round and smart then they are young.\nGreen($x, True) >>> Big($x, True) ::: Green, big people are young.\nGreen($x, True) >>> Round($x, True) ::: Green people are round.\nQuery:\nKind(Bob, False) ::: Bob is not kind.\n------\nProblem:\nBob is blue. Bob is kind. Charlie is round. Dave is blue. Dave is green. Dave is young. Fiona is round. Young people are not smart. All round people are green. If someone is kind and young then they are green"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-478_Q21",
    "context": "Charlie is nice. Charlie is rough. Dave is green. Gary is blue. Gary is kind. Gary is smart. Harry is white. Green things are kind. If Harry is smart and Harry is green then Harry is rough. All kind things are smart. Smart, green things are white. If Harry is blue and Harry is green then Harry is smart. All white, blue things are rough. If something is white then it is blue.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Harry is not nice.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNice($x, bool) ::: Is x nice?\nRough($x, bool) ::: Is x rough?\nGreen($x, bool) ::: Is x green?\nBlue($x, bool) ::: Is x blue?\nKind($x, bool) ::: Is x kind?\nSmart($x, bool) ::: Is x smart?\nWhite($x, bool) ::: Is x white?\nFacts:\nNice(Charlie, True) ::: Charlie is nice.\nRough(Charlie, True) ::: Charlie is rough.\nGreen(Dave, True) ::: Dave is green.\nBlue(Gary, True) ::: Gary is blue.\nKind(Gary, True) ::: Gary is kind.\nSmart(Gary, True) ::: Gary is smart.\nWhite(Harry, True) ::: Harry is white.\nRules:\nGreen($x, True) >>> Kind($x, True) ::: Green things are kind.\nHarry(Smart($x, True) && Green($x, True)) >>> Rough($x, True) ::: If Harry is smart and Harry is green then Harry is rough.\nKind($x, True) >>> Smart($x, True) ::: All kind things are smart.\nSmart($x, True) && Green($x, True) >>> White($x, True) ::: Smart, green things are white.\nHarry(Blue($x, True) && Green($x, True)) >>> Smart($x, True) ::: If Harry is blue and Harry is green then Harry is smart.\nWhite($x, True) >>> Blue($x, True) ::: All white, blue things are rough.\nWhite($x, True) >>> Harry($x, True) ::: If something is white then it is blue.\nQuery:\nNice(Harry, False) ::: Harry is not nice.\n------"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-571_Q8",
    "context": "The bald eagle is not blue. The bald eagle likes the dog. The bald eagle needs the tiger. The bald eagle does not see the dog. The bald eagle sees the tiger. The dog is blue. The dog sees the tiger. The rabbit is green. The rabbit is red. The rabbit sees the dog. The tiger needs the bald eagle. The tiger needs the dog. If someone needs the bald eagle and the bald eagle sees the tiger then they are rough. If someone needs the dog and they like the dog then they need the bald eagle. If someone likes the bald eagle then the bald eagle needs the dog. If someone is rough and they like the dog then the dog needs the tiger. If someone likes the dog and the dog is blue then they see the tiger. If someone needs the tiger and they do not see the dog then the tiger needs the bald eagle. If someone needs the bald eagle then they like the bald eagle.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bald eagle does not need the bald eagle.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBaldEagle($x, bool) ::: Is x a bald eagle?\nBlue($x, bool) ::: Is x blue?\nDog($x, bool) ::: Is x a dog?\nGreen($x, bool) ::: Is x green?\nLikes($x, $y, bool) ::: Does x like y?\nNeeds($x, $y, bool) ::: Does x need y?\nRed($x, bool) ::: Is x red?\nRough($x, bool) ::: Is x rough?\nSees($x, $y, bool) ::: Does x see y?\nFacts:\nBaldEagle(BaldEagle, True) ::: The bald eagle is a bald eagle.\nBlue(Dog, True) ::: The dog is blue.\nGreen(Rabbit, True) ::: The rabbit is green.\nGreen(Rabbit, True) ::: The rabbit is red.\nLikes(BaldEagle, Dog, True) ::: The bald eagle likes the dog.\nNeeds(BaldEagle, Tiger, True) ::: The bald eagle needs the tiger.\nNeeds(Dog, BaldEagle, True) ::: The dog needs the bald eagle.\nNeeds(Dog, Tiger, True) ::: The dog needs the tiger.\nNeeds(Tiger, BaldEagle, True) ::: The tiger needs the bald eagle.\nRed(Rabbit, True) ::: The rabbit is red.\nRough(BaldEagle, True) ::: The bald eagle is rough.\nSees(BaldEagle, Tiger, True) ::: The bald eagle sees the tiger.\nSees(Dog, Tiger, True) ::: The dog sees the tiger.\nRules:\nBaldEagle($x"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-534_Q14",
    "context": "The cow likes the rabbit. The cow needs the mouse. The mouse likes the squirrel. The rabbit needs the cow. The rabbit sees the cow. The squirrel is nice. The squirrel needs the cow. If someone needs the mouse and they need the rabbit then the rabbit needs the cow. If someone sees the rabbit then the rabbit needs the mouse. If someone needs the cow then they like the squirrel. If someone sees the squirrel then they see the rabbit. If someone is kind and they see the squirrel then they need the mouse. If someone likes the squirrel and the squirrel sees the cow then they are red. If someone needs the mouse then they see the squirrel.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The squirrel is red.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nLikes($x, $y, bool) ::: Does x like y?\nNeeds($x, $y, bool) ::: Does x need y?\nSees($x, $y, bool) ::: Does x see y?\nKind($x, bool) ::: Is x kind?\nRed($x, bool) ::: Is x red?\nFacts:\nLikes(Cow, Rabbit, True) ::: The cow likes the rabbit.\nNeeds(Cow, Mouse, True) ::: The cow needs the mouse.\nLikes(Mouse, Squirrel, True) ::: The mouse likes the squirrel.\nNeeds(Rabbit, Cow, True) ::: The rabbit needs the cow.\nSees(Rabbit, Cow, True) ::: The rabbit sees the cow.\nKind(Squirrel, True) ::: The squirrel is nice.\nNeeds(Squirrel, Cow, True) ::: The squirrel needs the cow.\nRules:\nNeeds($x, Mouse, True) && Needs($x, Rabbit, True) >>> Rabbit($x, True) ::: If someone needs the mouse and they need the rabbit then the rabbit needs the cow.\nSees($x, Rabbit, True) >>> Rabbit($x, True) ::: If someone sees the rabbit then the rabbit needs the mouse.\nNeeds($x, Cow, True) >>> Likes($x, Squirrel, True) ::: If someone needs the cow then they like the squirrel.\nSees($x, Squirrel, True) >>> Sees($x, Rabbit, True) ::: If someone sees the squirrel then they see the rabbit.\nKind($x, True) && Sees($x, Squirrel, True) >>> Needs($x, Mouse, True) ::: If someone is kind and"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-375_Q10",
    "context": "The bald eagle eats the dog. The bald eagle eats the tiger. The cat needs the bald eagle. The cat needs the dog. The cat sees the dog. The dog eats the tiger. The dog is red. The tiger is red. The tiger needs the bald eagle. The tiger needs the cat. If someone needs the tiger then the tiger needs the dog. If someone eats the cat and the cat sees the tiger then the cat eats the tiger. If someone needs the dog then the dog needs the tiger. Blue people are red. If someone is red and they see the bald eagle then the bald eagle is big. Red people are young. If someone sees the tiger then they see the cat. If someone needs the dog then they are blue. If someone is blue and young then they see the bald eagle.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The tiger does not see the bald eagle.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y, bool) ::: Does x eat y?\nNeeds($x, $y, bool) ::: Does x need y?\nSees($x, $y, bool) ::: Does x see y?\nIs($x, $y, bool) ::: Is x y?\nBig($x, bool) ::: Is x big?\nBlue($x, bool) ::: Is x blue?\nRed($x, bool) ::: Is x red?\nYoung($x, bool) ::: Is x young?\nFacts:\nEats(BaldEagle, Dog, True) ::: The bald eagle eats the dog.\nEats(BaldEagle, Tiger, True) ::: The bald eagle eats the tiger.\nNeeds(Cat, BaldEagle, True) ::: The cat needs the bald eagle.\nNeeds(Cat, Dog, True) ::: The cat needs the dog.\nSees(Cat, Dog, True) ::: The cat sees the dog.\nEats(Dog, Tiger, True) ::: The dog eats the tiger.\nIs(Dog, Red, True) ::: The dog is red.\nIs(Tiger, Red, True) ::: The tiger is red.\nNeeds(Tiger, BaldEagle, True) ::: The tiger needs the bald eagle.\nNeeds(Tiger, Cat, True) ::: The tiger needs the cat.\nIf($x, $y, $z, bool) ::: If $x then $y.\nIf($x, $y, $z, True) ::: If someone needs the tiger then the tiger needs the dog.\nIf($x, $y, $z, True) ::: If someone eats the cat and the cat sees the tiger then the cat eats the tiger.\nIf($x"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-326_Q10",
    "context": "The cow does not see the lion. The lion does not eat the cow. The lion eats the rabbit. The lion is not big. The lion is kind. The lion is rough. The lion sees the squirrel. The rabbit is not nice. The squirrel eats the lion. The squirrel is big. The squirrel is kind. The squirrel needs the lion. The squirrel sees the lion. The squirrel sees the rabbit. If someone needs the squirrel then they see the squirrel. If someone sees the lion and they see the squirrel then the squirrel eats the cow. If the cow sees the squirrel and the cow does not need the rabbit then the rabbit sees the lion. Rough people are nice. If someone needs the rabbit and the rabbit sees the squirrel then the squirrel does not need the lion. If someone is big and nice then they need the squirrel. If someone is kind then they are rough. Nice people are round.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The squirrel does not see the squirrel.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nSee($x, $y, bool) ::: Does x see y?\nEat($x, $y, bool) ::: Does x eat y?\nNeed($x, $y, bool) ::: Does x need y?\nBig($x, bool) ::: Is x big?\nKind($x, bool) ::: Is x kind?\nRough($x, bool) ::: Is x rough?\nNice($x, bool) ::: Is x nice?\nRound($x, bool) ::: Is x round?\nFacts:\nSee(Cow, Lion, False) ::: The cow does not see the lion.\nEat(Lion, Cow, False) ::: The lion does not eat the cow.\nEat(Lion, Rabbit, True) ::: The lion eats the rabbit.\nKind(Lion, True) ::: The lion is kind.\nRough(Lion, True) ::: The lion is rough.\nSee(Lion, Squirrel, True) ::: The lion sees the squirrel.\nRabbit(Rabbit, True) ::: The rabbit is not nice.\nSquirrel(Squirrel, True) ::: The squirrel eats the lion.\nBig(Squirrel, True) ::: The squirrel is big.\nKind(Squirrel, True) ::: The squirrel is kind.\nNeed(Squirrel, Lion, True) ::: The squirrel needs the lion.\nSee(Squirrel, Lion, True) ::: The squirrel sees the lion.\nSee(Squirrel, Rabbit, True) ::: The squirrel sees the rabbit.\nIf(See(x, Lion), See(x, Squirrel), Squirrel(x, True)) ::: If someone sees the lion and they see the squirrel then the squirrel eats"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-373_Q1",
    "context": "Bob is kind. Charlie is cold. Charlie is quiet. Erin is red. Fiona is furry. Fiona is not kind. Fiona is young. If someone is furry then they are smart. If someone is young then they are quiet. If someone is red then they are furry. If Fiona is red then Fiona is smart. If Erin is red and Erin is cold then Erin is not young. If Bob is cold then Bob is smart. If someone is smart then they are cold. If Erin is red and Erin is not young then Erin is not kind. If Erin is red and Erin is not furry then Erin is quiet.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Fiona is furry.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nKind($x, bool) ::: Is x kind?\nCold($x, bool) ::: Is x cold?\nQuiet($x, bool) ::: Is x quiet?\nRed($x, bool) ::: Is x red?\nFurry($x, bool) ::: Is x furry?\nSmart($x, bool) ::: Is x smart?\nYoung($x, bool) ::: Is x young?\nFacts:\nKind(Bob, True) ::: Bob is kind.\nCold(Charlie, True) ::: Charlie is cold.\nQuiet(Charlie, True) ::: Charlie is quiet.\nRed(Erin, True) ::: Erin is red.\nFurry(Fiona, True) ::: Fiona is furry.\nNot(Kind(Fiona, True)) ::: Fiona is not kind.\nYoung(Fiona, True) ::: Fiona is young.\nRules:\nFurry($x, True) >>> Smart($x, True) ::: If someone is furry then they are smart.\nYoung($x, True) >>> Quiet($x, True) ::: If someone is young then they are quiet.\nRed($x, True) >>> Furry($x, True) ::: If someone is red then they are furry.\nRed($x, True) && Red($x, True) && Cold($x, True) >>> Not(Young($x, True)) ::: If Erin is red and Erin is cold then Erin is not young.\nCold($x, True) >>> Smart($x, True) ::: If Bob is cold then Bob is smart.\nSmart($x, True) >>> Cold($x, True) ::: If someone is smart then they are cold.\nRed($x, True) && Not(Young($x, True)) >>> Not(Kind($x, True))"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-428_Q22",
    "context": "The cat likes the tiger. The dog is cold. The dog is nice. The dog likes the mouse. The mouse chases the tiger. The mouse does not eat the cat. The tiger chases the cat. If the cat likes the dog then the dog does not eat the cat. If something is kind then it chases the cat. If something likes the dog then it likes the tiger. If the tiger is nice and the tiger is not young then the tiger does not chase the mouse. If something likes the tiger then it eats the dog. If something eats the dog then the dog likes the tiger. If something eats the dog and it likes the mouse then the mouse is kind. If something eats the cat then the cat does not chase the dog. If something is kind and it does not eat the cat then the cat does not eat the mouse.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cat likes the mouse.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nLikes($x, $y, bool) ::: Does x like y?\nCold($x, bool) ::: Is x cold?\nNice($x, bool) ::: Is x nice?\nEats($x, $y, bool) ::: Does x eat y?\nChases($x, $y, bool) ::: Does x chase y?\nKind($x, bool) ::: Is x kind?\nYoung($x, bool) ::: Is x young?\nFacts:\nLikes(Cat, Tiger, True) ::: The cat likes the tiger.\nCold(Dog, True) ::: The dog is cold.\nNice(Dog, True) ::: The dog is nice.\nLikes(Dog, Mouse, True) ::: The dog likes the mouse.\nChases(Mouse, Tiger, True) ::: The mouse chases the tiger.\nDoesNotEat(Mouse, Cat, True) ::: The mouse does not eat the cat.\nChases(Tiger, Cat, True) ::: The tiger chases the cat.\nIf(Likes(Cat, Dog), DoesNotEat(Dog, Cat), True) ::: If the cat likes the dog then the dog does not eat the cat.\nIf(Kind($x), Chases($x, Cat), True) ::: If something is kind then it chases the cat.\nIf(Likes($x, Dog), Likes($x, Tiger), True) ::: If something likes the dog then it likes the tiger.\nIf(Nice($x) && Not(Young($x)), DoesNotChase($x, Mouse), True) ::: If the tiger is nice and the tiger is not young then the tiger does not chase the mouse.\nIf(Likes($x, Tiger), Eats($x, Dog), True) ::: If something likes the"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-219_Q13",
    "context": "Charlie is not quiet. Dave is big. Dave is furry. Erin is cold. Erin is not green. Erin is not kind. Fiona is quiet. Big things are young. Young, cold things are big. Quiet things are big. All young things are cold. If something is big and not furry then it is cold. If something is cold then it is not kind. If something is cold and big then it is quiet. If Fiona is cold and Fiona is not quiet then Fiona is kind. If something is quiet and not kind then it is green.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Charlie is not big.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nQuiet($x, bool) ::: Is x quiet?\nFurry($x, bool) ::: Is x furry?\nGreen($x, bool) ::: Is x green?\nKind($x, bool) ::: Is x kind?\nCold($x, bool) ::: Is x cold?\nBig($x, bool) ::: Is x big?\nYoung($x, bool) ::: Is x young?\nFacts:\nQuite(Charlie, False) ::: Charlie is not quiet.\nBig(Dave, True) ::: Dave is big.\nFurry(Dave, True) ::: Dave is furry.\nCold(Erin, True) ::: Erin is cold.\nNotGreen(Erin, True) ::: Erin is not green.\nNotKind(Erin, True) ::: Erin is not kind.\nQuite(Fiona, True) ::: Fiona is quiet.\nRules:\nYoung($x, True) >>> Big($x, True) ::: Big things are young.\nYoung($x, True) >>> Cold($x, True) ::: Young, cold things are big.\nQuite($x, True) >>> Big($x, True) ::: Quiet things are big.\nAll($x, True) >>> Cold($x, True) ::: All young things are cold.\nNotFurry($x, True) >>> Cold($x, True) ::: If something is big and not furry then it is cold.\nCold($x, True) >>> NotKind($x, True) ::: If something is cold then it is not kind.\nCold($x, True) && Big($x, True) >>> Quite($x, True) ::: If something is cold and big then it is quiet.\nNotQuite($x, True) && NotKind($x, True) >>> Green($x, True"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1293_Q10",
    "context": "Anne is cold. Anne is green. Bob is nice. Bob is smart. Charlie is kind. Charlie is nice. Charlie is red. Charlie is smart. Charlie is young. Gary is kind. Gary is red. Gary is young. Green things are red. If something is nice and green then it is smart. All red things are young. If Bob is kind and Bob is red then Bob is cold. If Gary is green and Gary is nice then Gary is kind. All smart, red things are kind. All young, red things are nice. If something is kind then it is cold.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Anne is not smart.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nGreen($x, bool) ::: Is x green?\nNice($x, bool) ::: Is x nice?\nKind($x, bool) ::: Is x kind?\nRed($x, bool) ::: Is x red?\nSmart($x, bool) ::: Is x smart?\nYoung($x, bool) ::: Is x young?\nFacts:\nCold(Anne, True) ::: Anne is cold.\nGreen(Anne, True) ::: Anne is green.\nNice(Bob, True) ::: Bob is nice.\nSmart(Bob, True) ::: Bob is smart.\nKind(Charlie, True) ::: Charlie is kind.\nNice(Charlie, True) ::: Charlie is nice.\nRed(Charlie, True) ::: Charlie is red.\nSmart(Charlie, True) ::: Charlie is smart.\nYoung(Charlie, True) ::: Charlie is young.\nKind(Gary, True) ::: Gary is kind.\nRed(Gary, True) ::: Gary is red.\nYoung(Gary, True) ::: Gary is young.\nRules:\nGreen($x, True) >>> Red($x, True) ::: Green things are red.\nNice($x, True) && Green($x, True) >>> Smart($x, True) ::: If something is nice and green then it is smart.\nRed($x, True) >>> Young($x, True) ::: All red things are young.\nKind($x, True) && Red($x, True) >>> Cold($x, True) ::: If Bob is kind and Bob is red then Bob is cold.\nGreen($x, True) && Nice($x, True) >>> Kind($x, True) ::: If Gary is green and Gary is nice then"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-823_Q1",
    "context": "Charlie is cold. Erin is big. Erin is not blue. Erin is green. Erin is round. Erin is young. Fiona is big. Fiona is not blue. Fiona is cold. Fiona is green. Fiona is rough. Fiona is round. Fiona is young. Harry is cold. If something is big then it is rough. All blue, big things are rough. Blue, young things are rough. Cold, rough things are green. If something is young and blue then it is cold. All cold, green things are young. All young, round things are not blue. Young things are round. If Harry is cold then Harry is big.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Charlie is cold.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nBig($x, bool) ::: Is x big?\nBlue($x, bool) ::: Is x blue?\nGreen($x, bool) ::: Is x green?\nRough($x, bool) ::: Is x rough?\nRound($x, bool) ::: Is x round?\nYoung($x, bool) ::: Is x young?\nFacts:\nCold(Charlie, True) ::: Charlie is cold.\nBig(Erin, True) ::: Erin is big.\nNot(Blue(Erin, True)) ::: Erin is not blue.\nGreen(Erin, True) ::: Erin is green.\nRound(Erin, True) ::: Erin is round.\nYoung(Erin, True) ::: Erin is young.\nBig(Fiona, True) ::: Fiona is big.\nNot(Blue(Fiona, True)) ::: Fiona is not blue.\nCold(Fiona, True) ::: Fiona is cold.\nGreen(Fiona, True) ::: Fiona is green.\nRough(Fiona, True) ::: Fiona is rough.\nRound(Fiona, True) ::: Fiona is round.\nYoung(Fiona, True) ::: Fiona is young.\nCold(Harry, True) ::: Harry is cold.\nRules:\nBig($x, True) >>> Rough($x, True) ::: If something is big then it is rough.\nBlue($x, True) && Big($x, True) >>> Rough($x, True) ::: All blue, big things are rough.\nBlue($x, True) && Young($x, True) >>> Cold($x, True) ::: Blue, young things are rough.\nCold($x, True) && Rough($x, True) >>> Green"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1189_Q7",
    "context": "Anne is nice. Erin is green. Erin is quiet. Gary is quiet. Gary is smart. Harry is kind. Harry is smart. If someone is kind and big then they are nice. If Gary is quiet and Gary is big then Gary is smart. If someone is cold then they are green. If Harry is smart and Harry is cold then Harry is green. Quiet people are big. If someone is nice and big then they are cold. All nice, quiet people are cold. If Gary is nice then Gary is kind. Smart people are quiet.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Harry is nice.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNice($x, bool) ::: Is x nice?\nGreen($x, bool) ::: Is x green?\nQuiet($x, bool) ::: Is x quiet?\nBig($x, bool) ::: Is x big?\nKind($x, bool) ::: Is x kind?\nSmart($x, bool) ::: Is x smart?\nCold($x, bool) ::: Is x cold?\nFacts:\nNice(Anne, True) ::: Anne is nice.\nGreen(Erin, True) ::: Erin is green.\nQuiet(Erin, True) ::: Erin is quiet.\nQuiet(Gary, True) ::: Gary is quiet.\nSmart(Gary, True) ::: Gary is smart.\nKind(Harry, True) ::: Harry is kind.\nSmart(Harry, True) ::: Harry is smart.\nRules:\nKind($x, True) && Big($x, True) >>> Nice($x, True) ::: If someone is kind and big then they are nice.\nQuiet($x, True) >>> Big($x, True) ::: Quiet people are big.\nGary(Quiet($x, True) && Big($x, True) >>> Smart($x, True) ::: If Gary is quiet and Gary is big then Gary is smart.\nCold($x, True) >>> Green($x, True) ::: If someone is cold then they are green.\nSmart($x, True) && Cold($x, True) >>> Green($x, True) ::: If Harry is smart and Harry is cold then Harry is green.\nNice($x, True) && Big($x, True) >>> Cold($x, True) ::: If someone is nice and big then they are cold.\nAll(Nice($x, True) && Quiet($x, True) >>> Cold($x, True) ::: All nice, quiet people are cold.\nGary(Nice($x, True) >>> Kind($x, True) ::: If Gary is nice then Gary is kind.\nSmart($x, True) >>> Quiet($x, True) ::: Smart people are quiet.\nQuery:\nNice(Harry, True) ::: Harry is nice.\n------"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-191_Q4",
    "context": "The bear does not chase the cow. The bear is big. The bear is cold. The bear is young. The bear likes the dog. The bear likes the mouse. The cow does not chase the dog. The cow likes the mouse. The dog does not chase the bear. The dog does not eat the cow. The dog is not cold. The dog does not like the bear. The dog likes the cow. The dog does not like the mouse. The mouse is kind. The mouse likes the bear. If someone eats the bear and the bear likes the cow then the bear likes the dog. If someone is kind then they chase the mouse. If someone eats the cow then the cow is young. If someone likes the mouse then they eat the dog. If the dog likes the mouse and the mouse does not like the dog then the mouse does not like the cow. If the cow is young and the bear does not chase the cow then the cow is kind. If someone eats the cow then the cow eats the mouse. If someone eats the dog then they eat the cow.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cow does not eat the dog.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChase($x, $y, bool) ::: Does x chase y?\nEat($x, $y, bool) ::: Does x eat y?\nLike($x, $y, bool) ::: Does x like y?\nBig($x, bool) ::: Is x big?\nCold($x, bool) ::: Is x cold?\nYoung($x, bool) ::: Is x young?\nKind($x, bool) ::: Is x kind?\nFacts:\nChase(Bear, Cow, False) ::: The bear does not chase the cow.\nBig(Bear, True) ::: The bear is big.\nCold(Bear, True) ::: The bear is cold.\nYoung(Bear, True) ::: The bear is young.\nLike(Bear, Dog, True) ::: The bear likes the dog.\nLike(Bear, Mouse, True) ::: The bear likes the mouse.\nChase(Cow, Dog, False) ::: The cow does not chase the dog.\nLike(Cow, Mouse, True) ::: The cow likes the mouse.\nChase(Dog, Bear, False) ::: The dog does not chase the bear.\nEat(Dog, Cow, False) ::: The dog does not eat the cow.\nCold(Dog, False) ::: The dog is not cold.\nLike(Dog, Bear, False) ::: The dog does not like the bear.\nLike(Dog, Cow, True) ::: The dog likes the cow.\nLike(Dog, Mouse, False) ::: The dog does not like the mouse.\nKind(Mouse, True) ::: The mouse is kind.\nLike(Mouse, Bear, True) ::: The mouse likes the bear.\nRules:\nEat($x, $y, True) >>> Like($x, $y, True) ::: If someone eats the bear and the bear likes the cow then the bear likes the dog.\nKind($x, True) >>> Chase($x, Mouse, True) ::: If someone is kind then they chase the mouse.\nEat($x, Cow) >>> Young($x, True) ::: If someone eats the cow then the cow is young.\nLike($x,"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-74_Q1",
    "context": "The cat chases the rabbit. The mouse chases the cat. The mouse is red. The mouse is round. The rabbit is red. The rabbit sees the mouse. The squirrel chases the cat. The squirrel chases the mouse. The squirrel is kind. The squirrel sees the rabbit. If something is red then it sees the mouse. If the mouse sees the squirrel then the squirrel eats the cat. If something chases the squirrel and it is red then the squirrel eats the rabbit. If something eats the cat and it chases the cat then it sees the mouse. If something sees the mouse then it sees the squirrel. If something eats the mouse and it sees the mouse then the mouse sees the squirrel. If something eats the rabbit then it sees the rabbit. If something sees the squirrel and it sees the rabbit then it eats the squirrel.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The squirrel is kind.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nRed($x, bool) ::: Is x red?\nRound($x, bool) ::: Is x round?\nSees($x, $y, bool) ::: Does x see y?\nEats($x, $y, bool) ::: Does x eat y?\nKind($x, bool) ::: Is x kind?\nFacts:\nChases(Cat, Rabbit, True) ::: The cat chases the rabbit.\nChases(Mouse, Cat, True) ::: The mouse chases the cat.\nRed(Mouse, True) ::: The mouse is red.\nRound(Mouse, True) ::: The mouse is round.\nRed(Rabbit, True) ::: The rabbit is red.\nSees(Mouse, Rabbit, True) ::: The rabbit sees the mouse.\nChases(Squirrel, Cat, True) ::: The squirrel chases the cat.\nChases(Squirrel, Mouse, True) ::: The squirrel chases the mouse.\nKind(Squirrel, True) ::: The squirrel is kind.\nSees(Squirrel, Rabbit, True) ::: The squirrel sees the rabbit.\nRules:\nRed($x, True) >>> Sees($x, Mouse, True) ::: If something is red then it sees the mouse.\nSees(Mouse, Squirrel, True) >>> Eats(Squirrel, Cat, True) ::: If the mouse sees the squirrel then the squirrel eats the cat.\nChases($x, Squirrel, True) && Red($x, True) >>> Eats(Squirrel, Rabbit, True) ::: If something chases the squirrel and it is red then the squirrel eats the rabbit.\nEats(Cat, $x, True) && Chases($x, Cat, True) >>> Sees($x, Mouse, True) ::: If something eats the cat and it chases the cat then it sees the mouse.\nSees($x, Mouse) >>> Sees($x, Squirrel) ::: If something sees the mouse then it sees the squirrel.\nE"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-826_Q8",
    "context": "Anne is big. Anne is quiet. Anne is red. Charlie is cold. Charlie is furry. Charlie is quiet. Charlie is red. Charlie is rough. Charlie is young. Dave is big. Dave is cold. Dave is furry. Dave is red. Dave is rough. Dave is young. Gary is cold. Rough, quiet things are furry. Furry things are quiet. If Charlie is rough then Charlie is quiet. If Charlie is red then Charlie is cold. If something is cold then it is red. If something is red then it is quiet. If Gary is red and Gary is quiet then Gary is big. All big things are rough. All cold things are red.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is not big.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nCold($x, bool) ::: Is x cold?\nFurry($x, bool) ::: Is x furry?\nQuiet($x, bool) ::: Is x quiet?\nRed($x, bool) ::: Is x red?\nRough($x, bool) ::: Is x rough?\nYoung($x, bool) ::: Is x young?\nFacts:\nBig(Anne, True) ::: Anne is big.\nQuiet(Anne, True) ::: Anne is quiet.\nRed(Anne, True) ::: Anne is red.\nCold(Charlie, True) ::: Charlie is cold.\nFurry(Charlie, True) ::: Charlie is furry.\nQuiet(Charlie, True) ::: Charlie is quiet.\nRed(Charlie, True) ::: Charlie is red.\nRough(Charlie, True) ::: Charlie is rough.\nYoung(Charlie, True) ::: Charlie is young.\nBig(Dave, True) ::: Dave is big.\nCold(Dave, True) ::: Dave is cold.\nFurry(Dave, True) ::: Dave is furry.\nRed(Dave, True) ::: Dave is red.\nRough(Dave, True) ::: Dave is rough.\nYoung(Dave, True) ::: Dave is young.\nCold(Gary, True) ::: Gary is cold.\nRough($x, True) && Quiet($x, True) >>> Furry($x, True) ::: Rough, quiet things are furry.\nFurry($x, True) >>> Quiet($x, True) ::: Furry things are quiet.\nCharlie(Rough, True) >>> Quiet(Charlie, True) ::: If Charlie is rough then Charlie is quiet.\nCharlie(Red, True) >>> Cold(Charlie, True) ::: If Charlie is red then Charlie is cold.\nCold($x, True) >>> Red($x, True) ::: If something is cold then it is red.\nRed($x, True) >>> Quiet($x, True) ::"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-1021_Q21",
    "context": "The bear is green. The bear is rough. The lion is green. The lion is kind. The lion does not like the bear. The lion does not like the rabbit. The lion likes the tiger. The lion needs the rabbit. The lion sees the bear. The lion sees the tiger. The rabbit is rough. The tiger needs the lion. If someone needs the tiger and the tiger does not need the rabbit then the rabbit does not like the tiger. If the bear does not like the lion then the bear is not kind. If someone sees the lion then they are rough. If someone needs the bear then they are big. If someone needs the tiger then the tiger is green. If someone sees the rabbit then they need the tiger. If someone is green then they see the rabbit. If someone needs the tiger and the tiger likes the lion then the tiger is kind. If someone needs the lion and the lion does not need the tiger then the tiger likes the lion.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The lion does not need the lion.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen($x, bool) ::: Is x green?\nRough($x, bool) ::: Is x rough?\nKind($x, bool) ::: Is x kind?\nLikes($x, $y, bool) ::: Does x like y?\nNeeds($x, $y, bool) ::: Does x need y?\nSees($x, $y, bool) ::: Does x see y?\nBig($x, bool) ::: Is x big?\nFacts:\nGreen(Bear, True) ::: The bear is green.\nRough(Bear, True) ::: The bear is rough.\nGreen(Lion, True) ::: The lion is green.\nKind(Lion, True) ::: The lion is kind.\nLikes(Lion, Bear, False) ::: The lion does not like the bear.\nLikes(Lion, Rabbit, False) ::: The lion does not like the rabbit.\nLikes(Lion, Tiger, True) ::: The lion likes the tiger.\nNeeds(Lion, Rabbit, True) ::: The lion needs the rabbit.\nSees(Lion, Bear, True) ::: The lion sees the bear.\nSees(Lion, Tiger, True) ::: The lion sees the tiger.\nRough(Rabbit, True) ::: The rabbit is rough.\nNeeds(Tiger, Lion, True) ::: The tiger needs the lion.\nRules:\nGreen($x, True) >>> Sees($x, Rabbit, True) ::: If someone is green then they see the rabbit.\nNeeds($x, Tiger, True) >>> Likes($x, Tiger, True) ::: If someone needs the tiger and the tiger does not need the rabbit then the rabbit does not like the tiger.\nNeeds($x, Bear, True) >>> Kind($x, True) ::: If someone needs the bear then they are big.\nNeeds($x, Tiger, True) >>> Green($x, True) ::: If someone needs the tiger then the tiger is green.\nSees($x, Lion, True) >>> Rough($x, True) ::: If someone sees the lion then"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-220_Q9",
    "context": "Anne is quiet. Anne is smart. Charlie is blue. Charlie is furry. Charlie is smart. Gary is not furry. Harry is blue. Harry is furry. Harry is nice. Harry is smart. If someone is quiet then they are round. If someone is round then they are blue. If Anne is white then Anne is nice. All blue, quiet people are white. If Harry is not round then Harry is not white. White, quiet people are nice. If someone is nice and smart then they are furry. If someone is furry then they are smart. All white, furry people are smart.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Anne is nice.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nQuiet($x, bool) ::: Is x quiet?\nSmart($x, bool) ::: Is x smart?\nBlue($x, bool) ::: Is x blue?\nRound($x, bool) ::: Is x round?\nNice($x, bool) ::: Is x nice?\nFurry($x, bool) ::: Is x furry?\nFacts:\nQuite(Anne, True) ::: Anne is quiet.\nSmart(Anne, True) ::: Anne is smart.\nBlue(Charlie, True) ::: Charlie is blue.\nFurry(Charlie, True) ::: Charlie is furry.\nSmart(Charlie, True) ::: Charlie is smart.\nNotFurry(Gary, True) ::: Gary is not furry.\nBlue(Harry, True) ::: Harry is blue.\nFurry(Harry, True) ::: Harry is furry.\nNice(Harry, True) ::: Harry is nice.\nSmart(Harry, True) ::: Harry is smart.\nRules:\nQuite($x, True) >>> Round($x, True) ::: If someone is quiet then they are round.\nRound($x, True) >>> Blue($x, True) ::: If someone is round then they are blue.\nWhite($x, True) >>> Nice($x, True) ::: If Anne is white then Anne is nice.\nQuite($x, True) && Blue($x, True) >>> White($x, True) ::: All blue, quiet people are white.\nNotRound($x, True) >>> NotWhite($x, True) ::: If Harry is not round then Harry is not white.\nWhite($x, True) && Quite($x, True) >>> Nice($x, True) ::: White, quiet people are nice.\nNice($x, True) && Smart($x, True) >>> Furry($x, True) ::: If someone is nice and smart then they are furry.\nFurry($x, True) >>> Smart($x, True) ::: If someone is furry then they are smart.\nWhite($x, True) && Furry($x, True) >>> Smart($x, True) ::: All white"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-921_Q18",
    "context": "Anne is cold. Anne is furry. Anne is nice. Anne is red. Anne is white. Charlie is white. Fiona is cold. Fiona is furry. Fiona is nice. Fiona is red. Harry is big. Harry is furry. Harry is red. Harry is white. If Anne is big and Anne is round then Anne is furry. If something is furry then it is cold. All nice things are round. If Charlie is round then Charlie is big. If something is big and red then it is furry. If Charlie is white then Charlie is nice. If something is big and red then it is furry. All big things are furry. If something is round then it is nice.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Anne is big.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nFurry($x, bool) ::: Is x furry?\nNice($x, bool) ::: Is x nice?\nRed($x, bool) ::: Is x red?\nWhite($x, bool) ::: Is x white?\nBig($x, bool) ::: Is x big?\nRound($x, bool) ::: Is x round?\nFacts:\nCold(Anne, True) ::: Anne is cold.\nFurry(Anne, True) ::: Anne is furry.\nNice(Anne, True) ::: Anne is nice.\nRed(Anne, True) ::: Anne is red.\nWhite(Anne, True) ::: Anne is white.\nWhite(Charlie, True) ::: Charlie is white.\nCold(Fiona, True) ::: Fiona is cold.\nFurry(Fiona, True) ::: Fiona is furry.\nNice(Fiona, True) ::: Fiona is nice.\nRed(Fiona, True) ::: Fiona is red.\nBig(Harry, True) ::: Harry is big.\nFurry(Harry, True) ::: Harry is furry.\nRed(Harry, True) ::: Harry is red.\nWhite(Harry, True) ::: Harry is white.\nRules:\nFurry($x, True) >>> Cold($x, True) ::: If Anne is big and Anne is round then Anne is furry.\nFurry($x, True) >>> Cold($x, True) ::: If something is furry then it is cold.\nNice($x, True) >>> Round($x, True) ::: All nice things are round.\nRound($x, True) >>> Big($x, True) ::: If Charlie is round then Charlie is big.\nFurry($x, True) && Red($x, True) >>> Big($x, True) ::: If something is big and red then it is furry.\nWhite($x, True) >>> Nice($x, True) ::: If Charlie is white then Charlie is nice.\nFurry($x, True) && Red($x, True) >>> Big($x, True"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-588_Q3",
    "context": "The bald eagle is young. The bald eagle likes the bear. The bear is blue. The cat is blue. The cat likes the bald eagle. The cat sees the cow. The cat visits the bald eagle. The cow is blue. The cow is nice. The cow is round. The cow does not like the bear. The cow sees the bear. If someone sees the bald eagle then the bald eagle sees the cow. If someone sees the cow then they see the cat. If someone sees the cat then they like the cow. If someone sees the cat then the cat sees the bald eagle. If someone likes the cow and the cow is round then the cow does not see the bald eagle.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cat sees the cat.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nYoung($x, bool) ::: Is x young?\nLikes($x, $y, bool) ::: Does x like y?\nSees($x, $y, bool) ::: Does x see y?\nVisits($x, $y, bool) ::: Does x visit y?\nNice($x, bool) ::: Is x nice?\nRound($x, bool) ::: Is x round?\nFacts:\nYoung(BaldEagle, True) ::: The bald eagle is young.\nLikes(BaldEagle, Bear, True) ::: The bald eagle likes the bear.\nBlue(Bear, True) ::: The bear is blue.\nBlue(Cat, True) ::: The cat is blue.\nLikes(Cat, BaldEagle, True) ::: The cat likes the bald eagle.\nSees(Cat, Cow, True) ::: The cat sees the cow.\nVisits(Cat, BaldEagle, True) ::: The cat visits the bald eagle.\nBlue(Cow, True) ::: The cow is blue.\nNice(Cow, True) ::: The cow is nice.\nRound(Cow, True) ::: The cow is round.\nDoesNotLike(Cow, Bear, True) ::: The cow does not like the bear.\nSees(Cow, Bear, True) ::: The cow sees the bear.\nIf($x, $y, $z, bool) ::: If $x then $y.\nRules:\nIf(Sees($x, BaldEagle), Sees(BaldEagle, $x), True) ::: If someone sees the bald eagle then the bald eagle sees the cow.\nIf(Sees($x, Cow), Sees($x, Cat), True) ::: If someone sees the cow then they see the cat.\nIf(Sees($x, Cat), Likes($x, Cow), True) ::: If someone sees the cat then they like the cow.\nIf(Sees($x, Cat), Sees(Cat, BaldEagle), True) ::: If someone sees the cat then the cat sees the bald eagle.\nIf(Likes($x, Cow), Round(Cow), True) && Round("
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-570_Q13",
    "context": "Bob is big. Bob is red. Charlie is big. Erin is nice. Erin is quiet. Erin is red. Fiona is cold. Fiona is kind. Fiona is nice. Fiona is red. If someone is quiet then they are furry. Kind, nice people are red. All big people are quiet. If someone is kind then they are cold. All nice, furry people are red. If someone is nice and red then they are kind. Big people are nice. Kind people are quiet.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Erin is not big.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nRed($x, bool) ::: Is x red?\nQuiet($x, bool) ::: Is x quiet?\nKind($x, bool) ::: Is x kind?\nNice($x, bool) ::: Is x nice?\nCold($x, bool) ::: Is x cold?\nFurry($x, bool) ::: Is x furry?\nFacts:\nBig(Bob, True) ::: Bob is big.\nRed(Bob, True) ::: Bob is red.\nBig(Charlie, True) ::: Charlie is big.\nNice(Erin, True) ::: Erin is nice.\nQuiet(Erin, True) ::: Erin is quiet.\nRed(Erin, True) ::: Erin is red.\nCold(Fiona, True) ::: Fiona is cold.\nKind(Fiona, True) ::: Fiona is kind.\nNice(Fiona, True) ::: Fiona is nice.\nRed(Fiona, True) ::: Fiona is red.\nRules:\nQuiet($x, True) >>> Furry($x, True) ::: If someone is quiet then they are furry.\nKind($x, True) && Nice($x, True) >>> Red($x, True) ::: Kind, nice people are red.\nBig($x, True) >>> Quiet($x, True) ::: All big people are quiet.\nKind($x, True) >>> Cold($x, True) ::: If someone is kind then they are cold.\nNice($x, True) && Furry($x, True) >>> Red($x, True) ::: All nice, furry people are red.\nNice($x, True) && Red($x, True) >>> Kind($x, True) ::: If someone is nice and red then they are kind.\nBig($x, True) >>> Nice($x, True) ::: Big people are nice.\nKind($x, True) >>> Quiet($x, True) ::: Kind people are quiet.\nQuery:\nNot(Big(Erin, True)) ::: Erin is not big.\n------\nProblem:\nBob is big. Bob is"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-928_Q20",
    "context": "Charlie is cold. Charlie is furry. Charlie is kind. Charlie is nice. Charlie is red. Charlie is rough. Dave is red. Dave is rough. Fiona is rough. Harry is kind. Harry is rough. Red things are nice. All nice things are cold. Furry things are kind. If something is cold and rough then it is white. If Fiona is furry then Fiona is kind. Rough, kind things are furry. White things are kind.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Fiona is red.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nFurry($x, bool) ::: Is x furry?\nKind($x, bool) ::: Is x kind?\nNice($x, bool) ::: Is x nice?\nRed($x, bool) ::: Is x red?\nRough($x, bool) ::: Is x rough?\nWhite($x, bool) ::: Is x white?\nFacts:\nCold(Charlie, True) ::: Charlie is cold.\nFurry(Charlie, True) ::: Charlie is furry.\nKind(Charlie, True) ::: Charlie is kind.\nNice(Charlie, True) ::: Charlie is nice.\nRed(Charlie, True) ::: Charlie is red.\nRough(Charlie, True) ::: Charlie is rough.\nRed(Dave, True) ::: Dave is red.\nRough(Dave, True) ::: Dave is rough.\nRough(Fiona, True) ::: Fiona is rough.\nKind(Harry, True) ::: Harry is kind.\nRough(Harry, True) ::: Harry is rough.\nRules:\nRed($x, True) >>> Nice($x, True) ::: Red things are nice.\nNice($x, True) >>> Cold($x, True) ::: All nice things are cold.\nFurry($x, True) >>> Kind($x, True) ::: Furry things are kind.\nCold($x, True) && Rough($x, True) >>> White($x, True) ::: If something is cold and rough then it is white.\nFurry(Fiona, True) >>> Kind(Fiona, True) ::: If Fiona is furry then Fiona is kind.\nRough($x, True) && Kind($x, True) >>> Furry($x, True) ::: Rough, kind things are furry.\nWhite($x, True) >>> Kind($x, True) ::: White things are kind.\nQuery:\nRed(Fiona, True) ::: Fiona is red.\n------\nProblem:\nCharlie is cold. Charlie is furry. Charlie is kind. Charlie is nice."
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-485_Q19",
    "context": "Anne is big. Anne is furry. Bob is cold. Bob is red. Dave is not green. Gary is not big. Gary is smart. If someone is smart and big then they are furry. Smart people are furry. Furry, red people are big. Big people are kind. If someone is cold then they are smart. If someone is kind and big then they are not green. If Gary is cold then Gary is not green.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Dave is not red.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nFurry($x, bool) ::: Is x furry?\nRed($x, bool) ::: Is x red?\nGreen($x, bool) ::: Is x green?\nSmart($x, bool) ::: Is x smart?\nKind($x, bool) ::: Is x kind?\nFacts:\nBig(Anne, True) ::: Anne is big.\nFurry(Anne, True) ::: Anne is furry.\nCold(Bob, True) ::: Bob is cold.\nRed(Bob, True) ::: Bob is red.\nNot(Green(Dave, True)) ::: Dave is not green.\nNot(Big(Gary, True)) ::: Gary is not big.\nSmart(Gary, True) ::: Gary is smart.\nRules:\nSmart($x, True) >>> Furry($x, True) ::: Smart people are furry.\nFurry($x, True) && Big($x, True) >>> Smart($x, True) ::: If someone is smart and big then they are furry.\nFurry($x, True) && Red($x, True) >>> Big($x, True) ::: Furry, red people are big.\nBig($x, True) >>> Kind($x, True) ::: Big people are kind.\nCold($x, True) >>> Smart($x, True) ::: If someone is cold then they are smart.\nNot(Green($x, True)) >>> Kind($x, True) && Big($x, True) ::: If someone is kind and big then they are not green.\nNot(Green($x, True)) >>> Cold($x, True) && Big($x, True) ::: If Gary is cold then Gary is not green.\nQuery:\nNot(Red(Dave, True)) ::: Dave is not red.\n------"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-370_Q1",
    "context": "The bald eagle needs the cow. The bald eagle needs the rabbit. The bald eagle needs the squirrel. The cow does not chase the rabbit. The cow chases the squirrel. The cow likes the bald eagle. The rabbit is big. The rabbit is round. The rabbit likes the squirrel. The squirrel chases the cow. The squirrel chases the rabbit. If someone chases the bald eagle and they are big then they do not like the cow. If someone chases the cow and they are round then they are kind. If the cow likes the rabbit and the rabbit likes the bald eagle then the bald eagle needs the rabbit. If someone likes the cow then they are green. If someone is big and they need the bald eagle then they chase the cow. If someone likes the bald eagle then they do not chase the bald eagle. If someone needs the rabbit then the rabbit likes the cow. If the squirrel needs the cow and the cow chases the squirrel then the squirrel does not like the cow. If someone is green then they need the bald eagle.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cow chases the squirrel.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nLikes($x, $y, bool) ::: Does x like y?\nNeeds($x, $y, bool) ::: Does x need y?\nBig($x, bool) ::: Is x big?\nRound($x, bool) ::: Is x round?\nKind($x, bool) ::: Is x kind?\nGreen($x, bool) ::: Is x green?\nFacts:\nChases(Cow, BaldEagle, False) ::: The cow does not chase the bald eagle.\nChases(Cow, Squirrel, True) ::: The cow chases the squirrel.\nLikes(Cow, BaldEagle, True) ::: The cow likes the bald eagle.\nBig(Rabbit, True) ::: The rabbit is big.\nRound(Rabbit, True) ::: The rabbit is round.\nLikes(Rabbit, Squirrel, True) ::: The rabbit likes the squirrel.\nChases(Squirrel, Cow, True) ::: The squirrel chases the cow.\nChases(Squirrel, Rabbit, True) ::: The squirrel chases the rabbit.\nRules:\nChases($x, $y, True) >>> $x!= $y ::: If someone chases the bald eagle and they are big then they do not like the cow.\nChases($x, $y, True) >>> $x!= $y ::: If someone chases the cow and they are round then they are kind.\nLikes($x, $y, True) && Likes($y, $z, True) >>> Needs($z, $x, True) ::: If the cow likes the rabbit and the rabbit likes the bald eagle then the bald eagle needs the rabbit.\nLikes($x, $"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-113_Q9",
    "context": "Anne is green. Dave is furry. Dave is green. Dave is quiet. Dave is young. Fiona is furry. Fiona is green. Fiona is kind. Fiona is young. Gary is green. All kind, nice things are cold. If something is young and furry then it is kind. If Anne is cold and Anne is young then Anne is nice. Young things are quiet. Furry, nice things are green. Young, green things are nice. Nice things are furry. Nice things are furry. If something is green then it is young.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Anne is kind.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen($x, bool) ::: Is x green?\nFurry($x, bool) ::: Is x furry?\nQuiet($x, bool) ::: Is x quiet?\nKind($x, bool) ::: Is x kind?\nNice($x, bool) ::: Is x nice?\nCold($x, bool) ::: Is x cold?\nFacts:\nGreen(Anne, True) ::: Anne is green.\nFurry(Dave, True) ::: Dave is furry.\nGreen(Dave, True) ::: Dave is green.\nQuiet(Dave, True) ::: Dave is quiet.\nYoung(Dave, True) ::: Dave is young.\nFurry(Fiona, True) ::: Fiona is furry.\nGreen(Fiona, True) ::: Fiona is green.\nKind(Fiona, True) ::: Fiona is kind.\nYoung(Fiona, True) ::: Fiona is young.\nGreen(Gary, True) ::: Gary is green.\nRules:\nKind($x, True) >>> Cold($x, True) ::: All kind, nice things are cold.\nFurry($x, True) && Young($x, True) >>> Kind($x, True) ::: If something is young and furry then it is kind.\nYoung($x, True) && Cold($x, True) >>> Nice($x, True) ::: If Anne is cold and Anne is young then Anne is nice.\nYoung($x, True) >>> Quiet($x, True) ::: Young things are quiet.\nFurry($x, True) && Nice($x, True) >>> Green($x, True) ::: Furry, nice things are green.\nYoung($x, True) && Green($x, True) >>> Nice($x, True) ::: Young, green things are nice.\nNice($"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-163_Q21",
    "context": "The bald eagle chases the dog. The bald eagle eats the dog. The bald eagle is big. The bald eagle likes the bear. The bear eats the dog. The bear is kind. The dog chases the tiger. The dog eats the bald eagle. The dog is kind. The tiger chases the bear. The tiger eats the bear. The tiger is big. The tiger is round. The tiger is young. If someone is kind then they chase the bald eagle. If someone chases the bear and the bear likes the tiger then they eat the bald eagle. If someone is kind then they eat the bald eagle. If someone likes the dog then they like the tiger. If someone likes the tiger then they are young. If someone eats the dog then the dog is big. If someone eats the bald eagle then they like the dog. If someone likes the dog and they do not chase the tiger then the dog chases the bald eagle.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The tiger does not chase the dog.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nEats($x, $y, bool) ::: Does x eat y?\nLikes($x, $y, bool) ::: Does x like y?\nBig($x, bool) ::: Is x big?\nKind($x, bool) ::: Is x kind?\nRound($x, bool) ::: Is x round?\nYoung($x, bool) ::: Is x young?\nFacts:\nChases(BaldEagle, Dog, True) ::: The bald eagle chases the dog.\nEats(BaldEagle, Dog, True) ::: The bald eagle eats the dog.\nBig(BaldEagle, True) ::: The bald eagle is big.\nLikes(BaldEagle, Bear, True) ::: The bald eagle likes the bear.\nEats(Bear, Dog, True) ::: The bear eats the dog.\nKind(Bear, True) ::: The bear is kind.\nChases(Dog, Tiger, True) ::: The dog chases the tiger.\nEats(Dog, BaldEagle, True) ::: The dog eats the bald eagle.\nKind(Dog, True) ::: The dog is kind.\nChases(Tiger, Bear, True) ::: The tiger chases the bear.\nEats(Tiger, Bear, True) ::: The tiger eats the bear.\nBig(Tiger, True) ::: The tiger is big.\nRound(Tiger, True) ::: The tiger is round.\nYoung(Tiger, True) ::: The tiger is young.\nRules:\nKind($x, True) >>> Chases($x, BaldEagle, True) ::: If someone is kind then they chase the bald eagle.\nChases($x, Bear, True"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-420_Q1",
    "context": "The bear eats the cow. The bear likes the lion. The bear likes the mouse. The cow chases the bear. The cow chases the mouse. The cow eats the bear. The cow is nice. The lion chases the cow. The lion chases the mouse. The lion likes the bear. The mouse chases the cow. The mouse chases the lion. If someone is young then they are round. If someone eats the lion then they are young. If someone eats the bear then they eat the lion. If someone is nice and they chase the lion then they like the bear. If someone eats the lion then the lion eats the bear.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bear likes the mouse.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y) ::: Does x eat y?\nLikes($x, $y) ::: Does x like y?\nChases($x, $y) ::: Does x chase y?\nYoung($x, bool) ::: Is x young?\nRound($x, bool) ::: Is x round?\nNice($x, bool) ::: Is x nice?\nFacts:\nEats(Bear, Cow) ::: The bear eats the cow.\nLikes(Bear, Lion) ::: The bear likes the lion.\nLikes(Bear, Mouse) ::: The bear likes the mouse.\nChases(Bear, Cow) ::: The bear chases the cow.\nChases(Bear, Mouse) ::: The bear chases the mouse.\nEats(Cow, Bear) ::: The cow eats the bear.\nNice(Cow) ::: The cow is nice.\nChases(Cow, Lion) ::: The cow chases the lion.\nChases(Cow, Mouse) ::: The cow chases the mouse.\nLikes(Lion, Bear) ::: The lion likes the bear.\nChases(Lion, Cow) ::: The lion chases the cow.\nChases(Lion, Mouse) ::: The lion chases the mouse.\nEats(Mouse, Bear) ::: The mouse eats the bear.\nRules:\nYoung($x, True) >>> Round($x, True) ::: If someone is young then they are round.\nEats($x, Lion) >>> Young($x, True) ::: If someone eats the lion then they are young.\nEats($x, Bear) >>> Eats($x, Lion) ::: If someone eats the bear then they eat the lion.\nNice($x, True) && Chases($x, Lion) >>> Likes($x, Bear) ::: If"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-323_Q19",
    "context": "The bald eagle likes the cow. The cat eats the cow. The cat is blue. The cat likes the cow. The cat likes the rabbit. The cat needs the rabbit. The cow is not red. The cow needs the cat. The cow needs the rabbit. The rabbit is nice. The rabbit is round. If something needs the bald eagle and the bald eagle is green then the bald eagle is nice. If something eats the rabbit and the rabbit is not blue then the rabbit eats the cat. If something eats the rabbit then it needs the bald eagle. If something is red and it likes the bald eagle then it needs the rabbit. If something is red then it eats the rabbit. If something likes the cow then it is red. If something needs the bald eagle then the bald eagle is green. If the bald eagle is green and the bald eagle is not nice then the bald eagle eats the cat. If something is red and it does not eat the cat then the cat is blue.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The rabbit is not blue.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nLikes($x, $y, bool) ::: Does x like y?\nEats($x, $y, bool) ::: Does x eat y?\nNeeds($x, $y, bool) ::: Does x need y?\nIs($x, $y, bool) ::: Is x y?\nIsRed($x, bool) ::: Is x red?\nIsGreen($x, bool) ::: Is x green?\nIsNice($x, bool) ::: Is x nice?\nIsBlue($x, bool) ::: Is x blue?\nIsRound($x, bool) ::: Is x round?\nFacts:\nLikes(BaldEagle, Cow, True) ::: The bald eagle likes the cow.\nEats(Cat, Cow, True) ::: The cat eats the cow.\nIsBlue(Cat, True) ::: The cat is blue.\nLikes(Cat, Cow, True) ::: The cat likes the cow.\nLikes(Cat, Rabbit, True) ::: The cat likes the rabbit.\nNeeds(Cat, Rabbit, True) ::: The cat needs the rabbit.\nIsNotRed(Cow, True) ::: The cow is not red.\nNeeds(Cow, Cat, True) ::: The cow needs the cat.\nNeeds(Cow, Rabbit, True) ::: The cow needs the rabbit.\nIsNice(Rabbit, True) ::: The rabbit is nice.\nIsRound(Rabbit, True) ::: The rabbit is round.\nIfSomethingNeedsBaldEagleAndBaldEagleIsGreenThenBaldEagleIsNice(Red, Green, Nice) ::: If something needs the bald eagle and the bald eagle is green then the bald eagle is nice.\nIfSomethingEatsRabbitAndRabbitIsNotBlueThenRabbitEatsCat("
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-518_Q5",
    "context": "The bear chases the dog. The dog chases the lion. The dog is kind. The dog likes the lion. The lion chases the bear. The lion chases the dog. The lion chases the squirrel. The lion needs the bear. The squirrel chases the bear. The squirrel is round. The squirrel needs the dog. If something chases the bear and the bear chases the dog then it is young. If something needs the squirrel then it is kind. If the squirrel chases the lion then the squirrel needs the bear. If something is nice and it likes the bear then it is red. If the lion needs the bear and the lion needs the squirrel then the bear is young. If something is young then it chases the lion. If something is young and it chases the dog then it needs the squirrel. If something likes the bear and it likes the dog then it likes the lion. If the dog needs the squirrel then the dog chases the bear.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The lion chases the lion.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nKind($x, bool) ::: Is x kind?\nLikes($x, $y, bool) ::: Does x like y?\nNeeds($x, $y, bool) ::: Does x need y?\nYoung($x, bool) ::: Is x young?\nRed($x, bool) ::: Is x red?\nRound($x, bool) ::: Is x round?\nFacts:\nChases(Bear, Dog, True) ::: The bear chases the dog.\nChases(Dog, Lion, True) ::: The dog chases the lion.\nKind(Dog, True) ::: The dog is kind.\nLikes(Dog, Lion, True) ::: The dog likes the lion.\nChases(Lion, Bear, True) ::: The lion chases the bear.\nChases(Lion, Dog, True) ::: The lion chases the dog.\nChases(Lion, Squirrel, True) ::: The lion chases the squirrel.\nNeeds(Lion, Bear, True) ::: The lion needs the bear.\nChases(Squirrel, Bear, True) ::: The squirrel chases the bear.\nRound(Squirrel, True) ::: The squirrel is round.\nNeeds(Squirrel, Dog, True) ::: The squirrel needs the dog.\nRules:\nChases($x, $y, True) && Chases($y, $z, True) >>> Young($x, True) ::: If something chases the bear and the bear chases the dog then it is young.\nNeeds($x, $y, True) && Needs($x, $z, True) >>> Young($y, True) ::: If something needs the squirrel then it is kind.\nChases(Squirrel"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-548_Q4",
    "context": "The cow eats the lion. The cow is young. The cow likes the squirrel. The lion eats the rabbit. The lion eats the squirrel. The lion does not like the squirrel. The rabbit is blue. The rabbit likes the cow. The rabbit likes the lion. The squirrel likes the lion. The squirrel likes the rabbit. If someone visits the lion then the lion eats the cow. If someone visits the cow then they are round. If the squirrel visits the cow and the squirrel is not young then the cow likes the rabbit. If someone eats the squirrel and they eat the cow then they visit the rabbit. If someone likes the cow then they are nice. If someone eats the cow and the cow visits the rabbit then they eat the lion. If someone is nice then they visit the cow. If someone eats the squirrel and they like the cow then they do not visit the squirrel. If someone visits the cow then the cow is nice.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The rabbit is not nice.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y, bool) ::: Does x eat y?\nLikes($x, $y, bool) ::: Does x like y?\nVisits($x, $y, bool) ::: Does x visit y?\nYoung($x, bool) ::: Is x young?\nRound($x, bool) ::: Is x round?\nNice($x, bool) ::: Is x nice?\nFacts:\nEats(Cow, Lion, True) ::: The cow eats the lion.\nYoung(Cow, True) ::: The cow is young.\nLikes(Cow, Squirrel, True) ::: The cow likes the squirrel.\nEats(Lion, Rabbit, True) ::: The lion eats the rabbit.\nEats(Lion, Squirrel, True) ::: The lion eats the squirrel.\nLikes(Lion, Squirrel, False) ::: The lion does not like the squirrel.\nBlue(Rabbit, True) ::: The rabbit is blue.\nLikes(Rabbit, Cow, True) ::: The rabbit likes the cow.\nLikes(Rabbit, Lion, True) ::: The rabbit likes the lion.\nLikes(Squirrel, Lion, True) ::: The squirrel likes the lion.\nLikes(Squirrel, Rabbit, True) ::: The squirrel likes the rabbit.\nRules:\nVisits(Lion, Cow, True) >>> Eats(Lion, Cow) ::: If someone visits the lion then the lion eats the cow.\nVisits(Cow, $x, True) >>> Round($x, True) ::: If someone visits the cow then they are round.\nYoung(Cow) && Eats(Squirrel, Cow) >>> Likes(Cow, Rabbit) ::: If"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-688_Q22",
    "context": "The cat is nice. The cat is red. The cat is round. The cat does not need the mouse. The cat visits the squirrel. The lion needs the mouse. The mouse is round. The mouse likes the lion. The mouse needs the lion. The mouse visits the cat. The squirrel is big. The squirrel is red. The squirrel visits the lion. The squirrel visits the mouse. If something likes the cat and it does not visit the cat then it visits the lion. If the lion is green and the lion visits the mouse then the mouse is red. All red things are nice. If something likes the lion then it is red. If the mouse visits the cat and the mouse needs the squirrel then the mouse does not like the cat. Nice things are big. If something is big then it visits the squirrel. If the mouse visits the squirrel then the mouse does not visit the lion.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The lion likes the mouse.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNice($x, bool) ::: Is x nice?\nRed($x, bool) ::: Is x red?\nRound($x, bool) ::: Is x round?\nVisits($x, $y, bool) ::: Does x visit y?\nNeeds($x, $y, bool) ::: Does x need y?\nLikes($x, $y, bool) ::: Does x like y?\nFacts:\nNice(Cat, True) ::: The cat is nice.\nRed(Cat, True) ::: The cat is red.\nRound(Cat, True) ::: The cat is round.\nNeeds(Cat, Mouse, False) ::: The cat does not need the mouse.\nVisits(Cat, Squirrel, True) ::: The cat visits the squirrel.\nNeeds(Lion, Mouse, True) ::: The lion needs the mouse.\nRound(Mouse, True) ::: The mouse is round.\nLikes(Mouse, Lion, True) ::: The mouse likes the lion.\nNeeds(Mouse, Lion, True) ::: The mouse needs the lion.\nVisits(Mouse, Cat, True) ::: The mouse visits the cat.\nRed(Squirrel, True) ::: The squirrel is red.\nVisits(Squirrel, Lion, True) ::: The squirrel visits the lion.\nVisits(Squirrel, Mouse, True) ::: The squirrel visits the mouse.\nRules:\nIf something likes the cat and it does not visit the cat then it visits the lion. ::: If something likes the cat and it does not visit the cat then it visits the lion.\nIf the lion is green and the lion visits the mouse then the mouse is red. ::: If the lion is green and the lion visits the mouse then the mouse is red.\nAll red things are nice. ::: All red things are nice.\nIf something likes the lion then"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-99_Q11",
    "context": "Bob is green. Bob is white. Dave is blue. Dave is cold. Dave is green. Dave is white. Fiona is cold. Fiona is green. Fiona is white. Fiona is young. Gary is kind. Gary is white. Cold, white people are furry. If someone is furry then they are green. All cold people are young. If someone is kind and young then they are blue. If someone is furry then they are blue. All white, kind people are young. All kind, blue people are cold. If Bob is blue then Bob is kind.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is green.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen($x, bool) ::: Is x green?\nWhite($x, bool) ::: Is x white?\nCold($x, bool) ::: Is x cold?\nFurry($x, bool) ::: Is x furry?\nKind($x, bool) ::: Is x kind?\nYoung($x, bool) ::: Is x young?\nFacts:\nGreen(Bob, True) ::: Bob is green.\nWhite(Bob, True) ::: Bob is white.\nBlue(Dave, True) ::: Dave is blue.\nCold(Dave, True) ::: Dave is cold.\nGreen(Dave, True) ::: Dave is green.\nWhite(Dave, True) ::: Dave is white.\nCold(Fiona, True) ::: Fiona is cold.\nGreen(Fiona, True) ::: Fiona is green.\nWhite(Fiona, True) ::: Fiona is white.\nYoung(Fiona, True) ::: Fiona is young.\nKind(Gary, True) ::: Gary is kind.\nWhite(Gary, True) ::: Gary is white.\nRules:\nCold($x, True) && White($x, True) >>> Furry($x, True) ::: Cold, white people are furry.\nFurry($x, True) >>> Green($x, True) ::: If someone is furry then they are green.\nCold($x, True) >>> Young($x, True) ::: All cold people are young.\nKind($x, True) && Young($x, True) >>> Blue($x, True) ::: If someone is kind and young then they are blue.\nFurry($x, True) >>> Blue($x, True) ::: If someone is furry then they are blue.\nWhite($x, True) && Kind($x, True) >>> Young($x, True) ::"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-538_Q13",
    "context": "Charlie is cold. Charlie is red. Dave is not big. Erin is green. Erin is red. Fiona is green. Fiona is kind. If Erin is big then Erin is green. Blue, kind people are big. All kind people are green. All cold people are not quiet. All kind people are red. If someone is big and kind then they are cold. Red people are blue.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Erin is not cold.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nRed($x, bool) ::: Is x red?\nBig($x, bool) ::: Is x big?\nKind($x, bool) ::: Is x kind?\nBlue($x, bool) ::: Is x blue?\nFacts:\nCold(Charlie, True) ::: Charlie is cold.\nRed(Charlie, True) ::: Charlie is red.\nNot(Big(Dave, True)) ::: Dave is not big.\nGreen(Erin, True) ::: Erin is green.\nRed(Erin, True) ::: Erin is red.\nGreen(Fiona, True) ::: Fiona is green.\nKind(Fiona, True) ::: Fiona is kind.\nRules:\nIf Erin is big then Erin is green ::: Erin is big.\nBlue($x, True) >>> Kind($x, True) ::: Blue, kind people are big.\nAll kind people are green ::: Kind($x, True) >>> Green($x, True)\nAll cold people are not quiet ::: Cold($x, True) >>> Not(Quiet($x, True))\nKind($x, True) >>> Red($x, True) ::: All kind people are red.\nBig($x, True) && Kind($x, True) >>> Cold($x, True) ::: If someone is big and kind then they are cold.\nRed($x, True) >>> Blue($x, True) ::: Red people are blue.\nQuery:\nNot(Cold(Erin, True)) ::: Erin is not cold.\n------"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-378_Q5",
    "context": "Anne is nice. Dave is young. Erin is round. Erin is white. Gary is furry. Gary is rough. Gary is round. All nice, rough people are cold. Rough people are nice. Round, young people are nice. If someone is nice then they are furry. All round people are furry. All white, round people are furry. All round, nice people are rough. If someone is round and young then they are white. Furry, round people are young.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is white.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNice($x, bool) ::: Is x nice?\nYoung($x, bool) ::: Is x young?\nRound($x, bool) ::: Is x round?\nFurry($x, bool) ::: Is x furry?\nRough($x, bool) ::: Is x rough?\nCold($x, bool) ::: Is x cold?\nFacts:\nNice(Anne, True) ::: Anne is nice.\nYoung(Dave, True) ::: Dave is young.\nRound(Erin, True) ::: Erin is round.\nWhite(Erin, True) ::: Erin is white.\nFurry(Gary, True) ::: Gary is furry.\nRough(Gary, True) ::: Gary is rough.\nRound(Gary, True) ::: Gary is round.\nRules:\nNice($x, True) >>> Rough($x, True) ::: Rough people are nice.\nRound($x, True) >>> Young($x, True) ::: Round, young people are nice.\nNice($x, True) >>> Furry($x, True) ::: If someone is nice then they are furry.\nRound($x, True) >>> Furry($x, True) ::: All round people are furry.\nWhite($x, True) >>> Furry($x, True) ::: All white, round people are furry.\nRound($x, True) >>> Rough($x, True) ::: All round, nice people are rough.\nRound($x, True) && Young($x, True) >>> White($x, True)"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-394_Q9",
    "context": "The bald eagle is blue. The bald eagle visits the bear. The bald eagle visits the rabbit. The bear chases the bald eagle. The dog is not cold. The rabbit is red. The rabbit needs the bear. If the bald eagle visits the bear and the bald eagle is rough then the bear chases the rabbit. If someone is rough then they chase the bald eagle. If someone is cold then they are rough. If someone needs the bald eagle then the bald eagle is cold. If someone needs the rabbit and they chase the bald eagle then the bald eagle does not chase the bear. If someone chases the bald eagle then they are kind. If someone is kind then they need the bald eagle. If the rabbit is red and the rabbit is blue then the rabbit needs the bear.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bald eagle is rough.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue($x, bool) ::: Is x blue?\nVisits($x, $y, bool) ::: Does x visit y?\nChases($x, $y, bool) ::: Does x chase y?\nNeeds($x, $y, bool) ::: Does x need y?\nRough($x, bool) ::: Is x rough?\nKind($x, bool) ::: Is x kind?\nCold($x, bool) ::: Is x cold?\nFacts:\nBlue(BaldEagle, True) ::: The bald eagle is blue.\nVisits(BaldEagle, Bear, True) ::: The bald eagle visits the bear.\nVisits(BaldEagle, Rabbit, True) ::: The bald eagle visits the rabbit.\nChases(Bear, BaldEagle, True) ::: The bear chases the bald eagle.\nNot(Cold(Dog, True)) ::: The dog is not cold.\nRed(Rabbit, True) ::: The rabbit is red.\nNeeds(Rabbit, Bear, True) ::: The rabbit needs the bear.\nRules:\nIf the bald eagle visits the bear and the bald eagle is rough then the bear chases the rabbit. ::: If the bald eagle visits the bear and the bald eagle is rough then the bear chases the rabbit.\nIf someone is rough then they chase the bald eagle. ::: If someone is rough then they chase the bald eagle.\nIf someone is cold then they are rough. ::: If someone is cold then they are rough.\nIf someone needs the bald e"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-460_Q12",
    "context": "The bald eagle is kind. The bald eagle is young. The bald eagle likes the lion. The bald eagle likes the mouse. The lion is big. The lion needs the tiger. The mouse likes the bald eagle. The mouse likes the tiger. The mouse needs the tiger. The tiger is big. The tiger is rough. The tiger is young. The tiger visits the bald eagle. The tiger visits the lion. If someone visits the mouse and they are kind then they visit the tiger. If someone needs the lion then the lion likes the mouse. If someone likes the bald eagle then the bald eagle is rough. If someone visits the tiger and the tiger is young then the tiger is nice. If someone is kind then they need the lion. If someone needs the bald eagle then they are big. If someone needs the lion and the lion likes the mouse then the lion visits the tiger. If someone is nice and they visit the lion then they need the mouse. If someone is young then they like the tiger.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The tiger does not need the mouse.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nKind($x, bool) ::: Is x kind?\nYoung($x, bool) ::: Is x young?\nLikes($x, $y, bool) ::: Does x like y?\nNeeds($x, $y, bool) ::: Does x need y?\nVisits($x, $y, bool) ::: Does x visit y?\nBig($x, bool) ::: Is x big?\nRough($x, bool) ::: Is x rough?\nNice($x, bool) ::: Is x nice?\nFacts:\nKind(BaldEagle, True) ::: The bald eagle is kind.\nYoung(BaldEagle, True) ::: The bald eagle is young.\nLikes(BaldEagle, Lion, True) ::: The bald eagle likes the lion.\nLikes(BaldEagle, Mouse, True) ::: The bald eagle likes the mouse.\nBig(Lion, True) ::: The lion is big.\nNeeds(Lion, Tiger, True) ::: The lion needs the tiger.\nLikes(Mouse, BaldEagle, True) ::: The mouse likes the bald eagle.\nLikes(Mouse, Tiger, True) ::: The mouse likes the tiger.\nNeeds(Mouse, Tiger, True) ::: The mouse needs the tiger.\nBig(Tiger, True) ::: The tiger is big.\nRough(Tiger, True) ::: The tiger is rough.\nYoung(Tiger, True) ::: The tiger is young.\nVisits(Tiger, BaldEagle"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-801_Q24",
    "context": "The bear is big. The bear is nice. The bear is rough. The bear sees the squirrel. The bear sees the tiger. The lion eats the squirrel. The lion is not green. The lion likes the tiger. The squirrel eats the tiger. The squirrel likes the lion. The squirrel likes the tiger. The tiger eats the bear. The tiger is not nice. The tiger is rough. The tiger does not like the squirrel. The tiger sees the lion. If someone likes the tiger and the tiger eats the bear then the bear eats the tiger. If someone eats the tiger then the tiger is blue. If someone sees the bear then they do not like the lion. If someone is blue then they see the bear. If someone eats the bear then the bear likes the tiger. If someone sees the bear then the bear is blue. If someone likes the tiger and the tiger sees the lion then they eat the lion. If someone sees the tiger and they are not blue then the tiger eats the lion.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The tiger sees the squirrel.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nNice($x, bool) ::: Is x nice?\nRough($x, bool) ::: Is x rough?\nSees($x, $y, bool) ::: Does x see y?\nEats($x, $y, bool) ::: Does x eat y?\nLikes($x, $y, bool) ::: Does x like y?\nBlue($x, bool) ::: Is x blue?\nFacts:\nBig(Bear, True) ::: The bear is big.\nNice(Bear, True) ::: The bear is nice.\nRough(Bear, True) ::: The bear is rough.\nSees(Bear, Squirrel, True) ::: The bear sees the squirrel.\nSees(Bear, Tiger, True) ::: The bear sees the tiger.\nEats(Lion, Squirrel, True) ::: The lion eats the squirrel.\nNot(Green(Lion, True)) ::: The lion is not green.\nLikes(Lion, Tiger, True) ::: The lion likes the tiger.\nEats(Squirrel, Tiger, True) ::: The squirrel eats the tiger.\nLikes(Squirrel, Lion, True) ::: The squirrel likes the lion.\nLikes(Squirrel, Tiger, True) ::: The squirrel likes the tiger.\nEats(Tiger, Bear, True) ::: The tiger eats the bear.\nNot(Nice(Tiger, True))"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-22_Q18",
    "context": "Bob is big. Bob is blue. Bob is nice. Bob is rough. Bob is white. Erin is blue. Gary is kind. Harry is kind. Harry is nice. Harry is white. Blue things are rough. All nice, white things are young. If something is big then it is blue. All blue, big things are nice. Big, rough things are kind. All white, rough things are big. If something is young then it is blue. If something is rough then it is white.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is white.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nBlue($x, bool) ::: Is x blue?\nKind($x, bool) ::: Is x kind?\nNice($x, bool) ::: Is x nice?\nRough($x, bool) ::: Is x rough?\nWhite($x, bool) ::: Is x white?\nYoung($x, bool) ::: Is x young?\nFacts:\nBig(Bob, True) ::: Bob is big.\nBlue(Bob, True) ::: Bob is blue.\nNice(Bob, True) ::: Bob is nice.\nRough(Bob, True) ::: Bob is rough.\nWhite(Bob, True) ::: Bob is white.\nBlue(Erin, True) ::: Erin is blue.\nKind(Gary, True) ::: Gary is kind.\nKind(Harry, True) ::: Harry is kind.\nNice(Harry, True) ::: Harry is nice.\nWhite(Harry, True) ::: Harry is white.\nRules:\nBlue($x, True) >>> Rough($x, True) ::: Blue things are rough.\nNice($x, True) && White($x, True) >>> Young($x, True) ::: All nice, white things are young.\nBig($x, True) >>> Blue($x, True) ::: If something is big then it is blue.\nBlue($x, True) && Big($x, True) >>> Nice($x, True) ::: All blue, big things are nice.\nBig($x, True) && Rough($x, True"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-939_Q18",
    "context": "Charlie is cold. Charlie is furry. Dave is nice. Fiona is furry. Fiona is red. Harry is furry. Harry is kind. If Fiona is kind and Fiona is cold then Fiona is blue. All red things are nice. If Dave is cold then Dave is furry. If Fiona is nice then Fiona is red. Nice things are red. If something is kind then it is cold. If something is cold and kind then it is furry. All nice, furry things are blue. Red things are kind.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Charlie is kind.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nFurry($x, bool) ::: Is x furry?\nNice($x, bool) ::: Is x nice?\nRed($x, bool) ::: Is x red?\nKind($x, bool) ::: Is x kind?\nBlue($x, bool) ::: Is x blue?\nFacts:\nCold(Charlie, True) ::: Charlie is cold.\nFurry(Charlie, True) ::: Charlie is furry.\nNice(Dave, True) ::: Dave is nice.\nFurry(Fiona, True) ::: Fiona is furry.\nRed(Fiona, True) ::: Fiona is red.\nFurry(Harry, True) ::: Harry is furry.\nKind(Harry, True) ::: Harry is kind.\nRules:\nFurry($x, True) >>> Cold($x, True) ::: If Fiona is kind and Fiona is cold then Fiona is blue.\nRed($x, True) >>> Nice($x, True) ::: All red things are nice.\nCold($x, True) >>> Furry($x, True) ::: If Dave is cold then Dave is furry.\nNice($x, True) >>> Red($x, True) ::: If Fiona is nice then Fiona is red.\nNice($x, True) >>> Red($x, True) ::: Nice things are red.\nKind($x, True) >>> Cold($x, True) ::: If something is kind then it is cold.\nCold($x, True"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-660_Q7",
    "context": "Dave is big. Dave is furry. Dave is quiet. Dave is round. Fiona is blue. Fiona is round. Fiona is smart. Gary is big. Gary is blue. Gary is furry. Gary is round. Gary is smart. Harry is blue. Harry is round. If someone is round and blue then they are smart. If Harry is furry and Harry is blue then Harry is big. Smart, big people are quiet. All smart people are furry. If someone is blue and quiet then they are cold. If someone is quiet and cold then they are big.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Harry is big.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nFurry($x, bool) ::: Is x furry?\nQuiet($x, bool) ::: Is x quiet?\nRound($x, bool) ::: Is x round?\nSmart($x, bool) ::: Is x smart?\nCold($x, bool) ::: Is x cold?\nFacts:\nBig(Dave, True) ::: Dave is big.\nFurry(Dave, True) ::: Dave is furry.\nQuiet(Dave, True) ::: Dave is quiet.\nRound(Dave, True) ::: Dave is round.\nSmart(Fiona, True) ::: Fiona is smart.\nRound(Fiona, True) ::: Fiona is round.\nBlue(Fiona, True) ::: Fiona is blue.\nBig(Gary, True) ::: Gary is big.\nBlue(Gary, True) ::: Gary is blue.\nFurry(Gary, True) ::: Gary is furry.\nRound(Gary, True) ::: Gary is round.\nSmart(Gary, True) ::: Gary is smart.\nBlue(Harry, True) ::: Harry is blue.\nRound(Harry, True) ::: Harry is round.\nRules:\nRound($x, True) && Blue($x, True) >>> Smart($x, True) ::: If someone is round and blue then they are smart.\nFurry($x, True) && Blue($x, True) >>> Big($x, True) ::: If Harry is furry and Harry is blue then Harry"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-378_Q8",
    "context": "Anne is nice. Dave is young. Erin is round. Erin is white. Gary is furry. Gary is rough. Gary is round. All nice, rough people are cold. Rough people are nice. Round, young people are nice. If someone is nice then they are furry. All round people are furry. All white, round people are furry. All round, nice people are rough. If someone is round and young then they are white. Furry, round people are young.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Erin is not nice.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNice($x, bool) ::: Is x nice?\nYoung($x, bool) ::: Is x young?\nRound($x, bool) ::: Is x round?\nFurry($x, bool) ::: Is x furry?\nRough($x, bool) ::: Is x rough?\nCold($x, bool) ::: Is x cold?\nFacts:\nNice(Anne, True) ::: Anne is nice.\nYoung(Dave, True) ::: Dave is young.\nRound(Erin, True) ::: Erin is round.\nWhite(Erin, True) ::: Erin is white.\nFurry(Gary, True) ::: Gary is furry.\nRough(Gary, True) ::: Gary is rough.\nRound(Gary, True) ::: Gary is round.\nRules:\nNice($x, True) >>> Rough($x, True) ::: All nice, rough people are cold.\nRough($x, True) >>> Nice($x, True) ::: Rough people are nice.\nRound($x, True) && Young($x, True) >>> Nice($x, True) ::: Round, young people are nice.\nNice($x, True) >>> Furry($x, True) ::: If someone is nice then they are furry.\nAll($x, True) >>> Furry($x, True) ::: All round people are furry.\nAll($x, True) >>> Furry($x, True) ::: All white, round people are furry.\nRound($x, True) && Nice($x, True)"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-211_Q6",
    "context": "Bob is red. Charlie is furry. Charlie is nice. Charlie is smart. Fiona is red. Gary is nice. Gary is round. Furry things are blue. All round, furry things are nice. White things are furry. If something is blue then it is white. All furry things are round. If something is nice and furry then it is smart. Red things are blue. If something is round then it is smart.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is not white.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRed($x, bool) ::: Is x red?\nFurry($x, bool) ::: Is x furry?\nNice($x, bool) ::: Is x nice?\nSmart($x, bool) ::: Is x smart?\nRound($x, bool) ::: Is x round?\nBlue($x, bool) ::: Is x blue?\nWhite($x, bool) ::: Is x white?\nFacts:\nRed(Bob, True) ::: Bob is red.\nFurry(Charlie, True) ::: Charlie is furry.\nNice(Charlie, True) ::: Charlie is nice.\nSmart(Charlie, True) ::: Charlie is smart.\nRed(Fiona, True) ::: Fiona is red.\nNice(Gary, True) ::: Gary is nice.\nRound(Gary, True) ::: Gary is round.\nBlue(Furry($x, True)) ::: Furry things are blue.\nNice(Round($x, True)) && Furry($x, True) ::: All round, furry things are nice.\nWhite(Furry($x, True)) ::: White things are furry.\nBlue($x, True) >>> White($x, True) ::: If something is blue then it is white.\nFurry($x, True) >>> Round($x, True) ::: All furry things are round.\nNice($x, True) && Furry($x, True) >>> Smart($x, True) ::: If something is nice and furry then it is smart.\nRed($x, True)"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-427_Q12",
    "context": "Anne is furry. Anne is not green. Anne is white. Charlie is green. Charlie is rough. Gary is blue. Gary is furry. Gary is green. Gary is nice. Gary is round. Gary is white. Harry is nice. Harry is rough. Harry is round. If something is white then it is blue. All furry things are round. Green, rough things are round. Blue things are furry. If Charlie is furry then Charlie is nice. Rough, round things are white.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Charlie is not nice.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nFurry($x, bool) ::: Is x furry?\nGreen($x, bool) ::: Is x green?\nBlue($x, bool) ::: Is x blue?\nWhite($x, bool) ::: Is x white?\nRound($x, bool) ::: Is x round?\nNice($x, bool) ::: Is x nice?\nFacts:\nFurry(Anne, True) ::: Anne is furry.\nGreen(Anne, False) ::: Anne is not green.\nWhite(Anne, True) ::: Anne is white.\nGreen(Charlie, True) ::: Charlie is green.\nRound(Charlie, True) ::: Charlie is round.\nNice(Charlie, False) ::: Charlie is not nice.\nBlue(Gary, True) ::: Gary is blue.\nFurry(Gary, True) ::: Gary is furry.\nGreen(Gary, True) ::: Gary is green.\nNice(Gary, True) ::: Gary is nice.\nRound(Gary, True) ::: Gary is round.\nWhite(Gary, True) ::: Gary is white.\nNice(Harry, True) ::: Harry is nice.\nRound(Harry, True) ::: Harry is round.\nRough(Harry, True) ::: Harry is rough.\nRules:\nFurry($x, True) >>> Round($x, True) ::: All furry things are round.\nGreen($x, True) && Rough($x, True) >>> Round($x, True) ::: Green, rough things are round.\nBlue($x, True) >>> Furry($x, True) ::: Blue things are furry.\nFurry($x, True) && Nice($x, True) >>> Charlie is nice ::: If Charlie is furry then Charlie is nice.\nRound($x, True) && Rough($x, True) >>> White($x, True) ::: Rough, round things are white.\nQuery:\nNice(Charlie, False) ::: Charlie is not nice.\n------"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-598_Q23",
    "context": "The bald eagle likes the dog. The bald eagle needs the lion. The bald eagle visits the dog. The bald eagle visits the lion. The dog is cold. The dog is not nice. The dog does not like the lion. The dog visits the lion. The dog visits the mouse. The lion likes the bald eagle. The lion visits the bald eagle. The lion visits the dog. The mouse likes the lion. The mouse does not visit the lion. If something is round then it visits the mouse. If something visits the mouse then it is cold. If something visits the dog and the dog needs the lion then the lion is round. If something is cold then it needs the lion. If the mouse does not visit the dog then the dog is green.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The mouse does not need the bald eagle.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nLikes($x, $y) ::: Does x like y?\nNeeds($x, $y) ::: Does x need y?\nVisits($x, $y) ::: Does x visit y?\nIs($x, $y) ::: Is x y?\nRound($x, bool) ::: Is x round?\nCold($x, bool) ::: Is x cold?\nGreen($x, bool) ::: Is x green?\nNice($x, bool) ::: Is x nice?\nFacts:\nLikes(BaldEagle, Dog) ::: The bald eagle likes the dog.\nNeeds(BaldEagle, Lion) ::: The bald eagle needs the lion.\nVisits(BaldEagle, Dog) ::: The bald eagle visits the dog.\nVisits(BaldEagle, Lion) ::: The bald eagle visits the lion.\nCold(Dog) ::: The dog is cold.\nNot(Nice, Dog) ::: The dog is not nice.\nDoesNotLike(Dog, Lion) ::: The dog does not like the lion.\nVisits(Dog, Lion) ::: The dog visits the lion.\nVisits(Dog, Mouse) ::: The dog visits the mouse.\nLikes(Lion, BaldEagle) ::: The lion likes the bald eagle.\nVisits(Lion, BaldEagle) ::: The lion visits the bald eagle.\nVisits(Lion, Dog) ::: The lion visits the dog.\nLikes(Mouse, Lion) ::: The mouse likes the lion.\nDoesNotVisit(Mouse, Lion) ::: The mouse does not visit the lion.\nRound($x, True) >>> Visits($x, Mouse) ::: If something is round then it visits the mouse.\nVisits($x, Mouse) >>> Cold($x) ::: If something visits the mouse then it is cold.\nVisits(Dog, Lion) && Needs(Dog, Lion) >>> Round(Lion, True) ::: If something visits the dog and the dog needs the lion then the lion is round"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-472_Q1",
    "context": "Charlie is red. Erin is red. Erin is round. Erin is smart. Gary is kind. Gary is quiet. Gary is red. Gary is round. Gary is smart. Gary is white. Harry is kind. Harry is smart. All smart, round people are big. White people are kind. All round people are quiet. All quiet people are white. If Charlie is red and Charlie is kind then Charlie is big. Red people are round.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Charlie is red.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRed($x, bool) ::: Is x red?\nRound($x, bool) ::: Is x round?\nSmart($x, bool) ::: Is x smart?\nBig($x, bool) ::: Is x big?\nKind($x, bool) ::: Is x kind?\nQuiet($x, bool) ::: Is x quiet?\nFacts:\nRed(Charlie, True) ::: Charlie is red.\nRed(Erin, True) ::: Erin is red.\nRound(Erin, True) ::: Erin is round.\nSmart(Erin, True) ::: Erin is smart.\nKind(Gary, True) ::: Gary is kind.\nQuiet(Gary, True) ::: Gary is quiet.\nRed(Gary, True) ::: Gary is red.\nRound(Gary, True) ::: Gary is round.\nSmart(Gary, True) ::: Gary is smart.\nWhite(Gary, True) ::: Gary is white.\nKind(Harry, True) ::: Harry is kind.\nSmart(Harry, True) ::: Harry is smart.\nRules:\nSmart($x, True) >>> Round($x, True) ::: All smart, round people are big.\nWhite($x, True) >>> Kind($x, True) ::: White people are kind.\nRound($x, True) >>> Quiet($x, True) ::: All round people are quiet.\nQuiet($x, True) >>> White($x, True) ::: All quiet people are white.\nRed($x, True) && Kind($x, True) >>> Big($x, True) ::: If Charlie is red and Charlie is kind then Charlie is big.\nRed($x, True) >>> Round($x, True) ::: Red people are round.\nQuery:\nRed(Charlie, True) ::: Charlie is red.\n------\nProblem:\nCharlie is red. Erin is red. Erin is round. Erin is smart. Gary is kind. Gary is quiet. Gary is red. Gary is round. Gary is smart. Gary"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-1006_Q3",
    "context": "Anne is rough. Anne is young. Bob is nice. Bob is not smart. Erin is not rough. Gary is quiet. Gary is smart. Red, young things are smart. If something is quiet then it is smart. If something is smart and not rough then it is red. Furry things are not red. Smart things are nice. Red things are not nice. All young things are quiet. All nice things are furry.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is nice.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRough($x, bool) ::: Is x rough?\nYoung($x, bool) ::: Is x young?\nNice($x, bool) ::: Is x nice?\nSmart($x, bool) ::: Is x smart?\nRed($x, bool) ::: Is x red?\nQuiet($x, bool) ::: Is x quiet?\nFurry($x, bool) ::: Is x furry?\nFacts:\nRough(Anne, True) ::: Anne is rough.\nYoung(Anne, True) ::: Anne is young.\nNice(Bob, True) ::: Bob is nice.\nSmart(Bob, False) ::: Bob is not smart.\nNot(Rough(Erin, True)) ::: Erin is not rough.\nQuiet(Gary, True) ::: Gary is quiet.\nSmart(Gary, True) ::: Gary is smart.\nRed(Young($x, True), True) ::: Red, young things are smart.\nQuiet($x, True) >>> Smart($x, True) ::: If something is quiet then it is smart.\nSmart($x, True) && Not(Rough($x, True)) >>> Red($x, True) ::: If something is smart and not rough then it is red.\nNot(Furry($x, True)) ::: Furry things are not red.\nSmart($x, True) >>> Nice($x, True) ::: Smart things are nice.\nRed($x, True) >>> Not(Nice($x, True)) ::: Red things are not nice.\nAll(Young($x, True), Quiet($x, True)) ::: All young things are quiet.\nAll(Nice($x, True), Furry($x, True)) ::: All nice things are furry.\nQuery:\nNice(Gary, True) ::: Gary is nice.\n------\nProblem:\nAnne is quiet. Anne is young. Anne is red. Anne is rough. Anne is white. Bob is quiet. Bob is young. Bob is red. Bob is rough."
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-901_Q6",
    "context": "The bear eats the lion. The bear needs the mouse. The lion is green. The lion is nice. The lion is round. The lion needs the bear. The lion sees the rabbit. The mouse eats the lion. The mouse is rough. The mouse needs the bear. The mouse sees the bear. The rabbit is nice. The rabbit is not rough. The rabbit sees the lion. If something is nice then it needs the rabbit. If the mouse does not see the bear then the bear needs the rabbit. If something sees the bear and it is nice then it does not need the bear. If something needs the lion and it sees the mouse then the mouse does not need the bear. If something eats the lion then it eats the bear. If something is green then it eats the bear. If something eats the bear then it eats the rabbit. If the rabbit sees the mouse and the mouse sees the rabbit then the rabbit is not green. If something eats the rabbit then the rabbit eats the lion.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The mouse does not eat the rabbit.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y, bool) ::: Does x eat y?\nNeeds($x, $y, bool) ::: Does x need y?\nSees($x, $y, bool) ::: Does x see y?\nIs($x, $y, bool) ::: Is x y?\nNice($x, bool) ::: Is x nice?\nRound($x, bool) ::: Is x round?\nRough($x, bool) ::: Is x rough?\nGreen($x, bool) ::: Is x green?\nFacts:\nEats(Bear, Lion, True) ::: The bear eats the lion.\nNeeds(Bear, Mouse, True) ::: The bear needs the mouse.\nGreen(Lion, True) ::: The lion is green.\nNice(Lion, True) ::: The lion is nice.\nRound(Lion, True) ::: The lion is round.\nNeeds(Lion, Bear, True) ::: The lion needs the bear.\nSees(Lion, Rabbit, True) ::: The lion sees the rabbit.\nEats(Mouse, Lion, True) ::: The mouse eats the lion.\nRough(Mouse, True) ::: The mouse is rough.\nNeeds(Mouse, Bear, True) ::: The mouse needs the bear.\nSees(Mouse, Bear, True) ::: The mouse sees the bear.\nNice(Rabbit, True) ::: The rabbit is nice.\nNot(Rough, Rabbit, True) ::: The rabbit is not rough.\nSees(Rabbit, Lion, True) ::: The rabbit sees the lion.\nRules:\nIf something is nice then it needs the rabbit. ::: If something is nice then it needs the rabbit.\nNot(Sees, Bear, Mouse, True) >>> Needs(Bear, Rabbit, True) ::: If the mouse does not see the bear then the bear needs the rabbit.\nSees(x, Bear) && Nice(x, True) >>> Not(Needs, Bear, x, True)"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-743_Q6",
    "context": "Anne is blue. Anne is white. Bob is quiet. Charlie is blue. Charlie is red. Charlie is round. Gary is nice. Gary is red. Gary is rough. Gary is round. Quiet things are nice. If something is rough then it is red. All blue things are white. Red things are white. Quiet, nice things are rough. If something is round then it is rough. If something is white then it is blue. If something is quiet and white then it is round. If Charlie is blue then Charlie is nice.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is not blue.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue($x, bool) ::: Is x blue?\nWhite($x, bool) ::: Is x white?\nQuiet($x, bool) ::: Is x quiet?\nRed($x, bool) ::: Is x red?\nNice($x, bool) ::: Is x nice?\nRound($x, bool) ::: Is x round?\nRough($x, bool) ::: Is x rough?\nFacts:\nBlue(Anne, True) ::: Anne is blue.\nWhite(Anne, True) ::: Anne is white.\nQuiet(Bob, True) ::: Bob is quiet.\nBlue(Charlie, True) ::: Charlie is blue.\nRed(Charlie, True) ::: Charlie is red.\nRound(Charlie, True) ::: Charlie is round.\nNice(Gary, True) ::: Gary is nice.\nRed(Gary, True) ::: Gary is red.\nRough(Gary, True) ::: Gary is rough.\nRound(Gary, True) ::: Gary is round.\nRules:\nQuiet($x, True) >>> Nice($x, True) ::: Quiet things are nice.\nRough($x, True) >>> Red($x, True) ::: If something is rough then it is red.\nBlue($x, True) >>> White($x, True) ::: All blue things are white.\nRed($x, True) >>> White($x, True) ::: Red things are white.\nNice($x, True) && Quiet($x, True) >>> Rough($x, True) ::: Quiet, nice things are rough.\nRound($x, True) >>> Rough($x, True) ::: If something is round then it is rough.\nWhite($x, True) >>> Blue($x, True) ::: If something is white then it is blue.\nQuiet($x, True) && White($x, True) >>> Round($x, True) ::: If something is quiet and white then it is round.\nBlue($x, True) >>> Nice($x, True) ::: If Charlie is blue"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-571_Q7",
    "context": "The bald eagle is not blue. The bald eagle likes the dog. The bald eagle needs the tiger. The bald eagle does not see the dog. The bald eagle sees the tiger. The dog is blue. The dog sees the tiger. The rabbit is green. The rabbit is red. The rabbit sees the dog. The tiger needs the bald eagle. The tiger needs the dog. If someone needs the bald eagle and the bald eagle sees the tiger then they are rough. If someone needs the dog and they like the dog then they need the bald eagle. If someone likes the bald eagle then the bald eagle needs the dog. If someone is rough and they like the dog then the dog needs the tiger. If someone likes the dog and the dog is blue then they see the tiger. If someone needs the tiger and they do not see the dog then the tiger needs the bald eagle. If someone needs the bald eagle then they like the bald eagle.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bald eagle needs the bald eagle.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBaldEagle($x, bool) ::: Is x a bald eagle?\nBlue($x, bool) ::: Is x blue?\nDog($x, bool) ::: Is x a dog?\nGreen($x, bool) ::: Is x green?\nLikes($x, $y, bool) ::: Does x like y?\nNeeds($x, $y, bool) ::: Does x need y?\nRed($x, bool) ::: Is x red?\nRough($x, bool) ::: Is x rough?\nSees($x, $y, bool) ::: Does x see y?\nFacts:\nBaldEagle(BaldEagle, True) ::: The bald eagle is a bald eagle.\nBlue(Dog, True) ::: The dog is blue.\nGreen(Rabbit, True) ::: The rabbit is green.\nGreen(Rabbit, True) ::: The rabbit is red.\nLikes(BaldEagle, Dog, True) ::: The bald eagle likes the dog.\nNeeds(BaldEagle, Tiger, True) ::: The bald eagle needs the tiger.\nNeeds(BaldEagle, Dog, True) ::: The bald eagle needs the dog.\nNeeds(Dog, BaldEagle, True) ::: The dog needs the bald eagle.\nNeeds(Dog, Tiger, True) ::: The dog needs the tiger.\nNeeds(Tiger, BaldEagle, True) ::: The tiger needs the bald eagle.\nNeeds(Tiger, Dog, True) ::: The tiger needs the dog.\nRed(Rabbit, True) ::: The rabbit is red.\nRough(BaldEagle, True) ::: The bald eagle is rough.\nSees(BaldEagle, Tiger, True) ::: The bald eagle sees the tiger.\nSees(Dog, Tiger, True) ::: The dog sees the tiger.\nRules:\nBaldEagle($x, True) >>> Needs($x"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-79_Q11",
    "context": "Charlie is young. Erin is not smart. Fiona is red. Fiona is not young. Gary is nice. Gary is red. Gary is smart. If Gary is smart then Gary is red. All smart people are nice. All young people are nice. If someone is young then they are quiet. If someone is green then they are cold. All smart people are cold. All cold, quiet people are green. If someone is young and nice then they are smart. All smart, green people are red.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Charlie is red.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nYoung($x, bool) ::: Is x young?\nSmart($x, bool) ::: Is x smart?\nRed($x, bool) ::: Is x red?\nNice($x, bool) ::: Is x nice?\nQuiet($x, bool) ::: Is x quiet?\nGreen($x, bool) ::: Is x green?\nCold($x, bool) ::: Is x cold?\nFacts:\nYoung(Charlie, True) ::: Charlie is young.\nNot(Smart(Erin, True)) ::: Erin is not smart.\nRed(Fiona, True) ::: Fiona is red.\nNot(Young(Fiona, True)) ::: Fiona is not young.\nNice(Gary, True) ::: Gary is nice.\nRed(Gary, True) ::: Gary is red.\nSmart(Gary, True) ::: Gary is smart.\nSmart(Gary, True) >>> Red(Gary, True) ::: If Gary is smart then Gary is red.\nAll(Smart($x, True), Nice($x, True)) ::: All smart people are nice.\nAll(Young($x, True), Nice($x, True)) ::: All young people are nice.\nYoung($x, True) >>> Quiet($x, True) ::: If someone is young then they are quiet.\nGreen($x, True) >>> Cold($x, True) ::: If someone is green then they are cold.\nAll(Smart($x, True), Cold($x, True)) ::: All smart people are cold.\nAll(Cold($x, True), Quiet($x, True), Green($x, True)) ::: All cold, quiet people are green.\nYoung($x, True) && Nice($x, True) >>> Smart($x, True) ::: If someone is young and nice then they are smart.\nAll(Smart($x, True), Green($x, True), Red($x, True)) ::: All smart, green people are red.\nQuery:\nRed(Charlie, True) :::"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1293_Q2",
    "context": "Anne is cold. Anne is green. Bob is nice. Bob is smart. Charlie is kind. Charlie is nice. Charlie is red. Charlie is smart. Charlie is young. Gary is kind. Gary is red. Gary is young. Green things are red. If something is nice and green then it is smart. All red things are young. If Bob is kind and Bob is red then Bob is cold. If Gary is green and Gary is nice then Gary is kind. All smart, red things are kind. All young, red things are nice. If something is kind then it is cold.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Charlie is not kind.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nGreen($x, bool) ::: Is x green?\nNice($x, bool) ::: Is x nice?\nKind($x, bool) ::: Is x kind?\nRed($x, bool) ::: Is x red?\nSmart($x, bool) ::: Is x smart?\nYoung($x, bool) ::: Is x young?\nFacts:\nCold(Anne, True) ::: Anne is cold.\nGreen(Anne, True) ::: Anne is green.\nNice(Bob, True) ::: Bob is nice.\nSmart(Bob, True) ::: Bob is smart.\nKind(Charlie, True) ::: Charlie is kind.\nNice(Charlie, True) ::: Charlie is nice.\nRed(Charlie, True) ::: Charlie is red.\nSmart(Charlie, True) ::: Charlie is smart.\nYoung(Charlie, True) ::: Charlie is young.\nKind(Gary, True) ::: Gary is kind.\nRed(Gary, True) ::: Gary is red.\nYoung(Gary, True) ::: Gary is young.\nRules:\nGreen($x, True) >>> Red($x, True) ::: Green things are red.\nNice($x, True) && Green($x, True) >>> Smart($x, True) ::: If something is nice and green then it is smart.\nRed($x, True) >>> Young($x, True) ::: All red things are young.\nKind($x, True) && Red($x, True) >>> Cold($x, True) ::: If Bob is kind and Bob is red then Bob is cold.\nGreen($x, True) && Nice($x, True) >>> Kind($x, True) ::: If Gary is green and Gary is nice then Gary is kind.\nRed($x, True) && Smart($x, True) >>> Kind($x, True) ::: All smart, red things are kind.\nYoung($x, True) && Red($x, True) >>>"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-898_Q8",
    "context": "Anne is not smart. Anne is young. Dave is white. Erin is furry. Erin is white. Gary is smart. Gary is white. Young things are red. All young things are red. White, red things are quiet. All furry things are quiet. White things are smart. If something is smart then it is big. All big, red things are furry. If something is smart then it is furry. Quiet things are young.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Dave is not quiet.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nSmart($x, bool) ::: Is x smart?\nYoung($x, bool) ::: Is x young?\nRed($x, bool) ::: Is x red?\nQuiet($x, bool) ::: Is x quiet?\nBig($x, bool) ::: Is x big?\nFurry($x, bool) ::: Is x furry?\nFacts:\nNotSmart(Anne, True) ::: Anne is not smart.\nYoung(Anne, True) ::: Anne is young.\nWhite(Dave, True) ::: Dave is white.\nFurry(Erin, True) ::: Erin is furry.\nWhite(Erin, True) ::: Erin is white.\nSmart(Gary, True) ::: Gary is smart.\nWhite(Gary, True) ::: Gary is white.\nYoung($x, True) >>> Red($x, True) ::: Young things are red.\nYoung($x, True) >>> Red($x, True) ::: All young things are red.\nWhite($x, True) && Red($x, True) >>> Quiet($x, True) ::: White, red things are quiet.\nFurry($x, True) >>> Quiet($x, True) ::: All furry things are quiet.\nWhite($x, True) >>> Smart($x, True) ::: White things are smart.\nSmart($x, True) >>> Big($x, True) ::: If something is smart then it is big.\nBig($x, True) >>> Red($x, True) ::: All big, red things are furry.\nSmart($x, True) >>> Furry($x, True) ::: If something is smart then it is furry.\nQuiet($x, True) >>> Young($x, True) ::: Quiet things are young.\nQuery:\nNotQuiet(Dave, True) ::: Dave is not quiet.\n------\nProblem:\nAnne is not smart. Anne is young. Dave is white. Erin is furry. Erin is white. Gary is smart. Gary is"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1175_Q16",
    "context": "Anne is rough. Bob is furry. Dave is big. Dave is nice. Dave is rough. Fiona is furry. Fiona is nice. If someone is smart and cold then they are nice. If someone is smart then they are cold. Rough, nice people are red. If someone is rough then they are smart. If Fiona is red then Fiona is big. All furry people are rough. If someone is big then they are rough.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Anne is furry.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRough($x, bool) ::: Is x rough?\nFurry($x, bool) ::: Is x furry?\nBig($x, bool) ::: Is x big?\nNice($x, bool) ::: Is x nice?\nSmart($x, bool) ::: Is x smart?\nCold($x, bool) ::: Is x cold?\nRed($x, bool) ::: Is x red?\nFacts:\nRough(Anne, True) ::: Anne is rough.\nFurry(Bob, True) ::: Bob is furry.\nBig(Dave, True) ::: Dave is big.\nNice(Dave, True) ::: Dave is nice.\nRough(Dave, True) ::: Dave is rough.\nFurry(Fiona, True) ::: Fiona is furry.\nNice(Fiona, True) ::: Fiona is nice.\nSmart(Fiona, True) ::: Fiona is smart.\nCold(Fiona, True) ::: Fiona is cold.\nRules:\nSmart($x, True) >>> Cold($x, True) ::: If someone is smart then they are cold.\nSmart($x, True) >>> Nice($x, True) ::: If someone is smart and cold then they are nice.\nRough($x, True) >>> Smart($x, True) ::: If someone is rough then they are smart.\nFurry($x, True) >>> Rough($x, True) ::: All furry people are rough.\nBig($x, True) >>> Rough($x, True) ::: If someone is big then they are rough.\nFurry($x, True) && Rough($x, True) >>> Red($x, True) ::: Rough, nice people are red.\nQuery:\nFurry(Anne, True) ::: Anne is furry.\n------"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-558_Q22",
    "context": "The cow is nice. The cow is rough. The mouse chases the rabbit. The mouse is green. The rabbit sees the tiger. The tiger is kind. The tiger is nice. The tiger is rough. The tiger sees the mouse. The tiger visits the rabbit. If someone sees the tiger and the tiger is rough then they visit the mouse. If someone visits the rabbit and they see the mouse then the mouse is green. If someone visits the mouse then they visit the tiger. If someone visits the rabbit and the rabbit is rough then the rabbit visits the cow. If someone is nice then they visit the mouse. If someone visits the tiger then they visit the cow. If someone sees the mouse then the mouse visits the cow. If someone visits the cow and they visit the mouse then the mouse sees the tiger.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The rabbit visits the rabbit.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNice($x, bool) ::: Is x nice?\nRough($x, bool) ::: Is x rough?\nGreen($x, bool) ::: Is x green?\nKind($x, bool) ::: Is x kind?\nSees($x, $y, bool) ::: Does x see y?\nVisits($x, $y, bool) ::: Does x visit y?\nFacts:\nNice(Cow, True) ::: The cow is nice.\nRough(Cow, True) ::: The cow is rough.\nChases(Mouse, Rabbit, True) ::: The mouse chases the rabbit.\nGreen(Mouse, True) ::: The mouse is green.\nSees(Tiger, Rabbit, True) ::: The tiger sees the rabbit.\nKind(Tiger, True) ::: The tiger is kind.\nNice(Tiger, True) ::: The tiger is nice.\nRough(Tiger, True) ::: The tiger is rough.\nSees(Tiger, Mouse, True) ::: The tiger sees the mouse.\nVisits(Tiger, Rabbit, True) ::: The tiger visits the rabbit.\nRules:\nSees($x, $y, True) >>> Visits($x, $y, True) ::: If someone sees the tiger and the tiger is rough then they visit the mouse.\nVisits($x, Rabbit, True) && Sees($x, Mouse, True) >>> Green($x, True) ::: If someone visits the rabbit and they see the mouse then the mouse is green.\nVisits($x, Mouse, True) >>> Visits($x, Tiger, True) ::: If someone visits the mouse then they visit the tiger.\nVisits($x, Rabbit, True) && Rough($x, True) >>> Visits($x, Cow, True) ::: If someone"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-271_Q21",
    "context": "The bald eagle eats the cat. The bald eagle eats the cow. The bald eagle is rough. The bald eagle needs the cat. The bald eagle sees the cat. The cat needs the cow. The cat sees the cow. The cow eats the cat. The cow is nice. The cow is red. The cow needs the bald eagle. The cow needs the cat. The tiger is cold. The tiger is young. The tiger needs the cat. The tiger sees the bald eagle. If something sees the cat and it is red then it needs the bald eagle. If the cow sees the cat then the cat is rough. If the tiger is rough then the tiger is red. If something eats the cat and the cat is red then it sees the tiger. If something sees the cow then it is red. If something sees the cat and it sees the tiger then it needs the bald eagle. If something needs the cow then it needs the cat. If something eats the tiger then the tiger eats the bald eagle. If something needs the bald eagle then it sees the cow.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cow does not eat the tiger.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y, bool) ::: Does x eat y?\nNeeds($x, $y, bool) ::: Does x need y?\nSees($x, $y, bool) ::: Does x see y?\nIs($x, $y, bool) ::: Is x y?\nRough($x, bool) ::: Is x rough?\nNice($x, bool) ::: Is x nice?\nRed($x, bool) ::: Is x red?\nYoung($x, bool) ::: Is x young?\nCold($x, bool) ::: Is x cold?\nFacts:\nEats(BaldEagle, Cat, True) ::: The bald eagle eats the cat.\nEats(BaldEagle, Cow, True) ::: The bald eagle eats the cow.\nRough(BaldEagle, True) ::: The bald eagle is rough.\nNeeds(BaldEagle, Cat, True) ::: The bald eagle needs the cat.\nSees(BaldEagle, Cat, True) ::: The bald eagle sees the cat.\nNeeds(Cat, Cow, True) ::: The cat needs the cow.\nSees(Cat, Cow, True) ::: The cat sees the cow.\nEats(Cat, Cow, True) ::: The cat eats the cow.\nNice(Cow, True) ::: The cow is nice.\nRed(Cow, True) ::: The cow is red.\nNeeds(Cow, BaldEagle, True) ::: The cow needs the bald eagle.\nNeeds(Cow, Cat, True) ::: The cow needs the cat.\nCold(Tiger, True) ::: The tiger is cold.\nYoung(Tiger, True) ::: The tiger is young.\nNeeds(Tiger, Cat, True) ::: The tiger"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-314_Q21",
    "context": "Anne is cold. Anne is smart. Bob is smart. Bob is young. Gary is kind. Harry is red. Harry is young. All young things are red. If Harry is young then Harry is smart. If Gary is rough then Gary is cold. If Gary is cold and Gary is blue then Gary is rough. If something is smart and kind then it is young. All cold things are smart. If something is kind then it is rough. Red, kind things are cold.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is not blue.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nSmart($x, bool) ::: Is x smart?\nYoung($x, bool) ::: Is x young?\nKind($x, bool) ::: Is x kind?\nRed($x, bool) ::: Is x red?\nBlue($x, bool) ::: Is x blue?\nRough($x, bool) ::: Is x rough?\nFacts:\nCold(Anne, True) ::: Anne is cold.\nSmart(Anne, True) ::: Anne is smart.\nSmart(Bob, True) ::: Bob is smart.\nYoung(Bob, True) ::: Bob is young.\nKind(Gary, True) ::: Gary is kind.\nRed(Harry, True) ::: Harry is red.\nYoung(Harry, True) ::: Harry is young.\nRules:\nYoung($x, True) >>> Red($x, True) ::: All young things are red.\nYoung($x, True) >>> Smart($x, True) ::: If Harry is young then Harry is smart.\nKind($x, True) >>> Cold($x, True) ::: If Gary is rough then Gary is cold.\nCold($x, True) && Blue($x, True) >>> Rough($x, True) ::: If Gary is cold and Gary is blue then Gary is rough.\nSmart($x, True) && Kind($x, True) >>> Young($x, True) ::: If something is smart and kind then it is young.\nCold($x, True) >>> Smart($x, True) ::: All cold things are smart.\nKind($x, True) >>> Rough($x, True) ::: If something is kind then it is rough.\nRed($x, True) && Kind($x, True) >>> Cold($x, True) ::: Red, kind things are cold.\nQuery:"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-1010_Q17",
    "context": "The bear eats the mouse. The bear likes the mouse. The bear likes the rabbit. The bear needs the mouse. The mouse eats the rabbit. The mouse eats the squirrel. The mouse needs the rabbit. The mouse needs the squirrel. The rabbit does not need the squirrel. The squirrel is blue. The squirrel is green. The squirrel is red. The squirrel likes the bear. The squirrel does not like the mouse. The squirrel needs the bear. The squirrel needs the mouse. If someone eats the bear then they like the rabbit. If the bear is round and the bear is not blue then the bear does not like the rabbit. If the bear eats the rabbit and the rabbit likes the mouse then the bear likes the squirrel. If someone likes the rabbit then they like the squirrel. If someone needs the rabbit and the rabbit is round then they like the squirrel. If someone needs the squirrel and they need the mouse then they do not eat the squirrel. If someone likes the squirrel then they need the squirrel. If the squirrel needs the bear and the squirrel needs the mouse then the squirrel eats the bear. If someone is nice then they eat the mouse.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The rabbit does not eat the mouse.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y, bool) ::: Does x eat y?\nLikes($x, $y, bool) ::: Does x like y?\nNeeds($x, $y, bool) ::: Does x need y?\nRound($x, bool) ::: Is x round?\nBlue($x, bool) ::: Is x blue?\nGreen($x, bool) ::: Is x green?\nRed($x, bool) ::: Is x red?\nFacts:\nEats(Bear, Mouse, True) ::: The bear eats the mouse.\nLikes(Bear, Mouse, True) ::: The bear likes the mouse.\nLikes(Bear, Rabbit, True) ::: The bear likes the rabbit.\nNeeds(Bear, Mouse, True) ::: The bear needs the mouse.\nEats(Mouse, Rabbit, True) ::: The mouse eats the rabbit.\nEats(Mouse, Squirrel, True) ::: The mouse eats the squirrel.\nNeeds(Mouse, Rabbit, True) ::: The mouse needs the rabbit.\nNeeds(Mouse, Squirrel, True) ::: The mouse needs the squirrel.\nNot(Needs(Rabbit, Squirrel, True)) ::: The rabbit does not need the squirrel.\nBlue(Squirrel, True) ::: The squirrel is blue.\nGreen(Squirrel, True) ::: The squirrel is green.\nRed(Squirrel, True) ::: The squirrel is red.\nLikes(Squirrel, Bear, True) ::: The squirrel likes the bear.\nNot(Likes(Squirrel, Mouse, True)) ::: The squirrel does not like the mouse.\nNeeds(Squirrel, Bear, True) ::: The squirrel needs the bear.\nNeeds(Squirrel"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-27_Q17",
    "context": "The cat chases the cow. The cat chases the mouse. The cat is nice. The cat is red. The cat is rough. The cat needs the lion. The cat does not need the mouse. The cat visits the mouse. The cow does not chase the cat. The cow is big. The lion chases the cat. The lion chases the cow. The lion is young. The lion visits the cow. The mouse is big. The mouse is rough. If someone needs the lion then the lion does not need the mouse. If someone visits the cat then they are not big. If someone is rough then they visit the mouse. If the cow visits the lion and the cow is big then the lion does not need the cat. If someone visits the mouse then they are red. If someone chases the cow and they do not need the mouse then the cow is rough. If someone is red then they visit the lion. If someone is red and they chase the lion then the lion is red. If someone chases the mouse and they are red then the mouse needs the cat.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cat does not need the cat.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nNeeds($x, $y, bool) ::: Does x need y?\nVisits($x, $y, bool) ::: Does x visit y?\nIs($x, $y, bool) ::: Is x y?\nRed($x, bool) ::: Is x red?\nRough($x, bool) ::: Is x rough?\nBig($x, bool) ::: Is x big?\nYoung($x, bool) ::: Is x young?\nFacts:\nChases(Cat, Cow, True) ::: The cat chases the cow.\nChases(Cat, Mouse, True) ::: The cat chases the mouse.\nChases(Cat, Lion, True) ::: The cat chases the lion.\nChases(Cow, Cat, False) ::: The cow does not chase the cat.\nChases(Lion, Cat, True) ::: The lion chases the cat.\nChases(Lion, Cow, True) ::: The lion chases the cow.\nNeeds(Cat, Lion, True) ::: The cat needs the lion.\nNeeds(Cat, Mouse, False) ::: The cat does not need the mouse.\nVisits(Cat, Mouse, True) ::: The cat visits the mouse.\nIs(Cat, Red, True) ::: The cat is red.\nIs(Cat, Rough, True) ::: The cat is rough.\nIs(Cat, Young, False) ::: The cat is not young.\nIs(Cat, Nice, True) ::: The cat is nice.\nRules:\nChases($x, $y, True) >>> Needs($x, $y, False) ::: If someone needs the lion then the lion does not need the mouse.\nVisits($x, $y, True) >>> Is($x, Red, True) ::: If someone visits the"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-353_Q14",
    "context": "Bob is quiet. Bob is round. Fiona is red. Gary is quiet. Gary is round. Gary is young. Harry is round. If someone is red then they are round. If someone is kind and red then they are green. If someone is round and young then they are kind. All round people are quiet. If Harry is quiet and Harry is red then Harry is green. All quiet, red people are young.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Harry is kind.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nQuiet($x, bool) ::: Is x quiet?\nRound($x, bool) ::: Is x round?\nRed($x, bool) ::: Is x red?\nGreen($x, bool) ::: Is x green?\nKind($x, bool) ::: Is x kind?\nFacts:\nQuite(Bob, True) ::: Bob is quiet.\nRound(Bob, True) ::: Bob is round.\nRed(Fiona, True) ::: Fiona is red.\nQuite(Gary, True) ::: Gary is quiet.\nRound(Gary, True) ::: Gary is round.\nYoung(Gary, True) ::: Gary is young.\nRound(Harry, True) ::: Harry is round.\nRules:\nRed($x, True) >>> Round($x, True) ::: If someone is red then they are round.\nRed($x, True) && Kind($x, True) >>> Green($x, True) ::: If someone is red and kind then they are green.\nRound($x, True) && Young($x, True) >>> Kind($x, True) ::: If someone is round and young then they are kind.\nAll($x, Round($x, True)) >>> Quite($x, True) ::: All round people are quiet.\nQuite(Harry, True) && Red(Harry, True) >>> Green(Harry, True) ::: If Harry is quiet and Harry is red then Harry is green.\nAll($x, Quite($x, True) && Red($x, True)) >>> Young($x, True) ::: All quiet, red people are young.\nQuery:\nKind(Harry, True) ::: Harry is kind.\n------\nProblem:\nBob is quiet. Bob is round. Fiona is red. Gary is quiet. Gary is round. Gary is young. Harry is round. If someone is red then they are round. If"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-939_Q15",
    "context": "The bald eagle is blue. The bald eagle is green. The bald eagle is kind. The bear needs the bald eagle. The cow needs the bear. The tiger is nice. The tiger needs the bear. If someone likes the tiger then they visit the bald eagle. If someone is rough and they need the bald eagle then the bald eagle visits the tiger. If someone needs the bear then they are rough. If the bald eagle needs the cow and the cow likes the tiger then the tiger is kind. If someone visits the tiger then they like the tiger. If someone is nice and blue then they like the bald eagle. If the bald eagle is rough then the bald eagle likes the bear. If someone needs the bald eagle then they need the bear. If the bald eagle is rough then the bald eagle likes the tiger.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bald eagle is not rough.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue($x, bool) ::: Is x blue?\nGreen($x, bool) ::: Is x green?\nKind($x, bool) ::: Is x kind?\nLikes($x, $y, bool) ::: Does x like y?\nNeeds($x, $y, bool) ::: Does x need y?\nVisits($x, $y, bool) ::: Does x visit y?\nRough($x, bool) ::: Is x rough?\nFacts:\nBlue(BaldEagle, True) ::: The bald eagle is blue.\nGreen(BaldEagle, True) ::: The bald eagle is green.\nKind(BaldEagle, True) ::: The bald eagle is kind.\nNeeds(Bear, BaldEagle, True) ::: The bear needs the bald eagle.\nNeeds(Cow, BaldEagle, True) ::: The cow needs the bald eagle.\nNeeds(Tiger, Bear, True) ::: The tiger needs the bear.\nLikes(Tiger, BaldEagle, True) ::: The tiger likes the bald eagle.\nRough(Tiger, True) ::: The tiger is rough.\nNeeds(Tiger, Bear, True) ::: The tiger needs the bear.\nVisits(Tiger, BaldEagle, True) ::: If someone likes the tiger then they visit the bald eagle.\nRough($x, True) && Needs($x, BaldEagle) >>> Visits(BaldEagle, Tiger, True) ::: If someone is rough and they need the bald eagle then the bald eagle visits the tiger.\nRough($x, True) >>> Needs($x, Bear) ::: If someone needs the bear then they are rough.\nNeeds(BaldEagle, Cow) && Likes(Tiger, BaldEagle) >>> Kind(Tiger,"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-876_Q8",
    "context": "Anne is round. Anne is young. Dave is red. Dave is smart. Gary is big. Gary is round. Gary is young. Harry is big. Harry is blue. Harry is red. Harry is smart. Harry is young. Red things are furry. Round, big things are young. Smart, blue things are round. All blue, round things are big. All furry, red things are blue. If something is big and young then it is round.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Dave is not round.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRound($x, bool) ::: Is x round?\nYoung($x, bool) ::: Is x young?\nRed($x, bool) ::: Is x red?\nSmart($x, bool) ::: Is x smart?\nBlue($x, bool) ::: Is x blue?\nBig($x, bool) ::: Is x big?\nFurry($x, bool) ::: Is x furry?\nFacts:\nRound(Anne, True) ::: Anne is round.\nYoung(Anne, True) ::: Anne is young.\nRed(Dave, True) ::: Dave is red.\nSmart(Dave, True) ::: Dave is smart.\nRound(Gary, True) ::: Gary is round.\nYoung(Gary, True) ::: Gary is young.\nBig(Gary, True) ::: Gary is big.\nBig(Harry, True) ::: Harry is big.\nBlue(Harry, True) ::: Harry is blue.\nRed(Harry, True) ::: Harry is red.\nSmart(Harry, True) ::: Harry is smart.\nYoung(Harry, True) ::: Harry is young.\nRules:\nRed($x, True) >>> Furry($x, True) ::: Red things are furry.\nRound($x, True) && Big($x, True) >>> Young($x, True) ::: Round, big things are young.\nSmart($x, True) && Blue($x, True) >>> Round($x, True) ::: Smart, blue things are round.\nBlue($x, True) && Round($x, True) >>> Big($x, True) ::: All blue, round things are big.\nFurry($x, True) && Red($x, True) >>> Blue($x, True) ::: All furry, red things are blue.\nBig($x, True) && Young($"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-519_Q13",
    "context": "Bob is big. Bob is furry. Bob is green. Bob is rough. Bob is white. Charlie is not blue. Erin is furry. Erin is green. Erin is white. Erin is young. Gary is big. If someone is white then they are rough. If Erin is young and Erin is blue then Erin is green. All young people are furry. White, green people are furry. If someone is green then they are big. If someone is big then they are white. Furry, big people are blue. If someone is rough then they are blue. Blue people are young.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Charlie is not furry.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nFurry($x, bool) ::: Is x furry?\nGreen($x, bool) ::: Is x green?\nRough($x, bool) ::: Is x rough?\nWhite($x, bool) ::: Is x white?\nBlue($x, bool) ::: Is x blue?\nYoung($x, bool) ::: Is x young?\nFacts:\nBig(Bob, True) ::: Bob is big.\nFurry(Bob, True) ::: Bob is furry.\nGreen(Bob, True) ::: Bob is green.\nRough(Bob, True) ::: Bob is rough.\nWhite(Bob, True) ::: Bob is white.\nNot(Blue(Charlie, True)) ::: Charlie is not blue.\nFurry(Erin, True) ::: Erin is furry.\nGreen(Erin, True) ::: Erin is green.\nWhite(Erin, True) ::: Erin is white.\nYoung(Erin, True) ::: Erin is young.\nBig(Gary, True) ::: Gary is big.\nRules:\nWhite($x, True) >>> Rough($x, True) ::: If someone is white then they are rough.\nYoung($x, True) && Erin($x, True) && Blue($x, True) >>> Erin($x, True) && Green($x, True) ::: If Erin is young and Erin is blue then Erin is green.\nYoung($x, True) >>> Furry($x, True) ::: All young people are furry.\nGreen($x, True) >>> Furry($x, True) ::: White, green people are furry.\nGreen($x, True) >>> Big($x, True) ::: If someone is green then they are big.\nBig($x,"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1307_Q2",
    "context": "Charlie is nice. Charlie is rough. Erin is big. Erin is nice. Erin is red. Erin is rough. Gary is big. Gary is green. Harry is blue. Harry is rough. All rough, big things are red. All blue things are big. Red, rough things are big. If something is red and big then it is nice. Red, cold things are nice. All nice things are cold. Cold things are green. If Charlie is rough and Charlie is blue then Charlie is cold. If something is green and cold then it is blue.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is not green.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNice($x, bool) ::: Is x nice?\nRough($x, bool) ::: Is x rough?\nBig($x, bool) ::: Is x big?\nRed($x, bool) ::: Is x red?\nGreen($x, bool) ::: Is x green?\nBlue($x, bool) ::: Is x blue?\nCold($x, bool) ::: Is x cold?\nFacts:\nNice(Charlie, True) ::: Charlie is nice.\nRough(Charlie, True) ::: Charlie is rough.\nBig(Erin, True) ::: Erin is big.\nNice(Erin, True) ::: Erin is nice.\nRed(Erin, True) ::: Erin is red.\nRough(Erin, True) ::: Erin is rough.\nBig(Gary, True) ::: Gary is big.\nGreen(Gary, True) ::: Gary is green.\nBlue(Harry, True) ::: Harry is blue.\nRough(Harry, True) ::: Harry is rough.\nRules:\nRough($x, True) && Big($x, True) >>> Red($x, True) ::: All rough, big things are red.\nBlue($x, True) >>> Big($x, True) ::: All blue things are big.\nRough($x, True) && Big($x, True) >>> Red($x, True) ::: Red, rough things are big.\nRed($x, True) && Big($x, True) >>> Nice($x, True) ::: If something is red and big then it is nice.\nRed($x, True) && Big($x, True) >>> Cold($x, True) ::: Red, rough things are big.\nCold($x, True) && Nice($x, True) >>> Green($x, True) ::: If something is red and big then it is nice.\nCold($x, True) >>> Green($x, True) ::: Cold things are green.\nNice($x, True) >>> Cold($x, True) ::: If Charlie is rough and Charlie is blue then Charlie is cold.\nGreen($x, True) >>> Cold($x, True) ::: If something is green and cold then it is blue.\nQuery:\nNot(Green(Gary, True)) ::: Gary is not green.\n------"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-822_Q11",
    "context": "Anne is blue. Anne is rough. Anne is white. Bob is blue. Erin is kind. Erin is rough. Harry is blue. Harry is kind. Harry is rough. Harry is round. Harry is young. If Bob is rough then Bob is kind. All blue people are young. If someone is kind then they are blue. If Erin is young and Erin is green then Erin is round. All round people are white. If Bob is white and Bob is young then Bob is kind. Green people are kind. Young people are green.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Erin is white.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue($x, bool) ::: Is x blue?\nRough($x, bool) ::: Is x rough?\nWhite($x, bool) ::: Is x white?\nKind($x, bool) ::: Is x kind?\nRound($x, bool) ::: Is x round?\nYoung($x, bool) ::: Is x young?\nFacts:\nBlue(Anne, True) ::: Anne is blue.\nRough(Anne, True) ::: Anne is rough.\nWhite(Anne, True) ::: Anne is white.\nBlue(Bob, True) ::: Bob is blue.\nKind(Erin, True) ::: Erin is kind.\nRough(Erin, True) ::: Erin is rough.\nBlue(Harry, True) ::: Harry is blue.\nKind(Harry, True) ::: Harry is kind.\nRough(Harry, True) ::: Harry is rough.\nRound(Harry, True) ::: Harry is round.\nYoung(Harry, True) ::: Harry is young.\nRules:\nBlue($x, True) >>> Young($x, True) ::: All blue people are young.\nKind($x, True) >>> Blue($x, True) ::: If someone is kind then they are blue.\nYoung($x, True) && Erin($x, True) && Green($x, True) >>> Round($x, True) ::: If Erin is young and Erin is green then Erin is round.\nRound($x, True) >>> White($x, True) ::: All round people are white.\nBlue($x, True) && Young($x, True) >>> Kind($x, True) ::: If Bob is white and Bob is young then Bob is kind.\nGreen($x, True) >>> Kind($x, True) ::: Green people are kind.\nYoung($x, True) >>> Green($x, True) ::: Young people are green.\nQuery:\nRound(Erin, True) ::: Erin is white.\n------\nProblem:\nAnne is blue. Anne is furry. Anne is green. Anne is rough. Anne is white. Bob is blue. Bob is furry. Bob is green. Bob is rough. Bob is white. Erin is blue. Erin is furry. Erin is green. Erin is rough. Erin is white."
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-811_Q3",
    "context": "The bear is big. The bear is green. The bear is rough. The bear is young. The bear sees the mouse. The cow chases the bear. The cow chases the dog. The cow is young. The dog is red. The dog sees the bear. The mouse sees the cow. If someone chases the cow then they are rough. If someone is green then they are red. If someone sees the bear and the bear is red then the bear sees the cow. If someone is rough then they chase the dog. If someone chases the dog and they chase the mouse then the mouse is green. If someone is big then they visit the cow. If someone chases the cow then they visit the dog. If someone sees the cow then they chase the mouse.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bear is red.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nGreen($x, bool) ::: Is x green?\nRough($x, bool) ::: Is x rough?\nYoung($x, bool) ::: Is x young?\nSees($x, $y, bool) ::: Does x see y?\nChases($x, $y, bool) ::: Does x chase y?\nVisits($x, $y, bool) ::: Does x visit y?\nFacts:\nBig(Bear, True) ::: The bear is big.\nGreen(Bear, True) ::: The bear is green.\nRough(Bear, True) ::: The bear is rough.\nYoung(Bear, True) ::: The bear is young.\nSees(Bear, Mouse, True) ::: The bear sees the mouse.\nChases(Cow, Bear, True) ::: The cow chases the bear.\nChases(Cow, Dog, True) ::: The cow chases the dog.\nYoung(Cow, True) ::: The cow is young.\nRed(Dog, True) ::: The dog is red.\nSees(Dog, Bear, True) ::: The dog sees the bear.\nSees(Mouse, Cow, True) ::: The mouse sees the cow.\nRules:\nChases($x, $y, True) >>> Rough($x, True) ::: If someone chases the cow then they are rough.\nGreen($x, True) >>> Red($x, True) ::: If someone is green then they are red.\nSees($x, Bear, True) && Red($Bear, True) >>> Sees($x, Cow, True) ::: If someone sees the bear and the bear is red then the bear sees the cow.\nRough($x, True) >>> Chases($x, Dog, True) ::: If someone is rough then they chase the dog.\nChases($x, Dog) && Chases($x, Mouse) >>> Green($Mouse, True) ::: If someone chases the dog and they chase the mouse then the mouse is green.\nBig($x, True) >>> Visits($x, Cow, True) ::: If someone is big then they visit the cow.\nChases($x, Cow) >>> Visits($x, Dog, True) ::: If someone chases the cow then they"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-667_Q11",
    "context": "Bob is big. Bob is nice. Bob is young. Erin is big. Erin is quiet. Erin is smart. Erin is white. Fiona is young. Gary is big. Gary is quiet. Gary is smart. Gary is young. Smart people are big. If someone is quiet and smart then they are red. Nice, red people are smart. If someone is big and young then they are nice. Young people are red. All red, quiet people are big. All red, white people are smart. Big people are young. All red, young people are white.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Fiona is nice.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nNice($x, bool) ::: Is x nice?\nQuiet($x, bool) ::: Is x quiet?\nSmart($x, bool) ::: Is x smart?\nRed($x, bool) ::: Is x red?\nWhite($x, bool) ::: Is x white?\nYoung($x, bool) ::: Is x young?\nFacts:\nBig(Bob, True) ::: Bob is big.\nNice(Bob, True) ::: Bob is nice.\nYoung(Bob, True) ::: Bob is young.\nBig(Erin, True) ::: Erin is big.\nQuiet(Erin, True) ::: Erin is quiet.\nSmart(Erin, True) ::: Erin is smart.\nWhite(Erin, True) ::: Erin is white.\nYoung(Fiona, True) ::: Fiona is young.\nBig(Gary, True) ::: Gary is big.\nQuiet(Gary, True) ::: Gary is quiet.\nSmart(Gary, True) ::: Gary is smart.\nYoung(Gary, True) ::: Gary is young.\nRules:\nSmart($x, True) >>> Big($x, True) ::: Smart people are big.\nQuiet($x, True) && Smart($x, True) >>> Red($x, True) ::: If someone is quiet and smart then they are red.\nNice($x, True) && Red($x, True) >>> Smart($x, True) ::: Nice, red people are smart.\nBig($x, True) && Young($x, True) >>> Nice($x, True) ::: If someone is big and young then they are nice.\nYoung($x, True) >>> Red($x, True) ::: Young people are red.\nRed($x, True) && Quiet($x, True) >>> Big($x, True) ::: All red, quiet people are big.\nRed($x, True) && White($x, True) >>> Smart($x, True) ::: All red, white people are smart.\nBig($x, True) >>> Young($x, True) ::: Big people are young.\nRed($x, True) && Young($x, True) >>> White($x, True) ::: All red,"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-163_Q16",
    "context": "Anne is big. Anne is smart. Bob is big. Bob is round. Bob is white. Erin is cold. Erin is rough. Erin is smart. Gary is cold. Gary is nice. Big people are white. Nice, big people are smart. Nice, big people are white. All white, cold people are smart. All white, round people are nice. All big, cold people are rough. If someone is rough then they are nice. All white people are round. All nice people are cold.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is rough.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nSmart($x, bool) ::: Is x smart?\nRound($x, bool) ::: Is x round?\nWhite($x, bool) ::: Is x white?\nCold($x, bool) ::: Is x cold?\nNice($x, bool) ::: Is x nice?\nFacts:\nBig(Anne, True) ::: Anne is big.\nSmart(Anne, True) ::: Anne is smart.\nBig(Bob, True) ::: Bob is big.\nRound(Bob, True) ::: Bob is round.\nWhite(Bob, True) ::: Bob is white.\nCold(Erin, True) ::: Erin is cold.\nRough(Erin, True) ::: Erin is rough.\nSmart(Erin, True) ::: Erin is smart.\nCold(Gary, True) ::: Gary is cold.\nNice(Gary, True) ::: Gary is nice.\nRules:\nBig($x, True) >>> White($x, True) ::: Big people are white.\nNice($x, True) && Big($x, True) >>> Smart($x, True) ::: Nice, big people are smart.\nNice($x, True) && Big($x, True) >>> White($x, True) ::: Nice, big people are white.\nWhite($x, True) >>> Cold($x, True) ::: All white, cold people are smart.\nWhite($x, True) >>> Round($x, True) ::: All white, round people are nice.\nBig($x, True) && Cold($x, True) >>> Rough($x, True) ::: All big, cold people are rough.\nRough($x, True) >>> Nice($x, True) ::: If someone is rough then they are nice.\nWhite($x, True) >>> Round($x, True) ::: All white people are round.\nNice($x, True) >>> Cold($x, True) ::: All nice people are cold.\nQuery:\nRough(Gary, True) ::: Gary is rough.\n------\nProblem:\nAnne is big. Anne is smart. Anne is white. Bob is big. Bob is round. Bob is white. Erin is cold. Erin is rough. Erin is smart. Gary"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-94_Q18",
    "context": "Bob is smart. Charlie is kind. Charlie is not smart. Fiona is blue. Fiona is rough. Fiona is smart. Gary is kind. All cold, quiet people are smart. If someone is cold then they are smart. If someone is red and kind then they are smart. If someone is quiet then they are blue. If someone is blue then they are quiet. If someone is kind then they are rough. If Gary is kind and Gary is rough then Gary is quiet. All blue, smart people are red. Blue, rough people are red.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Charlie is blue.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nSmart($x, bool) ::: Is x smart?\nKind($x, bool) ::: Is x kind?\nCold($x, bool) ::: Is x cold?\nQuiet($x, bool) ::: Is x quiet?\nBlue($x, bool) ::: Is x blue?\nRough($x, bool) ::: Is x rough?\nRed($x, bool) ::: Is x red?\nFacts:\nSmart(Bob, True) ::: Bob is smart.\nKind(Charlie, True) ::: Charlie is kind.\nNot(Smart(Charlie, True)) ::: Charlie is not smart.\nBlue(Fiona, True) ::: Fiona is blue.\nRough(Fiona, True) ::: Fiona is rough.\nSmart(Fiona, True) ::: Fiona is smart.\nRules:\nCold($x, True) >>> Smart($x, True) ::: All cold, quiet people are smart.\nCold($x, True) >>> Smart($x, True) ::: If someone is cold then they are smart.\nRed($x, True) && Kind($x, True) >>> Smart($x, True) ::: If someone is red and kind then they are smart.\nQuiet($x, True) >>> Blue($x, True) ::: If someone is quiet then they are blue.\nBlue($x, True) >>> Quiet($x, True) ::: If someone is blue then they are quiet.\nKind($x, True) >>> Rough($x, True) ::: If someone is kind then they are rough.\nAnd(Kind(Gary, True), Rough(Gary, True)) >>> Quiet(Gary, True) ::: If Gary is kind and Gary is rough then Gary is quiet.\nAll(Blue($x, True), Smart($x, True)) >>> Red($x, True) ::: All blue, smart people are red.\nBlue($x, True) && Rough($x, True) >>> Red($x, True) ::: Blue, rough people are red.\nQuery:\nBlue(Charlie, True) ::: Charlie is blue.\n------\nProblem:\nBob is smart. Charlie is kind. Charlie is not smart. Fiona is blue. Fiona is rough. Fiona is smart. Gary is kind. All cold, quiet people are smart. If someone is cold then"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-199_Q8",
    "context": "Bob is not blue. Bob is kind. Bob is red. Charlie is quiet. Dave is not nice. Dave is red. Erin is quiet. Young things are nice. If something is quiet then it is young. Quiet, nice things are not blue. If something is quiet and rough then it is kind. If something is nice and blue then it is rough. If something is young and not blue then it is rough.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Erin is blue.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue($x, bool) ::: Is x blue?\nKind($x, bool) ::: Is x kind?\nNice($x, bool) ::: Is x nice?\nQuiet($x, bool) ::: Is x quiet?\nRed($x, bool) ::: Is x red?\nRough($x, bool) ::: Is x rough?\nYoung($x, bool) ::: Is x young?\nFacts:\nNotBlue(Bob, True) ::: Bob is not blue.\nKind(Bob, True) ::: Bob is kind.\nRed(Bob, True) ::: Bob is red.\nQuiet(Charlie, True) ::: Charlie is quiet.\nNotNice(Dave, True) ::: Dave is not nice.\nRed(Dave, True) ::: Dave is red.\nQuiet(Erin, True) ::: Erin is quiet.\nYoung($x, True) >>> Nice($x, True) ::: Young things are nice.\nQuiet($x, True) >>> Young($x, True) ::: If something is quiet then it is young.\nQuiet($x, True) && Nice($x, True) >>> NotBlue($x, True) ::: Quiet, nice things are not blue.\nQuiet($x, True) && Rough($x, True) >>> Kind($x, True) ::: If something is quiet and rough then it is kind.\nNice($x, True) && Blue($x, True) >>> Rough($x, True) ::: If something is nice and blue then it is rough.\nYoung($x, True) && NotBlue($x, True) >>> Rough($x, True) ::: If something is young and not blue then it is rough.\nQuery:\nBlue(Erin, True) ::: Erin is blue.\n------\nProblem:\nBob is not blue. Bob is kind. Bob is red. Charlie is quiet. Dave is not nice. Dave is red. Erin is quiet. Young things are nice. If something is quiet then it is young. Quiet, nice things are not blue. If something is quiet and rough then it is kind. If something is nice and blue then it is rough. If something is young and not blue then it is rough.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Erin is blue"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-245_Q19",
    "context": "Bob is cold. Bob is nice. Bob is red. Erin is nice. Fiona is red. Harry is nice. Harry is smart. Quiet, round people are red. If Harry is cold then Harry is quiet. All red, round people are cold. Furry people are smart. If someone is smart and nice then they are round. Cold people are red. If someone is quiet then they are nice. All red people are furry. All smart, furry people are nice.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Erin is not quiet.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nNice($x, bool) ::: Is x nice?\nRed($x, bool) ::: Is x red?\nRound($x, bool) ::: Is x round?\nQuiet($x, bool) ::: Is x quiet?\nSmart($x, bool) ::: Is x smart?\nFacts:\nCold(Bob, True) ::: Bob is cold.\nNice(Bob, True) ::: Bob is nice.\nRed(Bob, True) ::: Bob is red.\nNice(Erin, True) ::: Erin is nice.\nRed(Erin, True) ::: Erin is red.\nNice(Fiona, True) ::: Fiona is nice.\nRed(Fiona, True) ::: Fiona is red.\nSmart(Harry, True) ::: Harry is smart.\nNice(Harry, True) ::: Harry is nice.\nRound(Harry, True) ::: Harry is round.\nRules:\nQuiet(x, True) >>> Round(x, True) ::: Quiet, round people are red.\nCold(x, True) >>> Quiet(x, True) ::: If Harry is cold then Harry is quiet.\nRed(x, True) >>> Cold(x, True) ::: All red, round people are cold.\nFurry(x, True) >>> Smart(x, True) ::: Furry people are smart.\nSmart(x, True) && Nice(x, True) >>> Round(x, True) ::: If someone is smart and nice then they are round.\nCold(x, True) >>> Red(x, True) ::: Cold people are red.\nQuiet(x, True) >>> Nice(x, True) ::: If someone is quiet then they are nice.\nRed(x, True) >>> Furry(x, True) ::: All red people are furry.\nSmart(x, True) && Furry(x, True) >>> Nice(x, True) ::: All smart, furry people are nice.\nQuery:\nNot(Quiet(Erin, True)) ::: Erin is not quiet.\n------\nProblem:\nBob is cold. Bob is nice. Bob is red. Erin is nice. Fiona is red. Harry is nice. Harry"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-519_Q16",
    "context": "The bear eats the rabbit. The bear is rough. The bear needs the cow. The bear sees the cow. The cow eats the rabbit. The cow is green. The cow is rough. The cow needs the lion. The cow sees the rabbit. The lion eats the rabbit. The lion is blue. The rabbit is green. The rabbit needs the bear. The rabbit needs the lion. The rabbit sees the cow. The rabbit sees the lion. Big people are blue. If the bear needs the lion then the lion is round. If someone sees the lion then they need the lion. If someone sees the lion and the lion is blue then the lion sees the cow. If someone is rough then they see the lion. If someone sees the lion then the lion is rough. If someone needs the bear and the bear eats the rabbit then they eat the cow. If someone eats the bear and they need the rabbit then the rabbit needs the bear. If someone is round then they need the bear.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cow needs the bear.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y, bool) ::: Does x eat y?\nNeeds($x, $y, bool) ::: Does x need y?\nSees($x, $y, bool) ::: Does x see y?\nIs($x, $y, bool) ::: Is x y?\nRound($x, bool) ::: Is x round?\nBlue($x, bool) ::: Is x blue?\nGreen($x, bool) ::: Is x green?\nRough($x, bool) ::: Is x rough?\nBig($x, bool) ::: Is x big?\nFacts:\nEats(Bear, Rabbit, True) ::: The bear eats the rabbit.\nRough(Bear, True) ::: The bear is rough.\nNeeds(Bear, Cow, True) ::: The bear needs the cow.\nSees(Bear, Cow, True) ::: The bear sees the cow.\nEats(Cow, Rabbit, True) ::: The cow eats the rabbit.\nGreen(Cow, True) ::: The cow is green.\nRough(Cow, True) ::: The cow is rough.\nNeeds(Cow, Lion, True) ::: The cow needs the lion.\nSees(Cow, Rabbit, True) ::: The cow sees the rabbit.\nEats(Lion, Rabbit, True) ::: The lion eats the rabbit.\nBlue(Lion, True) ::: The lion is blue.\nGreen(Rabbit, True) ::: The rabbit is green.\nNeeds(Rabbit, Bear, True) ::: The rabbit needs the bear.\nNeeds(Rabbit, Lion, True) ::: The rabbit needs the lion.\nSees(Rabbit, Cow, True) ::: The rabbit sees the cow.\nSees(Rabbit, Lion, True) ::: The rabbit sees the lion.\nRules:\nEats($x, $y, True) >>> Needs($x, $y, True) ::: If someone eats the bear and they need the rabbit then the rabbit needs the bear.\nNeeds($x, $y, True) >>> Eats($x, $y, True) ::: If someone needs the bear and the bear eats the rabbit then they eat the cow."
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-376_Q15",
    "context": "Bob is blue. Bob is kind. Bob is nice. Bob is rough. Erin is green. Erin is nice. Fiona is cold. Fiona is furry. Harry is furry. Harry is rough. Nice, cold people are rough. All furry people are blue. If someone is kind and nice then they are furry. If someone is blue and green then they are kind. Nice people are cold. All rough, green people are furry. If Harry is furry and Harry is cold then Harry is blue. Kind people are cold.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Harry is not cold.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue($x, bool) ::: Is x blue?\nKind($x, bool) ::: Is x kind?\nNice($x, bool) ::: Is x nice?\nRough($x, bool) ::: Is x rough?\nCold($x, bool) ::: Is x cold?\nFurry($x, bool) ::: Is x furry?\nFacts:\nBlue(Bob, True) ::: Bob is blue.\nKind(Bob, True) ::: Bob is kind.\nNice(Bob, True) ::: Bob is nice.\nRough(Bob, True) ::: Bob is rough.\nGreen(Erin, True) ::: Erin is green.\nNice(Erin, True) ::: Erin is nice.\nCold(Fiona, True) ::: Fiona is cold.\nFurry(Fiona, True) ::: Fiona is furry.\nFurry(Harry, True) ::: Harry is furry.\nRough(Harry, True) ::: Harry is rough.\nRules:\nNice($x, True) && Cold($x, True) >>> Rough($x, True) ::: Nice, cold people are rough.\nAll($x, True) >>> Furry($x, True) ::: All furry people are blue.\nKind($x, True) && Nice($x, True) >>> Furry($x, True) ::: If someone is kind and nice then they are furry.\nBlue($x, True) && Green($x, True) >>> Kind($x, True) ::: If someone is blue and green then they are kind.\nNice($x, True) >>> Cold($x, True) ::: Nice people are cold.\nAll($x, True) && Furry($x, True) >>> Rough($x, True) ::: All rough, green people are furry.\nKind($x, True) && Harry($x, True) && Cold($x, True) >>> Blue($x, True) ::: If Harry is furry and Harry is cold then Harry is blue.\nKind($x, True) >>> Cold($x, True) ::: Kind people are cold.\nQuery:\nNot(Cold(Harry, True)) ::: Harry is not cold.\n------\nProblem:\nBob is blue. Bob is kind. Bob is nice. Bob is rough"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-1004_Q2",
    "context": "The dog chases the rabbit. The mouse chases the rabbit. The mouse is blue. The mouse is not rough. The rabbit needs the tiger. The tiger chases the dog. The tiger chases the rabbit. The tiger is big. The tiger does not like the dog. The tiger needs the mouse. If someone chases the tiger then they do not need the rabbit. If someone needs the rabbit then they do not need the tiger. If someone is big then they are kind. If someone needs the dog then the dog does not like the mouse. If someone is blue and they do not need the rabbit then the rabbit is big. If someone is kind and they chase the rabbit then they need the dog. If someone likes the rabbit then they are big. If the tiger needs the dog then the dog likes the rabbit. If someone is big and they chase the mouse then the mouse is rough.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The tiger does not need the mouse.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nNeeds($x, $y, bool) ::: Does x need y?\nLikes($x, $y, bool) ::: Does x like y?\nIs($x, $y, bool) ::: Is x y?\nBig($x, bool) ::: Is x big?\nKind($x, bool) ::: Is x kind?\nRough($x, bool) ::: Is x rough?\nFacts:\nChases(Dog, Rabbit, True) ::: The dog chases the rabbit.\nChases(Mouse, Rabbit, True) ::: The mouse chases the rabbit.\nIs(Mouse, Blue, True) ::: The mouse is blue.\nIs(Mouse, Rough, False) ::: The mouse is not rough.\nNeeds(Rabbit, Tiger, True) ::: The rabbit needs the tiger.\nChases(Tiger, Dog, True) ::: The tiger chases the dog.\nChases(Tiger, Rabbit, True) ::: The tiger chases the rabbit.\nIs(Tiger, Big, True) ::: The tiger is big.\nIs(Tiger, Kind, False) ::: The tiger does not like the dog.\nNeeds(Tiger, Mouse, True) ::: The tiger needs the mouse.\nIs(Tiger, Likes, False) ::: If someone chases the tiger then they do not need the rabbit.\nIs(Tiger, Needs, False) ::: If someone needs the rabbit then they do not need the tiger.\nIs(Tiger, Big, True) ::: If someone is big then they are kind.\nIs(Dog, Needs, True) ::: If someone needs the dog then the dog does not like the mouse.\nIs(Mouse, Blue, True) ::: If someone is blue and they do not need the rabbit then the rabbit is big.\nIs(Kind, Chases, True) ::: If someone is kind and they chase the rabbit then they need the dog.\nIs(Likes, Rabbit, True) ::: If someone likes the rabbit then they are big.\nIs(Tiger, Needs, True) ::: If the tiger needs the dog then the dog likes the rabbit.\nIs(Big, Chases, True) ::: If someone is big and they chase the mouse then the mouse is rough.\nQuery:\nNeeds(Tiger, Mouse, True) ::: The tiger does not need the mouse.\n------"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-533_Q6",
    "context": "Dave is not kind. Erin is kind. Erin is rough. Fiona is blue. Fiona is kind. Gary is furry. Gary is kind. If something is big and not furry then it is rough. If something is blue and furry then it is rough. If Fiona is kind and Fiona is white then Fiona is blue. All rough, kind things are not white. If something is furry then it is big. All nice, kind things are big. All big, furry things are nice. If something is white then it is kind. If something is furry and nice then it is blue.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is not nice.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nKind($x, bool) ::: Is x kind?\nRough($x, bool) ::: Is x rough?\nBlue($x, bool) ::: Is x blue?\nWhite($x, bool) ::: Is x white?\nNice($x, bool) ::: Is x nice?\nBig($x, bool) ::: Is x big?\nFurry($x, bool) ::: Is x furry?\nFacts:\nNotKind(Dave, True) ::: Dave is not kind.\nKind(Erin, True) ::: Erin is kind.\nRough(Erin, True) ::: Erin is rough.\nBlue(Fiona, True) ::: Fiona is blue.\nKind(Fiona, True) ::: Fiona is kind.\nFurry(Gary, True) ::: Gary is furry.\nKind(Gary, True) ::: Gary is kind.\nBig(Gary, True) ::: Gary is big.\nNotFurry($x, True) >>> Rough($x, True) ::: If something is big and not furry then it is rough.\nFurry($x, True) && Blue($x, True) >>> Rough($x, True) ::: If something is blue and furry then it is rough.\nKind(Fiona, True) && White($x, True) >>> Blue($x, True) ::: If Fiona is kind and Fiona is white then Fiona is blue.\nNotWhite($x, True) >>> Rough($x, True) ::: All rough, kind things are not white.\nFurry($x, True) >>> Big($x, True) ::: If something is furry then it is big.\nKind($x, True) && Nice($x, True) >>> Big($x, True) ::: All nice, kind things are big.\nBig($x, True) && Furry($x, True) >>> Nice($x, True) ::: All big, furry things are nice.\nKind($x, True) >>> White($x, True) ::: If something is white then it is kind.\nFurry($x, True) && Nice($x, True) >>> Blue($x, True) ::: If something is furry and nice then it is blue.\nQuery:\nNotNice(Gary, True) ::: Gary is not nice.\n------\nProblem:\nDave is not kind. Erin is kind. Erin is rough. Fiona is blue. Fiona is kind. Gary is furry. Gary is kind. If something is big and not furry then it"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-724_Q17",
    "context": "Bob is quiet. Dave is green. Dave is not round. Fiona is green. Fiona is not quiet. Fiona is red. Harry is round. Round people are rough. All rough people are quiet. If Harry is quiet then Harry is smart. All rough, green people are red. Smart, quiet people are green. Red, quiet people are round.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is not round.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nQuiet($x, bool) ::: Is x quiet?\nRound($x, bool) ::: Is x round?\nGreen($x, bool) ::: Is x green?\nRed($x, bool) ::: Is x red?\nRough($x, bool) ::: Is x rough?\nSmart($x, bool) ::: Is x smart?\nFacts:\nQuite(Bob, True) ::: Bob is quiet.\nGreen(Dave, True) ::: Dave is green.\nRound(Dave, False) ::: Dave is not round.\nGreen(Fiona, True) ::: Fiona is green.\nQuite(Fiona, False) ::: Fiona is not quiet.\nRed(Fiona, True) ::: Fiona is red.\nRound(Harry, True) ::: Harry is round.\nRules:\nRound($x, True) >>> Rough($x, True) ::: Round people are rough.\nRough($x, True) >>> Quite($x, True) ::: All rough people are quiet.\nQuite($x, True) >>> Smart($x, True) ::: If Harry is quiet then Harry is smart.\nRough($x, True) && Green($x, True) >>> Red($x, True) ::: All rough, green people are red.\nSmart($x, True) && Quite($x, True) >>> Green($x, True) ::: Smart, quiet people are green.\nRed($x, True) && Quite($x, True) >>> Round($x, True) ::: Red, quiet people are round.\nQuery:\nRound(Bob, False) ::: Bob is not round.\n------\nProblem:\nBob is quiet. Dave is green. Dave is not round. Fiona is green. Fiona is not quiet. Fiona is red. Harry is round. Round people are rough. All rough people are quiet. If Harry is quiet then Harry is smart. All rough, green people are red. Smart, quiet people are green. Red, quiet people are round.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Bob is not round.\n###\nPredicates:\nQuiet($x, bool) ::: Is x quiet?\nRound($x, bool) ::: Is x round?\nGreen($x, bool) ::: Is x green?\nRed($x, bool) ::: Is x red?\nRough($x, bool) ::: Is x rough?\nSmart($x, bool) ::: Is x smart?\nFacts:\nQuite(Bob, True"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-705_Q9",
    "context": "Bob is nice. Bob is white. Charlie is nice. Charlie is young. Dave is big. Dave is green. Dave is smart. Dave is white. Dave is young. Gary is green. Green things are nice. All kind things are young. All nice, white things are kind. Nice things are kind. If something is smart and young then it is white. Young, nice things are smart. If something is nice and not white then it is not big.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is smart.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNice($x, bool) ::: Is x nice?\nWhite($x, bool) ::: Is x white?\nYoung($x, bool) ::: Is x young?\nBig($x, bool) ::: Is x big?\nGreen($x, bool) ::: Is x green?\nSmart($x, bool) ::: Is x smart?\nKind($x, bool) ::: Is x kind?\nFacts:\nNice(Bob, True) ::: Bob is nice.\nWhite(Bob, True) ::: Bob is white.\nNice(Charlie, True) ::: Charlie is nice.\nYoung(Charlie, True) ::: Charlie is young.\nBig(Dave, True) ::: Dave is big.\nGreen(Dave, True) ::: Dave is green.\nSmart(Dave, True) ::: Dave is smart.\nWhite(Dave, True) ::: Dave is white.\nYoung(Dave, True) ::: Dave is young.\nGreen(Gary, True) ::: Gary is green.\nRules:\nGreen($x, True) >>> Nice($x, True) ::: Green things are nice.\nYoung($x, True) >>> Kind($x, True) ::: All kind things are young.\nNice($x, True) && White($x, True) >>> Kind($x, True) ::: All nice, white things are kind.\nNice($x, True) >>> Kind($x, True) ::: Nice things are kind.\nSmart($x, True) && Young($x, True) >>> White($x, True) ::: If something is smart and young then it is white.\nYoung($x, True) && Nice($x, True) >>> Smart($x, True) ::: Young, nice things are smart.\nNice($x, True) && White($x, True) >>> Not(Big($x, True)) ::: If something is nice and not white then it is not big.\nQuery:\nSmart(Gary, True) ::: Gary is smart.\n------\nProblem:\nBob is nice. Bob is white. Charlie is nice. Charlie is young. Dave is big. Dave is green. Dave is smart. Dave is white. Dave is young. Gary is green. Green things are nice. All kind things are young. All nice, white things are kind. Nice things are kind. If something is smart and young then it is white. Young, nice things are smart. If something is nice and not white then it is not big.\nQuestion:\nBased on the above information, is the following statement"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-482_Q7",
    "context": "Anne is cold. Anne is furry. Anne is smart. Charlie is furry. Charlie is green. Charlie is nice. Charlie is rough. Charlie is smart. Erin is green. Erin is nice. Erin is rough. Fiona is green. Nice, cold people are furry. If someone is green and white then they are smart. If Fiona is nice then Fiona is smart. All green people are white. If someone is smart then they are furry. Cold people are nice. Furry people are cold.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Fiona is furry.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nFurry($x, bool) ::: Is x furry?\nGreen($x, bool) ::: Is x green?\nNice($x, bool) ::: Is x nice?\nRough($x, bool) ::: Is x rough?\nSmart($x, bool) ::: Is x smart?\nFacts:\nCold(Anne, True) ::: Anne is cold.\nFurry(Anne, True) ::: Anne is furry.\nSmart(Anne, True) ::: Anne is smart.\nFurry(Charlie, True) ::: Charlie is furry.\nGreen(Charlie, True) ::: Charlie is green.\nNice(Charlie, True) ::: Charlie is nice.\nRough(Charlie, True) ::: Charlie is rough.\nSmart(Charlie, True) ::: Charlie is smart.\nGreen(Erin, True) ::: Erin is green.\nNice(Erin, True) ::: Erin is nice.\nRough(Erin, True) ::: Erin is rough.\nGreen(Fiona, True) ::: Fiona is green.\nRules:\nNice($x, True) >>> Cold($x, True) ::: Nice, cold people are furry.\nGreen($x, True) && White($x, True) >>> Smart($x, True) ::: If someone is green and white then they are smart.\nNice($x, True) >>> Smart($x, True) ::: If Fiona is nice then Fiona is smart.\nGreen($x, True) >>> White($x, True) ::: All green people are white.\nSmart($x, True) >>> Furry($x, True) ::: If someone is smart then they are furry.\nCold($x, True) >>> Nice($x, True) ::: Cold people are nice.\nFurry($x, True) >>> Cold($x, True) ::: Furry people are cold.\nQuery:\nFurry(Fiona, True) ::: Fiona is furry.\n------\nProblem:\nAnne is furry. Anne is green. Anne is nice. Anne is rough. Anne is smart. Anne is white. Anne is young. Anne is quiet. Anne is red. Anne is cold. Anne is rough. Anne is white. Anne is young. Anne is quiet. Anne is red. Anne is cold. Anne is rough. Anne is white. Anne is young. Anne is quiet. Anne is red. Anne is cold. Anne is rough"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-795_Q6",
    "context": "Dave is not cold. Erin is cold. Erin is furry. Fiona is cold. Fiona is quiet. Harry is smart. Harry is white. Smart, cold things are white. If Dave is green then Dave is not blue. If Erin is green then Erin is smart. If something is white and furry then it is smart. If Fiona is cold and Fiona is quiet then Fiona is smart. If something is furry then it is green. All green, white things are furry. If something is white and quiet then it is furry. Green, quiet things are blue.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Erin is not smart.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nFurry($x, bool) ::: Is x furry?\nGreen($x, bool) ::: Is x green?\nBlue($x, bool) ::: Is x blue?\nSmart($x, bool) ::: Is x smart?\nWhite($x, bool) ::: Is x white?\nQuiet($x, bool) ::: Is x quiet?\nFacts:\nCold(Dave, False) ::: Dave is not cold.\nCold(Erin, True) ::: Erin is cold.\nFurry(Erin, True) ::: Erin is furry.\nCold(Fiona, True) ::: Fiona is cold.\nQuiet(Fiona, True) ::: Fiona is quiet.\nSmart(Harry, True) ::: Harry is smart.\nWhite(Harry, True) ::: Harry is white.\nSmart($x, True) >>> White($x, True) ::: Smart, cold things are white.\nGreen($x, True) >>> Dave($x, False) ::: If Dave is green then Dave is not blue.\nGreen($x, True) >>> Erin($x, True) ::: If Erin is green then Erin is smart.\nFurry($x, True) && White($x, True) >>> Smart($x, True) ::: If something is white and furry then it is smart.\nCold($x, True) && Quiet($x, True) >>> Smart($x, True) ::: If Fiona is cold and Fiona is quiet then Fiona is smart.\nFurry($x, True) >>> Green($x, True) ::: If something is furry then it is green.\nGreen($x, True) && White($x, True) >>> Furry($x, True) ::: All green, white things are furry.\nWhite($x, True) && Quiet($x, True) >>> Furry($x, True) ::: If something is white and quiet then it is furry.\nGreen($x, True) && Quiet($x, True) >>> Blue($x, True) ::: Green, quiet things are blue.\nQuery:\nSmart(Erin, False) ::: Erin is not smart.\n------\nProblem:\nDave is not cold. Erin is cold. Erin is furry. Fiona is cold. Fiona is quiet. Harry is smart. Harry is white. Smart, cold things are white. If Dave is green then Dave is not blue. If Erin is green then Erin is smart"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-1137_Q11",
    "context": "Anne is cold. Anne is not kind. Anne is not nice. Anne is red. Anne is young. Fiona is not cold. Fiona is kind. Fiona is young. Gary is red. Harry is kind. Harry is nice. Harry is red. All big things are nice. If something is cold and not red then it is nice. All cold, big things are not white. All nice things are big. If Gary is red and Gary is young then Gary is big. All kind, white things are not young. All red things are young. Big, white things are young. If something is nice then it is cold.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is not white.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nKind($x, bool) ::: Is x kind?\nNice($x, bool) ::: Is x nice?\nRed($x, bool) ::: Is x red?\nYoung($x, bool) ::: Is x young?\nBig($x, bool) ::: Is x big?\nWhite($x, bool) ::: Is x white?\nFacts:\nCold(Anne, True) ::: Anne is cold.\nNot(Kind(Anne, True)) ::: Anne is not kind.\nNot(Nice(Anne, True)) ::: Anne is not nice.\nRed(Anne, True) ::: Anne is red.\nYoung(Anne, True) ::: Anne is young.\nNot(Cold(Fiona, True)) ::: Fiona is not cold.\nKind(Fiona, True) ::: Fiona is kind.\nYoung(Fiona, True) ::: Fiona is young.\nRed(Gary, True) ::: Gary is red.\nKind(Harry, True) ::: Harry is kind.\nNice(Harry, True) ::: Harry is nice.\nRed(Harry, True) ::: Harry is red.\nBig($x, True) >>> Nice($x, True) ::: All big things are nice.\nCold($x, True) && Not(Red($x, True)) >>> Nice($x, True) ::: If something is cold and not red then it is nice.\nCold($x, True) && Big($x, True) >>> Not(White($x, True)) ::: All cold, big things are not white.\nNice($x, True) >>> Big($x, True) ::: All nice things are big.\nIf(Gary(Red, True) && Gary(Young, True)) >>> Gary(Big, True) ::: If Gary is red and Gary is young then Gary is big.\nKind($x, True) && White($x, True) >>> Not(Young($x, True)) ::: All kind, white things are not young.\nRed($x, True) >>> Young($x, True) ::: All red things are young.\nBig($x, True) && White($x, True) >>> Young($x, True) ::: Big, white things are young.\nNice($x, True) >>> Cold($x, True) ::: If something is nice then it is cold.\nQuery:\nNot(White(Gary, True)) ::: Gary is not white.\n------\nProblem:\nAnne is cold"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-133_Q8",
    "context": "The cow visits the dog. The cow does not visit the rabbit. The dog is not young. The dog sees the squirrel. The dog does not visit the rabbit. The rabbit eats the squirrel. The rabbit sees the dog. The rabbit visits the dog. The squirrel eats the cow. The squirrel is not nice. If something eats the rabbit and it is round then it visits the rabbit. If something eats the dog then the dog visits the cow. If something sees the rabbit then it sees the cow. If something sees the rabbit then it sees the cow. If something visits the squirrel and it sees the cow then the squirrel is nice. If something visits the dog then it visits the cow. If something eats the rabbit then it is blue. If something visits the cow then it eats the dog. If something visits the dog and the dog visits the cow then it sees the rabbit.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The dog does not visit the cow.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nVisit($x, $y, bool) ::: Does x visit y?\nSee($x, $y, bool) ::: Does x see y?\nEat($x, $y, bool) ::: Does x eat y?\nYoung($x, bool) ::: Is x young?\nRound($x, bool) ::: Is x round?\nNice($x, bool) ::: Is x nice?\nBlue($x, bool) ::: Is x blue?\nFacts:\nVisit(Cow, Dog, True) ::: The cow visits the dog.\nVisit(Cow, Rabbit, False) ::: The cow does not visit the rabbit.\nYoung(Dog, False) ::: The dog is not young.\nSee(Dog, Squirrel, True) ::: The dog sees the squirrel.\nVisit(Dog, Rabbit, False) ::: The dog does not visit the rabbit.\nEat(Rabbit, Squirrel, True) ::: The rabbit eats the squirrel.\nSee(Rabbit, Dog, True) ::: The rabbit sees the dog.\nVisit(Rabbit, Dog, True) ::: The rabbit visits the dog.\nEat(Squirrel, Cow, True) ::: The squirrel eats the cow.\nNice(Squirrel, False) ::: The squirrel is not nice.\nRules:\nIf something eats the rabbit and it is round then it visits the rabbit. ::: If something eats the rabbit and it is round then it visits the rabbit.\nIf something eats the dog then the dog visits the cow. ::: If something eats the dog then the dog visits the cow.\nIf something sees the rabbit then it sees the cow. ::: If something sees the rabbit then it sees the cow.\nIf something sees the rabbit then it sees the cow. ::: If something sees the rabbit then it sees the cow.\nIf something visits the squirrel and it sees the cow then the squirrel is nice. ::: If something visits the squirrel and it sees the cow then the squirrel is nice.\nIf something visits the dog then it visits the cow. ::: If something visits the dog then it visits the cow.\nIf something eats the rabbit then it is blue. ::: If something eats the rabbit then it is blue.\nIf something visits the cow then it eats the dog. ::: If something visits the cow then it eats the dog.\nIf something visits the dog and the dog visits the cow then it"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-1003_Q14",
    "context": "The cat is red. The cat visits the dog. The dog is cold. The dog visits the mouse. The mouse visits the tiger. The tiger is cold. The tiger sees the cat. If someone visits the dog and the dog sees the tiger then the dog visits the mouse. If someone is round then they eat the dog. If someone sees the tiger and the tiger sees the cat then the cat is young. If the cat is young and the cat sees the tiger then the cat eats the tiger. If someone visits the dog and the dog sees the cat then they are red. Young people are cold. If someone is rough then they eat the tiger. If someone is cold then they see the tiger.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The dog is red.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nVisits($x, $y, bool) ::: Does x visit y?\nSees($x, $y, bool) ::: Does x see y?\nEats($x, $y, bool) ::: Does x eat y?\nIs($x, $y, bool) ::: Is x y?\nYoung($x, bool) ::: Is x young?\nCold($x, bool) ::: Is x cold?\nRound($x, bool) ::: Is x round?\nRough($x, bool) ::: Is x rough?\nFacts:\nVisits(Cat, Dog, True) ::: The cat visits the dog.\nIs(Cat, Red, True) ::: The cat is red.\nVisits(Dog, Mouse, True) ::: The dog visits the mouse.\nIs(Dog, Cold, True) ::: The dog is cold.\nVisits(Mouse, Tiger, True) ::: The mouse visits the tiger.\nIs(Tiger, Cold, True) ::: The tiger is cold.\nSees(Tiger, Cat, True) ::: The tiger sees the cat.\nRules:\nVisits(Dog, Mouse, True) && Sees(Tiger, Cat, True) >>> Dog(Tiger, True) ::: If someone visits the dog and the dog sees the tiger then the dog visits the mouse.\nIs(x, Round, True) >>> Eats(x, Dog, True) ::: If someone is round then they eat the dog.\nSees(Tiger, Cat, True) && Sees(Cat, Tiger, True) >>> Young(Cat, True) ::: If the cat is young and the cat sees the tiger then the cat eats the tiger.\nVisits(Dog, Mouse, True) && Sees(Tiger, Cat, True) >>> Dog(Mouse, True) ::: If someone visits the dog and the dog sees the tiger then they are red.\nYoung($x, True) >>> Cold($x, True) ::: Young people are cold.\nSees(Tiger, Cat, True) && Sees(Cat, Tiger, True) >>> Rough(Tiger, True) ::: If someone is rough then they eat the tiger.\nSees(Tiger, Cat, True) && Sees(Cat, Tiger, True) >>> Cold($x, True) ::: If someone is cold then they see the tiger.\nQuery:\nCold(Dog, True) ::: The dog is cold.\n------\nProblem:\nThe cat is red. The cat visits the dog"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-1042_Q3",
    "context": "The cat is blue. The cat is red. The cat visits the cow. The cow is blue. The cow needs the cat. The cow needs the mouse. The cow visits the mouse. The mouse is red. The mouse needs the cow. The tiger is blue. The tiger visits the cat. If something visits the tiger and the tiger is green then it is green. If something likes the cat and the cat visits the cow then the cow is red. If something is rough and it likes the mouse then the mouse visits the cow. If the cat visits the tiger and the tiger likes the cat then the cat visits the cow. If something needs the tiger then it likes the cat. If something visits the cow and the cow likes the mouse then the cow likes the tiger. If something is red then it needs the tiger. If something likes the cow then it is blue.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The mouse needs the tiger.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue($x, bool) ::: Is x blue?\nRed($x, bool) ::: Is x red?\nVisits($x, $y, bool) ::: Does x visit y?\nNeeds($x, $y, bool) ::: Does x need y?\nLikes($x, $y, bool) ::: Does x like y?\nRough($x, bool) ::: Is x rough?\nFacts:\nBlue(Cat, True) ::: The cat is blue.\nRed(Cat, True) ::: The cat is red.\nVisits(Cat, Cow, True) ::: The cat visits the cow.\nBlue(Cow, True) ::: The cow is blue.\nNeeds(Cow, Cat, True) ::: The cow needs the cat.\nNeeds(Cow, Mouse, True) ::: The cow needs the mouse.\nVisits(Cow, Mouse, True) ::: The cow visits the mouse.\nRed(Mouse, True) ::: The mouse is red.\nNeeds(Mouse, Cow, True) ::: The mouse needs the cow.\nBlue(Tiger, True) ::: The tiger is blue.\nVisits(Tiger, Cat, True) ::: The tiger visits the cat.\nRules:\nVisits($x, $y, True) && $x is green >>> $x is green ::: If something visits the tiger and the tiger is green then it is green.\nVisits($x, $y, True) && $x likes $y && $y visits $z >>> $z is red ::: If something visits the cow and the cow likes the mouse then the cow likes the tiger.\nVisits($x, $y, True) && $x likes $y && $y visits $z >>> $x likes $z ::: If something visits the cow and the cow likes the mouse then the cow likes the tiger.\nVisits($x, $y, True) && $x likes $y && $y visits $z >>> $x likes $z ::: If something visits the cow and the cow likes the mouse then the cow likes the tiger.\nVisits($x, $y, True) && $x likes $y && $y visits $z >>> $x likes $z ::: If something visits the cow and the cow likes the mouse then the cow likes the tiger.\nVisits($x, $y, True) && $x likes $y && $y visits $z >>> $x likes $z ::: If something visits the cow and the cow likes the mouse then the cow likes the tiger.\nVisits($x, $y, True"
    ]
  }
]