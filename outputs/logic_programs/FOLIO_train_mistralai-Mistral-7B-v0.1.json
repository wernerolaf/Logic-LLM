[
  {
    "id": "FOLIO_train_0",
    "context": "All people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDependent(x) ::: x is a person dependent on caffeine.\nDrinks(x) ::: x regularly drinks coffee.\nJokes(x) ::: x jokes about being addicted to caffeine.\nUnaware(x) ::: x is unaware that caffeine is a drug.\nStudent(x) ::: x is a student.\nPremises:\n∀x (Drinks(x) → Dependent(x)) ::: All people who regularly drink coffee are dependent on caffeine.\n∀x (Drinks(x) ⊕ Jokes(x)) ::: People either regularly drink coffee or joke about being addicted to caffeine.\n∀x (Jokes(x) → ¬Unaware(x)) ::: No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. \n(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina)) ::: Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. \n¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina)) ::: If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nConclusion:\nJokes(rina) ⊕ Unaware(rina) ::: Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.\n------"
    ]
  },
  {
    "id": "FOLIO_train_1",
    "context": "All people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDependent(x) ::: x is a person dependent on caffeine.\nDrinks(x) ::: x regularly drinks coffee.\nJokes(x) ::: x jokes about being addicted to caffeine.\nUnaware(x) ::: x is unaware that caffeine is a drug.\nStudent(x) ::: x is a student.\nPremises:\n∀x (Drinks(x) → Dependent(x)) ::: All people who regularly drink coffee are dependent on caffeine.\n∀x (Drinks(x) ⊕ Jokes(x)) ::: People either regularly drink coffee or joke about being addicted to caffeine.\n∀x (Jokes(x) → ¬Unaware(x)) ::: No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. \n(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina)) ::: Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. \n¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina)) ::: If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nConclusion:\nJokes(rina) ⊕ Unaware(rina) ::: Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug."
    ]
  },
  {
    "id": "FOLIO_train_2",
    "context": "All people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDependent(x) ::: x is a person dependent on caffeine.\nDrinks(x) ::: x regularly drinks coffee.\nJokes(x) ::: x jokes about being addicted to caffeine.\nUnaware(x) ::: x is unaware that caffeine is a drug.\nStudent(x) ::: x is a student.\nPremises:\n∀x (Drinks(x) → Dependent(x)) ::: All people who regularly drink coffee are dependent on caffeine.\n∀x (Drinks(x) ⊕ Jokes(x)) ::: People either regularly drink coffee or joke about being addicted to caffeine.\n∀x (Jokes(x) → ¬Unaware(x)) ::: No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. \n(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina)) ::: Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. \n¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina)) ::: If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nConclusion:\nDrinks(rina) ⊕ Unaware(rina) ::: Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.\n------"
    ]
  },
  {
    "id": "FOLIO_train_3",
    "context": "All people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDependent(x) ::: x is a person dependent on caffeine.\nDrinks(x) ::: x regularly drinks coffee.\nJokes(x) ::: x jokes about being addicted to caffeine.\nUnaware(x) ::: x is unaware that caffeine is a drug.\nStudent(x) ::: x is a student.\nPremises:\n∀x (Drinks(x) → Dependent(x)) ::: All people who regularly drink coffee are dependent on caffeine.\n∀x (Drinks(x) ⊕ Jokes(x)) ::: People either regularly drink coffee or joke about being addicted to caffeine.\n∀x (Jokes(x) → ¬Unaware(x)) ::: No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. \n(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina)) ::: Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. \n¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina)) ::: If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nConclusion:\n((Jokes(rina) ∧ Unaware(rina)) ⊕ ¬(Jokes(rina) ∨ Unaware(rina))) → (Jokes(r"
    ]
  },
  {
    "id": "FOLIO_train_4",
    "context": "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music. Any choral conductor is a musician. Some musicians love music. Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Miroslav Venhoda loved music.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCzech(x) ::: x is a Czech person.\nChoralConductor(x) ::: x is a choral conductor.\nMusician(x) ::: x is a musician.\nLove(x, y) ::: x loves y.\nAuthor(x, y) ::: x is the author of y.\nBook(x) ::: x is a book.\nPublish(x, y) ::: x is published in year y.\nSpecialize(x, y) ::: x specializes in y.\nPremises:\nCzech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque) ::: Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.\n∀x (ChoralConductor(x) → Musician(x)) ::: Any choral conductor is a musician.\n∃x (Musician(x) ∧ Love(x, music)) ::: Some musicians love music.\nBook(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946) ::: Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant.\nConclusion:\nLove(miroslav, music) ::: Miroslav Venhoda loved music.\n------\nProblem:\nMiroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music. Any choral conductor is a musician. Some musicians love music"
    ]
  },
  {
    "id": "FOLIO_train_5",
    "context": "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music. Any choral conductor is a musician. Some musicians love music. Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A Czech person wrote a book in 1946.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCzech(x) ::: x is a Czech person.\nChoralConductor(x) ::: x is a choral conductor.\nMusician(x) ::: x is a musician.\nLove(x, y) ::: x loves y.\nAuthor(x, y) ::: x is the author of y.\nBook(x) ::: x is a book.\nPublish(x, y) ::: x is published in year y.\nSpecialize(x, y) ::: x specializes in y.\nPremises:\nCzech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque) ::: Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.\n∀x (ChoralConductor(x) → Musician(x)) ::: Any choral conductor is a musician.\n∃x (Musician(x) ∧ Love(x, music)) ::: Some musicians love music.\nBook(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946) ::: Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant.\nConclusion:\n∃y ∃x (Czech(x) ∧ Author(x, y) ∧ Book(y) ∧ Publish(y, year1946)) ::: A Czech person wrote a book in 1946.\n------\nProblem:"
    ]
  },
  {
    "id": "FOLIO_train_6",
    "context": "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music. Any choral conductor is a musician. Some musicians love music. Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? No choral conductor specialized in the performance of Renaissance.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCzech(x) ::: x is a Czech person.\nChoralConductor(x) ::: x is a choral conductor.\nMusician(x) ::: x is a musician.\nLove(x, y) ::: x loves y.\nAuthor(x, y) ::: x is the author of y.\nBook(x) ::: x is a book.\nPublish(x, y) ::: x is published in year y.\nSpecialize(x, y) ::: x specializes in y.\nPremises:\nCzech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque) ::: Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.\n∀x (ChoralConductor(x) → Musician(x)) ::: Any choral conductor is a musician.\n∃x (Musician(x) ∧ Love(x, music)) ::: Some musicians love music.\nBook(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946) ::: Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant.\nConclusion:\n¬∃x (ChoralConductor(x) ∧ Specialize(x, renaissance)) ::: No choral conductor specialized in the performance of Renaissance.\n------\nProblem:\nMiroslav Venhoda was a Czech choral conductor who specialized in the performance of Rena"
    ]
  },
  {
    "id": "FOLIO_train_7",
    "context": "All eels are fish. No fish are plants. A thing is either a plant or animal. Nothing that breathes is paper. All animals breathe. If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Sea eel is an eel.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEel(x) ::: x is an eel.\nSeaEel(x) ::: x is a sea eel.\nFish(x) ::: x is a fish.\nPlant(x) ::: x is a plant.\nAnimal(x) ::: x is an animal.\nBreathe(x) ::: x breathes.\nPaper(x) ::: x is paper.\nPremises:\n∀x (Eel(x) → Fish(x)) ::: All eels are fish.\n∀x (Fish(x) → ¬Plant(x)) ::: No fish are plants.\n∀x (Plant(x) ∨ Animal(x)) ::: A thing is either a plant or animal.\n∀x (Breathe(x) → ¬Paper(x)) ::: Nothing that breathes is paper.\n∀x (Animal(x) → Breathe(x)) ::: All animals breathe.\n∀x (SeaEel(x) → (Eel(x) ∨ Plant(x))) ::: If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal.\nConclusion:\nEel(seaEel) ::: Sea eel is an eel.\n------\nProblem:\nAll people who are not students are either teachers or professors. All teachers are either professors or students. All professors are either teachers or students. All students are either professors or teachers.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? All people are either professors or teachers.\n###\nPredicates:\nStudent(x) ::: x is a student.\nTeacher(x) ::: x is a teacher.\nProfessor(x) :::"
    ]
  },
  {
    "id": "FOLIO_train_8",
    "context": "All eels are fish. No fish are plants. A thing is either a plant or animal. Nothing that breathes is paper. All animals breathe. If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Sea eel is a paper.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEel(x) ::: x is an eel.\nSeaEel(x) ::: x is a sea eel.\nFish(x) ::: x is a fish.\nPlant(x) ::: x is a plant.\nAnimal(x) ::: x is an animal.\nBreathe(x) ::: x breathes.\nPaper(x) ::: x is paper.\nPremises:\n∀x (Eel(x) → Fish(x)) ::: All eels are fish.\n∀x (Fish(x) → ¬Plant(x)) ::: No fish are plants.\n∀x (Plant(x) ∨ Animal(x)) ::: A thing is either a plant or animal.\n∀x (Breathe(x) → ¬Paper(x)) ::: Nothing that breathes is paper.\n∀x (Animal(x) → Breathe(x)) ::: All animals breathe.\n(SeaEel(seaEel) ∧ (Eel(seaEel) ∨ Plant(seaEel))) → (Eel(seaEel) ∨ Animal(seaEel)) ::: If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal.\nConclusion:\nPaper(seaEel) ::: Sea eel is a paper.\n------\nProblem:\nAll people who are not students are either teachers or professors. All teachers are either professors or students. All professors are either teachers or students. All students are either professors or teachers.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? All people are either professors or teachers.\n###\nPredicates:\nStudent(x) ::: x is a student."
    ]
  },
  {
    "id": "FOLIO_train_9",
    "context": "All eels are fish. No fish are plants. A thing is either a plant or animal. Nothing that breathes is paper. All animals breathe. If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Sea eel breathes or is a paper.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEel(x) ::: x is an eel.\nSeaEel(x) ::: x is a sea eel.\nFish(x) ::: x is a fish.\nPlant(x) ::: x is a plant.\nAnimal(x) ::: x is an animal.\nBreathe(x) ::: x breathes.\nPaper(x) ::: x is paper.\nPremises:\n∀x (Eel(x) → Fish(x)) ::: All eels are fish.\n∀x (Fish(x) → ¬Plant(x)) ::: No fish are plants.\n∀x (Plant(x) ∨ Animal(x)) ::: A thing is either a plant or animal.\n∀x (Breathe(x) → ¬Paper(x)) ::: Nothing that breathes is paper.\n∀x (Animal(x) → Breathe(x)) ::: All animals breathe.\n∀x (SeaEel(x) → (Eel(x) ∨ Plant(x))) ::: If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal.\nConclusion:\nBreathe(seaEel) ∨ Paper(seaEel) ::: Sea eel breathes or is a paper.\n------\nProblem:\nAll people who are not students are either teachers or professors. All teachers are either professors or students. All professors are either teachers or students. All students are either professors or teachers.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? All people are either professors or teachers.\n###\nPredicates:\nStudent(x) ::: x is a student.\nTeacher(x) ::: x is"
    ]
  },
  {
    "id": "FOLIO_train_10",
    "context": "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places. The Blake McFall Company Building was added to the National Register of Historic Places in 1990. The Emmet Building is a five-story building in Portland, Oregon. The Emmet Building was built in 1915. The Emmet Building is another name for the Blake McFall Company Building. John works at the Emmet Building.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A five-story building is built in 1915.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nNationalRegister(x) ::: x is listed on the National Register of Historic Places.\nAdded(x, y) ::: x is added to the National Register of Historic Places in year y.\nBuild(x, y) ::: x is built in year y.\nAnotherName(x, y) ::: x is another name for y.\nWork(x, y) ::: x works at y.\nPremises:\nNationalRegister(blakeMcFallCompanyBuilding) ∧ Added(blakeMcFallCompanyBuilding, year1990) ::: The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places.\nNationalRegister(blakeMcFallCompanyBuilding) ∧ Added(blakeMcFallCompanyBuilding, year1990) ::: The Blake McFall Company Building was added to the National Register of Historic Places in 1990.\nBuild(emmetBuilding, year1915) ::: The Emmet Building is a five-story building in Portland, Oregon.\nAnotherName(emmetBuilding, blakeMcFallCompanyBuilding) ::: The Emmet Building is another name for the Blake McFall Company Building.\nWork(john, emmetBuilding) ::: John works at the Emmet Building.\nConclusion:\nBuild(emmetBuilding, year1915) ::: A five-story building is built in 1915.\n------"
    ]
  },
  {
    "id": "FOLIO_train_11",
    "context": "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places. The Blake McFall Company Building was added to the National Register of Historic Places in 1990. The Emmet Building is a five-story building in Portland, Oregon. The Emmet Building was built in 1915. The Emmet Building is another name for the Blake McFall Company Building. John works at the Emmet Building.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Blake McFall Company Building is located in Portland, Oregon.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nNationalRegister(x) ::: x is listed on the National Register of Historic Places.\nAdded(x, y) ::: x was added to the National Register of Historic Places in year y.\nBuilding(x) ::: x is a building.\nPortland(x) ::: x is located in Portland, Oregon.\nEmmet(x) ::: x is the Emmet Building.\nBuilt(x, y) ::: x was built in year y.\nAnother(x, y) ::: x is another name for y.\nWork(x, y) ::: x works at y.\nPremises:\nBuilding(blakeMcFallCompanyBuilding) ∧ NationalRegister(blakeMcFallCompanyBuilding) ∧ Added(blakeMcFallCompanyBuilding, year1990) ::: The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places.\nBuilding(emmetBuilding) ∧ Emmet(emmetBuilding) ∧ Built(emmetBuilding, year1915) ::: The Emmet Building is a five-story building in Portland, Oregon.\nEmmet(blakeMcFallCompanyBuilding) ::: The Emmet Building is another name for the Blake McFall Company Building.\nWork(john, emmetBuilding) ::: John works at the Emmet Building.\nConclusion:\nPortland(blakeMcFallCompanyBuilding) :::"
    ]
  },
  {
    "id": "FOLIO_train_12",
    "context": "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places. The Blake McFall Company Building was added to the National Register of Historic Places in 1990. The Emmet Building is a five-story building in Portland, Oregon. The Emmet Building was built in 1915. The Emmet Building is another name for the Blake McFall Company Building. John works at the Emmet Building.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? John started his current job in 1990.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nWork(x, y) ::: x works at y.\nStart(x, y) ::: x started his current job in year y.\nBuild(x, y) ::: x was built in year y.\nAnotherName(x, y) ::: x is another name for y.\nListed(x, y) ::: x is listed on y.\nPremises:\nAnotherName(emmetBuilding, blakeMcFallCompanyBuilding) ::: The Emmet Building is another name for the Blake McFall Company Building.\nListed(blakeMcFallCompanyBuilding, nationalRegisterOfHistoricPlaces) ∧ Build(blakeMcFallCompanyBuilding, year1990) ::: The Blake McFall Company Building was added to the National Register of Historic Places in 1990.\nListed(emmetBuilding, nationalRegisterOfHistoricPlaces) ∧ Build(emmetBuilding, year1915) ::: The Emmet Building was built in 1915.\nWork(john, emmetBuilding) ::: John works at the Emmet Building.\nConclusion:\nStart(john, year1990) ::: John started his current job in 1990.\n------\nProblem:\nThe 1990s was a decade of the Gregorian calendar that began on January 1, 1990, and ended on December 31, 1"
    ]
  },
  {
    "id": "FOLIO_train_13",
    "context": "William Dickinson was a British politician who sat in the House of Commons William Dickinson attended Westminster school for high school and then the University of Edinburgh. The University of Edinburgh is a university located in the United Kingdom. William Dickinson supported the Portland Whigs. People who supported the Portland Whigs did not get a seat in the Parliament.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? William Dickinson did not get a seat in the Parliament.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBritish(x) ::: x is a British person.\nPolitician(x) ::: x is a politician.\nSit(x, y) ::: x sat in the y.\nHighSchool(x) ::: x attended high school.\nUniversity(x) ::: x is a university.\nLocated(x, y) ::: x is located in y.\nSupport(x, y) ::: x supported y.\nGet(x, y) ::: x got y.\nSeat(x) ::: x is a seat.\nPremises:\nBritish(william) ∧ Politician(william) ∧ Sit(william, parliament) ∧ HighSchool(westminsterSchool) ∧ University(universityOfEdinburgh) ∧ Located(universityOfEdinburgh, unitedKingdom) ∧ Support(william, portlandWhigs) ∧ ¬Get(william, seat) ::: William Dickinson was a British politician who sat in the House of Commons William Dickinson attended Westminster school for high school and then the University of Edinburgh. The University of Edinburgh is a university located in the United Kingdom. William Dickinson supported the Portland Whigs.\nConclusion:\n¬Get(william, seat) ::: William Dickinson did not get a seat in the Parliament.\n------\nProblem:\nThe first person to win the Nobel Prize in Phys"
    ]
  },
  {
    "id": "FOLIO_train_14",
    "context": "William Dickinson was a British politician who sat in the House of Commons William Dickinson attended Westminster school for high school and then the University of Edinburgh. The University of Edinburgh is a university located in the United Kingdom. William Dickinson supported the Portland Whigs. People who supported the Portland Whigs did not get a seat in the Parliament.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? William Dickinson went to schools located in the United Kingdom for both high school and university.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBritish(x) ::: x is a British person.\nPolitician(x) ::: x is a politician.\nSit(x, y) ::: x sat in y.\nHighSchool(x) ::: x is a high school.\nUniversity(x) ::: x is a university.\nAttend(x, y) ::: x attended y.\nLocated(x, y) ::: x is located in y.\nSupport(x, y) ::: x supported y.\nGet(x, y) ::: x got y.\nSeat(x) ::: x is a seat.\nParliament(x) ::: x is a parliament.\nPremises:\nBritish(william) ∧ Politician(william) ∧ Sit(william, parliament) ::: William Dickinson was a British politician who sat in the House of Commons\nHighSchool(westminsterSchool) ∧ Attend(william, westminsterSchool) ::: William Dickinson attended Westminster school for high school\nUniversity(universityOfEdinburgh) ∧ Attend(william, universityOfEdinburgh) ::: William Dickinson attended the University of Edinburgh.\nUniversity(universityOfEdinburgh) ∧ Located(unitedKingdom, universityOfEdinburgh) ::: The University of Edinburgh is a university located in the United Kingdom.\nSupport(william, portlandWhigs"
    ]
  },
  {
    "id": "FOLIO_train_15",
    "context": "William Dickinson was a British politician who sat in the House of Commons William Dickinson attended Westminster school for high school and then the University of Edinburgh. The University of Edinburgh is a university located in the United Kingdom. William Dickinson supported the Portland Whigs. People who supported the Portland Whigs did not get a seat in the Parliament.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? William Dickinson attended university in the United Kingdom.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBritish(x) ::: x is a British person.\nPolitician(x) ::: x is a politician.\nSit(x, y) ::: x sat in the y.\nHighSchool(x) ::: x is a high school.\nUniversity(x) ::: x is a university.\nLocated(x, y) ::: x is located in y.\nSupport(x, y) ::: x supported y.\nGet(x, y) ::: x got y.\nSeat(x) ::: x is a seat.\nParliament(x) ::: x is a parliament.\nPremises:\nBritish(william) ∧ Politician(william) ∧ Sit(william, parliament) ::: William Dickinson was a British politician who sat in the House of Commons\nHighSchool(westminsterSchool) ∧ University(universityOfEdinburgh) ::: Westminster school is a high school and the University of Edinburgh is a university.\nUniversity(universityOfEdinburgh) ∧ Located(universityOfEdinburgh, unitedKingdom) ::: The University of Edinburgh is a university located in the United Kingdom.\nSupport(william, portlandWhigs) ∧ ¬Get(william, seat) ::: William Dickinson supported the Portland Whigs and did not get a seat in the Parliament.\nConclusion:\nLocated(universityOfEdinburgh"
    ]
  },
  {
    "id": "FOLIO_train_16",
    "context": "William Dickinson was a British politician who sat in the House of Commons William Dickinson attended Westminster school for high school and then the University of Edinburgh. The University of Edinburgh is a university located in the United Kingdom. William Dickinson supported the Portland Whigs. People who supported the Portland Whigs did not get a seat in the Parliament.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? William Dickinson sat in the House of Commons.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBritish(x) ::: x is a British person.\nPolitician(x) ::: x is a politician.\nSit(x, y) ::: x sat in y.\nHighSchool(x) ::: x is a high school.\nUniversity(x) ::: x is a university.\nLocated(x, y) ::: x is located in y.\nSupport(x, y) ::: x supported y.\nGet(x, y) ::: x got y.\nSeat(x) ::: x is a seat.\nParliament(x) ::: x is a parliament.\nWhig(x) ::: x is a Whig.\nPremises:\nBritish(william) ∧ Politician(william) ∧ Sit(william, houseOfCommons) ::: William Dickinson was a British politician who sat in the House of Commons.\nHighSchool(westminsterSchool) ∧ University(universityOfEdinburgh) ∧ Located(universityOfEdinburgh, unitedKingdom) ::: The University of Edinburgh is a university located in the United Kingdom.\nSupport(william, portlandWhigs) ∧ ¬Get(portlandWhigs, seat) ::: People who supported the Portland Whigs did not get a seat in the Parliament.\nConclusion:\nSit(william, houseOfCommons) ::: William Dickinson sat in the House"
    ]
  },
  {
    "id": "FOLIO_train_17",
    "context": "LanguageA is a universal language If a universal language exists, then for every two people if they both know the same universal language they can communicate. Katya cannot communicate with Danil. Katya knows LanguageA.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Danil knows LanguageA.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nKnow(x, y) ::: x knows y.\nCommunicate(x, y) ::: x can communicate with y.\nLanguage(x) ::: x is a language.\nUniversal(x) ::: x is a universal language.\nPremises:\n∃x (Language(x) ∧ Universal(x)) ::: LanguageA is a universal language.\n∀x ∀y (Know(x, y) ∧ Know(y, x) → Communicate(x, y)) ::: If a universal language exists, then for every two people if they both know the same universal language they can communicate.\nKnow(katya, danil) ∧ ¬Communicate(katya, danil) ::: Katya cannot communicate with Danil.\nKnow(katya, languageA) ::: Katya knows LanguageA.\nConclusion:\nKnow(danil, languageA) ::: Danil knows LanguageA.\n------\nProblem:\nA person is a student if and only if the person is a student. A person is a student if and only if the person is a student. A person is a student if and only if the person is a student. A person is a student if and only if the person is a student. A person is a student if and only if the person is a student. A person is a student if and only if the person is a student. A person is a student if and only if the"
    ]
  },
  {
    "id": "FOLIO_train_18",
    "context": "All customers who are subscribed to AMC List are available to watch 3 movies every week without any additional fees. Some customers go to cinemas every week Customers either subscribe to AMC service or HBO service. Customers who prefer TV series more and will not watch TV series in cinemas. All customers who subscribe to HBO services prefer TV series to movies. James watches TV series in cinemas.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James goes to cinemas every week.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCustomer(x) ::: x is a customer.\nSubscribe(x, y) ::: x subscribes to y.\nWatch(x, y) ::: x watches y.\nPrefer(x, y) ::: x prefers y to z.\nCinema(x) ::: x is a cinema.\nAMC(x) ::: x is AMC service.\nHBO(x) ::: x is HBO service.\nPremises:\n∀x (Subscribe(x, AMC) → Watch(x, 3)) ::: All customers who are subscribed to AMC List are available to watch 3 movies every week without any additional fees.\n∃x (Customer(x) ∧ Watch(x, cinema)) ::: Some customers go to cinemas every week.\n∀x (Subscribe(x, AMC) ∨ Subscribe(x, HBO)) ::: Customers either subscribe to AMC service or HBO service.\n∀x (Subscribe(x, HBO) → Prefer(x, TVseries)) ::: Customers who subscribe to HBO services prefer TV series to movies.\nWatch(james, cinema) ::: James watches TV series in cinemas.\nConclusion:\nWatch(james, cinema) ::: James goes to cinemas every week.\n------\nProblem:\nAll people who are not students are either working or retired. All people who are"
    ]
  },
  {
    "id": "FOLIO_train_19",
    "context": "All customers who are subscribed to AMC List are available to watch 3 movies every week without any additional fees. Some customers go to cinemas every week Customers either subscribe to AMC service or HBO service. Customers who prefer TV series more and will not watch TV series in cinemas. All customers who subscribe to HBO services prefer TV series to movies. James watches TV series in cinemas.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James does not go to cinemas every week.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCustomer(x) ::: x is a customer.\nSubscribe(x, y) ::: x subscribes to y.\nWatch(x, y) ::: x watches y.\nPrefer(x, y) ::: x prefers y to z.\nCinema(x) ::: x is a cinema.\nAMC(x) ::: x is AMC.\nHBO(x) ::: x is HBO.\nPremises:\n∀x (Subscribe(x, AMC) → Watch(x, 3)) ::: All customers who are subscribed to AMC List are available to watch 3 movies every week without any additional fees.\n∃x (Customer(x) ∧ Watch(x, cinema)) ::: Some customers go to cinemas every week.\n∀x (Subscribe(x, AMC) ∨ Subscribe(x, HBO)) ::: Customers either subscribe to AMC service or HBO service.\n∀x (Subscribe(x, HBO) → Prefer(x, TVseries)) ::: Customers who subscribe to HBO services prefer TV series to movies.\nWatch(james, cinema) ::: James watches TV series in cinemas.\nConclusion:\n¬Watch(james, cinema) ::: James does not go to cinemas every week.\n------\nProblem:\nAll people who are not students are either working or retired. All people who"
    ]
  },
  {
    "id": "FOLIO_train_20",
    "context": "All customers who are subscribed to AMC List are available to watch 3 movies every week without any additional fees. Some customers go to cinemas every week Customers either subscribe to AMC service or HBO service. Customers who prefer TV series more and will not watch TV series in cinemas. All customers who subscribe to HBO services prefer TV series to movies. James watches TV series in cinemas.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James goes to cinemas every week or watches 3 movies every week without any additional fees.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCustomer(x) ::: x is a customer.\nSubscribe(x, y) ::: x subscribes to y.\nWatch(x, y) ::: x watches y.\nPrefer(x, y) ::: x prefers y to z.\nCinema(x) ::: x is a cinema.\nAMC(x) ::: x is AMC service.\nHBO(x) ::: x is HBO service.\nPremises:\n∀x (Subscribe(x, amc) → Watch(x, 3)) ::: All customers who are subscribed to AMC List are available to watch 3 movies every week without any additional fees.\n∃x (Customer(x) ∧ Watch(x, cinema)) ::: Some customers go to cinemas every week.\n∀x (Subscribe(x, amc) ∨ Subscribe(x, hbo)) ::: Customers either subscribe to AMC service or HBO service.\n∀x (Subscribe(x, hbo) → Prefer(x, series)) ::: Customers who subscribe to HBO services prefer TV series to movies.\nWatch(james, series) ::: James watches TV series in cinemas.\nConclusion:\nWatch(james, cinema) ∨ Watch(james, 3) ::: James goes to cinemas every week or watches 3 movies every week without any additional fees.\n------"
    ]
  },
  {
    "id": "FOLIO_train_21",
    "context": "All customers who are subscribed to AMC List are available to watch 3 movies every week without any additional fees. Some customers go to cinemas every week Customers either subscribe to AMC service or HBO service. Customers who prefer TV series more and will not watch TV series in cinemas. All customers who subscribe to HBO services prefer TV series to movies. James watches TV series in cinemas.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If James does not both go to cinemas every week and subscribe to HBO service, then James is either available to watch 3 movies every week without any additional fees or he prefers TV more.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCustomer(x) ::: x is a customer.\nSubscribe(x, y) ::: x subscribes to y.\nAMC(x) ::: x is AMC service.\nHBO(x) ::: x is HBO service.\nGo(x, y) ::: x goes to y.\nCinema(x) ::: x is a cinema.\nWatch(x, y) ::: x watches y.\nMovie(x) ::: x is a movie.\nTVSeries(x) ::: x is a TV series.\nPrefer(x, y) ::: x prefers y.\nPremises:\n∀x (Subscribe(x, AMC) → Go(x, cinema)) ::: All customers who are subscribed to AMC List are available to watch 3 movies every week without any additional fees.\n∃x (Go(x, cinema) ∧ ∀y (Watch(x, y) → Movie(y))) ::: Some customers go to cinemas every week.\n∀x (Subscribe(x, AMC) ∨ Subscribe(x, HBO)) ::: Customers either subscribe to AMC service or HBO service.\n∀x (Subscribe(x, HBO) → Prefer(x, TVSeries)) ::: Customers who prefer TV series more and will not watch TV series in cinemas.\nWatch(james, TVSeries) ::: James"
    ]
  },
  {
    "id": "FOLIO_train_22",
    "context": "All customers who are subscribed to AMC List are available to watch 3 movies every week without any additional fees. Some customers go to cinemas every week Customers either subscribe to AMC service or HBO service. Customers who prefer TV series more and will not watch TV series in cinemas. All customers who subscribe to HBO services prefer TV series to movies. James watches TV series in cinemas.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If James is available to watch 3 movies every week without any additional fees and he watches TV series in cinemas, then he goes to cinemas every week and prefers TV series more.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCustomer(x) ::: x is a customer.\nSubscribe(x, y) ::: x subscribes to y.\nAMC(x) ::: x is AMC service.\nHBO(x) ::: x is HBO service.\nWatch(x, y) ::: x watches y.\nCinema(x) ::: x is a cinema.\nPrefer(x, y) ::: x prefers y.\nPremises:\n∀x (Subscribe(x, AMC) → Available(x, 3)) ::: All customers who are subscribed to AMC List are available to watch 3 movies every week without any additional fees.\n∃x (Customer(x) ∧ GoToCinema(x)) ::: Some customers go to cinemas every week.\n∀x (Subscribe(x, AMC) ∨ Subscribe(x, HBO)) ::: Customers either subscribe to AMC service or HBO service.\n∀x (Subscribe(x, HBO) → Prefer(x, TVSeries)) ::: Customers who subscribe to HBO services prefer TV series to movies.\nWatch(james, TVSeries) ∧ Cinema(cinema) ::: James watches TV series in cinemas.\nConclusion:\n(Available(james, 3) ∧ GoToCinema(james)) → (Prefer(james, TV"
    ]
  },
  {
    "id": "FOLIO_train_23",
    "context": "A La Liga soccer team ranks higher than another if it receives more points. If two La Liga soccer teams recieve the same points, the team which recieves more points from the games between the two teams ranks higher. Real Madrid and Barcelona are both La Liga soccer teams. In La Liga 2021-2022, Real Madrid recieves 86 points and Barcelon recieves 73 points. In La Liga 2021-2022, Real Madrid and Barcelona both recieve 3 points from the games between them.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? In La Liga 2021-2022, Real Madrid ranks higher than Barcelona.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLaLigaTeam(x) ::: x is a La Liga soccer team.\nRank(x, y) ::: x ranks higher than y.\nPoints(x, y) ::: x recieves y points.\nPointsFrom(x, y, z) ::: x recieves z points from y.\nPremises:\n∀x ∀y (LaLigaTeam(x) ∧ LaLigaTeam(y) → (Points(x, z) ∧ Points(y, w) → (z > w → Rank(x, y)) ∧ (z = w → PointsFrom(x, y, z) > PointsFrom(y, x, z) → Rank(x, y)))) ::: A La Liga soccer team ranks higher than another if it receives more points. If two La Liga soccer teams recieve the same points, the team which recieves more points from the games between the two teams ranks higher.\nLaLigaTeam(realMadrid) ∧ LaLigaTeam(barcelona) ::: Real Madrid and Barcelona are both La Liga soccer teams.\nPoints(realMadrid, 86) ∧ Points(barcelona, 73) ::: In La Liga 2021-2022, Real Madrid recieves 86 points and Barcelon recieves 73 points.\nPointsFrom(realMadrid, barcelona, 3) ∧ PointsFrom"
    ]
  },
  {
    "id": "FOLIO_train_24",
    "context": "A La Liga soccer team ranks higher than another if it receives more points. If two La Liga soccer teams recieve the same points, the team which recieves more points from the games between the two teams ranks higher. Real Madrid and Barcelona are both La Liga soccer teams. In La Liga 2021-2022, Real Madrid recieves 86 points and Barcelon recieves 73 points. In La Liga 2021-2022, Real Madrid and Barcelona both recieve 3 points from the games between them.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? In La Liga 2021-2022, Barcelona ranks higher than Real Madrid.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLaLigaTeam(x) ::: x is a La Liga soccer team.\nRank(x, y) ::: x ranks higher than y.\nPoints(x, y) ::: x recieves y points.\nPointsFrom(x, y, z) ::: x recieves z points from y.\nPremises:\n∀x ∀y (LaLigaTeam(x) ∧ LaLigaTeam(y) → (Points(x, z) ∧ Points(y, w) → (z > w → Rank(x, y)) ∧ (z = w → PointsFrom(x, y, z) > PointsFrom(y, x, z) → Rank(x, y)))) ::: A La Liga soccer team ranks higher than another if it receives more points. If two La Liga soccer teams recieve the same points, the team which recieves more points from the games between the two teams ranks higher.\nLaLigaTeam(realMadrid) ∧ LaLigaTeam(barcelona) ::: Real Madrid and Barcelona are both La Liga soccer teams.\nPoints(realMadrid, 86) ∧ Points(barcelona, 73) ::: In La Liga 2021-2022, Real Madrid recieves 86 points and Barcelon recieves 73 points.\nPointsFrom(realMadrid, barcelona, 3) ∧ PointsFrom"
    ]
  },
  {
    "id": "FOLIO_train_25",
    "context": "Lawton Park is a neighbourhood in Seattle. All citizens of Lawton Park use the zip code 98199. Tom is a citizen of Lawton Park. Daniel uses the zip code 98199.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tom uses the zip code 98199.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCitizen(x, y) ::: x is a citizen of y.\nUse(x, y) ::: x uses y.\nZipCode(x) ::: x is a zip code.\nPremises:\n∀x (Citizen(x, lawtonPark) → Use(x, zipCode98199)) ::: All citizens of Lawton Park use the zip code 98199.\nCitizen(tom, lawtonPark) ::: Tom is a citizen of Lawton Park.\nUse(daniel, zipCode98199) ::: Daniel uses the zip code 98199.\nConclusion:\nUse(tom, zipCode98199) ::: Tom uses the zip code 98199.\n------\nProblem:\nAll people who are not students are either employees or unemployed. All people who are not students are either employees or unemployed. All people who are not students are either employees or unemployed. All people who are not students are either employees or unemployed. All people who are not students are either employees or unemployed. All people who are not students are either employees or unemployed. All people who are not students are either employees or unemployed. All people who are not students are either employees or unemployed. All people who are not students are either employees or unemployed. All people who are not students are either employees or unemployed. All people who are not students are either employees or unemployed. All people"
    ]
  },
  {
    "id": "FOLIO_train_26",
    "context": "Lawton Park is a neighbourhood in Seattle. All citizens of Lawton Park use the zip code 98199. Tom is a citizen of Lawton Park. Daniel uses the zip code 98199.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tom doesn't use the zip code 98199.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCitizen(x, y) ::: x is a citizen of y.\nUse(x, y) ::: x uses y.\nZipCode(x) ::: x is a zip code.\nPremises:\n∀x (Citizen(x, lawtonPark) → Use(x, zipCode98199)) ::: All citizens of Lawton Park use the zip code 98199.\nCitizen(tom, lawtonPark) ::: Tom is a citizen of Lawton Park.\nUse(daniel, zipCode98199) ::: Daniel uses the zip code 98199.\nConclusion:\n¬Use(tom, zipCode98199) ::: Tom doesn't use the zip code 98199.\n------\nProblem:\nAll people who are not students are either employees or unemployed. All students are either employees or unemployed. All employees are either students or not students.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? All people are either students or unemployed.\n###\nPredicates:\nStudent(x) ::: x is a student.\nEmployee(x) ::: x is an employee.\nUnemployed(x) ::: x is unemployed.\nPremises:\n∀x (¬Student(x) → (Employee(x) ∨ Unemployed(x))) :::"
    ]
  },
  {
    "id": "FOLIO_train_27",
    "context": "Lawton Park is a neighbourhood in Seattle. All citizens of Lawton Park use the zip code 98199. Tom is a citizen of Lawton Park. Daniel uses the zip code 98199.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tom is a citizen of Washington.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCitizen(x, y) ::: x is a citizen of y.\nUse(x, y) ::: x uses y.\nZipCode(x) ::: x is a zip code.\nPremises:\n∀x (Citizen(x, lawtonPark) → Use(x, zipCode98199)) ::: All citizens of Lawton Park use the zip code 98199.\nCitizen(tom, lawtonPark) ::: Tom is a citizen of Lawton Park.\nUse(daniel, zipCode98199) ::: Daniel uses the zip code 98199.\nConclusion:\nCitizen(tom, washington) ::: Tom is a citizen of Washington.\n------\nProblem:\nAll people who are not students are either employees or unemployed. All students are either employees or unemployed. All employees are either students or not students.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? All people are either students or unemployed.\n###\nPredicates:\nStudent(x) ::: x is a student.\nEmployee(x) ::: x is an employee.\nUnemployed(x) ::: x is unemployed.\nPremises:\n∀x (¬Student(x) → (Employee(x) ∨ Unemployed(x))) ::: All people who are not students are either employees or unemployed"
    ]
  },
  {
    "id": "FOLIO_train_28",
    "context": "Lawton Park is a neighbourhood in Seattle. All citizens of Lawton Park use the zip code 98199. Tom is a citizen of Lawton Park. Daniel uses the zip code 98199.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Daniel is a citizen of Lawton Park.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCitizen(x, y) ::: x is a citizen of y.\nUse(x, y) ::: x uses y.\nZipCode(x) ::: x is a zip code.\nPremises:\n∀x (Citizen(x, lawtonPark) → Use(x, zipCode98199)) ::: All citizens of Lawton Park use the zip code 98199.\nCitizen(tom, lawtonPark) ::: Tom is a citizen of Lawton Park.\nUse(daniel, zipCode98199) ::: Daniel uses the zip code 98199.\nConclusion:\nCitizen(daniel, lawtonPark) ::: Daniel is a citizen of Lawton Park.\n------\nProblem:\nAll people who are not students are either employees or unemployed. All students are either employees or unemployed. All employees are either students or not students.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? All people are either students or unemployed.\n###\nPredicates:\nStudent(x) ::: x is a student.\nEmployee(x) ::: x is an employee.\nUnemployed(x) ::: x is unemployed.\nPremises:\n∀x (¬Student(x) → (Employee(x) ∨ Unemployed(x))) ::: All people who are not students are"
    ]
  },
  {
    "id": "FOLIO_train_29",
    "context": "If a legislator is found guilty of stealing government funds, they will be suspended from office. Tiffany T. Alston was a legislator in Maryland's House of Delegates from 2011 to 2013. Tiffany T. Alston was found guilty of stealing government funds in 2012.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tiffany T. Alston was suspended from the Maryland House of Delegates.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLegislator(x) ::: x is a legislator.\nSteal(x, y) ::: x steals y.\nGovernmentFunds(y) ::: y is government funds.\nSuspend(x) ::: x is suspended.\nDelegate(x) ::: x is a delegate.\nPremises:\n∀x (Legislator(x) ∧ Steal(x, GovernmentFunds(y)) → Suspend(x)) ::: If a legislator is found guilty of stealing government funds, they will be suspended from office.\nLegislator(tiffany) ∧ Delegate(tiffany) ∧ Steal(tiffany, GovernmentFunds(y)) ∧ Year(year2012) ::: Tiffany T. Alston was a legislator in Maryland's House of Delegates from 2011 to 2013. Tiffany T. Alston was found guilty of stealing government funds in 2012.\nConclusion:\nSuspend(tiffany) ::: Tiffany T. Alston was suspended from the Maryland House of Delegates.\n------\nProblem:\nIf a person is a student, then they are a person. If a person is a student, then they are a person. If a person is a student, then they are a person. If a person is a student, then they are a person. If a person"
    ]
  },
  {
    "id": "FOLIO_train_30",
    "context": "If a legislator is found guilty of stealing government funds, they will be suspended from office. Tiffany T. Alston was a legislator in Maryland's House of Delegates from 2011 to 2013. Tiffany T. Alston was found guilty of stealing government funds in 2012.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tiffany T. Alston was not suspended from the Maryland House of Delegates.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLegislator(x) ::: x is a legislator.\nSteal(x, y) ::: x steals y.\nGovernmentFunds(y) ::: y is government funds.\nSuspend(x) ::: x is suspended.\nDelegate(x) ::: x is a delegate.\nPremises:\n∀x (Legislator(x) ∧ Steal(x, GovernmentFunds(y)) → Suspend(x)) ::: If a legislator is found guilty of stealing government funds, they will be suspended from office.\nLegislator(tiffany) ∧ Delegate(tiffany) ∧ Steal(tiffany, GovernmentFunds(y)) ∧ Year(year2012) ::: Tiffany T. Alston was a legislator in Maryland's House of Delegates from 2011 to 2013. Tiffany T. Alston was found guilty of stealing government funds in 2012.\nConclusion:\n¬Suspend(tiffany) ::: Tiffany T. Alston was not suspended from the Maryland House of Delegates.\n------"
    ]
  },
  {
    "id": "FOLIO_train_31",
    "context": "If a legislator is found guilty of stealing government funds, they will be suspended from office. Tiffany T. Alston was a legislator in Maryland's House of Delegates from 2011 to 2013. Tiffany T. Alston was found guilty of stealing government funds in 2012.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tiffany T. Alston went to prison for stealing government funds.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLegislator(x) ::: x is a legislator.\nSteal(x, y) ::: x steals y.\nGovernmentFunds(y) ::: y is government funds.\nSuspend(x) ::: x is suspended from office.\nPrison(x) ::: x goes to prison.\nPremises:\n∀x (Legislator(x) ∧ Steal(x, GovernmentFunds(y)) → Suspend(x)) ::: If a legislator is found guilty of stealing government funds, they will be suspended from office.\nLegislator(tiffany) ∧ Steal(tiffany, GovernmentFunds(y)) ∧ Year(year2012) ::: Tiffany T. Alston was a legislator in Maryland's House of Delegates from 2011 to 2013. Tiffany T. Alston was found guilty of stealing government funds in 2012.\nConclusion:\nPrison(tiffany) ::: Tiffany T. Alston went to prison for stealing government funds.\n------\nProblem:\nIf a person is a student, then"
    ]
  },
  {
    "id": "FOLIO_train_32",
    "context": "Some fish may sting. Stonefish is a fish. It stings to step on a stonefish. Stonefish stings cause death if not treated. To treat stonefish stings, apply heat to the affected area or use an antivenom.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If you step on a stonefish and don’t use an antivenom, it will cause death.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFish(x) ::: x is a fish.\nStonefish(x) ::: x is a stonefish.\nSting(x) ::: x stings.\nStepOn(x, y) ::: x steps on y.\nStingCauseDeath(x) ::: x causes death.\nTreat(x, y) ::: x treats y.\nApplyHeat(x, y) ::: x applies heat to y.\nUseAntivenom(x, y) ::: x uses an antivenom on y.\nPremises:\n∃x (Fish(x) ∧ Sting(x)) ::: Some fish may sting.\nStonefish(stonefish) ::: Stonefish is a fish.\nSting(stonefish) ::: Stonefish stings.\nStingCauseDeath(stonefishSting) ::: Stonefish stings cause death.\nTreat(heat, stonefishSting) ::: To treat stonefish stings, apply heat to the affected area.\nTreat(antivenom, stonefishSting) ::: To treat stonefish stings, use an antivenom.\nConclusion:\nStingCauseDeath("
    ]
  },
  {
    "id": "FOLIO_train_33",
    "context": "Some fish may sting. Stonefish is a fish. It stings to step on a stonefish. Stonefish stings cause death if not treated. To treat stonefish stings, apply heat to the affected area or use an antivenom.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Stings of some fish can cause death if not treated.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFish(x) ::: x is a fish.\nStonefish(x) ::: x is a stonefish.\nSting(x, y) ::: x stings y.\nStepOn(x, y) ::: x steps on y.\nStingCauseDeath(x) ::: x causes death if not treated.\nTreat(x, y) ::: x treats y.\nHeat(x) ::: x is heat.\nAntivenom(x) ::: x is an antivenom.\nPremises:\n∃x (Fish(x) ∧ Sting(x, y)) ::: Some fish may sting.\nStonefish(stonefish) ::: Stonefish is a fish.\nSting(stonefish, stepOn) ::: It stings to step on a stonefish.\nStingCauseDeath(stonefishSting) ::: Stonefish stings cause death if not treated.\nTreat(heat, stonefishSting) ∧ Treat(antivenom, stonefishSting) ::: To treat stonefish stings, apply heat to the affected area or use an antivenom.\nConclusion:\n∃x ("
    ]
  },
  {
    "id": "FOLIO_train_34",
    "context": "Some fish may sting. Stonefish is a fish. It stings to step on a stonefish. Stonefish stings cause death if not treated. To treat stonefish stings, apply heat to the affected area or use an antivenom.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If you step on a stonefish and apply heat to the affected area, stings will cause death.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFish(x) ::: x is a fish.\nStonefish(x) ::: x is a stonefish.\nSting(x) ::: x stings.\nStepOn(x, y) ::: x steps on y.\nStingCauseDeath(x) ::: x causes death.\nTreat(x, y) ::: x treats y.\nHeat(x) ::: x is heat.\nAntivenom(x) ::: x is an antivenom.\nPremises:\n∃x (Fish(x) ∧ Sting(x)) ::: Some fish may sting.\nStonefish(stonefish) ::: Stonefish is a fish.\nSting(stonefish) ::: Stonefish stings.\nStingCauseDeath(stonefishSting) ::: Stonefish stings cause death.\nTreat(heat, stonefishSting) ::: To treat stonefish stings, apply heat to the affected area.\nTreat(antivenom, stonefishSting) ::: To treat stonefish stings, use an antivenom.\nConclusion:\nStepOn(stonefish, x) ∧ Treat(heat,"
    ]
  },
  {
    "id": "FOLIO_train_35",
    "context": "Some monitors produced by LG have a type-c port. If the monitor has a type-c port, then it is not produced by AOC. All monitors in the library are produced by AOC. L-2021 is either in the library or has a type-c port. L-2021 is either produced by AOC and produced by LG, or neither produced by AOC nor produced by LG.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? L-2021 is in the library.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProduce(x, y) ::: x produces y.\nTypeC(x) ::: x has a type-c port.\nInLibrary(x) ::: x is in the library.\nPremises:\n∀x (TypeC(x) → ¬Produce(aoc, x)) ::: If the monitor has a type-c port, then it is not produced by AOC.\n∀x (Produce(aoc, x) → ¬Produce(lg, x)) ::: All monitors in the library are produced by AOC.\nL-2021 ∨ TypeC(L-2021) ::: L-2021 is either in the library or has a type-c port.\n(Produce(lg, L-2021) ∧ Produce(aoc, L-2021)) ∨ ¬(Produce(lg, L-2021) ∨ Produce(aoc, L-2021)) ::: L-2021 is either produced by AOC and produced by LG, or neither produced by AOC nor produced by LG.\nConclusion:"
    ]
  },
  {
    "id": "FOLIO_train_36",
    "context": "Some monitors produced by LG have a type-c port. If the monitor has a type-c port, then it is not produced by AOC. All monitors in the library are produced by AOC. L-2021 is either in the library or has a type-c port. L-2021 is either produced by AOC and produced by LG, or neither produced by AOC nor produced by LG.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? L-2021 is either in the library or produced by LG.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProduce(x, y) ::: x produces y.\nTypeC(x) ::: x has a type-c port.\nInLibrary(x) ::: x is in the library.\nPremises:\n∃x (Produce(LG, x) ∧ TypeC(x)) ::: Some monitors produced by LG have a type-c port.\n∀x (Produce(AOC, x) → ¬TypeC(x)) ::: If the monitor has a type-c port, then it is not produced by AOC.\n∀x (InLibrary(x) → Produce(AOC, x)) ::: All monitors in the library are produced by AOC.\nL-2021 ∨ TypeC(L-2021) ::: L-2021 is either in the library or has a type-c port.\nL-2021 ∧ (Produce(AOC, L-2021) ∧ Produce(LG, L-2021)) ∨ ¬(Produce(AOC, L-2021) ∧ Produce("
    ]
  },
  {
    "id": "FOLIO_train_37",
    "context": "Some monitors produced by LG have a type-c port. If the monitor has a type-c port, then it is not produced by AOC. All monitors in the library are produced by AOC. L-2021 is either in the library or has a type-c port. L-2021 is either produced by AOC and produced by LG, or neither produced by AOC nor produced by LG.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? L-2021 either has a type-c port or is produced by LG.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProduce(x, y) ::: x produces y.\nTypeC(x) ::: x has a type-c port.\nInLibrary(x) ::: x is in the library.\nPremises:\n∃x (Produce(lg, x) ∧ TypeC(x)) ::: Some monitors produced by LG have a type-c port.\n∀x (Produce(aoc, x) → ¬TypeC(x)) ::: If the monitor has a type-c port, then it is not produced by AOC.\n∀x (InLibrary(x) → Produce(aoc, x)) ::: All monitors in the library are produced by AOC.\nL-2021 ∨ TypeC(L-2021) ∧ ¬(Produce(aoc, L-2021) ∧ Produce(lg, L-2021)) ::: L-2021 is either in the library or has a type-c port. L-2021 is either produced by AOC and produced by LG, or neither produced by AOC nor produced by LG.\nConclusion:"
    ]
  },
  {
    "id": "FOLIO_train_38",
    "context": "Some monitors produced by LG have a type-c port. If the monitor has a type-c port, then it is not produced by AOC. All monitors in the library are produced by AOC. L-2021 is either in the library or has a type-c port. L-2021 is either produced by AOC and produced by LG, or neither produced by AOC nor produced by LG.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If L-2021 is either in the library and produced by LG, or neither in the library nor produced by LG,  then L-2021 neither has a type-c port nor is produced by LG.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProduce(x, y) ::: x produces y.\nHas(x, y) ::: x has y.\nTypeC(x) ::: x has a type-c port.\nInLibrary(x) ::: x is in the library.\nPremises:\n∀x (Has(x, typeC) → ¬Produce(aoc, x)) ::: If the monitor has a type-c port, then it is not produced by AOC.\n∀x (Produce(x, aoc) → ¬Produce(lg, x)) ::: All monitors in the library are produced by AOC.\nL-2021 ∨ Has(L-2021, typeC) ∧ ¬(L-2021 ∧ Produce(lg, L-2021)) ::: L-2021 is either in the library or has a type-c port.\nL-2021 ∧ (Produce(lg, L-2021) ∧ Produce(aoc, L-2021)) ∨ ¬(Produce(lg, L-202"
    ]
  },
  {
    "id": "FOLIO_train_39",
    "context": "Some monitors produced by LG have a type-c port. If the monitor has a type-c port, then it is not produced by AOC. All monitors in the library are produced by AOC. L-2021 is either in the library or has a type-c port. L-2021 is either produced by AOC and produced by LG, or neither produced by AOC nor produced by LG.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If L-2021 is either produced by LG and produced by AOC or neither produced by LG nor produced by AOC,  then L-2021 is either in the library or produced by LG.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProduce(x, y) ::: x produces y.\nTypeC(x) ::: x has a type-c port.\nInLibrary(x) ::: x is in the library.\nPremises:\n∀x (TypeC(x) → ¬Produce(aoc, x)) ::: If the monitor has a type-c port, then it is not produced by AOC.\n∀x (Produce(aoc, x) → ¬Produce(lg, x)) ::: All monitors in the library are produced by AOC.\nL-2021 ∨ TypeC(L-2021) ::: L-2021 is either in the library or has a type-c port.\nL-2021 ∧ (Produce(aoc, L-2021) ∧ Produce(lg, L-2021)) ∨ ¬(Produce(aoc, L-2021) ∧ Produce(lg, L-2021)) ::: L-2021 is either produced by AOC and produced by LG, or neither produced by AOC nor"
    ]
  },
  {
    "id": "FOLIO_train_40",
    "context": "People eat meat regularly or are vegetation. If people eat meat regularly, then they enjoy eating hamburgers and steaks. All people who are vegetarian are conscious of the environment or their health. If people are conscious about the environment or their health, then they do not go to fast food places often. If people have busy schedules without time to cook, then they go to fast food places often. If Jeremy does not both go to fast food places often and is conscious about the environment or their health, then he goes to fast food places often.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jeremy has a busy schedule without time to cook.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEatMeat(x) ::: x eats meat regularly.\nVegetarian(x) ::: x is a vegetarian.\nEnjoy(x, y) ::: x enjoys y.\nConscious(x, y) ::: x is conscious about y.\nGoTo(x, y) ::: x goes to y.\nBusy(x) ::: x has a busy schedule without time to cook.\nPremises:\nEatMeat(j) ∧ Enjoy(j, hamburgers) ∧ Enjoy(j, steaks) ::: People eat meat regularly or are vegetation.\nEatMeat(x) → Enjoy(x, hamburgers) ∧ Enjoy(x, steaks) ::: If people eat meat regularly, then they enjoy eating hamburgers and steaks.\nVegetarian(x) → (Conscious(x, environment) ∨ Conscious(x, health)) ::: All people who are vegetarian are conscious of the environment or their health.\nConscious(x, environment) ∨ Conscious(x, health) → ¬GoTo(x, fastFoodPlace) ::: If people are conscious about the environment or their health, then they do not go to fast food places often.\nBusy(x) → GoTo(x, fastFoodPlace) ::: If people have busy schedules without time to cook, then they go to fast food places often.\n¬(GoTo(j, fastFoodPlace) ∧ Conscious(j, environment) ∧ Conscious(j, health)) → GoTo(j, fastFoodPlace) ::: If Jeremy does not both go to fast food places often and is conscious about the environment or their health, then he goes to fast food places often.\nConclusion:\nBusy(j) ::: Jeremy has a busy schedule without time to cook.\n------"
    ]
  },
  {
    "id": "FOLIO_train_41",
    "context": "People eat meat regularly or are vegetation. If people eat meat regularly, then they enjoy eating hamburgers and steaks. All people who are vegetarian are conscious of the environment or their health. If people are conscious about the environment or their health, then they do not go to fast food places often. If people have busy schedules without time to cook, then they go to fast food places often. If Jeremy does not both go to fast food places often and is conscious about the environment or their health, then he goes to fast food places often.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jeremy has a busy schedule without time to cook or enjoy eating hamburgers and steaks.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEatMeat(x) ::: x eats meat regularly.\nVegetarian(x) ::: x is a vegetarian.\nEnjoy(x, y) ::: x enjoys y.\nConscious(x, y) ::: x is conscious about y.\nGoTo(x, y) ::: x goes to y.\nBusy(x) ::: x has a busy schedule without time to cook.\nPremises:\nEatMeat(j) ∧ Enjoy(j, hamburgers) ∧ Enjoy(j, steaks) ::: People eat meat regularly or are vegetation.\nEatMeat(x) → (Enjoy(x, hamburgers) ∧ Enjoy(x, steaks)) ::: If people eat meat regularly, then they enjoy eating hamburgers and steaks.\nVegetarian(x) → (Conscious(x, environment) ∨ Conscious(x, health)) ::: All people who are vegetarian are conscious of the environment or their health.\nConscious(x, environment) ∨ Conscious(x, health) → ¬GoTo(x, fastFoodPlaces) ::: If people are conscious about the environment or their health, then they do not go to fast food places often.\nBusy(x) → GoTo(x, fastFoodPlaces) ::: If people have busy schedules without time to cook, then they go to fast food places often.\n¬(GoTo(j, fastFoodPlaces) ∧ Conscious(j, environment) ∧ Conscious(j, health)) → GoTo(j, fastFoodPlaces) ::: If Jeremy does not both go to fast food places often and is conscious about the environment or their health, then he goes to fast food places often.\nConclusion:\nBusy(j) ∧ ¬Enjoy"
    ]
  },
  {
    "id": "FOLIO_train_42",
    "context": "People eat meat regularly or are vegetation. If people eat meat regularly, then they enjoy eating hamburgers and steaks. All people who are vegetarian are conscious of the environment or their health. If people are conscious about the environment or their health, then they do not go to fast food places often. If people have busy schedules without time to cook, then they go to fast food places often. If Jeremy does not both go to fast food places often and is conscious about the environment or their health, then he goes to fast food places often.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Jeremy has a busy schedule without time to cook or enjoy eating hamburgers and steaks, then Jeremy neither has a busy schedule without having time to cook nor enjoys eating hamburgers and steaks.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEatMeat(x) ::: x eats meat regularly.\nVegetarian(x) ::: x is a vegetarian.\nEnjoy(x, y) ::: x enjoys y.\nConscious(x, y) ::: x is conscious about y.\nGoToFastFood(x) ::: x goes to fast food places often.\nHaveBusySchedule(x) ::: x has a busy schedule.\nPremises:\nEatMeat(j) ∨ Vegetarian(j) ::: People eat meat regularly or are vegetation.\nEatMeat(j) → (Enjoy(j, hamburger) ∧ Enjoy(j, steak)) ::: If people eat meat regularly, then they enjoy eating hamburgers and steaks.\nVegetarian(j) → (Conscious(j, environment) ∨ Conscious(j, health)) ::: All people who are vegetarian are conscious of the environment or their health.\nConscious(j, environment) ∨ Conscious(j, health) → ¬GoToFastFood(j) ::: If people are conscious about the environment or their health, then they do not go to fast food places often.\nHaveBusySchedule(j) → GoToFastFood(j) ::: If people have busy schedules without time to cook, then they go to fast food places often.\n¬(EatMeat(j) ∧ ¬GoToFastFood(j)) → (EatMeat(j) ∧ ¬GoToFastFood(j)) ∨ ¬(EatMeat(j) ∧ ¬GoToFastFood(j)) ::: If Jeremy does not both go to fast food places often and is conscious about the environment or their health, then he goes to fast food places often.\nConclusion:\n(E"
    ]
  },
  {
    "id": "FOLIO_train_43",
    "context": "Sam is doing a project. A project is written either in C++ or in Python. If Sam does a project written in Python, he will not use a Mac. Sam is using a Mac. If Sam uses a Mac, he will play a song. If a song is not \"Perfect\", Sam will never play it.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The project Sam is doing is written in C++.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProject(x) ::: x is a project.\nC++(x) ::: x is written in C++.\nPython(x) ::: x is written in Python.\nMac(x) ::: x is a Mac.\nUse(x, y) ::: x uses y.\nPlay(x, y) ::: x plays y.\nSong(x) ::: x is a song.\nPerfect(x) ::: x is perfect.\nPremises:\n∀x (Project(x) → (C++(x) ∨ Python(x))) ::: A project is written either in C++ or in Python.\n∀x (Project(x) ∧ Python(x) → ¬Mac(x)) ::: If Sam does a project written in Python, he will not use a Mac.\nMac(sam) ::: Sam is using a Mac.\n∀x (Mac(x) → Play(x, song)) ::: If Sam uses a Mac, he will play a song.\n∀x (Play(sam, x) → ¬Perfect(x)) ::: If a song is not \"Perfect\", Sam will never play it.\nConclusion:\nC++(project) ::: The project Sam is doing is written in C++.\n------\nProblem:\nA person is either a student or a teacher. A student is either a graduate student or an undergraduate student. A graduate student is either a master's student or a doctoral student. A master's student is either a student in the department of computer science or a student in the department of mathematics. A doctoral student is either a student in the department of computer science or a student in the department of mathematics. A teacher is either a professor or a teaching assistant. A professor is either a professor in the department of computer science or a professor in the department of mathematics. A teaching assistant is either a teaching assistant in the department of"
    ]
  },
  {
    "id": "FOLIO_train_44",
    "context": "Sam is doing a project. A project is written either in C++ or in Python. If Sam does a project written in Python, he will not use a Mac. Sam is using a Mac. If Sam uses a Mac, he will play a song. If a song is not \"Perfect\", Sam will never play it.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The song Sam is playing is \"Perfect\".",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProject(x) ::: x is a project.\nCPlusPlus(x) ::: x is written in C++.\nPython(x) ::: x is written in Python.\nMac(x) ::: x is a Mac.\nPlay(x, y) ::: x plays y.\nSong(x) ::: x is a song.\nPerfect(x) ::: x is a song called \"Perfect\".\nPremises:\n∀x (Project(x) → (CPlusPlus(x) ∨ Python(x))) ::: A project is written either in C++ or in Python.\n∀x (Project(x) ∧ Python(x) → ¬Mac(x)) ::: If Sam does a project written in Python, he will not use a Mac.\nMac(sam) ::: Sam is using a Mac.\n∀x (Mac(x) → Play(x, song)) ::: If Sam uses a Mac, he will play a song.\n∀x (Play(sam, x) → ¬Perfect(x)) ::: If a song is not \"Perfect\", Sam will never play it.\nConclusion:\nPerfect(song) ::: The song Sam is playing is \"Perfect\".\n------\nProblem:\nA person is either a student or a teacher. A student is either a graduate student or an undergraduate student. A graduate student is either a master's student or a doctoral student. A master's student is either a student in the department of computer science or a student in the department of mathematics. A doctoral student is either a student in the department of computer science or a student in the department of mathematics. A teacher is either a professor or a teaching assistant. A professor is either a professor in the department of computer science or a professor in the department of mathematics. A teaching assistant is either a teaching assistant in the department of computer science or a teaching assistant"
    ]
  },
  {
    "id": "FOLIO_train_45",
    "context": "Sam is doing a project. A project is written either in C++ or in Python. If Sam does a project written in Python, he will not use a Mac. Sam is using a Mac. If Sam uses a Mac, he will play a song. If a song is not \"Perfect\", Sam will never play it.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If a song is \"Perfect\", Sam will play it.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProject(x) ::: x is a project.\nCPlusPlus(x) ::: x is written in C++.\nPython(x) ::: x is written in Python.\nMac(x) ::: x is a Mac.\nPlay(x, y) ::: x plays y.\nSong(x) ::: x is a song.\nPerfect(x) ::: x is \"Perfect\".\nPremises:\n∀x (Project(x) → (CPlusPlus(x) ∨ Python(x))) ::: A project is written either in C++ or in Python.\n∀x (Project(x) ∧ Python(x) → ¬Mac(x)) ::: If Sam does a project written in Python, he will not use a Mac.\nMac(sam) ::: Sam is using a Mac.\n∀x (Mac(x) → Play(x, song)) ::: If Sam uses a Mac, he will play a song.\n∀x (Play(sam, x) → ¬Perfect(x)) ::: If a song is not \"Perfect\", Sam will never play it.\nConclusion:\n∀x (Perfect(x) → Play(sam, x)) ::: If a song is \"Perfect\", Sam will play it.\n------\nProblem:\nA person is either a student or a teacher. A student is either a graduate student or an undergraduate student. A graduate student is either a master's student or a doctoral student. A master's student is either a student in the department of computer science or a student in the department of mathematics. A doctoral student is either a student in the department of computer science or a student in the department of mathematics. A teacher is either a professor or a teaching assistant. A professor is either a professor in the department of computer science or a professor in the department of mathematics. A teaching assistant is either a teaching"
    ]
  },
  {
    "id": "FOLIO_train_46",
    "context": "All rabbits have fur Some pets are rabbits.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Some pets do not have fur.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRabbit(x) ::: x is a rabbit.\nPet(x) ::: x is a pet.\nFur(x) ::: x has fur.\nPremises:\n∀x (Rabbit(x) → Fur(x)) ::: All rabbits have fur.\n∃x (Pet(x) ∧ Rabbit(x)) ::: Some pets are rabbits.\nConclusion:\n¬∃x (Pet(x) ∧ ¬Fur(x)) ::: Some pets do not have fur.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.\n###\nPredicates:\nDependent(x) ::: x is a person dependent on caffeine"
    ]
  },
  {
    "id": "FOLIO_train_47",
    "context": "All video applications are software. All YouTube-related applications are video applications. An APP is either related to YouTube or Instagram. All Instagram is entertainment. All software is programmed. All entertainments are interesting. If something is interesting, then it is good. TikTok is not good.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tiktok is a program.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nVideoApplication(x) ::: x is a video application.\nYouTubeRelatedApplication(x) ::: x is a YouTube-related application.\nRelated(x, y) ::: x is related to y.\nInstagram(x) ::: x is Instagram.\nEntertainment(x) ::: x is entertainment.\nProgram(x) ::: x is programmed.\nInteresting(x) ::: x is interesting.\nGood(x) ::: x is good.\nPremises:\n∀x (VideoApplication(x) → Software(x)) ::: All video applications are software.\n∀x (YouTubeRelatedApplication(x) → VideoApplication(x)) ::: All YouTube-related applications are video applications.\n∀x (Related(x, YouTube) ∨ Related(x, Instagram)) ::: An APP is either related to YouTube or Instagram.\n∀x (Instagram(x) → Entertainment(x)) ::: All Instagram is entertainment.\n∀x (Software(x) → Program(x)) ::: All software is programmed.\n∀x (Entertainment(x) → Interesting(x)) ::: All entertainments are interesting.\n∀x (Interesting(x) → Good(x)) ::: If something is interesting, then it is good.\nTikTok ∧ ¬Good(TikTok) ::: TikTok is not good.\nConclusion:\nProgram(TikTok) ::: Tiktok is a program.\n------\nProblem:\nAll people who are not students are either employees or unemployed. All students are either employees or unemployed. All employees are either students or people who are not students. All people who are not students are either employees or unemployed. All people who are not students are either employees or unemployed. All people who are not students are either employees or unemployed. All people who are"
    ]
  },
  {
    "id": "FOLIO_train_48",
    "context": "All video applications are software. All YouTube-related applications are video applications. An APP is either related to YouTube or Instagram. All Instagram is entertainment. All software is programmed. All entertainments are interesting. If something is interesting, then it is good. TikTok is not good.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tiktok is either good or a program.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRelated(x, y) ::: x is related to y.\nYouTube(x) ::: x is YouTube.\nInstagram(x) ::: x is Instagram.\nEntertainment(x) ::: x is entertainment.\nProgram(x) ::: x is programmed.\nGood(x) ::: x is good.\nInteresting(x) ::: x is interesting.\nPremises:\n∀x (VideoApplication(x) → Software(x)) ::: All video applications are software.\n∀x (YouTubeRelatedApplication(x) → VideoApplication(x)) ::: All YouTube-related applications are video applications.\n∀x (APP(x) → (Related(x, YouTube) ∨ Related(x, Instagram))) ::: All APP is either related to YouTube or Instagram.\n∀x (Instagram(x) → Entertainment(x)) ::: All Instagram is entertainment.\n∀x (Software(x) → Program(x)) ::: All software is programmed.\n∀x (Entertainment(x) → Interesting(x)) ::: All entertainments are interesting.\n∀x (Interesting(x) → Good(x)) ::: If something is interesting, then it is good.\nTikTok ∧ ¬Good(TikTok) ::: TikTok is not good.\nConclusion:\nGood(TikTok) ∨ Program(TikTok) ::: Tiktok is either good or a program.\n------\nProblem:\nAll people who are not students are either employees or unemployed. All students are either employees or unemployed. All employees are either students or people who are not students. All people who are not students are either employees or unemployed. All people who are not students are either employees or unemployed. All people who are not students are either employees or unemployed. All people who are not students"
    ]
  },
  {
    "id": "FOLIO_train_49",
    "context": "All video applications are software. All YouTube-related applications are video applications. An APP is either related to YouTube or Instagram. All Instagram is entertainment. All software is programmed. All entertainments are interesting. If something is interesting, then it is good. TikTok is not good.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tiktok is not both related to youtube and a program.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRelated(x, y) ::: x is related to y.\nYouTube(x) ::: x is YouTube.\nInstagram(x) ::: x is Instagram.\nEntertainment(x) ::: x is entertainment.\nSoftware(x) ::: x is software.\nProgram(x) ::: x is programmed.\nInteresting(x) ::: x is interesting.\nGood(x) ::: x is good.\nPremises:\n∀x (VideoApplication(x) → Software(x)) ::: All video applications are software.\n∀x (YouTubeRelatedApplication(x) → VideoApplication(x)) ::: All YouTube-related applications are video applications.\n∀x (APP(x) → (Related(x, YouTube) ∨ Related(x, Instagram))) ::: All APP is either related to YouTube or Instagram.\n∀x (Instagram(x) → Entertainment(x)) ::: All Instagram is entertainment.\n∀x (Software(x) → Program(x)) ::: All software is programmed.\n∀x (Entertainment(x) → Interesting(x)) ::: All entertainments are interesting.\n∀x (Interesting(x) → Good(x)) ::: If something is interesting, then it is good.\nTikTok ∧ ¬Good(TikTok) ::: TikTok is not good.\nConclusion:\n¬(Related(TikTok, YouTube) ∧ Program(TikTok)) ::: Tiktok is not both related to youtube and a program.\n------\nProblem:\nAll people who are not students are either employees or unemployed. All students are either employees or unemployed. All employees are either managers or workers. All managers are either employees or unemployed. All workers are either employees or unemployed. All unemployed are either employees or unemployed"
    ]
  },
  {
    "id": "FOLIO_train_50",
    "context": "All video applications are software. All YouTube-related applications are video applications. An APP is either related to YouTube or Instagram. All Instagram is entertainment. All software is programmed. All entertainments are interesting. If something is interesting, then it is good. TikTok is not good.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tiktok is either related to youtube or a program.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRelated(x, y) ::: x is related to y.\nYouTube(x) ::: x is YouTube.\nInstagram(x) ::: x is Instagram.\nEntertainment(x) ::: x is entertainment.\nSoftware(x) ::: x is software.\nProgram(x) ::: x is programmed.\nInteresting(x) ::: x is interesting.\nGood(x) ::: x is good.\nPremises:\n∀x (VideoApplication(x) → Software(x)) ::: All video applications are software.\n∀x (YouTubeRelatedApplication(x) → VideoApplication(x)) ::: All YouTube-related applications are video applications.\n∀x (APP(x) → (Related(x, YouTube) ∨ Related(x, Instagram))) ::: All APP is either related to YouTube or Instagram.\n∀x (Instagram(x) → Entertainment(x)) ::: All Instagram is entertainment.\n∀x (Software(x) → Program(x)) ::: All software is programmed.\n∀x (Entertainment(x) → Interesting(x)) ::: All entertainments are interesting.\n∀x (Interesting(x) → Good(x)) ::: If something is interesting, then it is good.\nTikTok ∧ ¬Good(TikTok) ::: TikTok is not good.\nConclusion:\n(Related(TikTok, YouTube) ∨ Program(TikTok)) ::: Tiktok is either related to youtube or a program.\n------"
    ]
  },
  {
    "id": "FOLIO_train_51",
    "context": "Ordinary is an unincorporated community. Located within Elliot County, Ordinary is on Kentucky Route 32. Ordinary is located northwest of Sandy Hook.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There are no unincorporated communities along Kentucky Route 32.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nUnincorporatedCommunity(x) ::: x is an unincorporated community.\nLocatedWithin(x, y) ::: x is located within county y.\nLocatedOn(x, y) ::: x is located on road y.\nLocatedNorthwestOf(x, y) ::: x is located northwest of y.\nPremises:\nUnincorporatedCommunity(ordinary) ::: Ordinary is an unincorporated community.\nLocatedWithin(ordinary, elliot) ::: Located within Elliot County, Ordinary is on Kentucky Route 32.\nLocatedOn(ordinary, kentuckyRoute32) ::: Ordinary is located on Kentucky Route 32.\nLocatedNorthwestOf(ordinary, sandyHook) ::: Ordinary is located northwest of Sandy Hook.\nConclusion:\n¬∃x (UnincorporatedCommunity(x) ∧ LocatedOn(x, kentuckyRoute32)) ::: There are no unincorporated communities along Kentucky Route 32.\n------\nProblem:\nThe 1996 film The English Patient is based on the 1992 novel of the same name by Michael Ondaatje. The film was directed by Anthony Minghella and stars Ralph Fiennes, Juliette Binoche, Willem Dafoe, Kristin Scott Thomas, and Naveen Andrews. The film was nominated for 12 Academy Awards and won nine, including Best Picture, Best Director, and Best Supporting Actress.\nQuestion:\nBased on the above"
    ]
  },
  {
    "id": "FOLIO_train_52",
    "context": "Ordinary is an unincorporated community. Located within Elliot County, Ordinary is on Kentucky Route 32. Ordinary is located northwest of Sandy Hook.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There is an unincorporated community in Elliot County.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nUnincorporatedCommunity(x) ::: x is an unincorporated community.\nLocatedWithin(x, y) ::: x is located within y.\nOn(x, y) ::: x is on y.\nLocatedNorthwestOf(x, y) ::: x is located northwest of y.\nPremises:\nUnincorporatedCommunity(ordinary) ::: Ordinary is an unincorporated community.\nLocatedWithin(ordinary, elliotCounty) ::: Located within Elliot County, Ordinary is on Kentucky Route 32.\nOn(ordinary, kentuckyRoute32) ::: Ordinary is on Kentucky Route 32.\nLocatedNorthwestOf(ordinary, sandyHook) ::: Ordinary is located northwest of Sandy Hook.\nConclusion:\n∃x (UnincorporatedCommunity(x) ∧ LocatedWithin(x, elliotCounty)) ::: There is an unincorporated community in Elliot County.\n------\nProblem:\nThe 1996 film The English Patient is a romantic drama film directed by Anthony Minghella. The film is based on the 1992 novel of the same name by Michael Ondaatje. The film stars Ralph Fiennes, Juliette Binoche, Willem Dafoe, Kristin Scott Thomas, and Naveen Andrews. The film was shot in Italy, Morocco, and Tunisia.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The English Pat"
    ]
  },
  {
    "id": "FOLIO_train_53",
    "context": "All young adults go on a diet. All college students are young adults. All Yale students are college students. Someone is either a Yale student or a Harvard student. All Harvard students are diligent. If Susan is a Harvard student, then she is a young adult. If Susan is a Yale student, then she does not go on a diet.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Susan is a college student.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nYoungAdult(x) ::: x is a young adult.\nCollegeStudent(x) ::: x is a college student.\nYaleStudent(x) ::: x is a Yale student.\nHarvardStudent(x) ::: x is a Harvard student.\nDiligent(x) ::: x is diligent.\nGoOnADiet(x) ::: x goes on a diet.\nPremises:\n∀x (YoungAdult(x) → GoOnADiet(x)) ::: All young adults go on a diet.\n∀x (CollegeStudent(x) → YoungAdult(x)) ::: All college students are young adults.\n∀x (YaleStudent(x) → CollegeStudent(x)) ::: All Yale students are college students.\n∀x (HarvardStudent(x) → CollegeStudent(x)) ::: All Harvard students are college students.\n∃x (HarvardStudent(x) ∨ YaleStudent(x)) ::: Someone is either a Yale student or a Harvard student.\n∀x (HarvardStudent(x) → Diligent(x)) ::: All Harvard students are diligent.\n∀x (CollegeStudent(susan) → YoungAdult(susan)) ::: If Susan is a Harvard student, then she is a young adult.\n∀x (YaleStudent(x) → ¬GoOnADiet(x)) ::: If Susan is a Yale student, then she does not go on a diet.\nConclusion:\nCollegeStudent(susan) ::: Susan is a college student."
    ]
  },
  {
    "id": "FOLIO_train_54",
    "context": "All young adults go on a diet. All college students are young adults. All Yale students are college students. Someone is either a Yale student or a Harvard student. All Harvard students are diligent. If Susan is a Harvard student, then she is a young adult. If Susan is a Yale student, then she does not go on a diet.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Susan goes on a diet and is diligent.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nYoungAdult(x) ::: x is a young adult.\nCollegeStudent(x) ::: x is a college student.\nYaleStudent(x) ::: x is a Yale student.\nHarvardStudent(x) ::: x is a Harvard student.\nDiligent(x) ::: x is diligent.\nGoOnADiet(x) ::: x goes on a diet.\nPremises:\n∀x (YoungAdult(x) → GoOnADiet(x)) ::: All young adults go on a diet.\n∀x (CollegeStudent(x) → YoungAdult(x)) ::: All college students are young adults.\n∀x (YaleStudent(x) → CollegeStudent(x)) ::: All Yale students are college students.\n∃x (HarvardStudent(x) ∨ YaleStudent(x)) ::: Someone is either a Yale student or a Harvard student.\n∀x (HarvardStudent(x) → Diligent(x)) ::: All Harvard students are diligent.\n∀x (HarvardStudent(x) → YoungAdult(x)) ::: If Susan is a Harvard student, then she is a young adult.\n∀x (YaleStudent(x) → ¬GoOnADiet(x)) ::: If Susan is a Yale student, then she does not go on a diet.\nConclusion:\nGoOnADiet(susan) ∧ Diligent(susan) ::: Susan goes on a diet and is diligent.\n------\nProblem:\nAll people who are not vegetarians"
    ]
  },
  {
    "id": "FOLIO_train_55",
    "context": "All young adults go on a diet. All college students are young adults. All Yale students are college students. Someone is either a Yale student or a Harvard student. All Harvard students are diligent. If Susan is a Harvard student, then she is a young adult. If Susan is a Yale student, then she does not go on a diet.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Susan does not go on a diet and is diligent.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nYoungAdult(x) ::: x is a young adult.\nCollegeStudent(x) ::: x is a college student.\nYaleStudent(x) ::: x is a Yale student.\nHarvardStudent(x) ::: x is a Harvard student.\nDiligent(x) ::: x is diligent.\nGoOnADiet(x) ::: x goes on a diet.\nPremises:\n∀x (YoungAdult(x) → GoOnADiet(x)) ::: All young adults go on a diet.\n∀x (CollegeStudent(x) → YoungAdult(x)) ::: All college students are young adults.\n∀x (YaleStudent(x) → CollegeStudent(x)) ::: All Yale students are college students.\n∃x (HarvardStudent(x) ∨ YaleStudent(x)) ::: Someone is either a Yale student or a Harvard student.\n∀x (HarvardStudent(x) → Diligent(x)) ::: All Harvard students are diligent.\n∀x (HarvardStudent(x) → YoungAdult(x)) ::: If Susan is a Harvard student, then she is a young adult.\n∀x (YaleStudent(x) → ¬GoOnADiet(x)) ::: If Susan is a Yale student, then she does not go on a diet.\nConclusion:\nDiligent(susan) ∧ ¬GoOnADiet(susan) ::: Susan does not go on a diet and is diligent.\n------\nProblem:\nAll people who"
    ]
  },
  {
    "id": "FOLIO_train_56",
    "context": "Vic DiCara plays guitar and bass. The only style of music Vic DiCara plays is punk music. Vic DiCara played in the band Inside Out.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Inside Out was a punk band.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPlay(x, y) ::: x plays y.\nStyle(x, y) ::: x is a style of y.\nBand(x) ::: x is a band.\nPunk(x) ::: x is a punk band.\nPremises:\nPlay(vic, guitar) ∧ Play(vic, bass) ::: Vic DiCara plays guitar and bass.\n∀x (Play(vic, x) → Style(x, punk)) ::: The only style of music Vic DiCara plays is punk music.\nBand(insideOut) ∧ Play(vic, insideOut) ::: Vic DiCara played in the band Inside Out.\nConclusion:\nPunk(insideOut) ::: Inside Out was a punk band.\n------\nProblem:\nThe only style of music that the band Inside Out plays is punk music. The only style of music that the band The Misfits plays is punk music. The only style of music that the band The Ramones plays is punk music. The only style of music that the band The Sex Pistols plays is punk music. The only style of music that the band The Clash plays is punk music. The only style of music that the band The Dead Kennedys plays is punk music. The only style of music that the band The Exploited plays is punk music. The only style of music that the band The Adicts plays is punk music. The only style of music that the band The Damned plays is punk music. The only style of music that the band The Stranglers plays is punk music. The only style of music that the band The Cramps plays is punk music. The only"
    ]
  },
  {
    "id": "FOLIO_train_57",
    "context": "Vic DiCara plays guitar and bass. The only style of music Vic DiCara plays is punk music. Vic DiCara played in the band Inside Out.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A musician of Inside Out plays bass.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPlay(x, y) ::: x plays y.\nStyle(x, y) ::: x plays style y.\nBand(x) ::: x is a band.\nMember(x, y) ::: x is a member of band y.\nPremises:\nPlay(vic, guitar) ∧ Play(vic, bass) ::: Vic DiCara plays guitar and bass.\n∀x (Play(x, punk)) ∧ ¬∃y (Style(x, y) ∧ y ≠ punk) ::: The only style of music Vic DiCara plays is punk music.\nBand(insideOut) ∧ Member(vic, insideOut) ::: Vic DiCara played in the band Inside Out.\nConclusion:\n∃x (Play(x, bass) ∧ Member(x, insideOut)) ::: A musician of Inside Out plays bass.\n------\nProblem:\nA person who is a student is a person who is enrolled in a university. A person who is a student is a person who is enrolled in a college. A person who is a student is a person who is enrolled in a high school. A person who is a student is a person who is enrolled in a middle school. A person who is a student is a person who is enrolled in a primary school. A person who is a student is a person who is enrolled in a kindergarten. A person who is a student is a person who is enrolled in a nursery school. A person who is a student is a person who is enrolled in a preschool. A person who is"
    ]
  },
  {
    "id": "FOLIO_train_58",
    "context": "All athletes are good at sports. All Olympic gold medal winners are good athletes. No scientists are good at sports. All Nobel laureates are scientists. Amy is good at sports or Amy is an Olympic gold medal winner. If Amy is not a Nobel laureate, then Amy is not an Olympic gold medal winner.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Amy is an athlete.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAthlete(x) ::: x is an athlete.\nOlympicGoldMedalWinner(x) ::: x is an Olympic gold medal winner.\nScientist(x) ::: x is a scientist.\nNobelLaureate(x) ::: x is a Nobel laureate.\nGoodAt(x, y) ::: x is good at y.\nPremises:\n∀x (Athlete(x) → GoodAt(x, sports)) ::: All athletes are good at sports.\n∀x (OlympicGoldMedalWinner(x) → Athlete(x)) ::: All Olympic gold medal winners are good athletes.\n∀x (Scientist(x) → ¬GoodAt(x, sports)) ::: No scientists are good at sports.\n∀x (NobelLaureate(x) → Scientist(x)) ::: All Nobel laureates are scientists.\nAmy(x) ::: x is Amy.\nGoodAt(Amy, sports) ∨ OlympicGoldMedalWinner(Amy) ::: Amy is good at sports or Amy is an Olympic gold medal winner.\n¬(NobelLaureate(Amy) ∧ OlympicGoldMedalWinner(Amy)) ::: If Amy is not a Nobel laureate, then Amy is not an Olympic gold medal winner.\nConclusion:\nAthlete(Amy) ::: Amy is an athlete.\n------\nProblem:\nAll people who are good at sports are athletes. All athletes are good at sports. All Olympic gold medal winners are good"
    ]
  },
  {
    "id": "FOLIO_train_59",
    "context": "All athletes are good at sports. All Olympic gold medal winners are good athletes. No scientists are good at sports. All Nobel laureates are scientists. Amy is good at sports or Amy is an Olympic gold medal winner. If Amy is not a Nobel laureate, then Amy is not an Olympic gold medal winner.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Amy is neither a scientist nor an Olympic gold medal winner.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAthlete(x) ::: x is an athlete.\nOlympicGoldMedalWinner(x) ::: x is an Olympic gold medal winner.\nScientist(x) ::: x is a scientist.\nNobelLaureate(x) ::: x is a Nobel laureate.\nGoodAt(x, y) ::: x is good at y.\nPremises:\n∀x (Athlete(x) → GoodAt(x, sports)) ::: All athletes are good at sports.\n∀x (OlympicGoldMedalWinner(x) → Athlete(x)) ::: All Olympic gold medal winners are good athletes.\n∀x (Scientist(x) → ¬GoodAt(x, sports)) ::: No scientists are good at sports.\n∀x (NobelLaureate(x) → Scientist(x)) ::: All Nobel laureates are scientists.\nAmy(x) ::: x is Amy.\nGoodAt(Amy, sports) ∨ OlympicGoldMedalWinner(Amy) ::: Amy is good at sports or Amy is an Olympic gold medal winner.\n¬(NobelLaureate(Amy) ∧ OlympicGoldMedalWinner(Amy)) ::: If Amy is not a Nobel laureate, then Amy is not an Olympic gold medal winner.\nConclusion:\n¬(Scientist(Amy) ∧ OlympicGoldMedalWinner(Amy)) ::: Amy is neither a scientist nor an Olympic gold medal winner.\n------\nProblem:\nAll people"
    ]
  },
  {
    "id": "FOLIO_train_60",
    "context": "All athletes are good at sports. All Olympic gold medal winners are good athletes. No scientists are good at sports. All Nobel laureates are scientists. Amy is good at sports or Amy is an Olympic gold medal winner. If Amy is not a Nobel laureate, then Amy is not an Olympic gold medal winner.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Amy is not an Olympic gold medal winner, then Amy is a Nobel laureate.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAthlete(x) ::: x is an athlete.\nOlympicGoldMedalWinner(x) ::: x is an Olympic gold medal winner.\nScientist(x) ::: x is a scientist.\nNobelLaureate(x) ::: x is a Nobel laureate.\nGoodAt(x, y) ::: x is good at y.\nPremises:\n∀x (Athlete(x) → GoodAt(x, sports)) ::: All athletes are good at sports.\n∀x (OlympicGoldMedalWinner(x) → Athlete(x)) ::: All Olympic gold medal winners are good athletes.\n∀x (Scientist(x) → ¬GoodAt(x, sports)) ::: No scientists are good at sports.\n∀x (NobelLaureate(x) → Scientist(x)) ::: All Nobel laureates are scientists.\nAmy(x) ::: x is Amy.\nGoodAt(Amy, sports) ∨ OlympicGoldMedalWinner(Amy) ::: Amy is good at sports or Amy is an Olympic gold medal winner.\n¬(NobelLaureate(Amy) ∧ OlympicGoldMedalWinner(Amy)) ::: If Amy is not a Nobel laureate, then Amy is not an Olympic gold medal winner.\nConclusion:\n¬(NobelLaureate(Amy) → OlympicGoldMedalWinner(Amy)) ::: If Amy is not an Olympic gold medal winner, then Amy is a Nobel laureate.\n------"
    ]
  },
  {
    "id": "FOLIO_train_61",
    "context": "All fruits with the color red contain a large amount of vitamin C. All apples are fruits with the color red. All fruits containing a large amount of vitamin C are beneficial to people. No fruits that are beneficial to people are on a warning list. If K is not beneficial to people and also not an apple, then it is a fruit with the color red.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? K is an apple.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFruit(x) ::: x is a fruit.\nColor(x, y) ::: x has color y.\nBeneficial(x) ::: x is beneficial to people.\nWarningList(x) ::: x is on a warning list.\nPremises:\n∀x (Fruit(x) ∧ Color(x, red) → Contain(x, vitaminC)) ::: All fruits with the color red contain a large amount of vitamin C.\n∀x (Fruit(x) ∧ Color(x, red) → Apple(x)) ::: All apples are fruits with the color red.\n∀x (Fruit(x) ∧ Contain(x, vitaminC) → Beneficial(x)) ::: All fruits containing a large amount of vitamin C are beneficial to people.\n∀x (Beneficial(x) → ¬WarningList(x)) ::: No fruits that are beneficial to people are on a warning list.\n(¬Beneficial(k) ∧ ¬Apple(k)) → (Fruit(k) ∧ Color(k, red)) ::: If K is not beneficial to people and also not an apple, then it is a fruit with the color red.\nConclusion:\nApple(k) ::: K is an apple.\n------\nProblem:\nAll people who are not students are either employees or unemployed. All people who are not students are either employees or unemployed. All people who are not students are either employees or unemployed. All people who are not students are either employees or unemployed. All people who are"
    ]
  },
  {
    "id": "FOLIO_train_62",
    "context": "All fruits with the color red contain a large amount of vitamin C. All apples are fruits with the color red. All fruits containing a large amount of vitamin C are beneficial to people. No fruits that are beneficial to people are on a warning list. If K is not beneficial to people and also not an apple, then it is a fruit with the color red.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? K either contains a large amount of vitamin C or is on a warning list.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nColor(x) ::: x is a color.\nFruit(x) ::: x is a fruit.\nBeneficial(x) ::: x is beneficial to people.\nWarningList(x) ::: x is on a warning list.\nContains(x, y) ::: x contains y.\nPremises:\n∀x (Color(red) ∧ Fruit(x) → Contains(x, vitaminC)) ::: All fruits with the color red contain a large amount of vitamin C.\n∀x (Fruit(x) ∧ Color(red) → Fruit(apple)) ::: All apples are fruits with the color red.\n∀x (Contains(x, vitaminC) ∧ Beneficial(x)) ::: All fruits containing a large amount of vitamin C are beneficial to people.\n∀x (Beneficial(x) ∧ WarningList(x)) ::: No fruits that are beneficial to people are on a warning list.\n(¬Beneficial(k) ∧ ¬Fruit(apple)) → (Fruit(k) ∧ Color(red)) ::: If K is not beneficial to people and also not an apple, then it is a fruit with the color red.\nConclusion:\n(Contains(k, vitaminC) ∨ WarningList(k)) ::: K either contains a large amount of vitamin C or is on a warning list.\n------\nProblem:\nAll people who are not students are either employees or unemployed. All people who are not students are either employees or unemployed. All people who"
    ]
  },
  {
    "id": "FOLIO_train_63",
    "context": "All fruits with the color red contain a large amount of vitamin C. All apples are fruits with the color red. All fruits containing a large amount of vitamin C are beneficial to people. No fruits that are beneficial to people are on a warning list. If K is not beneficial to people and also not an apple, then it is a fruit with the color red.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? K is either on a warning list or with the color red.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFruit(x) ::: x is a fruit.\nColor(x, y) ::: x has color y.\nBeneficial(x) ::: x is beneficial to people.\nWarningList(x) ::: x is on a warning list.\nPremises:\n∀x (Fruit(x) ∧ Color(x, red) → Contain(x, vitaminC)) ::: All fruits with the color red contain a large amount of vitamin C.\n∀x (Fruit(x) ∧ Color(x, red) → Apple(x)) ::: All apples are fruits with the color red.\n∀x (Fruit(x) ∧ Contain(x, vitaminC) → Beneficial(x)) ::: All fruits containing a large amount of vitamin C are beneficial to people.\n∀x (Beneficial(x) → ¬WarningList(x)) ::: No fruits that are beneficial to people are on a warning list.\n(¬Beneficial(k) ∧ ¬Apple(k)) → (Fruit(k) ∧ Color(k, red)) ::: If K is not beneficial to people and also not an apple, then it is a fruit with the color red.\nConclusion:\nWarningList(k) ⊕ Color(k, red) ::: K is either on a warning list or with the color red.\n------\nProblem:\nAll people who are not students are either employees or unemployed. All people who are not students are either employees or unemployed. All people who are not students are either employees or unemployed"
    ]
  },
  {
    "id": "FOLIO_train_64",
    "context": "All fruits with the color red contain a large amount of vitamin C. All apples are fruits with the color red. All fruits containing a large amount of vitamin C are beneficial to people. No fruits that are beneficial to people are on a warning list. If K is not beneficial to people and also not an apple, then it is a fruit with the color red.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If K is either beneficial to people or on a warning list, then it is not red.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nColor(x) ::: x is a color.\nFruit(x) ::: x is a fruit.\nBeneficial(x) ::: x is beneficial to people.\nWarningList(x) ::: x is on a warning list.\nRed(x) ::: x is red.\nApple(x) ::: x is an apple.\nPremises:\n∀x (Fruit(x) ∧ Color(x) ∧ Red(x) → ∃y (Fruit(y) ∧ Color(y) ∧ Red(y) ∧ ∀z (Fruit(z) ∧ Color(z) ∧ Red(z) → z = y))) ::: All fruits with the color red contain a large amount of vitamin C.\n∀x (Fruit(x) ∧ Color(x) ∧ Red(x) → Beneficial(x)) ::: All fruits containing a large amount of vitamin C are beneficial to people.\n∀x (Fruit(x) ∧ Beneficial(x) → ¬WarningList(x)) ::: No fruits that are beneficial to people are on a warning list.\n∀x (Fruit(x) ∧ Color(x) ∧ Red(x) → ¬(Apple(x) ∧ ¬Beneficial(x))) ::: If K is not beneficial to people and also not an apple, then it is a fruit with the color red.\nConclusion:\n∀x (Fruit(x"
    ]
  },
  {
    "id": "FOLIO_train_65",
    "context": "All fruits with the color red contain a large amount of vitamin C. All apples are fruits with the color red. All fruits containing a large amount of vitamin C are beneficial to people. No fruits that are beneficial to people are on a warning list. If K is not beneficial to people and also not an apple, then it is a fruit with the color red.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If K is either on a warning list or with the color red, then it is not beneficial to people and does not contain a large amount of vitamin C.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFruit(x) ::: x is a fruit.\nColor(x, y) ::: x has color y.\nBeneficial(x) ::: x is beneficial to people.\nWarningList(x) ::: x is on a warning list.\nContains(x, y) ::: x contains y.\nPremises:\n∀x (Fruit(x) ∧ Color(x, red) → Contains(x, vitaminC)) ::: All fruits with the color red contain a large amount of vitamin C.\n∀x (Fruit(x) ∧ Color(x, red) → Apple(x)) ::: All apples are fruits with the color red.\n∀x (Contains(x, vitaminC) → Beneficial(x)) ::: All fruits containing a large amount of vitamin C are beneficial to people.\n∀x (Beneficial(x) → ¬WarningList(x)) ::: No fruits that are beneficial to people are on a warning list.\n(¬Beneficial(k) ∧ ¬Apple(k)) → (Fruit(k) ∧ Color(k, red)) ::: If K is not beneficial to people and also not an apple, then it is a fruit with the color red.\nConclusion:\n(WarningList(k) ∨ Color(k, red)) → (¬Beneficial(k) ∧ ¬Contains(k, vitaminC)) ::: If K is either on a warning list or with the color red, then it is not beneficial to people and does not contain a large amount of vitamin"
    ]
  },
  {
    "id": "FOLIO_train_66",
    "context": "Everyone working at Meta has a high income. If a person has a high income, then he/she will not take a bus to their destination. People will either take a bus or drive to their destination. Everyone who has a car will choose to drive to their destination. No students drive to their destination. James has a car or works at Meta.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James has a high income.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nWork(x, y) ::: x works at company y.\nHighIncome(x) ::: x has a high income.\nTakeBus(x) ::: x takes a bus to their destination.\nTakeCar(x) ::: x drives to their destination.\nHaveCar(x) ::: x has a car.\nStudent(x) ::: x is a student.\nPremises:\n∀x (Work(x, meta) → HighIncome(x)) ::: Everyone working at Meta has a high income.\n∀x (HighIncome(x) → ¬TakeBus(x)) ::: If a person has a high income, then he/she will not take a bus to their destination.\n∀x (TakeBus(x) ∨ TakeCar(x)) ::: People will either take a bus or drive to their destination.\n∀x (HaveCar(x) → TakeCar(x)) ::: Everyone who has a car will choose to drive to their destination.\n∀x (Student(x) → ¬TakeCar(x)) ::: No students drive to their destination.\nWork(james, meta) ∨ HaveCar(james) ::: James has a car or works at Meta.\nConclusion:\nHighIncome(james) ::: James has a high income.\n------\nProblem:\nEveryone who is a student is a person. Some people are not students. Some people are not persons. Some people are not students. Some people are not persons. Some people are not students. Some people are not persons. Some people are not students. Some people are not persons. Some people"
    ]
  },
  {
    "id": "FOLIO_train_67",
    "context": "Everyone working at Meta has a high income. If a person has a high income, then he/she will not take a bus to their destination. People will either take a bus or drive to their destination. Everyone who has a car will choose to drive to their destination. No students drive to their destination. James has a car or works at Meta.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James does not have a high income.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nWork(x, y) ::: x works at y.\nHighIncome(x) ::: x has a high income.\nTakeBus(x) ::: x takes a bus to their destination.\nTakeCar(x) ::: x drives to their destination.\nStudent(x) ::: x is a student.\nCar(x) ::: x has a car.\nPremises:\n∀x (Work(x, meta) → HighIncome(x)) ::: Everyone working at Meta has a high income.\n∀x (HighIncome(x) → ¬TakeBus(x)) ::: If a person has a high income, then he/she will not take a bus to their destination.\n∀x (TakeBus(x) ∨ TakeCar(x)) ::: People will either take a bus or drive to their destination.\n∀x (Car(x) → TakeCar(x)) ::: Everyone who has a car will choose to drive to their destination.\n∀x (Student(x) → ¬TakeCar(x)) ::: No students drive to their destination.\nWork(james, meta) ∨ Car(james) ::: James has a car or works at Meta.\nConclusion:\n¬HighIncome(james) ::: James does not have a high income.\n------\nProblem:\nEveryone who is a student is a person. Some people are not students. Some people are not persons. Some people are not students. Some people are not persons. Some people are not students. Some people are not persons. Some people are not students. Some people are not persons. Some people are"
    ]
  },
  {
    "id": "FOLIO_train_68",
    "context": "Everyone working at Meta has a high income. If a person has a high income, then he/she will not take a bus to their destination. People will either take a bus or drive to their destination. Everyone who has a car will choose to drive to their destination. No students drive to their destination. James has a car or works at Meta.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James is a student.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nWork(x, y) ::: x works at company y.\nHighIncome(x) ::: x has a high income.\nTakeBus(x) ::: x takes a bus to their destination.\nTakeCar(x) ::: x drives to their destination.\nHaveCar(x) ::: x has a car.\nStudent(x) ::: x is a student.\nPremises:\n∀x (Work(x, meta) → HighIncome(x)) ::: Everyone working at Meta has a high income.\n∀x (HighIncome(x) → ¬TakeBus(x)) ::: If a person has a high income, then he/she will not take a bus to their destination.\n∀x (TakeBus(x) ∨ TakeCar(x)) ::: People will either take a bus or drive to their destination.\n∀x (HaveCar(x) → TakeCar(x)) ::: Everyone who has a car will choose to drive to their destination.\n∀x (Student(x) → ¬TakeCar(x)) ::: No students drive to their destination.\nWork(james, meta) ∨ HaveCar(james) ::: James has a car or works at Meta.\nConclusion:\nStudent(james) ::: James is a student.\n------\nProblem:\nEveryone who is a student is a person. Some people are not students. Some people are not persons. Some people are not students. Some people are not persons. Some people are not students. Some people are not persons. Some people are not students. Some people are not persons. Some people are not students"
    ]
  },
  {
    "id": "FOLIO_train_69",
    "context": "Everyone working at Meta has a high income. If a person has a high income, then he/she will not take a bus to their destination. People will either take a bus or drive to their destination. Everyone who has a car will choose to drive to their destination. No students drive to their destination. James has a car or works at Meta.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James drives to his destination or he is a student.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nWork(x, y) ::: x works at y.\nHighIncome(x) ::: x has a high income.\nTakeBus(x) ::: x takes a bus to his/her destination.\nTakeCar(x) ::: x drives to his/her destination.\nStudent(x) ::: x is a student.\nPremises:\n∀x (Work(x, meta) → HighIncome(x)) ::: Everyone working at Meta has a high income.\n∀x (HighIncome(x) → ¬TakeBus(x)) ::: If a person has a high income, then he/she will not take a bus to their destination.\n∀x (TakeBus(x) ∨ TakeCar(x)) ::: People will either take a bus or drive to their destination.\n∀x (Work(x, meta) → TakeCar(x)) ::: Everyone who has a car will choose to drive to their destination.\n∀x (Student(x) → ¬TakeCar(x)) ::: No students drive to their destination.\n∃x (Work(james, meta) ∨ HighIncome(james)) ::: James has a car or works at Meta.\nConclusion:\nTakeCar(james) ∨ Student(james) ::: James drives to his destination or he is a student.\n------\nProblem:\nEveryone who is a student is a person. Some people are not students. Some people are not persons.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Some people are not students."
    ]
  },
  {
    "id": "FOLIO_train_70",
    "context": "Everyone working at Meta has a high income. If a person has a high income, then he/she will not take a bus to their destination. People will either take a bus or drive to their destination. Everyone who has a car will choose to drive to their destination. No students drive to their destination. James has a car or works at Meta.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James either drives to their destination or is a student.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nWork(x, y) ::: x works at y.\nHighIncome(x) ::: x has a high income.\nTakeBus(x) ::: x takes a bus to their destination.\nTakeCar(x) ::: x drives to their destination.\nCar(x) ::: x has a car.\nStudent(x) ::: x is a student.\nPremises:\n∀x (Work(x, meta) → HighIncome(x)) ::: Everyone working at Meta has a high income.\n∀x (HighIncome(x) → ¬TakeBus(x)) ::: If a person has a high income, then he/she will not take a bus to their destination.\n∀x (TakeBus(x) ∨ TakeCar(x)) ::: People will either take a bus or drive to their destination.\n∀x (Car(x) → TakeCar(x)) ::: Everyone who has a car will choose to drive to their destination.\n∀x (Student(x) → ¬TakeCar(x)) ::: No students drive to their destination.\nWork(james, meta) ∨ Car(james) ::: James has a car or works at Meta.\nConclusion:\nTakeBus(james) ⊕ Student(james) ::: James either drives to their destination or is a student.\n------"
    ]
  },
  {
    "id": "FOLIO_train_71",
    "context": "Everyone working at Meta has a high income. If a person has a high income, then he/she will not take a bus to their destination. People will either take a bus or drive to their destination. Everyone who has a car will choose to drive to their destination. No students drive to their destination. James has a car or works at Meta.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If James either drives to his destination or is a student, then he has a high income and is a student.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nWork(x, y) ::: x works at y.\nHighIncome(x) ::: x has a high income.\nTakeBus(x) ::: x takes a bus to his/her destination.\nTakeCar(x) ::: x drives to his/her destination.\nStudent(x) ::: x is a student.\nCar(x) ::: x has a car.\nPremises:\n∀x (Work(x, meta) → HighIncome(x)) ::: Everyone working at Meta has a high income.\n∀x (HighIncome(x) → ¬TakeBus(x)) ::: If a person has a high income, then he/she will not take a bus to their destination.\n∀x (TakeBus(x) ∨ TakeCar(x)) ::: People will either take a bus or drive to their destination.\n∀x (Car(x) → TakeCar(x)) ::: Everyone who has a car will choose to drive to their destination.\n∀x (Student(x) → ¬TakeCar(x)) ::: No students drive to their destination.\nWork(james, meta) ∨ Car(james) ::: James has a car or works at Meta.\nConclusion:\n(TakeCar(james) ∨ Student(james)) → (HighIncome(james)"
    ]
  },
  {
    "id": "FOLIO_train_72",
    "context": "Students either go to the park or go to the movies. No student who enjoys nature has free time during the weekend. All students who go to the movies enjoy nature. All students who do not have class during the weekend have free time during the weekend. All students not in summer camp do not have class during the weekend. James does not have class during the weekend.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James is in summer camp.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nStudent(x) ::: x is a student.\nGo(x, y) ::: x goes to y.\nEnjoy(x, y) ::: x enjoys y.\nFreeTime(x) ::: x has free time during the weekend.\nClass(x) ::: x has class during the weekend.\nSummerCamp(x) ::: x is in summer camp.\nPremises:\n∀x (Student(x) → (Go(x, park) ∨ Go(x, movies))) ::: Students either go to the park or go to the movies.\n∀x (Student(x) ∧ Enjoy(x, nature)) → ¬FreeTime(x) ::: No student who enjoys nature has free time during the weekend.\n∀x (Student(x) ∧ Go(x, movies)) → Enjoy(x, nature) ::: All students who go to the movies enjoy nature.\n∀x (Student(x) ∧ ¬Class(x)) → FreeTime(x) ::: All students who do not have class during the weekend have free time during the weekend.\n∀x (Student(x) ∧ ¬SummerCamp(x)) → ¬Class(x) ::: All students not in summer camp do not have class during the weekend.\nStudent(james) ∧"
    ]
  },
  {
    "id": "FOLIO_train_73",
    "context": "Students either go to the park or go to the movies. No student who enjoys nature has free time during the weekend. All students who go to the movies enjoy nature. All students who do not have class during the weekend have free time during the weekend. All students not in summer camp do not have class during the weekend. James does not have class during the weekend.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James goes to the park or is in summer camp.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nStudent(x) ::: x is a student.\nGo(x, y) ::: x goes to y.\nEnjoy(x, y) ::: x enjoys y.\nFreeTime(x) ::: x has free time during the weekend.\nClass(x) ::: x has class during the weekend.\nSummerCamp(x) ::: x is in summer camp.\nPremises:\n∀x (Student(x) → (Go(x, park) ∨ Go(x, movies))) ::: Students either go to the park or go to the movies.\n∀x (Student(x) ∧ Enjoy(x, nature) → ¬FreeTime(x)) ::: No student who enjoys nature has free time during the weekend.\n∀x (Student(x) ∧ Go(x, movies) → Enjoy(x, nature)) ::: All students who go to the movies enjoy nature.\n∀x (Student(x) ∧ ¬Class(x) → FreeTime(x)) ::: All students who do not have class during the weekend have free time during the weekend.\n∀x (Student(x) ∧ ¬SummerCamp(x) → ¬Class(x)) ::: All students not in summer camp do not have class during the weekend.\nStudent(james) ∧"
    ]
  },
  {
    "id": "FOLIO_train_74",
    "context": "No television stars are certified public accountants. All certified public accountants have good business sense.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? All television stars have good business sense.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTelevisionStar(x) ::: x is a television star.\nCertifiedPublicAccountant(x) ::: x is a certified public accountant.\nGoodBusinessSense(x) ::: x has good business sense.\nPremises:\n¬∀x (TelevisionStar(x) → CertifiedPublicAccountant(x)) ::: No television stars are certified public accountants.\n∀x (CertifiedPublicAccountant(x) → GoodBusinessSense(x)) ::: All certified public accountants have good business sense.\nConclusion:\n∀x (TelevisionStar(x) → GoodBusinessSense(x)) ::: All television stars have good business sense.\n------\nProblem:\nAll people who are not vegetarians eat meat. All people who eat meat are carnivores.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? All vegetarians are carnivores.\n###\nPredicates:\nVegetarian(x) ::: x is a vegetarian.\nEat(x, y) ::: x eats y.\nMeat(y) ::: y is meat.\nCarnivore(x) ::: x is a carnivore.\nPremises:\n∀x (¬Vegetarian(x) → Eat(x, meat)) ::: All people who"
    ]
  },
  {
    "id": "FOLIO_train_75",
    "context": "Some students good at math are good at chemistry. All students good at chemistry enjoy conducting experiments. All students that enjoy conducting experiments are good at planning. No student good at planning is awarded the Dean's List. James is either good at chemistry and awarded the Dean's List, or neither good at chemistry nor awarded the Dean's List.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James is good at planning.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nStudent(x) ::: x is a student.\nGoodAt(x, y) ::: x is good at y.\nEnjoy(x, y) ::: x enjoys y.\nPlan(x) ::: x is good at planning.\nAwarded(x, y) ::: x is awarded y.\nDeanList ::: x is awarded the Dean's List.\nPremises:\n∀x (GoodAt(x, math) → GoodAt(x, chemistry)) ::: Some students good at math are good at chemistry.\n∀x (GoodAt(x, chemistry) → Enjoy(x, conductingExperiments)) ::: All students good at chemistry enjoy conducting experiments.\n∀x (Enjoy(x, conductingExperiments) → GoodAt(x, planning)) ::: All students that enjoy conducting experiments are good at planning.\n∀x (GoodAt(x, planning) → ¬Awarded(x, deanList)) ::: No student good at planning is awarded the Dean's List.\n(GoodAt(james, chemistry) ∧ Awarded(james, deanList)) ⊕ ¬(GoodAt(james, chemistry) ∨ Awarded(james, deanList)) ::: James is either good at chemistry and awarded the Dean's List, or neither good at chemistry nor awarded the Dean's List"
    ]
  },
  {
    "id": "FOLIO_train_76",
    "context": "Some students good at math are good at chemistry. All students good at chemistry enjoy conducting experiments. All students that enjoy conducting experiments are good at planning. No student good at planning is awarded the Dean's List. James is either good at chemistry and awarded the Dean's List, or neither good at chemistry nor awarded the Dean's List.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James is either good at planning or good at math.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nStudent(x) ::: x is a student.\nGoodAt(x, y) ::: x is good at y.\nEnjoy(x, y) ::: x enjoys y.\nPlan(x) ::: x is good at planning.\nAwarded(x, y) ::: x is awarded y.\nPremises:\n∀x (GoodAt(x, math) → GoodAt(x, chemistry)) ::: Some students good at math are good at chemistry.\n∀x (GoodAt(x, chemistry) → Enjoy(x, conductingExperiments)) ::: All students good at chemistry enjoy conducting experiments.\n∀x (Enjoy(x, conductingExperiments) → GoodAt(x, planning)) ::: All students that enjoy conducting experiments are good at planning.\n∀x (GoodAt(x, planning) → ¬Awarded(x, deansList)) ::: No student good at planning is awarded the Dean's List.\n(GoodAt(james, chemistry) ∧ Awarded(james, deansList)) ⊕ ¬(GoodAt(james, chemistry) ∨ Awarded(james, deansList)) ::: James is either good at chemistry and awarded the Dean's List, or neither good at chemistry nor awarded the Dean's List.\nConclusion:\nGoodAt(james, math)"
    ]
  },
  {
    "id": "FOLIO_train_77",
    "context": "Some students good at math are good at chemistry. All students good at chemistry enjoy conducting experiments. All students that enjoy conducting experiments are good at planning. No student good at planning is awarded the Dean's List. James is either good at chemistry and awarded the Dean's List, or neither good at chemistry nor awarded the Dean's List.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James is either good at chemistry or good at math.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nStudent(x) ::: x is a student.\nGoodAt(x, y) ::: x is good at y.\nEnjoy(x, y) ::: x enjoys y.\nPlan(x) ::: x is good at planning.\nAward(x) ::: x is awarded the Dean's List.\nPremises:\n∀x (GoodAt(x, math) → GoodAt(x, chemistry)) ::: Some students good at math are good at chemistry.\n∀x (GoodAt(x, chemistry) → Enjoy(x, conductingExperiments)) ::: All students good at chemistry enjoy conducting experiments.\n∀x (Enjoy(x, conductingExperiments) → GoodAt(x, planning)) ::: All students that enjoy conducting experiments are good at planning.\n∀x (GoodAt(x, planning) → ¬Award(x)) ::: No student good at planning is awarded the Dean's List.\n(GoodAt(james, chemistry) ∧ Award(james)) ⊕ ¬(GoodAt(james, chemistry) ∨ Award(james)) ::: James is either good at chemistry and awarded the Dean's List, or neither good at chemistry nor awarded the Dean's List.\nConclusion:\nGoodAt(james, math) ⊕ GoodAt(james, chemistry) ::: James"
    ]
  },
  {
    "id": "FOLIO_train_78",
    "context": "Some students good at math are good at chemistry. All students good at chemistry enjoy conducting experiments. All students that enjoy conducting experiments are good at planning. No student good at planning is awarded the Dean's List. James is either good at chemistry and awarded the Dean's List, or neither good at chemistry nor awarded the Dean's List.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If James is good at Chemistry or gets awarded the Dean's List, then James is either good at planning or good at math.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nStudent(x) ::: x is a student.\nGoodAt(x, y) ::: x is good at y.\nEnjoy(x, y) ::: x enjoys y.\nPlan(x) ::: x is good at planning.\nAwarded(x) ::: x is awarded the Dean's List.\nPremises:\n∀x (GoodAt(x, math) → GoodAt(x, chemistry)) ::: Some students good at math are good at chemistry.\n∀x (GoodAt(x, chemistry) → Enjoy(x, conductingExperiments)) ::: All students good at chemistry enjoy conducting experiments.\n∀x (Enjoy(x, conductingExperiments) → GoodAt(x, planning)) ::: All students that enjoy conducting experiments are good at planning.\n¬∀x (GoodAt(x, planning) → Awarded(x)) ::: No student good at planning is awarded the Dean's List.\n(GoodAt(james, chemistry) ∨ Awarded(james)) ⊕ ¬(GoodAt(james, chemistry) ∧ Awarded(james)) ::: James is either good at chemistry and awarded the Dean's List, or neither good at chemistry nor awarded the Dean's List.\nConclusion:\n(GoodAt(james, chemistry) → (GoodAt(james, planning) �"
    ]
  },
  {
    "id": "FOLIO_train_79",
    "context": "If a Leetcode problem is at the easy level, then its AC rate is lower than 20 percent. All Leetcode problems that are recommended to novices are easy. A Leetode problem is either easy or hard. Leetcode problems that are starred by more than 1 thousand users are hard. 2Sum is recommended to novices. 4Sum is starred by more than 1 thousand users.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? 2Sum is a Leetcode problem with an easy level.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEasy(x) ::: x is a Leetcode problem with an easy level.\nHard(x) ::: x is a Leetcode problem with a hard level.\nACRate(x) ::: x is the AC rate of a Leetcode problem.\nRecommended(x) ::: x is a Leetcode problem that is recommended to novices.\nStarred(x) ::: x is a Leetcode problem that is starred by more than 1 thousand users.\nPremises:\nEasy(x) → ACRate(x) < 20 percent ::: If a Leetcode problem is at the easy level, then its AC rate is lower than 20 percent.\nRecommended(x) ∧ Easy(x) ::: All Leetcode problems that are recommended to novices are easy.\nEasy(x) ∨ Hard(x) ::: A Leetcode problem is either easy or hard.\nStarred(x) ∧ Hard(x) ::: Leetcode problems that are starred by more than 1 thousand users are hard.\nRecommended(twoSum) ::: 2Sum is recommended to novices.\nStarred(fourSum) ::: 4Sum is starred by more than 1 thousand users.\nConclusion:\nEasy(twoSum) ::: 2Sum is a Leetcode problem with an"
    ]
  },
  {
    "id": "FOLIO_train_80",
    "context": "If a Leetcode problem is at the easy level, then its AC rate is lower than 20 percent. All Leetcode problems that are recommended to novices are easy. A Leetode problem is either easy or hard. Leetcode problems that are starred by more than 1 thousand users are hard. 2Sum is recommended to novices. 4Sum is starred by more than 1 thousand users.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? 4Sum is a Leetcode problem recommended to the novice.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEasy(x) ::: x is a Leetcode problem at the easy level.\nHard(x) ::: x is a Leetcode problem at the hard level.\nACRate(x) ::: x is the AC rate of a Leetcode problem.\nRecommended(x) ::: x is a Leetcode problem recommended to novices.\nStarred(x) ::: x is a Leetcode problem starred by more than 1 thousand users.\nPremises:\nEasy(x) → ACRate(x) < 20 ::: If a Leetcode problem is at the easy level, then its AC rate is lower than 20 percent.\nRecommended(x) ∧ Easy(x) ::: All Leetcode problems that are recommended to novices are easy.\nEasy(x) ∨ Hard(x) ::: A Leetcode problem is either easy or hard.\nStarred(x) ∧ Hard(x) ::: Leetcode problems that are starred by more than 1 thousand users are hard.\nRecommended(2sum) ::: 2Sum is recommended to novices.\nStarred(4sum) ::: 4Sum is starred by more than 1 thousand users.\nConclusion:\nRecommended(4sum) ::: 4Sum is a Leetcode problem recommended to the novice.\n------"
    ]
  },
  {
    "id": "FOLIO_train_81",
    "context": "If a Leetcode problem is at the easy level, then its AC rate is lower than 20 percent. All Leetcode problems that are recommended to novices are easy. A Leetode problem is either easy or hard. Leetcode problems that are starred by more than 1 thousand users are hard. 2Sum is recommended to novices. 4Sum is starred by more than 1 thousand users.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? 2Sum has an AC rate higher than 20 percent.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEasy(x) ::: x is an easy Leetcode problem.\nHard(x) ::: x is a hard Leetcode problem.\nACRate(x, y) ::: x has an AC rate of y percent.\nRecommended(x, y) ::: x is recommended to y.\nStarred(x, y) ::: x is starred by y.\nPremises:\nEasy(x) → ACRate(x, y) ∧ y < 20 ::: If a Leetcode problem is at the easy level, then its AC rate is lower than 20 percent.\n∀x (Recommended(x, novice) → Easy(x)) ::: All Leetcode problems that are recommended to novices are easy.\nEasy(x) ∨ Hard(x) ::: A Leetode problem is either easy or hard.\nStarred(x, y) → Hard(x) ∧ y > 1000 ::: Leetcode problems that are starred by more than 1 thousand users are hard.\nRecommended(2Sum, novice) ::: 2Sum is recommended to novices.\nStarred(4Sum, 1000) ::: 4Sum is starred by more than 1 thousand users.\nConclusion:\nACRate(2Sum, y) ∧ y >"
    ]
  },
  {
    "id": "FOLIO_train_82",
    "context": "All rental cars cost the renter money. Whenever Sarah goes to Vermont, Sarah drives there. For someone who does not own a car to drive somewhere, they must either borrow a car or rent a car. Sarah doesn’t own a car. Sarah never borrows a car to go camping. Sarah is going to go camping in Vermont this weekend. To go camping somewhere, you must go to that place.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Sarah will spend money this weekend.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRent(x, y) ::: x rents y.\nCost(x, y) ::: x costs y.\nGo(x, y) ::: x goes to y.\nDrive(x, y) ::: x drives to y.\nCamp(x) ::: x goes camping.\nPremises:\n∀x (Rent(x, y) → Cost(x, y)) ::: All rental cars cost the renter money.\n∀x (Go(sarah, vermont) → Drive(sarah, vermont)) ::: Whenever Sarah goes to Vermont, Sarah drives there.\n∀x (¬Own(x) ∧ Drive(x, y) → (Borrow(x, y) ∨ Rent(x, y))) ::: For someone who does not own a car to drive somewhere, they must either borrow a car or rent a car.\n¬Own(sarah) ::: Sarah doesn’t own a car.\n¬Borrow(sarah, car) ::: Sarah never borrows a car to go camping.\nGo(sarah, vermont) ::: Sarah is going to go camping in Vermont this weekend.\nToGo(x, y) ::: x goes to y.\nConclusion:\nCost(sarah, money) ::: Sarah will spend money this weekend.\n------\nProblem"
    ]
  },
  {
    "id": "FOLIO_train_83",
    "context": "All people who attend weddings are getting married or have friends who are getting married. No preteens and other young children are getting married or have friends who are getting married. If people enjoy celebrating life milestone events with other people, then they attend weddings. If people are fond of large organized group functions, then they enjoy celebrating life milestone events with other people. All people who are outgoing and very spirited are fond of large organized group functions. If Carol is not both a pre-teen or other young child and attends weddings, then Carol is not getting married or has friends who are getting married.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Carol is outgoing and very spirited.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAttend(x) ::: x attends weddings.\nGettingMarried(x) ::: x is getting married.\nFriend(x, y) ::: x has friends who are y.\nEnjoy(x, y) ::: x enjoys y.\nOutgoing(x) ::: x is outgoing.\nVerySpirited(x) ::: x is very spirited.\nFond(x, y) ::: x is fond of y.\nLarge(x) ::: x is large.\nOrganized(x) ::: x is organized.\nGroup(x) ::: x is a group function.\nPremises:\n∀x (Attend(x) → (GettingMarried(x) ∨ Friend(x, GettingMarried))) ::: All people who attend weddings are getting married or have friends who are getting married.\n∀x (Preteen(x) ∨ OtherYoungChild(x) → ¬(GettingMarried(x) ∨ Friend(x, GettingMarried))) ::: No preteens and other young children are getting married or have friends who are getting married.\n∀x (Enjoy(x, Celebrate) → Attend(x)) ::: If people enjoy celebrating life milestone events with other people, then they attend weddings.\n∀x (Fond(x, LargeOrgan"
    ]
  },
  {
    "id": "FOLIO_train_84",
    "context": "All people who attend weddings are getting married or have friends who are getting married. No preteens and other young children are getting married or have friends who are getting married. If people enjoy celebrating life milestone events with other people, then they attend weddings. If people are fond of large organized group functions, then they enjoy celebrating life milestone events with other people. All people who are outgoing and very spirited are fond of large organized group functions. If Carol is not both a pre-teen or other young child and attends weddings, then Carol is not getting married or has friends who are getting married.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Carol is either a preteen or other young child.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAttend(x) ::: x attends weddings.\nGettingMarried(x) ::: x is getting married.\nFriend(x, y) ::: x has friends who are y.\nEnjoy(x, y) ::: x enjoys y.\nOutgoing(x) ::: x is outgoing.\nSpirited(x) ::: x is very spirited.\nFond(x, y) ::: x is fond of y.\nPremises:\n∀x (Attend(x) → (GettingMarried(x) ∨ Friend(x, GettingMarried))) ::: All people who attend weddings are getting married or have friends who are getting married.\n∀x (Preteen(x) ∨ OtherYoungChild(x) → ¬(GettingMarried(x) ∨ Friend(x, GettingMarried))) ::: No preteens and other young children are getting married or have friends who are getting married.\n∀x (Enjoy(x, Celebrate) → Attend(x)) ::: If people enjoy celebrating life milestone events with other people, then they attend weddings.\n∀x (Fond(x, LargeOrganizedGroup) → Enjoy(x, Celebrate)) ::: If people are fond of large organized group functions, then they enjoy celebrating life milestone events with other people."
    ]
  },
  {
    "id": "FOLIO_train_85",
    "context": "All people who attend weddings are getting married or have friends who are getting married. No preteens and other young children are getting married or have friends who are getting married. If people enjoy celebrating life milestone events with other people, then they attend weddings. If people are fond of large organized group functions, then they enjoy celebrating life milestone events with other people. All people who are outgoing and very spirited are fond of large organized group functions. If Carol is not both a pre-teen or other young child and attends weddings, then Carol is not getting married or has friends who are getting married.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Carol neither enjoys celebrating life milestone events with other people nor is outgoing and very spirited.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAttend(x) ::: x attends weddings.\nGettingMarried(x) ::: x is getting married.\nFriend(x, y) ::: x has friends who are y.\nEnjoy(x, y) ::: x enjoys y.\nOutgoing(x) ::: x is outgoing.\nSpirited(x) ::: x is very spirited.\nFond(x, y) ::: x is fond of y.\nPremises:\n∀x (Attend(x) → (GettingMarried(x) ∨ Friend(x, GettingMarried))) ::: All people who attend weddings are getting married or have friends who are getting married.\n∀x (Preteen(x) ∨ OtherYoungChild(x) → ¬(GettingMarried(x) ∨ Friend(x, GettingMarried))) ::: No preteens and other young children are getting married or have friends who are getting married.\n∀x (Enjoy(x, Celebrate) → Attend(x)) ::: If people enjoy celebrating life milestone events with other people, then they attend weddings.\n∀x (Fond(x, LargeOrganizedGroup) → Enjoy(x, Celebrate)) ::: If people are fond of large organized group functions, then they enjoy celebrating life milestone events with other people."
    ]
  },
  {
    "id": "FOLIO_train_86",
    "context": "All Republicans are anti-abortion. Either Republicans or Democrats. No Democrats are conservative. Either conservative or liberal. A U.S government official is either conservative or a Republican.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A U.S government official is a Democrat.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRepublican(x) ::: x is a Republican.\nDemocrat(x) ::: x is a Democrat.\nAntiAbortion(x) ::: x is anti-abortion.\nConservative(x) ::: x is conservative.\nLiberal(x) ::: x is liberal.\nGovernmentOfficial(x) ::: x is a U.S government official.\nPremises:\n∀x (Republican(x) → AntiAbortion(x)) ::: All Republicans are anti-abortion.\n∀x (Republican(x) ∨ Democrat(x)) ::: Either Republicans or Democrats.\n∀x (Democrat(x) → ¬Conservative(x)) ::: No Democrats are conservative.\n∀x (Conservative(x) ∨ Liberal(x)) ::: Either conservative or liberal.\n∀x (GovernmentOfficial(x) → (Conservative(x) ∨ Republican(x))) ::: A U.S government official is either conservative or a Republican.\nConclusion:\nDemocrat(governmentOfficial) ::: A U.S government official is a Democrat.\n------\nProblem:\nAll people who are not vegetarians eat meat. All vegetarians are vegans. All vegans are vegetarians.\nQuestion:\nBased on the"
    ]
  },
  {
    "id": "FOLIO_train_87",
    "context": "All Republicans are anti-abortion. Either Republicans or Democrats. No Democrats are conservative. Either conservative or liberal. A U.S government official is either conservative or a Republican.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A U.S government official is anti-abortion and a liberal.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRepublican(x) ::: x is a Republican.\nDemocrat(x) ::: x is a Democrat.\nAntiAbortion(x) ::: x is anti-abortion.\nConservative(x) ::: x is conservative.\nLiberal(x) ::: x is liberal.\nGovernmentOfficial(x) ::: x is a U.S government official.\nPremises:\n∀x (Republican(x) → AntiAbortion(x)) ::: All Republicans are anti-abortion.\n∀x (Republican(x) ∨ Democrat(x)) ::: Either Republicans or Democrats.\n∀x (Democrat(x) → ¬Conservative(x)) ::: No Democrats are conservative.\n∀x (Conservative(x) ∨ Liberal(x)) ::: Either conservative or liberal.\n∀x (GovernmentOfficial(x) → (Conservative(x) ∨ Republican(x))) ::: A U.S government official is either conservative or a Republican.\nConclusion:\nAntiAbortion(x) ∧ Liberal(x) ::: A U.S government official is anti-abortion and a liberal.\n------\nProblem:\nAll people who are not vegetarians eat meat. All vegetarians are vegans. All vegans"
    ]
  },
  {
    "id": "FOLIO_train_88",
    "context": "All Republicans are anti-abortion. Either Republicans or Democrats. No Democrats are conservative. Either conservative or liberal. A U.S government official is either conservative or a Republican.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A U.S government official is either anti-abortion or a liberal.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRepublican(x) ::: x is a Republican.\nDemocrat(x) ::: x is a Democrat.\nAntiAbortion(x) ::: x is anti-abortion.\nConservative(x) ::: x is conservative.\nLiberal(x) ::: x is liberal.\nGovernmentOfficial(x) ::: x is a U.S government official.\nPremises:\n∀x (Republican(x) → AntiAbortion(x)) ::: All Republicans are anti-abortion.\n∀x (Republican(x) ∨ Democrat(x)) ::: Either Republicans or Democrats.\n∀x (Democrat(x) → ¬Conservative(x)) ::: No Democrats are conservative.\n∀x (Conservative(x) ∨ Liberal(x)) ::: Either conservative or liberal.\n∀x (GovernmentOfficial(x) → (Conservative(x) ∨ Republican(x))) ::: A U.S government official is either conservative or a Republican.\nConclusion:\nAntiAbortion(x) ∨ Liberal(x) ::: A U.S government official is either anti-abortion or a liberal.\n------\nProblem:\nAll people who are not vegetarians eat meat. All vegetarians are vegans. All veg"
    ]
  },
  {
    "id": "FOLIO_train_89",
    "context": "All Republicans are anti-abortion. Either Republicans or Democrats. No Democrats are conservative. Either conservative or liberal. A U.S government official is either conservative or a Republican.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If a U.S government official is not anti-abortion and a Republican, then a U.S government official is neither anti-abortion nor a liberal.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRepublican(x) ::: x is a Republican.\nDemocrat(x) ::: x is a Democrat.\nAntiAbortion(x) ::: x is anti-abortion.\nConservative(x) ::: x is conservative.\nLiberal(x) ::: x is liberal.\nU.S.GovernmentOfficial(x) ::: x is a U.S government official.\nPremises:\n∀x (Republican(x) → AntiAbortion(x)) ::: All Republicans are anti-abortion.\n∀x (Republican(x) ∨ Democrat(x)) ::: Either Republicans or Democrats.\n∀x (Democrat(x) → ¬Conservative(x)) ::: No Democrats are conservative.\n∀x (Conservative(x) ∨ Liberal(x)) ::: Either conservative or liberal.\n∀x (U.S.GovernmentOfficial(x) → (Conservative(x) ∨ Republican(x))) ::: A U.S government official is either conservative or a Republican.\nConclusion:\n¬(AntiAbortion(x) ∧ Republican(x)) → (AntiAbortion(x) ∧ Liberal(x)) ::: If a U.S government official is not anti-abortion and a Republican,"
    ]
  },
  {
    "id": "FOLIO_train_90",
    "context": "All Republicans are anti-abortion. Either Republicans or Democrats. No Democrats are conservative. Either conservative or liberal. A U.S government official is either conservative or a Republican.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If a U.S government official is anti-abortion and a liberal, then a U.S government official is either a Republican or a liberal.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRepublican(x) ::: x is a Republican.\nDemocrat(x) ::: x is a Democrat.\nAntiAbortion(x) ::: x is anti-abortion.\nConservative(x) ::: x is conservative.\nLiberal(x) ::: x is liberal.\nU.S.GovernmentOfficial(x) ::: x is a U.S government official.\nPremises:\n∀x (Republican(x) → AntiAbortion(x)) ::: All Republicans are anti-abortion.\n∀x (Republican(x) ∨ Democrat(x)) ::: Either Republicans or Democrats.\n∀x (Democrat(x) → ¬Conservative(x)) ::: No Democrats are conservative.\n∀x (Conservative(x) ∨ Liberal(x)) ::: Either conservative or liberal.\n∀x (U.S.GovernmentOfficial(x) → (Conservative(x) ∨ Republican(x))) ::: A U.S government official is either conservative or a Republican.\nConclusion:\n(AntiAbortion(u) ∧ Liberal(u)) → (Republican(u) ∨ Liberal(u)) ::: If a U.S government official is anti-abortion and a liberal, then a U.S government official is either a Republican or a liberal.\n------"
    ]
  },
  {
    "id": "FOLIO_train_91",
    "context": "All Republicans are anti-abortion. Either Republicans or Democrats. No Democrats are conservative. Either conservative or liberal. A U.S government official is either conservative or a Republican.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If a U.S government official is either a conservative or anti-abortion, then a U.S government official is either a conservative and a liberal or neither a conservative nor a liberal.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRepublican(x) ::: x is a Republican.\nDemocrat(x) ::: x is a Democrat.\nAntiAbortion(x) ::: x is anti-abortion.\nConservative(x) ::: x is conservative.\nLiberal(x) ::: x is liberal.\nU.S.GovernmentOfficial(x) ::: x is a U.S government official.\nPremises:\n∀x (Republican(x) → AntiAbortion(x)) ::: All Republicans are anti-abortion.\n∀x (Republican(x) ∨ Democrat(x)) ::: Either Republicans or Democrats.\n∀x (Democrat(x) → ¬Conservative(x)) ::: No Democrats are conservative.\n∀x (Conservative(x) ∨ Liberal(x)) ::: Either conservative or liberal.\n∀x (U.S.GovernmentOfficial(x) → (Conservative(x) ∨ Republican(x))) ::: A U.S government official is either conservative or a Republican.\nConclusion:\n(AntiAbortion(u) ∧ Republican(u)) → (Conservative(u) ∨ Liberal(u)) ::: If a U.S government official is either a conservative or anti-abortion, then a U.S government official is either a conservative and a liberal or neither"
    ]
  },
  {
    "id": "FOLIO_train_92",
    "context": "All Republicans are anti-abortion. Either Republicans or Democrats. No Democrats are conservative. Either conservative or liberal. A U.S government official is either conservative or a Republican.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If a U.S government official is either a conservative or anti-abortion, then a U.S government official is neither a Democrat or a liberal.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRepublican(x) ::: x is a Republican.\nDemocrat(x) ::: x is a Democrat.\nAntiAbortion(x) ::: x is anti-abortion.\nConservative(x) ::: x is conservative.\nLiberal(x) ::: x is liberal.\nU.S.GovernmentOfficial(x) ::: x is a U.S government official.\nPremises:\n∀x (Republican(x) → AntiAbortion(x)) ::: All Republicans are anti-abortion.\n∀x (Republican(x) ∨ Democrat(x)) ::: Either Republicans or Democrats.\n∀x (Democrat(x) → ¬Conservative(x)) ::: No Democrats are conservative.\n∀x (Conservative(x) ∨ Liberal(x)) ::: Either conservative or liberal.\n∀x (U.S.GovernmentOfficial(x) → (Conservative(x) ∨ Republican(x))) ::: A U.S government official is either conservative or a Republican.\nConclusion:\n¬∃x (U.S.GovernmentOfficial(x) ∧ (AntiAbortion(x) ∨ Republican(x))) → ¬∃x (Democrat(x) ∨ Liberal(x)) ::: If a U.S"
    ]
  },
  {
    "id": "FOLIO_train_93",
    "context": "All Republicans are anti-abortion. Either Republicans or Democrats. No Democrats are conservative. Either conservative or liberal. A U.S government official is either conservative or a Republican.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If an U.S government official is anti-abortion or a liberal, then a U.S government official is either anti-abortion or a liberal.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRepublican(x) ::: x is a Republican.\nDemocrat(x) ::: x is a Democrat.\nAntiAbortion(x) ::: x is anti-abortion.\nConservative(x) ::: x is conservative.\nLiberal(x) ::: x is liberal.\nU.S.GovernmentOfficial(x) ::: x is a U.S government official.\nPremises:\n∀x (Republican(x) → AntiAbortion(x)) ::: All Republicans are anti-abortion.\n∀x (Republican(x) ∨ Democrat(x)) ::: Either Republicans or Democrats.\n∀x (Democrat(x) → ¬Conservative(x)) ::: No Democrats are conservative.\n∀x (Conservative(x) ∨ Liberal(x)) ::: Either conservative or liberal.\n∀x (U.S.GovernmentOfficial(x) → (Conservative(x) ∨ Republican(x))) ::: A U.S government official is either conservative or a Republican.\nConclusion:\n(AntiAbortion(x) ∨ Liberal(x)) → (AntiAbortion(x) ∨ Liberal(x)) ::: If an U.S government official is anti-abortion or a liberal, then a U.S government official is either anti-abortion or a liberal"
    ]
  },
  {
    "id": "FOLIO_train_94",
    "context": "All advocates of high tariff rates are Republicans. Some Republicans are not conservatives.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Some conservatives are advocates of high tariff rates.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAdvocate(x, y) ::: x is an advocate of y.\nRepublican(x) ::: x is a Republican.\nConservative(x) ::: x is a conservative.\nPremises:\n∀x (Advocate(x, highTariffRates) → Republican(x)) ::: All advocates of high tariff rates are Republicans.\n∃x (Republican(x) ∧ ¬Conservative(x)) ::: Some Republicans are not conservatives.\nConclusion:\n∃x (Conservative(x) ∧ Advocate(x, highTariffRates)) ::: Some conservatives are advocates of high tariff rates.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being"
    ]
  },
  {
    "id": "FOLIO_train_95",
    "context": "No athletes are slow runners. All professional basketball players are athletes. All NBA players are professional basketball players. All Knicks players are NBA players. Jim is either not a professional basketball player or not a slow runner.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jim is a Knicks player.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAthlete(x) ::: x is an athlete.\nSlowRunner(x) ::: x is a slow runner.\nProfessionalBasketballPlayer(x) ::: x is a professional basketball player.\nNBAPlayer(x) ::: x is an NBA player.\nKnicksPlayer(x) ::: x is a Knicks player.\nPremises:\n¬∀x (Athlete(x) → SlowRunner(x)) ::: No athletes are slow runners.\n∀x (ProfessionalBasketballPlayer(x) → Athlete(x)) ::: All professional basketball players are athletes.\n∀x (NBAPlayer(x) → ProfessionalBasketballPlayer(x)) ::: All NBA players are professional basketball players.\n∀x (KnicksPlayer(x) → NBAPlayer(x)) ::: All Knicks players are NBA players.\nJim ⊕ ¬ProfessionalBasketballPlayer(jim) ∧ ¬SlowRunner(jim) ::: Jim is either not a professional basketball player or not a slow runner.\nConclusion:\nKnicksPlayer(jim) ::: Jim is a Knicks player.\n------\nProblem:\nAll people who are not students are either not musicians or not artists. All musicians are artists. All artists are people. All people who are not musicians are not artists.\nQuestion:\nBased on the above information, is"
    ]
  },
  {
    "id": "FOLIO_train_96",
    "context": "No athletes are slow runners. All professional basketball players are athletes. All NBA players are professional basketball players. All Knicks players are NBA players. Jim is either not a professional basketball player or not a slow runner.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jim is not a Knicks player.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAthlete(x) ::: x is an athlete.\nSlowRunner(x) ::: x is a slow runner.\nProfessionalBasketballPlayer(x) ::: x is a professional basketball player.\nNBAPlayer(x) ::: x is an NBA player.\nKnicksPlayer(x) ::: x is a Knicks player.\nPremises:\n¬∀x (Athlete(x) → SlowRunner(x)) ::: No athletes are slow runners.\n∀x (ProfessionalBasketballPlayer(x) → Athlete(x)) ::: All professional basketball players are athletes.\n∀x (NBAPlayer(x) → ProfessionalBasketballPlayer(x)) ::: All NBA players are professional basketball players.\n∀x (KnicksPlayer(x) → NBAPlayer(x)) ::: All Knicks players are NBA players.\nJim ⊕ ¬ProfessionalBasketballPlayer(jim) ∧ ¬SlowRunner(jim) ::: Jim is either not a professional basketball player or not a slow runner.\nConclusion:\n¬KnicksPlayer(jim) ::: Jim is not a Knicks player.\n------\nProblem:\nAll people who are not students are either not musicians or not artists. All musicians are either artists or not artists. All artists are either musicians or not musicians. All people who are not musicians are either not artists or"
    ]
  },
  {
    "id": "FOLIO_train_97",
    "context": "No athletes are slow runners. All professional basketball players are athletes. All NBA players are professional basketball players. All Knicks players are NBA players. Jim is either not a professional basketball player or not a slow runner.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jim is an athlete.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAthlete(x) ::: x is an athlete.\nSlowRunner(x) ::: x is a slow runner.\nProfessionalBasketballPlayer(x) ::: x is a professional basketball player.\nNBAPlayer(x) ::: x is an NBA player.\nKnicksPlayer(x) ::: x is a Knicks player.\nPremises:\n¬∀x (Athlete(x) → SlowRunner(x)) ::: No athletes are slow runners.\n∀x (ProfessionalBasketballPlayer(x) → Athlete(x)) ::: All professional basketball players are athletes.\n∀x (NBAPlayer(x) → ProfessionalBasketballPlayer(x)) ::: All NBA players are professional basketball players.\n∀x (KnicksPlayer(x) → NBAPlayer(x)) ::: All Knicks players are NBA players.\nJim ⊕ ¬ProfessionalBasketballPlayer(jim) ∧ ¬SlowRunner(jim) ::: Jim is either not a professional basketball player or not a slow runner.\nConclusion:\nAthlete(jim) ::: Jim is an athlete.\n------\nProblem:\nAll people who are not students are either not musicians or not artists. All musicians are artists. All artists are people. All people who are not musicians are not artists.\nQuestion:\nBased on the above information, is the following"
    ]
  },
  {
    "id": "FOLIO_train_98",
    "context": "All kids love animals. All toddlers are kids. If someone loves animals, then they are not bad. All pirates are bad. If Nancy is not a pirate, then Nancy loves animals. If Nancy is not a toddler, then Nancy is bad.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Nancy is a pirate.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nKid(x) ::: x is a kid.\nToddler(x) ::: x is a toddler.\nLove(x, y) ::: x loves y.\nBad(x) ::: x is bad.\nPirate(x) ::: x is a pirate.\nPremises:\n∀x (Kid(x) → Love(x, animals)) ::: All kids love animals.\n∀x (Toddler(x) → Kid(x)) ::: All toddlers are kids.\n∀x (Love(x, animals) → ¬Bad(x)) ::: If someone loves animals, then they are not bad.\n∀x (Pirate(x) → Bad(x)) ::: All pirates are bad.\nNancy ⊕ Pirate(nancy) ::: If Nancy is not a pirate, then Nancy loves animals.\nNancy ⊕ Toddler(nancy) ::: If Nancy is not a toddler, then Nancy is bad.\nConclusion:\nPirate(nancy) ::: Nancy is a pirate.\n------\nProblem:\nAll people who are not students are either teachers or professors. All teachers are either professors or lecturers. All professors are either lecturers or researchers. All researchers are either professors or lecturers. All lecturers are either professors or researchers. All students are either professors or researchers.\nQuestion:\nBased"
    ]
  },
  {
    "id": "FOLIO_train_99",
    "context": "All kids love animals. All toddlers are kids. If someone loves animals, then they are not bad. All pirates are bad. If Nancy is not a pirate, then Nancy loves animals. If Nancy is not a toddler, then Nancy is bad.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Nancy is not a pirate or a toddler.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nKid(x) ::: x is a kid.\nToddler(x) ::: x is a toddler.\nLove(x, y) ::: x loves y.\nBad(x) ::: x is bad.\nPirate(x) ::: x is a pirate.\nPremises:\n∀x (Kid(x) → Love(x, animals)) ::: All kids love animals.\n∀x (Toddler(x) → Kid(x)) ::: All toddlers are kids.\n∀x (Love(x, animals) → ¬Bad(x)) ::: If someone loves animals, then they are not bad.\n∀x (Pirate(x) → Bad(x)) ::: All pirates are bad.\nNancy ⊕ Pirate(nancy) ::: If Nancy is not a pirate, then Nancy loves animals.\nNancy ⊕ Toddler(nancy) ::: If Nancy is not a toddler, then Nancy is bad.\nConclusion:\nNancy ⊕ Pirate(nancy) ∧ Nancy ⊕ Toddler(nancy) ::: Nancy is not a pirate or a toddler.\n------\nProblem:\nAll people who are not students are either teachers or professors. All teachers are either professors or lecturers. All professors are either lecturers or researchers. All researchers are either professors or lect"
    ]
  },
  {
    "id": "FOLIO_train_100",
    "context": "All kids love animals. All toddlers are kids. If someone loves animals, then they are not bad. All pirates are bad. If Nancy is not a pirate, then Nancy loves animals. If Nancy is not a toddler, then Nancy is bad.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Nancy is not a pirate or a toddler, then she loves animals and is a kid.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nKid(x) ::: x is a kid.\nToddler(x) ::: x is a toddler.\nPirate(x) ::: x is a pirate.\nLove(x, y) ::: x loves y.\nBad(x) ::: x is bad.\nPremises:\n∀x (Kid(x) → Love(x, animals)) ::: All kids love animals.\n∀x (Toddler(x) → Kid(x)) ::: All toddlers are kids.\n∀x (Love(x, animals) → ¬Bad(x)) ::: If someone loves animals, then they are not bad.\n∀x (Pirate(x) → Bad(x)) ::: All pirates are bad.\nNancy ⊕ Pirate(nancy) ::: If Nancy is not a pirate, then Nancy loves animals.\nNancy ⊕ Toddler(nancy) ::: If Nancy is not a toddler, then Nancy is bad.\nConclusion:\n(Nancy ⊕ Pirate(nancy)) ∧ (Nancy ⊕ Toddler(nancy)) → (Love(nancy, animals) ∧ Kid(nancy)) ::: If Nancy is not a pirate or a toddler, then she loves animals and is a kid.\n------"
    ]
  },
  {
    "id": "FOLIO_train_101",
    "context": "Lana Wilson directed After Tiller, The Departure, and Miss Americana. If a film is directedy by a person, the person is a filmmaker. After Tiller is a documentary. The documentary is a type of films. Lana Wilson is from Kirkland. Kirkland is a US city. If a person is from a city in a country, the person is from the country. After Tiller is nominated for the Independent Spirit Award for Best Documentary.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Lana Wilson is a US filmmaker.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFilmmaker(x) ::: x is a filmmaker.\nFilm(x) ::: x is a film.\nDirect(x, y) ::: x is directed by y.\nDocumentary(x) ::: x is a documentary.\nType(x, y) ::: x is a type of y.\nNominate(x, y) ::: x is nominated for y.\nFrom(x, y) ::: x is from y.\nCity(x) ::: x is a city.\nCountry(x) ::: x is a country.\nPremises:\nDirect(lana, afterTiller) ∧ Direct(lana, theDeparture) ∧ Direct(lana, missAmericana) ::: Lana Wilson directed After Tiller, The Departure, and Miss Americana.\n∀x (Direct(x, y) → Filmmaker(x)) ::: If a film is directedy by a person, the person is a filmmaker.\nDocumentary(afterTiller) ∧ Type(afterTiller, films) ::: After Tiller is a documentary.\nType(documentary, films) ::: The documentary is a type of films.\nFrom(lana, kirkland) ∧ City(kirkland) ∧ Country(US) ∧ From(kirkland, US) ::: L"
    ]
  },
  {
    "id": "FOLIO_train_102",
    "context": "Lana Wilson directed After Tiller, The Departure, and Miss Americana. If a film is directedy by a person, the person is a filmmaker. After Tiller is a documentary. The documentary is a type of films. Lana Wilson is from Kirkland. Kirkland is a US city. If a person is from a city in a country, the person is from the country. After Tiller is nominated for the Independent Spirit Award for Best Documentary.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Miss Americana is not directed by a filmmaker from Kirkland.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFilm(x) ::: x is a film.\nDocumentary(x) ::: x is a documentary.\nFilmmaker(x) ::: x is a filmmaker.\nDirect(x, y) ::: x is directed by y.\nNominate(x, y) ::: x is nominated for y.\nFrom(x, y) ::: x is from y.\nCity(x) ::: x is a city.\nCountry(x) ::: x is a country.\nPremises:\nFilm(afterTiller) ∧ Film(theDeparture) ∧ Film(missAmericana) ∧ Direct(lanaWilson, afterTiller) ∧ Direct(lanaWilson, theDeparture) ∧ Direct(lanaWilson, missAmericana) ∧ Documentary(afterTiller) ∧ Documentary(theDeparture) ∧ Documentary(missAmericana) ∧ Filmmaker(lanaWilson) ∧ From(lanaWilson, kirkland) ∧ City(kirkland) ∧ Country(US) ∧ From(lanaWilson, US) ∧ Nominate(afterTiller, independentSpiritAwardForBestDocumentary)\nConclusion:\n¬"
    ]
  },
  {
    "id": "FOLIO_train_103",
    "context": "Lana Wilson directed After Tiller, The Departure, and Miss Americana. If a film is directedy by a person, the person is a filmmaker. After Tiller is a documentary. The documentary is a type of films. Lana Wilson is from Kirkland. Kirkland is a US city. If a person is from a city in a country, the person is from the country. After Tiller is nominated for the Independent Spirit Award for Best Documentary.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Lana Wilson has won the Independent Spirit Award.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFilm(x) ::: x is a film.\nDocumentary(x) ::: x is a documentary.\nFilmmaker(x) ::: x is a filmmaker.\nDirect(x, y) ::: x directed y.\nNominate(x, y) ::: x is nominated for y.\nFrom(x, y) ::: x is from y.\nCity(x) ::: x is a city.\nCountry(x) ::: x is a country.\nPremises:\nDirect(lana, afterTiller) ∧ Direct(lana, theDeparture) ∧ Direct(lana, missAmericana) ::: Lana Wilson directed After Tiller, The Departure, and Miss Americana.\n∀x (Direct(x, y) → Filmmaker(x)) ::: If a film is directedy by a person, the person is a filmmaker.\nDocumentary(afterTiller) ∧ Documentary(theDeparture) ∧ Documentary(missAmericana) ::: After Tiller is a documentary.\nDocumentary(afterTiller) ∧ Documentary(theDeparture) ∧ Documentary(missAmericana) ::: The documentary is a type of films.\nFrom(lana, kirkland) ∧ City(kirkland) ∧ Country(US"
    ]
  },
  {
    "id": "FOLIO_train_104",
    "context": "All bears in zoos are not wild. Some bears are in zoos.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Not all bears are wild.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBear(x) ::: x is a bear.\nWild(x) ::: x is a wild animal.\nZoo(x) ::: x is a zoo.\nIn(x, y) ::: x is in y.\nPremises:\n∀x (Bear(x) → ¬Wild(x)) ::: All bears in zoos are not wild.\n∃x (Bear(x) ∧ In(x, zoo)) ::: Some bears are in zoos.\nConclusion:\n¬∀x (Bear(x) → Wild(x)) ::: Not all bears are wild.\n------\nProblem:\nAll people who are not students are either teachers or professors. Some people are not students.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? All people are either teachers or professors.\n###\nPredicates:\nStudent(x) ::: x is a student.\nTeacher(x) ::: x is a teacher.\nProfessor(x) ::: x is a professor.\nPremises:\n∀x (¬Student(x) → (Teacher(x) ∨ Professor(x))) ::: All people who are not students are either teachers or professors.\n∃x ¬Student(x) ::: Some people are not"
    ]
  },
  {
    "id": "FOLIO_train_105",
    "context": "If a person is the leader of a country for life, that person is in a monarchy. Leaders are either a king or a queen. Queens are female. Kings are male. Elizabeth is a queen. Elizabeth is a leader",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Elizabeth is a king.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLeader(x) ::: x is a leader.\nCountry(x) ::: x is a country.\nLife(x) ::: x is for life.\nMonarchy(x) ::: x is a monarchy.\nKing(x) ::: x is a king.\nQueen(x) ::: x is a queen.\nFemale(x) ::: x is female.\nMale(x) ::: x is male.\nPremises:\n∀x (Leader(x) → (King(x) ∨ Queen(x))) ::: Leaders are either a king or a queen.\n∀x (Queen(x) → Female(x)) ::: Queens are female.\n∀x (King(x) → Male(x)) ::: Kings are male.\n∃x (Leader(x) ∧ Country(x) ∧ Life(x) ∧ Monarchy(x)) ::: If a person is the leader of a country for life, that person is in a monarchy.\nElizabeth(queen) ∧ Leader(queen) ::: Elizabeth is a queen.\nElizabeth(queen) ∧ Leader(queen) ::: Elizabeth is a leader.\nConclusion:\nKing(elizabeth) ::: Elizabeth is a king.\n------\nProblem:"
    ]
  },
  {
    "id": "FOLIO_train_106",
    "context": "If a person is the leader of a country for life, that person is in a monarchy. Leaders are either a king or a queen. Queens are female. Kings are male. Elizabeth is a queen. Elizabeth is a leader",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Elizabeth is in a monarchy.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLeader(x) ::: x is a leader.\nCountry(x) ::: x is a country.\nLife(x) ::: x is for life.\nMonarchy(x) ::: x is a monarchy.\nKing(x) ::: x is a king.\nQueen(x) ::: x is a queen.\nFemale(x) ::: x is female.\nMale(x) ::: x is male.\nPremises:\n∀x (Leader(x) → (King(x) ∨ Queen(x))) ::: Leaders are either a king or a queen.\n∀x (Queen(x) → Female(x)) ::: Queens are female.\n∀x (King(x) → Male(x)) ::: Kings are male.\n∃x (Leader(x) ∧ Country(x) ∧ Life(x)) ::: Elizabeth is a leader.\n∃x (Leader(x) ∧ Country(x) ∧ Life(x) ∧ Queen(x)) ::: Elizabeth is a queen.\nConclusion:\nMonarchy(elizabeth) ::: Elizabeth is in a monarchy.\n------\nProblem:\nIf a person is a student, then that person is a person who is studying. A person who is studying is a person who"
    ]
  },
  {
    "id": "FOLIO_train_107",
    "context": "If a person is the leader of a country for life, that person is in a monarchy. Leaders are either a king or a queen. Queens are female. Kings are male. Elizabeth is a queen. Elizabeth is a leader",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Elizabeth is a leader of a country.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLeader(x) ::: x is a leader.\nCountry(x) ::: x is a country.\nLife(x) ::: x is for life.\nMonarchy(x) ::: x is a monarchy.\nKing(x) ::: x is a king.\nQueen(x) ::: x is a queen.\nFemale(x) ::: x is female.\nMale(x) ::: x is male.\nPremises:\n∀x (Leader(x) → (King(x) ∨ Queen(x))) ::: Leaders are either a king or a queen.\n∀x (Queen(x) → Female(x)) ::: Queens are female.\n∀x (King(x) → Male(x)) ::: Kings are male.\n∃x (Leader(x) ∧ Queen(x) ∧ Life(x) ∧ Country(x)) ::: Elizabeth is a queen.\n∃x (Leader(x) ∧ Queen(x) ∧ Life(x) ∧ Country(x)) ::: Elizabeth is a leader.\nConclusion:\n∃x (Leader(x) ∧ Country(x)) ::: Elizabeth is a leader of a country.\n------\nProblem:\nIf a person is a member"
    ]
  },
  {
    "id": "FOLIO_train_108",
    "context": "If people make their own matcha teas every morning with ceremonial-grade matcha powder, then they do not wake up late and start their schedules past noon regularly. If people live in California and attend yoga classes regularly, then they make their own matcha teas every morning with ceremonial-grade matcha powder. If people work in the entertainment industry as high-profile celebrities, then they wake up late and start their schedules past noon regularly. If people do not have regular 9-5 jobs, then they work in the entertainment industry as high-profile celebrities. All people who prefer working at home over going to the office every day do not have regular 9-5 jobs. Clay either both prefers to work at home over going to the office every day and makes his own matcha teas every morning with ceremonial-grade matcha powder, or he neither prefers to work at home over going to the office every day nor makes his own matcha teas every morning with ceremonial-grade matcha powder.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Clay does not have a regular 9-5 job.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMake(x, y) ::: x makes y every morning.\nWakeUp(x, y) ::: x wakes up at y.\nSchedule(x, y) ::: x starts his/her schedule at y.\nRegular(x, y) ::: x does y regularly.\nLive(x, y) ::: x lives in y.\nAttend(x, y) ::: x attends y regularly.\nPrefer(x, y) ::: x prefers y over z.\nWork(x, y) ::: x works in y.\nHighProfile(x) ::: x is a high-profile celebrity.\nCelebrity(x) ::: x is a celebrity.\nEntertainment(x) ::: x is in the entertainment industry.\nPremises:\n∀x (Make(x, matchaTea) → ¬WakeUp(x, noon)) ::: If people make their own matcha teas every morning with ceremonial-grade matcha powder, then they do not wake up late and start their schedules past noon regularly.\n∀x (Live(x, california) ∧ Attend(x, yogaClass) → Make(x, matchaTea)) ::: If people live in California and attend yoga classes regularly, then they make their own matcha teas every morning with ceremonial-grade matcha powder.\n∀x (Work"
    ]
  },
  {
    "id": "FOLIO_train_109",
    "context": "If people make their own matcha teas every morning with ceremonial-grade matcha powder, then they do not wake up late and start their schedules past noon regularly. If people live in California and attend yoga classes regularly, then they make their own matcha teas every morning with ceremonial-grade matcha powder. If people work in the entertainment industry as high-profile celebrities, then they wake up late and start their schedules past noon regularly. If people do not have regular 9-5 jobs, then they work in the entertainment industry as high-profile celebrities. All people who prefer working at home over going to the office every day do not have regular 9-5 jobs. Clay either both prefers to work at home over going to the office every day and makes his own matcha teas every morning with ceremonial-grade matcha powder, or he neither prefers to work at home over going to the office every day nor makes his own matcha teas every morning with ceremonial-grade matcha powder.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Clay lives in California and attends yoga classes regularly.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMake(x, y) ::: x makes y every morning.\nWakeUp(x, y) ::: x wakes up at y.\nStart(x, y) ::: x starts his schedule at y.\nRegular(x, y) ::: x does y regularly.\nLive(x, y) ::: x lives in y.\nAttend(x, y) ::: x attends y.\nPrefer(x, y) ::: x prefers y over z.\nWork(x, y) ::: x works in y.\nHighProfile(x) ::: x is a high-profile celebrity.\nPremises:\n∀x (Make(x, matchaTea) → ¬WakeUp(x, noon)) ::: If people make their own matcha teas every morning with ceremonial-grade matcha powder, then they do not wake up late and start their schedules past noon regularly.\n∀x (Live(x, california) ∧ Attend(x, yogaClass) → Make(x, matchaTea)) ::: If people live in California and attend yoga classes regularly, then they make their own matcha teas every morning with ceremonial-grade matcha powder.\n∀x (Work(x, entertainmentIndustry) ∧ HighProfile(x) → WakeUp(x, noon)) ::: If people work in the entertainment"
    ]
  },
  {
    "id": "FOLIO_train_110",
    "context": "If people make their own matcha teas every morning with ceremonial-grade matcha powder, then they do not wake up late and start their schedules past noon regularly. If people live in California and attend yoga classes regularly, then they make their own matcha teas every morning with ceremonial-grade matcha powder. If people work in the entertainment industry as high-profile celebrities, then they wake up late and start their schedules past noon regularly. If people do not have regular 9-5 jobs, then they work in the entertainment industry as high-profile celebrities. All people who prefer working at home over going to the office every day do not have regular 9-5 jobs. Clay either both prefers to work at home over going to the office every day and makes his own matcha teas every morning with ceremonial-grade matcha powder, or he neither prefers to work at home over going to the office every day nor makes his own matcha teas every morning with ceremonial-grade matcha powder.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Clay neither prefers working at home over going to the office every day nor lives in California and attends yoga classes regularly.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMake(x, y) ::: x makes y every morning.\nWakeUp(x) ::: x wakes up late.\nStart(x) ::: x starts his/her schedule past noon regularly.\nLive(x, y) ::: x lives in y.\nAttend(x, y) ::: x attends y regularly.\nPrefer(x, y) ::: x prefers y over z.\nWork(x, y) ::: x works in y.\nHighProfile(x) ::: x is a high-profile celebrity.\nRegular(x) ::: x has a regular 9-5 job.\nPremises:\n∀x (Make(x, matchaTea) → ¬WakeUp(x)) ::: If people make their own matcha teas every morning with ceremonial-grade matcha powder, then they do not wake up late and start their schedules past noon regularly.\n∀x (Live(x, california) ∧ Attend(x, yogaClass) → Make(x, matchaTea)) ::: If people live in California and attend yoga classes regularly, then they make their own matcha teas every morning with ceremonial-grade matcha powder.\n∀x (Work(x, entertainmentIndustry) ∧ HighProfile(x) → WakeUp(x)) ::: If people work in the entertainment industry as high-profile celebrities, then they wake up late and start their schedules past noon regularly.\n∀x (¬Regular(x) → Work(x, entertainmentIndustry)) ::: If people do not have regular 9-5 jobs, then they work in the entertainment industry as high-profile celebrities.\n∀x (Prefer(x, workAtHome) → ¬Regular(x)) ::: All people who prefer working at home over going to the office every day do not have regular 9-5 jobs.\n(Make(clay, matchaTea) ∧ Prefer(clay, workAtHome)) ∨ ¬(Make(clay, matchaTea) ∧ Prefer(clay, workAtHome)) ::: Clay either both prefers to work at home over going to the office every day and makes his own matcha teas every morning with ceremonial-grade matcha powder, or he neither prefers to work at home over going to the office every day nor makes his own matcha teas every morning with ceremonial-grade matcha powder.\nConclusion:\n¬(Prefer(clay, workAtHome) ∧ Live(clay, california) ∧ Attend(clay, yogaClass)) ::: Clay neither prefers working at home over going to the office every day nor lives in California and attends yoga classes regularly.\n------"
    ]
  },
  {
    "id": "FOLIO_train_111",
    "context": "Thomas Barber was an English professional footballer. Thomas Barber played in the Football League for Aston Villa. Thomas Barber played as a half back and inside left. Thomas Barber scored the winning goal in the 1913 FA Cup Final.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Thomas Barber played in the Football League for Bolton Wanderers",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEnglish(x) ::: x is an English person.\nProfessionalFootballer(x) ::: x is a professional footballer.\nPlay(x, y) ::: x plays in y.\nHalfBack(x) ::: x plays as a half back.\nInsideLeft(x) ::: x plays as an inside left.\nWinningGoal(x) ::: x scored the winning goal in the 1913 FA Cup Final.\nPremises:\nEnglish(thomas) ∧ ProfessionalFootballer(thomas) ∧ Play(thomas, footballLeague) ∧ Play(thomas, astonVilla) ∧ HalfBack(thomas) ∧ InsideLeft(thomas) ∧ WinningGoal(thomas) ::: Thomas Barber was an English professional footballer.\n∀x (Play(x, footballLeague) → Play(x, astonVilla)) ::: Thomas Barber played in the Football League for Aston Villa.\nConclusion:\nPlay(thomas, boltonWanderers) ::: Thomas Barber played in the Football League for Bolton Wanderers\n------\nProblem:\nThe 1994 FIFA World Cup was the 15th FIFA World Cup, the quadrennial international football world championship tournament. The 1994 FIFA World Cup was hosted by the United States. The 1994 FIFA World Cup was won by Brazil. The 1994 FIFA World Cup was held in the United States.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The 1994 FIFA World Cup was held in Brazil.\n###\nPredicates:\nFIFAWorldCup(x) ::: x is a FIFA World Cup.\nHost(x, y) ::: x hosted the FIFA World Cup in year y.\nWin(x, y) ::: x won the FIFA World Cup in year y.\nHeld(x, y) ::: x was held in year y.\nPremises:\nFIFAWorldCup(1994) ∧ Host(unitedStates, 1994) ∧ Win(brazil, 1994) ∧ Held(1994, unitedStates) ::: The 1994 FIFA World Cup was the 15th FIFA World Cup, the quadrennial international football world championship tournament.\nThe 1994 FIFA World Cup was hosted by the United States.\nThe 1994 FIFA World Cup was won by Brazil.\nThe 1994 FIFA World Cup was held in the United States.\nConclusion:\nHeld(1994, brazil) ::: The 199"
    ]
  },
  {
    "id": "FOLIO_train_112",
    "context": "Thomas Barber was an English professional footballer. Thomas Barber played in the Football League for Aston Villa. Thomas Barber played as a half back and inside left. Thomas Barber scored the winning goal in the 1913 FA Cup Final.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Thomas Barber played as an inside left.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEnglish(x) ::: x is an English person.\nProfessionalFootballer(x) ::: x is a professional footballer.\nFootballLeague(x) ::: x is a football league.\nPlay(x, y) ::: x plays in y.\nHalfBack(x) ::: x is a half back.\nInsideLeft(x) ::: x is an inside left.\nWinningGoal(x) ::: x scored the winning goal.\nFA(x) ::: x is the FA.\nCup(x) ::: x is a cup.\nFinal(x) ::: x is a final.\nPremises:\nEnglish(thomas) ∧ ProfessionalFootballer(thomas) ∧ Play(thomas, footballLeague) ∧ Play(thomas, halfBack) ∧ Play(thomas, insideLeft) ∧ WinningGoal(thomas) ::: Thomas Barber was an English professional footballer.\nEnglish(thomas) ∧ Play(thomas, footballLeague) ∧ Play(thomas, halfBack) ∧ WinningGoal(thomas) ∧ FA(fa) ∧ Cup(cup) ∧ Final(final) ∧ Play(thomas, fa) ∧ Play(thomas, cup) ∧ Play(thomas, final) ::: Thomas Barber played in the Football League for Aston Villa.\nEnglish(thomas) ∧ Play(thomas, footballLeague) ∧ Play(thomas, halfBack) ∧ Play(thomas, insideLeft) ∧ WinningGoal(thomas) ∧ FA(fa) ∧ Cup(cup) ∧ Final(final) ∧ Play(thomas, fa) ∧ Play(thomas, cup) ∧ Play(thomas, final) ::: Thomas Barber played as a half back and inside left.\nEnglish(thomas) ∧ Play(thomas, footballLeague) ∧ Play(thomas, halfBack) ∧ Play(thomas, insideLeft) ∧ WinningGoal(thomas) ∧ FA(fa) ∧ Cup(cup) ∧ Final(final) ∧ Play(thomas, fa) ∧ Play(thomas, cup) ∧ Play(thomas, final) ::: Thomas Barber scored the winning goal in the 1913 FA Cup Final.\nConclusion:\nPlay(thomas, insideLeft) ::: Thomas Barber played as an inside left.\n------\nProblem:\nThe"
    ]
  },
  {
    "id": "FOLIO_train_113",
    "context": "Thomas Barber was an English professional footballer. Thomas Barber played in the Football League for Aston Villa. Thomas Barber played as a half back and inside left. Thomas Barber scored the winning goal in the 1913 FA Cup Final.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? An English professional footballer scored the winning goal in the 1913 FA Cup Final.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEnglish(x) ::: x is an English person.\nProfessionalFootballer(x) ::: x is a professional footballer.\nPlay(x, y) ::: x plays in y.\nHalfBack(x) ::: x plays as a half back.\nInsideLeft(x) ::: x plays as an inside left.\nWinningGoal(x) ::: x scored the winning goal.\nFA(x) ::: x is the FA Cup.\nFinal(x) ::: x is the final.\nYear(x) ::: x is a year.\nPremises:\nEnglish(thomas) ∧ ProfessionalFootballer(thomas) ∧ Play(thomas, villa) ∧ Play(thomas, halfBack) ∧ Play(thomas, insideLeft) ∧ WinningGoal(thomas) ∧ FA(faCup) ∧ Final(faCupFinal) ∧ Year(year1913) ::: Thomas Barber was an English professional footballer. Thomas Barber played in the Football League for Aston Villa. Thomas Barber played as a half back and inside left. Thomas Barber scored the winning goal in the 1913 FA Cup Final.\nConclusion:\n∃x (English(x) ∧ ProfessionalFootballer(x) ∧ Play(x, villa) ∧ Play(x, halfBack) ∧ Play(x, insideLeft) ∧ WinningGoal(x) ∧ FA(faCup) ∧ Final(faCupFinal) ∧ Year(year1913)) ::: An English professional footballer scored the winning goal in the 1913 FA Cup Final.\n------\nProblem:\nThe 1994 FIFA World Cup was the 15th FIFA World Cup, the quadrennial international football world championship tournament. The 1994 FIFA World Cup was hosted by the United States. The 1994 FIFA World Cup was won by Brazil. The 1994 FIFA World Cup was the first World Cup to use the golden goal rule. The 1994 FIFA World Cup was the first World Cup to use the silver goal rule. The 1994 FIFA World Cup was the first World Cup to use the third-place play-off. The 1994 FIFA World Cup was the first World Cup to use the round of 16. The 1994 FIFA World Cup was the first World Cup to use the group stage. The 1994 FIFA World Cup was the first World Cup to use the knockout stage. The 1994 FIFA World Cup was the first World Cup to use the group of 16. The"
    ]
  },
  {
    "id": "FOLIO_train_114",
    "context": "If people play the instrument in the concert, then he is good at playing this kind of instrument. Peter plays piano, violin, and saxophone. Peter was invited to play piano at the concert hall. Oliver and Peter were both invited to perform in the concert. Oliver plays a different musical instrument from Peter in the concert.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Oliver plays piano in the concert.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPlay(x, y) ::: x plays y.\nInstrument(x) ::: x is an instrument.\nConcert(x) ::: x is a concert.\nInvite(x, y) ::: x is invited to play y.\nPerform(x, y) ::: x performs y.\nDifferent(x, y) ::: x is different from y.\nPremises:\n∀x (Play(x, y) → Good(x, y)) ::: If people play the instrument in the concert, then he is good at playing this kind of instrument.\nPlay(peter, piano) ∧ Play(peter, violin) ∧ Play(peter, saxophone) ::: Peter plays piano, violin, and saxophone.\nInvite(peter, piano) ∧ Invite(oliver, concert) ::: Peter was invited to play piano at the concert hall. Oliver and Peter were both invited to perform in the concert.\nPerform(oliver, instrument) ∧ Different(instrument, piano) ::: Oliver plays a different musical instrument from Peter in the concert.\nConclusion:\nPlay(oliver, piano) ::: Oliver plays piano in the concert.\n------\nProblem:\nIf a person is a student, then he is a young person. If a person is a young person, then he is a person who is not a student. If a person is a student, then he is a person who is not a young person.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? A person is a student if and only if he is a young person.\n###\nPredicates:\nStudent(x) ::: x is a student.\nYoung(x) ::: x is a young person.\nPremises:\n∀x (Student(x) → Young(x)) ::: If a person is a student, then he is a young person.\n∀x (Young(x) → ¬Student(x)) ::: If a person is a young person, then he is a person who is not a student.\n∀x (Student(x) → ¬Young(x)) ::: If a person is a student, then he is a person who is not a young person.\nConclusion:\nStudent(x) ↔ Young(x) ::: A person is a student if and only if he is a young person.\n------\nProblem:\nIf a person is a student, then he is a young person. If a person is a young person, then he is a person who is not a student. If a person is a student, then he is a person who is not a young person.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? A"
    ]
  },
  {
    "id": "FOLIO_train_115",
    "context": "If people play the instrument in the concert, then he is good at playing this kind of instrument. Peter plays piano, violin, and saxophone. Peter was invited to play piano at the concert hall. Oliver and Peter were both invited to perform in the concert. Oliver plays a different musical instrument from Peter in the concert.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Oliver plays violin in the concert.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPlay(x, y) ::: x plays y.\nInstrument(x) ::: x is an instrument.\nConcert(x) ::: x is a concert.\nInvite(x, y) ::: x is invited to play y.\nPerform(x, y) ::: x performs y.\nDifferent(x, y) ::: x is different from y.\nPremises:\n∀x (Play(x, y) → Good(x, y)) ::: If people play the instrument in the concert, then he is good at playing this kind of instrument.\nPlay(peter, piano) ∧ Play(peter, violin) ∧ Play(peter, saxophone) ::: Peter plays piano, violin, and saxophone.\nInvite(peter, piano) ∧ Invite(oliver, concert) ::: Peter was invited to play piano at the concert hall. Oliver and Peter were both invited to perform in the concert.\nPerform(oliver, concert) ∧ Perform(peter, concert) ∧ ¬Different(oliver, peter) ::: Oliver plays a different musical instrument from Peter in the concert.\nConclusion:\nPlay(oliver, violin) ::: Oliver plays violin in the concert.\n------\nProblem:\nIf a person is a student, then he is a young person. If a person is a young person, then he is a person who is not a student. If a person is a student, then he is a person who is not a young person.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? A person is a student if and only if he is a young person.\n###\nPredicates:\nStudent(x) ::: x is a student.\nYoung(x) ::: x is a young person.\nPremises:\n∀x (Student(x) → Young(x)) ::: If a person is a student, then he is a young person.\n∀x (Young(x) → ¬Student(x)) ::: If a person is a young person, then he is a person who is not a student.\n∀x (Student(x) → ¬Young(x)) ::: If a person is a student, then he is a person who is not a young person.\nConclusion:\nStudent(x) ↔ Young(x) ::: A person is a student if and only if he is a young person.\n------\nProblem:\nIf a person is a student, then he is a young person. If a person is a young person, then he is a person who is not a student. If a person is a student, then he is a person who is not a young person.\nA person is"
    ]
  },
  {
    "id": "FOLIO_train_116",
    "context": "If people play the instrument in the concert, then he is good at playing this kind of instrument. Peter plays piano, violin, and saxophone. Peter was invited to play piano at the concert hall. Oliver and Peter were both invited to perform in the concert. Oliver plays a different musical instrument from Peter in the concert.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Peter is good at playing piano.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPlay(x, y) ::: x plays y.\nInstrument(x) ::: x is an instrument.\nConcert(x) ::: x is a concert.\nGoodAt(x, y) ::: x is good at playing y.\nInvite(x, y) ::: x is invited to perform y.\nPerform(x, y) ::: x performs y.\nDifferent(x, y) ::: x is different from y.\nPremises:\n∀x (Play(x, y) → GoodAt(x, y)) ::: If people play the instrument in the concert, then he is good at playing this kind of instrument.\nPlay(peter, piano) ∧ Play(peter, violin) ∧ Play(peter, saxophone) ::: Peter plays piano, violin, and saxophone.\nInvite(peter, piano) ::: Peter was invited to play piano at the concert hall.\nInvite(oliver, concert) ∧ Invite(peter, concert) ::: Oliver and Peter were both invited to perform in the concert.\nDifferent(oliver, peter) ∧ Different(piano, violin) ∧ Different(piano, saxophone) ∧ Different(violin, saxophone) ::: Oliver plays a different musical instrument from Peter in the concert.\nConclusion:\nGoodAt(peter, piano) ::: Peter is good at playing piano.\n------\nProblem:\nIf a person is a student, then he is a young person. If a person is a young person, then he is a person who is not a senior citizen. If a person is a senior citizen, then he is a person who is not a young person. If a person is a young person, then he is a person who is not a senior citizen.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? A person who is not a senior citizen is a young person.\n###\nPredicates:\nStudent(x) ::: x is a student.\nYoung(x) ::: x is a young person.\nSeniorCitizen(x) ::: x is a senior citizen.\nPremises:\n∀x (Student(x) → Young(x)) ::: If a person is a student, then he is a young person.\n∀x (Young(x) → ¬SeniorCitizen(x)) ::: If a person is a young person, then he is a person who is not a senior citizen.\n∀x (SeniorCitizen(x) → ¬Young(x)) ::: If a person is a senior citizen, then he is a person who is not a young person.���"
    ]
  },
  {
    "id": "FOLIO_train_117",
    "context": "If something can go underwater, then it enjoys water. All animals that can swim can go underwater. Either an animal can swim or it can walk. Animals that can walk travel on land. Animals that enjoy water splash water around. Every animal that travels on land enjoys basking in the sun. George splashes water around and can swim. Liam is either an animal that can walk and enjoys water, or is neither an animal that can walk nor enjoys water.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? George enjoys basking in the sun.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCanGoUnderwater(x) ::: x can go underwater.\nEnjoys(x, y) ::: x enjoys y.\nCanSwim(x) ::: x can swim.\nCanWalk(x) ::: x can walk.\nTravelsOn(x, y) ::: x travels on y.\nCanSplash(x) ::: x can splash.\nPremises:\n∀x (CanSwim(x) → CanGoUnderwater(x)) ::: If something can go underwater, then it enjoys water.\n∀x (CanSwim(x) → CanGoUnderwater(x)) ::: All animals that can swim can go underwater.\n∀x (CanWalk(x) ∨ CanSwim(x)) ::: Either an animal can swim or it can walk.\n∀x (CanWalk(x) → TravelsOn(x, land)) ::: Animals that can walk travel on land.\n∀x (CanGoUnderwater(x) → CanSplash(x)) ::: Animals that enjoy water splash water around.\n∀x (TravelsOn(x, land) → Enjoys(x, sun)) ::: Every animal that travels on land enjoys basking in the sun.\nCanGoUnderwater(george) ∧ CanSwim(george) ∧ CanSplash(george) ::: George splashes water around and can swim.\nCanWalk(liam) ∧ (Enjoys(liam, water) ∨ ¬(CanWalk(liam) ∨ Enjoys(liam, water))) ::: Liam is either an animal that can walk and enjoys water, or is neither an animal that can walk nor enjoys water.\nConclusion:\nEnjoys(george, sun) ::: George enjoys basking in the sun.\n------\nProblem:\nIf something is a mammal, then it is a vertebrate. All mammals are warm-blooded. All vertebrates are cold-blooded. All warm-blooded animals are endothermic. All endothermic animals are homeothermic. All homeothermic animals are ectothermic. All ectothermic animals are cold-blooded.\nAll animals that are not cold-blooded are endothermic. All animals that are not endothermic are ectothermic. All animals that are not ectothermic are homeothermic. All animals that are not homeothermic are endothermic. All animals that are not endothermic are warm-blooded. All animals that are not warm-blooded are vertebrates.\nQuestion:\nBased on the above information, is the following statement true, false, or"
    ]
  },
  {
    "id": "FOLIO_train_118",
    "context": "If something can go underwater, then it enjoys water. All animals that can swim can go underwater. Either an animal can swim or it can walk. Animals that can walk travel on land. Animals that enjoy water splash water around. Every animal that travels on land enjoys basking in the sun. George splashes water around and can swim. Liam is either an animal that can walk and enjoys water, or is neither an animal that can walk nor enjoys water.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Liam enjoys basking in the sun and splashing water around.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCanGoUnderwater(x) ::: x can go underwater.\nEnjoys(x, y) ::: x enjoys y.\nCanSwim(x) ::: x can swim.\nCanWalk(x) ::: x can walk.\nTravelsOn(x, y) ::: x travels on y.\nSplash(x) ::: x splashes water around.\nPremises:\n∀x (CanSwim(x) → CanGoUnderwater(x)) ::: If something can go underwater, then it enjoys water.\n∀x (CanSwim(x) ∨ CanWalk(x)) ::: Either an animal can swim or it can walk.\n∀x (CanWalk(x) → TravelsOn(x, land)) ::: Animals that can walk travel on land.\n∀x (CanGoUnderwater(x) → Enjoys(x, water)) ::: Animals that can go underwater enjoy water.\n∀x (CanSwim(x) → Splash(x)) ::: Animals that can swim splash water around.\n∀x (TravelsOn(x, land) → Enjoys(x, sun)) ::: Every animal that travels on land enjoys basking in the sun.\nCanSwim(george) ∧ Splash(george) ::: George splashes water around and can swim.\nCanWalk(liam) ∧ (Enjoys(liam, water) ∨ ¬(CanWalk(liam) ∨ Enjoys(liam, water))) ::: Liam is either an animal that can walk and enjoys water, or is neither an animal that can walk nor enjoys water.\nConclusion:\nEnjoys(liam, sun) ∧ Splash(liam) ::: Liam enjoys basking in the sun and splashing water around.\n------\nProblem:\nIf something is a mammal, then it is a vertebrate. All mammals are warm-blooded. All vertebrates are cold-blooded. All warm-blooded animals are endothermic. All endothermic animals are homeothermic. All homeothermic animals are ectothermic. All ectothermic animals are cold-blooded.\nAll animals that are not cold-blooded are endothermic. All animals that are not endothermic are ectothermic. All animals that are not ectothermic are homeothermic. All animals that are not homeothermic are endothermic. All animals that are not endothermic are warm-blooded. All animals that are not warm-blooded are vertebrates. All animals that are not vertebrates are mammals.\nAll"
    ]
  },
  {
    "id": "FOLIO_train_119",
    "context": "If something can go underwater, then it enjoys water. All animals that can swim can go underwater. Either an animal can swim or it can walk. Animals that can walk travel on land. Animals that enjoy water splash water around. Every animal that travels on land enjoys basking in the sun. George splashes water around and can swim. Liam is either an animal that can walk and enjoys water, or is neither an animal that can walk nor enjoys water.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Liam neither enjoys basking in the sun nor splashing water around.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCanGoUnderwater(x) ::: x can go underwater.\nEnjoys(x, y) ::: x enjoys y.\nCanSwim(x) ::: x can swim.\nCanWalk(x) ::: x can walk.\nTravelsOn(x, y) ::: x travels on y.\nSplash(x) ::: x splashes water around.\nPremises:\n∀x (CanSwim(x) → CanGoUnderwater(x)) ::: If something can go underwater, then it enjoys water.\n∀x (CanSwim(x) ∨ CanWalk(x)) ::: Either an animal can swim or it can walk.\n∀x (CanWalk(x) → TravelsOn(x, land)) ::: Animals that can walk travel on land.\n∀x (CanGoUnderwater(x) → Enjoys(x, water)) ::: Animals that can go underwater enjoy water.\n∀x (CanSwim(x) → Splash(x)) ::: Animals that can swim splash water around.\n∀x (TravelsOn(x, land) → Enjoys(x, sun)) ::: Every animal that travels on land enjoys basking in the sun.\nCanSwim(george) ∧ Splash(george) ::: George splashes water around and can swim.\nCanWalk(liam) ∧ (Enjoys(liam, water) ∨ ¬(Enjoys(liam, water) ∧ ¬(Enjoys(liam, water)))) ::: Liam is either an animal that can walk and enjoys water, or is neither an animal that can walk nor enjoys water.\nConclusion:\n¬(Enjoys(liam, sun) ∧ Splash(liam)) ::: Liam neither enjoys basking in the sun nor splashing water around.\n------\nProblem:\nIf something is a mammal, then it is a vertebrate. All mammals are warm-blooded. All vertebrates are cold-blooded. All warm-blooded animals are endothermic. All endothermic animals are homeothermic. All homeothermic animals are ectothermic. All ectothermic animals are cold-blooded.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? All mammals are ectothermic.\n###\nPredicates:\nMammal(x) ::: x is a mammal.\nVertebrate(x) ::: x is a vertebrate.\nWarmBlooded(x) ::: x is warm-blooded.\nColdBlooded"
    ]
  },
  {
    "id": "FOLIO_train_120",
    "context": "Cancer biology is finding genetic alterations that confer selective advantage to cancer cells. Cancer researchers have frequently ranked the importance of substitutions to cancer growth by P value. P values are thresholds for belief, not metrics of effect.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Cancer researchers tend to use the cancer effect size to determine the relative importance of the genetic alterations that confer selective advantage to cancer cells.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCancer(x) ::: x is a cancer.\nCancerResearcher(x) ::: x is a cancer researcher.\nRank(x, y) ::: x ranks y.\nPValue(x, y) ::: x is the P value of y.\nBelief(x, y) ::: x is a threshold for belief in y.\nEffectSize(x, y) ::: x is the effect size of y.\nCancerEffectSize(x, y) ::: x is the cancer effect size of y.\nPremises:\nCancerBiology(x) ∧ ∀y (CancerBiology(y) → ¬(CancerBiology(x) ⊕ CancerBiology(y))) ::: Cancer biology is finding genetic alterations that confer selective advantage to cancer cells.\n∀x (CancerResearcher(x) → ∃y (Cancer(y) ∧ Rank(x, y))) ::: Cancer researchers have frequently ranked the importance of substitutions to cancer growth by P value.\n∀x (PValue(x, y) → Belief(x, y)) ::: P values are thresholds for belief, not metrics of effect.\nConclusion:\n∀x (CancerResearcher(x) → ∃y (Cancer(y) ∧ CancerEffectSize(x, y))) ::: Cancer researchers tend to use the cancer effect size to determine the relative importance of the genetic alterations that confer selective advantage to cancer cells.\n------"
    ]
  },
  {
    "id": "FOLIO_train_121",
    "context": "Cancer biology is finding genetic alterations that confer selective advantage to cancer cells. Cancer researchers have frequently ranked the importance of substitutions to cancer growth by P value. P values are thresholds for belief, not metrics of effect.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? P value represents the selection intensity for somatic variants in cancer cell lineages.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCancer(x) ::: x is a cancer.\nCancerCell(x) ::: x is a cancer cell.\nCancerCellLineage(x) ::: x is a cancer cell lineage.\nCancerResearcher(x) ::: x is a cancer researcher.\nCancerBiology(x) ::: x is cancer biology.\nGeneticAlteration(x) ::: x is a genetic alteration.\nConfer(x, y) ::: x confers y.\nSelectiveAdvantage(x) ::: x is a selective advantage.\nCancerCell(x) ∧ CancerCellLineage(x) ::: A cancer cell is a cancer cell lineage.\nCancerResearcher(x) ∧ CancerBiology(y) ::: A cancer researcher is cancer biology.\n∀x (Cancer(x) → CancerCell(x)) ::: Any cancer is a cancer cell.\n∀x (CancerCell(x) → CancerCellLineage(x)) ::: Any cancer cell is a cancer cell lineage.\n∀x (CancerResearcher(x) → CancerBiology(x)) ::: Any cancer researcher is cancer biology.\n∀x (CancerCellLineage(x) → GeneticAlteration(x)) ::: Any cancer cell lineage is a genetic alteration.\n∀x (GeneticAlteration(x) → Confer(x, selectiveAdvantage)) ::: Any genetic alteration confers a selective advantage.��"
    ]
  },
  {
    "id": "FOLIO_train_122",
    "context": "Cancer biology is finding genetic alterations that confer selective advantage to cancer cells. Cancer researchers have frequently ranked the importance of substitutions to cancer growth by P value. P values are thresholds for belief, not metrics of effect.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Cancer effect size is a metric that is preferred by the majority of cancer researchers.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCancer(x) ::: x is a cancer.\nCancerResearcher(x) ::: x is a cancer researcher.\nRank(x, y) ::: x ranks y.\nPValue(x) ::: x is a P value.\nBelief(x, y) ::: x is a threshold for belief in y.\nEffect(x) ::: x is an effect.\nMetric(x) ::: x is a metric.\nMajority(x) ::: x is the majority of cancer researchers.\nPremises:\nCancerBiology(cancerBiology) ::: Cancer biology is finding genetic alterations that confer selective advantage to cancer cells.\n∀x (CancerResearcher(x) → Cancer(x)) ::: Cancer researchers have frequently ranked the importance of substitutions to cancer growth by P value.\n∀x (PValue(x) → Belief(x, cancer)) ::: P values are thresholds for belief, not metrics of effect.\nConclusion:\nMetric(effectSize) ∧ Preferred(majority, effectSize) ::: Cancer effect size is a metric that is preferred by the majority of cancer researchers.\n------\nProblem:\nThe first-order logic formular is defined as follows:\n1) logical conjunction of expr1 and expr2: expr1 ∧ expr2\n2) logical disjunction of expr1 and expr2: expr1 ∨ expr2\n3) logical exclusive disjunction of expr1 and expr2: expr1 ⊕ expr2\n4) logical"
    ]
  },
  {
    "id": "FOLIO_train_123",
    "context": "Cancer biology is finding genetic alterations that confer selective advantage to cancer cells. Cancer researchers have frequently ranked the importance of substitutions to cancer growth by P value. P values are thresholds for belief, not metrics of effect.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? P value doesn't represent metrics of effect.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCancer(x) ::: x is a cancer.\nCancerCell(x) ::: x is a cancer cell.\nCancerResearcher(x) ::: x is a cancer researcher.\nGeneticAlteration(x) ::: x is a genetic alteration.\nSelectiveAdvantage(x) ::: x confers selective advantage to cancer cells.\nRank(x, y) ::: x ranks y.\nPValue(x) ::: x is a P value.\nBelief(x, y) ::: x is a threshold for belief.\nEffect(x, y) ::: x represents metrics of effect.\nPremises:\nCancer(cancer) ∧ CancerCell(cancerCell) ∧ CancerResearcher(cancerResearcher) ∧ GeneticAlteration(geneticAlteration) ∧ SelectiveAdvantage(selectiveAdvantage) ∧ Rank(cancerResearcher, selectiveAdvantage) ∧ Rank(cancerResearcher, geneticAlteration) ∧ PValue(pValue) ∧ Belief(pValue, cancerResearcher) ∧ Effect(pValue, cancer) ::: Cancer biology is finding genetic alterations that confer selective advantage to cancer cells.\n∀x (CancerResearcher(x) → ¬Effect(x, cancer)) ::: Cancer researchers have frequently ranked the importance of substitutions to cancer growth by P value.\nPValue(pValue) ∧ Belief("
    ]
  },
  {
    "id": "FOLIO_train_124",
    "context": "All dispensable things are environment-friendly. All woodware is dispensable. All paper is woodware. No good things are bad. All environment-friendly things are good. A worksheet is either paper or is environment-friendly.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A worksheet is dispensable.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDispensable(x) ::: x is dispensable.\nEnvironmentFriendly(x) ::: x is environment-friendly.\nGood(x) ::: x is good.\nBad(x) ::: x is bad.\nPaper(x) ::: x is paper.\nWoodware(x) ::: x is woodware.\nWorksheet(x) ::: x is a worksheet.\nPremises:\n∀x (Dispensable(x) → EnvironmentFriendly(x)) ::: All dispensable things are environment-friendly.\n∀x (Woodware(x) → Dispensable(x)) ::: All woodware is dispensable.\n∀x (Paper(x) → Woodware(x)) ::: All paper is woodware.\n∀x (Good(x) → ¬Bad(x)) ::: No good things are bad.\n∀x (EnvironmentFriendly(x) → Good(x)) ::: All environment-friendly things are good.\nWorksheet(paper) ∨ Worksheet(environmentFriendly) ::: A worksheet is either paper or is environment-friendly.\nConclusion:\nDispensable(paper) ::: A worksheet is dispensable.\n------\nProblem:\nAll people who are not students are either teachers or employees. All teachers are people. All employees are people. All people who are not students are either teachers or employees. All people who are not students are either teachers or employees. All people who are not students are either teachers or employees. All people"
    ]
  },
  {
    "id": "FOLIO_train_125",
    "context": "All dispensable things are environment-friendly. All woodware is dispensable. All paper is woodware. No good things are bad. All environment-friendly things are good. A worksheet is either paper or is environment-friendly.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A worksheet is not dispensable.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDispensable(x) ::: x is dispensable.\nEnvironmentFriendly(x) ::: x is environment-friendly.\nGood(x) ::: x is good.\nBad(x) ::: x is bad.\nPaper(x) ::: x is paper.\nWoodware(x) ::: x is woodware.\nWorksheet(x) ::: x is a worksheet.\nPremises:\n∀x (Dispensable(x) → EnvironmentFriendly(x)) ::: All dispensable things are environment-friendly.\n∀x (Woodware(x) → Dispensable(x)) ::: All woodware is dispensable.\n∀x (Paper(x) → Woodware(x)) ::: All paper is woodware.\n∀x (Good(x) → ¬Bad(x)) ::: No good things are bad.\n∀x (EnvironmentFriendly(x) → Good(x)) ::: All environment-friendly things are good.\nWorksheet(paper) ∨ Worksheet(environmentFriendly) ::: A worksheet is either paper or is environment-friendly.\nConclusion:\n¬Dispensable(worksheet) ::: A worksheet is not dispensable.\n------\nProblem:\nAll people who are not students are either teachers or employees. All teachers are people. All employees are people. All people who are not students are either teachers or employees. All people who are not students are either teachers or employees. All people who are not students are either teachers or employees"
    ]
  },
  {
    "id": "FOLIO_train_126",
    "context": "All dispensable things are environment-friendly. All woodware is dispensable. All paper is woodware. No good things are bad. All environment-friendly things are good. A worksheet is either paper or is environment-friendly.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A worksheet is bad.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDispensable(x) ::: x is dispensable.\nEnvironmentFriendly(x) ::: x is environment-friendly.\nGood(x) ::: x is good.\nBad(x) ::: x is bad.\nPaper(x) ::: x is paper.\nWoodware(x) ::: x is woodware.\nWorksheet(x) ::: x is a worksheet.\nPremises:\n∀x (Dispensable(x) → EnvironmentFriendly(x)) ::: All dispensable things are environment-friendly.\n∀x (Woodware(x) → Dispensable(x)) ::: All woodware is dispensable.\n∀x (Paper(x) → Woodware(x)) ::: All paper is woodware.\n∀x (Good(x) → ¬Bad(x)) ::: No good things are bad.\n∀x (EnvironmentFriendly(x) → Good(x)) ::: All environment-friendly things are good.\nWorksheet(paper) ∨ Worksheet(environmentFriendly) ::: A worksheet is either paper or is environment-friendly.\nConclusion:\nBad(worksheet) ::: A worksheet is bad.\n------\nProblem:\nAll people who are not students are either teachers or employees. All teachers are people. All employees are people. All people who are not students are either teachers or employees. All people who are not students are either teachers or employees. All people who are not students are either teachers or employees. All people who are not students"
    ]
  },
  {
    "id": "FOLIO_train_127",
    "context": "All dispensable things are environment-friendly. All woodware is dispensable. All paper is woodware. No good things are bad. All environment-friendly things are good. A worksheet is either paper or is environment-friendly.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A worksheet is not bad.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDispensable(x) ::: x is dispensable.\nEnvironmentFriendly(x) ::: x is environment-friendly.\nGood(x) ::: x is good.\nBad(x) ::: x is bad.\nPaper(x) ::: x is paper.\nWoodware(x) ::: x is woodware.\nWorksheet(x) ::: x is a worksheet.\nPremises:\n∀x (Dispensable(x) → EnvironmentFriendly(x)) ::: All dispensable things are environment-friendly.\n∀x (Woodware(x) → Dispensable(x)) ::: All woodware is dispensable.\n∀x (Paper(x) → Woodware(x)) ::: All paper is woodware.\n∀x (Good(x) → ¬Bad(x)) ::: No good things are bad.\n∀x (EnvironmentFriendly(x) → Good(x)) ::: All environment-friendly things are good.\nWorksheet(paper) ∨ Worksheet(environmentFriendly) ::: A worksheet is either paper or is environment-friendly.\nConclusion:\n¬Bad(worksheet) ::: A worksheet is not bad.\n------\nProblem:\nAll people who are not students are either teachers or employees. All teachers are people. All employees are people. All people who are not students are either teachers or employees. All people who are not students are either teachers or employees. All people who are not students are either teachers or employees. All people who are"
    ]
  },
  {
    "id": "FOLIO_train_128",
    "context": "No reptile has fur. All snakes are reptiles.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Some snake has fur.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nReptile(x) ::: x is a reptile.\nSnake(x) ::: x is a snake.\nFur(x) ::: x has fur.\nPremises:\n¬∃x (Reptile(x) ∧ Fur(x)) ::: No reptile has fur.\n∀x (Snake(x) → Reptile(x)) ::: All snakes are reptiles.\nConclusion:\n∃x (Snake(x) ∧ Fur(x)) ::: Some snake has fur.\n------\nProblem:\nAll mammals are vertebrates. All vertebrates are animals. All animals are living things.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? All living things are vertebrates.\n###\nPredicates:\nMammal(x) ::: x is a mammal.\nVertebrate(x) ::: x is a vertebrate.\nAnimal(x) ::: x is an animal.\nLivingThing(x) ::: x is a living thing.\nPremises:\n∀x (Mammal(x) → Vertebrate(x)) ::: All mammals are vertebrates.\n∀x (Vertebrate(x) → Animal(x)) ::: All vertebrates are animals.\n∀x (Animal(x) → LivingThing(x)) ::: All animals are living things.\nConclusion:"
    ]
  },
  {
    "id": "FOLIO_train_129",
    "context": "All buildings in New Haven are low. All buildings managed by the Yale Housing are located in New Haven. All buildings in Manhattans are high. All buildings owned by Bloomberg are located in Manhattans. All buildings with the Bloomberg logo are owned by Bloomberg. Tower A is managed by the Yale Housing. Tower B is with the Bloomberg logo.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tower A is low.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBuilding(x) ::: x is a building.\nLow(x) ::: x is low.\nHigh(x) ::: x is high.\nManage(x, y) ::: x manages y.\nLocated(x, y) ::: x is located in y.\nOwn(x, y) ::: x owns y.\nLogo(x, y) ::: x has the logo of y.\nPremises:\n∀x (Building(x) → (Low(x) ∨ High(x))) ::: All buildings are low or high.\n∀x (Building(x) ∧ Located(x, newHaven)) → Low(x) ::: All buildings in New Haven are low.\n∀x (Building(x) ∧ Located(x, manhattans)) → High(x) ::: All buildings in Manhattans are high.\n∀x (Building(x) ∧ Manage(yaleHousing, x)) → Located(x, newHaven) ::: All buildings managed by the Yale Housing are located in New Haven.\n∀x (Building(x) ∧ Located(x, manhattans)) → Own(bloomberg, x) ::: All buildings owned by Bloomberg are located in Manhattans.\n∀x (Building(x) ∧ Logo(bloomberg, x)) → Own(bloomberg, x) ::: All buildings with the Bloom"
    ]
  },
  {
    "id": "FOLIO_train_130",
    "context": "All buildings in New Haven are low. All buildings managed by the Yale Housing are located in New Haven. All buildings in Manhattans are high. All buildings owned by Bloomberg are located in Manhattans. All buildings with the Bloomberg logo are owned by Bloomberg. Tower A is managed by the Yale Housing. Tower B is with the Bloomberg logo.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tower B is not located in Manhattans.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBuilding(x) ::: x is a building.\nLow(x) ::: x is low.\nHigh(x) ::: x is high.\nManage(x, y) ::: x manages y.\nLocated(x, y) ::: x is located in y.\nOwn(x, y) ::: x owns y.\nWith(x, y) ::: x has y.\nLogo(x, y) ::: x has the logo of y.\nPremises:\n∀x (Building(x) → (Low(x) ∨ High(x))) ::: All buildings are low or high.\n∀x (Building(x) ∧ Located(x, newHaven)) → Low(x) ::: All buildings in New Haven are low.\n∀x (Building(x) ∧ Manage(yaleHousing, x)) → Located(x, newHaven) ::: All buildings managed by the Yale Housing are located in New Haven.\n∀x (Building(x) ∧ Located(x, manhattans)) → High(x) ::: All buildings in Manhattans are high.\n∀x (Building(x) ∧ Own(bloomberg, x)) → Located(x, manhattans) ::: All buildings owned by Bloomberg are located in Manhattans.\n∀x (Building(x) ∧ With(bloomberg, x)) → Logo(bloomberg, x) ::: All buildings with the Bloomberg logo are owned by Bloomberg.\nTowerA ∧ Manage(yaleHousing, TowerA) ::: Tower A is managed by the Yale Housing.\nTowerB ∧ With(bloomberg, TowerB) ::: Tower B is with the Bloomberg logo.\nConclusion:\n¬Located(TowerB, manhattans) ::: Tower B is not located in Manhattans.\n------"
    ]
  },
  {
    "id": "FOLIO_train_131",
    "context": "All buildings in New Haven are low. All buildings managed by the Yale Housing are located in New Haven. All buildings in Manhattans are high. All buildings owned by Bloomberg are located in Manhattans. All buildings with the Bloomberg logo are owned by Bloomberg. Tower A is managed by the Yale Housing. Tower B is with the Bloomberg logo.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tower B is located in New Haven.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBuilding(x) ::: x is a building.\nLow(x) ::: x is low.\nHigh(x) ::: x is high.\nManage(x, y) ::: x manages y.\nLocated(x, y) ::: x is located in y.\nOwn(x, y) ::: x owns y.\nWith(x, y) ::: x is with y.\nLogo(x, y) ::: x has the logo of y.\nPremises:\n∀x (Building(x) → (Low(x) ∨ High(x))) ::: All buildings are low or high.\n∀x (Building(x) ∧ Located(x, newHaven)) → Low(x) ::: All buildings in New Haven are low.\n∀x (Building(x) ∧ Manage(yaleHousing, x)) → Located(x, newHaven) ::: All buildings managed by the Yale Housing are located in New Haven.\n∀x (Building(x) ∧ Located(x, manhattans)) → High(x) ::: All buildings in Manhattans are high.\n∀x (Building(x) ∧ Own(bloomberg, x)) → Located(x, manhattans) ::: All buildings owned by Bloomberg are located in Manhattans.\n∀x (Building(x) ∧ With(bloombergLogo, x)) → Own(bloomberg, x) ::: All buildings with the Bloomberg logo are owned by Bloomberg.\nTowerA ∧ Manage(yaleHousing, TowerA) ::: Tower A is managed by the Yale Housing.\nTowerB ∧ With(bloombergLogo, TowerB) ::: Tower B is with the Bloomberg logo.\nConclusion:\nLocated(TowerB, newHaven) ::: Tower B is located in New Haven.\n------"
    ]
  },
  {
    "id": "FOLIO_train_132",
    "context": "No cold-blooded animals are birds. All reptiles are cold-blooded. Either an animal is a bird or it eats other animals. If an animal eats other animals, then it is a carnivore. Ron is neither a cold-blooded animal nor a carnivore. Henry is neither a carnivore nor a lizard.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Ron is a lizard.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nColdBlooded(x) ::: x is a cold-blooded animal.\nBird(x) ::: x is a bird.\nReptile(x) ::: x is a reptile.\nEat(x, y) ::: x eats y.\nCarnivore(x) ::: x is a carnivore.\nPremises:\n¬(ColdBlooded(x) ∧ Bird(x)) ::: No cold-blooded animals are birds.\n∀x (Reptile(x) → ColdBlooded(x)) ::: All reptiles are cold-blooded.\n∀x (Bird(x) ∨ Eat(x, y)) ::: Either an animal is a bird or it eats other animals.\n∀x (Eat(x, y) → Carnivore(x)) ::: If an animal eats other animals, then it is a carnivore.\n¬(ColdBlooded(ron) ∧ Carnivore(ron)) ::: Ron is neither a cold-blooded animal nor a carnivore.\n¬(ColdBlooded(henry) ∧ Carnivore(henry)) ::: Henry is neither a carnivore nor a lizard.\nConclusion:\nBird(ron) ::: Ron is a lizard.\n------\nProblem:\nAll people who are not students are either employed or unemployed. All people who are employed are either employed full-time or employed part-time. All people who are employed full-time are employed. All people who are employed part-time are employed. All people who are employed are either employed full-time or employed part-time. All people who are employed full-time are employed. All people who are employed part-time are employed. All people who are employed are either employed full-time or employed part-time. All people who are employed full-time are employed. All people who are employed part-time are employed. All people who are employed are either employed full-time or employed part-time. All"
    ]
  },
  {
    "id": "FOLIO_train_133",
    "context": "No cold-blooded animals are birds. All reptiles are cold-blooded. Either an animal is a bird or it eats other animals. If an animal eats other animals, then it is a carnivore. Ron is neither a cold-blooded animal nor a carnivore. Henry is neither a carnivore nor a lizard.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Either Henry is a reptile or Ron eats other animals.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nColdBlooded(x) ::: x is a cold-blooded animal.\nBird(x) ::: x is a bird.\nReptile(x) ::: x is a reptile.\nEat(x, y) ::: x eats y.\nCarnivore(x) ::: x is a carnivore.\nPremises:\n¬(ColdBlooded(x) ∧ Bird(x)) ::: No cold-blooded animals are birds.\n∀x (Reptile(x) → ColdBlooded(x)) ::: All reptiles are cold-blooded.\n∀x (Animal(x) → (Bird(x) ∨ Eat(x, Animal))) ::: Either an animal is a bird or it eats other animals.\n∀x (Eat(x, Animal) → Carnivore(x)) ::: If an animal eats other animals, then it is a carnivore.\n¬(ColdBlooded(ron) ∧ Carnivore(ron)) ::: Ron is neither a cold-blooded animal nor a carnivore.\n¬(ColdBlooded(henry) ∧ Carnivore(henry)) ::: Henry is neither a carnivore nor a lizard.\nConclusion:\n(Reptile(henry) ∨ Eat(ron, Animal)) ::: Either Henry is a reptile or Ron eats other animals.\n------\nProblem:\nAll people who are not students are either employed or unemployed. All people who are employed are either employed full-time or employed part-time. All people who are employed full-time are either employed full-time and have a car or employed full-time and do not have a car. All people who are employed part-time are either employed part-time and have a car or employed part-time and do not have a car. All people who are employed full-time and have a car are employed full-time and have a car and are not students. All people who"
    ]
  },
  {
    "id": "FOLIO_train_134",
    "context": "No cold-blooded animals are birds. All reptiles are cold-blooded. Either an animal is a bird or it eats other animals. If an animal eats other animals, then it is a carnivore. Ron is neither a cold-blooded animal nor a carnivore. Henry is neither a carnivore nor a lizard.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? It is not true that Ron is a reptile or that Henry is cold-blooded.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nColdBlooded(x) ::: x is a cold-blooded animal.\nBird(x) ::: x is a bird.\nReptile(x) ::: x is a reptile.\nEat(x, y) ::: x eats y.\nCarnivore(x) ::: x is a carnivore.\nPremises:\n¬(ColdBlooded(x) ∧ Bird(x)) ::: No cold-blooded animals are birds.\n∀x (Reptile(x) → ColdBlooded(x)) ::: All reptiles are cold-blooded.\n∀x (Animal(x) → (Bird(x) ∨ Eat(x, Animal))) ::: Either an animal is a bird or it eats other animals.\n∀x (Eat(x, Animal) → Carnivore(x)) ::: If an animal eats other animals, then it is a carnivore.\n¬(ColdBlooded(ron) ∧ Carnivore(ron)) ::: Ron is neither a cold-blooded animal nor a carnivore.\n¬(ColdBlooded(henry) ∧ Carnivore(henry)) ::: Henry is neither a carnivore nor a lizard.\nConclusion:\n¬(Reptile(ron) ∨ ColdBlooded(henry)) ::: It is not true that Ron is a reptile or that Henry is cold-blooded.\n------\nProblem:\nAll people who are not students are either employed or unemployed. All people who are employed are either employed full-time or employed part-time. All people who are employed full-time are employed. All people who are employed part-time are employed. All people who are employed are either employed full-time or employed part-time. All people who are employed full-time are employed. All people who are employed part-time are employed. All people who are employed are either employed full-time or employed part-time. All people who are employed"
    ]
  },
  {
    "id": "FOLIO_train_135",
    "context": "Ambiortus is a prehistoric bird genus. Ambiorus Dementjevi is the only known species of Ambiortus. The Mongol region was where Ambiorus Dementjevi lived. Yevgeny Kurochkin was the discoverer of Ambiortus.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Yevgeny Kurochkin discovered a new bird genus.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDiscover(x, y) ::: x discovered y.\nGenus(x) ::: x is a genus.\nSpecies(x) ::: x is a species.\nLive(x, y) ::: x lives in y.\nPremises:\nGenus(ambiortus) ∧ Species(ambiorusDementjevi) ∧ Discover(yevgeny, ambiortus) ::: Ambiortus is a prehistoric bird genus.\nSpecies(ambiorusDementjevi) ∧ Live(ambiorusDementjevi, mongolRegion) ::: Ambiorus Dementjevi is the only known species of Ambiortus.\nLive(ambiorusDementjevi, mongolRegion) ∧ Discover(yevgeny, ambiortus) ::: The Mongol region was where Ambiorus Dementjevi lived.\nConclusion:\nDiscover(yevgeny, ambiortus) ::: Yevgeny Kurochkin discovered a new bird genus.\n------\nProblem:\nA person is a member of a family. A family is a member of a tribe. A tribe is a member of a nation. A nation is a member of a continent. A continent is a member of a planet. A planet is a member of a solar system. A solar system is a member of a galaxy. A galaxy is a member of a universe.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? A person is a member of a universe.\n###\nPredicates:\nMember(x, y) ::: x is a member of y.\nFamily(x) ::: x is a family.\nTribe(x) ::: x is a tribe.\nNation(x) ::: x is a nation.\nContinent(x) ::: x is a continent.\nPlanet(x) ::: x is a planet.\nSolarSystem(x) ::: x is a solar system.\nGalaxy(x) ::: x is"
    ]
  },
  {
    "id": "FOLIO_train_136",
    "context": "Ambiortus is a prehistoric bird genus. Ambiorus Dementjevi is the only known species of Ambiortus. The Mongol region was where Ambiorus Dementjevi lived. Yevgeny Kurochkin was the discoverer of Ambiortus.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There is a species of Ambiortus that doesn't live in the Mongol region.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSpecies(x) ::: x is a species.\nLive(x, y) ::: x lives in y.\nDiscover(x, y) ::: x is the discoverer of y.\nPremises:\nSpecies(ambiorusDementjevi) ::: Ambiorus Dementjevi is the only known species of Ambiortus.\nLive(ambiorusDementjevi, mongolRegion) ::: Ambiorus Dementjevi lived in the Mongol region.\nDiscover(yevgeny, ambiortus) ::: Yevgeny Kurochkin was the discoverer of Ambiortus.\nConclusion:\n¬∃x (Species(x) ∧ Live(x, mongolRegion)) ::: There is a species of Ambiortus that doesn't live in the Mongol region.\n------\nProblem:\nA person is a student if and only if they are enrolled in a university. A person is a student if and only if they are enrolled in a university. A person is a student if and only if they are enrolled in a university. A person is a student if and only if they are enrolled in a university. A person is a student if and only if they are enrolled in a university. A person is a student if and only if they are enrolled in a university. A person is a student if and only if they are enrolled in a university. A person is a student if and only if they are enrolled in a university. A person is a student if and only if they are enrolled in a university. A person is a student if and only if they are enrolled in a university. A person is a student if and only if they are enrolled in a university. A person is a student if and only if they are enrolled in a university. A person is a student if and only if they are enrolled in a university. A person is a student if and only if they are enrolled in a university. A person is a student if and only if they are enrolled in a university. A person is a student if and only if they are"
    ]
  },
  {
    "id": "FOLIO_train_137",
    "context": "Ambiortus is a prehistoric bird genus. Ambiorus Dementjevi is the only known species of Ambiortus. The Mongol region was where Ambiorus Dementjevi lived. Yevgeny Kurochkin was the discoverer of Ambiortus.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Yevgeny Kurochkin lived in the Mongol region.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDiscoverer(x, y) ::: x is the discoverer of y.\nSpecies(x) ::: x is a species.\nGenus(x) ::: x is a genus.\nLive(x, y) ::: x lives in y.\nMongol(x) ::: x is the Mongol region.\nPremises:\nGenus(ambiortus) ∧ Species(ambiorusDementjevi) ∧ Discoverer(yevgeny, ambiortus) ::: Ambiortus is a prehistoric bird genus. Ambiorus Dementjevi is the only known species of Ambiortus.\nDiscoverer(yevgeny, ambiortus) ∧ Live(yevgeny, mongol) ::: Yevgeny Kurochkin was the discoverer of Ambiortus.\nMongol(mongol) ::: The Mongol region was where Ambiorus Dementjevi lived.\nConclusion:\nLive(yevgeny, mongol) ::: Yevgeny Kurochkin lived in the Mongol region.\n------\nProblem:\nA person is a student if and only if the person is enrolled in a university. A person is a student if and only if the person is enrolled in a university. A person is a student if and only if the person is enrolled in a university. A person is a student if and only if the person is enrolled in a university. A person is a student if and only if the person is enrolled in a university. A person is a student if and only if the person is enrolled in a university. A person is a student if and only if the person is enrolled in a university. A person is a student if and only if the person is enrolled in a university. A person is a student if and only if the person is enrolled in a university. A person is a student if and only if the person is enrolled in a university. A person is a student if and only if the person is enrolled in a university. A person is a student"
    ]
  },
  {
    "id": "FOLIO_train_138",
    "context": "Ambiortus is a prehistoric bird genus. Ambiorus Dementjevi is the only known species of Ambiortus. The Mongol region was where Ambiorus Dementjevi lived. Yevgeny Kurochkin was the discoverer of Ambiortus.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? All species of Ambiortus live in the Mongol region.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSpecies(x) ::: x is a species.\nGenus(x) ::: x is a genus.\nLive(x, y) ::: x lives in y.\nDiscover(x, y) ::: x is the discoverer of y.\nPremises:\nSpecies(ambiorusDementjevi) ∧ Genus(ambiortus) ∧ Discover(yevgeny, ambiortus) ::: Ambiortus is a prehistoric bird genus. Ambiorus Dementjevi is the only known species of Ambiortus. The Mongol region was where Ambiorus Dementjevi lived.\nConclusion:\n∀x (Species(x) ∧ Genus(ambiortus) → Live(x, mongol)) ::: All species of Ambiortus live in the Mongol region.\n------\nProblem:\nA person is a student if and only if the person is enrolled in a university. A person is a student if and only if the person is enrolled in a university. A person is a student if and only if the person is enrolled in a university. A person is a student if and only if the person is enrolled in a university. A person is a student if and only if the person is enrolled in a university. A person is a student if and only if the person is enrolled in a university. A person is a student if and only if the person is enrolled in a university. A person is a student if and only if the person is enrolled in a university. A person is a student if and only if the person is enrolled in a university. A person is a student if and only if the person is enrolled in a university. A person is a student if and only if the person is enrolled in a university. A person is a student if and only if the person is enrolled in a university. A person is a student if and only if the person is enrolled in a university. A person is a student if and only if the person is enrolled in a university. A person is a student if and only if"
    ]
  },
  {
    "id": "FOLIO_train_139",
    "context": "Everyone that uses a football can throw a football. If someone plays football, then they use a football. Either someone is a football player or a basketball player. Every basketball player is tall. Everyone that can throw a football can throw a football with a spiral. If someone is tall, then they are in shape. If Jack is neither tall nor a basketball player,  then Jack is neither tall nor can throw a football.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jack plays football.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nUse(x, y) ::: x uses y.\nThrow(x, y) ::: x throws y.\nSpiral(x, y) ::: x throws y with a spiral.\nPlay(x, y) ::: x plays y.\nTall(x) ::: x is tall.\nInShape(x) ::: x is in shape.\nFootball(x) ::: x is a football.\nBasketball(x) ::: x is a basketball.\nPremises:\n∀x (Use(x, football) → Throw(x, football)) ::: Everyone that uses a football can throw a football.\n∀x (Play(x, football) → Use(x, football)) ::: If someone plays football, then they use a football.\n∃x (Play(x, football) ∨ Play(x, basketball)) ::: Either someone is a football player or a basketball player.\n∀x (Basketball(x) → Tall(x)) ::: Every basketball player is tall.\n∀x (Throw(x, football) → Spiral(x, football)) ::: Everyone that can throw a football can throw a football with a spiral.\n∀x (Tall(x) → InShape(x)) ::: If someone is tall, then they are in shape.\n¬(Tall(jack) ∨ Basketball(jack)) → ¬(Tall(jack) ∨ Throw(jack, football)) ::: If Jack is neither tall nor a basketball player,  then Jack is neither tall nor can throw a football.\nConclusion:\nPlay(jack, football) ::: Jack plays football.\n------\nProblem:\nEveryone that uses a football can throw a football. If someone plays football, then they use a football. Either someone is a football player or a basketball player. Every basketball player is tall. Everyone that can throw a football can throw a football with a spiral. If someone is tall, then they are in shape. If Jack is neither tall nor a basketball player,  then Jack is neither tall nor"
    ]
  },
  {
    "id": "FOLIO_train_140",
    "context": "Everyone that uses a football can throw a football. If someone plays football, then they use a football. Either someone is a football player or a basketball player. Every basketball player is tall. Everyone that can throw a football can throw a football with a spiral. If someone is tall, then they are in shape. If Jack is neither tall nor a basketball player,  then Jack is neither tall nor can throw a football.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jack is in shape.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nUse(x, y) ::: x uses y.\nThrow(x, y) ::: x throws y.\nSpiral(x, y) ::: x throws y with a spiral.\nPlay(x, y) ::: x plays y.\nTall(x) ::: x is tall.\nInShape(x) ::: x is in shape.\nFootball(x) ::: x is a football.\nBasketball(x) ::: x is a basketball.\nPremises:\n∀x (Use(x, football) → Throw(x, football)) ::: Everyone that uses a football can throw a football.\n∀x (Play(x, football) → Use(x, football)) ::: If someone plays football, then they use a football.\n∃x (Play(x, football) ∨ Play(x, basketball)) ::: Either someone is a football player or a basketball player.\n∀x (Basketball(x) → Tall(x)) ::: Every basketball player is tall.\n∀x (Throw(x, football) → Spiral(x, football)) ::: Everyone that can throw a football can throw a football with a spiral.\n∀x (Tall(x) → InShape(x)) ::: If someone is tall, then they are in shape.\n¬(Tall(jack) ∨ Basketball(jack)) → ¬(Tall(jack) ∨ Throw(jack, football)) ::: If Jack is neither tall nor a basketball player,  then Jack is neither tall nor can throw a football.\nConclusion:\nInShape(jack) ::: Jack is in shape.\n------"
    ]
  },
  {
    "id": "FOLIO_train_141",
    "context": "Everyone that uses a football can throw a football. If someone plays football, then they use a football. Either someone is a football player or a basketball player. Every basketball player is tall. Everyone that can throw a football can throw a football with a spiral. If someone is tall, then they are in shape. If Jack is neither tall nor a basketball player,  then Jack is neither tall nor can throw a football.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jack is not in shape.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nUse(x, y) ::: x uses y.\nThrow(x, y) ::: x throws y.\nSpiral(x, y) ::: x throws y with a spiral.\nPlay(x, y) ::: x plays y.\nTall(x) ::: x is tall.\nInShape(x) ::: x is in shape.\nFootball(x) ::: x is a football.\nBasketball(x) ::: x is a basketball.\nPremises:\n∀x (Use(x, football) → Throw(x, football)) ::: Everyone that uses a football can throw a football.\n∀x (Play(x, football) → Use(x, football)) ::: If someone plays football, then they use a football.\n∃x (Play(x, football) ∨ Play(x, basketball)) ::: Either someone is a football player or a basketball player.\n∀x (Basketball(x) → Tall(x)) ::: Every basketball player is tall.\n∀x (Throw(x, football) → Spiral(x, football)) ::: Everyone that can throw a football can throw a football with a spiral.\n∀x (Tall(x) → InShape(x)) ::: If someone is tall, then they are in shape.\n¬(Tall(jack) ∨ Basketball(jack)) → ¬(Tall(jack) ∨ Throw(jack, football)) ::: If Jack is neither tall nor a basketball player,  then Jack is neither tall nor can throw a football.\nConclusion:\n¬InShape(jack) ::: Jack is not in shape."
    ]
  },
  {
    "id": "FOLIO_train_142",
    "context": "Fort Ticonderoga is the current name for Fort Carillon. Pierre de Rigaud de Vaudreuil built Fort Carillon. Fort Carillon was located in New France. New France is not in Europe.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Pierre de Rigaud de Vaudreuil built a fort in New France.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFort(x) ::: x is a fort.\nFortCarillon(x) ::: x is Fort Carillon.\nFortTiconderoga(x) ::: x is Fort Ticonderoga.\nFortCarillon(fortTiconderoga) ::: Fort Ticonderoga is the current name for Fort Carillon.\nPierreDeRigaudDeVaudreuil(x) ::: x is Pierre de Rigaud de Vaudreuil.\nBuilt(x, y) ::: x built y.\nLocated(x, y) ::: x is located in y.\nNewFrance(x) ::: x is New France.\nEurope(x) ::: x is Europe.\nPremises:\nFortCarillon(fortTiconderoga) ::: Fort Ticonderoga is the current name for Fort Carillon.\nBuilt(pierreDeRigaudDeVaudreuil, fortCarillon) ::: Pierre de Rigaud de Vaudreuil built Fort Carillon.\nLocated(fortCarillon, newFrance) ::: Fort Carillon was located in New France.\nNewFrance ⊕ Europe ::: New France is not in Europe.\nConclusion:\nBuilt(pierreDeRigaudDeVaudreuil, newFrance) ::: Pierre de Rigaud de Vaudreuil built a fort in New France.\n------\nProblem:\nA person who is a student is a person who is enrolled in a school. A person who is a student is a person who is enrolled in a college. A person who is a student is a person who is enrolled in a university. A person who is a student"
    ]
  },
  {
    "id": "FOLIO_train_143",
    "context": "Fort Ticonderoga is the current name for Fort Carillon. Pierre de Rigaud de Vaudreuil built Fort Carillon. Fort Carillon was located in New France. New France is not in Europe.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Pierre de Rigaud de Vaudreuil built a fort in New England.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFort(x) ::: x is a fort.\nFortCarillon(x) ::: x is Fort Carillon.\nFortTiconderoga(x) ::: x is Fort Ticonderoga.\nFortCarillon(fortTiconderoga) ::: Fort Ticonderoga is the current name for Fort Carillon.\nPierreDeRigaudDeVaudreuil(x) ::: x is Pierre de Rigaud de Vaudreuil.\nBuilt(x, y) ::: x built y.\nLocated(x, y) ::: x is located in y.\nNewFrance(x) ::: x is New France.\nEurope(x) ::: x is Europe.\nPremises:\nFortCarillon(fortTiconderoga) ::: Fort Ticonderoga is the current name for Fort Carillon.\nBuilt(pierreDeRigaudDeVaudreuil, fortCarillon) ::: Pierre de Rigaud de Vaudreuil built Fort Carillon.\nLocated(fortCarillon, newFrance) ::: Fort Carillon was located in New France.\nNewFrance ⊕ Europe ::: New France is not in Europe.\nConclusion:\nBuilt(pierreDeRigaudDeVaudreuil, fortTiconderoga) ::: Pierre de Rigaud de Vaudreuil built a fort in New England.\n------\nProblem:\nA person who is a student is a person who is enrolled in a school. A person who is a student is a person who is enrolled in a college. A person who is a student is a person who is enrolled in a university. A person who is"
    ]
  },
  {
    "id": "FOLIO_train_144",
    "context": "Fort Ticonderoga is the current name for Fort Carillon. Pierre de Rigaud de Vaudreuil built Fort Carillon. Fort Carillon was located in New France. New France is not in Europe.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Fort Carillon was located in Europe.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFort(x) ::: x is a fort.\nCarillon(x) ::: x is Fort Carillon.\nTiconderoga(x) ::: x is Fort Ticonderoga.\nVaudreuil(x) ::: x is Pierre de Rigaud de Vaudreuil.\nBuild(x, y) ::: x built y.\nLocated(x, y) ::: x is located in y.\nNewFrance(x) ::: x is New France.\nEurope(x) ::: x is Europe.\nPremises:\nFort(ticonderoga) ∧ Fort(carillon) ∧ Carillon(carillon) ∧ Ticonderoga(ticonderoga) ∧ Build(vaudreuil, carillon) ∧ Located(carillon, newfrance) ∧ NewFrance(newfrance) ∧ ¬(Europe(newfrance)) ::: Fort Ticonderoga is the current name for Fort Carillon. Pierre de Rigaud de Vaudreuil built Fort Carillon. Fort Carillon was located in New France. New France is not in Europe.\nConclusion:\nLocated(carillon, europe) ::: Fort Carillon was located in Europe.\n------\nProblem:\nA person who is a student is a person who is enrolled in a school. A person who is a student is a person who is enrolled in a college. A person who is a student is a person who is enrolled in a university. A person who is a student is a person who is enrolled in a high school. A person who is a student is a person who is"
    ]
  },
  {
    "id": "FOLIO_train_145",
    "context": "No soccer players are professional basketball players. All NBA players are professional basketball players. All defenders are soccer players. All centerback players are defenders. If Stephen Curry is an NBA player or a soccer player, then he is a professional basketball player.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Stephen Curry is an NBA player.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSoccerPlayer(x) ::: x is a soccer player.\nProfessionalBasketballPlayer(x) ::: x is a professional basketball player.\nNBAPlayer(x) ::: x is an NBA player.\nDefender(x) ::: x is a defender.\nCenterbackPlayer(x) ::: x is a centerback player.\nPremises:\n¬∀x (SoccerPlayer(x) → ProfessionalBasketballPlayer(x)) ::: No soccer players are professional basketball players.\n∀x (NBAPlayer(x) → ProfessionalBasketballPlayer(x)) ::: All NBA players are professional basketball players.\n∀x (Defender(x) → SoccerPlayer(x)) ::: All defenders are soccer players.\n∀x (CenterbackPlayer(x) → Defender(x)) ::: All centerback players are defenders.\n(StephenCurry ∨ SoccerPlayer(stephenCurry)) → ProfessionalBasketballPlayer(stephenCurry) ::: If Stephen Curry is an NBA player or a soccer player, then he is a professional basketball player.\nConclusion:\nNBAPlayer(stephenCurry) ::: Stephen Curry is an NBA player.\n------\nProblem:\nAll people who are not students are either teachers or professors. All professors are teachers. All teachers are either professors or lecturers. All lecturers are either professors or instructors. All instructors are either professors or lecturers.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? All people who are not students are either professors or lecturers.\n###\nPredicates:"
    ]
  },
  {
    "id": "FOLIO_train_146",
    "context": "No soccer players are professional basketball players. All NBA players are professional basketball players. All defenders are soccer players. All centerback players are defenders. If Stephen Curry is an NBA player or a soccer player, then he is a professional basketball player.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Stephen Curry is a centerback player.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSoccerPlayer(x) ::: x is a soccer player.\nProfessionalBasketballPlayer(x) ::: x is a professional basketball player.\nNBAPlayer(x) ::: x is an NBA player.\nDefender(x) ::: x is a defender.\nCenterbackPlayer(x) ::: x is a centerback player.\nPremises:\n¬∃x (SoccerPlayer(x) ∧ ProfessionalBasketballPlayer(x)) ::: No soccer players are professional basketball players.\n∀x (NBAPlayer(x) → ProfessionalBasketballPlayer(x)) ::: All NBA players are professional basketball players.\n∀x (Defender(x) → SoccerPlayer(x)) ::: All defenders are soccer players.\n∀x (CenterbackPlayer(x) → Defender(x)) ::: All centerback players are defenders.\n(StephenCurry ∧ (NBAPlayer(StephenCurry) ∨ SoccerPlayer(StephenCurry))) → ProfessionalBasketballPlayer(StephenCurry) ::: If Stephen Curry is an NBA player or a soccer player, then he is a professional basketball player.\nConclusion:\nCenterbackPlayer(StephenCurry) ::: Stephen Curry is a centerback player.\n------\nProblem:\nAll people who are not students are either teachers or professors. All professors are teachers. All teachers are either professors or lecturers. All lecturers are either professors or tutors. All tutors are either professors or lecturers.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? All people"
    ]
  },
  {
    "id": "FOLIO_train_147",
    "context": "No soccer players are professional basketball players. All NBA players are professional basketball players. All defenders are soccer players. All centerback players are defenders. If Stephen Curry is an NBA player or a soccer player, then he is a professional basketball player.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Stephen Curry is not a centerback player.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSoccerPlayer(x) ::: x is a soccer player.\nProfessionalBasketballPlayer(x) ::: x is a professional basketball player.\nNBAPlayer(x) ::: x is an NBA player.\nDefender(x) ::: x is a defender.\nCenterbackPlayer(x) ::: x is a centerback player.\nPremises:\n¬(SoccerPlayer(x) ∧ ProfessionalBasketballPlayer(x)) ::: No soccer players are professional basketball players.\n∀x (NBAPlayer(x) → ProfessionalBasketballPlayer(x)) ::: All NBA players are professional basketball players.\n∀x (Defender(x) → SoccerPlayer(x)) ::: All defenders are soccer players.\n∀x (CenterbackPlayer(x) → Defender(x)) ::: All centerback players are defenders.\n(StephenCurry ∧ (NBAPlayer(StephenCurry) ∨ SoccerPlayer(StephenCurry))) → ProfessionalBasketballPlayer(StephenCurry) ::: If Stephen Curry is an NBA player or a soccer player, then he is a professional basketball player.\nConclusion:\n¬CenterbackPlayer(StephenCurry) ::: Stephen Curry is not a centerback player.\n------\nProblem:\nAll people who are not students are either teachers or professors. All teachers are either professors or lecturers. All professors are either lecturers or researchers. All researchers are either professors or lecturers. All lecturers are either professors or researchers. All students are either professors or researchers.\nQuestion:\nBased on the above information, is the following statement"
    ]
  },
  {
    "id": "FOLIO_train_148",
    "context": "No songs are visual. All folk songs are songs. All videos are visual. All movies are videos. All sci-fi movies are movies. Inception is a sci-fi movie. Mac is neither a folk song nor a sci-fi movie.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Inception is a folk song.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSong(x) ::: x is a song.\nFolkSong(x) ::: x is a folk song.\nVisual(x) ::: x is visual.\nVideo(x) ::: x is a video.\nMovie(x) ::: x is a movie.\nSciFiMovie(x) ::: x is a sci-fi movie.\nPremises:\n¬∃x (Song(x) ∧ Visual(x)) ::: No songs are visual.\n∀x (FolkSong(x) → Song(x)) ::: All folk songs are songs.\n∀x (Video(x) → Visual(x)) ::: All videos are visual.\n∀x (Movie(x) → Video(x)) ::: All movies are videos.\n∀x (SciFiMovie(x) → Movie(x)) ::: All sci-fi movies are movies.\nInception ∧ SciFiMovie(inception) ::: Inception is a sci-fi movie.\nMac ∧ ¬(FolkSong(mac) ∨ SciFiMovie(mac)) ::: Mac is neither a folk song nor a sci-fi movie.\nConclusion:\nFolkSong(inception) ::: Inception is a folk song.\n------\nProblem:\nAll people who are not students are either unaware that caffeine is a drug or joke about being addicted to caffeine. All people who are not students are either unaware that caffeine is a drug or joke about being addicted to caffeine. All people who are not students are either unaware"
    ]
  },
  {
    "id": "FOLIO_train_149",
    "context": "No songs are visual. All folk songs are songs. All videos are visual. All movies are videos. All sci-fi movies are movies. Inception is a sci-fi movie. Mac is neither a folk song nor a sci-fi movie.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Inception is not a folk song.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSong(x) ::: x is a song.\nFolkSong(x) ::: x is a folk song.\nVisual(x) ::: x is visual.\nVideo(x) ::: x is a video.\nMovie(x) ::: x is a movie.\nSciFiMovie(x) ::: x is a sci-fi movie.\nPremises:\n¬∃x (Song(x) ∧ Visual(x)) ::: No songs are visual.\n∀x (FolkSong(x) → Song(x)) ::: All folk songs are songs.\n∀x (Video(x) → Visual(x)) ::: All videos are visual.\n∀x (Movie(x) → Video(x)) ::: All movies are videos.\n∀x (SciFiMovie(x) → Movie(x)) ::: All sci-fi movies are movies.\nInception ∧ SciFiMovie(inception) ::: Inception is a sci-fi movie.\nMac ∧ ¬(FolkSong(mac) ∨ SciFiMovie(mac)) ::: Mac is neither a folk song nor a sci-fi movie.\nConclusion:\n¬(FolkSong(inception) ∧ SciFiMovie(inception)) ::: Inception is not a folk song.\n------\nProblem:\nAll people who are not students are either unaware that caffeine is a drug or joke about being addicted to caffeine. All people who are not students are either unaware that caffeine is a drug or joke about being addicted"
    ]
  },
  {
    "id": "FOLIO_train_150",
    "context": "No songs are visual. All folk songs are songs. All videos are visual. All movies are videos. All sci-fi movies are movies. Inception is a sci-fi movie. Mac is neither a folk song nor a sci-fi movie.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Inception is either a video or a folk song.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSong(x) ::: x is a song.\nFolkSong(x) ::: x is a folk song.\nScifiMovie(x) ::: x is a sci-fi movie.\nMovie(x) ::: x is a movie.\nVideo(x) ::: x is a video.\nVisual(x) ::: x is visual.\nPremises:\n¬∃x (Song(x) ∧ Visual(x)) ::: No songs are visual.\n∀x (FolkSong(x) → Song(x)) ::: All folk songs are songs.\n∀x (Video(x) → Visual(x)) ::: All videos are visual.\n∀x (Movie(x) → Video(x)) ::: All movies are videos.\n∀x (ScifiMovie(x) → Movie(x)) ::: All sci-fi movies are movies.\nInception ∧ ScifiMovie(inception) ::: Inception is a sci-fi movie.\nMac ∧ ¬(FolkSong(mac) ∨ ScifiMovie(mac)) ::: Mac is neither a folk song nor a sci-fi movie.\nConclusion:\n(Song(inception) ∨ FolkSong(inception)) ::: Inception is either a video or a folk song.\n------"
    ]
  },
  {
    "id": "FOLIO_train_151",
    "context": "No songs are visual. All folk songs are songs. All videos are visual. All movies are videos. All sci-fi movies are movies. Inception is a sci-fi movie. Mac is neither a folk song nor a sci-fi movie.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mac is a video.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSong(x) ::: x is a song.\nFolkSong(x) ::: x is a folk song.\nVisual(x) ::: x is visual.\nVideo(x) ::: x is a video.\nMovie(x) ::: x is a movie.\nSciFiMovie(x) ::: x is a sci-fi movie.\nPremises:\n¬∃x (Song(x) ∧ Visual(x)) ::: No songs are visual.\n∀x (FolkSong(x) → Song(x)) ::: All folk songs are songs.\n∀x (Video(x) → Visual(x)) ::: All videos are visual.\n∀x (Movie(x) → Video(x)) ::: All movies are videos.\n∀x (SciFiMovie(x) → Movie(x)) ::: All sci-fi movies are movies.\nInception ∧ SciFiMovie(inception) ::: Inception is a sci-fi movie.\nMac ∧ ¬(FolkSong(mac) ∨ SciFiMovie(mac)) ::: Mac is neither a folk song nor a sci-fi movie.\nConclusion:\nVideo(mac) ::: Mac is a video.\n------\nProblem:\nAll people who are not students are either unaware that caffeine"
    ]
  },
  {
    "id": "FOLIO_train_152",
    "context": "All extroverts are overtly expressive. People are either extroverts or introverts. If someone is an introvert, then they are shy and reticent. No shy and reticent person likes to talk to strangers. Jeff is not an extrovert and someone who likes to talk to strangers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jeff is a shy and reticent person.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nExtrovert(x) ::: x is an extrovert.\nIntrovert(x) ::: x is an introvert.\nOvertlyExpressive(x) ::: x is overtly expressive.\nShy(x) ::: x is shy.\nReticent(x) ::: x is reticent.\nLike(x, y) ::: x likes y.\nPremises:\n∀x (Extrovert(x) → OvertlyExpressive(x)) ::: All extroverts are overtly expressive.\n∀x (Introvert(x) → Shy(x) ∧ Reticent(x)) ::: People are either extroverts or introverts. If someone is an introvert, then they are shy and reticent.\n∀x (Shy(x) ∧ Reticent(x) → ¬Like(x, strangers)) ::: No shy and reticent person likes to talk to strangers.\n∀x (Extrovert(x) → ¬Like(x, strangers)) ::: If someone is an introvert, then they are shy and reticent. No shy and reticent person likes to talk to strangers.\n∀x (Extrovert(x) → ¬Like(x, strangers)) ::: If someone is an introvert, then they are shy and reticent. No shy and ret"
    ]
  },
  {
    "id": "FOLIO_train_153",
    "context": "All extroverts are overtly expressive. People are either extroverts or introverts. If someone is an introvert, then they are shy and reticent. No shy and reticent person likes to talk to strangers. Jeff is not an extrovert and someone who likes to talk to strangers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jeff is overtly expressive and likes to talk to strangers.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nExtrovert(x) ::: x is an extrovert.\nIntrovert(x) ::: x is an introvert.\nOvertlyExpressive(x) ::: x is overtly expressive.\nShy(x) ::: x is shy.\nReticent(x) ::: x is reticent.\nLike(x, y) ::: x likes y.\nPremises:\n∀x (Extrovert(x) → OvertlyExpressive(x)) ::: All extroverts are overtly expressive.\n∀x (Introvert(x) → Shy(x) ∧ Reticent(x)) ::: If someone is an introvert, then they are shy and reticent.\n∀x (Shy(x) ∧ Reticent(x) → ¬Like(x, strangers)) ::: No shy and reticent person likes to talk to strangers.\nExtrovert(jeff) ∧ Introvert(jeff) ::: Jeff is not an extrovert and someone who likes to talk to strangers.\nConclusion:\nOvertlyExpressive(jeff) ∧ Like(jeff, strangers) ::: Jeff is overtly expressive and likes to talk to strangers.\n------\nProblem:\nAll people who are not vegetarians eat meat. People who eat meat are either carnivores"
    ]
  },
  {
    "id": "FOLIO_train_154",
    "context": "All extroverts are overtly expressive. People are either extroverts or introverts. If someone is an introvert, then they are shy and reticent. No shy and reticent person likes to talk to strangers. Jeff is not an extrovert and someone who likes to talk to strangers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Jeff is either overtly expressive and likes to talk to strangers or neither overtly expressive nor likes to talk to strangers, then Jeff is neither an extrovert nor likes to talk to strangers.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nExtrovert(x) ::: x is an extrovert.\nIntrovert(x) ::: x is an introvert.\nOvertlyExpressive(x) ::: x is overtly expressive.\nShy(x) ::: x is shy.\nReticent(x) ::: x is reticent.\nLike(x, y) ::: x likes y.\nPremises:\n∀x (Extrovert(x) → OvertlyExpressive(x)) ::: All extroverts are overtly expressive.\n∀x (Extrovert(x) ∨ Introvert(x)) ::: People are either extroverts or introverts.\n∀x (Introvert(x) → Shy(x) ∧ Reticent(x)) ::: If someone is an introvert, then they are shy and reticent.\n∀x (Shy(x) ∧ Reticent(x) → ¬Like(x, strangers)) ::: No shy and reticent person likes to talk to strangers.\n¬(Extrovert(jeff) ∧ Like(jeff, strangers)) ∧ ¬(¬Extrovert(jeff) ∧ ¬Like(jeff, strangers)) ::: Jeff is not an extrovert and someone who likes to talk to strangers.\nConclusion:"
    ]
  },
  {
    "id": "FOLIO_train_155",
    "context": "No low-scoring players are top players in the league. Basketball players are either top players in the league or successfully shoot a high percentage of 3-pointers. All players who successfully shoot a high percentage of 3-pointers are solid at shooting 2-pointers. No players who are solid at shooting 2-pointers are bad at mid-range shots. Candace is either a low-scoring player or successfully shoots a high percentage of 3-pointers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Candace is a top player in the league.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLowScoring(x) ::: x is a low-scoring player.\nTopPlayer(x) ::: x is a top player in the league.\nBasketballPlayer(x) ::: x is a basketball player.\nSuccessfullyShoot(x, y) ::: x successfully shoots a high percentage of y.\nSolid(x, y) ::: x is solid at y.\nBad(x, y) ::: x is bad at y.\nPremises:\n¬∀x (LowScoring(x) → TopPlayer(x)) ::: No low-scoring players are top players in the league.\n∀x (BasketballPlayer(x) → (TopPlayer(x) ∨ SuccessfullyShoot(x, 3pointers))) ::: Basketball players are either top players in the league or successfully shoot a high percentage of 3-pointers.\n∀x (SuccessfullyShoot(x, 3pointers) → Solid(x, 2pointers)) ::: All players who successfully shoot a high percentage of 3-pointers are solid at shooting 2-pointers.\n∀x (Solid(x, 2pointers) → ¬Bad(x, midrange)) ::: No players who are solid at shooting 2-pointers are bad at mid-range shots.\nLowScoring(candace) ∨ SuccessfullyShoot("
    ]
  },
  {
    "id": "FOLIO_train_156",
    "context": "No low-scoring players are top players in the league. Basketball players are either top players in the league or successfully shoot a high percentage of 3-pointers. All players who successfully shoot a high percentage of 3-pointers are solid at shooting 2-pointers. No players who are solid at shooting 2-pointers are bad at mid-range shots. Candace is either a low-scoring player or successfully shoots a high percentage of 3-pointers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Candace is bad at mid-range shots.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLowScoring(x) ::: x is a low-scoring player.\nTopPlayer(x) ::: x is a top player in the league.\nBasketballPlayer(x) ::: x is a basketball player.\nSuccessfullyShoot(x, y) ::: x successfully shoots a high percentage of y.\nSolid(x, y) ::: x is solid at y.\nBad(x, y) ::: x is bad at y.\nPremises:\n¬(LowScoring(x) ∧ TopPlayer(x)) ::: No low-scoring players are top players in the league.\nBasketballPlayer(x) ⊕ SuccessfullyShoot(x, 3pointers) ::: Basketball players are either top players in the league or successfully shoot a high percentage of 3-pointers.\n∀x (SuccessfullyShoot(x, 3pointers) → Solid(x, 2pointers)) ::: All players who successfully shoot a high percentage of 3-pointers are solid at shooting 2-pointers.\n∀x (Solid(x, 2pointers) → ¬Bad(x, midrangeshots)) ::: No players who are solid at shooting 2-pointers are bad at mid-range shots.\nLowScoring(candace) ⊕ SuccessfullyShoot(candace, 3pointers) ::"
    ]
  },
  {
    "id": "FOLIO_train_157",
    "context": "No low-scoring players are top players in the league. Basketball players are either top players in the league or successfully shoot a high percentage of 3-pointers. All players who successfully shoot a high percentage of 3-pointers are solid at shooting 2-pointers. No players who are solid at shooting 2-pointers are bad at mid-range shots. Candace is either a low-scoring player or successfully shoots a high percentage of 3-pointers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Candace is solid at shooting 2-pointers or bad at mid-range shots.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLowScoring(x) ::: x is a low-scoring player.\nTopPlayer(x) ::: x is a top player in the league.\nBasketballPlayer(x) ::: x is a basketball player.\nSuccessfullyShoot(x, y) ::: x successfully shoots a high percentage of y.\nSolid(x, y) ::: x is solid at y.\nBad(x, y) ::: x is bad at y.\nPremises:\n¬(LowScoring(x) ∧ TopPlayer(x)) ::: No low-scoring players are top players in the league.\nBasketballPlayer(x) ⊕ SuccessfullyShoot(x, 3pointers) ::: Basketball players are either top players in the league or successfully shoot a high percentage of 3-pointers.\n∀x (SuccessfullyShoot(x, 3pointers) → Solid(x, 2pointers)) ::: All players who successfully shoot a high percentage of 3-pointers are solid at shooting 2-pointers.\n∀x (Solid(x, 2pointers) → ¬Bad(x, midrange)) ::: No players who are solid at shooting 2-pointers are bad at mid-range shots.\nLowScoring(candace) ⊕ SuccessfullyShoot(candace, 3pointers) ::: Candace"
    ]
  },
  {
    "id": "FOLIO_train_158",
    "context": "No low-scoring players are top players in the league. Basketball players are either top players in the league or successfully shoot a high percentage of 3-pointers. All players who successfully shoot a high percentage of 3-pointers are solid at shooting 2-pointers. No players who are solid at shooting 2-pointers are bad at mid-range shots. Candace is either a low-scoring player or successfully shoots a high percentage of 3-pointers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Candace is either solid at shooting 2-pointers or bad at mid-range shots.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLowScoring(x) ::: x is a low-scoring player.\nTopPlayer(x) ::: x is a top player in the league.\nBasketballPlayer(x) ::: x is a basketball player.\nSuccessfullyShoot(x, y) ::: x successfully shoots a high percentage of y.\nSolid(x, y) ::: x is solid at y.\nBad(x, y) ::: x is bad at y.\nPremises:\n¬(LowScoring(x) ∧ TopPlayer(x)) ::: No low-scoring players are top players in the league.\nBasketballPlayer(x) ⊕ SuccessfullyShoot(x, 3pointers) ::: Basketball players are either top players in the league or successfully shoot a high percentage of 3-pointers.\n∀x (SuccessfullyShoot(x, 3pointers) → Solid(x, 2pointers)) ::: All players who successfully shoot a high percentage of 3-pointers are solid at shooting 2-pointers.\n∀x (Solid(x, 2pointers) → ¬Bad(x, midrange)) ::: No players who are solid at shooting 2-pointers are bad at mid-range shots.\nLowScoring(candace) ⊕ SuccessfullyShoot(candace, 3pointers) ::: Candace"
    ]
  },
  {
    "id": "FOLIO_train_159",
    "context": "No low-scoring players are top players in the league. Basketball players are either top players in the league or successfully shoot a high percentage of 3-pointers. All players who successfully shoot a high percentage of 3-pointers are solid at shooting 2-pointers. No players who are solid at shooting 2-pointers are bad at mid-range shots. Candace is either a low-scoring player or successfully shoots a high percentage of 3-pointers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Candace is a low-scoring player or bad at mid-range shots.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLowScoring(x) ::: x is a low-scoring player.\nTopPlayer(x) ::: x is a top player in the league.\nBasketballPlayer(x) ::: x is a basketball player.\nSuccessfullyShoot(x, y) ::: x successfully shoots a high percentage of y.\nSolid(x, y) ::: x is solid at y.\nBad(x, y) ::: x is bad at y.\nPremises:\n¬(LowScoring(x) ∧ TopPlayer(x)) ::: No low-scoring players are top players in the league.\nBasketballPlayer(x) ⊕ SuccessfullyShoot(x, 3pointers) ::: Basketball players are either top players in the league or successfully shoot a high percentage of 3-pointers.\n∀x (SuccessfullyShoot(x, 3pointers) → Solid(x, 2pointers)) ::: All players who successfully shoot a high percentage of 3-pointers are solid at shooting 2-pointers.\n∀x (Solid(x, 2pointers) → ¬Bad(x, midrangeshots)) ::: No players who are solid at shooting 2-pointers are bad at mid-range shots.\nLowScoring(candace) ⊕ SuccessfullyShoot(candace, 3pointers) ::"
    ]
  },
  {
    "id": "FOLIO_train_160",
    "context": "No low-scoring players are top players in the league. Basketball players are either top players in the league or successfully shoot a high percentage of 3-pointers. All players who successfully shoot a high percentage of 3-pointers are solid at shooting 2-pointers. No players who are solid at shooting 2-pointers are bad at mid-range shots. Candace is either a low-scoring player or successfully shoots a high percentage of 3-pointers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Candace is either a low-scoring player or bad at mid-range shots.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLowScoring(x) ::: x is a low-scoring player.\nTopPlayer(x) ::: x is a top player in the league.\nBasketballPlayer(x) ::: x is a basketball player.\nSuccessfullyShoot(x, y) ::: x successfully shoots a high percentage of y.\nSolid(x, y) ::: x is solid at y.\nBad(x, y) ::: x is bad at y.\nPremises:\n¬(LowScoring(x) ∧ TopPlayer(x)) ::: No low-scoring players are top players in the league.\nBasketballPlayer(x) ⊕ SuccessfullyShoot(x, 3pointers) ::: Basketball players are either top players in the league or successfully shoot a high percentage of 3-pointers.\n∀x (SuccessfullyShoot(x, 3pointers) → Solid(x, 2pointers)) ::: All players who successfully shoot a high percentage of 3-pointers are solid at shooting 2-pointers.\n∀x (Solid(x, 2pointers) → ¬Bad(x, midrangeshots)) ::: No players who are solid at shooting 2-pointers are bad at mid-range shots.\nLowScoring(candace) ⊕ SuccessfullyShoot(candace, 3pointers) ::: Candace is either a low-scoring player or successfully shoots a high percentage of 3-pointers.\nConclusion:\nLowScoring(candace) ∧ Bad(candace, midrangeshots) ::: Candace is either a low-scoring player or bad at mid-range shots.\n------"
    ]
  },
  {
    "id": "FOLIO_train_161",
    "context": "No low-scoring players are top players in the league. Basketball players are either top players in the league or successfully shoot a high percentage of 3-pointers. All players who successfully shoot a high percentage of 3-pointers are solid at shooting 2-pointers. No players who are solid at shooting 2-pointers are bad at mid-range shots. Candace is either a low-scoring player or successfully shoots a high percentage of 3-pointers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Candace is either a player who successfully shoots a high percentage of 3-pointers or is bad at mid-range shots.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLowScoring(x) ::: x is a low-scoring player.\nTopPlayer(x) ::: x is a top player in the league.\nBasketballPlayer(x) ::: x is a basketball player.\nSuccessfullyShoot(x, y) ::: x successfully shoots a high percentage of y.\nSolid(x, y) ::: x is solid at y.\nBad(x, y) ::: x is bad at y.\nPremises:\n¬(LowScoring(x) ∧ TopPlayer(x)) ::: No low-scoring players are top players in the league.\nBasketballPlayer(x) ⊕ SuccessfullyShoot(x, 3pointers) ::: Basketball players are either top players in the league or successfully shoot a high percentage of 3-pointers.\n∀x (SuccessfullyShoot(x, 3pointers) → Solid(x, 2pointers)) ::: All players who successfully shoot a high percentage of 3-pointers are solid at shooting 2-pointers.\n∀x (Solid(x, 2pointers) → ¬Bad(x, midrangeshots)) ::: No players who are solid at shooting 2-pointers are bad at mid-range shots.\nLowScoring(candace) ⊕ SuccessfullyShoot(candace, 3pointers) ::: Candace is either a low-scoring player or successfully shoots a high percentage of 3-pointers.\nConclusion:\n(SuccessfullyShoot(candace, 3pointers) ∧ Bad(candace, midrangeshots)) ⊕ (SuccessfullyShoot(candace,"
    ]
  },
  {
    "id": "FOLIO_train_162",
    "context": "No low-scoring players are top players in the league. Basketball players are either top players in the league or successfully shoot a high percentage of 3-pointers. All players who successfully shoot a high percentage of 3-pointers are solid at shooting 2-pointers. No players who are solid at shooting 2-pointers are bad at mid-range shots. Candace is either a low-scoring player or successfully shoots a high percentage of 3-pointers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Candace is not solid at shooting 2-pointers and bad at mid-range shots, then Candace is not solid at shooting 2-pointers and is a player who successfully shoots a high percentage of 3-pointers.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLowScoring(x) ::: x is a low-scoring player.\nTopPlayer(x) ::: x is a top player in the league.\nBasketballPlayer(x) ::: x is a basketball player.\nSuccessfullyShoot(x, y) ::: x successfully shoots a high percentage of y.\nSolid(x, y) ::: x is solid at y.\nBad(x, y) ::: x is bad at y.\nPremises:\n¬(LowScoring(x) ∧ TopPlayer(x)) ::: No low-scoring players are top players in the league.\nBasketballPlayer(x) ⊕ SuccessfullyShoot(x, 3pointers) ::: Basketball players are either top players in the league or successfully shoot a high percentage of 3-pointers.\n∀x (SuccessfullyShoot(x, 3pointers) → Solid(x, 2pointers)) ::: All players who successfully shoot a high percentage of 3-pointers are solid at shooting 2-pointers.\n∀x (Solid(x, 2pointers) → ¬Bad(x, midrangeshots)) ::: No players who are solid at shooting 2-pointers are bad at mid-range shots.\nLowScoring(candace) ⊕ SuccessfullyShoot(candace, 3pointers) ::: Candace is either a low-scoring player or successfully shoots a high percentage of 3-pointers.\nConclusion:\n(¬Solid(candace, 2pointers) ∧ Bad(candace, midrangeshots)) → (¬Solid(candace, 2pointers)"
    ]
  },
  {
    "id": "FOLIO_train_163",
    "context": "No low-scoring players are top players in the league. Basketball players are either top players in the league or successfully shoot a high percentage of 3-pointers. All players who successfully shoot a high percentage of 3-pointers are solid at shooting 2-pointers. No players who are solid at shooting 2-pointers are bad at mid-range shots. Candace is either a low-scoring player or successfully shoots a high percentage of 3-pointers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Candace is solid at shooting 2-pointers or successfully shoots a high percentage of 3-pointers, then Candace is a top player in the league and bad at mid-range shots.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLowScoring(x) ::: x is a low-scoring player.\nTopPlayer(x) ::: x is a top player in the league.\nBasketballPlayer(x) ::: x is a basketball player.\nSuccessfullyShoot(x, y) ::: x successfully shoots a high percentage of y.\nSolid(x, y) ::: x is solid at y.\nBad(x, y) ::: x is bad at y.\nPremises:\n¬(LowScoring(x) ∧ TopPlayer(x)) ::: No low-scoring players are top players in the league.\nBasketballPlayer(x) ⊕ SuccessfullyShoot(x, 3pointers) ::: Basketball players are either top players in the league or successfully shoot a high percentage of 3-pointers.\n∀x (SuccessfullyShoot(x, 3pointers) → Solid(x, 2pointers)) ::: All players who successfully shoot a high percentage of 3-pointers are solid at shooting 2-pointers.\n∀x (Solid(x, 2pointers) → ¬Bad(x, midrange)) ::: No players who are solid at shooting 2-pointers are bad at mid-range shots.\nLowScoring(candace) ⊕ SuccessfullyShoot(candace, 3pointers) ::: Candace is either a low-scoring player or successfully shoots a high percentage of 3-pointers.\nConclusion:\n(Solid(candace, 2pointers) ∧ SuccessfullyShoot(candace, 3pointers)) → (TopPlayer(candace) ∧ Bad(candace"
    ]
  },
  {
    "id": "FOLIO_train_164",
    "context": "No plants are fungi. Mushrooms are fungi.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? No plants are mushrooms.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPlant(x) ::: x is a plant.\nFungi(x) ::: x is a fungi.\nMushroom(x) ::: x is a mushroom.\nPremises:\n∀x (Plant(x) → ¬Fungi(x)) ::: No plants are fungi.\n∀x (Mushroom(x) → Fungi(x)) ::: Mushrooms are fungi.\nConclusion:\n∀x (Plant(x) → ¬Mushroom(x)) ::: No plants are mushrooms.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then"
    ]
  },
  {
    "id": "FOLIO_train_165",
    "context": "No road is clean. And some streets are roads.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Some streets are clean",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRoad(x) ::: x is a road.\nStreet(x) ::: x is a street.\nClean(x) ::: x is clean.\nPremises:\n¬∀x (Road(x) → Clean(x)) ::: No road is clean.\n∃x (Street(x) ∧ Road(x)) ::: And some streets are roads.\nConclusion:\n∃x (Street(x) ∧ Clean(x)) ::: Some streets are clean\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine"
    ]
  },
  {
    "id": "FOLIO_train_166",
    "context": "New York City is on the East Coast. Seattle is on the West Coast. If a person from a city on the East coast is traveling to a city on the west coast, they will be on a long flight. Most passengers on flights to Seattle from New York City are not in first class. People on long flights are uncomfortable unless they're in first class",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Some people flying from New York City to Seattle will be uncomfortable.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEastCoast(x) ::: x is a city on the East Coast.\nWestCoast(x) ::: x is a city on the West Coast.\nTravel(x, y) ::: x is traveling to y.\nLongFlight(x) ::: x is a long flight.\nFirstClass(x) ::: x is in first class.\nUncomfortable(x) ::: x is uncomfortable.\nPassenger(x) ::: x is a passenger.\nPremises:\nEastCoast(newYorkCity) ∧ WestCoast(seattle) ::: New York City is on the East Coast. Seattle is on the West Coast.\n∀x (Travel(x, seattle) → LongFlight(x)) ::: If a person from a city on the East coast is traveling to a city on the west coast, they will be on a long flight.\n∀x (Passenger(x) ∧ Travel(x, seattle) ∧ LongFlight(x)) → ¬FirstClass(x) ::: Most passengers on flights to Seattle from New York City are not in first class.\n∀x (Passenger(x) ∧ LongFlight(x)) → Uncomfortable(x) ::: People on long flights are uncomfortable unless they're in first class.\nConclusion:\n∃x (Passenger(x) ∧ Travel(x, newYorkCity) ∧ Travel(x, seattle)) → Uncomfortable(x) ::: Some people flying from New York City to Seattle will be uncomfortable.\n------\nProblem:\nA person who is a student is a person who is enrolled in a school. A person who is a student is a person who"
    ]
  },
  {
    "id": "FOLIO_train_167",
    "context": "Musicians have very busy lives. Singh Kaur is a musician and famous. If a musician is not famous, that musician will not make a lot of money. A musician can be a singer or a writer.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Singh Kaur makes a lot of money.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMusician(x) ::: x is a musician.\nFamous(x) ::: x is famous.\nMakeMoney(x) ::: x makes a lot of money.\nSing(x) ::: x is a singer.\nWrite(x) ::: x is a writer.\nPremises:\nMusician(singh) ∧ Famous(singh) ::: Singh Kaur is a musician and famous.\n∀x (Musician(x) → ¬Famous(x) → MakeMoney(x)) ::: If a musician is not famous, that musician will not make a lot of money.\n∀x (Musician(x) → (Sing(x) ∨ Write(x))) ::: A musician can be a singer or a writer.\nConclusion:\nMakeMoney(singh) ::: Singh Kaur makes a lot of money.\n------\nProblem:\nA person who is a student is a person who is enrolled in a school. A person who is a student is a person who is enrolled in a school. A person who is a student is a person who is enrolled in a school. A person who is a student is a person who is enrolled in a school. A person who is a student is a person who is enrolled in a school. A person who is a student is a person who is enrolled in a school. A person who is a student is a person who is enrolled in a school. A person who is a student is a person who is enrolled in a school. A person who is a student is a person who is enrolled in a school. A person who is a student is a person who is enrolled in a school. A person who is a student is a person who is enrolled in a school. A person who is"
    ]
  },
  {
    "id": "FOLIO_train_168",
    "context": "Musicians have very busy lives. Singh Kaur is a musician and famous. If a musician is not famous, that musician will not make a lot of money. A musician can be a singer or a writer.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Singh Kaur is a writer.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMusician(x) ::: x is a musician.\nFamous(x) ::: x is famous.\nSing(x) ::: x is a singer.\nWrite(x) ::: x is a writer.\nMakeMoney(x) ::: x makes a lot of money.\nPremises:\nMusician(singh) ∧ Famous(singh) ::: Singh Kaur is a musician and famous.\n∀x (Musician(x) → ¬Famous(x)) → ¬MakeMoney(x) ::: If a musician is not famous, that musician will not make a lot of money.\nMusician(x) → (Sing(x) ∨ Write(x)) ::: A musician can be a singer or a writer.\nConclusion:\nWrite(singh) ::: Singh Kaur is a writer.\n------\nProblem:\nA person who is a student is a person who is not a teacher. A person who is a teacher is a person who is not a student. A person who is a student is a person who is not a teacher.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? A person who is a student is a person who is not a teacher.\n###\nPredicates:\nStudent(x) ::: x is a student.\nTeacher(x) ::: x is a teacher.\nPremises:\nStudent(x) → ¬Teacher(x) ::: A person who is a student is a person who is not a teacher.\nTeacher(x) → ¬Student(x) ::: A person who is a teacher is a person who is not a student.\nStudent(x) → ¬Teacher(x) ::: A person"
    ]
  },
  {
    "id": "FOLIO_train_169",
    "context": "Musicians have very busy lives. Singh Kaur is a musician and famous. If a musician is not famous, that musician will not make a lot of money. A musician can be a singer or a writer.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Singh Kaur has a very busy life.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMusician(x) ::: x is a musician.\nFamous(x) ::: x is famous.\nSing(x) ::: x is a singer.\nWrite(x) ::: x is a writer.\nMakeMoney(x) ::: x makes a lot of money.\nPremises:\nMusician(singh) ∧ Famous(singh) ::: Singh Kaur is a musician and famous.\n∀x (Musician(x) → ¬Famous(x)) → ¬MakeMoney(x) ::: If a musician is not famous, that musician will not make a lot of money.\n∀x (Musician(x) → (Sing(x) ∨ Write(x))) ::: A musician can be a singer or a writer.\nConclusion:\nBusy(singh) ::: Singh Kaur has a very busy life.\n------\nProblem:\nA person who is a student is a person who is not a teacher. A person who is a teacher is a person who is not a student. A person who is a student is a person who is not a teacher. A person who is a teacher is a person who is not a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? A person who is a student is a person who is not a teacher.\n###\nPredicates:\nStudent(x) ::: x is a student.\nTeacher(x) ::: x is a teacher.\nPremises:\n∀x (Student(x) → ¬Teacher(x)) ::: A person who is a student is a person who is not a teacher.\n∀x (Teacher(x) → ¬Student(x)) :::"
    ]
  },
  {
    "id": "FOLIO_train_170",
    "context": "Each building is tall. Everything tall has  height.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? All buildings are magnificent.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBuilding(x) ::: x is a building.\nTall(x) ::: x is tall.\nHeight(x) ::: x has height.\nMagnificent(x) ::: x is magnificent.\nPremises:\n∀x (Building(x) → Tall(x)) ::: Each building is tall.\n∀x (Tall(x) → Height(x)) ::: Everything tall has height.\nConclusion:\n∀x (Building(x) → Magnificent(x)) ::: All buildings are magnificent.\n------"
    ]
  },
  {
    "id": "FOLIO_train_171",
    "context": "A cat named Garfield, which is the main character of the film Garfield, is orange and fat and likes having lasagna. Garfield and Odie, who is another pet of Jon, share the same home. Garfield hates Odie. A pet who hates the pet with whom he shares the same owner is childish and possessive. Cats are pets.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The main character of the film Garfield is childish and possessive.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCat(x) ::: x is a cat.\nPet(x) ::: x is a pet.\nOrange(x) ::: x is orange.\nFat(x) ::: x is fat.\nLike(x, y) ::: x likes y.\nHate(x, y) ::: x hates y.\nShare(x, y) ::: x shares the same home with y.\nOwner(x, y) ::: x is the owner of y.\nChildish(x) ::: x is childish.\nPossessive(x) ::: x is"
    ]
  },
  {
    "id": "FOLIO_train_172",
    "context": "All humans eat. If something eats, then it is not a plant. A thing is either plant or animal. All goats are animals. No dirt is an animal. Hulu is a goat or a human.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Hulu eats.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nHuman(x) ::: x is a human.\nEat(x) ::: x eats.\nPlant(x) ::: x is a plant.\nAnimal(x) ::: x is an animal.\nGoat(x) ::: x is a goat.\nDirt(x) ::: x is dirt.\nPremises:\n∀x (Human(x) → Eat(x)) ::: All humans eat.\n∀x (Eat(x) → ¬Plant(x)) ::: If something eats, then it"
    ]
  },
  {
    "id": "FOLIO_train_173",
    "context": "All humans eat. If something eats, then it is not a plant. A thing is either plant or animal. All goats are animals. No dirt is an animal. Hulu is a goat or a human.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Hulu does not eat.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nHuman(x) ::: x is a human.\nEat(x) ::: x eats.\nPlant(x) ::: x is a plant.\nAnimal(x) ::: x is an animal.\nGoat(x) ::: x is a goat.\nDirt(x) ::: x is dirt.\nPremises:\n∀x (Human(x) → Eat(x)) ::: All humans eat.\n∀x (Eat(x) → ¬Plant(x)) ::: If something eats, then it"
    ]
  },
  {
    "id": "FOLIO_train_174",
    "context": "All humans eat. If something eats, then it is not a plant. A thing is either plant or animal. All goats are animals. No dirt is an animal. Hulu is a goat or a human.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Hulu is dirt.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nHuman(x) ::: x is a human.\nEat(x) ::: x eats.\nPlant(x) ::: x is a plant.\nAnimal(x) ::: x is an animal.\nGoat(x) ::: x is a goat.\nDirt(x) ::: x is dirt.\nPremises:\n∀x (Human(x) → Eat(x)) ::: All humans eat.\n∀x (Eat(x) → ¬Plant(x)) ::: If something eats, then it"
    ]
  },
  {
    "id": "FOLIO_train_175",
    "context": "All humans eat. If something eats, then it is not a plant. A thing is either plant or animal. All goats are animals. No dirt is an animal. Hulu is a goat or a human.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Hulu is an animal or dirt.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nHuman(x) ::: x is a human.\nEat(x) ::: x eats.\nPlant(x) ::: x is a plant.\nAnimal(x) ::: x is an animal.\nGoat(x) ::: x is a goat.\nDirt(x) ::: x is dirt.\nPremises:\n∀x (Human(x) → Eat(x)) ::: All humans eat.\n∀x (Eat(x) → ¬Plant(x)) ::: If something eats, then it"
    ]
  },
  {
    "id": "FOLIO_train_176",
    "context": "All humans eat. If something eats, then it is not a plant. A thing is either plant or animal. All goats are animals. No dirt is an animal. Hulu is a goat or a human.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Hulu is either an animal or dirt.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nHuman(x) ::: x is a human.\nEat(x) ::: x eats.\nPlant(x) ::: x is a plant.\nAnimal(x) ::: x is an animal.\nGoat(x) ::: x is a goat.\nDirt(x) ::: x is dirt.\nPremises:\n∀x (Human(x) → Eat(x)) ::: All humans eat.\n∀x (Eat(x) → ¬Plant(x)) ::: If something eats, then it"
    ]
  },
  {
    "id": "FOLIO_train_177",
    "context": "All humans eat. If something eats, then it is not a plant. A thing is either plant or animal. All goats are animals. No dirt is an animal. Hulu is a goat or a human.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Hulu is either an animal or dirt, then Hulu eats and is dirt.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nHuman(x) ::: x is a human.\nEat(x) ::: x eats.\nPlant(x) ::: x is a plant.\nAnimal(x) ::: x is an animal.\nGoat(x) ::: x is a goat.\nDirt(x) ::: x is dirt.\nPremises:\n∀x (Human(x) → Eat(x)) ::: All humans eat.\n∀x (Eat(x) → ¬Plant(x)) ::: If something eats, then it"
    ]
  },
  {
    "id": "FOLIO_train_178",
    "context": "A controlled substance is a drug. There exist both harmful and beneficial controlled substances. If a child is exposed to a controlled substance, he or she is in chemical endangerment. Chemical Endangerment is harmful. The Controlled Substances Act was an act passed in 1971. Some Acts prevent harmful things.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Controlled Substances Act prevents harmful things.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nControlledSubstance(x) ::: x is a controlled substance.\nHarmful(x) ::: x is harmful.\nBeneficial(x) ::: x is beneficial.\nExpose(x, y) ::: x is exposed to y.\nChemicalEndangerment(x) ::: x is in chemical endangerment.\nChild(x) ::: x is a child.\nAct(x) ::: x is an act.\nPass(x) ::: x is passed.\nPrevent(x, y) ::: x prevents y.\nPremises:"
    ]
  },
  {
    "id": "FOLIO_train_179",
    "context": "A controlled substance is a drug. There exist both harmful and beneficial controlled substances. If a child is exposed to a controlled substance, he or she is in chemical endangerment. Chemical Endangerment is harmful. The Controlled Substances Act was an act passed in 1971. Some Acts prevent harmful things.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Some drugs are beneficial.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDrug(x) ::: x is a drug.\nControlledSubstance(x) ::: x is a controlled substance.\nHarmful(x) ::: x is harmful.\nBeneficial(x) ::: x is beneficial.\nExpose(x, y) ::: x is exposed to y.\nChemicalEndangerment(x) ::: x is in chemical endangerment.\nChild(x) ::: x is a child.\nAct(x) ::: x is an act.\nPass(x) ::: x is passed.\nPrevent(x, y"
    ]
  },
  {
    "id": "FOLIO_train_180",
    "context": "A controlled substance is a drug. There exist both harmful and beneficial controlled substances. If a child is exposed to a controlled substance, he or she is in chemical endangerment. Chemical Endangerment is harmful. The Controlled Substances Act was an act passed in 1971. Some Acts prevent harmful things.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A child in chemical endangerment is in harm.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nChild(x) ::: x is a child.\nControlledSubstance(x) ::: x is a controlled substance.\nHarmful(x) ::: x is harmful.\nBeneficial(x) ::: x is beneficial.\nExpose(x, y) ::: x is exposed to y.\nChemicalEndangerment(x) ::: x is in chemical endangerment.\nHarm(x) ::: x is harm.\nAct(x) ::: x is an act.\nPass(x) ::: x is passed.\nPrevent(x, y) ::: x prevents y.\nPremises:\nControlledSubstance(x) ∧ Harmful(x) ::: There exist both harmful and beneficial controlled substances.\n∀x (Child(x) ∧ Expose(x, y) → ChemicalEndangerment(x)) ::: If a child is exposed to a controlled substance, he or she is in chemical endangerment.\nHarm(chemicalEndangerment) ::: Chemical Endangerment is harmful.\nAct(controlledSubstancesAct) ∧ Pass(controlledSubstancesAct, year1971) ::: The Controlled Substances Act was an act passed in 1971.\n∃x (Act(x) ∧ Prevent(x, harmful)) ::: Some Acts prevent harmful things.\nConclusion:\nHarm(chemicalEndangerment) ::: A child in chemical endangerment is in harm.\n------"
    ]
  },
  {
    "id": "FOLIO_train_181",
    "context": "No people who work at corporate jobs are starting a new company. All entrepreneurs are starting a new company. All risk-averse people are people who work at corporate jobs. All people who hate working for others are entrepreneurs. If Mark Zuckerberg is neither an entrepreneur nor a person who hates working for others, then Mark Zuckerberg is not a risk-averse person.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mark Zuckerberg is an entrepreneur.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nWorkAtCorporateJob(x) ::: x works at a corporate job.\nStartNewCompany(x) ::: x is starting a new company.\nEntrepreneur(x) ::: x is an entrepreneur.\nRiskAverse(x) ::: x is a risk-averse person.\nHateWorkingForOthers(x) ::: x hates working for others.\nPremises:\n∀x (WorkAtCorporateJob(x) → ¬StartNewCompany(x)) ::: No people who work at corporate jobs are starting a new company.\n∀x (Entrepreneur(x) → StartNewCompany(x)) ::: All entrepreneurs are starting a new company.\n∀x (RiskAverse(x) → WorkAtCorporateJob(x)) ::: All risk-averse people are people who work at corporate jobs.\n∀x (HateWorkingForOthers(x) → Entrepreneur(x)) ::: All people who hate working for others are entrepreneurs.\n¬(Entrepreneur(mark) ∧ HateWorkingForOthers(mark)) → ¬RiskAverse(mark) ::: If Mark Zuckerberg is neither an entrepreneur nor a person who hates working for others, then Mark Zuckerberg is not a risk-averse person.\nConclusion:\nEntrepreneur(mark) ::: Mark Zuckerberg is an entrepreneur.\n------\nProblem:\nAll people who are not in the United States are not in the"
    ]
  },
  {
    "id": "FOLIO_train_182",
    "context": "No people who work at corporate jobs are starting a new company. All entrepreneurs are starting a new company. All risk-averse people are people who work at corporate jobs. All people who hate working for others are entrepreneurs. If Mark Zuckerberg is neither an entrepreneur nor a person who hates working for others, then Mark Zuckerberg is not a risk-averse person.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mark Zuckerberg is a risk-averse person.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nWorkAtCorporateJob(x) ::: x works at a corporate job.\nStartNewCompany(x) ::: x is starting a new company.\nEntrepreneur(x) ::: x is an entrepreneur.\nRiskAverse(x) ::: x is a risk-averse person.\nHateWorkingForOthers(x) ::: x hates working for others.\nPremises:\n¬∀x (WorkAtCorporateJob(x) → StartNewCompany(x)) ::: No people who work at corporate jobs are starting a new company.\n∀x (Entrepreneur(x) → StartNewCompany(x)) ::: All entrepreneurs are starting a new company.\n∀x (RiskAverse(x) → WorkAtCorporateJob(x)) ::: All risk-averse people are people who work at corporate jobs.\n∀x (HateWorkingForOthers(x) → Entrepreneur(x)) ::: All people who hate working for others are entrepreneurs.\n¬(Entrepreneur(markZuckerberg) ∧ HateWorkingForOthers(markZuckerberg)) → ¬RiskAverse(markZuckerberg) ::: If Mark Zuckerberg is neither an entrepreneur nor a person who hates working for others, then Mark Zuckerberg is not a risk-averse person.\nConclusion:\nRiskAverse(markZuckerberg) ::: Mark Zuckerberg is a risk-averse person.\n------\nProblem"
    ]
  },
  {
    "id": "FOLIO_train_183",
    "context": "No people who work at corporate jobs are starting a new company. All entrepreneurs are starting a new company. All risk-averse people are people who work at corporate jobs. All people who hate working for others are entrepreneurs. If Mark Zuckerberg is neither an entrepreneur nor a person who hates working for others, then Mark Zuckerberg is not a risk-averse person.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mark Zuckerberg is not a risk-averse person.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nWorkAtCorporateJob(x) ::: x works at a corporate job.\nStartNewCompany(x) ::: x is starting a new company.\nEntrepreneur(x) ::: x is an entrepreneur.\nRiskAverse(x) ::: x is a risk-averse person.\nHateWorkingForOthers(x) ::: x hates working for others.\nPremises:\n¬∃x (WorkAtCorporateJob(x) ∧ StartNewCompany(x)) ::: No people who work at corporate jobs are starting a new company.\n∀x (Entrepreneur(x) → StartNewCompany(x)) ::: All entrepreneurs are starting a new company.\n∀x (RiskAverse(x) → WorkAtCorporateJob(x)) ::: All risk-averse people are people who work at corporate jobs.\n∀x (HateWorkingForOthers(x) → Entrepreneur(x)) ::: All people who hate working for others are entrepreneurs.\n¬(Entrepreneur(markZuckerberg) ∧ HateWorkingForOthers(markZuckerberg)) → ¬RiskAverse(markZuckerberg) ::: If Mark Zuckerberg is neither an entrepreneur nor a person who hates working for others, then Mark Zuckerberg is not a risk-averse person.\nConclusion:\n¬RiskAverse(markZuckerberg) ::: Mark Zuckerberg is not a risk-averse person."
    ]
  },
  {
    "id": "FOLIO_train_184",
    "context": "There are two kitchens in the house: the upstairs kitchen and the downstairs kitchen. When someone is cooking in the downstairs kitchen, the first floor becomes smokey unless the air conditioner is running. If the air conditioner is running and someone is cooking in the downstairs kitchen, all the smoke travels to the second floor.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If someone is cooking downstairs, it will always cause the first floor to become smokey.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCooking(x) ::: x is cooking.\nSmoke(x) ::: x is smokey.\nAirConditioner(x) ::: x is an air conditioner.\nRunning(x) ::: x is running.\nUpstairs(x) ::: x is upstairs.\nDownstairs(x) ::: x is downstairs.\nPremises:\n∀x (Cooking(x) ∧ Downstairs(x) → Smoke(Upstairs(x))) ::: When someone is cooking in the downstairs kitchen, the first floor becomes smokey unless the air conditioner is running.\n∀x (AirConditioner(x) ∧ Running(x) ∧ Cooking(x) ∧ Downstairs(x)) → Smoke(SecondFloor(x)) ::: If the air conditioner is running and someone is cooking in the downstairs kitchen, all the smoke travels to the second floor.\nConclusion:\n∀x (Cooking(x) ∧ Downstairs(x)) → Smoke(Upstairs(x)) ::: If someone is cooking downstairs, it will always cause the first floor to become smokey.\n------\nProblem:\nA person is either a student or a teacher. A student is either a graduate student or an undergraduate student. A graduate student is either a master's student or a doctoral student. A master's student is either a student in the department of computer science or a student in the department of mathematics. A doctoral student is either a student in the"
    ]
  },
  {
    "id": "FOLIO_train_185",
    "context": "There are two kitchens in the house: the upstairs kitchen and the downstairs kitchen. When someone is cooking in the downstairs kitchen, the first floor becomes smokey unless the air conditioner is running. If the air conditioner is running and someone is cooking in the downstairs kitchen, all the smoke travels to the second floor.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If someone is cooking upstairs, the first floor will become smokey.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCooking(x) ::: x is cooking.\nSmoke(x) ::: x is smokey.\nAirConditioner(x) ::: x is an air conditioner.\nRunning(x) ::: x is running.\nUpstairs(x) ::: x is upstairs.\nDownstairs(x) ::: x is downstairs.\nPremises:\n∀x (Cooking(x) ∧ Downstairs(x) → Smoke(firstFloor)) ::: When someone is cooking in the downstairs kitchen, the first floor becomes smokey unless the air conditioner is running.\n∀x (AirConditioner(x) ∧ Running(x) ∧ Cooking(x) ∧ Downstairs(x)) → Smoke(secondFloor) ::: If the air conditioner is running and someone is cooking in the downstairs kitchen, all the smoke travels to the second floor.\nConclusion:\n∀x (Cooking(x) ∧ Upstairs(x)) → Smoke(firstFloor) ::: If someone is cooking upstairs, the first floor will become smokey.\n------\nProblem:\nA person is either a student or a teacher. A student is either a graduate student or an undergraduate student. A graduate student is either a master's student or a doctoral student. A master's student is either a student in the department of computer science or a student in the department of mathematics. A doctoral student is either a student in the department of computer science or a student in"
    ]
  },
  {
    "id": "FOLIO_train_186",
    "context": "There are two kitchens in the house: the upstairs kitchen and the downstairs kitchen. When someone is cooking in the downstairs kitchen, the first floor becomes smokey unless the air conditioner is running. If the air conditioner is running and someone is cooking in the downstairs kitchen, all the smoke travels to the second floor.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If someone is cooking downstairs and the air conditioner is running, there will be smoke upstairs.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCooking(x) ::: x is cooking.\nSmoke(x) ::: x is smokey.\nAirConditioner(x) ::: x is an air conditioner.\nRunning(x) ::: x is running.\nUpstairs(x) ::: x is upstairs.\nDownstairs(x) ::: x is downstairs.\nPremises:\n∀x (Cooking(x) ∧ Downstairs(x) → Smoke(Upstairs(x))) ::: When someone is cooking in the downstairs kitchen, the first floor becomes smokey unless the air conditioner is running.\n∀x (AirConditioner(x) ∧ Running(x) ∧ Cooking(x) ∧ Downstairs(x)) → Smoke(Upstairs(x)) ::: If the air conditioner is running and someone is cooking in the downstairs kitchen, all the smoke travels to the second floor.\nConclusion:\nCooking(x) ∧ Downstairs(x) ∧ AirConditioner(x) ∧ Running(x) → Smoke(Upstairs(x)) ::: If someone is cooking downstairs and the air conditioner is running, there will be smoke upstairs.\n------\nProblem:\nA person is either a student or a teacher. A student is either a graduate student or an undergraduate student. A graduate student is either a master's student or a doctoral student. A master's student is either a student in the department of computer science or a student in the department of mathemat"
    ]
  },
  {
    "id": "FOLIO_train_187",
    "context": "New York City is Located in the United States of America. United States of America is part of North America. North America is in the western hemisphere of the earth. New York City is a highly developed city. If place A is located in place B and place B is located in place C, then place A is located in place C.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A highly developed city is located in the western hemisphere of the earth.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLocated(x, y) ::: x is located in y.\nPartOf(x, y) ::: x is part of y.\nIn(x, y) ::: x is in y.\nDeveloped(x) ::: x is a highly developed city.\nPremises:\nLocated(newYorkCity, unitedStatesOfAmerica) ∧ Located(unitedStatesOfAmerica, northAmerica) ∧ Located(northAmerica, westernHemisphereOfTheEarth) ::: New York City is Located in the United States of America. United States of America is part of North America. North America is in the western hemisphere of the earth.\n∀x ∀y ∀z (Located(x, y) ∧ Located(y, z)) → Located(x, z) ::: If place A is located in place B and place B is located in place C, then place A is located in place C.\nConclusion:\nDeveloped(newYorkCity) ::: New York City is a highly developed city.\nIn(westernHemisphereOfTheEarth, newYorkCity) ::: A highly developed city is located in the western hemisphere of the earth.\n------\nProblem:\nA person who is a student is a person who is enrolled in a school. A person who is a student is a person who is enrolled in a college. A person who is a student is a person who is enrolled in a university. A person who is a"
    ]
  },
  {
    "id": "FOLIO_train_188",
    "context": "New York City is Located in the United States of America. United States of America is part of North America. North America is in the western hemisphere of the earth. New York City is a highly developed city. If place A is located in place B and place B is located in place C, then place A is located in place C.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? USA is not located in western hemisphere of the earth.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLocated(x, y) ::: x is located in y.\nPartOf(x, y) ::: x is part of y.\nIn(x, y) ::: x is in y.\nDeveloped(x) ::: x is a highly developed city.\nPremises:\nLocated(newYorkCity, unitedStatesOfAmerica) ∧ Located(unitedStatesOfAmerica, northAmerica) ∧ Located(northAmerica, westernHemisphereOfTheEarth) ::: New York City is Located in the United States of America. United States of America is part of North America. North America is in the western hemisphere of the earth.\nDeveloped(newYorkCity) ∧ ∀x (Located(x, newYorkCity) → Developed(x)) ::: New York City is a highly developed city.\n∀x ∀y ∀z (Located(x, y) ∧ Located(y, z) → Located(x, z)) ::: If place A is located in place B and place B is located in place C, then place A is located in place C.\nConclusion:\n¬Located(unitedStatesOfAmerica, westernHemisphereOfTheEarth) ::: USA is not located in western hemisphere of the earth.\n------\nProblem:\nA person is a student if and only if the person is enrolled in a university. A person is a student if and only if the person is"
    ]
  },
  {
    "id": "FOLIO_train_189",
    "context": "New York City is Located in the United States of America. United States of America is part of North America. North America is in the western hemisphere of the earth. New York City is a highly developed city. If place A is located in place B and place B is located in place C, then place A is located in place C.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? New York City is located in the New York State.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLocated(x, y) ::: x is located in y.\nPartOf(x, y) ::: x is part of y.\nIn(x, y) ::: x is in y.\nDeveloped(x) ::: x is a highly developed city.\nPremises:\nLocated(newYorkCity, unitedStatesOfAmerica) ∧ PartOf(unitedStatesOfAmerica, northAmerica) ∧ PartOf(northAmerica, westernHemisphere) ::: New York City is Located in the United States of America. United States of America is part of North America. North America is in the western hemisphere of the earth.\nDeveloped(newYorkCity) ::: New York City is a highly developed city.\n∀x ∀y ∀z (Located(x, y) ∧ Located(y, z)) → Located(x, z) ::: If place A is located in place B and place B is located in place C, then place A is located in place C.\nConclusion:\nLocated(newYorkCity, newYorkState) ::: New York City is located in the New York State.\n------\nProblem:\nThe number of people who are not students is greater than the number of people who are students. The number of people who are not students is greater than the number of people who are not students and are not teachers. The number of people who are not students and are not teachers is greater than the number of people who are not students and are not"
    ]
  },
  {
    "id": "FOLIO_train_190",
    "context": "Callus 4 is a poem that was written by the ancient Roman writer Catullus. Callus 4 is a story about the retirement of a well-traveled ship. There is a strong analogy of human aging in the poem Callus 4. Callus 4 is written in an unusual iambic trimeter to convey a sense of speed over the waves.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There exists a poem written by an ancient Roman writer with a strong analogy of human aging.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAncientRomanWriter(x) ::: x is an ancient Roman writer.\nPoem(x) ::: x is a poem.\nStory(x) ::: x is a story.\nRetire(x) ::: x is retired.\nWellTraveled(x) ::: x is well-traveled.\nShip(x) ::: x is a ship.\nHuman(x) ::: x is a human.\nAging(x) ::: x is aging.\nAnalogy(x, y) ::: x is an analogy of y.\nIambicTrimeter(x) ::: x is written in an unusual iambic trimeter.\nPremises:\nPoem(callus4) ∧ AncientRomanWriter(catullus) ∧ Story(callus4) ∧ Retire(callus4) ∧ WellTraveled(callus4) ∧ Ship(callus4) ∧ Human(callus4) ∧ Aging(callus4) ∧ Analogy(callus4, human) ∧ IambicTrimeter(callus4) ::: Callus 4 is a poem that was written by the ancient Roman writer Catullus. Callus 4 is a story about the retirement of a well-traveled ship. There is a strong analogy of human aging in the poem Callus 4. Callus 4 is written in an unusual iambic trimeter to convey a sense of speed over the waves.\nConclusion:\n∃x (Poem(x) ∧ AncientRomanWriter(x) ∧ Story(x) ∧ Retire(x) ∧ WellTraveled(x) ∧ Ship(x) ∧ Human(x) ∧ Aging(x) ∧ Analogy(x, human)) ::: There exists a poem written by an ancient Roman writer with a strong analogy of human aging.\n------"
    ]
  },
  {
    "id": "FOLIO_train_191",
    "context": "Callus 4 is a poem that was written by the ancient Roman writer Catullus. Callus 4 is a story about the retirement of a well-traveled ship. There is a strong analogy of human aging in the poem Callus 4. Callus 4 is written in an unusual iambic trimeter to convey a sense of speed over the waves.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There exists a poem written by an ancient Roman writer written in iambic petameter.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAncientRomanWriter(x) ::: x is an ancient Roman writer.\nPoem(x) ::: x is a poem.\nStory(x) ::: x is a story.\nRetirement(x) ::: x is a retirement.\nWellTraveledShip(x) ::: x is a well-traveled ship.\nHumanAging(x) ::: x is a human aging.\nAnalogy(x, y) ::: x is an analogy of y.\nIambicTrimeter(x) ::: x is an iambic trimeter.\nIambicPentameter(x) ::: x is an iambic pentameter.\nPremises:\nPoem(callus4) ∧ AncientRomanWriter(catullus) ∧ Story(callus4) ∧ Retirement(callus4) ∧ WellTraveledShip(callus4) ∧ HumanAging(callus4) ∧ Analogy(callus4, humanAging) ∧ IambicTrimeter(callus4) ::: Callus 4 is a poem that was written by the ancient Roman writer Catullus. Callus 4 is a story about the retirement of a well-traveled ship. There is a strong analogy of human aging in the poem Callus 4. Callus 4 is written in an unusual iambic trimeter to convey a sense of speed over the waves.\nConclusion:\n∃x ∃y (Poem(x) ∧ AncientRomanWriter(y) ∧ IambicPentameter(x)) ::: There exists a poem written by an ancient Roman writer written in iambic petameter.\n------\nProblem:\nThe 1996 film The English Patient is a romantic drama film directed by Anthony Minghella. The film is based on the 1992 novel of the same name by Michael Ondaatje. The film was shot in Italy"
    ]
  },
  {
    "id": "FOLIO_train_192",
    "context": "Callus 4 is a poem that was written by the ancient Roman writer Catullus. Callus 4 is a story about the retirement of a well-traveled ship. There is a strong analogy of human aging in the poem Callus 4. Callus 4 is written in an unusual iambic trimeter to convey a sense of speed over the waves.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Callus 4 is written in an unusual iambic trimeter to convey a strong analogy of human aging.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPoem(x) ::: x is a poem.\nWritten(x, y) ::: x is written by y.\nStory(x) ::: x is a story.\nRetirement(x) ::: x is a retirement.\nWellTraveled(x) ::: x is a well-traveled ship.\nAnalogy(x, y) ::: x is an analogy of y.\nHuman(x) ::: x is a human.\nAging(x) ::: x is aging.\nIambicTrimeter(x) ::: x is an iambic trimeter.\nSense(x, y) ::: x conveys a sense of y.\nPremises:\nPoem(callus4) ∧ Written(catullus, callus4) ::: Callus 4 is a poem that was written by the ancient Roman writer Catullus.\nStory(callus4) ∧ Retirement(callus4) ∧ WellTraveled(callus4) ::: Callus 4 is a story about the retirement of a well-traveled ship.\n∀x (Poem(x) → Story(x)) ::: All poems are stories.\n∀x (Poem(x) → Retirement(x)) ::: All poems are retirements.\n∀x (Poem(x) → WellTraveled(x)) ::: All poems are well-traveled ships.\n∀x (Poem(x) → Analogy(x, human)) ::: All poems are analogies of humans.\n∀x (Poem(x) → Aging(x)) ::: All poems are aging.\n∀x (Poem(x) → IambicTrimeter(x)) ::: All poems are iambic trimeters.\n∀x (Poem(x) → Sense(x, human)) ::: All poems convey a sense of humans.\nConclusion:\nIambicTrimeter(callus4) �"
    ]
  },
  {
    "id": "FOLIO_train_193",
    "context": "Westworld is an American science fiction-thriller TV series. In 2016, a new television series named Westworld debuted on HBO. The TV series Westworld is adapted from the original film in 1973, which was written and directed by Michael Crichton. The 1973 film Westworld is about robots that malfunction and begin killing the human visitors.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Michael Crichton has directed a film about robots.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFilm(x) ::: x is a film.\nDirect(x, y) ::: x directed y.\nWrite(x, y) ::: x wrote y.\nAdapt(x, y) ::: x is adapted from y.\nDebut(x, y) ::: x debuted in year y.\nPremises:\nFilm(westworld) ∧ Write(michaelCrichton, westworld) ∧ Debut(westworld, year2016) ::: In 2016, a new television series named Westworld debuted on HBO.\nFilm(westworld) ∧ Direct(michaelCrichton, westworld) ::: The TV series Westworld is adapted from the original film in 1973, which was written and directed by Michael Crichton.\nFilm(westworld1973) ∧ Write(michaelCrichton, westworld1973) ∧ Direct(michaelCrichton, westworld1973) ::: The 1973 film Westworld is about robots that malfunction and begin killing the human visitors.\nConclusion:\nDirect(michaelCrichton, westworld1973) ::: Michael Crichton has directed a film about robots.\n------\nProblem:\nThe 2016 Summer Olympics were held in Rio de Janeiro, Brazil. The 2016 Summer Olympics were the 31st Summer Olympics. The 2016 Summer Olympics were the first Summer Olympics to be held in South America. The 2016 Summer Olympics were the first Summer Olympics to be held in a Portuguese-speaking country. The 2016 Summer Olympics were the first Summer Olympics to be held in a tropical country. The 2016 Summer Olympics were the first Summer Olympics to be held in a country with a tropical climate. The 2016 Summer Olympics were the first Summer Olympics to be held in a country with a tropical rainforest climate. The 2016 Summer Olympics were the"
    ]
  },
  {
    "id": "FOLIO_train_194",
    "context": "Westworld is an American science fiction-thriller TV series. In 2016, a new television series named Westworld debuted on HBO. The TV series Westworld is adapted from the original film in 1973, which was written and directed by Michael Crichton. The 1973 film Westworld is about robots that malfunction and begin killing the human visitors.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? An American TV series debuted in 2016.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAmerican(x) ::: x is an American.\nTVSeries(x) ::: x is a TV series.\nDebut(x, y) ::: x debuted in year y.\nAdaptedFrom(x, y) ::: x is adapted from y.\nFilm(x) ::: x is a film.\nWrittenBy(x, y) ::: x is written by y.\nDirectedBy(x, y) ::: x is directed by y.\nMalfunction(x) ::: x malfunctions.\nKill(x, y) ::: x kills y.\nPremises:\nAmerican(westworld) ∧ TVSeries(westworld) ∧ Debut(westworld, year2016) ::: Westworld is an American science fiction-thriller TV series.\n∃x (American(x) ∧ Debut(x, year2016)) ::: In 2016, a new television series named Westworld debuted on HBO.\nFilm(westworld) ∧ WrittenBy(westworld, michaelCrichton) ∧ DirectedBy(westworld, michaelCrichton) ::: The TV series Westworld is adapted from the original film in 1973, which was written and directed by Michael Crichton.\n∃x (Film(x) ∧ WrittenBy(x, michaelCrichton) ∧ DirectedBy(x, michaelCrichton)) ::: The 1973 film Westworld is about robots that malfunction and begin killing the human visitors.\nConclusion:\n∃x (American(x) ∧ TVSeries(x) ∧ Debut(x, year2016)) ::: An American TV series debuted in 2016.\n------\nProblem:\nThe 2016 Summer Olympics were held in Rio de Janeiro, Brazil. The 2016 Summer Olympics was the 31st"
    ]
  },
  {
    "id": "FOLIO_train_195",
    "context": "The 2008 Summer Olympics were held in Beijing, China. The 2008 Summer Olympics were the second Summer Olympic Games to be held in a communist state. China won the most gold medals (48) in the 2008 Summer Olympics. The United States placed second in the gold medal tally but won the highest number of medals overall (112) in the 2008 Summer Olympics. The third place in the gold medal tally was achieved by Russia in the 2008 Summer Olympics. If a country places third in gold medals, then they had fewer gold medals than the team that won the most gold medals. 87 countries won at least one medal during the 2008 Games.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Russia did not win fewer gold medals than China.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSummerOlympics(x) ::: x is a Summer Olympic Games.\nCommunistState(x) ::: x is a communist state.\nGoldMedal(x) ::: x is a gold medal.\nSilverMedal(x) ::: x is a silver medal.\nBronzeMedal(x) ::: x is a bronze medal.\nMedal(x) ::: x is a medal.\nCountry(x) ::: x is a country.\nPlace(x, y) ::: x placed y in the medal tally.\nPremises:\nSummerOlympics(2008SummerOlympics) ∧ SummerOlympics(2008SummerOlympics) ∧ SummerOlympics(2008SummerOlympics) ∧ SummerOlympics(2008SummerOlympics) ::: The 2008 Summer Olympics were held in Beijing, China.\nSummerOlympics(2008SummerOlympics) ∧ CommunistState(china) ::: The 2008 Summer Olympics were the second Summer Olympic Games to be held in a communist state.\nGoldMedal(goldMedal) ∧ SilverMedal(silverMedal) ∧ BronzeMedal(bronzeMedal) ∧ Medal(goldMedal) ∧ Medal(silverMedal) ∧ Medal(bronzeMedal) ::: China won the most gold medals (48) in the 2008 Summer Olympics.\nCountry(unitedStates) ∧ Country(china) ∧ Country(russia) ::: The United States placed second in the gold medal tally but won the highest number of medals overall (112) in the 2008 Summer Olympics.\nCountry(russia) ∧ Place(russia, third) ::: The third place in the gold medal tally was achieved by Russia in the 200"
    ]
  },
  {
    "id": "FOLIO_train_196",
    "context": "The 2008 Summer Olympics were held in Beijing, China. The 2008 Summer Olympics were the second Summer Olympic Games to be held in a communist state. China won the most gold medals (48) in the 2008 Summer Olympics. The United States placed second in the gold medal tally but won the highest number of medals overall (112) in the 2008 Summer Olympics. The third place in the gold medal tally was achieved by Russia in the 2008 Summer Olympics. If a country places third in gold medals, then they had fewer gold medals than the team that won the most gold medals. 87 countries won at least one medal during the 2008 Games.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The United States won fewer gold medals than China.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSummerOlympics(x) ::: x is a Summer Olympic Games.\nCommunistState(x) ::: x is a communist state.\nGoldMedal(x) ::: x is a gold medal.\nSilverMedal(x) ::: x is a silver medal.\nBronzeMedal(x) ::: x is a bronze medal.\nMedal(x) ::: x is a medal.\nPlace(x, y) ::: x placed y in the medal tally.\nCountry(x) ::: x is a country.\nWon(x, y) ::: x won y.\nPremises:\nSummerOlympics(2008SummerOlympics) ∧ SummerOlympics(2008SummerOlympics) ∧ SummerOlympics(2008SummerOlympics) ∧ SummerOlympics(2008SummerOlympics) ::: The 2008 Summer Olympics were held in Beijing, China.\nSummerOlympics(2008SummerOlympics) ∧ CommunistState(china) ::: The 2008 Summer Olympics were the second Summer Olympic Games to be held in a communist state.\nGoldMedal(goldMedal) ∧ SilverMedal(silverMedal) ∧ BronzeMedal(bronzeMedal) ∧ Medal(goldMedal) ∧ Medal(silverMedal) ∧ Medal(bronzeMedal) ::: China won the most gold medals (48) in the 2008 Summer Olympics.\nCountry(unitedStates) ∧ Country(china) ∧ Country(russia) ::: The United States placed second in the gold medal tally but won the highest number of medals overall (112) in the 2008 Summer Olympics.\nCountry(russia) ∧ Place(russia, third) ::: The third place in the"
    ]
  },
  {
    "id": "FOLIO_train_197",
    "context": "The 2008 Summer Olympics were held in Beijing, China. The 2008 Summer Olympics were the second Summer Olympic Games to be held in a communist state. China won the most gold medals (48) in the 2008 Summer Olympics. The United States placed second in the gold medal tally but won the highest number of medals overall (112) in the 2008 Summer Olympics. The third place in the gold medal tally was achieved by Russia in the 2008 Summer Olympics. If a country places third in gold medals, then they had fewer gold medals than the team that won the most gold medals. 87 countries won at least one medal during the 2008 Games.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Russia won fewer gold medals than China.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSummerOlympics(x) ::: x is a Summer Olympic Games.\nCommunistState(x) ::: x is a communist state.\nGoldMedal(x) ::: x is a gold medal.\nSilverMedal(x) ::: x is a silver medal.\nBronzeMedal(x) ::: x is a bronze medal.\nMedal(x) ::: x is a medal.\nPlace(x, y) ::: x placed y in the medal tally.\nCountry(x) ::: x is a country.\nWon(x, y) ::: x won y.\nPremises:\nSummerOlympics(2008SummerOlympics) ∧ SummerOlympics(2008SummerOlympics) ∧ CommunisticState(china) ∧ Place(china, 1) ∧ Place(unitedStates, 2) ∧ Place(russia, 3) ∧ GoldMedal(goldMedal) ∧ SilverMedal(silverMedal) ∧ BronzeMedal(bronzeMedal) ∧ Medal(goldMedal) ∧ Medal(silverMedal) ∧ Medal(bronzeMedal) ∧ Won(china, 48) ∧ Won(unitedStates, 112) ∧ Won(russia, 36) ∧ Won(china, goldMedal) ∧ Won(unitedStates, silverMedal) ∧ Won(russia, bronzeMedal) ∧ Won(china, goldMedal) ∧ Won(unitedStates, silverMedal) ∧ Won(russia, bronzeMedal) ∧ Won(china, goldMedal) ∧ Won(unitedStates, silverMedal) ∧ Won(russia, bronzeMedal) ∧"
    ]
  },
  {
    "id": "FOLIO_train_198",
    "context": "Xiufeng, Xiangshan, Diecai, Qixing are districts in the city of Guilin. Yangshuo is not a district in Guilin.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Xiangshan and Diecai are districts in the same city.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDistrict(x) ::: x is a district.\nCity(x) ::: x is a city.\nSameCity(x, y) ::: x and y are districts in the same city.\nPremises:\nDistrict(xiufeng) ∧ District(xiangshan) ∧ District(diecai) ∧ District(qixing) ::: Xiufeng, Xiangshan, Diecai, Qixing are districts in the city of Guilin.\n¬District(yangshuo) ::: Yangshuo is not a district in Guilin.\nConclusion:\nSameCity(xiangshan, diecai) ::: Xiangshan and Diecai are districts in the same city.\n------\nProblem:\nA person is a student if and only if the person is enrolled in a university. A person is a professor if and only if the person is employed by a university. A person is a teacher if and only if the person is employed by a school. A person is a school if and only if the person is not a university. A person is a university if and only if the person is not a school.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? A person is a student if and only if the person is a teacher.\n###\nPredicates:\nStudent(x) ::: x is a student.\nProfessor(x) ::: x is a professor.\nTeacher(x) ::: x is a teacher.\nSchool(x) ::: x is a school.\nUniversity(x) ::: x is a university.\nPremises:\nStudent(x) ↔ Enrolled(x, university) ::: A person is a student if and only if the person is enrolled in a university.\nProfessor(x) ↔ Employed(x, university) ::: A person is a professor if and only if the person is employed by a university.\nTeacher(x) ↔ Employed(x,"
    ]
  },
  {
    "id": "FOLIO_train_199",
    "context": "Xiufeng, Xiangshan, Diecai, Qixing are districts in the city of Guilin. Yangshuo is not a district in Guilin.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Xiufeng is in Guilin.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDistrict(x) ::: x is a district.\nCity(x) ::: x is a city.\nIn(x, y) ::: x is in y.\nPremises:\nDistrict(xiufeng) ∧ District(xiangshan) ∧ District(diecai) ∧ District(qixing) ::: Xiufeng, Xiangshan, Diecai, Qixing are districts in the city of Guilin.\n¬District(yangshuo) ::: Yangshuo is not a district in Guilin.\nConclusion:\nIn(xiufeng, guilin) ::: Xiufeng is in Guilin.\n------\nProblem:\nA person is a student if and only if the person is enrolled in a university. A person is a professor if and only if the person is employed by a university. A person is a teacher if and only if the person is employed by a school. A person is a school if and only if the person is a school district. A person is a school district if and only if the person is a city. A person is a city if and only if the person is a county. A person is a county if and only if the person is a state. A person is a state if and only if the person is a country. A person is a country if and only if the person is a continent. A person is a continent if and only if the person is a planet. A person is a planet if and only if the person is a star. A person is a star if and only if the person is a galaxy. A person is a galaxy if and only if the person is a universe. A person is a universe if and only if the person is a multiverse.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? A person is a multiverse.\n###\nPredicates:\nStudent(x) ::: x is a student.\nProfessor(x) ::: x is a professor.\nTeacher(x) ::: x is a teacher."
    ]
  },
  {
    "id": "FOLIO_train_200",
    "context": "Xiufeng, Xiangshan, Diecai, Qixing are districts in the city of Guilin. Yangshuo is not a district in Guilin.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Kowloon District is in Hong Kong.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDistrict(x) ::: x is a district.\nCity(x) ::: x is a city.\nIn(x, y) ::: x is in y.\nPremises:\nDistrict(xiufeng) ∧ District(xiangshan) ∧ District(diecai) ∧ District(qixing) ::: Xiufeng, Xiangshan, Diecai, Qixing are districts in the city of Guilin.\n¬District(yangshuo) ::: Yangshuo is not a district in Guilin.\nConclusion:\nIn(kowloonDistrict, hongKong) ::: Kowloon District is in Hong Kong.\n------"
    ]
  },
  {
    "id": "FOLIO_train_201",
    "context": "All people who grow their own fresh vegetables in their home garden also have ample space. If people are young working professionals who live in large cities, then they do not have ample space. If people order takeout from delivery services often, then they grow their own fresh vegetables in their home garden. If people enjoy going out often to restaurants with friends, then they order takeout from delivery services often. If people regularly tout the benefits of homegrown and homecooked meals over fast food, then they enjoy going out often to restaurants with friends. Michael grows his own fresh vegetables in his home garden or regularly touts the benefits of homegrown and homecooked meals over fast food.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Michael enjoys going out often to restaurants with friends.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGrow(x) ::: x grows their own fresh vegetables in their home garden.\nHave(x) ::: x has ample space.\nYoung(x) ::: x is a young working professional.\nLive(x) ::: x lives in a large city.\nOrder(x) ::: x orders takeout from delivery services often.\nTout(x) ::: x regularly touts the benefits of homegrown and homecooked meals over fast food.\nEnjoy(x) ::: x enjoys going out often to restaurants with friends.\nPremises:\n∀x (Grow(x) → Have(x)) ::: All people who grow their own fresh vegetables in their home garden also have ample space.\n∀x"
    ]
  },
  {
    "id": "FOLIO_train_202",
    "context": "All people who grow their own fresh vegetables in their home garden also have ample space. If people are young working professionals who live in large cities, then they do not have ample space. If people order takeout from delivery services often, then they grow their own fresh vegetables in their home garden. If people enjoy going out often to restaurants with friends, then they order takeout from delivery services often. If people regularly tout the benefits of homegrown and homecooked meals over fast food, then they enjoy going out often to restaurants with friends. Michael grows his own fresh vegetables in his home garden or regularly touts the benefits of homegrown and homecooked meals over fast food.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Michael is a young working professional who lives in large cities.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGrow(x) ::: x grows their own fresh vegetables in their home garden.\nHave(x) ::: x has ample space.\nYoung(x) ::: x is a young working professional.\nLive(x, y) ::: x lives in y.\nLarge(y) ::: y is a large city.\nOrder(x) ::: x orders takeout from delivery services often.\nEnjoy(x, y) ::: x enjoys going out often to restaurants with friends.\nRegularly(x, y) ::: x regularly touts the benefits of homegrown and homecooked meals over fast food.\nPremises:\n∀x (Grow(x) → Have(x)) ::: All people who grow their"
    ]
  },
  {
    "id": "FOLIO_train_203",
    "context": "All people who grow their own fresh vegetables in their home garden also have ample space. If people are young working professionals who live in large cities, then they do not have ample space. If people order takeout from delivery services often, then they grow their own fresh vegetables in their home garden. If people enjoy going out often to restaurants with friends, then they order takeout from delivery services often. If people regularly tout the benefits of homegrown and homecooked meals over fast food, then they enjoy going out often to restaurants with friends. Michael grows his own fresh vegetables in his home garden or regularly touts the benefits of homegrown and homecooked meals over fast food.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Michael grows his own fresh vegetables in their home garden or is a young working professional who lives in large cities.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGrow(x) ::: x grows their own fresh vegetables in their home garden.\nEnjoy(x, y) ::: x enjoys y.\nOrder(x) ::: x orders takeout from delivery services often.\nTout(x, y) ::: x regularly touts the benefits of y over z.\nPremises:\n∀x (Grow(x) → AmpleSpace(x)) ::: All people who grow their own fresh vegetables in their home garden also have ample space.\n∀x (YoungWorkingProfessional(x) ∧ LiveInLargeCity(x)) → ¬AmpleSpace(x) ::: If people are young working professionals who live in large cities, then they do not"
    ]
  },
  {
    "id": "FOLIO_train_204",
    "context": "All devices belonging to the company are connected to Google Home. All devices belonging to employees are connected to the company's wifi. All devices connected to Google Home are controlled by the managers. All devices that connect to the company's wifi are easy to operate. IPod1 belongs to employees.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? iPod1 is easy to operate.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCompany(x) ::: x is a company.\nDevice(x) ::: x is a device.\nEmployee(x) ::: x is an employee.\nWifi(x) ::: x is a wifi.\nGoogleHome(x) ::: x is a Google Home.\nConnect(x, y) ::: x is connected to y.\nControl(x, y) ::: x controls y.\nEasyToOperate(x) ::: x is easy to operate.\nPremises:\nCompany(company) ∧ Device(ipod1) ∧ Employee(employee) ∧ Wifi(wifi) ∧ GoogleHome(googleHome) ::: All devices belonging to the company are"
    ]
  },
  {
    "id": "FOLIO_train_205",
    "context": "All devices belonging to the company are connected to Google Home. All devices belonging to employees are connected to the company's wifi. All devices connected to Google Home are controlled by the managers. All devices that connect to the company's wifi are easy to operate. IPod1 belongs to employees.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? iPod1 is controlled by managers.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCompany(x) ::: x is a company.\nDevice(x) ::: x is a device.\nEmployee(x) ::: x is an employee.\nWifi(x) ::: x is a wifi.\nGoogleHome(x) ::: x is a Google Home.\nConnect(x, y) ::: x is connected to y.\nControl(x, y) ::: x controls y.\nEasyToOperate(x) ::: x is easy to operate.\nPremises:\nCompany(company) ∧ Device(ipod1) ∧ Employee(employee) ∧ Wifi(wifi) ∧ GoogleHome(googleHome) ::: All devices belonging to the company are"
    ]
  },
  {
    "id": "FOLIO_train_206",
    "context": "All devices belonging to the company are connected to Google Home. All devices belonging to employees are connected to the company's wifi. All devices connected to Google Home are controlled by the managers. All devices that connect to the company's wifi are easy to operate. IPod1 belongs to employees.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? iPod1 is connected to Google Home.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCompany(x) ::: x is a company.\nDevice(x) ::: x is a device.\nEmployee(x) ::: x is an employee.\nWifi(x) ::: x is a wifi.\nGoogleHome(x) ::: x is Google Home.\nConnect(x, y) ::: x is connected to y.\nControl(x, y) ::: x controls y.\nEasyToOperate(x) ::: x is easy to operate.\nPremises:\nCompany(company) ∧ Device(ipod1) ∧ Employee(employee) ∧ Wifi(wifi) ∧ GoogleHome(googleHome) ::: All devices belonging to the company are connected"
    ]
  },
  {
    "id": "FOLIO_train_207",
    "context": "No touring musicians are permanent members of an orchestra. Musicians are either permanent members of an orchestra or have a unique musical voice or style. All musicians who have a unique musical voice or style are interesting as individual performers. All musicians who are interesting as individual performers are capable of attracting large audiences. If Ryan is interesting as an individual performer and has a unique musical voice or style, then Ryan is either a touring soloist musician and capable of attracting large audiences, or neither a touring soloist musician nor capable of attracting large audiences.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Ryan is interesting as an individual performer.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTouring(x) ::: x is a touring musician.\nPermanent(x) ::: x is a permanent member of an orchestra.\nMusician(x) ::: x is a musician.\nUnique(x) ::: x has a unique musical voice or style.\nInteresting(x) ::: x is interesting as an individual performer.\nCapable(x) ::: x is capable of attracting large audiences.\nPremises:\n¬∀x (Musician(x) → (Permanent(x) ∨ Unique(x))) ::: No touring musicians are permanent members of an orchestra.\n∀x (Musician(x) → (Permanent(x) ��"
    ]
  },
  {
    "id": "FOLIO_train_208",
    "context": "No touring musicians are permanent members of an orchestra. Musicians are either permanent members of an orchestra or have a unique musical voice or style. All musicians who have a unique musical voice or style are interesting as individual performers. All musicians who are interesting as individual performers are capable of attracting large audiences. If Ryan is interesting as an individual performer and has a unique musical voice or style, then Ryan is either a touring soloist musician and capable of attracting large audiences, or neither a touring soloist musician nor capable of attracting large audiences.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Ryan is either a permanent member of an orchestra or a touring soloist musician.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTouring(x) ::: x is a touring musician.\nPermanent(x) ::: x is a permanent member of an orchestra.\nMusician(x) ::: x is a musician.\nUnique(x) ::: x has a unique musical voice or style.\nInteresting(x) ::: x is interesting as an individual performer.\nCapable(x) ::: x is capable of attracting large audiences.\nPremises:\n¬(Touring(x) ∧ Permanent(x)) ::: No touring musicians are permanent members of an orchestra.\n∀x (Musician(x) → (Permanent(x) ∨ Unique(x))) ::: Musicians"
    ]
  },
  {
    "id": "FOLIO_train_209",
    "context": "No touring musicians are permanent members of an orchestra. Musicians are either permanent members of an orchestra or have a unique musical voice or style. All musicians who have a unique musical voice or style are interesting as individual performers. All musicians who are interesting as individual performers are capable of attracting large audiences. If Ryan is interesting as an individual performer and has a unique musical voice or style, then Ryan is either a touring soloist musician and capable of attracting large audiences, or neither a touring soloist musician nor capable of attracting large audiences.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Ryan is either a permanent member of an orchestra or has a unique musical voice or style.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTouring(x) ::: x is a touring musician.\nPermanent(x) ::: x is a permanent member of an orchestra.\nMusician(x) ::: x is a musician.\nUnique(x) ::: x has a unique musical voice or style.\nInteresting(x) ::: x is interesting as an individual performer.\nCapable(x) ::: x is capable of attracting large audiences.\nPremises:\n¬(Touring(x) ∧ Permanent(x)) ::: No touring musicians are permanent members of an orchestra.\n∀x (Musician(x) → (Permanent(x) ∨ Unique(x))) ::: Musicians"
    ]
  },
  {
    "id": "FOLIO_train_210",
    "context": "If someone yells, then they are not cool. If someone is angry, then they yell. If someone flies, then they are cool. Every person that knows magic can fly. All wizards know magic. Harry either yells and flies, or neither yells nor flies. Potter is a wizard and flies.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Harry is cool.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nYell(x) ::: x yells.\nAngry(x) ::: x is angry.\nCool(x) ::: x is cool.\nFly(x) ::: x flies.\nKnow(x, y) ::: x knows y.\nMagic(x) ::: x is magic.\nPremises:\n∀x (Yell(x) → ¬Cool(x)) ::: If someone yells, then they are not cool.\n∀x (Angry(x) → Yell(x)) ::: If someone is angry, then they yell.\n∀x (Fly(x) → Cool(x)) ::: If someone flies, then they are cool.\n∀x (Know(x, magic) → Fly(x)) ::: Every person that knows magic can fly.\n∀x (Wizard(x) → Know(x, magic)) ::: All wizards know magic.\nHarry(yell) ∨ Harry(fly) ::: Harry either yells and flies, or neither yells nor flies.\nPotter(wizard) ∧ Fly(potter) ::: Potter is a wizard and flies.\nConclusion:\nCool(harry) ::: Harry is cool.\n------"
    ]
  },
  {
    "id": "FOLIO_train_211",
    "context": "If someone yells, then they are not cool. If someone is angry, then they yell. If someone flies, then they are cool. Every person that knows magic can fly. All wizards know magic. Harry either yells and flies, or neither yells nor flies. Potter is a wizard and flies.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Harry is not cool.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nYell(x) ::: x yells.\nAngry(x) ::: x is angry.\nCool(x) ::: x is cool.\nFly(x) ::: x flies.\nKnow(x, y) ::: x knows y.\nMagic(x) ::: x is magic.\nPremises:\n∀x (Yell(x) → ¬Cool(x)) ::: If someone yells, then they are not cool.\n∀x (Angry(x) → Yell(x)) ::: If someone is angry, then they yell.\n∀x (Fly(x) → Cool(x)) ::: If someone flies, then they are cool.\n∀x (Know(x, magic) → Fly(x)) ::: Every person that knows magic can fly.\n∀x (Wizard(x) → Know(x, magic)) ::: All wizards know magic.\nHarry(yell) ∨ Harry(fly) ::: Harry either yells and flies, or neither yells nor flies.\nPotter(wizard) ∧ Fly(potter) ::: Potter is a wizard and flies.\nConclusion:\n¬Cool(harry) ::: Harry is not cool."
    ]
  },
  {
    "id": "FOLIO_train_212",
    "context": "If someone yells, then they are not cool. If someone is angry, then they yell. If someone flies, then they are cool. Every person that knows magic can fly. All wizards know magic. Harry either yells and flies, or neither yells nor flies. Potter is a wizard and flies.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Harry is a wizard or angry.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nYell(x) ::: x yells.\nAngry(x) ::: x is angry.\nCool(x) ::: x is cool.\nFly(x) ::: x flies.\nKnow(x, y) ::: x knows y.\nPremises:\n∀x (Yell(x) → ¬Cool(x)) ::: If someone yells, then they are not cool.\n∀x (Angry(x) → Yell(x)) ::: If someone is angry, then they yell.\n∀x (Fly(x) → Cool(x)) ::: If someone flies, then they are cool.\n∀x (Know(x, magic) → Fly(x)) ::: Every person that knows magic can fly.\n∀x (Wizard(x) → Know(x, magic)) ::: All wizards know magic.\nHarry(yell) ∨ Harry(fly) ::: Harry either yells and flies, or neither yells nor flies.\nPotter(wizard) ∧ Fly(potter) ::: Potter is a wizard and flies.\nConclusion:\nHarry(wizard) ∨ Harry(angry) ::: Harry is a wizard or angry."
    ]
  },
  {
    "id": "FOLIO_train_213",
    "context": "If someone yells, then they are not cool. If someone is angry, then they yell. If someone flies, then they are cool. Every person that knows magic can fly. All wizards know magic. Harry either yells and flies, or neither yells nor flies. Potter is a wizard and flies.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Harry is neither a wizard nor angry.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nYell(x) ::: x yells.\nAngry(x) ::: x is angry.\nCool(x) ::: x is cool.\nFly(x) ::: x flies.\nKnow(x, y) ::: x knows y.\nPremises:\n∀x (Yell(x) → ¬Cool(x)) ::: If someone yells, then they are not cool.\n∀x (Angry(x) → Yell(x)) ::: If someone is angry, then they yell.\n∀x (Fly(x) → Cool(x)) ::: If someone flies, then they are cool.\n∀x (Know(x, magic) → Fly(x)) ::: Every person that knows magic can fly.\n∀x (Wizard(x) → Know(x, magic)) ::: All wizards know magic.\nHarry(yell) ∨ Harry(fly) ::: Harry either yells and flies, or neither yells nor flies.\nPotter(wizard) ∧ Fly(potter) ::: Potter is a wizard and flies.\nConclusion:\n¬(Harry(wizard) ∧ Angry(harry)) ::: Harry is neither a wizard"
    ]
  },
  {
    "id": "FOLIO_train_214",
    "context": "Products are either produced in China or the US. All produced in China are labeled. All produced in the US are sold in the US. If labeled, then the product is cheaper. All sold in the US are sold in Walmart. All displayed on the homepage are sold in Walmart. No products returned by customers are sold in Walmart. G-910 is either displayed on the homepage or cheaper.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? G-910 is displayed on the homepage.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProduced(x) ::: x is produced in China or the US.\nLabeled(x) ::: x is labeled.\nCheaper(x) ::: x is cheaper.\nSold(x) ::: x is sold.\nSoldInWalmart(x) ::: x is sold in Walmart.\nDisplayedOnHomepage(x) ::: x is displayed on the homepage.\nReturnedByCustomers(x) ::: x is returned by customers.\nPremises:\n∀x (Produced(x) → (Labeled(x) ∨ ¬Labeled(x))) ::: All products produced in China or the US are labeled.\n∀x (Produced(x) → (Sold(x) ∨ ¬Sold(x))) ::: All products produced in China or the US are sold.\n∀x (Produced(x) → (Sold(x) → SoldInWalmart(x))) ::: All products produced in China or the US are sold in Walmart.\n∀x (Labeled(x) → Cheaper(x)) ::: If labeled, then the product is cheaper.\n∀x (SoldInWalmart(x) → DisplayedOnHomepage(x)) ::: All products sold in Wal"
    ]
  },
  {
    "id": "FOLIO_train_215",
    "context": "Products are either produced in China or the US. All produced in China are labeled. All produced in the US are sold in the US. If labeled, then the product is cheaper. All sold in the US are sold in Walmart. All displayed on the homepage are sold in Walmart. No products returned by customers are sold in Walmart. G-910 is either displayed on the homepage or cheaper.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? G-910 is not displayed on the homepage.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProduced(x) ::: x is produced in China or the US.\nLabeled(x) ::: x is labeled.\nCheaper(x) ::: x is cheaper.\nSold(x) ::: x is sold.\nSoldInWalmart(x) ::: x is sold in Walmart.\nDisplayedOnHomepage(x) ::: x is displayed on the homepage.\nReturnedByCustomers(x) ::: x is returned by customers.\nPremises:\n∀x (Produced(x) → (Labeled(x) ∨ Cheaper(x))) ::: Products are either produced in China or the US.\n∀x (Produced(x) ∧ Labeled(x)) → Cheaper(x) ::: All produced in China are labeled.\n∀x (Produced(x) ∧ Cheaper(x)) → Sold(x) ::: All produced in the US are sold in the US.\n∀x (Sold(x) → SoldInWalmart(x)) ::: If labeled, then the product is cheaper.\n∀x (SoldInWalmart(x) → DisplayedOnHomepage(x)) ::: All sold in Walmart are sold in Walmart.\n∀x ("
    ]
  },
  {
    "id": "FOLIO_train_216",
    "context": "Products are either produced in China or the US. All produced in China are labeled. All produced in the US are sold in the US. If labeled, then the product is cheaper. All sold in the US are sold in Walmart. All displayed on the homepage are sold in Walmart. No products returned by customers are sold in Walmart. G-910 is either displayed on the homepage or cheaper.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? G-910 is a product returned by customers.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProduced(x) ::: x is produced in China or the US.\nLabeled(x) ::: x is labeled.\nSold(x) ::: x is sold.\nCheaper(x) ::: x is cheaper.\nSoldInWalmart(x) ::: x is sold in Walmart.\nDisplayedOnHomepage(x) ::: x is displayed on the homepage.\nReturnedByCustomers(x) ::: x is returned by customers.\nPremises:\n∀x (Produced(x) → (Labeled(x) ∨ ¬Labeled(x))) ::: All products produced in China or the US are labeled.\n∀x (Produced(x) → (Sold(x) ∨ ¬Sold(x))) ::: All products produced in China or the US are sold.\n∀x (Sold(x) → (SoldInWalmart(x) ∨ ¬SoldInWalmart(x))) ::: All products sold are sold in Walmart.\n∀x (Labeled(x) → Cheaper(x)) ::: If labeled, then the product is cheaper.\n∀x (SoldInWalmart(x) → DisplayedOnHomepage(x)) :::"
    ]
  },
  {
    "id": "FOLIO_train_217",
    "context": "Products are either produced in China or the US. All produced in China are labeled. All produced in the US are sold in the US. If labeled, then the product is cheaper. All sold in the US are sold in Walmart. All displayed on the homepage are sold in Walmart. No products returned by customers are sold in Walmart. G-910 is either displayed on the homepage or cheaper.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? G-910 is a product returned by customers or sold in Walmart.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProduced(x) ::: x is produced in China or the US.\nLabeled(x) ::: x is labeled.\nSold(x) ::: x is sold.\nCheaper(x) ::: x is cheaper.\nSoldInWalmart(x) ::: x is sold in Walmart.\nDisplayedOnHomepage(x) ::: x is displayed on the homepage.\nReturnedByCustomers(x) ::: x is returned by customers.\nPremises:\n∀x (Produced(x) → (Labeled(x) ∨ ¬Labeled(x))) ::: All products produced in China or the US are labeled.\n∀x (Produced(x) → (Sold(x) ∨ ¬Sold(x))) ::: All products produced in China or the US are sold.\n∀x (Sold(x) → (SoldInWalmart(x) ∨ ¬SoldInWalmart(x))) ::: All products sold are sold in Walmart.\n∀x (Labeled(x) → Cheaper(x)) ::: If labeled, then the product is cheaper.\n∀x (SoldInWalmart(x) → DisplayedOnHomepage(x)) :::"
    ]
  },
  {
    "id": "FOLIO_train_218",
    "context": "Products are either produced in China or the US. All produced in China are labeled. All produced in the US are sold in the US. If labeled, then the product is cheaper. All sold in the US are sold in Walmart. All displayed on the homepage are sold in Walmart. No products returned by customers are sold in Walmart. G-910 is either displayed on the homepage or cheaper.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? G-910 is either returned by customers or sold in Walmart.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProduced(x) ::: x is produced in China or the US.\nLabeled(x) ::: x is labeled.\nCheaper(x) ::: x is cheaper.\nSold(x) ::: x is sold.\nSoldInWalmart(x) ::: x is sold in Walmart.\nDisplayedOnHomepage(x) ::: x is displayed on the homepage.\nReturnedByCustomers(x) ::: x is returned by customers.\nPremises:\n∀x (Produced(x) → (Labeled(x) ∨ Cheaper(x))) ::: Products are either produced in China or the US.\n∀x (Produced(x) ∧ Labeled(x)) → Cheaper(x) ::: All produced in China are labeled.\n∀x (Produced(x) ∧ Cheaper(x)) → Sold(x) ::: All produced in the US are sold in the US.\n∀x (Sold(x) → SoldInWalmart(x)) ::: If labeled, then the product is cheaper.\n∀x (SoldInWalmart(x) → DisplayedOnHomepage(x)) ::: All sold in Walmart are sold in Walmart.\n∀x ("
    ]
  },
  {
    "id": "FOLIO_train_219",
    "context": "People either order a lot of Amazon packages or are environmentally conscious. If people order a lot of Amazon packages, then they get a lot of daily mail delivered. If people are environmentally conscious, then they have solar panels in their homes. If people get a lot of daily mail delivered, then they are very involved with their neighborhood. If people have solar panels in their homes, then they save a lot of money. If Marcy either gets a lot of mail and is very involved with her neighborhood or if she does not order a lot of Amazon packages nor is very involved with her neighborhood, then Marcy does not both get a lot of daily mail and order a lot of Amazon packages.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Marcy either orders a lot of Amazon packages or saves a lot of money.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nOrder(x) ::: x orders a lot of Amazon packages.\nEnvironmentallyConscious(x) ::: x is environmentally conscious.\nGetMail(x) ::: x gets a lot of daily mail delivered.\nInvolved(x) ::: x is very involved with their neighborhood.\nHaveSolarPanels(x) ::: x has solar panels in their homes.\nSaveMoney(x) ::: x saves a lot of money.\nPremises:\n∀x (Order(x) → GetMail(x)) ::: If people order a lot of Amazon packages, then they get a lot of daily mail delivered.\n∀x (EnvironmentallyConscious(x) → HaveSolarPanels(x)) ::: If people are environmentally conscious, then they have solar panels in their homes.\n∀x (GetMail(x) → Involved(x)) ::: If people get a lot of daily mail delivered, then they are very involved with their neighborhood.\n∀x (HaveSolarPanels(x) → SaveMoney(x)) ::: If people have solar panels in their homes, then they save a lot of money.\n∀x (Order(x) ∨ EnvironmentallyConscious(x)) ::: People either order a lot of Amazon packages or are environmentally conscious."
    ]
  },
  {
    "id": "FOLIO_train_220",
    "context": "People either order a lot of Amazon packages or are environmentally conscious. If people order a lot of Amazon packages, then they get a lot of daily mail delivered. If people are environmentally conscious, then they have solar panels in their homes. If people get a lot of daily mail delivered, then they are very involved with their neighborhood. If people have solar panels in their homes, then they save a lot of money. If Marcy either gets a lot of mail and is very involved with her neighborhood or if she does not order a lot of Amazon packages nor is very involved with her neighborhood, then Marcy does not both get a lot of daily mail and order a lot of Amazon packages.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Marcy is not a person who orders a lot of Amazon packages and is very environmentally conscious, then Taylor is not someone who saves a lot of money and is environmentally conscious.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nOrder(x) ::: x orders a lot of Amazon packages.\nEnvironmentallyConscious(x) ::: x is environmentally conscious.\nGetMail(x) ::: x gets a lot of daily mail delivered.\nInvolved(x) ::: x is very involved with their neighborhood.\nSave(x) ::: x saves a lot of money.\nHave(x, y) ::: x has y.\nPremises:\n∀x (Order(x) → GetMail(x)) ::: If people order a lot of Amazon packages, then they get a lot of daily mail delivered.\n∀x (EnvironmentallyConscious(x) → Have(x, solarPanels)) ::: If people are environmentally conscious, then they have solar panels in their homes.\n∀x (GetMail(x) → Involved(x)) ::: If people get a lot of daily mail delivered, then they are very involved with their neighborhood.\n∀x (Have(x, solarPanels) → Save(x)) ::: If people have solar panels in their homes, then they save a lot of money.\n(Order(marcy) ∨ EnvironmentallyConscious(marcy)) ∧ ¬(Order(marcy) ∧ EnvironmentallyConscious(marcy)) ::: If Marcy either gets a lot of mail and is very involved with her neighborhood or if she does not order a lot of Amazon packages nor is very involved with her neighborhood, then Marcy does not both get a lot of daily mail and order a lot of Amazon packages.\nConclusion:\n(¬Order(marcy) ∧ EnvironmentallyConscious(marcy)) → ¬(Save(taylor) ∧ EnvironmentallyConscious(taylor)) ::: If Marcy is not a person who orders a lot of Amazon packages and is environmentally conscious, then Taylor is not someone who saves a lot of money and is environmentally conscious.\n------"
    ]
  },
  {
    "id": "FOLIO_train_221",
    "context": "Indonesia is a country. In Indonesia, the prosecutor only personally investigates cases of some special crimes. Corruption is a type of crime. Once the police complete investigations of a crime, they hand the evidence to the prosecutor. Evidence can be either satisfactory or unsatisfactory. If the police hand the evidence to the prosecutor and the evidence is satisfactory, the prosecutor will prosecute the offender in an appropriate court.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? When the police complete investigations, the prosecutor will prosecute the offender at an appropriate court.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCountry(x) ::: x is a country.\nCrime(x) ::: x is a crime.\nCorruption(x) ::: x is corruption.\nPersonallyInvestigate(x, y) ::: x personally investigates y.\nSpecialCrime(x) ::: x is a special crime.\nComplete(x) ::: x is complete.\nHand(x, y) ::: x hands y to z.\nEvidence(x) ::: x is evidence.\nSatisfactory(x) ::: x is satisfactory.\nProsecute(x, y) ::: x prosecutes y in court y.\nAppropriate(x, y) ::: x is an appropriate court for y.\nPremises:\nCountry(indonesia) ::: Indonesia is a country.\n∀x (PersonallyInvestigate(x, y) → Crime(y)) ::: In Indonesia, the prosecutor only personally investigates cases of some special crimes.\nCorruption(corruption) ::: Corruption is a type of crime.\nComplete(complete) ::: Once the police complete investigations of a crime, they hand the evidence to the prosecutor.\n∀x (Hand(x, y) → Satisfactory(y)) ::: Evidence can be either satisfactory or unsatisfactory.\n∀x (Hand(x, y) ∧ Satisfactory(y) → Prosecute(x, y)) ::: If the police hand the evidence to the prosecutor and the evidence is satisfactory, the prosecutor will prosecute the offender in an appropriate court.\nConclusion:\n∀x (Complete(x) → Prosecute(prosecutor, appropriateCourt)) ::: When the police complete investigations, the prosecutor will prosecute the offender at an appropriate court.\n------\nProblem:\nA person is a student if and only if the person is enrolled in a university. A person"
    ]
  },
  {
    "id": "FOLIO_train_222",
    "context": "Indonesia is a country. In Indonesia, the prosecutor only personally investigates cases of some special crimes. Corruption is a type of crime. Once the police complete investigations of a crime, they hand the evidence to the prosecutor. Evidence can be either satisfactory or unsatisfactory. If the police hand the evidence to the prosecutor and the evidence is satisfactory, the prosecutor will prosecute the offender in an appropriate court.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? In Indonesia, the prosecutor personally investigates cases of corruption.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCountry(x) ::: x is a country.\nProsecutor(x) ::: x is a prosecutor.\nPersonallyInvestigate(x, y) ::: x personally investigates y.\nCrime(x) ::: x is a crime.\nSpecial(x) ::: x is a special crime.\nPolice(x) ::: x is a police.\nComplete(x) ::: x completes investigations.\nHand(x, y) ::: x hands y to z.\nEvidence(x) ::: x is evidence.\nSatisfactory(x) ::: x is satisfactory.\nProsecute(x, y) ::: x prosecutes y in an appropriate court.\nPremises:\nCountry(indonesia) ::: Indonesia is a country.\n∀x (Prosecutor(x) → PersonallyInvestigate(x, Crime)) ::: In Indonesia, the prosecutor only personally investigates cases of some special crimes.\nCorruption ∧ Special(corruption) ::: Corruption is a type of crime.\n∀x (Police(x) → Complete(x)) ::: Once the police complete investigations of a crime, they hand the evidence to the prosecutor.\n∀x (Evidence(x) → Satisfactory(x) ∨ Unsatisfactory(x)) ::: Evidence can be either satisfactory or unsatisfactory.\n∀x (Hand(x, y) ∧ Satisfactory(y)) → Prosecute(x, y) ::: If the police hand the evidence to the prosecutor and the evidence is satisfactory, the prosecutor will prosecute the offender in an appropriate court.\nConclusion:\nPersonallyInvestigate(prosecutor, corruption) ::: In Indonesia, the prosecutor personally investigates cases of corruption.\n------\nProblem:\nA person is a student if and only if the person is en"
    ]
  },
  {
    "id": "FOLIO_train_223",
    "context": "Indonesia is a country. In Indonesia, the prosecutor only personally investigates cases of some special crimes. Corruption is a type of crime. Once the police complete investigations of a crime, they hand the evidence to the prosecutor. Evidence can be either satisfactory or unsatisfactory. If the police hand the evidence to the prosecutor and the evidence is satisfactory, the prosecutor will prosecute the offender in an appropriate court.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? When the police complete investigations, the prosecutor investigates in personally.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCountry(x) ::: x is a country.\nProsecutor(x) ::: x is a prosecutor.\nPersonally(x) ::: x personally investigates.\nCrime(x) ::: x is a crime.\nCorruption(x) ::: x is corruption.\nPolice(x) ::: x is a police.\nComplete(x) ::: x completes investigations.\nHand(x, y) ::: x hands the evidence to y.\nEvidence(x) ::: x is evidence.\nSatisfactory(x) ::: x is satisfactory.\nProsecute(x, y) ::: x prosecutes y in an appropriate court.\nPremises:\nCountry(indonesia) ::: Indonesia is a country.\n∀x (Prosecutor(x) → Personally(x)) ::: In Indonesia, the prosecutor only personally investigates cases of some special crimes.\nCrime(corruption) ::: Corruption is a type of crime.\n∀x (Police(x) → ∃y (Complete(x, y) ∧ Hand(x, y))) ::: Once the police complete investigations of a crime, they hand the evidence to the prosecutor.\n∀x (Evidence(x) → ∃y (Satisfactory(x) ∧ Hand(x, y))) ::: Evidence can be either satisfactory or unsatisfactory.\n∀x (Hand(x, y) ∧ Satisfactory(x) → Prosecute(y, x)) ::: If the police hand the evidence to the prosecutor and the evidence is satisfactory, the prosecutor will prosecute the offender in an appropriate court.\nConclusion:\nPersonally(prosecutor) ::: When the police complete investigations, the prosecutor investigates in personally.\n------\nProblem:\nA person is a student if and only if"
    ]
  },
  {
    "id": "FOLIO_train_224",
    "context": "No watch that is battery-powered is automatic. All digital watches are battery-powered. Some mechanical watches are automatic. All smart watches are digital. Moonwatch is not a digital watch or an automatic.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Moonwatch is a mechanical watch.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBatteryPowered(x) ::: x is a battery-powered watch.\nAutomatic(x) ::: x is an automatic watch.\nMechanical(x) ::: x is a mechanical watch.\nDigital(x) ::: x is a digital watch.\nSmart(x) ::: x is a smart watch.\nPremises:\n¬(BatteryPowered(x) ∧ Automatic(x)) ::: No watch that is battery-powered is automatic.\n∀x (Digital(x) → BatteryPowered(x)) ::: All digital watches are battery-powered.\n∃x (Mechanical(x) ∧ Automatic(x)) ::: Some mechanical watches are automatic.\n∀x (Smart(x) → Digital(x)) ::: All smart watches are digital.\nMoonwatch ∧ ¬(Digital(moonwatch) ∨ Automatic(moonwatch)) ::: Moonwatch is not a digital watch or an automatic.\nConclusion:\nMechanical(moonwatch) ::: Moonwatch is a mechanical watch.\n------\nProblem:\nAll people who are not students are either employed or unemployed. All people who are employed are either employed full-time or employed part-time. All people who are employed full-time are employed. All people who are employed part-time are employed. All people who are employed are either employed full-time or employed part-time. All people who are employed full-time are employed. All people who are employed part-time are employed. All people who are employed are either employed full-time or employed part-time. All people who are employed full-time are employed. All people who are employed part-time are employed. All people who are employed are either employed full-time or employed part-time. All people who are employed full-time are employed. All people who are employed part-time are employed. All people who are employed are"
    ]
  },
  {
    "id": "FOLIO_train_225",
    "context": "No watch that is battery-powered is automatic. All digital watches are battery-powered. Some mechanical watches are automatic. All smart watches are digital. Moonwatch is not a digital watch or an automatic.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Moonwatch is a smartwatch and a mechanical watch.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBatteryPowered(x) ::: x is a battery-powered watch.\nAutomatic(x) ::: x is an automatic watch.\nMechanical(x) ::: x is a mechanical watch.\nDigital(x) ::: x is a digital watch.\nSmart(x) ::: x is a smart watch.\nPremises:\n¬(BatteryPowered(x) ∧ Automatic(x)) ::: No watch that is battery-powered is automatic.\n∀x (Digital(x) → BatteryPowered(x)) ::: All digital watches are battery-powered.\n∃x (Mechanical(x) ∧ Automatic(x)) ::: Some mechanical watches are automatic.\n∀x (Smart(x) → Digital(x)) ::: All smart watches are digital.\n∃x (¬Digital(x) ∧ ¬Automatic(x)) ::: Moonwatch is not a digital watch or an automatic.\nConclusion:\nMechanical(moonwatch) ∧ Smart(moonwatch) ::: Moonwatch is a smartwatch and a mechanical watch.\n------\nProblem:\nAll people who are not students are either employed or unemployed. All people who are employed are either employed full-time or employed part-time. All people who are employed full-time are employed. All people who are employed part-time are employed. All people who are employed are either employed full-time or employed part-time. All people who are employed full-time are employed. All people who are employed part-time are employed. All people who are employed are either employed full-time or employed part-time. All people who are employed full-time are employed. All people who are employed part-time are employed. All people who are employed are either employed full-time or employed part-time. All people who are employed full-time are employed. All people who are employed part-time are"
    ]
  },
  {
    "id": "FOLIO_train_226",
    "context": "No watch that is battery-powered is automatic. All digital watches are battery-powered. Some mechanical watches are automatic. All smart watches are digital. Moonwatch is not a digital watch or an automatic.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Moonwatch is a smartwatch and a mechanical watch, then Moonwatch is not a mechanical watch.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBatteryPowered(x) ::: x is battery-powered.\nAutomatic(x) ::: x is automatic.\nMechanical(x) ::: x is mechanical.\nDigital(x) ::: x is digital.\nSmartWatch(x) ::: x is a smart watch.\nPremises:\n¬(BatteryPowered(x) ∧ Automatic(x)) ::: No watch that is battery-powered is automatic.\n∀x (Digital(x) → BatteryPowered(x)) ::: All digital watches are battery-powered.\n∃x (Mechanical(x) ∧ Automatic(x)) ::: Some mechanical watches are automatic.\n∀x (SmartWatch(x) → Digital(x)) ::: All smart watches are digital.\n∃x (¬Digital(x) ∧ ¬Automatic(x)) ::: Moonwatch is not a digital watch or an automatic.\nConclusion:\n(Mechanical(moonwatch) ∧ Automatic(moonwatch)) → ¬Mechanical(moonwatch) ::: If Moonwatch is a smartwatch and a mechanical watch, then Moonwatch is not a mechanical watch.\n------\nProblem:\nAll people who are not students are either employed or unemployed. All people who are employed are either employed full-time or employed part-time. All people who are employed full-time are employed. All people who are employed part-time are employed. All people who are employed are either employed full-time or employed part-time. All people who are employed full-time are employed. All people who are employed part-time are employed. All people who are employed are either employed full-time or employed part-time. All people who are employed full-time are employed. All people who are employed part-time are employed. All people who are employed are either employed full-time or employed part-time. All people who"
    ]
  },
  {
    "id": "FOLIO_train_227",
    "context": "No watch that is battery-powered is automatic. All digital watches are battery-powered. Some mechanical watches are automatic. All smart watches are digital. Moonwatch is not a digital watch or an automatic.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Moonwatch is a mechanical or battery-powered watch, then Moonwatch is not a smartwatch.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBatteryPowered(x) ::: x is a battery-powered watch.\nAutomatic(x) ::: x is an automatic watch.\nMechanical(x) ::: x is a mechanical watch.\nDigital(x) ::: x is a digital watch.\nSmart(x) ::: x is a smart watch.\nPremises:\n¬(BatteryPowered(x) ∧ Automatic(x)) ::: No watch that is battery-powered is automatic.\n∀x (Digital(x) → BatteryPowered(x)) ::: All digital watches are battery-powered.\n∃x (Mechanical(x) ∧ Automatic(x)) ::: Some mechanical watches are automatic.\n∀x (Smart(x) → Digital(x)) ::: All smart watches are digital.\n∃x (¬Digital(x) ∧ ¬Automatic(x)) ::: Moonwatch is not a digital watch or an automatic.\nConclusion:\n(Mechanical(moonwatch) ∨ BatteryPowered(moonwatch)) → ¬Smart(moonwatch) ::: If Moonwatch is a mechanical or battery-powered watch, then Moonwatch is not a smartwatch.\n------\nProblem:\nAll people who are not students are either employed or unemployed. All people who are employed are either employed full-time or employed part-time. All people who are employed full-time are employed. All people who are employed part-time are employed. All people who are employed are either employed full-time or employed part-time. All people who are employed full-time are employed. All people who are employed part-time are employed. All people who are employed are either employed full-time or employed part-time. All people who are employed full-time are employed. All people who are employed part-time are employed. All people who are employed are either employed full-time or employed"
    ]
  },
  {
    "id": "FOLIO_train_228",
    "context": "If a person can distinguish the taste of different condiments, then he/she can also use different condiments to cook. People who have the talent of cooking can distinguish the taste of different condiments. Only people with the talent of cooking can make delicious meals. If the meal is popular at the party, then it is delicious. John can make meals which are popular at the party.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? John cannot use different condiments to cook.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDistinguish(x, y) ::: x can distinguish the taste of y.\nUse(x, y) ::: x can use y.\nTalent(x, y) ::: x has the talent of y.\nDelicious(x) ::: x is delicious.\nPopular(x) ::: x is popular.\nMake(x, y) ::: x can make y.\nPremises:\n∀x (Distinguish(x, condiments) → Use(x, condiments)) ::: If a person can distinguish the taste of different condiments, then he/she can also use different condiments to cook.\n∀x (Talent(x, cooking) → Distinguish(x, condiments)) ::: People who have the talent of cooking can distinguish the taste of different condiments.\n∀x (Talent(x, cooking) → Make(x, meal)) ::: Only people with the talent of cooking can make delicious meals.\nPopular(meal) → Delicious(meal) ::: If the meal is popular at the party, then it is delicious.\nMake(john, meal) ::: John can make meals which are popular at the party.\nConclusion:\n¬Use(john, condiments) ::: John cannot use different condiments to cook.\n------\nProblem:\nIf a person is a student, then he/she is a person who is studying. If a person is a student, then he/she is a person who is studying. If a person is a student, then he/she is a person who is studying. If a person is a student, then he/she is a person who is studying. If a person is a student, then he/she is a person who is studying. If a person is a student, then he/she is a person who is studying. If a person is a student, then he/she is a person who is studying. If a person is a student, then he"
    ]
  },
  {
    "id": "FOLIO_train_229",
    "context": "Effective monetary policy is possible with successful inflation control and a strong national currency. A country cannot simultaneously regulate the exchange rate and successfully control inflation. The introduction of an embargo on foreign trade goods in a country leads to a sharp decrease in exports. If exports fall sharply, the national currency cannot be in this country. Regulation of the exchange rate is required to have a strong national currency. There is an embargo on Russian foreign trade goods.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? In Russia, an effective monetary policy is possible.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEmbargo(x) ::: x is an embargo on foreign trade goods.\nExports(x) ::: x is exports.\nSharpDecrease(x) ::: x is a sharp decrease.\nRegulate(x, y) ::: x regulates y.\nSuccessful(x) ::: x is successful.\nControl(x, y) ::: x controls y.\nPremises:\nEffectiveMonetaryPolicy(x) ∧ SuccessfulInflationControl(x) ∧ StrongNationalCurrency(x) ::: Effective monetary policy is possible with successful inflation control and a strong national currency.\n∀x (Embargo(x) ∧ Exports(x)) → SharpDecrease(x) ::: A country cannot simultaneously regulate the exchange rate and successfully control inflation.\n∀x (Embargo(x) ∧ Exports(x)) → ¬StrongNationalCurrency(x) ::: The introduction of an embargo on foreign trade goods in a country leads to a sharp decrease in exports.\n∀x (Regulate(x, y) ∧ StrongNationalCurrency(y)) ::: If exports fall sharply, the national currency cannot be in this country.\nRegulate(x, y) ::: Regulation of the exchange rate is required to have a strong national currency.\nEmbargo(russian) ::: There is an embargo on Russian foreign trade goods.\nConclusion:\nEffectiveMonetaryPolicy(russian) ::: In Russia, an effective monetary policy is possible.\n------\nProblem:\nA person who is a student is a person who is studying. A person who is studying is a person who is learning. A person who is learning is a person who is acquiring knowledge. A person who is acquiring knowledge is a person who is gaining knowledge. A person who is gaining knowledge is a person who is increasing their knowledge. A person who is increasing their knowledge is a person who is becoming more"
    ]
  },
  {
    "id": "FOLIO_train_230",
    "context": "Video Gag is a French television series that airs weekly. Video Gag airs on the French broadcast channel TF1. If viewers send in funny videos to the French broadcast channel, then Video Gag airs them on television. All videos aired on Video Gag are in French.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Viewers send in funny videos to the French broadcast channel that are in French.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAir(x, y) ::: x airs y.\nViewer(x) ::: x is a viewer.\nSend(x, y) ::: x sends y.\nVideo(x) ::: x is a video.\nFrench(x) ::: x is in French.\nPremises:\nAir(videoGag, week) ∧ Air(videoGag, frenchBroadcastChannel) ::: Video Gag airs weekly.\nAir(videoGag, frenchBroadcastChannel) ::: Video Gag airs on the French broadcast channel TF1.\n∀x (Send(x, y) → Air(videoGag, y)) ::: If viewers send in funny videos to the French broadcast channel, then Video Gag airs them on television.\n∀x (Air(videoGag, x) → French(x)) ::: All videos aired on Video Gag are in French.\nConclusion:\nSend(viewer, funnyVideo) ∧ French(funnyVideo) ::: Viewers send in funny videos to the French broadcast channel that are in French.\n------"
    ]
  },
  {
    "id": "FOLIO_train_231",
    "context": "Video Gag is a French television series that airs weekly. Video Gag airs on the French broadcast channel TF1. If viewers send in funny videos to the French broadcast channel, then Video Gag airs them on television. All videos aired on Video Gag are in French.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Viewers send in funny videos to the French broadcast channel that are in English.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAir(x, y) ::: x airs on y.\nSend(x, y) ::: x sends in y.\nVideo(x) ::: x is a video.\nFrench(x) ::: x is in French.\nEnglish(x) ::: x is in English.\nPremises:\nVideoGag(videoGag) ∧ Air(videoGag, tf1) ::: Video Gag is a French television series that airs weekly.\nAir(videoGag, tf1) ∧ Send(viewers, videoGag) ∧ ∀x (Send(viewers, x) → Air(x, videoGag)) ::: Video Gag airs on the French broadcast channel TF1. If viewers send in funny videos to the French broadcast channel, then Video Gag airs them on television.\n∀x (Air(x, videoGag) → French(x)) ::: All videos aired on Video Gag are in French.\nConclusion:\nSend(viewers, x) ∧ English(x) ::: Viewers send in funny"
    ]
  },
  {
    "id": "FOLIO_train_232",
    "context": "All phones are things. All cellphones are phones. All iPhones are cellphones. All engineers are workers. All workers are human. Jack is either an engineer or a worker. Jack is is either a human or a phone.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jack is a thing.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nThing(x) ::: x is a thing.\nPhone(x) ::: x is a phone.\nCellphone(x) ::: x is a cellphone.\niPhone(x) ::: x is an iPhone.\nEngineer(x) ::: x is an engineer.\nWorker(x) ::: x is a worker.\nHuman(x) ::: x is a human.\nPremises:\n∀x (Phone(x) → Thing(x)) ::: All phones are things.\n∀x (Cellphone(x) → Phone(x)) ::: All cellphones are phones.\n∀x (iPhone(x) → Cellphone(x)) ::: All iPhones are cellphones.\n∀x (Engineer(x) → Worker(x)) ::: All engineers are workers.\n∀x (Worker(x) → Human(x)) ::: All workers are human.\nJack(engineer) ∨ Jack(worker) ::: Jack is either an engineer or a worker.\nJack(human) ∨ Jack(phone) ::"
    ]
  },
  {
    "id": "FOLIO_train_233",
    "context": "All phones are things. All cellphones are phones. All iPhones are cellphones. All engineers are workers. All workers are human. Jack is either an engineer or a worker. Jack is is either a human or a phone.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jack is not a thing.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nThing(x) ::: x is a thing.\nPhone(x) ::: x is a phone.\nCellphone(x) ::: x is a cellphone.\niPhone(x) ::: x is an iPhone.\nEngineer(x) ::: x is an engineer.\nWorker(x) ::: x is a worker.\nHuman(x) ::: x is a human.\nPremises:\n∀x (Phone(x) → Thing(x)) ::: All phones are things.\n∀x (Cellphone(x) → Phone(x)) ::: All cellphones are phones.\n∀x (iPhone(x) → Cellphone(x)) ::: All iPhones are cellphones.\n∀x (Engineer(x) → Worker(x)) ::: All engineers are workers.\n∀x (Worker(x) → Human(x)) ::: All workers are human.\nJack(engineer) ∨ Jack(worker) ::: Jack is either an engineer or a worker.\nJack(human) ∨ Jack(phone) ::"
    ]
  },
  {
    "id": "FOLIO_train_234",
    "context": "All phones are things. All cellphones are phones. All iPhones are cellphones. All engineers are workers. All workers are human. Jack is either an engineer or a worker. Jack is is either a human or a phone.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jack is a thing and an iPhone.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nThing(x) ::: x is a thing.\nPhone(x) ::: x is a phone.\nCellphone(x) ::: x is a cellphone.\niPhone(x) ::: x is an iPhone.\nEngineer(x) ::: x is an engineer.\nWorker(x) ::: x is a worker.\nHuman(x) ::: x is a human.\nPremises:\n∀x (Phone(x) → Thing(x)) ::: All phones are things.\n∀x (Cellphone(x) → Phone(x)) ::: All cellphones are phones.\n∀x (iPhone(x) → Cellphone(x)) ::: All iPhones are cellphones.\n∀x (Engineer(x) → Worker(x)) ::: All engineers are workers.\n∀x (Worker(x) → Human(x)) ::: All workers are human.\nJack(engineer) ∨ Jack(worker) ::: Jack is either an engineer or a worker.\nJack(human) ∨ Jack(phone) ::"
    ]
  },
  {
    "id": "FOLIO_train_235",
    "context": "All phones are things. All cellphones are phones. All iPhones are cellphones. All engineers are workers. All workers are human. Jack is either an engineer or a worker. Jack is is either a human or a phone.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jack is not both a thing and an iPhone.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nThing(x) ::: x is a thing.\nPhone(x) ::: x is a phone.\nCellphone(x) ::: x is a cellphone.\niPhone(x) ::: x is an iPhone.\nEngineer(x) ::: x is an engineer.\nWorker(x) ::: x is a worker.\nHuman(x) ::: x is a human.\nPremises:\n∀x (Phone(x) → Thing(x)) ::: All phones are things.\n∀x (Cellphone(x) → Phone(x)) ::: All cellphones are phones.\n∀x (iPhone(x) → Cellphone(x)) ::: All iPhones are cellphones.\n∀x (Engineer(x) → Worker(x)) ::: All engineers are workers.\n∀x (Worker(x) → Human(x)) ::: All workers are human.\nJack(x) ∧ (Engineer(x) ∨ Worker(x)) ::: Jack is either an engineer or a worker.\nJack(x"
    ]
  },
  {
    "id": "FOLIO_train_236",
    "context": "All iPhones are electronic. Some phones are iPhones.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? No phones are electronic.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPhone(x) ::: x is a phone.\niPhone(x) ::: x is an iPhone.\nElectronic(x) ::: x is electronic.\nPremises:\n∀x (Phone(x) → iPhone(x)) ::: All iPhones are phones.\n∃x (Phone(x) ∧ iPhone(x)) ::: Some phones are iPhones.\nConclusion:\n¬∀x (Phone(x) → Electronic(x)) ::: No phones are electronic.\n------\nProblem:\nAll people who are not students are either teachers or professors. Some people are not students.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? All people are either teachers or professors.\n###\nPredicates:\nStudent(x) ::: x is a student.\nTeacher(x) ::: x is a teacher.\nProfessor(x) ::: x is a professor.\nPremises:\n∀x (¬Student(x) → (Teacher(x) ∨ Professor"
    ]
  },
  {
    "id": "FOLIO_train_237",
    "context": "Metropolitan Museum of Art is a museum in NYC. Whitney Museum of American Art is a museum in NYC. Museum of Modern Art (MoMA) is a museum if NYC. Metropolitan Museum of Art includes Bytantine and Islamic Art. Whitney Museum of American Art includes American art.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A museum in NYC includes Byzantine and Islamic Art.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMuseum(x) ::: x is a museum.\nIncludes(x, y) ::: x includes y.\nByzantine(x) ::: x is Byzantine.\nIslamic(x) ::: x is Islamic.\nAmerican(x) ::: x is American.\nPremises:\nMuseum(metropolitan) ∧ Museum(whitney) ∧ Museum(moma) ::: Metropolitan Museum of Art is a museum in NYC. Whitney Museum of American Art is a museum in NYC. Museum of Modern Art (MoMA) is a museum if NYC.\nIncludes(metropolitan, byzantine) ∧ Includes(metropolitan, islamic) ::: Metropolitan Museum of Art includes Byzantine and Islamic Art.\nIncludes(whitney, american) ::: Whitney Museum of American Art includes American art.\nConclusion:\n∃x (Museum(x) ∧ Includes(x, byzantine)) ::: A museum in NYC includes Byzantine and Islamic Art.\n------\nProblem:"
    ]
  },
  {
    "id": "FOLIO_train_238",
    "context": "Metropolitan Museum of Art is a museum in NYC. Whitney Museum of American Art is a museum in NYC. Museum of Modern Art (MoMA) is a museum if NYC. Metropolitan Museum of Art includes Bytantine and Islamic Art. Whitney Museum of American Art includes American art.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A museum in NYC includes American art.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMuseum(x) ::: x is a museum.\nIncludes(x, y) ::: x includes y.\nAmerican(x) ::: x is American.\nByzantine(x) ::: x is Byzantine.\nIslamic(x) ::: x is Islamic.\nPremises:\nMuseum(metropolitan) ∧ Museum(whitney) ∧ Museum(moma) ::: Metropolitan Museum of Art is a museum in NYC. Whitney Museum of American Art is a museum in NYC. Museum of Modern Art (MoMA) is a museum if NYC.\nIncludes(metropolitan, byzantine) ∧ Includes(metropolitan, islamic) ::: Metropolitan Museum of Art includes Byzantine and Islamic Art.\nIncludes(whitney, american) ::: Whitney Museum of American Art includes American art.\nConclusion:\n∃x (Museum(x) ∧ Includes(x, american)) ::: A museum in NYC includes American art.\n------\nProblem:\nA person is a student if"
    ]
  },
  {
    "id": "FOLIO_train_239",
    "context": "Metropolitan Museum of Art is a museum in NYC. Whitney Museum of American Art is a museum in NYC. Museum of Modern Art (MoMA) is a museum if NYC. Metropolitan Museum of Art includes Bytantine and Islamic Art. Whitney Museum of American Art includes American art.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A museum in NYC includes Greek art.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMuseum(x) ::: x is a museum.\nIncludes(x, y) ::: x includes y.\nAmerican(x) ::: x is American.\nGreek(x) ::: x is Greek.\nByzantine(x) ::: x is Byzantine.\nIslamic(x) ::: x is Islamic.\nPremises:\nMuseum(metropolitan) ∧ Museum(whitney) ∧ Museum(moma) ::: Metropolitan Museum of Art is a museum in NYC. Whitney Museum of American Art is a museum in NYC. Museum of Modern Art (MoMA) is a museum if NYC.\nIncludes(metropolitan, byzantine) ∧ Includes(metropolitan, islamic) ::: Metropolitan Museum of Art includes Byzantine and Islamic Art.\nIncludes(whitney, american) ::: Whitney Museum of American Art includes American art.\nConclusion:\nIncludes(moma, greek) ::: A museum in NYC includes Greek art.\n------\nProblem:\nA person is a student"
    ]
  },
  {
    "id": "FOLIO_train_240",
    "context": "A person either likes eating cheese or is a francophile. No francophiles are people who like Spain as their favorite country. A person likes Spain as their favorite country or likes eating cheese. Benji is not a person who likes eating cheese and a person who studies Spanish. If Benji is neither a person who studies Spanish nor a person that studies French, then Benji is a person who studies Spanish or a person that studies French.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Benji is a person who likes eating cheese.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLike(x, y) ::: x likes y.\nFrancophile(x) ::: x is a francophile.\nStudy(x, y) ::: x studies y.\nFavorite(x, y) ::: x likes y as their favorite.\nSpanish(x) ::: x is Spanish.\nPremises:\n∀x (Like(x, cheese) ∨ Francophile(x)) ::: A person either likes eating cheese or is a francophile.\n∀x (Francophile(x) → ¬Like(x, spanish)) ::: No francophiles are people who like Spain as their favorite country.\n∀x (Like(x, cheese) ∨ Like(x, spanish)) ::: A person likes Spain as their favorite country or likes eating cheese.\nBenji ∧ ¬Like(benji, cheese) ∧ ¬Study(benji, spanish) ::: Benji is not a person who likes eating cheese and a person who studies Spanish.\n¬(Study(benji, spanish) ∨ Study(benji, french)) → (Study(benji, spanish) ∨ Study(benji, french)) ::: If Benji is neither a person who studies Spanish nor a person that studies French, then Benji is a person who studies Spanish or a person that studies French.\nConclusion:\nLike(benji, cheese) ::: Benji is a person who likes eating cheese.\n------"
    ]
  },
  {
    "id": "FOLIO_train_241",
    "context": "A person either likes eating cheese or is a francophile. No francophiles are people who like Spain as their favorite country. A person likes Spain as their favorite country or likes eating cheese. Benji is not a person who likes eating cheese and a person who studies Spanish. If Benji is neither a person who studies Spanish nor a person that studies French, then Benji is a person who studies Spanish or a person that studies French.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Benji is either a person who likes eating cheese or a francophile, then Benji is neither a person who studies Spanish nor a person who studies French.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLikes(x, y) ::: x likes y.\nFrancophile(x) ::: x is a francophile.\nStudies(x, y) ::: x studies y.\nFavorite(x, y) ::: x likes y as their favorite country.\nPremises:\n∀x (Likes(x, cheese) ∨ Francophile(x)) ::: A person either likes eating cheese or is a francophile.\n∀x (Francophile(x) → ¬(Likes(x, spain) ∧ Favorite(x, spain))) ::: No francophiles are people who like Spain as their favorite country.\n∀x (Likes(x, spain) ∨ Likes(x, cheese)) ::: A person likes Spain as their favorite country or likes eating cheese.\nBenji ∧ ¬(Likes(benji, cheese) ∧ Studies(benji, spanish)) ∧ ¬(Likes(benji, cheese) ∧ Studies(benji, french)) ::: Benji is not a person who likes eating cheese and a person who studies Spanish.\n¬(Likes(benji, cheese) ∧ Studies(benji, spanish)) → (Likes(benji, cheese) ∧ Studies(benji, spanish)) ∨ (Likes(benji, cheese) ∧ Studies(benji, french)) ::: If Benji"
    ]
  },
  {
    "id": "FOLIO_train_242",
    "context": "A person either likes eating cheese or is a francophile. No francophiles are people who like Spain as their favorite country. A person likes Spain as their favorite country or likes eating cheese. Benji is not a person who likes eating cheese and a person who studies Spanish. If Benji is neither a person who studies Spanish nor a person that studies French, then Benji is a person who studies Spanish or a person that studies French.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Benji is a person who likes Spain as their favorite country or studies French, then Benji is either a person who studies Spanish or a person who likes Spain as their favorite country.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLikes(x, y) ::: x likes y.\nFrancophile(x) ::: x is a francophile.\nStudies(x, y) ::: x studies y.\nFavorite(x, y) ::: x likes y as their favorite.\nSpanish(x) ::: x is Spanish.\nPremises:\n∀x (Likes(x, cheese) ⊕ Francophile(x)) ::: A person either likes eating cheese or is a francophile.\n∀x (Francophile(x) → ¬Likes(x, spanish)) ::: No francophiles are people who like Spain as their favorite country.\n∀x (Likes(x, spanish) ⊕ Likes(x, cheese)) ::: A person likes Spain as their favorite country or likes eating cheese.\nBenji ∧ ¬(Likes(benji, cheese) ∧ Studies(benji, spanish)) ⊕ ¬(Benji ∧ ¬(Studies(benji, spanish) ∧ Studies(benji, french))) ::: Benji is not a person who likes eating cheese and a person who studies Spanish. If Benji is neither a person who studies Spanish nor a person that studies French, then Benji is a person who studies Spanish or a person that studies French.\nConclusion:\n∀x (Likes(x, spanish) ∧ Studies(x, french)) → (Studies("
    ]
  },
  {
    "id": "FOLIO_train_243",
    "context": "Gasteren is village located in the province of Drenthe. Drenthe is a Dutch province. No cities are villages. The population of a village in Drenthe was 155 people.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Gasteren is a Dutch village.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProvince(x) ::: x is a province.\nCity(x) ::: x is a city.\nVillage(x) ::: x is a village.\nPopulation(x, y) ::: x has population y.\nDutch(x) ::: x is a Dutch person.\nPremises:\nProvince(drenthe) ∧ City(gasteren) ::: Gasteren is village located in the province of Drenthe.\nDutch(drenthe) ::: Drenthe is a Dutch province.\n∀x (Village(x) → ¬City(x)) ::: No cities are villages.\nPopulation(gasteren, 155) ::: The population of a village in Drenthe was 155 people.\nConclusion:\nDutch(gasteren) ::: Gasteren is a Dutch village.\n------\nProblem:\nA person is a student if and only if the person is enrolled in a university. A person is enrolled in a university if and only if the person is enrolled in a course. A person is enrolled in a course if and only if the person is taking the course. A person is taking a course if and only if the person is attending the course. A person is attending a course if and only if the person is present in the course. A person is present in a course if and only if the person is in the course. A person is in a course if and only if the person is in the classroom where the course is being taught. A person is in a"
    ]
  },
  {
    "id": "FOLIO_train_244",
    "context": "Gasteren is village located in the province of Drenthe. Drenthe is a Dutch province. No cities are villages. The population of a village in Drenthe was 155 people.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Gasteren is a city.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCity(x) ::: x is a city.\nVillage(x) ::: x is a village.\nProvince(x) ::: x is a province.\nPopulation(x, y) ::: x has population y.\nPremises:\nCity(gasteren) ::: Gasteren is a city.\nVillage(gasteren) ::: Gasteren is a village.\nProvince(drenthe) ::: Drenthe is a Dutch province.\n∀x (City(x) → ¬Village(x)) ::: No cities are villages.\nPopulation(gasteren, 155) ::: The population of a village in Drenthe was 155 people.\nConclusion:\nCity(gasteren) ::: Gasteren is a city.\n------\nProblem:\nA person is a student if and only if the person is enrolled in a university. A person is enrolled in a university if and only if the person is enrolled in a course. A person is enrolled in a course if and only if the person is enrolled in a class. A person is enrolled in a class if and only if the person is enrolled in a section. A person is enrolled in a section if and only if the person is enrolled in a room. A person is enrolled in a room if and only if the person is enrolled in a building. A person is enrolled in a building if and only if the person is enrolled in a campus. A person is enrolled in a campus if and only"
    ]
  },
  {
    "id": "FOLIO_train_245",
    "context": "Gasteren is village located in the province of Drenthe. Drenthe is a Dutch province. No cities are villages. The population of a village in Drenthe was 155 people.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Gasteren has a population of 155.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProvince(x) ::: x is a province.\nCity(x) ::: x is a city.\nVillage(x) ::: x is a village.\nPopulation(x, y) ::: x has a population of y.\nPremises:\nProvince(drenthe) ∧ City(gasteren) ::: Gasteren is village located in the province of Drenthe.\nProvince(drenthe) ::: Drenthe is a Dutch province.\n¬∃x (City(x) ∧ Village(x)) ::: No cities are villages.\nPopulation(village, 155) ::: The population of a village in Drenthe was 155 people.\nConclusion:\nPopulation(gasteren, 155) ::: Gasteren has a population of 155.\n------\nProblem:\nA person is a student if and only if the person is enrolled in a university. A person is enrolled in a university if and only if the person is enrolled in a course. A person is enrolled in a course if and only if the person is taking the course. A person is taking a course if and only if the person is attending the course. A person is attending a course if and only if the person is present in the course. A person is present in a course if and only if the person is in the course. A person is in a course if and only if the person is in the classroom where the course is being taught. A person is in a classroom if and"
    ]
  },
  {
    "id": "FOLIO_train_246",
    "context": "The only types of mammals that lay eggs are platypuses and echidnas. Platypuses are not hyrax. Echidnas are not hyrax. No mammals are invertebrates. All animals are either vertebrates or invertebrates. Mammals are animals. Hyraxes are mammals. Grebes lay eggs. Grebes are not platypuses and also not echidnas.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Hyraxes lay eggs.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLayEggs(x) ::: x lays eggs.\nPlatypus(x) ::: x is a platypus.\nEchidna(x) ::: x is an echidna.\nHyrax(x) ::: x is a hyrax.\nGrebe(x) ::: x is a grebe.\nMammal(x) ::: x is a mammal.\nAnimal(x) ::: x is an animal.\nVertebrate(x) ::: x is a vertebrate.\nInvertebrate(x) ::: x is an invertebrate.\nPremises:\n∀x (LayEggs(x) → (Platypus(x) ∨ Echidna(x))) ::: The only types of mammals that lay eggs are platypuses and echidnas.\n¬Platypus(hyrax) ∧ ¬Echidna(hyrax) ::: Platypuses are not hyrax.\n¬Platypus(hyrax) ∧ ¬Echidna(hyrax) ::: Echidnas are not hyrax.\n∀x (Mammal(x) → Animal(x)) ::: All mammals are animals.\n∀x (Hyrax(x) → Mammal(x)) ::: Hyraxes are mammals.\n∀x (Grebe(x) → Lay"
    ]
  },
  {
    "id": "FOLIO_train_247",
    "context": "The only types of mammals that lay eggs are platypuses and echidnas. Platypuses are not hyrax. Echidnas are not hyrax. No mammals are invertebrates. All animals are either vertebrates or invertebrates. Mammals are animals. Hyraxes are mammals. Grebes lay eggs. Grebes are not platypuses and also not echidnas.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Grebes are not mammals.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMammal(x) ::: x is a mammal.\nAnimal(x) ::: x is an animal.\nVertebrate(x) ::: x is a vertebrate.\nInvertebrate(x) ::: x is an invertebrate.\nLayEgg(x) ::: x lays eggs.\nPlatypus(x) ::: x is a platypus.\nEchidna(x) ::: x is an echidna.\nHyrax(x) ::: x is a hyrax.\nGrebe(x) ::: x is a grebe.\nPremises:\n∀x (Mammal(x) → Animal(x)) ::: Mammals are animals.\n∀x (Animal(x) → (Vertebrate(x) ∨ Invertebrate(x))) ::: All animals are either vertebrates or invertebrates.\n∀x (Mammal(x) → ¬Invertebrate(x)) ::: No mammals are invertebrates.\n∀x (Platypus(x) → Mammal(x)) ::: Platypuses are mammals.\n∀x (Echidna(x) → Mammal(x)) ::: Echidnas are mammals.\n∀x (Hyrax(x) → Mammal(x)) ::: Hyraxes are mammals."
    ]
  },
  {
    "id": "FOLIO_train_248",
    "context": "The only types of mammals that lay eggs are platypuses and echidnas. Platypuses are not hyrax. Echidnas are not hyrax. No mammals are invertebrates. All animals are either vertebrates or invertebrates. Mammals are animals. Hyraxes are mammals. Grebes lay eggs. Grebes are not platypuses and also not echidnas.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Platypuses are vertebrates.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nVertebrate(x) ::: x is a vertebrate.\nInvertebrate(x) ::: x is an invertebrate.\nMammal(x) ::: x is a mammal.\nAnimal(x) ::: x is an animal.\nHyrax(x) ::: x is a hyrax.\nPlatypus(x) ::: x is a platypus.\nEchidna(x) ::: x is an echidna.\nGrebe(x) ::: x is a grebe.\nLayEgg(x) ::: x lays eggs.\nPremises:\n∀x (LayEgg(x) → (Platypus(x) ∨ Echidna(x))) ::: The only types of mammals that lay eggs are platypuses and echidnas.\n¬Platypus(hyrax) ∧ ¬Echidna(hyrax) ::: Platypuses are not hyrax.\n¬Platypus(hyrax) ∧ ¬Echidna(hyrax) ::: Echidnas are not hyrax.\n∀x (Mammal(x) → Animal(x)) ::: All mammals are animals.\n∀x (Animal(x) → (Vertebrate(x) ∨ Invertebrate(x))) ::: All animals are either vertebrates or in"
    ]
  },
  {
    "id": "FOLIO_train_249",
    "context": "Bobby Flynn is a singer-songwriter. Bobby Flynn finished 7th while competing on Australian Idol. Australian Idol competitors are Australian citizens. The Omega Three band made a nationwide tour in 2007. Bobby Flynn is a member of The Omega Three band. Bobby Flynn was born in Queensland.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Bobby Flynn is an Australian citizen.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAustralian(x) ::: x is an Australian citizen.\nSingerSongwriter(x) ::: x is a singer-songwriter.\nCompete(x, y) ::: x competed in competition y.\nFinish(x, y) ::: x finished in position y.\nMember(x, y) ::: x is a member of band y.\nBorn(x, y) ::: x was born in place y.\nNationwide(x) ::: x made a nationwide tour.\nPremises:\nSingerSongwriter(bobby) ∧ Compete(bobby, australianIdol) ∧ Finish(bobby, position7) ∧ Australian(bobby) ::: Bobby Flynn is a singer-songwriter. Bobby Flynn finished 7th while competing on Australian Idol. Australian Idol competitors are Australian citizens.\nMember(bobby, omegaThree) ∧ Nationwide(omegaThree) ∧ Born(bobby, queensland) ::: The Omega Three band made a nationwide tour in 2007. Bobby Flynn is a member of The Omega Three band. Bobby Flynn was born in Queensland.\nConclusion:\nAustralian(bobby) ::: Bobby Flynn is an Australian citizen.\n------\nProblem:\nThe 2008 Summer Olympics were held in Beijing, China. The 2008 Summer Olympics were the 29th Summer Olympics. The 2008 Summer Olympics were the 2nd Summer"
    ]
  },
  {
    "id": "FOLIO_train_250",
    "context": "Bobby Flynn is a singer-songwriter. Bobby Flynn finished 7th while competing on Australian Idol. Australian Idol competitors are Australian citizens. The Omega Three band made a nationwide tour in 2007. Bobby Flynn is a member of The Omega Three band. Bobby Flynn was born in Queensland.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Bobby Flynn flew to America in 2007.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSingerSongwriter(x) ::: x is a singer-songwriter.\nCompete(x, y) ::: x competed in competition y.\nAustralianCitizen(x) ::: x is an Australian citizen.\nNationwideTour(x, y) ::: x made a nationwide tour in year y.\nMember(x, y) ::: x is a member of band y.\nBorn(x, y) ::: x was born in year y.\nFly(x, y) ::: x flew to country y.\nPremises:\nSingerSongwriter(bobby) ∧ Compete(bobby, australianIdol) ∧ AustralianCitizen(bobby) ∧ NationwideTour(omegaThree, year2007) ∧ Member(bobby, omegaThree) ∧ Born(bobby, queensland) ::: Bobby Flynn is a singer-songwriter. Bobby Flynn finished 7th while competing on Australian Idol. Australian Idol competitors are Australian citizens. The Omega Three band made a nationwide tour in 2007. Bobby Flynn is a member of The Omega Three band. Bobby Flynn was born in Queensland.\nConclusion:\nFly(bobby, america) ::: Bobby Flynn flew to America in 2007.\n------"
    ]
  },
  {
    "id": "FOLIO_train_251",
    "context": "Bobby Flynn is a singer-songwriter. Bobby Flynn finished 7th while competing on Australian Idol. Australian Idol competitors are Australian citizens. The Omega Three band made a nationwide tour in 2007. Bobby Flynn is a member of The Omega Three band. Bobby Flynn was born in Queensland.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Bobby Flynn was born in Queens.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSingerSongwriter(x) ::: x is a singer-songwriter.\nCompete(x, y) ::: x competes in competition y.\nAustralianCitizen(x) ::: x is an Australian citizen.\nNationwideTour(x) ::: x made a nationwide tour.\nMember(x, y) ::: x is a member of y.\nBornIn(x, y) ::: x was born in y.\nPremises:\nSingerSongwriter(bobby) ∧ Compete(bobby, australianIdol) ∧ AustralianCitizen(bobby) ∧ NationwideTour(omegaThree) ∧ Member(bobby, omegaThree) ∧ BornIn(bobby, queensland) ::: Bobby Flynn is a singer-songwriter. Bobby Flynn finished 7th while competing on Australian Idol. Australian Idol competitors are Australian citizens. The Omega Three band made a nationwide tour in 2007. Bobby Flynn is a member of The Omega Three band. Bobby Flynn was born in Queensland.\nConclusion:\nBornIn(bobby, queens) ::: Bobby Flynn was born in Queens.\n------\nProblem:\nThe 2010 FIFA World Cup was the 19th FIFA World Cup, the world championship for men'"
    ]
  },
  {
    "id": "FOLIO_train_252",
    "context": "All proteins are organic compounds. All enzymes are organic compounds.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? All enzymes are proteins.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProtein(x) ::: x is a protein.\nEnzyme(x) ::: x is an enzyme.\nOrganicCompound(x) ::: x is an organic compound.\nPremises:\n∀x (Protein(x) → OrganicCompound(x)) ::: All proteins are organic compounds.\n∀x (Enzyme(x) → OrganicCompound(x)) ::: All enzymes are organic compounds.\nConclusion:\n∀x (Enzyme(x) → Protein(x)) ::: All enzymes are proteins.\n------\nProblem:\nAll people who are not students are either employed or unemployed. All people who are employed are either employed full-time or employed part-time. All people who are employed full-time are employed.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? All people who are employed are either employed full-time or employed part-time.\n###\nPredicates:\nStudent(x) ::: x is a student.\nEmployed(x) ::: x is employed.\nUnemployed(x) ::: x is unemployed.\nEmployedFullTime(x) ::: x is employed full-time.\nEmployedPartTime(x) ::: x is employed part-time.\nPremises:\n∀x"
    ]
  },
  {
    "id": "FOLIO_train_253",
    "context": "One American screenwriter and producer is Maggie Friedman. Maggie Friedman was the showrunner and executive producer of the lifetime television series Witches of East End. Witches of East End is a fantasy-drama series. Maggie Friedman produced and developed Eastwick. Eastwick is a series by ABC.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There is a series by ABC that was developed by the showrunner of Witches of East End.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAmerican(x) ::: x is an American.\nScreenwriter(x) ::: x is a screenwriter.\nProducer(x) ::: x is a producer.\nShowrunner(x) ::: x is a showrunner.\nExecutiveProducer(x) ::: x is an executive producer.\nSeries(x) ::: x is a series.\nDevelop(x, y) ::: x developed y.\nProduce(x, y) ::: x produced y.\nPremises:\nAmerican(maggie) ∧ Screenwriter(maggie) ∧ Producer(maggie) ∧ Showrunner(maggie) ∧ ExecutiveProducer(maggie) ::: One American screenwriter and producer is Maggie Friedman.\nSeries(witchesOfEastEnd) ∧ FantasyDramaSeries(witchesOfEastEnd) ::: Witches of East End is a fantasy-drama series.\nSeries(eastwick) ∧ SeriesByABC(eastwick) ::: Eastwick is a series by ABC.\nDevelop(maggie, eastwick) ∧ Produce(maggie, eastwick) ::: Maggie Friedman produced and developed Eastwick.\nConclusion:\n∃x ∃y (Series(x) ∧ SeriesByABC(y"
    ]
  },
  {
    "id": "FOLIO_train_254",
    "context": "One American screenwriter and producer is Maggie Friedman. Maggie Friedman was the showrunner and executive producer of the lifetime television series Witches of East End. Witches of East End is a fantasy-drama series. Maggie Friedman produced and developed Eastwick. Eastwick is a series by ABC.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There isn't a series by ABC that was developed by the showrunner of Witches of East End.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAmerican(x) ::: x is an American person.\nScreenwriter(x) ::: x is a screenwriter.\nProducer(x) ::: x is a producer.\nShowrunner(x) ::: x is a showrunner.\nExecutiveProducer(x) ::: x is an executive producer.\nSeries(x) ::: x is a series.\nDevelop(x, y) ::: x developed y.\nProduce(x, y) ::: x produced y.\nPremises:\nAmerican(maggie) ∧ Screenwriter(maggie) ∧ Producer(maggie) ∧ Showrunner(maggie) ∧ ExecutiveProducer(maggie) ::: One American screenwriter and producer is Maggie Friedman.\nSeries(witchesOfEastEnd) ∧ FantasyDramaSeries(witchesOfEastEnd) ::: Witches of East End is a fantasy-drama series.\nSeries(eastwick) ∧ SeriesByABC(eastwick) ::: Eastwick is a series by ABC.\nDevelop(maggie, eastwick) ∧ Produce(maggie, eastwick) ::: Maggie Friedman produced and developed Eastwick.\nConclusion:\n¬∃x ∃y (Series(y) ∧ SeriesByABC"
    ]
  },
  {
    "id": "FOLIO_train_255",
    "context": "One American screenwriter and producer is Maggie Friedman. Maggie Friedman was the showrunner and executive producer of the lifetime television series Witches of East End. Witches of East End is a fantasy-drama series. Maggie Friedman produced and developed Eastwick. Eastwick is a series by ABC.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Maggie Friedman developed Witches of East End.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAmerican(x) ::: x is an American.\nScreenwriter(x) ::: x is a screenwriter.\nProducer(x) ::: x is a producer.\nShowrunner(x) ::: x is a showrunner.\nExecutiveProducer(x) ::: x is an executive producer.\nFantasyDrama(x) ::: x is a fantasy-drama series.\nSeries(x) ::: x is a series.\nProduce(x, y) ::: x produced y.\nDevelop(x, y) ::: x developed y.\nPremises:\nAmerican(maggie) ∧ Screenwriter(maggie) ∧ Producer(maggie) ∧ Showrunner(maggie) ∧ ExecutiveProducer(maggie) ::: One American screenwriter and producer is Maggie Friedman.\nSeries(witchesOfEastEnd) ∧ FantasyDrama(witchesOfEastEnd) ∧ Showrunner(maggie) ∧ ExecutiveProducer(maggie) ::: Maggie Friedman was the showrunner and executive producer of the lifetime television series Witches of East End.\nSeries(eastwick) ∧ Producer(maggie) ∧ Develop(maggie, eastwick) ::: Maggie Friedman produced and developed Eastwick.\nSeries("
    ]
  },
  {
    "id": "FOLIO_train_256",
    "context": "Evangelos Eleftheriou is a Greek electrical engineer. Evangelos Eleftheriou worked for IBM in Zurich. If a company has employees working for them somewhere, then they have an office there. IBM is a company.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? IBM has an office in London or Zurich.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreek(x) ::: x is a Greek person.\nElectricalEngineer(x) ::: x is an electrical engineer.\nWork(x, y) ::: x works for y.\nEmployee(x) ::: x is an employee.\nCompany(x) ::: x is a company.\nOffice(x) ::: x is an office.\nPremises:\nGreek(evangelos) ∧ ElectricalEngineer(evangelos) ∧ Work(evangelos, ibm) ∧ Work(evangelos, zurich) ::: Evangelos Eleftheriou is a Greek electrical engineer.\n∀x (Work(x, y) → Employee(x)) ::: If a company has employees working for them somewhere, then they have an office there.\nCompany(ibm) ::: IBM is a company.\nConclusion:\nOffice(ibm, london) ∨ Office(ibm, zurich) ::: IBM has an office in London or Zurich.\n------\nProblem:\nA person is a student if and only if they are enrolled in a university. A person is a student if and only if they are enrolled in a university. A person is a student if and only if they are enrolled in a university. A person is a student if and only if they are enrolled in a university. A person"
    ]
  },
  {
    "id": "FOLIO_train_257",
    "context": "Evangelos Eleftheriou is a Greek electrical engineer. Evangelos Eleftheriou worked for IBM in Zurich. If a company has employees working for them somewhere, then they have an office there. IBM is a company.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? No Greeks have worked for IBM.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreek(x) ::: x is a Greek person.\nElectricalEngineer(x) ::: x is an electrical engineer.\nWork(x, y) ::: x works for y.\nEmployee(x) ::: x is an employee.\nCompany(x) ::: x is a company.\nOffice(x) ::: x is an office.\nPremises:\nGreek(evangelos) ∧ ElectricalEngineer(evangelos) ∧ Work(evangelos, ibm) ::: Evangelos Eleftheriou is a Greek electrical engineer.\nGreek(evangelos) ∧ Work(evangelos, ibm) ∧ Work(evangelos, zurich) ::: Evangelos Eleftheriou worked for IBM in Zurich.\n∀x (Work(x, y) → Employee(x)) ::: If a company has employees working for them somewhere, then they have an office there.\nCompany(ibm) ::: IBM is a company.\nConclusion:\n¬∃x (Greek(x) ∧ Work(x, ibm)) ::: No Greeks have worked for IBM.\n------\nProblem:\nA person is a student if and only if they are enrolled in a university. A person is a student if and only if they are enrolled in a university"
    ]
  },
  {
    "id": "FOLIO_train_258",
    "context": "Before releasing their single, \"Hooray! Hooray! It's a Holi-Holiday!\", Boney M. had had seven consecutive German #1 singles. \"Hooray! Hooray! It's a Holi-Holiday!\" was a big hit all over Europe. Nevertheless, \"Hooray! Hooray! It's a Holi-Holiday!\" broke Boney M's streak of consecutive German #1 singles. A song that peaks below #1 on the german charts is also a song that is not the #1 single",
    "question": "Based on the above information, is the following statement true, false, or uncertain? \"Hooray! Hooray! It's a Holi-Holiday!\" was a #1 hit in Germany.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGerman(x) ::: x is a German person.\nSingle(x) ::: x is a single.\nHit(x) ::: x is a hit.\nPeak(x, y) ::: x peaks at y on the german charts.\nConsecutive(x, y) ::: x is a consecutive y.\nPremises:\n∀x (Single(x) → Hit(x)) ::: All singles are hits.\n∀x (Hit(x) → German(x)) ::: All hits are German.\n∀x (Single(x) → German(x)) ::: All singles are German.\n∀x (Hit(x) → German(x)) ::: All hits are German.\n∀x (Single(x) → German(x)) ::: All singles are German.\n∀x (Hit(x) → German(x)) ::: All hits are German.\n∀x (Single(x) → German(x)) ::: All singles are German.\n∀x (Hit(x) → German(x)) ::: All hits are German.\n∀x (Single(x) → German(x)) ::: All singles are German.\n∀x (Hit(x) → German(x)) ::: All hits are German.\n∀x (Single(x) → German(x)) ::"
    ]
  },
  {
    "id": "FOLIO_train_259",
    "context": "Before releasing their single, \"Hooray! Hooray! It's a Holi-Holiday!\", Boney M. had had seven consecutive German #1 singles. \"Hooray! Hooray! It's a Holi-Holiday!\" was a big hit all over Europe. Nevertheless, \"Hooray! Hooray! It's a Holi-Holiday!\" broke Boney M's streak of consecutive German #1 singles. A song that peaks below #1 on the german charts is also a song that is not the #1 single",
    "question": "Based on the above information, is the following statement true, false, or uncertain? \"Hooray! Hooray! It's a Holi-Holiday!\" peaked below #1 on the German charts.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPeak(x, y) ::: x peaked at position y on the German charts.\nSingle(x) ::: x is a single.\nHit(x) ::: x is a hit.\nBreak(x, y) ::: x broke y's streak of consecutive German #1 singles.\nPremises:\n∀x (Single(x) → Hit(x)) ::: All singles are hits.\n∀x (Peak(x, y) → ¬Peak(x, z)) ::: A song that peaks below #1 on the german charts is also a song that is not the #1 single.\n∀x (Peak(x, y) → ¬Peak(x, z)) ::: A song that peaks below #1 on the german charts is also a song that is not the #1 single.\n∀x (Peak(x, y) → ¬Peak(x, z)) ::: A song that peaks below #1 on the german charts is also a song that is not the #1 single.\n∀x (Peak(x, y) → ¬Peak(x, z)) ::: A song that peaks below #1 on the german charts is also a song that is not the #1 single.\n∀x (Peak(x, y) → ¬Peak(x, z)) ::: A"
    ]
  },
  {
    "id": "FOLIO_train_260",
    "context": "Before releasing their single, \"Hooray! Hooray! It's a Holi-Holiday!\", Boney M. had had seven consecutive German #1 singles. \"Hooray! Hooray! It's a Holi-Holiday!\" was a big hit all over Europe. Nevertheless, \"Hooray! Hooray! It's a Holi-Holiday!\" broke Boney M's streak of consecutive German #1 singles. A song that peaks below #1 on the german charts is also a song that is not the #1 single",
    "question": "Based on the above information, is the following statement true, false, or uncertain? \"Hooray! Hooray! It's a Holi-Holiday!\" peaked at #3 on the UK charts.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPeak(x, y) ::: x peaked at y on the german charts.\nPeak(x, y) ::: x peaked at y on the UK charts.\nSingle(x) ::: x is a single.\nHit(x) ::: x is a hit.\nRelease(x, y) ::: x was released in year y.\nConsecutive(x, y) ::: x is a consecutive y.\nPremises:\n∀x (Single(x) → Hit(x)) ::: All singles are hits.\n∀x (Hit(x) → Release(x, year1976)) ::: All hits were released in 1976.\n∀x (Release(x, year1976) → Peak(x, 1)) ::: All songs released in 1976 peaked at #1 on the german charts.\n∀x (Peak(x, 1) → ¬Peak(x, 3)) ::: A song that peaked at #1 on the german charts is also a song that is not the #3 single.\n∀x (Peak(x, 3) → ¬Peak(x, 1)) ::: A song that peaked at #3 on the german charts is also a song that is not the #1 single.\n∀x (Peak(x, 1) → ¬Peak(x, 2)) ::: A song that peaked at #1 on the german charts is also a song that is not the #2 single.\n∀x (Peak(x, 2) → ¬Peak(x, 1)) ::: A song that peaked at #2 on the german charts is also a song that is not the #1 single.\n∀x (Peak(x, 1) → ¬Peak(x, 4)) ::: A song that peaked at #1 on the german charts is also a song that is not the #4 single.\n∀x (Peak(x, 4) → ¬Peak(x, 1)) ::: A song that peaked at #4 on the german charts is also a song that is not the #1 single.\n∀x (Peak(x, 1) → ¬Peak(x, 5)) ::: A song that peaked at #1 on the german charts is also a song that is not the #5 single.\n∀x (Peak(x, 5) → ¬Peak(x, 1)) ::: A song that peaked at #5 on the german charts is also a song that is not the #1 single.\n∀x (Peak(x, 1) → ¬Peak(x, 6)) ::: A song that peaked at #1 on the german charts is also a song that is not the #6 single.\n∀x (Peak(x, 6) → ¬Peak(x, 1)) ::: A song that peaked at #6 on the german charts is also a song that is not the #1 single.\n∀x (Peak(x, 1) → ¬Peak(x, 7)) ::: A song that peaked at #1 on the german charts is also a song that is not the #7 single.\n∀x (Peak(x, 7) → ¬Peak(x, 1)) ::: A song that peaked at #7 on the german charts is also a song that is not the #1 single.\n∀x (Peak(x, 1) → ¬Peak(x, 8)) ::: A song that peaked at #1 on the german charts is also a song that is not the #8 single.\n∀x (Peak(x, 8) → ¬Peak(x, 1)) ::: A song that peaked at #8 on the german charts is also a song that is not the #1 single.\n∀x (Peak(x, 1) → ¬Peak(x, 9)) ::: A song that peaked at #1 on the german charts is also a song that is not the #9 single.\n∀x (Peak(x, 9) → ¬Peak(x, 1)) ::: A song that peaked at #9"
    ]
  },
  {
    "id": "FOLIO_train_261",
    "context": "Every chef can cook. Some people who aren’t chefs can cook. People who cook can make scrambled eggs and pasta. If someone can make cookies and muffins, they are a baker. Bakers who can also make scrambled eggs can make a good breakfast. Luke can make cookies, scrambled eggs, and muffins, but not pasta.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Luke can make a good breakfast.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nChef(x) ::: x is a chef.\nCook(x) ::: x can cook.\nMake(x, y) ::: x can make y.\nBaker(x) ::: x is a baker.\nGoodBreakfast(x) ::: x can make a good breakfast.\nPremises:\n∀x (Chef(x) → Cook(x)) ::: Every chef can cook.\n∃x (Cook(x) ∧ ¬Chef(x)) ::: Some people who aren’t chefs can cook.\n∀x (Cook(x) → (Make(x, scrambledEggs) ∧ Make(x, pasta))) ::: People who cook can make scrambled eggs and pasta.\n∀x (Make(x, cookies) ∧ Make(x, muffins) → Baker(x)) ::: If someone can make cookies and muffins, they are a baker.\n∀x (Baker(x) ∧ Make(x, scrambledEggs) → GoodBreakfast(x)) ::: Bakers who can also make scrambled eggs can make a good breakfast.\nMake(luke, cookies) ∧ Make(luke, scrambledEggs) ∧ Make(luke, muffins) ∧ ¬Make(luke, pasta) ::: Luke can make cookies, scrambled eggs, and muffins, but not pasta.\nConclusion:\nGoodBreakfast(luke) ::: Luke can make a good breakfast.\n------\nProblem:\nEveryone who is a student is a person. Some people who are not students are not persons. Some people who are not persons are not students. Some people who are not students are not persons.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Everyone who is a student is a person.\n###\nPredicates:\nStudent(x) ::: x is a student.\nPerson(x) ::: x is a person.\nPremises:\n∀x (Student(x) → Person(x)) ::: Everyone who is a student is a person.\n∃x (Person(x) ∧ ¬Student(x)) ::: Some people who are not students are not persons.\n∃x (Person(x) ∧ ¬Student(x)) ::: Some people who are not persons are not students.\n∃x (Student(x) ∧ ¬Person(x)) ::: Some people who are not students are not persons.\nConclusion:\n∀x (Student(x) → Person(x)) ::: Everyone who is a student is a person.\n------\nProblem:\nEveryone who is a student is a person. Some people who are not students are not persons. Some people who are not persons are not students. Some people who are not students are not persons.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Everyone who is a student is a person.\n###\nPredicates:\nStudent(x) ::: x is a student.\nPerson(x) ::: x is a person.\nPremises:\n∀x (Student(x) → Person(x)) ::: Everyone who is a student is a person.\n∃x (Person(x) ∧ ¬Student(x)) ::: Some people who are not students are not persons.\n∃x (Person(x) ∧ ¬Student(x)) ::: Some people who are not persons are not students.\n∃x (Student(x) ∧ ¬Person(x)) ::: Some people who are not students are not persons.\nConclusion:\n∀x (Student(x) → Person(x)) ::: Everyone who is a student is a person.\n------\nProblem:\nEveryone who is a student is a person. Some people who are not students are not persons. Some people who are not persons are not students. Some people who are not students are not persons.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Everyone who is a student is a person.\n###\nPredicates:\nStudent(x) ::: x is a student.\nPerson(x) ::: x is a person.\nPremises:\n∀x ("
    ]
  },
  {
    "id": "FOLIO_train_262",
    "context": "Every chef can cook. Some people who aren’t chefs can cook. People who cook can make scrambled eggs and pasta. If someone can make cookies and muffins, they are a baker. Bakers who can also make scrambled eggs can make a good breakfast. Luke can make cookies, scrambled eggs, and muffins, but not pasta.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Luke is a chef.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nChef(x) ::: x is a chef.\nCook(x) ::: x can cook.\nMake(x, y) ::: x can make y.\nBaker(x) ::: x is a baker.\nGoodBreakfast(x) ::: x can make a good breakfast.\nPremises:\n∀x (Chef(x) → Cook(x)) ::: Every chef can cook.\n∃x (Cook(x) ∧ ¬Chef(x)) ::: Some people who aren’t chefs can cook.\n∀x (Cook(x) → (Make(x, scrambledEggs) ∧ Make(x, pasta))) ::: People who cook can make scrambled eggs and pasta.\n∀x (Make(x, cookies) ∧ Make(x, muffins) → Baker(x)) ::: If someone can make cookies and muffins, they are a baker.\n∀x (Baker(x) ∧ Make(x, scrambledEggs) → GoodBreakfast(x)) ::: Bakers who can also make scrambled eggs can make a good breakfast.\nMake(luke, cookies) ∧ Make(luke, scrambledEggs) ∧ Make(luke, muffins) ∧ ¬Make(luke, pasta) ::: Luke can make cookies, scrambled eggs, and muffins, but not pasta.\nConclusion:\nChef(luke) ::: Luke is a chef.\n------\nProblem:\nEveryone who is a student is a person. Some people who are not students are not persons. Some people who are not persons are not students. Some people who are not students are not persons.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Everyone who is a student is a person.\n###\nPredicates:\nStudent(x) ::: x is a student.\nPerson(x) ::: x is a person.\nPremises:\n∀x (Student(x) → Person(x)) ::: Everyone who is a student is a person.\n∃x (Person(x) ∧ ¬Student(x)) ::: Some people who are not students are not persons.\n∃x (Person(x) ∧ ¬Student(x)) ::: Some people who are not persons are not students.\n∃x (Student(x) ∧ ¬Person(x)) ::: Some people who are not students are not persons.\nConclusion:\n∀x (Student(x) → Person(x)) ::: Everyone who is a student is a person.\n------\nProblem:\nEveryone who is a student is a person. Some people who are not students are not persons. Some people who are not persons are not students. Some people who are not students are not persons.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Everyone who is a student is a person.\n###\nPredicates:\nStudent(x) ::: x is a student.\nPerson(x) ::: x is a person.\nPremises:\n∀x (Student(x) → Person(x)) ::: Everyone who is a student is a person.\n∃x (Person(x) ∧ ¬Student(x)) ::: Some people who are not students are not persons.\n∃x (Person(x) ∧ ¬Student(x)) ::: Some people who are not persons are not students.\n∃x (Student(x) ∧ ¬Person(x)) ::: Some people who are not students are not persons.\nConclusion:\n∀x (Student(x) → Person(x)) ::: Everyone who is a student is a person.\n------\nProblem:\nEveryone who is a student is a person. Some people who are not students are not persons. Some people who are not persons are not students. Some people who are not students are not persons.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Everyone who is a student is a person.\n###\nPredicates:\nStudent(x) ::: x is a student.\nPerson(x) ::: x is a person.\nPremises:\n∀x (Student(x"
    ]
  },
  {
    "id": "FOLIO_train_263",
    "context": "ETS develops various standardized tests primarily in the United States for K-12 and higher education. ETS administers international tests including the TOEFL, TOEIC, GRE and subject tests in more than 180 countries. Many of the assessments ETS develops are associated with entry to the US tertiary and quaternary education institutions. ETS also develops K-12 statewide assessments used for accountability testing in many states.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? ETS develops assessments for K-12 statewide as well as entry to US tertiary and quaternary education institutions.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDevelop(x, y) ::: x develops y.\nStandardizedTest(x) ::: x is a standardized test.\nK12(x) ::: x is a K-12 education institution.\nHigherEducation(x) ::: x is a higher education institution.\nQuaternaryEducation(x) ::: x is a quaternary education institution.\nUS(x) ::: x is a US education institution.\nState(x) ::: x is a state.\nAccountabilityTesting(x) ::: x is an accountability testing.\nPremises:\nDevelop(ets, assessments) ::: ETS develops various standardized tests primarily in the United States for K-12 and higher education.\nDevelop(ets, internationalTests) ∧ ∀x (InternationalTest(x) → ∃y (State(y) ∧ AccountabilityTesting(y) ∧ Develop(ets, y))) ::: ETS administers international tests including the TOEFL, TOEIC, GRE and subject tests in more than 180 countries.\n∀x (Develop(ets, x) → ∃y (K12(y) ∧ Develop(ets, y))) ::: Many of the assessments ETS develops are associated with entry to the US tertiary and quaternary education institutions.\n∀x (Develop(ets, x) → ∃y (HigherEducation(y) ∧ Develop(ets, y))) ::: Many of the assessments ETS develops are associated with entry to the US tertiary and quaternary education institutions.\n∀x (Develop(ets, x) → ∃y (QuaternaryEducation(y) ∧ Develop(ets, y))) ::: Many of the assessments ETS develops are associated with entry to the US tertiary and quaternary education institutions.\n∀x (Develop(ets, x) → ∃y (US(y) ∧ Develop(ets, y))) ::: Many of the assessments ETS develops are associated with entry to the US tertiary and quaternary education institutions.\nConclusion:\n∀x (Develop(ets, x) → ∃y (K12(y) ∧ HigherEducation(y) ∧ QuaternaryEducation(y) ∧ US(y) ∧ Develop(ets, y))) ::: ETS develops assessments for K-12 statewide as well as entry to US tertiary and quaternary education institutions.\n------\nProblem:\nThe 2016 Summer Olympics, officially known as the Games of the XXXI Olympiad and commonly known as Rio 2016, was a major international multi-sport event held in Rio de Janeiro, Brazil, from 5 to 21 August 2016. The event was the largest sporting event ever held in South America. The 2016 Summer Olympics was the third time that Brazil had hosted the Olympics, after the 1951 Pan American Games and the 2014 FIFA World Cup.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The 2016 Summer Olympics was the largest sporting event ever held in South America.\n###\nPredicates:\nSummerOlympics(x) ::: x is a summer olympics.\nGamesOfTheXXXIolympiad(x) ::: x is the games of the XXXI olympiad.\nRio2016(x) ::: x is the Rio 2016.\nRioDeJaneiro(x) ::: x is Rio de Janeiro.\nBrazil(x) ::: x is Brazil.\nSouthAmerica(x) ::: x is South America.\nSportingEvent(x) ::: x is a sporting event.\nMultiSportEvent(x) ::: x is a multi-sport event.\nInternationalEvent(x) ::: x is an international event.\nMajorEvent(x) ::: x is a major event.\nPremises:\nSummerOlympics(2016SummerOlympics) ::: The 2016 Summer Olympics,"
    ]
  },
  {
    "id": "FOLIO_train_264",
    "context": "ETS develops various standardized tests primarily in the United States for K-12 and higher education. ETS administers international tests including the TOEFL, TOEIC, GRE and subject tests in more than 180 countries. Many of the assessments ETS develops are associated with entry to the US tertiary and quaternary education institutions. ETS also develops K-12 statewide assessments used for accountability testing in many states.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? ETS doesn't administer tests internationally.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nETS(x) ::: x is ETS.\nDevelop(x, y) ::: x develops y.\nAdministrate(x, y) ::: x administers y.\nAssociate(x, y) ::: x is associated with y.\nEntry(x, y) ::: x is an entry to y.\nState(x) ::: x is a state.\nK12(x) ::: x is K-12.\nTertiary(x) ::: x is tertiary.\nQuaternary(x) ::: x is quaternary.\nPremises:\nETS(ets) ::: ETS develops various standardized tests primarily in the United States for K-12 and higher education.\nETS(ets) ∧ Develop(ets, internationalTests) ::: ETS develops international tests including the TOEFL, TOEIC, GRE and subject tests in more than 180 countries.\nETS(ets) ∧ Administrate(ets, internationalTests) ::: ETS administers international tests including the TOEFL, TOEIC, GRE and subject tests in more than 180 countries.\nETS(ets) ∧ Associate(ets, entryToUS) ::: Many of the assessments ETS develops are associated with entry to the US tertiary and quaternary education institutions.\nETS(ets) ∧ Develop(ets, statewideAssessments) ::: ETS also develops K-12 statewide assessments used for accountability testing in many states.\nConclusion:\n¬Administrate(ets, internationalTests) ::: ETS doesn't administer tests internationally.\n------\nProblem:\nThe following is a list of the 10 most populous cities in the world.\n1. Shanghai, China\n2. Beijing, China\n3. Tokyo, Japan\n4. Delhi, India\n5. Mumbai, India\n6. São Paulo, Brazil\n7. Mexico City, Mexico\n8. New York City, United States\n9. Kolkata, India\n10. Dhaka, Bangladesh\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The most populous city in the world is in China.\nBased on the above information, is the following statement true, false, or uncertain? The most populous city in the world is in India.\nBased on the above information, is the following statement true, false, or uncertain? The most populous city in the world is in the United States.\n###\nPredicates:\nCity(x) ::: x is a city.\nPopulous(x) ::: x is the most populous city in the world.\nChina(x) ::: x is China.\nJapan(x) ::: x is Japan.\nIndia(x) ::: x is India.\nBrazil(x) ::: x is Brazil.\nMexico(x) ::: x is Mexico.\nUnitedStates(x) ::: x is the United States.\nBangladesh(x) ::: x is Bangladesh.\nPremises:\nCity(shanghai) ∧ City(beijing) ∧ City(tokyo) ∧ City(delhi) ∧ City(mumbai) ∧ City(saoPaulo) ∧ City(mexicoCity) ∧ City(newYorkCity) ∧ City(kolkata) ∧ City(dhaka) ::: The following is a list of the 10 most populous cities in the world.\n1(shanghai) ∧ China(shanghai) ::: Shanghai, China\n2(beijing) ∧ China(beijing) ::: Beijing, China\n3(tokyo) ∧ Japan(tokyo) ::: Tokyo, Japan\n4(delhi) ∧ India(delhi) ::: Delhi, India\n5(mumbai) ∧ India(mumbai) ::: Mumbai, India\n6(saoPaulo) ∧ Brazil(saoPaulo) ::: São Paulo, Brazil\n7(mexicoCity) ∧ Mexico(mexicoCity) ::: Mexico City, Mexico\n8(newYorkCity) ∧ UnitedStates(newYorkCity) ::: New York City, United States\n9("
    ]
  },
  {
    "id": "FOLIO_train_265",
    "context": "ETS develops various standardized tests primarily in the United States for K-12 and higher education. ETS administers international tests including the TOEFL, TOEIC, GRE and subject tests in more than 180 countries. Many of the assessments ETS develops are associated with entry to the US tertiary and quaternary education institutions. ETS also develops K-12 statewide assessments used for accountability testing in many states.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? ETS administers international tests including the TOEFL, GRE and subject tests in China.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDevelop(x) ::: x develops.\nAdminister(x) ::: x administers.\nStandardizedTest(x) ::: x is a standardized test.\nK12(x) ::: x is K-12.\nHigherEducation(x) ::: x is higher education.\nTertiaryEducation(x) ::: x is tertiary education.\nQuaternaryEducation(x) ::: x is quaternary education.\nUS(x) ::: x is the United States.\nInternational(x) ::: x is international.\nChina(x) ::: x is China.\nTOEFL(x) ::: x is the Test of English as a Foreign Language.\nTOEIC(x) ::: x is the Test of English for International Communication.\nGRE(x) ::: x is the Graduate Record Examinations.\nSubjectTest(x) ::: x is a subject test.\nStatewideAssessment(x) ::: x is a statewide assessment.\nAccountabilityTesting(x) ::: x is accountability testing.\nPremises:\nDevelop(ets) ∧ Administer(ets) ::: ETS develops various standardized tests primarily in the United States for K-12 and higher education.\nAdminister(ets) ∧ International(ets) ::: ETS administers international tests including the TOEFL, TOEIC, GRE and subject tests in more than 180 countries.\nAdminister(ets) ∧ K12(ets) ::: ETS also develops K-12 statewide assessments used for accountability testing in many states.\nConclusion:\nAdminister(ets) ∧ International(ets) ∧ China(ets) ∧ TOEFL(ets) ∧ GRE(ets) ∧ SubjectTest(ets) ::: ETS administers international tests including the TOEFL, GRE and subject tests in China.\n------\nProblem:\nThe United States Department of Agriculture (USDA) is a cabinet-level agency of the United States federal government. The USDA is responsible for developing and executing federal laws related to farming, forestry, and food. The USDA is also responsible for the regulation and inspection of meat, poultry, and egg products under the Wholesome Meat Act of 1967.\nThe USDA is also responsible for the regulation and inspection of meat, poultry, and egg products under the Poultry Products Inspection Act of 1957.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The USDA is responsible for the regulation and inspection of meat, poultry, and egg products under the Wholesome Meat Act of 1967.\n###\nPredicates:\nCabinetLevelAgency(x) ::: x is a cabinet-level agency.\nFederalGovernment(x) ::: x is a federal government.\nDevelop(x) ::: x develops.\nExecute(x) ::: x executes.\nFarming(x) ::: x is farming.\nForestry(x) ::: x is forestry.\nFood(x) ::: x is food.\nMeat(x) ::: x is meat.\nPoultry(x) ::: x is poultry.\nEgg(x) ::: x is egg.\nWholesomeMeatActOf1967(x) ::: x is the Wholesome Meat Act of 1967.\nPoultryProductsInspectionActOf1957(x) ::: x is the Poultry Products Inspection Act of 1957.\nResponsible(x, y) ::: x is responsible for y.\nPremises:\nCabinetLevelAgency(usda) ∧ FederalGovernment(usda) ::: The United States Department of Agriculture (USDA) is a cabinet-level agency of the United States federal government.\nResponsible(usda, farming) ∧ Responsible(usda, forestry) ∧ Responsible(usda, food) ::: The USDA is responsible for developing and executing federal laws related to farming, forestry, and food.\nResponsible(usda, meat) ∧ Responsible(usda, poultry) ��"
    ]
  },
  {
    "id": "FOLIO_train_266",
    "context": "All people who enjoy eating gelato ice cream would enjoy a vacation to Italy. There are no people who can resist the hallmark delectable drinks and desserts that are famed in Italy. People either enjoy eating gelato ice cream or love to travel and vacation often. If people often take study abroad semesters to Europe, then they do not regret their college experiences. If people love to travel and vacation often, then they often take study abroad semesters to Europe. Robert either enjoys eating gelato ice cream and loves to travel and vacation often, or he neither enjoys eating gelato ice cream nor loves to travel and vacation often.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Robert can resist the hallmark delectable drinks and desserts that are famed in Italy.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEnjoy(x, y) ::: x enjoys y.\nVacation(x) ::: x enjoys a vacation to Italy.\nResist(x, y) ::: x can resist y.\nStudyAbroad(x) ::: x often takes study abroad semesters to Europe.\nRegret(x) ::: x regrets his college experiences.\nLove(x, y) ::: x loves y.\nTravel(x) ::: x loves to travel and vacation often.\nPremises:\n∀x (Enjoy(x, gelato) → Vacation(x)) ::: All people who enjoy eating gelato ice cream would enjoy a vacation to Italy.\n∀x (Enjoy(x, gelato) ∨ Travel(x)) ::: People either enjoy eating gelato ice cream or love to travel and vacation often.\n∀x (StudyAbroad(x) → ¬Regret(x)) ::: If people often take study abroad semesters to Europe, then they do not regret their college experiences.\n∀x (Travel(x) → StudyAbroad(x)) ::: If people love to travel and vacation often, then they often take study abroad semesters to Europe.\n(Enjoy(robert, gelato) ∧ Travel(robert)) ⊕ ¬(Enjoy(robert, gelato) ∨ Travel(robert)) ::: Robert either enjoys eating gelato ice cream and loves to travel and vacation often, or he neither enjoys eating gelato ice cream nor loves to travel and vacation often.\nConclusion:\nResist(robert, hallmarkDelectableDrinksAndDesserts) ::: Robert can resist the hallmark delectable drinks and desserts that are famed in Italy.\n------\nProblem:\nAll people who enjoy eating gelato ice cream would enjoy a vacation to Italy. There are no people who can resist the hallmark delectable drinks and desserts that are famed in Italy. People either enjoy eating gelato ice cream or love to travel and vacation often. If people often take study abroad semesters to Europe, then they do not regret their college experiences. If people love to travel and vacation often, then they often take study abroad semesters to Europe. Robert either enjoys eating gelato ice cream and loves to travel and vacation often, or he neither enjoys eating gelato ice cream nor loves to travel and vacation often.\nRobert either enjoys eating gelato ice cream and loves to travel and vacation often, or he neither enjoys eating gelato ice cream nor loves to travel and vacation often.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Robert can resist the hallmark delectable drinks and desserts that are famed in Italy.\n###\nPredicates:\nEnjoy(x, y) ::: x enjoys y.\nVacation(x) ::: x enjoys a vacation to Italy.\nResist(x, y) ::: x can resist y.\nStudyAbroad(x) ::: x often takes study abroad semesters to Europe.\nRegret(x) ::: x regrets his college experiences.\nLove(x, y) ::: x loves y.\nTravel(x) ::: x loves to travel and vacation often.\nPremises:\n∀x (Enjoy(x, gelato) → Vacation(x)) ::: All people who enjoy eating gelato ice cream would enjoy a vacation to Italy.\n∀x (Enjoy(x, gelato) ∨ Travel(x)) ::: People either enjoy eating gelato ice cream or love to travel and vacation often.\n∀x (StudyAbroad(x) → ¬Regret(x)) ::: If people often take study abroad semesters to Europe, then they do not regret their college experiences.\n∀x (Travel(x) → StudyAbroad(x)) ::: If people love to travel and vacation often, then they often take study abroad semesters to Europe.\n(Enjoy(robert, gelato) ∧ Travel(robert)) ⊕ ¬(Enjoy(robert, gelato) ∨ Travel(robert)) ::: Robert either enjoys eating gelato ice cream and loves to travel and vacation often, or he neither enjoys eating gelato ice cream nor loves to travel and vacation often.\nConclusion:\nResist(robert, hallmarkDelectableDrinksAndDesserts) ::"
    ]
  },
  {
    "id": "FOLIO_train_267",
    "context": "All people who enjoy eating gelato ice cream would enjoy a vacation to Italy. There are no people who can resist the hallmark delectable drinks and desserts that are famed in Italy. People either enjoy eating gelato ice cream or love to travel and vacation often. If people often take study abroad semesters to Europe, then they do not regret their college experiences. If people love to travel and vacation often, then they often take study abroad semesters to Europe. Robert either enjoys eating gelato ice cream and loves to travel and vacation often, or he neither enjoys eating gelato ice cream nor loves to travel and vacation often.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Robert either would both enjoy a vacation to Italy and regrets his college experiences or neither would enjoy a vacation to Italy nor regrets his college experiences, then Robert would either enjoy a vacation to Italy or, if not, then he can resist the hallmark delectable drinks and desserts that are famed in Italy.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEnjoy(x, y) ::: x enjoys y.\nVacation(x) ::: x is a vacation.\nItaly(x) ::: x is Italy.\nStudyAbroad(x) ::: x is a study abroad semester.\nEurope(x) ::: x is Europe.\nRegret(x) ::: x regrets y.\nPremises:\n∀x (Enjoy(x, gelato) → Enjoy(x, vacation(italy))) ::: All people who enjoy eating gelato ice cream would enjoy a vacation to Italy.\n∀x (Enjoy(x, gelato) ∨ Love(x, travel)) ::: People either enjoy eating gelot ice cream or love to travel and vacation often.\n∀x (StudyAbroad(x) → ¬Regret(x)) ::: If people often take study abroad semesters to Europe, then they do not regret their college experiences.\n∀x (Love(x, travel) → StudyAbroad(x)) ::: If people love to travel and vacation often, then they often take study abroad semesters to Europe.\n(Enjoy(r, gelato) ∧ Love(r, travel)) ⊕ ¬(Enjoy(r, gelato) ∨ Love(r, travel)) ::: Robert either enjoys eating gelato ice cream and loves to travel and vacation often, or he neither enjoys eating gelato ice cream nor loves to travel and vacation often.\nConclusion:\n(Enjoy(r, vacation(italy)) ∧ Regret(r)) ⊕ ¬(Enjoy(r, vacation(italy)) ∨ ¬Regret(r)) ::: If Robert either would both enjoy a vacation to Italy and regrets his college experiences or neither would enjoy a vacation to Italy nor regrets his college experiences, then Robert would either enjoy a vacation to Italy or, if not, then he can resist the hallmark delectable drinks and desserts that are famed in Italy.\n------\nProblem:\nAll people who enjoy eating gelato ice cream would enjoy a vacation to Italy. There are no people who can resist the hallmark delectable drinks and desserts that are famed in Italy. People either enjoy eating gelato ice cream or love to travel and vacation often. If people often take study abroad semesters to Europe, then they do not regret their college experiences. If people love to travel and vacation often, then they often take study abroad semesters to Europe. Robert either enjoys eating gelato ice cream and loves to travel and vacation often, or he neither enjoys eating gelato ice cream nor loves to travel and vacation often.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? If Robert either would both enjoy a vacation to Italy and regrets his college experiences or neither would enjoy a vacation to Italy nor regrets his college experiences, then Robert would either enjoy a vacation to Italy or, if not, then he can resist the hallmark delectable drinks and desserts that are famed in Italy.\n###\nPredicates:\nEnjoy(x, y) ::: x enjoys y.\nVacation(x) ::: x is a vacation.\nItaly(x) ::: x is Italy.\nStudyAbroad(x) ::: x is a study abroad semester.\nEurope(x) ::: x is Europe.\nRegret(x) ::: x regrets y.\nPremises:\n∀x (Enjoy(x, gelato) → Enjoy(x, vacation(italy))) ::: All people who enjoy eating gelato ice cream would enjoy a vacation to Italy.\n∀x (Enjoy(x, gelato) ∨ Love(x, travel)) ::: People either enjoy eating gelot ice cream or love to travel and vacation often.\n∀x (StudyAbroad(x) → ¬Regret(x)) ::: If people often take study abroad semesters to Europe, then they do not regret their college experiences.\n∀x (Love(x, travel) → StudyAbroad(x)) ::: If people love to travel and vacation often, then they often take study abroad semesters to Europe.\n(Enjoy(r, gelato) ∧ Love(r, travel)) ⊕ ¬(Enjoy(r, gelato) ∨ Love(r, travel)) ::: Robert either enjoys eating gelato ice cream and loves to travel and vacation often, or he neither enjo"
    ]
  },
  {
    "id": "FOLIO_train_268",
    "context": "All people who enjoy eating gelato ice cream would enjoy a vacation to Italy. There are no people who can resist the hallmark delectable drinks and desserts that are famed in Italy. People either enjoy eating gelato ice cream or love to travel and vacation often. If people often take study abroad semesters to Europe, then they do not regret their college experiences. If people love to travel and vacation often, then they often take study abroad semesters to Europe. Robert either enjoys eating gelato ice cream and loves to travel and vacation often, or he neither enjoys eating gelato ice cream nor loves to travel and vacation often.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Robert is not both a person who can resist the hallmark delectable drinks and desserts that are famed in Italy and regrets his college experiences, then Robert either enjoys eating gelato ice cream or would enjoy a vacation to Italy.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEnjoy(x, y) ::: x enjoys y.\nVacation(x) ::: x enjoys a vacation to y.\nResist(x, y) ::: x can resist y.\nStudyAbroad(x) ::: x often takes study abroad semesters to y.\nRegret(x) ::: x regrets y.\nPremises:\n∀x (Enjoy(x, gelato) → Enjoy(x, vacation)) ::: All people who enjoy eating gelato ice cream would enjoy a vacation to Italy.\n∀x (Enjoy(x, gelato) ∨ Love(x, travel)) ::: People either enjoy eating gelato ice cream or love to travel and vacation often.\n∀x (Love(x, travel) → StudyAbroad(x)) ::: If people love to travel and vacation often, then they often take study abroad semesters to Europe.\n∀x (StudyAbroad(x) → ¬Regret(x)) ::: If people often take study abroad semesters to Europe, then they do not regret their college experiences.\n∀x (Resist(x, hallmark) → ¬Enjoy(x, vacation)) ::: There are no people who can resist the hallmark delectable drinks and desserts that are famed in Italy.\n(StudyAbroad(r) ∧ Regret(r)) ⊕ ¬(StudyAbroad(r) ∨ Regret(r)) ::: Robert either enjoys eating gelato ice cream and loves to travel and vacation often, or he neither enjoys eating gelato ice cream nor loves to travel and vacation often.\nConclusion:\n(Enjoy(r, gelato) ∧ Enjoy(r, vacation)) → (Enjoy(r, gelato) ∨ Enjoy(r, vacation)) ::: If Robert is not both a person who can resist the hallmark delectable drinks and desserts that are famed in Italy and regrets his college experiences, then Robert either enjoys eating gelato ice cream or would enjoy a vacation to Italy.\n------\nProblem:\nAll people who enjoy eating gelato ice cream would enjoy a vacation to Italy. There are no people who can resist the hallmark delectable drinks and desserts that are famed in Italy. People either enjoy eating gelato ice cream or love to travel and vacation often. If people often take study abroad semesters to Europe, then they do not regret their college experiences. If people love to travel and vacation often, then they often take study abroad semesters to Europe. Robert either enjoys eating gelato ice cream and loves to travel and vacation often, or he neither enjoys eating gelato ice cream nor loves to travel and vacation often.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? If Robert is not both a person who can resist the hallmark delectable drinks and desserts that are famed in Italy and regrets his college experiences, then Robert either enjoys eating gelato ice cream or would enjoy a vacation to Italy.\n###\nPredicates:\nEnjoy(x, y) ::: x enjoys y.\nVacation(x) ::: x enjoys a vacation to y.\nResist(x, y) ::: x can resist y.\nStudyAbroad(x) ::: x often takes study abroad semesters to y.\nRegret(x) ::: x regrets y.\nPremises:\n∀x (Enjoy(x, gelato) → Enjoy(x, vacation)) ::: All people who enjoy eating gelato ice cream would enjoy a vacation to Italy.\n∀x (Enjoy(x, gelato) ∨ Love(x, travel)) ::: People either enjoy eating gelato ice cream or love to travel and vacation often.\n∀x (Love(x, travel) → StudyAbroad(x)) ::: If people love to travel and vacation often, then they often take study abroad semesters to Europe.\n∀x (StudyAbroad(x) → ¬Regret(x)) ::: If people often take study abroad semesters to Europe, then they do not regret their college experiences.\n∀x (Resist(x, hallmark) → ¬Enjoy(x, vacation)) ::: There are no people who can resist the hallmark delectable drinks and desserts that are famed in Italy.\n(StudyAbroad(r) ∧ Regret(r)) ��"
    ]
  },
  {
    "id": "FOLIO_train_269",
    "context": "To get a student visa, you must be full-time enrolled in an academic program. Those who are full-time enrolled in an academic program can not work full-time. Everyone who wants to study abroad needs to have a student visa. All PhD graduates can work full time. If Tom does not want to study abroad, he is full-time enrolled in an educational program.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tom is a PhD graduate.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nStudentVisa(x) ::: x has a student visa.\nFullTimeEnrolled(x) ::: x is full-time enrolled in an academic program.\nWorkFullTime(x) ::: x works full-time.\nWantsToStudyAbroad(x) ::: x wants to study abroad.\nPhDGraduate(x) ::: x is a PhD graduate.\nTom(x) ::: x is Tom.\nPremises:\n∀x (FullTimeEnrolled(x) → ¬WorkFullTime(x)) ::: Those who are full-time enrolled in an academic program can not work full-time.\n∀x (WantsToStudyAbroad(x) → StudentVisa(x)) ::: Everyone who wants to study abroad needs to have a student visa.\n∀x (PhDGraduate(x) → WorkFullTime(x)) ::: All PhD graduates can work full time.\nTom(tom) ∧ ¬WantsToStudyAbroad(tom) ∧ FullTimeEnrolled(tom) ::: If Tom does not want to study abroad, he is full-time enrolled in an educational program.\nConclusion:\nPhDGraduate(tom) ::: Tom is a PhD graduate.\n------\nProblem:\nA person is a student if and only if they are enrolled in a university. A person is a student if and only if they are enrolled in a university. A person is a student if and only if they are enrolled in a university. A person is a student if and only if they are enrolled in a university. A person is a student if and only if they are enrolled in a university. A person is a student if and only if they are enrolled in a university. A person is a student if and only if they are enrolled in a university. A person is a student if and only if they are enrolled in a university. A person is a student if and only if they are enrolled in a university. A person is a student if and only if they are enrolled in a university. A person is a student if and only if they are enrolled in a university. A person is a student if and only if they are enrolled in a university. A person is a student if and only if they are enrolled in a university. A person is a student if and only if they are enrolled in a university. A person is a student if and only if they are enrolled in a university. A person is a student if and only if they are enrolled in a university. A person is a student if and only if they are enrolled in a university. A person is a student if and only if they are enrolled in a university. A person is a student if and only if they are enrolled in a university. A person is a student if and only if they are enrolled in a university. A person is a student if and only if they are enrolled in a university. A person is a student if and only if they are enrolled in a university. A person is a student if and only if they are enrolled in a university. A person is a student if and only if they are enrolled in a university. A person is a student if and only if they are enrolled in a university. A person is a student if and only if they are enrolled in a university. A person is a student if and only if they are enrolled in a university. A person is a student if and only if they are enrolled in a university. A person is a student if and only if they are enrolled in a university. A person is a student if and only if they are enrolled in a university. A person is a student if and only if they are enrolled in a university. A person is a student if and only if they are enrolled in a university. A person is a student if and only if they are enrolled in a university. A person is a student if and only if they are enrolled in a university. A person is a student if and only if they are enrolled in a university. A person is a student if and only if they are enrolled in a university. A person is a student if and only if they are enrolled in a university. A person is a student if and only if they are enrolled in a university. A person is a student if and only if they are enrolled in a university. A person is a student if and only if they are enrolled in a university. A person is a student if and only if they are enrolled in a university. A person is a student if and only if they are enrolled in a university. A person is a student if and only if"
    ]
  },
  {
    "id": "FOLIO_train_270",
    "context": "To get a student visa, you must be full-time enrolled in an academic program. Those who are full-time enrolled in an academic program can not work full-time. Everyone who wants to study abroad needs to have a student visa. All PhD graduates can work full time. If Tom does not want to study abroad, he is full-time enrolled in an educational program.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tom is not a PhD graduate.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nStudentVisa(x) ::: x has a student visa.\nFullTimeEnrolled(x) ::: x is full-time enrolled in an academic program.\nWorkFullTime(x) ::: x works full-time.\nWantsToStudyAbroad(x) ::: x wants to study abroad.\nPhDGraduate(x) ::: x is a PhD graduate.\nTom(x) ::: x is Tom.\nPremises:\n∀x (FullTimeEnrolled(x) → ¬WorkFullTime(x)) ::: Those who are full-time enrolled in an academic program can not work full-time.\n∀x (WantsToStudyAbroad(x) → StudentVisa(x)) ::: Everyone who wants to study abroad needs to have a student visa.\n∀x (PhDGraduate(x) → WorkFullTime(x)) ::: All PhD graduates can work full time.\nTom(tom) ∧ ¬WantsToStudyAbroad(tom) ∧ FullTimeEnrolled(tom) ::: If Tom does not want to study abroad, he is full-time enrolled in an educational program.\nConclusion:\n¬PhDGraduate(tom) ::: Tom is not a PhD graduate.\n------"
    ]
  },
  {
    "id": "FOLIO_train_271",
    "context": "To get a student visa, you must be full-time enrolled in an academic program. Those who are full-time enrolled in an academic program can not work full-time. Everyone who wants to study abroad needs to have a student visa. All PhD graduates can work full time. If Tom does not want to study abroad, he is full-time enrolled in an educational program.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tom wants to study abroad.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nWants(x, y) ::: x wants to do y.\nFullTimeEnrolled(x) ::: x is full-time enrolled in an academic program.\nWorkFullTime(x) ::: x works full-time.\nStudentVisa(x) ::: x has a student visa.\nPhDGraduate(x) ::: x is a PhD graduate.\nPremises:\n∀x (FullTimeEnrolled(x) → ¬WorkFullTime(x)) ::: Those who are full-time enrolled in an academic program can not work full-time.\n∀x (Wants(x, studyAbroad) → StudentVisa(x)) ::: Everyone who wants to study abroad needs to have a student visa.\n∀x (PhDGraduate(x) → WorkFullTime(x)) ::: All PhD graduates can work full time.\nFullTimeEnrolled(tom) ∧ ¬Wants(tom, studyAbroad) ::: If Tom does not want to study abroad, he is full-time enrolled in an educational program.\nConclusion:\nWants(tom, studyAbroad) ::: Tom wants to study abroad.\n------\nProblem:\nA person who is a student is a student. A person who is a student is a person"
    ]
  },
  {
    "id": "FOLIO_train_272",
    "context": "The installment sales method is the approach to recognize revenue under the US GAAP. In accrual accounting, revenues are recognized when they are realized. In cash accounting, revenues are recognized when cash is received. The US GAAP is the accounting standard developed and used by the US Securities and Exchange Commission. Sally works for the US Securities and Exchange Commission.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Sally's company utilizes the installment sales method.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nInstallmentSalesMethod ::: The installment sales method is the approach to recognize revenue under the US GAAP.\nAccrualAccounting ::: In accrual accounting, revenues are recognized when they are realized.\nCashAccounting ::: In cash accounting, revenues are recognized when cash is received.\nUSGAAP ::: The US GAAP is the accounting standard developed and used by the US Securities and Exchange Commission.\nWorksFor(x, y) ::: x works for y.\nPremises:\nInstallmentSalesMethod ⊕ AccrualAccounting ⊕ CashAccounting ::: The installment sales method is the approach to recognize revenue under the US GAAP.\nUSGAAP ⊕ WorksFor(sally, usSecuritiesAndExchangeCommission) ::: Sally works for the US Securities and Exchange Commission.\nConclusion:\nWorksFor(sally, installmentSalesMethod) ::: Sally's company utilizes the installment sales method.\n------\nProblem:\nThe US Securities and Exchange Commission is an independent agency of the United States federal government. The US Securities and Exchange Commission is responsible for enforcing the federal securities laws, proposing securities rules, and regulating the securities industry. The US Securities and Exchange"
    ]
  },
  {
    "id": "FOLIO_train_273",
    "context": "The installment sales method is the approach to recognize revenue under the US GAAP. In accrual accounting, revenues are recognized when they are realized. In cash accounting, revenues are recognized when cash is received. The US GAAP is the accounting standard developed and used by the US Securities and Exchange Commission. Sally works for the US Securities and Exchange Commission.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The company Sally works for performs accrual accounting.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nInstallmentSalesMethod(x) ::: x is the installment sales method.\nAccrualAccounting(x) ::: x is accrual accounting.\nCashAccounting(x) ::: x is cash accounting.\nUSGAAP(x) ::: x is the US GAAP.\nWorkFor(x, y) ::: x works for y.\nPremises:\nInstallmentSalesMethod(installmentSalesMethod) ::: The installment sales method is the approach to recognize revenue under the US GAAP.\nAccrualAccounting(accrualAccounting) ∧ CashAccounting(cashAccounting) ::: In accrual accounting, revenues are recognized when they are realized. In cash accounting, revenues are recognized when cash is received.\nUSGAAP(usGAAP) ∧ WorkFor(sally, usGAAP) ::: The US GAAP is the accounting standard developed and used by the US Securities and Exchange Commission. Sally works for the US Securities and Exchange Commission.\nConclusion:\nAccrualAccounting(usGAAP) ::: The company Sally works for performs accrual accounting.\n------\nProblem:\nThe US Securities and Exchange Commission is an independent agency of the United States federal government. The US Securities and"
    ]
  },
  {
    "id": "FOLIO_train_274",
    "context": "The installment sales method is the approach to recognize revenue under the US GAAP. In accrual accounting, revenues are recognized when they are realized. In cash accounting, revenues are recognized when cash is received. The US GAAP is the accounting standard developed and used by the US Securities and Exchange Commission. Sally works for the US Securities and Exchange Commission.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Sally does not work for a company that uses the GAAP.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nWorksFor(x, y) ::: x works for y.\nUSGAAP(x) ::: x is the US GAAP.\nInstallmentSalesMethod(x) ::: x is the installment sales method.\nAccrualAccounting(x) ::: x is accrual accounting.\nCashAccounting(x) ::: x is cash accounting.\nPremises:\nWorksFor(sally, ussec) ∧ USGAAP(ussec) ::: Sally works for the US Securities and Exchange Commission.\nInstallmentSalesMethod(ussec) ::: The installment sales method is the approach to recognize revenue under the US GAAP.\nAccrualAccounting(ussec) ∧ CashAccounting(ussec) ::: In accrual accounting, revenues are recognized when they are realized. In cash accounting, revenues are recognized when cash is received.\nConclusion:\n¬WorksFor(sally, company) ::: Sally does not work for a company that uses the GAAP.\n------\nProblem:\nThe US Securities and Exchange Commission is a federal agency that regulates the securities industry. The US Securities and Exchange Commission is a federal agency. The US Securities and Exchange Commission is a federal agency that regulates the securities industry"
    ]
  },
  {
    "id": "FOLIO_train_275",
    "context": "All people who are respected by others are people who contribute to the country. If a person is respected by others, then he/she contributes to the country. All people available to have a visit without any fees are those respected by others. All Customers who once served in the army are available to have a visit without any fees. All people who once were sentenced for thief stayed in prison for some time. All people who once stayed in prison for some time have a bad record in the local state. James was either once sentenced for thief or stayed in prison for some time. James is either with a bad record in the local state or respected by others.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James contributes to the country.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRespected(x) ::: x is respected by others.\nContribute(x) ::: x contributes to the country.\nAvailable(x) ::: x is available to have a visit without any fees.\nCustomer(x) ::: x is a Customer.\nArmy(x) ::: x once served in the army.\nPrison(x) ::: x once stayed in prison for some time.\nBadRecord(x) ::: x has a bad record in the local state.\nPremises:\n∀x (Respected(x) → Contribute(x)) ::: If a person is respected by others, then he/she contributes to the country.\n∀x (Respected(x) → Available(x)) ::: All people available to have a visit without any fees are those respected by others.\n∀x (Customer(x) ∧ Army(x)) → Available(x) ::: All Customers who once served in the army are available to have a visit without any fees.\n∀x (Prison(x) → BadRecord(x)) ::: All people who once stayed in prison for some time have a bad record in the local state.\n∀x (BadRecord(x) → ¬Respected(x)) ::: All people who once stayed in"
    ]
  },
  {
    "id": "FOLIO_train_276",
    "context": "All people who are respected by others are people who contribute to the country. If a person is respected by others, then he/she contributes to the country. All people available to have a visit without any fees are those respected by others. All Customers who once served in the army are available to have a visit without any fees. All people who once were sentenced for thief stayed in prison for some time. All people who once stayed in prison for some time have a bad record in the local state. James was either once sentenced for thief or stayed in prison for some time. James is either with a bad record in the local state or respected by others.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James does not contribute to the country.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRespected(x) ::: x is respected by others.\nContribute(x) ::: x contributes to the country.\nAvailable(x) ::: x is available to have a visit without any fees.\nCustomer(x) ::: x is a Customer.\nArmy(x) ::: x once served in the army.\nPrison(x) ::: x once stayed in prison for some time.\nBadRecord(x) ::: x has a bad record in the local state.\nPremises:\n∀x (Respected(x) → Contribute(x)) ::: If a person is respected by others, then he/she contributes to the country.\n∀x (Respected(x) → Available(x)) ::: All people available to have a visit without any fees are those respected by others.\n∀x (Customer(x) ∧ Army(x)) → Available(x) ::: All Customers who once served in the army are available to have a visit without any fees.\n∀x (Prison(x) → BadRecord(x)) ::: All people who once stayed in prison for some time have a bad record in the local state.\n∀x (BadRecord(x) → ¬Respected(x)) ::: All people who once stayed in"
    ]
  },
  {
    "id": "FOLIO_train_277",
    "context": "All people who are respected by others are people who contribute to the country. If a person is respected by others, then he/she contributes to the country. All people available to have a visit without any fees are those respected by others. All Customers who once served in the army are available to have a visit without any fees. All people who once were sentenced for thief stayed in prison for some time. All people who once stayed in prison for some time have a bad record in the local state. James was either once sentenced for thief or stayed in prison for some time. James is either with a bad record in the local state or respected by others.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James contributes to the country, and he once served in the army.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRespected(x) ::: x is respected by others.\nContribute(x) ::: x contributes to the country.\nAvailable(x) ::: x is available to have a visit without any fees.\nCustomer(x) ::: x is a customer.\nArmy(x) ::: x once served in the army.\nPrison(x) ::: x once stayed in prison for some time.\nBadRecord(x) ::: x has a bad record in the local state.\nPremises:\n∀x (Respected(x) → Contribute(x)) ::: All people who are respected by others are people who contribute to the country.\n∀x (Respected(x) → Contribute(x)) ::: If a person is respected by others, then he/she contributes to the country.\n∀x (Available(x) ∧ Respected(x)) ::: All people available to have a visit without any fees are those respected by others.\n∀x (Customer(x) ∧ Army(x)) → Available(x) ::: All Customers who once served in the army are available to have a visit without any fees.\n∀x (Prison(x) → BadRecord(x)) ::: All people who once stayed in prison for some"
    ]
  },
  {
    "id": "FOLIO_train_278",
    "context": "All people who are respected by others are people who contribute to the country. If a person is respected by others, then he/she contributes to the country. All people available to have a visit without any fees are those respected by others. All Customers who once served in the army are available to have a visit without any fees. All people who once were sentenced for thief stayed in prison for some time. All people who once stayed in prison for some time have a bad record in the local state. James was either once sentenced for thief or stayed in prison for some time. James is either with a bad record in the local state or respected by others.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James did not contribute to the country and did not serve in the army.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRespected(x) ::: x is respected by others.\nContribute(x) ::: x contributes to the country.\nAvailable(x) ::: x is available to have a visit without any fees.\nCustomer(x) ::: x is a Customer.\nArmy(x) ::: x once served in the army.\nPrison(x) ::: x once stayed in prison for some time.\nBadRecord(x) ::: x has a bad record in the local state.\nPremises:\n∀x (Respected(x) → Contribute(x)) ::: All people who are respected by others are people who contribute to the country.\n∀x (Respected(x) → Contribute(x)) ::: If a person is respected by others, then he/she contributes to the country.\n∀x (Available(x) ∧ Respected(x)) ::: All people available to have a visit without any fees are those respected by others.\n∀x (Customer(x) ∧ Army(x)) → Available(x) ::: All Customers who once served in the army are available to have a visit without any fees.\n∀x (Prison(x) → BadRecord(x)) ::: All people who once stayed in prison for some"
    ]
  },
  {
    "id": "FOLIO_train_279",
    "context": "The Croton River watershed is the drainage basin of the Croton River. The Croton River is in southwestern New York. Water from the Croton River watershed flows to the Bronx. The Bronx is in New York.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Water from the Croton River watershed flows to somewhere in New York.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nWatershed(x, y) ::: x is the drainage basin of river y.\nRiver(x) ::: x is a river.\nFlow(x, y) ::: Water from x flows to y.\nIn(x, y) ::: x is in y.\nPremises:\nWatershed(crotonRiverWatershed, crotonRiver) ∧ River(crotonRiver) ::: The Croton River watershed is the drainage basin of the Croton River.\nRiver(crotonRiver) ∧ In(crotonRiver, southwesternNewYork) ::: The Croton River is in southwestern New York.\nFlow(crotonRiver, bronx) ∧ River(bronx) ::: Water from the Croton River flows to the Bronx.\nRiver(bronx) ∧ In(bronx, newYork) ::: The Bronx is in New York.\nConclusion:\nFlow(crotonRiverWatershed, somewhereInNewYork) ::: Water from the Croton River watershed flows to somewhere in New York.\n------\nProblem:\nThe United States is a country. The United States is in North America. The United States is in the Western Hemis"
    ]
  },
  {
    "id": "FOLIO_train_280",
    "context": "The Croton River watershed is the drainage basin of the Croton River. The Croton River is in southwestern New York. Water from the Croton River watershed flows to the Bronx. The Bronx is in New York.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Croton River watershed is in the Bronx.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nWatershed(x, y) ::: x is the drainage basin of river y.\nRiver(x) ::: x is a river.\nIn(x, y) ::: x is in y.\nFlow(x, y) ::: Water from x flows to y.\nPremises:\nWatershed(crotonRiverWatershed, crotonRiver) ∧ River(crotonRiver) ::: The Croton River watershed is the drainage basin of the Croton River.\nIn(crotonRiver, southwesternNewYork) ∧ River(crotonRiver) ::: The Croton River is in southwestern New York.\nFlow(crotonRiverWatershed, bronx) ∧ In(bronx, newYork) ::: Water from the Croton River watershed flows to the Bronx.\nConclusion:\nIn(crotonRiverWatershed, bronx) ::: The Croton River watershed is in the Bronx.\n------"
    ]
  },
  {
    "id": "FOLIO_train_281",
    "context": "The Croton River watershed is the drainage basin of the Croton River. The Croton River is in southwestern New York. Water from the Croton River watershed flows to the Bronx. The Bronx is in New York.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Water from the Croton River flows to the Bronx.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCrotonRiverWatershed(x) ::: x is the drainage basin of the Croton River.\nCrotonRiver(x) ::: x is the Croton River.\nSouthwesternNewYork(x) ::: x is in southwestern New York.\nFlow(x, y) ::: Water from x flows to y.\nBronx(x) ::: x is the Bronx.\nNewYork(x) ::: x is in New York.\nPremises:\nCrotonRiverWatershed(crotonRiverWatershed) ::: The Croton River watershed is the drainage basin of the Croton River.\nCrotonRiver(crotonRiver) ::: The Croton River is in southwestern New York.\nFlow(crotonRiver, bronx) ::: Water from the Croton River flows to the Bronx.\nBronx(bronx) ::: The Bronx is in New York.\nNewYork(newYork) ::: New York"
    ]
  },
  {
    "id": "FOLIO_train_282",
    "context": "All nuclear-powered submarines are warships. No nuclear-powered submarines are commercial vessels.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Some warships are commercial vessels.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nNuclearPoweredSubmarine(x) ::: x is a nuclear-powered submarine.\nWarship(x) ::: x is a warship.\nCommercialVessel(x) ::: x is a commercial vessel.\nPremises:\n∀x (NuclearPoweredSubmarine(x) → Warship(x)) ::: All nuclear-powered submarines are warships.\n∀x (NuclearPoweredSubmarine(x) → ¬CommercialVessel(x)) ::: No nuclear-powered submarines are commercial vessels.\nConclusion:\n∃x (Warship(x) ∧ CommercialVessel(x)) ::: Some warships are commercial vessels.\n------\nProblem:\nAll people who are not students are either employed or unemployed. All people who are employed are either employed full-time or employed part-time. All people who are employed full-time are employed.\nQuestion:\nBased on the above information, is the following statement true, false,"
    ]
  },
  {
    "id": "FOLIO_train_283",
    "context": "If a album is written by a rock band, then the genre of the album is rock. If a band writes a album winning an award, then this band wins this award. Trouble at the Henhouse is an album by The Tragically Hip. The Tragically Hip is a Canadian rock band. The song \"Butts Wigglin'\" is in Trouble at the Henhouse. Trouble at the Henhouse won the Album of the Year award. A song in Trouble at the Henhouse appeared in a film.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The genre of Trouble at the Henhouse is rock.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAlbum(x) ::: x is an album.\nBand(x) ::: x is a band.\nGenre(x) ::: x is a genre.\nWrittenBy(x, y) ::: x is written by y.\nWin(x, y) ::: x wins y.\nAward(x) ::: x is an award.\nSong(x) ::: x is a song.\nIn(x, y) ::: x is in y.\nAppear(x, y) ::: x appears in y.\nPremises:\nAlbum(troubleAtTheHenhouse) ∧ WrittenBy(theTragicallyHip, troubleAtTheHenhouse) ∧ Band(theTragicallyHip) ∧ Genre(rock) ::: If a album is written by a rock band, then the genre of the album is rock.\nWin(theTragicallyHip, award) ∧ Band(theTragicallyHip) ∧ Award(a"
    ]
  },
  {
    "id": "FOLIO_train_284",
    "context": "If a album is written by a rock band, then the genre of the album is rock. If a band writes a album winning an award, then this band wins this award. Trouble at the Henhouse is an album by The Tragically Hip. The Tragically Hip is a Canadian rock band. The song \"Butts Wigglin'\" is in Trouble at the Henhouse. Trouble at the Henhouse won the Album of the Year award. A song in Trouble at the Henhouse appeared in a film.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A canada rock band didn't win the Album of the Year award.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAlbum(x) ::: x is an album.\nBand(x) ::: x is a band.\nRock(x) ::: x is a rock album.\nGenre(x, y) ::: x is the genre of y.\nWrite(x, y) ::: x writes y.\nWin(x, y) ::: x wins y.\nSong(x) ::: x is a song.\nIn(x, y) ::: x is in y.\nAppear(x, y) ::: x appears in y.\nPremises:\n∀x (Album(x) ∧ Write(band, x) → Genre(x, rock)) ::: If a album is written by a rock band, then the genre of the album is rock.\n∀x (Band(x) ∧ Write(x, y) ∧ Win(y, award)) → Win(x, award) ::: If a band writes a album winning an award, then this band wins this award."
    ]
  },
  {
    "id": "FOLIO_train_285",
    "context": "If a album is written by a rock band, then the genre of the album is rock. If a band writes a album winning an award, then this band wins this award. Trouble at the Henhouse is an album by The Tragically Hip. The Tragically Hip is a Canadian rock band. The song \"Butts Wigglin'\" is in Trouble at the Henhouse. Trouble at the Henhouse won the Album of the Year award. A song in Trouble at the Henhouse appeared in a film.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? \"Butts Wigglin'\" appeared in a film.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAlbum(x) ::: x is an album.\nBand(x) ::: x is a band.\nRock(x) ::: x is a rock album.\nGenre(x, y) ::: x is the genre of album y.\nWrite(x, y) ::: x writes album y.\nWin(x, y) ::: x wins award y.\nSong(x) ::: x is a song.\nIn(x, y) ::: x is in album y.\nAppear(x, y) ::: x appears in film y.\nPremises:\n∀x (Album(x) ∧ Write(band, x) → Genre(x, rock)) ::: If a album is written by a rock band, then the genre of the album is rock.\n∀x (Write(x, y) ∧ Win(x, award) → Win(x, award)) ::: If a band writes a album winning an award, then this band wins this award.\nAlbum"
    ]
  },
  {
    "id": "FOLIO_train_286",
    "context": "Daniel is a software engineer and he works at Palantir Technologies. Daniel studied bioengineering during his undergraduate at Rice University. Daniel’s older sister works at Meta as a technical sourcer. Daniel’s dad and older sister both graduated from Stanford University. Daniel’s dad is a doctor practicing internal medicine at a veteran’s hospital in Minneapolis",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Daniel once applied to Stanford University, but he couldn’t get in even though he has family members who are Stanford alumni.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSoftwareEngineer(x) ::: x is a software engineer.\nWork(x, y) ::: x works at y.\nStudy(x, y) ::: x studied y during his undergraduate.\nOlderSister(x, y) ::: x is the older sister of y.\nGraduate(x, y) ::: x graduated from y.\nDoctor(x) ::: x is a doctor.\nPractice(x, y) ::: x practices y.\nVeteranHospital(y) ::: y is a veteran’s hospital.\nMinneapolis(y) ::: y is in Minneapolis.\nTechnicalSourcer(x) ::: x is a technical sourcer.\nPremises:\nSoftwareEngineer(daniel) ∧ Work(daniel, palantir) ::: Daniel is a software engineer and he works at Palantir Technologies.\nStudy(daniel, bioengineering) ∧ Undergraduate(daniel, rice) ::: Daniel"
    ]
  },
  {
    "id": "FOLIO_train_287",
    "context": "Daniel is a software engineer and he works at Palantir Technologies. Daniel studied bioengineering during his undergraduate at Rice University. Daniel’s older sister works at Meta as a technical sourcer. Daniel’s dad and older sister both graduated from Stanford University. Daniel’s dad is a doctor practicing internal medicine at a veteran’s hospital in Minneapolis",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Daniel studied bioengineering as his major at Rice University.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSoftwareEngineer(x) ::: x is a software engineer.\nWork(x, y) ::: x works at y.\nStudy(x, y) ::: x studied y during his undergraduate at Rice University.\nOlderSister(x, y) ::: x is the older sister of y.\nGraduate(x, y) ::: x graduated from y.\nDoctor(x) ::: x is a doctor.\nPractice(x, y) ::: x practices y at a veteran’s hospital in Minneapolis.\nPremises:\nSoftwareEngineer(daniel) ∧ Work(daniel, palantir) ::: Daniel is a software engineer and he works at Palantir Technologies.\nStudy(daniel, bioengineering) ::: Daniel studied bioengineering during his undergraduate at Rice University.\nOlderSister(daniel, sister) ∧ Work(sister, meta) ::: Daniel’s older sister works at Meta as a technical sourcer.\nGraduate"
    ]
  },
  {
    "id": "FOLIO_train_288",
    "context": "Daniel is a software engineer and he works at Palantir Technologies. Daniel studied bioengineering during his undergraduate at Rice University. Daniel’s older sister works at Meta as a technical sourcer. Daniel’s dad and older sister both graduated from Stanford University. Daniel’s dad is a doctor practicing internal medicine at a veteran’s hospital in Minneapolis",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Daniel and his sister grew up in Minneapolis, Minnesota.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nWorks(x, y) ::: x works at y.\nStudy(x, y) ::: x studied y during his undergraduate.\nGraduate(x, y) ::: x graduated from y.\nOlderSister(x, y) ::: x is the older sister of y.\nDoctor(x) ::: x is a doctor.\nPractice(x, y) ::: x practices y.\nVeteran(x) ::: x is a veteran.\nHospital(x) ::: x is a hospital.\nMinneapolis(x) ::: x is in Minneapolis.\nMinnesota(x) ::: x is in Minnesota.\nPremises:\nWorks(daniel, palantir) ∧ Works(daniel’s sister, meta) ∧ Works(daniel’s dad, veteran’s hospital) ::: Daniel is a software engineer and he works at Palantir Technologies. Daniel’s older sister works at Meta as a technical sourcer. Daniel’s dad"
    ]
  },
  {
    "id": "FOLIO_train_289",
    "context": "All commerical aircraft are produced by either Boeing or Airbus. All American Airlines jets are commerical aircraft. Airbus made more in revenue than Boeing last year.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? An American Airlines plane is either a Boeing or Airbus plane.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCommercial(x) ::: x is a commerical aircraft.\nProduce(x, y) ::: x produces y.\nAmericanAirlines(x) ::: x is an American Airlines jet.\nJet(x) ::: x is a jet.\nRevenue(x, y) ::: x made y in revenue.\nPremises:\n∀x (Commercial(x) → (Produce(Boeing, x) ∨ Produce(Airbus, x))) ::: All commerical aircraft are produced by either Boeing or Airbus.\n∀x (AmericanAirlines(x) → Commercial(x)) ::: All American Airlines jets are commerical aircraft.\nRevenue(Airbus, more) ∧ Revenue(Boeing, less) ::: Airbus made more in revenue than Boeing last year.\nConclusion:\n∀x (AmericanAirlines(x) → (Jet(x) ∨ Boeing(x) ∨ Airbus("
    ]
  },
  {
    "id": "FOLIO_train_290",
    "context": "All commerical aircraft are produced by either Boeing or Airbus. All American Airlines jets are commerical aircraft. Airbus made more in revenue than Boeing last year.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There exists a SpaceX commerical aircraft.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCommercial(x) ::: x is a commerical aircraft.\nProducedBy(x, y) ::: x is produced by y.\nAmericanAirlines(x) ::: x is an American Airlines jet.\nSpaceX(x) ::: x is a SpaceX aircraft.\nRevenue(x, y) ::: x made y in revenue.\nPremises:\n∀x (Commercial(x) → (ProducedBy(x, boeing) ∨ ProducedBy(x, airbus))) ::: All commerical aircraft are produced by either Boeing or Airbus.\n∀x (AmericanAirlines(x) → Commercial(x)) ::: All American Airlines jets are commerical aircraft.\nRevenue(airbus, more) ∧ Revenue(boeing, less) ::: Airbus made more in revenue than Boeing last year.\nConclusion:\n∃x (Commercial(x) ∧ SpaceX(x)) ::: There exists a SpaceX commerical aircraft.\n------"
    ]
  },
  {
    "id": "FOLIO_train_291",
    "context": "All commerical aircraft are produced by either Boeing or Airbus. All American Airlines jets are commerical aircraft. Airbus made more in revenue than Boeing last year.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There does not exist a United Airlines plane produced by Boeing.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCommercial(x) ::: x is a commerical aircraft.\nProducedBy(x, y) ::: x is produced by y.\nAmericanAirlines(x) ::: x is an American Airlines jet.\nUnitedAirlines(x) ::: x is a United Airlines plane.\nRevenue(x, y) ::: x made y in revenue.\nPremises:\n∀x (Commercial(x) → (ProducedBy(x, boeing) ∨ ProducedBy(x, airbus))) ::: All commerical aircraft are produced by either Boeing or Airbus.\n∀x (AmericanAirlines(x) → Commercial(x)) ::: All American Airlines jets are commerical aircraft.\nRevenue(airbus, more) ∧ Revenue(boeing, last) ::: Airbus made more in revenue than Boeing last year.\nConclusion:\n¬∃x (UnitedAirlines(x) ∧ ProducedBy(x, boeing)) ::: There does"
    ]
  },
  {
    "id": "FOLIO_train_292",
    "context": "All commerical aircraft are produced by either Boeing or Airbus. All American Airlines jets are commerical aircraft. Airbus made more in revenue than Boeing last year.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There is a commercial plane made by both Airbus and Boeing.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCommercial(x) ::: x is a commerical aircraft.\nProduce(x, y) ::: x produces y.\nAmericanAirlines(x) ::: x is an American Airlines jet.\nRevenue(x, y) ::: x made y in revenue.\nPremises:\n∀x (Commercial(x) → (Produce(Boeing, x) ∨ Produce(Airbus, x))) ::: All commerical aircraft are produced by either Boeing or Airbus.\n∀x (AmericanAirlines(x) → Commercial(x)) ::: All American Airlines jets are commerical aircraft.\nRevenue(Airbus, more) ∧ Revenue(Boeing, less) ::: Airbus made more in revenue than Boeing last year.\nConclusion:\n∃x (Produce(Boeing, x) ∧ Produce(Airbus, x)) ::: There is a commercial plane made by both Airbus and Boeing.\n------\nProblem:\nAll"
    ]
  },
  {
    "id": "FOLIO_train_293",
    "context": "Luzon is an island in the Philippines. In December 1999, an earthquake struck Luzon. People died in the December 1999 earthquake in Luzon.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Leyte is an island in the Philippines.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nIsland(x) ::: x is an island.\nPhilippines(x) ::: x is in the Philippines.\nEarthquake(x) ::: x is an earthquake.\nDecember(x) ::: x is in December.\nYear(x) ::: x is a year.\nLuzon(x) ::: x is Luzon.\nLeyte(x) ::: x is Leyte.\nPremises:\nIsland(luzon) ∧ Philippines(luzon) ∧ Earthquake(december1999Earthquake) ∧ Philippines(december1999Earthquake) ∧ People(december1999Earthquake) ∧ Death(december1999Earthquake) ::: Luzon is an island in the Philippines. In December 1999, an earthquake struck Luzon. People died in the December 1999 earthquake in Luzon."
    ]
  },
  {
    "id": "FOLIO_train_294",
    "context": "Luzon is an island in the Philippines. In December 1999, an earthquake struck Luzon. People died in the December 1999 earthquake in Luzon.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? No one has ever died of an earthquake that struck in the Philippines.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nIsland(x) ::: x is an island.\nPhilippines(x) ::: x is in the Philippines.\nEarthquake(x) ::: x is an earthquake.\nDecember(x) ::: x is in December.\nStrike(x, y) ::: x struck y.\nPerson(x) ::: x is a person.\nDie(x) ::: x died.\nPremises:\nIsland(luzon) ∧ Philippines(luzon) ∧ Earthquake(december1999earthquake) ∧ Strike(december1999earthquake, luzon) ::: Luzon is an island in the Philippines. In December 1999, an earthquake struck Luzon.\n∀x (Earthquake(x) ∧ Strike(x, Philippines) → ∃y (Person(y) ∧ Die(y))) ::: People died in the December 19"
    ]
  },
  {
    "id": "FOLIO_train_295",
    "context": "Luzon is an island in the Philippines. In December 1999, an earthquake struck Luzon. People died in the December 1999 earthquake in Luzon.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? In 1999, there was at least one earthquake in the Philippines.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nIsland(x) ::: x is an island.\nPhilippines(x) ::: x is the Philippines.\nEarthquake(x) ::: x is an earthquake.\nDecember(x) ::: x is December.\nYear(x) ::: x is a year.\nPerson(x) ::: x is a person.\nDie(x, y) ::: x died in y.\nPremises:\nIsland(luzon) ∧ Philippines(luzon) ::: Luzon is an island in the Philippines.\nEarthquake(december1999Earthquake) ∧ Die(person, december1999Earthquake) ::: In December 1999, an earthquake struck Luzon.\nConclusion:\n∃x (Island(x) ∧ Philippines(x) ∧ Earthquake(x) ∧ December(x) ∧ Year(x)) ::: In 1999"
    ]
  },
  {
    "id": "FOLIO_train_296",
    "context": "People either invest in the public stock market regularly or enjoy gambling regularly. If people invest in the public stock market regularly, then they read the Wall Street Journal and other newspapers regularly to keep updated on financial metrics. All people who enjoy gambling regularly spend a lot of money at casinos and other betting games. People who spend a lot of money at casinos and other betting games visit the Las Vegas Strip regularly. People who spend a lot of money at casinos and other betting games have a lot of disposable income to spend. If Matt invests in the public stock market regularly, then Matt neither has a lot of disposable income to spend nor invests in the public stock market regularly.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Matt reads the Wall Street Journal and other newspapers regularly to keep updated on financial metrics.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nInvest(x) ::: x invests in the public stock market regularly.\nEnjoy(x) ::: x enjoys gambling regularly.\nRead(x, y) ::: x reads y regularly to keep updated on financial metrics.\nSpend(x, y) ::: x spends a lot of money at y regularly.\nVisit(x, y) ::: x visits y regularly.\nHave(x, y) ::: x has y to spend.\nPremises:\nInvest(matt) ⊕ Enjoy(matt) ::: People either invest in the public stock market regularly or enjoy gambling regularly.\nInvest(x) → (Read(x, wallStreetJournal) ∧ Read(x, otherNewspapers)) ::: If people invest in the public stock market regularly, then they read the Wall Street Journal and other newspapers regularly to keep updated on financial metrics.\nEnjoy(x) → (Spend(x, casinos) ∧ Spend(x, otherBettingGames)) ::: All people who enjoy"
    ]
  },
  {
    "id": "FOLIO_train_297",
    "context": "People either invest in the public stock market regularly or enjoy gambling regularly. If people invest in the public stock market regularly, then they read the Wall Street Journal and other newspapers regularly to keep updated on financial metrics. All people who enjoy gambling regularly spend a lot of money at casinos and other betting games. People who spend a lot of money at casinos and other betting games visit the Las Vegas Strip regularly. People who spend a lot of money at casinos and other betting games have a lot of disposable income to spend. If Matt invests in the public stock market regularly, then Matt neither has a lot of disposable income to spend nor invests in the public stock market regularly.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Matt is either both a person who has a lot of disposable income to spend and invests in the public stock market regularly, or neither has a lot of disposable income to spend nor invests in the public stock market regularly, then Matt neither visits the Las Vegas Strip regularly nor reads the Wall Street Journal and other newspapers regularly to keep updated on the financial metrics.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nInvest(x) ::: x invests in the public stock market regularly.\nGamble(x) ::: x enjoys gambling regularly.\nRead(x, y) ::: x reads y regularly to keep updated on financial metrics.\nSpend(x, y) ::: x spends a lot of money at y regularly.\nVisit(x, y) ::: x visits y regularly.\nDisposableIncome(x) ::: x has a lot of disposable income to spend.\nPremises:\nInvest(matt) ⊕ Gamble(matt) ::: People either invest in the public stock market regularly or enjoy gambling regularly.\nInvest(x) → (Read(x, wallStreetJournal) ∧ Read(x, otherNewspapers)) ::: If people invest in the public stock market regularly, then they read the Wall Street Journal and other newspapers regularly to keep updated on financial metrics.\nGamble(x) → (Spend(x, casinos) ∧ Spend(x, otherBet"
    ]
  },
  {
    "id": "FOLIO_train_298",
    "context": "People either invest in the public stock market regularly or enjoy gambling regularly. If people invest in the public stock market regularly, then they read the Wall Street Journal and other newspapers regularly to keep updated on financial metrics. All people who enjoy gambling regularly spend a lot of money at casinos and other betting games. People who spend a lot of money at casinos and other betting games visit the Las Vegas Strip regularly. People who spend a lot of money at casinos and other betting games have a lot of disposable income to spend. If Matt invests in the public stock market regularly, then Matt neither has a lot of disposable income to spend nor invests in the public stock market regularly.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Matt is either a person who has a lot of disposable income to spend or reads the Wall Street Journal and other newspapers regularly, then Matt neither has a lot of disposable income to spend nor visits the Las Vegas Strip Regularly.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nInvest(x) ::: x invests in the public stock market regularly.\nEnjoy(x) ::: x enjoys gambling regularly.\nRead(x) ::: x reads the Wall Street Journal and other newspapers regularly to keep updated on financial metrics.\nSpend(x) ::: x spends a lot of money at casinos and other betting games.\nVisit(x) ::: x visits the Las Vegas Strip regularly.\nDisposable(x) ::: x has a lot of disposable income to spend.\nPremises:\nInvest(matt) ⊕ Enjoy(matt) ::: People either invest in the public stock market regularly or enjoy gambling regularly.\nInvest(x) → (Read(x) ∧ ¬Disposable(x)) ::: If people invest in the public stock market regularly, then they read the Wall Street Journal and other newspapers regularly to keep updated on financial metrics.\nEnjoy(x) → (Spend(x) ∧ Visit(x)) ::: All people who enjoy gambling regularly spend a"
    ]
  },
  {
    "id": "FOLIO_train_299",
    "context": "All students learning piano can strike the right notes. All students who can strike the right note can get the rhythms right. If a student can get the rhythms right, he will start working on coordination between the left and the right hands. Some students who start working on coordination between the left and the right hands become good at it. The other students find it challenging. If John can strike the right notes, get the rhythms right and is good at coordination between right and left hands, then he puts emotions into his playing. John is a student learning piano. John does not find coordination between the left and the right hands challenging.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? John can get the rhythms right.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nStudent(x) ::: x is a student.\nLearning(x, y) ::: x is learning y.\nPiano(y) ::: y is a piano.\nStrike(x, y) ::: x can strike the right notes.\nGet(x, y) ::: x can get the rhythms right.\nWork(x, y) ::: x will start working on y.\nGood(x, y) ::: x is good at y.\nChallenging(x, y) ::: x finds y challenging.\nPremises:\n∀x (Student(x) ∧ Learning(x, piano)) → Strike(x, piano) ::: All students learning piano can strike the right notes.\n∀x (Student(x) ∧ Learning(x, piano) ∧ Strike(x, piano)) → Get(x, piano) ::: All students who can strike the right note can get the rhythms right.\n∀x (Student(x)"
    ]
  },
  {
    "id": "FOLIO_train_300",
    "context": "All students learning piano can strike the right notes. All students who can strike the right note can get the rhythms right. If a student can get the rhythms right, he will start working on coordination between the left and the right hands. Some students who start working on coordination between the left and the right hands become good at it. The other students find it challenging. If John can strike the right notes, get the rhythms right and is good at coordination between right and left hands, then he puts emotions into his playing. John is a student learning piano. John does not find coordination between the left and the right hands challenging.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? John does not put emotions into his playing.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nStudent(x) ::: x is a student.\nLearning(x, y) ::: x is learning y.\nPiano(y) ::: y is a piano.\nStrike(x, y) ::: x can strike the right notes.\nGet(x, y) ::: x can get the rhythms right.\nWork(x, y) ::: x starts working on y.\nGood(x, y) ::: x is good at y.\nChallenging(x, y) ::: x finds y challenging.\nPut(x, y) ::: x puts emotions into y.\nPremises:\n∀x (Student(x) ∧ Learning(x, piano)) → Strike(x, piano) ::: All students learning piano can strike the right notes.\n∀x (Student(x) ∧ Strike(x, piano)) → Get(x, piano) ::: All students who can strike the right note can get the rhythms right.\n∀x (Student(x) ∧ Get(x, piano)) → Work(x, coordination) ::: If a student can get the rhythms right, he will start working on coordination between the left and the right hands.\n∀x (Student(x) ∧ Work(x, coordination)) → Good(x, coordination) ::: Some students who start working on coordination between the left and the right hands become good at it.\n∀x (Student(x) ∧ Good(x, coordination)) → Challenging(x, coordination) ::: The other students find it challenging.\nJohn(john) ∧ Student(john) ∧ Learning(john, piano) ::: John is a student learning piano.\n¬Challenging(john, coordination) ::: John does not find coordination between the left and the right hands challenging.\n∀x (Student(x) ∧ Learning(x, piano) ∧ Strike(x, piano) ∧ Get(x, piano) ∧ Good(x, coordination)) → Put(x, playing) ::: If John can strike the right notes, get the rhythms right and is good at coordination between right and left hands, then he puts emotions into his playing.\nConclusion:\n¬Put(john, playing) ::: John does not put emotions into his playing.\n------"
    ]
  },
  {
    "id": "FOLIO_train_301",
    "context": "Barbara Ann Marshall is a former swimmer and former world record-holder. Barbara Ann Marshall participated in the 1972 Summer Olympics. Barbara Ann Marshall's home country is the United States. All people who compete in the 1972 Summer Olympics represent their home country. Barbara Ann Marshall participated in the preliminary heat in the freestyle relay. Barbara Ann Marshall did not participate in the event final of the 1972 Summer Olympics freestyle relay. Only relay swimmers who participated in the event final received medals.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Barbara Ann Marshall did not receive medals.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCompete(x, y) ::: x competes in event y.\nRepresent(x, y) ::: x represents country y.\nHomeCountry(x, y) ::: x's home country is y.\nParticipate(x, y) ::: x participates in event y.\nEventFinal(x, y) ::: x is the event final of event y.\nMedal(x, y) ::: x receives medal y.\nPremises:\nCompete(barbaraAnnMarshall, freestyleRelay) ∧ Participate(barbaraAnnMarshall, preliminaryHeat) ∧ ¬Participate(barbaraAnnMarshall, eventFinal) ::: Barbara Ann Marshall participated in the preliminary heat in the freestyle relay. Barbara Ann Marshall did not participate in the event final of the 1972 Summer Olympics freestyle relay.\nCompete(barbaraAnnMarshall, 1972SummerOlympics) ∧ Represent(barbaraAnnMarshall, unitedStates) ∧ HomeCountry(barbaraAnnMarshall, unitedStates) ::: Barbara Ann Marshall's home country is the United States. Barbara Ann Marshall participated in the 1972 Summer Olympics.\n∀x (Compete(x, 1972SummerOlympics) → Represent(x, HomeCountry(x, 1972SummerOlympics))) ::: All people who compete in the 1972 Summer Olympics represent their home country.\nMedal(x, y) ∧ Participate(x, eventFinal(y)) ::: Only relay swimmers who participated in the event final received medals.\nConclusion:\n¬Medal(barbaraAnnMarshall, medal) ::: Barbara Ann Marshall did not receive medals.\n------\nProblem:\nA person is a student if and only if the person is enrolled in a university. A person is enrolled in a university if and only if the person is enrolled in a course. A person is enrolled in a course if and only if the person is enrolled in a class. A person is enrolled in a class if and only if the person is enrolled in a section. A person is enrolled in a section if and only if the person is enrolled in a room. A person is enrolled in a room if and only if the person is enrolled in a building. A person is enrolled in a building if and only if the person is enrolled in a city. A person is enrolled in"
    ]
  },
  {
    "id": "FOLIO_train_302",
    "context": "Barbara Ann Marshall is a former swimmer and former world record-holder. Barbara Ann Marshall participated in the 1972 Summer Olympics. Barbara Ann Marshall's home country is the United States. All people who compete in the 1972 Summer Olympics represent their home country. Barbara Ann Marshall participated in the preliminary heat in the freestyle relay. Barbara Ann Marshall did not participate in the event final of the 1972 Summer Olympics freestyle relay. Only relay swimmers who participated in the event final received medals.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Barbara Ann Marshall represented the United States in the 1972 Summer Olympics.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCompete(x, y) ::: x competes in event y.\nRepresent(x, y) ::: x represents country y.\nHomeCountry(x, y) ::: x's home country is y.\nParticipate(x, y) ::: x participates in event y.\nEventFinal(x, y) ::: x is the event final of event y.\nMedal(x, y) ::: x receives medal y.\nPremises:\nCompete(barbaraAnnMarshall, freestyleRelay) ∧ Participate(barbaraAnnMarshall, preliminaryHeat) ∧ ¬Participate(barbaraAnnMarshall, eventFinal) ::: Barbara Ann Marshall participated in the preliminary heat in the freestyle relay. Barbara Ann Marshall did not participate in the event final of the 1972 Summer Olympics freestyle relay.\nCompete(barbaraAnnMarshall, 1972SummerOlympics) ∧ HomeCountry(barbaraAnnMarshall, unitedStates) ::: Barbara Ann Marshall's home country is the United States. Barbara Ann Marshall participated in the 1972 Summer Olympics.\n∀x (Compete(x, 1972SummerOlympics) → Represent(x, HomeCountry(x, 1972SummerOlympics))) ::: All people who compete in the 1972 Summer Olympics represent their home country.\nMedal(x, y) ∧ Participate(x, y) ∧ EventFinal(y, z) ::: Only relay swimmers who participated in the event final received medals.\nConclusion:\nRepresent(barbaraAnnMarshall, unitedStates) ::: Barbara Ann Marshall represented the United States in the 1972 Summer Olympics.\n------\nProblem:\nA person is a student if and only if the person is enrolled in a college or university. A person is a college student if and only if the person is enrolled in a college or university. A person is a university student if and only if the person is enrolled in a college or university. A person is a college student if and only if the person is enrolled in a college or university. A person is a university student if and only if the person is enrolled in a college or university. A person is a college student if and only if the person is enrolled in a college or university. A person is a university student if and only if the person is enrolled in a college or university. A person is"
    ]
  },
  {
    "id": "FOLIO_train_303",
    "context": "A game is played with three stages: red stage, yellow stage, and green stage. Each player begins at the red stage. All players must reach the yellow stage before they can reach the green stage. The yellow stage comes after the red stage. All players must proceed one stage at a time.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? It is possible to move to the green stage without ever reaching the yellow stage.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nStage(x) ::: x is a stage.\nRed(x) ::: x is the red stage.\nYellow(x) ::: x is the yellow stage.\nGreen(x) ::: x is the green stage.\nProceed(x, y) ::: x proceeds to y.\nPremises:\nStage(red) ∧ Stage(yellow) ∧ Stage(green) ::: There are three stages: red stage, yellow stage, and green stage.\n∀x (Stage(x) → ¬(Stage(x) ∧ Stage(red))) ::: Each player begins at the red stage.\n∀x (Stage(x) → ¬(Stage(x) ∧ Stage(yellow))) ::: All players must reach the yellow stage before they can reach the green stage.\n∀x (Stage(x) → ¬(Stage(x) ∧ Stage(green))) ::: All players must proceed one stage at a time.\n∀x (Stage(x) → ¬(Stage(red) ∧ Stage(yellow))) ::: The yellow stage comes after the red stage.\nConclusion:\n∃x (Stage(x) ∧ Proceed(x, green)) ::: It is possible to move to the green stage without ever reaching the yellow stage.\n------\nProblem:\nA person is either a student or a teacher. All students are either undergraduates or graduates. All teachers are either professors or instructors. All professors are either undergraduates or graduates. All instructors are either undergraduates or graduates.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? A person is a student and a teacher.\nBased on the above information, is the following statement true, false, or uncertain? A person is a student and a professor.\nBased on the above information, is the following statement true, false, or uncertain? A person is a student and an instructor.\nBased on the above information, is the following statement true, false, or uncertain? A person is a student and a graduate.\nBased on the above information, is the following statement true, false, or uncertain? A person is a student and an undergraduate.\nBased on the above information, is the following statement true, false, or uncertain? A person is a student and a professor.\nBased on the above information, is the following statement true, false, or uncertain? A person is a student and"
    ]
  },
  {
    "id": "FOLIO_train_304",
    "context": "A game is played with three stages: red stage, yellow stage, and green stage. Each player begins at the red stage. All players must reach the yellow stage before they can reach the green stage. The yellow stage comes after the red stage. All players must proceed one stage at a time.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? It is possible to reach the yellow stage without ever reaching the green stage.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nStage(x) ::: x is a stage.\nRed(x) ::: x is the red stage.\nYellow(x) ::: x is the yellow stage.\nGreen(x) ::: x is the green stage.\nProceed(x, y) ::: x proceeds to y.\nPremises:\nStage(red) ∧ Stage(yellow) ∧ Stage(green) ::: There are three stages: red stage, yellow stage, and green stage.\n∀x (Stage(x) → ¬(Stage(x) ∧ Stage(red))) ::: Each player begins at the red stage.\n∀x (Stage(x) → ¬(Stage(x) ∧ Stage(green))) ::: All players must proceed one stage at a time.\n∀x (Stage(x) → ¬(Stage(x) ∧ Stage(yellow))) ::: All players must reach the yellow stage before they can reach the green stage.\n∀x (Stage(x) → ¬(Stage(yellow) ∧ Stage(red))) ::: The yellow stage comes after the red stage.\nConclusion:\n∃x (Stage(x) ∧ Proceed(x, yellow)) ∧ ¬∃x (Stage(x) ∧ Proceed(x, green)) ::: It is possible to reach the yellow stage without ever reaching the green stage.\n------\nProblem:\nA person is either a student or a teacher. All students are either undergraduates or graduates. All teachers are either professors or instructors. All professors are either undergraduates or graduates. All instructors are either undergraduates or graduates.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? A person is a student and a teacher.\nBased on the above information, is the following statement true, false, or uncertain? A person is a student and a professor.\nBased on the above information, is the following statement true, false, or uncertain? A person is a student and an instructor.\nBased on the above information, is the following statement true, false, or uncertain? A person is a student and a graduate.\nBased on the above information, is the following statement true, false, or uncertain? A person is a student and an undergraduate.\nBased on the above information, is the following statement true, false, or uncertain? A person is a student and a professor"
    ]
  },
  {
    "id": "FOLIO_train_305",
    "context": "A game is played with three stages: red stage, yellow stage, and green stage. Each player begins at the red stage. All players must reach the yellow stage before they can reach the green stage. The yellow stage comes after the red stage. All players must proceed one stage at a time.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? It is possible to complete the game without ever reaching the green stage.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nStage(x) ::: x is a stage.\nRed(x) ::: x is the red stage.\nYellow(x) ::: x is the yellow stage.\nGreen(x) ::: x is the green stage.\nProceed(x, y) ::: x proceeds to y.\nPremises:\nStage(red) ∧ Stage(yellow) ∧ Stage(green) ::: There are three stages: red stage, yellow stage, and green stage.\n∀x (Stage(x) → ¬(Stage(x) ∧ Stage(red))) ::: Each player begins at the red stage.\n∀x (Stage(x) → ¬(Stage(x) ∧ Stage(yellow))) ::: All players must reach the yellow stage before they can reach the green stage.\n∀x (Stage(x) → ¬(Stage(x) ∧ Stage(green))) ::: All players must proceed one stage at a time.\n∀x (Stage(x) → ¬(Stage(red) ∧ Stage(yellow))) ::: The yellow stage comes after the red stage.\nConclusion:\n∃x (Stage(x) ∧ ¬(Stage(x) ∧ Stage(green))) ::: It is possible to complete the game without ever reaching the green stage.\n------\nProblem:\nA person is either a student or a teacher. All students are either undergraduates or graduates. All teachers are either professors or instructors. All professors are either undergraduates or graduates. All instructors are either undergraduates or graduates.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? All teachers are undergraduates.\nBased on the above information, is the following statement true, false, or uncertain? All students are undergraduates.\nBased on the above information, is the following statement true, false, or uncertain? All professors are undergraduates.\nBased on the above information, is the following statement true, false, or uncertain? All instructors are undergraduates.\nBased on the above information, is the following statement true, false, or uncertain? All undergraduates are students.\nBased on the above information, is the following statement true, false, or uncertain? All undergraduates are teachers.\nBased on the above information, is the following statement true, false, or uncertain? All undergraduates"
    ]
  },
  {
    "id": "FOLIO_train_306",
    "context": "People either value physical touch as an especially important love language or value words of affirmation as an especially important love language. If a person values physical touch as an especially important love language, then they are good with pets. No people that are good with pets are scared of animals. People are either scared of animals or love animals. Adam is either a person who values physical touch as an especially important love language or a person who loves animals.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Adam is scared of animals.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nValue(x, y) ::: x values y as an especially important love language.\nGoodWith(x, y) ::: x is good with y.\nScaredOf(x, y) ::: x is scared of y.\nLove(x, y) ::: x loves y.\nPremises:\n∀x (Value(x, physicalTouch) ∨ Value(x, wordsOfAffirmation)) ::: People either value physical touch as an especially important love language or value words of affirmation as an especially important love language.\n∀x (Value(x, physicalTouch) → GoodWith(x, pets)) ::: If a person values physical touch as an especially important love language, then they are good with pets.\n∀x (GoodWith(x, pets) → ¬ScaredOf(x, animals)) ::: No people that are good with pets are scared of animals.\n∀x (ScaredOf(x, animals) ∨ Love(x, animals)) ::: People are either scared of animals or love animals.\nAdam ∨ Value(adam, animals) ::: Adam is either a person who values physical touch as an especially important love language or a person who loves animals.\nConclusion:\nScaredOf(adam, animals) ::: Adam is scared of animals.\n------\nProblem:\nAll people who are good with pets are good with dogs. All people who are good with dogs are good with animals. All people who are good with animals are good with cats. All people who are good with cats are good with pets. All people who are good with pets are good with birds. All people who are good with birds are good with animals. All people who are good with animals are good with fish. All people who are good with fish are good with pets. All people who are good with pets are good with reptiles. All people who are good with reptiles are good with animals. All people who are good with animals are good with insects. All people who are good with insects are good with pets. All people who are good with pets are good with mammals. All people who are good with mammals are good with animals. All people who are good with animals are good with birds. All people who are good with birds are good with pets. All people who are good with pets are good with reptiles. All people who are good with reptiles are good with animals. All people who are good with animals are good with insects. All people who are good with insects are good with pets. All people who are good"
    ]
  },
  {
    "id": "FOLIO_train_307",
    "context": "People either value physical touch as an especially important love language or value words of affirmation as an especially important love language. If a person values physical touch as an especially important love language, then they are good with pets. No people that are good with pets are scared of animals. People are either scared of animals or love animals. Adam is either a person who values physical touch as an especially important love language or a person who loves animals.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Adam values words of affirmation as an especially important love language.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nValue(x, y) ::: x values y as an especially important love language.\nGoodWith(x, y) ::: x is good with y.\nScaredOf(x, y) ::: x is scared of y.\nLove(x, y) ::: x loves y.\nPremises:\n∀x (Value(x, physicalTouch) ∨ Value(x, wordsOfAffirmation)) ::: People either value physical touch as an especially important love language or value words of affirmation as an especially important love language.\n∀x (Value(x, physicalTouch) → GoodWith(x, pets)) ::: If a person values physical touch as an especially important love language, then they are good with pets.\n∀x (GoodWith(x, pets) → ¬ScaredOf(x, animals)) ::: No people that are good with pets are scared of animals.\n∀x (ScaredOf(x, animals) → Love(x, animals)) ::: People are either scared of animals or love animals.\nAdam ∨ Value(adam, physicalTouch) ::: Adam is either a person who values physical touch as an especially important love language or a person who loves animals.\nConclusion:\nValue(adam, wordsOfAffirmation) ::: Adam values words of affirmation as an especially important love language.\n------\nProblem:\nAll people who are good with pets are good with animals. All people who are good with animals are good with dogs. All people who are good with dogs are good with cats. All people who are good with cats are good with birds. All people who are good with birds are good with fish. All people who are good with fish are good with reptiles. All people who are good with reptiles are good with insects. All people who are good with insects are good with spiders. All people who are good with spiders are good with snakes. All people who are good with snakes are good with lizards. All people who are good with lizards are good with frogs. All people who are good with frogs are good with toads. All people who are good with toads are good with salamanders. All people who are good with salamanders are good with newts. All people who are good with newts are good with turtles. All people who are good with turtles are good with tortoises. All people who are good with tortoises are good with turtles. All people who are good with turtles are good with"
    ]
  },
  {
    "id": "FOLIO_train_308",
    "context": "People either value physical touch as an especially important love language or value words of affirmation as an especially important love language. If a person values physical touch as an especially important love language, then they are good with pets. No people that are good with pets are scared of animals. People are either scared of animals or love animals. Adam is either a person who values physical touch as an especially important love language or a person who loves animals.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Adam values physical touch as an especially important love language and values words of affirmation as an especially important love language.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nValue(x, y) ::: x values y as an especially important love language.\nGoodWith(x, y) ::: x is good with y.\nScaredOf(x, y) ::: x is scared of y.\nLove(x, y) ::: x loves y.\nPremises:\n∀x (Value(x, physicalTouch) ∨ Value(x, wordsOfAffirmation)) ::: People either value physical touch as an especially important love language or value words of affirmation as an especially important love language.\n∀x (Value(x, physicalTouch) → GoodWith(x, pets)) ::: If a person values physical touch as an especially important love language, then they are good with pets.\n∀x (GoodWith(x, pets) → ¬ScaredOf(x, animals)) ::: No people that are good with pets are scared of animals.\n∀x (ScaredOf(x, animals) → Love(x, animals)) ::: People are either scared of animals or love animals.\nAdam ∨ Value(adam, physicalTouch) ∧ Value(adam, animals) ::: Adam is either a person who values physical touch as an especially important love language or a person who loves animals.\nConclusion:\nValue(adam, physicalTouch) ∧ Value(adam, wordsOfAffirmation) ::: Adam values physical touch as an especially important love language and values words of affirmation as an especially important love language.\n------\nProblem:\nAll people who are good with pets are good with animals. All people who are good with animals are good with dogs. All people who are good with dogs are good with cats. All people who are good with cats are good with birds. All people who are good with birds are good with fish. All people who are good with fish are good with reptiles. All people who are good with reptiles are good with insects. All people who are good with insects are good with spiders. All people who are good with spiders are good with snakes. All people who are good with snakes are good with lizards. All people who are good with lizards are good with frogs. All people who are good with frogs are good with toads. All people who are good with toads are good with salamanders. All people who are good with salamanders are good with newts. All people who are good with newts are good with turtles. All people who are good with turtles are good"
    ]
  },
  {
    "id": "FOLIO_train_309",
    "context": "People either value physical touch as an especially important love language or value words of affirmation as an especially important love language. If a person values physical touch as an especially important love language, then they are good with pets. No people that are good with pets are scared of animals. People are either scared of animals or love animals. Adam is either a person who values physical touch as an especially important love language or a person who loves animals.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Adam either values physical touch as an especially important love language or values words of affirmation as an especially important love language.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nValue(x, y) ::: x values y as an especially important love language.\nGoodWith(x, y) ::: x is good with y.\nScaredOf(x, y) ::: x is scared of y.\nLove(x, y) ::: x loves y.\nPremises:\n∀x (Value(x, physicalTouch) ∨ Value(x, wordsOfAffirmation)) ::: People either value physical touch as an especially important love language or value words of affirmation as an especially important love language.\n∀x (Value(x, physicalTouch) → GoodWith(x, pets)) ::: If a person values physical touch as an especially important love language, then they are good with pets.\n∀x (GoodWith(x, pets) → ¬ScaredOf(x, animals)) ::: No people that are good with pets are scared of animals.\n∀x (ScaredOf(x, animals) → Love(x, animals)) ::: People are either scared of animals or love animals.\nAdam ∨ Value(adam, physicalTouch) ∧ Love(adam, animals) ::: Adam is either a person who values physical touch as an especially important love language or a person who loves animals.\nConclusion:\nValue(adam, physicalTouch) ∨ Value(adam, wordsOfAffirmation) ::: Adam either values physical touch as an especially important love language or values words of affirmation as an especially important love language.\n------\nProblem:\nAll people who are good with pets are good with dogs. All people who are good with dogs are good with animals. All people who are good with animals are good with cats. All people who are good with cats are good with pets. All people who are good with pets are good with birds. All people who are good with birds are good with animals. All people who are good with animals are good with fish. All people who are good with fish are good with pets. All people who are good with pets are good with reptiles. All people who are good with reptiles are good with animals. All people who are good with animals are good with insects. All people who are good with insects are good with pets. All people who are good with pets are good with mammals. All people who are good with mammals are good with animals. All people who are good with animals are good with birds. All people who are good with birds are good with pets. All people who are good with pets are good with reptiles. All people who are"
    ]
  },
  {
    "id": "FOLIO_train_310",
    "context": "People either value physical touch as an especially important love language or value words of affirmation as an especially important love language. If a person values physical touch as an especially important love language, then they are good with pets. No people that are good with pets are scared of animals. People are either scared of animals or love animals. Adam is either a person who values physical touch as an especially important love language or a person who loves animals.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Adam values physical touch as an especially important love language or is good with pets, then Adam values words of affirmation as an especially important love language.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nValue(x, y) ::: x values y as an especially important love language.\nGood(x, y) ::: x is good with y.\nScared(x, y) ::: x is scared of y.\nLove(x, y) ::: x loves y.\nPremises:\n∀x (Value(x, physicalTouch) ∨ Value(x, wordsOfAffirmation)) ::: People either value physical touch as an especially important love language or value words of affirmation as an especially important love language.\n∀x (Value(x, physicalTouch) → Good(x, pets)) ::: If a person values physical touch as an especially important love language, then they are good with pets.\n∀x (Good(x, pets) → ¬Scared(x, animals)) ::: No people that are good with pets are scared of animals.\n∀x (Scared(x, animals) ∨ Love(x, animals)) ::: People are either scared of animals or love animals.\nAdam ∨ Value(adam, physicalTouch) ::: Adam is either a person who values physical touch as an especially important love language or a person who loves animals.\nConclusion:\nValue(adam, wordsOfAffirmation) → (Value(adam, physicalTouch) ∨ Good(adam, pets)) ::: If Adam values physical touch as an especially important love language or is good with pets, then Adam values words of affirmation as an especially important love language.\n------"
    ]
  },
  {
    "id": "FOLIO_train_311",
    "context": "All birds have wings. No animal with wings is a reptile. Some animals that fly are birds. If something is an iguana, then it is a reptile. John is neither an iguana nor a bird.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? John is a reptile.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBird(x) ::: x is a bird.\nAnimal(x) ::: x is an animal.\nWing(x) ::: x has wings.\nFly(x) ::: x flies.\nIguana(x) ::: x is an iguana.\nReptile(x) ::: x is a reptile.\nPremises:\n∀x (Bird(x) → Wing(x)) ::: All birds have wings.\n∀x (Wing(x) ∧ Animal(x) → ¬Reptile(x)) ::: No animal with wings is a reptile.\n∃x (Fly(x) ∧ Bird(x)) ::: Some animals that fly are birds.\n∀x (Iguana(x) → Reptile(x)) ::: If something is an iguana, then it is a reptile.\nJohn ∧ ¬Bird(john) ∧ ¬Iguana(john) ::: John is neither an iguana nor a bird.\nConclusion:\nReptile(john) ::: John is a reptile.\n------\nProblem:\nAll people who are not students are either teachers or employees. All people who are not teachers are students. All people who are not employees are teachers. All people who are not teachers are employees. All people who are not students are teachers. All people who are not employees are students. All people who are not teachers"
    ]
  },
  {
    "id": "FOLIO_train_312",
    "context": "All birds have wings. No animal with wings is a reptile. Some animals that fly are birds. If something is an iguana, then it is a reptile. John is neither an iguana nor a bird.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? John is not an iguana and an animal that can fly.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBird(x) ::: x is a bird.\nAnimal(x) ::: x is an animal.\nWing(x) ::: x has wings.\nFly(x) ::: x can fly.\nReptile(x) ::: x is a reptile.\nIguana(x) ::: x is an iguana.\nPremises:\n∀x (Bird(x) → Wing(x)) ::: All birds have wings.\n∀x (Wing(x) ∧ Animal(x) → ¬Reptile(x)) ::: No animal with wings is a reptile.\n∃x (Bird(x) ∧ Fly(x)) ::: Some animals that fly are birds.\n∀x (Iguana(x) → Reptile(x)) ::: If something is an iguana, then it is a reptile.\nJohn ∧ ¬Bird(john) ∧ ¬Iguana(john) ::: John is neither an iguana nor a bird.\nConclusion:\nJohn ∧ ¬Iguana(john) ∧ Fly(john) ::: John is not an iguana and an animal that can fly.\n------\nProblem:\nAll people who are not students are either teachers or employees. All teachers are people. All people who are not students are either teachers or employees. All people who are not students are either teachers or"
    ]
  },
  {
    "id": "FOLIO_train_313",
    "context": "All birds have wings. No animal with wings is a reptile. Some animals that fly are birds. If something is an iguana, then it is a reptile. John is neither an iguana nor a bird.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? John is an animal that can fly and a bird.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBird(x) ::: x is a bird.\nAnimal(x) ::: x is an animal.\nWing(x) ::: x has wings.\nFly(x) ::: x can fly.\nReptile(x) ::: x is a reptile.\nIguana(x) ::: x is an iguana.\nPremises:\n∀x (Bird(x) → Wing(x)) ::: All birds have wings.\n∀x (Wing(x) ∧ Animal(x) → ¬Reptile(x)) ::: No animal with wings is a reptile.\n∃x (Fly(x) ∧ Bird(x)) ::: Some animals that fly are birds.\n∀x (Iguana(x) → Reptile(x)) ::: If something is an iguana, then it is a reptile.\nJohn ∧ ¬Bird(john) ∧ ¬Iguana(john) ::: John is neither an iguana nor a bird.\nConclusion:\nFly(john) ∧ Bird(john) ::: John is an animal that can fly and a bird.\n------\nProblem:\nAll people who are not students are either teachers or employees. All teachers are people. All people who are not students are either teachers or employees. All people who are not students are either teachers or employees. All people who are not students are either teachers"
    ]
  },
  {
    "id": "FOLIO_train_314",
    "context": "EndGame is a movie released in 2006. EndGame was set in Washington. EndGame was filmed outside of Washington. Some movies are filmed in New York. Andy Chang directed EndGame. Andy Chang is from Hong Kong.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? EndGame was filmed in New York.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMovie(x) ::: x is a movie.\nSet(x) ::: x is set in y.\nFilmed(x, y) ::: x is filmed in y.\nFilm(x) ::: x is a film.\nDirect(x, y) ::: x directed y.\nFrom(x, y) ::: x is from y.\nPremises:\nMovie(endGame) ∧ Set(endGame, washington) ∧ Filmed(endGame, outsideOfWashington) ::: EndGame is a movie released in 2006. EndGame was set in Washington. EndGame was filmed outside of Washington.\n∃x (Movie(x) ∧ Filmed(x, newYork)) ::: Some movies are filmed in New York.\nDirect(andyChang, endGame) ::: Andy Chang directed EndGame.\nFrom(andyChang, hongKong) ::: Andy Chang is from Hong Kong.\nConclusion:\nFilmed(endGame, newYork) ::: EndGame was filmed in New York.\n------\nProblem:\nThe 2016 Summer Olympics were held in Rio de Janeiro. The 2016 Summer Olympics were held in Brazil. The 2016 Summer Olympics were held in South America. The 2016 Summer Olympics were held in the Southern Hemisphere. The 2016 Summer Olympics were held in the Americas. The 2016 Summer Olympics"
    ]
  },
  {
    "id": "FOLIO_train_315",
    "context": "EndGame is a movie released in 2006. EndGame was set in Washington. EndGame was filmed outside of Washington. Some movies are filmed in New York. Andy Chang directed EndGame. Andy Chang is from Hong Kong.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? EndGame was not directed by someone from Hong Kong.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMovie(x) ::: x is a movie.\nSet(x, y) ::: x is set in y.\nFilmed(x, y) ::: x is filmed in y.\nDirected(x, y) ::: x directed y.\nFrom(x, y) ::: x is from y.\nPremises:\nMovie(endGame) ∧ Set(endGame, washington) ∧ Filmed(endGame, outsideOfWashington) ∧ ¬∃x (Filmed(x, newYork)) ::: EndGame is a movie released in 2006. EndGame was set in Washington. EndGame was filmed outside of Washington. Some movies are filmed in New York.\nDirected(andyChang, endGame) ∧ From(andyChang, hongKong) ::: Andy Chang directed EndGame. Andy Chang is from Hong Kong.\nConclusion:\n¬∃x (Directed(x, endGame) ∧ From(x, hongKong)) ::: EndGame was not directed by someone from Hong Kong.\n------\nProblem:\nThe movie The Matrix was released in 1999. The movie The Matrix was set in the United States. The movie The Matrix was filmed in Australia. The movie The Matrix was filmed in the United States. The movie The Matrix was filmed in New Zealand. The movie The Matrix was filmed in Canada. The movie The Matrix was filmed in the United Kingdom"
    ]
  },
  {
    "id": "FOLIO_train_316",
    "context": "EndGame is a movie released in 2006. EndGame was set in Washington. EndGame was filmed outside of Washington. Some movies are filmed in New York. Andy Chang directed EndGame. Andy Chang is from Hong Kong.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? All of Andy Chang's movies are filmed outside of Washington.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMovie(x) ::: x is a movie.\nSet(x, y) ::: x is set in y.\nFilmed(x, y) ::: x is filmed in y.\nDirected(x, y) ::: x directed y.\nFrom(x, y) ::: x is from y.\nPremises:\nMovie(endGame) ∧ Set(endGame, washington) ∧ Filmed(endGame, outsideOfWashington) ::: EndGame is a movie released in 2006. EndGame was set in Washington. EndGame was filmed outside of Washington.\n∃x (Movie(x) ∧ Filmed(x, newYork)) ::: Some movies are filmed in New York.\nDirected(andyChang, endGame) ::: Andy Chang directed EndGame.\nFrom(andyChang, hongKong) ::: Andy Chang is from Hong Kong.\nConclusion:\n∀x (Directed(andyChang, x) → Filmed(x, outsideOfWashington)) ::: All of Andy Chang's movies are filmed outside of Washington.\n------\nProblem:\nThe movie The Matrix was released in 1999. The movie The Matrix was filmed in Sydney. The movie The Matrix was filmed in San Francisco. The movie The Matrix was filmed in Los Angeles. The movie The Matrix was filmed in New York. The movie The Matrix was filmed in Chicago. The movie The Matrix was"
    ]
  },
  {
    "id": "FOLIO_train_317",
    "context": "Six, seven and eight are real numbers. If a real number equals another real number adding one, the first number is larger. If the number x is larger than number y, then y is not larger than x. Seven equals six plus one. Eight equals seven plus one. Two is positive. If a number is positive, then the double of it is also positive. Eight is the double of four. Four is the double of two.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Eight is larger than seven.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nReal(x) ::: x is a real number.\nLarger(x, y) ::: x is larger than y.\nEquals(x, y) ::: x equals y.\nAdding(x, y) ::: x equals y adding one.\nPositive(x) ::: x is a positive number.\nDouble(x, y) ::: x is the double of y.\nPremises:\nReal(six) ∧ Real(seven) ∧ Real(eight) ::: Six, seven and eight are real numbers.\n∀x ∀y (Larger(x, y) → ¬Larger(y, x)) ::: If a real number equals another real number adding one, the first number is larger.\n∀x ∀y (Larger(x, y) → ¬Larger(y, x)) ::: If the number x is larger than number y, then y is not larger than x.\nEquals(seven, six + one) ::: Seven equals six plus one.\nEquals(eight, seven + one) ::: Eight equals seven plus one.\nPositive(two) ::: Two is positive.\n∀x (Positive(x) → Positive(2 * x)) ::: If a number is positive, then the double of it is also positive.\nEquals(eight, 2 * four) ::: Eight is the double of four.\nEquals(four, 2 * two) ::: Four is the double of two."
    ]
  },
  {
    "id": "FOLIO_train_318",
    "context": "Six, seven and eight are real numbers. If a real number equals another real number adding one, the first number is larger. If the number x is larger than number y, then y is not larger than x. Seven equals six plus one. Eight equals seven plus one. Two is positive. If a number is positive, then the double of it is also positive. Eight is the double of four. Four is the double of two.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Eight is positive.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nReal(x) ::: x is a real number.\nLarger(x, y) ::: x is larger than y.\nEquals(x, y) ::: x equals y.\nAdding(x, y) ::: x equals y adding one.\nPositive(x) ::: x is positive.\nDouble(x, y) ::: y is the double of x.\nPremises:\nReal(six) ∧ Real(seven) ∧ Real(eight) ::: Six, seven and eight are real numbers.\n∀x ∀y (Larger(x, y) → ¬Larger(y, x)) ::: If a real number equals another real number adding one, the first number is larger.\n∀x ∀y (Larger(x, y) → ¬Larger(y, x)) ::: If the number x is larger than number y, then y is not larger than x.\nEquals(seven, six + one) ::: Seven equals six plus one.\nEquals(eight, seven + one) ::: Eight equals seven plus one.\nPositive(two) ::: Two is positive.\n∀x (Positive(x) → Positive(2 * x)) ::: If a number is positive, then the double of it is also positive.\nDouble(four, eight) ::: Eight is the double of four.\nDouble(two, four) ::: Four is the double of two.\nConclusion:\nPositive("
    ]
  },
  {
    "id": "FOLIO_train_319",
    "context": "Six, seven and eight are real numbers. If a real number equals another real number adding one, the first number is larger. If the number x is larger than number y, then y is not larger than x. Seven equals six plus one. Eight equals seven plus one. Two is positive. If a number is positive, then the double of it is also positive. Eight is the double of four. Four is the double of two.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Six is larger than seven.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nReal(x) ::: x is a real number.\nLarger(x, y) ::: x is larger than y.\nEquals(x, y) ::: x equals y.\nAdding(x, y) ::: x equals y adding one.\nPositive(x) ::: x is a positive number.\nDouble(x, y) ::: x is the double of y.\nPremises:\nReal(six) ∧ Real(seven) ∧ Real(eight) ::: Six, seven and eight are real numbers.\n∀x ∀y (Larger(x, y) → ¬Larger(y, x)) ::: If a real number equals another real number adding one, the first number is larger.\n∀x ∀y (Larger(x, y) → ¬Larger(y, x)) ::: If the number x is larger than number y, then y is not larger than x.\nEquals(seven, six + one) ::: Seven equals six plus one.\nEquals(eight, seven + one) ::: Eight equals seven plus one.\nPositive(two) ::: Two is positive.\n∀x (Positive(x) → Positive(2 * x)) ::: If a number is positive, then the double of it is also positive.\nEquals(eight, 2 * four) ::: Eight is the double of four.\nEquals(four, 2 * two) ::: Four is the double of two."
    ]
  },
  {
    "id": "FOLIO_train_320",
    "context": "A dog never tells the truth. Some poker players are dogs.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Some poker players never tell the truth.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDog(x) ::: x is a dog.\nPokerPlayer(x) ::: x is a poker player.\nTell(x, y) ::: x tells y.\nTruth(x) ::: x is the truth.\nPremises:\n∀x (Dog(x) → ¬Truth(x)) ::: A dog never tells the truth.\n∃x (PokerPlayer(x) ∧ Dog(x)) ::: Some poker players are dogs.\nConclusion:\n∃x (PokerPlayer(x) ∧ ¬Truth(x)) ::: Some poker players never tell the truth.\n------"
    ]
  },
  {
    "id": "FOLIO_train_321",
    "context": "All Asians are human. All Chinese are Asian. A man is either Chinese or British. All British are European. All Spanish are European. No Indian is European. Jessee is either both an Indian and a human, or neither an Indian nor a human.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jesse is Chinese.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAsian(x) ::: x is an Asian.\nChinese(x) ::: x is a Chinese.\nBritish(x) ::: x is a British.\nEuropean(x) ::: x is a European.\nSpanish(x) ::: x is a Spanish.\nIndian(x) ::: x is an Indian.\nHuman(x) ::: x is a human.\nPremises:\n∀x (Asian(x) → Human(x)) ::: All Asians are human.\n∀x (Chinese(x) → Asian(x)) ::: All Chinese are Asian.\n∀x (British("
    ]
  },
  {
    "id": "FOLIO_train_322",
    "context": "All Asians are human. All Chinese are Asian. A man is either Chinese or British. All British are European. All Spanish are European. No Indian is European. Jessee is either both an Indian and a human, or neither an Indian nor a human.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jesse is not Chinese.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAsian(x) ::: x is an Asian.\nChinese(x) ::: x is a Chinese.\nBritish(x) ::: x is a British.\nEuropean(x) ::: x is a European.\nSpanish(x) ::: x is a Spanish.\nIndian(x) ::: x is an Indian.\nHuman(x) ::: x is a human.\nPremises:\n∀x (Asian(x) → Human(x)) ::: All Asians are human.\n∀x (Chinese(x) → Asian(x)) ::: All Chinese are Asian.\n∀x (British("
    ]
  },
  {
    "id": "FOLIO_train_323",
    "context": "All Asians are human. All Chinese are Asian. A man is either Chinese or British. All British are European. All Spanish are European. No Indian is European. Jessee is either both an Indian and a human, or neither an Indian nor a human.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Jesse is either an Indian or a Spanish, then Jesse is either both British and European, or neither British nor European.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAsian(x) ::: x is an Asian.\nChinese(x) ::: x is a Chinese.\nMan(x) ::: x is a man.\nEuropean(x) ::: x is a European.\nSpanish(x) ::: x is a Spanish.\nIndian(x) ::: x is an Indian.\nHuman(x) ::: x is a human.\nPremises:\n∀x (Asian(x) → Human(x)) ::: All Asians are human.\n∀x (Chinese(x) → Asian(x)) ::: All Chinese are Asian.\n∀x (Man(x) → ("
    ]
  },
  {
    "id": "FOLIO_train_324",
    "context": "No people who never admit a mistake are good teachers. Some well-informed people are people who never admit a mistake.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Some good teachers are not well-informed people.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPeople(x) ::: x is a person.\nGoodTeacher(x) ::: x is a good teacher.\nWellInformed(x) ::: x is a well-informed person.\nAdmit(x, y) ::: x admits y.\nMistake(y) ::: y is a mistake.\nPremises:\n∀x (GoodTeacher(x) → ¬∃y (Mistake(y) ∧ Admit(x, y))) ::: No people who never admit a mistake are good teachers.\n∃x (WellInformed(x) ∧ ¬∃y ("
    ]
  },
  {
    "id": "FOLIO_train_325",
    "context": "Philatelic literature is divided into the following categories: Stamp catalogues, Periodicals, Auction catalogues, Books, Bibliographies, and Background Material Mort is not a Stamp catalogue. Mort is not a periodical, auction catalogue, bibliography, or background material. Mort is a piece of Philatelic literature.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mort is a book",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nStampCatalogue(x) ::: x is a Stamp catalogue.\nPeriodical(x) ::: x is a periodical.\nAuctionCatalogue(x) ::: x is an auction catalogue.\nBook(x) ::: x is a book.\nBibliography(x) ::: x is a bibliography.\nBackgroundMaterial(x) ::: x is background material.\nPhilatelicLiterature(x) ::: x is a piece of Philatelic literature.\nPremises:\n¬StampCatalogue(mort) ∧ ¬Periodical(mort) ∧ ¬AuctionCatalogue(mort) �"
    ]
  },
  {
    "id": "FOLIO_train_326",
    "context": "Philatelic literature is divided into the following categories: Stamp catalogues, Periodicals, Auction catalogues, Books, Bibliographies, and Background Material Mort is not a Stamp catalogue. Mort is not a periodical, auction catalogue, bibliography, or background material. Mort is a piece of Philatelic literature.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mort is background material.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nStampCatalogue(x) ::: x is a Stamp catalogue.\nPeriodical(x) ::: x is a periodical.\nAuctionCatalogue(x) ::: x is an auction catalogue.\nBook(x) ::: x is a book.\nBibliography(x) ::: x is a bibliography.\nBackgroundMaterial(x) ::: x is background material.\nPhilatelicLiterature(x) ::: x is Philatelic literature.\nPremises:\n¬StampCatalogue(mort) ∧ ¬Periodical(mort) ∧ ¬AuctionCatalogue(mort) ∧"
    ]
  },
  {
    "id": "FOLIO_train_327",
    "context": "Philatelic literature is divided into the following categories: Stamp catalogues, Periodicals, Auction catalogues, Books, Bibliographies, and Background Material Mort is not a Stamp catalogue. Mort is not a periodical, auction catalogue, bibliography, or background material. Mort is a piece of Philatelic literature.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Eragon is a piece of Philatelic literature.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nStampCatalogue(x) ::: x is a Stamp catalogue.\nPeriodical(x) ::: x is a periodical.\nAuctionCatalogue(x) ::: x is an auction catalogue.\nBook(x) ::: x is a book.\nBibliography(x) ::: x is a bibliography.\nBackgroundMaterial(x) ::: x is background material.\nPhilatelicLiterature(x) ::: x is a piece of Philatelic literature.\nPremises:\n¬StampCatalogue(mort) ∧ ¬Periodical(mort) ∧ ¬AuctionCatalogue(mort) �"
    ]
  },
  {
    "id": "FOLIO_train_328",
    "context": "Adventures of Rusty is a drama film and children's film. Columbia Pictures produced Adventures of Rusty Tintin was produced by Paramount. Tintin is an adventure film.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Columbia pictures produces drama films.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProduce(x, y) ::: x produces y.\nFilm(x) ::: x is a film.\nDrama(x) ::: x is a drama film.\nChildren(x) ::: x is a children's film.\nAdventure(x) ::: x is an adventure film.\nPremises:\nAdventuresOfRusty ::: Adventures of Rusty\nFilm(AdventuresOfRusty) ::: Adventures of Rusty is a film.\nProduce(ColumbiaPictures, AdventuresOfRusty) ::: Columbia Pictures produced Adventures of Rusty.\nTintin ::: Tint"
    ]
  },
  {
    "id": "FOLIO_train_329",
    "context": "Adventures of Rusty is a drama film and children's film. Columbia Pictures produced Adventures of Rusty Tintin was produced by Paramount. Tintin is an adventure film.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Columbia pictures produces adventure films.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProduce(x, y) ::: x produces y.\nFilm(x) ::: x is a film.\nAdventure(x) ::: x is an adventure film.\nDrama(x) ::: x is a drama film.\nChildren(x) ::: x is a children's film.\nPremises:\nAdventuresOfRusty ::: Adventures of Rusty\nFilm(AdventuresOfRusty) ::: Adventures of Rusty is a film.\nProduce(ColumbiaPictures, AdventuresOfRusty) ::: Columbia Pictures produced Adventures of Rusty.\nTintin ::: Tint"
    ]
  },
  {
    "id": "FOLIO_train_330",
    "context": "Adventures of Rusty is a drama film and children's film. Columbia Pictures produced Adventures of Rusty Tintin was produced by Paramount. Tintin is an adventure film.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Paramount produces children's films.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProduce(x, y) ::: x produces y.\nFilm(x) ::: x is a film.\nDrama(x) ::: x is a drama film.\nChildren(x) ::: x is a children's film.\nAdventure(x) ::: x is an adventure film.\nPremises:\nFilm(adventuresOfRusty) ∧ Drama(adventuresOfRusty) ∧ Children(adventuresOfRusty) ::: Adventures of Rusty is a drama film and children's film.\nFilm(tintin) ∧ Adventure(tintin) ∧ Produce(columbiaPictures, tintin) ::: Tintin is an adventure film.\nFilm(tintin) ∧ Produce(paramount, tintin) ::: Tintin was produced by Paramount.\nConclusion:\nProduce(paramount, children) ::: Paramount produces children's films.\n------"
    ]
  },
  {
    "id": "FOLIO_train_331",
    "context": "Adventures of Rusty is a drama film and children's film. Columbia Pictures produced Adventures of Rusty Tintin was produced by Paramount. Tintin is an adventure film.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Paramount produces adventure films.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProduce(x, y) ::: x produces y.\nFilm(x) ::: x is a film.\nAdventure(x) ::: x is an adventure film.\nDrama(x) ::: x is a drama film.\nChildren(x) ::: x is a children's film.\nPremises:\nAdventuresOfRusty ::: Adventures of Rusty\nFilm(AdventuresOfRusty) ::: Adventures of Rusty is a film.\nProduce(ColumbiaPictures, AdventuresOfRusty) ::: Columbia Pictures produced Adventures of Rusty\nTintin ::: Tintin\nFilm(Tintin) ::: Tintin is a film.\nProduce(Paramount, Tintin) ::: Tintin was produced by Paramount\nAdventure(Tintin) ::: Tintin is an adventure film.\nConclusion:\nAdventure(AdventuresOfRusty) ::: Adventures of Rusty is an adventure film"
    ]
  },
  {
    "id": "FOLIO_train_332",
    "context": "Deng Xiaoping served as the paramount leader of the People's Republic of China (PRC). Deng Xiaoping was praised for his reaffirmation of the reform program in his Southern Tour of 1992 as well as the reversion of Hong Kong to Chinese control in 1997 and the return of Macau in 1999. As the party's Secretary-General under Mao and Vice Premier in he 1950s, Deng Xiaoping presided over the Anti-Rightist Campaign launched by Mao. Deng Xiaoping became instrumental in China's economic reconstruction following the disastrous Great Leap Forward (1958–1960). Mao Zedong died in 1976. After Mao Zedong's death, Deng Xiaoping gradually rose to supreme power.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The paramount leader of the PRC was also the vice premier.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nParamountLeader(x) ::: x is the paramount leader of the PRC.\nVicePremier(x) ::: x is the vice premier.\nReaffirm(x, y) ::: x reaffirmed y.\nReversion(x, y) ::: x reverted to y.\nControl(x, y) ::: x controlled y.\nPreside(x, y) ::: x presided over y.\nLaunch(x, y) ::: x launched y.\nDisaster(x) ::: x was a disaster.\nDeath(x) ::: x died.\nRise(x, y) ::: x gradually rose to y.\nPremises:\nParamountLeader(deng) ∧ Reaffirm(deng, reform) ∧ Reversion(hongKong, chineseControl) ∧ Reversion(macau, chineseControl) ::: Deng Xiaoping served as the paramount leader of the People's Republic of China (PRC).\nParamountLeader"
    ]
  },
  {
    "id": "FOLIO_train_333",
    "context": "Deng Xiaoping served as the paramount leader of the People's Republic of China (PRC). Deng Xiaoping was praised for his reaffirmation of the reform program in his Southern Tour of 1992 as well as the reversion of Hong Kong to Chinese control in 1997 and the return of Macau in 1999. As the party's Secretary-General under Mao and Vice Premier in he 1950s, Deng Xiaoping presided over the Anti-Rightist Campaign launched by Mao. Deng Xiaoping became instrumental in China's economic reconstruction following the disastrous Great Leap Forward (1958–1960). Mao Zedong died in 1976. After Mao Zedong's death, Deng Xiaoping gradually rose to supreme power.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Deng Xiaoping presided over something launched by someone he was under.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSecretaryGeneral(x) ::: x is the party's Secretary-General.\nVicePremier(x) ::: x is the Vice Premier.\nPreside(x, y) ::: x presided over y.\nLaunch(x, y) ::: x launched y.\nControl(x, y) ::: x controlled y.\nReform(x) ::: x is a reform program.\nReturn(x, y) ::: x returned y.\nPremises:\nSecretaryGeneral(deng) ∧ VicePremier(deng) ::: Deng Xiaoping was the party's Secretary-General and the Vice Premier.\nPreside(deng, antiRightistCampaign) ∧ Launch(mao, antiRightistCampaign) ::: Deng Xiaoping presided over the Anti-Rightist Campaign launched by Mao.\nPreside(deng, economicReconstruction) ∧ Launch(mao, economicReconstruction) ::: Deng Xiaoping presided over the economic reconstruction following the disastr"
    ]
  },
  {
    "id": "FOLIO_train_334",
    "context": "Deng Xiaoping served as the paramount leader of the People's Republic of China (PRC). Deng Xiaoping was praised for his reaffirmation of the reform program in his Southern Tour of 1992 as well as the reversion of Hong Kong to Chinese control in 1997 and the return of Macau in 1999. As the party's Secretary-General under Mao and Vice Premier in he 1950s, Deng Xiaoping presided over the Anti-Rightist Campaign launched by Mao. Deng Xiaoping became instrumental in China's economic reconstruction following the disastrous Great Leap Forward (1958–1960). Mao Zedong died in 1976. After Mao Zedong's death, Deng Xiaoping gradually rose to supreme power.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The person instrumental in china's economic reconstruction gradually rose to supreme power.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nParamountLeader(x) ::: x is the paramount leader of the People's Republic of China (PRC).\nPraised(x) ::: x is praised.\nReaffirm(x, y) ::: x reaffirms y.\nReversion(x, y) ::: x reverted to y.\nControl(x, y) ::: x controls y.\nSecretaryGeneral(x, y) ::: x is the Secretary-General of y.\nVicePremier(x, y) ::: x is the Vice Premier of y.\nPreside(x, y) ::: x presides over y.\nAntiRightist(x) ::: x is the Anti-Rightist Campaign.\nDisastrous(x) ::: x is disastrous.\nGreatLeapForward(x) ::: x is the Great Leap Forward.\nDeath(x, y) ::: x died in year y.\nGraduallyRise(x, y) ::: x gradually rose to y.\nSupremePower(x) ::"
    ]
  },
  {
    "id": "FOLIO_train_335",
    "context": "All imaginative processes are produced in human brains. All science-fiction is from an imaginative process. Either science-fiction or fact. No facts are proven to be false. Dune is a science-fiction or proven to be false.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Dune is a fact.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nImaginativeProcess(x) ::: x is an imaginative process.\nProduced(x, y) ::: x is produced in y.\nHumanBrain(x) ::: x is a human brain.\nScienceFiction(x) ::: x is science-fiction.\nFact(x) ::: x is a fact.\nProven(x, y) ::: x is proven to be y.\nPremises:\n∀x (ImaginativeProcess(x) → Produced(x, HumanBrain)) ::: All imaginative processes are produced in human brains.\n∀x (ScienceFiction(x) → ImaginativeProcess(x)) ::: All science-fiction is from an imaginative process.\n∀x (ScienceFiction(x) ∨ Fact(x)) ::: Either science-fiction or fact.\n∀x (Fact(x) → ¬Proven(x, False)) ::: No facts are proven to be false.\nD"
    ]
  },
  {
    "id": "FOLIO_train_336",
    "context": "All imaginative processes are produced in human brains. All science-fiction is from an imaginative process. Either science-fiction or fact. No facts are proven to be false. Dune is a science-fiction or proven to be false.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Dune is produced in human brains and is an imaginative process.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nImaginative(x) ::: x is an imaginative process.\nProduced(x, y) ::: x is produced in y.\nScienceFiction(x) ::: x is science-fiction.\nFact(x) ::: x is a fact.\nProven(x, y) ::: x is proven to be y.\nPremises:\n∀x (Imaginative(x) → Produced(x, humanBrain)) ::: All imaginative processes are produced in human brains.\n∀x (ScienceFiction(x) → Imaginative(x)) ::: All science-fiction is from an imaginative process.\nScienceFiction(dune) ∨ Proven(dune, false) ::: Either science-fiction or fact.\n∀x (Fact(x) → ¬Proven(x, false)) ::: No facts are proven to be false.\nConclusion:\nProduced(dune, humanBrain) ∧ Imagin"
    ]
  },
  {
    "id": "FOLIO_train_337",
    "context": "All imaginative processes are produced in human brains. All science-fiction is from an imaginative process. Either science-fiction or fact. No facts are proven to be false. Dune is a science-fiction or proven to be false.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Dune is either produced in human brains or an imaginative process.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nImaginative(x) ::: x is an imaginative process.\nProduced(x, y) ::: x is produced in y.\nScienceFiction(x) ::: x is science-fiction.\nFact(x) ::: x is a fact.\nProven(x, y) ::: x is proven to be y.\nPremises:\n∀x (Imaginative(x) → Produced(x, humanBrain)) ::: All imaginative processes are produced in human brains.\n∀x (ScienceFiction(x) → Imaginative(x)) ::: All science-fiction is from an imaginative process.\nScienceFiction(dune) ∨ Proven(dune, false) ::: Either science-fiction or fact.\n∀x (Fact(x) → ¬Proven(x, false)) ::: No facts are proven to be false.\nConclusion:\nProduced(dune, humanBrain) ∨ Imagin"
    ]
  },
  {
    "id": "FOLIO_train_338",
    "context": "All imaginative processes are produced in human brains. All science-fiction is from an imaginative process. Either science-fiction or fact. No facts are proven to be false. Dune is a science-fiction or proven to be false.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Dune is produced in human brains and is science fiction.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nImaginativeProcess(x) ::: x is an imaginative process.\nProduced(x, y) ::: x is produced in y.\nScienceFiction(x) ::: x is science fiction.\nFact(x) ::: x is a fact.\nProven(x, y) ::: x is proven to be y.\nPremises:\n∀x (ImaginativeProcess(x) → Produced(x, humanBrain)) ::: All imaginative processes are produced in human brains.\n∀x (ScienceFiction(x) → ImaginativeProcess(x)) ::: All science-fiction is from an imaginative process.\n∀x (ScienceFiction(x) ∨ Fact(x)) ::: Either science-fiction or fact.\n∀x (Fact(x) → ¬Proven(x, false)) ::: No facts are proven to be false.\nDune(x) ::: x is Dune.\nConclusion:\nProduced"
    ]
  },
  {
    "id": "FOLIO_train_339",
    "context": "All imaginative processes are produced in human brains. All science-fiction is from an imaginative process. Either science-fiction or fact. No facts are proven to be false. Dune is a science-fiction or proven to be false.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Dune is either produced in human brains or science-fiction.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nImaginativeProcess(x) ::: x is an imaginative process.\nProduced(x, y) ::: x is produced in y.\nScienceFiction(x) ::: x is science-fiction.\nFact(x) ::: x is a fact.\nProven(x, y) ::: x is proven to be y.\nPremises:\n∀x (ImaginativeProcess(x) → Produced(x, humanBrain)) ::: All imaginative processes are produced in human brains.\n∀x (ScienceFiction(x) → ImaginativeProcess(x)) ::: All science-fiction is from an imaginative process.\nScienceFiction(dune) ∨ Proven(dune, false) ::: Either science-fiction or fact.\n∀x (Fact(x) → ¬Proven(x, false)) ::: No facts are proven to be false.\nConclusion:\nProduced(dune, humanBrain) ∨"
    ]
  },
  {
    "id": "FOLIO_train_340",
    "context": "All imaginative processes are produced in human brains. All science-fiction is from an imaginative process. Either science-fiction or fact. No facts are proven to be false. Dune is a science-fiction or proven to be false.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Dune is produced in human brains and is an imaginative process, then Dune is not produced in human brains and science-fiction.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProduced(x, y) ::: x is produced in y.\nImaginative(x) ::: x is an imaginative process.\nScienceFiction(x) ::: x is science-fiction.\nFact(x) ::: x is a fact.\nProven(x, y) ::: x is proven to be y.\nPremises:\n∀x (Imaginative(x) → Produced(x, humanBrain)) ::: All imaginative processes are produced in human brains.\n∀x (ScienceFiction(x) → Imaginative(x)) ::: All science-fiction is from an imaginative process.\nScienceFiction(dune) ∨ Proven(dune, false) ::: Either science-fiction or fact.\n∀x (Fact(x) → ¬Proven(x, false)) ::: No facts are proven to be false.\nConclusion:\n(Produced(dune, humanBrain) ∧ Imaginative(dune)) → ¬(Produced(dune, humanBrain) ∧ ScienceFiction(dune)) ::: If Dune is produced in human brains and is an imaginative process, then Dune is not produced in human brains and science-fiction.\n------"
    ]
  },
  {
    "id": "FOLIO_train_341",
    "context": "All imaginative processes are produced in human brains. All science-fiction is from an imaginative process. Either science-fiction or fact. No facts are proven to be false. Dune is a science-fiction or proven to be false.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Dune is either a fact and produced in human brains, or neither a fact nor produced in human brains, then Dune is produced in human brains and science-fiction.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nImaginativeProcess(x) ::: x is an imaginative process.\nProduced(x, y) ::: x is produced in y.\nScienceFiction(x) ::: x is science-fiction.\nFact(x) ::: x is a fact.\nProven(x, y) ::: x is proven to be y.\nPremises:\n∀x (ImaginativeProcess(x) → Produced(x, humanBrain)) ::: All imaginative processes are produced in human brains.\n∀x (ScienceFiction(x) → ImaginativeProcess(x)) ::: All science-fiction is from an imaginative process.\nScienceFiction(dune) ∨ Proven(dune, false) ::: Either science-fiction or fact.\n∀x (Fact(x) → ¬Proven(x, false)) ::: No facts are proven to be false.\nConclusion:\n(Produced(dune, humanBrain) ∧ ScienceFiction(dune)) ∨ ¬(Produced(dune, humanBrain) ∨ ScienceFiction(dune)) ::: If Dune is either a fact and produced in human brains, or neither a fact nor produced in human brains, then Dune is"
    ]
  },
  {
    "id": "FOLIO_train_342",
    "context": "All imaginative processes are produced in human brains. All science-fiction is from an imaginative process. Either science-fiction or fact. No facts are proven to be false. Dune is a science-fiction or proven to be false.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Dune is science-fiction, then Dune is not produced in human brains and science-fiction.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nImaginativeProcess(x) ::: x is an imaginative process.\nProduced(x, y) ::: x is produced in y.\nScienceFiction(x) ::: x is science-fiction.\nFact(x) ::: x is a fact.\nProven(x, y) ::: x is proven to be y.\nPremises:\n∀x (ImaginativeProcess(x) → Produced(x, humanBrain)) ::: All imaginative processes are produced in human brains.\n∀x (ScienceFiction(x) → ImaginativeProcess(x)) ::: All science-fiction is from an imaginative process.\nScienceFiction(dune) ∨ Proven(dune, false) ::: Either science-fiction or fact.\n∀x (Fact(x) → ¬Proven(x, false)) ::: No facts are proven to be false.\nConclusion:\n(ScienceFiction(dune) → ¬(Produced(dune, humanBrain) ∧ ScienceFiction(dune))) ::: If Dune is science-fiction, then Dune is not produced in human brains and science-fiction.\n------\nProblem:\nAll people who are not students are either working or retired"
    ]
  },
  {
    "id": "FOLIO_train_343",
    "context": "All imaginative processes are produced in human brains. All science-fiction is from an imaginative process. Either science-fiction or fact. No facts are proven to be false. Dune is a science-fiction or proven to be false.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Dune is not produced in human brains and science-fiction, then Dune is neither an imaginative process nor proved to be false.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProduced(x, y) ::: x is produced in y.\nImaginative(x) ::: x is an imaginative process.\nScienceFiction(x) ::: x is science-fiction.\nFact(x) ::: x is a fact.\nProven(x, y) ::: x is proven to be y.\nPremises:\n∀x (Imaginative(x) → Produced(x, humanBrain)) ::: All imaginative processes are produced in human brains.\n∀x (ScienceFiction(x) → Imaginative(x)) ::: All science-fiction is from an imaginative process.\nScienceFiction(dune) ∨ Proven(dune, false) ::: Either science-fiction or fact.\n∀x (Fact(x) → ¬Proven(x, false)) ::: No facts are proven to be false.\nConclusion:\n¬(Produced(dune, humanBrain) ∧ ScienceFiction(dune)) → ¬(Imaginative(dune) ∨ Proven(dune, false)) ::: If Dune is not produced in human brains and science-fiction, then Dune is neither an imaginative process nor proved to be false.\n------"
    ]
  },
  {
    "id": "FOLIO_train_344",
    "context": "All imaginative processes are produced in human brains. All science-fiction is from an imaginative process. Either science-fiction or fact. No facts are proven to be false. Dune is a science-fiction or proven to be false.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Dune is not an imaginative process and science-fiction, then Dune is neither produced in human brains nor an imaginative process.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nImaginativeProcess(x) ::: x is an imaginative process.\nProduced(x, y) ::: x is produced in y.\nScienceFiction(x) ::: x is science-fiction.\nFact(x) ::: x is a fact.\nProven(x, y) ::: x is proven to be y.\nPremises:\n∀x (ImaginativeProcess(x) → Produced(x, humanBrains)) ::: All imaginative processes are produced in human brains.\n∀x (ScienceFiction(x) → ImaginativeProcess(x)) ::: All science-fiction is from an imaginative process.\nScienceFiction(dune) ∨ Proven(dune, false) ::: Either science-fiction or fact.\n¬∀x (Fact(x) → ¬Proven(x, false)) ::: No facts are proven to be false.\nConclusion:\n¬(ImaginativeProcess(dune) ∧ ScienceFiction(dune)) → (¬Produced(dune, humanBrains) ∧ ¬ImaginativeProcess(dune)) ::: If Dune is not an imaginative process and science-fiction, then Dune is neither produced in human brains nor an"
    ]
  },
  {
    "id": "FOLIO_train_345",
    "context": "An American superhero comes from either DC universe or Marvel universe. Captain America is a superhero. Captain America is an American. Captain America does not come from DC universe. If a superhero is American, he speaks English. A superhero speaks English or Spanish.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Captain America does not speak English.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAmerican(x) ::: x is an American.\nSuperhero(x) ::: x is a superhero.\nSpeak(x, y) ::: x speaks y.\nComeFrom(x, y) ::: x comes from y.\nPremises:\n∃x (Superhero(x) ∧ American(x)) ::: An American superhero comes from either DC universe or Marvel universe.\nSuperhero(captainAmerica) ∧ American(captainAmerica) ::: Captain America is a superhero.\nAmerican(captainAmerica) ∧ ¬ComeFrom(captainAmerica, dcUniverse) ::: Captain America is an American.\n∀x (Superhero(x) ∧ American(x) → Speak(x, english)) ::: If a superhero is American, he speaks English.\n∀x (Superhero(x) → (Speak(x, english) ∨ Speak(x, spanish))) ::: A superhero speaks English or Spanish.\nConclusion:\n¬Speak(captainAmerica, english) ::: Captain America does not speak English.\n------\nProblem:\nA person is either a student or a teacher. A student is either a graduate student or an undergraduate student. A graduate student is either a master'"
    ]
  },
  {
    "id": "FOLIO_train_346",
    "context": "An American superhero comes from either DC universe or Marvel universe. Captain America is a superhero. Captain America is an American. Captain America does not come from DC universe. If a superhero is American, he speaks English. A superhero speaks English or Spanish.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Captain America comes from Marvel universe.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAmerican(x) ::: x is an American.\nSuperhero(x) ::: x is a superhero.\nSpeak(x, y) ::: x speaks y.\nComeFrom(x, y) ::: x comes from y.\nPremises:\n∃x (Superhero(x) ∧ American(x)) ::: An American superhero comes from either DC universe or Marvel universe.\nSuperhero(captainAmerica) ∧ American(captainAmerica) ::: Captain America is a superhero.\nAmerican(captainAmerica) ∧ ¬ComeFrom(captainAmerica, dcUniverse) ::: Captain America is an American.\n∀x (Superhero(x) ∧ American(x) → Speak(x, english)) ::: If a superhero is American, he speaks English.\n∀x (Superhero(x) → (Speak(x, english) ∨ Speak(x, spanish))) ::: A superhero speaks English or Spanish.\nConclusion:\nComeFrom(captainAmerica, marvelUniverse) ::: Captain America comes from Marvel universe.\n------\nProblem:\nA person is a student if and only if he is a student of a university. A person is a student of a university if and only if he is"
    ]
  },
  {
    "id": "FOLIO_train_347",
    "context": "An American superhero comes from either DC universe or Marvel universe. Captain America is a superhero. Captain America is an American. Captain America does not come from DC universe. If a superhero is American, he speaks English. A superhero speaks English or Spanish.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Captain America speaks Spanish.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAmerican(x) ::: x is an American.\nSuperhero(x) ::: x is a superhero.\nSpeak(x, y) ::: x speaks y.\nComeFrom(x, y) ::: x comes from y.\nPremises:\n∃x (Superhero(x) ∧ American(x)) ::: An American superhero comes from either DC universe or Marvel universe.\nSuperhero(captainAmerica) ∧ American(captainAmerica) ∧ ¬ComeFrom(captainAmerica, dcUniverse) ::: Captain America is a superhero. Captain America is an American. Captain America does not come from DC universe.\n∀x (Superhero(x) ∧ American(x) → Speak(x, english)) ::: If a superhero is American, he speaks English.\n∀x (Superhero(x) → (Speak(x, english) ∨ Speak(x, spanish))) ::: A superhero speaks English or Spanish.\nConclusion:\nSpeak(captainAmerica, spanish) ::: Captain America speaks Spanish.\n------\nProblem:\nA person is either a student or a teacher. A student is either a graduate student or an undergraduate student. A graduate student is either a master's student or a"
    ]
  },
  {
    "id": "FOLIO_train_348",
    "context": "Robert Zimmer was born in Germany. Robert Zimmer is an essayist. Robert Zimmer was born in 1953. Every essayist is a writer. Every person born in Germany is German.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Robert Zimmer is German.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGerman(x) ::: x is German.\nEssayist(x) ::: x is an essayist.\nWriter(x) ::: x is a writer.\nBorn(x, y) ::: x was born in year y.\nPremises:\nGerman(robert) ∧ Essayist(robert) ∧ Born(robert, year1953) ::: Robert Zimmer was born in Germany.\nEssayist(robert) ∧ Writer(robert) ::: Robert Zimmer is an essayist.\nBorn(robert, year1953) ∧ German(robert) ::: Robert Zimmer was born in 1953.\n∀x (Essayist(x) → Writer(x)) ::: Every essayist is a writer.\n∀x (Born(x, year1953) ∧ German(x)) ::: Every person born in Germany is German.\nConclusion:\nGerman(robert) ::: Robert Zimmer is German.\n------\nProblem:\nA person is a student if and only if the person is a student. A person is a student if and only if the person is a student. A person is a student if and only if the person is a student. A person is"
    ]
  },
  {
    "id": "FOLIO_train_349",
    "context": "Robert Zimmer was born in Germany. Robert Zimmer is an essayist. Robert Zimmer was born in 1953. Every essayist is a writer. Every person born in Germany is German.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Robert Zimmer is not a writer.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGerman(x) ::: x is German.\nEssayist(x) ::: x is an essayist.\nWriter(x) ::: x is a writer.\nBorn(x, y) ::: x was born in year y.\nPremises:\nGerman(robert) ∧ Essayist(robert) ∧ Born(robert, year1953) ::: Robert Zimmer was born in Germany.\nEssayist(robert) ∧ Writer(robert) ::: Robert Zimmer is an essayist.\nBorn(robert, year1953) ∧ Writer(robert) ::: Robert Zimmer was born in 1953.\n∀x (Essayist(x) → Writer(x)) ::: Every essayist is a writer.\n∀x (Born(x, year1953) → German(x)) ::: Every person born in Germany is German.\nConclusion:\n¬Writer(robert) ::: Robert Zimmer is not a writer.\n------\nProblem:\nA person is a student if and only if the person is a student. A person is a student if and only if the person is a student. A person is a student if and only if the person is a student. A person is a"
    ]
  },
  {
    "id": "FOLIO_train_350",
    "context": "Robert Zimmer was born in Germany. Robert Zimmer is an essayist. Robert Zimmer was born in 1953. Every essayist is a writer. Every person born in Germany is German.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Robert Zimmer is a biographer.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGerman(x) ::: x is German.\nEssayist(x) ::: x is an essayist.\nWriter(x) ::: x is a writer.\nBiographer(x) ::: x is a biographer.\nBorn(x, y) ::: x was born in year y.\nPremises:\nGerman(robert) ∧ Essayist(robert) ∧ Born(robert, year1953) ::: Robert Zimmer was born in Germany.\nEssayist(robert) ∧ Writer(robert) ::: Robert Zimmer is an essayist.\nBorn(robert, year1953) ∧ German(robert) ::: Robert Zimmer was born in 1953.\n∀x (Essayist(x) → Writer(x)) ::: Every essayist is a writer.\n∀x (German(x) → German(x)) ::: Every person born in Germany is German.\nConclusion:\nBiographer(robert) ::: Robert Zimmer is a biographer.\n------"
    ]
  },
  {
    "id": "FOLIO_train_351",
    "context": "All people who repay their loans on time have a high credit score. Some people with high credit scores and high salaries are approved for mortgages. John has a high salary.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If John repays his loans on time, he will be approved for a mortgage.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRepay(x) ::: x repays his loans on time.\nHighCreditScore(x) ::: x has a high credit score.\nHighSalary(x) ::: x has a high salary.\nApproved(x) ::: x is approved for a mortgage.\nPremises:\n∀x (Repay(x) → HighCreditScore(x)) ::: All people who repay their loans on time have a high credit score.\n∃x (HighCreditScore(x) ∧ HighSalary(x) ∧ Approved(x)) ::: Some people with high credit scores and high salaries are approved for mortgages.\nHighSalary(john) ::: John has a high salary.\nConclusion:\nApproved(john) → Repay(john) ::: If John repays his loans on time, he will be approved for a mortgage.\n------\nProblem:\nAll people who are not married are single. Some people who are single are not married.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? If a person is single"
    ]
  },
  {
    "id": "FOLIO_train_352",
    "context": "All students are members of the university. All graduate students are students. All PhD students are graduate students. Some PhD students have high IQs. If John is not a PhD student, then he is not a member of the university. If John has a high IQ, then he is a PhD student or a graduate student.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? John has a high IQ.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nStudent(x) ::: x is a student.\nGraduateStudent(x) ::: x is a graduate student.\nPhDStudent(x) ::: x is a PhD student.\nMember(x, y) ::: x is a member of y.\nIQ(x) ::: x has a high IQ.\nPremises:\n∀x (Student(x) → Member(x, university)) ::: All students are members of the university.\n∀x (GraduateStudent(x) → Student(x)) ::: All graduate students are students.\n∀x (PhDStudent(x) → GraduateStudent(x)) ::: All PhD students are graduate students.\n∃x (PhDStudent(x) ∧ IQ(x)) ::: Some PhD students have high IQs.\n¬Member(john, university) → ¬Student(john) ::: If John is not a PhD student, then he is not a member of the university.\nIQ(john) → (PhDStudent(john) ∨ GraduateStudent(john)) ::: If John has"
    ]
  },
  {
    "id": "FOLIO_train_353",
    "context": "All students are members of the university. All graduate students are students. All PhD students are graduate students. Some PhD students have high IQs. If John is not a PhD student, then he is not a member of the university. If John has a high IQ, then he is a PhD student or a graduate student.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? John does not have a high IQ.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nStudent(x) ::: x is a student.\nGraduateStudent(x) ::: x is a graduate student.\nPhDStudent(x) ::: x is a PhD student.\nMember(x, y) ::: x is a member of y.\nIQ(x) ::: x has a high IQ.\nPremises:\n∀x (Student(x) → Member(x, university)) ::: All students are members of the university.\n∀x (GraduateStudent(x) → Student(x)) ::: All graduate students are students.\n∀x (PhDStudent(x) → GraduateStudent(x)) ::: All PhD students are graduate students.\n∃x (PhDStudent(x) ∧ IQ(x)) ::: Some PhD students have high IQs.\n¬Member(john, university) → ¬Student(john) ::: If John is not a PhD student, then he is not a member of the university.\nIQ(john) → (PhDStudent(john) ∨ GraduateStudent(john)) ::: If John has"
    ]
  },
  {
    "id": "FOLIO_train_354",
    "context": "All students are members of the university. All graduate students are students. All PhD students are graduate students. Some PhD students have high IQs. If John is not a PhD student, then he is not a member of the university. If John has a high IQ, then he is a PhD student or a graduate student.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? John is a PhD student.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nStudent(x) ::: x is a student.\nGraduateStudent(x) ::: x is a graduate student.\nPhDStudent(x) ::: x is a PhD student.\nMember(x, y) ::: x is a member of y.\nIQ(x) ::: x has a high IQ.\nPremises:\n∀x (Student(x) → Member(x, university)) ::: All students are members of the university.\n∀x (GraduateStudent(x) → Student(x)) ::: All graduate students are students.\n∀x (PhDStudent(x) → GraduateStudent(x)) ::: All PhD students are graduate students.\n∃x (PhDStudent(x) ∧ IQ(x)) ::: Some PhD students have high IQs.\n¬Member(john, university) → ¬Student(john) ::: If John is not a PhD student, then he is not a member of the university.\nIQ(john) → (PhDStudent(john) ∨ GraduateStudent(john)) ::: If John has"
    ]
  },
  {
    "id": "FOLIO_train_355",
    "context": "Belgium, France and Germany are European countries. Paris is the capital of France. The Eiffel Tower is one of the main tourist attractions located in Paris. Some people who live in Belgium speak French. If John goes to Europe, he will see some tourist attractions. John speaks French.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If John goes to Europe, he will see the Eiffel Tower.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEuropeanCountry(x) ::: x is a European country.\nCapital(x, y) ::: x is the capital of y.\nTouristAttraction(x) ::: x is a tourist attraction.\nLocatedIn(x, y) ::: x is located in y.\nSpeak(x, y) ::: x speaks y.\nGo(x, y) ::: x goes to y.\nSee(x, y) ::: x sees y.\nPremises:\nEuropeanCountry(belgium) ∧ EuropeanCountry(france) ∧ EuropeanCountry(germany) ::: Belgium, France and Germany are European countries.\nCapital(france, paris) ∧ TouristAttraction(eiffelTower) ∧ LocatedIn(eiffelTower, paris) ::: Paris is the capital of France. The Eiffel Tower is one of the main tourist attractions located in Paris.\n∃x (EuropeanCountry(x) ∧ Speak(x, french)) ::: Some people who live in Belgium speak French.���"
    ]
  },
  {
    "id": "FOLIO_train_356",
    "context": "Belgium, France and Germany are European countries. Paris is the capital of France. The Eiffel Tower is one of the main tourist attractions located in Paris. Some people who live in Belgium speak French. If John goes to Europe, he will see some tourist attractions. John speaks French.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Eiffel Tower is located in the capital of France.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEuropeanCountry(x) ::: x is a European country.\nCapital(x, y) ::: x is the capital of y.\nTouristAttraction(x) ::: x is a tourist attraction.\nLocatedIn(x, y) ::: x is located in y.\nSpeak(x, y) ::: x speaks y.\nGo(x, y) ::: x goes to y.\nPremises:\nEuropeanCountry(belgium) ∧ EuropeanCountry(france) ∧ EuropeanCountry(germany) ::: Belgium, France and Germany are European countries.\nCapital(france, paris) ::: Paris is the capital of France.\nTouristAttraction(eiffelTower) ∧ LocatedIn(eiffelTower, paris) ::: The Eiffel Tower is one of the main tourist attractions located in Paris.\n∃x (EuropeanCountry(x) ∧ Speak(x, french)) ::: Some people who live in Belgium speak French.\n∀x (Go(john, europe) → See("
    ]
  },
  {
    "id": "FOLIO_train_357",
    "context": "Belgium, France and Germany are European countries. Paris is the capital of France. The Eiffel Tower is one of the main tourist attractions located in Paris. Some people who live in Belgium speak French. If John goes to Europe, he will see some tourist attractions. John speaks French.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? John lives in Belgium.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEuropeanCountry(x) ::: x is a European country.\nCapital(x, y) ::: x is the capital of y.\nTouristAttraction(x) ::: x is a tourist attraction.\nLocatedIn(x, y) ::: x is located in y.\nSpeak(x, y) ::: x speaks y.\nGo(x, y) ::: x goes to y.\nPremises:\nEuropeanCountry(belgium) ∧ EuropeanCountry(france) ∧ EuropeanCountry(germany) ::: Belgium, France and Germany are European countries.\nCapital(france, paris) ∧ TouristAttraction(eiffelTower) ∧ LocatedIn(eiffelTower, paris) ::: Paris is the capital of France. The Eiffel Tower is one of the main tourist attractions located in Paris.\n∃x (EuropeanCountry(x) ∧ Speak(x, french)) ::: Some people who live in Belgium speak French.\n∀x (Go(john, europe) → See("
    ]
  },
  {
    "id": "FOLIO_train_358",
    "context": "All sports cars are loud. No loud cars are electric. If a car is a Ferrari, then it is a sports car. All cars made in Maranello are Ferrari If Prius is neither a sports car nor a loud car, then Prius is a Maranello-made car or a loud car.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Prius is an electric car.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSportsCar(x) ::: x is a sports car.\nLoud(x) ::: x is loud.\nElectric(x) ::: x is an electric car.\nFerrari(x) ::: x is a Ferrari.\nMaranello(x) ::: x is a car made in Maranello.\nPremises:\n∀x (SportsCar(x) → Loud(x)) ::: All sports cars are loud.\n∀x (Loud(x) → ¬Electric(x)) ::: No loud cars are electric.\n∀x (Ferrari(x) → SportsCar(x)) ::: If a car is a Ferrari, then it is a sports car.\n∀x (Maranello(x) → Ferrari(x)) ::: All cars made in Maranello are Ferrari.\n¬(SportsCar(prius) ∧ Loud(prius)) → (Maranello(prius) ∨ Loud(prius)) ::: If Prius is neither a sports car nor a loud car,"
    ]
  },
  {
    "id": "FOLIO_train_359",
    "context": "All sports cars are loud. No loud cars are electric. If a car is a Ferrari, then it is a sports car. All cars made in Maranello are Ferrari If Prius is neither a sports car nor a loud car, then Prius is a Maranello-made car or a loud car.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Prius is not an electric car.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSportsCar(x) ::: x is a sports car.\nLoud(x) ::: x is loud.\nElectric(x) ::: x is an electric car.\nFerrari(x) ::: x is a Ferrari.\nMaranello(x) ::: x is a car made in Maranello.\nPremises:\n∀x (SportsCar(x) → Loud(x)) ::: All sports cars are loud.\n∀x (Loud(x) → ¬Electric(x)) ::: No loud cars are electric.\n∀x (Ferrari(x) → SportsCar(x)) ::: If a car is a Ferrari, then it is a sports car.\n∀x (Maranello(x) → Ferrari(x)) ::: All cars made in Maranello are Ferrari.\n¬(SportsCar(prius) ∧ Loud(prius)) → (Maranello(prius) ∨ Loud(prius)) ::: If Prius is neither a sports car nor a loud car,"
    ]
  },
  {
    "id": "FOLIO_train_360",
    "context": "All sports cars are loud. No loud cars are electric. If a car is a Ferrari, then it is a sports car. All cars made in Maranello are Ferrari If Prius is neither a sports car nor a loud car, then Prius is a Maranello-made car or a loud car.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Prius is a Maranello-made car.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSportsCar(x) ::: x is a sports car.\nLoud(x) ::: x is loud.\nElectric(x) ::: x is electric.\nFerrari(x) ::: x is a Ferrari.\nMaranelloMade(x) ::: x is a Maranello-made car.\nPremises:\n∀x (SportsCar(x) → Loud(x)) ::: All sports cars are loud.\n∀x (Loud(x) → ¬Electric(x)) ::: No loud cars are electric.\n∀x (Ferrari(x) → SportsCar(x)) ::: If a car is a Ferrari, then it is a sports car.\n∀x (MaranelloMade(x) → Ferrari(x)) ::: All cars made in Maranello are Ferrari.\n¬(SportsCar(prius) ∧ Loud(prius)) → (MaranelloMade(prius) ∨ Loud(prius)) ::: If Prius is neither a sports car nor a loud car, then Prius is a Maranello-made car or a loud car.\nConclusion:\nMaranelloMade(prius) ::: Prius is a Maranello-made car.\n------"
    ]
  },
  {
    "id": "FOLIO_train_361",
    "context": "All sports cars are loud. No loud cars are electric. If a car is a Ferrari, then it is a sports car. All cars made in Maranello are Ferrari If Prius is neither a sports car nor a loud car, then Prius is a Maranello-made car or a loud car.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Prius is a Ferrari or a loud car, then Prius is an electric car.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSportsCar(x) ::: x is a sports car.\nLoud(x) ::: x is loud.\nElectric(x) ::: x is electric.\nFerrari(x) ::: x is a Ferrari.\nMaranelloMade(x) ::: x is a Maranello-made car.\nPremises:\n∀x (SportsCar(x) → Loud(x)) ::: All sports cars are loud.\n∀x (Loud(x) → ¬Electric(x)) ::: No loud cars are electric.\n∀x (Ferrari(x) → SportsCar(x)) ::: If a car is a Ferrari, then it is a sports car.\n∀x (MaranelloMade(x) → Ferrari(x)) ::: All cars made in Maranello are Ferrari.\n¬(SportsCar(prius) ∧ Loud(prius)) → (MaranelloMade(prius) ∨ Loud(prius)) ::: If Prius is neither a sports car nor a loud car, then Prius is a Maranello-made car or a loud car.\nConclusion:\n(Ferrari(prius) ∨ Loud(prius)) → Electric(pri"
    ]
  },
  {
    "id": "FOLIO_train_362",
    "context": "If something is a plant, then it is not a cute animal. All flowers are plants. Every kitten is a cute animal. If something is grown in a garden, then it is a flower. Piper is a kitten or a cute animal.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Piper was grown in a garden.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPlant(x) ::: x is a plant.\nCuteAnimal(x) ::: x is a cute animal.\nGarden(x) ::: x is a garden.\nFlower(x) ::: x is a flower.\nGrown(x, y) ::: x is grown in garden y.\nKitten(x) ::: x is a kitten.\nPremises:\n∀x (Plant(x) → ¬CuteAnimal(x)) ::: If something is a plant, then it is not a cute animal.\nFlower(flower) ∧ Plant(flower) ::: All flowers are plants.\n∀x (Kitten(x) → CuteAnimal(x)) ::: Every kitten is a cute animal.\n∀x (Garden(x) → ∃y (Flower(y) ∧ Grown(y, x))) ::: If something is grown in a garden, then it is a flower.\nPiper ∨ CuteAnimal(piper) ::: Piper is a kitten or a cute animal.\nConclusion:\nGrown(piper, garden) ::: Piper was grown in a garden.\n------\nProblem:\nIf something is a plant, then it is not a cute animal. All flowers are plants. Every k"
    ]
  },
  {
    "id": "FOLIO_train_363",
    "context": "If something is a plant, then it is not a cute animal. All flowers are plants. Every kitten is a cute animal. If something is grown in a garden, then it is a flower. Piper is a kitten or a cute animal.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Piper was not grown in a garden.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPlant(x) ::: x is a plant.\nCuteAnimal(x) ::: x is a cute animal.\nGarden(x) ::: x is a garden.\nFlower(x) ::: x is a flower.\nGrown(x, y) ::: x is grown in garden y.\nKitten(x) ::: x is a kitten.\nPremises:\n∀x (Plant(x) → ¬CuteAnimal(x)) ::: If something is a plant, then it is not a cute animal.\nFlower(flower) ∧ Plant(flower) ::: All flowers are plants.\n∀x (Kitten(x) → CuteAnimal(x)) ::: Every kitten is a cute animal.\n∀x (Garden(x) → ∃y (Flower(y) ∧ Grown(y, x))) ::: If something is grown in a garden, then it is a flower.\nPiper ∨ CuteAnimal(piper) ::: Piper is a kitten or a cute animal.\nConclusion:\n¬Grown(piper, garden) ::: Piper was not grown in a garden.\n------\nProblem:\nIf something is a plant, then it is not a cute animal. All flowers are plants."
    ]
  },
  {
    "id": "FOLIO_train_364",
    "context": "If something is a plant, then it is not a cute animal. All flowers are plants. Every kitten is a cute animal. If something is grown in a garden, then it is a flower. Piper is a kitten or a cute animal.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Piper is a kitten.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPlant(x) ::: x is a plant.\nCuteAnimal(x) ::: x is a cute animal.\nFlower(x) ::: x is a flower.\nGarden(x) ::: x is a garden.\nKitten(x) ::: x is a kitten.\nPremises:\n∀x (Plant(x) → ¬CuteAnimal(x)) ::: If something is a plant, then it is not a cute animal.\n∀x (Flower(x) → Plant(x)) ::: All flowers are plants.\n∀x (Kitten(x) → CuteAnimal(x)) ::: Every kitten is a cute animal.\n∀x (Garden(x) → Flower(x)) ::: If something is grown in a garden, then it is a flower.\nPiper ∨ CuteAnimal(piper) ::: Piper is a kitten or a cute animal.\nConclusion:\nKitten(piper) ::: Piper is a kitten.\n------\nProblem:\nIf something is a plant, then it is not a cute animal. All flowers are plants. Every kitten is a cute animal. If something is grown in a garden, then it is a flower. Piper is a kitten or a cute animal.\nQuestion:\nBased on"
    ]
  },
  {
    "id": "FOLIO_train_365",
    "context": "Guam has participated in the Winter Olympics. In 1988, the Winter Olympics were held in Calgary. Guam sent an athlete to the Calgary Winter Olympics. If Guan sent an athlete to the Calgary Winter Olympics, then it participated in the Calgary Winter Olympics. Judd Bankert is the only athlete from Guam who has ever competed in the Winter Olympics.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Judd Bankert competed in the 1992 Winter Olympics.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nParticipate(x, y) ::: x participated in the y Winter Olympics.\nSend(x, y) ::: x sent an athlete to the y Winter Olympics.\nCompete(x, y) ::: x competed in the y Winter Olympics.\nAthlete(x) ::: x is an athlete.\nPremises:\nParticipate(guam, calgary) ::: Guam has participated in the Winter Olympics.\nSend(guam, calgary) ∧ 1988 = yearCalgary ::: In 1988, the Winter Olympics were held in Calgary.\nSend(guam, calgary) → Participate(guam, calgary) ::: If Guan sent an athlete to the Calgary Winter Olympics, then it participated in the Calgary Winter Olympics.\n∃x (Athlete(x) ∧ Compete(x, calgary)) ∧ ∀y (Athlete(y) ∧ Compete(y, calgary)) → x = y ::: Judd Bankert is the only athlete from Guam who has ever competed in the Winter Olympics.\nConclusion:\nCompete(judd, calgary) ::: Judd Bankert competed in the 1992 Winter Olympics.\n------\nPro"
    ]
  },
  {
    "id": "FOLIO_train_366",
    "context": "Guam has participated in the Winter Olympics. In 1988, the Winter Olympics were held in Calgary. Guam sent an athlete to the Calgary Winter Olympics. If Guan sent an athlete to the Calgary Winter Olympics, then it participated in the Calgary Winter Olympics. Judd Bankert is the only athlete from Guam who has ever competed in the Winter Olympics.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Guam has participated in the Summer Olympics at least once.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nParticipate(x, y) ::: x participated in the y Olympics.\nAthlete(x) ::: x is an athlete.\nCompete(x, y) ::: x competed in the y Olympics.\nSummer(x) ::: x is a Summer Olympics.\nWinter(x) ::: x is a Winter Olympics.\nPremises:\nParticipate(guam, calgary) ::: Guam has participated in the Winter Olympics.\nWinter(calgary) ::: In 1988, the Winter Olympics were held in Calgary.\nCompete(athlete, calgary) ::: Guam sent an athlete to the Calgary Winter Olympics.\n∀x (Participate(x, calgary) → Compete(x, calgary)) ::: If Guan sent an athlete to the Calgary Winter Olympics, then it participated in the Calgary Winter Olympics.\n∃x (Athlete(x) ∧ Compete(x, calgary)) ::: Judd Bankert is the only athlete from Guam who has ever competed in the Winter Olympics.\nConclusion:\nParticipate(guam, summer) ::: Guam has participated in the Summer Olympics at least once.\n------\nProblem:\nThe only person who has ever been a member of the United"
    ]
  },
  {
    "id": "FOLIO_train_367",
    "context": "Michael O'Donnell is a British physician, journalist, author and broadcaster. One of the word-setters of My Word! was Michael O'Donnell. The magazine World Medicine was edited by Michael O'Donnell. Michael O'Donnell was born in Yorkshire as the son of a general practitioner.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The son of a general practitioner was a word-setter of My Word!.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBritish(x) ::: x is a British person.\nPhysician(x) ::: x is a physician.\nJournalist(x) ::: x is a journalist.\nAuthor(x, y) ::: x is the author of y.\nBroadcaster(x) ::: x is a broadcaster.\nWordSetter(x, y) ::: x is a word-setter of y.\nEdit(x, y) ::: x is edited by y.\nBorn(x, y) ::: x was born in y.\nSon(x, y) ::: x is the son of y.\nPremises:\nBritish(michael) ∧ Physician(michael) ∧ Journalist(michael) ∧ Author(michael, myWord) ∧ Broadcaster(michael) ∧ WordSetter(michael, myWord) ∧ Edit(michael, worldMedicine) ∧ Born(michael, yorkshire) ∧ Son(michael, generalPractitioner) ::: Michael O'Donnell is a British physician, journalist, author and broadcaster. One of the word-setters of My Word! was Michael O'Donnell. The magazine World Medicine was edited by Michael O'Donnell. Michael O'Don"
    ]
  },
  {
    "id": "FOLIO_train_368",
    "context": "Michael O'Donnell is a British physician, journalist, author and broadcaster. One of the word-setters of My Word! was Michael O'Donnell. The magazine World Medicine was edited by Michael O'Donnell. Michael O'Donnell was born in Yorkshire as the son of a general practitioner.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? World Medicine is not a magazine.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBritish(x) ::: x is a British person.\nPhysician(x) ::: x is a physician.\nJournalist(x) ::: x is a journalist.\nAuthor(x, y) ::: x is the author of y.\nBroadcaster(x) ::: x is a broadcaster.\nWordSetter(x, y) ::: x is a word-setter of y.\nEdit(x, y) ::: x is edited by y.\nBorn(x, y) ::: x was born in y.\nSon(x, y) ::: x is the son of y.\nGeneralPractitioner(x) ::: x is a general practitioner.\nPremises:\nBritish(michael) ∧ Physician(michael) ∧ Journalist(michael) ∧ Author(michael, myWord) ∧ Broadcaster(michael) ∧ WordSetter(michael, myWord) ∧ Edit(michael, worldMedicine) ∧ Born(michael, yorkshire) ∧ Son(michael, generalPractitioner) ::: Michael O'Donnell is a British physician, journalist, author and broadcaster. One of the word-setters of My Word! was Michael O'Donnell"
    ]
  },
  {
    "id": "FOLIO_train_369",
    "context": "Michael O'Donnell is a British physician, journalist, author and broadcaster. One of the word-setters of My Word! was Michael O'Donnell. The magazine World Medicine was edited by Michael O'Donnell. Michael O'Donnell was born in Yorkshire as the son of a general practitioner.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There are no British authors.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBritish(x) ::: x is a British person.\nAuthor(x) ::: x is an author.\nJournalist(x) ::: x is a journalist.\nBroadcaster(x) ::: x is a broadcaster.\nWordSetter(x) ::: x is a word-setter.\nEditor(x) ::: x is an editor.\nBorn(x, y) ::: x was born in year y.\nPremises:\nBritish(michael) ∧ Author(michael) ∧ Journalist(michael) ∧ Broadcaster(michael) ::: Michael O'Donnell is a British physician, journalist, author and broadcaster.\n∃x (Author(x) ∧ WordSetter(x)) ::: One of the word-setters of My Word! was Michael O'Donnell.\n∃x (Editor(x) ∧ Magazine(x) ∧ WorldMedicine) ::: The magazine World Medicine was edited by Michael O'Donnell.\nBorn(michael, yorkshire) ∧ Born(michael, year1940) ∧ Born(michael, sonOf(generalPractitioner)) ::: Michael O'Donnell was born in Yorkshire as the son of a general"
    ]
  },
  {
    "id": "FOLIO_train_370",
    "context": "Michael O'Donnell is a British physician, journalist, author and broadcaster. One of the word-setters of My Word! was Michael O'Donnell. The magazine World Medicine was edited by Michael O'Donnell. Michael O'Donnell was born in Yorkshire as the son of a general practitioner.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There are no journalists that were born in Yorkshire.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBornIn(x, y) ::: x was born in y.\nJournalist(x) ::: x is a journalist.\nAuthor(x, y) ::: x is the author of y.\nBroadcaster(x) ::: x is a broadcaster.\nPhysician(x) ::: x is a physician.\nWorldSetter(x, y) ::: x is a word-setter of y.\nEditor(x, y) ::: x is the editor of y.\nPremises:\nBornIn(michael, yorkshire) ∧ Physician(michael) ∧ Journalist(michael) ∧ Author(michael, myWord) ∧ Broadcaster(michael) ::: Michael O'Donnell is a British physician, journalist, author and broadcaster.\nWorldSetter(michael, myWord) ∧ Editor(michael, worldMedicine) ::: One of the word-setters of My Word! was Michael O'Donnell. The magazine World Medicine was edited by Michael O'Donnell.\nConclusion:\n¬∃x (Journalist(x) ∧ BornIn(x, yorkshire)) ::: There are no journalists that were born in Yorkshire.\n------"
    ]
  },
  {
    "id": "FOLIO_train_371",
    "context": "Michael O'Donnell is a British physician, journalist, author and broadcaster. One of the word-setters of My Word! was Michael O'Donnell. The magazine World Medicine was edited by Michael O'Donnell. Michael O'Donnell was born in Yorkshire as the son of a general practitioner.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There is a son of a general practitioner that is not an author.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBritish(x) ::: x is a British person.\nPhysician(x) ::: x is a physician.\nJournalist(x) ::: x is a journalist.\nAuthor(x) ::: x is an author.\nBroadcaster(x) ::: x is a broadcaster.\nWorldSetter(x) ::: x is a word-setter of My Word!.\nEditor(x) ::: x is an editor.\nMagazine(x) ::: x is a magazine.\nBorn(x, y) ::: x was born in year y.\nSon(x, y) ::: x is the son of y.\nPremises:\nBritish(michael) ∧ Physician(michael) ∧ Journalist(michael) ∧ Author(michael) ∧ Broadcaster(michael) ::: Michael O'Donnell is a British physician, journalist, author and broadcaster.\nWorldSetter(michael) ::: One of the word-setters of My Word! was Michael O'Donnell.\nEditor(michael) ∧ Magazine(worldMedicine) ::: The magazine World Medicine was edited by Michael O'Donnell.\nBorn(michael, yorkshire)"
    ]
  },
  {
    "id": "FOLIO_train_372",
    "context": "No homework is fun. Some reading is homework.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Some reading is fun.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nHomework(x) ::: x is homework.\nReading(x) ::: x is reading.\nFun(x) ::: x is fun.\nPremises:\n¬∀x (Reading(x) → Homework(x)) ::: No homework is fun.\n∃x (Reading(x) ∧ Homework(x)) ::: Some reading is homework.\nConclusion:\n∃x (Reading(x) ∧ Fun(x)) ::: Some reading is fun.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffe"
    ]
  },
  {
    "id": "FOLIO_train_373",
    "context": "If violence is good, it is justified. If something is justified, it is lawful.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If violence is good, it is lawful.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nViolence(x) ::: x is violence.\nGood(x) ::: x is good.\nJustified(x) ::: x is justified.\nLawful(x) ::: x is lawful.\nPremises:\n∀x (Violence(x) → Good(x)) ::: If violence is good, it is justified.\n∀x (Justified(x) → Lawful(x)) ::: If something is justified, it is lawful.\nConclusion:\n∀x (Violence(x) → Lawful(x)) ::: If violence is good, it is lawful.\n------\nProblem:\nIf a person is a student, then the person is a person. If a person is a person, then the person is a human being. If a person is a human being, then the person is a mammal. If a person is a mammal, then the person is a vertebrate. If a person is a vertebrate, then the person is an animal. If a person is an animal, then the person is a living thing. If a person is a living thing, then the person is a thing.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? If a person is a student, then the person is a thing"
    ]
  },
  {
    "id": "FOLIO_train_374",
    "context": "All people who have a horse ranch regularly ride horses for pleasure and sport. All people who have a lot of disposable income have a horse ranch. If people compete in horse dressage shows, then they have a lot of disposable income. If people compete in horse dressage shows, then they have invested in high-quality equestrian gear and equipment. If people regularly ride horses for pleasure and sport, then they do not live in cramped residential buildings. Manny either has a horse ranch and lives in cramped residential buildings, or he neither has a horse ranch nor lives in cramped residential buildings.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Manny regularly rides horses for pleasure and sport.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nHave(x, y) ::: x has y.\nRide(x, y) ::: x regularly rides y for pleasure and sport.\nCompete(x, y) ::: x competes in y.\nInvest(x, y) ::: x has invested in y.\nDisposableIncome(x) ::: x has a lot of disposable income.\nHorseRanch(x) ::: x has a horse ranch.\nResidentialBuilding(x) ::: x is a residential building.\nCrammed(x) ::: x is crammed.\nPremises:\n∀x (Have(x, horseRanch) → Ride(x, horse) ∧ DisposableIncome(x)) ::: All people who have a horse ranch regularly ride horses for pleasure and sport and have a lot of disposable income.\n∀x (DisposableIncome(x) → Have(x, horseRanch)) ::: All people who have a lot of disposable income have a horse ranch.\n∀x (Compete(x, horseDressageShow) → DisposableIncome(x)) ::: If people compete in horse dressage shows, then they have a lot of disposable income.\n∀x (Compete(x, horse"
    ]
  },
  {
    "id": "FOLIO_train_375",
    "context": "All people who have a horse ranch regularly ride horses for pleasure and sport. All people who have a lot of disposable income have a horse ranch. If people compete in horse dressage shows, then they have a lot of disposable income. If people compete in horse dressage shows, then they have invested in high-quality equestrian gear and equipment. If people regularly ride horses for pleasure and sport, then they do not live in cramped residential buildings. Manny either has a horse ranch and lives in cramped residential buildings, or he neither has a horse ranch nor lives in cramped residential buildings.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Manny competes in horse dressage shows and has invested in high-quality equestrian equipment and gear.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nHorseRanch(x) ::: x has a horse ranch.\nRide(x) ::: x regularly rides horses for pleasure and sport.\nCompete(x) ::: x competes in horse dressage shows.\nDisposableIncome(x) ::: x has a lot of disposable income.\nEquipment(x) ::: x has invested in high-quality equestrian gear and equipment.\nLive(x) ::: x lives in cramped residential buildings.\nPremises:\n∀x (HorseRanch(x) → Ride(x)) ::: All people who have a horse ranch regularly ride horses for pleasure and sport.\n∀x (HorseRanch(x) → DisposableIncome(x)) ::: All people who have a lot of disposable income have a horse ranch.\n∀x (Compete(x) → DisposableIncome(x)) ::: If people compete in horse dressage shows, then they have a lot of disposable income.\n∀x (Compete(x) → Equipment(x)) ::: If people compete in horse dressage shows, then they have invested in high-quality equestrian gear and equipment.\n∀x (Ride(x) → ¬Live(x)) ::: If people"
    ]
  },
  {
    "id": "FOLIO_train_376",
    "context": "All people who have a horse ranch regularly ride horses for pleasure and sport. All people who have a lot of disposable income have a horse ranch. If people compete in horse dressage shows, then they have a lot of disposable income. If people compete in horse dressage shows, then they have invested in high-quality equestrian gear and equipment. If people regularly ride horses for pleasure and sport, then they do not live in cramped residential buildings. Manny either has a horse ranch and lives in cramped residential buildings, or he neither has a horse ranch nor lives in cramped residential buildings.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Manny either has a horse ranch or competes in horse dressage shows, then Manny has not invested in high-quality equestrian equipment and gear.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nHorseRanch(x) ::: x has a horse ranch.\nRide(x) ::: x regularly rides horses for pleasure and sport.\nCompete(x) ::: x competes in horse dressage shows.\nDisposableIncome(x) ::: x has a lot of disposable income.\nEquipment(x) ::: x has invested in high-quality equestrian gear and equipment.\nResidentialBuilding(x) ::: x lives in cramped residential buildings.\nPremises:\n∀x (HorseRanch(x) → Ride(x)) ::: All people who have a horse ranch regularly ride horses for pleasure and sport.\n∀x (HorseRanch(x) → DisposableIncome(x)) ::: All people who have a lot of disposable income have a horse ranch.\n∀x (Compete(x) → DisposableIncome(x)) ::: If people compete in horse dressage shows, then they have a lot of disposable income.\n∀x (Compete(x) → Equipment(x)) ::: If people compete in horse dressage shows, then they have invested in high-quality equestrian gear and equipment.\n∀x (Ride(x) → ¬ResidentialBuilding("
    ]
  },
  {
    "id": "FOLIO_train_377",
    "context": "A roundel is a rounded artillery fortification. A roundel is not higher than adjacent walls. Cannons can be deployed on artillery fortifications. Roundels are the oldest artillery fortifications. Battery towers are an artillery fortification.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Cannons can be deployed on battery towers.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRoundel(x) ::: x is a roundel.\nHigher(x, y) ::: x is higher than y.\nAdjacent(x, y) ::: x is adjacent to y.\nArtilleryFortification(x) ::: x is an artillery fortification.\nDeploy(x, y) ::: x can be deployed on y.\nOldest(x, y) ::: x is the oldest of y.\nBatteryTower(x) ::: x is a battery tower.\nPremises:\n∀x (Roundel(x) → ¬Higher(x, Adjacent(x, wall))) ::: A roundel is not higher than adjacent walls.\n∀x (Roundel(x) → Deploy(cannon, x)) ::: Cannons can be deployed on artillery fortifications.\n∀x (Roundel(x) → Oldest(x, ArtilleryFortification(x))) ::: Roundels are the oldest artillery fortifications.\n∀x (BatteryTower(x) → ArtilleryFortification(x)) ::: Battery towers are an artillery fortification.\nConclusion:\nDeploy(cannon, batteryTower) ::: Cannons can be deployed on battery towers.\n------\nPro"
    ]
  },
  {
    "id": "FOLIO_train_378",
    "context": "A roundel is a rounded artillery fortification. A roundel is not higher than adjacent walls. Cannons can be deployed on artillery fortifications. Roundels are the oldest artillery fortifications. Battery towers are an artillery fortification.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Roundels are older than battery towers.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRoundel(x) ::: x is a roundel.\nArtilleryFortification(x) ::: x is an artillery fortification.\nHigher(x, y) ::: x is higher than y.\nAdjacent(x, y) ::: x is adjacent to y.\nDeploy(x, y) ::: x can be deployed on y.\nOlder(x, y) ::: x is older than y.\nPremises:\nRoundel(x) ∧ ¬Higher(x, adjacentWalls) ::: A roundel is not higher than adjacent walls.\n∀x (ArtilleryFortification(x) → Deploy(cannon, x)) ::: Cannons can be deployed on artillery fortifications.\n∀x (Roundel(x) → Oldest(x)) ::: Roundels are the oldest artillery fortifications.\nBatteryTower(x) ∧ ArtilleryFortification(x) ::: Battery towers are an artillery fortification.\nConclusion:\nOlder(roundel, batteryTower) ::: Roundels are older than battery towers.\n------\nProblem:\nA person who is a member of the Communist Party of the Soviet Union is a communist. A person who is a member of the Communist"
    ]
  },
  {
    "id": "FOLIO_train_379",
    "context": "A roundel is a rounded artillery fortification. A roundel is not higher than adjacent walls. Cannons can be deployed on artillery fortifications. Roundels are the oldest artillery fortifications. Battery towers are an artillery fortification.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Battery towers are higher than adjacent walls.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRoundel(x) ::: x is a roundel.\nHigher(x, y) ::: x is higher than y.\nAdjacent(x, y) ::: x is adjacent to y.\nArtilleryFortification(x) ::: x is an artillery fortification.\nCannon(x) ::: x is a cannon.\nOldest(x) ::: x is the oldest.\nBatteryTower(x) ::: x is a battery tower.\nPremises:\n∀x (Roundel(x) → ¬Higher(x, Adjacent(x))) ::: A roundel is not higher than adjacent walls.\n∀x (ArtilleryFortification(x) → ∃y (Cannon(y) ∧ Deploy(y, x))) ::: Cannons can be deployed on artillery fortifications.\n∀x (Roundel(x) → Oldest(x)) ::: Roundels are the oldest artillery fortifications.\nBatteryTower(batteryTower) ::: Battery towers are an artillery fortification.\nConclusion:\nHigher(batteryTower, Adjacent(batteryTower)) ::: Battery towers are higher than adjacent walls.\n------\nProblem:"
    ]
  },
  {
    "id": "FOLIO_train_380",
    "context": "A roundel is a rounded artillery fortification. A roundel is not higher than adjacent walls. Cannons can be deployed on artillery fortifications. Roundels are the oldest artillery fortifications. Battery towers are an artillery fortification.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Roundels can be deployed on roundels.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRoundel(x) ::: x is a roundel.\nHigher(x, y) ::: x is higher than y.\nAdjacent(x, y) ::: x is adjacent to y.\nDeploy(x, y) ::: x can be deployed on y.\nArtilleryFortification(x) ::: x is an artillery fortification.\nOldest(x) ::: x is the oldest.\nBatteryTower(x) ::: x is a battery tower.\nPremises:\n∀x (Roundel(x) → ¬Higher(x, adjacent(x))) ::: A roundel is not higher than adjacent walls.\n∀x (Roundel(x) → ∃y (Cannon(y) ∧ Deploy(y, x))) ::: Roundels can be deployed on artillery fortifications.\n∀x (Roundel(x) → Oldest(x)) ::: Roundels are the oldest artillery fortifications.\n∀x (BatteryTower(x) → ArtilleryFortification(x)) ::: Battery towers are an artillery fortification.\nConclusion:\n∀x (Roundel(x) → ∃y (Roundel(y) ∧ Deploy(y, x))) ::: Roundels can be deployed on roundels.\n------"
    ]
  },
  {
    "id": "FOLIO_train_381",
    "context": "All tissues are soft. Some papers are tissues.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Some papers are hard.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTissue(x) ::: x is a tissue.\nPaper(x) ::: x is a paper.\nSoft(x) ::: x is soft.\nHard(x) ::: x is hard.\nPremises:\n∀x (Tissue(x) → Soft(x)) ::: All tissues are soft.\n∃x (Paper(x) ∧ Tissue(x)) ::: Some papers are tissues.\nConclusion:\n∃x (Paper(x) ∧ Hard(x)) ::: Some papers are hard.\n------\nProblem:\nAll people who are not students are either teachers or professors. Some people are not students.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Some people are students.\n###\nPredicates:\nStudent(x) ::: x is a student.\nTeacher(x) ::: x is a teacher.\nProfessor(x) ::: x is a professor.\nPremises:\n∀x (¬Student(x) → (Teacher(x) ∨ Professor(x))) ::: All people who are not students are either teachers or professors.\n∃x ¬Student(x) ::: Some people are not students.\nConclusion:\n∃x Student(x"
    ]
  },
  {
    "id": "FOLIO_train_382",
    "context": "All volunteers receive intangible benefits for their work. Volunteers work regularly or on an as-needed basis. Some volunteers are trained. Volunteers work in groups or individually. Environmental volunteers contribute toward environmental management or conservation. Participating in natural disaster response is an example of volunteers working in groups on an as-needed basis.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Volunteers who participate in natural disaster response receive intangible benefits for their work.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nVolunteer(x) ::: x is a volunteer.\nReceive(x, y) ::: x receives y.\nIntangible(y) ::: y is an intangible benefit.\nWork(x, y) ::: x works in y.\nRegular(y) ::: y is regular.\nAsNeeded(y) ::: y is on an as-needed basis.\nTrained(x) ::: x is trained.\nGroup(y) ::: y is a group.\nIndividual(y) ::: y is an individual.\nContribute(x, y) ::: x contributes toward y.\nEnvironmental(y) ::: y is environmental.\nManagement(y) ::: y is management.\nConservation(y) ::: y is conservation.\nNaturalDisasterResponse(x) ::: x is natural disaster response.\nPremises:\n∀x (Volunteer(x) → Receive(x, Intangible(intangibleBenefits))) ::: All volunteers receive intangible benefits for their work.\n∀x (Volunteer(x) → Work(x, Regular(regular) ∨ AsNeeded(asNeeded))) ::: Volunteers work regularly or on an as-needed basis.\n∃x (Volunteer(x) ∧ Trained"
    ]
  },
  {
    "id": "FOLIO_train_383",
    "context": "All volunteers receive intangible benefits for their work. Volunteers work regularly or on an as-needed basis. Some volunteers are trained. Volunteers work in groups or individually. Environmental volunteers contribute toward environmental management or conservation. Participating in natural disaster response is an example of volunteers working in groups on an as-needed basis.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Environmental volunteers work in groups.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nVolunteer(x) ::: x is a volunteer.\nIntangibleBenefit(x) ::: x is an intangible benefit.\nRegular(x) ::: x works regularly.\nAsNeeded(x) ::: x works on an as-needed basis.\nTrained(x) ::: x is trained.\nGroup(x) ::: x works in a group.\nIndividual(x) ::: x works individually.\nEnvironmental(x) ::: x is an environmental volunteer.\nManagement(x) ::: x contributes toward environmental management.\nConservation(x) ::: x contributes toward environmental conservation.\nNaturalDisasterResponse(x) ::: x is an example of volunteers working in groups on an as-needed basis.\nPremises:\n∀x (Volunteer(x) → IntangibleBenefit(x)) ::: All volunteers receive intangible benefits for their work.\n∀x (Volunteer(x) → (Regular(x) ∨ AsNeeded(x))) ::: Volunteers work regularly or on an as-needed basis.\n∀x (Volunteer(x) → (Trained(x) ∨ ¬Trained(x))) ::: Some volunteers are trained.\n∀x (Volunteer(x) → ("
    ]
  },
  {
    "id": "FOLIO_train_384",
    "context": "All volunteers receive intangible benefits for their work. Volunteers work regularly or on an as-needed basis. Some volunteers are trained. Volunteers work in groups or individually. Environmental volunteers contribute toward environmental management or conservation. Participating in natural disaster response is an example of volunteers working in groups on an as-needed basis.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? To be a volunteer, you must be trained.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nVolunteer(x) ::: x is a volunteer.\nIntangibleBenefit(x) ::: x is an intangible benefit.\nRegular(x) ::: x is regular.\nAsNeeded(x) ::: x is on an as-needed basis.\nTrained(x) ::: x is trained.\nGroup(x) ::: x is a group.\nIndividual(x) ::: x is an individual.\nEnvironmental(x) ::: x is environmental.\nManagement(x) ::: x is management.\nConservation(x) ::: x is conservation.\nNaturalDisasterResponse(x) ::: x is a natural disaster response.\nPremises:\n∀x (Volunteer(x) → IntangibleBenefit(x)) ::: All volunteers receive intangible benefits for their work.\n∀x (Volunteer(x) → (Regular(x) ∨ AsNeeded(x))) ::: Volunteers work regularly or on an as-needed basis.\n∀x (Volunteer(x) → (Trained(x) ∨ ¬Trained(x))) ::: Some volunteers are trained.\n∀x (Volunteer(x) → (Group(x) ∨ Individual(x))) ::: Volunteers work"
    ]
  },
  {
    "id": "FOLIO_train_385",
    "context": "All people who are very consistent and enjoy sticking to their regular routines do not like surprises. If people wear flannel shirts every day, then they are very consistent and enjoy sticking to their regular routines. If people do not like shopping for clothes and other materialistic goods, then they wear flannel shirts every day. All old people living in stable homes do not like surprises. If people have very high energy and are impulsive, then they like surprises. If Mike is not a person who wears flannel shirts every day and has very high energy and is impulsive, then Mike either is very consistent and enjoys sticking to his regular routines or does not like surprises.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mike is an old person living in a stable home.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nVeryConsistent(x) ::: x is very consistent.\nEnjoy(x, y) ::: x enjoys y.\nLike(x, y) ::: x likes y.\nWear(x, y) ::: x wears y.\nFlannelShirt(y) ::: y is a flannel shirt.\nEveryDay(x) ::: x wears y every day.\nOld(x) ::: x is an old person.\nStableHome(x) ::: x is a stable home.\nHighEnergy(x) ::: x has very high energy.\nImpulsive(x) ::: x is impulsive.\nPremises:\n∀x (VeryConsistent(x) → ¬Enjoy(x, surprise)) ::: All people who are very consistent and enjoy sticking to their regular routines do not like surprises.\n∀x (Wear(x, flannelShirt) → EveryDay(x, flannelShirt)) ::: If people wear flannel shirts every day, then they are very consistent and enjoy sticking to their regular routines.\n∀x (Like(x, shopping) → Wear(x, flannelShirt)) ::: If people do not like shopping for clothes and other materialistic goods, then they wear flannel shirts every day.\n∀x (Old(x) ∧"
    ]
  },
  {
    "id": "FOLIO_train_386",
    "context": "All people who are very consistent and enjoy sticking to their regular routines do not like surprises. If people wear flannel shirts every day, then they are very consistent and enjoy sticking to their regular routines. If people do not like shopping for clothes and other materialistic goods, then they wear flannel shirts every day. All old people living in stable homes do not like surprises. If people have very high energy and are impulsive, then they like surprises. If Mike is not a person who wears flannel shirts every day and has very high energy and is impulsive, then Mike either is very consistent and enjoys sticking to his regular routines or does not like surprises.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Mike wears flannel shirts every day or does not like shopping for clothes and other materialistic goods, then Mike is neither an old person living in a stable home nor does not like shopping for clothes and other materialistic goods.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nVeryConsistent(x) ::: x is very consistent and enjoys sticking to their regular routines.\nEnjoy(x, y) ::: x enjoys y.\nLike(x, y) ::: x likes y.\nWear(x, y) ::: x wears y.\nFlannelShirt(y) ::: y is a flannel shirt.\nEveryDay(x) ::: x wears y every day.\nOld(x) ::: x is an old person.\nStableHome(x) ::: x lives in a stable home.\nHighEnergy(x) ::: x has very high energy.\nImpulsive(x) ::: x is impulsive.\nPremises:\n∀x (VeryConsistent(x) → ¬Enjoy(x, surprise)) ::: All people who are very consistent and enjoy sticking to their regular routines do not like surprises.\n∀x (Wear(x, flannelShirt) → EveryDay(x)) ::: If people wear flannel shirts every day, then they are very consistent and enjoy sticking to their regular routines.\n∀x (Like(x, shopping) → Wear(x, flannelShirt)) ::: If people do not like shopping for clothes and other materialistic goods, then they wear flannel shirts every day.\n∀x (Old(x"
    ]
  },
  {
    "id": "FOLIO_train_387",
    "context": "All people who are very consistent and enjoy sticking to their regular routines do not like surprises. If people wear flannel shirts every day, then they are very consistent and enjoy sticking to their regular routines. If people do not like shopping for clothes and other materialistic goods, then they wear flannel shirts every day. All old people living in stable homes do not like surprises. If people have very high energy and are impulsive, then they like surprises. If Mike is not a person who wears flannel shirts every day and has very high energy and is impulsive, then Mike either is very consistent and enjoys sticking to his regular routines or does not like surprises.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Mike is not an old person living in a stable home and does not like shopping for clothes and other materialistic goods, then Mike does not like shopping for clothes and other materialistic goods.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nVeryConsistent(x) ::: x is very consistent and enjoys sticking to their regular routines.\nEnjoy(x, y) ::: x enjoys y.\nLike(x, y) ::: x likes y.\nWear(x, y) ::: x wears y.\nFlannelShirt(y) ::: y is a flannel shirt.\nOld(x) ::: x is an old person.\nStableHome(x) ::: x is a stable home.\nHighEnergy(x) ::: x has very high energy.\nImpulsive(x) ::: x is impulsive.\nPremises:\n∀x (VeryConsistent(x) → ¬Enjoy(x, surprise)) ::: All people who are very consistent and enjoy sticking to their regular routines do not like surprises.\n∀x (Wear(x, flannelShirt) → VeryConsistent(x)) ::: If people wear flannel shirts every day, then they are very consistent and enjoy sticking to their regular routines.\n∀x (Like(x, shoppingForClothes) → ¬Wear(x, flannelShirt)) ::: If people do not like shopping for clothes and other materialistic goods, then they wear flannel shirts every day.\n∀x (Old(x) → ¬Enjoy(x, surprise"
    ]
  },
  {
    "id": "FOLIO_train_388",
    "context": "Adam owns cars. Adam has a favorite car. Among the cars he owns, Adam's favorite car is European. Adam broke his favorite car.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Adam owns a Japanese car.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nOwn(x, y) ::: x owns y.\nFavorite(x, y) ::: x's favorite is y.\nEuropean(x) ::: x is European.\nJapanese(x) ::: x is Japanese.\nBreak(x, y) ::: x broke y.\nPremises:\n∃x ∃y (Own(adam, y) ∧ Favorite(adam, x) ∧ European(x)) ::: Adam owns cars. Adam has a favorite car. Among the cars he owns, Adam's favorite car is European.\nFavorite(adam, favorite) ∧ Break(adam, favorite) ::: Adam broke his favorite car.\nConclusion:\n∃x ∃y (Own(adam, y) ∧ Japanese(x)) ::: Adam owns a Japanese car.\n------\nProblem:\nA person who is a student is a student. A person who is a student is a person. A person who is a student is a person who is a student. A person who is a student is a person who is a student. A person who is a student is a person who is a student. A person who is a student is a person who is a student. A person who is a student is a person who is a student. A person who is a student is a person who is a"
    ]
  },
  {
    "id": "FOLIO_train_389",
    "context": "Adam owns cars. Adam has a favorite car. Among the cars he owns, Adam's favorite car is European. Adam broke his favorite car.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Adam broke a European car.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nOwn(x, y) ::: x owns y.\nFavorite(x, y) ::: x's favorite is y.\nEuropean(x) ::: x is European.\nBreak(x, y) ::: x broke y.\nPremises:\n∃x ∃y (Own(adam, y) ∧ Favorite(adam, y) ∧ European(y)) ::: Adam owns cars. Adam has a favorite car. Among the cars he owns, Adam's favorite car is European.\nBreak(adam, favorite) ::: Adam broke his favorite car.\nConclusion:\nBreak(adam, european) ::: Adam broke a European car.\n------\nProblem:\nA person who is a student is a student. A person who is a student is a person. A person who is a student is a person who is a student. A person who is a student is a person who is a student. A person who is a student is a person who is a student. A person who is a student is a person who is a student. A person who is a student is a person who is a student. A person who is a student is a person who is a student. A person who is a student is a person who is a student. A person who is a student is a person who is a student. A person who is a student is a person who is a"
    ]
  },
  {
    "id": "FOLIO_train_390",
    "context": "No buildings in New Haven are higher than 400 meters. All buildings managed by Yale Housing are in New Haven. All buildings in Manhattan are higher than 400 meters. All buildings owned by Bloomberg are in Manhattan. All buildings with the Bloomberg logo are buildings owned by Bloomberg. Tower A is neither in New Haven nor in Manhattan. Tower B is a building with the Bloomberg logo and in Manhattan.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tower A is higher than 400 meters.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBuilding(x) ::: x is a building.\nHigherThan(x, y) ::: x is higher than y.\nIn(x, y) ::: x is in y.\nManagedBy(x, y) ::: x is managed by y.\nOwnedBy(x, y) ::: x is owned by y.\nLogo(x, y) ::: x has the logo of y.\nPremises:\n∀x (Building(x) → ¬(HigherThan(x, 400))) ::: No buildings in New Haven are higher than 400 meters.\n∀x (ManagedBy(x, yaleHousing) → In(x, NewHaven)) ::: All buildings managed by Yale Housing are in New Haven.\n∀x (In(x, Manhattan) → HigherThan(x, 400)) ::: All buildings in Manhattan are higher than 400 meters.\n∀x (OwnedBy(x, bloomberg) → In(x, Manhattan)) ::: All buildings owned by Bloomberg are in Manhattan.\n∀x (Logo(x, bloomberg) → OwnedBy(x, bloomberg)) ::: All buildings with the Bloomberg logo are buildings owned by Bloomberg.\nTowerA ∧ ¬(In(TowerA, NewHaven) ∨ In(TowerA, Manhattan)) ::: Tower A is neither in New Haven nor in Manhattan.\nTowerB ∧ Logo(TowerB, bloomberg) ∧ In(TowerB, Manhattan) ::: Tower B is a building with the Bloomberg logo and in Manhattan.\nConclusion:\nHigherThan(TowerA, 400) ::: Tower A is higher than 400 meters.\n------"
    ]
  },
  {
    "id": "FOLIO_train_391",
    "context": "No buildings in New Haven are higher than 400 meters. All buildings managed by Yale Housing are in New Haven. All buildings in Manhattan are higher than 400 meters. All buildings owned by Bloomberg are in Manhattan. All buildings with the Bloomberg logo are buildings owned by Bloomberg. Tower A is neither in New Haven nor in Manhattan. Tower B is a building with the Bloomberg logo and in Manhattan.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tower A is not higher than 400 meters.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBuilding(x) ::: x is a building.\nHigherThan(x, y) ::: x is higher than y.\nIn(x, y) ::: x is in y.\nManagedBy(x, y) ::: x is managed by y.\nOwnedBy(x, y) ::: x is owned by y.\nLogo(x, y) ::: x has the logo of y.\nPremises:\n∀x (Building(x) → ¬(HigherThan(x, 400))) ::: No buildings in New Haven are higher than 400 meters.\n∀x (ManagedBy(x, yaleHousing) → In(x, NewHaven)) ::: All buildings managed by Yale Housing are in New Haven.\n∀x (In(x, Manhattan) → HigherThan(x, 400)) ::: All buildings in Manhattan are higher than 400 meters.\n∀x (OwnedBy(x, bloomberg) → In(x, Manhattan)) ::: All buildings owned by Bloomberg are in Manhattan.\n∀x (Logo(x, bloomberg) → OwnedBy(x, bloomberg)) ::: All buildings with the Bloomberg logo are buildings owned by Bloomberg.\nTowerA ∧ ¬(In(TowerA, NewHaven) ∨ In(TowerA, Manhattan)) ::: Tower A is neither in New Haven nor in Manhattan.\nTowerB ∧ Logo(TowerB, bloomberg) ∧ In(TowerB, Manhattan) ::: Tower B is a building with the Bloomberg logo and in Manhattan.\nConclusion:\n¬(HigherThan(TowerA, 400)) ::: Tower A is not higher than 400 meters"
    ]
  },
  {
    "id": "FOLIO_train_392",
    "context": "No buildings in New Haven are higher than 400 meters. All buildings managed by Yale Housing are in New Haven. All buildings in Manhattan are higher than 400 meters. All buildings owned by Bloomberg are in Manhattan. All buildings with the Bloomberg logo are buildings owned by Bloomberg. Tower A is neither in New Haven nor in Manhattan. Tower B is a building with the Bloomberg logo and in Manhattan.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tower A is a building with the Bloomberg logo or managed by Yale Housing.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBuilding(x) ::: x is a building.\nHigherThan(x, y) ::: x is higher than y.\nIn(x, y) ::: x is in y.\nManagedBy(x, y) ::: x is managed by y.\nOwnedBy(x, y) ::: x is owned by y.\nLogo(x, y) ::: x has the logo of y.\nPremises:\n∀x (Building(x) → ¬(HigherThan(x, 400))) ::: No buildings in New Haven are higher than 400 meters.\n∀x (Building(x) ∧ In(x, newHaven) → ManagedBy(x, yaleHousing)) ::: All buildings managed by Yale Housing are in New Haven.\n∀x (Building(x) ∧ In(x, manhattan) → HigherThan(x, 400)) ::: All buildings in Manhattan are higher than 400 meters.\n∀x (Building(x) ∧ In(x, manhattan) → OwnedBy(x, bloomberg)) ::: All buildings owned by Bloomberg are in Manhattan.\n∀x (Building(x) ∧ Logo(x, bloomberg) → OwnedBy(x, bloomberg)) ::: All buildings with the Bloomberg logo are buildings owned by Bloomberg.\nTowerA ∧ ¬(In(towerA, newHaven) ∨ In(towerA, manhattan)) ::: Tower A is neither in New Haven nor in Manhattan.\nTowerB ∧ Logo(towerB, bloomberg) ∧ In(towerB, manhattan) ::: Tower B is a building with the"
    ]
  },
  {
    "id": "FOLIO_train_393",
    "context": "No buildings in New Haven are higher than 400 meters. All buildings managed by Yale Housing are in New Haven. All buildings in Manhattan are higher than 400 meters. All buildings owned by Bloomberg are in Manhattan. All buildings with the Bloomberg logo are buildings owned by Bloomberg. Tower A is neither in New Haven nor in Manhattan. Tower B is a building with the Bloomberg logo and in Manhattan.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tower A is neither a building with the Bloomberg logo nor managed by Yale Housing.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBuilding(x) ::: x is a building.\nHigherThan(x, y) ::: x is higher than y.\nIn(x, y) ::: x is in y.\nManagedBy(x, y) ::: x is managed by y.\nOwnedBy(x, y) ::: x is owned by y.\nLogo(x, y) ::: x has the logo of y.\nPremises:\n∀x (Building(x) → ¬(HigherThan(x, 400))) ::: No buildings in New Haven are higher than 400 meters.\n∀x (Building(x) ∧ In(x, newHaven) → ManagedBy(x, yaleHousing)) ::: All buildings managed by Yale Housing are in New Haven.\n∀x (Building(x) ∧ In(x, manhattan) → HigherThan(x, 400)) ::: All buildings in Manhattan are higher than 400 meters.\n∀x (Building(x) ∧ In(x, manhattan) → OwnedBy(x, bloomberg)) ::: All buildings owned by Bloomberg are in Manhattan.\n∀x (Building(x) ∧ Logo(x, bloomberg) → OwnedBy(x, bloomberg)) ::: All buildings with the Bloomberg logo are buildings owned by Bloomberg.\nTowerA ∧ ¬(In(TowerA, newHaven) ∨ In(TowerA, manhattan)) ::: Tower A is neither in New Haven nor in Manhattan.\nTowerB ∧ Logo(TowerB, bloomberg) ∧ In(TowerB, manhattan) ::: Tower B is a building with the"
    ]
  },
  {
    "id": "FOLIO_train_394",
    "context": "No fish are birds. Everything that is an osprey is a bird. If something is a carp, then it is a fish. All goldfish are carp. If Bubbles is either an osprey or a goldfish, then Bubbles is not a fish.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Bubbles is an Osprey.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFish(x) ::: x is a fish.\nBird(x) ::: x is a bird.\nOsprey(x) ::: x is an osprey.\nCarp(x) ::: x is a carp.\nGoldfish(x) ::: x is a goldfish.\nPremises:\n¬(Fish(x) ∧ Bird(x)) ::: No fish are birds.\n∀x (Osprey(x) → Bird(x)) ::: Everything that is an osprey is a bird.\n∀x (Carp(x) → Fish(x)) ::: If something is a carp, then it is a fish.\n∀x (Goldfish(x) → Carp(x)) ::: All goldfish are carp.\n∃x (Bubbles(x) ∧ (Osprey(x) ∨ Goldfish(x))) ::: If Bubbles is either an osprey or a goldfish, then Bubbles is not a fish.\nConclusion:\nBird(bubbles) ::: Bubbles is an Osprey.\n------\nProblem:\nAll people who are not students are either teachers or professors. All teachers are either professors or lecturers. All professors are either lecturers or researchers. All researchers are either professors or lecturers. All lecturers are either professors or researchers. All people who are not students are either teachers or professors.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? All people who are not students are either teachers or professors.\n###\nPredicates:\nStudent(x) ::: x is a student.\nTeacher(x) ::: x is a teacher.\nProfessor(x) ::: x is a professor.\nLecturer("
    ]
  },
  {
    "id": "FOLIO_train_395",
    "context": "No fish are birds. Everything that is an osprey is a bird. If something is a carp, then it is a fish. All goldfish are carp. If Bubbles is either an osprey or a goldfish, then Bubbles is not a fish.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Bubbles is a carp.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFish(x) ::: x is a fish.\nBird(x) ::: x is a bird.\nOsprey(x) ::: x is an osprey.\nCarp(x) ::: x is a carp.\nGoldfish(x) ::: x is a goldfish.\nPremises:\n¬(Fish(x) ∧ Bird(x)) ::: No fish are birds.\n∀x (Osprey(x) → Bird(x)) ::: Everything that is an osprey is a bird.\n∀x (Carp(x) → Fish(x)) ::: If something is a carp, then it is a fish.\n∀x (Goldfish(x) → Carp(x)) ::: All goldfish are carp.\nBubbles(x) ∧ (Osprey(x) ∨ Goldfish(x)) ⊕ ¬(Fish(x)) ::: If Bubbles is either an osprey or a goldfish, then Bubbles is not a fish.\nConclusion:\nCarp(bubbles) ::: Bubbles is a carp.\n------\nProblem:\nAll people who are not students are either teachers or professors. All teachers are either professors or lecturers. All professors are either lecturers or researchers. All researchers are either professors or lecturers. All lecturers are either professors or researchers. All people who are not students are either teachers or professors.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? All people who are not students are either teachers or professors.\n###\nPredicates:\nStudent(x) ::: x is a student.\nTeacher(x) ::: x is a teacher.\nProfessor(x) ::: x is a professor"
    ]
  },
  {
    "id": "FOLIO_train_396",
    "context": "No fish are birds. Everything that is an osprey is a bird. If something is a carp, then it is a fish. All goldfish are carp. If Bubbles is either an osprey or a goldfish, then Bubbles is not a fish.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Bubbles is not a carp.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFish(x) ::: x is a fish.\nBird(x) ::: x is a bird.\nOsprey(x) ::: x is an osprey.\nCarp(x) ::: x is a carp.\nGoldfish(x) ::: x is a goldfish.\nPremises:\n¬(Fish(x) ∧ Bird(x)) ::: No fish are birds.\n∀x (Osprey(x) → Bird(x)) ::: Everything that is an osprey is a bird.\n∀x (Carp(x) → Fish(x)) ::: If something is a carp, then it is a fish.\n∀x (Goldfish(x) → Carp(x)) ::: All goldfish are carp.\nBubbles(x) ∧ (Osprey(x) ∨ Goldfish(x)) → ¬Fish(x) ::: If Bubbles is either an osprey or a goldfish, then Bubbles is not a fish.\nConclusion:\n¬Carp(bubbles) ::: Bubbles is not a carp.\n------\nProblem:\nAll people who are not students are either teachers or professors. All teachers are either professors or lecturers. All professors are either lecturers or researchers. All researchers are either professors or lecturers. All lecturers are either professors or researchers.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? All people who are not students are either professors or lecturers.\n###\nPredicates:\nStudent(x) ::: x is a student.\nTeacher(x) ::: x is a teacher.\nProfessor(x) ::: x is a professor.\nLecturer(x) ::: x is a lect"
    ]
  },
  {
    "id": "FOLIO_train_397",
    "context": "Mr. and Mrs. Smith make a travel plan, they want to go to a city in California or Florida, and where neither of them has ever been. Cities in California that they are interested in are San Francisco, Los Angeles, and San Diego. Cities in Florida that they are interested in are Orlando and Miami. Mr. Smith has been to two cities in California. Mrs. Smith has been to one city in Florida.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mr. Smith has been to San Francisco.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCity(x) ::: x is a city.\nCalifornia(x) ::: x is a city in California.\nFlorida(x) ::: x is a city in Florida.\nInterested(x, y) ::: x is interested in city y.\nBeen(x, y) ::: x has been to city y.\nPremises:\n∃x ∃y (Interested(smith, x) ∧ Interested(smith, y) ∧ City(x) ∧ City(y) ∧ California(x) ∧ California(y) ∧ ¬Been(smith, x) ∧ ¬Been(smith, y)) ::: Mr. and Mrs. Smith make a travel plan, they want to go to a city in California or Florida, and where neither of them has ever been.\n∃x ∃y (Interested(smith, x) ∧ Interested(smith, y) ∧ City(x) ∧ City(y) ∧ California(x) ∧ California(y) ∧ Been(smith, x) ∧ ¬Been(smith, y)) ::: Mr. and Mrs. Smith make a travel plan, they want to go to a city in California or Florida, and where neither of them has ever been.\n∃x ∃y (Interested(smith, x) ∧ Interested(smith, y) ∧ City(x) ∧ City(y) ∧ California(x) ∧ California(y) ∧ ¬Been(smith, x) ∧ Been(smith, y)) ::: Mr. and Mrs. Smith make a travel plan, they want to go to a city in California or"
    ]
  },
  {
    "id": "FOLIO_train_398",
    "context": "Mr. and Mrs. Smith make a travel plan, they want to go to a city in California or Florida, and where neither of them has ever been. Cities in California that they are interested in are San Francisco, Los Angeles, and San Diego. Cities in Florida that they are interested in are Orlando and Miami. Mr. Smith has been to two cities in California. Mrs. Smith has been to one city in Florida.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? They have at leat one candidate city in Florida to visit.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCity(x) ::: x is a city.\nCalifornia(x) ::: x is a city in California.\nFlorida(x) ::: x is a city in Florida.\nInterested(x, y) ::: x is interested in city y.\nBeen(x, y) ::: x has been to city y.\nPremises:\n∃x ∃y (Interested(smith, x) ∧ Interested(smith, y) ∧ City(x) ∧ City(y) ∧ California(x) ∧ California(y) ∧ ¬Been(smith, x) ∧ ¬Been(smith, y)) ::: Mr. Smith has been to two cities in California.\n∃x ∃y (Interested(smith, x) ∧ Interested(smith, y) ∧ City(x) ∧ City(y) ∧ Florida(x) ∧ Florida(y) ∧ ¬Been(smith, x) ∧ ¬Been(smith, y)) ::: Mr. Smith has been to two cities in California.\n∃x ∃y (Interested(smith, x) ∧ Interested(smith, y) ∧ City(x) ∧ City(y) ∧ Florida(x) ∧ Florida(y) ∧ ¬Been(smith, x) ∧ ¬Been(smith, y)) ::: Mr. Smith has been to two cities in California.\n∃x ∃y (Interested(smith, x) ∧ Interested(smith, y) ∧ City(x) ∧ City(y) ∧ California"
    ]
  },
  {
    "id": "FOLIO_train_399",
    "context": "Mr. and Mrs. Smith make a travel plan, they want to go to a city in California or Florida, and where neither of them has ever been. Cities in California that they are interested in are San Francisco, Los Angeles, and San Diego. Cities in Florida that they are interested in are Orlando and Miami. Mr. Smith has been to two cities in California. Mrs. Smith has been to one city in Florida.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? They have at least two candidate cities in California to visit.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCity(x) ::: x is a city.\nCalifornia(x) ::: x is a city in California.\nFlorida(x) ::: x is a city in Florida.\nInterested(x, y) ::: x is interested in city y.\nBeen(x, y) ::: x has been to city y.\nPremises:\n∃x ∃y (Interested(smith, x) ∧ Interested(smith, y) ∧ City(x) ∧ City(y) ∧ California(x) ∧ California(y) ∧ ¬Been(smith, x) ∧ ¬Been(smith, y)) ::: Mr. Smith has been to two cities in California.\n∃x ∃y (Interested(smith, x) ∧ Interested(smith, y) ∧ City(x) ∧ City(y) ∧ Florida(x) ∧ Florida(y) ∧ ¬Been(smith, x) ∧ ¬Been(smith, y)) ::: Mr. Smith has been to two cities in Florida.\n∃x ∃y (Interested(smith, x) ∧ Interested(smith, y) ∧ City(x) ∧ City(y) ∧ California(x) ∧ California(y) ∧ Been(smith, x) ∧ ¬Been(smith, y)) ::: Mr. Smith has been to one city in California.\n∃x ∃y (Interested(smith, x) ∧ Interested(smith, y) ∧ City(x) ∧ City(y) ∧ Florida("
    ]
  },
  {
    "id": "FOLIO_train_400",
    "context": "Everything is either big or small. All big things are heavy. All small things are light. All heavy things are still. All light things are unstable. All unstable things are changing. All unstable things are kinetic. A bird is not both heavy and still.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A bird is still.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig(x) ::: x is big.\nSmall(x) ::: x is small.\nHeavy(x) ::: x is heavy.\nLight(x) ::: x is light.\nStill(x) ::: x is still.\nUnstable(x) ::: x is unstable.\nChanging(x) ::: x is changing.\nKinetic(x) ::: x is kinetic.\nBird(x) ::: x is a bird.\nPremises:\n∀x (Big(x) ∨ Small(x)) ::: Everything is either big or small.\n∀x (Big(x) → Heavy(x)) ::: All big things are heavy.\n∀x (Small(x) → Light(x)) ::: All small things are light.\n∀x (Heavy(x) → Still(x)) ::: All heavy things are still.\n∀x (Light(x) → Unstable(x)) ::: All light things are unstable.\n∀x (Unstable(x) → Changing(x)) ::: All unstable things are changing.\n∀x (Unstable(x) → Kinetic(x)) ::: All unstable things are kinetic.\n¬(Heavy(bird) ∧ Still(bird)) ::: A bird is not both heavy and still.\nConclusion:\nStill(bird) ::: A bird is still.\n------"
    ]
  },
  {
    "id": "FOLIO_train_401",
    "context": "Everything is either big or small. All big things are heavy. All small things are light. All heavy things are still. All light things are unstable. All unstable things are changing. All unstable things are kinetic. A bird is not both heavy and still.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A bird is not still.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig(x) ::: x is big.\nSmall(x) ::: x is small.\nHeavy(x) ::: x is heavy.\nLight(x) ::: x is light.\nStill(x) ::: x is still.\nUnstable(x) ::: x is unstable.\nChanging(x) ::: x is changing.\nKinetic(x) ::: x is kinetic.\nBird(x) ::: x is a bird.\nPremises:\n∀x (Big(x) ∨ Small(x)) ::: Everything is either big or small.\n∀x (Big(x) → Heavy(x)) ::: All big things are heavy.\n∀x (Small(x) → Light(x)) ::: All small things are light.\n∀x (Heavy(x) → Still(x)) ::: All heavy things are still.\n∀x (Light(x) → Unstable(x)) ::: All light things are unstable.\n∀x (Unstable(x) → Changing(x)) ::: All unstable things are changing.\n∀x (Unstable(x) → Kinetic(x)) ::: All unstable things are kinetic.\n∀x (Bird(x) → ¬(Heavy(x) ∧ Still(x))) ::: A bird is not both heavy and still.\nConclusion:\n¬St"
    ]
  },
  {
    "id": "FOLIO_train_402",
    "context": "Everything is either big or small. All big things are heavy. All small things are light. All heavy things are still. All light things are unstable. All unstable things are changing. All unstable things are kinetic. A bird is not both heavy and still.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A bird is kinetic and changing.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig(x) ::: x is big.\nSmall(x) ::: x is small.\nHeavy(x) ::: x is heavy.\nLight(x) ::: x is light.\nStill(x) ::: x is still.\nUnstable(x) ::: x is unstable.\nChanging(x) ::: x is changing.\nKinetic(x) ::: x is kinetic.\nPremises:\n∀x (Big(x) ∨ Small(x)) ::: Everything is either big or small.\n∀x (Big(x) → Heavy(x)) ::: All big things are heavy.\n∀x (Small(x) → Light(x)) ::: All small things are light.\n∀x (Heavy(x) → Still(x)) ::: All heavy things are still.\n∀x (Light(x) → Unstable(x)) ::: All light things are unstable.\n∀x (Unstable(x) → Changing(x)) ::: All unstable things are changing.\n∀x (Unstable(x) → Kinetic(x)) ::: All unstable things are kinetic.\n∀x (Heavy(x) ∧ Still(x)) → ¬Bird(x) ::: A bird is not both heavy and still.\nConclusion:\nKinetic(bird) ∧ Changing(bird) ::"
    ]
  },
  {
    "id": "FOLIO_train_403",
    "context": "Everything is either big or small. All big things are heavy. All small things are light. All heavy things are still. All light things are unstable. All unstable things are changing. All unstable things are kinetic. A bird is not both heavy and still.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A bird is kinetic or changing.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig(x) ::: x is big.\nSmall(x) ::: x is small.\nHeavy(x) ::: x is heavy.\nLight(x) ::: x is light.\nStill(x) ::: x is still.\nUnstable(x) ::: x is unstable.\nChanging(x) ::: x is changing.\nKinetic(x) ::: x is kinetic.\nPremises:\n∀x (Big(x) ∨ Small(x)) ::: Everything is either big or small.\n∀x (Big(x) → Heavy(x)) ::: All big things are heavy.\n∀x (Small(x) → Light(x)) ::: All small things are light.\n∀x (Heavy(x) → Still(x)) ::: All heavy things are still.\n∀x (Light(x) → Unstable(x)) ::: All light things are unstable.\n∀x (Unstable(x) → Changing(x)) ::: All unstable things are changing.\n∀x (Unstable(x) → Kinetic(x)) ::: All unstable things are kinetic.\n∀x (Heavy(x) ∧ Still(x)) → ¬Bird(x) ::: A bird is not both heavy and still.\nConclusion:\nKinetic(bird) ∨ Changing(bird) ::"
    ]
  },
  {
    "id": "FOLIO_train_404",
    "context": "Everything is either big or small. All big things are heavy. All small things are light. All heavy things are still. All light things are unstable. All unstable things are changing. All unstable things are kinetic. A bird is not both heavy and still.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A bird is either kinetic or changing.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig(x) ::: x is big.\nSmall(x) ::: x is small.\nHeavy(x) ::: x is heavy.\nLight(x) ::: x is light.\nStill(x) ::: x is still.\nUnstable(x) ::: x is unstable.\nChanging(x) ::: x is changing.\nKinetic(x) ::: x is kinetic.\nPremises:\n∀x (Big(x) ∨ Small(x)) ::: Everything is either big or small.\n∀x (Big(x) → Heavy(x)) ::: All big things are heavy.\n∀x (Small(x) → Light(x)) ::: All small things are light.\n∀x (Heavy(x) → Still(x)) ::: All heavy things are still.\n∀x (Light(x) → Unstable(x)) ::: All light things are unstable.\n∀x (Unstable(x) → Changing(x)) ::: All unstable things are changing.\n∀x (Unstable(x) → Kinetic(x)) ::: All unstable things are kinetic.\n∀x (Heavy(x) ∧ Still(x)) → ¬Bird(x) ::: A bird is not both heavy and still.\nConclusion:\n∀x (Kinetic(x) ∨ Ch"
    ]
  },
  {
    "id": "FOLIO_train_405",
    "context": "Everything is either big or small. All big things are heavy. All small things are light. All heavy things are still. All light things are unstable. All unstable things are changing. All unstable things are kinetic. A bird is not both heavy and still.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If a bird is small or still, then the bird is either kinetic or changing.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig(x) ::: x is big.\nSmall(x) ::: x is small.\nHeavy(x) ::: x is heavy.\nLight(x) ::: x is light.\nStill(x) ::: x is still.\nUnstable(x) ::: x is unstable.\nKinetic(x) ::: x is kinetic.\nChanging(x) ::: x is changing.\nPremises:\n∀x (Big(x) ∨ Small(x)) ::: Everything is either big or small.\n∀x (Big(x) → Heavy(x)) ::: All big things are heavy.\n∀x (Small(x) → Light(x)) ::: All small things are light.\n∀x (Heavy(x) → Still(x)) ::: All heavy things are still.\n∀x (Light(x) → Unstable(x)) ::: All light things are unstable.\n∀x (Unstable(x) → Changing(x)) ::: All unstable things are changing.\n∀x (Unstable(x) → Kinetic(x)) ::: All unstable things are kinetic.\n∀x (Heavy(x) ∧ Still(x)) → ¬Bird(x) ::: A bird is not both heavy and still.\nConclusion:\n(Small(x) ∨ Still(x)) → (K"
    ]
  },
  {
    "id": "FOLIO_train_406",
    "context": "DI Ray is a police procedural television series. DI Ray was created and written by Maya Sondhi. DI Ray was produced by Jed Mercurio. Maya Sondhi and Jed Mercurio are both British.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? DI Ray was created by a Brit.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBrit(x) ::: x is a British person.\nCreated(x, y) ::: x created y.\nWritten(x, y) ::: x wrote y.\nProduced(x, y) ::: x produced y.\nPremises:\nCreated(mayasondhi, diRay) ∧ Written(mayasondhi, diRay) ∧ Produced(jedmercurio, diRay) ::: DI Ray is a police procedural television series.\nBrit(mayasondhi) ∧ Brit(jedmercurio) ::: Maya Sondhi and Jed Mercurio are both British.\nConclusion:\nBrit(mayasondhi) ::: DI Ray was created by a Brit.\n------\nProblem:\nThe 2019 film The Irishman was directed by Martin Scorsese. The 2019 film The Irishman was produced by Martin Scorsese. The 2019 film The Irishman was written by Steven Zaillian. The 2019 film The Irishman was produced by Robert De Niro. The 2019 film The Irishman was produced by Jane Rosenthal. The 2019 film The Irishman was produced by Emma Tillinger Koskoff. The 2019 film The Irishman was produced by Irwin Winkler. The 2019 film The Irishman was produced by Gaston Pavlovich. The 2019 film The Irishman"
    ]
  },
  {
    "id": "FOLIO_train_407",
    "context": "DI Ray is a police procedural television series. DI Ray was created and written by Maya Sondhi. DI Ray was produced by Jed Mercurio. Maya Sondhi and Jed Mercurio are both British.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Some Brit produced a television series.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBrit(x) ::: x is a British person.\nProduce(x, y) ::: x produced y.\nTelevisionSeries(x) ::: x is a television series.\nCreated(x, y) ::: x created y.\nWritten(x, y) ::: x wrote y.\nPremises:\nTelevisionSeries(diRay) ∧ Produce(jed, diRay) ∧ Created(maya, diRay) ∧ Written(maya, diRay) ::: DI Ray is a police procedural television series.\nBrit(maya) ∧ Brit(jed) ::: Maya Sondhi and Jed Mercurio are both British.\nConclusion:\n∃x (Brit(x) ∧ Produce(x, diRay)) ::: Some Brit produced a television series.\n------\nProblem:\nThe 2019 film The Irishman is a crime film directed by Martin Scorsese. The 2019 film The Irishman is a crime film directed by Martin Scorsese. The 2019 film The Irishman is a crime film directed by Martin Scorsese. The 2019 film The Irishman is a crime film directed by Martin Scorsese. The 2019 film The Irishman is a crime film directed by Martin Scorsese. The 2019 film The Irishman is a crime film directed by Martin Scorsese. The 2019"
    ]
  },
  {
    "id": "FOLIO_train_408",
    "context": "All men are human. All gentlemen are men. All lawyers are gentlemen. All women are human. No sheep are human. If Mike is not both a human and a sheep, then Mike is either a man or a human.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mike is a woman.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nHuman(x) ::: x is a human.\nMan(x) ::: x is a man.\nGentleman(x) ::: x is a gentleman.\nLawyer(x) ::: x is a lawyer.\nSheep(x) ::: x is a sheep.\nPremises:\n∀x (Man(x) → Human(x)) ::: All men are human.\n∀x (Gentleman(x) → Man(x)) ::: All gentlemen are men.\n∀x (Lawyer(x) → Gentleman(x)) ::: All lawyers are gentlemen.\n∀x (Woman(x) → Human(x)) ::: All women are human.\n∀x (Sheep(x) → ¬Human(x)) ::: No sheep are human.\n∀x (¬(Human(x) ∧ Sheep(x)) → (Man(x) ∨ Human(x))) ::: If Mike is not both a human and a sheep, then Mike is either a man or a human.\nConclusion:\nWoman(mike) ::: Mike is a woman.\n------\nProblem:\nAll people who are not students are either teachers or professors. All teachers are people. All professors are people. All students are people.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? All people are either teachers or professors"
    ]
  },
  {
    "id": "FOLIO_train_409",
    "context": "All men are human. All gentlemen are men. All lawyers are gentlemen. All women are human. No sheep are human. If Mike is not both a human and a sheep, then Mike is either a man or a human.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Mike is a gentleman or a lawyer, then Mike is neither a woman nor a lawyer.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nHuman(x) ::: x is a human.\nMan(x) ::: x is a man.\nGentleman(x) ::: x is a gentleman.\nLawyer(x) ::: x is a lawyer.\nSheep(x) ::: x is a sheep.\nPremises:\n∀x (Man(x) → Human(x)) ::: All men are human.\n∀x (Gentleman(x) → Man(x)) ::: All gentlemen are men.\n∀x (Lawyer(x) → Gentleman(x)) ::: All lawyers are gentlemen.\n∀x (Woman(x) → Human(x)) ::: All women are human.\n∀x (Sheep(x) → ¬Human(x)) ::: No sheep are human.\n∀x (¬(Human(x) ∧ Sheep(x)) → (Man(x) ∨ Human(x))) ::: If Mike is not both a human and a sheep, then Mike is either a man or a human.\nConclusion:\n¬(Gentleman(mike) ∨ Lawyer(mike)) → (Woman(mike) ∧ Lawyer(mike)) ::: If Mike is a gentleman or a lawyer, then Mike is neither a woman nor a lawyer.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine"
    ]
  },
  {
    "id": "FOLIO_train_410",
    "context": "All men are human. All gentlemen are men. All lawyers are gentlemen. All women are human. No sheep are human. If Mike is not both a human and a sheep, then Mike is either a man or a human.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Mike is not both a woman and a lawyer, then Mike is a lawyer.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nHuman(x) ::: x is a human.\nMan(x) ::: x is a man.\nGentleman(x) ::: x is a gentleman.\nLawyer(x) ::: x is a lawyer.\nSheep(x) ::: x is a sheep.\nPremises:\n∀x (Man(x) → Human(x)) ::: All men are human.\n∀x (Gentleman(x) → Man(x)) ::: All gentlemen are men.\n∀x (Lawyer(x) → Gentleman(x)) ::: All lawyers are gentlemen.\n∀x (Woman(x) → Human(x)) ::: All women are human.\n∀x (Sheep(x) → ¬Human(x)) ::: No sheep are human.\n∀x (¬(Human(x) ∧ Sheep(x)) → (Man(x) ∨ Human(x))) ::: If Mike is not both a human and a sheep, then Mike is either a man or a human.\nConclusion:\n¬(Woman(mike) ∧ Lawyer(mike)) → Lawyer(mike) ::: If Mike is not both a woman and a lawyer, then Mike is a lawyer.\n------"
    ]
  },
  {
    "id": "FOLIO_train_411",
    "context": "Some defenders are centerback. All defenders are soccer players. No soccer players are professional basketball players. All NBA players are professional basketball players. Stephen Curry is an NBA player.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Stephen Curry is a centerback.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDefender(x) ::: x is a defender.\nCenterback(x) ::: x is a centerback.\nSoccerPlayer(x) ::: x is a soccer player.\nProfessionalBasketballPlayer(x) ::: x is a professional basketball player.\nNBAPlayer(x) ::: x is an NBA player.\nPremises:\n∀x (Defender(x) → SoccerPlayer(x)) ::: All defenders are soccer players.\n∀x (SoccerPlayer(x) → ¬ProfessionalBasketballPlayer(x)) ::: No soccer players are professional basketball players.\n∀x (ProfessionalBasketballPlayer(x) → NBAPlayer(x)) ::: All NBA players are professional basketball players.\nNBAPlayer(stephen) ::: Stephen Curry is an NBA player.\nConclusion:\nCenterback(stephen) ::: Stephen Curry is a centerback.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that c"
    ]
  },
  {
    "id": "FOLIO_train_412",
    "context": "Some defenders are centerback. All defenders are soccer players. No soccer players are professional basketball players. All NBA players are professional basketball players. Stephen Curry is an NBA player.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Stephen Curry is not a centerback and a defender.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDefender(x) ::: x is a defender.\nCenterback(x) ::: x is a centerback.\nSoccerPlayer(x) ::: x is a soccer player.\nProfessionalBasketballPlayer(x) ::: x is a professional basketball player.\nNBAPlayer(x) ::: x is an NBA player.\nPremises:\n∀x (Defender(x) → SoccerPlayer(x)) ::: All defenders are soccer players.\n∀x (SoccerPlayer(x) → ¬ProfessionalBasketballPlayer(x)) ::: No soccer players are professional basketball players.\n∀x (ProfessionalBasketballPlayer(x) → NBAPlayer(x)) ::: All NBA players are professional basketball players.\nNBAPlayer(stephen) ::: Stephen Curry is an NBA player.\nConclusion:\n¬(Defender(stephen) ∧ Centerback(stephen)) ::: Stephen Curry is not a centerback and a defender.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware"
    ]
  },
  {
    "id": "FOLIO_train_413",
    "context": "Some defenders are centerback. All defenders are soccer players. No soccer players are professional basketball players. All NBA players are professional basketball players. Stephen Curry is an NBA player.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Stephen Curry is not a centerback and a defender, then Stephen Curry is neither a soccer player nor a professional basketball player.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDefender(x) ::: x is a defender.\nCenterback(x) ::: x is a centerback.\nSoccerPlayer(x) ::: x is a soccer player.\nProfessionalBasketballPlayer(x) ::: x is a professional basketball player.\nNBAPlayer(x) ::: x is an NBA player.\nPremises:\n∀x (Defender(x) → SoccerPlayer(x)) ::: All defenders are soccer players.\n∀x (Defender(x) → Centerback(x)) ::: Some defenders are centerback.\n∀x (SoccerPlayer(x) → ¬ProfessionalBasketballPlayer(x)) ::: No soccer players are professional basketball players.\n∀x (ProfessionalBasketballPlayer(x) → NBAPlayer(x)) ::: All NBA players are professional basketball players.\nNBAPlayer(stephenCurry) ::: Stephen Curry is an NBA player.\nConclusion:\n¬(Defender(stephenCurry) ∧ ¬Centerback(stephenCurry)) → (SoccerPlayer(stephenCurry) ∧ ¬ProfessionalBasketballPlayer(stephenCurry)) ::: If Stephen Curry is not a centerback and a defender, then"
    ]
  },
  {
    "id": "FOLIO_train_414",
    "context": "If a person doesn't have enough money to buy a product, then that person can't buy it. Monitors are products. 4k monitors are more expensive than 1080 monitors and 2k monitors. John is a person. John doesn't have enough money to buy a 2k monitor.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? John can not buy the 1080 monitor.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPerson(x) ::: x is a person.\nProduct(x) ::: x is a product.\nMoney(x) ::: x is money.\nBuy(x, y) ::: x buys y.\nHave(x, y) ::: x has y.\nMoreExpensive(x, y) ::: x is more expensive than y.\nPremises:\n∀x (Person(x) ∧ ¬Have(x, money) → ¬Buy(x, product)) ::: If a person doesn't have enough money to buy a product, then that person can't buy it.\nProduct(monitor) ::: Monitors are products.\n∀x ∀y (MoreExpensive(x, y) ∧ Product(x) ∧ Product(y)) ::: 4k monitors are more expensive than 1080 monitors and 2k monitors.\nPerson(john) ::: John is a person.\n∀x (Person(x) ∧ ¬Have(x, money) → ¬Buy(x, 2kMonitor)) ::: John doesn't have enough money to buy a 2k monitor.\nConclusion:\n¬Buy(john, 1080Monitor) ::: John can not buy"
    ]
  },
  {
    "id": "FOLIO_train_415",
    "context": "If a person doesn't have enough money to buy a product, then that person can't buy it. Monitors are products. 4k monitors are more expensive than 1080 monitors and 2k monitors. John is a person. John doesn't have enough money to buy a 2k monitor.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? John can not buy the 2k monitor.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPerson(x) ::: x is a person.\nProduct(x) ::: x is a product.\nMoney(x) ::: x is money.\nBuy(x, y) ::: x buys y.\nHave(x, y) ::: x has y.\nMoreExpensive(x, y) ::: x is more expensive than y.\nPremises:\n∀x (Person(x) ∧ ¬Have(x, money) → ¬Buy(x, product)) ::: If a person doesn't have enough money to buy a product, then that person can't buy it.\nProduct(monitor) ::: Monitors are products.\n∀x ∀y (MoreExpensive(x, y) ∧ Product(x) ∧ Product(y)) ::: 4k monitors are more expensive than 1080 monitors and 2k monitors.\nPerson(john) ::: John is a person.\n∀x (Person(x) ∧ Product(x) ∧ MoreExpensive(x, 2k)) → ¬Have(x, money) ::: John doesn't have enough money to buy a 2k monitor.\nConclusion:\n¬Buy(john, 2k) ::: John"
    ]
  },
  {
    "id": "FOLIO_train_416",
    "context": "All artificial satellites are important scientific achievements. Some artificial satellites are not U.S. inventions.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? All important scientific achievements are U.S. inventions.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nArtificialSatellite(x) ::: x is an artificial satellite.\nImportantScientificAchievement(x) ::: x is an important scientific achievement.\nU.S.Invention(x) ::: x is a U.S. invention.\nPremises:\n∀x (ArtificialSatellite(x) → ImportantScientificAchievement(x)) ::: All artificial satellites are important scientific achievements.\n∃x (ArtificialSatellite(x) ∧ ¬U.S.Invention(x)) ::: Some artificial satellites are not U.S. inventions.\nConclusion:\n∀x (ImportantScientificAchievement(x) → U.S.Invention(x)) ::: All important scientific achievements are U.S. inventions.\n------\nProblem:\nAll people who are not students are either employed or unemployed. Some people who are not students are employed.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? All people who are not students are employed.\n###\nPredicates:\nStudent(x) ::: x is a student.\nEmployed(x) ::: x is employed.\nUnemployed(x) ::: x is unemployed.\nPremises:\n∀x"
    ]
  },
  {
    "id": "FOLIO_train_417",
    "context": "Some cats are not pets. All cats are mammals.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Some mammals are not pets.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCat(x) ::: x is a cat.\nPet(x) ::: x is a pet.\nMammal(x) ::: x is a mammal.\nPremises:\n∃x (Cat(x) ∧ ¬Pet(x)) ::: Some cats are not pets.\n∀x (Cat(x) → Mammal(x)) ::: All cats are mammals.\nConclusion:\n∃x (Mammal(x) ∧ ¬Pet(x)) ::: Some mammals are not pets.\n------\nProblem:\nSome cats are not pets. All cats are mammals.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Some pets are not cats.\n###\nPredicates:\nCat(x) ::: x is a cat.\nPet(x) ::: x is a pet.\nMammal(x) ::: x is a mammal.\nPremises:\n∃x (Cat(x) ∧ ¬Pet(x)) ::: Some cats are not pets.\n∀x (Cat(x) → Mammal(x)) ::: All cats are mammals.\nConclusion:\n∃x (Pet(x) ∧ ¬Cat(x)) ::"
    ]
  },
  {
    "id": "FOLIO_train_418",
    "context": "If people visit a coffee shop at least three times a week, then they are addicted to coffee or other caffeinated drinks. People either visit a coffee shop at least three times a week or order takeout at least once a day. If people make a lot of their own food at home using recipes and online guides, then they order takeout at least once a day. If people own at least one coffeemaker and one blender in their home, then they do not order takeout at least once a day. All people who lead very busy lives that include 12-hour work hours make a lot of their own food at home using recipes and online guides. Sam is either both addicted to coffee or other caffeinated drinks or leads very busy lives that include 12-hour work hours, or she is neither addicted to coffee and other caffeinated drinks nor leads very busy lives that include 12-hour work hours",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Sam is addicted to coffee and other caffeinated drinks.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAddicted(x) ::: x is addicted to coffee and other caffeinated drinks.\nVisit(x) ::: x visits a coffee shop at least three times a week.\nOrder(x) ::: x orders takeout at least once a day.\nMake(x) ::: x makes a lot of their own food at home using recipes and online guides.\nLead(x) ::: x leads very busy lives that include 12-hour work hours.\nOwn(x, y) ::: x owns y.\nPremises:\n∀x (Visit(x) → (Addicted(x) ∨ Order(x))) ::: If people visit a coffee shop at least three times a week, then they are addicted to coffee or other caffeinated drinks.\n∀x (Visit(x) ⊕ Order(x)) ::: People either visit a coffee shop at least three times a week or order takeout at least once a day.\n∀x (Make(x) → Order(x)) ::: If people make a lot of their own food at home using recipes and online guides, then they order takeout at least once a day.\n∀x (Own(x, coffeemaker) ∧ Own(x, blender)) → ¬Order(x) ::: If people own at least one coff"
    ]
  },
  {
    "id": "FOLIO_train_419",
    "context": "If people visit a coffee shop at least three times a week, then they are addicted to coffee or other caffeinated drinks. People either visit a coffee shop at least three times a week or order takeout at least once a day. If people make a lot of their own food at home using recipes and online guides, then they order takeout at least once a day. If people own at least one coffeemaker and one blender in their home, then they do not order takeout at least once a day. All people who lead very busy lives that include 12-hour work hours make a lot of their own food at home using recipes and online guides. Sam is either both addicted to coffee or other caffeinated drinks or leads very busy lives that include 12-hour work hours, or she is neither addicted to coffee and other caffeinated drinks nor leads very busy lives that include 12-hour work hours",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Sam owns at least one coffeemaker and one blender in her home.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAddicted(x) ::: x is addicted to coffee or other caffeinated drinks.\nVisit(x) ::: x visits a coffee shop at least three times a week.\nOrder(x) ::: x orders takeout at least once a day.\nMake(x) ::: x makes a lot of their own food at home using recipes and online guides.\nLead(x) ::: x leads very busy lives that include 12-hour work hours.\nOwn(x, y) ::: x owns y.\nPremises:\n∀x (Visit(x) → Addicted(x)) ::: If people visit a coffee shop at least three times a week, then they are addicted to coffee or other caffeinated drinks.\n∀x (Visit(x) ∨ Order(x)) ::: People either visit a coffee shop at least three times a week or order takeout at least once a day.\n∀x (Make(x) → Order(x)) ::: If people make a lot of their own food at home using recipes and online guides, then they order takeout at least once a day.\n∀x (Own(x, coffeemaker) ∧ Own(x, blender)) → ¬Order(x) ::: If people own at least one coffeemaker and one blender in their"
    ]
  },
  {
    "id": "FOLIO_train_420",
    "context": "If people visit a coffee shop at least three times a week, then they are addicted to coffee or other caffeinated drinks. People either visit a coffee shop at least three times a week or order takeout at least once a day. If people make a lot of their own food at home using recipes and online guides, then they order takeout at least once a day. If people own at least one coffeemaker and one blender in their home, then they do not order takeout at least once a day. All people who lead very busy lives that include 12-hour work hours make a lot of their own food at home using recipes and online guides. Sam is either both addicted to coffee or other caffeinated drinks or leads very busy lives that include 12-hour work hours, or she is neither addicted to coffee and other caffeinated drinks nor leads very busy lives that include 12-hour work hours",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Sam either owns at least one coffeemaker and one blender in her home or orders takeout at least once a day.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAddicted(x) ::: x is addicted to coffee or other caffeinated drinks.\nVisit(x) ::: x visits a coffee shop at least three times a week.\nOrder(x) ::: x orders takeout at least once a day.\nMake(x) ::: x makes a lot of their own food at home using recipes and online guides.\nLead(x) ::: x leads very busy lives that include 12-hour work hours.\nOwn(x, y) ::: x owns y.\nPremises:\n∀x (Visit(x) → (Addicted(x) ∨ Order(x))) ::: If people visit a coffee shop at least three times a week, then they are addicted to coffee or other caffeinated drinks.\n∀x (Visit(x) ⊕ Order(x)) ::: People either visit a coffee shop at least three times a week or order takeout at least once a day.\n∀x (Make(x) → Order(x)) ::: If people make a lot of their own food at home using recipes and online guides, then they order takeout at least once a day.\n∀x (Own(x, coffeemaker) ∧ Own(x, blender)) → ¬Order(x) ::: If people own at least one coffeemaker and one blender in their home, then they do not order takeout at least once a day.\n∀x (Lead(x) → Make(x)) ::: All people who lead very busy lives that include 12-hour work hours make a lot of their own food at home using recipes and online guides.\nConclusion:\nOwn(sam, coffeemaker) ∧ Own(sam, blender) → Order(sam) ::: Sam either owns at least one coffeemaker and one blender in her home or orders takeout at least once a day.\n------"
    ]
  },
  {
    "id": "FOLIO_train_421",
    "context": "No professional basketball players are soccer players. All NBA players are professional basketball players. All defenders are soccer players. All centerbacks are defenders. Roger Federer is not an NBA player or a defender.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Roger Federer is a centerback.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProfessionalBasketballPlayer(x) ::: x is a professional basketball player.\nSoccerPlayer(x) ::: x is a soccer player.\nNBAPlayer(x) ::: x is an NBA player.\nDefender(x) ::: x is a defender.\nCenterback(x) ::: x is a centerback.\nPremises:\n¬∃x (ProfessionalBasketballPlayer(x) ∧ SoccerPlayer(x)) ::: No professional basketball players are soccer players.\n∀x (NBAPlayer(x) → ProfessionalBasketballPlayer(x)) ::: All NBA players are professional basketball players.\n∀x (Defender(x) → SoccerPlayer(x)) ::: All defenders are soccer players.\n∀x (Centerback(x) → Defender(x)) ::: All centerbacks are defenders.\nRogerFederer ∧ ¬(NBAPlayer(rogerFederer) ∧ Defender(rogerFederer)) ::: Roger Federer is not an NBA player or a defender.\nConclusion:\nCenterback(rogerFederer) ::: Roger Federer is a centerback.\n------\nProblem:\nAll people who are not students are either teachers or professors. All teachers are either professors or lecturers. All professors are either lecturers or researchers. All researchers are either professors or lecturers. All lecturers are either professors or researchers. All students are either professors or researchers.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? All people who are not students are either teachers or professors.\n###\nPredicates:\nStudent(x) ::: x is a student.\nTeacher(x) ::: x is a teacher.\nProfessor(x) ::: x is a professor.\nLecturer(x"
    ]
  },
  {
    "id": "FOLIO_train_422",
    "context": "No professional basketball players are soccer players. All NBA players are professional basketball players. All defenders are soccer players. All centerbacks are defenders. Roger Federer is not an NBA player or a defender.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Roger Federer is not a centerback.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProfessionalBasketballPlayer(x) ::: x is a professional basketball player.\nSoccerPlayer(x) ::: x is a soccer player.\nNBAPlayer(x) ::: x is an NBA player.\nDefender(x) ::: x is a defender.\nCenterback(x) ::: x is a centerback.\nPremises:\n¬∃x (ProfessionalBasketballPlayer(x) ∧ SoccerPlayer(x)) ::: No professional basketball players are soccer players.\n∀x (NBAPlayer(x) → ProfessionalBasketballPlayer(x)) ::: All NBA players are professional basketball players.\n∀x (Defender(x) → SoccerPlayer(x)) ::: All defenders are soccer players.\n∀x (Centerback(x) → Defender(x)) ::: All centerbacks are defenders.\nRogerFederer ∧ ¬(NBAPlayer(rogerFederer) ∧ Defender(rogerFederer)) ::: Roger Federer is not an NBA player or a defender.\nConclusion:\n¬Centerback(rogerFederer) ::: Roger Federer is not a centerback.\n------\nProblem:\nAll people who are not students are either teachers or professors. All teachers are either professors or lecturers. All professors are either lecturers or researchers. All researchers are either professors or lecturers. All lecturers are either professors or researchers. All students are either professors or researchers.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? All people who are not students are either professors or researchers.\n###\nPredicates:\nStudent(x) ::: x is a student.\nTeacher(x) ::: x is a teacher.\nProfessor(x) ::: x is a professor.\nLecturer"
    ]
  },
  {
    "id": "FOLIO_train_423",
    "context": "No professional basketball players are soccer players. All NBA players are professional basketball players. All defenders are soccer players. All centerbacks are defenders. Roger Federer is not an NBA player or a defender.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Roger Federer is a soccer player.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProfessionalBasketballPlayer(x) ::: x is a professional basketball player.\nSoccerPlayer(x) ::: x is a soccer player.\nNBAPlayer(x) ::: x is an NBA player.\nDefender(x) ::: x is a defender.\nCenterback(x) ::: x is a centerback.\nPremises:\n¬∃x (ProfessionalBasketballPlayer(x) ∧ SoccerPlayer(x)) ::: No professional basketball players are soccer players.\n∀x (NBAPlayer(x) → ProfessionalBasketballPlayer(x)) ::: All NBA players are professional basketball players.\n∀x (Defender(x) → SoccerPlayer(x)) ::: All defenders are soccer players.\n∀x (Centerback(x) → Defender(x)) ::: All centerbacks are defenders.\n¬(NBAPlayer(roger) ∧ Defender(roger)) ::: Roger Federer is not an NBA player or a defender.\nConclusion:\nSoccerPlayer(roger) ::: Roger Federer is a soccer player.\n------\nProblem:\nAll people who are not students are either teachers or professors. All teachers are either professors or lecturers. All professors are either lecturers or researchers. All researchers are either professors or lecturers. All lecturers are either professors or researchers. All students are either professors or researchers.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? All people who are not students are either teachers or professors.\n###\nPredicates:\nStudent(x) ::: x is a student.\nTeacher(x) ::: x is a teacher.\nProfessor(x) ::: x is a professor.\nLecturer(x) ::: x is a lecturer.\nResearcher(x) :::"
    ]
  },
  {
    "id": "FOLIO_train_424",
    "context": "Some teachers working at a pool are not nice. All teachers working at pools are pool managers. All pool managers are lifeguards. If someone is a lifeguard, then they work at a pool. Mary does not work at a pool.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mary is nice.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTeacher(x) ::: x is a teacher.\nNice(x) ::: x is nice.\nPool(x) ::: x is a pool.\nWork(x, y) ::: x works at y.\nPoolManager(x) ::: x is a pool manager.\nLifeguard(x) ::: x is a lifeguard.\nPremises:\n∃x (Teacher(x) ∧ ¬Nice(x)) ::: Some teachers working at a pool are not nice.\n∀x (Teacher(x) ∧ Work(x, pool) → PoolManager(x)) ::: All teachers working at pools are pool managers.\n∀x (PoolManager(x) → Lifeguard(x)) ::: All pool managers are lifeguards.\n∀x (Lifeguard(x) → Work(x, pool)) ::: If someone is a lifeguard, then they work at a pool.\n∃x (Mary ∧ ¬Work(x, pool)) ::: Mary does not work at a pool.\nConclusion:\nNice(mary) ::: Mary is nice.\n------\nProblem:\nSome people who are not students are not unaware that caffeine is a drug. All people who are not students are either people who regularly drink coffee or people who joke about being addicted to caffeine. All people who regularly drink coffee are dependent on caffeine. All people who joke about being addicted to caffeine are dependent on caffeine.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? All people who are not students are dependent on caffeine.\n###\nPredicates:\nStudent(x) ::: x is a student.\nUnaware(x) ::: x is unaware that caffeine is a drug.\nDependent(x) ::: x is dependent"
    ]
  },
  {
    "id": "FOLIO_train_425",
    "context": "Some teachers working at a pool are not nice. All teachers working at pools are pool managers. All pool managers are lifeguards. If someone is a lifeguard, then they work at a pool. Mary does not work at a pool.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mary is not nice and is a teacher working at a pool.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTeacher(x) ::: x is a teacher.\nPool(x) ::: x is a pool.\nNice(x) ::: x is nice.\nWork(x, y) ::: x works at y.\nLifeguard(x) ::: x is a lifeguard.\nPoolManager(x) ::: x is a pool manager.\nPremises:\n∃x (Teacher(x) ∧ ¬Nice(x) ∧ Work(x, pool)) ::: Some teachers working at a pool are not nice.\n∀x (Teacher(x) ∧ Work(x, pool) → PoolManager(x)) ::: All teachers working at pools are pool managers.\n∀x (PoolManager(x) → Lifeguard(x)) ::: All pool managers are lifeguards.\n∀x (Lifeguard(x) → Work(x, pool)) ::: If someone is a lifeguard, then they work at a pool.\n∃x (Teacher(x) ∧ Work(x, pool) ∧ ¬Nice(x)) ::: Mary does not work at a pool.\nConclusion:\nTeacher(mary) ∧ ¬Nice(mary) ∧ Work(mary, pool) ::: Mary is not nice and is a teacher working at a pool.\n------\nProblem:\nSome people who are not nice are not teachers. All people who are not nice are not nice teachers. All people who are not nice are not nice teachers. All people who are not nice are not nice teachers. All people who are not nice are not nice teachers. All people who are not nice are not nice teachers. All people who are not nice are not nice teachers. All people who are not nice are not nice teachers. All people who are not nice are not nice teachers. All people who are not nice are"
    ]
  },
  {
    "id": "FOLIO_train_426",
    "context": "Some teachers working at a pool are not nice. All teachers working at pools are pool managers. All pool managers are lifeguards. If someone is a lifeguard, then they work at a pool. Mary does not work at a pool.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mary is nice and is a teacher working at a pool.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTeacher(x) ::: x is a teacher.\nPool(x) ::: x is a pool.\nNice(x) ::: x is nice.\nWork(x, y) ::: x works at y.\nLifeguard(x) ::: x is a lifeguard.\nPoolManager(x) ::: x is a pool manager.\nPremises:\n∃x (Teacher(x) ∧ ¬Nice(x)) ::: Some teachers working at a pool are not nice.\n∀x (Teacher(x) ∧ Work(x, pool) → PoolManager(x)) ::: All teachers working at pools are pool managers.\n∀x (PoolManager(x) → Lifeguard(x)) ::: All pool managers are lifeguards.\n∀x (Lifeguard(x) → Work(x, pool)) ::: If someone is a lifeguard, then they work at a pool.\n∃x (Mary ∧ ¬Work(x, pool)) ::: Mary does not work at a pool.\nConclusion:\nNice(mary) ∧ Teacher(mary) ∧ Work(mary, pool) ::: Mary is nice and is a teacher working at a pool.\n------\nProblem:\nSome people are not nice. All people who are nice are not nice. All people who are not nice are not nice.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? All people are nice.\n###\nPredicates:\nNice(x) ::: x is nice.\nPremises:\n∃x (Nice(x) ∧ ¬Nice(x)) ::: Some people are not nice.\n∀x (Nice(x) → ¬Nice(x)) ::: All people who are nice are not"
    ]
  },
  {
    "id": "FOLIO_train_427",
    "context": "Not all art pieces require talent. Everything that requires talent requires practice.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There exist art pieces that do not require practice.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nArtPiece(x) ::: x is an art piece.\nRequire(x, y) ::: x requires y.\nTalent(x) ::: x requires talent.\nPractice(x) ::: x requires practice.\nPremises:\n¬∀x (ArtPiece(x) → Talent(x)) ::: Not all art pieces require talent.\n∀x (Talent(x) → Practice(x)) ::: Everything that requires talent requires practice.\nConclusion:\n∃x (ArtPiece(x) ∧ ¬Practice(x)) ::: There exist art pieces that do not require practice.\n------\nProblem:\nAll people who are not students are either employed or unemployed. All people who are employed are either employed full-time or employed part-time. All people who are employed full-time are employed.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? There exist people who are employed part-time and employed.\n###\nPredicates:\nStudent(x) ::: x is a student.\nEmployed(x) ::: x is employed.\nUnemployed(x) ::: x is unemployed.\nFullTime(x) ::: x is employed full-time.\nPartTime(x) ::: x is employed part-time.\nPremises:\n∀x (¬Student(x) → (Employed(x) ∨ Unemployed(x))) ::: All people who are not students are either employed or unemployed.\n∀x (Employed(x) → (FullTime(x) ∨ PartTime(x))) ::: All people who are employed are either employed full-time or employed part-time.\n∀x (FullTime(x) → Employed(x)) ::: All people who are employed full-time are employed.\nConclusion:���"
    ]
  },
  {
    "id": "FOLIO_train_428",
    "context": "Bernarda Bryson Shahn was a painter and lithographer. Bernarda Bryson Shahn was born in Athens, Ohio. Bernarda Bryson Shahn was married to Ben Shahn. People born in Athens, Ohio are Americans.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Bernarda Bryson Shahn was born in Greece.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBornIn(x, y) ::: x was born in y.\nMarried(x, y) ::: x is married to y.\nPremises:\nBernardaBrysonShahn(x) ::: x is Bernarda Bryson Shahn.\nBornIn(x, athensOhio) ::: x was born in Athens, Ohio.\nMarried(x, benShahn) ::: x is married to Ben Shahn.\nBornIn(x, athensOhio) ⊕ BornIn(x, greece) ::: People born in Athens, Ohio are Americans.\nConclusion:\nBornIn(x, greece) ::: Bernarda Bryson Shahn was born in Greece.\n------\nProblem:\nA person is a student if and only if the person is enrolled in a university. A person is a student if and only if the person is enrolled in a college. A person is a student if and only if the person is enrolled in a school. A person is a student if and only if the person is enrolled in a university, college, or school.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? A person is a student if and only if the person is enrolled in a university, college, or school.\n###\nPredicates:\nStudent(x) ::: x is a student.\nEnrolled(x, y) ::: x is enrolled in y.\nUniversity(x) ::: x is a university.\nCollege(x) ::: x is a college.\nSchool(x) ::: x is a school.\nPremises:\nStudent(x) ↔ Enrolled(x, university) ::: A person is a student if and only if the person is enrolled in a university.\nStudent(x) ↔ Enrolled(x, college) ::: A person is a student if and only if the person is"
    ]
  },
  {
    "id": "FOLIO_train_429",
    "context": "Bernarda Bryson Shahn was a painter and lithographer. Bernarda Bryson Shahn was born in Athens, Ohio. Bernarda Bryson Shahn was married to Ben Shahn. People born in Athens, Ohio are Americans.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Bernarda Bryson Shahn was American.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBornIn(x, y) ::: x was born in y.\nMarried(x, y) ::: x is married to y.\nPremises:\nBernardaBrysonShahn(x) ::: x is Bernarda Bryson Shahn.\nBornIn(x, athensOhio) ::: x was born in Athens, Ohio.\nMarried(x, benShahn) ::: x is married to Ben Shahn.\nAmericans(x) ::: x is an American.\nConclusion:\nAmericans(x) ::: Bernarda Bryson Shahn was American.\n------\nProblem:\nA person is a student if and only if the person is enrolled in a university. A person is enrolled in a university if and only if the person is enrolled in a course. A person is enrolled in a course if and only if the person is taking the course. A person is taking a course if and only if the person is attending the course. A person is attending a course if and only if the person is present in the course. A person is present in a course if and only if the person is in the course. A person is in a course if and only if the person is in the classroom where the course is being taught. A person is in a classroom if and only if the person is in the building where the classroom is located. A person is in a building if and only if the person is in a room in the building. A person is in a room in a building if and only if the person is in the room.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? A person is in a room in a building if and only if the person is in the building.\n###\nPredicates:\nStudent(x) ::: x is a student.\nEnrolled(x, y) ::: x is enrolled in y.\nCourse(x) ::: x is a course.\nTaking(x, y)"
    ]
  },
  {
    "id": "FOLIO_train_430",
    "context": "Bernarda Bryson Shahn was a painter and lithographer. Bernarda Bryson Shahn was born in Athens, Ohio. Bernarda Bryson Shahn was married to Ben Shahn. People born in Athens, Ohio are Americans.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Bernarda Bryson Shahn had been divorced once.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBornIn(x, y) ::: x was born in y.\nMarried(x, y) ::: x is married to y.\nDivorced(x) ::: x had been divorced once.\nPremises:\nBernardaBrysonShahn(x) ::: x is Bernarda Bryson Shahn.\nBornIn(x, athensOhio) ::: x was born in Athens, Ohio.\nMarried(x, benShahn) ::: x is married to Ben Shahn.\nBornIn(x, athensOhio) ⊕ ¬BornIn(x, athensOhio) ::: People born in Athens, Ohio are Americans.\nConclusion:\nDivorced(x) ::: Bernarda Bryson Shahn had been divorced once.\n------"
    ]
  },
  {
    "id": "FOLIO_train_431",
    "context": "If people upgrade to the newest iPhone model every year, then they are not saving money for a down payment on a new house. If people enjoy reading about tech specs and keeping up to date on the latest technology, then they upgrade to the newest iPhone model every year. People either are saving money for a down payment on a new house or they live in apartments in big metropolitan cities. If people live with at least one roommate then they do not own at least one pet. All people who own at least one pet live with at least one roommate. If Emma does not both own at least one pet and live in apartments in big metropolitan cities, then Emma either owns at least one pet and lives in an apartment in big metropolitan cities, or she neither owns a pet nor lives in an apartment in big metropolitan cities.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Emma lives with at least one roommate.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nUpgrade(x) ::: x upgrades to the newest iPhone model every year.\nSave(x) ::: x is saving money for a down payment on a new house.\nEnjoy(x, y) ::: x enjoys y.\nLive(x, y) ::: x lives in y.\nRoommate(x, y) ::: x lives with at least one roommate.\nPet(x) ::: x owns at least one pet.\nMetropolitan(x) ::: x is a big metropolitan city.\nPremises:\n∀x (Upgrade(x) → ¬Save(x)) ::: If people upgrade to the newest iPhone model every year, then they are not saving money for a down payment on a new house.\n∀x (Enjoy(x, techSpecs) ∧ Enjoy("
    ]
  },
  {
    "id": "FOLIO_train_432",
    "context": "If people upgrade to the newest iPhone model every year, then they are not saving money for a down payment on a new house. If people enjoy reading about tech specs and keeping up to date on the latest technology, then they upgrade to the newest iPhone model every year. People either are saving money for a down payment on a new house or they live in apartments in big metropolitan cities. If people live with at least one roommate then they do not own at least one pet. All people who own at least one pet live with at least one roommate. If Emma does not both own at least one pet and live in apartments in big metropolitan cities, then Emma either owns at least one pet and lives in an apartment in big metropolitan cities, or she neither owns a pet nor lives in an apartment in big metropolitan cities.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Emma enjoys reading about tech specs and keeping up to date on the latest technology.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nUpgrade(x) ::: x upgrades to the newest iPhone model every year.\nSave(x) ::: x is saving money for a down payment on a new house.\nEnjoy(x, y) ::: x enjoys y.\nLive(x, y) ::: x lives in y.\nRoommate(x, y) ::: x lives with y.\nPet(x) ::: x owns at least one pet.\nMetropolitan(x) ::: x is a big metropolitan city.\nPremises:\n∀x (Upgrade(x) → ¬Save(x)) ::: If people upgrade to the newest iPhone model every year, then they are not saving money for a down payment on a new house.\n∀x (Enjoy(x, techSpecs) ∧ Enjoy(x, latestTe"
    ]
  },
  {
    "id": "FOLIO_train_433",
    "context": "If you are on the payroll, then you are being paid by the school. If someone has a job at a school, then they are on the payroll. All faculty members have a job at a school. One can either be a faculty member or a teacher. Every teacher has students. If Nancy is a teacher, then they are on the payroll. If Nancy is not a teacher, then they are not paid by the school.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Nancy is a faculty member.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPayroll(x) ::: x is on the payroll.\nPaid(x) ::: x is paid by the school.\nJob(x, y) ::: x has a job at y.\nFaculty(x) ::: x is a faculty member.\nTeacher(x) ::: x is a teacher.\nStudent(x) ::: x has students.\nPremises:\n∀x (Payroll(x) → Paid(x)) ::: If you are on the payroll, then you are being paid by the school.\n∀x (Job(x, school) → Payroll(x)) ::: If someone has a job at a school, then they are on the payroll.\n∀x (Faculty(x) → Job(x, school)) ::: All faculty members have a job"
    ]
  },
  {
    "id": "FOLIO_train_434",
    "context": "If you are on the payroll, then you are being paid by the school. If someone has a job at a school, then they are on the payroll. All faculty members have a job at a school. One can either be a faculty member or a teacher. Every teacher has students. If Nancy is a teacher, then they are on the payroll. If Nancy is not a teacher, then they are not paid by the school.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Nancy is paid by the school and has students.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPayroll(x) ::: x is on the payroll.\nPaid(x) ::: x is paid by the school.\nJob(x, y) ::: x has a job at y.\nFaculty(x) ::: x is a faculty member.\nTeacher(x) ::: x is a teacher.\nStudent(x) ::: x has students.\nPremises:\n∀x (Payroll(x) → Paid(x)) ::: If you are on the payroll, then you are being paid by the school.\n∀x (Job(x, school) → Payroll(x)) ::: If someone has a job at a school, then they are on the payroll.\n∀x (Faculty(x) → Job(x, school)) ::: All faculty members have a job"
    ]
  },
  {
    "id": "FOLIO_train_435",
    "context": "If you are on the payroll, then you are being paid by the school. If someone has a job at a school, then they are on the payroll. All faculty members have a job at a school. One can either be a faculty member or a teacher. Every teacher has students. If Nancy is a teacher, then they are on the payroll. If Nancy is not a teacher, then they are not paid by the school.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Nancy is not paid by the school and has students.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPayroll(x) ::: x is on the payroll.\nPaid(x) ::: x is paid by the school.\nJob(x) ::: x has a job at a school.\nFaculty(x) ::: x is a faculty member.\nTeacher(x) ::: x is a teacher.\nStudent(x) ::: x has students.\nPremises:\n∀x (Payroll(x) → Paid(x)) ::: If you are on the payroll, then you are being paid by the school.\n∀x (Job(x) → Payroll(x)) ::: If someone has a job at a school, then they are on the payroll.\n∀x (Faculty(x) → Job(x)) ::: All faculty members have a job at a school."
    ]
  },
  {
    "id": "FOLIO_train_436",
    "context": "Kangaroo is an animal. No Kangaroos live in Germany. If Jane saves enough money for the summer, she will fly to Germany. If Jane flies to Germany, she will go to the Berlin Zoo. If someone goes to the Berlin Zoo, they will see some of the animals that live in Germany.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Jane saves enough money for the summer, she will see a kangaroo.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nKangaroo(x) ::: x is a kangaroo.\nAnimal(x) ::: x is an animal.\nLive(x, y) ::: x lives in y.\nSave(x, y) ::: x saves y for the summer.\nFly(x, y) ::: x flies to y.\nGo(x, y) ::: x goes to y.\nSee(x, y) ::: x sees y.\nPremises:\nKangaroo(kangaroo) ::: Kangaroo is an animal.\n∀x (Kangaroo(x) → Animal(x)) ::: No Kangaroos live in Germany.\nSave(jane, money) ⊕ ¬(Save(jane, money)) ::: If Jane saves enough money for the"
    ]
  },
  {
    "id": "FOLIO_train_437",
    "context": "If a class has prerequisites the student must take the prerequisites to take the class. If a class has no prerequisites, then the student can take the class CPSC 201 and CPSC 223 are prerequisites for CPSC 323. Intro Microeconomics is the only prerequisite for Intermediate Microeconomics. Intro Geology has no prerequisites.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? CPSC 201 has no prerequisites.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPrerequisite(x, y) ::: x is a prerequisite for y.\nHasPrerequisite(x) ::: x has prerequisites.\nNoPrerequisite(x) ::: x has no prerequisites.\nPremises:\n∀x (HasPrerequisite(x) → ∃y (Prerequisite(y, x))) ::: If a class has prerequisites the student must take the prerequisites to take the class.\nPrerequisite(CPSC 201, CPSC 223) ∧ Prerequisite(CPSC 223, CPSC 323) ::: CPSC 201 and CPSC 223 are prerequisites for CPSC 323."
    ]
  },
  {
    "id": "FOLIO_train_438",
    "context": "If a class has prerequisites the student must take the prerequisites to take the class. If a class has no prerequisites, then the student can take the class CPSC 201 and CPSC 223 are prerequisites for CPSC 323. Intro Microeconomics is the only prerequisite for Intermediate Microeconomics. Intro Geology has no prerequisites.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If a student took CPSC 201 but did not take CPSC 223, they can take CPSC 323.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPrerequisite(x, y) ::: x is a prerequisite for y.\nTake(x, y) ::: x takes y.\nPremises:\n∀x ∀y (Prerequisite(x, y) → Take(x, y)) ::: If a class has prerequisites the student must take the prerequisites to take the class.\nPrerequisite(CPSC 201, CPSC 223) ∧ Prerequisite(CPSC 223, CPSC 323) ::: CPSC 201 and CPSC 223 are prerequisites for CPSC 323.\nPrerequisite(Intro Microeconomics, Intermediate Microeconomics) ::: Intro Microeconomics is the"
    ]
  },
  {
    "id": "FOLIO_train_439",
    "context": "If a class has prerequisites the student must take the prerequisites to take the class. If a class has no prerequisites, then the student can take the class CPSC 201 and CPSC 223 are prerequisites for CPSC 323. Intro Microeconomics is the only prerequisite for Intermediate Microeconomics. Intro Geology has no prerequisites.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A student cannot take Intro Geology.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPrerequisite(x, y) ::: x is a prerequisite for y.\nCanTake(x, y) ::: x can take y.\nPremises:\n∀x (Prerequisite(x, y) → CanTake(x, y)) ::: If a class has prerequisites the student must take the prerequisites to take the class.\n∀x (¬Prerequisite(x, y) → CanTake(x, y)) ::: If a class has no prerequisites, then the student can take the class.\nPrerequisite(CPSC 201, CPSC 323) ∧ Prerequisite(CPSC 223, CPSC 323) ::: CPSC 201 and CPSC 2"
    ]
  },
  {
    "id": "FOLIO_train_440",
    "context": "If a class has prerequisites the student must take the prerequisites to take the class. If a class has no prerequisites, then the student can take the class CPSC 201 and CPSC 223 are prerequisites for CPSC 323. Intro Microeconomics is the only prerequisite for Intermediate Microeconomics. Intro Geology has no prerequisites.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Intermediate Microeconomics has one prerequisite.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPrerequisite(x, y) ::: x is a prerequisite for y.\nHasPrerequisite(x) ::: x has prerequisites.\nNoPrerequisite(x) ::: x has no prerequisites.\nPremises:\n∀x (HasPrerequisite(x) → ∃y (Prerequisite(y, x))) ::: If a class has prerequisites the student must take the prerequisites to take the class.\n∀x (NoPrerequisite(x) → ¬∃y (Prerequisite(y, x))) ::: If a class has no prerequisites, then the student can take the class.\nPrerequisite(CPSC 201, CPSC 323) ∧ Prerequisite(CPSC 223, CPSC 323) ::: CPSC 201 and CPSC 223 are prerequisites for CPSC 323.\nPrerequisite(Intro Microeconomics, Intermediate Microeconomics) ::: Intro Microeconomics is the only prerequisite for Intermediate Microeconomics.\nNoPrerequisite(Intro Geology) ::: Intro Geology has no prerequisites.\nConclusion:\n∃y (Prerequisite(y, Intermediate Microeconomics)) ::: Intermediate Microeconomics has one prerequisite.\n------"
    ]
  },
  {
    "id": "FOLIO_train_441",
    "context": "A heptalogy, is a compound literary or narrative work that is made up of seven distinct works. The Harry Potter series consists of 7 distinct works. The Chronicles of Narnia consists of 7 distinct works.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Harry Potter series of books is a heptalogy.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nHeptalogy(x) ::: x is a heptalogy.\nHarryPotter(x) ::: x is a Harry Potter book.\nChroniclesOfNarnia(x) ::: x is a Chronicles of Narnia book.\nConsistOf(x, y) ::: x consists of y.\nPremises:\nHeptalogy(harryPotter) ∧ Heptalogy(chroniclesOfNarnia) ::: The Harry Potter series consists of 7 distinct works. The Chronicles of Narnia consists of 7 distinct works.\nConclusion:\nConsistOf(harryPotter, 7) ::: The Harry Potter series of books is a heptalogy.\n------\nProblem:\nA heptalogy, is a compound literary or narrative work that is made up of seven distinct works. The Harry Potter series consists of 7 distinct works. The Chronicles of Narnia consists of 7 distinct works.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The Harry Potter series of books is a heptalogy.\n###\nPredicates:\nHeptalogy(x) ::: x is a heptalogy.\nHarryPotter(x) ::: x is a Harry Potter book.\nChroniclesOfNarnia(x) ::: x is a Chronicles of Narnia book.\nConsistOf(x, y) ::: x consists of"
    ]
  },
  {
    "id": "FOLIO_train_442",
    "context": "A heptalogy, is a compound literary or narrative work that is made up of seven distinct works. The Harry Potter series consists of 7 distinct works. The Chronicles of Narnia consists of 7 distinct works.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Chronicles of Narnia series of books is not a heptalogy.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nHeptalogy(x) ::: x is a heptalogy.\nSeries(x) ::: x is a series.\nConsistsOf(x, y) ::: x consists of y.\nPremises:\nHeptalogy(harryPotterSeries) ∧ Heptalogy(chroniclesOfNarnia) ::: The Harry Potter series consists of 7 distinct works. The Chronicles of Narnia consists of 7 distinct works.\nConclusion:\n¬Heptalogy(chroniclesOfNarnia) ::: The Chronicles of Narnia series of books is not a heptalogy.\n------\nProblem:\nA heptalogy, is a compound literary or narrative work that is made up of seven distinct works. The Harry Potter series consists of 7 distinct works. The Chronicles of Narnia consists of 7 distinct works.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The Harry Potter series is a heptalogy.\n###\nPredicates:\nHeptalogy(x) ::: x is a heptalogy.\nSeries(x) ::: x is a series.\nConsistsOf(x, y) ::: x consists of y.\nPremises:\nHeptalogy(harryPotterSeries) ∧ Heptalogy(chroniclesOfNarnia) ::: The Harry Potter series consists of 7 distinct works. The Chronicles of Narnia consists of"
    ]
  },
  {
    "id": "FOLIO_train_443",
    "context": "A heptalogy, is a compound literary or narrative work that is made up of seven distinct works. The Harry Potter series consists of 7 distinct works. The Chronicles of Narnia consists of 7 distinct works.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Lord of Rings is a heptalogy.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nHeptalogy(x) ::: x is a heptalogy.\nConsistOf(x, y) ::: x consists of y.\nPremises:\nHeptalogy(harryPotterSeries) ∧ Heptalogy(chroniclesOfNarnia) ::: The Harry Potter series consists of 7 distinct works. The Chronicles of Narnia consists of 7 distinct works.\nConclusion:\nHeptalogy(lordOfRings) ::: The Lord of Rings is a heptalogy.\n------\nProblem:\nA heptalogy, is a compound literary or narrative work that is made up of seven distinct works. The Harry Potter series consists of 7 distinct works. The Chronicles of Narnia consists of 7 distinct works.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The Lord of Rings is a heptalogy.\n###\nPredicates:\nHeptalogy(x) ::: x is a heptalogy.\nConsistOf(x, y) ::: x consists of y.\nPremises:\nHeptalogy(harryPotterSeries) ∧ Heptalogy(chroniclesOfNarnia) ::: The Harry Potter series consists of 7 distinct works. The Chronicles of Narnia consists of 7 distinct works.\nConclusion:\nHeptalogy(lordOfRings) ::: The Lord of Rings is a heptalogy"
    ]
  },
  {
    "id": "FOLIO_train_444",
    "context": "All people who attend Renaissance fairs regularly enjoy dressing up in old-fashioned and historical period clothing. If people are fascinated by the history of the Renaissance and other past eras, then they attend Renaissance fairs regularly. People are either fascinated by the history of the Renaissance and other past eras, or are not nostalgic academics who enjoy learning. If people are focused on the future and industry professions, then they are not nostalgic academics who enjoy learning. If people are historical professors who are passionate about their job and subject, then they are nostalgic academics who enjoy learning. If Clyde is not focused on the future and industry professions, then he is neither focused on the future and industry professions nor enjoys dressing up in old-fashioned and historical period clothing.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Clyde attends Renaissance fairs regularly.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAttend(x) ::: x attends Renaissance fairs regularly.\nEnjoy(x) ::: x enjoys dressing up in old-fashioned and historical period clothing.\nFascinated(x) ::: x is fascinated by the history of the Renaissance and other past eras.\nNostalgic(x) ::: x is a nostalgic academic who enjoys learning.\nFocused(x) ::: x is focused on the future and industry professions.\nHistorical(x) ::: x is a historical professor who is passionate about their job and subject.\nPremises:\n∀x (Attend(x) → Enjoy(x)) ::: All people who attend Renaissance fairs regularly enjoy dressing up in old-fashioned and historical period clothing.\n∀x (Fascinated(x) → Attend(x)) ::: If people are fascinated by the history of the Renaissance and other past eras, then they attend Renaissance fairs regularly.\n∀x (Nostalgic(x) ∨ ¬Nostalgic(x)) ::: People are either fascinated by the history of the Renaissance and other past eras, or are not nostalgic academics who enjoy learning.\n∀x (Focused(x) → ¬Nostalgic(x)) ::: If people are focused on the future and industry professions, then they are not nostalgic academics who enjoy learning.\n∀x (Historical(x) →"
    ]
  },
  {
    "id": "FOLIO_train_445",
    "context": "All people who attend Renaissance fairs regularly enjoy dressing up in old-fashioned and historical period clothing. If people are fascinated by the history of the Renaissance and other past eras, then they attend Renaissance fairs regularly. People are either fascinated by the history of the Renaissance and other past eras, or are not nostalgic academics who enjoy learning. If people are focused on the future and industry professions, then they are not nostalgic academics who enjoy learning. If people are historical professors who are passionate about their job and subject, then they are nostalgic academics who enjoy learning. If Clyde is not focused on the future and industry professions, then he is neither focused on the future and industry professions nor enjoys dressing up in old-fashioned and historical period clothing.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Clyde is a history professor who is passionate about his job and subject.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAttend(x) ::: x attends Renaissance fairs regularly.\nEnjoy(x, y) ::: x enjoys doing y.\nFascinated(x, y) ::: x is fascinated by y.\nNostalgic(x) ::: x is a nostalgic academic who enjoys learning.\nFocused(x, y) ::: x is focused on y.\nIndustry(x) ::: x is an industry profession.\nProfession(x) ::: x is a profession.\nHistorical(x) ::: x is a historical professor.\nPassionate(x) ::: x is passionate about his job and subject.\nPremises:\n∀x (Attend(x) → Enjoy(x, dressUp)) ::: All people who attend Renaissance fairs regularly enjoy dressing up in old-fashioned and historical period clothing.\n∀x (Fascinated(x, history) → Attend(x)) ::: If people are fascinated by the history of the Renaissance and other past eras, then they attend Renaissance fairs regularly.\n∀x (Enjoy(x, dressUp) ∨ Nostalgic(x)) ::: People are either fascinated by the history of the Renaissance and other past eras, or are not nostalgic academics who enjoy learning.\n∀x (Focused(x, future) → ¬Nostalgic(x)) ::: If people are focused on the future and industry professions,"
    ]
  },
  {
    "id": "FOLIO_train_446",
    "context": "All people who attend Renaissance fairs regularly enjoy dressing up in old-fashioned and historical period clothing. If people are fascinated by the history of the Renaissance and other past eras, then they attend Renaissance fairs regularly. People are either fascinated by the history of the Renaissance and other past eras, or are not nostalgic academics who enjoy learning. If people are focused on the future and industry professions, then they are not nostalgic academics who enjoy learning. If people are historical professors who are passionate about their job and subject, then they are nostalgic academics who enjoy learning. If Clyde is not focused on the future and industry professions, then he is neither focused on the future and industry professions nor enjoys dressing up in old-fashioned and historical period clothing.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Clyde is a history professor who is passionate about his job and subject, or is not a nostalgic academic who enjoys learning.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAttend(x) ::: x attends Renaissance fairs regularly.\nEnjoy(x, y) ::: x enjoys doing y.\nFascinated(x, y) ::: x is fascinated by y.\nNostalgic(x) ::: x is a nostalgic academic who enjoys learning.\nFocused(x, y) ::: x is focused on y.\nIndustry(x) ::: x is an industry profession.\nProfession(x) ::: x is a profession.\nHistorical(x) ::: x is a historical professor.\nPassionate(x) ::: x is passionate about his job and subject.\nPremises:\n∀x (Attend(x) → Enjoy(x, dressUp)) ::: All people who attend Renaissance fairs regularly enjoy dressing up in old-fashioned and historical period clothing.\n∀x (Fascinated(x, history) → Attend(x)) ::: If people are fascinated by the history of the Renaissance and other past eras, then they attend Renaissance fairs regularly.\n∀x (Enjoy(x, dressUp) ∨ Nostalgic(x)) ::: People are either fascinated by the history of the Renaissance and other past eras, or are not nostalgic academics who enjoy learning.\n∀x (Focused(x, future) → ¬Nostalgic(x)) ::: If people are focused on the future and industry professions,"
    ]
  },
  {
    "id": "FOLIO_train_447",
    "context": "No sports cars are vehicles intended to be driven at moderate speeds. All automobiles designed for family use are vehicles intended to be driven at moderate speeds.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? No sports cars are automobiles designed for family use.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSportsCar(x) ::: x is a sports car.\nVehicle(x) ::: x is a vehicle.\nIntended(x, y) ::: x is intended to be driven at speed y.\nFamilyUse(x) ::: x is a vehicle designed for family use.\nPremises:\n¬∃x (SportsCar(x) ∧ Intended(x, moderate)) ::: No sports cars are vehicles intended to be driven at moderate speeds.\n∀x (FamilyUse(x) → Intended(x, moderate)) ::: All automobiles designed for family use are vehicles intended to be driven at moderate speeds.\nConclusion:\n¬∃x (SportsCar(x) ∧ FamilyUse(x)) ::: No sports cars are automobiles designed for family use.\n------\nProblem:\nAll people who are not students are either employed or unemployed. All people who are employed are either employed full-time or employed part-time. All people who are employed full-time are employed.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? All people who are employed are either employed full-time or employed part-time.\n###\nPredicates:\nStudent(x) ::: x is a student.\nEmployed(x) ::: x is employed.\nUnemployed(x) ::: x is unemployed.\nFullTime(x) ::: x is employed full-time.\nPartTime(x) ::: x is"
    ]
  },
  {
    "id": "FOLIO_train_448",
    "context": "If people work well in teams in their workplace, then they get along with all their colleagues at their work. If people come to work every day with a positive attitude, then they work well in teams in their workplace. People either come into work every day with a positive attitude or are always tired every morning. If people get many promotions from their boss at work, then they receive negative feedback from teams at work. Kat is either both a person who works well in teams in their workplace and is always tired every morning, or she neither works well in teams in their workplace nor is always tired every morning.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Kat is a person who comes to work every day with a positive attitude.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nWork(x) ::: x is a workplace.\nPeople(x) ::: x is a person.\nTeam(x) ::: x is a team.\nColleague(x, y) ::: x is a colleague of y.\nWorkWell(x) ::: x works well in teams in their workplace.\nGetAlong(x) ::: x gets along with all their colleagues at their work.\nComeToWork(x) ::: x comes to work every day with a positive attitude.\nAlwaysTired(x) ::: x is always tired every morning.\nPromotion(x) ::: x is a promotion.\nBoss(x) ::: x is a boss.\nReceive(x, y) ::: x receives y.\nNegativeFeedback(x) ::: x is negative feedback.\nPremises:\n∀x (WorkWell(x) → GetAlong(x)) ::: If people work well in teams in their workplace, then they get along with all their colleagues at their work.\n∀x (ComeToWork(x) → WorkWell(x)) ::: If people come to work every day with a positive attitude, then they work well in teams in their workplace.\n∀x (ComeToWork(x) ⊕ AlwaysTired(x)) ::: People either come into work every day with a positive attitude or are always tired every morning.\n∀x (GetManyPromotions(x) → Receive(x, NegativeFeedback)) ::: If"
    ]
  },
  {
    "id": "FOLIO_train_449",
    "context": "If people work well in teams in their workplace, then they get along with all their colleagues at their work. If people come to work every day with a positive attitude, then they work well in teams in their workplace. People either come into work every day with a positive attitude or are always tired every morning. If people get many promotions from their boss at work, then they receive negative feedback from teams at work. Kat is either both a person who works well in teams in their workplace and is always tired every morning, or she neither works well in teams in their workplace nor is always tired every morning.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Kat gets along with her colleagues at her work and receives negative feedback from teams at her work.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nWork(x) ::: x works in a workplace.\nTeam(x) ::: x works in a team.\nColleague(x, y) ::: x is a colleague of y.\nGetAlong(x, y) ::: x gets along with y.\nPositiveAttitude(x) ::: x comes to work every day with a positive attitude.\nWorkWell(x) ::: x works well in teams in their workplace.\nPromotion(x) ::: x gets many promotions from their boss at work.\nFeedback(x) ::: x receives negative feedback from teams at work.\nTired(x) ::: x is always tired every morning.\nPremises:\n∀x (Work(x) → (Team(x) ∨ Colleague(x, y))) ::: If people work in a workplace, then they work in a team or are a colleague of someone.\n∀x (Work(x) → (PositiveAttitude(x) ⊕ Tired(x))) ::: If people work in a workplace, then they come to work every day with a positive attitude or are always tired every morning.\n∀x (PositiveAttitude(x) → WorkWell(x)) ::: If people come to work every day with a positive attitude, then they work well in teams in their workplace.\n∀x (WorkWell(x) → GetAlong(x, y)) ::: If people work well in teams in their workplace, then they get along with all"
    ]
  },
  {
    "id": "FOLIO_train_450",
    "context": "If people work well in teams in their workplace, then they get along with all their colleagues at their work. If people come to work every day with a positive attitude, then they work well in teams in their workplace. People either come into work every day with a positive attitude or are always tired every morning. If people get many promotions from their boss at work, then they receive negative feedback from teams at work. Kat is either both a person who works well in teams in their workplace and is always tired every morning, or she neither works well in teams in their workplace nor is always tired every morning.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Kat either gets along with her colleagues at her work or receives negative feedback from teams at her work.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nWork(x) ::: x works in a workplace.\nTeam(x) ::: x works in a team.\nColleague(x, y) ::: x is a colleague of y.\nGetAlong(x, y) ::: x gets along with y.\nPositiveAttitude(x) ::: x comes to work every day with a positive attitude.\nWorkWell(x) ::: x works well in teams in their workplace.\nPromotion(x) ::: x gets many promotions from their boss at work.\nFeedback(x) ::: x receives negative feedback from teams at work.\nTired(x) ::: x is always tired every morning.\nPremises:\n∀x (Work(x) → (Team(x) ∨ Colleague(x, y))) ::: If people work in a workplace, then they work in a team or are a colleague of y.\n∀x (Work(x) → (PositiveAttitude(x) ⊕ Tired(x))) ::: If people work in a workplace, then they come to work every day with a positive attitude or are always tired every morning.\n∀x (PositiveAttitude(x) → WorkWell(x)) ::: If people come to work every day with a positive attitude, then they work well in teams in their workplace.\n∀x (WorkWell(x) → GetAlong(x, y)) ::: If people work well in teams in their workplace, then they get along with all their colleagues at their work.\n∀x (GetAlong(x, y) → ¬Feedback(x)) ::: If people get along with all their colleagues at their work, then they receive negative feedback from teams at their work.\n∀x (Promotion(x) → Feedback(x)) ::: If people get many promotions from their boss at work, then they receive negative feedback from teams at their work.\n(Work(kat) ∧ PositiveAttitude(kat)) ⊕ ¬(Work(kat) ∨ PositiveAttitude(kat)) ::: Kat is either both a person who works in a workplace and comes to work every day with a positive attitude, or she neither works in a workplace nor comes to work every day with a positive attitude.\nKat ⊕ ¬Kat ::: Kat is either a person who works in a workplace and is always tired every morning, or she neither works in a workplace nor is always tired every morning.\nConclusion:\nGetAlong(kat, y) ⊕ Feedback(kat) ::: Kat either gets along with her colleagues at her work or receives negative feedback from teams at her work.\n------"
    ]
  },
  {
    "id": "FOLIO_train_451",
    "context": "Drishti is open-source. Open-source software is free to modify.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Drishti is free to modify.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nOpenSource(x) ::: x is open-source.\nFreeToModify(x) ::: x is free to modify.\nPremises:\nOpenSource(drishti) ::: Drishti is open-source.\n∀x (OpenSource(x) → FreeToModify(x)) ::: Open-source software is free to modify.\nConclusion:\nFreeToModify(drishti) ::: Drishti is free to modify.\n------\nProblem:\nThe number of people who are not students is greater than the number of people who are students.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The number of people who are not students is greater than the number of people who are students.\n###\nPredicates:\nStudent(x) ::: x is a student.\nPremises:\n∀x (¬Student(x) → ¬Student(x)) ::: The number of people who are not students is greater than the number of people who are students.\nConclusion:\n∀x (¬Student(x) → ¬Student(x)) ::: The number of people who are not students is greater than the number of people who are students.\n------\nProblem:\nThe number of people who are not students is greater than the number of people who are students.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The number of people who are not students is greater than the number of people who are students.\n###\nPredicates:\nStudent(x) ::: x is a student.\nPremises:\n∀x (¬Student(x) → ¬Student(x)) ::: The number of people who are not students is greater than the number of people who are students.\nConclusion:\n∀x (¬Student(x) → ¬Student(x)) ::: The number of people who are not students is greater than the number of people who are students.\n------\nProblem:\nThe number of people who are not students is greater than the number of people who are students.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The number of people who are not students is greater than the number of people who are students.\n###\nPredicates:\nStudent(x) ::: x is a student.\nPremises:\n∀x (¬Student(x) → ¬Student(x)) ::: The number of people who are not students is greater than the number of people who are students.\nConclusion:\n∀x (¬Student(x) → ¬Student(x)) ::: The number of people who are"
    ]
  },
  {
    "id": "FOLIO_train_452",
    "context": "There are five grades including A+, A, B+, B, and C in English. If a student gets A+ in English, then his score is greater than 95. If a student gets A in English, then his score is in the range of 90-95. Zhang got an A in English. Wang's English score is better than Zhang's. Wu's English score is lower than 90.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Zhang's English score is lower than 95.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEnglish(x) ::: x is a student's English score.\nAplus(x) ::: x is a student's English score of A+.\nA(x) ::: x is a student's English score of A.\nBplus(x) ::: x is a student's English score of B+.\nB(x) ::: x is a student's English score of B.\nC(x) ::: x is a student's English score of C.\nBetter(x, y) ::: x's English score is better than y's English score.\nLower(x, y) ::: x's English score is lower than y's English score.\nPremises:\n∀x (Aplus(x) → English(x) ∧ x > 95) ::: If a student gets A+ in English, then his score is greater than 95.\n∀x (A(x) → English(x) ∧ 90 < x ∧ x < 95) ::: If a student gets A in English, then his score is in the range of 90-95.\nEnglish(zhang) ∧ A(zhang) ::: Zhang got an A in English.\nBetter(wang, zhang) ::: Wang's English score is better than Zhang's.\nLower(wu, 90) ::: Wu's English score is lower than 90.\nConclusion:\nLower(zhang, 95) ::: Zhang's English score is lower than 95.\n------\nProblem:\nA person is a student if and only if he is a student. A person is a student if and only if he is a student. A person is a student if and only if he is a student. A person is a student if and only if he is a student. A person is a student if and only if he is a student. A person is a student if and only if he is a student. A person is a student if and only if he is a student. A person is a student if and only if he is a student. A person is a student if and only if he is a student. A person is a student if and only if he is a student. A person is a student if and only if he is a student. A person is a student if and only if he is a student. A person is a student if and only if he is a student. A person is a student if and only if he is a student. A person is a student if and only if he is a student. A person is a student if and only if he is a student. A person is a student if and only if"
    ]
  },
  {
    "id": "FOLIO_train_453",
    "context": "There are five grades including A+, A, B+, B, and C in English. If a student gets A+ in English, then his score is greater than 95. If a student gets A in English, then his score is in the range of 90-95. Zhang got an A in English. Wang's English score is better than Zhang's. Wu's English score is lower than 90.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Wang got an A+ in English.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEnglish(x) ::: x is a student's English score.\nAplus(x) ::: x is a student's English score of A+.\nA(x) ::: x is a student's English score of A.\nBplus(x) ::: x is a student's English score of B+.\nB(x) ::: x is a student's English score of B.\nC(x) ::: x is a student's English score of C.\nBetter(x, y) ::: x's English score is better than y's English score.\nLower(x, y) ::: x's English score is lower than y's English score.\nGreater(x, y) ::: x's English score is greater than y's English score.\nBetween(x, y, z) ::: x is between y and z.\nPremises:\n∀x (English(x) → (Aplus(x) ∨ A(x) ∨ Bplus(x) ∨ B(x) ∨ C(x))) ::: There are five grades including A+, A, B+, B, and C in English.\n∀x (Aplus(x) → Greater(x, 95)) ::: If a student gets A+ in English, then his score is greater than 95.\n∀x (A(x) → Between(x, 90, 95)) ::: If a student gets A in English, then his score is in the range of 90-95.\nEnglish(zhang) ∧ A(zhang) ::: Zhang got an A in English.\nBetter(wang, zhang) ::: Wang's English score is better than Zhang's.\nLower(wu, 90) ::: Wu's English score is lower than 90.\nConclusion:\nAplus(wang) ::: Wang got an A+ in English.\n------\nProblem:\nA person is a student if and only if he is a student. A person is a student if and only if he is a student. A person is a student if and only if he is a student. A person is a student if and only if he is a student. A person is a student if and only if he is a student. A person is a student if and only if he is a student. A person is a student if and only if he is a student. A person is a student if and only if he is a student. A person is a student if and only if he is a student. A person is a student if and only if he is a student. A person"
    ]
  },
  {
    "id": "FOLIO_train_454",
    "context": "There are five grades including A+, A, B+, B, and C in English. If a student gets A+ in English, then his score is greater than 95. If a student gets A in English, then his score is in the range of 90-95. Zhang got an A in English. Wang's English score is better than Zhang's. Wu's English score is lower than 90.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Wu does not get an A or A+ in English.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEnglish(x) ::: x is a student's English score.\nA(x) ::: x gets an A in English.\nAplus(x) ::: x gets an A+ in English.\nBetter(x, y) ::: x's English score is better than y's.\nLower(x, y) ::: x's English score is lower than y's.\nGreater(x, y) ::: x's English score is greater than y's.\nInRange(x, y, z) ::: x's English score is in the range of y and z.\nPremises:\nEnglish(zhang) ∧ A(zhang) ::: Zhang got an A in English.\nEnglish(wang) ∧ Better(wang, zhang) ::: Wang's English score is better than Zhang's.\nEnglish(wu) ∧ Lower(wu, 90) ::: Wu's English score is lower than 90.\nAplus(x) → Greater(x, 95) ::: If a student gets A+ in English, then his score is greater than 95.\nA(x) → InRange(x, 90, 95) ::: If a student gets A in English, then his score is in the range of 90-95.\nConclusion:\n¬(Aplus(wu) ∨ A(wu)) ::: Wu does not get an A or A+ in English.\n------\nProblem:\nA person is a student if and only if he is a student. A person is a student if and only if he is a student. A person is a student if and only if he is a student. A person is a student if and only if he is a student. A person is a student if and only if he is a student. A person is a student if and only if he is a student. A person is a student if and only if he is a student. A person is a student if and only if he is a student. A person is a student if and only if he is a student. A person is a student if and only if he is a student. A person is a student if and only if he is a student. A person is a student if and only if he is a student. A person is a student if and only if he is a student. A person is a student if and only if he is a student. A person is a student if and only if he is a student. A person is a student if and only if he is a student. A person is a student if and only if he is a student. A person is a student if and only if he is a student. A person"
    ]
  },
  {
    "id": "FOLIO_train_455",
    "context": "Olivia doesn't prefer warm temperature during the day. When Olivia sleeps, she prefers cool temperature. Olivia sleeps during the night. Olivia works during the day. Olivia either works or sleeps. The time is either the day or the night. Olivia either prefers warm temperature or prefers cool temperature.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? At all times, Olivia prefers cool temperature.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPrefer(x, y) ::: x prefers y.\nWork(x) ::: x works.\nSleep(x) ::: x sleeps.\nDay(x) ::: x is the day.\nNight(x) ::: x is the night.\nPremises:\n¬Prefer(olivia, warm) ∧ Prefer(olivia, cool) ∧ Sleep(olivia) ∧ Day(day) ∧ Night(night) ∧ Work(day) ∧ Work(night) ∧ Sleep(day) ∧ Sleep(night) ∧ (Day(day) ∨ Night(day)) ∧ (Day(night) ∨ Night(night)) ∧ (Work(olivia) ∨ Sleep(olivia)) ∧ (Day(olivia) ∨ Night(olivia)) ::: Olivia doesn't prefer warm temperature during the day. When Olivia sleeps, she prefers cool temperature. Olivia sleeps during the night. Olivia works during the day. Olivia either works or sleeps. The time is either the day or the night. Olivia either prefers warm temperature or prefers cool temperature.\nConclusion:\n∀x (Day(x) ∨ Night(x)) → Prefer(olivia, cool) ::: At all times, Olivia prefers cool temperature.\n------\nProblem:\nA person is either a student or a teacher. A student is either a graduate student or an undergraduate student. A graduate student is either a master's student or a doctoral student. A master's student is either a student in the department of computer science or a student in the department of mathematics. A doctoral student is either a student in the department of computer science or a student in the department of mathematics. A teacher is either a professor or an instructor. A professor is either a professor in the department of computer science or a professor in the department of mathematics. An instructor is either an instructor in the department of computer science or an instructor in the department of mathematics.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? A person is a student in the department of computer science.\nBased on the above information, is the following statement true, false, or uncertain? A person is a professor in the department of mathematics.\nBased on the above information, is the following statement true, false, or uncertain? A person is a student in the department of mathematics.\nBased on the above information, is the following statement true, false, or uncertain? A person is a professor in the department of computer science.\nBased on the above"
    ]
  },
  {
    "id": "FOLIO_train_456",
    "context": "Taylor Swift gives a commencement speech in New York University in 2022. Both Columbia University and New York University are located in Manhattan. Taylor Swift has received three Grammy Album of the Year Awards. Columbia University is one of the Ivy League schools.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Taylor Swift delivers a commencement speech in Manhattan.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGive(x, y) ::: x gives a speech in y.\nLocated(x, y) ::: x is located in y.\nReceive(x, y) ::: x receives y.\nIvyLeague(x) ::: x is one of the Ivy League schools.\nPremises:\nGive(taylorSwift, newYorkUniversity) ::: Taylor Swift gives a commencement speech in New York University in 2022.\nLocated(columbiaUniversity, manhattan) ∧ Located(newYorkUniversity, manhattan) ::: Both Columbia University and New York University are located in Manhattan.\nReceive(taylorSwift, grammyAlbumOfTheYearAward) ∧ Receive(taylorSwift, grammyAlbumOfTheYearAward) ∧ Receive(taylorSwift, grammyAlbumOfTheYearAward) ::: Taylor Swift has received three Grammy Album of the Year Awards.\nIvyLeague(columbiaUniversity) ::: Columbia University is one of the Ivy League schools.\nConclusion:\nGive(taylorSwift, manhattan) ::: Taylor Swift delivers a commencement speech in Manhattan.\n------\nProblem:\nA person is a student if and only if the person is a student at a university. A person is a student at a university if and only if the person is enrolled in a course at the university. A person is enrolled in a course at a university if and only if the person is enrolled in a course at the university and the course is offered by the university. A person is enrolled in a course at a university if and only if the person is enrolled in a course at the university and the course is offered by the university. A person is enrolled in a course at a university if and only if the person is enrolled in a course at the university and the course is offered by the university. A person is enrolled in a course at a university if and only if the person is enrolled in a course at the university and the course is offered by the university. A person is enrolled in a course at a university if and only if the person is enrolled in a course at the university and the course is offered by the university. A person is enrolled in a course at a university if and only if the person is enrolled in a course at the university and the course is offered by the university. A person is enrolled in a course at a university if and only if the person is enrolled in a course at the university and the course is offered by the university. A person is enrolled in a course at a university if and only if the person is enrolled in a course at the university and"
    ]
  },
  {
    "id": "FOLIO_train_457",
    "context": "Taylor Swift gives a commencement speech in New York University in 2022. Both Columbia University and New York University are located in Manhattan. Taylor Swift has received three Grammy Album of the Year Awards. Columbia University is one of the Ivy League schools.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The commencement speaker of NYU does not have any album.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGiveSpeech(x, y) ::: x gives a commencement speech in y.\nLocated(x, y) ::: x is located in y.\nReceiveAward(x, y) ::: x has received y.\nIvyLeague(x) ::: x is one of the Ivy League schools.\nAlbum(x) ::: x is an album.\nPremises:\nGiveSpeech(taylorSwift, newYorkUniversity) ::: Taylor Swift gives a commencement speech in New York University in 2022.\nLocated(columbiaUniversity, manhattan) ∧ Located(newYorkUniversity, manhattan) ::: Both Columbia University and New York University are located in Manhattan.\nReceiveAward(taylorSwift, grammyAlbumOfTheYearAward) ∧ ReceiveAward(taylorSwift, grammyAlbumOfTheYearAward2) ∧ ReceiveAward(taylorSwift, grammyAlbumOfTheYearAward3) ::: Taylor Swift has received three Grammy Album of the Year Awards.\nIvyLeague(columbiaUniversity) ::: Columbia University is one of the Ivy League schools.\nConclusion:\n¬∃x (GiveSpeech(x, newYorkUniversity) ∧ Album(x)) ::: The commencement speaker of NYU does not have any album.\n------\nProblem:\nThe first-order logic formular is defined as follows:\n1) logical conjunction of expr1 and expr2: expr1 ∧ expr2\n2) logical disjunction of expr1 and expr2: expr1 ∨ expr2\n3) logical exclusive disjunction of expr1 and expr2: expr1 ⊕ expr2\n4) logical negation of expr1: ¬expr1\n5) expr1 implies expr2: expr1 → expr2\n6) expr1 if and only if expr2: expr1 ↔ expr2\n7) logical universal quantification: ∀x\n8) logical existential quantification: ∃x\n------\nProblem:\nThe first-order logic formular is defined as follows:\n1) logical conjunction of expr1 and expr2: expr1 ∧ expr2\n2) logical disjunction of expr1 and expr2: expr1 ∨ expr2\n3) logical exclusive disjunction of expr1 and expr2: expr1 ⊕ expr2\n4) logical negation of expr1: ¬expr1\n5) expr1 implies expr2: expr1 → expr2\n6) expr"
    ]
  },
  {
    "id": "FOLIO_train_458",
    "context": "Customers either choose Plan A or Plan B. All who choose Plan B are rewarded with a $30 gift card. There are no customers who do not choose any plans. No customers rewarded a $30 gift card are older than 80. Customers are either older than 80 or are currently studying at school. James is not a customer who is currently studying at school.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James is a customer who does not choose any plans.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCustomer(x) ::: x is a customer.\nChoose(x, y) ::: x chooses plan y.\nReward(x, y) ::: x is rewarded with gift card y.\nOlderThan(x, y) ::: x is older than y.\nCurrentlyStudying(x) ::: x is currently studying at school.\nPremises:\n∀x (Customer(x) → (Choose(x, planA) ∨ Choose(x, planB))) ::: Customers either choose Plan A or Plan B.\n∀x (Choose(x, planB) → Reward(x, $30)) ::: All who choose Plan B are rewarded with a $30 gift card.\n∀x (Customer(x) → ¬(Choose(x, planA) ∧ Choose(x, planB))) ::: There are no customers who do not choose any plans.\n∀x (Reward(x, $30) → ¬(OlderThan(x, 80))) ::: No customers rewarded a $30 gift card are older than 80.\nCurrentlyStudying(james) ⊕ ¬CurrentlyStudying(james) ::: Customers are either older than 80 or are currently studying at school.\n∀x (CurrentlyStudying(x) → ¬Customer(x)) ::: James is not a customer who is currently studying at school.\nConclusion:\n¬(Customer(james) ∧ Choose(james, planA) ∧ Choose(james, planB)) ::: James is a customer who does not choose any plans.\n------\nProblem:\nAll people who are not students are either employed or unemployed. All people who are employed are either employed by a company or employed by a government agency. All people who are employed by a company are either employed by a company in the United States or employed by a company in Canada. All people who are employed by a government agency are either employed by a government agency in the United States or employed by a government agency in Canada. All people who are employed by a government agency in the United States are either employed by a government agency in the United States in the state of California or employed by a government agency in the United States in the state of New York. All people who are employed by a government agency in the state of California are either employed by a government agency in the state of California in the city of Los Angeles or employed by a government agency in the state of California in the city of San Francisco. All people who are employed by a government agency in the state of New York are either employed by a government agency in the state of New York in the city of New"
    ]
  },
  {
    "id": "FOLIO_train_459",
    "context": "Customers either choose Plan A or Plan B. All who choose Plan B are rewarded with a $30 gift card. There are no customers who do not choose any plans. No customers rewarded a $30 gift card are older than 80. Customers are either older than 80 or are currently studying at school. James is not a customer who is currently studying at school.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James is a customer who chooses Plan A or does not choose any plans.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCustomer(x) ::: x is a customer.\nChoose(x, y) ::: x chooses plan y.\nReward(x, y) ::: x is rewarded with gift card y.\nOlderThan(x, y) ::: x is older than y.\nCurrentlyStudying(x) ::: x is currently studying at school.\nPremises:\n∀x (Choose(x, planA) ∨ Choose(x, planB)) ::: Customers either choose Plan A or Plan B.\n∀x (Choose(x, planB) → Reward(x, $30)) ::: All who choose Plan B are rewarded with a $30 gift card.\n∀x (Customer(x) → (Choose(x, planA) ∨ Choose(x, planB))) ::: There are no customers who do not choose any plans.\n∀x (Reward(x, $30) → ¬OlderThan(x, 80)) ::: No customers rewarded a $30 gift card are older than 80.\nCurrentlyStudying(james) ⊕ ¬CurrentlyStudying(james) ::: Customers are either older than 80 or are currently studying at school.\n∀x (CurrentlyStudying(x) → ¬Customer(x)) ::: James is not a customer who is currently studying at school.\nConclusion:\nChoose(james, planA) ∨ ¬Choose(james, planA) ::: James is a customer who chooses Plan A or does not choose any plans.\n------\nProblem:\nAll people who are not students are either employed or unemployed. All people who are employed are either employed full-time or employed part-time. All people who are employed full-time are employed by a company. All people who are employed by a company are either employed by a company in the United States or employed by a company in Canada. All people who are employed by a company in the United States are employed by a company in the United States that is based in New York. All people who are employed by a company in Canada are employed by a company in Canada that is based in Toronto. All people who are employed by a company in the United States that is based in New York are employed by a company in the United States that is based in New York that is based in Manhattan. All people who are employed by a company in Canada that is based in Toronto are employed by a company in Canada that is based in Toronto that is based in Ontario. All people who are employed by a company in the United States that is based in New York that is based in Manhattan are employed by a company in the United States that"
    ]
  },
  {
    "id": "FOLIO_train_460",
    "context": "Customers either choose Plan A or Plan B. All who choose Plan B are rewarded with a $30 gift card. There are no customers who do not choose any plans. No customers rewarded a $30 gift card are older than 80. Customers are either older than 80 or are currently studying at school. James is not a customer who is currently studying at school.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Suppose James is a customer who chooses Plan A or does not choose any plans, then he is either rewarded a $30 gift card or chooses Plan B.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCustomer(x) ::: x is a customer.\nChoose(x, y) ::: x chooses plan y.\nReward(x, y) ::: x is rewarded with a gift card worth y dollars.\nOlderThan(x, y) ::: x is older than y.\nCurrentlyStudying(x) ::: x is currently studying at school.\nPremises:\n∀x (Choose(x, planA) ∨ Choose(x, planB)) ::: Customers either choose Plan A or Plan B.\n∀x (Choose(x, planB) → Reward(x, 30)) ::: All who choose Plan B are rewarded with a $30 gift card.\n∀x (Customer(x) → ¬(Choose(x, planA) ∧ Choose(x, planB))) ::: There are no customers who do not choose any plans.\n∀x (Reward(x, 30) → ¬OlderThan(x, 80)) ::: No customers rewarded a $30 gift card are older than 80.\n∀x (Customer(x) → (OlderThan(x, 80) ∨ CurrentlyStudying(x))) ::: Customers are either older than 80 or are currently studying at school.\n∀x (Customer(james) ∧ CurrentlyStudying(james)) ::: James is not a customer who is currently studying at school.\nConclusion:\n∀x (Customer(x) ∧ (Choose(x, planA) ∨ ¬Choose(x, planA)) → (Reward(x, 30) ∨ Choose(x, planB))) ::: Suppose James is a customer who chooses Plan A or does not choose any plans, then he is either rewarded a $30 gift card or chooses Plan B.\n------"
    ]
  },
  {
    "id": "FOLIO_train_461",
    "context": "Detroit City is a horse. Some horses are racehorses. If a horse falls during a race, then it dies. Detroit City fell during a race. A horse is a racehorse if it is in a race.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Detroit City has been in multiple races.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDetroitCity(x) ::: x is Detroit City.\nHorse(x) ::: x is a horse.\nRacehorse(x) ::: x is a racehorse.\nFall(x) ::: x falls during a race.\nDie(x) ::: x dies.\nIn(x, y) ::: x is in race y.\nPremises:\nDetroitCity(detroitCity) ::: Detroit City is a horse.\n∀x (Horse(x) → (Fall(x) → Die(x))) ::: If a horse falls during a race, then it dies.\n∀x (Fall(x) → In(x, race)) ::: A horse is a racehorse if it is in a race.\nDetroitCity(detroitCity) ∧ Fall(detroitCity) ::: Detroit City fell during a race.\nConclusion:\n∃x ∃y (In(detroitCity, y) ∧ Race(y)) ::: Detroit City has been in multiple races.\n------\nProblem:\nA person is a student if he or she is enrolled in a university. A person is a student if he or she is enrolled in a college. A person is a student if he or she is enrolled in a high school. A person is a student if he or she is enrolled in a middle school. A person is a student if he or she is enrolled in a primary school. A person is a student if he or she is enrolled in a kindergarten. A person is a student if he or she is enrolled in a nursery school. A person is a student if he or she is enrolled in a preschool. A person is a student if he or she is enrolled in a daycare. A person is a student if he or she is enrolled in a playgroup. A person is a student if he or she is enrolled in a toddler group. A person is a student if he or she"
    ]
  },
  {
    "id": "FOLIO_train_462",
    "context": "Detroit City is a horse. Some horses are racehorses. If a horse falls during a race, then it dies. Detroit City fell during a race. A horse is a racehorse if it is in a race.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Detroit City is dead.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDetroitCity(x) ::: x is Detroit City.\nHorse(x) ::: x is a horse.\nRacehorse(x) ::: x is a racehorse.\nFall(x) ::: x falls during a race.\nDie(x) ::: x dies.\nInRace(x) ::: x is in a race.\nPremises:\nDetroitCity(detroitCity) ::: Detroit City is a horse.\n∀x (Horse(x) → (Fall(x) → Die(x))) ::: If a horse falls during a race, then it dies.\n∀x (Fall(x) → InRace(x)) ::: A horse is a racehorse if it is in a race.\nDetroitCity(detroitCity) ∧ Fall(detroitCity) ::: Detroit City fell during a race.\nConclusion:\nDie(detroitCity) ::: Detroit City is dead.\n------\nProblem:\nA person is a student if he or she is enrolled in a university. A person is a student if he or she is enrolled in a college. A person is a student if he or she is enrolled in a high school. A person is a student if he or she is enrolled in a middle school. A person is a student if he or she is enrolled in a primary school. A person is a student if he or she is enrolled in a kindergarten. A person is a student if he or she is enrolled in a nursery school. A person is a student if he or she is enrolled in a preschool. A person is a student if he or she is enrolled in a daycare. A person is a student if he or she is enrolled in a playgroup. A person is a student if he or she is enrolled in a toddler group. A person is a student if he or she is enrolled in a creche. A person is a student if he or she is enrolled in a cr"
    ]
  },
  {
    "id": "FOLIO_train_463",
    "context": "Detroit City is a horse. Some horses are racehorses. If a horse falls during a race, then it dies. Detroit City fell during a race. A horse is a racehorse if it is in a race.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Detroit City is a racehorse.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDetroitCity(x) ::: x is Detroit City.\nHorse(x) ::: x is a horse.\nRacehorse(x) ::: x is a racehorse.\nFall(x) ::: x falls during a race.\nDie(x) ::: x dies.\nInRace(x) ::: x is in a race.\nPremises:\nDetroitCity(detroitCity) ::: Detroit City is a horse.\n∀x (Horse(x) → (Fall(x) → Die(x))) ::: If a horse falls during a race, then it dies.\n∀x (Fall(x) → InRace(x)) ::: A horse is a racehorse if it is in a race.\nDetroitCity(detroitCity) ∧ Fall(detroitCity) ::: Detroit City fell during a race.\nConclusion:\nRacehorse(detroitCity) ::: Detroit City is a racehorse.\n------\nProblem:\nA person is a student if he or she is enrolled in a university. A person is a student if he or she is enrolled in a college. A person is a student if he or she is enrolled in a high school. A person is a student if he or she is enrolled in a middle school. A person is a student if he or she is enrolled in a primary school. A person is a student if he or she is enrolled in a kindergarten. A person is a student if he or she is enrolled in a nursery school. A person is a student if he or she is enrolled in a preschool. A person is a student if he or she is enrolled in a daycare center. A person is a student if he or she is enrolled in a playgroup. A person is a student if he or she is enrolled in a toddler group. A person is a student if he or she is enrolled in a creche. A person is a student if he or"
    ]
  },
  {
    "id": "FOLIO_train_464",
    "context": "Frederick Monhoff was an architect, artist, and illustrator. Frederick Monhoff was an American. An artist is good at painting or music. All Americans speak English.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Frederick Monhoff is good at music.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nArtist(x) ::: x is an artist.\nIllustrator(x) ::: x is an illustrator.\nArchitect(x) ::: x is an architect.\nGoodAt(x, y) ::: x is good at y.\nSpeak(x, y) ::: x speaks y.\nPremises:\nArtist(frederick) ∧ Illustrator(frederick) ∧ Architect(frederick) ::: Frederick Monhoff was an architect, artist, and illustrator.\nArtist(frederick) ∧ ¬GoodAt(frederick, music) ::: Frederick Monhoff was an artist and was not good at music.\nAmerican(frederick) ::: Frederick Monhoff was an American.\n∀x (Artist(x) → (Painting(y) ∨ Music(y))) ::: An artist is good at painting or music.\n∀x (American(x) → Speak(x, English)) ::: All Americans speak English.\nConclusion:\nGoodAt(frederick, music) ::: Frederick Monhoff is good at music.\n------\nProblem:\nA person is a student if and only if the person is a student. A person is a student if and only if the person is a student. A person is a student if and only if the person is a student. A person is a student if and only if the person is a student. A person is a student if and only if the person is a student. A person is a student if and only if the person is a student. A person is a student if and only if the person is a student. A person is a student if and only if the person is a student. A person is a student if and only if the person is a student. A person is a student if and only if the person is a student. A person is a student if and only if the person is a student. A person is a student if and only if the person"
    ]
  },
  {
    "id": "FOLIO_train_465",
    "context": "Frederick Monhoff was an architect, artist, and illustrator. Frederick Monhoff was an American. An artist is good at painting or music. All Americans speak English.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There is no illustrator who speaks English.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nArtist(x) ::: x is an artist.\nIllustrator(x) ::: x is an illustrator.\nAmerican(x) ::: x is an American.\nGoodAt(x, y) ::: x is good at y.\nSpeak(x, y) ::: x speaks y.\nPremises:\nArtist(frederick) ∧ Illustrator(frederick) ::: Frederick Monhoff was an architect, artist, and illustrator.\nAmerican(frederick) ::: Frederick Monhoff was an American.\n∀x (Artist(x) → (GoodAt(x, painting) ∨ GoodAt(x, music))) ::: An artist is good at painting or music.\n∀x (American(x) → Speak(x, english)) ::: All Americans speak English.\nConclusion:\n¬∃x (Illustrator(x) ∧ Speak(x, english)) ::: There is no illustrator who speaks English.\n------\nProblem:\nA person is a student if and only if the person is a student. A person is a student if and only if the person is a student. A person is a student if and only if the person is a student. A person is a student if and only if the person is a student. A person is a student if and only if the person is a student. A person is a student if and only if the person is a student. A person is a student if and only if the person is a student. A person is a student if and only if the person is a student. A person is a student if and only if the person is a student. A person is a student if and only if the person is a student. A person is a student if and only if the person is a student. A person is a student if and only if the person is a student. A person is a student if and only if the person is a student. A person is a student if and only if the person"
    ]
  },
  {
    "id": "FOLIO_train_466",
    "context": "Miroslav Fiedler was a Czech mathematician. Miroslav Fiedler is known for his contributions to linear algebra and graph theory. Miroslav Fiedler is honored by the Fiedler eigenvalue. Fiedler eigenvalue is the second smallest eigenvalue of the graph Laplacian.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Miroslav Fiedler is honored by the second smallest eigenvalue of the graph Laplacian.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCzech(x) ::: x is a Czech person.\nMathematician(x) ::: x is a mathematician.\nContribute(x, y) ::: x contributes to y.\nHonor(x, y) ::: x is honored by y.\nEigenvalue(x) ::: x is an eigenvalue.\nGraph(x) ::: x is a graph.\nLaplacian(x) ::: x is a graph Laplacian.\nSecondSmallest(x, y) ::: x is the second smallest of y.\nPremises:\nCzech(miroslav) ∧ Mathematician(miroslav) ∧ Contribute(miroslav, linearAlgebra) ∧ Contribute(miroslav, graphTheory) ::: Miroslav Fiedler was a Czech mathematician.\nCzech(miroslav) ∧ Mathematician(miroslav) ∧ Contribute(miroslav, linearAlgebra) ∧ Contribute(miroslav, graphTheory) ∧ Honor(miroslav, fiedlerEigenvalue) ::: Miroslav Fiedler is known for his contributions to linear algebra and graph theory.\nCzech(miroslav) ∧ Mathematician(miroslav) ∧ Contribute(miroslav, linearAlgebra) ∧ Contribute(miroslav, graphTheory) ∧ Honor(miroslav, fiedlerEigenvalue) ∧ Eigenvalue(fiedlerEigenvalue) ::: Miroslav Fiedler is honored by the Fiedler eigenvalue.\nEigenvalue(fiedlerEigenvalue) ∧ Graph(graph) ∧ Laplacian(graphLaplacian) �"
    ]
  },
  {
    "id": "FOLIO_train_467",
    "context": "Miroslav Fiedler was a Czech mathematician. Miroslav Fiedler is known for his contributions to linear algebra and graph theory. Miroslav Fiedler is honored by the Fiedler eigenvalue. Fiedler eigenvalue is the second smallest eigenvalue of the graph Laplacian.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Miroslav Fiedler was a French mathematician.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCzech(x) ::: x is a Czech person.\nMathematician(x) ::: x is a mathematician.\nKnownFor(x, y) ::: x is known for y.\nHonoredBy(x, y) ::: x is honored by y.\nEigenvalue(x) ::: x is an eigenvalue.\nGraph(x) ::: x is a graph.\nLaplacian(x) ::: x is a Laplacian.\nSecondSmallest(x, y) ::: x is the second smallest of y.\nPremises:\nCzech(miroslav) ∧ Mathematician(miroslav) ∧ KnownFor(miroslav, linearAlgebra) ∧ KnownFor(miroslav, graphTheory) ∧ HonoredBy(miroslav, fiedlerEigenvalue) ∧ Eigenvalue(fiedlerEigenvalue) ∧ Graph(graph) ∧ Laplacian(laplacian) ∧ SecondSmallest(fiedlerEigenvalue, laplacian) ::: Miroslav Fiedler was a Czech mathematician. Miroslav Fiedler is known for his contributions to linear algebra and graph theory. Miroslav Fiedler is honored by the Fiedler eigenvalue. Fiedler eigenvalue is the second smallest eigenvalue of the graph Laplacian.\nConclusion:\nFrench(miroslav) ::: Miroslav Fiedler was a French mathematician.\n------\nProblem:\nThe first-order logic formular is defined as follows:\n1) logical conjunction of expr1 and expr2: expr1 ∧ expr2\n2) logical disjunction of expr1 and expr2: expr1 ∨ expr2\n3) logical exclusive disjunction of expr1 and"
    ]
  },
  {
    "id": "FOLIO_train_468",
    "context": "Miroslav Fiedler was a Czech mathematician. Miroslav Fiedler is known for his contributions to linear algebra and graph theory. Miroslav Fiedler is honored by the Fiedler eigenvalue. Fiedler eigenvalue is the second smallest eigenvalue of the graph Laplacian.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A Czech mathematician is known for his contributions to linear algebra and graph theory.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCzech(x) ::: x is a Czech person.\nMathematician(x) ::: x is a mathematician.\nKnown(x, y) ::: x is known for y.\nContribution(x, y) ::: x is a contribution to y.\nLinearAlgebra(x) ::: x is linear algebra.\nGraphTheory(x) ::: x is graph theory.\nEigenvalue(x) ::: x is an eigenvalue.\nGraphLaplacian(x) ::: x is the graph Laplacian.\nPremises:\nCzech(miroslav) ∧ Mathematician(miroslav) ∧ Known(miroslav, contributions) ∧ Contribution(miroslav, linearAlgebra) ∧ Contribution(miroslav, graphTheory) ∧ Eigenvalue(fiedlerEigenvalue) ∧ GraphLaplacian(graphLaplacian) ∧ FiedlerEigenvalue(fiedlerEigenvalue) ∧ FiedlerEigenvalue(graphLaplacian) ::: Miroslav Fiedler was a Czech mathematician. Miroslav Fiedler is known for his contributions to linear algebra and graph theory. Miroslav Fiedler is honored by the Fiedler eigenvalue. Fiedler eigenvalue is the second smallest eigenvalue of the graph Laplacian.\nConclusion:\nKnown(miroslav, contributions) ∧ Contribution(miroslav, linearAlgebra) ∧ Contribution(miroslav, graphTheory) ::: A Czech mathematician is known for his contributions to linear algebra and graph theory.\n------\nProblem:\nThe first-order logic formular is defined as follows:\n1) logical conjunction of expr1 and expr2: expr1 �"
    ]
  },
  {
    "id": "FOLIO_train_469",
    "context": "A laptop is a computer. You can play games on a computer. A phone is not a computer.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? You can play games on a laptop.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLaptop(x) ::: x is a laptop.\nComputer(x) ::: x is a computer.\nPhone(x) ::: x is a phone.\nPlay(x, y) ::: x can play y.\nPremises:\nLaptop(laptop) ::: A laptop is a computer.\n∀x (Computer(x) → Play(x, games)) ::: You can play games on a computer.\n¬Phone(laptop) ::: A phone is not a computer.\nConclusion:\nPlay(laptop, games) ::: You can play games on a laptop.\n------\nProblem:\nA person is a student. A student is a person. A person is a human. A human is a mammal. A mammal is an animal. An animal is a living thing. A living thing is a thing. A thing is an object. An object is a physical entity. A physical entity is a material object. A material object is a substance. A substance is a body. A body is a physical object. A physical object is a material object. A material object is a substance. A substance is a body. A body is a physical object. A physical object is a material object. A material object is a substance. A substance is a body. A body is a physical object. A physical object is a material object. A material object is a substance. A substance is a body. A body is a physical object. A physical object is a material object. A material object is a substance. A substance is a body. A body is a physical object. A physical object is a material object. A material object is a substance. A substance is a body. A body is a physical object. A physical object is a material object. A material object is a substance. A substance is a body. A body is a physical object. A physical object is a material object. A material object is a substance. A substance is a body. A body is a physical object. A physical object is a material object. A material object is a substance. A"
    ]
  },
  {
    "id": "FOLIO_train_470",
    "context": "A laptop is a computer. You can play games on a computer. A phone is not a computer.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? You can not play games on a phone.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLaptop(x) ::: x is a laptop.\nComputer(x) ::: x is a computer.\nPhone(x) ::: x is a phone.\nPlay(x, y) ::: x can play y.\nPremises:\nLaptop(laptop) ::: A laptop is a computer.\n∀x (Computer(x) → Play(x, games)) ::: You can play games on a computer.\n¬Phone(laptop) ::: A phone is not a computer.\nConclusion:\n¬Play(phone, games) ::: You can not play games on a phone.\n------"
    ]
  },
  {
    "id": "FOLIO_train_471",
    "context": "Walter Folger Brown was an American politician and lawyer, and served as the postmaster general. Walter Folger Brown graduated from Harvard University with a Bachelors of Arts. While they were both in Toledo, Walter Folger Brown's father practiced law with Walter Folger Brown. Katherin Hafer married Walter Folger Brown.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Walter Folger Brown graduated with a Bachelors of Arts.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGraduate(x, y) ::: x graduated with y.\nMarry(x, y) ::: x married y.\nPractice(x, y) ::: x practiced law with y.\nPostmasterGeneral(x) ::: x was the postmaster general.\nPremises:\nGraduate(wf, ba) ::: Walter Folger Brown graduated from Harvard University with a Bachelors of Arts.\nMarry(wf, katherin) ::: Katherin Hafer married Walter Folger Brown.\nPractice(wf, father) ::: While they were both in Toledo, Walter Folger Brown's"
    ]
  },
  {
    "id": "FOLIO_train_472",
    "context": "Walter Folger Brown was an American politician and lawyer, and served as the postmaster general. Walter Folger Brown graduated from Harvard University with a Bachelors of Arts. While they were both in Toledo, Walter Folger Brown's father practiced law with Walter Folger Brown. Katherin Hafer married Walter Folger Brown.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Walter Folger Brown's father was in Toledo.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGraduate(x, y) ::: x graduated from y.\nPractice(x, y) ::: x practiced law with y.\nMarry(x, y) ::: x married y.\nPostmasterGeneral(x) ::: x was the postmaster general.\nPremises:\nGraduate(wf, harvard) ∧ PostmasterGeneral(wf) ::: Walter Folger Brown was an American politician and lawyer, and served as the postmaster general.\nGraduate(wf, harvard) ::: Walter Folger Brown graduated from Harvard University with a Bachelors of Arts.\nPractice(wf"
    ]
  },
  {
    "id": "FOLIO_train_473",
    "context": "Walter Folger Brown was an American politician and lawyer, and served as the postmaster general. Walter Folger Brown graduated from Harvard University with a Bachelors of Arts. While they were both in Toledo, Walter Folger Brown's father practiced law with Walter Folger Brown. Katherin Hafer married Walter Folger Brown.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Walter Folger Brown was not in Toledo.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGraduate(x, y) ::: x graduated from y.\nPractice(x, y) ::: x practiced law with y.\nMarry(x, y) ::: x married y.\nPostmasterGeneral(x) ::: x was the postmaster general.\nPremises:\nGraduate(wf, harvard) ∧ PostmasterGeneral(wf) ::: Walter Folger Brown graduated from Harvard University with a Bachelors of Arts. Walter Folger Brown was the postmaster general.\nPractice(wf, father) ∧ Practice(father, wf) ::: While they were both in"
    ]
  },
  {
    "id": "FOLIO_train_474",
    "context": "All products shipped from China are made in China. All products sold in JD are shipped from China. All products commonly used in China are sold in JD. All products favored by young people are commonly used in China. MacBook is not made in China and is not commonly used in China.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The MacBook is favored by young people.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProduct(x) ::: x is a product.\nShip(x, y) ::: x is shipped from y.\nMade(x, y) ::: x is made in y.\nSold(x, y) ::: x is sold in y.\nCommonlyUsed(x, y) ::: x is commonly used in y.\nFavored(x, y) ::: x is favored by y.\nPremises:\n∀x (Ship(x, china) → Made(x, china)) ::: All products shipped from China are made in China.\n∀x (Sold(x, j"
    ]
  },
  {
    "id": "FOLIO_train_475",
    "context": "All products shipped from China are made in China. All products sold in JD are shipped from China. All products commonly used in China are sold in JD. All products favored by young people are commonly used in China. MacBook is not made in China and is not commonly used in China.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The MacBook is made in China.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMadeIn(x, y) ::: x is made in y.\nShippedFrom(x, y) ::: x is shipped from y.\nSoldIn(x, y) ::: x is sold in y.\nCommonlyUsedIn(x, y) ::: x is commonly used in y.\nFavoredBy(x, y) ::: x is favored by y.\nProduct(x) ::: x is a product.\nChina(x) ::: x is China.\nJD(x) ::: x is JD.\nMacBook(x) ::: x is MacBook.\nPremises:"
    ]
  },
  {
    "id": "FOLIO_train_476",
    "context": "All products shipped from China are made in China. All products sold in JD are shipped from China. All products commonly used in China are sold in JD. All products favored by young people are commonly used in China. MacBook is not made in China and is not commonly used in China.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The MacBook is favored by young people and commonly used in China.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProduct(x) ::: x is a product.\nShipped(x, y) ::: x is shipped from y.\nMade(x, y) ::: x is made in y.\nSold(x, y) ::: x is sold in y.\nCommonlyUsed(x, y) ::: x is commonly used in y.\nFavored(x, y) ::: x is favored by y.\nPremises:\n∀x (Shipped(x, china) → Made(x, china)) ::: All products shipped from China are made in China.\n∀x (Sold(x"
    ]
  },
  {
    "id": "FOLIO_train_477",
    "context": "All products shipped from China are made in China. All products sold in JD are shipped from China. All products commonly used in China are sold in JD. All products favored by young people are commonly used in China. MacBook is not made in China and is not commonly used in China.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The MacBook is either favored by young people or commonly used in China.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProduct(x) ::: x is a product.\nShipped(x, y) ::: x is shipped from y.\nMade(x, y) ::: x is made in y.\nSold(x, y) ::: x is sold in y.\nCommonlyUsed(x, y) ::: x is commonly used in y.\nFavored(x, y) ::: x is favored by y.\nPremises:\n∀x (Shipped(x, china) → Made(x, china)) ::: All products shipped from China are made in China.\n∀x (Sold(x"
    ]
  },
  {
    "id": "FOLIO_train_478",
    "context": "All products shipped from China are made in China. All products sold in JD are shipped from China. All products commonly used in China are sold in JD. All products favored by young people are commonly used in China. MacBook is not made in China and is not commonly used in China.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If the MacBook is favored by young people and commonly used in China, then it is neither favored by young people nor made in China.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProduct(x) ::: x is a product.\nShipped(x, y) ::: x is shipped from y.\nMade(x, y) ::: x is made in y.\nSold(x, y) ::: x is sold in y.\nCommonlyUsed(x, y) ::: x is commonly used in y.\nFavored(x, y) ::: x is favored by y.\nPremises:\n∀x (Shipped(x, china) → Made(x, china)) ::: All products shipped from China are made in China.\n∀x (Sold(x"
    ]
  },
  {
    "id": "FOLIO_train_479",
    "context": "Oxford Circus is a road junction connecting Oxford Street and Regent Street. Oxford Street is in London. John Nash designed the construction on Regent Street. John Nash designed Oxford Circus. John Nash is an architect in British. Oxford Circus is the entrance to Oxford Circus tube station which is a part of the Central line in 1900.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Oxford Circus is in London.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRoad(x) ::: x is a road.\nJunction(x) ::: x is a road junction.\nConnect(x, y) ::: x connects y.\nIn(x, y) ::: x is in y.\nDesign(x, y) ::: x designed y.\nArchitect(x) ::: x is an architect.\nBritish(x) ::: x is a British person.\nConstruction(x) ::: x is a construction.\nEntrance(x, y) ::: x is the entrance to y.\nTubeStation(x) ::: x is a tube station.\nCentral"
    ]
  },
  {
    "id": "FOLIO_train_480",
    "context": "Oxford Circus is a road junction connecting Oxford Street and Regent Street. Oxford Street is in London. John Nash designed the construction on Regent Street. John Nash designed Oxford Circus. John Nash is an architect in British. Oxford Circus is the entrance to Oxford Circus tube station which is a part of the Central line in 1900.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Oxford Circus is designed by a British architect.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRoadJunction(x) ::: x is a road junction.\nConnect(x, y) ::: x connects to y.\nIn(x, y) ::: x is in y.\nDesign(x, y) ::: x designed y.\nArchitect(x) ::: x is an architect.\nBritish(x) ::: x is a British person.\nConstruction(x) ::: x is a construction.\nPart(x, y) ::: x is a part of y.\nTubeStation(x) ::: x is a tube station.\nCentralLine(x) ::: x is a part of the Central line.\nPremises:\nRoadJunction(oxfordCircus) ∧ Connect(oxfordCircus, oxfordStreet) ∧ Connect(oxfordCircus, regentStreet) ::: Oxford Circus is a road junction connecting Oxford Street and Regent Street.\nIn(oxfordStreet, london) ∧ In(regentStreet, london) ::: Oxford Street is in London.\nDesign(johnNash, constructionOnRegentStreet) ∧ Design(johnNash, oxfordCircus) ::: John Nash designed the construction on Regent Street. John Nash designed Oxford Circus.\nArchitect(johnNash) ::: John Nash is an architect.\nBritish(johnNash) ::: John Nash is a British person.\nPart(oxfordCircus, entranceToOxfordCircusTubeStation) ∧ Part(entranceToOxfordCircusTubeStation, oxfordCircusTubeStation) ∧ Part(oxfordCircusTubeStation, centralLine) ∧ Part(centralLine, tubeStation) ::: Oxford Circus is the entrance to Oxford Circus tube station which is a part of the Central line in 1900.\nConclusion:\nArchitect(johnNash) ∧ British(johnNash) → Design(johnNash, oxfordCircus) ::: Oxford Circus is designed by a British architect.\n------"
    ]
  },
  {
    "id": "FOLIO_train_481",
    "context": "Oxford Circus is a road junction connecting Oxford Street and Regent Street. Oxford Street is in London. John Nash designed the construction on Regent Street. John Nash designed Oxford Circus. John Nash is an architect in British. Oxford Circus is the entrance to Oxford Circus tube station which is a part of the Central line in 1900.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? John Nash designed the Central line in 1900.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRoadJunction(x) ::: x is a road junction.\nConnect(x, y) ::: x connects y.\nIn(x, y) ::: x is in y.\nDesign(x, y) ::: x designed y.\nArchitect(x) ::: x is an architect.\nBritish(x) ::: x is a British person.\nPart(x, y) ::: x is a part of y.\nPremises:\nRoadJunction(oxfordCircus) ∧ Connect(oxfordStreet, regentStreet) ∧ Connect(oxfordCircus, regentStreet) ::: Oxford Circus is a road junction connecting Oxford Street and Regent Street.\nIn(oxfordStreet, london) ∧ In(regentStreet, london) ::: Oxford Street is in London.\nDesign(johnNash, constructionOnRegentStreet) ∧ Design(johnNash, oxfordCircus) ::: John Nash designed the construction on Regent Street. John Nash designed Oxford Circus.\nDesign(johnNash, centralLine) ∧ Part(oxfordCircusTubeStation, centralLine) ∧ Part(oxfordCircusTubeStation, centralLineIn1900) ∧ Part(oxfordCircusTubeStation, centralLineIn1900) ::: Oxford Circus is the entrance to Oxford Circus tube station which is a part of the Central line in 1900.\nConclusion:\nDesign(johnNash, centralLineIn1900) ::: John Nash designed the Central line in 1900.\n------\nProblem:\nA person is a student if and only if the person is enrolled in a university. A person is a student if and only if the person is enrolled in a university. A person is a student if and only if the person is enrolled in a university. A person is a student if and only if the person is enrolled in a university. A person is a student if and only if the person is enrolled in a university. A person is a student if"
    ]
  },
  {
    "id": "FOLIO_train_482",
    "context": "Oxford Circus is a road junction connecting Oxford Street and Regent Street. Oxford Street is in London. John Nash designed the construction on Regent Street. John Nash designed Oxford Circus. John Nash is an architect in British. Oxford Circus is the entrance to Oxford Circus tube station which is a part of the Central line in 1900.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Regent Street is not in London.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRoad(x) ::: x is a road.\nJunction(x) ::: x is a road junction.\nConnect(x, y) ::: x connects y.\nIn(x, y) ::: x is in y.\nDesign(x, y) ::: x designed y.\nArchitect(x) ::: x is an architect.\nBritish(x) ::: x is a British person.\nConstruction(x) ::: x is a construction.\nEntrance(x, y) ::: x is the entrance to y.\nTubeStation(x) ::: x is a tube station.\nCentralLine(x) ::: x is a part of the Central line.\nPremises:\nRoad(oxfordCircus) ∧ Junction(oxfordCircus) ∧ Connect(oxfordCircus, oxfordStreet) ∧ Connect(oxfordCircus, regentStreet) ::: Oxford Circus is a road junction connecting Oxford Street and Regent Street.\nRoad(oxfordStreet) ∧ In(oxfordStreet, london) ::: Oxford Street is in London.\nDesign(johnNash, constructionOnRegentStreet) ∧ Design(johnNash, oxfordCircus) ::: John Nash designed the construction on Regent Street. John Nash designed Oxford Circus.\nArchitect(johnNash) ::: John Nash is an architect.\nBritish(johnNash) ::: John Nash is a British person.\nEntrance(oxfordCircus, oxfordCircusTubeStation) ∧ TubeStation(oxfordCircusTubeStation) ∧ CentralLine(centralLine) ∧ PartOf(centralLine, oxfordCircusTubeStation) ::: Oxford Circus is the entrance to Oxford Circus tube station which is a part of the Central line in 1900.\nConclusion:\n¬In(regentStreet, london) ::: Regent Street is not in London.\n------\nProblem:\nA person is a student if and only"
    ]
  },
  {
    "id": "FOLIO_train_483",
    "context": "An animal is either a cat or a dog. All dogs bark. Ghosts do not exist. If something barks, then it is not alive. A thing is either alive or dead. Jojo is not dead.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jojo is a ghost.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAnimal(x) ::: x is an animal.\nCat(x) ::: x is a cat.\nDog(x) ::: x is a dog.\nBark(x) ::: x barks.\nGhost(x) ::: x is a ghost.\nAlive(x) ::: x is alive.\nDead(x) ::: x is dead.\nPremises:\nAnimal(jojo) ∧ (Cat(jojo) ⊕ Dog(jojo)) ::: An animal is either a cat or a dog.\n∀x (Dog(x) → Bark(x)) ::: All dogs bark.\n¬Ghost(x) ::: Ghosts do not exist.\n∀x (Bark(x) → ¬Alive(x)) ::: If something barks, then it is not alive.\n∀x (Alive(x) ∨ Dead(x)) ::: A thing is either alive or dead.\n∀x (Dead(x) → ¬Animal(x)) ::: A dead thing is not an animal.\nConclusion:\nGhost(jojo) ::: Jojo is a ghost.\n------\nProblem:\nA person is either a student or a teacher. All students are either male or female. All teachers are either male or female. All male students are either male teachers or male students. All female teachers are either female students or female teachers.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? All students are either male teachers or female teachers.\n###\nPredicates:\nPerson(x) ::: x is a person.\nStudent(x) ::: x is a student.\nTeacher(x) ::: x is a teacher.\nMale(x) ::: x is male.\nFemale(x) ::: x is female.\nPremises:\nPerson(x) ∧ (Student(x) ⊕ Teacher(x)) ::: A person is either a student or a teacher.\n∀x (Student(x) → (Male(x) ∨ Female(x))) ::: All students"
    ]
  },
  {
    "id": "FOLIO_train_484",
    "context": "An animal is either a cat or a dog. All dogs bark. Ghosts do not exist. If something barks, then it is not alive. A thing is either alive or dead. Jojo is not dead.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jojo is a cat or a ghost.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAnimal(x) ::: x is an animal.\nCat(x) ::: x is a cat.\nDog(x) ::: x is a dog.\nBark(x) ::: x barks.\nGhost(x) ::: x is a ghost.\nAlive(x) ::: x is alive.\nDead(x) ::: x is dead.\nPremises:\nAnimal(jojo) ∧ (Cat(jojo) ∨ Dog(jojo)) ::: An animal is either a cat or a dog.\n∀x (Dog(x) → Bark(x)) ::: All dogs bark.\n∀x (Ghost(x) → ¬Alive(x)) ::: Ghosts do not exist.\n∀x (Bark(x) → ¬Alive(x)) ::: If something barks, then it is not alive.\n∀x (Alive(x) ∨ Dead(x)) ::: A thing is either alive or dead.\n¬Dead(jojo) ::: Jojo is not dead.\nConclusion:\nCat(jojo) ∨ Ghost(jojo) ::: Jojo is a cat or a ghost.\n------\nProblem:\nA person is either a student or a teacher. All students are either male or female. All teachers are either male or female. All male students are either male or female. All male teachers are either male or female. All female students are either male or female. All female teachers are either male or female.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? All students are either male or female.\n###\nPredicates:\nPerson(x) ::: x is a person.\nStudent(x) ::: x is a student.\nTeacher(x) ::: x is a teacher.\nMale(x) ::: x is male.\nFemale(x) ::: x is female.\nPremises:\n∀x (Person(x) → (Student(x) ∨ Teacher(x))) ::: A person is either a student or a teacher.\n∀x ("
    ]
  },
  {
    "id": "FOLIO_train_485",
    "context": "An animal is either a cat or a dog. All dogs bark. Ghosts do not exist. If something barks, then it is not alive. A thing is either alive or dead. Jojo is not dead.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Jojo is a cat or a ghost, then Jojo either barks or is a dog.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAnimal(x) ::: x is an animal.\nCat(x) ::: x is a cat.\nDog(x) ::: x is a dog.\nBark(x) ::: x barks.\nGhost(x) ::: x is a ghost.\nAlive(x) ::: x is alive.\nDead(x) ::: x is dead.\nPremises:\nAnimal(jojo) ∧ (Cat(jojo) ∨ Dog(jojo)) ::: An animal is either a cat or a dog.\n∀x (Dog(x) → Bark(x)) ::: All dogs bark.\n∀x (Ghost(x) → ¬Alive(x)) ::: Ghosts do not exist.\n∀x (Bark(x) → ¬Alive(x)) ::: If something barks, then it is not alive.\n∀x (Alive(x) ∨ Dead(x)) ::: A thing is either alive or dead.\n¬Dead(jojo) ::: Jojo is not dead.\nConclusion:\n(Cat(jojo) ∨ Ghost(jojo)) → (Bark(jojo) ∨ Dog(jojo)) ::: If Jojo is a cat or a ghost, then Jojo either barks or is a dog.\n------\nProblem:\nA person is either a student or a teacher. All students are either male or female. All teachers are either male or female. All male students are either male teachers or female teachers. All female teachers are either male teachers or female teachers.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? If a person is a student or a teacher, then the person is either a male student or a female teacher.\n###\nPredicates:\nPerson(x) ::: x is a person.\nStudent(x) ::: x is a student.\nTeacher(x) ::: x is a teacher.\nMale(x) ::: x is male.\nFemale(x) ::: x is female.\nPremises:\nPerson(p) ∧ (Student("
    ]
  },
  {
    "id": "FOLIO_train_486",
    "context": "All animals that are tigers are cats. No cats are dogs. All Bengal tigers are tigers. Everything that is a husky is a dog. Fido is either a Bengal tiger or a cat.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Fido is a husky.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAnimal(x) ::: x is an animal.\nTiger(x) ::: x is a tiger.\nCat(x) ::: x is a cat.\nDog(x) ::: x is a dog.\nHusky(x) ::: x is a husky.\nBengalTiger(x) ::: x is a Bengal tiger.\nPremises:\n∀x (Tiger(x) → Cat(x)) ::: All animals that are tigers are cats.\n∀x (Cat(x) → ¬Dog(x)) ::: No cats are dogs.\n∀x (BengalTiger(x) → Tiger(x)) ::: All Bengal tigers are tigers.\n∀x (Husky(x) → Dog(x)) ::: Everything that is a husky is a dog.\nFido(tiger) ∨ Fido(cat) ::: Fido is either a Bengal tiger or a cat.\nConclusion:\nHusky(fido) ::: Fido is a husky.\n------\nProblem:\nAll people who are students are either children or adults. All children are either teenagers or toddlers. All teenagers are either children or adults. All adults are either teenagers or children. No toddlers are children.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? All people who are students are either teenagers or toddlers.\n###\nPredicates:\nStudent(x) ::: x is a student.\nChild(x) ::: x is a child.\nAdult(x) ::: x is an adult.\nTeenager(x) ::: x is a teenager.\nToddler(x) ::: x is a toddler.\nPremises:\n∀x (Student(x) → (Child(x) ∨ Adult(x))) ::: All people who are students are either children or adults.\n∀x (Child(x) → (Teenager(x) ∨ Toddler(x))) ::: All children are either teenagers or to"
    ]
  },
  {
    "id": "FOLIO_train_487",
    "context": "All animals that are tigers are cats. No cats are dogs. All Bengal tigers are tigers. Everything that is a husky is a dog. Fido is either a Bengal tiger or a cat.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Fido is not a husky.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAnimal(x) ::: x is an animal.\nTiger(x) ::: x is a tiger.\nCat(x) ::: x is a cat.\nDog(x) ::: x is a dog.\nHusky(x) ::: x is a husky.\nBengalTiger(x) ::: x is a Bengal tiger.\nPremises:\n∀x (Tiger(x) → Cat(x)) ::: All animals that are tigers are cats.\n∀x (Cat(x) → ¬Dog(x)) ::: No cats are dogs.\n∀x (BengalTiger(x) → Tiger(x)) ::: All Bengal tigers are tigers.\n∀x (Husky(x) → Dog(x)) ::: Everything that is a husky is a dog.\nFido(tiger) ∨ Fido(cat) ::: Fido is either a Bengal tiger or a cat.\nConclusion:\n¬Husky(fido) ::: Fido is not a husky.\n------\nProblem:\nAll people who are students are either children or adults. All children are either boys or girls. All adults are either men or women. All men are either fathers or sons. All women are either mothers or daughters. All fathers are either parents or grandparents. All sons are either children or grandchildren. All mothers are either parents or grandmothers. All daughters are either children or granddaughters.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? All people who are students are either children or grandparents.\n###\nPredicates:\nStudent(x) ::: x is a student.\nChild(x) ::: x is a child.\nAdult(x) ::: x is an adult.\nMan(x) ::: x is a man.\nWoman(x) ::: x is a woman.\nFather(x) ::: x is a father.\nSon(x) ::: x is a son.\nMother(x) ::: x is a mother.\nDaughter(x) ::: x"
    ]
  },
  {
    "id": "FOLIO_train_488",
    "context": "All animals that are tigers are cats. No cats are dogs. All Bengal tigers are tigers. Everything that is a husky is a dog. Fido is either a Bengal tiger or a cat.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Fido is a Bengal tiger.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAnimal(x) ::: x is an animal.\nTiger(x) ::: x is a tiger.\nCat(x) ::: x is a cat.\nDog(x) ::: x is a dog.\nHusky(x) ::: x is a husky.\nBengalTiger(x) ::: x is a Bengal tiger.\nPremises:\n∀x (Tiger(x) → Cat(x)) ::: All animals that are tigers are cats.\n∀x (Cat(x) → ¬Dog(x)) ::: No cats are dogs.\n∀x (BengalTiger(x) → Tiger(x)) ::: All Bengal tigers are tigers.\n∀x (Husky(x) → Dog(x)) ::: Everything that is a husky is a dog.\nFido(tiger) ∨ Fido(cat) ::: Fido is either a Bengal tiger or a cat.\nConclusion:\nBengalTiger(fido) ::: Fido is a Bengal tiger.\n------\nProblem:\nAll people who are students are either children or adults. All children are either teenagers or toddlers. All teenagers are either children or adults. All adults are either teenagers or children. No toddlers are children.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? All people who are students are either teenagers or toddlers.\n###\nPredicates:\nStudent(x) ::: x is a student.\nChild(x) ::: x is a child.\nAdult(x) ::: x is an adult.\nTeenager(x) ::: x is a teenager.\nToddler(x) ::: x is a toddler.\nPremises:\n∀x (Student(x) → (Child(x) ∨ Adult(x))) ::: All people who are students are either children or adults.\n∀x (Child(x) → (Teenager(x) ∨ Toddler(x))) ::: All children are either"
    ]
  },
  {
    "id": "FOLIO_train_489",
    "context": "All animals that are tigers are cats. No cats are dogs. All Bengal tigers are tigers. Everything that is a husky is a dog. Fido is either a Bengal tiger or a cat.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Fido is neither a dog nor a husky.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAnimal(x) ::: x is an animal.\nTiger(x) ::: x is a tiger.\nCat(x) ::: x is a cat.\nDog(x) ::: x is a dog.\nHusky(x) ::: x is a husky.\nBengalTiger(x) ::: x is a Bengal tiger.\nPremises:\n∀x (Tiger(x) → Cat(x)) ::: All animals that are tigers are cats.\n∀x (Cat(x) → ¬Dog(x)) ::: No cats are dogs.\n∀x (BengalTiger(x) → Tiger(x)) ::: All Bengal tigers are tigers.\n∀x (Husky(x) → Dog(x)) ::: Everything that is a husky is a dog.\nFido(tiger) ∨ Fido(cat) ::: Fido is either a Bengal tiger or a cat.\nConclusion:\n¬(Dog(fido) ∨ Husky(fido)) ::: Fido is neither a dog nor a husky.\n------\nProblem:\nAll people who are students are either children or adults. All children are either boys or girls. All adults are either men or women. All men are either fathers or sons. All women are either mothers or daughters. All fathers are either parents or grandparents. All sons are either children or grandchildren. All mothers are either parents or grandmothers. All daughters are either children or granddaughters.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? All people who are parents are either men or women.\n###\nPredicates:\nStudent(x) ::: x is a student.\nChild(x) ::: x is a child.\nAdult(x) ::: x is an adult.\nMan(x) ::: x is a man.\nWoman(x) ::: x is a woman.\nFather(x) ::: x is a father.\nSon(x) ::: x is a son.\nMother(x) ::: x is"
    ]
  },
  {
    "id": "FOLIO_train_490",
    "context": "If a city hold a Summer Olympics, and the city is a US city, then the Summer Olympics will be in the US. If a city is in a state which is in US, the city is a US city. If a city in a state, and a Summer Olympics is in this city, then the Summer Olympics is in this state. The 2028 Summer Olympics is scheduled to take place in Los Angeles(LA). LA is a city in California(CA). Atlanta is a US city. Atlanta is in Georgia(CA). CA is a state in the United States. Boxing, modern pentathlon, and weightlifting will be removed from The 2028 Summer Olympics. Atlanta in the United States hold the 1996 Summer Olympics.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The 2028 Summer Olympics will take place in the US.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCity(x) ::: x is a city.\nSummerOlympics(x) ::: x is a Summer Olympics.\nHold(x, y) ::: x hold y.\nUS(x) ::: x is a US city.\nState(x) ::: x is a state.\nIn(x, y) ::: x is in y.\nRemove(x, y) ::: x will be removed from y.\nPremises:\n∀x (City(x) ∧ Hold(x, SummerOlympics) → US(x)) ::: If a city hold a Summer Olympics, and the city is a US city, then the Summer Olympics will be in the US.\n∀x (City(x) ∧ In(x, State) → US(x)) ::: If a city is in a state which is in US, the city is a US city.\n∀x (City(x) ∧ In(x, State) ∧ Hold(x, SummerOlympics) → Hold(x, State)) ::: If a city in a state, and a Summer Olympics is in this city, then the Summer Olympics is in this state.\nSummerOlympics(2028SummerOlympics) ∧ City(LA) ∧ In(LA, CA) ::: The 2028 Summer Olympics is scheduled to take place in Los Angeles(LA).\nCity(LA) ∧ In(LA, CA) ∧ State(CA) ∧ US(CA) ::: LA is a city in California(CA).\nCity(Atlanta) ∧ US(Atlanta) ∧ In(Atlanta, Georgia) ∧ State(Georgia) ∧ US(Georgia) ::: Atlanta is a US city.\n∀x (City(x) ∧ In(x, State) ∧ US(x) → State(State)) ::: If a city in a state, and a city is a US city, then the state is a US state.\n∀x (City(x) ∧ In(x, State) ∧ US(x) → US(State)) ::: If a city in a state, and a city is a US city, then the state is a US state.\nConclusion:\nHold(2028SummerOlympics, US) ::: The 2028 Summer Olympics will take place in the US.\n∀x (City(x) ∧ In(x, State) ∧ Hold(x, SummerOlympics) → Hold(x, State)) ::: If a city in a state, and a Summer Olympics is in this city, then the Summer Olympics is in this state.\n∀x (City(x) ∧ In(x, State) ∧ US(x) → State(State)) ::: If a city in a state, and a city is a US city, then the state is a US state.\n∀x (City(x) ∧ In(x, State) ∧ US(x) → US(State)) ::: If a city in a state, and a city is a US city, then the state is a US state.\n∀x (City(x) ∧ In(x, State) ∧ US(x) → US(State)) ::: If a city in a state, and a city is a US city, then the state is a US state.\n∀x (City(x) ∧ In(x, State) ∧ US(x) → US(State)) ::: If a city in a state, and a city is a US city, then the state is a US state.\n∀x (City(x) ∧ In(x, State) ∧ US(x) → US(State)) ::: If a city in a state, and a city is a US city, then the state is a US state.\n∀x (City(x) ∧ In(x, State) ∧ US(x) → US(State)) ::: If a city in a state, and a city is a US city, then the state is a US state.\n∀x (City(x) ∧ In(x, State) ∧ US"
    ]
  },
  {
    "id": "FOLIO_train_491",
    "context": "If a city hold a Summer Olympics, and the city is a US city, then the Summer Olympics will be in the US. If a city is in a state which is in US, the city is a US city. If a city in a state, and a Summer Olympics is in this city, then the Summer Olympics is in this state. The 2028 Summer Olympics is scheduled to take place in Los Angeles(LA). LA is a city in California(CA). Atlanta is a US city. Atlanta is in Georgia(CA). CA is a state in the United States. Boxing, modern pentathlon, and weightlifting will be removed from The 2028 Summer Olympics. Atlanta in the United States hold the 1996 Summer Olympics.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The 1996 Summer Olympics is not in Georgia.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCity(x) ::: x is a city.\nState(x) ::: x is a state.\nUS(x) ::: x is a US city.\nSummerOlympics(x) ::: x is a Summer Olympics.\nHold(x, y) ::: x hold a Summer Olympics.\nIn(x, y) ::: x is in y.\nScheduled(x, y) ::: x is scheduled to take place in year y.\nRemove(x, y) ::: x will be removed from y.\nPremises:\n∀x (Hold(x, us) → In(x, us)) ::: If a city hold a Summer Olympics, and the city is a US city, then the Summer Olympics will be in the US.\n∀x (In(x, y) ∧ In(y, us) → US(x)) ::: If a city is in a state which is in US, the city is a US city.\n∀x (In(x, y) ∧ Hold(y, x) → Hold(y, z)) ::: If a city in a state, and a Summer Olympics is in this city, then the Summer Olympics is in this state.\nSummerOlympics(2028SummerOlympics) ∧ Hold(2028SummerOlympics, la) ∧ City(la) ∧ In(la, ca) ::: The 2028 Summer Olympics is scheduled to take place in Los Angeles(LA).\nCity(la) ∧ In(la, ca) ∧ State(ca) ∧ US(ca) ::: LA is a city in California(CA).\nCity(atlanta) ∧ US(atlanta) ∧ In(atlanta, georgia) ∧ State(georgia) ∧ US(georgia) ::: Atlanta is a US city.\nIn(atlanta, georgia) ∧ State(georgia) ∧ US(georgia) ∧ Hold(1996SummerOlympics, atlanta) ::: Atlanta is in Georgia(CA).\nCA ∧ State(ca) ∧ US(ca) ::: CA is a state in the United States.\n∀x (Remove(x, y) → ¬Hold(y, x)) ::: Boxing, modern pentathlon, and weightlifting will be removed from The 2028 Summer Olympics.\nHold(1996SummerOlympics, atlanta) ::: Atlanta in the United States hold the 1996 Summer Olympics.\nConclusion:\n¬Hold(1996SummerOlympics, georgia) ::: The 1996 Summer Olympics is not in Georgia.\n------\nProblem:\nIf a person is a student, then the person is a person who is not a teacher. If a person is a teacher, then the person is a person who is not a student. If a person is a student, then the person is a person who is not a teacher. If a person is a teacher, then the person is a person who is not a student. If a person is a student, then the person is a person who is not a teacher. If a person is a teacher, then the person is a person who is not a student. If a person is a student, then the person is a person who is not a teacher. If a person is a teacher, then the person is a person who is not a student. If a person is a student, then the person is a person who is not a teacher. If a person is a teacher, then the person is a person who is not a student. If a person is a student, then the person is a person who is not a teacher. If a person is a teacher, then the person is a person who is not a student. If a person is a student, then the person is a person who is not a teacher. If a person is a teacher, then the person is a person who is not a student. If a person is a student, then the person is a person who is not a teacher. If a person is a teacher, then the person is a person who is not a student. If a person is a student, then the person is a person who is not a teacher. If a person is a teacher, then the person is a person who is not a student. If a person is a student, then"
    ]
  },
  {
    "id": "FOLIO_train_492",
    "context": "If a city hold a Summer Olympics, and the city is a US city, then the Summer Olympics will be in the US. If a city is in a state which is in US, the city is a US city. If a city in a state, and a Summer Olympics is in this city, then the Summer Olympics is in this state. The 2028 Summer Olympics is scheduled to take place in Los Angeles(LA). LA is a city in California(CA). Atlanta is a US city. Atlanta is in Georgia(CA). CA is a state in the United States. Boxing, modern pentathlon, and weightlifting will be removed from The 2028 Summer Olympics. Atlanta in the United States hold the 1996 Summer Olympics.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Skateboarding will appear at The 2028 Summer Olympics.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCity(x) ::: x is a city.\nState(x) ::: x is a state.\nUS(x) ::: x is a US city.\nSummerOlympics(x) ::: x is a Summer Olympics.\nHold(x, y) ::: x hold a Summer Olympics.\nIn(x, y) ::: x is in y.\nStateInUS(x) ::: x is a state in the United States.\nPremises:\n∀x (Hold(x, y) ∧ US(x) → In(y, US)) ::: If a city hold a Summer Olympics, and the city is a US city, then the Summer Olympics will be in the US.\n∀x (In(x, y) ∧ In(y, z) → In(x, z)) ::: If a city in a state, and a Summer Olympics is in this city, then the Summer Olympics is in this state.\n∀x (In(x, y) ∧ US(y) → US(x)) ::: If a city is in a state which is in US, the city is a US city.\n∀x (Hold(x, y) ∧ US(x) → In(y, US)) ::: If a city hold a Summer Olympics, and the city is a US city, then the Summer Olympics will be in the US.\n∀x (Hold(x, y) ∧ US(x) → In(y, US)) ::: If a city hold a Summer Olympics, and the city is a US city, then the Summer Olympics will be in the US.\n∀x (Hold(x, y) ∧ US(x) → In(y, US)) ::: If a city hold a Summer Olympics, and the city is a US city, then the Summer Olympics will be in the US.\n∀x (Hold(x, y) ∧ US(x) → In(y, US)) ::: If a city hold a Summer Olympics, and the city is a US city, then the Summer Olympics will be in the US.\n∀x (Hold(x, y) ∧ US(x) → In(y, US)) ::: If a city hold a Summer Olympics, and the city is a US city, then the Summer Olympics will be in the US.\n∀x (Hold(x, y) ∧ US(x) → In(y, US)) ::: If a city hold a Summer Olympics, and the city is a US city, then the Summer Olympics will be in the US.\n∀x (Hold(x, y) ∧ US(x) → In(y, US)) ::: If a city hold a Summer Olympics, and the city is a US city, then the Summer Olympics will be in the US.\n∀x (Hold(x, y) ∧ US(x) → In(y, US)) ::: If a city hold a Summer Olympics, and the city is a US city, then the Summer Olympics will be in the US.\n∀x (Hold(x, y) ∧ US(x) → In(y, US)) ::: If a city hold a Summer Olympics, and the city is a US city, then the Summer Olympics will be in the US.\n∀x (Hold(x, y) ∧ US(x) → In(y, US)) ::: If a city hold a Summer Olympics, and the city is a US city, then the Summer Olympics will be in the US.\n∀x (Hold(x, y) ∧ US(x) → In(y, US)) ::: If a city hold a Summer Olympics, and the city is a US city, then the Summer Olympics will be in the US.\n∀x (Hold(x, y) ∧ US(x) → In(y, US)) ::: If a city hold a Summer Olympics, and the city is a US city, then the Summer Olympics will be in the US.\n∀x (Hold(x, y) ∧ US(x) → In(y, US)) ::: If a city hold a Summer Olympics, and the city is a US city, then the Summer Olympics will be in the US.\n∀x (Hold(x, y) ∧ US(x) → In(y, US"
    ]
  },
  {
    "id": "FOLIO_train_493",
    "context": "The taiga vole is a large vole found in northwestern North America. Cats like playing with all voles. The taiga vole lives in the boreal taiga zone. The boreal taiga zone in North America is a cold place to live in. Taiga vole is typically much larger than most other North American voles, especially those from the genus Microtus.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Cats like playing with taiga vole.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCatsLike(x, y) ::: Cats like playing with y.\nLive(x, y) ::: x lives in y.\nTaigaVole(x) ::: x is a taiga vole.\nBorealTaigaZone(x) ::: x is the boreal taiga zone.\nNorthAmerica(x) ::: x is North America.\nColdPlace(x) ::: x is a cold place to live in.\nTaigaVole(x) ∧ Live(x, borealTaigaZone) ::: The taiga vole lives in the boreal taiga zone.\nBorealTaigaZone(x) ∧ NorthAmerica(x) ∧ ColdPlace(x) ::: The boreal taiga zone in North America is a cold place to live in.\nTaigaVole(x) ∧ ¬(TaigaVole(x) ∧ Microtus(x)) ::: Taiga vole is typically much larger than most other North American voles, especially those from the genus Microtus.\nCatsLike(x, y) ∧ Vole(y) ::: Cats like playing with all voles.\nConclusion:\nCatsLike(x, taigaVole) ::: Cats like playing with taiga vole.\n------\nProblem:\nThe 1996 Summer Olympics were held in Atlanta, Georgia, United States. The 1996 Summer Olympics were the first Summer Olympics to be held in the United States since the 1984 Summer Olympics in Los Angeles. The 1996 Summer Olympics were the first Summer Olympics to be held in the Southern United States. The 1996 Summer Olympics were the first Summer Olympics to be held in the Eastern Time Zone. The 1996 Summer Olympics were the first Summer Olympics to be held in the United States since the 1984 Summer Olympics in Los Angeles.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The 1996 Summer Olympics were the first Summer Olympics to be held in the United States since the 1984 Summer Olympics in Los Angeles.\n###\nPredicates:\nSummerOlympics(x) ::: x is the Summer Olympics.\nHeld(x, y) ::: x was held in y.\nUnitedStates(x) ::: x is the United States.\nSouthernUnitedStates(x) ::: x is the Southern United States.\nEasternTimeZone(x) ::: x is the Eastern Time Zone.\nFirst(x, y) ::: x is the first y.\nConclusion:\nHeld(1996SummerOlympics, atlanta) ∧ Held(1996SummerOlympics, georgia) ∧ Held(1996SummerOlympics, unitedStates) ∧ Held(1996SummerOlympics, southernUnitedStates) ∧ Held(1996SummerOlympics, easternTimeZone) ::: The 1996 Summer Olympics were held in Atlanta, Georgia, United States.\nFirst(1996SummerOlympics, 1984SummerOlympics) ::: The 1996 Summer Olympics were the first Summer Olympics to be held in the United States since the 1984 Summer Olympics in Los Angeles.\n------\nProblem:\nThe 1996 Summer Olympics were held in Atlanta, Georgia, United States. The 1996 Summer Olympics were the first Summer Olympics to be held in the United States since the 1984 Summer Olympics in Los Angeles. The 1996 Summer Olympics were the first Summer Olympics to be held in the Southern United States. The 1996 Summer Olympics were the first Summer Olympics to be held in the Eastern Time Zone. The 1996 Summer Olympics were the first Summer Olympics to be held in the United States since the 1984 Summer Olympics in Los Angeles.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The 1996 Summer Olympics were the first Summer Olympics to be held in the United States since the 1984 Summer Olympics in Los Angeles.\n###\nPredicates:\nSummerOlympics(x) ::: x is the Summer Olympics.\nHeld(x, y) ::: x was held in y.\nUn"
    ]
  },
  {
    "id": "FOLIO_train_494",
    "context": "The taiga vole is a large vole found in northwestern North America. Cats like playing with all voles. The taiga vole lives in the boreal taiga zone. The boreal taiga zone in North America is a cold place to live in. Taiga vole is typically much larger than most other North American voles, especially those from the genus Microtus.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Taiga vole's living place is not cold.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold(x) ::: x is a cold place to live in.\nTaigaVole(x) ::: x is a taiga vole.\nVole(x) ::: x is a vole.\nCat(x) ::: x is a cat.\nLike(x, y) ::: x likes y.\nLive(x, y) ::: x lives in y.\nPremises:\nTaigaVole(taigaVole) ::: The taiga vole is a large vole found in northwestern North America.\n∀x (Vole(x) → ∃y (Cat(y) ∧ Like(y, x))) ::: Cats like playing with all voles.\nLive(taigaVole, borealTaigaZone) ∧ Live(borealTaigaZone, northAmerica) ::: The taiga vole lives in the boreal taiga zone.\nLive(borealTaigaZone, northAmerica) ∧ Cold(borealTaigaZone) ::: The boreal taiga zone in North America is a cold place to live in.\n∀x (TaigaVole(x) → ∃y (Vole(y) ∧ ¬(TaigaVole(y) ∧ ¬(TaigaVole(x) ∧ ¬(TaigaVole(y)))))) ::: Taiga vole is typically much larger than most other North American voles, especially those from the genus Microtus.\nConclusion:\n¬Cold(borealTaigaZone) ::: Taiga vole's living place is not cold.\n------\nProblem:\nThe first-order logic formular is defined as follows:\n1) logical conjunction of expr1 and expr2: expr1 ∧ expr2\n2) logical disjunction of expr1 and expr2: expr1 ∨ expr2\n3) logical exclusive disjunction of expr1 and expr2: expr1 ⊕ expr2\n4) logical negation of expr1: ¬expr1\n5) expr1 implies expr2: expr1 → expr2\n6) expr1 if and only if expr2: expr1 ↔ expr2\n7) logical universal quantification: ∀x\n8) logical existential quantification: ∃x\n------\nProblem:\nThe first-order logic formular is defined as follows:\n1) logical conjunction of expr1 and expr2: expr1 ∧ expr2\n2) logical disjunction of expr1 and expr2: expr1 ∨ expr2\n3) logical exclusive disjunction of expr1 and expr2: expr1 ⊕ expr2\n4) logical negation of expr1: ¬expr1\n5) expr1 implies expr2: expr1 → expr2\n6) expr1 if and only if expr2: expr1 ↔ expr2\n7) logical universal quantification: ∀x\n8) logical existential quantification: ∃x\n------\nProblem:\nThe first-order logic formular is defined as follows:\n1) logical conjunction of expr1 and expr2: expr1 ∧ expr2\n2) logical disjunction of expr1 and expr2: expr1 ∨ expr2\n3) logical exclusive disjunction of expr1 and expr2: expr1 ⊕ expr2\n4) logical negation of expr1: ¬expr1\n5) expr1 implies expr2: expr1 → expr2\n6) expr1 if and only if expr2: expr1 ↔ expr2\n7) logical universal quantification: ∀x\n8) logical existential quantification: ∃x\n------\nProblem:\nThe first-order logic formular is defined as follows:\n1) logical conjunction of expr1 and expr2: expr1 ∧ expr2\n2) logical disjunction of expr1 and expr2: expr1 ∨ expr2\n3) logical exclusive disjunction of expr1 and expr2: expr1 ⊕ expr2\n4) logical negation of expr1: ¬expr1\n5) expr1 implies expr2: expr1 → expr2\n6) expr1 if and only if expr2: expr1 ↔ expr2\n7) logical universal quantification: ∀x\n8) logical existential quantification:"
    ]
  },
  {
    "id": "FOLIO_train_495",
    "context": "Either in women or in men. No men have breast cancer. Either breast cancer or non-breast cancer. No type of cancer is without a tumor. All non-breast cancers are a type of cancer. If adenocarcinoma is a type of cancer or without a tumor, then adenocarcinoma is in women or without a tumor.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Adenocarcinoma is a breast cancer.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nWomen(x) ::: x is a woman.\nMen(x) ::: x is a man.\nBreastCancer(x) ::: x is a breast cancer.\nNonBreastCancer(x) ::: x is a non-breast cancer.\nTypeOfCancer(x) ::: x is a type of cancer.\nTumor(x) ::: x is a tumor.\nAdenocarcinoma(x) ::: x is an adenocarcinoma.\nPremises:\nWomen(x) ∨ Men(x) ::: Either in women or in men.\n∀x (Men(x) → ¬BreastCancer(x)) ::: No men have breast cancer.\nBreastCancer(x) ∨ NonBreastCancer(x) ::: Either breast cancer or non-breast cancer.\n∀x (NonBreastCancer(x) → TypeOfCancer(x)) ::: No type of cancer is without a tumor.\n∀x (NonBreastCancer(x) → ¬Tumor(x)) ::: All non-breast cancers are a type of cancer.\n∀x (Adenocarcinoma(x) → (TypeOfCancer(x) ∨ ¬Tumor(x))) ::: If adenocarcinoma is a type of cancer or without a tumor, then adenocarcinoma is in women or without a tumor.\nConclusion:\nBreastCancer(adenocarcinoma) ::: Adenocarcinoma is a breast cancer.\n------\nProblem:\nAll people who are not students are either teachers or employees. All teachers are either professors or lecturers. All professors are either teachers or researchers. All researchers are either professors or employees. All employees are either teachers or students.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? All people are either teachers or students.\nBased on the above information, is the following statement true, false, or uncertain? All people are either teachers or employees.\nBased on the above information, is the following statement true, false, or uncertain? All people are either teachers or researchers.\n###\nPredicates:\nStudent(x) ::: x is a student.\nTeacher(x) ::: x is a teacher.\nEmployee(x) ::: x is an employee.\nProfessor(x) ::: x is a professor.\nLecturer(x) ::: x is a lecturer.\nResearcher(x) ::: x is a researcher.\nPremises:\n∀x (¬Student(x) → (Teacher(x) ∨ Employee(x))) ::: All people who are not students are either teachers or employees.\n∀x (Teacher(x) → (Professor(x) ∨ Lecturer(x))) ::: All teachers are either professors or lecturers.\n∀x (Professor(x) → (Teacher(x) ∨ Researcher(x))) ::: All professors are either teachers or researchers.\n∀x (Researcher(x) → (Professor(x) ∨ Employee(x))) ::: All researchers are either professors or employees.\n∀x (Employee(x) → (Teacher(x) ∨ Student(x))) ::: All employees are either teachers or students.\nConclusion:\n∀x (Teacher(x) ∨ Student(x)) ::: All people are either teachers or students.\n∀x (Teacher(x) ∨ Employee(x)) ::: All people are either teachers or employees.\n∀x (Teacher(x) ∨ Researcher(x)) ::: All people are either teachers or researchers.\n------\nProblem:\nAll people who are not students are either teachers or employees. All teachers are either professors or lecturers. All professors are either teachers or researchers. All researchers are either professors or employees. All employees are either teachers or students.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? All people are either teachers or students.\nBased on the above information, is the following statement true, false, or uncertain? All people are"
    ]
  },
  {
    "id": "FOLIO_train_496",
    "context": "Either in women or in men. No men have breast cancer. Either breast cancer or non-breast cancer. No type of cancer is without a tumor. All non-breast cancers are a type of cancer. If adenocarcinoma is a type of cancer or without a tumor, then adenocarcinoma is in women or without a tumor.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Adenocarcinoma is in women.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nWomen(x) ::: x is a woman.\nMen(x) ::: x is a man.\nBreastCancer(x) ::: x is breast cancer.\nNonBreastCancer(x) ::: x is non-breast cancer.\nTypeOfCancer(x) ::: x is a type of cancer.\nTumor(x) ::: x is a tumor.\nAdenocarcinoma(x) ::: x is adenocarcinoma.\nPremises:\nWomen(x) ∨ Men(x) ::: Either in women or in men.\n∀x (Men(x) → ¬BreastCancer(x)) ::: No men have breast cancer.\nBreastCancer(x) ∨ NonBreastCancer(x) ::: Either breast cancer or non-breast cancer.\n∀x (NonBreastCancer(x) → TypeOfCancer(x)) ::: No type of cancer is without a tumor.\n∀x (NonBreastCancer(x) → ¬Tumor(x)) ::: All non-breast cancers are a type of cancer.\n∀x (Adenocarcinoma(x) → (TypeOfCancer(x) ∨ ¬Tumor(x))) ::: If adenocarcinoma is a type of cancer or without a tumor, then adenocarcinoma is in women or without a tumor.\nConclusion:\nWomen(adenocarcinoma) ::: Adenocarcinoma is in women.\n------\nProblem:\nAll people who are not students are either employees or unemployed. All people who are not students are either employees or unemployed. All people who are not students are either employees or unemployed. All people who are not students are either employees or unemployed. All people who are not students are either employees or unemployed. All people who are not students are either employees or unemployed. All people who are not students are either employees or unemployed. All people who are not students are either employees or unemployed. All people who are not students are either employees or unemployed. All people who are not students are either employees or unemployed. All people who are not students are either employees or unemployed. All people who are not students are either employees or unemployed. All people who are not students are either employees or unemployed. All people who are not students are either employees or unemployed. All people who are not students are either employees or unemployed. All people who are not students are either employees or unemployed. All people who are not students are either employees or unemployed. All people who are not students are either employees or unemployed. All people who are not students are either employees or unemployed. All people who are not students are either employees or unemployed. All people who are not students are either employees or unemployed. All people who are not students are either employees or unemployed. All people who are not students are either employees or unemployed. All people who are not students are either employees or unemployed. All people who are not students are either employees or unemployed. All people who are not students are either employees or unemployed. All people who are not students are either employees or unemployed. All people who are not students are either employees or unemployed. All people who are not students are either employees or unemployed. All people who are not students are either employees or unemployed. All people who are not students are either employees or unemployed. All people who are not students are either employees or unemployed. All people who are not students are either employees or unemployed. All people who are not students are either employees or unemployed. All people who are not students are either employees or unemployed. All people who are not students are either employees or unemployed. All people who are not students are either employees or unemployed. All people who are not students are either employees or unemployed. All people who are not students are either employees or unemployed. All people who are not students are either employees or unemployed. All people who are not students are either employees or unemployed. All people who are not students are either employees or unemployed. All people who are not students are either employees or unemployed. All people who are not students are either employees or unemployed. All people who are not students are either employees or unemployed. All people who are not students are either employees or unemployed. All people who are not students are either employees or unemployed. All people who are not students are either employees or unemployed. All people who are not students are either employees or unemployed"
    ]
  },
  {
    "id": "FOLIO_train_497",
    "context": "Either in women or in men. No men have breast cancer. Either breast cancer or non-breast cancer. No type of cancer is without a tumor. All non-breast cancers are a type of cancer. If adenocarcinoma is a type of cancer or without a tumor, then adenocarcinoma is in women or without a tumor.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If adenocarcinoma is in women or without a tumor, then adenocarcinoma is without a tumor and a non-breast cancer.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nIn(x, y) ::: x is in y.\nType(x, y) ::: x is a type of y.\nTumor(x) ::: x has a tumor.\nCancer(x) ::: x is a cancer.\nBreastCancer(x) ::: x is a breast cancer.\nPremises:\nIn(women, men) ∨ In(men, women) ::: Either in women or in men.\n∀x (In(men, x) → ¬BreastCancer(x)) ::: No men have breast cancer.\nIn(breastCancer, nonBreastCancer) ∨ In(nonBreastCancer, breastCancer) ::: Either breast cancer or non-breast cancer.\n∀x (Type(x, cancer) → ¬Tumor(x)) ::: No type of cancer is without a tumor.\n∀x (Type(x, nonBreastCancer) → Type(x, cancer)) ::: All non-breast cancers are a type of cancer.\n∀x (Type(adenocarcinoma, cancer) ∨ ¬Tumor(adenocarcinoma)) → (In(adenocarcinoma, women) ∨ ¬Tumor(adenocarcinoma)) ::: If adenocarcinoma is a type of cancer or without a tumor, then adenocarcinoma is in women or without a tumor.\nConclusion:\nIn(adenocarcinoma, women) ∧ ¬Tumor(adenocarcinoma) ∧ Type(adenocarcinoma, nonBreastCancer) ::: If adenocarcinoma is in women or without a tumor, then adenocarcinoma is without a tumor and a non-breast cancer.\n------\nProblem:\nAll people who are not students are either employed or unemployed. All people who are employed are either employed full-time or employed part-time. All people who are employed full-time are employed. All people who are employed part-time are employed. All people who are employed are either employed full-time or employed part-time. All people who are employed full-time are employed. All people who are employed part-time are employed. All people who are employed are either employed full-time or employed part-time. All people who are employed full-time are employed. All people who are employed part-time are employed. All people who are employed are either employed full-time or employed part-time. All people who are employed full-time are employed. All people who are employed part-time are employed. All people who are employed are either employed full-time or employed part-time. All people who are employed full-time are employed. All people who are employed part-time are employed. All people who are employed are either employed full-time or employed part-time. All people who are employed full-time are employed. All people who are employed part-time are employed. All people who are employed are either employed full-time or employed part-time. All people who are employed full-time are employed. All people who are employed part-time are employed. All people who are employed are either employed full-time or employed part-time. All people who are employed full-time are employed. All people who are employed part-time are employed. All people who are employed are either employed full-time or employed part-time. All people who are employed full-time are employed. All people who are employed part-time are employed. All people who are employed are either employed full-time or employed part-time. All people who are employed full-time are employed. All people who are employed part-time are employed. All people who are employed are either employed full-time or employed part-time. All people who are employed full-time are employed. All people who are employed part-time are employed. All people who are employed are either employed full-time or employed part-time. All people who are employed full-time are employed. All people who are employed part-time are employed. All people who are employed are either employed full-time or employed part-time. All people who are employed full-time are employed. All people who are employed part-time are employed. All people who are employed are either employed full-time or employed part-time. All people who are employed full-time are employed. All people who are employed part-time are employed. All people who are employed are either employed full-time or employed part-time"
    ]
  },
  {
    "id": "FOLIO_train_498",
    "context": "Some monitors equipped in the lab are produced by the company named AOC. All monitors equipped in the lab are cheaper than their original prices. If the monitor is cheaper than its original prices, then its resolution is 1080p. If a monitor is with a resolution of 1080p, then it does not support the type-c port. LG34 is equipped in the lab.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? LG34 machine is produced by AOC.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProduced(x, y) ::: x is produced by y.\nEquipped(x, y) ::: x is equipped in y.\nCheaper(x, y) ::: x is cheaper than y.\nOriginalPrice(x, y) ::: x is the original price of y.\nResolution(x, y) ::: x is the resolution of y.\nTypeC(x, y) ::: x supports the type-c port of y.\nPremises:\n∃x (Produced(aoc, x) ∧ Equipped(x, lab)) ::: Some monitors equipped in the lab are produced by the company named AOC.\n∀x (Equipped(x, lab) → Cheaper(x, OriginalPrice(x, lab))) ::: All monitors equipped in the lab are cheaper than their original prices.\n∀x (Cheaper(x, OriginalPrice(x, lab)) → Resolution(x, 1080p)) ::: If the monitor is cheaper than its original prices, then its resolution is 1080p.\n∀x (Resolution(x, 1080p) → ¬TypeC(x, lab)) ::: If a monitor is with a resolution of 1080p, then it does not support the type-c port.\nEquipped(lg34, lab) ::: LG34 is equipped in the lab.\nConclusion:\nProduced(aoc, lg34) ::: LG34 machine is produced by AOC.\n------\nProblem:\nSome people are students. All students are either undergraduates or graduates. Some people are undergraduates. Some people are graduates. Some people are either undergraduates or graduates. Some people are neither undergraduates nor graduates.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Some people are neither undergraduates nor graduates.\n###\nPredicates:\nStudent(x) ::: x is a student.\nUndergraduate(x) ::: x is an undergraduate.\nGraduate(x) ::: x is a graduate.\nPremises:\n∃x (Student(x) ∧ Undergraduate(x)) ::: Some people are students.\n∀x (Student(x) → (Undergraduate(x) ∨ Graduate(x))) ::: All students are either undergraduates or graduates.\n∃x (Undergraduate(x) ∧ Graduate(x)) ::: Some people are undergraduates.\n∃x (Undergraduate(x) ∧ Graduate(x)) ::: Some people are graduates.\n∃x (Undergraduate(x) ∨ Graduate(x)) ::: Some people are either undergraduates or graduates.\n∃x ¬(Undergraduate(x) ∧ Graduate(x)) ::: Some people are neither undergraduates nor graduates.\nConclusion:\n∃x ¬(Undergraduate(x) ∧ Graduate(x)) ::: Some people are neither undergraduates nor graduates.\n------\nProblem:\nSome people are students. All students are either undergraduates or graduates. Some people are undergraduates. Some people are graduates. Some people are either undergraduates or graduates. Some people are neither undergraduates nor graduates.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Some people are neither undergraduates nor graduates.\n###\nPredicates:\nStudent(x) ::: x is a student.\nUndergraduate(x) ::: x is an undergraduate.\nGraduate(x) ::: x is a graduate.\nPremises:\n∃x (Student(x) ∧ Undergraduate(x)) ::: Some people are students.\n∀x (Student(x) → (Undergraduate(x) ∨ Graduate(x))) ::: All students are either undergraduates or graduates.\n∃x (Undergraduate(x) ∧ Graduate(x)) ::: Some people are undergraduates.\n∃x (Undergraduate(x) ∧ Graduate(x)) ::: Some people are graduates.\n∃x (Undergraduate(x) ∨ Graduate("
    ]
  },
  {
    "id": "FOLIO_train_499",
    "context": "Some monitors equipped in the lab are produced by the company named AOC. All monitors equipped in the lab are cheaper than their original prices. If the monitor is cheaper than its original prices, then its resolution is 1080p. If a monitor is with a resolution of 1080p, then it does not support the type-c port. LG34 is equipped in the lab.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? LG34 machine does not support the type-c port.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProduce(x, y) ::: x produces y.\nEquip(x, y) ::: x is equipped with y.\nCheaper(x, y) ::: x is cheaper than y.\nOriginalPrice(x, y) ::: x is the original price of y.\nResolution(x, y) ::: x is the resolution of y.\nTypeC(x) ::: x supports the type-c port.\nPremises:\n∃x (Produce(aoc, x) ∧ Equip(lab, x)) ::: Some monitors equipped in the lab are produced by the company named AOC.\n∀x (Equip(lab, x) → Cheaper(x, OriginalPrice(x))) ::: All monitors equipped in the lab are cheaper than their original prices.\n∀x (Cheaper(x, OriginalPrice(x)) → Resolution(x, 1080p)) ::: If the monitor is cheaper than its original prices, then its resolution is 1080p.\n∀x (Resolution(x, 1080p) → ¬TypeC(x)) ::: If a monitor is with a resolution of 1080p, then it does not support the type-c port.\nEquip(lab, lg34) ::: LG34 is equipped in the lab.\nConclusion:\nTypeC(lg34) ::: LG34 machine does not support the type-c port.\n------\nProblem:\nSome people are not students. All students are either undergraduate students or graduate students. All undergraduate students are either freshmen or sophomores. All graduate students are either juniors or seniors. All freshmen are undergraduate students. All sophomores are undergraduate students. All juniors are graduate students. All seniors are graduate students.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? All students are either freshmen or seniors.\n###\nPredicates:\nStudent(x) ::: x is a student.\nUndergraduateStudent(x) ::: x is an undergraduate student.\nGraduateStudent(x) ::: x is a graduate student.\nFreshman(x) ::: x is a freshman.\nSophomore(x) ::: x is a sophomore.\nJunior(x) ::: x is a junior.\nSenior(x) ::: x is a senior.\nPremises:\n∃x ¬Student(x) ::: Some people are not students.\n∀x (Student(x) → (UndergraduateStudent(x) ∨ GraduateStudent(x))) ::: All students are either undergraduate students or graduate students.\n∀x (UndergraduateStudent(x) → (Freshman(x) ∨ Sophomore(x))) ::: All undergraduate students are either freshmen or sophomores.\n∀x (GraduateStudent(x) → (Junior(x) ∨ Senior(x))) ::: All graduate students are either juniors or seniors.\nFreshman(x) → UndergraduateStudent(x) ::: All freshmen are undergraduate students.\nSophomore(x) → UndergraduateStudent(x) ::: All sophomores are undergraduate students.\nJunior(x) → GraduateStudent(x) ::: All juniors are graduate students.\nSenior(x) → GraduateStudent(x) ::: All seniors are graduate students.\nConclusion:\n(Freshman(x) ∨ Senior(x)) → Student(x) ::: All students are either freshmen or seniors.\n------\nProblem:\nSome people are not students. All students are either undergraduate students or graduate students. All undergraduate students are either freshmen or sophomores. All graduate students are either juniors or seniors. All freshmen are undergraduate students. All sophomores are undergraduate students. All juniors are graduate students. All seniors are graduate students.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? All students are either freshmen or seniors.\n###\nPredicates:\nStudent(x) ::: x is a student.\nUndergraduateStudent(x) ::: x is an undergraduate student.\nGraduateStudent(x) ::: x is a graduate student.\nFreshman(x) ::: x is a freshman.\nS"
    ]
  },
  {
    "id": "FOLIO_train_500",
    "context": "Some monitors equipped in the lab are produced by the company named AOC. All monitors equipped in the lab are cheaper than their original prices. If the monitor is cheaper than its original prices, then its resolution is 1080p. If a monitor is with a resolution of 1080p, then it does not support the type-c port. LG34 is equipped in the lab.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? LG34 is not with a resolution of 1080p.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProduce(x, y) ::: x produces y.\nEquip(x, y) ::: x is equipped with y.\nCheaper(x, y) ::: x is cheaper than y.\nOriginalPrice(x, y) ::: x is the original price of y.\nResolution(x, y) ::: x is the resolution of y.\nTypeC(x, y) ::: x supports the type-c port of y.\nPremises:\n∃x (Produce(aoc, x) ∧ Equip(lab, x)) ::: Some monitors equipped in the lab are produced by the company named AOC.\n∀x (Equip(lab, x) → Cheaper(x, OriginalPrice(x))) ::: All monitors equipped in the lab are cheaper than their original prices.\n∀x (Cheaper(x, OriginalPrice(x)) → Resolution(x, 1080p)) ::: If the monitor is cheaper than its original prices, then its resolution is 1080p.\n∀x (Resolution(x, 1080p) → ¬TypeC(x, typeC)) ::: If a monitor is with a resolution of 1080p, then it does not support the type-c port.\nEquip(lab, lg34) ::: LG34 is equipped in the lab.\nConclusion:\n¬Resolution(lg34, 1080p) ::: LG34 is not with a resolution of 1080p.\n------"
    ]
  },
  {
    "id": "FOLIO_train_501",
    "context": "All fruits sold in Boston are shipped from Columbia. Some fruits sold in New Haven are shipped from Mexico. No fruits shipped from Columbia are fruits sold in New York. Avocadoe are a kind of fruit sold in New York or New York. Avocadoe are either shipped from Columbia and sold in New Haven, or neither shipped from Columbia nor sold in New Haven.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Avocados are a kind of fruit sold in New York.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFruit(x) ::: x is a fruit.\nSold(x, y) ::: x is sold in city y.\nShipped(x, y) ::: x is shipped from country y.\nKind(x, y) ::: x is a kind of y.\nPremises:\n∀x (Sold(x, boston) → Shipped(x, columbia)) ::: All fruits sold in Boston are shipped from Columbia.\n∃x (Sold(x, newHaven) ∧ Shipped(x, mexico)) ::: Some fruits sold in New Haven are shipped from Mexico.\n∀x (Shipped(x, columbia) → ¬Sold(x, newYork)) ::: No fruits shipped from Columbia are fruits sold in New York.\nKind(avocadoe, fruit) ∧ (Kind(avocadoe, fruit) ∨ Kind(avocadoe, newYork)) ::: Avocadoe are a kind of fruit sold in New York or New York.\nAvocadoe ⊕ Sold(avocadoe, newYork) ::: Avocadoe are either shipped from Columbia and sold in New Haven, or neither shipped from Columbia nor sold in New Haven.\nConclusion:\nKind(avocadoe, fruit) ::: Avocados are a kind of fruit sold in New York.\n------\nProblem:\nAll people who are not students are either unmarried or unmarried and have no children. All people who are not students are either unmarried or unmar"
    ]
  },
  {
    "id": "FOLIO_train_502",
    "context": "All fruits sold in Boston are shipped from Columbia. Some fruits sold in New Haven are shipped from Mexico. No fruits shipped from Columbia are fruits sold in New York. Avocadoe are a kind of fruit sold in New York or New York. Avocadoe are either shipped from Columbia and sold in New Haven, or neither shipped from Columbia nor sold in New Haven.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Avocados are either sold in New York or sold in New Haven.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFruit(x) ::: x is a fruit.\nSold(x, y) ::: x is sold in city y.\nShipped(x, y) ::: x is shipped from country y.\nKind(x, y) ::: x is a kind of y.\nPremises:\n∀x (Sold(x, boston) → Shipped(x, columbia)) ::: All fruits sold in Boston are shipped from Columbia.\n∃x (Sold(x, newhaven) ∧ Shipped(x, mexico)) ::: Some fruits sold in New Haven are shipped from Mexico.\n∀x (Shipped(x, columbia) → ¬Sold(x, newyork)) ::: No fruits shipped from Columbia are fruits sold in New York.\nKind(avocadoe, fruit) ∧ (Sold(avocadoe, newyork) ∨ Sold(avocadoe, newyork)) ::: Avocadoe are a kind of fruit sold in New York or New York.\n(Shipped(avocadoe, columbia) ∧ Sold(avocadoe, newhaven)) ∨ ¬(Shipped(avocadoe, columbia) ∧ Sold(avocadoe, newhaven)) ::: Avocadoe are either shipped from Columbia and sold in New Haven, or neither shipped from Columbia nor sold in New Haven.\nConclusion:\nSold(avocadoe, newyork) ∨ Sold(av"
    ]
  },
  {
    "id": "FOLIO_train_503",
    "context": "All fruits sold in Boston are shipped from Columbia. Some fruits sold in New Haven are shipped from Mexico. No fruits shipped from Columbia are fruits sold in New York. Avocadoe are a kind of fruit sold in New York or New York. Avocadoe are either shipped from Columbia and sold in New Haven, or neither shipped from Columbia nor sold in New Haven.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Avocados are either sold in New Haven or sold in Boston",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFruit(x) ::: x is a fruit.\nSold(x, y) ::: x is sold in city y.\nShipped(x, y) ::: x is shipped from country y.\nKind(x, y) ::: x is a kind of y.\nPremises:\n∀x (Sold(x, boston) → Shipped(x, columbia)) ::: All fruits sold in Boston are shipped from Columbia.\n∃x (Sold(x, newHaven) ∧ Shipped(x, mexico)) ::: Some fruits sold in New Haven are shipped from Mexico.\n∀x (Shipped(x, columbia) → ¬Sold(x, newYork)) ::: No fruits shipped from Columbia are fruits sold in New York.\nKind(avocadoe, fruit) ∧ (Sold(avocadoe, newYork) ∨ Sold(avocadoe, newYork)) ::: Avocadoe are a kind of fruit sold in New York or New York.\n(Shipped(avocadoe, columbia) ∧ Sold(avocadoe, newHaven)) ∨ ¬(Shipped(avocadoe, columbia) ∧ Sold(avocadoe, newHaven)) ::: Avocadoe are either shipped from Columbia and sold in New Haven, or neither shipped from Columbia nor sold in New Haven.\nConclusion:\nSold(avocadoe, newHaven) ∨ Sold(av"
    ]
  },
  {
    "id": "FOLIO_train_504",
    "context": "All fruits sold in Boston are shipped from Columbia. Some fruits sold in New Haven are shipped from Mexico. No fruits shipped from Columbia are fruits sold in New York. Avocadoe are a kind of fruit sold in New York or New York. Avocadoe are either shipped from Columbia and sold in New Haven, or neither shipped from Columbia nor sold in New Haven.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If avocados are not sold in New York and not shipped from Columbia, then they are neither sold in New York nor New Haven.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFruit(x) ::: x is a fruit.\nSold(x, y) ::: x is sold in city y.\nShipped(x, y) ::: x is shipped from country y.\nKind(x, y) ::: x is a kind of y.\nPremises:\n∀x (Sold(x, boston) → Shipped(x, columbia)) ::: All fruits sold in Boston are shipped from Columbia.\n∃x (Sold(x, newHaven) ∧ Shipped(x, mexico)) ::: Some fruits sold in New Haven are shipped from Mexico.\n∀x (Shipped(x, columbia) → ¬Sold(x, newYork)) ::: No fruits shipped from Columbia are fruits sold in New York.\nKind(avocadoe, fruit) ∧ (Sold(avocadoe, newYork) ∨ Sold(avocadoe, newYork)) ::: Avocadoe are a kind of fruit sold in New York or New York.\n(Shipped(avocadoe, columbia) ∧ Sold(avocadoe, newHaven)) ∨ ¬(Shipped(avocadoe, columbia) ∧ Sold(avocadoe, newHaven)) ::: Avocadoe are either shipped from Columbia and sold in New Haven, or neither shipped from Columbia nor sold in New Haven.\nConclusion:\n¬(Sold(avocadoe, newYork) ∧"
    ]
  },
  {
    "id": "FOLIO_train_505",
    "context": "Some monitors equipped in the library are produced by AOC. All monitors equipped in the library are cheaper than 800 dollars. All monitors cheaper than 800 dollars are with a resolution of 1080p. If a monitor has a resolution of 1080p, then it does not support the type-c port. A-2017 supports the type-c port.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A-2017 is produced by AOC.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProduced(x, y) ::: x is produced by y.\nEquipped(x, y) ::: x is equipped in y.\nCheaper(x, y) ::: x is cheaper than y.\nResolution(x, y) ::: x has a resolution of y.\nSupport(x, y) ::: x supports y.\nPremises:\n∃x (Equipped(x, library) ∧ Produced(x, aoc)) ::: Some monitors equipped in the library are produced by AOC.\n∀x (Equipped(x, library) → Cheaper(x, 800)) ::: All monitors equipped in the library are cheaper than 800 dollars.\n∀x (Cheaper(x, 800) → Resolution(x, 1080p)) ::: All monitors cheaper than 800 dollars are with a resolution of 1080p.\n∀x (Resolution(x, 1080p) → ¬Support(x, type-c)) ::: If a monitor has a resolution of 1080p, then it does not support the type-c port.\nSupport(a-2017, type-c) ::: A-2017 supports the type-c port.\nConclusion:\nProduced(aoc, a-2017) ::: A-2017 is produced by AOC.\n------\nProblem:\nSome people are not students. All students are either studying or working. All people who are not"
    ]
  },
  {
    "id": "FOLIO_train_506",
    "context": "Some monitors equipped in the library are produced by AOC. All monitors equipped in the library are cheaper than 800 dollars. All monitors cheaper than 800 dollars are with a resolution of 1080p. If a monitor has a resolution of 1080p, then it does not support the type-c port. A-2017 supports the type-c port.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A-2017 is produced by AOC and equipped in the library.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProduce(x, y) ::: x produces y.\nEquip(x, y) ::: x is equipped in y.\nCheaper(x, y) ::: x is cheaper than y.\nResolution(x, y) ::: x has a resolution of y.\nSupport(x, y) ::: x supports y.\nPremises:\n∃x (Produce(aoc, x) ∧ Equip(library, x)) ::: Some monitors equipped in the library are produced by AOC.\n∀x (Equip(library, x) → Cheaper(x, 800)) ::: All monitors equipped in the library are cheaper than 800 dollars.\n∀x (Cheaper(x, 800) → Resolution(x, 1080p)) ::: All monitors cheaper than 800 dollars are with a resolution of 1080p.\n∀x (Resolution(x, 1080p) → ¬Support(x, type-c)) ::: If a monitor has a resolution of 1080p, then it does not support the type-c port.\nSupport(a-2017, type-c) ::: A-2017 supports the type-c port.\nConclusion:\nProduce(aoc, a-2017) ∧ Equip(library, a-2017) ::: A-2017 is produced by AOC and equipped in the library.\n------\nProblem:\nSome people"
    ]
  },
  {
    "id": "FOLIO_train_507",
    "context": "Some monitors equipped in the library are produced by AOC. All monitors equipped in the library are cheaper than 800 dollars. All monitors cheaper than 800 dollars are with a resolution of 1080p. If a monitor has a resolution of 1080p, then it does not support the type-c port. A-2017 supports the type-c port.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If A-2017 is not with a resolution of 1080p or produced by AOC, then it is not equipped in the library.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProduce(x, y) ::: x produces y.\nEquip(x, y) ::: x is equipped in y.\nCheaper(x, y) ::: x is cheaper than y.\nResolution(x, y) ::: x has a resolution of y.\nSupport(x, y) ::: x supports y.\nPremises:\n∃x (Produce(aoc, x) ∧ Equip(library, x)) ::: Some monitors equipped in the library are produced by AOC.\n∀x (Equip(library, x) → Cheaper(x, 800)) ::: All monitors equipped in the library are cheaper than 800 dollars.\n∀x (Cheaper(x, 800) → Resolution(x, 1080p)) ::: All monitors cheaper than 800 dollars are with a resolution of 1080p.\n∀x (Resolution(x, 1080p) → ¬Support(x, type-c)) ::: If a monitor has a resolution of 1080p, then it does not support the type-c port.\nSupport(a-2017, type-c) ::: A-2017 supports the type-c port.\nConclusion:\n(¬Resolution(a-2017, 1080p) ∧ ¬Produce(aoc, a-2017)) → ¬Equip(library, a-2017) ::: If"
    ]
  },
  {
    "id": "FOLIO_train_508",
    "context": "Sūduva Marijampolė holds the Lithuanian Supercup. Sūduva Marijampolė is a soccer team.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Some soccer team holds the Lithuanian Supercup.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nHolds(x, y) ::: x holds y.\nSoccerTeam(x) ::: x is a soccer team.\nPremises:\nHolds(sūduvaMarijampolė, lithuanianSupercup) ::: Sūduva Marijampolė holds the Lithuanian Supercup.\nSoccerTeam(sūduvaMarijampolė) ::: Sūduva Marijampolė is a soccer team.\nConclusion:\n∃x (SoccerTeam(x) ∧ Holds(x, lithuanianSupercup)) ::: Some soccer team holds the Lithuanian Supercup.\n------\nProblem:\nThe 2019 FIFA Women's World Cup was the eighth edition of the FIFA Women's World Cup, the quadrennial international football championship contested by the women's national teams of the member associations of FIFA. The tournament was hosted by France from 7 June to 7 July 2019. The United States won the tournament for the fourth time, defeating the Netherlands 2–0 in the final.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The 2019 FIFA Women's World Cup was hosted by France.\n###\nPredicates:\nHost(x, y) ::: x hosted y.\nWomenWorldCup(x) ::: x is the 2019 FIFA Women's World Cup.\nPremises:\nWomenWorldCup(2019FIFAWomen'sWorld"
    ]
  },
  {
    "id": "FOLIO_train_509",
    "context": "Ainderby Quernhow is a village and civil parish in the Hambleton District. Hambleton District is in North Yorkshire. North Yorkshire is in England.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There is a village in England.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nVillage(x) ::: x is a village.\nCivilParish(x) ::: x is a civil parish.\nDistrict(x) ::: x is a district.\nCounty(x) ::: x is a county.\nCountry(x) ::: x is a country.\nPremises:\nVillage(ainderbyQuernhow) ∧ CivilParish(ainderbyQuernhow) ∧ District(hambleton) ∧ County(northYorkshire) ∧ Country(england) ::: Ainderby Quernhow is a village and civil parish in the Hambleton District. Hambleton District is in North Yorkshire. North Yorkshire is in England.\nConclusion:\nVillage(x) ∧ Country(england) ::: There is a village in England.\n------\nProblem:\nA person is a student if and only if the person is enrolled in a course. A person is enrolled in a course if and only if the person is taking the course. A person is taking a course if and only if the person is registered for the course. A person is registered for a course if and only if the person is enrolled in the course.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? A person is a student if and only if the person is registered for a course.\n###\nPredicates:\nStudent(x) ::: x is a student.\nCourse(x) ::: x is a course.\nEnrolled(x, y) ::: x is enrolled"
    ]
  },
  {
    "id": "FOLIO_train_510",
    "context": "Ainderby Quernhow is a village and civil parish in the Hambleton District. Hambleton District is in North Yorkshire. North Yorkshire is in England.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There is no civil parish in England.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nVillage(x) ::: x is a village.\nCivilParish(x) ::: x is a civil parish.\nDistrict(x) ::: x is a district.\nCounty(x) ::: x is a county.\nCountry(x) ::: x is a country.\nPremises:\nVillage(ainderbyQuernhow) ∧ CivilParish(ainderbyQuernhow) ∧ District(hambleton) ∧ County(northYorkshire) ∧ Country(england) ::: Ainderby Quernhow is a village and civil parish in the Hambleton District. Hambleton District is in North Yorkshire. North Yorkshire is in England.\nConclusion:\n¬∃x (CivilParish(x) ∧ Country(x)) ::: There is no civil parish in England.\n------"
    ]
  },
  {
    "id": "FOLIO_train_511",
    "context": "Douglas Adams is an author who created the book collection called The Salmon of Doubt. The Salmon of Doubt is about life experiences and technology. All authors are writers. Writers create innovative ideas. Some books that contain innovative ideas are about technology.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Douglas Adams is a writer.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAuthor(x) ::: x is an author.\nWriter(x) ::: x is a writer.\nCreate(x, y) ::: x creates y.\nBook(x) ::: x is a book.\nContain(x, y) ::: x contains y.\nAbout(x, y) ::: x is about y.\nInnovative(x) ::: x is innovative.\nPremises:\nAuthor(douglas) ∧ Create(douglas, salmonOfDoubt) ∧ Book(salmonOfDoubt) ::: Douglas Adams is an author who created the book collection called The Salmon of Doubt.\nBook(salmonOfDoubt) ∧ Contain(salmonOfDoubt, lifeExperiences) ∧ Contain(salmonOfDoubt, technology) ::: The Salmon of Doubt is about life experiences and technology"
    ]
  },
  {
    "id": "FOLIO_train_512",
    "context": "Douglas Adams is an author who created the book collection called The Salmon of Doubt. The Salmon of Doubt is about life experiences and technology. All authors are writers. Writers create innovative ideas. Some books that contain innovative ideas are about technology.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Douglas Adams created innovative ideas.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAuthor(x) ::: x is an author.\nWriter(x) ::: x is a writer.\nCreate(x, y) ::: x creates y.\nBook(x) ::: x is a book.\nContain(x, y) ::: x contains y.\nAbout(x, y) ::: x is about y.\nInnovative(x) ::: x is innovative.\nPremises:\nAuthor(douglas) ∧ Create(douglas, salmonOfDoubt) ∧ Book(salmonOfDoubt) ::: Douglas Adams is an author who created the book collection called The Salmon of Doubt.\nBook(salmonOfDoubt) ∧ Contain(salmonOfDoubt, lifeExperiences) ∧ Contain(salmonOfDoubt, technology) ::: The Salmon of Doubt is about life experiences and technology"
    ]
  },
  {
    "id": "FOLIO_train_513",
    "context": "Douglas Adams is an author who created the book collection called The Salmon of Doubt. The Salmon of Doubt is about life experiences and technology. All authors are writers. Writers create innovative ideas. Some books that contain innovative ideas are about technology.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Salmon of Doubt has no innovative Ideas.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAuthor(x) ::: x is an author.\nWriter(x) ::: x is a writer.\nCreate(x, y) ::: x creates y.\nBook(x) ::: x is a book.\nContain(x, y) ::: x contains y.\nInnovative(x) ::: x is innovative.\nAbout(x, y) ::: x is about y.\nPremises:\nAuthor(douglas) ∧ Create(douglas, salmonOfDoubt) ∧ Book(salmonOfDoubt) ::: Douglas Adams is an author who created the book collection called The Salmon of Doubt.\n∀x (Author(x) → Writer(x)) ::: All authors are writers.\n∀x (Writer(x) → Create(x, innovativeIdeas)) ::: Writers create innovative ideas.\n∃x"
    ]
  },
  {
    "id": "FOLIO_train_514",
    "context": "No disposable products can help slow down global warming. All eco-friendly brands can help slow down global warming. All sustainable fashion brands are eco-friendly brands. All fast fashion products are disposable products. If Reformation is not helping slow down global warming, then Reformation is an eco-friendly brand or a sustainable fashion brand.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Reformation is an eco-friendly brand.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDisposableProduct(x) ::: x is a disposable product.\nEcoFriendlyBrand(x) ::: x is an eco-friendly brand.\nSustainableFashionBrand(x) ::: x is a sustainable fashion brand.\nHelpSlowDownGlobalWarming(x) ::: x can help slow down global warming.\nPremises:\n¬∃x (DisposableProduct(x) ∧ HelpSlowDownGlobalWarming(x)) ::: No disposable products can help slow down global warming.\n∀x (EcoFriendlyBrand(x) → HelpSlowDownGlobalWarming(x)) ::: All eco-friendly brands can help slow down global warming.\n∀x (SustainableFashionBrand(x) → EcoFriendlyBrand(x)) ::: All sustainable fashion brands are"
    ]
  },
  {
    "id": "FOLIO_train_515",
    "context": "No disposable products can help slow down global warming. All eco-friendly brands can help slow down global warming. All sustainable fashion brands are eco-friendly brands. All fast fashion products are disposable products. If Reformation is not helping slow down global warming, then Reformation is an eco-friendly brand or a sustainable fashion brand.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Reformation produces fast fashion products.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDisposableProduct(x) ::: x is a disposable product.\nEcoFriendlyBrand(x) ::: x is an eco-friendly brand.\nSustainableFashionBrand(x) ::: x is a sustainable fashion brand.\nHelpSlowDownGlobalWarming(x) ::: x can help slow down global warming.\nProduce(x, y) ::: x produces y.\nPremises:\n¬(DisposableProduct(x) ∧ HelpSlowDownGlobalWarming(x)) ::: No disposable products can help slow down global warming.\n∀x (EcoFriendlyBrand(x) → HelpSlowDownGlobalWarming(x)) ::: All eco-friendly brands can help slow down global warming.\n∀x (SustainableFashionBrand(x) → EcoFriendlyBrand"
    ]
  },
  {
    "id": "FOLIO_train_516",
    "context": "No disposable products can help slow down global warming. All eco-friendly brands can help slow down global warming. All sustainable fashion brands are eco-friendly brands. All fast fashion products are disposable products. If Reformation is not helping slow down global warming, then Reformation is an eco-friendly brand or a sustainable fashion brand.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Reformation does not produce fast fashion products.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDisposableProduct(x) ::: x is a disposable product.\nEcoFriendlyBrand(x) ::: x is an eco-friendly brand.\nSustainableFashionBrand(x) ::: x is a sustainable fashion brand.\nHelpSlowDownGlobalWarming(x) ::: x can help slow down global warming.\nProduce(x, y) ::: x produces y.\nPremises:\n¬(DisposableProduct(x) ∧ HelpSlowDownGlobalWarming(x)) ::: No disposable products can help slow down global warming.\n∀x (EcoFriendlyBrand(x) ∧ HelpSlowDownGlobalWarming(x)) ::: All eco-friendly brands can help slow down global warming.\n∀x (SustainableFashionBrand(x) ∧"
    ]
  },
  {
    "id": "FOLIO_train_517",
    "context": "No disposable products can help slow down global warming. All eco-friendly brands can help slow down global warming. All sustainable fashion brands are eco-friendly brands. All fast fashion products are disposable products. If Reformation is not helping slow down global warming, then Reformation is an eco-friendly brand or a sustainable fashion brand.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Reformation does not produce fast fashion products or does not produce disposable products.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDisposable(x) ::: x is a disposable product.\nEcoFriendly(x) ::: x is an eco-friendly brand.\nSustainable(x) ::: x is a sustainable fashion brand.\nSlowDown(x) ::: x can help slow down global warming.\nProduce(x, y) ::: x produces y.\nPremises:\n¬(Disposable(reformation) ∧ SlowDown(reformation)) → (EcoFriendly(reformation) ∨ Sustainable(reformation)) ::: If Reformation is not helping slow down global warming, then Reformation is an eco-friendly brand or a sustainable fashion brand.\n∀x (EcoFriendly(x) → SlowDown(x)) ::: All eco-friendly brands can help slow down global warming.\n∀x (Sustainable(x"
    ]
  },
  {
    "id": "FOLIO_train_518",
    "context": "No disposable products can help slow down global warming. All eco-friendly brands can help slow down global warming. All sustainable fashion brands are eco-friendly brands. All fast fashion products are disposable products. If Reformation is not helping slow down global warming, then Reformation is an eco-friendly brand or a sustainable fashion brand.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Reformation produces disposable products, then Reformation produces fast fashion products.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDisposable(x) ::: x is a disposable product.\nFastFashion(x) ::: x is a fast fashion product.\nEcoFriendly(x) ::: x is an eco-friendly brand.\nSustainableFashion(x) ::: x is a sustainable fashion brand.\nHelp(x, y) ::: x can help slow down y.\nPremises:\n¬(Disposable(x) ∧ Help(x, globalWarming)) ::: No disposable products can help slow down global warming.\n∀x (EcoFriendly(x) ∧ Help(x, globalWarming)) ::: All eco-friendly brands can help slow down global warming.\n∀x (SustainableFashion(x) ∧ EcoFriendly(x)) ::: All sustainable fashion brands are eco-friendly brands"
    ]
  },
  {
    "id": "FOLIO_train_519",
    "context": "No disposable products can help slow down global warming. All eco-friendly brands can help slow down global warming. All sustainable fashion brands are eco-friendly brands. All fast fashion products are disposable products. If Reformation is not helping slow down global warming, then Reformation is an eco-friendly brand or a sustainable fashion brand.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Reformation produces fast fashion products or helps slow down global warming, then Reformation produces fast fashion products.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDisposableProduct(x) ::: x is a disposable product.\nEcoFriendlyBrand(x) ::: x is an eco-friendly brand.\nSustainableFashionBrand(x) ::: x is a sustainable fashion brand.\nHelpSlowDownGlobalWarming(x) ::: x helps slow down global warming.\nProduce(x, y) ::: x produces y.\nPremises:\n¬(DisposableProduct(x) ∧ HelpSlowDownGlobalWarming(x)) ::: No disposable products can help slow down global warming.\n∀x (EcoFriendlyBrand(x) → HelpSlowDownGlobalWarming(x)) ::: All eco-friendly brands can help slow down global warming.\n∀x (SustainableFashionBrand(x) → EcoFriendlyBrand("
    ]
  },
  {
    "id": "FOLIO_train_520",
    "context": "Roy Richardson was a cricketer for Sint Maartener, a consituent country. Roy Richardson was a right handed batsman and medium pace bowler. Roy Richardson was old when he debuted in cricket. Sherville Huggins dismissed Roy Richardson.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Sherville Huggins has never dismissed anyone playing for a constituent country.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCricketer(x) ::: x is a cricketer.\nRightHanded(x) ::: x is a right handed batsman.\nMediumPace(x) ::: x is a medium pace bowler.\nOld(x) ::: x is old.\nDebut(x, y) ::: x debuted in cricket in year y.\nDismiss(x, y) ::: x dismissed y.\nConstituentCountry(x) ::: x is a constituent country.\nPremises:\nCricketer(roy) ∧ RightHanded(roy) ∧ MediumPace(roy) ∧ Old(roy) ∧ Debut(roy, year1960) ::: Roy Richardson was a cricketer for Sint Maartener, a consituent country.\nDismiss(sherville, roy) ::: Sherville Huggins dismissed Roy Richardson.\nConclusion:\n¬∃x (Cricketer(x) ∧ ConstituentCountry(x) ∧ Dismiss(sherville, x)) ::: Sherville Huggins has never dismissed anyone playing for a constituent country.\n------"
    ]
  },
  {
    "id": "FOLIO_train_521",
    "context": "Roy Richardson was a cricketer for Sint Maartener, a consituent country. Roy Richardson was a right handed batsman and medium pace bowler. Roy Richardson was old when he debuted in cricket. Sherville Huggins dismissed Roy Richardson.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There are no right handed medium pace bowlers playing for Sint Maartener.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCricketer(x) ::: x is a cricketer.\nRightHanded(x) ::: x is a right handed batsman.\nMediumPace(x) ::: x is a medium pace bowler.\nOld(x) ::: x is old.\nDebut(x, y) ::: x debuted in cricket in year y.\nDismiss(x, y) ::: x dismissed y.\nPremises:\nCricketer(roy) ∧ RightHanded(roy) ∧ MediumPace(roy) ∧ Old(roy) ::: Roy Richardson was a cricketer for Sint Maartener, a consituent country.\nCricketer(roy) ∧ RightHanded(roy) ∧ MediumPace(roy) ::: Roy Richardson was a right handed medium pace bowler.\nDebut(roy, year1970) ::: Roy Richardson was old when he debuted in cricket.\nDismiss(sherville, roy) ::: Sherville Huggins dismissed Roy Richardson.\nConclusion:\n¬∃x (Cricketer(x) ∧ RightHanded"
    ]
  },
  {
    "id": "FOLIO_train_522",
    "context": "To get a job at Google, you need to have a lot of work experience or a good education. All Yale graduates who submitted their resumes to Google got jobs there. John has a lot of work experience. John submitted his resume to Google and got a job there.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? John is a Yale graduate.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nYaleGraduate(x) ::: x is a Yale graduate.\nWorkExperience(x) ::: x has a lot of work experience.\nSubmit(x, y) ::: x submitted his resume to y.\nGetJob(x, y) ::: x got a job at y.\nPremises:\n∀x (YaleGraduate(x) → GetJob(x, google)) ::: All Yale graduates who submitted their resumes to Google got jobs there.\nWorkExperience(john) ::: John has a lot of work experience.\nSubmit(john, google) ∧ GetJob(john, google) ::: John submitted his resume to Google and got a job there.\nConclusion:\nYaleGraduate(john) ::: John is a Yale graduate.\n------\nProblem:\nAll people who are not students are either married or have a job. All people who are married have a job. All people who have a job are either married or have a job. All people who are married have a job. All people who have a job are either married or have a job. All people who are married have a job. All people who have a job are either married or have a job. All people who are married"
    ]
  },
  {
    "id": "FOLIO_train_523",
    "context": "No students are doctors. All people taking classes are students. All graduate students are people taking classes. All PhD students are graduate students. If Joe is a graduate student or a doctor (but not both), then Joe is not a graduate student and a student.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Joe is a person taking classes.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nStudent(x) ::: x is a student.\nDoctor(x) ::: x is a doctor.\nGraduateStudent(x) ::: x is a graduate student.\nPhDStudent(x) ::: x is a PhD student.\nTakeClass(x) ::: x is taking a class.\nPremises:\n¬∀x (Student(x) → Doctor(x)) ::: No students are doctors.\n∀x (TakeClass(x) → Student(x)) ::: All people taking classes are students.\n∀x (GraduateStudent(x) → TakeClass(x)) ::: All graduate students are people taking classes.\n∀x (PhDStudent(x) → GraduateStudent(x)) ::: All PhD students are graduate students.\n∃x (GraduateStudent(x) ∨ Doctor(x)) ::: If Joe is a graduate student or a doctor (but not both), then Joe is not a graduate student and a student.\nConclusion:\nTakeClass(joe) ::: Joe is a person taking classes.\n------\nProblem:\nAll people who are not students are either doctors or professors. All professors are people who are not students. All people"
    ]
  },
  {
    "id": "FOLIO_train_524",
    "context": "No students are doctors. All people taking classes are students. All graduate students are people taking classes. All PhD students are graduate students. If Joe is a graduate student or a doctor (but not both), then Joe is not a graduate student and a student.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Joe is a PhD student.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nStudent(x) ::: x is a student.\nDoctor(x) ::: x is a doctor.\nGraduateStudent(x) ::: x is a graduate student.\nPhDStudent(x) ::: x is a PhD student.\nTakeClass(x) ::: x is taking a class.\nPremises:\n¬∀x (Student(x) → Doctor(x)) ::: No students are doctors.\n∀x (TakeClass(x) → Student(x)) ::: All people taking classes are students.\n∀x (GraduateStudent(x) → TakeClass(x)) ::: All graduate students are people taking classes.\n∀x (PhDStudent(x) → GraduateStudent(x)) ::: All PhD students are graduate students.\n¬∃x (GraduateStudent(x) ∧ Doctor(x)) ::: If Joe is a graduate student or a doctor (but not both), then Joe is not a graduate student and a student.\nConclusion:\nPhDStudent(joe) ::: Joe is a PhD student.\n------\nProblem:\nAll people who are not students are either doctors or professors. All professors are people who are not students. All"
    ]
  },
  {
    "id": "FOLIO_train_525",
    "context": "No students are doctors. All people taking classes are students. All graduate students are people taking classes. All PhD students are graduate students. If Joe is a graduate student or a doctor (but not both), then Joe is not a graduate student and a student.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Joe is not a PhD student.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nStudent(x) ::: x is a student.\nDoctor(x) ::: x is a doctor.\nGraduateStudent(x) ::: x is a graduate student.\nPhDStudent(x) ::: x is a PhD student.\nTakeClass(x) ::: x is taking a class.\nPremises:\n¬∀x (Student(x) → Doctor(x)) ::: No students are doctors.\n∀x (TakeClass(x) → Student(x)) ::: All people taking classes are students.\n∀x (GraduateStudent(x) → TakeClass(x)) ::: All graduate students are people taking classes.\n∀x (PhDStudent(x) → GraduateStudent(x)) ::: All PhD students are graduate students.\n¬∃x (GraduateStudent(x) ∧ Doctor(x)) ::: If Joe is a graduate student or a doctor (but not both), then Joe is not a graduate student and a student.\nConclusion:\n¬PhDStudent(joe) ::: Joe is not a PhD student.\n------\nProblem:\nAll people who are not students are either doctors or professors. All professors are people who are not students"
    ]
  },
  {
    "id": "FOLIO_train_526",
    "context": "Hugh Vanstone is one of the world's leading lighting designers. Hugh Vanstone is from the UK. Hugh Vanstone has lit more than 160 productions. Hugh Vanstone attended school where he is from.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Hugh Vanstone is one of the world's leading ligting designers and from the uk",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLightingDesigner(x) ::: x is a lighting designer.\nFrom(x, y) ::: x is from y.\nAttend(x, y) ::: x attended y.\nSchool(x) ::: x is a school.\nPremises:\nLightingDesigner(hugh) ∧ From(hugh, uk) ∧ Attend(hugh, school) ::: Hugh Vanstone is one of the world's leading lighting designers.\n∀x (LightingDesigner(x) → From(x, uk)) ::: Hugh Vanstone is from the UK.\n∀x (LightingDesigner(x) → Attend(x, school)) ::: Hugh Vanstone has lit more than 160 productions.\n∀x (LightingDesigner(x) → Attend(x, school)) ::: Hugh Vanstone attended school where he is from.\nConclusion:\nLightingDesigner(hugh) ∧ From(hugh, uk) ::: Hugh Vanstone is one of the world's leading ligting designers and from the uk\n------\nProblem:\nA person is a student if and only if the person is a student. A"
    ]
  },
  {
    "id": "FOLIO_train_527",
    "context": "Hugh Vanstone is one of the world's leading lighting designers. Hugh Vanstone is from the UK. Hugh Vanstone has lit more than 160 productions. Hugh Vanstone attended school where he is from.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Hugh Vanstone has lit 170 productions.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nUK(x) ::: x is from the UK.\nLightingDesigner(x) ::: x is a lighting designer.\nAttend(x, y) ::: x attended school y.\nPremises:\nLightingDesigner(hugh) ∧ UK(hugh) ∧ Attend(hugh, school) ::: Hugh Vanstone is one of the world's leading lighting designers.\n∀x (LightingDesigner(x) → UK(x)) ::: All lighting designers are from the UK.\n∀x (LightingDesigner(x) → Attend(x, school)) ::: All lighting designers attended school where they are from.\n∃x (LightingDesigner(x) ∧ Lit(x, 160)) ::: Hugh Vanstone has lit more than 160 productions.\nConclusion:\nLit(hugh, 170) ::: Hugh Vanstone has lit 170 productions.\n------\nProblem:\nThe 1996 Summer Olympics were held in Atlanta, Georgia. The 1996 Summer Olympics were the first Summer Olympics to be held in the United States since the 1984"
    ]
  },
  {
    "id": "FOLIO_train_528",
    "context": "Hugh Vanstone is one of the world's leading lighting designers. Hugh Vanstone is from the UK. Hugh Vanstone has lit more than 160 productions. Hugh Vanstone attended school where he is from.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Hugh Vanstone attended school in the US.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nUK(x) ::: x is from the UK.\nUS(x) ::: x is from the US.\nSchool(x) ::: x is a school.\nAttend(x, y) ::: x attended y.\nLight(x, y) ::: x lit y.\nPremises:\nUK(hugh) ∧ Light(hugh, moreThan160Productions) ∧ Attend(hugh, school) ::: Hugh Vanstone is one of the world's leading lighting designers.\nUK(hugh) ::: Hugh Vanstone is from the UK.\nLight(hugh, moreThan160Productions) ::: Hugh Vanstone has lit more than 160 productions.\nAttend(hugh, school) ::: Hugh Vanstone attended school.\nSchool(school) ::: School is a school.\nConclusion:\nAttend(hugh, school) ::: Hugh Vanstone attended school.\nAttend(hugh, school) ∧ US(school) ::: Hugh Vanstone attended school in the US.\n------\nProblem:\nThe first person to win the Nobel Prize in Physics was Wilhelm Conrad Röntgen. Wilhelm Con"
    ]
  },
  {
    "id": "FOLIO_train_529",
    "context": "No man can run faster than Bolt. Superman is not a man.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Superman can run faster than Bolt.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMan(x) ::: x is a man.\nRun(x, y) ::: x can run faster than y.\nSuperman(x) ::: x is Superman.\nPremises:\n∀x (Man(x) → ¬Run(x, bolt)) ::: No man can run faster than Bolt.\nSuperman(superman) ::: Superman is not a man.\nConclusion:\nRun(superman, bolt) ::: Superman can run faster than Bolt.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a"
    ]
  },
  {
    "id": "FOLIO_train_530",
    "context": "Donald Ervin Knuth is an American computer scientist, mathematician, and Professor Emeritus at Stanford University. Knuth has been called the \"father of the analysis of algorithms\".",
    "question": "Based on the above information, is the following statement true, false, or uncertain? An American scientist has been called the \"father of the analysis of algorithms\".",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAmerican(x) ::: x is an American.\nScientist(x) ::: x is a scientist.\nMathematician(x) ::: x is a mathematician.\nProfessor(x) ::: x is a professor.\nEmeritus(x) ::: x is a professor emeritus.\nAnalysis(x) ::: x is an analysis.\nAlgorithms(x) ::: x is an algorithms.\nFather(x, y) ::: x is the father of y.\nPremises:\nAmerican(donald) ∧ Scientist(donald) ∧ Mathematician(donald) ∧ Professor(donald) ∧ Emeritus(donald) ::: Donald Ervin Knuth is an American computer scientist, mathematician, and Professor Emeritus at Stanford University.\nAnalysis(analysisOfAlgorithms) ::: Analysis of algorithms is an analysis.\nAlgorithms(analysisOfAlgorithms) ::: Algorithms of analysis is an algorithms.\nFather(donald, analysisOfAlgorithms) ::: Donald Ervin Knuth is the father of analysis of algorithms.\nConclusion:\nAmerican(x) ∧ Scientist(x) ∧ Mathematician(x) ∧ Professor(x) ∧ Emeritus(x) ∧ Father(x, analysisOfAlgorithms) ::: An American scientist has been called the \"father of the analysis of algorithms\".\n------"
    ]
  },
  {
    "id": "FOLIO_train_531",
    "context": "Donald Ervin Knuth is an American computer scientist, mathematician, and Professor Emeritus at Stanford University. Knuth has been called the \"father of the analysis of algorithms\".",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A mathematician has been called the \"father of the analysis of algorithms\".",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAmerican(x) ::: x is an American.\nComputerScientist(x) ::: x is a computer scientist.\nMathematician(x) ::: x is a mathematician.\nProfessor(x) ::: x is a professor.\nEmeritus(x) ::: x is a professor emeritus.\nStanford(x) ::: x is a professor at Stanford University.\nAnalysis(x) ::: x is the analysis of algorithms.\nPremises:\nAmerican(donald) ∧ ComputerScientist(donald) ∧ Mathematician(donald) ∧ Professor(donald) ∧ Emeritus(donald) ∧ Stanford(donald) ::: Donald Ervin Knuth is an American computer scientist, mathematician, and Professor Emeritus at Stanford University.\nAnalysis(analysisOfAlgorithms) ::: Analysis is the analysis of algorithms.\nConclusion:\nMathematician(donald) → (Analysis(analysisOfAlgorithms) ∧ Father(donald, analysisOfAlgorithms)) ::: A mathematician has been called the \"father of the analysis of algorithms\".\n------\nProblem:\nThe 1996 Summer Olympics were held in Atlanta, Georgia, United States. The 1996 Summer Olympics were the first Summer Olympics to be held in the United States since the 1984 Summer Olympics in Los Angeles. The 1996 Summer Olympics were"
    ]
  },
  {
    "id": "FOLIO_train_532",
    "context": "Donald Ervin Knuth is an American computer scientist, mathematician, and Professor Emeritus at Stanford University. Knuth has been called the \"father of the analysis of algorithms\".",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Donald Knuth is a well-known figure in the field of artificial intelligence .",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAmerican(x) ::: x is an American.\nComputerScientist(x) ::: x is a computer scientist.\nMathematician(x) ::: x is a mathematician.\nProfessor(x) ::: x is a professor.\nEmeritus(x) ::: x is a professor emeritus.\nStanford(x) ::: x is a professor at Stanford University.\nWellKnown(x) ::: x is a well-known figure in the field of artificial intelligence.\nPremises:\nAmerican(donald) ∧ ComputerScientist(donald) ∧ Mathematician(donald) ∧ Professor(donald) ∧ Emeritus(donald) ∧ Stanford(donald) ::: Donald Ervin Knuth is an American computer scientist, mathematician, and Professor Emeritus at Stanford University.\n∀x (ComputerScientist(x) → WellKnown(x)) ::: Knuth has been called the \"father of the analysis of algorithms\".\nConclusion:\nWellKnown(donald) ::: Donald Knuth is a well-known figure in the field of artificial intelligence.\n------\nProblem:\nThe 1996 Summer Olympics, officially known as the Games of the XXVI Olympiad and commonly known as Atlanta 1996, was an international multi-sport event held in Atlanta, Georgia, United States, from July 19 to August"
    ]
  },
  {
    "id": "FOLIO_train_533",
    "context": "Neocrepidodera Corpulentas are flea beetles or moths. The species Neocrepidodera Corpulenta is in the Chrysomelidae family. There are no moths within the Chrysomelidae family.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There is a flea beetle within the Chrysomelidae family.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFleaBeetle(x) ::: x is a flea beetle.\nMoth(x) ::: x is a moth.\nChrysomelidae(x) ::: x is in the Chrysomelidae family.\nSpecies(x) ::: x is a species.\nPremises:\nNeocrepidodera Corpulentas ∧ FleaBeetle(Neocrepidodera Corpulentas) ::: Neocrepidodera Corpulentas are flea beetles or moths.\nNeocrepidodera Corpulenta ∧ Species(Neocrepidodera Corpulenta) ∧ Chrysomelidae(Neocrepidodera Corpulenta) ::: The species Neocrepidodera Corpulenta is in the Chrysomelidae family.\n∀x (Chrysomelidae(x) → ¬Moth(x)) ::: There are no moths within the Chrysomelidae family.\nConclusion:\nFleaBeetle(Neocrepidodera Corpulenta) ::: There is a flea beetle within the Chrysomelidae family.\n------\nProblem:\nThe number of people who are not students is greater than the number of people who are students. The number of people who are not students is greater than the number of people who are not students. The number of people who are not students is greater than the number of people"
    ]
  },
  {
    "id": "FOLIO_train_534",
    "context": "Neocrepidodera Corpulentas are flea beetles or moths. The species Neocrepidodera Corpulenta is in the Chrysomelidae family. There are no moths within the Chrysomelidae family.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There are no flea beetles within the Chrysomelidae family.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFleaBeetle(x) ::: x is a flea beetle.\nMoth(x) ::: x is a moth.\nChrysomelidae(x) ::: x is in the Chrysomelidae family.\nSpecies(x) ::: x is a species.\nPremises:\nNeocrepidodera Corpulentas ∧ FleaBeetle(Neocrepidodera Corpulentas) ::: Neocrepidodera Corpulentas are flea beetles or moths.\nNeocrepidodera Corpulenta ∧ Species(Neocrepidodera Corpulenta) ∧ Chrysomelidae(Neocrepidodera Corpulenta) ::: The species Neocrepidodera Corpulenta is in the Chrysomelidae family.\n∀x (Chrysomelidae(x) → ¬Moth(x)) ::: There are no moths within the Chrysomelidae family.\nConclusion:\n¬∃x (FleaBeetle(x) ∧ Chrysomelidae(x)) ::: There are no flea beetles within the Chrysomelidae family.\n------\nProblem:\nThe number of people who are not students is greater than the number of people who are students. The number of people who are not students is greater than the number of people who are not students. The number of people who"
    ]
  },
  {
    "id": "FOLIO_train_535",
    "context": "Carrozzeria Colli is a Milanese coachbuilder company that was established by Giuseppe Colli in 1931. Carrozzeria Colli is a company that specialized in using aluminum. The first automobiles built by Carrozzeria Colli were racing cars. Some racing cars built by Carrozzeria Colli used Fiat 1100 mechanicals and chasis. Carrozzeria Colli worked for airforces. Carrozzeria Colli made car bodies.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Carrozzeria Colli made car bodies in 1931.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCarrozzeriaColli(x) ::: x is a Milanese coachbuilder company that was established by Giuseppe Colli in 1931.\nCompany(x) ::: x is a company.\nSpecialize(x, y) ::: x specializes in y.\nRacingCar(x) ::: x is a racing car.\nUse(x, y) ::: x uses y.\nMechanical(x) ::: x is a mechanical.\nChasis(x) ::: x is a chasis.\nWork(x, y) ::: x works for y.\nBody(x) ::: x is a body.\nPremises:\nCarrozzeriaColli(carrozzeriaColli) ::: Carrozzeria Colli is a Milanese coachbuilder company that was established by Giuseppe Colli in 1931.\nCompany(carrozzeriaColli) ::: Carrozzeria Colli is a company.\n∀x (Company(x) → Specialize(x, aluminum)) ::: A company that specialized in using aluminum.\n∃x (RacingCar(x) ∧ Use(x, Fiat1100Mechanical)) ::: Some racing cars built by Carrozzeria Colli used Fiat 1100 mechanicals and chasis.\n∃x (RacingCar(x) ∧ Use(x, Fiat1100Chasis)) ::: Some racing cars built by Car"
    ]
  },
  {
    "id": "FOLIO_train_536",
    "context": "Carrozzeria Colli is a Milanese coachbuilder company that was established by Giuseppe Colli in 1931. Carrozzeria Colli is a company that specialized in using aluminum. The first automobiles built by Carrozzeria Colli were racing cars. Some racing cars built by Carrozzeria Colli used Fiat 1100 mechanicals and chasis. Carrozzeria Colli worked for airforces. Carrozzeria Colli made car bodies.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Carrozzeria Colli built airplanes during World War II.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCarrozzeriaColli(x) ::: x is a company that specialized in using aluminum.\nCompany(x) ::: x is a company.\nRacingCar(x) ::: x is a racing car.\nAirforce(x) ::: x is an airforce.\nAirplane(x) ::: x is an airplane.\nCarBody(x) ::: x is a car body.\nPremises:\nCarrozzeriaColli(carrozzeriaColli) ∧ Company(carrozzeriaColli) ∧ Specialize(carrozzeriaColli, aluminum) ::: Carrozzeria Colli is a Milanese coachbuilder company that was established by Giuseppe Colli in 1931.\n∀x (Company(x) → CarrozzeriaColli(x)) ::: Carrozzeria Colli is a company that specialized in using aluminum.\n∃x (RacingCar(x) ∧ CarrozzeriaColli(x)) ::: The first automobiles built by Carrozzeria Colli were racing cars.\n∃x ∃y (RacingCar(x) ∧ CarrozzeriaColli(y) ∧ Use(x, y) ∧ Fiat1100Mechanics(x) ∧ Chasis(x)) ::: Some racing cars built by Carrozzeria Colli used Fiat 1100 mechanical"
    ]
  },
  {
    "id": "FOLIO_train_537",
    "context": "Carrozzeria Colli is a Milanese coachbuilder company that was established by Giuseppe Colli in 1931. Carrozzeria Colli is a company that specialized in using aluminum. The first automobiles built by Carrozzeria Colli were racing cars. Some racing cars built by Carrozzeria Colli used Fiat 1100 mechanicals and chasis. Carrozzeria Colli worked for airforces. Carrozzeria Colli made car bodies.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Giuseppe Colli established a company that made car bodies.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCarrozzeriaColli(x) ::: x is a Milanese coachbuilder company that was established by Giuseppe Colli in 1931.\nCompany(x) ::: x is a company.\nSpecialize(x, y) ::: x specializes in y.\nRacingCar(x) ::: x is a racing car.\nUse(x, y) ::: x uses y.\nMechanical(x) ::: x is a mechanical.\nChasis(x) ::: x is a chasis.\nWork(x, y) ::: x works for y.\nMake(x, y) ::: x makes y.\nPremises:\nCarrozzeriaColli(carrozzeriaColli) ::: Carrozzeria Colli is a Milanese coachbuilder company that was established by Giuseppe Colli in 1931.\n∀x (CarrozzeriaColli(x) → Company(x)) ::: Carrozzeria Colli is a company that specialized in using aluminum.\n∀x (CarrozzeriaColli(x) → Specialize(x, aluminum)) ::: The first automobiles built by Carrozzeria Colli were racing cars.\n∃x (RacingCar(x) ∧ Use(x, Fiat1100Mechanical) ∧ Use(x, Fiat1100Chasis)) ::: Some racing cars built by Carrozzeria Colli used Fiat"
    ]
  },
  {
    "id": "FOLIO_train_538",
    "context": "Carrozzeria Colli is a Milanese coachbuilder company that was established by Giuseppe Colli in 1931. Carrozzeria Colli is a company that specialized in using aluminum. The first automobiles built by Carrozzeria Colli were racing cars. Some racing cars built by Carrozzeria Colli used Fiat 1100 mechanicals and chasis. Carrozzeria Colli worked for airforces. Carrozzeria Colli made car bodies.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Giuseppe Colli established a Milanese coachbuilder company that specialized in using aluminum.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEstablish(x, y) ::: x established y.\nCompany(x) ::: x is a company.\nSpecialize(x, y) ::: x specializes in y.\nUse(x, y) ::: x uses y.\nRacingCar(x) ::: x is a racing car.\nMechanical(x) ::: x is a mechanical.\nChasis(x) ::: x is a chasis.\nWork(x, y) ::: x works for y.\nMake(x, y) ::: x makes y.\nCarBody(x) ::: x is a car body.\nPremises:\nEstablish(giuseppe, carrozzeriaColli) ∧ Company(carrozzeriaColli) ∧ Specialize(carrozzeriaColli, aluminum) ::: Carrozzeria Colli is a Milanese coachbuilder company that was established by Giuseppe Colli in 1931.\nCompany(carrozzeriaColli) ∧ Specialize(carrozzeriaColli, aluminum) ::: Carrozzeria Colli is a company that specialized in using aluminum.\nFirst(carrozzeriaColli, racingCar) ∧ Use(carrozzeriaColli, racingCar) ::: The first automobiles built by Carrozzeria Colli were racing cars.\n∃x (RacingCar(x) ∧ Use(x, Fiat1100Mechanical)"
    ]
  },
  {
    "id": "FOLIO_train_539",
    "context": "Carrozzeria Colli is a Milanese coachbuilder company that was established by Giuseppe Colli in 1931. Carrozzeria Colli is a company that specialized in using aluminum. The first automobiles built by Carrozzeria Colli were racing cars. Some racing cars built by Carrozzeria Colli used Fiat 1100 mechanicals and chasis. Carrozzeria Colli worked for airforces. Carrozzeria Colli made car bodies.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The first automobiles built by Carrozzeria Colli were built using Fiat 1100 mechanicals and chasis.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCarrozzeriaColli(x) ::: x is a company that specialized in using aluminum.\nCompany(x) ::: x is a company.\nRacingCar(x) ::: x is a racing car.\nUse(x, y) ::: x uses y.\nFirst(x, y) ::: x is the first automobile built by y.\nMechanical(x) ::: x is a mechanical.\nChasis(x) ::: x is a chasis.\nWork(x, y) ::: x works for y.\nMake(x, y) ::: x makes y.\nPremises:\nCarrozzeriaColli(carrozzeriaColli) ∧ Company(carrozzeriaColli) ∧ First(carrozzeriaColli, automobile) ::: Carrozzeria Colli is a Milanese coachbuilder company that was established by Giuseppe Colli in 1931.\nCarrozzeriaColli(carrozzeriaColli) ∧ Company(carrozzeriaColli) ∧ Use(carrozzeriaColli, aluminum) ::: Carrozzeria Colli is a company that specialized in using aluminum.\nFirst(carrozzeriaColli, automobile) ∧ RacingCar(automobile) ::: The first automobiles built by Carrozzeria Colli were racing cars.\n∃x (RacingCar(x) ∧ Use(x, F"
    ]
  },
  {
    "id": "FOLIO_train_540",
    "context": "John will go to the cinema if and only if Jack goes to the cinema today. Jack will go to the cinema if and only if Iron Man is on and the weather is not bad today. Some days in March have bad weather. Iron man is on. It's March now.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? John will go to the cinema.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGo(x, y) ::: x will go to y.\nCinema(x) ::: x is a cinema.\nIronMan(x) ::: x is Iron Man.\nWeather(x) ::: x is the weather.\nBad(x) ::: x is bad.\nMarch(x) ::: x is March.\nPremises:\nGo(john, cinema) ↔ Go(jack, cinema) ::: John will go to the cinema if and only if Jack goes to the cinema today.\nGo(jack, cinema) ↔ (IronMan(today) ∧ ¬Bad(weather)) ::: Jack will go to the cinema if and only if Iron Man is on and the weather is not bad today.\n∃x (March(x) ∧ Bad(weather)) ::: Some days in March have bad weather.\nIronMan(today) ::: Iron man is on.\nMarch(now) ::: It's March now.\nConclusion:\nGo(john, cinema) ::: John will go to the cinema.\n------"
    ]
  },
  {
    "id": "FOLIO_train_541",
    "context": "John will go to the cinema if and only if Jack goes to the cinema today. Jack will go to the cinema if and only if Iron Man is on and the weather is not bad today. Some days in March have bad weather. Iron man is on. It's March now.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The weather is good today.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGo(x, y) ::: x goes to y.\nCinema(x) ::: x is a cinema.\nIronMan(x) ::: x is Iron Man.\nWeather(x) ::: x is the weather.\nBad(x) ::: x is bad.\nMarch(x) ::: x is March.\nPremises:\nGo(john, cinema) ↔ Go(jack, cinema) ::: John will go to the cinema if and only if Jack goes to the cinema today.\nGo(jack, cinema) ↔ (IronMan(today) ∧ ¬Bad(weather)) ::: Jack will go to the cinema if and only if Iron Man is on and the weather is not bad today.\n∃x (March(x) ∧ Bad(weather)) ::: Some days in March have bad weather.\nIronMan(today) ::: Iron man is on.\nMarch(now) ::: It's March now.\nConclusion:\nBad(weather) ::: The weather is good today.\n------\nProblem:"
    ]
  },
  {
    "id": "FOLIO_train_542",
    "context": "Quiksilver sells sportswear, clothing, footwear, and accessories. Flannels are a type of clothing. Joe owns an item fron Quiksilver.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Quiksilver sells beer.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSell(x, y) ::: x sells y.\nItem(x) ::: x is an item.\nClothing(x) ::: x is a type of clothing.\nFlannel(x) ::: x is a flannel.\nOwn(x, y) ::: x owns y.\nPremises:\nSell(quiksilver, sportswear) ::: Quiksilver sells sportswear.\nSell(quiksilver, clothing) ::: Quiksilver sells clothing.\nSell(quiksilver, footwear) ::: Quiksilver sells footwear.\nSell(quiksilver, accessories) ::: Quiksilver sells accessories.\nItem(joe) ::: Joe is an item.\nItem(flannel) ::: Flannel is an item.\nOwn(joe, quiksilver) ::: Joe owns an item from Quiksilver.\nConclusion:\nSell(quiksilver, beer) ::: Quiksilver sells beer.\n------\nProblem:\nA person is a student if and"
    ]
  },
  {
    "id": "FOLIO_train_543",
    "context": "Quiksilver sells sportswear, clothing, footwear, and accessories. Flannels are a type of clothing. Joe owns an item fron Quiksilver.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Joe owns a flannel.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSell(x, y) ::: x sells y.\nType(x, y) ::: x is a type of y.\nOwn(x, y) ::: x owns y.\nPremises:\nSell(quiksilver, sportswear) ∧ Sell(quiksilver, clothing) ∧ Sell(quiksilver, footwear) ∧ Sell(quiksilver, accessories) ::: Quiksilver sells sportswear, clothing, footwear, and accessories.\nType(flannel, clothing) ::: Flannels are a type of clothing.\nOwn(joe, quiksilver) ::: Joe owns an item fron Quiksilver.\nConclusion:\nOwn(joe, flannel) ::: Joe owns a flannel.\n------\nProblem:\nA person is a student if and only if they are enrolled in a university. A person is a student if and only if they are enrolled in a university. A person is a student if and only if they are enrolled in a university. A person is a student if and"
    ]
  },
  {
    "id": "FOLIO_train_544",
    "context": "Quiksilver sells sportswear, clothing, footwear, and accessories. Flannels are a type of clothing. Joe owns an item fron Quiksilver.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Joe owns at least one a piece of sportswear, clothing, footwear, or accessory",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nQuiksilver(x) ::: x is a product sold by Quiksilver.\nSportswear(x) ::: x is a piece of sportswear.\nClothing(x) ::: x is a piece of clothing.\nFootwear(x) ::: x is a piece of footwear.\nAccessory(x) ::: x is a piece of accessory.\nFlannel(x) ::: x is a flannel.\nOwn(x, y) ::: x owns y.\nPremises:\nQuiksilver(item) ::: Joe owns an item fron Quiksilver.\nFlannel(item) ::: Joe owns an item fron Quiksilver.\nConclusion:\n∃x (Sportswear(x) ∨ Clothing(x) ∨ Footwear(x) ∨ Accessory(x)) ::: Joe owns at least one a piece of sportswear, clothing, footwear, or accessory\n------\nProblem:\nA person is a student if and only if they are enrolled in a university. A person is a"
    ]
  },
  {
    "id": "FOLIO_train_545",
    "context": "No video games released by Nintendo support the PS4 platform. All video games in the Pokemon series are released by Nintendo. All video games in the FIFA series support the PS4 platform. All video games supporting users to simulate playing soccer games online are in the FIFA series. The video game named “Be Lionel” is in the Pokemon series or supports users to simulate playing football games online.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The video game \"Be Lionel\" is in the pokemon series.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nVideoGame(x) ::: x is a video game.\nPokemon(x) ::: x is a video game in the Pokemon series.\nFIFA(x) ::: x is a video game in the FIFA series.\nPS4(x) ::: x is a video game supporting the PS4 platform.\nSimulate(x, y) ::: x is a video game supporting users to simulate playing y games online.\nPremises:\n¬∃x (VideoGame(x) ∧ PS4(x) ∧ Support(x, Nintendo)) ::: No video games released by Nintendo support the PS4 platform.\n∀x (Pokemon(x) → VideoGame(x)) ::: All video games in the Pokemon series are released by Nintendo.\n∀x (FIFA(x) → PS4(x)) ::: All video games in the FIFA series support the PS4 platform.\n∀x (Simulate(x, soccer) → FIFA(x)) ::: All video games supporting users to simulate playing soccer games online are in the FIFA series.\n(BeL"
    ]
  },
  {
    "id": "FOLIO_train_546",
    "context": "No video games released by Nintendo support the PS4 platform. All video games in the Pokemon series are released by Nintendo. All video games in the FIFA series support the PS4 platform. All video games supporting users to simulate playing soccer games online are in the FIFA series. The video game named “Be Lionel” is in the Pokemon series or supports users to simulate playing football games online.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The video game named “Be Lionel” is not in the FIFA series or supports the PS4 platform.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nVideoGame(x) ::: x is a video game.\nSupport(x, y) ::: x supports y.\nSimulate(x, y) ::: x simulates y.\nPlay(x, y) ::: x plays y.\nPS4(x) ::: x is a PS4 platform.\nNintendo(x) ::: x is a Nintendo company.\nPokemon(x) ::: x is a Pokemon series.\nFIFA(x) ::: x is a FIFA series.\nPremises:\n∀x (VideoGame(x) → (¬Support(x, PS4) ∨ ¬Simulate(x, Play(x, soccer)))) ::: No video games released by Nintendo support the PS4 platform.\n∀x (VideoGame(x) → (Pokemon(x) ∨ Simulate(x, Play(x, football)))) ::: All video games in the Pokemon series are released by Nintendo.\n∀x (VideoGame(x) → (FIFA(x) ∧ Support(x, PS4))) ::: All video"
    ]
  },
  {
    "id": "FOLIO_train_547",
    "context": "No video games released by Nintendo support the PS4 platform. All video games in the Pokemon series are released by Nintendo. All video games in the FIFA series support the PS4 platform. All video games supporting users to simulate playing soccer games online are in the FIFA series. The video game named “Be Lionel” is in the Pokemon series or supports users to simulate playing football games online.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The video game named “Be Lionel” is in the FIFA series or supports the PS4 platform.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nVideoGame(x) ::: x is a video game.\nSupport(x, y) ::: x supports y.\nSimulate(x, y) ::: x simulates y.\nPlay(x, y) ::: x plays y.\nPlatform(x) ::: x is a platform.\nRelease(x, y) ::: x is released in year y.\nSeries(x) ::: x is a series.\nPremises:\n¬∃x (VideoGame(x) ∧ Support(x, PS4)) ::: No video games released by Nintendo support the PS4 platform.\n∀x (VideoGame(x) ∧ Series(x) ∧ Release(x, year2019)) ∧ Series(x) ∧ Release(x, year2019) ∧ Series(x) ∧ Release(x, year2019) ::: All video games in the Pokemon series are released by Nintendo.\n∀x (VideoGame(x) ∧ Series(x) ∧ Release"
    ]
  },
  {
    "id": "FOLIO_train_548",
    "context": "No video games released by Nintendo support the PS4 platform. All video games in the Pokemon series are released by Nintendo. All video games in the FIFA series support the PS4 platform. All video games supporting users to simulate playing soccer games online are in the FIFA series. The video game named “Be Lionel” is in the Pokemon series or supports users to simulate playing football games online.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The video game named “Be Lionel”  is not in the FIFA or Pokemon series.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nVideoGame(x) ::: x is a video game.\nSupport(x, y) ::: x supports y.\nSimulate(x, y) ::: x simulates y.\nPlay(x, y) ::: x plays y.\nPlatform(x) ::: x is a platform.\nRelease(x, y) ::: x is released in year y.\nSeries(x) ::: x is a series.\nPremises:\n¬∃x (VideoGame(x) ∧ Support(x, PS4)) ::: No video games released by Nintendo support the PS4 platform.\n∀x (VideoGame(x) ∧ Series(x) ∧ Release(x, year2019)) ∧ (x = pokemon ∨ x = fifa) ::: All video games in the Pokemon series are released by Nintendo.\n∀x (VideoGame(x) ∧ Series(x) ∧ Support(x, PS4)) ∧ (x = fifa ∨ x = pokemon) :::"
    ]
  },
  {
    "id": "FOLIO_train_549",
    "context": "No payment cards issued by Russian banks can be used with ApplePay. All MIR payment cards are issued by Russian banks. Some international payment cards can be used with ApplePay. Social payments in Russia can only be transferred to MIR payment cards. Bank of America payment cards can be used with ApplePay.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Bank of America payment cards are international.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPaymentCard(x) ::: x is a payment card.\nIssuedBy(x, y) ::: x is issued by y.\nCanBeUsedWith(x, y) ::: x can be used with y.\nSocialPayment(x) ::: x is a social payment.\nTransferTo(x, y) ::: x can be transferred to y.\nPremises:\n∀x (PaymentCard(x) ∧ IssuedBy(x, russianBank) → ¬CanBeUsedWith(x, ApplePay)) ::: No payment cards issued by Russian banks can be used with ApplePay.\n∀x (MIR(x) ∧ PaymentCard(x)) → IssuedBy(x, russianBank) ::: All MIR payment cards are issued by Russian banks.\n∃x (International(x) ∧ PaymentCard(x) ∧ CanBeUsedWith(x, ApplePay)) ::: Some international payment cards can be used with ApplePay.\n∀x (SocialPayment(x) ∧ PaymentCard(x))"
    ]
  },
  {
    "id": "FOLIO_train_550",
    "context": "No payment cards issued by Russian banks can be used with ApplePay. All MIR payment cards are issued by Russian banks. Some international payment cards can be used with ApplePay. Social payments in Russia can only be transferred to MIR payment cards. Bank of America payment cards can be used with ApplePay.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Bank of America payment cards are international and can be used to transfer social payments in Russia.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPaymentCard(x) ::: x is a payment card.\nIssuedBy(x, y) ::: x is issued by y.\nApplePay(x) ::: x can be used with ApplePay.\nSocialPayment(x) ::: x is a social payment.\nTransfer(x, y) ::: x can be transferred to y.\nPremises:\n∀x (PaymentCard(x) ∧ IssuedBy(x, russianBank) → ¬ApplePay(x)) ::: No payment cards issued by Russian banks can be used with ApplePay.\n∀x (MIR(x) ∧ PaymentCard(x)) → IssuedBy(x, russianBank) ::: All MIR payment cards are issued by Russian banks.\n∃x (International(x) ∧ PaymentCard(x) ∧ ApplePay(x)) ::: Some international payment cards can be used with ApplePay.\n∀x (SocialPayment(x) ∧ Transfer(x, y)) → (MIR(y) ∧ PaymentCard(y)) ::: Social payments in Russia can only be transferred to MIR payment cards.\nBankOfAmerica(x) ∧ PaymentCard(x) ∧ ApplePay(x) ::: Bank of America payment cards can be used with ApplePay.\nConclusion:\nInternational(BankOfAmerica) ∧ PaymentCard(BankOfAmerica) ∧ Transfer(BankOfAmerica, socialPayment) ::: Bank of America payment cards are international and can be used to transfer social payments in Russia.\n------"
    ]
  },
  {
    "id": "FOLIO_train_551",
    "context": "No payment cards issued by Russian banks can be used with ApplePay. All MIR payment cards are issued by Russian banks. Some international payment cards can be used with ApplePay. Social payments in Russia can only be transferred to MIR payment cards. Bank of America payment cards can be used with ApplePay.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Bank of America payment cards are international or issued by Russian banks, then they can not be used to transfer social payments in Russia.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPaymentCard(x) ::: x is a payment card.\nIssuedBy(x, y) ::: x is issued by y.\nCanBeUsedWith(x, y) ::: x can be used with y.\nInternational(x) ::: x is an international payment card.\nRussian(x) ::: x is a Russian payment card.\nMIR(x) ::: x is a MIR payment card.\nSocialPayment(x) ::: x is a social payment.\nTransfer(x, y) ::: x can be transferred to y.\nPremises:\n∀x (PaymentCard(x) → (¬CanBeUsedWith(x, ApplePay) ∨ CanBeUsedWith(x, ApplePay))) ::: No payment cards issued by Russian banks can be used with ApplePay.\n∀x (MIR(x) → IssuedBy(x, Russian)) ::: All MIR payment cards are issued by Russian banks.\n∀x (International(x) → CanBeUsedWith(x, ApplePay)) ::: Some international payment cards can be used with ApplePay.\n∀x (SocialPayment(x) → Transfer(x, MIR)) ::: Social payments in Russia can only be transferred to MIR payment cards.\nBankOfAmerica(x) ::: x is a Bank of America payment card.\nConclusion:\n(International(BankOfAmerica) ∨ IssuedBy(BankOfAmerica, Russian)) → ¬(CanBeUsedWith(BankOfAmerica, ApplePay) ∧ Transfer(BankOfAmerica, SocialPayment)) ::: If Bank of America payment"
    ]
  },
  {
    "id": "FOLIO_train_552",
    "context": "The Lumina APV is produced by Chevrolet. The Astro is a van produced by Chevrolet. Cars produced by Chevrolet are either cars or vans.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Lumina APV is van.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProduce(x, y) ::: x produces y.\nCar(x) ::: x is a car.\nVan(x) ::: x is a van.\nPremises:\nProduce(chevrolet, luminaAPV) ::: The Lumina APV is produced by Chevrolet.\nProduce(chevrolet, astro) ::: The Astro is a van produced by Chevrolet.\n∀x (Produce(chevrolet, x) → (Car(x) ∨ Van(x))) ::: Cars produced by Chevrolet are either cars or vans.\nConclusion:\nVan(luminaAPV) ::: The Lumina APV is van.\n------\nProblem:\nThe Lumina APV is produced by Chevrolet. The Astro is a van produced by Chevrolet. Cars produced by Chevrolet are either cars or vans.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The Lumina APV is van.\n###\nPredicates:\nProduce(x, y) ::: x produces y.\nCar(x) ::: x is a car.\nVan(x) ::: x is a van.\nPremises:\nProduce(chevrolet, luminaAPV) ::: The Lumina APV is produced by Chevrolet.\nProduce(chevrolet, astro) ::: The Astro is a van produced by Chevrolet.\n∀x (Produce(chevrolet,"
    ]
  },
  {
    "id": "FOLIO_train_553",
    "context": "The Lumina APV is produced by Chevrolet. The Astro is a van produced by Chevrolet. Cars produced by Chevrolet are either cars or vans.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Lumina APV is either a car or a van.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProduce(x, y) ::: x produces y.\nCar(x) ::: x is a car.\nVan(x) ::: x is a van.\nPremises:\nProduce(chevrolet, luminaAPV) ::: The Lumina APV is produced by Chevrolet.\nProduce(chevrolet, astro) ::: The Astro is a van produced by Chevrolet.\n∀x (Produce(chevrolet, x) → (Car(x) ∨ Van(x))) ::: Cars produced by Chevrolet are either cars or vans.\nConclusion:\nCar(luminaAPV) ∨ Van(luminaAPV) ::: The Lumina APV is either a car or a van.\n------\nProblem:\nThe Lumina APV is produced by Chevrolet. The Astro is a van produced by Chevrolet. Cars produced by Chevrolet are either cars or vans.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The Lumina APV is a car.\n###\nPredicates:\nProduce(x, y) ::: x produces y.\nCar(x) ::: x is a car.\nVan(x) ::: x is a van.\nPremises:\nProduce(chevrolet, luminaAPV) ::: The Lumina APV is produced by Chevrolet.\nProduce(chevrolet, astro) ::: The Astro is a van produced by Chev"
    ]
  },
  {
    "id": "FOLIO_train_554",
    "context": "The Lumina APV is produced by Chevrolet. The Astro is a van produced by Chevrolet. Cars produced by Chevrolet are either cars or vans.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Astro is a van.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProduce(x, y) ::: x produces y.\nCar(x) ::: x is a car.\nVan(x) ::: x is a van.\nPremises:\nProduce(chevrolet, luminaAPV) ::: The Lumina APV is produced by Chevrolet.\nProduce(chevrolet, astro) ::: The Astro is a van produced by Chevrolet.\n∀x (Produce(chevrolet, x) → (Car(x) ∨ Van(x))) ::: Cars produced by Chevrolet are either cars or vans.\nConclusion:\nVan(astro) ::: The Astro is a van.\n------\nProblem:\nThe Lumina APV is produced by Chevrolet. The Astro is a van produced by Chevrolet. Cars produced by Chevrolet are either cars or vans.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The Astro is a van.\n###\nPredicates:\nProduce(x, y) ::: x produces y.\nCar(x) ::: x is a car.\nVan(x) ::: x is a van.\nPremises:\nProduce(chevrolet, luminaAPV) ::: The Lumina APV is produced by Chevrolet.\nProduce(chevrolet, astro) ::: The Astro is a van produced by Chevrolet.\n∀x (Produce(chevrolet, x) → (Car(x)"
    ]
  },
  {
    "id": "FOLIO_train_555",
    "context": "The Lumina APV is produced by Chevrolet. The Astro is a van produced by Chevrolet. Cars produced by Chevrolet are either cars or vans.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Astro is a car.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProduce(x, y) ::: x produces y.\nCar(x) ::: x is a car.\nVan(x) ::: x is a van.\nPremises:\nProduce(chevrolet, luminaAPV) ::: The Lumina APV is produced by Chevrolet.\nProduce(chevrolet, astro) ::: The Astro is a van produced by Chevrolet.\n∀x (Produce(chevrolet, x) → (Car(x) ∨ Van(x))) ::: Cars produced by Chevrolet are either cars or vans.\nConclusion:\nCar(astro) ::: The Astro is a car.\n------\nProblem:\nThe Lumina APV is produced by Chevrolet. The Astro is a van produced by Chevrolet. Cars produced by Chevrolet are either cars or vans.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The Astro is a car.\n###\nPredicates:\nProduce(x, y) ::: x produces y.\nCar(x) ::: x is a car.\nVan(x) ::: x is a van.\nPremises:\nProduce(chevrolet, luminaAPV) ::: The Lumina APV is produced by Chevrolet.\nProduce(chevrolet, astro) ::: The Astro is a van produced by Chevrolet.\n∀x (Produce(chevrolet, x) → (Car(x)"
    ]
  },
  {
    "id": "FOLIO_train_556",
    "context": "Everyone who works in person is a commuter. People either work in person or work from home. Everyone who works from home has a relaxed schedule. George is either a commuter or has a home office setup. If George is either a person who works from home or has a home office setup, then George is not a person who works from home and a commuter.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? George is a person who works from home.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nWorksInPerson(x) ::: x works in person.\nWorksFromHome(x) ::: x works from home.\nHasRelaxedSchedule(x) ::: x has a relaxed schedule.\nCommute(x) ::: x is a commuter.\nHomeOfficeSetup(x) ::: x has a home office setup.\nPremises:\n∀x (WorksInPerson(x) → Commute(x)) ::: Everyone who works in person is a commuter.\n∀x (WorksFromHome(x) ⊕ WorksInPerson(x)) ::: People either work in person or work from home.\n∀x (WorksFromHome(x) → HasRelaxedSchedule(x)) ::: Everyone who works from home has a relaxed schedule.\nCommute(george) ∧ HomeOfficeSetup(george) ∧ ¬(WorksFromHome(george) ∧ Commute(george)) ::: George is either a commuter or has a home office setup.\n∀x (WorksFromHome(x) ∨ HomeOfficeSetup(x)) → ¬(WorksFromHome(x) ∧ Commute(x)) ::: If George is either a person who works from home or has a home office setup, then George is not a person who works from home and a commuter.\nConclusion:\nWorksFromHome(george) ::: George is a person who works from home.\n------\nProblem:\nEveryone who is a student is a person who is enrolled in a university. People either are"
    ]
  },
  {
    "id": "FOLIO_train_557",
    "context": "Everyone who works in person is a commuter. People either work in person or work from home. Everyone who works from home has a relaxed schedule. George is either a commuter or has a home office setup. If George is either a person who works from home or has a home office setup, then George is not a person who works from home and a commuter.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If George is not a person who works from home and a person who works in person, then George is neither a commuter nor a person who has a relaxed schedule.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nWorksInPerson(x) ::: x works in person.\nWorksFromHome(x) ::: x works from home.\nHasRelaxedSchedule(x) ::: x has a relaxed schedule.\nCommutes(x) ::: x is a commuter.\nHomeOfficeSetup(x) ::: x has a home office setup.\nPremises:\n∀x (WorksInPerson(x) → Commutes(x)) ::: Everyone who works in person is a commuter.\n∀x (WorksFromHome(x) ⊕ WorksInPerson(x)) ::: People either work in person or work from home.\n∀x (WorksFromHome(x) → HasRelaxedSchedule(x)) ::: Everyone who works from home has a relaxed schedule.\nGeorge ⊕ HomeOfficeSetup(george) ::: George is either a commuter or has a home office setup.\n¬(WorksFromHome(george) ∧ Commutes(george)) → (WorksFromHome(george) ∧ Commutes(george)) ⊕ ¬(WorksFromHome(george) ∨ Commutes(george)) ::: If George is either a person who works from home or has a home office setup, then George is not a person who works from home and a commuter.\nConclusion:\n¬(WorksFromHome(george) ∧ Commutes(george)) → (WorksFromHome(george) ∧ Commutes(george)) ⊕ ¬(WorksFromHome(ge"
    ]
  },
  {
    "id": "FOLIO_train_558",
    "context": "Everyone who works in person is a commuter. People either work in person or work from home. Everyone who works from home has a relaxed schedule. George is either a commuter or has a home office setup. If George is either a person who works from home or has a home office setup, then George is not a person who works from home and a commuter.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If George is either a person who has a home office setup and a person who works in person, or neither a person who has a home office setup nor a person who works in person, then George is either a person who works from home or a person who has a relaxed schedule.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nWorksInPerson(x) ::: x works in person.\nWorksFromHome(x) ::: x works from home.\nHasRelaxedSchedule(x) ::: x has a relaxed schedule.\nHasHomeOfficeSetup(x) ::: x has a home office setup.\nPremises:\n∀x (WorksInPerson(x) → Commuter(x)) ::: Everyone who works in person is a commuter.\n∀x (WorksFromHome(x) ⊕ WorksInPerson(x)) ::: People either work in person or work from home.\n∀x (WorksFromHome(x) → HasRelaxedSchedule(x)) ::: Everyone who works from home has a relaxed schedule.\nHasHomeOfficeSetup(george) ⊕ ¬(WorksFromHome(george) ∧ WorksInPerson(george)) ::: George is either a commuter or has a home office setup.\n¬(WorksFromHome(george) ∧ Commuter(george)) → (WorksFromHome(george) ∨ HasHomeOfficeSetup(george)) ::: If George is either a person who works from home or has a home office setup, then George is not a person who works from home and a commuter.\nConclusion:\n(WorksFromHome(george) ∧ HasHomeOfficeSetup(george)) ⊕ ¬(WorksFromHome(george) ∨ HasHomeOfficeSetup(george)) → (WorksFromHome(george) ∨ HasRelax"
    ]
  },
  {
    "id": "FOLIO_train_559",
    "context": "Jason Kramer is an American music supervisor. Some American radio personalities are also music supervisors. Anyone who hosts a show on a public radio station is a radio personality. Joe Rogan is a radio personality. Jason Kramer hosted a show on a public radio station.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Joe Rogan is American.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAmerican(x) ::: x is an American person.\nRadioPersonality(x) ::: x is a radio personality.\nMusicSupervisor(x) ::: x is a music supervisor.\nHost(x, y) ::: x hosts a show on radio station y.\nPremises:\n∀x (MusicSupervisor(x) → RadioPersonality(x)) ::: Some American radio personalities are also music supervisors.\n∀x (RadioPersonality(x) → Host(x, publicRadioStation)) ::: Anyone who hosts a show on a public radio station is a radio personality.\nJasonKramer(x) ::: x is Jason Kramer.\nHost(JasonKramer, publicRadioStation) ::: Jason Kramer hosted a show on a public radio station.\nJoeRogan(x) ::: x is Joe Rogan.\nRadioPersonality(JoeRogan) ::: Joe Rogan is a radio personality.\nConclusion:\nAmerican(JoeRogan) ::: Joe Rogan is American.\n------\nProblem:\nA person is a student if and only if the person is enrolled in a university. A person is a student if and only if the person is enrolled in a college. A person is a student if and only if the person is enrolled in a school. A person is a student if and only if the person is enrolled in a university, college, or school.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? A person is a student if and only if the person is enrolled in a university, college, or school.\n###"
    ]
  },
  {
    "id": "FOLIO_train_560",
    "context": "Jason Kramer is an American music supervisor. Some American radio personalities are also music supervisors. Anyone who hosts a show on a public radio station is a radio personality. Joe Rogan is a radio personality. Jason Kramer hosted a show on a public radio station.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jason Kramer is a music supervisor.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAmerican(x) ::: x is an American person.\nRadioPersonality(x) ::: x is a radio personality.\nMusicSupervisor(x) ::: x is a music supervisor.\nHost(x, y) ::: x hosts a show on y.\nPublicRadioStation(x) ::: x is a public radio station.\nPremises:\n∃x (American(x) ∧ MusicSupervisor(x)) ::: Some American radio personalities are also music supervisors.\n∀x (RadioPersonality(x) → Host(x, y)) ::: Anyone who hosts a show on a public radio station is a radio personality.\nJasonKramer(x) ::: x is Jason Kramer.\nJoeRogan(x) ::: x is Joe Rogan.\nHost(JasonKramer, publicRadioStation) ::: Jason Kramer hosted a show on a public radio station.\nConclusion:\nMusicSupervisor(JasonKramer) ::: Jason Kramer is a music supervisor.\n------"
    ]
  },
  {
    "id": "FOLIO_train_561",
    "context": "Jason Kramer is an American music supervisor. Some American radio personalities are also music supervisors. Anyone who hosts a show on a public radio station is a radio personality. Joe Rogan is a radio personality. Jason Kramer hosted a show on a public radio station.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jason Kramer is a radio personality.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAmerican(x) ::: x is an American person.\nRadioPersonality(x) ::: x is a radio personality.\nMusicSupervisor(x) ::: x is a music supervisor.\nHost(x, y) ::: x hosts a show on y.\nPublicRadioStation(x) ::: x is a public radio station.\nPremises:\n∃x (American(x) ∧ RadioPersonality(x) ∧ MusicSupervisor(x)) ::: Some American radio personalities are also music supervisors.\n∀x (RadioPersonality(x) → Host(x, y)) ::: Anyone who hosts a show on a public radio station is a radio personality.\n∃x (RadioPersonality(x) ∧ Host(x, y) ∧ PublicRadioStation(y)) ::: Joe Rogan is a radio personality.\nHost(jason, publicRadioStation) ::: Jason Kramer hosted a show on a public radio station.\nConclusion:\nRadioPersonality(jason) :::"
    ]
  },
  {
    "id": "FOLIO_train_562",
    "context": "No coffee sold in Walmart is produced in France. All coffee supplied by the company is sold in Walmart. All coffee produced in Columbia is produced in France. All coffee favored by local residents is coffee produced in Columbia. All coffee with high prices is favored by local residents. Civet Coffee is not produced in Columbia and is cheap. Jamaica Blue is sold in Walmart or favored by local residents.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Civet Coffee is produced in France.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProduce(x, y) ::: x produces y.\nSell(x, y) ::: x sells y.\nFavor(x, y) ::: x favors y.\nPrice(x, y) ::: x has price y.\nCompany(x) ::: x is a company.\nWalmart(x) ::: x is Walmart.\nColumbia(x) ::: x is Columbia.\nFrance(x) ::: x is France.\nCivetCoffee(x) ::: x is Civet Coffee.\nJamaicaBlue(x) ::: x is Jamaica Blue.\nPremises:\n¬∃x (Produce(x, coffee) ∧ Produce(x, France)) ::: No coffee sold in Walmart is produced in France.\n∀x (Company(x) → ∃y (Sell(x, y) ∧ Produce(y, coffee))) ::: All coffee supplied by the company is sold in Walmart.\n∀x ("
    ]
  },
  {
    "id": "FOLIO_train_563",
    "context": "No coffee sold in Walmart is produced in France. All coffee supplied by the company is sold in Walmart. All coffee produced in Columbia is produced in France. All coffee favored by local residents is coffee produced in Columbia. All coffee with high prices is favored by local residents. Civet Coffee is not produced in Columbia and is cheap. Jamaica Blue is sold in Walmart or favored by local residents.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Civet Coffee is not produced in France.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProduce(x, y) ::: x produces y.\nSell(x, y) ::: x sells y.\nFavor(x, y) ::: x favors y.\nPrice(x, y) ::: x has price y.\nCompany(x) ::: x is a company.\nWalmart(x) ::: x is Walmart.\nColumbia(x) ::: x is Columbia.\nFrance(x) ::: x is France.\nCivetCoffee(x) ::: x is Civet Coffee.\nJamaicaBlue(x) ::: x is Jamaica Blue.\nPremises:\n¬(Produce(walmart, coffee) ∧ Produce(coffee, france)) ::: No coffee sold in Walmart is produced in France.\n∀x (Sell(x, coffee) → Company(x)) ::: All coffee supplied by the company is sold in Walmart.\n∀x (Produce(x, coffee) → Produce(x, france)) ::"
    ]
  },
  {
    "id": "FOLIO_train_564",
    "context": "No coffee sold in Walmart is produced in France. All coffee supplied by the company is sold in Walmart. All coffee produced in Columbia is produced in France. All coffee favored by local residents is coffee produced in Columbia. All coffee with high prices is favored by local residents. Civet Coffee is not produced in Columbia and is cheap. Jamaica Blue is sold in Walmart or favored by local residents.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jamaica Blue is expensive and supplied by the company.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProduce(x, y) ::: x produces y.\nSell(x, y) ::: x sells y.\nFavor(x, y) ::: x favors y.\nPrice(x, y) ::: x has price y.\nCompany(x) ::: x is a company.\nWalmart(x) ::: x is Walmart.\nColumbia(x) ::: x is Columbia.\nFrance(x) ::: x is France.\nCivetCoffee(x) ::: x is Civet Coffee.\nJamaicaBlue(x) ::: x is Jamaica Blue.\nPremises:\n¬(Produce(walmart, coffee) ∧ Produce(coffee, france)) ::: No coffee sold in Walmart is produced in France.\n∀x (Sell(company, coffee) → Sell(company, walmart)) ::: All coffee supplied by the company is sold in Walmart.\n∀x (Produce(columbia, coffee) → Produce("
    ]
  },
  {
    "id": "FOLIO_train_565",
    "context": "No coffee sold in Walmart is produced in France. All coffee supplied by the company is sold in Walmart. All coffee produced in Columbia is produced in France. All coffee favored by local residents is coffee produced in Columbia. All coffee with high prices is favored by local residents. Civet Coffee is not produced in Columbia and is cheap. Jamaica Blue is sold in Walmart or favored by local residents.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jamaica Blue is not expensive and is not supplied by the company.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProduce(x, y) ::: x produces y.\nSell(x, y) ::: x sells y.\nFavor(x, y) ::: x favors y.\nPrice(x, y) ::: x has price y.\nCompany(x) ::: x is a company.\nWalmart(x) ::: x is Walmart.\nColumbia(x) ::: x is Columbia.\nFrance(x) ::: x is France.\nCivetCoffee(x) ::: x is Civet Coffee.\nJamaicaBlue(x) ::: x is Jamaica Blue.\nPremises:\n¬(Produce(walmart, coffee) ∧ Produce(coffee, france)) ::: No coffee sold in Walmart is produced in France.\n∀x (Sell(x, coffee) → Company(x)) ::: All coffee supplied by the company is sold in Walmart.\n∀x (Produce(x, coffee) → Produce(x, france)) ::"
    ]
  },
  {
    "id": "FOLIO_train_566",
    "context": "There are two places named Galicia: either in Spain or in Poland. Spain is in Europe. Poland is in Europe. Rochelle lives in Europe. Dominique does not live in Europe. Alfonso lives in Galicia.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Rochelle lives in Galicia.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLive(x, y) ::: x lives in y.\nPlace(x) ::: x is a place.\nEurope(x) ::: x is in Europe.\nSpain(x) ::: x is in Spain.\nPoland(x) ::: x is in Poland.\nGalicia(x) ::: x is in Galicia.\nPremises:\n∃x (Place(x) ∧ (Galicia(x) ∨ Galicia(x))) ::: There are two places named Galicia: either in Spain or in Poland.\nEurope(spain) ∧ Europe(poland) ::: Spain is in Europe. Poland is in Europe.\nLive(rochelle, europe) ∧ ¬Live(dominique, europe) ::: Rochelle lives in Europe. Dominique does not live in Europe.\nLive(alfonso, galicia) ::: Alfonso lives in Galicia.\nConclusion:\nLive(rochelle, galicia) ::: Rochelle lives in Galicia.\n------"
    ]
  },
  {
    "id": "FOLIO_train_567",
    "context": "There are two places named Galicia: either in Spain or in Poland. Spain is in Europe. Poland is in Europe. Rochelle lives in Europe. Dominique does not live in Europe. Alfonso lives in Galicia.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Dominique does not live in Spain.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLive(x, y) ::: x lives in y.\nPlace(x) ::: x is a place.\nEurope(x) ::: x is in Europe.\nSpain(x) ::: x is in Spain.\nPoland(x) ::: x is in Poland.\nGalicia(x) ::: x is in Galicia.\nPremises:\n∃x (Place(x) ∧ (Galicia(x) ∨ Spain(x))) ::: There are two places named Galicia: either in Spain or in Poland.\nEurope(spain) ∧ Europe(poland) ::: Spain is in Europe. Poland is in Europe.\nLive(rochelle, europe) ∧ ¬Live(dominique, europe) ::: Rochelle lives in Europe. Dominique does not live in Europe.\nLive(alfonso, galicia) ::: Alfonso lives in Galicia.\nConclusion:\n¬Live(dominique, spain) ::: Dominique does not live in Spain.\n------\nPro"
    ]
  },
  {
    "id": "FOLIO_train_568",
    "context": "There are two places named Galicia: either in Spain or in Poland. Spain is in Europe. Poland is in Europe. Rochelle lives in Europe. Dominique does not live in Europe. Alfonso lives in Galicia.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Alfonso lives in Europe.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLive(x, y) ::: x lives in y.\nPlace(x) ::: x is a place.\nEurope(x) ::: x is in Europe.\nSpain(x) ::: x is in Spain.\nPoland(x) ::: x is in Poland.\nGalicia(x) ::: x is in Galicia.\nPremises:\n∃x (Place(x) ∧ (Galicia(x) ∨ Galicia(x))) ::: There are two places named Galicia: either in Spain or in Poland.\nEurope(spain) ∧ Europe(poland) ::: Spain is in Europe. Poland is in Europe.\nLive(rochelle, europe) ∧ ¬Live(dominique, europe) ::: Rochelle lives in Europe. Dominique does not live in Europe.\nLive(alfonso, galicia) ::: Alfonso lives in Galicia.\nConclusion:\nLive(alfonso, europe) ::: Alfonso lives in Europe.\n------\nProblem:"
    ]
  },
  {
    "id": "FOLIO_train_569",
    "context": "Ralph Hammerthaler was born in Wasserburg am Inn. Wasserburg am Inn is in Germany. Germany is in Europe. Ralph Hammerthaler is a German writer. Ralph Hammerthaler was born in 1965.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Ralph Hammerthaler is a writer born in Asia.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBornIn(x, y) ::: x was born in y.\nIn(x, y) ::: x is in y.\nWriter(x) ::: x is a writer.\nGerman(x) ::: x is a German person.\nAsian(x) ::: x is an Asian person.\nPremises:\nBornIn(ralph, wasserburg) ∧ In(wasserburg, germany) ∧ In(germany, europe) ::: Ralph Hammerthaler was born in Wasserburg am Inn. Wasserburg am Inn is in Germany. Germany is in Europe.\nGerman(ralph) ∧ Writer(ralph) ∧ BornIn(ralph, year1965) ::: Ralph Hammerthaler is a German writer.\nConclusion:\nAsian(ralph) ::: Ralph Hammerthaler is a writer born in Asia.\n------\nProblem:\nA person is a student if and only if the person is a student. A person is a student if and only if the"
    ]
  },
  {
    "id": "FOLIO_train_570",
    "context": "Ralph Hammerthaler was born in Wasserburg am Inn. Wasserburg am Inn is in Germany. Germany is in Europe. Ralph Hammerthaler is a German writer. Ralph Hammerthaler was born in 1965.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Ralph Hammerthaler lives in Germany.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBorn(x, y) ::: x was born in y.\nLive(x, y) ::: x lives in y.\nGerman(x) ::: x is a German person.\nWriter(x) ::: x is a writer.\nIn(x, y) ::: x is in y.\nEurope(x) ::: x is in Europe.\nGermany(x) ::: x is in Germany.\nWasserburgAmInn(x) ::: x is in Wasserburg am Inn.\nPremises:\nBorn(ralph, wasserburgAmInn) ∧ In(wasserburgAmInn, germany) ∧ In(germany, europe) ∧ German(ralph) ∧ Writer(ralph) ∧ Born(ralph, year1965) ::: Ralph Hammerthaler was born in Wasserburg am Inn. Wasserburg am Inn is in Germany. Germany is in Europe. Ralph Hammerthaler is a German writer. Ralph Hammerthaler was born in 1965.\nConclusion:\nLive(ralph, germany) ::: Ralph Hammerthaler lives in Germany.\n------"
    ]
  },
  {
    "id": "FOLIO_train_571",
    "context": "All books written by Tomas have sold more than 1 million copies. Some books that have won Hugo Awards are written by Tomas. All books about the future are inspired by Shakespeare. 2001 is a book either inspired from Shakespeare or it has sold more than 1 million copies. 2001 is a book that has either sold more than 1 million copies or it was written by Tomas.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? 2001 is a book that has won a Hugo Award.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBook(x) ::: x is a book.\nWrittenBy(x, y) ::: x is written by y.\nSold(x, y) ::: x has sold y copies.\nWin(x, y) ::: x has won y awards.\nInspired(x, y) ::: x is inspired by y.\nPremises:\n∀x (Book(x) ∧ WrittenBy(x, tomas) → Sold(x, 1000000)) ::: All books written by Tomas have sold more than 1 million copies.\n∃x (Book(x) ∧ WrittenBy(x, tomas) ∧ Win(x, hugo)) ::: Some books that have won Hugo Awards are written by Tomas.\n∀x (Book(x) ∧ Inspired(x, shakespeare) → Book(x) ∧ WrittenBy(x, tomas)) ::: All books about the future are inspired by Shakespeare.\n2001 ∧ (Inspired(2001, shakespeare) ∨ Sold(2001, 100"
    ]
  },
  {
    "id": "FOLIO_train_572",
    "context": "All books written by Tomas have sold more than 1 million copies. Some books that have won Hugo Awards are written by Tomas. All books about the future are inspired by Shakespeare. 2001 is a book either inspired from Shakespeare or it has sold more than 1 million copies. 2001 is a book that has either sold more than 1 million copies or it was written by Tomas.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? 2001 is a book that has won a Hugo Award and is about the future.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBook(x) ::: x is a book.\nWrittenBy(x, y) ::: x is written by y.\nSold(x, y) ::: x has sold y copies.\nWin(x, y) ::: x has won y awards.\nInspired(x, y) ::: x is inspired by y.\nAbout(x, y) ::: x is about y.\nPremises:\n∀x (Book(x) ∧ WrittenBy(x, tomas) → Sold(x, 1000000)) ::: All books written by Tomas have sold more than 1 million copies.\n∃x (Book(x) ∧ WrittenBy(x, tomas) ∧ Win(x, hugo)) ::: Some books that have won Hugo Awards are written by Tomas.\n∀x (Book(x) ∧ About(x, future) → Inspired(x, shakespeare)) ::: All books about the future are inspired by Shakespeare.\n2001 ∧ (Inspired(2001, shakespeare) ∨ Sold(2001,"
    ]
  },
  {
    "id": "FOLIO_train_573",
    "context": "All books written by Tomas have sold more than 1 million copies. Some books that have won Hugo Awards are written by Tomas. All books about the future are inspired by Shakespeare. 2001 is a book either inspired from Shakespeare or it has sold more than 1 million copies. 2001 is a book that has either sold more than 1 million copies or it was written by Tomas.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If 2001 either has won a Hugo Award and is about the future, or neither has won a Hugo Award nor is about the future, then 2001 has neither won a Hugo Award nor is written by Tomas.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBook(x) ::: x is a book.\nWrittenBy(x, y) ::: x is written by y.\nSold(x, y) ::: x has sold y copies.\nWin(x, y) ::: x has won a Hugo Award.\nInspired(x, y) ::: x is inspired by y.\nAbout(x, y) ::: x is about y.\nPremises:\n∀x (WrittenBy(tomas, x) → Sold(x, 1000000)) ::: All books written by Tomas have sold more than 1 million copies.\n∃x (WrittenBy(tomas, x) ∧ Win(x, hugo)) ::: Some books that have won Hugo Awards are written by Tomas.\n∀x (About(x, future) → Inspired(shakespeare, x)) ::: All books about the future are inspired by Shakespeare.\n2001 ∧ (WrittenBy(tomas, 2001) ∨ Sold(2001, 1000000)) ::: 2001 is a book either inspired from Shakespeare"
    ]
  },
  {
    "id": "FOLIO_train_574",
    "context": "No grass is food. All meadows are grass. All edible things are food. All fruits are edible. All lemons are fruit. Grapes are not edible and lemons. Bananas are grass or fruit.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Grapes are a food.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGrass(x) ::: x is grass.\nFood(x) ::: x is food.\nMeadow(x) ::: x is a meadow.\nEdible(x) ::: x is edible.\nFruit(x) ::: x is a fruit.\nLemon(x) ::: x is a lemon.\nPremises:\n¬∀x (Grass(x) → Food(x)) ::: No grass is food.\n∀x (Meadow(x) → Grass(x)) ::: All meadows are grass.\n∀x (Edible(x) → Food(x)) ::: All edible things are food.\n∀x (Fruit(x) → Edible(x)) ::: All fruits are edible.\nFruit(lemon) ::: All lemons are fruit.\nBananas ⊕ Fruit ::: Bananas are grass or fruit.\nConclusion:\nFood(grapes) ::: Grapes are a food.\n------\nProblem:\nAll people who are not students are either teachers or professors. All teachers are either professors or lecturers. All professors are either lecturers"
    ]
  },
  {
    "id": "FOLIO_train_575",
    "context": "No grass is food. All meadows are grass. All edible things are food. All fruits are edible. All lemons are fruit. Grapes are not edible and lemons. Bananas are grass or fruit.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Grapes are not a food.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGrass(x) ::: x is grass.\nFood(x) ::: x is food.\nMeadow(x) ::: x is a meadow.\nEdible(x) ::: x is edible.\nFruit(x) ::: x is a fruit.\nLemon(x) ::: x is a lemon.\nPremises:\n¬∀x (Grass(x) → Food(x)) ::: No grass is food.\n∀x (Meadow(x) → Grass(x)) ::: All meadows are grass.\n∀x (Edible(x) → Food(x)) ::: All edible things are food.\n∀x (Fruit(x) → Edible(x)) ::: All fruits are edible.\nFruit(lemon) ::: All lemons are fruit.\nBananas ⊕ Fruit ::: Bananas are grass or fruit.\nConclusion:\n¬Food(grapes) ::: Grapes are not a food.\n------\nProblem:\nAll people who are not students are either teachers or professors. All teachers are either professors or lecturers. All professors are either"
    ]
  },
  {
    "id": "FOLIO_train_576",
    "context": "No grass is food. All meadows are grass. All edible things are food. All fruits are edible. All lemons are fruit. Grapes are not edible and lemons. Bananas are grass or fruit.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Bananas are a lemon and meadow.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGrass(x) ::: x is grass.\nFood(x) ::: x is food.\nMeadow(x) ::: x is a meadow.\nEdible(x) ::: x is edible.\nFruit(x) ::: x is a fruit.\nLemon(x) ::: x is a lemon.\nPremises:\n¬∀x (Grass(x) → Food(x)) ::: No grass is food.\n∀x (Meadow(x) → Grass(x)) ::: All meadows are grass.\n∀x (Edible(x) → Food(x)) ::: All edible things are food.\n∀x (Fruit(x) → Edible(x)) ::: All fruits are edible.\n∀x (Lemon(x) → Fruit(x)) ::: All lemons are fruit.\nBananas(x) ∧ (Grass(x) ∨ Fruit(x)) ::: Bananas are grass or fruit.\nConclusion:\nLemon(bananas) ∧ Meadow(bananas) ::: Bananas are a lemon and me"
    ]
  },
  {
    "id": "FOLIO_train_577",
    "context": "No grass is food. All meadows are grass. All edible things are food. All fruits are edible. All lemons are fruit. Grapes are not edible and lemons. Bananas are grass or fruit.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Bananas are not both a lemon and a meadow.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGrass(x) ::: x is grass.\nFood(x) ::: x is food.\nMeadow(x) ::: x is a meadow.\nEdible(x) ::: x is edible.\nFruit(x) ::: x is a fruit.\nLemon(x) ::: x is a lemon.\nPremises:\n¬∀x (Grass(x) → Food(x)) ::: No grass is food.\n∀x (Meadow(x) → Grass(x)) ::: All meadows are grass.\n∀x (Edible(x) → Food(x)) ::: All edible things are food.\n∀x (Fruit(x) → Edible(x)) ::: All fruits are edible.\n∀x (Lemon(x) → Fruit(x)) ::: All lemons are fruit.\nBananas(x) ∧ (Grass(x) ∨ Fruit(x)) ::: Bananas are grass or fruit.\nConclusion:\n¬(Lemon(bananas) ∧ Meadow(bananas)) ::: Bananas are not both"
    ]
  },
  {
    "id": "FOLIO_train_578",
    "context": "The Golden State Warriors are a team from San Francisco. The Golden State Warriors won the NBA finals. All teams attending the NBA finals have more than thirty years of history. Boston Celtics are a team that lost the NBA finals. If a team wins the NBA finals, then they will have more income. If a team wins or loses at the NBA finals, then they are attending the finals.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Boston Celtics is from San Francisco.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTeam(x) ::: x is a team.\nWin(x) ::: x wins.\nLose(x) ::: x loses.\nAttend(x) ::: x attends.\nIncome(x) ::: x has more income.\nHistory(x) ::: x has more than thirty years of history.\nFrom(x, y) ::: x is from y.\nPremises:\nTeam(goldenStateWarriors) ∧ Win(goldenStateWarriors) ∧ From(goldenStateWarriors, sanFrancisco) ::: The Golden State Warriors are a team from San Francisco.\nWin(goldenStateWarriors) ∧ Income(goldenStateWarriors) ::: All teams attending the NBA finals have more than thirty years of history.\nLose(bostonCeltics) ∧ From(bostonCeltics, sanFrancisco) ::: Boston Celtics are a team that lost the NBA finals.\nWin(x) → Income(x) ::: If a team wins the NBA finals, then they will have more income.\nWin(x) ∨ Lose(x) ∧"
    ]
  },
  {
    "id": "FOLIO_train_579",
    "context": "The Golden State Warriors are a team from San Francisco. The Golden State Warriors won the NBA finals. All teams attending the NBA finals have more than thirty years of history. Boston Celtics are a team that lost the NBA finals. If a team wins the NBA finals, then they will have more income. If a team wins or loses at the NBA finals, then they are attending the finals.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Boston Celtics has more than 30 years of experience.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTeam(x) ::: x is a team.\nWin(x) ::: x wins.\nLose(x) ::: x loses.\nAttend(x) ::: x attends.\nIncome(x) ::: x has more income.\nHistory(x) ::: x has more than 30 years of history.\nPremises:\nTeam(goldenStateWarriors) ∧ Win(goldenStateWarriors) ∧ Attend(goldenStateWarriors) ::: The Golden State Warriors are a team from San Francisco.\nWin(goldenStateWarriors) ∧ Income(goldenStateWarriors) ::: The Golden State Warriors won the NBA finals.\n∀x (Attend(x) → History(x)) ::: All teams attending the NBA finals have more than thirty years of history.\nTeam(bostonCeltics) ∧ Lose(bostonCeltics) ∧ Attend(bostonCeltics) ::: Boston Celtics are a team that lost the NBA finals.\n∀x (Win(x) → Income(x)) ::: If a team wins the NBA finals"
    ]
  },
  {
    "id": "FOLIO_train_580",
    "context": "The Golden State Warriors are a team from San Francisco. The Golden State Warriors won the NBA finals. All teams attending the NBA finals have more than thirty years of history. Boston Celtics are a team that lost the NBA finals. If a team wins the NBA finals, then they will have more income. If a team wins or loses at the NBA finals, then they are attending the finals.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Golden State Warriors will have more income for gate receipts.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTeam(x) ::: x is a team.\nAttend(x, y) ::: x attends the NBA finals in year y.\nWin(x, y) ::: x wins the NBA finals in year y.\nLose(x, y) ::: x loses the NBA finals in year y.\nIncome(x, y) ::: x has more income for gate receipts in year y.\nHistory(x, y) ::: x has more than y years of history.\nPremises:\nTeam(goldenStateWarriors) ∧ Team(bostonCeltics) ∧ Attend(goldenStateWarriors, year2015) ∧ Attend(bostonCeltics, year2015) ∧ Win(goldenStateWarriors, year2015) ∧ Lose(bostonCeltics, year2015) ::: The Golden State Warriors are a team from San Francisco. The Golden State Warriors won the NBA finals. All teams attending the NBA finals have more than thirty years of history. Boston Celtics are a team that lost the NBA finals.\n∀x (Win(x, y) → Income(x, y)) ::: If a team wins the NBA finals, then they will have more income.\n∀x (Attend(x, y) → (Win(x, y) ∨ Lose(x, y))) ::: If a team wins or loses at the NBA finals, then they are attending the finals.\nConclusion:\nIncome(goldenStateWarriors, year2015) ::: The Golden State Warriors will have more income for gate receipts.\n------"
    ]
  },
  {
    "id": "FOLIO_train_581",
    "context": "Maya will play violin if and only if she never injures her fingers. Volleyball players can injure their ankle, fingers, or shoulder. Maya is a volleyball player.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Maya will not play violin.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPlay(x, y) ::: x will play y.\nInjure(x, y) ::: x injures y.\nVolleyballPlayer(x) ::: x is a volleyball player.\nFingers(x) ::: x is a finger.\nAnkle(x) ::: x is an ankle.\nShoulder(x) ::: x is a shoulder.\nPremises:\nPlay(maya, violin) ↔ ¬∃x (Injure(maya, x) ∧ Fingers(x)) ::: Maya will play violin if and only if she never injures her fingers.\n∀x (VolleyballPlayer(x) → (Injure(x, ankle) ∨ Injure(x, fingers) ∨ Injure(x, shoulder))) ::: Volleyball players can injure their ankle, fingers, or shoulder.\nVolleyballPlayer(maya) ::: Maya is a volleyball player.\nConclusion:\n¬Play(maya, violin) ::: Maya will not play violin.\n------\nProblem:\nA person is a student if and only if they are a student at a university. A person is a student at a university if and only if they are enrolled in a course at that university. A person is enrolled in a course at a university if and only if they are enrolled in a course at that university and they are not enrolled in a course at another university.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? A person is a student if and only if they are enrolled in a course at a university.\n###\nPredicates:\nStudent(x) ::: x"
    ]
  },
  {
    "id": "FOLIO_train_582",
    "context": "All devices belonging to the company are connected to Google Home. All devices with the company logo belong to the company. A device is either with the company logo or belongs to employees. All devices belonging to employees are available to connect to the company's wifi. All devices connected to Google Home are controlled by managers. All devices that connect to the company's wifi are easy to operate. All devices that are easy to operate are produced after 2020. IPod1 is produced before 2020.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? IPod1 is controlled by managers.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCompany(x) ::: x is a company.\nDevice(x) ::: x is a device.\nLogo(x) ::: x has the company logo.\nBelong(x, y) ::: x belongs to y.\nConnect(x, y) ::: x is connected to y.\nControl(x, y) ::: x controls y.\nEasy(x) ::: x is easy to operate.\nProduce(x, y) ::: x is produced in year y.\nPremises:\n∀x (Belong(x, company) → Connect(x, googleHome)) ::: All devices belonging to the company are connected to Google Home.\n∀x (Logo(x) → Belong(x, company)) ::: All devices with the company logo belong to the company.\n∀x (Belong(x, company) ∨ Belong(x, employees)) ::: A device is either with the company logo or belongs to employees.\n∀x (Belong(x, employees) → Connect(x, companyWifi)) ::: All devices belonging to employees are available to connect to the company's wifi.\n∀x (Connect(x, googleHome) → Control(x, managers)) ::: All devices connected to Google Home are controlled by managers.\n∀x (Connect(x, companyWifi) → Easy(x)) ::: All devices that connect to the company's wifi are easy to operate.\n∀x (Easy(x) → Produce(x, year2020)) ::: All devices that are easy to operate are produced after 2020.\nProduce(iPod1, year2019) ::: IPod1 is produced before 20"
    ]
  },
  {
    "id": "FOLIO_train_583",
    "context": "All devices belonging to the company are connected to Google Home. All devices with the company logo belong to the company. A device is either with the company logo or belongs to employees. All devices belonging to employees are available to connect to the company's wifi. All devices connected to Google Home are controlled by managers. All devices that connect to the company's wifi are easy to operate. All devices that are easy to operate are produced after 2020. IPod1 is produced before 2020.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? IPod1 is either produced after 2020 or controlled by managers.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCompany(x) ::: x is a company.\nDevice(x) ::: x is a device.\nLogo(x) ::: x has the company logo.\nBelong(x, y) ::: x belongs to y.\nConnect(x, y) ::: x is connected to y.\nControl(x, y) ::: x controls y.\nEasy(x) ::: x is easy to operate.\nProduce(x, y) ::: x is produced in year y.\nPremises:\n∀x (Belong(x, company) → Connect(x, googleHome)) ::: All devices belonging to the company are connected to Google Home.\n∀x (Logo(x) → Belong(x, company)) ::: All devices with the company logo belong to the company.\n∀x (Belong(x, company) ∨ Belong(x, employees)) ::: A device is either with the company logo or belongs to employees.\n∀x (Belong(x, employees) → Connect(x, companyWifi)) ::: All devices belonging to employees are available to connect to the company's wifi.\n∀x (Connect(x, googleHome) → Control(x, managers)) ::: All devices connected to Google Home are controlled by managers.\n∀x (Connect(x, companyWifi) → Easy(x)) ::: All devices that connect to the company's wifi are easy to operate.\n∀x (Easy(x) → Produce(x, year2020)) ::: All devices that are easy to operate are produced after 2020.\nProduce(iPod1, year2019) ::: IPod1 is produced before 20"
    ]
  },
  {
    "id": "FOLIO_train_584",
    "context": "All devices belonging to the company are connected to Google Home. All devices with the company logo belong to the company. A device is either with the company logo or belongs to employees. All devices belonging to employees are available to connect to the company's wifi. All devices connected to Google Home are controlled by managers. All devices that connect to the company's wifi are easy to operate. All devices that are easy to operate are produced after 2020. IPod1 is produced before 2020.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? IPod1 is not with the company logo, and managers do not control it.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCompany(x) ::: x is a company.\nDevice(x) ::: x is a device.\nLogo(x) ::: x is a company logo.\nBelong(x, y) ::: x belongs to y.\nConnect(x, y) ::: x is connected to y.\nControl(x, y) ::: x controls y.\nEasy(x) ::: x is easy to operate.\nProduce(x, y) ::: x is produced in year y.\nPremises:\n∀x (Belong(x, company) → Connect(x, googleHome)) ::: All devices belonging to the company are connected to Google Home.\n∀x (Belong(x, company) ∧ Logo(x)) → Belong(x, company) ::: All devices with the company logo belong to the company.\n∀x (Belong(x, company) ∨ Belong(x, employees)) ::: A device is either with the company logo or belongs to employees.\n∀x (Belong(x, employees) → Connect(x, companyWifi)) ::: All devices belonging to employees are available to connect to the company's wifi.\n∀x (Connect(x, googleHome) → Control(x, managers)) ::: All devices connected to Google Home are controlled by managers.\n∀x (Connect(x, companyWifi) → Easy(x)) ::: All devices that connect to the company's wifi are easy to operate.\n∀x (Easy(x) → Produce(x, year2020)) ::: All devices that are easy to operate are produced after 2020.\nProduce(iPod1, year2019)"
    ]
  },
  {
    "id": "FOLIO_train_585",
    "context": "All devices belonging to the company are connected to Google Home. All devices with the company logo belong to the company. A device is either with the company logo or belongs to employees. All devices belonging to employees are available to connect to the company's wifi. All devices connected to Google Home are controlled by managers. All devices that connect to the company's wifi are easy to operate. All devices that are easy to operate are produced after 2020. IPod1 is produced before 2020.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? IPod1 is either with the company logo or controlled by managers.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCompany(x) ::: x is a company.\nDevice(x) ::: x is a device.\nLogo(x) ::: x has the company logo.\nEmployee(x) ::: x is an employee.\nConnect(x, y) ::: x is connected to y.\nWifi(x) ::: x is the company's wifi.\nControl(x, y) ::: x controls y.\nEasy(x) ::: x is easy to operate.\nProduce(x, y) ::: x is produced in year y.\nPremises:\n∀x (Device(x) ∧ Company(x)) → Connect(x, GoogleHome) ::: All devices belonging to the company are connected to Google Home.\n∀x (Device(x) ∧ Logo(x)) → Company(x) ::: All devices with the company logo belong to the company.\n∀x (Device(x) ∧ Employee(x)) → Connect(x, Wifi) ::: All devices belonging to employees are available to connect to the company's wifi.\n∀x (Device(x) ∧ Connect(x, GoogleHome)) → Control(x, Manager) ::: All devices connected to Google Home are controlled by managers.\n∀x (Device(x) ∧ Connect(x, Wifi)) → Easy(x) ::: All devices that connect to the company's wifi are easy to operate.\n∀x (Device(x) ∧ Easy(x)) → Produce(x, year2020) ::: All devices that are easy to operate are produced after 2020.\nProduce(iPod1, year201"
    ]
  },
  {
    "id": "FOLIO_train_586",
    "context": "All CD players are delicate mechanisms. No delicate mechanisms are suitable toys for children.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Some CD players are suitable toys for children.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCDPlayer(x) ::: x is a CD player.\nDelicateMechanism(x) ::: x is a delicate mechanism.\nSuitable(x, y) ::: x is suitable for y.\nPremises:\n∀x (CDPlayer(x) → DelicateMechanism(x)) ::: All CD players are delicate mechanisms.\n∀x (DelicateMechanism(x) → ¬Suitable(x, children)) ::: No delicate mechanisms are suitable toys for children.\nConclusion:\n∃x (CDPlayer(x) ∧ Suitable(x, children)) ::: Some CD players are suitable toys for children.\n------\nProblem:\nAll people who are not students are either employed or unemployed. All people who are employed are either married or single. All people who are married are either employed or unemployed.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? All people who are not students are either married or single.\n###\nPredicates:\nStudent(x) ::: x is a student.\nEmployed(x) ::: x is employed.\nUnemployed(x) ::: x is unemployed.\nMarried(x) ::: x is married.\nPremises:\n∀x (¬Student(x) → (Employed(x) ∨ Unemployed(x))) ::: All people who are not students are either employed or unemployed.\n∀x (Employed(x) → (Married(x) ∨ Single(x))) ::: All people who are employed are either married or single.\n∀x (Married(x) → (Employed(x) ∨ Unemployed("
    ]
  },
  {
    "id": "FOLIO_train_587",
    "context": "All mammals are living beings. All elephants are mammals. All baby elephants are elephants. Some baby elephants are sleepy. If Jumbo is a living being, then Jumbo is not an elephant or a mammal. If Jumbo is sleepy, then Jumbo is a baby elephant or an elephant.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jumbo is sleepy.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLivingBeing(x) ::: x is a living being.\nMammal(x) ::: x is a mammal.\nElephant(x) ::: x is an elephant.\nBabyElephant(x) ::: x is a baby elephant.\nSleepy(x) ::: x is sleepy.\nPremises:\n∀x (Mammal(x) → LivingBeing(x)) ::: All mammals are living beings.\n∀x (Elephant(x) → Mammal(x)) ::: All elephants are mammals.\n∀x (BabyElephant(x) → Elephant(x)) ::: All baby elephants are elephants.\n∃x (BabyElephant(x) ∧ Sleepy(x)) ::: Some baby elephants are sleepy.\n¬(LivingBeing(jumbo) → ¬(Mammal(jumbo) ∨ Elephant(jumbo))) ::: If Jumbo is a living being, then Jumbo is not an elephant or a mammal.\n(Sleepy(jumbo) → (BabyElephant(jumbo) ∨ Elephant(jumbo))) ::: If Jumbo is sleepy, then Jumbo is a baby elephant or an elephant.\nConclusion:\nSleepy(jumbo) ::: Jumbo is sleepy.\n------\nProblem:\nAll mammals are living beings. All elephants are mammals. All baby elephants are elephants. Some baby elephants are sleepy. If Jumbo is a living being, then Jumbo is"
    ]
  },
  {
    "id": "FOLIO_train_588",
    "context": "All mammals are living beings. All elephants are mammals. All baby elephants are elephants. Some baby elephants are sleepy. If Jumbo is a living being, then Jumbo is not an elephant or a mammal. If Jumbo is sleepy, then Jumbo is a baby elephant or an elephant.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jumbo is not sleepy.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLivingBeing(x) ::: x is a living being.\nMammal(x) ::: x is a mammal.\nElephant(x) ::: x is an elephant.\nBabyElephant(x) ::: x is a baby elephant.\nSleepy(x) ::: x is sleepy.\nPremises:\n∀x (Mammal(x) → LivingBeing(x)) ::: All mammals are living beings.\n∀x (Elephant(x) → Mammal(x)) ::: All elephants are mammals.\n∀x (BabyElephant(x) → Elephant(x)) ::: All baby elephants are elephants.\n∃x (BabyElephant(x) ∧ Sleepy(x)) ::: Some baby elephants are sleepy.\nJumbo ∧ LivingBeing(jumbo) → ¬(Elephant(jumbo) ∧ Mammal(jumbo)) ::: If Jumbo is a living being, then Jumbo is not an elephant or a mammal.\nJumbo ∧ Sleepy(jumbo) → (BabyElephant(jumbo) ∨ Elephant(jumbo)) ::: If Jumbo is sleepy, then Jumbo is a baby elephant or an elephant.\nConclusion:\n¬Sleepy(jumbo) ::: Jumbo is not sleepy.\n------\nProblem:\nAll mammals are living beings. All elephants are mammals. All baby elephants are elephants. Some baby elephants are sleepy. If J"
    ]
  },
  {
    "id": "FOLIO_train_589",
    "context": "All mammals are living beings. All elephants are mammals. All baby elephants are elephants. Some baby elephants are sleepy. If Jumbo is a living being, then Jumbo is not an elephant or a mammal. If Jumbo is sleepy, then Jumbo is a baby elephant or an elephant.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jumbo is a living being.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLivingBeing(x) ::: x is a living being.\nMammal(x) ::: x is a mammal.\nElephant(x) ::: x is an elephant.\nBabyElephant(x) ::: x is a baby elephant.\nSleepy(x) ::: x is sleepy.\nPremises:\n∀x (Mammal(x) → LivingBeing(x)) ::: All mammals are living beings.\n∀x (Elephant(x) → Mammal(x)) ::: All elephants are mammals.\n∀x (BabyElephant(x) → Elephant(x)) ::: All baby elephants are elephants.\n∃x (BabyElephant(x) ∧ Sleepy(x)) ::: Some baby elephants are sleepy.\nJumbo ⊕ LivingBeing(jumbo) ::: If Jumbo is a living being, then Jumbo is not an elephant or a mammal.\nJumbo ⊕ Sleepy(jumbo) ::: If Jumbo is sleepy, then Jumbo is a baby elephant or an elephant.\nConclusion:\nLivingBeing(jumbo) ::: Jumbo is a living being.\n------\nProblem:\nAll mammals are living beings. All elephants are mammals. All baby elephants are elephants. Some baby elephants are sleepy. If Jumbo is a living being, then Jumbo is not an elephant or a mammal. If Jumbo is sleepy, then Jumbo is a baby elephant or an elephant.\nQuestion:"
    ]
  },
  {
    "id": "FOLIO_train_590",
    "context": "All mammals are living beings. All elephants are mammals. All baby elephants are elephants. Some baby elephants are sleepy. If Jumbo is a living being, then Jumbo is not an elephant or a mammal. If Jumbo is sleepy, then Jumbo is a baby elephant or an elephant.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jumbo is neither sleepy nor a baby elephant.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLivingBeing(x) ::: x is a living being.\nMammal(x) ::: x is a mammal.\nElephant(x) ::: x is an elephant.\nBabyElephant(x) ::: x is a baby elephant.\nSleepy(x) ::: x is sleepy.\nPremises:\n∀x (Mammal(x) → LivingBeing(x)) ::: All mammals are living beings.\n∀x (Elephant(x) → Mammal(x)) ::: All elephants are mammals.\n∀x (BabyElephant(x) → Elephant(x)) ::: All baby elephants are elephants.\n∃x (BabyElephant(x) ∧ Sleepy(x)) ::: Some baby elephants are sleepy.\n¬(LivingBeing(jumbo) → ¬(Mammal(jumbo) ∨ Elephant(jumbo))) ::: If Jumbo is a living being, then Jumbo is not an elephant or a mammal.\n(Sleepy(jumbo) → (BabyElephant(jumbo) ∨ Elephant(jumbo))) ::: If Jumbo is sleepy, then Jumbo is a baby elephant or an elephant.\nConclusion:\n¬(Sleepy(jumbo) ∧ ¬(BabyElephant(jumbo) ∨ Elephant(jumbo))) ::: Jumbo is neither sleepy nor a baby elephant.\n------"
    ]
  },
  {
    "id": "FOLIO_train_591",
    "context": "All mammals are living beings. All elephants are mammals. All baby elephants are elephants. Some baby elephants are sleepy. If Jumbo is a living being, then Jumbo is not an elephant or a mammal. If Jumbo is sleepy, then Jumbo is a baby elephant or an elephant.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jumbo is not sleepy or an elephant.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLivingBeing(x) ::: x is a living being.\nMammal(x) ::: x is a mammal.\nElephant(x) ::: x is an elephant.\nBabyElephant(x) ::: x is a baby elephant.\nSleepy(x) ::: x is sleepy.\nPremises:\n∀x (Mammal(x) → LivingBeing(x)) ::: All mammals are living beings.\n∀x (Elephant(x) → Mammal(x)) ::: All elephants are mammals.\n∀x (BabyElephant(x) → Elephant(x)) ::: All baby elephants are elephants.\n∃x (BabyElephant(x) ∧ Sleepy(x)) ::: Some baby elephants are sleepy.\n¬(LivingBeing(jumbo) → ¬(Elephant(jumbo) ∧ Mammal(jumbo))) ::: If Jumbo is a living being, then Jumbo is not an elephant or a mammal.\n(Sleepy(jumbo) → (BabyElephant(jumbo) ∨ Elephant(jumbo))) ::: If Jumbo is sleepy, then Jumbo is a baby elephant or an elephant.\nConclusion:\n¬(Sleepy(jumbo) ∧ Elephant(jumbo)) ::: Jumbo is not sleepy or an elephant.\n------\nProblem:\nAll mammals are living beings. All elephants are"
    ]
  },
  {
    "id": "FOLIO_train_592",
    "context": "No faculty does homework. All students do homework. All kids are students. If someone works at a school, then they are faculty. If Jill works at a school or is a teacher, then Jill works at a school.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jill works at a school.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFaculty(x) ::: x is faculty.\nStudent(x) ::: x is a student.\nKid(x) ::: x is a kid.\nWork(x, y) ::: x works at y.\nHomework(x) ::: x does homework.\nTeacher(x) ::: x is a teacher.\nPremises:\n¬∃x (Faculty(x) ∧ Homework(x)) ::: No faculty does homework.\n∀x (Student(x) → Homework(x)) ::: All students do homework.\n∀x (Kid(x) → Student(x)) ::: All kids are students.\n∀x (Work(x, school) → Faculty(x)) ::: If someone works at a school, then they are faculty.\n∀x (Work(x, school) ∨ Teacher(x)) ::: If Jill works at a school or is a teacher, then Jill works at a school.\nConclusion:\nWork(jill, school) ::: Jill works at a school.\n------\nProblem:\nAll people who are not students are faculty. All faculty are teachers. All teachers are students.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? All people are students.\n###\nPredicates:\nStudent(x) ::: x is a student.\nFaculty(x) ::: x is faculty.\nTeacher(x) ::: x is a teacher.\nPremises:\n∀x (¬Student(x) → Faculty(x)) ::: All people who are not students are faculty.��"
    ]
  },
  {
    "id": "FOLIO_train_593",
    "context": "No faculty does homework. All students do homework. All kids are students. If someone works at a school, then they are faculty. If Jill works at a school or is a teacher, then Jill works at a school.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jill is a kid.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFaculty(x) ::: x is faculty.\nStudent(x) ::: x is a student.\nKid(x) ::: x is a kid.\nWork(x, y) ::: x works at y.\nHomework(x) ::: x does homework.\nTeacher(x) ::: x is a teacher.\nPremises:\n¬∃x (Faculty(x) ∧ Homework(x)) ::: No faculty does homework.\n∀x (Student(x) → Homework(x)) ::: All students do homework.\n∀x (Kid(x) → Student(x)) ::: All kids are students.\n∀x (Work(x, school) → Faculty(x)) ::: If someone works at a school, then they are faculty.\n∀x (Work(x, school) ∨ Teacher(x)) → Work(x, school) ::: If Jill works at a school or is a teacher, then Jill works at a school.\nConclusion:\nKid(jill) ::: Jill is a kid.\n------\nProblem:\nAll people who are not students are faculty. All faculty are teachers. All teachers are students.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? All people are students.\n###\nPredicates:\nStudent(x) ::: x is a student.\nFaculty(x) ::: x is faculty.\nTeacher(x) ::: x is a teacher.\nPremises:\n∀x (¬Student(x) → Faculty(x)) ::: All people who are not students"
    ]
  },
  {
    "id": "FOLIO_train_594",
    "context": "No faculty does homework. All students do homework. All kids are students. If someone works at a school, then they are faculty. If Jill works at a school or is a teacher, then Jill works at a school.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jill is not a kid.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFaculty(x) ::: x is faculty.\nStudent(x) ::: x is a student.\nKid(x) ::: x is a kid.\nWork(x, y) ::: x works at y.\nHomework(x) ::: x does homework.\nTeacher(x) ::: x is a teacher.\nPremises:\n¬∃x (Faculty(x) ∧ Homework(x)) ::: No faculty does homework.\n∀x (Student(x) → Homework(x)) ::: All students do homework.\n∀x (Kid(x) → Student(x)) ::: All kids are students.\n∀x (Work(x, school) → Faculty(x)) ::: If someone works at a school, then they are faculty.\n∀x (Work(x, school) ∨ Teacher(x)) ::: If Jill works at a school or is a teacher, then Jill works at a school.\nConclusion:\n¬Kid(jill) ::: Jill is not a kid.\n------\nProblem:\nAll people who are not students are faculty. All faculty are teachers. All teachers are students.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? All people are students.\n###\nPredicates:\nStudent(x) ::: x is a student.\nFaculty(x) ::: x is faculty.\nTeacher(x) ::: x is a teacher.\nPremises:\n∀x (¬Student(x) → Faculty(x)) ::: All people who are not students are faculty.��"
    ]
  },
  {
    "id": "FOLIO_train_595",
    "context": "Either Max listens to classical music or Max listens to rap. All the songs that Max listens to that are classical music are from the 12th century. If the song Max listens to is rap, then the song is from Kanye West. If a songs is from Kanye West, then the song is full of lyrics. All songs that are full of lyrics need to be written with words If “As it was” by Harry Styles is classical music that Max listens to or  from the 12th century, then “As it was” by Harry Styles is either classical music that Max listens to, or the songs are from 12th century.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? “As it was” by Harry Styles needs to be written with words.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nListens(x, y) ::: x listens to y.\nClassical(x) ::: x is classical music.\nRap(x) ::: x is rap.\nFrom(x, y) ::: x is from y.\nFullOfLyrics(x) ::: x is full of lyrics.\nNeed(x, y) ::: x needs to be written with y.\nPremises:\nListens(max, classicalMusic) ∨ Listens(max, rap) ::: Either Max listens to classical music or Max listens to rap.\n∀x (Classical(x) ∧ From(x, 12thCentury)) ::: All the songs that Max listens to that are classical music are from the 12th century.\n∀x (Rap(x) ∧ From(x, kanyeWest)) ::: If the song Max listens to is rap, then the song is from Kanye West.\n∀x (From(x, kanyeWest) ∧ FullOfLyrics(x)) ::: If a songs is from Kanye West, then the song is full of lyrics.\n∀x (FullOfLyrics(x) ∧ Need(x, words)) ::: All songs that are full of lyrics need to be written with words.\n∃x (Classical(x) ∧ Listens(max, x) ∧ From(x, 12thCentury)) ∨ ∃x (Rap(x) ∧ Listens(max, x) ∧ From(x, kanye"
    ]
  },
  {
    "id": "FOLIO_train_596",
    "context": "Either Max listens to classical music or Max listens to rap. All the songs that Max listens to that are classical music are from the 12th century. If the song Max listens to is rap, then the song is from Kanye West. If a songs is from Kanye West, then the song is full of lyrics. All songs that are full of lyrics need to be written with words If “As it was” by Harry Styles is classical music that Max listens to or  from the 12th century, then “As it was” by Harry Styles is either classical music that Max listens to, or the songs are from 12th century.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? \"As it was” by Harry Styles is a song from the 12th century.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nClassicalMusic(x) ::: x is a classical music.\nRap(x) ::: x is a rap.\nSong(x) ::: x is a song.\nListen(x, y) ::: x listens to y.\nFrom(x, y) ::: x is from y.\nFullOfLyrics(x) ::: x is full of lyrics.\nNeed(x, y) ::: x needs to be written with y.\nPremises:\n∃x (Listen(max, x) ∧ (ClassicalMusic(x) ∨ Rap(x))) ::: Either Max listens to classical music or Max listens to rap.\n∀x (Listen(max, x) ∧ ClassicalMusic(x)) → From(x, 12thCentury) ::: All the songs that Max listens to that are classical music are from the 12th century.\n∀x (Listen(max, x) ∧ Rap(x)) → From(x, KanyeWest) ::: If the song Max listens to is rap, then the song is from Kanye West.\n∀x (From(x, KanyeWest) → FullOfLyrics(x)) ::: If a songs is from Kanye West, then the song is full of lyrics.\n∀x (FullOfLyrics(x) → Need(x, words)) ::: All songs that are full of lyrics need to be written with words.\n∃x (Listen(max, x) ∧ (ClassicalMusic(x) ∨ From(x, 12thCentury))) :::"
    ]
  },
  {
    "id": "FOLIO_train_597",
    "context": "Either Max listens to classical music or Max listens to rap. All the songs that Max listens to that are classical music are from the 12th century. If the song Max listens to is rap, then the song is from Kanye West. If a songs is from Kanye West, then the song is full of lyrics. All songs that are full of lyrics need to be written with words If “As it was” by Harry Styles is classical music that Max listens to or  from the 12th century, then “As it was” by Harry Styles is either classical music that Max listens to, or the songs are from 12th century.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? \"As it was” by Harry Styles is not a song from Kanye West and needs to be written with words.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nListens(x, y) ::: x listens to y.\nClassicalMusic(x) ::: x is classical music.\nRap(x) ::: x is rap.\nFrom(x, y) ::: x is from y.\nFullOfLyrics(x) ::: x is full of lyrics.\nNeedToBeWrittenWithWords(x) ::: x needs to be written with words.\nPremises:\nListens(max, classicalMusic) ∨ Listens(max, rap) ::: Either Max listens to classical music or Max listens to rap.\n∀x (ClassicalMusic(x) ∧ From(x, 12thCentury)) ::: All the songs that Max listens to that are classical music are from the 12th century.\n∀x (Rap(x) ∧ From(x, kanyeWest)) ::: If the song Max listens to is rap, then the song is from Kanye West.\n∀x (From(x, kanyeWest) ∧ FullOfLyrics(x)) ::: If a songs is from Kanye West, then the song is full of lyrics.\n∀x (FullOfLyrics(x) ∧ NeedToBeWrittenWithWords(x)) ::: All songs that are full of lyrics need to be written with words.\n∀x (ClassicalMusic(x) ∧ Listens(max, x) ∨ From(x, 12thCentury)) ::: If “As it was” by Harry Styles is classical music that Max listens to or  from the"
    ]
  },
  {
    "id": "FOLIO_train_598",
    "context": "\"Your Woman\" is a song by British one-man band White Town. \"Your Woman\" song peaked at No. 1 on the UK Singles Chart. If a song peaked at No.1 at a cetain place, then it was extremely popular. \"Your Woman\" also peaked No. 1 in Iceland, Israel and Spain.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? \"Your Woman\" was extremely popular.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPeaked(x, y) ::: x peaked at y.\nPopular(x) ::: x is extremely popular.\nSong(x) ::: x is a song.\nPlace(x) ::: x is a place.\nPeak(x, y) ::: x peaked at y.\nPremises:\nSong(yourWoman) ∧ Peaked(yourWoman, no1) ::: \"Your Woman\" is a song.\nPeaked(yourWoman, no1) → Popular(yourWoman) ::: If a song peaked at No.1 at a cetain place, then it was extremely popular.\nPeaked(yourWoman, no1) ∧ Peaked(yourWoman, iceland) ∧ Peaked(yourWoman, israel) ∧ Peaked(yourWoman, spain) ::: \"Your Woman\" also peaked No. 1 in Iceland, Israel and Spain.\nConclusion:\nPopular(yourWoman) ::: \"Your Woman\" was extremely popular.\n------\nProblem:\nA person is a student if and only if the person is enrolled in a university. A person is a student if and only if the person is enrolled in a university. A person is a student if and only if the person is enrolled in a university. A person is a student if and only if the person is enrolled in a university. A person is a student if and only if the person is enrolled in a university. A person is a student if and only if the person is enrolled in a university. A person is a student if and only if the person is enrolled in a university. A person is a student"
    ]
  },
  {
    "id": "FOLIO_train_599",
    "context": "\"Your Woman\" is a song by British one-man band White Town. \"Your Woman\" song peaked at No. 1 on the UK Singles Chart. If a song peaked at No.1 at a cetain place, then it was extremely popular. \"Your Woman\" also peaked No. 1 in Iceland, Israel and Spain.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? White Town did not produce any popular song.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPeaked(x, y) ::: x peaked at y.\nPopular(x) ::: x is extremely popular.\nSong(x) ::: x is a song.\nPlace(x) ::: x is a place.\nProduce(x, y) ::: x produced y.\nPremises:\nPeaked(yourWoman, uk) ∧ Peaked(yourWoman, iceland) ∧ Peaked(yourWoman, israel) ∧ Peaked(yourWoman, spain) ::: \"Your Woman\" is a song by British one-man band White Town. \"Your Woman\" song peaked at No. 1 on the UK Singles Chart. \"Your Woman\" also peaked No. 1 in Iceland, Israel and Spain.\n∀x (Peaked(x, y) → Popular(x)) ::: If a song peaked at No.1 at a cetain place, then it was extremely popular.\nConclusion:\n¬Popular(whiteTown) ::: White Town did not produce any popular song.\n------\nProblem:\nA person is a student if and only if he or she is enrolled in a course. A person is enrolled in a course if and only if he or she is taking the course. A person is taking a course if and only if he or she is registered for the course. A person is registered for a course if and only if he or she is enrolled in the course.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? A person is a student if and only if he or she is registered for a course.\n###\nPredicates:\nStudent(x) ::"
    ]
  },
  {
    "id": "FOLIO_train_600",
    "context": "\"Your Woman\" is a song by British one-man band White Town. \"Your Woman\" song peaked at No. 1 on the UK Singles Chart. If a song peaked at No.1 at a cetain place, then it was extremely popular. \"Your Woman\" also peaked No. 1 in Iceland, Israel and Spain.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? White Town was a successful band.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPeaked(x, y) ::: x peaked at y.\nPlace(x) ::: x is a place.\nPopular(x) ::: x is extremely popular.\nBand(x) ::: x is a band.\nSong(x) ::: x is a song.\nPremises:\nPeaked(yourWoman, uk) ∧ Peaked(yourWoman, iceland) ∧ Peaked(yourWoman, israel) ∧ Peaked(yourWoman, spain) ::: \"Your Woman\" is a song by British one-man band White Town. \"Your Woman\" song peaked at No. 1 on the UK Singles Chart. \"Your Woman\" also peaked No. 1 in Iceland, Israel and Spain.\n∀x (Peaked(x, y) → Popular(x)) ::: If a song peaked at No.1 at a cetain place, then it was extremely popular.\nConclusion:\nPopular(whiteTown) ::: White Town was a successful band.\n------"
    ]
  },
  {
    "id": "FOLIO_train_601",
    "context": "All people who limp often and regularly have long-term medical issues with underlying causes. If people have long-term medical issues with underlying causes, then they are not often spry and energetic. People either stay indoors and rest a lot at home or people are often tired and disinterested in their activities. If people stay indoors and rest a lot at home, then they do not visit the gym at least once a day. If Mark either limps often and regularly or is often spry and energetic, then Mark limps often and regularly or is often tired and disinterested in his activities.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mark limps often and regularly.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLimp(x) ::: x limps often and regularly.\nLongTermMedicalIssues(x) ::: x has long-term medical issues with underlying causes.\nStayIndoors(x) ::: x stays indoors and rests a lot at home.\nVisitGym(x) ::: x visits the gym at least once a day.\nTired(x) ::: x is often tired and disinterested in his activities.\nSpry(x) ::: x is often spry and energetic.\nPremises:\n∀x (Limp(x) → LongTermMedicalIssues(x)) ::: All people who limp often and regularly have long-term medical issues with underlying causes.\n∀x (LongTermMedicalIssues(x) → ¬Spry(x)) ::: If people have long-term medical issues with underlying causes, then they are not often spry and energetic.\n∀x (StayIndoors(x) → ¬VisitGym(x)) ::: If people stay ind"
    ]
  },
  {
    "id": "FOLIO_train_602",
    "context": "All people who limp often and regularly have long-term medical issues with underlying causes. If people have long-term medical issues with underlying causes, then they are not often spry and energetic. People either stay indoors and rest a lot at home or people are often tired and disinterested in their activities. If people stay indoors and rest a lot at home, then they do not visit the gym at least once a day. If Mark either limps often and regularly or is often spry and energetic, then Mark limps often and regularly or is often tired and disinterested in his activities.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mark visits the gym at least once a day.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLimp(x) ::: x limps often and regularly.\nLongTermMedicalIssues(x) ::: x has long-term medical issues with underlying causes.\nStayIndoors(x) ::: x stays indoors and rests a lot at home.\nTired(x) ::: x is often tired and disinterested in his activities.\nSpry(x) ::: x is often spry and energetic.\nVisitGym(x) ::: x visits the gym at least once a day.\nPremises:\n∀x (Limp(x) → LongTermMedicalIssues(x)) ::: All people who limp often and regularly have long-term medical issues with underlying causes.\n∀x (LongTermMedicalIssues(x) → ¬Spry(x)) ::: If people have long-term medical issues with underlying causes, then they are not often spry and energetic.\n∀x (StayIndoors(x) → Tired(x)) ::: People either stay indoors and rest"
    ]
  },
  {
    "id": "FOLIO_train_603",
    "context": "All people who limp often and regularly have long-term medical issues with underlying causes. If people have long-term medical issues with underlying causes, then they are not often spry and energetic. People either stay indoors and rest a lot at home or people are often tired and disinterested in their activities. If people stay indoors and rest a lot at home, then they do not visit the gym at least once a day. If Mark either limps often and regularly or is often spry and energetic, then Mark limps often and regularly or is often tired and disinterested in his activities.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mark stays indoors and rests regularly at his home or visits the gym at least once a day.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLimp(x) ::: x limps often and regularly.\nLongTermMedicalIssues(x) ::: x has long-term medical issues with underlying causes.\nStayIndoors(x) ::: x stays indoors and rests a lot at home.\nVisitGym(x) ::: x visits the gym at least once a day.\nTired(x) ::: x is often tired and disinterested in his activities.\nSpry(x) ::: x is often spry and energetic.\nPremises:\n∀x (Limp(x) → LongTermMedicalIssues(x)) ::: All people who limp often and regularly have long-term medical issues with underlying causes.\n∀x (LongTermMedicalIssues(x) → ¬Spry(x)) ::: If people have long-term medical issues with underlying causes, then they are not often spry and energetic.\n∀x (StayIndoors(x) → Tired(x)) ::: People either stay indoors and rest"
    ]
  },
  {
    "id": "FOLIO_train_604",
    "context": "If two soccer teams score the same number of goals in one UCL final during the regular time, they need to play for the extra time. If two soccer teams score the same number of goals in one UCL final during both the regular time and extra time, they need to play the penalty shoot-out. Real Madrid and Atlético Madrid both scored one goal in 2016 UCL final during the regular time. Real Madrid and Atlético Madrid both scored zero goals in 2016 UCL final during the extra time.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Real Madrid and Atlético Madrid needed to play a penalty shoot-out in 2016 UCL final.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nScore(x, y) ::: x scored y goals in UCL final.\nRegularTime(x) ::: x is the regular time.\nExtraTime(x) ::: x is the extra time.\nPenaltyShootOut(x) ::: x is the penalty shoot-out.\nPremises:\n∀x ∀y (Score(x, y) ∧ Score(x, y) ∧ RegularTime(x)) → PenaltyShootOut(x) ::: If two soccer teams score the same number of goals in one UCL final during the regular time, they need to play for the extra time.\n∀x ∀y (Score(x, y) ∧ Score(x, y) ∧ ExtraTime(x)) → PenaltyShootOut(x) ::: If two soccer teams score the same number of goals in one UCL final during both the regular time and extra time, they need to play the penalty shoot-out.\nScore(realMadrid, one) ��"
    ]
  },
  {
    "id": "FOLIO_train_605",
    "context": "If two soccer teams score the same number of goals in one UCL final during the regular time, they need to play for the extra time. If two soccer teams score the same number of goals in one UCL final during both the regular time and extra time, they need to play the penalty shoot-out. Real Madrid and Atlético Madrid both scored one goal in 2016 UCL final during the regular time. Real Madrid and Atlético Madrid both scored zero goals in 2016 UCL final during the extra time.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Real Madrid and Atlético Madrid did not need to play a penalty shoot-out in 2016 UCL final.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nScore(x, y) ::: x scored y goals in UCL final.\nRegularTime(x) ::: x is the regular time.\nExtraTime(x) ::: x is the extra time.\nPenaltyShootOut(x) ::: x is the penalty shoot-out.\nPremises:\n∀x ∀y (Score(x, y) → Score(x, y) ∨ Score(x, y)) ::: If two soccer teams score the same number of goals in one UCL final during the regular time, they need to play for the extra time.\n∀x ∀y (Score(x, y) ∧ Score(x, y) → Score(x, y) ∨ Score(x, y)) ::: If two soccer teams score the same number of goals in one UCL final during both the regular time and extra time, they need to play the penalty shoot-out.\nScore(realMadrid, one) ∧ Score(atléticoMadrid, one) ��"
    ]
  },
  {
    "id": "FOLIO_train_606",
    "context": "System 7 is a UK-based electronic dance music band. Steve Hillage and Miquette Giraudy formed System 7. Steve Hillage and Miquette Giraudy are former members of the band Gong. Electric dance music bands are bands. System 7 has released several club singles. Club singles are not singles.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? System 7 was formed by former members of Gong.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFormed(x, y) ::: x was formed by y.\nMember(x, y) ::: x is a member of y.\nBand(x) ::: x is a band.\nRelease(x, y) ::: x released y.\nSingle(x) ::: x is a single.\nClubSingle(x) ::: x is a club single.\nPremises:\nFormed(system7, steveHillage) ∧ Formed(system7, miquetteGiraudy) ::: Steve Hillage and Miquette Giraudy formed System 7.\nMember(steveHillage, gong) ∧ Member(miquetteGiraudy, gong) ::: Steve Hillage and Miquette Giraudy are former members of the band Gong.\nBand(system7) ∧ Band(gong) ::: System 7 is a UK-based electronic dance music band.\nRelease(system7, severalClubSingles) ∧ ¬Release(system7, several"
    ]
  },
  {
    "id": "FOLIO_train_607",
    "context": "System 7 is a UK-based electronic dance music band. Steve Hillage and Miquette Giraudy formed System 7. Steve Hillage and Miquette Giraudy are former members of the band Gong. Electric dance music bands are bands. System 7 has released several club singles. Club singles are not singles.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? System 7 has released several singles.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFormerMember(x, y) ::: x is a former member of y.\nBand(x) ::: x is a band.\nRelease(x, y) ::: x releases y.\nSingle(x) ::: x is a single.\nClubSingle(x) ::: x is a club single.\nPremises:\nBand(system7) ∧ FormerMember(steveHillage, system7) ∧ FormerMember(miquetteGiraudy, system7) ∧ FormerMember(steveHillage, gong) ∧ FormerMember(miquetteGiraudy, gong) ::: System 7 is a UK-based electronic dance music band. Steve Hillage and Miquette Giraudy formed System 7. Steve Hillage and Miquette Giraudy are former members of the band Gong.\nBand(system7) ∧ Release(system7, several) ∧ Release(several, clubSingles) ::: System 7 has released several club singles."
    ]
  },
  {
    "id": "FOLIO_train_608",
    "context": "System 7 is a UK-based electronic dance music band. Steve Hillage and Miquette Giraudy formed System 7. Steve Hillage and Miquette Giraudy are former members of the band Gong. Electric dance music bands are bands. System 7 has released several club singles. Club singles are not singles.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? System 7 is not a band.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nForm(x, y) ::: x and y formed band y.\nMember(x, y) ::: x is a member of band y.\nRelease(x, y) ::: band x released album y.\nSingle(x) ::: x is a single.\nClubSingle(x) ::: x is a club single.\nPremises:\nForm(steve, system7) ∧ Form(miquette, system7) ∧ Member(steve, gong) ∧ Member(miquette, gong) ::: Steve Hillage and Miquette Giraudy formed System 7. Steve Hillage and Miquette Giraudy are former members of the band Gong.\n∀x (Form(x, y) → Member(x, y)) ::: Any band formed by x is a band that x is a member of.\n∀x (Release(x, y) → Single(y)) ::: Any single released by x is a single.\n∀x (Release(x, y) →"
    ]
  },
  {
    "id": "FOLIO_train_609",
    "context": "A summarization model is always faithful if it uses content from the input documents. Extractive models are a kind of summarization models. Extractive model can only use content from the input documents.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Extractive models are always faithful.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSummarizationModel(x) ::: x is a summarization model.\nFaithful(x) ::: x is faithful.\nContent(x) ::: x is content.\nInputDocument(x) ::: x is an input document.\nExtractiveModel(x) ::: x is an extractive model.\nPremises:\n∀x (SummarizationModel(x) → (Content(x) ∧ InputDocument(x))) ::: A summarization model is always faithful if it uses content from the input documents.\n∀x (ExtractiveModel(x) → SummarizationModel(x)) ::: Extractive models are a kind of summarization models.\n∀x (ExtractiveModel(x) → (Content(x) ∧ InputDocument(x))) ::: Extractive model can only use content from the input documents.\nConclusion:\nFaithful(extractiveModel) ::: Extractive models are always faithful.\n------\nProblem:\nA person is a student if and only if the person is en"
    ]
  },
  {
    "id": "FOLIO_train_610",
    "context": "A summarization model is always faithful if it uses content from the input documents. Extractive models are a kind of summarization models. Extractive model can only use content from the input documents.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Extractive models are not always faithful.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSummarizationModel(x) ::: x is a summarization model.\nFaithful(x) ::: x is faithful.\nContent(x) ::: x is content.\nInputDocument(x) ::: x is an input document.\nExtractiveModel(x) ::: x is an extractive model.\nPremises:\n∀x (SummarizationModel(x) → (Faithful(x) ∧ Content(x))) ::: A summarization model is always faithful if it uses content from the input documents.\n∀x (ExtractiveModel(x) → Content(x)) ::: Extractive models are a kind of summarization models.\n∀x (ExtractiveModel(x) → InputDocument(x)) ::: Extractive model can only use content from the input documents.\nConclusion:\n¬∀x (ExtractiveModel(x) → Faithful(x)) ::: Extractive models are not always faithful.\n------"
    ]
  },
  {
    "id": "FOLIO_train_611",
    "context": "If people practice coding questions, then they are not studying to go to medical school to become a doctor. If people want to work in the software engineering industry, then they practice coding questions. If people enjoy healthcare fields and want to help people with medical issues, then they are studying to go to medical school to become a doctor. If people grew up with parents who worked as doctors, then they enjoy healthcare fields and want to help people with medical issues. If people study hard, then they grew up with parents who worked as doctors. If Robin neither enjoys healthcare fields and wants to help people with medical issues nor grew up with parents who worked as doctors, then Robin is either a person who studies hard or grew up with parents who worked as doctors.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Robin is a person who studies hard.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nStudy(x) ::: x studies hard.\nCoding(x) ::: x practices coding questions.\nMedical(x) ::: x is studying to go to medical school to become a doctor.\nWant(x, y) ::: x wants to y.\nEnjoy(x, y) ::: x enjoys y.\nParent(x, y) ::: x is the parent of y.\nIndustry(x) ::: x is the software engineering industry.\nPremises:\nCoding(x) → ¬Medical(x) ::: If people practice coding questions, then they are not studying to go to medical school to become a doctor.\nWant(x, industry) → Coding(x) ::: If people want to work in the software engineering industry, then they practice coding questions.\nMedical(x) ∧ Enjoy(x, healthcare) ∧ Want(x, help) ::: If people enjoy healthcare fields and want to help people with medical issues,"
    ]
  },
  {
    "id": "FOLIO_train_612",
    "context": "If people practice coding questions, then they are not studying to go to medical school to become a doctor. If people want to work in the software engineering industry, then they practice coding questions. If people enjoy healthcare fields and want to help people with medical issues, then they are studying to go to medical school to become a doctor. If people grew up with parents who worked as doctors, then they enjoy healthcare fields and want to help people with medical issues. If people study hard, then they grew up with parents who worked as doctors. If Robin neither enjoys healthcare fields and wants to help people with medical issues nor grew up with parents who worked as doctors, then Robin is either a person who studies hard or grew up with parents who worked as doctors.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Robin practices coding questions and wants to work in the software engineering industry.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nStudy(x) ::: x studies to go to medical school to become a doctor.\nPractice(x) ::: x practices coding questions.\nWork(x) ::: x wants to work in the software engineering industry.\nEnjoy(x, y) ::: x enjoys y.\nParent(x, y) ::: x is the parent of y.\nHard(x) ::: x studies hard.\nPremises:\n∀x (Practice(x) → ¬Study(x)) ::: If people practice coding questions, then they are not studying to go to medical school to become a doctor.\n∀x (Want(x, softwareEngineering) → Practice(x)) ::: If people want to work in the software engineering industry, then they practice coding questions.\n∀x (Enjoy(x, healthcare) ∧ Want(x, doctor) → Study(x)) ::: If people enjoy healthcare fields and want to help people with medical issues, then"
    ]
  },
  {
    "id": "FOLIO_train_613",
    "context": "If people practice coding questions, then they are not studying to go to medical school to become a doctor. If people want to work in the software engineering industry, then they practice coding questions. If people enjoy healthcare fields and want to help people with medical issues, then they are studying to go to medical school to become a doctor. If people grew up with parents who worked as doctors, then they enjoy healthcare fields and want to help people with medical issues. If people study hard, then they grew up with parents who worked as doctors. If Robin neither enjoys healthcare fields and wants to help people with medical issues nor grew up with parents who worked as doctors, then Robin is either a person who studies hard or grew up with parents who worked as doctors.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Robin neither practices coding questions nor works to work in the software engineering industry.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nStudy(x) ::: x studies to go to medical school to become a doctor.\nPractice(x) ::: x practices coding questions.\nWork(x) ::: x works to work in the software engineering industry.\nEnjoy(x, y) ::: x enjoys y.\nHelp(x, y) ::: x helps y with medical issues.\nParent(x, y) ::: x is the parent of y.\nGrowUp(x, y) ::: x grew up with parents who worked as y.\nHard(x) ::: x studies hard.\nPremises:\n∀x (Practice(x) → ¬Study(x)) ::: If people practice coding questions, then they are not studying to go to medical school to become a doctor.\n∀x (Want(x, softwareEngineering) → Practice(x)) ::: If people want to work in the software engineering industry, then they practice coding questions.\n∀x (Enjoy"
    ]
  },
  {
    "id": "FOLIO_train_614",
    "context": "If people go to the spa at least once a week, then they are not people who are miserly and need to save a large portion of their income. People are either miserly and need to save a large portion of their income, or people that frivolously spend a lot of money every time they go out. If people frivolously spend a lot of money every time they go out, then they value quality manufacturing and luxury items. If people value quality manufacturing and luxury items, then they enjoy shopping for materialistic items in their free time. If Jess is not miserly and needs to save a large portion of their income, then Jess does not value quality manufacturing and luxury items. If Jess either values quality manufacturing and luxury items or, if he does not, then he is miserly and needs to save a large portion of his income, then Jess frivolously spends a lot of money every time he goes out.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jess frivolously spends a lot of money every time they go out.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGo(x) ::: x goes to the spa at least once a week.\nMiserly(x) ::: x is miserly.\nSave(x) ::: x needs to save a large portion of their income.\nFrivolous(x) ::: x frivolously spends a lot of money every time they go out.\nValue(x, y) ::: x values y.\nEnjoy(x, y) ::: x enjoys y.\nPremises:\n∀x (Go(x) → ¬(Miserly(x) ∧ Save(x))) ::: If people go to the spa at least once a week, then they are not people who are miserly and need to save a large portion of their income.\n∀x (Miserly(x) ∨ Frivolous(x)) ::: People are either miserly and need to save a large portion of their income, or people that frivolously spend a lot"
    ]
  },
  {
    "id": "FOLIO_train_615",
    "context": "If people go to the spa at least once a week, then they are not people who are miserly and need to save a large portion of their income. People are either miserly and need to save a large portion of their income, or people that frivolously spend a lot of money every time they go out. If people frivolously spend a lot of money every time they go out, then they value quality manufacturing and luxury items. If people value quality manufacturing and luxury items, then they enjoy shopping for materialistic items in their free time. If Jess is not miserly and needs to save a large portion of their income, then Jess does not value quality manufacturing and luxury items. If Jess either values quality manufacturing and luxury items or, if he does not, then he is miserly and needs to save a large portion of his income, then Jess frivolously spends a lot of money every time he goes out.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jess either enjoys shopping for materialistic items in his free time or, if he does not, then he goes to the spa at least once a week.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGoToSpa(x) ::: x goes to the spa at least once a week.\nMiserly(x) ::: x is miserly.\nSave(x) ::: x needs to save a large portion of their income.\nFrivolous(x) ::: x frivolously spends a lot of money every time they go out.\nValue(x, y) ::: x values y.\nShop(x) ::: x enjoys shopping for materialistic items in their free time.\nPremises:\n∀x (GoToSpa(x) → ¬(Miserly(x) ∧ Save(x))) ::: If people go to the spa at least once a week, then they are not people who are miserly and need to save a large portion of their income.\n∀x (Miserly(x) ∧ Save(x) ∨ Frivolous(x)) ::: People are either miserly and need"
    ]
  },
  {
    "id": "FOLIO_train_616",
    "context": "If people go to the spa at least once a week, then they are not people who are miserly and need to save a large portion of their income. People are either miserly and need to save a large portion of their income, or people that frivolously spend a lot of money every time they go out. If people frivolously spend a lot of money every time they go out, then they value quality manufacturing and luxury items. If people value quality manufacturing and luxury items, then they enjoy shopping for materialistic items in their free time. If Jess is not miserly and needs to save a large portion of their income, then Jess does not value quality manufacturing and luxury items. If Jess either values quality manufacturing and luxury items or, if he does not, then he is miserly and needs to save a large portion of his income, then Jess frivolously spends a lot of money every time he goes out.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Jess either enjoys shopping for materialistic items in his free time or, if he does not, then he goes to the spa at least once a week, then Jess neither values quality manufacturing and luxury items nor goes to the spa at least once a week.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGo(x) ::: x goes to the spa at least once a week.\nMiserly(x) ::: x is miserly.\nSave(x) ::: x needs to save a large portion of their income.\nFrivolous(x) ::: x frivolously spends a lot of money every time they go out.\nValue(x, y) ::: x values y.\nShop(x) ::: x enjoys shopping for materialistic items in their free time.\nPremises:\n∀x (Go(x) → ¬(Miserly(x) ∧ Save(x))) ::: If people go to the spa at least once a week, then they are not people who are miserly and need to save a large portion of their income.\n∀x (Miserly(x) ∧ Save(x) ∨ Frivolous(x)) ::: People are either miserly and need to save a large portion of"
    ]
  },
  {
    "id": "FOLIO_train_617",
    "context": "The indie pop band Phoenix has released 6 albums. Phoenix's album \"Wolfgang Amadeus Phoenix\" sold over 500,000 copies. A certified gold album or single is one which sold over half a million copies. \"1901\" is a single from Phoenix's album \"Wolfgang Amadeus Phoenix.\" Over 400,000 copies of \"1901\" have been sold.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The album \"Wolfgang Amadeus Phoenix\" is a certified gold album.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAlbum(x) ::: x is an album.\nSingle(x) ::: x is a single.\nSold(x, y) ::: x sold y copies.\nCertifiedGold(x) ::: x is a certified gold album or single.\nPremises:\nAlbum(wolfgangAmadeusPhoenix) ∧ Sold(wolfgangAmadeusPhoenix, over500000) ::: Phoenix's album \"Wolfgang Amadeus Phoenix\" sold over 500,000 copies.\nAlbum(wolfgangAmadeusPhoenix) ∧ Single(1901) ∧ Sold(1901, over400000) ::: Over 400,000 copies of \"1901\" have been sold.\nConclusion:\nCertifiedGold(wolfgangAmadeusPhoenix) :::"
    ]
  },
  {
    "id": "FOLIO_train_618",
    "context": "The indie pop band Phoenix has released 6 albums. Phoenix's album \"Wolfgang Amadeus Phoenix\" sold over 500,000 copies. A certified gold album or single is one which sold over half a million copies. \"1901\" is a single from Phoenix's album \"Wolfgang Amadeus Phoenix.\" Over 400,000 copies of \"1901\" have been sold.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The single \"1901\" is a certified gold single.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAlbum(x) ::: x is an album.\nSingle(x) ::: x is a single.\nSold(x, y) ::: x sold y copies.\nCertifiedGold(x) ::: x is a certified gold album or single.\nPremises:\nAlbum(wolfgangAmadeusPhoenix) ∧ Sold(wolfgangAmadeusPhoenix, over500000) ::: Phoenix's album \"Wolfgang Amadeus Phoenix\" sold over 500,000 copies.\nAlbum(wolfgangAmadeusPhoenix) ∧ Single(1901) ∧ Sold(1901, over400000) ::: Over 400,000 copies of \"1901\" have been sold.\nConclusion:\nCertifiedGold(1901) ::: The single \"1901"
    ]
  },
  {
    "id": "FOLIO_train_619",
    "context": "Peter Parker is a either a superhero or a civilian. The Hulk is a destroyer. The Hulk wakes up when he is angry. If the Hulk wakes up, then he will break a bridge. Thor is a god. Thor will break a bridge when he is happy. A god is not a destroyer and a destroyer is not a god. Peter Parker wears a uniform when he is a superhero. Peter Parker is not a civilian if and only if a destroyer is breaking a bridge. If Thor is happy, the Hulk is angry.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If the Hulk does not wake up, then Thor is not happy.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSuperhero(x) ::: x is a superhero.\nCivilian(x) ::: x is a civilian.\nDestroyer(x) ::: x is a destroyer.\nAngry(x) ::: x is angry.\nHappy(x) ::: x is happy.\nWakeUp(x) ::: x wakes up.\nBreak(x, y) ::: x breaks y.\nUniform(x) ::: x wears a uniform.\nGod(x) ::: x is a god.\nPremises:\nPeterParker ∧ (Superhero(PeterParker) ∨ Civilian(PeterParker)) ::: Peter Parker is a either a superhero or a civilian.\nHulk ∧ Destroyer(Hulk) ::: The Hulk is a destroyer.\nHulk ∧ Angry(Hulk) ∧ WakeUp(Hulk)"
    ]
  },
  {
    "id": "FOLIO_train_620",
    "context": "Peter Parker is a either a superhero or a civilian. The Hulk is a destroyer. The Hulk wakes up when he is angry. If the Hulk wakes up, then he will break a bridge. Thor is a god. Thor will break a bridge when he is happy. A god is not a destroyer and a destroyer is not a god. Peter Parker wears a uniform when he is a superhero. Peter Parker is not a civilian if and only if a destroyer is breaking a bridge. If Thor is happy, the Hulk is angry.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Thor is happy, then Peter Parker wears a uniform.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSuperhero(x) ::: x is a superhero.\nCivilian(x) ::: x is a civilian.\nDestroyer(x) ::: x is a destroyer.\nAngry(x) ::: x is angry.\nHappy(x) ::: x is happy.\nWakeUp(x) ::: x wakes up.\nBreak(x, y) ::: x breaks y.\nUniform(x) ::: x wears a uniform.\nGod(x) ::: x is a god.\nPremises:\nSuperhero(peter) ∨ Civilian(peter) ::: Peter Parker is a either a superhero or a civilian.\nDestroyer(hulk) ::: The Hulk is a destroyer.\nAngry(hulk) → WakeUp(hulk) ::: The Hulk wakes up when he is angry.\nThor(thor) ::: Thor is a god.\nHappy(thor) → Break(thor, bridge) ::: Thor will break a bridge when he is happy.\n¬(God(x) ∧ Destroyer(x)) ∧ ¬(Destroyer(x) ∧ God(x)) ::: A god is not a destroyer and a destroyer is not a god.\nUniform(peter) ∧ Superhero(peter) ::: Peter Parker wears a uniform when he is a superhero.\n¬(Superhero(peter) ∧ Civilian(peter)) ↔ (Destroyer(hulk) ∧ Break(hulk, bridge)) ::: Peter Parker is not a civilian if and only if a destroyer is breaking a bridge.\nHappy(thor) → Angry(hulk) ::: If Thor is happy, the Hulk is angry.\nConclusion:\nHappy(thor) → Uniform(peter) ::: If Thor is happy, then Peter Parker wears a uniform.\n------"
    ]
  },
  {
    "id": "FOLIO_train_621",
    "context": "Peter Parker is a either a superhero or a civilian. The Hulk is a destroyer. The Hulk wakes up when he is angry. If the Hulk wakes up, then he will break a bridge. Thor is a god. Thor will break a bridge when he is happy. A god is not a destroyer and a destroyer is not a god. Peter Parker wears a uniform when he is a superhero. Peter Parker is not a civilian if and only if a destroyer is breaking a bridge. If Thor is happy, the Hulk is angry.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Thor is not happy, then no bridge will be broken.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSuperhero(x) ::: x is a superhero.\nCivilian(x) ::: x is a civilian.\nDestroyer(x) ::: x is a destroyer.\nAngry(x) ::: x is angry.\nHappy(x) ::: x is happy.\nWakeUp(x) ::: x wakes up.\nBreak(x, y) ::: x breaks y.\nUniform(x) ::: x wears a uniform.\nGod(x) ::: x is a god.\nPremises:\nSuperhero(peter) ∨ Civilian(peter) ::: Peter Parker is a either a superhero or a civilian.\nDestroyer(hulk) ::: The Hulk is a destroyer.\nAngry(hulk) → WakeUp(hulk) ::: The Hulk wakes up when he is angry.\nThor(thor) ::: Thor is a god.\nHappy(thor) → Break(thor, bridge) ::: Thor will break a bridge when he is happy.\n¬(God(x) ∧ Destroyer(x)) ::: A god is not a destroyer and a destroyer is not a god.\nUniform(peter) ∧ Superhero(peter) ::: Peter Parker wears a uniform when he is a superhero.\nCivilian(peter) ∧ ¬Superhero(peter) ↔ Destroyer(destroyer) ∧ Break(destroyer, bridge) ::: Peter Parker is not a civilian if and only if a destroyer is breaking a bridge.\nHappy(thor) → Angry(hulk) ::: If Thor is happy, the Hulk is angry.\nConclusion:\n¬(Happy(thor) → ¬Break(thor, bridge)) ::: If Thor is not happy, then no bridge will be broken.\n------\nProblem:\nA person is a student if and only if he or"
    ]
  },
  {
    "id": "FOLIO_train_622",
    "context": "Diethylcarbamazine is a medication discovered in the year 1947. Diethylcarbamazine can be used to treat river blindness. The only preferred treatment for river blindness is ivermectin. Diethylcarbamazine is not ivermectin.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Diethylcarbamazine is not preferred for the treatment of river blindness.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDiscovered(x, y) ::: x was discovered in year y.\nTreat(x, y) ::: x can be used to treat y.\nPreferred(x, y) ::: x is preferred for the treatment of y.\nIvermectin(x) ::: x is ivermectin.\nDiethylcarbamazine(x) ::: x is diethylcarbamazine.\nPremises:\nDiscovered(diethylcarbamazine, year1947) ::: Diethylcarbamazine is a medication discovered in the year 1947.\nTreat(diethylcarbamazine, riverBlindness) ::: Diethylcarbamazine can be used to treat river blindness.\nPreferred(ivermectin, riverBlindness) ::: The only preferred treatment for river blindness is ivermectin.\nIvermectin(ivermectin) ::: Ivermectin is ivermectin.\nDiethylcarbamazine(diethylcarbamazine) ::: Diethylcarbamazine is diethylcarbamazine.\nConclusion:\n¬Preferred(diethylcarbamazine, riverBlindness) ::: Diethylcarbamazine is not preferred for the treatment of river blindness.\n------\nProblem:\nThe only preferred treatment for river blindness is ivermectin. Ivermectin is not diethylcarbamazine. Diethylcarbamazine is a medication discovered in the year 1947. Diethylcarbamazine can be used to treat river blindness.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Diethylcarbamazine is not preferred for the treatment of river blindness.\n###\nPredicates:\nDiscovered(x, y) ::: x was discovered in year y.\nTreat(x, y) ::: x"
    ]
  },
  {
    "id": "FOLIO_train_623",
    "context": "Diethylcarbamazine is a medication discovered in the year 1947. Diethylcarbamazine can be used to treat river blindness. The only preferred treatment for river blindness is ivermectin. Diethylcarbamazine is not ivermectin.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Diethylcarbamazine was often used to treat river blindness.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDiscovered(x, y) ::: x was discovered in year y.\nTreat(x, y) ::: x can be used to treat y.\nPreferred(x, y) ::: x is the preferred treatment for y.\nIvermectin(x) ::: x is ivermectin.\nDiethylcarbamazine(x) ::: x is diethylcarbamazine.\nPremises:\nDiscovered(diethylcarbamazine, year1947) ::: Diethylcarbamazine was discovered in the year 1947.\nTreat(diethylcarbamazine, riverBlindness) ::: Diethylcarbamazine can be used to treat river blindness.\nPreferred(ivermectin, riverBlindness) ::: The only preferred treatment for river blindness is ivermectin.\nIvermectin(ivermectin) ::: Ivermectin is ivermectin.\nDiethylcarbamazine(diethylcarbamazine) ::: Diethylcarbamazine is diethylcarbamazine.\n∀x (Treat(x, riverBlindness) → ¬Ivermectin(x)) ::: Diethylcarbamazine is not ivermectin.\nConclusion:\nTreat(diethylcarbamazine, riverBlindness) ::: Diethylcarbamazine was often used to treat river blindness.\n------\nProblem:\nThe first person to win the Nobel Prize in Physics was Wilhelm Conrad Röntgen. The first person to win the Nobel Prize in Chemistry was Jacobus Henricus van 't Hoff. The first person to win the Nobel Prize in Physiology or Medicine was Ivan Petrovich Pavlov. The first person to win the Nobel Prize in Literature was Sully Prudhomme. The first person to win the Nobel Peace Prize was Frédéric"
    ]
  },
  {
    "id": "FOLIO_train_624",
    "context": "Diethylcarbamazine is a medication discovered in the year 1947. Diethylcarbamazine can be used to treat river blindness. The only preferred treatment for river blindness is ivermectin. Diethylcarbamazine is not ivermectin.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Diethylcarbamazine is used in the treatment of filariasis.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDiscovered(x, y) ::: x was discovered in year y.\nTreat(x, y) ::: x is used in the treatment of y.\nPreferred(x, y) ::: x is the preferred treatment for y.\nIvermectin(x) ::: x is ivermectin.\nDiethylcarbamazine(x) ::: x is diethylcarbamazine.\nRiverBlindness(x) ::: x is river blindness.\nFilariasis(x) ::: x is filariasis.\nPremises:\nDiscovered(diethylcarbamazine, year1947) ::: Diethylcarbamazine is a medication discovered in the year 1947.\nTreat(diethylcarbamazine, riverblindness) ::: Diethylcarbamazine can be used to treat river blindness.\nPreferred(ivermectin, riverblindness) ::: The only preferred treatment for river blindness is ivermectin.\n¬Ivermectin(diethylcarbamazine) ::: Diethylcarbamazine is not ivermectin.\nConclusion:\nTreat(diethylcarbamazine, filariasis) ::: Diethylcarbamazine is used in the treatment of filariasis.\n------\nProblem:\nThe only preferred treatment for river blindness is ivermectin. Diethylcarbamazine is a medication discovered in the year 1947. Diethylcarbamazine can be used to treat river blindness. Diethylcarbamazine is not ivermectin.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Diethylcarbamazine is used in the treatment of filariasis.\n###\nPredicates:\nDiscovered(x, y) ::: x was discovered in year y.\nTreat(x, y) ::: x"
    ]
  },
  {
    "id": "FOLIO_train_625",
    "context": "All univariate analyses use a generalized linear model. All multivoxel (pattern) analyses are implementing machine learning algorithms. All implementing machine learning algorithms are to learn and classify multivariate data. The Latent Dirichlet allocation model uses a generalized linear model or a univariate analysis. If the Latent Dirichlet allocation model does not learn and classify multivariate data, then the Latent Dirichlet allocation model uses a generalized linear model and a multivoxel (pattern) analysis.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Latent Dirichlet allocation model is implementing machine learning algorithms.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nUnivariate(x) ::: x is a univariate analysis.\nMultivoxel(x) ::: x is a multivoxel (pattern) analysis.\nGeneralizedLinearModel(x) ::: x is a generalized linear model.\nMachineLearningAlgorithm(x) ::: x is a machine learning algorithm.\nLearn(x, y) ::: x learns y.\nClassify(x, y) ::: x classifies y.\nPremises:\n∀x (Univariate(x) → GeneralizedLinearModel(x)) ::: All univariate analyses use a generalized linear model.\n∀x (Multivoxel(x) → MachineLearningAlgorithm(x)) ::: All multivoxel (pattern) analyses are implementing machine learning algorithms.\n∀x (MachineLearningAlgorithm(x) → ∃y (Learn(x, y) ∧ Classify(x, y))) ::: All implementing machine learning algorithms are to learn and classify multivariate data.\nMultivoxel(latentDirichletAllocationModel) ∧ GeneralizedLinearModel(latentDirichletAllocationModel) ::: The Latent Dirichlet allocation model uses a generalized linear model or a univariate analysis.\n¬(∃y (Learn(latentDirichletAllocationModel, y) ∧ Classify(latentDirichletAllocationModel, y))) → (GeneralizedLinearModel(latentDirichletAllocationModel) ∧ Multivoxel(latentDirichletAllocationModel)) ::: If the Latent Dirichlet allocation model does not learn and classify multivariate data, then the Latent Dirichlet allocation model uses a generalized linear model and a multivoxel (pattern) analysis.\nConclusion:\nMachineLearningAlgorithm(latentDirichletAllocationModel) ::: Latent Dirich"
    ]
  },
  {
    "id": "FOLIO_train_626",
    "context": "All univariate analyses use a generalized linear model. All multivoxel (pattern) analyses are implementing machine learning algorithms. All implementing machine learning algorithms are to learn and classify multivariate data. The Latent Dirichlet allocation model uses a generalized linear model or a univariate analysis. If the Latent Dirichlet allocation model does not learn and classify multivariate data, then the Latent Dirichlet allocation model uses a generalized linear model and a multivoxel (pattern) analysis.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Latent Dirichlet allocation model uses a generalized linear model and learns and classifies multivariate data.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nUnivariate(x) ::: x is a univariate analysis.\nMultivoxel(x) ::: x is a multivoxel (pattern) analysis.\nGeneralizedLinearModel(x) ::: x is a generalized linear model.\nImplementingMachineLearningAlgorithm(x) ::: x is implementing machine learning algorithms.\nLearn(x) ::: x learns.\nClassify(x) ::: x classifies.\nMultivariate(x) ::: x is multivariate data.\nPremises:\n∀x (Univariate(x) → GeneralizedLinearModel(x)) ::: All univariate analyses use a generalized linear model.\n∀x (Multivoxel(x) → ImplementingMachineLearningAlgorithm(x)) ::: All multivoxel (pattern) analyses are implementing machine learning algorithms.\n∀x (ImplementingMachineLearningAlgorithm(x) → ∃y (Multivariate(y) ∧ Learn(x, y) ∧ Classify(x, y))) ::: All implementing machine learning algorithms are to learn and classify multivariate data.\nGeneralizedLinearModel(latentDirichletAllocationModel) ∨ Univariate(latentDirichletAllocationModel) ::: The Latent Dirichlet allocation model uses a generalized linear model or a univariate analysis.\n¬(Learn(latentDirichletAllocationModel) ∧ Classify(latentDirichletAllocationModel)) → (GeneralizedLinearModel(latentDirichletAllocationModel) ∧ Multivoxel(latentDirichletAllocationModel)) ::: If the Latent Dirichlet allocation model does not learn and classify multivariate data, then the Latent Dirichlet allocation model uses a generalized linear model and a multivoxel (pattern) analysis.\nConclusion:\nLearn"
    ]
  },
  {
    "id": "FOLIO_train_627",
    "context": "All univariate analyses use a generalized linear model. All multivoxel (pattern) analyses are implementing machine learning algorithms. All implementing machine learning algorithms are to learn and classify multivariate data. The Latent Dirichlet allocation model uses a generalized linear model or a univariate analysis. If the Latent Dirichlet allocation model does not learn and classify multivariate data, then the Latent Dirichlet allocation model uses a generalized linear model and a multivoxel (pattern) analysis.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Latent Dirichlet allocation model either uses a generalized linear model or learns and classifies multivariate data.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nUnivariate(x) ::: x is a univariate analysis.\nMultivoxel(x) ::: x is a multivoxel (pattern) analysis.\nGeneralizedLinearModel(x) ::: x is a generalized linear model.\nImplementingMachineLearningAlgorithm(x) ::: x is implementing a machine learning algorithm.\nLearn(x) ::: x learns.\nClassify(x) ::: x classifies.\nMultivariate(x) ::: x is multivariate data.\nPremises:\n∀x (Univariate(x) → GeneralizedLinearModel(x)) ::: All univariate analyses use a generalized linear model.\n∀x (Multivoxel(x) → ImplementingMachineLearningAlgorithm(x)) ::: All multivoxel (pattern) analyses are implementing machine learning algorithms.\n∀x (ImplementingMachineLearningAlgorithm(x) → ∃y (Learn(x, y) ∧ Classify(x, y))) ::: All implementing machine learning algorithms are to learn and classify multivariate data.\nGeneralizedLinearModel(latentDirichletAllocationModel) ∨ Univariate(latentDirichletAllocationModel) ::: The Latent Dirichlet allocation model uses a generalized linear model or a univariate analysis.\n¬(Learn(latentDirichletAllocationModel) ∧ Classify(latentDirichletAllocationModel)) → (GeneralizedLinearModel(latentDirichletAllocationModel) ∧ Multivoxel(latentDirichletAllocationModel)) ::: If the Latent Dirichlet allocation model does not learn and classify multivariate data, then the Latent Dirichlet allocation model uses a generalized linear model and a multivoxel (pattern) analysis.\nConclusion:\nGeneralizedLinearModel(latentDirichletAll"
    ]
  },
  {
    "id": "FOLIO_train_628",
    "context": "If something requires a medical diagnosis, then lab tests or imaging is required. All rare diseases require a medical diagnosis. If something is mild, then no lab tests or imaging is required. All blood cancers are rare diseases. All Leukemia is blood cancer. If bladder cancer is either both blood cancer and Leukemia or neither blood cancer nor Leukemia, then bladder cancer is Leukemia.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Bladder cancer is mild.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRequires(x, y) ::: x requires y.\nMedicalDiagnosis(x) ::: x requires a medical diagnosis.\nLabTests(x) ::: x requires lab tests.\nImaging(x) ::: x requires imaging.\nMild(x) ::: x is mild.\nRare(x) ::: x is a rare disease.\nBloodCancer(x) ::: x is blood cancer.\nLeukemia(x) ::: x is Leukemia.\nPremises:\n∀x (MedicalDiagnosis(x) → (LabTests(x) ∨ Imaging(x))) ::: If something requires a medical diagnosis, then lab tests or imaging is required.\n∀x (Rare(x) → MedicalDiagnosis(x)) ::: All rare diseases require a medical diagnosis.\n∀x (Mild(x) → ¬(LabTests(x) ∨ Imaging(x))) ::: If something is mild, then no lab tests or imaging is required.\n∀x (BloodCancer(x) → Rare(x)) ::: All blood cancers are rare diseases.\n∀x (Leukemia(x) → BloodCancer(x)) ::: All Leukemia is blood cancer.\nBladderCancer(bladder) ⊕ (BloodCancer(bladder) ∧ Leukemia(bladder)) ::: If bladder cancer is either both blood cancer and Leukemia or neither blood cancer nor Leukemia, then bladder cancer is Leukemia.\nConclusion:\nMild(bladder) ::: Bladder cancer is mild.\n------\nProblem:\nIf something is a type of cancer, then it is a disease. All diseases are either contagious or non-contagious. If something is contagious, then it is a virus. All viruses are either"
    ]
  },
  {
    "id": "FOLIO_train_629",
    "context": "If something requires a medical diagnosis, then lab tests or imaging is required. All rare diseases require a medical diagnosis. If something is mild, then no lab tests or imaging is required. All blood cancers are rare diseases. All Leukemia is blood cancer. If bladder cancer is either both blood cancer and Leukemia or neither blood cancer nor Leukemia, then bladder cancer is Leukemia.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Bladder cancer is Leukemia.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRequires(x, y) ::: x requires y.\nMedicalDiagnosis(x) ::: x requires a medical diagnosis.\nLabTests(x) ::: x requires lab tests.\nImaging(x) ::: x requires imaging.\nRare(x) ::: x is a rare disease.\nMild(x) ::: x is mild.\nBloodCancer(x) ::: x is blood cancer.\nLeukemia(x) ::: x is Leukemia.\nPremises:\n∀x (MedicalDiagnosis(x) → (LabTests(x) ∨ Imaging(x))) ::: If something requires a medical diagnosis, then lab tests or imaging is required.\n∀x (Rare(x) → MedicalDiagnosis(x)) ::: All rare diseases require a medical diagnosis.\n∀x (Mild(x) → ¬(LabTests(x) ∨ Imaging(x))) ::: If something is mild, then no lab tests or imaging is required.\nBloodCancer(bladderCancer) ∧ BloodCancer(leukemia) ::: All blood cancers are rare diseases.\nLeukemia(leukemia) ::: All Leukemia is blood cancer.\n(BladderCancer(bladderCancer) ∧ Leukemia(bladderCancer)) ∨ ¬(BloodCancer(bladderCancer) ∧ Leukemia(bladderCancer)) ::: If bladder cancer is either both blood cancer and Leukemia or neither blood cancer nor Leukemia, then bladder cancer is Leukemia.\nConclusion:\nLeukemia(bladderCancer) ::: Bladder cancer is Leukemia.\n------\nProblem:\nIf something is a type of fruit, then it is a type of food. All types"
    ]
  },
  {
    "id": "FOLIO_train_630",
    "context": "If something requires a medical diagnosis, then lab tests or imaging is required. All rare diseases require a medical diagnosis. If something is mild, then no lab tests or imaging is required. All blood cancers are rare diseases. All Leukemia is blood cancer. If bladder cancer is either both blood cancer and Leukemia or neither blood cancer nor Leukemia, then bladder cancer is Leukemia.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Bladder cancer is either a rare disease or mild.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRequires(x, y) ::: x requires y.\nMedicalDiagnosis(x) ::: x requires a medical diagnosis.\nLabTests(x) ::: x requires lab tests.\nImaging(x) ::: x requires imaging.\nRare(x) ::: x is a rare disease.\nMild(x) ::: x is mild.\nBloodCancer(x) ::: x is blood cancer.\nLeukemia(x) ::: x is Leukemia.\nPremises:\n∀x (MedicalDiagnosis(x) → (LabTests(x) ∨ Imaging(x))) ::: If something requires a medical diagnosis, then lab tests or imaging is required.\n∀x (Rare(x) → MedicalDiagnosis(x)) ::: All rare diseases require a medical diagnosis.\n∀x (Mild(x) → ¬(LabTests(x) ∨ Imaging(x))) ::: If something is mild, then no lab tests or imaging is required.\nBloodCancer(bladderCancer) ∧ BloodCancer(leukemia) ::: All blood cancers are rare diseases.\nLeukemia(leukemia) ::: All Leukemia is blood cancer.\n(BladderCancer(bladderCancer) ∧ Leukemia(bladderCancer)) ∨ ¬(BloodCancer(bladderCancer) ∧ Leukemia(bladderCancer)) ::: If bladder cancer is either both blood cancer and Leukemia or neither blood cancer nor Leukemia, then bladder cancer is Leukemia.\nConclusion:\nRare(bladderCancer) ∨ Mild(bladderCancer) ::: Bladder cancer is either a rare disease or mild.\n------"
    ]
  },
  {
    "id": "FOLIO_train_631",
    "context": "No precious metals aren't scarce. All non-rare earth metals are not scarce. Either non-rare earth metals or rare earth metals. All rare earth metals can be used for batteries. All rare earth metals are essential for electric vehicles. Lithium is neither a non-rare earth metal nor essential for electric vehicles.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Lithium is a rare earth metal.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPreciousMetal(x) ::: x is a precious metal.\nNonRareEarthMetal(x) ::: x is a non-rare earth metal.\nRareEarthMetal(x) ::: x is a rare earth metal.\nScarce(x) ::: x is scarce.\nCanBeUsedForBatteries(x) ::: x can be used for batteries.\nEssentialForElectricVehicles(x) ::: x is essential for electric vehicles.\nPremises:\n¬∀x (PreciousMetal(x) → Scarce(x)) ::: No precious metals aren't scarce.\n∀x (NonRareEarthMetal(x) → ¬Scarce(x)) ::: All non-rare earth metals are not scarce.\n∃x (NonRareEarthMetal(x) ∨ RareEarthMetal(x)) ::: Either non-rare earth metals or rare earth metals.\n∀x (RareEarthMetal(x) → CanBeUsedForBatteries(x)) ::: All rare earth metals can be used for batteries.\n∀x (RareEarthMetal(x) → EssentialForElectricVehicles(x)) ::: All rare earth metals are essential for electric vehicles.\nLithium ∧ ¬(NonRareEarthMetal(lithium) ∨ EssentialForElectricVehicles(lithium)) ::: Lithium is neither a non-rare earth metal nor essential for electric vehicles.\nConclusion:\nRareEarthMetal(lithium) ::: Lithium is a rare earth metal.\n------\nProblem:\nAll people who are not students are either working or retired. All people who are not working are either retired or unemployed. All people who are not retired are"
    ]
  },
  {
    "id": "FOLIO_train_632",
    "context": "No precious metals aren't scarce. All non-rare earth metals are not scarce. Either non-rare earth metals or rare earth metals. All rare earth metals can be used for batteries. All rare earth metals are essential for electric vehicles. Lithium is neither a non-rare earth metal nor essential for electric vehicles.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Lithium is a precious metal and is used for batteries.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPreciousMetal(x) ::: x is a precious metal.\nNonRareEarthMetal(x) ::: x is a non-rare earth metal.\nRareEarthMetal(x) ::: x is a rare earth metal.\nScarce(x) ::: x is scarce.\nCanBeUsedFor(x, y) ::: x can be used for y.\nEssentialFor(x, y) ::: x is essential for y.\nPremises:\n¬∀x (PreciousMetal(x) → Scarce(x)) ::: No precious metals aren't scarce.\n∀x (¬RareEarthMetal(x) → ¬Scarce(x)) ::: All non-rare earth metals are not scarce.\n∃x (NonRareEarthMetal(x) ∨ RareEarthMetal(x)) ::: Either non-rare earth metals or rare earth metals.\n∀x (RareEarthMetal(x) → CanBeUsedFor(x, batteries)) ::: All rare earth metals can be used for batteries.\n∀x (RareEarthMetal(x) → EssentialFor(x, electricVehicles)) ::: All rare earth metals are essential for electric vehicles.\nLithium ∧ ¬(NonRareEarthMetal(lithium) ∨ EssentialFor(lithium, electricVehicles)) ::: Lithium is neither a non-rare earth metal nor essential for electric vehicles.\nConclusion:\nPreciousMetal(lithium) ∧ CanBeUsedFor(lithium, batteries) ::: Lithium is a precious metal and is used for batteries.\n------\nProblem:\nAll people who are not students are either employed or unemployed. All people who are employed are either employed full-"
    ]
  },
  {
    "id": "FOLIO_train_633",
    "context": "No precious metals aren't scarce. All non-rare earth metals are not scarce. Either non-rare earth metals or rare earth metals. All rare earth metals can be used for batteries. All rare earth metals are essential for electric vehicles. Lithium is neither a non-rare earth metal nor essential for electric vehicles.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Lithium is not essential for electric vehicles or a precious metal, then Lithium is not a non-rare earth metal or usable for batteries.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPreciousMetal(x) ::: x is a precious metal.\nNonRareEarthMetal(x) ::: x is a non-rare earth metal.\nRareEarthMetal(x) ::: x is a rare earth metal.\nScarce(x) ::: x is scarce.\nUsableForBatteries(x) ::: x is usable for batteries.\nEssentialForElectricVehicles(x) ::: x is essential for electric vehicles.\nPremises:\n¬∀x (PreciousMetal(x) → Scarce(x)) ::: No precious metals aren't scarce.\n∀x (¬RareEarthMetal(x) → ¬Scarce(x)) ::: All non-rare earth metals are not scarce.\n∃x (NonRareEarthMetal(x) ∨ RareEarthMetal(x)) ::: Either non-rare earth metals or rare earth metals.\n∀x (RareEarthMetal(x) → UsableForBatteries(x)) ::: All rare earth metals can be used for batteries.\n∀x (RareEarthMetal(x) → EssentialForElectricVehicles(x)) ::: All rare earth metals are essential for electric vehicles.\nLithium ∧ ¬(NonRareEarthMetal(lithium) ∧ EssentialForElectricVehicles(lithium)) ::: Lithium is neither a non-rare earth metal nor essential for electric vehicles.\nConclusion:\n(¬(Lithium ∧ EssentialForElectricVehicles(lithium)) ∧ ¬PreciousMetal(lithium)) → (¬(Lithium ∧ NonRareEarthMetal(lithium))"
    ]
  },
  {
    "id": "FOLIO_train_634",
    "context": "If people own at least one pet, then they do not have tidy houses. If people grew up with childhood pets, then they own at least one pet. If people hire a maid or cleaning service, then they have tidy houses. If people live in the suburbs, then they have tidy houses. Jack either does not hire a maid or cleaning service or, if he does, then he does not own at least one pet.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jack lives in the suburbs.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nOwn(x, y) ::: x owns y.\nPet(x) ::: x is a pet.\nHave(x, y) ::: x has y.\nTidy(x) ::: x is tidy.\nGrewUp(x, y) ::: x grew up with y.\nLive(x, y) ::: x lives in y.\nHire(x, y) ::: x hires y.\nPremises:\n∀x (Own(x, pet) → ¬Tidy(x)) ::: If people own at least one pet, then they do not have tidy houses.\n∀x (GrewUp(x, childhoodPet) → Own(x, pet)) ::: If people grew up with childhood pets, then they own at least one pet.\n∀x (Hire(x, maid) ∨ Hire(x, cleaningService) → Tidy(x)) ::: If people hire a maid or cleaning service, then they have tidy houses.\n∀x (Live(x, suburbs) → Tidy(x)) ::: If people live in the suburbs, then they have tidy houses.\nJack ⊕ Hire(jack, maid) ∧ Hire(jack, cleaningService) ::: Jack either does not hire a maid or cleaning service or, if he does, then he does not own at least one pet.\nConclusion:\nLive(jack, suburbs) ::: Jack lives in the suburbs.\n------\nProblem:\nIf people are not married, then they are single. If people are not single, then they are married. If people are married, then they are not single. If people are single, then they are not married. If people are married, then they are not single. If people are single, then they are not married. If people are married, then they are not single. If people are single, then they are not married. If people are married, then they are not single."
    ]
  },
  {
    "id": "FOLIO_train_635",
    "context": "If people own at least one pet, then they do not have tidy houses. If people grew up with childhood pets, then they own at least one pet. If people hire a maid or cleaning service, then they have tidy houses. If people live in the suburbs, then they have tidy houses. Jack either does not hire a maid or cleaning service or, if he does, then he does not own at least one pet.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jack does not live in the suburbs.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nOwn(x, y) ::: x owns y.\nPet(x) ::: x is a pet.\nHave(x, y) ::: x has y.\nTidy(x) ::: x is tidy.\nGrewUp(x, y) ::: x grew up with y.\nLive(x, y) ::: x lives in y.\nSuburb(x) ::: x is a suburb.\nHire(x, y) ::: x hires y.\nPremises:\n∀x (Own(x, pet) → ¬Tidy(x)) ::: If people own at least one pet, then they do not have tidy houses.\n∀x (GrewUp(x, childhoodPet) → Own(x, pet)) ::: If people grew up with childhood pets, then they own at least one pet.\n∀x (Hire(x, maid) ∨ Hire(x, cleaningService) → Tidy(x)) ::: If people hire a maid or cleaning service, then they have tidy houses.\n∀x (Live(x, suburb) → Tidy(x)) ::: If people live in the suburbs, then they have tidy houses.\nJack ⊕ Hire(jack, maid) ∧ Hire(jack, cleaningService) ::: Jack either does not hire a maid or cleaning service or, if he does, then he does not own at least one pet.\nConclusion:\n¬Live(jack, suburb) ::: Jack does not live in the suburbs.\n------\nProblem:\nIf people are not married, then they are single. If people are not single, then they are married. If people are married, then they are not single. If people are single, then they are not married. If people are married, then they are not single. If people are single, then they are not married. If people are married, then they are not single. If people are single,"
    ]
  },
  {
    "id": "FOLIO_train_636",
    "context": "If people own at least one pet, then they do not have tidy houses. If people grew up with childhood pets, then they own at least one pet. If people hire a maid or cleaning service, then they have tidy houses. If people live in the suburbs, then they have tidy houses. Jack either does not hire a maid or cleaning service or, if he does, then he does not own at least one pet.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jack has a tidy house.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nOwn(x, y) ::: x owns y.\nHave(x, y) ::: x has y.\nTidy(x) ::: x has a tidy house.\nLive(x, y) ::: x lives in y.\nSuburb(x) ::: x is a suburb.\nPet(x) ::: x is a pet.\nChildhoodPet(x) ::: x grew up with childhood pets.\nPremises:\n∀x (Own(x, pet) → ¬Tidy(x)) ::: If people own at least one pet, then they do not have tidy houses.\n∀x (ChildhoodPet(x) → Own(x, pet)) ::: If people grew up with childhood pets, then they own at least one pet.\n∀x (Hire(x) → Tidy(x)) ::: If people hire a maid or cleaning service, then they have tidy houses.\n∀x (Live(x, suburb) → Tidy(x)) ::: If people live in the suburbs, then they have tidy houses.\nJack ⊕ Hire(jack) ::: Jack either does not hire a maid or cleaning service or, if he does, then he does not own at least one pet.\nConclusion:\nTidy(jack) ::: Jack has a tidy house.\n------\nProblem:\nIf people are not married, then they are single. If people are not single, then they are married. If people are married, then they are not single. If people are single, then they are not married. If people are married, then they are not single. If people are single, then they are not married. If people are married, then they are not single. If people are single, then they are not married. If people are married, then they are not single. If people are single, then they are not married. If people are married, then they are not single. If people are single, then they are not married."
    ]
  },
  {
    "id": "FOLIO_train_637",
    "context": "If people own at least one pet, then they do not have tidy houses. If people grew up with childhood pets, then they own at least one pet. If people hire a maid or cleaning service, then they have tidy houses. If people live in the suburbs, then they have tidy houses. Jack either does not hire a maid or cleaning service or, if he does, then he does not own at least one pet.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jack neither lives in the suburbs nor owns at least one pet.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nOwn(x, y) ::: x owns y.\nPet(x) ::: x is a pet.\nHave(x, y) ::: x has y.\nTidy(x) ::: x is tidy.\nGrewUp(x, y) ::: x grew up with y.\nLive(x, y) ::: x lives in y.\nSuburb(x) ::: x is a suburb.\nHire(x, y) ::: x hires y.\nPremises:\n∀x (Own(x, pet) → ¬Tidy(x)) ::: If people own at least one pet, then they do not have tidy houses.\n∀x (GrewUp(x, childhoodPet) → Own(x, pet)) ::: If people grew up with childhood pets, then they own at least one pet.\n∀x (Hire(x, maid) ∨ Hire(x, cleaningService) → Tidy(x)) ::: If people hire a maid or cleaning service, then they have tidy houses.\n∀x (Live(x, suburb) → Tidy(x)) ::: If people live in the suburbs, then they have tidy houses.\n∀x (Own(x, pet) → ¬Hire(x, maid)) ∨ (Hire(x, maid) → ¬Own(x, pet)) ::: Jack either does not hire a maid or cleaning service or, if he does, then he does not own at least one pet.\nConclusion:\n¬(Live(jack, suburb) ∧ Own(jack, pet)) ::: Jack neither lives in the suburbs nor owns at least one pet.\n------\nProblem:\nIf people are not married, then they are single. If people are not single, then they are married. If people are married, then they are not single. If people are single, then they are not married. If people are married"
    ]
  },
  {
    "id": "FOLIO_train_638",
    "context": "If people own at least one pet, then they do not have tidy houses. If people grew up with childhood pets, then they own at least one pet. If people hire a maid or cleaning service, then they have tidy houses. If people live in the suburbs, then they have tidy houses. Jack either does not hire a maid or cleaning service or, if he does, then he does not own at least one pet.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jack grew up with childhood pets and lives in the suburbs.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nOwn(x, y) ::: x owns y.\nHave(x, y) ::: x has y.\nTidy(x) ::: x has a tidy house.\nLive(x, y) ::: x lives in y.\nSuburb(x) ::: x is a suburb.\nPet(x) ::: x is a pet.\nChildhood(x) ::: x is a childhood.\nPremises:\n∀x (Own(x, pet) → ¬Tidy(x)) ::: If people own at least one pet, then they do not have tidy houses.\n∀x (GrewUpWith(x, childhoodPet) → Own(x, pet)) ::: If people grew up with childhood pets, then they own at least one pet.\n∀x (Hire(x, maid) ∨ Hire(x, cleaningService)) → Tidy(x) ::: If people hire a maid or cleaning service, then they have tidy houses.\n∀x (Live(x, suburb) → Tidy(x)) ::: If people live in the suburbs, then they have tidy houses.\nJack ∧ (¬Hire(jack, maid) ∨ (Hire(jack, maid) ∧ ¬Own(jack, pet))) ::: Jack either does not hire a maid or cleaning service or, if he does, then he does not own at least one pet.\nConclusion:\nGrewUpWith(jack, childhoodPet) ∧ Live(jack, suburb) ::: Jack grew up with childhood pets and lives in the suburbs.\n------\nProblem:\nIf people are not married, then they are single. If people are not single, then they are married. If people are married, then they are not single. If people are single, then they are not married. If people are married, then they are not single. If people are single, then they are not married. If"
    ]
  },
  {
    "id": "FOLIO_train_639",
    "context": "A bottle is either standing upright or toppled over. The bottle is not upright.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The bottle is toppled over.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nUpright(x) ::: x is standing upright.\nToppledOver(x) ::: x is toppled over.\nPremises:\n¬Upright(bottle) ::: The bottle is not upright.\nConclusion:\nToppledOver(bottle) ::: The bottle is toppled over.\n------\nProblem:\nA person is either a student or a teacher. A student is either a graduate student or an undergraduate student. A graduate student is either a master's student or a doctoral student. A master's student is either a student in the department of computer science or a student in the department of mathematics. A doctoral student is either a student in the department of computer science or a student in the department of mathematics. A teacher is either a professor or an instructor. A professor is either a professor in the department of computer science or a professor in the department of mathematics. An instructor is either an instructor in the department of computer science or an instructor in the department of mathematics.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? A person is a student in the department of computer science.\nBased on the above information, is the following statement true, false, or uncertain? A person is a professor in the department of mathematics.\nBased on the above information, is the following statement true, false, or uncertain? A person is a student in the department of mathematics.\nBased on the above information, is the following statement true, false, or uncertain? A person is a professor in the department of computer science.\nBased on the above information, is the following statement true, false, or uncertain? A person is a student in the department of computer science or a professor in the department of mathematics.\nBased on the above information, is the following statement true, false, or uncertain? A person is a student in the department of computer science or a professor in the department of mathematics.\nBased on the above information, is the following statement true, false, or uncertain? A person is a"
    ]
  },
  {
    "id": "FOLIO_train_640",
    "context": "If people eat cereal and milk every day for breakfast, then they have very busy morning schedules every day. All young children below the age of ten eat cereal and milk every day for breakfast. People are either young children below the age of ten or have a lot of commitments they voluntarily signed up for. If people have a lot of commitments they voluntarily signed up for, then they are hardworking individuals with high ambitions and goals for the future. If people are hardworking individuals with high ambitions and goals for the future, then they are not good at staying organized and motivated. John either is both a hardworking individual with high ambitions and goals for the future and has busy morning schedules every day, or he is neither a hardworking individual with high ambitions and goals for the future nor does he have a busy morning schedule every day.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? John is good at staying organized and motivated.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEat(x, y, z) ::: x eats y for z.\nBusy(x) ::: x has a busy schedule.\nYoungChild(x) ::: x is a young child below the age of ten.\nCommitment(x) ::: x is a commitment.\nVoluntarilySignUp(x, y) ::: x voluntarily signed up for y.\nHardworking(x) ::: x is a hardworking individual.\nAmbition(x) ::: x has high ambitions.\nGoal(x) ::: x has a goal.\nFuture(x) ::: x is in the future.\nPremises:\n∀x (Eat(x, cereal, milk) ∧ Busy(x)) → Busy(x) ::: If people eat cereal and milk every day for breakfast, then they have very busy morning schedules every day.\n∀x (YoungChild(x) ∧ Eat(x, cereal, milk)) ::: All young children below the age of ten eat cereal and milk every day for breakfast.\n∀x (Eat(x, cereal, milk) ∧ Busy(x)) → Hardworking(x) ∧ Ambition(x) ∧ Goal(x) ∧ Future(x) ::: If people eat cereal and milk every day for breakfast, then they are hardworking individuals with high ambitions and goals for the future.\n∀x (Hardworking(x) ∧ Ambition(x) ∧ Goal(x) ∧ Future(x)) → ¬Organized(x) ∧ ¬Motivated(x) ::: If people are hardworking individuals with high ambitions and goals for the future, then they are not good at staying organized and motivated.\nJohn ∧ (Hardworking(john) ∧ Ambition(john) ∧ Goal(john) ∧ Future(john)) ∨ ¬(Hardworking(john) ∧ Ambition(john) ∧ Goal(john) ∧ Future(john)) ::: John either is both a hardworking individual with high ambitions and goals for the future and has busy morning schedules every day, or he is neither a hardworking individual with high ambitions and goals for the future nor does he have a busy morning schedule every day.\nConclusion:\nOrganized(john) ∧ Motivated(john) ::: John is good at staying organized and motivated.\n------"
    ]
  },
  {
    "id": "FOLIO_train_641",
    "context": "If people eat cereal and milk every day for breakfast, then they have very busy morning schedules every day. All young children below the age of ten eat cereal and milk every day for breakfast. People are either young children below the age of ten or have a lot of commitments they voluntarily signed up for. If people have a lot of commitments they voluntarily signed up for, then they are hardworking individuals with high ambitions and goals for the future. If people are hardworking individuals with high ambitions and goals for the future, then they are not good at staying organized and motivated. John either is both a hardworking individual with high ambitions and goals for the future and has busy morning schedules every day, or he is neither a hardworking individual with high ambitions and goals for the future nor does he have a busy morning schedule every day.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? John eats cereal and milk every day for breakfast.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEat(x, y, z) ::: x eats y for z.\nBusy(x) ::: x has a busy morning schedule every day.\nYoungChild(x) ::: x is a young child below the age of ten.\nCommitment(x) ::: x is a commitment.\nVoluntarilySignUp(x, y) ::: x voluntarily signed up for y.\nHardworking(x) ::: x is a hardworking individual.\nAmbition(x) ::: x has high ambitions.\nGoal(x) ::: x has a goal.\nFuture(x) ::: x is in the future.\nPremises:\n∀x (Eat(x, cereal, milk) ∧ Busy(x)) → (Eat(x, cereal, milk) ∧ Busy(x)) ∨ ¬(Eat(x, cereal, milk) ∧ Busy(x)) ::: If people eat cereal and milk every day for breakfast, then they have very busy morning schedules every day.\n∀x (YoungChild(x) ∧ Age(x, ten)) → Eat(x, cereal, milk) ::: All young children below the age of ten eat cereal and milk every day for breakfast.\n∀x (Eat(x, cereal, milk) ∧ Busy(x)) → Hardworking(x) ∧ Ambition(x) ∧ Goal(x) ∧ Future(x) ::: If people eat cereal and milk every day for breakfast and have a busy morning schedule every day, then they are hardworking individuals with high ambitions and goals for the future.\nHardworking(x) ∧ Ambition(x) ∧ Goal(x) ∧ Future(x) → ¬(Organized(x) ∧ Motivated(x)) ::: If people are hardworking individuals with high ambitions and goals for the future, then they are not good at staying organized and motivated.\nJohn ∧ (Hardworking(john) ∧ Ambition(john) ∧ Goal(john) ∧ Future(john)) ∨ ¬(Hardworking(john) ∧ Ambition(john) ∧ Goal(john) ∧ Future(john)) ::: John either is both a hardworking individual with high ambitions and goals for the future and has busy morning schedules every day, or he is neither a hardworking individual with high amb"
    ]
  },
  {
    "id": "FOLIO_train_642",
    "context": "If people eat cereal and milk every day for breakfast, then they have very busy morning schedules every day. All young children below the age of ten eat cereal and milk every day for breakfast. People are either young children below the age of ten or have a lot of commitments they voluntarily signed up for. If people have a lot of commitments they voluntarily signed up for, then they are hardworking individuals with high ambitions and goals for the future. If people are hardworking individuals with high ambitions and goals for the future, then they are not good at staying organized and motivated. John either is both a hardworking individual with high ambitions and goals for the future and has busy morning schedules every day, or he is neither a hardworking individual with high ambitions and goals for the future nor does he have a busy morning schedule every day.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? John is either a hardworking individual with high ambitions and goals for the future or is good at staying organized and motivated.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEat(x, y, z) ::: x eats y for z.\nBusy(x) ::: x has a busy schedule.\nYoung(x) ::: x is a young child.\nAge(x, y) ::: x is y years old.\nCommitment(x) ::: x is a commitment.\nVoluntarily(x) ::: x is a commitment that x voluntarily signed up for.\nHardworking(x) ::: x is a hardworking individual.\nAmbition(x) ::: x is an individual with high ambitions.\nGoal(x) ::: x is an individual with high goals.\nFuture(x) ::: x is a future.\nStay(x) ::: x is good at staying organized.\nMotivated(x) ::: x is good at staying motivated.\nPremises:\n∀x (Eat(x, cereal, milk) ∧ Busy(x)) → Busy(x) ::: If people eat cereal and milk every day for breakfast, then they have very busy morning schedules every day.\n∀x (Young(x) ∧ Age(x, 10)) → Eat(x, cereal, milk) ::: All young children below the age of ten eat cereal and milk every day for breakfast.\n∀x (Eat(x, cereal, milk) ∧ Busy(x)) → Hardworking(x) ∧ Ambition(x) ∧ Goal(x) ∧ Future(x) ::: People are either young children below the age of ten or have a lot of commitments they voluntarily signed up for.\n∀x (Hardworking(x) ∧ Ambition(x) ∧ Goal(x) ∧ Future(x)) → ¬Stay(x) ∧ ¬Motivated(x) ::: If people are hardworking individuals with high ambitions and goals for the future, then they are not good at staying organized and motivated.\nJohn ∧ (Hardworking(john) ∧ Ambition(john) ∧ Goal(john) ∧ Future(john)) ∨ ¬(Hardworking(john) ∧ Ambition(john) ∧ Goal(john) ∧ Future(john)) ::: John either is both a hardworking individual with high ambitions and goals for the future and has busy morning schedules every day, or he is neither a hardworking individual with high ambitions"
    ]
  },
  {
    "id": "FOLIO_train_643",
    "context": "Ableton has an office in Germany. Ableton has an office in the USA. USA and Germany are different countries. Any company that has offices in different countries is a multinational company. Ableton makes music software.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Ableton is a multinational company.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nOffice(x, y) ::: x has an office in country y.\nCountry(x) ::: x is a country.\nMultinational(x) ::: x is a multinational company.\nMake(x, y) ::: x makes y.\nPremises:\nOffice(Ableton, Germany) ∧ Office(Ableton, USA) ∧ Country(Germany) ∧ Country(USA) ∧ ¬(Germany = USA) ::: Ableton has an office in Germany. Ableton has an office in the USA. USA and Germany are different countries.\n∀x ∀y ∀z (Office(x, y) ∧ Office(x, z) ∧ Country(y) ∧ Country(z) ∧ ¬(y = z)) → Multinational(x) ::: Any company that has offices in different countries is a multinational company.\nMake(Ableton, musicSoftware) ::: Ableton makes music software.\nConclusion:\nMultinational(Ableton) ::: Ableton is a multinational company.\n------\nProblem:\nA person who is a student is a young person. A young person is a person who is under 25 years old. A person who is a student is a person who is under 25 years old.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? A person who is a student is a young person.\n###\nPredicates:\nStudent(x) ::: x is a student.\nYoungPerson(x) ::: x is a young person.\nUnder25(x) ::: x is a person who is under 25 years old.\nPremises:\nStudent(x) → YoungPerson(x) ::: A person who is a student is a young person.\nYoungPerson(x) ∧ Under25(x) ::: A young person is a person who is under 25 years old.\nStudent(x) ∧ Under25(x) ::: A person who is a student is a person who is under 25 years old.\nConclusion:\nStudent(x) → YoungPerson(x) ::: A person who is a student is a young person.\n------\nProblem:\nA person who is a student is a young person. A young person is a person who is under 25 years old. A person who is a student is a person who is under 25 years old.\nQuestion:\nBased on the above information, is the following statement true, false"
    ]
  },
  {
    "id": "FOLIO_train_644",
    "context": "Ableton has an office in Germany. Ableton has an office in the USA. USA and Germany are different countries. Any company that has offices in different countries is a multinational company. Ableton makes music software.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Ableton makes AI software.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nOffice(x, y) ::: x has an office in country y.\nCountry(x) ::: x is a country.\nDifferent(x, y) ::: x and y are different.\nMake(x, y) ::: x makes y.\nMultinational(x) ::: x is a multinational company.\nMusicSoftware(x) ::: x is music software.\nAI(x) ::: x is AI software.\nPremises:\nOffice(Ableton, Germany) ∧ Office(Ableton, USA) ∧ Different(Germany, USA) ::: Ableton has an office in Germany. Ableton has an office in the USA. USA and Germany are different countries.\n∀x ∀y (Office(x, y) ∧ Office(x, z) → Different(y, z)) ::: Any company that has offices in different countries is a multinational company.\nMake(Ableton, musicSoftware) ::: Ableton makes music software.\nConclusion:\nMake(Ableton, AI) ::: Ableton makes AI software.\n------\nProblem:\nA person who is a student is a young person. A young person is a person who is under 25 years old. A person who is a student is a person who is under 25 years old. A person who is a student is a person who is under 25 years old. A person who is a student is a person who is under 25 years old. A person who is a student is a person who is under 25 years old. A person who is a student is a person who is under 25 years old. A person who is a student is a person who is under 25 years old. A person who is a student is a person who is under 25 years old. A person who is a student is a person who is under 25 years old. A person who is a student is a person who is under 25 years old. A person who is a student is a person who is under 25 years old. A person who is a student is a person who is under 25 years old. A person who is a student is a person who is under 25 years old. A person who is a student is a person who is under 25 years old. A person who is a student is a person who is under 25 years old. A person who is a student is a person who is under 25 years old. A person who is a student is a person who is under 25 years old. A person who is a student is a person who is under 25 years old. A person who is a"
    ]
  },
  {
    "id": "FOLIO_train_645",
    "context": "Ableton has an office in Germany. Ableton has an office in the USA. USA and Germany are different countries. Any company that has offices in different countries is a multinational company. Ableton makes music software.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Ableton does not have an office in Germany.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nOffice(x) ::: x is an office.\nCompany(x) ::: x is a company.\nMake(x, y) ::: x makes y.\nCountry(x) ::: x is a country.\nDifferent(x, y) ::: x and y are different.\nMultinational(x) ::: x is a multinational company.\nPremises:\nOffice(germany) ∧ Office(usa) ∧ Different(germany, usa) ::: Ableton has an office in Germany.\nOffice(germany) ∧ Office(usa) ∧ Different(germany, usa) ::: Ableton has an office in the USA.\nCountry(germany) ∧ Country(usa) ∧ Different(germany, usa) ::: USA and Germany are different countries.\n∀x (Office(x) ∧ Company(x) → Multinational(x)) ::: Any company that has offices in different countries is a multinational company.\nMake(abelton, musicSoftware) ::: Ableton makes music software.\nConclusion:\n¬Office(germany) ::: Ableton does not have an office in Germany.\n------\nProblem:\nA person who is a student is a young person. A young person is a person who is under 30 years old. A person who is a student is a person who is not a teacher. A person who is a teacher is a person who is over 30 years old.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? A person who is a student is a person who is over 30 years old.\n###\nPredicates:\nStudent(x) ::: x is a student.\nYoung(x) ::: x is a young person.\nUnder(x, y) ::: x is under y.\nOver(x, y) ::: x is over y.\nTeacher(x) ::: x is a teacher.\nPremises:\nStudent(x) → Young(x) ::: A person who is a student is a young person.\nYoung(x) ∧ Under(x, 30) ::: A young person is a person who is under 30 years old.\nStudent(x) → ¬Teacher(x) ::: A person who is a student is a person who is not a teacher.\nTeacher(x) ∧ Over(x, 30) ::: A person who is a teacher is a person who is over 30"
    ]
  },
  {
    "id": "FOLIO_train_646",
    "context": "Every swimmer can go underwater. Everyone that eats fish they catch themselves is a swimmer. Every penguin eats fish they catch themselves. All nonflying birds in Antarctica are penguins. Fido is a penguin or a swimmer.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Fido eats fish they catch themselves.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSwimmer(x) ::: x is a swimmer.\nEat(x, y) ::: x eats y.\nCatch(x, y) ::: x catches y.\nFly(x) ::: x flies.\nPenguin(x) ::: x is a penguin.\nAntarctica(x) ::: x is in Antarctica.\nPremises:\n∀x (Swimmer(x) → ∃y (Eat(x, y) ∧ Catch(x, y))) ::: Every swimmer can go underwater.\n∀x (Eat(x, y) ∧ Catch(x, y) → Swimmer(x)) ::: Everyone that eats fish they catch themselves is a swimmer.\n∀x (Penguin(x) → Eat(x, y) ∧ Catch(x, y)) ::: Every penguin eats fish they catch themselves.\n∀x (Antarctica(x) → Penguin(x)) ::: All nonflying birds in Antarctica are penguins.\nFido ∨ Swimmer(fido) ::: Fido is a penguin or a swimmer.\nConclusion:\nEat(fido, y) ∧ Catch(fido, y) ::: Fido eats fish they catch themselves.\n------\nProblem:\nEveryone who is a student is a person. Everyone who is a person is either a student or a teacher. Everyone who is a teacher is a person. Everyone who is a person is either a student or a teacher. Everyone who is a student is a person.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Everyone who is a student is a person.\n###\nPredicates:\nStudent(x) ::: x is a student.\nTeacher(x) ::: x is a teacher.\nPerson(x) ::: x is a person.\nPremises:\n∀x (Student(x) → Person(x)) ::: Everyone who is a student is a person.\n∀x (Person(x) → (Student(x) ∨ Teacher(x))) ::: Everyone who is a person is either a student or a teacher.\n∀x (Teacher(x) → Person(x)) ::: Everyone who is a teacher is a person.\n∀x (Person(x) → (Student(x) ∨ Teacher(x))) ::: Everyone who is a person is either a student"
    ]
  },
  {
    "id": "FOLIO_train_647",
    "context": "Every swimmer can go underwater. Everyone that eats fish they catch themselves is a swimmer. Every penguin eats fish they catch themselves. All nonflying birds in Antarctica are penguins. Fido is a penguin or a swimmer.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Fido is neither a non-flying bird nor can Fido go underwater.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSwimmer(x) ::: x is a swimmer.\nGoUnderwater(x) ::: x can go underwater.\nEat(x, y) ::: x eats y.\nCatch(x, y) ::: x catches y.\nFly(x) ::: x can fly.\nPenguin(x) ::: x is a penguin.\nAntarctica(x) ::: x is in Antarctica.\nPremises:\n∀x (Swimmer(x) → GoUnderwater(x)) ::: Every swimmer can go underwater.\n∀x (Eat(x, y) ∧ Catch(x, y)) → Swimmer(x) ::: Everyone that eats fish they catch themselves is a swimmer.\n∀x (Penguin(x) → Eat(x, fish)) ::: Every penguin eats fish they catch themselves.\n∀x (Antarctica(x) ∧ Bird(x) ∧ ¬Fly(x)) → Penguin(x) ::: All nonflying birds in Antarctica are penguins.\nSwimmer(fido) ∨ Penguin(fido) ::: Fido is a penguin or a swimmer.\nConclusion:\n¬(Bird(fido) ∧ ¬GoUnderwater(fido)) ::: Fido is neither a non-flying bird nor can Fido go underwater.\n------\nProblem:\nEveryone who is a student is a person. Everyone who is a person is either a student or a teacher. Everyone who is a teacher is a person. Everyone who is a person is either a student or a teacher. Everyone who is a student is a person.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Everyone who is a student is a person.\n###\nPredicates:\nStudent(x) ::: x is a student.\nPerson(x) ::: x is a person.\nTeacher(x) ::: x is a teacher.\nPremises:\n∀x (Student(x) → Person(x)) ::: Everyone who is a student is a person.\n∀x (Person(x) → (Student(x) ∨ Teacher(x))) ::: Everyone who is a person is either a student or a teacher.\n∀x (Teacher(x) → Person(x)) ::: Everyone who is a teacher is a person.\n∀x (Person(x) → (Student(x"
    ]
  },
  {
    "id": "FOLIO_train_648",
    "context": "Every swimmer can go underwater. Everyone that eats fish they catch themselves is a swimmer. Every penguin eats fish they catch themselves. All nonflying birds in Antarctica are penguins. Fido is a penguin or a swimmer.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Fido can either go underwater or is a swimmer, then Fido is a nonflying bird in Antartica.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSwimmer(x) ::: x is a swimmer.\nGoUnderwater(x) ::: x can go underwater.\nEat(x, y) ::: x eats y.\nCatch(x, y) ::: x catches y.\nFly(x) ::: x can fly.\nPenguin(x) ::: x is a penguin.\nAntarctica(x) ::: x is in Antarctica.\nPremises:\n∀x (Swimmer(x) → GoUnderwater(x)) ::: Every swimmer can go underwater.\n∀x (Eat(x, y) ∧ Catch(x, y)) → Swimmer(x) ::: Everyone that eats fish they catch themselves is a swimmer.\n∀x (Penguin(x) → Eat(x, fish)) ::: Every penguin eats fish they catch themselves.\n∀x (Antarctica(x) ∧ ¬Fly(x)) → Penguin(x) ::: All nonflying birds in Antarctica are penguins.\nFido(x) ∨ Swimmer(x) ::: Fido is a penguin or a swimmer.\nConclusion:\n(GoUnderwater(fido) ∨ Swimmer(fido)) → (Antarctica(fido) ∧ ¬Fly(fido)) ::: If Fido can either go underwater or is a swimmer, then Fido is a nonflying bird in Antartica.\n------\nProblem:\nEveryone who is a student is a person. Everyone who is a person is either a student or a teacher. Everyone who is a teacher is a person.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? If someone is a person, then they are either a student or a teacher.\n###\nPredicates:\nStudent(x) ::: x is a student.\nPerson(x) ::: x is a person.\nTeacher(x) ::: x is a teacher.\nPremises:\n∀x (Student(x) → Person(x)) ::: Everyone who is a student is a person.\n∀x (Person(x) → (Student(x) ∨ Teacher(x))) ::: Everyone who is a person is either a student or a teacher.\n∀x (Teacher(x) → Person(x)) ::: Everyone who is a teacher is a person.\nConclusion:\nPerson(x) → (Student"
    ]
  },
  {
    "id": "FOLIO_train_649",
    "context": "All professors are teachers. All researchers are professors. No teachers are students. All people who study are students. Leon is not studying or a researcher. If Leon is not studying, then Leon is a teacher.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Leon is a professor.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProfessor(x) ::: x is a professor.\nResearcher(x) ::: x is a researcher.\nTeacher(x) ::: x is a teacher.\nStudent(x) ::: x is a student.\nStudy(x) ::: x is studying.\nPremises:\n∀x (Professor(x) → Teacher(x)) ::: All professors are teachers.\n∀x (Researcher(x) → Professor(x)) ::: All researchers are professors.\n∀x (Teacher(x) → ¬Student(x)) ::: No teachers are students.\n∀x (Study(x) → Student(x)) ::: All people who study are students.\n¬(Study(leon) ∨ Researcher(leon)) ∧ ¬(Teacher(leon) ∧ ¬Study(leon)) ::: Leon is not studying or a researcher.\n∀x (¬Study(x) → Teacher(x)) ::: If Leon is not studying, then Leon is a teacher.\nConclusion:\nProfessor(leon) ::: Leon is a professor.\n------\nProblem:\nAll people who are not students are teachers. All teachers are professors. All professors are researchers. All researchers are people. All people who are not researchers are students.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? All people are either students or professors.\n###\nPredicates:\nStudent(x) ::: x is a student.\nTeacher(x) ::: x is a teacher.\nProfessor(x) ::: x is a professor.\nResearcher(x) ::: x is a researcher.\nPerson(x) ::: x is a person.\nPremises:\n∀x (¬Student(x) → Teacher(x)) ::: All people who are not students are teachers.\n∀x (Teacher(x) → Professor(x)) ::: All teachers are professors.\n∀x (Professor(x) → Researcher(x)) ::: All professors are researchers.\n∀x (Researcher(x) → Person(x)) ::: All researchers are people.\n∀x (¬Researcher(x) → Student(x)) ::: All people who are not researchers are students.\nConclusion:\n∀x (Student(x) ∨ Professor(x)) ::: All people are either students or profess"
    ]
  },
  {
    "id": "FOLIO_train_650",
    "context": "All professors are teachers. All researchers are professors. No teachers are students. All people who study are students. Leon is not studying or a researcher. If Leon is not studying, then Leon is a teacher.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Leon is neither a student nor a researcher.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProfessor(x) ::: x is a professor.\nResearcher(x) ::: x is a researcher.\nTeacher(x) ::: x is a teacher.\nStudent(x) ::: x is a student.\nStudy(x) ::: x is studying.\nPremises:\n∀x (Professor(x) → Researcher(x)) ::: All professors are researchers.\n∀x (Researcher(x) → Professor(x)) ::: All researchers are professors.\n∀x (Teacher(x) → ¬Student(x)) ::: No teachers are students.\n∀x (Study(x) → Student(x)) ::: All people who study are students.\n¬Study(leon) ∨ ¬Researcher(leon) ::: Leon is not studying or a researcher.\n¬Study(leon) → Teacher(leon) ::: If Leon is not studying, then Leon is a teacher.\nConclusion:\n¬(Student(leon) ∨ Researcher(leon)) ::: Leon is neither a student nor a researcher.\n------"
    ]
  },
  {
    "id": "FOLIO_train_651",
    "context": "All professors are teachers. All researchers are professors. No teachers are students. All people who study are students. Leon is not studying or a researcher. If Leon is not studying, then Leon is a teacher.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Leon is not a researcher, then Leon is a student.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProfessor(x) ::: x is a professor.\nResearcher(x) ::: x is a researcher.\nTeacher(x) ::: x is a teacher.\nStudent(x) ::: x is a student.\nStudy(x) ::: x is studying.\nPremises:\n∀x (Professor(x) → Teacher(x)) ::: All professors are teachers.\n∀x (Researcher(x) → Professor(x)) ::: All researchers are professors.\n∀x (Teacher(x) → ¬Student(x)) ::: No teachers are students.\n∀x (Study(x) → Student(x)) ::: All people who study are students.\n¬(Study(leon) ∨ Researcher(leon)) ∧ ¬(Teacher(leon) ∧ ¬Study(leon)) ::: Leon is not studying or a researcher.\n∀x (¬Study(x) → Teacher(x)) ::: If Leon is not studying, then Leon is a teacher.\nConclusion:\n¬(Research"
    ]
  },
  {
    "id": "FOLIO_train_652",
    "context": "A cutman is responsible for preventing and treating physical damage to a fighter. Cutmen appear in matches such as a boxing, kickboxing or a mixed martial arts bout. Cutmen typically handle swelling, nosebleeds and lacerations. Jack is a cutman.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? No cutmen appear in boxing matches.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCutman(x) ::: x is a cutman.\nBoxing(x) ::: x is a boxing match.\nKickboxing(x) ::: x is a kickboxing match.\nMixedMartialArts(x) ::: x is a mixed martial arts bout.\nHandle(x, y) ::: x handles y.\nSwelling(x) ::: x is a swelling.\nNosebleed(x) ::: x is a nosebleed.\nLaceration(x) ::: x is a laceration.\nPremises:\nCutman(jack) ::: Jack is a cutman.\n∀x (Cutman(x) → Handle(x, swelling)) ::: Cutmen appear in matches such as a boxing, kickboxing or a mixed martial arts bout.\n∀x (Cutman(x) → Handle(x, nosebleed)) ::: Cutmen appear in matches such as a boxing, kickboxing or a mixed martial arts bout.\n∀x (Cutman(x) → Handle(x, laceration)) ::: Cutmen appear in matches such as a boxing, kickboxing or a mixed"
    ]
  },
  {
    "id": "FOLIO_train_653",
    "context": "A cutman is responsible for preventing and treating physical damage to a fighter. Cutmen appear in matches such as a boxing, kickboxing or a mixed martial arts bout. Cutmen typically handle swelling, nosebleeds and lacerations. Jack is a cutman.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If someone is not a cutman, then they cannot handle nosebleeds.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCutman(x) ::: x is a cutman.\nHandle(x, y) ::: x handles y.\nNosebleed(x) ::: x is a nosebleed.\nPremises:\n∀x (Cutman(x) → Handle(x, nosebleed)) ::: A cutman handles nosebleeds.\nCutman(jack) ::: Jack is a cutman.\nConclusion:\n∀x (¬Cutman(x) → ¬Handle(x, nosebleed)) ::: If someone is not a cutman, then they cannot handle nosebleeds.\n------\nProblem:\nA person is a member of a group if and only if they are a member of the group. A person is a member of a group if and only if they are a member of the group. A person is a member of a group if and only if they are a member of the group. A person is a member of a group if and only if they are a member of the group. A person is a member of a group if and only if they are a member of the group. A person is a member of a group if and only if they are a member of the group. A person is a member of a group"
    ]
  },
  {
    "id": "FOLIO_train_654",
    "context": "A cutman is responsible for preventing and treating physical damage to a fighter. Cutmen appear in matches such as a boxing, kickboxing or a mixed martial arts bout. Cutmen typically handle swelling, nosebleeds and lacerations. Jack is a cutman.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jack can treat physical damage.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCutman(x) ::: x is a cutman.\nTreat(x, y) ::: x can treat y.\nPremises:\nCutman(jack) ::: Jack is a cutman.\nConclusion:\nTreat(jack, physicalDamage) ::: Jack can treat physical damage.\n------\nProblem:\nA cutman is responsible for preventing and treating physical damage to a fighter. Cutmen appear in matches such as a boxing, kickboxing or a mixed martial arts bout. Cutmen typically handle swelling, nosebleeds and lacerations. Jack is a cutman.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Jack can treat physical damage.\n###\nPredicates:\nCutman(x) ::: x is a cutman.\nTreat(x, y) ::: x can treat y.\nPremises:\nCutman(jack) ::: Jack is a cutman.\nConclusion:\nTreat(jack, physicalDamage) ::: Jack can treat physical damage.\n------\nProblem:\nA cutman is responsible for preventing and treating physical damage to a fighter. Cutmen appear in matches such as a boxing, kickbox"
    ]
  },
  {
    "id": "FOLIO_train_655",
    "context": "The Mona Lisa is one of the world's best-known artworks. The Mona Lisa is a portrait painted by Leonardo da Vinci. Leonardo da Vinci was a scientist and painter. Painting genres are history, portrait, animal, landscape, and still life.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? One of the world's best-known artworks is painted by a scientist.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nWorldBestKnown(x) ::: x is one of the world's best-known artworks.\nPainting(x) ::: x is a painting.\nPortrait(x) ::: x is a portrait.\nAnimal(x) ::: x is an animal.\nLandscape(x) ::: x is a landscape.\nStillLife(x) ::: x is a still life.\nHistory(x) ::: x is a history.\nPremises:\nWorldBestKnown(monaLisa) ∧ Painting(monaLisa) ∧ Portrait(monaLisa) ::: The Mona Lisa is one of the world's best-known artworks.\nPainting(monaLisa) ∧ Portrait(monaLisa) ∧ Animal(monaLisa) ∧ Landscape(monaLisa) ∧ StillLife(monaLisa) ∧ History(monaLisa) ::: The Mona Lisa is a portrait painted by Leonardo da Vinci.\n∀x (Painting(x) → (Portrait(x) ∨ Animal("
    ]
  },
  {
    "id": "FOLIO_train_656",
    "context": "The Mona Lisa is one of the world's best-known artworks. The Mona Lisa is a portrait painted by Leonardo da Vinci. Leonardo da Vinci was a scientist and painter. Painting genres are history, portrait, animal, landscape, and still life.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Leonardo da Vinci has artworks in the landscape genre.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nArtwork(x) ::: x is an artwork.\nPortrait(x) ::: x is a portrait.\nHistory(x) ::: x is a history.\nAnimal(x) ::: x is an animal.\nLandscape(x) ::: x is a landscape.\nStillLife(x) ::: x is a still life.\nGenre(x, y) ::: x is a genre of y.\nPremises:\nArtwork(monaLisa) ∧ Portrait(monaLisa) ∧ Genre(monaLisa, portrait) ::: The Mona Lisa is one of the world's best-known artworks.\nArtwork(monaLisa) ∧ Portrait(monaLisa) ∧ Genre(monaLisa, portrait) ∧ Artist(monaLisa, leonardo) ::: The Mona Lisa is a portrait painted by Leonardo da Vinci.\nArtist(leonardo, monaLisa) ∧ Genre(monaLisa, portrait) ∧ ∃x (Artist(leonardo, x) ∧ Gen"
    ]
  },
  {
    "id": "FOLIO_train_657",
    "context": "The Mona Lisa is one of the world's best-known artworks. The Mona Lisa is a portrait painted by Leonardo da Vinci. Leonardo da Vinci was a scientist and painter. Painting genres are history, portrait, animal, landscape, and still life.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? No world's best-known artworks are portraits.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nWorldsBestKnown(x) ::: x is one of the world's best-known artworks.\nPortrait(x) ::: x is a portrait.\nPainting(x) ::: x is a painting.\nScientist(x) ::: x is a scientist.\nPainter(x) ::: x is a painter.\nGenre(x) ::: x is a painting genre.\nPremises:\nWorldsBestKnown(monaLisa) ∧ Painting(monaLisa) ∧ Portrait(monaLisa) ::: The Mona Lisa is one of the world's best-known artworks.\nWorldsBestKnown(monaLisa) ∧ Painting(monaLisa) ∧ Portrait(monaLisa) ∧ Painter(leonardo) ::: The Mona Lisa is one of the world's best-known artworks.\n∀x (Painting(x) → (Portrait(x) ∨ History(x) ∨ Animal(x) ∨ Landscape(x) ∨ StillLife(x)))"
    ]
  },
  {
    "id": "FOLIO_train_658",
    "context": "No professional tennis umpires are professional tennis players. If you are a World Tour player, then you are a professional tennis player. All Grand Slam champions are World Tour players. All Grand Slam umpires are professional tennis umpires. Nadal is a World Tour player or a Grand Slam champion",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Nadal is a Grand Slam umpire.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProfessionalTennisPlayer(x) ::: x is a professional tennis player.\nWorldTourPlayer(x) ::: x is a World Tour player.\nGrandSlamChampion(x) ::: x is a Grand Slam champion.\nGrandSlamUmpire(x) ::: x is a Grand Slam umpire.\nProfessionalTennisUmpire(x) ::: x is a professional tennis umpire.\nPremises:\n¬(ProfessionalTennisPlayer(x) ∧ ProfessionalTennisUmpire(x)) ::: No professional tennis umpires are professional tennis players.\nWorldTourPlayer(x) → ProfessionalTennisPlayer(x) ::: If you are a World Tour player, then you are a professional tennis player.\n∀x (GrandSlamChampion(x) → WorldTourPlayer(x)) ::: All Grand Slam champions are World Tour players.\n∀x (GrandSlamUmpire(x) → ProfessionalTennisUmpire(x)) ::: All Grand Slam umpires are professional tennis umpires.\nNadal(x) ∧ (WorldT"
    ]
  },
  {
    "id": "FOLIO_train_659",
    "context": "No professional tennis umpires are professional tennis players. If you are a World Tour player, then you are a professional tennis player. All Grand Slam champions are World Tour players. All Grand Slam umpires are professional tennis umpires. Nadal is a World Tour player or a Grand Slam champion",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Nadal is not a Grand Slam umpire.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProfessionalTennisPlayer(x) ::: x is a professional tennis player.\nWorldTourPlayer(x) ::: x is a World Tour player.\nGrandSlamChampion(x) ::: x is a Grand Slam champion.\nGrandSlamUmpire(x) ::: x is a Grand Slam umpire.\nPremises:\n¬(ProfessionalTennisPlayer(nadal) ∧ ProfessionalTennisPlayer(nadal)) ::: No professional tennis umpires are professional tennis players.\nWorldTourPlayer(x) → ProfessionalTennisPlayer(x) ::: If you are a World Tour player, then you are a professional tennis player.\n∀x (GrandSlamChampion(x) → WorldTourPlayer(x)) ::: All Grand Slam champions are World Tour players.\n∀x (GrandSlamUmpire(x) → ProfessionalTennisUmpire(x)) ::: All Grand Slam umpires are professional tennis umpires.\nNadal(x) ∧ (WorldTourPlayer(x) ∨ GrandSlamChampion(x)) ::: Nadal is"
    ]
  },
  {
    "id": "FOLIO_train_660",
    "context": "No professional tennis umpires are professional tennis players. If you are a World Tour player, then you are a professional tennis player. All Grand Slam champions are World Tour players. All Grand Slam umpires are professional tennis umpires. Nadal is a World Tour player or a Grand Slam champion",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Nadal is a Grand Slam champion.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProfessionalTennisPlayer(x) ::: x is a professional tennis player.\nWorldTourPlayer(x) ::: x is a World Tour player.\nGrandSlamChampion(x) ::: x is a Grand Slam champion.\nGrandSlamUmpire(x) ::: x is a Grand Slam umpire.\nProfessionalTennisUmpire(x) ::: x is a professional tennis umpire.\nPremises:\n¬(ProfessionalTennisPlayer(x) ∧ ProfessionalTennisUmpire(x)) ::: No professional tennis umpires are professional tennis players.\n∀x (WorldTourPlayer(x) → ProfessionalTennisPlayer(x)) ::: If you are a World Tour player, then you are a professional tennis player.\n∀x (GrandSlamChampion(x) → WorldTourPlayer(x)) ::: All Grand Slam champions are World Tour players.\n∀x (GrandSlamUmpire(x) → ProfessionalTennisUmpire(x)) ::: All Grand Slam umpires are professional tennis umpires.\nNadal(x) ∧ (WorldTourPlayer(x) ∨ GrandSlamChampion(x)) ::: Nadal is a World Tour player or a Grand Slam champion\nConclusion:\nGrandSlamChampion(nadal) ::: Nadal is a Grand Slam champion.\n------"
    ]
  },
  {
    "id": "FOLIO_train_661",
    "context": "No professional tennis umpires are professional tennis players. If you are a World Tour player, then you are a professional tennis player. All Grand Slam champions are World Tour players. All Grand Slam umpires are professional tennis umpires. Nadal is a World Tour player or a Grand Slam champion",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Nadal is neither a Grand Slam umpire nor a professional tennis umpire.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProfessionalTennisUmpire(x) ::: x is a professional tennis umpire.\nProfessionalTennisPlayer(x) ::: x is a professional tennis player.\nWorldTourPlayer(x) ::: x is a World Tour player.\nGrandSlamChampion(x) ::: x is a Grand Slam champion.\nGrandSlamUmpire(x) ::: x is a Grand Slam umpire.\nPremises:\n¬∀x (ProfessionalTennisUmpire(x) → ProfessionalTennisPlayer(x)) ::: No professional tennis umpires are professional tennis players.\n∀x (WorldTourPlayer(x) → ProfessionalTennisPlayer(x)) ::: If you are a World Tour player, then you are a professional tennis player.\n∀x (GrandSlamChampion(x) → WorldTourPlayer(x)) ::: All Grand Slam champions are World Tour players.\n∀x (GrandSlamUmpire(x) → ProfessionalTennisUmpire(x)) ::: All Grand Slam umpires are professional tennis umpires.\nNadal(x) ::: x is Nadal.\nConclusion:\n¬∃x (GrandSlamUmpire(x) ∧ ProfessionalTennisUmpire(x)) ::: Nadal is neither a Grand Slam umpire nor a professional tennis umpire.\n------\nProblem"
    ]
  },
  {
    "id": "FOLIO_train_662",
    "context": "No professional tennis umpires are professional tennis players. If you are a World Tour player, then you are a professional tennis player. All Grand Slam champions are World Tour players. All Grand Slam umpires are professional tennis umpires. Nadal is a World Tour player or a Grand Slam champion",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Nadal is a professional tennis umpire, then Nadal is a Grand Slam Umpire.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProfessionalTennisUmpire(x) ::: x is a professional tennis umpire.\nProfessionalTennisPlayer(x) ::: x is a professional tennis player.\nWorldTourPlayer(x) ::: x is a World Tour player.\nGrandSlamChampion(x) ::: x is a Grand Slam champion.\nGrandSlamUmpire(x) ::: x is a Grand Slam umpire.\nPremises:\n¬∀x (ProfessionalTennisUmpire(x) → ProfessionalTennisPlayer(x)) ::: No professional tennis umpires are professional tennis players.\n∀x (WorldTourPlayer(x) → ProfessionalTennisPlayer(x)) ::: If you are a World Tour player, then you are a professional tennis player.\n∀x (GrandSlamChampion(x) → WorldTourPlayer(x)) ::: All Grand Slam champions are World Tour players.\n∀x (GrandSlamUmpire(x) → ProfessionalTennisUmpire(x)) ::: All Grand Slam umpires are professional tennis umpires.\nNadal(x) ∧ (WorldTourPlayer(x) ∨ GrandSlamChampion(x)) ::: Nadal is a World Tour player or a Grand Slam champion\nConclusion:\nGrandSlamUmpire(Nadal) → GrandSlamUmpire(Nadal"
    ]
  },
  {
    "id": "FOLIO_train_663",
    "context": "No professional tennis umpires are professional tennis players. If you are a World Tour player, then you are a professional tennis player. All Grand Slam champions are World Tour players. All Grand Slam umpires are professional tennis umpires. Nadal is a World Tour player or a Grand Slam champion",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Nadal is a Grand Slam umpire or a professional tennis player, then Nadal is a Grand Slam umpire.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProfessionalTennisPlayer(x) ::: x is a professional tennis player.\nWorldTourPlayer(x) ::: x is a World Tour player.\nGrandSlamChampion(x) ::: x is a Grand Slam champion.\nGrandSlamUmpire(x) ::: x is a Grand Slam umpire.\nPremises:\n¬(ProfessionalTennisPlayer(x) ∧ ProfessionalTennisUmpire(x)) ::: No professional tennis umpires are professional tennis players.\nWorldTourPlayer(x) → ProfessionalTennisPlayer(x) ::: If you are a World Tour player, then you are a professional tennis player.\n∀x (GrandSlamChampion(x) → WorldTourPlayer(x)) ::: All Grand Slam champions are World Tour players.\n∀x (GrandSlamUmpire(x) → ProfessionalTennisUmpire(x)) ::: All Grand Slam umpires are professional tennis umpires.\nNadal(x) ∧ (WorldTourPlayer(x) ∨ GrandSlamChampion(x)) ::: Nadal is a World Tour player or a Grand Slam champion\nConclusion:\n(GrandSlamUmpire(x) ∨ ProfessionalTennisPlayer(x)) → GrandSlamUmpire(x) ::: If Nadal is a Grand Slam umpire or a professional tennis player, then Nad"
    ]
  },
  {
    "id": "FOLIO_train_664",
    "context": "Buisnesses are either sanctioned or unsanctioned. Sanctioned buisnesses are limited. Unsanctioned buisnesses are free. The Crude Oil Data Exchange is a buisness that isn't free.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Crude Oil Data Exchange is sanctioned.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSanctioned(x) ::: x is a sanctioned buisness.\nUnsanctioned(x) ::: x is an unsanctioned buisness.\nLimited(x) ::: x is a limited buisness.\nFree(x) ::: x is a free buisness.\nBuisness(x) ::: x is a buisness.\nPremises:\n∀x (Buisness(x) → (Sanctioned(x) ∨ Unsanctioned(x))) ::: Businesses are either sanctioned or unsanctioned.\n∀x (Sanctioned(x) → Limited(x)) ::: Sanctioned buisnesses are limited.\n∀x (Unsanctioned(x) → Free(x)) ::: Unsanctioned buisnesses are free.\nBuisness(crudeOilDataExchange) ∧ ¬Free(crudeOilDataExchange) ::: The Crude Oil Data Exchange is a buisness that isn't free.\nConclusion:\nSanctioned(crudeOilDataExchange) ::: Crude Oil Data Exchange is sanctioned.\n------\nProblem:\nAll people who are not students are either employed or unemployed. All people who are employed are either employed full-time or employed part-time. All people who are employed full-time are employed. All people who are employed part-time are employed. All people"
    ]
  },
  {
    "id": "FOLIO_train_665",
    "context": "Buisnesses are either sanctioned or unsanctioned. Sanctioned buisnesses are limited. Unsanctioned buisnesses are free. The Crude Oil Data Exchange is a buisness that isn't free.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Crude Oil Data Exchange is unsanctioned.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSanctioned(x) ::: x is a sanctioned buisness.\nUnsanctioned(x) ::: x is an unsanctioned buisness.\nLimited(x) ::: x is a limited buisness.\nFree(x) ::: x is a free buisness.\nBuisness(x) ::: x is a buisness.\nPremises:\n∀x (Buisness(x) → (Sanctioned(x) ∨ Unsanctioned(x))) ::: Businesses are either sanctioned or unsanctioned.\n∀x (Sanctioned(x) → Limited(x)) ::: Sanctioned buisnesses are limited.\n∀x (Unsanctioned(x) → Free(x)) ::: Unsanctioned buisnesses are free.\nBuisness(crudeOilDataExchange) ∧ ¬Free(crudeOilDataExchange) ::: The Crude Oil Data Exchange is a buisness that isn't free.\nConclusion:\nUnsanctioned(crudeOilDataExchange) ::: Crude Oil Data Exchange is unsanctioned.\n------\nProblem:\nAll people who are not students are either employed or unemployed. All people who are employed are either employed full-time or employed part-time. All people who are employed full-time are employed. All people who are employed part-time are employed."
    ]
  },
  {
    "id": "FOLIO_train_666",
    "context": "Buisnesses are either sanctioned or unsanctioned. Sanctioned buisnesses are limited. Unsanctioned buisnesses are free. The Crude Oil Data Exchange is a buisness that isn't free.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Crude Oil Data Exchange is limited.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSanctioned(x) ::: x is a sanctioned buisness.\nUnsanctioned(x) ::: x is an unsanctioned buisness.\nLimited(x) ::: x is a limited buisness.\nFree(x) ::: x is a free buisness.\nBuisness(x) ::: x is a buisness.\nPremises:\n∀x (Buisness(x) → (Sanctioned(x) ∨ Unsanctioned(x))) ::: Businesses are either sanctioned or unsanctioned.\n∀x (Sanctioned(x) → Limited(x)) ::: Sanctioned buisnesses are limited.\n∀x (Unsanctioned(x) → Free(x)) ::: Unsanctioned buisnesses are free.\nBuisness(crudeOilDataExchange) ∧ ¬Free(crudeOilDataExchange) ::: The Crude Oil Data Exchange is a buisness that isn't free.\nConclusion:\nLimited(crudeOilDataExchange) ::: Crude Oil Data Exchange is limited.\n------\nProblem:\nAll people who are not students are either employed or unemployed. All people who are employed are either employed full-time or employed part-time. All people who are employed full-time are employed. All people who are employed part-time are employed. All people who are employed"
    ]
  },
  {
    "id": "FOLIO_train_667",
    "context": "When something is depressing, it is sad. V is depressing.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? V is invigorating",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDepressing(x) ::: x is depressing.\nInvigorating(x) ::: x is invigorating.\nPremises:\nDepressing(v) ::: When something is depressing, it is sad.\nV is depressing.\nConclusion:\nInvigorating(v) ::: V is invigorating\n------\nProblem:\nIf a person is a student, then the person is a person. If a person is a person, then the person is a person.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? If a person is a person, then the person is a person.\n###\nPredicates:\nStudent(x) ::: x is a student.\nPerson(x) ::: x is a person.\nPremises:\n∀x (Student(x) → Person(x)) ::: If a person is a student, then the person is a person.\n∀x (Person(x) → Person(x)) ::: If a person is a person, then the person is a person.\nConclusion:\n∀x (Person(x) → Person(x)) ::: If a person is a person, then the person is a person.\n------\nProblem:\nIf a person is a student, then the person is a person. If a person is a person, then the person is a person.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain?"
    ]
  },
  {
    "id": "FOLIO_train_668",
    "context": "Palstaves are a type of early bronze axe. Commonly found in northern, western and south-western Europe, palstaves are cast in moulds. John Evans is an archeologist who popularized the term \"palstave\". A paalstab is not an axe, but rather a digging shovel.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? John Evans Popularized the term paalstab.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPalstave(x) ::: x is a palstave.\nAxe(x) ::: x is an axe.\nDiggingShovel(x) ::: x is a digging shovel.\nPopularize(x, y) ::: x popularized the term y.\nArcheologist(x) ::: x is an archeologist.\nPremises:\n∀x (Palstave(x) → Axe(x)) ::: Palstaves are a type of early bronze axe.\n∀x (DiggingShovel(x) → ¬Axe(x)) ::: A paalstab is not an axe, but rather a digging shovel.\nArcheologist(john) ∧ Popularize(john, palstave) ::: John Evans is an archeologist who popularized the term \"palstave\".\nConclusion:\nPopularize(john, paalstab) ::: John Evans Popularized the term paalstab.\n------\nProblem:\nA person is a student if and only if they are enrolled in a university. A person is a student if and only if they are enrolled in a university. A person is a student if and only if they are enrolled in a university. A person is a student if and only if they are enrolled in a university. A person is a student if and only if they are enrolled in a university. A person is a student if and only if they are enrolled"
    ]
  },
  {
    "id": "FOLIO_train_669",
    "context": "Palstaves are a type of early bronze axe. Commonly found in northern, western and south-western Europe, palstaves are cast in moulds. John Evans is an archeologist who popularized the term \"palstave\". A paalstab is not an axe, but rather a digging shovel.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There is an axe that is commonly found in Western Europe.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAxe(x) ::: x is an axe.\nCommonlyFound(x, y) ::: x is commonly found in y.\nMould(x) ::: x is a mould.\nCast(x, y) ::: x is cast in mould y.\nPopularize(x, y) ::: x popularized the term y.\nDiggingShovel(x) ::: x is a digging shovel.\nPaalstab(x) ::: x is a paalstab.\nPremises:\n∀x (Palstave(x) → Axe(x)) ::: Palstaves are a type of early bronze axe.\nCommonlyFound(palstave, northwestern) ∧ CommonlyFound(palstave, southwestern) ::: Palstaves are commonly found in northern, western and south-western Europe.\nPopularize(john, palstave) ::: John Evans is an archeologist who popularized the term \"palstave\".\nDiggingShovel(paalstab) ∧ ¬Axe(paalstab) ::: A paalstab is not an axe, but rather a digging shovel.\nConclusion:\n∃x (Axe(x) ∧ CommonlyFound(x, western)) ::: There is an axe that is commonly found in Western Europe.\n------\nProblem:\nA person is a member of a family. A family"
    ]
  },
  {
    "id": "FOLIO_train_670",
    "context": "Palstaves are a type of early bronze axe. Commonly found in northern, western and south-western Europe, palstaves are cast in moulds. John Evans is an archeologist who popularized the term \"palstave\". A paalstab is not an axe, but rather a digging shovel.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Archeologists haven't popularized anything.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nArcheologist(x) ::: x is an archeologist.\nPopularize(x, y) ::: x popularizes y.\nAxe(x) ::: x is an axe.\nDiggingShovel(x) ::: x is a digging shovel.\nPaalstab(x) ::: x is a paalstab.\nPremises:\n∀x (Archeologist(x) → Popularize(x, y)) ::: Archeologists haven't popularized anything.\n∃x (Archeologist(x) ∧ Popularize(x, palstave)) ::: John Evans is an archeologist who popularized the term \"palstave\".\n∀x (Paalstab(x) → DiggingShovel(x)) ::: A paalstab is not an axe, but rather a digging shovel.\nConclusion:\n∀x (DiggingShovel(x) → Paalstab(x)) ::: A paalstab is not an axe, but rather a digging shovel.\n------"
    ]
  },
  {
    "id": "FOLIO_train_671",
    "context": "Koei Tecmo is a Japanese video game and anime holding company. Holding companies hold several companies. Tecmo was disbanded in Japan, while Koei survived, but was renamed. Video game holding companies are holding companies.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Koei Tecmo holds another company.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nHolding(x) ::: x is a holding company.\nVideoGame(x) ::: x is a video game.\nAnime(x) ::: x is an anime.\nHold(x, y) ::: x holds y.\nDisband(x, y) ::: x was disbanded in y.\nRename(x, y) ::: x was renamed to y.\nPremises:\nHolding(koeiTecmo) ::: Koei Tecmo is a Japanese video game and anime holding company.\n∀x (Holding(x) → Hold(x, y)) ::: Holding companies hold several companies.\n∀x (VideoGame(x) → Hold(x, y)) ::: Video game holding companies are holding companies.\n∀x (Anime(x) → Hold(x, y)) ::: Anime holding companies are holding companies.\nTecmo was disbanded in Japan, while Koei survived, but was renamed ::: Tecmo was disbanded in Japan, while Koei survived, but was renamed.\nConclusion:\nHold(koe"
    ]
  },
  {
    "id": "FOLIO_train_672",
    "context": "Koei Tecmo is a Japanese video game and anime holding company. Holding companies hold several companies. Tecmo was disbanded in Japan, while Koei survived, but was renamed. Video game holding companies are holding companies.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tecmo holds another company.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nHolding(x) ::: x is a holding company.\nVideoGame(x) ::: x is a video game.\nHold(x, y) ::: x holds y.\nDisband(x, y) ::: x was disbanded in year y.\nRename(x, y) ::: x was renamed to y.\nPremises:\nHolding(koeiTecmo) ∧ Holding(tecmo) ∧ Hold(koeiTecmo, tecmo) ::: Koei Tecmo is a Japanese video game and anime holding company.\nHolding(koeiTecmo) ∧ Holding(tecmo) ∧ Hold(koeiTecmo, tecmo) ∧ Holding(tecmo) ∧ Disband(tecmo, year2009) ::: Tecmo was disbanded in Japan, while Koei survived, but was renamed.\nVideoGame(x) ∧ Holding(y) ∧ Hold(y, x) ::: Video game holding"
    ]
  },
  {
    "id": "FOLIO_train_673",
    "context": "Koei Tecmo is a Japanese video game and anime holding company. Holding companies hold several companies. Tecmo was disbanded in Japan, while Koei survived, but was renamed. Video game holding companies are holding companies.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Koei Tecmo holds anime.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nHolding(x) ::: x is a holding company.\nVideoGame(x) ::: x is a video game.\nAnime(x) ::: x is an anime.\nHold(x, y) ::: x holds y.\nDisband(x, y) ::: x was disbanded in year y.\nRename(x, y) ::: x was renamed to y.\nPremises:\nHolding(koeiTecmo) ::: Koei Tecmo is a Japanese video game and anime holding company.\n∀x (Holding(x) → Hold(x, VideoGame)) ::: Holding companies hold several companies.\n∀x (Holding(x) → Hold(x, Anime)) ::: Holding companies hold several companies.\n∀x (Holding(x) → Hold(x, VideoGame)) ::: Holding companies hold several companies.\n∀x (Holding(x) → Hold(x, Anime)) ::: Holding companies hold several companies.\n∀x (Holding(x) → Hold(x, VideoGame)) ::: Hold"
    ]
  },
  {
    "id": "FOLIO_train_674",
    "context": "The PlayStation EyeToy is a camera accessory for the Playstation 2. The PlayStation Eye is a camera accessory for the Playstation 3. The Playstation Camera is a camera accessory for the Playstation 4 and the Playstation 5. Camera accessory for the system is compatible with that system Only the Playstation Camera is compatible with more than one system.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Playstation Eye can be used with the Playstation 2 and the Playstation 3.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPlayStation(x) ::: x is a Playstation.\nEyeToy(x) ::: x is a Playstation EyeToy.\nEye(x) ::: x is a Playstation Eye.\nCamera(x) ::: x is a Playstation Camera.\nCompatible(x, y) ::: x is compatible with y.\nSystem(x) ::: x is a system.\nPremises:\nEyeToy(eyetoy) ∧ PlayStation(ps2) ∧ Compatible(eyetoy, ps2) ::: The PlayStation EyeToy is a camera accessory for the Playstation 2.\nEye(eye) ∧ PlayStation(ps3) ∧ Compatible(eye, ps3) ::: The PlayStation Eye is a camera accessory for the Playstation 3.\nCamera(camera) ∧ PlayStation(ps4) ∧ PlayStation(ps5) ∧ Compatible(camera, ps4) ∧ Compatible(camera, ps5) ::: The Playstation Camera is a"
    ]
  },
  {
    "id": "FOLIO_train_675",
    "context": "The PlayStation EyeToy is a camera accessory for the Playstation 2. The PlayStation Eye is a camera accessory for the Playstation 3. The Playstation Camera is a camera accessory for the Playstation 4 and the Playstation 5. Camera accessory for the system is compatible with that system Only the Playstation Camera is compatible with more than one system.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Playstation EyeToy is compatible with the Playstation 2.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCompatible(x, y) ::: x is compatible with y.\nCameraAccessory(x) ::: x is a camera accessory.\nPlayStation(x) ::: x is a PlayStation.\nEyeToy(x) ::: x is a PlayStation EyeToy.\nEye(x) ::: x is a PlayStation Eye.\nCamera(x) ::: x is a PlayStation Camera.\nPremises:\nCameraAccessory(eyetoy) ∧ PlayStation(ps2) ∧ Compatible(eyetoy, ps2) ::: The PlayStation EyeToy is a camera accessory for the Playstation 2.\nCameraAccessory(eye) ∧ PlayStation(ps3) ∧ Compatible(eye, ps3) ::: The PlayStation Eye is a camera accessory for the Playstation 3.\nCameraAccessory(camera) ∧ PlayStation(ps4) ∧ PlayStation(ps5) ∧ Compatible(camera, ps4) ∧ Compatible(camera, ps5) :::"
    ]
  },
  {
    "id": "FOLIO_train_676",
    "context": "The PlayStation EyeToy is a camera accessory for the Playstation 2. The PlayStation Eye is a camera accessory for the Playstation 3. The Playstation Camera is a camera accessory for the Playstation 4 and the Playstation 5. Camera accessory for the system is compatible with that system Only the Playstation Camera is compatible with more than one system.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Playstation Camera can be used for all Playstation consoles.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPlayStation(x) ::: x is a Playstation console.\nCameraAccessory(x) ::: x is a camera accessory.\nCompatible(x, y) ::: x is compatible with y.\nPremises:\nPlayStationEyeToy(eyetoy) ∧ PlayStation(ps2) ∧ Compatible(eyetoy, ps2) ::: The PlayStation EyeToy is a camera accessory for the Playstation 2.\nPlayStationEye(eye) ∧ PlayStation(ps3) ∧ Compatible(eye, ps3) ::: The PlayStation Eye is a camera accessory for the Playstation 3.\nPlayStationCamera(camera) ∧ PlayStation(ps4) ∧ PlayStation(ps5) ∧ Compatible(camera, ps4) ∧ Compatible(camera, ps5) ::: The Playstation Camera is a camera accessory for the Playstation 4 and the Playstation 5.\nConclusion:\n∀x (PlayStation(x) → ∃y"
    ]
  },
  {
    "id": "FOLIO_train_677",
    "context": "Adam Buska is a European football player. If a European plays football, they play what Americans call soccer.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Adam Buska plays what Americans call soccer.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEuropean(x) ::: x is a European.\nFootballPlayer(x) ::: x is a football player.\nPlay(x, y) ::: x plays y.\nSoccer(y) ::: y is what Americans call soccer.\nPremises:\nEuropean(adam) ∧ FootballPlayer(adam) ::: Adam Buska is a European football player.\n∀x (FootballPlayer(x) → Play(x, soccer)) ::: If a European plays football, they play what Americans call soccer.\nConclusion:\nPlay(adam, soccer) ::: Adam Buska plays what Americans call soccer.\n------\nProblem:\nA person is a student if they are enrolled in a university. A person is a university student if they are enrolled in a university. A person is a student if they are enrolled in a university. A person is a university student if they are enrolled in a university. A person is a student if they are enrolled in a university. A person is a university student if they are enrolled in a university. A person is a student if they are enrolled in a university. A person is"
    ]
  },
  {
    "id": "FOLIO_train_678",
    "context": "If the game has sold more than 1 million copies, then it is on the Best Seller list. All Games developed by Paradox Development Studio sold more than 1 million copies. Some games published before 2010 support the Linux OS system. All games on the Best Seller list are popular among young people. FIFA22 neither supports the Linux OS system nor is it popular among young people.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? FIFA21 is published before 2010",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGame(x) ::: x is a game.\nDevelop(x, y) ::: x is developed by y.\nSold(x, y) ::: x sold more than y copies.\nBestSeller(x) ::: x is on the Best Seller list.\nPopular(x) ::: x is popular among young people.\nSupport(x, y) ::: x supports the y OS system.\nPremises:\n∀x (Game(x) ∧ Develop(x, paradox) → Sold(x, million)) ::: All Games developed by Paradox Development Studio sold more than 1 million copies.\n∀x (Game(x) ∧ Support(x, linux) → Develop(x, paradox)) ::: Some games published before 2010 support the Linux OS system.\n∀x (Game(x) ∧ BestSeller(x) → Popular(x)) ::: All games on the Best Seller list are popular among young people.\n¬(Game(fifa22) ∧ BestSeller(fifa22) �"
    ]
  },
  {
    "id": "FOLIO_train_679",
    "context": "If the game has sold more than 1 million copies, then it is on the Best Seller list. All Games developed by Paradox Development Studio sold more than 1 million copies. Some games published before 2010 support the Linux OS system. All games on the Best Seller list are popular among young people. FIFA22 neither supports the Linux OS system nor is it popular among young people.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? FIFA21 is published before 2010 and developed by Paradox Development Studio",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGame(x) ::: x is a game.\nDeveloped(x, y) ::: x is developed by y.\nPublished(x, y) ::: x is published in year y.\nSupport(x, y) ::: x supports the y OS system.\nPopular(x) ::: x is popular among young people.\nBestSeller(x) ::: x is on the Best Seller list.\nPremises:\n∀x (Game(x) ∧ Developed(x, paradoxDevelopmentStudio) → ∃y (Game(y) ∧ Published(y, year1999) ∧ Support(y, linux))) ::: All Games developed by Paradox Development Studio sold more than 1 million copies.\n∀x (Game(x) ∧ Developed(x, paradoxDevelopmentStudio) → ∃y (Game(y) ∧ Published(y, year2010) ∧ Support(y, linux))) ::: Some games published before 2010 support"
    ]
  },
  {
    "id": "FOLIO_train_680",
    "context": "If the game has sold more than 1 million copies, then it is on the Best Seller list. All Games developed by Paradox Development Studio sold more than 1 million copies. Some games published before 2010 support the Linux OS system. All games on the Best Seller list are popular among young people. FIFA22 neither supports the Linux OS system nor is it popular among young people.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? if FIFA21 is either a game published before 2010 or developed by Paradox Development Studio, then it is either in the Best Seller list and sold more than 1 million copies; or not in the Best Seller list and hasn't sold more than 1 million copies.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGame(x) ::: x is a game.\nBestSeller(x) ::: x is on the Best Seller list.\nPopular(x) ::: x is popular among young people.\nLinux(x) ::: x supports the Linux OS system.\nDeveloped(x, y) ::: x is developed by y.\nPublished(x, y) ::: x is published in year y.\nPremises:\n∀x (BestSeller(x) → Popular(x)) ::: All games on the Best Seller list are popular among young people.\n∀x (Game(x) ∧ Developed(x, paradoxDevelopmentStudio)) → (Game(x) ∧ SoldMoreThan1MillionCopies(x)) ::: All Games developed by Paradox Development Studio sold more than 1 million copies.\n∀x (Game(x) ∧ Published(x, before2010)) → (Game(x) ∧ Linux(x)) ::: Some games published before 2010 support the Linux OS system.\n¬(BestSeller(fifa22) ∧ Linux(fifa22)) ∧ ¬(BestSeller(fifa22) ∧ Popular(fifa22)) ::: FIFA22 neither supports the Linux OS system nor is it popular among young people.\nConclusion:\n(Game(fifa21) ∧ (Published(fifa21, before2010) ∨ Developed(fifa21, paradoxDevelopmentStudio))) → (BestSeller(fifa21) ∧ SoldMoreThan1MillionCopies(fifa21)) ∨ ¬(BestSeller(fifa21) ∧ SoldMoreThan1MillionCopies(fifa21)) ::: if FIFA21 is either a game published before 2010 or developed by Paradox Development Studio, then it is either in the Best Seller list and sold more than 1 million copies; or not in the Best Seller list and hasn't sold more than 1 million copies.\n------"
    ]
  },
  {
    "id": "FOLIO_train_681",
    "context": "China is one of BRICS and its economy is emerging. India is one of BRICS and its economy is emerging. All people from China speak Chinese. All people from India speak Hindi or English. There is an Indian.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? All people from BRICS neither speak Hindi nor speak English.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nChina(x) ::: x is from China.\nIndia(x) ::: x is from India.\nBRICS(x) ::: x is one of BRICS.\nEconomy(x) ::: x is an economy.\nEmerging(x) ::: x is an emerging economy.\nSpeak(x, y) ::: x speaks y.\nPerson(x) ::: x is a person.\nIndian(x) ::: x is an Indian.\nPremises:\nChina(china) ∧ BRICS(china) ∧ Emerging(china) ::: China is one of BRICS and its economy is emerging.\nIndia(india) ∧ BRICS(india) ∧ Emerging(india) ::: India is one of BRICS and its economy is emerging.\n∀x (China(x) → Speak(x, Chinese)) ::: All people from China speak Chinese.\n∀x (India(x) → (Speak(x, Hindi) ∨ Speak(x, English))) ::: All people from India speak Hindi or English.\n∃x Indian(x) ::: There is an Indian.\nConclusion:\n∀x (BRICS(x) → ¬(Speak(x, Hindi) ∨ Speak(x, English))) ::: All people from BRICS neither speak Hindi nor speak English.\n------\nProblem:\nAll people who are not from China are from India. All people from India are from BRICS. All people from BRICS are from China.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? All people from BRICS are from India.\n###\nPredicates:\nChina(x) ::: x is from China.\nIndia(x) ::: x is from India.\nBRICS(x) ::: x is from BRICS.\nPerson(x) ::: x is a person.\nPremises:\n∀x (¬China(x) → India(x)) ::: All people who are not from China are from India.\n∀x (India("
    ]
  },
  {
    "id": "FOLIO_train_682",
    "context": "China is one of BRICS and its economy is emerging. India is one of BRICS and its economy is emerging. All people from China speak Chinese. All people from India speak Hindi or English. There is an Indian.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? India's economy is not emerging.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nChina(x) ::: x is from China.\nIndia(x) ::: x is from India.\nBRICS(x) ::: x is one of BRICS.\nEmerging(x) ::: x's economy is emerging.\nSpeak(x, y) ::: x speaks y.\nPerson(x) ::: x is a person.\nPremises:\nChina(china) ∧ BRICS(china) ∧ Emerging(china) ::: China is one of BRICS and its economy is emerging.\nIndia(india) ∧ BRICS(india) ∧ Emerging(india) ::: India is one of BRICS and its economy is emerging.\n∀x (China(x) → Speak(x, chinese)) ::: All people from China speak Chinese.\n∀x (India(x) → (Speak(x, hindi) ∨ Speak(x, english))) ::: All people from India speak Hindi or English.\n∃x Person(x) ::: There is an Indian.\nConclusion:\n¬Emerging(india) ::: India's economy is not emerging.\n------\nProblem:\nAll people who are not from China are from India. All people from India are from China. All people from China are from India. All people from India are from China. All people from China are from India. All people from India are from China. All people from China are from India. All people from India are from China. All people from China are from India. All people from India are from China. All people from China are from India. All people from India are from China. All people from China are from India. All people from India are from China. All people from China are from India. All people from India are from China. All people from China are from India. All people from India are from China. All people from China are from India. All people from India are from China. All people from China are from India. All people from India are from China. All people from China are from India. All people from India are from China. All people from China are from India. All people from India are from China. All people from China"
    ]
  },
  {
    "id": "FOLIO_train_683",
    "context": "China is one of BRICS and its economy is emerging. India is one of BRICS and its economy is emerging. All people from China speak Chinese. All people from India speak Hindi or English. There is an Indian.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There is a person from BRICS speaking Hindi.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nChina(x) ::: x is from China.\nIndia(x) ::: x is from India.\nBRICS(x) ::: x is one of BRICS.\nEconomy(x) ::: x is an economy.\nEmerging(x) ::: x is emerging.\nSpeak(x, y) ::: x speaks y.\nPerson(x) ::: x is a person.\nPremises:\nChina(china) ∧ BRICS(china) ∧ Emerging(china) ::: China is one of BRICS and its economy is emerging.\nIndia(india) ∧ BRICS(india) ∧ Emerging(india) ::: India is one of BRICS and its economy is emerging.\n∀x (China(x) → Speak(x, Chinese)) ::: All people from China speak Chinese.\n∀x (India(x) → (Speak(x, Hindi) ∨ Speak(x, English))) ::: All people from India speak Hindi or English.\n∃x Person(x) ::: There is an Indian.\nConclusion:\n∃x (BRICS(x) ∧ Speak(x, Hindi)) ::: There is a person from BRICS speaking Hindi.\n------\nProblem:\nAll people who are not from China are from India. All people from India are from BRICS. All people from BRICS are from China.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? There is a person from BRICS who is not from China.\n###\nPredicates:\nChina(x) ::: x is from China.\nIndia(x) ::: x is from India.\nBRICS(x) ::: x is from BRICS.\nPerson(x) ::: x is a person.\nPremises:\n∀x (¬China(x) → India(x)) ::: All people who are not from China are from India.\n∀x (India(x) → BRICS(x)) ::: All people from India are from BRICS.\n∀x"
    ]
  },
  {
    "id": "FOLIO_train_684",
    "context": "Daveed Diggs is an actor and film producer. Daveed Diggs played two roles in the musical Hamilton. One of the actors from Hamilton won the best actor award. The actor playing Thomas Jefferson won the best actor award. Daveed Diggs played Thomas Jefferson. Musicals are not films.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Hamilton is a film.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nActor(x) ::: x is an actor.\nFilm(x) ::: x is a film.\nMusical(x) ::: x is a musical.\nPlay(x, y) ::: x plays y.\nWin(x, y) ::: x wins the y award.\nPremises:\nActor(daveed) ∧ Play(daveed, hamilton) ∧ ∃x (Actor(x) ∧ Play(x, hamilton)) ∧ ∃x (Actor(x) ∧ Play(x, hamilton) ∧ Win(x, bestActor)) ::: Daveed Diggs is an actor and film producer. Daveed Diggs played two roles in the musical Hamilton. One of the actors from Hamilton won the best actor award. The actor playing Thomas Jefferson won the best actor award. Daveed Diggs played Thomas Jefferson.\nMusical(hamilton) ∧ ¬Film(hamilton) ::: Musicals are not films.\nConclusion:\nFilm(hamilton) ::: Hamilton is a film.\n------\nProblem:\nThe first person to win the Nobel Prize in Physics was Wilhelm Conrad Röntgen. The first person to win the Nobel Prize in Physics was a German. The first person to win the Nobel Prize in Physics was a physicist. The first person to win the Nobel Prize in Physics was a scientist.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The first person to win the Nobel Prize in Physics was a German scientist.\nBased on the above information, is the following statement true, false, or uncertain? The first person to win the Nobel Prize in Physics was a German physicist.\nBased on the above information, is the following statement true, false, or uncertain? The first person to win the Nobel Prize in Physics was a German scientist who was not a physicist.\n###\nPredicates:\nWin(x, y) ::: x wins the y prize.\nGerman(x) ::: x is a German person.\nScientist(x) ::: x is a scientist.\nPhysicist("
    ]
  },
  {
    "id": "FOLIO_train_685",
    "context": "Daveed Diggs is an actor and film producer. Daveed Diggs played two roles in the musical Hamilton. One of the actors from Hamilton won the best actor award. The actor playing Thomas Jefferson won the best actor award. Daveed Diggs played Thomas Jefferson. Musicals are not films.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Daveed Diggs won the best actor award.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nActor(x) ::: x is an actor.\nFilmProducer(x) ::: x is a film producer.\nPlay(x, y) ::: x plays the role of y.\nWin(x, y) ::: x wins the y award.\nMusical(x) ::: x is a musical.\nFilm(x) ::: x is a film.\nPremises:\nActor(daveed) ∧ FilmProducer(daveed) ∧ Play(daveed, thomasJefferson) ::: Daveed Diggs is an actor and film producer.\n∃x (Actor(x) ∧ Play(x, thomasJefferson)) ∧ ∃y (Actor(y) ∧ Play(y, thomasJefferson) ∧ Win(y, bestActor)) ::: One of the actors from Hamilton won the best actor award. The actor playing Thomas Jefferson won the best actor award.\nPlay(daveed, thomasJefferson) ::: Daveed Diggs played Thomas Jefferson.\n∀x (Musical(x) → ¬Film(x)) ::: Musicals are not films.\nConclusion:\nWin(daveed, bestActor) ::: Daveed Diggs won the best actor award.\n------\nProblem:\nThe first person to win the Nobel Prize in Physics was Wilhelm Conrad Röntgen. The first person to win the Nobel Prize in Physics was a German. The first person to win the Nobel Prize in Physics was a physicist. The first person to win the Nobel Prize in Physics was a scientist.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The first person to win the Nobel Prize in Physics was a German scientist.\n###\nPredicates:\nWin(x, y) ::: x wins the y prize.\nGerman(x) ::: x is a German.\nPhysicist(x) ::: x is a physicist.\nScientist(x) ::: x is a scientist.\nPremises:\nWin(wilhelm, nobelPrizeInPhysics) :::"
    ]
  },
  {
    "id": "FOLIO_train_686",
    "context": "Daveed Diggs is an actor and film producer. Daveed Diggs played two roles in the musical Hamilton. One of the actors from Hamilton won the best actor award. The actor playing Thomas Jefferson won the best actor award. Daveed Diggs played Thomas Jefferson. Musicals are not films.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Hamilton won two awards.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nActor(x) ::: x is an actor.\nFilmProducer(x) ::: x is a film producer.\nPlay(x, y) ::: x plays the role of y.\nWin(x, y) ::: x wins the y award.\nMusical(x) ::: x is a musical.\nFilm(x) ::: x is a film.\nPremises:\nActor(daveed) ∧ FilmProducer(daveed) ∧ Play(daveed, thomasJefferson) ::: Daveed Diggs is an actor and film producer.\n∃x (Actor(x) ∧ Play(x, thomasJefferson)) ∧ ∃y (Actor(y) ∧ Play(y, thomasJefferson)) ∧ ∃z (Actor(z) ∧ Play(z, alexanderHamilton)) ∧ Win(z, bestActor) ::: Daveed Diggs played two roles in the musical Hamilton. One of the actors from Hamilton won the best actor award. The actor playing Thomas Jefferson won the best actor award.\nPlay(daveed, thomasJefferson) ::: Daveed Diggs played Thomas Jefferson.\n∀x (Musical(x) → ¬Film(x)) ::: Musicals are not films.\nConclusion:\nWin(daveed, award) ::: Hamilton won two awards.\n------\nProblem:\nThe first person to win the Nobel Prize in Physics was Wilhelm Röntgen. The first person to win the Nobel Prize in Physics was a German. The first person to win the Nobel Prize in Physics was a physicist. The first person to win the Nobel Prize in Physics was a scientist.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The first person to win the Nobel Prize in Physics was a German scientist.\n###\nPredicates:\nWin(x, y) ::: x wins the y award.\nNobelPrize(x) ::: x is a Nobel Prize.\nPhysics(x) ::: x is a physics."
    ]
  },
  {
    "id": "FOLIO_train_687",
    "context": "Ernest Pohl was a Polish football player. A football player in the Polish First Division has scored over 180 goals. Ernest Pohl scored more than 180 goals in the Polish First Division. Górnik Zabrze's stadium was named after a soccer player from Ruda Śląska. Ernest Pohl is from Ruda Śląska.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Ernest Pohl has not scored more than 180 goals.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPolish(x) ::: x is a Polish person.\nFootballPlayer(x) ::: x is a football player.\nFirstDivision(x) ::: x is a football player in the Polish First Division.\nScore(x, y) ::: x scored y goals.\nStadium(x) ::: x is a stadium.\nName(x, y) ::: x is named after y.\nPremises:\nPolish(ernest) ∧ FootballPlayer(ernest) ∧ Score(ernest, over180) ∧ FirstDivision(ernest) ::: Ernest Pohl was a Polish football player.\n∀x (FirstDivision(x) → Score(x, over180)) ::: A football player in the Polish First Division has scored over 180 goals.\nScore(ernest, over180) ::: Ernest Pohl scored more than 180 goals in the Polish First Division.\nStadium(stadium) ∧ Name(stadium, soccerPlayer) ::: Górnik Zabrze's stadium was named after a soccer player from Ruda Śląska.\nPolish(ernest) ∧ RudaSłąska(ernest) ::: Ernest Pohl is from Ruda Śląska.\nConclusion:\n¬Score(ernest, over180) ::: Ernest Pohl has not scored more than 180 goals.\n------\nProblem:\nA person who is a member of the Communist Party of China is a member of the Chinese Communist Party. A member of the Chinese Communist Party is a member of the Communist Party of China. A member of the Communist Party of China is a member of the Chinese Communist Party. A member of the Communist Party of China is a member of the Chinese Communist Party. A member of the Communist Party of China is a member of the Chinese Communist Party. A member of the Communist Party of China is a member of the Chinese Communist Party. A member of the Communist Party of China is a member of the Chinese Communist Party. A member of the Communist Party of China is a member of the Chinese Communist Party. A member of the Communist Party of China is a member of the Chinese Communist Party. A member of the Communist Party of"
    ]
  },
  {
    "id": "FOLIO_train_688",
    "context": "Ernest Pohl was a Polish football player. A football player in the Polish First Division has scored over 180 goals. Ernest Pohl scored more than 180 goals in the Polish First Division. Górnik Zabrze's stadium was named after a soccer player from Ruda Śląska. Ernest Pohl is from Ruda Śląska.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Górnik Zabrze's stadium was named after Ernest Pohl.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPolish(x) ::: x is a Polish person.\nFootballPlayer(x) ::: x is a football player.\nFirstDivision(x) ::: x is a football player in the Polish First Division.\nScore(x, y) ::: x scored y goals.\nOver(x, y) ::: x scored over y goals.\nStadium(x) ::: x is a stadium.\nName(x, y) ::: x is named after y.\nFrom(x, y) ::: x is from y.\nPremises:\nPolish(ernest) ∧ FootballPlayer(ernest) ∧ Score(ernest, 180) ∧ Over(180, 180) ::: Ernest Pohl was a Polish football player.\n∀x (FirstDivision(x) → FootballPlayer(x)) ::: A football player in the Polish First Division is a football player.\n∀x (Score(x, y) → Over(y, 0)) ::: If x scored y goals, then y is over 0 goals.\n∃x (FirstDivision(x) ∧ Score(x, 180)) ::: A football player in the Polish First Division has scored over 180 goals.\nStadium(gornikZabrze) ∧ Name(gornikZabrze, soccerPlayer) ::: Górnik Zabrze's stadium was named after a soccer player.\nFrom(ernest, rudaŚląska) ::: Ernest Pohl is from Ruda Śląska.\nConclusion:\nName(gornikZabrze, ernest) ::: Górnik Zabrze's stadium was named after Ernest Pohl.\n------\nProblem:\nA person who is a member of the Communist Party of China is a member of the Chinese Communist Party. A member of the Chinese Communist Party is a member of the Communist Party of China. A member of the Communist Party of China is a member of the Chinese Communist Party. A member of the Communist Party of China is a member of the Chinese Communist Party. A member of the Communist Party of China is a member of the Chinese Communist Party. A member"
    ]
  },
  {
    "id": "FOLIO_train_689",
    "context": "Ann J. Land was a member of the Philadelphia City Council and was also a member of the Democratic Party. Ann J. Land ran unopposed for the Philadephia City Council in 1980. People who run unopposed for the Philadelphia City Council are elected to the positions they run for in the same year. Michael Nutter was a political challenger. Ann J. Land defeated Michael Nutter and ran for the Philadelphia City Council in 1987.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Ann J. Land was elected to the Philadelphia City Council in 1980.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMember(x, y) ::: x is a member of y.\nDemocrat(x) ::: x is a member of the Democratic Party.\nRun(x, y) ::: x ran for the position y.\nUnopposed(x) ::: x ran unopposed for the position y.\nElected(x, y) ::: x was elected to the position y.\nChallenger(x) ::: x is a political challenger.\nDefeat(x, y) ::: x defeated y.\nPremises:\nMember(ann, democratic) ∧ Member(ann, philadelphiaCityCouncil) ::: Ann J. Land was a member of the Philadelphia City Council and was also a member of the Democratic Party.\nRun(ann, philadelphiaCityCouncil) ∧ Unopposed(ann) ::: Ann J. Land ran unopposed for the Philadephia City Council in 1980.\nRun(ann, philadelphiaCityCouncil) ∧ Elected(ann, philadelphiaCityCouncil) ∧ Defeat(ann, michael) ::: Ann J. Land defeated Michael Nutter and ran for the Philadelphia City Council in 1987.\nConclusion:\nElected(ann, philadelphiaCityCouncil) ::: Ann J. Land was elected to the Philadelphia City Council in 1980.\n------\nProblem:\nA person is a member of the Democratic Party if and only if the person is a Democrat. A person is a Democrat if and only if the person is a member of the Democratic Party. A person is a member of the Republican Party if and only if the person is a Republican. A person is a Republican if and only if the person is a member of the Republican Party. A person is a member of the Libertarian Party if and only if the person is a Libertarian. A person is a Libertarian if and only if the person is a member of the Libertarian Party. A person is a member of the Green Party if and only if the person is a Green. A person is a Green if and only if the person is a member of the Green Party. A person is a member of the Socialist Party if and only if the person is a Socialist"
    ]
  },
  {
    "id": "FOLIO_train_690",
    "context": "Ann J. Land was a member of the Philadelphia City Council and was also a member of the Democratic Party. Ann J. Land ran unopposed for the Philadephia City Council in 1980. People who run unopposed for the Philadelphia City Council are elected to the positions they run for in the same year. Michael Nutter was a political challenger. Ann J. Land defeated Michael Nutter and ran for the Philadelphia City Council in 1987.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Ann J. Land was elected to the Philadelphia City Council in 1987.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMember(x, y) ::: x is a member of y.\nDemocrat(x) ::: x is a member of the Democratic Party.\nRun(x, y) ::: x ran for the position y.\nUnopposed(x) ::: x ran unopposed for the position y.\nElected(x, y) ::: x was elected to the position y.\nChallenger(x) ::: x is a political challenger.\nDefeat(x, y) ::: x defeated y.\nPremises:\nMember(ann, democratic) ∧ Member(ann, philadelphiaCityCouncil) ::: Ann J. Land was a member of the Philadelphia City Council and was also a member of the Democratic Party.\nRun(ann, philadelphiaCityCouncil) ∧ Unopposed(ann) ::: Ann J. Land ran unopposed for the Philadephia City Council in 1980.\nRun(ann, philadelphiaCityCouncil) ∧ Elected(ann, philadelphiaCityCouncil) ∧ Defeat(ann, michael) ::: Ann J. Land defeated Michael Nutter and ran for the Philadelphia City Council in 1987.\nConclusion:\nElected(ann, philadelphiaCityCouncil) ::: Ann J. Land was elected to the Philadelphia City Council in 1987.\n------"
    ]
  },
  {
    "id": "FOLIO_train_691",
    "context": "Ann J. Land was a member of the Philadelphia City Council and was also a member of the Democratic Party. Ann J. Land ran unopposed for the Philadephia City Council in 1980. People who run unopposed for the Philadelphia City Council are elected to the positions they run for in the same year. Michael Nutter was a political challenger. Ann J. Land defeated Michael Nutter and ran for the Philadelphia City Council in 1987.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There was some member of the Democratic Party elected to the Philadelphia City Council in 1980.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMember(x, y) ::: x is a member of y.\nRun(x, y) ::: x runs for y.\nElected(x, y) ::: x is elected to y.\nDefeat(x, y) ::: x defeats y.\nChallenger(x) ::: x is a political challenger.\nPremises:\nMember(ann, democraticParty) ∧ Run(ann, philadelphiaCityCouncil) ∧ RunUnopposed(ann, philadelphiaCityCouncil) ∧ Elected(ann, philadelphiaCityCouncil) ∧ Run(michael, philadelphiaCityCouncil) ∧ Defeat(ann, michael) ∧ Run(ann, philadelphiaCityCouncil) ∧ Run(michael, philadelphiaCityCouncil) ∧ Run(ann, philadelphiaCityCouncil) ∧ Run(michael, philadelphiaCityCouncil) ::: Ann J. Land was a member of the Philadelphia City Council and was also a member of the Democratic Party. Ann J. Land ran unopposed for the Philadephia City Council in 1980. People who run unopposed for the Philadelphia City Council are elected to the positions they run for in the same year. Michael Nutter was a political challenger. Ann J. Land defeated Michael Nutter"
    ]
  },
  {
    "id": "FOLIO_train_692",
    "context": "Aberdeen won the cup in the 2013 final. Rangers won the cup in 2014 final. Aberdeen and Rangers are different teams. Different teams cannot win the same cup in a given year's final.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Rangers won the cup in 2015.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTeam(x) ::: x is a team.\nWin(x, y) ::: x won the cup in year y.\nDifferent(x, y) ::: x and y are different teams.\nPremises:\nWin(aberdeen, year2013) ∧ Win(rangers, year2014) ::: Aberdeen won the cup in the 2013 final. Rangers won the cup in 2014 final.\nDifferent(aberdeen, rangers) ::: Aberdeen and Rangers are different teams.\n∀x ∀y ∀z (Win(x, y) ∧ Win(y, z) → x = y) ::: Different teams cannot win the same cup in a given year's final.\nConclusion:\nWin(rangers, year2015) ::: Rangers won the cup in 2015.\n------\nProblem:\nA person is a student if and only if the person is enrolled in a university. A person is a student if and only if the person is enrolled in a university. A person is a student if and only if the person is enrolled in a university. A person is a student if and only if the person is enrolled in a university. A person is a student if and only if the person is enrolled in a university. A person is a student if and only if the"
    ]
  },
  {
    "id": "FOLIO_train_693",
    "context": "Aberdeen won the cup in the 2013 final. Rangers won the cup in 2014 final. Aberdeen and Rangers are different teams. Different teams cannot win the same cup in a given year's final.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Rangers won the cup in 2013.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTeam(x) ::: x is a team.\nWin(x, y) ::: x won the cup in year y.\nDifferent(x, y) ::: x and y are different teams.\nPremises:\nWin(aberdeen, year2013) ::: Aberdeen won the cup in the 2013 final.\nWin(rangers, year2014) ::: Rangers won the cup in 2014 final.\nDifferent(aberdeen, rangers) ::: Aberdeen and Rangers are different teams.\nDifferent(x, y) ∧ Win(x, year) ∧ Win(y, year) → ¬(x = y) ::: Different teams cannot win the same cup in a given year's final.\nConclusion:\nWin(rangers, year2013) ::: Rangers won the cup in 2013.\n------\nProblem:\nA person is a student if and only if they are enrolled in a university. A person is a student if and only if they are enrolled in a university. A person is a student if and only if they are enrolled in a university. A person is a student if and only if they are enrolled in a university. A person is a student if and only if they are enrolled in a university. A person is a student if and only if they are enrolled in a university."
    ]
  },
  {
    "id": "FOLIO_train_694",
    "context": "Aberdeen won the cup in the 2013 final. Rangers won the cup in 2014 final. Aberdeen and Rangers are different teams. Different teams cannot win the same cup in a given year's final.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Aberdeen has won a cup before.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTeam(x) ::: x is a team.\nWin(x, y) ::: x won the cup in year y.\nDifferent(x, y) ::: x and y are different teams.\nPremises:\nWin(aberdeen, year2013) ∧ Win(rangers, year2014) ::: Aberdeen won the cup in the 2013 final. Rangers won the cup in 2014 final.\nDifferent(aberdeen, rangers) ::: Aberdeen and Rangers are different teams.\n∀x ∀y (Win(x, y) ∧ Win(y, y)) → x = y ::: Different teams cannot win the same cup in a given year's final.\nConclusion:\nWin(aberdeen, year2012) ::: Aberdeen has won a cup before.\n------\nProblem:\nA person who is a student is a person who is not a teacher. A person who is a teacher is a person who is not a student. A person who is a student is a person who is not a teacher.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? A person who is a student is a person who is not a teacher.\n###\nPredicates:\nStudent(x) ::: x is a student.\nTeacher(x) ::"
    ]
  },
  {
    "id": "FOLIO_train_695",
    "context": "All young working professionals who have regular 9-5 jobs also have pets. Some people who live in Manhattan are young working professionals who have regular 9-5 jobs. All people who have pets are people who have at least one child. People who do not have at least one child are people who own a sports car. Mary either does not own a sports car or, if they do, then they do not have at least one child.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mary is a person who lives in Manhattan.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nYoung(x) ::: x is a young person.\nWorkingProfessional(x) ::: x is a working professional.\nRegular95Job(x) ::: x has a regular 9-5 job.\nPet(x) ::: x has a pet.\nChild(x) ::: x has at least one child.\nSportsCar(x) ::: x owns a sports car.\nManhattan(x) ::: x lives in Manhattan.\nPremises:\n∀x (Young(x) ∧ WorkingProfessional(x) ∧ Regular95Job(x) → Pet(x)) ::: All young working professionals who have regular 9-5 jobs also have pets.\n∃x (Manhattan(x) ∧ Young(x) ∧ WorkingProfessional(x) ∧ Regular95Job(x)) ::: Some people who live in Manhattan are young working professionals who have regular 9-5 jobs.\n∀x (Pet(x) → Child(x)) ::: All people who have pets are people who have at least one child.\n∀x (¬Child(x) → SportsCar(x)) ::: People who do not have at least one child are people who own a sports car.\nMary ⊕ SportsCar(mary) ::: Mary either does not own a sports"
    ]
  },
  {
    "id": "FOLIO_train_696",
    "context": "All young working professionals who have regular 9-5 jobs also have pets. Some people who live in Manhattan are young working professionals who have regular 9-5 jobs. All people who have pets are people who have at least one child. People who do not have at least one child are people who own a sports car. Mary either does not own a sports car or, if they do, then they do not have at least one child.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mary is a person who lives in Manhattan and is a young working professional who has a regular 9-5 job.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nYoung(x) ::: x is a young person.\nWorkingProfessional(x) ::: x is a working professional.\nRegular95Job(x) ::: x has a regular 9-5 job.\nPet(x) ::: x has a pet.\nChild(x) ::: x has at least one child.\nSportsCar(x) ::: x owns a sports car.\nManhattan(x) ::: x lives in Manhattan.\nPremises:\n∀x (Young(x) ∧ WorkingProfessional(x) ∧ Regular95Job(x) → Pet(x)) ::: All young working professionals who have regular 9-5 jobs also have pets.\n∃x (Manhattan(x) ∧ Young(x) ∧ WorkingProfessional(x) ∧ Regular95Job(x)) ::: Some people who live in Manhattan are young working professionals who have regular 9-5 jobs.\n∀x (Pet(x) → Child(x)) ::: All people who have pets are people who have at least one child.\n∀x (¬Child(x) → SportsCar(x)) ::: People who do not have at least one child are people who own a sports car.\nMary ⊕ SportsCar(mary) ::: Mary either does not own a sports"
    ]
  },
  {
    "id": "FOLIO_train_697",
    "context": "All young working professionals who have regular 9-5 jobs also have pets. Some people who live in Manhattan are young working professionals who have regular 9-5 jobs. All people who have pets are people who have at least one child. People who do not have at least one child are people who own a sports car. Mary either does not own a sports car or, if they do, then they do not have at least one child.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Mary is a young working professional who has a regular 9-5 job, then Mary does not live in Manhattan.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nYoung(x) ::: x is a young person.\nWorkingProfessional(x) ::: x is a working professional.\nRegular95Job(x) ::: x has a regular 9-5 job.\nPet(x) ::: x has a pet.\nChild(x) ::: x has at least one child.\nSportsCar(x) ::: x owns a sports car.\nManhattan(x) ::: x lives in Manhattan.\nPremises:\n∀x (Young(x) ∧ WorkingProfessional(x) ∧ Regular95Job(x) → Pet(x)) ::: All young working professionals who have regular 9-5 jobs also have pets.\n∃x (Young(x) ∧ WorkingProfessional(x) ∧ Regular95Job(x) ∧ Manhattan(x)) ::: Some people who live in Manhattan are young working professionals who have regular 9-5 jobs.\n∀x (Pet(x) → Child(x)) ::: All people who have pets are people who have at least one child.\n∀x (¬Child(x) → SportsCar(x)) ::: People who do not have at least one child are people who own a sports car.\nMary ⊕ SportsCar(mary) ::: Mary either does not own a sports"
    ]
  },
  {
    "id": "FOLIO_train_698",
    "context": "Either block design or event-related design. All event-related designs are brain image acquisition. All brain image acquisition is preceded by data processing. Nothing preceded by data processing acquires data. Picture memory is either an event-related design and acquiring data or neither an event-related design nor acquiring data.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Picture memory is preceded by data processing.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlockDesign(x) ::: x is a block design.\nEventRelatedDesign(x) ::: x is an event-related design.\nBrainImageAcquisition(x) ::: x is a brain image acquisition.\nDataProcessing(x) ::: x is a data processing.\nPreceded(x, y) ::: x is preceded by y.\nAcquire(x, y) ::: x acquires y.\nPremises:\nEventRelatedDesign(pictureMemory) ∨ BlockDesign(pictureMemory) ::: Either block design or event-related design.\n∀x (EventRelatedDesign(x) → BrainImageAcquisition(x)) ::: All event-related designs are brain image acquisition.\n∀x (BrainImageAcquisition(x) → Preceded(DataProcessing(x), x)) ::: All brain image acquisition is preceded by data processing.\n∀x (Preceded(DataProcessing(x), x) → ¬Acquire(x, data)) ::: Nothing preceded by data processing acquires data.\n(EventRelatedDesign(pictureMemory) ∧ Acquire(pictureMemory, data)) ⊕ ¬(EventRelatedDesign(pictureMemory) ∨ Acquire(pictureMemory, data)) ::: Picture memory is either an event-related design and acquiring data or neither an event-related design nor acqu"
    ]
  },
  {
    "id": "FOLIO_train_699",
    "context": "Either block design or event-related design. All event-related designs are brain image acquisition. All brain image acquisition is preceded by data processing. Nothing preceded by data processing acquires data. Picture memory is either an event-related design and acquiring data or neither an event-related design nor acquiring data.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Picture memory is a block design.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlockDesign(x) ::: x is a block design.\nEventRelatedDesign(x) ::: x is an event-related design.\nBrainImageAcquisition(x) ::: x is brain image acquisition.\nDataProcessing(x) ::: x is data processing.\nPreceded(x, y) ::: x is preceded by y.\nAcquire(x) ::: x acquires data.\nPremises:\nEventRelatedDesign(pictureMemory) ∧ ¬BlockDesign(pictureMemory) ::: Either block design or event-related design.\n∀x (EventRelatedDesign(x) → BrainImageAcquisition(x)) ::: All event-related designs are brain image acquisition.\n∀x (BrainImageAcquisition(x) → Preceded(DataProcessing(x), x)) ::: All brain image acquisition is preceded by data processing.\n∀x (Preceded(DataProcessing(x), x) → ¬Acquire(x)) ::: Nothing preceded by data processing acquires data.\n(EventRelatedDesign(pictureMemory) ∧ Acquire(pictureMemory)) ⊕ ¬(EventRelatedDesign(pictureMemory) ∧ ¬Acquire(pictureMemory)) ::: Picture memory is either an event-related design and acquiring data or neither an event-related design nor acquiring data.\nConclusion"
    ]
  },
  {
    "id": "FOLIO_train_700",
    "context": "Either block design or event-related design. All event-related designs are brain image acquisition. All brain image acquisition is preceded by data processing. Nothing preceded by data processing acquires data. Picture memory is either an event-related design and acquiring data or neither an event-related design nor acquiring data.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Picture memory is either a block design or acquiring data.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlockDesign(x) ::: x is a block design.\nEventRelatedDesign(x) ::: x is an event-related design.\nBrainImageAcquisition(x) ::: x is a brain image acquisition.\nDataProcessing(x) ::: x is a data processing.\nPreceded(x, y) ::: x is preceded by y.\nAcquire(x, y) ::: x acquires y.\nPremises:\nEventRelatedDesign(pictureMemory) ∧ ¬BlockDesign(pictureMemory) ::: Either block design or event-related design.\n∀x (EventRelatedDesign(x) → BrainImageAcquisition(x)) ::: All event-related designs are brain image acquisition.\n∀x (BrainImageAcquisition(x) → Preceded(DataProcessing(x), x)) ::: All brain image acquisition is preceded by data processing.\n∀x (Preceded(DataProcessing(x), y) → ¬Acquire(x, y)) ::: Nothing preceded by data processing acquires data.\n(EventRelatedDesign(pictureMemory) ∧ Acquire(pictureMemory, data)) ⊕ ¬(EventRelatedDesign(pictureMemory) ∧ ¬Acquire(pictureMemory, data)) ::: Picture memory is either an event-related design and acquiring data or neither an event-related design nor acquiring data.\nConclusion:\nBlockDesign(pictureMemory) ∨ Acquire(pictureMemory, data) ::: Picture memory is either a block design or acquiring data.\n------"
    ]
  },
  {
    "id": "FOLIO_train_701",
    "context": "Either block design or event-related design. All event-related designs are brain image acquisition. All brain image acquisition is preceded by data processing. Nothing preceded by data processing acquires data. Picture memory is either an event-related design and acquiring data or neither an event-related design nor acquiring data.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If picture memory is not acquiring data, then picture memory is a block design and acquiring data.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlockDesign(x) ::: x is a block design.\nEventRelatedDesign(x) ::: x is an event-related design.\nBrainImageAcquisition(x) ::: x is brain image acquisition.\nDataProcessing(x) ::: x is data processing.\nPreceded(x, y) ::: x is preceded by y.\nAcquire(x) ::: x acquires data.\nPremises:\nEventRelatedDesign(pictureMemory) ∨ BlockDesign(pictureMemory) ::: Either block design or event-related design.\n∀x (EventRelatedDesign(x) → BrainImageAcquisition(x)) ::: All event-related designs are brain image acquisition.\n∀x (BrainImageAcquisition(x) → Preceded(DataProcessing(x), x)) ::: All brain image acquisition is preceded by data processing.\n∀x (Preceded(DataProcessing(x), x) → ¬Acquire(x)) ::: Nothing preceded by data processing acquires data.\n(EventRelatedDesign(pictureMemory) ∧ Acquire(pictureMemory)) ⊕ ¬(EventRelatedDesign(pictureMemory) ∨ Acquire(pictureMemory)) ::: Picture memory is either an event-related design and acquiring data or neither an event-related design nor acquiring data.\nConclusion:\n(BlockDesign(pictureMemory) ∧ Acquire(pictureMemory)) → (EventRelatedDesign(pictureMemory) ∧ Acquire(pictureMemory)) ::: If picture memory is not acquiring data,"
    ]
  },
  {
    "id": "FOLIO_train_702",
    "context": "The USS Lyon was a US Navy ship involved in WWII. All ships involved in WWII are currently decommissioned or in a museum.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The USS Lyon is decommissioned.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nShip(x) ::: x is a ship.\nInvolvedInWWII(x) ::: x is involved in WWII.\nCurrentlyDecommissioned(x) ::: x is currently decommissioned.\nInAMuseum(x) ::: x is in a museum.\nPremises:\nShip(lyon) ∧ InvolvedInWWII(lyon) ::: The USS Lyon was a US Navy ship involved in WWII.\n∀x (InvolvedInWWII(x) → (CurrentlyDecommissioned(x) ∨ InAMuseum(x))) ::: All ships involved in WWII are currently decommissioned or in a museum.\nConclusion:\nCurrentlyDecommissioned(lyon) ::: The USS Lyon is decommissioned.\n------\nProblem:\nThe USS Lyon was a US Navy ship involved in WWII. All ships involved in WWII are currently decommissioned or in a museum.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The USS Lyon is in a museum.\n###\nPredicates:\nShip(x) ::: x is a ship.\nInvolvedInWWII(x) ::: x is involved in WWII.\nCurrentlyDecommissioned(x) ::: x is currently decommissioned.\nInAMuseum(x) ::: x is in a museum.\nPremises:\nShip(lyon) ∧ InvolvedInWWII(lyon) ::: The USS Lyon"
    ]
  },
  {
    "id": "FOLIO_train_703",
    "context": "All disposable chopsticks are made from trees. Some chopsticks are eco-friendly. Either disposable chopsticks or reusable chopsticks. If chopsticks are made from metals, then they are not made from plastics. All reusable chopsticks are made from metal. Chopsticks at restaurants are either made from metals and made from plastics, or neither made from metals nor made from plastics.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Chopsticks at restaurants are eco-friendly.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDisposable(x) ::: x is a disposable chopstick.\nMadeFrom(x, y) ::: x is made from y.\nEcoFriendly(x) ::: x is eco-friendly.\nChopsticks(x) ::: x is a chopstick.\nRestaurant(x) ::: x is a restaurant.\nMetal(x) ::: x is a metal.\nPlastic(x) ::: x is a plastic.\nPremises:\n∀x (Disposable(x) → MadeFrom(x, tree)) ::: All disposable chopsticks are made from trees.\n∃x (Chopsticks(x) ∧ EcoFriendly(x)) ::: Some chopsticks are eco-friendly.\nDisposable(x) ∨ Reusable(x) ::: Either disposable chopsticks or reusable chopsticks.\n∀x (MadeFrom(x, metal) → ¬MadeFrom(x, plastic)) ::: If chopsticks are made from metals, then they are not made from plastics.\n∀x (Reusable(x) → MadeFrom(x, metal)) ::: All reusable chopsticks are made from metal.\n∀x (Chopsticks(x) ∧ Restaurant(x) → (MadeFrom(x, metal) ∨ MadeFrom(x, plastic))) ::: Chopsticks at restaurants are either made from metals and made from plastics, or neither made from metals nor"
    ]
  },
  {
    "id": "FOLIO_train_704",
    "context": "All disposable chopsticks are made from trees. Some chopsticks are eco-friendly. Either disposable chopsticks or reusable chopsticks. If chopsticks are made from metals, then they are not made from plastics. All reusable chopsticks are made from metal. Chopsticks at restaurants are either made from metals and made from plastics, or neither made from metals nor made from plastics.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Chopsticks at restaurants are eco-friendly or made from trees.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDisposable(x) ::: x is a disposable chopstick.\nMadeFrom(x, y) ::: x is made from y.\nEcoFriendly(x) ::: x is eco-friendly.\nReusable(x) ::: x is a reusable chopstick.\nMetal(x) ::: x is a metal.\nPlastic(x) ::: x is a plastic.\nRestaurant(x) ::: x is a restaurant.\nPremises:\n∀x (Disposable(x) → MadeFrom(x, tree)) ::: All disposable chopsticks are made from trees.\n∃x (Chopstick(x) ∧ EcoFriendly(x)) ::: Some chopsticks are eco-friendly.\nDisposable(x) ∨ Reusable(x) ::: Either disposable chopsticks or reusable chopsticks.\n∀x (MadeFrom(x, metal) → ¬MadeFrom(x, plastic)) ::: If chopsticks are made from metals, then they are not made from plastics.\n∀x (Reusable(x) → MadeFrom(x, metal)) ::: All reusable chopsticks are made from metal.\n∀x (Restaurant(x) → (MadeFrom(x, metal) ∨ MadeFrom(x, plastic))) ::: Chopsticks at restaurants are either made from metals and made from plastics, or neither made from metals nor made from plastics.\nConclusion"
    ]
  },
  {
    "id": "FOLIO_train_705",
    "context": "All disposable chopsticks are made from trees. Some chopsticks are eco-friendly. Either disposable chopsticks or reusable chopsticks. If chopsticks are made from metals, then they are not made from plastics. All reusable chopsticks are made from metal. Chopsticks at restaurants are either made from metals and made from plastics, or neither made from metals nor made from plastics.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Chopsticks at restaurants are made from plastics or made from trees, then Chopsticks at restaurants are made from plastics and are eco-friendly.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDisposable(x) ::: x is a disposable chopstick.\nMadeFrom(x, y) ::: x is made from y.\nEcoFriendly(x) ::: x is eco-friendly.\nReusable(x) ::: x is a reusable chopstick.\nMetal(x) ::: x is a metal.\nPlastic(x) ::: x is a plastic.\nRestaurant(x) ::: x is a restaurant.\nPremises:\n∀x (Disposable(x) → MadeFrom(x, tree)) ::: All disposable chopsticks are made from trees.\n∃x (Chopstick(x) ∧ EcoFriendly(x)) ::: Some chopsticks are eco-friendly.\nDisposable(x) ∨ Reusable(x) ::: Either disposable chopsticks or reusable chopsticks.\n∀x (MadeFrom(x, metal) → ¬MadeFrom(x, plastic)) ::: If chopsticks are made from metals, then they are not made from plastics.\n∀x (Reusable(x) → MadeFrom(x, metal)) ::: All reusable chopsticks are made from metal.\n∀x (Restaurant(x) → (MadeFrom(Chopstick(x), metal) ∨ MadeFrom(Chopstick(x), plastic))) ::: Chopsticks at restaurants are either made from metals and made from plastics, or neither made from metals nor made"
    ]
  },
  {
    "id": "FOLIO_train_706",
    "context": "Anything that is lazy is unproductive. No one unproductive is an energetic person. If something is a sloth, then it is lazy. Some animals are sloths. Sid is not either an energetic person or a sloth.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Sid is an animal.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLazy(x) ::: x is lazy.\nUnproductive(x) ::: x is unproductive.\nEnergetic(x) ::: x is an energetic person.\nSloth(x) ::: x is a sloth.\nAnimal(x) ::: x is an animal.\nPremises:\n∀x (Lazy(x) → Unproductive(x)) ::: Anything that is lazy is unproductive.\n∀x (Unproductive(x) → ¬Energetic(x)) ::: No one unproductive is an energetic person.\n∀x (Sloth(x) → Lazy(x)) ::: If something is a sloth, then it is lazy.\n∃x (Animal(x) ∧ Sloth(x)) ::: Some animals are sloths.\n¬(Energetic(sid) ∨ Sloth(sid)) ::: Sid is not either an energetic person or a sloth.\nConclusion:\nAnimal(sid) ::: Sid is an animal.\n------\nProblem:\nAnything that is a mammal is a vertebrate. No vertebrate is a fish. If something is a mammal, then it is a warm-blooded animal. Some animals are mammals.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Some animals are fish.\n###\nPredicates:\nMammal(x) ::: x is a mammal.\nVertebrate(x) ::: x is a verte"
    ]
  },
  {
    "id": "FOLIO_train_707",
    "context": "Anything that is lazy is unproductive. No one unproductive is an energetic person. If something is a sloth, then it is lazy. Some animals are sloths. Sid is not either an energetic person or a sloth.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Sid is an energetic person and an animal.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLazy(x) ::: x is lazy.\nUnproductive(x) ::: x is unproductive.\nEnergetic(x) ::: x is an energetic person.\nSloth(x) ::: x is a sloth.\nAnimal(x) ::: x is an animal.\nPremises:\n∀x (Lazy(x) → Unproductive(x)) ::: Anything that is lazy is unproductive.\n∀x (Unproductive(x) → ¬Energetic(x)) ::: No one unproductive is an energetic person.\n∀x (Sloth(x) → Lazy(x)) ::: If something is a sloth, then it is lazy.\n∃x (Animal(x) ∧ Sloth(x)) ::: Some animals are sloths.\n¬(Energetic(sid) ∧ Sloth(sid)) ::: Sid is not either an energetic person or a sloth.\nConclusion:\nEnergetic(sid) ∧ Animal(sid) ::: Sid is an energetic person and an animal.\n------\nProblem:\nAnyone who is a student is a person. Some people are not students. Some people are not persons.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Some people are not students and persons.\n###\nPredicates:\nStudent(x) ::: x is a student.\nPerson(x) ::: x is a person.\nPremises:\n∀x (Student"
    ]
  },
  {
    "id": "FOLIO_train_708",
    "context": "Anything that is lazy is unproductive. No one unproductive is an energetic person. If something is a sloth, then it is lazy. Some animals are sloths. Sid is not either an energetic person or a sloth.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Sid is either an animal or unproductive, then Sid is not an energetic person.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLazy(x) ::: x is lazy.\nUnproductive(x) ::: x is unproductive.\nEnergetic(x) ::: x is an energetic person.\nSloth(x) ::: x is a sloth.\nAnimal(x) ::: x is an animal.\nPremises:\n∀x (Lazy(x) → Unproductive(x)) ::: Anything that is lazy is unproductive.\n∀x (Unproductive(x) → ¬Energetic(x)) ::: No one unproductive is an energetic person.\n∀x (Sloth(x) → Lazy(x)) ::: If something is a sloth, then it is lazy.\n∃x (Animal(x) ∧ Sloth(x)) ::: Some animals are sloths.\n¬(Energetic(sid) ∨ Sloth(sid)) ::: Sid is not either an energetic person or a sloth.\nConclusion:\n(Unproductive(sid) ∨ Animal(sid)) → ¬Energetic(sid) ::: If Sid is either an animal or unproductive, then Sid is not an energetic person.\n------\nProblem:\nAnyone who is a student is a person. Some people are not students. Some people are not persons.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? If someone is a person, then that person is a student.\n###\nPredicates:\nStudent(x) ::: x is a student"
    ]
  },
  {
    "id": "FOLIO_train_709",
    "context": "European soccer clubs can attend UCL, UEL and UECL. A soccer club eligible to attend UCL has a higher ranking than a soccer club eligible to attend UEL. A soccer club eligible to attend UEL has a higher ranking than a soccer club eligible to attend UECL. Manchester United and Machester City are both European soccer clubs. Manchester United is eligible to attend UEL next season. Manchester City is eligible to attend UCL next season.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Manchester City has a higher ranking than Manchester United.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEUClub(x) ::: x is a European soccer club.\nUCL(x) ::: x is eligible to attend UCL.\nUEL(x) ::: x is eligible to attend UEL.\nUECL(x) ::: x is eligible to attend UECL.\nRanking(x, y) ::: x has a higher ranking than y.\nPremises:\n∀x (EUClub(x) → (UCL(x) ∨ UEL(x) ∨ UECL(x))) ::: European soccer clubs can attend UCL, UEL and UECL.\n∀x ∀y (UCL(x) ∧ UCL(y) → Ranking(x, y)) ::: A soccer club eligible to attend UCL has a higher ranking than a soccer club eligible to attend UEL.\n∀x ∀y (UEL(x) ∧ UEL(y) → Ranking(x, y)) ::: A soccer club eligible to attend UEL has a higher ranking than a soccer club eligible to attend UECL.\nEUClub(manchesterUnited) ∧ EUClub(manchesterCity) ::: Manchester United and Machester City are both European soccer clubs.\nUEL(manchesterUnited) ::: Manchester United is eligible to attend UEL next season.\nUCL(manchesterCity) ::: Manchester City is eligible to attend UCL next season.\nConclusion:\nRanking(manchesterCity, manchesterUnited) ::: Manchester City has a higher ranking than Manchester United."
    ]
  },
  {
    "id": "FOLIO_train_710",
    "context": "If a person coach a football club, the person is a football coach. If a person has a position in a club for a position in a year, and the club is in NFL in the same year, the person plays in NFL. Minnesota Vikings is a football club. Dennis Green coached Minnesota Vikings. Cris Carter had 13 touchdown receptions. Minnesota Vikings was in the National Football League in 1997. John Randle was Minnesota Vikings defensive tackle in 1997.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Dennis Green is a football coach.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCoach(x) ::: x is a football coach.\nFootballClub(x) ::: x is a football club.\nPosition(x, y) ::: x has a position in club y.\nClub(x, y) ::: x is a club in year y.\nNFL(x) ::: x is in NFL.\nPlay(x, y) ::: x plays in y.\nPremises:\n∀x (Coach(x) → FootballClub(x)) ::: If a person coach a football club, the person is a football coach.\n∀x ∀y ∀z (Position(x, y) ∧ Club(y, z) ∧ NFL(z)) → Play(x, NFL) ::: If a person has a position in a club for a position in a year, and the club is in NFL in the same year, the person plays in NFL.\nFootballClub(minnesotaVikings) ::: Minnesota Vikings is a football club.\nCoach(dennisGreen) ∧ Position(dennisGreen, minnesotaVikings) ::: Dennis Green coached Minnesota Vikings.\n∃x (Position(crisCarter, x) ∧ Club(x, year1997) ∧ NFL(year1997)) ∧ 13(crisCarter, touchdownReceptions) ::: Cris Carter had 13 touchdown receptions.\nClub(minnesotaVikings, year1997) ∧ NFL(year1997) ::: Minnesota Vikings was in the National Football League in 1997.\nPosition(johnRandle, minnesotaVikings) ∧ Club(minnesotaVikings, year1997) ∧ NFL(year1997) ∧ DefensiveTackle(johnRandle) ::: John Randle was Minnesota Vikings defensive tackle in 1997.\nConclusion:\nCoach(dennisGreen) ::: Dennis Green is a football coach.\n------"
    ]
  },
  {
    "id": "FOLIO_train_711",
    "context": "If a person coach a football club, the person is a football coach. If a person has a position in a club for a position in a year, and the club is in NFL in the same year, the person plays in NFL. Minnesota Vikings is a football club. Dennis Green coached Minnesota Vikings. Cris Carter had 13 touchdown receptions. Minnesota Vikings was in the National Football League in 1997. John Randle was Minnesota Vikings defensive tackle in 1997.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? John Randle didn't play in the National Football League.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCoach(x, y) ::: x coach y.\nFootballClub(x) ::: x is a football club.\nFootballCoach(x) ::: x is a football coach.\nPosition(x, y, z) ::: x has a position in y for z.\nClub(x, y, z) ::: x is a club for y in z.\nNFL(x, y) ::: x is in NFL in y.\nPlay(x, y) ::: x plays in y.\nPremises:\n∀x (Coach(x, y) → FootballCoach(x)) ::: If a person coach a football club, the person is a football coach.\n∀x ∀y ∀z (Position(x, y, z) ∧ Club(y, z, nfl) → Play(x, nfl)) ::: If a person has a position in a club for a position in a year, and the club is in NFL in the same year, the person plays in NFL.\nFootballClub(minnesotaVikings) ::: Minnesota Vikings is a football club.\nCoach(dennisGreen, minnesotaVikings) ::: Dennis Green coached Minnesota Vikings.\n∃x ∃y ∃z (Position(x, y, z) ∧ Club(y, z, 1997) ∧ NFL(y, z)) ::: Minnesota Vikings was in the National Football League in 1997.\n∃x (FootballClub(x) ∧ Position(johnRandle, x, 1997) ∧ Club(x, 1997, nfl)) ::: John Randle was Minnesota Vikings defensive tackle in 1997.\n∃x (FootballClub(x) ∧ Position(crisCarter, x, 1997) ∧ Club(x, 1997, nfl) ∧ ∃y (Position(y, x, 199"
    ]
  },
  {
    "id": "FOLIO_train_712",
    "context": "If a person coach a football club, the person is a football coach. If a person has a position in a club for a position in a year, and the club is in NFL in the same year, the person plays in NFL. Minnesota Vikings is a football club. Dennis Green coached Minnesota Vikings. Cris Carter had 13 touchdown receptions. Minnesota Vikings was in the National Football League in 1997. John Randle was Minnesota Vikings defensive tackle in 1997.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Cris Carter played for Minnesota Vikings.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCoach(x, y) ::: x coach y.\nFootballClub(x) ::: x is a football club.\nFootballCoach(x) ::: x is a football coach.\nPosition(x, y, z) ::: x has a position in y for z.\nClub(x, y) ::: x is a club for y.\nYear(x) ::: x is a year.\nNFL(x) ::: x is in NFL.\nPlay(x, y) ::: x plays for y.\nPremises:\n∀x (Coach(x, y) → FootballCoach(x)) ::: If a person coach a football club, the person is a football coach.\n∀x ∀y ∀z (Position(x, y, z) ∧ Club(y, NFL) ∧ Year(z)) → Play(x, y) ::: If a person has a position in a club for a position in a year, and the club is in NFL in the same year, the person plays in NFL.\nFootballClub(minnesotaVikings) ::: Minnesota Vikings is a football club.\nCoach(dennisGreen, minnesotaVikings) ::: Dennis Green coached Minnesota Vikings.\n∃x ∃y ∃z (Position(x, y, z) ∧ Club(y, NFL) ∧ Year(z) ∧ CrisCarter = x) ::: Cris Carter had 13 touchdown receptions.\nClub(minnesotaVikings, NFL) ∧ Year(1997) ::: Minnesota Vikings was in the National Football League in 1997.\nDefensiveTackle(johnRandle, minnesotaVikings, 1997) ::: John Randle was Minnesota Vikings defensive tackle in 1997.\nConclusion:\nPlay(crisCarter, minnesotaVikings) ::: Cris Carter played for Minnesota Vikings.\n------\nProblem:\nIf a person is a student, the person is a"
    ]
  },
  {
    "id": "FOLIO_train_713",
    "context": "All cats are cute. Ghosts do not exist. An animal is either a cat or a dog. Nothing that barks is lovely. If something is a dog, then it barks. Grace is either a cat and a dog, or neither a cat nor a dog.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Grace is a ghost.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCat(x) ::: x is a cat.\nDog(x) ::: x is a dog.\nGhost(x) ::: x is a ghost.\nBark(x) ::: x barks.\nLovely(x) ::: x is lovely.\nPremises:\n∀x (Cat(x) → Cute(x)) ::: All cats are cute.\n¬Ghost(x) ::: Ghosts do not exist.\n∀x (Animal(x) → (Cat(x) ∨ Dog(x))) ::: An animal is either a cat or a dog.\n∀x (Dog(x) → Bark(x)) ::: Nothing that barks is lovely.\n∀x (Dog(x) → Bark(x)) ::: If something is a dog, then it barks.\nGrace(cat) ∧ Grace(dog) ∨ ¬Grace(cat) ∧ ¬Grace(dog) ::: Grace is either a cat and a dog, or neither a cat nor a dog.\nConclusion:\nGhost(grace) ::: Grace is a ghost.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine and a person"
    ]
  },
  {
    "id": "FOLIO_train_714",
    "context": "All cats are cute. Ghosts do not exist. An animal is either a cat or a dog. Nothing that barks is lovely. If something is a dog, then it barks. Grace is either a cat and a dog, or neither a cat nor a dog.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Grace is either both cute and lovely, or neither cute nor lovely, then Grace is either a dog or a ghost.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCat(x) ::: x is a cat.\nDog(x) ::: x is a dog.\nCute(x) ::: x is cute.\nLovely(x) ::: x is lovely.\nGhost(x) ::: x is a ghost.\nBark(x) ::: x barks.\nPremises:\n∀x (Cat(x) → Cute(x)) ::: All cats are cute.\n¬Ghost(x) ::: Ghosts do not exist.\n∀x (Dog(x) → Bark(x)) ::: An animal is either a cat or a dog.\n∀x (Bark(x) → ¬Lovely(x)) ::: Nothing that barks is lovely.\n∀x (Dog(x) → Bark(x)) ::: If something is a dog, then it barks.\nGrace(cat) ∧ Grace(dog) ⊕ ¬(Grace(cat) ∨ Grace(dog)) ::: Grace is either a cat and a dog, or neither a cat nor a dog.\nConclusion:\n(Grace(cute) ∧ Grace(lovely)) ⊕ ¬(Grace(cute) ∨ Grace(lovely)) → (Grace(dog) ∨ Grace(ghost)) ::: If Grace is either both cute and lovely, or neither cute nor lovely, then Grace is either a dog or a ghost.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement"
    ]
  },
  {
    "id": "FOLIO_train_715",
    "context": "All cats are cute. Ghosts do not exist. An animal is either a cat or a dog. Nothing that barks is lovely. If something is a dog, then it barks. Grace is either a cat and a dog, or neither a cat nor a dog.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Grace is not both a ghost and lovely, then Grace is either a cat or cute.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCat(x) ::: x is a cat.\nDog(x) ::: x is a dog.\nGhost(x) ::: x is a ghost.\nLovely(x) ::: x is lovely.\nBark(x) ::: x barks.\nPremises:\n∀x (Cat(x) → Cute(x)) ::: All cats are cute.\n¬Ghost(x) ::: Ghosts do not exist.\n∀x (Animal(x) → (Cat(x) ∨ Dog(x))) ::: An animal is either a cat or a dog.\n∀x (Dog(x) → Bark(x)) ::: Nothing that barks is lovely.\n∀x (Dog(x) → Bark(x)) ::: If something is a dog, then it barks.\nGrace(cat) ∧ Grace(dog) ⊕ ¬(Grace(cat) ∨ Grace(dog)) ::: Grace is either a cat and a dog, or neither a cat nor a dog.\nConclusion:\n¬(Grace(ghost) ∧ Lovely(grace)) → (Grace(cat) ∨ Cute(grace)) ::: If Grace is not both a ghost and lovely, then Grace is either a cat or cute.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is"
    ]
  },
  {
    "id": "FOLIO_train_716",
    "context": "Shafaq-Asiman is a large complex of offshore geological structures in the Caspian Sea. Baku is northwest of Shafaq-Asiman. If place A is northwest of place B, then place B is southeast of place A.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Baku is southeast of Shafaq-Asiman.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nNorthwest(x, y) ::: x is northwest of y.\nSoutheast(x, y) ::: x is southeast of y.\nPlace(x) ::: x is a place.\nPremises:\nPlace(shafaqAsiman) ∧ Place(baku) ::: Shafaq-Asiman is a large complex of offshore geological structures in the Caspian Sea. Baku is northwest of Shafaq-Asiman.\n∀x ∀y (Northwest(x, y) → Southeast(y, x)) ::: If place A is northwest of place B, then place B is southeast of place A.\nConclusion:\nSoutheast(baku, shafaqAsiman) ::: Baku is southeast of Shafaq-Asiman.\n------\nProblem:\nA person is a student if and only if the person is enrolled in a university. A person is a student if and only if the person is enrolled in a college. A person is a student if and only if the person is enrolled in a high school. A person is a student if and only if the person is enrolled in a middle school. A person is a student if and only if the person is enrolled in a primary school. A person is a student if and only if the person is enrolled in a kindergarten. A person is a student if and only if the person is enrolled in a nursery school. A person is a student if and only if the person is enrolled in a preschool. A person is a student if and only if the person is enrolled in a daycare. A person is a student if and only if the person is enrolled in a playgroup. A person is a student if and only if the person is enrolled in a toddler group. A person is a student if and only if the person is enrolled in a creche. A person is a student if and only if the person is enrolled in a crèche. A person is a student if and only if the person is enrolled in a crèche. A person is a student if and only if the person is enrolled in a crè"
    ]
  },
  {
    "id": "FOLIO_train_717",
    "context": "Shafaq-Asiman is a large complex of offshore geological structures in the Caspian Sea. Baku is northwest of Shafaq-Asiman. If place A is northwest of place B, then place B is southeast of place A.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A large complex is southeast of Baku.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nNorthwest(x, y) ::: x is northwest of y.\nSoutheast(x, y) ::: x is southeast of y.\nLarge(x) ::: x is a large complex.\nPlace(x) ::: x is a place.\nPremises:\nPlace(shafaqAsiman) ∧ Place(baku) ∧ Northwest(shafaqAsiman, baku) ::: Shafaq-Asiman is a large complex of offshore geological structures in the Caspian Sea.\n∀x ∀y (Northwest(x, y) → Southeast(y, x)) ::: If place A is northwest of place B, then place B is southeast of place A.\nConclusion:\nLarge(baku) ::: A large complex is southeast of Baku.\n------\nProblem:\nThe 1992 Summer Olympics were held in Barcelona, Spain. The 1996 Summer Olympics were held in Atlanta, Georgia. The 2000 Summer Olympics were held in Sydney, Australia. The 2004 Summer Olympics were held in Athens, Greece. The 2008 Summer Olympics were held in Beijing, China. The 2012 Summer Olympics were held in London, England. The 2016 Summer Olympics were held in Rio de Janeiro, Brazil. The 2020 Summer Olympics were held in Tokyo, Japan.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The 2000 Summer Olympics were held in Athens, Greece.\nBased on the above information, is the following statement true, false, or uncertain? The 2000 Summer Olympics were held in London, England.\nBased on the above information, is the following statement true, false, or uncertain? The 2000 Summer Olympics were held in Rio de Janeiro, Brazil.\nBased on the above information, is the following statement true, false, or uncertain? The 2000 Summer Olympics were held in Tokyo, Japan.\nBased on the above information, is the following statement true, false, or uncertain? The 2000"
    ]
  },
  {
    "id": "FOLIO_train_718",
    "context": "Shafaq-Asiman is a large complex of offshore geological structures in the Caspian Sea. Baku is northwest of Shafaq-Asiman. If place A is northwest of place B, then place B is southeast of place A.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Baku is not northwest of an offshore geological structures.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nNorthwest(x, y) ::: x is northwest of y.\nSoutheast(x, y) ::: x is southeast of y.\nOffshore(x) ::: x is an offshore geological structures.\nPremises:\nNorthwest(baku, shafaqAsiman) ::: Baku is northwest of Shafaq-Asiman.\n∀x ∀y (Northwest(x, y) → Southeast(y, x)) ::: If place A is northwest of place B, then place B is southeast of place A.\nConclusion:\n¬Northwest(baku, offshore) ::: Baku is not northwest of an offshore geological structures.\n------\nProblem:\nThe 1992 Summer Olympics were held in Barcelona, Spain. The 1996 Summer Olympics were held in Atlanta, Georgia. The 2000 Summer Olympics were held in Sydney, Australia. The 2004 Summer Olympics were held in Athens, Greece. The 2008 Summer Olympics were held in Beijing, China. The 2012 Summer Olympics were held in London, England. The 2016 Summer Olympics were held in Rio de Janeiro, Brazil. The 2020 Summer Olympics were held in Tokyo, Japan.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The 2020 Summer Olympics were held in a country that is not in Europe.\n###\nPredicates:\nSummerOlympics(x) ::: x is a Summer Olympics.\nHeld(x, y) ::: x was held in country y.\nCountry(x) ::: x is a country.\nEurope(x) ::: x is in Europe.\nPremises:\nHeld(1992SummerOlympics, barcelona) ∧ Held(1996SummerOlympics, atlanta) ∧ Held(2000SummerOlympics, sydney) ∧ Held(2004SummerOlympics, athens) ��"
    ]
  },
  {
    "id": "FOLIO_train_719",
    "context": "Herodicus was a Greek physician, dietician, sophist, and gymnastic-master. Herodicus was born in the city of Selymbria. Selymbria is a colony of the city-state Megara. One of the tutors of Hippocrates was Herodicus. Massages were recommended by Herodicus. Some of theories of Herodicus are considered to be the foundation of sports medicine.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Herodicus tutored Hippocrates.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreek(x) ::: x is a Greek person.\nPhysician(x) ::: x is a physician.\nDietician(x) ::: x is a dietician.\nSophist(x) ::: x is a sophist.\nGymnasticMaster(x) ::: x is a gymnastic-master.\nCity(x) ::: x is a city.\nColony(x, y) ::: x is a colony of y.\nTutor(x, y) ::: x is a tutor of y.\nMassage(x) ::: x is a massage.\nRecommend(x, y) ::: x recommends y.\nTheory(x) ::: x is a theory.\nConsider(x, y) ::: x considers y.\nPremises:\nGreek(herodicus) ∧ Physician(herodicus) ∧ Dietician(herodicus) ∧ Sophist(herodicus) ∧ GymnasticMaster(herodicus) ::: Herodicus was a Greek physician, dietician, sophist, and gymnastic-master.\nCity(selymbria) ∧ Greek(selymbria) ∧ Colony(selymbria, megara) ::: Selymbria is a colony of the city-state Megara.\nTutor(herodicus, hippocrates) ∧ Greek(hippocrates) ::: One of the tutors of Hippocrates was Herodicus.\nMassage(massage) ∧ Recommend(herodicus, massage) ::: Massages were recommended by Herodicus.\nTheory(theory) ∧ Consider(herodicus, theory) ::: Some of theories of Herodicus are considered to be the foundation of sports medicine.\nConclusion:\nTutor(hippocrates, herodicus) ::: Herodicus tutored Hippocrates.\n------\nProblem:\nThe first person to use the term \"computer\" was Charles Babbage. Charles Babbage was an English mathematician, philos"
    ]
  },
  {
    "id": "FOLIO_train_720",
    "context": "Herodicus was a Greek physician, dietician, sophist, and gymnastic-master. Herodicus was born in the city of Selymbria. Selymbria is a colony of the city-state Megara. One of the tutors of Hippocrates was Herodicus. Massages were recommended by Herodicus. Some of theories of Herodicus are considered to be the foundation of sports medicine.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Herodicus was tutored by Hippocrates.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreek(x) ::: x is a Greek person.\nPhysician(x) ::: x is a physician.\nDietician(x) ::: x is a dietician.\nSophist(x) ::: x is a sophist.\nGymnasticMaster(x) ::: x is a gymnastic-master.\nCity(x) ::: x is a city.\nColony(x, y) ::: x is a colony of y.\nTutor(x, y) ::: x is a tutor of y.\nMassage(x) ::: x is a massage.\nRecommend(x, y) ::: x recommends y.\nTheory(x) ::: x is a theory.\nConsider(x, y) ::: x considers y.\nPremises:\nGreek(herodicus) ∧ Physician(herodicus) ∧ Dietician(herodicus) ∧ Sophist(herodicus) ∧ GymnasticMaster(herodicus) ::: Herodicus was a Greek physician, dietician, sophist, and gymnastic-master.\nCity(selymbria) ∧ Greek(selymbria) ∧ Colony(selymbria, megara) ::: Selymbria is a colony of the city-state Megara.\nTutor(herodicus, hippocrates) ∧ Greek(hippocrates) ::: One of the tutors of Hippocrates was Herodicus.\nMassage(massage) ∧ Recommend(herodicus, massage) ::: Massages were recommended by Herodicus.\nTheory(theory) ∧ Consider(herodicus, theory) ::: Some of theories of Herodicus are considered to be the foundation of sports medicine.\nConclusion:\nTutor(hippocrates, herodicus) ::: Herodicus was tutored by Hippocrates.\n------"
    ]
  },
  {
    "id": "FOLIO_train_721",
    "context": "Herodicus was a Greek physician, dietician, sophist, and gymnastic-master. Herodicus was born in the city of Selymbria. Selymbria is a colony of the city-state Megara. One of the tutors of Hippocrates was Herodicus. Massages were recommended by Herodicus. Some of theories of Herodicus are considered to be the foundation of sports medicine.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Herodicus was born in a city-state.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreek(x) ::: x is a Greek person.\nPhysician(x) ::: x is a physician.\nDietician(x) ::: x is a dietician.\nSophist(x) ::: x is a sophist.\nGymnasticMaster(x) ::: x is a gymnastic-master.\nCityState(x) ::: x is a city-state.\nColony(x, y) ::: x is a colony of y.\nTutor(x, y) ::: x is a tutor of y.\nMassage(x) ::: x is a massage.\nRecommend(x, y) ::: x recommends y.\nTheory(x) ::: x is a theory.\nConsider(x, y) ::: x considers y.\nPremises:\nGreek(herodicus) ∧ Physician(herodicus) ∧ Dietician(herodicus) ∧ Sophist(herodicus) ∧ GymnasticMaster(herodicus) ::: Herodicus was a Greek physician, dietician, sophist, and gymnastic-master.\nCityState(selymbria) ::: Selymbria is a city-state.\nColony(selymbria, megara) ::: Selymbria is a colony of the city-state Megara.\nTutor(herodicus, hippocrates) ::: One of the tutors of Hippocrates was Herodicus.\nMassage(x) ∧ Recommend(herodicus, x) ::: Massages were recommended by Herodicus.\n∃x (Theory(x) ∧ Consider(x, herodicus)) ::: Some of theories of Herodicus are considered to be the foundation of sports medicine.\nConclusion:\nCityState(selymbria) ::: Herodicus was born in a city-state.\n------\nProblem:\nThe first person to be awarded the"
    ]
  },
  {
    "id": "FOLIO_train_722",
    "context": "Herodicus was a Greek physician, dietician, sophist, and gymnastic-master. Herodicus was born in the city of Selymbria. Selymbria is a colony of the city-state Megara. One of the tutors of Hippocrates was Herodicus. Massages were recommended by Herodicus. Some of theories of Herodicus are considered to be the foundation of sports medicine.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Herodicus did not recommend massages.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreek(x) ::: x is a Greek person.\nPhysician(x) ::: x is a physician.\nDietician(x) ::: x is a dietician.\nSophist(x) ::: x is a sophist.\nGymnasticMaster(x) ::: x is a gymnastic-master.\nCity(x) ::: x is a city.\nColony(x, y) ::: x is a colony of y.\nTutor(x, y) ::: x is a tutor of y.\nRecommend(x, y) ::: x recommends y.\nMassage(x) ::: x is a massage.\nTheory(x) ::: x is a theory.\nPremises:\nGreek(herodicus) ∧ Physician(herodicus) ∧ Dietician(herodicus) ∧ Sophist(herodicus) ∧ GymnasticMaster(herodicus) ::: Herodicus was a Greek physician, dietician, sophist, and gymnastic-master.\nCity(selymbria) ∧ Colony(selymbria, megara) ::: Selymbria is a colony of the city-state Megara.\nTutor(herodicus, hippocrates) ∧ Greek(hippocrates) ::: One of the tutors of Hippocrates was Herodicus.\nRecommend(herodicus, massage) ∧ Massage(massage) ::: Massages were recommended by Herodicus.\nTheory(theory) ∧ ∃x (Theory(x) ∧ ∃y (Recommend(herodicus, y) ∧ y = x)) ::: Some of theories of Herodicus are considered to be the foundation of sports medicine.\nConclusion:\n¬Recommend(herodicus, massage) ::: Herodicus did not recommend massages."
    ]
  },
  {
    "id": "FOLIO_train_723",
    "context": "Herodicus was a Greek physician, dietician, sophist, and gymnastic-master. Herodicus was born in the city of Selymbria. Selymbria is a colony of the city-state Megara. One of the tutors of Hippocrates was Herodicus. Massages were recommended by Herodicus. Some of theories of Herodicus are considered to be the foundation of sports medicine.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Herodicus was born in a colony of a city-state.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreek(x) ::: x is a Greek person.\nPhysician(x) ::: x is a physician.\nDietician(x) ::: x is a dietician.\nSophist(x) ::: x is a sophist.\nGymnasticMaster(x) ::: x is a gymnastic-master.\nCityState(x) ::: x is a city-state.\nColony(x, y) ::: x is a colony of y.\nTutor(x, y) ::: x is a tutor of y.\nMassage(x) ::: x is a massage.\nRecommend(x, y) ::: x recommends y.\nTheory(x) ::: x is a theory.\nConsider(x, y) ::: x considers y.\nPremises:\nGreek(herodicus) ∧ Physician(herodicus) ∧ Dietician(herodicus) ∧ Sophist(herodicus) ∧ GymnasticMaster(herodicus) ::: Herodicus was a Greek physician, dietician, sophist, and gymnastic-master.\nCityState(megara) ::: Megara is a city-state.\nColony(selymbria, megara) ::: Selymbria is a colony of the city-state Megara.\nTutor(herodicus, hippocrates) ∧ Greek(hippocrates) ::: One of the tutors of Hippocrates was Herodicus.\nMassage(x) ∧ Recommend(herodicus, x) ::: Massages were recommended by Herodicus.\n∃x (Theory(x) ∧ Consider(x, herodicus)) ::: Some of theories of Herodicus are considered to be the foundation of sports medicine.\nConclusion:\nColony(selymbria, x) ::: Herodicus was born in a colony of a city-state."
    ]
  },
  {
    "id": "FOLIO_train_724",
    "context": "No kid loves the Opera. All adults love the Opera. If someone is a scientist, then they are an adult. Some students are kids. Billy is a kid.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Billy is a student.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nKid(x) ::: x is a kid.\nAdult(x) ::: x is an adult.\nLove(x, y) ::: x loves y.\nScientist(x) ::: x is a scientist.\nStudent(x) ::: x is a student.\nPremises:\n¬∀x (Kid(x) → Love(x, opera)) ::: No kid loves the Opera.\n∀x (Adult(x) → Love(x, opera)) ::: All adults love the Opera.\n∀x (Scientist(x) → Adult(x)) ::: If someone is a scientist, then they are an adult.\n∃x (Student(x) ∧ Kid(x)) ::: Some students are kids.\nKid(billy) ::: Billy is a kid.\nConclusion:\nStudent(billy) ::: Billy is a student.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor"
    ]
  },
  {
    "id": "FOLIO_train_725",
    "context": "No kid loves the Opera. All adults love the Opera. If someone is a scientist, then they are an adult. Some students are kids. Billy is a kid.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Billy is a student and a scientist.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nKid(x) ::: x is a kid.\nAdult(x) ::: x is an adult.\nLove(x, y) ::: x loves y.\nScientist(x) ::: x is a scientist.\nStudent(x) ::: x is a student.\nPremises:\n¬∀x (Kid(x) → Love(x, opera)) ::: No kid loves the Opera.\n∀x (Adult(x) → Love(x, opera)) ::: All adults love the Opera.\n∀x (Scientist(x) → Adult(x)) ::: If someone is a scientist, then they are an adult.\n∃x (Student(x) ∧ Kid(x)) ::: Some students are kids.\nKid(billy) ::: Billy is a kid.\nConclusion:\nStudent(billy) ∧ Scientist(billy) ::: Billy is a student and a scientist.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither"
    ]
  },
  {
    "id": "FOLIO_train_726",
    "context": "No kid loves the Opera. All adults love the Opera. If someone is a scientist, then they are an adult. Some students are kids. Billy is a kid.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Billy is a student or a scientist, then Billy is a student and a kid.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nKid(x) ::: x is a kid.\nAdult(x) ::: x is an adult.\nLove(x, y) ::: x loves y.\nScientist(x) ::: x is a scientist.\nStudent(x) ::: x is a student.\nPremises:\n¬∃x (Kid(x) ∧ Love(x, opera)) ::: No kid loves the Opera.\n∀x (Adult(x) → Love(x, opera)) ::: All adults love the Opera.\n∀x (Scientist(x) → Adult(x)) ::: If someone is a scientist, then they are an adult.\n∃x (Student(x) ∧ Kid(x)) ::: Some students are kids.\nKid(billy) ::: Billy is a kid.\nConclusion:\n(Student(billy) ∨ Scientist(billy)) → (Student(billy) ∧ Kid(billy)) ::: If Billy is a student or a scientist, then Billy is a student and a kid.\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.\nBased on the above information, is the following statement true, false, or uncertain? If Rina is"
    ]
  },
  {
    "id": "FOLIO_train_727",
    "context": "Brian Winter is a Scottish football referee. After being injured, Brian Winter retired in 2012. Brian Winter was appointed as a referee observer after his retirement. Some football referees become referee observers. The son of Brian Winter, Andy Winter, is a football player who plays for Hamilton Academical.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There is a son of a referee observer that plays football.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nScottish(x) ::: x is a Scottish person.\nFootballReferee(x) ::: x is a football referee.\nRetire(x) ::: x retired.\nAppoint(x, y) ::: x is appointed as y.\nRefereeObserver(x) ::: x is a referee observer.\nSon(x, y) ::: x is the son of y.\nFootballPlayer(x) ::: x is a football player.\nPremises:\nScottish(brian) ∧ FootballReferee(brian) ∧ Retire(brian) ∧ Appoint(brian, refereeObserver) ::: Brian Winter is a Scottish football referee. After being injured, Brian Winter retired in 2012. Brian Winter was appointed as a referee observer after his retirement.\n∃x (FootballReferee(x) ∧ Appoint(x, refereeObserver)) ::: Some football referees become referee observers.\nScottish(andy) ∧ Son(brian, andy) ∧ FootballPlayer(andy) ::: The son of Brian Winter, Andy Winter, is a football player who plays for Hamilton Academical.\nConclusion:\n∃x (Son(x, refereeObserver) ∧ FootballPlayer(x)) ::: There is a son of a referee observer that plays football.\n------\nProblem:\nA person is a student if and only if the person is a student. A person is a student if and only if the person is a student. A person is a student if and only if the person is a student. A person is a student if and only if the person is a student. A person is a student if and only if the person is a student. A person is a student if and only if the person is a student. A person is a student if and only if the person is a student. A person is a student if and only if the person is a student. A person is a student if and only"
    ]
  },
  {
    "id": "FOLIO_train_728",
    "context": "Brian Winter is a Scottish football referee. After being injured, Brian Winter retired in 2012. Brian Winter was appointed as a referee observer after his retirement. Some football referees become referee observers. The son of Brian Winter, Andy Winter, is a football player who plays for Hamilton Academical.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Brian Winter is not a referee observer.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nScottish(x) ::: x is a Scottish person.\nFootballReferee(x) ::: x is a football referee.\nRetire(x) ::: x retired.\nAppoint(x, y) ::: x is appointed as y.\nRefereeObserver(x) ::: x is a referee observer.\nSon(x, y) ::: x is the son of y.\nFootballPlayer(x) ::: x is a football player.\nPlayFor(x, y) ::: x plays for y.\nPremises:\nScottish(brian) ∧ FootballReferee(brian) ∧ Retire(brian) ∧ Appoint(brian, refereeObserver) ::: Brian Winter is a Scottish football referee. After being injured, Brian Winter retired in 2012. Brian Winter was appointed as a referee observer after his retirement.\n∃x (FootballReferee(x) ∧ Appoint(x, refereeObserver)) ::: Some football referees become referee observers.\nScottish(andy) ∧ Son(brian, andy) ∧ FootballPlayer(andy) ∧ PlayFor(andy, hamiltonAcademical) ::: The son of Brian Winter, Andy Winter, is a football player who plays for Hamilton Academical.\nConclusion:\n¬RefereeObserver(brian) ::: Brian Winter is not a referee observer.\n------\nProblem:\nThe 2018 FIFA World Cup was the 21st FIFA World Cup, an international football tournament contested by the men's national teams of the member associations of FIFA once every four years. The tournament took place in Russia from 14 June to 15 July 2018. The 2018 FIFA World Cup was the first World Cup to be held in Eastern Europe, and the 11th time that it had been held in Europe. The format for the final tournament was unchanged from 2014"
    ]
  },
  {
    "id": "FOLIO_train_729",
    "context": "Brian Winter is a Scottish football referee. After being injured, Brian Winter retired in 2012. Brian Winter was appointed as a referee observer after his retirement. Some football referees become referee observers. The son of Brian Winter, Andy Winter, is a football player who plays for Hamilton Academical.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Brian Winter is retired.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nScottish(x) ::: x is a Scottish person.\nFootballReferee(x) ::: x is a football referee.\nRetired(x) ::: x is retired.\nAppointed(x, y) ::: x is appointed as y.\nRefereeObserver(x) ::: x is a referee observer.\nSon(x, y) ::: x is the son of y.\nFootballPlayer(x) ::: x is a football player.\nPremises:\nScottish(brian) ∧ FootballReferee(brian) ∧ Retired(brian) ∧ Appointed(brian, refereeObserver) ::: Brian Winter is a Scottish football referee. After being injured, Brian Winter retired in 2012. Brian Winter was appointed as a referee observer after his retirement.\n∃x (FootballReferee(x) ∧ Appointed(x, refereeObserver)) ::: Some football referees become referee observers.\nSon(brian, andy) ∧ FootballPlayer(andy) ∧ PlayFor(andy, hamiltonAcademical) ::: The son of Brian Winter, Andy Winter, is a football player who plays for Hamilton Academical.\nConclusion:\nRetired(brian) ::: Brian Winter is retired.\n------\nProblem:\nThe 2018 FIFA World Cup was the 21st FIFA World Cup, an international football tournament contested by the men's national teams of the member associations of FIFA once every four years. The tournament took place in Russia from 14 June to 15 July 2018. The 2018 FIFA World Cup was the first World Cup to be held in Eastern Europe, and the 11th time that it had been held in Europe. The format for the final tournament was unchanged from 2014, with 32 teams competing for the title at venues throughout Russia.\nQuestion:\nBased on the above information,"
    ]
  },
  {
    "id": "FOLIO_train_730",
    "context": "Brian Winter is a Scottish football referee. After being injured, Brian Winter retired in 2012. Brian Winter was appointed as a referee observer after his retirement. Some football referees become referee observers. The son of Brian Winter, Andy Winter, is a football player who plays for Hamilton Academical.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Andy Winter is a referee.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nScottish(x) ::: x is a Scottish person.\nFootballReferee(x) ::: x is a football referee.\nRetire(x) ::: x retired.\nAppoint(x, y) ::: x is appointed as y.\nRefereeObserver(x) ::: x is a referee observer.\nSon(x, y) ::: x is the son of y.\nFootballPlayer(x) ::: x is a football player.\nPremises:\nScottish(brian) ∧ FootballReferee(brian) ∧ Retire(brian) ∧ Appoint(brian, refereeObserver) ::: Brian Winter is a Scottish football referee. After being injured, Brian Winter retired in 2012. Brian Winter was appointed as a referee observer after his retirement.\n∃x (FootballReferee(x) ∧ Appoint(x, refereeObserver)) ::: Some football referees become referee observers.\nScottish(andy) ∧ Son(brian, andy) ∧ FootballPlayer(andy) ::: The son of Brian Winter, Andy Winter, is a football player who plays for Hamilton Academical.\nConclusion:\nFootballReferee(andy) ::: Andy Winter is a referee.\n------"
    ]
  },
  {
    "id": "FOLIO_train_731",
    "context": "People are either interested in puzzles or bad at chess. If a person is bad at chess, then they don't play a lot of chess. A person is either a planner or a creative person. Erica is someone who plays a lot of chess. If Erica is neither bad at chess nor creative, then Erica is either someone who plans and is creative, or someone who neither plans nor is creative.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Erica plans.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nInterested(x) ::: x is interested in puzzles.\nBad(x) ::: x is bad at chess.\nPlay(x) ::: x plays a lot of chess.\nPlanner(x) ::: x is a planner.\nCreative(x) ::: x is a creative person.\nPremises:\n∀x (Interested(x) ∨ Bad(x)) ::: People are either interested in puzzles or bad at chess.\n∀x (Bad(x) → ¬Play(x)) ::: If a person is bad at chess, then they don't play a lot of chess.\n∀x (Planner(x) ∨ Creative(x)) ::: A person is either a planner or a creative person.\nPlay(erica) ::: Erica is someone who plays a lot of chess.\n¬(Bad(erica) ∧ Creative(erica)) → (Planner(erica) ∧ Creative(erica)) ⊕ ¬(Planner(erica) ∨ Creative(erica)) ::: If Erica is neither bad at chess nor creative, then Erica is either someone who plans and is creative, or someone who neither plans nor is creative.\nConclusion:\nPlanner(erica"
    ]
  },
  {
    "id": "FOLIO_train_732",
    "context": "People are either interested in puzzles or bad at chess. If a person is bad at chess, then they don't play a lot of chess. A person is either a planner or a creative person. Erica is someone who plays a lot of chess. If Erica is neither bad at chess nor creative, then Erica is either someone who plans and is creative, or someone who neither plans nor is creative.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Erica is interested in puzzles and is creative.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nInterested(x, y) ::: x is interested in y.\nBad(x, y) ::: x is bad at y.\nPlay(x, y) ::: x plays y.\nPlanner(x) ::: x is a planner.\nCreative(x) ::: x is a creative person.\nPremises:\n∀x (Interested(x, puzzles) ∨ Bad(x, chess)) ::: People are either interested in puzzles or bad at chess.\n∀x (Bad(x, chess) → ¬Play(x, chess)) ::: If a person is bad at chess, then they don't play a lot of chess.\n∀x (Planner(x) ∨ Creative(x)) ::: A person is either a planner or a creative person.\nPlay(erica, chess) ::: Erica is someone who plays a lot of chess.\n¬(Bad(erica, chess) ∧ Creative(erica)) → (Planner(erica) ∧ Creative(erica)) ⊕ ¬(Planner(erica) ∨ Creative(erica)) ::: If Erica is neither bad at chess nor creative, then Erica is either someone who plans and is creative, or"
    ]
  },
  {
    "id": "FOLIO_train_733",
    "context": "People are either interested in puzzles or bad at chess. If a person is bad at chess, then they don't play a lot of chess. A person is either a planner or a creative person. Erica is someone who plays a lot of chess. If Erica is neither bad at chess nor creative, then Erica is either someone who plans and is creative, or someone who neither plans nor is creative.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Erica is either interested in puzzles or is creative.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nInterested(x, y) ::: x is interested in y.\nBad(x, y) ::: x is bad at y.\nPlay(x, y) ::: x plays y.\nPlanner(x) ::: x is a planner.\nCreative(x) ::: x is a creative person.\nPremises:\n∀x (Interested(x, puzzles) ∨ Bad(x, chess)) ::: People are either interested in puzzles or bad at chess.\n∀x (Bad(x, chess) → ¬Play(x, chess)) ::: If a person is bad at chess, then they don't play a lot of chess.\n∀x (Planner(x) ∨ Creative(x)) ::: A person is either a planner or a creative person.\nPlay(erica, chess) ::: Erica is someone who plays a lot of chess.\n¬(Bad(erica, chess) ∧ Creative(erica)) → (Planner(erica) ∧ Creative(erica)) ⊕ ¬(Planner(erica) ∨ Creative(erica)) ::: If Erica is neither bad at chess nor creative, then Erica is either someone who plans and is creative, or"
    ]
  },
  {
    "id": "FOLIO_train_734",
    "context": "People are either interested in puzzles or bad at chess. If a person is bad at chess, then they don't play a lot of chess. A person is either a planner or a creative person. Erica is someone who plays a lot of chess. If Erica is neither bad at chess nor creative, then Erica is either someone who plans and is creative, or someone who neither plans nor is creative.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Erica plans ahead or plays a lot of chess matches, then Erica is not interested in puzzles and creative.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nInterested(x, y) ::: x is interested in y.\nBad(x, y) ::: x is bad at y.\nPlay(x, y) ::: x plays y.\nPlanner(x) ::: x is a planner.\nCreative(x) ::: x is a creative person.\nPremises:\n∀x (Interested(x, puzzles) ∨ Bad(x, chess)) ::: People are either interested in puzzles or bad at chess.\n∀x (Bad(x, chess) → ¬Play(x, chess)) ::: If a person is bad at chess, then they don't play a lot of chess.\n∀x (Planner(x) ∨ Creative(x)) ::: A person is either a planner or a creative person.\nPlay(erica, chess) ::: Erica is someone who plays a lot of chess.\n¬(Bad(erica, chess) ∧ Creative(erica)) → (Planner(erica) ∧ Creative(erica)) ⊕ ¬(Planner(erica) ∨ Creative(erica)) ::: If Erica is neither bad at chess nor creative, then Erica is either someone who plans and is creative, or"
    ]
  },
  {
    "id": "FOLIO_train_735",
    "context": "People are either interested in puzzles or bad at chess. If a person is bad at chess, then they don't play a lot of chess. A person is either a planner or a creative person. Erica is someone who plays a lot of chess. If Erica is neither bad at chess nor creative, then Erica is either someone who plans and is creative, or someone who neither plans nor is creative.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Erica is creative, then Erica is not interested in puzzles and creative.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nInterested(x, y) ::: x is interested in y.\nBad(x, y) ::: x is bad at y.\nPlay(x, y) ::: x plays y.\nPlanner(x) ::: x is a planner.\nCreative(x) ::: x is a creative person.\nPremises:\n∀x (Interested(x, puzzles) ∨ Bad(x, chess)) ::: People are either interested in puzzles or bad at chess.\n∀x (Bad(x, chess) → ¬Play(x, chess)) ::: If a person is bad at chess, then they don't play a lot of chess.\n∀x (Planner(x) ∨ Creative(x)) ::: A person is either a planner or a creative person.\nPlay(erica, chess) ::: Erica is someone who plays a lot of chess.\n¬(Bad(erica, chess) ∧ Creative(erica)) → (Planner(erica) ∧ Creative(erica)) ⊕ ¬(Planner(erica) ∨ Creative(erica)) ::: If Erica is neither bad at chess nor creative, then Erica is either someone who plans and is creative, or"
    ]
  },
  {
    "id": "FOLIO_train_736",
    "context": "People are either interested in puzzles or bad at chess. If a person is bad at chess, then they don't play a lot of chess. A person is either a planner or a creative person. Erica is someone who plays a lot of chess. If Erica is neither bad at chess nor creative, then Erica is either someone who plans and is creative, or someone who neither plans nor is creative.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Erica is interested in puzzles and is creative, then Erica is not creative.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nInterested(x, y) ::: x is interested in y.\nBad(x, y) ::: x is bad at y.\nPlay(x, y) ::: x plays y.\nPlanner(x) ::: x is a planner.\nCreative(x) ::: x is a creative person.\nPremises:\n∀x (Interested(x, puzzles) ∨ Bad(x, chess)) ::: People are either interested in puzzles or bad at chess.\n∀x (Bad(x, chess) → ¬Play(x, chess)) ::: If a person is bad at chess, then they don't play a lot of chess.\n∀x (Planner(x) ∨ Creative(x)) ::: A person is either a planner or a creative person.\nPlay(erica, chess) ::: Erica is someone who plays a lot of chess.\n¬(Bad(erica, chess) ∧ Creative(erica)) → (Planner(erica) ∧ Creative(erica)) ⊕ ¬(Planner(erica) ∨ Creative(erica)) ::: If Erica is neither bad at chess nor creative, then Erica is either someone who plans and is creative, or"
    ]
  },
  {
    "id": "FOLIO_train_737",
    "context": "People are either interested in puzzles or bad at chess. If a person is bad at chess, then they don't play a lot of chess. A person is either a planner or a creative person. Erica is someone who plays a lot of chess. If Erica is neither bad at chess nor creative, then Erica is either someone who plans and is creative, or someone who neither plans nor is creative.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Erica either plays a lot of chess matches or is creative, then Erica is neither interested in puzzles nor a person who plays a lot of chess matches.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nInterested(x) ::: x is interested in puzzles.\nBad(x) ::: x is bad at chess.\nPlay(x) ::: x plays a lot of chess.\nPlanner(x) ::: x is a planner.\nCreative(x) ::: x is a creative person.\nPremises:\n∀x (Bad(x) → ¬Play(x)) ::: If a person is bad at chess, then they don't play a lot of chess.\n∀x (Interested(x) ∨ Bad(x)) ::: People are either interested in puzzles or bad at chess.\n∀x (Planner(x) ∨ Creative(x)) ::: A person is either a planner or a creative person.\nPlay(erica) ::: Erica is someone who plays a lot of chess.\n¬(Bad(erica) ∧ Creative(erica)) → (Planner(erica) ∧ Creative(erica)) ⊕ ¬(Planner(erica) ∨ Creative(erica)) ::: If Erica is neither bad at chess nor creative, then Erica is either someone who plans and is creative, or someone who neither plans nor is creative.\nConclusion:\n(Interested(er"
    ]
  },
  {
    "id": "FOLIO_train_738",
    "context": "People are either interested in puzzles or bad at chess. If a person is bad at chess, then they don't play a lot of chess. A person is either a planner or a creative person. Erica is someone who plays a lot of chess. If Erica is neither bad at chess nor creative, then Erica is either someone who plans and is creative, or someone who neither plans nor is creative.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Erica is interested in puzzles and plays a lot of chess matches, then Erica is either a person who plays a lot of chess matches or a person that is creative.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nInterested(x, y) ::: x is interested in y.\nBad(x, y) ::: x is bad at y.\nPlay(x, y) ::: x plays y.\nPlanner(x) ::: x is a planner.\nCreative(x) ::: x is a creative person.\nPremises:\n∀x (Interested(x, puzzles) ∨ Bad(x, chess)) ::: People are either interested in puzzles or bad at chess.\n∀x (Bad(x, chess) → ¬Play(x, chess)) ::: If a person is bad at chess, then they don't play a lot of chess.\n∀x (Planner(x) ∨ Creative(x)) ::: A person is either a planner or a creative person.\nPlay(erica, chess) ::: Erica is someone who plays a lot of chess.\n¬(Bad(erica, chess) ∧ Creative(erica)) → (Planner(erica) ∧ Creative(erica)) ⊕ ¬(Planner(erica) ∨ Creative(erica)) ::: If Erica is neither bad at chess nor creative, then Erica is either someone who plans and is creative, or"
    ]
  },
  {
    "id": "FOLIO_train_739",
    "context": "People are either interested in puzzles or bad at chess. If a person is bad at chess, then they don't play a lot of chess. A person is either a planner or a creative person. Erica is someone who plays a lot of chess. If Erica is neither bad at chess nor creative, then Erica is either someone who plans and is creative, or someone who neither plans nor is creative.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Erica plans ahead or is interested in puzzles, then Erica is creative.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nInterested(x, y) ::: x is interested in y.\nBad(x, y) ::: x is bad at y.\nPlay(x, y) ::: x plays y.\nPlanner(x) ::: x is a planner.\nCreative(x) ::: x is a creative person.\nPremises:\n∀x (Interested(x, puzzles) ∨ Bad(x, chess)) ::: People are either interested in puzzles or bad at chess.\n∀x (Bad(x, chess) → ¬Play(x, chess)) ::: If a person is bad at chess, then they don't play a lot of chess.\n∀x (Planner(x) ∨ Creative(x)) ::: A person is either a planner or a creative person.\nPlay(erica, chess) ::: Erica is someone who plays a lot of chess.\n¬(Bad(erica, chess) ∧ Creative(erica)) → (Planner(erica) ∧ Creative(erica)) ⊕ ¬(Planner(erica) ∨ Creative(erica)) ::: If Erica is neither bad at chess nor creative, then Erica is either someone who plans and is creative, or"
    ]
  },
  {
    "id": "FOLIO_train_740",
    "context": "People are either interested in puzzles or bad at chess. If a person is bad at chess, then they don't play a lot of chess. A person is either a planner or a creative person. Erica is someone who plays a lot of chess. If Erica is neither bad at chess nor creative, then Erica is either someone who plans and is creative, or someone who neither plans nor is creative.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Erica is either bad at chess or interested in puzzles, then Erica is not a person who plays a lot of chess matches and creative.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nInterested(x, y) ::: x is interested in y.\nBad(x, y) ::: x is bad at y.\nPlay(x, y) ::: x plays y.\nPlanner(x) ::: x is a planner.\nCreative(x) ::: x is a creative person.\nPremises:\n∀x (Interested(x, puzzles) ∨ Bad(x, chess)) ::: People are either interested in puzzles or bad at chess.\n∀x (Bad(x, chess) → ¬Play(x, chess)) ::: If a person is bad at chess, then they don't play a lot of chess.\n∀x (Planner(x) ∨ Creative(x)) ::: A person is either a planner or a creative person.\nPlay(erica, chess) ::: Erica is someone who plays a lot of chess.\n¬(Bad(erica, chess) ∧ Creative(erica)) → (Planner(erica) ∧ Creative(erica)) ∨ ¬(Planner(erica) ∨ Creative(erica)) ::: If Erica is neither bad at chess nor creative, then Erica is either someone who plans and is creative, or someone who neither plans nor is creative.\nConclusion:\nBad(erica, chess) ∨ Interested(erica, puzzles) → ¬(Play(erica, chess) ∧ Creative(erica)) ::: If Erica is either bad at chess or interested in puzzles, then Erica is not a person who plays a lot of chess matches and creative.\n------"
    ]
  },
  {
    "id": "FOLIO_train_741",
    "context": "Soccer players have a right foot and a left foot. Top soccer players are soccer players who can use their both feet very efficiently. If a soccer player can score many goals using left foot, then they can use that foot very efficiently. If a soccer player can score many goals using right foot, then they can use that foot very efficiently. Cristiano Ronaldo is a soccer player. Cristiano Ronaldo can use his right foot very efficiently. Cristiano Ronaldo have scored more than one hundred goals using his left foot.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Cristiano Ronaldo is a top soccer player.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSoccerPlayer(x) ::: x is a soccer player.\nRightFoot(x) ::: x is a right foot.\nLeftFoot(x) ::: x is a left foot.\nTopSoccerPlayer(x) ::: x is a top soccer player.\nUse(x, y) ::: x can use y very efficiently.\nScore(x, y) ::: x can score many goals using y.\nPremises:\n∀x (SoccerPlayer(x) → (RightFoot(x) ∧ LeftFoot(x))) ::: Soccer players have a right foot and a left foot.\n∀x (TopSoccerPlayer(x) → SoccerPlayer(x)) ::: Top soccer players are soccer players who can use their both feet very efficiently.\n∀x (Score(x, y) → Use(x, y)) ::: If a soccer player can score many goals using left foot, then they can use that foot very efficiently.\n∀x (Score(x, y) → Use(x, y)) ::: If a soccer player can score many goals using right foot, then they can use that foot very efficiently.\nSoccerPlayer(cristiano) ∧ Use(cristiano, rightFoot) ∧ Score(cristiano, leftFoot) ::: Cristiano Ronaldo is a soccer player.\nCristiano(cristiano) ∧ Use(cristiano, rightFoot) ::: Cristiano Ronaldo can use his right foot very efficiently.\nScore(cristiano, leftFoot) ∧ ∃x (x > 100) ::: Cristiano Ronaldo have scored more than one hundred goals using his left foot."
    ]
  },
  {
    "id": "FOLIO_train_742",
    "context": "Soccer players have a right foot and a left foot. Top soccer players are soccer players who can use their both feet very efficiently. If a soccer player can score many goals using left foot, then they can use that foot very efficiently. If a soccer player can score many goals using right foot, then they can use that foot very efficiently. Cristiano Ronaldo is a soccer player. Cristiano Ronaldo can use his right foot very efficiently. Cristiano Ronaldo have scored more than one hundred goals using his left foot.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Cristiano Ronaldo is not a top soccer player.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSoccerPlayer(x) ::: x is a soccer player.\nRightFoot(x) ::: x is a right foot.\nLeftFoot(x) ::: x is a left foot.\nTopSoccerPlayer(x) ::: x is a top soccer player.\nCanUse(x, y) ::: x can use y very efficiently.\nScore(x, y) ::: x can score many goals using y.\nPremises:\n∀x (SoccerPlayer(x) → (RightFoot(x) ∧ LeftFoot(x))) ::: Soccer players have a right foot and a left foot.\n∀x (TopSoccerPlayer(x) → SoccerPlayer(x)) ::: Top soccer players are soccer players who can use their both feet very efficiently.\n∀x (Score(x, y) → CanUse(x, y)) ::: If a soccer player can score many goals using left foot, then they can use that foot very efficiently.\n∀x (Score(x, y) → CanUse(x, y)) ::: If a soccer player can score many goals using right foot, then they can use that foot very efficiently.\nSoccerPlayer(cristiano) ∧ RightFoot(cristiano) ∧ CanUse(cristiano, rightFoot) ∧ Score(cristiano, leftFoot) ∧ Score(cristiano, rightFoot) ::: Cristiano Ronaldo is a soccer player. Cristiano Ronaldo can use his right foot very efficiently. Cristiano Ronaldo have scored more than one hundred goals using his left foot.\nConclusion:\n¬TopSoccerPlayer(cristiano) ::: Cristiano Ronaldo is not a"
    ]
  },
  {
    "id": "FOLIO_train_743",
    "context": "The National Lobster Hatchery is a hatchery located in Padstow England. The National Lobster Hatchery is open to visitors. A hatchery is either for profit, or for conservation. If a hatchery is for conservation, it might release animals into the wild. The National Lobster Hatchery is not for profit.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The National Lobster Hatchery is for conservation.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nForProfit(x) ::: x is a for-profit hatchery.\nForConservation(x) ::: x is a hatchery for conservation.\nRelease(x) ::: x releases animals into the wild.\nOpen(x) ::: x is open to visitors.\nHatchery(x) ::: x is a hatchery.\nPremises:\nHatchery(nationalLobsterHatchery) ∧ Open(nationalLobsterHatchery) ::: The National Lobster Hatchery is a hatchery located in Padstow England.\nHatchery(nationalLobsterHatchery) ∧ ForProfit(nationalLobsterHatchery) ::: The National Lobster Hatchery is a hatchery.\n∀x (ForProfit(x) → ¬ForConservation(x)) ::: If a hatchery is for profit, it is not for conservation.\n∀x (ForConservation(x) → ¬ForProfit(x)) ::: If a hatchery is for conservation, it is not for profit.\n∀x (ForConservation(x) → Release(x)) ::: If a hatchery is for conservation, it might release animals into the wild.\nConclusion:\nForConservation(nationalLobsterHatchery) ::: The National Lobster Hatchery is for conservation.\n------\nProblem:\nThe 1996 Summer Olympics were held in Atlanta, Georgia. The 1996 Summer Olympics were the first Summer Olympics to be held in the United States since the 1984 Summer Olympics. The 1996 Summer Olympics were the first Summer Olympics"
    ]
  },
  {
    "id": "FOLIO_train_744",
    "context": "The National Lobster Hatchery is a hatchery located in Padstow England. The National Lobster Hatchery is open to visitors. A hatchery is either for profit, or for conservation. If a hatchery is for conservation, it might release animals into the wild. The National Lobster Hatchery is not for profit.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? All hatcheries are open to visitors.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nForProfit(x) ::: x is a for-profit hatchery.\nForConservation(x) ::: x is a for-conservation hatchery.\nOpen(x) ::: x is open to visitors.\nRelease(x) ::: x releases animals into the wild.\nHatchery(x) ::: x is a hatchery.\nPremises:\nHatchery(nationalLobsterHatchery) ∧ Open(nationalLobsterHatchery) ∧ ¬ForProfit(nationalLobsterHatchery) ::: The National Lobster Hatchery is a hatchery located in Padstow England. The National Lobster Hatchery is open to visitors.\n∀x (ForProfit(x) ∨ ForConservation(x)) ::: A hatchery is either for profit, or for conservation.\n∀x (ForConservation(x) → Release(x)) ::: If a hatchery is for conservation, it might release animals into the wild.\nConclusion:\n∀x (Hatchery(x) → Open(x)) ::: All hatcheries are open to visitors.\n------\nProblem:\nThe National Lobster Hatchery is a hatchery located in Padstow England. The National Lobster Hatchery is open to visitors. A hatchery is either for profit, or for conservation. If a hatchery is for conservation, it might release animals into the wild. The National Lobster Hatchery is not for profit.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? All hatcheries are open to visitors.\n###\nPredicates"
    ]
  },
  {
    "id": "FOLIO_train_745",
    "context": "The National Lobster Hatchery is a hatchery located in Padstow England. The National Lobster Hatchery is open to visitors. A hatchery is either for profit, or for conservation. If a hatchery is for conservation, it might release animals into the wild. The National Lobster Hatchery is not for profit.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The National Lobster Hatchery releases animals into the wild.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nForProfit(x) ::: x is a for-profit hatchery.\nForConservation(x) ::: x is a hatchery for conservation.\nRelease(x) ::: x releases animals into the wild.\nOpen(x) ::: x is open to visitors.\nHatchery(x) ::: x is a hatchery.\nPremises:\nHatchery(nationalLobsterHatchery) ∧ Open(nationalLobsterHatchery) ::: The National Lobster Hatchery is a hatchery located in Padstow England.\nHatchery(nationalLobsterHatchery) ∧ Open(nationalLobsterHatchery) ∧ ¬ForProfit(nationalLobsterHatchery) ::: The National Lobster Hatchery is a hatchery located in Padstow England.\n∀x (Hatchery(x) → (ForProfit(x) ∨ ForConservation(x))) ::: A hatchery is either for profit, or for conservation.\n∀x (ForConservation(x) → Release(x)) ::: If a hatchery is for conservation, it might release animals into the wild.\nConclusion:\nRelease(nationalLobsterHatchery) ::: The National Lobster Hatchery releases animals into the wild.\n------\nProblem:\nThe National Lobster Hatchery is a hatchery located in Padstow England. The National Lobster Hatchery is open to visitors. A hatchery is either for profit, or for conservation. If a hatchery is for conservation, it might release animals into the wild. The National Lobster"
    ]
  },
  {
    "id": "FOLIO_train_746",
    "context": "Rhos Aelwyd F.C. is a Welsh football club. Rhos Aelwyd F.C. is the only club based in Ponciau. The Premier Division was won in 2005–06 by a team from Ponciau. The winner of the Premier Division in 2009–10 was promoted back to the Cymru Alliance. The Premier Division in 2009–10 was won by the same team that won in 2005-06.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Rhos Aelwyd F.C. won the 2005-06 Premier Division.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nWelsh(x) ::: x is a Welsh football club.\nBasedIn(x, y) ::: x is based in y.\nPremierDivision(x) ::: x is the Premier Division.\nWon(x, y) ::: x won y.\nPromoted(x, y) ::: x was promoted to y.\nPonciau(x) ::: x is a team from Ponciau.\nPremises:\nWelsh(rhosAelwydF.C.) ∧ BasedIn(rhosAelwydF.C., ponciau) ::: Rhos Aelwyd F.C. is a Welsh football club.\n∀x (BasedIn(x, ponciau) → Welsh(x)) ::: The only club based in Ponciau is a Welsh football club.\n∃x (Won(x, premierDivision2005-06) ∧ Welsh(x)) ::: The Premier Division was won in 2005–06 by a team from Ponciau.\n∃x (Won(x, premierDivision2009-10) ∧ Welsh(x)) ::: The winner of the Premier Division in 2009–10 was promoted back to the Cymru Alliance.\n∃x (Won(x, premierDivision2005-06) ∧ Won(x, premierDivision2009-10)) ::: The Premier Division in 2009–10 was won by the same team that won in 2005-06.\nConclusion:\nWon(rhosA"
    ]
  },
  {
    "id": "FOLIO_train_747",
    "context": "Rhos Aelwyd F.C. is a Welsh football club. Rhos Aelwyd F.C. is the only club based in Ponciau. The Premier Division was won in 2005–06 by a team from Ponciau. The winner of the Premier Division in 2009–10 was promoted back to the Cymru Alliance. The Premier Division in 2009–10 was won by the same team that won in 2005-06.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Rhos Aelwyd F.C. was promoted to the Cymru Alliance.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nClub(x) ::: x is a club.\nBasedIn(x, y) ::: x is based in y.\nWon(x, y) ::: x won y.\nPromoted(x, y) ::: x was promoted to y.\nPremises:\nClub(rhosAelwydF.C.) ∧ BasedIn(rhosAelwydF.C., ponciau) ::: Rhos Aelwyd F.C. is a Welsh football club.\n∀x (Club(x) ∧ BasedIn(x, ponciau)) → (x = rhosAelwydF.C.) ::: Rhos Aelwyd F.C. is the only club based in Ponciau.\n∃x (Won(x, premierDivision2005-06) ∧ BasedIn(x, ponciau)) ::: The Premier Division was won in 2005–06 by a team from Ponciau.\n∃x (Won(x, premierDivision2009-10) ∧ Promoted(x, cymruAlliance)) ::: The winner of the Premier Division in 2009–10 was promoted back to the Cymru Alliance.\n∃x (Won(x, premierDivision2005-06) ∧ Won(x, premierDivision2009-10)) ::: The Premier Division in 2009–10 was won by the same team that won in 2005-06.\nConclusion:\nPromoted(rhosAelwydF.C., cymru"
    ]
  },
  {
    "id": "FOLIO_train_748",
    "context": "All OS are software. All Mac are OS. An OS is either Mac or Windows. All Windows are convenient. All software has code. If something is convenient, then it is popular. Burger is a piece of code and a Mac. PyTorch is either Windows and software, or neither Windows nor software.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Burger is popular.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nOS(x) ::: x is an operating system.\nMac(x) ::: x is a Mac.\nWindows(x) ::: x is a Windows.\nConvenient(x) ::: x is convenient.\nPopular(x) ::: x is popular.\nSoftware(x) ::: x is software.\nCode(x) ::: x is code.\nPieceOf(x, y) ::: x is a piece of y.\nPremises:\n∀x (OS(x) → Software(x)) ::: All OS are software.\n∀x (Mac(x) → OS(x)) ::: All Mac are OS.\n∀x (OS(x) ∨ Windows(x)) ::: All OS are either Mac or Windows.\n∀x (Windows(x) → Convenient(x)) ::: All Windows are convenient.\n∀x (Software(x) → Code(x)) ::: All software has code.\n∀x (Convenient(x) → Popular(x)) ::: If something is convenient, then it is popular.\nPieceOf(burger, code) ∧ Mac(burger) ::: Burger is a piece of code and a Mac.\nPyTorch ∧ (Windows(pytorch) ∨ Software(pytorch)) ∧ ¬(Windows(pytorch) ∧ Software(pytorch)) ::: PyTorch is either Windows and software, or neither Windows nor software.\nConclusion:\nPopular(burger) ::: Burger is popular.\n------\nProblem:\nAll people who are not students are either teachers or employees. All teachers are either professors or lecturers. All"
    ]
  },
  {
    "id": "FOLIO_train_749",
    "context": "All OS are software. All Mac are OS. An OS is either Mac or Windows. All Windows are convenient. All software has code. If something is convenient, then it is popular. Burger is a piece of code and a Mac. PyTorch is either Windows and software, or neither Windows nor software.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Burger is not popular.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nOS(x) ::: x is an operating system.\nMac(x) ::: x is a Mac.\nWindows(x) ::: x is a Windows.\nConvenient(x) ::: x is convenient.\nPopular(x) ::: x is popular.\nCode(x) ::: x is a piece of code.\nPremises:\n∀x (OS(x) → Software(x)) ::: All OS are software.\n∀x (Mac(x) → OS(x)) ::: All Mac are OS.\n∀x (OS(x) ∨ Windows(x)) ::: All OS are either Mac or Windows.\n∀x (Windows(x) → Convenient(x)) ::: All Windows are convenient.\n∀x (Software(x) → Code(x)) ::: All software has code.\n∀x (Convenient(x) → Popular(x)) ::: If something is convenient, then it is popular.\nBurger ∧ Mac ::: Burger is a piece of code and a Mac.\nPyTorch ∧ (Windows ∨ Software) ∨ ¬(Windows ∧ Software) ::: PyTorch is either Windows and software, or neither Windows nor software.\nConclusion:\n¬Popular(burger) ::: Burger is not popular.\n------\nProblem:\nAll people who are not students are either teachers or employees. All teachers are either professors or lecturers. All professors are either mathematicians or physicists. All physicists are either scientists or engineers. All engineers are either computer scientists or software engineers. All computer scientists are either professors or lecturers. All lecturers are either"
    ]
  },
  {
    "id": "FOLIO_train_750",
    "context": "All OS are software. All Mac are OS. An OS is either Mac or Windows. All Windows are convenient. All software has code. If something is convenient, then it is popular. Burger is a piece of code and a Mac. PyTorch is either Windows and software, or neither Windows nor software.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? PyTorch is popular and has code.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nOS(x) ::: x is an operating system.\nMac(x) ::: x is a Mac.\nWindows(x) ::: x is a Windows.\nConvenient(x) ::: x is convenient.\nPopular(x) ::: x is popular.\nCode(x) ::: x is a piece of code.\nPiece(x) ::: x is a piece.\nSoftware(x) ::: x is software.\nPremises:\n∀x (OS(x) → Software(x)) ::: All OS are software.\n∀x (Mac(x) → OS(x)) ::: All Mac are OS.\n∀x (OS(x) ∨ Windows(x)) ::: All OS are either Mac or Windows.\n∀x (Windows(x) → Convenient(x)) ::: All Windows are convenient.\n∀x (Software(x) → Code(x)) ::: All software has code.\n∀x (Convenient(x) → Popular(x)) ::: If something is convenient, then it is popular.\nBurger(burger) ∧ Mac(burger) ∧ Code(burger) ::: Burger is a piece of code and a Mac.\nPyTorch(pytorch) ∧ (Windows(pytorch) ∨ Software(pytorch)) ∧ ¬(Windows(pytorch) ∧ Software(pytorch)) ::: PyTorch is either Windows and software, or neither Windows nor software.\nConclusion:\nPopular(pytorch) ∧ Code(pytorch) ::: PyTorch is popular and has code.\n------"
    ]
  },
  {
    "id": "FOLIO_train_751",
    "context": "All OS are software. All Mac are OS. An OS is either Mac or Windows. All Windows are convenient. All software has code. If something is convenient, then it is popular. Burger is a piece of code and a Mac. PyTorch is either Windows and software, or neither Windows nor software.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? PyTorch is not popular and has code.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nOS(x) ::: x is an operating system.\nMac(x) ::: x is a Mac.\nWindows(x) ::: x is a Windows.\nConvenient(x) ::: x is convenient.\nPopular(x) ::: x is popular.\nCode(x) ::: x has code.\nPieceOfCode(x) ::: x is a piece of code.\nSoftware(x) ::: x is software.\nPremises:\n∀x (OS(x) → Software(x)) ::: All OS are software.\n∀x (Mac(x) → OS(x)) ::: All Mac are OS.\n∀x (OS(x) ∨ Windows(x)) ::: All OS are either Mac or Windows.\n∀x (Windows(x) → Convenient(x)) ::: All Windows are convenient.\n∀x (Software(x) → Code(x)) ::: All software has code.\n∀x (Convenient(x) → Popular(x)) ::: If something is convenient, then it is popular.\nBurger ∧ PieceOfCode(burger) ∧ Mac(burger) ::: Burger is a piece of code and a Mac.\nPyTorch ∧ (Windows(pytorch) ∨ Software(pytorch)) ∧ ¬(Windows(pytorch) ∧ Software(pytorch)) ::: PyTorch is either Windows and software, or neither Windows nor software.\nConclusion:\n¬(Popular(pytorch) ∧ Code(pytorch)) ::: PyTorch is not popular and has code.\n------"
    ]
  },
  {
    "id": "FOLIO_train_752",
    "context": "Roads are made of either concrete or asphalt. Roads made of concrete last longer than roads made with asphalt. Roads made of asphalt are smoother than roads made of concrete. Everyone prefers the smoother of two roads. Road one is made of concrete and Road two is made of asphalt.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Road one will last longer than Road two",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRoad(x) ::: x is a road.\nConcrete(x) ::: x is made of concrete.\nAsphalt(x) ::: x is made of asphalt.\nLastLonger(x, y) ::: x lasts longer than y.\nSmoother(x, y) ::: x is smoother than y.\nPrefer(x, y) ::: x prefers y.\nPremises:\n∀x (Road(x) → (Concrete(x) ∨ Asphalt(x))) ::: Roads are made of either concrete or asphalt.\n∀x (Concrete(x) → ¬LastLonger(x, y)) ::: Roads made of concrete last longer than roads made with asphalt.\n∀x (Asphalt(x) → LastLonger(x, y)) ::: Roads made of asphalt are smoother than roads made of concrete.\n∀x ∀y (Prefer(x, y) → Smoother(x, y)) ::: Everyone prefers the smoother of two roads.\nRoad(roadOne) ∧ Concrete(roadOne) ::: Road one is made of concrete.\nRoad(roadTwo) ∧ Asphalt(roadTwo) ::: Road two is made of asphalt.\nConclusion:\nLastLonger(roadOne, roadTwo) ::: Road one will last longer than Road two\n------\nProblem:\nAll people who are not students are either employed or unemployed. All people who are employed are either employed full-time or employed part-time. All people who are employed full-time are employed by a"
    ]
  },
  {
    "id": "FOLIO_train_753",
    "context": "Roads are made of either concrete or asphalt. Roads made of concrete last longer than roads made with asphalt. Roads made of asphalt are smoother than roads made of concrete. Everyone prefers the smoother of two roads. Road one is made of concrete and Road two is made of asphalt.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Road two is not smoother than Road one.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRoad(x) ::: x is a road.\nConcrete(x) ::: x is made of concrete.\nAsphalt(x) ::: x is made of asphalt.\nLastLonger(x, y) ::: x lasts longer than y.\nSmoother(x, y) ::: x is smoother than y.\nPrefer(x, y) ::: x prefers y.\nPremises:\n∀x (Road(x) → (Concrete(x) ∨ Asphalt(x))) ::: Roads are made of either concrete or asphalt.\n∀x (Concrete(x) → LastLonger(x, y)) ::: Roads made of concrete last longer than roads made with asphalt.\n∀x (Asphalt(x) → Smoother(x, y)) ::: Roads made of asphalt are smoother than roads made of concrete.\n∀x ∀y (Smoother(x, y) → Prefer(x, y)) ::: Everyone prefers the smoother of two roads.\nRoad(roadOne) ∧ Concrete(roadOne) ::: Road one is made of concrete.\nRoad(roadTwo) ∧ Asphalt(roadTwo) ::: Road two is made of asphalt.\nConclusion:\n¬Smoother(roadTwo, roadOne) ::: Road two is not smoother than Road one.\n------\nProblem:\nAll people who are not students are either employed or unemployed. All people who are employed are either employed full-time or employed part-time. All people who are employed full-time are employed"
    ]
  },
  {
    "id": "FOLIO_train_754",
    "context": "Roads are made of either concrete or asphalt. Roads made of concrete last longer than roads made with asphalt. Roads made of asphalt are smoother than roads made of concrete. Everyone prefers the smoother of two roads. Road one is made of concrete and Road two is made of asphalt.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? John prefers Road two.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRoad(x) ::: x is a road.\nConcrete(x) ::: x is made of concrete.\nAsphalt(x) ::: x is made of asphalt.\nLastLonger(x, y) ::: x lasts longer than y.\nSmoother(x, y) ::: x is smoother than y.\nPrefer(x, y) ::: x prefers y.\nPremises:\n∀x (Road(x) → (Concrete(x) ∨ Asphalt(x))) ::: Roads are made of either concrete or asphalt.\n∀x (Concrete(x) → ¬LastLonger(x, y)) ∧ ∀x (Asphalt(x) → LastLonger(x, y)) ::: Roads made of concrete last longer than roads made with asphalt.\n∀x (Asphalt(x) → Smoother(x, y)) ∧ ∀x (Concrete(x) → ¬Smoother(x, y)) ::: Roads made of asphalt are smoother than roads made of concrete.\n∀x ∀y (Smoother(x, y) → Prefer(x, y)) ::: Everyone prefers the smoother of two roads.\nRoad(roadOne) ∧ Concrete(roadOne) ::: Road one is made of concrete.\nRoad(roadTwo) ∧ Asphalt(roadTwo) ::: Road two is made of asphalt.\nConclusion:\nPrefer(john, roadTwo) ::: John prefers Road two."
    ]
  },
  {
    "id": "FOLIO_train_755",
    "context": "Camp Davern is a traditional summer camp for boys and girls. Camp Davern was established in the year 1946. Camp Davern was operated by the YMCA until the year 2015. Camp Davern is one of Ontario's oldest summer camps.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? One of Ontario's oldest summer camps is a traditional summer camp for boys and girls.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTraditionalSummerCamp(x) ::: x is a traditional summer camp for boys and girls.\nSummerCamp(x) ::: x is a summer camp.\nOperatedBy(x, y) ::: x is operated by y.\nEstablishedIn(x, y) ::: x was established in year y.\nOneOf(x, y) ::: x is one of y.\nPremises:\nTraditionalSummerCamp(campDavern) ∧ SummerCamp(campDavern) ∧ OperatedBy(campDavern, ymca) ∧ EstablishedIn(campDavern, year1946) ∧ OneOf(campDavern, oneOfOntariosOldestSummerCamps) ::: Camp Davern is a traditional summer camp for boys and girls. Camp Davern was established in the year 1946. Camp Davern was operated by the YMCA until the year 2015. Camp Davern is one of Ontario's oldest summer camps.\nConclusion:\nOneOf(oneOfOntariosOldestSummerCamps, traditionalSummerCampForBoysAndGirls) ::: One of Ontario's oldest summer camps is a traditional summer camp for boys and girls.\n------\nProblem:\nThe first-order logic formular is defined as follows:\n1) logical conjunction of expr1 and expr2: expr1 ∧ expr2\n2) logical disjunction of expr1 and expr2: expr1 ∨ expr2\n3) logical exclusive disjunction of expr1 and expr2: expr1 ⊕ expr2\n4) logical negation of expr1: ¬"
    ]
  },
  {
    "id": "FOLIO_train_756",
    "context": "Camp Davern is a traditional summer camp for boys and girls. Camp Davern was established in the year 1946. Camp Davern was operated by the YMCA until the year 2015. Camp Davern is one of Ontario's oldest summer camps.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A traditional summer camp for boys and girls was operated by the YMCA until the year 2015.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTraditionalSummerCamp(x) ::: x is a traditional summer camp for boys and girls.\nOperated(x, y) ::: x was operated by y.\nEstablished(x, y) ::: x was established in year y.\nYMCA(x) ::: x is the YMCA.\nOntario(x) ::: x is Ontario.\nPremises:\nTraditionalSummerCamp(campDavern) ∧ Established(campDavern, year1946) ∧ Operated(campDavern, ymca) ∧ Operated(campDavern, year2015) ::: Camp Davern is a traditional summer camp for boys and girls. Camp Davern was established in the year 1946. Camp Davern was operated by the YMCA until the year 2015.\nConclusion:\nTraditionalSummerCamp(x) ∧ Operated(x, ymca) ∧ Operated(x, year2015) ::: A traditional summer camp for boys and girls was operated by the YMCA until the year 2015.\n------\nProblem:\nThe first computer bug was found in the Harvard Mark II computer in 1947. The first computer bug was a moth. The first computer bug was found by Grace Hopper. The first computer bug was found in the Harvard Mark II computer in 1947.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The first computer bug was a moth.\nBased on the above information, is the following statement true, false, or uncertain? The first computer bug was"
    ]
  },
  {
    "id": "FOLIO_train_757",
    "context": "Camp Davern is a traditional summer camp for boys and girls. Camp Davern was established in the year 1946. Camp Davern was operated by the YMCA until the year 2015. Camp Davern is one of Ontario's oldest summer camps.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Camp Davern was established in 1989.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCamp(x) ::: x is a camp.\nSummerCamp(x) ::: x is a summer camp.\nBoysAndGirls(x) ::: x is a camp for boys and girls.\nTraditional(x) ::: x is a traditional summer camp.\nEstablished(x, y) ::: x was established in year y.\nOperated(x, y) ::: x was operated by y.\nOneOf(x, y) ::: x is one of y.\nPremises:\nCamp(campDavern) ∧ SummerCamp(campDavern) ∧ BoysAndGirls(campDavern) ∧ Traditional(campDavern) ::: Camp Davern is a traditional summer camp for boys and girls.\nEstablished(campDavern, year1946) ::: Camp Davern was established in the year 1946.\nOperated(campDavern, ymca) ∧ Operated(campDavern, year2015) ::: Camp Davern was operated by the YMCA until the year 2015.\nOneOf(campDavern, ontarioSummerCamps) ::: Camp Davern is one of Ontario's oldest summer camps.\nConclusion:\nEstablished(campDavern, year1989) ::: Camp Davern was established in 1989.\n------\nProblem:\nThe first person to win the Nobel Prize in Physics was Wilhelm Conrad Röntgen. The first person to win the Nobel Prize in Chemistry was Jacobus Henricus van 't Hoff. The first person to win the Nobel Prize in"
    ]
  },
  {
    "id": "FOLIO_train_758",
    "context": "If people publish journals, then they do not work in the entertainment industry. All people who are award-winning novelists publish journals. People either work in the entertainment industry or are highly acclaimed in their profession. If people are highly acclaimed in their profession, then they often hold tenured and high-ranking positions at their workplace. If people are highly acclaimed in their profession, then they often receive glowing feedback and recommendations from their colleagues. If Emily is either both highly acclaimed in her profession and often holds tenured and high-ranking positions at her workplace, or she is neither highly acclaimed in her profession nor often holds tenured and high-ranking positions at her workplace, then Emily is not highly acclaimed in her profession.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Emily often holds tenured and high-ranking positions at her workplace.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPublish(x) ::: x publishes journals.\nWork(x) ::: x works in the entertainment industry.\nAwardWinningNovelist(x) ::: x is an award-winning novelist.\nHighlyAcclaimed(x) ::: x is highly acclaimed in their profession.\nOften(x, y) ::: x often does y.\nTenured(x) ::: x holds tenured and high-ranking positions at their workplace.\nGlowing(x) ::: x receives glowing feedback and recommendations from their colleagues.\nPremises:\n∀x (Publish(x) → ¬Work(x)) ::: If people publish journals, then they do not work in the entertainment industry.\n∀x (AwardWinningNovelist(x) → Publish(x)) ::: All people who are award-winning novelists publish journals.\n∀x (Work(x) ∨ HighlyAcclaimed(x)) ::: People either work in the entertainment industry or are highly acclaimed in their profession.\n∀x (HighlyAcclaimed(x) → Often(x, Tenured)) ::: If people are highly acclaimed in their profession, then they often hold tenured and high-ranking positions at their workplace.\n∀x (HighlyAcclaimed(x) → Often(x, Glowing)) ::: If people are highly acclaimed in their profession, then they often receive glowing feedback and recommendations from their colleagues.\n(HighlyAcclaimed(emily) ∧ Often(emily, Tenured)) ⊕ ¬(HighlyAcclaimed(emily) ∨ Often(emily, Tenured)) ::: If"
    ]
  },
  {
    "id": "FOLIO_train_759",
    "context": "If people publish journals, then they do not work in the entertainment industry. All people who are award-winning novelists publish journals. People either work in the entertainment industry or are highly acclaimed in their profession. If people are highly acclaimed in their profession, then they often hold tenured and high-ranking positions at their workplace. If people are highly acclaimed in their profession, then they often receive glowing feedback and recommendations from their colleagues. If Emily is either both highly acclaimed in her profession and often holds tenured and high-ranking positions at her workplace, or she is neither highly acclaimed in her profession nor often holds tenured and high-ranking positions at her workplace, then Emily is not highly acclaimed in her profession.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Emily often receives glowing feedback and recommendations from their colleagues and is an award-winning novelist.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPublish(x) ::: x publishes journals.\nWork(x) ::: x works in the entertainment industry.\nAwardWinningNovelist(x) ::: x is an award-winning novelist.\nHighlyAcclaimed(x) ::: x is highly acclaimed in their profession.\nTenured(x) ::: x often holds tenured and high-ranking positions at their workplace.\nGlowingFeedback(x) ::: x often receives glowing feedback and recommendations from their colleagues.\nPremises:\n∀x (Publish(x) → ¬Work(x)) ::: If people publish journals, then they do not work in the entertainment industry.\n∀x (AwardWinningNovelist(x) → Publish(x)) ::: All people who are award-winning novelists publish journals.\n∀x (Work(x) ∨ HighlyAcclaimed(x)) ::: People either work in the entertainment industry or are highly acclaimed in their profession.\n∀x (HighlyAcclaimed(x) → Tenured(x)) ::: If people are highly acclaimed in their profession, then they often hold tenured and high-ranking positions at their workplace.\n∀x (HighlyAcclaimed(x) → GlowingFeedback(x)) ::: If people are highly acclaimed in their profession, then they often receive glowing feedback and recommendations from their colleagues.\n(HighlyAcclaimed(emily) ∧ Tenured(emily)) ⊕ ¬(HighlyAcclaimed(emily) ∨ Tenured(emily)) ::: If Emily is either both highly acclaimed in her profession and often holds tenured and high"
    ]
  },
  {
    "id": "FOLIO_train_760",
    "context": "If people publish journals, then they do not work in the entertainment industry. All people who are award-winning novelists publish journals. People either work in the entertainment industry or are highly acclaimed in their profession. If people are highly acclaimed in their profession, then they often hold tenured and high-ranking positions at their workplace. If people are highly acclaimed in their profession, then they often receive glowing feedback and recommendations from their colleagues. If Emily is either both highly acclaimed in her profession and often holds tenured and high-ranking positions at her workplace, or she is neither highly acclaimed in her profession nor often holds tenured and high-ranking positions at her workplace, then Emily is not highly acclaimed in her profession.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Emily either often receives glowing feedback and recommendations from her colleagues or is an award-winning novelist, then Emily does not both publish journals and is an award-winning novelist.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPublish(x) ::: x publishes journals.\nWork(x) ::: x works in the entertainment industry.\nAwardWinningNovelist(x) ::: x is an award-winning novelist.\nHighlyAcclaimed(x) ::: x is highly acclaimed in her profession.\nTenured(x) ::: x often holds tenured and high-ranking positions at her workplace.\nGlowingFeedback(x) ::: x often receives glowing feedback and recommendations from her colleagues.\nPremises:\n∀x (Publish(x) → ¬Work(x)) ::: If people publish journals, then they do not work in the entertainment industry.\n∀x (AwardWinningNovelist(x) → Publish(x)) ::: All people who are award-winning novelists publish journals.\n∀x (Work(x) ∨ HighlyAcclaimed(x)) ::: People either work in the entertainment industry or are highly acclaimed in their profession.\n∀x (HighlyAcclaimed(x) → Tenured(x)) ::: If people are highly acclaimed in their profession, then they often hold tenured and high-ranking positions at their workplace.\n∀x (HighlyAcclaimed(x) → GlowingFeedback(x)) ::: If people are highly acclaimed in their profession, then they often receive glowing feedback and recommendations from their colleagues.\n(HighlyAcclaimed(emily) ∧ Tenured(emily)) ⊕ ¬(HighlyAcclaimed(emily) ∨ Tenured(emily)) ::: If Emily is either both highly acclaimed in her profession and often holds tenured and high-ranking positions at her workplace, or she is neither highly acclaimed in her profession nor often holds tenured and high-ranking positions at her workplace, then Emily is not highly acclaimed in her profession.\nConclusion:\n(Publish(emily) ∧ AwardWinningNovelist(emily)) → (Publish(emily) ∧ AwardWinningNovelist(emily)) ⊕ ¬(GlowingFeedback(emily) ∨ AwardWinningNovelist(emily)) ::: If Emily either often receives glowing feedback and recommendations from her colleagues or is an award-winning novelist, then Emily does not both publish journals and is an award-winning novelist.\n------"
    ]
  },
  {
    "id": "FOLIO_train_761",
    "context": "Thick as Thieves is a young adult fantasy novel, written by Megan Whalen Turner. Thick as Thieves was published by Greenwillow Books. If a book was published by a company, than the author of that book worked with the company that published the book. The fictional Mede Empire is where Thick as Thieves is set. The Mede Empire plots to swallow up some nearby countries. Attolia and Sounis are countries near the Mede Empire. Thick as Thieves was sold both as a hardcover and an e-book.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Megan Whalen Turner worked with Greenwillow Books.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPublish(x, y) ::: x is published by y.\nWork(x, y) ::: x worked with y.\nSet(x, y) ::: x is set in y.\nPlot(x, y) ::: x plots to swallow up y.\nNear(x, y) ::: x is near y.\nSell(x, y) ::: x is sold as y.\nHardcover(x) ::: x is a hardcover.\nEbook(x) ::: x is an e-book.\nPremises:\nThickAsThieves ::: Thick as Thieves is a book.\nPublish(greenwillowBooks, ThickAsThieves) ::: Thick as Thieves was published by Greenwillow Books.\n∀x (Publish(x, ThickAsThieves) → Work(Author(ThickAsThieves), x)) ::: If a book was published by a company, than the author of that book worked with the company that published the book.\nMedianEmpire ::: The Mede Empire is a country.\nSet(ThickAsThieves, MedianEmpire) ::: Thick as Thieves is set in the Mede Empire.\nPlot(MedeEmpire, Attolia) ::: The Mede Empire plots to swallow up Attolia.\nPlot(MedeEmpire, Sounis) ::: The Mede Empire plots to swallow up Sounis.\nSell(ThickAsThieves, hardcover) ::: Thick as Thieves is sold as a hardcover.\nSell(ThickAsThieves, ebook) ::: Thick as Thieves is sold as an e-book.\nConclusion:\nWork(Author(ThickAsThieves), greenwillowBooks) ::: Megan Whalen Turner worked with Greenwillow Books.\n------\nProblem:\nThe 1996 film The English Patient is based on the 1992 novel of the same name by Michael Ondaatje. The film was directed by Anthony Minghella and starred Ralph Fiennes, Juliette Binoche, Willem Dafoe, and Kristin Scott Thomas. The film was nominated for 12 Academy Awards and won nine, including Best Picture. The film was shot in Italy, Morocco, and Tunisia.\nThe English Patient is a 1996 film."
    ]
  },
  {
    "id": "FOLIO_train_762",
    "context": "Thick as Thieves is a young adult fantasy novel, written by Megan Whalen Turner. Thick as Thieves was published by Greenwillow Books. If a book was published by a company, than the author of that book worked with the company that published the book. The fictional Mede Empire is where Thick as Thieves is set. The Mede Empire plots to swallow up some nearby countries. Attolia and Sounis are countries near the Mede Empire. Thick as Thieves was sold both as a hardcover and an e-book.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Mede Empire plans to swallow up Attolia.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPublish(x, y) ::: x is published by y.\nWork(x, y) ::: x worked with y.\nSet(x, y) ::: x is set in y.\nPlot(x, y) ::: x plots to do y.\nNear(x, y) ::: x is near y.\nSell(x, y) ::: x is sold as y.\nHardcover(x) ::: x is a hardcover.\nEbook(x) ::: x is an e-book.\nPremises:\nThickAsThieves ::: Thick as Thieves is a book.\nPublish(greenwillowBooks, ThickAsThieves) ::: Thick as Thieves was published by Greenwillow Books.\n∀x (Publish(x, ThickAsThieves) → Work(Author(ThickAsThieves), x)) ::: If a book was published by a company, than the author of that book worked with the company that published the book.\nMedianEmpire ::: The Mede Empire is a country.\nSet(ThickAsThieves, MedianEmpire) ::: Thick as Thieves is set in the Mede Empire.\nPlot(MedeEmpire, swallowUp) ::: The Mede Empire plots to swallow up some nearby countries.\nAttolia ::: Attolia is a country.\nSounis ::: Sounis is a country.\nNear(MedeEmpire, Attolia) ::: The Mede Empire is near Attolia.\nNear(MedeEmpire, Sounis) ::: The Mede Empire is near Sounis.\nSell(ThickAsThieves, hardcover) ::: Thick as Thieves is sold as a hardcover.\nSell(ThickAsThieves, ebook) ::: Thick as Thieves is sold as an e-book.\nConclusion:\nPlot(MedeEmpire, swallowUpAttolia) ::: The Mede Empire plans to swallow up Attolia.\n------\nProblem:\nThe 1999 film The Matrix is a science fiction action film written and directed by the Wachowskis. The film is set in a dystopian future where reality as perceived by most humans is actually a simulated reality called \"the Matrix\", created by sentient machines to subdue the human population, while their bodies' heat and electrical activity are used as an"
    ]
  },
  {
    "id": "FOLIO_train_763",
    "context": "Thick as Thieves is a young adult fantasy novel, written by Megan Whalen Turner. Thick as Thieves was published by Greenwillow Books. If a book was published by a company, than the author of that book worked with the company that published the book. The fictional Mede Empire is where Thick as Thieves is set. The Mede Empire plots to swallow up some nearby countries. Attolia and Sounis are countries near the Mede Empire. Thick as Thieves was sold both as a hardcover and an e-book.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Thick as Thieves is not set in the mede empire.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPublished(x, y) ::: x was published by company y.\nWorked(x, y) ::: x worked with company y.\nSet(x, y) ::: x is set in y.\nPlot(x, y) ::: x plots to swallow up y.\nNear(x, y) ::: x is near y.\nSold(x, y) ::: x was sold as y.\nPremises:\nThickAsThieves ::: Thick as Thieves\nPublished(thickAsThieves, greenwillowBooks) ::: Thick as Thieves was published by Greenwillow Books.\n∀x (Published(x, y) → Worked(Author(x), y)) ::: If a book was published by a company, than the author of that book worked with the company that published the book.\nMedianEmpire ::: Mede Empire\nSet(thickAsThieves, MedianEmpire) ::: Thick as Thieves is set in the mede empire.\nPlot(MedianEmpire, Attolia) ::: The Mede Empire plots to swallow up some nearby countries.\nPlot(MedianEmpire, Sounis) ::: The Mede Empire plots to swallow up some nearby countries.\nNear(Attolia, MedianEmpire) ::: Attolia is near the Mede Empire.\nNear(Sounis, MedianEmpire) ::: Sounis is near the Mede Empire.\nSold(thickAsThieves, hardcover) ::: Thick as Thieves was sold both as a hardcover and an e-book.\nSold(thickAsThieves, ebook) ::: Thick as Thieves was sold both as a hardcover and an e-book.\nConclusion:\n¬Set(thickAsThieves, MedianEmpire) ::: Thick as Thieves is not set in the mede empire.\n------\nProblem:\nThe 1999 film The Matrix was directed by the Wachowskis. The 1999 film The Matrix was produced by Joel Silver. The 1999 film The Matrix was distributed by Warner Bros. Pictures. The 1999 film The Matrix was written by the Wachowskis. The 1999 film The Matrix was released in the United States. The 1999 film The Matrix was released in the United"
    ]
  },
  {
    "id": "FOLIO_train_764",
    "context": "Thick as Thieves is a young adult fantasy novel, written by Megan Whalen Turner. Thick as Thieves was published by Greenwillow Books. If a book was published by a company, than the author of that book worked with the company that published the book. The fictional Mede Empire is where Thick as Thieves is set. The Mede Empire plots to swallow up some nearby countries. Attolia and Sounis are countries near the Mede Empire. Thick as Thieves was sold both as a hardcover and an e-book.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Megan Whalen Turner did not work with Greenwillow Books.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPublish(x, y) ::: x is published by y.\nWork(x, y) ::: x worked with y.\nSet(x, y) ::: x is set in y.\nPlot(x, y) ::: x plots to swallow up y.\nNear(x, y) ::: x is near y.\nSell(x, y) ::: x is sold as y.\nPremises:\nThickAsThieves ::: Thick as Thieves\nPublish(greenwillowBooks, ThickAsThieves) ::: Thick as Thieves was published by Greenwillow Books.\n∀x (Publish(x, ThickAsThieves) → Work(Author(ThickAsThieves), x)) ::: If a book was published by a company, than the author of that book worked with the company that published the book.\nMedianEmpire ::: Mede Empire\nSet(ThickAsThieves, MedianEmpire) ::: The fictional Mede Empire is where Thick as Thieves is set.\nPlot(MedeEmpire, Attolia) ::: The Mede Empire plots to swallow up some nearby countries.\nPlot(MedeEmpire, Sounis) ::: The Mede Empire plots to swallow up some nearby countries.\nSell(ThickAsThieves, hardcover) ::: Thick as Thieves was sold both as a hardcover and an e-book.\nSell(ThickAsThieves, e-book) ::: Thick as Thieves was sold both as a hardcover and an e-book.\nConclusion:\n¬Work(Author(ThickAsThieves), greenwillowBooks) ::: Megan Whalen Turner did not work with Greenwillow Books.\n------\nProblem:\nThe 1996 film The English Patient is based on the 1992 novel of the same name by Michael Ondaatje. The film was directed by Anthony Minghella and starred Ralph Fiennes, Juliette Binoche, and Willem Dafoe. The film was nominated for 12 Academy Awards and won nine of them. The film was shot in Italy, Morocco, and Tunisia. The film was shot in English. The film was shot in black and white. The film was shot in color.\nThe English Patient was nominated for an Academy Award for Best Picture. The English Pat"
    ]
  },
  {
    "id": "FOLIO_train_765",
    "context": "WeTab is a MeeGo-based tablet computer. There is a WeTab product. WeTab was announced by Neofonie. Neofonie is a German producer. Germans speak English or German.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There is a tablet computer that was announced by a German.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProduct(x) ::: x is a product.\nAnnounce(x, y) ::: x announced y.\nGerman(x) ::: x is a German.\nSpeak(x, y) ::: x speaks y.\nEnglish(x) ::: x is English.\nGerman(x) ::: x is German.\nPremises:\nProduct(wetab) ∧ Announce(neofonie, wetab) ::: There is a WeTab product.\n∃x (Product(x) ∧ Announce(neofonie, x)) ::: WeTab was announced by Neofonie.\nGerman(neofonie) ∧ German(germans) ::: Neofonie is a German producer.\n∀x (German(x) → (Speak(x, English) ∨ Speak(x, German))) ::: Germans speak English or German.\nConclusion:\n∃x (Product(x) ∧ Announce(x, wetab)) ::: There is a tablet computer that was announced by a German.\n------\nProblem:\nA person who is a student is a student. A person who is a student is a person. A person who is a student is a person who is a student. A person who is a student is a person who is a student. A person who is a student is a person who is a student. A person who is a student is a person who is a student. A person who is a student is a person who is a student. A person who is a student is a person who is a student. A person who is a student is a person who is a student. A person who is a student is a person who is a student. A person who is a student is a person who is a student. A person who is a student is a person who is a student. A person who is a student is a person who is a student. A person who is a student is a person who is a student. A person who is a student is a person who is a student. A person who is a student is a person who is a student. A person who is a student is a person who is a student. A person who is a student is a person who is a student. A person who is a student is a person who is a student. A person who is a student is a person who is a student. A person who is a student is a person who is a student. A person who is a student is a person who is a student"
    ]
  },
  {
    "id": "FOLIO_train_766",
    "context": "WeTab is a MeeGo-based tablet computer. There is a WeTab product. WeTab was announced by Neofonie. Neofonie is a German producer. Germans speak English or German.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Neofonie doesn't speak English or German.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nProduct(x) ::: x is a product.\nAnnounce(x, y) ::: x announced y.\nProducer(x) ::: x is a producer.\nSpeak(x, y) ::: x speaks y.\nGerman(x) ::: x is a German.\nEnglish(x) ::: x is an English.\nPremises:\nProduct(wetab) ∧ Announce(neofonie, wetab) ::: There is a WeTab product.\nProduct(wetab) ∧ Announce(neofonie, wetab) ∧ Producer(neofonie) ::: WeTab was announced by Neofonie.\nProducer(neofonie) ∧ German(neofonie) ::: Neofonie is a German producer.\nGerman(neofonie) ∧ Speak(neofonie, english) ∧ Speak(neofonie, german) ::: Germans speak English or German.\nConclusion:\n¬Speak(neofonie, english) ∧ ¬Speak(neofonie, german) ::: Neofonie doesn't speak English or German.\n------\nProblem:\nA person is a student if and only if the person is a student. A person is a student if and only if the person is a student. A person is a student if and only if the person is a student. A person is a student if and only if the person is a student. A person is a student if and only if the person is a student. A person is a student if and only if the person is a student. A person is a student if and only if the person is a student. A person is a student if and only if the person is a student. A person is a student if and only if the person is a student. A person is a student if and only if the person is a student. A person is a student if and only if the person is a student. A person is a student if and only if the person is a student. A person is a student if and only if the person is a student. A person is a student if and only if the person is a student. A person is a student if and only if the person is a student. A person is a student if and only if the person is a student. A person is a student if and only if the person is a student. A person is a student if and only if the person is a student. A person is a student if and only"
    ]
  },
  {
    "id": "FOLIO_train_767",
    "context": "Some employees working in business analysis are good at math. All employees working in business analysis are working in this company. No employees working in this company are from China. All employees working in software engineering are from China. James is working in software engineering.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James is good at math.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEmployee(x) ::: x is an employee.\nBusinessAnalysis(x) ::: x is working in business analysis.\nSoftwareEngineering(x) ::: x is working in software engineering.\nGoodAtMath(x) ::: x is good at math.\nWorkingIn(x, y) ::: x is working in company y.\nFrom(x, y) ::: x is from country y.\nPremises:\n∃x (BusinessAnalysis(x) ∧ GoodAtMath(x)) ::: Some employees working in business analysis are good at math.\n∀x (BusinessAnalysis(x) → Employee(x)) ::: All employees working in business analysis are working in this company.\n∀x (Employee(x) → ¬From(x, china)) ::: No employees working in this company are from China.\n∀x (SoftwareEngineering(x) → From(x, china)) ::: All employees working in software engineering are from China.\nSoftwareEngineering(james) ::: James is working in software engineering.\nConclusion:\nGoodAtMath(james) ::: James is good at math.\n------\nProblem:\nSome people are good at math. All people who are good at math are good at science. Some people are good at science. Some people are good at math and good at science.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Some people are good at math and good at science.\n###\nPredicates:\nPerson(x) ::: x is a person.\nGoodAtMath(x) ::: x is good at math.\nGoodAtScience(x) ::: x is good at science.\nPremises:\n∃x (Person(x) ∧ GoodAtMath(x)) ::: Some people are good at math.\n∀x (GoodAtMath(x) → GoodAtScience(x)) ::: All people who are good at math are good at science.\n∃x (Person(x) ∧ GoodAtScience(x)) ::: Some people are good at science.\n∃x (Person(x) ∧ (GoodAtMath(x) ∧ GoodAtScience(x))) ::: Some people are good at math and good at science.\nConclusion:\n∃x (Person(x) �"
    ]
  },
  {
    "id": "FOLIO_train_768",
    "context": "Some employees working in business analysis are good at math. All employees working in business analysis are working in this company. No employees working in this company are from China. All employees working in software engineering are from China. James is working in software engineering.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James is not good at math and he is working in business analysis.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEmployee(x) ::: x is an employee.\nBusinessAnalysis(x) ::: x is working in business analysis.\nSoftwareEngineering(x) ::: x is working in software engineering.\nGoodAtMath(x) ::: x is good at math.\nWorkingIn(x, y) ::: x is working in company y.\nFrom(x, y) ::: x is from country y.\nPremises:\n∃x (Employee(x) ∧ BusinessAnalysis(x) ∧ GoodAtMath(x)) ::: Some employees working in business analysis are good at math.\n∀x (Employee(x) ∧ BusinessAnalysis(x) → WorkingIn(x, thisCompany)) ::: All employees working in business analysis are working in this company.\n∀x (Employee(x) ∧ WorkingIn(x, thisCompany) → ¬From(x, china)) ::: No employees working in this company are from China.\n∀x (Employee(x) ∧ SoftwareEngineering(x) → From(x, china)) ::: All employees working in software engineering are from China.\nJames(x) ::: x is James.\nSoftwareEngineering(james) ::: James is working in software engineering.\nConclusion:\n¬(GoodAtMath(james) ∧ BusinessAnalysis(james)) ::: James is not good at math and he is working in business analysis.\n------\nProblem:\nSome people are good at math. All people who are good at math are good at physics. Some people are good at physics. Some people are good at math and good at physics.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Some people are good at math and good at physics.\n###\nPredicates:\nGoodAtMath(x) ::: x is good at math.\nGoodAtPhysics(x) ::: x is good at physics.\nPremises:\n∃x (GoodAtMath(x) ∧ GoodAtPhysics(x)) ::: Some people are good at math and good at physics.\n∀x (GoodAtMath(x) → GoodAtPhysics(x)) ::: All people who are good at math are good at physics.\n∃x (GoodAtPhysics(x)) ::: Some people are good at physics.\n∃x (Good"
    ]
  },
  {
    "id": "FOLIO_train_769",
    "context": "Some employees working in business analysis are good at math. All employees working in business analysis are working in this company. No employees working in this company are from China. All employees working in software engineering are from China. James is working in software engineering.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If James is not good at math and he is in business analysis, then he is neither working in this company nor working in software engineering.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEmployee(x) ::: x is an employee.\nBusinessAnalysis(x) ::: x is working in business analysis.\nSoftwareEngineering(x) ::: x is working in software engineering.\nGoodAtMath(x) ::: x is good at math.\nWorkingIn(x, y) ::: x is working in company y.\nFrom(x, y) ::: x is from country y.\nPremises:\n∃x (Employee(x) ∧ BusinessAnalysis(x) ∧ GoodAtMath(x)) ::: Some employees working in business analysis are good at math.\n∀x (Employee(x) ∧ BusinessAnalysis(x) → WorkingIn(x, thisCompany)) ::: All employees working in business analysis are working in this company.\n∀x (Employee(x) ∧ WorkingIn(x, thisCompany) → ¬From(x, china)) ::: No employees working in this company are from China.\n∀x (Employee(x) ∧ SoftwareEngineering(x) → From(x, china)) ::: All employees working in software engineering are from China.\nJames(james) ∧ SoftwareEngineering(james) ::: James is working in software engineering.\nConclusion:\n(BusinessAnalysis(james) ∧ ¬GoodAtMath(james)) → (¬WorkingIn(james, thisCompany) ∧ ¬SoftwareEngineering(james)) ::: If James is not good at math and he is in business analysis, then he is neither working in this company nor working in software engineering.\n------\nProblem:\nSome people are good at math. All people who are good at math are good at science. Some people are good at science. Some people are good at math and good at science.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? If a person is good at math and good at science, then the person is good at math and good at science.\n###\nPredicates:\nPerson(x) ::: x is a person.\nGoodAtMath(x) ::: x is good at math.\nGoodAtScience(x) ::: x is good at science.\nPremises:\n∃x (Person(x) ∧ GoodAtMath(x)) ::: Some people are good at math.\n∀"
    ]
  },
  {
    "id": "FOLIO_train_770",
    "context": "The party provides five kinds of fruits: strawberry, orange, blueberry, grape, and cherry. All fruits are provided in the same weight at the beginning of the party. If the fruit had the lowest remaining weight at the end of the party, then it means it was the most popular fruit. At the end of the party, strawberries had the lowest remaining weight. At the end of the party, the amount of leftover blueberries was lower than that of cherries. Benjamin only ate oranges and grapes at the party.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Blueberries were the most popular fruit at the party.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFruit(x) ::: x is a fruit.\nStrawberry(x) ::: x is a strawberry.\nOrange(x) ::: x is an orange.\nBlueberry(x) ::: x is a blueberry.\nGrape(x) ::: x is a grape.\nCherry(x) ::: x is a cherry.\nEat(x, y) ::: x ate y.\nRemaining(x, y) ::: x has y remaining.\nPopular(x) ::: x is the most popular fruit.\nPremises:\nFruit(strawberry) ∧ Fruit(orange) ∧ Fruit(blueberry) ∧ Fruit(grape) ∧ Fruit(cherry) ::: The party provides five kinds of fruits: strawberry, orange, blueberry, grape, and cherry.\n∀x (Fruit(x) → Remaining(x, weight)) ::: All fruits are provided in the same weight at the beginning of the party.\n∀x (Fruit(x) → ¬Popular(x)) ::: If the fruit had the lowest remaining weight at the end of the party, then it means it was the most popular fruit.\nRemaining(strawberry, lowest) ::: At the end of the party, strawberries had the lowest remaining weight.\nRemaining(blueberry, amount) ∧ Remaining(cherry, amount) ::: At the end of the party, the amount of leftover blueberries was lower than that of cherries.\nEat(benjamin, orange) ∧ Eat(benjamin, grape) ::: Benjamin only ate oranges and grapes at the party.\nConclusion:\nPopular(blueberry) ::: Blueberries were the most popular fruit at the party.\n------"
    ]
  },
  {
    "id": "FOLIO_train_771",
    "context": "The party provides five kinds of fruits: strawberry, orange, blueberry, grape, and cherry. All fruits are provided in the same weight at the beginning of the party. If the fruit had the lowest remaining weight at the end of the party, then it means it was the most popular fruit. At the end of the party, strawberries had the lowest remaining weight. At the end of the party, the amount of leftover blueberries was lower than that of cherries. Benjamin only ate oranges and grapes at the party.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Cherries were the most popular fruit at the party.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFruit(x) ::: x is a fruit.\nStrawberry(x) ::: x is a strawberry.\nOrange(x) ::: x is an orange.\nBlueberry(x) ::: x is a blueberry.\nGrape(x) ::: x is a grape.\nCherry(x) ::: x is a cherry.\nEat(x, y) ::: x ate y.\nRemaining(x, y) ::: x has y remaining.\nPopular(x) ::: x is the most popular fruit.\nPremises:\nFruit(strawberry) ∧ Fruit(orange) ∧ Fruit(blueberry) ∧ Fruit(grape) ∧ Fruit(cherry) ::: The party provides five kinds of fruits: strawberry, orange, blueberry, grape, and cherry.\n∀x (Fruit(x) → Remaining(x, weight)) ::: All fruits are provided in the same weight at the beginning of the party.\n∀x (Fruit(x) → ¬Popular(x)) ::: If the fruit had the lowest remaining weight at the end of the party, then it means it was the most popular fruit.\nRemaining(strawberry, lowest) ::: At the end of the party, strawberries had the lowest remaining weight.\nRemaining(blueberry, amount) ∧ Remaining(cherry, amount) ::: At the end of the party, the amount of leftover blueberries was lower than that of cherries.\nEat(benjamin, orange) ∧ Eat(benjamin, grape) ::: Benjamin only ate oranges and grapes at the party.\nConclusion:\nPopular(cherry) ::: Cherries were the most popular fruit at the party.\n------"
    ]
  },
  {
    "id": "FOLIO_train_772",
    "context": "The party provides five kinds of fruits: strawberry, orange, blueberry, grape, and cherry. All fruits are provided in the same weight at the beginning of the party. If the fruit had the lowest remaining weight at the end of the party, then it means it was the most popular fruit. At the end of the party, strawberries had the lowest remaining weight. At the end of the party, the amount of leftover blueberries was lower than that of cherries. Benjamin only ate oranges and grapes at the party.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Benjamin ate blueberries at the party.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFruit(x) ::: x is a fruit.\nStrawberry(x) ::: x is a strawberry.\nOrange(x) ::: x is an orange.\nBlueberry(x) ::: x is a blueberry.\nGrape(x) ::: x is a grape.\nCherry(x) ::: x is a cherry.\nEat(x, y) ::: x ate y.\nRemaining(x, y) ::: x has y remaining.\nPopular(x) ::: x is the most popular fruit.\nPremises:\nFruit(strawberry) ∧ Fruit(orange) ∧ Fruit(blueberry) ∧ Fruit(grape) ∧ Fruit(cherry) ::: The party provides five kinds of fruits: strawberry, orange, blueberry, grape, and cherry.\n∀x (Fruit(x) → Remaining(x, weight)) ::: All fruits are provided in the same weight at the beginning of the party.\n∀x (Fruit(x) → ¬Popular(x)) ::: If the fruit had the lowest remaining weight at the end of the party, then it means it was the most popular fruit.\nRemaining(strawberry, lowest) ::: At the end of the party, strawberries had the lowest remaining weight.\nRemaining(blueberry, amount) ∧ Remaining(cherry, amount) ::: At the end of the party, the amount of leftover blueberries was lower than that of cherries.\nEat(benjamin, orange) ∧ Eat(benjamin, grape) ::: Benjamin only ate oranges and grapes at the party.\nConclusion:\nEat(benjamin, blueberry) ::: Benjamin ate blueberries at the party."
    ]
  },
  {
    "id": "FOLIO_train_773",
    "context": "All students who attend in person have registered for the conference. Students either attend the conference in person or remotely. No students from China attend the conference remotely. James attends the conference but he does not attend the conference remotely. Jack attends the conference and he is a student from China.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James attends the conference but not in person.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nStudent(x) ::: x is a student.\nAttend(x, y) ::: x attends the conference in year y.\nRegister(x, y) ::: x registers for the conference in year y.\nChina(x) ::: x is a student from China.\nInPerson(x) ::: x attends the conference in person.\nRemote(x) ::: x attends the conference remotely.\nPremises:\n∀x (Attend(x, year2020) → Register(x, year2020)) ::: All students who attend in person have registered for the conference.\n∀x (Attend(x, year2020) ⊕ Attend(x, year2020)) ::: Students either attend the conference in person or remotely.\n∀x (China(x) → ¬Remote(x)) ::: No students from China attend the conference remotely.\nAttend(james, year2020) ∧ ¬Attend(james, year2020) ::: James attends the conference but he does not attend the conference remotely.\nAttend(jack, year2020) ∧ China(jack) ::: Jack attends the conference and he is a student from China.\nConclusion:\nAttend(james, year2020) ∧ ¬InPerson(james) ::: James attends the conference but not in person.\n------\nProblem:\nAll people who are not students are not children. All children are students. All students are people.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? All people are students.\n###\nPredicates:\nStudent(x) ::: x is a student.\nChild(x) ::: x is a child.\nPerson("
    ]
  },
  {
    "id": "FOLIO_train_774",
    "context": "All students who attend in person have registered for the conference. Students either attend the conference in person or remotely. No students from China attend the conference remotely. James attends the conference but he does not attend the conference remotely. Jack attends the conference and he is a student from China.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jack attends the conference in person.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nStudent(x) ::: x is a student.\nAttend(x, y) ::: x attends the conference in year y.\nRegister(x, y) ::: x registers for the conference in year y.\nChina(x) ::: x is a student from China.\nRemote(x) ::: x attends the conference remotely.\nPremises:\n∀x (Attend(x, year) → Register(x, year)) ::: All students who attend in person have registered for the conference.\n∀x (Student(x) → (Attend(x, year) ∨ Remote(x))) ::: Students either attend the conference in person or remotely.\n∀x (China(x) → ¬Remote(x)) ::: No students from China attend the conference remotely.\nAttend(james, year) ∧ ¬Remote(james) ::: James attends the conference but he does not attend the conference remotely.\nAttend(jack, year) ∧ China(jack) ::: Jack attends the conference and he is a student from China.\nConclusion:\nAttend(jack, year) ∧ InPerson(jack) ::: Jack attends the conference in person.\n------\nProblem:\nAll people who are not students are not children. All children are students. All students are people.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? All people are students.\nBased on the above information, is the following statement true, false, or uncertain? All people are children.\nBased on the above information, is the following statement true, false, or uncertain? All children are people.\n###\nPredicates:\nStudent(x) ::: x is a student.\nChild(x) ::: x is a child.\nPerson(x) ::: x is a person"
    ]
  },
  {
    "id": "FOLIO_train_775",
    "context": "All students who attend in person have registered for the conference. Students either attend the conference in person or remotely. No students from China attend the conference remotely. James attends the conference but he does not attend the conference remotely. Jack attends the conference and he is a student from China.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jack has registered for the conference.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nStudent(x) ::: x is a student.\nAttend(x) ::: x attends the conference.\nAttendInPerson(x) ::: x attends the conference in person.\nAttendRemotely(x) ::: x attends the conference remotely.\nRegister(x) ::: x has registered for the conference.\nChina(x) ::: x is a student from China.\nPremises:\n∀x (Attend(x) → (AttendInPerson(x) ∨ AttendRemotely(x))) ::: Students either attend the conference in person or remotely.\n∀x (AttendInPerson(x) → Register(x)) ::: All students who attend in person have registered for the conference.\n∀x (AttendRemotely(x) → ¬China(x)) ::: No students from China attend the conference remotely.\nAttend(james) ∧ ¬AttendRemotely(james) ::: James attends the conference but he does not attend the conference remotely.\nAttend(jack) ∧ China(jack) ::: Jack attends the conference and he is a student from China.\nConclusion:\nRegister(jack) ::: Jack has registered for the conference.\n------\nProblem:\nAll people who are not students are not children. All children are students. All students are people.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? All people are students.\nBased on the above information, is the following statement true, false, or uncertain? All people are children.\nBased on the above information, is the following statement true, false, or uncertain? All children are people.\n###\nPredicates:\nStudent(x) ::: x is a student.\nChild(x) ::: x is a child.\nPerson(x"
    ]
  },
  {
    "id": "FOLIO_train_776",
    "context": "David Ha'ivri is a political strategist. If you are born in Israel to at least one Israeli parent, then you receive citizenship at birth. David Ha'ivri emigrated to the United States from Israel, where he was born to Israeli parents. Several Zionist leaders have been elected to the Shomron Regional Municipal council. David Ha'ivri is a Zionist leader.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? David Ha'ivri is an Israeli citizen.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nIsraeli(x) ::: x is an Israeli citizen.\nBorn(x, y) ::: x was born in country y.\nParent(x, y) ::: x is a parent of y.\nEmigrate(x, y) ::: x emigrated from country y.\nReceive(x, y) ::: x receives citizenship in country y.\nPoliticalStrategist(x) ::: x is a political strategist.\nZionistLeader(x) ::: x is a Zionist leader.\nElected(x, y) ::: x was elected to the Shomron Regional Municipal council.\nPremises:\nPoliticalStrategist(david) ::: David Ha'ivri is a political strategist.\n∀x (Born(x, israel) ∧ Parent(x, israeli) → Israeli(x)) ::: If you are born in Israel to at least one Israeli parent, then you receive citizenship at birth.\nBorn(david, israel) ∧ Parent(david, israeli) ::: David Ha'ivri emigrated to the United States from Israel, where he was born to Israeli parents.\n∃x (ZionistLeader(x) ∧ Elected(x, shomron)) ::: Several Zionist leaders have been elected to the Shomron Regional Municipal council.\nZionistLeader(david) ::: David Ha'ivri is a Zionist leader.\nConclusion:\nIsraeli(david) ::: David Ha'ivri is an Israeli citizen.\n------\nProblem:\nA person is a student if and only if they are enrolled in a university. A person is a student if and only if they are enrolled in a university. A person is a student if and only if they are enrolled in a university"
    ]
  },
  {
    "id": "FOLIO_train_777",
    "context": "David Ha'ivri is a political strategist. If you are born in Israel to at least one Israeli parent, then you receive citizenship at birth. David Ha'ivri emigrated to the United States from Israel, where he was born to Israeli parents. Several Zionist leaders have been elected to the Shomron Regional Municipal council. David Ha'ivri is a Zionist leader.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? David Ha'ivri is a United States citizen.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nIsraeli(x) ::: x is an Israeli person.\nIsraeliParent(x, y) ::: x is the parent of y and x is an Israeli person.\nBornIn(x, y) ::: x is born in country y.\nCitizenship(x, y) ::: x receives citizenship at birth in country y.\nEmigrate(x, y) ::: x emigrates from country x to country y.\nZionistLeader(x) ::: x is a Zionist leader.\nElected(x, y) ::: x is elected to y.\nPremises:\nIsraeli(david) ∧ IsraeliParent(david, david) ∧ BornIn(david, israel) ∧ Citizenship(david, israel) ::: David Ha'ivri is a political strategist.\n∀x (BornIn(x, israel) ∧ IsraeliParent(x, x) → Citizenship(x, israel)) ::: If you are born in Israel to at least one Israeli parent, then you receive citizenship at birth.\nBornIn(david, israel) ∧ IsraeliParent(david, david) ∧ Emigrate(david, unitedStates) ::: David Ha'ivri emigrated to the United States from Israel, where he was born to Israeli parents.\n∃x (ZionistLeader(x) ∧ Elected(x, shomron)) ::: Several Zionist leaders have been elected to the Shomron Regional Municipal council.\nZionistLeader(david) ::: David Ha'ivri is a Zionist leader.\nConclusion:\nCitizenship(david, unitedStates) ::: David Ha'ivri is a United States citizen"
    ]
  },
  {
    "id": "FOLIO_train_778",
    "context": "David Ha'ivri is a political strategist. If you are born in Israel to at least one Israeli parent, then you receive citizenship at birth. David Ha'ivri emigrated to the United States from Israel, where he was born to Israeli parents. Several Zionist leaders have been elected to the Shomron Regional Municipal council. David Ha'ivri is a Zionist leader.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? David Ha'ivri has been elected to the Shomron Regional Municipal council.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBorn(x, y) ::: x was born in country y.\nParent(x, y) ::: x is a parent of y.\nCitizen(x, y) ::: x is a citizen of country y.\nEmigrate(x, y) ::: x emigrated from country y to country x.\nZionistLeader(x) ::: x is a Zionist leader.\nElected(x, y) ::: x was elected to y.\nPremises:\nDavidHa'ivri ::: David Ha'ivri is a political strategist.\n∀x (Born(x, israel) ∧ Parent(x, y) ∧ ¬Born(y, israel)) → Citizen(x, israel) ::: If you are born in Israel to at least one Israeli parent, then you receive citizenship at birth.\nBorn(davidHa'ivri, israel) ∧ Parent(davidHa'ivri, israel) ∧ Emigrate(davidHa'ivri, unitedStates) ::: David Ha'ivri emigrated to the United States from Israel, where he was born to Israeli parents.\n∃x (ZionistLeader(x) ∧ Elected(x, shomronRegionalMunicipalCouncil)) ::: Several Zionist leaders have been elected to the Shomron Regional Municipal council.\nZionistLeader(davidHa'ivri) ::: David Ha'ivri is a Zionist leader.\nConclusion:\nElected(davidHa'ivri, shomronRegionalMunicipalCouncil) ::: David Ha'ivri has been elected to the Shomron Regional Municipal council.\n------\nProblem:\nA person is a student if and only if they are enrolled in a university"
    ]
  },
  {
    "id": "FOLIO_train_779",
    "context": "Mary has the flu. Flu and influenza are the same disease. Susan doesn't have influenza.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Either Mary or Susan has influenza.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFlu(x) ::: x has the flu.\nInfluenza(x) ::: x has influenza.\nPremises:\nFlu(mary) ::: Mary has the flu.\nFlu(mary) ↔ Influenza(mary) ::: Flu and influenza are the same disease.\n¬Influenza(susan) ::: Susan doesn't have influenza.\nConclusion:\nFlu(mary) ∨ Flu(susan) ::: Either Mary or Susan has influenza.\n------\nProblem:\nA person is a student if and only if the person is enrolled in a university. A person is enrolled in a university if and only if the person is enrolled in a course. A person is enrolled in a course if and only if the person is taking the course.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? A person is a student if and only if the person is taking a course.\n###\nPredicates:\nStudent(x) ::: x is a student.\nEnrolled(x, y) ::: x is enrolled in y.\nCourse(x) ::: x is a course.\nTaking(x, y) ::: x is taking y.\nPremises:\nStudent(x) ↔ Enrolled(x, university) ::: A person is a student if and only if the person is enrolled in a university.\nEnrolled(x, university) ↔ Enrolled(x, course) ::: A person is enrolled in a university if and only if the person is enrolled in a course.\nEnrolled(x, course) ↔ Taking(x, course) ::: A person is enrolled in a course if and only if the person is taking the course.\nConclusion:\nStudent(x) ↔ Taking(x, course) ::: A person"
    ]
  },
  {
    "id": "FOLIO_train_780",
    "context": "James Cocks was a British lawyer. James Cocks was a Whig politician who sat in the House of Commons. A British is a European. Any lawyer is familiar with laws. Some Whigs speak French.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? No lawyer ever sat in the House of Commons.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBritish(x) ::: x is a British person.\nEuropean(x) ::: x is a European person.\nLawyer(x) ::: x is a lawyer.\nFamiliar(x, y) ::: x is familiar with y.\nLaws(x) ::: x is laws.\nWhig(x) ::: x is a Whig.\nSpeak(x, y) ::: x speaks y.\nPolitician(x) ::: x is a politician.\nSit(x, y) ::: x sat in y.\nPremises:\nLawyer(james) ∧ Whig(james) ∧ Sit(james, houseOfCommons) ::: James Cocks was a British lawyer who sat in the House of Commons.\n∀x (Lawyer(x) → Familiar(x, laws)) ::: Any lawyer is familiar with laws.\n∃x (Whig(x) ∧ Speak(x, french)) ::: Some Whigs speak French.\nBritish(james) ∧ European(james) ::: James Cocks was a British person.\nConclusion:\n¬∃x (Lawyer(x) ∧ Sit(x, houseOfCommons)) ::: No lawyer ever sat in the House of Commons.\n------"
    ]
  },
  {
    "id": "FOLIO_train_781",
    "context": "James Cocks was a British lawyer. James Cocks was a Whig politician who sat in the House of Commons. A British is a European. Any lawyer is familiar with laws. Some Whigs speak French.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Some European is familiar with laws.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBritish(x) ::: x is a British person.\nEuropean(x) ::: x is a European person.\nLawyer(x) ::: x is a lawyer.\nWhig(x) ::: x is a Whig.\nPolitician(x) ::: x is a politician.\nSit(x, y) ::: x sits in the House of Commons in year y.\nSpeak(x, y) ::: x speaks language y.\nFamiliar(x, y) ::: x is familiar with y.\nPremises:\nBritish(james) ∧ Lawyer(james) ∧ Whig(james) ∧ Sit(james, year1830) ::: James Cocks was a British lawyer who sat in the House of Commons.\n∀x (Lawyer(x) → Familiar(x, laws)) ::: Any lawyer is familiar with laws.\n∃x (Whig(x) ∧ Speak(x, french)) ::: Some Whigs speak French.\nConclusion:\n∃x (European(x) ∧ Familiar(x, laws)) ::: Some European is familiar with laws.\n------\nProblem:\nA person is a student if and only if the person is a student. A person is a student if and only if"
    ]
  },
  {
    "id": "FOLIO_train_782",
    "context": "James Cocks was a British lawyer. James Cocks was a Whig politician who sat in the House of Commons. A British is a European. Any lawyer is familiar with laws. Some Whigs speak French.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James Cocks speaks French.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBritish(x) ::: x is a British person.\nEuropean(x) ::: x is a European person.\nLawyer(x) ::: x is a lawyer.\nWhig(x) ::: x is a Whig.\nPolitician(x) ::: x is a politician.\nSit(x, y) ::: x sits in the House of Commons in year y.\nSpeak(x, y) ::: x speaks language y.\nFamiliar(x, y) ::: x is familiar with y.\nLaws(x) ::: x is laws.\nPremises:\nBritish(james) ∧ Lawyer(james) ∧ Whig(james) ∧ Sit(james, year1790) ::: James Cocks was a British lawyer who sat in the House of Commons.\n∀x (Lawyer(x) → Familiar(x, laws)) ::: Any lawyer is familiar with laws.\n∃x (Whig(x) ∧ Speak(x, french)) ::: Some Whigs speak French.\nBritish(x) → European(x) ::: A British is a European.\nConclusion:\nSpeak(james, french) ::: James Cocks speaks French.\n------\nProblem:\nA person who is a"
    ]
  },
  {
    "id": "FOLIO_train_783",
    "context": "Beasts of Prey is either a fantasy novel or a science fiction novel. Science fiction novels are not about mythological creatures Beasts of Prey Is about a creature known as the Shetani. Shetanis are mythological.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Beasts of prey is a fantasy novel.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBeastOfPrey(x) ::: x is a beast of prey.\nFantasyNovel(x) ::: x is a fantasy novel.\nScienceFictionNovel(x) ::: x is a science fiction novel.\nAbout(x, y) ::: x is about y.\nMythological(x) ::: x is a mythological creature.\nPremises:\nBeastOfPrey(beastsOfPrey) ∧ FantasyNovel(beastsOfPrey) ∧ ScienceFictionNovel(beastsOfPrey) ::: Beasts of Prey is either a fantasy novel or a science fiction novel.\n∀x (ScienceFictionNovel(x) → ¬About(x, mythological)) ::: Science fiction novels are not about mythological creatures.\nAbout(beastsOfPrey, shetani) ∧ Mythological(shetani) ::: Beasts of Prey is about a creature known as the Shetani.\nConclusion:\nFantasyNovel(beastsOfPrey) ::: Beasts of prey is a fantasy novel.\n------\nProblem:\nA person who is a student is either a person who is a teacher or a person who is a researcher. A person who is a teacher is a person who is a researcher. A person who"
    ]
  },
  {
    "id": "FOLIO_train_784",
    "context": "Beasts of Prey is either a fantasy novel or a science fiction novel. Science fiction novels are not about mythological creatures Beasts of Prey Is about a creature known as the Shetani. Shetanis are mythological.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Beasts of prey isn't a science fiction novel.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBeastOfPrey(x) ::: x is a beast of prey.\nFantasy(x) ::: x is a fantasy novel.\nScienceFiction(x) ::: x is a science fiction novel.\nAbout(x, y) ::: x is about y.\nMythological(x) ::: x is a mythological creature.\nPremises:\nBeastOfPrey(beastsOfPrey) ∧ (Fantasy(beastsOfPrey) ∨ ScienceFiction(beastsOfPrey)) ::: Beasts of Prey is either a fantasy novel or a science fiction novel.\nScienceFiction(x) → ¬About(x, mythological) ::: Science fiction novels are not about mythological creatures.\nAbout(beastsOfPrey, shetani) ∧ Mythological(shetani) ::: Beasts of Prey is about a creature known as the Shetani.\nConclusion:\n¬ScienceFiction(beastsOfPrey) ::: Beasts of prey isn't a science fiction novel.\n------\nProblem:\nA person who is a student is either a person who is a teacher or a person who is a researcher. A person who is a teacher is a person who is a researcher. A person who is a researcher is a person who is a student.\nQuestion:"
    ]
  },
  {
    "id": "FOLIO_train_785",
    "context": "Beasts of Prey is either a fantasy novel or a science fiction novel. Science fiction novels are not about mythological creatures Beasts of Prey Is about a creature known as the Shetani. Shetanis are mythological.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A shetani is either mythological or a creature.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBeast(x) ::: x is a beast.\nPrey(x) ::: x is prey.\nFantasy(x) ::: x is a fantasy novel.\nScienceFiction(x) ::: x is a science fiction novel.\nAbout(x, y) ::: x is about y.\nMythological(x) ::: x is mythological.\nCreature(x) ::: x is a creature.\nPremises:\nBeastsOfPrey ∧ (Fantasy(BeastsOfPrey) ∨ ScienceFiction(BeastsOfPrey)) ::: Beasts of Prey is either a fantasy novel or a science fiction novel.\nScienceFiction(BeastsOfPrey) → ¬(About(BeastsOfPrey, mythologicalCreature)) ::: Science fiction novels are not about mythological creatures.\nAbout(BeastsOfPrey, shetani) ::: Beasts of Prey Is about a creature known as the Shetani.\nMythological(shetani) ::: Shetanis are mythological.\nConclusion:\nMythological(shetani) ∨ Creature(shetani) ::: A shetani is either mythological or a creature.\n------\nProblem:\nA person who is a student is either a person who is a teacher or a person who is a student."
    ]
  },
  {
    "id": "FOLIO_train_786",
    "context": "Odell is an English surname originating in Odell, Bedfordshire. In some families Odell is spelled O'Dell, in a mistaken Irish adaptation. Notable people with the surname include Amy Odell, Jack Odell, and Mats Odell. Amy Odell is a British singer-songwriter. Jack Odell is an English toy inventor.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jack Odell is a notable people.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEnglish(x) ::: x is an English person.\nSurname(x) ::: x is a surname.\nOrigin(x, y) ::: x originates in y.\nNotable(x) ::: x is a notable person.\nSing(x) ::: x is a singer.\nSongwriter(x) ::: x is a songwriter.\nToyInventor(x) ::: x is a toy inventor.\nPremises:\nEnglish(odell) ∧ Surname(odell) ∧ Origin(odell, bedfordshire) ::: Odell is an English surname originating in Odell, Bedfordshire.\n∃x (Surname(x) ∧ Origin(x, bedfordshire)) ::: In some families Odell is spelled O'Dell, in a mistaken Irish adaptation.\nNotable(amy) ∧ Surname(amy) ∧ Sing(amy) ::: Amy Odell is a British singer-songwriter.\nNotable(jack) ∧ Surname(jack) ∧ ToyInventor(jack) ::: Jack Odell is an English toy inventor.\nConclusion:\nNotable(jack) ::: Jack Odell is a notable people.\n------\nProblem:\nThe 1996 film The English Pat"
    ]
  },
  {
    "id": "FOLIO_train_787",
    "context": "Odell is an English surname originating in Odell, Bedfordshire. In some families Odell is spelled O'Dell, in a mistaken Irish adaptation. Notable people with the surname include Amy Odell, Jack Odell, and Mats Odell. Amy Odell is a British singer-songwriter. Jack Odell is an English toy inventor.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Odell is Amy Odell's surname.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEnglish(x) ::: x is an English surname.\nOdell(x) ::: x is the surname Odell.\nBritish(x) ::: x is a British singer-songwriter.\nToyInventor(x) ::: x is an English toy inventor.\nPremises:\nEnglish(odell) ::: Odell is an English surname.\nOdell(amy) ∧ British(amy) ::: Amy Odell is a British singer-songwriter.\nOdell(jack) ∧ ToyInventor(jack) ::: Jack Odell is an English toy inventor.\nConclusion:\nOdell(amy) ::: Odell is Amy Odell's surname.\n------\nProblem:\nThe 1996 film The English Patient is based on the 1992 novel of the same name by Michael Ondaatje. The film was directed by Anthony Minghella and stars Ralph Fiennes, Juliette Binoche, Willem Dafoe, Kristin Scott Thomas, and Naveen Andrews. The film was nominated for 12 Academy Awards and won nine, including Best Picture, Best Director, and Best Supporting Actress.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The English Patient was directed by Anthony Minghella"
    ]
  },
  {
    "id": "FOLIO_train_788",
    "context": "Odell is an English surname originating in Odell, Bedfordshire. In some families Odell is spelled O'Dell, in a mistaken Irish adaptation. Notable people with the surname include Amy Odell, Jack Odell, and Mats Odell. Amy Odell is a British singer-songwriter. Jack Odell is an English toy inventor.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Amy Odell is an English toy inventor.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEnglish(x) ::: x is an English person.\nSurname(x) ::: x is a surname.\nOdell(x) ::: x is the surname Odell.\nOdell(x) ::: x is the surname O'Dell.\nBritish(x) ::: x is a British person.\nSingerSongwriter(x) ::: x is a singer-songwriter.\nToyInventor(x) ::: x is a toy inventor.\nPremises:\nOdell(amy) ∧ SingerSongwriter(amy) ::: Amy Odell is a British singer-songwriter.\nOdell(jack) ∧ ToyInventor(jack) ::: Jack Odell is an English toy inventor.\nOdell(mats) ::: Mats Odell is a person with the surname Odell.\nConclusion:\nToyInventor(amy) ::: Amy Odell is an English toy inventor.\n------\nProblem:\nThe 1996 film The English Patient is a romantic drama film directed by Anthony Minghella and based on the 1992 novel of the same name by Michael Ondaatje. The film stars Ralph Fiennes, Juliette Binoche, Willem Dafoe, Kristin Scott Thomas, and Naveen"
    ]
  },
  {
    "id": "FOLIO_train_789",
    "context": "Odell is an English surname originating in Odell, Bedfordshire. In some families Odell is spelled O'Dell, in a mistaken Irish adaptation. Notable people with the surname include Amy Odell, Jack Odell, and Mats Odell. Amy Odell is a British singer-songwriter. Jack Odell is an English toy inventor.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Amy Odell is also Amy O'dell.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEnglish(x) ::: x is an English surname.\nOdell(x) ::: x is a surname originating in Odell, Bedfordshire.\nOdell(x) ::: x is a surname originating in Odell, Bedfordshire.\nOdell(x) ::: x is a surname originating in Odell, Bedfordshire.\nOdell(x) ::: x is a surname originating in Odell, Bedfordshire.\nOdell(x) ::: x is a surname originating in Odell, Bedfordshire.\nOdell(x) ::: x is a surname originating in Odell, Bedfordshire.\nOdell(x) ::: x is a surname originating in Odell, Bedfordshire.\nOdell(x) ::: x is a surname originating in Odell, Bedfordshire.\nOdell(x) ::: x is a surname originating in Odell, Bedfordshire.\nOdell(x) ::: x is a surname originating in Odell, Bedfordshire.\nOdell(x) ::: x is a surname originating in Odell, Bedfordshire.\nOdell(x) ::: x is a surname originating in Odell, Bedfordshire.\nOdell(x) ::: x is a surn"
    ]
  },
  {
    "id": "FOLIO_train_790",
    "context": "If you go somewhere by train, you will not lose time. If you go somewhere by car and meet traffic jam, you will lose time. If you lose time, you will be late for work. Mary can get from New Haven to New York City either by train or car. Mary is late for work.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mary gets from New Haven to New York City by train.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGo(x, y) ::: x goes to y.\nLoseTime(x) ::: x loses time.\nBeLate(x) ::: x is late.\nMeetTrafficJam(x) ::: x meets traffic jam.\nTrain(x) ::: x is a train.\nCar(x) ::: x is a car.\nPremises:\n∀x (Go(x, y) → ¬LoseTime(x)) ::: If you go somewhere by train, you will not lose time.\n∀x (Go(x, y) ∧ MeetTrafficJam(x)) → LoseTime(x) ::: If you go somewhere by car and meet traffic jam, you will lose time.\n∀x (LoseTime(x) → BeLate(x)) ::: If you lose time, you will be late for work.\n∃x (Go(mary, newYorkCity) ∧ (Train(x) ∨ Car(x))) ::: Mary can get from New Haven to New York City either by train or car.\nBeLate(mary) ::: Mary is late for work.\nConclusion:\nGo(mary, newYorkCity) ∧ Train(x) ::: Mary gets from New Haven to New York City by train.\n------"
    ]
  },
  {
    "id": "FOLIO_train_791",
    "context": "If you go somewhere by train, you will not lose time. If you go somewhere by car and meet traffic jam, you will lose time. If you lose time, you will be late for work. Mary can get from New Haven to New York City either by train or car. Mary is late for work.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mary gets from New Haven to New York City by car.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGo(x, y) ::: x goes to y.\nTrain(x) ::: x is a train.\nCar(x) ::: x is a car.\nMeet(x, y) ::: x meets y.\nLose(x) ::: x loses time.\nLate(x) ::: x is late for work.\nPremises:\n∀x (Go(x, y) ∧ Train(x)) → ¬Lose(x) ::: If you go somewhere by train, you will not lose time.\n∀x (Go(x, y) ∧ Car(x) ∧ Meet(x, trafficJam)) → Lose(x) ::: If you go somewhere by car and meet traffic jam, you will lose time.\n∀x (Lose(x) → Late(x)) ::: If you lose time, you will be late for work.\n∃x (Go(mary, newYorkCity) ∧ (Train(x) ∨ Car(x))) ::: Mary can get from New Haven to New York City either by train or car.\nLate(mary) ::: Mary is late for work.\nConclusion:\nGo(mary, newYorkCity) ∧ Car(mary) ::: Mary gets from New Haven to New"
    ]
  },
  {
    "id": "FOLIO_train_792",
    "context": "If you go somewhere by train, you will not lose time. If you go somewhere by car and meet traffic jam, you will lose time. If you lose time, you will be late for work. Mary can get from New Haven to New York City either by train or car. Mary is late for work.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mary meets traffic jam.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGo(x, y) ::: x goes to y.\nTrain(x) ::: x is a train.\nCar(x) ::: x is a car.\nMeet(x, y) ::: x meets y.\nTrafficJam(x) ::: x is a traffic jam.\nLose(x) ::: x loses time.\nBe(x, y) ::: x is y.\nLate(x) ::: x is late.\nWork(x) ::: x is work.\nPremises:\n∀x (Go(x, y) → ¬Lose(x)) ::: If you go somewhere by train, you will not lose time.\n∀x (Go(x, y) ∧ Meet(x, TrafficJam(x)) → Lose(x)) ::: If you go somewhere by car and meet traffic jam, you will lose time.\n∀x (Lose(x) → Be(x, Late(x))) ::: If you lose time, you will be late for work.\n∃x (Go(x, NewYorkCity) ∧ (Train(x) ∨ Car(x))) ::: Mary can get from New Haven to New York City either by train or car.\nBe(Mary, Late(Mary)) ::: Mary is late"
    ]
  },
  {
    "id": "FOLIO_train_793",
    "context": "If a person is hungry, the person is uncomfortable. If a person is uncomfortable, the person is unhappy.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If a person is not hungry, the person is unhappy.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nHungry(x) ::: x is hungry.\nUncomfortable(x) ::: x is uncomfortable.\nUnhappy(x) ::: x is unhappy.\nPremises:\nHungry(x) → Uncomfortable(x) ::: If a person is hungry, the person is uncomfortable.\nUncomfortable(x) → Unhappy(x) ::: If a person is uncomfortable, the person is unhappy.\nConclusion:\n¬Hungry(x) → Unhappy(x) ::: If a person is not hungry, the person is unhappy.\n------\nProblem:\nIf a person is a student, the person is a learner. If a person is a learner, the person is a thinker.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? If a person is a thinker, the person is a student.\n###\nPredicates:\nStudent(x) ::: x is a student.\nLearner(x) ::: x is a learner.\nThinker(x) ::: x is a thinker.\nPremises:\nStudent(x) → Learner(x) ::: If a person is a student, the person is a learner.\nLearner(x) → Thinker(x) ::: If a person is a learner, the person is a think"
    ]
  },
  {
    "id": "FOLIO_train_794",
    "context": "Tipped employees do not get a guaranteed minimum wage. If a person is a white-collar worker, they will get a guaranteed minimum wage (All white-collar workers get a guaranteed minimum wage). All lawyers are white-collar workers. Every advocate is a lawyer. Mary is not a lawyer or a tipped employee.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mary is a white-collar worker.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTippedEmployee(x) ::: x is a tipped employee.\nWhiteCollarWorker(x) ::: x is a white-collar worker.\nLawyer(x) ::: x is a lawyer.\nAdvocate(x) ::: x is an advocate.\nPremises:\n∀x (TippedEmployee(x) → ¬WhiteCollarWorker(x)) ::: Tipped employees do not get a guaranteed minimum wage.\n∀x (WhiteCollarWorker(x) → GuaranteedMinimumWage(x)) ::: If a person is a white-collar worker, they will get a guaranteed minimum wage (All white-collar workers get a guaranteed minimum wage).\nLawyer(lawyer) ∧ WhiteCollarWorker(lawyer) ::: All lawyers are white-collar workers.\n∀x (Advocate(x) → Lawyer(x)) ::: Every advocate is a lawyer.\n∀x (Mary ⊕ TippedEmployee(Mary)) ::: Mary is not a lawyer or a tipped employee.\nConclusion:\nWhiteCollarWorker(Mary) ::: Mary is a white-collar worker.\n------\nProblem:\nAll people who are not students are either working or unemployed. All people who are working are either employed or self-employed. All people"
    ]
  },
  {
    "id": "FOLIO_train_795",
    "context": "Tipped employees do not get a guaranteed minimum wage. If a person is a white-collar worker, they will get a guaranteed minimum wage (All white-collar workers get a guaranteed minimum wage). All lawyers are white-collar workers. Every advocate is a lawyer. Mary is not a lawyer or a tipped employee.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mary is an advocate.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTippedEmployee(x) ::: x is a tipped employee.\nWhiteCollarWorker(x) ::: x is a white-collar worker.\nLawyer(x) ::: x is a lawyer.\nAdvocate(x) ::: x is an advocate.\nPremises:\n∀x (TippedEmployee(x) → ¬GuaranteedMinimumWage(x)) ::: Tipped employees do not get a guaranteed minimum wage.\n∀x (WhiteCollarWorker(x) → GuaranteedMinimumWage(x)) ::: All white-collar workers get a guaranteed minimum wage.\nLawyer(lawyer) ∧ WhiteCollarWorker(lawyer) ::: All lawyers are white-collar workers.\n∀x (Advocate(x) → Lawyer(x)) ::: Every advocate is a lawyer.\n¬(Lawyer(mary) ∨ TippedEmployee(mary)) ::: Mary is not a lawyer or a tipped employee.\nConclusion:\nAdvocate(mary) ::: Mary is an advocate.\n------\nProblem:\nA person is a student if they are enrolled in a university. A person is a university student if they are enrolled in a university. A person is a university student if they are enrolled in a university. A person is a university student if they"
    ]
  },
  {
    "id": "FOLIO_train_796",
    "context": "Tipped employees do not get a guaranteed minimum wage. If a person is a white-collar worker, they will get a guaranteed minimum wage (All white-collar workers get a guaranteed minimum wage). All lawyers are white-collar workers. Every advocate is a lawyer. Mary is not a lawyer or a tipped employee.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mary is not an advocate.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTippedEmployee(x) ::: x is a tipped employee.\nWhiteCollarWorker(x) ::: x is a white-collar worker.\nLawyer(x) ::: x is a lawyer.\nAdvocate(x) ::: x is an advocate.\nPremises:\n∀x (TippedEmployee(x) → ¬GuaranteedMinimumWage(x)) ::: Tipped employees do not get a guaranteed minimum wage.\n∀x (WhiteCollarWorker(x) → GuaranteedMinimumWage(x)) ::: All white-collar workers get a guaranteed minimum wage.\nLawyer(lawyer) ∧ WhiteCollarWorker(lawyer) ::: All lawyers are white-collar workers.\n∀x (Advocate(x) → Lawyer(x)) ::: Every advocate is a lawyer.\nMary ∧ ¬(Lawyer(mary) ∨ TippedEmployee(mary)) ::: Mary is not a lawyer or a tipped employee.\nConclusion:\n¬Advocate(mary) ::: Mary is not an advocate.\n------\nProblem:\nA person is a student if they are enrolled in a university. A person is a university student if they are enrolled in a university. A person is a university student if they are enrolled in a university"
    ]
  },
  {
    "id": "FOLIO_train_797",
    "context": "Tipped employees do not get a guaranteed minimum wage. If a person is a white-collar worker, they will get a guaranteed minimum wage (All white-collar workers get a guaranteed minimum wage). All lawyers are white-collar workers. Every advocate is a lawyer. Mary is not a lawyer or a tipped employee.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mary is either an advocate or a tipped employee.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTippedEmployee(x) ::: x is a tipped employee.\nWhiteCollarWorker(x) ::: x is a white-collar worker.\nLawyer(x) ::: x is a lawyer.\nAdvocate(x) ::: x is an advocate.\nPremises:\n∀x (TippedEmployee(x) → ¬GuaranteedMinimumWage(x)) ::: Tipped employees do not get a guaranteed minimum wage.\n∀x (WhiteCollarWorker(x) → GuaranteedMinimumWage(x)) ::: All white-collar workers get a guaranteed minimum wage.\n∀x (Lawyer(x) → WhiteCollarWorker(x)) ::: All lawyers are white-collar workers.\n∀x (Advocate(x) → Lawyer(x)) ::: Every advocate is a lawyer.\n¬(Lawyer(mary) ∨ TippedEmployee(mary)) ::: Mary is not a lawyer or a tipped employee.\nConclusion:\nAdvocate(mary) ∨ TippedEmployee(mary) ::: Mary is either an advocate or a tipped employee.\n------\nProblem:\nAll people who are not students are either working or unemployed. All people who are working are either employed or self-employed. All people who are employed are either working"
    ]
  },
  {
    "id": "FOLIO_train_798",
    "context": "Tipped employees do not get a guaranteed minimum wage. If a person is a white-collar worker, they will get a guaranteed minimum wage (All white-collar workers get a guaranteed minimum wage). All lawyers are white-collar workers. Every advocate is a lawyer. Mary is not a lawyer or a tipped employee.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Mary is not an advocate and gets a guaranteed minimum wage, she is not a tipped employee.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTippedEmployee(x) ::: x is a tipped employee.\nWhiteCollarWorker(x) ::: x is a white-collar worker.\nLawyer(x) ::: x is a lawyer.\nAdvocate(x) ::: x is an advocate.\nGetMinimumWage(x) ::: x gets a guaranteed minimum wage.\nPremises:\n¬(TippedEmployee(mary) ∧ GetMinimumWage(mary)) ::: Mary is not a tipped employee or gets a guaranteed minimum wage.\n∀x (WhiteCollarWorker(x) → GetMinimumWage(x)) ::: All white-collar workers get a guaranteed minimum wage.\n∀x (Lawyer(x) → WhiteCollarWorker(x)) ::: All lawyers are white-collar workers.\n∀x (Advocate(x) → Lawyer(x)) ::: Every advocate is a lawyer.\nConclusion:\n¬(Advocate(mary) ∧ GetMinimumWage(mary)) → ¬TippedEmployee(mary) ::: If Mary is not an advocate and gets a guaranteed minimum wage, she is not a tipped employee.\n------\nProblem:\nA person is a student if they are enrolled in a university. A person is a university student if they are enrolled in a university. A"
    ]
  },
  {
    "id": "FOLIO_train_799",
    "context": "Tipped employees do not get a guaranteed minimum wage. If a person is a white-collar worker, they will get a guaranteed minimum wage (All white-collar workers get a guaranteed minimum wage). All lawyers are white-collar workers. Every advocate is a lawyer. Mary is not a lawyer or a tipped employee.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Mary is either an advocate or a tipped employee, she is an advocate.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTippedEmployee(x) ::: x is a tipped employee.\nWhiteCollarWorker(x) ::: x is a white-collar worker.\nLawyer(x) ::: x is a lawyer.\nAdvocate(x) ::: x is an advocate.\nPremises:\n∀x (WhiteCollarWorker(x) → GuaranteedMinimumWage(x)) ::: All white-collar workers get a guaranteed minimum wage.\n∀x (Lawyer(x) → WhiteCollarWorker(x)) ::: All lawyers are white-collar workers.\n∀x (Advocate(x) → Lawyer(x)) ::: Every advocate is a lawyer.\n∃x (Mary ∧ ¬Lawyer(x) ∧ ¬TippedEmployee(x)) ::: Mary is not a lawyer or a tipped employee.\nConclusion:\n∀x (Advocate(x) → (Mary ∧ TippedEmployee(x))) ::: If Mary is either an advocate or a tipped employee, she is an advocate.\n------\nProblem:\nAll people who are not students are either working or unemployed. All people who are working are either employed or self-employed. All people who are employed are either working or unemployed. All people who are self-em"
    ]
  },
  {
    "id": "FOLIO_train_800",
    "context": "Asa Hoffmann was born in New York City. Asa Hoffman lives in Manhattan. Asa Hoffman is a chess player. Some chess players are grandmasters. People born and living in New York City are New Yorkers. People liviing in Manhattan live in New York City.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Asa Hoffmann is a New Yorkers.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBorn(x, y) ::: x was born in y.\nLive(x, y) ::: x lives in y.\nChessPlayer(x) ::: x is a chess player.\nGrandmaster(x) ::: x is a grandmaster.\nNewYorker(x) ::: x is a New Yorker.\nManhattan(x) ::: x is Manhattan.\nPremises:\nBorn(asa, newYorkCity) ∧ Live(asa, manhattan) ∧ ChessPlayer(asa) ::: Asa Hoffmann was born in New York City. Asa Hoffman lives in Manhattan. Asa Hoffman is a chess player.\n∃x (ChessPlayer(x) ∧ Grandmaster(x)) ::: Some chess players are grandmasters.\n∀x (Born(x, newYorkCity) ∧ Live(x, manhattan)) → NewYorker(x) ::: People born and living in New York City are New Yorkers.\n∀x (Live(x, manhattan)) → Born(x, newYorkCity) ::: People liviing in Manhattan live in New York City.\nConclusion:\nNewYorker(asa) ::: Asa Hoffmann is a New Yorkers.\n------"
    ]
  },
  {
    "id": "FOLIO_train_801",
    "context": "Asa Hoffmann was born in New York City. Asa Hoffman lives in Manhattan. Asa Hoffman is a chess player. Some chess players are grandmasters. People born and living in New York City are New Yorkers. People liviing in Manhattan live in New York City.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Asa Hoffmann is a grandmaster.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBorn(x, y) ::: x was born in year y.\nLive(x, y) ::: x lives in year y.\nChessPlayer(x) ::: x is a chess player.\nGrandmaster(x) ::: x is a grandmaster.\nNewYorker(x) ::: x is a New Yorker.\nManhattanite(x) ::: x is a Manhattanite.\nPremises:\nBorn(asa, year1950) ∧ Live(asa, year2010) ∧ ChessPlayer(asa) ::: Asa Hoffmann was born in New York City.\nLive(asa, manhattan) ∧ Manhattanite(asa) ::: Asa Hoffman lives in Manhattan.\n∃x (ChessPlayer(x) ∧ Grandmaster(x)) ::: Some chess players are grandmasters.\nBorn(x, year1950) ∧ Live(x, manhattan) ∧ Manhattanite(x) ⊕ ¬(Born(x, year1950) ∧ Live(x, manhattan)) ::: People born and living in New York City are New Yorkers.\nLive(x, manhattan) ⊕ ¬Live(x, new"
    ]
  },
  {
    "id": "FOLIO_train_802",
    "context": "Asa Hoffmann was born in New York City. Asa Hoffman lives in Manhattan. Asa Hoffman is a chess player. Some chess players are grandmasters. People born and living in New York City are New Yorkers. People liviing in Manhattan live in New York City.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Asa Hoffmann does not live in New York.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBorn(x, y) ::: x was born in y.\nLive(x, y) ::: x lives in y.\nChessPlayer(x) ::: x is a chess player.\nGrandmaster(x) ::: x is a grandmaster.\nNewYorker(x) ::: x is a New Yorker.\nManhattanite(x) ::: x is a Manhattanite.\nPremises:\nBorn(asa, newyorkcity) ∧ Live(asa, manhattan) ∧ ChessPlayer(asa) ::: Asa Hoffmann was born in New York City. Asa Hoffman lives in Manhattan. Asa Hoffman is a chess player.\n∃x (ChessPlayer(x) ∧ Grandmaster(x)) ::: Some chess players are grandmasters.\n∀x (Born(x, newyorkcity) ∧ Live(x, manhattan)) → NewYorker(x) ::: People born and living in New York City are New Yorkers.\n∀x (Live(x, manhattan)) → Live(x, newyorkcity) ::: People liviing in Manhattan live in New York City.\nConclusion:\n¬Live(asa, newyorkcity) ::: Asa Hoffmann does not"
    ]
  },
  {
    "id": "FOLIO_train_803",
    "context": "Some of those who apply for a Schengen Visa get it. To apply for a Schengen Visa, you need to provide financial guarantees. If you need to provide financial guarantees, you must request documents from the bank. Do not close your bank account if you request documents from the bank. Philip closed his bank account.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Philip got a Schengen Visa.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nApply(x) ::: x applies for a Schengen Visa.\nGet(x) ::: x gets a Schengen Visa.\nProvide(x, y) ::: x provides y.\nFinancialGuarantees(x) ::: x is financial guarantees.\nRequest(x, y) ::: x requests y.\nDocument(x) ::: x is a document.\nBank(x) ::: x is a bank.\nClose(x) ::: x closes.\nPremises:\n∀x (Apply(x) → Provide(x, FinancialGuarantees)) ::: To apply for a Schengen Visa, you need to provide financial guarantees.\n∀x (Provide(x, FinancialGuarantees) → Request(x, Document)) ::: If you need to provide financial guarantees, you must request documents from the bank.\n∀x (Request(x, Document) → ¬Close(x)) ::: Do not close your bank account if you request documents from the bank.\nClose(philip) ::: Philip closed his bank account.\nConclusion:\nGet(philip) ::: Philip got a Schengen Visa.\n------\nProblem:\nSome people are not good at math. Some people are not good at math and are not good at science. Some people"
    ]
  },
  {
    "id": "FOLIO_train_804",
    "context": "Some of those who apply for a Schengen Visa get it. To apply for a Schengen Visa, you need to provide financial guarantees. If you need to provide financial guarantees, you must request documents from the bank. Do not close your bank account if you request documents from the bank. Philip closed his bank account.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Philip applied for a Schengen Visa and got it.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nApply(x) ::: x applies for a Schengen Visa.\nGet(x) ::: x gets a Schengen Visa.\nProvide(x, y) ::: x provides y.\nFinancialGuarantees(x) ::: x is financial guarantees.\nRequest(x, y) ::: x requests y.\nDocument(x) ::: x is a document.\nBankAccount(x) ::: x is a bank account.\nClose(x) ::: x closes.\nPremises:\n∀x (Apply(x) → Provide(x, FinancialGuarantees)) ::: To apply for a Schengen Visa, you need to provide financial guarantees.\n∀x (Provide(x, FinancialGuarantees) → Request(x, Document)) ::: If you need to provide financial guarantees, you must request documents from the bank.\n∀x (Request(x, Document) → ¬Close(x)) ::: Do not close your bank account if you request documents from the bank.\nClose(philip) ::: Philip closed his bank account.\nConclusion:\nApply(philip) ∧ Get(philip) ::: Philip applied for a Schengen Visa and got it.\n------\nProblem:\nSome people are not good at math."
    ]
  },
  {
    "id": "FOLIO_train_805",
    "context": "Some of those who apply for a Schengen Visa get it. To apply for a Schengen Visa, you need to provide financial guarantees. If you need to provide financial guarantees, you must request documents from the bank. Do not close your bank account if you request documents from the bank. Philip closed his bank account.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Philip did not request documents from the bank or get a Schengen Visa, he didn’t apply for a Schengen Visa.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nApply(x) ::: x applies for a Schengen Visa.\nGet(x) ::: x gets a Schengen Visa.\nNeed(x) ::: x needs to provide financial guarantees.\nRequest(x) ::: x requests documents from the bank.\nClose(x) ::: x closes his bank account.\nPremises:\n∀x (Apply(x) → Need(x)) ::: To apply for a Schengen Visa, you need to provide financial guarantees.\n∀x (Need(x) → Request(x)) ::: If you need to provide financial guarantees, you must request documents from the bank.\n∀x (Request(x) → ¬Close(x)) ::: Do not close your bank account if you request documents from the bank.\nClose(philip) ::: Philip closed his bank account.\nConclusion:\n¬(Apply(philip) ∧ ¬(Request(philip) ∨ Get(philip))) ::: If Philip did not request documents from the bank or get a Schengen Visa, he didn’t apply for a Schengen Visa.\n------\nProblem:\nSome people are not good at math. Some people are not good at math and are not good at science. Some people are not good at science"
    ]
  },
  {
    "id": "FOLIO_train_806",
    "context": "Some fears lead to anxiety. Some anxiety leads to terror.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? No fears lead to terror.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFear(x) ::: x is a fear.\nAnxiety(x) ::: x is anxiety.\nTerror(x) ::: x is terror.\nLead(x, y) ::: x leads to y.\nPremises:\n∀x (Fear(x) → Anxiety(x)) ::: Some fears lead to anxiety.\n∀x (Anxiety(x) → Terror(x)) ::: Some anxiety leads to terror.\nConclusion:\n¬∀x (Fear(x) → Terror(x)) ::: No fears lead to terror.\n------\nProblem:\nSome people are not happy. Some people are not sad. Some people are not happy and not sad.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Some people are happy and sad.\n###\nPredicates:\nHappy(x) ::: x is happy.\nSad(x) ::: x is sad.\nPerson(x) ::: x is a person.\nPremises:\n∀x (Person(x) → (¬Happy(x) ∨ ¬Sad(x))) ::: Some people are not happy.\n∀x (Person(x) → (¬Happy(x) ∨ ¬"
    ]
  },
  {
    "id": "FOLIO_train_807",
    "context": "The Great Lakes are Lake Superior, Lake Michigan, Lake Huron, Lake Erie, and Lake Ontario. Some major settlements of Lake Erie are in NY, PA, OH, and MI. NY, PA, OH, MI are states in the US. ON is a state of Canada. There is a major settlement of Lake Huron in ON. All states are in their country. The US is in North America. The Great Lakes began to form at the end of the Last Glacial Period.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Lake Erie has a major settlement.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreatLake(x) ::: x is a Great Lake.\nMajorSettlement(x) ::: x is a major settlement.\nState(x) ::: x is a state.\nCountry(x) ::: x is a country.\nIn(x, y) ::: x is in y.\nSettlement(x) ::: x is a settlement.\nPremises:\n∃x (GreatLake(x) ∧ MajorSettlement(x) ∧ Settlement(x) ∧ In(x, NY) ∧ In(x, PA) ∧ In(x, OH) ∧ In(x, MI)) ::: Some major settlements of Lake Erie are in NY, PA, OH, and MI.\n∀x (State(x) → In(x, Country(x))) ::: All states are in their country.\n∀x (Country(x) → In(x, Continent(x))) ::: All countries are in their continent.\n∀x (Continent(x) → In(x, World(x))) ::: All continents are in their world.\n∀x (World(x) → In(x, Universe(x))) ::: All worlds are in their universe.���"
    ]
  },
  {
    "id": "FOLIO_train_808",
    "context": "The Great Lakes are Lake Superior, Lake Michigan, Lake Huron, Lake Erie, and Lake Ontario. Some major settlements of Lake Erie are in NY, PA, OH, and MI. NY, PA, OH, MI are states in the US. ON is a state of Canada. There is a major settlement of Lake Huron in ON. All states are in their country. The US is in North America. The Great Lakes began to form at the end of the Last Glacial Period.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There is a great lake that did not form at the end of the Last Glacial Period.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreatLake(x) ::: x is a great lake.\nMajorSettlement(x, y) ::: x is a major settlement of y.\nState(x) ::: x is a state.\nCountry(x) ::: x is a country.\nIn(x, y) ::: x is in y.\nUS(x) ::: x is the US.\nCanada(x) ::: x is Canada.\nNorthAmerica(x) ::: x is North America.\nLastGlacialPeriod(x) ::: x is the Last Glacial Period.\nPremises:\n∃x (GreatLake(x) ∧ MajorSettlement(x, lakeErie)) ::: Some major settlements of Lake Erie are in NY, PA, OH, and MI.\n∀x (State(x) → Country(x)) ::: All states are in their country.\n∀x (Country(x) → In(x, continent)) ::: All countries are in a continent.\n∀x (In(x, continent) → In(x, world)) ::: All continents are in the world.\n∀x (In(x, world) → In(x, universe)) ::: All worlds are in the universe.\n∀x (In(x,"
    ]
  },
  {
    "id": "FOLIO_train_809",
    "context": "All defenders are soccer players. No soccer players are professional basketball players. All centerbacks are defenders. All NBA players are professional basketball players. If Stephen Curry is not an NBA player, then Stephen Curry is not an NBA player or a soccer player.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Stephen Curry is a professional basketball player.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDefender(x) ::: x is a defender.\nSoccerPlayer(x) ::: x is a soccer player.\nProfessionalBasketballPlayer(x) ::: x is a professional basketball player.\nCenterback(x) ::: x is a centerback.\nNBAPlayer(x) ::: x is an NBA player.\nPremises:\n∀x (Defender(x) → SoccerPlayer(x)) ::: All defenders are soccer players.\n∀x (SoccerPlayer(x) → ¬ProfessionalBasketballPlayer(x)) ::: No soccer players are professional basketball players.\n∀x (Centerback(x) → Defender(x)) ::: All centerbacks are defenders.\n∀x (NBAPlayer(x) → ProfessionalBasketballPlayer(x)) ::: All NBA players are professional basketball players.\n¬(NBAPlayer(stephenCurry) ∧ ¬NBAPlayer(stephenCurry)) ::: If Stephen Curry is not an NBA player, then Stephen Curry is not an NBA player or a soccer player.\nConclusion:\nProfessionalBasketballPlayer(stephenCurry) ::: Stephen Curry is a professional basketball player.\n------\nProblem:\nAll people who are not students are"
    ]
  },
  {
    "id": "FOLIO_train_810",
    "context": "All defenders are soccer players. No soccer players are professional basketball players. All centerbacks are defenders. All NBA players are professional basketball players. If Stephen Curry is not an NBA player, then Stephen Curry is not an NBA player or a soccer player.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Stephen Curry is a centerback.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDefender(x) ::: x is a defender.\nSoccerPlayer(x) ::: x is a soccer player.\nProfessionalBasketballPlayer(x) ::: x is a professional basketball player.\nCenterback(x) ::: x is a centerback.\nNBAPlayer(x) ::: x is an NBA player.\nPremises:\n∀x (Defender(x) → SoccerPlayer(x)) ::: All defenders are soccer players.\n∀x (SoccerPlayer(x) → ¬ProfessionalBasketballPlayer(x)) ::: No soccer players are professional basketball players.\n∀x (Centerback(x) → Defender(x)) ::: All centerbacks are defenders.\n∀x (NBAPlayer(x) → ProfessionalBasketballPlayer(x)) ::: All NBA players are professional basketball players.\n¬(NBAPlayer(stephenCurry) ∧ ¬NBAPlayer(stephenCurry)) ::: If Stephen Curry is not an NBA player, then Stephen Curry is not an NBA player or a soccer player.\nConclusion:\nCenterback(stephenCurry) ::: Stephen Curry is a centerback.\n------"
    ]
  },
  {
    "id": "FOLIO_train_811",
    "context": "All defenders are soccer players. No soccer players are professional basketball players. All centerbacks are defenders. All NBA players are professional basketball players. If Stephen Curry is not an NBA player, then Stephen Curry is not an NBA player or a soccer player.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Stephen Curry is not a centerback.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDefender(x) ::: x is a defender.\nSoccerPlayer(x) ::: x is a soccer player.\nProfessionalBasketballPlayer(x) ::: x is a professional basketball player.\nCenterback(x) ::: x is a centerback.\nNBAPlayer(x) ::: x is an NBA player.\nPremises:\n∀x (Defender(x) → SoccerPlayer(x)) ::: All defenders are soccer players.\n∀x (SoccerPlayer(x) → ¬ProfessionalBasketballPlayer(x)) ::: No soccer players are professional basketball players.\n∀x (Centerback(x) → Defender(x)) ::: All centerbacks are defenders.\n∀x (NBAPlayer(x) → ProfessionalBasketballPlayer(x)) ::: All NBA players are professional basketball players.\n¬(NBAPlayer(stephenCurry) ∧ ¬NBAPlayer(stephenCurry)) ::: If Stephen Curry is not an NBA player, then Stephen Curry is not an NBA player or a soccer player.\nConclusion:\n¬Centerback(stephenCurry) ::: Stephen Curry is not a centerback."
    ]
  },
  {
    "id": "FOLIO_train_812",
    "context": "Naive cynicism was proposed by Justin Kruger and a colleague. Thomas Gilovich is a colleague of Justin Kruger. Naive cynicism is a philosophy of mind.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Thomas Gilovich proposed naive cynicism.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPropose(x, y) ::: x proposed y.\nColleague(x, y) ::: x is a colleague of y.\nPhilosophyOfMind(x) ::: x is a philosophy of mind.\nPremises:\nNaiveCynicism ::: Naive cynicism was proposed by Justin Kruger and a colleague.\nColleague(justin, thomas) ::: Thomas Gilovich is a colleague of Justin Kruger.\nPhilosophyOfMind(naiveCynicism) ::: Naive cynicism is a philosophy of mind.\nConclusion:\nPropose(thomas, naiveCynicism) ::: Thomas Gilovich proposed naive cynicism.\n------\nProblem:\nThe first person to win the Nobel Prize in Physics was Wilhelm Röntgen. The first person to win the Nobel Prize in Physics was a German. Wilhelm Röntgen was a German.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The first person to win the Nobel Prize in Physics was not a German.\n###\nPredicates:\nWin(x, y) ::: x won the Nobel Prize in y.\nFirst(x)"
    ]
  },
  {
    "id": "FOLIO_train_813",
    "context": "Naive cynicism was proposed by Justin Kruger and a colleague. Thomas Gilovich is a colleague of Justin Kruger. Naive cynicism is a philosophy of mind.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Justin Kruger propose a philosophy of mind.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPropose(x, y) ::: x proposes y.\nColleague(x, y) ::: x is a colleague of y.\nPhilosophyOfMind(x) ::: x is a philosophy of mind.\nPremises:\nPropose(justin, naiveCynicism) ::: Justin Kruger proposed naive cynicism.\nColleague(justin, thomas) ::: Thomas Gilovich is a colleague of Justin Kruger.\nPhilosophyOfMind(naiveCynicism) ::: Naive cynicism is a philosophy of mind.\nConclusion:\nPropose(justin, philosophyOfMind) ::: Justin Kruger propose a philosophy of mind.\n------\nProblem:\nThe first person to win the Nobel Prize in Physics was Wilhelm Röntgen. The first person to win the Nobel Prize in Physics was a German. Wilhelm Röntgen was a German.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The first person to win the Nobel Prize in Physics was a German.\n###\nPredicates:\nWin(x, y) ::: x won the Nobel Prize in y.\nFirst(x) ::"
    ]
  },
  {
    "id": "FOLIO_train_814",
    "context": "Naive cynicism was proposed by Justin Kruger and a colleague. Thomas Gilovich is a colleague of Justin Kruger. Naive cynicism is a philosophy of mind.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Thomas Gilovich worked on philiophies of mind.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nColleague(x, y) ::: x is a colleague of y.\nPhilosophy(x) ::: x is a philosophy.\nWork(x, y) ::: x worked on y.\nPremises:\nNaiveCynicism(naiveCynicism) ∧ Colleague(justin, colleague) ::: Naive cynicism was proposed by Justin Kruger and a colleague.\nColleague(colleague, thomas) ::: Thomas Gilovich is a colleague of Justin Kruger.\nPhilosophy(naiveCynicism) ::: Naive cynicism is a philosophy of mind.\nConclusion:\nWork(thomas, naiveCynicism) ::: Thomas Gilovich worked on philiophies of mind.\n------\nProblem:\nThe first person to win the Nobel Prize in Physics was Wilhelm Röntgen. The first person to win the Nobel Prize in Physics was a German. Wilhelm Röntgen was a German.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The first person to win the Nobel Prize in Physics was a German.\n###\nPredicates:\nWin(x, y) :::"
    ]
  },
  {
    "id": "FOLIO_train_815",
    "context": " The Turing Award has been awarded to Donald Knuth, Marvin Minsky, Richard Hamming and John McCarthy. Donald Knuth made major contributions to the analysis of algorithms. Marvin Minsky is recognized by his contributions to the field of artificial intelligence. Richard Hamming did research on numerical methods. John McCarthy had a central role in creating and shaping the field of artificial inteligence.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? At least two people who have won the Turing Award worked in the field of artificial intelligence.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTuringAward(x) ::: x has won the Turing Award.\nContribution(x, y) ::: x made major contributions to the field of y.\nArtificialIntelligence(x) ::: x worked in the field of artificial intelligence.\nPremises:\nTuringAward(donald) ∧ TuringAward(marvin) ∧ TuringAward(richard) ∧ TuringAward(john) ::: The Turing Award has been awarded to Donald Knuth, Marvin Minsky, Richard Hamming and John McCarthy.\nContribution(donald, algorithms) ∧ Contribution(marvin, artificialIntelligence) ∧ Contribution(richard, numericalMethods) ∧ Contribution(john, artificialIntelligence) ::: Donald Knuth made major contributions to the analysis of algorithms. Marvin Minsky is recognized by his contributions to the field of artificial intelligence. Richard Hamming did research on numerical methods. John McCarthy had a central role in creating and shaping the field of artificial inteligence.\nConclusion:\n∃x ∃y (TuringAward(x) ∧ TuringAward(y) ∧"
    ]
  },
  {
    "id": "FOLIO_train_816",
    "context": " The Turing Award has been awarded to Donald Knuth, Marvin Minsky, Richard Hamming and John McCarthy. Donald Knuth made major contributions to the analysis of algorithms. Marvin Minsky is recognized by his contributions to the field of artificial intelligence. Richard Hamming did research on numerical methods. John McCarthy had a central role in creating and shaping the field of artificial inteligence.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? At least two people who worked in the field of artificial intelligence have won the Turing Award.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTuringAward(x) ::: x won the Turing Award.\nWork(x, y) ::: x worked in field y.\nPremises:\nTuringAward(donald) ∧ TuringAward(marvin) ∧ TuringAward(richard) ∧ TuringAward(john) ::: The Turing Award has been awarded to Donald Knuth, Marvin Minsky, Richard Hamming and John McCarthy.\nWork(donald, algorithms) ∧ Work(marvin, ai) ∧ Work(richard, numerical) ∧ Work(john, ai) ::: Donald Knuth made major contributions to the analysis of algorithms. Marvin Minsky is recognized by his contributions to the field of artificial intelligence. Richard Hamming did research on numerical methods. John McCarthy had a central role in creating and shaping the field of artificial inteligence.\nConclusion:\n∃x ∃y (Work(x, ai) ∧ TuringAward(y)) ::: At least two people who worked in the field of artificial intelligence have won the Turing Award.\n------\nProblem:\nThe following are the names of the first 10 natural numbers"
    ]
  },
  {
    "id": "FOLIO_train_817",
    "context": " The Turing Award has been awarded to Donald Knuth, Marvin Minsky, Richard Hamming and John McCarthy. Donald Knuth made major contributions to the analysis of algorithms. Marvin Minsky is recognized by his contributions to the field of artificial intelligence. Richard Hamming did research on numerical methods. John McCarthy had a central role in creating and shaping the field of artificial inteligence.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Only one people who have won the Turing Award made significant contributions to the analysis of algorithms.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTuringAward(x) ::: x has won the Turing Award.\nContribution(x, y) ::: x made significant contributions to y.\nPremises:\nTuringAward(donald) ∧ TuringAward(marvin) ∧ TuringAward(richard) ∧ TuringAward(john) ::: The Turing Award has been awarded to Donald Knuth, Marvin Minsky, Richard Hamming and John McCarthy.\nContribution(donald, algorithms) ∧ Contribution(marvin, artificialIntelligence) ∧ Contribution(richard, numericalMethods) ∧ Contribution(john, artificialIntelligence) ::: Donald Knuth made major contributions to the analysis of algorithms. Marvin Minsky is recognized by his contributions to the field of artificial intelligence. Richard Hamming did research on numerical methods. John McCarthy had a central role in creating and shaping the field of artificial inteligence.\nConclusion:\n∃x (TuringAward(x) ∧ ¬∃y (TuringAward(y) ∧ Contribution(y, algorithms))) ::: Only one people who have won the Turing Award made"
    ]
  },
  {
    "id": "FOLIO_train_818",
    "context": " The Turing Award has been awarded to Donald Knuth, Marvin Minsky, Richard Hamming and John McCarthy. Donald Knuth made major contributions to the analysis of algorithms. Marvin Minsky is recognized by his contributions to the field of artificial intelligence. Richard Hamming did research on numerical methods. John McCarthy had a central role in creating and shaping the field of artificial inteligence.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? No Turing Award winners worked in the field of numerical methods.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTuringAward(x) ::: x is a Turing Award winner.\nContribution(x, y) ::: x made major contributions to y.\nField(x, y) ::: x is recognized by his contributions to y.\nResearch(x, y) ::: x did research on y.\nCentralRole(x, y) ::: x had a central role in creating and shaping y.\nPremises:\nTuringAward(donald) ∧ TuringAward(marvin) ∧ TuringAward(richard) ∧ TuringAward(john) ::: The Turing Award has been awarded to Donald Knuth, Marvin Minsky, Richard Hamming and John McCarthy.\nContribution(donald, algorithms) ∧ Field(marvin, artificialIntelligence) ∧ Research(richard, numericalMethods) ∧ CentralRole(john, artificialInteligence) ::: Donald Knuth made major contributions to the analysis of algorithms. Marvin Minsky is recognized by his contributions to the field of artificial intelligence. Richard Hamming did research on numerical methods. John McCarthy had a central role in creating and shaping the field of artificial inteligence.\nCon"
    ]
  },
  {
    "id": "FOLIO_train_819",
    "context": "No easy Leetcode problems have an AC rate lower than 20 percent. All Leetcode problems recommended to novices are easy. Leetcode problems either have an AC rate lower than 20 percent or are starred by more than 1 thousand users. All hard Leetcode problems are starred by more than 1 thousand users. No Leetcode problems published after 2022 are starred by more than 1 thousand users. 2Sum is not recommended to novices and hard. 4Sum is either starred by more than 1 thousand users and published after 2022, or neither starred by more than 1 thousand users nor published after 2022.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? 2Sum is an easy Leetcode problem.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEasy(x) ::: x is an easy Leetcode problem.\nNovice(x) ::: x is a Leetcode problem recommended to novices.\nACRate(x, y) ::: x has an AC rate of y percent.\nStarred(x, y) ::: x is starred by y thousand users.\nPublished(x, y) ::: x is published in year y.\nRecommended(x, y) ::: x is recommended to y.\nPremises:\n∀x (Easy(x) → Novice(x)) ::: All Leetcode problems recommended to novices are easy.\n∀x (Easy(x) ∨ Starred(x, 1000)) ::: Leetcode problems either have an AC rate lower than 20 percent or are starred by more than 1 thousand users.\n∀x (Hard(x) → Starred(x, 1000)) ::: All hard Leetcode problems are starred by more than 1 thousand users.\n∀x (Published(x, year2022) → Starred(x, 1000)) ::: No Leetcode problems published after 202"
    ]
  },
  {
    "id": "FOLIO_train_820",
    "context": "No easy Leetcode problems have an AC rate lower than 20 percent. All Leetcode problems recommended to novices are easy. Leetcode problems either have an AC rate lower than 20 percent or are starred by more than 1 thousand users. All hard Leetcode problems are starred by more than 1 thousand users. No Leetcode problems published after 2022 are starred by more than 1 thousand users. 2Sum is not recommended to novices and hard. 4Sum is either starred by more than 1 thousand users and published after 2022, or neither starred by more than 1 thousand users nor published after 2022.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? 2Sum is not an easy Leetcode problem.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEasy(x) ::: x is an easy Leetcode problem.\nRecommended(x) ::: x is recommended to novices.\nStarred(x) ::: x is starred by more than 1 thousand users.\nPublished(x) ::: x is published after 2022.\nProblem(x) ::: x is a Leetcode problem.\nPremises:\n∀x (Easy(x) → Recommended(x)) ::: All Leetcode problems recommended to novices are easy.\n∀x (Easy(x) ∨ Starred(x)) ::: All Leetcode problems either have an AC rate lower than 20 percent or are starred by more than 1 thousand users.\n∀x (Hard(x) → Starred(x)) ::: All hard Leetcode problems are starred by more than 1 thousand users.\n∀x (Published(x) → Starred(x)) ::: No Leetcode problems published after 2022 are starred by more than 1 thousand users.\nProblem(2sum) ∧ ¬Recommended(2sum) ∧ Hard(2sum) ::: 2Sum is not recommended to novices and hard.\nProblem(4sum) ∧ (Starred(4sum) ∧ Published(4sum)) ∨ ¬(Starred(4sum) ∧ Published(4sum)) ::: 4Sum is either starred by more than 1 thousand users and published after 2022, or neither starred by more than 1 thousand users nor published after 2022.\nConclusion:\nEasy(2sum) ::: 2Sum is an easy Leetcode problem.\n------"
    ]
  },
  {
    "id": "FOLIO_train_821",
    "context": "No easy Leetcode problems have an AC rate lower than 20 percent. All Leetcode problems recommended to novices are easy. Leetcode problems either have an AC rate lower than 20 percent or are starred by more than 1 thousand users. All hard Leetcode problems are starred by more than 1 thousand users. No Leetcode problems published after 2022 are starred by more than 1 thousand users. 2Sum is not recommended to novices and hard. 4Sum is either starred by more than 1 thousand users and published after 2022, or neither starred by more than 1 thousand users nor published after 2022.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? 4Sum is a Leetcode problem recommended to the novice or is hard.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEasy(x) ::: x is an easy Leetcode problem.\nNovice(x) ::: x is a Leetcode problem recommended to novices.\nStarred(x, y) ::: x is starred by y users.\nPublished(x, y) ::: x is published in year y.\nACRate(x, y) ::: x has an AC rate of y percent.\nProblem(x) ::: x is a Leetcode problem.\nHard(x) ::: x is a hard Leetcode problem.\nPremises:\n∀x (Easy(x) → Novice(x)) ::: All Leetcode problems recommended to novices are easy.\n∀x (Easy(x) ∨ Starred(x, 1000)) ::: Leetcode problems either have an AC rate lower than 20 percent or are starred by more than 1 thousand users.\n∀x (Hard(x) → Starred(x, 1000)) ::: All hard Leetcode problems are starred by more than 1 thousand users.\n∀x (Published(x, year2022) → Starred(x, 1000)) ::: No Leetcode problems published after 2022 are starred by more than 1 thousand users.\n∀x (Problem(x) → (Easy(x) ∨ Hard(x))) ::: All Leetcode problems are either easy or hard.\n∀x (Problem(x) → (Published(x, year2022) ∨ ¬Published(x, year2022))) ::: All Leetcode problems are either published after 2022 or not published after 202"
    ]
  },
  {
    "id": "FOLIO_train_822",
    "context": "No easy Leetcode problems have an AC rate lower than 20 percent. All Leetcode problems recommended to novices are easy. Leetcode problems either have an AC rate lower than 20 percent or are starred by more than 1 thousand users. All hard Leetcode problems are starred by more than 1 thousand users. No Leetcode problems published after 2022 are starred by more than 1 thousand users. 2Sum is not recommended to novices and hard. 4Sum is either starred by more than 1 thousand users and published after 2022, or neither starred by more than 1 thousand users nor published after 2022.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? 4Sum is neither a 2Sum Leetcode problem recommended to the novice nor a Leetcode problem that's hard.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEasy(x) ::: x is an easy Leetcode problem.\nNovice(x) ::: x is a Leetcode problem recommended to novices.\nACRate(x, y) ::: x has an AC rate of y percent.\nStarred(x, y) ::: x is starred by y thousand users.\nPublished(x, y) ::: x is published in year y.\nRecommended(x, y) ::: x is recommended to y.\nPremises:\n∀x (Easy(x) → Novice(x)) ::: All Leetcode problems recommended to novices are easy.\n∀x (Easy(x) ∨ Starred(x, 1000)) ::: Leetcode problems either have an AC rate lower than 20 percent or are starred by more than 1 thousand users.\n∀x (Hard(x) → Starred(x, 1000)) ::: All hard Leetcode problems are starred by more than 1 thousand users.\n∀x (Published(x, year2022) → Starred(x, 1000)) ::: No Leetcode problems published after 2022 are starred by more than 1 thousand users.\n∀x (2Sum(x) → Easy(x)) ::: 2Sum is not recommended to novices and hard.\n∀x (4Sum(x) → (Starred(x, 1000) ∨ Published(x, year2022))) ::: 4Sum is either starred by more than 1 thousand users and published after 2022, or neither starred by more than 1 thousand users nor published after 2022.\nConclusion:"
    ]
  },
  {
    "id": "FOLIO_train_823",
    "context": "Show Your Love is a song recorded by the South Korean boy band BtoB 4u. The lead single of the extended play Inside is Show Your Love. Show Your Love contains a hopeful message. BtoB 4u member Hyunsik wrote Show Your Love. There is a music video for Show Your Love.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Show your love wasn't written by a member of a boy band.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBtoB4u(x) ::: x is a member of BtoB 4u.\nBoyBand(x) ::: x is a boy band.\nWrite(x, y) ::: x wrote y.\nHopeful(x) ::: x contains a hopeful message.\nMusicVideo(x) ::: x is a music video.\nPremises:\nShowYourLove(x) ::: Show Your Love is a song recorded by the South Korean boy band BtoB 4u.\nShowYourLove(x) ∧ Inside(x) ::: Show Your Love is the lead single of the extended play Inside.\nShowYourLove(x) ∧ Hopeful(x) ::: Show Your Love contains a hopeful message.\nBtoB4u(hyunsik) ∧ Write(hyunsik, ShowYourLove) ::: BtoB 4u member Hyunsik wrote Show Your Love.\nMusicVideo(ShowYourLove) ::: There is a music video for Show Your Love.\nConclusion:\n¬∃x (BoyBand(x) ∧ BtoB4u(x)) ::: Show your love wasn't written by a member of a boy band.\n------\nProblem:\nThe 2018 FIFA World Cup was the 21st FIFA World Cup, an international football tournament contested by the men's national teams of the member associations of FIFA once every four years. The tournament took place in Russia from 14 June to 15 July 2018. The 2018 World Cup was the first World Cup to be held in Eastern Europe, and the 11th time that it had been held in Europe. At an executive committee meeting on 2 December 2010, Russia was announced as the host country. The 20"
    ]
  },
  {
    "id": "FOLIO_train_824",
    "context": "Show Your Love is a song recorded by the South Korean boy band BtoB 4u. The lead single of the extended play Inside is Show Your Love. Show Your Love contains a hopeful message. BtoB 4u member Hyunsik wrote Show Your Love. There is a music video for Show Your Love.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A lead single of inside contains a a hopeful message.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSong(x) ::: x is a song.\nLeadSingle(x) ::: x is a lead single.\nMessage(x) ::: x is a message.\nHopeful(x) ::: x is a hopeful message.\nMember(x, y) ::: x is a member of y.\nWrite(x, y) ::: x wrote y.\nMusicVideo(x) ::: x is a music video.\nPremises:\nSong(showYourLove) ∧ LeadSingle(showYourLove) ∧ Message(hopefulMessage) ∧ Hopeful(hopefulMessage) ::: Show Your Love is a song recorded by the South Korean boy band BtoB 4u. The lead single of the extended play Inside is Show Your Love. Show Your Love contains a hopeful message.\nMember(hyunsik, btob4u) ∧ Write(hyunsik, showYourLove) ::: BtoB 4u member Hyunsik wrote Show Your Love.\nMusicVideo(showYourLove) ::: There is a music video for Show Your Love.\nConclusion:\nMessage(hopefulMessage) ∧ LeadSingle(showYourLove) ::: A lead single of inside contains a a hopeful message.\n------\nProblem:\nThe 2018 FIFA World Cup was the 21st FIFA World Cup, an international football tournament contested by the men's national teams of the member associations of FIFA once every four years. The tournament took place in Russia from 14 June to 15 July 2018. The 2018 FIFA World Cup was the first World Cup to be held in Eastern Europe, and the 11th time that it had been held in Europe. The format for the final tournament was unchanged from 2014,"
    ]
  },
  {
    "id": "FOLIO_train_825",
    "context": "Show Your Love is a song recorded by the South Korean boy band BtoB 4u. The lead single of the extended play Inside is Show Your Love. Show Your Love contains a hopeful message. BtoB 4u member Hyunsik wrote Show Your Love. There is a music video for Show Your Love.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Hyunsik is Korean.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nKorean(x) ::: x is a Korean person.\nBtoB4u(x) ::: x is a member of BtoB 4u.\nMember(x, y) ::: x is a member of group y.\nLeadSingle(x, y) ::: x is the lead single of album y.\nContain(x, y) ::: x contains y.\nMessage(x) ::: x is a message.\nHopeful(x) ::: x is a hopeful message.\nWrite(x, y) ::: x wrote y.\nMusicVideo(x) ::: x is a music video.\nPremises:\nShowYourLove ::: Show Your Love.\nLeadSingle(showYourLove, inside) ::: Show Your Love is the lead single of the extended play Inside.\nContain(showYourLove, message) ::: Show Your Love contains a message.\nHopeful(message) ::: The message is a hopeful message.\nMember(hyunsik, btob4u) ::: Hyunsik is a member of Btob 4u.\nWrite(hyunsik, showYourLove) ::: Hyunsik wrote Show Your Love.\nMusicVideo(showYourLove) ::: There is a music video for Show Your Love.\nConclusion:\nKorean(hyunsik) ::: Hyunsik is Korean.\n------\nProblem:\nThe 2018 FIFA World Cup was the 21st FIFA World Cup, an international football tournament contested by the men's national teams of the member associations of FIFA once every four years. The tournament took place in Russia from 14 June to 15 July 2018. The 2018 World Cup was the first World Cup to be held in Eastern Europe, and the 11th time that it had been held"
    ]
  },
  {
    "id": "FOLIO_train_826",
    "context": "All tables are round. Some furniture are tables.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Some furniture are round.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTable(x) ::: x is a table.\nRound(x) ::: x is round.\nFurniture(x) ::: x is furniture.\nPremises:\n∀x (Table(x) → Round(x)) ::: All tables are round.\n∃x (Furniture(x) ∧ Table(x)) ::: Some furniture are tables.\nConclusion:\n∃x (Furniture(x) ∧ Round(x)) ::: Some furniture are round.\n------\nProblem:\nAll people who are not students are either teachers or professors. Some people are teachers.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Some people are professors.\n###\nPredicates:\nStudent(x) ::: x is a student.\nTeacher(x) ::: x is a teacher.\nProfessor(x) ::: x is a professor.\nPremises:\n∀x (¬Student(x) → (Teacher(x) ∨ Professor(x))) ::: All people who are not students are either teachers or professors.\n∃x (Teacher(x)) ::: Some people are teachers.\nConclusion:\n∃x (Professor(x)) ::: Some people are professors.\n------\nProblem:\nAll people who are not students are either teachers or professors. Some people are teachers.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Some people are professors.\n###\nPredicates:\nStudent(x) ::: x is a student.\nTeacher(x) ::: x is a teacher.\nProfessor(x) ::: x is a professor.\nPremises"
    ]
  },
  {
    "id": "FOLIO_train_827",
    "context": "All juvenile delinquents are maladjusted individuals. Some juvenile delinquents are products of broken homes.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Some maladjusted individuals are products of broken homes.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nJuvenileDelinquent(x) ::: x is a juvenile delinquent.\nMaladjusted(x) ::: x is a maladjusted individual.\nProductOfBrokenHome(x) ::: x is a product of a broken home.\nPremises:\n∀x (JuvenileDelinquent(x) → Maladjusted(x)) ::: All juvenile delinquents are maladjusted individuals.\n∃x (JuvenileDelinquent(x) ∧ ProductOfBrokenHome(x)) ::: Some juvenile delinquents are products of broken homes.\nConclusion:\n∃x (Maladjusted(x) ∧ ProductOfBrokenHome(x)) ::: Some maladjusted individuals are products of broken homes.\n------\nProblem:\nAll people who are not married are single. Some people who are not married are not married to anyone.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Some single people are not married to anyone.\n###\nPredicates:\nMarried(x) ::: x is married.\nSingle(x) ::: x is single.\nMarriedTo(x, y) ::: x is married to y.\nPremises:\n∀x (¬Married(x) → Single(x)) ::: All people who are not married are single.\n∃x (¬Married(x) ∧ ¬MarriedTo(x, y)) ::: Some people who are not married are not married to anyone.\nConclusion:\n∃x (Single(x) ∧ ¬MarriedTo(x, y)) ::: Some single people are not married to anyone.\n------\nProblem"
    ]
  },
  {
    "id": "FOLIO_train_828",
    "context": "Either brain reading or brain decoding. All brain decoding is extracting information from BOLD signals. No extracting information from BOLD signals is without statistical pattern analysis. Writing a novel is without statistical pattern analysis. If multivoxel (pattern) analysis is without statistical pattern analysis and a brain reading, then multivoxel (pattern) analysis is without statistical pattern analysis and brain decoding.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Multivoxel (pattern) analysis is a brain decoding.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBrainReading(x) ::: x is a brain reading.\nBrainDecoding(x) ::: x is a brain decoding.\nExtracting(x, y) ::: x is extracting information from y.\nWithout(x, y) ::: x is without y.\nStatisticalPatternAnalysis(x) ::: x is statistical pattern analysis.\nWriting(x) ::: x is writing a novel.\nMultivoxel(x) ::: x is multivoxel (pattern) analysis.\nPremises:\nBrainReading(x) ∨ BrainDecoding(x) ::: Either brain reading or brain decoding.\n∀x (BrainDecoding(x) → Extracting(x, BOLD)) ::: All brain decoding is extracting information from BOLD signals.\n∀x (Extracting(x, BOLD) → Without(x, StatisticalPatternAnalysis)) ::: No extracting information from BOLD signals is without statistical pattern analysis.\nWriting(novel) ∧ Without(novel, StatisticalPatternAnalysis) ::: Writing a novel is without statistical pattern analysis.\n(Multivoxel(x) ∧ Without(x, StatisticalPatternAnalysis)) ∧ BrainReading(x) → (Multivoxel(x) ∧ Without(x, StatisticalPatternAnalysis)) ∧ BrainDecoding(x) ::: If multivoxel (pattern) analysis is without statistical pattern analysis and a brain reading, then multivoxel (pattern) analysis is without statistical pattern analysis and brain decoding.\nConclusion:\nBrainDecoding(multivoxel) ::: Multivoxel (pattern) analysis is a brain decoding.\n------\nProblem:\nAll people who are not"
    ]
  },
  {
    "id": "FOLIO_train_829",
    "context": "Either brain reading or brain decoding. All brain decoding is extracting information from BOLD signals. No extracting information from BOLD signals is without statistical pattern analysis. Writing a novel is without statistical pattern analysis. If multivoxel (pattern) analysis is without statistical pattern analysis and a brain reading, then multivoxel (pattern) analysis is without statistical pattern analysis and brain decoding.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Multivoxel (pattern) analysis is the writing of a novel.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBrainReading(x) ::: x is a brain reading.\nBrainDecoding(x) ::: x is a brain decoding.\nExtracting(x, y) ::: x is extracting information from y.\nWithout(x, y) ::: x is without y.\nStatisticalPatternAnalysis(x) ::: x is statistical pattern analysis.\nWriting(x) ::: x is the writing of a novel.\nMultivoxel(x) ::: x is multivoxel (pattern) analysis.\nPremises:\nBrainReading(x) ∨ BrainDecoding(x) ::: Either brain reading or brain decoding.\n∀x (BrainDecoding(x) → Extracting(x, BOLD)) ::: All brain decoding is extracting information from BOLD signals.\n∀x (Extracting(x, BOLD) → Without(x, StatisticalPatternAnalysis)) ::: No extracting information from BOLD signals is without statistical pattern analysis.\nWriting(novel) ∧ Without(novel, StatisticalPatternAnalysis) ::: Writing a novel is without statistical pattern analysis.\n(Multivoxel(x) ∧ Without(x, StatisticalPatternAnalysis)) ∧ BrainReading(x) → (Multivoxel(x) ∧ Without(x, StatisticalPatternAnalysis)) ∧ BrainDecoding(x) ::: If multivoxel (pattern) analysis is without statistical pattern analysis and a brain reading, then multivoxel (pattern) analysis is without statistical pattern analysis and brain decoding.\nConclusion:\nWriting(multivoxel) ::: Multivoxel (pattern) analysis is the writing of a novel.\n------\nProblem:\nAll people who are"
    ]
  },
  {
    "id": "FOLIO_train_830",
    "context": "Either brain reading or brain decoding. All brain decoding is extracting information from BOLD signals. No extracting information from BOLD signals is without statistical pattern analysis. Writing a novel is without statistical pattern analysis. If multivoxel (pattern) analysis is without statistical pattern analysis and a brain reading, then multivoxel (pattern) analysis is without statistical pattern analysis and brain decoding.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Multivoxel (pattern) analysis is without statistical pattern analysis and writing a novel.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBrainReading(x) ::: x is a brain reading.\nBrainDecoding(x) ::: x is a brain decoding.\nExtracting(x, y) ::: x is extracting information from y.\nWithout(x, y) ::: x is without y.\nStatisticalPatternAnalysis(x) ::: x is statistical pattern analysis.\nWriting(x) ::: x is writing a novel.\nMultivoxel(x) ::: x is multivoxel (pattern) analysis.\nPremises:\nBrainReading(x) ∨ BrainDecoding(x) ::: Either brain reading or brain decoding.\n∀x (BrainDecoding(x) → Extracting(x, BOLD)) ::: All brain decoding is extracting information from BOLD signals.\n∀x (Extracting(x, BOLD) → Without(x, StatisticalPatternAnalysis)) ::: No extracting information from BOLD signals is without statistical pattern analysis.\nWriting(x) → Without(x, StatisticalPatternAnalysis) ::: Writing a novel is without statistical pattern analysis.\n∀x (Multivoxel(x) → BrainDecoding(x)) ::: If multivoxel (pattern) analysis is without statistical pattern analysis and a brain reading, then multivoxel (pattern) analysis is without statistical pattern analysis and brain decoding.\nConclusion:\nWithout(multivoxel, StatisticalPatternAnalysis) ::: Multivoxel (pattern) analysis is without statistical pattern analysis.\nWithout(multivoxel, Writing) ::: Multivoxel (pattern) analysis is without statistical pattern analysis and writing a novel.\n------"
    ]
  },
  {
    "id": "FOLIO_train_831",
    "context": "Either brain reading or brain decoding. All brain decoding is extracting information from BOLD signals. No extracting information from BOLD signals is without statistical pattern analysis. Writing a novel is without statistical pattern analysis. If multivoxel (pattern) analysis is without statistical pattern analysis and a brain reading, then multivoxel (pattern) analysis is without statistical pattern analysis and brain decoding.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Multivoxel (pattern) analysis is without statistical pattern analysis or writing a novel.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBrainReading(x) ::: x is a brain reading.\nBrainDecoding(x) ::: x is a brain decoding.\nExtracting(x, y) ::: x is extracting information from y.\nWithout(x, y) ::: x is without y.\nStatisticalPatternAnalysis(x) ::: x is statistical pattern analysis.\nWriting(x) ::: x is writing a novel.\nMultivoxel(x) ::: x is multivoxel (pattern) analysis.\nPremises:\nBrainReading(x) ∨ BrainDecoding(x) ::: Either brain reading or brain decoding.\n∀x (BrainDecoding(x) → Extracting(x, BOLD)) ::: All brain decoding is extracting information from BOLD signals.\n∀x (Extracting(x, BOLD) → Without(x, StatisticalPatternAnalysis)) ::: No extracting information from BOLD signals is without statistical pattern analysis.\nWriting(x) → Without(x, StatisticalPatternAnalysis) ::: Writing a novel is without statistical pattern analysis.\n∀x (Multivoxel(x) → BrainDecoding(x)) ::: If multivoxel (pattern) analysis is without statistical pattern analysis and a brain reading, then multivoxel (pattern) analysis is without statistical pattern analysis and brain decoding.\nConclusion:\nWithout(multivoxel, StatisticalPatternAnalysis) ∨ Writing(novel) ::: Multivoxel (pattern) analysis is without statistical pattern analysis or writing a novel.\n------\nProblem:\nAll people who are not students are either people who are not"
    ]
  },
  {
    "id": "FOLIO_train_832",
    "context": "Either brain reading or brain decoding. All brain decoding is extracting information from BOLD signals. No extracting information from BOLD signals is without statistical pattern analysis. Writing a novel is without statistical pattern analysis. If multivoxel (pattern) analysis is without statistical pattern analysis and a brain reading, then multivoxel (pattern) analysis is without statistical pattern analysis and brain decoding.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Multivoxel (pattern) analysis is either without statistical pattern analysis or writing a novel.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBrainReading(x) ::: x is a brain reading.\nBrainDecoding(x) ::: x is a brain decoding.\nExtracting(x, y) ::: x is extracting information from y.\nWithout(x, y) ::: x is without y.\nStatisticalPatternAnalysis(x) ::: x is statistical pattern analysis.\nMultivoxel(x) ::: x is multivoxel.\nPatternAnalysis(x) ::: x is pattern analysis.\nWriting(x) ::: x is writing.\nNovel(x) ::: x is a novel.\nPremises:\nBrainReading(x) ∨ BrainDecoding(x) ::: Either brain reading or brain decoding.\n∀x (BrainDecoding(x) → Extracting(x, BOLD)) ::: All brain decoding is extracting information from BOLD signals.\n∀x (Extracting(x, BOLD) → Without(x, StatisticalPatternAnalysis)) ::: No extracting information from BOLD signals is without statistical pattern analysis.\nWriting(novel) ∧ Without(novel, StatisticalPatternAnalysis) ::: Writing a novel is without statistical pattern analysis.\n(Multivoxel(patternAnalysis) ∧ Without(patternAnalysis, StatisticalPatternAnalysis)) ∧ BrainReading(x) → (Multivoxel(patternAnalysis) ∧ Without(patternAnalysis, StatisticalPatternAnalysis)) ∧ BrainDecoding(x) ::: If multivoxel (pattern) analysis is without statistical pattern analysis and a brain reading, then multivoxel (pattern)"
    ]
  },
  {
    "id": "FOLIO_train_833",
    "context": "Either brain reading or brain decoding. All brain decoding is extracting information from BOLD signals. No extracting information from BOLD signals is without statistical pattern analysis. Writing a novel is without statistical pattern analysis. If multivoxel (pattern) analysis is without statistical pattern analysis and a brain reading, then multivoxel (pattern) analysis is without statistical pattern analysis and brain decoding.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If multivoxel (pattern) analysis is writing a novel, then multivoxel (pattern) analysis is neither without statistical pattern analysis nor writing a novel.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBrainReading(x) ::: x is a brain reading.\nBrainDecoding(x) ::: x is a brain decoding.\nExtracting(x, y) ::: x is extracting information from y.\nWithout(x, y) ::: x is without y.\nWriting(x) ::: x is writing a novel.\nMultivoxel(x) ::: x is multivoxel (pattern) analysis.\nStatisticalPatternAnalysis(x) ::: x is statistical pattern analysis.\nPremises:\nBrainReading(x) ∨ BrainDecoding(x) ::: Either brain reading or brain decoding.\n∀x (BrainDecoding(x) → Extracting(x, BOLD)) ::: All brain decoding is extracting information from BOLD signals.\n∀x (Extracting(x, BOLD) → Without(x, StatisticalPatternAnalysis)) ::: No extracting information from BOLD signals is without statistical pattern analysis.\nWriting(novel) ::: Writing a novel is without statistical pattern analysis.\n(Multivoxel(x) ∧ Without(x, StatisticalPatternAnalysis)) → (Multivoxel(x) ∧ BrainDecoding(x)) ::: If multivoxel (pattern) analysis is without statistical pattern analysis and a brain reading, then multivoxel (pattern) analysis is without statistical pattern analysis and brain decoding.\nConclusion:\n(Multivoxel(x) ∧ Writing(novel)) → (Multivoxel(x) ∧ Without(x, StatisticalPatternAnalysis)) ::: If multivoxel (pattern"
    ]
  },
  {
    "id": "FOLIO_train_834",
    "context": "If you have room for dessert, you have room for broccoli. Everyone at Luis's dinner party has room for dessert, including Luis. Mauricia does not have room for broccoli. Luis's dinner party is the first ever dinner party that Allison has attended. Gustave has room for both broccoli and asparagus. Broccoli and asparagus are both vegetables.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Allison has room for broccoli.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRoom(x, y) ::: x has room for y.\nDessert(y) ::: y is dessert.\nBroccoli(y) ::: y is broccoli.\nAsparagus(y) ::: y is asparagus.\nVegetable(y) ::: y is a vegetable.\nDinnerParty(x) ::: x is a dinner party.\nAttend(x, y) ::: x attends y.\nFirst(x, y) ::: x is the first ever y that z has attended.\nPremises:\n∀x (Room(x, dessert) → Room(x, broccoli)) ::: If you have room for dessert, you have room for broccoli.\n∀x (Room(x, dessert) ∧ Attend(x, luis)) ::: Everyone at Luis's dinner party has room for dessert, including Luis.\n¬Room(mauricia, broccoli) ::: Mauricia does not have room for broccoli.\nFirst(allison, luis) ::: Luis's dinner party is the first ever dinner party that Allison has attended.\nRoom(gustave, asparagus) ∧ Room(gustave, broccoli) ::: Gustave has room for both broccoli and asparagus.\nBroccoli(y) ∧ Asparagus(y) ∧ Vegetable(y) ::: Broccoli and asparagus are both vegetables.\nConclusion:\nRoom(allison, broccoli) ::: Allison has room for broccoli.\n------\nProblem"
    ]
  },
  {
    "id": "FOLIO_train_835",
    "context": "If you have room for dessert, you have room for broccoli. Everyone at Luis's dinner party has room for dessert, including Luis. Mauricia does not have room for broccoli. Luis's dinner party is the first ever dinner party that Allison has attended. Gustave has room for both broccoli and asparagus. Broccoli and asparagus are both vegetables.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Mauricia is at Luis's dinner party.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRoom(x, y) ::: x has room for y.\nDessert ::: dessert.\nBroccoli ::: broccoli.\nAsparagus ::: asparagus.\nVegetable ::: vegetable.\nDinnerParty(x) ::: x is a dinner party.\nAttend(x, y) ::: x attends y.\nFirst(x, y) ::: x is the first ever y that z has attended.\nPremises:\n∀x (Room(x, dessert) → Room(x, broccoli)) ::: If you have room for dessert, you have room for broccoli.\n∀x (Room(x, dessert) ∧ Attend(x, luis)) ::: Everyone at Luis's dinner party has room for dessert, including Luis.\n¬Room(mauricia, broccoli) ::: Mauricia does not have room for broccoli.\nFirst(allison, luis) ::: Luis's dinner party is the first ever dinner party that Allison has attended.\nRoom(gustave, asparagus) ∧ Room(gustave, broccoli) ::: Gustave has room for both broccoli and asparagus.\nBroccoli ∧ Asparagus ∧ Vegetable ::: Broccoli and asparagus are both vegetables.\nConclusion:\nAttend(mauricia, luis) ::: Mauricia is at Luis's dinner party.\n------\nProblem:\nIf a person is a student, then the person is either a student or a teacher. If a person is a teacher, then"
    ]
  },
  {
    "id": "FOLIO_train_836",
    "context": "If you have room for dessert, you have room for broccoli. Everyone at Luis's dinner party has room for dessert, including Luis. Mauricia does not have room for broccoli. Luis's dinner party is the first ever dinner party that Allison has attended. Gustave has room for both broccoli and asparagus. Broccoli and asparagus are both vegetables.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Gustav has room for dessert.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRoom(x, y) ::: x has room for y.\nDessert(y) ::: y is dessert.\nBroccoli(y) ::: y is broccoli.\nAsparagus(y) ::: y is asparagus.\nVegetable(y) ::: y is a vegetable.\nDinnerParty(x) ::: x is a dinner party.\nAttend(x, y) ::: x attends y.\nFirst(x, y) ::: x is the first ever y.\nPremises:\n∀x (Room(x, dessert) → Room(x, broccoli)) ::: If you have room for dessert, you have room for broccoli.\n∀x (Room(x, dessert) ∧ Attend(x, luis)) ::: Everyone at Luis's dinner party has room for dessert, including Luis.\n¬Room(mauricia, broccoli) ::: Mauricia does not have room for broccoli.\nFirst(allison, luis) ::: Luis's dinner party is the first ever dinner party that Allison has attended.\nRoom(gustave, broccoli) ∧ Room(gustave, asparagus) ::: Gustave has room for both broccoli and asparagus.\nBroccoli(broccoli) ∧ Asparagus(asparagus) ∧ Vegetable(broccoli) ∧ Vegetable(asparagus) ::: Broccoli and asparagus are both vegetables.\nConclusion:\nRoom(gustave, dessert)"
    ]
  },
  {
    "id": "FOLIO_train_837",
    "context": "Imagine Dragons is an American pop rock band. The lead singer of Imagine Dragons is Dan. Dan is also a songwriter. All lead singers are singers. All singers are musicians. Demons is one of the most popular singles of Imagine Dragons. Some singles of Imagine Dragons have been on Billboard Hot 100.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Some rock band has a songwriter.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nImagineDragons(x) ::: x is Imagine Dragons.\nLeadSinger(x) ::: x is the lead singer of Imagine Dragons.\nSongwriter(x) ::: x is a songwriter.\nSing(x) ::: x is a singer.\nMusician(x) ::: x is a musician.\nSingle(x) ::: x is a single.\nPopular(x) ::: x is one of the most popular singles of Imagine Dragons.\nBillboardHot100(x) ::: x has been on Billboard Hot 100.\nPremises:\nImagineDragons(imagineDragons) ∧ LeadSinger(dan) ∧ Songwriter(dan) ∧ Sing(dan) ∧ Musician(dan) ::: Imagine Dragons is an American pop rock band. The lead singer of Imagine Dragons is Dan. Dan is also a songwriter.\n∀x (LeadSinger(x) → Sing(x)) ::: All lead singers are singers.\n∀x (Sing(x) → Musician(x)) ::: All singers are musicians.\nSingle(demons) ∧ Popular(demons) ∧ BillboardHot100(demons) ::: Demons is one of the most popular singles of Imagine Dragons. Some singles of Imagine Dragons have been on Billboard Hot 100.\nConclusion:\n∃x (ImagineDragons(x) ∧ Songwriter(x)) ::: Some rock band has a songwriter.\n------\nProblem:\nA person is a student if and only if the person is a student of a university"
    ]
  },
  {
    "id": "FOLIO_train_838",
    "context": "Imagine Dragons is an American pop rock band. The lead singer of Imagine Dragons is Dan. Dan is also a songwriter. All lead singers are singers. All singers are musicians. Demons is one of the most popular singles of Imagine Dragons. Some singles of Imagine Dragons have been on Billboard Hot 100.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Dan is not a musician.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nImagineDragons(x) ::: x is a member of Imagine Dragons.\nLeadSinger(x) ::: x is the lead singer of Imagine Dragons.\nSongwriter(x) ::: x is a songwriter.\nSing(x) ::: x is a singer.\nMusician(x) ::: x is a musician.\nSingle(x) ::: x is a single.\nPopular(x) ::: x is one of the most popular singles of Imagine Dragons.\nBillboardHot100(x) ::: x has been on Billboard Hot 100.\nPremises:\nImagineDragons(dan) ∧ LeadSinger(dan) ∧ Songwriter(dan) ::: Dan is the lead singer of Imagine Dragons and a songwriter.\n∀x (LeadSinger(x) → Sing(x)) ::: All lead singers are singers.\n∀x (Sing(x) → Musician(x)) ::: All singers are musicians.\nSingle(demons) ∧ ImagineDragons(demons) ::: Demons is one of the most popular singles of Imagine Dragons.\n∃x (Single(x) ∧ BillboardHot100(x)) ::: Some singles of Imagine Dragons have been on Billboard Hot 100.\nConclusion:\n¬Musician(dan) ::: Dan is not a musician.\n------\nProblem:\nThe first-order logic formular is defined as follows:\n1) logical conjunction of expr1 and expr2: expr1 ∧ expr2\n2) logical disjunction of expr1 and expr2: expr1 �"
    ]
  },
  {
    "id": "FOLIO_train_839",
    "context": "Imagine Dragons is an American pop rock band. The lead singer of Imagine Dragons is Dan. Dan is also a songwriter. All lead singers are singers. All singers are musicians. Demons is one of the most popular singles of Imagine Dragons. Some singles of Imagine Dragons have been on Billboard Hot 100.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Demons has been on Billboard Hot 100.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nImagineDragons(x) ::: x is Imagine Dragons.\nLeadSinger(x) ::: x is the lead singer of Imagine Dragons.\nSongwriter(x) ::: x is a songwriter.\nLeadSinger(dan) ::: Dan is the lead singer of Imagine Dragons.\nSingers(x) ::: x is a singer.\nMusicians(x) ::: x is a musician.\nSingle(x) ::: x is a single.\nPopular(x) ::: x is one of the most popular singles of Imagine Dragons.\nBillboardHot100(x) ::: x has been on Billboard Hot 100.\nPremises:\nImagineDragons(imagineDragons) ::: Imagine Dragons is an American pop rock band.\nLeadSinger(dan) ::: Dan is the lead singer of Imagine Dragons.\nSongwriter(dan) ::: Dan is also a songwriter.\n∀x (LeadSinger(x) → Singers(x)) ::: All lead singers are singers.\n∀x (Singers(x) → Musicians(x)) ::: All singers are musicians.\nSingle(demons) ∧ Popular(demons) ::: Demons is one of the most popular singles of Imagine Dragons.\n∃x (Single(x) ∧ BillboardHot100(x)) ::: Some singles of Imagine Dragons have been on Billboard Hot 100.\nConclusion:\nBillboardHot100(demons) ::: Demons has been on Billboard Hot 100.\n------\nProblem:\nA person is a student if and only if"
    ]
  },
  {
    "id": "FOLIO_train_840",
    "context": "All bread is food. Some sandwiches are bread. All food is edible. No edible things are poisonous. Deodorant is poisonous.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Deodorant is a sandwich.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBread(x) ::: x is bread.\nSandwich(x) ::: x is a sandwich.\nFood(x) ::: x is food.\nEdible(x) ::: x is edible.\nPoisonous(x) ::: x is poisonous.\nPremises:\n∀x (Bread(x) → Food(x)) ::: All bread is food.\n∃x (Sandwich(x) ∧ Bread(x)) ::: Some sandwiches are bread.\n∀x (Food(x) → Edible(x)) ::: All food is edible.\n∀x (Edible(x) → ¬Poisonous(x)) ::: No edible things are poisonous.\nPoisonous(deodorant) ::: Deodorant is poisonous.\nConclusion:\nSandwich(deodorant) ::: Deodorant is a sandwich.\n------"
    ]
  },
  {
    "id": "FOLIO_train_841",
    "context": "All bread is food. Some sandwiches are bread. All food is edible. No edible things are poisonous. Deodorant is poisonous.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Deodorant is a sandwich and bread.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBread(x) ::: x is bread.\nSandwich(x) ::: x is a sandwich.\nFood(x) ::: x is food.\nEdible(x) ::: x is edible.\nPoisonous(x) ::: x is poisonous.\nPremises:\n∀x (Bread(x) → Food(x)) ::: All bread is food.\n∃x (Sandwich(x) ∧ Bread(x)) ::: Some sandwiches are bread.\n∀x (Food(x) → Edible(x)) ::: All food is edible.\n∀x (Edible(x) → ¬Poisonous(x)) ::: No edible things are poisonous.\nPoisonous(deodorant) ::: Deodorant is poisonous.\nConclusion:\nBread(deodorant) ∧ Sandwich(deodorant) ::"
    ]
  },
  {
    "id": "FOLIO_train_842",
    "context": "All bread is food. Some sandwiches are bread. All food is edible. No edible things are poisonous. Deodorant is poisonous.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If deodorant is a loaf of bread, then deodorant is not a sandwich.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBread(x) ::: x is bread.\nSandwich(x) ::: x is a sandwich.\nFood(x) ::: x is food.\nEdible(x) ::: x is edible.\nPoisonous(x) ::: x is poisonous.\nLoaf(x) ::: x is a loaf.\nPremises:\n∀x (Bread(x) → Food(x)) ::: All bread is food.\n∃x (Sandwich(x) ∧ Bread(x)) ::: Some sandwiches are bread.\n∀x (Food(x) → Edible(x)) ::: All food is edible.\n∀x (Edible(x) → ¬Poisonous(x)) ::: No edible things are poisonous.\nPoisonous(deodorant) ::: Deodorant is poisonous.\nConclusion:\n¬(Bread(deod"
    ]
  },
  {
    "id": "FOLIO_train_843",
    "context": "Common utilities include water, electricity, gas, heating, sewer, trash, and recycling. Many apartment rents cover the cost of water and electricity. Susan lives in an apartment where the rent covers all utilities. The rent of the apartment where Ava lives does not cover any utility expenses. Noah lives in an apartment where the rent does not cover heating.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Noah needs to pay the water bill.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLive(x, y) ::: x lives in apartment y.\nRent(x, y) ::: x pays rent for apartment y.\nUtility(x) ::: x is a utility.\nCover(x, y) ::: x covers the cost of y.\nPremises:\n∀x (Live(susan, x) → Rent(susan, x)) ::: Susan lives in an apartment where the rent covers all utilities.\n∀x (Live(ava, x) → ¬Rent(ava, x)) ::: Ava lives in an apartment where the rent does not cover any utility expenses.\n∀x (Live(noah, x) → ¬Rent(noah, x)) ::: Noah lives in an apartment where the rent does not cover heating.\nConclusion:\nNeed(noah, water) ::: Noah needs to pay the water bill.\n------\nProblem:\nA person is a student if and only if the person"
    ]
  },
  {
    "id": "FOLIO_train_844",
    "context": "Common utilities include water, electricity, gas, heating, sewer, trash, and recycling. Many apartment rents cover the cost of water and electricity. Susan lives in an apartment where the rent covers all utilities. The rent of the apartment where Ava lives does not cover any utility expenses. Noah lives in an apartment where the rent does not cover heating.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Noah and Ava both need to pay the heating bill.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLive(x, y) ::: x lives in apartment y.\nRent(x, y) ::: x pays rent for apartment y.\nUtility(x) ::: x is a utility.\nCover(x, y) ::: x covers the cost of y.\nPremises:\n∀x ∀y (Live(x, y) → Rent(x, y)) ::: Everyone who lives in an apartment pays rent for that apartment.\n∀x ∀y (Rent(x, y) → ¬Cover(x, water)) ::: No one who pays rent for an apartment covers the cost of water.\n∀x ∀y (Rent(x, y) → ¬Cover(x, electricity)) ::: No one who pays rent for an apartment covers the cost of electricity.\n∀x ∀y (Rent(x, y) → ¬Cover(x, gas)) ::: No"
    ]
  },
  {
    "id": "FOLIO_train_845",
    "context": "Common utilities include water, electricity, gas, heating, sewer, trash, and recycling. Many apartment rents cover the cost of water and electricity. Susan lives in an apartment where the rent covers all utilities. The rent of the apartment where Ava lives does not cover any utility expenses. Noah lives in an apartment where the rent does not cover heating.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Susan does not need to pay the water bill.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLive(x, y) ::: x lives in apartment y.\nRent(x, y) ::: x pays rent for apartment y.\nUtility(x) ::: x is a utility.\nCover(x, y) ::: x covers the cost of y.\nPremises:\n∀x ∀y (Live(x, y) → Rent(x, y)) ::: Everyone who lives in an apartment pays rent for that apartment.\n∀x ∀y (Rent(x, y) → ¬Cover(x, water)) ::: No one who pays rent for an apartment covers the cost of water.\n∀x ∀y (Rent(x, y) → ¬Cover(x, electricity)) ::: No one who pays rent for an apartment covers the cost of electricity.\n∀x ∀y (Rent(x, y) → ¬Cover(x, gas)) ::: No"
    ]
  },
  {
    "id": "FOLIO_train_846",
    "context": "All clothes are products. No products are perfect. All dresses are clothes. All skirts are dresses. If Nike is clothes, then Nike is perfect and a dress.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Nike is perfect.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nClothes(x) ::: x is clothes.\nProduct(x) ::: x is a product.\nPerfect(x) ::: x is perfect.\nDress(x) ::: x is a dress.\nSkirt(x) ::: x is a skirt.\nPremises:\n∀x (Clothes(x) → Product(x)) ::: All clothes are products.\n∀x (Product(x) → ¬Perfect(x)) ::: No products are perfect.\n∀x (Dress(x) → Clothes(x)) ::: All dresses are clothes.\n∀x (Skirt(x) → Dress(x)) ::: All skirts are dresses.\n∀x (Clothes(x) → (Perfect(x) ∧ Dress(x))) ::: If Nike is clothes, then Nike is perfect and a dress.\nConclusion:\nPerfect(nike) ::: N"
    ]
  },
  {
    "id": "FOLIO_train_847",
    "context": "All clothes are products. No products are perfect. All dresses are clothes. All skirts are dresses. If Nike is clothes, then Nike is perfect and a dress.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Nike is a skirt.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nClothes(x) ::: x is clothes.\nProduct(x) ::: x is a product.\nPerfect(x) ::: x is perfect.\nDress(x) ::: x is a dress.\nSkirt(x) ::: x is a skirt.\nPremises:\n∀x (Clothes(x) → Product(x)) ::: All clothes are products.\n∀x (Product(x) → ¬Perfect(x)) ::: No products are perfect.\n∀x (Dress(x) → Clothes(x)) ::: All dresses are clothes.\n∀x (Skirt(x) → Dress(x)) ::: All skirts are dresses.\n∀x (Clothes(x) → (Perfect(x) ∧ Dress(x))) ::: If Nike is clothes, then Nike is perfect and a dress.\nConclusion:\nSkirt(nike) ::: N"
    ]
  },
  {
    "id": "FOLIO_train_848",
    "context": "All clothes are products. No products are perfect. All dresses are clothes. All skirts are dresses. If Nike is clothes, then Nike is perfect and a dress.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Nike is not a skirt.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nClothes(x) ::: x is clothes.\nProduct(x) ::: x is a product.\nPerfect(x) ::: x is perfect.\nDress(x) ::: x is a dress.\nSkirt(x) ::: x is a skirt.\nPremises:\n∀x (Clothes(x) → Product(x)) ::: All clothes are products.\n∀x (Product(x) → ¬Perfect(x)) ::: No products are perfect.\n∀x (Dress(x) → Clothes(x)) ::: All dresses are clothes.\n∀x (Skirt(x) → Dress(x)) ::: All skirts are dresses.\n∀x (Clothes(x) → (Perfect(x) ∧ Dress(x))) ::: If Nike is clothes, then Nike is perfect and a dress.\nConclusion:\n¬Skirt(nike) :::"
    ]
  },
  {
    "id": "FOLIO_train_849",
    "context": "All pets are animals. Pets can be either a dog or a cat. If a person has a pet, they care for that pet. Dogs and Cats can be naughty. Pets who are naughty are not liked as much. Charlie has a naughty pet dog named Leo.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Leo is an animal.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAnimal(x) ::: x is an animal.\nPet(x) ::: x is a pet.\nDog(x) ::: x is a dog.\nCat(x) ::: x is a cat.\nPerson(x) ::: x is a person.\nHave(x, y) ::: x has pet y.\nCareFor(x, y) ::: x cares for pet y.\nNaughty(x) ::: x is naughty.\nLike(x, y) ::: x likes pet y.\nPremises:\n∀x (Pet(x) → Animal(x)) ::: All pets are animals.\n∀x (Pet(x) ⊕ (Dog(x) ∨ Cat(x))) ::: Pets can be either a dog or a cat.\n∀x (Have(x, y) → CareFor(x, y)) ::: If a person has a pet, they care for that pet"
    ]
  },
  {
    "id": "FOLIO_train_850",
    "context": "All pets are animals. Pets can be either a dog or a cat. If a person has a pet, they care for that pet. Dogs and Cats can be naughty. Pets who are naughty are not liked as much. Charlie has a naughty pet dog named Leo.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Charlie does not like Leo and does not care for Leo.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAnimal(x) ::: x is an animal.\nPet(x) ::: x is a pet.\nDog(x) ::: x is a dog.\nCat(x) ::: x is a cat.\nNaughty(x) ::: x is naughty.\nLike(x, y) ::: x likes y.\nCareFor(x, y) ::: x cares for y.\nPerson(x) ::: x is a person.\nPremises:\n∀x (Pet(x) → Animal(x)) ::: All pets are animals.\n∀x (Pet(x) ⊕ Dog(x) ∨ Cat(x)) ::: Pets can be either a dog or a cat.\n∀x (Person(x) ∧ Pet(x) → CareFor(x, x)) ::: If a person has a pet, they care for that pet.\n∀x (Dog(x) ∨ Cat(x) → Naughty(x)) ::: Dogs and Cats can be naughty.\n∀x (Naughty(x) → ¬Like(x, x)) ::: Pets who are naughty are not liked as much.\nCharlie(x) ∧ Pet(x) ∧ Dog(x) ∧ Naughty(x) ∧ Name(x, leo) ::: Charlie has a naughty pet dog named Leo.\nConclusion:\n¬Like(charlie, leo) ∧ ¬CareFor(charlie, leo) ::: Charlie does not like Leo and does not care for Leo.\n------"
    ]
  },
  {
    "id": "FOLIO_train_851",
    "context": "All pets are animals. Pets can be either a dog or a cat. If a person has a pet, they care for that pet. Dogs and Cats can be naughty. Pets who are naughty are not liked as much. Charlie has a naughty pet dog named Leo.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Dogs are always not naughty.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAnimal(x) ::: x is an animal.\nPet(x) ::: x is a pet.\nDog(x) ::: x is a dog.\nCat(x) ::: x is a cat.\nPerson(x) ::: x is a person.\nCareFor(x, y) ::: x cares for y.\nNaughty(x) ::: x is naughty.\nLike(x, y) ::: x likes y.\nPremises:\n∀x (Pet(x) → Animal(x)) ::: All pets are animals.\n∀x (Pet(x) → (Dog(x) ∨ Cat(x))) ::: Pets can be either a dog or a cat.\n∀x (Person(x) ∧ Pet(x) → CareFor(x, y)) ::: If a person has a pet, they care for that pet.\n∀x (Dog(x) ∨ Cat(x) → Naughty(x)) ::: Dogs and Cats can be naughty.\n∀x (Naughty(x) → ¬Like(x, y)) ::: Pets who are naughty are not liked as much.\nCharlie(x) ∧ Pet(x) ∧ Dog(x) ∧ Naughty(x) ∧ Name(x, leo) ::: Charlie has a naughty pet dog named Leo.\nConclusion:\n∀x (Dog(x) → ¬Naughty(x)) ::: Dogs are always not naughty.\n------\nProblem:\nAll people are either a student or"
    ]
  },
  {
    "id": "FOLIO_train_852",
    "context": "Surprises are either fun or dreadful. All scares are surprises.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? All scares are fun.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFun(x) ::: x is fun.\nDreadful(x) ::: x is dreadful.\nSurprise(x) ::: x is a surprise.\nScare(x) ::: x is a scare.\nPremises:\nSurprise(x) → (Fun(x) ∨ Dreadful(x)) ::: Surprises are either fun or dreadful.\nScare(x) → Surprise(x) ::: All scares are surprises.\nConclusion:\nScare(x) → Fun(x) ::: All scares are fun.\n------\nProblem:\nAll people who are not students are either employed or unemployed. All people who are employed are either employed full-time or employed part-time. All people who are employed full-time are employed.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? All people who are employed are employed full-time.\n###\nPredicates:\nStudent(x) ::: x is a student.\nEmployed(x) ::: x is employed.\nUnemployed(x) ::: x is unemployed.\nEmployedFullTime(x) ::: x is employed full-time.\nEmployedPartTime(x) ::: x is employed part-time.\nPremises:\n¬Student(x) → (Employed(x) ∨ Unemployed(x)) ::: All people who are not students are either employed or unemployed.\nEmployed(x) → (EmployedFullTime(x) ∨ EmployedPartTime(x)) ::: All people who are employed are either employed full-time or employed part-time.\nEmployedFullTime(x) → Employed(x"
    ]
  },
  {
    "id": "FOLIO_train_853",
    "context": "All books written by Cixin Liu have sold more than 1 million copies. Some books that have won the Hugo Award were written by Cixin Liu. All books about the future are influenced by Isaac Asimov. The book the Three Body Problem has sold more than 1 million copies. The Three Body Problem is about the future.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Three Body Problem won the Hugo Award.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBook(x) ::: x is a book.\nAuthor(x, y) ::: x is the author of y.\nSold(x, y) ::: x has sold y copies.\nWin(x, y) ::: x won the Hugo Award.\nInfluenced(x, y) ::: x is influenced by y.\nAbout(x, y) ::: x is about y.\nPremises:\n∀x (Author(x, theThreeBodyProblem) → Sold(x, 1000000)) ::: All books written by Cixin Liu have sold more than 1 million copies.\n∃x (Author(x, theThreeBodyProblem) ∧ Win(x, hugoAward)) ::: Some books that have won the Hugo Award were written by Cixin Liu.\n∀x (Book(x) ∧ About(x, future) → Influenced(x, isaacAsimov)) ::: All books about the future are influenced by Isaac Asimov.\nSold(cixin, 1000000) ∧ Book(theThreeBodyProblem) ∧ About(theThreeBodyProblem, future) ::: The book the Three Body Problem has sold more than 1 million copies.\nConclusion:\nWin(cixin, hugoAward) ::: The Three Body Problem won the Hugo Award.\n------\nProblem:\nAll people who are not students are either employed or unemployed. All people who are employed are either employed by a company or self-employed. All people who are employed by a company are either employed by a small company or a large company. All people who are self-em"
    ]
  },
  {
    "id": "FOLIO_train_854",
    "context": "All books written by Cixin Liu have sold more than 1 million copies. Some books that have won the Hugo Award were written by Cixin Liu. All books about the future are influenced by Isaac Asimov. The book the Three Body Problem has sold more than 1 million copies. The Three Body Problem is about the future.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Three Body Problem was influenced by Isaac Asimov.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBook(x) ::: x is a book.\nAuthor(x, y) ::: x is the author of y.\nSold(x, y) ::: x has sold y copies.\nWin(x, y) ::: x has won the Hugo Award.\nInfluenced(x, y) ::: x is influenced by y.\nAbout(x, y) ::: x is about y.\nPremises:\n∀x (Book(x) ∧ Author(x, cixinLiu) → Sold(x, 1000000)) ::: All books written by Cixin Liu have sold more than 1 million copies.\n∃x (Book(x) ∧ Author(x, cixinLiu) ∧ Win(x, hugoAward)) ::: Some books that have won the Hugo Award were written by Cixin Liu.\n∀x (Book(x) ∧ About(x, future) → Influenced(x, isaacAsimov)) ::: All books about the future are influenced by Isaac Asimov.\nBook(theThreeBodyProblem) ∧ Sold(theThreeBodyProblem, 1000000) ∧ About(theThreeBodyProblem, future) ::: The book the Three Body Problem has sold more than 1 million copies.\nConclusion:\nInfluenced(theThreeBodyProblem, isaacAsimov) ::: The Three Body Problem was influenced by Isaac Asimov.\n------\nProblem:\nAll people who are not students are either employed or unemployed. All people who are employed are either employed by a company or self-employed."
    ]
  },
  {
    "id": "FOLIO_train_855",
    "context": "All books written by Cixin Liu have sold more than 1 million copies. Some books that have won the Hugo Award were written by Cixin Liu. All books about the future are influenced by Isaac Asimov. The book the Three Body Problem has sold more than 1 million copies. The Three Body Problem is about the future.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Three Body Problem was written by Cixin Liu.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBook(x) ::: x is a book.\nAuthor(x, y) ::: x is the author of y.\nSold(x, y) ::: x has sold y copies.\nWin(x, y) ::: x has won the Hugo Award.\nInfluenced(x, y) ::: x is influenced by y.\nAbout(x, y) ::: x is about y.\nPremises:\n∀x (Book(x) ∧ Author(cixinLiu, x) → Sold(x, 1000000)) ::: All books written by Cixin Liu have sold more than 1 million copies.\n∃x (Book(x) ∧ Author(cixinLiu, x) ∧ Win(x, hugoAward)) ::: Some books that have won the Hugo Award were written by Cixin Liu.\n∀x (Book(x) ∧ About(x, future) → Influenced(x, isaacAsimov)) ::: All books about the future are influenced by Isaac Asimov.\nBook(theThreeBodyProblem) ∧ Sold(theThreeBodyProblem, 1000000) ∧ About(theThreeBodyProblem, future) ::: The book the Three Body Problem has sold more than 1 million copies.\nConclusion:\nAuthor(cixinLiu, theThreeBodyProblem) ::: The Three Body Problem was written by Cixin Liu.\n------\nProblem:\nAll people who are not students are either employed or unemployed. All people who are employed are either employed by a company or self-employed. All people"
    ]
  },
  {
    "id": "FOLIO_train_856",
    "context": "Some students who major in computer science get up early. If a student gets up early, then he/she will study in the morning. All students studying in the morning are good at time management. All students good at time management are popular among students. James is not popular among students.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James majors in computer science.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nStudent(x) ::: x is a student.\nMajor(x, y) ::: x majors in y.\nGetUpEarly(x) ::: x gets up early.\nStudyInMorning(x) ::: x studies in the morning.\nGoodAtTimeManagement(x) ::: x is good at time management.\nPopular(x) ::: x is popular among students.\nPremises:\n∃x (Student(x) ∧ Major(x, computerScience) ∧ GetUpEarly(x)) ::: Some students who major in computer science get up early.\n∀x (GetUpEarly(x) → StudyInMorning(x)) ::: If a student gets up early, then he/she will study in the morning.\n∀x (StudyInMorning(x) → GoodAtTimeManagement(x)) ::: All students studying in the morning are good at time management.\n∀x (GoodAtTimeManagement(x) → Popular(x)) ::: All students good at time management are popular among students.\n¬Popular(james) ::: James is not popular among students.\nConclusion:\nMajor(james, computerScience) ::: James majors in computer science.\n------\nProblem:\nSome people who are not good at time management are not popular among students. All people who are not popular among students are not good at time management. All people who are not good at time management are not popular among students.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? All people who are not good at time management are not popular among students.\n###\nPredicates:\nPerson(x"
    ]
  },
  {
    "id": "FOLIO_train_857",
    "context": "Some students who major in computer science get up early. If a student gets up early, then he/she will study in the morning. All students studying in the morning are good at time management. All students good at time management are popular among students. James is not popular among students.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James majors in computer science and gets up early.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nStudent(x) ::: x is a student.\nMajor(x, y) ::: x majors in y.\nGetUpEarly(x) ::: x gets up early.\nStudy(x, y) ::: x studies in y.\nGoodAt(x, y) ::: x is good at y.\nPopular(x, y) ::: x is popular among y.\nPremises:\n∃x (Student(x) ∧ Major(x, computerScience) ∧ GetUpEarly(x)) ::: Some students who major in computer science get up early.\n∀x (GetUpEarly(x) → Study(x, morning)) ::: If a student gets up early, then he/she will study in the morning.\n∀x (Study(x, morning) → GoodAt(x, timeManagement)) ::: All students studying in the morning are good at time management.\n∀x (GoodAt(x, timeManagement) → Popular(x, students)) ::: All students good at time management are popular among students.\n∀x (Popular(x, students) → ¬Popular(james, students)) ::: James is not popular among students.\nConclusion:\nMajor(james, computerScience) ∧ GetUpEarly(james) ::: James majors in computer science and gets up early.\n------\nProblem:\nSome people who are not good at math are not good at science. Some people who are not good at science are not good at math. Some people who are good at math are good at science. Some people who are good at science are good at math.\nQuestion:\nBased on the above information"
    ]
  },
  {
    "id": "FOLIO_train_858",
    "context": "Some students who major in computer science get up early. If a student gets up early, then he/she will study in the morning. All students studying in the morning are good at time management. All students good at time management are popular among students. James is not popular among students.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If James gets up early, then he majors in computer science.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nStudent(x) ::: x is a student.\nMajor(x, y) ::: x majors in y.\nGetUpEarly(x) ::: x gets up early.\nStudy(x, y) ::: x studies in y.\nGoodAt(x, y) ::: x is good at y.\nPopular(x, y) ::: x is popular among y.\nPremises:\n∃x (Student(x) ∧ Major(x, computerScience) ∧ GetUpEarly(x)) ::: Some students who major in computer science get up early.\n∀x (GetUpEarly(x) → Study(x, morning)) ::: If a student gets up early, then he/she will study in the morning.\n∀x (Study(x, morning) → GoodAt(x, timeManagement)) ::: All students studying in the morning are good at time management.\n∀x (GoodAt(x, timeManagement) → Popular(x, students)) ::: All students good at time management are popular among students.\n∀x (Popular(x, students) → ¬Popular(james, students)) ::: James is not popular among students.\nConclusion:\nGetUpEarly(james) → Major(james, computerScience) ::: If James gets up early, then he majors in computer science.\n------\nProblem:\nSome people who are good at math are good at physics. Some people who are good at physics are good at chemistry. Some people who are good at chemistry are good at biology. Some people who are good at biology are good at math.\nQuestion:\nBased on the above information, is the"
    ]
  },
  {
    "id": "FOLIO_train_859",
    "context": "There is no dog on the roof. If there is a dog on the roof something went wrong.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Something went wrong.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDog(x) ::: x is a dog.\nRoof(x) ::: x is a roof.\nOn(x, y) ::: x is on y.\nPremises:\n¬∃x (Dog(x) ∧ On(x, roof)) ::: There is no dog on the roof.\n∀x (Dog(x) ∧ On(x, roof) → SomethingWentWrong(x)) ::: If there is a dog on the roof something went wrong.\nConclusion:\nSomethingWentWrong(x) ::: Something went wrong.\n------\nProblem:\nIf a person is a student, then the person is a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? A person is a student.\n###\nPredicates:\nStudent(x) ::: x is a student.\nPremises:\n∀x (Student(x) → Student(x)) ::: If a person is a student, then the person is a student.\nConclusion:\nStudent(x) ::: A person is a student.\n------\nProblem:\nIf a person is a student, then the person is a student.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? A person is a student.\n###\nPredicates:\nStudent(x) ::: x is a student.\nPremises:\n∀x (Student(x) → Student(x)) ::: If a person is a student, then the person is a student.\nConclusion:\nStudent(x) ::: A person is a student.\n------\nProblem:\nIf a person is a student, then"
    ]
  },
  {
    "id": "FOLIO_train_860",
    "context": "Elephantopus is a genus of perennial plants in the daisy family. Elephantopus is widespread over much of Africa, southern Asia, Australia, and the Americas. Several species of Elephantopus are native to the southeastern United States. Elephantopus scaber is a traditional medicine.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Elephantopus is widespread over much of Australia and Southern Asia.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGenus(x) ::: x is a genus.\nPerennial(x) ::: x is a perennial plant.\nDaisy(x) ::: x is a daisy.\nWidespread(x, y) ::: x is widespread over y.\nSoutheastern(x) ::: x is in the southeastern United States.\nTraditionalMedicine(x) ::: x is a traditional medicine.\nPremises:\nGenus(elephantopus) ::: Elephantopus is a genus.\nPerennial(elephantopus) ∧ Daisy(elephantopus) ::: Elephantopus is a perennial plant.\nWidespread(elephantopus, africa) ∧ Widespread(elephantopus, southernAsia) ∧ Widespread(elephantopus, australia) ∧ Widespread(elephantopus, americas) ::: Elephantopus is widespread over much of Africa, southern Asia, Australia, and the Americas.\n∃x (Genus(x) ∧ Perennial(x) ∧ Daisy(x) ∧ Widespread(x, southeastern)) ::: Several species of Elephantopus are native to the southeastern United States.\nTraditionalMedicine(elephantopusScaber) ::: Elephantopus scaber is a traditional medicine.\nConclusion:\nWidespread(elephantopus, australia) ∧ Widespread(elephantopus, southernAsia) ::: Elephantopus is widespread over much of Australia and Southern Asia.\n------"
    ]
  },
  {
    "id": "FOLIO_train_861",
    "context": "Elephantopus is a genus of perennial plants in the daisy family. Elephantopus is widespread over much of Africa, southern Asia, Australia, and the Americas. Several species of Elephantopus are native to the southeastern United States. Elephantopus scaber is a traditional medicine.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? No Elephantopus is native to the southeastern United States.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGenus(x) ::: x is a genus.\nPerennial(x) ::: x is a perennial plant.\nDaisy(x) ::: x is a daisy.\nWidespread(x) ::: x is widespread.\nSouthernAsia(x) ::: x is southern Asia.\nAustralia(x) ::: x is Australia.\nAmericas(x) ::: x is the Americas.\nSoutheasternUnitedStates(x) ::: x is the southeastern United States.\nTraditionalMedicine(x) ::: x is a traditional medicine.\nSpecies(x) ::: x is a species.\nPremises:\nGenus(elephantopus) ::: Elephantopus is a genus.\nPerennial(elephantopus) ∧ Daisy(elephantopus) ::: Elephantopus is a perennial plant.\nWidespread(elephantopus) ∧ (SouthernAsia(elephantopus) ∨ Australia(elephantopus) ∨ Americas(elephantopus)) ::: Elephantopus is widespread over much of Africa, southern Asia, Australia, and the Americas.\nSpecies(elephantopusScaber) ∧ (Genus(elephantopusScaber) ∧ Perennial(elephantopusScaber) ∧ Daisy(elephantopusScaber)) ::: Elephantopus scaber is a traditional medicine.\nConclusion:\n¬∃x (Species(x) ∧ (Genus(x) ∧ Perennial"
    ]
  },
  {
    "id": "FOLIO_train_862",
    "context": "Elephantopus is a genus of perennial plants in the daisy family. Elephantopus is widespread over much of Africa, southern Asia, Australia, and the Americas. Several species of Elephantopus are native to the southeastern United States. Elephantopus scaber is a traditional medicine.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Elephantopus is a traditional medicine.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGenus(x) ::: x is a genus.\nPerennial(x) ::: x is a perennial plant.\nDaisy(x) ::: x is a daisy.\nWidespread(x) ::: x is widespread.\nSouthernAsia(x) ::: x is southern Asia.\nAustralia(x) ::: x is Australia.\nAmericas(x) ::: x is the Americas.\nSoutheasternUnitedStates(x) ::: x is the southeastern United States.\nSpecies(x) ::: x is a species.\nTraditionalMedicine(x) ::: x is a traditional medicine.\nPremises:\nGenus(elephantopus) ::: Elephantopus is a genus.\nPerennial(elephantopus) ∧ Daisy(elephantopus) ::: Elephantopus is a perennial plant.\nWidespread(elephantopus) ∧ (SouthernAsia(elephantopus) ∨ Australia(elephantopus) ∨ Americas(elephantopus)) ::: Elephantopus is widespread over much of Africa, southern Asia, Australia, and the Americas.\nSpecies(elephantopusScaber) ∧ (Genus(elephantopusScaber) ∧ Perennial(elephantopusScaber) ∧ Daisy(elephantopusScaber)) ::: Elephantopus scaber is a species of Elephantopus.\nTraditionalMedicine(elephantopusScaber) ::: Elephantopus scaber is a traditional"
    ]
  },
  {
    "id": "FOLIO_train_863",
    "context": "All Yale dormitories are located on York Street. All buildings managed by Yale Housing are dormitories. All buildings operated by Yale Housing staff are managed by Yale Housing. No buildings open to students are established after 1800. All buildings located on York Street are open to students. Harkness is either a building operated by Yale Housing staff or located on York Street.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Harkness is a Yale dormitory.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nYaleDormitory(x) ::: x is a Yale dormitory.\nBuilding(x) ::: x is a building.\nManaged(x, y) ::: x is managed by y.\nOperated(x, y) ::: x is operated by y.\nEstablished(x, y) ::: x is established in year y.\nOpen(x) ::: x is open to students.\nLocated(x, y) ::: x is located on y.\nPremises:\n∀x (YaleDormitory(x) → Located(x, yorkStreet)) ::: All Yale dormitories are located on York Street.\n∀x (Building(x) ∧ Managed(x, yaleHousing) → YaleDormitory(x)) ::: All buildings managed by Yale Housing are dormitories.\n∀x (Building(x) ∧ Operated(x, yaleHousingStaff) → Managed(x, yaleHousing)) ::: All buildings operated by Yale Housing staff are managed by Yale Housing.\n∀x (Building(x) ∧ Established(x, year1800) → ¬Open(x)) ::: No buildings open to students are established after 1800.\n∀x (Located(x, yorkStreet) → Open(x)) ::: All buildings located on York Street are open to students.\nHarkness ∨ Located(harkness, yorkStreet) ::: Harkness is either a building operated by Yale Housing staff or located on York Street.\nConclusion:\nYale"
    ]
  },
  {
    "id": "FOLIO_train_864",
    "context": "All Yale dormitories are located on York Street. All buildings managed by Yale Housing are dormitories. All buildings operated by Yale Housing staff are managed by Yale Housing. No buildings open to students are established after 1800. All buildings located on York Street are open to students. Harkness is either a building operated by Yale Housing staff or located on York Street.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Harkness is not a Yale dormitory.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nYaleDormitory(x) ::: x is a Yale dormitory.\nBuilding(x) ::: x is a building.\nManaged(x, y) ::: x is managed by y.\nOperated(x, y) ::: x is operated by y.\nEstablished(x, y) ::: x is established in year y.\nOpen(x) ::: x is open to students.\nLocated(x, y) ::: x is located on y.\nPremises:\n∀x (YaleDormitory(x) → Located(x, yorkStreet)) ::: All Yale dormitories are located on York Street.\n∀x (Building(x) ∧ Managed(x, yaleHousing) → YaleDormitory(x)) ::: All buildings managed by Yale Housing are dormitories.\n∀x (Building(x) ∧ Operated(x, yaleHousingStaff) → Managed(x, yaleHousing)) ::: All buildings operated by Yale Housing staff are managed by Yale Housing.\n∀x (Open(x) → ¬Established(x, year1800)) ::: No buildings open to students are established after 1800.\n∀x (Located(x, yorkStreet) → Open(x)) ::: All buildings located on York Street are open to students.\nHarkness ∨ Located(harkness, yorkStreet) ::: Harkness is either a building operated by Yale Housing staff or located on York Street.\nConclusion:\n¬YaleDormitory(harkness)"
    ]
  },
  {
    "id": "FOLIO_train_865",
    "context": "All Yale dormitories are located on York Street. All buildings managed by Yale Housing are dormitories. All buildings operated by Yale Housing staff are managed by Yale Housing. No buildings open to students are established after 1800. All buildings located on York Street are open to students. Harkness is either a building operated by Yale Housing staff or located on York Street.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Harkness is established after 1800.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nYaleDormitory(x) ::: x is a Yale dormitory.\nBuilding(x) ::: x is a building.\nManaged(x, y) ::: x is managed by y.\nOperated(x, y) ::: x is operated by y.\nEstablished(x, y) ::: x is established in year y.\nOpen(x, y) ::: x is open to y.\nLocated(x, y) ::: x is located on y.\nPremises:\n∀x (YaleDormitory(x) → Located(x, yorkStreet)) ::: All Yale dormitories are located on York Street.\n∀x (Building(x) ∧ Managed(x, yaleHousing) → YaleDormitory(x)) ::: All buildings managed by Yale Housing are dormitories.\n∀x (Building(x) ∧ Operated(x, yaleHousingStaff) → Managed(x, yaleHousing)) ::: All buildings operated by Yale Housing staff are managed by Yale Housing.\n∀x (Building(x) ∧ Established(x, year1800) → ¬Open(x, student)) ::: No buildings open to students are established after 1800.\n∀x (Located(x, yorkStreet) → Open(x, student)) ::: All buildings located on York Street are open to students.\nHarkness ∨ Located(harkness, yorkStreet) ::: Harkness is either a building operated by Yale Housing staff or located on York Street."
    ]
  },
  {
    "id": "FOLIO_train_866",
    "context": "All Yale dormitories are located on York Street. All buildings managed by Yale Housing are dormitories. All buildings operated by Yale Housing staff are managed by Yale Housing. No buildings open to students are established after 1800. All buildings located on York Street are open to students. Harkness is either a building operated by Yale Housing staff or located on York Street.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Harkness is established before 1800.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nYaleDormitory(x) ::: x is a Yale dormitory.\nBuilding(x) ::: x is a building.\nManaged(x, y) ::: x is managed by y.\nOperated(x, y) ::: x is operated by y.\nEstablished(x, y) ::: x is established in year y.\nOpen(x, y) ::: x is open to y.\nLocated(x, y) ::: x is located on y.\nPremises:\n∀x (YaleDormitory(x) → Located(x, yorkStreet)) ::: All Yale dormitories are located on York Street.\n∀x (Building(x) ∧ Managed(x, yaleHousing) → YaleDormitory(x)) ::: All buildings managed by Yale Housing are dormitories.\n∀x (Building(x) ∧ Operated(x, yaleHousingStaff) → Managed(x, yaleHousing)) ::: All buildings operated by Yale Housing staff are managed by Yale Housing.\n∀x (Building(x) ∧ Established(x, year1800) → ¬Open(x, student)) ::: No buildings open to students are established after 1800.\n∀x (Located(x, yorkStreet) → Open(x, student)) ::: All buildings located on York Street are open to students.\nHarkness ∨ Located(harkness, yorkStreet) ::: Harkness is either a building operated by Yale Housing staff or located on York Street."
    ]
  },
  {
    "id": "FOLIO_train_867",
    "context": "There are no mansion houses in an urban area. All skyscrapers reside in urban areas. Every creepy haunted house is in a mansion house. Every terrifying Halloween scare comes from a creepy haunted house. The Scream is a creepy haunted house or a terrifying Halloween scare.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Scream is a skyscraper.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nUrbanArea(x) ::: x is an urban area.\nMansionHouse(x) ::: x is a mansion house.\nSkyscraper(x) ::: x is a skyscraper.\nCreepyHauntedHouse(x) ::: x is a creepy haunted house.\nTerrifyingHalloweenScare(x) ::: x is a terrifying Halloween scare.\nReside(x, y) ::: x resides in y.\nPremises:\n¬∃x (MansionHouse(x) ∧ UrbanArea(x)) ::: There are no mansion houses in an urban area.\n∀x (Skyscraper(x) → UrbanArea(x)) ::: All skyscrapers reside in urban areas.\n∀x (CreepyHauntedHouse(x) → MansionHouse(x)) ::: Every creepy haunted house is in a mansion house.\n∀x (TerrifyingHalloweenScare(x) → CreepyHauntedHouse(x)) ::: Every terrifying Halloween scare comes from a creepy haunted house.\nTheScream(x) ::: x is The Scream.\nConclusion:\nSkyscraper(TheScream) ::: The Scream is a skyscraper.\n------\nProblem:\nAll people who are not students are either working or retired. All people who are not working are either retired or unemployed. All people who are not retired are either working or unemployed. All people who are not unemployed are either working or retired.\nQuestion:\nBased on the above information, is the following statement"
    ]
  },
  {
    "id": "FOLIO_train_868",
    "context": "There are no mansion houses in an urban area. All skyscrapers reside in urban areas. Every creepy haunted house is in a mansion house. Every terrifying Halloween scare comes from a creepy haunted house. The Scream is a creepy haunted house or a terrifying Halloween scare.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Scream is not a skyscraper.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nUrbanArea(x) ::: x is an urban area.\nMansionHouse(x) ::: x is a mansion house.\nSkyscraper(x) ::: x is a skyscraper.\nCreepyHauntedHouse(x) ::: x is a creepy haunted house.\nTerrifyingHalloweenScare(x) ::: x is a terrifying Halloween scare.\nReside(x, y) ::: x resides in y.\nPremises:\n¬∃x (MansionHouse(x) ∧ UrbanArea(x)) ::: There are no mansion houses in an urban area.\n∀x (Skyscraper(x) → UrbanArea(x)) ::: All skyscrapers reside in urban areas.\n∀x (CreepyHauntedHouse(x) → MansionHouse(x)) ::: Every creepy haunted house is in a mansion house.\n∀x (TerrifyingHalloweenScare(x) → CreepyHauntedHouse(x)) ::: Every terrifying Halloween scare comes from a creepy haunted house.\nTheScream(x) ::: x is The Scream.\nConclusion:\n¬Skyscraper(TheScream) ::: The Scream is not a skyscraper.\n------\nProblem:\nAll people who are not students are either employees or unemployed. All students are either employees or unemployed. All employees are either students or people who are not students.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? All people are either students or people who"
    ]
  },
  {
    "id": "FOLIO_train_869",
    "context": "There are no mansion houses in an urban area. All skyscrapers reside in urban areas. Every creepy haunted house is in a mansion house. Every terrifying Halloween scare comes from a creepy haunted house. The Scream is a creepy haunted house or a terrifying Halloween scare.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Scream is a terrifying Halloween scare.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nUrbanArea(x) ::: x is an urban area.\nMansionHouse(x) ::: x is a mansion house.\nSkyscraper(x) ::: x is a skyscraper.\nCreepyHauntedHouse(x) ::: x is a creepy haunted house.\nTerrifyingHalloweenScare(x) ::: x is a terrifying Halloween scare.\nReside(x, y) ::: x resides in y.\nPremises:\n¬∃x (MansionHouse(x) ∧ UrbanArea(x)) ::: There are no mansion houses in an urban area.\n∀x (Skyscraper(x) → UrbanArea(x)) ::: All skyscrapers reside in urban areas.\n∀x (CreepyHauntedHouse(x) → MansionHouse(x)) ::: Every creepy haunted house is in a mansion house.\n∀x (TerrifyingHalloweenScare(x) → CreepyHauntedHouse(x)) ::: Every terrifying Halloween scare comes from a creepy haunted house.\nTheScream(x) ::: x is The Scream.\nConclusion:\nTerrifyingHalloweenScare(TheScream) ::: The Scream is a terrifying Halloween scare.\n------\nProblem:\nAll people who are not students are either employees or unemployed. All students are either employees or unemployed. All employees are either students or people who are not students.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? All people are either students or people"
    ]
  },
  {
    "id": "FOLIO_train_870",
    "context": "There are no mansion houses in an urban area. All skyscrapers reside in urban areas. Every creepy haunted house is in a mansion house. Every terrifying Halloween scare comes from a creepy haunted house. The Scream is a creepy haunted house or a terrifying Halloween scare.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Scream is either a skyscraper or a mansion house.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nUrbanArea(x) ::: x is an urban area.\nMansionHouse(x) ::: x is a mansion house.\nSkyscraper(x) ::: x is a skyscraper.\nCreepyHauntedHouse(x) ::: x is a creepy haunted house.\nTerrifyingHalloweenScare(x) ::: x is a terrifying Halloween scare.\nReside(x, y) ::: x resides in y.\nPremises:\n¬∃x (MansionHouse(x) ∧ UrbanArea(x)) ::: There are no mansion houses in an urban area.\n∀x (Skyscraper(x) → UrbanArea(x)) ::: All skyscrapers reside in urban areas.\n∀x (CreepyHauntedHouse(x) → MansionHouse(x)) ::: Every creepy haunted house is in a mansion house.\n∀x (TerrifyingHalloweenScare(x) → CreepyHauntedHouse(x)) ::: Every terrifying Halloween scare comes from a creepy haunted house.\nTheScream(x) ::: x is The Scream.\nConclusion:\nSkyscraper(TheScream) ∨ MansionHouse(TheScream) ::: The Scream is either a skyscraper or a mansion house.\n------"
    ]
  },
  {
    "id": "FOLIO_train_871",
    "context": "There are no mansion houses in an urban area. All skyscrapers reside in urban areas. Every creepy haunted house is in a mansion house. Every terrifying Halloween scare comes from a creepy haunted house. The Scream is a creepy haunted house or a terrifying Halloween scare.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Scream is either a skyscraper or an urban area.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMansionHouse(x) ::: x is a mansion house.\nUrbanArea(x) ::: x is an urban area.\nSkyscraper(x) ::: x is a skyscraper.\nCreepyHauntedHouse(x) ::: x is a creepy haunted house.\nTerrifyingHalloweenScare(x) ::: x is a terrifying Halloween scare.\nReside(x, y) ::: x resides in y.\nPremises:\n¬∃x (MansionHouse(x) ∧ Reside(x, urbanArea)) ::: There are no mansion houses in an urban area.\n∀x (Skyscraper(x) → Reside(x, urbanArea)) ::: All skyscrapers reside in urban areas.\n∀x (CreepyHauntedHouse(x) → Reside(x, MansionHouse)) ::: Every creepy haunted house is in a mansion house.\n∀x (TerrifyingHalloweenScare(x) → Reside(x, CreepyHauntedHouse)) ::: Every terrifying Halloween scare comes from a creepy haunted house.\nTheScream(x) ::: x is The Scream.\nConclusion:\nSkyscraper(TheScream) ∨ UrbanArea(TheScream) ::: The Scream is either a skysc"
    ]
  },
  {
    "id": "FOLIO_train_872",
    "context": "There are no mansion houses in an urban area. All skyscrapers reside in urban areas. Every creepy haunted house is in a mansion house. Every terrifying Halloween scare comes from a creepy haunted house. The Scream is a creepy haunted house or a terrifying Halloween scare.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Scream is either a skyscraper or a creepy haunted house.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nUrbanArea(x) ::: x is an urban area.\nMansionHouse(x) ::: x is a mansion house.\nSkyscraper(x) ::: x is a skyscraper.\nCreepyHauntedHouse(x) ::: x is a creepy haunted house.\nTerrifyingHalloweenScare(x) ::: x is a terrifying Halloween scare.\nReside(x, y) ::: x resides in y.\nPremises:\n¬∃x (MansionHouse(x) ∧ UrbanArea(x)) ::: There are no mansion houses in an urban area.\n∀x (Skyscraper(x) → UrbanArea(x)) ::: All skyscrapers reside in urban areas.\n∀x (CreepyHauntedHouse(x) → MansionHouse(x)) ::: Every creepy haunted house is in a mansion house.\n∀x (TerrifyingHalloweenScare(x) → CreepyHauntedHouse(x)) ::: Every terrifying Halloween scare comes from a creepy haunted house.\nTheScream(x) ::: x is The Scream.\nConclusion:\nSkyscraper(TheScream) ∨ CreepyHauntedHouse(TheScream) ::: The Scream is either a skyscraper or a creepy ha"
    ]
  },
  {
    "id": "FOLIO_train_873",
    "context": "There are no mansion houses in an urban area. All skyscrapers reside in urban areas. Every creepy haunted house is in a mansion house. Every terrifying Halloween scare comes from a creepy haunted house. The Scream is a creepy haunted house or a terrifying Halloween scare.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If The Scream is not a mansion in an urban area, then it is either a skyscraper or an urban area.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nMansion(x) ::: x is a mansion house.\nUrban(x) ::: x is an urban area.\nSkyscraper(x) ::: x is a skyscraper.\nCreepy(x) ::: x is a creepy haunted house.\nHaunted(x) ::: x is a haunted house.\nTerrifying(x) ::: x is a terrifying Halloween scare.\nPremises:\n¬∃x (Mansion(x) ∧ Urban(x)) ::: There are no mansion houses in an urban area.\n∀x (Skyscraper(x) → Urban(x)) ::: All skyscrapers reside in urban areas.\n∀x (Creepy(x) → Mansion(x)) ::: Every creepy haunted house is in a mansion house.\n∀x (Terrifying(x) → Creepy(x)) ::: Every terrifying Halloween scare comes from a creepy haunted house.\nTheScream(x) ::: The Scream is a creepy haunted house or a terrifying Halloween scare.\nConclusion:\n(¬Mansion(theScream) ∧ ¬Urban(theScream)) → (Skyscraper(theScream) ∨ Urban(theScream)) ::: If The Scream is not a mansion in an urban"
    ]
  },
  {
    "id": "FOLIO_train_874",
    "context": "There are no mansion houses in an urban area. All skyscrapers reside in urban areas. Every creepy haunted house is in a mansion house. Every terrifying Halloween scare comes from a creepy haunted house. The Scream is a creepy haunted house or a terrifying Halloween scare.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If The Scream is either a skyscraper or a mansion house, then it is in an urban area.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nUrbanArea(x) ::: x is an urban area.\nMansionHouse(x) ::: x is a mansion house.\nSkyscraper(x) ::: x is a skyscraper.\nCreepyHauntedHouse(x) ::: x is a creepy haunted house.\nTerrifyingHalloweenScare(x) ::: x is a terrifying Halloween scare.\nReside(x, y) ::: x resides in y.\nPremises:\n¬∃x (MansionHouse(x) ∧ UrbanArea(x)) ::: There are no mansion houses in an urban area.\n∀x (Skyscraper(x) → UrbanArea(x)) ::: All skyscrapers reside in urban areas.\n∀x (CreepyHauntedHouse(x) → MansionHouse(x)) ::: Every creepy haunted house is in a mansion house.\n∀x (TerrifyingHalloweenScare(x) → CreepyHauntedHouse(x)) ::: Every terrifying Halloween scare comes from a creepy haunted house.\nTheScream ::: The Scream is a creepy haunted house or a terrifying Halloween scare.\nConclusion:\n(Skyscraper(theScream) ∨ MansionHouse(theScream)) → UrbanArea(theScream) ::"
    ]
  },
  {
    "id": "FOLIO_train_875",
    "context": "There are no mansion houses in an urban area. All skyscrapers reside in urban areas. Every creepy haunted house is in a mansion house. Every terrifying Halloween scare comes from a creepy haunted house. The Scream is a creepy haunted house or a terrifying Halloween scare.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If The Scream is either a skyscraper or a mansion house, then it is neither a creepy haunted house nor a terrifying Halloween scare.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nUrban(x) ::: x is an urban area.\nMansionHouse(x) ::: x is a mansion house.\nSkyscraper(x) ::: x is a skyscraper.\nCreepyHauntedHouse(x) ::: x is a creepy haunted house.\nTerrifyingHalloweenScare(x) ::: x is a terrifying Halloween scare.\nPremises:\n¬∃x (Urban(x) ∧ MansionHouse(x)) ::: There are no mansion houses in an urban area.\n∀x (Skyscraper(x) → Urban(x)) ::: All skyscrapers reside in urban areas.\n∀x (CreepyHauntedHouse(x) → MansionHouse(x)) ::: Every creepy haunted house is in a mansion house.\n∀x (TerrifyingHalloweenScare(x) → CreepyHauntedHouse(x)) ::: Every terrifying Halloween scare comes from a creepy haunted house.\nTheScream(x) ::: x is The Scream.\nConclusion:\n(Skyscraper(theScream) ∨ MansionHouse(theScream)) → ¬(CreepyHauntedHouse(theScream) ∨ TerrifyingHalloweenScare(theScream)) :::"
    ]
  },
  {
    "id": "FOLIO_train_876",
    "context": "There are no mansion houses in an urban area. All skyscrapers reside in urban areas. Every creepy haunted house is in a mansion house. Every terrifying Halloween scare comes from a creepy haunted house. The Scream is a creepy haunted house or a terrifying Halloween scare.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If The Scream is either a skyscraper or a creepy haunted house, then it is not a mansion house.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nUrban(x) ::: x is an urban area.\nMansionHouse(x) ::: x is a mansion house.\nSkyscraper(x) ::: x is a skyscraper.\nCreepyHauntedHouse(x) ::: x is a creepy haunted house.\nTerrifyingHalloweenScare(x) ::: x is a terrifying Halloween scare.\nReside(x, y) ::: x resides in y.\nPremises:\n¬∃x (MansionHouse(x) ∧ Urban(x)) ::: There are no mansion houses in an urban area.\n∀x (Skyscraper(x) → Urban(x)) ::: All skyscrapers reside in urban areas.\n∀x (CreepyHauntedHouse(x) → MansionHouse(x)) ::: Every creepy haunted house is in a mansion house.\n∀x (TerrifyingHalloweenScare(x) → CreepyHauntedHouse(x)) ::: Every terrifying Halloween scare comes from a creepy haunted house.\nTheScream ::: The Scream is a creepy haunted house or a terrifying Halloween scare.\nConclusion:\n¬∃x (Skyscraper(x) ∧ MansionHouse(x)) ::: If The Scream is either a skyscraper or"
    ]
  },
  {
    "id": "FOLIO_train_877",
    "context": "Phuoc Binh national park is a national park in Vietnam. Any national park in Vietnam is classified as a nature reserve. There is a national park in Vietnam classified as a UNESCO World Heritage Site. All national parks in Vietnam are either managed by the Ministry of Agriculture or by the People's Committee. Phuoc Binh is not managed by the Ministry of Agriculture.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There is a nature reserve in Vietnam.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nNationalPark(x) ::: x is a national park.\nVietnam(x) ::: x is in Vietnam.\nClassified(x, y) ::: x is classified as y.\nUNESCOWorldHeritageSite(x) ::: x is a UNESCO World Heritage Site.\nManaged(x, y) ::: x is managed by y.\nMinistryOfAgriculture(x) ::: x is the Ministry of Agriculture.\nPeopleCommittee(x) ::: x is the People's Committee.\nPremises:\nNationalPark(phuocBinh) ∧ Vietnam(phuocBinh) ::: Phuoc Binh national park is a national park in Vietnam.\n∀x (NationalPark(x) ∧ Vietnam(x) → Classified(x, natureReserve)) ::: Any national park in Vietnam is classified as a nature reserve.\n∃x (Classified(x, UNESCOWorldHeritageSite) ∧ NationalPark(x) ∧ Vietnam(x)) ::: There is a national park in Vietnam classified as a UNESCO World Heritage Site.\n∀x (NationalPark(x) ∧ Vietnam(x) → (Managed(x, MinistryOfAgriculture) ∨ Managed(x, PeopleCommittee))) ::: All national parks in Vietnam are either managed by the Ministry of Agriculture or by the People's Committee.\n¬"
    ]
  },
  {
    "id": "FOLIO_train_878",
    "context": "Phuoc Binh national park is a national park in Vietnam. Any national park in Vietnam is classified as a nature reserve. There is a national park in Vietnam classified as a UNESCO World Heritage Site. All national parks in Vietnam are either managed by the Ministry of Agriculture or by the People's Committee. Phuoc Binh is not managed by the Ministry of Agriculture.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Phuoc Binh is a UNESCO Heritage Site.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPhuocBinh ::: Phuoc Binh national park is a national park in Vietnam.\nNationalPark(x) ::: x is a national park in Vietnam.\nClassified(x, y) ::: x is classified as y.\nUNESCOWorldHeritageSite ::: x is a UNESCO World Heritage Site.\nManaged(x, y) ::: x is managed by y.\nMinistryOfAgriculture ::: x is the Ministry of Agriculture.\nPeopleCommittee ::: x is the People's Committee.\nPremises:\nPhuocBinh ::: Phuoc Binh national park is a national park in Vietnam.\n∀x (NationalPark(x) → Classified(x, natureReserve)) ::: Any national park in Vietnam is classified as a nature reserve.\n∃x (Classified(x, UNESCOWorldHeritageSite) ∧ NationalPark(x)) ::: There is a national park in Vietnam classified as a UNESCO World Heritage Site.\n∀x (NationalPark(x) → (Managed(x, MinistryOfAgriculture) ∨ Managed(x, PeopleCommittee))) ::: All national parks in Vietnam are either managed by the Ministry of Agriculture or by the People's Committee.\n¬Managed(PhuocBinh, MinistryOfAgriculture) ::: Phuoc Binh is not managed by the Ministry of Agriculture.\nConclusion:\nClassified("
    ]
  },
  {
    "id": "FOLIO_train_879",
    "context": "Phuoc Binh national park is a national park in Vietnam. Any national park in Vietnam is classified as a nature reserve. There is a national park in Vietnam classified as a UNESCO World Heritage Site. All national parks in Vietnam are either managed by the Ministry of Agriculture or by the People's Committee. Phuoc Binh is not managed by the Ministry of Agriculture.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Phuoc Binh is managed by the People's Committee.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPhuocBinh ::: Phuoc Binh national park is a national park in Vietnam.\nNationalPark(x) ::: x is a national park in Vietnam.\nClassified(x, y) ::: x is classified as y.\nUNESCOWorldHeritageSite ::: x is a UNESCO World Heritage Site.\nManaged(x, y) ::: x is managed by y.\nMinistryOfAgriculture ::: x is the Ministry of Agriculture.\nPeople'sCommittee ::: x is the People's Committee.\nPremises:\nPhuocBinh ::: Phuoc Binh national park is a national park in Vietnam.\n∀x (NationalPark(x) → Classified(x, natureReserve)) ::: Any national park in Vietnam is classified as a nature reserve.\n∃x (Classified(x, UNESCOWorldHeritageSite) ∧ NationalPark(x)) ::: There is a national park in Vietnam classified as a UNESCO World Heritage Site.\n∀x (NationalPark(x) → (Managed(x, MinistryOfAgriculture) ∨ Managed(x, People'sCommittee))) ::: All national parks in Vietnam are either managed by the Ministry of Agriculture or by the People's Committee.\n¬Managed(PhuocBinh, MinistryOfAgriculture) ::: Phuoc Binh is not managed by the Ministry of Agriculture.\nConclusion:"
    ]
  },
  {
    "id": "FOLIO_train_880",
    "context": "Greyhound racing is a competitive sport where spectators bet on greyhounds. Coursing is a part of Greyhound racing. Some competitive sports where spectators bet on things are banned. Coursing involves spectators betting on a hare being pursued by greyhounds. Hares are small game. If a competitive sport involves spectators betting on small game, then it is banned.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? No coursing is banned.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCompetitiveSport(x) ::: x is a competitive sport.\nSpectator(x) ::: x is a spectator.\nBet(x, y) ::: x bets on y.\nGreyhound(x) ::: x is a greyhound.\nHare(x) ::: x is a hare.\nGame(x) ::: x is a game.\nSmall(x) ::: x is small.\nBanned(x) ::: x is banned.\nCoursing(x) ::: x is coursing.\nPremises:\nCompetitiveSport(greyhoundRacing) ∧ Spectator(spectator) ∧ Bet(spectator, greyhoundRacing) ::: Greyhound racing is a competitive sport where spectators bet on greyhounds.\nCompetitiveSport(greyhoundRacing) ∧ Coursing(coursing) ∧ Spectator(spectator) ∧ Bet(spectator, coursing) ∧ Hare(hare) ∧ Greyhound(greyhound) ∧ Game(game) ∧ Small(small) ::: Coursing is a part of Greyhound racing.\nCompetitiveSport(x) ∧ Spectator(spectator) ∧ Bet(spectator, x) → Banned(x) ::: Some competitive sports where spectators bet on things are banned.\nCoursing(x) ∧ Spectator(spectator) ∧ Bet(spectator, x) ∧ Hare(hare) ∧ Greyhound(greyhound) ∧ Game(game) ∧ Small(small) ::: Coursing involves spectators betting on a hare being pursued by greyhounds.\nHare(x) ∧ Game(x) ∧ Small(x) ::: Hares are small game.\nSmall(x) ∧ Game(x) → Banned(x) ::: If a competitive sport involves spectators betting on small game, then it is banned.\nConclusion:\n¬Banned(coursing) ::: No coursing is banned.\n------"
    ]
  },
  {
    "id": "FOLIO_train_881",
    "context": "Greyhound racing is a competitive sport where spectators bet on greyhounds. Coursing is a part of Greyhound racing. Some competitive sports where spectators bet on things are banned. Coursing involves spectators betting on a hare being pursued by greyhounds. Hares are small game. If a competitive sport involves spectators betting on small game, then it is banned.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Greyhound racing is a competitive sport.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCompetitiveSport(x) ::: x is a competitive sport.\nSpectator(x) ::: x is a spectator.\nBet(x, y) ::: x bets on y.\nGreyhoundRacing(x) ::: x is greyhound racing.\nCoursing(x) ::: x is coursing.\nHare(x) ::: x is a hare.\nGame(x) ::: x is a game.\nBanned(x) ::: x is banned.\nPremises:\nCompetitiveSport(greyhoundRacing) ∧ Spectator(spectator) ∧ Bet(spectator, greyhoundRacing) ::: Greyhound racing is a competitive sport.\nCompetitiveSport(coursing) ∧ Spectator(spectator) ∧ Bet(spectator, coursing) ∧ Hare(hare) ∧ Game(hare) ::: Coursing is a part of Greyhound racing.\n∀x (CompetitiveSport(x) ∧ Spectator(spectator) ∧ Bet(spectator, x) → Banned(x)) ::: Some competitive sports where spectators bet on things are banned.\nCompetitiveSport(coursing) ∧ Spectator(spectator) ∧ Bet(spectator, coursing) ∧ Hare(hare) ∧ Game(hare) ∧ ∀x (CompetitiveSport(x) ∧ Spectator(spectator) ∧ Bet(spectator, x) → Banned(x)) ::: Coursing involves spectators betting on a hare being pursued by greyhounds.\n∀x (CompetitiveSport(x) ∧ Spectator(spectator) ∧ Bet(spectator, x) ∧ Game(x) → Banned(x)) ::: If a competitive sport involves spectators betting on small game, then it is banned.\nConclusion:\nCompetitiveSport(greyhoundRacing) ::: Greyhound racing is a competitive sport.\n------\nProblem:\nA person who is"
    ]
  },
  {
    "id": "FOLIO_train_882",
    "context": "If a soccer player receives two yellow cards in one game, this player will be ejected from the rest of the game. If a soccer player receives one red card in one game, this player will be ejected from the rest of the game. Henry is a soccer player. In one game, Henry first receives one yellow card, then he receives one red card.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Henry will be ejected from the rest of the game.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSoccerPlayer(x) ::: x is a soccer player.\nReceive(x, y) ::: x receives y.\nYellowCard(y) ::: y is a yellow card.\nRedCard(y) ::: y is a red card.\nEject(x) ::: x is ejected from the rest of the game.\nPremises:\n∀x (Receive(x, yellowCard) → Eject(x)) ::: If a soccer player receives two yellow cards in one game, this player will be ejected from the rest of the game.\n∀x (Receive(x, redCard) → Eject(x)) ::: If a soccer player receives one red card in one game, this player will be ejected from the rest of the game.\nSoccerPlayer(henry) ::: Henry is a soccer player.\nReceive(henry, yellowCard) ∧ Receive(henry, redCard) ::: In one game, Henry first receives one yellow card, then he receives one red card.\nConclusion:\nEject(henry) ::: Henry will be ejected from the rest of the game.\n------\nProblem:\nA person is a student if and only if this person is enrolled in a university. A person is a student if and only if this person is enrolled in a college. A person is a student if and only if this person is enrolled in a high school. A person is a student if and only if this person is enrolled in a middle school. A person is a student if and only if this person is enrolled in a primary school. A person is a student if and only if this person is enrolled in a kindergarten. A person is a student if and only if this person is enrolled in a nursery school. A person is a student if and only if this person is enrolled in a preschool. A person is a student if and only if this person is enrolled in a daycare. A person is a student if and only if this person is enrolled in a playgroup. A person is a student if and only if this person is enrolled in a crèche. A person is a student if and only if this person is enrolled in a creche. A person is a student if and only if this person is enrolled in a"
    ]
  },
  {
    "id": "FOLIO_train_883",
    "context": "If a soccer player receives two yellow cards in one game, this player will be ejected from the rest of the game. If a soccer player receives one red card in one game, this player will be ejected from the rest of the game. Henry is a soccer player. In one game, Henry first receives one yellow card, then he receives one red card.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Henry will not be ejected from the rest of the game.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSoccerPlayer(x) ::: x is a soccer player.\nReceive(x, y) ::: x receives y.\nYellowCard(y) ::: y is a yellow card.\nRedCard(y) ::: y is a red card.\nEject(x) ::: x is ejected from the rest of the game.\nPremises:\n∀x (Receive(x, yellowCard) → Eject(x)) ::: If a soccer player receives two yellow cards in one game, this player will be ejected from the rest of the game.\n∀x (Receive(x, redCard) → Eject(x)) ::: If a soccer player receives one red card in one game, this player will be ejected from the rest of the game.\nSoccerPlayer(henry) ::: Henry is a soccer player.\nReceive(henry, yellowCard) ∧ Receive(henry, redCard) ::: In one game, Henry first receives one yellow card, then he receives one red card.\nConclusion:\n¬Eject(henry) ::: Henry will not be ejected from the rest of the game.\n------\nProblem:\nA person is a student if and only if this person is enrolled in a university. A person is a student if and only if this person is enrolled in a college. A person is a student if and only if this person is enrolled in a high school. A person is a student if and only if this person is enrolled in a middle school. A person is a student if and only if this person is enrolled in a primary school. A person is a student if and only if this person is enrolled in a kindergarten. A person is a student if and only if this person is enrolled in a nursery school. A person is a student if and only if this person is enrolled in a preschool. A person is a student if and only if this person is enrolled in a daycare. A person is a student if and only if this person is enrolled in a playgroup. A person is a student if and only if this person is enrolled in a crèche. A person is a student if and only if this person is enrolled in a creche. A person is a student if and only if this person is enrolled"
    ]
  },
  {
    "id": "FOLIO_train_884",
    "context": "All trees are plants. Some living things are trees.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Some living things are plants.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTree(x) ::: x is a tree.\nPlant(x) ::: x is a plant.\nLivingThing(x) ::: x is a living thing.\nPremises:\n∀x (Tree(x) → Plant(x)) ::: All trees are plants.\n∃x (LivingThing(x) ∧ Tree(x)) ::: Some living things are trees.\nConclusion:\n∃x (LivingThing(x) ∧ Plant(x)) ::: Some living things are plants.\n------\nProblem:\nAll people are living things. Some living things are animals.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Some people are animals.\n###\nPredicates:\nPerson(x) ::: x is a person.\nLivingThing(x) ::: x is a living thing.\nAnimal(x) ::: x is an animal.\nPremises:\n∀x (Person(x) → LivingThing(x)) ::: All people are living things.\n∃x (LivingThing(x) ∧ Animal(x)) ::: Some living things are animals.\nConclusion:\n∃x (Person(x) ∧ Animal(x)) ::: Some people are animals.\n------\nProblem:\nAll people are living things. Some living things are animals.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? Some people are animals.\n###\nPredicates:\nPerson(x) ::: x is a person.\nLivingThing(x) ::: x is a living thing.\nAnimal(x) ::: x is an animal.\nPremises:\n∀x (Person(x) → LivingThing(x)) ::: All people are living things.\n∃x (LivingThing(x) ∧ Animal(x)) ::: Some living things are animals.\nConclusion:\n∃x (Person(x) ∧ Animal(x)) ::: Some people are animals.\n------\nProblem:\nAll people are living things. Some living things are animals.\nQuestion:\nBased on the above information, is"
    ]
  },
  {
    "id": "FOLIO_train_885",
    "context": "Dagfinn is a given name. Notable people with the given name include Dagfinn Aarskog, Dagfinn Bakke and Dagfinn Dahl. Dagfinn Aarskog is a Norwegian physician. Dagfinn Dahl is a Norwegian barrister.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Dagfinn Aarskog is a notable person.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDagfinn(x) ::: x is a person with the given name Dagfinn.\nNotable(x) ::: x is a notable person.\nPhysician(x) ::: x is a physician.\nBarrister(x) ::: x is a barrister.\nPremises:\nDagfinn(aarskog) ∧ Notable(aarskog) ∧ Physician(aarskog) ::: Dagfinn Aarskog is a Norwegian physician.\nDagfinn(dahl) ∧ Notable(dahl) ∧ Barrister(dahl) ::: Dagfinn Dahl is a Norwegian barrister.\nConclusion:\nNotable(aarskog) ::: Dagfinn Aarskog is a notable person.\n------\nProblem:\nA person is a student if and only if the person is enrolled in a course. A person is enrolled in a course if and only if the person is taking the course. A person is taking a course if and only if the person is registered for the course. A person is registered for a course if and only if the person is enrolled in the course.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? A person is a student if and only if the person is registered for a course.\n###\nPredicates:\nStudent(x) ::: x is a student.\nEnrolled(x, y) ::: x is enrolled in course y.\nTaking(x, y) ::: x is taking course y.\nRegistered(x, y) ::: x is registered for course y.\nPremises:\nStudent(x) ↔ Enrolled(x, y) ::: A person is a student if and only if the person is enrolled in a course.\nEnrolled(x, y) ↔ Taking(x, y) ::: A person is enrolled in a course if and only if the person is taking the course.\nTaking(x, y) ↔ Registered(x, y) ::: A person is taking a course if and only if the person is registered for the course.\nRegistered(x, y) ↔ Enrolled(x, y) ::: A person is registered for a"
    ]
  },
  {
    "id": "FOLIO_train_886",
    "context": "Dagfinn is a given name. Notable people with the given name include Dagfinn Aarskog, Dagfinn Bakke and Dagfinn Dahl. Dagfinn Aarskog is a Norwegian physician. Dagfinn Dahl is a Norwegian barrister.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Dagfinn is Dagfinn Aarskog's given name.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGivenName(x) ::: x is a given name.\nNotablePerson(x) ::: x is a notable person.\nPhysician(x) ::: x is a physician.\nBarrister(x) ::: x is a barrister.\nPremises:\nGivenName(dagfinn) ::: Dagfinn is a given name.\n∃x (NotablePerson(x) ∧ GivenName(x) ∧ GivenName(dagfinn)) ::: Notable people with the given name include Dagfinn.\n∃x (NotablePerson(x) ∧ GivenName(x) ∧ GivenName(dagfinn) ∧ Physician(x)) ::: Dagfinn Aarskog is a Norwegian physician.\n∃x (NotablePerson(x) ∧ GivenName(x) ∧ GivenName(dagfinn) ∧ Barrister(x)) ::: Dagfinn Dahl is a Norwegian barrister.\nConclusion:\nGivenName(dagfinn) ∧ Physician(dagfinn) ::: Dagfinn is Dagfinn Aarskog's given name.\n------\nProblem:\nA person is a student if and only if the person is enrolled in a course. A person is enrolled in a course if and only if the person is taking the course. A person is taking a course if and only if the person is registered for the course. A person is registered for a course if and only if the person is enrolled in the course.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? A person is a student if and only if the person is registered for a course.\n###\nPredicates:\nStudent(x) ::: x is a student.\nEnrolled(x, y) ::: x is enrolled in course y.\nTaking(x, y) ::: x is taking course y.\nRegistered(x, y) ::: x is registered for course y.\nPremises:\nStudent(x) ↔ Enrolled(x, y) ::: A person is a student if and only if the person is enrolled in a course.\nEnrolled(x"
    ]
  },
  {
    "id": "FOLIO_train_887",
    "context": "Dagfinn is a given name. Notable people with the given name include Dagfinn Aarskog, Dagfinn Bakke and Dagfinn Dahl. Dagfinn Aarskog is a Norwegian physician. Dagfinn Dahl is a Norwegian barrister.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Dagfinn Dahl is a Norwegian physician.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nNorwegian(x) ::: x is a Norwegian person.\nPhysician(x) ::: x is a physician.\nBarrister(x) ::: x is a barrister.\nDagfinn(x) ::: x is a person with the given name Dagfinn.\nPremises:\nDagfinn(aarskog) ∧ Norwegian(aarskog) ∧ Physician(aarskog) ::: Dagfinn Aarskog is a Norwegian physician.\nDagfinn(dahl) ∧ Norwegian(dahl) ∧ Barrister(dahl) ::: Dagfinn Dahl is a Norwegian barrister.\nConclusion:\nPhysician(dahl) ::: Dagfinn Dahl is a Norwegian physician.\n------\nProblem:\nA person is a student if and only if the person is enrolled in a course. A person is enrolled in a course if and only if the person is taking the course. A person is taking a course if and only if the person is registered for the course. A person is registered for a course if and only if the person is enrolled in the course.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? A person is a student if and only if the person is registered for a course.\n###\nPredicates:\nStudent(x) ::: x is a student.\nEnrolled(x, y) ::: x is enrolled in course y.\nTaking(x, y) ::: x is taking course y.\nRegistered(x, y) ::: x is registered for course y.\nPremises:\nStudent(x) ↔ Enrolled(x, y) ::: A person is a student if and only if the person is enrolled in a course.\nEnrolled(x, y) ↔ Taking(x, y) ::: A person is enrolled in a course if and only if the person is taking the course.\nTaking(x, y) ↔ Registered(x, y) ::: A person is taking a course if and only if the person is registered for the course.\nRegistered(x, y) ↔ Enrolled(x, y) ::: A person is registered for a"
    ]
  },
  {
    "id": "FOLIO_train_888",
    "context": "If entertainment is interesting, it will be popular. All popular things are well-known.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If entertainment is interesting, it will be well-known.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nEntertainment(x) ::: x is entertainment.\nInteresting(x) ::: x is interesting.\nPopular(x) ::: x is popular.\nWellKnown(x) ::: x is well-known.\nPremises:\n∀x (Entertainment(x) → Interesting(x)) ::: If entertainment is interesting, it will be popular.\n∀x (Popular(x) → WellKnown(x)) ::: All popular things are well-known.\nConclusion:\n∀x (Entertainment(x) → WellKnown(x)) ::: If entertainment is interesting, it will be well-known.\n------\nProblem:\nIf a person is a student, then he or she is a learner. If a person is a learner, then he or she is a person who is interested in learning. If a person is a person who is interested in learning, then he or she is a person who is interested in knowledge.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? If a person is a student, then he or she is a person who is interested in knowledge.\n###\nPredicates:\nStudent(x) ::: x is a student.\nLearner(x) ::: x is a learner.\nInterestedInLearning(x) ::: x is a person who is interested in learning.\nInterestedInKnowledge(x) ::: x is a person who is interested in knowledge.\nPremises:\n∀x (Student(x) → Learner(x)) ::: If a person is a student, then he or she is a learner.\n∀x (Learner(x) → InterestedInLearning(x)) ::: If a person is a learner, then he or she is a person who is interested in learning.\n∀x (InterestedInLearning(x) → InterestedInKnowledge(x)) ::: If a person is a person who is interested in learning, then he or she is a person who is interested in knowledge.\nConclusion:\n∀x (Student(x) → InterestedInKnowledge(x)) ::: If a person is a student, then he or she is a person who is interested in knowledge."
    ]
  },
  {
    "id": "FOLIO_train_889",
    "context": "It is not true that some giant language models do not have good performance. All language models with good performance are used by some researchers. If a language model is used by some researchers, it is popular. If BERT is a giant language model, then GPT-3 is also a giant language model. BERT is a giant language model.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? GPT-3 is popular.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGiant(x) ::: x is a giant language model.\nLanguageModel(x) ::: x is a language model.\nGoodPerformance(x) ::: x has good performance.\nUse(x, y) ::: x is used by y.\nPopular(x) ::: x is popular.\nPremises:\n¬∃x (Giant(x) ∧ GoodPerformance(x)) ::: It is not true that some giant language models do not have good performance.\n∀x (GoodPerformance(x) → Use(x, researcher)) ::: All language models with good performance are used by some researchers.\n∀x (Use(x, researcher) → Popular(x)) ::: If a language model is used by some researchers, it is popular.\nGiant(bert) ∧ Giant(gpt3) ::: If BERT is a giant language model, then GPT-3 is also a giant language model.\nGiant(bert) ::: BERT is a giant language model.\nConclusion:\nPopular(gpt3) ::: GPT-3 is popular.\n------\nProblem:\nAll people who are not students are either unaware that caffeine is a drug or joke about being addicted to caffeine. All people who are not students are either unaware that caffeine is a drug or joke about being addicted to caffeine. All people who are not students are either unaware that caffeine is a drug or joke about being addicted to caffeine. All people who are not students are either unaware that caffeine is a drug or joke about being addicted to caffeine. All people who are not students are either unaware that caffeine is a drug or joke about being addicted to caffeine. All people who are not students are either unaware that caffeine is a drug or joke about being addicted to caffeine. All people who are not students are either unaware that caffeine is a drug or joke about being addicted to caffeine. All people who are not students are either unaware that caffeine is a drug or joke about being addicted to caffeine. All people who are not students are either unaware that caffeine is a drug or joke about being addicted to caffeine. All people"
    ]
  },
  {
    "id": "FOLIO_train_890",
    "context": "St Johnstone is a Scottish team. St Johnstone is part of the Scottish Premiership. If a team is part of the league, it has joined the league. St Johnstone and Minsk are different teams. For two different teams, either one team wins or the other team wins. Minsk won against St Johnstone.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? At least one Scottish team has joined the Scottish Premiership.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTeam(x) ::: x is a team.\nScottish(x) ::: x is a Scottish team.\nPremier(x) ::: x is part of the Scottish Premiership.\nJoin(x, y) ::: x has joined the league.\nDifferent(x, y) ::: x and y are different teams.\nWin(x, y) ::: x wins against y.\nPremises:\nTeam(stjohnstone) ∧ Scottish(stjohnstone) ∧ Premier(stjohnstone) ::: St Johnstone is a Scottish team.\nTeam(stjohnstone) ∧ Premier(stjohnstone) ∧ ¬Join(stjohnstone, stjohnstone) ::: St Johnstone is part of the Scottish Premiership.\nTeam(stjohnstone) ∧ Team(minsk) ∧ Different(stjohnstone, minsk) ::: St Johnstone and Minsk are different teams.\nWin(minsk, stjohnstone) ::: Minsk won against St Johnstone.\nConclusion:\n∃x (Scottish(x) ∧ Premier(x)) ::: At least one Scottish team has joined the Scottish Premiership.\n------"
    ]
  },
  {
    "id": "FOLIO_train_891",
    "context": "St Johnstone is a Scottish team. St Johnstone is part of the Scottish Premiership. If a team is part of the league, it has joined the league. St Johnstone and Minsk are different teams. For two different teams, either one team wins or the other team wins. Minsk won against St Johnstone.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? St Johnstone won against Minsk.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTeam(x) ::: x is a team.\nScottish(x) ::: x is a Scottish team.\nPremises:\nTeam(stjohnstone) ∧ Scottish(stjohnstone) ∧ PartOf(stjohnstone, scottishpremiership) ::: St Johnstone is a Scottish team.\nTeam(stjohnstone) ∧ Scottish(stjohnstone) ∧ PartOf(stjohnstone, scottishpremiership) → Joined(stjohnstone, scottishpremiership) ::: If a team is part of the league, it has joined the league.\nTeam(stjohnstone) ∧ Scottish(stjohnstone) ∧ Team(minsk) ∧ Scottish(minsk) ∧ ¬(stjohnstone = minsk) ∧ ∀x ∀y (Team(x) ∧ Team(y) ∧ ¬(x = y) → (Win(x) ∨ Win(y))) ::: St Johnstone and Minsk are different teams. For two different teams, either one team wins or the other team wins.\nWin(minsk) �"
    ]
  },
  {
    "id": "FOLIO_train_892",
    "context": "St Johnstone is a Scottish team. St Johnstone is part of the Scottish Premiership. If a team is part of the league, it has joined the league. St Johnstone and Minsk are different teams. For two different teams, either one team wins or the other team wins. Minsk won against St Johnstone.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Minsk joined the Scottish Premiership.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nTeam(x) ::: x is a team.\nScottish(x) ::: x is a Scottish team.\nPremier(x) ::: x is part of the Scottish Premiership.\nJoin(x, y) ::: x has joined the league.\nDifferent(x, y) ::: x and y are different teams.\nWin(x, y) ::: x wins against y.\nPremises:\nTeam(stjohnstone) ∧ Scottish(stjohnstone) ∧ Premier(stjohnstone) ::: St Johnstone is a Scottish team.\nTeam(stjohnstone) ∧ Premier(stjohnstone) ∧ ¬Join(stjohnstone, stjohnstone) ::: St Johnstone is part of the Scottish Premiership.\nTeam(stjohnstone) ∧ Team(minsk) ∧ Different(stjohnstone, minsk) ::: St Johnstone and Minsk are different teams.\nWin(minsk, stjohnstone) ::: Minsk won against St Johnstone.\nConclusion:\nJoin(minsk, stjohnstone) ::: Minsk joined the Scottish Premiership.\n------\nProblem:\nA person is a student if"
    ]
  },
  {
    "id": "FOLIO_train_893",
    "context": "No Boeing-737 plane is equipped with more than 300 seats. All planes in Delta are of type Boeing-737. Planes are either equipped with more than 300 seats or have a capacity of 100 passengers. All planes with a capacity of 100 passengers are scheduled for a short-distance flight. All planes with a capacity of 100 passengers are produced before 2010. Jake32 is either a Boeing-737 plane or a plane in Delta. T10 is either a Boeing-737 plane and in Delta, or neither a Boeing-737 plane nor in Delta.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jake32 was produced before 2010 and is scheduled for a short-distance flight.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBoeing737(x) ::: x is a Boeing-737 plane.\nDelta(x) ::: x is a plane in Delta.\nEquipped(x, y) ::: x is equipped with y seats.\nCapacity(x, y) ::: x has a capacity of y passengers.\nScheduled(x, y) ::: x is scheduled for a flight of type y.\nProduced(x, y) ::: x is produced in year y.\nPremises:\n∀x (Boeing737(x) → Equipped(x, 300)) ::: No Boeing-737 plane is equipped with more than 300 seats.\n∀x (Delta(x) → Boeing737(x)) ::: All planes in Delta are of type Boeing-737.\n∀x (Equipped(x, 300) ∨ Capacity(x, 100)) ::: Planes are either equipped with more than 300 seats or have a capacity of 100 passengers.\n∀x (Capacity(x, 100) → Scheduled(x, shortDistance)) ::: All planes with a capacity of 100 passengers are scheduled for a short-distance flight."
    ]
  },
  {
    "id": "FOLIO_train_894",
    "context": "No Boeing-737 plane is equipped with more than 300 seats. All planes in Delta are of type Boeing-737. Planes are either equipped with more than 300 seats or have a capacity of 100 passengers. All planes with a capacity of 100 passengers are scheduled for a short-distance flight. All planes with a capacity of 100 passengers are produced before 2010. Jake32 is either a Boeing-737 plane or a plane in Delta. T10 is either a Boeing-737 plane and in Delta, or neither a Boeing-737 plane nor in Delta.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jake32 is not produced before 2010 and is not scheduled for a short-distance flight.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBoeing737(x) ::: x is a Boeing-737 plane.\nDelta(x) ::: x is a plane in Delta.\nEquipped(x, y) ::: x is equipped with y seats.\nCapacity(x, y) ::: x has a capacity of y passengers.\nScheduled(x, y) ::: x is scheduled for a flight of type y.\nProduced(x, y) ::: x is produced in year y.\nPremises:\n∀x (Boeing737(x) → Equipped(x, 300)) ::: No Boeing-737 plane is equipped with more than 300 seats.\n∀x (Delta(x) → Boeing737(x)) ::: All planes in Delta are of type Boeing-737.\n∀x (Equipped(x, 300) ∨ Capacity(x, 100)) ::: Planes are either equipped with more than 300 seats or have a capacity of 100 passengers.\n∀x (Capacity(x, 100) → Scheduled(x, shortDistance)) ::: All planes with a capacity of 100 passengers are scheduled for a short-distance flight."
    ]
  },
  {
    "id": "FOLIO_train_895",
    "context": "No Boeing-737 plane is equipped with more than 300 seats. All planes in Delta are of type Boeing-737. Planes are either equipped with more than 300 seats or have a capacity of 100 passengers. All planes with a capacity of 100 passengers are scheduled for a short-distance flight. All planes with a capacity of 100 passengers are produced before 2010. Jake32 is either a Boeing-737 plane or a plane in Delta. T10 is either a Boeing-737 plane and in Delta, or neither a Boeing-737 plane nor in Delta.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jake32 is produced before 2010 or scheduled for a short-distance flight.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBoeing737(x) ::: x is a Boeing-737 plane.\nDelta(x) ::: x is a plane in Delta.\nEquipped(x, y) ::: x is equipped with y seats.\nCapacity(x, y) ::: x has a capacity of y passengers.\nScheduled(x, y) ::: x is scheduled for a flight of type y.\nProduced(x, y) ::: x is produced in year y.\nPremises:\n∀x (Boeing737(x) → Equipped(x, 300)) ::: No Boeing-737 plane is equipped with more than 300 seats.\n∀x (Delta(x) → Boeing737(x)) ::: All planes in Delta are of type Boeing-737.\n∀x (Equipped(x, 300) ∨ Capacity(x, 100)) ::: Planes are either equipped with more than 300 seats or have a capacity of 100 passengers.\n∀x (Capacity(x, 100) → Scheduled(x, shortDistance)) ::: All planes with a capacity of 100 passengers are scheduled for a short-distance flight."
    ]
  },
  {
    "id": "FOLIO_train_896",
    "context": "No Boeing-737 plane is equipped with more than 300 seats. All planes in Delta are of type Boeing-737. Planes are either equipped with more than 300 seats or have a capacity of 100 passengers. All planes with a capacity of 100 passengers are scheduled for a short-distance flight. All planes with a capacity of 100 passengers are produced before 2010. Jake32 is either a Boeing-737 plane or a plane in Delta. T10 is either a Boeing-737 plane and in Delta, or neither a Boeing-737 plane nor in Delta.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jake32 is neither produced before 2010 nor scheduled for a short-distance flight.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBoeing737(x) ::: x is a Boeing-737 plane.\nDelta(x) ::: x is a plane in Delta.\nEquipped(x, y) ::: x is equipped with y seats.\nCapacity(x, y) ::: x has a capacity of y passengers.\nScheduled(x, y) ::: x is scheduled for a flight of type y.\nProduced(x, y) ::: x is produced in year y.\nPremises:\n∀x (Boeing737(x) → Equipped(x, 300)) ::: No Boeing-737 plane is equipped with more than 300 seats.\n∀x (Delta(x) → Boeing737(x)) ::: All planes in Delta are of type Boeing-737.\n∀x (Equipped(x, 300) ∨ Capacity(x, 100)) ::: Planes are either equipped with more than 300 seats or have a capacity of 100 passengers.\n∀x (Capacity(x, 100) → Scheduled(x, shortDistance)) ::: All planes with a capacity of 100 passengers are scheduled for a short-distance flight."
    ]
  },
  {
    "id": "FOLIO_train_897",
    "context": "The SAT test is wholly owned and developed by the College Board. The SAT test is intended to assess student's readiness for college. The SAT was originally designed not to be aligned with high school curricula. Several adjustments were made for the version of the SAT introduced in 2016 to reflect more closely on what students learn in high school.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Since 2016 the SAT has been better aligned with high school curricula.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSAT(x) ::: x is the SAT test.\nCollegeBoard(x) ::: x is the College Board.\nStudent(x) ::: x is a student.\nReadiness(x, y) ::: x is ready for y.\nAssess(x, y) ::: x assesses y.\nIntended(x, y) ::: x is intended for y.\nDesigned(x, y) ::: x is designed for y.\nAligned(x, y) ::: x is aligned with y.\nPremises:\nSAT(sat) ∧ CollegeBoard(collegeBoard) ∧ SAT(sat) ∧ CollegeBoard(collegeBoard) ::: The SAT test is wholly owned and developed by the College Board.\nSAT(sat) ∧ Readiness(student, college) ::: The SAT test is intended to assess student's readiness for college.\nSAT(sat) ∧ Intended(student, college) ∧ ¬Designed(sat, highSchoolCurricula) ::: The SAT was originally designed not to be aligned with high school curricula.\nSAT(sat) ∧ Aligned(sat, highSchoolCurricula) ::: Several adjustments were made"
    ]
  },
  {
    "id": "FOLIO_train_898",
    "context": "The SAT test is wholly owned and developed by the College Board. The SAT test is intended to assess student's readiness for college. The SAT was originally designed not to be aligned with high school curricula. Several adjustments were made for the version of the SAT introduced in 2016 to reflect more closely on what students learn in high school.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The SAT test is owned by the College Board and multiple other third parties.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nOwn(x, y) ::: x owns y.\nDevelop(x, y) ::: x develops y.\nAssess(x, y) ::: x assesses y.\nIntended(x, y) ::: x is intended for y.\nReflect(x, y) ::: x reflects y.\nPremises:\nOwn(collegeBoard, sat) ∧ Develop(collegeBoard, sat) ∧ Assess(sat, student) ∧ Intended(sat, college) ::: The SAT test is wholly owned and developed by the College Board. The SAT test is intended to assess student's readiness for college.\n∀x (Own(x, sat) → ¬Own(collegeBoard, x)) ::: The SAT test is owned by the College Board and multiple other third parties.\nReflect(sat, highSchoolCurricula) ∧ ¬Reflect(sat, highSchoolCurricula) ::: Several adjustments were made for the version of the SAT introduced in 2016 to reflect more closely on what students learn in high school.\nConclusion:\nIntended(sat, college) ::: The SAT test is intended to assess student's readiness for college.\n------\nProblem:\nThe"
    ]
  },
  {
    "id": "FOLIO_train_899",
    "context": "The SAT test is wholly owned and developed by the College Board. The SAT test is intended to assess student's readiness for college. The SAT was originally designed not to be aligned with high school curricula. Several adjustments were made for the version of the SAT introduced in 2016 to reflect more closely on what students learn in high school.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The SAT test assesses student's math skills.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSAT(x) ::: x is the SAT test.\nCollegeBoard(x) ::: x is the College Board.\nStudent(x) ::: x is a student.\nReadiness(x, y) ::: x is ready for y.\nAssess(x, y) ::: x assesses y.\nIntended(x, y) ::: x is intended to do y.\nDesigned(x, y) ::: x is designed to do y.\nAdjusted(x, y) ::: x is adjusted to do y.\nPremises:\nSAT(sat) ∧ CollegeBoard(collegeBoard) ∧ SAT(sat) ∧ CollegeBoard(collegeBoard) ::: The SAT test is wholly owned and developed by the College Board.\nSAT(sat) ∧ Readiness(student, college) ::: The SAT test is intended to assess student's readiness for college.\nSAT(sat) ∧ Designed(sat, notHighSchoolCurricula) ::: The SAT was originally designed not to be aligned with high school curricula.\nSAT(sat) ∧ Adjusted(sat, highSchoolCurricula) ::: Several adjustments were made for the version of the SAT introduced"
    ]
  },
  {
    "id": "FOLIO_train_900",
    "context": "Rafa Nadal was born in Mallorca. Rafa Nadal is a professional tennis player. Nadal's win ratio is higher than 80%. All players in the Big 3 are professionals who have a high win ratio.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Nadal was not born in Mallorca.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBorn(x, y) ::: x was born in y.\nProfessional(x) ::: x is a professional.\nWinRatio(x, y) ::: x has a win ratio of y.\nBig3(x) ::: x is a member of the Big 3.\nPremises:\nBorn(rafa, mallorca) ∧ Professional(rafa) ∧ WinRatio(rafa, 80) ::: Rafa Nadal was born in Mallorca. Rafa Nadal is a professional tennis player. Nadal's win ratio is higher than 80%.\n∀x (Big3(x) → Professional(x)) ∧ ∀x (Big3(x) → WinRatio(x, 80)) ::: All players in the Big 3 are professionals who have a high win ratio.\nConclusion:\n¬Born(rafa, mallorca) ::: Nadal was not born in Mallorca.\n------"
    ]
  },
  {
    "id": "FOLIO_train_901",
    "context": "Rafa Nadal was born in Mallorca. Rafa Nadal is a professional tennis player. Nadal's win ratio is higher than 80%. All players in the Big 3 are professionals who have a high win ratio.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Nadal is in the Big 3.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBorn(x, y) ::: x was born in y.\nProfessional(x) ::: x is a professional.\nWinRatio(x, y) ::: x has a win ratio of y.\nBig3(x) ::: x is in the Big 3.\nPremises:\nBorn(rafa, mallorca) ∧ Professional(rafa) ∧ WinRatio(rafa, 80) ::: Rafa Nadal was born in Mallorca. Rafa Nadal is a professional tennis player. Nadal's win ratio is higher than 80%.\n∀x (Big3(x) → Professional(x)) ∧ ∀x (Big3(x) → WinRatio(x, 80)) ::: All players in the Big 3 are professionals who have a high win ratio.\nConclusion:\nBig3(rafa) ::: Nadal is in the Big 3.\n------\nProblem:\nA person is a"
    ]
  },
  {
    "id": "FOLIO_train_902",
    "context": "Rafa Nadal was born in Mallorca. Rafa Nadal is a professional tennis player. Nadal's win ratio is higher than 80%. All players in the Big 3 are professionals who have a high win ratio.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Nadal is the greatest player of all time.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBorn(x, y) ::: x was born in y.\nProfessional(x) ::: x is a professional.\nPlayer(x) ::: x is a player.\nWinRatio(x, y) ::: x has a win ratio of y.\nBig3(x) ::: x is a member of the Big 3.\nGreatest(x) ::: x is the greatest player of all time.\nPremises:\nBorn(rafa, mallorca) ∧ Professional(rafa) ∧ Player(rafa) ∧ WinRatio(rafa, 80) ::: Rafa Nadal was born in Mallorca. Rafa Nadal is a professional tennis player. Nadal's win ratio is higher than 80%.\n∀x (Professional(x) ∧ WinRatio(x, y) ∧ y > 80) → Big3(x) ::: All players in the Big 3 are professionals who"
    ]
  },
  {
    "id": "FOLIO_train_903",
    "context": "No cookie is healthy. All oreos are cookies.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? All cookies are delicious.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCookie(x) ::: x is a cookie.\nOreo(x) ::: x is an oreo.\nHealthy(x) ::: x is healthy.\nDelicious(x) ::: x is delicious.\nPremises:\n¬∀x (Cookie(x) → Healthy(x)) ::: No cookie is healthy.\n∀x (Oreo(x) → Cookie(x)) ::: All oreos are cookies.\nConclusion:\n∀x (Cookie(x) → Delicious(x)) ::: All cookies are delicious.\n------\nProblem:\nAll people who are not students are either teachers or professors. All teachers are people. All professors are people.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? All people are either teachers or professors.\n###\nPredicates:\nStudent(x) ::: x is a student.\nTeacher(x) ::: x is a teacher.\nProfessor(x"
    ]
  },
  {
    "id": "FOLIO_train_904",
    "context": "No animals are plants. All humans are animals. All pupils are human. All flowers are plants. If Jack is a human or a flower, then Jack is a human and a flower.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jack is a pupil.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAnimal(x) ::: x is an animal.\nPlant(x) ::: x is a plant.\nHuman(x) ::: x is a human.\nPupil(x) ::: x is a pupil.\nFlower(x) ::: x is a flower.\nPremises:\n∀x (Animal(x) → ¬Plant(x)) ::: No animals are plants.\n∀x (Human(x) → Animal(x)) ::: All humans are animals.\n∀x (Pupil(x) → Human(x)) ::: All pupils are human.\n∀x (Flower(x) → Plant(x)) ::: All flowers are plants.\n∀x (Human(x) ∨ Flower(x)) → (Human(x) ∧ Flower(x)) ::: If Jack is a human or a flower, then Jack is a human and a flower.\nConclusion:\nPupil"
    ]
  },
  {
    "id": "FOLIO_train_905",
    "context": "No animals are plants. All humans are animals. All pupils are human. All flowers are plants. If Jack is a human or a flower, then Jack is a human and a flower.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jack is not a pupil.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAnimal(x) ::: x is an animal.\nPlant(x) ::: x is a plant.\nHuman(x) ::: x is a human.\nPupil(x) ::: x is a pupil.\nFlower(x) ::: x is a flower.\nPremises:\n∀x (Animal(x) → ¬Plant(x)) ::: No animals are plants.\n∀x (Human(x) → Animal(x)) ::: All humans are animals.\n∀x (Pupil(x) → Human(x)) ::: All pupils are human.\n∀x (Flower(x) → Plant(x)) ::: All flowers are plants.\n∀x (Human(x) ∨ Flower(x)) → (Human(x) ∧ Flower(x)) ::: If Jack is a human or a flower, then Jack is a human and a flower.\nConclusion:\n¬Pup"
    ]
  },
  {
    "id": "FOLIO_train_906",
    "context": "No animals are plants. All humans are animals. All pupils are human. All flowers are plants. If Jack is a human or a flower, then Jack is a human and a flower.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jack is a plant.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAnimal(x) ::: x is an animal.\nPlant(x) ::: x is a plant.\nHuman(x) ::: x is a human.\nPupil(x) ::: x is a pupil.\nJack(x) ::: x is Jack.\nPremises:\n¬∃x (Animal(x) ∧ Plant(x)) ::: No animals are plants.\n∀x (Human(x) → Animal(x)) ::: All humans are animals.\n∀x (Pupil(x) → Human(x)) ::: All pupils are human.\n∀x (Plant(x) → Plant(x)) ::: All flowers are plants.\n∃x (Human(x) ∨ Flower(x)) ::: If Jack is a human or a flower, then Jack is a human and a flower.\nConclusion:\nPlant(jack) ::: Jack is a plant.\n------\nProblem:\nAll"
    ]
  },
  {
    "id": "FOLIO_train_907",
    "context": "No animals are plants. All humans are animals. All pupils are human. All flowers are plants. If Jack is a human or a flower, then Jack is a human and a flower.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Jack is a human, then Jack is not a pupil.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAnimal(x) ::: x is an animal.\nPlant(x) ::: x is a plant.\nHuman(x) ::: x is a human.\nPupil(x) ::: x is a pupil.\nFlower(x) ::: x is a flower.\nPremises:\n∀x (Animal(x) → ¬Plant(x)) ::: No animals are plants.\n∀x (Human(x) → Animal(x)) ::: All humans are animals.\n∀x (Pupil(x) → Human(x)) ::: All pupils are human.\n∀x (Flower(x) → Plant(x)) ::: All flowers are plants.\n∀x (Human(x) ∨ Flower(x)) → (Human(x) ∧ Flower(x)) ::: If Jack is a human or a flower, then Jack is a human and a flower.\nConclusion:\n¬��"
    ]
  },
  {
    "id": "FOLIO_train_908",
    "context": "No shoes are food. All slippers are shoes. A thing is either food or clothes. No wearable things are airtight. All clothes are wearable. If a watch is not airtight and clothes, then a watch is either both airtight and clothes, or neither airtight nor clothes.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Watch is a wearable.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nShoe(x) ::: x is a shoe.\nSlipper(x) ::: x is a slipper.\nFood(x) ::: x is food.\nClothes(x) ::: x is clothes.\nWearable(x) ::: x is wearable.\nAirtight(x) ::: x is airtight.\nPremises:\n¬∃x (Shoe(x) ∧ Food(x)) ::: No shoes are food.\n∀x (Slipper(x) → Shoe(x)) ::: All slippers are shoes.\n∀x (Thing(x) → (Food(x) ∨ Clothes(x))) ::: A thing is either food or clothes.\n∀x (Clothes(x) → Wearable(x)) ::: All clothes are wearable.\n∀x (Wearable(x) → ¬Airtight(x)) ::: No wearable things are airtight."
    ]
  },
  {
    "id": "FOLIO_train_909",
    "context": "No shoes are food. All slippers are shoes. A thing is either food or clothes. No wearable things are airtight. All clothes are wearable. If a watch is not airtight and clothes, then a watch is either both airtight and clothes, or neither airtight nor clothes.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Watch is a slipper.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nShoe(x) ::: x is a shoe.\nSlipper(x) ::: x is a slipper.\nFood(x) ::: x is food.\nClothes(x) ::: x is clothes.\nWearable(x) ::: x is wearable.\nAirtight(x) ::: x is airtight.\nPremises:\n¬∃x (Shoe(x) ∧ Food(x)) ::: No shoes are food.\n∀x (Slipper(x) → Shoe(x)) ::: All slippers are shoes.\n∀x (Thing(x) → (Food(x) ∨ Clothes(x))) ::: A thing is either food or clothes.\n∀x (Wearable(x) → ¬Airtight(x)) ::: No wearable things are airtight.\n∀x (Clothes(x) → Wearable(x)) ::: All clothes are wearable."
    ]
  },
  {
    "id": "FOLIO_train_910",
    "context": "No shoes are food. All slippers are shoes. A thing is either food or clothes. No wearable things are airtight. All clothes are wearable. If a watch is not airtight and clothes, then a watch is either both airtight and clothes, or neither airtight nor clothes.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Watch is neither airtight nor a slipper.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nShoe(x) ::: x is a shoe.\nSlipper(x) ::: x is a slipper.\nFood(x) ::: x is food.\nClothes(x) ::: x is clothes.\nWearable(x) ::: x is wearable.\nAirtight(x) ::: x is airtight.\nPremises:\n¬∃x (Shoe(x) ∧ Food(x)) ::: No shoes are food.\n∀x (Slipper(x) → Shoe(x)) ::: All slippers are shoes.\n∀x (Thing(x) → (Food(x) ∨ Clothes(x))) ::: A thing is either food or clothes.\n∀x (Clothes(x) → Wearable(x)) ::: All clothes are wearable.\n∀x (Wearable(x) → ¬Airtight(x)) ::: No wearable things are airtight.\n∀x (Thing(x) → (Airtight(x) ∨ Clothes(x))) ::: All things are either airtight or clothes.\n∀x (Clothes(x) → Thing(x)) ::: All clothes are things.\n∀x (Watch(x) → (Airtight(x) ∧ Clothes(x))) ::: If a watch is not airtight and clothes, then a watch is either both airtight and clothes, or neither airtight nor clothes.\nConclusion:\n¬(Watch(watch) ∧ Slipper(watch)) ::: Watch is neither airtight nor a slipper.\n------"
    ]
  },
  {
    "id": "FOLIO_train_911",
    "context": "An Olympian is a person who trains for an Olympic sport and goes to the Olympics. Carlos Reyes trains for an Olympic sport. Carlos Reyes went to the Olympics. Carlos Reyes is a welterweight. Heavy weights are not welterweights.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Carlos Reyes is an Olympian.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nOlympian(x) ::: x is an Olympian.\nTrain(x, y) ::: x trains for y.\nGo(x, y) ::: x goes to y.\nWeight(x) ::: x is a weight.\nWelterweight(x) ::: x is a welterweight.\nHeavy(x) ::: x is a heavy weight.\nPremises:\nOlympian(carlos) ∧ Train(carlos, olympicSport) ∧ Go(carlos, olympics) ::: Carlos Reyes trains for an Olympic sport and goes to the Olympics.\nTrain(carlos, olympicSport) ∧ Go(carlos, olympics) ::: Carlos Reyes is an Olympian.\nWelterweight(carlos) ∧ ¬Heavy(carlos) ::: Carlos Reyes is a welterweight.\nHeavy(x) ⊕ Welterweight(x) ::: Heavy weights are not welterweights.\nConclusion:\nOlympian(carlos) ::: Carlos Reyes is an Olympian.\n------\nProblem:\nA person who is a member of the United States Congress is a politician. A politician is a person who is a member of the United States Congress or a person who is a member of the United States Senate. A person who is a member of the United States Senate is a politician.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? A person who is a member of the United States Congress is a politician.\nBased on the above information, is the following statement true, false, or uncertain? A person who is a member of the United"
    ]
  },
  {
    "id": "FOLIO_train_912",
    "context": "An Olympian is a person who trains for an Olympic sport and goes to the Olympics. Carlos Reyes trains for an Olympic sport. Carlos Reyes went to the Olympics. Carlos Reyes is a welterweight. Heavy weights are not welterweights.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Carlos Reyes is a heavy weight.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nOlympian(x) ::: x is an Olympian.\nTrains(x, y) ::: x trains for sport y.\nGo(x, y) ::: x goes to the Olympics in year y.\nWeight(x) ::: x is a weight.\nWelterweight(x) ::: x is a welterweight.\nHeavy(x) ::: x is a heavy weight.\nPremises:\nOlympian(carlos) ∧ Trains(carlos, sport) ∧ Go(carlos, year) ::: Carlos Reyes trains for an Olympic sport and goes to the Olympics.\nWelterweight(carlos) ::: Carlos Reyes is a welterweight.\nHeavy(x) → ¬Welterweight(x) ::: Heavy weights are not welterweights.\nConclusion:\nHeavy(carlos) ::: Carlos Reyes is a heavy weight.\n------\nProblem:\nA person who is a student is a person who is enrolled in a school. A person who is a student is a person who is enrolled in a college. A person who is a student is a person who is enrolled in a university. A person who is a student is a person who is enrolled in a high school. A person who is a student is a person who is enrolled in a middle school. A person who is a student is a person who is enrolled in a primary school. A person who is a student is a person who is enrolled in a kindergarten. A person who is a student is a person who is enrolled in a nursery school. A person who is a student is a person who is enrolled in a preschool. A person who is a"
    ]
  },
  {
    "id": "FOLIO_train_913",
    "context": "An Olympian is a person who trains for an Olympic sport and goes to the Olympics. Carlos Reyes trains for an Olympic sport. Carlos Reyes went to the Olympics. Carlos Reyes is a welterweight. Heavy weights are not welterweights.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Carlos Reyes won an Olympic medal.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nOlympian(x) ::: x is an Olympian.\nTrains(x, y) ::: x trains for Olympic sport y.\nGo(x, y) ::: x goes to the Olympics in year y.\nWelterweight(x) ::: x is a welterweight.\nHeavyWeight(x) ::: x is a heavy weight.\nWin(x, y) ::: x wins an Olympic medal in year y.\nPremises:\nOlympian(carlos) ∧ Trains(carlos, welterweight) ∧ Go(carlos, year2012) ::: Carlos Reyes trains for an Olympic sport and goes to the Olympics.\n∀x (Trains(x, welterweight) → Welterweight(x)) ::: A person who trains for an Olympic sport is a welterweight.\n∀x (Welterweight(x) → ¬HeavyWeight(x)) ::: A welterweight is not a heavy weight.\nConclusion:\nWin(carlos, year2012) ::: Carlos Reyes won an Olympic medal.\n------\nProblem:\nA person who is a member of the National Rifle Association is a gun owner. A person who is a member of the National Rifle Association is a gun enthusiast. A person who is a member of the National Rifle Association is a gun collector. A person who is a member of the National Rifle Association is a gun dealer. A person who is a member of the National Rifle Association is a gun manufacturer. A person who is a member of the National Rifle Association is a gun lobbyist. A person who is a member of the National Rifle Association"
    ]
  },
  {
    "id": "FOLIO_train_914",
    "context": "If people have a lot of decorations in their room, they cannot pack and move out of their rooms very easily. If people have high ambitions and future career goals, then they can pack and move out of their rooms very easily. If people are big fans of pop bands and singers, then they have a lot of decorations in their room. All young teenage girls who attend college are big fans of pop bands and singers. If Sam has high ambitions and future career goals, then Sam is a big fan of pop bands and singers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Sam is a young teenage girl who attends college.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDecoration(x) ::: x is a decoration.\nRoom(x) ::: x is a room.\nHave(x, y) ::: x has y.\nPack(x) ::: x can pack.\nMove(x) ::: x can move.\nAmbition(x) ::: x has high ambitions.\nCareer(x) ::: x has future career goals.\nPop(x) ::: x is a pop band or singer.\nFan(x, y) ::: x is a big fan of y.\nCollege(x) ::: x is a college.\nTeenage(x) ::: x is a young teenage girl.\nPremises:\n∀x (Have(x, decoration) → ¬(Pack(x) ∧ Move(x))) ::: If people have a lot of decorations in their room, they cannot pack and move out of their rooms very easily.\n∀x (Ambition(x) ∧ Career(x) → Pack(x) ∧ Move(x)) ::: If people have high ambitions and future career goals, then they can pack and move out of their rooms very easily.\n∀x (Fan(x, pop) → Have(x, decoration)) ::: If people are big fans of pop bands and singers, then they have a lot of decorations in their room.\n∀x (Teenage(x) ∧ College(x) → Fan(x, pop)) ::: All young teenage girls who attend college are big fans of pop bands and singers.\n∀x (Ambition(x) ∧ Career(x) → Fan"
    ]
  },
  {
    "id": "FOLIO_train_915",
    "context": "If people have a lot of decorations in their room, they cannot pack and move out of their rooms very easily. If people have high ambitions and future career goals, then they can pack and move out of their rooms very easily. If people are big fans of pop bands and singers, then they have a lot of decorations in their room. All young teenage girls who attend college are big fans of pop bands and singers. If Sam has high ambitions and future career goals, then Sam is a big fan of pop bands and singers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Sam is not a young teenage girl who attends college.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDecoration(x) ::: x is a decoration.\nRoom(x) ::: x is a room.\nHave(x, y) ::: x has y.\nPack(x) ::: x can pack.\nMove(x) ::: x can move.\nAmbition(x) ::: x has high ambitions.\nCareer(x) ::: x has future career goals.\nPop(x) ::: x is a pop band or singer.\nFan(x, y) ::: x is a big fan of y.\nCollege(x) ::: x is a college.\nTeenage(x) ::: x is a young teenage girl.\nPremises:\n∀x (Have(x, decoration) → ¬(Pack(x) ∧ Move(x))) ::: If people have a lot of decorations in their room, they cannot pack and move out of their rooms very easily.\n∀x (Ambition(x) ∧ Career(x) → Pack(x)) ::: If people have high ambitions and future career goals, then they can pack and move out of their rooms very easily.\n∀x (Fan(x, pop) → Have(x, decoration)) ::: If people are big fans of pop bands and singers, then they have a lot of decorations in their room.\n∀x (Teenage(x) ∧ College(x) → Fan(x, pop)) ::: All young teenage girls who attend college are big fans of pop bands and singers.\n∀x (Ambition(x) ∧ Career(x) → Fan(x, pop)) ::: If"
    ]
  },
  {
    "id": "FOLIO_train_916",
    "context": "If people have a lot of decorations in their room, they cannot pack and move out of their rooms very easily. If people have high ambitions and future career goals, then they can pack and move out of their rooms very easily. If people are big fans of pop bands and singers, then they have a lot of decorations in their room. All young teenage girls who attend college are big fans of pop bands and singers. If Sam has high ambitions and future career goals, then Sam is a big fan of pop bands and singers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Sam is a big fan of pop bands and singers.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDecoration(x) ::: x is a decoration.\nHave(x, y) ::: x has y.\nPack(x) ::: x can pack.\nMove(x) ::: x can move.\nAmbition(x) ::: x has high ambitions.\nCareer(x) ::: x has future career goals.\nPopBand(x) ::: x is a pop band.\nPopSinger(x) ::: x is a pop singer.\nFan(x, y) ::: x is a big fan of y.\nCollege(x) ::: x is a college.\nYoungTeenageGirl(x) ::: x is a young teenage girl.\nPremises:\n∀x (Have(x, decoration) → ¬(Pack(x) ∧ Move(x))) ::: If people have a lot of decorations in their room, they cannot pack and move out of their rooms very easily.\n∀x (Ambition(x) ∧ Career(x) → Pack(x)) ::: If people have high ambitions and future career goals, then they can pack and move out of their rooms very easily.\n∀x (Fan(x, popBand) ∧ Fan(x, popSinger) → Have(x, decoration)) ::: If people are big fans of pop bands and singers, then they have a lot of decorations in their room.\n∀x (YoungTeenageGirl(x) ∧ College(x) → Fan(x, popBand) ∧ Fan(x, popSinger)) ::: All young teenage girls who attend college are big fans"
    ]
  },
  {
    "id": "FOLIO_train_917",
    "context": "If people have a lot of decorations in their room, they cannot pack and move out of their rooms very easily. If people have high ambitions and future career goals, then they can pack and move out of their rooms very easily. If people are big fans of pop bands and singers, then they have a lot of decorations in their room. All young teenage girls who attend college are big fans of pop bands and singers. If Sam has high ambitions and future career goals, then Sam is a big fan of pop bands and singers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Sam neither has high ambitions and future career goals nor is she a young teenage girl who attends college.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDecoration(x) ::: x is a decoration.\nRoom(x) ::: x is a room.\nHave(x, y) ::: x has y.\nPack(x) ::: x can pack.\nMove(x) ::: x can move.\nAmbition(x) ::: x has high ambitions.\nCareer(x) ::: x has future career goals.\nPop(x) ::: x is a pop band or singer.\nFan(x, y) ::: x is a fan of y.\nCollege(x) ::: x is a college.\nTeenage(x) ::: x is a teenage girl.\nYoung(x) ::: x is a young person.\nPremises:\n∀x (Have(x, decoration) → ¬(Pack(x) ∧ Move(x))) ::: If people have a lot of decorations in their room, they cannot pack and move out of their rooms very easily.\n∀x (Ambition(x) ∧ Career(x) → Pack(x)) ::: If people have high ambitions and future career goals, then they can pack and move out of their rooms very easily.\n∀x (Fan(x, pop) → Have(x, decoration)) ::: If people are big fans of pop bands and singers, then they have a lot of decorations in their room.\n∀x (Teenage(x) ∧ College(x) → Fan(x, pop)) ::: All young teenage girls who attend college are big fans of pop bands and singers.\n∀x (Ambition(x) ∧ Career(x"
    ]
  },
  {
    "id": "FOLIO_train_918",
    "context": "If people have a lot of decorations in their room, they cannot pack and move out of their rooms very easily. If people have high ambitions and future career goals, then they can pack and move out of their rooms very easily. If people are big fans of pop bands and singers, then they have a lot of decorations in their room. All young teenage girls who attend college are big fans of pop bands and singers. If Sam has high ambitions and future career goals, then Sam is a big fan of pop bands and singers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Sam has high ambitions and future career goals and is a young teenage girl who attends college.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDecoration(x) ::: x is a decoration.\nRoom(x) ::: x is a room.\nHave(x, y) ::: x has y.\nPack(x) ::: x can pack.\nMove(x) ::: x can move.\nAmbition(x) ::: x has high ambitions.\nCareer(x) ::: x has future career goals.\nPop(x) ::: x is a pop band or singer.\nFan(x, y) ::: x is a big fan of y.\nCollege(x) ::: x is a college.\nTeenage(x) ::: x is a young teenage girl.\nPremises:\n∀x (Have(x, decoration) → ¬(Pack(x) ∧ Move(x))) ::: If people have a lot of decorations in their room, they cannot pack and move out of their rooms very easily.\n∀x (Ambition(x) ∧ Career(x) → Pack(x)) ::: If people have high ambitions and future career goals, then they can pack and move out of their rooms very easily.\n∀x (Fan(x, pop) → Have(x, decoration)) ::: If people are big fans of pop bands and singers, then they have a lot of decorations in their room.\n∀x (Teenage(x) ∧ College(x) → Fan(x, pop)) ::: All young teenage girls who attend college are big fans of pop bands and singers.\n∀x (Ambition(x) ∧ Career(x) → Fan(x, pop)) ::: If"
    ]
  },
  {
    "id": "FOLIO_train_919",
    "context": "If people have a lot of decorations in their room, they cannot pack and move out of their rooms very easily. If people have high ambitions and future career goals, then they can pack and move out of their rooms very easily. If people are big fans of pop bands and singers, then they have a lot of decorations in their room. All young teenage girls who attend college are big fans of pop bands and singers. If Sam has high ambitions and future career goals, then Sam is a big fan of pop bands and singers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Sam has high ambitions and future career goals and is a young teenage girl who attends college.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDecoration(x) ::: x is a decoration.\nRoom(x) ::: x is a room.\nHave(x, y) ::: x has y.\nPack(x) ::: x can pack.\nMove(x) ::: x can move.\nAmbition(x) ::: x has high ambitions.\nCareer(x) ::: x has future career goals.\nPop(x) ::: x is a pop band or singer.\nFan(x, y) ::: x is a big fan of y.\nCollege(x) ::: x is a college.\nTeenage(x) ::: x is a young teenage girl.\nPremises:\n∀x (Have(x, decoration) → ¬(Pack(x) ∧ Move(x))) ::: If people have a lot of decorations in their room, they cannot pack and move out of their rooms very easily.\n∀x (Ambition(x) ∧ Career(x) → Pack(x)) ::: If people have high ambitions and future career goals, then they can pack and move out of their rooms very easily.\n∀x (Fan(x, pop) → Have(x, decoration)) ::: If people are big fans of pop bands and singers, then they have a lot of decorations in their room.\n∀x (Teenage(x) ∧ College(x) → Fan(x, pop)) ::: All young teenage girls who attend college are big fans of pop bands and singers.\n∀x (Ambition(x) ∧ Career(x) → Fan(x, pop)) ::: If"
    ]
  },
  {
    "id": "FOLIO_train_920",
    "context": "If people have a lot of decorations in their room, they cannot pack and move out of their rooms very easily. If people have high ambitions and future career goals, then they can pack and move out of their rooms very easily. If people are big fans of pop bands and singers, then they have a lot of decorations in their room. All young teenage girls who attend college are big fans of pop bands and singers. If Sam has high ambitions and future career goals, then Sam is a big fan of pop bands and singers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Sam is a young teenage girl who attends college, then Sam either does not have high ambitions and future career goals or is a big fan of pop bands and singers.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDecoration(x) ::: x is a decoration.\nRoom(x) ::: x is a room.\nPack(x) ::: x can pack and move out of their room very easily.\nAmbition(x) ::: x has high ambitions and future career goals.\nPopBand(x) ::: x is a pop band.\nSing(x) ::: x is a singer.\nFan(x, y) ::: x is a big fan of y.\nCollege(x) ::: x is a college.\nYoungTeenageGirl(x) ::: x is a young teenage girl.\nPremises:\n∀x (Decoration(x) → Room(x)) ::: If people have a lot of decorations in their room, they cannot pack and move out of their rooms very easily.\n∀x (Ambition(x) → Pack(x)) ::: If people have high ambitions and future career goals, then they can pack and move out of their rooms very easily.\n∀x (PopBand(x) ∧ Sing(x) → Fan(x, y)) ::: If people are big fans of pop bands and singers, then they have a lot of decorations in their room.\n∀x (YoungTeenageGirl(x) ∧ College(x) → PopBand(x)) ::: All young teenage girls who attend college are big fans of pop bands and singers.\n∀x (Ambition(x) → PopBand(x)) ::: If Sam has high ambitions and future career goals, then Sam is a big fan of pop bands and singers.\nConclusion:\n∀x (YoungTeenageGirl(x) ∧ College(x) → ¬(Ambition(x) ∧ Pack(x)) ∨ PopBand(x)) ::: If Sam is a young teenage girl who attends college, then Sam either does not have high ambitions and future career goals or is a big fan of pop bands and singers.\n------"
    ]
  },
  {
    "id": "FOLIO_train_921",
    "context": "If people have a lot of decorations in their room, they cannot pack and move out of their rooms very easily. If people have high ambitions and future career goals, then they can pack and move out of their rooms very easily. If people are big fans of pop bands and singers, then they have a lot of decorations in their room. All young teenage girls who attend college are big fans of pop bands and singers. If Sam has high ambitions and future career goals, then Sam is a big fan of pop bands and singers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Sam has high ambitions and future career goals and is a young teenage girl who attends college, then Sam either does not have high ambitions and future career goals or is not a young teenage girl who attends college.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDecorations(x) ::: x has a lot of decorations in their room.\nPack(x) ::: x can pack and move out of their room very easily.\nAmbitions(x) ::: x has high ambitions and future career goals.\nFan(x) ::: x is a big fan of pop bands and singers.\nYoungTeenageGirl(x) ::: x is a young teenage girl.\nCollege(x) ::: x attends college.\nPremises:\nDecorations(x) → ¬Pack(x) ::: If people have a lot of decorations in their room, they cannot pack and move out of their rooms very easily.\nAmbitions(x) → Pack(x) ::: If people have high ambitions and future career goals, then they can pack and move out of their rooms very easily.\nFan(x) → Decorations(x) ::: If people are big fans of pop bands and singers, then they have a lot of decorations in their room.\nYoungTeenageGirl(sam) ∧ College(sam) → Fan(sam) ::: All young teenage girls who attend college are big fans of pop bands and singers.\nAmbitions(sam) → Fan(sam) ::: If Sam has high ambitions and future career goals, then Sam is a big fan of pop bands and singers.\nConclusion:\n(Ambitions(sam) ∧ College(sam)) → (¬Ambitions(sam) ∨ ¬College(sam)) ::: If Sam has high ambitions and future career goals and is a young teenage girl who attends college, then Sam either does not have high ambitions and future career goals or is not a young teenage girl who attends college.\n------\nProblem:\nIf a person is a student, then they are either a student or a teacher. If a person is a teacher, then they are either a teacher or a student. If a person is a student, then they are either a student or a teacher. If a person is a teacher, then they are"
    ]
  },
  {
    "id": "FOLIO_train_922",
    "context": "If people have a lot of decorations in their room, they cannot pack and move out of their rooms very easily. If people have high ambitions and future career goals, then they can pack and move out of their rooms very easily. If people are big fans of pop bands and singers, then they have a lot of decorations in their room. All young teenage girls who attend college are big fans of pop bands and singers. If Sam has high ambitions and future career goals, then Sam is a big fan of pop bands and singers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Sam has high ambitions and future career goals, then Sam is a young teenage girl who attends college.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDecoration(x) ::: x is a decoration.\nRoom(x) ::: x is a room.\nHave(x, y) ::: x has y.\nPack(x) ::: x can pack.\nMove(x) ::: x can move.\nAmbition(x) ::: x has high ambitions.\nCareer(x) ::: x has future career goals.\nPop(x) ::: x is a pop band or singer.\nFan(x, y) ::: x is a big fan of y.\nCollege(x) ::: x is a college.\nTeenage(x) ::: x is a young teenage girl.\nPremises:\n∀x (Have(x, decoration) → ¬(Pack(x) ∧ Move(x))) ::: If people have a lot of decorations in their room, they cannot pack and move out of their rooms very easily.\n∀x (Ambition(x) ∧ Career(x) → Pack(x)) ::: If people have high ambitions and future career goals, then they can pack and move out of their rooms very easily.\n∀x (Fan(x, pop) → Have(x, decoration)) ::: If people are big fans of pop bands and singers, then they have a lot of decorations in their room.\n∀x (Teenage(x) ∧ College(x) → Fan(x, pop)) ::: All young teenage girls who attend college are big fans of pop bands and singers.\n∀x (Ambition(x) ∧ Career(x) → Fan(x, pop)) ::: If Sam has high ambitions and future career goals, then Sam is a big fan of pop bands and singers.\nConclusion:\nTeenage(sam) ∧ College(sam) → Ambition(sam) ∧ Career(sam) ::: If Sam has high ambitions and future career goals, then Sam is a young teenage girl who attends college.\n------"
    ]
  },
  {
    "id": "FOLIO_train_923",
    "context": "A student who loves shrieking will be punished. If a person swears, then he is a student. If someone is a teacher, then Bob will talk to him. All gentlemen are in a suit. All teachers are men. There is a teacher. If someone is not a gentlemen, then he is not nice. Willy is nice. Bob loves shrieking and swearing.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Willy is in a suit.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nStudent(x) ::: x is a student.\nLove(x, y) ::: x loves y.\nPunish(x) ::: x will be punished.\nSwear(x) ::: x swears.\nTeacher(x) ::: x is a teacher.\nMan(x) ::: x is a man.\nGentleman(x) ::: x is a gentleman.\nIn(x, y) ::: x is in y.\nSuit(x) ::: x is a suit.\nTalk(x, y) ::: x will talk to y.\nPremises:\nStudent(willy) ∧ Love(willy, shrieking) ∧ Love(willy, swearing) ::: A student who loves shrieking will be punished.\nSwear(x) → Student(x) ::: If a person swears, then he is a student.\nTeacher(bob) ∧ ∀x (Teacher(x) → Talk(bob, x)) ::: If someone is a teacher, then Bob will talk to him.\nGentleman(x) → In(x, suit) ::: All gentlemen are in a suit.\nTeacher(x) → Man(x) ::: All teachers are men.\n∃x Teacher(x) ::: There is a teacher.\n¬Gentleman(x) → ¬Nice(x) ::: If someone is not a gentlemen, then he is not nice.\nNice(willy) ::: Willy is nice.\nConclusion:\nIn(willy, suit) ::: Willy is in a suit.\n------\nProblem:\nA person who is a student and a teacher is a professor. A person who is a student and a teacher is a professor. A person who is a student and a teacher is a professor. A person who is a student and a teacher is a professor. A person who is a student and a teacher is a professor. A person who is a student and a teacher is a professor. A person who is"
    ]
  },
  {
    "id": "FOLIO_train_924",
    "context": "A student who loves shrieking will be punished. If a person swears, then he is a student. If someone is a teacher, then Bob will talk to him. All gentlemen are in a suit. All teachers are men. There is a teacher. If someone is not a gentlemen, then he is not nice. Willy is nice. Bob loves shrieking and swearing.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Bob will be not punished.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nStudent(x) ::: x is a student.\nLove(x, y) ::: x loves y.\nPunish(x) ::: x will be punished.\nSwear(x) ::: x swears.\nTeacher(x) ::: x is a teacher.\nMan(x) ::: x is a man.\nGentleman(x) ::: x is a gentleman.\nInSuit(x) ::: x is in a suit.\nTalk(x, y) ::: x will talk to y.\nPremises:\nStudent(bob) ∧ Love(bob, shrieking) ∧ Love(bob, swearing) ::: Bob loves shrieking and swearing.\n∀x (Student(x) → Swear(x)) ::: If a person swears, then he is a student.\n∀x (Teacher(x) → Talk(bob, x)) ::: If someone is a teacher, then Bob will talk to him.\n∀x (Gentleman(x) → InSuit(x)) ::: All gentlemen are in a suit.\n∀x (Teacher(x) → Man(x)) ::: All teachers are men.\n∃x Teacher(x) ::: There is a teacher.\n∀x (¬Gentleman(x) → ¬Nice(x)) ::: If someone is not a gentlemen, then he is not nice.\nWilly(x) ::: x is Willy.\nNice(willy) ::: Willy is nice.\nConclusion:\nPunish(bob) ::: Bob will be punished.\n------\nProblem:\nA person who is not a student is a teacher. A teacher is a man. A man is a person. A person who is not a teacher is a student. A student is a person. A person who is not a student is a teacher. A teacher is a man. A man is a person. A person who is not a teacher is a student. A student is"
    ]
  },
  {
    "id": "FOLIO_train_925",
    "context": "A student who loves shrieking will be punished. If a person swears, then he is a student. If someone is a teacher, then Bob will talk to him. All gentlemen are in a suit. All teachers are men. There is a teacher. If someone is not a gentlemen, then he is not nice. Willy is nice. Bob loves shrieking and swearing.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There is a man that Bob will talk to.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nStudent(x) ::: x is a student.\nLove(x, y) ::: x loves y.\nPunish(x) ::: x will be punished.\nSwear(x) ::: x swears.\nTeacher(x) ::: x is a teacher.\nBob(x) ::: x is Bob.\nTalk(x, y) ::: x will talk to y.\nGentleman(x) ::: x is a gentleman.\nInASuit(x) ::: x is in a suit.\nMan(x) ::: x is a man.\nPremises:\nStudent(willy) ∧ Love(willy, shrieking) ∧ Love(willy, swearing) ::: A student who loves shrieking will be punished.\nSwear(x) → Student(x) ::: If a person swears, then he is a student.\nTeacher(x) → Bob(x) ::: If someone is a teacher, then Bob will talk to him.\n∀x (Gentleman(x) → InASuit(x)) ::: All gentlemen are in a suit.\n∀x (Teacher(x) → Man(x)) ::: All teachers are men.\n∃x Teacher(x) ::: There is a teacher.\n¬∀x (Gentleman(x) → Nice(x)) ::: If someone is not a gentlemen, then he is not nice.\nNice(willy) ::: Willy is nice.\nBob(x) ∧ Love(x, shrieking) ∧ Love(x, swearing) ::: Bob loves shrieking and swearing.\nConclusion:\n∃x (Teacher(x) ∧ Bob(x)) ::: There is a man that Bob will talk to.\n------\nProblem:\nA person who is a student and a teacher is a professor. A person who is a student and a teacher is a professor. A person who is a student and a teacher"
    ]
  },
  {
    "id": "FOLIO_train_926",
    "context": "Quincy McDuffie is an American professional wide receiver in Canadian Football. People who can catch balls are good wide receivers. Quincy McDuffie can catch many footballs easily. Good wide receivers play professionally. Good wide receivers can catch with both their left and right hand. All footballs are balls.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Quincy McDuffie is a good wide receiver.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAmerican(x) ::: x is an American.\nProfessional(x) ::: x plays professionally.\nGood(x) ::: x is good.\nWideReceiver(x) ::: x is a wide receiver.\nCanCatch(x, y) ::: x can catch y.\nLeftHand(x) ::: x is left-handed.\nRightHand(x) ::: x is right-handed.\nBall(x) ::: x is a ball.\nFootball(x) ::: x is a football.\nPremises:\nAmerican(quincy) ∧ Professional(quincy) ∧ WideReceiver(quincy) ::: Quincy McDuffie is an American professional wide receiver.\n∀x (WideReceiver(x) → CanCatch(x, ball)) ::: People who can catch balls are good wide receivers.\n∀x (CanCatch(x, football) ∧ CanCatch(x, football)) ::: Quincy McDuffie can catch many footballs easily.\n∀x (Good(x) ∧ WideReceiver(x)) → Professional(x) ::: Good wide receivers play professionally.\n∀x (Good(x) ∧ WideReceiver(x)) → (LeftHand(x) ∨ RightHand(x)) ::: Good wide receivers can catch with both their left and right hand.\n∀x (Ball(x) → Football(x)) ::: All footballs are balls.\nConclusion:\nGood(quincy) ::: Quincy McDuffie is a good wide receiver.\n------\nProblem:\nA person is a student if and only if the person is a student. A person is a student if and only if the person is a student. A person is a student if and only if the person is a student. A person is a student if and only if the person is a student. A person is a student if and only if the person is a student. A person is a student if and only"
    ]
  },
  {
    "id": "FOLIO_train_927",
    "context": "Quincy McDuffie is an American professional wide receiver in Canadian Football. People who can catch balls are good wide receivers. Quincy McDuffie can catch many footballs easily. Good wide receivers play professionally. Good wide receivers can catch with both their left and right hand. All footballs are balls.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Quincy McDuffie can catch every ball.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCanCatch(x, y) ::: x can catch y.\nGood(x) ::: x is good.\nProfessional(x) ::: x plays professionally.\nLeftHand(x) ::: x is left-handed.\nRightHand(x) ::: x is right-handed.\nBall(x) ::: x is a ball.\nFootball(x) ::: x is a football.\nPremises:\nCanCatch(quincy, many) ∧ CanCatch(quincy, easily) ::: Quincy McDuffie can catch many footballs easily.\n∀x (CanCatch(x, y) → Good(x)) ::: People who can catch balls are good wide receivers.\n∀x (Good(x) ∧ Professional(x)) ::: Good wide receivers play professionally.\n∀x (Good(x) ∧ LeftHand(x) ∧ RightHand(x)) ::: Good wide receivers can catch with both their left and right hand.\n∀x (Ball(x) → Football(x)) ::: All footballs are balls.\nConclusion:\nCanCatch(quincy, every) ::: Quincy McDuffie can catch every ball.\n------\nProblem:\nA person who is a student is a young person. A young person who is a student is a student. A person who is a student is a young person. A person who is a student is a young person. A person who is a student is a young person. A person who is a student is a young person. A person who is a student is a young person. A person who is a student is a young person. A person who is a student is a young person. A person who is a student is a young person. A person who is a student is a young person. A person who is a student is a young person. A person who is a student is a young person. A person who is a student is a young person. A person who is a student is a young person. A person who is a"
    ]
  },
  {
    "id": "FOLIO_train_928",
    "context": "Quincy McDuffie is an American professional wide receiver in Canadian Football. People who can catch balls are good wide receivers. Quincy McDuffie can catch many footballs easily. Good wide receivers play professionally. Good wide receivers can catch with both their left and right hand. All footballs are balls.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Professional wide receivers are good at catching balls.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCanCatch(x, y) ::: x can catch y.\nGood(x) ::: x is good.\nProfessional(x) ::: x plays professionally.\nLeftHand(x) ::: x is left-handed.\nRightHand(x) ::: x is right-handed.\nBall(x) ::: x is a ball.\nFootball(x) ::: x is a football.\nPremises:\n∀x (CanCatch(x, football) → Good(x)) ::: People who can catch balls are good wide receivers.\nCanCatch(quincy, many) ∧ CanCatch(quincy, easily) ::: Quincy McDuffie can catch many footballs easily.\n∀x (Good(x) ∧ Professional(x)) → (Good(x) ∧ CanCatch(x, leftHand) ∧ CanCatch(x, rightHand)) ::: Good wide receivers play professionally.\n∀x (Good(x) ∧ CanCatch(x, leftHand) ∧ CanCatch(x, rightHand)) → Good(x) ::: Good wide receivers can catch with both their left and right hand.\n∀x (Ball(x) → Football(x)) ::: All footballs are balls.\nConclusion:\nProfessional(x) ∧ Good(x) ∧ CanCatch(x, football) ::: Professional wide receivers are good at catching balls.\n------\nProblem:\nA person who is a good student is a student. A person who is a good student is a good person. A person who is a good person is a good student. A person who is a good student is a good person. A person who is a good person is a good student. A person who is a good student is a good person. A person who is a good person is a good student. A person who is a good student is a good person. A person who is a good person is a good student. A person who"
    ]
  },
  {
    "id": "FOLIO_train_929",
    "context": "Boves is a railway station located in France. The preceding station of Boves is Longueau. The preceding station of Dommartin is Boves. France is a European country. Dommartin is situated on the Paris–Lille railway. Any two contiguous stations are on the same railway. Boves is served by regional TER Hauts-de-France trains. If A is located in B and B is located in C, then A is located in C. If A precedes B and B preceds C, than A preceds C.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Longueau is situated on the Paris–Lille railway.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLocated(x, y) ::: x is located in y.\nPreceding(x, y) ::: x precedes y.\nServed(x, y) ::: x is served by y.\nRailway(x) ::: x is a railway.\nCountry(x) ::: x is a country.\nEuropean(x) ::: x is a European country.\nPremises:\nLocated(boves, france) ∧ Located(france, europe) ::: Boves is located in France. France is a European country.\nLocated(dommartin, france) ∧ Located(boves, dommartin) ::: Dommartin is located in France. Boves is located in Dommartin.\nLocated(longueau, france) ∧ Located(boves, longueau) ::: Longueau is located in France. Boves is located in Longueau.\nLocated(dommartin, railway) ∧ Located(boves, railway) ::: Dommartin is situated on the Paris–Lille railway. Boves is situated on the Paris–Lille railway.\nLocated(boves, railway) ∧ Located(longueau, railway) ::: Boves is situated on the Paris–Lille railway. Longueau is situated on the Paris–Lille railway.\nLocated(boves, france) ∧ Located(dommartin, france) ::: Boves is located in France. Dommartin is located in France.\nLocated(boves, france) ∧ Located(longueau, france) ::: Boves is located in France. Longueau is located in France.\nLocated(dommartin, france) ∧ Located(longueau, france) ::: Dommartin is located in France. Longueau is located in France.\nLocated(boves, railway) ∧ Located(dommartin, railway) ::: Boves is situated on the Paris–Lille railway"
    ]
  },
  {
    "id": "FOLIO_train_930",
    "context": "Boves is a railway station located in France. The preceding station of Boves is Longueau. The preceding station of Dommartin is Boves. France is a European country. Dommartin is situated on the Paris–Lille railway. Any two contiguous stations are on the same railway. Boves is served by regional TER Hauts-de-France trains. If A is located in B and B is located in C, then A is located in C. If A precedes B and B preceds C, than A preceds C.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Boves is not in Europe.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLocatedIn(x, y) ::: x is located in y.\nPreceding(x, y) ::: x precedes y.\nServedBy(x, y) ::: x is served by y.\nContiguous(x, y) ::: x and y are contiguous.\nRailway(x) ::: x is a railway.\nEuropean(x) ::: x is a European country.\nPremises:\nLocatedIn(boves, france) ∧ LocatedIn(france, europe) ::: Boves is a railway station located in France. France is a European country.\nLocatedIn(dommartin, france) ∧ LocatedIn(boves, dommartin) ::: Dommartin is a railway station situated on the Paris–Lille railway. Dommartin is located in France. Boves is located in Dommartin.\nLocatedIn(longueau, france) ∧ LocatedIn(boves, longueau) ::: The preceding station of Boves is Longueau. Boves is located in Longueau.\nServedBy(terHautsDeFrance, boves) ::: Boves is served by regional TER Hauts-de-France trains.\n∀x ∀y (LocatedIn(x, y) ∧ LocatedIn(y, z)) → LocatedIn(x, z) ::: If A is located in B and B is located in C, then A is located in C.\n∀x ∀y (Preceding(x, y) ∧ Preceding(y, z)) → Preceding(x, z) ::: If A precedes B and B precedes C, then A precedes C.\n∀x ∀y (Contiguous(x, y) ∧ Contiguous(y, z)) → Contiguous(x, z) ::: If A and B are contiguous and B and C are contiguous, then A and C are contiguous.\nContiguous(x, y) → ¬(Railway(x) ∧ Railway(y)) ::: Any two contiguous stations are on the same railway.\nConclusion:\n¬European(boves) ::: Boves is not in Europe.\n------"
    ]
  },
  {
    "id": "FOLIO_train_931",
    "context": "Boves is a railway station located in France. The preceding station of Boves is Longueau. The preceding station of Dommartin is Boves. France is a European country. Dommartin is situated on the Paris–Lille railway. Any two contiguous stations are on the same railway. Boves is served by regional TER Hauts-de-France trains. If A is located in B and B is located in C, then A is located in C. If A precedes B and B preceds C, than A preceds C.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Longueau is served by regional TER Hauts-de-France trains.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nLocatedIn(x, y) ::: x is located in y.\nPreceding(x, y) ::: x precedes y.\nServedBy(x, y) ::: x is served by y.\nOn(x, y) ::: x is on y.\nPremises:\nLocatedIn(boves, france) ∧ LocatedIn(france, europe) ::: Boves is a railway station located in France. France is a European country.\nLocatedIn(dommartin, france) ∧ LocatedIn(boves, dommartin) ::: Dommartin is situated on the Paris–Lille railway.\n∀x ∀y (LocatedIn(x, y) ∧ LocatedIn(y, z)) → LocatedIn(x, z) ::: If A is located in B and B is located in C, then A is located in C.\n∀x ∀y (Preceding(x, y) ∧ Preceding(y, z)) → Preceding(x, z) ::: If A precedes B and B precedes C, than A precedes C.\n∀x ∀y (ServedBy(x, y) ∧ On(y, z)) → ServedBy(x, z) ::: If A is served by B and B is on C, then A is served by C.\n∀x ∀y (On(x, y) ∧ On(y, z)) → On(x, z) ::: If A is on B and B is on C, then A is on C.\n∀x ∀y (Preceding(x, y) ∧ On(y, z)) → Preceding(x, z) ::: If A precedes B and B is on C, then A precedes C.\n∀x ∀y (LocatedIn(x, y) ∧ On(y, z)) → LocatedIn(x, z) ::: If A is located in B and B is on C, then A is located in C.\nConclusion:\nServedBy(longueau, terHautsDeFrance) ::: Longueau is served by regional TER Hauts-de-France trains."
    ]
  },
  {
    "id": "FOLIO_train_932",
    "context": "Edwin Smith was a New Zealand Rower from Auckland. Edwin Smith was also known as Ted Smith. Edwin Smith went to Rose Road Primary School, located in Grey Lynn. Edwin Smith was a sergeant who served with the New Zealand 24th battalion in Italy and Egypt. Broadway Sheetmetals was a buisness that was ran and owned by Edwin Smith, who was a sheetmetal worker.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Ted Smith was a sergeant.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nNewZealandRower(x) ::: x is a New Zealand Rower.\nSergeant(x) ::: x is a sergeant.\nEdwinSmith(x) ::: x is Edwin Smith.\nTedSmith(x) ::: x is Ted Smith.\nRoseRoadPrimarySchool(x) ::: x is Rose Road Primary School.\nGreyLynn(x) ::: x is Grey Lynn.\nNewZealand24thBattalion(x) ::: x is the New Zealand 24th battalion.\nItaly(x) ::: x is Italy.\nEgypt(x) ::: x is Egypt.\nBroadwaySheetmetals(x) ::: x is Broadway Sheetmetals.\nSheetmetalWorker(x) ::: x is a sheetmetal worker.\nPremises:\nEdwinSmith(edwin) ∧ NewZealandRower(edwin) ∧ TedSmith(edwin) ∧ RoseRoadPrimarySchool(roseRoadPrimarySchool) ∧ GreyLynn(greyLynn) ∧ NewZealand24thBattalion(newZealand24thBattalion) ∧ Italy(italy) ∧ Egypt(egypt) ∧ BroadwaySheetmetals(broadwaySheetmetals) ∧ SheetmetalWorker(edwin) ::: Edwin Smith was a New Zealand Rower from Auckland. Edwin Smith was also known as Ted Smith. Edwin Smith went to Rose Road Primary School, located in Grey Lynn. Edwin Smith was a sergeant who served with the New Zealand 24th battalion in Italy and Egypt. Broadway Sheetmetals was a buisness that was ran and owned by Edwin Smith, who was a sheetmetal worker.\nConclusion:\nSergeant(edwin) ::: Ted Smith was a sergeant.\n------\nProblem:\nThe 1996 Summer Olympics were held in Atlanta, Georgia. The 1996 Summer Olympics were the 26th Summer Olympics. The 1996 Summer Olympics were the first Summer Olympics to be held in the United States since the 1984 Summer Olympics. The 1996 Summer Olympics were the first Summer Olympics to be held in the Southern Hemis"
    ]
  },
  {
    "id": "FOLIO_train_933",
    "context": "Edwin Smith was a New Zealand Rower from Auckland. Edwin Smith was also known as Ted Smith. Edwin Smith went to Rose Road Primary School, located in Grey Lynn. Edwin Smith was a sergeant who served with the New Zealand 24th battalion in Italy and Egypt. Broadway Sheetmetals was a buisness that was ran and owned by Edwin Smith, who was a sheetmetal worker.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There are no rowers that own a buisness.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRower(x) ::: x is a rower.\nSergeant(x) ::: x is a sergeant.\nSheetmetalWorker(x) ::: x is a sheetmetal worker.\nBuisness(x) ::: x is a buisness.\nOwn(x, y) ::: x owns y.\nRan(x, y) ::: x ran y.\nPremises:\nRower(edwin) ∧ Sergeant(edwin) ∧ SheetmetalWorker(edwin) ∧ Own(edwin, broadwaySheetmetals) ::: Edwin Smith was a New Zealand Rower from Auckland. Edwin Smith was also known as Ted Smith. Edwin Smith went to Rose Road Primary School, located in Grey Lynn. Edwin Smith was a sergeant who served with the New Zealand 24th battalion in Italy and Egypt. Broadway Sheetmetals was a buisness that was ran and owned by Edwin Smith, who was a sheetmetal worker.\nConclusion:\n¬∃x (Rower(x) ∧ Own(x, y)) ::: There are no rowers that own a buisness.\n------\nProblem:\nThe 1992 Summer Olympics were held in Barcelona, Spain. The 1996 Summer Olympics were held in Atlanta, Georgia. The 2000 Summer Olympics were held in Sydney, Australia. The 2004 Summer Olympics were held in Athens, Greece. The 2008 Summer Olympics were held in Beijing, China. The 2012 Summer Olympics were held in London, England. The 2016 Summer Olympics were held in Rio de Janeiro, Brazil. The 2020 Summer Olympics were held in Tokyo, Japan.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The 2000 Summer Olympics were held in Athens, Greece.\nBased on the above information, is the following statement true, false, or uncertain? The 2000 Summer Olympics were held in London, England.\nBased on the above information, is the following statement true, false, or uncertain? The 2000 Summer Olympics were held in Tokyo, Japan.\nBased on the above information, is the following statement true, false, or uncertain? The 2000 Summer Olympics were held in Rio de Janeiro, Brazil."
    ]
  },
  {
    "id": "FOLIO_train_934",
    "context": "Edwin Smith was a New Zealand Rower from Auckland. Edwin Smith was also known as Ted Smith. Edwin Smith went to Rose Road Primary School, located in Grey Lynn. Edwin Smith was a sergeant who served with the New Zealand 24th battalion in Italy and Egypt. Broadway Sheetmetals was a buisness that was ran and owned by Edwin Smith, who was a sheetmetal worker.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? No sergeants are from Auckland.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nNewZealand(x) ::: x is a New Zealand person.\nRower(x) ::: x is a rower.\nSergeant(x) ::: x is a sergeant.\nKnownAs(x, y) ::: x is known as y.\nWentTo(x, y) ::: x went to y.\nRan(x, y) ::: x ran y.\nOwned(x, y) ::: x owned y.\nPremises:\nNewZealand(edwin) ∧ Rower(edwin) ∧ KnownAs(edwin, ted) ∧ WentTo(edwin, roseRoadPrimarySchool) ∧ WentTo(edwin, greyLynn) ∧ Sergeant(edwin) ∧ ServedWith(edwin, newZealand24thBattalion) ∧ ServedWith(edwin, egypt) ∧ ServedWith(edwin, italy) ∧ Ran(edwin, broadwaySheetmetals) ∧ Owned(edwin, broadwaySheetmetals) ∧ SheetmetalWorker(edwin) ::: Edwin Smith was a New Zealand Rower from Auckland. Edwin Smith was also known as Ted Smith. Edwin Smith went to Rose Road Primary School, located in Grey Lynn. Edwin Smith was a sergeant who served with the New Zealand 24th battalion in Italy and Egypt. Broadway Sheetmetals was a buisness that was ran and owned by Edwin Smith, who was a sheetmetal worker.\nConclusion:\n¬∃x (Sergeant(x) ∧ NewZealand(x)) ::: No sergeants are from Auckland.\n------\nProblem:\nThe 1996 Summer Olympics were held in Atlanta, Georgia. The 1996 Summer Olympics were the 26th Summer Olympics. The 1996 Summer Olympics were the first Summer Olympics to be held in the United States since the 1984 Summer Olympics. The 1996 Summer Olympics were the first Summer Olympics to be held in the Southern United States. The 1996 Summer Olympics were the first Summer Olympics to be held in the Eastern Time Zone. The 1996 Summer Olympics were the first Summer Olympics to"
    ]
  },
  {
    "id": "FOLIO_train_935",
    "context": "Edwin Smith was a New Zealand Rower from Auckland. Edwin Smith was also known as Ted Smith. Edwin Smith went to Rose Road Primary School, located in Grey Lynn. Edwin Smith was a sergeant who served with the New Zealand 24th battalion in Italy and Egypt. Broadway Sheetmetals was a buisness that was ran and owned by Edwin Smith, who was a sheetmetal worker.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? No buisness owner has served in Egypt.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nNewZealand(x) ::: x is a New Zealand person.\nRower(x) ::: x is a rower.\nSergeant(x) ::: x is a sergeant.\nBuisnessOwner(x) ::: x is a buisness owner.\nSheetmetalWorker(x) ::: x is a sheetmetal worker.\nRoseRoadPrimarySchool(x) ::: x is Rose Road Primary School.\nGreyLynn(x) ::: x is Grey Lynn.\nNewZealand24thBattalion(x) ::: x is the New Zealand 24th battalion.\nItaly(x) ::: x is Italy.\nEgypt(x) ::: x is Egypt.\nPremises:\nNewZealand(edwin) ∧ Rower(edwin) ∧ Sergeant(edwin) ∧ BuisnessOwner(edwin) ∧ SheetmetalWorker(edwin) ∧ RoseRoadPrimarySchool(roseRoadPrimarySchool) ∧ GreyLynn(greyLynn) ∧ NewZealand24thBattalion(newZealand24thBattalion) ∧ Italy(italy) ∧ Egypt(egypt) ::: Edwin Smith was a New Zealand Rower from Auckland. Edwin Smith was also known as Ted Smith. Edwin Smith went to Rose Road Primary School, located in Grey Lynn. Edwin Smith was a sergeant who served with the New Zealand 24th battalion in Italy and Egypt. Broadway Sheetmetals was a buisness that was ran and owned by Edwin Smith, who was a sheetmetal worker.\nConclusion:\n¬∃x (BuisnessOwner(x) ∧ Sergeant(x) ∧ Serve(x, egypt)) ::: No buisness owner has served in Egypt.\n------\nProblem:\nThe 1996 Summer Olympics were held in Atlanta, Georgia. The 1996 Summer Olympics were the 26th Summer Olympics. The 1996 Summer Olympics were the first Summer Olympics to be held in the United States since the 1984 Summer Olympics. The 1996 Summer Olympics were the first Summer Olympics to be held in the Southern United States. The"
    ]
  },
  {
    "id": "FOLIO_train_936",
    "context": "A werewolf is a human that can turn into a wolf. A werewolf has been scratched or bitten by another werewolf. If someone has been scratched or bitten, they have been attacked.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? All humans are werewolves.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nHuman(x) ::: x is a human.\nWerewolf(x) ::: x is a werewolf.\nScratched(x) ::: x has been scratched.\nBitten(x) ::: x has been bitten.\nAttacked(x) ::: x has been attacked.\nPremises:\n∀x (Werewolf(x) → Human(x)) ::: A werewolf is a human.\n∀x (Scratched(x) ∨ Bitten(x)) → Attacked(x) ::: If someone has been scratched or bitten, they have been attacked.\nConclusion:\n∀x Human(x) ::: All humans are werewolves.\n------\nProblem:\nA person is a student if they are enrolled in a university. A person is a professor if they teach at a university. A person is a teacher if they teach at a school. A person is a student if they are enrolled in a school. A person is a student if they are enrolled in a university. A person is a student if they are enrolled in a school. A person is a student if they are enrolled in a university. A person is a student if they are enrolled in a school. A person is a student if they are enrolled in a university. A person is a student if they are enrolled in a school. A person is a student if they are enrolled in a university. A person is a student if they are enrolled in a school. A person is a student if they are enrolled in a university. A person is a student if they are enrolled in a school. A person is a student if they are enrolled in a university. A person is a student if they are enrolled in a school. A person is a student if they are enrolled in a university. A person is a student if they are enrolled in a school. A person is a student if they are enrolled in a university. A person is a student if they are enrolled in a school. A person is a student if they are enrolled in a university. A person is a student if they are enrolled in a school. A person is a student if they are enrolled in a university. A person is a student if they are enrolled in a school. A person is a student if they are enrolled in a university. A person is a student if they are enrolled in a school. A person is a student"
    ]
  },
  {
    "id": "FOLIO_train_937",
    "context": "A werewolf is a human that can turn into a wolf. A werewolf has been scratched or bitten by another werewolf. If someone has been scratched or bitten, they have been attacked.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A werewolf is a wolf.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nWerewolf(x) ::: x is a werewolf.\nHuman(x) ::: x is a human.\nWolf(x) ::: x is a wolf.\nScratched(x, y) ::: x has been scratched by y.\nBitten(x, y) ::: x has been bitten by y.\nAttacked(x) ::: x has been attacked.\nPremises:\nWerewolf(w) ::: A werewolf is a human that can turn into a wolf.\n∀x (Werewolf(x) → (Scratched(x, y) ∨ Bitten(x, y))) ::: A werewolf has been scratched or bitten by another werewolf.\n∀x (Scratched(x, y) ∨ Bitten(x, y)) → Attacked(x) ::: If someone has been scratched or bitten, they have been attacked.\nConclusion:\nWolf(w) ::: A werewolf is a wolf.\n------\nProblem:\nA person is a student if they are enrolled in a university. A person is a student if they are enrolled in a college. A person is a student if they are enrolled in a high school. A person is a student if they are enrolled in a middle school. A person is a student if they are enrolled in a primary school. A person is a student if they are enrolled in a kindergarten. A person is a student if they are enrolled in a nursery school. A person is a student if they are enrolled in a preschool. A person is a student if they are enrolled in a daycare. A person is a student if they are enrolled in a playgroup. A person is a student if they are enrolled in a creche. A person is a student if they are enrolled in a crèche. A person is a student if they are enrolled in a crèche. A person is a student if they are enrolled in a crèche. A person is a student if they are enrolled in a crèche. A person is a student if they are enrolled in a crèche. A person is a student if they are enrolled in a crèche. A person is a student if they are enrolled in a crèche. A person is a student if they are enrolled in a cr"
    ]
  },
  {
    "id": "FOLIO_train_938",
    "context": "A werewolf is a human that can turn into a wolf. A werewolf has been scratched or bitten by another werewolf. If someone has been scratched or bitten, they have been attacked.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? A werewolf has scratched someone before.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nWerewolf(x) ::: x is a werewolf.\nHuman(x) ::: x is a human.\nScratched(x, y) ::: x has scratched y.\nBitten(x, y) ::: x has bitten y.\nAttacked(x) ::: x has been attacked.\nPremises:\n∀x (Werewolf(x) → Human(x)) ::: A werewolf is a human.\n∀x (Werewolf(x) → ∃y (Scratched(x, y) ∨ Bitten(x, y))) ::: A werewolf has been scratched or bitten by another werewolf.\n∀x (Scratched(x, y) ∨ Bitten(x, y) → Attacked(x)) ::: If someone has been scratched or bitten, they have been attacked.\nConclusion:\n∃x (Werewolf(x) ∧ Scratched(x, y)) ::: A werewolf has scratched someone before.\n------\nProblem:\nA person is a student if they are enrolled in a university. A person is a student if they are enrolled in a college. A person is a student if they are enrolled in a high school. A person is a student if they are enrolled in a middle school. A person is a student if they are enrolled in a primary school. A person is a student if they are enrolled in a kindergarten. A person is a student if they are enrolled in a nursery school. A person is a student if they are enrolled in a preschool. A person is a student if they are enrolled in a daycare. A person is a student if they are enrolled in a playgroup. A person is a student if they are enrolled in a toddler group. A person is a student if they are enrolled in a baby group. A person is a student if they are enrolled in a creche. A person is a student if they are enrolled in a crèche. A person is a student if they are enrolled in a nursery. A person is a student if they are enrolled in a crèche. A person is a student if they are enrolled in a crèche. A person is a student if they are enrolled in a crèche"
    ]
  },
  {
    "id": "FOLIO_train_939",
    "context": "UFC Fight Night was a mixed martial arts event and was held in Sweden. At UFC Fight Night, Sadollah was scheduled to fight Musoke. Sadollah fought Akiyama at UFC Fight Night. Musoke fought Yakovlev at UFC Fight Night. Jung was injured at UFC Fight Night. Injured people did not fight at UFC Fight Night.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jung fought Sadollah.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nUFCFightNight(x) ::: x is a UFC Fight Night.\nScheduled(x, y) ::: x is scheduled to fight y.\nFight(x, y) ::: x fought y.\nInjured(x) ::: x is injured.\nPremises:\nUFCFightNight(ufcFightNight) ::: UFC Fight Night was a mixed martial arts event and was held in Sweden.\nScheduled(sadollah, musoke) ∧ Scheduled(sadollah, akiyama) ∧ Scheduled(musoke, yakovlev) ::: At UFC Fight Night, Sadollah was scheduled to fight Musoke. Sadollah fought Akiyama at UFC Fight Night. Musoke fought Yakovlev at UFC Fight Night.\nInjured(jung) ∧ ¬Fight(jung, sadollah) ::: Jung was injured at UFC Fight Night. Injured people did not fight at UFC Fight Night.\nConclusion:\nFight(jung, sadollah) ::: Jung fought Sadollah.\n------\nProblem:\nThe 2016 Summer Olympics was a major international multi-sport event. The 2016 Summer Olympics was held in Brazil. The 2016 Summer Olympics was the 31st Summer Olympics. The 2016 Summer Olympics was the 31st edition of the Summer Olympics. The 2016 Summer Olympics was the 31st edition of the Games of the Olympiad. The 2016 Summer Olympics was the 31st edition of the Olympic Games. The 2016 Summer Olympics was the 31st edition of the Olympic Games of the Modern Era. The 2016 Summer Olympics was the 31st edition of the Olympic Games of the Modern Era. The 2016 Summer Olympics was the 31st edition of the Olympic Games of the Modern Era. The 2016 Summer Olympics was the 31st edition of the Olympic Games of the Modern Era. The 2016 Summer Olympics was the 31st edition of the Olympic Games of the Modern Era. The 2016 Summer Olympics was the 31st edition of the Olympic Games of the Modern Era. The 2016 Summer Olympics was the 31st edition of the Olympic Games of the"
    ]
  },
  {
    "id": "FOLIO_train_940",
    "context": "UFC Fight Night was a mixed martial arts event and was held in Sweden. At UFC Fight Night, Sadollah was scheduled to fight Musoke. Sadollah fought Akiyama at UFC Fight Night. Musoke fought Yakovlev at UFC Fight Night. Jung was injured at UFC Fight Night. Injured people did not fight at UFC Fight Night.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Jung did not fight at UFC Fight Night.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nUFCFightNight(x) ::: x is a UFC Fight Night.\nScheduled(x, y) ::: x is scheduled to fight y.\nFight(x, y) ::: x fought y.\nInjured(x) ::: x is injured.\nPremises:\nUFCFightNight(ufcFightNight) ::: UFC Fight Night was a mixed martial arts event and was held in Sweden.\nScheduled(sadollah, musoke) ∧ Scheduled(sadollah, akiyama) ∧ Scheduled(musoke, yakovlev) ::: At UFC Fight Night, Sadollah was scheduled to fight Musoke. Sadollah fought Akiyama at UFC Fight Night. Musoke fought Yakovlev at UFC Fight Night.\nInjured(jung) ∧ ¬Fight(jung, ufcFightNight) ::: Jung was injured at UFC Fight Night. Injured people did not fight at UFC Fight Night.\nConclusion:\n¬Fight(jung, ufcFightNight) ::: Jung did not fight at UFC Fight Night.\n------"
    ]
  },
  {
    "id": "FOLIO_train_941",
    "context": "UFC Fight Night was a mixed martial arts event and was held in Sweden. At UFC Fight Night, Sadollah was scheduled to fight Musoke. Sadollah fought Akiyama at UFC Fight Night. Musoke fought Yakovlev at UFC Fight Night. Jung was injured at UFC Fight Night. Injured people did not fight at UFC Fight Night.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Sadollah fought Musoke.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nUFCFightNight(x) ::: x is a UFC Fight Night.\nScheduled(x, y) ::: x is scheduled to fight y.\nFight(x, y) ::: x fought y.\nInjured(x) ::: x is injured.\nPremises:\nUFCFightNight(ufcFightNight) ::: UFC Fight Night was a mixed martial arts event and was held in Sweden.\nScheduled(sadollah, musoke) ∧ Scheduled(sadollah, akiyama) ∧ Scheduled(musoke, yakovlev) ::: At UFC Fight Night, Sadollah was scheduled to fight Musoke. Sadollah fought Akiyama at UFC Fight Night. Musoke fought Yakovlev at UFC Fight Night.\nInjured(jung) ∧ ¬Fight(jung, ufcFightNight) ::: Jung was injured at UFC Fight Night. Injured people did not fight at UFC Fight Night.\nConclusion:\nFight(sadollah, musoke) ::: Sadollah fought Musoke.\n------\nProblem:\nThe"
    ]
  },
  {
    "id": "FOLIO_train_942",
    "context": "UFC Fight Night was a mixed martial arts event and was held in Sweden. At UFC Fight Night, Sadollah was scheduled to fight Musoke. Sadollah fought Akiyama at UFC Fight Night. Musoke fought Yakovlev at UFC Fight Night. Jung was injured at UFC Fight Night. Injured people did not fight at UFC Fight Night.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Nelson fought Story at UFC Fight Night.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nUFCFightNight(x) ::: x is a UFC Fight Night.\nScheduled(x, y) ::: x is scheduled to fight y.\nFight(x, y) ::: x fought y.\nInjured(x) ::: x is injured.\nPremises:\nUFCFightNight(ufcFightNight) ::: UFC Fight Night was a mixed martial arts event and was held in Sweden.\nScheduled(sadollah, musoke) ∧ Scheduled(sadollah, akiyama) ∧ Scheduled(musoke, yakovlev) ::: At UFC Fight Night, Sadollah was scheduled to fight Musoke. Sadollah fought Akiyama at UFC Fight Night. Musoke fought Yakovlev at UFC Fight Night.\nInjured(jung) ∧ ¬Fight(jung, ufcFightNight) ::: Jung was injured at UFC Fight Night. Injured people did not fight at UFC Fight Night.\nConclusion:\nFight(nelson, story) ::: Nelson fought Story at UFC Fight Night.\n------\nProblem:\nThe"
    ]
  },
  {
    "id": "FOLIO_train_943",
    "context": "All drinks are edible. All juices are drinks. All orange juice is a juice. A juice is either an orange juice or an apple juice. All apple juice is sweet. If coke is apple juice, then coke is a drink. If coke is not apple juice, then coke is not edible.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Coke is orange juice.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDrink(x) ::: x is a drink.\nEdible(x) ::: x is edible.\nJuice(x) ::: x is a juice.\nOrangeJuice(x) ::: x is an orange juice.\nAppleJuice(x) ::: x is an apple juice.\nSweet(x) ::: x is sweet.\nPremises:\n∀x (Drink(x) → Edible(x)) ::: All drinks are edible.\n∀x (Juice(x) → Drink(x)) ::: All juices are drinks.\n∀x (OrangeJuice(x) → Juice(x)) ::: All orange juice is a juice.\n∀x (AppleJuice(x) → Juice(x)) ::: All apple juice is a juice.\n∀x (Juice(x) → (OrangeJuice(x) ∨ AppleJuice(x))) ::: A juice is either an orange juice or an apple juice.\n∀x (AppleJuice(x) → Sweet(x)) ::: All apple juice is sweet."
    ]
  },
  {
    "id": "FOLIO_train_944",
    "context": "All drinks are edible. All juices are drinks. All orange juice is a juice. A juice is either an orange juice or an apple juice. All apple juice is sweet. If coke is apple juice, then coke is a drink. If coke is not apple juice, then coke is not edible.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Coke is edible and sweet.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDrink(x) ::: x is a drink.\nEdible(x) ::: x is edible.\nJuice(x) ::: x is a juice.\nOrangeJuice(x) ::: x is an orange juice.\nAppleJuice(x) ::: x is an apple juice.\nSweet(x) ::: x is sweet.\nPremises:\n∀x (Drink(x) → Edible(x)) ::: All drinks are edible.\n∀x (Juice(x) → Drink(x)) ::: All juices are drinks.\n∀x (OrangeJuice(x) → Juice(x)) ::: All orange juice is a juice.\n∀x (Juice(x) → (OrangeJuice(x) ∨ AppleJuice(x))) ::: A juice is either an orange juice or an apple juice.\n∀x (AppleJuice(x) → Sweet(x)) ::: All apple juice is sweet.\nCoke(c) ::: c is coke.\n∀x (Coke(x) → (AppleJ"
    ]
  },
  {
    "id": "FOLIO_train_945",
    "context": "All drinks are edible. All juices are drinks. All orange juice is a juice. A juice is either an orange juice or an apple juice. All apple juice is sweet. If coke is apple juice, then coke is a drink. If coke is not apple juice, then coke is not edible.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Coke is not edible and sweet.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDrink(x) ::: x is a drink.\nEdible(x) ::: x is edible.\nJuice(x) ::: x is a juice.\nOrangeJuice(x) ::: x is an orange juice.\nAppleJuice(x) ::: x is an apple juice.\nSweet(x) ::: x is sweet.\nPremises:\n∀x (Drink(x) → Edible(x)) ::: All drinks are edible.\n∀x (Juice(x) → Drink(x)) ::: All juices are drinks.\n∀x (OrangeJuice(x) → Juice(x)) ::: All orange juice is a juice.\n∀x (Juice(x) → (OrangeJuice(x) ∨ AppleJuice(x))) ::: A juice is either an orange juice or an apple juice.\n∀x (AppleJuice(x) → Sweet(x)) ::: All apple juice is sweet.\nCoke(c) ::: c is coke.\n∀x (Coke(x) → (AppleJ"
    ]
  },
  {
    "id": "FOLIO_train_946",
    "context": "Federico Garcia Lorca was a talented Spanish poet and he supported the Popular Front. The Spanish Nationalists opposed anyone who supported the Popular Front Talented poets are popular. Spanish Nationalists killed anyone who they opposed and were popular. Daniel supported the Popular Front but was not popular.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Daniel was not killed by the Spanish Nationalists.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSpanish(x) ::: x is a Spanish person.\nPoet(x) ::: x is a poet.\nTalented(x) ::: x is a talented person.\nPopular(x) ::: x is a popular person.\nSupport(x, y) ::: x supports y.\nOppose(x, y) ::: x opposes y.\nKill(x, y) ::: x kills y.\nPremises:\nSpanish(federico) ∧ Poet(federico) ∧ Talented(federico) ∧ Support(federico, popularFront) ::: Federico Garcia Lorca was a talented Spanish poet and he supported the Popular Front.\n∀x (Poet(x) → Popular(x)) ::: Talented poets are popular.\n∀x (SpanishNationalist(x) → ¬Popular(x)) ::: Spanish Nationalists killed anyone who they opposed and were popular.\nSupport(daniel, popularFront) ∧ ¬Popular(daniel) ::: Daniel supported the Popular Front but was not popular.\nConclusion:\n¬Kill(spanishNationalist,"
    ]
  },
  {
    "id": "FOLIO_train_947",
    "context": "Federico Garcia Lorca was a talented Spanish poet and he supported the Popular Front. The Spanish Nationalists opposed anyone who supported the Popular Front Talented poets are popular. Spanish Nationalists killed anyone who they opposed and were popular. Daniel supported the Popular Front but was not popular.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Lorca was killed by the Spanish Nationalists.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSpanish(x) ::: x is a Spanish person.\nPoet(x) ::: x is a poet.\nTalented(x) ::: x is a talented person.\nPopular(x) ::: x is a popular person.\nSupport(x, y) ::: x supports y.\nOppose(x, y) ::: x opposes y.\nKill(x, y) ::: x kills y.\nPremises:\nSpanish(lorca) ∧ Poet(lorca) ∧ Talented(lorca) ∧ Support(lorca, popularFront) ::: Federico Garcia Lorca was a talented Spanish poet and he supported the Popular Front.\n∀x (Poet(x) → Popular(x)) ::: Talented poets are popular.\n∀x (SpanishNationalist(x) → ¬Popular(x)) ::: Spanish Nationalists killed anyone who they opposed and were popular.\nSupport(daniel, popularFront) ∧ ¬Popular(daniel) ::: Daniel supported the Popular Front but was not popular.\nConclusion:\nKill(spanishNationalist, lorca) ::"
    ]
  },
  {
    "id": "FOLIO_train_948",
    "context": "People either drink kombucha every day or drink Coca-Cola or Pepsi products every day. If people drink Coca-Cola or Pepsi products every day, then they grew up with extremely busy parents who did not have time to pack them lunch. If people drink Coca-Cola or Pepsi products every day, then they have to visit the dentist frequently. If people grew up with extremely busy parents who did not have time to pack them lunch, then they have erratic and diverse eating habits. If people have erratic and diverse eating habits, then they do not have consistent everyday routines and like sticking to a solid schedule. Franny either both grew up with extremely busy parents who did not have time to pack her lunch and has consistent everyday routines and like sticking to a solid schedule, or she neither grew up with extremely busy parents who did not have time to pack her lunch nor has consistent everyday routines and likes sticking to a schedule.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Franny has to visit the dentist frequently.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDrink(x, y) ::: x drinks y every day.\nGrewUp(x, y) ::: x grew up with y.\nHave(x, y) ::: x has y.\nVisit(x, y) ::: x visits y frequently.\nEat(x, y) ::: x eats y.\nHaveErraticAndDiverseEatingHabits(x) ::: x has erratic and diverse eating habits.\nHaveConsistentEverydayRoutinesAndLikeStickingToASolidSchedule(x) ::: x has consistent everyday routines and likes sticking to a solid schedule.\nPremises:\n∀x (Drink(x, kombucha) ∨ Drink(x, cocaCola) ∨ Drink(x, pepsi)) ::: People either drink kombucha every day or drink Coca-Cola or Pepsi products every day.\n∀x (Drink(x, cocaCola) ∨ Drink(x, pepsi)) → (GrewUp(x, extremelyBusyParents) ∧ ¬Have(x, lunch)) ::: If people drink Coca"
    ]
  },
  {
    "id": "FOLIO_train_949",
    "context": "People either drink kombucha every day or drink Coca-Cola or Pepsi products every day. If people drink Coca-Cola or Pepsi products every day, then they grew up with extremely busy parents who did not have time to pack them lunch. If people drink Coca-Cola or Pepsi products every day, then they have to visit the dentist frequently. If people grew up with extremely busy parents who did not have time to pack them lunch, then they have erratic and diverse eating habits. If people have erratic and diverse eating habits, then they do not have consistent everyday routines and like sticking to a solid schedule. Franny either both grew up with extremely busy parents who did not have time to pack her lunch and has consistent everyday routines and like sticking to a solid schedule, or she neither grew up with extremely busy parents who did not have time to pack her lunch nor has consistent everyday routines and likes sticking to a schedule.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Franny either both grew up with extremely busy parents who did not have time to pack her lunch and drink kombucha every day or neither grew up with extremely busy parents who did not have time to pack her lunch nor drink kombucha every day, then Franny neither visits the dentist frequently nor drinks Coca Cola or Pepsi products every day.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDrink(x, y) ::: x drinks y every day.\nGrewUp(x, y) ::: x grew up with y.\nBusy(x) ::: x is extremely busy.\nPack(x, y) ::: x packs y lunch.\nEat(x, y) ::: x eats y.\nErratic(x) ::: x has erratic eating habits.\nDiverse(x) ::: x has diverse eating habits.\nConsistent(x) ::: x has consistent everyday routines.\nSchedule(x) ::: x likes sticking to a schedule.\nPremises:\n∀x (Drink(x, kombucha) ∨ Drink(x, cocaCola) ∨ Drink(x, pepsi)) ::: People either drink kombucha every day or drink Coca-Cola or Pepsi products every day.\n∀x (Drink(x, cocaCola) ∨ Drink(x, pepsi)) → GrewUp(x, busy) ::: If people drink Coca-Cola or Pepsi products every day, then they grew up with extremely busy parents who did"
    ]
  },
  {
    "id": "FOLIO_train_950",
    "context": "People either drink kombucha every day or drink Coca-Cola or Pepsi products every day. If people drink Coca-Cola or Pepsi products every day, then they grew up with extremely busy parents who did not have time to pack them lunch. If people drink Coca-Cola or Pepsi products every day, then they have to visit the dentist frequently. If people grew up with extremely busy parents who did not have time to pack them lunch, then they have erratic and diverse eating habits. If people have erratic and diverse eating habits, then they do not have consistent everyday routines and like sticking to a solid schedule. Franny either both grew up with extremely busy parents who did not have time to pack her lunch and has consistent everyday routines and like sticking to a solid schedule, or she neither grew up with extremely busy parents who did not have time to pack her lunch nor has consistent everyday routines and likes sticking to a schedule.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Franny either visits the dentist frequently or drinks kombucha every day, then Franny both visits the dentist frequently and drinks Coca-Cola or Pepsi products every day.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nDrink(x, y) ::: x drinks y every day.\nGrewUp(x, y) ::: x grew up with y.\nHave(x, y) ::: x has y.\nVisit(x, y) ::: x visits y frequently.\nEat(x, y) ::: x eats y.\nRoutine(x) ::: x has a consistent everyday routine.\nSchedule(x) ::: x likes sticking to a solid schedule.\nPremises:\n∀x (Drink(x, kombucha) ∨ Drink(x, cocaCola) ∨ Drink(x, pepsi)) ::: People either drink kombucha every day or drink Coca-Cola or Pepsi products every day.\n∀x (Drink(x, cocaCola) ∨ Drink(x, pepsi)) → (GrewUp(x, extremelyBusyParents) ∧ ¬Have(x, lunch)) ::: If people drink Coca-Cola or Pepsi products every day, then they grew up with extremely busy parents who did not have time to pack them lunch.\n∀x (Drink(x, cocaCola) ∨ Drink(x, pepsi)) → Visit(x, dentist) ::: If people drink Coca-Cola or Pepsi products every day, then they have to visit the dentist frequently.\n∀x (GrewUp(x, extremelyBusyParents) ∧ ¬Have(x, lunch)) → (Eat(x, erratic) ∧ Eat(x, diverse)) ::: If people grew up with extremely busy parents who did not have time to pack them lunch, then they have erratic and diverse eating habits.\nEat(franny, erratic) ∧ Eat(franny, diverse) ∧ Routine(franny) ∧ Schedule(franny) ∧ ¬(GrewUp(franny, extremelyBusyParents) ∧ ¬Have(franny, lunch)) ::: Franny either both grew up with extremely busy parents who did not have time to pack her lunch and has consistent everyday routines and like sticking to a solid schedule, or she neither grew up with extremely busy parents who did not have time to pack her lunch nor has consistent everyday routines and likes sticking to a schedule.\nConclusion:\nVisit(franny, dentist) ∧ Drink(franny, cocaCola) ∧ Drink(franny, pepsi) ::: If Franny either visits the dentist frequently or drinks kombucha every day, then Franny both visits the dentist frequently and drinks Coca-Cola or Pepsi products every day.\n------"
    ]
  },
  {
    "id": "FOLIO_train_951",
    "context": "If a customer subscribes to AMC A List, then he/she can watch 3 movies every week without any additional fees. Some customers go to cinemas every week. Customers who prefer TV series will not watch TV series in cinemas. James watches TV series in cinemas. James subscribes to AMC A List. Peter prefers TV series.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James is not able to watch 3 movies every week without any additional fees.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSubscribe(x, y) ::: x subscribes to y.\nWatch(x, y) ::: x watches y.\nPrefer(x, y) ::: x prefers y.\nCinema(x) ::: x is a cinema.\nTVSeries(x) ::: x is a TV series.\nMovie(x) ::: x is a movie.\nPremises:\n∀x (Subscribe(x, AMCAList) → Watch(x, 3, Movie)) ::: If a customer subscribes to AMC A List, then he/she can watch 3 movies every week without any additional fees.\n∃x (Watch(x, 1, Cinema)) ::: Some customers go to cinemas every week.\n∀x (Watch(x, TVSeries, Cinema) → ¬Prefer(x, TVSeries)) ::: Customers who prefer TV series will not watch TV series in cinemas.\nWatch(james, TVSeries, Cinema) ::: James watches TV series in cinemas.\nSubscribe(james, AMCAList) ::: James subscribes to AMC A List.\nPrefer(peter, TVSeries) ::: Peter prefers TV series.\nConclusion:\n¬Watch(james, 3, Movie) ::: James is not able to watch 3 movies every week without any additional fees.\n------\nProblem:\nIf a person is a student, then he/she is a young person. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people"
    ]
  },
  {
    "id": "FOLIO_train_952",
    "context": "If a customer subscribes to AMC A List, then he/she can watch 3 movies every week without any additional fees. Some customers go to cinemas every week. Customers who prefer TV series will not watch TV series in cinemas. James watches TV series in cinemas. James subscribes to AMC A List. Peter prefers TV series.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James goes to cinemas every week.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCustomer(x) ::: x is a customer.\nSubscribe(x, y) ::: x subscribes to y.\nWatch(x, y) ::: x watches y.\nPrefer(x, y) ::: x prefers y.\nCinema(x) ::: x is a cinema.\nPremises:\n∀x (Subscribe(x, AMCAList) → Watch(x, 3movies)) ::: If a customer subscribes to AMC A List, then he/she can watch 3 movies every week without any additional fees.\n∃x (Customer(x) ∧ Watch(x, cinemas)) ::: Some customers go to cinemas every week.\n∀x (Watch(x, TVseries) ∧ Prefer(x, TVseries) → ¬Watch(x, Cinema)) ::: Customers who prefer TV series will not watch TV series in cinemas.\nWatch(james, TVseries) ∧ Subscribe(james, AMCAList) ::: James watches TV series in cinemas.\nPrefer(peter, TVseries) ::: Peter prefers TV series.\nConclusion:\nWatch(james, cinemas) ::: James goes to cinemas every week.\n------\nProblem:\nIf a person is a student, then he/she is a young person. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are"
    ]
  },
  {
    "id": "FOLIO_train_953",
    "context": "If a customer subscribes to AMC A List, then he/she can watch 3 movies every week without any additional fees. Some customers go to cinemas every week. Customers who prefer TV series will not watch TV series in cinemas. James watches TV series in cinemas. James subscribes to AMC A List. Peter prefers TV series.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Peter will not watch TV series in cinemas.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nSubscribe(x, y) ::: x subscribes to y.\nWatch(x, y) ::: x watches y.\nPrefer(x, y) ::: x prefers y.\nCinema(x) ::: x is a cinema.\nTVSeries(x) ::: x is a TV series.\nPremises:\n∀x (Subscribe(x, AMCAList) → Watch(x, 3)) ::: If a customer subscribes to AMC A List, then he/she can watch 3 movies every week without any additional fees.\n∃x (Watch(x, cinema) ∧ ∀y (Prefer(x, y) → ¬Watch(x, y))) ::: Some customers go to cinemas every week.\n∀x (Prefer(x, TVSeries) → ¬Watch(x, Cinema)) ::: Customers who prefer TV series will not watch TV series in cinemas.\nWatch(james, TVSeries) ::: James watches TV series in cinemas.\nSubscribe(james, AMCAList) ::: James subscribes to AMC A List.\nPrefer(peter, TVSeries) ::: Peter prefers TV series.\nConclusion:\n¬Watch(peter, Cinema) ::: Peter will not watch TV series in cinemas.\n------\nProblem:\nIf a person is a student, then he/she is a young person. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young people are not students. Some young"
    ]
  },
  {
    "id": "FOLIO_train_954",
    "context": "Bulbophyllum attenuatum is in the genus bulbophyllum. All bulbophyllum are orchids.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Bulbophyllum attenuatum is not an orchid.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGenus(x) ::: x is a genus.\nSpecies(x) ::: x is a species.\nOrchid(x) ::: x is an orchid.\nPremises:\nGenus(bulbophyllum) ::: Bulbophyllum attenuatum is in the genus bulbophyllum.\n∀x (Species(x) → Genus(x)) ::: All bulbophyllum are orchids.\nConclusion:\n¬Orchid(bulbophyllumAttenuatum) ::: Bulbophyllum attenuatum is not an orchid.\n------\nProblem:\nThe number of people who are both students and musicians is less than the number of people who are either students or musicians.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The number of people who are both students and musicians is less than the number of people who are students.\n###\nPredicates:\nStudent(x) ::: x is a student.\nMusician(x) ::: x is a musician.\nPremises:\n∀x (Student(x) ∧ Musician(x)) → ¬∃y (Student(y) ∧ Musician(y)) ::: The number of people who are both students and musicians is less than the number of people who are either students or musicians.\nConclusion:\n∀x (Student(x) ∧ Musician(x)) → ¬∃y (Student(y)) ::: The number of people who are both students and musicians is less than the number of people who are students.\n------\nProblem:\nThe number of people who are both students and musicians is less than the number of people who are either students or musicians.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The number of people who are both students and musicians is less than the number of people who are musicians.\n###\nPredicates:\nStudent(x) ::: x is a student.\nMusician(x) ::: x is a musician.\nPremises:\n∀x (Student(x) ∧ Musician(x)) → ¬∃y (Student(y) ∧ Musician(y)) ::: The number of people who are both students and musicians is less than the number of people who are either students or musicians.\nConclusion:\n∀x (Student(x) ∧ Musician(x)) → ¬∃y (Musician(y)) ::: The number of people who are both students and musicians is less than the number of people who are musicians.\n------\nProblem:\nThe number of people who are both students and musicians is less than the number of people who are either students or musicians.\nQuestion"
    ]
  },
  {
    "id": "FOLIO_train_955",
    "context": "There are eight federal districts of Russia: Central, Northwestern, Southern, North Caucasian, Volga, Ural, Siberian and Far Eastern. The Central federal district has the largest population among all federal districts in Russia. Moscow is the administrative center of the Central federal district. Yekaterinburg is the administrative center of the Ural federal district. Vladivostok is the administrative center of the Far Eastern federal district. The Far Eastern federal district has the largest area among all federal districts in Russia. Some federal districts of Russia were established in 2000.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Vladivostok is the administrative center of the federal district with the largest area.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFederalDistrict(x) ::: x is a federal district of Russia.\nAdministrativeCenter(x, y) ::: x is the administrative center of federal district y.\nPopulation(x, y) ::: x has population y.\nArea(x, y) ::: x has area y.\nEstablished(x, y) ::: x was established in year y.\nPremises:\nFederalDistrict(central) ∧ FederalDistrict(northwestern) ∧ FederalDistrict(southern) ∧ FederalDistrict(northCaucasian) ∧ FederalDistrict(volga) ∧ FederalDistrict(ural) ∧ FederalDistrict(siberian) ∧ FederalDistrict(farEastern) ::: There are eight federal districts of Russia: Central, Northwestern, Southern, North Caucasian, Volga, Ural, Siberian and Far Eastern.\nPopulation(central, largest) ::: The Central federal district has the largest population among all federal districts in Russia.\nAdministrativeCenter(moscow, central) ::: Moscow is the administrative center of the Central federal district.\nAdministrativeCenter(yekaterinburg, ural) ::: Yekaterinburg is the administrative center of the Ural federal district.\nAdministrativeCenter(vladivostok, farEastern) ::: Vladivostok is the administrative center of the Far Eastern federal district.\nArea(farEastern, largest) ::: The Far Eastern federal district has the largest area among all federal districts in Russia.\nEstablished(ural, year2000) ::: Some federal districts of Russia were established in 2000.\nConclusion:\nAdministrativeCenter(vladivostok, largest) ::: Vladivostok is the administrative center of the federal district with the largest area.\n------\nProblem:\nThe first-order logic formular is defined as follows:\n1) logical conjunction of expr1 and expr2: expr1 ∧ expr2\n2) logical disjunction of expr1 and expr2: expr1 ∨ expr2\n3) logical exclusive disjunction of expr1 and expr2: expr1 ⊕ expr2\n4) logical negation of expr1: ¬expr1\n5) expr1 implies expr2: expr1 → expr2\n6) expr1 if and only if expr2: expr1 ↔ expr2\n7) logical universal quantification: ∀x\n8) logical existential quantification: ∃x\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug"
    ]
  },
  {
    "id": "FOLIO_train_956",
    "context": "There are eight federal districts of Russia: Central, Northwestern, Southern, North Caucasian, Volga, Ural, Siberian and Far Eastern. The Central federal district has the largest population among all federal districts in Russia. Moscow is the administrative center of the Central federal district. Yekaterinburg is the administrative center of the Ural federal district. Vladivostok is the administrative center of the Far Eastern federal district. The Far Eastern federal district has the largest area among all federal districts in Russia. Some federal districts of Russia were established in 2000.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Moscow is the administrative center of the federal district with the largest population.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFederalDistrict(x) ::: x is a federal district of Russia.\nAdministrativeCenter(x, y) ::: x is the administrative center of federal district y.\nPopulation(x, y) ::: x has population y.\nArea(x, y) ::: x has area y.\nEstablished(x, y) ::: x was established in year y.\nPremises:\n∃x (FederalDistrict(x) ∧ Population(x, largest)) ::: There are eight federal districts of Russia: Central, Northwestern, Southern, North Caucasian, Volga, Ural, Siberian and Far Eastern.\nCentral(largest) ::: The Central federal district has the largest population among all federal districts in Russia.\nAdministrativeCenter(moscow, central) ::: Moscow is the administrative center of the Central federal district.\nAdministrativeCenter(yekaterinburg, urals) ::: Yekaterinburg is the administrative center of the Ural federal district.\nAdministrativeCenter(vladivostok, farEast) ::: Vladivostok is the administrative center of the Far Eastern federal district.\nFarEast(largest) ::: The Far Eastern federal district has the largest area among all federal districts in Russia.\n∃x (FederalDistrict(x) ∧ Established(x, year2000)) ::: Some federal districts of Russia were established in 2000.\nConclusion:\nAdministrativeCenter(moscow, largest) ::: Moscow is the administrative center of the federal district with the largest population.\n------\nProblem:\nThe first-order logic formular is defined as follows:\n1) logical conjunction of expr1 and expr2: expr1 ∧ expr2\n2) logical disjunction of expr1 and expr2: expr1 ∨ expr2\n3) logical exclusive disjunction of expr1 and expr2: expr1 ⊕ expr2\n4) logical negation of expr1: ¬expr1\n5) expr1 implies expr2: expr1 → expr2\n6) expr1 if and only if expr2: expr1 ↔ expr2\n7) logical universal quantification: ∀x\n8) logical existential quantification: ∃x\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine"
    ]
  },
  {
    "id": "FOLIO_train_957",
    "context": "There are eight federal districts of Russia: Central, Northwestern, Southern, North Caucasian, Volga, Ural, Siberian and Far Eastern. The Central federal district has the largest population among all federal districts in Russia. Moscow is the administrative center of the Central federal district. Yekaterinburg is the administrative center of the Ural federal district. Vladivostok is the administrative center of the Far Eastern federal district. The Far Eastern federal district has the largest area among all federal districts in Russia. Some federal districts of Russia were established in 2000.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The Northwestern federal district was established in 2000.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nFederalDistrict(x) ::: x is a federal district of Russia.\nAdministrativeCenter(x, y) ::: x is the administrative center of federal district y.\nPopulation(x, y) ::: x has population y.\nArea(x, y) ::: x has area y.\nEstablished(x, y) ::: x was established in year y.\nPremises:\n∃x (FederalDistrict(x) ∧ Population(x, largest)) ::: There are eight federal districts of Russia: Central, Northwestern, Southern, North Caucasian, Volga, Ural, Siberian and Far Eastern.\nCentral(largest) ::: The Central federal district has the largest population among all federal districts in Russia.\nAdministrativeCenter(moscow, central) ::: Moscow is the administrative center of the Central federal district.\nAdministrativeCenter(yekaterinburg, urals) ::: Yekaterinburg is the administrative center of the Ural federal district.\nAdministrativeCenter(vladivostok, farEast) ::: Vladivostok is the administrative center of the Far Eastern federal district.\nFarEast(largest) ::: The Far Eastern federal district has the largest area among all federal districts in Russia.\n∃x (FederalDistrict(x) ∧ Established(x, year2000)) ::: Some federal districts of Russia were established in 2000.\nConclusion:\nEstablished(northwestern, year2000) ::: The Northwestern federal district was established in 2000.\n------\nProblem:\nThe first-order logic formular is defined as follows:\n1) logical conjunction of expr1 and expr2: expr1 ∧ expr2\n2) logical disjunction of expr1 and expr2: expr1 ∨ expr2\n3) logical exclusive disjunction of expr1 and expr2: expr1 ⊕ expr2\n4) logical negation of expr1: ¬expr1\n5) expr1 implies expr2: expr1 → expr2\n6) expr1 if and only if expr2: expr1 ↔ expr2\n7) logical universal quantification: ∀x\n8) logical existential quantification: ∃x\n------\nProblem:\nAll people who regularly drink coffee are dependent on caffeine. People either regularly drink coffee or joke about being addicted to caffeine. No one who jokes about being addicted to caffeine is unaware that caffeine is a drug. Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug. If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent"
    ]
  },
  {
    "id": "FOLIO_train_958",
    "context": "All cancers are malignant tumors. No malignant tumor can be treated at home. All colorectal cancer is cancer. Having a cold can be treated at home. Breast cancer is neither having a cold nor a malignant tumor (exclusive).",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Breast cancer can be treated at home.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCancer(x) ::: x is cancer.\nMalignantTumor(x) ::: x is a malignant tumor.\nTreat(x, y) ::: x can be treated at home.\nColorectalCancer(x) ::: x is colorectal cancer.\nPremises:\nCancer(x) → MalignantTumor(x) ::: All cancers are malignant tumors.\nMalignantTumor(x) → ¬Treat(x, home) ::: No malignant tumor can be treated at home.\nColorectalCancer(x) → Cancer(x) ::: All colorectal cancer is cancer.\nTreat(cold, home) ::: Having a cold can be treated at home.\nBreastCancer(x) ⊕ ColorectalCancer(x) ⊕ MalignantTumor(x) ::: Breast cancer is neither having a cold nor a malignant tumor (exclusive).\nConclusion:\nTreat(breastCancer, home) ::: Breast cancer can be treated at home.\n------\nProblem:\nAll people who are not students are either working or retired. All people who are not working are either retired or unemployed. All people who are not retired are either working or unemployed. All people who are not unemployed are either working or retired. All people who are not working are either retired or unemployed. All people who are not retired are either working or unemployed. All people who are not unemployed are either working or retired. All people who are not working are either retired or unemployed. All people who are not retired are either working or unemployed. All people who are not unemployed are either working or retired. All people who are not working are either retired or unemployed. All people who are not retired are either working or unemployed. All people who are not unemployed are either working or retired. All people who are not working are either retired or unemployed. All people who are not retired are either working or unemployed. All people who are not unemployed are either working or retired. All people who are not working are either retired or unemployed. All people who are not retired are either working or unemployed. All people who are not unemployed are either working or retired. All people who are not working are either retired or unemployed. All people who are not retired are either working or unemployed. All people who are not unemployed are either working or retired. All people who are not working are either retired or unemployed. All people who are not retired are either working or unemployed. All people who are not unemployed are either working or retired. All people who are not working are either retired or unemployed. All people who are not retired are either working or unemployed. All people who are not unemployed are either working or retired. All people who are not working are either retired or unem"
    ]
  },
  {
    "id": "FOLIO_train_959",
    "context": "All cancers are malignant tumors. No malignant tumor can be treated at home. All colorectal cancer is cancer. Having a cold can be treated at home. Breast cancer is neither having a cold nor a malignant tumor (exclusive).",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Breast cancer is colorectal cancer.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCancer(x) ::: x is cancer.\nMalignantTumor(x) ::: x is a malignant tumor.\nTreat(x, y) ::: x can be treated at home.\nColorectalCancer(x) ::: x is colorectal cancer.\nBreastCancer(x) ::: x is breast cancer.\nPremises:\nCancer(x) → MalignantTumor(x) ::: All cancers are malignant tumors.\nMalignantTumor(x) → ¬Treat(x, home) ::: No malignant tumor can be treated at home.\nColorectalCancer(x) → Cancer(x) ::: All colorectal cancer is cancer.\nTreat(havingACold, home) ::: Having a cold can be treated at home.\nBreastCancer(x) ⊕ ColorectalCancer(x) ⊕ MalignantTumor(x) ::: Breast cancer is neither having a cold nor a malignant tumor (exclusive).\nConclusion:\nColorectalCancer(breastCancer) ::: Breast cancer is colorectal cancer.\n------\nProblem:\nAll people who are not students are either working or retired. All people who are not working are either students or retired. All people who are not retired are either working or students.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? All people are either working or retired.\n###\nPredicates:\nStudent(x) ::: x is a student.\nWorking(x) ::: x is working.\nRetired(x) ::: x is retired.\nPremises:\n¬Student(x) → (Working(x) ∨ Retired(x)) ::: All people who are not students are either working or retired.\n¬Working(x) → (Student(x) ∨ Retired(x)) ::: All people who are not working are either students or retired.\n¬Retired(x) → (Working(x) ∨ Student(x)) ::: All people who are not retired are either working or students.\nConclusion:\nWorking(x) ∨ Retired(x) ::: All people are either working or retired.\n------\nProblem:\nAll people who are not students are either working or retired. All people who are not working are either students or retired. All people who are not retired are either working or students.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? All people are either working or retired.\n###\nPredicates:\nStudent(x) ::: x is a student.\nWorking(x) ::: x is working.\nRet"
    ]
  },
  {
    "id": "FOLIO_train_960",
    "context": "All cancers are malignant tumors. No malignant tumor can be treated at home. All colorectal cancer is cancer. Having a cold can be treated at home. Breast cancer is neither having a cold nor a malignant tumor (exclusive).",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Breast cancer is not colorectal cancer.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCancer(x) ::: x is cancer.\nMalignantTumor(x) ::: x is a malignant tumor.\nTreat(x, y) ::: x can be treated at home.\nColorectalCancer(x) ::: x is colorectal cancer.\nBreastCancer(x) ::: x is breast cancer.\nPremises:\nCancer(x) → MalignantTumor(x) ::: All cancers are malignant tumors.\nMalignantTumor(x) → ¬Treat(x, home) ::: No malignant tumor can be treated at home.\nColorectalCancer(x) → Cancer(x) ::: All colorectal cancer is cancer.\nTreat(havingACold, home) ::: Having a cold can be treated at home.\nBreastCancer(x) ⊕ ColorectalCancer(x) ⊕ MalignantTumor(x) ::: Breast cancer is neither having a cold nor a malignant tumor (exclusive).\nConclusion:\n¬ColorectalCancer(breastCancer) ::: Breast cancer is not colorectal cancer.\n------"
    ]
  },
  {
    "id": "FOLIO_train_961",
    "context": "All cancers are malignant tumors. No malignant tumor can be treated at home. All colorectal cancer is cancer. Having a cold can be treated at home. Breast cancer is neither having a cold nor a malignant tumor (exclusive).",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Breast cancer is colorectal cancer or a malignant tumor.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCancer(x) ::: x is cancer.\nMalignantTumor(x) ::: x is a malignant tumor.\nColorectalCancer(x) ::: x is colorectal cancer.\nTreatAtHome(x) ::: x can be treated at home.\nPremises:\n∀x (Cancer(x) → MalignantTumor(x)) ::: All cancers are malignant tumors.\n∀x (MalignantTumor(x) → ¬TreatAtHome(x)) ::: No malignant tumor can be treated at home.\n∀x (ColorectalCancer(x) → Cancer(x)) ::: All colorectal cancer is cancer.\nTreatAtHome(cold) ::: Having a cold can be treated at home.\nBreastCancer(x) ⊕ MalignantTumor(x) ⊕ ColorectalCancer(x) ::: Breast cancer is neither having a cold nor a malignant tumor (exclusive).\nConclusion:\nColorectalCancer(breastCancer) ∨ MalignantTumor(breastCancer) ::: Bre"
    ]
  },
  {
    "id": "FOLIO_train_962",
    "context": "All cancers are malignant tumors. No malignant tumor can be treated at home. All colorectal cancer is cancer. Having a cold can be treated at home. Breast cancer is neither having a cold nor a malignant tumor (exclusive).",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Breast cancer is colorectal cancer and a cancer.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCancer(x) ::: x is cancer.\nMalignantTumor(x) ::: x is a malignant tumor.\nColorectalCancer(x) ::: x is colorectal cancer.\nTreat(x, y) ::: x can be treated at home.\nPremises:\nCancer(x) → MalignantTumor(x) ::: All cancers are malignant tumors.\nMalignantTumor(x) → ¬Treat(x, home) ::: No malignant tumor can be treated at home.\nColorectalCancer(x) → Cancer(x) ::: All colorectal cancer is cancer.\nTreat(havingACold, home) ::: Having a cold can be treated at home.\nBreastCancer(x) ⊕ ColorectalCancer(x) ⊕ MalignantTumor(x) ::: Breast cancer is neither having a cold nor a malignant tumor (exclusive).\nConclusion:\nColorectalCancer(breastCancer) ∧ Cancer(breastCancer) ::: Breast cancer is colorectal cancer and a cancer.\n------\nProblem:"
    ]
  },
  {
    "id": "FOLIO_train_963",
    "context": "All cancers are malignant tumors. No malignant tumor can be treated at home. All colorectal cancer is cancer. Having a cold can be treated at home. Breast cancer is neither having a cold nor a malignant tumor (exclusive).",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If breast cancer is not colorectal cancer, then breast cancer is a malignant tumor.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCancer(x) ::: x is cancer.\nMalignantTumor(x) ::: x is a malignant tumor.\nTreatableAtHome(x) ::: x can be treated at home.\nColorectalCancer(x) ::: x is colorectal cancer.\nBreastCancer(x) ::: x is breast cancer.\nHavingACold(x) ::: x is having a cold.\nPremises:\nCancer(x) → MalignantTumor(x) ::: All cancers are malignant tumors.\nMalignantTumor(x) → ¬TreatableAtHome(x) ::: No malignant tumor can be treated at home.\nColorectalCancer(x) → Cancer(x) ::: All colorectal cancer is cancer.\nHavingACold(x) → TreatableAtHome(x) ::: Having a cold can be treated at home.\nBreastCancer(x) ⊕ ColorectalCancer(x) ⊕ HavingACold(x) ::: Breast cancer is neither having a cold nor a malignant tumor (exclusive).\nConclusion:\n¬(BreastCancer("
    ]
  },
  {
    "id": "FOLIO_train_964",
    "context": "I should not worry about things outside of my control. Traffic is outside of my control.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? I should not worry about traffic.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nControl(x, y) ::: x controls y.\nWorry(x, y) ::: x worries about y.\nPremises:\n∀x (Control(x, y) → ¬Worry(x, y)) ::: I should not worry about things outside of my control.\nControl(me, traffic) ::: Traffic is outside of my control.\nConclusion:\n¬Worry(me, traffic) ::: I should not worry about traffic.\n------\nProblem:\nIf a person is a student, then the person is a person. If a person is a person, then the person is a person.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? If a person is a student, then the person is a person.\n###\nPredicates:\nStudent(x) ::: x is a student.\nPerson(x) ::: x is a person.\nPremises:\n∀x (Student(x) → Person(x)) ::: If a person is a student, then the person is a person.\n∀x (Person(x) → Person(x)) ::: If a person is a person, then the person is a person.\nConclusion:\n∀x (Student(x) → Person"
    ]
  },
  {
    "id": "FOLIO_train_965",
    "context": "Roversi is an Italian surname. Alba Roversi uses Roversi as a surname. Paolo Roversi uses Roversi as a surname. Roberto Roversi uses Roversi as a surname. Paolo Roversi is a photographer. A photographer is a professional or an amateur.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Alba Roversi uses an Italian surname.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nItalian(x) ::: x is an Italian surname.\nUse(x, y) ::: x uses y as a surname.\nProfessional(x) ::: x is a professional.\nAmateur(x) ::: x is an amateur.\nPhotographer(x) ::: x is a photographer.\nPremises:\nItalian(roversi) ::: Roversi is an Italian surname.\nUse(alba, roversi) ∧ Use(paolo, roversi) ∧ Use(roberto, roversi) ::: Alba Roversi uses Roversi as a surname. Paolo Roversi uses Roversi as a surname. Roberto Roversi uses Roversi as a surname.\nPhotographer(paolo) ::: Paolo Roversi is a photographer.\nProfessional(x) ∨ Amateur(x) ::: A photographer is a professional or an amateur.\nConclusion:\nItalian(alba) ::: Alba Roversi uses an Italian surname.\n------\nProblem:\nA person is a student if and only if the person is a student. A person is a student if and only if the person is a student. A"
    ]
  },
  {
    "id": "FOLIO_train_966",
    "context": "Roversi is an Italian surname. Alba Roversi uses Roversi as a surname. Paolo Roversi uses Roversi as a surname. Roberto Roversi uses Roversi as a surname. Paolo Roversi is a photographer. A photographer is a professional or an amateur.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There are no photographers using an Italian surname.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nItalian(x) ::: x is an Italian surname.\nUse(x, y) ::: x uses y as a surname.\nPhotographer(x) ::: x is a photographer.\nProfessional(x) ::: x is a professional.\nAmateur(x) ::: x is an amateur.\nPremises:\nItalian(roversi) ::: Roversi is an Italian surname.\nUse(alba, roversi) ∧ Use(paolo, roversi) ∧ Use(roberto, roversi) ::: Alba Roversi uses Roversi as a surname. Paolo Roversi uses Roversi as a surname. Roberto Roversi uses Roversi as a surname.\nPhotographer(paolo) ::: Paolo Roversi is a photographer.\nProfessional(x) ∨ Amateur(x) ::: A photographer is a professional or an amateur.\nConclusion:\n¬∃x (Photographer(x) ∧ Italian(x)) ::: There are no photographers using an Italian surname.\n------\nProblem:\nA person is a student if and only if the person is a student. A person is"
    ]
  },
  {
    "id": "FOLIO_train_967",
    "context": "Roversi is an Italian surname. Alba Roversi uses Roversi as a surname. Paolo Roversi uses Roversi as a surname. Roberto Roversi uses Roversi as a surname. Paolo Roversi is a photographer. A photographer is a professional or an amateur.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Paolo is an amateur photographer.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nItalian(x) ::: x is an Italian person.\nUse(x, y) ::: x uses y as a surname.\nPhotographer(x) ::: x is a photographer.\nProfessional(x) ::: x is a professional.\nAmateur(x) ::: x is an amateur.\nPremises:\nItalian(alba) ∧ Use(alba, roversi) ::: Alba Roversi uses Roversi as a surname.\nItalian(paolo) ∧ Use(paolo, roversi) ::: Paolo Roversi uses Roversi as a surname.\nItalian(roberto) ∧ Use(roberto, roversi) ::: Roberto Roversi uses Roversi as a surname.\nPhotographer(paolo) ::: Paolo Roversi is a photographer.\nProfessional(x) ∨ Amateur(x) ::: A photographer is a professional or an amateur.\nConclusion:\nAmateur(paolo) ::: Paolo is an amateur photographer.\n------\nProblem:\nA person is a student if and only if the person is a student. A person is a student if and only if the"
    ]
  },
  {
    "id": "FOLIO_train_968",
    "context": "Zaha Hadid is a British-Iraqi architect, artist and designer. Zaha Hadid was born on 31 October 1950 in Baghdad, Iraq. Hadid was a visiting professor of Architectural Design at the Yale School of Architecture. Max is an aspiring architecture student, and he plans to apply to Yale School of Architecture.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Hadid became a UK citizen later in her life.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBorn(x, y) ::: x was born in year y.\nVisitingProfessor(x, y) ::: x is a visiting professor of y.\nAspiring(x) ::: x is an aspiring person.\nApply(x, y) ::: x plans to apply to y.\nUKCitizen(x) ::: x is a UK citizen.\nPremises:\nBorn(zaha, year1950) ∧ Born(zaha, baghdad) ::: Zaha Hadid is a British-Iraqi architect, artist and designer.\nBorn(zaha, year1950) ∧ Born(zaha, baghdad) ∧ VisitingProfessor(zaha, yale) ::: Zaha Hadid was born on 31 October 1950 in Baghdad, Iraq.\nAspiring(max) ∧ Apply(max, yale) ::: Max is an aspiring architecture student, and he plans to apply to Yale School of Architecture.\nConclusion:\nUKCitizen(zaha) ::: Hadid became a UK citizen later in her life.\n------\nProblem:\nThe 2018 FIFA World Cup was the 2"
    ]
  },
  {
    "id": "FOLIO_train_969",
    "context": "Zaha Hadid is a British-Iraqi architect, artist and designer. Zaha Hadid was born on 31 October 1950 in Baghdad, Iraq. Hadid was a visiting professor of Architectural Design at the Yale School of Architecture. Max is an aspiring architecture student, and he plans to apply to Yale School of Architecture.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Hadid did some work in interior design.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBorn(x, y) ::: x was born in year y.\nVisitingProfessor(x, y) ::: x is a visiting professor of y.\nAspiring(x) ::: x is an aspiring person.\nApply(x, y) ::: x plans to apply to y.\nInteriorDesign(x) ::: x is a work in interior design.\nPremises:\nBorn(zaha, year1950) ∧ Born(zaha, baghdad) ::: Zaha Hadid is a British-Iraqi architect, artist and designer.\nBorn(zaha, year1950) ∧ Born(zaha, baghdad) ∧ VisitingProfessor(zaha, yale) ::: Zaha Hadid was born on 31 October 1950 in Baghdad, Iraq.\nAspiring(max) ∧ Apply(max, yale) ::: Max is an aspiring architecture student, and he plans to apply to Yale School of Architecture.\nConclusion:\nInteriorDesign(zaha) ::: Hadid did some work in interior design.\n------\nProblem:\nThe 2014 FIFA World Cup was the 20th"
    ]
  },
  {
    "id": "FOLIO_train_970",
    "context": "Zaha Hadid is a British-Iraqi architect, artist and designer. Zaha Hadid was born on 31 October 1950 in Baghdad, Iraq. Hadid was a visiting professor of Architectural Design at the Yale School of Architecture. Max is an aspiring architecture student, and he plans to apply to Yale School of Architecture.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Hadid was born in 1982.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBorn(x, y) ::: x was born in year y.\nVisitingProfessor(x, y) ::: x is a visiting professor of y.\nAspiring(x) ::: x is an aspiring person.\nApply(x, y) ::: x plans to apply to y.\nPremises:\nBorn(zaha, year1950) ∧ Born(zaha, baghdad) ::: Zaha Hadid is a British-Iraqi architect, artist and designer.\nBorn(zaha, year1950) ∧ Born(zaha, baghdad) ∧ VisitingProfessor(zaha, yale) ::: Zaha Hadid was born on 31 October 1950 in Baghdad, Iraq.\nAspiring(max) ∧ Apply(max, yale) ::: Max is an aspiring architecture student, and he plans to apply to Yale School of Architecture.\nConclusion:\nBorn(zaha, year1982) ::: Hadid was born in 1982.\n------"
    ]
  },
  {
    "id": "FOLIO_train_971",
    "context": "Zaha Hadid is a British-Iraqi architect, artist and designer. Zaha Hadid was born on 31 October 1950 in Baghdad, Iraq. Hadid was a visiting professor of Architectural Design at the Yale School of Architecture. Max is an aspiring architecture student, and he plans to apply to Yale School of Architecture.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Max admires Zaha Hadid.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBorn(x, y) ::: x was born in year y.\nVisitingProfessor(x, y) ::: x is a visiting professor of y.\nAspiring(x) ::: x is an aspiring person.\nApply(x, y) ::: x plans to apply to y.\nAdmire(x, y) ::: x admires y.\nPremises:\nBorn(zaha, year1950) ∧ Born(max, year1990) ∧ Born(yale, year1892) ::: Zaha Hadid is a British-Iraqi architect, artist and designer. Zaha Hadid was born on 31 October 1950 in Baghdad, Iraq. Hadid was a visiting professor of Architectural Design at the Yale School of Architecture. Max is an aspiring architecture student, and he plans to apply to Yale School of Architecture.\nConclusion:\nAdmire(max, zaha) ::: Max admires Zaha Hadid.\n------\nProblem:\nThe first person to win the Nobel Prize in Physics was Wilhelm Con"
    ]
  },
  {
    "id": "FOLIO_train_972",
    "context": "Something is either an invasive neuroimaging technique or a noninvasive neuroimaging technique. All noninvasive neuroimaging techniques provide a spatial resolution of brains. If a technique provides a spatial resolution of brains, then it is a measurement of brain activity. All measurements of brain activity are used by neuroscience researchers. FMRI is either a measurement of brain activity or a noninvasive neuroimaging technique.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? FMRI provides a spatial resolution of brains.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nInvasive(x) ::: x is an invasive neuroimaging technique.\nNoninvasive(x) ::: x is a noninvasive neuroimaging technique.\nSpatialResolution(x) ::: x provides a spatial resolution of brains.\nMeasurement(x) ::: x is a measurement of brain activity.\nUsed(x, y) ::: x is used by y.\nPremises:\n∀x (Noninvasive(x) → SpatialResolution(x)) ::: All noninvasive neuroimaging techniques provide a spatial resolution of brains.\n∀x (SpatialResolution(x) → Measurement(x)) ::: If a technique provides a spatial resolution of brains, then it is a measurement of brain activity.\n∀x (Measurement(x) → Used(x, neuroscienceResearchers)) ::: All measurements of brain activity are used by neuroscience researchers.\n∃x (Measurement(x) ∨ Noninvasive(x)) ::: Something is either an invasive neuroimaging technique or a noninvasive neuroimaging technique."
    ]
  },
  {
    "id": "FOLIO_train_973",
    "context": "Something is either an invasive neuroimaging technique or a noninvasive neuroimaging technique. All noninvasive neuroimaging techniques provide a spatial resolution of brains. If a technique provides a spatial resolution of brains, then it is a measurement of brain activity. All measurements of brain activity are used by neuroscience researchers. FMRI is either a measurement of brain activity or a noninvasive neuroimaging technique.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? FMRI is an invasive neuroimaging technique and is used by neuroscience researchers.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nInvasive(x) ::: x is an invasive neuroimaging technique.\nNoninvasive(x) ::: x is a noninvasive neuroimaging technique.\nSpatialResolution(x) ::: x provides a spatial resolution of brains.\nMeasurement(x) ::: x is a measurement of brain activity.\nUsed(x, y) ::: x is used by y.\nPremises:\n∀x (Noninvasive(x) → SpatialResolution(x)) ::: All noninvasive neuroimaging techniques provide a spatial resolution of brains.\n∀x (SpatialResolution(x) → Measurement(x)) ::: If a technique provides a spatial resolution of brains, then it is a measurement of brain activity.\n∀x (Measurement(x) → Used(x, neuroscienceResearchers)) ::: All measurements of brain activity are used by neuroscience researchers.\nFMRI ∨ Noninvasive(FMRI) ::: FMRI is either a measurement of brain activity or a noninvasive neuroimaging technique.\nConclusion:\nInvasive("
    ]
  },
  {
    "id": "FOLIO_train_974",
    "context": "Something is either an invasive neuroimaging technique or a noninvasive neuroimaging technique. All noninvasive neuroimaging techniques provide a spatial resolution of brains. If a technique provides a spatial resolution of brains, then it is a measurement of brain activity. All measurements of brain activity are used by neuroscience researchers. FMRI is either a measurement of brain activity or a noninvasive neuroimaging technique.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? FMRI is either an invasive neuroimaging technique or is used by neuroscience researchers.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nInvasive(x) ::: x is an invasive neuroimaging technique.\nNoninvasive(x) ::: x is a noninvasive neuroimaging technique.\nSpatialResolution(x) ::: x provides a spatial resolution of brains.\nMeasurement(x) ::: x is a measurement of brain activity.\nUsed(x, y) ::: x is used by y.\nPremises:\n∀x (Noninvasive(x) → SpatialResolution(x)) ::: All noninvasive neuroimaging techniques provide a spatial resolution of brains.\n∀x (SpatialResolution(x) → Measurement(x)) ::: If a technique provides a spatial resolution of brains, then it is a measurement of brain activity.\n∀x (Measurement(x) → Used(x, neuroscienceResearchers)) ::: All measurements of brain activity are used by neuroscience researchers.\n∃x (Measurement(x) ∨ Noninvasive(x)) ::: FMRI is either a measurement of brain activity or a noninvasive neuroimaging technique.\nCon"
    ]
  },
  {
    "id": "FOLIO_train_975",
    "context": "Something is either an invasive neuroimaging technique or a noninvasive neuroimaging technique. All noninvasive neuroimaging techniques provide a spatial resolution of brains. If a technique provides a spatial resolution of brains, then it is a measurement of brain activity. All measurements of brain activity are used by neuroscience researchers. FMRI is either a measurement of brain activity or a noninvasive neuroimaging technique.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If fMRI is not an invasive neuroimaging technique and used by neuroscience researchers, then fMRI is neither a noninvasive neuroimaging technique nor provides a spatial resolution of brains.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nInvasive(x) ::: x is an invasive neuroimaging technique.\nNoninvasive(x) ::: x is a noninvasive neuroimaging technique.\nSpatialResolution(x) ::: x provides a spatial resolution of brains.\nMeasurement(x) ::: x is a measurement of brain activity.\nUsed(x, y) ::: x is used by y.\nPremises:\n∀x (Noninvasive(x) → SpatialResolution(x)) ::: All noninvasive neuroimaging techniques provide a spatial resolution of brains.\n∀x (SpatialResolution(x) → Measurement(x)) ::: If a technique provides a spatial resolution of brains, then it is a measurement of brain activity.\n∀x (Measurement(x) → Used(x, neuroscienceResearchers)) ::: All measurements of brain activity are used by neuroscience researchers.\nFMRI ⊕ Noninvasive(FMRI) ::: FMRI is either a measurement of brain activity or a noninvasive neuroimaging technique.\nConclusion:\n¬(Invas"
    ]
  },
  {
    "id": "FOLIO_train_976",
    "context": "Either present their work at the conference or provide a tutorial session at the conference. All who present their work at the conference will attend in person. All those providing a tutorial session at the conference are invited to join the club. All who attend the conference in person are provided with souvenirs. All invited to join the club are provided with delicious meals. All provided with delicious meals are happy to communicate with each other during the dinner. All provided with delicious meals are invited to take a photo with the audience. James does not attend the conference in person and is not provided with souvenirs.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James is provided with souvenirs.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPresent(x) ::: x presents their work at the conference.\nTutorial(x) ::: x provides a tutorial session at the conference.\nAttend(x) ::: x attends the conference in person.\nSouvenir(x) ::: x is provided with souvenirs.\nClub(x) ::: x is invited to join the club.\nDelicious(x) ::: x is provided with delicious meals.\nHappy(x) ::: x is happy to communicate with each other during the dinner.\nPhoto(x) ::: x is invited to take a photo with the audience.\nPremises:\nPresent(james) ⊕ Tutorial(james) ::: Either present their work at the conference or provide a tutorial session at the conference.\n∀x (Present(x) → Attend(x)) ::: All who present their work at the conference will attend in person.\n∀x (Tutorial(x) → Club(x)) ::: All those providing a tutorial session at the conference are invited to join the club.\n∀x (Attend(x) → Souvenir(x)) ::"
    ]
  },
  {
    "id": "FOLIO_train_977",
    "context": "Either present their work at the conference or provide a tutorial session at the conference. All who present their work at the conference will attend in person. All those providing a tutorial session at the conference are invited to join the club. All who attend the conference in person are provided with souvenirs. All invited to join the club are provided with delicious meals. All provided with delicious meals are happy to communicate with each other during the dinner. All provided with delicious meals are invited to take a photo with the audience. James does not attend the conference in person and is not provided with souvenirs.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James is not provided with souvenirs.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPresent(x) ::: x presents their work at the conference.\nTutorial(x) ::: x provides a tutorial session at the conference.\nAttend(x) ::: x attends the conference in person.\nSouvenir(x) ::: x is provided with souvenirs.\nClub(x) ::: x is invited to join the club.\nDelicious(x) ::: x is provided with delicious meals.\nHappy(x) ::: x is happy to communicate with each other during the dinner.\nPhoto(x) ::: x is invited to take a photo with the audience.\nPremises:\nPresent(james) ⊕ Tutorial(james) ::: Either present their work at the conference or provide a tutorial session at the conference.\n∀x (Present(x) → Attend(x)) ::: All who present their work at the conference will attend in person.\n∀x (Tutorial(x) → Club(x)) ::: All those providing a tutorial session at the conference are invited to join the club.\n∀x (Attend(x) → Souvenir(x)) ::"
    ]
  },
  {
    "id": "FOLIO_train_978",
    "context": "Either present their work at the conference or provide a tutorial session at the conference. All who present their work at the conference will attend in person. All those providing a tutorial session at the conference are invited to join the club. All who attend the conference in person are provided with souvenirs. All invited to join the club are provided with delicious meals. All provided with delicious meals are happy to communicate with each other during the dinner. All provided with delicious meals are invited to take a photo with the audience. James does not attend the conference in person and is not provided with souvenirs.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James is invited to take a photo with the audience and is happy to communicate with each other at the dinner.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPresent(x) ::: x presents their work at the conference.\nTutorial(x) ::: x provides a tutorial session at the conference.\nAttend(x) ::: x attends the conference in person.\nSouvenir(x) ::: x is provided with souvenirs.\nDeliciousMeal(x) ::: x is provided with delicious meals.\nHappy(x) ::: x is happy to communicate with each other during the dinner.\nPhoto(x) ::: x is invited to take a photo with the audience.\nPremises:\nPresent(james) ⊕ Tutorial(james) ::: Either present their work at the conference or provide a tutorial session at the conference.\n∀x (Present(x) → Attend(x)) ::: All who present their work at the conference will attend in person.\n∀x (Tutorial(x) → Invite(x)) ::: All those providing a tutorial session at the conference are invited to join the club.\n∀x (Attend(x) → Souvenir(x)) ::: All who attend the conference in person are provided with souven"
    ]
  },
  {
    "id": "FOLIO_train_979",
    "context": "Either present their work at the conference or provide a tutorial session at the conference. All who present their work at the conference will attend in person. All those providing a tutorial session at the conference are invited to join the club. All who attend the conference in person are provided with souvenirs. All invited to join the club are provided with delicious meals. All provided with delicious meals are happy to communicate with each other during the dinner. All provided with delicious meals are invited to take a photo with the audience. James does not attend the conference in person and is not provided with souvenirs.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James is invited to take a photo with the audience or is happy to communicate with each other during the dinner.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPresent(x) ::: x presents their work at the conference.\nTutorial(x) ::: x provides a tutorial session at the conference.\nAttend(x) ::: x attends the conference in person.\nSouvenir(x) ::: x is provided with souvenirs.\nClub(x) ::: x is invited to join the club.\nDelicious(x) ::: x is provided with delicious meals.\nHappy(x) ::: x is happy to communicate with each other during the dinner.\nPhoto(x) ::: x is invited to take a photo with the audience.\nPremises:\nPresent(james) ⊕ Tutorial(james) ::: Either present their work at the conference or provide a tutorial session at the conference.\nPresent(x) → Attend(x) ::: All who present their work at the conference will attend in person.\nTutorial(x) → Club(x) ::: All those providing a tutorial session at the conference are invited to join the club.\nAttend(x) → Souvenir(x) ::: All who attend the conference in person are provided with souvenirs."
    ]
  },
  {
    "id": "FOLIO_train_980",
    "context": "Either present their work at the conference or provide a tutorial session at the conference. All who present their work at the conference will attend in person. All those providing a tutorial session at the conference are invited to join the club. All who attend the conference in person are provided with souvenirs. All invited to join the club are provided with delicious meals. All provided with delicious meals are happy to communicate with each other during the dinner. All provided with delicious meals are invited to take a photo with the audience. James does not attend the conference in person and is not provided with souvenirs.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? James is either invited to take a photo with the audience or happy to communicate with each other during the dinner.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nPresent(x) ::: x presents their work at the conference.\nTutorial(x) ::: x provides a tutorial session at the conference.\nAttend(x) ::: x attends the conference in person.\nSouvenir(x) ::: x is provided with souvenirs.\nClub(x) ::: x is invited to join the club.\nDelicious(x) ::: x is provided with delicious meals.\nHappy(x) ::: x is happy to communicate with each other during the dinner.\nPhoto(x) ::: x is invited to take a photo with the audience.\nPremises:\nPresent(james) ⊕ Tutorial(james) ::: Either present their work at the conference or provide a tutorial session at the conference.\n∀x (Present(x) → Attend(x)) ::: All who present their work at the conference will attend in person.\n∀x (Tutorial(x) → Club(x)) ::: All those providing a tutorial session at the conference are invited to join the club.\n∀x (Attend(x) → Souvenir(x)) ::: All who attend the conference in person are provided with souvenirs.\n∀x (Club(x) → Delicious(x)) ::: All invited to join the club are provided with delicious meals.\n∀x (Delicious(x) → Happy(x)) ::: All provided with delicious meals are happy to communicate with each other during the dinner.\n∀x (Delicious(x) → Photo(x)) ::: All provided with delicious meals are invited to take a photo with the audience.\n¬(Attend(james) ∧ Souvenir(james)) ::: James does not attend the conference in person and is not provided with souvenirs.\nConclusion:\nHappy(james) ⊕ Photo(james) ::: James is either invited to take a photo with the audience or happy to communicate with each other during the dinner.\n------"
    ]
  },
  {
    "id": "FOLIO_train_981",
    "context": "The USS Salem is a heavy cruiser built for the United States navy. The last heavy cruiser to enter service was the USS Salem. The USS Salem is a museum ship. Museum ships are open to the public. The USS Salem served in the Atlantic and Mediterranean.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The USS Salem is open to the public.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nUSS(x) ::: x is a ship of the United States navy.\nHeavyCruiser(x) ::: x is a heavy cruiser.\nLast(x, y) ::: x is the last y.\nMuseumShip(x) ::: x is a museum ship.\nOpen(x) ::: x is open to the public.\nServe(x, y) ::: x serves in y.\nAtlantic(y) ::: y is the Atlantic.\nMediterranean(y) ::: y is the Mediterranean.\nPremises:\nUSS(salem) ∧ HeavyCruiser(salem) ∧ Last(heavyCruiser, salem) ∧ MuseumShip(salem) ∧ Open(salem) ::: The USS Salem is a heavy cruiser built for the United States navy. The last heavy cruiser to enter service was the USS Salem. The USS Salem is a museum ship. Museum ships are open to the public.\nServe(salem, atlantic) ∧ Serve(salem, mediterranean) ::: The USS Salem served in the Atlantic and Mediterranean.\nConclusion:\nOpen(salem) ::: The USS Salem is open to the public.\n------\nProblem:\nThe USS Salem is a heavy cruiser built for the United States navy. The last heavy cruiser to enter service was the USS Salem. The USS Salem is a museum ship. Museum ships are open to the public. The USS Salem served in the Atlantic and Mediterranean.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The USS Salem is open to the public.\n###\nPredicates:\nUSS(x) ::: x is a ship of the United States navy.\nHeavyCruiser(x) ::: x is a heavy cruiser.\nLast(x, y) ::: x is the last y.\nMuseumShip(x) ::: x is a museum ship"
    ]
  },
  {
    "id": "FOLIO_train_982",
    "context": "The USS Salem is a heavy cruiser built for the United States navy. The last heavy cruiser to enter service was the USS Salem. The USS Salem is a museum ship. Museum ships are open to the public. The USS Salem served in the Atlantic and Mediterranean.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There is a museum ship open to the public that served in the Mediterranean.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nUSS(x) ::: x is a ship of the United States navy.\nHeavyCruiser(x) ::: x is a heavy cruiser.\nLast(x, y) ::: x is the last y.\nMuseumShip(x) ::: x is a museum ship.\nOpenToPublic(x) ::: x is open to the public.\nServe(x, y) ::: x serves in y.\nPremises:\nUSS(salem) ∧ HeavyCruiser(salem) ∧ Last(heavyCruiser, salem) ∧ MuseumShip(salem) ∧ OpenToPublic(salem) ∧ Serve(salem, atlantic) ∧ Serve(salem, mediterranean) ::: The USS Salem is a heavy cruiser built for the United States navy. The last heavy cruiser to enter service was the USS Salem. The USS Salem is a museum ship. Museum ships are open to the public. The USS Salem served in the Atlantic and Mediterranean.\nConclusion:\n∃x (MuseumShip(x) ∧ OpenToPublic(x) ∧ Serve(x, mediterranean)) ::: There is a museum ship open to the public that served in the Mediterranean.\n------\nProblem:\nThe USS Salem is a heavy cruiser built for the United States navy. The last heavy cruiser to enter service was the USS Salem. The USS Salem is a museum ship. Museum ships are open to the public. The USS Salem served in the Atlantic and Mediterranean.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? There is a museum ship open to the public that served in the Atlantic.\n###\nPredicates:\nUSS(x) ::: x is a ship of the United States navy.\nHeavyCruiser(x) ::: x is a heavy cruiser.\nLast(x, y) ::: x is the last y"
    ]
  },
  {
    "id": "FOLIO_train_983",
    "context": "The USS Salem is a heavy cruiser built for the United States navy. The last heavy cruiser to enter service was the USS Salem. The USS Salem is a museum ship. Museum ships are open to the public. The USS Salem served in the Atlantic and Mediterranean.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? The USS Salem was not the last heavy cruiser to enter service.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nUSS(x) ::: x is a ship of the United States navy.\nHeavyCruiser(x) ::: x is a heavy cruiser.\nLast(x, y) ::: x is the last y.\nMuseumShip(x) ::: x is a museum ship.\nOpen(x) ::: x is open to the public.\nServe(x, y) ::: x serves in y.\nPremises:\nUSS(salem) ∧ HeavyCruiser(salem) ∧ Last(salem, heavyCruiser) ::: The USS Salem is a heavy cruiser built for the United States navy.\nUSS(salem) ∧ MuseumShip(salem) ∧ Open(salem) ::: The USS Salem is a museum ship.\nMuseumShip(salem) ∧ Open(salem) ∧ Serve(salem, atlantic) ∧ Serve(salem, mediterranean) ::: Museum ships are open to the public.\nConclusion:\n¬Last(salem, heavyCruiser) ::: The USS Salem was not the last heavy cruiser to enter service.\n------\nProblem:\nThe USS Salem is a heavy cruiser built for the United States navy. The last heavy cruiser to enter service was the USS Salem. The USS Salem is a museum ship. Museum ships are open to the public. The USS Salem served in the Atlantic and Mediterranean.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? The USS Salem was not the last heavy cruiser to enter service.\n###\nPredicates:\nUSS(x) ::: x is a ship of the United States navy.\nHeavyCruiser(x) ::: x is a heavy cruiser.\nLast(x, y) ::: x is the last y.\nMuseumShip(x) ::: x is a museum ship.\nOpen(x) ::: x is"
    ]
  },
  {
    "id": "FOLIO_train_984",
    "context": "TS Leda was a good passenger and cargo vessel. TS Leda was the first Norweigian vessel that was built with stabilizers. Stabilizers are mechanical devices that are only on ships that have powerful steam turbine engines. To be a good passenger and cargo vessel, ships must be quiet and good at sea. Some ships that are quiet and good at sea have powerful steam turbine engines.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? TS Leda was quiet and good at sea.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGoodPassengerAndCargoVessel(x) ::: x is a good passenger and cargo vessel.\nQuiet(x) ::: x is quiet.\nGoodAtSea(x) ::: x is good at sea.\nPowerfulSteamTurbineEngine(x) ::: x has a powerful steam turbine engine.\nStabilizer(x) ::: x is a stabilizer.\nBuiltWith(x, y) ::: x is built with y.\nPremises:\nGoodPassengerAndCargoVessel(tsLeda) ∧ BuiltWith(tsLeda, stabilizer) ∧ BuiltWith(tsLeda, powerfulSteamTurbineEngine) ::: TS Leda was a good passenger and cargo vessel.\n∀x (BuiltWith(x, stabilizer) → PowerfulSteamTurbineEngine(x)) ::: Stabilizers are mechanical devices that are only on ships that have powerful steam turbine engines.\n∀x (GoodPassengerAndCargoVessel(x) → (Quiet(x) ∧ GoodAtSea(x))) ::: To be a good passenger and cargo vessel, ships must be quiet and good at sea.\n∃x (Quiet(x) ∧ GoodAtSea(x) ∧ PowerfulSteamTurbineEngine(x)) ::: Some ships that are quiet and good at sea have powerful steam turbine engines.\nConclusion:\nQuiet(tsLeda) ∧ GoodAtSea(tsLeda) ::: TS Leda was quiet and good at sea.\n------\nProblem:\nThe first person to win the Nobel Prize in Physics was Wilhelm Conrad Röntgen. Wilhelm Conrad Röntgen was a German physicist who discovered X-rays. X-rays are a form of electromagnetic radiation. Electromagnetic radiation is a form of energy that travels in waves.\nQuestion:\nBased on the above information, is the following statement"
    ]
  },
  {
    "id": "FOLIO_train_985",
    "context": "TS Leda was a good passenger and cargo vessel. TS Leda was the first Norweigian vessel that was built with stabilizers. Stabilizers are mechanical devices that are only on ships that have powerful steam turbine engines. To be a good passenger and cargo vessel, ships must be quiet and good at sea. Some ships that are quiet and good at sea have powerful steam turbine engines.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? TS Leda had powerful steam turbine engines.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGoodPassengerAndCargoVessel(x) ::: x is a good passenger and cargo vessel.\nQuiet(x) ::: x is quiet.\nGoodAtSea(x) ::: x is good at sea.\nPowerfulSteamTurbineEngines(x) ::: x has powerful steam turbine engines.\nStabilizers(x) ::: x has stabilizers.\nFirst(x, y) ::: x is the first y.\nPremises:\nGoodPassengerAndCargoVessel(tsLeda) ∧ First(tsLeda, norweigianVessel) ::: TS Leda was a good passenger and cargo vessel.\nFirst(tsLeda, norweigianVessel) ∧ Stabilizers(tsLeda) ∧ PowerfulSteamTurbineEngines(tsLeda) ::: TS Leda was the first Norweigian vessel that was built with stabilizers.\n∀x (Stabilizers(x) → PowerfulSteamTurbineEngines(x)) ::: Stabilizers are mechanical devices that are only on ships that have powerful steam turbine engines.\n∀x (GoodPassengerAndCargoVessel(x) → (Quiet(x) ∧ GoodAtSea(x))) ::: To be a good passenger and cargo vessel, ships must be quiet and good at sea.\n∃x (Quiet(x) ∧ GoodAtSea(x) ∧ PowerfulSteamTurbineEngines(x)) ::: Some ships that are quiet and good at sea have powerful steam turbine engines.\nConclusion:\nPowerfulSteamTurbineEngines(tsLeda) ::: TS Leda had powerful steam turbine engines.\n------\nProblem:\nThe first person to win the Nobel Prize in Physics was Wilhelm Conrad Röntgen. Wilhelm Conrad Röntgen was a German physicist who discovered X-r"
    ]
  },
  {
    "id": "FOLIO_train_986",
    "context": "TS Leda was a good passenger and cargo vessel. TS Leda was the first Norweigian vessel that was built with stabilizers. Stabilizers are mechanical devices that are only on ships that have powerful steam turbine engines. To be a good passenger and cargo vessel, ships must be quiet and good at sea. Some ships that are quiet and good at sea have powerful steam turbine engines.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? TS Leda was not a Norweigian vessel.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGoodPassengerAndCargoVessel(x) ::: x is a good passenger and cargo vessel.\nNorweigianVessel(x) ::: x is a Norweigian vessel.\nStabilizer(x) ::: x is a stabilizer.\nMechanicalDevice(x) ::: x is a mechanical device.\nPowerfulSteamTurbineEngine(x) ::: x is a powerful steam turbine engine.\nQuiet(x) ::: x is quiet.\nGoodAtSea(x) ::: x is good at sea.\nPremises:\nGoodPassengerAndCargoVessel(tsLeda) ∧ NorweigianVessel(tsLeda) ∧ Stabilizer(tsLeda) ::: TS Leda was a good passenger and cargo vessel.\n∀x (Stabilizer(x) → MechanicalDevice(x)) ::: Stabilizers are mechanical devices.\n∀x (MechanicalDevice(x) ∧ PowerfulSteamTurbineEngine(x)) ::: Mechanical devices that have powerful steam turbine engines.\n∀x (GoodPassengerAndCargoVessel(x) → (Quiet(x) ∧ GoodAtSea(x))) ::: To be a good passenger and cargo vessel, ships must be quiet and good at sea.\n∃x (Quiet(x) ∧ GoodAtSea(x) ∧ PowerfulSteamTurbineEngine(x)) ::: Some ships that are quiet and good at sea have powerful steam turbine engines.\nConclusion:\n¬NorweigianVessel(tsLeda) ::: TS Leda was not a Norweigian vessel.\n------\nProblem:\nThe first person to win the Nobel Prize in Physics was Wilhelm Conrad Röntgen. Wilhelm Conrad Röntgen was a German physicist. The first person to win the Nobel Prize in Phys"
    ]
  },
  {
    "id": "FOLIO_train_987",
    "context": "Rosa was born in Santiago. Santiago is the capital and largest city of Chile. Rosa is the daughter of a Catalan building contractor, Jose. Jose has a Chilean wife, Carmen. A building contractor is responsible for the day-to-day oversight of a construction site.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Rosa was born in the largest city of Chile.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBorn(x, y) ::: x was born in y.\nCapital(x) ::: x is the capital of y.\nCity(x) ::: x is a city.\nDaughter(x, y) ::: x is the daughter of y.\nBuildingContractor(x) ::: x is a building contractor.\nResponsible(x, y) ::: x is responsible for the day-to-day oversight of y.\nChilean(x) ::: x is a Chilean person.\nWife(x, y) ::: x is the wife of y.\nPremises:\nBorn(rosa, santiago) ∧ Capital(santiago, chile) ::: Rosa was born in Santiago.\nDaughter(rosa, jose) ∧ BuildingContractor(jose) ::: Rosa is the daughter of a Catalan building contractor, Jose.\nWife(carmen, jose) ∧ Chilean(carmen) ::: Jose has a Chilean wife, Carmen.\nResponsible(jose, constructionSite) ::: A building contractor is responsible for the day-to-day oversight of a construction site.\nConclusion:\nBorn(rosa, largestCityOfChile) ::: Rosa was born in the largest city of Chile.\n------\nProblem:\nA person is a student if and only if the person is enrolled in a course. A person is enrolled in a course if and only if the person is taking the course. A person is taking a course if and only if the person is registered for the course. A person is registered for a course if and only if the person is enrolled in the course.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? A person is a student if and only if the person is registered for a course.\n###\nPredicates:\nStudent(x) ::: x is a student.\nEnrolled(x, y) ::: x is enrolled"
    ]
  },
  {
    "id": "FOLIO_train_988",
    "context": "Rosa was born in Santiago. Santiago is the capital and largest city of Chile. Rosa is the daughter of a Catalan building contractor, Jose. Jose has a Chilean wife, Carmen. A building contractor is responsible for the day-to-day oversight of a construction site.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Neither of Rosa's parents is Chilean.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBorn(x, y) ::: x was born in y.\nCapital(x) ::: x is the capital of y.\nLargestCity(x) ::: x is the largest city of y.\nDaughter(x, y) ::: x is the daughter of y.\nResponsible(x, y) ::: x is responsible for y.\nBuildingContractor(x) ::: x is a building contractor.\nChilean(x) ::: x is a Chilean person.\nWife(x, y) ::: x is the wife of y.\nPremises:\nBorn(rosa, santiago) ∧ Capital(santiago, chile) ∧ LargestCity(santiago, chile) ::: Rosa was born in Santiago.\nDaughter(rosa, jose) ∧ BuildingContractor(jose) ::: Rosa is the daughter of a Catalan building contractor, Jose.\nWife(carmen, jose) ∧ Chilean(carmen) ::: Jose has a Chilean wife, Carmen.\nResponsible(jose, constructionSite) ::: A building contractor is responsible for the day-to-day oversight of a construction site.\nConclusion:\n¬∃x (Chilean(x) ∧ Daughter(x, jose)) ::: Neither of Rosa's parents is Chilean.\n------\nProblem:\nA person is a student if and only if the person is enrolled in a course. A person is enrolled in a course if and only if the person is taking the course. A person is taking a course if and only if the person is registered for the course. A person is registered for a course if and only if the person is enrolled in the course.\nQuestion:\nBased on the above information, is the following statement true, false, or uncertain? A person is a student if and only if the person is registered for a course.\n###\nPredicates:"
    ]
  },
  {
    "id": "FOLIO_train_989",
    "context": "Rosa was born in Santiago. Santiago is the capital and largest city of Chile. Rosa is the daughter of a Catalan building contractor, Jose. Jose has a Chilean wife, Carmen. A building contractor is responsible for the day-to-day oversight of a construction site.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Rosa is the daughter of someone who is responsible for the oversight of traffic.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nBorn(x, y) ::: x was born in y.\nCapital(x) ::: x is the capital of y.\nDaughter(x, y) ::: x is the daughter of y.\nBuildingContractor(x) ::: x is a building contractor.\nResponsible(x, y) ::: x is responsible for the oversight of y.\nChilean(x) ::: x is a Chilean person.\nCatalan(x) ::: x is a Catalan person.\nPremises:\nBorn(rosa, santiago) ∧ Capital(santiago, chile) ::: Rosa was born in Santiago.\nDaughter(rosa, jose) ∧ Catalan(jose) ::: Rosa is the daughter of a Catalan building contractor, Jose.\nJose ∧ Chilean(jose) ∧ Carmen ::: Jose has a Chilean wife, Carmen.\nBuildingContractor(jose) ∧ Responsible(jose, traffic) ::: A building contractor is responsible for the day-to-day oversight of a construction site.\nConclusion:\nResponsible(jose, traffic) ::: Rosa is the daughter of someone who is responsible for the oversight of traffic.\n------\nProblem:\nA person who is a member of the Communist Party of China is a member of the Chinese Communist Party. A member of the Chinese Communist Party is a member of the Communist Party of China. A member of the Communist Party of China is a member of the Chinese Communist Party. A member of the Communist Party of China is a member of the Chinese Communist Party. A member of the Communist Party of China is a member of the Chinese Communist Party. A member of the Communist Party of China is a member of the Chinese Communist Party. A member of the Communist Party of China is a member of the Chinese Communist Party. A member of the Communist Party of China is a member of the Chinese Communist Party. A member of the Communist Party of China is a member of the"
    ]
  },
  {
    "id": "FOLIO_train_990",
    "context": "Tyga is a rapper. Rappers release rap albums. Tyga released the Well Done 3 album. Rappers are not opera singers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Well Done 3 is a rap album.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRapper(x) ::: x is a rapper.\nRapAlbum(x) ::: x is a rap album.\nRelease(x, y) ::: x released y.\nOperaSinger(x) ::: x is an opera singer.\nPremises:\nRapper(tyga) ∧ Release(tyga, wellDone3) ::: Tyga is a rapper. Tyga released the Well Done 3 album.\n∀x (Rapper(x) → Release(x, rapAlbum)) ::: Rappers release rap albums.\n∀x (Release(x, rapAlbum) → ¬OperaSinger(x)) ::: Rappers are not opera singers.\nConclusion:\nRapAlbum(wellDone3) ::: Well Done 3 is a rap album.\n------"
    ]
  },
  {
    "id": "FOLIO_train_991",
    "context": "Tyga is a rapper. Rappers release rap albums. Tyga released the Well Done 3 album. Rappers are not opera singers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Tyga is an opera singer.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRapper(x) ::: x is a rapper.\nRelease(x, y) ::: x releases y.\nRapAlbum(x) ::: x is a rap album.\nOperaSinger(x) ::: x is an opera singer.\nPremises:\nRapper(tyga) ∧ Release(tyga, wellDone3) ::: Tyga is a rapper. Tyga released the Well Done 3 album.\n∀x (Rapper(x) → Release(x, rapAlbum)) ::: Rappers release rap albums.\n∀x (Release(x, rapAlbum) → ¬OperaSinger(x)) ::: Rappers are not opera singers.\nConclusion:\nOperaSinger(tyga) ::: Tyga is an opera singer.\n------\nProblem:"
    ]
  },
  {
    "id": "FOLIO_train_992",
    "context": "Tyga is a rapper. Rappers release rap albums. Tyga released the Well Done 3 album. Rappers are not opera singers.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Well Done 3 is worth listening.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nRapper(x) ::: x is a rapper.\nRapAlbum(x) ::: x is a rap album.\nRelease(x, y) ::: x released y.\nOperaSinger(x) ::: x is an opera singer.\nWorth(x, y) ::: x is worth listening to y.\nPremises:\nRapper(tyga) ∧ Release(tyga, wellDone3) ::: Tyga is a rapper. Tyga released the Well Done 3 album.\n∀x (Rapper(x) → ¬OperaSinger(x)) ::: Rappers are not opera singers.\n∀x (Rapper(x) → ∃y (RapAlbum(y) ∧ Release(x, y))) ::: Rappers release rap"
    ]
  },
  {
    "id": "FOLIO_train_993",
    "context": "Deborah Wallace is a Scottish born actress, playwright and producer. Psyche is a play based on the life of James Miranda Barry. Homesick, Psyche and The Void are plays from Deborah Wallace. Deborah Wallace co-produced Gasland.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Gasland was coproduced by the same person Homesick is from.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nScottish(x) ::: x is a Scottish person.\nActress(x) ::: x is an actress.\nPlaywright(x) ::: x is a playwright.\nProducer(x) ::: x is a producer.\nPlay(x) ::: x is a play.\nCoproduce(x, y) ::: x coproduced y.\nFrom(x, y) ::: x is from y.\nPremises:\nScottish(deborah) ∧ Actress(deborah) ∧ Playwright(deborah) ∧ Producer(deborah) ::: Deborah Wallace is a Scottish born actress, playwright and producer.\nPlay(psyche) ∧ From(deborah, psyche) ::: Psyche is a play based on the life of James Miranda Barry"
    ]
  },
  {
    "id": "FOLIO_train_994",
    "context": "Deborah Wallace is a Scottish born actress, playwright and producer. Psyche is a play based on the life of James Miranda Barry. Homesick, Psyche and The Void are plays from Deborah Wallace. Deborah Wallace co-produced Gasland.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? There isn't a play from Deborah Wallace that is based on the life of James Miranda Barry.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nScottish(x) ::: x is a Scottish person.\nActress(x) ::: x is an actress.\nPlaywright(x) ::: x is a playwright.\nProducer(x) ::: x is a producer.\nPlay(x) ::: x is a play.\nBasedOn(x, y) ::: x is based on y.\nFrom(x, y) ::: x is from y.\nCoProduce(x, y) ::: x co-produced y.\nPremises:\nScottish(deborah) ∧ Actress(deborah) ∧ Playwright(deborah) ∧ Producer(deborah) ::: Deborah Wallace is a Scottish born actress, playwright and producer.\nPlay(psyche) ∧ BasedOn(psyche, james"
    ]
  },
  {
    "id": "FOLIO_train_995",
    "context": "Deborah Wallace is a Scottish born actress, playwright and producer. Psyche is a play based on the life of James Miranda Barry. Homesick, Psyche and The Void are plays from Deborah Wallace. Deborah Wallace co-produced Gasland.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Gasland is a play.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nScottish(x) ::: x is a Scottish person.\nActress(x) ::: x is an actress.\nPlaywright(x) ::: x is a playwright.\nProducer(x) ::: x is a producer.\nPlay(x) ::: x is a play.\nBasedOn(x, y) ::: x is based on y.\nCoProduce(x, y) ::: x co-produced y.\nPremises:\nScottish(deborah) ∧ Actress(deborah) ∧ Playwright(deborah) ∧ Producer(deborah) ::: Deborah Wallace is a Scottish born actress, playwright and producer.\nPlay(psyche) ∧ BasedOn(psyche, jamesMirandaBarry) ::: Psyche is a play based on"
    ]
  },
  {
    "id": "FOLIO_train_996",
    "context": "If an animal needs a large territory, then it travels far. Everything that eats a lot needs a large territory. If something is a big animal, then it will eat a lot. All bears are big animals. Larry is a big animal.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Larry is a bear.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAnimal(x) ::: x is an animal.\nBear(x) ::: x is a bear.\nTravel(x) ::: x travels far.\nEat(x) ::: x eats a lot.\nNeed(x, y) ::: x needs y.\nBig(x) ::: x is a big animal.\nPremises:\n∀x (Animal(x) → (Need(x, largeTerritory) → Travel(x))) ::: If an animal needs a large territory, then it travels far.\n∀x (Eat(x) → Need(x, largeTerritory)) ::: Everything that eats a lot needs a large territory.\n∀x (Big(x) → Eat(x)) ::: If something is a big animal, then it will eat a lot.\nBear(larry"
    ]
  },
  {
    "id": "FOLIO_train_997",
    "context": "If an animal needs a large territory, then it travels far. Everything that eats a lot needs a large territory. If something is a big animal, then it will eat a lot. All bears are big animals. Larry is a big animal.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Larry is neither a bear nor travels far.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAnimal(x) ::: x is an animal.\nBear(x) ::: x is a bear.\nTravelsFar(x) ::: x travels far.\nNeeds(x, y) ::: x needs y.\nEats(x, y) ::: x eats y.\nBig(x) ::: x is a big animal.\nPremises:\n∀x (Needs(x, largeTerritory) → TravelsFar(x)) ::: If an animal needs a large territory, then it travels far.\n∀x (Eats(x, aLot) → Needs(x, largeTerritory)) ::: Everything that eats a lot needs a large territory.\n∀x (Big(x) → Eats(x, aLot)) ::: If something is a big animal, then"
    ]
  },
  {
    "id": "FOLIO_train_998",
    "context": "If an animal needs a large territory, then it travels far. Everything that eats a lot needs a large territory. If something is a big animal, then it will eat a lot. All bears are big animals. Larry is a big animal.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Larry either travels far or needs a large territory, then Larry is a bear.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nAnimal(x) ::: x is an animal.\nTravels(x) ::: x travels far.\nNeeds(x, y) ::: x needs a territory of size y.\nEats(x) ::: x eats a lot.\nBig(x) ::: x is a big animal.\nBear(x) ::: x is a bear.\nPremises:\n∀x (Needs(x, large) → Travels(x)) ::: If an animal needs a large territory, then it travels far.\n∀x (Eats(x) → Needs(x, large)) ::: Everything that eats a lot needs a large territory.\n∀x (Big(x) → Eats(x)) ::: If something is a big animal, then it will eat a lot.\n∀x (Bear("
    ]
  },
  {
    "id": "FOLIO_train_999",
    "context": "No criminal is kind. All person who breaks the law is a criminals. People are either kind or evil. If someone is evil, then they are ugly. If someone is evil, then they are cold-blood. If Garry is either evil and ugly or neither evil nor ugly, then Garry is not evil.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Garry is ugly.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCriminal(x) ::: x is a criminal.\nKind(x) ::: x is kind.\nEvil(x) ::: x is evil.\nUgly(x) ::: x is ugly.\nColdBlood(x) ::: x is cold-blood.\nBreaks(x) ::: x breaks the law.\nPremises:\n∀x (Criminal(x) → Breaks(x)) ::: All person who breaks the law is a criminals.\n∀x (Kind(x) ∨ Evil(x)) ::: People are either kind or evil.\n∀x (Evil(x) → Ugly(x)) ::: If someone is evil, then they are ugly.\n∀x (Evil(x) → ColdBlood(x)) ::: If someone is evil,"
    ]
  },
  {
    "id": "FOLIO_train_1000",
    "context": "No criminal is kind. All person who breaks the law is a criminals. People are either kind or evil. If someone is evil, then they are ugly. If someone is evil, then they are cold-blood. If Garry is either evil and ugly or neither evil nor ugly, then Garry is not evil.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Garry is cold-blooded and breaks the law.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCriminal(x) ::: x is a criminal.\nKind(x) ::: x is kind.\nEvil(x) ::: x is evil.\nUgly(x) ::: x is ugly.\nColdBlood(x) ::: x is cold-blood.\nBreaks(x) ::: x breaks the law.\nPremises:\n∀x (Criminal(x) → Breaks(x)) ::: All person who breaks the law is a criminals.\n∀x (Kind(x) ∨ Evil(x)) ::: People are either kind or evil.\n∀x (Evil(x) → Ugly(x)) ::: If someone is evil, then they are ugly.\n∀x (Evil(x) → ColdBlood(x)) ::: If someone is evil, then they are cold-blood.\n∀x (Evil(x) ⊕ Ugly(x)) ::: If Garry is either evil and ugly or neither evil nor ugly, then Garry is not evil.\nConclusion:\nColdBlood(garry) ∧ Breaks(garry) ::: Garry is cold-blooded and breaks the law.\n------"
    ]
  },
  {
    "id": "FOLIO_train_1001",
    "context": "No criminal is kind. All person who breaks the law is a criminals. People are either kind or evil. If someone is evil, then they are ugly. If someone is evil, then they are cold-blood. If Garry is either evil and ugly or neither evil nor ugly, then Garry is not evil.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? If Garry is evil or breaks the law, then Garry is not both a criminal and breaking the law.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nCriminal(x) ::: x is a criminal.\nBreaks(x) ::: x breaks the law.\nKind(x) ::: x is kind.\nEvil(x) ::: x is evil.\nUgly(x) ::: x is ugly.\nColdBlood(x) ::: x is cold-blood.\nPremises:\n∀x (Criminal(x) → Breaks(x)) ::: All person who breaks the law is a criminals.\n∀x (Kind(x) ∨ Evil(x)) ::: People are either kind or evil.\n∀x (Evil(x) → Ugly(x)) ::: If someone is evil, then they are ugly.\n∀x (Evil(x) → ColdBlood(x)) ::: If someone is evil, then they are cold-blood.\n∀x (Criminal(x) → Evil(x)) ::: No criminal is kind.\n∀x (Evil(x) → ¬Kind(x)) ::: If someone is evil, then they are not kind.\n∀x (Evil(x) → ¬Ugly(x)) ::: If someone is evil,"
    ]
  },
  {
    "id": "FOLIO_train_1002",
    "context": "Phoneix's music is classified under the indie pop genre. Phoenix is a band from France. French bands write songs in French or in English. Aside from indie pop, pop rock and synth-pop are two other genres of music. Phoneix has no songs in French.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Phoenix makes pop rock music.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGenre(x) ::: x is a genre of music.\nBand(x) ::: x is a band.\nWrite(x, y) ::: x writes songs in language y.\nSong(x) ::: x is a song.\nLanguage(x) ::: x is a language.\nClassify(x, y) ::: x is classified under genre y.\nPremises:\nGenre(indiePop) ∧ Genre(popRock) ∧ Genre(synthPop) ::: Pop rock and synth-pop are two other genres of music.\nBand(phoenix) ∧ French(phoenix) ::: Phoenix is a band from France.\n∀x (Band(x) → ∃y (Write(x, y))) ::: French bands write songs in French or in English.\n∀x (Classify(x, indiePop) → ¬∃y (Song(y) ∧ Language(y) ∧ Write(phoenix, y))) ::: Phoneix's music is classified under the indie pop genre.\nConclusion:\nClassify(phoenix, popRock) ::: Phoenix makes pop rock music.\n------\nProblem"
    ]
  },
  {
    "id": "FOLIO_train_1003",
    "context": "Phoneix's music is classified under the indie pop genre. Phoenix is a band from France. French bands write songs in French or in English. Aside from indie pop, pop rock and synth-pop are two other genres of music. Phoneix has no songs in French.",
    "question": "Based on the above information, is the following statement true, false, or uncertain? Phoenix has songs in French.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Uncertain"
    ],
    "raw_logic_programs": [
      "Predicates:\nGenre(x) ::: x is a genre of music.\nBand(x) ::: x is a band.\nWrite(x, y) ::: x writes songs in language y.\nSong(x) ::: x is a song.\nClassify(x, y) ::: x is classified under genre y.\nPremises:\nGenre(indiePop) ∧ Genre(popRock) ∧ Genre(synthPop) ::: Indie pop, pop rock, and synth-pop are three genres of music.\nBand(phoenix) ∧ Classify(phoenix, indiePop) ::: Phoenix is a band from France.\n∀x (Band(x) → ∃y (Write(x, y))) ::: All bands write songs.\n∀x (Band(x) → ∃y (Classify(x, y))) ::: All bands are classified under a genre of music.\n∀x (Classify(x, indiePop) → ¬∃y (Write(x, y) ∧ Language(y, french))) ::: Aside from indie pop, pop rock and synth-pop are two other genres of music"
    ]
  }
]